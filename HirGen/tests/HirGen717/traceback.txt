==========mod==========
#[version = "0.0.5"]
def @func_1615(%var_1546: Tensor[(8, 9, 15), float64]) -> (Tensor[(8, 9, 15), bool], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) {
  %0 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %1 = %0.0;
  %2 = cast(%var_1546, dtype="bool") /* ty=Tensor[(8, 9, 15), bool] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%1, dtype="bool") /* ty=Tensor[(8, 9, 15), bool] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %6 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %7 = cast(%1, dtype="float64") /* ty=Tensor[(8, 9, 15), float64] */;
  %8 = exp(%7) /* ty=Tensor[(8, 9, 15), float64] */;
  %9 = cast(%8, dtype="float64") /* ty=Tensor[(8, 9, 15), float64] */;
  %10 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %11 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %12 = greater_equal(%4, %5) /* ty=Tensor[(8, 9, 15), bool] */;
  %13 = %6.0;
  %14 = log(%9) /* ty=Tensor[(8, 9, 15), float64] */;
  %15 = %10.0;
  %16 = %11.0;
  (%12, %13, %14, %15, %16)
}

def @func_9196(%var_9116: Tensor[(384), float64]) -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(384), float64], Tensor[(546), uint64], Tensor[(8, 9, 15), bool], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %17 = cast(%var_9116, dtype="float64") /* ty=Tensor[(384), float64] */;
  %18 = cast(%var_9116, dtype="float64") /* ty=Tensor[(384), float64] */;
  %19 = reshape(%17, newshape=[16, 8, 3]) /* ty=Tensor[(16, 8, 3), float64] */;
  %20 = reshape(%18, newshape=[16, 8, 3]) /* ty=Tensor[(16, 8, 3), float64] */;
  %21 = @func_4284(%19, %20) /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16]) */;
  %22 = @func_7754() /* ty=(Tensor[(8, 9, 15), float32],) */;
  %23 = %22.0;
  %24 = @func_4521() /* ty=(Tensor[(3, 14, 13), int64], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) */;
  %25 = %24.2;
  %26 = cast(%25, dtype="bool") /* ty=Tensor[(8, 9, 15), bool] */;
  %27 = shape_of(%23, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(%23, dtype="bool") /* ty=Tensor[(8, 9, 15), bool] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %30 = @func_8310() /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %31 = @func_3854() /* ty=(Tensor[(546), uint64],) */;
  %32 = @func_4231() /* ty=Tensor[(546), uint64] */;
  %33 = %21.0;
  %34 = @func_4074() /* ty=Tensor[(546), uint64] */;
  %35 = less_equal(%28, %29) /* ty=Tensor[(8, 9, 15), bool] */;
  %36 = %30.2;
  %37 = %31.0;
  (%32, %33, %var_9116, %34, %35, %36, %37)
}

def @func_12726(%var_12671: Tensor[(3, 8, 13), float64], %var_12710: Tensor[(560), bool]) -> (Tensor[(3, 8, 13), float32], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(560), bool], Tensor[(546), uint64]) {
  %38 = cast(%var_12671, dtype="float64") /* ty=Tensor[(3, 8, 13), float64] */;
  %39 = sqrt(%38) /* ty=Tensor[(3, 8, 13), float64] */;
  %40 = cast(%39, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
  %41 = @func_11267() /* ty=(Tensor[(546), uint64],) */;
  %42 = cast(%var_12710, dtype="bool") /* ty=Tensor[(560), bool] */;
  %43 = reshape(%42, newshape=[560]) /* ty=Tensor[(560), bool] */;
  %44 = @func_8190(%43) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(10, 14, 4), bool], Tensor[(560), bool]) */;
  %45 = @func_5170() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %46 = cos(%40) /* ty=Tensor[(3, 8, 13), float32] */;
  %47 = %41.0;
  %48 = %44.1;
  %49 = %45.2;
  (%46, %47, %48, %var_12710, %49)
}

def @func_5617() -> (Tensor[(3, 14, 13), float64], Tensor[(3, 14, 13), uint64]) {
  %50 = @func_2667() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) */;
  %51 = @func_4025() /* ty=Tensor[(3, 14, 13), float64] */;
  %52 = %50.1;
  (%51, %52)
}

def @func_6920(%var_6868: Tensor[(15, 10, 5), uint32], %var_6869: Tensor[(15, 10, 5), uint32], %var_6898: Tensor[(192), int64], %var_6899: Tensor[(2, 768), int64]) -> (Tensor[(15, 10, 5), uint32], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(2, 768), int64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) {
  %53 = cast(%var_6869, dtype="uint32") /* ty=Tensor[(15, 10, 5), uint32] */;
  %54 = shape_of(%var_6868, dtype="int32") /* ty=Tensor[(3), int32] */;
  %55 = cast(%var_6868, dtype="uint32") /* ty=Tensor[(15, 10, 5), uint32] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %57 = @func_5474() /* ty=(Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) */;
  %58 = cast(%var_6898, dtype="int64") /* ty=Tensor[(192), int64] */;
  %59 = cast(%var_6899, dtype="int64") /* ty=Tensor[(2, 768), int64] */;
  %60 = reshape(%58, newshape=[16, 12, 1]) /* ty=Tensor[(16, 12, 1), int64] */;
  %61 = reshape(%59, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), int64] */;
  %62 = @func_3982() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
  %63 = bitwise_and(%55, %56) /* ty=Tensor[(15, 10, 5), uint32] */;
  %64 = %57.2;
  %65 = @func_3201() /* ty=Tensor[(2, 180), float32] */;
  %66 = @func_2913(%60, %61) /* ty=Tensor[(16, 12, 8), int64] */;
  %67 = @func_3315() /* ty=Tensor[(8, 9, 15), float64] */;
  %68 = %62.1;
  (%63, %64, %65, %66, %var_6898, %var_6899, %67, %68)
}

def @func_3109() -> (Tensor[(2, 180), uint16],) {
  %69 = @func_2521() /* ty=(Tensor[(546), uint64], Tensor[(546), float64], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32]) */;
  %70 = %69.3;
  %71 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 180), float32] */, dtype="uint16") /* ty=Tensor[(2, 180), uint16] */;
  %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(2), int32] */;
  %73 = cast(%70, dtype="uint16") /* ty=Tensor[(2, 180), uint16] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %75 = right_shift(%73, %74) /* ty=Tensor[(2, 180), uint16] */;
  (%75,)
}

def @func_17568() -> (Tensor[(546), uint64], Tensor[(546), uint64]) {
  %76 = @func_17286() /* ty=(Tensor[(546), uint64],) */;
  %77 = @func_2787() /* ty=Tensor[(546), uint64] */;
  %78 = %76.0;
  (%77, %78)
}

def @func_17855() -> Tensor[(84), float32] {
  %79 = @func_9542() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(84), float32]) */;
  %79.1
}

def @func_2913(%var_2906: Tensor[(16, 12, 1), int64], %var_2907: Tensor[(16, 12, 8), int64]) -> Tensor[(16, 12, 8), int64] {
  %80 = cast(%var_2906, dtype="int64") /* ty=Tensor[(16, 12, 1), int64] */;
  %81 = cast(%var_2907, dtype="int64") /* ty=Tensor[(16, 12, 8), int64] */;
  bitwise_or(%80, %81) /* ty=Tensor[(16, 12, 8), int64] */
}

def @func_8490() -> (Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), uint16], Tensor[(3, 14, 13), float64]) {
  %82 = @func_2871() /* ty=(Tensor[(84), float32],) */;
  %83 = @func_6247() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), uint16], Tensor[(546), uint64]) */;
  %84 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
  %85 = @func_2871() /* ty=(Tensor[(84), float32],) */;
  %86 = @func_3109() /* ty=(Tensor[(2, 180), uint16],) */;
  %87 = @func_6618() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(16, 8, 3), uint16], Tensor[(8, 9, 15), float32]) */;
  %88 = %82.0;
  %89 = %83.0;
  %90 = @func_3150() /* ty=Tensor[(8, 9, 15), float64] */;
  %91 = %84.2;
  %92 = %85.0;
  %93 = %86.0;
  %94 = %87.1;
  (%88, %89, %90, %91, %92, %93, %94)
}

def @func_4138() -> (Tensor[(546), uint64],) {
  %95 = @func_2739() /* ty=(Tensor[(84), float32], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32], Tensor[(546), uint64]) */;
  %96 = %95.6;
  (%96,)
}

def @func_9287() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) {
  %97 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
  %98 = %97.1;
  %99 = @func_4025() /* ty=Tensor[(3, 14, 13), float64] */;
  (%98, %99)
}

def @func_7000() -> (Tensor[(84), float32], Tensor[(16, 8, 3), uint16]) {
  %100 = @func_6517() /* ty=(Tensor[(16, 8, 3), uint16],) */;
  %101 = @func_2195() /* ty=Tensor[(84), float32] */;
  %102 = %100.0;
  (%101, %102)
}

def @func_9994(%var_9981: Tensor[(3, 14, 13), uint64]) -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), bool], Tensor[(546), uint64]) {
  %103 = @func_5104() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), bool]) */;
  %104 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
  %105 = cast(%var_9981, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %109 = @func_2667() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) */;
  %110 = %103.0;
  %111 = logical_or(%107, %108) /* ty=Tensor[(3, 14, 13), bool] */;
  %112 = %109.0;
  (%110, %111, %112)
}

def @func_11267() -> (Tensor[(546), uint64],) {
  %113 = @func_4074() /* ty=Tensor[(546), uint64] */;
  (%113,)
}

def @func_17359() -> (Tensor[(84), float32], Tensor[(8, 9, 15), float64]) {
  %114 = @func_4521() /* ty=(Tensor[(3, 14, 13), int64], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) */;
  %115 = @func_5329() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %116 = %114.1;
  %117 = %115.0;
  (%116, %117)
}

def @func_14457() -> (Tensor[(7, 1, 12), float64],) {
  %118 = @func_1948() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %119 = %118.1;
  %120 = cast(%119, dtype="float64") /* ty=Tensor[(7, 1, 12), float64] */;
  %121 = cosh(%120) /* ty=Tensor[(7, 1, 12), float64] */;
  %122 = cast(%121, dtype="float64") /* ty=Tensor[(7, 1, 12), float64] */;
  %123 = sqrt(%122) /* ty=Tensor[(7, 1, 12), float64] */;
  (%123,)
}

def @func_2667() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) {
  %124 = @func_2129() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %125 = %124.1;
  %126 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
  (%125, %126)
}

def @func_13482() -> Tensor[(8, 9, 15), float64] {
  %127 = @func_5104() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), bool]) */;
  %127.0
}

def @func_8356() -> Tensor[(8, 9, 15), float64] {
  %128 = @func_5104() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), bool]) */;
  %128.0
}

def @func_16521(%var_16479: Tensor[(4, 8, 6), float64]) -> (Tensor[(4, 8, 6), int8], Tensor[(84), float32], Tensor[(546), uint64]) {
  %129 = cast(%var_16479, dtype="float64") /* ty=Tensor[(4, 8, 6), float64] */;
  %130 = atanh(%129) /* ty=Tensor[(4, 8, 6), float64] */;
  %131 = cast(%var_16479, dtype="int8") /* ty=Tensor[(4, 8, 6), int8] */;
  %132 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%130, dtype="int8") /* ty=Tensor[(4, 8, 6), int8] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %135 = @func_6955() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
  %136 = @func_6333() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %137 = logical_xor(%133, %134) /* ty=Tensor[(4, 8, 6), int8] */;
  %138 = %135.0;
  %139 = %136.0;
  (%137, %138, %139)
}

def @func_3280(%var_3275: Tensor[(10, 14, 4), bool]) -> Tensor[(10, 14, 4), bool] {
  %140 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 14, 4), bool] */, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %141 = shape_of(%var_3275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %142 = cast(%var_3275, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%142, %143) /* ty=Tensor[(10, 14, 4), bool] */
}

def @func_5026() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32]) {
  %144 = @func_2567() /* ty=(Tensor[(546), uint64],) */;
  %145 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
  %146 = %144.0;
  %147 = %145.1;
  %148 = @func_2195() /* ty=Tensor[(84), float32] */;
  (%146, %147, %148)
}

def @func_9836() -> (Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16], Tensor[(546), uint64]) {
  %149 = @func_6517() /* ty=(Tensor[(16, 8, 3), uint16],) */;
  %150 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %151 = @func_4348() /* ty=Tensor[(3, 14, 13), float64] */;
  %152 = %149.0;
  %153 = %150.0;
  (%151, %152, %153)
}

def @func_18580() -> (Tensor[(84), float32],) {
  %154 = @func_4948() /* ty=Tensor[(84), float32] */;
  (%154,)
}

def @func_8633() -> (Tensor[(84), float32], Tensor[(2, 180), uint16], Tensor[(546), uint64]) {
  %155 = @func_2459() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) */;
  %156 = @func_8490() /* ty=(Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), uint16], Tensor[(3, 14, 13), float64]) */;
  %157 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %158 = %155.0;
  %159 = %156.5;
  %160 = %157.0;
  (%158, %159, %160)
}

def @func_10621() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) {
  %161 = @func_9850() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(512), uint64]) */;
  %162 = @func_6730() /* ty=(Tensor[(3, 14, 13), float64],) */;
  %163 = %161.1;
  %164 = %162.0;
  (%163, %164)
}

def @func_4403() -> Tensor[(8, 9, 15), float32] {
  %165 = @func_3457() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) */;
  %165.0
}

def @func_9011() -> (Tensor[(546), uint64],) {
  %166 = @func_3432() /* ty=(Tensor[(546), uint64],) */;
  %167 = %166.0;
  (%167,)
}

def @func_18338(%var_18332: Tensor[(112), float32]) -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), bool], Tensor[(84), float32], Tensor[(112), float32]) {
  %168 = @func_12427() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %169 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %170 = cast(%var_18332, dtype="float32") /* ty=Tensor[(112), float32] */;
  %171 = reshape(%170, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %172 = @func_10918(%171) /* ty=(Tensor[(84), float32], Tensor[(10, 15, 11), bool], Tensor[(1650, 1), int8], Tensor[(546), uint64], Tensor[(112), float32]) */;
  %173 = %168.0;
  %174 = %169.0;
  %175 = @func_10582() /* ty=Tensor[(84), float32] */;
  %176 = @func_2816() /* ty=Tensor[(2, 180), bool] */;
  %177 = %172.0;
  (%173, %174, %175, %176, %177, %var_18332)
}

def @func_15568(%var_15566: Tensor[(1650), int8]) -> (Tensor[(8, 9, 15), float32], Tensor[(546), uint64], Tensor[(10, 15, 11), bool], Tensor[(1650), int8]) {
  %178 = @func_8080() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %179 = cast(%var_15566, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %180 = cast(%var_15566, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %181 = reshape(%179, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), int8] */;
  %182 = reshape(%180, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), int8] */;
  %183 = @func_9876() /* ty=Tensor[(8, 9, 15), float32] */;
  %184 = %178.0;
  %185 = @func_9959(%181, %182) /* ty=Tensor[(10, 15, 11), bool] */;
  (%183, %184, %185, %var_15566)
}

def @func_17517() -> (Tensor[(84), float32], Tensor[(546), uint64]) {
  %186 = @func_11218() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), bool]) */;
  %187 = @func_10386() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %188 = %186.1;
  %189 = %187.0;
  (%188, %189)
}

def @func_6678() -> (Tensor[(8, 9, 15), float32], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) {
  %190 = @func_5381() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float32]) */;
  %191 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
  %192 = @func_5329() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %193 = %190.1;
  %194 = %191.2;
  %195 = %192.0;
  (%193, %194, %195)
}

def @func_96(%var_78: Tensor[(3, 14, 13), uint64]) -> Tensor[(3, 14, 13), uint64] {
  %196 = cast(%var_78, dtype="uint64") /* ty=Tensor[(3, 14, 13), uint64] */;
  %197 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(3, 14, 13), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 14, 13), uint64] */, dtype="uint64") /* ty=Tensor[(3, 14, 13), uint64] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%198, %199) /* ty=Tensor[(3, 14, 13), uint64] */
}

def @func_1720() -> (Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) {
  %200 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %201 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %202 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
  %203 = %200.2;
  %204 = %201.0;
  (%202, %203, %204)
}

def @func_4853() -> (Tensor[(546), uint64],) {
  %205 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %206 = %205.0;
  (%206,)
}

def @func_2686(%var_2684: Tensor[(84), float32]) -> (Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) {
  %207 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %208 = cast(%var_2684, dtype="float32") /* ty=Tensor[(84), float32] */;
  %209 = reshape(%208, newshape=[7, 1, 12]) /* ty=Tensor[(7, 1, 12), float32] */;
  %210 = @func_193(%209) /* ty=(Tensor[(7, 1, 12), float32],) */;
  %211 = %207.2;
  %212 = %210.0;
  (%211, %212, %var_2684)
}

def @func_4625() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64]) {
  %213 = @func_1948() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %214 = @func_2667() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) */;
  %215 = %213.0;
  %216 = %214.1;
  (%215, %216)
}

def @func_3150() -> Tensor[(8, 9, 15), float64] {
  %217 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %217.0
}

def @func_7924(%var_7896: Tensor[(2, 3, 7), bool]) -> Tensor[(2, 3, 7), bool] {
  %218 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 3, 1), bool] */, dtype="bool") /* ty=Tensor[(2, 3, 1), bool] */;
  %219 = cast(%var_7896, dtype="bool") /* ty=Tensor[(2, 3, 7), bool] */;
  logical_and(%218, %219) /* ty=Tensor[(2, 3, 7), bool] */
}

def @func_7587() -> (Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) {
  %220 = @func_2567() /* ty=(Tensor[(546), uint64],) */;
  %221 = @func_4348() /* ty=Tensor[(3, 14, 13), float64] */;
  %222 = %220.0;
  (%221, %222)
}

def @func_9343() -> (Tensor[(84), float32],) {
  %223 = @func_8310() /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %224 = %223.0;
  (%224,)
}

def @func_2129() -> (Tensor[(546), uint64], Tensor[(546), uint64]) {
  %225 = @func_1834() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %226 = %225.2;
  %227 = @func_1878() /* ty=Tensor[(546), uint64] */;
  (%226, %227)
}

def @func_19083() -> Tensor[(84), float32] {
  %228 = @func_7526() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) */;
  %228.0
}

def @func_8190(%var_8182: Tensor[(560), bool]) -> (Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(10, 14, 4), bool], Tensor[(560), bool]) {
  %229 = @func_1948() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %230 = @func_7230() /* ty=(Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64]) */;
  %231 = cast(%var_8182, dtype="bool") /* ty=Tensor[(560), bool] */;
  %232 = reshape(%231, newshape=[10, 14, 4]) /* ty=Tensor[(10, 14, 4), bool] */;
  %233 = %229.0;
  %234 = %230.1;
  %235 = @func_3280(%232) /* ty=Tensor[(10, 14, 4), bool] */;
  (%233, %234, %235, %var_8182)
}

def @func_13529(%var_13500: Tensor[(3, 14, 13), float64]) -> (Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float32]) {
  %236 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
  %237 = %236.0;
  %238 = cast(%var_13500, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %239 = shape_of(%237, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(%237, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %242 = cast(%237, dtype="float32") /* ty=Tensor[(3, 14, 13), float32] */;
  %243 = equal(%240, %241) /* ty=Tensor[(3, 14, 13), bool] */;
  %244 = sinh(%242) /* ty=Tensor[(3, 14, 13), float32] */;
  (%243, %244)
}

def @func_5474() -> (Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) {
  %245 = @func_4231() /* ty=Tensor[(546), uint64] */;
  %246 = cast(%245, dtype="uint64") /* ty=Tensor[(546), uint64] */;
  %247 = reshape(%246, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), uint64] */;
  %248 = @func_5026() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32]) */;
  %249 = @func_96(%247) /* ty=Tensor[(3, 14, 13), uint64] */;
  %250 = cast(%249, dtype="float64") /* ty=Tensor[(3, 14, 13), float64] */;
  %251 = reshape(%250, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), float64] */;
  %252 = @func_3201() /* ty=Tensor[(2, 180), float32] */;
  %253 = %248.2;
  %254 = @func_3150() /* ty=Tensor[(8, 9, 15), float64] */;
  %255 = @func_5292(%251) /* ty=Tensor[(3, 14, 13), uint64] */;
  %256 = @func_2942() /* ty=Tensor[(84), float32] */;
  (%252, %245, %249, %253, %254, %255, %256)
}

def @func_13446() -> Tensor[(8, 9, 15), float64] {
  %257 = @func_9542() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(84), float32]) */;
  %257.0
}

def @func_3037(%var_3029: Tensor[(16, 8, 1), uint64], %var_3030: Tensor[(16, 8, 4), uint64]) -> Tensor[(16, 8, 4), uint64] {
  %258 = cast(%var_3029, dtype="uint64") /* ty=Tensor[(16, 8, 1), uint64] */;
  %259 = cast(%var_3030, dtype="uint64") /* ty=Tensor[(16, 8, 4), uint64] */;
  bitwise_and(%258, %259) /* ty=Tensor[(16, 8, 4), uint64] */
}

def @func_6768() -> (Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float64]) {
  %260 = @func_4385() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %261 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %262 = %260.0;
  %263 = %261.0;
  (%262, %263)
}

def @func_10338(%var_10292: Tensor[(512), uint64]) -> (Tensor[(8, 9, 15), float64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) {
  %264 = @func_9542() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(84), float32]) */;
  %265 = cast(meta[relay.Constant][4] /* ty=Tensor[(128), uint64] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %266 = cast(%var_10292, dtype="uint64") /* ty=Tensor[(512), uint64] */;
  %267 = reshape(%265, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), uint64] */;
  %268 = reshape(%266, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), uint64] */;
  %269 = %264.0;
  %270 = @func_3037(%267, %268) /* ty=Tensor[(16, 8, 4), uint64] */;
  (%269, %270, meta[relay.Constant][4] /* ty=Tensor[(128), uint64] */, %var_10292)
}

def @func_18864() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(112), float32], Tensor[(4, 28), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) {
  %271 = @func_4501() /* ty=(Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %272 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 28), float32] */, dtype="float32") /* ty=Tensor[(4, 28), float32] */;
  %273 = reshape(%272, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %274 = @func_16088(%273) /* ty=(Tensor[(8, 9, 15), int32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(112), float32]) */;
  %275 = @func_7616() /* ty=(Tensor[(546), uint64],) */;
  %276 = @func_11915() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) */;
  %277 = @func_6710() /* ty=Tensor[(546), uint64] */;
  %278 = %271.1;
  %279 = %274.3;
  %280 = %275.0;
  %281 = %276.0;
  (%277, %278, %279, meta[relay.Constant][5] /* ty=Tensor[(4, 28), float32] */, %280, %281)
}

def @func_12064() -> (Tensor[(546), uint64],) {
  %282 = @func_8310() /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %283 = %282.1;
  (%283,)
}

def @func_3315() -> Tensor[(8, 9, 15), float64] {
  %284 = @func_2617() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %284.0
}

def @func_11310() -> (Tensor[(546), uint64], Tensor[(2, 180), uint16]) {
  %285 = @func_9850() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(512), uint64]) */;
  %286 = @func_3457() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) */;
  %287 = %285.0;
  %288 = %286.1;
  (%287, %288)
}

def @func_2001() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %289 = @func_1632() /* ty=(Tensor[(546), uint64],) */;
  %290 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %291 = %289.0;
  %292 = %290.1;
  %293 = @func_1930() /* ty=Tensor[(546), uint64] */;
  (%291, %292, %293)
}

def @func_17771(%var_17761: uint8, %var_17762: Tensor[(462), uint8]) -> (Tensor[(84), float32], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(512, 1), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], uint8, Tensor[(462), uint8], Tensor[(1, 128), float32]) {
  %294 = @func_8640() /* ty=(Tensor[(84), float32],) */;
  %295 = @func_11310() /* ty=(Tensor[(546), uint64], Tensor[(2, 180), uint16]) */;
  %296 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 128), uint64] */, dtype="uint64") /* ty=Tensor[(1, 128), uint64] */;
  %297 = cast(meta[relay.Constant][7] /* ty=Tensor[(512, 1), uint64] */, dtype="uint64") /* ty=Tensor[(512, 1), uint64] */;
  %298 = reshape(%296, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), uint64] */;
  %299 = reshape(%297, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), uint64] */;
  %300 = @func_10745() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %301 = cast(%var_17761, dtype="uint8") /* ty=uint8 */;
  %302 = cast(%var_17762, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %303 = reshape(%301, newshape=[]) /* ty=uint8 */;
  %304 = reshape(%302, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), uint8] */;
  %305 = @func_6481(%303, %304) /* ty=(Tensor[(14, 3, 11), uint8], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(2, 180), float32]) */;
  %306 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 128), uint64] */, dtype="float32") /* ty=Tensor[(1, 128), float32] */;
  %307 = log(%306) /* ty=Tensor[(1, 128), float32] */;
  %308 = cast(%307, dtype="float32") /* ty=Tensor[(1, 128), float32] */;
  %309 = %294.0;
  %310 = %295.0;
  %311 = @func_3037(%298, %299) /* ty=Tensor[(16, 8, 4), uint64] */;
  %312 = %300.0;
  %313 = %305.2;
  %314 = cosh(%308) /* ty=Tensor[(1, 128), float32] */;
  (%309, %310, %311, meta[relay.Constant][7] /* ty=Tensor[(512, 1), uint64] */, %312, %313, %var_17761, %var_17762, %314)
}

def @func_2739() -> (Tensor[(84), float32], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32], Tensor[(546), uint64]) {
  %315 = @func_1948() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %316 = %315.2;
  %317 = cast(%316, dtype="float32") /* ty=Tensor[(84), float32] */;
  %318 = reshape(%317, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %319 = @func_2686(%318) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %320 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %321 = @func_1632() /* ty=(Tensor[(546), uint64],) */;
  %322 = cast(meta[relay.Constant][8] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %323 = reshape(%322, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float32] */;
  %324 = @func_2026(%323) /* ty=(Tensor[(8, 3, 15), float32], Tensor[(3, 14, 13), uint64]) */;
  %325 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %326 = %319.1;
  %327 = %320.0;
  %328 = %321.0;
  %329 = %324.1;
  %330 = %325.1;
  (%316, %326, %327, %328, %329, meta[relay.Constant][8] /* ty=Tensor[(360), float32] */, %330)
}

def @func_15406(%var_15396: Tensor[(128), uint64]) -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), int16], Tensor[(512), uint64], Tensor[(360), float32], Tensor[(128), uint64], Tensor[(546), uint64]) {
  %331 = @func_2567() /* ty=(Tensor[(546), uint64],) */;
  %332 = @func_7331() /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %333 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %334 = %333.0;
  %335 = cast(%334, dtype="float32") /* ty=Tensor[(8, 9, 15), float32] */;
  %336 = atan(%335) /* ty=Tensor[(8, 9, 15), float32] */;
  %337 = cast(%334, dtype="int16") /* ty=Tensor[(8, 9, 15), int16] */;
  %338 = shape_of(%336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %339 = cast(%336, dtype="int16") /* ty=Tensor[(8, 9, 15), int16] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %341 = cast(meta[relay.Constant][9] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %342 = cast(%var_15396, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %343 = reshape(%341, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %344 = reshape(%342, newshape=[128]) /* ty=Tensor[(128), uint64] */;
  %345 = @func_3673(%343, %344) /* ty=(Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(512), uint64], Tensor[(7, 1, 12), float32], Tensor[(8, 3, 15), float32], Tensor[(360), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(128), float64]) */;
  %346 = @func_4853() /* ty=(Tensor[(546), uint64],) */;
  %347 = %331.0;
  %348 = %332.0;
  %349 = maximum(%339, %340) /* ty=Tensor[(8, 9, 15), int16] */;
  %350 = %345.2;
  %351 = %346.0;
  (%347, %348, %349, %350, meta[relay.Constant][9] /* ty=Tensor[(360), float32] */, %var_15396, %351)
}

def @func_17064() -> (Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(84), float32]) {
  %352 = @func_14485() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32]) */;
  %353 = @func_12661() /* ty=Tensor[(84), float32] */;
  %354 = %352.0;
  %355 = @func_2195() /* ty=Tensor[(84), float32] */;
  (%353, %354, %355)
}

def @func_6032() -> (Tensor[(8, 9, 15), uint8], Tensor[(546), uint64]) {
  %356 = @func_3982() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
  %357 = %356.0;
  %358 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 9, 15), float64] */, dtype="uint8") /* ty=Tensor[(8, 9, 15), uint8] */;
  %359 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%357, dtype="uint8") /* ty=Tensor[(8, 9, 15), uint8] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %362 = @func_5792() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
  %363 = right_shift(%360, %361) /* ty=Tensor[(8, 9, 15), uint8] */;
  %364 = %362.1;
  (%363, %364)
}

def @func_11954(%var_11923: Tensor[(1, 7, 12), int32]) -> (Tensor[(3, 14, 13), float64], Tensor[(84), float32], Tensor[(1, 7, 12), float32]) {
  %365 = @func_6730() /* ty=(Tensor[(3, 14, 13), float64],) */;
  %366 = @func_11005() /* ty=(Tensor[(84), float32],) */;
  %367 = cast(-7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %368 = cast(%var_11923, dtype="int32") /* ty=Tensor[(1, 7, 12), int32] */;
  %369 = minimum(%367, %368) /* ty=Tensor[(1, 7, 12), int32] */;
  %370 = cast(%369, dtype="float64") /* ty=Tensor[(1, 7, 12), float64] */;
  %371 = sinh(%370) /* ty=Tensor[(1, 7, 12), float64] */;
  %372 = cast(%371, dtype="float32") /* ty=Tensor[(1, 7, 12), float32] */;
  %373 = %365.0;
  %374 = %366.0;
  %375 = cosh(%372) /* ty=Tensor[(1, 7, 12), float32] */;
  (%373, %374, %375)
}

def @func_10199() -> (Tensor[(8, 9, 15), float32], Tensor[(3, 14, 13), uint64]) {
  %376 = @func_6618() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(16, 8, 3), uint16], Tensor[(8, 9, 15), float32]) */;
  %377 = @func_6419() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %378 = %376.4;
  %379 = %377.0;
  (%378, %379)
}

def @func_5141() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %380 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %381 = @func_2401() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %382 = @func_1834() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %383 = @func_4776() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(7, 1, 12), float64], Tensor[(546), uint64]) */;
  %384 = %380.0;
  %385 = %381.0;
  %386 = %382.2;
  %387 = %383.4;
  (%384, %385, %386, %387)
}

def @func_8148() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) {
  %388 = @func_2757() /* ty=(Tensor[(546), uint64],) */;
  %389 = %388.0;
  %390 = cast(%389, dtype="uint64") /* ty=Tensor[(546), uint64] */;
  %391 = reshape(%390, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), uint64] */;
  %392 = @func_96(%391) /* ty=Tensor[(3, 14, 13), uint64] */;
  (%389, %392)
}

def @func_2026(%var_2016: Tensor[(8, 3, 15), float32]) -> (Tensor[(8, 3, 15), float32], Tensor[(3, 14, 13), uint64]) {
  %393 = cast(%var_2016, dtype="float32") /* ty=Tensor[(8, 3, 15), float32] */;
  %394 = log10(%393) /* ty=Tensor[(8, 3, 15), float32] */;
  %395 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
  (%394, %395)
}

def @func_3014() -> Tensor[(2, 180), bool] {
  @func_2816() /* ty=Tensor[(2, 180), bool] */
}

def @func_7526() -> (Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) {
  %396 = @func_5690() /* ty=(Tensor[(84), float32], Tensor[(84), float32]) */;
  %397 = @func_4385() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %398 = @func_5583() /* ty=(Tensor[(84), float32], Tensor[(8, 9, 15), int32]) */;
  %399 = %396.0;
  %400 = %397.0;
  %401 = %398.0;
  %402 = @func_3243() /* ty=Tensor[(84), float32] */;
  (%399, %400, %401, %402)
}

def @func_9876() -> Tensor[(8, 9, 15), float32] {
  %403 = @func_3457() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) */;
  %403.0
}

def @func_2787() -> Tensor[(546), uint64] {
  @func_1878() /* ty=Tensor[(546), uint64] */
}

def @func_10386() -> (Tensor[(546), uint64], Tensor[(84), float32]) {
  %404 = @func_2897() /* ty=Tensor[(546), uint64] */;
  %405 = @func_3390() /* ty=Tensor[(84), float32] */;
  (%404, %405)
}

def @func_16032() -> Tensor[(3, 14, 13), float64] {
  @func_4025() /* ty=Tensor[(3, 14, 13), float64] */
}

def @func_11218() -> (Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), bool]) {
  %406 = @func_9386() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float32]) */;
  %407 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %408 = @func_4521() /* ty=(Tensor[(3, 14, 13), int64], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) */;
  %409 = %406.0;
  %410 = %407.0;
  %411 = %408.1;
  %412 = @func_9659() /* ty=Tensor[(2, 180), bool] */;
  (%409, %410, %411, %412)
}

def @func_8396() -> Tensor[(84), float32] {
  @func_2942() /* ty=Tensor[(84), float32] */
}

def @func_8731() -> (Tensor[(84), float32],) {
  %413 = @func_4636() /* ty=(Tensor[(84), float32],) */;
  %414 = %413.0;
  (%414,)
}

def @func_11982() -> Tensor[(546), uint64] {
  @func_1878() /* ty=Tensor[(546), uint64] */
}

def @func_6730() -> (Tensor[(3, 14, 13), float64],) {
  %415 = @func_4348() /* ty=Tensor[(3, 14, 13), float64] */;
  (%415,)
}

def @func_1521() -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) {
  %416 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %417 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %418 = %416.0;
  %419 = %417.2;
  (%418, %419)
}

def @func_6710() -> Tensor[(546), uint64] {
  %420 = @func_2129() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %420.0
}

def @func_16286() -> Tensor[(84), float32] {
  %421 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %421.0
}

def @func_3673(%var_3632: Tensor[(360), float32], %var_3669: Tensor[(128), uint64]) -> (Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(512), uint64], Tensor[(7, 1, 12), float32], Tensor[(8, 3, 15), float32], Tensor[(360), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(128), float64]) {
  %422 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %423 = cast(meta[relay.Constant][11] /* ty=Tensor[(128), uint64] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %424 = cast(meta[relay.Constant][12] /* ty=Tensor[(512), uint64] */, dtype="uint64") /* ty=Tensor[(512), uint64] */;
  %425 = reshape(%423, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), uint64] */;
  %426 = reshape(%424, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), uint64] */;
  %427 = @func_2739() /* ty=(Tensor[(84), float32], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32], Tensor[(546), uint64]) */;
  %428 = cast(%var_3632, dtype="float32") /* ty=Tensor[(360), float32] */;
  %429 = reshape(%428, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float32] */;
  %430 = @func_2026(%429) /* ty=(Tensor[(8, 3, 15), float32], Tensor[(3, 14, 13), uint64]) */;
  %431 = cast(%var_3669, dtype="float64") /* ty=Tensor[(128), float64] */;
  %432 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(128), uint64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %433 = cast(meta[relay.Constant][11] /* ty=Tensor[(128), uint64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?), float64] */;
  %435 = %422.0;
  %436 = @func_3037(%425, %426) /* ty=Tensor[(16, 8, 4), uint64] */;
  %437 = %427.1;
  %438 = %430.0;
  %439 = @func_3150() /* ty=Tensor[(8, 9, 15), float64] */;
  %440 = @func_2897() /* ty=Tensor[(546), uint64] */;
  %441 = subtract(%433, %434) /* ty=Tensor[(128), float64] */;
  (%435, %436, meta[relay.Constant][12] /* ty=Tensor[(512), uint64] */, %437, %438, %var_3632, %439, %440, %441)
}

def @func_17044() -> (Tensor[(8, 9, 15), float32],) {
  %442 = @func_5381() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float32]) */;
  %443 = %442.1;
  (%443,)
}

def @func_3457() -> (Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) {
  %444 = @func_2401() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %445 = %444.2;
  %446 = cast(%445, dtype="float32") /* ty=Tensor[(8, 9, 15), float32] */;
  %447 = @func_3109() /* ty=(Tensor[(2, 180), uint16],) */;
  %448 = log2(%446) /* ty=Tensor[(8, 9, 15), float32] */;
  %449 = %447.0;
  (%448, %449)
}

def @func_7230() -> (Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64]) {
  %450 = @func_6333() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %451 = @func_3598() /* ty=(Tensor[(3, 14, 13), float64],) */;
  %452 = %450.0;
  %453 = @func_3150() /* ty=Tensor[(8, 9, 15), float64] */;
  %454 = %451.0;
  (%452, %453, %454)
}

def @func_8208() -> (Tensor[(3, 14, 13), float64],) {
  %455 = @func_6730() /* ty=(Tensor[(3, 14, 13), float64],) */;
  %456 = %455.0;
  (%456,)
}

def @func_16088(%var_16083: Tensor[(112), float32]) -> (Tensor[(8, 9, 15), int32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(112), float32]) {
  %457 = @func_5583() /* ty=(Tensor[(84), float32], Tensor[(8, 9, 15), int32]) */;
  %458 = cast(%var_16083, dtype="float32") /* ty=Tensor[(112), float32] */;
  %459 = reshape(%458, newshape=[4, 7, 4]) /* ty=Tensor[(4, 7, 4), float32] */;
  %460 = @func_10881(%459) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float32]) */;
  %461 = %457.1;
  %462 = @func_2434() /* ty=Tensor[(84), float32] */;
  %463 = %460.2;
  (%461, %462, %463, %var_16083)
}

def @func_11728() -> (Tensor[(8, 9, 15), float64],) {
  %464 = @func_11218() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), bool]) */;
  %465 = %464.0;
  (%465,)
}

def @func_17101() -> (Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(256, 2), uint64]) {
  %466 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %467 = cast(meta[relay.Constant][13] /* ty=Tensor[(256, 2), uint64] */, dtype="uint64") /* ty=Tensor[(256, 2), uint64] */;
  %468 = reshape(%467, newshape=[512]) /* ty=Tensor[(512), uint64] */;
  %469 = @func_10338(%468) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %470 = %466.0;
  %471 = %469.1;
  (%470, %471, meta[relay.Constant][13] /* ty=Tensor[(256, 2), uint64] */)
}

def @func_8080() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %472 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %473 = @func_6032() /* ty=(Tensor[(8, 9, 15), uint8], Tensor[(546), uint64]) */;
  %474 = @func_3432() /* ty=(Tensor[(546), uint64],) */;
  %475 = %472.0;
  %476 = %473.1;
  %477 = %474.0;
  (%475, %476, %477)
}

def @func_2521() -> (Tensor[(546), uint64], Tensor[(546), float64], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32]) {
  %478 = @func_2129() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %479 = @func_1930() /* ty=Tensor[(546), uint64] */;
  %480 = cast(%479, dtype="float64") /* ty=Tensor[(546), float64] */;
  %481 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 180), float32] */, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
  %482 = reshape(%481, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float32] */;
  %483 = @func_2026(%482) /* ty=(Tensor[(8, 3, 15), float32], Tensor[(3, 14, 13), uint64]) */;
  %484 = %478.1;
  %485 = acos(%480) /* ty=Tensor[(546), float64] */;
  %486 = %483.1;
  (%484, %485, %486, meta[relay.Constant][14] /* ty=Tensor[(2, 180), float32] */)
}

def @func_10918(%var_10916: Tensor[(112), float32]) -> (Tensor[(84), float32], Tensor[(10, 15, 11), bool], Tensor[(1650, 1), int8], Tensor[(546), uint64], Tensor[(112), float32]) {
  %487 = cast(meta[relay.Constant][15] /* ty=Tensor[(1650, 1), int8] */, dtype="int8") /* ty=Tensor[(1650, 1), int8] */;
  %488 = cast(meta[relay.Constant][15] /* ty=Tensor[(1650, 1), int8] */, dtype="int8") /* ty=Tensor[(1650, 1), int8] */;
  %489 = reshape(%487, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), int8] */;
  %490 = reshape(%488, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), int8] */;
  %491 = cast(%var_10916, dtype="float32") /* ty=Tensor[(112), float32] */;
  %492 = reshape(%491, newshape=[4, 7, 4]) /* ty=Tensor[(4, 7, 4), float32] */;
  %493 = @func_10881(%492) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float32]) */;
  %494 = @func_2942() /* ty=Tensor[(84), float32] */;
  %495 = @func_9959(%489, %490) /* ty=Tensor[(10, 15, 11), bool] */;
  %496 = %493.2;
  (%494, %495, meta[relay.Constant][15] /* ty=Tensor[(1650, 1), int8] */, %496, %var_10916)
}

def @func_14610() -> Tensor[(546), uint64] {
  %497 = @func_3854() /* ty=(Tensor[(546), uint64],) */;
  %497.0
}

def @func_16821(%var_16785: Tensor[(1, 560), bool]) -> (Tensor[(3, 14, 13), float64], Tensor[(10, 14, 4), bool], Tensor[(1, 560), float64], Tensor[(3, 14, 13), uint64], Tensor[(3, 14, 13), uint64]) {
  %498 = @func_7587() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) */;
  %499 = cast(%var_16785, dtype="bool") /* ty=Tensor[(1, 560), bool] */;
  %500 = reshape(%499, newshape=[10, 14, 4]) /* ty=Tensor[(10, 14, 4), bool] */;
  %501 = cast(%var_16785, dtype="float64") /* ty=Tensor[(1, 560), float64] */;
  %502 = %498.0;
  %503 = @func_3280(%500) /* ty=Tensor[(10, 14, 4), bool] */;
  %504 = erf(%501) /* ty=Tensor[(1, 560), float64] */;
  %505 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
  %506 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
  (%502, %503, %504, %505, %506)
}

def @func_11544(%var_11537: Tensor[(2, 5, 14), float32]) -> (Tensor[(2, 5, 14), float32],) {
  %507 = cast(%var_11537, dtype="float32") /* ty=Tensor[(2, 5, 14), float32] */;
  %508 = cosh(%507) /* ty=Tensor[(2, 5, 14), float32] */;
  (%508,)
}

def @func_7097() -> Tensor[(84), float32] {
  %509 = @func_6955() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
  %509.0
}

def @func_9959(%var_9946: Tensor[(10, 15, 11), int8], %var_9947: Tensor[(10, 15, 11), int8]) -> Tensor[(10, 15, 11), bool] {
  %510 = cast(%var_9947, dtype="bool") /* ty=Tensor[(10, 15, 11), bool] */;
  %511 = shape_of(%var_9946, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%var_9946, dtype="bool") /* ty=Tensor[(10, 15, 11), bool] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%512, %513) /* ty=Tensor[(10, 15, 11), bool] */
}

def @func_13813() -> Tensor[(546), uint64] {
  @func_12955() /* ty=Tensor[(546), uint64] */
}

def @func_13562() -> (Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) {
  %514 = @func_11915() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) */;
  %515 = @func_10449() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
  %516 = @func_9343() /* ty=(Tensor[(84), float32],) */;
  %517 = %514.0;
  %518 = %515.0;
  %519 = %516.0;
  (%517, %518, %519)
}

def @func_2195() -> Tensor[(84), float32] {
  %520 = @func_1948() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %520.2
}

def @func_9065() -> (Tensor[(84), float32],) {
  %521 = @func_4636() /* ty=(Tensor[(84), float32],) */;
  %522 = %521.0;
  (%522,)
}

def @func_9943() -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %523 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %524 = @func_8356() /* ty=Tensor[(8, 9, 15), float64] */;
  %525 = %523.1;
  %526 = @func_1878() /* ty=Tensor[(546), uint64] */;
  (%524, %525, %526)
}

def @func_17431() -> (Tensor[(84), float32],) {
  %527 = @func_11344() /* ty=(Tensor[(84), float32],) */;
  %528 = %527.0;
  (%528,)
}

def @func_16879() -> (Tensor[(3, 14, 13), float64],) {
  %529 = @func_4025() /* ty=Tensor[(3, 14, 13), float64] */;
  (%529,)
}

def @func_17286() -> (Tensor[(546), uint64],) {
  %530 = @func_2401() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %531 = %530.5;
  (%531,)
}

def @func_15191() -> (Tensor[(8, 9, 15), float64],) {
  %532 = @func_11564() /* ty=Tensor[(8, 9, 15), float64] */;
  (%532,)
}

def @func_1677() -> Tensor[(3, 14, 13), uint64] {
  %533 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %533.1
}

def @func_4455() -> (Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) {
  %534 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %535 = @func_4025() /* ty=Tensor[(3, 14, 13), float64] */;
  %536 = @func_1878() /* ty=Tensor[(546), uint64] */;
  %537 = %534.0;
  (%535, %536, %537)
}

def @func_17491() -> Tensor[(3, 14, 13), float64] {
  %538 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
  %538.0
}

def @func_10449() -> (Tensor[(84), float32], Tensor[(546), uint64]) {
  %539 = @func_5792() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
  %540 = %539.0;
  %541 = @func_1930() /* ty=Tensor[(546), uint64] */;
  (%540, %541)
}

def @func_16867(%var_16850: Tensor[(3, 16, 14), float64], %var_16865: Tensor[(4224), float32]) -> (Tensor[(3, 16, 14), float64], Tensor[(546), uint64], Tensor[(8, 9, 15), float32], Tensor[(11, 384), float32], Tensor[(4224), float32]) {
  %542 = cast(%var_16850, dtype="float64") /* ty=Tensor[(3, 16, 14), float64] */;
  %543 = cast(%var_16865, dtype="float32") /* ty=Tensor[(4224), float32] */;
  %544 = reshape(%543, newshape=[11, 384]) /* ty=Tensor[(11, 384), float32] */;
  %545 = sinh(%542) /* ty=Tensor[(3, 16, 14), float64] */;
  %546 = @func_2787() /* ty=Tensor[(546), uint64] */;
  %547 = @func_4403() /* ty=Tensor[(8, 9, 15), float32] */;
  %548 = @func_15286(%544) /* ty=Tensor[(11, 384), float32] */;
  (%545, %546, %547, %548, %var_16865)
}

def @func_6742() -> (Tensor[(8, 9, 15), float64],) {
  %549 = @func_6265() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %550 = %549.0;
  (%550,)
}

def @func_17228() -> Tensor[(546), uint64] {
  @func_4231() /* ty=Tensor[(546), uint64] */
}

def @func_3165() -> Tensor[(8, 9, 15), float64] {
  %551 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %551.0
}

def @func_15500(%var_15497: Tensor[(5, 4, 7), float32]) -> Tensor[(5, 4, 7), float32] {
  %552 = cast(%var_15497, dtype="float32") /* ty=Tensor[(5, 4, 7), float32] */;
  log2(%552) /* ty=Tensor[(5, 4, 7), float32] */
}

def @func_18356() -> Tensor[(3, 14, 13), uint64] {
  %553 = @func_4625() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64]) */;
  %553.1
}

def @func_18361() -> Tensor[(546), uint64] {
  @func_5946() /* ty=Tensor[(546), uint64] */
}

def @func_3217() -> Tensor[(546), uint64] {
  %554 = @func_2129() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %554.0
}

def @func_2401() -> (Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %555 = @func_1834() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %556 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %557 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %558 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %559 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
  %560 = @func_2195() /* ty=Tensor[(84), float32] */;
  %561 = %555.0;
  %562 = %556.2;
  %563 = %557.0;
  %564 = %558.2;
  %565 = @func_1930() /* ty=Tensor[(546), uint64] */;
  (%559, %560, %561, %562, %563, %564, %565)
}

def @func_6618() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(16, 8, 3), uint16], Tensor[(8, 9, 15), float32]) {
  %566 = @func_5946() /* ty=Tensor[(546), uint64] */;
  %567 = cast(%566, dtype="float64") /* ty=Tensor[(546), float64] */;
  %568 = reshape(%567, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), float64] */;
  %569 = @func_5199(%568) /* ty=(Tensor[(3, 14, 13), float32], Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float64]) */;
  %570 = @func_2129() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %571 = @func_6517() /* ty=(Tensor[(16, 8, 3), uint16],) */;
  %572 = @func_3457() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) */;
  %573 = %569.2;
  %574 = %570.1;
  %575 = %571.0;
  %576 = %572.0;
  (%566, %573, %574, %575, %576)
}

def @func_6419() -> (Tensor[(3, 14, 13), uint64],) {
  %577 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
  (%577,)
}

def @func_17272(%var_17248: Tensor[(1650), int8]) -> (Tensor[(546), uint64], Tensor[(8, 9, 15), float32], Tensor[(1650), int8], Tensor[(2, 180), float32], Tensor[(8, 9, 15), float64]) {
  %578 = @func_8952() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %579 = cast(%var_17248, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %580 = reshape(%579, newshape=[1650]) /* ty=Tensor[(1650), int8] */;
  %581 = @func_15568(%580) /* ty=(Tensor[(8, 9, 15), float32], Tensor[(546), uint64], Tensor[(10, 15, 11), bool], Tensor[(1650), int8]) */;
  %582 = @func_3014() /* ty=Tensor[(2, 180), bool] */;
  %583 = cast(%582, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
  %584 = %578.0;
  %585 = %581.0;
  %586 = acos(%583) /* ty=Tensor[(2, 180), float32] */;
  %587 = @func_3315() /* ty=Tensor[(8, 9, 15), float64] */;
  (%584, %585, %var_17248, %586, %587)
}

def @func_11564() -> Tensor[(8, 9, 15), float64] {
  %588 = @func_9943() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %588.0
}

def @func_15755() -> (Tensor[(8, 9, 15), float32], Tensor[(546), uint64], Tensor[(84), float32]) {
  %589 = @func_5996() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(2, 180), bool]) */;
  %590 = @func_12476() /* ty=Tensor[(8, 9, 15), float32] */;
  %591 = @func_11982() /* ty=Tensor[(546), uint64] */;
  %592 = %589.1;
  (%590, %591, %592)
}

def @func_13741() -> Tensor[(546), uint64] {
  %593 = @func_9002() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(384), float64], Tensor[(3, 14, 13), uint64]) */;
  %593.0
}

def @func_9736() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(546), uint64]) {
  %594 = @func_3432() /* ty=(Tensor[(546), uint64],) */;
  %595 = @func_4385() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %596 = %594.0;
  %597 = %595.0;
  %598 = @func_8396() /* ty=Tensor[(84), float32] */;
  %599 = @func_1878() /* ty=Tensor[(546), uint64] */;
  (%596, %597, %598, %599)
}

def @func_9422() -> (Tensor[(546), uint64], Tensor[(546), uint64]) {
  %600 = @func_8080() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %601 = @func_7616() /* ty=(Tensor[(546), uint64],) */;
  %602 = %600.2;
  %603 = %601.0;
  (%602, %603)
}

def @func_5292(%var_5279: Tensor[(3, 14, 13), float64]) -> Tensor[(3, 14, 13), uint64] {
  %604 = @func_4025() /* ty=Tensor[(3, 14, 13), float64] */;
  %605 = cast(%var_5279, dtype="uint64") /* ty=Tensor[(3, 14, 13), uint64] */;
  %606 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%604, dtype="uint64") /* ty=Tensor[(3, 14, 13), uint64] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%607, %608) /* ty=Tensor[(3, 14, 13), uint64] */
}

def @func_12131() -> (Tensor[(3, 14, 13), uint64],) {
  %609 = @func_2459() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) */;
  %610 = %609.1;
  (%610,)
}

def @func_2757() -> (Tensor[(546), uint64],) {
  %611 = @func_2567() /* ty=(Tensor[(546), uint64],) */;
  %612 = %611.0;
  (%612,)
}

def @func_19108() -> Tensor[(84), float32] {
  %613 = @func_18948() /* ty=(Tensor[(84), float32],) */;
  %613.0
}

def @func_5946() -> Tensor[(546), uint64] {
  @func_2787() /* ty=Tensor[(546), uint64] */
}

def @func_14771() -> Tensor[(546), uint64] {
  %614 = @func_6955() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
  %614.1
}

def @func_5583() -> (Tensor[(84), float32], Tensor[(8, 9, 15), int32]) {
  %615 = @func_5170() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %616 = %615.1;
  %617 = cast(meta[relay.Constant][16] /* ty=Tensor[(8, 9, 15), float64] */, dtype="int32") /* ty=Tensor[(8, 9, 15), int32] */;
  %618 = shape_of(%616, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%616, dtype="int32") /* ty=Tensor[(8, 9, 15), int32] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %621 = @func_3243() /* ty=Tensor[(84), float32] */;
  %622 = bitwise_xor(%619, %620) /* ty=Tensor[(8, 9, 15), int32] */;
  (%621, %622)
}

def @func_9386() -> (Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float32]) {
  %623 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %624 = @func_7754() /* ty=(Tensor[(8, 9, 15), float32],) */;
  %625 = %623.0;
  %626 = %624.0;
  (%625, %626)
}

def @func_13866(%var_13850: Tensor[(16, 5, 16), uint16], %var_13851: Tensor[(16, 5, 16), uint16]) -> (Tensor[(16, 5, 16), bool], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) {
  %627 = cast(%var_13851, dtype="bool") /* ty=Tensor[(16, 5, 16), bool] */;
  %628 = shape_of(%var_13850, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%var_13850, dtype="bool") /* ty=Tensor[(16, 5, 16), bool] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %631 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
  %632 = less(%629, %630) /* ty=Tensor[(16, 5, 16), bool] */;
  %633 = @func_12582() /* ty=Tensor[(3, 14, 13), uint64] */;
  %634 = %631.1;
  (%632, %633, %634)
}

def @func_5381() -> (Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float32]) {
  %635 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
  %636 = @func_4403() /* ty=Tensor[(8, 9, 15), float32] */;
  (%635, %636)
}

def @func_2942() -> Tensor[(84), float32] {
  @func_2195() /* ty=Tensor[(84), float32] */
}

def @func_15619(%var_15592: Tensor[(8, 15, 11), float32]) -> (Tensor[(8, 15, 11), float32],) {
  %637 = cast(%var_15592, dtype="float32") /* ty=Tensor[(8, 15, 11), float32] */;
  %638 = tan(%637) /* ty=Tensor[(8, 15, 11), float32] */;
  (%638,)
}

def @func_4521() -> (Tensor[(3, 14, 13), int64], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) {
  %639 = @func_2667() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) */;
  %640 = %639.1;
  %641 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 14, 13), uint64] */, dtype="int64") /* ty=Tensor[(3, 14, 13), int64] */;
  %642 = shape_of(%640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%640, dtype="int64") /* ty=Tensor[(3, 14, 13), int64] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %645 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %646 = multiply(%643, %644) /* ty=Tensor[(3, 14, 13), int64] */;
  %647 = %645.0;
  %648 = @func_3165() /* ty=Tensor[(8, 9, 15), float64] */;
  (%646, %647, %648)
}

def @func_2434() -> Tensor[(84), float32] {
  @func_2195() /* ty=Tensor[(84), float32] */
}

def @func_10022() -> Tensor[(3, 14, 13), uint64] {
  %649 = @func_1834() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %649.1
}

def @func_12032(%var_12017: Tensor[(3, 11, 15), bool], %var_12018: Tensor[(3, 11, 15), bool]) -> (Tensor[(3, 11, 15), bool], Tensor[(546), uint64]) {
  %650 = cast(%var_12018, dtype="bool") /* ty=Tensor[(3, 11, 15), bool] */;
  %651 = shape_of(%var_12017, dtype="int32") /* ty=Tensor[(3), int32] */;
  %652 = cast(%var_12017, dtype="bool") /* ty=Tensor[(3, 11, 15), bool] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %654 = logical_or(%652, %653) /* ty=Tensor[(3, 11, 15), bool] */;
  %655 = @func_2897() /* ty=Tensor[(546), uint64] */;
  (%654, %655)
}

def @func_1365() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) {
  %656 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 9, 15), float64] */, dtype="float64") /* ty=Tensor[(8, 9, 15), float64] */;
  %657 = cast(meta[relay.Constant][19] /* ty=Tensor[(546), uint64] */, dtype="uint64") /* ty=Tensor[(546), uint64] */;
  %658 = reshape(%657, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), uint64] */;
  %659 = sinh(%656) /* ty=Tensor[(8, 9, 15), float64] */;
  %660 = @func_96(%658) /* ty=Tensor[(3, 14, 13), uint64] */;
  (%659, %660, meta[relay.Constant][19] /* ty=Tensor[(546), uint64] */)
}

def @func_15698() -> (Tensor[(8, 9, 15), float64], uint16, Tensor[(28), uint16], Tensor[(1, 128), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(32, 16), bool], Tensor[(546), uint64]) {
  %661 = @func_11728() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %662 = @func_7587() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) */;
  %663 = cast(meta[relay.Constant][23] /* ty=Tensor[(32, 16), uint64] */, dtype="float64") /* ty=Tensor[(32, 16), float64] */;
  %664 = log10(%663) /* ty=Tensor[(32, 16), float64] */;
  %665 = cast(meta[relay.Constant][20] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %666 = cast(meta[relay.Constant][21] /* ty=Tensor[(28), uint16] */, dtype="uint16") /* ty=Tensor[(28), uint16] */;
  %667 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 128), uint64] */, dtype="uint64") /* ty=Tensor[(1, 128), uint64] */;
  %668 = cast(meta[relay.Constant][23] /* ty=Tensor[(32, 16), uint64] */, dtype="uint64") /* ty=Tensor[(32, 16), uint64] */;
  %669 = reshape(%665, newshape=[]) /* ty=uint16 */;
  %670 = reshape(%666, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), uint16] */;
  %671 = reshape(%667, newshape=[128]) /* ty=Tensor[(128), uint64] */;
  %672 = reshape(%668, newshape=[512]) /* ty=Tensor[(512), uint64] */;
  %673 = @func_3796(%669, %670, %671, %672) /* ty=(Tensor[(4, 1, 7), uint16], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %674 = %673.8;
  %675 = cast(%674, dtype="bool") /* ty=Tensor[(512), bool] */;
  %676 = shape_of(%664, dtype="int32") /* ty=Tensor[(2), int32] */;
  %677 = cast(%664, dtype="bool") /* ty=Tensor[(32, 16), bool] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %679 = @func_6333() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %680 = %661.0;
  %681 = @func_14871() /* ty=Tensor[(84), float32] */;
  %682 = %662.1;
  %683 = not_equal(%677, %678) /* ty=Tensor[(32, 16), bool] */;
  %684 = %679.0;
  (%680, meta[relay.Constant][20] /* ty=uint16 */, meta[relay.Constant][21] /* ty=Tensor[(28), uint16] */, meta[relay.Constant][22] /* ty=Tensor[(1, 128), uint64] */, %681, %682, %683, %684)
}

def @func_18948() -> (Tensor[(84), float32],) {
  %685 = @func_3243() /* ty=Tensor[(84), float32] */;
  (%685,)
}

def @func_14586(%var_14569: Tensor[(8, 9, 15), float64]) -> (Tensor[(84), float32], Tensor[(8, 9, 15), bool], Tensor[(2, 5, 14), float32], Tensor[(140), float32]) {
  %686 = @func_9542() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(84), float32]) */;
  %687 = %686.0;
  %688 = cast(%var_14569, dtype="bool") /* ty=Tensor[(8, 9, 15), bool] */;
  %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%687, dtype="bool") /* ty=Tensor[(8, 9, 15), bool] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %692 = cast(meta[relay.Constant][24] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %693 = reshape(%692, newshape=[2, 5, 14]) /* ty=Tensor[(2, 5, 14), float32] */;
  %694 = @func_11544(%693) /* ty=(Tensor[(2, 5, 14), float32],) */;
  %695 = @func_3243() /* ty=Tensor[(84), float32] */;
  %696 = less(%690, %691) /* ty=Tensor[(8, 9, 15), bool] */;
  %697 = %694.0;
  (%695, %696, %697, meta[relay.Constant][24] /* ty=Tensor[(140), float32] */)
}

def @func_12203(%var_12182: Tensor[(28), uint16]) -> (Tensor[(84), float32], Tensor[(32, 4), float64], Tensor[(28), uint16], Tensor[(128), uint64], Tensor[(3, 14, 13), uint64]) {
  %698 = @func_4636() /* ty=(Tensor[(84), float32],) */;
  %699 = cast(%var_12182, dtype="uint16") /* ty=Tensor[(28), uint16] */;
  %700 = cast(meta[relay.Constant][25] /* ty=Tensor[(128), uint64] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %701 = reshape(%699, newshape=[28]) /* ty=Tensor[(28), uint16] */;
  %702 = reshape(%700, newshape=[32, 4]) /* ty=Tensor[(32, 4), uint64] */;
  %703 = @func_11377(%701, %702) /* ty=(Tensor[(546), uint64], Tensor[(4, 1, 7), uint16], uint16, Tensor[(28), uint16], Tensor[(512), uint64], Tensor[(32, 4), float64]) */;
  %704 = @func_7526() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) */;
  %705 = %698.0;
  %706 = %703.5;
  %707 = %704.1;
  (%705, %706, %var_12182, meta[relay.Constant][25] /* ty=Tensor[(128), uint64] */, %707)
}

def @func_18892() -> (Tensor[(84), float32],) {
  %708 = @func_13562() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) */;
  %709 = %708.2;
  (%709,)
}

def @func_19113() -> (Tensor[(8, 9, 15), float32],) {
  %710 = @func_12476() /* ty=Tensor[(8, 9, 15), float32] */;
  (%710,)
}

def @main(%var_19204: Tensor[(8, 13, 8), int64], %var_19205: Tensor[(8, 13, 8), int64]) -> (Tensor[(8, 13, 8), int64],) {
  %711 = cast(%var_19205, dtype="int64") /* ty=Tensor[(8, 13, 8), int64] */;
  %712 = shape_of(%var_19204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %713 = cast(%var_19204, dtype="int64") /* ty=Tensor[(8, 13, 8), int64] */;
  %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %715 = bitwise_or(%713, %714) /* ty=Tensor[(8, 13, 8), int64] */;
  (%715,)
}

def @func_9542() -> (Tensor[(8, 9, 15), float64], Tensor[(84), float32]) {
  %716 = @func_3457() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) */;
  %717 = %716.0;
  %718 = cast(%717, dtype="float64") /* ty=Tensor[(8, 9, 15), float64] */;
  %719 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %720 = log10(%718) /* ty=Tensor[(8, 9, 15), float64] */;
  %721 = %719.0;
  (%720, %721)
}

def @func_5170() -> (Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) {
  %722 = @func_1834() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %723 = @func_3315() /* ty=Tensor[(8, 9, 15), float64] */;
  %724 = %722.0;
  %725 = @func_1930() /* ty=Tensor[(546), uint64] */;
  (%723, %724, %725)
}

def @func_4686() -> (Tensor[(84), float32], Tensor[(3, 14, 13), int64]) {
  %726 = @func_2871() /* ty=(Tensor[(84), float32],) */;
  %727 = @func_4521() /* ty=(Tensor[(3, 14, 13), int64], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) */;
  %728 = %726.0;
  %729 = %727.0;
  (%728, %729)
}

def @func_15124(%var_15094: Tensor[(384), float64], %var_15102: uint8) -> (Tensor[(84), float32], Tensor[(84), uint64], Tensor[(546), uint64], Tensor[(384), float64], Tensor[(546), uint64], uint8, Tensor[(462), uint8], Tensor[(2, 180), float32]) {
  %730 = @func_9736() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(546), uint64]) */;
  %731 = %730.2;
  %732 = cast(%731, dtype="int32") /* ty=Tensor[(84), int32] */;
  %733 = reshape(%732, newshape=[1, 7, 12]) /* ty=Tensor[(1, 7, 12), int32] */;
  %734 = @func_11954(%733) /* ty=(Tensor[(3, 14, 13), float64], Tensor[(84), float32], Tensor[(1, 7, 12), float32]) */;
  %735 = %734.1;
  %736 = @func_12661() /* ty=Tensor[(84), float32] */;
  %737 = cast(%736, dtype="uint64") /* ty=Tensor[(84), uint64] */;
  %738 = shape_of(%735, dtype="int32") /* ty=Tensor[(1), int32] */;
  %739 = cast(%735, dtype="uint64") /* ty=Tensor[(84), uint64] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %741 = cast(%var_15094, dtype="float64") /* ty=Tensor[(384), float64] */;
  %742 = reshape(%741, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %743 = @func_9196(%742) /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(384), float64], Tensor[(546), uint64], Tensor[(8, 9, 15), bool], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %744 = cast(%var_15102, dtype="uint8") /* ty=uint8 */;
  %745 = cast(meta[relay.Constant][26] /* ty=Tensor[(462), uint8] */, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %746 = reshape(%744, newshape=[]) /* ty=uint8 */;
  %747 = reshape(%745, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), uint8] */;
  %748 = @func_6481(%746, %747) /* ty=(Tensor[(14, 3, 11), uint8], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(2, 180), float32]) */;
  %749 = bitwise_and(%739, %740) /* ty=Tensor[(84), uint64] */;
  %750 = %743.5;
  %751 = %748.1;
  %752 = @func_3201() /* ty=Tensor[(2, 180), float32] */;
  (%731, %749, %750, %var_15094, %751, %var_15102, meta[relay.Constant][26] /* ty=Tensor[(462), uint8] */, %752)
}

def @func_7852(%var_7823: Tensor[(192), int64]) -> (Tensor[(2, 180), uint16], Tensor[(8, 9, 15), float64], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(1536), int64], Tensor[(84), float32]) {
  %753 = @func_6247() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), uint16], Tensor[(546), uint64]) */;
  %754 = @func_6768() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float64]) */;
  %755 = cast(%var_7823, dtype="int64") /* ty=Tensor[(192), int64] */;
  %756 = cast(meta[relay.Constant][27] /* ty=Tensor[(1536), int64] */, dtype="int64") /* ty=Tensor[(1536), int64] */;
  %757 = reshape(%755, newshape=[16, 12, 1]) /* ty=Tensor[(16, 12, 1), int64] */;
  %758 = reshape(%756, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), int64] */;
  %759 = %753.1;
  %760 = %754.1;
  %761 = @func_2913(%757, %758) /* ty=Tensor[(16, 12, 8), int64] */;
  %762 = @func_7097() /* ty=Tensor[(84), float32] */;
  (%759, %760, %761, %var_7823, meta[relay.Constant][27] /* ty=Tensor[(1536), int64] */, %762)
}

def @func_16465(%var_16445: Tensor[(192), int64], %var_16446: Tensor[(1536), int64]) -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(750), uint32], Tensor[(192), int64], Tensor[(1536), int64]) {
  %763 = @func_6032() /* ty=(Tensor[(8, 9, 15), uint8], Tensor[(546), uint64]) */;
  %764 = cast(meta[relay.Constant][28] /* ty=Tensor[(750), uint32] */, dtype="uint32") /* ty=Tensor[(750), uint32] */;
  %765 = cast(meta[relay.Constant][28] /* ty=Tensor[(750), uint32] */, dtype="uint32") /* ty=Tensor[(750), uint32] */;
  %766 = cast(%var_16445, dtype="int64") /* ty=Tensor[(192), int64] */;
  %767 = cast(%var_16446, dtype="int64") /* ty=Tensor[(1536), int64] */;
  %768 = reshape(%764, newshape=[15, 10, 5]) /* ty=Tensor[(15, 10, 5), uint32] */;
  %769 = reshape(%765, newshape=[15, 10, 5]) /* ty=Tensor[(15, 10, 5), uint32] */;
  %770 = reshape(%766, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %771 = reshape(%767, newshape=[2, 768]) /* ty=Tensor[(2, 768), int64] */;
  %772 = @func_6920(%768, %769, %770, %771) /* ty=(Tensor[(15, 10, 5), uint32], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(2, 768), int64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
  %773 = @func_8356() /* ty=Tensor[(8, 9, 15), float64] */;
  %774 = %763.1;
  %775 = %772.1;
  (%773, %774, %775, meta[relay.Constant][28] /* ty=Tensor[(750), uint32] */, %var_16445, %var_16446)
}

def @func_11815() -> (Tensor[(546), uint64], Tensor[(84), float32]) {
  %776 = @func_10722() /* ty=(Tensor[(546), uint64],) */;
  %777 = @func_5026() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32]) */;
  %778 = %776.0;
  %779 = %777.2;
  (%778, %779)
}

def @func_10123() -> (Tensor[(546), uint64], Tensor[(84), float32]) {
  %780 = @func_3854() /* ty=(Tensor[(546), uint64],) */;
  %781 = @func_7526() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) */;
  %782 = %780.0;
  %783 = %781.3;
  (%782, %783)
}

def @func_11084() -> (Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) {
  %784 = @func_10621() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */;
  %785 = %784.1;
  %786 = cast(%785, dtype="float64") /* ty=Tensor[(3, 14, 13), float64] */;
  %787 = @func_9836() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16], Tensor[(546), uint64]) */;
  %788 = sin(%786) /* ty=Tensor[(3, 14, 13), float64] */;
  %789 = %787.2;
  (%788, %789)
}

def @func_4776() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(7, 1, 12), float64], Tensor[(546), uint64]) {
  %790 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %791 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %792 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %793 = cast(meta[relay.Constant][29] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %794 = reshape(%793, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %795 = @func_2686(%794) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %796 = %795.1;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(7, 1, 12), float64] */;
  %798 = %790.1;
  %799 = %791.1;
  %800 = @func_4074() /* ty=Tensor[(546), uint64] */;
  %801 = %792.0;
  %802 = log2(%797) /* ty=Tensor[(7, 1, 12), float64] */;
  %803 = @func_4074() /* ty=Tensor[(546), uint64] */;
  (%798, %799, %800, meta[relay.Constant][29] /* ty=Tensor[(84), float32] */, %801, %802, %803)
}

def @func_11377(%var_11356: Tensor[(28), uint16], %var_11357: Tensor[(32, 4), uint64]) -> (Tensor[(546), uint64], Tensor[(4, 1, 7), uint16], uint16, Tensor[(28), uint16], Tensor[(512), uint64], Tensor[(32, 4), float64]) {
  %804 = cast(meta[relay.Constant][30] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %805 = cast(%var_11356, dtype="uint16") /* ty=Tensor[(28), uint16] */;
  %806 = cast(%var_11357, dtype="uint64") /* ty=Tensor[(32, 4), uint64] */;
  %807 = cast(meta[relay.Constant][31] /* ty=Tensor[(512), uint64] */, dtype="uint64") /* ty=Tensor[(512), uint64] */;
  %808 = reshape(%804, newshape=[]) /* ty=uint16 */;
  %809 = reshape(%805, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), uint16] */;
  %810 = reshape(%806, newshape=[128]) /* ty=Tensor[(128), uint64] */;
  %811 = reshape(%807, newshape=[512]) /* ty=Tensor[(512), uint64] */;
  %812 = @func_3796(%808, %809, %810, %811) /* ty=(Tensor[(4, 1, 7), uint16], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %813 = cast(%var_11357, dtype="float64") /* ty=Tensor[(32, 4), float64] */;
  %814 = @func_1930() /* ty=Tensor[(546), uint64] */;
  %815 = %812.0;
  %816 = log10(%813) /* ty=Tensor[(32, 4), float64] */;
  (%814, %815, meta[relay.Constant][30] /* ty=uint16 */, %var_11356, meta[relay.Constant][31] /* ty=Tensor[(512), uint64] */, %816)
}

def @func_9002() -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(384), float64], Tensor[(3, 14, 13), uint64]) {
  %817 = cast(meta[relay.Constant][32] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %818 = cast(meta[relay.Constant][32] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %819 = reshape(%817, newshape=[16, 8, 3]) /* ty=Tensor[(16, 8, 3), float64] */;
  %820 = reshape(%818, newshape=[16, 8, 3]) /* ty=Tensor[(16, 8, 3), float64] */;
  %821 = @func_4284(%819, %820) /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16]) */;
  %822 = @func_5547() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(16, 8, 3), uint16], Tensor[(1, 384), float64]) */;
  %823 = @func_5946() /* ty=Tensor[(546), uint64] */;
  %824 = %821.0;
  %825 = %822.0;
  (%823, %824, meta[relay.Constant][32] /* ty=Tensor[(384), float64] */, %825)
}

def @func_6265() -> (Tensor[(8, 9, 15), float64],) {
  %826 = @func_3150() /* ty=Tensor[(8, 9, 15), float64] */;
  (%826,)
}

def @func_18001(%var_17962: Tensor[(1280), uint16]) -> (Tensor[(84), float32], Tensor[(16, 5, 16), bool], Tensor[(1280), uint16], Tensor[(3, 14, 13), uint64]) {
  %827 = cast(%var_17962, dtype="uint16") /* ty=Tensor[(1280), uint16] */;
  %828 = cast(%var_17962, dtype="uint16") /* ty=Tensor[(1280), uint16] */;
  %829 = reshape(%827, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), uint16] */;
  %830 = reshape(%828, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), uint16] */;
  %831 = @func_13866(%829, %830) /* ty=(Tensor[(16, 5, 16), bool], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %832 = @func_14871() /* ty=Tensor[(84), float32] */;
  %833 = %831.0;
  %834 = @func_10022() /* ty=Tensor[(3, 14, 13), uint64] */;
  (%832, %833, %var_17962, %834)
}

def @func_13008() -> Tensor[(546), uint64] {
  %835 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %835.0
}

def @func_10745() -> (Tensor[(8, 9, 15), float64],) {
  %836 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %837 = %836.0;
  (%837,)
}

def @func_6481(%var_6451: uint8, %var_6452: Tensor[(14, 3, 11), uint8]) -> (Tensor[(14, 3, 11), uint8], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(2, 180), float32]) {
  %838 = cast(%var_6451, dtype="uint8") /* ty=uint8 */;
  %839 = cast(%var_6452, dtype="uint8") /* ty=Tensor[(14, 3, 11), uint8] */;
  %840 = @func_5792() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
  %841 = @func_1948() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %842 = minimum(%838, %839) /* ty=Tensor[(14, 3, 11), uint8] */;
  %843 = %840.1;
  %844 = %841.2;
  %845 = @func_3201() /* ty=Tensor[(2, 180), float32] */;
  (%842, %843, %844, %845)
}

def @func_15989() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32]) {
  %846 = @func_8352() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %847 = @func_13428() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %848 = @func_15191() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %849 = cast(meta[relay.Constant][33] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %850 = reshape(%849, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float32] */;
  %851 = @func_2026(%850) /* ty=(Tensor[(8, 3, 15), float32], Tensor[(3, 14, 13), uint64]) */;
  %852 = %846.1;
  %853 = %847.1;
  %854 = %848.0;
  %855 = %851.1;
  (%852, %853, %854, %855, meta[relay.Constant][33] /* ty=Tensor[(360), float32] */)
}

def @func_2816() -> Tensor[(2, 180), bool] {
  %856 = @func_2521() /* ty=(Tensor[(546), uint64], Tensor[(546), float64], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32]) */;
  %857 = %856.3;
  %858 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 180), float32] */, dtype="bool") /* ty=Tensor[(2, 180), bool] */;
  %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(2), int32] */;
  %860 = cast(%857, dtype="bool") /* ty=Tensor[(2, 180), bool] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  less_equal(%860, %861) /* ty=Tensor[(2, 180), bool] */
}

def @func_12427() -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %862 = @func_5474() /* ty=(Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) */;
  %863 = @func_2401() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %864 = %862.1;
  %865 = @func_2434() /* ty=Tensor[(84), float32] */;
  %866 = @func_11982() /* ty=Tensor[(546), uint64] */;
  %867 = %863.3;
  (%864, %865, %866, %867)
}

def @func_13428() -> (Tensor[(546), uint64], Tensor[(546), uint64]) {
  %868 = @func_1632() /* ty=(Tensor[(546), uint64],) */;
  %869 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %870 = %868.0;
  %871 = %869.2;
  (%870, %871)
}

def @func_15243() -> (Tensor[(546), uint64], Tensor[(84), float32]) {
  %872 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %873 = %872.0;
  %874 = @func_2942() /* ty=Tensor[(84), float32] */;
  (%873, %874)
}

def @func_14917() -> (Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float64], uint16, Tensor[(28), uint16], Tensor[(2, 64), uint64], Tensor[(512), uint64], Tensor[(546), uint64]) {
  %875 = @func_12131() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %876 = cast(meta[relay.Constant][35] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %877 = cast(meta[relay.Constant][36] /* ty=Tensor[(28), uint16] */, dtype="uint16") /* ty=Tensor[(28), uint16] */;
  %878 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 64), uint64] */, dtype="uint64") /* ty=Tensor[(2, 64), uint64] */;
  %879 = cast(meta[relay.Constant][38] /* ty=Tensor[(512), uint64] */, dtype="uint64") /* ty=Tensor[(512), uint64] */;
  %880 = reshape(%876, newshape=[]) /* ty=uint16 */;
  %881 = reshape(%877, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), uint16] */;
  %882 = reshape(%878, newshape=[128]) /* ty=Tensor[(128), uint64] */;
  %883 = reshape(%879, newshape=[512]) /* ty=Tensor[(512), uint64] */;
  %884 = @func_3796(%880, %881, %882, %883) /* ty=(Tensor[(4, 1, 7), uint16], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %885 = %875.0;
  %886 = %884.4;
  %887 = @func_11982() /* ty=Tensor[(546), uint64] */;
  (%885, %886, meta[relay.Constant][35] /* ty=uint16 */, meta[relay.Constant][36] /* ty=Tensor[(28), uint16] */, meta[relay.Constant][37] /* ty=Tensor[(2, 64), uint64] */, meta[relay.Constant][38] /* ty=Tensor[(512), uint64] */, %887)
}

def @func_1850() -> Tensor[(3, 14, 13), uint64] {
  %888 = @func_1834() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %888.1
}

def @func_12789() -> Tensor[(84), float32] {
  %889 = @func_10123() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %889.1
}

def @func_17324() -> Tensor[(546), uint64] {
  %890 = @func_8080() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %890.0
}

def @func_12955() -> Tensor[(546), uint64] {
  %891 = @func_12064() /* ty=(Tensor[(546), uint64],) */;
  %891.0
}

def @func_18522() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64]) {
  %892 = @func_5329() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %893 = @func_7230() /* ty=(Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64]) */;
  %894 = %892.0;
  %895 = %893.2;
  (%894, %895)
}

def @func_1948() -> (Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) {
  %896 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %897 = cast(meta[relay.Constant][39] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %898 = reshape(%897, newshape=[7, 1, 12]) /* ty=Tensor[(7, 1, 12), float32] */;
  %899 = @func_193(%898) /* ty=(Tensor[(7, 1, 12), float32],) */;
  %900 = %896.0;
  %901 = %899.0;
  (%900, %901, meta[relay.Constant][39] /* ty=Tensor[(84), float32] */)
}

def @func_3432() -> (Tensor[(546), uint64],) {
  %902 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %903 = %902.0;
  (%903,)
}

def @func_2617() -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) {
  %904 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %905 = %904.2;
  %906 = @func_1878() /* ty=Tensor[(546), uint64] */;
  (%905, %906)
}

def @func_2897() -> Tensor[(546), uint64] {
  %907 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %907.0
}

def @func_18194(%var_18076: Tensor[(4, 13, 15), bool], %var_18107: Tensor[(8, 24), float64], %var_18135: Tensor[(560), bool]) -> (Tensor[(546), float64], Tensor[(7, 78), float64], Tensor[(4, 8, 6), int8], Tensor[(8, 24), float64], Tensor[(84), float32], Tensor[(10, 14, 4), bool], Tensor[(560), bool], Tensor[(4, 13, 15), bool], Tensor[(8, 9, 15), float32]) {
  %908 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 78), float64] */, dtype="float64") /* ty=Tensor[(7, 78), float64] */;
  %909 = reshape(%908, newshape=[546]) /* ty=Tensor[(546), float64] */;
  %910 = @func_6302(%909) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64], Tensor[(546), float64]) */;
  %911 = cast(%var_18107, dtype="float64") /* ty=Tensor[(8, 24), float64] */;
  %912 = reshape(%911, newshape=[4, 8, 6]) /* ty=Tensor[(4, 8, 6), float64] */;
  %913 = @func_16521(%912) /* ty=(Tensor[(4, 8, 6), int8], Tensor[(84), float32], Tensor[(546), uint64]) */;
  %914 = @func_8640() /* ty=(Tensor[(84), float32],) */;
  %915 = cast(%var_18135, dtype="bool") /* ty=Tensor[(560), bool] */;
  %916 = reshape(%915, newshape=[1, 560]) /* ty=Tensor[(1, 560), bool] */;
  %917 = @func_16821(%916) /* ty=(Tensor[(3, 14, 13), float64], Tensor[(10, 14, 4), bool], Tensor[(1, 560), float64], Tensor[(3, 14, 13), uint64], Tensor[(3, 14, 13), uint64]) */;
  %918 = cast(%var_18076, dtype="bool") /* ty=Tensor[(4, 13, 15), bool] */;
  %919 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(4, 13, 15), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 13, 15), bool] */, dtype="bool") /* ty=Tensor[(4, 13, 15), bool] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %922 = logical_and(%920, %921) /* ty=Tensor[(4, 13, 15), bool] */;
  %923 = cast(%922, dtype="float64") /* ty=Tensor[(4, 13, 15), float64] */;
  %924 = asinh(%923) /* ty=Tensor[(4, 13, 15), float64] */;
  %925 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 13, 15), bool] */, dtype="bool") /* ty=Tensor[(4, 13, 15), bool] */;
  %926 = shape_of(%924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %927 = cast(%924, dtype="bool") /* ty=Tensor[(4, 13, 15), bool] */;
  %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %929 = @func_7754() /* ty=(Tensor[(8, 9, 15), float32],) */;
  %930 = %910.2;
  %931 = %913.0;
  %932 = %914.0;
  %933 = %917.1;
  %934 = greater(%927, %928) /* ty=Tensor[(4, 13, 15), bool] */;
  %935 = %929.0;
  (%930, meta[relay.Constant][40] /* ty=Tensor[(7, 78), float64] */, %931, %var_18107, %932, %933, %var_18135, %934, %935)
}

def @func_9850() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(512), uint64]) {
  %936 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
  %937 = cast(meta[relay.Constant][42] /* ty=Tensor[(512), uint64] */, dtype="uint64") /* ty=Tensor[(512), uint64] */;
  %938 = reshape(%937, newshape=[512, 1]) /* ty=Tensor[(512, 1), uint64] */;
  %939 = @func_3947(%938) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(8, 16), uint64], Tensor[(512, 1), uint64]) */;
  %940 = %936.1;
  %941 = %939.3;
  (%940, %941, meta[relay.Constant][42] /* ty=Tensor[(512), uint64] */)
}

def @func_16951() -> (Tensor[(3, 14, 13), float64],) {
  %942 = @func_8208() /* ty=(Tensor[(3, 14, 13), float64],) */;
  %943 = %942.0;
  (%943,)
}

def @func_3201() -> Tensor[(2, 180), float32] {
  %944 = @func_3109() /* ty=(Tensor[(2, 180), uint16],) */;
  %945 = %944.0;
  %946 = cast(%945, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
  log2(%946) /* ty=Tensor[(2, 180), float32] */
}

def @func_3854() -> (Tensor[(546), uint64],) {
  %947 = @func_1930() /* ty=Tensor[(546), uint64] */;
  (%947,)
}

def @func_6517() -> (Tensor[(16, 8, 3), uint16],) {
  %948 = @func_5547() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(16, 8, 3), uint16], Tensor[(1, 384), float64]) */;
  %949 = %948.1;
  (%949,)
}

def @func_12546() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) {
  %950 = @func_11267() /* ty=(Tensor[(546), uint64],) */;
  %951 = @func_4385() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %952 = %950.0;
  %953 = %951.0;
  (%952, %953)
}

def @func_14292() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) {
  %954 = @func_11728() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %955 = @func_6730() /* ty=(Tensor[(3, 14, 13), float64],) */;
  %956 = @func_4501() /* ty=(Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %957 = %954.0;
  %958 = %955.0;
  %959 = %956.2;
  (%957, %958, %959)
}

def @func_4636() -> (Tensor[(84), float32],) {
  %960 = @func_3243() /* ty=Tensor[(84), float32] */;
  (%960,)
}

def @func_3390() -> Tensor[(84), float32] {
  @func_2434() /* ty=Tensor[(84), float32] */
}

def @func_2557() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) {
  %961 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
  %962 = cast(%961, dtype="float64") /* ty=Tensor[(3, 14, 13), float64] */;
  %963 = @func_1878() /* ty=Tensor[(546), uint64] */;
  %964 = acos(%962) /* ty=Tensor[(3, 14, 13), float64] */;
  (%963, %964)
}

def @func_5104() -> (Tensor[(8, 9, 15), float64], Tensor[(2, 180), bool]) {
  %965 = @func_3150() /* ty=Tensor[(8, 9, 15), float64] */;
  %966 = @func_3014() /* ty=Tensor[(2, 180), bool] */;
  (%965, %966)
}

def @func_12582() -> Tensor[(3, 14, 13), uint64] {
  %967 = @func_6419() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %967.0
}

def @func_11915() -> (Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) {
  %968 = @func_4385() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %969 = @func_6333() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %970 = %968.0;
  %971 = %969.1;
  (%970, %971)
}

def @func_6302(%var_6283: Tensor[(546), float64]) -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64], Tensor[(546), float64]) {
  %972 = @func_5170() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %973 = cast(%var_6283, dtype="float64") /* ty=Tensor[(546), float64] */;
  %974 = reshape(%973, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), float64] */;
  %975 = @func_5199(%974) /* ty=(Tensor[(3, 14, 13), float32], Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float64]) */;
  %976 = %972.0;
  %977 = %975.2;
  (%976, %977, %var_6283)
}

def @func_11005() -> (Tensor[(84), float32],) {
  %978 = @func_8640() /* ty=(Tensor[(84), float32],) */;
  %979 = %978.0;
  (%979,)
}

def @func_14965(%var_14952: Tensor[(192), int64], %var_14953: Tensor[(1536), int64]) -> (Tensor[(512), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(1536), int64]) {
  %980 = @func_13918() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(512), uint64]) */;
  %981 = @func_2459() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) */;
  %982 = cast(%var_14952, dtype="int64") /* ty=Tensor[(192), int64] */;
  %983 = cast(%var_14953, dtype="int64") /* ty=Tensor[(1536), int64] */;
  %984 = reshape(%982, newshape=[16, 12, 1]) /* ty=Tensor[(16, 12, 1), int64] */;
  %985 = reshape(%983, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), int64] */;
  %986 = %980.1;
  %987 = %981.1;
  %988 = @func_2787() /* ty=Tensor[(546), uint64] */;
  %989 = @func_2913(%984, %985) /* ty=Tensor[(16, 12, 8), int64] */;
  (%986, %987, %988, %989, %var_14952, %var_14953)
}

def @func_15588() -> (Tensor[(546), uint64],) {
  %990 = @func_8952() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %991 = %990.3;
  (%991,)
}

def @func_5547() -> (Tensor[(3, 14, 13), uint64], Tensor[(16, 8, 3), uint16], Tensor[(1, 384), float64]) {
  %992 = @func_4385() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %993 = %992.0;
  %994 = cast(%993, dtype="float32") /* ty=Tensor[(3, 14, 13), float32] */;
  %995 = asinh(%994) /* ty=Tensor[(3, 14, 13), float32] */;
  %996 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 14, 13), float32] */, dtype="uint64") /* ty=Tensor[(3, 14, 13), uint64] */;
  %997 = shape_of(%995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %998 = cast(%995, dtype="uint64") /* ty=Tensor[(3, 14, 13), uint64] */;
  %999 = dyn.reshape(%996, %997, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1000 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 384), float64] */, dtype="float64") /* ty=Tensor[(1, 384), float64] */;
  %1001 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 384), float64] */, dtype="float64") /* ty=Tensor[(1, 384), float64] */;
  %1002 = reshape(%1000, newshape=[16, 8, 3]) /* ty=Tensor[(16, 8, 3), float64] */;
  %1003 = reshape(%1001, newshape=[16, 8, 3]) /* ty=Tensor[(16, 8, 3), float64] */;
  %1004 = @func_4284(%1002, %1003) /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16]) */;
  %1005 = subtract(%998, %999) /* ty=Tensor[(3, 14, 13), uint64] */;
  %1006 = %1004.2;
  (%1005, %1006, meta[relay.Constant][44] /* ty=Tensor[(1, 384), float64] */)
}

def @func_8833(%var_8747: uint16, %var_8748: Tensor[(28), uint16], %var_8750: Tensor[(512), uint64], %var_8806: Tensor[(360), float32]) -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64], uint16, Tensor[(28), uint16], Tensor[(128), uint64], Tensor[(512), uint64], Tensor[(84), float32], Tensor[(2, 4, 5), float32], Tensor[(40), float32], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(360), float32], Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) {
  %1007 = @func_3982() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
  %1008 = %1007.1;
  %1009 = cast(%1008, dtype="float64") /* ty=Tensor[(8, 9, 15), float64] */;
  %1010 = cast(%var_8747, dtype="uint16") /* ty=uint16 */;
  %1011 = cast(%var_8748, dtype="uint16") /* ty=Tensor[(28), uint16] */;
  %1012 = cast(meta[relay.Constant][45] /* ty=Tensor[(128), uint64] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %1013 = cast(%var_8750, dtype="uint64") /* ty=Tensor[(512), uint64] */;
  %1014 = reshape(%1010, newshape=[]) /* ty=uint16 */;
  %1015 = reshape(%1011, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), uint16] */;
  %1016 = reshape(%1012, newshape=[128]) /* ty=Tensor[(128), uint64] */;
  %1017 = reshape(%1013, newshape=[512]) /* ty=Tensor[(512), uint64] */;
  %1018 = @func_3796(%1014, %1015, %1016, %1017) /* ty=(Tensor[(4, 1, 7), uint16], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %1019 = cast(meta[relay.Constant][46] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1020 = reshape(%1019, newshape=[2, 4, 5]) /* ty=Tensor[(2, 4, 5), float32] */;
  %1021 = @func_3376(%1020) /* ty=(Tensor[(2, 4, 5), float32], Tensor[(84), float32]) */;
  %1022 = @func_3854() /* ty=(Tensor[(546), uint64],) */;
  %1023 = @func_2871() /* ty=(Tensor[(84), float32],) */;
  %1024 = cast(%var_8806, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1025 = cast(meta[relay.Constant][45] /* ty=Tensor[(128), uint64] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %1026 = reshape(%1024, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %1027 = reshape(%1025, newshape=[128]) /* ty=Tensor[(128), uint64] */;
  %1028 = @func_3673(%1026, %1027) /* ty=(Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(512), uint64], Tensor[(7, 1, 12), float32], Tensor[(8, 3, 15), float32], Tensor[(360), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(128), float64]) */;
  %1029 = @func_2871() /* ty=(Tensor[(84), float32],) */;
  %1030 = @func_4385() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %1031 = asin(%1009) /* ty=Tensor[(8, 9, 15), float64] */;
  %1032 = %1018.3;
  %1033 = @func_4948() /* ty=Tensor[(84), float32] */;
  %1034 = %1021.0;
  %1035 = %1022.0;
  %1036 = %1023.0;
  %1037 = %1028.0;
  %1038 = %1029.0;
  %1039 = %1030.0;
  (%1031, %1032, %var_8747, %var_8748, meta[relay.Constant][45] /* ty=Tensor[(128), uint64] */, %var_8750, %1033, %1034, meta[relay.Constant][46] /* ty=Tensor[(40), float32] */, %1035, %1036, %1037, %var_8806, %1038, %1039)
}

def @func_18430() -> Tensor[(84), float32] {
  %1040 = @func_8640() /* ty=(Tensor[(84), float32],) */;
  %1040.0
}

def @func_11758(%var_11732: Tensor[(16, 7, 14), int8], %var_11733: Tensor[(16, 7, 14), int8]) -> (Tensor[(16, 7, 14), int8], Tensor[(3, 14, 13), uint64]) {
  %1041 = cast(%var_11733, dtype="int8") /* ty=Tensor[(16, 7, 14), int8] */;
  %1042 = shape_of(%var_11732, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1043 = cast(%var_11732, dtype="int8") /* ty=Tensor[(16, 7, 14), int8] */;
  %1044 = dyn.reshape(%1041, %1042, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1045 = @func_5474() /* ty=(Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) */;
  %1046 = bitwise_xor(%1043, %1044) /* ty=Tensor[(16, 7, 14), int8] */;
  %1047 = %1045.5;
  (%1046, %1047)
}

def @func_8952() -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) {
  %1048 = @func_5141() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1049 = @func_8640() /* ty=(Tensor[(84), float32],) */;
  %1050 = @func_1834() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %1051 = @func_7331() /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1052 = cast(meta[relay.Constant][47] /* ty=Tensor[(128), uint64] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %1053 = cast(meta[relay.Constant][48] /* ty=Tensor[(512), uint64] */, dtype="uint64") /* ty=Tensor[(512), uint64] */;
  %1054 = reshape(%1052, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), uint64] */;
  %1055 = reshape(%1053, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), uint64] */;
  %1056 = %1048.3;
  %1057 = %1049.0;
  %1058 = %1050.1;
  %1059 = %1051.1;
  %1060 = @func_3037(%1054, %1055) /* ty=Tensor[(16, 8, 4), uint64] */;
  (%1056, %1057, %1058, %1059, %1060, meta[relay.Constant][47] /* ty=Tensor[(128), uint64] */, meta[relay.Constant][48] /* ty=Tensor[(512), uint64] */)
}

def @func_10678() -> (Tensor[(546), uint64],) {
  %1061 = @func_10449() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
  %1062 = %1061.1;
  (%1062,)
}

def @func_4074() -> Tensor[(546), uint64] {
  %1063 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %1063.1
}

def @func_6161(%var_6153: int16, %var_6154: Tensor[(4, 2, 2), int16]) -> (Tensor[(4, 2, 2), int16], Tensor[(546), uint64]) {
  %1064 = cast(%var_6153, dtype="int16") /* ty=int16 */;
  %1065 = cast(%var_6154, dtype="int16") /* ty=Tensor[(4, 2, 2), int16] */;
  %1066 = add(%1064, %1065) /* ty=Tensor[(4, 2, 2), int16] */;
  %1067 = @func_1878() /* ty=Tensor[(546), uint64] */;
  (%1066, %1067)
}

def @func_12511() -> Tensor[(8, 9, 15), float32] {
  %1068 = @func_7754() /* ty=(Tensor[(8, 9, 15), float32],) */;
  %1068.0
}

def @func_1834() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) {
  %1069 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %1070 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %1071 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %1072 = %1069.0;
  %1073 = %1070.0;
  %1074 = %1071.1;
  (%1072, %1073, %1074)
}

def @func_10881(%var_10813: Tensor[(4, 7, 4), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float32]) {
  %1075 = cast(%var_10813, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %1076 = sin(%1075) /* ty=Tensor[(4, 7, 4), float32] */;
  %1077 = cast(%1076, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %1078 = @func_8310() /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1079 = @func_9386() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float32]) */;
  %1080 = sinh(%1077) /* ty=Tensor[(4, 7, 4), float32] */;
  %1081 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
  %1082 = %1078.2;
  %1083 = %1079.1;
  (%1080, %1081, %1082, %1083)
}

def @func_14376() -> (Tensor[(546), uint64],) {
  %1084 = @func_3217() /* ty=Tensor[(546), uint64] */;
  (%1084,)
}

def @func_16153() -> (Tensor[(84), float32],) {
  %1085 = @func_6333() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %1086 = %1085.1;
  (%1086,)
}

def @func_2567() -> (Tensor[(546), uint64],) {
  %1087 = @func_2129() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1088 = %1087.1;
  (%1088,)
}

def @func_4025() -> Tensor[(3, 14, 13), float64] {
  %1089 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
  %1090 = cast(%1089, dtype="float64") /* ty=Tensor[(3, 14, 13), float64] */;
  log(%1090) /* ty=Tensor[(3, 14, 13), float64] */
}

def @func_4348() -> Tensor[(3, 14, 13), float64] {
  %1091 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
  %1092 = cast(%1091, dtype="float64") /* ty=Tensor[(3, 14, 13), float64] */;
  atanh(%1092) /* ty=Tensor[(3, 14, 13), float64] */
}

def @func_11630() -> (Tensor[(4, 1, 13), bool], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(84), float32], Tensor[(8, 9, 15), float32]) {
  %1093 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1094 = cast(meta[relay.Constant][49] /* ty=Tensor[(4, 1, 13), bool] */, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %1095 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1096 = @func_9943() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1097 = @func_6730() /* ty=(Tensor[(3, 14, 13), float64],) */;
  %1098 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %1099 = @func_10199() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(3, 14, 13), uint64]) */;
  %1100 = logical_or(%1093, %1094) /* ty=Tensor[(4, 1, 13), bool] */;
  %1101 = %1095.1;
  %1102 = %1096.2;
  %1103 = %1097.0;
  %1104 = %1098.0;
  %1105 = %1099.0;
  (%1100, %1101, %1102, %1103, %1104, %1105)
}

def @func_18283() -> (Tensor[(3, 14, 13), uint64],) {
  %1106 = @func_2521() /* ty=(Tensor[(546), uint64], Tensor[(546), float64], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32]) */;
  %1107 = %1106.2;
  (%1107,)
}

def @func_6333() -> (Tensor[(546), uint64], Tensor[(84), float32]) {
  %1108 = @func_2567() /* ty=(Tensor[(546), uint64],) */;
  %1109 = @func_2459() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) */;
  %1110 = %1108.0;
  %1111 = %1109.0;
  (%1110, %1111)
}

def @func_13167(%var_13159: Tensor[(5, 6, 11), float32]) -> (Tensor[(5, 6, 11), float32],) {
  %1112 = cast(%var_13159, dtype="float32") /* ty=Tensor[(5, 6, 11), float32] */;
  %1113 = acos(%1112) /* ty=Tensor[(5, 6, 11), float32] */;
  (%1113,)
}

def @func_10269() -> Tensor[(546), uint64] {
  %1114 = @func_3432() /* ty=(Tensor[(546), uint64],) */;
  %1114.0
}

def @func_17604() -> (Tensor[(3, 14, 13), float64], Tensor[(84), float32]) {
  %1115 = @func_5996() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(2, 180), bool]) */;
  %1116 = @func_16032() /* ty=Tensor[(3, 14, 13), float64] */;
  %1117 = %1115.1;
  (%1116, %1117)
}

def @func_16759(%var_16753: Tensor[(10, 4, 9), uint16]) -> (Tensor[(10, 4, 9), bool],) {
  %1118 = cast(%var_16753, dtype="bool") /* ty=Tensor[(10, 4, 9), bool] */;
  %1119 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(10, 4, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1120 = cast(meta[relay.Constant][50] /* ty=Tensor[(10, 4, 9), uint16] */, dtype="bool") /* ty=Tensor[(10, 4, 9), bool] */;
  %1121 = dyn.reshape(%1118, %1119, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1122 = less_equal(%1120, %1121) /* ty=Tensor[(10, 4, 9), bool] */;
  (%1122,)
}

def @func_1930() -> Tensor[(546), uint64] {
  %1123 = @func_1632() /* ty=(Tensor[(546), uint64],) */;
  %1123.0
}

def @func_6955() -> (Tensor[(84), float32], Tensor[(546), uint64]) {
  %1124 = @func_2871() /* ty=(Tensor[(84), float32],) */;
  %1125 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %1126 = %1124.0;
  %1127 = %1125.2;
  (%1126, %1127)
}

def @func_4385() -> (Tensor[(3, 14, 13), uint64],) {
  %1128 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
  (%1128,)
}

def @func_3376(%var_3358: Tensor[(2, 4, 5), float32]) -> (Tensor[(2, 4, 5), float32], Tensor[(84), float32]) {
  %1129 = cast(%var_3358, dtype="float32") /* ty=Tensor[(2, 4, 5), float32] */;
  %1130 = rsqrt(%1129) /* ty=Tensor[(2, 4, 5), float32] */;
  %1131 = @func_2434() /* ty=Tensor[(84), float32] */;
  (%1130, %1131)
}

def @func_15832() -> Tensor[(3, 14, 13), uint64] {
  %1132 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %1132.0
}

def @func_1485() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) {
  %1133 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %1134 = cast(meta[relay.Constant][51] /* ty=Tensor[(546), uint64] */, dtype="uint64") /* ty=Tensor[(546), uint64] */;
  %1135 = reshape(%1134, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), uint64] */;
  %1136 = cast(meta[relay.Constant][52] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1137 = reshape(%1136, newshape=[7, 1, 12]) /* ty=Tensor[(7, 1, 12), float32] */;
  %1138 = @func_193(%1137) /* ty=(Tensor[(7, 1, 12), float32],) */;
  %1139 = %1133.0;
  %1140 = @func_96(%1135) /* ty=Tensor[(3, 14, 13), uint64] */;
  %1141 = %1138.0;
  (%1139, %1140, meta[relay.Constant][51] /* ty=Tensor[(546), uint64] */, %1141, meta[relay.Constant][52] /* ty=Tensor[(84), float32] */)
}

def @func_11495() -> (Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(3, 14, 13), int64], Tensor[(3, 14, 13), float64]) {
  %1142 = @func_6955() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
  %1143 = @func_5141() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1144 = @func_7616() /* ty=(Tensor[(546), uint64],) */;
  %1145 = @func_5617() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(3, 14, 13), uint64]) */;
  %1146 = @func_4521() /* ty=(Tensor[(3, 14, 13), int64], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) */;
  %1147 = @func_8208() /* ty=(Tensor[(3, 14, 13), float64],) */;
  %1148 = %1142.0;
  %1149 = %1143.0;
  %1150 = %1144.0;
  %1151 = %1145.0;
  %1152 = %1146.0;
  %1153 = %1147.0;
  (%1148, %1149, %1150, %1151, %1152, %1153)
}

def @func_6247() -> (Tensor[(8, 9, 15), float64], Tensor[(2, 180), uint16], Tensor[(546), uint64]) {
  %1154 = @func_3982() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
  %1155 = @func_3109() /* ty=(Tensor[(2, 180), uint16],) */;
  %1156 = %1154.0;
  %1157 = %1155.0;
  %1158 = @func_4231() /* ty=Tensor[(546), uint64] */;
  (%1156, %1157, %1158)
}

def @func_17411() -> Tensor[(84), float32] {
  %1159 = @func_4686() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), int64]) */;
  %1159.0
}

def @func_13955() -> (Tensor[(1, 384), float64],) {
  %1160 = @func_5547() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(16, 8, 3), uint16], Tensor[(1, 384), float64]) */;
  %1161 = %1160.2;
  (%1161,)
}

def @func_17792(%var_17781: Tensor[(10, 12, 13), float64], %var_17782: Tensor[(10, 12, 13), float64], %var_17790: Tensor[(84), float32]) -> (Tensor[(10, 12, 13), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) {
  %1162 = cast(%var_17782, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
  %1163 = shape_of(%var_17781, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1164 = cast(%var_17781, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
  %1165 = dyn.reshape(%1162, %1163, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1166 = cast(%var_17790, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1167 = reshape(%1166, newshape=[7, 1, 12]) /* ty=Tensor[(7, 1, 12), float32] */;
  %1168 = @func_193(%1167) /* ty=(Tensor[(7, 1, 12), float32],) */;
  %1169 = multiply(%1164, %1165) /* ty=Tensor[(10, 12, 13), float64] */;
  %1170 = %1168.0;
  (%1169, %1170, %var_17790)
}

def @func_3243() -> Tensor[(84), float32] {
  @func_2195() /* ty=Tensor[(84), float32] */
}

def @func_4231() -> Tensor[(546), uint64] {
  %1171 = @func_2401() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1171.3
}

def @func_2871() -> (Tensor[(84), float32],) {
  %1172 = @func_2195() /* ty=Tensor[(84), float32] */;
  (%1172,)
}

def @func_8352() -> (Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) {
  %1173 = @func_3854() /* ty=(Tensor[(546), uint64],) */;
  %1174 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
  %1175 = %1173.0;
  (%1174, %1175)
}

def @func_3947(%var_3931: Tensor[(512, 1), uint64]) -> (Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(8, 16), uint64], Tensor[(512, 1), uint64]) {
  %1176 = @func_2617() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %1177 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %1178 = @func_2739() /* ty=(Tensor[(84), float32], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32], Tensor[(546), uint64]) */;
  %1179 = @func_2757() /* ty=(Tensor[(546), uint64],) */;
  %1180 = cast(meta[relay.Constant][53] /* ty=Tensor[(8, 16), uint64] */, dtype="uint64") /* ty=Tensor[(8, 16), uint64] */;
  %1181 = cast(%var_3931, dtype="uint64") /* ty=Tensor[(512, 1), uint64] */;
  %1182 = reshape(%1180, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), uint64] */;
  %1183 = reshape(%1181, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), uint64] */;
  %1184 = %1176.0;
  %1185 = %1177.2;
  %1186 = %1178.1;
  %1187 = %1179.0;
  %1188 = @func_3037(%1182, %1183) /* ty=Tensor[(16, 8, 4), uint64] */;
  (%1184, %1185, %1186, %1187, %1188, meta[relay.Constant][53] /* ty=Tensor[(8, 16), uint64] */, %var_3931)
}

def @func_10582() -> Tensor[(84), float32] {
  %1189 = @func_9736() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(546), uint64]) */;
  %1189.2
}

def @func_1878() -> Tensor[(546), uint64] {
  %1190 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %1190.1
}

def @func_3598() -> (Tensor[(3, 14, 13), float64],) {
  %1191 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
  %1192 = cast(%1191, dtype="float64") /* ty=Tensor[(3, 14, 13), float64] */;
  %1193 = exp(%1192) /* ty=Tensor[(3, 14, 13), float64] */;
  (%1193,)
}

def @func_9621(%var_9595: Tensor[(2, 180), uint16], %var_9614: Tensor[(2, 180), uint16]) -> (Tensor[(2, 180), int16], Tensor[(2, 180), float64]) {
  %1194 = @func_3457() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) */;
  %1195 = %1194.1;
  %1196 = cast(%var_9595, dtype="uint16") /* ty=Tensor[(2, 180), uint16] */;
  %1197 = shape_of(%1195, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1198 = cast(%1195, dtype="uint16") /* ty=Tensor[(2, 180), uint16] */;
  %1199 = dyn.reshape(%1196, %1197, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1200 = minimum(%1198, %1199) /* ty=Tensor[(2, 180), uint16] */;
  %1201 = cast(%1200, dtype="int16") /* ty=Tensor[(2, 180), int16] */;
  %1202 = shape_of(%var_9595, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1203 = cast(%var_9595, dtype="int16") /* ty=Tensor[(2, 180), int16] */;
  %1204 = dyn.reshape(%1201, %1202, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1205 = cast(%var_9614, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
  %1206 = shape_of(%1200, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1207 = cast(%1200, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
  %1208 = dyn.reshape(%1205, %1206, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1209 = left_shift(%1203, %1204) /* ty=Tensor[(2, 180), int16] */;
  %1210 = divide(%1207, %1208) /* ty=Tensor[(2, 180), float64] */;
  (%1209, %1210)
}

def @func_3796(%var_3714: uint16, %var_3715: Tensor[(4, 1, 7), uint16], %var_3786: Tensor[(128), uint64], %var_3787: Tensor[(512), uint64]) -> (Tensor[(4, 1, 7), uint16], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) {
  %1211 = cast(%var_3714, dtype="uint16") /* ty=uint16 */;
  %1212 = cast(%var_3715, dtype="uint16") /* ty=Tensor[(4, 1, 7), uint16] */;
  %1213 = @func_2459() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) */;
  %1214 = @func_1632() /* ty=(Tensor[(546), uint64],) */;
  %1215 = @func_1948() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %1216 = cast(%var_3786, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %1217 = cast(%var_3787, dtype="uint64") /* ty=Tensor[(512), uint64] */;
  %1218 = reshape(%1216, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), uint64] */;
  %1219 = reshape(%1217, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), uint64] */;
  %1220 = logical_xor(%1211, %1212) /* ty=Tensor[(4, 1, 7), uint16] */;
  %1221 = %1213.1;
  %1222 = %1214.0;
  %1223 = @func_3217() /* ty=Tensor[(546), uint64] */;
  %1224 = @func_3165() /* ty=Tensor[(8, 9, 15), float64] */;
  %1225 = %1215.2;
  %1226 = @func_3037(%1218, %1219) /* ty=Tensor[(16, 8, 4), uint64] */;
  (%1220, %1221, %1222, %1223, %1224, %1225, %1226, %var_3786, %var_3787)
}

def @func_1649() -> (Tensor[(84), float32],) {
  %1227 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %1228 = %1227.4;
  (%1228,)
}

def @func_4814() -> (Tensor[(546), uint64],) {
  %1229 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %1230 = %1229.1;
  (%1230,)
}

def @func_17406() -> (Tensor[(84), float32], Tensor[(8, 9, 15), int32], Tensor[(112), float32], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), bool], Tensor[(546), float64], Tensor[(84), float32]) {
  %1231 = @func_8490() /* ty=(Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), uint16], Tensor[(3, 14, 13), float64]) */;
  %1232 = cast(meta[relay.Constant][54] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %1233 = reshape(%1232, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %1234 = @func_16088(%1233) /* ty=(Tensor[(8, 9, 15), int32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(112), float32]) */;
  %1235 = cast(meta[relay.Constant][55] /* ty=Tensor[(546), float64] */, dtype="float64") /* ty=Tensor[(546), float64] */;
  %1236 = reshape(%1235, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), float64] */;
  %1237 = @func_5199(%1236) /* ty=(Tensor[(3, 14, 13), float32], Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float64]) */;
  %1238 = @func_13562() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) */;
  %1239 = %1231.3;
  %1240 = %1234.0;
  %1241 = @func_3315() /* ty=Tensor[(8, 9, 15), float64] */;
  %1242 = %1237.1;
  %1243 = %1238.2;
  (%1239, %1240, meta[relay.Constant][54] /* ty=Tensor[(112), float32] */, %1241, %1242, meta[relay.Constant][55] /* ty=Tensor[(546), float64] */, %1243)
}

def @func_15347() -> (Tensor[(3, 14, 13), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) {
  %1244 = @func_12582() /* ty=Tensor[(3, 14, 13), uint64] */;
  %1245 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
  %1246 = @func_1930() /* ty=Tensor[(546), uint64] */;
  (%1244, %1245, %1246)
}

def @func_5199(%var_5183: Tensor[(3, 14, 13), float64]) -> (Tensor[(3, 14, 13), float32], Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float64]) {
  %1247 = @func_2557() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */;
  %1248 = %1247.1;
  %1249 = cast(meta[relay.Constant][56] /* ty=Tensor[(3, 14, 13), float64] */, dtype="float32") /* ty=Tensor[(3, 14, 13), float32] */;
  %1250 = shape_of(%1248, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1251 = cast(%1248, dtype="float32") /* ty=Tensor[(3, 14, 13), float32] */;
  %1252 = dyn.reshape(%1249, %1250, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1253 = cast(%var_5183, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %1254 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(3, 14, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1255 = cast(meta[relay.Constant][56] /* ty=Tensor[(3, 14, 13), float64] */, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %1256 = dyn.reshape(%1253, %1254, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1257 = floor_mod(%1251, %1252) /* ty=Tensor[(3, 14, 13), float32] */;
  %1258 = greater(%1255, %1256) /* ty=Tensor[(3, 14, 13), bool] */;
  %1259 = @func_4348() /* ty=Tensor[(3, 14, 13), float64] */;
  (%1257, %1258, %1259)
}

def @func_8640() -> (Tensor[(84), float32],) {
  %1260 = @func_4636() /* ty=(Tensor[(84), float32],) */;
  %1261 = %1260.0;
  (%1261,)
}

def @func_1632() -> (Tensor[(546), uint64],) {
  %1262 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %1263 = %1262.2;
  (%1263,)
}

def @func_2459() -> (Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) {
  %1264 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %1265 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %1266 = %1264.0;
  %1267 = %1265.0;
  (%1266, %1267)
}

def @func_16402(%var_16392: Tensor[(2, 12, 1), float64]) -> (Tensor[(2, 12, ?), float64], Tensor[(2, 12, 1), float32]) {
  %1268 = cast(%var_16392, dtype="float64") /* ty=Tensor[(2, 12, 1), float64] */;
  %1269 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(2, 12, 1), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1270 = cast(meta[relay.Constant][57] /* ty=Tensor[(2, 12, 1), float64] */, dtype="float64") /* ty=Tensor[(2, 12, 1), float64] */;
  %1271 = dyn.reshape(%1268, %1269, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1272 = cast(%var_16392, dtype="float32") /* ty=Tensor[(2, 12, 1), float32] */;
  %1273 = floor_divide(%1270, %1271) /* ty=Tensor[(2, 12, ?), float64] */;
  %1274 = log10(%1272) /* ty=Tensor[(2, 12, 1), float32] */;
  (%1273, %1274)
}

def @func_9659() -> Tensor[(2, 180), bool] {
  %1275 = @func_5104() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), bool]) */;
  %1275.1
}

def @func_7331() -> (Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %1276 = @func_4853() /* ty=(Tensor[(546), uint64],) */;
  %1277 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
  %1278 = @func_3390() /* ty=Tensor[(84), float32] */;
  %1279 = %1276.0;
  %1280 = %1277.1;
  (%1278, %1279, %1280)
}

def @func_14420() -> Tensor[(546), uint64] {
  %1281 = @func_3854() /* ty=(Tensor[(546), uint64],) */;
  %1281.0
}

def @func_6199() -> Tensor[(84), float32] {
  %1282 = @func_2401() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1282.1
}

def @func_14535() -> Tensor[(546), uint64] {
  %1283 = @func_10678() /* ty=(Tensor[(546), uint64],) */;
  %1283.0
}

def @func_13702() -> (Tensor[(84), float32],) {
  %1284 = @func_10386() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %1285 = %1284.1;
  (%1285,)
}

def @func_11532(%var_11511: Tensor[(5, 11, 14), int32], %var_11512: Tensor[(5, 11, 14), int32]) -> (Tensor[(5, 11, 14), int32], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(546), uint64]) {
  %1286 = cast(%var_11512, dtype="int32") /* ty=Tensor[(5, 11, 14), int32] */;
  %1287 = shape_of(%var_11511, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1288 = cast(%var_11511, dtype="int32") /* ty=Tensor[(5, 11, 14), int32] */;
  %1289 = dyn.reshape(%1286, %1287, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1290 = @func_5547() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(16, 8, 3), uint16], Tensor[(1, 384), float64]) */;
  %1291 = @func_7000() /* ty=(Tensor[(84), float32], Tensor[(16, 8, 3), uint16]) */;
  %1292 = @func_4138() /* ty=(Tensor[(546), uint64],) */;
  %1293 = right_shift(%1288, %1289) /* ty=Tensor[(5, 11, 14), int32] */;
  %1294 = %1290.0;
  %1295 = %1291.0;
  %1296 = %1292.0;
  (%1293, %1294, %1295, %1296)
}

def @func_15733() -> Tensor[(546), uint64] {
  %1297 = @func_12546() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) */;
  %1297.0
}

def @func_4284(%var_4234: Tensor[(16, 8, 3), float64], %var_4246: Tensor[(16, 8, 3), float64]) -> (Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16]) {
  %1298 = cast(%var_4234, dtype="float64") /* ty=Tensor[(16, 8, 3), float64] */;
  %1299 = acos(%1298) /* ty=Tensor[(16, 8, 3), float64] */;
  %1300 = cast(%var_4246, dtype="uint32") /* ty=Tensor[(16, 8, 3), uint32] */;
  %1301 = shape_of(%1299, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1302 = cast(%1299, dtype="uint32") /* ty=Tensor[(16, 8, 3), uint32] */;
  %1303 = dyn.reshape(%1300, %1301, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1304 = multiply(%1302, %1303) /* ty=Tensor[(16, 8, 3), uint32] */;
  %1305 = cast(%1304, dtype="float32") /* ty=Tensor[(16, 8, 3), float32] */;
  %1306 = sinh(%1305) /* ty=Tensor[(16, 8, 3), float32] */;
  %1307 = cast(%var_4234, dtype="uint16") /* ty=Tensor[(16, 8, 3), uint16] */;
  %1308 = shape_of(%1306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1309 = cast(%1306, dtype="uint16") /* ty=Tensor[(16, 8, 3), uint16] */;
  %1310 = dyn.reshape(%1307, %1308, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1311 = @func_3243() /* ty=Tensor[(84), float32] */;
  %1312 = @func_4025() /* ty=Tensor[(3, 14, 13), float64] */;
  %1313 = minimum(%1309, %1310) /* ty=Tensor[(16, 8, 3), uint16] */;
  (%1311, %1312, %1313)
}

def @func_12661() -> Tensor[(84), float32] {
  %1314 = @func_2401() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1314.1
}

def @func_193(%var_189: Tensor[(7, 1, 12), float32]) -> (Tensor[(7, 1, 12), float32],) {
  %1315 = cast(%var_189, dtype="float32") /* ty=Tensor[(7, 1, 12), float32] */;
  %1316 = asinh(%1315) /* ty=Tensor[(7, 1, 12), float32] */;
  (%1316,)
}

def @func_5329() -> (Tensor[(8, 9, 15), float64],) {
  %1317 = @func_3982() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
  %1318 = %1317.0;
  %1319 = cast(%1318, dtype="float64") /* ty=Tensor[(8, 9, 15), float64] */;
  %1320 = cosh(%1319) /* ty=Tensor[(8, 9, 15), float64] */;
  (%1320,)
}

def @func_16335() -> (Tensor[(84), float32], Tensor[(330, 1), float32], Tensor[(512), uint64], Tensor[(5, 6, 11), float32]) {
  %1321 = @func_9850() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(512), uint64]) */;
  %1322 = cast(meta[relay.Constant][58] /* ty=Tensor[(330, 1), float32] */, dtype="float32") /* ty=Tensor[(330, 1), float32] */;
  %1323 = reshape(%1322, newshape=[5, 6, 11]) /* ty=Tensor[(5, 6, 11), float32] */;
  %1324 = @func_13167(%1323) /* ty=(Tensor[(5, 6, 11), float32],) */;
  %1325 = %1324.0;
  %1326 = cast(%1325, dtype="float32") /* ty=Tensor[(5, 6, 11), float32] */;
  %1327 = @func_4948() /* ty=Tensor[(84), float32] */;
  %1328 = %1321.2;
  %1329 = tan(%1326) /* ty=Tensor[(5, 6, 11), float32] */;
  (%1327, meta[relay.Constant][58] /* ty=Tensor[(330, 1), float32] */, %1328, %1329)
}

def @func_14154(%var_14057: Tensor[(48, 4), int64], %var_14073: Tensor[(48, 4), int64]) -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(16, 12, 8), int64], Tensor[(750), uint32], Tensor[(1536), int64], Tensor[(48, 4), bool], Tensor[(3, 14, 13), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) {
  %1330 = cast(meta[relay.Constant][59] /* ty=Tensor[(750), uint32] */, dtype="uint32") /* ty=Tensor[(750), uint32] */;
  %1331 = cast(meta[relay.Constant][59] /* ty=Tensor[(750), uint32] */, dtype="uint32") /* ty=Tensor[(750), uint32] */;
  %1332 = cast(%var_14057, dtype="int64") /* ty=Tensor[(48, 4), int64] */;
  %1333 = cast(meta[relay.Constant][60] /* ty=Tensor[(1536), int64] */, dtype="int64") /* ty=Tensor[(1536), int64] */;
  %1334 = reshape(%1330, newshape=[15, 10, 5]) /* ty=Tensor[(15, 10, 5), uint32] */;
  %1335 = reshape(%1331, newshape=[15, 10, 5]) /* ty=Tensor[(15, 10, 5), uint32] */;
  %1336 = reshape(%1332, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %1337 = reshape(%1333, newshape=[2, 768]) /* ty=Tensor[(2, 768), int64] */;
  %1338 = @func_6920(%1334, %1335, %1336, %1337) /* ty=(Tensor[(15, 10, 5), uint32], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(2, 768), int64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
  %1339 = cast(%var_14073, dtype="bool") /* ty=Tensor[(48, 4), bool] */;
  %1340 = shape_of(%var_14057, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1341 = cast(%var_14057, dtype="bool") /* ty=Tensor[(48, 4), bool] */;
  %1342 = dyn.reshape(%1339, %1340, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1343 = not_equal(%1341, %1342) /* ty=Tensor[(48, 4), bool] */;
  %1344 = cast(%var_14073, dtype="bool") /* ty=Tensor[(48, 4), bool] */;
  %1345 = shape_of(%1343, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1346 = cast(%1343, dtype="bool") /* ty=Tensor[(48, 4), bool] */;
  %1347 = dyn.reshape(%1344, %1345, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1348 = @func_12131() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %1349 = @func_5141() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1350 = @func_10621() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */;
  %1351 = @func_3165() /* ty=Tensor[(8, 9, 15), float64] */;
  %1352 = @func_3217() /* ty=Tensor[(546), uint64] */;
  %1353 = %1338.3;
  %1354 = logical_or(%1346, %1347) /* ty=Tensor[(48, 4), bool] */;
  %1355 = %1348.0;
  %1356 = %1349.1;
  %1357 = %1350.0;
  %1358 = @func_11564() /* ty=Tensor[(8, 9, 15), float64] */;
  (%1351, %1352, %1353, meta[relay.Constant][59] /* ty=Tensor[(750), uint32] */, meta[relay.Constant][60] /* ty=Tensor[(1536), int64] */, %1354, %1355, %1356, %1357, %1358)
}

def @func_13918() -> (Tensor[(8, 9, 15), float32], Tensor[(512), uint64]) {
  %1359 = @func_9386() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float32]) */;
  %1360 = @func_8952() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %1361 = %1359.1;
  %1362 = %1360.6;
  (%1361, %1362)
}

def @func_15286(%var_15279: Tensor[(11, 384), float32]) -> Tensor[(11, 384), float32] {
  %1363 = @func_13955() /* ty=(Tensor[(1, 384), float64],) */;
  %1364 = %1363.0;
  %1365 = cast(%1364, dtype="float32") /* ty=Tensor[(1, 384), float32] */;
  %1366 = asin(%1365) /* ty=Tensor[(1, 384), float32] */;
  %1367 = cast(%1366, dtype="float32") /* ty=Tensor[(1, 384), float32] */;
  %1368 = cast(%var_15279, dtype="float32") /* ty=Tensor[(11, 384), float32] */;
  minimum(%1367, %1368) /* ty=Tensor[(11, 384), float32] */
}

def @func_18804(%var_18788: Tensor[(28), uint16]) -> (Tensor[(84), float32], Tensor[(28), uint16], Tensor[(4, 32), uint64], Tensor[(32, 4), float64]) {
  %1369 = cast(%var_18788, dtype="uint16") /* ty=Tensor[(28), uint16] */;
  %1370 = cast(meta[relay.Constant][61] /* ty=Tensor[(4, 32), uint64] */, dtype="uint64") /* ty=Tensor[(4, 32), uint64] */;
  %1371 = reshape(%1369, newshape=[28]) /* ty=Tensor[(28), uint16] */;
  %1372 = reshape(%1370, newshape=[32, 4]) /* ty=Tensor[(32, 4), uint64] */;
  %1373 = @func_11377(%1371, %1372) /* ty=(Tensor[(546), uint64], Tensor[(4, 1, 7), uint16], uint16, Tensor[(28), uint16], Tensor[(512), uint64], Tensor[(32, 4), float64]) */;
  %1374 = %1373.5;
  %1375 = cast(%1374, dtype="float64") /* ty=Tensor[(32, 4), float64] */;
  %1376 = @func_2434() /* ty=Tensor[(84), float32] */;
  %1377 = acos(%1375) /* ty=Tensor[(32, 4), float64] */;
  (%1376, %var_18788, meta[relay.Constant][61] /* ty=Tensor[(4, 32), uint64] */, %1377)
}

def @func_7754() -> (Tensor[(8, 9, 15), float32],) {
  %1378 = @func_6678() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) */;
  %1379 = %1378.0;
  (%1379,)
}

def @func_12476() -> Tensor[(8, 9, 15), float32] {
  %1380 = @func_3457() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) */;
  %1380.0
}

def @func_5851() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) {
  %1381 = @func_4853() /* ty=(Tensor[(546), uint64],) */;
  %1382 = %1381.0;
  %1383 = cast(%1382, dtype="float64") /* ty=Tensor[(546), float64] */;
  %1384 = reshape(%1383, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), float64] */;
  %1385 = @func_5199(%1384) /* ty=(Tensor[(3, 14, 13), float32], Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float64]) */;
  %1386 = %1385.2;
  (%1382, %1386)
}

def @func_11344() -> (Tensor[(84), float32],) {
  %1387 = @func_7097() /* ty=Tensor[(84), float32] */;
  (%1387,)
}

def @func_4948() -> Tensor[(84), float32] {
  %1388 = @func_2871() /* ty=(Tensor[(84), float32],) */;
  %1388.0
}

def @func_19012(%var_19004: Tensor[(512), uint64]) -> (Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(512), uint64]) {
  %1389 = @func_17568() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1390 = cast(%var_19004, dtype="uint64") /* ty=Tensor[(512), uint64] */;
  %1391 = reshape(%1390, newshape=[512]) /* ty=Tensor[(512), uint64] */;
  %1392 = @func_10338(%1391) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %1393 = %1389.0;
  %1394 = %1392.0;
  (%1393, %1394, %var_19004)
}

def @func_16715(%var_16592: Tensor[(84), float32]) -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 3), uint16], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(16, 8, 3), uint16]) {
  %1395 = @func_8952() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %1396 = @func_9943() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1397 = cast(%var_16592, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1398 = reshape(%1397, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %1399 = @func_2686(%1398) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %1400 = @func_7000() /* ty=(Tensor[(84), float32], Tensor[(16, 8, 3), uint16]) */;
  %1401 = @func_10386() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %1402 = @func_6517() /* ty=(Tensor[(16, 8, 3), uint16],) */;
  %1403 = %1395.0;
  %1404 = %1396.1;
  %1405 = %1399.0;
  %1406 = %1400.1;
  %1407 = %1401.1;
  %1408 = @func_14771() /* ty=Tensor[(546), uint64] */;
  %1409 = %1402.0;
  (%1403, %1404, %1405, %var_16592, %1406, %1407, %1408, %1409)
}

def @func_16344() -> (Tensor[(546), uint64],) {
  %1410 = @func_12427() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1411 = %1410.2;
  (%1411,)
}

def @func_14871() -> Tensor[(84), float32] {
  @func_10582() /* ty=Tensor[(84), float32] */
}

def @func_5690() -> (Tensor[(84), float32], Tensor[(84), float32]) {
  %1412 = @func_2459() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) */;
  %1413 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %1414 = %1412.0;
  %1415 = %1413.0;
  (%1414, %1415)
}

def @func_5792() -> (Tensor[(84), float32], Tensor[(546), uint64]) {
  %1416 = @func_5026() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32]) */;
  %1417 = @func_2195() /* ty=Tensor[(84), float32] */;
  %1418 = %1416.0;
  (%1417, %1418)
}

def @func_7399() -> Tensor[(546), uint64] {
  @func_1878() /* ty=Tensor[(546), uint64] */
}

def @func_8310() -> (Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %1419 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %1420 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1421 = @func_4138() /* ty=(Tensor[(546), uint64],) */;
  %1422 = %1419.4;
  %1423 = %1420.1;
  %1424 = %1421.0;
  (%1422, %1423, %1424)
}

def @func_7347() -> Tensor[(16, 8, 3), uint16] {
  %1425 = @func_6517() /* ty=(Tensor[(16, 8, 3), uint16],) */;
  %1425.0
}

def @func_7616() -> (Tensor[(546), uint64],) {
  %1426 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %1427 = %1426.0;
  (%1427,)
}

def @func_14485() -> (Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32]) {
  %1428 = @func_2557() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */;
  %1429 = @func_2739() /* ty=(Tensor[(84), float32], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32], Tensor[(546), uint64]) */;
  %1430 = %1428.1;
  %1431 = @func_5946() /* ty=Tensor[(546), uint64] */;
  %1432 = %1429.1;
  (%1430, %1431, %1432)
}

def @func_13391() -> (Tensor[(546), uint64], Tensor[(546), uint64]) {
  %1433 = @func_5851() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */;
  %1434 = @func_3217() /* ty=Tensor[(546), uint64] */;
  %1435 = %1433.0;
  (%1434, %1435)
}

def @func_17905() -> (Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(8, 9, 15), float64]) {
  %1436 = @func_4636() /* ty=(Tensor[(84), float32],) */;
  %1437 = @func_10621() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */;
  %1438 = @func_3982() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
  %1439 = %1436.0;
  %1440 = %1437.1;
  %1441 = %1438.0;
  (%1439, %1440, %1441)
}

def @func_5996() -> (Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(2, 180), bool]) {
  %1442 = @func_5617() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(3, 14, 13), uint64]) */;
  %1443 = @func_5104() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), bool]) */;
  %1444 = %1442.1;
  %1445 = @func_2942() /* ty=Tensor[(84), float32] */;
  %1446 = %1443.1;
  (%1444, %1445, %1446)
}

def @func_3982() -> (Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) {
  %1447 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %1448 = %1447.2;
  %1449 = cast(%1448, dtype="float64") /* ty=Tensor[(8, 9, 15), float64] */;
  %1450 = sigmoid(%1449) /* ty=Tensor[(8, 9, 15), float64] */;
  %1451 = @func_3150() /* ty=Tensor[(8, 9, 15), float64] */;
  (%1450, %1451)
}

def @func_14720() -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %1452 = @func_11728() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %1453 = @func_3854() /* ty=(Tensor[(546), uint64],) */;
  %1454 = %1452.0;
  %1455 = %1453.0;
  %1456 = @func_14535() /* ty=Tensor[(546), uint64] */;
  (%1454, %1455, %1456)
}

def @func_11250() -> Tensor[(16, 8, 3), uint16] {
  @func_7347() /* ty=Tensor[(16, 8, 3), uint16] */
}

def @func_19189() -> Tensor[(546), uint64] {
  @func_2897() /* ty=Tensor[(546), uint64] */
}

def @func_4501() -> (Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %1457 = @func_3109() /* ty=(Tensor[(2, 180), uint16],) */;
  %1458 = %1457.0;
  %1459 = cast(%1458, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
  %1460 = @func_2757() /* ty=(Tensor[(546), uint64],) */;
  %1461 = log(%1459) /* ty=Tensor[(2, 180), float32] */;
  %1462 = %1460.0;
  %1463 = @func_4231() /* ty=Tensor[(546), uint64] */;
  (%1461, %1462, %1463)
}

def @func_10722() -> (Tensor[(546), uint64],) {
  %1464 = @func_10386() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %1465 = %1464.0;
  (%1465,)
}

def @func_9228() -> (Tensor[(3, 14, 13), float32], Tensor[(546), uint64]) {
  %1466 = @func_4625() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64]) */;
  %1467 = %1466.1;
  %1468 = cast(%1467, dtype="float32") /* ty=Tensor[(3, 14, 13), float32] */;
  %1469 = @func_8352() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %1470 = sqrt(%1468) /* ty=Tensor[(3, 14, 13), float32] */;
  %1471 = %1469.1;
  (%1470, %1471)
}

def @func_18469() -> Tensor[(84), float32] {
  %1472 = @func_4636() /* ty=(Tensor[(84), float32],) */;
  %1472.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_12512() -> Tensor[(8, 9, 15), float32] {
  %1 = fn () -> Tensor[(8, 9, 15), float32] {
    %0 = @func_7754() /* ty=(Tensor[(8, 9, 15), float32],) */;
    %0.0
  };
  %1() /* ty=Tensor[(8, 9, 15), float32] */
}

def @func_1367() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) {
  @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */
}

def @func_8310() -> (Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %2 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %3 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %4 = @func_4138() /* ty=(Tensor[(546), uint64],) */;
  %5 = %2.4;
  %6 = %3.1;
  %7 = %4.0;
  (%5, %6, %7)
}

def @func_2871() -> (Tensor[(84), float32],) {
  %8 = @func_2195() /* ty=Tensor[(84), float32] */;
  (%8,)
}

def @func_3947(%var_3931: Tensor[(512, 1), uint64]) -> (Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(8, 16), uint64], Tensor[(512, 1), uint64]) {
  %9 = @func_2617() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %10 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %11 = @func_2739() /* ty=(Tensor[(84), float32], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32], Tensor[(546), uint64]) */;
  %12 = @func_2757() /* ty=(Tensor[(546), uint64],) */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 16), uint64] */, dtype="uint64") /* ty=Tensor[(8, 16), uint64] */;
  %14 = cast(%var_3931, dtype="uint64") /* ty=Tensor[(512, 1), uint64] */;
  %15 = reshape(%13, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), uint64] */;
  %16 = reshape(%14, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), uint64] */;
  %17 = %9.0;
  %18 = %10.2;
  %19 = %11.1;
  %20 = %12.0;
  %21 = @func_3037(%15, %16) /* ty=Tensor[(16, 8, 4), uint64] */;
  (%17, %18, %19, %20, %21, meta[relay.Constant][0] /* ty=Tensor[(8, 16), uint64] */, %var_3931)
}

def @func_7756() -> (Tensor[(8, 9, 15), float32],) {
  @func_7754() /* ty=(Tensor[(8, 9, 15), float32],) */
}

def @func_6957() -> (Tensor[(84), float32], Tensor[(546), uint64]) {
  @func_6955() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */
}

def @func_11761(%var_11759: Tensor[(16, 7, 14), int8], %var_11760: Tensor[(16, 7, 14), int8]) -> (Tensor[(16, 7, 14), int8], Tensor[(3, 14, 13), uint64]) {
  %29 = fn (%var_11732: Tensor[(16, 7, 14), int8], %var_11733: Tensor[(16, 7, 14), int8]) -> (Tensor[(16, 7, 14), int8], Tensor[(3, 14, 13), uint64]) {
    %22 = cast(%var_11733, dtype="int8") /* ty=Tensor[(16, 7, 14), int8] */;
    %23 = shape_of(%var_11732, dtype="int32") /* ty=Tensor[(3), int32] */;
    %24 = cast(%var_11732, dtype="int8") /* ty=Tensor[(16, 7, 14), int8] */;
    %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %26 = @func_5474() /* ty=(Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) */;
    %27 = bitwise_xor(%24, %25) /* ty=Tensor[(16, 7, 14), int8] */;
    %28 = %26.5;
    (%27, %28)
  };
  %29(%var_11759, %var_11760) /* ty=(Tensor[(16, 7, 14), int8], Tensor[(3, 14, 13), uint64]) */
}

def @func_15348() -> (Tensor[(3, 14, 13), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) {
  %33 = fn () -> (Tensor[(3, 14, 13), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) {
    %30 = @func_12582() /* ty=Tensor[(3, 14, 13), uint64] */;
    %31 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
    %32 = @func_1930() /* ty=Tensor[(546), uint64] */;
    (%30, %31, %32)
  };
  %33() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */
}

def @func_13430() -> (Tensor[(546), uint64], Tensor[(546), uint64]) {
  @func_13428() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_5690() -> (Tensor[(84), float32], Tensor[(84), float32]) {
  %34 = @func_2459() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) */;
  %35 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %36 = %34.0;
  %37 = %35.0;
  (%36, %37)
}

def @func_10123() -> (Tensor[(546), uint64], Tensor[(84), float32]) {
  %38 = @func_3854() /* ty=(Tensor[(546), uint64],) */;
  %39 = @func_7526() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) */;
  %40 = %38.0;
  %41 = %39.3;
  (%40, %41)
}

def @func_9544() -> (Tensor[(8, 9, 15), float64], Tensor[(84), float32]) {
  @func_9542() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(84), float32]) */
}

def @func_13484() -> Tensor[(8, 9, 15), float64] {
  @func_13482() /* ty=Tensor[(8, 9, 15), float64] */
}

def @func_15589() -> (Tensor[(546), uint64],) {
  %44 = fn () -> (Tensor[(546), uint64],) {
    %42 = @func_8952() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
    %43 = %42.3;
    (%43,)
  };
  %44() /* ty=(Tensor[(546), uint64],) */
}

def @func_11005() -> (Tensor[(84), float32],) {
  %45 = @func_8640() /* ty=(Tensor[(84), float32],) */;
  %46 = %45.0;
  (%46,)
}

def @func_5584() -> (Tensor[(84), float32], Tensor[(8, 9, 15), int32]) {
  %55 = fn () -> (Tensor[(84), float32], Tensor[(8, 9, 15), int32]) {
    %47 = @func_5170() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
    %48 = %47.1;
    %49 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 9, 15), float64] */, dtype="int32") /* ty=Tensor[(8, 9, 15), int32] */;
    %50 = shape_of(%48, dtype="int32") /* ty=Tensor[(3), int32] */;
    %51 = cast(%48, dtype="int32") /* ty=Tensor[(8, 9, 15), int32] */;
    %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %53 = @func_3243() /* ty=Tensor[(84), float32] */;
    %54 = bitwise_xor(%51, %52) /* ty=Tensor[(8, 9, 15), int32] */;
    (%53, %54)
  };
  %55() /* ty=(Tensor[(84), float32], Tensor[(8, 9, 15), int32]) */
}

def @func_14722() -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  @func_14720() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_7232() -> (Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64]) {
  @func_7230() /* ty=(Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64]) */
}

def @func_15832() -> Tensor[(3, 14, 13), uint64] {
  %56 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %56.0
}

def @func_12582() -> Tensor[(3, 14, 13), uint64] {
  %57 = @func_6419() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %57.0
}

def @func_11007() -> (Tensor[(84), float32],) {
  @func_11005() /* ty=(Tensor[(84), float32],) */
}

def @func_11345() -> (Tensor[(84), float32],) {
  %59 = fn () -> (Tensor[(84), float32],) {
    %58 = @func_7097() /* ty=Tensor[(84), float32] */;
    (%58,)
  };
  %59() /* ty=(Tensor[(84), float32],) */
}

def @func_1634() -> (Tensor[(546), uint64],) {
  @func_1632() /* ty=(Tensor[(546), uint64],) */
}

def @func_16823(%var_16822: Tensor[(1, 560), bool]) -> (Tensor[(3, 14, 13), float64], Tensor[(10, 14, 4), bool], Tensor[(1, 560), float64], Tensor[(3, 14, 13), uint64], Tensor[(3, 14, 13), uint64]) {
  %69 = fn (%var_16785: Tensor[(1, 560), bool]) -> (Tensor[(3, 14, 13), float64], Tensor[(10, 14, 4), bool], Tensor[(1, 560), float64], Tensor[(3, 14, 13), uint64], Tensor[(3, 14, 13), uint64]) {
    %60 = @func_7587() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) */;
    %61 = cast(%var_16785, dtype="bool") /* ty=Tensor[(1, 560), bool] */;
    %62 = reshape(%61, newshape=[10, 14, 4]) /* ty=Tensor[(10, 14, 4), bool] */;
    %63 = cast(%var_16785, dtype="float64") /* ty=Tensor[(1, 560), float64] */;
    %64 = %60.0;
    %65 = @func_3280(%62) /* ty=Tensor[(10, 14, 4), bool] */;
    %66 = erf(%63) /* ty=Tensor[(1, 560), float64] */;
    %67 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
    %68 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
    (%64, %65, %66, %67, %68)
  };
  %69(%var_16822) /* ty=(Tensor[(3, 14, 13), float64], Tensor[(10, 14, 4), bool], Tensor[(1, 560), float64], Tensor[(3, 14, 13), uint64], Tensor[(3, 14, 13), uint64]) */
}

def @func_18341(%var_18339: Tensor[(112), float32]) -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), bool], Tensor[(84), float32], Tensor[(112), float32]) {
  @func_18338(%var_18339) /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), bool], Tensor[(84), float32], Tensor[(112), float32]) */
}

def @func_14378() -> (Tensor[(546), uint64],) {
  @func_14376() /* ty=(Tensor[(546), uint64],) */
}

def @func_18003(%var_18002: Tensor[(1280), uint16]) -> (Tensor[(84), float32], Tensor[(16, 5, 16), bool], Tensor[(1280), uint16], Tensor[(3, 14, 13), uint64]) {
  %78 = fn (%var_17962: Tensor[(1280), uint16]) -> (Tensor[(84), float32], Tensor[(16, 5, 16), bool], Tensor[(1280), uint16], Tensor[(3, 14, 13), uint64]) {
    %70 = cast(%var_17962, dtype="uint16") /* ty=Tensor[(1280), uint16] */;
    %71 = cast(%var_17962, dtype="uint16") /* ty=Tensor[(1280), uint16] */;
    %72 = reshape(%70, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), uint16] */;
    %73 = reshape(%71, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), uint16] */;
    %74 = @func_13866(%72, %73) /* ty=(Tensor[(16, 5, 16), bool], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
    %75 = @func_14871() /* ty=Tensor[(84), float32] */;
    %76 = %74.0;
    %77 = @func_10022() /* ty=Tensor[(3, 14, 13), uint64] */;
    (%75, %76, %var_17962, %77)
  };
  %78(%var_18002) /* ty=(Tensor[(84), float32], Tensor[(16, 5, 16), bool], Tensor[(1280), uint16], Tensor[(3, 14, 13), uint64]) */
}

def @func_9660() -> Tensor[(2, 180), bool] {
  %80 = fn () -> Tensor[(2, 180), bool] {
    %79 = @func_5104() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), bool]) */;
    %79.1
  };
  %80() /* ty=Tensor[(2, 180), bool] */
}

def @func_5143() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  @func_5141() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_6304(%var_6303: Tensor[(546), float64]) -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64], Tensor[(546), float64]) {
  %87 = fn (%var_6283: Tensor[(546), float64]) -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64], Tensor[(546), float64]) {
    %81 = @func_5170() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
    %82 = cast(%var_6283, dtype="float64") /* ty=Tensor[(546), float64] */;
    %83 = reshape(%82, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), float64] */;
    %84 = @func_5199(%83) /* ty=(Tensor[(3, 14, 13), float32], Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float64]) */;
    %85 = %81.0;
    %86 = %84.2;
    (%85, %86, %var_6283)
  };
  %87(%var_6303) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64], Tensor[(546), float64]) */
}

def @func_8208() -> (Tensor[(3, 14, 13), float64],) {
  %88 = @func_6730() /* ty=(Tensor[(3, 14, 13), float64],) */;
  %89 = %88.0;
  (%89,)
}

def @func_7618() -> (Tensor[(546), uint64],) {
  @func_7616() /* ty=(Tensor[(546), uint64],) */
}

def @func_14968(%var_14966: Tensor[(192), int64], %var_14967: Tensor[(1536), int64]) -> (Tensor[(512), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(1536), int64]) {
  %100 = fn (%var_14952: Tensor[(192), int64], %var_14953: Tensor[(1536), int64]) -> (Tensor[(512), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(1536), int64]) {
    %90 = @func_13918() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(512), uint64]) */;
    %91 = @func_2459() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) */;
    %92 = cast(%var_14952, dtype="int64") /* ty=Tensor[(192), int64] */;
    %93 = cast(%var_14953, dtype="int64") /* ty=Tensor[(1536), int64] */;
    %94 = reshape(%92, newshape=[16, 12, 1]) /* ty=Tensor[(16, 12, 1), int64] */;
    %95 = reshape(%93, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), int64] */;
    %96 = %90.1;
    %97 = %91.1;
    %98 = @func_2787() /* ty=Tensor[(546), uint64] */;
    %99 = @func_2913(%94, %95) /* ty=Tensor[(16, 12, 8), int64] */;
    (%96, %97, %98, %99, %var_14952, %var_14953)
  };
  %100(%var_14966, %var_14967) /* ty=(Tensor[(512), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(1536), int64]) */
}

def @func_1878() -> Tensor[(546), uint64] {
  %101 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %101.1
}

def @func_4521() -> (Tensor[(3, 14, 13), int64], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) {
  %102 = @func_2667() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) */;
  %103 = %102.1;
  %104 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 14, 13), uint64] */, dtype="int64") /* ty=Tensor[(3, 14, 13), int64] */;
  %105 = shape_of(%103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%103, dtype="int64") /* ty=Tensor[(3, 14, 13), int64] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %108 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %109 = multiply(%106, %107) /* ty=Tensor[(3, 14, 13), int64] */;
  %110 = %108.0;
  %111 = @func_3165() /* ty=Tensor[(8, 9, 15), float64] */;
  (%109, %110, %111)
}

def @func_11218() -> (Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), bool]) {
  %112 = @func_9386() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float32]) */;
  %113 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %114 = @func_4521() /* ty=(Tensor[(3, 14, 13), int64], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) */;
  %115 = %112.0;
  %116 = %113.0;
  %117 = %114.1;
  %118 = @func_9659() /* ty=Tensor[(2, 180), bool] */;
  (%115, %116, %117, %118)
}

def @func_6678() -> (Tensor[(8, 9, 15), float32], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) {
  %119 = @func_5381() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float32]) */;
  %120 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
  %121 = @func_5329() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %122 = %119.1;
  %123 = %120.2;
  %124 = %121.0;
  (%122, %123, %124)
}

def @func_5105() -> (Tensor[(8, 9, 15), float64], Tensor[(2, 180), bool]) {
  %127 = fn () -> (Tensor[(8, 9, 15), float64], Tensor[(2, 180), bool]) {
    %125 = @func_3150() /* ty=Tensor[(8, 9, 15), float64] */;
    %126 = @func_3014() /* ty=Tensor[(2, 180), bool] */;
    (%125, %126)
  };
  %127() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), bool]) */
}

def @func_3432() -> (Tensor[(546), uint64],) {
  %128 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %129 = %128.0;
  (%129,)
}

def @func_3378(%var_3377: Tensor[(2, 4, 5), float32]) -> (Tensor[(2, 4, 5), float32], Tensor[(84), float32]) {
  %133 = fn (%var_3358: Tensor[(2, 4, 5), float32]) -> (Tensor[(2, 4, 5), float32], Tensor[(84), float32]) {
    %130 = cast(%var_3358, dtype="float32") /* ty=Tensor[(2, 4, 5), float32] */;
    %131 = rsqrt(%130) /* ty=Tensor[(2, 4, 5), float32] */;
    %132 = @func_2434() /* ty=Tensor[(84), float32] */;
    (%131, %132)
  };
  %133(%var_3377) /* ty=(Tensor[(2, 4, 5), float32], Tensor[(84), float32]) */
}

def @func_4776() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(7, 1, 12), float64], Tensor[(546), uint64]) {
  %134 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %135 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %136 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %137 = cast(meta[relay.Constant][3] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %138 = reshape(%137, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %139 = @func_2686(%138) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %140 = %139.1;
  %141 = cast(%140, dtype="float64") /* ty=Tensor[(7, 1, 12), float64] */;
  %142 = %134.1;
  %143 = %135.1;
  %144 = @func_4074() /* ty=Tensor[(546), uint64] */;
  %145 = %136.0;
  %146 = log2(%141) /* ty=Tensor[(7, 1, 12), float64] */;
  %147 = @func_4074() /* ty=Tensor[(546), uint64] */;
  (%142, %143, %144, meta[relay.Constant][3] /* ty=Tensor[(84), float32] */, %145, %146, %147)
}

def @func_3982() -> (Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) {
  %148 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %149 = %148.2;
  %150 = cast(%149, dtype="float64") /* ty=Tensor[(8, 9, 15), float64] */;
  %151 = sigmoid(%150) /* ty=Tensor[(8, 9, 15), float64] */;
  %152 = @func_3150() /* ty=Tensor[(8, 9, 15), float64] */;
  (%151, %152)
}

def @func_3245() -> Tensor[(84), float32] {
  @func_3243() /* ty=Tensor[(84), float32] */
}

def @func_3037(%var_3029: Tensor[(16, 8, 1), uint64], %var_3030: Tensor[(16, 8, 4), uint64]) -> Tensor[(16, 8, 4), uint64] {
  %153 = cast(%var_3029, dtype="uint64") /* ty=Tensor[(16, 8, 1), uint64] */;
  %154 = cast(%var_3030, dtype="uint64") /* ty=Tensor[(16, 8, 4), uint64] */;
  bitwise_and(%153, %154) /* ty=Tensor[(16, 8, 4), uint64] */
}

def @func_8833(%var_8747: uint16, %var_8748: Tensor[(28), uint16], %var_8750: Tensor[(512), uint64], %var_8806: Tensor[(360), float32]) -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64], uint16, Tensor[(28), uint16], Tensor[(128), uint64], Tensor[(512), uint64], Tensor[(84), float32], Tensor[(2, 4, 5), float32], Tensor[(40), float32], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(360), float32], Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) {
  %155 = @func_3982() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
  %156 = %155.1;
  %157 = cast(%156, dtype="float64") /* ty=Tensor[(8, 9, 15), float64] */;
  %158 = cast(%var_8747, dtype="uint16") /* ty=uint16 */;
  %159 = cast(%var_8748, dtype="uint16") /* ty=Tensor[(28), uint16] */;
  %160 = cast(meta[relay.Constant][4] /* ty=Tensor[(128), uint64] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %161 = cast(%var_8750, dtype="uint64") /* ty=Tensor[(512), uint64] */;
  %162 = reshape(%158, newshape=[]) /* ty=uint16 */;
  %163 = reshape(%159, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), uint16] */;
  %164 = reshape(%160, newshape=[128]) /* ty=Tensor[(128), uint64] */;
  %165 = reshape(%161, newshape=[512]) /* ty=Tensor[(512), uint64] */;
  %166 = @func_3796(%162, %163, %164, %165) /* ty=(Tensor[(4, 1, 7), uint16], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %167 = cast(meta[relay.Constant][5] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %168 = reshape(%167, newshape=[2, 4, 5]) /* ty=Tensor[(2, 4, 5), float32] */;
  %169 = @func_3376(%168) /* ty=(Tensor[(2, 4, 5), float32], Tensor[(84), float32]) */;
  %170 = @func_3854() /* ty=(Tensor[(546), uint64],) */;
  %171 = @func_2871() /* ty=(Tensor[(84), float32],) */;
  %172 = cast(%var_8806, dtype="float32") /* ty=Tensor[(360), float32] */;
  %173 = cast(meta[relay.Constant][4] /* ty=Tensor[(128), uint64] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %174 = reshape(%172, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %175 = reshape(%173, newshape=[128]) /* ty=Tensor[(128), uint64] */;
  %176 = @func_3673(%174, %175) /* ty=(Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(512), uint64], Tensor[(7, 1, 12), float32], Tensor[(8, 3, 15), float32], Tensor[(360), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(128), float64]) */;
  %177 = @func_2871() /* ty=(Tensor[(84), float32],) */;
  %178 = @func_4385() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %179 = asin(%157) /* ty=Tensor[(8, 9, 15), float64] */;
  %180 = %166.3;
  %181 = @func_4948() /* ty=Tensor[(84), float32] */;
  %182 = %169.0;
  %183 = %170.0;
  %184 = %171.0;
  %185 = %176.0;
  %186 = %177.0;
  %187 = %178.0;
  (%179, %180, %var_8747, %var_8748, meta[relay.Constant][4] /* ty=Tensor[(128), uint64] */, %var_8750, %181, %182, meta[relay.Constant][5] /* ty=Tensor[(40), float32] */, %183, %184, %185, %var_8806, %186, %187)
}

def @main(%var_19204: Tensor[(8, 13, 8), int64], %var_19205: Tensor[(8, 13, 8), int64]) -> (Tensor[(8, 13, 8), int64],) {
  %188 = cast(%var_19205, dtype="int64") /* ty=Tensor[(8, 13, 8), int64] */;
  %189 = shape_of(%var_19204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%var_19204, dtype="int64") /* ty=Tensor[(8, 13, 8), int64] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %192 = bitwise_or(%190, %191) /* ty=Tensor[(8, 13, 8), int64] */;
  (%192,)
}

def @func_9424() -> (Tensor[(546), uint64], Tensor[(546), uint64]) {
  @func_9422() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_7527() -> (Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) {
  %200 = fn () -> (Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) {
    %193 = @func_5690() /* ty=(Tensor[(84), float32], Tensor[(84), float32]) */;
    %194 = @func_4385() /* ty=(Tensor[(3, 14, 13), uint64],) */;
    %195 = @func_5583() /* ty=(Tensor[(84), float32], Tensor[(8, 9, 15), int32]) */;
    %196 = %193.0;
    %197 = %194.0;
    %198 = %195.0;
    %199 = @func_3243() /* ty=Tensor[(84), float32] */;
    (%196, %197, %198, %199)
  };
  %200() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) */
}

def @func_10200() -> (Tensor[(8, 9, 15), float32], Tensor[(3, 14, 13), uint64]) {
  %205 = fn () -> (Tensor[(8, 9, 15), float32], Tensor[(3, 14, 13), uint64]) {
    %201 = @func_6618() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(16, 8, 3), uint16], Tensor[(8, 9, 15), float32]) */;
    %202 = @func_6419() /* ty=(Tensor[(3, 14, 13), uint64],) */;
    %203 = %201.4;
    %204 = %202.0;
    (%203, %204)
  };
  %205() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(3, 14, 13), uint64]) */
}

def @func_16718(%var_16716: Tensor[(84), float32]) -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 3), uint16], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(16, 8, 3), uint16]) {
  @func_16715(%var_16716) /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 3), uint16], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(16, 8, 3), uint16]) */
}

def @func_9003() -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(384), float64], Tensor[(3, 14, 13), uint64]) {
  %215 = fn () -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(384), float64], Tensor[(3, 14, 13), uint64]) {
    %206 = cast(meta[relay.Constant][6] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
    %207 = cast(meta[relay.Constant][6] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
    %208 = reshape(%206, newshape=[16, 8, 3]) /* ty=Tensor[(16, 8, 3), float64] */;
    %209 = reshape(%207, newshape=[16, 8, 3]) /* ty=Tensor[(16, 8, 3), float64] */;
    %210 = @func_4284(%208, %209) /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16]) */;
    %211 = @func_5547() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(16, 8, 3), uint16], Tensor[(1, 384), float64]) */;
    %212 = @func_5946() /* ty=Tensor[(546), uint64] */;
    %213 = %210.0;
    %214 = %211.0;
    (%212, %213, meta[relay.Constant][6] /* ty=Tensor[(384), float64] */, %214)
  };
  %215() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(384), float64], Tensor[(3, 14, 13), uint64]) */
}

def @func_3243() -> Tensor[(84), float32] {
  @func_2195() /* ty=Tensor[(84), float32] */
}

def @func_14919() -> (Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float64], uint16, Tensor[(28), uint16], Tensor[(2, 64), uint64], Tensor[(512), uint64], Tensor[(546), uint64]) {
  @func_14917() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float64], uint16, Tensor[(28), uint16], Tensor[(2, 64), uint64], Tensor[(512), uint64], Tensor[(546), uint64]) */
}

def @func_16090(%var_16089: Tensor[(112), float32]) -> (Tensor[(8, 9, 15), int32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(112), float32]) {
  %223 = fn (%var_16083: Tensor[(112), float32]) -> (Tensor[(8, 9, 15), int32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(112), float32]) {
    %216 = @func_5583() /* ty=(Tensor[(84), float32], Tensor[(8, 9, 15), int32]) */;
    %217 = cast(%var_16083, dtype="float32") /* ty=Tensor[(112), float32] */;
    %218 = reshape(%217, newshape=[4, 7, 4]) /* ty=Tensor[(4, 7, 4), float32] */;
    %219 = @func_10881(%218) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float32]) */;
    %220 = %216.1;
    %221 = @func_2434() /* ty=Tensor[(84), float32] */;
    %222 = %219.2;
    (%220, %221, %222, %var_16083)
  };
  %223(%var_16089) /* ty=(Tensor[(8, 9, 15), int32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(112), float32]) */
}

def @func_2403() -> (Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  @func_2401() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_2523() -> (Tensor[(546), uint64], Tensor[(546), float64], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32]) {
  @func_2521() /* ty=(Tensor[(546), uint64], Tensor[(546), float64], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32]) */
}

def @func_11564() -> Tensor[(8, 9, 15), float64] {
  %224 = @func_9943() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %224.0
}

def @func_18362() -> Tensor[(546), uint64] {
  %225 = fn () -> Tensor[(546), uint64] {
    @func_5946() /* ty=Tensor[(546), uint64] */
  };
  %225() /* ty=Tensor[(546), uint64] */
}

def @func_11269() -> (Tensor[(546), uint64],) {
  @func_11267() /* ty=(Tensor[(546), uint64],) */
}

def @func_3217() -> Tensor[(546), uint64] {
  %226 = @func_2129() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %226.0
}

def @func_11917() -> (Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) {
  @func_11915() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) */
}

def @func_14487() -> (Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32]) {
  @func_14485() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32]) */
}

def @func_17045() -> (Tensor[(8, 9, 15), float32],) {
  %229 = fn () -> (Tensor[(8, 9, 15), float32],) {
    %227 = @func_5381() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float32]) */;
    %228 = %227.1;
    (%228,)
  };
  %229() /* ty=(Tensor[(8, 9, 15), float32],) */
}

def @func_9422() -> (Tensor[(546), uint64], Tensor[(546), uint64]) {
  %230 = @func_8080() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %231 = @func_7616() /* ty=(Tensor[(546), uint64],) */;
  %232 = %230.2;
  %233 = %231.0;
  (%232, %233)
}

def @func_5547() -> (Tensor[(3, 14, 13), uint64], Tensor[(16, 8, 3), uint16], Tensor[(1, 384), float64]) {
  %234 = @func_4385() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %235 = %234.0;
  %236 = cast(%235, dtype="float32") /* ty=Tensor[(3, 14, 13), float32] */;
  %237 = asinh(%236) /* ty=Tensor[(3, 14, 13), float32] */;
  %238 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 14, 13), float32] */, dtype="uint64") /* ty=Tensor[(3, 14, 13), uint64] */;
  %239 = shape_of(%237, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(%237, dtype="uint64") /* ty=Tensor[(3, 14, 13), uint64] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %242 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 384), float64] */, dtype="float64") /* ty=Tensor[(1, 384), float64] */;
  %243 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 384), float64] */, dtype="float64") /* ty=Tensor[(1, 384), float64] */;
  %244 = reshape(%242, newshape=[16, 8, 3]) /* ty=Tensor[(16, 8, 3), float64] */;
  %245 = reshape(%243, newshape=[16, 8, 3]) /* ty=Tensor[(16, 8, 3), float64] */;
  %246 = @func_4284(%244, %245) /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16]) */;
  %247 = subtract(%240, %241) /* ty=Tensor[(3, 14, 13), uint64] */;
  %248 = %246.2;
  (%247, %248, meta[relay.Constant][8] /* ty=Tensor[(1, 384), float64] */)
}

def @func_18357() -> Tensor[(3, 14, 13), uint64] {
  %250 = fn () -> Tensor[(3, 14, 13), uint64] {
    %249 = @func_4625() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64]) */;
    %249.1
  };
  %250() /* ty=Tensor[(3, 14, 13), uint64] */
}

def @func_13010() -> Tensor[(546), uint64] {
  @func_13008() /* ty=Tensor[(546), uint64] */
}

def @func_17433() -> (Tensor[(84), float32],) {
  @func_17431() /* ty=(Tensor[(84), float32],) */
}

def @func_14292() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) {
  %251 = @func_11728() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %252 = @func_6730() /* ty=(Tensor[(3, 14, 13), float64],) */;
  %253 = @func_4501() /* ty=(Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %254 = %251.0;
  %255 = %252.0;
  %256 = %253.2;
  (%254, %255, %256)
}

def @func_13008() -> Tensor[(546), uint64] {
  %257 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %257.0
}

def @func_1836() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) {
  @func_1834() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */
}

def @func_11086() -> (Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) {
  @func_11084() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) */
}

def @func_18948() -> (Tensor[(84), float32],) {
  %258 = @func_3243() /* ty=Tensor[(84), float32] */;
  (%258,)
}

def @func_18198(%var_18195: Tensor[(4, 13, 15), bool], %var_18196: Tensor[(8, 24), float64], %var_18197: Tensor[(560), bool]) -> (Tensor[(546), float64], Tensor[(7, 78), float64], Tensor[(4, 8, 6), int8], Tensor[(8, 24), float64], Tensor[(84), float32], Tensor[(10, 14, 4), bool], Tensor[(560), bool], Tensor[(4, 13, 15), bool], Tensor[(8, 9, 15), float32]) {
  %287 = fn (%var_18076: Tensor[(4, 13, 15), bool], %var_18107: Tensor[(8, 24), float64], %var_18135: Tensor[(560), bool]) -> (Tensor[(546), float64], Tensor[(7, 78), float64], Tensor[(4, 8, 6), int8], Tensor[(8, 24), float64], Tensor[(84), float32], Tensor[(10, 14, 4), bool], Tensor[(560), bool], Tensor[(4, 13, 15), bool], Tensor[(8, 9, 15), float32]) {
    %259 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 78), float64] */, dtype="float64") /* ty=Tensor[(7, 78), float64] */;
    %260 = reshape(%259, newshape=[546]) /* ty=Tensor[(546), float64] */;
    %261 = @func_6302(%260) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64], Tensor[(546), float64]) */;
    %262 = cast(%var_18107, dtype="float64") /* ty=Tensor[(8, 24), float64] */;
    %263 = reshape(%262, newshape=[4, 8, 6]) /* ty=Tensor[(4, 8, 6), float64] */;
    %264 = @func_16521(%263) /* ty=(Tensor[(4, 8, 6), int8], Tensor[(84), float32], Tensor[(546), uint64]) */;
    %265 = @func_8640() /* ty=(Tensor[(84), float32],) */;
    %266 = cast(%var_18135, dtype="bool") /* ty=Tensor[(560), bool] */;
    %267 = reshape(%266, newshape=[1, 560]) /* ty=Tensor[(1, 560), bool] */;
    %268 = @func_16821(%267) /* ty=(Tensor[(3, 14, 13), float64], Tensor[(10, 14, 4), bool], Tensor[(1, 560), float64], Tensor[(3, 14, 13), uint64], Tensor[(3, 14, 13), uint64]) */;
    %269 = cast(%var_18076, dtype="bool") /* ty=Tensor[(4, 13, 15), bool] */;
    %270 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(4, 13, 15), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %271 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 13, 15), bool] */, dtype="bool") /* ty=Tensor[(4, 13, 15), bool] */;
    %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %273 = logical_and(%271, %272) /* ty=Tensor[(4, 13, 15), bool] */;
    %274 = cast(%273, dtype="float64") /* ty=Tensor[(4, 13, 15), float64] */;
    %275 = asinh(%274) /* ty=Tensor[(4, 13, 15), float64] */;
    %276 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 13, 15), bool] */, dtype="bool") /* ty=Tensor[(4, 13, 15), bool] */;
    %277 = shape_of(%275, dtype="int32") /* ty=Tensor[(3), int32] */;
    %278 = cast(%275, dtype="bool") /* ty=Tensor[(4, 13, 15), bool] */;
    %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %280 = @func_7754() /* ty=(Tensor[(8, 9, 15), float32],) */;
    %281 = %261.2;
    %282 = %264.0;
    %283 = %265.0;
    %284 = %268.1;
    %285 = greater(%278, %279) /* ty=Tensor[(4, 13, 15), bool] */;
    %286 = %280.0;
    (%281, meta[relay.Constant][9] /* ty=Tensor[(7, 78), float64] */, %282, %var_18107, %283, %284, %var_18135, %285, %286)
  };
  %287(%var_18195, %var_18196, %var_18197) /* ty=(Tensor[(546), float64], Tensor[(7, 78), float64], Tensor[(4, 8, 6), int8], Tensor[(8, 24), float64], Tensor[(84), float32], Tensor[(10, 14, 4), bool], Tensor[(560), bool], Tensor[(4, 13, 15), bool], Tensor[(8, 9, 15), float32]) */
}

def @func_13446() -> Tensor[(8, 9, 15), float64] {
  %288 = @func_9542() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(84), float32]) */;
  %288.0
}

def @func_6955() -> (Tensor[(84), float32], Tensor[(546), uint64]) {
  %289 = @func_2871() /* ty=(Tensor[(84), float32],) */;
  %290 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %291 = %289.0;
  %292 = %290.2;
  (%291, %292)
}

def @func_2131() -> (Tensor[(546), uint64], Tensor[(546), uint64]) {
  @func_2129() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_17407() -> (Tensor[(84), float32], Tensor[(8, 9, 15), int32], Tensor[(112), float32], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), bool], Tensor[(546), float64], Tensor[(84), float32]) {
  %306 = fn () -> (Tensor[(84), float32], Tensor[(8, 9, 15), int32], Tensor[(112), float32], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), bool], Tensor[(546), float64], Tensor[(84), float32]) {
    %293 = @func_8490() /* ty=(Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), uint16], Tensor[(3, 14, 13), float64]) */;
    %294 = cast(meta[relay.Constant][11] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %295 = reshape(%294, newshape=[112]) /* ty=Tensor[(112), float32] */;
    %296 = @func_16088(%295) /* ty=(Tensor[(8, 9, 15), int32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(112), float32]) */;
    %297 = cast(meta[relay.Constant][12] /* ty=Tensor[(546), float64] */, dtype="float64") /* ty=Tensor[(546), float64] */;
    %298 = reshape(%297, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), float64] */;
    %299 = @func_5199(%298) /* ty=(Tensor[(3, 14, 13), float32], Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float64]) */;
    %300 = @func_13562() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) */;
    %301 = %293.3;
    %302 = %296.0;
    %303 = @func_3315() /* ty=Tensor[(8, 9, 15), float64] */;
    %304 = %299.1;
    %305 = %300.2;
    (%301, %302, meta[relay.Constant][11] /* ty=Tensor[(112), float32] */, %303, %304, meta[relay.Constant][12] /* ty=Tensor[(546), float64] */, %305)
  };
  %306() /* ty=(Tensor[(84), float32], Tensor[(8, 9, 15), int32], Tensor[(112), float32], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), bool], Tensor[(546), float64], Tensor[(84), float32]) */
}

def @func_2196() -> Tensor[(84), float32] {
  %308 = fn () -> Tensor[(84), float32] {
    %307 = @func_1948() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
    %307.2
  };
  %308() /* ty=Tensor[(84), float32] */
}

def @func_18893() -> (Tensor[(84), float32],) {
  %311 = fn () -> (Tensor[(84), float32],) {
    %309 = @func_13562() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) */;
    %310 = %309.2;
    (%310,)
  };
  %311() /* ty=(Tensor[(84), float32],) */
}

def @func_12205(%var_12204: Tensor[(28), uint16]) -> (Tensor[(84), float32], Tensor[(32, 4), float64], Tensor[(28), uint16], Tensor[(128), uint64], Tensor[(3, 14, 13), uint64]) {
  %322 = fn (%var_12182: Tensor[(28), uint16]) -> (Tensor[(84), float32], Tensor[(32, 4), float64], Tensor[(28), uint16], Tensor[(128), uint64], Tensor[(3, 14, 13), uint64]) {
    %312 = @func_4636() /* ty=(Tensor[(84), float32],) */;
    %313 = cast(%var_12182, dtype="uint16") /* ty=Tensor[(28), uint16] */;
    %314 = cast(meta[relay.Constant][13] /* ty=Tensor[(128), uint64] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
    %315 = reshape(%313, newshape=[28]) /* ty=Tensor[(28), uint16] */;
    %316 = reshape(%314, newshape=[32, 4]) /* ty=Tensor[(32, 4), uint64] */;
    %317 = @func_11377(%315, %316) /* ty=(Tensor[(546), uint64], Tensor[(4, 1, 7), uint16], uint16, Tensor[(28), uint16], Tensor[(512), uint64], Tensor[(32, 4), float64]) */;
    %318 = @func_7526() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) */;
    %319 = %312.0;
    %320 = %317.5;
    %321 = %318.1;
    (%319, %320, %var_12182, meta[relay.Constant][13] /* ty=Tensor[(128), uint64] */, %321)
  };
  %322(%var_12204) /* ty=(Tensor[(84), float32], Tensor[(32, 4), float64], Tensor[(28), uint16], Tensor[(128), uint64], Tensor[(3, 14, 13), uint64]) */
}

def @func_3801(%var_3797: uint16, %var_3798: Tensor[(4, 1, 7), uint16], %var_3799: Tensor[(128), uint64], %var_3800: Tensor[(512), uint64]) -> (Tensor[(4, 1, 7), uint16], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) {
  %339 = fn (%var_3714: uint16, %var_3715: Tensor[(4, 1, 7), uint16], %var_3786: Tensor[(128), uint64], %var_3787: Tensor[(512), uint64]) -> (Tensor[(4, 1, 7), uint16], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) {
    %323 = cast(%var_3714, dtype="uint16") /* ty=uint16 */;
    %324 = cast(%var_3715, dtype="uint16") /* ty=Tensor[(4, 1, 7), uint16] */;
    %325 = @func_2459() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) */;
    %326 = @func_1632() /* ty=(Tensor[(546), uint64],) */;
    %327 = @func_1948() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
    %328 = cast(%var_3786, dtype="uint64") /* ty=Tensor[(128), uint64] */;
    %329 = cast(%var_3787, dtype="uint64") /* ty=Tensor[(512), uint64] */;
    %330 = reshape(%328, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), uint64] */;
    %331 = reshape(%329, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), uint64] */;
    %332 = logical_xor(%323, %324) /* ty=Tensor[(4, 1, 7), uint16] */;
    %333 = %325.1;
    %334 = %326.0;
    %335 = @func_3217() /* ty=Tensor[(546), uint64] */;
    %336 = @func_3165() /* ty=Tensor[(8, 9, 15), float64] */;
    %337 = %327.2;
    %338 = @func_3037(%330, %331) /* ty=Tensor[(16, 8, 4), uint64] */;
    (%332, %333, %334, %335, %336, %337, %338, %var_3786, %var_3787)
  };
  %339(%var_3797, %var_3798, %var_3799, %var_3800) /* ty=(Tensor[(4, 1, 7), uint16], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */
}

def @func_13957() -> (Tensor[(1, 384), float64],) {
  @func_13955() /* ty=(Tensor[(1, 384), float64],) */
}

def @func_10340(%var_10339: Tensor[(512), uint64]) -> (Tensor[(8, 9, 15), float64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) {
  %347 = fn (%var_10292: Tensor[(512), uint64]) -> (Tensor[(8, 9, 15), float64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) {
    %340 = @func_9542() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(84), float32]) */;
    %341 = cast(meta[relay.Constant][14] /* ty=Tensor[(128), uint64] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
    %342 = cast(%var_10292, dtype="uint64") /* ty=Tensor[(512), uint64] */;
    %343 = reshape(%341, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), uint64] */;
    %344 = reshape(%342, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), uint64] */;
    %345 = %340.0;
    %346 = @func_3037(%343, %344) /* ty=Tensor[(16, 8, 4), uint64] */;
    (%345, %346, meta[relay.Constant][14] /* ty=Tensor[(128), uint64] */, %var_10292)
  };
  %347(%var_10339) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */
}

def @func_17605() -> (Tensor[(3, 14, 13), float64], Tensor[(84), float32]) {
  %351 = fn () -> (Tensor[(3, 14, 13), float64], Tensor[(84), float32]) {
    %348 = @func_5996() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(2, 180), bool]) */;
    %349 = @func_16032() /* ty=Tensor[(3, 14, 13), float64] */;
    %350 = %348.1;
    (%349, %350)
  };
  %351() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(84), float32]) */
}

def @func_10024() -> Tensor[(3, 14, 13), uint64] {
  @func_10022() /* ty=Tensor[(3, 14, 13), uint64] */
}

def @func_14720() -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %352 = @func_11728() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %353 = @func_3854() /* ty=(Tensor[(546), uint64],) */;
  %354 = %352.0;
  %355 = %353.0;
  %356 = @func_14535() /* ty=Tensor[(546), uint64] */;
  (%354, %355, %356)
}

def @func_5330() -> (Tensor[(8, 9, 15), float64],) {
  %361 = fn () -> (Tensor[(8, 9, 15), float64],) {
    %357 = @func_3982() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
    %358 = %357.0;
    %359 = cast(%358, dtype="float64") /* ty=Tensor[(8, 9, 15), float64] */;
    %360 = cosh(%359) /* ty=Tensor[(8, 9, 15), float64] */;
    (%360,)
  };
  %361() /* ty=(Tensor[(8, 9, 15), float64],) */
}

def @func_8081() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %368 = fn () -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) {
    %362 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
    %363 = @func_6032() /* ty=(Tensor[(8, 9, 15), uint8], Tensor[(546), uint64]) */;
    %364 = @func_3432() /* ty=(Tensor[(546), uint64],) */;
    %365 = %362.0;
    %366 = %363.1;
    %367 = %364.0;
    (%365, %366, %367)
  };
  %368() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_15243() -> (Tensor[(546), uint64], Tensor[(84), float32]) {
  %369 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %370 = %369.0;
  %371 = @func_2942() /* ty=Tensor[(84), float32] */;
  (%370, %371)
}

def @func_3016() -> Tensor[(2, 180), bool] {
  @func_3014() /* ty=Tensor[(2, 180), bool] */
}

def @func_6249() -> (Tensor[(8, 9, 15), float64], Tensor[(2, 180), uint16], Tensor[(546), uint64]) {
  @func_6247() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), uint16], Tensor[(546), uint64]) */
}

def @func_2757() -> (Tensor[(546), uint64],) {
  %372 = @func_2567() /* ty=(Tensor[(546), uint64],) */;
  %373 = %372.0;
  (%373,)
}

def @func_18469() -> Tensor[(84), float32] {
  %374 = @func_4636() /* ty=(Tensor[(84), float32],) */;
  %374.0
}

def @func_5171() -> (Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) {
  %379 = fn () -> (Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) {
    %375 = @func_1834() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
    %376 = @func_3315() /* ty=Tensor[(8, 9, 15), float64] */;
    %377 = %375.0;
    %378 = @func_1930() /* ty=Tensor[(546), uint64] */;
    (%376, %377, %378)
  };
  %379() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */
}

def @func_19189() -> Tensor[(546), uint64] {
  @func_2897() /* ty=Tensor[(546), uint64] */
}

def @func_2436() -> Tensor[(84), float32] {
  @func_2434() /* ty=Tensor[(84), float32] */
}

def @func_4025() -> Tensor[(3, 14, 13), float64] {
  %380 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
  %381 = cast(%380, dtype="float64") /* ty=Tensor[(3, 14, 13), float64] */;
  log(%381) /* ty=Tensor[(3, 14, 13), float64] */
}

def @func_16761(%var_16760: Tensor[(10, 4, 9), uint16]) -> (Tensor[(10, 4, 9), bool],) {
  %387 = fn (%var_16753: Tensor[(10, 4, 9), uint16]) -> (Tensor[(10, 4, 9), bool],) {
    %382 = cast(%var_16753, dtype="bool") /* ty=Tensor[(10, 4, 9), bool] */;
    %383 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(10, 4, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %384 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 4, 9), uint16] */, dtype="bool") /* ty=Tensor[(10, 4, 9), bool] */;
    %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %386 = less_equal(%384, %385) /* ty=Tensor[(10, 4, 9), bool] */;
    (%386,)
  };
  %387(%var_16760) /* ty=(Tensor[(10, 4, 9), bool],) */
}

def @func_17774(%var_17772: uint8, %var_17773: Tensor[(462), uint8]) -> (Tensor[(84), float32], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(512, 1), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], uint8, Tensor[(462), uint8], Tensor[(1, 128), float32]) {
  %409 = fn (%var_17761: uint8, %var_17762: Tensor[(462), uint8]) -> (Tensor[(84), float32], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(512, 1), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], uint8, Tensor[(462), uint8], Tensor[(1, 128), float32]) {
    %388 = @func_8640() /* ty=(Tensor[(84), float32],) */;
    %389 = @func_11310() /* ty=(Tensor[(546), uint64], Tensor[(2, 180), uint16]) */;
    %390 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 128), uint64] */, dtype="uint64") /* ty=Tensor[(1, 128), uint64] */;
    %391 = cast(meta[relay.Constant][17] /* ty=Tensor[(512, 1), uint64] */, dtype="uint64") /* ty=Tensor[(512, 1), uint64] */;
    %392 = reshape(%390, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), uint64] */;
    %393 = reshape(%391, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), uint64] */;
    %394 = @func_10745() /* ty=(Tensor[(8, 9, 15), float64],) */;
    %395 = cast(%var_17761, dtype="uint8") /* ty=uint8 */;
    %396 = cast(%var_17762, dtype="uint8") /* ty=Tensor[(462), uint8] */;
    %397 = reshape(%395, newshape=[]) /* ty=uint8 */;
    %398 = reshape(%396, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), uint8] */;
    %399 = @func_6481(%397, %398) /* ty=(Tensor[(14, 3, 11), uint8], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(2, 180), float32]) */;
    %400 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 128), uint64] */, dtype="float32") /* ty=Tensor[(1, 128), float32] */;
    %401 = log(%400) /* ty=Tensor[(1, 128), float32] */;
    %402 = cast(%401, dtype="float32") /* ty=Tensor[(1, 128), float32] */;
    %403 = %388.0;
    %404 = %389.0;
    %405 = @func_3037(%392, %393) /* ty=Tensor[(16, 8, 4), uint64] */;
    %406 = %394.0;
    %407 = %399.2;
    %408 = cosh(%402) /* ty=Tensor[(1, 128), float32] */;
    (%403, %404, %405, meta[relay.Constant][17] /* ty=Tensor[(512, 1), uint64] */, %406, %407, %var_17761, %var_17762, %408)
  };
  %409(%var_17772, %var_17773) /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(512, 1), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], uint8, Tensor[(462), uint8], Tensor[(1, 128), float32]) */
}

def @func_10723() -> (Tensor[(546), uint64],) {
  %412 = fn () -> (Tensor[(546), uint64],) {
    %410 = @func_10386() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
    %411 = %410.0;
    (%411,)
  };
  %412() /* ty=(Tensor[(546), uint64],) */
}

def @func_3166() -> Tensor[(8, 9, 15), float64] {
  %414 = fn () -> Tensor[(8, 9, 15), float64] {
    %413 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
    %413.0
  };
  %414() /* ty=Tensor[(8, 9, 15), float64] */
}

def @func_8952() -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) {
  %415 = @func_5141() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %416 = @func_8640() /* ty=(Tensor[(84), float32],) */;
  %417 = @func_1834() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %418 = @func_7331() /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %419 = cast(meta[relay.Constant][18] /* ty=Tensor[(128), uint64] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %420 = cast(meta[relay.Constant][19] /* ty=Tensor[(512), uint64] */, dtype="uint64") /* ty=Tensor[(512), uint64] */;
  %421 = reshape(%419, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), uint64] */;
  %422 = reshape(%420, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), uint64] */;
  %423 = %415.3;
  %424 = %416.0;
  %425 = %417.1;
  %426 = %418.1;
  %427 = @func_3037(%421, %422) /* ty=Tensor[(16, 8, 4), uint64] */;
  (%423, %424, %425, %426, %427, meta[relay.Constant][18] /* ty=Tensor[(128), uint64] */, meta[relay.Constant][19] /* ty=Tensor[(512), uint64] */)
}

def @func_3856() -> (Tensor[(546), uint64],) {
  @func_3854() /* ty=(Tensor[(546), uint64],) */
}

def @func_10747() -> (Tensor[(8, 9, 15), float64],) {
  @func_10745() /* ty=(Tensor[(8, 9, 15), float64],) */
}

def @func_3041(%var_3039: Tensor[(16, 8, 1), uint64], %var_3040: Tensor[(16, 8, 4), uint64]) -> Tensor[(16, 8, 4), uint64] {
  @func_3037(%var_3039, %var_3040) /* ty=Tensor[(16, 8, 4), uint64] */
}

def @func_11084() -> (Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) {
  %428 = @func_10621() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */;
  %429 = %428.1;
  %430 = cast(%429, dtype="float64") /* ty=Tensor[(3, 14, 13), float64] */;
  %431 = @func_9836() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16], Tensor[(546), uint64]) */;
  %432 = sin(%430) /* ty=Tensor[(3, 14, 13), float64] */;
  %433 = %431.2;
  (%432, %433)
}

def @func_1365() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) {
  %434 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 9, 15), float64] */, dtype="float64") /* ty=Tensor[(8, 9, 15), float64] */;
  %435 = cast(meta[relay.Constant][21] /* ty=Tensor[(546), uint64] */, dtype="uint64") /* ty=Tensor[(546), uint64] */;
  %436 = reshape(%435, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), uint64] */;
  %437 = sinh(%434) /* ty=Tensor[(8, 9, 15), float64] */;
  %438 = @func_96(%436) /* ty=Tensor[(3, 14, 13), uint64] */;
  (%437, %438, meta[relay.Constant][21] /* ty=Tensor[(546), uint64] */)
}

def @func_12584() -> Tensor[(3, 14, 13), uint64] {
  @func_12582() /* ty=Tensor[(3, 14, 13), uint64] */
}

def @func_1677() -> Tensor[(3, 14, 13), uint64] {
  %439 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %439.1
}

def @func_2913(%var_2906: Tensor[(16, 12, 1), int64], %var_2907: Tensor[(16, 12, 8), int64]) -> Tensor[(16, 12, 8), int64] {
  %440 = cast(%var_2906, dtype="int64") /* ty=Tensor[(16, 12, 1), int64] */;
  %441 = cast(%var_2907, dtype="int64") /* ty=Tensor[(16, 12, 8), int64] */;
  bitwise_or(%440, %441) /* ty=Tensor[(16, 12, 8), int64] */
}

def @func_1522() -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) {
  %446 = fn () -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) {
    %442 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
    %443 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
    %444 = %442.0;
    %445 = %443.2;
    (%444, %445)
  };
  %446() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */
}

def @func_7097() -> Tensor[(84), float32] {
  %447 = @func_6955() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
  %447.0
}

def @func_4139() -> (Tensor[(546), uint64],) {
  %450 = fn () -> (Tensor[(546), uint64],) {
    %448 = @func_2739() /* ty=(Tensor[(84), float32], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32], Tensor[(546), uint64]) */;
    %449 = %448.6;
    (%449,)
  };
  %450() /* ty=(Tensor[(546), uint64],) */
}

def @func_10745() -> (Tensor[(8, 9, 15), float64],) {
  %451 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %452 = %451.0;
  (%452,)
}

def @func_11310() -> (Tensor[(546), uint64], Tensor[(2, 180), uint16]) {
  %453 = @func_9850() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(512), uint64]) */;
  %454 = @func_3457() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) */;
  %455 = %453.0;
  %456 = %454.1;
  (%455, %456)
}

def @func_15127(%var_15125: Tensor[(384), float64], %var_15126: uint8) -> (Tensor[(84), float32], Tensor[(84), uint64], Tensor[(546), uint64], Tensor[(384), float64], Tensor[(546), uint64], uint8, Tensor[(462), uint8], Tensor[(2, 180), float32]) {
  %480 = fn (%var_15094: Tensor[(384), float64], %var_15102: uint8) -> (Tensor[(84), float32], Tensor[(84), uint64], Tensor[(546), uint64], Tensor[(384), float64], Tensor[(546), uint64], uint8, Tensor[(462), uint8], Tensor[(2, 180), float32]) {
    %457 = @func_9736() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(546), uint64]) */;
    %458 = %457.2;
    %459 = cast(%458, dtype="int32") /* ty=Tensor[(84), int32] */;
    %460 = reshape(%459, newshape=[1, 7, 12]) /* ty=Tensor[(1, 7, 12), int32] */;
    %461 = @func_11954(%460) /* ty=(Tensor[(3, 14, 13), float64], Tensor[(84), float32], Tensor[(1, 7, 12), float32]) */;
    %462 = %461.1;
    %463 = @func_12661() /* ty=Tensor[(84), float32] */;
    %464 = cast(%463, dtype="uint64") /* ty=Tensor[(84), uint64] */;
    %465 = shape_of(%462, dtype="int32") /* ty=Tensor[(1), int32] */;
    %466 = cast(%462, dtype="uint64") /* ty=Tensor[(84), uint64] */;
    %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %468 = cast(%var_15094, dtype="float64") /* ty=Tensor[(384), float64] */;
    %469 = reshape(%468, newshape=[384]) /* ty=Tensor[(384), float64] */;
    %470 = @func_9196(%469) /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(384), float64], Tensor[(546), uint64], Tensor[(8, 9, 15), bool], Tensor[(546), uint64], Tensor[(546), uint64]) */;
    %471 = cast(%var_15102, dtype="uint8") /* ty=uint8 */;
    %472 = cast(meta[relay.Constant][22] /* ty=Tensor[(462), uint8] */, dtype="uint8") /* ty=Tensor[(462), uint8] */;
    %473 = reshape(%471, newshape=[]) /* ty=uint8 */;
    %474 = reshape(%472, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), uint8] */;
    %475 = @func_6481(%473, %474) /* ty=(Tensor[(14, 3, 11), uint8], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(2, 180), float32]) */;
    %476 = bitwise_and(%466, %467) /* ty=Tensor[(84), uint64] */;
    %477 = %470.5;
    %478 = %475.1;
    %479 = @func_3201() /* ty=Tensor[(2, 180), float32] */;
    (%458, %476, %477, %var_15094, %478, %var_15102, meta[relay.Constant][22] /* ty=Tensor[(462), uint8] */, %479)
  };
  %480(%var_15125, %var_15126) /* ty=(Tensor[(84), float32], Tensor[(84), uint64], Tensor[(546), uint64], Tensor[(384), float64], Tensor[(546), uint64], uint8, Tensor[(462), uint8], Tensor[(2, 180), float32]) */
}

def @func_9943() -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %481 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %482 = @func_8356() /* ty=Tensor[(8, 9, 15), float64] */;
  %483 = %481.1;
  %484 = @func_1878() /* ty=Tensor[(546), uint64] */;
  (%482, %483, %484)
}

def @func_15288(%var_15287: Tensor[(11, 384), float32]) -> Tensor[(11, 384), float32] {
  %491 = fn (%var_15279: Tensor[(11, 384), float32]) -> Tensor[(11, 384), float32] {
    %485 = @func_13955() /* ty=(Tensor[(1, 384), float64],) */;
    %486 = %485.0;
    %487 = cast(%486, dtype="float32") /* ty=Tensor[(1, 384), float32] */;
    %488 = asin(%487) /* ty=Tensor[(1, 384), float32] */;
    %489 = cast(%488, dtype="float32") /* ty=Tensor[(1, 384), float32] */;
    %490 = cast(%var_15279, dtype="float32") /* ty=Tensor[(11, 384), float32] */;
    minimum(%489, %490) /* ty=Tensor[(11, 384), float32] */
  };
  %491(%var_15287) /* ty=Tensor[(11, 384), float32] */
}

def @func_4284(%var_4234: Tensor[(16, 8, 3), float64], %var_4246: Tensor[(16, 8, 3), float64]) -> (Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16]) {
  %492 = cast(%var_4234, dtype="float64") /* ty=Tensor[(16, 8, 3), float64] */;
  %493 = acos(%492) /* ty=Tensor[(16, 8, 3), float64] */;
  %494 = cast(%var_4246, dtype="uint32") /* ty=Tensor[(16, 8, 3), uint32] */;
  %495 = shape_of(%493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%493, dtype="uint32") /* ty=Tensor[(16, 8, 3), uint32] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %498 = multiply(%496, %497) /* ty=Tensor[(16, 8, 3), uint32] */;
  %499 = cast(%498, dtype="float32") /* ty=Tensor[(16, 8, 3), float32] */;
  %500 = sinh(%499) /* ty=Tensor[(16, 8, 3), float32] */;
  %501 = cast(%var_4234, dtype="uint16") /* ty=Tensor[(16, 8, 3), uint16] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%500, dtype="uint16") /* ty=Tensor[(16, 8, 3), uint16] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %505 = @func_3243() /* ty=Tensor[(84), float32] */;
  %506 = @func_4025() /* ty=Tensor[(3, 14, 13), float64] */;
  %507 = minimum(%503, %504) /* ty=Tensor[(16, 8, 3), uint16] */;
  (%505, %506, %507)
}

def @func_6619() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(16, 8, 3), uint16], Tensor[(8, 9, 15), float32]) {
  %519 = fn () -> (Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(16, 8, 3), uint16], Tensor[(8, 9, 15), float32]) {
    %508 = @func_5946() /* ty=Tensor[(546), uint64] */;
    %509 = cast(%508, dtype="float64") /* ty=Tensor[(546), float64] */;
    %510 = reshape(%509, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), float64] */;
    %511 = @func_5199(%510) /* ty=(Tensor[(3, 14, 13), float32], Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float64]) */;
    %512 = @func_2129() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
    %513 = @func_6517() /* ty=(Tensor[(16, 8, 3), uint16],) */;
    %514 = @func_3457() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) */;
    %515 = %511.2;
    %516 = %512.1;
    %517 = %513.0;
    %518 = %514.0;
    (%508, %515, %516, %517, %518)
  };
  %519() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(16, 8, 3), uint16], Tensor[(8, 9, 15), float32]) */
}

def @func_1615(%var_1546: Tensor[(8, 9, 15), float64]) -> (Tensor[(8, 9, 15), bool], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) {
  %520 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %521 = %520.0;
  %522 = cast(%var_1546, dtype="bool") /* ty=Tensor[(8, 9, 15), bool] */;
  %523 = shape_of(%521, dtype="int32") /* ty=Tensor[(3), int32] */;
  %524 = cast(%521, dtype="bool") /* ty=Tensor[(8, 9, 15), bool] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %526 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %527 = cast(%521, dtype="float64") /* ty=Tensor[(8, 9, 15), float64] */;
  %528 = exp(%527) /* ty=Tensor[(8, 9, 15), float64] */;
  %529 = cast(%528, dtype="float64") /* ty=Tensor[(8, 9, 15), float64] */;
  %530 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %531 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %532 = greater_equal(%524, %525) /* ty=Tensor[(8, 9, 15), bool] */;
  %533 = %526.0;
  %534 = log(%529) /* ty=Tensor[(8, 9, 15), float64] */;
  %535 = %530.0;
  %536 = %531.0;
  (%532, %533, %534, %535, %536)
}

def @func_8398() -> Tensor[(84), float32] {
  @func_8396() /* ty=Tensor[(84), float32] */
}

def @func_17431() -> (Tensor[(84), float32],) {
  %537 = @func_11344() /* ty=(Tensor[(84), float32],) */;
  %538 = %537.0;
  (%538,)
}

def @func_2460() -> (Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) {
  %543 = fn () -> (Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) {
    %539 = @func_1649() /* ty=(Tensor[(84), float32],) */;
    %540 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
    %541 = %539.0;
    %542 = %540.0;
    (%541, %542)
  };
  %543() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) */
}

def @func_4814() -> (Tensor[(546), uint64],) {
  %544 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %545 = %544.1;
  (%545,)
}

def @func_5619() -> (Tensor[(3, 14, 13), float64], Tensor[(3, 14, 13), uint64]) {
  @func_5617() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(3, 14, 13), uint64]) */
}

def @func_9288() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) {
  %549 = fn () -> (Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) {
    %546 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
    %547 = %546.1;
    %548 = @func_4025() /* ty=Tensor[(3, 14, 13), float64] */;
    (%547, %548)
  };
  %549() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */
}

def @func_1850() -> Tensor[(3, 14, 13), uint64] {
  %550 = @func_1834() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %550.1
}

def @func_16335() -> (Tensor[(84), float32], Tensor[(330, 1), float32], Tensor[(512), uint64], Tensor[(5, 6, 11), float32]) {
  %551 = @func_9850() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(512), uint64]) */;
  %552 = cast(meta[relay.Constant][23] /* ty=Tensor[(330, 1), float32] */, dtype="float32") /* ty=Tensor[(330, 1), float32] */;
  %553 = reshape(%552, newshape=[5, 6, 11]) /* ty=Tensor[(5, 6, 11), float32] */;
  %554 = @func_13167(%553) /* ty=(Tensor[(5, 6, 11), float32],) */;
  %555 = %554.0;
  %556 = cast(%555, dtype="float32") /* ty=Tensor[(5, 6, 11), float32] */;
  %557 = @func_4948() /* ty=Tensor[(84), float32] */;
  %558 = %551.2;
  %559 = tan(%556) /* ty=Tensor[(5, 6, 11), float32] */;
  (%557, meta[relay.Constant][23] /* ty=Tensor[(330, 1), float32] */, %558, %559)
}

def @func_19015(%var_19013: Tensor[(512), uint64]) -> (Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(512), uint64]) {
  @func_19012(%var_19013) /* ty=(Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(512), uint64]) */
}

def @func_6335() -> (Tensor[(546), uint64], Tensor[(84), float32]) {
  @func_6333() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */
}

def @func_4637() -> (Tensor[(84), float32],) {
  %561 = fn () -> (Tensor[(84), float32],) {
    %560 = @func_3243() /* ty=Tensor[(84), float32] */;
    (%560,)
  };
  %561() /* ty=(Tensor[(84), float32],) */
}

def @func_5027() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32]) {
  %567 = fn () -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32]) {
    %562 = @func_2567() /* ty=(Tensor[(546), uint64],) */;
    %563 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
    %564 = %562.0;
    %565 = %563.1;
    %566 = @func_2195() /* ty=Tensor[(84), float32] */;
    (%564, %565, %566)
  };
  %567() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32]) */
}

def @func_12064() -> (Tensor[(546), uint64],) {
  %568 = @func_8310() /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %569 = %568.1;
  (%569,)
}

def @func_3392() -> Tensor[(84), float32] {
  @func_3390() /* ty=Tensor[(84), float32] */
}

def @func_19108() -> Tensor[(84), float32] {
  %570 = @func_18948() /* ty=(Tensor[(84), float32],) */;
  %570.0
}

def @func_2741() -> (Tensor[(84), float32], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32], Tensor[(546), uint64]) {
  @func_2739() /* ty=(Tensor[(84), float32], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32], Tensor[(546), uint64]) */
}

def @func_15757() -> (Tensor[(8, 9, 15), float32], Tensor[(546), uint64], Tensor[(84), float32]) {
  @func_15755() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(546), uint64], Tensor[(84), float32]) */
}

def @func_16405(%var_16403: Tensor[(2, 12, 1), float64]) -> (Tensor[(2, 12, ?), float64], Tensor[(2, 12, 1), float32]) {
  @func_16402(%var_16403) /* ty=(Tensor[(2, 12, ?), float64], Tensor[(2, 12, 1), float32]) */
}

def @func_9066() -> (Tensor[(84), float32],) {
  %573 = fn () -> (Tensor[(84), float32],) {
    %571 = @func_4636() /* ty=(Tensor[(84), float32],) */;
    %572 = %571.0;
    (%572,)
  };
  %573() /* ty=(Tensor[(84), float32],) */
}

def @func_17274(%var_17273: Tensor[(1650), int8]) -> (Tensor[(546), uint64], Tensor[(8, 9, 15), float32], Tensor[(1650), int8], Tensor[(2, 180), float32], Tensor[(8, 9, 15), float64]) {
  %584 = fn (%var_17248: Tensor[(1650), int8]) -> (Tensor[(546), uint64], Tensor[(8, 9, 15), float32], Tensor[(1650), int8], Tensor[(2, 180), float32], Tensor[(8, 9, 15), float64]) {
    %574 = @func_8952() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
    %575 = cast(%var_17248, dtype="int8") /* ty=Tensor[(1650), int8] */;
    %576 = reshape(%575, newshape=[1650]) /* ty=Tensor[(1650), int8] */;
    %577 = @func_15568(%576) /* ty=(Tensor[(8, 9, 15), float32], Tensor[(546), uint64], Tensor[(10, 15, 11), bool], Tensor[(1650), int8]) */;
    %578 = @func_3014() /* ty=Tensor[(2, 180), bool] */;
    %579 = cast(%578, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
    %580 = %574.0;
    %581 = %577.0;
    %582 = acos(%579) /* ty=Tensor[(2, 180), float32] */;
    %583 = @func_3315() /* ty=Tensor[(8, 9, 15), float64] */;
    (%580, %581, %var_17248, %582, %583)
  };
  %584(%var_17273) /* ty=(Tensor[(546), uint64], Tensor[(8, 9, 15), float32], Tensor[(1650), int8], Tensor[(2, 180), float32], Tensor[(8, 9, 15), float64]) */
}

def @func_17492() -> Tensor[(3, 14, 13), float64] {
  %586 = fn () -> Tensor[(3, 14, 13), float64] {
    %585 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
    %585.0
  };
  %586() /* ty=Tensor[(3, 14, 13), float64] */
}

def @func_4501() -> (Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %587 = @func_3109() /* ty=(Tensor[(2, 180), uint16],) */;
  %588 = %587.0;
  %589 = cast(%588, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
  %590 = @func_2757() /* ty=(Tensor[(546), uint64],) */;
  %591 = log(%589) /* ty=Tensor[(2, 180), float32] */;
  %592 = %590.0;
  %593 = @func_4231() /* ty=Tensor[(546), uint64] */;
  (%591, %592, %593)
}

def @func_10269() -> Tensor[(546), uint64] {
  %594 = @func_3432() /* ty=(Tensor[(546), uint64],) */;
  %594.0
}

def @func_2521() -> (Tensor[(546), uint64], Tensor[(546), float64], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32]) {
  %595 = @func_2129() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %596 = @func_1930() /* ty=Tensor[(546), uint64] */;
  %597 = cast(%596, dtype="float64") /* ty=Tensor[(546), float64] */;
  %598 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 180), float32] */, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
  %599 = reshape(%598, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float32] */;
  %600 = @func_2026(%599) /* ty=(Tensor[(8, 3, 15), float32], Tensor[(3, 14, 13), uint64]) */;
  %601 = %595.1;
  %602 = acos(%597) /* ty=Tensor[(546), float64] */;
  %603 = %600.1;
  (%601, %602, %603, meta[relay.Constant][24] /* ty=Tensor[(2, 180), float32] */)
}

def @func_7099() -> Tensor[(84), float32] {
  @func_7097() /* ty=Tensor[(84), float32] */
}

def @func_13428() -> (Tensor[(546), uint64], Tensor[(546), uint64]) {
  %604 = @func_1632() /* ty=(Tensor[(546), uint64],) */;
  %605 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %606 = %604.0;
  %607 = %605.2;
  (%606, %607)
}

def @func_17103() -> (Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(256, 2), uint64]) {
  @func_17101() /* ty=(Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(256, 2), uint64]) */
}

def @func_16469(%var_16467: Tensor[(192), int64], %var_16468: Tensor[(1536), int64]) -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(750), uint32], Tensor[(192), int64], Tensor[(1536), int64]) {
  @func_16465(%var_16467, %var_16468) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(750), uint32], Tensor[(192), int64], Tensor[(1536), int64]) */
}

def @func_17325() -> Tensor[(546), uint64] {
  %609 = fn () -> Tensor[(546), uint64] {
    %608 = @func_8080() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
    %608.0
  };
  %609() /* ty=Tensor[(546), uint64] */
}

def @func_2028(%var_2027: Tensor[(8, 3, 15), float32]) -> (Tensor[(8, 3, 15), float32], Tensor[(3, 14, 13), uint64]) {
  %613 = fn (%var_2016: Tensor[(8, 3, 15), float32]) -> (Tensor[(8, 3, 15), float32], Tensor[(3, 14, 13), uint64]) {
    %610 = cast(%var_2016, dtype="float32") /* ty=Tensor[(8, 3, 15), float32] */;
    %611 = log10(%610) /* ty=Tensor[(8, 3, 15), float32] */;
    %612 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
    (%611, %612)
  };
  %613(%var_2027) /* ty=(Tensor[(8, 3, 15), float32], Tensor[(3, 14, 13), uint64]) */
}

def @func_9387() -> (Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float32]) {
  %618 = fn () -> (Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float32]) {
    %614 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
    %615 = @func_7754() /* ty=(Tensor[(8, 9, 15), float32],) */;
    %616 = %614.0;
    %617 = %615.0;
    (%616, %617)
  };
  %618() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float32]) */
}

def @func_4231() -> Tensor[(546), uint64] {
  %619 = @func_2401() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %619.3
}

def @func_3202() -> Tensor[(2, 180), float32] {
  %623 = fn () -> Tensor[(2, 180), float32] {
    %620 = @func_3109() /* ty=(Tensor[(2, 180), uint16],) */;
    %621 = %620.0;
    %622 = cast(%621, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
    log2(%622) /* ty=Tensor[(2, 180), float32] */
  };
  %623() /* ty=Tensor[(2, 180), float32] */
}

def @func_3014() -> Tensor[(2, 180), bool] {
  @func_2816() /* ty=Tensor[(2, 180), bool] */
}

def @func_12428() -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %630 = fn () -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) {
    %624 = @func_5474() /* ty=(Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) */;
    %625 = @func_2401() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
    %626 = %624.1;
    %627 = @func_2434() /* ty=Tensor[(84), float32] */;
    %628 = @func_11982() /* ty=Tensor[(546), uint64] */;
    %629 = %625.3;
    (%626, %627, %628, %629)
  };
  %630() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_9996(%var_9995: Tensor[(3, 14, 13), uint64]) -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), bool], Tensor[(546), uint64]) {
  %641 = fn (%var_9981: Tensor[(3, 14, 13), uint64]) -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), bool], Tensor[(546), uint64]) {
    %631 = @func_5104() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), bool]) */;
    %632 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
    %633 = cast(%var_9981, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
    %634 = shape_of(%632, dtype="int32") /* ty=Tensor[(3), int32] */;
    %635 = cast(%632, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
    %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %637 = @func_2667() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) */;
    %638 = %631.0;
    %639 = logical_or(%635, %636) /* ty=Tensor[(3, 14, 13), bool] */;
    %640 = %637.0;
    (%638, %639, %640)
  };
  %641(%var_9995) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), bool], Tensor[(546), uint64]) */
}

def @func_14536() -> Tensor[(546), uint64] {
  %643 = fn () -> Tensor[(546), uint64] {
    %642 = @func_10678() /* ty=(Tensor[(546), uint64],) */;
    %642.0
  };
  %643() /* ty=Tensor[(546), uint64] */
}

def @func_16346() -> (Tensor[(546), uint64],) {
  @func_16344() /* ty=(Tensor[(546), uint64],) */
}

def @func_6201() -> Tensor[(84), float32] {
  @func_6199() /* ty=Tensor[(84), float32] */
}

def @func_11982() -> Tensor[(546), uint64] {
  @func_1878() /* ty=Tensor[(546), uint64] */
}

def @func_8492() -> (Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), uint16], Tensor[(3, 14, 13), float64]) {
  @func_8490() /* ty=(Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), uint16], Tensor[(3, 14, 13), float64]) */
}

def @func_9945() -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  @func_9943() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_15621(%var_15620: Tensor[(8, 15, 11), float32]) -> (Tensor[(8, 15, 11), float32],) {
  %646 = fn (%var_15592: Tensor[(8, 15, 11), float32]) -> (Tensor[(8, 15, 11), float32],) {
    %644 = cast(%var_15592, dtype="float32") /* ty=Tensor[(8, 15, 11), float32] */;
    %645 = tan(%644) /* ty=Tensor[(8, 15, 11), float32] */;
    (%645,)
  };
  %646(%var_15620) /* ty=(Tensor[(8, 15, 11), float32],) */
}

def @func_13813() -> Tensor[(546), uint64] {
  @func_12955() /* ty=Tensor[(546), uint64] */
}

def @func_5141() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %647 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %648 = @func_2401() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %649 = @func_1834() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %650 = @func_4776() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(7, 1, 12), float64], Tensor[(546), uint64]) */;
  %651 = %647.0;
  %652 = %648.0;
  %653 = %649.2;
  %654 = %650.4;
  (%651, %652, %653, %654)
}

def @func_6247() -> (Tensor[(8, 9, 15), float64], Tensor[(2, 180), uint16], Tensor[(546), uint64]) {
  %655 = @func_3982() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
  %656 = @func_3109() /* ty=(Tensor[(2, 180), uint16],) */;
  %657 = %655.0;
  %658 = %656.0;
  %659 = @func_4231() /* ty=Tensor[(546), uint64] */;
  (%657, %658, %659)
}

def @func_8633() -> (Tensor[(84), float32], Tensor[(2, 180), uint16], Tensor[(546), uint64]) {
  %660 = @func_2459() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) */;
  %661 = @func_8490() /* ty=(Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), uint16], Tensor[(3, 14, 13), float64]) */;
  %662 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %663 = %660.0;
  %664 = %661.5;
  %665 = %662.0;
  (%663, %664, %665)
}

def @func_8839(%var_8835: uint16, %var_8836: Tensor[(28), uint16], %var_8837: Tensor[(512), uint64], %var_8838: Tensor[(360), float32]) -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64], uint16, Tensor[(28), uint16], Tensor[(128), uint64], Tensor[(512), uint64], Tensor[(84), float32], Tensor[(2, 4, 5), float32], Tensor[(40), float32], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(360), float32], Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) {
  @func_8833(%var_8835, %var_8836, %var_8837, %var_8838) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64], uint16, Tensor[(28), uint16], Tensor[(128), uint64], Tensor[(512), uint64], Tensor[(84), float32], Tensor[(2, 4, 5), float32], Tensor[(40), float32], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(360), float32], Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) */
}

def @func_4949() -> Tensor[(84), float32] {
  %667 = fn () -> Tensor[(84), float32] {
    %666 = @func_2871() /* ty=(Tensor[(84), float32],) */;
    %666.0
  };
  %667() /* ty=Tensor[(84), float32] */
}

def @func_9230() -> (Tensor[(3, 14, 13), float32], Tensor[(546), uint64]) {
  @func_9228() /* ty=(Tensor[(3, 14, 13), float32], Tensor[(546), uint64]) */
}

def @func_14158(%var_14156: Tensor[(48, 4), int64], %var_14157: Tensor[(48, 4), int64]) -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(16, 12, 8), int64], Tensor[(750), uint32], Tensor[(1536), int64], Tensor[(48, 4), bool], Tensor[(3, 14, 13), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) {
  @func_14154(%var_14156, %var_14157) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(16, 12, 8), int64], Tensor[(750), uint32], Tensor[(1536), int64], Tensor[(48, 4), bool], Tensor[(3, 14, 13), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */
}

def @func_193(%var_189: Tensor[(7, 1, 12), float32]) -> (Tensor[(7, 1, 12), float32],) {
  %668 = cast(%var_189, dtype="float32") /* ty=Tensor[(7, 1, 12), float32] */;
  %669 = asinh(%668) /* ty=Tensor[(7, 1, 12), float32] */;
  (%669,)
}

def @func_5998() -> (Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(2, 180), bool]) {
  @func_5996() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(2, 180), bool]) */
}

def @func_17230() -> Tensor[(546), uint64] {
  @func_17228() /* ty=Tensor[(546), uint64] */
}

def @func_14294() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) {
  @func_14292() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) */
}

def @func_5996() -> (Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(2, 180), bool]) {
  %670 = @func_5617() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(3, 14, 13), uint64]) */;
  %671 = @func_5104() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), bool]) */;
  %672 = %670.1;
  %673 = @func_2942() /* ty=Tensor[(84), float32] */;
  %674 = %671.1;
  (%672, %673, %674)
}

def @func_2897() -> Tensor[(546), uint64] {
  %675 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %675.0
}

def @func_6925(%var_6921: Tensor[(15, 10, 5), uint32], %var_6922: Tensor[(15, 10, 5), uint32], %var_6923: Tensor[(192), int64], %var_6924: Tensor[(2, 768), int64]) -> (Tensor[(15, 10, 5), uint32], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(2, 768), int64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) {
  %692 = fn (%var_6868: Tensor[(15, 10, 5), uint32], %var_6869: Tensor[(15, 10, 5), uint32], %var_6898: Tensor[(192), int64], %var_6899: Tensor[(2, 768), int64]) -> (Tensor[(15, 10, 5), uint32], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(2, 768), int64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) {
    %676 = cast(%var_6869, dtype="uint32") /* ty=Tensor[(15, 10, 5), uint32] */;
    %677 = shape_of(%var_6868, dtype="int32") /* ty=Tensor[(3), int32] */;
    %678 = cast(%var_6868, dtype="uint32") /* ty=Tensor[(15, 10, 5), uint32] */;
    %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %680 = @func_5474() /* ty=(Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) */;
    %681 = cast(%var_6898, dtype="int64") /* ty=Tensor[(192), int64] */;
    %682 = cast(%var_6899, dtype="int64") /* ty=Tensor[(2, 768), int64] */;
    %683 = reshape(%681, newshape=[16, 12, 1]) /* ty=Tensor[(16, 12, 1), int64] */;
    %684 = reshape(%682, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), int64] */;
    %685 = @func_3982() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
    %686 = bitwise_and(%678, %679) /* ty=Tensor[(15, 10, 5), uint32] */;
    %687 = %680.2;
    %688 = @func_3201() /* ty=Tensor[(2, 180), float32] */;
    %689 = @func_2913(%683, %684) /* ty=Tensor[(16, 12, 8), int64] */;
    %690 = @func_3315() /* ty=Tensor[(8, 9, 15), float64] */;
    %691 = %685.1;
    (%686, %687, %688, %689, %var_6898, %var_6899, %690, %691)
  };
  %692(%var_6921, %var_6922, %var_6923, %var_6924) /* ty=(Tensor[(15, 10, 5), uint32], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(2, 768), int64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */
}

def @func_196(%var_194: Tensor[(7, 1, 12), float32]) -> (Tensor[(7, 1, 12), float32],) {
  @func_193(%var_194) /* ty=(Tensor[(7, 1, 12), float32],) */
}

def @func_16344() -> (Tensor[(546), uint64],) {
  %693 = @func_12427() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %694 = %693.2;
  (%694,)
}

def @func_8954() -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) {
  @func_8952() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */
}

def @func_3457() -> (Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) {
  %695 = @func_2401() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %696 = %695.2;
  %697 = cast(%696, dtype="float32") /* ty=Tensor[(8, 9, 15), float32] */;
  %698 = @func_3109() /* ty=(Tensor[(2, 180), uint16],) */;
  %699 = log2(%697) /* ty=Tensor[(8, 9, 15), float32] */;
  %700 = %698.0;
  (%699, %700)
}

def @func_9737() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(546), uint64]) {
  %707 = fn () -> (Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(546), uint64]) {
    %701 = @func_3432() /* ty=(Tensor[(546), uint64],) */;
    %702 = @func_4385() /* ty=(Tensor[(3, 14, 13), uint64],) */;
    %703 = %701.0;
    %704 = %702.0;
    %705 = @func_8396() /* ty=Tensor[(84), float32] */;
    %706 = @func_1878() /* ty=Tensor[(546), uint64] */;
    (%703, %704, %705, %706)
  };
  %707() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(546), uint64]) */
}

def @func_5383() -> (Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float32]) {
  @func_5381() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float32]) */
}

def @func_16521(%var_16479: Tensor[(4, 8, 6), float64]) -> (Tensor[(4, 8, 6), int8], Tensor[(84), float32], Tensor[(546), uint64]) {
  %708 = cast(%var_16479, dtype="float64") /* ty=Tensor[(4, 8, 6), float64] */;
  %709 = atanh(%708) /* ty=Tensor[(4, 8, 6), float64] */;
  %710 = cast(%var_16479, dtype="int8") /* ty=Tensor[(4, 8, 6), int8] */;
  %711 = shape_of(%709, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%709, dtype="int8") /* ty=Tensor[(4, 8, 6), int8] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %714 = @func_6955() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
  %715 = @func_6333() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %716 = logical_xor(%712, %713) /* ty=Tensor[(4, 8, 6), int8] */;
  %717 = %714.0;
  %718 = %715.0;
  (%716, %717, %718)
}

def @func_8490() -> (Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), uint16], Tensor[(3, 14, 13), float64]) {
  %719 = @func_2871() /* ty=(Tensor[(84), float32],) */;
  %720 = @func_6247() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), uint16], Tensor[(546), uint64]) */;
  %721 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
  %722 = @func_2871() /* ty=(Tensor[(84), float32],) */;
  %723 = @func_3109() /* ty=(Tensor[(2, 180), uint16],) */;
  %724 = @func_6618() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(16, 8, 3), uint16], Tensor[(8, 9, 15), float32]) */;
  %725 = %719.0;
  %726 = %720.0;
  %727 = @func_3150() /* ty=Tensor[(8, 9, 15), float64] */;
  %728 = %721.2;
  %729 = %722.0;
  %730 = %723.0;
  %731 = %724.1;
  (%725, %726, %727, %728, %729, %730, %731)
}

def @func_18806(%var_18805: Tensor[(28), uint16]) -> (Tensor[(84), float32], Tensor[(28), uint16], Tensor[(4, 32), uint64], Tensor[(32, 4), float64]) {
  %741 = fn (%var_18788: Tensor[(28), uint16]) -> (Tensor[(84), float32], Tensor[(28), uint16], Tensor[(4, 32), uint64], Tensor[(32, 4), float64]) {
    %732 = cast(%var_18788, dtype="uint16") /* ty=Tensor[(28), uint16] */;
    %733 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 32), uint64] */, dtype="uint64") /* ty=Tensor[(4, 32), uint64] */;
    %734 = reshape(%732, newshape=[28]) /* ty=Tensor[(28), uint16] */;
    %735 = reshape(%733, newshape=[32, 4]) /* ty=Tensor[(32, 4), uint64] */;
    %736 = @func_11377(%734, %735) /* ty=(Tensor[(546), uint64], Tensor[(4, 1, 7), uint16], uint16, Tensor[(28), uint16], Tensor[(512), uint64], Tensor[(32, 4), float64]) */;
    %737 = %736.5;
    %738 = cast(%737, dtype="float64") /* ty=Tensor[(32, 4), float64] */;
    %739 = @func_2434() /* ty=Tensor[(84), float32] */;
    %740 = acos(%738) /* ty=Tensor[(32, 4), float64] */;
    (%739, %var_18788, meta[relay.Constant][25] /* ty=Tensor[(4, 32), uint64] */, %740)
  };
  %741(%var_18805) /* ty=(Tensor[(84), float32], Tensor[(28), uint16], Tensor[(4, 32), uint64], Tensor[(32, 4), float64]) */
}

def @func_4816() -> (Tensor[(546), uint64],) {
  @func_4814() /* ty=(Tensor[(546), uint64],) */
}

def @func_1931() -> Tensor[(546), uint64] {
  %743 = fn () -> Tensor[(546), uint64] {
    %742 = @func_1632() /* ty=(Tensor[(546), uint64],) */;
    %742.0
  };
  %743() /* ty=Tensor[(546), uint64] */
}

def @func_2899() -> Tensor[(546), uint64] {
  @func_2897() /* ty=Tensor[(546), uint64] */
}

def @func_11220() -> (Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), bool]) {
  @func_11218() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), bool]) */
}

def @func_4626() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64]) {
  %748 = fn () -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64]) {
    %744 = @func_1948() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
    %745 = @func_2667() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) */;
    %746 = %744.0;
    %747 = %745.1;
    (%746, %747)
  };
  %748() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64]) */
}

def @func_2917(%var_2915: Tensor[(16, 12, 1), int64], %var_2916: Tensor[(16, 12, 8), int64]) -> Tensor[(16, 12, 8), int64] {
  @func_2913(%var_2915, %var_2916) /* ty=Tensor[(16, 12, 8), int64] */
}

def @func_13815() -> Tensor[(546), uint64] {
  @func_13813() /* ty=Tensor[(546), uint64] */
}

def @func_6420() -> (Tensor[(3, 14, 13), uint64],) {
  %750 = fn () -> (Tensor[(3, 14, 13), uint64],) {
    %749 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
    (%749,)
  };
  %750() /* ty=(Tensor[(3, 14, 13), uint64],) */
}

def @func_9836() -> (Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16], Tensor[(546), uint64]) {
  %751 = @func_6517() /* ty=(Tensor[(16, 8, 3), uint16],) */;
  %752 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %753 = @func_4348() /* ty=Tensor[(3, 14, 13), float64] */;
  %754 = %751.0;
  %755 = %752.0;
  (%753, %754, %755)
}

def @func_16155() -> (Tensor[(84), float32],) {
  @func_16153() /* ty=(Tensor[(84), float32],) */
}

def @func_13919() -> (Tensor[(8, 9, 15), float32], Tensor[(512), uint64]) {
  %760 = fn () -> (Tensor[(8, 9, 15), float32], Tensor[(512), uint64]) {
    %756 = @func_9386() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float32]) */;
    %757 = @func_8952() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
    %758 = %756.1;
    %759 = %757.6;
    (%758, %759)
  };
  %760() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(512), uint64]) */
}

def @func_8190(%var_8182: Tensor[(560), bool]) -> (Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(10, 14, 4), bool], Tensor[(560), bool]) {
  %761 = @func_1948() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %762 = @func_7230() /* ty=(Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64]) */;
  %763 = cast(%var_8182, dtype="bool") /* ty=Tensor[(560), bool] */;
  %764 = reshape(%763, newshape=[10, 14, 4]) /* ty=Tensor[(10, 14, 4), bool] */;
  %765 = %761.0;
  %766 = %762.1;
  %767 = @func_3280(%764) /* ty=Tensor[(10, 14, 4), bool] */;
  (%765, %766, %767, %var_8182)
}

def @func_8149() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) {
  %773 = fn () -> (Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) {
    %768 = @func_2757() /* ty=(Tensor[(546), uint64],) */;
    %769 = %768.0;
    %770 = cast(%769, dtype="uint64") /* ty=Tensor[(546), uint64] */;
    %771 = reshape(%770, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), uint64] */;
    %772 = @func_96(%771) /* ty=Tensor[(3, 14, 13), uint64] */;
    (%769, %772)
  };
  %773() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) */
}

def @func_14421() -> Tensor[(546), uint64] {
  %775 = fn () -> Tensor[(546), uint64] {
    %774 = @func_3854() /* ty=(Tensor[(546), uint64],) */;
    %774.0
  };
  %775() /* ty=Tensor[(546), uint64] */
}

def @func_15734() -> Tensor[(546), uint64] {
  %777 = fn () -> Tensor[(546), uint64] {
    %776 = @func_12546() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) */;
    %776.0
  };
  %777() /* ty=Tensor[(546), uint64] */
}

def @func_11312() -> (Tensor[(546), uint64], Tensor[(2, 180), uint16]) {
  @func_11310() /* ty=(Tensor[(546), uint64], Tensor[(2, 180), uint16]) */
}

def @func_17286() -> (Tensor[(546), uint64],) {
  %778 = @func_2401() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %779 = %778.5;
  (%779,)
}

def @func_17361() -> (Tensor[(84), float32], Tensor[(8, 9, 15), float64]) {
  @func_17359() /* ty=(Tensor[(84), float32], Tensor[(8, 9, 15), float64]) */
}

def @func_17857() -> Tensor[(84), float32] {
  @func_17855() /* ty=Tensor[(84), float32] */
}

def @func_17228() -> Tensor[(546), uint64] {
  @func_4231() /* ty=Tensor[(546), uint64] */
}

def @func_5692() -> (Tensor[(84), float32], Tensor[(84), float32]) {
  @func_5690() /* ty=(Tensor[(84), float32], Tensor[(84), float32]) */
}

def @func_17796(%var_17793: Tensor[(10, 12, 13), float64], %var_17794: Tensor[(10, 12, 13), float64], %var_17795: Tensor[(84), float32]) -> (Tensor[(10, 12, 13), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) {
  %789 = fn (%var_17781: Tensor[(10, 12, 13), float64], %var_17782: Tensor[(10, 12, 13), float64], %var_17790: Tensor[(84), float32]) -> (Tensor[(10, 12, 13), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) {
    %780 = cast(%var_17782, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
    %781 = shape_of(%var_17781, dtype="int32") /* ty=Tensor[(3), int32] */;
    %782 = cast(%var_17781, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
    %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %784 = cast(%var_17790, dtype="float32") /* ty=Tensor[(84), float32] */;
    %785 = reshape(%784, newshape=[7, 1, 12]) /* ty=Tensor[(7, 1, 12), float32] */;
    %786 = @func_193(%785) /* ty=(Tensor[(7, 1, 12), float32],) */;
    %787 = multiply(%782, %783) /* ty=Tensor[(10, 12, 13), float64] */;
    %788 = %786.0;
    (%787, %788, %var_17790)
  };
  %789(%var_17793, %var_17794, %var_17795) /* ty=(Tensor[(10, 12, 13), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */
}

def @func_5476() -> (Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) {
  @func_5474() /* ty=(Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) */
}

def @func_2943() -> Tensor[(84), float32] {
  %790 = fn () -> Tensor[(84), float32] {
    @func_2195() /* ty=Tensor[(84), float32] */
  };
  %790() /* ty=Tensor[(84), float32] */
}

def @func_12956() -> Tensor[(546), uint64] {
  %792 = fn () -> Tensor[(546), uint64] {
    %791 = @func_12064() /* ty=(Tensor[(546), uint64],) */;
    %791.0
  };
  %792() /* ty=Tensor[(546), uint64] */
}

def @func_3109() -> (Tensor[(2, 180), uint16],) {
  %793 = @func_2521() /* ty=(Tensor[(546), uint64], Tensor[(546), float64], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32]) */;
  %794 = %793.3;
  %795 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 180), float32] */, dtype="uint16") /* ty=Tensor[(2, 180), uint16] */;
  %796 = shape_of(%794, dtype="int32") /* ty=Tensor[(2), int32] */;
  %797 = cast(%794, dtype="uint16") /* ty=Tensor[(2, 180), uint16] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %799 = right_shift(%797, %798) /* ty=Tensor[(2, 180), uint16] */;
  (%799,)
}

def @func_12036(%var_12034: Tensor[(3, 11, 15), bool], %var_12035: Tensor[(3, 11, 15), bool]) -> (Tensor[(3, 11, 15), bool], Tensor[(546), uint64]) {
  @func_12032(%var_12034, %var_12035) /* ty=(Tensor[(3, 11, 15), bool], Tensor[(546), uint64]) */
}

def @func_6732() -> (Tensor[(3, 14, 13), float64],) {
  @func_6730() /* ty=(Tensor[(3, 14, 13), float64],) */
}

def @func_1834() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) {
  %800 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %801 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %802 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %803 = %800.0;
  %804 = %801.0;
  %805 = %802.1;
  (%803, %804, %805)
}

def @func_19012(%var_19004: Tensor[(512), uint64]) -> (Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(512), uint64]) {
  %806 = @func_17568() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %807 = cast(%var_19004, dtype="uint64") /* ty=Tensor[(512), uint64] */;
  %808 = reshape(%807, newshape=[512]) /* ty=Tensor[(512), uint64] */;
  %809 = @func_10338(%808) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %810 = %806.0;
  %811 = %809.0;
  (%810, %811, %var_19004)
}

def @func_5381() -> (Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float32]) {
  %812 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
  %813 = @func_4403() /* ty=Tensor[(8, 9, 15), float32] */;
  (%812, %813)
}

def @func_15192() -> (Tensor[(8, 9, 15), float64],) {
  %815 = fn () -> (Tensor[(8, 9, 15), float64],) {
    %814 = @func_11564() /* ty=Tensor[(8, 9, 15), float64] */;
    (%814,)
  };
  %815() /* ty=(Tensor[(8, 9, 15), float64],) */
}

def @func_1721() -> (Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) {
  %821 = fn () -> (Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) {
    %816 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
    %817 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
    %818 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
    %819 = %816.2;
    %820 = %817.0;
    (%818, %819, %820)
  };
  %821() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */
}

def @func_2129() -> (Tensor[(546), uint64], Tensor[(546), uint64]) {
  %822 = @func_1834() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %823 = %822.2;
  %824 = @func_1878() /* ty=Tensor[(546), uint64] */;
  (%823, %824)
}

def @func_15571(%var_15569: Tensor[(1650), int8]) -> (Tensor[(8, 9, 15), float32], Tensor[(546), uint64], Tensor[(10, 15, 11), bool], Tensor[(1650), int8]) {
  @func_15568(%var_15569) /* ty=(Tensor[(8, 9, 15), float32], Tensor[(546), uint64], Tensor[(10, 15, 11), bool], Tensor[(1650), int8]) */
}

def @func_7852(%var_7823: Tensor[(192), int64]) -> (Tensor[(2, 180), uint16], Tensor[(8, 9, 15), float64], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(1536), int64], Tensor[(84), float32]) {
  %825 = @func_6247() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), uint16], Tensor[(546), uint64]) */;
  %826 = @func_6768() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float64]) */;
  %827 = cast(%var_7823, dtype="int64") /* ty=Tensor[(192), int64] */;
  %828 = cast(meta[relay.Constant][27] /* ty=Tensor[(1536), int64] */, dtype="int64") /* ty=Tensor[(1536), int64] */;
  %829 = reshape(%827, newshape=[16, 12, 1]) /* ty=Tensor[(16, 12, 1), int64] */;
  %830 = reshape(%828, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), int64] */;
  %831 = %825.1;
  %832 = %826.1;
  %833 = @func_2913(%829, %830) /* ty=Tensor[(16, 12, 8), int64] */;
  %834 = @func_7097() /* ty=Tensor[(84), float32] */;
  (%831, %832, %833, %var_7823, meta[relay.Constant][27] /* ty=Tensor[(1536), int64] */, %834)
}

def @func_19110() -> Tensor[(84), float32] {
  @func_19108() /* ty=Tensor[(84), float32] */
}

def @func_10449() -> (Tensor[(84), float32], Tensor[(546), uint64]) {
  %835 = @func_5792() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
  %836 = %835.0;
  %837 = @func_1930() /* ty=Tensor[(546), uint64] */;
  (%836, %837)
}

def @func_7588() -> (Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) {
  %841 = fn () -> (Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) {
    %838 = @func_2567() /* ty=(Tensor[(546), uint64],) */;
    %839 = @func_4348() /* ty=Tensor[(3, 14, 13), float64] */;
    %840 = %838.0;
    (%839, %840)
  };
  %841() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) */
}

def @func_8731() -> (Tensor[(84), float32],) {
  %842 = @func_4636() /* ty=(Tensor[(84), float32],) */;
  %843 = %842.0;
  (%843,)
}

def @func_14485() -> (Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32]) {
  %844 = @func_2557() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */;
  %845 = @func_2739() /* ty=(Tensor[(84), float32], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32], Tensor[(546), uint64]) */;
  %846 = %844.1;
  %847 = @func_5946() /* ty=Tensor[(546), uint64] */;
  %848 = %845.1;
  (%846, %847, %848)
}

def @func_6711() -> Tensor[(546), uint64] {
  %850 = fn () -> Tensor[(546), uint64] {
    %849 = @func_2129() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
    %849.0
  };
  %850() /* ty=Tensor[(546), uint64] */
}

def @func_11566() -> Tensor[(8, 9, 15), float64] {
  @func_11564() /* ty=Tensor[(8, 9, 15), float64] */
}

def @func_14772() -> Tensor[(546), uint64] {
  %852 = fn () -> Tensor[(546), uint64] {
    %851 = @func_6955() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
    %851.1
  };
  %852() /* ty=Tensor[(546), uint64] */
}

def @func_15991() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32]) {
  @func_15989() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32]) */
}

def @func_9196(%var_9116: Tensor[(384), float64]) -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(384), float64], Tensor[(546), uint64], Tensor[(8, 9, 15), bool], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %853 = cast(%var_9116, dtype="float64") /* ty=Tensor[(384), float64] */;
  %854 = cast(%var_9116, dtype="float64") /* ty=Tensor[(384), float64] */;
  %855 = reshape(%853, newshape=[16, 8, 3]) /* ty=Tensor[(16, 8, 3), float64] */;
  %856 = reshape(%854, newshape=[16, 8, 3]) /* ty=Tensor[(16, 8, 3), float64] */;
  %857 = @func_4284(%855, %856) /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16]) */;
  %858 = @func_7754() /* ty=(Tensor[(8, 9, 15), float32],) */;
  %859 = %858.0;
  %860 = @func_4521() /* ty=(Tensor[(3, 14, 13), int64], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) */;
  %861 = %860.2;
  %862 = cast(%861, dtype="bool") /* ty=Tensor[(8, 9, 15), bool] */;
  %863 = shape_of(%859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %864 = cast(%859, dtype="bool") /* ty=Tensor[(8, 9, 15), bool] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %866 = @func_8310() /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %867 = @func_3854() /* ty=(Tensor[(546), uint64],) */;
  %868 = @func_4231() /* ty=Tensor[(546), uint64] */;
  %869 = %857.0;
  %870 = @func_4074() /* ty=Tensor[(546), uint64] */;
  %871 = less_equal(%864, %865) /* ty=Tensor[(8, 9, 15), bool] */;
  %872 = %866.2;
  %873 = %867.0;
  (%868, %869, %var_9116, %870, %871, %872, %873)
}

def @func_4456() -> (Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) {
  %878 = fn () -> (Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) {
    %874 = @func_1649() /* ty=(Tensor[(84), float32],) */;
    %875 = @func_4025() /* ty=Tensor[(3, 14, 13), float64] */;
    %876 = @func_1878() /* ty=Tensor[(546), uint64] */;
    %877 = %874.0;
    (%875, %876, %877)
  };
  %878() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */
}

def @func_15408(%var_15407: Tensor[(128), uint64]) -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), int16], Tensor[(512), uint64], Tensor[(360), float32], Tensor[(128), uint64], Tensor[(546), uint64]) {
  %900 = fn (%var_15396: Tensor[(128), uint64]) -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), int16], Tensor[(512), uint64], Tensor[(360), float32], Tensor[(128), uint64], Tensor[(546), uint64]) {
    %879 = @func_2567() /* ty=(Tensor[(546), uint64],) */;
    %880 = @func_7331() /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
    %881 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
    %882 = %881.0;
    %883 = cast(%882, dtype="float32") /* ty=Tensor[(8, 9, 15), float32] */;
    %884 = atan(%883) /* ty=Tensor[(8, 9, 15), float32] */;
    %885 = cast(%882, dtype="int16") /* ty=Tensor[(8, 9, 15), int16] */;
    %886 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
    %887 = cast(%884, dtype="int16") /* ty=Tensor[(8, 9, 15), int16] */;
    %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %889 = cast(meta[relay.Constant][28] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %890 = cast(%var_15396, dtype="uint64") /* ty=Tensor[(128), uint64] */;
    %891 = reshape(%889, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %892 = reshape(%890, newshape=[128]) /* ty=Tensor[(128), uint64] */;
    %893 = @func_3673(%891, %892) /* ty=(Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(512), uint64], Tensor[(7, 1, 12), float32], Tensor[(8, 3, 15), float32], Tensor[(360), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(128), float64]) */;
    %894 = @func_4853() /* ty=(Tensor[(546), uint64],) */;
    %895 = %879.0;
    %896 = %880.0;
    %897 = maximum(%887, %888) /* ty=Tensor[(8, 9, 15), int16] */;
    %898 = %893.2;
    %899 = %894.0;
    (%895, %896, %897, %898, meta[relay.Constant][28] /* ty=Tensor[(360), float32] */, %var_15396, %899)
  };
  %900(%var_15407) /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), int16], Tensor[(512), uint64], Tensor[(360), float32], Tensor[(128), uint64], Tensor[(546), uint64]) */
}

def @func_15700() -> (Tensor[(8, 9, 15), float64], uint16, Tensor[(28), uint16], Tensor[(1, 128), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(32, 16), bool], Tensor[(546), uint64]) {
  @func_15698() /* ty=(Tensor[(8, 9, 15), float64], uint16, Tensor[(28), uint16], Tensor[(1, 128), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(32, 16), bool], Tensor[(546), uint64]) */
}

def @func_4854() -> (Tensor[(546), uint64],) {
  %903 = fn () -> (Tensor[(546), uint64],) {
    %901 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
    %902 = %901.0;
    (%902,)
  };
  %903() /* ty=(Tensor[(546), uint64],) */
}

def @func_12662() -> Tensor[(84), float32] {
  %905 = fn () -> Tensor[(84), float32] {
    %904 = @func_2401() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
    %904.1
  };
  %905() /* ty=Tensor[(84), float32] */
}

def @func_8193(%var_8191: Tensor[(560), bool]) -> (Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(10, 14, 4), bool], Tensor[(560), bool]) {
  @func_8190(%var_8191) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(10, 14, 4), bool], Tensor[(560), bool]) */
}

def @func_13563() -> (Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) {
  %912 = fn () -> (Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) {
    %906 = @func_11915() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) */;
    %907 = @func_10449() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
    %908 = @func_9343() /* ty=(Tensor[(84), float32],) */;
    %909 = %906.0;
    %910 = %907.0;
    %911 = %908.0;
    (%909, %910, %911)
  };
  %912() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) */
}

def @func_17411() -> Tensor[(84), float32] {
  %913 = @func_4686() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), int64]) */;
  %913.0
}

def @func_2401() -> (Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %914 = @func_1834() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %915 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %916 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %917 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %918 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
  %919 = @func_2195() /* ty=Tensor[(84), float32] */;
  %920 = %914.0;
  %921 = %915.2;
  %922 = %916.0;
  %923 = %917.2;
  %924 = @func_1930() /* ty=Tensor[(546), uint64] */;
  (%918, %919, %920, %921, %922, %923, %924)
}

def @func_3283(%var_3281: Tensor[(10, 14, 4), bool]) -> Tensor[(10, 14, 4), bool] {
  @func_3280(%var_3281) /* ty=Tensor[(10, 14, 4), bool] */
}

def @func_10022() -> Tensor[(3, 14, 13), uint64] {
  %925 = @func_1834() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %925.1
}

def @func_17413() -> Tensor[(84), float32] {
  @func_17411() /* ty=Tensor[(84), float32] */
}

def @func_16153() -> (Tensor[(84), float32],) {
  %926 = @func_6333() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %927 = %926.1;
  (%927,)
}

def @func_2669() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) {
  @func_2667() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) */
}

def @func_13392() -> (Tensor[(546), uint64], Tensor[(546), uint64]) {
  %931 = fn () -> (Tensor[(546), uint64], Tensor[(546), uint64]) {
    %928 = @func_5851() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */;
    %929 = @func_3217() /* ty=Tensor[(546), uint64] */;
    %930 = %928.0;
    (%929, %930)
  };
  %931() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_16953() -> (Tensor[(3, 14, 13), float64],) {
  @func_16951() /* ty=(Tensor[(3, 14, 13), float64],) */
}

def @func_11250() -> Tensor[(16, 8, 3), uint16] {
  @func_7347() /* ty=Tensor[(16, 8, 3), uint16] */
}

def @func_2617() -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) {
  %932 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
  %933 = %932.2;
  %934 = @func_1878() /* ty=Tensor[(546), uint64] */;
  (%933, %934)
}

def @func_5549() -> (Tensor[(3, 14, 13), uint64], Tensor[(16, 8, 3), uint16], Tensor[(1, 384), float64]) {
  @func_5547() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(16, 8, 3), uint16], Tensor[(1, 384), float64]) */
}

def @func_11267() -> (Tensor[(546), uint64],) {
  %935 = @func_4074() /* ty=Tensor[(546), uint64] */;
  (%935,)
}

def @func_4288(%var_4286: Tensor[(16, 8, 3), float64], %var_4287: Tensor[(16, 8, 3), float64]) -> (Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16]) {
  @func_4284(%var_4286, %var_4287) /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16]) */
}

def @func_2739() -> (Tensor[(84), float32], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32], Tensor[(546), uint64]) {
  %936 = @func_1948() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %937 = %936.2;
  %938 = cast(%937, dtype="float32") /* ty=Tensor[(84), float32] */;
  %939 = reshape(%938, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %940 = @func_2686(%939) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %941 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %942 = @func_1632() /* ty=(Tensor[(546), uint64],) */;
  %943 = cast(meta[relay.Constant][29] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %944 = reshape(%943, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float32] */;
  %945 = @func_2026(%944) /* ty=(Tensor[(8, 3, 15), float32], Tensor[(3, 14, 13), uint64]) */;
  %946 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %947 = %940.1;
  %948 = %941.0;
  %949 = %942.0;
  %950 = %945.1;
  %951 = %946.1;
  (%937, %947, %948, %949, %950, meta[relay.Constant][29] /* ty=Tensor[(360), float32] */, %951)
}

def @func_11954(%var_11923: Tensor[(1, 7, 12), int32]) -> (Tensor[(3, 14, 13), float64], Tensor[(84), float32], Tensor[(1, 7, 12), float32]) {
  %952 = @func_6730() /* ty=(Tensor[(3, 14, 13), float64],) */;
  %953 = @func_11005() /* ty=(Tensor[(84), float32],) */;
  %954 = cast(-7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %955 = cast(%var_11923, dtype="int32") /* ty=Tensor[(1, 7, 12), int32] */;
  %956 = minimum(%954, %955) /* ty=Tensor[(1, 7, 12), int32] */;
  %957 = cast(%956, dtype="float64") /* ty=Tensor[(1, 7, 12), float64] */;
  %958 = sinh(%957) /* ty=Tensor[(1, 7, 12), float64] */;
  %959 = cast(%958, dtype="float32") /* ty=Tensor[(1, 7, 12), float32] */;
  %960 = %952.0;
  %961 = %953.0;
  %962 = cosh(%959) /* ty=Tensor[(1, 7, 12), float32] */;
  (%960, %961, %962)
}

def @func_9962(%var_9960: Tensor[(10, 15, 11), int8], %var_9961: Tensor[(10, 15, 11), int8]) -> Tensor[(10, 15, 11), bool] {
  %967 = fn (%var_9946: Tensor[(10, 15, 11), int8], %var_9947: Tensor[(10, 15, 11), int8]) -> Tensor[(10, 15, 11), bool] {
    %963 = cast(%var_9947, dtype="bool") /* ty=Tensor[(10, 15, 11), bool] */;
    %964 = shape_of(%var_9946, dtype="int32") /* ty=Tensor[(3), int32] */;
    %965 = cast(%var_9946, dtype="bool") /* ty=Tensor[(10, 15, 11), bool] */;
    %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%965, %966) /* ty=Tensor[(10, 15, 11), bool] */
  };
  %967(%var_9960, %var_9961) /* ty=Tensor[(10, 15, 11), bool] */
}

def @func_1949() -> (Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) {
  %974 = fn () -> (Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) {
    %968 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
    %969 = cast(meta[relay.Constant][30] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
    %970 = reshape(%969, newshape=[7, 1, 12]) /* ty=Tensor[(7, 1, 12), float32] */;
    %971 = @func_193(%970) /* ty=(Tensor[(7, 1, 12), float32],) */;
    %972 = %968.0;
    %973 = %971.0;
    (%972, %973, meta[relay.Constant][30] /* ty=Tensor[(84), float32] */)
  };
  %974() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */
}

def @func_1632() -> (Tensor[(546), uint64],) {
  %975 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %976 = %975.2;
  (%976,)
}

def @func_6744() -> (Tensor[(8, 9, 15), float64],) {
  @func_6742() /* ty=(Tensor[(8, 9, 15), float64],) */
}

def @func_12547() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) {
  %981 = fn () -> (Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) {
    %977 = @func_11267() /* ty=(Tensor[(546), uint64],) */;
    %978 = @func_4385() /* ty=(Tensor[(3, 14, 13), uint64],) */;
    %979 = %977.0;
    %980 = %978.0;
    (%979, %980)
  };
  %981() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) */
}

def @func_12729(%var_12727: Tensor[(3, 8, 13), float64], %var_12728: Tensor[(560), bool]) -> (Tensor[(3, 8, 13), float32], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(560), bool], Tensor[(546), uint64]) {
  %994 = fn (%var_12671: Tensor[(3, 8, 13), float64], %var_12710: Tensor[(560), bool]) -> (Tensor[(3, 8, 13), float32], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(560), bool], Tensor[(546), uint64]) {
    %982 = cast(%var_12671, dtype="float64") /* ty=Tensor[(3, 8, 13), float64] */;
    %983 = sqrt(%982) /* ty=Tensor[(3, 8, 13), float64] */;
    %984 = cast(%983, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
    %985 = @func_11267() /* ty=(Tensor[(546), uint64],) */;
    %986 = cast(%var_12710, dtype="bool") /* ty=Tensor[(560), bool] */;
    %987 = reshape(%986, newshape=[560]) /* ty=Tensor[(560), bool] */;
    %988 = @func_8190(%987) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(10, 14, 4), bool], Tensor[(560), bool]) */;
    %989 = @func_5170() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
    %990 = cos(%984) /* ty=Tensor[(3, 8, 13), float32] */;
    %991 = %985.0;
    %992 = %988.1;
    %993 = %989.2;
    (%990, %991, %992, %var_12710, %993)
  };
  %994(%var_12727, %var_12728) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(560), bool], Tensor[(546), uint64]) */
}

def @func_13170(%var_13168: Tensor[(5, 6, 11), float32]) -> (Tensor[(5, 6, 11), float32],) {
  @func_13167(%var_13168) /* ty=(Tensor[(5, 6, 11), float32],) */
}

def @func_6680() -> (Tensor[(8, 9, 15), float32], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) {
  @func_6678() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) */
}

def @func_3984() -> (Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) {
  @func_3982() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */
}

def @func_16524(%var_16522: Tensor[(4, 8, 6), float64]) -> (Tensor[(4, 8, 6), int8], Tensor[(84), float32], Tensor[(546), uint64]) {
  @func_16521(%var_16522) /* ty=(Tensor[(4, 8, 6), int8], Tensor[(84), float32], Tensor[(546), uint64]) */
}

def @func_19113() -> (Tensor[(8, 9, 15), float32],) {
  %995 = @func_12476() /* ty=Tensor[(8, 9, 15), float32] */;
  (%995,)
}

def @func_16286() -> Tensor[(84), float32] {
  %996 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %996.0
}

def @func_13869(%var_13867: Tensor[(16, 5, 16), uint16], %var_13868: Tensor[(16, 5, 16), uint16]) -> (Tensor[(16, 5, 16), bool], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) {
  %1005 = fn (%var_13850: Tensor[(16, 5, 16), uint16], %var_13851: Tensor[(16, 5, 16), uint16]) -> (Tensor[(16, 5, 16), bool], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) {
    %997 = cast(%var_13851, dtype="bool") /* ty=Tensor[(16, 5, 16), bool] */;
    %998 = shape_of(%var_13850, dtype="int32") /* ty=Tensor[(3), int32] */;
    %999 = cast(%var_13850, dtype="bool") /* ty=Tensor[(16, 5, 16), bool] */;
    %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1001 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
    %1002 = less(%999, %1000) /* ty=Tensor[(16, 5, 16), bool] */;
    %1003 = @func_12582() /* ty=Tensor[(3, 14, 13), uint64] */;
    %1004 = %1001.1;
    (%1002, %1003, %1004)
  };
  %1005(%var_13867, %var_13868) /* ty=(Tensor[(16, 5, 16), bool], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */
}

def @func_11816() -> (Tensor[(546), uint64], Tensor[(84), float32]) {
  %1010 = fn () -> (Tensor[(546), uint64], Tensor[(84), float32]) {
    %1006 = @func_10722() /* ty=(Tensor[(546), uint64],) */;
    %1007 = @func_5026() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32]) */;
    %1008 = %1006.0;
    %1009 = %1007.2;
    (%1008, %1009)
  };
  %1010() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */
}

def @func_14588(%var_14587: Tensor[(8, 9, 15), float64]) -> (Tensor[(84), float32], Tensor[(8, 9, 15), bool], Tensor[(2, 5, 14), float32], Tensor[(140), float32]) {
  %1023 = fn (%var_14569: Tensor[(8, 9, 15), float64]) -> (Tensor[(84), float32], Tensor[(8, 9, 15), bool], Tensor[(2, 5, 14), float32], Tensor[(140), float32]) {
    %1011 = @func_9542() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(84), float32]) */;
    %1012 = %1011.0;
    %1013 = cast(%var_14569, dtype="bool") /* ty=Tensor[(8, 9, 15), bool] */;
    %1014 = shape_of(%1012, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1015 = cast(%1012, dtype="bool") /* ty=Tensor[(8, 9, 15), bool] */;
    %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1017 = cast(meta[relay.Constant][31] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
    %1018 = reshape(%1017, newshape=[2, 5, 14]) /* ty=Tensor[(2, 5, 14), float32] */;
    %1019 = @func_11544(%1018) /* ty=(Tensor[(2, 5, 14), float32],) */;
    %1020 = @func_3243() /* ty=Tensor[(84), float32] */;
    %1021 = less(%1015, %1016) /* ty=Tensor[(8, 9, 15), bool] */;
    %1022 = %1019.0;
    (%1020, %1021, %1022, meta[relay.Constant][31] /* ty=Tensor[(140), float32] */)
  };
  %1023(%var_14587) /* ty=(Tensor[(84), float32], Tensor[(8, 9, 15), bool], Tensor[(2, 5, 14), float32], Tensor[(140), float32]) */
}

def @func_5474() -> (Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) {
  %1024 = @func_4231() /* ty=Tensor[(546), uint64] */;
  %1025 = cast(%1024, dtype="uint64") /* ty=Tensor[(546), uint64] */;
  %1026 = reshape(%1025, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), uint64] */;
  %1027 = @func_5026() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32]) */;
  %1028 = @func_96(%1026) /* ty=Tensor[(3, 14, 13), uint64] */;
  %1029 = cast(%1028, dtype="float64") /* ty=Tensor[(3, 14, 13), float64] */;
  %1030 = reshape(%1029, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), float64] */;
  %1031 = @func_3201() /* ty=Tensor[(2, 180), float32] */;
  %1032 = %1027.2;
  %1033 = @func_3150() /* ty=Tensor[(8, 9, 15), float64] */;
  %1034 = @func_5292(%1030) /* ty=Tensor[(3, 14, 13), uint64] */;
  %1035 = @func_2942() /* ty=Tensor[(84), float32] */;
  (%1031, %1024, %1028, %1032, %1033, %1034, %1035)
}

def @func_15755() -> (Tensor[(8, 9, 15), float32], Tensor[(546), uint64], Tensor[(84), float32]) {
  %1036 = @func_5996() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(2, 180), bool]) */;
  %1037 = @func_12476() /* ty=Tensor[(8, 9, 15), float32] */;
  %1038 = @func_11982() /* ty=Tensor[(546), uint64] */;
  %1039 = %1036.1;
  (%1037, %1038, %1039)
}

def @func_16402(%var_16392: Tensor[(2, 12, 1), float64]) -> (Tensor[(2, 12, ?), float64], Tensor[(2, 12, 1), float32]) {
  %1040 = cast(%var_16392, dtype="float64") /* ty=Tensor[(2, 12, 1), float64] */;
  %1041 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(2, 12, 1), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1042 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 12, 1), float64] */, dtype="float64") /* ty=Tensor[(2, 12, 1), float64] */;
  %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1044 = cast(%var_16392, dtype="float32") /* ty=Tensor[(2, 12, 1), float32] */;
  %1045 = floor_divide(%1042, %1043) /* ty=Tensor[(2, 12, ?), float64] */;
  %1046 = log10(%1044) /* ty=Tensor[(2, 12, 1), float32] */;
  (%1045, %1046)
}

def @func_2619() -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) {
  @func_2617() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */
}

def @func_15834() -> Tensor[(3, 14, 13), uint64] {
  @func_15832() /* ty=Tensor[(3, 14, 13), uint64] */
}

def @func_11535(%var_11533: Tensor[(5, 11, 14), int32], %var_11534: Tensor[(5, 11, 14), int32]) -> (Tensor[(5, 11, 14), int32], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(546), uint64]) {
  %1058 = fn (%var_11511: Tensor[(5, 11, 14), int32], %var_11512: Tensor[(5, 11, 14), int32]) -> (Tensor[(5, 11, 14), int32], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(546), uint64]) {
    %1047 = cast(%var_11512, dtype="int32") /* ty=Tensor[(5, 11, 14), int32] */;
    %1048 = shape_of(%var_11511, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1049 = cast(%var_11511, dtype="int32") /* ty=Tensor[(5, 11, 14), int32] */;
    %1050 = dyn.reshape(%1047, %1048, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1051 = @func_5547() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(16, 8, 3), uint16], Tensor[(1, 384), float64]) */;
    %1052 = @func_7000() /* ty=(Tensor[(84), float32], Tensor[(16, 8, 3), uint16]) */;
    %1053 = @func_4138() /* ty=(Tensor[(546), uint64],) */;
    %1054 = right_shift(%1049, %1050) /* ty=Tensor[(5, 11, 14), int32] */;
    %1055 = %1051.0;
    %1056 = %1052.0;
    %1057 = %1053.0;
    (%1054, %1055, %1056, %1057)
  };
  %1058(%var_11533, %var_11534) /* ty=(Tensor[(5, 11, 14), int32], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(546), uint64]) */
}

def @func_14871() -> Tensor[(84), float32] {
  @func_10582() /* ty=Tensor[(84), float32] */
}

def @func_14376() -> (Tensor[(546), uint64],) {
  %1059 = @func_3217() /* ty=Tensor[(546), uint64] */;
  (%1059,)
}

def @func_14611() -> Tensor[(546), uint64] {
  %1061 = fn () -> Tensor[(546), uint64] {
    %1060 = @func_3854() /* ty=(Tensor[(546), uint64],) */;
    %1060.0
  };
  %1061() /* ty=Tensor[(546), uint64] */
}

def @func_16880() -> (Tensor[(3, 14, 13), float64],) {
  %1063 = fn () -> (Tensor[(3, 14, 13), float64],) {
    %1062 = @func_4025() /* ty=Tensor[(3, 14, 13), float64] */;
    (%1062,)
  };
  %1063() /* ty=(Tensor[(3, 14, 13), float64],) */
}

def @func_3676(%var_3674: Tensor[(360), float32], %var_3675: Tensor[(128), uint64]) -> (Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(512), uint64], Tensor[(7, 1, 12), float32], Tensor[(8, 3, 15), float32], Tensor[(360), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(128), float64]) {
  %1084 = fn (%var_3632: Tensor[(360), float32], %var_3669: Tensor[(128), uint64]) -> (Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(512), uint64], Tensor[(7, 1, 12), float32], Tensor[(8, 3, 15), float32], Tensor[(360), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(128), float64]) {
    %1064 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
    %1065 = cast(meta[relay.Constant][33] /* ty=Tensor[(128), uint64] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
    %1066 = cast(meta[relay.Constant][34] /* ty=Tensor[(512), uint64] */, dtype="uint64") /* ty=Tensor[(512), uint64] */;
    %1067 = reshape(%1065, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), uint64] */;
    %1068 = reshape(%1066, newshape=[16, 8, 4]) /* ty=Tensor[(16, 8, 4), uint64] */;
    %1069 = @func_2739() /* ty=(Tensor[(84), float32], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32], Tensor[(546), uint64]) */;
    %1070 = cast(%var_3632, dtype="float32") /* ty=Tensor[(360), float32] */;
    %1071 = reshape(%1070, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float32] */;
    %1072 = @func_2026(%1071) /* ty=(Tensor[(8, 3, 15), float32], Tensor[(3, 14, 13), uint64]) */;
    %1073 = cast(%var_3669, dtype="float64") /* ty=Tensor[(128), float64] */;
    %1074 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(128), uint64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1075 = cast(meta[relay.Constant][33] /* ty=Tensor[(128), uint64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
    %1076 = dyn.reshape(%1073, %1074, newshape=[]) /* ty=Tensor[(?), float64] */;
    %1077 = %1064.0;
    %1078 = @func_3037(%1067, %1068) /* ty=Tensor[(16, 8, 4), uint64] */;
    %1079 = %1069.1;
    %1080 = %1072.0;
    %1081 = @func_3150() /* ty=Tensor[(8, 9, 15), float64] */;
    %1082 = @func_2897() /* ty=Tensor[(546), uint64] */;
    %1083 = subtract(%1075, %1076) /* ty=Tensor[(128), float64] */;
    (%1077, %1078, meta[relay.Constant][34] /* ty=Tensor[(512), uint64] */, %1079, %1080, %var_3632, %1081, %1082, %1083)
  };
  %1084(%var_3674, %var_3675) /* ty=(Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(512), uint64], Tensor[(7, 1, 12), float32], Tensor[(8, 3, 15), float32], Tensor[(360), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(128), float64]) */
}

def @func_5199(%var_5183: Tensor[(3, 14, 13), float64]) -> (Tensor[(3, 14, 13), float32], Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float64]) {
  %1085 = @func_2557() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */;
  %1086 = %1085.1;
  %1087 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 14, 13), float64] */, dtype="float32") /* ty=Tensor[(3, 14, 13), float32] */;
  %1088 = shape_of(%1086, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1089 = cast(%1086, dtype="float32") /* ty=Tensor[(3, 14, 13), float32] */;
  %1090 = dyn.reshape(%1087, %1088, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1091 = cast(%var_5183, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %1092 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(3, 14, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1093 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 14, 13), float64] */, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %1094 = dyn.reshape(%1091, %1092, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1095 = floor_mod(%1089, %1090) /* ty=Tensor[(3, 14, 13), float32] */;
  %1096 = greater(%1093, %1094) /* ty=Tensor[(3, 14, 13), bool] */;
  %1097 = @func_4348() /* ty=Tensor[(3, 14, 13), float64] */;
  (%1095, %1096, %1097)
}

def @func_3434() -> (Tensor[(546), uint64],) {
  @func_3432() /* ty=(Tensor[(546), uint64],) */
}

def @func_6769() -> (Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float64]) {
  %1102 = fn () -> (Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float64]) {
    %1098 = @func_4385() /* ty=(Tensor[(3, 14, 13), uint64],) */;
    %1099 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
    %1100 = %1098.0;
    %1101 = %1099.0;
    (%1100, %1101)
  };
  %1102() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float64]) */
}

def @func_10622() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) {
  %1107 = fn () -> (Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) {
    %1103 = @func_9850() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(512), uint64]) */;
    %1104 = @func_6730() /* ty=(Tensor[(3, 14, 13), float64],) */;
    %1105 = %1103.1;
    %1106 = %1104.0;
    (%1105, %1106)
  };
  %1107() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */
}

def @func_6730() -> (Tensor[(3, 14, 13), float64],) {
  %1108 = @func_4348() /* ty=Tensor[(3, 14, 13), float64] */;
  (%1108,)
}

def @func_6199() -> Tensor[(84), float32] {
  %1109 = @func_2401() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1109.1
}

def @func_6333() -> (Tensor[(546), uint64], Tensor[(84), float32]) {
  %1110 = @func_2567() /* ty=(Tensor[(546), uint64],) */;
  %1111 = @func_2459() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) */;
  %1112 = %1110.0;
  %1113 = %1111.0;
  (%1112, %1113)
}

def @func_15502(%var_15501: Tensor[(5, 4, 7), float32]) -> Tensor[(5, 4, 7), float32] {
  %1115 = fn (%var_15497: Tensor[(5, 4, 7), float32]) -> Tensor[(5, 4, 7), float32] {
    %1114 = cast(%var_15497, dtype="float32") /* ty=Tensor[(5, 4, 7), float32] */;
    log2(%1114) /* ty=Tensor[(5, 4, 7), float32] */
  };
  %1115(%var_15501) /* ty=Tensor[(5, 4, 7), float32] */
}

def @func_2002() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %1121 = fn () -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) {
    %1116 = @func_1632() /* ty=(Tensor[(546), uint64],) */;
    %1117 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
    %1118 = %1116.0;
    %1119 = %1117.1;
    %1120 = @func_1930() /* ty=Tensor[(546), uint64] */;
    (%1118, %1119, %1120)
  };
  %1121() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_3219() -> Tensor[(546), uint64] {
  @func_3217() /* ty=Tensor[(546), uint64] */
}

def @func_5946() -> Tensor[(546), uint64] {
  @func_2787() /* ty=Tensor[(546), uint64] */
}

def @func_9012() -> (Tensor[(546), uint64],) {
  %1124 = fn () -> (Tensor[(546), uint64],) {
    %1122 = @func_3432() /* ty=(Tensor[(546), uint64],) */;
    %1123 = %1122.0;
    (%1123,)
  };
  %1124() /* ty=(Tensor[(546), uint64],) */
}

def @func_2759() -> (Tensor[(546), uint64],) {
  @func_2757() /* ty=(Tensor[(546), uint64],) */
}

def @func_8312() -> (Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) {
  @func_8310() /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_7332() -> (Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) {
  %1130 = fn () -> (Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) {
    %1125 = @func_4853() /* ty=(Tensor[(546), uint64],) */;
    %1126 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
    %1127 = @func_3390() /* ty=Tensor[(84), float32] */;
    %1128 = %1125.0;
    %1129 = %1126.1;
    (%1127, %1128, %1129)
  };
  %1130() /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_1880() -> Tensor[(546), uint64] {
  @func_1878() /* ty=Tensor[(546), uint64] */
}

def @func_9838() -> (Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16], Tensor[(546), uint64]) {
  @func_9836() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(16, 8, 3), uint16], Tensor[(546), uint64]) */
}

def @func_11377(%var_11356: Tensor[(28), uint16], %var_11357: Tensor[(32, 4), uint64]) -> (Tensor[(546), uint64], Tensor[(4, 1, 7), uint16], uint16, Tensor[(28), uint16], Tensor[(512), uint64], Tensor[(32, 4), float64]) {
  %1131 = cast(meta[relay.Constant][36] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1132 = cast(%var_11356, dtype="uint16") /* ty=Tensor[(28), uint16] */;
  %1133 = cast(%var_11357, dtype="uint64") /* ty=Tensor[(32, 4), uint64] */;
  %1134 = cast(meta[relay.Constant][37] /* ty=Tensor[(512), uint64] */, dtype="uint64") /* ty=Tensor[(512), uint64] */;
  %1135 = reshape(%1131, newshape=[]) /* ty=uint16 */;
  %1136 = reshape(%1132, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), uint16] */;
  %1137 = reshape(%1133, newshape=[128]) /* ty=Tensor[(128), uint64] */;
  %1138 = reshape(%1134, newshape=[512]) /* ty=Tensor[(512), uint64] */;
  %1139 = @func_3796(%1135, %1136, %1137, %1138) /* ty=(Tensor[(4, 1, 7), uint16], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %1140 = cast(%var_11357, dtype="float64") /* ty=Tensor[(32, 4), float64] */;
  %1141 = @func_1930() /* ty=Tensor[(546), uint64] */;
  %1142 = %1139.0;
  %1143 = log10(%1140) /* ty=Tensor[(32, 4), float64] */;
  (%1141, %1142, meta[relay.Constant][36] /* ty=uint16 */, %var_11356, meta[relay.Constant][37] /* ty=Tensor[(512), uint64] */, %1143)
}

def @func_13482() -> Tensor[(8, 9, 15), float64] {
  %1144 = @func_5104() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), bool]) */;
  %1144.0
}

def @func_11496() -> (Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(3, 14, 13), int64], Tensor[(3, 14, 13), float64]) {
  %1157 = fn () -> (Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(3, 14, 13), int64], Tensor[(3, 14, 13), float64]) {
    %1145 = @func_6955() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
    %1146 = @func_5141() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
    %1147 = @func_7616() /* ty=(Tensor[(546), uint64],) */;
    %1148 = @func_5617() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(3, 14, 13), uint64]) */;
    %1149 = @func_4521() /* ty=(Tensor[(3, 14, 13), int64], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) */;
    %1150 = @func_8208() /* ty=(Tensor[(3, 14, 13), float64],) */;
    %1151 = %1145.0;
    %1152 = %1146.0;
    %1153 = %1147.0;
    %1154 = %1148.0;
    %1155 = %1149.0;
    %1156 = %1150.0;
    (%1151, %1152, %1153, %1154, %1155, %1156)
  };
  %1157() /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(3, 14, 13), int64], Tensor[(3, 14, 13), float64]) */
}

def @func_14458() -> (Tensor[(7, 1, 12), float64],) {
  %1164 = fn () -> (Tensor[(7, 1, 12), float64],) {
    %1158 = @func_1948() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
    %1159 = %1158.1;
    %1160 = cast(%1159, dtype="float64") /* ty=Tensor[(7, 1, 12), float64] */;
    %1161 = cosh(%1160) /* ty=Tensor[(7, 1, 12), float64] */;
    %1162 = cast(%1161, dtype="float64") /* ty=Tensor[(7, 1, 12), float64] */;
    %1163 = sqrt(%1162) /* ty=Tensor[(7, 1, 12), float64] */;
    (%1163,)
  };
  %1164() /* ty=(Tensor[(7, 1, 12), float64],) */
}

def @func_4075() -> Tensor[(546), uint64] {
  %1166 = fn () -> Tensor[(546), uint64] {
    %1165 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
    %1165.1
  };
  %1166() /* ty=Tensor[(546), uint64] */
}

def @func_11631() -> (Tensor[(4, 1, 13), bool], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(84), float32], Tensor[(8, 9, 15), float32]) {
  %1180 = fn () -> (Tensor[(4, 1, 13), bool], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(84), float32], Tensor[(8, 9, 15), float32]) {
    %1167 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %1168 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 1, 13), bool] */, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
    %1169 = @func_2001() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
    %1170 = @func_9943() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
    %1171 = @func_6730() /* ty=(Tensor[(3, 14, 13), float64],) */;
    %1172 = @func_1649() /* ty=(Tensor[(84), float32],) */;
    %1173 = @func_10199() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(3, 14, 13), uint64]) */;
    %1174 = logical_or(%1167, %1168) /* ty=Tensor[(4, 1, 13), bool] */;
    %1175 = %1169.1;
    %1176 = %1170.2;
    %1177 = %1171.0;
    %1178 = %1172.0;
    %1179 = %1173.0;
    (%1174, %1175, %1176, %1177, %1178, %1179)
  };
  %1180() /* ty=(Tensor[(4, 1, 13), bool], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(3, 14, 13), float64], Tensor[(84), float32], Tensor[(8, 9, 15), float32]) */
}

def @func_17065() -> (Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(84), float32]) {
  %1185 = fn () -> (Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(84), float32]) {
    %1181 = @func_14485() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32]) */;
    %1182 = @func_12661() /* ty=Tensor[(84), float32] */;
    %1183 = %1181.0;
    %1184 = @func_2195() /* ty=Tensor[(84), float32] */;
    (%1182, %1183, %1184)
  };
  %1185() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(84), float32]) */
}

def @func_2557() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) {
  %1186 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
  %1187 = cast(%1186, dtype="float64") /* ty=Tensor[(3, 14, 13), float64] */;
  %1188 = @func_1878() /* ty=Tensor[(546), uint64] */;
  %1189 = acos(%1187) /* ty=Tensor[(3, 14, 13), float64] */;
  (%1188, %1189)
}

def @func_18522() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64]) {
  %1190 = @func_5329() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %1191 = @func_7230() /* ty=(Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64]) */;
  %1192 = %1190.0;
  %1193 = %1191.2;
  (%1192, %1193)
}

def @func_16465(%var_16445: Tensor[(192), int64], %var_16446: Tensor[(1536), int64]) -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(750), uint32], Tensor[(192), int64], Tensor[(1536), int64]) {
  %1194 = @func_6032() /* ty=(Tensor[(8, 9, 15), uint8], Tensor[(546), uint64]) */;
  %1195 = cast(meta[relay.Constant][39] /* ty=Tensor[(750), uint32] */, dtype="uint32") /* ty=Tensor[(750), uint32] */;
  %1196 = cast(meta[relay.Constant][39] /* ty=Tensor[(750), uint32] */, dtype="uint32") /* ty=Tensor[(750), uint32] */;
  %1197 = cast(%var_16445, dtype="int64") /* ty=Tensor[(192), int64] */;
  %1198 = cast(%var_16446, dtype="int64") /* ty=Tensor[(1536), int64] */;
  %1199 = reshape(%1195, newshape=[15, 10, 5]) /* ty=Tensor[(15, 10, 5), uint32] */;
  %1200 = reshape(%1196, newshape=[15, 10, 5]) /* ty=Tensor[(15, 10, 5), uint32] */;
  %1201 = reshape(%1197, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %1202 = reshape(%1198, newshape=[2, 768]) /* ty=Tensor[(2, 768), int64] */;
  %1203 = @func_6920(%1199, %1200, %1201, %1202) /* ty=(Tensor[(15, 10, 5), uint32], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(2, 768), int64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
  %1204 = @func_8356() /* ty=Tensor[(8, 9, 15), float64] */;
  %1205 = %1194.1;
  %1206 = %1203.1;
  (%1204, %1205, %1206, meta[relay.Constant][39] /* ty=Tensor[(750), uint32] */, %var_16445, %var_16446)
}

def @func_19115() -> (Tensor[(8, 9, 15), float32],) {
  @func_19113() /* ty=(Tensor[(8, 9, 15), float32],) */
}

def @func_18524() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64]) {
  @func_18522() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64]) */
}

def @func_19191() -> Tensor[(546), uint64] {
  @func_19189() /* ty=Tensor[(546), uint64] */
}

def @func_12789() -> Tensor[(84), float32] {
  %1207 = @func_10123() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %1207.1
}

def @func_18950() -> (Tensor[(84), float32],) {
  @func_18948() /* ty=(Tensor[(84), float32],) */
}

def @func_17288() -> (Tensor[(546), uint64],) {
  @func_17286() /* ty=(Tensor[(546), uint64],) */
}

def @func_4349() -> Tensor[(3, 14, 13), float64] {
  %1210 = fn () -> Tensor[(3, 14, 13), float64] {
    %1208 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
    %1209 = cast(%1208, dtype="float64") /* ty=Tensor[(3, 14, 13), float64] */;
    atanh(%1209) /* ty=Tensor[(3, 14, 13), float64] */
  };
  %1210() /* ty=Tensor[(3, 14, 13), float64] */
}

def @func_13531(%var_13530: Tensor[(3, 14, 13), float64]) -> (Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float32]) {
  %1220 = fn (%var_13500: Tensor[(3, 14, 13), float64]) -> (Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float32]) {
    %1211 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
    %1212 = %1211.0;
    %1213 = cast(%var_13500, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
    %1214 = shape_of(%1212, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1215 = cast(%1212, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
    %1216 = dyn.reshape(%1213, %1214, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1217 = cast(%1212, dtype="float32") /* ty=Tensor[(3, 14, 13), float32] */;
    %1218 = equal(%1215, %1216) /* ty=Tensor[(3, 14, 13), bool] */;
    %1219 = sinh(%1217) /* ty=Tensor[(3, 14, 13), float32] */;
    (%1218, %1219)
  };
  %1220(%var_13530) /* ty=(Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float32]) */
}

def @func_7230() -> (Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), float64]) {
  %1221 = @func_6333() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %1222 = @func_3598() /* ty=(Tensor[(3, 14, 13), float64],) */;
  %1223 = %1221.0;
  %1224 = @func_3150() /* ty=Tensor[(8, 9, 15), float64] */;
  %1225 = %1222.0;
  (%1223, %1224, %1225)
}

def @func_1486() -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) {
  %1235 = fn () -> (Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) {
    %1226 = @func_1365() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
    %1227 = cast(meta[relay.Constant][40] /* ty=Tensor[(546), uint64] */, dtype="uint64") /* ty=Tensor[(546), uint64] */;
    %1228 = reshape(%1227, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), uint64] */;
    %1229 = cast(meta[relay.Constant][41] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
    %1230 = reshape(%1229, newshape=[7, 1, 12]) /* ty=Tensor[(7, 1, 12), float32] */;
    %1231 = @func_193(%1230) /* ty=(Tensor[(7, 1, 12), float32],) */;
    %1232 = %1226.0;
    %1233 = @func_96(%1228) /* ty=Tensor[(3, 14, 13), uint64] */;
    %1234 = %1231.0;
    (%1232, %1233, meta[relay.Constant][40] /* ty=Tensor[(546), uint64] */, %1234, meta[relay.Constant][41] /* ty=Tensor[(84), float32] */)
  };
  %1235() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */
}

def @func_13955() -> (Tensor[(1, 384), float64],) {
  %1236 = @func_5547() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(16, 8, 3), uint16], Tensor[(1, 384), float64]) */;
  %1237 = %1236.2;
  (%1237,)
}

def @func_18431() -> Tensor[(84), float32] {
  %1239 = fn () -> Tensor[(84), float32] {
    %1238 = @func_8640() /* ty=(Tensor[(84), float32],) */;
    %1238.0
  };
  %1239() /* ty=Tensor[(84), float32] */
}

def @func_7855(%var_7853: Tensor[(192), int64]) -> (Tensor[(2, 180), uint16], Tensor[(8, 9, 15), float64], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(1536), int64], Tensor[(84), float32]) {
  @func_7852(%var_7853) /* ty=(Tensor[(2, 180), uint16], Tensor[(8, 9, 15), float64], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(1536), int64], Tensor[(84), float32]) */
}

def @func_5948() -> Tensor[(546), uint64] {
  @func_5946() /* ty=Tensor[(546), uint64] */
}

def @func_11381(%var_11379: Tensor[(28), uint16], %var_11380: Tensor[(32, 4), uint64]) -> (Tensor[(546), uint64], Tensor[(4, 1, 7), uint16], uint16, Tensor[(28), uint16], Tensor[(512), uint64], Tensor[(32, 4), float64]) {
  @func_11377(%var_11379, %var_11380) /* ty=(Tensor[(546), uint64], Tensor[(4, 1, 7), uint16], uint16, Tensor[(28), uint16], Tensor[(512), uint64], Tensor[(32, 4), float64]) */
}

def @func_5793() -> (Tensor[(84), float32], Tensor[(546), uint64]) {
  %1243 = fn () -> (Tensor[(84), float32], Tensor[(546), uint64]) {
    %1240 = @func_5026() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32]) */;
    %1241 = @func_2195() /* ty=Tensor[(84), float32] */;
    %1242 = %1240.0;
    (%1241, %1242)
  };
  %1243() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */
}

def @func_14154(%var_14057: Tensor[(48, 4), int64], %var_14073: Tensor[(48, 4), int64]) -> (Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(16, 12, 8), int64], Tensor[(750), uint32], Tensor[(1536), int64], Tensor[(48, 4), bool], Tensor[(3, 14, 13), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) {
  %1244 = cast(meta[relay.Constant][42] /* ty=Tensor[(750), uint32] */, dtype="uint32") /* ty=Tensor[(750), uint32] */;
  %1245 = cast(meta[relay.Constant][42] /* ty=Tensor[(750), uint32] */, dtype="uint32") /* ty=Tensor[(750), uint32] */;
  %1246 = cast(%var_14057, dtype="int64") /* ty=Tensor[(48, 4), int64] */;
  %1247 = cast(meta[relay.Constant][43] /* ty=Tensor[(1536), int64] */, dtype="int64") /* ty=Tensor[(1536), int64] */;
  %1248 = reshape(%1244, newshape=[15, 10, 5]) /* ty=Tensor[(15, 10, 5), uint32] */;
  %1249 = reshape(%1245, newshape=[15, 10, 5]) /* ty=Tensor[(15, 10, 5), uint32] */;
  %1250 = reshape(%1246, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %1251 = reshape(%1247, newshape=[2, 768]) /* ty=Tensor[(2, 768), int64] */;
  %1252 = @func_6920(%1248, %1249, %1250, %1251) /* ty=(Tensor[(15, 10, 5), uint32], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32], Tensor[(16, 12, 8), int64], Tensor[(192), int64], Tensor[(2, 768), int64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
  %1253 = cast(%var_14073, dtype="bool") /* ty=Tensor[(48, 4), bool] */;
  %1254 = shape_of(%var_14057, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1255 = cast(%var_14057, dtype="bool") /* ty=Tensor[(48, 4), bool] */;
  %1256 = dyn.reshape(%1253, %1254, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1257 = not_equal(%1255, %1256) /* ty=Tensor[(48, 4), bool] */;
  %1258 = cast(%var_14073, dtype="bool") /* ty=Tensor[(48, 4), bool] */;
  %1259 = shape_of(%1257, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1260 = cast(%1257, dtype="bool") /* ty=Tensor[(48, 4), bool] */;
  %1261 = dyn.reshape(%1258, %1259, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1262 = @func_12131() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %1263 = @func_5141() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1264 = @func_10621() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */;
  %1265 = @func_3165() /* ty=Tensor[(8, 9, 15), float64] */;
  %1266 = @func_3217() /* ty=Tensor[(546), uint64] */;
  %1267 = %1252.3;
  %1268 = logical_or(%1260, %1261) /* ty=Tensor[(48, 4), bool] */;
  %1269 = %1262.0;
  %1270 = %1263.1;
  %1271 = %1264.0;
  %1272 = @func_11564() /* ty=Tensor[(8, 9, 15), float64] */;
  (%1265, %1266, %1267, meta[relay.Constant][42] /* ty=Tensor[(750), uint32] */, meta[relay.Constant][43] /* ty=Tensor[(1536), int64] */, %1268, %1269, %1270, %1271, %1272)
}

def @func_3152() -> Tensor[(8, 9, 15), float64] {
  @func_3150() /* ty=Tensor[(8, 9, 15), float64] */
}

def @func_2667() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) {
  %1273 = @func_2129() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1274 = %1273.1;
  %1275 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
  (%1274, %1275)
}

def @func_3599() -> (Tensor[(3, 14, 13), float64],) {
  %1279 = fn () -> (Tensor[(3, 14, 13), float64],) {
    %1276 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
    %1277 = cast(%1276, dtype="float64") /* ty=Tensor[(3, 14, 13), float64] */;
    %1278 = exp(%1277) /* ty=Tensor[(3, 14, 13), float64] */;
    (%1278,)
  };
  %1279() /* ty=(Tensor[(3, 14, 13), float64],) */
}

def @func_8642() -> (Tensor[(84), float32],) {
  @func_8640() /* ty=(Tensor[(84), float32],) */
}

def @func_10125() -> (Tensor[(546), uint64], Tensor[(84), float32]) {
  @func_10123() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */
}

def @func_9228() -> (Tensor[(3, 14, 13), float32], Tensor[(546), uint64]) {
  %1280 = @func_4625() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64]) */;
  %1281 = %1280.1;
  %1282 = cast(%1281, dtype="float32") /* ty=Tensor[(3, 14, 13), float32] */;
  %1283 = @func_8352() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %1284 = sqrt(%1282) /* ty=Tensor[(3, 14, 13), float32] */;
  %1285 = %1283.1;
  (%1284, %1285)
}

def @func_3280(%var_3275: Tensor[(10, 14, 4), bool]) -> Tensor[(10, 14, 4), bool] {
  %1286 = cast(meta[relay.Constant][44] /* ty=Tensor[(10, 14, 4), bool] */, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %1287 = shape_of(%var_3275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1288 = cast(%var_3275, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %1289 = dyn.reshape(%1286, %1287, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%1288, %1289) /* ty=Tensor[(10, 14, 4), bool] */
}

def @func_11984() -> Tensor[(546), uint64] {
  @func_11982() /* ty=Tensor[(546), uint64] */
}

def @func_5294(%var_5293: Tensor[(3, 14, 13), float64]) -> Tensor[(3, 14, 13), uint64] {
  %1295 = fn (%var_5279: Tensor[(3, 14, 13), float64]) -> Tensor[(3, 14, 13), uint64] {
    %1290 = @func_4025() /* ty=Tensor[(3, 14, 13), float64] */;
    %1291 = cast(%var_5279, dtype="uint64") /* ty=Tensor[(3, 14, 13), uint64] */;
    %1292 = shape_of(%1290, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1293 = cast(%1290, dtype="uint64") /* ty=Tensor[(3, 14, 13), uint64] */;
    %1294 = dyn.reshape(%1291, %1292, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    bitwise_or(%1293, %1294) /* ty=Tensor[(3, 14, 13), uint64] */
  };
  %1295(%var_5293) /* ty=Tensor[(3, 14, 13), uint64] */
}

def @func_14917() -> (Tensor[(3, 14, 13), uint64], Tensor[(8, 9, 15), float64], uint16, Tensor[(28), uint16], Tensor[(2, 64), uint64], Tensor[(512), uint64], Tensor[(546), uint64]) {
  %1296 = @func_12131() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %1297 = cast(meta[relay.Constant][45] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1298 = cast(meta[relay.Constant][46] /* ty=Tensor[(28), uint16] */, dtype="uint16") /* ty=Tensor[(28), uint16] */;
  %1299 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 64), uint64] */, dtype="uint64") /* ty=Tensor[(2, 64), uint64] */;
  %1300 = cast(meta[relay.Constant][48] /* ty=Tensor[(512), uint64] */, dtype="uint64") /* ty=Tensor[(512), uint64] */;
  %1301 = reshape(%1297, newshape=[]) /* ty=uint16 */;
  %1302 = reshape(%1298, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), uint16] */;
  %1303 = reshape(%1299, newshape=[128]) /* ty=Tensor[(128), uint64] */;
  %1304 = reshape(%1300, newshape=[512]) /* ty=Tensor[(512), uint64] */;
  %1305 = @func_3796(%1301, %1302, %1303, %1304) /* ty=(Tensor[(4, 1, 7), uint16], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %1306 = %1296.0;
  %1307 = %1305.4;
  %1308 = @func_11982() /* ty=Tensor[(546), uint64] */;
  (%1306, %1307, meta[relay.Constant][45] /* ty=uint16 */, meta[relay.Constant][46] /* ty=Tensor[(28), uint16] */, meta[relay.Constant][47] /* ty=Tensor[(2, 64), uint64] */, meta[relay.Constant][48] /* ty=Tensor[(512), uint64] */, %1308)
}

def @func_4687() -> (Tensor[(84), float32], Tensor[(3, 14, 13), int64]) {
  %1313 = fn () -> (Tensor[(84), float32], Tensor[(3, 14, 13), int64]) {
    %1309 = @func_2871() /* ty=(Tensor[(84), float32],) */;
    %1310 = @func_4521() /* ty=(Tensor[(3, 14, 13), int64], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) */;
    %1311 = %1309.0;
    %1312 = %1310.0;
    (%1311, %1312)
  };
  %1313() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), int64]) */
}

def @func_13702() -> (Tensor[(84), float32],) {
  %1314 = @func_10386() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %1315 = %1314.1;
  (%1315,)
}

def @func_15568(%var_15566: Tensor[(1650), int8]) -> (Tensor[(8, 9, 15), float32], Tensor[(546), uint64], Tensor[(10, 15, 11), bool], Tensor[(1650), int8]) {
  %1316 = @func_8080() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1317 = cast(%var_15566, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %1318 = cast(%var_15566, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %1319 = reshape(%1317, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), int8] */;
  %1320 = reshape(%1318, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), int8] */;
  %1321 = @func_9876() /* ty=Tensor[(8, 9, 15), float32] */;
  %1322 = %1316.0;
  %1323 = @func_9959(%1319, %1320) /* ty=Tensor[(10, 15, 11), bool] */;
  (%1321, %1322, %1323, %var_15566)
}

def @func_17569() -> (Tensor[(546), uint64], Tensor[(546), uint64]) {
  %1327 = fn () -> (Tensor[(546), uint64], Tensor[(546), uint64]) {
    %1324 = @func_17286() /* ty=(Tensor[(546), uint64],) */;
    %1325 = @func_2787() /* ty=Tensor[(546), uint64] */;
    %1326 = %1324.0;
    (%1325, %1326)
  };
  %1327() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_19083() -> Tensor[(84), float32] {
  %1328 = @func_7526() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(84), float32]) */;
  %1328.0
}

def @func_12791() -> Tensor[(84), float32] {
  @func_12789() /* ty=Tensor[(84), float32] */
}

def @func_7400() -> Tensor[(546), uint64] {
  %1329 = fn () -> Tensor[(546), uint64] {
    @func_1878() /* ty=Tensor[(546), uint64] */
  };
  %1329() /* ty=Tensor[(546), uint64] */
}

def @func_17518() -> (Tensor[(84), float32], Tensor[(546), uint64]) {
  %1334 = fn () -> (Tensor[(84), float32], Tensor[(546), uint64]) {
    %1330 = @func_11218() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), bool]) */;
    %1331 = @func_10386() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
    %1332 = %1330.1;
    %1333 = %1331.0;
    (%1332, %1333)
  };
  %1334() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */
}

def @func_5852() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) {
  %1341 = fn () -> (Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) {
    %1335 = @func_4853() /* ty=(Tensor[(546), uint64],) */;
    %1336 = %1335.0;
    %1337 = cast(%1336, dtype="float64") /* ty=Tensor[(546), float64] */;
    %1338 = reshape(%1337, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), float64] */;
    %1339 = @func_5199(%1338) /* ty=(Tensor[(3, 14, 13), float32], Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float64]) */;
    %1340 = %1339.2;
    (%1336, %1340)
  };
  %1341() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */
}

def @func_18285() -> (Tensor[(3, 14, 13), uint64],) {
  @func_18283() /* ty=(Tensor[(3, 14, 13), uint64],) */
}

def @func_10451() -> (Tensor[(84), float32], Tensor[(546), uint64]) {
  @func_10449() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */
}

def @func_1679() -> Tensor[(3, 14, 13), uint64] {
  @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */
}

def @func_15989() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(360), float32]) {
  %1342 = @func_8352() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */;
  %1343 = @func_13428() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1344 = @func_15191() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %1345 = cast(meta[relay.Constant][49] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1346 = reshape(%1345, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float32] */;
  %1347 = @func_2026(%1346) /* ty=(Tensor[(8, 3, 15), float32], Tensor[(3, 14, 13), uint64]) */;
  %1348 = %1342.1;
  %1349 = %1343.1;
  %1350 = %1344.0;
  %1351 = %1347.1;
  (%1348, %1349, %1350, %1351, meta[relay.Constant][49] /* ty=Tensor[(360), float32] */)
}

def @func_13704() -> (Tensor[(84), float32],) {
  @func_13702() /* ty=(Tensor[(84), float32],) */
}

def @func_17855() -> Tensor[(84), float32] {
  %1352 = @func_9542() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(84), float32]) */;
  %1352.1
}

def @func_1650() -> (Tensor[(84), float32],) {
  %1355 = fn () -> (Tensor[(84), float32],) {
    %1353 = @func_1485() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
    %1354 = %1353.4;
    (%1354,)
  };
  %1355() /* ty=(Tensor[(84), float32],) */
}

def @func_9199(%var_9197: Tensor[(384), float64]) -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(384), float64], Tensor[(546), uint64], Tensor[(8, 9, 15), bool], Tensor[(546), uint64], Tensor[(546), uint64]) {
  @func_9196(%var_9197) /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(384), float64], Tensor[(546), uint64], Tensor[(8, 9, 15), bool], Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_4233() -> Tensor[(546), uint64] {
  @func_4231() /* ty=Tensor[(546), uint64] */
}

def @func_6034() -> (Tensor[(8, 9, 15), uint8], Tensor[(546), uint64]) {
  @func_6032() /* ty=(Tensor[(8, 9, 15), uint8], Tensor[(546), uint64]) */
}

def @func_9621(%var_9595: Tensor[(2, 180), uint16], %var_9614: Tensor[(2, 180), uint16]) -> (Tensor[(2, 180), int16], Tensor[(2, 180), float64]) {
  %1356 = @func_3457() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) */;
  %1357 = %1356.1;
  %1358 = cast(%var_9595, dtype="uint16") /* ty=Tensor[(2, 180), uint16] */;
  %1359 = shape_of(%1357, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1360 = cast(%1357, dtype="uint16") /* ty=Tensor[(2, 180), uint16] */;
  %1361 = dyn.reshape(%1358, %1359, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1362 = minimum(%1360, %1361) /* ty=Tensor[(2, 180), uint16] */;
  %1363 = cast(%1362, dtype="int16") /* ty=Tensor[(2, 180), int16] */;
  %1364 = shape_of(%var_9595, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1365 = cast(%var_9595, dtype="int16") /* ty=Tensor[(2, 180), int16] */;
  %1366 = dyn.reshape(%1363, %1364, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1367 = cast(%var_9614, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
  %1368 = shape_of(%1362, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1369 = cast(%1362, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
  %1370 = dyn.reshape(%1367, %1368, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1371 = left_shift(%1365, %1366) /* ty=Tensor[(2, 180), int16] */;
  %1372 = divide(%1369, %1370) /* ty=Tensor[(2, 180), float64] */;
  (%1371, %1372)
}

def @func_10883(%var_10882: Tensor[(4, 7, 4), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float32]) {
  %1382 = fn (%var_10813: Tensor[(4, 7, 4), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float32]) {
    %1373 = cast(%var_10813, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
    %1374 = sin(%1373) /* ty=Tensor[(4, 7, 4), float32] */;
    %1375 = cast(%1374, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
    %1376 = @func_8310() /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
    %1377 = @func_9386() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float32]) */;
    %1378 = sinh(%1375) /* ty=Tensor[(4, 7, 4), float32] */;
    %1379 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
    %1380 = %1376.2;
    %1381 = %1377.1;
    (%1378, %1379, %1380, %1381)
  };
  %1382(%var_10882) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float32]) */
}

def @func_16337() -> (Tensor[(84), float32], Tensor[(330, 1), float32], Tensor[(512), uint64], Tensor[(5, 6, 11), float32]) {
  @func_16335() /* ty=(Tensor[(84), float32], Tensor[(330, 1), float32], Tensor[(512), uint64], Tensor[(5, 6, 11), float32]) */
}

def @func_11546(%var_11545: Tensor[(2, 5, 14), float32]) -> (Tensor[(2, 5, 14), float32],) {
  %1385 = fn (%var_11537: Tensor[(2, 5, 14), float32]) -> (Tensor[(2, 5, 14), float32],) {
    %1383 = cast(%var_11537, dtype="float32") /* ty=Tensor[(2, 5, 14), float32] */;
    %1384 = cosh(%1383) /* ty=Tensor[(2, 5, 14), float32] */;
    (%1384,)
  };
  %1385(%var_11545) /* ty=(Tensor[(2, 5, 14), float32],) */
}

def @func_12032(%var_12017: Tensor[(3, 11, 15), bool], %var_12018: Tensor[(3, 11, 15), bool]) -> (Tensor[(3, 11, 15), bool], Tensor[(546), uint64]) {
  %1386 = cast(%var_12018, dtype="bool") /* ty=Tensor[(3, 11, 15), bool] */;
  %1387 = shape_of(%var_12017, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1388 = cast(%var_12017, dtype="bool") /* ty=Tensor[(3, 11, 15), bool] */;
  %1389 = dyn.reshape(%1386, %1387, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1390 = logical_or(%1388, %1389) /* ty=Tensor[(3, 11, 15), bool] */;
  %1391 = @func_2897() /* ty=Tensor[(546), uint64] */;
  (%1390, %1391)
}

def @func_9877() -> Tensor[(8, 9, 15), float32] {
  %1393 = fn () -> Tensor[(8, 9, 15), float32] {
    %1392 = @func_3457() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) */;
    %1392.0
  };
  %1393() /* ty=Tensor[(8, 9, 15), float32] */
}

def @func_9625(%var_9623: Tensor[(2, 180), uint16], %var_9624: Tensor[(2, 180), uint16]) -> (Tensor[(2, 180), int16], Tensor[(2, 180), float64]) {
  @func_9621(%var_9623, %var_9624) /* ty=(Tensor[(2, 180), int16], Tensor[(2, 180), float64]) */
}

def @func_16288() -> Tensor[(84), float32] {
  @func_16286() /* ty=Tensor[(84), float32] */
}

def @func_13742() -> Tensor[(546), uint64] {
  %1395 = fn () -> Tensor[(546), uint64] {
    %1394 = @func_9002() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(384), float64], Tensor[(3, 14, 13), uint64]) */;
    %1394.0
  };
  %1395() /* ty=Tensor[(546), uint64] */
}

def @func_15245() -> (Tensor[(546), uint64], Tensor[(84), float32]) {
  @func_15243() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */
}

def @func_9344() -> (Tensor[(84), float32],) {
  %1398 = fn () -> (Tensor[(84), float32],) {
    %1396 = @func_8310() /* ty=(Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
    %1397 = %1396.0;
    (%1397,)
  };
  %1398() /* ty=(Tensor[(84), float32],) */
}

def @func_11252() -> Tensor[(16, 8, 3), uint16] {
  @func_11250() /* ty=Tensor[(16, 8, 3), uint16] */
}

def @func_7754() -> (Tensor[(8, 9, 15), float32],) {
  %1399 = @func_6678() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) */;
  %1400 = %1399.0;
  (%1400,)
}

def @func_9851() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(512), uint64]) {
  %1407 = fn () -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(512), uint64]) {
    %1401 = @func_4455() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64], Tensor[(84), float32]) */;
    %1402 = cast(meta[relay.Constant][50] /* ty=Tensor[(512), uint64] */, dtype="uint64") /* ty=Tensor[(512), uint64] */;
    %1403 = reshape(%1402, newshape=[512, 1]) /* ty=Tensor[(512, 1), uint64] */;
    %1404 = @func_3947(%1403) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(8, 16), uint64], Tensor[(512, 1), uint64]) */;
    %1405 = %1401.1;
    %1406 = %1404.3;
    (%1405, %1406, meta[relay.Constant][50] /* ty=Tensor[(512), uint64] */)
  };
  %1407() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(512), uint64]) */
}

def @func_4027() -> Tensor[(3, 14, 13), float64] {
  @func_4025() /* ty=Tensor[(3, 14, 13), float64] */
}

def @func_5617() -> (Tensor[(3, 14, 13), float64], Tensor[(3, 14, 13), uint64]) {
  %1408 = @func_2667() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) */;
  %1409 = @func_4025() /* ty=Tensor[(3, 14, 13), float64] */;
  %1410 = %1408.1;
  (%1409, %1410)
}

def @func_2688(%var_2687: Tensor[(84), float32]) -> (Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) {
  %1417 = fn (%var_2684: Tensor[(84), float32]) -> (Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) {
    %1411 = @func_1720() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64]) */;
    %1412 = cast(%var_2684, dtype="float32") /* ty=Tensor[(84), float32] */;
    %1413 = reshape(%1412, newshape=[7, 1, 12]) /* ty=Tensor[(7, 1, 12), float32] */;
    %1414 = @func_193(%1413) /* ty=(Tensor[(7, 1, 12), float32],) */;
    %1415 = %1411.2;
    %1416 = %1414.0;
    (%1415, %1416, %var_2684)
  };
  %1417(%var_2687) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */
}

def @func_17359() -> (Tensor[(84), float32], Tensor[(8, 9, 15), float64]) {
  %1418 = @func_4521() /* ty=(Tensor[(3, 14, 13), int64], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) */;
  %1419 = @func_5329() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %1420 = %1418.1;
  %1421 = %1419.0;
  (%1420, %1421)
}

def @func_18283() -> (Tensor[(3, 14, 13), uint64],) {
  %1422 = @func_2521() /* ty=(Tensor[(546), uint64], Tensor[(546), float64], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32]) */;
  %1423 = %1422.2;
  (%1423,)
}

def @func_19085() -> Tensor[(84), float32] {
  @func_19083() /* ty=Tensor[(84), float32] */
}

def @func_10388() -> (Tensor[(546), uint64], Tensor[(84), float32]) {
  @func_10386() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */
}

def @func_7348() -> Tensor[(16, 8, 3), uint16] {
  %1425 = fn () -> Tensor[(16, 8, 3), uint16] {
    %1424 = @func_6517() /* ty=(Tensor[(16, 8, 3), uint16],) */;
    %1424.0
  };
  %1425() /* ty=Tensor[(16, 8, 3), uint16] */
}

def @func_6266() -> (Tensor[(8, 9, 15), float64],) {
  %1427 = fn () -> (Tensor[(8, 9, 15), float64],) {
    %1426 = @func_3150() /* ty=Tensor[(8, 9, 15), float64] */;
    (%1426,)
  };
  %1427() /* ty=(Tensor[(8, 9, 15), float64],) */
}

def @func_7926(%var_7925: Tensor[(2, 3, 7), bool]) -> Tensor[(2, 3, 7), bool] {
  %1430 = fn (%var_7896: Tensor[(2, 3, 7), bool]) -> Tensor[(2, 3, 7), bool] {
    %1428 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 3, 1), bool] */, dtype="bool") /* ty=Tensor[(2, 3, 1), bool] */;
    %1429 = cast(%var_7896, dtype="bool") /* ty=Tensor[(2, 3, 7), bool] */;
    logical_and(%1428, %1429) /* ty=Tensor[(2, 3, 7), bool] */
  };
  %1430(%var_7925) /* ty=Tensor[(2, 3, 7), bool] */
}

def @func_18865() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(112), float32], Tensor[(4, 28), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) {
  %1442 = fn () -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(112), float32], Tensor[(4, 28), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) {
    %1431 = @func_4501() /* ty=(Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
    %1432 = cast(meta[relay.Constant][52] /* ty=Tensor[(4, 28), float32] */, dtype="float32") /* ty=Tensor[(4, 28), float32] */;
    %1433 = reshape(%1432, newshape=[112]) /* ty=Tensor[(112), float32] */;
    %1434 = @func_16088(%1433) /* ty=(Tensor[(8, 9, 15), int32], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(112), float32]) */;
    %1435 = @func_7616() /* ty=(Tensor[(546), uint64],) */;
    %1436 = @func_11915() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) */;
    %1437 = @func_6710() /* ty=Tensor[(546), uint64] */;
    %1438 = %1431.1;
    %1439 = %1434.3;
    %1440 = %1435.0;
    %1441 = %1436.0;
    (%1437, %1438, %1439, meta[relay.Constant][52] /* ty=Tensor[(4, 28), float32] */, %1440, %1441)
  };
  %1442() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(112), float32], Tensor[(4, 28), float32], Tensor[(546), uint64], Tensor[(3, 14, 13), uint64]) */
}

def @func_6742() -> (Tensor[(8, 9, 15), float64],) {
  %1443 = @func_6265() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %1444 = %1443.0;
  (%1444,)
}

def @func_8353() -> (Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) {
  %1448 = fn () -> (Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) {
    %1445 = @func_3854() /* ty=(Tensor[(546), uint64],) */;
    %1446 = @func_1677() /* ty=Tensor[(3, 14, 13), uint64] */;
    %1447 = %1445.0;
    (%1446, %1447)
  };
  %1448() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(546), uint64]) */
}

def @func_10680() -> (Tensor[(546), uint64],) {
  @func_10678() /* ty=(Tensor[(546), uint64],) */
}

def @func_11729() -> (Tensor[(8, 9, 15), float64],) {
  %1451 = fn () -> (Tensor[(8, 9, 15), float64],) {
    %1449 = @func_11218() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), bool]) */;
    %1450 = %1449.0;
    (%1450,)
  };
  %1451() /* ty=(Tensor[(8, 9, 15), float64],) */
}

def @func_6164(%var_6162: int16, %var_6163: Tensor[(4, 2, 2), int16]) -> (Tensor[(4, 2, 2), int16], Tensor[(546), uint64]) {
  %1456 = fn (%var_6153: int16, %var_6154: Tensor[(4, 2, 2), int16]) -> (Tensor[(4, 2, 2), int16], Tensor[(546), uint64]) {
    %1452 = cast(%var_6153, dtype="int16") /* ty=int16 */;
    %1453 = cast(%var_6154, dtype="int16") /* ty=Tensor[(4, 2, 2), int16] */;
    %1454 = add(%1452, %1453) /* ty=Tensor[(4, 2, 2), int16] */;
    %1455 = @func_1878() /* ty=Tensor[(546), uint64] */;
    (%1454, %1455)
  };
  %1456(%var_6162, %var_6163) /* ty=(Tensor[(4, 2, 2), int16], Tensor[(546), uint64]) */
}

def @func_8635() -> (Tensor[(84), float32], Tensor[(2, 180), uint16], Tensor[(546), uint64]) {
  @func_8633() /* ty=(Tensor[(84), float32], Tensor[(2, 180), uint16], Tensor[(546), uint64]) */
}

def @func_2817() -> Tensor[(2, 180), bool] {
  %1463 = fn () -> Tensor[(2, 180), bool] {
    %1457 = @func_2521() /* ty=(Tensor[(546), uint64], Tensor[(546), float64], Tensor[(3, 14, 13), uint64], Tensor[(2, 180), float32]) */;
    %1458 = %1457.3;
    %1459 = cast(meta[relay.Constant][53] /* ty=Tensor[(2, 180), float32] */, dtype="bool") /* ty=Tensor[(2, 180), bool] */;
    %1460 = shape_of(%1458, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1461 = cast(%1458, dtype="bool") /* ty=Tensor[(2, 180), bool] */;
    %1462 = dyn.reshape(%1459, %1460, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    less_equal(%1461, %1462) /* ty=Tensor[(2, 180), bool] */
  };
  %1463() /* ty=Tensor[(2, 180), bool] */
}

def @func_16951() -> (Tensor[(3, 14, 13), float64],) {
  %1464 = @func_8208() /* ty=(Tensor[(3, 14, 13), float64],) */;
  %1465 = %1464.0;
  (%1465,)
}

def @func_2568() -> (Tensor[(546), uint64],) {
  %1468 = fn () -> (Tensor[(546), uint64],) {
    %1466 = @func_2129() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64]) */;
    %1467 = %1466.1;
    (%1467,)
  };
  %1468() /* ty=(Tensor[(546), uint64],) */
}

def @func_10583() -> Tensor[(84), float32] {
  %1470 = fn () -> Tensor[(84), float32] {
    %1469 = @func_9736() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), uint64], Tensor[(84), float32], Tensor[(546), uint64]) */;
    %1469.2
  };
  %1470() /* ty=Tensor[(84), float32] */
}

def @func_4503() -> (Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(546), uint64]) {
  @func_4501() /* ty=(Tensor[(2, 180), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */
}

def @func_10678() -> (Tensor[(546), uint64],) {
  %1471 = @func_10449() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
  %1472 = %1471.1;
  (%1472,)
}

def @func_3316() -> Tensor[(8, 9, 15), float64] {
  %1474 = fn () -> Tensor[(8, 9, 15), float64] {
    %1473 = @func_2617() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
    %1473.0
  };
  %1474() /* ty=Tensor[(8, 9, 15), float64] */
}

def @func_5202(%var_5200: Tensor[(3, 14, 13), float64]) -> (Tensor[(3, 14, 13), float32], Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float64]) {
  @func_5199(%var_5200) /* ty=(Tensor[(3, 14, 13), float32], Tensor[(3, 14, 13), bool], Tensor[(3, 14, 13), float64]) */
}

def @func_11957(%var_11955: Tensor[(1, 7, 12), int32]) -> (Tensor[(3, 14, 13), float64], Tensor[(84), float32], Tensor[(1, 7, 12), float32]) {
  @func_11954(%var_11955) /* ty=(Tensor[(3, 14, 13), float64], Tensor[(84), float32], Tensor[(1, 7, 12), float32]) */
}

def @func_15698() -> (Tensor[(8, 9, 15), float64], uint16, Tensor[(28), uint16], Tensor[(1, 128), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(32, 16), bool], Tensor[(546), uint64]) {
  %1475 = @func_11728() /* ty=(Tensor[(8, 9, 15), float64],) */;
  %1476 = @func_7587() /* ty=(Tensor[(3, 14, 13), float64], Tensor[(546), uint64]) */;
  %1477 = cast(meta[relay.Constant][57] /* ty=Tensor[(32, 16), uint64] */, dtype="float64") /* ty=Tensor[(32, 16), float64] */;
  %1478 = log10(%1477) /* ty=Tensor[(32, 16), float64] */;
  %1479 = cast(meta[relay.Constant][54] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1480 = cast(meta[relay.Constant][55] /* ty=Tensor[(28), uint16] */, dtype="uint16") /* ty=Tensor[(28), uint16] */;
  %1481 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 128), uint64] */, dtype="uint64") /* ty=Tensor[(1, 128), uint64] */;
  %1482 = cast(meta[relay.Constant][57] /* ty=Tensor[(32, 16), uint64] */, dtype="uint64") /* ty=Tensor[(32, 16), uint64] */;
  %1483 = reshape(%1479, newshape=[]) /* ty=uint16 */;
  %1484 = reshape(%1480, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), uint16] */;
  %1485 = reshape(%1481, newshape=[128]) /* ty=Tensor[(128), uint64] */;
  %1486 = reshape(%1482, newshape=[512]) /* ty=Tensor[(512), uint64] */;
  %1487 = @func_3796(%1483, %1484, %1485, %1486) /* ty=(Tensor[(4, 1, 7), uint16], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %1488 = %1487.8;
  %1489 = cast(%1488, dtype="bool") /* ty=Tensor[(512), bool] */;
  %1490 = shape_of(%1478, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1491 = cast(%1478, dtype="bool") /* ty=Tensor[(32, 16), bool] */;
  %1492 = dyn.reshape(%1489, %1490, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1493 = @func_6333() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %1494 = %1475.0;
  %1495 = @func_14871() /* ty=Tensor[(84), float32] */;
  %1496 = %1476.1;
  %1497 = not_equal(%1491, %1492) /* ty=Tensor[(32, 16), bool] */;
  %1498 = %1493.0;
  (%1494, meta[relay.Constant][54] /* ty=uint16 */, meta[relay.Constant][55] /* ty=Tensor[(28), uint16] */, meta[relay.Constant][56] /* ty=Tensor[(1, 128), uint64] */, %1495, %1496, %1497, %1498)
}

def @func_3950(%var_3948: Tensor[(512, 1), uint64]) -> (Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(8, 16), uint64], Tensor[(512, 1), uint64]) {
  @func_3947(%var_3948) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(8, 16), uint64], Tensor[(512, 1), uint64]) */
}

def @func_3854() -> (Tensor[(546), uint64],) {
  %1499 = @func_1930() /* ty=Tensor[(546), uint64] */;
  (%1499,)
}

def @func_6484(%var_6482: uint8, %var_6483: Tensor[(14, 3, 11), uint8]) -> (Tensor[(14, 3, 11), uint8], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(2, 180), float32]) {
  %1508 = fn (%var_6451: uint8, %var_6452: Tensor[(14, 3, 11), uint8]) -> (Tensor[(14, 3, 11), uint8], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(2, 180), float32]) {
    %1500 = cast(%var_6451, dtype="uint8") /* ty=uint8 */;
    %1501 = cast(%var_6452, dtype="uint8") /* ty=Tensor[(14, 3, 11), uint8] */;
    %1502 = @func_5792() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
    %1503 = @func_1948() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
    %1504 = minimum(%1500, %1501) /* ty=Tensor[(14, 3, 11), uint8] */;
    %1505 = %1502.1;
    %1506 = %1503.2;
    %1507 = @func_3201() /* ty=Tensor[(2, 180), float32] */;
    (%1504, %1505, %1506, %1507)
  };
  %1508(%var_6482, %var_6483) /* ty=(Tensor[(14, 3, 11), uint8], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(2, 180), float32]) */
}

def @func_2559() -> (Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) {
  @func_2557() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */
}

def @func_4523() -> (Tensor[(3, 14, 13), int64], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) {
  @func_4521() /* ty=(Tensor[(3, 14, 13), int64], Tensor[(84), float32], Tensor[(8, 9, 15), float64]) */
}

def @func_3390() -> Tensor[(84), float32] {
  @func_2434() /* ty=Tensor[(84), float32] */
}

def @func_3459() -> (Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) {
  @func_3457() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) */
}

def @func_3111() -> (Tensor[(2, 180), uint16],) {
  @func_3109() /* ty=(Tensor[(2, 180), uint16],) */
}

def @func_4404() -> Tensor[(8, 9, 15), float32] {
  %1510 = fn () -> Tensor[(8, 9, 15), float32] {
    %1509 = @func_3457() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) */;
    %1509.0
  };
  %1510() /* ty=Tensor[(8, 9, 15), float32] */
}

def @func_2788() -> Tensor[(546), uint64] {
  %1511 = fn () -> Tensor[(546), uint64] {
    @func_1878() /* ty=Tensor[(546), uint64] */
  };
  %1511() /* ty=Tensor[(546), uint64] */
}

def @func_1618(%var_1616: Tensor[(8, 9, 15), float64]) -> (Tensor[(8, 9, 15), bool], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) {
  @func_1615(%var_1616) /* ty=(Tensor[(8, 9, 15), bool], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */
}

def @func_8640() -> (Tensor[(84), float32],) {
  %1512 = @func_4636() /* ty=(Tensor[(84), float32],) */;
  %1513 = %1512.0;
  (%1513,)
}

def @func_12066() -> (Tensor[(546), uint64],) {
  @func_12064() /* ty=(Tensor[(546), uint64],) */
}

def @func_7001() -> (Tensor[(84), float32], Tensor[(16, 8, 3), uint16]) {
  %1517 = fn () -> (Tensor[(84), float32], Tensor[(16, 8, 3), uint16]) {
    %1514 = @func_6517() /* ty=(Tensor[(16, 8, 3), uint16],) */;
    %1515 = @func_2195() /* ty=Tensor[(84), float32] */;
    %1516 = %1514.0;
    (%1515, %1516)
  };
  %1517() /* ty=(Tensor[(84), float32], Tensor[(16, 8, 3), uint16]) */
}

def @func_10386() -> (Tensor[(546), uint64], Tensor[(84), float32]) {
  %1518 = @func_2897() /* ty=Tensor[(546), uint64] */;
  %1519 = @func_3390() /* ty=Tensor[(84), float32] */;
  (%1518, %1519)
}

def @func_4778() -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(7, 1, 12), float64], Tensor[(546), uint64]) {
  @func_4776() /* ty=(Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(7, 1, 12), float64], Tensor[(546), uint64]) */
}

def @func_9542() -> (Tensor[(8, 9, 15), float64], Tensor[(84), float32]) {
  %1520 = @func_3457() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) */;
  %1521 = %1520.0;
  %1522 = cast(%1521, dtype="float64") /* ty=Tensor[(8, 9, 15), float64] */;
  %1523 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %1524 = log10(%1522) /* ty=Tensor[(8, 9, 15), float64] */;
  %1525 = %1523.0;
  (%1524, %1525)
}

def @func_16715(%var_16592: Tensor[(84), float32]) -> (Tensor[(546), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float64], Tensor[(84), float32], Tensor[(16, 8, 3), uint16], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(16, 8, 3), uint16]) {
  %1526 = @func_8952() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %1527 = @func_9943() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1528 = cast(%var_16592, dtype="float32") /* ty=Tensor[(84), float32] */;
  %1529 = reshape(%1528, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %1530 = @func_2686(%1529) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32]) */;
  %1531 = @func_7000() /* ty=(Tensor[(84), float32], Tensor[(16, 8, 3), uint16]) */;
  %1532 = @func_10386() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %1533 = @func_6517() /* ty=(Tensor[(16, 8, 3), uint16],) */;
  %1534 = %1526.0;
  %1535 = %1527.1;
  %1536 = %1530.0;
  %1537 = %1531.1;
  %1538 = %1532.1;
  %1539 = @func_14771() /* ty=Tensor[(546), uint64] */;
  %1540 = %1533.0;
  (%1534, %1535, %1536, %var_16592, %1537, %1538, %1539, %1540)
}

def @func_11915() -> (Tensor[(3, 14, 13), uint64], Tensor[(84), float32]) {
  %1541 = @func_4385() /* ty=(Tensor[(3, 14, 13), uint64],) */;
  %1542 = @func_6333() /* ty=(Tensor[(546), uint64], Tensor[(84), float32]) */;
  %1543 = %1541.0;
  %1544 = %1542.1;
  (%1543, %1544)
}

def @func_10918(%var_10916: Tensor[(112), float32]) -> (Tensor[(84), float32], Tensor[(10, 15, 11), bool], Tensor[(1650, 1), int8], Tensor[(546), uint64], Tensor[(112), float32]) {
  %1545 = cast(meta[relay.Constant][58] /* ty=Tensor[(1650, 1), int8] */, dtype="int8") /* ty=Tensor[(1650, 1), int8] */;
  %1546 = cast(meta[relay.Constant][58] /* ty=Tensor[(1650, 1), int8] */, dtype="int8") /* ty=Tensor[(1650, 1), int8] */;
  %1547 = reshape(%1545, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), int8] */;
  %1548 = reshape(%1546, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), int8] */;
  %1549 = cast(%var_10916, dtype="float32") /* ty=Tensor[(112), float32] */;
  %1550 = reshape(%1549, newshape=[4, 7, 4]) /* ty=Tensor[(4, 7, 4), float32] */;
  %1551 = @func_10881(%1550) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(3, 14, 13), uint64], Tensor[(546), uint64], Tensor[(8, 9, 15), float32]) */;
  %1552 = @func_2942() /* ty=Tensor[(84), float32] */;
  %1553 = @func_9959(%1547, %1548) /* ty=Tensor[(10, 15, 11), bool] */;
  %1554 = %1551.2;
  (%1552, %1553, meta[relay.Constant][58] /* ty=Tensor[(1650, 1), int8] */, %1554, %var_10916)
}

def @func_2434() -> Tensor[(84), float32] {
  @func_2195() /* ty=Tensor[(84), float32] */
}

def @func_17101() -> (Tensor[(546), uint64], Tensor[(16, 8, 4), uint64], Tensor[(256, 2), uint64]) {
  %1555 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %1556 = cast(meta[relay.Constant][59] /* ty=Tensor[(256, 2), uint64] */, dtype="uint64") /* ty=Tensor[(256, 2), uint64] */;
  %1557 = reshape(%1556, newshape=[512]) /* ty=Tensor[(512), uint64] */;
  %1558 = @func_10338(%1557) /* ty=(Tensor[(8, 9, 15), float64], Tensor[(16, 8, 4), uint64], Tensor[(128), uint64], Tensor[(512), uint64]) */;
  %1559 = %1555.0;
  %1560 = %1558.1;
  (%1559, %1560, meta[relay.Constant][59] /* ty=Tensor[(256, 2), uint64] */)
}

def @func_13448() -> Tensor[(8, 9, 15), float64] {
  @func_13446() /* ty=Tensor[(8, 9, 15), float64] */
}

def @func_8733() -> (Tensor[(84), float32],) {
  @func_8731() /* ty=(Tensor[(84), float32],) */
}

def @func_1852() -> Tensor[(3, 14, 13), uint64] {
  @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */
}

def @func_10921(%var_10919: Tensor[(112), float32]) -> (Tensor[(84), float32], Tensor[(10, 15, 11), bool], Tensor[(1650, 1), int8], Tensor[(546), uint64], Tensor[(112), float32]) {
  @func_10918(%var_10919) /* ty=(Tensor[(84), float32], Tensor[(10, 15, 11), bool], Tensor[(1650, 1), int8], Tensor[(546), uint64], Tensor[(112), float32]) */
}

def @func_8396() -> Tensor[(84), float32] {
  @func_2942() /* ty=Tensor[(84), float32] */
}

def @func_14873() -> Tensor[(84), float32] {
  @func_14871() /* ty=Tensor[(84), float32] */
}

def @func_3150() -> Tensor[(8, 9, 15), float64] {
  %1561 = @func_1521() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(546), uint64]) */;
  %1561.0
}

def @func_8357() -> Tensor[(8, 9, 15), float64] {
  %1563 = fn () -> Tensor[(8, 9, 15), float64] {
    %1562 = @func_5104() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(2, 180), bool]) */;
    %1562.0
  };
  %1563() /* ty=Tensor[(8, 9, 15), float64] */
}

def @func_17906() -> (Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(8, 9, 15), float64]) {
  %1570 = fn () -> (Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(8, 9, 15), float64]) {
    %1564 = @func_4636() /* ty=(Tensor[(84), float32],) */;
    %1565 = @func_10621() /* ty=(Tensor[(546), uint64], Tensor[(3, 14, 13), float64]) */;
    %1566 = @func_3982() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
    %1567 = %1564.0;
    %1568 = %1565.1;
    %1569 = %1566.0;
    (%1567, %1568, %1569)
  };
  %1570() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), float64], Tensor[(8, 9, 15), float64]) */
}

def @func_4386() -> (Tensor[(3, 14, 13), uint64],) {
  %1572 = fn () -> (Tensor[(3, 14, 13), uint64],) {
    %1571 = @func_1850() /* ty=Tensor[(3, 14, 13), uint64] */;
    (%1571,)
  };
  %1572() /* ty=(Tensor[(3, 14, 13), uint64],) */
}

def @func_18581() -> (Tensor[(84), float32],) {
  %1574 = fn () -> (Tensor[(84), float32],) {
    %1573 = @func_4948() /* ty=Tensor[(84), float32] */;
    (%1573,)
  };
  %1574() /* ty=(Tensor[(84), float32],) */
}

def @func_7616() -> (Tensor[(546), uint64],) {
  %1575 = @func_4814() /* ty=(Tensor[(546), uint64],) */;
  %1576 = %1575.0;
  (%1576,)
}

def @func_18338(%var_18332: Tensor[(112), float32]) -> (Tensor[(546), uint64], Tensor[(84), float32], Tensor[(84), float32], Tensor[(2, 180), bool], Tensor[(84), float32], Tensor[(112), float32]) {
  %1577 = @func_12427() /* ty=(Tensor[(546), uint64], Tensor[(84), float32], Tensor[(546), uint64], Tensor[(546), uint64]) */;
  %1578 = @func_1649() /* ty=(Tensor[(84), float32],) */;
  %1579 = cast(%var_18332, dtype="float32") /* ty=Tensor[(112), float32] */;
  %1580 = reshape(%1579, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %1581 = @func_10918(%1580) /* ty=(Tensor[(84), float32], Tensor[(10, 15, 11), bool], Tensor[(1650, 1), int8], Tensor[(546), uint64], Tensor[(112), float32]) */;
  %1582 = %1577.0;
  %1583 = %1578.0;
  %1584 = @func_10582() /* ty=Tensor[(84), float32] */;
  %1585 = @func_2816() /* ty=Tensor[(2, 180), bool] */;
  %1586 = %1581.0;
  (%1582, %1583, %1584, %1585, %1586, %var_18332)
}

def @func_2873() -> (Tensor[(84), float32],) {
  @func_2871() /* ty=(Tensor[(84), float32],) */
}

def @func_98(%var_97: Tensor[(3, 14, 13), uint64]) -> Tensor[(3, 14, 13), uint64] {
  %1591 = fn (%var_78: Tensor[(3, 14, 13), uint64]) -> Tensor[(3, 14, 13), uint64] {
    %1587 = cast(%var_78, dtype="uint64") /* ty=Tensor[(3, 14, 13), uint64] */;
    %1588 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(3, 14, 13), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1589 = cast(meta[relay.Constant][60] /* ty=Tensor[(3, 14, 13), uint64] */, dtype="uint64") /* ty=Tensor[(3, 14, 13), uint64] */;
    %1590 = dyn.reshape(%1587, %1588, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    right_shift(%1589, %1590) /* ty=Tensor[(3, 14, 13), uint64] */
  };
  %1591(%var_97) /* ty=Tensor[(3, 14, 13), uint64] */
}

def @func_6032() -> (Tensor[(8, 9, 15), uint8], Tensor[(546), uint64]) {
  %1592 = @func_3982() /* ty=(Tensor[(8, 9, 15), float64], Tensor[(8, 9, 15), float64]) */;
  %1593 = %1592.0;
  %1594 = cast(meta[relay.Constant][61] /* ty=Tensor[(8, 9, 15), float64] */, dtype="uint8") /* ty=Tensor[(8, 9, 15), uint8] */;
  %1595 = shape_of(%1593, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1596 = cast(%1593, dtype="uint8") /* ty=Tensor[(8, 9, 15), uint8] */;
  %1597 = dyn.reshape(%1594, %1595, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1598 = @func_5792() /* ty=(Tensor[(84), float32], Tensor[(546), uint64]) */;
  %1599 = right_shift(%1596, %1597) /* ty=Tensor[(8, 9, 15), uint8] */;
  %1600 = %1598.1;
  (%1599, %1600)
}

def @func_12132() -> (Tensor[(3, 14, 13), uint64],) {
  %1603 = fn () -> (Tensor[(3, 14, 13), uint64],) {
    %1601 = @func_2459() /* ty=(Tensor[(84), float32], Tensor[(3, 14, 13), uint64]) */;
    %1602 = %1601.1;
    (%1602,)
  };
  %1603() /* ty=(Tensor[(3, 14, 13), uint64],) */
}

def @func_6518() -> (Tensor[(16, 8, 3), uint16],) {
  %1606 = fn () -> (Tensor[(16, 8, 3), uint16],) {
    %1604 = @func_5547() /* ty=(Tensor[(3, 14, 13), uint64], Tensor[(16, 8, 3), uint16], Tensor[(1, 384), float64]) */;
    %1605 = %1604.1;
    (%1605,)
  };
  %1606() /* ty=(Tensor[(16, 8, 3), uint16],) */
}

def @func_16033() -> Tensor[(3, 14, 13), float64] {
  %1607 = fn () -> Tensor[(3, 14, 13), float64] {
    @func_4025() /* ty=Tensor[(3, 14, 13), float64] */
  };
  %1607() /* ty=Tensor[(3, 14, 13), float64] */
}

def @func_16870(%var_16868: Tensor[(3, 16, 14), float64], %var_16869: Tensor[(4224), float32]) -> (Tensor[(3, 16, 14), float64], Tensor[(546), uint64], Tensor[(8, 9, 15), float32], Tensor[(11, 384), float32], Tensor[(4224), float32]) {
  %1615 = fn (%var_16850: Tensor[(3, 16, 14), float64], %var_16865: Tensor[(4224), float32]) -> (Tensor[(3, 16, 14), float64], Tensor[(546), uint64], Tensor[(8, 9, 15), float32], Tensor[(11, 384), float32], Tensor[(4224), float32]) {
    %1608 = cast(%var_16850, dtype="float64") /* ty=Tensor[(3, 16, 14), float64] */;
    %1609 = cast(%var_16865, dtype="float32") /* ty=Tensor[(4224), float32] */;
    %1610 = reshape(%1609, newshape=[11, 384]) /* ty=Tensor[(11, 384), float32] */;
    %1611 = sinh(%1608) /* ty=Tensor[(3, 16, 14), float64] */;
    %1612 = @func_2787() /* ty=Tensor[(546), uint64] */;
    %1613 = @func_4403() /* ty=Tensor[(8, 9, 15), float32] */;
    %1614 = @func_15286(%1610) /* ty=Tensor[(11, 384), float32] */;
    (%1611, %1612, %1613, %1614, %var_16865)
  };
  %1615(%var_16868, %var_16869) /* ty=(Tensor[(3, 16, 14), float64], Tensor[(546), uint64], Tensor[(8, 9, 15), float32], Tensor[(11, 384), float32], Tensor[(4224), float32]) */
}

def @func_18471() -> Tensor[(84), float32] {
  @func_18469() /* ty=Tensor[(84), float32] */
}

def @func_12477() -> Tensor[(8, 9, 15), float32] {
  %1617 = fn () -> Tensor[(8, 9, 15), float32] {
    %1616 = @func_3457() /* ty=(Tensor[(8, 9, 15), float32], Tensor[(2, 180), uint16]) */;
    %1616.0
  };
  %1617() /* ty=Tensor[(8, 9, 15), float32] */
}

def @func_13167(%var_13159: Tensor[(5, 6, 11), float32]) -> (Tensor[(5, 6, 11), float32],) {
  %1618 = cast(%var_13159, dtype="float32") /* ty=Tensor[(5, 6, 11), float32] */;
  %1619 = acos(%1618) /* ty=Tensor[(5, 6, 11), float32] */;
  (%1619,)
}

def @func_10271() -> Tensor[(546), uint64] {
  @func_10269() /* ty=Tensor[(546), uint64] */
}

def @func_8210() -> (Tensor[(3, 14, 13), float64],) {
  @func_8208() /* ty=(Tensor[(3, 14, 13), float64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen717/build/output.py:6060: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen717/build/output.py", line 6065, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(832) tvmgen_default_fused_reshape_bitwise_or_kernel0(int64_t* __restrict__ T_bitwise_or, int64_t* __restrict__ placeholder, int64_t* __restrict__ placeholder1) {
  T_bitwise_or[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] | placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


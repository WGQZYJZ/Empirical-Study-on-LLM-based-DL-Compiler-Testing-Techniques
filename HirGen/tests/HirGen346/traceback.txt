==========mod==========
#[version = "0.0.5"]
def @func_6329() -> Tensor[(6, 10, 3), float64] {
  %0 = @func_3642() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) */;
  %0.0
}

def @func_7128() -> (Tensor[(6, 10, 3), uint16],) {
  %1 = @func_3870() /* ty=Tensor[(6, 10, 3), uint16] */;
  (%1,)
}

def @func_7086() -> (Tensor[(6, 10, 3), uint16],) {
  %2 = @func_6666() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %3 = %2.0;
  (%3,)
}

def @func_4960() -> (Tensor[(6, 1, 10), float64],) {
  %4 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %5 = %4.0;
  %6 = cast(%5, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
  %7 = exp(%6) /* ty=Tensor[(6, 1, 10), float64] */;
  (%7,)
}

def @func_3794(%var_3748: Tensor[(720), float32], %var_3786: Tensor[(6, 4, 10), float32]) -> (Tensor[(14, 5, ?), uint8], Tensor[(70), float64], Tensor[(720), float32], Tensor[(6, 4, 10), float32]) {
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %9 = cast(%var_3748, dtype="float32") /* ty=Tensor[(720), float32] */;
  %10 = reshape(%8, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), float64] */;
  %11 = reshape(%9, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %12 = @func_1622(%10, %11) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(14, 5, ?), uint8], Tensor[(14, 5, 1), float64], Tensor[(14, 5, 1), float64]) */;
  %13 = @func_2854() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %14 = %13.0;
  %15 = cast(%14, dtype="float32") /* ty=Tensor[(6, 1, 10), float32] */;
  %16 = cast(%var_3786, dtype="float32") /* ty=Tensor[(6, 4, 10), float32] */;
  %17 = %12.2;
  %18 = floor_mod(%15, %16) /* ty=Tensor[(6, 4, 10), float32] */;
  (%17, meta[relay.Constant][0] /* ty=Tensor[(70), float64] */, %var_3748, %18)
}

def @func_3305() -> (Tensor[(6, 1, 10), float32],) {
  %19 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %20 = %19.0;
  (%20,)
}

def @func_6827() -> Tensor[(6, 10, 3), float64] {
  %21 = @func_5251() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %21.0
}

def @func_3054() -> Tensor[(6, 10, 3), float64] {
  %22 = @func_2950() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) */;
  %22.1
}

def @func_2854() -> (Tensor[(6, 1, 10), float32],) {
  %23 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %24 = %23.0;
  (%24,)
}

def @func_3489(%var_3448: Tensor[(5, 16, 12), int16]) -> (Tensor[(5, 16, 12), int16], Tensor[(6, 10, 3), float64]) {
  %25 = cast(%var_3448, dtype="int16") /* ty=Tensor[(5, 16, 12), int16] */;
  %26 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(5, 16, 12), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 16, 12), int16] */, dtype="int16") /* ty=Tensor[(5, 16, 12), int16] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %29 = left_shift(%27, %28) /* ty=Tensor[(5, 16, 12), int16] */;
  %30 = @func_3054() /* ty=Tensor[(6, 10, 3), float64] */;
  (%29, %30)
}

def @func_2670() -> (Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) {
  %31 = cast(meta[relay.Constant][2] /* ty=Tensor[(11, 52), uint8] */, dtype="uint8") /* ty=Tensor[(11, 52), uint8] */;
  %32 = cast(meta[relay.Constant][3] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %33 = reshape(%31, newshape=[13, 11, 4]) /* ty=Tensor[(13, 11, 4), uint8] */;
  %34 = reshape(%32, newshape=[3, 20]) /* ty=Tensor[(3, 20), float64] */;
  %35 = @func_1912(%33, %34) /* ty=(Tensor[(13, 11, 4), bool], Tensor[(630), float32], Tensor[(96), float64], Tensor[(3, 20), float64], Tensor[(13, 11, 4), float64]) */;
  %36 = @func_2405() /* ty=Tensor[(6, 10, 3), float64] */;
  %37 = %35.3;
  (%36, %37, meta[relay.Constant][2] /* ty=Tensor[(11, 52), uint8] */, meta[relay.Constant][3] /* ty=Tensor[(60), float64] */)
}

def @func_7897() -> Tensor[(6, 10, 3), float64] {
  @func_5748() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_6475() -> Tensor[(6, 10, 3), uint16] {
  %38 = @func_4428() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), uint16]) */;
  %38.0
}

def @func_6500() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) {
  %39 = @func_4354() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %40 = %39.0;
  %41 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 3), float64] */;
  %42 = shape_of(%40, dtype="int32") /* ty=Tensor[(3), int32] */;
  %43 = cast(%40, dtype="float64") /* ty=Tensor[(6, 10, 3), float64] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %45 = @func_5878() /* ty=(Tensor[(1188), int8], Tensor[(6, 10, 3), float64], Tensor[(1, 6, 10), uint8], float32, Tensor[(60), float32]) */;
  %46 = subtract(%43, %44) /* ty=Tensor[(6, 10, 3), float64] */;
  %47 = %45.1;
  (%46, %47)
}

def @func_3603() -> (Tensor[(6, 10, 3), float64],) {
  %48 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %49 = %48.0;
  (%49,)
}

def @func_4990(%var_4981: Tensor[(12, 4, 10), uint8], %var_4982: Tensor[(12, 4, 10), uint8]) -> (Tensor[(12, 4, 10), uint8], Tensor[(5, 16, 12), int16], Tensor[(960), int16]) {
  %50 = cast(%var_4982, dtype="uint8") /* ty=Tensor[(12, 4, 10), uint8] */;
  %51 = shape_of(%var_4981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(%var_4981, dtype="uint8") /* ty=Tensor[(12, 4, 10), uint8] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %54 = cast(meta[relay.Constant][5] /* ty=Tensor[(960), int16] */, dtype="int16") /* ty=Tensor[(960), int16] */;
  %55 = reshape(%54, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), int16] */;
  %56 = @func_3489(%55) /* ty=(Tensor[(5, 16, 12), int16], Tensor[(6, 10, 3), float64]) */;
  %57 = bitwise_or(%52, %53) /* ty=Tensor[(12, 4, 10), uint8] */;
  %58 = %56.0;
  (%57, %58, meta[relay.Constant][5] /* ty=Tensor[(960), int16] */)
}

def @func_6711() -> Tensor[(6, 10, 3), float32] {
  %59 = @func_3879() /* ty=Tensor[(6, 10, 3), float64] */;
  %60 = cast(%59, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  atanh(%60) /* ty=Tensor[(6, 10, 3), float32] */
}

def @func_4230() -> Tensor[(6, 10, 3), float64] {
  %61 = @func_4165() /* ty=(Tensor[(60), float64], Tensor[(6, 10, 3), float64]) */;
  %61.1
}

def @func_5294(%var_5274: Tensor[(2, 10, 4), uint64], %var_5275: Tensor[(2, 10, 4), uint64], %var_5286: Tensor[(2, 10, 4), float64]) -> (Tensor[(2, 10, 4), float32], Tensor[(2, 10, 4), uint8]) {
  %62 = cast(%var_5275, dtype="uint64") /* ty=Tensor[(2, 10, 4), uint64] */;
  %63 = shape_of(%var_5274, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(%var_5274, dtype="uint64") /* ty=Tensor[(2, 10, 4), uint64] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %66 = add(%64, %65) /* ty=Tensor[(2, 10, 4), uint64] */;
  %67 = cast(%66, dtype="float64") /* ty=Tensor[(2, 10, 4), float64] */;
  %68 = log(%67) /* ty=Tensor[(2, 10, 4), float64] */;
  %69 = cast(%68, dtype="float32") /* ty=Tensor[(2, 10, 4), float32] */;
  %70 = cast(%var_5286, dtype="uint8") /* ty=Tensor[(2, 10, 4), uint8] */;
  %71 = shape_of(%68, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(%68, dtype="uint8") /* ty=Tensor[(2, 10, 4), uint8] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %74 = tan(%69) /* ty=Tensor[(2, 10, 4), float32] */;
  %75 = bitwise_and(%72, %73) /* ty=Tensor[(2, 10, 4), uint8] */;
  (%74, %75)
}

def @func_7712() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) {
  %76 = @func_5781() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %77 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %78 = %76.0;
  %79 = %77.0;
  %80 = @func_3879() /* ty=Tensor[(6, 10, 3), float64] */;
  (%78, %79, %80)
}

def @func_5806(%var_5794: Tensor[(11, 52), uint8]) -> (Tensor[(11, 52), int8], Tensor[(6, 10, 3), float64]) {
  %81 = @func_4968() /* ty=Tensor[(11, 52), uint8] */;
  %82 = cast(%var_5794, dtype="int8") /* ty=Tensor[(11, 52), int8] */;
  %83 = shape_of(%81, dtype="int32") /* ty=Tensor[(2), int32] */;
  %84 = cast(%81, dtype="int8") /* ty=Tensor[(11, 52), int8] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %86 = bitwise_xor(%84, %85) /* ty=Tensor[(11, 52), int8] */;
  %87 = @func_5748() /* ty=Tensor[(6, 10, 3), float64] */;
  (%86, %87)
}

def @func_7815() -> (Tensor[(6, 10, 3), float64],) {
  %88 = @func_7038() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) */;
  %89 = %88.1;
  (%89,)
}

def @func_3346() -> Tensor[(6, 10, 3), float64] {
  %90 = @func_2950() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) */;
  %90.1
}

def @main() -> (Tensor[(6, 1, 10), float32],) {
  %91 = @func_4960() /* ty=(Tensor[(6, 1, 10), float64],) */;
  %92 = %91.0;
  %93 = cast(%92, dtype="float32") /* ty=Tensor[(6, 1, 10), float32] */;
  %94 = sin(%93) /* ty=Tensor[(6, 1, 10), float32] */;
  (%94,)
}

def @func_8446() -> (Tensor[(6, 10, 3), float64], Tensor[(11, 52), uint8], Tensor[(6, 10, 3), uint8], Tensor[(6, 10, 3), float64], Tensor[(60), float64]) {
  %95 = @func_5499() /* ty=(Tensor[(6, 10, 3), uint8], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) */;
  %96 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %97 = @func_5160() /* ty=(Tensor[(6, 10, 3), bool], Tensor[(60), float64]) */;
  %98 = @func_6329() /* ty=Tensor[(6, 10, 3), float64] */;
  %99 = @func_4968() /* ty=Tensor[(11, 52), uint8] */;
  %100 = %95.0;
  %101 = %96.0;
  %102 = %97.1;
  (%98, %99, %100, %101, %102)
}

def @func_7646(%var_7606: Tensor[(96), float64]) -> (Tensor[(6, 10, 3), uint16], Tensor[(96), float64], Tensor[(858), float64], Tensor[(96), float64], Tensor[(15, 4), float64], Tensor[(6, 10, 3), float64], float32) {
  %103 = @func_3977() /* ty=(Tensor[(6, 13, 10), bool], Tensor[(6, 10, 3), uint16]) */;
  %104 = cast(meta[relay.Constant][6] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
  %105 = cast(meta[relay.Constant][6] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
  %106 = cast(%var_7606, dtype="float64") /* ty=Tensor[(96), float64] */;
  %107 = cast(meta[relay.Constant][7] /* ty=Tensor[(15, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
  %108 = reshape(%104, newshape=[6, 13, 11]) /* ty=Tensor[(6, 13, 11), float64] */;
  %109 = reshape(%105, newshape=[6, 13, 11]) /* ty=Tensor[(6, 13, 11), float64] */;
  %110 = reshape(%106, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %111 = reshape(%107, newshape=[15, 4]) /* ty=Tensor[(15, 4), float64] */;
  %112 = @func_5020(%108, %109, %110, %111) /* ty=(Tensor[(6, 13, 11), float64], Tensor[(60), float64], Tensor[(96), float64], Tensor[(15, 4), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float32]) */;
  %113 = cast(1.26457f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %114 = reshape(%113, newshape=[]) /* ty=float32 */;
  %115 = @func_3425(%114) /* ty=(Tensor[(16, 5, 9), float32], Tensor[(6, 10, 3), float64]) */;
  %116 = %103.1;
  %117 = %112.2;
  %118 = %115.1;
  (%116, %117, meta[relay.Constant][6] /* ty=Tensor[(858), float64] */, %var_7606, meta[relay.Constant][7] /* ty=Tensor[(15, 4), float64] */, %118, 1.26457f /* ty=float32 */)
}

def @func_6938(%var_6935: Tensor[(9, 7, 7), float64]) -> Tensor[(9, 7, 7), float64] {
  %119 = cast(%var_6935, dtype="float64") /* ty=Tensor[(9, 7, 7), float64] */;
  acos(%119) /* ty=Tensor[(9, 7, 7), float64] */
}

def @func_7353(%var_7344: Tensor[(7, 5, 7), float64], %var_7345: Tensor[(7, 5, 7), float64]) -> Tensor[(7, 5, 7), float64] {
  %120 = cast(%var_7345, dtype="float64") /* ty=Tensor[(7, 5, 7), float64] */;
  %121 = shape_of(%var_7344, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(%var_7344, dtype="float64") /* ty=Tensor[(7, 5, 7), float64] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%122, %123) /* ty=Tensor[(7, 5, 7), float64] */
}

def @func_4440(%var_4430: Tensor[(2, 15, 3), float32], %var_4435: Tensor[(630), float32]) -> (Tensor[(2, 15, 3), float32], Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(6, 10, 3), float64]) {
  %124 = cast(%var_4430, dtype="float32") /* ty=Tensor[(2, 15, 3), float32] */;
  %125 = cast(%var_4435, dtype="float32") /* ty=Tensor[(630), float32] */;
  %126 = reshape(%125, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float32] */;
  %127 = @func_1120(%126) /* ty=(Tensor[(3, 15, 14), float32], Tensor[(9, 10, 8), float32], Tensor[(720), float32]) */;
  %128 = tan(%124) /* ty=Tensor[(2, 15, 3), float32] */;
  %129 = %127.1;
  %130 = @func_3346() /* ty=Tensor[(6, 10, 3), float64] */;
  (%128, %129, %var_4435, %130)
}

def @func_5557() -> (Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) {
  %131 = @func_4203() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) */;
  %132 = @func_5251() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %133 = %131.1;
  %134 = %132.0;
  (%133, %134)
}

def @func_8469() -> (Tensor[(6, 1, 10), float32],) {
  %135 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %136 = %135.0;
  (%136,)
}

def @func_5069() -> (Tensor[(6, 10, 3), float64],) {
  %137 = @func_4014() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) */;
  %138 = %137.1;
  (%138,)
}

def @func_3270() -> (Tensor[(6, 1, 10), float32],) {
  %139 = @func_2986() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %140 = %139.0;
  %141 = cast(%140, dtype="float32") /* ty=Tensor[(6, 1, 10), float32] */;
  %142 = log(%141) /* ty=Tensor[(6, 1, 10), float32] */;
  (%142,)
}

def @func_6110(%var_6061: Tensor[(60), float64]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64], Tensor[(6, ?, 10), bool], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) {
  %143 = @func_3603() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %144 = cast(%var_6061, dtype="float64") /* ty=Tensor[(60), float64] */;
  %145 = reshape(%144, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %146 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %147 = @func_5251() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %148 = @func_2854() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %149 = %148.0;
  %150 = cast(%var_6061, dtype="bool") /* ty=Tensor[(60), bool] */;
  %151 = shape_of(%149, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(%149, dtype="bool") /* ty=Tensor[(6, 1, 10), bool] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %154 = @func_2950() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) */;
  %155 = @func_5160() /* ty=(Tensor[(6, 10, 3), bool], Tensor[(60), float64]) */;
  %156 = %155.0;
  %157 = cast(%156, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %158 = %143.0;
  %159 = @func_293(%145) /* ty=Tensor[(6, 10, 3), float64] */;
  %160 = %146.0;
  %161 = %147.0;
  %162 = greater_equal(%152, %153) /* ty=Tensor[(6, ?, 10), bool] */;
  %163 = %154.0;
  %164 = log2(%157) /* ty=Tensor[(6, 10, 3), float32] */;
  (%158, %159, %160, %161, %162, %163, %164)
}

def @func_857(%var_852: Tensor[(9, 10, 8), float32], %var_853: Tensor[(9, 10, 8), float32]) -> (Tensor[(9, 10, 8), float32],) {
  %165 = cast(%var_853, dtype="float32") /* ty=Tensor[(9, 10, 8), float32] */;
  %166 = shape_of(%var_852, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%var_852, dtype="float32") /* ty=Tensor[(9, 10, 8), float32] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %169 = divide(%167, %168) /* ty=Tensor[(9, 10, 8), float32] */;
  (%169,)
}

def @func_5683() -> (Tensor[(6, 10, 3), uint16],) {
  %170 = @func_4203() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) */;
  %171 = %170.1;
  (%171,)
}

def @func_8313(%var_8274: Tensor[(600), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(600), int8], Tensor[(6, 1, 10), uint8]) {
  %172 = @func_6170() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %173 = @func_7038() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) */;
  %174 = cast(-4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %175 = cast(%var_8274, dtype="float32") /* ty=Tensor[(600), float32] */;
  %176 = reshape(%174, newshape=[]) /* ty=int32 */;
  %177 = reshape(%175, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %178 = @func_8178(%176, %177) /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 1, 10), float32], int32, Tensor[(60, 12), int32], Tensor[(6, 3, 10), float32], Tensor[(600), float32]) */;
  %179 = %178.7;
  %180 = cast(-4 /* ty=int32 */, dtype="uint32") /* ty=uint32 */;
  %181 = cast(%179, dtype="uint32") /* ty=Tensor[(600), uint32] */;
  %182 = add(%180, %181) /* ty=Tensor[(600), uint32] */;
  %183 = cast(%182, dtype="int8") /* ty=Tensor[(600), int8] */;
  %184 = shape_of(%var_8274, dtype="int32") /* ty=Tensor[(1), int32] */;
  %185 = cast(%var_8274, dtype="int8") /* ty=Tensor[(600), int8] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?), int8] */;
  %187 = @func_2854() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %188 = %187.0;
  %189 = cast(%188, dtype="uint8") /* ty=Tensor[(6, 1, 10), uint8] */;
  %190 = cast(-4 /* ty=int32 */, dtype="uint8") /* ty=uint8 */;
  %191 = %172.1;
  %192 = @func_4260() /* ty=Tensor[(6, 10, 3), float64] */;
  %193 = %173.1;
  %194 = @func_3346() /* ty=Tensor[(6, 10, 3), float64] */;
  %195 = bitwise_or(%185, %186) /* ty=Tensor[(600), int8] */;
  %196 = subtract(%189, %190) /* ty=Tensor[(6, 1, 10), uint8] */;
  (%191, %192, %193, %194, %195, %196)
}

def @func_5499() -> (Tensor[(6, 10, 3), uint8], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) {
  %197 = @func_5265() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %198 = %197.0;
  %199 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 10, 3), uint16] */, dtype="uint8") /* ty=Tensor[(6, 10, 3), uint8] */;
  %200 = shape_of(%198, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(%198, dtype="uint8") /* ty=Tensor[(6, 10, 3), uint8] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %203 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %204 = @func_2974() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %205 = right_shift(%201, %202) /* ty=Tensor[(6, 10, 3), uint8] */;
  %206 = %203.0;
  %207 = %204.0;
  (%205, %206, %207)
}

def @func_4347(%var_4338: Tensor[(6, 15, 10), float32]) -> Tensor[(6, 15, 10), int8] {
  %208 = @func_3305() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %209 = %208.0;
  %210 = cast(%209, dtype="int8") /* ty=Tensor[(6, 1, 10), int8] */;
  %211 = cast(%var_4338, dtype="int8") /* ty=Tensor[(6, 15, 10), int8] */;
  bitwise_or(%210, %211) /* ty=Tensor[(6, 15, 10), int8] */
}

def @func_6145(%var_6132: Tensor[(70), float64], %var_6133: Tensor[(720), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32], Tensor[(144), float32], Tensor[(70), float64], Tensor[(720), float32], Tensor[(8, 12), float64], Tensor[(4, 24), float32]) {
  %212 = @func_5069() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %213 = @func_5069() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %214 = @func_5785() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %215 = cast(meta[relay.Constant][9] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %216 = cast(%var_6132, dtype="float64") /* ty=Tensor[(70), float64] */;
  %217 = cast(%var_6133, dtype="float32") /* ty=Tensor[(720), float32] */;
  %218 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 12), float64] */;
  %219 = reshape(%215, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float32] */;
  %220 = reshape(%216, newshape=[14, 5]) /* ty=Tensor[(14, 5), float64] */;
  %221 = reshape(%217, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %222 = reshape(%218, newshape=[4, 24]) /* ty=Tensor[(4, 24), float64] */;
  %223 = @func_2345(%219, %220, %221, %222) /* ty=(Tensor[(16, 3, 3), bool], Tensor[(14, 5, 1), float64], Tensor[(14, 5), float64], Tensor[(720), float32], Tensor[(16, 3, 3), bool], Tensor[(1188), int8], Tensor[(4, 24), float64], Tensor[(60), float64]) */;
  %224 = %223.6;
  %225 = cast(%224, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
  %226 = %212.0;
  %227 = %213.0;
  %228 = %214.0;
  %229 = log2(%225) /* ty=Tensor[(4, 24), float32] */;
  (%226, %227, %228, meta[relay.Constant][9] /* ty=Tensor[(144), float32] */, %var_6132, %var_6133, meta[relay.Constant][10] /* ty=Tensor[(8, 12), float64] */, %229)
}

def @func_5020(%var_5001: Tensor[(6, 13, 11), float64], %var_5002: Tensor[(6, 13, 11), float64], %var_5008: Tensor[(96), float64], %var_5009: Tensor[(15, 4), float64]) -> (Tensor[(6, 13, 11), float64], Tensor[(60), float64], Tensor[(96), float64], Tensor[(15, 4), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float32]) {
  %230 = cast(%var_5002, dtype="float64") /* ty=Tensor[(6, 13, 11), float64] */;
  %231 = shape_of(%var_5001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(%var_5001, dtype="float64") /* ty=Tensor[(6, 13, 11), float64] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %234 = cast(%var_5008, dtype="float64") /* ty=Tensor[(96), float64] */;
  %235 = cast(%var_5009, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
  %236 = reshape(%234, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float64] */;
  %237 = reshape(%235, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %238 = @func_1773(%236, %237) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(9, 10, 8), float32], Tensor[(70), float64], Tensor[(8, 2, 6), bool], Tensor[(8, 2, 6), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188), int8]) */;
  %239 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %240 = power(%232, %233) /* ty=Tensor[(6, 13, 11), float64] */;
  %241 = %238.7;
  %242 = %239.0;
  %243 = @func_3725() /* ty=Tensor[(6, 10, 3), float32] */;
  (%240, %241, %var_5008, %var_5009, %242, %243)
}

def @func_4203() -> (Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) {
  %244 = @func_3654() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) */;
  %245 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %246 = %244.1;
  %247 = %245.0;
  (%246, %247)
}

def @func_4260() -> Tensor[(6, 10, 3), float64] {
  @func_3879() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_2217() -> (Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) {
  %248 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 1, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 1, 10), float32] */;
  %249 = cos(%248) /* ty=Tensor[(6, 1, 10), float32] */;
  %250 = cast(%249, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
  %251 = reshape(%250, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %252 = @func_293(%251) /* ty=Tensor[(6, 10, 3), float64] */;
  (%249, %252)
}

def @func_3107() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) {
  %253 = @func_2865() /* ty=Tensor[(6, 10, 3), float64] */;
  %254 = cast(%253, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %255 = tan(%254) /* ty=Tensor[(6, 10, 3), float32] */;
  %256 = cast(%253, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %257 = shape_of(%255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %258 = cast(%255, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %260 = @func_2405() /* ty=Tensor[(6, 10, 3), float64] */;
  %261 = add(%258, %259) /* ty=Tensor[(6, 10, 3), float32] */;
  (%260, %261)
}

def @func_6905(%var_6894: Tensor[(8, 30), float32], %var_6900: Tensor[(12, 60), float32]) -> (Tensor[(6, 10, 3), uint16], Tensor[(6, 4, 10), float32], Tensor[(8, 30), float32], Tensor[(12, 60), int8]) {
  %262 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 60), float32] */, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
  %263 = cast(%var_6894, dtype="float32") /* ty=Tensor[(8, 30), float32] */;
  %264 = reshape(%262, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %265 = reshape(%263, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %266 = @func_4928(%264, %265) /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 4, 10), float32], Tensor[(720), float32], Tensor[(240), float32]) */;
  %267 = cast(%var_6900, dtype="int8") /* ty=Tensor[(12, 60), int8] */;
  %268 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(12, 60), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %269 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 60), float32] */, dtype="int8") /* ty=Tensor[(12, 60), int8] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %271 = @func_6475() /* ty=Tensor[(6, 10, 3), uint16] */;
  %272 = %266.1;
  %273 = minimum(%269, %270) /* ty=Tensor[(12, 60), int8] */;
  (%271, %272, %var_6894, %273)
}

def @func_3391(%var_3375: Tensor[(180), float64], %var_3382: Tensor[(286, 2), uint8]) -> (Tensor[(6, 1, 10), float32], Tensor[(180), float64], Tensor[(3, 20), float64], Tensor[(286, 2), float32]) {
  %274 = @func_2974() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %275 = @func_2670() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) */;
  %276 = cast(%var_3375, dtype="float64") /* ty=Tensor[(180), float64] */;
  %277 = reshape(%276, newshape=[6, 10, 3]) /* ty=Tensor[(6, 10, 3), float64] */;
  %278 = @func_2631(%277) /* ty=(Tensor[(286, 2), uint8], Tensor[(1188), int8], Tensor[(6, 10, 3), float32], Tensor[(9, 10, 8), float32], Tensor[(360, 2), float32], Tensor[(6, 70, 10), bool]) */;
  %279 = %278.0;
  %280 = cast(%var_3382, dtype="float32") /* ty=Tensor[(286, 2), float32] */;
  %281 = shape_of(%279, dtype="int32") /* ty=Tensor[(2), int32] */;
  %282 = cast(%279, dtype="float32") /* ty=Tensor[(286, 2), float32] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %284 = floor_mod(%282, %283) /* ty=Tensor[(286, 2), float32] */;
  %285 = cast(%284, dtype="float32") /* ty=Tensor[(286, 2), float32] */;
  %286 = %274.0;
  %287 = %275.1;
  %288 = tan(%285) /* ty=Tensor[(286, 2), float32] */;
  (%286, %var_3375, %287, %288)
}

def @func_3522() -> Tensor[(6, 10, 3), float32] {
  %289 = @func_3322() /* ty=Tensor[(6, 10, 3), uint16] */;
  %290 = cast(%289, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  sqrt(%290) /* ty=Tensor[(6, 10, 3), float32] */
}

def @func_5785() -> (Tensor[(6, 1, 10), float32],) {
  %291 = @func_3305() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %292 = %291.0;
  (%292,)
}

def @func_7564() -> Tensor[(6, 10, 3), float64] {
  @func_5748() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_5781() -> (Tensor[(6, 10, 3), float64],) {
  %293 = @func_3346() /* ty=Tensor[(6, 10, 3), float64] */;
  (%293,)
}

def @func_2974() -> (Tensor[(6, 1, 10), float32],) {
  %294 = @func_2854() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %295 = %294.0;
  (%295,)
}

def @func_4702() -> (Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) {
  %296 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %297 = @func_4203() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) */;
  %298 = %296.0;
  %299 = %297.0;
  (%298, %299)
}

def @func_5733() -> (Tensor[(6, 10, 3), float32], Tensor[(9, 12, 11), int8], Tensor[(60), float64], Tensor[(1188), int8], Tensor[(6, 10, 3), float64]) {
  %300 = cast(meta[relay.Constant][13] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %301 = cast(meta[relay.Constant][14] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %302 = reshape(%300, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %303 = reshape(%301, newshape=[9, 12, 11]) /* ty=Tensor[(9, 12, 11), int8] */;
  %304 = @func_636(%302, %303) /* ty=(Tensor[(9, 12, 11), int8], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(9, 12, 11), bool], Tensor[(6, 10, 3), float64]) */;
  %305 = @func_3522() /* ty=Tensor[(6, 10, 3), float32] */;
  %306 = %304.0;
  %307 = @func_2405() /* ty=Tensor[(6, 10, 3), float64] */;
  (%305, %306, meta[relay.Constant][13] /* ty=Tensor[(60), float64] */, meta[relay.Constant][14] /* ty=Tensor[(1188), int8] */, %307)
}

def @func_7339(%var_7304: int64, %var_7305: Tensor[(9, 1), int64]) -> (Tensor[(9, 1), bool], Tensor[(60), float64], Tensor[(6, 1, 10), float32]) {
  %308 = cast(%var_7304, dtype="bool") /* ty=bool */;
  %309 = cast(%var_7305, dtype="bool") /* ty=Tensor[(9, 1), bool] */;
  %310 = @func_4165() /* ty=(Tensor[(60), float64], Tensor[(6, 10, 3), float64]) */;
  %311 = equal(%308, %309) /* ty=Tensor[(9, 1), bool] */;
  %312 = %310.0;
  %313 = @func_6739() /* ty=Tensor[(6, 1, 10), float32] */;
  (%311, %312, %313)
}

def @func_6575() -> (Tensor[(6, 10, 3), uint16],) {
  %314 = @func_3322() /* ty=Tensor[(6, 10, 3), uint16] */;
  (%314,)
}

def @func_5878() -> (Tensor[(1188), int8], Tensor[(6, 10, 3), float64], Tensor[(1, 6, 10), uint8], float32, Tensor[(60), float32]) {
  %315 = @func_2518() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */;
  %316 = @func_5160() /* ty=(Tensor[(6, 10, 3), bool], Tensor[(60), float64]) */;
  %317 = %316.0;
  %318 = cast(%317, dtype="float64") /* ty=Tensor[(6, 10, 3), float64] */;
  %319 = cast(-9.04115f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %320 = cast(meta[relay.Constant][15] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %321 = reshape(%319, newshape=[]) /* ty=float32 */;
  %322 = reshape(%320, newshape=[1, 6, 10]) /* ty=Tensor[(1, 6, 10), float32] */;
  %323 = @func_4589(%321, %322) /* ty=(Tensor[(1, 6, 10), uint8], Tensor[(6, 10, 3), float64]) */;
  %324 = %315.2;
  %325 = sinh(%318) /* ty=Tensor[(6, 10, 3), float64] */;
  %326 = %323.0;
  (%324, %325, %326, -9.04115f /* ty=float32 */, meta[relay.Constant][15] /* ty=Tensor[(60), float32] */)
}

def @func_6666() -> (Tensor[(6, 10, 3), uint16],) {
  %327 = @func_4428() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), uint16]) */;
  %328 = %327.1;
  (%328,)
}

def @func_3425(%var_3412: float32) -> (Tensor[(16, 5, 9), float32], Tensor[(6, 10, 3), float64]) {
  %329 = cast(%var_3412, dtype="float32") /* ty=float32 */;
  %330 = cast(meta[relay.Constant][16] /* ty=Tensor[(16, 5, 9), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 9), float32] */;
  %331 = floor_mod(%329, %330) /* ty=Tensor[(16, 5, 9), float32] */;
  %332 = @func_3054() /* ty=Tensor[(6, 10, 3), float64] */;
  (%331, %332)
}

def @func_5398(%var_5391: Tensor[(900), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32], Tensor[(6, 1, 10), float32], Tensor[(6, 15, 10), int8], Tensor[(900), float32]) {
  %333 = @func_4354() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %334 = @func_4203() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) */;
  %335 = cast(%var_5391, dtype="float32") /* ty=Tensor[(900), float32] */;
  %336 = reshape(%335, newshape=[6, 15, 10]) /* ty=Tensor[(6, 15, 10), float32] */;
  %337 = %333.0;
  %338 = @func_3725() /* ty=Tensor[(6, 10, 3), float32] */;
  %339 = %334.0;
  %340 = @func_4347(%336) /* ty=Tensor[(6, 15, 10), int8] */;
  (%337, %338, %339, %340, %var_5391)
}

def @func_636(%var_599: Tensor[(60), float64], %var_605: Tensor[(9, 12, 11), int8]) -> (Tensor[(9, 12, 11), int8], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(9, 12, 11), bool], Tensor[(6, 10, 3), float64]) {
  %341 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 12, 11), int8] */, dtype="int8") /* ty=Tensor[(9, 12, 11), int8] */;
  %342 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(9, 12, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 12, 11), int8] */, dtype="int8") /* ty=Tensor[(9, 12, 11), int8] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %345 = cast(%var_599, dtype="float64") /* ty=Tensor[(60), float64] */;
  %346 = reshape(%345, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %347 = cast(%var_599, dtype="float64") /* ty=Tensor[(60), float64] */;
  %348 = reshape(%347, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %349 = cast(%var_599, dtype="float64") /* ty=Tensor[(60), float64] */;
  %350 = reshape(%349, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %351 = cast(%var_599, dtype="float64") /* ty=Tensor[(60), float64] */;
  %352 = reshape(%351, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %353 = cast(%var_605, dtype="bool") /* ty=Tensor[(9, 12, 11), bool] */;
  %354 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(9, 12, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %355 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 12, 11), int8] */, dtype="bool") /* ty=Tensor[(9, 12, 11), bool] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %357 = greater(%355, %356) /* ty=Tensor[(9, 12, 11), bool] */;
  %358 = cast(%357, dtype="float32") /* ty=Tensor[(9, 12, 11), float32] */;
  %359 = cosh(%358) /* ty=Tensor[(9, 12, 11), float32] */;
  %360 = cast(%359, dtype="float64") /* ty=Tensor[(9, 12, 11), float64] */;
  %361 = log(%360) /* ty=Tensor[(9, 12, 11), float64] */;
  %362 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 12, 11), int8] */, dtype="bool") /* ty=Tensor[(9, 12, 11), bool] */;
  %363 = shape_of(%361, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(%361, dtype="bool") /* ty=Tensor[(9, 12, 11), bool] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %366 = cast(%var_599, dtype="float64") /* ty=Tensor[(60), float64] */;
  %367 = reshape(%366, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %368 = multiply(%343, %344) /* ty=Tensor[(9, 12, 11), int8] */;
  %369 = @func_293(%346) /* ty=Tensor[(6, 10, 3), float64] */;
  %370 = @func_293(%348) /* ty=Tensor[(6, 10, 3), float64] */;
  %371 = @func_293(%350) /* ty=Tensor[(6, 10, 3), float64] */;
  %372 = @func_293(%352) /* ty=Tensor[(6, 10, 3), float64] */;
  %373 = less_equal(%364, %365) /* ty=Tensor[(9, 12, 11), bool] */;
  %374 = @func_293(%367) /* ty=Tensor[(6, 10, 3), float64] */;
  (%368, %369, %var_599, %370, %371, %372, %373, %374)
}

def @func_4428() -> (Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), uint16]) {
  %375 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %376 = %375.0;
  %377 = cast(%376, dtype="uint16") /* ty=Tensor[(6, 10, 3), uint16] */;
  %378 = reshape(%377, newshape=[6, 10, 3]) /* ty=Tensor[(6, 10, 3), uint16] */;
  %379 = @func_2902(%378) /* ty=(Tensor[(6, 10, 3), bool], Tensor[(720), float32], Tensor[(5, 126), float32], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188, 1), int8]) */;
  %380 = %379.3;
  (%376, %380)
}

def @func_5947() -> (Tensor[(6, 1, 10), float64], Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), bool], Tensor[(6, 1, 10), float64]) {
  %381 = @func_4960() /* ty=(Tensor[(6, 1, 10), float64],) */;
  %382 = %381.0;
  %383 = cast(%382, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
  %384 = cast(%382, dtype="float32") /* ty=Tensor[(6, 1, 10), float32] */;
  %385 = @func_5251() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %386 = %385.0;
  %387 = cast(meta[relay.Constant][19] /* ty=Tensor[(6, 10, 3), float64] */, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
  %388 = shape_of(%386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%386, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %391 = @func_4960() /* ty=(Tensor[(6, 1, 10), float64],) */;
  %392 = sqrt(%383) /* ty=Tensor[(6, 1, 10), float64] */;
  %393 = sinh(%384) /* ty=Tensor[(6, 1, 10), float32] */;
  %394 = greater(%389, %390) /* ty=Tensor[(6, 10, 3), bool] */;
  %395 = %391.0;
  (%392, %393, %394, %395)
}

def @func_7973(%var_7941: Tensor[(600), float32], %var_7967: Tensor[(720), float32]) -> (Tensor[(6, 10, 3), float32], Tensor[(6, 10, 10), int8], Tensor[(6, 10, 3), uint16], Tensor[(240), float32], Tensor[(720), float32]) {
  %396 = @func_3107() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) */;
  %397 = cast(%var_7941, dtype="float32") /* ty=Tensor[(600), float32] */;
  %398 = %396.1;
  %399 = cast(%398, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %400 = reshape(%397, newshape=[6, 10, 10]) /* ty=Tensor[(6, 10, 10), float32] */;
  %401 = reshape(%399, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float32] */;
  %402 = @func_3927(%400, %401) /* ty=(Tensor[(6, 10, 10), bool], Tensor[(6, 3, 10), float32], Tensor[(3, 20), float64]) */;
  %403 = %402.0;
  %404 = cast(%var_7941, dtype="int8") /* ty=Tensor[(600), int8] */;
  %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %406 = cast(%403, dtype="int8") /* ty=Tensor[(6, 10, 10), int8] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %408 = cast(meta[relay.Constant][20] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %409 = cast(%var_7967, dtype="float32") /* ty=Tensor[(720), float32] */;
  %410 = reshape(%408, newshape=[8, 30]) /* ty=Tensor[(8, 30), float32] */;
  %411 = reshape(%409, newshape=[12, 60]) /* ty=Tensor[(12, 60), float32] */;
  %412 = @func_6905(%410, %411) /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 4, 10), float32], Tensor[(8, 30), float32], Tensor[(12, 60), int8]) */;
  %413 = subtract(%406, %407) /* ty=Tensor[(6, 10, 10), int8] */;
  %414 = %412.0;
  (%398, %413, %414, meta[relay.Constant][20] /* ty=Tensor[(240), float32] */, %var_7967)
}

def @func_2836() -> (Tensor[(6, 10, 3), uint16],) {
  %415 = @func_2518() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */;
  %416 = %415.1;
  %417 = cast(%416, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %418 = rsqrt(%417) /* ty=Tensor[(6, 10, 3), float32] */;
  %419 = cast(%416, dtype="uint16") /* ty=Tensor[(6, 10, 3), uint16] */;
  %420 = shape_of(%418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%418, dtype="uint16") /* ty=Tensor[(6, 10, 3), uint16] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %423 = bitwise_and(%421, %422) /* ty=Tensor[(6, 10, 3), uint16] */;
  (%423,)
}

def @func_2865() -> Tensor[(6, 10, 3), float64] {
  %424 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %424.0
}

def @func_3642() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) {
  %425 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %426 = @func_2518() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */;
  %427 = %425.0;
  %428 = %426.0;
  (%427, %428)
}

def @func_7249() -> (Tensor[(6, 1, 10), float64], Tensor[(6, 10, 3), float64]) {
  %429 = @func_4203() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) */;
  %430 = %429.0;
  %431 = cast(%430, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
  %432 = tan(%431) /* ty=Tensor[(6, 1, 10), float64] */;
  %433 = @func_6329() /* ty=Tensor[(6, 10, 3), float64] */;
  (%432, %433)
}

def @func_6194() -> (Tensor[(6, 10, 3), float64],) {
  %434 = @func_3579() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) */;
  %435 = %434.0;
  (%435,)
}

def @func_2498() -> (Tensor[(6, 1, 10), float32],) {
  %436 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %437 = %436.0;
  (%437,)
}

def @func_4014() -> (Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) {
  %438 = @func_3522() /* ty=Tensor[(6, 10, 3), float32] */;
  %439 = cast(%438, dtype="float64") /* ty=Tensor[(6, 10, 3), float64] */;
  %440 = @func_3870() /* ty=Tensor[(6, 10, 3), uint16] */;
  %441 = cos(%439) /* ty=Tensor[(6, 10, 3), float64] */;
  (%440, %441)
}

def @func_5913(%var_5899: Tensor[(11, 15, 15), int32], %var_5900: Tensor[(11, 15, 15), int32]) -> (Tensor[(11, 15, 15), bool], Tensor[(6, 10, 3), float64]) {
  %442 = cast(%var_5900, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %443 = shape_of(%var_5899, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%var_5899, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %446 = @func_3654() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) */;
  %447 = not_equal(%444, %445) /* ty=Tensor[(11, 15, 15), bool] */;
  %448 = %446.0;
  (%447, %448)
}

def @func_2345(%var_2303: Tensor[(16, 3, 3), float32], %var_2325: Tensor[(14, 5), float64], %var_2326: Tensor[(720), float32], %var_2338: Tensor[(4, 24), float64]) -> (Tensor[(16, 3, 3), bool], Tensor[(14, 5, 1), float64], Tensor[(14, 5), float64], Tensor[(720), float32], Tensor[(16, 3, 3), bool], Tensor[(1188), int8], Tensor[(4, 24), float64], Tensor[(60), float64]) {
  %449 = cast(%var_2303, dtype="float64") /* ty=Tensor[(16, 3, 3), float64] */;
  %450 = acos(%449) /* ty=Tensor[(16, 3, 3), float64] */;
  %451 = cast(%var_2303, dtype="float32") /* ty=Tensor[(16, 3, 3), float32] */;
  %452 = atanh(%451) /* ty=Tensor[(16, 3, 3), float32] */;
  %453 = cast(%452, dtype="bool") /* ty=Tensor[(16, 3, 3), bool] */;
  %454 = shape_of(%450, dtype="int32") /* ty=Tensor[(3), int32] */;
  %455 = cast(%450, dtype="bool") /* ty=Tensor[(16, 3, 3), bool] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %457 = cast(%var_2325, dtype="float64") /* ty=Tensor[(14, 5), float64] */;
  %458 = cast(%var_2326, dtype="float32") /* ty=Tensor[(720), float32] */;
  %459 = reshape(%457, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), float64] */;
  %460 = reshape(%458, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %461 = @func_1622(%459, %460) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(14, 5, ?), uint8], Tensor[(14, 5, 1), float64], Tensor[(14, 5, 1), float64]) */;
  %462 = cast(%452, dtype="bool") /* ty=Tensor[(16, 3, 3), bool] */;
  %463 = shape_of(%var_2303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%var_2303, dtype="bool") /* ty=Tensor[(16, 3, 3), bool] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %466 = cast(%var_2338, dtype="float64") /* ty=Tensor[(4, 24), float64] */;
  %467 = cast(meta[relay.Constant][21] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %468 = reshape(%466, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float64] */;
  %469 = reshape(%467, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %470 = @func_1773(%468, %469) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(9, 10, 8), float32], Tensor[(70), float64], Tensor[(8, 2, 6), bool], Tensor[(8, 2, 6), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188), int8]) */;
  %471 = logical_and(%455, %456) /* ty=Tensor[(16, 3, 3), bool] */;
  %472 = %461.3;
  %473 = equal(%464, %465) /* ty=Tensor[(16, 3, 3), bool] */;
  %474 = %470.8;
  (%471, %472, %var_2325, %var_2326, %473, %474, %var_2338, meta[relay.Constant][21] /* ty=Tensor[(60), float64] */)
}

def @func_6170() -> (Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) {
  %475 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %476 = @func_5781() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %477 = %475.0;
  %478 = %476.0;
  (%477, %478)
}

def @func_3239(%var_3215: Tensor[(12, 12, 12), float32]) -> (Tensor[(12, 12, 12), bool], Tensor[(12, 12, 12), bool]) {
  %479 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 12, 12), float32] */;
  %480 = cos(%479) /* ty=Tensor[(12, 12, 12), float32] */;
  %481 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 12, 12), float32] */;
  %482 = shape_of(%var_3215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(%var_3215, dtype="float32") /* ty=Tensor[(12, 12, 12), float32] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %485 = floor_divide(%483, %484) /* ty=Tensor[(12, 12, 12), float32] */;
  %486 = cast(%485, dtype="bool") /* ty=Tensor[(12, 12, 12), bool] */;
  %487 = shape_of(%480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%480, dtype="bool") /* ty=Tensor[(12, 12, 12), bool] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %490 = cast(%485, dtype="bool") /* ty=Tensor[(12, 12, 12), bool] */;
  %491 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(12, 12, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 12, 12), float32] */, dtype="bool") /* ty=Tensor[(12, 12, 12), bool] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %494 = not_equal(%488, %489) /* ty=Tensor[(12, 12, 12), bool] */;
  %495 = logical_and(%492, %493) /* ty=Tensor[(12, 12, 12), bool] */;
  (%494, %495)
}

def @func_4165() -> (Tensor[(60), float64], Tensor[(6, 10, 3), float64]) {
  %496 = @func_2670() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) */;
  %497 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %498 = %496.3;
  %499 = %497.1;
  (%498, %499)
}

def @func_6855(%var_6835: Tensor[(5, 6, 1), float64]) -> (Tensor[(5, 6, ?), int16], Tensor[(6, 10, 3), float64], Tensor[(15, 4), float64]) {
  %500 = cast(%var_6835, dtype="float64") /* ty=Tensor[(5, 6, 1), float64] */;
  %501 = log(%500) /* ty=Tensor[(5, 6, 1), float64] */;
  %502 = cast(%var_6835, dtype="int16") /* ty=Tensor[(5, 6, 1), int16] */;
  %503 = shape_of(%501, dtype="int32") /* ty=Tensor[(3), int32] */;
  %504 = cast(%501, dtype="int16") /* ty=Tensor[(5, 6, 1), int16] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %506 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
  %507 = reshape(%506, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %508 = bitwise_xor(%504, %505) /* ty=Tensor[(5, 6, ?), int16] */;
  %509 = @func_293(%507) /* ty=Tensor[(6, 10, 3), float64] */;
  (%508, %509, meta[relay.Constant][23] /* ty=Tensor[(15, 4), float64] */)
}

def @func_6300() -> (Tensor[(6, 10, 3), float64],) {
  %510 = @func_5069() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %511 = %510.0;
  (%511,)
}

def @func_5312() -> Tensor[(60), float64] {
  %512 = @func_4165() /* ty=(Tensor[(60), float64], Tensor[(6, 10, 3), float64]) */;
  %512.0
}

def @func_5251() -> (Tensor[(6, 10, 3), float64],) {
  %513 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %514 = %513.1;
  (%514,)
}

def @func_8099() -> (Tensor[(6, 1, 10), float32], Tensor[(1188), int16], Tensor[(6, 10, 3), float64]) {
  %515 = @func_4203() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) */;
  %516 = @func_5733() /* ty=(Tensor[(6, 10, 3), float32], Tensor[(9, 12, 11), int8], Tensor[(60), float64], Tensor[(1188), int8], Tensor[(6, 10, 3), float64]) */;
  %517 = %516.3;
  %518 = cast(%517, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %519 = log10(%518) /* ty=Tensor[(1188), float32] */;
  %520 = cast(%519, dtype="int16") /* ty=Tensor[(1188), int16] */;
  %521 = shape_of(%517, dtype="int32") /* ty=Tensor[(1), int32] */;
  %522 = cast(%517, dtype="int16") /* ty=Tensor[(1188), int16] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?), int16] */;
  %524 = %515.0;
  %525 = bitwise_xor(%522, %523) /* ty=Tensor[(1188), int16] */;
  %526 = @func_7897() /* ty=Tensor[(6, 10, 3), float64] */;
  (%524, %525, %526)
}

def @func_3579() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) {
  %527 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %528 = @func_3346() /* ty=Tensor[(6, 10, 3), float64] */;
  %529 = %527.1;
  (%528, %529)
}

def @func_3322() -> Tensor[(6, 10, 3), uint16] {
  %530 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %530.0
}

def @func_6739() -> Tensor[(6, 1, 10), float32] {
  %531 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %531.0
}

def @func_3725() -> Tensor[(6, 10, 3), float32] {
  %532 = @func_3510() /* ty=(Tensor[(6, 10, 3), float32],) */;
  %532.0
}

def @func_5449(%var_5431: int32, %var_5432: Tensor[(12, 15, 4), int32]) -> (Tensor[(12, 15, 4), int32], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) {
  %533 = cast(%var_5431, dtype="int32") /* ty=int32 */;
  %534 = cast(%var_5432, dtype="int32") /* ty=Tensor[(12, 15, 4), int32] */;
  %535 = @func_3654() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) */;
  %536 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %537 = bitwise_and(%533, %534) /* ty=Tensor[(12, 15, 4), int32] */;
  %538 = %535.1;
  %539 = %536.0;
  (%537, %538, %539)
}

def @func_1773(%var_1727: Tensor[(8, 2, 6), float64], %var_1754: Tensor[(60), float64]) -> (Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(9, 10, 8), float32], Tensor[(70), float64], Tensor[(8, 2, 6), bool], Tensor[(8, 2, 6), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188), int8]) {
  %540 = cast(meta[relay.Constant][24] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %541 = reshape(%540, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float32] */;
  %542 = @func_1120(%541) /* ty=(Tensor[(3, 15, 14), float32], Tensor[(9, 10, 8), float32], Tensor[(720), float32]) */;
  %543 = cast(meta[relay.Constant][25] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %544 = %542.1;
  %545 = cast(%544, dtype="float32") /* ty=Tensor[(9, 10, 8), float32] */;
  %546 = reshape(%543, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), float64] */;
  %547 = reshape(%545, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %548 = @func_1622(%546, %547) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(14, 5, ?), uint8], Tensor[(14, 5, 1), float64], Tensor[(14, 5, 1), float64]) */;
  %549 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 2, 6), float64] */, dtype="float64") /* ty=Tensor[(8, 2, 6), float64] */;
  %550 = exp(%549) /* ty=Tensor[(8, 2, 6), float64] */;
  %551 = cast(%var_1727, dtype="bool") /* ty=Tensor[(8, 2, 6), bool] */;
  %552 = shape_of(%550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %553 = cast(%550, dtype="bool") /* ty=Tensor[(8, 2, 6), bool] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %555 = cast(%550, dtype="float64") /* ty=Tensor[(8, 2, 6), float64] */;
  %556 = cast(%var_1754, dtype="float64") /* ty=Tensor[(60), float64] */;
  %557 = cast(meta[relay.Constant][27] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %558 = reshape(%556, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %559 = reshape(%557, newshape=[9, 12, 11]) /* ty=Tensor[(9, 12, 11), int8] */;
  %560 = @func_636(%558, %559) /* ty=(Tensor[(9, 12, 11), int8], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(9, 12, 11), bool], Tensor[(6, 10, 3), float64]) */;
  %561 = %548.0;
  %562 = greater(%553, %554) /* ty=Tensor[(8, 2, 6), bool] */;
  %563 = log10(%555) /* ty=Tensor[(8, 2, 6), float64] */;
  %564 = %560.4;
  (%544, meta[relay.Constant][24] /* ty=Tensor[(630), float32] */, %561, meta[relay.Constant][25] /* ty=Tensor[(70), float64] */, %562, %563, %564, %var_1754, meta[relay.Constant][27] /* ty=Tensor[(1188), int8] */)
}

def @func_2405() -> Tensor[(6, 10, 3), float64] {
  %565 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %565.0
}

def @func_8178(%var_8141: int32, %var_8168: Tensor[(600), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 1, 10), float32], int32, Tensor[(60, 12), int32], Tensor[(6, 3, 10), float32], Tensor[(600), float32]) {
  %566 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %567 = cast(meta[relay.Constant][28] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %568 = reshape(%567, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %569 = @func_6110(%568) /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64], Tensor[(6, ?, 10), bool], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) */;
  %570 = cast(%var_8141, dtype="int32") /* ty=int32 */;
  %571 = cast(meta[relay.Constant][29] /* ty=Tensor[(60, 12), int32] */, dtype="int32") /* ty=Tensor[(60, 12), int32] */;
  %572 = reshape(%570, newshape=[]) /* ty=int32 */;
  %573 = reshape(%571, newshape=[12, 15, 4]) /* ty=Tensor[(12, 15, 4), int32] */;
  %574 = @func_5449(%572, %573) /* ty=(Tensor[(12, 15, 4), int32], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) */;
  %575 = cast(%var_8168, dtype="float32") /* ty=Tensor[(600), float32] */;
  %576 = %566.0;
  %577 = cast(%576, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %578 = reshape(%575, newshape=[6, 10, 10]) /* ty=Tensor[(6, 10, 10), float32] */;
  %579 = reshape(%577, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float32] */;
  %580 = @func_3927(%578, %579) /* ty=(Tensor[(6, 10, 10), bool], Tensor[(6, 3, 10), float32], Tensor[(3, 20), float64]) */;
  %581 = %569.0;
  %582 = %574.2;
  %583 = %580.1;
  (%576, %581, meta[relay.Constant][28] /* ty=Tensor[(60), float64] */, %582, %var_8141, meta[relay.Constant][29] /* ty=Tensor[(60, 12), int32] */, %583, %var_8168)
}

def @func_7503(%var_7473: Tensor[(720), float32], %var_7476: Tensor[(143, 4), uint8]) -> (Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(30, 2), float64], Tensor[(1188), float32], Tensor[(13, 11, 4), float64]) {
  %584 = cast(%var_7473, dtype="float32") /* ty=Tensor[(720), float32] */;
  %585 = cast(%var_7473, dtype="float32") /* ty=Tensor[(720), float32] */;
  %586 = reshape(%584, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %587 = reshape(%585, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %588 = @func_857(%586, %587) /* ty=(Tensor[(9, 10, 8), float32],) */;
  %589 = @func_2518() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */;
  %590 = %589.2;
  %591 = cast(meta[relay.Constant][31] /* ty=Tensor[(1188), int8] */, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %592 = shape_of(%590, dtype="int32") /* ty=Tensor[(1), int32] */;
  %593 = cast(%590, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?), float32] */;
  %595 = cast(%var_7476, dtype="uint8") /* ty=Tensor[(143, 4), uint8] */;
  %596 = cast(meta[relay.Constant][30] /* ty=Tensor[(30, 2), float64] */, dtype="float64") /* ty=Tensor[(30, 2), float64] */;
  %597 = reshape(%595, newshape=[13, 11, 4]) /* ty=Tensor[(13, 11, 4), uint8] */;
  %598 = reshape(%596, newshape=[3, 20]) /* ty=Tensor[(3, 20), float64] */;
  %599 = @func_1912(%597, %598) /* ty=(Tensor[(13, 11, 4), bool], Tensor[(630), float32], Tensor[(96), float64], Tensor[(3, 20), float64], Tensor[(13, 11, 4), float64]) */;
  %600 = %599.0;
  %601 = cast(%var_7476, dtype="bool") /* ty=Tensor[(143, 4), bool] */;
  %602 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%600, dtype="bool") /* ty=Tensor[(13, 11, 4), bool] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %605 = equal(%603, %604) /* ty=Tensor[(13, 11, 4), bool] */;
  %606 = cast(%605, dtype="float64") /* ty=Tensor[(13, 11, 4), float64] */;
  %607 = %588.0;
  %608 = floor_divide(%593, %594) /* ty=Tensor[(1188), float32] */;
  %609 = sqrt(%606) /* ty=Tensor[(13, 11, 4), float64] */;
  (%607, %var_7473, meta[relay.Constant][30] /* ty=Tensor[(30, 2), float64] */, %608, %609)
}

def @func_4968() -> Tensor[(11, 52), uint8] {
  %610 = @func_2670() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) */;
  %610.2
}

def @func_3927(%var_3898: Tensor[(6, 10, 10), float32], %var_3905: Tensor[(6, 3, 10), float32]) -> (Tensor[(6, 10, 10), bool], Tensor[(6, 3, 10), float32], Tensor[(3, 20), float64]) {
  %611 = @func_2986() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %612 = %611.0;
  %613 = cast(%612, dtype="bool") /* ty=Tensor[(6, 1, 10), bool] */;
  %614 = cast(%var_3898, dtype="bool") /* ty=Tensor[(6, 10, 10), bool] */;
  %615 = cast(%612, dtype="float32") /* ty=Tensor[(6, 1, 10), float32] */;
  %616 = cast(%var_3905, dtype="float32") /* ty=Tensor[(6, 3, 10), float32] */;
  %617 = @func_2670() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) */;
  %618 = logical_or(%613, %614) /* ty=Tensor[(6, 10, 10), bool] */;
  %619 = minimum(%615, %616) /* ty=Tensor[(6, 3, 10), float32] */;
  %620 = %617.1;
  (%618, %619, %620)
}

def @func_7207() -> (Tensor[(1, 2, 3), uint8],) {
  %621 = cast(meta[relay.Constant][32] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %622 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 2, 3), uint8] */, dtype="uint8") /* ty=Tensor[(1, 2, 3), uint8] */;
  %623 = left_shift(%621, %622) /* ty=Tensor[(1, 2, 3), uint8] */;
  (%623,)
}

def @func_2986() -> (Tensor[(6, 1, 10), float32],) {
  %624 = @func_2974() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %625 = %624.0;
  (%625,)
}

def @func_4928(%var_4907: Tensor[(720), float32], %var_4908: Tensor[(240), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 4, 10), float32], Tensor[(720), float32], Tensor[(240), float32]) {
  %626 = cast(%var_4907, dtype="float32") /* ty=Tensor[(720), float32] */;
  %627 = cast(%var_4908, dtype="float32") /* ty=Tensor[(240), float32] */;
  %628 = reshape(%626, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %629 = reshape(%627, newshape=[6, 4, 10]) /* ty=Tensor[(6, 4, 10), float32] */;
  %630 = @func_3794(%628, %629) /* ty=(Tensor[(14, 5, ?), uint8], Tensor[(70), float64], Tensor[(720), float32], Tensor[(6, 4, 10), float32]) */;
  %631 = @func_2405() /* ty=Tensor[(6, 10, 3), float64] */;
  %632 = %630.3;
  (%631, %632, %var_4907, %var_4908)
}

def @func_2292(%var_2286: Tensor[(572), uint8], %var_2289: Tensor[(1188), int8]) -> (Tensor[(6, 1, 10), float32], Tensor[(630), float32], Tensor[(572), uint8], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) {
  %633 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %634 = cast(%var_2286, dtype="uint8") /* ty=Tensor[(572), uint8] */;
  %635 = %633.0;
  %636 = cast(%635, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
  %637 = reshape(%634, newshape=[13, 11, 4]) /* ty=Tensor[(13, 11, 4), uint8] */;
  %638 = reshape(%636, newshape=[3, 20]) /* ty=Tensor[(3, 20), float64] */;
  %639 = @func_1912(%637, %638) /* ty=(Tensor[(13, 11, 4), bool], Tensor[(630), float32], Tensor[(96), float64], Tensor[(3, 20), float64], Tensor[(13, 11, 4), float64]) */;
  %640 = cast(%635, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
  %641 = cast(%var_2289, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %642 = reshape(%640, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %643 = reshape(%641, newshape=[9, 12, 11]) /* ty=Tensor[(9, 12, 11), int8] */;
  %644 = @func_636(%642, %643) /* ty=(Tensor[(9, 12, 11), int8], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(9, 12, 11), bool], Tensor[(6, 10, 3), float64]) */;
  %645 = %639.1;
  %646 = %644.3;
  (%635, %645, %var_2286, %646, %var_2289)
}

def @func_2386() -> (Tensor[(6, 10, 3), float64],) {
  %647 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %648 = %647.1;
  (%648,)
}

def @func_7743() -> Tensor[(6, ?, 10), uint8] {
  %649 = @func_4806() /* ty=(Tensor[(14, 14, 14), float32], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float32], Tensor[(6, ?, 10), uint8], Tensor[(6, 10, 3), bool]) */;
  %649.3
}

def @func_5265() -> (Tensor[(6, 10, 3), uint16],) {
  %650 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %651 = %650.0;
  (%651,)
}

def @func_1120(%var_1074: Tensor[(3, 15, 14), float32]) -> (Tensor[(3, 15, 14), float32], Tensor[(9, 10, 8), float32], Tensor[(720), float32]) {
  %652 = cast(-8.09844f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %653 = cast(%var_1074, dtype="float32") /* ty=Tensor[(3, 15, 14), float32] */;
  %654 = cast(meta[relay.Constant][34] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %655 = cast(meta[relay.Constant][34] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %656 = reshape(%654, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %657 = reshape(%655, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %658 = @func_857(%656, %657) /* ty=(Tensor[(9, 10, 8), float32],) */;
  %659 = power(%652, %653) /* ty=Tensor[(3, 15, 14), float32] */;
  %660 = %658.0;
  (%659, %660, meta[relay.Constant][34] /* ty=Tensor[(720), float32] */)
}

def @func_6045(%var_6032: Tensor[(16, 7, 9), float32]) -> (Tensor[(16, 7, 9), float32], Tensor[(6, 1, 10), float32], Tensor[(16, 7, 9), float64]) {
  %661 = cast(%var_6032, dtype="float32") /* ty=Tensor[(16, 7, 9), float32] */;
  %662 = @func_5785() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %663 = cast(%var_6032, dtype="float64") /* ty=Tensor[(16, 7, 9), float64] */;
  %664 = tan(%661) /* ty=Tensor[(16, 7, 9), float32] */;
  %665 = %662.0;
  %666 = exp(%663) /* ty=Tensor[(16, 7, 9), float64] */;
  (%664, %665, %666)
}

def @func_7868() -> (Tensor[(6, 10, 3), uint8], Tensor[(6, 10, 3), uint16]) {
  %667 = @func_5499() /* ty=(Tensor[(6, 10, 3), uint8], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) */;
  %668 = @func_5265() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %669 = %667.0;
  %670 = %668.0;
  (%669, %670)
}

def @func_5748() -> Tensor[(6, 10, 3), float64] {
  %671 = @func_2670() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) */;
  %671.0
}

def @func_7038() -> (Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) {
  %672 = @func_6666() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %673 = %672.0;
  %674 = @func_4230() /* ty=Tensor[(6, 10, 3), float64] */;
  (%673, %674)
}

def @func_6781() -> (Tensor[(6, 10, 3), float64],) {
  %675 = @func_2405() /* ty=Tensor[(6, 10, 3), float64] */;
  (%675,)
}

def @func_3654() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) {
  %676 = @func_3270() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %677 = @func_2405() /* ty=Tensor[(6, 10, 3), float64] */;
  %678 = %676.0;
  (%677, %678)
}

def @func_3870() -> Tensor[(6, 10, 3), uint16] {
  %679 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %679.0
}

def @func_5668(%var_5653: Tensor[(1728), float32]) -> (Tensor[(6, 10, 3), uint16], Tensor[(12, 12, 12), bool], Tensor[(1728), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) {
  %680 = @func_4428() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), uint16]) */;
  %681 = cast(%var_5653, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %682 = reshape(%681, newshape=[12, 12, 12]) /* ty=Tensor[(12, 12, 12), float32] */;
  %683 = @func_3239(%682) /* ty=(Tensor[(12, 12, 12), bool], Tensor[(12, 12, 12), bool]) */;
  %684 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %685 = %684.0;
  %686 = cast(%685, dtype="float64") /* ty=Tensor[(6, 10, 3), float64] */;
  %687 = reshape(%686, newshape=[6, 10, 3]) /* ty=Tensor[(6, 10, 3), float64] */;
  %688 = @func_2631(%687) /* ty=(Tensor[(286, 2), uint8], Tensor[(1188), int8], Tensor[(6, 10, 3), float32], Tensor[(9, 10, 8), float32], Tensor[(360, 2), float32], Tensor[(6, 70, 10), bool]) */;
  %689 = %680.1;
  %690 = %683.0;
  %691 = %688.1;
  (%689, %690, %var_5653, %685, %691)
}

def @func_4635() -> (Tensor[(6, 10, 3), float32], Tensor[(6, 10, 3), float32], Tensor[(60), float64], Tensor[(6, 10, 3), float32], Tensor[(6, 10, 3), float64]) {
  %692 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %693 = %692.1;
  %694 = cast(%693, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %695 = cast(%693, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %696 = @func_4165() /* ty=(Tensor[(60), float64], Tensor[(6, 10, 3), float64]) */;
  %697 = @func_3107() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) */;
  %698 = @func_3654() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) */;
  %699 = acosh(%694) /* ty=Tensor[(6, 10, 3), float32] */;
  %700 = log10(%695) /* ty=Tensor[(6, 10, 3), float32] */;
  %701 = %696.0;
  %702 = %697.1;
  %703 = %698.0;
  (%699, %700, %701, %702, %703)
}

def @func_6376(%var_6372: float32) -> (Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], float32) {
  %704 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %705 = cast(%var_6372, dtype="float32") /* ty=float32 */;
  %706 = reshape(%705, newshape=[]) /* ty=float32 */;
  %707 = @func_3425(%706) /* ty=(Tensor[(16, 5, 9), float32], Tensor[(6, 10, 3), float64]) */;
  %708 = %704.0;
  %709 = %707.1;
  (%708, %709, %var_6372)
}

def @func_293(%var_277: Tensor[(6, 10, 1), float64]) -> Tensor[(6, 10, 3), float64] {
  %710 = cast(%var_277, dtype="float64") /* ty=Tensor[(6, 10, 1), float64] */;
  %711 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 3), float64] */;
  mod(%710, %711) /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_8047(%var_8032: Tensor[(90), float32], %var_8033: Tensor[(5, 126), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(2, 15, 3), float32], Tensor[(90), float32], Tensor[(5, 126), float32]) {
  %712 = @func_3603() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %713 = cast(%var_8032, dtype="float32") /* ty=Tensor[(90), float32] */;
  %714 = cast(%var_8033, dtype="float32") /* ty=Tensor[(5, 126), float32] */;
  %715 = reshape(%713, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float32] */;
  %716 = reshape(%714, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %717 = @func_4440(%715, %716) /* ty=(Tensor[(2, 15, 3), float32], Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(6, 10, 3), float64]) */;
  %718 = cast(%var_8033, dtype="float32") /* ty=Tensor[(5, 126), float32] */;
  %719 = %712.0;
  %720 = %717.0;
  %721 = atan(%718) /* ty=Tensor[(5, 126), float32] */;
  (%719, %720, %var_8032, %721)
}

def @func_4806() -> (Tensor[(14, 14, 14), float32], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float32], Tensor[(6, ?, 10), uint8], Tensor[(6, 10, 3), bool]) {
  %722 = cast(meta[relay.Constant][36] /* ty=Tensor[(14, 14, 14), float32] */, dtype="float32") /* ty=Tensor[(14, 14, 14), float32] */;
  %723 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %724 = @func_3107() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) */;
  %725 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %726 = %725.0;
  %727 = cast(%726, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
  %728 = log2(%727) /* ty=Tensor[(6, 1, 10), float64] */;
  %729 = cast(%726, dtype="uint8") /* ty=Tensor[(6, 1, 10), uint8] */;
  %730 = shape_of(%728, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%728, dtype="uint8") /* ty=Tensor[(6, 1, 10), uint8] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %733 = @func_3654() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) */;
  %734 = %733.0;
  %735 = @func_4354() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %736 = %735.0;
  %737 = cast(%736, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
  %738 = shape_of(%734, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(%734, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %741 = sigmoid(%722) /* ty=Tensor[(14, 14, 14), float32] */;
  %742 = %723.0;
  %743 = %724.1;
  %744 = add(%731, %732) /* ty=Tensor[(6, ?, 10), uint8] */;
  %745 = less(%739, %740) /* ty=Tensor[(6, 10, 3), bool] */;
  (%741, %742, %743, %744, %745)
}

def @func_2950() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) {
  %746 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %747 = @func_2865() /* ty=Tensor[(6, 10, 3), float64] */;
  %748 = %746.0;
  (%747, %748)
}

def @func_2518() -> (Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) {
  %749 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %750 = %749.0;
  %751 = cast(%750, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
  %752 = cast(meta[relay.Constant][37] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %753 = reshape(%751, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %754 = reshape(%752, newshape=[9, 12, 11]) /* ty=Tensor[(9, 12, 11), int8] */;
  %755 = @func_636(%753, %754) /* ty=(Tensor[(9, 12, 11), int8], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(9, 12, 11), bool], Tensor[(6, 10, 3), float64]) */;
  %756 = %755.7;
  (%750, %756, meta[relay.Constant][37] /* ty=Tensor[(1188), int8] */)
}

def @func_1912(%var_1899: Tensor[(13, 11, 4), uint8], %var_1908: Tensor[(3, 20), float64]) -> (Tensor[(13, 11, 4), bool], Tensor[(630), float32], Tensor[(96), float64], Tensor[(3, 20), float64], Tensor[(13, 11, 4), float64]) {
  %757 = cast(meta[relay.Constant][38] /* ty=Tensor[(13, 11, 4), uint8] */, dtype="bool") /* ty=Tensor[(13, 11, 4), bool] */;
  %758 = shape_of(%var_1899, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%var_1899, dtype="bool") /* ty=Tensor[(13, 11, 4), bool] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %761 = cast(meta[relay.Constant][39] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %762 = cast(%var_1908, dtype="float64") /* ty=Tensor[(3, 20), float64] */;
  %763 = reshape(%761, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float64] */;
  %764 = reshape(%762, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %765 = @func_1773(%763, %764) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(9, 10, 8), float32], Tensor[(70), float64], Tensor[(8, 2, 6), bool], Tensor[(8, 2, 6), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188), int8]) */;
  %766 = cast(meta[relay.Constant][38] /* ty=Tensor[(13, 11, 4), uint8] */, dtype="float64") /* ty=Tensor[(13, 11, 4), float64] */;
  %767 = greater(%759, %760) /* ty=Tensor[(13, 11, 4), bool] */;
  %768 = %765.1;
  %769 = atanh(%766) /* ty=Tensor[(13, 11, 4), float64] */;
  (%767, %768, meta[relay.Constant][39] /* ty=Tensor[(96), float64] */, %var_1908, %769)
}

def @func_3510() -> (Tensor[(6, 10, 3), float32],) {
  %770 = @func_2865() /* ty=Tensor[(6, 10, 3), float64] */;
  %771 = cast(%770, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %772 = asin(%771) /* ty=Tensor[(6, 10, 3), float32] */;
  (%772,)
}

def @func_6224(%var_6207: Tensor[(5, 7, 1), float32]) -> Tensor[(5, 7, 1), float32] {
  %773 = cast(%var_6207, dtype="float32") /* ty=Tensor[(5, 7, 1), float32] */;
  acos(%773) /* ty=Tensor[(5, 7, 1), float32] */
}

def @func_3879() -> Tensor[(6, 10, 3), float64] {
  @func_2865() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_1622(%var_1579: Tensor[(14, 5, 1), float64], %var_1592: Tensor[(720), float32]) -> (Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(14, 5, ?), uint8], Tensor[(14, 5, 1), float64], Tensor[(14, 5, 1), float64]) {
  %774 = cast(%var_1592, dtype="float32") /* ty=Tensor[(720), float32] */;
  %775 = cast(%var_1592, dtype="float32") /* ty=Tensor[(720), float32] */;
  %776 = reshape(%774, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %777 = reshape(%775, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %778 = @func_857(%776, %777) /* ty=(Tensor[(9, 10, 8), float32],) */;
  %779 = cast(%var_1579, dtype="float64") /* ty=Tensor[(14, 5, 1), float64] */;
  %780 = exp(%779) /* ty=Tensor[(14, 5, 1), float64] */;
  %781 = cast(%780, dtype="float32") /* ty=Tensor[(14, 5, 1), float32] */;
  %782 = log(%781) /* ty=Tensor[(14, 5, 1), float32] */;
  %783 = cast(%780, dtype="uint8") /* ty=Tensor[(14, 5, 1), uint8] */;
  %784 = shape_of(%782, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%782, dtype="uint8") /* ty=Tensor[(14, 5, 1), uint8] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %787 = cast(%782, dtype="float64") /* ty=Tensor[(14, 5, 1), float64] */;
  %788 = cast(%780, dtype="float64") /* ty=Tensor[(14, 5, 1), float64] */;
  %789 = %778.0;
  %790 = bitwise_and(%785, %786) /* ty=Tensor[(14, 5, ?), uint8] */;
  %791 = sinh(%787) /* ty=Tensor[(14, 5, 1), float64] */;
  %792 = asinh(%788) /* ty=Tensor[(14, 5, 1), float64] */;
  (%789, %var_1592, %790, %791, %792)
}

def @func_8357() -> Tensor[(6, 1, 10), float32] {
  %793 = @func_5499() /* ty=(Tensor[(6, 10, 3), uint8], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) */;
  %793.1
}

def @func_3977() -> (Tensor[(6, 13, 10), bool], Tensor[(6, 10, 3), uint16]) {
  %794 = @func_2974() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %795 = %794.0;
  %796 = cast(%795, dtype="bool") /* ty=Tensor[(6, 1, 10), bool] */;
  %797 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 13, 10), float32] */, dtype="bool") /* ty=Tensor[(6, 13, 10), bool] */;
  %798 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %799 = logical_or(%796, %797) /* ty=Tensor[(6, 13, 10), bool] */;
  %800 = %798.0;
  (%799, %800)
}

def @func_2631(%var_2603: Tensor[(6, 10, 3), float64]) -> (Tensor[(286, 2), uint8], Tensor[(1188), int8], Tensor[(6, 10, 3), float32], Tensor[(9, 10, 8), float32], Tensor[(360, 2), float32], Tensor[(6, 70, 10), bool]) {
  %801 = cast(meta[relay.Constant][41] /* ty=Tensor[(286, 2), uint8] */, dtype="uint8") /* ty=Tensor[(286, 2), uint8] */;
  %802 = cast(meta[relay.Constant][42] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %803 = reshape(%801, newshape=[572]) /* ty=Tensor[(572), uint8] */;
  %804 = reshape(%802, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %805 = @func_2292(%803, %804) /* ty=(Tensor[(6, 1, 10), float32], Tensor[(630), float32], Tensor[(572), uint8], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */;
  %806 = %805.3;
  %807 = cast(%var_2603, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %808 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(%806, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %811 = cast(meta[relay.Constant][43] /* ty=Tensor[(70, 1), float64] */, dtype="float64") /* ty=Tensor[(70, 1), float64] */;
  %812 = cast(meta[relay.Constant][44] /* ty=Tensor[(360, 2), float32] */, dtype="float32") /* ty=Tensor[(360, 2), float32] */;
  %813 = reshape(%811, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), float64] */;
  %814 = reshape(%812, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %815 = @func_1622(%813, %814) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(14, 5, ?), uint8], Tensor[(14, 5, 1), float64], Tensor[(14, 5, 1), float64]) */;
  %816 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %817 = %816.0;
  %818 = cast(meta[relay.Constant][43] /* ty=Tensor[(70, 1), float64] */, dtype="bool") /* ty=Tensor[(70, 1), bool] */;
  %819 = cast(%817, dtype="bool") /* ty=Tensor[(6, 1, 10), bool] */;
  %820 = power(%809, %810) /* ty=Tensor[(6, 10, 3), float32] */;
  %821 = %815.0;
  %822 = logical_or(%818, %819) /* ty=Tensor[(6, 70, 10), bool] */;
  (meta[relay.Constant][41] /* ty=Tensor[(286, 2), uint8] */, meta[relay.Constant][42] /* ty=Tensor[(1188), int8] */, %820, %821, meta[relay.Constant][44] /* ty=Tensor[(360, 2), float32] */, %822)
}

def @func_4354() -> (Tensor[(6, 10, 3), float64],) {
  %823 = @func_3603() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %824 = %823.0;
  (%824,)
}

def @func_6967() -> Tensor[(6, 10, 3), float64] {
  %825 = @func_4354() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %825.0
}

def @func_3684() -> (Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) {
  %826 = @func_2518() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */;
  %827 = @func_2986() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %828 = %826.0;
  %829 = %827.0;
  (%828, %829)
}

def @func_8343(%var_8324: Tensor[(6, 10, 3), float64]) -> (Tensor[(6, 10, 3), float32], Tensor[(6, 10, 3), uint16]) {
  %830 = @func_5781() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %831 = %830.0;
  %832 = cast(%var_8324, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %833 = shape_of(%831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %834 = cast(%831, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %836 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %837 = divide(%834, %835) /* ty=Tensor[(6, 10, 3), float32] */;
  %838 = %836.0;
  (%837, %838)
}

def @func_2902(%var_2879: Tensor[(6, 10, 3), uint16]) -> (Tensor[(6, 10, 3), bool], Tensor[(720), float32], Tensor[(5, 126), float32], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188, 1), int8]) {
  %839 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %840 = %839.0;
  %841 = cast(%var_2879, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
  %842 = shape_of(%840, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(%840, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %845 = cast(meta[relay.Constant][45] /* ty=Tensor[(5, 126), float32] */, dtype="float32") /* ty=Tensor[(5, 126), float32] */;
  %846 = reshape(%845, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float32] */;
  %847 = @func_1120(%846) /* ty=(Tensor[(3, 15, 14), float32], Tensor[(9, 10, 8), float32], Tensor[(720), float32]) */;
  %848 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %849 = cast(meta[relay.Constant][46] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %850 = cast(meta[relay.Constant][47] /* ty=Tensor[(1188, 1), int8] */, dtype="int8") /* ty=Tensor[(1188, 1), int8] */;
  %851 = reshape(%849, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %852 = reshape(%850, newshape=[9, 12, 11]) /* ty=Tensor[(9, 12, 11), int8] */;
  %853 = @func_636(%851, %852) /* ty=(Tensor[(9, 12, 11), int8], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(9, 12, 11), bool], Tensor[(6, 10, 3), float64]) */;
  %854 = not_equal(%843, %844) /* ty=Tensor[(6, 10, 3), bool] */;
  %855 = %847.2;
  %856 = %848.0;
  %857 = %853.1;
  (%854, %855, meta[relay.Constant][45] /* ty=Tensor[(5, 126), float32] */, %856, %857, meta[relay.Constant][46] /* ty=Tensor[(60), float64] */, meta[relay.Constant][47] /* ty=Tensor[(1188, 1), int8] */)
}

def @func_4589(%var_4553: float32, %var_4554: Tensor[(1, 6, 10), float32]) -> (Tensor[(1, 6, 10), uint8], Tensor[(6, 10, 3), float64]) {
  %858 = cast(%var_4553, dtype="float32") /* ty=float32 */;
  %859 = cast(%var_4554, dtype="float32") /* ty=Tensor[(1, 6, 10), float32] */;
  %860 = divide(%858, %859) /* ty=Tensor[(1, 6, 10), float32] */;
  %861 = cast(%860, dtype="uint8") /* ty=Tensor[(1, 6, 10), uint8] */;
  %862 = cast(%var_4553, dtype="uint8") /* ty=uint8 */;
  %863 = @func_2518() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */;
  %864 = bitwise_xor(%861, %862) /* ty=Tensor[(1, 6, 10), uint8] */;
  %865 = %863.1;
  (%864, %865)
}

def @func_5160() -> (Tensor[(6, 10, 3), bool], Tensor[(60), float64]) {
  %866 = @func_5069() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %867 = %866.0;
  %868 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 10, 3), float64] */, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
  %869 = shape_of(%867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %870 = cast(%867, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %872 = @func_2670() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) */;
  %873 = equal(%870, %871) /* ty=Tensor[(6, 10, 3), bool] */;
  %874 = %872.3;
  (%873, %874)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5806(%var_5794: Tensor[(11, 52), uint8]) -> (Tensor[(11, 52), int8], Tensor[(6, 10, 3), float64]) {
  %0 = @func_4968() /* ty=Tensor[(11, 52), uint8] */;
  %1 = cast(%var_5794, dtype="int8") /* ty=Tensor[(11, 52), int8] */;
  %2 = shape_of(%0, dtype="int32") /* ty=Tensor[(2), int32] */;
  %3 = cast(%0, dtype="int8") /* ty=Tensor[(11, 52), int8] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %5 = bitwise_xor(%3, %4) /* ty=Tensor[(11, 52), int8] */;
  %6 = @func_5748() /* ty=Tensor[(6, 10, 3), float64] */;
  (%5, %6)
}

def @func_5685() -> (Tensor[(6, 10, 3), uint16],) {
  @func_5683() /* ty=(Tensor[(6, 10, 3), uint16],) */
}

def @func_3323() -> Tensor[(6, 10, 3), uint16] {
  %8 = fn () -> Tensor[(6, 10, 3), uint16] {
    %7 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
    %7.0
  };
  %8() /* ty=Tensor[(6, 10, 3), uint16] */
}

def @func_6908(%var_6906: Tensor[(8, 30), float32], %var_6907: Tensor[(12, 60), float32]) -> (Tensor[(6, 10, 3), uint16], Tensor[(6, 4, 10), float32], Tensor[(8, 30), float32], Tensor[(12, 60), int8]) {
  %21 = fn (%var_6894: Tensor[(8, 30), float32], %var_6900: Tensor[(12, 60), float32]) -> (Tensor[(6, 10, 3), uint16], Tensor[(6, 4, 10), float32], Tensor[(8, 30), float32], Tensor[(12, 60), int8]) {
    %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 60), float32] */, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
    %10 = cast(%var_6894, dtype="float32") /* ty=Tensor[(8, 30), float32] */;
    %11 = reshape(%9, newshape=[720]) /* ty=Tensor[(720), float32] */;
    %12 = reshape(%10, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %13 = @func_4928(%11, %12) /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 4, 10), float32], Tensor[(720), float32], Tensor[(240), float32]) */;
    %14 = cast(%var_6900, dtype="int8") /* ty=Tensor[(12, 60), int8] */;
    %15 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(12, 60), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 60), float32] */, dtype="int8") /* ty=Tensor[(12, 60), int8] */;
    %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %18 = @func_6475() /* ty=Tensor[(6, 10, 3), uint16] */;
    %19 = %13.1;
    %20 = minimum(%16, %17) /* ty=Tensor[(12, 60), int8] */;
    (%18, %19, %var_6894, %20)
  };
  %21(%var_6906, %var_6907) /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 4, 10), float32], Tensor[(8, 30), float32], Tensor[(12, 60), int8]) */
}

def @func_3512() -> (Tensor[(6, 10, 3), float32],) {
  @func_3510() /* ty=(Tensor[(6, 10, 3), float32],) */
}

def @func_6302() -> (Tensor[(6, 10, 3), float64],) {
  @func_6300() /* ty=(Tensor[(6, 10, 3), float64],) */
}

def @func_3977() -> (Tensor[(6, 13, 10), bool], Tensor[(6, 10, 3), uint16]) {
  %22 = @func_2974() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %23 = %22.0;
  %24 = cast(%23, dtype="bool") /* ty=Tensor[(6, 1, 10), bool] */;
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 13, 10), float32] */, dtype="bool") /* ty=Tensor[(6, 13, 10), bool] */;
  %26 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %27 = logical_or(%24, %25) /* ty=Tensor[(6, 13, 10), bool] */;
  %28 = %26.0;
  (%27, %28)
}

def @func_3241(%var_3240: Tensor[(12, 12, 12), float32]) -> (Tensor[(12, 12, 12), bool], Tensor[(12, 12, 12), bool]) {
  %46 = fn (%var_3215: Tensor[(12, 12, 12), float32]) -> (Tensor[(12, 12, 12), bool], Tensor[(12, 12, 12), bool]) {
    %29 = cast(meta[relay.Constant][2] /* ty=Tensor[(12, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 12, 12), float32] */;
    %30 = cos(%29) /* ty=Tensor[(12, 12, 12), float32] */;
    %31 = cast(meta[relay.Constant][2] /* ty=Tensor[(12, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 12, 12), float32] */;
    %32 = shape_of(%var_3215, dtype="int32") /* ty=Tensor[(3), int32] */;
    %33 = cast(%var_3215, dtype="float32") /* ty=Tensor[(12, 12, 12), float32] */;
    %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %35 = floor_divide(%33, %34) /* ty=Tensor[(12, 12, 12), float32] */;
    %36 = cast(%35, dtype="bool") /* ty=Tensor[(12, 12, 12), bool] */;
    %37 = shape_of(%30, dtype="int32") /* ty=Tensor[(3), int32] */;
    %38 = cast(%30, dtype="bool") /* ty=Tensor[(12, 12, 12), bool] */;
    %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %40 = cast(%35, dtype="bool") /* ty=Tensor[(12, 12, 12), bool] */;
    %41 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(12, 12, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(12, 12, 12), float32] */, dtype="bool") /* ty=Tensor[(12, 12, 12), bool] */;
    %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %44 = not_equal(%38, %39) /* ty=Tensor[(12, 12, 12), bool] */;
    %45 = logical_and(%42, %43) /* ty=Tensor[(12, 12, 12), bool] */;
    (%44, %45)
  };
  %46(%var_3240) /* ty=(Tensor[(12, 12, 12), bool], Tensor[(12, 12, 12), bool]) */
}

def @func_5253() -> (Tensor[(6, 10, 3), float64],) {
  @func_5251() /* ty=(Tensor[(6, 10, 3), float64],) */
}

def @func_5948() -> (Tensor[(6, 1, 10), float64], Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), bool], Tensor[(6, 1, 10), float64]) {
  %62 = fn () -> (Tensor[(6, 1, 10), float64], Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), bool], Tensor[(6, 1, 10), float64]) {
    %47 = @func_4960() /* ty=(Tensor[(6, 1, 10), float64],) */;
    %48 = %47.0;
    %49 = cast(%48, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
    %50 = cast(%48, dtype="float32") /* ty=Tensor[(6, 1, 10), float32] */;
    %51 = @func_5251() /* ty=(Tensor[(6, 10, 3), float64],) */;
    %52 = %51.0;
    %53 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 10, 3), float64] */, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
    %54 = shape_of(%52, dtype="int32") /* ty=Tensor[(3), int32] */;
    %55 = cast(%52, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
    %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %57 = @func_4960() /* ty=(Tensor[(6, 1, 10), float64],) */;
    %58 = sqrt(%49) /* ty=Tensor[(6, 1, 10), float64] */;
    %59 = sinh(%50) /* ty=Tensor[(6, 1, 10), float32] */;
    %60 = greater(%55, %56) /* ty=Tensor[(6, 10, 3), bool] */;
    %61 = %57.0;
    (%58, %59, %60, %61)
  };
  %62() /* ty=(Tensor[(6, 1, 10), float64], Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), bool], Tensor[(6, 1, 10), float64]) */
}

def @func_7743() -> Tensor[(6, ?, 10), uint8] {
  %63 = @func_4806() /* ty=(Tensor[(14, 14, 14), float32], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float32], Tensor[(6, ?, 10), uint8], Tensor[(6, 10, 3), bool]) */;
  %63.3
}

def @func_8316(%var_8314: Tensor[(600), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(600), int8], Tensor[(6, 1, 10), uint8]) {
  @func_8313(%var_8314) /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(600), int8], Tensor[(6, 1, 10), uint8]) */
}

def @func_3603() -> (Tensor[(6, 10, 3), float64],) {
  %64 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %65 = %64.0;
  (%65,)
}

def @func_7128() -> (Tensor[(6, 10, 3), uint16],) {
  %66 = @func_3870() /* ty=Tensor[(6, 10, 3), uint16] */;
  (%66,)
}

def @func_5401(%var_5399: Tensor[(900), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32], Tensor[(6, 1, 10), float32], Tensor[(6, 15, 10), int8], Tensor[(900), float32]) {
  @func_5398(%var_5399) /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32], Tensor[(6, 1, 10), float32], Tensor[(6, 15, 10), int8], Tensor[(900), float32]) */
}

def @func_8178(%var_8141: int32, %var_8168: Tensor[(600), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 1, 10), float32], int32, Tensor[(60, 12), int32], Tensor[(6, 3, 10), float32], Tensor[(600), float32]) {
  %67 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %68 = cast(meta[relay.Constant][4] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %69 = reshape(%68, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %70 = @func_6110(%69) /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64], Tensor[(6, ?, 10), bool], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) */;
  %71 = cast(%var_8141, dtype="int32") /* ty=int32 */;
  %72 = cast(meta[relay.Constant][5] /* ty=Tensor[(60, 12), int32] */, dtype="int32") /* ty=Tensor[(60, 12), int32] */;
  %73 = reshape(%71, newshape=[]) /* ty=int32 */;
  %74 = reshape(%72, newshape=[12, 15, 4]) /* ty=Tensor[(12, 15, 4), int32] */;
  %75 = @func_5449(%73, %74) /* ty=(Tensor[(12, 15, 4), int32], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) */;
  %76 = cast(%var_8168, dtype="float32") /* ty=Tensor[(600), float32] */;
  %77 = %67.0;
  %78 = cast(%77, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %79 = reshape(%76, newshape=[6, 10, 10]) /* ty=Tensor[(6, 10, 10), float32] */;
  %80 = reshape(%78, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float32] */;
  %81 = @func_3927(%79, %80) /* ty=(Tensor[(6, 10, 10), bool], Tensor[(6, 3, 10), float32], Tensor[(3, 20), float64]) */;
  %82 = %70.0;
  %83 = %75.2;
  %84 = %81.1;
  (%77, %82, meta[relay.Constant][4] /* ty=Tensor[(60), float64] */, %83, %var_8141, meta[relay.Constant][5] /* ty=Tensor[(60, 12), int32] */, %84, %var_8168)
}

def @func_8446() -> (Tensor[(6, 10, 3), float64], Tensor[(11, 52), uint8], Tensor[(6, 10, 3), uint8], Tensor[(6, 10, 3), float64], Tensor[(60), float64]) {
  %85 = @func_5499() /* ty=(Tensor[(6, 10, 3), uint8], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) */;
  %86 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %87 = @func_5160() /* ty=(Tensor[(6, 10, 3), bool], Tensor[(60), float64]) */;
  %88 = @func_6329() /* ty=Tensor[(6, 10, 3), float64] */;
  %89 = @func_4968() /* ty=Tensor[(11, 52), uint8] */;
  %90 = %85.0;
  %91 = %86.0;
  %92 = %87.1;
  (%88, %89, %90, %91, %92)
}

def @func_3655() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) {
  %96 = fn () -> (Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) {
    %93 = @func_3270() /* ty=(Tensor[(6, 1, 10), float32],) */;
    %94 = @func_2405() /* ty=Tensor[(6, 10, 3), float64] */;
    %95 = %93.0;
    (%94, %95)
  };
  %96() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) */
}

def @func_7816() -> (Tensor[(6, 10, 3), float64],) {
  %99 = fn () -> (Tensor[(6, 10, 3), float64],) {
    %97 = @func_7038() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) */;
    %98 = %97.1;
    (%98,)
  };
  %99() /* ty=(Tensor[(6, 10, 3), float64],) */
}

def @func_4260() -> Tensor[(6, 10, 3), float64] {
  @func_3879() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_2350(%var_2346: Tensor[(16, 3, 3), float32], %var_2347: Tensor[(14, 5), float64], %var_2348: Tensor[(720), float32], %var_2349: Tensor[(4, 24), float64]) -> (Tensor[(16, 3, 3), bool], Tensor[(14, 5, 1), float64], Tensor[(14, 5), float64], Tensor[(720), float32], Tensor[(16, 3, 3), bool], Tensor[(1188), int8], Tensor[(4, 24), float64], Tensor[(60), float64]) {
  %126 = fn (%var_2303: Tensor[(16, 3, 3), float32], %var_2325: Tensor[(14, 5), float64], %var_2326: Tensor[(720), float32], %var_2338: Tensor[(4, 24), float64]) -> (Tensor[(16, 3, 3), bool], Tensor[(14, 5, 1), float64], Tensor[(14, 5), float64], Tensor[(720), float32], Tensor[(16, 3, 3), bool], Tensor[(1188), int8], Tensor[(4, 24), float64], Tensor[(60), float64]) {
    %100 = cast(%var_2303, dtype="float64") /* ty=Tensor[(16, 3, 3), float64] */;
    %101 = acos(%100) /* ty=Tensor[(16, 3, 3), float64] */;
    %102 = cast(%var_2303, dtype="float32") /* ty=Tensor[(16, 3, 3), float32] */;
    %103 = atanh(%102) /* ty=Tensor[(16, 3, 3), float32] */;
    %104 = cast(%103, dtype="bool") /* ty=Tensor[(16, 3, 3), bool] */;
    %105 = shape_of(%101, dtype="int32") /* ty=Tensor[(3), int32] */;
    %106 = cast(%101, dtype="bool") /* ty=Tensor[(16, 3, 3), bool] */;
    %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %108 = cast(%var_2325, dtype="float64") /* ty=Tensor[(14, 5), float64] */;
    %109 = cast(%var_2326, dtype="float32") /* ty=Tensor[(720), float32] */;
    %110 = reshape(%108, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), float64] */;
    %111 = reshape(%109, newshape=[720]) /* ty=Tensor[(720), float32] */;
    %112 = @func_1622(%110, %111) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(14, 5, ?), uint8], Tensor[(14, 5, 1), float64], Tensor[(14, 5, 1), float64]) */;
    %113 = cast(%103, dtype="bool") /* ty=Tensor[(16, 3, 3), bool] */;
    %114 = shape_of(%var_2303, dtype="int32") /* ty=Tensor[(3), int32] */;
    %115 = cast(%var_2303, dtype="bool") /* ty=Tensor[(16, 3, 3), bool] */;
    %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %117 = cast(%var_2338, dtype="float64") /* ty=Tensor[(4, 24), float64] */;
    %118 = cast(meta[relay.Constant][6] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %119 = reshape(%117, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float64] */;
    %120 = reshape(%118, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %121 = @func_1773(%119, %120) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(9, 10, 8), float32], Tensor[(70), float64], Tensor[(8, 2, 6), bool], Tensor[(8, 2, 6), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188), int8]) */;
    %122 = logical_and(%106, %107) /* ty=Tensor[(16, 3, 3), bool] */;
    %123 = %112.3;
    %124 = equal(%115, %116) /* ty=Tensor[(16, 3, 3), bool] */;
    %125 = %121.8;
    (%122, %123, %var_2325, %var_2326, %124, %125, %var_2338, meta[relay.Constant][6] /* ty=Tensor[(60), float64] */)
  };
  %126(%var_2346, %var_2347, %var_2348, %var_2349) /* ty=(Tensor[(16, 3, 3), bool], Tensor[(14, 5, 1), float64], Tensor[(14, 5), float64], Tensor[(720), float32], Tensor[(16, 3, 3), bool], Tensor[(1188), int8], Tensor[(4, 24), float64], Tensor[(60), float64]) */
}

def @func_4636() -> (Tensor[(6, 10, 3), float32], Tensor[(6, 10, 3), float32], Tensor[(60), float64], Tensor[(6, 10, 3), float32], Tensor[(6, 10, 3), float64]) {
  %139 = fn () -> (Tensor[(6, 10, 3), float32], Tensor[(6, 10, 3), float32], Tensor[(60), float64], Tensor[(6, 10, 3), float32], Tensor[(6, 10, 3), float64]) {
    %127 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
    %128 = %127.1;
    %129 = cast(%128, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
    %130 = cast(%128, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
    %131 = @func_4165() /* ty=(Tensor[(60), float64], Tensor[(6, 10, 3), float64]) */;
    %132 = @func_3107() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) */;
    %133 = @func_3654() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) */;
    %134 = acosh(%129) /* ty=Tensor[(6, 10, 3), float32] */;
    %135 = log10(%130) /* ty=Tensor[(6, 10, 3), float32] */;
    %136 = %131.0;
    %137 = %132.1;
    %138 = %133.0;
    (%134, %135, %136, %137, %138)
  };
  %139() /* ty=(Tensor[(6, 10, 3), float32], Tensor[(6, 10, 3), float32], Tensor[(60), float64], Tensor[(6, 10, 3), float32], Tensor[(6, 10, 3), float64]) */
}

def @main() -> (Tensor[(6, 1, 10), float32],) {
  %140 = @func_4961() /* ty=(Tensor[(6, 1, 10), float64],) */;
  %141 = %140.0;
  %142 = cast(%141, dtype="float32") /* ty=Tensor[(6, 1, 10), float32] */;
  %143 = sin(%142) /* ty=Tensor[(6, 1, 10), float32] */;
  (%143,)
}

def @func_3581() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) {
  @func_3579() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) */
}

def @func_3643() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) {
  %148 = fn () -> (Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) {
    %144 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
    %145 = @func_2518() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */;
    %146 = %144.0;
    %147 = %145.0;
    (%146, %147)
  };
  %148() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) */
}

def @func_295(%var_294: Tensor[(6, 10, 1), float64]) -> Tensor[(6, 10, 3), float64] {
  %151 = fn (%var_277: Tensor[(6, 10, 1), float64]) -> Tensor[(6, 10, 3), float64] {
    %149 = cast(%var_277, dtype="float64") /* ty=Tensor[(6, 10, 1), float64] */;
    %150 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 3), float64] */;
    mod(%149, %150) /* ty=Tensor[(6, 10, 3), float64] */
  };
  %151(%var_294) /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_2217() -> (Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) {
  %152 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 1, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 1, 10), float32] */;
  %153 = cos(%152) /* ty=Tensor[(6, 1, 10), float32] */;
  %154 = cast(%153, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
  %155 = reshape(%154, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %156 = @func_293(%155) /* ty=Tensor[(6, 10, 3), float64] */;
  (%153, %156)
}

def @func_3798(%var_3796: Tensor[(720), float32], %var_3797: Tensor[(6, 4, 10), float32]) -> (Tensor[(14, 5, ?), uint8], Tensor[(70), float64], Tensor[(720), float32], Tensor[(6, 4, 10), float32]) {
  @func_3794(%var_3796, %var_3797) /* ty=(Tensor[(14, 5, ?), uint8], Tensor[(70), float64], Tensor[(720), float32], Tensor[(6, 4, 10), float32]) */
}

def @func_5020(%var_5001: Tensor[(6, 13, 11), float64], %var_5002: Tensor[(6, 13, 11), float64], %var_5008: Tensor[(96), float64], %var_5009: Tensor[(15, 4), float64]) -> (Tensor[(6, 13, 11), float64], Tensor[(60), float64], Tensor[(96), float64], Tensor[(15, 4), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float32]) {
  %157 = cast(%var_5002, dtype="float64") /* ty=Tensor[(6, 13, 11), float64] */;
  %158 = shape_of(%var_5001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %159 = cast(%var_5001, dtype="float64") /* ty=Tensor[(6, 13, 11), float64] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %161 = cast(%var_5008, dtype="float64") /* ty=Tensor[(96), float64] */;
  %162 = cast(%var_5009, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
  %163 = reshape(%161, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float64] */;
  %164 = reshape(%162, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %165 = @func_1773(%163, %164) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(9, 10, 8), float32], Tensor[(70), float64], Tensor[(8, 2, 6), bool], Tensor[(8, 2, 6), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188), int8]) */;
  %166 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %167 = power(%159, %160) /* ty=Tensor[(6, 13, 11), float64] */;
  %168 = %165.7;
  %169 = %166.0;
  %170 = @func_3725() /* ty=Tensor[(6, 10, 3), float32] */;
  (%167, %168, %var_5008, %var_5009, %169, %170)
}

def @func_5668(%var_5653: Tensor[(1728), float32]) -> (Tensor[(6, 10, 3), uint16], Tensor[(12, 12, 12), bool], Tensor[(1728), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) {
  %171 = @func_4428() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), uint16]) */;
  %172 = cast(%var_5653, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %173 = reshape(%172, newshape=[12, 12, 12]) /* ty=Tensor[(12, 12, 12), float32] */;
  %174 = @func_3239(%173) /* ty=(Tensor[(12, 12, 12), bool], Tensor[(12, 12, 12), bool]) */;
  %175 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %176 = %175.0;
  %177 = cast(%176, dtype="float64") /* ty=Tensor[(6, 10, 3), float64] */;
  %178 = reshape(%177, newshape=[6, 10, 3]) /* ty=Tensor[(6, 10, 3), float64] */;
  %179 = @func_2631(%178) /* ty=(Tensor[(286, 2), uint8], Tensor[(1188), int8], Tensor[(6, 10, 3), float32], Tensor[(9, 10, 8), float32], Tensor[(360, 2), float32], Tensor[(6, 70, 10), bool]) */;
  %180 = %171.1;
  %181 = %174.0;
  %182 = %179.1;
  (%180, %181, %var_5653, %176, %182)
}

def @func_2407() -> Tensor[(6, 10, 3), float64] {
  @func_2405() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_1777(%var_1775: Tensor[(8, 2, 6), float64], %var_1776: Tensor[(60), float64]) -> (Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(9, 10, 8), float32], Tensor[(70), float64], Tensor[(8, 2, 6), bool], Tensor[(8, 2, 6), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188), int8]) {
  @func_1773(%var_1775, %var_1776) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(9, 10, 8), float32], Tensor[(70), float64], Tensor[(8, 2, 6), bool], Tensor[(8, 2, 6), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188), int8]) */
}

def @func_3307() -> (Tensor[(6, 1, 10), float32],) {
  @func_3305() /* ty=(Tensor[(6, 1, 10), float32],) */
}

def @func_6577() -> (Tensor[(6, 10, 3), uint16],) {
  @func_6575() /* ty=(Tensor[(6, 10, 3), uint16],) */
}

def @func_5161() -> (Tensor[(6, 10, 3), bool], Tensor[(60), float64]) {
  %192 = fn () -> (Tensor[(6, 10, 3), bool], Tensor[(60), float64]) {
    %183 = @func_5069() /* ty=(Tensor[(6, 10, 3), float64],) */;
    %184 = %183.0;
    %185 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 10, 3), float64] */, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
    %186 = shape_of(%184, dtype="int32") /* ty=Tensor[(3), int32] */;
    %187 = cast(%184, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
    %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %189 = @func_2670() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) */;
    %190 = equal(%187, %188) /* ty=Tensor[(6, 10, 3), bool] */;
    %191 = %189.3;
    (%190, %191)
  };
  %192() /* ty=(Tensor[(6, 10, 3), bool], Tensor[(60), float64]) */
}

def @func_6667() -> (Tensor[(6, 10, 3), uint16],) {
  %195 = fn () -> (Tensor[(6, 10, 3), uint16],) {
    %193 = @func_4428() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), uint16]) */;
    %194 = %193.1;
    (%194,)
  };
  %195() /* ty=(Tensor[(6, 10, 3), uint16],) */
}

def @func_3579() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) {
  %196 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %197 = @func_3346() /* ty=Tensor[(6, 10, 3), float64] */;
  %198 = %196.1;
  (%197, %198)
}

def @func_7208() -> (Tensor[(1, 2, 3), uint8],) {
  %202 = fn () -> (Tensor[(1, 2, 3), uint8],) {
    %199 = cast(meta[relay.Constant][10] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %200 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 2, 3), uint8] */, dtype="uint8") /* ty=Tensor[(1, 2, 3), uint8] */;
    %201 = left_shift(%199, %200) /* ty=Tensor[(1, 2, 3), uint8] */;
    (%201,)
  };
  %202() /* ty=(Tensor[(1, 2, 3), uint8],) */
}

def @func_3492(%var_3490: Tensor[(5, 16, 12), int16]) -> (Tensor[(5, 16, 12), int16], Tensor[(6, 10, 3), float64]) {
  @func_3489(%var_3490) /* ty=(Tensor[(5, 16, 12), int16], Tensor[(6, 10, 3), float64]) */
}

def @func_3270() -> (Tensor[(6, 1, 10), float32],) {
  %203 = @func_2986() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %204 = %203.0;
  %205 = cast(%204, dtype="float32") /* ty=Tensor[(6, 1, 10), float32] */;
  %206 = log(%205) /* ty=Tensor[(6, 1, 10), float32] */;
  (%206,)
}

def @func_860(%var_858: Tensor[(9, 10, 8), float32], %var_859: Tensor[(9, 10, 8), float32]) -> (Tensor[(9, 10, 8), float32],) {
  %212 = fn (%var_852: Tensor[(9, 10, 8), float32], %var_853: Tensor[(9, 10, 8), float32]) -> (Tensor[(9, 10, 8), float32],) {
    %207 = cast(%var_853, dtype="float32") /* ty=Tensor[(9, 10, 8), float32] */;
    %208 = shape_of(%var_852, dtype="int32") /* ty=Tensor[(3), int32] */;
    %209 = cast(%var_852, dtype="float32") /* ty=Tensor[(9, 10, 8), float32] */;
    %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %211 = divide(%209, %210) /* ty=Tensor[(9, 10, 8), float32] */;
    (%211,)
  };
  %212(%var_858, %var_859) /* ty=(Tensor[(9, 10, 8), float32],) */
}

def @func_6781() -> (Tensor[(6, 10, 3), float64],) {
  %213 = @func_2405() /* ty=Tensor[(6, 10, 3), float64] */;
  (%213,)
}

def @func_8050(%var_8048: Tensor[(90), float32], %var_8049: Tensor[(5, 126), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(2, 15, 3), float32], Tensor[(90), float32], Tensor[(5, 126), float32]) {
  %224 = fn (%var_8032: Tensor[(90), float32], %var_8033: Tensor[(5, 126), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(2, 15, 3), float32], Tensor[(90), float32], Tensor[(5, 126), float32]) {
    %214 = @func_3603() /* ty=(Tensor[(6, 10, 3), float64],) */;
    %215 = cast(%var_8032, dtype="float32") /* ty=Tensor[(90), float32] */;
    %216 = cast(%var_8033, dtype="float32") /* ty=Tensor[(5, 126), float32] */;
    %217 = reshape(%215, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float32] */;
    %218 = reshape(%216, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %219 = @func_4440(%217, %218) /* ty=(Tensor[(2, 15, 3), float32], Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(6, 10, 3), float64]) */;
    %220 = cast(%var_8033, dtype="float32") /* ty=Tensor[(5, 126), float32] */;
    %221 = %214.0;
    %222 = %219.0;
    %223 = atan(%220) /* ty=Tensor[(5, 126), float32] */;
    (%221, %222, %var_8032, %223)
  };
  %224(%var_8048, %var_8049) /* ty=(Tensor[(6, 10, 3), float64], Tensor[(2, 15, 3), float32], Tensor[(90), float32], Tensor[(5, 126), float32]) */
}

def @func_5671(%var_5669: Tensor[(1728), float32]) -> (Tensor[(6, 10, 3), uint16], Tensor[(12, 12, 12), bool], Tensor[(1728), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) {
  @func_5668(%var_5669) /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(12, 12, 12), bool], Tensor[(1728), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */
}

def @func_6171() -> (Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) {
  %229 = fn () -> (Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) {
    %225 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
    %226 = @func_5781() /* ty=(Tensor[(6, 10, 3), float64],) */;
    %227 = %225.0;
    %228 = %226.0;
    (%227, %228)
  };
  %229() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */
}

def @func_7897() -> Tensor[(6, 10, 3), float64] {
  @func_5748() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_5782() -> (Tensor[(6, 10, 3), float64],) {
  %231 = fn () -> (Tensor[(6, 10, 3), float64],) {
    %230 = @func_3346() /* ty=Tensor[(6, 10, 3), float64] */;
    (%230,)
  };
  %231() /* ty=(Tensor[(6, 10, 3), float64],) */
}

def @func_7712() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) {
  %232 = @func_5781() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %233 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %234 = %232.0;
  %235 = %233.0;
  %236 = @func_3879() /* ty=Tensor[(6, 10, 3), float64] */;
  (%234, %235, %236)
}

def @func_8101() -> (Tensor[(6, 1, 10), float32], Tensor[(1188), int16], Tensor[(6, 10, 3), float64]) {
  @func_8099() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(1188), int16], Tensor[(6, 10, 3), float64]) */
}

def @func_2836() -> (Tensor[(6, 10, 3), uint16],) {
  %237 = @func_2518() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */;
  %238 = %237.1;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %240 = rsqrt(%239) /* ty=Tensor[(6, 10, 3), float32] */;
  %241 = cast(%238, dtype="uint16") /* ty=Tensor[(6, 10, 3), uint16] */;
  %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%240, dtype="uint16") /* ty=Tensor[(6, 10, 3), uint16] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %245 = bitwise_and(%243, %244) /* ty=Tensor[(6, 10, 3), uint16] */;
  (%245,)
}

def @func_7506(%var_7504: Tensor[(720), float32], %var_7505: Tensor[(143, 4), uint8]) -> (Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(30, 2), float64], Tensor[(1188), float32], Tensor[(13, 11, 4), float64]) {
  %272 = fn (%var_7473: Tensor[(720), float32], %var_7476: Tensor[(143, 4), uint8]) -> (Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(30, 2), float64], Tensor[(1188), float32], Tensor[(13, 11, 4), float64]) {
    %246 = cast(%var_7473, dtype="float32") /* ty=Tensor[(720), float32] */;
    %247 = cast(%var_7473, dtype="float32") /* ty=Tensor[(720), float32] */;
    %248 = reshape(%246, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
    %249 = reshape(%247, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
    %250 = @func_857(%248, %249) /* ty=(Tensor[(9, 10, 8), float32],) */;
    %251 = @func_2518() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */;
    %252 = %251.2;
    %253 = cast(meta[relay.Constant][13] /* ty=Tensor[(1188), int8] */, dtype="float32") /* ty=Tensor[(1188), float32] */;
    %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(1), int32] */;
    %255 = cast(%252, dtype="float32") /* ty=Tensor[(1188), float32] */;
    %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?), float32] */;
    %257 = cast(%var_7476, dtype="uint8") /* ty=Tensor[(143, 4), uint8] */;
    %258 = cast(meta[relay.Constant][12] /* ty=Tensor[(30, 2), float64] */, dtype="float64") /* ty=Tensor[(30, 2), float64] */;
    %259 = reshape(%257, newshape=[13, 11, 4]) /* ty=Tensor[(13, 11, 4), uint8] */;
    %260 = reshape(%258, newshape=[3, 20]) /* ty=Tensor[(3, 20), float64] */;
    %261 = @func_1912(%259, %260) /* ty=(Tensor[(13, 11, 4), bool], Tensor[(630), float32], Tensor[(96), float64], Tensor[(3, 20), float64], Tensor[(13, 11, 4), float64]) */;
    %262 = %261.0;
    %263 = cast(%var_7476, dtype="bool") /* ty=Tensor[(143, 4), bool] */;
    %264 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
    %265 = cast(%262, dtype="bool") /* ty=Tensor[(13, 11, 4), bool] */;
    %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %267 = equal(%265, %266) /* ty=Tensor[(13, 11, 4), bool] */;
    %268 = cast(%267, dtype="float64") /* ty=Tensor[(13, 11, 4), float64] */;
    %269 = %250.0;
    %270 = floor_divide(%255, %256) /* ty=Tensor[(1188), float32] */;
    %271 = sqrt(%268) /* ty=Tensor[(13, 11, 4), float64] */;
    (%269, %var_7473, meta[relay.Constant][12] /* ty=Tensor[(30, 2), float64] */, %270, %271)
  };
  %272(%var_7504, %var_7505) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(30, 2), float64], Tensor[(1188), float32], Tensor[(13, 11, 4), float64]) */
}

def @func_2296(%var_2294: Tensor[(572), uint8], %var_2295: Tensor[(1188), int8]) -> (Tensor[(6, 1, 10), float32], Tensor[(630), float32], Tensor[(572), uint8], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) {
  @func_2292(%var_2294, %var_2295) /* ty=(Tensor[(6, 1, 10), float32], Tensor[(630), float32], Tensor[(572), uint8], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */
}

def @func_3394(%var_3392: Tensor[(180), float64], %var_3393: Tensor[(286, 2), uint8]) -> (Tensor[(6, 1, 10), float32], Tensor[(180), float64], Tensor[(3, 20), float64], Tensor[(286, 2), float32]) {
  %288 = fn (%var_3375: Tensor[(180), float64], %var_3382: Tensor[(286, 2), uint8]) -> (Tensor[(6, 1, 10), float32], Tensor[(180), float64], Tensor[(3, 20), float64], Tensor[(286, 2), float32]) {
    %273 = @func_2974() /* ty=(Tensor[(6, 1, 10), float32],) */;
    %274 = @func_2670() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) */;
    %275 = cast(%var_3375, dtype="float64") /* ty=Tensor[(180), float64] */;
    %276 = reshape(%275, newshape=[6, 10, 3]) /* ty=Tensor[(6, 10, 3), float64] */;
    %277 = @func_2631(%276) /* ty=(Tensor[(286, 2), uint8], Tensor[(1188), int8], Tensor[(6, 10, 3), float32], Tensor[(9, 10, 8), float32], Tensor[(360, 2), float32], Tensor[(6, 70, 10), bool]) */;
    %278 = %277.0;
    %279 = cast(%var_3382, dtype="float32") /* ty=Tensor[(286, 2), float32] */;
    %280 = shape_of(%278, dtype="int32") /* ty=Tensor[(2), int32] */;
    %281 = cast(%278, dtype="float32") /* ty=Tensor[(286, 2), float32] */;
    %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %283 = floor_mod(%281, %282) /* ty=Tensor[(286, 2), float32] */;
    %284 = cast(%283, dtype="float32") /* ty=Tensor[(286, 2), float32] */;
    %285 = %273.0;
    %286 = %274.1;
    %287 = tan(%284) /* ty=Tensor[(286, 2), float32] */;
    (%285, %var_3375, %286, %287)
  };
  %288(%var_3392, %var_3393) /* ty=(Tensor[(6, 1, 10), float32], Tensor[(180), float64], Tensor[(3, 20), float64], Tensor[(286, 2), float32]) */
}

def @func_8470() -> (Tensor[(6, 1, 10), float32],) {
  %291 = fn () -> (Tensor[(6, 1, 10), float32],) {
    %289 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
    %290 = %289.0;
    (%290,)
  };
  %291() /* ty=(Tensor[(6, 1, 10), float32],) */
}

def @func_2633(%var_2632: Tensor[(6, 10, 3), float64]) -> (Tensor[(286, 2), uint8], Tensor[(1188), int8], Tensor[(6, 10, 3), float32], Tensor[(9, 10, 8), float32], Tensor[(360, 2), float32], Tensor[(6, 70, 10), bool]) {
  %314 = fn (%var_2603: Tensor[(6, 10, 3), float64]) -> (Tensor[(286, 2), uint8], Tensor[(1188), int8], Tensor[(6, 10, 3), float32], Tensor[(9, 10, 8), float32], Tensor[(360, 2), float32], Tensor[(6, 70, 10), bool]) {
    %292 = cast(meta[relay.Constant][14] /* ty=Tensor[(286, 2), uint8] */, dtype="uint8") /* ty=Tensor[(286, 2), uint8] */;
    %293 = cast(meta[relay.Constant][15] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
    %294 = reshape(%292, newshape=[572]) /* ty=Tensor[(572), uint8] */;
    %295 = reshape(%293, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
    %296 = @func_2292(%294, %295) /* ty=(Tensor[(6, 1, 10), float32], Tensor[(630), float32], Tensor[(572), uint8], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */;
    %297 = %296.3;
    %298 = cast(%var_2603, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
    %299 = shape_of(%297, dtype="int32") /* ty=Tensor[(3), int32] */;
    %300 = cast(%297, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
    %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %302 = cast(meta[relay.Constant][16] /* ty=Tensor[(70, 1), float64] */, dtype="float64") /* ty=Tensor[(70, 1), float64] */;
    %303 = cast(meta[relay.Constant][17] /* ty=Tensor[(360, 2), float32] */, dtype="float32") /* ty=Tensor[(360, 2), float32] */;
    %304 = reshape(%302, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), float64] */;
    %305 = reshape(%303, newshape=[720]) /* ty=Tensor[(720), float32] */;
    %306 = @func_1622(%304, %305) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(14, 5, ?), uint8], Tensor[(14, 5, 1), float64], Tensor[(14, 5, 1), float64]) */;
    %307 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
    %308 = %307.0;
    %309 = cast(meta[relay.Constant][16] /* ty=Tensor[(70, 1), float64] */, dtype="bool") /* ty=Tensor[(70, 1), bool] */;
    %310 = cast(%308, dtype="bool") /* ty=Tensor[(6, 1, 10), bool] */;
    %311 = power(%300, %301) /* ty=Tensor[(6, 10, 3), float32] */;
    %312 = %306.0;
    %313 = logical_or(%309, %310) /* ty=Tensor[(6, 70, 10), bool] */;
    (meta[relay.Constant][14] /* ty=Tensor[(286, 2), uint8] */, meta[relay.Constant][15] /* ty=Tensor[(1188), int8] */, %311, %312, meta[relay.Constant][17] /* ty=Tensor[(360, 2), float32] */, %313)
  };
  %314(%var_2632) /* ty=(Tensor[(286, 2), uint8], Tensor[(1188), int8], Tensor[(6, 10, 3), float32], Tensor[(9, 10, 8), float32], Tensor[(360, 2), float32], Tensor[(6, 70, 10), bool]) */
}

def @func_1622(%var_1579: Tensor[(14, 5, 1), float64], %var_1592: Tensor[(720), float32]) -> (Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(14, 5, ?), uint8], Tensor[(14, 5, 1), float64], Tensor[(14, 5, 1), float64]) {
  %315 = cast(%var_1592, dtype="float32") /* ty=Tensor[(720), float32] */;
  %316 = cast(%var_1592, dtype="float32") /* ty=Tensor[(720), float32] */;
  %317 = reshape(%315, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %318 = reshape(%316, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %319 = @func_857(%317, %318) /* ty=(Tensor[(9, 10, 8), float32],) */;
  %320 = cast(%var_1579, dtype="float64") /* ty=Tensor[(14, 5, 1), float64] */;
  %321 = exp(%320) /* ty=Tensor[(14, 5, 1), float64] */;
  %322 = cast(%321, dtype="float32") /* ty=Tensor[(14, 5, 1), float32] */;
  %323 = log(%322) /* ty=Tensor[(14, 5, 1), float32] */;
  %324 = cast(%321, dtype="uint8") /* ty=Tensor[(14, 5, 1), uint8] */;
  %325 = shape_of(%323, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%323, dtype="uint8") /* ty=Tensor[(14, 5, 1), uint8] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %328 = cast(%323, dtype="float64") /* ty=Tensor[(14, 5, 1), float64] */;
  %329 = cast(%321, dtype="float64") /* ty=Tensor[(14, 5, 1), float64] */;
  %330 = %319.0;
  %331 = bitwise_and(%326, %327) /* ty=Tensor[(14, 5, ?), uint8] */;
  %332 = sinh(%328) /* ty=Tensor[(14, 5, 1), float64] */;
  %333 = asinh(%329) /* ty=Tensor[(14, 5, 1), float64] */;
  (%330, %var_1592, %331, %332, %333)
}

def @func_3931(%var_3929: Tensor[(6, 10, 10), float32], %var_3930: Tensor[(6, 3, 10), float32]) -> (Tensor[(6, 10, 10), bool], Tensor[(6, 3, 10), float32], Tensor[(3, 20), float64]) {
  @func_3927(%var_3929, %var_3930) /* ty=(Tensor[(6, 10, 10), bool], Tensor[(6, 3, 10), float32], Tensor[(3, 20), float64]) */
}

def @func_5878() -> (Tensor[(1188), int8], Tensor[(6, 10, 3), float64], Tensor[(1, 6, 10), uint8], float32, Tensor[(60), float32]) {
  %334 = @func_2518() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */;
  %335 = @func_5160() /* ty=(Tensor[(6, 10, 3), bool], Tensor[(60), float64]) */;
  %336 = %335.0;
  %337 = cast(%336, dtype="float64") /* ty=Tensor[(6, 10, 3), float64] */;
  %338 = cast(-9.04115f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %339 = cast(meta[relay.Constant][18] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %340 = reshape(%338, newshape=[]) /* ty=float32 */;
  %341 = reshape(%339, newshape=[1, 6, 10]) /* ty=Tensor[(1, 6, 10), float32] */;
  %342 = @func_4589(%340, %341) /* ty=(Tensor[(1, 6, 10), uint8], Tensor[(6, 10, 3), float64]) */;
  %343 = %334.2;
  %344 = sinh(%337) /* ty=Tensor[(6, 10, 3), float64] */;
  %345 = %342.0;
  (%343, %344, %345, -9.04115f /* ty=float32 */, meta[relay.Constant][18] /* ty=Tensor[(60), float32] */)
}

def @func_4702() -> (Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) {
  %346 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %347 = @func_4203() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) */;
  %348 = %346.0;
  %349 = %347.0;
  (%348, %349)
}

def @func_5683() -> (Tensor[(6, 10, 3), uint16],) {
  %350 = @func_4203() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) */;
  %351 = %350.1;
  (%351,)
}

def @func_3305() -> (Tensor[(6, 1, 10), float32],) {
  %352 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %353 = %352.0;
  (%353,)
}

def @func_2867() -> Tensor[(6, 10, 3), float64] {
  @func_2865() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_5452(%var_5450: int32, %var_5451: Tensor[(12, 15, 4), int32]) -> (Tensor[(12, 15, 4), int32], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) {
  %361 = fn (%var_5431: int32, %var_5432: Tensor[(12, 15, 4), int32]) -> (Tensor[(12, 15, 4), int32], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) {
    %354 = cast(%var_5431, dtype="int32") /* ty=int32 */;
    %355 = cast(%var_5432, dtype="int32") /* ty=Tensor[(12, 15, 4), int32] */;
    %356 = @func_3654() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) */;
    %357 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
    %358 = bitwise_and(%354, %355) /* ty=Tensor[(12, 15, 4), int32] */;
    %359 = %356.1;
    %360 = %357.0;
    (%358, %359, %360)
  };
  %361(%var_5450, %var_5451) /* ty=(Tensor[(12, 15, 4), int32], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) */
}

def @func_6300() -> (Tensor[(6, 10, 3), float64],) {
  %362 = @func_5069() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %363 = %362.0;
  (%363,)
}

def @func_6575() -> (Tensor[(6, 10, 3), uint16],) {
  %364 = @func_3322() /* ty=Tensor[(6, 10, 3), uint16] */;
  (%364,)
}

def @func_6047(%var_6046: Tensor[(16, 7, 9), float32]) -> (Tensor[(16, 7, 9), float32], Tensor[(6, 1, 10), float32], Tensor[(16, 7, 9), float64]) {
  %371 = fn (%var_6032: Tensor[(16, 7, 9), float32]) -> (Tensor[(16, 7, 9), float32], Tensor[(6, 1, 10), float32], Tensor[(16, 7, 9), float64]) {
    %365 = cast(%var_6032, dtype="float32") /* ty=Tensor[(16, 7, 9), float32] */;
    %366 = @func_5785() /* ty=(Tensor[(6, 1, 10), float32],) */;
    %367 = cast(%var_6032, dtype="float64") /* ty=Tensor[(16, 7, 9), float64] */;
    %368 = tan(%365) /* ty=Tensor[(16, 7, 9), float32] */;
    %369 = %366.0;
    %370 = exp(%367) /* ty=Tensor[(16, 7, 9), float64] */;
    (%368, %369, %370)
  };
  %371(%var_6046) /* ty=(Tensor[(16, 7, 9), float32], Tensor[(6, 1, 10), float32], Tensor[(16, 7, 9), float64]) */
}

def @func_6112(%var_6111: Tensor[(60), float64]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64], Tensor[(6, ?, 10), bool], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) {
  %394 = fn (%var_6061: Tensor[(60), float64]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64], Tensor[(6, ?, 10), bool], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) {
    %372 = @func_3603() /* ty=(Tensor[(6, 10, 3), float64],) */;
    %373 = cast(%var_6061, dtype="float64") /* ty=Tensor[(60), float64] */;
    %374 = reshape(%373, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
    %375 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
    %376 = @func_5251() /* ty=(Tensor[(6, 10, 3), float64],) */;
    %377 = @func_2854() /* ty=(Tensor[(6, 1, 10), float32],) */;
    %378 = %377.0;
    %379 = cast(%var_6061, dtype="bool") /* ty=Tensor[(60), bool] */;
    %380 = shape_of(%378, dtype="int32") /* ty=Tensor[(3), int32] */;
    %381 = cast(%378, dtype="bool") /* ty=Tensor[(6, 1, 10), bool] */;
    %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %383 = @func_2950() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) */;
    %384 = @func_5160() /* ty=(Tensor[(6, 10, 3), bool], Tensor[(60), float64]) */;
    %385 = %384.0;
    %386 = cast(%385, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
    %387 = %372.0;
    %388 = @func_293(%374) /* ty=Tensor[(6, 10, 3), float64] */;
    %389 = %375.0;
    %390 = %376.0;
    %391 = greater_equal(%381, %382) /* ty=Tensor[(6, ?, 10), bool] */;
    %392 = %383.0;
    %393 = log2(%386) /* ty=Tensor[(6, 10, 3), float32] */;
    (%387, %388, %389, %390, %391, %392, %393)
  };
  %394(%var_6111) /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64], Tensor[(6, ?, 10), bool], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) */
}

def @func_7899() -> Tensor[(6, 10, 3), float64] {
  @func_7897() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_3056() -> Tensor[(6, 10, 3), float64] {
  @func_3054() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_1626(%var_1624: Tensor[(14, 5, 1), float64], %var_1625: Tensor[(720), float32]) -> (Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(14, 5, ?), uint8], Tensor[(14, 5, 1), float64], Tensor[(14, 5, 1), float64]) {
  @func_1622(%var_1624, %var_1625) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(14, 5, ?), uint8], Tensor[(14, 5, 1), float64], Tensor[(14, 5, 1), float64]) */
}

def @func_2500() -> (Tensor[(6, 1, 10), float32],) {
  @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */
}

def @func_6330() -> Tensor[(6, 10, 3), float64] {
  %396 = fn () -> Tensor[(6, 10, 3), float64] {
    %395 = @func_3642() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) */;
    %395.0
  };
  %396() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_7869() -> (Tensor[(6, 10, 3), uint8], Tensor[(6, 10, 3), uint16]) {
  %401 = fn () -> (Tensor[(6, 10, 3), uint8], Tensor[(6, 10, 3), uint16]) {
    %397 = @func_5499() /* ty=(Tensor[(6, 10, 3), uint8], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) */;
    %398 = @func_5265() /* ty=(Tensor[(6, 10, 3), uint16],) */;
    %399 = %397.0;
    %400 = %398.0;
    (%399, %400)
  };
  %401() /* ty=(Tensor[(6, 10, 3), uint8], Tensor[(6, 10, 3), uint16]) */
}

def @func_8358() -> Tensor[(6, 1, 10), float32] {
  %403 = fn () -> Tensor[(6, 1, 10), float32] {
    %402 = @func_5499() /* ty=(Tensor[(6, 10, 3), uint8], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) */;
    %402.1
  };
  %403() /* ty=Tensor[(6, 1, 10), float32] */
}

def @func_6712() -> Tensor[(6, 10, 3), float32] {
  %406 = fn () -> Tensor[(6, 10, 3), float32] {
    %404 = @func_3879() /* ty=Tensor[(6, 10, 3), float64] */;
    %405 = cast(%404, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
    atanh(%405) /* ty=Tensor[(6, 10, 3), float32] */
  };
  %406() /* ty=Tensor[(6, 10, 3), float32] */
}

def @func_6857(%var_6856: Tensor[(5, 6, 1), float64]) -> (Tensor[(5, 6, ?), int16], Tensor[(6, 10, 3), float64], Tensor[(15, 4), float64]) {
  %417 = fn (%var_6835: Tensor[(5, 6, 1), float64]) -> (Tensor[(5, 6, ?), int16], Tensor[(6, 10, 3), float64], Tensor[(15, 4), float64]) {
    %407 = cast(%var_6835, dtype="float64") /* ty=Tensor[(5, 6, 1), float64] */;
    %408 = log(%407) /* ty=Tensor[(5, 6, 1), float64] */;
    %409 = cast(%var_6835, dtype="int16") /* ty=Tensor[(5, 6, 1), int16] */;
    %410 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
    %411 = cast(%408, dtype="int16") /* ty=Tensor[(5, 6, 1), int16] */;
    %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %413 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
    %414 = reshape(%413, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
    %415 = bitwise_xor(%411, %412) /* ty=Tensor[(5, 6, ?), int16] */;
    %416 = @func_293(%414) /* ty=Tensor[(6, 10, 3), float64] */;
    (%415, %416, meta[relay.Constant][19] /* ty=Tensor[(15, 4), float64] */)
  };
  %417(%var_6856) /* ty=(Tensor[(5, 6, ?), int16], Tensor[(6, 10, 3), float64], Tensor[(15, 4), float64]) */
}

def @func_5299(%var_5296: Tensor[(2, 10, 4), uint64], %var_5297: Tensor[(2, 10, 4), uint64], %var_5298: Tensor[(2, 10, 4), float64]) -> (Tensor[(2, 10, 4), float32], Tensor[(2, 10, 4), uint8]) {
  @func_5294(%var_5296, %var_5297, %var_5298) /* ty=(Tensor[(2, 10, 4), float32], Tensor[(2, 10, 4), uint8]) */
}

def @func_3054() -> Tensor[(6, 10, 3), float64] {
  %418 = @func_2950() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) */;
  %418.1
}

def @func_5071() -> (Tensor[(6, 10, 3), float64],) {
  @func_5069() /* ty=(Tensor[(6, 10, 3), float64],) */
}

def @func_7565() -> Tensor[(6, 10, 3), float64] {
  %419 = fn () -> Tensor[(6, 10, 3), float64] {
    @func_5748() /* ty=Tensor[(6, 10, 3), float64] */
  };
  %419() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_3872() -> Tensor[(6, 10, 3), uint16] {
  @func_3870() /* ty=Tensor[(6, 10, 3), uint16] */
}

def @func_5251() -> (Tensor[(6, 10, 3), float64],) {
  %420 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %421 = %420.1;
  (%421,)
}

def @func_3522() -> Tensor[(6, 10, 3), float32] {
  %422 = @func_3322() /* ty=Tensor[(6, 10, 3), uint16] */;
  %423 = cast(%422, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  sqrt(%423) /* ty=Tensor[(6, 10, 3), float32] */
}

def @func_4592(%var_4590: float32, %var_4591: Tensor[(1, 6, 10), float32]) -> (Tensor[(1, 6, 10), uint8], Tensor[(6, 10, 3), float64]) {
  %432 = fn (%var_4553: float32, %var_4554: Tensor[(1, 6, 10), float32]) -> (Tensor[(1, 6, 10), uint8], Tensor[(6, 10, 3), float64]) {
    %424 = cast(%var_4553, dtype="float32") /* ty=float32 */;
    %425 = cast(%var_4554, dtype="float32") /* ty=Tensor[(1, 6, 10), float32] */;
    %426 = divide(%424, %425) /* ty=Tensor[(1, 6, 10), float32] */;
    %427 = cast(%426, dtype="uint8") /* ty=Tensor[(1, 6, 10), uint8] */;
    %428 = cast(%var_4553, dtype="uint8") /* ty=uint8 */;
    %429 = @func_2518() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */;
    %430 = bitwise_xor(%427, %428) /* ty=Tensor[(1, 6, 10), uint8] */;
    %431 = %429.1;
    (%430, %431)
  };
  %432(%var_4590, %var_4591) /* ty=(Tensor[(1, 6, 10), uint8], Tensor[(6, 10, 3), float64]) */
}

def @func_2405() -> Tensor[(6, 10, 3), float64] {
  %433 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %433.0
}

def @func_3927(%var_3898: Tensor[(6, 10, 10), float32], %var_3905: Tensor[(6, 3, 10), float32]) -> (Tensor[(6, 10, 10), bool], Tensor[(6, 3, 10), float32], Tensor[(3, 20), float64]) {
  %434 = @func_2986() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %435 = %434.0;
  %436 = cast(%435, dtype="bool") /* ty=Tensor[(6, 1, 10), bool] */;
  %437 = cast(%var_3898, dtype="bool") /* ty=Tensor[(6, 10, 10), bool] */;
  %438 = cast(%435, dtype="float32") /* ty=Tensor[(6, 1, 10), float32] */;
  %439 = cast(%var_3905, dtype="float32") /* ty=Tensor[(6, 3, 10), float32] */;
  %440 = @func_2670() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) */;
  %441 = logical_or(%436, %437) /* ty=Tensor[(6, 10, 10), bool] */;
  %442 = minimum(%438, %439) /* ty=Tensor[(6, 3, 10), float32] */;
  %443 = %440.1;
  (%441, %442, %443)
}

def @func_3725() -> Tensor[(6, 10, 3), float32] {
  %444 = @func_3510() /* ty=(Tensor[(6, 10, 3), float32],) */;
  %444.0
}

def @func_3272() -> (Tensor[(6, 1, 10), float32],) {
  @func_3270() /* ty=(Tensor[(6, 1, 10), float32],) */
}

def @func_6194() -> (Tensor[(6, 10, 3), float64],) {
  %445 = @func_3579() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) */;
  %446 = %445.0;
  (%446,)
}

def @func_6968() -> Tensor[(6, 10, 3), float64] {
  %448 = fn () -> Tensor[(6, 10, 3), float64] {
    %447 = @func_4354() /* ty=(Tensor[(6, 10, 3), float64],) */;
    %447.0
  };
  %448() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_6149(%var_6147: Tensor[(70), float64], %var_6148: Tensor[(720), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32], Tensor[(144), float32], Tensor[(70), float64], Tensor[(720), float32], Tensor[(8, 12), float64], Tensor[(4, 24), float32]) {
  @func_6145(%var_6147, %var_6148) /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32], Tensor[(144), float32], Tensor[(70), float64], Tensor[(720), float32], Tensor[(8, 12), float64], Tensor[(4, 24), float32]) */
}

def @func_6500() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) {
  %449 = @func_4354() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %450 = %449.0;
  %451 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 3), float64] */;
  %452 = shape_of(%450, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%450, dtype="float64") /* ty=Tensor[(6, 10, 3), float64] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %455 = @func_5878() /* ty=(Tensor[(1188), int8], Tensor[(6, 10, 3), float64], Tensor[(1, 6, 10), uint8], float32, Tensor[(60), float32]) */;
  %456 = subtract(%453, %454) /* ty=Tensor[(6, 10, 3), float64] */;
  %457 = %455.1;
  (%456, %457)
}

def @func_2986() -> (Tensor[(6, 1, 10), float32],) {
  %458 = @func_2974() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %459 = %458.0;
  (%459,)
}

def @func_3605() -> (Tensor[(6, 10, 3), float64],) {
  @func_3603() /* ty=(Tensor[(6, 10, 3), float64],) */
}

def @func_7342(%var_7340: int64, %var_7341: Tensor[(9, 1), int64]) -> (Tensor[(9, 1), bool], Tensor[(60), float64], Tensor[(6, 1, 10), float32]) {
  %466 = fn (%var_7304: int64, %var_7305: Tensor[(9, 1), int64]) -> (Tensor[(9, 1), bool], Tensor[(60), float64], Tensor[(6, 1, 10), float32]) {
    %460 = cast(%var_7304, dtype="bool") /* ty=bool */;
    %461 = cast(%var_7305, dtype="bool") /* ty=Tensor[(9, 1), bool] */;
    %462 = @func_4165() /* ty=(Tensor[(60), float64], Tensor[(6, 10, 3), float64]) */;
    %463 = equal(%460, %461) /* ty=Tensor[(9, 1), bool] */;
    %464 = %462.0;
    %465 = @func_6739() /* ty=Tensor[(6, 1, 10), float32] */;
    (%463, %464, %465)
  };
  %466(%var_7340, %var_7341) /* ty=(Tensor[(9, 1), bool], Tensor[(60), float64], Tensor[(6, 1, 10), float32]) */
}

def @func_3348() -> Tensor[(6, 10, 3), float64] {
  @func_3346() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_4429() -> (Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), uint16]) {
  %473 = fn () -> (Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), uint16]) {
    %467 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
    %468 = %467.0;
    %469 = cast(%468, dtype="uint16") /* ty=Tensor[(6, 10, 3), uint16] */;
    %470 = reshape(%469, newshape=[6, 10, 3]) /* ty=Tensor[(6, 10, 3), uint16] */;
    %471 = @func_2902(%470) /* ty=(Tensor[(6, 10, 3), bool], Tensor[(720), float32], Tensor[(5, 126), float32], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188, 1), int8]) */;
    %472 = %471.3;
    (%468, %472)
  };
  %473() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), uint16]) */
}

def @func_2838() -> (Tensor[(6, 10, 3), uint16],) {
  @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */
}

def @func_6476() -> Tensor[(6, 10, 3), uint16] {
  %475 = fn () -> Tensor[(6, 10, 3), uint16] {
    %474 = @func_4428() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), uint16]) */;
    %474.0
  };
  %475() /* ty=Tensor[(6, 10, 3), uint16] */
}

def @func_8313(%var_8274: Tensor[(600), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(600), int8], Tensor[(6, 1, 10), uint8]) {
  %476 = @func_6170() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %477 = @func_7038() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) */;
  %478 = cast(-4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %479 = cast(%var_8274, dtype="float32") /* ty=Tensor[(600), float32] */;
  %480 = reshape(%478, newshape=[]) /* ty=int32 */;
  %481 = reshape(%479, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %482 = @func_8178(%480, %481) /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 1, 10), float32], int32, Tensor[(60, 12), int32], Tensor[(6, 3, 10), float32], Tensor[(600), float32]) */;
  %483 = %482.7;
  %484 = cast(-4 /* ty=int32 */, dtype="uint32") /* ty=uint32 */;
  %485 = cast(%483, dtype="uint32") /* ty=Tensor[(600), uint32] */;
  %486 = add(%484, %485) /* ty=Tensor[(600), uint32] */;
  %487 = cast(%486, dtype="int8") /* ty=Tensor[(600), int8] */;
  %488 = shape_of(%var_8274, dtype="int32") /* ty=Tensor[(1), int32] */;
  %489 = cast(%var_8274, dtype="int8") /* ty=Tensor[(600), int8] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?), int8] */;
  %491 = @func_2854() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %492 = %491.0;
  %493 = cast(%492, dtype="uint8") /* ty=Tensor[(6, 1, 10), uint8] */;
  %494 = cast(-4 /* ty=int32 */, dtype="uint8") /* ty=uint8 */;
  %495 = %476.1;
  %496 = @func_4260() /* ty=Tensor[(6, 10, 3), float64] */;
  %497 = %477.1;
  %498 = @func_3346() /* ty=Tensor[(6, 10, 3), float64] */;
  %499 = bitwise_or(%489, %490) /* ty=Tensor[(600), int8] */;
  %500 = subtract(%493, %494) /* ty=Tensor[(6, 1, 10), uint8] */;
  (%495, %496, %497, %498, %499, %500)
}

def @func_5313() -> Tensor[(60), float64] {
  %502 = fn () -> Tensor[(60), float64] {
    %501 = @func_4165() /* ty=(Tensor[(60), float64], Tensor[(6, 10, 3), float64]) */;
    %501.0
  };
  %502() /* ty=Tensor[(60), float64] */
}

def @func_5734() -> (Tensor[(6, 10, 3), float32], Tensor[(9, 12, 11), int8], Tensor[(60), float64], Tensor[(1188), int8], Tensor[(6, 10, 3), float64]) {
  %511 = fn () -> (Tensor[(6, 10, 3), float32], Tensor[(9, 12, 11), int8], Tensor[(60), float64], Tensor[(1188), int8], Tensor[(6, 10, 3), float64]) {
    %503 = cast(meta[relay.Constant][21] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %504 = cast(meta[relay.Constant][22] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
    %505 = reshape(%503, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %506 = reshape(%504, newshape=[9, 12, 11]) /* ty=Tensor[(9, 12, 11), int8] */;
    %507 = @func_636(%505, %506) /* ty=(Tensor[(9, 12, 11), int8], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(9, 12, 11), bool], Tensor[(6, 10, 3), float64]) */;
    %508 = @func_3522() /* ty=Tensor[(6, 10, 3), float32] */;
    %509 = %507.0;
    %510 = @func_2405() /* ty=Tensor[(6, 10, 3), float64] */;
    (%508, %509, meta[relay.Constant][21] /* ty=Tensor[(60), float64] */, meta[relay.Constant][22] /* ty=Tensor[(1188), int8] */, %510)
  };
  %511() /* ty=(Tensor[(6, 10, 3), float32], Tensor[(9, 12, 11), int8], Tensor[(60), float64], Tensor[(1188), int8], Tensor[(6, 10, 3), float64]) */
}

def @func_2855() -> (Tensor[(6, 1, 10), float32],) {
  %514 = fn () -> (Tensor[(6, 1, 10), float32],) {
    %512 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
    %513 = %512.0;
    (%513,)
  };
  %514() /* ty=(Tensor[(6, 1, 10), float32],) */
}

def @func_2952() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) {
  @func_2950() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) */
}

def @func_3727() -> Tensor[(6, 10, 3), float32] {
  @func_3725() /* ty=Tensor[(6, 10, 3), float32] */
}

def @func_3685() -> (Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) {
  %519 = fn () -> (Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) {
    %515 = @func_2518() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */;
    %516 = @func_2986() /* ty=(Tensor[(6, 1, 10), float32],) */;
    %517 = %515.0;
    %518 = %516.0;
    (%517, %518)
  };
  %519() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) */
}

def @func_7714() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) {
  @func_7712() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) */
}

def @func_5786() -> (Tensor[(6, 1, 10), float32],) {
  %522 = fn () -> (Tensor[(6, 1, 10), float32],) {
    %520 = @func_3305() /* ty=(Tensor[(6, 1, 10), float32],) */;
    %521 = %520.0;
    (%521,)
  };
  %522() /* ty=(Tensor[(6, 1, 10), float32],) */
}

def @func_1123(%var_1121: Tensor[(3, 15, 14), float32]) -> (Tensor[(3, 15, 14), float32], Tensor[(9, 10, 8), float32], Tensor[(720), float32]) {
  @func_1120(%var_1121) /* ty=(Tensor[(3, 15, 14), float32], Tensor[(9, 10, 8), float32], Tensor[(720), float32]) */
}

def @func_4932(%var_4930: Tensor[(720), float32], %var_4931: Tensor[(240), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 4, 10), float32], Tensor[(720), float32], Tensor[(240), float32]) {
  @func_4928(%var_4930, %var_4931) /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 4, 10), float32], Tensor[(720), float32], Tensor[(240), float32]) */
}

def @func_3108() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) {
  %532 = fn () -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) {
    %523 = @func_2865() /* ty=Tensor[(6, 10, 3), float64] */;
    %524 = cast(%523, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
    %525 = tan(%524) /* ty=Tensor[(6, 10, 3), float32] */;
    %526 = cast(%523, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
    %527 = shape_of(%525, dtype="int32") /* ty=Tensor[(3), int32] */;
    %528 = cast(%525, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
    %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %530 = @func_2405() /* ty=Tensor[(6, 10, 3), float64] */;
    %531 = add(%528, %529) /* ty=Tensor[(6, 10, 3), float32] */;
    (%530, %531)
  };
  %532() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) */
}

def @func_2219() -> (Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) {
  @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */
}

def @func_5880() -> (Tensor[(1188), int8], Tensor[(6, 10, 3), float64], Tensor[(1, 6, 10), uint8], float32, Tensor[(60), float32]) {
  @func_5878() /* ty=(Tensor[(1188), int8], Tensor[(6, 10, 3), float64], Tensor[(1, 6, 10), uint8], float32, Tensor[(60), float32]) */
}

def @func_8099() -> (Tensor[(6, 1, 10), float32], Tensor[(1188), int16], Tensor[(6, 10, 3), float64]) {
  %533 = @func_4203() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) */;
  %534 = @func_5733() /* ty=(Tensor[(6, 10, 3), float32], Tensor[(9, 12, 11), int8], Tensor[(60), float64], Tensor[(1188), int8], Tensor[(6, 10, 3), float64]) */;
  %535 = %534.3;
  %536 = cast(%535, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %537 = log10(%536) /* ty=Tensor[(1188), float32] */;
  %538 = cast(%537, dtype="int16") /* ty=Tensor[(1188), int16] */;
  %539 = shape_of(%535, dtype="int32") /* ty=Tensor[(1), int32] */;
  %540 = cast(%535, dtype="int16") /* ty=Tensor[(1188), int16] */;
  %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?), int16] */;
  %542 = %533.0;
  %543 = bitwise_xor(%540, %541) /* ty=Tensor[(1188), int16] */;
  %544 = @func_7897() /* ty=Tensor[(6, 10, 3), float64] */;
  (%542, %543, %544)
}

def @func_2498() -> (Tensor[(6, 1, 10), float32],) {
  %545 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %546 = %545.0;
  (%546,)
}

def @func_5266() -> (Tensor[(6, 10, 3), uint16],) {
  %549 = fn () -> (Tensor[(6, 10, 3), uint16],) {
    %547 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
    %548 = %547.0;
    (%548,)
  };
  %549() /* ty=(Tensor[(6, 10, 3), uint16],) */
}

def @func_6196() -> (Tensor[(6, 10, 3), float64],) {
  @func_6194() /* ty=(Tensor[(6, 10, 3), float64],) */
}

def @func_7088() -> (Tensor[(6, 10, 3), uint16],) {
  @func_7086() /* ty=(Tensor[(6, 10, 3), uint16],) */
}

def @func_6145(%var_6132: Tensor[(70), float64], %var_6133: Tensor[(720), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32], Tensor[(144), float32], Tensor[(70), float64], Tensor[(720), float32], Tensor[(8, 12), float64], Tensor[(4, 24), float32]) {
  %550 = @func_5069() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %551 = @func_5069() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %552 = @func_5785() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %553 = cast(meta[relay.Constant][23] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %554 = cast(%var_6132, dtype="float64") /* ty=Tensor[(70), float64] */;
  %555 = cast(%var_6133, dtype="float32") /* ty=Tensor[(720), float32] */;
  %556 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 12), float64] */;
  %557 = reshape(%553, newshape=[16, 3, 3]) /* ty=Tensor[(16, 3, 3), float32] */;
  %558 = reshape(%554, newshape=[14, 5]) /* ty=Tensor[(14, 5), float64] */;
  %559 = reshape(%555, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %560 = reshape(%556, newshape=[4, 24]) /* ty=Tensor[(4, 24), float64] */;
  %561 = @func_2345(%557, %558, %559, %560) /* ty=(Tensor[(16, 3, 3), bool], Tensor[(14, 5, 1), float64], Tensor[(14, 5), float64], Tensor[(720), float32], Tensor[(16, 3, 3), bool], Tensor[(1188), int8], Tensor[(4, 24), float64], Tensor[(60), float64]) */;
  %562 = %561.6;
  %563 = cast(%562, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
  %564 = %550.0;
  %565 = %551.0;
  %566 = %552.0;
  %567 = log2(%563) /* ty=Tensor[(4, 24), float32] */;
  (%564, %565, %566, meta[relay.Constant][23] /* ty=Tensor[(144), float32] */, %var_6132, %var_6133, meta[relay.Constant][24] /* ty=Tensor[(8, 12), float64] */, %567)
}

def @func_1120(%var_1074: Tensor[(3, 15, 14), float32]) -> (Tensor[(3, 15, 14), float32], Tensor[(9, 10, 8), float32], Tensor[(720), float32]) {
  %568 = cast(-8.09844f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %569 = cast(%var_1074, dtype="float32") /* ty=Tensor[(3, 15, 14), float32] */;
  %570 = cast(meta[relay.Constant][25] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %571 = cast(meta[relay.Constant][25] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %572 = reshape(%570, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %573 = reshape(%571, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %574 = @func_857(%572, %573) /* ty=(Tensor[(9, 10, 8), float32],) */;
  %575 = power(%568, %569) /* ty=Tensor[(3, 15, 14), float32] */;
  %576 = %574.0;
  (%575, %576, meta[relay.Constant][25] /* ty=Tensor[(720), float32] */)
}

def @func_6783() -> (Tensor[(6, 10, 3), float64],) {
  @func_6781() /* ty=(Tensor[(6, 10, 3), float64],) */
}

def @func_2671() -> (Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) {
  %584 = fn () -> (Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) {
    %577 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 52), uint8] */, dtype="uint8") /* ty=Tensor[(11, 52), uint8] */;
    %578 = cast(meta[relay.Constant][27] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %579 = reshape(%577, newshape=[13, 11, 4]) /* ty=Tensor[(13, 11, 4), uint8] */;
    %580 = reshape(%578, newshape=[3, 20]) /* ty=Tensor[(3, 20), float64] */;
    %581 = @func_1912(%579, %580) /* ty=(Tensor[(13, 11, 4), bool], Tensor[(630), float32], Tensor[(96), float64], Tensor[(3, 20), float64], Tensor[(13, 11, 4), float64]) */;
    %582 = @func_2405() /* ty=Tensor[(6, 10, 3), float64] */;
    %583 = %581.3;
    (%582, %583, meta[relay.Constant][26] /* ty=Tensor[(11, 52), uint8] */, meta[relay.Constant][27] /* ty=Tensor[(60), float64] */)
  };
  %584() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) */
}

def @func_2976() -> (Tensor[(6, 1, 10), float32],) {
  @func_2974() /* ty=(Tensor[(6, 1, 10), float32],) */
}

def @func_2519() -> (Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) {
  %593 = fn () -> (Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) {
    %585 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
    %586 = %585.0;
    %587 = cast(%586, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
    %588 = cast(meta[relay.Constant][28] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
    %589 = reshape(%587, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %590 = reshape(%588, newshape=[9, 12, 11]) /* ty=Tensor[(9, 12, 11), int8] */;
    %591 = @func_636(%589, %590) /* ty=(Tensor[(9, 12, 11), int8], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(9, 12, 11), bool], Tensor[(6, 10, 3), float64]) */;
    %592 = %591.7;
    (%586, %592, meta[relay.Constant][28] /* ty=Tensor[(1188), int8] */)
  };
  %593() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) */
}

def @func_1773(%var_1727: Tensor[(8, 2, 6), float64], %var_1754: Tensor[(60), float64]) -> (Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(9, 10, 8), float32], Tensor[(70), float64], Tensor[(8, 2, 6), bool], Tensor[(8, 2, 6), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188), int8]) {
  %594 = cast(meta[relay.Constant][29] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %595 = reshape(%594, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float32] */;
  %596 = @func_1120(%595) /* ty=(Tensor[(3, 15, 14), float32], Tensor[(9, 10, 8), float32], Tensor[(720), float32]) */;
  %597 = cast(meta[relay.Constant][30] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %598 = %596.1;
  %599 = cast(%598, dtype="float32") /* ty=Tensor[(9, 10, 8), float32] */;
  %600 = reshape(%597, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), float64] */;
  %601 = reshape(%599, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %602 = @func_1622(%600, %601) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(14, 5, ?), uint8], Tensor[(14, 5, 1), float64], Tensor[(14, 5, 1), float64]) */;
  %603 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 2, 6), float64] */, dtype="float64") /* ty=Tensor[(8, 2, 6), float64] */;
  %604 = exp(%603) /* ty=Tensor[(8, 2, 6), float64] */;
  %605 = cast(%var_1727, dtype="bool") /* ty=Tensor[(8, 2, 6), bool] */;
  %606 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%604, dtype="bool") /* ty=Tensor[(8, 2, 6), bool] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %609 = cast(%604, dtype="float64") /* ty=Tensor[(8, 2, 6), float64] */;
  %610 = cast(%var_1754, dtype="float64") /* ty=Tensor[(60), float64] */;
  %611 = cast(meta[relay.Constant][32] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %612 = reshape(%610, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %613 = reshape(%611, newshape=[9, 12, 11]) /* ty=Tensor[(9, 12, 11), int8] */;
  %614 = @func_636(%612, %613) /* ty=(Tensor[(9, 12, 11), int8], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(9, 12, 11), bool], Tensor[(6, 10, 3), float64]) */;
  %615 = %602.0;
  %616 = greater(%607, %608) /* ty=Tensor[(8, 2, 6), bool] */;
  %617 = log10(%609) /* ty=Tensor[(8, 2, 6), float64] */;
  %618 = %614.4;
  (%598, meta[relay.Constant][29] /* ty=Tensor[(630), float32] */, %615, meta[relay.Constant][30] /* ty=Tensor[(70), float64] */, %616, %617, %618, %var_1754, meta[relay.Constant][32] /* ty=Tensor[(1188), int8] */)
}

def @func_2388() -> (Tensor[(6, 10, 3), float64],) {
  @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */
}

def @func_4347(%var_4338: Tensor[(6, 15, 10), float32]) -> Tensor[(6, 15, 10), int8] {
  %619 = @func_3305() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %620 = %619.0;
  %621 = cast(%620, dtype="int8") /* ty=Tensor[(6, 1, 10), int8] */;
  %622 = cast(%var_4338, dtype="int8") /* ty=Tensor[(6, 15, 10), int8] */;
  bitwise_or(%621, %622) /* ty=Tensor[(6, 15, 10), int8] */
}

def @func_4350(%var_4348: Tensor[(6, 15, 10), float32]) -> Tensor[(6, 15, 10), int8] {
  @func_4347(%var_4348) /* ty=Tensor[(6, 15, 10), int8] */
}

def @func_6828() -> Tensor[(6, 10, 3), float64] {
  %624 = fn () -> Tensor[(6, 10, 3), float64] {
    %623 = @func_5251() /* ty=(Tensor[(6, 10, 3), float64],) */;
    %623.0
  };
  %624() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_5749() -> Tensor[(6, 10, 3), float64] {
  %626 = fn () -> Tensor[(6, 10, 3), float64] {
    %625 = @func_2670() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) */;
    %625.0
  };
  %626() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_3425(%var_3412: float32) -> (Tensor[(16, 5, 9), float32], Tensor[(6, 10, 3), float64]) {
  %627 = cast(%var_3412, dtype="float32") /* ty=float32 */;
  %628 = cast(meta[relay.Constant][33] /* ty=Tensor[(16, 5, 9), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 9), float32] */;
  %629 = floor_mod(%627, %628) /* ty=Tensor[(16, 5, 9), float32] */;
  %630 = @func_3054() /* ty=Tensor[(6, 10, 3), float64] */;
  (%629, %630)
}

def @func_7250() -> (Tensor[(6, 1, 10), float64], Tensor[(6, 10, 3), float64]) {
  %636 = fn () -> (Tensor[(6, 1, 10), float64], Tensor[(6, 10, 3), float64]) {
    %631 = @func_4203() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) */;
    %632 = %631.0;
    %633 = cast(%632, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
    %634 = tan(%633) /* ty=Tensor[(6, 1, 10), float64] */;
    %635 = @func_6329() /* ty=Tensor[(6, 10, 3), float64] */;
    (%634, %635)
  };
  %636() /* ty=(Tensor[(6, 1, 10), float64], Tensor[(6, 10, 3), float64]) */
}

def @func_3870() -> Tensor[(6, 10, 3), uint16] {
  %637 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %637.0
}

def @func_3524() -> Tensor[(6, 10, 3), float32] {
  @func_3522() /* ty=Tensor[(6, 10, 3), float32] */
}

def @func_6740() -> Tensor[(6, 1, 10), float32] {
  %639 = fn () -> Tensor[(6, 1, 10), float32] {
    %638 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
    %638.0
  };
  %639() /* ty=Tensor[(6, 1, 10), float32] */
}

def @func_3979() -> (Tensor[(6, 13, 10), bool], Tensor[(6, 10, 3), uint16]) {
  @func_3977() /* ty=(Tensor[(6, 13, 10), bool], Tensor[(6, 10, 3), uint16]) */
}

def @func_7648(%var_7647: Tensor[(96), float64]) -> (Tensor[(6, 10, 3), uint16], Tensor[(96), float64], Tensor[(858), float64], Tensor[(96), float64], Tensor[(15, 4), float64], Tensor[(6, 10, 3), float64], float32) {
  %656 = fn (%var_7606: Tensor[(96), float64]) -> (Tensor[(6, 10, 3), uint16], Tensor[(96), float64], Tensor[(858), float64], Tensor[(96), float64], Tensor[(15, 4), float64], Tensor[(6, 10, 3), float64], float32) {
    %640 = @func_3977() /* ty=(Tensor[(6, 13, 10), bool], Tensor[(6, 10, 3), uint16]) */;
    %641 = cast(meta[relay.Constant][34] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
    %642 = cast(meta[relay.Constant][34] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
    %643 = cast(%var_7606, dtype="float64") /* ty=Tensor[(96), float64] */;
    %644 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
    %645 = reshape(%641, newshape=[6, 13, 11]) /* ty=Tensor[(6, 13, 11), float64] */;
    %646 = reshape(%642, newshape=[6, 13, 11]) /* ty=Tensor[(6, 13, 11), float64] */;
    %647 = reshape(%643, newshape=[96]) /* ty=Tensor[(96), float64] */;
    %648 = reshape(%644, newshape=[15, 4]) /* ty=Tensor[(15, 4), float64] */;
    %649 = @func_5020(%645, %646, %647, %648) /* ty=(Tensor[(6, 13, 11), float64], Tensor[(60), float64], Tensor[(96), float64], Tensor[(15, 4), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float32]) */;
    %650 = cast(1.26457f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %651 = reshape(%650, newshape=[]) /* ty=float32 */;
    %652 = @func_3425(%651) /* ty=(Tensor[(16, 5, 9), float32], Tensor[(6, 10, 3), float64]) */;
    %653 = %640.1;
    %654 = %649.2;
    %655 = %652.1;
    (%653, %654, meta[relay.Constant][34] /* ty=Tensor[(858), float64] */, %var_7606, meta[relay.Constant][35] /* ty=Tensor[(15, 4), float64] */, %655, 1.26457f /* ty=float32 */)
  };
  %656(%var_7647) /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(96), float64], Tensor[(858), float64], Tensor[(96), float64], Tensor[(15, 4), float64], Tensor[(6, 10, 3), float64], float32) */
}

def @func_2292(%var_2286: Tensor[(572), uint8], %var_2289: Tensor[(1188), int8]) -> (Tensor[(6, 1, 10), float32], Tensor[(630), float32], Tensor[(572), uint8], Tensor[(6, 10, 3), float64], Tensor[(1188), int8]) {
  %657 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %658 = cast(%var_2286, dtype="uint8") /* ty=Tensor[(572), uint8] */;
  %659 = %657.0;
  %660 = cast(%659, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
  %661 = reshape(%658, newshape=[13, 11, 4]) /* ty=Tensor[(13, 11, 4), uint8] */;
  %662 = reshape(%660, newshape=[3, 20]) /* ty=Tensor[(3, 20), float64] */;
  %663 = @func_1912(%661, %662) /* ty=(Tensor[(13, 11, 4), bool], Tensor[(630), float32], Tensor[(96), float64], Tensor[(3, 20), float64], Tensor[(13, 11, 4), float64]) */;
  %664 = cast(%659, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
  %665 = cast(%var_2289, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %666 = reshape(%664, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %667 = reshape(%665, newshape=[9, 12, 11]) /* ty=Tensor[(9, 12, 11), int8] */;
  %668 = @func_636(%666, %667) /* ty=(Tensor[(9, 12, 11), int8], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(9, 12, 11), bool], Tensor[(6, 10, 3), float64]) */;
  %669 = %663.1;
  %670 = %668.3;
  (%659, %669, %var_2286, %670, %var_2289)
}

def @func_7976(%var_7974: Tensor[(600), float32], %var_7975: Tensor[(720), float32]) -> (Tensor[(6, 10, 3), float32], Tensor[(6, 10, 10), int8], Tensor[(6, 10, 3), uint16], Tensor[(240), float32], Tensor[(720), float32]) {
  %690 = fn (%var_7941: Tensor[(600), float32], %var_7967: Tensor[(720), float32]) -> (Tensor[(6, 10, 3), float32], Tensor[(6, 10, 10), int8], Tensor[(6, 10, 3), uint16], Tensor[(240), float32], Tensor[(720), float32]) {
    %671 = @func_3107() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) */;
    %672 = cast(%var_7941, dtype="float32") /* ty=Tensor[(600), float32] */;
    %673 = %671.1;
    %674 = cast(%673, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
    %675 = reshape(%672, newshape=[6, 10, 10]) /* ty=Tensor[(6, 10, 10), float32] */;
    %676 = reshape(%674, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float32] */;
    %677 = @func_3927(%675, %676) /* ty=(Tensor[(6, 10, 10), bool], Tensor[(6, 3, 10), float32], Tensor[(3, 20), float64]) */;
    %678 = %677.0;
    %679 = cast(%var_7941, dtype="int8") /* ty=Tensor[(600), int8] */;
    %680 = shape_of(%678, dtype="int32") /* ty=Tensor[(3), int32] */;
    %681 = cast(%678, dtype="int8") /* ty=Tensor[(6, 10, 10), int8] */;
    %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %683 = cast(meta[relay.Constant][36] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %684 = cast(%var_7967, dtype="float32") /* ty=Tensor[(720), float32] */;
    %685 = reshape(%683, newshape=[8, 30]) /* ty=Tensor[(8, 30), float32] */;
    %686 = reshape(%684, newshape=[12, 60]) /* ty=Tensor[(12, 60), float32] */;
    %687 = @func_6905(%685, %686) /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 4, 10), float32], Tensor[(8, 30), float32], Tensor[(12, 60), int8]) */;
    %688 = subtract(%681, %682) /* ty=Tensor[(6, 10, 10), int8] */;
    %689 = %687.0;
    (%673, %688, %689, meta[relay.Constant][36] /* ty=Tensor[(240), float32] */, %var_7967)
  };
  %690(%var_7974, %var_7975) /* ty=(Tensor[(6, 10, 3), float32], Tensor[(6, 10, 10), int8], Tensor[(6, 10, 3), uint16], Tensor[(240), float32], Tensor[(720), float32]) */
}

def @func_7086() -> (Tensor[(6, 10, 3), uint16],) {
  %691 = @func_6666() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %692 = %691.0;
  (%692,)
}

def @func_4704() -> (Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) {
  @func_4702() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) */
}

def @func_6226(%var_6225: Tensor[(5, 7, 1), float32]) -> Tensor[(5, 7, 1), float32] {
  %694 = fn (%var_6207: Tensor[(5, 7, 1), float32]) -> Tensor[(5, 7, 1), float32] {
    %693 = cast(%var_6207, dtype="float32") /* ty=Tensor[(5, 7, 1), float32] */;
    acos(%693) /* ty=Tensor[(5, 7, 1), float32] */
  };
  %694(%var_6225) /* ty=Tensor[(5, 7, 1), float32] */
}

def @func_4014() -> (Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) {
  %695 = @func_3522() /* ty=Tensor[(6, 10, 3), float32] */;
  %696 = cast(%695, dtype="float64") /* ty=Tensor[(6, 10, 3), float64] */;
  %697 = @func_3870() /* ty=Tensor[(6, 10, 3), uint16] */;
  %698 = cos(%696) /* ty=Tensor[(6, 10, 3), float64] */;
  (%697, %698)
}

def @func_8448() -> (Tensor[(6, 10, 3), float64], Tensor[(11, 52), uint8], Tensor[(6, 10, 3), uint8], Tensor[(6, 10, 3), float64], Tensor[(60), float64]) {
  @func_8446() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(11, 52), uint8], Tensor[(6, 10, 3), uint8], Tensor[(6, 10, 3), float64], Tensor[(60), float64]) */
}

def @func_7130() -> (Tensor[(6, 10, 3), uint16],) {
  @func_7128() /* ty=(Tensor[(6, 10, 3), uint16],) */
}

def @func_4262() -> Tensor[(6, 10, 3), float64] {
  @func_4260() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_8345(%var_8344: Tensor[(6, 10, 3), float64]) -> (Tensor[(6, 10, 3), float32], Tensor[(6, 10, 3), uint16]) {
  %708 = fn (%var_8324: Tensor[(6, 10, 3), float64]) -> (Tensor[(6, 10, 3), float32], Tensor[(6, 10, 3), uint16]) {
    %699 = @func_5781() /* ty=(Tensor[(6, 10, 3), float64],) */;
    %700 = %699.0;
    %701 = cast(%var_8324, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
    %702 = shape_of(%700, dtype="int32") /* ty=Tensor[(3), int32] */;
    %703 = cast(%700, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
    %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %705 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
    %706 = divide(%703, %704) /* ty=Tensor[(6, 10, 3), float32] */;
    %707 = %705.0;
    (%706, %707)
  };
  %708(%var_8344) /* ty=(Tensor[(6, 10, 3), float32], Tensor[(6, 10, 3), uint16]) */
}

def @func_4993(%var_4991: Tensor[(12, 4, 10), uint8], %var_4992: Tensor[(12, 4, 10), uint8]) -> (Tensor[(12, 4, 10), uint8], Tensor[(5, 16, 12), int16], Tensor[(960), int16]) {
  %718 = fn (%var_4981: Tensor[(12, 4, 10), uint8], %var_4982: Tensor[(12, 4, 10), uint8]) -> (Tensor[(12, 4, 10), uint8], Tensor[(5, 16, 12), int16], Tensor[(960), int16]) {
    %709 = cast(%var_4982, dtype="uint8") /* ty=Tensor[(12, 4, 10), uint8] */;
    %710 = shape_of(%var_4981, dtype="int32") /* ty=Tensor[(3), int32] */;
    %711 = cast(%var_4981, dtype="uint8") /* ty=Tensor[(12, 4, 10), uint8] */;
    %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %713 = cast(meta[relay.Constant][37] /* ty=Tensor[(960), int16] */, dtype="int16") /* ty=Tensor[(960), int16] */;
    %714 = reshape(%713, newshape=[5, 16, 12]) /* ty=Tensor[(5, 16, 12), int16] */;
    %715 = @func_3489(%714) /* ty=(Tensor[(5, 16, 12), int16], Tensor[(6, 10, 3), float64]) */;
    %716 = bitwise_or(%711, %712) /* ty=Tensor[(12, 4, 10), uint8] */;
    %717 = %715.0;
    (%716, %717, meta[relay.Constant][37] /* ty=Tensor[(960), int16] */)
  };
  %718(%var_4991, %var_4992) /* ty=(Tensor[(12, 4, 10), uint8], Tensor[(5, 16, 12), int16], Tensor[(960), int16]) */
}

def @func_2904(%var_2903: Tensor[(6, 10, 3), uint16]) -> (Tensor[(6, 10, 3), bool], Tensor[(720), float32], Tensor[(5, 126), float32], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188, 1), int8]) {
  %738 = fn (%var_2879: Tensor[(6, 10, 3), uint16]) -> (Tensor[(6, 10, 3), bool], Tensor[(720), float32], Tensor[(5, 126), float32], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188, 1), int8]) {
    %719 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
    %720 = %719.0;
    %721 = cast(%var_2879, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
    %722 = shape_of(%720, dtype="int32") /* ty=Tensor[(3), int32] */;
    %723 = cast(%720, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
    %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %725 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 126), float32] */, dtype="float32") /* ty=Tensor[(5, 126), float32] */;
    %726 = reshape(%725, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float32] */;
    %727 = @func_1120(%726) /* ty=(Tensor[(3, 15, 14), float32], Tensor[(9, 10, 8), float32], Tensor[(720), float32]) */;
    %728 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
    %729 = cast(meta[relay.Constant][39] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %730 = cast(meta[relay.Constant][40] /* ty=Tensor[(1188, 1), int8] */, dtype="int8") /* ty=Tensor[(1188, 1), int8] */;
    %731 = reshape(%729, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %732 = reshape(%730, newshape=[9, 12, 11]) /* ty=Tensor[(9, 12, 11), int8] */;
    %733 = @func_636(%731, %732) /* ty=(Tensor[(9, 12, 11), int8], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(9, 12, 11), bool], Tensor[(6, 10, 3), float64]) */;
    %734 = not_equal(%723, %724) /* ty=Tensor[(6, 10, 3), bool] */;
    %735 = %727.2;
    %736 = %728.0;
    %737 = %733.1;
    (%734, %735, meta[relay.Constant][38] /* ty=Tensor[(5, 126), float32] */, %736, %737, meta[relay.Constant][39] /* ty=Tensor[(60), float64] */, meta[relay.Constant][40] /* ty=Tensor[(1188, 1), int8] */)
  };
  %738(%var_2903) /* ty=(Tensor[(6, 10, 3), bool], Tensor[(720), float32], Tensor[(5, 126), float32], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188, 1), int8]) */
}

def @func_3510() -> (Tensor[(6, 10, 3), float32],) {
  %739 = @func_2865() /* ty=Tensor[(6, 10, 3), float64] */;
  %740 = cast(%739, dtype="float32") /* ty=Tensor[(6, 10, 3), float32] */;
  %741 = asin(%740) /* ty=Tensor[(6, 10, 3), float32] */;
  (%741,)
}

def @func_2865() -> Tensor[(6, 10, 3), float64] {
  %742 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %742.0
}

def @func_2386() -> (Tensor[(6, 10, 3), float64],) {
  %743 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %744 = %743.1;
  (%744,)
}

def @func_7039() -> (Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) {
  %748 = fn () -> (Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) {
    %745 = @func_6666() /* ty=(Tensor[(6, 10, 3), uint16],) */;
    %746 = %745.0;
    %747 = @func_4230() /* ty=Tensor[(6, 10, 3), float64] */;
    (%746, %747)
  };
  %748() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) */
}

def @func_4203() -> (Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) {
  %749 = @func_3654() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) */;
  %750 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %751 = %749.1;
  %752 = %750.0;
  (%751, %752)
}

def @func_5026(%var_5022: Tensor[(6, 13, 11), float64], %var_5023: Tensor[(6, 13, 11), float64], %var_5024: Tensor[(96), float64], %var_5025: Tensor[(15, 4), float64]) -> (Tensor[(6, 13, 11), float64], Tensor[(60), float64], Tensor[(96), float64], Tensor[(15, 4), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float32]) {
  @func_5020(%var_5022, %var_5023, %var_5024, %var_5025) /* ty=(Tensor[(6, 13, 11), float64], Tensor[(60), float64], Tensor[(96), float64], Tensor[(15, 4), float64], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float32]) */
}

def @func_6378(%var_6377: float32) -> (Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], float32) {
  %759 = fn (%var_6372: float32) -> (Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], float32) {
    %753 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
    %754 = cast(%var_6372, dtype="float32") /* ty=float32 */;
    %755 = reshape(%754, newshape=[]) /* ty=float32 */;
    %756 = @func_3425(%755) /* ty=(Tensor[(16, 5, 9), float32], Tensor[(6, 10, 3), float64]) */;
    %757 = %753.0;
    %758 = %756.1;
    (%757, %758, %var_6372)
  };
  %759(%var_6377) /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64], float32) */
}

def @func_6940(%var_6939: Tensor[(9, 7, 7), float64]) -> Tensor[(9, 7, 7), float64] {
  %761 = fn (%var_6935: Tensor[(9, 7, 7), float64]) -> Tensor[(9, 7, 7), float64] {
    %760 = cast(%var_6935, dtype="float64") /* ty=Tensor[(9, 7, 7), float64] */;
    acos(%760) /* ty=Tensor[(9, 7, 7), float64] */
  };
  %761(%var_6939) /* ty=Tensor[(9, 7, 7), float64] */
}

def @func_5916(%var_5914: Tensor[(11, 15, 15), int32], %var_5915: Tensor[(11, 15, 15), int32]) -> (Tensor[(11, 15, 15), bool], Tensor[(6, 10, 3), float64]) {
  %769 = fn (%var_5899: Tensor[(11, 15, 15), int32], %var_5900: Tensor[(11, 15, 15), int32]) -> (Tensor[(11, 15, 15), bool], Tensor[(6, 10, 3), float64]) {
    %762 = cast(%var_5900, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
    %763 = shape_of(%var_5899, dtype="int32") /* ty=Tensor[(3), int32] */;
    %764 = cast(%var_5899, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
    %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %766 = @func_3654() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) */;
    %767 = not_equal(%764, %765) /* ty=Tensor[(11, 15, 15), bool] */;
    %768 = %766.0;
    (%767, %768)
  };
  %769(%var_5914, %var_5915) /* ty=(Tensor[(11, 15, 15), bool], Tensor[(6, 10, 3), float64]) */
}

def @func_5501() -> (Tensor[(6, 10, 3), uint8], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) {
  @func_5499() /* ty=(Tensor[(6, 10, 3), uint8], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) */
}

def @func_4166() -> (Tensor[(60), float64], Tensor[(6, 10, 3), float64]) {
  %774 = fn () -> (Tensor[(60), float64], Tensor[(6, 10, 3), float64]) {
    %770 = @func_2670() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) */;
    %771 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
    %772 = %770.3;
    %773 = %771.1;
    (%772, %773)
  };
  %774() /* ty=(Tensor[(60), float64], Tensor[(6, 10, 3), float64]) */
}

def @func_4230() -> Tensor[(6, 10, 3), float64] {
  %775 = @func_4165() /* ty=(Tensor[(60), float64], Tensor[(6, 10, 3), float64]) */;
  %775.1
}

def @func_8182(%var_8180: int32, %var_8181: Tensor[(600), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 1, 10), float32], int32, Tensor[(60, 12), int32], Tensor[(6, 3, 10), float32], Tensor[(600), float32]) {
  @func_8178(%var_8180, %var_8181) /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 1, 10), float32], int32, Tensor[(60, 12), int32], Tensor[(6, 3, 10), float32], Tensor[(600), float32]) */
}

def @func_4443(%var_4441: Tensor[(2, 15, 3), float32], %var_4442: Tensor[(630), float32]) -> (Tensor[(2, 15, 3), float32], Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(6, 10, 3), float64]) {
  %783 = fn (%var_4430: Tensor[(2, 15, 3), float32], %var_4435: Tensor[(630), float32]) -> (Tensor[(2, 15, 3), float32], Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(6, 10, 3), float64]) {
    %776 = cast(%var_4430, dtype="float32") /* ty=Tensor[(2, 15, 3), float32] */;
    %777 = cast(%var_4435, dtype="float32") /* ty=Tensor[(630), float32] */;
    %778 = reshape(%777, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float32] */;
    %779 = @func_1120(%778) /* ty=(Tensor[(3, 15, 14), float32], Tensor[(9, 10, 8), float32], Tensor[(720), float32]) */;
    %780 = tan(%776) /* ty=Tensor[(2, 15, 3), float32] */;
    %781 = %779.1;
    %782 = @func_3346() /* ty=Tensor[(6, 10, 3), float64] */;
    (%780, %781, %var_4435, %782)
  };
  %783(%var_4441, %var_4442) /* ty=(Tensor[(2, 15, 3), float32], Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(6, 10, 3), float64]) */
}

def @func_4928(%var_4907: Tensor[(720), float32], %var_4908: Tensor[(240), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 4, 10), float32], Tensor[(720), float32], Tensor[(240), float32]) {
  %784 = cast(%var_4907, dtype="float32") /* ty=Tensor[(720), float32] */;
  %785 = cast(%var_4908, dtype="float32") /* ty=Tensor[(240), float32] */;
  %786 = reshape(%784, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %787 = reshape(%785, newshape=[6, 4, 10]) /* ty=Tensor[(6, 4, 10), float32] */;
  %788 = @func_3794(%786, %787) /* ty=(Tensor[(14, 5, ?), uint8], Tensor[(70), float64], Tensor[(720), float32], Tensor[(6, 4, 10), float32]) */;
  %789 = @func_2405() /* ty=Tensor[(6, 10, 3), float64] */;
  %790 = %788.3;
  (%789, %790, %var_4907, %var_4908)
}

def @func_3346() -> Tensor[(6, 10, 3), float64] {
  %791 = @func_2950() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) */;
  %791.1
}

def @func_3428(%var_3426: float32) -> (Tensor[(16, 5, 9), float32], Tensor[(6, 10, 3), float64]) {
  @func_3425(%var_3426) /* ty=(Tensor[(16, 5, 9), float32], Tensor[(6, 10, 3), float64]) */
}

def @func_4969() -> Tensor[(11, 52), uint8] {
  %793 = fn () -> Tensor[(11, 52), uint8] {
    %792 = @func_2670() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(3, 20), float64], Tensor[(11, 52), uint8], Tensor[(60), float64]) */;
    %792.2
  };
  %793() /* ty=Tensor[(11, 52), uint8] */
}

def @func_5809(%var_5807: Tensor[(11, 52), uint8]) -> (Tensor[(11, 52), int8], Tensor[(6, 10, 3), float64]) {
  @func_5806(%var_5807) /* ty=(Tensor[(11, 52), int8], Tensor[(6, 10, 3), float64]) */
}

def @func_5557() -> (Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) {
  %794 = @func_4203() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) */;
  %795 = @func_5251() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %796 = %794.1;
  %797 = %795.0;
  (%796, %797)
}

def @func_2974() -> (Tensor[(6, 1, 10), float32],) {
  %798 = @func_2854() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %799 = %798.0;
  (%799,)
}

def @func_6502() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) {
  @func_6500() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) */
}

def @func_2950() -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64]) {
  %800 = @func_2386() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %801 = @func_2865() /* ty=Tensor[(6, 10, 3), float64] */;
  %802 = %800.0;
  (%801, %802)
}

def @func_2988() -> (Tensor[(6, 1, 10), float32],) {
  @func_2986() /* ty=(Tensor[(6, 1, 10), float32],) */
}

def @func_640(%var_638: Tensor[(60), float64], %var_639: Tensor[(9, 12, 11), int8]) -> (Tensor[(9, 12, 11), int8], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(9, 12, 11), bool], Tensor[(6, 10, 3), float64]) {
  @func_636(%var_638, %var_639) /* ty=(Tensor[(9, 12, 11), int8], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(9, 12, 11), bool], Tensor[(6, 10, 3), float64]) */
}

def @func_636(%var_599: Tensor[(60), float64], %var_605: Tensor[(9, 12, 11), int8]) -> (Tensor[(9, 12, 11), int8], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float64], Tensor[(9, 12, 11), bool], Tensor[(6, 10, 3), float64]) {
  %803 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 12, 11), int8] */, dtype="int8") /* ty=Tensor[(9, 12, 11), int8] */;
  %804 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(9, 12, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %805 = cast(meta[relay.Constant][41] /* ty=Tensor[(9, 12, 11), int8] */, dtype="int8") /* ty=Tensor[(9, 12, 11), int8] */;
  %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %807 = cast(%var_599, dtype="float64") /* ty=Tensor[(60), float64] */;
  %808 = reshape(%807, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %809 = cast(%var_599, dtype="float64") /* ty=Tensor[(60), float64] */;
  %810 = reshape(%809, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %811 = cast(%var_599, dtype="float64") /* ty=Tensor[(60), float64] */;
  %812 = reshape(%811, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %813 = cast(%var_599, dtype="float64") /* ty=Tensor[(60), float64] */;
  %814 = reshape(%813, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %815 = cast(%var_605, dtype="bool") /* ty=Tensor[(9, 12, 11), bool] */;
  %816 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(9, 12, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %817 = cast(meta[relay.Constant][41] /* ty=Tensor[(9, 12, 11), int8] */, dtype="bool") /* ty=Tensor[(9, 12, 11), bool] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %819 = greater(%817, %818) /* ty=Tensor[(9, 12, 11), bool] */;
  %820 = cast(%819, dtype="float32") /* ty=Tensor[(9, 12, 11), float32] */;
  %821 = cosh(%820) /* ty=Tensor[(9, 12, 11), float32] */;
  %822 = cast(%821, dtype="float64") /* ty=Tensor[(9, 12, 11), float64] */;
  %823 = log(%822) /* ty=Tensor[(9, 12, 11), float64] */;
  %824 = cast(meta[relay.Constant][41] /* ty=Tensor[(9, 12, 11), int8] */, dtype="bool") /* ty=Tensor[(9, 12, 11), bool] */;
  %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%823, dtype="bool") /* ty=Tensor[(9, 12, 11), bool] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %828 = cast(%var_599, dtype="float64") /* ty=Tensor[(60), float64] */;
  %829 = reshape(%828, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %830 = multiply(%805, %806) /* ty=Tensor[(9, 12, 11), int8] */;
  %831 = @func_293(%808) /* ty=Tensor[(6, 10, 3), float64] */;
  %832 = @func_293(%810) /* ty=Tensor[(6, 10, 3), float64] */;
  %833 = @func_293(%812) /* ty=Tensor[(6, 10, 3), float64] */;
  %834 = @func_293(%814) /* ty=Tensor[(6, 10, 3), float64] */;
  %835 = less_equal(%826, %827) /* ty=Tensor[(9, 12, 11), bool] */;
  %836 = @func_293(%829) /* ty=Tensor[(6, 10, 3), float64] */;
  (%830, %831, %var_599, %832, %833, %834, %835, %836)
}

def @func_3489(%var_3448: Tensor[(5, 16, 12), int16]) -> (Tensor[(5, 16, 12), int16], Tensor[(6, 10, 3), float64]) {
  %837 = cast(%var_3448, dtype="int16") /* ty=Tensor[(5, 16, 12), int16] */;
  %838 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(5, 16, 12), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(meta[relay.Constant][43] /* ty=Tensor[(5, 16, 12), int16] */, dtype="int16") /* ty=Tensor[(5, 16, 12), int16] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %841 = left_shift(%839, %840) /* ty=Tensor[(5, 16, 12), int16] */;
  %842 = @func_3054() /* ty=Tensor[(6, 10, 3), float64] */;
  (%841, %842)
}

def @func_4016() -> (Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) {
  @func_4014() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) */
}

def @func_5069() -> (Tensor[(6, 10, 3), float64],) {
  %843 = @func_4014() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) */;
  %844 = %843.1;
  (%844,)
}

def @func_5559() -> (Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) {
  @func_5557() /* ty=(Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float64]) */
}

def @func_3880() -> Tensor[(6, 10, 3), float64] {
  %845 = fn () -> Tensor[(6, 10, 3), float64] {
    @func_2865() /* ty=Tensor[(6, 10, 3), float64] */
  };
  %845() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_3794(%var_3748: Tensor[(720), float32], %var_3786: Tensor[(6, 4, 10), float32]) -> (Tensor[(14, 5, ?), uint8], Tensor[(70), float64], Tensor[(720), float32], Tensor[(6, 4, 10), float32]) {
  %846 = cast(meta[relay.Constant][44] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %847 = cast(%var_3748, dtype="float32") /* ty=Tensor[(720), float32] */;
  %848 = reshape(%846, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), float64] */;
  %849 = reshape(%847, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %850 = @func_1622(%848, %849) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(14, 5, ?), uint8], Tensor[(14, 5, 1), float64], Tensor[(14, 5, 1), float64]) */;
  %851 = @func_2854() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %852 = %851.0;
  %853 = cast(%852, dtype="float32") /* ty=Tensor[(6, 1, 10), float32] */;
  %854 = cast(%var_3786, dtype="float32") /* ty=Tensor[(6, 4, 10), float32] */;
  %855 = %850.2;
  %856 = floor_mod(%853, %854) /* ty=Tensor[(6, 4, 10), float32] */;
  (%855, meta[relay.Constant][44] /* ty=Tensor[(70), float64] */, %var_3748, %856)
}

def @func_5398(%var_5391: Tensor[(900), float32]) -> (Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32], Tensor[(6, 1, 10), float32], Tensor[(6, 15, 10), int8], Tensor[(900), float32]) {
  %857 = @func_4354() /* ty=(Tensor[(6, 10, 3), float64],) */;
  %858 = @func_4203() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) */;
  %859 = cast(%var_5391, dtype="float32") /* ty=Tensor[(900), float32] */;
  %860 = reshape(%859, newshape=[6, 15, 10]) /* ty=Tensor[(6, 15, 10), float32] */;
  %861 = %857.0;
  %862 = @func_3725() /* ty=Tensor[(6, 10, 3), float32] */;
  %863 = %858.0;
  %864 = @func_4347(%860) /* ty=Tensor[(6, 15, 10), int8] */;
  (%861, %862, %863, %864, %var_5391)
}

def @func_7356(%var_7354: Tensor[(7, 5, 7), float64], %var_7355: Tensor[(7, 5, 7), float64]) -> Tensor[(7, 5, 7), float64] {
  %869 = fn (%var_7344: Tensor[(7, 5, 7), float64], %var_7345: Tensor[(7, 5, 7), float64]) -> Tensor[(7, 5, 7), float64] {
    %865 = cast(%var_7345, dtype="float64") /* ty=Tensor[(7, 5, 7), float64] */;
    %866 = shape_of(%var_7344, dtype="int32") /* ty=Tensor[(3), int32] */;
    %867 = cast(%var_7344, dtype="float64") /* ty=Tensor[(7, 5, 7), float64] */;
    %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    mod(%867, %868) /* ty=Tensor[(7, 5, 7), float64] */
  };
  %869(%var_7354, %var_7355) /* ty=Tensor[(7, 5, 7), float64] */
}

def @func_4232() -> Tensor[(6, 10, 3), float64] {
  @func_4230() /* ty=Tensor[(6, 10, 3), float64] */
}

def @func_4355() -> (Tensor[(6, 10, 3), float64],) {
  %872 = fn () -> (Tensor[(6, 10, 3), float64],) {
    %870 = @func_3603() /* ty=(Tensor[(6, 10, 3), float64],) */;
    %871 = %870.0;
    (%871,)
  };
  %872() /* ty=(Tensor[(6, 10, 3), float64],) */
}

def @func_1915(%var_1913: Tensor[(13, 11, 4), uint8], %var_1914: Tensor[(3, 20), float64]) -> (Tensor[(13, 11, 4), bool], Tensor[(630), float32], Tensor[(96), float64], Tensor[(3, 20), float64], Tensor[(13, 11, 4), float64]) {
  %886 = fn (%var_1899: Tensor[(13, 11, 4), uint8], %var_1908: Tensor[(3, 20), float64]) -> (Tensor[(13, 11, 4), bool], Tensor[(630), float32], Tensor[(96), float64], Tensor[(3, 20), float64], Tensor[(13, 11, 4), float64]) {
    %873 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 11, 4), uint8] */, dtype="bool") /* ty=Tensor[(13, 11, 4), bool] */;
    %874 = shape_of(%var_1899, dtype="int32") /* ty=Tensor[(3), int32] */;
    %875 = cast(%var_1899, dtype="bool") /* ty=Tensor[(13, 11, 4), bool] */;
    %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %877 = cast(meta[relay.Constant][46] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
    %878 = cast(%var_1908, dtype="float64") /* ty=Tensor[(3, 20), float64] */;
    %879 = reshape(%877, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float64] */;
    %880 = reshape(%878, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %881 = @func_1773(%879, %880) /* ty=(Tensor[(9, 10, 8), float32], Tensor[(630), float32], Tensor[(9, 10, 8), float32], Tensor[(70), float64], Tensor[(8, 2, 6), bool], Tensor[(8, 2, 6), float64], Tensor[(6, 10, 3), float64], Tensor[(60), float64], Tensor[(1188), int8]) */;
    %882 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 11, 4), uint8] */, dtype="float64") /* ty=Tensor[(13, 11, 4), float64] */;
    %883 = greater(%875, %876) /* ty=Tensor[(13, 11, 4), bool] */;
    %884 = %881.1;
    %885 = atanh(%882) /* ty=Tensor[(13, 11, 4), float64] */;
    (%883, %884, meta[relay.Constant][46] /* ty=Tensor[(96), float64] */, %var_1908, %885)
  };
  %886(%var_1913, %var_1914) /* ty=(Tensor[(13, 11, 4), bool], Tensor[(630), float32], Tensor[(96), float64], Tensor[(3, 20), float64], Tensor[(13, 11, 4), float64]) */
}

def @func_7745() -> Tensor[(6, ?, 10), uint8] {
  @func_7743() /* ty=Tensor[(6, ?, 10), uint8] */
}

def @func_5294(%var_5274: Tensor[(2, 10, 4), uint64], %var_5275: Tensor[(2, 10, 4), uint64], %var_5286: Tensor[(2, 10, 4), float64]) -> (Tensor[(2, 10, 4), float32], Tensor[(2, 10, 4), uint8]) {
  %887 = cast(%var_5275, dtype="uint64") /* ty=Tensor[(2, 10, 4), uint64] */;
  %888 = shape_of(%var_5274, dtype="int32") /* ty=Tensor[(3), int32] */;
  %889 = cast(%var_5274, dtype="uint64") /* ty=Tensor[(2, 10, 4), uint64] */;
  %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %891 = add(%889, %890) /* ty=Tensor[(2, 10, 4), uint64] */;
  %892 = cast(%891, dtype="float64") /* ty=Tensor[(2, 10, 4), float64] */;
  %893 = log(%892) /* ty=Tensor[(2, 10, 4), float64] */;
  %894 = cast(%893, dtype="float32") /* ty=Tensor[(2, 10, 4), float32] */;
  %895 = cast(%var_5286, dtype="uint8") /* ty=Tensor[(2, 10, 4), uint8] */;
  %896 = shape_of(%893, dtype="int32") /* ty=Tensor[(3), int32] */;
  %897 = cast(%893, dtype="uint8") /* ty=Tensor[(2, 10, 4), uint8] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %899 = tan(%894) /* ty=Tensor[(2, 10, 4), float32] */;
  %900 = bitwise_and(%897, %898) /* ty=Tensor[(2, 10, 4), uint8] */;
  (%899, %900)
}

def @func_4961() -> (Tensor[(6, 1, 10), float64],) {
  %905 = fn () -> (Tensor[(6, 1, 10), float64],) {
    %901 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
    %902 = %901.0;
    %903 = cast(%902, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
    %904 = exp(%903) /* ty=Tensor[(6, 1, 10), float64] */;
    (%904,)
  };
  %905() /* ty=(Tensor[(6, 1, 10), float64],) */
}

def @func_4807() -> (Tensor[(14, 14, 14), float32], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float32], Tensor[(6, ?, 10), uint8], Tensor[(6, 10, 3), bool]) {
  %930 = fn () -> (Tensor[(14, 14, 14), float32], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float32], Tensor[(6, ?, 10), uint8], Tensor[(6, 10, 3), bool]) {
    %906 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 14, 14), float32] */, dtype="float32") /* ty=Tensor[(14, 14, 14), float32] */;
    %907 = @func_2836() /* ty=(Tensor[(6, 10, 3), uint16],) */;
    %908 = @func_3107() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 10, 3), float32]) */;
    %909 = @func_2498() /* ty=(Tensor[(6, 1, 10), float32],) */;
    %910 = %909.0;
    %911 = cast(%910, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
    %912 = log2(%911) /* ty=Tensor[(6, 1, 10), float64] */;
    %913 = cast(%910, dtype="uint8") /* ty=Tensor[(6, 1, 10), uint8] */;
    %914 = shape_of(%912, dtype="int32") /* ty=Tensor[(3), int32] */;
    %915 = cast(%912, dtype="uint8") /* ty=Tensor[(6, 1, 10), uint8] */;
    %916 = dyn.reshape(%913, %914, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %917 = @func_3654() /* ty=(Tensor[(6, 10, 3), float64], Tensor[(6, 1, 10), float32]) */;
    %918 = %917.0;
    %919 = @func_4354() /* ty=(Tensor[(6, 10, 3), float64],) */;
    %920 = %919.0;
    %921 = cast(%920, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
    %922 = shape_of(%918, dtype="int32") /* ty=Tensor[(3), int32] */;
    %923 = cast(%918, dtype="bool") /* ty=Tensor[(6, 10, 3), bool] */;
    %924 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %925 = sigmoid(%906) /* ty=Tensor[(14, 14, 14), float32] */;
    %926 = %907.0;
    %927 = %908.1;
    %928 = add(%915, %916) /* ty=Tensor[(6, ?, 10), uint8] */;
    %929 = less(%923, %924) /* ty=Tensor[(6, 10, 3), bool] */;
    (%925, %926, %927, %928, %929)
  };
  %930() /* ty=(Tensor[(14, 14, 14), float32], Tensor[(6, 10, 3), uint16], Tensor[(6, 10, 3), float32], Tensor[(6, ?, 10), uint8], Tensor[(6, 10, 3), bool]) */
}

def @func_4205() -> (Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) {
  @func_4203() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), uint16]) */
}

def @func_5499() -> (Tensor[(6, 10, 3), uint8], Tensor[(6, 1, 10), float32], Tensor[(6, 1, 10), float32]) {
  %931 = @func_5265() /* ty=(Tensor[(6, 10, 3), uint16],) */;
  %932 = %931.0;
  %933 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 10, 3), uint16] */, dtype="uint8") /* ty=Tensor[(6, 10, 3), uint8] */;
  %934 = shape_of(%932, dtype="int32") /* ty=Tensor[(3), int32] */;
  %935 = cast(%932, dtype="uint8") /* ty=Tensor[(6, 10, 3), uint8] */;
  %936 = dyn.reshape(%933, %934, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %937 = @func_2217() /* ty=(Tensor[(6, 1, 10), float32], Tensor[(6, 10, 3), float64]) */;
  %938 = @func_2974() /* ty=(Tensor[(6, 1, 10), float32],) */;
  %939 = right_shift(%935, %936) /* ty=Tensor[(6, 10, 3), uint8] */;
  %940 = %937.0;
  %941 = %938.0;
  (%939, %940, %941)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

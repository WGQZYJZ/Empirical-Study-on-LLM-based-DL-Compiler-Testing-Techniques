==========mod==========
#[version = "0.0.5"]
def @func_3934() -> (Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) {
  %0 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(640), uint8] */, dtype="uint8") /* ty=Tensor[(640), uint8] */;
  %4 = reshape(%3, newshape=[640]) /* ty=Tensor[(640), uint8] */;
  %5 = @func_3599(%4) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) */;
  %6 = acosh(%2) /* ty=Tensor[(10, 3, 7), float32] */;
  %7 = %5.1;
  (%6, %7, meta[relay.Constant][0] /* ty=Tensor[(640), uint8] */)
}

def @func_4619() -> Tensor[(10, 66), int32] {
  %8 = @func_4575() /* ty=(Tensor[(96, 4), float32], Tensor[(6, 11, 10), bool], Tensor[(10, 66), int32]) */;
  %8.2
}

def @func_5225(%var_5190: Tensor[(10, 66), int32], %var_5204: Tensor[(384), int32], %var_5218: Tensor[(10, 66), float64]) -> (Tensor[(10, 3, 7), float32], Tensor[(3, 10, 7), bool], Tensor[(384), int32], Tensor[(10, 66), bool]) {
  %9 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
  %10 = %9.0;
  %11 = cast(%10, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %12 = cast(%10, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %13 = cast(%10, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %14 = cast(%var_5204, dtype="int32") /* ty=Tensor[(384), int32] */;
  %15 = @func_4575() /* ty=(Tensor[(96, 4), float32], Tensor[(6, 11, 10), bool], Tensor[(10, 66), int32]) */;
  %16 = %15.2;
  %17 = cast(%16, dtype="int32") /* ty=Tensor[(10, 66), int32] */;
  %18 = reshape(%11, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
  %19 = reshape(%12, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
  %20 = reshape(%13, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
  %21 = reshape(%14, newshape=[384]) /* ty=Tensor[(384), int32] */;
  %22 = reshape(%17, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %23 = @func_1360(%18, %19, %20, %21, %22) /* ty=(Tensor[(3, 10, 7), float64], Tensor[(3, 10, 7), bool], Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(6, 11, 10), bool], Tensor[(660), int32]) */;
  %24 = cast(%var_5190, dtype="uint64") /* ty=Tensor[(10, 66), uint64] */;
  %25 = shape_of(%16, dtype="int32") /* ty=Tensor[(2), int32] */;
  %26 = cast(%16, dtype="uint64") /* ty=Tensor[(10, 66), uint64] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %28 = multiply(%26, %27) /* ty=Tensor[(10, 66), uint64] */;
  %29 = cast(%28, dtype="float32") /* ty=Tensor[(10, 66), float32] */;
  %30 = log10(%29) /* ty=Tensor[(10, 66), float32] */;
  %31 = cast(%16, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
  %32 = shape_of(%30, dtype="int32") /* ty=Tensor[(2), int32] */;
  %33 = cast(%30, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %35 = power(%33, %34) /* ty=Tensor[(10, 66), float64] */;
  %36 = cast(%var_5218, dtype="bool") /* ty=Tensor[(10, 66), bool] */;
  %37 = shape_of(%35, dtype="int32") /* ty=Tensor[(2), int32] */;
  %38 = cast(%35, dtype="bool") /* ty=Tensor[(10, 66), bool] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %40 = %23.1;
  %41 = greater_equal(%38, %39) /* ty=Tensor[(10, 66), bool] */;
  (%10, %40, %var_5204, %41)
}

def @func_3599(%var_3595: Tensor[(640), uint8]) -> (Tensor[(10, 3, 7), float64], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) {
  %42 = cast(%var_3595, dtype="uint8") /* ty=Tensor[(640), uint8] */;
  %43 = cast(%var_3595, dtype="uint8") /* ty=Tensor[(640), uint8] */;
  %44 = reshape(%42, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint8] */;
  %45 = reshape(%43, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint8] */;
  %46 = @func_3487(%44, %45) /* ty=(Tensor[(16, 8, 5), bool],) */;
  %47 = @func_3505() /* ty=Tensor[(10, 3, 7), float64] */;
  %48 = %46.0;
  (%47, %48, %var_3595)
}

def @func_1360(%var_1307: Tensor[(3, 10, 7), float64], %var_1308: Tensor[(3, 10, 7), float64], %var_1312: Tensor[(3, 10, 7), float64], %var_1325: Tensor[(384), int32], %var_1340: Tensor[(660), int32]) -> (Tensor[(3, 10, 7), float64], Tensor[(3, 10, 7), bool], Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(6, 11, 10), bool], Tensor[(660), int32]) {
  %49 = cast(%var_1308, dtype="float64") /* ty=Tensor[(3, 10, 7), float64] */;
  %50 = shape_of(%var_1307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%var_1307, dtype="float64") /* ty=Tensor[(3, 10, 7), float64] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %53 = cast(%var_1312, dtype="bool") /* ty=Tensor[(3, 10, 7), bool] */;
  %54 = shape_of(%var_1308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %55 = cast(%var_1308, dtype="bool") /* ty=Tensor[(3, 10, 7), bool] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %57 = cast(4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %58 = cast(%var_1325, dtype="int32") /* ty=Tensor[(384), int32] */;
  %59 = reshape(%57, newshape=[]) /* ty=int32 */;
  %60 = reshape(%58, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), int32] */;
  %61 = cast(%var_1340, dtype="int32") /* ty=Tensor[(660), int32] */;
  %62 = reshape(%61, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int32] */;
  %63 = mod(%51, %52) /* ty=Tensor[(3, 10, 7), float64] */;
  %64 = logical_and(%55, %56) /* ty=Tensor[(3, 10, 7), bool] */;
  %65 = @func_588(%59, %60) /* ty=Tensor[(6, 4, 16), float32] */;
  %66 = @func_430(%62) /* ty=Tensor[(6, 11, 10), bool] */;
  (%63, %64, %65, 4 /* ty=int32 */, %var_1325, %66, %var_1340)
}

def @func_3828(%var_3816: Tensor[(360), float64], %var_3818: Tensor[(384), int64]) -> (Tensor[(10, 3, 7), float32], Tensor[(4, 9, 5), float64], Tensor[(360), float64], Tensor[(48, 1), int64], Tensor[(384), int64], Tensor[(2730), float64], Tensor[(10, 3, 7), float32]) {
  %67 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
  %68 = cast(%var_3816, dtype="float64") /* ty=Tensor[(360), float64] */;
  %69 = cast(meta[relay.Constant][1] /* ty=Tensor[(48, 1), int64] */, dtype="int64") /* ty=Tensor[(48, 1), int64] */;
  %70 = cast(%var_3818, dtype="int64") /* ty=Tensor[(384), int64] */;
  %71 = cast(%var_3816, dtype="float64") /* ty=Tensor[(360), float64] */;
  %72 = cast(meta[relay.Constant][2] /* ty=Tensor[(2730), float64] */, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %73 = reshape(%68, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float64] */;
  %74 = reshape(%69, newshape=[48]) /* ty=Tensor[(48), int64] */;
  %75 = reshape(%70, newshape=[1, 384]) /* ty=Tensor[(1, 384), int64] */;
  %76 = reshape(%71, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float64] */;
  %77 = reshape(%72, newshape=[2730]) /* ty=Tensor[(2730), float64] */;
  %78 = @func_3084(%73, %74, %75, %76, %77) /* ty=(Tensor[(4, 9, 5), float64], Tensor[(48), int64], Tensor[(1, 384), int64], Tensor[(198), float64], int32, int32, Tensor[(3, 10, 12), uint16], Tensor[(96, 4), int32], Tensor[(2730), float64]) */;
  %79 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %80 = %67.0;
  %81 = %78.0;
  %82 = %79.0;
  (%80, %81, %var_3816, meta[relay.Constant][1] /* ty=Tensor[(48, 1), int64] */, %var_3818, meta[relay.Constant][2] /* ty=Tensor[(2730), float64] */, %82)
}

def @func_4369() -> (Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32]) {
  %83 = @func_3983() /* ty=(Tensor[(96, 4), float32],) */;
  %84 = @func_3505() /* ty=Tensor[(10, 3, 7), float64] */;
  %85 = %83.0;
  (%84, %85)
}

def @func_6940() -> (Tensor[(10, 3, 7), float32],) {
  %86 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %87 = %86.0;
  (%87,)
}

def @func_4380() -> (Tensor[(96, 4), float32], Tensor[(2, 9, 11), float64], Tensor[(18), float64], Tensor[(198), float64]) {
  %88 = @func_4369() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32]) */;
  %89 = cast(meta[relay.Constant][3] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %90 = cast(meta[relay.Constant][4] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %91 = reshape(%89, newshape=[2, 9, 1]) /* ty=Tensor[(2, 9, 1), float64] */;
  %92 = reshape(%90, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), float64] */;
  %93 = %88.1;
  %94 = @func_514(%91, %92) /* ty=Tensor[(2, 9, 11), float64] */;
  (%93, %94, meta[relay.Constant][3] /* ty=Tensor[(18), float64] */, meta[relay.Constant][4] /* ty=Tensor[(198), float64] */)
}

def @func_3698() -> Tensor[(10, 3, 7), float64] {
  %95 = @func_3192() /* ty=Tensor[(10, 3, 7), float32] */;
  %96 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 3, 7), float32] */, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%95, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%98, %99) /* ty=Tensor[(10, 3, 7), float64] */
}

def @func_588(%var_544: int32, %var_545: Tensor[(6, 4, 16), int32]) -> Tensor[(6, 4, 16), float32] {
  %100 = cast(%var_544, dtype="int32") /* ty=int32 */;
  %101 = cast(%var_545, dtype="int32") /* ty=Tensor[(6, 4, 16), int32] */;
  %102 = bitwise_and(%100, %101) /* ty=Tensor[(6, 4, 16), int32] */;
  %103 = cast(%var_544, dtype="float32") /* ty=float32 */;
  %104 = cast(%102, dtype="float32") /* ty=Tensor[(6, 4, 16), float32] */;
  divide(%103, %104) /* ty=Tensor[(6, 4, 16), float32] */
}

def @func_4260() -> (Tensor[(16, 8, 5), float64], Tensor[(10, 3, 7), float32]) {
  %105 = @func_3934() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) */;
  %106 = %105.1;
  %107 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 8, 5), bool] */, dtype="float64") /* ty=Tensor[(16, 8, 5), float64] */;
  %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%106, dtype="float64") /* ty=Tensor[(16, 8, 5), float64] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %111 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %112 = mod(%109, %110) /* ty=Tensor[(16, 8, 5), float64] */;
  %113 = %111.0;
  (%112, %113)
}

def @func_4785(%var_4778: Tensor[(3, 5, 11), float64]) -> (Tensor[(3, 5, 11), float64], Tensor[(10, 3, 7), float32]) {
  %114 = cast(%var_4778, dtype="float64") /* ty=Tensor[(3, 5, 11), float64] */;
  %115 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
  %116 = acosh(%114) /* ty=Tensor[(3, 5, 11), float64] */;
  %117 = %115.0;
  (%116, %117)
}

def @func_4575() -> (Tensor[(96, 4), float32], Tensor[(6, 11, 10), bool], Tensor[(10, 66), int32]) {
  %118 = @func_4151() /* ty=(Tensor[(96, 4), float32],) */;
  %119 = cast(meta[relay.Constant][7] /* ty=Tensor[(10, 66), int32] */, dtype="int32") /* ty=Tensor[(10, 66), int32] */;
  %120 = reshape(%119, newshape=[330, 2]) /* ty=Tensor[(330, 2), int32] */;
  %121 = @func_482(%120) /* ty=(Tensor[(6, 11, 7), float32], Tensor[(6, 11, 10), bool], Tensor[(330, 2), int32], Tensor[(6, 11, 10), bool]) */;
  %122 = %118.0;
  %123 = %121.3;
  (%122, %123, meta[relay.Constant][7] /* ty=Tensor[(10, 66), int32] */)
}

def @func_5298() -> (Tensor[(10, 3, 7), uint16],) {
  %124 = @func_4078() /* ty=Tensor[(10, 3, 7), uint16] */;
  (%124,)
}

def @func_1103(%var_1084: Tensor[(96, 4), int32]) -> (Tensor[(4, 12, 4), float32], Tensor[(6, 4, 16), float32], int32, Tensor[(96, 4), int32]) {
  %125 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 12, 4), float32] */, dtype="float32") /* ty=Tensor[(4, 12, 4), float32] */;
  %126 = asinh(%125) /* ty=Tensor[(4, 12, 4), float32] */;
  %127 = cast(%126, dtype="float32") /* ty=Tensor[(4, 12, 4), float32] */;
  %128 = cast(6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %129 = cast(%var_1084, dtype="int32") /* ty=Tensor[(96, 4), int32] */;
  %130 = reshape(%128, newshape=[]) /* ty=int32 */;
  %131 = reshape(%129, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), int32] */;
  %132 = sinh(%127) /* ty=Tensor[(4, 12, 4), float32] */;
  %133 = @func_588(%130, %131) /* ty=Tensor[(6, 4, 16), float32] */;
  (%132, %133, 6 /* ty=int32 */, %var_1084)
}

def @func_5759() -> (Tensor[(10, 3, 7), float32],) {
  %134 = @func_3192() /* ty=Tensor[(10, 3, 7), float32] */;
  (%134,)
}

def @func_3983() -> (Tensor[(96, 4), float32],) {
  %135 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
  %136 = %135.2;
  %137 = cast(%136, dtype="float32") /* ty=Tensor[(96, 4), float32] */;
  %138 = exp(%137) /* ty=Tensor[(96, 4), float32] */;
  (%138,)
}

def @func_6525() -> Tensor[(10, 66), int32] {
  @func_5031() /* ty=Tensor[(10, 66), int32] */
}

def @func_2102(%var_2071: Tensor[(16, 15, 7), int16], %var_2078: Tensor[(16, 15, 7), int16]) -> Tensor[(16, 15, 7), float32] {
  %139 = cast(%var_2071, dtype="int16") /* ty=Tensor[(16, 15, 7), int16] */;
  %140 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(16, 15, 7), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 15, 7), int16] */, dtype="int16") /* ty=Tensor[(16, 15, 7), int16] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %143 = add(%141, %142) /* ty=Tensor[(16, 15, 7), int16] */;
  %144 = cast(%var_2078, dtype="int16") /* ty=Tensor[(16, 15, 7), int16] */;
  %145 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%143, dtype="int16") /* ty=Tensor[(16, 15, 7), int16] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %148 = maximum(%146, %147) /* ty=Tensor[(16, 15, 7), int16] */;
  %149 = cast(%148, dtype="float32") /* ty=Tensor[(16, 15, 7), float32] */;
  rsqrt(%149) /* ty=Tensor[(16, 15, 7), float32] */
}

def @func_5692(%var_5686: Tensor[(96, 4), float32]) -> Tensor[(96, 4), bool] {
  %150 = @func_5449() /* ty=(Tensor[(96, 4), float32],) */;
  %151 = %150.0;
  %152 = cast(%var_5686, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %153 = shape_of(%151, dtype="int32") /* ty=Tensor[(2), int32] */;
  %154 = cast(%151, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  greater(%154, %155) /* ty=Tensor[(96, 4), bool] */
}

def @func_6105(%var_6032: Tensor[(2730), float64], %var_6033: Tensor[(48, 8), int32], %var_6090: Tensor[(2730), bool]) -> (Tensor[(3, 9, 2), float64], Tensor[(384), int32], Tensor[(48, 8), int32], Tensor[(2730), int8], Tensor[(2730), uint32], Tensor[(2730), float64]) {
  %156 = cast(%var_6032, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %157 = cast(%var_6033, dtype="int32") /* ty=Tensor[(48, 8), int32] */;
  %158 = reshape(%156, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), float64] */;
  %159 = reshape(%157, newshape=[384]) /* ty=Tensor[(384), int32] */;
  %160 = @func_2737(%158, %159) /* ty=(Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(96, 4), int32], Tensor[(14, 15, 13), float64]) */;
  %161 = cast(%var_6032, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %162 = sin(%161) /* ty=Tensor[(2730), float32] */;
  %163 = cast(%var_6032, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %164 = shape_of(%162, dtype="int32") /* ty=Tensor[(1), int32] */;
  %165 = cast(%162, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?), int8] */;
  %167 = cast(meta[relay.Constant][10] /* ty=Tensor[(2730), float64] */, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %168 = shape_of(%var_6032, dtype="int32") /* ty=Tensor[(1), int32] */;
  %169 = cast(%var_6032, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?), bool] */;
  %171 = logical_or(%169, %170) /* ty=Tensor[(2730), bool] */;
  %172 = cast(%var_6090, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %173 = shape_of(%171, dtype="int32") /* ty=Tensor[(1), int32] */;
  %174 = cast(%171, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %176 = cast(%162, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %177 = @func_4640() /* ty=Tensor[(3, 9, 2), float64] */;
  %178 = %160.2;
  %179 = multiply(%165, %166) /* ty=Tensor[(2730), int8] */;
  %180 = add(%174, %175) /* ty=Tensor[(2730), uint32] */;
  %181 = atanh(%176) /* ty=Tensor[(2730), float64] */;
  (%177, %178, %var_6033, %179, %180, %181)
}

def @func_6469(%var_6451: Tensor[(6, 12, 11), int32], %var_6452: Tensor[(6, 12, 11), int32]) -> Tensor[(6, 12, 11), int32] {
  %182 = cast(%var_6452, dtype="int32") /* ty=Tensor[(6, 12, 11), int32] */;
  %183 = shape_of(%var_6451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%var_6451, dtype="int32") /* ty=Tensor[(6, 12, 11), int32] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  add(%184, %185) /* ty=Tensor[(6, 12, 11), int32] */
}

def @func_3192() -> Tensor[(10, 3, 7), float32] {
  %186 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %187 = %186.0;
  %188 = cast(%187, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %189 = rsqrt(%188) /* ty=Tensor[(10, 3, 7), float32] */;
  %190 = cast(%189, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %191 = exp(%190) /* ty=Tensor[(10, 3, 7), float32] */;
  %192 = cast(%191, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  tan(%192) /* ty=Tensor[(10, 3, 7), float32] */
}

def @func_5449() -> (Tensor[(96, 4), float32],) {
  %193 = @func_4369() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32]) */;
  %194 = %193.1;
  (%194,)
}

def @func_6782(%var_6753: Tensor[(10, 3, 7), float32]) -> Tensor[(10, 3, 7), bool] {
  %195 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %196 = %195.0;
  %197 = cast(%var_6753, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %198 = shape_of(%196, dtype="int32") /* ty=Tensor[(3), int32] */;
  %199 = cast(%196, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%199, %200) /* ty=Tensor[(10, 3, 7), bool] */
}

def @func_7027(%var_6975: Tensor[(360), float64], %var_6976: Tensor[(48), int64], %var_6977: Tensor[(384), int64], %var_6978: Tensor[(2730), float64]) -> (Tensor[(16, 8, 5), float64], Tensor[(198), float64], Tensor[(210), float32], Tensor[(360), float64], Tensor[(48), int64], Tensor[(384), int64], Tensor[(2730), float64], Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), float64], Tensor[(10, 66), int32], Tensor[(96, 4), int64], Tensor[(16, 15, 7), float32], Tensor[(1680), int16], Tensor[(96, 4), float64]) {
  %201 = @func_5989() /* ty=(Tensor[(16, 8, 5), float64],) */;
  %202 = @func_4380() /* ty=(Tensor[(96, 4), float32], Tensor[(2, 9, 11), float64], Tensor[(18), float64], Tensor[(198), float64]) */;
  %203 = @func_6018() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %204 = @func_4260() /* ty=(Tensor[(16, 8, 5), float64], Tensor[(10, 3, 7), float32]) */;
  %205 = @func_5449() /* ty=(Tensor[(96, 4), float32],) */;
  %206 = %205.0;
  %207 = cast(meta[relay.Constant][11] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %208 = cast(%var_6975, dtype="float64") /* ty=Tensor[(360), float64] */;
  %209 = cast(%var_6976, dtype="int64") /* ty=Tensor[(48), int64] */;
  %210 = cast(%var_6977, dtype="int64") /* ty=Tensor[(384), int64] */;
  %211 = cast(%var_6978, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %212 = cast(meta[relay.Constant][11] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %213 = reshape(%207, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float32] */;
  %214 = reshape(%208, newshape=[360, 1]) /* ty=Tensor[(360, 1), float64] */;
  %215 = reshape(%209, newshape=[2, 24]) /* ty=Tensor[(2, 24), int64] */;
  %216 = reshape(%210, newshape=[384]) /* ty=Tensor[(384), int64] */;
  %217 = reshape(%211, newshape=[7, 390]) /* ty=Tensor[(7, 390), float64] */;
  %218 = reshape(%212, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float32] */;
  %219 = @func_3441(%213, %214, %215, %216, %217, %218) /* ty=(Tensor[(10, 3, 7), bool], Tensor[(96, 4), int32], Tensor[(360, 1), float64], Tensor[(2, 24), int64], Tensor[(384), int64], Tensor[(7, 390), float64], Tensor[(10, 3, 7), int64]) */;
  %220 = %219.1;
  %221 = cast(%220, dtype="int64") /* ty=Tensor[(96, 4), int64] */;
  %222 = shape_of(%206, dtype="int32") /* ty=Tensor[(2), int32] */;
  %223 = cast(%206, dtype="int64") /* ty=Tensor[(96, 4), int64] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %225 = cast(meta[relay.Constant][12] /* ty=Tensor[(1680), int16] */, dtype="int16") /* ty=Tensor[(1680), int16] */;
  %226 = cast(meta[relay.Constant][12] /* ty=Tensor[(1680), int16] */, dtype="int16") /* ty=Tensor[(1680), int16] */;
  %227 = reshape(%225, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int16] */;
  %228 = reshape(%226, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int16] */;
  %229 = @func_5136() /* ty=(Tensor[(16, 8, 5), bool], Tensor[(96, 4), float64]) */;
  %230 = %201.0;
  %231 = %202.3;
  %232 = %203.0;
  %233 = %204.0;
  %234 = @func_4619() /* ty=Tensor[(10, 66), int32] */;
  %235 = bitwise_xor(%223, %224) /* ty=Tensor[(96, 4), int64] */;
  %236 = @func_2102(%227, %228) /* ty=Tensor[(16, 15, 7), float32] */;
  %237 = %229.1;
  (%230, %231, meta[relay.Constant][11] /* ty=Tensor[(210), float32] */, %var_6975, %var_6976, %var_6977, %var_6978, %232, %233, %234, %235, %236, meta[relay.Constant][12] /* ty=Tensor[(1680), int16] */, %237)
}

def @func_6381(%var_6364: Tensor[(96, 4), float32]) -> (Tensor[(6, 11, 10), bool], Tensor[(96, 4), float64]) {
  %238 = @func_4575() /* ty=(Tensor[(96, 4), float32], Tensor[(6, 11, 10), bool], Tensor[(10, 66), int32]) */;
  %239 = @func_3983() /* ty=(Tensor[(96, 4), float32],) */;
  %240 = %239.0;
  %241 = cast(%var_6364, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(2), int32] */;
  %243 = cast(%240, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %245 = %238.1;
  %246 = floor_mod(%243, %244) /* ty=Tensor[(96, 4), float64] */;
  (%245, %246)
}

def @func_7431() -> Tensor[(10, 3, 7), float32] {
  %247 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %247.0
}

def @func_7650() -> (Tensor[(10, 3, 7), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) {
  %248 = @func_4369() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32]) */;
  %249 = @func_6883() /* ty=(Tensor[(96, 4), float64], Tensor[(96, 4), int16]) */;
  %250 = %249.1;
  %251 = cast(%250, dtype="int32") /* ty=Tensor[(96, 4), int32] */;
  %252 = reshape(%251, newshape=[1, 384]) /* ty=Tensor[(1, 384), int32] */;
  %253 = @func_4995(%252) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(6, 11, 10), bool], Tensor[(1, 384), int32], Tensor[(660), int32], Tensor[(10, 3, 7), float32]) */;
  %254 = %248.0;
  %255 = %253.4;
  %256 = @func_4078() /* ty=Tensor[(10, 3, 7), uint16] */;
  (%254, %250, %255, %256)
}

def @func_3142() -> (Tensor[(10, 3, 7), float32],) {
  %257 = cast(meta[relay.Constant][14] /* ty=Tensor[(10, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %258 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(10, 3, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %261 = divide(%259, %260) /* ty=Tensor[(10, 3, 7), float32] */;
  (%261,)
}

def @func_7706() -> (Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) {
  %262 = @func_5863() /* ty=Tensor[(10, 3, 7), float32] */;
  %263 = @func_7587() /* ty=Tensor[(10, 3, 7), float64] */;
  (%262, %263)
}

def @func_2737(%var_2706: Tensor[(14, 15, 13), float64], %var_2714: Tensor[(384), int32]) -> (Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(96, 4), int32], Tensor[(14, 15, 13), float64]) {
  %264 = cast(-7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %265 = cast(%var_2714, dtype="int32") /* ty=Tensor[(384), int32] */;
  %266 = reshape(%264, newshape=[]) /* ty=int32 */;
  %267 = reshape(%265, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), int32] */;
  %268 = cast(%var_2714, dtype="int32") /* ty=Tensor[(384), int32] */;
  %269 = reshape(%268, newshape=[96, 4]) /* ty=Tensor[(96, 4), int32] */;
  %270 = @func_1103(%269) /* ty=(Tensor[(4, 12, 4), float32], Tensor[(6, 4, 16), float32], int32, Tensor[(96, 4), int32]) */;
  %271 = cast(%var_2706, dtype="float64") /* ty=Tensor[(14, 15, 13), float64] */;
  %272 = asinh(%271) /* ty=Tensor[(14, 15, 13), float64] */;
  %273 = cast(%272, dtype="float64") /* ty=Tensor[(14, 15, 13), float64] */;
  %274 = @func_588(%266, %267) /* ty=Tensor[(6, 4, 16), float32] */;
  %275 = %270.3;
  %276 = sin(%273) /* ty=Tensor[(14, 15, 13), float64] */;
  (%274, -7 /* ty=int32 */, %var_2714, %275, %276)
}

def @func_3293() -> (Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) {
  %277 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %278 = cast(meta[relay.Constant][15] /* ty=Tensor[(2730), float64] */, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %279 = cast(meta[relay.Constant][16] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
  %280 = reshape(%278, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), float64] */;
  %281 = reshape(%279, newshape=[384]) /* ty=Tensor[(384), int32] */;
  %282 = @func_2737(%280, %281) /* ty=(Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(96, 4), int32], Tensor[(14, 15, 13), float64]) */;
  %283 = %282.3;
  %284 = cast(meta[relay.Constant][16] /* ty=Tensor[(384), int32] */, dtype="int16") /* ty=Tensor[(384), int16] */;
  %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(2), int32] */;
  %286 = cast(%283, dtype="int16") /* ty=Tensor[(96, 4), int16] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %288 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %289 = %288.0;
  %290 = cast(%289, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %291 = %277.0;
  %292 = right_shift(%286, %287) /* ty=Tensor[(96, 4), int16] */;
  %293 = @func_3192() /* ty=Tensor[(10, 3, 7), float32] */;
  %294 = cos(%290) /* ty=Tensor[(10, 3, 7), float64] */;
  (%291, meta[relay.Constant][15] /* ty=Tensor[(2730), float64] */, %292, %293, %294)
}

def @func_4878(%var_4854: Tensor[(48, 1), int64], %var_4855: Tensor[(48, 8), int64], %var_4856: Tensor[(198), float64], %var_4857: int32) -> (Tensor[(10, 3, 7), uint16], Tensor[(4, 9, 5), float64], Tensor[(48, 8), int64], Tensor[(198), float64], int32, Tensor[(10, 3, 7), float32], Tensor[(48, 1), float32]) {
  %295 = @func_4758() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) */;
  %296 = cast(%var_4854, dtype="int64") /* ty=Tensor[(48, 1), int64] */;
  %297 = cast(%var_4855, dtype="int64") /* ty=Tensor[(48, 8), int64] */;
  %298 = cast(%var_4856, dtype="float64") /* ty=Tensor[(198), float64] */;
  %299 = cast(%var_4857, dtype="int32") /* ty=int32 */;
  %300 = reshape(%296, newshape=[3, 16, 1]) /* ty=Tensor[(3, 16, 1), int64] */;
  %301 = reshape(%297, newshape=[3, 16, 8]) /* ty=Tensor[(3, 16, 8), int64] */;
  %302 = reshape(%298, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %303 = reshape(%299, newshape=[]) /* ty=int32 */;
  %304 = @func_2625(%300, %301, %302, %303) /* ty=(Tensor[(3, 16, 8), int64], Tensor[(1680), int16], Tensor[(18), float64], Tensor[(6, 4, 16), float32], int32, Tensor[(16, 15, 7), float64], Tensor[(180), int64], Tensor[(2, 9, 11), float64], Tensor[(2, 9, 11), int32], Tensor[(4, 9, 5), float64]) */;
  %305 = cast(%var_4854, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %306 = %295.1;
  %307 = %304.9;
  %308 = @func_3192() /* ty=Tensor[(10, 3, 7), float32] */;
  %309 = log(%305) /* ty=Tensor[(48, 1), float32] */;
  (%306, %307, %var_4855, %var_4856, %var_4857, %308, %309)
}

def @func_6443(%var_6404: Tensor[(7, 2, 6), float32]) -> (Tensor[(7, 2, 6), float32], Tensor[(6, 11, 10), bool], Tensor[(660), int32], Tensor[(10, 3, 7), float64]) {
  %310 = cast(%var_6404, dtype="float32") /* ty=Tensor[(7, 2, 6), float32] */;
  %311 = cast(meta[relay.Constant][17] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %312 = reshape(%311, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int32] */;
  %313 = @func_5163() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32], Tensor[(96, 4), float64]) */;
  %314 = asinh(%310) /* ty=Tensor[(7, 2, 6), float32] */;
  %315 = @func_430(%312) /* ty=Tensor[(6, 11, 10), bool] */;
  %316 = %313.0;
  (%314, %315, meta[relay.Constant][17] /* ty=Tensor[(660), int32] */, %316)
}

def @func_3345() -> (Tensor[(10, 3, 7), bool],) {
  %317 = @func_3192() /* ty=Tensor[(10, 3, 7), float32] */;
  %318 = @func_3192() /* ty=Tensor[(10, 3, 7), float32] */;
  %319 = cast(%318, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %320 = erf(%319) /* ty=Tensor[(10, 3, 7), float32] */;
  %321 = cast(%320, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %322 = shape_of(%317, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(%317, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %325 = logical_or(%323, %324) /* ty=Tensor[(10, 3, 7), bool] */;
  (%325,)
}

def @func_6883() -> (Tensor[(96, 4), float64], Tensor[(96, 4), int16]) {
  %326 = @func_6288() /* ty=Tensor[(96, 4), int16] */;
  %327 = cast(meta[relay.Constant][18] /* ty=Tensor[(96, 4), int16] */, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %328 = shape_of(%326, dtype="int32") /* ty=Tensor[(2), int32] */;
  %329 = cast(%326, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %331 = cast(meta[relay.Constant][18] /* ty=Tensor[(96, 4), int16] */, dtype="int16") /* ty=Tensor[(96, 4), int16] */;
  %332 = shape_of(%326, dtype="int32") /* ty=Tensor[(2), int32] */;
  %333 = cast(%326, dtype="int16") /* ty=Tensor[(96, 4), int16] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %335 = mod(%329, %330) /* ty=Tensor[(96, 4), float64] */;
  %336 = logical_xor(%333, %334) /* ty=Tensor[(96, 4), int16] */;
  (%335, %336)
}

def @func_7587() -> Tensor[(10, 3, 7), float64] {
  %337 = @func_6636() /* ty=(Tensor[(10, 3, 7), float64],) */;
  %337.0
}

def @func_4522(%var_4476: uint32, %var_4477: Tensor[(1, 432), uint32], %var_4478: Tensor[(2, 840), int16], %var_4479: Tensor[(660), int32]) -> (Tensor[(10, 3, 7), float32], Tensor[(6, 8, 9), float32], uint32, Tensor[(1, 432), uint32], Tensor[(2, 840), int16], Tensor[(660), int32], Tensor[(96, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(10, 3, 7), float64], Tensor[(2, 840), int16]) {
  %338 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %339 = cast(%var_4476, dtype="uint32") /* ty=uint32 */;
  %340 = cast(%var_4477, dtype="uint32") /* ty=Tensor[(1, 432), uint32] */;
  %341 = cast(%var_4478, dtype="int16") /* ty=Tensor[(2, 840), int16] */;
  %342 = cast(%var_4477, dtype="uint32") /* ty=Tensor[(1, 432), uint32] */;
  %343 = %338.0;
  %344 = cast(%343, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %345 = cast(%var_4479, dtype="int32") /* ty=Tensor[(660), int32] */;
  %346 = reshape(%339, newshape=[]) /* ty=uint32 */;
  %347 = reshape(%340, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), uint32] */;
  %348 = reshape(%341, newshape=[2, 840]) /* ty=Tensor[(2, 840), int16] */;
  %349 = reshape(%342, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), uint32] */;
  %350 = reshape(%344, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %351 = reshape(%345, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %352 = @func_2238(%346, %347, %348, %349, %350, %351) /* ty=(Tensor[(6, 8, 9), bool], Tensor[(16, 15, 7), float32], Tensor[(2, 840), int16], Tensor[(6, 8, 9), bool], Tensor[(6, 8, 9), float32], Tensor[(3, 10, 7), float64], Tensor[(210), float64], Tensor[(384), int32], Tensor[(660), int32]) */;
  %353 = @func_4282() /* ty=(Tensor[(96, 4), float32],) */;
  %354 = cast(%var_4476, dtype="int32") /* ty=int32 */;
  %355 = %353.0;
  %356 = cast(%355, dtype="int32") /* ty=Tensor[(96, 4), int32] */;
  %357 = reshape(%354, newshape=[]) /* ty=int32 */;
  %358 = reshape(%356, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), int32] */;
  %359 = cast(%var_4476, dtype="uint32") /* ty=uint32 */;
  %360 = %352.4;
  %361 = cast(%360, dtype="uint32") /* ty=Tensor[(6, 8, 9), uint32] */;
  %362 = cast(%var_4478, dtype="int16") /* ty=Tensor[(2, 840), int16] */;
  %363 = cast(%var_4477, dtype="uint32") /* ty=Tensor[(1, 432), uint32] */;
  %364 = @func_3505() /* ty=Tensor[(10, 3, 7), float64] */;
  %365 = cast(%364, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %366 = cast(%var_4479, dtype="int32") /* ty=Tensor[(660), int32] */;
  %367 = reshape(%359, newshape=[]) /* ty=uint32 */;
  %368 = reshape(%361, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), uint32] */;
  %369 = reshape(%362, newshape=[2, 840]) /* ty=Tensor[(2, 840), int16] */;
  %370 = reshape(%363, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), uint32] */;
  %371 = reshape(%365, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %372 = reshape(%366, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %373 = @func_2238(%367, %368, %369, %370, %371, %372) /* ty=(Tensor[(6, 8, 9), bool], Tensor[(16, 15, 7), float32], Tensor[(2, 840), int16], Tensor[(6, 8, 9), bool], Tensor[(6, 8, 9), float32], Tensor[(3, 10, 7), float64], Tensor[(210), float64], Tensor[(384), int32], Tensor[(660), int32]) */;
  %374 = @func_588(%357, %358) /* ty=Tensor[(6, 4, 16), float32] */;
  %375 = %373.2;
  (%343, %360, %var_4476, %var_4477, %var_4478, %var_4479, %355, %374, %364, %375)
}

def @func_5989() -> (Tensor[(16, 8, 5), float64],) {
  %376 = @func_4718() /* ty=(Tensor[(3, 9, 2), float64], Tensor[(16, 8, 5), float64]) */;
  %377 = %376.1;
  (%377,)
}

def @func_6210(%var_6199: Tensor[(3, 9, 2), float64]) -> (Tensor[(3, 9, 2), uint8],) {
  %378 = @func_4718() /* ty=(Tensor[(3, 9, 2), float64], Tensor[(16, 8, 5), float64]) */;
  %379 = %378.0;
  %380 = cast(%var_6199, dtype="uint8") /* ty=Tensor[(3, 9, 2), uint8] */;
  %381 = shape_of(%379, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%379, dtype="uint8") /* ty=Tensor[(3, 9, 2), uint8] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %384 = bitwise_and(%382, %383) /* ty=Tensor[(3, 9, 2), uint8] */;
  (%384,)
}

def @func_7356() -> (Tensor[(10, 3, 7), float32], Tensor[(3, 9, 2), float64], Tensor[(10, 3, 7), float32], Tensor[(4, 9, 5), float32], Tensor[(6, 30), int64]) {
  %385 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %386 = cast(meta[relay.Constant][19] /* ty=Tensor[(6, 30), int64] */, dtype="int64") /* ty=Tensor[(6, 30), int64] */;
  %387 = reshape(%386, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), int64] */;
  %388 = @func_996(%387) /* ty=(Tensor[(4, 9, 5), int64], Tensor[(4, 9, 5), float32]) */;
  %389 = @func_6667() /* ty=Tensor[(10, 3, 7), float32] */;
  %390 = @func_4640() /* ty=Tensor[(3, 9, 2), float64] */;
  %391 = %385.0;
  %392 = %388.1;
  (%389, %390, %391, %392, meta[relay.Constant][19] /* ty=Tensor[(6, 30), int64] */)
}

def @func_482(%var_471: Tensor[(330, 2), int32]) -> (Tensor[(6, 11, 7), float32], Tensor[(6, 11, 10), bool], Tensor[(330, 2), int32], Tensor[(6, 11, 10), bool]) {
  %393 = cast(meta[relay.Constant][20] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %394 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 11, 7), uint16] */, dtype="uint16") /* ty=Tensor[(6, 11, 7), uint16] */;
  %395 = logical_xor(%393, %394) /* ty=Tensor[(6, 11, 7), uint16] */;
  %396 = cast(%395, dtype="float32") /* ty=Tensor[(6, 11, 7), float32] */;
  %397 = cast(%var_471, dtype="int32") /* ty=Tensor[(330, 2), int32] */;
  %398 = reshape(%397, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int32] */;
  %399 = @func_430(%398) /* ty=Tensor[(6, 11, 10), bool] */;
  %400 = cast(%399, dtype="int32") /* ty=Tensor[(6, 11, 10), int32] */;
  %401 = reshape(%400, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int32] */;
  %402 = cosh(%396) /* ty=Tensor[(6, 11, 7), float32] */;
  %403 = @func_430(%401) /* ty=Tensor[(6, 11, 10), bool] */;
  (%402, %399, %var_471, %403)
}

def @func_2238(%var_2192: uint32, %var_2193: Tensor[(6, 8, 9), uint32], %var_2203: Tensor[(2, 840), int16], %var_2214: Tensor[(6, 8, 9), uint32], %var_2227: Tensor[(210), float64], %var_2229: Tensor[(660), int32]) -> (Tensor[(6, 8, 9), bool], Tensor[(16, 15, 7), float32], Tensor[(2, 840), int16], Tensor[(6, 8, 9), bool], Tensor[(6, 8, 9), float32], Tensor[(3, 10, 7), float64], Tensor[(210), float64], Tensor[(384), int32], Tensor[(660), int32]) {
  %404 = cast(%var_2192, dtype="bool") /* ty=bool */;
  %405 = cast(%var_2193, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
  %406 = cast(%var_2203, dtype="int16") /* ty=Tensor[(2, 840), int16] */;
  %407 = cast(%var_2203, dtype="int16") /* ty=Tensor[(2, 840), int16] */;
  %408 = reshape(%406, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int16] */;
  %409 = reshape(%407, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int16] */;
  %410 = cast(%var_2214, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
  %411 = shape_of(%var_2193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%var_2193, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %414 = cast(%var_2214, dtype="float32") /* ty=Tensor[(6, 8, 9), float32] */;
  %415 = cast(%var_2227, dtype="float64") /* ty=Tensor[(210), float64] */;
  %416 = cast(%var_2227, dtype="float64") /* ty=Tensor[(210), float64] */;
  %417 = cast(%var_2227, dtype="float64") /* ty=Tensor[(210), float64] */;
  %418 = cast(meta[relay.Constant][22] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
  %419 = cast(%var_2229, dtype="int32") /* ty=Tensor[(660), int32] */;
  %420 = reshape(%415, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
  %421 = reshape(%416, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
  %422 = reshape(%417, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
  %423 = reshape(%418, newshape=[384]) /* ty=Tensor[(384), int32] */;
  %424 = reshape(%419, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %425 = @func_1360(%420, %421, %422, %423, %424) /* ty=(Tensor[(3, 10, 7), float64], Tensor[(3, 10, 7), bool], Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(6, 11, 10), bool], Tensor[(660), int32]) */;
  %426 = not_equal(%404, %405) /* ty=Tensor[(6, 8, 9), bool] */;
  %427 = @func_2102(%408, %409) /* ty=Tensor[(16, 15, 7), float32] */;
  %428 = logical_and(%412, %413) /* ty=Tensor[(6, 8, 9), bool] */;
  %429 = log10(%414) /* ty=Tensor[(6, 8, 9), float32] */;
  %430 = %425.0;
  (%426, %427, %var_2203, %428, %429, %430, %var_2227, meta[relay.Constant][22] /* ty=Tensor[(384), int32] */, %var_2229)
}

def @func_6841() -> (Tensor[(10, 3, 7), float32], Tensor[(96, 4), float32], Tensor[(4, 9, 5), int64], Tensor[(180), int64]) {
  %431 = @func_5759() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %432 = @func_4282() /* ty=(Tensor[(96, 4), float32],) */;
  %433 = cast(meta[relay.Constant][23] /* ty=Tensor[(180), int64] */, dtype="int64") /* ty=Tensor[(180), int64] */;
  %434 = reshape(%433, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), int64] */;
  %435 = @func_996(%434) /* ty=(Tensor[(4, 9, 5), int64], Tensor[(4, 9, 5), float32]) */;
  %436 = %431.0;
  %437 = %432.0;
  %438 = %435.0;
  (%436, %437, %438, meta[relay.Constant][23] /* ty=Tensor[(180), int64] */)
}

def @func_5432(%var_5422: Tensor[(11, 7, 6), float32]) -> (Tensor[(?, 7, 6), bool], Tensor[(11, 7, 6), uint8]) {
  %439 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 7, 6), float32] */, dtype="float32") /* ty=Tensor[(1, 7, 6), float32] */;
  %440 = cos(%439) /* ty=Tensor[(1, 7, 6), float32] */;
  %441 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 7, 6), float32] */, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
  %442 = shape_of(%440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%440, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %445 = cast(%440, dtype="uint8") /* ty=Tensor[(1, 7, 6), uint8] */;
  %446 = cast(%var_5422, dtype="uint8") /* ty=Tensor[(11, 7, 6), uint8] */;
  %447 = not_equal(%443, %444) /* ty=Tensor[(?, 7, 6), bool] */;
  %448 = multiply(%445, %446) /* ty=Tensor[(11, 7, 6), uint8] */;
  (%447, %448)
}

def @func_7471(%var_7464: Tensor[(54), float64]) -> (Tensor[(10, 3, 7), float32], Tensor[(3, 9, 2), uint8], Tensor[(54), float64], Tensor[(10, 3, 7), float32]) {
  %449 = @func_6940() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %450 = cast(%var_7464, dtype="float64") /* ty=Tensor[(54), float64] */;
  %451 = reshape(%450, newshape=[3, 9, 2]) /* ty=Tensor[(3, 9, 2), float64] */;
  %452 = @func_6210(%451) /* ty=(Tensor[(3, 9, 2), uint8],) */;
  %453 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
  %454 = %449.0;
  %455 = %452.0;
  %456 = %453.3;
  (%454, %455, %var_7464, %456)
}

def @func_7951(%var_7917: Tensor[(96, 4), float32], %var_7930: Tensor[(198), float64], %var_7931: int32) -> (Tensor[(96, 4), float64], Tensor[(6, 30), int64], Tensor[(10, 3, 7), uint16], Tensor[(48), int64], Tensor[(198), float64], int32, Tensor[(96, 4), bool]) {
  %457 = @func_4282() /* ty=(Tensor[(96, 4), float32],) */;
  %458 = %457.0;
  %459 = cast(%var_7917, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %460 = shape_of(%458, dtype="int32") /* ty=Tensor[(2), int32] */;
  %461 = cast(%458, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %463 = @func_7356() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(3, 9, 2), float64], Tensor[(10, 3, 7), float32], Tensor[(4, 9, 5), float32], Tensor[(6, 30), int64]) */;
  %464 = cast(meta[relay.Constant][25] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %465 = divide(%461, %462) /* ty=Tensor[(96, 4), float64] */;
  %466 = cast(%465, dtype="int64") /* ty=Tensor[(96, 4), int64] */;
  %467 = cast(%var_7930, dtype="float64") /* ty=Tensor[(198), float64] */;
  %468 = cast(%var_7931, dtype="int32") /* ty=int32 */;
  %469 = reshape(%464, newshape=[48, 1]) /* ty=Tensor[(48, 1), int64] */;
  %470 = reshape(%466, newshape=[48, 8]) /* ty=Tensor[(48, 8), int64] */;
  %471 = reshape(%467, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %472 = reshape(%468, newshape=[]) /* ty=int32 */;
  %473 = @func_4878(%469, %470, %471, %472) /* ty=(Tensor[(10, 3, 7), uint16], Tensor[(4, 9, 5), float64], Tensor[(48, 8), int64], Tensor[(198), float64], int32, Tensor[(10, 3, 7), float32], Tensor[(48, 1), float32]) */;
  %474 = cast(%var_7917, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %475 = shape_of(%458, dtype="int32") /* ty=Tensor[(2), int32] */;
  %476 = cast(%458, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %478 = %463.4;
  %479 = %473.0;
  %480 = greater_equal(%476, %477) /* ty=Tensor[(96, 4), bool] */;
  (%465, %478, %479, meta[relay.Constant][25] /* ty=Tensor[(48), int64] */, %var_7930, %var_7931, %480)
}

def @func_3487(%var_3477: Tensor[(16, 8, 5), uint8], %var_3478: Tensor[(16, 8, 5), uint8]) -> (Tensor[(16, 8, 5), bool],) {
  %481 = cast(%var_3478, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
  %482 = shape_of(%var_3477, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(%var_3477, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %485 = greater(%483, %484) /* ty=Tensor[(16, 8, 5), bool] */;
  (%485,)
}

def @func_4602() -> (Tensor[(10, 3, 7), uint16], Tensor[(1, 3, 8), float32], Tensor[(24), float32]) {
  %486 = cast(meta[relay.Constant][26] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %487 = reshape(%486, newshape=[1, 3, 8]) /* ty=Tensor[(1, 3, 8), float32] */;
  %488 = @func_1192(%487) /* ty=(Tensor[(1, 3, 8), float32],) */;
  %489 = @func_4078() /* ty=Tensor[(10, 3, 7), uint16] */;
  %490 = %488.0;
  (%489, %490, meta[relay.Constant][26] /* ty=Tensor[(24), float32] */)
}

def @func_5375(%var_5368: int32) -> (Tensor[(10, 3, 7), float64], Tensor[(48, 8), int32], Tensor[(6, 11, 10), float64], Tensor[(3, 5, 11), float64], Tensor[(165), float64], Tensor[(18), float64], Tensor[(1, 48), int64], Tensor[(198), float64], int32, int32) {
  %491 = @func_5163() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32], Tensor[(96, 4), float64]) */;
  %492 = cast(meta[relay.Constant][27] /* ty=Tensor[(48, 8), int32] */, dtype="int32") /* ty=Tensor[(48, 8), int32] */;
  %493 = reshape(%492, newshape=[1, 384]) /* ty=Tensor[(1, 384), int32] */;
  %494 = @func_4995(%493) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(6, 11, 10), bool], Tensor[(1, 384), int32], Tensor[(660), int32], Tensor[(10, 3, 7), float32]) */;
  %495 = %494.1;
  %496 = cast(%495, dtype="float64") /* ty=Tensor[(6, 11, 10), float64] */;
  %497 = cast(meta[relay.Constant][28] /* ty=Tensor[(165), float64] */, dtype="float64") /* ty=Tensor[(165), float64] */;
  %498 = reshape(%497, newshape=[3, 5, 11]) /* ty=Tensor[(3, 5, 11), float64] */;
  %499 = @func_4785(%498) /* ty=(Tensor[(3, 5, 11), float64], Tensor[(10, 3, 7), float32]) */;
  %500 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 48), int64] */, dtype="int64") /* ty=Tensor[(1, 48), int64] */;
  %501 = cast(meta[relay.Constant][27] /* ty=Tensor[(48, 8), int32] */, dtype="int64") /* ty=Tensor[(48, 8), int64] */;
  %502 = cast(meta[relay.Constant][30] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %503 = cast(%var_5368, dtype="int32") /* ty=int32 */;
  %504 = reshape(%500, newshape=[3, 16, 1]) /* ty=Tensor[(3, 16, 1), int64] */;
  %505 = reshape(%501, newshape=[3, 16, 8]) /* ty=Tensor[(3, 16, 8), int64] */;
  %506 = reshape(%502, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %507 = reshape(%503, newshape=[]) /* ty=int32 */;
  %508 = @func_2625(%504, %505, %506, %507) /* ty=(Tensor[(3, 16, 8), int64], Tensor[(1680), int16], Tensor[(18), float64], Tensor[(6, 4, 16), float32], int32, Tensor[(16, 15, 7), float64], Tensor[(180), int64], Tensor[(2, 9, 11), float64], Tensor[(2, 9, 11), int32], Tensor[(4, 9, 5), float64]) */;
  %509 = cast(meta[relay.Constant][27] /* ty=Tensor[(48, 8), int32] */, dtype="int32") /* ty=Tensor[(48, 8), int32] */;
  %510 = reshape(%509, newshape=[96, 4]) /* ty=Tensor[(96, 4), int32] */;
  %511 = @func_1103(%510) /* ty=(Tensor[(4, 12, 4), float32], Tensor[(6, 4, 16), float32], int32, Tensor[(96, 4), int32]) */;
  %512 = %491.0;
  %513 = atan(%496) /* ty=Tensor[(6, 11, 10), float64] */;
  %514 = %499.0;
  %515 = %508.2;
  %516 = %511.2;
  (%512, meta[relay.Constant][27] /* ty=Tensor[(48, 8), int32] */, %513, %514, meta[relay.Constant][28] /* ty=Tensor[(165), float64] */, %515, meta[relay.Constant][29] /* ty=Tensor[(1, 48), int64] */, meta[relay.Constant][30] /* ty=Tensor[(198), float64] */, %var_5368, %516)
}

def @main(%var_8153: Tensor[(3, 9, 2), float64]) -> Tensor[(3, 9, 2), float64] {
  %517 = @func_4640() /* ty=Tensor[(3, 9, 2), float64] */;
  %518 = cast(%var_8153, dtype="int64") /* ty=Tensor[(3, 9, 2), int64] */;
  %519 = shape_of(%517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%517, dtype="int64") /* ty=Tensor[(3, 9, 2), int64] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %522 = left_shift(%520, %521) /* ty=Tensor[(3, 9, 2), int64] */;
  %523 = cast(%var_8153, dtype="float64") /* ty=Tensor[(3, 9, 2), float64] */;
  %524 = shape_of(%522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %525 = cast(%522, dtype="float64") /* ty=Tensor[(3, 9, 2), float64] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%525, %526) /* ty=Tensor[(3, 9, 2), float64] */
}

def @func_6541() -> (Tensor[(198), float64],) {
  %527 = @func_4380() /* ty=(Tensor[(96, 4), float32], Tensor[(2, 9, 11), float64], Tensor[(18), float64], Tensor[(198), float64]) */;
  %528 = %527.3;
  (%528,)
}

def @func_4718() -> (Tensor[(3, 9, 2), float64], Tensor[(16, 8, 5), float64]) {
  %529 = @func_4260() /* ty=(Tensor[(16, 8, 5), float64], Tensor[(10, 3, 7), float32]) */;
  %530 = %529.0;
  %531 = cast(%530, dtype="float64") /* ty=Tensor[(16, 8, 5), float64] */;
  %532 = @func_4640() /* ty=Tensor[(3, 9, 2), float64] */;
  %533 = asin(%531) /* ty=Tensor[(16, 8, 5), float64] */;
  (%532, %533)
}

def @func_4640() -> Tensor[(3, 9, 2), float64] {
  %534 = cast(meta[relay.Constant][31] /* ty=Tensor[(3, 9, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 2), float64] */;
  sinh(%534) /* ty=Tensor[(3, 9, 2), float64] */
}

def @func_514(%var_498: Tensor[(2, 9, 1), float64], %var_499: Tensor[(2, 9, 11), float64]) -> Tensor[(2, 9, 11), float64] {
  %535 = cast(%var_498, dtype="float64") /* ty=Tensor[(2, 9, 1), float64] */;
  %536 = cast(%var_499, dtype="float64") /* ty=Tensor[(2, 9, 11), float64] */;
  mod(%535, %536) /* ty=Tensor[(2, 9, 11), float64] */
}

def @func_4758() -> (Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) {
  %537 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %538 = @func_4602() /* ty=(Tensor[(10, 3, 7), uint16], Tensor[(1, 3, 8), float32], Tensor[(24), float32]) */;
  %539 = %537.0;
  %540 = %538.0;
  (%539, %540)
}

def @func_2625(%var_2543: Tensor[(3, 16, 1), int64], %var_2544: Tensor[(3, 16, 8), int64], %var_2577: Tensor[(198), float64], %var_2585: int32) -> (Tensor[(3, 16, 8), int64], Tensor[(1680), int16], Tensor[(18), float64], Tensor[(6, 4, 16), float32], int32, Tensor[(16, 15, 7), float64], Tensor[(180), int64], Tensor[(2, 9, 11), float64], Tensor[(2, 9, 11), int32], Tensor[(4, 9, 5), float64]) {
  %541 = cast(%var_2543, dtype="int64") /* ty=Tensor[(3, 16, 1), int64] */;
  %542 = cast(%var_2544, dtype="int64") /* ty=Tensor[(3, 16, 8), int64] */;
  %543 = cast(%var_2585, dtype="int32") /* ty=int32 */;
  %544 = cast(%var_2544, dtype="int32") /* ty=Tensor[(3, 16, 8), int32] */;
  %545 = reshape(%543, newshape=[]) /* ty=int32 */;
  %546 = reshape(%544, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), int32] */;
  %547 = cast(meta[relay.Constant][32] /* ty=Tensor[(1680), int16] */, dtype="int16") /* ty=Tensor[(1680), int16] */;
  %548 = cast(meta[relay.Constant][32] /* ty=Tensor[(1680), int16] */, dtype="int16") /* ty=Tensor[(1680), int16] */;
  %549 = reshape(%547, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int16] */;
  %550 = reshape(%548, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int16] */;
  %551 = @func_2102(%549, %550) /* ty=Tensor[(16, 15, 7), float32] */;
  %552 = cast(%551, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
  %553 = cast(meta[relay.Constant][33] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %554 = cast(meta[relay.Constant][33] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %555 = cast(%var_2577, dtype="float64") /* ty=Tensor[(198), float64] */;
  %556 = reshape(%554, newshape=[2, 9, 1]) /* ty=Tensor[(2, 9, 1), float64] */;
  %557 = reshape(%555, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), float64] */;
  %558 = @func_514(%556, %557) /* ty=Tensor[(2, 9, 11), float64] */;
  %559 = cast(%558, dtype="float64") /* ty=Tensor[(2, 9, 11), float64] */;
  %560 = atan(%559) /* ty=Tensor[(2, 9, 11), float64] */;
  %561 = cast(%560, dtype="float64") /* ty=Tensor[(2, 9, 11), float64] */;
  %562 = reshape(%553, newshape=[2, 9, 1]) /* ty=Tensor[(2, 9, 1), float64] */;
  %563 = reshape(%561, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), float64] */;
  %564 = cast(%var_2577, dtype="int32") /* ty=Tensor[(198), int32] */;
  %565 = shape_of(%560, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%560, dtype="int32") /* ty=Tensor[(2, 9, 11), int32] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %568 = cast(meta[relay.Constant][34] /* ty=Tensor[(180), int64] */, dtype="int64") /* ty=Tensor[(180), int64] */;
  %569 = reshape(%568, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), int64] */;
  %570 = @func_996(%569) /* ty=(Tensor[(4, 9, 5), int64], Tensor[(4, 9, 5), float32]) */;
  %571 = %570.1;
  %572 = cast(meta[relay.Constant][34] /* ty=Tensor[(180), int64] */, dtype="int64") /* ty=Tensor[(180), int64] */;
  %573 = reshape(%572, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), int64] */;
  %574 = @func_996(%573) /* ty=(Tensor[(4, 9, 5), int64], Tensor[(4, 9, 5), float32]) */;
  %575 = %574.1;
  %576 = cast(%575, dtype="float64") /* ty=Tensor[(4, 9, 5), float64] */;
  %577 = shape_of(%571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(%571, dtype="float64") /* ty=Tensor[(4, 9, 5), float64] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %580 = logical_xor(%541, %542) /* ty=Tensor[(3, 16, 8), int64] */;
  %581 = @func_588(%545, %546) /* ty=Tensor[(6, 4, 16), float32] */;
  %582 = sin(%552) /* ty=Tensor[(16, 15, 7), float64] */;
  %583 = @func_514(%562, %563) /* ty=Tensor[(2, 9, 11), float64] */;
  %584 = subtract(%566, %567) /* ty=Tensor[(2, 9, 11), int32] */;
  %585 = divide(%578, %579) /* ty=Tensor[(4, 9, 5), float64] */;
  (%580, meta[relay.Constant][32] /* ty=Tensor[(1680), int16] */, meta[relay.Constant][33] /* ty=Tensor[(18), float64] */, %581, %var_2585, %582, meta[relay.Constant][34] /* ty=Tensor[(180), int64] */, %583, %584, %585)
}

def @func_5668(%var_5631: Tensor[(10, 3, 7), float32]) -> (Tensor[(10, 66), int32], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) {
  %586 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
  %587 = %586.0;
  %588 = cast(%var_5631, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %589 = shape_of(%587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%587, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %592 = @func_5031() /* ty=Tensor[(10, 66), int32] */;
  %593 = mod(%590, %591) /* ty=Tensor[(10, 3, 7), float32] */;
  %594 = @func_3698() /* ty=Tensor[(10, 3, 7), float64] */;
  (%592, %593, %594)
}

def @func_4282() -> (Tensor[(96, 4), float32],) {
  %595 = @func_3983() /* ty=(Tensor[(96, 4), float32],) */;
  %596 = %595.0;
  (%596,)
}

def @func_430(%var_425: Tensor[(6, 11, 10), int32]) -> Tensor[(6, 11, 10), bool] {
  %597 = cast(%var_425, dtype="bool") /* ty=Tensor[(6, 11, 10), bool] */;
  %598 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(6, 11, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 11, 10), int32] */, dtype="bool") /* ty=Tensor[(6, 11, 10), bool] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%599, %600) /* ty=Tensor[(6, 11, 10), bool] */
}

def @func_3441(%var_3381: Tensor[(10, 3, 7), float32], %var_3399: Tensor[(360, 1), float64], %var_3400: Tensor[(2, 24), int64], %var_3401: Tensor[(384), int64], %var_3402: Tensor[(7, 390), float64], %var_3409: Tensor[(10, 3, 7), float32]) -> (Tensor[(10, 3, 7), bool], Tensor[(96, 4), int32], Tensor[(360, 1), float64], Tensor[(2, 24), int64], Tensor[(384), int64], Tensor[(7, 390), float64], Tensor[(10, 3, 7), int64]) {
  %601 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %602 = %601.0;
  %603 = cast(%var_3381, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %604 = shape_of(%602, dtype="int32") /* ty=Tensor[(3), int32] */;
  %605 = cast(%602, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %607 = cast(%var_3399, dtype="float64") /* ty=Tensor[(360, 1), float64] */;
  %608 = cast(%var_3400, dtype="int64") /* ty=Tensor[(2, 24), int64] */;
  %609 = cast(%var_3401, dtype="int64") /* ty=Tensor[(384), int64] */;
  %610 = cast(%var_3399, dtype="float64") /* ty=Tensor[(360, 1), float64] */;
  %611 = cast(%var_3402, dtype="float64") /* ty=Tensor[(7, 390), float64] */;
  %612 = reshape(%607, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float64] */;
  %613 = reshape(%608, newshape=[48]) /* ty=Tensor[(48), int64] */;
  %614 = reshape(%609, newshape=[1, 384]) /* ty=Tensor[(1, 384), int64] */;
  %615 = reshape(%610, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float64] */;
  %616 = reshape(%611, newshape=[2730]) /* ty=Tensor[(2730), float64] */;
  %617 = @func_3084(%612, %613, %614, %615, %616) /* ty=(Tensor[(4, 9, 5), float64], Tensor[(48), int64], Tensor[(1, 384), int64], Tensor[(198), float64], int32, int32, Tensor[(3, 10, 12), uint16], Tensor[(96, 4), int32], Tensor[(2730), float64]) */;
  %618 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %619 = %618.0;
  %620 = cast(%619, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %621 = sigmoid(%620) /* ty=Tensor[(10, 3, 7), float32] */;
  %622 = cast(%602, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%621, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %626 = greater_equal(%624, %625) /* ty=Tensor[(10, 3, 7), bool] */;
  %627 = cast(%var_3409, dtype="uint32") /* ty=Tensor[(10, 3, 7), uint32] */;
  %628 = shape_of(%626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%626, dtype="uint32") /* ty=Tensor[(10, 3, 7), uint32] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %631 = left_shift(%629, %630) /* ty=Tensor[(10, 3, 7), uint32] */;
  %632 = cast(%var_3409, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %633 = shape_of(%var_3381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %634 = cast(%var_3381, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %636 = maximum(%634, %635) /* ty=Tensor[(10, 3, 7), float64] */;
  %637 = cast(%636, dtype="int64") /* ty=Tensor[(10, 3, 7), int64] */;
  %638 = shape_of(%631, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%631, dtype="int64") /* ty=Tensor[(10, 3, 7), int64] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %641 = logical_and(%605, %606) /* ty=Tensor[(10, 3, 7), bool] */;
  %642 = %617.7;
  %643 = add(%639, %640) /* ty=Tensor[(10, 3, 7), int64] */;
  (%641, %642, %var_3399, %var_3400, %var_3401, %var_3402, %643)
}

def @func_5487() -> (Tensor[(10, 3, 7), uint16], Tensor[(10, 3, 7), float32]) {
  %644 = @func_4758() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) */;
  %645 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %646 = %644.1;
  %647 = %645.0;
  (%646, %647)
}

def @func_5031() -> Tensor[(10, 66), int32] {
  @func_4619() /* ty=Tensor[(10, 66), int32] */
}

def @func_6562() -> Tensor[(96, 4), float32] {
  %648 = @func_5449() /* ty=(Tensor[(96, 4), float32],) */;
  %648.0
}

def @func_6636() -> (Tensor[(10, 3, 7), float64],) {
  %649 = @func_3698() /* ty=Tensor[(10, 3, 7), float64] */;
  (%649,)
}

def @func_7271(%var_7246: Tensor[(360), float64]) -> (Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float32], Tensor[(198), float64], Tensor[(360), float64], Tensor[(24, 2), int64], Tensor[(384), int64], Tensor[(2730), float64]) {
  %650 = cast(%var_7246, dtype="float64") /* ty=Tensor[(360), float64] */;
  %651 = cast(meta[relay.Constant][36] /* ty=Tensor[(24, 2), int64] */, dtype="int64") /* ty=Tensor[(24, 2), int64] */;
  %652 = cast(meta[relay.Constant][37] /* ty=Tensor[(384), int64] */, dtype="int64") /* ty=Tensor[(384), int64] */;
  %653 = cast(meta[relay.Constant][38] /* ty=Tensor[(2730), float64] */, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %654 = reshape(%650, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %655 = reshape(%651, newshape=[48]) /* ty=Tensor[(48), int64] */;
  %656 = reshape(%652, newshape=[384]) /* ty=Tensor[(384), int64] */;
  %657 = reshape(%653, newshape=[2730]) /* ty=Tensor[(2730), float64] */;
  %658 = @func_7027(%654, %655, %656, %657) /* ty=(Tensor[(16, 8, 5), float64], Tensor[(198), float64], Tensor[(210), float32], Tensor[(360), float64], Tensor[(48), int64], Tensor[(384), int64], Tensor[(2730), float64], Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), float64], Tensor[(10, 66), int32], Tensor[(96, 4), int64], Tensor[(16, 15, 7), float32], Tensor[(1680), int16], Tensor[(96, 4), float64]) */;
  %659 = @func_6667() /* ty=Tensor[(10, 3, 7), float32] */;
  %660 = @func_3192() /* ty=Tensor[(10, 3, 7), float32] */;
  %661 = %658.1;
  (%659, %660, %661, %var_7246, meta[relay.Constant][36] /* ty=Tensor[(24, 2), int64] */, meta[relay.Constant][37] /* ty=Tensor[(384), int64] */, meta[relay.Constant][38] /* ty=Tensor[(2730), float64] */)
}

def @func_7561() -> (Tensor[(180), int64], Tensor[(16, 8, 5), float64]) {
  %662 = @func_6841() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(96, 4), float32], Tensor[(4, 9, 5), int64], Tensor[(180), int64]) */;
  %663 = @func_5989() /* ty=(Tensor[(16, 8, 5), float64],) */;
  %664 = %662.3;
  %665 = %663.0;
  (%664, %665)
}

def @func_6264(%var_6228: Tensor[(13, 2), float64]) -> (Tensor[(13, 2), float64], Tensor[(96, 4), float32], Tensor[(96, 4), int64], Tensor[(48), int64]) {
  %666 = cast(%var_6228, dtype="float64") /* ty=Tensor[(13, 2), float64] */;
  %667 = @func_4282() /* ty=(Tensor[(96, 4), float32],) */;
  %668 = %667.0;
  %669 = cast(%668, dtype="float32") /* ty=Tensor[(96, 4), float32] */;
  %670 = cast(meta[relay.Constant][39] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %671 = reshape(%669, newshape=[96, 4]) /* ty=Tensor[(96, 4), float32] */;
  %672 = reshape(%670, newshape=[48]) /* ty=Tensor[(48), int64] */;
  %673 = @func_5966(%671, %672) /* ty=(Tensor[(96, 4), int64], Tensor[(96, 4), float64], int32, Tensor[(48), int64], Tensor[(198), float64], int32) */;
  %674 = atanh(%666) /* ty=Tensor[(13, 2), float64] */;
  %675 = %673.0;
  (%674, %668, %675, meta[relay.Constant][39] /* ty=Tensor[(48), int64] */)
}

def @func_7799() -> (Tensor[(10, 3, 7), float32], Tensor[(10, 66), int32]) {
  %676 = @func_5759() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %677 = %676.0;
  %678 = @func_6525() /* ty=Tensor[(10, 66), int32] */;
  (%677, %678)
}

def @func_6132() -> Tensor[(96, 4), float32] {
  %679 = @func_4282() /* ty=(Tensor[(96, 4), float32],) */;
  %679.0
}

def @func_5966(%var_5943: Tensor[(96, 4), float32], %var_5962: Tensor[(48), int64]) -> (Tensor[(96, 4), int64], Tensor[(96, 4), float64], int32, Tensor[(48), int64], Tensor[(198), float64], int32) {
  %680 = @func_5449() /* ty=(Tensor[(96, 4), float32],) */;
  %681 = %680.0;
  %682 = cast(%var_5943, dtype="int64") /* ty=Tensor[(96, 4), int64] */;
  %683 = shape_of(%681, dtype="int32") /* ty=Tensor[(2), int32] */;
  %684 = cast(%681, dtype="int64") /* ty=Tensor[(96, 4), int64] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %686 = cast(%681, dtype="float32") /* ty=Tensor[(96, 4), float32] */;
  %687 = atanh(%686) /* ty=Tensor[(96, 4), float32] */;
  %688 = cast(%687, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %689 = cast(%var_5962, dtype="int64") /* ty=Tensor[(48), int64] */;
  %690 = cast(%var_5943, dtype="int64") /* ty=Tensor[(96, 4), int64] */;
  %691 = cast(meta[relay.Constant][40] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %692 = cast(-1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %693 = reshape(%689, newshape=[48, 1]) /* ty=Tensor[(48, 1), int64] */;
  %694 = reshape(%690, newshape=[48, 8]) /* ty=Tensor[(48, 8), int64] */;
  %695 = reshape(%691, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %696 = reshape(%692, newshape=[]) /* ty=int32 */;
  %697 = @func_4878(%693, %694, %695, %696) /* ty=(Tensor[(10, 3, 7), uint16], Tensor[(4, 9, 5), float64], Tensor[(48, 8), int64], Tensor[(198), float64], int32, Tensor[(10, 3, 7), float32], Tensor[(48, 1), float32]) */;
  %698 = add(%684, %685) /* ty=Tensor[(96, 4), int64] */;
  %699 = sigmoid(%688) /* ty=Tensor[(96, 4), float64] */;
  %700 = %697.4;
  (%698, %699, %700, %var_5962, meta[relay.Constant][40] /* ty=Tensor[(198), float64] */, -1 /* ty=int32 */)
}

def @func_5863() -> Tensor[(10, 3, 7), float32] {
  %701 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %701.0
}

def @func_3505() -> Tensor[(10, 3, 7), float64] {
  %702 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %703 = %702.0;
  %704 = cast(%703, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  acos(%704) /* ty=Tensor[(10, 3, 7), float64] */
}

def @func_5136() -> (Tensor[(16, 8, 5), bool], Tensor[(96, 4), float64]) {
  %705 = @func_3934() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) */;
  %706 = @func_4282() /* ty=(Tensor[(96, 4), float32],) */;
  %707 = %706.0;
  %708 = cast(%707, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %709 = %705.1;
  %710 = erf(%708) /* ty=Tensor[(96, 4), float64] */;
  (%709, %710)
}

def @func_5163() -> (Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32], Tensor[(96, 4), float64]) {
  %711 = @func_4369() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32]) */;
  %712 = @func_5136() /* ty=(Tensor[(16, 8, 5), bool], Tensor[(96, 4), float64]) */;
  %713 = %712.1;
  %714 = cast(%713, dtype="float32") /* ty=Tensor[(96, 4), float32] */;
  %715 = cast(%713, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %716 = %711.0;
  %717 = acos(%714) /* ty=Tensor[(96, 4), float32] */;
  %718 = rsqrt(%715) /* ty=Tensor[(96, 4), float64] */;
  (%716, %717, %718)
}

def @func_7824(%var_7819: Tensor[(96, 4), float32]) -> (Tensor[(10, 66), int32], Tensor[(96, 4), float64]) {
  %719 = @func_6841() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(96, 4), float32], Tensor[(4, 9, 5), int64], Tensor[(180), int64]) */;
  %720 = %719.1;
  %721 = cast(%var_7819, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %722 = shape_of(%720, dtype="int32") /* ty=Tensor[(2), int32] */;
  %723 = cast(%720, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %725 = @func_6525() /* ty=Tensor[(10, 66), int32] */;
  %726 = maximum(%723, %724) /* ty=Tensor[(96, 4), float64] */;
  (%725, %726)
}

def @func_6018() -> (Tensor[(10, 3, 7), float32],) {
  %727 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
  %728 = %727.0;
  (%728,)
}

def @func_5806() -> (Tensor[(10, 3, 7), uint16],) {
  %729 = @func_4078() /* ty=Tensor[(10, 3, 7), uint16] */;
  (%729,)
}

def @func_5845(%var_5826: Tensor[(9, 11, 13), float64], %var_5840: Tensor[(9, 11, 13), float64]) -> (Tensor[(10, 3, 7), float32], Tensor[(210), float32], Tensor[(9, 11, 13), uint16]) {
  %730 = cast(meta[relay.Constant][41] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %731 = reshape(%730, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float32] */;
  %732 = @func_5668(%731) /* ty=(Tensor[(10, 66), int32], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
  %733 = cast(%var_5826, dtype="float64") /* ty=Tensor[(9, 11, 13), float64] */;
  %734 = rsqrt(%733) /* ty=Tensor[(9, 11, 13), float64] */;
  %735 = cast(%var_5840, dtype="uint16") /* ty=Tensor[(9, 11, 13), uint16] */;
  %736 = shape_of(%734, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(%734, dtype="uint16") /* ty=Tensor[(9, 11, 13), uint16] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %739 = %732.1;
  %740 = add(%737, %738) /* ty=Tensor[(9, 11, 13), uint16] */;
  (%739, meta[relay.Constant][41] /* ty=Tensor[(210), float32] */, %740)
}

def @func_5090(%var_5060: Tensor[(3, 9, 2), float64]) -> (Tensor[(3, 9, 2), float32], Tensor[(1, 3, 8), float32], Tensor[(24), float32], Tensor[(384), int32], Tensor[(1, 2730), float64], Tensor[(384), int32]) {
  %741 = @func_4640() /* ty=Tensor[(3, 9, 2), float64] */;
  %742 = cast(%var_5060, dtype="float32") /* ty=Tensor[(3, 9, 2), float32] */;
  %743 = shape_of(%741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%741, dtype="float32") /* ty=Tensor[(3, 9, 2), float32] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %746 = cast(meta[relay.Constant][42] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %747 = reshape(%746, newshape=[1, 3, 8]) /* ty=Tensor[(1, 3, 8), float32] */;
  %748 = @func_1192(%747) /* ty=(Tensor[(1, 3, 8), float32],) */;
  %749 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 2730), float64] */, dtype="float64") /* ty=Tensor[(1, 2730), float64] */;
  %750 = cast(meta[relay.Constant][44] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
  %751 = reshape(%749, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), float64] */;
  %752 = reshape(%750, newshape=[384]) /* ty=Tensor[(384), int32] */;
  %753 = @func_2737(%751, %752) /* ty=(Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(96, 4), int32], Tensor[(14, 15, 13), float64]) */;
  %754 = power(%744, %745) /* ty=Tensor[(3, 9, 2), float32] */;
  %755 = %748.0;
  %756 = %753.2;
  (%754, %755, meta[relay.Constant][42] /* ty=Tensor[(24), float32] */, %756, meta[relay.Constant][43] /* ty=Tensor[(1, 2730), float64] */, meta[relay.Constant][44] /* ty=Tensor[(384), int32] */)
}

def @func_5571(%var_5558: Tensor[(1, 4, 2), float64]) -> Tensor[(1, 4, 2), float64] {
  %757 = cast(%var_5558, dtype="float64") /* ty=Tensor[(1, 4, 2), float64] */;
  sin(%757) /* ty=Tensor[(1, 4, 2), float64] */
}

def @func_7834() -> (Tensor[(10, 3, 7), float32],) {
  %758 = @func_4758() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) */;
  %759 = %758.0;
  (%759,)
}

def @func_8052(%var_8005: Tensor[(2730), float64]) -> (Tensor[(16, 8, 5), float64], Tensor[(3, 9, 2), float64], Tensor[(2730), float64], Tensor[(384), int32]) {
  %760 = @func_4260() /* ty=(Tensor[(16, 8, 5), float64], Tensor[(10, 3, 7), float32]) */;
  %761 = cast(%var_8005, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %762 = cast(meta[relay.Constant][45] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
  %763 = cast(%var_8005, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %764 = reshape(%761, newshape=[2730]) /* ty=Tensor[(2730), float64] */;
  %765 = reshape(%762, newshape=[48, 8]) /* ty=Tensor[(48, 8), int32] */;
  %766 = reshape(%763, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
  %767 = @func_6105(%764, %765, %766) /* ty=(Tensor[(3, 9, 2), float64], Tensor[(384), int32], Tensor[(48, 8), int32], Tensor[(2730), int8], Tensor[(2730), uint32], Tensor[(2730), float64]) */;
  %768 = %760.0;
  %769 = %767.0;
  (%768, %769, %var_8005, meta[relay.Constant][45] /* ty=Tensor[(384), int32] */)
}

def @func_8123() -> Tensor[(10, 3, 7), float32] {
  @func_5863() /* ty=Tensor[(10, 3, 7), float32] */
}

def @func_996(%var_983: Tensor[(4, 9, 5), int64]) -> (Tensor[(4, 9, 5), int64], Tensor[(4, 9, 5), float32]) {
  %770 = cast(%var_983, dtype="int64") /* ty=Tensor[(4, 9, 5), int64] */;
  %771 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(4, 9, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %772 = cast(meta[relay.Constant][46] /* ty=Tensor[(4, 9, 5), int64] */, dtype="int64") /* ty=Tensor[(4, 9, 5), int64] */;
  %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %774 = cast(meta[relay.Constant][46] /* ty=Tensor[(4, 9, 5), int64] */, dtype="float32") /* ty=Tensor[(4, 9, 5), float32] */;
  %775 = bitwise_and(%772, %773) /* ty=Tensor[(4, 9, 5), int64] */;
  %776 = acosh(%774) /* ty=Tensor[(4, 9, 5), float32] */;
  (%775, %776)
}

def @func_3084(%var_3030: Tensor[(3, 10, 12), float64], %var_3034: Tensor[(48), int64], %var_3035: Tensor[(1, 384), int64], %var_3045: Tensor[(3, 10, 12), float64], %var_3060: Tensor[(2730), float64]) -> (Tensor[(4, 9, 5), float64], Tensor[(48), int64], Tensor[(1, 384), int64], Tensor[(198), float64], int32, int32, Tensor[(3, 10, 12), uint16], Tensor[(96, 4), int32], Tensor[(2730), float64]) {
  %777 = cast(%var_3034, dtype="int64") /* ty=Tensor[(48), int64] */;
  %778 = cast(%var_3035, dtype="int64") /* ty=Tensor[(1, 384), int64] */;
  %779 = cast(meta[relay.Constant][47] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %780 = cast(5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %781 = reshape(%777, newshape=[3, 16, 1]) /* ty=Tensor[(3, 16, 1), int64] */;
  %782 = reshape(%778, newshape=[3, 16, 8]) /* ty=Tensor[(3, 16, 8), int64] */;
  %783 = reshape(%779, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %784 = reshape(%780, newshape=[]) /* ty=int32 */;
  %785 = @func_2625(%781, %782, %783, %784) /* ty=(Tensor[(3, 16, 8), int64], Tensor[(1680), int16], Tensor[(18), float64], Tensor[(6, 4, 16), float32], int32, Tensor[(16, 15, 7), float64], Tensor[(180), int64], Tensor[(2, 9, 11), float64], Tensor[(2, 9, 11), int32], Tensor[(4, 9, 5), float64]) */;
  %786 = cast(%var_3035, dtype="int32") /* ty=Tensor[(1, 384), int32] */;
  %787 = reshape(%786, newshape=[96, 4]) /* ty=Tensor[(96, 4), int32] */;
  %788 = @func_1103(%787) /* ty=(Tensor[(4, 12, 4), float32], Tensor[(6, 4, 16), float32], int32, Tensor[(96, 4), int32]) */;
  %789 = cast(%var_3030, dtype="float64") /* ty=Tensor[(3, 10, 12), float64] */;
  %790 = rsqrt(%789) /* ty=Tensor[(3, 10, 12), float64] */;
  %791 = cast(%var_3045, dtype="uint16") /* ty=Tensor[(3, 10, 12), uint16] */;
  %792 = shape_of(%790, dtype="int32") /* ty=Tensor[(3), int32] */;
  %793 = cast(%790, dtype="uint16") /* ty=Tensor[(3, 10, 12), uint16] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %795 = cast(%var_3060, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %796 = cast(%var_3035, dtype="int32") /* ty=Tensor[(1, 384), int32] */;
  %797 = reshape(%795, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), float64] */;
  %798 = reshape(%796, newshape=[384]) /* ty=Tensor[(384), int32] */;
  %799 = @func_2737(%797, %798) /* ty=(Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(96, 4), int32], Tensor[(14, 15, 13), float64]) */;
  %800 = %785.9;
  %801 = %788.2;
  %802 = left_shift(%793, %794) /* ty=Tensor[(3, 10, 12), uint16] */;
  %803 = %799.3;
  (%800, %var_3034, %var_3035, meta[relay.Constant][47] /* ty=Tensor[(198), float64] */, 5 /* ty=int32 */, %801, %802, %803, %var_3060)
}

def @func_1192(%var_1182: Tensor[(1, 3, 8), float32]) -> (Tensor[(1, 3, 8), float32],) {
  %804 = cast(%var_1182, dtype="float32") /* ty=Tensor[(1, 3, 8), float32] */;
  %805 = log10(%804) /* ty=Tensor[(1, 3, 8), float32] */;
  (%805,)
}

def @func_6288() -> Tensor[(96, 4), int16] {
  %806 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
  %806.2
}

def @func_4151() -> (Tensor[(96, 4), float32],) {
  %807 = @func_3983() /* ty=(Tensor[(96, 4), float32],) */;
  %808 = %807.0;
  (%808,)
}

def @func_7361() -> Tensor[(10, 3, 7), float32] {
  %809 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %809.0
}

def @func_4956(%var_4930: Tensor[(4, 7, 4), float64], %var_4951: Tensor[(12, 30), float64], %var_4952: Tensor[(384), int64]) -> (Tensor[(4, 7, 4), float64], Tensor[(384), int64], Tensor[(12, 30), float64], Tensor[(384), int64]) {
  %810 = cast(%var_4930, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %811 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(4, 7, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %812 = cast(meta[relay.Constant][48] /* ty=Tensor[(4, 7, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %814 = cast(%var_4951, dtype="float64") /* ty=Tensor[(12, 30), float64] */;
  %815 = cast(%var_4952, dtype="int64") /* ty=Tensor[(384), int64] */;
  %816 = reshape(%814, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %817 = reshape(%815, newshape=[384]) /* ty=Tensor[(384), int64] */;
  %818 = @func_3828(%816, %817) /* ty=(Tensor[(10, 3, 7), float32], Tensor[(4, 9, 5), float64], Tensor[(360), float64], Tensor[(48, 1), int64], Tensor[(384), int64], Tensor[(2730), float64], Tensor[(10, 3, 7), float32]) */;
  %819 = power(%812, %813) /* ty=Tensor[(4, 7, 4), float64] */;
  %820 = %818.4;
  (%819, %820, %var_4951, %var_4952)
}

def @func_4995(%var_4983: Tensor[(1, 384), int32]) -> (Tensor[(10, 3, 7), float64], Tensor[(6, 11, 10), bool], Tensor[(1, 384), int32], Tensor[(660), int32], Tensor[(10, 3, 7), float32]) {
  %821 = @func_3698() /* ty=Tensor[(10, 3, 7), float64] */;
  %822 = cast(%821, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %823 = cast(%821, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %824 = atanh(%822) /* ty=Tensor[(10, 3, 7), float64] */;
  %825 = cast(%824, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %826 = cast(%821, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %827 = cast(%var_4983, dtype="int32") /* ty=Tensor[(1, 384), int32] */;
  %828 = cast(meta[relay.Constant][49] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %829 = reshape(%823, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
  %830 = reshape(%825, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
  %831 = reshape(%826, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
  %832 = reshape(%827, newshape=[384]) /* ty=Tensor[(384), int32] */;
  %833 = reshape(%828, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %834 = @func_1360(%829, %830, %831, %832, %833) /* ty=(Tensor[(3, 10, 7), float64], Tensor[(3, 10, 7), bool], Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(6, 11, 10), bool], Tensor[(660), int32]) */;
  %835 = cast(%821, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %836 = %834.5;
  %837 = sqrt(%835) /* ty=Tensor[(10, 3, 7), float32] */;
  (%824, %836, %var_4983, meta[relay.Constant][49] /* ty=Tensor[(660), int32] */, %837)
}

def @func_3244() -> (Tensor[(10, 3, 7), float32],) {
  %838 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %839 = %838.0;
  (%839,)
}

def @func_6667() -> Tensor[(10, 3, 7), float32] {
  %840 = @func_3934() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) */;
  %840.0
}

def @func_7213(%var_7048: Tensor[(198), float64], %var_7133: Tensor[(432), uint32], %var_7134: Tensor[(1680), int16], %var_7135: Tensor[(5, 132), int32]) -> (Tensor[(3, 9, 2), float64], Tensor[(18), float64], Tensor[(48), int64], Tensor[(12, 32), int64], Tensor[(198), float64], int32, Tensor[(10, 3, 7), float64], Tensor[(96, 4), float64], Tensor[(18), float64], Tensor[(10, 3, 7), float32], Tensor[(660), int32], Tensor[(432), uint32], Tensor[(1680), int16], Tensor[(5, 132), int32], Tensor[(16, 8, 5), bool], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16], Tensor[(96, 4), float32], Tensor[(10, 3, 7), float32]) {
  %841 = @func_4718() /* ty=(Tensor[(3, 9, 2), float64], Tensor[(16, 8, 5), float64]) */;
  %842 = cast(meta[relay.Constant][50] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %843 = cast(meta[relay.Constant][51] /* ty=Tensor[(12, 32), int64] */, dtype="int64") /* ty=Tensor[(12, 32), int64] */;
  %844 = cast(%var_7048, dtype="float64") /* ty=Tensor[(198), float64] */;
  %845 = cast(8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %846 = reshape(%842, newshape=[3, 16, 1]) /* ty=Tensor[(3, 16, 1), int64] */;
  %847 = reshape(%843, newshape=[3, 16, 8]) /* ty=Tensor[(3, 16, 8), int64] */;
  %848 = reshape(%844, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %849 = reshape(%845, newshape=[]) /* ty=int32 */;
  %850 = @func_2625(%846, %847, %848, %849) /* ty=(Tensor[(3, 16, 8), int64], Tensor[(1680), int16], Tensor[(18), float64], Tensor[(6, 4, 16), float32], int32, Tensor[(16, 15, 7), float64], Tensor[(180), int64], Tensor[(2, 9, 11), float64], Tensor[(2, 9, 11), int32], Tensor[(4, 9, 5), float64]) */;
  %851 = cast(8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %852 = reshape(%851, newshape=[]) /* ty=int32 */;
  %853 = @func_5375(%852) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(48, 8), int32], Tensor[(6, 11, 10), float64], Tensor[(3, 5, 11), float64], Tensor[(165), float64], Tensor[(18), float64], Tensor[(1, 48), int64], Tensor[(198), float64], int32, int32) */;
  %854 = @func_6883() /* ty=(Tensor[(96, 4), float64], Tensor[(96, 4), int16]) */;
  %855 = @func_4380() /* ty=(Tensor[(96, 4), float32], Tensor[(2, 9, 11), float64], Tensor[(18), float64], Tensor[(198), float64]) */;
  %856 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %857 = cast(8 /* ty=int32 */, dtype="uint32") /* ty=uint32 */;
  %858 = cast(%var_7133, dtype="uint32") /* ty=Tensor[(432), uint32] */;
  %859 = cast(%var_7134, dtype="int16") /* ty=Tensor[(1680), int16] */;
  %860 = cast(%var_7133, dtype="uint32") /* ty=Tensor[(432), uint32] */;
  %861 = %853.0;
  %862 = cast(%861, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %863 = cast(%var_7135, dtype="int32") /* ty=Tensor[(5, 132), int32] */;
  %864 = reshape(%857, newshape=[]) /* ty=uint32 */;
  %865 = reshape(%858, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), uint32] */;
  %866 = reshape(%859, newshape=[2, 840]) /* ty=Tensor[(2, 840), int16] */;
  %867 = reshape(%860, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), uint32] */;
  %868 = reshape(%862, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %869 = reshape(%863, newshape=[660]) /* ty=Tensor[(660), int32] */;
  %870 = @func_2238(%864, %865, %866, %867, %868, %869) /* ty=(Tensor[(6, 8, 9), bool], Tensor[(16, 15, 7), float32], Tensor[(2, 840), int16], Tensor[(6, 8, 9), bool], Tensor[(6, 8, 9), float32], Tensor[(3, 10, 7), float64], Tensor[(210), float64], Tensor[(384), int32], Tensor[(660), int32]) */;
  %871 = @func_5136() /* ty=(Tensor[(16, 8, 5), bool], Tensor[(96, 4), float64]) */;
  %872 = @func_5487() /* ty=(Tensor[(10, 3, 7), uint16], Tensor[(10, 3, 7), float32]) */;
  %873 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %874 = @func_4758() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) */;
  %875 = @func_3698() /* ty=Tensor[(10, 3, 7), float64] */;
  %876 = cast(%875, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %877 = cosh(%876) /* ty=Tensor[(10, 3, 7), float64] */;
  %878 = cast(%875, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %879 = shape_of(%877, dtype="int32") /* ty=Tensor[(3), int32] */;
  %880 = cast(%877, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %882 = floor_mod(%880, %881) /* ty=Tensor[(10, 3, 7), float64] */;
  %883 = cast(%882, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %884 = %841.0;
  %885 = %850.2;
  %886 = %854.0;
  %887 = %855.2;
  %888 = %856.0;
  %889 = %870.8;
  %890 = %871.0;
  %891 = %872.1;
  %892 = %873.0;
  %893 = %874.1;
  %894 = @func_4396() /* ty=Tensor[(96, 4), float32] */;
  %895 = log2(%883) /* ty=Tensor[(10, 3, 7), float32] */;
  (%884, %885, meta[relay.Constant][50] /* ty=Tensor[(48), int64] */, meta[relay.Constant][51] /* ty=Tensor[(12, 32), int64] */, %var_7048, 8 /* ty=int32 */, %861, %886, %887, %888, %889, %var_7133, %var_7134, %var_7135, %890, %891, %892, %893, %894, %895)
}

def @func_4078() -> Tensor[(10, 3, 7), uint16] {
  %896 = @func_3505() /* ty=Tensor[(10, 3, 7), float64] */;
  %897 = cast(meta[relay.Constant][52] /* ty=Tensor[(10, 3, 7), float64] */, dtype="uint16") /* ty=Tensor[(10, 3, 7), uint16] */;
  %898 = shape_of(%896, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(%896, dtype="uint16") /* ty=Tensor[(10, 3, 7), uint16] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_or(%899, %900) /* ty=Tensor[(10, 3, 7), uint16] */
}

def @func_5738() -> Tensor[(10, 3, 7), float32] {
  %901 = @func_4758() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) */;
  %901.0
}

def @func_4396() -> Tensor[(96, 4), float32] {
  %902 = @func_4151() /* ty=(Tensor[(96, 4), float32],) */;
  %902.0
}

def @func_7894(%var_7847: Tensor[(96, 4), float32]) -> (Tensor[(10, 3, 7), float64], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64], Tensor[(10, 66), int32], Tensor[(10, 3, 7), float64], Tensor[(96, 4), bool]) {
  %903 = @func_7587() /* ty=Tensor[(10, 3, 7), float64] */;
  %904 = cast(%903, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %905 = reshape(%904, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float32] */;
  %906 = @func_5668(%905) /* ty=(Tensor[(10, 66), int32], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
  %907 = @func_5163() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32], Tensor[(96, 4), float64]) */;
  %908 = @func_4369() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32]) */;
  %909 = @func_6562() /* ty=Tensor[(96, 4), float32] */;
  %910 = cast(%var_7847, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %911 = shape_of(%909, dtype="int32") /* ty=Tensor[(2), int32] */;
  %912 = cast(%909, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %913 = dyn.reshape(%910, %911, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %914 = less(%912, %913) /* ty=Tensor[(96, 4), bool] */;
  %915 = cast(%914, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %916 = shape_of(%var_7847, dtype="int32") /* ty=Tensor[(2), int32] */;
  %917 = cast(%var_7847, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %919 = %906.1;
  %920 = %907.0;
  %921 = @func_4619() /* ty=Tensor[(10, 66), int32] */;
  %922 = %908.0;
  %923 = logical_and(%917, %918) /* ty=Tensor[(96, 4), bool] */;
  (%903, %919, %920, %921, %922, %923)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5969(%var_5967: Tensor[(96, 4), float32], %var_5968: Tensor[(48), int64]) -> (Tensor[(96, 4), int64], Tensor[(96, 4), float64], int32, Tensor[(48), int64], Tensor[(198), float64], int32) {
  %21 = fn (%var_5943: Tensor[(96, 4), float32], %var_5962: Tensor[(48), int64]) -> (Tensor[(96, 4), int64], Tensor[(96, 4), float64], int32, Tensor[(48), int64], Tensor[(198), float64], int32) {
    %0 = @func_5449() /* ty=(Tensor[(96, 4), float32],) */;
    %1 = %0.0;
    %2 = cast(%var_5943, dtype="int64") /* ty=Tensor[(96, 4), int64] */;
    %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(2), int32] */;
    %4 = cast(%1, dtype="int64") /* ty=Tensor[(96, 4), int64] */;
    %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %6 = cast(%1, dtype="float32") /* ty=Tensor[(96, 4), float32] */;
    %7 = atanh(%6) /* ty=Tensor[(96, 4), float32] */;
    %8 = cast(%7, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
    %9 = cast(%var_5962, dtype="int64") /* ty=Tensor[(48), int64] */;
    %10 = cast(%var_5943, dtype="int64") /* ty=Tensor[(96, 4), int64] */;
    %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
    %12 = cast(-1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %13 = reshape(%9, newshape=[48, 1]) /* ty=Tensor[(48, 1), int64] */;
    %14 = reshape(%10, newshape=[48, 8]) /* ty=Tensor[(48, 8), int64] */;
    %15 = reshape(%11, newshape=[198]) /* ty=Tensor[(198), float64] */;
    %16 = reshape(%12, newshape=[]) /* ty=int32 */;
    %17 = @func_4878(%13, %14, %15, %16) /* ty=(Tensor[(10, 3, 7), uint16], Tensor[(4, 9, 5), float64], Tensor[(48, 8), int64], Tensor[(198), float64], int32, Tensor[(10, 3, 7), float32], Tensor[(48, 1), float32]) */;
    %18 = add(%4, %5) /* ty=Tensor[(96, 4), int64] */;
    %19 = sigmoid(%8) /* ty=Tensor[(96, 4), float64] */;
    %20 = %17.4;
    (%18, %19, %20, %var_5962, meta[relay.Constant][0] /* ty=Tensor[(198), float64] */, -1 /* ty=int32 */)
  };
  %21(%var_5967, %var_5968) /* ty=(Tensor[(96, 4), int64], Tensor[(96, 4), float64], int32, Tensor[(48), int64], Tensor[(198), float64], int32) */
}

def @func_5989() -> (Tensor[(16, 8, 5), float64],) {
  %22 = @func_4718() /* ty=(Tensor[(3, 9, 2), float64], Tensor[(16, 8, 5), float64]) */;
  %23 = %22.1;
  (%23,)
}

def @func_430(%var_425: Tensor[(6, 11, 10), int32]) -> Tensor[(6, 11, 10), bool] {
  %24 = cast(%var_425, dtype="bool") /* ty=Tensor[(6, 11, 10), bool] */;
  %25 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(6, 11, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %26 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 11, 10), int32] */, dtype="bool") /* ty=Tensor[(6, 11, 10), bool] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%26, %27) /* ty=Tensor[(6, 11, 10), bool] */
}

def @func_2105(%var_2103: Tensor[(16, 15, 7), int16], %var_2104: Tensor[(16, 15, 7), int16]) -> Tensor[(16, 15, 7), float32] {
  %39 = fn (%var_2071: Tensor[(16, 15, 7), int16], %var_2078: Tensor[(16, 15, 7), int16]) -> Tensor[(16, 15, 7), float32] {
    %28 = cast(%var_2071, dtype="int16") /* ty=Tensor[(16, 15, 7), int16] */;
    %29 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(16, 15, 7), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(16, 15, 7), int16] */, dtype="int16") /* ty=Tensor[(16, 15, 7), int16] */;
    %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %32 = add(%30, %31) /* ty=Tensor[(16, 15, 7), int16] */;
    %33 = cast(%var_2078, dtype="int16") /* ty=Tensor[(16, 15, 7), int16] */;
    %34 = shape_of(%32, dtype="int32") /* ty=Tensor[(3), int32] */;
    %35 = cast(%32, dtype="int16") /* ty=Tensor[(16, 15, 7), int16] */;
    %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %37 = maximum(%35, %36) /* ty=Tensor[(16, 15, 7), int16] */;
    %38 = cast(%37, dtype="float32") /* ty=Tensor[(16, 15, 7), float32] */;
    rsqrt(%38) /* ty=Tensor[(16, 15, 7), float32] */
  };
  %39(%var_2103, %var_2104) /* ty=Tensor[(16, 15, 7), float32] */
}

def @func_5759() -> (Tensor[(10, 3, 7), float32],) {
  %40 = @func_3192() /* ty=Tensor[(10, 3, 7), float32] */;
  (%40,)
}

def @func_6562() -> Tensor[(96, 4), float32] {
  %41 = @func_5449() /* ty=(Tensor[(96, 4), float32],) */;
  %41.0
}

def @func_1366(%var_1361: Tensor[(3, 10, 7), float64], %var_1362: Tensor[(3, 10, 7), float64], %var_1363: Tensor[(3, 10, 7), float64], %var_1364: Tensor[(384), int32], %var_1365: Tensor[(660), int32]) -> (Tensor[(3, 10, 7), float64], Tensor[(3, 10, 7), bool], Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(6, 11, 10), bool], Tensor[(660), int32]) {
  %60 = fn (%var_1307: Tensor[(3, 10, 7), float64], %var_1308: Tensor[(3, 10, 7), float64], %var_1312: Tensor[(3, 10, 7), float64], %var_1325: Tensor[(384), int32], %var_1340: Tensor[(660), int32]) -> (Tensor[(3, 10, 7), float64], Tensor[(3, 10, 7), bool], Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(6, 11, 10), bool], Tensor[(660), int32]) {
    %42 = cast(%var_1308, dtype="float64") /* ty=Tensor[(3, 10, 7), float64] */;
    %43 = shape_of(%var_1307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %44 = cast(%var_1307, dtype="float64") /* ty=Tensor[(3, 10, 7), float64] */;
    %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %46 = cast(%var_1312, dtype="bool") /* ty=Tensor[(3, 10, 7), bool] */;
    %47 = shape_of(%var_1308, dtype="int32") /* ty=Tensor[(3), int32] */;
    %48 = cast(%var_1308, dtype="bool") /* ty=Tensor[(3, 10, 7), bool] */;
    %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %50 = cast(4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %51 = cast(%var_1325, dtype="int32") /* ty=Tensor[(384), int32] */;
    %52 = reshape(%50, newshape=[]) /* ty=int32 */;
    %53 = reshape(%51, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), int32] */;
    %54 = cast(%var_1340, dtype="int32") /* ty=Tensor[(660), int32] */;
    %55 = reshape(%54, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int32] */;
    %56 = mod(%44, %45) /* ty=Tensor[(3, 10, 7), float64] */;
    %57 = logical_and(%48, %49) /* ty=Tensor[(3, 10, 7), bool] */;
    %58 = @func_588(%52, %53) /* ty=Tensor[(6, 4, 16), float32] */;
    %59 = @func_430(%55) /* ty=Tensor[(6, 11, 10), bool] */;
    (%56, %57, %58, 4 /* ty=int32 */, %var_1325, %59, %var_1340)
  };
  %60(%var_1361, %var_1362, %var_1363, %var_1364, %var_1365) /* ty=(Tensor[(3, 10, 7), float64], Tensor[(3, 10, 7), bool], Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(6, 11, 10), bool], Tensor[(660), int32]) */
}

def @func_3828(%var_3816: Tensor[(360), float64], %var_3818: Tensor[(384), int64]) -> (Tensor[(10, 3, 7), float32], Tensor[(4, 9, 5), float64], Tensor[(360), float64], Tensor[(48, 1), int64], Tensor[(384), int64], Tensor[(2730), float64], Tensor[(10, 3, 7), float32]) {
  %61 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
  %62 = cast(%var_3816, dtype="float64") /* ty=Tensor[(360), float64] */;
  %63 = cast(meta[relay.Constant][3] /* ty=Tensor[(48, 1), int64] */, dtype="int64") /* ty=Tensor[(48, 1), int64] */;
  %64 = cast(%var_3818, dtype="int64") /* ty=Tensor[(384), int64] */;
  %65 = cast(%var_3816, dtype="float64") /* ty=Tensor[(360), float64] */;
  %66 = cast(meta[relay.Constant][4] /* ty=Tensor[(2730), float64] */, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %67 = reshape(%62, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float64] */;
  %68 = reshape(%63, newshape=[48]) /* ty=Tensor[(48), int64] */;
  %69 = reshape(%64, newshape=[1, 384]) /* ty=Tensor[(1, 384), int64] */;
  %70 = reshape(%65, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float64] */;
  %71 = reshape(%66, newshape=[2730]) /* ty=Tensor[(2730), float64] */;
  %72 = @func_3084(%67, %68, %69, %70, %71) /* ty=(Tensor[(4, 9, 5), float64], Tensor[(48), int64], Tensor[(1, 384), int64], Tensor[(198), float64], int32, int32, Tensor[(3, 10, 12), uint16], Tensor[(96, 4), int32], Tensor[(2730), float64]) */;
  %73 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %74 = %61.0;
  %75 = %72.0;
  %76 = %73.0;
  (%74, %75, %var_3816, meta[relay.Constant][3] /* ty=Tensor[(48, 1), int64] */, %var_3818, meta[relay.Constant][4] /* ty=Tensor[(2730), float64] */, %76)
}

def @func_3449(%var_3443: Tensor[(10, 3, 7), float32], %var_3444: Tensor[(360, 1), float64], %var_3445: Tensor[(2, 24), int64], %var_3446: Tensor[(384), int64], %var_3447: Tensor[(7, 390), float64], %var_3448: Tensor[(10, 3, 7), float32]) -> (Tensor[(10, 3, 7), bool], Tensor[(96, 4), int32], Tensor[(360, 1), float64], Tensor[(2, 24), int64], Tensor[(384), int64], Tensor[(7, 390), float64], Tensor[(10, 3, 7), int64]) {
  @func_3441(%var_3443, %var_3444, %var_3445, %var_3446, %var_3447, %var_3448) /* ty=(Tensor[(10, 3, 7), bool], Tensor[(96, 4), int32], Tensor[(360, 1), float64], Tensor[(2, 24), int64], Tensor[(384), int64], Tensor[(7, 390), float64], Tensor[(10, 3, 7), int64]) */
}

def @func_3699() -> Tensor[(10, 3, 7), float64] {
  %82 = fn () -> Tensor[(10, 3, 7), float64] {
    %77 = @func_3192() /* ty=Tensor[(10, 3, 7), float32] */;
    %78 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 3, 7), float32] */, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %79 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
    %80 = cast(%77, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%80, %81) /* ty=Tensor[(10, 3, 7), float64] */
  };
  %82() /* ty=Tensor[(10, 3, 7), float64] */
}

def @func_6133() -> Tensor[(96, 4), float32] {
  %84 = fn () -> Tensor[(96, 4), float32] {
    %83 = @func_4282() /* ty=(Tensor[(96, 4), float32],) */;
    %83.0
  };
  %84() /* ty=Tensor[(96, 4), float32] */
}

def @func_6668() -> Tensor[(10, 3, 7), float32] {
  %86 = fn () -> Tensor[(10, 3, 7), float32] {
    %85 = @func_3934() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) */;
    %85.0
  };
  %86() /* ty=Tensor[(10, 3, 7), float32] */
}

def @func_7799() -> (Tensor[(10, 3, 7), float32], Tensor[(10, 66), int32]) {
  %87 = @func_5759() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %88 = %87.0;
  %89 = @func_6525() /* ty=Tensor[(10, 66), int32] */;
  (%88, %89)
}

def @func_5032() -> Tensor[(10, 66), int32] {
  %90 = fn () -> Tensor[(10, 66), int32] {
    @func_4619() /* ty=Tensor[(10, 66), int32] */
  };
  %90() /* ty=Tensor[(10, 66), int32] */
}

def @func_7589() -> Tensor[(10, 3, 7), float64] {
  @func_7587() /* ty=Tensor[(10, 3, 7), float64] */
}

def @func_4152() -> (Tensor[(96, 4), float32],) {
  %93 = fn () -> (Tensor[(96, 4), float32],) {
    %91 = @func_3983() /* ty=(Tensor[(96, 4), float32],) */;
    %92 = %91.0;
    (%92,)
  };
  %93() /* ty=(Tensor[(96, 4), float32],) */
}

def @func_7894(%var_7847: Tensor[(96, 4), float32]) -> (Tensor[(10, 3, 7), float64], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64], Tensor[(10, 66), int32], Tensor[(10, 3, 7), float64], Tensor[(96, 4), bool]) {
  %94 = @func_7587() /* ty=Tensor[(10, 3, 7), float64] */;
  %95 = cast(%94, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %96 = reshape(%95, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float32] */;
  %97 = @func_5668(%96) /* ty=(Tensor[(10, 66), int32], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
  %98 = @func_5163() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32], Tensor[(96, 4), float64]) */;
  %99 = @func_4369() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32]) */;
  %100 = @func_6562() /* ty=Tensor[(96, 4), float32] */;
  %101 = cast(%var_7847, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %102 = shape_of(%100, dtype="int32") /* ty=Tensor[(2), int32] */;
  %103 = cast(%100, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %105 = less(%103, %104) /* ty=Tensor[(96, 4), bool] */;
  %106 = cast(%105, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %107 = shape_of(%var_7847, dtype="int32") /* ty=Tensor[(2), int32] */;
  %108 = cast(%var_7847, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %110 = %97.1;
  %111 = %98.0;
  %112 = @func_4619() /* ty=Tensor[(10, 66), int32] */;
  %113 = %99.0;
  %114 = logical_and(%108, %109) /* ty=Tensor[(96, 4), bool] */;
  (%94, %110, %111, %112, %113, %114)
}

def @func_5138() -> (Tensor[(16, 8, 5), bool], Tensor[(96, 4), float64]) {
  @func_5136() /* ty=(Tensor[(16, 8, 5), bool], Tensor[(96, 4), float64]) */
}

def @func_5692(%var_5686: Tensor[(96, 4), float32]) -> Tensor[(96, 4), bool] {
  %115 = @func_5449() /* ty=(Tensor[(96, 4), float32],) */;
  %116 = %115.0;
  %117 = cast(%var_5686, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %118 = shape_of(%116, dtype="int32") /* ty=Tensor[(2), int32] */;
  %119 = cast(%116, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  greater(%119, %120) /* ty=Tensor[(96, 4), bool] */
}

def @func_6264(%var_6228: Tensor[(13, 2), float64]) -> (Tensor[(13, 2), float64], Tensor[(96, 4), float32], Tensor[(96, 4), int64], Tensor[(48), int64]) {
  %121 = cast(%var_6228, dtype="float64") /* ty=Tensor[(13, 2), float64] */;
  %122 = @func_4282() /* ty=(Tensor[(96, 4), float32],) */;
  %123 = %122.0;
  %124 = cast(%123, dtype="float32") /* ty=Tensor[(96, 4), float32] */;
  %125 = cast(meta[relay.Constant][6] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %126 = reshape(%124, newshape=[96, 4]) /* ty=Tensor[(96, 4), float32] */;
  %127 = reshape(%125, newshape=[48]) /* ty=Tensor[(48), int64] */;
  %128 = @func_5966(%126, %127) /* ty=(Tensor[(96, 4), int64], Tensor[(96, 4), float64], int32, Tensor[(48), int64], Tensor[(198), float64], int32) */;
  %129 = atanh(%121) /* ty=Tensor[(13, 2), float64] */;
  %130 = %128.0;
  (%129, %123, %130, meta[relay.Constant][6] /* ty=Tensor[(48), int64] */)
}

def @func_5451() -> (Tensor[(96, 4), float32],) {
  @func_5449() /* ty=(Tensor[(96, 4), float32],) */
}

def @func_6785(%var_6783: Tensor[(10, 3, 7), float32]) -> Tensor[(10, 3, 7), bool] {
  @func_6782(%var_6783) /* ty=Tensor[(10, 3, 7), bool] */
}

def @func_7707() -> (Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) {
  %133 = fn () -> (Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) {
    %131 = @func_5863() /* ty=Tensor[(10, 3, 7), float32] */;
    %132 = @func_7587() /* ty=Tensor[(10, 3, 7), float64] */;
    (%131, %132)
  };
  %133() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */
}

def @func_4576() -> (Tensor[(96, 4), float32], Tensor[(6, 11, 10), bool], Tensor[(10, 66), int32]) {
  %140 = fn () -> (Tensor[(96, 4), float32], Tensor[(6, 11, 10), bool], Tensor[(10, 66), int32]) {
    %134 = @func_4151() /* ty=(Tensor[(96, 4), float32],) */;
    %135 = cast(meta[relay.Constant][7] /* ty=Tensor[(10, 66), int32] */, dtype="int32") /* ty=Tensor[(10, 66), int32] */;
    %136 = reshape(%135, newshape=[330, 2]) /* ty=Tensor[(330, 2), int32] */;
    %137 = @func_482(%136) /* ty=(Tensor[(6, 11, 7), float32], Tensor[(6, 11, 10), bool], Tensor[(330, 2), int32], Tensor[(6, 11, 10), bool]) */;
    %138 = %134.0;
    %139 = %137.3;
    (%138, %139, meta[relay.Constant][7] /* ty=Tensor[(10, 66), int32] */)
  };
  %140() /* ty=(Tensor[(96, 4), float32], Tensor[(6, 11, 10), bool], Tensor[(10, 66), int32]) */
}

def @func_7032(%var_7028: Tensor[(360), float64], %var_7029: Tensor[(48), int64], %var_7030: Tensor[(384), int64], %var_7031: Tensor[(2730), float64]) -> (Tensor[(16, 8, 5), float64], Tensor[(198), float64], Tensor[(210), float32], Tensor[(360), float64], Tensor[(48), int64], Tensor[(384), int64], Tensor[(2730), float64], Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), float64], Tensor[(10, 66), int32], Tensor[(96, 4), int64], Tensor[(16, 15, 7), float32], Tensor[(1680), int16], Tensor[(96, 4), float64]) {
  %178 = fn (%var_6975: Tensor[(360), float64], %var_6976: Tensor[(48), int64], %var_6977: Tensor[(384), int64], %var_6978: Tensor[(2730), float64]) -> (Tensor[(16, 8, 5), float64], Tensor[(198), float64], Tensor[(210), float32], Tensor[(360), float64], Tensor[(48), int64], Tensor[(384), int64], Tensor[(2730), float64], Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), float64], Tensor[(10, 66), int32], Tensor[(96, 4), int64], Tensor[(16, 15, 7), float32], Tensor[(1680), int16], Tensor[(96, 4), float64]) {
    %141 = @func_5989() /* ty=(Tensor[(16, 8, 5), float64],) */;
    %142 = @func_4380() /* ty=(Tensor[(96, 4), float32], Tensor[(2, 9, 11), float64], Tensor[(18), float64], Tensor[(198), float64]) */;
    %143 = @func_6018() /* ty=(Tensor[(10, 3, 7), float32],) */;
    %144 = @func_4260() /* ty=(Tensor[(16, 8, 5), float64], Tensor[(10, 3, 7), float32]) */;
    %145 = @func_5449() /* ty=(Tensor[(96, 4), float32],) */;
    %146 = %145.0;
    %147 = cast(meta[relay.Constant][8] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
    %148 = cast(%var_6975, dtype="float64") /* ty=Tensor[(360), float64] */;
    %149 = cast(%var_6976, dtype="int64") /* ty=Tensor[(48), int64] */;
    %150 = cast(%var_6977, dtype="int64") /* ty=Tensor[(384), int64] */;
    %151 = cast(%var_6978, dtype="float64") /* ty=Tensor[(2730), float64] */;
    %152 = cast(meta[relay.Constant][8] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
    %153 = reshape(%147, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float32] */;
    %154 = reshape(%148, newshape=[360, 1]) /* ty=Tensor[(360, 1), float64] */;
    %155 = reshape(%149, newshape=[2, 24]) /* ty=Tensor[(2, 24), int64] */;
    %156 = reshape(%150, newshape=[384]) /* ty=Tensor[(384), int64] */;
    %157 = reshape(%151, newshape=[7, 390]) /* ty=Tensor[(7, 390), float64] */;
    %158 = reshape(%152, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float32] */;
    %159 = @func_3441(%153, %154, %155, %156, %157, %158) /* ty=(Tensor[(10, 3, 7), bool], Tensor[(96, 4), int32], Tensor[(360, 1), float64], Tensor[(2, 24), int64], Tensor[(384), int64], Tensor[(7, 390), float64], Tensor[(10, 3, 7), int64]) */;
    %160 = %159.1;
    %161 = cast(%160, dtype="int64") /* ty=Tensor[(96, 4), int64] */;
    %162 = shape_of(%146, dtype="int32") /* ty=Tensor[(2), int32] */;
    %163 = cast(%146, dtype="int64") /* ty=Tensor[(96, 4), int64] */;
    %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %165 = cast(meta[relay.Constant][9] /* ty=Tensor[(1680), int16] */, dtype="int16") /* ty=Tensor[(1680), int16] */;
    %166 = cast(meta[relay.Constant][9] /* ty=Tensor[(1680), int16] */, dtype="int16") /* ty=Tensor[(1680), int16] */;
    %167 = reshape(%165, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int16] */;
    %168 = reshape(%166, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int16] */;
    %169 = @func_5136() /* ty=(Tensor[(16, 8, 5), bool], Tensor[(96, 4), float64]) */;
    %170 = %141.0;
    %171 = %142.3;
    %172 = %143.0;
    %173 = %144.0;
    %174 = @func_4619() /* ty=Tensor[(10, 66), int32] */;
    %175 = bitwise_xor(%163, %164) /* ty=Tensor[(96, 4), int64] */;
    %176 = @func_2102(%167, %168) /* ty=Tensor[(16, 15, 7), float32] */;
    %177 = %169.1;
    (%170, %171, meta[relay.Constant][8] /* ty=Tensor[(210), float32] */, %var_6975, %var_6976, %var_6977, %var_6978, %172, %173, %174, %175, %176, meta[relay.Constant][9] /* ty=Tensor[(1680), int16] */, %177)
  };
  %178(%var_7028, %var_7029, %var_7030, %var_7031) /* ty=(Tensor[(16, 8, 5), float64], Tensor[(198), float64], Tensor[(210), float32], Tensor[(360), float64], Tensor[(48), int64], Tensor[(384), int64], Tensor[(2730), float64], Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), float64], Tensor[(10, 66), int32], Tensor[(96, 4), int64], Tensor[(16, 15, 7), float32], Tensor[(1680), int16], Tensor[(96, 4), float64]) */
}

def @func_4759() -> (Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) {
  %183 = fn () -> (Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) {
    %179 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
    %180 = @func_4602() /* ty=(Tensor[(10, 3, 7), uint16], Tensor[(1, 3, 8), float32], Tensor[(24), float32]) */;
    %181 = %179.0;
    %182 = %180.0;
    (%181, %182)
  };
  %183() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) */
}

def @func_5375(%var_5368: int32) -> (Tensor[(10, 3, 7), float64], Tensor[(48, 8), int32], Tensor[(6, 11, 10), float64], Tensor[(3, 5, 11), float64], Tensor[(165), float64], Tensor[(18), float64], Tensor[(1, 48), int64], Tensor[(198), float64], int32, int32) {
  %184 = @func_5163() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32], Tensor[(96, 4), float64]) */;
  %185 = cast(meta[relay.Constant][10] /* ty=Tensor[(48, 8), int32] */, dtype="int32") /* ty=Tensor[(48, 8), int32] */;
  %186 = reshape(%185, newshape=[1, 384]) /* ty=Tensor[(1, 384), int32] */;
  %187 = @func_4995(%186) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(6, 11, 10), bool], Tensor[(1, 384), int32], Tensor[(660), int32], Tensor[(10, 3, 7), float32]) */;
  %188 = %187.1;
  %189 = cast(%188, dtype="float64") /* ty=Tensor[(6, 11, 10), float64] */;
  %190 = cast(meta[relay.Constant][11] /* ty=Tensor[(165), float64] */, dtype="float64") /* ty=Tensor[(165), float64] */;
  %191 = reshape(%190, newshape=[3, 5, 11]) /* ty=Tensor[(3, 5, 11), float64] */;
  %192 = @func_4785(%191) /* ty=(Tensor[(3, 5, 11), float64], Tensor[(10, 3, 7), float32]) */;
  %193 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 48), int64] */, dtype="int64") /* ty=Tensor[(1, 48), int64] */;
  %194 = cast(meta[relay.Constant][10] /* ty=Tensor[(48, 8), int32] */, dtype="int64") /* ty=Tensor[(48, 8), int64] */;
  %195 = cast(meta[relay.Constant][13] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %196 = cast(%var_5368, dtype="int32") /* ty=int32 */;
  %197 = reshape(%193, newshape=[3, 16, 1]) /* ty=Tensor[(3, 16, 1), int64] */;
  %198 = reshape(%194, newshape=[3, 16, 8]) /* ty=Tensor[(3, 16, 8), int64] */;
  %199 = reshape(%195, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %200 = reshape(%196, newshape=[]) /* ty=int32 */;
  %201 = @func_2625(%197, %198, %199, %200) /* ty=(Tensor[(3, 16, 8), int64], Tensor[(1680), int16], Tensor[(18), float64], Tensor[(6, 4, 16), float32], int32, Tensor[(16, 15, 7), float64], Tensor[(180), int64], Tensor[(2, 9, 11), float64], Tensor[(2, 9, 11), int32], Tensor[(4, 9, 5), float64]) */;
  %202 = cast(meta[relay.Constant][10] /* ty=Tensor[(48, 8), int32] */, dtype="int32") /* ty=Tensor[(48, 8), int32] */;
  %203 = reshape(%202, newshape=[96, 4]) /* ty=Tensor[(96, 4), int32] */;
  %204 = @func_1103(%203) /* ty=(Tensor[(4, 12, 4), float32], Tensor[(6, 4, 16), float32], int32, Tensor[(96, 4), int32]) */;
  %205 = %184.0;
  %206 = atan(%189) /* ty=Tensor[(6, 11, 10), float64] */;
  %207 = %192.0;
  %208 = %201.2;
  %209 = %204.2;
  (%205, meta[relay.Constant][10] /* ty=Tensor[(48, 8), int32] */, %206, %207, meta[relay.Constant][11] /* ty=Tensor[(165), float64] */, %208, meta[relay.Constant][12] /* ty=Tensor[(1, 48), int64] */, meta[relay.Constant][13] /* ty=Tensor[(198), float64] */, %var_5368, %209)
}

def @func_1105(%var_1104: Tensor[(96, 4), int32]) -> (Tensor[(4, 12, 4), float32], Tensor[(6, 4, 16), float32], int32, Tensor[(96, 4), int32]) {
  %219 = fn (%var_1084: Tensor[(96, 4), int32]) -> (Tensor[(4, 12, 4), float32], Tensor[(6, 4, 16), float32], int32, Tensor[(96, 4), int32]) {
    %210 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 12, 4), float32] */, dtype="float32") /* ty=Tensor[(4, 12, 4), float32] */;
    %211 = asinh(%210) /* ty=Tensor[(4, 12, 4), float32] */;
    %212 = cast(%211, dtype="float32") /* ty=Tensor[(4, 12, 4), float32] */;
    %213 = cast(6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %214 = cast(%var_1084, dtype="int32") /* ty=Tensor[(96, 4), int32] */;
    %215 = reshape(%213, newshape=[]) /* ty=int32 */;
    %216 = reshape(%214, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), int32] */;
    %217 = sinh(%212) /* ty=Tensor[(4, 12, 4), float32] */;
    %218 = @func_588(%215, %216) /* ty=Tensor[(6, 4, 16), float32] */;
    (%217, %218, 6 /* ty=int32 */, %var_1084)
  };
  %219(%var_1104) /* ty=(Tensor[(4, 12, 4), float32], Tensor[(6, 4, 16), float32], int32, Tensor[(96, 4), int32]) */
}

def @func_3142() -> (Tensor[(10, 3, 7), float32],) {
  %220 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %221 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(10, 3, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %224 = divide(%222, %223) /* ty=Tensor[(10, 3, 7), float32] */;
  (%224,)
}

def @func_4078() -> Tensor[(10, 3, 7), uint16] {
  %225 = @func_3505() /* ty=Tensor[(10, 3, 7), float64] */;
  %226 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 3, 7), float64] */, dtype="uint16") /* ty=Tensor[(10, 3, 7), uint16] */;
  %227 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
  %228 = cast(%225, dtype="uint16") /* ty=Tensor[(10, 3, 7), uint16] */;
  %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_or(%228, %229) /* ty=Tensor[(10, 3, 7), uint16] */
}

def @func_4619() -> Tensor[(10, 66), int32] {
  %230 = @func_4575() /* ty=(Tensor[(96, 4), float32], Tensor[(6, 11, 10), bool], Tensor[(10, 66), int32]) */;
  %230.2
}

def @func_3193() -> Tensor[(10, 3, 7), float32] {
  %238 = fn () -> Tensor[(10, 3, 7), float32] {
    %231 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
    %232 = %231.0;
    %233 = cast(%232, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
    %234 = rsqrt(%233) /* ty=Tensor[(10, 3, 7), float32] */;
    %235 = cast(%234, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
    %236 = exp(%235) /* ty=Tensor[(10, 3, 7), float32] */;
    %237 = cast(%236, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
    tan(%237) /* ty=Tensor[(10, 3, 7), float32] */
  };
  %238() /* ty=Tensor[(10, 3, 7), float32] */
}

def @func_3345() -> (Tensor[(10, 3, 7), bool],) {
  %239 = @func_3192() /* ty=Tensor[(10, 3, 7), float32] */;
  %240 = @func_3192() /* ty=Tensor[(10, 3, 7), float32] */;
  %241 = cast(%240, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %242 = erf(%241) /* ty=Tensor[(10, 3, 7), float32] */;
  %243 = cast(%242, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %244 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%239, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %247 = logical_or(%245, %246) /* ty=Tensor[(10, 3, 7), bool] */;
  (%247,)
}

def @func_5488() -> (Tensor[(10, 3, 7), uint16], Tensor[(10, 3, 7), float32]) {
  %252 = fn () -> (Tensor[(10, 3, 7), uint16], Tensor[(10, 3, 7), float32]) {
    %248 = @func_4758() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) */;
    %249 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
    %250 = %248.1;
    %251 = %249.0;
    (%250, %251)
  };
  %252() /* ty=(Tensor[(10, 3, 7), uint16], Tensor[(10, 3, 7), float32]) */
}

def @func_6105(%var_6032: Tensor[(2730), float64], %var_6033: Tensor[(48, 8), int32], %var_6090: Tensor[(2730), bool]) -> (Tensor[(3, 9, 2), float64], Tensor[(384), int32], Tensor[(48, 8), int32], Tensor[(2730), int8], Tensor[(2730), uint32], Tensor[(2730), float64]) {
  %253 = cast(%var_6032, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %254 = cast(%var_6033, dtype="int32") /* ty=Tensor[(48, 8), int32] */;
  %255 = reshape(%253, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), float64] */;
  %256 = reshape(%254, newshape=[384]) /* ty=Tensor[(384), int32] */;
  %257 = @func_2737(%255, %256) /* ty=(Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(96, 4), int32], Tensor[(14, 15, 13), float64]) */;
  %258 = cast(%var_6032, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %259 = sin(%258) /* ty=Tensor[(2730), float32] */;
  %260 = cast(%var_6032, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %261 = shape_of(%259, dtype="int32") /* ty=Tensor[(1), int32] */;
  %262 = cast(%259, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?), int8] */;
  %264 = cast(meta[relay.Constant][18] /* ty=Tensor[(2730), float64] */, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %265 = shape_of(%var_6032, dtype="int32") /* ty=Tensor[(1), int32] */;
  %266 = cast(%var_6032, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?), bool] */;
  %268 = logical_or(%266, %267) /* ty=Tensor[(2730), bool] */;
  %269 = cast(%var_6090, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(1), int32] */;
  %271 = cast(%268, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %273 = cast(%259, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %274 = @func_4640() /* ty=Tensor[(3, 9, 2), float64] */;
  %275 = %257.2;
  %276 = multiply(%262, %263) /* ty=Tensor[(2730), int8] */;
  %277 = add(%271, %272) /* ty=Tensor[(2730), uint32] */;
  %278 = atanh(%273) /* ty=Tensor[(2730), float64] */;
  (%274, %275, %var_6033, %276, %277, %278)
}

def @func_5136() -> (Tensor[(16, 8, 5), bool], Tensor[(96, 4), float64]) {
  %279 = @func_3934() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) */;
  %280 = @func_4282() /* ty=(Tensor[(96, 4), float32],) */;
  %281 = %280.0;
  %282 = cast(%281, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %283 = %279.1;
  %284 = erf(%282) /* ty=Tensor[(96, 4), float64] */;
  (%283, %284)
}

def @func_8125() -> Tensor[(10, 3, 7), float32] {
  @func_8123() /* ty=Tensor[(10, 3, 7), float32] */
}

def @func_2630(%var_2626: Tensor[(3, 16, 1), int64], %var_2627: Tensor[(3, 16, 8), int64], %var_2628: Tensor[(198), float64], %var_2629: int32) -> (Tensor[(3, 16, 8), int64], Tensor[(1680), int16], Tensor[(18), float64], Tensor[(6, 4, 16), float32], int32, Tensor[(16, 15, 7), float64], Tensor[(180), int64], Tensor[(2, 9, 11), float64], Tensor[(2, 9, 11), int32], Tensor[(4, 9, 5), float64]) {
  %330 = fn (%var_2543: Tensor[(3, 16, 1), int64], %var_2544: Tensor[(3, 16, 8), int64], %var_2577: Tensor[(198), float64], %var_2585: int32) -> (Tensor[(3, 16, 8), int64], Tensor[(1680), int16], Tensor[(18), float64], Tensor[(6, 4, 16), float32], int32, Tensor[(16, 15, 7), float64], Tensor[(180), int64], Tensor[(2, 9, 11), float64], Tensor[(2, 9, 11), int32], Tensor[(4, 9, 5), float64]) {
    %285 = cast(%var_2543, dtype="int64") /* ty=Tensor[(3, 16, 1), int64] */;
    %286 = cast(%var_2544, dtype="int64") /* ty=Tensor[(3, 16, 8), int64] */;
    %287 = cast(%var_2585, dtype="int32") /* ty=int32 */;
    %288 = cast(%var_2544, dtype="int32") /* ty=Tensor[(3, 16, 8), int32] */;
    %289 = reshape(%287, newshape=[]) /* ty=int32 */;
    %290 = reshape(%288, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), int32] */;
    %291 = cast(meta[relay.Constant][19] /* ty=Tensor[(1680), int16] */, dtype="int16") /* ty=Tensor[(1680), int16] */;
    %292 = cast(meta[relay.Constant][19] /* ty=Tensor[(1680), int16] */, dtype="int16") /* ty=Tensor[(1680), int16] */;
    %293 = reshape(%291, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int16] */;
    %294 = reshape(%292, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int16] */;
    %295 = @func_2102(%293, %294) /* ty=Tensor[(16, 15, 7), float32] */;
    %296 = cast(%295, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
    %297 = cast(meta[relay.Constant][20] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
    %298 = cast(meta[relay.Constant][20] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
    %299 = cast(%var_2577, dtype="float64") /* ty=Tensor[(198), float64] */;
    %300 = reshape(%298, newshape=[2, 9, 1]) /* ty=Tensor[(2, 9, 1), float64] */;
    %301 = reshape(%299, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), float64] */;
    %302 = @func_514(%300, %301) /* ty=Tensor[(2, 9, 11), float64] */;
    %303 = cast(%302, dtype="float64") /* ty=Tensor[(2, 9, 11), float64] */;
    %304 = atan(%303) /* ty=Tensor[(2, 9, 11), float64] */;
    %305 = cast(%304, dtype="float64") /* ty=Tensor[(2, 9, 11), float64] */;
    %306 = reshape(%297, newshape=[2, 9, 1]) /* ty=Tensor[(2, 9, 1), float64] */;
    %307 = reshape(%305, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), float64] */;
    %308 = cast(%var_2577, dtype="int32") /* ty=Tensor[(198), int32] */;
    %309 = shape_of(%304, dtype="int32") /* ty=Tensor[(3), int32] */;
    %310 = cast(%304, dtype="int32") /* ty=Tensor[(2, 9, 11), int32] */;
    %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %312 = cast(meta[relay.Constant][21] /* ty=Tensor[(180), int64] */, dtype="int64") /* ty=Tensor[(180), int64] */;
    %313 = reshape(%312, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), int64] */;
    %314 = @func_996(%313) /* ty=(Tensor[(4, 9, 5), int64], Tensor[(4, 9, 5), float32]) */;
    %315 = %314.1;
    %316 = cast(meta[relay.Constant][21] /* ty=Tensor[(180), int64] */, dtype="int64") /* ty=Tensor[(180), int64] */;
    %317 = reshape(%316, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), int64] */;
    %318 = @func_996(%317) /* ty=(Tensor[(4, 9, 5), int64], Tensor[(4, 9, 5), float32]) */;
    %319 = %318.1;
    %320 = cast(%319, dtype="float64") /* ty=Tensor[(4, 9, 5), float64] */;
    %321 = shape_of(%315, dtype="int32") /* ty=Tensor[(3), int32] */;
    %322 = cast(%315, dtype="float64") /* ty=Tensor[(4, 9, 5), float64] */;
    %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %324 = logical_xor(%285, %286) /* ty=Tensor[(3, 16, 8), int64] */;
    %325 = @func_588(%289, %290) /* ty=Tensor[(6, 4, 16), float32] */;
    %326 = sin(%296) /* ty=Tensor[(16, 15, 7), float64] */;
    %327 = @func_514(%306, %307) /* ty=Tensor[(2, 9, 11), float64] */;
    %328 = subtract(%310, %311) /* ty=Tensor[(2, 9, 11), int32] */;
    %329 = divide(%322, %323) /* ty=Tensor[(4, 9, 5), float64] */;
    (%324, meta[relay.Constant][19] /* ty=Tensor[(1680), int16] */, meta[relay.Constant][20] /* ty=Tensor[(18), float64] */, %325, %var_2585, %326, meta[relay.Constant][21] /* ty=Tensor[(180), int64] */, %327, %328, %329)
  };
  %330(%var_2626, %var_2627, %var_2628, %var_2629) /* ty=(Tensor[(3, 16, 8), int64], Tensor[(1680), int16], Tensor[(18), float64], Tensor[(6, 4, 16), float32], int32, Tensor[(16, 15, 7), float64], Tensor[(180), int64], Tensor[(2, 9, 11), float64], Tensor[(2, 9, 11), int32], Tensor[(4, 9, 5), float64]) */
}

def @func_7357() -> (Tensor[(10, 3, 7), float32], Tensor[(3, 9, 2), float64], Tensor[(10, 3, 7), float32], Tensor[(4, 9, 5), float32], Tensor[(6, 30), int64]) {
  %339 = fn () -> (Tensor[(10, 3, 7), float32], Tensor[(3, 9, 2), float64], Tensor[(10, 3, 7), float32], Tensor[(4, 9, 5), float32], Tensor[(6, 30), int64]) {
    %331 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
    %332 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 30), int64] */, dtype="int64") /* ty=Tensor[(6, 30), int64] */;
    %333 = reshape(%332, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), int64] */;
    %334 = @func_996(%333) /* ty=(Tensor[(4, 9, 5), int64], Tensor[(4, 9, 5), float32]) */;
    %335 = @func_6667() /* ty=Tensor[(10, 3, 7), float32] */;
    %336 = @func_4640() /* ty=Tensor[(3, 9, 2), float64] */;
    %337 = %331.0;
    %338 = %334.1;
    (%335, %336, %337, %338, meta[relay.Constant][22] /* ty=Tensor[(6, 30), int64] */)
  };
  %339() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(3, 9, 2), float64], Tensor[(10, 3, 7), float32], Tensor[(4, 9, 5), float32], Tensor[(6, 30), int64]) */
}

def @func_3507() -> Tensor[(10, 3, 7), float64] {
  @func_3505() /* ty=Tensor[(10, 3, 7), float64] */
}

def @func_482(%var_471: Tensor[(330, 2), int32]) -> (Tensor[(6, 11, 7), float32], Tensor[(6, 11, 10), bool], Tensor[(330, 2), int32], Tensor[(6, 11, 10), bool]) {
  %340 = cast(meta[relay.Constant][23] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %341 = cast(meta[relay.Constant][24] /* ty=Tensor[(6, 11, 7), uint16] */, dtype="uint16") /* ty=Tensor[(6, 11, 7), uint16] */;
  %342 = logical_xor(%340, %341) /* ty=Tensor[(6, 11, 7), uint16] */;
  %343 = cast(%342, dtype="float32") /* ty=Tensor[(6, 11, 7), float32] */;
  %344 = cast(%var_471, dtype="int32") /* ty=Tensor[(330, 2), int32] */;
  %345 = reshape(%344, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int32] */;
  %346 = @func_430(%345) /* ty=Tensor[(6, 11, 10), bool] */;
  %347 = cast(%346, dtype="int32") /* ty=Tensor[(6, 11, 10), int32] */;
  %348 = reshape(%347, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int32] */;
  %349 = cosh(%343) /* ty=Tensor[(6, 11, 7), float32] */;
  %350 = @func_430(%348) /* ty=Tensor[(6, 11, 10), bool] */;
  (%349, %346, %var_471, %350)
}

def @func_3144() -> (Tensor[(10, 3, 7), float32],) {
  @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */
}

def @func_4602() -> (Tensor[(10, 3, 7), uint16], Tensor[(1, 3, 8), float32], Tensor[(24), float32]) {
  %351 = cast(meta[relay.Constant][25] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %352 = reshape(%351, newshape=[1, 3, 8]) /* ty=Tensor[(1, 3, 8), float32] */;
  %353 = @func_1192(%352) /* ty=(Tensor[(1, 3, 8), float32],) */;
  %354 = @func_4078() /* ty=Tensor[(10, 3, 7), uint16] */;
  %355 = %353.0;
  (%354, %355, meta[relay.Constant][25] /* ty=Tensor[(24), float32] */)
}

def @func_4604() -> (Tensor[(10, 3, 7), uint16], Tensor[(1, 3, 8), float32], Tensor[(24), float32]) {
  @func_4602() /* ty=(Tensor[(10, 3, 7), uint16], Tensor[(1, 3, 8), float32], Tensor[(24), float32]) */
}

def @func_5806() -> (Tensor[(10, 3, 7), uint16],) {
  %356 = @func_4078() /* ty=Tensor[(10, 3, 7), uint16] */;
  (%356,)
}

def @func_3935() -> (Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) {
  %365 = fn () -> (Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) {
    %357 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
    %358 = %357.0;
    %359 = cast(%358, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
    %360 = cast(meta[relay.Constant][26] /* ty=Tensor[(640), uint8] */, dtype="uint8") /* ty=Tensor[(640), uint8] */;
    %361 = reshape(%360, newshape=[640]) /* ty=Tensor[(640), uint8] */;
    %362 = @func_3599(%361) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) */;
    %363 = acosh(%359) /* ty=Tensor[(10, 3, 7), float32] */;
    %364 = %362.1;
    (%363, %364, meta[relay.Constant][26] /* ty=Tensor[(640), uint8] */)
  };
  %365() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) */
}

def @func_485(%var_483: Tensor[(330, 2), int32]) -> (Tensor[(6, 11, 7), float32], Tensor[(6, 11, 10), bool], Tensor[(330, 2), int32], Tensor[(6, 11, 10), bool]) {
  @func_482(%var_483) /* ty=(Tensor[(6, 11, 7), float32], Tensor[(6, 11, 10), bool], Tensor[(330, 2), int32], Tensor[(6, 11, 10), bool]) */
}

def @func_5299() -> (Tensor[(10, 3, 7), uint16],) {
  %367 = fn () -> (Tensor[(10, 3, 7), uint16],) {
    %366 = @func_4078() /* ty=Tensor[(10, 3, 7), uint16] */;
    (%366,)
  };
  %367() /* ty=(Tensor[(10, 3, 7), uint16],) */
}

def @func_7587() -> Tensor[(10, 3, 7), float64] {
  %368 = @func_6636() /* ty=(Tensor[(10, 3, 7), float64],) */;
  %368.0
}

def @func_3244() -> (Tensor[(10, 3, 7), float32],) {
  %369 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %370 = %369.0;
  (%370,)
}

def @func_4398() -> Tensor[(96, 4), float32] {
  @func_4396() /* ty=Tensor[(96, 4), float32] */
}

def @func_6638() -> (Tensor[(10, 3, 7), float64],) {
  @func_6636() /* ty=(Tensor[(10, 3, 7), float64],) */
}

def @func_6473(%var_6471: Tensor[(6, 12, 11), int32], %var_6472: Tensor[(6, 12, 11), int32]) -> Tensor[(6, 12, 11), int32] {
  @func_6469(%var_6471, %var_6472) /* ty=Tensor[(6, 12, 11), int32] */
}

def @func_5449() -> (Tensor[(96, 4), float32],) {
  %371 = @func_4369() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32]) */;
  %372 = %371.1;
  (%372,)
}

def @func_433(%var_431: Tensor[(6, 11, 10), int32]) -> Tensor[(6, 11, 10), bool] {
  @func_430(%var_431) /* ty=Tensor[(6, 11, 10), bool] */
}

def @func_6212(%var_6211: Tensor[(3, 9, 2), float64]) -> (Tensor[(3, 9, 2), uint8],) {
  %380 = fn (%var_6199: Tensor[(3, 9, 2), float64]) -> (Tensor[(3, 9, 2), uint8],) {
    %373 = @func_4718() /* ty=(Tensor[(3, 9, 2), float64], Tensor[(16, 8, 5), float64]) */;
    %374 = %373.0;
    %375 = cast(%var_6199, dtype="uint8") /* ty=Tensor[(3, 9, 2), uint8] */;
    %376 = shape_of(%374, dtype="int32") /* ty=Tensor[(3), int32] */;
    %377 = cast(%374, dtype="uint8") /* ty=Tensor[(3, 9, 2), uint8] */;
    %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %379 = bitwise_and(%377, %378) /* ty=Tensor[(3, 9, 2), uint8] */;
    (%379,)
  };
  %380(%var_6211) /* ty=(Tensor[(3, 9, 2), uint8],) */
}

def @func_4720() -> (Tensor[(3, 9, 2), float64], Tensor[(16, 8, 5), float64]) {
  @func_4718() /* ty=(Tensor[(3, 9, 2), float64], Tensor[(16, 8, 5), float64]) */
}

def @func_6381(%var_6364: Tensor[(96, 4), float32]) -> (Tensor[(6, 11, 10), bool], Tensor[(96, 4), float64]) {
  %381 = @func_4575() /* ty=(Tensor[(96, 4), float32], Tensor[(6, 11, 10), bool], Tensor[(10, 66), int32]) */;
  %382 = @func_3983() /* ty=(Tensor[(96, 4), float32],) */;
  %383 = %382.0;
  %384 = cast(%var_6364, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %385 = shape_of(%383, dtype="int32") /* ty=Tensor[(2), int32] */;
  %386 = cast(%383, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %388 = %381.1;
  %389 = floor_mod(%386, %387) /* ty=Tensor[(96, 4), float64] */;
  (%388, %389)
}

def @func_5574(%var_5572: Tensor[(1, 4, 2), float64]) -> Tensor[(1, 4, 2), float64] {
  @func_5571(%var_5572) /* ty=Tensor[(1, 4, 2), float64] */
}

def @func_5864() -> Tensor[(10, 3, 7), float32] {
  %391 = fn () -> Tensor[(10, 3, 7), float32] {
    %390 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
    %390.0
  };
  %391() /* ty=Tensor[(10, 3, 7), float32] */
}

def @func_7897(%var_7895: Tensor[(96, 4), float32]) -> (Tensor[(10, 3, 7), float64], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64], Tensor[(10, 66), int32], Tensor[(10, 3, 7), float64], Tensor[(96, 4), bool]) {
  @func_7894(%var_7895) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64], Tensor[(10, 66), int32], Tensor[(10, 3, 7), float64], Tensor[(96, 4), bool]) */
}

def @func_3084(%var_3030: Tensor[(3, 10, 12), float64], %var_3034: Tensor[(48), int64], %var_3035: Tensor[(1, 384), int64], %var_3045: Tensor[(3, 10, 12), float64], %var_3060: Tensor[(2730), float64]) -> (Tensor[(4, 9, 5), float64], Tensor[(48), int64], Tensor[(1, 384), int64], Tensor[(198), float64], int32, int32, Tensor[(3, 10, 12), uint16], Tensor[(96, 4), int32], Tensor[(2730), float64]) {
  %392 = cast(%var_3034, dtype="int64") /* ty=Tensor[(48), int64] */;
  %393 = cast(%var_3035, dtype="int64") /* ty=Tensor[(1, 384), int64] */;
  %394 = cast(meta[relay.Constant][27] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %395 = cast(5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %396 = reshape(%392, newshape=[3, 16, 1]) /* ty=Tensor[(3, 16, 1), int64] */;
  %397 = reshape(%393, newshape=[3, 16, 8]) /* ty=Tensor[(3, 16, 8), int64] */;
  %398 = reshape(%394, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %399 = reshape(%395, newshape=[]) /* ty=int32 */;
  %400 = @func_2625(%396, %397, %398, %399) /* ty=(Tensor[(3, 16, 8), int64], Tensor[(1680), int16], Tensor[(18), float64], Tensor[(6, 4, 16), float32], int32, Tensor[(16, 15, 7), float64], Tensor[(180), int64], Tensor[(2, 9, 11), float64], Tensor[(2, 9, 11), int32], Tensor[(4, 9, 5), float64]) */;
  %401 = cast(%var_3035, dtype="int32") /* ty=Tensor[(1, 384), int32] */;
  %402 = reshape(%401, newshape=[96, 4]) /* ty=Tensor[(96, 4), int32] */;
  %403 = @func_1103(%402) /* ty=(Tensor[(4, 12, 4), float32], Tensor[(6, 4, 16), float32], int32, Tensor[(96, 4), int32]) */;
  %404 = cast(%var_3030, dtype="float64") /* ty=Tensor[(3, 10, 12), float64] */;
  %405 = rsqrt(%404) /* ty=Tensor[(3, 10, 12), float64] */;
  %406 = cast(%var_3045, dtype="uint16") /* ty=Tensor[(3, 10, 12), uint16] */;
  %407 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %408 = cast(%405, dtype="uint16") /* ty=Tensor[(3, 10, 12), uint16] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %410 = cast(%var_3060, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %411 = cast(%var_3035, dtype="int32") /* ty=Tensor[(1, 384), int32] */;
  %412 = reshape(%410, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), float64] */;
  %413 = reshape(%411, newshape=[384]) /* ty=Tensor[(384), int32] */;
  %414 = @func_2737(%412, %413) /* ty=(Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(96, 4), int32], Tensor[(14, 15, 13), float64]) */;
  %415 = %400.9;
  %416 = %403.2;
  %417 = left_shift(%408, %409) /* ty=Tensor[(3, 10, 12), uint16] */;
  %418 = %414.3;
  (%415, %var_3034, %var_3035, meta[relay.Constant][27] /* ty=Tensor[(198), float64] */, 5 /* ty=int32 */, %416, %417, %418, %var_3060)
}

def @func_6110(%var_6107: Tensor[(2730), float64], %var_6108: Tensor[(48, 8), int32], %var_6109: Tensor[(2730), bool]) -> (Tensor[(3, 9, 2), float64], Tensor[(384), int32], Tensor[(48, 8), int32], Tensor[(2730), int8], Tensor[(2730), uint32], Tensor[(2730), float64]) {
  @func_6105(%var_6107, %var_6108, %var_6109) /* ty=(Tensor[(3, 9, 2), float64], Tensor[(384), int32], Tensor[(48, 8), int32], Tensor[(2730), int8], Tensor[(2730), uint32], Tensor[(2730), float64]) */
}

def @func_4883(%var_4879: Tensor[(48, 1), int64], %var_4880: Tensor[(48, 8), int64], %var_4881: Tensor[(198), float64], %var_4882: int32) -> (Tensor[(10, 3, 7), uint16], Tensor[(4, 9, 5), float64], Tensor[(48, 8), int64], Tensor[(198), float64], int32, Tensor[(10, 3, 7), float32], Tensor[(48, 1), float32]) {
  %434 = fn (%var_4854: Tensor[(48, 1), int64], %var_4855: Tensor[(48, 8), int64], %var_4856: Tensor[(198), float64], %var_4857: int32) -> (Tensor[(10, 3, 7), uint16], Tensor[(4, 9, 5), float64], Tensor[(48, 8), int64], Tensor[(198), float64], int32, Tensor[(10, 3, 7), float32], Tensor[(48, 1), float32]) {
    %419 = @func_4758() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) */;
    %420 = cast(%var_4854, dtype="int64") /* ty=Tensor[(48, 1), int64] */;
    %421 = cast(%var_4855, dtype="int64") /* ty=Tensor[(48, 8), int64] */;
    %422 = cast(%var_4856, dtype="float64") /* ty=Tensor[(198), float64] */;
    %423 = cast(%var_4857, dtype="int32") /* ty=int32 */;
    %424 = reshape(%420, newshape=[3, 16, 1]) /* ty=Tensor[(3, 16, 1), int64] */;
    %425 = reshape(%421, newshape=[3, 16, 8]) /* ty=Tensor[(3, 16, 8), int64] */;
    %426 = reshape(%422, newshape=[198]) /* ty=Tensor[(198), float64] */;
    %427 = reshape(%423, newshape=[]) /* ty=int32 */;
    %428 = @func_2625(%424, %425, %426, %427) /* ty=(Tensor[(3, 16, 8), int64], Tensor[(1680), int16], Tensor[(18), float64], Tensor[(6, 4, 16), float32], int32, Tensor[(16, 15, 7), float64], Tensor[(180), int64], Tensor[(2, 9, 11), float64], Tensor[(2, 9, 11), int32], Tensor[(4, 9, 5), float64]) */;
    %429 = cast(%var_4854, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
    %430 = %419.1;
    %431 = %428.9;
    %432 = @func_3192() /* ty=Tensor[(10, 3, 7), float32] */;
    %433 = log(%429) /* ty=Tensor[(48, 1), float32] */;
    (%430, %431, %var_4855, %var_4856, %var_4857, %432, %433)
  };
  %434(%var_4879, %var_4880, %var_4881, %var_4882) /* ty=(Tensor[(10, 3, 7), uint16], Tensor[(4, 9, 5), float64], Tensor[(48, 8), int64], Tensor[(198), float64], int32, Tensor[(10, 3, 7), float32], Tensor[(48, 1), float32]) */
}

def @func_5695(%var_5693: Tensor[(96, 4), float32]) -> Tensor[(96, 4), bool] {
  @func_5692(%var_5693) /* ty=Tensor[(96, 4), bool] */
}

def @func_4718() -> (Tensor[(3, 9, 2), float64], Tensor[(16, 8, 5), float64]) {
  %435 = @func_4260() /* ty=(Tensor[(16, 8, 5), float64], Tensor[(10, 3, 7), float32]) */;
  %436 = %435.0;
  %437 = cast(%436, dtype="float64") /* ty=Tensor[(16, 8, 5), float64] */;
  %438 = @func_4640() /* ty=Tensor[(3, 9, 2), float64] */;
  %439 = asin(%437) /* ty=Tensor[(16, 8, 5), float64] */;
  (%438, %439)
}

def @func_8052(%var_8005: Tensor[(2730), float64]) -> (Tensor[(16, 8, 5), float64], Tensor[(3, 9, 2), float64], Tensor[(2730), float64], Tensor[(384), int32]) {
  %440 = @func_4260() /* ty=(Tensor[(16, 8, 5), float64], Tensor[(10, 3, 7), float32]) */;
  %441 = cast(%var_8005, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %442 = cast(meta[relay.Constant][28] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
  %443 = cast(%var_8005, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %444 = reshape(%441, newshape=[2730]) /* ty=Tensor[(2730), float64] */;
  %445 = reshape(%442, newshape=[48, 8]) /* ty=Tensor[(48, 8), int32] */;
  %446 = reshape(%443, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
  %447 = @func_6105(%444, %445, %446) /* ty=(Tensor[(3, 9, 2), float64], Tensor[(384), int32], Tensor[(48, 8), int32], Tensor[(2730), int8], Tensor[(2730), uint32], Tensor[(2730), float64]) */;
  %448 = %440.0;
  %449 = %447.0;
  (%448, %449, %var_8005, meta[relay.Constant][28] /* ty=Tensor[(384), int32] */)
}

def @func_7473(%var_7472: Tensor[(54), float64]) -> (Tensor[(10, 3, 7), float32], Tensor[(3, 9, 2), uint8], Tensor[(54), float64], Tensor[(10, 3, 7), float32]) {
  %458 = fn (%var_7464: Tensor[(54), float64]) -> (Tensor[(10, 3, 7), float32], Tensor[(3, 9, 2), uint8], Tensor[(54), float64], Tensor[(10, 3, 7), float32]) {
    %450 = @func_6940() /* ty=(Tensor[(10, 3, 7), float32],) */;
    %451 = cast(%var_7464, dtype="float64") /* ty=Tensor[(54), float64] */;
    %452 = reshape(%451, newshape=[3, 9, 2]) /* ty=Tensor[(3, 9, 2), float64] */;
    %453 = @func_6210(%452) /* ty=(Tensor[(3, 9, 2), uint8],) */;
    %454 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
    %455 = %450.0;
    %456 = %453.0;
    %457 = %454.3;
    (%455, %456, %var_7464, %457)
  };
  %458(%var_7472) /* ty=(Tensor[(10, 3, 7), float32], Tensor[(3, 9, 2), uint8], Tensor[(54), float64], Tensor[(10, 3, 7), float32]) */
}

def @func_518(%var_516: Tensor[(2, 9, 1), float64], %var_517: Tensor[(2, 9, 11), float64]) -> Tensor[(2, 9, 11), float64] {
  @func_514(%var_516, %var_517) /* ty=Tensor[(2, 9, 11), float64] */
}

def @func_6636() -> (Tensor[(10, 3, 7), float64],) {
  %459 = @func_3698() /* ty=Tensor[(10, 3, 7), float64] */;
  (%459,)
}

def @func_7826(%var_7825: Tensor[(96, 4), float32]) -> (Tensor[(10, 66), int32], Tensor[(96, 4), float64]) {
  %468 = fn (%var_7819: Tensor[(96, 4), float32]) -> (Tensor[(10, 66), int32], Tensor[(96, 4), float64]) {
    %460 = @func_6841() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(96, 4), float32], Tensor[(4, 9, 5), int64], Tensor[(180), int64]) */;
    %461 = %460.1;
    %462 = cast(%var_7819, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
    %463 = shape_of(%461, dtype="int32") /* ty=Tensor[(2), int32] */;
    %464 = cast(%461, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
    %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %466 = @func_6525() /* ty=Tensor[(10, 66), int32] */;
    %467 = maximum(%464, %465) /* ty=Tensor[(96, 4), float64] */;
    (%466, %467)
  };
  %468(%var_7825) /* ty=(Tensor[(10, 66), int32], Tensor[(96, 4), float64]) */
}

def @func_5739() -> Tensor[(10, 3, 7), float32] {
  %470 = fn () -> Tensor[(10, 3, 7), float32] {
    %469 = @func_4758() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) */;
    %469.0
  };
  %470() /* ty=Tensor[(10, 3, 7), float32] */
}

def @func_6883() -> (Tensor[(96, 4), float64], Tensor[(96, 4), int16]) {
  %471 = @func_6288() /* ty=Tensor[(96, 4), int16] */;
  %472 = cast(meta[relay.Constant][29] /* ty=Tensor[(96, 4), int16] */, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %473 = shape_of(%471, dtype="int32") /* ty=Tensor[(2), int32] */;
  %474 = cast(%471, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %476 = cast(meta[relay.Constant][29] /* ty=Tensor[(96, 4), int16] */, dtype="int16") /* ty=Tensor[(96, 4), int16] */;
  %477 = shape_of(%471, dtype="int32") /* ty=Tensor[(2), int32] */;
  %478 = cast(%471, dtype="int16") /* ty=Tensor[(96, 4), int16] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %480 = mod(%474, %475) /* ty=Tensor[(96, 4), float64] */;
  %481 = logical_xor(%478, %479) /* ty=Tensor[(96, 4), int16] */;
  (%480, %481)
}

def @func_6940() -> (Tensor[(10, 3, 7), float32],) {
  %482 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %483 = %482.0;
  (%483,)
}

def @func_6885() -> (Tensor[(96, 4), float64], Tensor[(96, 4), int16]) {
  @func_6883() /* ty=(Tensor[(96, 4), float64], Tensor[(96, 4), int16]) */
}

def @func_4785(%var_4778: Tensor[(3, 5, 11), float64]) -> (Tensor[(3, 5, 11), float64], Tensor[(10, 3, 7), float32]) {
  %484 = cast(%var_4778, dtype="float64") /* ty=Tensor[(3, 5, 11), float64] */;
  %485 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
  %486 = acosh(%484) /* ty=Tensor[(3, 5, 11), float64] */;
  %487 = %485.0;
  (%486, %487)
}

def @func_5378(%var_5376: int32) -> (Tensor[(10, 3, 7), float64], Tensor[(48, 8), int32], Tensor[(6, 11, 10), float64], Tensor[(3, 5, 11), float64], Tensor[(165), float64], Tensor[(18), float64], Tensor[(1, 48), int64], Tensor[(198), float64], int32, int32) {
  @func_5375(%var_5376) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(48, 8), int32], Tensor[(6, 11, 10), float64], Tensor[(3, 5, 11), float64], Tensor[(165), float64], Tensor[(18), float64], Tensor[(1, 48), int64], Tensor[(198), float64], int32, int32) */
}

def @func_6446(%var_6444: Tensor[(7, 2, 6), float32]) -> (Tensor[(7, 2, 6), float32], Tensor[(6, 11, 10), bool], Tensor[(660), int32], Tensor[(10, 3, 7), float64]) {
  @func_6443(%var_6444) /* ty=(Tensor[(7, 2, 6), float32], Tensor[(6, 11, 10), bool], Tensor[(660), int32], Tensor[(10, 3, 7), float64]) */
}

def @func_5761() -> (Tensor[(10, 3, 7), float32],) {
  @func_5759() /* ty=(Tensor[(10, 3, 7), float32],) */
}

def @func_5670(%var_5669: Tensor[(10, 3, 7), float32]) -> (Tensor[(10, 66), int32], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) {
  %497 = fn (%var_5631: Tensor[(10, 3, 7), float32]) -> (Tensor[(10, 66), int32], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) {
    %488 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
    %489 = %488.0;
    %490 = cast(%var_5631, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
    %491 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
    %492 = cast(%489, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
    %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %494 = @func_5031() /* ty=Tensor[(10, 66), int32] */;
    %495 = mod(%492, %493) /* ty=Tensor[(10, 3, 7), float32] */;
    %496 = @func_3698() /* ty=Tensor[(10, 3, 7), float64] */;
    (%494, %495, %496)
  };
  %497(%var_5669) /* ty=(Tensor[(10, 66), int32], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */
}

def @func_4527(%var_4523: uint32, %var_4524: Tensor[(1, 432), uint32], %var_4525: Tensor[(2, 840), int16], %var_4526: Tensor[(660), int32]) -> (Tensor[(10, 3, 7), float32], Tensor[(6, 8, 9), float32], uint32, Tensor[(1, 432), uint32], Tensor[(2, 840), int16], Tensor[(660), int32], Tensor[(96, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(10, 3, 7), float64], Tensor[(2, 840), int16]) {
  %536 = fn (%var_4476: uint32, %var_4477: Tensor[(1, 432), uint32], %var_4478: Tensor[(2, 840), int16], %var_4479: Tensor[(660), int32]) -> (Tensor[(10, 3, 7), float32], Tensor[(6, 8, 9), float32], uint32, Tensor[(1, 432), uint32], Tensor[(2, 840), int16], Tensor[(660), int32], Tensor[(96, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(10, 3, 7), float64], Tensor[(2, 840), int16]) {
    %498 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
    %499 = cast(%var_4476, dtype="uint32") /* ty=uint32 */;
    %500 = cast(%var_4477, dtype="uint32") /* ty=Tensor[(1, 432), uint32] */;
    %501 = cast(%var_4478, dtype="int16") /* ty=Tensor[(2, 840), int16] */;
    %502 = cast(%var_4477, dtype="uint32") /* ty=Tensor[(1, 432), uint32] */;
    %503 = %498.0;
    %504 = cast(%503, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %505 = cast(%var_4479, dtype="int32") /* ty=Tensor[(660), int32] */;
    %506 = reshape(%499, newshape=[]) /* ty=uint32 */;
    %507 = reshape(%500, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), uint32] */;
    %508 = reshape(%501, newshape=[2, 840]) /* ty=Tensor[(2, 840), int16] */;
    %509 = reshape(%502, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), uint32] */;
    %510 = reshape(%504, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %511 = reshape(%505, newshape=[660]) /* ty=Tensor[(660), int32] */;
    %512 = @func_2238(%506, %507, %508, %509, %510, %511) /* ty=(Tensor[(6, 8, 9), bool], Tensor[(16, 15, 7), float32], Tensor[(2, 840), int16], Tensor[(6, 8, 9), bool], Tensor[(6, 8, 9), float32], Tensor[(3, 10, 7), float64], Tensor[(210), float64], Tensor[(384), int32], Tensor[(660), int32]) */;
    %513 = @func_4282() /* ty=(Tensor[(96, 4), float32],) */;
    %514 = cast(%var_4476, dtype="int32") /* ty=int32 */;
    %515 = %513.0;
    %516 = cast(%515, dtype="int32") /* ty=Tensor[(96, 4), int32] */;
    %517 = reshape(%514, newshape=[]) /* ty=int32 */;
    %518 = reshape(%516, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), int32] */;
    %519 = cast(%var_4476, dtype="uint32") /* ty=uint32 */;
    %520 = %512.4;
    %521 = cast(%520, dtype="uint32") /* ty=Tensor[(6, 8, 9), uint32] */;
    %522 = cast(%var_4478, dtype="int16") /* ty=Tensor[(2, 840), int16] */;
    %523 = cast(%var_4477, dtype="uint32") /* ty=Tensor[(1, 432), uint32] */;
    %524 = @func_3505() /* ty=Tensor[(10, 3, 7), float64] */;
    %525 = cast(%524, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %526 = cast(%var_4479, dtype="int32") /* ty=Tensor[(660), int32] */;
    %527 = reshape(%519, newshape=[]) /* ty=uint32 */;
    %528 = reshape(%521, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), uint32] */;
    %529 = reshape(%522, newshape=[2, 840]) /* ty=Tensor[(2, 840), int16] */;
    %530 = reshape(%523, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), uint32] */;
    %531 = reshape(%525, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %532 = reshape(%526, newshape=[660]) /* ty=Tensor[(660), int32] */;
    %533 = @func_2238(%527, %528, %529, %530, %531, %532) /* ty=(Tensor[(6, 8, 9), bool], Tensor[(16, 15, 7), float32], Tensor[(2, 840), int16], Tensor[(6, 8, 9), bool], Tensor[(6, 8, 9), float32], Tensor[(3, 10, 7), float64], Tensor[(210), float64], Tensor[(384), int32], Tensor[(660), int32]) */;
    %534 = @func_588(%517, %518) /* ty=Tensor[(6, 4, 16), float32] */;
    %535 = %533.2;
    (%503, %520, %var_4476, %var_4477, %var_4478, %var_4479, %515, %534, %524, %535)
  };
  %536(%var_4523, %var_4524, %var_4525, %var_4526) /* ty=(Tensor[(10, 3, 7), float32], Tensor[(6, 8, 9), float32], uint32, Tensor[(1, 432), uint32], Tensor[(2, 840), int16], Tensor[(660), int32], Tensor[(96, 4), float32], Tensor[(6, 4, 16), float32], Tensor[(10, 3, 7), float64], Tensor[(2, 840), int16]) */
}

def @func_5991() -> (Tensor[(16, 8, 5), float64],) {
  @func_5989() /* ty=(Tensor[(16, 8, 5), float64],) */
}

def @func_7433() -> Tensor[(10, 3, 7), float32] {
  @func_7431() /* ty=Tensor[(10, 3, 7), float32] */
}

def @func_6267(%var_6265: Tensor[(13, 2), float64]) -> (Tensor[(13, 2), float64], Tensor[(96, 4), float32], Tensor[(96, 4), int64], Tensor[(48), int64]) {
  @func_6264(%var_6265) /* ty=(Tensor[(13, 2), float64], Tensor[(96, 4), float32], Tensor[(96, 4), int64], Tensor[(48), int64]) */
}

def @func_7362() -> Tensor[(10, 3, 7), float32] {
  %538 = fn () -> Tensor[(10, 3, 7), float32] {
    %537 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
    %537.0
  };
  %538() /* ty=Tensor[(10, 3, 7), float32] */
}

def @func_3091(%var_3086: Tensor[(3, 10, 12), float64], %var_3087: Tensor[(48), int64], %var_3088: Tensor[(1, 384), int64], %var_3089: Tensor[(3, 10, 12), float64], %var_3090: Tensor[(2730), float64]) -> (Tensor[(4, 9, 5), float64], Tensor[(48), int64], Tensor[(1, 384), int64], Tensor[(198), float64], int32, int32, Tensor[(3, 10, 12), uint16], Tensor[(96, 4), int32], Tensor[(2730), float64]) {
  @func_3084(%var_3086, %var_3087, %var_3088, %var_3089, %var_3090) /* ty=(Tensor[(4, 9, 5), float64], Tensor[(48), int64], Tensor[(1, 384), int64], Tensor[(198), float64], int32, int32, Tensor[(3, 10, 12), uint16], Tensor[(96, 4), int32], Tensor[(2730), float64]) */
}

def @func_5229(%var_5226: Tensor[(10, 66), int32], %var_5227: Tensor[(384), int32], %var_5228: Tensor[(10, 66), float64]) -> (Tensor[(10, 3, 7), float32], Tensor[(3, 10, 7), bool], Tensor[(384), int32], Tensor[(10, 66), bool]) {
  %572 = fn (%var_5190: Tensor[(10, 66), int32], %var_5204: Tensor[(384), int32], %var_5218: Tensor[(10, 66), float64]) -> (Tensor[(10, 3, 7), float32], Tensor[(3, 10, 7), bool], Tensor[(384), int32], Tensor[(10, 66), bool]) {
    %539 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
    %540 = %539.0;
    %541 = cast(%540, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %542 = cast(%540, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %543 = cast(%540, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %544 = cast(%var_5204, dtype="int32") /* ty=Tensor[(384), int32] */;
    %545 = @func_4575() /* ty=(Tensor[(96, 4), float32], Tensor[(6, 11, 10), bool], Tensor[(10, 66), int32]) */;
    %546 = %545.2;
    %547 = cast(%546, dtype="int32") /* ty=Tensor[(10, 66), int32] */;
    %548 = reshape(%541, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
    %549 = reshape(%542, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
    %550 = reshape(%543, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
    %551 = reshape(%544, newshape=[384]) /* ty=Tensor[(384), int32] */;
    %552 = reshape(%547, newshape=[660]) /* ty=Tensor[(660), int32] */;
    %553 = @func_1360(%548, %549, %550, %551, %552) /* ty=(Tensor[(3, 10, 7), float64], Tensor[(3, 10, 7), bool], Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(6, 11, 10), bool], Tensor[(660), int32]) */;
    %554 = cast(%var_5190, dtype="uint64") /* ty=Tensor[(10, 66), uint64] */;
    %555 = shape_of(%546, dtype="int32") /* ty=Tensor[(2), int32] */;
    %556 = cast(%546, dtype="uint64") /* ty=Tensor[(10, 66), uint64] */;
    %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %558 = multiply(%556, %557) /* ty=Tensor[(10, 66), uint64] */;
    %559 = cast(%558, dtype="float32") /* ty=Tensor[(10, 66), float32] */;
    %560 = log10(%559) /* ty=Tensor[(10, 66), float32] */;
    %561 = cast(%546, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
    %562 = shape_of(%560, dtype="int32") /* ty=Tensor[(2), int32] */;
    %563 = cast(%560, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
    %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %565 = power(%563, %564) /* ty=Tensor[(10, 66), float64] */;
    %566 = cast(%var_5218, dtype="bool") /* ty=Tensor[(10, 66), bool] */;
    %567 = shape_of(%565, dtype="int32") /* ty=Tensor[(2), int32] */;
    %568 = cast(%565, dtype="bool") /* ty=Tensor[(10, 66), bool] */;
    %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %570 = %553.1;
    %571 = greater_equal(%568, %569) /* ty=Tensor[(10, 66), bool] */;
    (%540, %570, %var_5204, %571)
  };
  %572(%var_5226, %var_5227, %var_5228) /* ty=(Tensor[(10, 3, 7), float32], Tensor[(3, 10, 7), bool], Tensor[(384), int32], Tensor[(10, 66), bool]) */
}

def @func_5849(%var_5847: Tensor[(9, 11, 13), float64], %var_5848: Tensor[(9, 11, 13), float64]) -> (Tensor[(10, 3, 7), float32], Tensor[(210), float32], Tensor[(9, 11, 13), uint16]) {
  @func_5845(%var_5847, %var_5848) /* ty=(Tensor[(10, 3, 7), float32], Tensor[(210), float32], Tensor[(9, 11, 13), uint16]) */
}

def @func_514(%var_498: Tensor[(2, 9, 1), float64], %var_499: Tensor[(2, 9, 11), float64]) -> Tensor[(2, 9, 11), float64] {
  %573 = cast(%var_498, dtype="float64") /* ty=Tensor[(2, 9, 1), float64] */;
  %574 = cast(%var_499, dtype="float64") /* ty=Tensor[(2, 9, 11), float64] */;
  mod(%573, %574) /* ty=Tensor[(2, 9, 11), float64] */
}

def @func_3832(%var_3830: Tensor[(360), float64], %var_3831: Tensor[(384), int64]) -> (Tensor[(10, 3, 7), float32], Tensor[(4, 9, 5), float64], Tensor[(360), float64], Tensor[(48, 1), int64], Tensor[(384), int64], Tensor[(2730), float64], Tensor[(10, 3, 7), float32]) {
  @func_3828(%var_3830, %var_3831) /* ty=(Tensor[(10, 3, 7), float32], Tensor[(4, 9, 5), float64], Tensor[(360), float64], Tensor[(48, 1), int64], Tensor[(384), int64], Tensor[(2730), float64], Tensor[(10, 3, 7), float32]) */
}

def @func_4283() -> (Tensor[(96, 4), float32],) {
  %577 = fn () -> (Tensor[(96, 4), float32],) {
    %575 = @func_3983() /* ty=(Tensor[(96, 4), float32],) */;
    %576 = %575.0;
    (%576,)
  };
  %577() /* ty=(Tensor[(96, 4), float32],) */
}

def @func_6543() -> (Tensor[(198), float64],) {
  @func_6541() /* ty=(Tensor[(198), float64],) */
}

def @func_2741(%var_2739: Tensor[(14, 15, 13), float64], %var_2740: Tensor[(384), int32]) -> (Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(96, 4), int32], Tensor[(14, 15, 13), float64]) {
  @func_2737(%var_2739, %var_2740) /* ty=(Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(96, 4), int32], Tensor[(14, 15, 13), float64]) */
}

def @func_6942() -> (Tensor[(10, 3, 7), float32],) {
  @func_6940() /* ty=(Tensor[(10, 3, 7), float32],) */
}

def @func_5845(%var_5826: Tensor[(9, 11, 13), float64], %var_5840: Tensor[(9, 11, 13), float64]) -> (Tensor[(10, 3, 7), float32], Tensor[(210), float32], Tensor[(9, 11, 13), uint16]) {
  %578 = cast(meta[relay.Constant][30] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %579 = reshape(%578, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float32] */;
  %580 = @func_5668(%579) /* ty=(Tensor[(10, 66), int32], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
  %581 = cast(%var_5826, dtype="float64") /* ty=Tensor[(9, 11, 13), float64] */;
  %582 = rsqrt(%581) /* ty=Tensor[(9, 11, 13), float64] */;
  %583 = cast(%var_5840, dtype="uint16") /* ty=Tensor[(9, 11, 13), uint16] */;
  %584 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%582, dtype="uint16") /* ty=Tensor[(9, 11, 13), uint16] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %587 = %580.1;
  %588 = add(%585, %586) /* ty=Tensor[(9, 11, 13), uint16] */;
  (%587, meta[relay.Constant][30] /* ty=Tensor[(210), float32] */, %588)
}

def @func_4997(%var_4996: Tensor[(1, 384), int32]) -> (Tensor[(10, 3, 7), float64], Tensor[(6, 11, 10), bool], Tensor[(1, 384), int32], Tensor[(660), int32], Tensor[(10, 3, 7), float32]) {
  %606 = fn (%var_4983: Tensor[(1, 384), int32]) -> (Tensor[(10, 3, 7), float64], Tensor[(6, 11, 10), bool], Tensor[(1, 384), int32], Tensor[(660), int32], Tensor[(10, 3, 7), float32]) {
    %589 = @func_3698() /* ty=Tensor[(10, 3, 7), float64] */;
    %590 = cast(%589, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %591 = cast(%589, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %592 = atanh(%590) /* ty=Tensor[(10, 3, 7), float64] */;
    %593 = cast(%592, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %594 = cast(%589, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %595 = cast(%var_4983, dtype="int32") /* ty=Tensor[(1, 384), int32] */;
    %596 = cast(meta[relay.Constant][31] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
    %597 = reshape(%591, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
    %598 = reshape(%593, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
    %599 = reshape(%594, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
    %600 = reshape(%595, newshape=[384]) /* ty=Tensor[(384), int32] */;
    %601 = reshape(%596, newshape=[660]) /* ty=Tensor[(660), int32] */;
    %602 = @func_1360(%597, %598, %599, %600, %601) /* ty=(Tensor[(3, 10, 7), float64], Tensor[(3, 10, 7), bool], Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(6, 11, 10), bool], Tensor[(660), int32]) */;
    %603 = cast(%589, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
    %604 = %602.5;
    %605 = sqrt(%603) /* ty=Tensor[(10, 3, 7), float32] */;
    (%592, %604, %var_4983, meta[relay.Constant][31] /* ty=Tensor[(660), int32] */, %605)
  };
  %606(%var_4996) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(6, 11, 10), bool], Tensor[(1, 384), int32], Tensor[(660), int32], Tensor[(10, 3, 7), float32]) */
}

def @func_7951(%var_7917: Tensor[(96, 4), float32], %var_7930: Tensor[(198), float64], %var_7931: int32) -> (Tensor[(96, 4), float64], Tensor[(6, 30), int64], Tensor[(10, 3, 7), uint16], Tensor[(48), int64], Tensor[(198), float64], int32, Tensor[(96, 4), bool]) {
  %607 = @func_4282() /* ty=(Tensor[(96, 4), float32],) */;
  %608 = %607.0;
  %609 = cast(%var_7917, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(2), int32] */;
  %611 = cast(%608, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %613 = @func_7356() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(3, 9, 2), float64], Tensor[(10, 3, 7), float32], Tensor[(4, 9, 5), float32], Tensor[(6, 30), int64]) */;
  %614 = cast(meta[relay.Constant][32] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
  %615 = divide(%611, %612) /* ty=Tensor[(96, 4), float64] */;
  %616 = cast(%615, dtype="int64") /* ty=Tensor[(96, 4), int64] */;
  %617 = cast(%var_7930, dtype="float64") /* ty=Tensor[(198), float64] */;
  %618 = cast(%var_7931, dtype="int32") /* ty=int32 */;
  %619 = reshape(%614, newshape=[48, 1]) /* ty=Tensor[(48, 1), int64] */;
  %620 = reshape(%616, newshape=[48, 8]) /* ty=Tensor[(48, 8), int64] */;
  %621 = reshape(%617, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %622 = reshape(%618, newshape=[]) /* ty=int32 */;
  %623 = @func_4878(%619, %620, %621, %622) /* ty=(Tensor[(10, 3, 7), uint16], Tensor[(4, 9, 5), float64], Tensor[(48, 8), int64], Tensor[(198), float64], int32, Tensor[(10, 3, 7), float32], Tensor[(48, 1), float32]) */;
  %624 = cast(%var_7917, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %625 = shape_of(%608, dtype="int32") /* ty=Tensor[(2), int32] */;
  %626 = cast(%608, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %628 = %613.4;
  %629 = %623.0;
  %630 = greater_equal(%626, %627) /* ty=Tensor[(96, 4), bool] */;
  (%615, %628, %629, meta[relay.Constant][32] /* ty=Tensor[(48), int64] */, %var_7930, %var_7931, %630)
}

def @func_3599(%var_3595: Tensor[(640), uint8]) -> (Tensor[(10, 3, 7), float64], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) {
  %631 = cast(%var_3595, dtype="uint8") /* ty=Tensor[(640), uint8] */;
  %632 = cast(%var_3595, dtype="uint8") /* ty=Tensor[(640), uint8] */;
  %633 = reshape(%631, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint8] */;
  %634 = reshape(%632, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint8] */;
  %635 = @func_3487(%633, %634) /* ty=(Tensor[(16, 8, 5), bool],) */;
  %636 = @func_3505() /* ty=Tensor[(10, 3, 7), float64] */;
  %637 = %635.0;
  (%636, %637, %var_3595)
}

def @func_3984() -> (Tensor[(96, 4), float32],) {
  %642 = fn () -> (Tensor[(96, 4), float32],) {
    %638 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
    %639 = %638.2;
    %640 = cast(%639, dtype="float32") /* ty=Tensor[(96, 4), float32] */;
    %641 = exp(%640) /* ty=Tensor[(96, 4), float32] */;
    (%641,)
  };
  %642() /* ty=(Tensor[(96, 4), float32],) */
}

def @func_8055(%var_8053: Tensor[(2730), float64]) -> (Tensor[(16, 8, 5), float64], Tensor[(3, 9, 2), float64], Tensor[(2730), float64], Tensor[(384), int32]) {
  @func_8052(%var_8053) /* ty=(Tensor[(16, 8, 5), float64], Tensor[(3, 9, 2), float64], Tensor[(2730), float64], Tensor[(384), int32]) */
}

def @func_3294() -> (Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) {
  %661 = fn () -> (Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) {
    %643 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
    %644 = cast(meta[relay.Constant][33] /* ty=Tensor[(2730), float64] */, dtype="float64") /* ty=Tensor[(2730), float64] */;
    %645 = cast(meta[relay.Constant][34] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
    %646 = reshape(%644, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), float64] */;
    %647 = reshape(%645, newshape=[384]) /* ty=Tensor[(384), int32] */;
    %648 = @func_2737(%646, %647) /* ty=(Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(96, 4), int32], Tensor[(14, 15, 13), float64]) */;
    %649 = %648.3;
    %650 = cast(meta[relay.Constant][34] /* ty=Tensor[(384), int32] */, dtype="int16") /* ty=Tensor[(384), int16] */;
    %651 = shape_of(%649, dtype="int32") /* ty=Tensor[(2), int32] */;
    %652 = cast(%649, dtype="int16") /* ty=Tensor[(96, 4), int16] */;
    %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %654 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
    %655 = %654.0;
    %656 = cast(%655, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %657 = %643.0;
    %658 = right_shift(%652, %653) /* ty=Tensor[(96, 4), int16] */;
    %659 = @func_3192() /* ty=Tensor[(10, 3, 7), float32] */;
    %660 = cos(%656) /* ty=Tensor[(10, 3, 7), float64] */;
    (%657, meta[relay.Constant][33] /* ty=Tensor[(2730), float64] */, %658, %659, %660)
  };
  %661() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */
}

def @func_5164() -> (Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32], Tensor[(96, 4), float64]) {
  %670 = fn () -> (Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32], Tensor[(96, 4), float64]) {
    %662 = @func_4369() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32]) */;
    %663 = @func_5136() /* ty=(Tensor[(16, 8, 5), bool], Tensor[(96, 4), float64]) */;
    %664 = %663.1;
    %665 = cast(%664, dtype="float32") /* ty=Tensor[(96, 4), float32] */;
    %666 = cast(%664, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
    %667 = %662.0;
    %668 = acos(%665) /* ty=Tensor[(96, 4), float32] */;
    %669 = rsqrt(%666) /* ty=Tensor[(96, 4), float64] */;
    (%667, %668, %669)
  };
  %670() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32], Tensor[(96, 4), float64]) */
}

def @func_4381() -> (Tensor[(96, 4), float32], Tensor[(2, 9, 11), float64], Tensor[(18), float64], Tensor[(198), float64]) {
  %678 = fn () -> (Tensor[(96, 4), float32], Tensor[(2, 9, 11), float64], Tensor[(18), float64], Tensor[(198), float64]) {
    %671 = @func_4369() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32]) */;
    %672 = cast(meta[relay.Constant][35] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
    %673 = cast(meta[relay.Constant][36] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
    %674 = reshape(%672, newshape=[2, 9, 1]) /* ty=Tensor[(2, 9, 1), float64] */;
    %675 = reshape(%673, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), float64] */;
    %676 = %671.1;
    %677 = @func_514(%674, %675) /* ty=Tensor[(2, 9, 11), float64] */;
    (%676, %677, meta[relay.Constant][35] /* ty=Tensor[(18), float64] */, meta[relay.Constant][36] /* ty=Tensor[(198), float64] */)
  };
  %678() /* ty=(Tensor[(96, 4), float32], Tensor[(2, 9, 11), float64], Tensor[(18), float64], Tensor[(198), float64]) */
}

def @func_7274(%var_7272: Tensor[(360), float64]) -> (Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float32], Tensor[(198), float64], Tensor[(360), float64], Tensor[(24, 2), int64], Tensor[(384), int64], Tensor[(2730), float64]) {
  @func_7271(%var_7272) /* ty=(Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float32], Tensor[(198), float64], Tensor[(360), float64], Tensor[(24, 2), int64], Tensor[(384), int64], Tensor[(2730), float64]) */
}

def @func_4370() -> (Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32]) {
  %682 = fn () -> (Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32]) {
    %679 = @func_3983() /* ty=(Tensor[(96, 4), float32],) */;
    %680 = @func_3505() /* ty=Tensor[(10, 3, 7), float64] */;
    %681 = %679.0;
    (%680, %681)
  };
  %682() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32]) */
}

def @func_6019() -> (Tensor[(10, 3, 7), float32],) {
  %685 = fn () -> (Tensor[(10, 3, 7), float32],) {
    %683 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
    %684 = %683.0;
    (%684,)
  };
  %685() /* ty=(Tensor[(10, 3, 7), float32],) */
}

def @func_7651() -> (Tensor[(10, 3, 7), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) {
  %695 = fn () -> (Tensor[(10, 3, 7), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) {
    %686 = @func_4369() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32]) */;
    %687 = @func_6883() /* ty=(Tensor[(96, 4), float64], Tensor[(96, 4), int16]) */;
    %688 = %687.1;
    %689 = cast(%688, dtype="int32") /* ty=Tensor[(96, 4), int32] */;
    %690 = reshape(%689, newshape=[1, 384]) /* ty=Tensor[(1, 384), int32] */;
    %691 = @func_4995(%690) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(6, 11, 10), bool], Tensor[(1, 384), int32], Tensor[(660), int32], Tensor[(10, 3, 7), float32]) */;
    %692 = %686.0;
    %693 = %691.4;
    %694 = @func_4078() /* ty=Tensor[(10, 3, 7), uint16] */;
    (%692, %688, %693, %694)
  };
  %695() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) */
}

def @func_7218(%var_7214: Tensor[(198), float64], %var_7215: Tensor[(432), uint32], %var_7216: Tensor[(1680), int16], %var_7217: Tensor[(5, 132), int32]) -> (Tensor[(3, 9, 2), float64], Tensor[(18), float64], Tensor[(48), int64], Tensor[(12, 32), int64], Tensor[(198), float64], int32, Tensor[(10, 3, 7), float64], Tensor[(96, 4), float64], Tensor[(18), float64], Tensor[(10, 3, 7), float32], Tensor[(660), int32], Tensor[(432), uint32], Tensor[(1680), int16], Tensor[(5, 132), int32], Tensor[(16, 8, 5), bool], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16], Tensor[(96, 4), float32], Tensor[(10, 3, 7), float32]) {
  %751 = fn (%var_7048: Tensor[(198), float64], %var_7133: Tensor[(432), uint32], %var_7134: Tensor[(1680), int16], %var_7135: Tensor[(5, 132), int32]) -> (Tensor[(3, 9, 2), float64], Tensor[(18), float64], Tensor[(48), int64], Tensor[(12, 32), int64], Tensor[(198), float64], int32, Tensor[(10, 3, 7), float64], Tensor[(96, 4), float64], Tensor[(18), float64], Tensor[(10, 3, 7), float32], Tensor[(660), int32], Tensor[(432), uint32], Tensor[(1680), int16], Tensor[(5, 132), int32], Tensor[(16, 8, 5), bool], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16], Tensor[(96, 4), float32], Tensor[(10, 3, 7), float32]) {
    %696 = @func_4718() /* ty=(Tensor[(3, 9, 2), float64], Tensor[(16, 8, 5), float64]) */;
    %697 = cast(meta[relay.Constant][37] /* ty=Tensor[(48), int64] */, dtype="int64") /* ty=Tensor[(48), int64] */;
    %698 = cast(meta[relay.Constant][38] /* ty=Tensor[(12, 32), int64] */, dtype="int64") /* ty=Tensor[(12, 32), int64] */;
    %699 = cast(%var_7048, dtype="float64") /* ty=Tensor[(198), float64] */;
    %700 = cast(8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %701 = reshape(%697, newshape=[3, 16, 1]) /* ty=Tensor[(3, 16, 1), int64] */;
    %702 = reshape(%698, newshape=[3, 16, 8]) /* ty=Tensor[(3, 16, 8), int64] */;
    %703 = reshape(%699, newshape=[198]) /* ty=Tensor[(198), float64] */;
    %704 = reshape(%700, newshape=[]) /* ty=int32 */;
    %705 = @func_2625(%701, %702, %703, %704) /* ty=(Tensor[(3, 16, 8), int64], Tensor[(1680), int16], Tensor[(18), float64], Tensor[(6, 4, 16), float32], int32, Tensor[(16, 15, 7), float64], Tensor[(180), int64], Tensor[(2, 9, 11), float64], Tensor[(2, 9, 11), int32], Tensor[(4, 9, 5), float64]) */;
    %706 = cast(8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %707 = reshape(%706, newshape=[]) /* ty=int32 */;
    %708 = @func_5375(%707) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(48, 8), int32], Tensor[(6, 11, 10), float64], Tensor[(3, 5, 11), float64], Tensor[(165), float64], Tensor[(18), float64], Tensor[(1, 48), int64], Tensor[(198), float64], int32, int32) */;
    %709 = @func_6883() /* ty=(Tensor[(96, 4), float64], Tensor[(96, 4), int16]) */;
    %710 = @func_4380() /* ty=(Tensor[(96, 4), float32], Tensor[(2, 9, 11), float64], Tensor[(18), float64], Tensor[(198), float64]) */;
    %711 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
    %712 = cast(8 /* ty=int32 */, dtype="uint32") /* ty=uint32 */;
    %713 = cast(%var_7133, dtype="uint32") /* ty=Tensor[(432), uint32] */;
    %714 = cast(%var_7134, dtype="int16") /* ty=Tensor[(1680), int16] */;
    %715 = cast(%var_7133, dtype="uint32") /* ty=Tensor[(432), uint32] */;
    %716 = %708.0;
    %717 = cast(%716, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %718 = cast(%var_7135, dtype="int32") /* ty=Tensor[(5, 132), int32] */;
    %719 = reshape(%712, newshape=[]) /* ty=uint32 */;
    %720 = reshape(%713, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), uint32] */;
    %721 = reshape(%714, newshape=[2, 840]) /* ty=Tensor[(2, 840), int16] */;
    %722 = reshape(%715, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), uint32] */;
    %723 = reshape(%717, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %724 = reshape(%718, newshape=[660]) /* ty=Tensor[(660), int32] */;
    %725 = @func_2238(%719, %720, %721, %722, %723, %724) /* ty=(Tensor[(6, 8, 9), bool], Tensor[(16, 15, 7), float32], Tensor[(2, 840), int16], Tensor[(6, 8, 9), bool], Tensor[(6, 8, 9), float32], Tensor[(3, 10, 7), float64], Tensor[(210), float64], Tensor[(384), int32], Tensor[(660), int32]) */;
    %726 = @func_5136() /* ty=(Tensor[(16, 8, 5), bool], Tensor[(96, 4), float64]) */;
    %727 = @func_5487() /* ty=(Tensor[(10, 3, 7), uint16], Tensor[(10, 3, 7), float32]) */;
    %728 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
    %729 = @func_4758() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) */;
    %730 = @func_3698() /* ty=Tensor[(10, 3, 7), float64] */;
    %731 = cast(%730, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %732 = cosh(%731) /* ty=Tensor[(10, 3, 7), float64] */;
    %733 = cast(%730, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %734 = shape_of(%732, dtype="int32") /* ty=Tensor[(3), int32] */;
    %735 = cast(%732, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %737 = floor_mod(%735, %736) /* ty=Tensor[(10, 3, 7), float64] */;
    %738 = cast(%737, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
    %739 = %696.0;
    %740 = %705.2;
    %741 = %709.0;
    %742 = %710.2;
    %743 = %711.0;
    %744 = %725.8;
    %745 = %726.0;
    %746 = %727.1;
    %747 = %728.0;
    %748 = %729.1;
    %749 = @func_4396() /* ty=Tensor[(96, 4), float32] */;
    %750 = log2(%738) /* ty=Tensor[(10, 3, 7), float32] */;
    (%739, %740, meta[relay.Constant][37] /* ty=Tensor[(48), int64] */, meta[relay.Constant][38] /* ty=Tensor[(12, 32), int64] */, %var_7048, 8 /* ty=int32 */, %716, %741, %742, %743, %744, %var_7133, %var_7134, %var_7135, %745, %746, %747, %748, %749, %750)
  };
  %751(%var_7214, %var_7215, %var_7216, %var_7217) /* ty=(Tensor[(3, 9, 2), float64], Tensor[(18), float64], Tensor[(48), int64], Tensor[(12, 32), int64], Tensor[(198), float64], int32, Tensor[(10, 3, 7), float64], Tensor[(96, 4), float64], Tensor[(18), float64], Tensor[(10, 3, 7), float32], Tensor[(660), int32], Tensor[(432), uint32], Tensor[(1680), int16], Tensor[(5, 132), int32], Tensor[(16, 8, 5), bool], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16], Tensor[(96, 4), float32], Tensor[(10, 3, 7), float32]) */
}

def @func_4621() -> Tensor[(10, 66), int32] {
  @func_4619() /* ty=Tensor[(10, 66), int32] */
}

def @func_6541() -> (Tensor[(198), float64],) {
  %752 = @func_4380() /* ty=(Tensor[(96, 4), float32], Tensor[(2, 9, 11), float64], Tensor[(18), float64], Tensor[(198), float64]) */;
  %753 = %752.3;
  (%753,)
}

def @func_7563() -> (Tensor[(180), int64], Tensor[(16, 8, 5), float64]) {
  @func_7561() /* ty=(Tensor[(180), int64], Tensor[(16, 8, 5), float64]) */
}

def @func_5571(%var_5558: Tensor[(1, 4, 2), float64]) -> Tensor[(1, 4, 2), float64] {
  %754 = cast(%var_5558, dtype="float64") /* ty=Tensor[(1, 4, 2), float64] */;
  sin(%754) /* ty=Tensor[(1, 4, 2), float64] */
}

def @func_6469(%var_6451: Tensor[(6, 12, 11), int32], %var_6452: Tensor[(6, 12, 11), int32]) -> Tensor[(6, 12, 11), int32] {
  %755 = cast(%var_6452, dtype="int32") /* ty=Tensor[(6, 12, 11), int32] */;
  %756 = shape_of(%var_6451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %757 = cast(%var_6451, dtype="int32") /* ty=Tensor[(6, 12, 11), int32] */;
  %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  add(%757, %758) /* ty=Tensor[(6, 12, 11), int32] */
}

def @func_6526() -> Tensor[(10, 66), int32] {
  %759 = fn () -> Tensor[(10, 66), int32] {
    @func_5031() /* ty=Tensor[(10, 66), int32] */
  };
  %759() /* ty=Tensor[(10, 66), int32] */
}

def @func_3347() -> (Tensor[(10, 3, 7), bool],) {
  @func_3345() /* ty=(Tensor[(10, 3, 7), bool],) */
}

def @func_6841() -> (Tensor[(10, 3, 7), float32], Tensor[(96, 4), float32], Tensor[(4, 9, 5), int64], Tensor[(180), int64]) {
  %760 = @func_5759() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %761 = @func_4282() /* ty=(Tensor[(96, 4), float32],) */;
  %762 = cast(meta[relay.Constant][39] /* ty=Tensor[(180), int64] */, dtype="int64") /* ty=Tensor[(180), int64] */;
  %763 = reshape(%762, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), int64] */;
  %764 = @func_996(%763) /* ty=(Tensor[(4, 9, 5), int64], Tensor[(4, 9, 5), float32]) */;
  %765 = %760.0;
  %766 = %761.0;
  %767 = %764.0;
  (%765, %766, %767, meta[relay.Constant][39] /* ty=Tensor[(180), int64] */)
}

def @func_3505() -> Tensor[(10, 3, 7), float64] {
  %768 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %769 = %768.0;
  %770 = cast(%769, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  acos(%770) /* ty=Tensor[(10, 3, 7), float64] */
}

def @func_6564() -> Tensor[(96, 4), float32] {
  @func_6562() /* ty=Tensor[(96, 4), float32] */
}

def @func_591(%var_589: int32, %var_590: Tensor[(6, 4, 16), int32]) -> Tensor[(6, 4, 16), float32] {
  %776 = fn (%var_544: int32, %var_545: Tensor[(6, 4, 16), int32]) -> Tensor[(6, 4, 16), float32] {
    %771 = cast(%var_544, dtype="int32") /* ty=int32 */;
    %772 = cast(%var_545, dtype="int32") /* ty=Tensor[(6, 4, 16), int32] */;
    %773 = bitwise_and(%771, %772) /* ty=Tensor[(6, 4, 16), int32] */;
    %774 = cast(%var_544, dtype="float32") /* ty=float32 */;
    %775 = cast(%773, dtype="float32") /* ty=Tensor[(6, 4, 16), float32] */;
    divide(%774, %775) /* ty=Tensor[(6, 4, 16), float32] */
  };
  %776(%var_589, %var_590) /* ty=Tensor[(6, 4, 16), float32] */
}

def @func_4788(%var_4786: Tensor[(3, 5, 11), float64]) -> (Tensor[(3, 5, 11), float64], Tensor[(10, 3, 7), float32]) {
  @func_4785(%var_4786) /* ty=(Tensor[(3, 5, 11), float64], Tensor[(10, 3, 7), float32]) */
}

def @func_3491(%var_3489: Tensor[(16, 8, 5), uint8], %var_3490: Tensor[(16, 8, 5), uint8]) -> (Tensor[(16, 8, 5), bool],) {
  @func_3487(%var_3489, %var_3490) /* ty=(Tensor[(16, 8, 5), bool],) */
}

def @func_2737(%var_2706: Tensor[(14, 15, 13), float64], %var_2714: Tensor[(384), int32]) -> (Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(96, 4), int32], Tensor[(14, 15, 13), float64]) {
  %777 = cast(-7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %778 = cast(%var_2714, dtype="int32") /* ty=Tensor[(384), int32] */;
  %779 = reshape(%777, newshape=[]) /* ty=int32 */;
  %780 = reshape(%778, newshape=[6, 4, 16]) /* ty=Tensor[(6, 4, 16), int32] */;
  %781 = cast(%var_2714, dtype="int32") /* ty=Tensor[(384), int32] */;
  %782 = reshape(%781, newshape=[96, 4]) /* ty=Tensor[(96, 4), int32] */;
  %783 = @func_1103(%782) /* ty=(Tensor[(4, 12, 4), float32], Tensor[(6, 4, 16), float32], int32, Tensor[(96, 4), int32]) */;
  %784 = cast(%var_2706, dtype="float64") /* ty=Tensor[(14, 15, 13), float64] */;
  %785 = asinh(%784) /* ty=Tensor[(14, 15, 13), float64] */;
  %786 = cast(%785, dtype="float64") /* ty=Tensor[(14, 15, 13), float64] */;
  %787 = @func_588(%779, %780) /* ty=Tensor[(6, 4, 16), float32] */;
  %788 = %783.3;
  %789 = sin(%786) /* ty=Tensor[(14, 15, 13), float64] */;
  (%787, -7 /* ty=int32 */, %var_2714, %788, %789)
}

def @func_4960(%var_4957: Tensor[(4, 7, 4), float64], %var_4958: Tensor[(12, 30), float64], %var_4959: Tensor[(384), int64]) -> (Tensor[(4, 7, 4), float64], Tensor[(384), int64], Tensor[(12, 30), float64], Tensor[(384), int64]) {
  %801 = fn (%var_4930: Tensor[(4, 7, 4), float64], %var_4951: Tensor[(12, 30), float64], %var_4952: Tensor[(384), int64]) -> (Tensor[(4, 7, 4), float64], Tensor[(384), int64], Tensor[(12, 30), float64], Tensor[(384), int64]) {
    %790 = cast(%var_4930, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
    %791 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(4, 7, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %792 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 7, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
    %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %794 = cast(%var_4951, dtype="float64") /* ty=Tensor[(12, 30), float64] */;
    %795 = cast(%var_4952, dtype="int64") /* ty=Tensor[(384), int64] */;
    %796 = reshape(%794, newshape=[360]) /* ty=Tensor[(360), float64] */;
    %797 = reshape(%795, newshape=[384]) /* ty=Tensor[(384), int64] */;
    %798 = @func_3828(%796, %797) /* ty=(Tensor[(10, 3, 7), float32], Tensor[(4, 9, 5), float64], Tensor[(360), float64], Tensor[(48, 1), int64], Tensor[(384), int64], Tensor[(2730), float64], Tensor[(10, 3, 7), float32]) */;
    %799 = power(%792, %793) /* ty=Tensor[(4, 7, 4), float64] */;
    %800 = %798.4;
    (%799, %800, %var_4951, %var_4952)
  };
  %801(%var_4957, %var_4958, %var_4959) /* ty=(Tensor[(4, 7, 4), float64], Tensor[(384), int64], Tensor[(12, 30), float64], Tensor[(384), int64]) */
}

def @func_7431() -> Tensor[(10, 3, 7), float32] {
  %802 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %802.0
}

def @func_7835() -> (Tensor[(10, 3, 7), float32],) {
  %805 = fn () -> (Tensor[(10, 3, 7), float32],) {
    %803 = @func_4758() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), uint16]) */;
    %804 = %803.0;
    (%804,)
  };
  %805() /* ty=(Tensor[(10, 3, 7), float32],) */
}

def @func_7956(%var_7953: Tensor[(96, 4), float32], %var_7954: Tensor[(198), float64], %var_7955: int32) -> (Tensor[(96, 4), float64], Tensor[(6, 30), int64], Tensor[(10, 3, 7), uint16], Tensor[(48), int64], Tensor[(198), float64], int32, Tensor[(96, 4), bool]) {
  @func_7951(%var_7953, %var_7954, %var_7955) /* ty=(Tensor[(96, 4), float64], Tensor[(6, 30), int64], Tensor[(10, 3, 7), uint16], Tensor[(48), int64], Tensor[(198), float64], int32, Tensor[(96, 4), bool]) */
}

def @main(%var_8153: Tensor[(3, 9, 2), float64]) -> Tensor[(3, 9, 2), float64] {
  %806 = @func_4640() /* ty=Tensor[(3, 9, 2), float64] */;
  %807 = cast(%var_8153, dtype="int64") /* ty=Tensor[(3, 9, 2), int64] */;
  %808 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(%806, dtype="int64") /* ty=Tensor[(3, 9, 2), int64] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %811 = left_shift(%809, %810) /* ty=Tensor[(3, 9, 2), int64] */;
  %812 = cast(%var_8153, dtype="float64") /* ty=Tensor[(3, 9, 2), float64] */;
  %813 = shape_of(%811, dtype="int32") /* ty=Tensor[(3), int32] */;
  %814 = cast(%811, dtype="float64") /* ty=Tensor[(3, 9, 2), float64] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%814, %815) /* ty=Tensor[(3, 9, 2), float64] */
}

def @func_7561() -> (Tensor[(180), int64], Tensor[(16, 8, 5), float64]) {
  %816 = @func_6841() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(96, 4), float32], Tensor[(4, 9, 5), int64], Tensor[(180), int64]) */;
  %817 = @func_5989() /* ty=(Tensor[(16, 8, 5), float64],) */;
  %818 = %816.3;
  %819 = %817.0;
  (%818, %819)
}

def @func_998(%var_997: Tensor[(4, 9, 5), int64]) -> (Tensor[(4, 9, 5), int64], Tensor[(4, 9, 5), float32]) {
  %827 = fn (%var_983: Tensor[(4, 9, 5), int64]) -> (Tensor[(4, 9, 5), int64], Tensor[(4, 9, 5), float32]) {
    %820 = cast(%var_983, dtype="int64") /* ty=Tensor[(4, 9, 5), int64] */;
    %821 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(4, 9, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %822 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 9, 5), int64] */, dtype="int64") /* ty=Tensor[(4, 9, 5), int64] */;
    %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %824 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 9, 5), int64] */, dtype="float32") /* ty=Tensor[(4, 9, 5), float32] */;
    %825 = bitwise_and(%822, %823) /* ty=Tensor[(4, 9, 5), int64] */;
    %826 = acosh(%824) /* ty=Tensor[(4, 9, 5), float32] */;
    (%825, %826)
  };
  %827(%var_997) /* ty=(Tensor[(4, 9, 5), int64], Tensor[(4, 9, 5), float32]) */
}

def @func_5434(%var_5433: Tensor[(11, 7, 6), float32]) -> (Tensor[(?, 7, 6), bool], Tensor[(11, 7, 6), uint8]) {
  %838 = fn (%var_5422: Tensor[(11, 7, 6), float32]) -> (Tensor[(?, 7, 6), bool], Tensor[(11, 7, 6), uint8]) {
    %828 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 7, 6), float32] */, dtype="float32") /* ty=Tensor[(1, 7, 6), float32] */;
    %829 = cos(%828) /* ty=Tensor[(1, 7, 6), float32] */;
    %830 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 7, 6), float32] */, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
    %831 = shape_of(%829, dtype="int32") /* ty=Tensor[(3), int32] */;
    %832 = cast(%829, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
    %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %834 = cast(%829, dtype="uint8") /* ty=Tensor[(1, 7, 6), uint8] */;
    %835 = cast(%var_5422, dtype="uint8") /* ty=Tensor[(11, 7, 6), uint8] */;
    %836 = not_equal(%832, %833) /* ty=Tensor[(?, 7, 6), bool] */;
    %837 = multiply(%834, %835) /* ty=Tensor[(11, 7, 6), uint8] */;
    (%836, %837)
  };
  %838(%var_5433) /* ty=(Tensor[(?, 7, 6), bool], Tensor[(11, 7, 6), uint8]) */
}

def @func_3487(%var_3477: Tensor[(16, 8, 5), uint8], %var_3478: Tensor[(16, 8, 5), uint8]) -> (Tensor[(16, 8, 5), bool],) {
  %839 = cast(%var_3478, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
  %840 = shape_of(%var_3477, dtype="int32") /* ty=Tensor[(3), int32] */;
  %841 = cast(%var_3477, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %843 = greater(%841, %842) /* ty=Tensor[(16, 8, 5), bool] */;
  (%843,)
}

def @func_3602(%var_3600: Tensor[(640), uint8]) -> (Tensor[(10, 3, 7), float64], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) {
  @func_3599(%var_3600) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) */
}

def @func_6782(%var_6753: Tensor[(10, 3, 7), float32]) -> Tensor[(10, 3, 7), bool] {
  %844 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %845 = %844.0;
  %846 = cast(%var_6753, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %847 = shape_of(%845, dtype="int32") /* ty=Tensor[(3), int32] */;
  %848 = cast(%845, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%848, %849) /* ty=Tensor[(10, 3, 7), bool] */
}

def @func_4261() -> (Tensor[(16, 8, 5), float64], Tensor[(10, 3, 7), float32]) {
  %859 = fn () -> (Tensor[(16, 8, 5), float64], Tensor[(10, 3, 7), float32]) {
    %850 = @func_3934() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), bool], Tensor[(640), uint8]) */;
    %851 = %850.1;
    %852 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 8, 5), bool] */, dtype="float64") /* ty=Tensor[(16, 8, 5), float64] */;
    %853 = shape_of(%851, dtype="int32") /* ty=Tensor[(3), int32] */;
    %854 = cast(%851, dtype="float64") /* ty=Tensor[(16, 8, 5), float64] */;
    %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %856 = @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */;
    %857 = mod(%854, %855) /* ty=Tensor[(16, 8, 5), float64] */;
    %858 = %856.0;
    (%857, %858)
  };
  %859() /* ty=(Tensor[(16, 8, 5), float64], Tensor[(10, 3, 7), float32]) */
}

def @func_7271(%var_7246: Tensor[(360), float64]) -> (Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float32], Tensor[(198), float64], Tensor[(360), float64], Tensor[(24, 2), int64], Tensor[(384), int64], Tensor[(2730), float64]) {
  %860 = cast(%var_7246, dtype="float64") /* ty=Tensor[(360), float64] */;
  %861 = cast(meta[relay.Constant][44] /* ty=Tensor[(24, 2), int64] */, dtype="int64") /* ty=Tensor[(24, 2), int64] */;
  %862 = cast(meta[relay.Constant][45] /* ty=Tensor[(384), int64] */, dtype="int64") /* ty=Tensor[(384), int64] */;
  %863 = cast(meta[relay.Constant][46] /* ty=Tensor[(2730), float64] */, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %864 = reshape(%860, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %865 = reshape(%861, newshape=[48]) /* ty=Tensor[(48), int64] */;
  %866 = reshape(%862, newshape=[384]) /* ty=Tensor[(384), int64] */;
  %867 = reshape(%863, newshape=[2730]) /* ty=Tensor[(2730), float64] */;
  %868 = @func_7027(%864, %865, %866, %867) /* ty=(Tensor[(16, 8, 5), float64], Tensor[(198), float64], Tensor[(210), float32], Tensor[(360), float64], Tensor[(48), int64], Tensor[(384), int64], Tensor[(2730), float64], Tensor[(10, 3, 7), float32], Tensor[(16, 8, 5), float64], Tensor[(10, 66), int32], Tensor[(96, 4), int64], Tensor[(16, 15, 7), float32], Tensor[(1680), int16], Tensor[(96, 4), float64]) */;
  %869 = @func_6667() /* ty=Tensor[(10, 3, 7), float32] */;
  %870 = @func_3192() /* ty=Tensor[(10, 3, 7), float32] */;
  %871 = %868.1;
  (%869, %870, %871, %var_7246, meta[relay.Constant][44] /* ty=Tensor[(24, 2), int64] */, meta[relay.Constant][45] /* ty=Tensor[(384), int64] */, meta[relay.Constant][46] /* ty=Tensor[(2730), float64] */)
}

def @func_8123() -> Tensor[(10, 3, 7), float32] {
  @func_5863() /* ty=Tensor[(10, 3, 7), float32] */
}

def @func_4080() -> Tensor[(10, 3, 7), uint16] {
  @func_4078() /* ty=Tensor[(10, 3, 7), uint16] */
}

def @func_6384(%var_6382: Tensor[(96, 4), float32]) -> (Tensor[(6, 11, 10), bool], Tensor[(96, 4), float64]) {
  @func_6381(%var_6382) /* ty=(Tensor[(6, 11, 10), bool], Tensor[(96, 4), float64]) */
}

def @func_7801() -> (Tensor[(10, 3, 7), float32], Tensor[(10, 66), int32]) {
  @func_7799() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(10, 66), int32]) */
}

def @func_6443(%var_6404: Tensor[(7, 2, 6), float32]) -> (Tensor[(7, 2, 6), float32], Tensor[(6, 11, 10), bool], Tensor[(660), int32], Tensor[(10, 3, 7), float64]) {
  %872 = cast(%var_6404, dtype="float32") /* ty=Tensor[(7, 2, 6), float32] */;
  %873 = cast(meta[relay.Constant][47] /* ty=Tensor[(660), int32] */, dtype="int32") /* ty=Tensor[(660), int32] */;
  %874 = reshape(%873, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int32] */;
  %875 = @func_5163() /* ty=(Tensor[(10, 3, 7), float64], Tensor[(96, 4), float32], Tensor[(96, 4), float64]) */;
  %876 = asinh(%872) /* ty=Tensor[(7, 2, 6), float32] */;
  %877 = @func_430(%874) /* ty=Tensor[(6, 11, 10), bool] */;
  %878 = %875.0;
  (%876, %877, meta[relay.Constant][47] /* ty=Tensor[(660), int32] */, %878)
}

def @func_4641() -> Tensor[(3, 9, 2), float64] {
  %880 = fn () -> Tensor[(3, 9, 2), float64] {
    %879 = cast(meta[relay.Constant][48] /* ty=Tensor[(3, 9, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 2), float64] */;
    sinh(%879) /* ty=Tensor[(3, 9, 2), float64] */
  };
  %880() /* ty=Tensor[(3, 9, 2), float64] */
}

def @func_5092(%var_5091: Tensor[(3, 9, 2), float64]) -> (Tensor[(3, 9, 2), float32], Tensor[(1, 3, 8), float32], Tensor[(24), float32], Tensor[(384), int32], Tensor[(1, 2730), float64], Tensor[(384), int32]) {
  %897 = fn (%var_5060: Tensor[(3, 9, 2), float64]) -> (Tensor[(3, 9, 2), float32], Tensor[(1, 3, 8), float32], Tensor[(24), float32], Tensor[(384), int32], Tensor[(1, 2730), float64], Tensor[(384), int32]) {
    %881 = @func_4640() /* ty=Tensor[(3, 9, 2), float64] */;
    %882 = cast(%var_5060, dtype="float32") /* ty=Tensor[(3, 9, 2), float32] */;
    %883 = shape_of(%881, dtype="int32") /* ty=Tensor[(3), int32] */;
    %884 = cast(%881, dtype="float32") /* ty=Tensor[(3, 9, 2), float32] */;
    %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %886 = cast(meta[relay.Constant][49] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %887 = reshape(%886, newshape=[1, 3, 8]) /* ty=Tensor[(1, 3, 8), float32] */;
    %888 = @func_1192(%887) /* ty=(Tensor[(1, 3, 8), float32],) */;
    %889 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 2730), float64] */, dtype="float64") /* ty=Tensor[(1, 2730), float64] */;
    %890 = cast(meta[relay.Constant][51] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
    %891 = reshape(%889, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), float64] */;
    %892 = reshape(%890, newshape=[384]) /* ty=Tensor[(384), int32] */;
    %893 = @func_2737(%891, %892) /* ty=(Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(96, 4), int32], Tensor[(14, 15, 13), float64]) */;
    %894 = power(%884, %885) /* ty=Tensor[(3, 9, 2), float32] */;
    %895 = %888.0;
    %896 = %893.2;
    (%894, %895, meta[relay.Constant][49] /* ty=Tensor[(24), float32] */, %896, meta[relay.Constant][50] /* ty=Tensor[(1, 2730), float64] */, meta[relay.Constant][51] /* ty=Tensor[(384), int32] */)
  };
  %897(%var_5091) /* ty=(Tensor[(3, 9, 2), float32], Tensor[(1, 3, 8), float32], Tensor[(24), float32], Tensor[(384), int32], Tensor[(1, 2730), float64], Tensor[(384), int32]) */
}

def @func_5808() -> (Tensor[(10, 3, 7), uint16],) {
  @func_5806() /* ty=(Tensor[(10, 3, 7), uint16],) */
}

def @func_3246() -> (Tensor[(10, 3, 7), float32],) {
  @func_3244() /* ty=(Tensor[(10, 3, 7), float32],) */
}

def @func_6843() -> (Tensor[(10, 3, 7), float32], Tensor[(96, 4), float32], Tensor[(4, 9, 5), int64], Tensor[(180), int64]) {
  @func_6841() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(96, 4), float32], Tensor[(4, 9, 5), int64], Tensor[(180), int64]) */
}

def @func_2245(%var_2239: uint32, %var_2240: Tensor[(6, 8, 9), uint32], %var_2241: Tensor[(2, 840), int16], %var_2242: Tensor[(6, 8, 9), uint32], %var_2243: Tensor[(210), float64], %var_2244: Tensor[(660), int32]) -> (Tensor[(6, 8, 9), bool], Tensor[(16, 15, 7), float32], Tensor[(2, 840), int16], Tensor[(6, 8, 9), bool], Tensor[(6, 8, 9), float32], Tensor[(3, 10, 7), float64], Tensor[(210), float64], Tensor[(384), int32], Tensor[(660), int32]) {
  %925 = fn (%var_2192: uint32, %var_2193: Tensor[(6, 8, 9), uint32], %var_2203: Tensor[(2, 840), int16], %var_2214: Tensor[(6, 8, 9), uint32], %var_2227: Tensor[(210), float64], %var_2229: Tensor[(660), int32]) -> (Tensor[(6, 8, 9), bool], Tensor[(16, 15, 7), float32], Tensor[(2, 840), int16], Tensor[(6, 8, 9), bool], Tensor[(6, 8, 9), float32], Tensor[(3, 10, 7), float64], Tensor[(210), float64], Tensor[(384), int32], Tensor[(660), int32]) {
    %898 = cast(%var_2192, dtype="bool") /* ty=bool */;
    %899 = cast(%var_2193, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
    %900 = cast(%var_2203, dtype="int16") /* ty=Tensor[(2, 840), int16] */;
    %901 = cast(%var_2203, dtype="int16") /* ty=Tensor[(2, 840), int16] */;
    %902 = reshape(%900, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int16] */;
    %903 = reshape(%901, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int16] */;
    %904 = cast(%var_2214, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
    %905 = shape_of(%var_2193, dtype="int32") /* ty=Tensor[(3), int32] */;
    %906 = cast(%var_2193, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
    %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %908 = cast(%var_2214, dtype="float32") /* ty=Tensor[(6, 8, 9), float32] */;
    %909 = cast(%var_2227, dtype="float64") /* ty=Tensor[(210), float64] */;
    %910 = cast(%var_2227, dtype="float64") /* ty=Tensor[(210), float64] */;
    %911 = cast(%var_2227, dtype="float64") /* ty=Tensor[(210), float64] */;
    %912 = cast(meta[relay.Constant][52] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
    %913 = cast(%var_2229, dtype="int32") /* ty=Tensor[(660), int32] */;
    %914 = reshape(%909, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
    %915 = reshape(%910, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
    %916 = reshape(%911, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
    %917 = reshape(%912, newshape=[384]) /* ty=Tensor[(384), int32] */;
    %918 = reshape(%913, newshape=[660]) /* ty=Tensor[(660), int32] */;
    %919 = @func_1360(%914, %915, %916, %917, %918) /* ty=(Tensor[(3, 10, 7), float64], Tensor[(3, 10, 7), bool], Tensor[(6, 4, 16), float32], int32, Tensor[(384), int32], Tensor[(6, 11, 10), bool], Tensor[(660), int32]) */;
    %920 = not_equal(%898, %899) /* ty=Tensor[(6, 8, 9), bool] */;
    %921 = @func_2102(%902, %903) /* ty=Tensor[(16, 15, 7), float32] */;
    %922 = logical_and(%906, %907) /* ty=Tensor[(6, 8, 9), bool] */;
    %923 = log10(%908) /* ty=Tensor[(6, 8, 9), float32] */;
    %924 = %919.0;
    (%920, %921, %var_2203, %922, %923, %924, %var_2227, meta[relay.Constant][52] /* ty=Tensor[(384), int32] */, %var_2229)
  };
  %925(%var_2239, %var_2240, %var_2241, %var_2242, %var_2243, %var_2244) /* ty=(Tensor[(6, 8, 9), bool], Tensor[(16, 15, 7), float32], Tensor[(2, 840), int16], Tensor[(6, 8, 9), bool], Tensor[(6, 8, 9), float32], Tensor[(3, 10, 7), float64], Tensor[(210), float64], Tensor[(384), int32], Tensor[(660), int32]) */
}

def @func_4396() -> Tensor[(96, 4), float32] {
  %926 = @func_4151() /* ty=(Tensor[(96, 4), float32],) */;
  %926.0
}

def @func_3441(%var_3381: Tensor[(10, 3, 7), float32], %var_3399: Tensor[(360, 1), float64], %var_3400: Tensor[(2, 24), int64], %var_3401: Tensor[(384), int64], %var_3402: Tensor[(7, 390), float64], %var_3409: Tensor[(10, 3, 7), float32]) -> (Tensor[(10, 3, 7), bool], Tensor[(96, 4), int32], Tensor[(360, 1), float64], Tensor[(2, 24), int64], Tensor[(384), int64], Tensor[(7, 390), float64], Tensor[(10, 3, 7), int64]) {
  %927 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %928 = %927.0;
  %929 = cast(%var_3381, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %930 = shape_of(%928, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(%928, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %933 = cast(%var_3399, dtype="float64") /* ty=Tensor[(360, 1), float64] */;
  %934 = cast(%var_3400, dtype="int64") /* ty=Tensor[(2, 24), int64] */;
  %935 = cast(%var_3401, dtype="int64") /* ty=Tensor[(384), int64] */;
  %936 = cast(%var_3399, dtype="float64") /* ty=Tensor[(360, 1), float64] */;
  %937 = cast(%var_3402, dtype="float64") /* ty=Tensor[(7, 390), float64] */;
  %938 = reshape(%933, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float64] */;
  %939 = reshape(%934, newshape=[48]) /* ty=Tensor[(48), int64] */;
  %940 = reshape(%935, newshape=[1, 384]) /* ty=Tensor[(1, 384), int64] */;
  %941 = reshape(%936, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float64] */;
  %942 = reshape(%937, newshape=[2730]) /* ty=Tensor[(2730), float64] */;
  %943 = @func_3084(%938, %939, %940, %941, %942) /* ty=(Tensor[(4, 9, 5), float64], Tensor[(48), int64], Tensor[(1, 384), int64], Tensor[(198), float64], int32, int32, Tensor[(3, 10, 12), uint16], Tensor[(96, 4), int32], Tensor[(2730), float64]) */;
  %944 = @func_3142() /* ty=(Tensor[(10, 3, 7), float32],) */;
  %945 = %944.0;
  %946 = cast(%945, dtype="float32") /* ty=Tensor[(10, 3, 7), float32] */;
  %947 = sigmoid(%946) /* ty=Tensor[(10, 3, 7), float32] */;
  %948 = cast(%928, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %949 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%947, dtype="bool") /* ty=Tensor[(10, 3, 7), bool] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %952 = greater_equal(%950, %951) /* ty=Tensor[(10, 3, 7), bool] */;
  %953 = cast(%var_3409, dtype="uint32") /* ty=Tensor[(10, 3, 7), uint32] */;
  %954 = shape_of(%952, dtype="int32") /* ty=Tensor[(3), int32] */;
  %955 = cast(%952, dtype="uint32") /* ty=Tensor[(10, 3, 7), uint32] */;
  %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %957 = left_shift(%955, %956) /* ty=Tensor[(10, 3, 7), uint32] */;
  %958 = cast(%var_3409, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %959 = shape_of(%var_3381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %960 = cast(%var_3381, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %962 = maximum(%960, %961) /* ty=Tensor[(10, 3, 7), float64] */;
  %963 = cast(%962, dtype="int64") /* ty=Tensor[(10, 3, 7), int64] */;
  %964 = shape_of(%957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%957, dtype="int64") /* ty=Tensor[(10, 3, 7), int64] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %967 = logical_and(%931, %932) /* ty=Tensor[(10, 3, 7), bool] */;
  %968 = %943.7;
  %969 = add(%965, %966) /* ty=Tensor[(10, 3, 7), int64] */;
  (%967, %968, %var_3399, %var_3400, %var_3401, %var_3402, %969)
}

def @func_1194(%var_1193: Tensor[(1, 3, 8), float32]) -> (Tensor[(1, 3, 8), float32],) {
  %972 = fn (%var_1182: Tensor[(1, 3, 8), float32]) -> (Tensor[(1, 3, 8), float32],) {
    %970 = cast(%var_1182, dtype="float32") /* ty=Tensor[(1, 3, 8), float32] */;
    %971 = log10(%970) /* ty=Tensor[(1, 3, 8), float32] */;
    (%971,)
  };
  %972(%var_1193) /* ty=(Tensor[(1, 3, 8), float32],) */
}

def @func_6289() -> Tensor[(96, 4), int16] {
  %974 = fn () -> Tensor[(96, 4), int16] {
    %973 = @func_3293() /* ty=(Tensor[(10, 3, 7), float32], Tensor[(2730), float64], Tensor[(96, 4), int16], Tensor[(10, 3, 7), float32], Tensor[(10, 3, 7), float64]) */;
    %973.2
  };
  %974() /* ty=Tensor[(96, 4), int16] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen398/build/output.py", line 2273, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  36: TVMFuncCall
  35: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  34: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  33: tvm::relay::backend::ExecutorCodegen::Codegen(tvm::relay::Function const&, tvm::runtime::String)
  32: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::GraphExecutorCodegenModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  31: tvm::relay::backend::GraphExecutorCodegen::Codegen(tvm::relay::Function, tvm::runtime::String)
  30: tvm::transform::Pass::operator()(tvm::IRModule) const
  29: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  28: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  27: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  26: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  25: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  24: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  23: tvm::transform::Pass::operator()(tvm::IRModule) const
  22: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  21: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  20: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  19: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  18: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  17: _ZZN3tvm5relay11ExprFunc
  16: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  15: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  14: _ZN3tvm5relay9
  13: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  12: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  11: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  10: _ZZN3tvm5relay11ExprFunc
  9: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  8: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  7: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  6: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  5: _ZZN3tvm5relay11ExprFunc
  4: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  3: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  2: tvm::relay::tec::LowerTensorExprMutator::ResolveToPrimitive(tvm::RelayExpr)
  1: tvm::IRModuleNode::Lookup(tvm::GlobalVar const&) const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/src/ir/module.cc", line 268
TVMError: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------
  Check failed: (it != functions.end()) is false: There is no definition of func_4640

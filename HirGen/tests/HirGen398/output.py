import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_424 = relay.const([[[-10,1,-1,-5,5,-10,-3,4,-1,-4],[-5,-7,-9,8,5,-3,1,2,-8,-5],[-8,-6,7,9,-10,-2,-2,-10,10,-6],[-9,7,-4,-10,-8,5,-1,5,8,3],[-8,3,-4,3,-2,-8,-10,9,-5,-6],[7,7,2,-3,9,-8,-2,9,5,-9],[-10,8,-5,-6,7,3,5,1,5,8],[9,-1,1,7,9,-3,-5,1,-7,10],[10,9,5,-3,-3,2,-6,-2,-2,-3],[7,2,-8,-3,1,-10,-7,8,-8,-2],[-9,2,9,4,-5,2,4,3,6,-6]],[[1,2,6,10,9,6,8,5,4,-7],[-6,-10,-3,-2,-10,10,4,-9,-9,8],[-3,-10,-4,10,-6,-8,8,-3,-2,-1],[-3,2,-10,10,2,-1,-2,-7,6,6],[-4,6,-2,-2,6,-5,-2,-6,1,-6],[-6,7,-8,6,-2,7,7,-10,2,3],[5,7,-8,2,3,-10,4,8,-4,5],[-7,5,-4,4,7,4,-7,9,-5,3],[-8,-6,-2,2,9,5,-10,3,-5,9],[-6,4,-5,-9,4,10,-8,-2,-3,8],[4,9,6,-5,10,-3,-1,2,-7,-8]],[[-4,3,-7,2,-1,-1,6,6,-3,-2],[-9,1,-1,-5,5,-1,2,-1,-1,8],[-7,-5,-10,-6,-6,-9,-5,-2,-3,-7],[10,7,2,-2,5,4,-10,9,-2,6],[3,-2,4,-7,2,-7,-1,-4,-6,-7],[8,-5,10,10,-8,3,-2,2,-8,-4],[10,-3,-8,6,-5,5,4,-6,3,-10],[4,2,6,-1,2,7,7,-5,-8,8],[-3,1,-4,-4,2,-6,5,2,4,10],[-9,10,-6,2,5,9,5,-5,-6,-4],[1,7,-1,-1,-2,-1,-7,-8,5,9]],[[10,-7,-2,1,-1,8,-6,10,-6,2],[-2,-9,-5,4,-7,-9,-4,1,9,4],[7,-2,9,-2,-4,2,-9,-7,-8,-6],[7,-1,4,-7,-3,4,6,-5,-9,9],[3,-1,4,9,-10,-8,-2,8,-10,10],[-7,-3,10,8,-7,5,10,-4,-6,8],[-8,3,-7,8,5,1,4,-4,4,-6],[-1,-2,-8,7,9,-10,-4,-9,-3,8],[-4,-1,-3,-3,-9,1,-1,-10,1,-3],[-3,-7,5,7,2,-5,4,-5,10,-5],[10,-8,-1,9,6,-2,2,-5,5,4]],[[-7,4,-6,-8,10,7,1,10,-2,2],[9,-6,-3,-10,4,4,3,-3,-6,7],[-6,5,-8,7,-1,9,-5,3,-7,-6],[4,-2,-7,-8,-8,10,-9,-1,-9,-10],[-9,2,-3,4,5,1,-10,-8,10,2],[3,1,-9,1,-1,8,-10,-8,5,-5],[9,-2,10,8,8,-5,-3,4,-9,10],[6,3,-10,8,-10,6,10,-10,7,-10],[7,-7,4,-2,6,4,-2,5,8,9],[-10,-9,4,3,-9,-8,10,9,-7,-6],[5,-5,7,-10,5,2,4,-6,-3,2]],[[3,8,-5,7,8,-7,3,1,-1,-4],[-10,-2,10,-5,-8,-4,-4,4,1,-5],[5,3,1,-8,5,-9,-10,9,2,4],[-10,-2,-3,6,-8,-5,1,10,4,-6],[-4,3,-7,-4,6,-8,-8,-1,-7,-7],[7,7,-1,-4,7,-3,-5,4,9,-1],[-8,1,9,7,10,10,-7,7,-4,-5],[1,3,-2,-9,7,-6,-1,2,-1,-8],[4,-8,5,-1,8,-1,1,6,2,-4],[7,5,9,10,8,-10,-5,3,6,8],[-9,-5,-4,-6,6,5,-2,-1,-8,10]]], dtype = "int32")#candidate|424|(6, 11, 10)|const|int32
var_425 = relay.var("var_425", dtype = "int32", shape = (6, 11, 10))#candidate|425|(6, 11, 10)|var|int32
bop_426 = relay.equal(const_424.astype('bool'), relay.reshape(var_425.astype('bool'), relay.shape_of(const_424))) # shape=(6, 11, 10)
output = bop_426
output2 = bop_426
func_430 = relay.Function([var_425,], output)
mod['func_430'] = func_430
mod = relay.transform.InferType()(mod)
mutated_mod['func_430'] = func_430
mutated_mod = relay.transform.InferType()(mutated_mod)
var_431 = relay.var("var_431", dtype = "int32", shape = (6, 11, 10))#candidate|431|(6, 11, 10)|var|int32
func_430_call = mutated_mod.get_global_var('func_430')
call_432 = func_430_call(var_431)
output = call_432
func_433 = relay.Function([var_431], output)
mutated_mod['func_433'] = func_433
mutated_mod = relay.transform.InferType()(mutated_mod)
const_457 = relay.const(6, dtype = "uint16")#candidate|457|()|const|uint16
const_458 = relay.const([[[-5,-5,-5,10,8,-6,10],[-2,-6,-6,-6,-2,-9,3],[-2,-3,9,2,6,-8,9],[-9,-1,-5,10,9,-6,-4],[1,8,-4,-2,8,-4,7],[-1,6,-7,-3,-6,-8,8],[8,-8,-9,-4,-7,3,2],[2,-9,-8,-4,-2,9,-1],[-2,10,-1,9,-7,3,3],[3,-3,-5,-9,9,-7,-2],[8,-3,2,-10,-6,-3,6]],[[-8,1,-2,-6,1,1,-9],[-1,-7,4,-1,7,-9,2],[7,9,-7,-7,-9,10,-8],[-9,1,8,1,8,-8,3],[10,-1,-5,10,-3,3,-10],[1,1,-7,-10,-10,8,-2],[5,-6,-5,9,9,4,-8],[3,7,8,-2,2,-9,-4],[2,-5,-5,1,-10,-2,2],[1,2,-10,6,10,-2,-3],[-7,-9,-4,6,-7,-1,-7]],[[-6,-8,1,-8,10,-8,3],[3,2,-2,-6,5,-8,-9],[1,-2,7,3,10,8,7],[-8,-7,-6,-10,-7,-7,-10],[-9,3,-7,5,5,-3,-9],[-4,-6,-7,-5,1,1,2],[2,-2,1,9,2,-1,3],[-3,4,9,2,-4,-6,2],[2,-5,6,-7,3,-4,-1],[-2,-10,5,2,5,-9,-3],[-3,-2,9,-1,-7,1,-4]],[[4,1,-8,-3,-4,-8,-1],[9,1,8,-8,3,3,8],[1,-10,-7,-3,3,-9,-4],[-7,5,-10,-7,2,-7,-5],[-6,-6,-4,3,9,-8,3],[9,-6,2,-4,10,1,7],[10,10,-6,4,-5,3,1],[6,9,-1,4,6,6,-9],[9,-6,-9,-4,5,7,3],[1,9,9,-3,-3,-4,4],[7,8,1,-7,-10,-7,9]],[[4,4,-9,3,1,10,4],[4,-5,-3,-9,7,-7,6],[-2,8,8,-1,2,-5,-1],[-6,-1,5,3,1,4,-7],[4,5,-10,-4,-2,5,9],[9,-7,7,7,-7,3,2],[3,10,-5,-5,-7,-1,-4],[-5,8,-4,-10,6,4,10],[9,-5,-3,2,-10,-3,8],[6,-2,-4,4,9,7,-1],[-9,8,-5,2,8,6,-3]],[[-4,2,-2,10,7,1,10],[-9,1,-2,-6,2,4,4],[-7,-8,-9,-9,-5,4,-5],[-7,-5,5,-6,6,5,2],[7,1,4,-5,10,-3,-4],[-10,-3,3,-3,5,9,-3],[-1,-6,-10,4,-6,6,-4],[-2,7,-9,-9,10,5,3],[-9,8,9,8,-9,-5,1],[1,-2,4,-7,2,9,9],[-7,6,7,6,6,-9,-6]]], dtype = "uint16")#candidate|458|(6, 11, 7)|const|uint16
bop_459 = relay.logical_xor(const_457.astype('uint16'), const_458.astype('uint16')) # shape=(6, 11, 7)
uop_463 = relay.cosh(bop_459.astype('float32')) # shape=(6, 11, 7)
func_430_call = mod.get_global_var('func_430')
func_433_call = mutated_mod.get_global_var('func_433')
var_471 = relay.var("var_471", dtype = "int32", shape = (330, 2))#candidate|471|(330, 2)|var|int32
call_470 = func_430_call(relay.reshape(var_471.astype('int32'), [6, 11, 10]))
call_472 = func_430_call(relay.reshape(var_471.astype('int32'), [6, 11, 10]))
func_430_call = mod.get_global_var('func_430')
func_433_call = mutated_mod.get_global_var('func_433')
call_474 = func_430_call(relay.reshape(call_470.astype('int32'), [6, 11, 10]))
call_475 = func_430_call(relay.reshape(call_470.astype('int32'), [6, 11, 10]))
output = relay.Tuple([uop_463,call_470,var_471,call_474,])
output2 = relay.Tuple([uop_463,call_472,var_471,call_475,])
func_482 = relay.Function([var_471,], output)
mod['func_482'] = func_482
mod = relay.transform.InferType()(mod)
mutated_mod['func_482'] = func_482
mutated_mod = relay.transform.InferType()(mutated_mod)
var_483 = relay.var("var_483", dtype = "int32", shape = (330, 2))#candidate|483|(330, 2)|var|int32
func_482_call = mutated_mod.get_global_var('func_482')
call_484 = func_482_call(var_483)
output = call_484
func_485 = relay.Function([var_483], output)
mutated_mod['func_485'] = func_485
mutated_mod = relay.transform.InferType()(mutated_mod)
var_498 = relay.var("var_498", dtype = "float64", shape = (2, 9, 1))#candidate|498|(2, 9, 1)|var|float64
var_499 = relay.var("var_499", dtype = "float64", shape = (2, 9, 11))#candidate|499|(2, 9, 11)|var|float64
bop_500 = relay.mod(var_498.astype('float64'), var_499.astype('float64')) # shape=(2, 9, 11)
output = bop_500
output2 = bop_500
func_514 = relay.Function([var_498,var_499,], output)
mod['func_514'] = func_514
mod = relay.transform.InferType()(mod)
mutated_mod['func_514'] = func_514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_514_call = mutated_mod.get_global_var('func_514')
var_516 = relay.var("var_516", dtype = "float64", shape = (2, 9, 1))#candidate|516|(2, 9, 1)|var|float64
var_517 = relay.var("var_517", dtype = "float64", shape = (2, 9, 11))#candidate|517|(2, 9, 11)|var|float64
call_515 = func_514_call(var_516,var_517,)
output = call_515
func_518 = relay.Function([var_516,var_517,], output)
mutated_mod['func_518'] = func_518
mutated_mod = relay.transform.InferType()(mutated_mod)
var_544 = relay.var("var_544", dtype = "int32", shape = ())#candidate|544|()|var|int32
var_545 = relay.var("var_545", dtype = "int32", shape = (6, 4, 16))#candidate|545|(6, 4, 16)|var|int32
bop_546 = relay.bitwise_and(var_544.astype('int32'), var_545.astype('int32')) # shape=(6, 4, 16)
bop_555 = relay.divide(var_544.astype('float32'), bop_546.astype('float32')) # shape=(6, 4, 16)
output = bop_555
output2 = bop_555
func_588 = relay.Function([var_544,var_545,], output)
mod['func_588'] = func_588
mod = relay.transform.InferType()(mod)
var_589 = relay.var("var_589", dtype = "int32", shape = ())#candidate|589|()|var|int32
var_590 = relay.var("var_590", dtype = "int32", shape = (6, 4, 16))#candidate|590|(6, 4, 16)|var|int32
output = func_588(var_589,var_590,)
func_591 = relay.Function([var_589,var_590,], output)
mutated_mod['func_591'] = func_591
mutated_mod = relay.transform.InferType()(mutated_mod)
const_982 = relay.const([[[-5,-6,2,-10,-5],[-7,3,-5,-8,6],[10,7,-1,6,8],[-7,-2,6,9,6],[-2,-2,-4,3,1],[-10,-1,2,-5,7],[-6,8,9,3,-1],[1,-4,8,9,2],[5,2,-8,5,-3]],[[-7,-9,8,-9,4],[-9,-1,8,-1,-1],[9,-4,1,7,5],[8,-10,5,5,-8],[3,-3,-10,-4,-10],[-5,-2,-1,-1,8],[-2,-8,-5,2,-8],[-8,8,5,-4,3],[7,-2,9,3,6]],[[5,-10,-10,-7,-5],[-1,-6,-4,-10,-2],[-2,-1,10,-2,9],[4,3,9,1,4],[-3,-8,-7,-1,-5],[-10,-4,3,-2,-6],[-2,6,-4,-1,-3],[10,-1,8,-5,6],[4,6,10,1,-4]],[[-2,-7,4,-3,6],[-9,5,-9,1,-2],[5,-5,-5,10,-5],[-4,5,-5,-3,-3],[6,7,3,2,1],[2,-3,7,-2,-5],[5,3,-9,8,-7],[-10,4,-4,-5,-2],[-4,2,-1,-5,-8]]], dtype = "int64")#candidate|982|(4, 9, 5)|const|int64
var_983 = relay.var("var_983", dtype = "int64", shape = (4, 9, 5))#candidate|983|(4, 9, 5)|var|int64
bop_984 = relay.bitwise_and(const_982.astype('int64'), relay.reshape(var_983.astype('int64'), relay.shape_of(const_982))) # shape=(4, 9, 5)
uop_994 = relay.acosh(const_982.astype('float32')) # shape=(4, 9, 5)
output = relay.Tuple([bop_984,uop_994,])
output2 = relay.Tuple([bop_984,uop_994,])
func_996 = relay.Function([var_983,], output)
mod['func_996'] = func_996
mod = relay.transform.InferType()(mod)
var_997 = relay.var("var_997", dtype = "int64", shape = (4, 9, 5))#candidate|997|(4, 9, 5)|var|int64
output = func_996(var_997)
func_998 = relay.Function([var_997], output)
mutated_mod['func_998'] = func_998
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1071 = relay.const([[[2.491892,9.189273,4.026036,-4.038213],[-4.559080,-1.586641,5.148326,8.303233],[9.932245,-0.394059,-2.902393,-5.571954],[2.560137,4.246669,0.788926,-8.581120],[3.106044,-2.720619,6.306939,8.668053],[5.632398,-2.926622,-8.249067,-0.547512],[-5.455596,9.053988,8.812643,-5.445214],[0.737972,-3.004511,-4.320573,5.035979],[-7.184108,3.940254,9.038844,-9.688879],[-4.404756,9.028543,-8.577434,-7.144742],[6.790721,-2.831733,3.900643,9.748453],[-4.371558,-0.672143,-2.969241,-3.507396]],[[5.196794,-7.998175,-0.051224,9.208477],[9.531431,-2.319469,-4.731464,-9.496269],[-0.550751,-0.416527,9.505673,-8.047225],[2.486639,9.267874,6.464088,2.060502],[1.455747,1.837100,-2.254426,-1.300144],[9.429429,0.863900,4.278193,3.007669],[-8.492806,6.580045,9.134979,-4.706454],[-2.830573,-4.935603,7.367238,-4.540644],[5.699072,6.432217,-1.400194,4.537907],[-6.937053,4.560232,0.655395,0.947526],[-2.153832,6.070163,4.910287,8.847948],[6.461275,8.554331,6.137941,8.250345]],[[2.471185,-7.509107,-1.145917,8.118622],[-7.243177,-0.400632,-7.191150,-6.428476],[3.815707,-8.701282,4.205213,-7.587771],[-6.411948,8.124207,-0.094586,-2.569439],[0.609164,0.708624,9.711171,-4.157675],[-6.880581,9.083582,6.205263,7.467796],[5.599473,3.726472,2.768120,-5.418959],[3.386296,1.583357,-2.884310,3.753126],[-2.547979,-8.725141,0.581096,-5.043026],[1.802656,-7.634390,4.490635,9.916346],[-2.485164,4.719143,0.880326,1.427779],[2.063080,-1.675978,-4.470838,-7.180121]],[[-8.098213,-1.782456,1.640001,6.075529],[-8.246630,8.070530,-0.316330,4.013134],[4.484098,-1.528306,-7.068767,8.404854],[7.165269,2.285239,0.724579,-8.102606],[-7.453454,-0.902334,7.350314,5.293204],[9.221894,0.515835,2.249647,-1.919307],[2.804832,3.334780,-4.680115,-5.412350],[-4.275937,-6.175581,7.288626,-5.195500],[2.861772,2.640865,-3.221010,9.526024],[-8.763073,0.415161,7.936231,-7.882405],[3.268577,-9.867848,7.822913,6.468485],[-9.008326,4.522788,-4.471575,-6.901077]]], dtype = "float32")#candidate|1071|(4, 12, 4)|const|float32
uop_1072 = relay.asinh(const_1071.astype('float32')) # shape=(4, 12, 4)
uop_1080 = relay.sinh(uop_1072.astype('float32')) # shape=(4, 12, 4)
func_588_call = mod.get_global_var('func_588')
func_591_call = mutated_mod.get_global_var('func_591')
const_1083 = relay.const(6, dtype = "int32")#candidate|1083|()|const|int32
var_1084 = relay.var("var_1084", dtype = "int32", shape = (96, 4))#candidate|1084|(96, 4)|var|int32
call_1082 = func_588_call(relay.reshape(const_1083.astype('int32'), []), relay.reshape(var_1084.astype('int32'), [6, 4, 16]), )
call_1085 = func_588_call(relay.reshape(const_1083.astype('int32'), []), relay.reshape(var_1084.astype('int32'), [6, 4, 16]), )
output = relay.Tuple([uop_1080,call_1082,const_1083,var_1084,])
output2 = relay.Tuple([uop_1080,call_1085,const_1083,var_1084,])
func_1103 = relay.Function([var_1084,], output)
mod['func_1103'] = func_1103
mod = relay.transform.InferType()(mod)
var_1104 = relay.var("var_1104", dtype = "int32", shape = (96, 4))#candidate|1104|(96, 4)|var|int32
output = func_1103(var_1104)
func_1105 = relay.Function([var_1104], output)
mutated_mod['func_1105'] = func_1105
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1182 = relay.var("var_1182", dtype = "float32", shape = (1, 3, 8))#candidate|1182|(1, 3, 8)|var|float32
uop_1183 = relay.log10(var_1182.astype('float32')) # shape=(1, 3, 8)
output = relay.Tuple([uop_1183,])
output2 = relay.Tuple([uop_1183,])
func_1192 = relay.Function([var_1182,], output)
mod['func_1192'] = func_1192
mod = relay.transform.InferType()(mod)
var_1193 = relay.var("var_1193", dtype = "float32", shape = (1, 3, 8))#candidate|1193|(1, 3, 8)|var|float32
output = func_1192(var_1193)
func_1194 = relay.Function([var_1193], output)
mutated_mod['func_1194'] = func_1194
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1307 = relay.var("var_1307", dtype = "float64", shape = (3, 10, 7))#candidate|1307|(3, 10, 7)|var|float64
var_1308 = relay.var("var_1308", dtype = "float64", shape = (3, 10, 7))#candidate|1308|(3, 10, 7)|var|float64
bop_1309 = relay.mod(var_1307.astype('float64'), relay.reshape(var_1308.astype('float64'), relay.shape_of(var_1307))) # shape=(3, 10, 7)
var_1312 = relay.var("var_1312", dtype = "float64", shape = (3, 10, 7))#candidate|1312|(3, 10, 7)|var|float64
bop_1313 = relay.logical_and(var_1308.astype('bool'), relay.reshape(var_1312.astype('bool'), relay.shape_of(var_1308))) # shape=(3, 10, 7)
func_588_call = mod.get_global_var('func_588')
func_591_call = mutated_mod.get_global_var('func_591')
const_1324 = relay.const(4, dtype = "int32")#candidate|1324|()|const|int32
var_1325 = relay.var("var_1325", dtype = "int32", shape = (384,))#candidate|1325|(384,)|var|int32
call_1323 = func_588_call(relay.reshape(const_1324.astype('int32'), []), relay.reshape(var_1325.astype('int32'), [6, 4, 16]), )
call_1326 = func_588_call(relay.reshape(const_1324.astype('int32'), []), relay.reshape(var_1325.astype('int32'), [6, 4, 16]), )
func_430_call = mod.get_global_var('func_430')
func_433_call = mutated_mod.get_global_var('func_433')
var_1340 = relay.var("var_1340", dtype = "int32", shape = (660,))#candidate|1340|(660,)|var|int32
call_1339 = func_430_call(relay.reshape(var_1340.astype('int32'), [6, 11, 10]))
call_1341 = func_430_call(relay.reshape(var_1340.astype('int32'), [6, 11, 10]))
output = relay.Tuple([bop_1309,bop_1313,call_1323,const_1324,var_1325,call_1339,var_1340,])
output2 = relay.Tuple([bop_1309,bop_1313,call_1326,const_1324,var_1325,call_1341,var_1340,])
func_1360 = relay.Function([var_1307,var_1308,var_1312,var_1325,var_1340,], output)
mod['func_1360'] = func_1360
mod = relay.transform.InferType()(mod)
var_1361 = relay.var("var_1361", dtype = "float64", shape = (3, 10, 7))#candidate|1361|(3, 10, 7)|var|float64
var_1362 = relay.var("var_1362", dtype = "float64", shape = (3, 10, 7))#candidate|1362|(3, 10, 7)|var|float64
var_1363 = relay.var("var_1363", dtype = "float64", shape = (3, 10, 7))#candidate|1363|(3, 10, 7)|var|float64
var_1364 = relay.var("var_1364", dtype = "int32", shape = (384,))#candidate|1364|(384,)|var|int32
var_1365 = relay.var("var_1365", dtype = "int32", shape = (660,))#candidate|1365|(660,)|var|int32
output = func_1360(var_1361,var_1362,var_1363,var_1364,var_1365,)
func_1366 = relay.Function([var_1361,var_1362,var_1363,var_1364,var_1365,], output)
mutated_mod['func_1366'] = func_1366
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2070 = relay.const([[[-5,5,4,-2,-8,-7,2],[-7,2,8,10,6,-2,2],[-5,3,10,1,-7,10,-1],[8,-1,-6,5,-4,5,8],[3,7,-6,1,10,9,4],[5,-6,-9,-8,-1,10,-7],[-7,4,8,9,2,10,-3],[1,8,-3,7,-3,-8,9],[10,-4,-4,7,10,3,-10],[-5,-4,10,-10,-8,6,3],[6,3,9,-10,-8,2,5],[-9,10,7,8,-8,10,-7],[-7,-4,4,6,-7,-6,-5],[2,-8,4,4,-4,9,-1],[5,-9,10,-5,3,8,10]],[[-6,4,5,-8,10,2,-6],[-5,2,-7,-4,4,-1,-1],[-8,3,-5,1,-9,-1,-3],[-4,-4,6,-10,-6,-9,-4],[-9,9,3,3,-9,8,-5],[6,1,-7,-8,10,-9,10],[1,8,8,-9,-9,9,-9],[5,-5,4,-10,1,-5,6],[1,1,2,4,-9,1,7],[8,-8,-10,6,10,-4,-8],[4,-4,-1,-7,-6,-5,5],[-7,-7,-10,9,-7,-5,-5],[-8,1,-6,-8,-2,2,-7],[-5,2,-7,-8,-3,9,4],[-8,5,1,-9,9,-5,-4]],[[10,-3,-6,-8,3,1,3],[-5,4,-5,1,-4,-2,-8],[5,4,-1,-2,-2,-9,-6],[-3,2,5,3,-6,-3,-3],[-3,-4,10,4,4,10,8],[-5,2,3,-5,-2,6,1],[8,8,6,10,9,1,3],[3,3,-4,-3,-10,5,7],[2,5,-3,-1,-5,6,8],[9,-9,1,-10,8,3,-2],[-2,2,-8,-3,-9,3,-7],[10,-6,-7,1,8,2,-7],[-6,5,-9,-3,3,-9,10],[6,10,-3,5,5,7,-9],[1,-5,-4,-6,-7,-1,3]],[[-3,-1,2,-7,2,-6,-1],[-10,3,-6,-8,-9,5,-3],[6,-6,3,-8,-3,-2,8],[-3,3,9,7,-6,-8,-1],[-3,-1,10,-8,9,8,2],[10,-9,6,6,-10,3,-10],[-5,7,-3,6,8,-8,1],[-2,7,-4,-4,-10,8,-5],[-8,-1,4,-10,8,4,-2],[-4,8,8,9,10,2,6],[-2,10,-6,4,9,-10,-9],[-5,-5,-6,7,6,7,9],[-8,9,6,1,-10,-3,-8],[-8,-5,10,1,3,-1,4],[-5,-7,-10,4,-8,7,1]],[[-9,-2,5,-1,9,2,-2],[9,3,10,10,8,5,2],[-4,-3,9,1,5,3,-5],[-4,-10,-2,-10,4,-4,5],[-8,1,-7,4,-10,-3,6],[6,1,-8,-4,3,-7,-3],[9,8,4,-7,4,8,6],[-6,5,6,4,6,-6,-4],[-6,-2,5,-4,9,-10,3],[-4,9,-3,-4,10,-3,-7],[-5,-2,10,-8,3,-3,-3],[5,3,9,1,-6,-3,6],[1,6,6,9,-1,-10,8],[7,8,-1,3,-3,-2,-3],[5,2,3,-2,-6,-3,-7]],[[-3,6,-8,4,-7,9,-3],[-1,5,-4,-10,5,-5,4],[-9,-9,-7,2,1,-5,3],[8,-5,2,5,-9,4,8],[6,-7,2,-7,3,4,-5],[2,-3,6,1,9,8,2],[3,-5,-3,-4,-10,-4,10],[9,-7,7,-5,-9,3,-4],[-6,-6,10,8,4,6,4],[-9,8,-2,-10,4,-2,-4],[10,9,-6,-7,-6,8,8],[4,-6,6,2,8,7,-9],[-4,5,1,-4,-8,-5,-7],[-4,9,-4,-2,10,8,-6],[-1,-5,8,-10,1,9,-6]],[[-4,7,7,6,4,4,2],[3,9,4,10,-2,-2,6],[-4,6,-5,-6,1,-4,9],[-9,1,8,-6,4,4,-6],[-10,-8,5,4,6,-2,3],[-10,-5,-3,10,8,4,10],[7,6,10,-6,9,5,-2],[-2,7,5,-2,-10,-2,8],[10,5,8,9,-7,-1,4],[2,4,-9,10,3,-6,6],[-3,3,-4,5,10,-10,-8],[1,-8,8,-9,-3,4,-2],[-10,6,3,-9,8,1,-7],[-4,1,-6,10,-2,-2,-9],[2,-7,-8,-8,-4,9,10]],[[-1,8,-1,-3,-9,3,-4],[-6,-3,4,3,-3,-4,9],[-3,1,7,1,2,4,-7],[-3,-4,-5,7,5,3,2],[-8,-9,9,3,3,3,8],[-7,6,7,8,5,1,-7],[1,-2,-10,8,-2,7,-6],[1,10,2,-7,-6,-1,2],[2,-8,9,-1,-10,-2,3],[8,-10,5,8,-5,-6,-1],[1,-1,-5,7,-9,-6,-1],[-1,-6,2,-9,-5,4,-1],[-1,9,8,-5,1,8,4],[10,10,8,10,3,8,-6],[8,-5,2,10,-6,-4,9]],[[-8,5,8,9,3,-7,3],[-4,10,-6,2,-8,9,-9],[2,2,3,-10,-5,7,10],[-4,-9,-2,2,-3,8,-7],[5,10,4,-7,-1,7,6],[4,8,-1,-6,-8,-4,3],[2,1,-5,-7,4,5,-1],[-1,-6,6,-1,-5,-3,5],[3,1,7,-3,2,-3,-3],[4,-1,-4,-8,-3,9,-7],[-10,-10,-10,8,-3,-10,-2],[3,-1,1,2,1,6,-10],[-3,-7,-9,7,8,-7,-8],[-7,-1,-6,-9,-4,-2,2],[10,-5,1,7,-3,-9,10]],[[3,4,6,2,8,9,-2],[-1,-3,6,-6,-3,7,7],[-6,-4,7,-9,-5,-7,2],[-9,8,-7,-8,2,10,-7],[1,4,5,6,-8,-4,-6],[8,-6,-10,-4,9,2,8],[-7,10,2,-3,4,8,-6],[6,3,10,10,6,-9,-8],[6,-4,4,1,9,-3,-5],[6,-1,-3,-4,-4,3,10],[6,-4,5,-7,5,3,2],[-7,-4,8,5,2,2,-6],[7,-10,2,-7,-3,6,-2],[2,-4,1,-3,-5,-8,-10],[2,-9,9,-4,-3,-10,9]],[[4,4,7,8,5,-7,-2],[9,7,-7,2,4,-1,-1],[3,6,1,-7,5,6,-9],[-4,10,-6,-5,-3,-10,-7],[6,-9,-7,-10,4,-7,-3],[1,-6,6,8,-2,4,2],[-6,5,6,-5,-1,-1,2],[-4,-1,-8,9,2,7,-10],[1,5,2,3,3,9,3],[-9,-8,-10,7,3,-4,-5],[10,2,-9,1,6,-9,2],[-5,10,9,-6,-4,-7,-8],[3,-3,-9,6,-3,-9,-1],[-10,-8,9,8,3,-5,6],[7,6,-7,5,-6,-6,-6]],[[-10,5,3,6,1,-7,9],[-5,-5,-8,2,-2,3,-8],[6,6,-2,-7,-6,6,-8],[-6,-7,9,3,5,-5,4],[2,7,-5,-6,-5,3,-8],[1,-2,-1,7,-10,-9,8],[1,-10,-4,-3,-9,6,-3],[-7,8,5,4,10,7,-2],[7,10,1,-1,6,-4,6],[-3,10,10,-6,9,-2,-1],[-1,7,2,7,7,6,5],[-2,-1,8,3,-9,-4,10],[1,8,4,-1,-3,8,8],[7,6,-2,4,-8,9,-7],[8,-2,-1,-1,6,-1,-2]],[[-10,7,-4,7,-9,8,-8],[-7,-2,4,-5,4,10,-2],[10,-2,-4,8,-1,6,3],[-9,10,8,4,8,7,-7],[-4,9,-3,-6,9,5,-8],[2,-4,4,9,-8,4,-2],[9,-7,8,-9,-9,8,-9],[-10,3,-10,-2,-2,4,4],[7,-8,-7,1,3,6,7],[1,-6,-2,-10,-7,5,-5],[-9,-9,-7,5,4,-1,8],[-10,-9,10,2,4,4,-6],[1,2,-2,-10,-7,-5,3],[-9,-1,-7,-2,6,10,-9],[3,7,-7,-8,9,-10,-3]],[[9,-10,6,-9,-6,9,-6],[3,-5,-1,4,9,-8,10],[-7,4,-8,4,8,4,-6],[-5,3,-8,-8,-1,8,4],[10,-6,8,5,-4,9,-4],[-5,7,-5,-2,9,1,-2],[-1,6,2,-10,-10,6,4],[6,-8,10,-5,-6,-7,4],[-6,-8,-3,-10,-6,5,5],[-10,5,-9,-8,-6,4,-9],[8,9,-10,-1,-1,7,-3],[-3,-4,-1,2,-9,9,-5],[-9,3,8,1,9,2,-7],[9,-3,-10,7,5,-1,10],[-2,-4,9,-10,7,6,7]],[[8,-9,4,9,-1,5,-8],[2,8,-2,7,-8,-10,-10],[3,-4,-1,-9,-7,1,7],[-3,2,-2,9,3,-7,5],[-7,4,2,2,1,8,-10],[-5,5,-1,-3,-7,6,10],[-2,3,-8,9,4,-1,5],[-4,-8,-1,7,10,-2,2],[-9,-3,5,-10,4,-3,3],[3,5,2,-6,-4,2,3],[-3,3,-9,-10,-6,-9,2],[-7,10,-2,9,8,-6,8],[-8,-3,8,-10,-6,-3,-5],[-1,6,1,-1,-1,-6,8],[3,1,9,-2,-1,5,-7]],[[8,-1,-8,-8,-1,1,-1],[-2,10,-7,9,-4,-6,-7],[10,9,7,-8,7,3,7],[1,-10,7,10,-10,9,-2],[-9,-5,-5,9,-6,-7,3],[2,-4,7,10,6,7,9],[-2,-2,1,3,4,8,-9],[3,-4,3,2,4,4,-9],[7,-7,-10,3,-6,7,-8],[-10,-9,10,-1,-3,-3,-2],[6,7,1,4,5,-3,2],[3,-5,9,-7,7,-2,-1],[-7,3,6,7,-4,-1,8],[1,3,2,-8,-4,-1,-5],[3,-9,8,-4,-2,2,-3]]], dtype = "int16")#candidate|2070|(16, 15, 7)|const|int16
var_2071 = relay.var("var_2071", dtype = "int16", shape = (16, 15, 7))#candidate|2071|(16, 15, 7)|var|int16
bop_2072 = relay.add(const_2070.astype('int16'), relay.reshape(var_2071.astype('int16'), relay.shape_of(const_2070))) # shape=(16, 15, 7)
var_2078 = relay.var("var_2078", dtype = "int16", shape = (16, 15, 7))#candidate|2078|(16, 15, 7)|var|int16
bop_2079 = relay.maximum(bop_2072.astype('int16'), relay.reshape(var_2078.astype('int16'), relay.shape_of(bop_2072))) # shape=(16, 15, 7)
uop_2085 = relay.rsqrt(bop_2079.astype('float32')) # shape=(16, 15, 7)
output = uop_2085
output2 = uop_2085
func_2102 = relay.Function([var_2071,var_2078,], output)
mod['func_2102'] = func_2102
mod = relay.transform.InferType()(mod)
var_2103 = relay.var("var_2103", dtype = "int16", shape = (16, 15, 7))#candidate|2103|(16, 15, 7)|var|int16
var_2104 = relay.var("var_2104", dtype = "int16", shape = (16, 15, 7))#candidate|2104|(16, 15, 7)|var|int16
output = func_2102(var_2103,var_2104,)
func_2105 = relay.Function([var_2103,var_2104,], output)
mutated_mod['func_2105'] = func_2105
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2192 = relay.var("var_2192", dtype = "uint32", shape = ())#candidate|2192|()|var|uint32
var_2193 = relay.var("var_2193", dtype = "uint32", shape = (6, 8, 9))#candidate|2193|(6, 8, 9)|var|uint32
bop_2194 = relay.not_equal(var_2192.astype('bool'), var_2193.astype('bool')) # shape=(6, 8, 9)
func_2102_call = mod.get_global_var('func_2102')
func_2105_call = mutated_mod.get_global_var('func_2105')
var_2203 = relay.var("var_2203", dtype = "int16", shape = (2, 840))#candidate|2203|(2, 840)|var|int16
call_2202 = func_2102_call(relay.reshape(var_2203.astype('int16'), [16, 15, 7]), relay.reshape(var_2203.astype('int16'), [16, 15, 7]), )
call_2204 = func_2102_call(relay.reshape(var_2203.astype('int16'), [16, 15, 7]), relay.reshape(var_2203.astype('int16'), [16, 15, 7]), )
var_2214 = relay.var("var_2214", dtype = "uint32", shape = (6, 8, 9))#candidate|2214|(6, 8, 9)|var|uint32
bop_2215 = relay.logical_and(var_2193.astype('bool'), relay.reshape(var_2214.astype('bool'), relay.shape_of(var_2193))) # shape=(6, 8, 9)
uop_2223 = relay.log10(var_2214.astype('float32')) # shape=(6, 8, 9)
func_1360_call = mod.get_global_var('func_1360')
func_1366_call = mutated_mod.get_global_var('func_1366')
var_2227 = relay.var("var_2227", dtype = "float64", shape = (210,))#candidate|2227|(210,)|var|float64
const_2228 = relay.const([1,1,-8,-1,-8,4,-2,-9,-5,2,-10,-6,9,-5,-4,-2,-2,-6,-5,-5,5,10,-10,8,5,9,-8,8,5,-2,2,1,6,-6,4,1,-3,-5,-10,-8,6,4,-2,-9,-8,3,-4,3,2,10,-3,5,4,8,-6,2,-4,4,-9,-3,4,6,-10,10,10,-10,-3,-10,-9,-4,5,-5,-2,-4,-9,-7,-3,-3,-4,9,-2,-9,-5,3,-7,7,3,-10,-8,-6,-3,2,-8,1,7,-7,8,-6,-5,7,8,-6,5,-5,-4,1,-6,3,7,3,3,-5,-6,-6,-1,-6,6,-1,-10,5,9,-1,-1,6,-8,6,-1,-4,1,1,-2,3,9,-10,-4,10,3,8,-6,5,-5,7,9,4,-3,6,-2,-7,4,-7,-4,-2,10,2,2,2,-8,5,2,1,-6,3,5,6,-9,8,2,10,-9,8,2,1,8,-1,-7,8,-9,-1,10,4,10,3,-3,6,7,-5,5,-1,4,-5,-4,6,3,8,5,-3,7,9,-10,3,-2,-6,-4,1,-1,-9,-9,-8,2,-6,-7,2,-6,3,-7,-3,5,-5,6,-7,2,2,2,-4,6,-9,-8,7,3,1,-8,-10,-4,2,-3,-9,-6,6,10,2,9,-9,2,2,9,9,8,10,6,-3,2,4,2,-8,2,-6,-9,8,2,1,5,-9,-9,6,3,-4,1,5,-10,6,2,2,9,-5,2,-2,-5,-2,2,-10,9,-1,2,4,2,-3,-1,6,-5,-1,-8,-5,-6,7,-7,4,-1,-6,5,-6,-1,-9,-5,4,-5,-8,10,6,-10,-5,-4,-3,-5,9,-1,7,5,6,-3,4,5,-3,-7,2,-3,-4,-9,-1,8,-6,-6,-2,-1,5,-9,1,10,1,-2,5,-4,-4,10,7,7,8,6,-6,-2,-10,9,5,5,9,2,5,-4,7,4,1,-7,7,-3,-2,-6,-6,-6,-6,-8,10,-8,-6,-6,4,6,3,6,-9,-3,-4,3,-5,10,10], dtype = "int32")#candidate|2228|(384,)|const|int32
var_2229 = relay.var("var_2229", dtype = "int32", shape = (660,))#candidate|2229|(660,)|var|int32
call_2226 = relay.TupleGetItem(func_1360_call(relay.reshape(var_2227.astype('float64'), [3, 10, 7]), relay.reshape(var_2227.astype('float64'), [3, 10, 7]), relay.reshape(var_2227.astype('float64'), [3, 10, 7]), relay.reshape(const_2228.astype('int32'), [384,]), relay.reshape(var_2229.astype('int32'), [660,]), ), 0)
call_2230 = relay.TupleGetItem(func_1366_call(relay.reshape(var_2227.astype('float64'), [3, 10, 7]), relay.reshape(var_2227.astype('float64'), [3, 10, 7]), relay.reshape(var_2227.astype('float64'), [3, 10, 7]), relay.reshape(const_2228.astype('int32'), [384,]), relay.reshape(var_2229.astype('int32'), [660,]), ), 0)
output = relay.Tuple([bop_2194,call_2202,var_2203,bop_2215,uop_2223,call_2226,var_2227,const_2228,var_2229,])
output2 = relay.Tuple([bop_2194,call_2204,var_2203,bop_2215,uop_2223,call_2230,var_2227,const_2228,var_2229,])
func_2238 = relay.Function([var_2192,var_2193,var_2203,var_2214,var_2227,var_2229,], output)
mod['func_2238'] = func_2238
mod = relay.transform.InferType()(mod)
var_2239 = relay.var("var_2239", dtype = "uint32", shape = ())#candidate|2239|()|var|uint32
var_2240 = relay.var("var_2240", dtype = "uint32", shape = (6, 8, 9))#candidate|2240|(6, 8, 9)|var|uint32
var_2241 = relay.var("var_2241", dtype = "int16", shape = (2, 840))#candidate|2241|(2, 840)|var|int16
var_2242 = relay.var("var_2242", dtype = "uint32", shape = (6, 8, 9))#candidate|2242|(6, 8, 9)|var|uint32
var_2243 = relay.var("var_2243", dtype = "float64", shape = (210,))#candidate|2243|(210,)|var|float64
var_2244 = relay.var("var_2244", dtype = "int32", shape = (660,))#candidate|2244|(660,)|var|int32
output = func_2238(var_2239,var_2240,var_2241,var_2242,var_2243,var_2244,)
func_2245 = relay.Function([var_2239,var_2240,var_2241,var_2242,var_2243,var_2244,], output)
mutated_mod['func_2245'] = func_2245
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2543 = relay.var("var_2543", dtype = "int64", shape = (3, 16, 1))#candidate|2543|(3, 16, 1)|var|int64
var_2544 = relay.var("var_2544", dtype = "int64", shape = (3, 16, 8))#candidate|2544|(3, 16, 8)|var|int64
bop_2545 = relay.logical_xor(var_2543.astype('int64'), var_2544.astype('int64')) # shape=(3, 16, 8)
func_2102_call = mod.get_global_var('func_2102')
func_2105_call = mutated_mod.get_global_var('func_2105')
const_2566 = relay.const([-3,3,7,-9,-2,-2,-8,-4,9,8,-5,-5,-4,-10,-3,8,-5,4,-7,-7,-9,-3,-4,-7,4,8,-4,2,8,-2,-8,-8,3,6,-6,-10,2,3,-2,-8,-8,4,1,-9,9,-1,4,-9,-9,9,-10,10,4,-9,-6,3,-5,-3,4,-7,-3,-1,6,-6,-6,2,-5,7,8,8,-5,7,9,-6,3,-7,2,5,-7,-6,-5,-9,3,-2,4,-4,-2,-8,-2,-3,10,1,-7,1,-7,-6,-3,5,-3,-8,8,5,-4,10,-7,-1,4,-8,-8,6,4,-10,-9,7,-5,-8,-7,-4,5,-7,6,9,9,2,8,5,-1,1,3,1,-10,-2,1,-10,-9,-1,4,-6,9,4,-7,9,7,8,-7,9,-8,-8,6,-7,4,1,-8,-3,-6,-4,8,-1,-5,-5,7,-4,5,-6,-10,6,-9,-4,-4,3,5,-3,3,6,-2,-2,4,-6,8,8,4,-3,-10,1,-3,-4,-6,-9,-10,6,-7,4,6,8,3,3,-1,2,1,-5,-10,3,5,-4,1,10,-2,-9,4,2,5,-5,-2,-8,-2,7,2,-9,-6,-6,7,-4,10,-5,1,2,-3,-2,5,7,-3,-1,-8,5,-7,10,-7,-1,8,-9,-5,4,-9,-4,10,-2,-8,9,-7,-10,5,6,-4,7,3,10,-9,8,3,-2,3,-6,-9,9,-1,-8,-8,-6,-3,4,-9,6,1,7,3,-6,5,7,1,2,4,-8,-6,9,-7,5,-7,5,-4,1,4,-6,-3,3,-9,-6,6,-9,8,2,-1,1,-8,8,-1,-1,-10,1,10,-9,-10,-5,-1,-7,-2,-2,5,-3,-2,-9,3,5,5,-9,2,5,3,8,-4,-2,-5,-1,10,7,8,4,-4,-5,6,7,1,2,3,9,7,6,-8,4,5,-9,-7,-4,-1,-1,4,5,-1,-1,-6,-2,4,5,-6,-9,10,4,2,-8,9,-9,9,-10,2,-3,-2,1,2,7,3,-9,-5,-10,-2,-9,10,-6,4,7,7,-4,4,6,-9,6,-8,-7,-9,-9,7,-4,6,4,-7,-3,3,-5,1,5,-6,-4,-5,9,-9,-4,4,3,-9,-9,-10,-1,2,-3,9,4,8,-2,-2,8,-9,8,-10,5,-10,6,-9,-6,-4,3,-7,-1,-9,-10,3,-2,10,-6,-3,-10,7,4,2,6,-8,-9,8,-10,2,7,5,6,1,6,6,8,3,-9,3,10,4,6,9,10,5,-7,-7,6,6,4,1,5,-6,-8,8,10,-9,-8,2,2,-5,8,1,-10,9,10,7,-1,-10,2,6,3,-10,-4,7,2,4,-4,7,3,-1,3,10,9,-4,9,-6,-5,-1,3,-6,2,6,-4,-1,6,-2,7,4,4,-10,-7,-3,-3,1,4,10,7,1,6,10,3,-10,6,8,-1,2,5,10,2,3,-1,4,-6,1,9,3,-5,-4,-8,-2,-3,8,-2,5,10,-3,-8,10,2,-5,3,2,-4,1,-1,2,9,-9,8,8,1,-10,-6,2,-2,-10,-8,2,-9,3,-8,-1,4,-10,5,2,-7,6,3,-5,6,9,-8,-5,6,4,-2,2,8,-10,-10,-10,3,4,3,-2,-5,-2,-1,-9,-4,2,-9,-1,6,1,-4,-5,-4,-4,8,-5,-6,-5,5,-6,8,-4,-10,-5,8,4,-6,8,8,8,-7,-1,1,2,2,2,5,9,3,-4,10,1,-7,-8,3,10,-9,3,-7,-6,2,-8,-6,-4,1,-9,6,-8,1,5,-4,-3,8,-4,10,5,-10,1,-2,-4,-3,-5,-5,1,3,-7,2,9,-6,6,-5,-2,-6,10,7,10,-6,-8,-9,6,-6,-8,-3,-10,-10,-6,7,-9,-8,8,2,7,4,9,-4,-7,8,-1,-2,9,-7,-8,-3,-7,5,-8,7,7,1,-7,2,7,9,2,-1,7,8,-4,4,3,9,8,-7,7,2,-2,10,-6,-9,2,9,-10,5,-9,-7,8,-2,-4,-3,6,7,-10,9,-7,4,10,1,4,8,-6,-4,1,-3,4,7,1,-9,-10,9,-7,-9,10,-1,-9,-6,3,1,5,-10,2,-10,-1,6,-7,1,9,5,3,2,6,-6,7,5,-3,-4,4,8,4,7,8,-5,9,4,7,-3,-5,2,-6,5,-3,4,4,-3,7,-8,-9,2,5,1,4,-5,-10,-1,5,8,7,-9,8,-7,-3,10,10,-1,1,-6,-3,6,-9,2,4,-6,-3,-2,-7,6,4,4,-9,8,7,7,-5,7,-9,-10,8,4,10,-2,2,9,-3,9,-9,4,-1,8,-1,1,-4,2,8,-5,9,7,5,-9,-10,2,7,5,-6,-3,-8,8,-7,5,-4,6,-8,-7,1,-3,6,8,3,1,-6,10,-1,7,-9,-3,-3,-8,-4,-5,-3,-5,6,-4,9,-10,-10,-1,7,8,8,-8,-2,3,-5,2,7,-9,-3,1,8,6,-10,-8,-5,-4,10,6,-10,10,5,3,9,4,7,-3,7,-3,-8,-5,-9,-6,10,-1,-2,8,-10,1,5,1,-1,8,-6,6,-4,-7,-7,-2,-6,9,-3,-5,-8,-4,4,-6,2,4,5,-1,8,-1,-10,5,-7,4,-1,-5,-7,-3,-6,5,-1,7,-8,6,-6,-2,2,-4,2,-1,9,4,-4,-9,6,-10,5,-2,8,9,-4,4,-8,7,8,-5,-1,-5,5,-7,9,7,-7,-7,6,-2,-8,-10,-5,-8,-4,-10,-1,-2,-10,-7,-8,-5,3,3,1,-4,2,-7,1,-7,-10,2,3,-10,-6,-6,-3,-1,-6,-8,10,5,-5,8,-10,3,-2,-3,-2,2,2,-2,8,1,-10,10,-2,3,-9,-5,3,-9,4,4,7,-2,3,-5,-9,-6,7,10,-2,7,1,-8,-10,3,-1,8,4,-10,-5,-9,-3,-3,2,-2,-6,4,2,6,-3,6,8,5,-5,1,1,-6,5,-7,-5,-3,-9,-10,1,3,-9,-9,4,-8,-8,-10,-9,5,6,-4,2,-1,4,-2,-1,10,-3,-6,-4,7,-5,1,3,-9,8,1,-9,-1,-6,-10,9,7,-1,-8,-9,-7,1,-8,3,-5,-1,3,9,-4,8,-3,6,-8,5,1,2,-8,-7,-9,-4,-1,1,6,9,-6,-4,3,-1,8,-10,9,9,7,4,6,2,-4,3,-2,7,-9,-7,2,7,3,1,9,9,-5,4,2,1,7,-5,-6,9,5,2,-3,9,6,9,-7,-1,-3,6,-1,3,-10,-8,-3,6,2,-7,-6,-2,6,8,-2,-8,4,-4,8,2,8,-6,7,-8,9,4,4,8,9,-3,-4,10,4,4,3,-4,8,-1,2,-1,-7,-8,3,10,3,5,-6,-9,8,6,1,-2,10,3,-5,4,-1,4,10,8,-9,3,7,-8,5,-8,-2,5,-6,-3,-3,2,3,10,9,-9,10,-6,1,-3,7,-3,6,10,-4,-4,4,-3,-1,10,-10,10,10,6,-9,-10,-4,5,10,-3,-2,3,2,-3,-8,5,-2,9,-1,3,-6,6,5,2,-7,-10,-2,5,9,-7,10,9,8,-4,-3,-1,-10,-10,6,-10,7,-4,-5,10,-6,2,-2,-8,7,1,8,10,7,-5,-2,-10,7,7,-2,5,-8,5,-8,-10,2,-6,3,10,-7,-5,-10,-9,8,8,-5,-9,9,-10,-7,-3,-4,-3,6,7,6,4,4,6,9,3,6,6,-7,4,1,-5,8,-9,1,10,7,-5,7,-4,-5,2,-8,1,-9,9,4,-2,-2,-1,-1,2,4,1,-1,10,2,9,4,-5,-7,-2,8,5,7,5,-6,-5,6,-4,1,-3,7,2,4,-4,-2,1,-2,-2,-2,-6,5,9,-9,8,-6,-4,-5,-6,-4,7,9,-5,-6,-10,5,-7,1,-2,8,2,-1,10,-3,-4,-1,4,-10,-10,8,-5,10,-3,-7,-1,5,10,10,-3,-10,-9,-7,-10,-1,-3,2,4,-7,3,4,-10,7,-6,-2,9,3,3,-10,8,5,4,7,-1,5,-10,-10,-7,-2,4,-1,8,-1,-5,-5,-6,-4,10,-8,-10,5,-1,2,-1,-10,-10,10,-6,-8,5,6,6,2,3,-6,-3,3,-7,-2,7,5,-3,-5,7,-2,9,-2,5,-8,5,9,5,2,7,2,7,1,-2,1,-10,-2,8,-3,-9,3,-4,-4,6,-3,-1,7,10,-10,-4,4,1,-4,-9,3,-7,1,-1,-2,-2,-8,-10,1,-2,-4,9,2,-3,2,-3,-9,-3,2,7,1,-9,-2,-3,-10,-3,1,2,3,-10,-9,-10,-1,-1,7,9,9,6,-8,4,3,-2,-1,-10,4,-9,-2,1,4,-8,-2,-8,8,10,-10,-4,2,-1,-2,9,-10,-9,9,-6,2,3,-3,-2,-4,7,-9], dtype = "int16")#candidate|2566|(1680,)|const|int16
call_2565 = func_2102_call(relay.reshape(const_2566.astype('int16'), [16, 15, 7]), relay.reshape(const_2566.astype('int16'), [16, 15, 7]), )
call_2567 = func_2102_call(relay.reshape(const_2566.astype('int16'), [16, 15, 7]), relay.reshape(const_2566.astype('int16'), [16, 15, 7]), )
func_514_call = mod.get_global_var('func_514')
func_518_call = mutated_mod.get_global_var('func_518')
const_2576 = relay.const([-7.878741,-1.663523,6.074706,9.141527,7.421586,3.521882,9.356526,9.583214,2.154807,1.573466,8.303645,4.897292,2.805456,-9.532192,3.677243,-1.411846,0.996898,9.937059], dtype = "float64")#candidate|2576|(18,)|const|float64
var_2577 = relay.var("var_2577", dtype = "float64", shape = (198,))#candidate|2577|(198,)|var|float64
call_2575 = func_514_call(relay.reshape(const_2576.astype('float64'), [2, 9, 1]), relay.reshape(var_2577.astype('float64'), [2, 9, 11]), )
call_2578 = func_514_call(relay.reshape(const_2576.astype('float64'), [2, 9, 1]), relay.reshape(var_2577.astype('float64'), [2, 9, 11]), )
uop_2581 = relay.atan(call_2575.astype('float64')) # shape=(2, 9, 11)
uop_2583 = relay.atan(call_2578.astype('float64')) # shape=(2, 9, 11)
func_588_call = mod.get_global_var('func_588')
func_591_call = mutated_mod.get_global_var('func_591')
var_2585 = relay.var("var_2585", dtype = "int32", shape = ())#candidate|2585|()|var|int32
call_2584 = func_588_call(relay.reshape(var_2585.astype('int32'), []), relay.reshape(var_2544.astype('int32'), [6, 4, 16]), )
call_2586 = func_588_call(relay.reshape(var_2585.astype('int32'), []), relay.reshape(var_2544.astype('int32'), [6, 4, 16]), )
uop_2588 = relay.sin(call_2565.astype('float64')) # shape=(16, 15, 7)
uop_2590 = relay.sin(call_2567.astype('float64')) # shape=(16, 15, 7)
func_996_call = mod.get_global_var('func_996')
func_998_call = mutated_mod.get_global_var('func_998')
const_2592 = relay.const([-9,7,8,4,10,9,-6,8,10,-8,-3,-2,-6,-8,2,-1,6,6,-7,-10,-10,4,5,3,-5,-4,-5,-3,5,-3,1,-6,3,10,2,10,8,9,5,-3,-4,-7,3,-1,-1,3,-10,10,-3,-7,2,-9,9,-6,-2,5,5,-7,3,-7,4,-8,-1,2,-1,-2,-6,5,-1,-2,-9,-10,-10,-3,7,-9,1,7,-10,-7,8,5,-2,-3,-3,-5,3,-9,2,-8,-3,10,-6,8,-6,8,6,-9,-6,-1,-7,-3,2,5,-5,1,-10,2,7,-4,6,-6,5,-1,10,-10,-8,9,-5,4,-5,-8,5,3,-1,-5,-10,1,8,8,6,5,3,6,6,7,-4,-8,-6,-2,-9,6,-8,7,-1,-2,-5,10,10,-5,5,-8,7,-9,7,10,6,5,2,-10,7,9,10,9,7,-8,3,3,-2,-1,-4,6,6,4,3,3,9,-1,3,-10], dtype = "int64")#candidate|2592|(180,)|const|int64
call_2591 = relay.TupleGetItem(func_996_call(relay.reshape(const_2592.astype('int64'), [4, 9, 5])), 1)
call_2593 = relay.TupleGetItem(func_998_call(relay.reshape(const_2592.astype('int64'), [4, 9, 5])), 1)
func_514_call = mod.get_global_var('func_514')
func_518_call = mutated_mod.get_global_var('func_518')
call_2604 = func_514_call(relay.reshape(const_2576.astype('float64'), [2, 9, 1]), relay.reshape(uop_2581.astype('float64'), [2, 9, 11]), )
call_2605 = func_514_call(relay.reshape(const_2576.astype('float64'), [2, 9, 1]), relay.reshape(uop_2581.astype('float64'), [2, 9, 11]), )
bop_2609 = relay.subtract(uop_2581.astype('int32'), relay.reshape(var_2577.astype('int32'), relay.shape_of(uop_2581))) # shape=(2, 9, 11)
bop_2612 = relay.subtract(uop_2583.astype('int32'), relay.reshape(var_2577.astype('int32'), relay.shape_of(uop_2583))) # shape=(2, 9, 11)
func_996_call = mod.get_global_var('func_996')
func_998_call = mutated_mod.get_global_var('func_998')
call_2613 = relay.TupleGetItem(func_996_call(relay.reshape(const_2592.astype('int64'), [4, 9, 5])), 1)
call_2614 = relay.TupleGetItem(func_998_call(relay.reshape(const_2592.astype('int64'), [4, 9, 5])), 1)
bop_2615 = relay.divide(call_2613.astype('float64'), relay.reshape(call_2591.astype('float64'), relay.shape_of(call_2613))) # shape=(4, 9, 5)
bop_2618 = relay.divide(call_2614.astype('float64'), relay.reshape(call_2593.astype('float64'), relay.shape_of(call_2614))) # shape=(4, 9, 5)
output = relay.Tuple([bop_2545,const_2566,const_2576,call_2584,var_2585,uop_2588,const_2592,call_2604,bop_2609,bop_2615,])
output2 = relay.Tuple([bop_2545,const_2566,const_2576,call_2586,var_2585,uop_2590,const_2592,call_2605,bop_2612,bop_2618,])
func_2625 = relay.Function([var_2543,var_2544,var_2577,var_2585,], output)
mod['func_2625'] = func_2625
mod = relay.transform.InferType()(mod)
var_2626 = relay.var("var_2626", dtype = "int64", shape = (3, 16, 1))#candidate|2626|(3, 16, 1)|var|int64
var_2627 = relay.var("var_2627", dtype = "int64", shape = (3, 16, 8))#candidate|2627|(3, 16, 8)|var|int64
var_2628 = relay.var("var_2628", dtype = "float64", shape = (198,))#candidate|2628|(198,)|var|float64
var_2629 = relay.var("var_2629", dtype = "int32", shape = ())#candidate|2629|()|var|int32
output = func_2625(var_2626,var_2627,var_2628,var_2629,)
func_2630 = relay.Function([var_2626,var_2627,var_2628,var_2629,], output)
mutated_mod['func_2630'] = func_2630
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2706 = relay.var("var_2706", dtype = "float64", shape = (14, 15, 13))#candidate|2706|(14, 15, 13)|var|float64
uop_2707 = relay.asinh(var_2706.astype('float64')) # shape=(14, 15, 13)
func_588_call = mod.get_global_var('func_588')
func_591_call = mutated_mod.get_global_var('func_591')
const_2713 = relay.const(-7, dtype = "int32")#candidate|2713|()|const|int32
var_2714 = relay.var("var_2714", dtype = "int32", shape = (384,))#candidate|2714|(384,)|var|int32
call_2712 = func_588_call(relay.reshape(const_2713.astype('int32'), []), relay.reshape(var_2714.astype('int32'), [6, 4, 16]), )
call_2715 = func_588_call(relay.reshape(const_2713.astype('int32'), []), relay.reshape(var_2714.astype('int32'), [6, 4, 16]), )
func_1103_call = mod.get_global_var('func_1103')
func_1105_call = mutated_mod.get_global_var('func_1105')
call_2722 = relay.TupleGetItem(func_1103_call(relay.reshape(var_2714.astype('int32'), [96, 4])), 3)
call_2723 = relay.TupleGetItem(func_1105_call(relay.reshape(var_2714.astype('int32'), [96, 4])), 3)
uop_2726 = relay.sin(uop_2707.astype('float64')) # shape=(14, 15, 13)
output = relay.Tuple([call_2712,const_2713,var_2714,call_2722,uop_2726,])
output2 = relay.Tuple([call_2715,const_2713,var_2714,call_2723,uop_2726,])
func_2737 = relay.Function([var_2706,var_2714,], output)
mod['func_2737'] = func_2737
mod = relay.transform.InferType()(mod)
mutated_mod['func_2737'] = func_2737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2737_call = mutated_mod.get_global_var('func_2737')
var_2739 = relay.var("var_2739", dtype = "float64", shape = (14, 15, 13))#candidate|2739|(14, 15, 13)|var|float64
var_2740 = relay.var("var_2740", dtype = "int32", shape = (384,))#candidate|2740|(384,)|var|int32
call_2738 = func_2737_call(var_2739,var_2740,)
output = call_2738
func_2741 = relay.Function([var_2739,var_2740,], output)
mutated_mod['func_2741'] = func_2741
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3030 = relay.var("var_3030", dtype = "float64", shape = (3, 10, 12))#candidate|3030|(3, 10, 12)|var|float64
uop_3031 = relay.rsqrt(var_3030.astype('float64')) # shape=(3, 10, 12)
func_2625_call = mod.get_global_var('func_2625')
func_2630_call = mutated_mod.get_global_var('func_2630')
var_3034 = relay.var("var_3034", dtype = "int64", shape = (48,))#candidate|3034|(48,)|var|int64
var_3035 = relay.var("var_3035", dtype = "int64", shape = (1, 384))#candidate|3035|(1, 384)|var|int64
const_3036 = relay.const([-3.193370,9.434869,8.980350,8.572343,0.911955,-1.706389,1.810959,-5.414394,9.922269,-5.109371,4.905871,-0.077553,-0.222180,-5.943819,-6.944306,-7.230328,-1.986217,3.310539,3.315966,-4.048406,3.842806,-5.354373,-2.616172,-1.503277,0.465504,1.715830,-3.756318,-1.126469,2.511235,-5.337088,9.524279,-9.654327,-1.342592,2.947994,-4.612793,-7.710072,-1.929902,7.181888,-1.915247,-2.765258,-4.012734,-6.181537,5.850392,-4.187370,3.327191,-5.796512,2.507770,9.744373,-8.735355,8.794903,-8.280608,-3.006363,0.901413,2.052077,-7.692625,2.908329,7.289847,6.336453,3.519095,4.134822,-8.993978,6.912498,0.227629,-0.727099,1.465614,-5.241587,5.410548,-0.191413,-1.351551,-2.180648,7.717779,-6.193043,1.309357,-0.515744,0.133994,-1.525858,3.286425,1.273061,-1.398079,4.533470,7.051069,5.068782,-0.303871,6.805095,8.955368,6.878885,-5.440549,-4.372162,6.016792,-3.139312,-3.463172,1.871815,-4.862551,-5.508874,-8.694485,-1.892164,-8.625163,-8.700660,4.835545,1.652070,-0.890745,3.583086,-9.105736,-5.469233,-9.490763,-4.699757,3.007692,5.548205,-4.954288,-3.787292,1.272806,4.251836,-3.003187,-9.885613,1.043032,1.213188,4.265794,-7.687832,-2.726714,6.731242,8.528667,9.913311,8.517518,-8.680243,5.896782,-1.476934,2.283975,-5.702756,-1.134547,0.262232,-6.711904,2.825126,-7.814907,-1.204406,-5.261424,6.475709,8.546744,8.713296,5.226283,6.870524,-8.252469,9.182530,0.245082,-1.522031,7.212948,4.627612,-9.374179,2.501095,1.673826,0.008350,2.771123,1.002993,3.850433,-0.125862,7.693515,4.646801,7.927348,8.352225,-8.656093,-7.423465,-5.616584,-3.365527,-9.991619,8.796788,7.494804,-6.890566,4.578887,3.753068,-3.097468,-2.846651,3.393860,2.309083,-6.156841,1.424682,-4.807582,-9.230614,-9.787648,7.150669,-2.054276,-9.835476,4.745129,0.852541,-7.752207,-9.156679,-0.794335,-1.865430,-9.322089,-7.752725,9.166905,-0.454002,-5.672424,-7.508575,4.235488,6.389689,-3.761099,5.046074,-3.274834,-3.959131], dtype = "float64")#candidate|3036|(198,)|const|float64
const_3037 = relay.const(5, dtype = "int32")#candidate|3037|()|const|int32
call_3033 = relay.TupleGetItem(func_2625_call(relay.reshape(var_3034.astype('int64'), [3, 16, 1]), relay.reshape(var_3035.astype('int64'), [3, 16, 8]), relay.reshape(const_3036.astype('float64'), [198,]), relay.reshape(const_3037.astype('int32'), []), ), 9)
call_3038 = relay.TupleGetItem(func_2630_call(relay.reshape(var_3034.astype('int64'), [3, 16, 1]), relay.reshape(var_3035.astype('int64'), [3, 16, 8]), relay.reshape(const_3036.astype('float64'), [198,]), relay.reshape(const_3037.astype('int32'), []), ), 9)
func_1103_call = mod.get_global_var('func_1103')
func_1105_call = mutated_mod.get_global_var('func_1105')
call_3040 = relay.TupleGetItem(func_1103_call(relay.reshape(var_3035.astype('int32'), [96, 4])), 2)
call_3041 = relay.TupleGetItem(func_1105_call(relay.reshape(var_3035.astype('int32'), [96, 4])), 2)
var_3045 = relay.var("var_3045", dtype = "float64", shape = (3, 10, 12))#candidate|3045|(3, 10, 12)|var|float64
bop_3046 = relay.left_shift(uop_3031.astype('uint16'), relay.reshape(var_3045.astype('uint16'), relay.shape_of(uop_3031))) # shape=(3, 10, 12)
func_2737_call = mod.get_global_var('func_2737')
func_2741_call = mutated_mod.get_global_var('func_2741')
var_3060 = relay.var("var_3060", dtype = "float64", shape = (2730,))#candidate|3060|(2730,)|var|float64
call_3059 = relay.TupleGetItem(func_2737_call(relay.reshape(var_3060.astype('float64'), [14, 15, 13]), relay.reshape(var_3035.astype('int32'), [384,]), ), 3)
call_3061 = relay.TupleGetItem(func_2741_call(relay.reshape(var_3060.astype('float64'), [14, 15, 13]), relay.reshape(var_3035.astype('int32'), [384,]), ), 3)
output = relay.Tuple([call_3033,var_3034,var_3035,const_3036,const_3037,call_3040,bop_3046,call_3059,var_3060,])
output2 = relay.Tuple([call_3038,var_3034,var_3035,const_3036,const_3037,call_3041,bop_3046,call_3061,var_3060,])
func_3084 = relay.Function([var_3030,var_3034,var_3035,var_3045,var_3060,], output)
mod['func_3084'] = func_3084
mod = relay.transform.InferType()(mod)
mutated_mod['func_3084'] = func_3084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3084_call = mutated_mod.get_global_var('func_3084')
var_3086 = relay.var("var_3086", dtype = "float64", shape = (3, 10, 12))#candidate|3086|(3, 10, 12)|var|float64
var_3087 = relay.var("var_3087", dtype = "int64", shape = (48,))#candidate|3087|(48,)|var|int64
var_3088 = relay.var("var_3088", dtype = "int64", shape = (1, 384))#candidate|3088|(1, 384)|var|int64
var_3089 = relay.var("var_3089", dtype = "float64", shape = (3, 10, 12))#candidate|3089|(3, 10, 12)|var|float64
var_3090 = relay.var("var_3090", dtype = "float64", shape = (2730,))#candidate|3090|(2730,)|var|float64
call_3085 = func_3084_call(var_3086,var_3087,var_3088,var_3089,var_3090,)
output = call_3085
func_3091 = relay.Function([var_3086,var_3087,var_3088,var_3089,var_3090,], output)
mutated_mod['func_3091'] = func_3091
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3130 = relay.const([[[1.247030,-3.323458,3.917536,-3.761634,5.040512,6.638164,1.821436],[-3.349842,-2.985862,-5.192546,-3.061804,-4.536895,-9.993581,-4.832271],[4.590453,-6.140854,1.868433,9.733309,9.721753,-3.716446,8.107393]],[[-1.484795,-6.058486,-7.482960,-5.760644,6.003625,-5.839886,8.979664],[0.716142,-8.073080,8.151316,-8.015336,6.776474,0.609792,6.966888],[3.847224,-6.986576,5.200792,4.233076,7.204326,7.960899,-5.270853]],[[-3.393184,-9.436381,7.575745,-2.175878,7.658484,4.232138,-5.122311],[-4.743269,-5.149407,5.692945,2.019840,-5.361747,-6.029817,-1.884646],[-1.138926,3.789196,9.389710,5.623665,-1.059142,2.338366,-9.757304]],[[-6.997469,-4.874530,-9.507688,8.007045,7.755500,-4.764031,3.078741],[1.427883,-5.882445,-4.998321,-8.431453,-9.294396,9.373741,7.554060],[-5.234742,1.199343,-5.438132,7.279505,1.273766,-1.299289,5.499498]],[[-1.033303,-5.084822,5.012154,1.907494,-3.348353,9.157772,5.868282],[-4.095367,2.758839,-1.770353,9.274035,-9.609116,4.957335,7.042284],[-8.197781,1.852666,2.342194,-2.570284,-0.029361,9.496717,8.680214]],[[7.257504,7.083553,0.362310,1.726846,1.936777,2.640583,0.291172],[5.791565,-2.497629,-9.249282,-8.921759,3.544693,-2.136137,7.881525],[9.927681,-6.296866,3.224858,-4.857370,-9.854449,0.722923,-3.916875]],[[-7.807709,6.977612,5.796813,3.764052,9.220247,7.307997,1.529918],[8.947175,1.414130,7.797589,2.455356,5.667298,-7.219556,1.918208],[-9.530618,-2.688604,-5.058948,-7.038815,7.163734,0.745328,-8.125923]],[[-7.593822,-6.093010,-0.281820,-5.431084,2.371808,-3.431987,7.831959],[-4.448942,-0.657371,-9.681726,1.884822,6.621802,-2.146239,-8.649163],[5.360500,8.524373,-9.076574,6.162485,1.622316,-2.356571,-8.624224]],[[-8.956398,5.391483,-9.396533,0.355490,-0.542860,0.534058,-1.187472],[1.742474,3.600767,9.497000,-9.421711,-4.900863,-2.713925,9.550989],[-8.703939,-3.873249,6.478110,-5.629308,3.137001,-2.765602,-9.656270]],[[4.354776,-1.146120,8.481497,-7.142581,-2.511883,-8.150053,-2.587608],[-8.952795,-8.843341,5.737819,3.775866,-2.654662,6.328207,2.620111],[-6.385045,1.662026,6.364923,-8.901666,-5.356409,5.783405,2.507442]]], dtype = "float32")#candidate|3130|(10, 3, 7)|const|float32
const_3131 = relay.const([[[3.834490,4.803315,9.307660,-7.640891,2.685931,-6.714862,-2.211367],[-1.075293,8.022909,7.585762,5.191459,-4.024761,-2.977788,-4.818126],[7.824749,6.575521,-0.519647,-0.314066,-0.376293,-6.544427,-3.688975]],[[-8.246002,7.619624,1.501476,-7.370154,4.308650,-6.798381,4.167964],[3.559124,-0.413418,-2.310928,5.809998,-6.454285,-3.062249,-9.510604],[-5.219419,6.595964,-2.863615,7.609729,3.961920,-5.592389,-8.671252]],[[-2.891847,6.978768,0.239265,9.309772,3.612245,-7.477312,-2.303403],[-1.532480,-1.072493,3.618510,3.822934,-2.903657,0.757052,4.225070],[-3.402334,-1.976861,6.843910,-4.119158,8.764051,-1.902801,3.483720]],[[-9.914459,4.690807,-6.676939,5.644784,5.867483,1.058721,-6.876402],[-1.829891,-2.463297,4.407495,5.262107,-7.526937,3.833249,9.300933],[6.513268,4.596092,2.647287,-0.565936,-6.308055,0.511507,6.066644]],[[1.742718,-7.062055,0.387006,-1.402772,1.952563,6.919999,4.324349],[-1.235563,8.788358,2.841990,7.172656,3.607166,5.067556,-0.777841],[-1.009962,3.360496,9.177601,0.961906,1.588465,9.996832,2.263960]],[[-1.272375,4.543207,-1.710717,-9.886862,7.764988,-1.029481,-0.766416],[-6.779984,-2.618237,-7.758832,-1.248532,9.112297,-2.628459,2.440202],[-6.348206,-9.772748,-0.027730,5.740993,-5.495591,-4.274841,1.627523]],[[0.911018,-2.170877,-6.956229,-2.351541,5.900704,-1.052719,-8.632792],[2.574174,-9.594794,-9.989438,-8.202545,8.369183,5.092365,-4.891218],[9.170243,-6.481919,6.737272,6.343226,-1.988665,-5.792786,-3.489073]],[[-4.907459,7.593537,5.211498,8.841040,-0.978171,-4.449663,7.562048],[-2.860329,2.750330,-9.263093,-2.491741,0.001528,2.051927,7.490145],[1.794241,4.960566,-0.357431,4.348141,-2.118320,2.297581,-5.921479]],[[-6.710932,-6.488308,0.108476,6.016828,1.110190,1.651980,7.978602],[-7.177396,-3.737343,-2.897177,-8.794303,-0.053813,-9.764903,-4.471540],[-2.719390,7.009001,0.255123,2.534443,-4.283490,-4.183149,-9.163409]],[[-2.250102,-7.472578,-6.193330,-1.640005,-5.675385,2.790427,-1.448616],[-4.742362,6.322546,8.156597,5.207731,-9.681769,-2.290073,8.230121],[2.883434,-7.585614,4.129283,-0.099262,-8.275257,7.518469,0.503551]]], dtype = "float32")#candidate|3131|(10, 3, 7)|const|float32
bop_3132 = relay.divide(const_3130.astype('float32'), relay.reshape(const_3131.astype('float32'), relay.shape_of(const_3130))) # shape=(10, 3, 7)
output = relay.Tuple([bop_3132,])
output2 = relay.Tuple([bop_3132,])
func_3142 = relay.Function([], output)
mod['func_3142'] = func_3142
mod = relay.transform.InferType()(mod)
mutated_mod['func_3142'] = func_3142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3142_call = mutated_mod.get_global_var('func_3142')
call_3143 = func_3142_call()
output = call_3143
func_3144 = relay.Function([], output)
mutated_mod['func_3144'] = func_3144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3142_call = mod.get_global_var('func_3142')
func_3144_call = mutated_mod.get_global_var('func_3144')
call_3161 = relay.TupleGetItem(func_3142_call(), 0)
call_3162 = relay.TupleGetItem(func_3144_call(), 0)
uop_3179 = relay.rsqrt(call_3161.astype('float32')) # shape=(10, 3, 7)
uop_3181 = relay.rsqrt(call_3162.astype('float32')) # shape=(10, 3, 7)
uop_3183 = relay.exp(uop_3179.astype('float32')) # shape=(10, 3, 7)
uop_3185 = relay.exp(uop_3181.astype('float32')) # shape=(10, 3, 7)
uop_3187 = relay.tan(uop_3183.astype('float32')) # shape=(10, 3, 7)
uop_3189 = relay.tan(uop_3185.astype('float32')) # shape=(10, 3, 7)
output = uop_3187
output2 = uop_3189
func_3192 = relay.Function([], output)
mod['func_3192'] = func_3192
mod = relay.transform.InferType()(mod)
output = func_3192()
func_3193 = relay.Function([], output)
mutated_mod['func_3193'] = func_3193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3142_call = mod.get_global_var('func_3142')
func_3144_call = mutated_mod.get_global_var('func_3144')
call_3239 = relay.TupleGetItem(func_3142_call(), 0)
call_3240 = relay.TupleGetItem(func_3144_call(), 0)
output = relay.Tuple([call_3239,])
output2 = relay.Tuple([call_3240,])
func_3244 = relay.Function([], output)
mod['func_3244'] = func_3244
mod = relay.transform.InferType()(mod)
mutated_mod['func_3244'] = func_3244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mutated_mod.get_global_var('func_3244')
call_3245 = func_3244_call()
output = call_3245
func_3246 = relay.Function([], output)
mutated_mod['func_3246'] = func_3246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3142_call = mod.get_global_var('func_3142')
func_3144_call = mutated_mod.get_global_var('func_3144')
call_3255 = relay.TupleGetItem(func_3142_call(), 0)
call_3256 = relay.TupleGetItem(func_3144_call(), 0)
func_2737_call = mod.get_global_var('func_2737')
func_2741_call = mutated_mod.get_global_var('func_2741')
const_3261 = relay.const([-8.725250,3.776919,7.559484,-9.697953,0.676911,-5.214364,9.608175,-5.342596,6.343784,-8.558640,2.115543,6.144645,2.972849,-6.015404,5.231757,-5.507268,1.133528,-6.542408,5.861387,0.099013,4.902776,-1.938552,6.555952,-3.257548,-9.737300,5.540807,2.803390,8.364281,9.579757,-1.377541,7.124138,6.437514,-8.338730,7.864522,-5.611029,-5.987684,-4.265992,0.112386,0.534418,-7.206707,-4.267550,9.859531,-6.325228,4.842820,-2.739781,-2.955723,-5.105409,-3.318357,-1.705713,-4.026618,2.278600,-4.979833,2.249708,3.560117,-8.632371,-7.611726,8.906810,-6.688941,5.420007,5.124695,2.658384,3.187754,6.062534,-6.487425,3.886324,6.281841,4.091109,-9.806680,3.156358,5.078323,1.173486,-0.463317,-4.903430,-0.536473,-0.031065,0.315543,7.395425,7.303051,1.904639,-4.819326,-4.312947,7.064351,-8.335940,-0.534348,7.612539,0.858362,-8.752875,0.812382,-2.224794,-7.141797,9.102315,8.480933,-5.478990,-8.390420,-0.393691,-3.965943,-3.930611,9.182295,6.198236,-0.350240,6.074269,8.273548,3.556375,-7.990494,-8.706821,0.789461,6.382214,-9.230061,1.510470,3.356420,-8.222561,2.621601,1.766896,8.076939,-7.775813,2.095624,0.123582,0.527659,5.639141,-4.064208,-9.638112,2.388625,-7.768828,7.433300,-0.474781,-8.472253,-1.853008,6.902641,-8.454822,-9.718729,-0.702103,-5.326168,-1.941923,8.862404,-0.019804,0.681985,2.526194,-8.012763,1.798667,3.280839,-3.880797,-4.431465,3.809483,-7.472433,-3.649194,5.144635,-9.317282,-3.879500,7.976994,-9.313039,3.882909,9.179643,-9.027024,0.878560,3.194033,-1.524151,-2.687061,4.407642,-7.275492,5.724821,-6.102107,-9.283651,-8.454378,-9.640810,-9.611959,9.908988,-6.801531,-3.455556,-8.375076,-8.245284,-0.697665,4.441271,9.591040,5.005906,-3.727007,-8.347993,7.869718,3.638831,8.305582,9.502351,-7.952419,-3.547009,8.424622,-3.108949,-1.455954,-8.707304,8.233040,9.243093,-3.410256,-0.471166,9.067403,8.185706,5.549379,-5.207532,-7.306440,-5.899523,3.116866,-0.733660,1.708810,-1.973814,2.023216,4.688897,1.824409,-6.146004,8.800973,-7.339770,7.570332,3.854406,6.609573,-8.252456,5.301784,-6.913781,7.900573,-4.946160,1.251804,-6.267382,5.552148,2.544820,-8.256996,-0.925396,9.039678,-6.971071,-8.410137,4.343955,8.640746,-4.549110,8.701576,1.141106,2.703615,2.851978,9.712896,0.517596,1.946476,0.630123,-1.834507,3.060213,-1.219676,6.823226,5.875307,-5.852393,-9.438858,-2.388335,-9.922814,-5.209823,4.269808,-4.748189,0.170283,2.717699,8.328365,-0.590286,-4.355012,9.037412,1.043519,1.485242,8.155260,1.758581,-8.436312,1.347645,-5.787175,-4.004263,-8.777469,-6.316577,3.807068,-5.349910,-3.781464,-5.537695,1.432077,5.095005,-2.916285,3.489402,6.084524,5.423452,-2.094007,-5.620617,-0.015317,-8.547624,1.486323,-0.828055,-2.359089,7.950800,9.633796,5.904981,0.357147,1.582120,-0.027887,-1.511743,-5.567825,3.119318,-4.272336,4.109341,7.787137,8.091825,-0.829022,7.504019,8.283436,1.235045,-3.924601,5.015025,5.696269,-3.004081,3.536303,7.297153,-5.978715,4.054881,-8.931528,-4.288215,-4.789752,3.888080,2.217058,-0.438266,5.781013,-2.584065,-4.625524,-1.430172,-2.144409,8.769479,5.722896,2.450664,-0.009796,-9.294709,3.454279,-8.530108,6.544109,-0.028135,-7.373061,6.483957,-3.342809,1.736301,0.440802,9.971310,-6.528502,8.133302,5.441480,-7.225822,3.485700,8.652628,1.026767,1.471541,7.813739,9.754631,-6.133377,8.455726,-2.763459,8.020894,-3.040877,-6.425692,-3.312974,-3.305911,-1.747512,3.129940,-5.969561,2.984197,-0.078454,-7.560475,-3.846227,8.250586,-4.989060,-3.057373,6.116662,-8.980685,-8.627672,5.930599,-0.231064,-2.133949,-2.106361,8.580701,-3.232717,-8.157428,7.310363,-8.665195,-5.004846,-7.888218,7.346570,-9.852718,-1.674300,-4.449357,9.032257,1.281329,-6.853312,-8.998641,6.270598,8.681920,-9.394460,-7.643446,-0.460497,-7.281481,-9.822853,1.390212,4.185957,7.416412,-8.381499,-3.356401,0.634018,1.102076,6.398251,-2.625424,8.896452,9.381291,0.709557,8.138350,-9.099017,-6.712990,-4.252274,-0.883972,8.029589,-4.108441,-3.821109,2.948556,-8.575444,4.271724,4.824213,9.114547,9.116528,-2.958107,-6.058973,-4.855060,2.815758,-4.127887,-6.387789,8.524608,-2.091136,4.138141,-7.165754,-8.941238,4.603924,6.990077,2.315290,-4.980276,9.529729,1.949803,-3.014916,-5.322421,-3.110264,-6.266150,-3.950824,5.595574,9.512549,5.922584,5.353382,-3.467750,5.666606,3.919119,-4.043550,3.710037,7.204999,-8.186949,-7.980293,4.665848,9.378997,3.647111,-8.139876,-0.330598,6.874981,9.886496,0.975389,5.366484,2.679270,4.093330,-0.715180,5.183850,8.363862,-3.286993,2.470222,-4.332672,6.516709,-7.917505,-2.889033,2.792479,-9.953778,7.408049,-1.184333,-4.951420,1.570200,-2.283714,-4.306761,1.884353,7.381266,4.907136,-7.446021,8.257289,0.333267,2.986255,-1.498149,6.390659,0.601885,-6.511665,1.224110,-6.378012,-6.185460,3.865445,-2.150441,-0.969870,-2.344552,-3.878444,8.602619,-0.749225,4.791225,5.823778,-6.124226,-8.734623,8.304152,6.009107,0.548996,4.586993,-2.113028,-1.412565,-5.342966,-1.241190,-1.109606,6.360240,-3.857122,-0.140650,6.048118,0.422211,-6.960484,1.946004,-6.067341,7.099602,-0.257050,3.628975,0.268341,-2.136996,-0.614129,-1.091944,0.332681,9.307193,7.295283,-3.926431,7.328821,-8.125363,2.215598,4.585389,-3.041489,-5.566580,5.206180,-8.196016,0.071611,-5.730126,5.715576,7.100602,-5.354120,8.309260,-3.533488,-9.951776,1.306626,-0.392670,3.698353,3.673686,-6.860238,-0.577910,7.815549,-8.753037,1.302845,2.394226,6.201537,-2.311467,8.074301,4.473636,7.883356,9.107943,-1.271458,3.905731,2.317696,6.259707,-6.570864,0.125209,-6.262620,9.287687,3.363892,4.582842,7.143015,-0.684370,2.968546,-9.728734,-7.127023,8.143792,1.432349,-3.982744,5.676537,-2.274521,7.025855,-4.711203,6.097718,-4.159253,-5.016395,0.844850,7.542518,-6.665729,4.021921,0.295753,-8.956265,-1.125618,7.846312,-2.743184,5.025013,5.221289,-2.960494,-8.269916,5.125068,-4.133869,-2.195525,1.302327,-8.286751,-9.392888,-2.194984,2.599970,3.622730,7.524258,-8.581527,5.827862,-1.533428,-7.955231,-5.757434,5.967009,9.301293,2.197246,8.480871,8.035275,-8.209409,-3.110951,4.692119,5.996643,1.994428,-9.224691,-8.328768,2.855839,-7.376581,-2.044907,8.141973,-5.378977,1.994398,-2.418207,-8.994114,-9.441829,-4.648619,6.032925,-2.093030,-0.904342,1.278456,2.109069,-2.418774,9.506640,4.419497,-4.088388,3.565144,4.779693,-3.382983,1.421250,-4.832207,-5.947256,-0.548957,-4.394375,-0.921688,6.881995,0.368892,-4.421586,1.871118,-0.260210,9.051238,8.297879,7.897169,3.098040,4.593808,-8.375153,6.586804,-9.567699,1.784634,-6.260865,6.626051,9.202478,9.580466,-9.472047,8.495042,8.528767,9.609502,1.595322,7.052097,1.768529,-7.886062,-9.917591,-9.782944,1.639862,-6.656638,9.391210,4.288294,-7.599113,-2.593345,-9.811857,-1.132041,-4.213035,-4.423746,-9.064952,1.177235,-1.102024,-7.672481,1.345245,7.496254,-5.990336,-3.038536,4.619306,-0.267605,-0.573017,5.794600,3.086850,-4.916244,0.338819,1.134731,2.896357,9.905718,-6.096680,-6.932490,-3.448326,3.674471,4.240774,9.237395,4.526926,6.014212,-5.060426,-7.891882,-8.551432,-9.643480,-6.009377,1.174062,-5.444494,8.763717,-0.027545,-8.405831,-1.598985,8.931570,4.866386,-6.115896,0.045615,5.961462,-2.683829,6.115485,-7.788703,0.093469,3.296885,-9.656899,9.100136,9.716023,-1.717562,5.785449,2.060337,-7.424035,0.678369,9.228775,-7.789543,-8.895330,2.404235,5.945909,9.741938,-9.635794,-2.973452,-2.979376,-8.506664,3.895745,5.116277,8.200200,-2.932842,-2.987313,9.954584,-1.913883,-5.277593,-8.003558,-8.980224,9.445898,-6.573442,-9.105173,3.064537,1.179965,-0.462027,-2.902053,7.560574,-5.062976,0.390718,5.122079,0.249394,9.918548,-1.964709,3.318516,7.655438,3.615357,-2.611528,-6.880239,-4.631418,9.175375,9.975056,7.045344,-0.004240,-7.818790,-0.635055,-8.372340,0.671681,4.656589,1.571204,-5.123691,7.834785,6.992372,4.878172,3.830957,0.619357,6.376275,-2.783002,9.995330,-8.610634,3.642407,4.158733,-0.551541,7.598930,-4.154296,-0.327054,5.816784,-6.779542,8.850928,5.538453,-1.120487,-3.109356,3.650224,-7.499791,1.691987,-9.026856,7.717112,-8.596007,-8.337251,3.269777,-2.613926,9.167339,5.939923,-9.943128,6.989027,-5.877634,-7.479710,3.500579,3.447428,-2.084973,3.294066,1.594667,-7.037900,-2.767287,4.246738,-4.465945,-3.619220,-6.520401,6.501536,-6.567666,-4.659724,-3.375931,2.643219,-0.743335,2.895016,2.554578,7.209993,1.237236,-8.362679,-0.292161,1.560192,-4.375090,-6.923150,-3.078902,6.718620,-6.551538,8.366399,0.576513,3.899189,9.006276,-4.775794,0.878494,-4.661021,-0.952014,-9.673725,-1.422655,2.676382,1.647595,0.375688,9.740356,7.497373,-5.944738,4.471049,7.997039,1.661788,8.862940,-0.736563,9.150467,-5.601837,9.446087,-1.162280,-0.143568,-7.178246,6.102735,4.199875,9.132171,2.595975,5.369864,0.296364,6.738836,-6.169668,-1.394260,5.165167,9.525191,8.176466,-9.365954,-6.043169,6.137011,8.393641,0.918762,-5.112306,4.794620,-9.583055,-8.712675,1.946889,0.017011,-2.385652,-3.051828,0.910228,6.333218,8.566469,9.009228,4.310404,-7.981881,7.178914,9.833004,-6.717546,6.314583,-3.176305,-1.607690,5.668346,4.993831,-9.047088,2.851129,3.462508,-1.345886,0.350532,-9.128080,3.780858,1.345874,-3.728546,-1.477759,4.881241,-1.721082,3.863194,0.765118,-0.344216,-0.230419,3.911003,-4.204631,8.857812,1.933523,-0.541222,8.190679,-6.130886,6.749331,1.463959,-5.811770,4.097138,-1.562265,5.564445,-5.946478,-6.926654,-5.836060,-5.413342,-5.782827,-6.786761,-8.305553,-0.304300,-2.691986,-4.814540,3.902513,1.175592,-8.251439,-8.734748,9.315367,2.550483,5.852578,-6.295905,7.459318,3.131582,-6.038241,6.966874,-4.591880,-2.733480,-2.192751,-0.198842,3.130892,2.507485,9.575788,-7.794356,-3.767137,-1.424142,-8.634743,5.977616,2.346899,2.235742,-4.540479,0.694383,-6.290552,6.828837,-1.661353,4.520624,9.217354,-6.225640,-0.320931,2.649547,-9.870270,3.584292,5.524822,-0.324342,2.511564,-8.267999,-7.654358,-9.671785,-5.840339,7.510712,-9.049050,-7.120175,-1.482235,-2.196244,5.502714,7.732504,3.088757,-3.257274,4.422900,1.871347,3.002294,3.035895,1.497728,-5.700352,5.412550,2.224307,-9.635107,-0.626416,-6.876331,-7.659432,-1.092211,9.486056,-8.404579,-4.679962,-2.332925,-5.558896,-9.562888,2.757018,3.688629,4.937711,7.944570,-8.874407,-6.151222,-4.923853,4.372235,-8.806717,-7.401985,7.745917,-2.225073,0.185174,-9.978122,-2.891731,5.494150,-4.397704,4.707322,1.917167,-4.060644,7.116785,-8.664775,2.604784,-6.967982,-6.046806,6.879869,6.975582,2.787756,-8.990576,-0.073629,-4.433615,-4.645276,-6.995159,-9.086882,5.386461,-1.564686,2.702759,-5.442021,-4.641856,3.049408,-6.033957,7.421366,-2.182433,-2.028732,-8.382619,8.266840,-9.502642,2.868857,2.709539,-5.107891,9.736640,2.390388,-9.643855,4.378442,-6.437163,7.621488,-9.445753,-8.855300,5.000962,8.335250,7.975100,4.826022,2.328103,5.557541,-1.087341,0.250352,-7.212409,4.126230,-0.281024,1.530798,0.051767,9.066399,7.373152,-1.104247,-8.445283,-5.748291,-9.836360,9.386293,2.576139,-9.050971,2.228705,3.356509,8.373279,-3.864878,4.852104,-9.675039,-0.601557,-4.402442,-6.042412,-8.057629,9.115254,-3.647758,-1.832325,8.799450,-9.446515,-0.287498,0.992064,0.129534,-6.553886,-3.780132,-3.810648,-9.918337,7.139663,-2.990344,7.956051,-6.266772,-6.590903,-5.609260,7.372084,-3.159673,1.131890,6.456350,-3.803211,3.368592,-0.163152,-2.816506,9.184952,9.023222,-7.290147,-4.803746,-9.849264,-2.917409,4.293952,-2.367337,-7.881428,7.423809,8.298022,-4.727757,8.149213,-0.577943,0.897521,-5.825653,3.327741,3.637218,-4.824673,0.840418,2.915020,2.868650,-8.766043,5.530264,-0.687404,-4.288284,5.470858,1.405567,7.393611,-5.194966,-5.001946,6.020159,-4.033305,5.053478,-6.524133,1.512536,-4.895990,-4.578315,-5.321521,5.119763,-5.993523,-8.585900,-3.458379,2.418293,4.022652,7.192707,-2.764720,9.989866,3.593869,3.233534,4.477970,5.971844,8.831393,-8.611535,7.024698,-5.821886,-9.413877,8.777876,-0.139970,-2.280585,-8.450294,-0.936989,-9.412163,4.272131,-8.689388,2.282466,-8.351289,-0.151682,-3.968103,0.643828,-5.719200,-1.373198,6.639029,-5.439881,-6.129998,9.146563,-3.072559,8.709440,-2.061619,-4.414426,-2.551008,-3.024850,6.516729,-5.007137,-3.791907,6.366071,-7.241155,6.468361,-9.480732,5.675481,-9.392738,4.058151,-0.456020,8.099393,-4.481737,-0.025057,3.283834,4.405889,7.241723,-6.832455,2.378921,-8.180039,6.307192,2.352007,3.149268,-0.754971,-2.410270,-1.701276,5.578653,2.589170,-9.040709,-0.258227,-1.764906,-9.765902,2.883388,1.349798,-0.572337,-0.551483,8.104132,6.860828,1.033219,-2.681368,-9.908908,-1.753105,-9.044002,7.128006,7.411954,-1.595562,3.471538,3.614098,-3.585105,8.134534,9.415214,-0.198276,-0.367216,5.119628,-9.639332,0.174100,8.364826,-1.418747,4.766803,-8.030731,1.566251,-3.498595,1.662510,0.396191,7.206629,-6.060590,5.798763,9.615796,8.956581,3.719850,9.054346,-6.458096,-7.432702,-0.522221,-3.469134,9.431687,-5.799281,-5.098754,5.803058,8.803165,-2.482205,8.598855,-3.967199,8.465668,-1.728808,3.496969,0.273585,-0.341653,-1.499630,8.741057,3.799967,-8.575819,9.752685,8.273068,7.410612,0.414266,-6.532217,4.834627,5.092250,-8.134347,7.496134,7.058514,4.374718,-0.798929,5.296046,-5.341917,-0.825035,-1.003815,2.614675,5.480861,-2.123000,8.112110,4.715504,7.144454,2.254674,-5.600733,-6.480966,-3.245284,2.984349,0.636277,-0.215400,7.110498,9.270757,-2.306232,4.251494,9.236546,-1.520875,6.113799,4.209355,3.685307,-1.302014,8.420517,7.320521,7.094201,-4.498609,8.375031,-3.870619,-4.291248,-1.775650,0.037325,-7.144264,1.366238,7.467443,-5.258633,-3.786881,5.446175,-6.528385,9.927880,-4.106174,-3.616083,7.008887,-0.582575,2.672873,4.026923,4.925868,3.011425,9.658021,7.625153,6.554676,0.208405,1.235603,7.624890,4.322295,9.375536,2.841081,2.263979,-9.976810,-4.394957,-8.071607,1.410915,-5.356671,8.526276,-2.317538,-8.330562,-0.754894,4.497233,4.068485,0.258677,3.063670,-1.159416,5.230679,1.415870,4.540675,5.122091,-8.663600,-5.767208,8.062725,-6.968921,-1.047618,-8.114045,8.100881,-9.348370,-0.423832,4.365069,-6.425538,-7.390156,9.412147,3.352432,6.309510,-5.715822,-9.553637,9.442390,-7.121319,8.506527,-5.779565,-8.226280,5.835177,-6.741787,-3.662486,1.527070,-3.570333,-9.206576,2.992647,-5.833181,-3.625054,-0.346005,3.662659,9.310779,-8.941695,-4.634806,-0.544630,-2.615417,4.175866,9.644103,-5.468794,6.139652,-7.650482,6.329399,2.752446,-4.536957,-4.864029,-5.617638,-4.226821,-2.736846,-0.544987,-2.111284,0.920857,-0.209804,2.676978,-7.810507,-6.546732,-5.701632,-5.100495,7.278552,-6.587172,4.618203,-4.389321,-6.512990,2.268908,6.736943,-9.174059,-0.593330,-3.133504,-3.125620,-2.977983,-3.156520,-0.809808,0.226905,-4.696275,7.004483,2.842256,6.882268,-3.747860,-6.520544,-4.060249,-9.131583,3.156997,-0.156384,1.162171,-6.827248,-7.283460,7.983279,1.174482,3.188120,6.058567,-3.545477,2.807744,-3.554534,-0.516905,-5.227480,3.740819,3.221487,8.007371,-5.187070,-1.168396,7.896323,7.867305,-0.125802,1.648086,-2.874170,-6.002962,7.560510,5.094637,9.482411,8.735790,-9.538656,-9.135444,4.504317,-0.473134,7.794835,-8.486096,5.843774,8.353689,2.036718,8.628514,9.458515,-1.240481,6.124285,-0.378609,8.302338,-6.621329,-3.661247,3.606469,9.197532,-3.484062,8.132060,2.530904,-0.355614,-2.448530,4.954539,-7.810299,0.149977,-2.196231,-9.540985,4.652184,-1.678099,0.920872,1.686369,-4.241542,-0.779994,8.880603,-6.187623,-4.052062,7.002136,-9.353986,-2.697337,8.845201,0.984467,3.304666,-5.947740,-4.786945,-4.351974,-6.256415,-5.489445,-0.198879,2.180811,-3.975656,-5.487740,-1.730477,2.413922,9.306798,3.577360,3.234437,-0.573585,-4.880582,-1.393200,4.450231,6.104204,-4.879573,-4.164665,-0.346979,-2.552997,7.623095,-9.233383,-4.861628,-3.760945,5.018148,-6.448023,8.506334,6.623500,7.316020,-7.765456,4.443477,-7.437479,5.560757,-8.302383,-1.019318,8.136348,-8.302782,-9.523884,4.663724,-9.141790,-3.336231,-6.721456,7.549973,-9.095342,0.031339,3.254380,-7.989492,-0.473267,-0.420805,5.702630,4.639498,6.792273,-2.614716,-7.136573,-7.540648,1.837419,0.570345,-9.113237,7.668418,8.295947,1.669064,3.828494,7.848592,-1.378279,0.308723,-5.893388,-1.274952,-2.010272,1.091303,-0.463125,2.653222,0.878907,7.961035,3.632465,-4.477306,5.213306,8.415905,1.030435,-7.336370,-1.456610,3.462955,-9.199953,-6.285812,3.994630,9.160375,-1.480284,9.026135,4.332784,0.995994,0.370665,-4.013064,-1.659554,-7.119240,-9.600482,4.084871,-4.688652,8.666619,-5.393547,1.823773,-9.087865,5.665889,0.583300,-7.674064,-3.582807,0.563637,3.158829,-9.355537,8.648716,2.048107,-1.853942,-9.737207,8.503642,0.199899,-3.401316,5.065220,-7.798795,7.409110,5.250294,-0.220264,8.732702,-2.921593,1.742176,-9.702768,1.758212,-2.810543,-9.584251,-1.971065,0.914148,7.973545,-1.050518,-7.359746,-6.693481,-2.211622,6.139680,4.637556,-0.550813,2.332219,-7.996788,-2.168577,1.141801,0.029953,9.455488,6.637986,-3.832779,-8.485713,-9.408918,1.713674,-7.074520,-6.854128,-7.893870,9.068753,8.732847,2.818217,-3.267290,2.176984,-7.737610,-9.435625,-2.646268,-6.523894,-9.009035,5.084433,2.101393,9.131699,-5.869545,7.526855,3.251750,2.204826,1.853851,0.941134,-9.936475,2.093245,5.814943,4.275152,-5.070313,-5.944498,-0.216646,4.953061,-7.720290,-7.203470,-0.069120,-3.168908,-3.535767,8.435370,-3.764925,9.159592,8.571670,8.870159,-4.385467,3.392106,4.279800,-8.373427,1.185045,8.484353,-6.104007,2.286024,-5.809255,2.257069,7.456965,-6.899466,3.635675,5.111303,2.177899,2.017963,7.848650,-4.001464,4.883753,-0.385586,-0.215588,-9.220603,1.561599,6.467604,3.619423,-3.537663,2.927015,-4.202230,9.068800,-9.401632,0.681944,-3.038629,-9.097913,9.704604,9.238873,-6.826587,8.290725,2.664561,-5.367241,-9.007567,2.319152,4.002872,-2.994979,0.214374,4.952655,-3.534402,9.838074,9.563890,1.211998,0.480216,-0.842428,-8.201731,9.528757,7.320414,-0.622855,1.910506,-1.834583,8.628183,8.801045,-2.378059,-4.748731,6.540948,-6.409932,7.490027,1.065586,-4.707891,-2.309175,9.510146,-9.208685,-2.015724,2.441650,-3.823922,-5.420065,-9.735714,-2.745314,-7.977359,0.920695,4.902696,-4.358038,3.746110,1.665053,4.884672,-7.116906,8.587483,1.790726,7.297406,-8.890559,2.430951,5.699176,-8.985875,-2.758725,-5.282931,-9.919084,5.486621,-7.957738,-9.441139,3.656195,-5.621697,-1.691648,-0.157310,5.816539,-6.827502,-7.336425,-3.968879,4.137744,5.619679,4.640350,3.732063,3.542271,-8.531578,8.786112,-8.800313,-7.232524,-5.388054,-2.754760,3.284403,7.517119,9.476013,6.286064,0.031440,-2.289786,-4.172909,7.672910,9.622081,3.545003,-2.491137,-0.045184,1.775562,8.841130,-8.482758,-2.124999,1.991725,4.344952,5.509964,-9.424553,-5.047127,-6.280804,-3.219883,-5.507355,-4.401637,1.655457,9.835622,5.582378,3.849929,-3.054797,1.635691,8.155007,-4.431542,2.174059,6.787998,6.383624,2.113876,-7.880510,8.432605,4.804299,-7.789577,-0.073493,4.417000,-2.055387,4.921495,-4.144185,-5.006097,2.863930,-3.864744,-2.751156,0.773301,9.623909,3.256234,-8.805141,0.075086,5.545658,5.410510,5.926404,2.976979,2.843159,-6.846490,4.452423,5.928300,-1.306203,-9.987526,7.431480,-6.941292,-2.677089,-2.973762,-3.420078,-0.951274,-5.684970,9.094283,-0.161610,9.825426,0.582201,0.197075,-9.527321,-9.652251,3.936250,-5.540617,-8.829363,7.046967,-0.225571,5.856209,3.256252,-6.045952,2.046673,4.749603,6.869218,6.707353,3.520984,5.537493,7.926197,-7.379493,-6.691959,2.125503,7.398015,4.918611,6.875236,-1.425322,4.069908,-8.497352,-7.660810,-6.112515,-4.027365,1.209643,5.592045,-0.468692,-9.094454,3.688092,2.368069,1.379405,0.032642,-7.670862,1.070758,-1.406866,-1.325591,-9.745938,-9.601347,-7.836956,-0.637146,-0.504843,-5.196977,5.877340,4.454468,-2.706882,8.184628,3.598661,-3.809384,6.075162,-8.284576,-8.958742,-7.750809,-8.175610,-3.550341,-3.892940,-6.158271,-4.611745,4.250373,4.904619,-8.531379,4.295773,0.638810,-6.667240,-1.879796,6.106706,9.645892,5.161114,-1.535060,2.296034,-0.897817,-1.085627,-1.133544,-5.746938,-7.771974,9.919076,2.830381,-1.443747,5.570485,-4.924188,2.560553,2.548033,-4.038897,-5.696596,-7.008255,4.545215,8.448051,7.005807,-8.270139,0.861246,8.959298,5.464412,2.355699,4.511631,-3.043966,3.444313,0.193663,1.845406,5.283807,1.827066,7.160978,9.346206,-2.885181,-6.670550,-9.959715,4.617318,-2.488316,-3.740808,-4.341580,1.651723,3.074309,-3.238585,0.923534,-4.968800,-9.372233,-7.840120,-6.126365,-9.560525,-2.483294,1.178433,5.019775,-5.996507,5.590677,9.395718,-4.607197,2.189436,9.576118,-8.453210,5.017860,-4.205948,-7.964533,4.805247,-0.719292,8.177364,-4.729819,8.173626,0.797051,-4.483446,-9.194378,6.791018,-1.558254,-3.097186,-8.448314,-8.847535,-1.717442,1.608043,1.276581,1.448784,7.532980,-4.023790,-0.931612,3.951461,1.406984,-2.345261,3.436918,-2.857499,-0.990018,-2.868550,3.366924,-5.795124,1.067008,2.789009,-6.520126,-8.514658,5.752974,-4.540411,-7.494126,-3.163435,7.805092,9.674673,-1.791117,-5.671486,-2.558480,8.957231,6.354066,1.262860,-1.974727,8.040966,-5.056447,-3.263875,-4.499516,9.641535,-7.495999,-7.158628,-8.819053,-5.282986,7.735228,-4.410174,2.728010,7.922221,2.978336,3.952513,2.332850,9.911266,-3.129146,-5.992791,-7.272882,1.791611,4.447531,-1.156062,8.126822,-4.228383,4.774691,4.773566,-5.806207,0.195234,9.782294,4.307565,3.436572,-4.460370,-1.484926,-8.408632,-3.777090,8.263109,7.806855,-8.246926,1.981043,9.244224,5.961387,1.332282,8.168432,7.201133,-6.896236,-5.268108,4.765802,3.790406,6.072641,-3.941658,-9.241372,3.736791,7.638679,-7.161915,-0.450903,5.211681,-1.732313,8.590295,5.909774,2.802571,-7.361693,5.396444,-7.905703,0.285903,-4.064484,-9.988961,-9.718274,-3.277742,9.536039,-2.507615,-9.767739,6.903541,-5.792560,4.115175,1.085038,8.387722,-8.036526,-2.389778,-5.603642,-8.188447,6.004640,5.098238,-5.929853,-4.538920,-1.935511,7.526920,-0.051981,-6.488778,7.062903,4.863230,-2.499031,-8.812833,3.727521,9.016607,7.963091,6.997077,-9.208928,-0.916849,-2.628442,-4.337804,5.508952,-7.877287,-5.304815,-4.305237,-0.185660,6.449817,6.435952,9.468126,-9.838113,-5.781543,-5.441714,-4.336739,-5.375280,0.749089,2.946657,6.953512,5.684202,2.797318,-5.909000,6.080711,9.497513,1.976779,2.957676,8.563740,-6.443774,9.936957,2.769299,5.353061,-5.304883,9.194914,3.962054,-5.849193,-1.537484,-5.734772,4.881863,1.681019,-2.739106,9.624666,1.602846,6.602218,-4.371793,-5.574480,0.812305,4.653915,-2.538388,7.546623,-5.023557,-8.985135,3.947890,8.403277,-2.310750,5.423643,-9.025497,-6.607101,-6.599108,2.355948,-6.998343,-3.990699,1.804569,5.585252,-4.960588,5.426459,-6.107533,4.954858,7.090898,1.294568,6.062411,-6.099994,8.909753,6.797277,7.424695,8.124253,-2.216635,3.306309,9.496879,5.492303,9.299629,-3.413274,-4.110429,-8.176236,3.333379,-1.148647,-9.314895,-1.612394,3.402015,9.967359,-9.614845,5.114682,5.069500,-9.909812,0.423497,-9.043083,4.116018,4.750074,6.574609,8.458030,3.274851,6.168481,-4.779498,7.324218,-4.574314,-9.046813,7.949653,5.300087,-6.165716,-9.504677,-5.935062,0.606000,6.571140,0.678080,-3.515786,5.981194,-4.943609,9.657313,-2.230395,2.476846,-9.606877,9.711386,3.403808,-0.554951,4.309216,6.550815,7.564192,9.487871,8.044869,6.560540,6.385666,4.027348,-7.922138,-0.232650,-8.014365,3.599026,-0.222787,-1.735367,5.715162,4.259494,5.251668,-7.485096,3.158186,-6.288438,9.909458,-9.869363,-1.863461,-8.982200,6.873756,-9.336010,-8.452858,-7.896846,-4.493012,-0.663352,2.677300,-5.373511,5.284610,7.582208,-4.454592,8.597403,-6.690269,-8.013490,-0.925279,7.056243,-7.331085,0.856779,5.881869,6.045585,-8.853373,4.652974,6.543703,7.163739,3.547415,-2.160583,-1.330405,6.180508,7.696977,5.753585,-8.662792,1.134953,-6.544043,-0.784930,-4.088682,-7.711241,6.807215,-0.979232,9.832810,5.588588,6.579956,5.525171,-2.996187,-1.200653,-3.942794,5.876920,-0.483952,4.379603,3.239668,-5.070734,2.637282,-8.378702,-1.493307,-7.938314,-0.164876,-7.981342,7.295479,8.633959,-6.404855,3.189784,-2.395595,-6.240175,-8.704253,0.514977,5.580483,7.100226,-6.731596,7.030079,7.003628,8.858881,-6.689740,6.506505,5.234905,6.849448,-4.919812,-5.198598,8.517828,2.713207,8.017971,3.729639,-0.517383,7.387858,-5.909193,9.578092,-6.460899,-4.114670,5.037745,-3.284822,-8.461206,-0.752751,9.973700,1.922056,7.039377,-6.859622,-9.524782,2.776187,-9.710923,7.455953,-6.713571,-8.121225,0.648734,1.868806,-2.132267,8.936204,4.737001,2.340633,3.698701,6.423390,0.525240,2.633003,3.138205,-4.617225,5.285302,-1.776076,5.651837,9.376858,3.270391,6.442267,-6.463062,6.791109,-5.219992,-7.811340,5.789078,5.734814,9.579106,-0.171529,9.208908,9.645657,0.720697,-8.850532,-8.094432,0.844973,-8.474473,-4.796673,-8.660094,-5.247748,-5.064269,-8.000281,-1.480445,6.027643,-1.997654,-4.495035,-3.287172,-6.688648,-5.386485,-1.614578,-3.693825,-1.010175,-4.334055,-0.454237,-4.555001,-8.434819,8.339133,2.197187,-1.077146,-5.324152,-3.871805,-6.707873,-3.570000,-5.205706,-3.734441,5.745505,3.137339,9.525164,-3.533288,-9.957211,1.813921,-1.696528,3.947292,-0.551442,-1.144568,-3.799584,-1.457288,8.390035,5.893910,9.931428,2.683553,7.428478,-3.227819,-8.985746,-9.219334,-8.298232,9.002561,-2.694257,-4.382727,-4.557397,4.995367,5.761977,-9.363380,-2.809890,3.930804,5.681688,0.223764,2.206537,5.841531,-6.796443,-7.193369,8.671026,1.550181,-4.827437,2.541651,-0.995731,7.855947,-3.965330,5.836110,3.744507,-6.047559,5.057814,4.196559,5.245557,-3.083721,-8.386837,-9.218744,3.112501,-3.921733,1.437664,-4.347706,-7.440610,-2.788753,6.203235,-4.439407,-5.537823,2.894354,-8.368097,-1.810294,-4.218174,1.262427,2.781580,-7.450308,-7.312340,-2.213495,-7.926499,8.613936,-9.773667,6.303465,0.886833,-2.359110,-9.084206,9.841271,6.701365,6.657458,2.722530,-6.764163,-3.727310,3.542796,0.650115,7.737214,-5.898036,5.682309,-4.677924,6.968029,-8.150449,7.353754,8.878896,8.543042,-4.382463,-8.775060,7.837127,-1.135306,-4.360716,-1.459489,2.665182,7.815411,9.485230,-5.887835,-0.863819,2.995381,3.254639,5.470544,-5.232511,5.264699,7.304970,-6.066988,6.278906,3.755838,-5.810326,7.810790,8.081197,4.008289,8.481811,-7.078347,4.197665,-5.068089,-5.639100,-5.889921,-4.006705,5.819039,1.725710,4.461135,-7.383345,-4.522193,-2.647405,-5.929466,5.605639,-6.467950,3.692554,-2.821228,4.043116,2.574212,-6.354564,-4.970865,-2.138890,1.861475,1.932777,-3.673319,0.237394,-4.011446,-9.046509,1.439605,-0.438558,6.521934,-3.892638,5.363524,-0.109782,4.943663,-9.298835,-5.692456,9.827974,-2.904792,-1.746276,-5.283386,-7.965769,8.817955,1.275069,-8.836598,6.746493,9.729501,8.869948,3.183894,8.285613,-3.878311,-2.739855,-2.916838,-4.198379,-0.822553,1.754512,-7.357318,9.567846,1.605841,-6.236770,-7.493897,8.166229,3.578459,-9.040200,-0.934663], dtype = "float64")#candidate|3261|(2730,)|const|float64
const_3262 = relay.const([5,-3,-4,-9,1,10,1,-10,-2,7,9,1,10,-9,-4,8,-2,-4,-3,7,2,-3,5,-3,6,-4,-3,4,2,-10,2,6,9,10,3,-8,-5,10,-6,6,-5,9,-9,1,-8,8,1,4,3,3,-1,1,-4,5,5,4,-4,-8,-5,4,2,-5,-3,-4,-3,2,-10,8,-5,-5,-4,10,1,-3,-7,-2,-7,5,-6,-8,-7,-10,5,-2,3,-3,-6,7,1,4,4,-10,-4,3,-3,6,-1,-9,-6,-7,8,-8,-2,-2,6,2,3,-3,6,-7,-6,9,1,4,-2,-8,2,7,-4,9,-6,-2,-3,-5,10,6,-5,3,-6,3,7,-8,-1,3,3,-5,-2,-9,-1,-4,6,-9,8,9,1,1,5,-7,6,10,-3,-10,2,-10,4,6,-5,-3,8,-6,-5,-7,8,-5,-5,8,1,-2,7,-6,5,5,8,2,1,7,7,-4,-9,1,-7,-3,-7,1,-7,9,10,4,3,8,-6,-9,8,-9,-6,2,-9,2,-7,2,-10,10,6,-2,1,-2,-4,3,-6,-10,3,4,6,-8,8,9,-4,2,4,-8,3,-4,-2,-8,9,1,-1,-2,10,9,3,-8,8,6,3,7,-5,-10,7,-5,9,8,10,4,-1,10,3,-10,7,1,1,5,-10,-3,6,-3,4,2,1,-6,10,-6,-3,4,-2,1,4,9,2,8,2,2,5,1,-1,-8,-2,-4,3,-6,-4,8,2,9,-1,-5,-10,-8,2,-1,-6,-6,5,3,9,-3,-6,-8,-10,6,3,4,-8,-10,-4,3,-10,-10,10,-3,5,-9,-6,-1,3,-8,7,-2,6,5,-3,-4,9,7,1,6,5,7,2,6,5,4,5,9,5,3,-4,2,3,3,-9,-8,-4,-6,4,4,5,3,3,1,-8,8,1,5,9,-8,7,-5,-2,9,-2,-7,-2,-6,4,5,-4,-4,-2,1,-7,2,-4,4,7,-3,-8,-3,-3,-5,6,9,-2,-7], dtype = "int32")#candidate|3262|(384,)|const|int32
call_3260 = relay.TupleGetItem(func_2737_call(relay.reshape(const_3261.astype('float64'), [14, 15, 13]), relay.reshape(const_3262.astype('int32'), [384,]), ), 3)
call_3263 = relay.TupleGetItem(func_2741_call(relay.reshape(const_3261.astype('float64'), [14, 15, 13]), relay.reshape(const_3262.astype('int32'), [384,]), ), 3)
bop_3270 = relay.right_shift(call_3260.astype('int16'), relay.reshape(const_3262.astype('int16'), relay.shape_of(call_3260))) # shape=(96, 4)
bop_3273 = relay.right_shift(call_3263.astype('int16'), relay.reshape(const_3262.astype('int16'), relay.shape_of(call_3263))) # shape=(96, 4)
func_3192_call = mod.get_global_var('func_3192')
func_3193_call = mutated_mod.get_global_var('func_3193')
call_3275 = func_3192_call()
call_3276 = func_3192_call()
func_3142_call = mod.get_global_var('func_3142')
func_3144_call = mutated_mod.get_global_var('func_3144')
call_3279 = relay.TupleGetItem(func_3142_call(), 0)
call_3280 = relay.TupleGetItem(func_3144_call(), 0)
uop_3281 = relay.cos(call_3279.astype('float64')) # shape=(10, 3, 7)
uop_3283 = relay.cos(call_3280.astype('float64')) # shape=(10, 3, 7)
output = relay.Tuple([call_3255,const_3261,bop_3270,call_3275,uop_3281,])
output2 = relay.Tuple([call_3256,const_3261,bop_3273,call_3276,uop_3283,])
func_3293 = relay.Function([], output)
mod['func_3293'] = func_3293
mod = relay.transform.InferType()(mod)
output = func_3293()
func_3294 = relay.Function([], output)
mutated_mod['func_3294'] = func_3294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3192_call = mod.get_global_var('func_3192')
func_3193_call = mutated_mod.get_global_var('func_3193')
call_3326 = func_3192_call()
call_3327 = func_3192_call()
func_3192_call = mod.get_global_var('func_3192')
func_3193_call = mutated_mod.get_global_var('func_3193')
call_3330 = func_3192_call()
call_3331 = func_3192_call()
uop_3334 = relay.erf(call_3326.astype('float32')) # shape=(10, 3, 7)
uop_3336 = relay.erf(call_3327.astype('float32')) # shape=(10, 3, 7)
bop_3338 = relay.logical_or(call_3330.astype('bool'), relay.reshape(uop_3334.astype('bool'), relay.shape_of(call_3330))) # shape=(10, 3, 7)
bop_3341 = relay.logical_or(call_3331.astype('bool'), relay.reshape(uop_3336.astype('bool'), relay.shape_of(call_3331))) # shape=(10, 3, 7)
output = relay.Tuple([bop_3338,])
output2 = relay.Tuple([bop_3341,])
func_3345 = relay.Function([], output)
mod['func_3345'] = func_3345
mod = relay.transform.InferType()(mod)
mutated_mod['func_3345'] = func_3345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3345_call = mutated_mod.get_global_var('func_3345')
call_3346 = func_3345_call()
output = call_3346
func_3347 = relay.Function([], output)
mutated_mod['func_3347'] = func_3347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3142_call = mod.get_global_var('func_3142')
func_3144_call = mutated_mod.get_global_var('func_3144')
call_3368 = relay.TupleGetItem(func_3142_call(), 0)
call_3369 = relay.TupleGetItem(func_3144_call(), 0)
var_3381 = relay.var("var_3381", dtype = "float32", shape = (10, 3, 7))#candidate|3381|(10, 3, 7)|var|float32
bop_3382 = relay.logical_and(call_3368.astype('bool'), relay.reshape(var_3381.astype('bool'), relay.shape_of(call_3368))) # shape=(10, 3, 7)
bop_3385 = relay.logical_and(call_3369.astype('bool'), relay.reshape(var_3381.astype('bool'), relay.shape_of(call_3369))) # shape=(10, 3, 7)
func_3142_call = mod.get_global_var('func_3142')
func_3144_call = mutated_mod.get_global_var('func_3144')
call_3396 = relay.TupleGetItem(func_3142_call(), 0)
call_3397 = relay.TupleGetItem(func_3144_call(), 0)
func_3084_call = mod.get_global_var('func_3084')
func_3091_call = mutated_mod.get_global_var('func_3091')
var_3399 = relay.var("var_3399", dtype = "float64", shape = (360, 1))#candidate|3399|(360, 1)|var|float64
var_3400 = relay.var("var_3400", dtype = "int64", shape = (2, 24))#candidate|3400|(2, 24)|var|int64
var_3401 = relay.var("var_3401", dtype = "int64", shape = (384,))#candidate|3401|(384,)|var|int64
var_3402 = relay.var("var_3402", dtype = "float64", shape = (7, 390))#candidate|3402|(7, 390)|var|float64
call_3398 = relay.TupleGetItem(func_3084_call(relay.reshape(var_3399.astype('float64'), [3, 10, 12]), relay.reshape(var_3400.astype('int64'), [48,]), relay.reshape(var_3401.astype('int64'), [1, 384]), relay.reshape(var_3399.astype('float64'), [3, 10, 12]), relay.reshape(var_3402.astype('float64'), [2730,]), ), 7)
call_3403 = relay.TupleGetItem(func_3091_call(relay.reshape(var_3399.astype('float64'), [3, 10, 12]), relay.reshape(var_3400.astype('int64'), [48,]), relay.reshape(var_3401.astype('int64'), [1, 384]), relay.reshape(var_3399.astype('float64'), [3, 10, 12]), relay.reshape(var_3402.astype('float64'), [2730,]), ), 7)
uop_3406 = relay.sigmoid(call_3396.astype('float32')) # shape=(10, 3, 7)
uop_3408 = relay.sigmoid(call_3397.astype('float32')) # shape=(10, 3, 7)
var_3409 = relay.var("var_3409", dtype = "float32", shape = (10, 3, 7))#candidate|3409|(10, 3, 7)|var|float32
bop_3410 = relay.maximum(var_3381.astype('float64'), relay.reshape(var_3409.astype('float64'), relay.shape_of(var_3381))) # shape=(10, 3, 7)
bop_3415 = relay.greater_equal(uop_3406.astype('bool'), relay.reshape(call_3368.astype('bool'), relay.shape_of(uop_3406))) # shape=(10, 3, 7)
bop_3418 = relay.greater_equal(uop_3408.astype('bool'), relay.reshape(call_3369.astype('bool'), relay.shape_of(uop_3408))) # shape=(10, 3, 7)
bop_3424 = relay.left_shift(bop_3415.astype('uint32'), relay.reshape(var_3409.astype('uint32'), relay.shape_of(bop_3415))) # shape=(10, 3, 7)
bop_3427 = relay.left_shift(bop_3418.astype('uint32'), relay.reshape(var_3409.astype('uint32'), relay.shape_of(bop_3418))) # shape=(10, 3, 7)
bop_3433 = relay.add(bop_3424.astype('int64'), relay.reshape(bop_3410.astype('int64'), relay.shape_of(bop_3424))) # shape=(10, 3, 7)
bop_3436 = relay.add(bop_3427.astype('int64'), relay.reshape(bop_3410.astype('int64'), relay.shape_of(bop_3427))) # shape=(10, 3, 7)
output = relay.Tuple([bop_3382,call_3398,var_3399,var_3400,var_3401,var_3402,bop_3433,])
output2 = relay.Tuple([bop_3385,call_3403,var_3399,var_3400,var_3401,var_3402,bop_3436,])
func_3441 = relay.Function([var_3381,var_3399,var_3400,var_3401,var_3402,var_3409,], output)
mod['func_3441'] = func_3441
mod = relay.transform.InferType()(mod)
mutated_mod['func_3441'] = func_3441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3441_call = mutated_mod.get_global_var('func_3441')
var_3443 = relay.var("var_3443", dtype = "float32", shape = (10, 3, 7))#candidate|3443|(10, 3, 7)|var|float32
var_3444 = relay.var("var_3444", dtype = "float64", shape = (360, 1))#candidate|3444|(360, 1)|var|float64
var_3445 = relay.var("var_3445", dtype = "int64", shape = (2, 24))#candidate|3445|(2, 24)|var|int64
var_3446 = relay.var("var_3446", dtype = "int64", shape = (384,))#candidate|3446|(384,)|var|int64
var_3447 = relay.var("var_3447", dtype = "float64", shape = (7, 390))#candidate|3447|(7, 390)|var|float64
var_3448 = relay.var("var_3448", dtype = "float32", shape = (10, 3, 7))#candidate|3448|(10, 3, 7)|var|float32
call_3442 = func_3441_call(var_3443,var_3444,var_3445,var_3446,var_3447,var_3448,)
output = call_3442
func_3449 = relay.Function([var_3443,var_3444,var_3445,var_3446,var_3447,var_3448,], output)
mutated_mod['func_3449'] = func_3449
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3477 = relay.var("var_3477", dtype = "uint8", shape = (16, 8, 5))#candidate|3477|(16, 8, 5)|var|uint8
var_3478 = relay.var("var_3478", dtype = "uint8", shape = (16, 8, 5))#candidate|3478|(16, 8, 5)|var|uint8
bop_3479 = relay.greater(var_3477.astype('bool'), relay.reshape(var_3478.astype('bool'), relay.shape_of(var_3477))) # shape=(16, 8, 5)
output = relay.Tuple([bop_3479,])
output2 = relay.Tuple([bop_3479,])
func_3487 = relay.Function([var_3477,var_3478,], output)
mod['func_3487'] = func_3487
mod = relay.transform.InferType()(mod)
mutated_mod['func_3487'] = func_3487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3487_call = mutated_mod.get_global_var('func_3487')
var_3489 = relay.var("var_3489", dtype = "uint8", shape = (16, 8, 5))#candidate|3489|(16, 8, 5)|var|uint8
var_3490 = relay.var("var_3490", dtype = "uint8", shape = (16, 8, 5))#candidate|3490|(16, 8, 5)|var|uint8
call_3488 = func_3487_call(var_3489,var_3490,)
output = call_3488
func_3491 = relay.Function([var_3489,var_3490,], output)
mutated_mod['func_3491'] = func_3491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mod.get_global_var('func_3244')
func_3246_call = mutated_mod.get_global_var('func_3246')
call_3498 = relay.TupleGetItem(func_3244_call(), 0)
call_3499 = relay.TupleGetItem(func_3246_call(), 0)
uop_3502 = relay.acos(call_3498.astype('float64')) # shape=(10, 3, 7)
uop_3504 = relay.acos(call_3499.astype('float64')) # shape=(10, 3, 7)
output = uop_3502
output2 = uop_3504
func_3505 = relay.Function([], output)
mod['func_3505'] = func_3505
mod = relay.transform.InferType()(mod)
mutated_mod['func_3505'] = func_3505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3505_call = mutated_mod.get_global_var('func_3505')
call_3506 = func_3505_call()
output = call_3506
func_3507 = relay.Function([], output)
mutated_mod['func_3507'] = func_3507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3505_call = mod.get_global_var('func_3505')
func_3507_call = mutated_mod.get_global_var('func_3507')
call_3592 = func_3505_call()
call_3593 = func_3505_call()
func_3487_call = mod.get_global_var('func_3487')
func_3491_call = mutated_mod.get_global_var('func_3491')
var_3595 = relay.var("var_3595", dtype = "uint8", shape = (640,))#candidate|3595|(640,)|var|uint8
call_3594 = relay.TupleGetItem(func_3487_call(relay.reshape(var_3595.astype('uint8'), [16, 8, 5]), relay.reshape(var_3595.astype('uint8'), [16, 8, 5]), ), 0)
call_3596 = relay.TupleGetItem(func_3491_call(relay.reshape(var_3595.astype('uint8'), [16, 8, 5]), relay.reshape(var_3595.astype('uint8'), [16, 8, 5]), ), 0)
output = relay.Tuple([call_3592,call_3594,var_3595,])
output2 = relay.Tuple([call_3593,call_3596,var_3595,])
func_3599 = relay.Function([var_3595,], output)
mod['func_3599'] = func_3599
mod = relay.transform.InferType()(mod)
mutated_mod['func_3599'] = func_3599
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3600 = relay.var("var_3600", dtype = "uint8", shape = (640,))#candidate|3600|(640,)|var|uint8
func_3599_call = mutated_mod.get_global_var('func_3599')
call_3601 = func_3599_call(var_3600)
output = call_3601
func_3602 = relay.Function([var_3600], output)
mutated_mod['func_3602'] = func_3602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3192_call = mod.get_global_var('func_3192')
func_3193_call = mutated_mod.get_global_var('func_3193')
call_3658 = func_3192_call()
call_3659 = func_3192_call()
const_3689 = relay.const([[[-2.050803,3.651978,7.028582,1.579698,0.663889,1.553748,-1.106195],[5.414329,-9.142691,4.436151,4.963178,-2.099096,3.045588,-8.288661],[5.000467,-0.424134,9.634695,-2.771416,4.148945,9.127215,2.478280]],[[-1.882377,-3.045748,3.728568,3.482552,-2.689618,8.048446,5.563062],[7.245423,-1.665302,1.859862,5.049374,-2.526533,-4.389227,9.439111],[-2.020198,-8.989781,-1.725238,-6.523978,5.058898,-8.761584,-7.339035]],[[-9.613642,7.245386,2.580026,-4.603446,-7.338161,4.608083,2.529522],[-1.858476,3.833313,0.363185,-8.308496,7.246095,-4.101071,-0.706732],[-2.947368,-5.852434,-4.521505,0.709113,6.180779,0.338597,3.698429]],[[-7.426371,-0.995334,3.679477,-8.433797,2.855864,-1.654537,3.084675],[5.698005,7.288126,4.062307,-3.147520,2.675623,1.925067,8.879467],[4.840581,-7.226658,9.428082,-1.727205,-4.764919,3.854055,9.558777]],[[-8.928209,-7.224683,2.831152,-4.213582,-0.545969,-2.508917,-9.865493],[-8.691161,-7.018841,-4.367194,-9.931452,9.698016,-1.561132,0.649303],[7.605909,8.079710,6.027653,9.296299,2.550570,8.501053,-5.428122]],[[-0.953903,-8.812177,-4.906308,-1.654622,1.161724,-8.286607,7.436736],[-1.680931,1.500702,-7.464965,-9.497665,-1.080011,-8.690057,3.791908],[6.549743,9.288287,-9.158279,0.661198,7.589729,4.169378,-6.647986]],[[5.598994,-1.101016,-2.058961,-4.089703,-3.392357,-0.925442,-8.524145],[-1.341145,4.530775,-3.851101,3.258940,-6.870179,5.122664,-5.178308],[-8.436004,1.706739,4.972211,3.533703,2.515799,-0.768204,-3.822075]],[[-3.447920,3.315210,-9.402179,3.039685,2.691809,1.825761,5.345766],[8.067707,8.255292,-2.070760,-6.331946,-9.238933,7.287516,8.576642],[3.964732,-1.802597,-6.494060,2.015620,-1.937343,8.014938,7.033738]],[[7.715714,-0.829688,1.824212,-6.599512,-0.264643,9.571515,2.844115],[-9.075939,-8.275094,-9.734171,8.049844,-1.697128,-3.359254,8.080893],[-6.666346,-1.449495,4.974388,2.159434,4.959599,-2.092958,-1.183934]],[[-4.079215,-4.381419,-3.013506,5.392051,-6.565718,5.059609,5.108654],[7.098390,-9.323782,1.974965,-8.110637,4.286751,5.317821,1.477674],[-4.453429,4.221401,4.843875,6.588469,-6.106296,6.984629,2.331713]]], dtype = "float32")#candidate|3689|(10, 3, 7)|const|float32
bop_3690 = relay.power(call_3658.astype('float64'), relay.reshape(const_3689.astype('float64'), relay.shape_of(call_3658))) # shape=(10, 3, 7)
bop_3693 = relay.power(call_3659.astype('float64'), relay.reshape(const_3689.astype('float64'), relay.shape_of(call_3659))) # shape=(10, 3, 7)
output = bop_3690
output2 = bop_3693
func_3698 = relay.Function([], output)
mod['func_3698'] = func_3698
mod = relay.transform.InferType()(mod)
output = func_3698()
func_3699 = relay.Function([], output)
mutated_mod['func_3699'] = func_3699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3293_call = mod.get_global_var('func_3293')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_3804 = relay.TupleGetItem(func_3293_call(), 0)
call_3805 = relay.TupleGetItem(func_3294_call(), 0)
func_3084_call = mod.get_global_var('func_3084')
func_3091_call = mutated_mod.get_global_var('func_3091')
var_3816 = relay.var("var_3816", dtype = "float64", shape = (360,))#candidate|3816|(360,)|var|float64
const_3817 = relay.const([[2],[-8],[-7],[-8],[-7],[6],[2],[10],[-2],[-10],[1],[-3],[3],[10],[1],[-8],[4],[-9],[-10],[-1],[6],[1],[-7],[5],[5],[8],[-7],[2],[4],[-5],[8],[9],[-9],[2],[-5],[-8],[-10],[2],[1],[5],[-3],[3],[3],[-1],[9],[-5],[9],[-8]], dtype = "int64")#candidate|3817|(48, 1)|const|int64
var_3818 = relay.var("var_3818", dtype = "int64", shape = (384,))#candidate|3818|(384,)|var|int64
const_3819 = relay.const([1.960502,-6.485109,-3.103224,2.542574,-7.431419,-8.575769,4.511781,-2.961891,-8.768140,-4.944131,-9.543698,0.874448,-2.855983,-9.562009,0.359197,-8.795831,-7.683213,-0.472713,4.757936,-0.564562,-1.774409,-8.909124,3.177925,4.648060,-8.195552,-7.321953,-7.958561,-1.574369,6.118404,-2.494427,-4.731391,6.156647,-6.228894,-1.188261,1.699250,1.325904,7.239831,-3.334046,-5.271919,0.333229,5.889233,9.583573,2.206944,-1.778582,-4.970555,-4.161148,-1.496089,3.206028,9.364078,-3.973939,-7.573404,9.000954,5.556372,-6.820150,2.948864,-2.334791,9.905691,-1.232304,-6.249223,8.287542,-9.316183,7.762078,-0.973362,8.866538,-1.556894,-1.371706,5.144448,5.057767,2.836243,-3.177942,3.569494,7.318518,-1.203668,1.346759,3.977281,0.860540,-3.446499,-3.141959,2.522087,1.801563,6.545464,-6.500056,5.933128,7.600056,-6.929802,0.197938,9.998412,-4.109789,-1.885104,-8.432409,1.536326,8.157442,-4.152277,-0.631675,6.575416,-2.996598,7.167009,7.644241,-9.287963,-5.260038,-1.230327,-7.213889,-1.032914,4.427331,-7.908432,-7.802219,8.222317,-1.403153,9.041784,0.327971,-1.962482,0.559182,0.464103,-6.645836,-9.720850,-5.575315,-5.480609,-2.196816,2.184283,8.518092,6.849705,9.013588,-4.451700,-6.035731,-8.702493,-7.940338,8.320067,7.708871,2.737038,-7.575290,-4.247619,-1.223856,2.731988,9.746455,6.131237,5.738827,3.492594,4.343057,-8.216394,1.597704,-6.800250,2.703350,-4.077556,-6.977561,-2.478465,9.080894,2.695079,7.622703,-1.063159,6.392008,4.186876,-0.397352,-3.642543,-9.050582,8.497690,3.243752,-2.843615,-3.261230,8.712959,-1.558163,4.493255,-3.243107,8.124661,-1.111486,2.256148,2.575513,-4.310988,8.267040,-0.076254,7.350662,6.718985,5.107459,7.030814,-9.605672,-4.367290,-9.681256,-7.483712,-5.535064,-6.653808,3.132256,-8.899874,-6.050803,-4.761919,9.422155,-9.030376,9.970237,-2.087513,1.411130,-2.971566,-2.308927,-3.214959,-7.614703,-6.029172,-7.361852,4.940186,-9.808338,2.790475,-6.335196,-7.202714,-1.303404,-8.172084,-2.300000,-0.693511,-6.762468,-4.897316,3.767034,3.504252,7.046202,-6.537201,-2.060865,-7.618357,3.737508,-8.594211,5.405199,-8.300294,5.485252,2.048414,5.237218,6.367760,-9.078592,-8.246023,-2.668576,-3.647607,2.873858,7.337981,-6.682208,-5.008521,8.755171,-6.877091,4.010575,-3.481692,9.828983,9.852305,2.330253,6.889624,-7.706810,0.333947,5.231616,-0.700989,-4.415838,6.306198,3.371721,4.502402,-8.788508,-3.771191,-1.744745,-1.017124,-6.067338,-8.179258,-9.812964,-0.100928,5.501997,1.146361,0.531049,-3.074260,3.128260,-1.923472,5.478652,-0.075360,3.422071,-9.870427,4.872792,-9.438690,-4.385066,-7.791832,-2.035650,6.423798,-9.460504,-6.474345,-5.904429,-1.122590,-1.428837,6.328169,-0.486257,3.279723,-6.558877,7.133536,-6.508398,8.160922,-0.618260,4.247643,-6.593079,-2.135479,6.712974,-4.091096,6.739970,-5.906383,-2.325547,-9.538580,2.477796,-8.776009,3.174455,8.276857,5.215855,-9.010199,-9.546060,-6.903436,-4.289165,-7.319744,-9.088830,0.675999,7.047643,6.509596,2.801127,-2.703462,-1.902380,-1.816086,-4.757785,5.308959,5.870750,1.669704,-9.974494,-2.078568,-6.141586,-8.787122,-3.964230,9.208561,3.463869,3.744768,-0.500435,9.838968,-0.816194,-2.301255,-2.050196,7.102325,0.996700,9.830052,-3.273664,-2.061333,-9.841344,5.533913,-8.000379,-5.647402,-7.537168,1.681079,0.574273,2.253200,-1.987541,-7.858331,2.091537,-0.260112,-8.182639,-1.916768,-3.912033,-6.819418,-9.459767,0.804441,-7.661440,-9.651726,3.843912,5.705637,1.989858,-7.599501,-8.321553,-2.010890,-9.673962,-3.824047,-5.197760,-2.250185,6.708314,-0.856205,-9.442787,-4.140037,1.721821,8.858853,-2.765968,-4.137369,2.558613,-9.466731,9.123970,-1.994932,0.148211,9.803631,6.863199,-3.197636,-0.262083,-0.141887,-3.619670,7.067414,-2.786787,-9.690109,7.592717,-6.641500,-9.101102,-8.656161,9.790275,6.423954,5.561813,-8.850603,-2.280845,3.072923,0.235192,-7.008052,-7.548188,-2.659420,-3.441667,-8.071186,1.020680,7.117136,7.295656,5.719400,-2.865495,1.567826,7.479651,-9.508426,4.416159,-8.153378,-2.303903,-9.653968,-3.106899,9.698166,-2.419699,-0.556793,-3.582604,6.468769,2.852686,-5.444701,1.529105,4.804833,9.636547,7.017103,1.626239,-6.294666,-2.635703,1.027324,9.719074,0.407062,-3.499993,0.653298,5.062812,-8.790581,8.874750,-8.106018,-7.579143,-2.575567,-5.974416,-0.768022,5.879163,1.890457,-4.358935,8.101790,5.369390,6.748676,-4.104702,-3.784087,7.295338,1.814928,5.022401,6.562803,6.102502,4.922075,4.458745,-9.366247,-3.403464,-2.354248,-1.576582,-6.426100,0.771671,0.156464,-7.744452,5.830420,-3.448063,4.177030,8.290245,1.462320,-7.238549,-9.347126,1.921360,-3.210363,-7.707771,-3.068841,-7.546806,-6.214758,-4.225603,-8.594784,3.870595,-5.480644,-7.424355,4.610528,-4.397982,-1.670706,7.468378,0.038975,3.178573,2.052358,-9.910230,-1.399408,-5.542634,-0.547017,-9.328501,-7.628376,1.745046,8.940080,-3.274709,4.685319,-3.945495,3.080505,-9.934912,-2.768332,-7.309348,8.652376,0.380531,-4.690634,-6.510345,-7.336207,3.329177,-8.679079,9.556962,-6.554510,-7.469310,-8.015231,1.121158,-1.116441,-7.558585,-2.988610,-3.193354,-7.336176,4.122197,-8.518683,1.971700,8.044050,6.996322,5.277869,9.295097,-4.768490,3.960024,-5.593401,-1.204192,-0.806172,4.605406,5.693898,-5.242876,1.403798,-3.307424,9.963574,-9.682049,-5.006316,-7.967407,-5.876749,4.961560,5.184592,-3.154317,-3.730709,4.978357,7.750239,1.775451,-4.610471,-3.632904,9.603832,6.538818,5.825558,4.565587,3.532207,8.474595,-4.622910,-2.868873,-2.470138,8.250755,4.030926,6.822642,-3.779745,-5.100906,7.740328,-1.455947,2.213008,5.807344,-3.230938,4.625168,5.391205,7.124959,5.647555,3.795248,-5.050637,-9.630907,6.568323,0.289143,-1.384050,0.171094,-1.958949,3.257051,2.996030,-9.310283,6.437774,-3.146419,7.842173,-0.102291,5.929843,-4.533611,5.797895,-3.155594,-7.814122,-1.495468,7.152866,-5.328776,8.504602,3.010956,4.951733,-6.826655,0.396699,9.809679,9.333824,-4.803395,7.064447,-8.975191,7.189090,-2.590128,-1.902194,0.464763,-7.007273,-3.561859,5.650718,-4.937019,0.468681,0.215974,6.886316,0.967019,9.032827,-2.144930,-3.910923,4.519623,9.034481,-5.158231,-0.164741,1.797560,3.522174,-3.183408,9.184615,8.779996,-9.574884,-1.468034,3.470265,-5.957348,5.262698,-8.772649,4.090522,8.619921,0.576746,8.911314,1.430951,-2.094060,-9.065615,0.860381,7.699059,-8.702484,-9.576451,-0.273669,3.728039,-3.075848,8.198476,-0.782536,-5.051622,8.345021,6.478169,0.216503,5.175156,-1.744993,-3.486781,0.017230,-8.238711,0.707576,-5.020070,5.856688,-4.364703,-5.715520,-2.958803,5.006297,3.272657,-3.079564,1.158792,4.872731,9.760853,-5.347261,-2.323353,5.960664,8.395224,2.393580,-3.230924,0.975061,-9.303691,-0.872358,2.778161,3.797477,-1.966729,6.029316,3.603990,-8.285460,-9.999846,-6.749210,3.414184,-1.888082,5.720875,-7.147981,-9.727704,-1.836854,-1.100689,7.855039,-9.527152,-7.150774,-3.826320,-3.426016,-6.425626,-6.925567,2.853275,2.466139,-9.382580,-5.469700,9.435971,-6.087175,-1.895843,-4.148965,2.461021,-3.148739,-2.591715,3.254098,6.082458,-7.013320,-7.367563,-5.634168,-4.595892,-6.690628,1.336817,-8.048564,-8.735513,-9.869875,7.970006,3.958953,-3.648272,2.842239,-0.409917,5.518936,-2.117759,1.819210,-0.792763,2.246898,-8.112683,-3.040660,-3.303368,-6.121753,8.841737,3.043854,-4.904852,1.276116,8.321122,6.185901,0.465267,6.878898,9.326913,7.522225,-5.108290,-6.317575,-1.758535,6.517907,5.400285,7.608868,-8.001144,2.534045,9.141301,-8.449573,8.003643,-8.189400,-9.521664,1.780878,0.758884,-1.802149,4.075298,-9.226189,6.208898,-5.063807,0.074569,6.379674,-2.951420,-6.762907,4.181473,-4.036209,1.909229,-3.977823,-6.780502,3.456949,-8.453654,-6.144643,-5.927801,1.041495,-5.897423,-0.915623,-6.294061,4.314967,-7.682807,-5.849519,-2.804296,3.765786,-4.708458,-0.137836,4.105025,-5.267219,7.734024,3.972037,4.663651,3.847873,-2.903993,2.984549,2.406874,1.593436,6.514288,0.772918,3.835038,5.712778,-4.550444,-9.401977,2.587026,6.800710,9.734973,-1.707866,-6.265928,-5.717027,8.333377,9.696687,4.462389,-1.980944,-4.716360,-3.210545,-5.869847,5.393671,5.497862,-9.960010,-2.712976,3.837856,-5.109596,-5.402014,7.452691,1.332657,8.251551,3.002193,-4.312249,6.887545,-3.600200,-2.604726,3.959871,7.599426,9.163570,2.026477,-8.108945,-0.103703,-4.790883,6.286848,5.156713,-7.139878,0.527418,1.021397,3.742743,-2.047374,8.994540,4.480449,0.934103,5.586111,-5.818014,-6.194966,-3.890711,-9.004648,-5.413090,-2.382886,-2.936844,-6.149397,3.548267,7.185293,-2.186876,-4.050489,-2.643580,-3.669432,-8.727331,9.110878,-4.458585,6.516706,-8.228418,0.504340,9.430896,-8.567928,-8.566234,5.637810,0.595151,-4.633063,4.319874,4.964480,-4.377099,2.475180,9.039336,-0.931347,-5.243214,-6.854591,7.991100,4.793219,-0.466064,-2.123858,-2.179500,-2.677725,9.693249,1.311523,3.125060,-0.278217,-8.188728,-5.671467,-6.519370,6.232871,3.629283,7.825840,8.409156,8.940893,9.088711,-1.769966,-8.324473,0.941556,-5.193943,-0.310854,4.339903,3.002718,-8.808701,3.076521,-6.642412,7.837836,1.224454,-3.066432,-9.612280,-2.771948,-4.859183,3.963049,2.759186,-6.831086,-1.110809,7.872953,4.061036,4.641267,-0.940996,8.364926,-3.390840,-5.327492,5.766068,-8.800122,4.206613,7.085386,-5.868897,-2.327496,9.088492,6.184257,7.632615,9.537698,8.340536,-1.640462,-9.314867,6.845036,-7.982649,-6.246819,-3.985788,1.825937,4.137532,1.794938,-9.351229,2.003084,-6.649304,1.913329,7.425399,7.868711,8.817722,-4.679284,9.189519,-3.329063,-0.178808,8.498993,-3.969590,-5.528663,-8.338187,9.931638,2.273229,-3.972409,4.811954,4.704838,4.541240,4.432478,-7.716370,-5.199467,5.353179,9.101661,2.881486,6.428078,-7.321082,1.727407,0.463171,7.075487,1.264735,8.464700,1.666595,4.488104,6.724501,7.957199,-1.517461,4.296354,0.094899,5.021886,6.282395,-8.955172,-4.982658,-5.884029,-1.293931,-0.638090,-5.125258,-5.742956,-6.952950,-2.354479,-4.195236,6.809310,4.770102,7.086423,-7.444053,8.007391,9.555157,0.680582,7.432481,2.793679,1.553157,3.016847,2.616181,1.600305,2.043234,8.585237,0.698532,-9.002159,3.292718,5.159551,1.145651,-5.972378,-0.182961,-3.428331,2.575381,6.996256,-1.736172,-5.620063,-5.677628,6.090703,3.099426,-7.555654,-0.564643,8.292297,-9.726746,8.307566,0.234916,-9.151295,7.382580,2.405842,-2.276763,2.042816,0.793259,2.643943,0.398654,4.301324,3.747893,3.384197,9.452250,-8.243552,-1.879590,6.179609,5.355531,6.819810,-7.661737,0.639832,-2.578207,5.967453,7.597767,5.097588,-2.611047,4.573219,-9.328587,1.159909,-4.226818,1.364184,5.669500,-6.056596,-0.008397,4.625646,6.084540,-5.903125,1.348427,8.044661,-5.607766,2.966436,-3.667876,-2.204357,2.107001,-6.274303,4.640583,-7.132211,-4.171205,8.853920,6.387130,2.628811,-6.355728,-4.362839,-9.283354,-6.739844,-1.692278,5.451146,-0.635705,-2.106882,5.748683,3.164379,-0.725689,4.215366,6.395887,-4.512471,4.318738,4.809637,0.580064,9.334896,2.021955,-3.896043,8.074006,-1.595401,1.111967,8.089227,4.353321,-4.165985,2.353963,-4.903671,-0.920003,2.272732,4.835283,8.243572,-4.800984,-4.586228,-2.255156,7.273455,-7.029622,-5.499779,-0.407725,-7.223708,-1.982895,-8.185568,-0.518017,-7.551715,7.317928,-9.248667,-1.225837,8.679207,-3.513951,9.481052,-9.038880,-5.209152,-7.851428,-2.750567,-5.518759,3.674583,6.352543,-1.106617,-4.535127,3.929755,-7.533582,-3.389137,1.510729,4.963230,8.624982,8.169526,-1.198861,-1.731512,-3.585297,0.013010,7.372884,7.399697,-6.657369,-9.085471,2.126449,-0.164914,2.705239,-0.062755,-6.878002,-3.722411,-4.630830,3.429328,9.076831,-7.355403,7.830916,8.099293,-8.530061,1.841541,-1.159290,7.249995,8.170853,-7.987027,2.464971,-4.142344,-4.603188,6.313770,-8.765359,0.603611,2.104287,4.264846,-9.162193,5.389795,3.390983,1.409364,5.918852,0.654404,0.635451,8.627615,1.067295,-3.504469,8.015701,-7.418877,6.836996,0.852635,0.797126,1.746571,5.551276,-6.938471,9.628756,0.385661,7.837269,-7.338240,-0.592248,5.776329,6.549602,9.082274,7.759394,-1.647114,-4.470761,9.520705,-5.262779,6.743192,-3.857112,-5.789141,9.932076,-1.352533,0.095345,5.703450,-5.749500,2.533884,5.705574,-1.541125,-6.134382,4.259176,5.497749,9.535153,6.738264,3.676399,-2.804794,6.836523,0.498502,-6.126050,-2.773266,-2.973426,-4.650665,-7.062232,8.452303,8.563913,3.977078,-4.346642,5.846373,-2.740829,-0.948179,-2.460869,-9.248873,-8.295083,7.059640,-7.290969,4.046354,8.605648,-6.919336,4.949736,-8.680753,2.925006,0.496103,-5.496013,1.927470,5.023265,5.056932,6.749145,4.386685,8.735039,-3.558596,9.215121,9.897672,-1.929102,-5.159448,5.645527,-6.479035,7.969299,-0.828049,-9.664825,-0.963477,8.831900,-3.407421,2.431150,-7.547239,-0.170685,-4.631428,-0.634452,-7.755840,8.123163,-2.512768,-3.099329,-2.020235,-9.968960,9.313499,-4.842616,-3.574737,9.697343,-6.820705,5.843703,-0.317180,-0.678446,3.153162,-1.328279,6.466922,-1.696951,-5.183261,-8.712876,-6.583615,0.879786,6.466358,-3.240876,4.256256,-8.080450,-2.442258,-3.030299,-6.081386,-5.292569,-7.330590,0.683491,-9.623381,2.683306,-2.960122,9.747445,4.267185,8.725420,2.538661,-1.760897,5.625766,-1.770607,-3.938187,-0.912569,8.503973,-5.427571,2.907891,1.359049,-5.217863,-2.957489,-1.122785,6.184195,-4.355850,0.847958,-4.273740,-6.957058,-9.587586,-0.782921,-7.376877,7.313498,1.970122,3.491377,-2.858639,-1.401875,3.708207,7.645570,9.959177,1.232692,8.529753,8.791144,4.022052,-2.650566,-5.879211,-6.946536,1.800501,0.011865,-9.278171,-0.720359,4.787400,0.083305,1.981830,0.171539,5.211947,4.291556,6.337283,4.774669,-4.021693,-2.529647,-8.661094,1.080264,3.672191,-4.246127,0.643854,-0.807800,3.493410,-0.592265,-6.957710,1.524650,-8.673040,6.677933,2.770713,-2.985883,-3.935287,1.925109,-4.767556,-6.659178,5.161918,9.728172,7.866341,3.910062,0.990825,-6.461457,1.668017,1.362645,-9.215840,2.858204,0.309209,7.393433,0.608116,-2.181280,-7.867501,0.178368,3.521187,-0.189800,-6.823808,-0.092616,5.729844,6.585379,-7.292080,8.304948,0.528659,7.669132,-1.461835,-0.649452,5.384195,9.123627,-3.998495,2.873359,9.749315,-0.767282,4.508034,2.841246,8.014927,-2.891002,-9.399081,-0.733896,-4.608226,-0.466013,4.232727,-5.466148,-8.055100,-1.851112,-4.404372,-1.971445,3.463465,0.223905,1.941565,-2.183416,-0.066453,2.906689,-8.526817,-8.289763,7.025099,9.770612,-4.045151,3.860424,-9.084373,6.857485,5.731065,-4.287777,-9.842499,3.686674,3.379544,3.404576,-8.024549,-9.249359,-3.012735,-7.877741,7.957258,-4.371853,2.114173,-0.603737,8.584006,5.162392,-6.492952,-5.305137,9.949528,-0.058617,7.163035,-5.100906,-7.070403,-0.691704,-7.299761,-2.832085,-2.705553,6.533624,-5.668693,7.017116,3.071528,-6.533444,8.513547,-9.891347,9.976974,6.598266,-1.776982,-9.218970,-2.632146,-5.224615,0.399830,-9.491253,2.859493,-1.875206,-5.911129,-6.737101,-9.820768,9.968800,1.988089,-1.750401,-0.731440,0.549222,-9.395740,-7.133443,-9.186324,8.015038,5.659159,7.927122,6.284698,2.486400,-8.962839,7.048750,-1.965121,-7.859406,-1.870434,-5.652835,-5.942750,-0.523891,-8.783581,2.153020,8.760918,-2.579445,-2.588591,4.826905,7.122991,8.015185,-5.228624,-4.391615,7.312640,-9.928203,-6.073725,7.497175,-5.133891,4.899012,-0.139487,6.260957,9.564974,-6.786116,-1.797411,1.500548,-8.833089,9.626259,4.429273,-3.718833,-5.739047,-9.750706,6.075124,2.090533,5.360319,-6.790349,8.390493,8.587174,-1.495650,-6.958221,-1.913523,-2.417453,3.497307,3.439882,-1.776372,3.911916,3.925442,4.545238,0.450603,-9.161328,5.115926,-2.972328,5.945889,7.949353,-3.230067,-3.765837,9.116712,5.934024,-2.994019,5.239531,-0.498753,5.641650,-5.073248,3.015224,0.557173,2.993528,-1.495809,0.887500,2.221244,6.391062,-8.725502,-1.196495,6.486969,-6.112952,3.769052,-1.759798,9.843217,3.121743,-0.955982,8.855532,-9.114920,-9.809213,5.279900,-3.272707,-4.905117,-1.773795,3.815309,-5.488990,-1.757659,-6.489630,-3.288724,-6.903961,-1.368327,6.828502,-2.419111,-1.881763,3.994878,6.175321,-4.457498,-5.155290,-8.107719,-2.943574,6.872830,-0.005110,8.975652,7.469604,6.597815,0.138667,1.465338,-9.948991,-9.108390,2.214463,5.832641,-4.571031,-1.410786,-7.814952,4.206106,0.345574,6.808941,-7.257584,-6.415772,-5.825735,4.014737,-9.851468,-8.794450,-7.576862,6.109225,3.223835,4.514690,0.469807,-9.858874,-0.282283,-5.287847,-3.936884,6.843462,-3.997662,4.960152,6.197281,2.534259,2.427017,-5.560109,-0.673005,3.332844,-5.045000,4.390234,0.519085,7.611414,4.120022,4.663578,9.043151,-8.436846,-1.528869,-5.243477,4.001585,5.877457,3.417264,-1.981381,-6.469537,7.711048,-5.312626,-1.453316,-3.280739,3.985247,8.159284,-3.065213,8.074471,-6.804316,-7.079799,7.048777,-1.133012,-2.905135,-2.822891,8.346969,6.374515,4.515211,9.404300,2.210519,9.385179,3.869801,9.100787,2.086305,9.037655,-4.212520,-0.711297,1.556692,3.301033,1.007158,-7.023839,-9.161635,1.230135,-9.199919,0.211012,3.729314,-3.316204,0.829469,-4.127418,7.358661,-3.859591,9.658555,1.321661,-2.153662,-6.433000,0.822142,-7.001260,-7.143123,8.197758,9.023459,-9.483341,-5.530521,8.368025,-3.088107,-7.524921,7.512734,-4.496999,-4.105018,4.856507,-1.094135,-7.620550,5.547445,5.735391,-0.785232,-5.220411,5.049073,-5.521000,4.062555,8.472026,2.377105,5.146633,-7.672919,9.731221,-9.398458,3.553207,5.475581,-0.048076,3.220940,-3.364969,-3.972558,1.584791,-9.210652,6.721454,4.098110,6.667566,2.739561,-5.725075,-0.234515,-8.373130,-3.094946,9.738957,9.825579,-9.086891,4.378587,-3.968173,0.384333,3.235568,-7.625848,-9.850671,2.921460,-1.877309,-6.968316,4.275828,5.732840,3.559772,3.119176,6.437117,-0.689485,8.737393,-4.362956,-1.893935,5.540520,2.231012,-6.905641,-0.662930,-8.404803,-5.053783,0.686489,7.176059,6.277623,-2.168976,-8.192150,5.054904,-2.448882,-0.156438,9.487270,-2.409186,5.256596,-6.914211,4.448656,5.993540,9.799258,2.679278,4.572324,2.508793,1.988334,-4.860353,5.876395,8.171749,-4.006635,1.238681,-3.164751,2.751727,8.313430,1.880648,-3.384288,-8.803078,2.783904,-3.637660,2.007613,2.619150,7.576518,-3.980191,-5.463257,-6.840441,3.910077,-2.861676,-3.823129,6.514027,3.494552,-4.441640,-8.322638,1.824625,-8.113395,-5.581585,-3.248211,2.540689,7.565438,-6.097448,1.844657,9.094685,-6.925199,-3.181507,3.901050,0.507821,-4.359467,-4.468356,-8.354097,-6.316863,5.648949,-3.940220,7.071555,3.487266,6.754356,-5.096009,6.218350,-1.418650,2.395750,-1.589526,-6.449466,6.084992,7.560728,7.661375,8.652481,5.485109,0.686550,-7.289715,9.827358,4.749823,-0.393402,9.976629,1.557231,1.572414,-5.423659,7.524774,0.883456,6.898684,-1.025075,0.060263,0.810819,-8.995015,-0.759791,8.580587,8.892629,4.972315,-5.911903,0.928807,-9.727566,-4.024022,-8.732157,9.512260,-9.967490,-7.611534,-7.350172,-0.325567,-4.491199,-8.002017,-6.992614,-2.393266,-3.575193,2.964028,-4.116576,6.000346,4.136814,5.391830,4.518780,-4.161943,-1.211160,0.099909,-8.186735,-2.246312,-0.065384,3.462669,-6.079043,-4.312513,6.630004,4.514437,-5.396392,-6.000468,-0.062559,3.975514,4.585370,6.604309,3.044628,-3.631704,-9.974400,-6.700799,0.684526,9.048394,-1.981444,-4.137576,2.542006,8.719228,-2.591022,-4.845617,-1.290411,2.160225,4.690606,3.895530,4.780352,-4.709462,-1.390814,-8.496792,-9.606265,0.910683,-2.704197,7.777569,8.500824,3.084941,-4.903692,-0.495053,-9.545207,-3.636760,-5.241795,-9.608383,2.044693,4.902057,0.820513,5.666277,-7.291950,-3.236595,8.430725,-0.041614,2.194333,-9.345971,9.054011,-7.438694,-5.000212,5.673160,-7.926389,-4.547882,-7.957723,2.942763,-7.197761,-2.041688,1.398952,8.496776,-5.711314,0.965183,9.015632,0.417077,-1.923007,-9.412276,9.697566,0.959399,8.083516,4.970071,3.960121,-4.469889,-3.098473,-6.021829,1.787514,-0.324471,-5.248691,3.429050,2.108481,-9.564570,-3.749352,9.949652,0.829813,9.100700,-6.108628,-7.955342,9.962069,5.139450,5.453977,8.329873,7.912595,-8.948912,0.493931,-6.476372,9.994044,-2.053724,9.341029,0.624882,-4.420669,-3.892219,0.642699,6.732246,4.418856,-8.227039,-9.410645,4.501214,4.858962,3.469796,-6.211233,-9.803093,0.192663,5.627426,-0.575323,4.407514,-4.287525,1.486495,-0.547919,-7.170843,-2.094898,4.587957,7.417646,-2.873588,-5.361907,9.385390,5.523998,-4.847448,3.281995,-7.970994,-0.271040,-1.338115,6.037257,2.575422,-4.914730,7.103867,-2.022353,-0.070003,1.524491,1.032911,-6.125627,-4.462881,-2.272716,-0.223320,7.920313,0.679542,-2.301643,-9.426014,6.264939,-7.579198,6.422714,-1.553202,-6.974328,7.946523,-6.310944,8.016276,-9.924185,-5.060912,0.576331,-8.540103,1.060832,-0.745270,6.832515,5.876225,-5.875332,3.382451,0.620199,-8.753738,-0.087064,-9.620914,-7.615982,9.040756,4.099417,0.781470,5.459832,3.794303,4.736826,-1.861305,-9.561666,6.831933,4.644054,0.870449,2.113353,-3.665075,9.572450,-3.056609,0.264348,-7.344733,0.229338,8.047104,3.301802,-3.157550,-8.232090,-9.219006,-8.944873,-5.758899,-8.594139,6.129334,1.119698,4.924582,-4.684291,-7.570913,9.442086,-7.272459,-8.948854,9.926932,6.450222,-6.862635,2.064073,-4.545754,-7.900238,5.005523,-4.533195,-7.129284,4.986577,1.653708,3.302971,6.871641,-3.318981,-9.690694,5.192342,4.271991,1.809844,-6.563071,-8.184613,-7.901284,8.623643,0.471062,-2.166025,2.217305,3.557691,3.626862,-4.602074,7.534906,7.270398,7.394274,-4.350117,5.146704,-2.867809,-4.072499,-2.054956,-5.947084,-1.070837,-6.030069,8.758592,-0.906875,-6.725699,-8.498932,-4.079873,2.144720,6.843876,-2.116663,6.880318,8.189871,-5.964217,-0.063716,-8.853648,-7.586322,-9.992840,-6.255125,8.097917,-1.042711,-9.952689,-3.052170,9.620423,-0.056488,9.344804,-9.879298,-8.941818,-4.130275,5.848322,-0.699027,8.258330,-0.694718,1.511603,-7.290981,-1.948598,-4.815817,5.831707,2.090868,-1.289375,8.880875,4.803788,7.329239,4.535492,-0.255015,-3.168958,-6.649879,3.376721,-5.547645,1.725381,5.911308,8.241639,1.193902,2.572609,1.904072,-8.377515,2.523171,-0.261723,-0.876353,-0.910503,-7.886969,9.909838,4.017744,-3.229238,9.563621,-7.985249,1.658212,-1.347560,-9.793138,1.669436,8.142513,-2.628235,4.749784,2.119437,-8.740568,-5.728925,5.867241,2.894410,5.406489,-2.287353,-3.311298,4.117897,-2.710070,-2.323484,4.641050,9.185174,6.160134,9.285300,-7.688755,-4.488641,9.208245,-8.814785,-7.078186,1.583230,1.556042,-8.454531,-7.461324,5.255450,9.986708,8.622975,4.337027,-2.083258,-1.428042,-5.288381,-9.097410,9.747419,9.064811,-7.260584,9.133164,1.700233,2.462101,-3.219024,-8.304371,5.996036,3.999873,-0.253180,6.977191,-4.396900,4.434038,-1.194354,8.387224,4.359957,1.402351,9.515131,4.076397,9.849594,-9.956014,-1.356717,0.126414,3.039999,-8.235307,-1.780864,-0.976670,5.988372,7.923007,8.944420,7.058778,2.996560,2.214659,1.576202,-0.797128,0.615672,1.259360,0.245378,5.133941,6.737527,-9.092810,9.793338,-6.775406,-6.240067,3.470227,5.794170,-7.882389,5.588124,0.928185,-6.977692,-6.732332,-0.267535,0.310090,-7.863055,-9.988311,-2.375519,0.776755,5.086355,-4.986660,4.487887,-5.721027,-9.546404,-6.035664,-0.183143,5.785472,9.967628,-5.021276,3.260857,5.081285,1.001034,0.536820,-9.254565,5.588563,7.105700,-6.402354,0.558038,1.413749,8.314558,-0.456594,0.734152,3.045722,5.147274,-6.661343,2.688164,-6.109888,-8.067489,9.141579,6.177231,-4.694181,-8.961706,4.165395,3.085694,-1.534064,-0.575147,-0.155363,-0.351309,-1.530393,-8.171992,-3.080620,-9.477519,-8.298631,-6.064807,-0.103461,-6.399714,-3.965415,9.649812,5.001930,-7.842448,0.749311,-7.529924,-9.951795,1.223647,-5.556334,-0.483688,-9.419004,5.380758,6.476932,-3.661702,0.113362,-7.586651,9.499630,-8.993157,4.381025,-2.113074,7.468365,-6.576521,8.408471,5.404772,1.961770,-5.714384,-7.954773,-7.729113,-0.451693,6.380194,-2.131192,2.551021,3.502032,-4.265565,5.496144,-9.490156,3.346036,-5.802856,-7.292260,-7.559522,7.275067,8.334704,-9.632625,4.159738,-2.521848,5.759305,4.280112,5.573484,-7.609430,0.762434,-1.560538,-8.370167,-7.099518,2.220380,-3.989787,9.763892,-2.880673,-4.435296,-8.006675,6.323239,-8.433752,8.234160,-0.687377,6.100208,-6.863378,-1.704794,-8.193904,-3.682291,9.664299,5.217079,8.172456,-1.837923,-9.764652,0.218990,-6.664565,3.953637,5.122510,-1.498669,7.154685,-4.353494,-2.947421,1.084862,3.039685,-2.704403,9.995563,5.174019,-4.240958,-9.074835,-1.963486,5.239278,3.322396,4.076956,-9.561810,-6.861052,0.176048,6.008643,2.264401,-9.304976,5.607260,3.759701,9.882641,6.614787,-5.803000,-1.324946,1.885096,-0.206631,-4.010915,4.101075,8.758777,1.631819,-9.229999,4.262937,4.168024,7.048187,-0.070815,4.144932,0.285844,0.546757,-8.284885,-7.907236,8.124979,-3.421569,-5.880855,-1.784427,9.234495,4.338891,1.700157,8.812196,-5.176757,8.699899,-2.338239,-5.159157,6.558274,2.434945,1.253636,-8.934655,-5.627544,1.731433,-0.671875,0.239006,2.237878,-3.919633,4.155722,5.674939,-3.898514,-1.267895,7.352064,-3.587208,-6.919657,-2.028248,3.646213,-4.630850,-2.888149,-5.120100,-5.662665,-7.188283,-2.910474,-9.056879,2.606913,-5.774906,-7.231410,-0.055626,8.283177,-7.119044,-8.465141,-1.898535,6.973736,-4.227681,-9.493614,7.586437,-4.941019,-9.013939,-5.995369,-0.621375,-6.002913,0.936254,6.742901,-7.430477,-3.733292,-3.159115,5.039234,-1.709934,3.406666,-4.252388,4.926161,-6.117388,-1.622776,0.874417,8.816595,-2.879514,-0.458202,-4.587378,5.632753,-1.517107,-1.995723,-9.101569,3.666868,-7.700333,0.151057,-7.232337,-3.764881,-3.830435,8.265163,0.803084,3.614322,-3.855386,8.792371,5.834062,8.304971,-6.661366,-9.948257,-2.083543,3.287607,3.449149,1.987580,-1.769508,-0.847906,-0.240598,-5.922388,8.255997,0.342554,2.221194,-9.790772,2.508892,-9.194515,4.163820,6.486586,0.579903,8.976743,9.876113,-7.451923,-1.693237,6.059416,0.460684,6.907309,5.996108,-6.020395,7.899966,-6.815367,5.306224,6.041532,9.609484,-5.747660,5.443298,8.824748,-5.504850,-9.595223,5.018898,-2.817676,5.796124,7.655705,-5.316394,0.614284,-3.183908,5.175369,4.110901,1.746301,1.828977,9.521414,0.127682,0.878948,-0.525566,-3.137279,5.065140,-7.903966,-4.825205,-8.996050,-8.889510,7.167253,6.588441,-6.075311,6.718881,4.742562,5.320721,8.965649,-8.920437,-9.869413,3.412926,-4.238677,3.848133,6.240737,-6.109567,8.536994,-0.696657,0.063238,4.907003,-0.058313,7.552191,8.193951,-0.947463,1.914671,6.480177,4.201431,8.321825,-0.919658,2.583708,-2.153683,5.962285,-1.243647,-6.445476,9.633161,3.441551,-9.561951,4.389040,9.597877,7.279625,-8.498396,-6.212887,8.149346,5.860064,8.613782,4.503555,-0.356400,7.815365,-7.564191,1.789745,7.357665,5.184306,4.804482,8.510423,-5.583845,-1.366396,7.055579,8.393878,-7.315454,-7.366662,6.302976,7.449685,-9.752779,-1.907548,3.479133,-6.769103,-2.167476,-6.658656,9.125582,-9.043294,-7.591843,-4.631433,1.834130,-5.457897,3.428975,2.910665,5.987702,-5.226563,6.049080,-4.079163,-0.955625,0.419122,4.442039,1.410399,9.154712,-6.491445,-8.815958], dtype = "float64")#candidate|3819|(2730,)|const|float64
call_3815 = relay.TupleGetItem(func_3084_call(relay.reshape(var_3816.astype('float64'), [3, 10, 12]), relay.reshape(const_3817.astype('int64'), [48,]), relay.reshape(var_3818.astype('int64'), [1, 384]), relay.reshape(var_3816.astype('float64'), [3, 10, 12]), relay.reshape(const_3819.astype('float64'), [2730,]), ), 0)
call_3820 = relay.TupleGetItem(func_3091_call(relay.reshape(var_3816.astype('float64'), [3, 10, 12]), relay.reshape(const_3817.astype('int64'), [48,]), relay.reshape(var_3818.astype('int64'), [1, 384]), relay.reshape(var_3816.astype('float64'), [3, 10, 12]), relay.reshape(const_3819.astype('float64'), [2730,]), ), 0)
func_3244_call = mod.get_global_var('func_3244')
func_3246_call = mutated_mod.get_global_var('func_3246')
call_3826 = relay.TupleGetItem(func_3244_call(), 0)
call_3827 = relay.TupleGetItem(func_3246_call(), 0)
output = relay.Tuple([call_3804,call_3815,var_3816,const_3817,var_3818,const_3819,call_3826,])
output2 = relay.Tuple([call_3805,call_3820,var_3816,const_3817,var_3818,const_3819,call_3827,])
func_3828 = relay.Function([var_3816,var_3818,], output)
mod['func_3828'] = func_3828
mod = relay.transform.InferType()(mod)
mutated_mod['func_3828'] = func_3828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3828_call = mutated_mod.get_global_var('func_3828')
var_3830 = relay.var("var_3830", dtype = "float64", shape = (360,))#candidate|3830|(360,)|var|float64
var_3831 = relay.var("var_3831", dtype = "int64", shape = (384,))#candidate|3831|(384,)|var|int64
call_3829 = func_3828_call(var_3830,var_3831,)
output = call_3829
func_3832 = relay.Function([var_3830,var_3831,], output)
mutated_mod['func_3832'] = func_3832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mod.get_global_var('func_3244')
func_3246_call = mutated_mod.get_global_var('func_3246')
call_3870 = relay.TupleGetItem(func_3244_call(), 0)
call_3871 = relay.TupleGetItem(func_3246_call(), 0)
uop_3917 = relay.acosh(call_3870.astype('float32')) # shape=(10, 3, 7)
uop_3919 = relay.acosh(call_3871.astype('float32')) # shape=(10, 3, 7)
func_3599_call = mod.get_global_var('func_3599')
func_3602_call = mutated_mod.get_global_var('func_3602')
const_3931 = relay.const([-4,6,-1,2,-8,6,1,5,2,8,-10,2,-4,-10,-7,-2,-10,-2,9,-1,-4,7,6,7,-3,-7,7,-9,-10,-3,7,-9,-4,-6,-7,-4,-5,8,-4,-9,-7,10,-8,7,9,6,-7,-1,-7,8,5,5,-2,3,-6,-2,1,-1,10,-8,1,-5,10,-1,-4,-9,10,10,6,5,6,-7,9,7,-7,8,-10,6,8,6,-6,-2,-8,-6,6,8,-1,10,-4,-9,1,-9,-10,-10,2,-10,-1,-5,-5,-5,4,-4,10,-5,10,-7,1,1,-3,-10,8,-5,2,-10,-1,-9,-10,-2,-8,7,2,8,-2,-7,-3,9,-6,-10,4,-5,-7,-2,9,9,4,5,2,1,6,8,-4,-1,-1,9,1,2,2,6,9,-9,3,-9,9,10,10,5,7,6,-6,-5,3,-4,-3,-6,-6,-7,9,8,8,5,8,-3,7,4,6,-10,-9,2,5,-6,3,1,-9,-1,-7,-6,8,1,-9,-9,-6,-2,3,9,-1,8,10,5,-8,-8,-5,-1,4,-8,-9,-5,-6,-4,-10,5,-9,7,-2,-1,-1,7,-5,-8,-4,-1,-5,-10,5,8,-6,-9,7,6,-8,-4,-6,-4,-1,10,-3,8,9,-9,-1,-2,-3,4,6,-1,-7,-3,6,-5,-4,-2,-8,-4,-10,1,-1,8,3,4,-4,-4,-8,3,6,2,-3,-6,-7,-7,-3,-8,-1,-8,10,2,7,-4,-4,-10,5,10,-8,-10,-7,4,5,-4,-10,-9,-6,-4,-8,9,-5,2,-3,-9,-7,8,8,-3,5,1,2,6,2,9,8,2,9,5,-4,-4,5,-6,5,-8,-7,-6,9,-4,-1,3,-3,3,6,-5,-4,3,3,4,9,8,3,4,5,-4,-3,6,-1,7,8,-10,-2,-2,4,-3,-2,-8,7,6,10,-6,7,8,-10,-7,-8,1,-2,7,10,1,-2,-4,3,-9,-2,-5,-7,-8,9,-5,2,8,-8,-2,-4,-8,-3,3,4,8,-7,8,-5,10,10,2,-1,6,3,8,10,-2,-10,-9,-9,4,-10,-9,-7,-1,-8,10,3,-1,-5,-4,6,-8,-2,-3,-3,-8,-9,2,-8,4,-7,-5,2,7,-6,-2,8,9,8,5,-10,6,10,7,10,5,-8,8,-8,-9,7,-7,3,6,-9,-3,-4,10,7,-3,3,-6,8,-2,10,-1,5,3,3,9,2,2,-3,1,2,-10,-10,7,-2,-6,-2,-1,-6,-7,6,10,-10,-6,-5,-6,9,-3,4,-10,-8,-1,5,9,8,10,-2,4,1,8,6,-4,-1,7,6,4,-6,-6,8,-2,-9,-2,3,6,7,1,-9,-10,3,-8,7,-2,-8,3,2,-2,-8,-6,10,6,-8,-1,-1,9,-8,-2,10,7,-10,6,6,7,-2,-4,4,10,-6,-9,1,2,7,-6,7,7,-2,1,10,-3,-8,-7,-8,4,-7,2,1,9,7,4,-9,-1,-3,10,-10,-6,-1,-3,-9,10,10,-5,-5,8,4,-3,-3,5,-7,-7,-7,7,7,6,7,-3,-9,7,-7,-5,6,-3,4,-3,2,-10,-7,10,5,2,-1,8,-5,5,9,-4,-9,4,-4,6,10,-8,3,1,-1,1,-7,-5,3,6,-1,-10,7,6,2,-9,10,-9,5,-2,-10,2,1,2,7,-9,-8,1,-3,-7], dtype = "uint8")#candidate|3931|(640,)|const|uint8
call_3930 = relay.TupleGetItem(func_3599_call(relay.reshape(const_3931.astype('uint8'), [640,])), 1)
call_3932 = relay.TupleGetItem(func_3602_call(relay.reshape(const_3931.astype('uint8'), [640,])), 1)
output = relay.Tuple([uop_3917,call_3930,const_3931,])
output2 = relay.Tuple([uop_3919,call_3932,const_3931,])
func_3934 = relay.Function([], output)
mod['func_3934'] = func_3934
mod = relay.transform.InferType()(mod)
output = func_3934()
func_3935 = relay.Function([], output)
mutated_mod['func_3935'] = func_3935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3293_call = mod.get_global_var('func_3293')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_3973 = relay.TupleGetItem(func_3293_call(), 2)
call_3974 = relay.TupleGetItem(func_3294_call(), 2)
uop_3978 = relay.exp(call_3973.astype('float32')) # shape=(96, 4)
uop_3980 = relay.exp(call_3974.astype('float32')) # shape=(96, 4)
output = relay.Tuple([uop_3978,])
output2 = relay.Tuple([uop_3980,])
func_3983 = relay.Function([], output)
mod['func_3983'] = func_3983
mod = relay.transform.InferType()(mod)
output = func_3983()
func_3984 = relay.Function([], output)
mutated_mod['func_3984'] = func_3984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3505_call = mod.get_global_var('func_3505')
func_3507_call = mutated_mod.get_global_var('func_3507')
call_4066 = func_3505_call()
call_4067 = func_3505_call()
const_4073 = relay.const([[[-7.187364,-2.585412,9.073566,-1.678281,2.002001,0.078781,7.963448],[2.102185,-2.614903,-8.828358,8.379903,0.560207,9.102507,-7.711126],[1.313769,-0.422486,-2.730248,-6.540996,0.834984,-7.498017,-5.651044]],[[3.535188,-2.676770,-6.904728,7.027445,5.096847,-6.591605,-0.508336],[9.993166,-1.632437,-9.469535,-5.448658,1.571861,-7.001958,7.178648],[4.816518,-4.773246,9.899919,4.523968,-2.047660,3.978090,-3.372030]],[[-6.852941,6.444684,4.970203,-7.503629,-8.988662,-5.046513,7.615977],[-0.535172,-1.696141,-7.063354,-4.378563,4.673787,-4.961180,-3.006995],[8.097761,8.248039,-4.080638,6.058535,-7.853920,2.233180,1.582057]],[[-3.370513,1.803403,4.091317,4.954437,-6.548087,-8.611741,0.610473],[7.251823,-0.488314,-1.198373,-6.191506,-0.596328,-2.019546,9.770248],[3.185817,-8.493569,-6.661195,-1.858789,5.654069,6.772137,1.619408]],[[0.611946,-4.980441,8.167296,3.729174,-4.864092,-0.512394,-1.146858],[8.600737,-5.975450,-4.981048,0.209432,-7.115270,-3.901484,3.761338],[-8.695905,2.496708,0.192527,-2.240331,-9.677626,6.970303,-3.071172]],[[8.552498,-5.909366,-5.477113,7.856459,8.488574,5.078134,-6.667247],[8.210225,-7.899548,7.712515,4.806281,9.526100,7.958537,-8.200885],[2.688459,-7.655456,3.130105,1.208092,3.240520,-4.824540,1.517596]],[[4.354707,9.187095,7.302757,-2.877448,-2.633008,-3.189883,9.355016],[9.424551,-8.111480,-5.831979,-8.838145,0.498547,-2.308909,-7.401075],[-7.660890,-4.465182,-8.600879,-8.089866,8.455252,-3.886386,7.216271]],[[-3.711266,-8.347940,-1.521680,-6.601806,7.162700,-7.174378,-5.067675],[3.391952,1.691781,0.572253,1.263633,5.649311,2.570308,-5.307058],[-0.605980,-4.178666,6.306102,1.979551,1.817897,-3.228093,-0.688832]],[[-0.511517,0.847498,7.239168,7.647144,4.149480,-8.110998,-8.865088],[7.705665,5.112616,-1.112588,-9.804471,-0.865831,9.788604,3.493913],[-3.672862,-6.692177,5.119801,1.020493,-0.059510,5.721658,0.591048]],[[0.563558,7.411971,8.114699,-1.659575,7.254203,4.581904,-7.692688],[8.135940,-3.997781,2.007633,-5.706765,8.219829,-9.310812,-5.983552],[4.394519,3.660624,-2.570475,8.643762,-4.586141,0.370804,7.745176]]], dtype = "float64")#candidate|4073|(10, 3, 7)|const|float64
bop_4074 = relay.bitwise_or(call_4066.astype('uint16'), relay.reshape(const_4073.astype('uint16'), relay.shape_of(call_4066))) # shape=(10, 3, 7)
bop_4077 = relay.bitwise_or(call_4067.astype('uint16'), relay.reshape(const_4073.astype('uint16'), relay.shape_of(call_4067))) # shape=(10, 3, 7)
output = bop_4074
output2 = bop_4077
func_4078 = relay.Function([], output)
mod['func_4078'] = func_4078
mod = relay.transform.InferType()(mod)
mutated_mod['func_4078'] = func_4078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4078_call = mutated_mod.get_global_var('func_4078')
call_4079 = func_4078_call()
output = call_4079
func_4080 = relay.Function([], output)
mutated_mod['func_4080'] = func_4080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3983_call = mod.get_global_var('func_3983')
func_3984_call = mutated_mod.get_global_var('func_3984')
call_4149 = relay.TupleGetItem(func_3983_call(), 0)
call_4150 = relay.TupleGetItem(func_3984_call(), 0)
output = relay.Tuple([call_4149,])
output2 = relay.Tuple([call_4150,])
func_4151 = relay.Function([], output)
mod['func_4151'] = func_4151
mod = relay.transform.InferType()(mod)
output = func_4151()
func_4152 = relay.Function([], output)
mutated_mod['func_4152'] = func_4152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3934_call = mod.get_global_var('func_3934')
func_3935_call = mutated_mod.get_global_var('func_3935')
call_4219 = relay.TupleGetItem(func_3934_call(), 1)
call_4220 = relay.TupleGetItem(func_3935_call(), 1)
const_4229 = relay.const([[[False,True,False,True,True],[True,True,False,False,True],[False,False,False,True,False],[False,True,True,True,False],[False,False,False,False,False],[True,False,False,True,True],[False,True,False,True,False],[False,False,False,False,False]],[[True,False,True,True,True],[True,True,True,False,False],[True,False,True,True,True],[True,False,True,True,True],[True,True,False,True,False],[False,True,True,False,True],[True,False,False,False,True],[True,True,True,False,True]],[[True,True,False,False,False],[True,True,False,False,False],[True,True,False,True,True],[False,False,False,True,False],[False,True,False,False,True],[False,True,True,True,False],[False,False,True,False,True],[False,True,False,False,False]],[[True,False,True,True,True],[False,True,True,True,True],[False,True,False,False,True],[True,False,False,False,True],[False,True,False,False,True],[True,False,True,True,False],[True,False,False,False,True],[False,True,True,True,False]],[[False,True,True,False,False],[False,True,False,False,False],[False,True,True,False,True],[False,True,True,True,False],[True,False,True,False,True],[False,False,False,True,True],[False,True,True,True,True],[True,True,True,True,True]],[[True,True,False,False,True],[True,False,False,False,False],[True,False,False,False,False],[True,False,False,True,False],[True,True,True,False,False],[True,True,True,False,True],[True,True,False,True,True],[False,True,True,False,True]],[[True,True,True,False,True],[True,True,False,True,True],[False,True,False,True,True],[True,False,True,False,False],[False,True,True,False,True],[False,False,False,False,True],[True,True,False,True,True],[False,False,True,False,False]],[[False,False,True,False,True],[False,True,False,True,False],[False,True,True,False,False],[False,False,False,False,False],[True,False,False,False,True],[True,False,True,False,False],[True,False,False,False,True],[True,True,False,True,False]],[[False,False,False,False,False],[False,False,False,False,True],[True,False,True,True,False],[False,False,False,True,True],[False,True,True,False,True],[False,True,False,True,True],[True,True,True,True,True],[True,True,False,True,True]],[[True,False,True,False,True],[True,False,False,True,True],[True,True,False,False,True],[False,True,True,False,False],[False,True,True,True,False],[True,False,True,True,True],[True,False,False,False,False],[True,False,False,True,True]],[[True,False,True,False,True],[False,False,False,True,False],[False,True,False,True,False],[False,False,False,False,True],[False,True,True,False,True],[True,True,True,True,True],[True,True,True,False,True],[False,False,True,False,False]],[[True,False,True,True,False],[False,False,False,False,False],[False,False,True,True,False],[False,True,False,False,False],[True,True,True,False,True],[False,True,True,True,True],[True,True,False,True,False],[False,True,False,False,True]],[[False,False,False,True,False],[False,False,True,False,False],[True,True,True,True,False],[False,True,True,True,True],[False,True,False,False,False],[False,False,True,True,True],[False,True,True,False,True],[True,True,True,False,True]],[[True,False,True,False,True],[True,False,False,False,True],[True,False,False,True,True],[False,False,True,True,True],[False,False,False,False,False],[True,True,True,False,False],[True,True,False,False,True],[True,True,True,True,True]],[[True,True,True,True,False],[False,False,False,False,True],[True,False,True,False,False],[False,True,False,True,False],[False,False,True,False,False],[True,True,True,False,False],[False,True,True,False,True],[False,False,True,False,False]],[[False,False,True,False,False],[True,False,True,True,True],[True,True,False,True,True],[False,False,False,False,False],[True,False,False,False,False],[True,False,True,False,True],[True,False,True,False,False],[True,False,False,False,True]]], dtype = "bool")#candidate|4229|(16, 8, 5)|const|bool
bop_4230 = relay.mod(call_4219.astype('float64'), relay.reshape(const_4229.astype('float64'), relay.shape_of(call_4219))) # shape=(16, 8, 5)
bop_4233 = relay.mod(call_4220.astype('float64'), relay.reshape(const_4229.astype('float64'), relay.shape_of(call_4220))) # shape=(16, 8, 5)
func_3244_call = mod.get_global_var('func_3244')
func_3246_call = mutated_mod.get_global_var('func_3246')
call_4236 = relay.TupleGetItem(func_3244_call(), 0)
call_4237 = relay.TupleGetItem(func_3246_call(), 0)
output = relay.Tuple([bop_4230,call_4236,])
output2 = relay.Tuple([bop_4233,call_4237,])
func_4260 = relay.Function([], output)
mod['func_4260'] = func_4260
mod = relay.transform.InferType()(mod)
output = func_4260()
func_4261 = relay.Function([], output)
mutated_mod['func_4261'] = func_4261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3983_call = mod.get_global_var('func_3983')
func_3984_call = mutated_mod.get_global_var('func_3984')
call_4273 = relay.TupleGetItem(func_3983_call(), 0)
call_4274 = relay.TupleGetItem(func_3984_call(), 0)
output = relay.Tuple([call_4273,])
output2 = relay.Tuple([call_4274,])
func_4282 = relay.Function([], output)
mod['func_4282'] = func_4282
mod = relay.transform.InferType()(mod)
output = func_4282()
func_4283 = relay.Function([], output)
mutated_mod['func_4283'] = func_4283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3505_call = mod.get_global_var('func_3505')
func_3507_call = mutated_mod.get_global_var('func_3507')
call_4354 = func_3505_call()
call_4355 = func_3505_call()
func_3983_call = mod.get_global_var('func_3983')
func_3984_call = mutated_mod.get_global_var('func_3984')
call_4356 = relay.TupleGetItem(func_3983_call(), 0)
call_4357 = relay.TupleGetItem(func_3984_call(), 0)
output = relay.Tuple([call_4354,call_4356,])
output2 = relay.Tuple([call_4355,call_4357,])
func_4369 = relay.Function([], output)
mod['func_4369'] = func_4369
mod = relay.transform.InferType()(mod)
output = func_4369()
func_4370 = relay.Function([], output)
mutated_mod['func_4370'] = func_4370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4369_call = mod.get_global_var('func_4369')
func_4370_call = mutated_mod.get_global_var('func_4370')
call_4371 = relay.TupleGetItem(func_4369_call(), 1)
call_4372 = relay.TupleGetItem(func_4370_call(), 1)
func_514_call = mod.get_global_var('func_514')
func_518_call = mutated_mod.get_global_var('func_518')
const_4374 = relay.const([6.181958,7.235977,3.832126,-6.935004,4.590676,9.405768,2.510004,9.506911,3.317229,7.615617,-4.565471,1.940982,-5.836041,-6.942043,1.095334,4.271914,0.565679,-4.593528], dtype = "float64")#candidate|4374|(18,)|const|float64
const_4375 = relay.const([6.480334,-6.609127,-4.719337,-4.240525,1.834644,-5.782163,8.717566,-3.324240,2.796535,9.280155,-1.773646,9.012101,-9.014974,1.715422,8.084348,-9.926155,3.308321,8.442750,-2.017758,5.315671,0.626482,-5.395276,2.497253,2.709883,2.849545,-5.687677,7.677784,7.391864,8.497437,7.576516,-6.124476,2.764564,-2.896556,5.818657,-9.926638,3.529183,-9.503906,-9.824216,-8.851739,2.584956,-9.222151,8.400321,3.012760,8.138749,8.851924,0.828779,-3.299747,-5.811013,-1.521692,-2.731177,-5.483047,-5.935458,3.643667,7.712208,-3.619596,3.272168,-5.154353,9.507935,0.868176,-9.277333,0.448512,-6.405122,-6.986726,8.241119,4.747516,6.980592,0.906965,-0.237747,-4.353183,-0.282981,-1.008660,1.075257,-5.084199,1.806168,-0.550707,6.766830,3.499003,4.558365,-1.754126,-0.689137,-6.413167,0.451787,-3.867232,-4.441092,3.416100,6.598421,-7.370784,-7.742127,2.211646,1.787710,5.400765,-3.788822,-0.528967,-2.166607,-1.116073,-3.307655,-2.485793,-5.999489,-6.180449,7.777973,4.421545,7.189251,-5.684558,-9.988315,8.846935,1.605555,-0.183453,-1.324129,7.132474,9.275054,6.500560,0.563602,-7.866577,-3.766720,-0.547077,-1.870883,4.569001,-7.880690,-7.675954,7.306036,-5.058184,-9.244228,-2.544031,4.163243,-4.107285,7.846006,3.199348,0.498997,-2.966769,-0.020837,-3.464752,-5.634170,-5.027736,4.990723,-3.077041,9.294958,5.003979,8.628726,-3.891466,0.163603,-1.283488,-1.940407,2.054667,1.326946,-0.176305,2.946157,-6.169369,-2.999236,-3.118281,1.203854,-4.028572,8.168254,4.968507,-0.753436,2.740026,-0.351951,-7.361085,4.411884,-3.983962,-0.645568,-8.913124,5.780974,9.587239,-5.829937,8.901085,-7.613447,-6.753489,9.872639,1.055789,9.178758,-1.081880,-1.081300,-0.836935,-2.156074,-0.609552,0.588506,-4.229761,1.431109,-9.405189,9.619809,-5.271481,-4.508159,5.198888,-7.592931,8.344590,-0.924345,6.130286,-4.433369,-5.428191,-6.156092,5.643041,-3.132901,2.322084,-9.919864,7.354240,9.733663,4.238792,-7.257595], dtype = "float64")#candidate|4375|(198,)|const|float64
call_4373 = func_514_call(relay.reshape(const_4374.astype('float64'), [2, 9, 1]), relay.reshape(const_4375.astype('float64'), [2, 9, 11]), )
call_4376 = func_514_call(relay.reshape(const_4374.astype('float64'), [2, 9, 1]), relay.reshape(const_4375.astype('float64'), [2, 9, 11]), )
output = relay.Tuple([call_4371,call_4373,const_4374,const_4375,])
output2 = relay.Tuple([call_4372,call_4376,const_4374,const_4375,])
func_4380 = relay.Function([], output)
mod['func_4380'] = func_4380
mod = relay.transform.InferType()(mod)
output = func_4380()
func_4381 = relay.Function([], output)
mutated_mod['func_4381'] = func_4381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4151_call = mod.get_global_var('func_4151')
func_4152_call = mutated_mod.get_global_var('func_4152')
call_4391 = relay.TupleGetItem(func_4151_call(), 0)
call_4392 = relay.TupleGetItem(func_4152_call(), 0)
output = call_4391
output2 = call_4392
func_4396 = relay.Function([], output)
mod['func_4396'] = func_4396
mod = relay.transform.InferType()(mod)
mutated_mod['func_4396'] = func_4396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4396_call = mutated_mod.get_global_var('func_4396')
call_4397 = func_4396_call()
output = call_4397
func_4398 = relay.Function([], output)
mutated_mod['func_4398'] = func_4398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mod.get_global_var('func_3244')
func_3246_call = mutated_mod.get_global_var('func_3246')
call_4456 = relay.TupleGetItem(func_3244_call(), 0)
call_4457 = relay.TupleGetItem(func_3246_call(), 0)
func_2238_call = mod.get_global_var('func_2238')
func_2245_call = mutated_mod.get_global_var('func_2245')
var_4476 = relay.var("var_4476", dtype = "uint32", shape = ())#candidate|4476|()|var|uint32
var_4477 = relay.var("var_4477", dtype = "uint32", shape = (1, 432))#candidate|4477|(1, 432)|var|uint32
var_4478 = relay.var("var_4478", dtype = "int16", shape = (2, 840))#candidate|4478|(2, 840)|var|int16
var_4479 = relay.var("var_4479", dtype = "int32", shape = (660,))#candidate|4479|(660,)|var|int32
call_4475 = relay.TupleGetItem(func_2238_call(relay.reshape(var_4476.astype('uint32'), []), relay.reshape(var_4477.astype('uint32'), [6, 8, 9]), relay.reshape(var_4478.astype('int16'), [2, 840]), relay.reshape(var_4477.astype('uint32'), [6, 8, 9]), relay.reshape(call_4456.astype('float64'), [210,]), relay.reshape(var_4479.astype('int32'), [660,]), ), 4)
call_4480 = relay.TupleGetItem(func_2245_call(relay.reshape(var_4476.astype('uint32'), []), relay.reshape(var_4477.astype('uint32'), [6, 8, 9]), relay.reshape(var_4478.astype('int16'), [2, 840]), relay.reshape(var_4477.astype('uint32'), [6, 8, 9]), relay.reshape(call_4456.astype('float64'), [210,]), relay.reshape(var_4479.astype('int32'), [660,]), ), 4)
func_4282_call = mod.get_global_var('func_4282')
func_4283_call = mutated_mod.get_global_var('func_4283')
call_4495 = relay.TupleGetItem(func_4282_call(), 0)
call_4496 = relay.TupleGetItem(func_4283_call(), 0)
func_588_call = mod.get_global_var('func_588')
func_591_call = mutated_mod.get_global_var('func_591')
call_4498 = func_588_call(relay.reshape(var_4476.astype('int32'), []), relay.reshape(call_4495.astype('int32'), [6, 4, 16]), )
call_4499 = func_588_call(relay.reshape(var_4476.astype('int32'), []), relay.reshape(call_4495.astype('int32'), [6, 4, 16]), )
func_3505_call = mod.get_global_var('func_3505')
func_3507_call = mutated_mod.get_global_var('func_3507')
call_4510 = func_3505_call()
call_4511 = func_3505_call()
func_2238_call = mod.get_global_var('func_2238')
func_2245_call = mutated_mod.get_global_var('func_2245')
call_4514 = relay.TupleGetItem(func_2238_call(relay.reshape(var_4476.astype('uint32'), []), relay.reshape(call_4475.astype('uint32'), [6, 8, 9]), relay.reshape(var_4478.astype('int16'), [2, 840]), relay.reshape(var_4477.astype('uint32'), [6, 8, 9]), relay.reshape(call_4510.astype('float64'), [210,]), relay.reshape(var_4479.astype('int32'), [660,]), ), 2)
call_4515 = relay.TupleGetItem(func_2245_call(relay.reshape(var_4476.astype('uint32'), []), relay.reshape(call_4475.astype('uint32'), [6, 8, 9]), relay.reshape(var_4478.astype('int16'), [2, 840]), relay.reshape(var_4477.astype('uint32'), [6, 8, 9]), relay.reshape(call_4510.astype('float64'), [210,]), relay.reshape(var_4479.astype('int32'), [660,]), ), 2)
output = relay.Tuple([call_4456,call_4475,var_4476,var_4477,var_4478,var_4479,call_4495,call_4498,call_4510,call_4514,])
output2 = relay.Tuple([call_4457,call_4480,var_4476,var_4477,var_4478,var_4479,call_4496,call_4499,call_4511,call_4515,])
func_4522 = relay.Function([var_4476,var_4477,var_4478,var_4479,], output)
mod['func_4522'] = func_4522
mod = relay.transform.InferType()(mod)
var_4523 = relay.var("var_4523", dtype = "uint32", shape = ())#candidate|4523|()|var|uint32
var_4524 = relay.var("var_4524", dtype = "uint32", shape = (1, 432))#candidate|4524|(1, 432)|var|uint32
var_4525 = relay.var("var_4525", dtype = "int16", shape = (2, 840))#candidate|4525|(2, 840)|var|int16
var_4526 = relay.var("var_4526", dtype = "int32", shape = (660,))#candidate|4526|(660,)|var|int32
output = func_4522(var_4523,var_4524,var_4525,var_4526,)
func_4527 = relay.Function([var_4523,var_4524,var_4525,var_4526,], output)
mutated_mod['func_4527'] = func_4527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4151_call = mod.get_global_var('func_4151')
func_4152_call = mutated_mod.get_global_var('func_4152')
call_4568 = relay.TupleGetItem(func_4151_call(), 0)
call_4569 = relay.TupleGetItem(func_4152_call(), 0)
func_482_call = mod.get_global_var('func_482')
func_485_call = mutated_mod.get_global_var('func_485')
const_4571 = relay.const([[-8,6,-5,-5,-9,-9,-5,8,-9,8,5,2,5,-2,1,8,3,7,3,6,-4,10,-5,5,-9,7,-9,9,2,2,9,1,7,2,1,3,7,7,2,-6,-4,-5,4,8,5,-9,3,-8,9,-10,8,-6,-7,-6,4,1,7,-3,-10,-6,3,1,5,-4,-7,-5],[-6,-1,3,-3,9,6,-8,4,-10,-2,6,-6,-1,7,5,-5,2,-5,3,-3,9,-8,-8,6,-5,-8,-2,-5,-7,2,-4,-4,-5,1,-6,-10,-4,6,3,8,8,2,-4,-2,-9,2,3,8,-6,4,3,-9,-6,-7,-4,-8,4,-4,-7,9,1,9,-7,2,10,-5],[3,8,-8,-8,-3,-7,-8,-5,-7,3,4,-4,3,-4,1,3,-5,3,9,8,-8,9,5,-1,6,2,7,3,-1,2,8,8,-8,9,-10,9,9,4,-10,6,-10,-8,-6,7,-1,1,-4,-5,10,10,-8,-10,5,-2,-10,2,9,-6,-2,2,2,5,2,8,3,-2],[5,9,-7,-6,9,6,10,1,-5,-5,6,-2,-1,10,6,-4,-5,2,4,-6,8,1,6,-9,-4,-7,-6,1,-7,9,3,6,-8,10,8,5,10,3,-7,-4,-7,-3,9,-8,5,2,3,-7,-8,-3,3,-4,1,6,8,-8,2,-7,7,1,-5,1,-3,-8,-5,9],[6,-10,1,-4,-7,-5,6,-2,-7,7,6,-7,8,9,-6,-1,2,-1,7,-3,2,3,-7,-2,-8,6,9,-10,-1,-10,7,-3,-5,3,2,6,3,-1,-4,7,-2,-5,-8,-9,4,-8,-3,4,-5,-9,3,8,-7,-10,-2,5,2,6,-5,-9,-4,-3,-7,-4,4,-7],[1,6,-6,10,-5,-3,-5,7,4,2,-4,-7,-2,3,-8,-2,8,8,-4,2,-3,6,-4,1,-10,7,8,5,9,-5,-8,6,4,-10,4,10,6,7,-9,-1,-1,-3,4,-8,-5,10,9,1,-9,6,2,-3,9,10,8,7,10,10,-9,7,-1,-9,-2,-6,1,4],[-7,2,7,-6,-1,-8,-4,-7,7,6,10,8,6,-2,-7,10,5,10,2,-9,-8,8,-5,4,8,8,5,-9,-2,-10,9,-3,-10,6,-8,8,2,-9,-8,7,-2,3,10,10,3,1,8,6,-4,1,-5,-1,5,-4,-10,9,7,-9,2,-9,9,-8,-1,-4,-5,10],[-6,-1,-8,1,5,9,-2,8,-8,-10,6,-4,2,-3,-7,-1,3,-3,6,-10,4,4,10,1,-1,-6,10,-6,-2,-1,4,-9,5,-10,5,-5,-3,-6,-3,4,-9,2,2,2,-9,-2,-9,1,-4,7,5,10,-1,1,-7,-7,-7,6,7,3,2,-8,-8,-5,4,-2],[3,6,-2,7,4,-6,3,8,9,-3,-9,-2,-1,-9,-2,-3,7,-9,8,8,2,-1,-3,2,-4,-3,-5,2,-5,-1,4,-1,5,9,8,3,1,-2,7,-6,-8,-4,7,10,-6,6,9,8,7,-7,-5,4,6,-10,-9,-4,9,-3,5,-6,-6,-1,-10,-9,6,-2],[6,-7,-2,-7,-7,-2,-10,-1,-8,-6,-9,-1,5,8,6,4,-5,-6,10,-2,6,-3,10,-3,-3,5,7,-3,-6,6,10,-5,1,-6,7,-1,-3,-1,-8,-1,5,-5,2,5,-8,1,10,-4,7,5,-7,7,9,-3,4,10,-2,4,-4,5,9,-9,-9,-2,-3,8]], dtype = "int32")#candidate|4571|(10, 66)|const|int32
call_4570 = relay.TupleGetItem(func_482_call(relay.reshape(const_4571.astype('int32'), [330, 2])), 3)
call_4572 = relay.TupleGetItem(func_485_call(relay.reshape(const_4571.astype('int32'), [330, 2])), 3)
output = relay.Tuple([call_4568,call_4570,const_4571,])
output2 = relay.Tuple([call_4569,call_4572,const_4571,])
func_4575 = relay.Function([], output)
mod['func_4575'] = func_4575
mod = relay.transform.InferType()(mod)
output = func_4575()
func_4576 = relay.Function([], output)
mutated_mod['func_4576'] = func_4576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4078_call = mod.get_global_var('func_4078')
func_4080_call = mutated_mod.get_global_var('func_4080')
call_4597 = func_4078_call()
call_4598 = func_4078_call()
func_1192_call = mod.get_global_var('func_1192')
func_1194_call = mutated_mod.get_global_var('func_1194')
const_4600 = relay.const([-4.409016,4.361003,-2.760907,1.802016,-0.230656,-0.022417,8.592937,-9.066699,1.249726,-0.265359,-4.511264,-0.023834,-2.437187,8.912958,0.919878,0.240356,4.466511,9.997974,-9.603023,-7.177594,-2.205057,-1.099563,7.606002,-8.009637], dtype = "float32")#candidate|4600|(24,)|const|float32
call_4599 = relay.TupleGetItem(func_1192_call(relay.reshape(const_4600.astype('float32'), [1, 3, 8])), 0)
call_4601 = relay.TupleGetItem(func_1194_call(relay.reshape(const_4600.astype('float32'), [1, 3, 8])), 0)
output = relay.Tuple([call_4597,call_4599,const_4600,])
output2 = relay.Tuple([call_4598,call_4601,const_4600,])
func_4602 = relay.Function([], output)
mod['func_4602'] = func_4602
mod = relay.transform.InferType()(mod)
mutated_mod['func_4602'] = func_4602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4602_call = mutated_mod.get_global_var('func_4602')
call_4603 = func_4602_call()
output = call_4603
func_4604 = relay.Function([], output)
mutated_mod['func_4604'] = func_4604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4575_call = mod.get_global_var('func_4575')
func_4576_call = mutated_mod.get_global_var('func_4576')
call_4615 = relay.TupleGetItem(func_4575_call(), 2)
call_4616 = relay.TupleGetItem(func_4576_call(), 2)
output = call_4615
output2 = call_4616
func_4619 = relay.Function([], output)
mod['func_4619'] = func_4619
mod = relay.transform.InferType()(mod)
mutated_mod['func_4619'] = func_4619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4619_call = mutated_mod.get_global_var('func_4619')
call_4620 = func_4619_call()
output = call_4620
func_4621 = relay.Function([], output)
mutated_mod['func_4621'] = func_4621
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4631 = relay.const([[[6.700222,-1.857010],[7.259270,-6.791217],[9.737724,-9.160510],[7.473187,9.177127],[-6.312929,-5.293012],[-1.139427,9.880709],[-8.751133,1.848569],[-7.173348,9.684000],[-1.158756,3.442512]],[[8.038532,2.983687],[5.577393,-9.653112],[-2.994458,-5.028780],[8.295231,-7.854340],[3.643928,6.066959],[6.033841,-5.399284],[2.379031,9.144811],[1.533285,3.813654],[4.888228,8.486189]],[[6.872025,7.128508],[-2.938863,-7.067435],[7.854258,4.117483],[5.297795,-5.465492],[2.209377,-4.275858],[-7.849124,-6.507017],[-4.342638,-4.788059],[-1.762414,-8.160239],[7.461806,3.486981]]], dtype = "float64")#candidate|4631|(3, 9, 2)|const|float64
uop_4632 = relay.sinh(const_4631.astype('float64')) # shape=(3, 9, 2)
output = uop_4632
output2 = uop_4632
func_4640 = relay.Function([], output)
mod['func_4640'] = func_4640
mod = relay.transform.InferType()(mod)
output = func_4640()
func_4641 = relay.Function([], output)
mutated_mod['func_4641'] = func_4641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4640_call = mod.get_global_var('func_4640')
func_4641_call = mutated_mod.get_global_var('func_4641')
call_4665 = func_4640_call()
call_4666 = func_4640_call()
func_4260_call = mod.get_global_var('func_4260')
func_4261_call = mutated_mod.get_global_var('func_4261')
call_4697 = relay.TupleGetItem(func_4260_call(), 0)
call_4698 = relay.TupleGetItem(func_4261_call(), 0)
uop_4701 = relay.asin(call_4697.astype('float64')) # shape=(16, 8, 5)
uop_4703 = relay.asin(call_4698.astype('float64')) # shape=(16, 8, 5)
output = relay.Tuple([call_4665,uop_4701,])
output2 = relay.Tuple([call_4666,uop_4703,])
func_4718 = relay.Function([], output)
mod['func_4718'] = func_4718
mod = relay.transform.InferType()(mod)
mutated_mod['func_4718'] = func_4718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4718_call = mutated_mod.get_global_var('func_4718')
call_4719 = func_4718_call()
output = call_4719
func_4720 = relay.Function([], output)
mutated_mod['func_4720'] = func_4720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mod.get_global_var('func_3244')
func_3246_call = mutated_mod.get_global_var('func_3246')
call_4747 = relay.TupleGetItem(func_3244_call(), 0)
call_4748 = relay.TupleGetItem(func_3246_call(), 0)
func_4602_call = mod.get_global_var('func_4602')
func_4604_call = mutated_mod.get_global_var('func_4604')
call_4749 = relay.TupleGetItem(func_4602_call(), 0)
call_4750 = relay.TupleGetItem(func_4604_call(), 0)
output = relay.Tuple([call_4747,call_4749,])
output2 = relay.Tuple([call_4748,call_4750,])
func_4758 = relay.Function([], output)
mod['func_4758'] = func_4758
mod = relay.transform.InferType()(mod)
output = func_4758()
func_4759 = relay.Function([], output)
mutated_mod['func_4759'] = func_4759
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4778 = relay.var("var_4778", dtype = "float64", shape = (3, 5, 11))#candidate|4778|(3, 5, 11)|var|float64
uop_4779 = relay.acosh(var_4778.astype('float64')) # shape=(3, 5, 11)
func_3293_call = mod.get_global_var('func_3293')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_4782 = relay.TupleGetItem(func_3293_call(), 0)
call_4783 = relay.TupleGetItem(func_3294_call(), 0)
output = relay.Tuple([uop_4779,call_4782,])
output2 = relay.Tuple([uop_4779,call_4783,])
func_4785 = relay.Function([var_4778,], output)
mod['func_4785'] = func_4785
mod = relay.transform.InferType()(mod)
mutated_mod['func_4785'] = func_4785
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4786 = relay.var("var_4786", dtype = "float64", shape = (3, 5, 11))#candidate|4786|(3, 5, 11)|var|float64
func_4785_call = mutated_mod.get_global_var('func_4785')
call_4787 = func_4785_call(var_4786)
output = call_4787
func_4788 = relay.Function([var_4786], output)
mutated_mod['func_4788'] = func_4788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4758_call = mod.get_global_var('func_4758')
func_4759_call = mutated_mod.get_global_var('func_4759')
call_4830 = relay.TupleGetItem(func_4758_call(), 1)
call_4831 = relay.TupleGetItem(func_4759_call(), 1)
func_2625_call = mod.get_global_var('func_2625')
func_2630_call = mutated_mod.get_global_var('func_2630')
var_4854 = relay.var("var_4854", dtype = "int64", shape = (48, 1))#candidate|4854|(48, 1)|var|int64
var_4855 = relay.var("var_4855", dtype = "int64", shape = (48, 8))#candidate|4855|(48, 8)|var|int64
var_4856 = relay.var("var_4856", dtype = "float64", shape = (198,))#candidate|4856|(198,)|var|float64
var_4857 = relay.var("var_4857", dtype = "int32", shape = ())#candidate|4857|()|var|int32
call_4853 = relay.TupleGetItem(func_2625_call(relay.reshape(var_4854.astype('int64'), [3, 16, 1]), relay.reshape(var_4855.astype('int64'), [3, 16, 8]), relay.reshape(var_4856.astype('float64'), [198,]), relay.reshape(var_4857.astype('int32'), []), ), 9)
call_4858 = relay.TupleGetItem(func_2630_call(relay.reshape(var_4854.astype('int64'), [3, 16, 1]), relay.reshape(var_4855.astype('int64'), [3, 16, 8]), relay.reshape(var_4856.astype('float64'), [198,]), relay.reshape(var_4857.astype('int32'), []), ), 9)
func_3192_call = mod.get_global_var('func_3192')
func_3193_call = mutated_mod.get_global_var('func_3193')
call_4859 = func_3192_call()
call_4860 = func_3192_call()
uop_4867 = relay.log(var_4854.astype('float32')) # shape=(48, 1)
output = relay.Tuple([call_4830,call_4853,var_4855,var_4856,var_4857,call_4859,uop_4867,])
output2 = relay.Tuple([call_4831,call_4858,var_4855,var_4856,var_4857,call_4860,uop_4867,])
func_4878 = relay.Function([var_4854,var_4855,var_4856,var_4857,], output)
mod['func_4878'] = func_4878
mod = relay.transform.InferType()(mod)
var_4879 = relay.var("var_4879", dtype = "int64", shape = (48, 1))#candidate|4879|(48, 1)|var|int64
var_4880 = relay.var("var_4880", dtype = "int64", shape = (48, 8))#candidate|4880|(48, 8)|var|int64
var_4881 = relay.var("var_4881", dtype = "float64", shape = (198,))#candidate|4881|(198,)|var|float64
var_4882 = relay.var("var_4882", dtype = "int32", shape = ())#candidate|4882|()|var|int32
output = func_4878(var_4879,var_4880,var_4881,var_4882,)
func_4883 = relay.Function([var_4879,var_4880,var_4881,var_4882,], output)
mutated_mod['func_4883'] = func_4883
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4929 = relay.const([[[5.035208,-4.157079,-1.929259,1.574194],[8.156189,3.482345,-5.232931,7.270120],[-4.770330,-2.983509,-4.767467,8.820487],[-0.466965,8.268326,1.449355,-0.446235],[-8.783815,0.527646,-9.038725,2.934928],[5.071843,-3.065017,7.378735,-5.329575],[-2.299079,1.744820,3.517942,9.438885]],[[9.612507,1.685876,-9.339669,2.644678],[-9.571761,5.787956,5.403610,-8.575666],[2.808622,1.362503,-5.761998,-6.437999],[-5.921153,-8.168834,-1.208039,2.086988],[-6.801235,-4.026373,4.294948,8.892684],[-3.412483,-7.413545,9.657233,-7.891914],[4.042646,7.442887,0.944591,8.569464]],[[-4.739975,-7.769347,8.689934,-5.992918],[-5.495117,-2.356562,9.520253,5.440602],[-7.507347,5.880231,-0.589340,1.005604],[7.041064,4.591359,-2.154602,-8.777979],[-6.008841,-0.594981,1.209736,-5.078274],[5.518360,3.787818,-1.814036,4.491932],[-4.854661,9.226660,-4.280328,8.683899]],[[2.670549,6.963702,2.793734,-8.129713],[-3.237674,8.525502,-8.312661,1.849916],[7.833676,-7.562181,0.153860,-3.672297],[-3.800163,-2.818295,-0.213920,7.271437],[-0.679908,-6.279828,-4.904968,-8.129374],[9.050508,-0.082796,2.703809,7.284821],[-4.217712,-8.829246,5.629598,-4.127277]]], dtype = "float64")#candidate|4929|(4, 7, 4)|const|float64
var_4930 = relay.var("var_4930", dtype = "float64", shape = (4, 7, 4))#candidate|4930|(4, 7, 4)|var|float64
bop_4931 = relay.power(const_4929.astype('float64'), relay.reshape(var_4930.astype('float64'), relay.shape_of(const_4929))) # shape=(4, 7, 4)
func_3828_call = mod.get_global_var('func_3828')
func_3832_call = mutated_mod.get_global_var('func_3832')
var_4951 = relay.var("var_4951", dtype = "float64", shape = (12, 30))#candidate|4951|(12, 30)|var|float64
var_4952 = relay.var("var_4952", dtype = "int64", shape = (384,))#candidate|4952|(384,)|var|int64
call_4950 = relay.TupleGetItem(func_3828_call(relay.reshape(var_4951.astype('float64'), [360,]), relay.reshape(var_4952.astype('int64'), [384,]), ), 4)
call_4953 = relay.TupleGetItem(func_3832_call(relay.reshape(var_4951.astype('float64'), [360,]), relay.reshape(var_4952.astype('int64'), [384,]), ), 4)
output = relay.Tuple([bop_4931,call_4950,var_4951,var_4952,])
output2 = relay.Tuple([bop_4931,call_4953,var_4951,var_4952,])
func_4956 = relay.Function([var_4930,var_4951,var_4952,], output)
mod['func_4956'] = func_4956
mod = relay.transform.InferType()(mod)
var_4957 = relay.var("var_4957", dtype = "float64", shape = (4, 7, 4))#candidate|4957|(4, 7, 4)|var|float64
var_4958 = relay.var("var_4958", dtype = "float64", shape = (12, 30))#candidate|4958|(12, 30)|var|float64
var_4959 = relay.var("var_4959", dtype = "int64", shape = (384,))#candidate|4959|(384,)|var|int64
output = func_4956(var_4957,var_4958,var_4959,)
func_4960 = relay.Function([var_4957,var_4958,var_4959,], output)
mutated_mod['func_4960'] = func_4960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3698_call = mod.get_global_var('func_3698')
func_3699_call = mutated_mod.get_global_var('func_3699')
call_4970 = func_3698_call()
call_4971 = func_3698_call()
uop_4972 = relay.atanh(call_4970.astype('float64')) # shape=(10, 3, 7)
uop_4974 = relay.atanh(call_4971.astype('float64')) # shape=(10, 3, 7)
func_1360_call = mod.get_global_var('func_1360')
func_1366_call = mutated_mod.get_global_var('func_1366')
var_4983 = relay.var("var_4983", dtype = "int32", shape = (1, 384))#candidate|4983|(1, 384)|var|int32
const_4984 = relay.const([-1,3,-3,7,5,-4,-7,-3,3,-6,6,-8,-10,-10,-10,-4,-9,-8,-7,-4,-3,1,-5,8,-4,6,8,10,8,8,3,10,-1,4,-3,10,7,5,8,3,-10,1,-2,7,1,9,-9,3,7,-8,8,-6,9,-8,-7,-10,-9,-6,-10,-10,-10,2,-7,-1,-4,3,-7,6,2,-5,-2,-7,-6,1,-8,6,9,-1,-4,-1,9,10,-4,-4,-8,-7,-3,-3,-7,-4,7,-7,9,3,8,2,1,-5,-6,-3,-7,-7,3,9,6,7,3,-10,-1,6,10,-7,9,5,-1,2,-9,8,10,-3,1,2,5,-6,8,4,-1,-8,-4,-6,3,5,-6,5,-10,-4,8,7,-9,-10,7,4,6,6,5,9,9,-10,-4,-1,-3,7,3,7,-7,7,-10,1,1,7,9,-5,-7,3,10,-8,-1,6,-9,3,9,-9,3,4,9,-1,7,-9,3,-8,8,-5,2,-2,-4,6,-9,10,-7,5,6,-6,-3,9,-7,-8,6,-3,-5,-9,3,4,-2,-3,1,-7,-7,-1,-6,-8,-9,7,10,-2,-6,-7,8,-3,6,-9,8,-3,9,-7,4,7,2,9,-3,-8,-3,1,4,2,-2,6,-9,6,3,-2,-9,-10,-10,-2,1,-5,4,-8,10,10,-2,-3,-5,8,4,-5,-6,3,-6,-10,-4,-5,-1,-9,-2,-4,-5,-5,7,8,-3,4,10,7,10,-6,4,-3,2,-7,-10,1,9,-6,9,-8,9,-4,-9,6,10,-4,-3,3,-8,2,-3,-3,-8,1,-7,2,2,4,8,-1,-3,-7,1,-2,10,8,6,6,-2,-3,-5,-4,2,-8,-9,-9,3,9,-5,4,-4,9,-4,3,-1,7,-1,4,-1,2,-1,-4,-8,-8,-3,-8,-5,-4,1,8,-4,-9,8,-8,8,-8,-4,5,5,-5,-8,-5,10,-5,-7,-5,10,7,9,-6,7,8,-8,1,8,2,-9,-2,-6,-1,2,7,-10,-9,-10,-6,10,-6,8,-4,5,6,-2,-4,5,-5,-1,-8,-5,-10,5,1,1,-4,5,7,3,-6,2,-5,-5,-4,3,7,-3,2,-2,-3,-10,-4,-4,-7,-6,4,-4,5,-1,6,-2,-1,-10,3,6,7,-5,-3,3,8,4,7,4,7,-2,-1,-6,1,7,-7,2,-1,4,7,-5,-9,10,-6,8,10,-6,4,5,-7,-9,-7,8,-9,-3,2,-3,8,-6,6,10,6,10,8,-5,-8,-9,9,-3,10,5,8,2,1,-2,2,4,-10,7,-10,4,1,2,-3,-6,-5,-4,1,8,-3,-1,-6,4,9,-5,8,-8,-7,6,-7,2,7,4,-3,10,-5,-5,-5,-7,2,7,3,8,-6,-7,-1,7,-6,-6,5,5,8,-1,8,-1,-9,-2,-4,4,7,6,-2,-5,-4,-7,10,9,1,3,7,4,4,10,-8,-9,8,2,8,8,2,-1,7,-10,-9,2,1,-3,1,3,2,4,-5,9,6,5,3,8,-7,2,5,3,-9,-9,4,10,3,-3,10,4,-1,4,7,6,4,10,-2,-5,1,-1,-7,-10,-7,-1,-7,5,-3,4,2,-2,5,-8,-6,8,-9,4,-2,-6,-1,5,1,-8,10,-2,9,1,-9,3,-3,5,-1,-10,7,-3,-3,6,10,-8,-3,3,8,10,-6,-3,5,1,-10,1,8,-4,2,-7,-6,-3,9,3,-3,-5,7,7,7,-9,10], dtype = "int32")#candidate|4984|(660,)|const|int32
call_4982 = relay.TupleGetItem(func_1360_call(relay.reshape(call_4970.astype('float64'), [3, 10, 7]), relay.reshape(uop_4972.astype('float64'), [3, 10, 7]), relay.reshape(call_4970.astype('float64'), [3, 10, 7]), relay.reshape(var_4983.astype('int32'), [384,]), relay.reshape(const_4984.astype('int32'), [660,]), ), 5)
call_4985 = relay.TupleGetItem(func_1366_call(relay.reshape(call_4970.astype('float64'), [3, 10, 7]), relay.reshape(uop_4972.astype('float64'), [3, 10, 7]), relay.reshape(call_4970.astype('float64'), [3, 10, 7]), relay.reshape(var_4983.astype('int32'), [384,]), relay.reshape(const_4984.astype('int32'), [660,]), ), 5)
uop_4989 = relay.sqrt(call_4970.astype('float32')) # shape=(10, 3, 7)
uop_4991 = relay.sqrt(call_4971.astype('float32')) # shape=(10, 3, 7)
output = relay.Tuple([uop_4972,call_4982,var_4983,const_4984,uop_4989,])
output2 = relay.Tuple([uop_4974,call_4985,var_4983,const_4984,uop_4991,])
func_4995 = relay.Function([var_4983,], output)
mod['func_4995'] = func_4995
mod = relay.transform.InferType()(mod)
var_4996 = relay.var("var_4996", dtype = "int32", shape = (1, 384))#candidate|4996|(1, 384)|var|int32
output = func_4995(var_4996)
func_4997 = relay.Function([var_4996], output)
mutated_mod['func_4997'] = func_4997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4619_call = mod.get_global_var('func_4619')
func_4621_call = mutated_mod.get_global_var('func_4621')
call_5025 = func_4619_call()
call_5026 = func_4619_call()
output = call_5025
output2 = call_5026
func_5031 = relay.Function([], output)
mod['func_5031'] = func_5031
mod = relay.transform.InferType()(mod)
output = func_5031()
func_5032 = relay.Function([], output)
mutated_mod['func_5032'] = func_5032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4640_call = mod.get_global_var('func_4640')
func_4641_call = mutated_mod.get_global_var('func_4641')
call_5055 = func_4640_call()
call_5056 = func_4640_call()
var_5060 = relay.var("var_5060", dtype = "float64", shape = (3, 9, 2))#candidate|5060|(3, 9, 2)|var|float64
bop_5061 = relay.power(call_5055.astype('float32'), relay.reshape(var_5060.astype('float32'), relay.shape_of(call_5055))) # shape=(3, 9, 2)
bop_5064 = relay.power(call_5056.astype('float32'), relay.reshape(var_5060.astype('float32'), relay.shape_of(call_5056))) # shape=(3, 9, 2)
func_1192_call = mod.get_global_var('func_1192')
func_1194_call = mutated_mod.get_global_var('func_1194')
const_5073 = relay.const([0.029234,0.282294,9.159390,-6.788279,-0.739544,4.274883,-0.668002,-7.980795,-4.363304,6.600193,5.747806,-2.104727,-0.971177,-1.116649,4.963970,-5.122578,-0.452639,8.704330,1.961536,5.696489,1.706233,5.132499,3.770362,8.992015], dtype = "float32")#candidate|5073|(24,)|const|float32
call_5072 = relay.TupleGetItem(func_1192_call(relay.reshape(const_5073.astype('float32'), [1, 3, 8])), 0)
call_5074 = relay.TupleGetItem(func_1194_call(relay.reshape(const_5073.astype('float32'), [1, 3, 8])), 0)
func_2737_call = mod.get_global_var('func_2737')
func_2741_call = mutated_mod.get_global_var('func_2741')
const_5076 = relay.const([[-5.066442,-1.880754,0.032703,-7.126064,4.954029,-8.612672,-1.117588,-0.890141,-6.235795,-5.352597,-7.764242,-2.371252,0.981726,-8.018187,-4.008597,9.499361,5.708874,5.728396,8.383776,5.355491,3.546608,-8.633991,8.370009,-8.864755,-9.918609,9.994774,7.436252,-6.164442,1.615583,-8.347760,-7.058048,-2.231013,6.197791,-0.978526,4.139211,-2.467488,-1.287391,1.426101,8.555626,3.064078,-1.284085,2.475964,-5.387518,-5.951489,-3.630057,5.934633,-3.980780,-0.584134,4.982328,1.215009,-4.489584,-9.872858,-2.968887,-5.242640,9.712958,0.984990,-6.670527,8.225037,-8.307441,-1.474045,-5.639089,0.210407,-8.813703,-0.996679,-2.175571,-3.827179,6.434128,7.102781,-3.322789,-7.780733,8.754848,2.495395,-4.965078,0.210648,-2.615844,0.309788,6.437471,-9.188894,-8.983909,-6.422752,-8.162097,9.213433,3.921379,9.955155,-4.169728,9.541290,3.276327,9.161663,1.335277,-1.764331,-4.909373,-7.875335,-5.366419,6.516716,5.511186,2.138404,0.519064,-2.931340,-1.135028,-9.289755,8.148990,-2.748004,4.597152,-1.688655,-5.075700,-8.556551,-4.267215,5.396301,0.467461,3.497578,-3.142143,-0.388522,3.627273,-0.700281,-6.571115,-2.685084,-3.402383,-2.637566,-3.537853,-8.402817,7.586978,1.533758,3.326699,-3.316957,-9.696158,0.143522,3.812115,-3.130780,-1.562236,-8.796821,1.392518,-4.103095,6.507401,6.307500,5.764356,5.295220,7.712245,-1.163226,0.368704,2.252582,-7.467528,-0.894489,3.679014,-0.371278,8.238286,-1.560885,2.430151,-8.896681,-2.397763,-3.251852,6.636816,-2.431289,3.517205,8.815682,-2.904108,-4.083367,4.622807,-0.919804,1.889529,2.013762,1.747765,0.392742,-2.329768,0.412423,-6.662844,8.671365,6.786604,-7.565202,-2.430760,7.137965,-7.457482,-5.176336,-9.772983,-5.645564,3.072029,-0.328430,-8.002934,-4.542161,5.377406,9.481518,2.620647,2.607670,-0.350634,1.801284,3.722360,1.421734,-4.559771,-0.814156,-7.452666,-0.887825,-6.158943,-8.015573,6.507789,3.827558,9.308495,-4.569382,5.329787,4.644998,9.942983,2.298241,-6.706789,-2.655097,-0.461640,2.028259,-8.440136,-7.494427,8.797448,8.104915,6.401465,0.129637,5.891331,-5.563347,-7.974434,-1.639156,-6.551111,-0.043246,1.896333,-2.473148,5.041052,-8.018112,2.501791,-2.243439,-8.530007,1.922136,3.940016,-6.924028,-0.767655,4.117064,-6.130934,-1.006414,1.145451,0.775719,-7.395451,-9.744719,-6.112525,7.367771,-8.761042,-2.881408,6.122525,-2.464734,-6.380455,7.973873,7.269539,2.722430,-9.562694,8.583208,7.166667,-8.464977,-4.540155,6.391406,-6.670382,-8.280638,3.295204,5.747034,0.873419,4.980368,-4.131344,-4.563351,3.473605,9.518309,-0.644112,-0.747192,-6.166814,1.736857,9.519953,9.353026,2.210806,-1.948875,-2.114795,3.465550,-5.555466,8.713200,4.478291,-6.592598,-3.512208,-7.409557,-5.885817,-3.092907,-9.835144,1.856546,-0.514132,5.384975,5.593123,-9.674863,2.547878,8.253922,-7.528742,-7.871312,-5.060189,7.314691,-3.030878,0.173153,-2.831259,2.427498,4.327728,-1.819448,1.901347,9.185548,-5.799273,-8.681578,9.001708,6.288148,9.079767,7.203137,-8.366101,-0.154437,0.313960,-0.428639,8.583203,-7.281161,-3.396624,-3.917058,-8.859594,-9.092358,-2.010421,-3.325380,-5.027759,6.526647,3.044577,-0.913365,4.622596,-3.338606,-8.006822,-4.134993,4.565062,4.570038,-7.417263,0.948378,4.348749,7.467639,7.813384,-5.331874,3.045579,9.613645,-3.379353,-9.299907,-1.622460,-2.531618,8.546630,-8.454469,8.919336,9.094375,9.184993,-8.243130,-8.019370,-4.863569,0.554856,-4.124835,0.821276,0.628605,4.294287,4.410619,6.716368,-3.711960,8.383581,5.935076,-2.048541,-5.399671,3.693605,9.490131,-5.762629,4.674573,-4.294570,-9.997690,6.041833,5.601705,3.606378,-7.706863,9.108955,-2.506002,4.453802,7.713132,-9.164940,-6.961925,9.711493,5.286551,6.975862,1.130759,-3.062406,0.257143,-3.400806,-6.753510,-2.580613,-7.353579,-5.578272,-0.985563,-9.897795,9.427782,6.398966,-0.328128,9.985264,-2.109896,1.843660,-0.093716,9.379632,7.441235,2.674653,9.015915,7.284637,8.898524,-1.097563,9.068076,7.086513,9.838530,-3.454195,7.592290,-5.002036,7.752131,-4.823564,7.476765,9.254426,3.603353,7.065518,-6.722586,-7.460448,-7.878245,0.032458,5.750194,-6.199699,3.929556,-8.940839,2.144537,-8.230640,-4.036317,-2.903677,-9.473108,5.120368,-4.318722,8.145755,6.800031,-3.333133,-3.650419,1.851927,6.031064,7.223381,3.348886,7.177360,-5.567670,3.636519,-6.089133,-8.859788,7.028942,-7.552005,-1.005742,9.932265,2.902810,9.936289,5.010314,6.997783,9.613356,-8.507605,4.711057,0.364448,5.675734,-8.633345,-5.636814,0.419802,-5.179160,-9.946803,2.689812,-4.227008,1.974935,-3.652214,9.289665,8.849756,-4.446063,5.085592,-2.568132,6.031265,6.617435,0.484577,3.562354,3.922151,7.212567,-7.011975,2.340825,9.904053,5.961221,-0.470045,-5.626966,3.506900,2.930878,-4.703281,5.959908,7.241041,2.483842,-2.467925,2.920324,1.204770,2.988332,9.096002,-3.094966,-4.557842,2.989735,-4.136307,-6.450316,-6.451527,-3.094070,8.272452,0.306032,-7.054135,-8.657267,0.975932,3.365373,-0.741533,-7.979782,7.665111,-0.289041,-7.268859,-2.168592,5.857170,-2.744496,-8.216290,-4.550068,-7.329558,5.425617,2.524470,-1.606450,5.377819,8.750346,-0.044610,-7.001755,-7.423763,3.822072,-5.565160,-0.060869,6.250171,1.694251,3.690566,0.353362,6.310614,3.009850,-5.352587,6.335174,0.276074,6.279137,7.353705,7.720259,3.928199,-8.080348,5.487583,3.276095,-1.696533,-5.349651,4.662513,7.220706,-3.234318,5.746685,-7.778021,1.004618,0.871126,-5.741942,-6.609292,-1.931301,-2.174945,9.980323,0.151106,-9.783263,1.758791,-8.344104,3.877456,-6.021558,-1.773519,-5.118209,-8.437077,-8.236783,9.200330,-7.826378,-5.205169,0.584547,-7.148041,-3.017013,3.054781,8.636269,-9.063488,9.082732,2.468863,3.136953,2.549037,9.171797,8.001001,2.587496,-4.175226,-7.314283,3.629057,8.126085,-6.288831,5.890418,1.939883,9.599406,-9.297652,4.519874,-6.038325,0.286585,-7.231421,4.235867,-9.269087,-9.353573,0.915050,-6.405796,-7.427059,-4.738087,8.377598,8.140087,-0.446243,-9.954260,0.898198,-9.228483,6.180903,-4.988801,-6.171378,1.279326,-4.530948,1.377402,9.571476,-6.974005,-7.630435,-0.414055,5.411771,-1.507891,-3.890547,-1.770727,-9.822625,5.197024,2.966265,0.151277,-5.669397,-1.559140,8.799103,-2.477237,3.433940,-5.356053,4.721172,-9.656040,-7.371599,-4.928677,5.399159,5.166682,9.828760,7.188537,-3.685915,0.095468,-7.868151,4.677351,7.729904,-1.377981,0.340592,-2.624743,8.651459,3.057457,8.800895,5.887874,-6.417894,-6.519847,2.055734,-9.711141,6.490244,-2.530771,-2.330105,2.238348,5.142715,-6.447211,-1.506354,3.554436,0.569412,-5.888680,-6.203401,-4.002818,-1.957654,1.970790,-1.428274,2.373102,6.025175,3.780819,0.029034,0.147090,-6.947180,8.908234,0.145505,1.674333,5.138788,9.557844,0.976931,2.046928,0.034796,9.572783,-8.819473,9.563942,6.845829,4.731958,1.125385,6.297629,3.778773,-9.314214,-6.732783,6.669684,0.284316,4.776401,-6.296628,-7.190466,2.958877,-4.181969,-1.236116,8.667578,-7.752408,6.747924,-7.913867,-2.298423,7.932229,-0.136495,-7.045396,-7.926001,-9.771393,-6.883756,-9.538994,-5.773096,-3.178387,6.408326,-4.175086,-1.238600,-7.640005,-1.158318,4.764832,-5.000641,-1.396228,-8.195336,-0.525221,-5.820542,-5.112286,-8.411382,-5.296358,4.788662,8.286454,9.504433,5.343136,-3.397093,9.510061,-3.950251,5.005395,-9.257906,3.868252,-5.689054,7.985341,1.817542,7.754006,-2.264374,-7.135948,7.746329,-4.049989,-6.977480,-5.158027,0.341681,7.404628,-7.902103,-1.184074,-4.904916,5.898005,-8.574251,-3.493837,9.758371,2.579725,7.613228,7.209137,7.063521,2.097491,3.840687,-2.626031,-7.952548,9.772889,7.966377,1.479519,5.839022,-1.322203,3.950432,1.192350,5.943957,-5.787285,0.217984,8.550335,0.207261,-3.520917,-1.064165,-4.585192,-3.307421,-5.904423,1.001696,-7.711745,-4.664750,-8.893515,8.909569,-4.206781,-2.211096,7.515934,-6.334667,-1.650711,0.984107,1.155625,-0.422038,-9.139662,5.405124,-8.022706,-3.563622,5.692709,3.026871,-5.274388,-8.240007,3.355892,6.892845,-8.139385,0.216182,-4.539991,6.593623,1.920500,5.692098,-9.664864,-9.955684,3.901396,5.581766,1.035607,4.917789,9.311687,5.287408,-1.564431,5.758697,-3.797841,-5.597146,-8.405655,-1.054622,3.550001,8.814903,-8.701650,-5.502245,5.640644,5.208429,-8.868840,-8.952367,-6.728662,7.897024,0.245776,5.420570,5.267227,-5.045973,8.929487,9.054097,-0.410790,-6.042004,-8.980033,-4.444668,1.370073,8.559207,-0.356250,0.694877,3.037846,-0.847007,-6.776823,-7.218364,8.620457,3.147057,-1.489968,1.313716,9.557611,3.785403,-4.579547,2.280005,5.100280,9.031187,1.790317,-1.989063,8.864239,2.949945,-6.313282,-2.744969,-8.886885,-7.189181,-6.325007,7.664266,-7.431211,-4.770591,-9.968338,-1.614037,-8.499128,-3.205923,-6.791902,-5.670502,3.615007,0.434822,6.808189,2.211722,6.482885,-3.208934,6.280624,-7.967389,0.787709,-4.263831,-1.374835,2.503943,-3.672302,-3.349503,6.005720,2.646158,-7.808778,-8.969730,-5.964482,9.323693,-2.528495,5.032216,8.212224,0.439637,-6.340469,5.815709,-4.212534,0.335327,-8.868379,0.331457,-8.401212,-1.449033,-3.396062,3.898682,-7.756067,-8.945884,-7.548138,-0.106335,7.113294,-1.608120,0.990176,5.272708,4.899784,-0.850956,-5.139825,6.828500,-3.952713,-8.175517,-6.918674,4.809892,-6.472486,1.656171,-8.029552,1.660095,5.242156,3.594793,5.211730,-6.325100,-4.569409,-4.846138,3.071734,5.261917,4.018399,-3.580675,8.850009,-7.557825,6.416090,0.811279,6.431901,-0.734090,-9.825930,9.414032,-7.942114,-8.358364,-0.833702,2.959233,-7.983465,-4.321092,-0.173478,-6.363392,-2.968053,-7.101810,-7.535421,6.047160,-0.469535,2.902304,-6.153508,-6.324642,-5.688803,3.962988,9.810878,-7.204652,6.163051,5.736530,9.429829,-2.860553,-7.704681,-4.348354,-7.032579,-4.139741,0.825698,8.675766,-3.428107,-6.789342,0.451897,0.634107,-5.759550,-0.509322,-4.846072,-9.156328,0.488649,-4.211777,0.392396,3.969474,-3.178011,-1.915449,2.831908,5.968766,2.721791,-8.252306,2.855720,8.287989,-6.696010,-9.771415,4.414546,-7.723979,5.010332,-1.814238,3.450020,-9.762691,8.013277,2.624793,-5.462723,-5.924800,-3.837377,-4.606491,-8.680745,-3.400310,-1.520999,-4.177633,8.012892,-4.445882,6.634572,2.416082,-0.512264,-9.225252,-6.752368,-2.944255,0.534378,-0.797454,-1.849808,3.211651,-0.135790,8.471667,-1.033349,-4.548637,-6.783203,-7.143410,4.352450,6.015237,4.307213,0.447746,6.253049,2.240085,-2.071545,9.584470,-5.419310,0.271441,-0.347503,5.327294,-4.903963,-9.484508,3.683258,-9.177999,-6.315563,-1.559771,-4.438960,7.144898,-5.205850,-7.541401,-4.046492,8.420959,-4.301627,2.895707,0.915426,-8.699572,-6.083502,-8.186319,6.296436,-3.555017,-5.687778,-1.120760,-6.251356,1.875155,-8.066742,2.426624,1.616045,8.021513,7.751506,-3.669245,-0.883299,1.304921,9.608538,-0.055000,-7.437215,-3.399896,9.934625,3.377273,-8.774473,-3.929133,-1.339844,9.540846,-1.254221,-6.446264,8.793815,-6.509022,9.360495,-7.578285,-4.106632,6.280781,2.871939,1.531789,-6.542318,-2.013786,0.804922,9.597364,-1.602874,4.365022,-5.386488,-8.726389,-1.238861,0.923269,-0.195412,-4.313157,-2.937985,-1.725867,9.030701,-3.899320,-4.079254,-4.646425,-0.086144,-9.409388,-2.056059,4.672512,8.792279,-1.716813,9.864185,8.793595,2.071586,-0.292889,4.262940,7.753794,-9.291468,6.536264,-1.175327,8.206740,0.274990,7.379585,8.603949,-0.726416,0.231023,9.557155,-3.131711,-8.947351,-8.200138,4.199231,1.473623,3.829914,0.192094,1.722329,-7.753389,-2.695345,-1.667430,-6.205187,-2.660324,-7.781510,9.147849,-9.442954,-0.557826,-4.318380,2.349181,-3.717404,-9.559129,8.243436,-7.682332,-1.685679,9.631799,6.991109,-7.391174,7.568918,-2.587196,-5.910387,2.145252,-8.913508,-9.173343,8.302314,-1.322066,-3.888206,1.887334,-9.649768,-1.573888,-3.341631,9.910544,4.490797,7.293219,5.957169,-5.489207,-6.991851,-3.079035,4.821838,1.391863,8.170554,0.946634,-5.522835,4.880652,-7.990587,4.110989,5.289417,-8.367513,5.851978,2.155569,-5.580071,-2.871623,-1.825537,9.438708,6.642583,-8.178907,-0.544705,7.997896,-4.387039,-0.231712,-8.598833,7.438840,-5.298965,6.428199,-5.254187,-8.176485,-2.877097,7.671405,-9.978785,0.608040,4.486116,-8.551431,1.001007,-6.028573,-6.468652,-7.293279,7.759491,-3.936303,-6.471023,2.668634,-0.028194,6.566472,-1.484540,3.948029,7.089371,6.853224,-6.150219,-9.262153,7.904628,3.862157,5.096248,-8.445190,-8.066532,0.023088,-2.501258,9.093557,-9.573241,-9.388600,9.932706,9.356593,-9.817464,6.454687,-0.670475,-6.181842,-5.826047,7.086424,8.264418,-6.575545,-4.876478,-1.016793,-3.259815,-3.473595,-4.347793,-7.871270,-2.608480,-9.786329,-0.216733,-0.268934,-6.123837,-5.353775,-5.240873,-0.102789,6.881491,3.042106,-1.434246,4.584619,9.399882,-4.097666,-9.550021,5.611468,-5.595270,8.047926,9.642159,-9.043158,-2.348751,7.048172,-7.742578,-3.011781,-0.717449,-7.115723,-7.384572,-4.881307,2.454206,1.841894,8.165310,-5.116106,9.118938,-5.504708,4.933378,-5.941645,3.720973,6.016419,6.206569,5.543772,3.386568,3.070797,7.957211,-7.331033,-1.151985,-2.955164,-0.973446,5.541628,-6.297229,3.855968,-1.225410,6.604462,0.066538,-9.013159,0.092182,-7.059806,3.971767,-1.869685,4.416982,1.424949,-8.203310,0.784040,-2.373492,-5.106028,-2.483779,3.493007,7.317107,-3.871777,5.662072,-4.456184,4.488500,9.405986,-8.137263,7.080857,-3.936956,6.751930,8.081024,-6.097880,0.404636,-9.821636,-2.498191,9.221502,0.213183,-9.189541,-9.163030,2.040471,2.972238,-8.609055,-0.846507,-8.958726,-4.987586,8.728202,-1.004267,8.162536,1.433959,-0.475616,6.743675,5.189663,7.733948,3.640456,-8.033560,9.322657,-1.226225,7.050051,-1.464092,5.336973,3.127770,-1.911306,-6.896126,-6.324237,8.049575,8.062107,-3.527907,4.623539,-6.522764,8.743776,7.801925,4.545959,-8.427264,-7.797550,-4.935832,6.553192,1.178371,6.596801,5.009438,5.927453,-1.740609,-9.349571,9.751502,8.231878,-9.846705,7.157081,0.350277,7.730996,8.213117,-3.833250,-5.726405,-4.303964,6.460447,1.206799,4.606587,-6.607286,-3.473759,-0.207561,-5.585263,2.134992,-8.987178,7.926108,1.110140,5.394279,-1.187302,-0.370801,7.140533,-5.509552,3.479727,5.538600,-8.689697,-3.988976,-2.041744,4.158661,-0.903417,-9.967313,5.262836,2.676645,-4.675196,2.919003,-3.514867,8.928264,-1.841296,4.504487,-7.911844,-2.755557,-0.325557,5.985552,3.258693,1.253479,7.588455,-7.856186,6.884922,-0.139620,-6.525011,8.218015,7.604967,-9.490988,-0.341521,2.940988,1.562217,-7.283689,4.329609,-7.695315,-0.325446,-7.137674,0.831201,-1.211904,-5.718448,9.113870,-0.445663,-7.280624,1.411467,-5.795056,-9.042226,-5.557349,9.894078,9.479310,-3.290774,-7.622899,1.927406,0.653955,9.245884,-9.067121,-0.536874,8.865889,-3.060846,-0.479034,-3.368276,3.751923,9.887824,-6.020773,-1.113737,6.502597,-8.301020,9.243535,-6.059536,-9.667813,-2.479551,-6.214401,-4.912777,-8.714014,9.062580,6.376727,5.946808,-1.767298,-3.288157,7.926652,-3.541369,-0.914169,-2.684627,-2.837432,-7.068040,2.555181,0.075657,9.261991,6.855484,-9.883740,-8.126323,-6.484588,7.577262,-2.097464,-3.815643,-8.105187,-9.601180,8.984412,6.579660,-5.040692,-8.730276,-6.914300,0.325444,-8.474404,0.322113,5.527771,-3.024247,6.388572,-7.407693,1.023973,-8.765419,8.879078,-0.151453,4.472360,-7.318534,7.874660,7.637558,7.517624,7.672932,7.403002,-6.873709,5.625517,8.305431,-2.137790,-8.780443,-9.695540,-2.223370,-1.968620,-5.844947,-7.955286,1.043434,1.074688,3.296362,4.006548,-4.817359,-4.796482,0.206423,8.425412,-4.558760,-2.128888,-8.412689,0.815201,-1.861643,3.575752,-9.191811,9.913985,-6.287512,-5.456938,9.719209,-6.057444,6.872389,3.781148,-7.721177,6.651284,-2.754248,-4.760360,-3.230118,3.748707,1.140011,4.346992,-8.193392,8.327671,7.019906,1.201325,9.371474,9.975125,-7.193848,0.779862,8.091853,3.736371,-0.245190,-5.537810,-8.812707,3.612842,5.481928,9.624021,2.138568,-4.324213,-8.695035,-4.514855,2.949331,-3.117864,-5.077066,4.067456,-6.863522,0.627794,-7.223118,4.593273,-7.467692,-1.306017,2.956497,7.478154,-7.657234,-4.007923,2.664531,-2.397542,-8.107918,-5.104939,-7.633535,-9.211060,8.038679,2.734373,-5.298845,-1.978273,2.041727,-4.283912,-3.946595,5.835776,1.635943,5.843567,-0.039276,2.371912,2.002132,2.236159,0.520093,-0.399353,-2.354192,-8.614341,5.070203,5.650114,4.281430,2.514222,7.183244,-9.546374,-3.810434,-2.121648,1.717616,7.587957,3.373732,-6.245167,1.923807,1.319053,-4.648318,-1.266226,-2.895906,-6.079668,6.557799,3.688614,6.054926,8.996489,-8.661624,-3.784999,8.689881,-5.037227,8.605680,-3.487107,1.027246,-3.080448,8.924507,8.787084,-6.389811,-2.902759,-6.522064,-6.431204,5.062491,7.261523,8.176588,-2.298715,-0.316057,-2.298398,4.342050,-6.929773,-3.599310,2.921158,4.955225,-8.656469,-5.975638,0.960420,-4.603178,-3.859585,8.606827,1.335125,-1.037730,5.335274,-3.896421,-6.218482,-1.923009,2.434831,7.708404,2.466653,8.484686,-8.546886,-8.003258,-5.093045,0.322077,-9.050352,7.015094,-6.136767,4.875502,-1.821164,9.062194,-6.382241,4.528971,-9.187157,-7.650625,1.942733,1.692349,9.033642,2.489651,2.588723,1.263618,9.751399,4.493713,-7.866133,6.844767,8.920723,5.274365,7.557347,5.135705,1.404239,8.454770,8.439575,-3.349759,-5.030492,9.636708,-7.006283,9.523467,3.351480,9.516577,-2.136128,-4.545488,6.050660,8.658982,-9.128334,6.674065,-1.260866,-3.194721,6.611304,-5.773190,-0.192879,4.798826,-4.588110,-8.683642,-1.569474,2.440607,-0.542956,-9.489727,9.390792,-3.423137,-8.230124,3.173928,-5.460301,-7.242000,-6.366561,5.746499,-0.196017,-0.907214,-6.996328,-3.568039,-5.969633,4.605611,4.601065,7.250598,1.605608,-6.548337,6.550025,-8.491455,8.199841,3.922450,4.371757,-2.372430,-9.536055,7.259950,0.700448,5.835900,9.448451,9.677847,-2.427963,-5.156936,-9.515693,5.343870,-8.254831,-1.886869,-9.809737,-2.323037,-6.915031,-6.510319,8.289167,4.672495,8.467519,-1.986579,3.984688,-6.638154,-9.222003,1.367166,9.398843,-8.849664,-8.338649,-8.195737,4.940116,8.050268,0.186430,-6.918256,3.151897,-5.070520,-5.003650,3.327714,-0.046722,8.036267,-6.937711,2.803414,0.431819,-1.256071,-7.362231,-6.875510,6.933239,-9.942241,1.314924,3.370285,-9.980664,-7.120728,-9.649286,4.920108,7.029201,-5.099701,6.394801,0.209918,8.774973,4.845473,-4.027735,0.487524,9.066610,0.759218,-2.033671,2.567372,-1.745520,7.615541,8.429204,9.548582,1.505088,7.828812,2.354042,6.131508,-0.990877,2.375903,9.654618,-1.595416,-4.824055,9.377038,-1.355397,8.137323,-2.056481,9.610931,5.543576,-2.951677,-6.586049,-0.751571,3.969167,8.621944,-7.259139,-7.911306,0.773952,-4.507521,-2.088012,4.517668,-4.514277,4.274596,5.975201,-2.385767,4.158530,-6.567317,-0.037354,-3.904683,-9.795265,7.992638,-8.034182,-6.284645,-7.703400,9.671352,9.322214,5.514049,0.527726,-5.155310,-9.036578,-3.062296,-6.031832,1.380130,6.354503,-4.219364,9.956545,-5.551752,6.977405,-3.863086,0.950092,6.498124,-3.788825,-5.124000,0.262838,-8.517775,2.326489,-0.455097,8.403833,5.478722,1.414056,6.322566,0.965177,-8.254029,-9.828627,5.659661,-6.141631,-1.546724,9.423545,-2.410471,-5.201001,-0.945809,3.882179,2.853466,2.840062,6.499360,-8.571266,3.573539,-6.481693,-1.096229,-5.239523,-7.860037,-7.284998,7.293292,6.914881,8.308561,4.572692,-9.244986,-9.770383,8.446256,-0.602376,-9.374978,0.678780,-6.636384,6.060801,2.851860,-4.401070,-1.600562,-3.479374,7.360299,0.145332,5.015341,-1.921110,-3.600164,7.845194,-5.873058,-1.321441,-3.286953,9.658562,-4.843169,-1.365517,-9.192993,4.928608,2.596690,8.485800,-8.156772,9.424039,3.432429,5.422410,-3.706057,4.417765,-0.535885,2.453495,-5.681212,6.640707,9.380430,-0.587428,0.275786,-3.554885,6.475797,0.982285,9.525666,-7.497678,-0.898516,-6.442291,-8.008236,-4.653323,9.397491,-5.740419,-3.720886,-1.556713,9.284068,8.237640,3.148509,8.623922,8.846515,-6.532669,-4.147917,9.885693,-3.898694,5.630129,-6.569210,2.656071,-9.031776,0.880429,2.942128,-7.075134,-7.160490,3.318865,-6.146834,-9.262528,8.419154,-1.001632,4.197911,0.290284,4.940381,5.587149,-8.508132,3.952101,-9.895043,8.524051,3.967924,-4.446278,7.184478,7.497526,-7.940192,-4.878073,-0.280278,0.287884,-1.782914,2.138351,-0.619599,8.149027,6.797178,2.626543,7.236334,1.371244,-2.686129,-6.867908,-4.973992,9.273461,-5.348721,-3.520883,-7.294249,-0.569247,-1.423999,-0.523015,-7.755033,2.508671,1.337668,6.450738,8.479261,1.603317,-6.716541,-1.664654,2.140057,-7.027224,3.403596,-8.585519,-0.318128,-8.322757,-0.352765,5.482579,2.311755,-7.067804,0.354653,7.963520,-5.080602,3.419235,4.281787,0.277365,0.163204,-7.961431,8.288687,4.733090,1.224934,-3.909609,-5.194175,8.993941,3.093496,-8.369779,8.207101,2.360673,-4.488007,2.846277,-7.585988,-5.241933,-1.126680,-1.086830,4.850042,3.257059,-2.031352,-0.422612,-9.162460,-0.154533,9.266835,-0.946052,-3.758098,9.046283,-8.974607,-6.220387,9.262198,4.951942,1.885840,9.097527,4.411676,-5.790430,2.549510,-0.934112,-8.803926,4.702397,-5.062346,-9.136525,8.073552,5.033941,-1.917097,7.292858,0.092476,6.215359,-0.688587,1.323223,-5.477034,5.386878,5.609247,7.211862,-5.785507,4.552105,-8.965558,-5.232219,8.907561,-9.098568,0.710012,-6.555180,-7.098630,-3.908868,-1.970274,-5.211354,9.878206,-3.861939,6.834707,-5.623519,-3.329455,-2.543293,0.243356,3.660489,7.950658,2.468545,3.130079,6.219891,6.649692,-6.233615,0.389706,-6.745520,7.083819,7.330634,-6.770784,-3.392063,-4.983742,-8.616465,5.129703,-0.785996,7.812272,-2.636049,8.241623,-3.213597,8.316080,3.587248,0.370749,4.897812,-1.525869,7.590607,-8.922082,-8.855641,6.014087,-4.821693,-6.145920,7.042708,-3.183989,-9.621696,6.291561,8.950825,2.224761,8.398149,-2.055518,2.917346,-1.689324,-9.406450,8.658760,1.542799,1.616986,4.269139,-8.328520,2.858354,-3.511537,8.551656,-1.646178,-3.709228,2.228214,-1.665764,-3.766559,-6.817915,-9.280647,8.315717,7.863080,-9.737797,8.868628,-9.310412,-0.751846,-2.773530,8.661988,-6.777759,-7.585431,-1.369613,0.111915,-4.985868,-0.498064,-7.213818,3.336036,-3.687069,-7.768251,4.405861,9.513696,0.335352,6.221458,-2.971356,3.384151,-8.338000,-9.534478,1.759134,1.569954,1.283406,1.963152,-1.544322,-9.408241,1.992890,-0.590708,-2.221107,0.263153,4.724986,6.572976,5.991058,3.961703,6.631058,-4.488058,5.482089,-2.076849,-2.630805,-2.404084,-3.757928,6.005203,1.932707,-8.730204,7.658706,3.921740,-6.573129,4.373240,-0.788199,2.083598,-2.140950,-8.500446,8.008872,-6.686581,-2.986724,-8.482045,9.067122,4.946221,1.911684,-6.916395,4.447060,-3.742603,5.628861,7.249765,-5.222382,4.534096,2.732593,-1.537384,-1.406444,-4.757932,4.787846,8.508676,-4.068416,0.543891,-7.629745,5.472023,7.835770,6.817967,0.808507,-1.627895,0.919055,-0.524654,-2.484556,0.405168,1.138814,7.456913,-2.317492,-4.200022,9.589265,2.340415,9.254824,6.630951,-3.394042,5.971248,-9.603314,9.114684,2.552324,-4.038258,-8.445129,-4.446543,4.096447,-1.115862,-3.573920,-2.825617,-4.036544,2.038006,-2.467324,-6.174063,4.565991,-1.048956,-3.427543,0.256449,4.362466,4.551810,8.382091,-7.717549,4.835242,4.024313,2.328264,-0.893911,5.575671,5.946750,-8.303632,-7.031684,-6.133201,3.598309,-0.936060,-2.220833,-9.993122,9.012396,-1.153076,-0.693288,-8.536750,3.610771,-3.098460,2.119209,-9.049098,2.963202,-7.232138,-3.115738,2.205821,1.170334,4.776568,9.406681,9.107240,3.911816,-7.936062,-8.866394,1.180610,-7.270502,0.521282,8.231359,3.285992,-4.170210,-7.489908,-2.014724,1.208160,5.138654,3.621369,-9.078692,1.092228,-2.965937,-7.842652,-8.136532,2.519293,3.632524,-1.543467,-2.518202,0.034973,-5.377443,1.413026,8.641597,-1.375035,5.236478,-9.635277,7.041602,-3.596606,3.293471,-6.174179,-7.767145,3.850705,-2.379473,7.995387,0.844747,3.381061,-5.737932,-2.587318,7.255686,6.756267,-6.214167,8.532488,8.927787,-2.044804,-7.382279,7.706069,-6.394200,-7.532914,-8.752124,6.824423,-2.804505,9.209591,1.104384,3.941071,6.268406,-9.053386,-2.393616,4.230023,5.970176,-7.235368,-2.986589,-2.271864,-9.060737,7.274680,-4.095074,-8.151332,8.018577,-4.891078,6.963583,-4.519453,-2.207425,9.585741,-8.793423,-9.297457,-5.948589,1.006744,-8.912654,4.690201,-7.554588,-4.352097,6.238025,7.787240,-1.377493,2.861171,0.611665,-1.303459,-8.503008,-3.785648,-6.468547,-1.099537,-9.174187,6.370948,-2.401743,2.825308,0.015072,4.830670,9.129781,-4.155845,-3.479384,4.946531,4.948118,4.376341,9.726980,-0.700112,3.501192,-8.222494,-4.646802,-3.008301,-5.440405,3.975629,1.304922,-0.002419,8.788731,6.663575,0.585587,-5.229949,-8.402177,-2.364991,3.219631,-5.706881,-5.618026,-3.622633,-5.731214,2.951774,1.331589,8.388921,1.299211,1.692829,-2.413515,1.935998,1.545198,-6.705146,3.742136,-5.388741,5.522299,3.289245,4.126107,-4.200415,7.960174,6.441911,-7.505081,7.791833,-2.303393,-5.271663,1.755998,-9.913712,2.256425,3.823031,-5.525694,-5.907906,-6.919245,1.763644,9.056291,5.120021,7.747182,0.155714,1.875661,7.263657,3.388282,-0.458722,2.590574,-0.307941,9.829776,-3.390106,0.873053,5.872986,-4.183575,3.916261,-2.067491,-9.231712,6.415607,1.508742,1.479406,2.456630,8.429571,7.988940,-8.301370,9.738736,0.790884,3.121443,-5.210664,-2.998118,3.788581,6.244522,3.036323,4.856025,9.562414,3.763576,-1.630960,-0.955912,3.326820,-6.874957,2.226876,6.210284,5.237578,5.089875,-3.119463,1.412732,1.097236,6.011175,-4.897753,-1.362552,-8.198758,-3.316950,-1.749452,-3.550521,0.941722,8.470752,-3.554372,7.264915,-1.056181,-0.427895,2.137779,-3.718259,-8.458424,6.759300,9.803128,-8.028206,8.330661,-8.325153,7.662144,4.097684,9.826628,4.759836,-4.679354,-7.581245,2.156313,8.570882,-7.796374,-1.523948,0.051626,4.680022,1.332475,-5.093643,0.777706,-2.033834,5.771656,1.112716,-6.209632,9.516836,4.281847,5.869412,-8.794740,8.559567,3.843255,7.946384,3.638879,3.933544,-1.305787,-5.470721,-1.406728,7.011624,-6.855186,-7.116496,8.163770,6.986259,1.297549,-1.206055,5.930482,-7.997403,2.198955,-2.200206,7.633651,6.421568,6.111478,9.578533,-0.162156,-8.453553,1.643615,4.612162,-3.827891,7.432779,-6.873747,5.526004,-9.718250,-2.520344,4.584174,-1.127378,-0.758534,-0.807820,7.678648,6.719759,-6.864004,9.230845,-9.113783,3.268043,1.576766,4.256622,-8.880659,-0.515070,-2.922886,-2.924633,4.124654,-2.284786,-8.747655,1.583425,-1.618344,0.115612,-4.402014,-8.815020,7.438346,9.470830,4.126131,-5.463925,2.404687,-3.893338,7.987461,0.217435,2.291882,-9.322582,2.407894,-1.531816,-9.975926,-6.135015,-1.089757,-2.225496,-9.328080,-0.656127,-6.255236,8.670168,8.633719,9.958519,-2.933302,7.202869,8.039287,5.517699,-4.245087,-1.031221,8.066794,2.092026,-8.287359,-1.614674,-5.043912,-3.280582,0.469517,-4.361958,6.220027,-3.497671,4.900204,4.709892,2.515825,2.129182,-2.357778,0.205687,-4.836647,9.882239,-1.113432,-9.401729,8.525245,2.682216,-4.276922,9.336194,3.088639,-4.129126,-8.544466,9.195895,-8.185421,9.640250,4.450123,7.079913,1.348612,-4.223080,-6.694132,-5.667633,1.007027,-5.579727,-2.364309]], dtype = "float64")#candidate|5076|(1, 2730)|const|float64
const_5077 = relay.const([8,-4,-5,7,-3,7,-10,3,-3,8,-4,9,7,9,2,3,-3,6,-3,2,-2,3,-7,5,-3,-7,-6,-10,-6,6,10,-1,-4,1,-9,-5,-3,-4,-7,2,10,6,6,2,-6,1,6,6,-8,-9,-3,-8,1,7,-1,-9,-10,8,2,9,8,1,-5,-4,-8,-2,5,7,3,5,5,-6,8,5,4,7,8,-6,7,-6,2,5,-9,7,-6,-6,6,-8,-6,6,8,3,-3,7,-10,-4,2,-2,-2,10,1,9,-10,4,1,-7,5,-5,3,-6,-6,5,-2,8,6,-1,6,6,10,-1,2,-10,-1,3,6,7,2,1,-1,-9,6,3,4,7,1,-3,-7,-8,-9,-10,-2,8,-1,9,7,-6,-10,5,2,5,10,-6,2,-3,5,-7,-2,-1,3,2,10,5,1,-1,1,-6,-6,6,-6,-9,4,-10,-1,1,2,8,-3,9,2,-9,-8,4,7,1,10,-6,8,-3,6,-6,7,-8,6,8,-9,-1,-2,-8,2,6,-1,-6,-8,-9,5,5,-9,4,-2,3,7,-8,-6,2,8,-2,2,-8,-9,9,4,5,8,-9,10,-2,4,10,8,10,1,5,-9,8,-1,1,-10,9,4,8,9,-2,2,3,-5,-4,-4,-4,1,3,6,7,8,1,3,-7,1,-5,3,-1,-2,9,-5,9,2,9,-5,3,4,7,-5,-10,-8,-9,5,-1,6,-3,2,8,3,1,6,3,-10,-7,-7,-3,-4,-5,-2,-5,8,-9,9,6,7,-2,-3,-10,7,2,-6,8,5,10,2,6,-3,-2,-4,-8,8,-1,7,6,1,-8,10,1,-9,-3,-6,5,-3,6,5,-8,6,-4,1,6,7,-2,-10,-2,-4,2,-5,-1,-3,-8,3,-3,-3,3,-6,-7,5,-10,2,5,-9,6,-3,-2,6,-7,6,-9,7,-5,10,-6,3,9,-7,1,-1,-10,6,1,2,10,-7,6,-10,7,-5,5,6,-5,-8,9], dtype = "int32")#candidate|5077|(384,)|const|int32
call_5075 = relay.TupleGetItem(func_2737_call(relay.reshape(const_5076.astype('float64'), [14, 15, 13]), relay.reshape(const_5077.astype('int32'), [384,]), ), 2)
call_5078 = relay.TupleGetItem(func_2741_call(relay.reshape(const_5076.astype('float64'), [14, 15, 13]), relay.reshape(const_5077.astype('int32'), [384,]), ), 2)
output = relay.Tuple([bop_5061,call_5072,const_5073,call_5075,const_5076,const_5077,])
output2 = relay.Tuple([bop_5064,call_5074,const_5073,call_5078,const_5076,const_5077,])
func_5090 = relay.Function([var_5060,], output)
mod['func_5090'] = func_5090
mod = relay.transform.InferType()(mod)
var_5091 = relay.var("var_5091", dtype = "float64", shape = (3, 9, 2))#candidate|5091|(3, 9, 2)|var|float64
output = func_5090(var_5091)
func_5092 = relay.Function([var_5091], output)
mutated_mod['func_5092'] = func_5092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3934_call = mod.get_global_var('func_3934')
func_3935_call = mutated_mod.get_global_var('func_3935')
call_5118 = relay.TupleGetItem(func_3934_call(), 1)
call_5119 = relay.TupleGetItem(func_3935_call(), 1)
func_4282_call = mod.get_global_var('func_4282')
func_4283_call = mutated_mod.get_global_var('func_4283')
call_5121 = relay.TupleGetItem(func_4282_call(), 0)
call_5122 = relay.TupleGetItem(func_4283_call(), 0)
uop_5125 = relay.erf(call_5121.astype('float64')) # shape=(96, 4)
uop_5127 = relay.erf(call_5122.astype('float64')) # shape=(96, 4)
output = relay.Tuple([call_5118,uop_5125,])
output2 = relay.Tuple([call_5119,uop_5127,])
func_5136 = relay.Function([], output)
mod['func_5136'] = func_5136
mod = relay.transform.InferType()(mod)
mutated_mod['func_5136'] = func_5136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5136_call = mutated_mod.get_global_var('func_5136')
call_5137 = func_5136_call()
output = call_5137
func_5138 = relay.Function([], output)
mutated_mod['func_5138'] = func_5138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5136_call = mod.get_global_var('func_5136')
func_5138_call = mutated_mod.get_global_var('func_5138')
call_5139 = relay.TupleGetItem(func_5136_call(), 1)
call_5140 = relay.TupleGetItem(func_5138_call(), 1)
func_4369_call = mod.get_global_var('func_4369')
func_4370_call = mutated_mod.get_global_var('func_4370')
call_5141 = relay.TupleGetItem(func_4369_call(), 0)
call_5142 = relay.TupleGetItem(func_4370_call(), 0)
uop_5144 = relay.acos(call_5139.astype('float32')) # shape=(96, 4)
uop_5146 = relay.acos(call_5140.astype('float32')) # shape=(96, 4)
uop_5150 = relay.rsqrt(call_5139.astype('float64')) # shape=(96, 4)
uop_5152 = relay.rsqrt(call_5140.astype('float64')) # shape=(96, 4)
output = relay.Tuple([call_5141,uop_5144,uop_5150,])
output2 = relay.Tuple([call_5142,uop_5146,uop_5152,])
func_5163 = relay.Function([], output)
mod['func_5163'] = func_5163
mod = relay.transform.InferType()(mod)
output = func_5163()
func_5164 = relay.Function([], output)
mutated_mod['func_5164'] = func_5164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4575_call = mod.get_global_var('func_4575')
func_4576_call = mutated_mod.get_global_var('func_4576')
call_5173 = relay.TupleGetItem(func_4575_call(), 2)
call_5174 = relay.TupleGetItem(func_4576_call(), 2)
func_3293_call = mod.get_global_var('func_3293')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_5179 = relay.TupleGetItem(func_3293_call(), 0)
call_5180 = relay.TupleGetItem(func_3294_call(), 0)
var_5190 = relay.var("var_5190", dtype = "int32", shape = (10, 66))#candidate|5190|(10, 66)|var|int32
bop_5191 = relay.multiply(call_5173.astype('uint64'), relay.reshape(var_5190.astype('uint64'), relay.shape_of(call_5173))) # shape=(10, 66)
bop_5194 = relay.multiply(call_5174.astype('uint64'), relay.reshape(var_5190.astype('uint64'), relay.shape_of(call_5174))) # shape=(10, 66)
func_1360_call = mod.get_global_var('func_1360')
func_1366_call = mutated_mod.get_global_var('func_1366')
var_5204 = relay.var("var_5204", dtype = "int32", shape = (384,))#candidate|5204|(384,)|var|int32
call_5203 = relay.TupleGetItem(func_1360_call(relay.reshape(call_5179.astype('float64'), [3, 10, 7]), relay.reshape(call_5179.astype('float64'), [3, 10, 7]), relay.reshape(call_5179.astype('float64'), [3, 10, 7]), relay.reshape(var_5204.astype('int32'), [384,]), relay.reshape(call_5173.astype('int32'), [660,]), ), 1)
call_5205 = relay.TupleGetItem(func_1366_call(relay.reshape(call_5179.astype('float64'), [3, 10, 7]), relay.reshape(call_5179.astype('float64'), [3, 10, 7]), relay.reshape(call_5179.astype('float64'), [3, 10, 7]), relay.reshape(var_5204.astype('int32'), [384,]), relay.reshape(call_5173.astype('int32'), [660,]), ), 1)
uop_5210 = relay.log10(bop_5191.astype('float32')) # shape=(10, 66)
uop_5212 = relay.log10(bop_5194.astype('float32')) # shape=(10, 66)
bop_5213 = relay.power(uop_5210.astype('float64'), relay.reshape(call_5173.astype('float64'), relay.shape_of(uop_5210))) # shape=(10, 66)
bop_5216 = relay.power(uop_5212.astype('float64'), relay.reshape(call_5174.astype('float64'), relay.shape_of(uop_5212))) # shape=(10, 66)
var_5218 = relay.var("var_5218", dtype = "float64", shape = (10, 66))#candidate|5218|(10, 66)|var|float64
bop_5219 = relay.greater_equal(bop_5213.astype('bool'), relay.reshape(var_5218.astype('bool'), relay.shape_of(bop_5213))) # shape=(10, 66)
bop_5222 = relay.greater_equal(bop_5216.astype('bool'), relay.reshape(var_5218.astype('bool'), relay.shape_of(bop_5216))) # shape=(10, 66)
output = relay.Tuple([call_5179,call_5203,var_5204,bop_5219,])
output2 = relay.Tuple([call_5180,call_5205,var_5204,bop_5222,])
func_5225 = relay.Function([var_5190,var_5204,var_5218,], output)
mod['func_5225'] = func_5225
mod = relay.transform.InferType()(mod)
var_5226 = relay.var("var_5226", dtype = "int32", shape = (10, 66))#candidate|5226|(10, 66)|var|int32
var_5227 = relay.var("var_5227", dtype = "int32", shape = (384,))#candidate|5227|(384,)|var|int32
var_5228 = relay.var("var_5228", dtype = "float64", shape = (10, 66))#candidate|5228|(10, 66)|var|float64
output = func_5225(var_5226,var_5227,var_5228,)
func_5229 = relay.Function([var_5226,var_5227,var_5228,], output)
mutated_mod['func_5229'] = func_5229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4078_call = mod.get_global_var('func_4078')
func_4080_call = mutated_mod.get_global_var('func_4080')
call_5294 = func_4078_call()
call_5295 = func_4078_call()
output = relay.Tuple([call_5294,])
output2 = relay.Tuple([call_5295,])
func_5298 = relay.Function([], output)
mod['func_5298'] = func_5298
mod = relay.transform.InferType()(mod)
output = func_5298()
func_5299 = relay.Function([], output)
mutated_mod['func_5299'] = func_5299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_5300 = relay.TupleGetItem(func_5163_call(), 0)
call_5301 = relay.TupleGetItem(func_5164_call(), 0)
func_4995_call = mod.get_global_var('func_4995')
func_4997_call = mutated_mod.get_global_var('func_4997')
const_5305 = relay.const([[8,-5,6,-10,-5,-7,2,-10],[4,7,5,-7,-2,-6,10,1],[9,2,-3,8,3,-4,9,-8],[-2,-9,2,8,6,10,-1,6],[10,-3,10,8,9,10,6,9],[2,8,5,-2,1,8,5,-2],[-2,8,8,-9,10,5,9,5],[-3,9,-1,10,3,2,2,4],[10,-9,-8,5,10,-3,5,4],[2,-7,-4,-5,-7,-6,-2,4],[-10,10,3,-5,7,-4,9,2],[1,6,-10,-2,-7,-7,-9,-1],[-6,-9,8,4,6,-2,7,-6],[-5,4,1,-2,4,-7,2,6],[-1,-7,-2,6,10,-1,-2,-5],[-9,-4,-5,-1,8,4,8,-8],[-6,7,7,-6,-3,-3,-3,-4],[5,5,8,1,-5,-8,6,1],[-10,-1,-4,-3,3,-2,4,3],[5,9,5,1,-6,3,2,5],[-4,10,-5,-7,-1,-7,4,-4],[9,4,5,3,4,-3,-4,2],[-7,8,-7,10,-3,-3,-8,-9],[2,10,1,-9,3,-1,2,-7],[-6,-3,-1,3,2,2,-2,-9],[-6,-2,-6,10,-2,-8,-6,5],[1,9,3,-5,-7,-8,-10,5],[-8,1,-7,5,5,6,-8,7],[1,1,-7,10,7,-7,3,-3],[9,6,6,-5,-3,-6,4,-2],[9,-8,4,-10,-3,8,-9,8],[-4,3,-6,-4,-1,-3,2,-9],[-1,-7,4,5,-6,-5,1,-2],[10,6,-6,-6,-9,-4,-4,-3],[-10,7,-10,3,-5,-3,-2,1],[2,9,-6,-7,-1,7,3,-10],[2,9,10,-10,-10,1,-9,3],[10,3,6,2,-10,5,-10,-8],[-2,6,9,-9,10,1,2,5],[8,9,-8,1,1,3,9,-6],[10,-5,8,8,-3,1,4,9],[-4,4,-1,-1,-3,4,8,4],[-1,-7,-2,9,5,-1,8,9],[-8,7,1,2,4,5,5,10],[-8,-7,3,6,-7,-4,-4,-8],[-9,-4,3,-2,1,9,-9,-3],[5,7,-7,-5,-9,9,4,-8],[4,-1,5,4,-3,3,1,8]], dtype = "int32")#candidate|5305|(48, 8)|const|int32
call_5304 = relay.TupleGetItem(func_4995_call(relay.reshape(const_5305.astype('int32'), [1, 384])), 1)
call_5306 = relay.TupleGetItem(func_4997_call(relay.reshape(const_5305.astype('int32'), [1, 384])), 1)
uop_5353 = relay.atan(call_5304.astype('float64')) # shape=(6, 11, 10)
uop_5355 = relay.atan(call_5306.astype('float64')) # shape=(6, 11, 10)
func_4785_call = mod.get_global_var('func_4785')
func_4788_call = mutated_mod.get_global_var('func_4788')
const_5357 = relay.const([3.079514,2.585036,-4.216039,-9.923975,2.964362,-6.140674,-4.328808,-7.977950,-4.590127,2.625493,-9.722030,0.881902,-6.964045,8.186389,-7.474809,-4.982073,-4.879768,-2.849992,4.693634,-4.184162,1.894316,-9.397120,-6.448896,7.617629,-5.284417,-8.548436,2.316290,-1.234819,-1.529569,1.366829,4.068013,-9.562071,0.819561,9.961894,6.282334,1.553076,-8.733697,4.174616,-7.694094,1.738013,0.389289,-3.612210,5.964189,-0.804450,-1.796399,-0.776578,8.818577,0.877337,1.372738,9.080653,-3.388557,1.863752,-3.504122,8.640148,0.717702,-5.462661,-4.677946,7.971810,9.636910,2.098828,0.795974,-6.903938,-6.135247,7.947007,-4.222715,8.549348,2.862557,5.538802,2.242565,6.228842,0.292056,9.057983,-7.539243,3.833696,6.239536,8.014608,-4.542059,7.771070,6.125572,-1.147094,-4.483864,7.240589,4.858412,4.377830,0.876927,4.264901,-6.970226,4.594919,-0.909075,5.388496,2.853677,-6.124405,-8.010515,1.355786,1.989894,3.108212,9.529148,5.659907,4.094722,4.996826,3.273349,2.700653,8.017916,-6.745590,2.035206,1.717441,-0.371531,-8.368911,-2.214497,8.674390,3.135405,1.729441,2.793934,5.201873,6.531333,2.596882,-6.147223,2.675023,0.537780,3.569757,1.207861,-6.782086,-1.328594,-0.518931,-8.750558,-1.136934,-6.679867,-9.203057,9.176267,-4.262413,-4.124213,3.685655,-5.290594,-4.539440,2.577529,-9.268727,4.323078,-6.005743,1.181325,-5.471273,-6.213658,2.294388,-6.432596,-3.078472,-8.531243,-0.195623,9.500867,9.192880,-7.752351,5.192209,8.907686,-7.712932,-2.125223,-4.942119,6.581752,5.951124,-9.580845,-7.362981,-7.465323,-7.690875,1.753930,0.567193,-7.306318,-0.003321,0.259757], dtype = "float64")#candidate|5357|(165,)|const|float64
call_5356 = relay.TupleGetItem(func_4785_call(relay.reshape(const_5357.astype('float64'), [3, 5, 11])), 0)
call_5358 = relay.TupleGetItem(func_4788_call(relay.reshape(const_5357.astype('float64'), [3, 5, 11])), 0)
func_2625_call = mod.get_global_var('func_2625')
func_2630_call = mutated_mod.get_global_var('func_2630')
const_5366 = relay.const([[-6,6,-1,1,8,1,7,3,-3,10,-9,-7,-10,10,8,-1,1,2,-10,8,-6,-5,-1,7,-5,9,1,-4,-4,-8,10,-7,-9,-3,-3,-7,7,5,2,1,-8,-1,6,-4,10,5,1,1]], dtype = "int64")#candidate|5366|(1, 48)|const|int64
const_5367 = relay.const([-0.187933,-5.847244,0.112552,5.149293,-4.168490,9.852169,4.834731,4.500982,1.187380,-1.650811,8.318079,8.545733,4.480644,-1.439422,1.213808,2.082031,-6.316434,9.149554,-6.927896,5.285653,-7.131199,-4.591718,4.762075,3.784159,3.529258,1.298689,2.025108,1.687062,-8.436704,6.673150,2.803067,1.604626,-0.415634,5.659826,6.325653,3.439172,-3.219703,4.663581,0.783097,-3.119851,-4.055940,-0.889562,-1.781476,2.545268,4.513439,-2.019537,2.132967,-7.296084,4.831520,-1.004509,-9.820950,-9.899506,9.736842,-8.724469,-9.825503,6.259794,-9.947760,-1.984145,-0.368554,6.306777,-6.946879,-3.983028,4.831041,7.983654,6.635095,9.173670,-2.140962,-9.715672,-5.264512,-2.913771,0.835976,6.267093,0.633656,-3.775814,9.650512,-4.835549,9.075867,1.946879,6.004107,5.219928,-4.204611,4.949646,6.154195,3.594082,-5.915069,-0.612200,7.056181,-2.946416,-7.217507,-4.930061,-0.474450,4.844265,-1.140282,5.268637,-9.646112,-8.062721,0.553568,4.668673,5.807690,-1.960546,-2.711744,2.577155,4.245217,2.947962,-2.653166,5.290685,-8.935560,-0.729145,-7.554112,-5.878154,1.995721,4.603807,-2.522263,8.759341,1.473286,-4.392692,-4.457465,-5.410616,0.621548,2.492086,2.648061,-2.978314,-2.223149,-7.681371,-9.477685,1.571844,8.124168,8.519770,6.416161,5.658612,-6.415608,-3.417960,9.227638,-0.408953,-3.378038,-0.957000,2.512246,0.485434,-5.970964,-0.142039,9.366345,-4.397059,-1.736184,-4.120329,-9.486539,5.657659,5.198683,0.494427,-6.081710,8.157990,-3.600237,-1.721356,5.888324,1.884469,-0.682504,-5.235356,7.473944,-9.210822,-1.635802,5.628598,5.412791,-7.255759,-6.892444,5.095899,9.233393,-1.008418,2.531297,8.745441,-4.484667,-0.135984,-8.722725,-3.300620,4.363135,-3.932616,-8.757834,-8.147016,-7.088496,-2.800240,-7.107650,5.415720,2.933766,8.054665,-8.207522,0.693073,7.669763,6.797441,-6.329361,1.005481,2.443358,-9.937013,1.528685,5.830050,4.788363,8.741558,1.155726,2.295225,-6.994642,4.694475], dtype = "float64")#candidate|5367|(198,)|const|float64
var_5368 = relay.var("var_5368", dtype = "int32", shape = ())#candidate|5368|()|var|int32
call_5365 = relay.TupleGetItem(func_2625_call(relay.reshape(const_5366.astype('int64'), [3, 16, 1]), relay.reshape(const_5305.astype('int64'), [3, 16, 8]), relay.reshape(const_5367.astype('float64'), [198,]), relay.reshape(var_5368.astype('int32'), []), ), 2)
call_5369 = relay.TupleGetItem(func_2630_call(relay.reshape(const_5366.astype('int64'), [3, 16, 1]), relay.reshape(const_5305.astype('int64'), [3, 16, 8]), relay.reshape(const_5367.astype('float64'), [198,]), relay.reshape(var_5368.astype('int32'), []), ), 2)
func_1103_call = mod.get_global_var('func_1103')
func_1105_call = mutated_mod.get_global_var('func_1105')
call_5370 = relay.TupleGetItem(func_1103_call(relay.reshape(const_5305.astype('int32'), [96, 4])), 2)
call_5371 = relay.TupleGetItem(func_1105_call(relay.reshape(const_5305.astype('int32'), [96, 4])), 2)
output = relay.Tuple([call_5300,const_5305,uop_5353,call_5356,const_5357,call_5365,const_5366,const_5367,var_5368,call_5370,])
output2 = relay.Tuple([call_5301,const_5305,uop_5355,call_5358,const_5357,call_5369,const_5366,const_5367,var_5368,call_5371,])
func_5375 = relay.Function([var_5368,], output)
mod['func_5375'] = func_5375
mod = relay.transform.InferType()(mod)
mutated_mod['func_5375'] = func_5375
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5376 = relay.var("var_5376", dtype = "int32", shape = ())#candidate|5376|()|var|int32
func_5375_call = mutated_mod.get_global_var('func_5375')
call_5377 = func_5375_call(var_5376)
output = call_5377
func_5378 = relay.Function([var_5376], output)
mutated_mod['func_5378'] = func_5378
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5402 = relay.const([[[-7.811759,0.359826,0.628251,1.213346,9.439785,-6.674154],[1.882959,1.883270,2.230875,-5.869302,0.286600,-3.474666],[-1.234497,7.227087,2.904464,4.773547,-0.932374,-5.785328],[-2.052017,-4.523229,-6.988187,9.251708,0.108330,-5.323915],[-0.077773,-5.586104,-9.915463,-2.885031,1.837754,2.999530],[7.354453,-3.163820,-3.647613,5.251536,-5.402804,-9.831316],[-5.430562,-8.537190,-6.253719,6.287742,5.369048,2.445086]]], dtype = "float32")#candidate|5402|(1, 7, 6)|const|float32
uop_5403 = relay.cos(const_5402.astype('float32')) # shape=(1, 7, 6)
bop_5406 = relay.not_equal(uop_5403.astype('bool'), relay.reshape(const_5402.astype('bool'), relay.shape_of(uop_5403))) # shape=(1, 7, 6)
var_5422 = relay.var("var_5422", dtype = "float32", shape = (11, 7, 6))#candidate|5422|(11, 7, 6)|var|float32
bop_5423 = relay.multiply(uop_5403.astype('uint8'), var_5422.astype('uint8')) # shape=(11, 7, 6)
output = relay.Tuple([bop_5406,bop_5423,])
output2 = relay.Tuple([bop_5406,bop_5423,])
func_5432 = relay.Function([var_5422,], output)
mod['func_5432'] = func_5432
mod = relay.transform.InferType()(mod)
var_5433 = relay.var("var_5433", dtype = "float32", shape = (11, 7, 6))#candidate|5433|(11, 7, 6)|var|float32
output = func_5432(var_5433)
func_5434 = relay.Function([var_5433], output)
mutated_mod['func_5434'] = func_5434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4369_call = mod.get_global_var('func_4369')
func_4370_call = mutated_mod.get_global_var('func_4370')
call_5446 = relay.TupleGetItem(func_4369_call(), 1)
call_5447 = relay.TupleGetItem(func_4370_call(), 1)
output = relay.Tuple([call_5446,])
output2 = relay.Tuple([call_5447,])
func_5449 = relay.Function([], output)
mod['func_5449'] = func_5449
mod = relay.transform.InferType()(mod)
mutated_mod['func_5449'] = func_5449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5449_call = mutated_mod.get_global_var('func_5449')
call_5450 = func_5449_call()
output = call_5450
func_5451 = relay.Function([], output)
mutated_mod['func_5451'] = func_5451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4758_call = mod.get_global_var('func_4758')
func_4759_call = mutated_mod.get_global_var('func_4759')
call_5477 = relay.TupleGetItem(func_4758_call(), 1)
call_5478 = relay.TupleGetItem(func_4759_call(), 1)
func_3244_call = mod.get_global_var('func_3244')
func_3246_call = mutated_mod.get_global_var('func_3246')
call_5482 = relay.TupleGetItem(func_3244_call(), 0)
call_5483 = relay.TupleGetItem(func_3246_call(), 0)
output = relay.Tuple([call_5477,call_5482,])
output2 = relay.Tuple([call_5478,call_5483,])
func_5487 = relay.Function([], output)
mod['func_5487'] = func_5487
mod = relay.transform.InferType()(mod)
output = func_5487()
func_5488 = relay.Function([], output)
mutated_mod['func_5488'] = func_5488
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5558 = relay.var("var_5558", dtype = "float64", shape = (1, 4, 2))#candidate|5558|(1, 4, 2)|var|float64
uop_5559 = relay.sin(var_5558.astype('float64')) # shape=(1, 4, 2)
output = uop_5559
output2 = uop_5559
func_5571 = relay.Function([var_5558,], output)
mod['func_5571'] = func_5571
mod = relay.transform.InferType()(mod)
mutated_mod['func_5571'] = func_5571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5572 = relay.var("var_5572", dtype = "float64", shape = (1, 4, 2))#candidate|5572|(1, 4, 2)|var|float64
func_5571_call = mutated_mod.get_global_var('func_5571')
call_5573 = func_5571_call(var_5572)
output = call_5573
func_5574 = relay.Function([var_5572], output)
mutated_mod['func_5574'] = func_5574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5031_call = mod.get_global_var('func_5031')
func_5032_call = mutated_mod.get_global_var('func_5032')
call_5599 = func_5031_call()
call_5600 = func_5031_call()
func_3293_call = mod.get_global_var('func_3293')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_5623 = relay.TupleGetItem(func_3293_call(), 0)
call_5624 = relay.TupleGetItem(func_3294_call(), 0)
var_5631 = relay.var("var_5631", dtype = "float32", shape = (10, 3, 7))#candidate|5631|(10, 3, 7)|var|float32
bop_5632 = relay.mod(call_5623.astype('float32'), relay.reshape(var_5631.astype('float32'), relay.shape_of(call_5623))) # shape=(10, 3, 7)
bop_5635 = relay.mod(call_5624.astype('float32'), relay.reshape(var_5631.astype('float32'), relay.shape_of(call_5624))) # shape=(10, 3, 7)
func_3698_call = mod.get_global_var('func_3698')
func_3699_call = mutated_mod.get_global_var('func_3699')
call_5654 = func_3698_call()
call_5655 = func_3698_call()
output = relay.Tuple([call_5599,bop_5632,call_5654,])
output2 = relay.Tuple([call_5600,bop_5635,call_5655,])
func_5668 = relay.Function([var_5631,], output)
mod['func_5668'] = func_5668
mod = relay.transform.InferType()(mod)
var_5669 = relay.var("var_5669", dtype = "float32", shape = (10, 3, 7))#candidate|5669|(10, 3, 7)|var|float32
output = func_5668(var_5669)
func_5670 = relay.Function([var_5669], output)
mutated_mod['func_5670'] = func_5670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5449_call = mod.get_global_var('func_5449')
func_5451_call = mutated_mod.get_global_var('func_5451')
call_5684 = relay.TupleGetItem(func_5449_call(), 0)
call_5685 = relay.TupleGetItem(func_5451_call(), 0)
var_5686 = relay.var("var_5686", dtype = "float32", shape = (96, 4))#candidate|5686|(96, 4)|var|float32
bop_5687 = relay.greater(call_5684.astype('bool'), relay.reshape(var_5686.astype('bool'), relay.shape_of(call_5684))) # shape=(96, 4)
bop_5690 = relay.greater(call_5685.astype('bool'), relay.reshape(var_5686.astype('bool'), relay.shape_of(call_5685))) # shape=(96, 4)
output = bop_5687
output2 = bop_5690
func_5692 = relay.Function([var_5686,], output)
mod['func_5692'] = func_5692
mod = relay.transform.InferType()(mod)
mutated_mod['func_5692'] = func_5692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5693 = relay.var("var_5693", dtype = "float32", shape = (96, 4))#candidate|5693|(96, 4)|var|float32
func_5692_call = mutated_mod.get_global_var('func_5692')
call_5694 = func_5692_call(var_5693)
output = call_5694
func_5695 = relay.Function([var_5693], output)
mutated_mod['func_5695'] = func_5695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4758_call = mod.get_global_var('func_4758')
func_4759_call = mutated_mod.get_global_var('func_4759')
call_5713 = relay.TupleGetItem(func_4758_call(), 0)
call_5714 = relay.TupleGetItem(func_4759_call(), 0)
output = call_5713
output2 = call_5714
func_5738 = relay.Function([], output)
mod['func_5738'] = func_5738
mod = relay.transform.InferType()(mod)
output = func_5738()
func_5739 = relay.Function([], output)
mutated_mod['func_5739'] = func_5739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3192_call = mod.get_global_var('func_3192')
func_3193_call = mutated_mod.get_global_var('func_3193')
call_5740 = func_3192_call()
call_5741 = func_3192_call()
output = relay.Tuple([call_5740,])
output2 = relay.Tuple([call_5741,])
func_5759 = relay.Function([], output)
mod['func_5759'] = func_5759
mod = relay.transform.InferType()(mod)
mutated_mod['func_5759'] = func_5759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5759_call = mutated_mod.get_global_var('func_5759')
call_5760 = func_5759_call()
output = call_5760
func_5761 = relay.Function([], output)
mutated_mod['func_5761'] = func_5761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4078_call = mod.get_global_var('func_4078')
func_4080_call = mutated_mod.get_global_var('func_4080')
call_5770 = func_4078_call()
call_5771 = func_4078_call()
output = relay.Tuple([call_5770,])
output2 = relay.Tuple([call_5771,])
func_5806 = relay.Function([], output)
mod['func_5806'] = func_5806
mod = relay.transform.InferType()(mod)
mutated_mod['func_5806'] = func_5806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5806_call = mutated_mod.get_global_var('func_5806')
call_5807 = func_5806_call()
output = call_5807
func_5808 = relay.Function([], output)
mutated_mod['func_5808'] = func_5808
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5826 = relay.var("var_5826", dtype = "float64", shape = (9, 11, 13))#candidate|5826|(9, 11, 13)|var|float64
uop_5827 = relay.rsqrt(var_5826.astype('float64')) # shape=(9, 11, 13)
func_5668_call = mod.get_global_var('func_5668')
func_5670_call = mutated_mod.get_global_var('func_5670')
const_5830 = relay.const([-2.535945,-3.465620,-7.219532,-5.255713,1.335224,1.256734,-3.691264,-3.049850,-5.164551,3.574049,-5.870932,1.504231,7.716619,-8.318493,1.729776,-7.825126,-8.657615,-9.382638,-0.854485,-7.141001,-9.811404,-1.450517,-4.648119,-5.920155,-8.597765,-9.903564,-5.255197,3.284192,1.708701,3.625647,1.129863,5.060560,-1.489535,2.164761,-3.725296,-1.559368,3.754066,4.748005,-4.647137,-7.821423,-9.219827,5.941470,-2.836948,-4.888547,8.261230,0.910449,7.632129,-3.166605,-2.394744,9.702327,7.344636,6.076350,-1.032405,-0.762648,4.647246,5.447310,1.480232,-9.454974,-7.773625,0.724151,-2.439888,-9.446912,7.669175,7.764146,-0.846082,-5.968633,8.494606,-1.583584,7.796940,-4.590069,8.028238,-6.124824,-9.926125,7.074203,2.095593,-0.471191,9.662957,3.839509,2.096949,-9.540716,6.094128,9.395235,1.697190,0.470538,-3.214599,2.233441,0.641353,-5.727489,-0.482728,-5.745079,8.463453,-5.625031,-3.209264,3.198290,-0.374549,3.605466,5.499889,-6.100340,9.366729,3.289823,9.393350,0.497564,-8.506814,7.132489,3.239922,-2.327160,-0.107800,4.014807,-1.570413,4.759706,5.596517,2.148431,5.191917,4.594808,7.544054,0.711896,7.614702,9.208410,-8.886344,-0.166058,1.997167,-9.452055,7.891922,-7.401588,7.637225,8.865446,-4.056378,0.788027,-9.587795,-0.163059,4.390233,6.056306,4.333295,-6.802145,4.569333,5.263671,4.222456,-9.273893,-1.134777,-8.938339,-8.473482,-2.661469,-9.485903,0.288841,-4.672225,-6.018096,7.571445,-9.804480,5.996678,-1.384089,4.704294,0.984995,-1.909954,-9.704368,-9.189619,-5.648139,-0.232616,8.966042,-7.762649,1.946769,1.948892,-0.686756,6.137687,8.702619,7.574702,4.501387,1.510464,7.256416,6.975216,-1.774663,-4.550202,-1.970499,6.816117,-0.747162,-4.179273,-0.530959,3.562082,-0.366632,6.233105,1.117794,-1.499282,-5.245447,5.397597,0.519671,2.686656,-8.050266,-0.730536,-8.995262,7.692270,9.214015,-6.984836,0.527098,-8.244467,0.144696,7.202446,-4.282466,8.664893,5.660496,-8.970351,2.629024,1.468614,1.188092,1.367521,1.577554,-7.503628,-0.777986,3.405569,1.619358,-9.466158,5.367355], dtype = "float32")#candidate|5830|(210,)|const|float32
call_5829 = relay.TupleGetItem(func_5668_call(relay.reshape(const_5830.astype('float32'), [10, 3, 7])), 1)
call_5831 = relay.TupleGetItem(func_5670_call(relay.reshape(const_5830.astype('float32'), [10, 3, 7])), 1)
var_5840 = relay.var("var_5840", dtype = "float64", shape = (9, 11, 13))#candidate|5840|(9, 11, 13)|var|float64
bop_5841 = relay.add(uop_5827.astype('uint16'), relay.reshape(var_5840.astype('uint16'), relay.shape_of(uop_5827))) # shape=(9, 11, 13)
output = relay.Tuple([call_5829,const_5830,bop_5841,])
output2 = relay.Tuple([call_5831,const_5830,bop_5841,])
func_5845 = relay.Function([var_5826,var_5840,], output)
mod['func_5845'] = func_5845
mod = relay.transform.InferType()(mod)
mutated_mod['func_5845'] = func_5845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5845_call = mutated_mod.get_global_var('func_5845')
var_5847 = relay.var("var_5847", dtype = "float64", shape = (9, 11, 13))#candidate|5847|(9, 11, 13)|var|float64
var_5848 = relay.var("var_5848", dtype = "float64", shape = (9, 11, 13))#candidate|5848|(9, 11, 13)|var|float64
call_5846 = func_5845_call(var_5847,var_5848,)
output = call_5846
func_5849 = relay.Function([var_5847,var_5848,], output)
mutated_mod['func_5849'] = func_5849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mod.get_global_var('func_3244')
func_3246_call = mutated_mod.get_global_var('func_3246')
call_5857 = relay.TupleGetItem(func_3244_call(), 0)
call_5858 = relay.TupleGetItem(func_3246_call(), 0)
output = call_5857
output2 = call_5858
func_5863 = relay.Function([], output)
mod['func_5863'] = func_5863
mod = relay.transform.InferType()(mod)
output = func_5863()
func_5864 = relay.Function([], output)
mutated_mod['func_5864'] = func_5864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5449_call = mod.get_global_var('func_5449')
func_5451_call = mutated_mod.get_global_var('func_5451')
call_5926 = relay.TupleGetItem(func_5449_call(), 0)
call_5927 = relay.TupleGetItem(func_5451_call(), 0)
uop_5934 = relay.atanh(call_5926.astype('float32')) # shape=(96, 4)
uop_5936 = relay.atanh(call_5927.astype('float32')) # shape=(96, 4)
var_5943 = relay.var("var_5943", dtype = "float32", shape = (96, 4))#candidate|5943|(96, 4)|var|float32
bop_5944 = relay.add(call_5926.astype('int64'), relay.reshape(var_5943.astype('int64'), relay.shape_of(call_5926))) # shape=(96, 4)
bop_5947 = relay.add(call_5927.astype('int64'), relay.reshape(var_5943.astype('int64'), relay.shape_of(call_5927))) # shape=(96, 4)
uop_5953 = relay.sigmoid(uop_5934.astype('float64')) # shape=(96, 4)
uop_5955 = relay.sigmoid(uop_5936.astype('float64')) # shape=(96, 4)
func_4878_call = mod.get_global_var('func_4878')
func_4883_call = mutated_mod.get_global_var('func_4883')
var_5962 = relay.var("var_5962", dtype = "int64", shape = (48,))#candidate|5962|(48,)|var|int64
const_5963 = relay.const([0.930815,-0.636396,-9.480651,8.305899,3.423013,3.274654,-2.802480,2.564792,1.392751,-0.016229,-9.938856,8.503502,6.782049,5.277456,-8.403291,-8.623432,-7.339922,4.911437,2.306101,-1.739659,7.035364,-6.000172,-1.046455,2.634994,8.196064,3.999949,-3.846249,5.622101,1.141360,-9.698702,-3.600288,0.543423,0.239043,6.499768,-6.101616,4.531394,6.417520,1.292683,0.214252,4.909346,-2.861558,3.895600,5.606608,-5.220643,5.343712,7.985143,9.251562,-2.166528,8.258187,6.581638,2.078172,2.652447,-3.844711,-4.891250,2.921274,-8.421838,-1.833824,-4.213746,2.070380,0.415094,-3.369351,-7.792603,5.730052,-4.729895,-3.283247,-6.370719,5.571751,5.711654,-8.508058,2.475395,1.872219,1.208968,0.007517,-9.326324,-3.940985,6.574595,-4.939878,7.609090,3.812836,-7.031668,8.534996,3.166656,6.616858,5.182239,3.182015,5.660559,-4.710290,-8.194249,3.006643,-8.664775,-4.467706,-6.348086,9.195093,8.344960,7.320455,4.028870,-4.287330,4.745981,7.976420,-6.561607,-9.033320,7.488446,-8.630551,-6.525818,-4.981346,-2.159110,3.927813,6.885748,-7.293453,7.338318,1.572131,-5.631764,4.187193,2.099293,-8.977758,7.962395,2.105172,-0.954773,9.971142,6.643653,9.047907,-9.451301,-4.388527,-1.103457,-9.378036,3.871033,-1.786123,-3.303218,2.490061,-8.292640,6.621847,-6.622357,-9.038413,-9.196353,-3.405337,-1.444182,7.081619,-6.653650,-7.587786,-0.946882,-1.549492,-4.898239,-0.441100,-2.888680,-2.005394,8.168787,1.419183,7.212198,-5.939724,3.696433,0.387398,3.356273,-4.201030,5.902377,-6.896243,-0.281972,7.068659,8.218640,2.627409,5.698561,-5.757457,7.615200,9.052267,7.312527,-2.548692,-7.317815,-7.024207,4.886234,3.353456,-7.302172,-6.829485,-1.007859,0.600000,5.038594,2.486371,9.350699,-6.420790,9.094795,7.599228,1.914035,0.390569,0.636391,7.012668,6.499109,3.702647,-7.807000,-1.674287,4.391730,-6.205940,-8.482542,-3.485647,2.641286,-0.054609,-7.733210,-1.771975,4.770803,4.093875,4.756812], dtype = "float64")#candidate|5963|(198,)|const|float64
const_5964 = relay.const(-1, dtype = "int32")#candidate|5964|()|const|int32
call_5961 = relay.TupleGetItem(func_4878_call(relay.reshape(var_5962.astype('int64'), [48, 1]), relay.reshape(var_5943.astype('int64'), [48, 8]), relay.reshape(const_5963.astype('float64'), [198,]), relay.reshape(const_5964.astype('int32'), []), ), 4)
call_5965 = relay.TupleGetItem(func_4883_call(relay.reshape(var_5962.astype('int64'), [48, 1]), relay.reshape(var_5943.astype('int64'), [48, 8]), relay.reshape(const_5963.astype('float64'), [198,]), relay.reshape(const_5964.astype('int32'), []), ), 4)
output = relay.Tuple([bop_5944,uop_5953,call_5961,var_5962,const_5963,const_5964,])
output2 = relay.Tuple([bop_5947,uop_5955,call_5965,var_5962,const_5963,const_5964,])
func_5966 = relay.Function([var_5943,var_5962,], output)
mod['func_5966'] = func_5966
mod = relay.transform.InferType()(mod)
var_5967 = relay.var("var_5967", dtype = "float32", shape = (96, 4))#candidate|5967|(96, 4)|var|float32
var_5968 = relay.var("var_5968", dtype = "int64", shape = (48,))#candidate|5968|(48,)|var|int64
output = func_5966(var_5967,var_5968,)
func_5969 = relay.Function([var_5967,var_5968,], output)
mutated_mod['func_5969'] = func_5969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4718_call = mod.get_global_var('func_4718')
func_4720_call = mutated_mod.get_global_var('func_4720')
call_5987 = relay.TupleGetItem(func_4718_call(), 1)
call_5988 = relay.TupleGetItem(func_4720_call(), 1)
output = relay.Tuple([call_5987,])
output2 = relay.Tuple([call_5988,])
func_5989 = relay.Function([], output)
mod['func_5989'] = func_5989
mod = relay.transform.InferType()(mod)
mutated_mod['func_5989'] = func_5989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5989_call = mutated_mod.get_global_var('func_5989')
call_5990 = func_5989_call()
output = call_5990
func_5991 = relay.Function([], output)
mutated_mod['func_5991'] = func_5991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3293_call = mod.get_global_var('func_3293')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_5997 = relay.TupleGetItem(func_3293_call(), 0)
call_5998 = relay.TupleGetItem(func_3294_call(), 0)
output = relay.Tuple([call_5997,])
output2 = relay.Tuple([call_5998,])
func_6018 = relay.Function([], output)
mod['func_6018'] = func_6018
mod = relay.transform.InferType()(mod)
output = func_6018()
func_6019 = relay.Function([], output)
mutated_mod['func_6019'] = func_6019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4640_call = mod.get_global_var('func_4640')
func_4641_call = mutated_mod.get_global_var('func_4641')
call_6026 = func_4640_call()
call_6027 = func_4640_call()
func_2737_call = mod.get_global_var('func_2737')
func_2741_call = mutated_mod.get_global_var('func_2741')
var_6032 = relay.var("var_6032", dtype = "float64", shape = (2730,))#candidate|6032|(2730,)|var|float64
var_6033 = relay.var("var_6033", dtype = "int32", shape = (48, 8))#candidate|6033|(48, 8)|var|int32
call_6031 = relay.TupleGetItem(func_2737_call(relay.reshape(var_6032.astype('float64'), [14, 15, 13]), relay.reshape(var_6033.astype('int32'), [384,]), ), 2)
call_6034 = relay.TupleGetItem(func_2741_call(relay.reshape(var_6032.astype('float64'), [14, 15, 13]), relay.reshape(var_6033.astype('int32'), [384,]), ), 2)
uop_6040 = relay.sin(var_6032.astype('float32')) # shape=(2730,)
bop_6057 = relay.multiply(uop_6040.astype('int8'), relay.reshape(var_6032.astype('int8'), relay.shape_of(uop_6040))) # shape=(2730,)
const_6062 = relay.const([8.973789,2.569085,-2.462839,3.034558,-9.533296,-0.922996,4.588987,6.884510,-6.465782,-4.023589,-8.189128,-3.718899,-3.006917,5.258728,-1.713968,-2.794536,2.544728,-9.834182,-2.932340,0.854670,5.033783,5.746808,5.945014,9.807578,-6.641518,-2.206653,-4.307933,-9.917853,-4.439902,-1.812432,4.192178,-1.361695,-4.184561,-4.231944,-8.283105,-3.635621,7.661781,-9.328906,-1.666279,0.200571,-5.801204,0.575587,-5.934661,7.374024,9.637135,-9.589126,-4.718927,0.979542,0.304232,7.900941,-6.077277,9.275128,6.286637,-8.036099,-6.373555,-9.938392,3.762840,2.163859,-7.887891,-7.940082,-1.288734,-1.151246,-3.112558,-0.565286,0.480350,7.363963,1.841132,5.306395,3.105850,-7.272167,9.074878,-1.444688,-6.893242,0.519425,-2.189453,-9.923450,-6.586132,-9.043903,-7.065616,-7.056295,-0.326440,4.812594,-2.391430,5.538191,-1.151879,7.341553,-7.347870,1.708830,0.822040,1.258632,-8.732338,0.010785,-7.393335,2.889695,-9.158627,-6.933463,-8.878849,-9.871752,7.360485,-4.062738,4.092559,4.152696,3.451943,-6.773239,8.920087,-6.987179,1.793454,-8.302768,2.868612,-9.762575,0.799944,9.133845,4.603514,6.199148,1.514248,-6.041621,4.836123,-8.209032,-9.402320,-7.298008,5.317330,-9.693402,-1.821426,-0.408700,-8.927495,2.070136,-7.646188,4.540906,-1.361888,-9.502104,-9.549181,-4.423762,-4.361266,-0.353515,4.377111,0.977281,-7.344735,0.856838,-7.053559,-1.523530,-2.872491,6.502783,-2.090004,-9.111416,4.029050,-4.078891,-5.086405,2.996538,-4.317505,2.391220,-3.692745,-2.018295,-8.132343,7.043863,4.553770,-8.366287,4.560294,-4.589042,-1.125013,-7.626527,2.725466,-1.457031,3.067019,1.215466,2.759504,8.822834,1.481616,-7.985440,4.426853,-1.585337,-4.404137,0.449798,-9.114496,6.014717,-0.125202,-5.909229,4.742076,7.263364,4.181644,-9.310902,-2.343574,-8.526836,6.769490,2.124589,7.390967,3.304276,-0.847375,3.898275,0.937652,-5.010815,0.748346,4.966374,0.377761,9.686901,2.622725,7.233432,-6.343108,5.695508,6.592118,-2.754046,3.819640,-4.963057,-0.523217,-9.741198,-1.026671,-3.701444,-0.638423,-7.739666,-0.874077,-7.320480,7.009986,9.086044,1.203071,1.173592,-3.709794,3.404898,-0.486991,9.087571,-3.753198,-7.271137,-1.915397,-2.169634,-5.834160,-2.618507,-4.284453,7.863264,9.819832,3.336441,1.691510,1.650945,8.572133,2.083550,-9.999591,-6.956528,1.318816,9.723257,4.821474,-3.038514,0.857109,6.303122,3.575660,4.109942,8.924519,9.880648,-0.081471,-7.742846,-2.252788,6.263750,8.368010,6.437313,-2.010619,-5.707653,-4.408386,4.575206,-3.296074,2.872869,2.596552,-7.591714,-4.214280,-7.299893,-0.617959,-5.475982,-9.639335,8.483524,2.988999,-4.769405,0.440029,-5.277698,9.022651,4.570450,-0.972283,2.008728,-2.152937,-7.695172,-2.354220,3.020813,-9.298040,0.116398,1.986143,-9.651511,4.275521,-6.671083,8.344609,-5.412470,-3.220141,-1.539677,-5.748343,1.803021,9.913867,1.637358,-4.933608,-2.051183,-3.996441,9.198507,-2.500811,4.376440,5.608120,5.173268,-3.515938,7.483539,6.686574,0.145925,-7.468671,-8.836995,-6.720752,6.616971,-2.297246,2.646709,3.945936,-1.564682,-1.726117,8.229017,5.668553,5.158515,-1.477974,7.135542,-8.371313,2.673584,9.041054,0.245385,-5.196280,-0.408845,-3.472159,1.627941,-5.427985,-7.933584,6.387985,-6.755627,-6.519150,-5.921689,9.614657,-6.851351,-4.355363,-3.710555,-8.407514,-4.133486,-9.128241,8.331783,-3.723044,-9.516992,5.630271,-7.118968,-6.619236,1.318621,-4.417187,3.750629,4.279830,2.811780,3.059041,8.219660,9.487631,-5.103023,-4.907090,1.860634,7.492848,-2.927110,-4.078738,6.849156,7.016677,7.816852,7.065473,0.298730,-2.385958,-2.692965,-7.784994,1.926283,8.876185,9.954625,-6.637378,6.725740,-8.222926,-2.588329,-9.034545,8.648404,-2.288220,8.264418,9.522387,3.081478,7.922433,-1.300606,8.134689,-2.652278,4.797758,9.203190,-7.596287,2.451945,-6.421181,7.519511,-8.403510,-2.058123,0.127217,-2.648377,1.652466,-7.264423,8.100706,-7.691664,4.958857,-3.572485,8.646962,-5.786189,-2.092492,-0.545621,7.239446,1.508930,9.488077,-9.897738,3.409545,4.460863,-3.348409,0.376740,-2.363031,2.620594,-1.147138,8.919011,1.570499,9.904930,9.303426,-6.477954,0.508227,-4.038914,4.533408,2.803577,2.178253,0.189642,1.390292,-8.071085,9.665480,8.375712,7.307126,8.049323,-3.560928,-5.614791,-4.576391,-9.390199,-3.425124,-6.698484,4.382118,-3.500864,1.591899,3.083382,-8.750261,-9.104622,5.814264,-3.440082,-3.781036,5.025514,-9.846946,9.008758,-6.857792,9.729086,-0.639362,-3.557460,4.206788,2.809218,3.795273,0.074420,-7.336567,9.029906,7.765293,-2.438548,9.416374,-9.371051,3.699998,-6.656578,5.831246,-8.425563,-5.811093,-5.523535,1.844858,-2.243472,-1.913133,-1.898019,2.641519,-5.223737,5.861176,1.695196,-7.718560,8.647519,3.542849,4.581336,9.763312,-2.238075,-7.854373,1.675325,-5.889882,-0.436163,-9.993685,1.695707,-7.741514,-7.551817,-4.830760,-2.947583,-2.919722,-2.702384,-6.513397,-7.502173,6.383191,6.942116,0.094582,6.702208,-3.300568,-8.645530,4.949423,-9.847395,7.872158,4.641012,-7.831904,-9.856570,1.762687,-1.522038,-7.933649,2.938350,-0.076802,-7.193938,-0.315989,0.388337,2.824564,3.070297,-1.756868,8.707233,-0.346245,7.586219,-3.500863,5.924099,5.045436,0.219550,5.916676,4.435902,5.993943,2.979839,-2.165164,-3.473115,1.930349,-6.417224,-1.934943,1.616763,-3.258492,7.026827,6.149409,7.120176,7.395082,-4.172813,6.317479,-3.203147,7.816861,-8.059030,-0.327494,-9.640821,-9.515820,9.042174,-9.631580,-1.203236,-8.151490,4.289359,-0.635322,-0.747941,-6.831871,-7.361690,-3.674479,-6.947144,7.842658,5.513630,-3.463417,4.049755,-2.951271,7.920749,2.927833,-0.041134,8.012864,6.391088,-6.579088,1.526760,4.226679,-5.119610,-8.514177,2.845114,-3.985138,-1.905873,-4.000819,6.110246,-9.873986,3.854247,-1.080536,1.891406,-6.438243,-0.142504,-4.534118,3.539984,3.009790,-9.945369,-0.268356,8.572851,-4.043806,4.313123,6.228124,-2.686988,2.863591,-5.442369,3.615729,-7.707231,-3.819909,-4.219923,-7.306530,-6.882332,4.476596,-6.912609,2.509128,-7.721330,0.862068,-0.833535,2.086691,-3.953582,5.253048,-3.787462,0.909525,-0.398191,2.772423,-2.250501,-5.960503,-4.963131,4.076278,7.677129,-8.235941,7.452632,-7.326776,5.382970,-0.829845,-0.270173,-3.611314,-3.456280,4.901316,9.852778,7.695676,2.411384,2.688005,9.287660,-8.502813,1.224491,9.429737,-5.799309,-8.703012,4.911803,1.169838,-2.414977,-4.159002,8.410002,0.052884,6.814115,3.266456,-3.626077,-2.894259,9.632442,6.194438,2.059911,2.391150,-2.100275,8.780947,-1.853693,8.949402,-0.657457,6.395403,-0.421921,4.831994,6.955781,-3.692033,8.906634,-1.872150,9.475997,8.973687,-8.929691,-5.302112,-0.691042,-9.571171,-9.479798,-5.396832,5.966171,9.169672,-5.040039,1.167144,1.389127,-1.267860,-4.417118,9.287387,-6.888113,8.193235,-4.203841,9.936618,7.138323,2.132454,7.534382,8.991042,-2.389148,-7.710718,6.640396,-1.772359,3.368246,2.855781,8.266584,2.112030,2.006264,-4.729558,-7.235906,-6.032412,3.176201,-2.530360,7.913757,-3.523774,-8.068419,1.671133,-1.430681,-0.328859,-4.780758,-0.672682,-7.519135,7.299029,-9.756164,3.594145,5.090971,-9.511117,-6.348518,8.948166,-3.869664,4.668140,4.984304,-3.871219,-2.714953,3.029089,-3.562629,6.142027,-3.829438,-3.730833,-7.146053,1.338542,-2.308500,5.820583,-3.645857,-0.973323,-4.333144,2.396004,-0.610916,1.296039,-6.219922,9.172382,-6.602131,-6.095848,5.883744,4.383383,-4.302242,2.945575,6.391333,6.863428,-3.885192,-7.949143,6.619985,-2.836966,-4.590209,1.281200,-4.120868,6.019260,4.189994,2.069360,3.698496,-7.019946,-7.076692,-1.445627,-5.178765,9.494134,0.621463,2.876247,-5.470979,5.478179,-3.544987,9.559840,8.809726,4.141287,-5.896235,-2.173733,-7.759548,-6.479188,-7.457446,-3.091873,-1.191326,9.061625,1.645795,6.163063,-0.419197,-3.249619,0.621403,-9.482702,4.879044,2.055706,-8.576887,1.854215,-7.391691,3.471721,-4.514471,-1.265045,-6.649364,-2.782587,-6.411940,7.988255,-5.676476,2.436519,1.236035,3.457798,-2.319847,9.595346,-1.070336,9.382078,-9.359935,4.588128,-6.692665,0.135438,-1.514981,-1.146476,4.402498,1.388324,-3.275664,6.475982,-4.142842,-6.563751,9.176033,-4.909214,-6.674325,5.328166,-6.801796,7.210906,-6.502320,7.407414,-9.760632,5.940141,6.743152,-9.702932,-3.227066,-3.235535,-4.439913,5.788314,-3.192014,2.460061,0.605121,5.442653,9.354499,-8.519665,7.346538,-9.464670,8.735226,-4.037599,5.975365,-4.681185,-8.287200,-1.327348,5.609805,2.472845,7.837547,-6.774781,8.988139,6.328731,-4.374702,-4.863055,3.351143,-9.569316,-9.576299,-2.304026,3.344152,9.641764,9.653539,-1.026706,8.251499,-0.639004,-3.975353,0.662821,-1.503257,-8.526210,-3.496278,-9.917292,-5.255605,1.215868,3.988144,-2.604950,-2.282862,8.873085,1.379729,5.214617,5.039817,-5.418544,-0.010702,3.819834,-0.084323,-2.151957,-5.159993,-5.889105,2.612385,7.553954,1.996560,6.773659,-6.186624,0.134178,-9.956983,-1.016790,-2.728336,8.923166,0.639029,5.538110,-9.291143,-5.335220,2.396169,6.376439,-8.818419,3.317038,-5.687398,-3.999471,3.710023,5.603863,-4.019376,9.418963,-4.896135,1.721402,8.843107,7.655808,-3.953442,-3.655399,-1.732103,-3.494881,1.824099,6.451642,-8.424961,-1.623767,3.765197,0.930527,7.023619,5.779794,3.031716,7.005854,9.164901,4.271827,8.399445,7.407685,0.599387,-5.868947,-0.874806,6.897870,3.320646,-3.646986,5.623317,-8.764378,0.800910,-6.418752,8.911864,1.430790,-2.462405,-1.140031,7.278149,5.997320,-3.505742,2.485319,0.172399,5.280006,-6.619029,-6.590015,-2.802928,-3.623167,-6.144732,-4.014197,3.822776,-5.504384,-4.765982,5.007900,4.833229,7.882084,-9.664994,-6.462702,4.121923,3.268641,4.850213,6.392937,-3.747760,1.382731,-4.811490,-8.276098,-3.729181,2.305984,-0.525166,-1.674588,2.881095,8.712406,-2.168502,-9.544078,4.320825,6.877034,0.991491,-0.275307,-4.222635,-3.980352,-9.617843,-7.245540,7.420649,5.852991,-4.468562,5.862907,2.616603,-0.620203,-3.643262,3.838672,-4.190662,6.628479,5.882031,4.395006,6.057313,-5.988295,4.407744,-3.508413,-9.642151,-5.972196,5.205966,9.738848,-3.340666,-4.074620,-9.698269,-0.238131,-2.755681,-6.925185,-2.345985,-0.322199,3.870827,1.948799,3.588507,3.108007,6.781590,5.382877,-9.864475,-8.826038,-0.602583,3.509127,-9.719341,4.475225,0.167442,7.538512,2.391411,-8.914824,-2.766576,5.145264,2.182595,-1.633970,-3.509814,-1.858320,-9.634214,3.026853,1.695306,5.258572,2.609659,2.287644,-6.445436,-1.863102,-4.745756,-6.274633,-3.890201,-0.534651,-9.931383,-0.314792,-5.117113,1.722797,2.647394,1.598686,-1.787498,1.439909,8.213931,-4.794977,0.278979,-4.362270,2.677292,-1.273317,-0.976871,-3.085640,5.932877,-0.172455,0.592583,-4.001948,-3.058716,8.915329,-3.205184,-9.270897,4.811667,2.140155,0.638446,-4.819187,-4.554559,-0.746585,-4.723091,-0.645008,-7.714879,8.202226,-6.709045,-5.481000,-7.878135,0.661366,-2.933248,-7.281717,2.747767,-5.918201,0.270225,4.436558,-2.284234,6.776727,-7.517286,-7.026261,-6.174899,-8.854133,-4.056485,1.236637,4.605005,1.731699,6.497914,7.484200,-6.811427,9.204587,0.010688,4.421129,5.294139,-8.280528,-3.022028,-3.024649,-9.657306,-8.579375,5.767015,3.308742,-7.991444,5.325518,8.946667,-7.780752,-2.859144,2.831124,4.617057,2.477245,0.456259,-6.523862,2.203295,-0.595232,-0.395819,-0.240787,5.729945,-3.393776,-9.744558,6.186835,-1.353515,2.243120,2.351346,-8.696145,-9.035193,4.663117,8.298271,1.689129,-3.577614,7.553082,-8.293365,4.643172,9.537759,-7.119304,0.793976,4.821162,2.139259,-1.223040,-4.008746,0.916032,3.296582,-1.448085,1.297804,3.139553,-6.191477,-9.064999,-6.869619,-6.664661,6.317312,3.678436,-2.337543,-2.239538,-1.948140,-0.536636,-3.042726,5.077129,0.331947,-5.363862,0.557647,-5.517193,-4.592136,0.581310,-4.426811,3.363329,-6.539392,-5.515010,6.975210,-1.320525,-5.989307,-2.260114,0.122654,-0.499357,-6.050941,1.840127,-6.931807,1.219322,-1.607038,1.904984,-2.850453,-4.663006,8.132908,5.786877,9.987932,-1.824323,-9.007467,-3.993313,-9.610224,-8.378301,-1.295984,5.051108,-0.797480,8.736712,4.458673,5.701678,8.459295,-7.138708,2.968187,-6.968157,4.764923,-4.534738,6.707602,5.545457,4.395603,-9.863142,8.203383,-8.191831,-7.629249,-1.900478,-1.944949,2.448182,0.753950,-0.473559,6.562663,-3.710817,-8.801365,2.325562,3.900169,3.915786,-7.238524,-9.637081,3.962591,1.388128,9.046735,3.820954,-1.917987,8.441407,-0.683421,-8.039447,-8.915828,2.986552,7.233556,5.428955,7.469606,1.116874,-5.240533,-9.284369,-0.601769,-7.505315,7.791437,6.333224,-6.454766,-5.137007,-0.111306,0.288884,5.911430,4.355856,2.679687,0.641809,-4.488192,-3.532712,5.225186,-6.179394,7.793371,5.544265,3.277986,-5.044723,0.166547,-2.241544,2.300956,3.995572,-8.153410,6.533841,1.084529,3.641891,4.131398,-0.666809,-7.122779,-2.304664,1.938818,-4.846679,-2.348933,6.612746,4.112303,5.446073,4.876176,1.602995,-3.629573,4.880901,-6.253319,3.189345,-5.894382,-1.692498,-4.297897,-5.238127,-7.316118,-7.085214,6.183111,-3.805541,-0.699268,3.353296,-8.253076,1.909860,9.199161,-7.343911,1.915956,9.749020,-1.303738,-2.197666,-3.699590,-7.826922,-6.674757,2.095775,-0.563938,-6.777883,-1.853758,-8.752585,3.316501,6.711717,-0.626526,-6.804895,2.640140,-8.855280,2.802897,-6.739869,5.100097,-9.434768,-2.046279,-1.031180,5.243775,9.817261,-8.126515,5.108806,5.534400,4.192320,-0.741196,-0.399966,4.883589,9.835013,9.234307,1.691234,6.202023,-0.403155,8.406252,-4.922319,-7.598134,-1.744317,-1.981760,-4.017015,-3.065114,4.797591,2.121839,-7.945059,-3.422767,5.138869,-8.229278,6.442677,-2.625616,5.705144,-5.797212,-4.286180,2.596503,0.023134,-6.983844,6.799287,0.042420,-8.301729,-5.036003,-5.594445,-2.793686,6.423384,-4.447749,-6.013906,-8.904786,-0.222530,-3.385203,8.137763,-3.796394,4.289307,-3.204252,1.946175,4.058806,-0.034907,8.919296,5.508968,-3.637172,-8.822543,1.098996,2.995968,-3.615538,-4.136683,6.017459,-4.085650,-0.739601,-5.252406,-1.667295,8.284063,7.599787,-1.305081,-0.777363,8.760057,-0.723484,3.160076,-4.811194,1.899828,-6.148175,3.400966,-6.897322,2.554014,6.412998,9.936499,-0.856485,-0.814222,6.451267,-2.240232,-5.283295,-8.545837,1.682879,-8.450906,4.660896,-0.619813,8.990403,7.191335,0.897368,-5.711173,-3.660018,-2.791213,-8.145205,4.819651,2.205640,5.246435,6.072309,-1.220321,3.181052,-1.394470,8.973813,4.885645,9.034462,-8.161687,6.325223,9.781875,-0.730883,-5.309558,-9.780541,-3.102401,9.027604,5.904975,-8.980230,2.675055,-6.247513,-1.745843,-3.001788,-9.749214,-7.010138,-6.092767,-3.183408,3.571565,-5.459866,2.241986,6.833106,-6.618583,-8.973742,6.918465,-1.131303,-3.242003,1.381252,-2.867656,-1.993247,5.619564,7.548991,8.798411,7.780715,-2.237819,-7.079401,8.504081,-7.556147,6.279568,2.609453,5.373949,4.109426,9.041816,-2.624677,1.614836,-2.994350,1.503973,-6.230473,4.701585,0.306327,3.185102,-9.925431,-6.301151,8.942573,7.200355,-7.646851,-8.414740,-5.341482,-1.467136,3.043031,-5.405050,-7.931272,4.462126,-8.758000,6.054780,-4.231722,8.969990,7.830783,2.278801,7.489827,3.014532,5.630221,-1.845030,9.584493,-0.505943,-2.336984,4.164712,-2.811013,5.748115,7.057071,4.604059,-3.091332,-0.133081,-5.881589,-2.824341,-6.603059,4.058791,4.917057,-2.488196,4.664431,3.320997,7.391392,-5.629504,2.113134,-1.567772,-9.847535,-9.979296,-4.905718,-0.146433,9.183398,5.563394,2.309385,8.603026,-6.784741,9.499781,5.058519,1.209233,5.428175,-9.428323,7.744791,-8.716102,-4.818784,-5.803941,7.203667,8.437990,2.021083,3.019970,-0.148265,2.387129,-5.440781,-1.191801,3.201820,-1.002611,6.557351,5.510952,2.088292,9.025669,4.536050,-6.126329,-2.168979,5.451575,-8.187280,-1.425291,7.496088,9.284251,4.744759,4.321389,9.523382,1.753567,9.012177,-1.197244,-3.979994,-5.961884,8.258664,1.123706,9.894867,-9.762664,8.565774,-2.633575,-1.582484,-7.244511,8.156297,6.997165,7.764253,1.662144,8.046569,0.767863,6.196473,2.565487,-7.293989,9.998038,2.216782,-1.981565,-7.084774,-2.691924,-4.352171,-7.270207,-5.402943,9.325207,0.598290,-2.862620,-1.595932,-9.338701,-2.474601,-7.957323,-4.256326,-7.731160,2.119711,-4.778903,9.065531,7.777318,8.817364,0.957862,0.015175,2.217656,2.139103,6.090496,8.368687,-2.953674,-0.876552,2.614363,-4.780575,-4.728800,-5.924584,1.625337,3.249377,8.474648,4.235081,3.954409,0.140995,3.228333,-3.835316,-0.070121,-9.177179,9.889430,-0.894696,-5.371930,-8.446062,-1.965264,0.359451,-9.470775,-7.674289,-5.622829,-1.095067,-6.270068,-4.274925,0.472175,3.886504,2.991608,-6.117791,-3.569436,6.942565,4.541140,5.965053,-2.321097,9.072036,-7.578462,-9.319932,6.900099,-0.404425,8.425256,9.734592,1.336141,-3.604664,7.063351,-8.571633,4.551350,-5.952051,3.439084,6.705065,-1.964496,2.897241,-3.903295,6.651233,-1.369086,-2.210977,1.281658,-8.059941,-6.616301,6.373658,6.179351,1.324300,4.751373,0.380945,1.335732,-9.900977,-5.141200,-4.915616,6.180523,-0.229910,2.652490,4.082684,4.888769,-2.871841,2.935159,6.972604,8.155784,5.092122,-8.263918,9.150330,8.300147,4.566997,7.817161,1.758174,-9.014881,1.201066,-7.031890,-0.026095,-0.736655,0.559622,-5.037546,9.626326,3.649511,-8.802278,8.023375,4.825247,6.966213,-8.869071,5.754399,5.443982,-8.393929,6.809443,-9.900398,-4.182457,-4.597390,-6.033137,-3.906745,-2.971062,-8.201007,6.271721,2.383144,3.509955,3.873336,8.919244,2.415123,-6.990240,8.853363,-1.368974,6.245362,3.363170,-6.085718,-9.467367,6.348020,-5.352537,2.925482,9.987498,-8.087725,8.645908,3.775345,-0.244133,-7.561055,-5.945237,2.537339,5.369179,0.481522,-7.423323,-5.812881,-7.953244,-6.491115,7.145501,-2.506629,-8.776737,4.981374,-4.534282,-1.664387,5.015259,-1.821027,2.003782,-9.044283,-6.713559,5.807232,3.837168,-1.160402,0.285910,-6.601607,-7.459998,2.306762,-8.205761,0.038088,6.351620,4.056023,-0.685929,-7.486696,1.327453,-6.865842,-9.642445,8.272895,9.652496,4.553743,-8.622575,9.610071,-2.167732,0.644546,-1.158440,-5.824615,-6.501853,-0.322743,6.969468,-5.441259,-4.370018,-4.125592,-3.889324,-9.248072,5.373197,-6.984082,-9.547972,0.961890,0.756254,2.431652,9.043980,6.116762,0.471389,-0.186649,1.473313,-8.194608,6.140817,-7.267716,-0.350106,2.399911,7.100454,0.110469,6.471662,-2.025501,3.428619,-6.496250,7.420264,-6.799338,-8.989006,5.443741,-0.179326,0.732491,7.215862,0.672008,-6.392609,0.727571,2.178666,0.682920,3.682627,0.060625,7.545542,6.512202,7.561347,-1.373797,-4.999807,3.883243,2.466122,-9.156174,6.701025,-6.842317,-9.862096,1.294640,-7.951746,8.154099,-8.021834,-3.253763,-2.421220,5.820287,4.153870,5.194564,2.189072,-2.374155,6.485932,8.404492,3.472265,7.544939,-4.033587,0.210350,2.969354,-0.910842,9.560867,-6.858767,9.470137,1.582178,8.934714,-9.051970,-3.559150,8.131874,-6.840287,-2.876631,-1.499835,5.428044,-4.745910,1.543309,7.849458,7.400934,-3.905532,6.175127,1.441624,-5.405118,1.337861,-2.737314,-1.576647,-9.803298,-2.939013,-6.444451,-0.491369,9.050489,-8.493149,-3.428528,6.424331,-1.346485,0.307782,1.738834,-8.365203,0.678710,-8.650971,2.776928,1.680199,8.732944,-0.651837,-7.883215,-5.508098,8.374584,-4.247058,-8.061269,-9.329462,2.857862,-6.049411,-8.886166,5.301590,9.248002,6.568801,-9.814365,-4.453195,1.970197,6.486432,8.896511,0.236737,-8.769020,-4.483720,1.777857,0.672194,1.116430,4.959885,-8.761936,8.616705,2.827711,5.342118,-3.025061,8.653379,-6.202368,6.492883,-2.015835,5.667114,9.084673,-4.117991,-8.508998,0.204465,6.368365,9.436737,3.909778,4.112228,-1.479086,-3.486747,-1.228938,-5.132451,-7.068713,-9.440976,-7.893115,3.096079,-5.014193,4.428614,3.957828,-8.417103,7.136360,4.005670,-2.826860,4.394358,1.119874,4.377612,-8.265529,-0.282396,-7.232030,4.946101,-2.255667,-3.868506,-3.676599,9.953485,-7.324671,1.147676,-2.657049,4.927632,8.924441,9.137182,-3.401271,5.317706,-8.998337,-0.209919,-8.766668,6.713019,-9.445382,1.210898,5.387971,3.991191,-9.840141,-6.337150,6.015239,-4.122385,-1.782157,1.842744,-3.460407,3.407221,-7.187922,2.212618,-4.469844,-1.945726,-6.498186,2.938227,-8.343552,-0.178658,8.635133,7.589596,-7.314108,-1.226322,5.834478,3.289758,-1.019681,-6.619761,-2.253882,1.584221,1.196351,-6.419944,-7.460037,3.586476,-6.789257,9.882193,-5.333619,-0.915788,-2.276870,-2.194956,-3.686889,-3.414676,-0.454471,2.084424,-8.345850,1.002994,-7.958754,-1.920177,-7.025462,-7.642741,8.313129,-6.692122,-4.603304,-9.086215,0.622656,9.047611,-4.123032,-9.365004,-2.922470,-5.445595,4.490109,-7.397014,2.741735,-7.768336,1.288217,-7.557335,-4.298993,-6.140254,0.347007,-0.034646,3.298741,-4.398298,0.332758,1.905116,-2.105559,-7.824080,9.410287,-2.967182,8.640100,-7.994946,5.489113,6.762539,-9.953482,-7.824572,-9.606574,-3.683262,-2.292625,-4.746509,-3.465540,-9.010376,0.887049,-6.272365,1.675359,0.555602,2.595495,0.645284,-7.784958,-3.300206,4.345666,-3.179448,1.482584,0.723852,8.326776,6.681133,7.174132,-9.108668,1.224674,-7.568700,5.717260,7.971235,5.683890,4.558616,-9.208267,-9.623181,9.130962,7.502145,-8.012681,-5.634608,-2.170013,7.120137,0.093375,-6.046053,-6.701047,-3.646472,-8.126249,-6.883609,-1.299694,2.050851,4.977951,-3.282613,-0.835371,-0.059911,5.806604,-5.580132,-4.941418,7.272969,-5.237437,-0.272781,-7.840432,-6.282171,7.003420,7.667282,3.287813,-3.253521,-5.922413,0.848352,-1.066704,3.611077,-7.298600,-8.331362,5.480257,5.094959,3.613065,-2.773121,-5.489316,1.872887,7.657288,9.971963,0.469856,-3.378710,5.297527,2.276298,4.807918,0.831155,-4.256615,-9.856037,2.162332,6.928819,-6.162407,4.562067,9.004465,-6.653194,8.645005,9.006664,6.956129,-2.734934,0.323646,-9.194940,7.433186,-0.588044,6.689914,5.431575,-5.142463,-9.271938,6.500778,5.406185,-7.354270,0.351009,-5.905554,-9.859155,-2.079653,-7.259387,-4.049135,-8.375677,-6.150789,-4.310892,-6.290252,-2.356377,-0.185614,5.744350,-1.794374,-7.277031,-3.054363,-0.329109,-6.115660,-8.962866,-2.809616,-9.357545,5.638663,-2.649159,-7.994036,-3.863172,-3.523171,5.178906,6.716993,-2.277286,-8.801287,-5.854586,0.228995,2.208120,3.943128,-3.317141,-4.935236,0.852128,-4.455214,5.803865,-6.002914,7.581744,-0.558423,9.698754,8.902194,-3.451820,6.598008,-7.481478,7.928483,-9.354048,5.780532,-8.346293,-9.009978,1.209587,8.877766,3.192283,-7.141409,5.198522,1.820430,-3.438463,-1.122977,-6.902185,3.229382,-7.354245,-2.236892,-1.751321,-7.127761,0.262313,-4.272520,0.856901,0.538121,4.374543,9.763343,3.536826,4.148454,0.296176,-7.045130,9.943043,-1.148904,-2.531644,2.455210,-3.117615,-6.611685,-9.406612,-2.477744,-9.807789,-0.672322,-2.960287,-9.895169,-8.712928,5.036054,-9.665095,-7.323409,-1.116706,6.063241,7.803961,3.994728,-2.581766,-5.898569,-7.681169,-3.309862,-0.096015,-2.025934,-1.969161,-5.620078,-2.428268,-1.480106,3.396208,7.745703,0.668712,3.483902,8.973972,-3.952913,-1.167630,-5.402626,-8.442283,4.738796,3.831442,3.360853,4.795755,-1.905106,3.226454,-4.982452,2.407211,-0.608713,-4.321572,-8.942594,-1.870898,-7.958527,9.009695,7.653334,6.685862,-6.239037,-4.839454,0.147257,-5.744346,-9.395745,-5.488519,-2.438730,-6.074954,6.785473,-2.256490,-4.500717,-0.891258,9.290930,0.454239,0.629627,-0.136029,3.307378,0.737241,-9.203114,-0.446832,-9.095538,7.589365,2.856516,5.436034,-4.074205,-3.222219,4.645044,3.345743,-8.582836,9.223529,-5.500636,9.603688,9.182822,-0.028726,-2.250618,-6.783053,2.838404,-6.701739,6.527065,4.174983,5.299376,-6.434681,0.107334,-5.801758,-8.340323,8.748450,9.238844,-4.189186,-2.803328,-4.203440,4.902895,6.108048,-3.741080,4.232847,2.847390,4.916211,-8.672176,4.103068,-9.611848,5.921382,-0.681361,6.701862,-4.781739,-5.451300,-1.956141,8.286589,3.372121,-7.313584,-1.753987,4.948484,8.480922,2.731351,-1.750757,4.438940,-2.702214,6.235809,6.142897,-2.828191,-1.551365,-5.276672,1.790958,-3.625948,-9.642593,-0.476512,9.370611,1.420359,-8.274818,-2.891955,3.159564,1.210193,5.094587,-6.675360,1.818132,-1.670765,1.965731,-3.424127,-5.615055,5.283007,-9.905345,-4.434329,7.527775,-0.430115,-5.573058,-5.918651,-5.184767,3.457330,-4.355081,-8.088353,-2.837750,1.985767,-2.060464,-9.001388,8.506932,5.919201,2.359625,2.346431,2.128665,-7.409583,-4.622280,-9.055501,5.111149,-6.770674,7.140749,7.178596,7.375832,-9.306701,3.333615,5.995183,-3.601222,-9.296460,-1.011418,3.913187,4.661888,5.248087,-1.207406,-0.502557,1.234419,-2.381200,0.530231,-4.813344,-6.851181,-8.695485,6.004891,-7.807683,1.638062,0.192265,-1.377482,6.816642,-8.682123,-7.087329,-1.423203,-3.638904,7.760246,5.454809,8.621615,-7.261178,-6.395201,4.723000,-0.021464,5.061123,-3.073346,1.339138,9.305490,-4.891082,5.795982,7.930022,4.552396,3.916040,-1.908879,3.754582,-9.865439,9.374348,5.811080,-6.514750,1.024073,0.982626,-4.494113,-7.350831,6.024535,5.948176,2.788662,8.199915,9.655869,-2.675565,5.914937,9.831863,2.272467,-5.611803,0.956663,-8.681830,-0.827715,-3.741520,-0.337934,9.302254,7.591479,-3.646775,5.496179,6.593219,-6.411279,-5.713701,4.745885,4.954476,-2.659071,8.254565,-4.090667,-3.830718,4.867103,9.484729,-0.209208,-7.513513,8.261098,-6.139790,-5.125987,4.635159,9.144950,-3.054595,1.593889,4.495316,2.585948,9.964783,-2.919719,-5.664750,-3.196883,5.075141,-1.766561,-6.280256,-7.711136,-0.256330,-6.635288,9.825496,3.642580,4.223936,9.730500,7.915455,5.156133,-3.545168,-1.480104,-8.084960,-8.867780,3.458337,3.968291,6.012804,9.713651,-0.319849,6.896770,9.070001,5.797178,-6.617723,-4.015638,8.168621,-9.744898,8.121198,-1.253271,-4.114633,-6.400785,-2.241988,8.768282,1.378050,8.448216,9.445155,-5.242027,-9.017508,7.939409,-1.307050,-1.450260,7.431535,-4.175698,7.631275,-5.923518,0.232763,-2.682273,-6.414487,3.978954,-3.207213,5.722922,-3.611305,-0.957793,3.733451,6.620170,2.578848,6.262712,-3.201562,-5.302343,6.150834,0.128615,3.124648,-9.985892,-6.236168,3.999673,-4.349981,-8.340436,-2.338141,6.107857,-0.824250,-3.992693,-8.444502,-1.095465,6.787036,2.700082,-9.138852,9.393263,-3.622210,7.173016,-2.216485,4.453454,-4.038782,7.573553,-5.555305,-0.821547,4.157291,0.259231,9.676649,-0.050377,-7.517599,3.869216,4.741444,-3.813408,-3.161772,-5.666622,-4.034144,5.465913,7.549579,-2.842637,-1.867855,-7.952114,8.784405,7.409995,6.658990,8.581739,0.280840,-8.661193,1.564359,-4.569984,6.869423,-2.176689,-5.156853,-8.193397,-2.680672,-1.421317,4.330555,-0.915521,-8.169513,6.307780,-8.107387,7.397621,8.694028,-4.418542,-1.522965,-2.930159,8.578362,7.072071,8.302019,9.201940,-4.983727,-2.045567,-2.009057,-0.133582,-3.310077,-7.509352,-7.253800,2.020736,-3.509620,9.864639,-9.507842,-4.912619,-8.081554,-6.808562,1.000501,-1.088135,5.851710,0.841780,4.218786,-7.181341,-3.910849,-1.893793,-0.708589,-0.158486,1.059717,9.900651,-0.375262,6.298181,6.716492,-7.856421,9.224733,0.800301,6.828956,-3.793774,-0.789178,-9.736150,-0.214805,-3.053661,-8.657515,9.237466,-7.969768,-7.751042,-3.871700,6.515221,9.110385,-5.031122,-2.160422,2.511697,-3.628482], dtype = "float64")#candidate|6062|(2730,)|const|float64
bop_6063 = relay.logical_or(var_6032.astype('bool'), relay.reshape(const_6062.astype('bool'), relay.shape_of(var_6032))) # shape=(2730,)
var_6090 = relay.var("var_6090", dtype = "bool", shape = (2730,))#candidate|6090|(2730,)|var|bool
bop_6091 = relay.add(bop_6063.astype('uint32'), relay.reshape(var_6090.astype('uint32'), relay.shape_of(bop_6063))) # shape=(2730,)
uop_6103 = relay.atanh(uop_6040.astype('float64')) # shape=(2730,)
output = relay.Tuple([call_6026,call_6031,var_6033,bop_6057,bop_6091,uop_6103,])
output2 = relay.Tuple([call_6027,call_6034,var_6033,bop_6057,bop_6091,uop_6103,])
func_6105 = relay.Function([var_6032,var_6033,var_6090,], output)
mod['func_6105'] = func_6105
mod = relay.transform.InferType()(mod)
mutated_mod['func_6105'] = func_6105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6105_call = mutated_mod.get_global_var('func_6105')
var_6107 = relay.var("var_6107", dtype = "float64", shape = (2730,))#candidate|6107|(2730,)|var|float64
var_6108 = relay.var("var_6108", dtype = "int32", shape = (48, 8))#candidate|6108|(48, 8)|var|int32
var_6109 = relay.var("var_6109", dtype = "bool", shape = (2730,))#candidate|6109|(2730,)|var|bool
call_6106 = func_6105_call(var_6107,var_6108,var_6109,)
output = call_6106
func_6110 = relay.Function([var_6107,var_6108,var_6109,], output)
mutated_mod['func_6110'] = func_6110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4282_call = mod.get_global_var('func_4282')
func_4283_call = mutated_mod.get_global_var('func_4283')
call_6122 = relay.TupleGetItem(func_4282_call(), 0)
call_6123 = relay.TupleGetItem(func_4283_call(), 0)
output = call_6122
output2 = call_6123
func_6132 = relay.Function([], output)
mod['func_6132'] = func_6132
mod = relay.transform.InferType()(mod)
output = func_6132()
func_6133 = relay.Function([], output)
mutated_mod['func_6133'] = func_6133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4718_call = mod.get_global_var('func_4718')
func_4720_call = mutated_mod.get_global_var('func_4720')
call_6179 = relay.TupleGetItem(func_4718_call(), 0)
call_6180 = relay.TupleGetItem(func_4720_call(), 0)
var_6199 = relay.var("var_6199", dtype = "float64", shape = (3, 9, 2))#candidate|6199|(3, 9, 2)|var|float64
bop_6200 = relay.bitwise_and(call_6179.astype('uint8'), relay.reshape(var_6199.astype('uint8'), relay.shape_of(call_6179))) # shape=(3, 9, 2)
bop_6203 = relay.bitwise_and(call_6180.astype('uint8'), relay.reshape(var_6199.astype('uint8'), relay.shape_of(call_6180))) # shape=(3, 9, 2)
output = relay.Tuple([bop_6200,])
output2 = relay.Tuple([bop_6203,])
func_6210 = relay.Function([var_6199,], output)
mod['func_6210'] = func_6210
mod = relay.transform.InferType()(mod)
var_6211 = relay.var("var_6211", dtype = "float64", shape = (3, 9, 2))#candidate|6211|(3, 9, 2)|var|float64
output = func_6210(var_6211)
func_6212 = relay.Function([var_6211], output)
mutated_mod['func_6212'] = func_6212
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6228 = relay.var("var_6228", dtype = "float64", shape = (13, 2))#candidate|6228|(13, 2)|var|float64
uop_6229 = relay.atanh(var_6228.astype('float64')) # shape=(13, 2)
func_4282_call = mod.get_global_var('func_4282')
func_4283_call = mutated_mod.get_global_var('func_4283')
call_6257 = relay.TupleGetItem(func_4282_call(), 0)
call_6258 = relay.TupleGetItem(func_4283_call(), 0)
func_5966_call = mod.get_global_var('func_5966')
func_5969_call = mutated_mod.get_global_var('func_5969')
const_6261 = relay.const([1,-6,-9,-3,10,2,-1,10,-1,8,-7,1,-10,-8,-4,-8,-6,-5,-1,9,-4,-1,-1,-8,4,-8,-3,-2,3,-7,-6,3,-9,-8,-9,-10,-7,-10,1,-9,-4,-7,7,-1,1,7,-2,3], dtype = "int64")#candidate|6261|(48,)|const|int64
call_6260 = relay.TupleGetItem(func_5966_call(relay.reshape(call_6257.astype('float32'), [96, 4]), relay.reshape(const_6261.astype('int64'), [48,]), ), 0)
call_6262 = relay.TupleGetItem(func_5969_call(relay.reshape(call_6257.astype('float32'), [96, 4]), relay.reshape(const_6261.astype('int64'), [48,]), ), 0)
output = relay.Tuple([uop_6229,call_6257,call_6260,const_6261,])
output2 = relay.Tuple([uop_6229,call_6258,call_6262,const_6261,])
func_6264 = relay.Function([var_6228,], output)
mod['func_6264'] = func_6264
mod = relay.transform.InferType()(mod)
mutated_mod['func_6264'] = func_6264
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6265 = relay.var("var_6265", dtype = "float64", shape = (13, 2))#candidate|6265|(13, 2)|var|float64
func_6264_call = mutated_mod.get_global_var('func_6264')
call_6266 = func_6264_call(var_6265)
output = call_6266
func_6267 = relay.Function([var_6265], output)
mutated_mod['func_6267'] = func_6267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3293_call = mod.get_global_var('func_3293')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_6283 = relay.TupleGetItem(func_3293_call(), 2)
call_6284 = relay.TupleGetItem(func_3294_call(), 2)
output = call_6283
output2 = call_6284
func_6288 = relay.Function([], output)
mod['func_6288'] = func_6288
mod = relay.transform.InferType()(mod)
output = func_6288()
func_6289 = relay.Function([], output)
mutated_mod['func_6289'] = func_6289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4575_call = mod.get_global_var('func_4575')
func_4576_call = mutated_mod.get_global_var('func_4576')
call_6358 = relay.TupleGetItem(func_4575_call(), 1)
call_6359 = relay.TupleGetItem(func_4576_call(), 1)
func_3983_call = mod.get_global_var('func_3983')
func_3984_call = mutated_mod.get_global_var('func_3984')
call_6362 = relay.TupleGetItem(func_3983_call(), 0)
call_6363 = relay.TupleGetItem(func_3984_call(), 0)
var_6364 = relay.var("var_6364", dtype = "float32", shape = (96, 4))#candidate|6364|(96, 4)|var|float32
bop_6365 = relay.floor_mod(call_6362.astype('float64'), relay.reshape(var_6364.astype('float64'), relay.shape_of(call_6362))) # shape=(96, 4)
bop_6368 = relay.floor_mod(call_6363.astype('float64'), relay.reshape(var_6364.astype('float64'), relay.shape_of(call_6363))) # shape=(96, 4)
output = relay.Tuple([call_6358,bop_6365,])
output2 = relay.Tuple([call_6359,bop_6368,])
func_6381 = relay.Function([var_6364,], output)
mod['func_6381'] = func_6381
mod = relay.transform.InferType()(mod)
mutated_mod['func_6381'] = func_6381
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6382 = relay.var("var_6382", dtype = "float32", shape = (96, 4))#candidate|6382|(96, 4)|var|float32
func_6381_call = mutated_mod.get_global_var('func_6381')
call_6383 = func_6381_call(var_6382)
output = call_6383
func_6384 = relay.Function([var_6382], output)
mutated_mod['func_6384'] = func_6384
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6404 = relay.var("var_6404", dtype = "float32", shape = (7, 2, 6))#candidate|6404|(7, 2, 6)|var|float32
uop_6405 = relay.asinh(var_6404.astype('float32')) # shape=(7, 2, 6)
func_430_call = mod.get_global_var('func_430')
func_433_call = mutated_mod.get_global_var('func_433')
const_6415 = relay.const([2,4,-6,2,-3,-5,-2,-3,-10,4,10,-8,10,7,9,-9,9,-2,2,-2,10,-3,2,7,2,-7,-3,-5,4,-1,5,5,5,-8,3,1,7,-8,-1,10,-4,8,-2,2,-4,-1,5,2,5,-5,9,-2,10,-5,4,-6,4,10,6,4,-7,10,10,9,1,-6,2,7,9,-4,-9,3,-4,-1,-7,10,-9,3,2,7,-8,6,-2,-3,-6,3,-7,1,1,2,7,9,2,-7,6,8,8,5,6,10,2,7,10,-1,-8,-7,4,-2,8,1,-5,9,2,3,9,-9,-7,-2,-4,7,7,8,-2,8,-10,-3,9,-8,5,10,-7,6,-7,10,-3,-5,1,-2,6,2,-10,-10,-8,-1,-4,-6,3,-2,10,4,-10,-6,4,3,-9,-5,3,-9,8,3,-10,-10,3,-3,-7,-8,8,6,-1,4,-8,-10,-6,10,-6,3,-4,-1,8,-9,5,-10,1,-6,8,4,-7,-5,-3,7,9,-9,5,-9,-6,-10,6,-3,-7,-1,7,1,2,-8,-2,-6,5,4,-5,-6,1,-1,5,6,-3,9,6,5,-9,-3,-8,-1,-4,4,10,-8,4,-10,3,3,4,-5,3,10,-3,-2,-2,3,-10,3,6,8,3,1,3,4,-5,10,1,9,-3,-4,-5,-10,3,-2,-9,1,10,9,-3,3,-4,-7,4,-8,8,-3,8,-6,9,1,10,-1,3,4,-5,-3,1,-3,-7,-2,-4,6,8,-6,-1,6,-9,2,9,8,-2,-2,-3,7,-9,-3,-4,6,2,-1,-8,-4,6,-1,-1,-8,3,5,-6,-4,-1,-7,-9,-7,4,3,4,1,3,-2,4,-7,-9,-1,-5,9,5,3,8,4,-7,-4,-4,1,-8,2,-5,8,-1,1,7,4,-6,5,-10,-6,6,9,4,1,-7,5,-2,-7,6,-9,-10,5,3,-1,-9,-9,6,8,8,-3,2,8,-5,-5,5,-1,8,-4,-6,-1,4,3,-7,-2,-10,-1,-5,6,-4,-8,-6,5,-7,-6,-3,-9,8,7,-2,-2,5,7,-2,9,-6,4,-8,-8,5,-9,1,-7,1,-4,-4,9,10,7,-9,-8,5,-6,9,9,6,-2,7,7,3,3,8,5,8,-9,-10,1,-9,10,1,-1,7,-5,3,4,-1,-5,1,-8,4,5,6,-1,2,-2,1,9,7,4,-4,-9,-7,8,4,6,-5,6,-8,-8,-8,-5,-6,-7,-8,4,-9,-1,-7,4,-6,3,-3,5,-6,4,-7,-1,3,5,-6,7,2,-4,8,-2,8,6,-4,5,-7,-2,-5,-5,-10,2,-9,-3,-9,-4,5,-9,-3,8,-7,-7,-9,-9,3,-5,-4,1,7,8,3,3,8,-4,-9,8,5,-4,-6,1,7,-4,-4,-8,-3,9,8,5,-5,7,-3,-4,10,-3,9,8,9,-10,-7,5,5,-7,9,-9,2,10,2,-2,-2,-1,-8,-10,8,-1,8,-6,-4,-8,-4,-7,4,2,3,-8,-10,7,-7,6,-5,-4,-4,8,3,3,2,6,9,-3,1,-7,-2,8,1,7,-2,1,-1,-6,-6,4,8,5,5,10,-9,6,3,-1,9,-2,-6,8,3,-2,2,-6,-5,10,7,5,-8,7,6,-8,5,5,-3,1,-7,-5,-2,-1,-10,-6,-10,-4,5,-2,3,-5,9,2,-6,-10,-9,-4,-3,-5,-8,3,5,8,1,8,-1,-2,6,4,10,-7], dtype = "int32")#candidate|6415|(660,)|const|int32
call_6414 = func_430_call(relay.reshape(const_6415.astype('int32'), [6, 11, 10]))
call_6416 = func_430_call(relay.reshape(const_6415.astype('int32'), [6, 11, 10]))
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_6421 = relay.TupleGetItem(func_5163_call(), 0)
call_6422 = relay.TupleGetItem(func_5164_call(), 0)
output = relay.Tuple([uop_6405,call_6414,const_6415,call_6421,])
output2 = relay.Tuple([uop_6405,call_6416,const_6415,call_6422,])
func_6443 = relay.Function([var_6404,], output)
mod['func_6443'] = func_6443
mod = relay.transform.InferType()(mod)
mutated_mod['func_6443'] = func_6443
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6444 = relay.var("var_6444", dtype = "float32", shape = (7, 2, 6))#candidate|6444|(7, 2, 6)|var|float32
func_6443_call = mutated_mod.get_global_var('func_6443')
call_6445 = func_6443_call(var_6444)
output = call_6445
func_6446 = relay.Function([var_6444], output)
mutated_mod['func_6446'] = func_6446
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6451 = relay.var("var_6451", dtype = "int32", shape = (6, 12, 11))#candidate|6451|(6, 12, 11)|var|int32
var_6452 = relay.var("var_6452", dtype = "int32", shape = (6, 12, 11))#candidate|6452|(6, 12, 11)|var|int32
bop_6453 = relay.add(var_6451.astype('int32'), relay.reshape(var_6452.astype('int32'), relay.shape_of(var_6451))) # shape=(6, 12, 11)
output = bop_6453
output2 = bop_6453
func_6469 = relay.Function([var_6451,var_6452,], output)
mod['func_6469'] = func_6469
mod = relay.transform.InferType()(mod)
mutated_mod['func_6469'] = func_6469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6469_call = mutated_mod.get_global_var('func_6469')
var_6471 = relay.var("var_6471", dtype = "int32", shape = (6, 12, 11))#candidate|6471|(6, 12, 11)|var|int32
var_6472 = relay.var("var_6472", dtype = "int32", shape = (6, 12, 11))#candidate|6472|(6, 12, 11)|var|int32
call_6470 = func_6469_call(var_6471,var_6472,)
output = call_6470
func_6473 = relay.Function([var_6471,var_6472,], output)
mutated_mod['func_6473'] = func_6473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5031_call = mod.get_global_var('func_5031')
func_5032_call = mutated_mod.get_global_var('func_5032')
call_6486 = func_5031_call()
call_6487 = func_5031_call()
output = call_6486
output2 = call_6487
func_6525 = relay.Function([], output)
mod['func_6525'] = func_6525
mod = relay.transform.InferType()(mod)
output = func_6525()
func_6526 = relay.Function([], output)
mutated_mod['func_6526'] = func_6526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mod.get_global_var('func_4380')
func_4381_call = mutated_mod.get_global_var('func_4381')
call_6534 = relay.TupleGetItem(func_4380_call(), 3)
call_6535 = relay.TupleGetItem(func_4381_call(), 3)
output = relay.Tuple([call_6534,])
output2 = relay.Tuple([call_6535,])
func_6541 = relay.Function([], output)
mod['func_6541'] = func_6541
mod = relay.transform.InferType()(mod)
mutated_mod['func_6541'] = func_6541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6541_call = mutated_mod.get_global_var('func_6541')
call_6542 = func_6541_call()
output = call_6542
func_6543 = relay.Function([], output)
mutated_mod['func_6543'] = func_6543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5449_call = mod.get_global_var('func_5449')
func_5451_call = mutated_mod.get_global_var('func_5451')
call_6548 = relay.TupleGetItem(func_5449_call(), 0)
call_6549 = relay.TupleGetItem(func_5451_call(), 0)
output = call_6548
output2 = call_6549
func_6562 = relay.Function([], output)
mod['func_6562'] = func_6562
mod = relay.transform.InferType()(mod)
mutated_mod['func_6562'] = func_6562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6562_call = mutated_mod.get_global_var('func_6562')
call_6563 = func_6562_call()
output = call_6563
func_6564 = relay.Function([], output)
mutated_mod['func_6564'] = func_6564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3698_call = mod.get_global_var('func_3698')
func_3699_call = mutated_mod.get_global_var('func_3699')
call_6618 = func_3698_call()
call_6619 = func_3698_call()
output = relay.Tuple([call_6618,])
output2 = relay.Tuple([call_6619,])
func_6636 = relay.Function([], output)
mod['func_6636'] = func_6636
mod = relay.transform.InferType()(mod)
mutated_mod['func_6636'] = func_6636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6636_call = mutated_mod.get_global_var('func_6636')
call_6637 = func_6636_call()
output = call_6637
func_6638 = relay.Function([], output)
mutated_mod['func_6638'] = func_6638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3934_call = mod.get_global_var('func_3934')
func_3935_call = mutated_mod.get_global_var('func_3935')
call_6645 = relay.TupleGetItem(func_3934_call(), 0)
call_6646 = relay.TupleGetItem(func_3935_call(), 0)
output = call_6645
output2 = call_6646
func_6667 = relay.Function([], output)
mod['func_6667'] = func_6667
mod = relay.transform.InferType()(mod)
output = func_6667()
func_6668 = relay.Function([], output)
mutated_mod['func_6668'] = func_6668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3142_call = mod.get_global_var('func_3142')
func_3144_call = mutated_mod.get_global_var('func_3144')
call_6745 = relay.TupleGetItem(func_3142_call(), 0)
call_6746 = relay.TupleGetItem(func_3144_call(), 0)
var_6753 = relay.var("var_6753", dtype = "float32", shape = (10, 3, 7))#candidate|6753|(10, 3, 7)|var|float32
bop_6754 = relay.less_equal(call_6745.astype('bool'), relay.reshape(var_6753.astype('bool'), relay.shape_of(call_6745))) # shape=(10, 3, 7)
bop_6757 = relay.less_equal(call_6746.astype('bool'), relay.reshape(var_6753.astype('bool'), relay.shape_of(call_6746))) # shape=(10, 3, 7)
output = bop_6754
output2 = bop_6757
func_6782 = relay.Function([var_6753,], output)
mod['func_6782'] = func_6782
mod = relay.transform.InferType()(mod)
mutated_mod['func_6782'] = func_6782
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6783 = relay.var("var_6783", dtype = "float32", shape = (10, 3, 7))#candidate|6783|(10, 3, 7)|var|float32
func_6782_call = mutated_mod.get_global_var('func_6782')
call_6784 = func_6782_call(var_6783)
output = call_6784
func_6785 = relay.Function([var_6783], output)
mutated_mod['func_6785'] = func_6785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5759_call = mod.get_global_var('func_5759')
func_5761_call = mutated_mod.get_global_var('func_5761')
call_6834 = relay.TupleGetItem(func_5759_call(), 0)
call_6835 = relay.TupleGetItem(func_5761_call(), 0)
func_4282_call = mod.get_global_var('func_4282')
func_4283_call = mutated_mod.get_global_var('func_4283')
call_6836 = relay.TupleGetItem(func_4282_call(), 0)
call_6837 = relay.TupleGetItem(func_4283_call(), 0)
func_996_call = mod.get_global_var('func_996')
func_998_call = mutated_mod.get_global_var('func_998')
const_6839 = relay.const([-7,7,3,9,6,-8,-8,10,10,-8,9,-3,1,-9,2,-2,-4,-2,-6,7,-3,-10,4,7,-2,-6,-2,-5,6,9,-10,7,-10,1,2,-10,6,5,2,3,-8,-2,-7,5,-2,9,5,-6,-7,-5,-6,3,4,2,-4,9,-2,-4,9,2,4,-3,-9,8,-5,-4,-7,-5,-9,-7,1,-4,-9,2,6,9,-5,-10,3,-10,-10,-1,3,8,-4,2,-2,-6,5,-1,2,-2,4,1,2,6,-8,-9,-5,-3,-3,-2,-3,8,-8,8,2,-1,4,4,3,-7,10,-2,-2,-6,1,-2,8,-10,-2,10,-8,10,3,9,-5,9,-2,-2,5,3,-6,8,-6,2,-9,-10,3,1,4,-2,-6,-6,-1,7,6,3,5,-8,2,-9,-4,7,8,3,-8,3,-5,6,-9,3,-3,9,-8,10,-9,-8,-9,10,3,-1,8,6,-7,3,-5,3,-3,-9], dtype = "int64")#candidate|6839|(180,)|const|int64
call_6838 = relay.TupleGetItem(func_996_call(relay.reshape(const_6839.astype('int64'), [4, 9, 5])), 0)
call_6840 = relay.TupleGetItem(func_998_call(relay.reshape(const_6839.astype('int64'), [4, 9, 5])), 0)
output = relay.Tuple([call_6834,call_6836,call_6838,const_6839,])
output2 = relay.Tuple([call_6835,call_6837,call_6840,const_6839,])
func_6841 = relay.Function([], output)
mod['func_6841'] = func_6841
mod = relay.transform.InferType()(mod)
mutated_mod['func_6841'] = func_6841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6841_call = mutated_mod.get_global_var('func_6841')
call_6842 = func_6841_call()
output = call_6842
func_6843 = relay.Function([], output)
mutated_mod['func_6843'] = func_6843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6288_call = mod.get_global_var('func_6288')
func_6289_call = mutated_mod.get_global_var('func_6289')
call_6853 = func_6288_call()
call_6854 = func_6288_call()
const_6856 = relay.const([[8,5,6,-7],[-4,8,-6,-7],[9,10,-7,-4],[-9,-8,4,9],[3,-6,-3,-4],[5,8,8,-10],[-3,10,-3,2],[3,5,5,-9],[-1,7,-8,-2],[2,-6,-7,-9],[1,2,-6,-6],[-4,6,6,-8],[-2,10,6,5],[-1,-8,9,1],[-9,-4,5,3],[10,9,-7,-4],[3,-7,7,7],[-4,8,-4,-5],[-2,-7,-10,6],[-10,-7,-5,-3],[4,-7,3,9],[-1,-3,6,8],[-9,-4,-3,-1],[9,-7,-9,-3],[2,6,-4,-3],[3,-9,-3,6],[-2,-3,3,8],[-9,4,-7,3],[-7,-5,5,7],[5,7,-5,-2],[-3,1,-6,-6],[6,-7,9,2],[-8,-6,-6,-10],[-2,-1,-10,-3],[-9,-7,-5,-3],[4,-4,7,-8],[5,-1,8,-6],[-8,7,-1,9],[5,4,-10,1],[-7,9,-2,-3],[1,-2,3,1],[-4,-9,9,4],[5,-3,6,-3],[10,-7,6,-1],[-1,-8,-8,6],[-7,6,5,9],[-7,7,8,-6],[-1,-3,2,8],[7,-8,6,9],[-10,-9,-5,7],[3,-7,5,1],[6,-4,6,-2],[7,9,5,-7],[3,4,-6,-1],[-4,-2,-4,4],[7,-10,10,-7],[1,10,-4,-5],[-7,-6,-9,-4],[7,-1,-10,-1],[-2,1,3,9],[-6,4,-8,-6],[7,9,-10,8],[-8,-8,-3,-5],[-2,-7,6,8],[4,9,-10,-10],[10,-2,10,-8],[8,-9,5,-6],[-2,-1,-8,8],[1,-8,6,-10],[5,5,-4,8],[-8,-5,-2,-9],[5,-3,-9,6],[10,-2,2,-1],[6,6,8,3],[2,-9,8,-1],[8,-5,4,-8],[7,-1,4,10],[9,-1,10,2],[-10,8,-1,-3],[10,-7,-1,-1],[8,1,-3,1],[5,-8,6,8],[-5,5,3,6],[-8,-10,-1,-1],[-10,-9,1,4],[4,4,-5,7],[9,5,-2,7],[-5,10,7,-3],[2,-1,-3,-1],[-10,6,-7,3],[-7,-10,-9,-8],[6,-10,-7,-4],[-4,4,-4,4],[-9,-9,-5,2],[1,10,1,-6],[-6,-3,-9,4]], dtype = "int16")#candidate|6856|(96, 4)|const|int16
bop_6857 = relay.mod(call_6853.astype('float64'), relay.reshape(const_6856.astype('float64'), relay.shape_of(call_6853))) # shape=(96, 4)
bop_6860 = relay.mod(call_6854.astype('float64'), relay.reshape(const_6856.astype('float64'), relay.shape_of(call_6854))) # shape=(96, 4)
bop_6870 = relay.logical_xor(call_6853.astype('int16'), relay.reshape(const_6856.astype('int16'), relay.shape_of(call_6853))) # shape=(96, 4)
bop_6873 = relay.logical_xor(call_6854.astype('int16'), relay.reshape(const_6856.astype('int16'), relay.shape_of(call_6854))) # shape=(96, 4)
output = relay.Tuple([bop_6857,bop_6870,])
output2 = relay.Tuple([bop_6860,bop_6873,])
func_6883 = relay.Function([], output)
mod['func_6883'] = func_6883
mod = relay.transform.InferType()(mod)
mutated_mod['func_6883'] = func_6883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6883_call = mutated_mod.get_global_var('func_6883')
call_6884 = func_6883_call()
output = call_6884
func_6885 = relay.Function([], output)
mutated_mod['func_6885'] = func_6885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3142_call = mod.get_global_var('func_3142')
func_3144_call = mutated_mod.get_global_var('func_3144')
call_6906 = relay.TupleGetItem(func_3142_call(), 0)
call_6907 = relay.TupleGetItem(func_3144_call(), 0)
output = relay.Tuple([call_6906,])
output2 = relay.Tuple([call_6907,])
func_6940 = relay.Function([], output)
mod['func_6940'] = func_6940
mod = relay.transform.InferType()(mod)
mutated_mod['func_6940'] = func_6940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6940_call = mutated_mod.get_global_var('func_6940')
call_6941 = func_6940_call()
output = call_6941
func_6942 = relay.Function([], output)
mutated_mod['func_6942'] = func_6942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5989_call = mod.get_global_var('func_5989')
func_5991_call = mutated_mod.get_global_var('func_5991')
call_6960 = relay.TupleGetItem(func_5989_call(), 0)
call_6961 = relay.TupleGetItem(func_5991_call(), 0)
func_4380_call = mod.get_global_var('func_4380')
func_4381_call = mutated_mod.get_global_var('func_4381')
call_6965 = relay.TupleGetItem(func_4380_call(), 3)
call_6966 = relay.TupleGetItem(func_4381_call(), 3)
func_3441_call = mod.get_global_var('func_3441')
func_3449_call = mutated_mod.get_global_var('func_3449')
const_6974 = relay.const([-7.692858,-1.488633,-1.712850,-8.354076,1.083483,3.863058,6.024867,-1.967168,4.900828,-9.182294,-6.543717,1.168981,-5.747622,-2.099120,-2.399038,-6.450582,1.268539,6.150848,0.579878,2.742958,8.724354,-8.748632,7.921406,-4.844494,-8.091073,-5.187219,8.870519,3.084067,5.246775,1.810760,-5.614303,7.583127,0.066541,6.303444,-8.888897,8.007631,-8.271279,3.786436,-3.555953,-8.865638,-8.663297,7.514959,-7.540480,2.941609,9.642485,8.135709,-3.182663,1.219558,0.158684,2.819898,9.343470,1.793136,-9.680312,6.256407,-6.202235,-4.031002,7.855039,-6.396389,-8.176570,6.695515,6.483283,1.184558,3.295662,8.667038,6.558908,7.992160,6.135652,-4.220522,8.342124,-4.217483,1.145957,-2.163148,0.171786,-0.683568,-3.347069,3.473399,-5.829572,-0.992434,7.027278,-9.170238,-8.343829,2.417927,-9.654141,9.720600,-0.988456,8.871656,-9.521268,-6.361858,8.083686,9.245159,-5.699498,9.745658,8.803449,7.693101,6.146284,-5.302401,7.442894,6.441064,4.738461,4.078740,-8.016444,-1.150472,-9.663662,-7.754249,9.156353,4.320344,-6.086123,9.638473,-1.932247,-0.763318,-9.517534,4.726013,1.909455,-9.175125,-1.251166,-9.642214,-7.487339,8.701102,7.438144,-5.441669,-8.145234,-6.708127,-6.674908,-2.582755,-9.434773,-5.176873,4.574472,-9.883051,-9.549063,-6.006101,-9.828585,-9.233243,3.083714,0.100274,9.865403,9.350976,-1.583150,7.200817,9.213662,1.950971,-6.020717,6.844146,-4.086936,-5.232686,-9.708917,6.637555,6.036282,3.156107,7.250778,6.226299,7.852511,-5.082552,4.616059,-6.020311,-6.173803,-1.946769,-0.641714,-0.895022,-3.236963,5.005852,0.442309,8.556876,-7.368443,1.532526,-1.407372,5.013842,-1.271274,4.571312,3.840120,-0.048424,4.112871,-9.649056,-4.293891,-2.300485,-7.659507,2.292844,-3.033343,-6.050552,-6.624477,2.562517,7.838154,-4.784570,-6.365132,1.992950,0.805246,6.492431,-6.299985,-8.362094,7.429650,4.915192,4.877831,1.177534,-3.558934,-1.061643,-9.158944,2.976137,-5.412923,5.435272,7.573502,-4.800436,-7.765950,2.259763,-0.327736,-1.107661,4.909583,6.949925,-1.246333,-8.907542,-6.542549,9.437179], dtype = "float32")#candidate|6974|(210,)|const|float32
var_6975 = relay.var("var_6975", dtype = "float64", shape = (360,))#candidate|6975|(360,)|var|float64
var_6976 = relay.var("var_6976", dtype = "int64", shape = (48,))#candidate|6976|(48,)|var|int64
var_6977 = relay.var("var_6977", dtype = "int64", shape = (384,))#candidate|6977|(384,)|var|int64
var_6978 = relay.var("var_6978", dtype = "float64", shape = (2730,))#candidate|6978|(2730,)|var|float64
call_6973 = relay.TupleGetItem(func_3441_call(relay.reshape(const_6974.astype('float32'), [10, 3, 7]), relay.reshape(var_6975.astype('float64'), [360, 1]), relay.reshape(var_6976.astype('int64'), [2, 24]), relay.reshape(var_6977.astype('int64'), [384,]), relay.reshape(var_6978.astype('float64'), [7, 390]), relay.reshape(const_6974.astype('float32'), [10, 3, 7]), ), 1)
call_6979 = relay.TupleGetItem(func_3449_call(relay.reshape(const_6974.astype('float32'), [10, 3, 7]), relay.reshape(var_6975.astype('float64'), [360, 1]), relay.reshape(var_6976.astype('int64'), [2, 24]), relay.reshape(var_6977.astype('int64'), [384,]), relay.reshape(var_6978.astype('float64'), [7, 390]), relay.reshape(const_6974.astype('float32'), [10, 3, 7]), ), 1)
func_6018_call = mod.get_global_var('func_6018')
func_6019_call = mutated_mod.get_global_var('func_6019')
call_6985 = relay.TupleGetItem(func_6018_call(), 0)
call_6986 = relay.TupleGetItem(func_6019_call(), 0)
func_4260_call = mod.get_global_var('func_4260')
func_4261_call = mutated_mod.get_global_var('func_4261')
call_6989 = relay.TupleGetItem(func_4260_call(), 0)
call_6990 = relay.TupleGetItem(func_4261_call(), 0)
func_5449_call = mod.get_global_var('func_5449')
func_5451_call = mutated_mod.get_global_var('func_5451')
call_6992 = relay.TupleGetItem(func_5449_call(), 0)
call_6993 = relay.TupleGetItem(func_5451_call(), 0)
func_4619_call = mod.get_global_var('func_4619')
func_4621_call = mutated_mod.get_global_var('func_4621')
call_6994 = func_4619_call()
call_6995 = func_4619_call()
bop_7004 = relay.bitwise_xor(call_6992.astype('int64'), relay.reshape(call_6973.astype('int64'), relay.shape_of(call_6992))) # shape=(96, 4)
bop_7007 = relay.bitwise_xor(call_6993.astype('int64'), relay.reshape(call_6979.astype('int64'), relay.shape_of(call_6993))) # shape=(96, 4)
func_2102_call = mod.get_global_var('func_2102')
func_2105_call = mutated_mod.get_global_var('func_2105')
const_7009 = relay.const([6,4,-6,-1,6,3,-10,-7,7,8,-8,-9,-7,-10,-10,9,-2,-6,-9,-9,-10,3,9,2,10,4,-4,-5,-2,9,6,10,10,8,2,6,-10,-1,-9,-7,-4,8,-3,-9,8,9,-6,3,4,5,1,-7,10,-1,10,7,8,3,6,10,-2,9,-7,-3,-8,-6,-2,9,2,9,10,7,-1,1,4,5,-10,3,-9,-8,-7,-5,9,10,-7,-5,-7,5,3,-7,-9,3,7,7,-2,-2,-1,-7,2,-4,-8,-6,-1,3,8,1,4,-9,9,8,2,2,8,6,9,-1,-6,10,-9,-1,4,-6,-5,-9,10,-8,9,6,1,9,1,-7,-8,-6,1,-6,9,-5,-9,-1,-4,-3,-8,10,2,-9,9,10,2,-6,3,-8,-6,-1,7,-5,-10,4,7,9,-3,-2,2,-2,8,-7,-2,7,8,-2,-9,-8,5,-9,5,-2,6,-3,-6,3,4,6,7,-3,-1,-1,-4,-1,8,1,-10,2,-7,-4,-9,-6,9,1,7,-10,-1,-1,10,3,-4,3,-9,9,1,8,10,-5,10,-2,9,7,5,-6,2,6,6,-1,6,1,-1,7,7,-10,-7,-3,-6,-8,-8,9,2,5,5,-2,-6,-8,2,-8,-9,-3,1,-3,-6,-10,-3,-4,4,-4,-5,-10,9,-8,5,-9,4,-9,10,2,4,2,-2,-4,-8,-5,-7,4,7,5,9,4,-8,8,8,-5,3,10,4,4,-4,-6,8,-5,3,-4,-5,-6,3,10,4,-4,3,-6,9,10,1,-4,-6,-1,-10,1,-5,-10,-1,-2,8,-3,9,1,-9,1,6,8,-4,-9,4,-4,7,7,-8,2,-4,-10,-6,1,9,9,7,7,6,10,8,-9,9,2,7,-5,2,-4,-4,8,-8,1,2,-7,-6,10,-10,-8,7,6,5,-6,7,-5,-8,-8,-8,10,-9,-10,-3,-6,9,1,5,3,3,6,1,4,-4,4,3,6,2,-4,6,7,5,3,-9,7,6,-1,5,-6,8,-5,-5,-1,-6,-1,7,10,-8,-10,-9,-9,2,-4,7,-8,-2,-8,-5,-4,-5,5,-3,-4,10,-7,2,-4,10,-3,-7,-6,5,8,4,-3,4,-3,-3,-7,-2,1,-4,10,2,5,-6,10,4,1,9,6,-2,-2,7,-9,8,5,-5,-8,-10,-10,-3,-8,-10,4,3,-3,-1,1,6,7,9,6,8,-3,-6,-5,-3,5,-3,3,10,-4,-2,-7,4,2,5,-7,1,-1,1,5,10,7,10,-1,7,9,10,-10,1,8,-10,-1,5,10,-10,1,-5,-5,-10,5,-4,9,-4,10,10,3,5,1,-8,5,5,7,-6,-7,1,-4,-6,-10,-1,-8,-10,-1,5,-4,-4,-10,-7,-9,3,9,-7,10,-5,6,3,-5,4,-8,9,-3,-1,1,2,-10,7,-9,-2,10,1,3,9,-7,-5,4,-6,-6,10,6,-7,-6,-8,9,-6,-7,-4,-1,2,5,-2,1,6,5,-5,7,-9,-6,-2,7,3,-6,-6,-9,-6,6,-3,-6,-8,-6,-5,-7,-8,9,10,-7,-10,10,-2,6,3,-6,1,-7,6,-2,-6,3,-3,-5,10,8,5,-8,6,4,6,-8,-3,-5,-8,-8,-7,-10,5,5,-7,5,-10,-10,-7,-8,4,1,2,-6,3,5,-7,2,10,7,-2,-9,9,1,-4,10,-6,5,7,8,-5,3,10,4,-3,-7,-7,-7,8,2,-8,9,-5,4,6,-3,-7,-5,-2,-10,1,-1,-6,5,-8,-5,3,-10,8,10,6,-7,2,3,-10,-2,-10,1,1,9,5,6,6,6,-2,2,-4,2,-2,1,-7,4,3,-3,-3,6,4,8,7,-8,2,8,8,1,4,3,-2,1,4,2,4,-9,-9,2,3,-7,-9,-1,5,-8,-2,2,-10,3,-7,-5,-4,-1,1,1,3,-7,2,-9,9,-6,10,7,1,6,-9,-8,3,-6,-3,8,-4,8,2,3,-7,-2,-6,-7,-3,6,-3,-4,6,-3,-8,6,-6,10,-4,-9,1,-9,4,-8,10,8,-8,2,-4,-6,-5,-6,9,-9,8,-5,1,6,10,4,-7,3,-9,-1,9,-5,10,-3,7,3,2,-4,1,-10,-5,-3,9,10,-1,10,8,6,9,8,-3,-3,8,8,9,-2,-2,-7,-1,8,-7,3,6,-7,9,2,8,-7,-5,8,10,-8,-3,3,1,-7,10,6,-9,2,10,-2,-3,5,-3,-2,2,-5,-5,10,-2,4,7,9,-3,-6,8,1,6,-9,-8,-3,-1,7,9,-9,6,-4,-3,1,-5,-1,4,4,6,10,-2,-6,1,8,3,-10,3,2,-6,-6,-9,-4,6,4,1,8,8,8,-7,1,6,-9,-7,8,3,4,10,-6,8,-8,5,-2,-2,-6,9,-1,1,7,-2,-1,9,-8,7,-5,3,4,3,-2,-8,-6,-6,-1,8,4,3,6,3,2,5,5,-3,7,-4,-1,-7,-9,-3,-9,10,-10,1,6,-9,1,6,-1,4,-2,-6,1,9,8,4,-2,3,7,9,7,2,1,6,6,9,8,-3,3,-3,-6,10,-1,-2,-8,-2,7,3,-3,-10,-8,-8,-8,-9,3,-2,9,6,7,-6,9,10,-5,3,-3,-6,-4,1,-5,1,-2,-6,-6,-9,-2,-8,5,6,2,-10,2,7,-10,8,-9,-5,3,-2,-6,10,5,9,-7,-2,4,-5,7,4,2,-5,2,-2,1,-2,4,-5,1,3,-8,-6,-8,-9,-2,-4,-7,-5,-9,2,2,9,7,7,7,-5,-6,7,1,-8,-1,7,-3,4,1,6,-1,1,8,-5,9,-1,-2,-8,-6,-6,-1,6,-5,-10,8,8,-10,9,-9,4,-6,-3,-5,9,-7,2,-8,-4,9,-7,-9,-6,6,-6,10,2,-6,4,6,-5,-10,3,-5,1,4,-1,-5,-1,-2,7,-8,10,6,7,9,6,-1,7,9,-10,-6,-5,7,3,4,3,-8,8,-9,7,7,7,-4,3,-2,8,1,-8,-1,8,-8,-9,-6,-2,10,-4,5,-6,-8,6,-2,-8,8,-1,-5,-6,4,3,2,4,7,10,1,-2,-5,-7,-3,-1,-10,-1,3,-10,-5,-6,10,-1,-10,-10,-9,10,-3,2,-3,-8,-7,-8,8,-9,4,-2,-7,-3,5,10,10,-7,-8,-8,4,-3,-6,-1,-10,-9,-6,-9,3,-10,7,-10,1,-9,-10,1,2,-3,7,-3,4,1,3,3,-4,-4,-4,-8,-4,7,4,8,-3,6,-4,-7,3,8,-10,1,3,-4,10,3,9,-9,-7,-10,-7,10,-7,10,5,-5,-9,8,2,7,4,-9,10,-9,-5,9,7,-3,-4,-2,3,5,-4,1,5,-9,10,5,3,8,2,2,-7,-4,10,-2,-5,-2,-10,-4,-3,-5,8,4,3,-3,-9,6,10,9,-8,-2,9,-10,6,-5,7,-1,-1,8,7,3,-6,4,-1,-5,-5,9,-2,-5,5,7,-4,-6,-3,3,8,8,6,-10,-4,-5,-2,4,-3,2,1,-9,10,-1,4,5,-9,3,-4,2,8,10,2,-5,3,3,9,-10,-9,-5,5,4,2,9,10,7,-9,-7,-1,5,10,-9,-2,-9,9,6,4,10,-7,6,-10,-7,-2,-9,-7,-6,-4,9,5,9,-1,-10,6,3,-8,-3,3,-7,-4,-7,-3,-1,9,5,7,-10,10,5,9,-1,8,5,-6,8,1,3,10,10,-4,-5,-8,9,-6,-6,-2,-2,-3,-4,9,8,-7,3,5,-7,8,-9,-9,-4,5,-10,9,7,-10,10,1,9,-9,5,4,4,-6,-8,-5,1,-4,-7,4,-2,5,4,-10,-5,-3,-4,2,9,-4,4,1,7,6,-6,-8,-5,-2,10,-9,-2,7,1,7,9,9,1,7,-3,4,5,8,6,8,4,2,2,-4,-9,3,2,-9,9,-3,-1,2,10,6,1,-3,-3,-3,-4,-8,-9,1,10,-6,-8,-3,-9,-6,6,4,-10,-4,-4,10,5,-1,6,8,1,-8,7,1,8,-5,-1,-4,6,6,7,7,1,-8,7,-6,4,-9,-7,6,-10,-10,10,4,3,7,5,4,2,-4,10,9,-5,-6,1,-8,3,-1,-3,10,-4,-4,8,4,1,-9,9,-6,8,-9,-4,-7,-6,-1,-3,4,5,-4,-7,-5,6,9,3,2,-9,-10,9,-1,6,-5,-2,-8,-7,2,-1,-10,10,-4,7,4,-6,-9,2,9,4,8,-3,3,-9,3,1,-8,-7,5,8,-9,4,1,-10,5,-6,-9,1,8,8,-1,7,1,-6,7,6,10,4,7,2,9,6,7,-4,9,-8,-1,4,10,-8,3,3,-5,5,-2,-3,6,-2,7,2,6,-8,7], dtype = "int16")#candidate|7009|(1680,)|const|int16
call_7008 = func_2102_call(relay.reshape(const_7009.astype('int16'), [16, 15, 7]), relay.reshape(const_7009.astype('int16'), [16, 15, 7]), )
call_7010 = func_2102_call(relay.reshape(const_7009.astype('int16'), [16, 15, 7]), relay.reshape(const_7009.astype('int16'), [16, 15, 7]), )
func_5136_call = mod.get_global_var('func_5136')
func_5138_call = mutated_mod.get_global_var('func_5138')
call_7011 = relay.TupleGetItem(func_5136_call(), 1)
call_7012 = relay.TupleGetItem(func_5138_call(), 1)
output = relay.Tuple([call_6960,call_6965,const_6974,var_6975,var_6976,var_6977,var_6978,call_6985,call_6989,call_6994,bop_7004,call_7008,const_7009,call_7011,])
output2 = relay.Tuple([call_6961,call_6966,const_6974,var_6975,var_6976,var_6977,var_6978,call_6986,call_6990,call_6995,bop_7007,call_7010,const_7009,call_7012,])
func_7027 = relay.Function([var_6975,var_6976,var_6977,var_6978,], output)
mod['func_7027'] = func_7027
mod = relay.transform.InferType()(mod)
var_7028 = relay.var("var_7028", dtype = "float64", shape = (360,))#candidate|7028|(360,)|var|float64
var_7029 = relay.var("var_7029", dtype = "int64", shape = (48,))#candidate|7029|(48,)|var|int64
var_7030 = relay.var("var_7030", dtype = "int64", shape = (384,))#candidate|7030|(384,)|var|int64
var_7031 = relay.var("var_7031", dtype = "float64", shape = (2730,))#candidate|7031|(2730,)|var|float64
output = func_7027(var_7028,var_7029,var_7030,var_7031,)
func_7032 = relay.Function([var_7028,var_7029,var_7030,var_7031,], output)
mutated_mod['func_7032'] = func_7032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4718_call = mod.get_global_var('func_4718')
func_4720_call = mutated_mod.get_global_var('func_4720')
call_7041 = relay.TupleGetItem(func_4718_call(), 0)
call_7042 = relay.TupleGetItem(func_4720_call(), 0)
func_2625_call = mod.get_global_var('func_2625')
func_2630_call = mutated_mod.get_global_var('func_2630')
const_7046 = relay.const([5,3,-8,-3,8,6,3,4,-1,-6,7,2,9,8,-3,1,-6,-2,-7,-5,10,2,7,9,4,5,-7,9,-8,7,7,1,-2,10,-8,4,-6,-1,-4,-1,6,-10,-4,2,-7,3,-6,-1], dtype = "int64")#candidate|7046|(48,)|const|int64
const_7047 = relay.const([[-6,3,-3,5,-4,9,3,-2,8,-7,-9,3,-2,6,4,-8,-2,6,-2,3,8,-9,-7,-6,-4,-7,10,8,6,-3,-2,3],[-1,-1,9,-8,-5,8,9,-10,8,5,7,9,9,-6,-2,5,7,6,-10,-3,-3,-9,-6,5,-6,2,-6,-9,-5,-4,-3,4],[-4,7,7,1,2,4,10,-2,2,10,-8,-2,3,2,6,-7,8,-6,-4,7,-6,-2,2,3,-9,-1,1,10,9,1,9,6],[9,-2,-1,-9,-10,3,4,-6,-8,-1,-8,4,-4,3,-10,1,-4,-4,-2,10,-3,-3,-9,-1,-6,8,3,1,7,-1,6,-8],[-6,3,-5,-9,-8,-7,-3,-5,-3,3,7,3,2,10,-7,6,3,3,-4,8,7,10,6,-9,2,-4,7,-2,-3,-7,-3,6],[-4,-5,1,2,-1,-10,-10,5,-2,-9,-8,10,-5,4,9,5,-10,4,6,-1,-6,5,1,-8,-10,-6,9,-10,2,-4,5,-8],[2,6,6,6,-8,8,2,4,4,-10,5,-9,3,2,3,-3,-10,2,8,-7,-8,8,2,1,4,-1,3,-10,3,6,-1,-10],[10,8,1,-6,2,-8,8,2,-3,2,1,2,-3,-10,9,-7,4,-7,-3,-6,7,-3,5,6,8,-6,10,-5,-6,7,-6,4],[-4,-7,-2,-3,-6,3,-2,1,-6,9,5,-9,8,8,-2,4,-3,-2,3,-5,2,2,6,-1,10,-8,-3,-8,3,-7,-8,1],[-3,10,10,4,-3,5,-10,4,8,5,-1,4,-8,-10,-1,2,6,9,5,-6,-10,10,7,7,9,7,-4,-3,2,-3,-4,5],[6,4,7,-2,2,4,9,7,5,6,-4,4,-10,-9,3,-4,7,-10,9,1,5,3,9,2,3,-5,-6,-3,7,3,-5,7],[-5,8,1,7,5,10,7,7,-1,-7,1,-5,3,8,-7,1,4,-7,-7,10,2,5,3,1,4,1,1,6,8,-1,-1,-6]], dtype = "int64")#candidate|7047|(12, 32)|const|int64
var_7048 = relay.var("var_7048", dtype = "float64", shape = (198,))#candidate|7048|(198,)|var|float64
const_7049 = relay.const(8, dtype = "int32")#candidate|7049|()|const|int32
call_7045 = relay.TupleGetItem(func_2625_call(relay.reshape(const_7046.astype('int64'), [3, 16, 1]), relay.reshape(const_7047.astype('int64'), [3, 16, 8]), relay.reshape(var_7048.astype('float64'), [198,]), relay.reshape(const_7049.astype('int32'), []), ), 2)
call_7050 = relay.TupleGetItem(func_2630_call(relay.reshape(const_7046.astype('int64'), [3, 16, 1]), relay.reshape(const_7047.astype('int64'), [3, 16, 8]), relay.reshape(var_7048.astype('float64'), [198,]), relay.reshape(const_7049.astype('int32'), []), ), 2)
func_5375_call = mod.get_global_var('func_5375')
func_5378_call = mutated_mod.get_global_var('func_5378')
call_7051 = relay.TupleGetItem(func_5375_call(relay.reshape(const_7049.astype('int32'), [])), 0)
call_7052 = relay.TupleGetItem(func_5378_call(relay.reshape(const_7049.astype('int32'), [])), 0)
func_3698_call = mod.get_global_var('func_3698')
func_3699_call = mutated_mod.get_global_var('func_3699')
call_7072 = func_3698_call()
call_7073 = func_3698_call()
func_6883_call = mod.get_global_var('func_6883')
func_6885_call = mutated_mod.get_global_var('func_6885')
call_7083 = relay.TupleGetItem(func_6883_call(), 0)
call_7084 = relay.TupleGetItem(func_6885_call(), 0)
uop_7100 = relay.cosh(call_7072.astype('float64')) # shape=(10, 3, 7)
uop_7102 = relay.cosh(call_7073.astype('float64')) # shape=(10, 3, 7)
bop_7111 = relay.floor_mod(uop_7100.astype('float64'), relay.reshape(call_7072.astype('float64'), relay.shape_of(uop_7100))) # shape=(10, 3, 7)
bop_7114 = relay.floor_mod(uop_7102.astype('float64'), relay.reshape(call_7073.astype('float64'), relay.shape_of(uop_7102))) # shape=(10, 3, 7)
func_4380_call = mod.get_global_var('func_4380')
func_4381_call = mutated_mod.get_global_var('func_4381')
call_7119 = relay.TupleGetItem(func_4380_call(), 2)
call_7120 = relay.TupleGetItem(func_4381_call(), 2)
func_3142_call = mod.get_global_var('func_3142')
func_3144_call = mutated_mod.get_global_var('func_3144')
call_7126 = relay.TupleGetItem(func_3142_call(), 0)
call_7127 = relay.TupleGetItem(func_3144_call(), 0)
func_2238_call = mod.get_global_var('func_2238')
func_2245_call = mutated_mod.get_global_var('func_2245')
var_7133 = relay.var("var_7133", dtype = "uint32", shape = (432,))#candidate|7133|(432,)|var|uint32
var_7134 = relay.var("var_7134", dtype = "int16", shape = (1680,))#candidate|7134|(1680,)|var|int16
var_7135 = relay.var("var_7135", dtype = "int32", shape = (5, 132))#candidate|7135|(5, 132)|var|int32
call_7132 = relay.TupleGetItem(func_2238_call(relay.reshape(const_7049.astype('uint32'), []), relay.reshape(var_7133.astype('uint32'), [6, 8, 9]), relay.reshape(var_7134.astype('int16'), [2, 840]), relay.reshape(var_7133.astype('uint32'), [6, 8, 9]), relay.reshape(call_7051.astype('float64'), [210,]), relay.reshape(var_7135.astype('int32'), [660,]), ), 8)
call_7136 = relay.TupleGetItem(func_2245_call(relay.reshape(const_7049.astype('uint32'), []), relay.reshape(var_7133.astype('uint32'), [6, 8, 9]), relay.reshape(var_7134.astype('int16'), [2, 840]), relay.reshape(var_7133.astype('uint32'), [6, 8, 9]), relay.reshape(call_7051.astype('float64'), [210,]), relay.reshape(var_7135.astype('int32'), [660,]), ), 8)
func_5136_call = mod.get_global_var('func_5136')
func_5138_call = mutated_mod.get_global_var('func_5138')
call_7142 = relay.TupleGetItem(func_5136_call(), 0)
call_7143 = relay.TupleGetItem(func_5138_call(), 0)
func_5487_call = mod.get_global_var('func_5487')
func_5488_call = mutated_mod.get_global_var('func_5488')
call_7164 = relay.TupleGetItem(func_5487_call(), 1)
call_7165 = relay.TupleGetItem(func_5488_call(), 1)
func_3142_call = mod.get_global_var('func_3142')
func_3144_call = mutated_mod.get_global_var('func_3144')
call_7171 = relay.TupleGetItem(func_3142_call(), 0)
call_7172 = relay.TupleGetItem(func_3144_call(), 0)
func_4758_call = mod.get_global_var('func_4758')
func_4759_call = mutated_mod.get_global_var('func_4759')
call_7181 = relay.TupleGetItem(func_4758_call(), 1)
call_7182 = relay.TupleGetItem(func_4759_call(), 1)
func_4396_call = mod.get_global_var('func_4396')
func_4398_call = mutated_mod.get_global_var('func_4398')
call_7183 = func_4396_call()
call_7184 = func_4396_call()
uop_7185 = relay.log2(bop_7111.astype('float32')) # shape=(10, 3, 7)
uop_7187 = relay.log2(bop_7114.astype('float32')) # shape=(10, 3, 7)
output = relay.Tuple([call_7041,call_7045,const_7046,const_7047,var_7048,const_7049,call_7051,call_7083,call_7119,call_7126,call_7132,var_7133,var_7134,var_7135,call_7142,call_7164,call_7171,call_7181,call_7183,uop_7185,])
output2 = relay.Tuple([call_7042,call_7050,const_7046,const_7047,var_7048,const_7049,call_7052,call_7084,call_7120,call_7127,call_7136,var_7133,var_7134,var_7135,call_7143,call_7165,call_7172,call_7182,call_7184,uop_7187,])
func_7213 = relay.Function([var_7048,var_7133,var_7134,var_7135,], output)
mod['func_7213'] = func_7213
mod = relay.transform.InferType()(mod)
var_7214 = relay.var("var_7214", dtype = "float64", shape = (198,))#candidate|7214|(198,)|var|float64
var_7215 = relay.var("var_7215", dtype = "uint32", shape = (432,))#candidate|7215|(432,)|var|uint32
var_7216 = relay.var("var_7216", dtype = "int16", shape = (1680,))#candidate|7216|(1680,)|var|int16
var_7217 = relay.var("var_7217", dtype = "int32", shape = (5, 132))#candidate|7217|(5, 132)|var|int32
output = func_7213(var_7214,var_7215,var_7216,var_7217,)
func_7218 = relay.Function([var_7214,var_7215,var_7216,var_7217,], output)
mutated_mod['func_7218'] = func_7218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6667_call = mod.get_global_var('func_6667')
func_6668_call = mutated_mod.get_global_var('func_6668')
call_7236 = func_6667_call()
call_7237 = func_6667_call()
func_3192_call = mod.get_global_var('func_3192')
func_3193_call = mutated_mod.get_global_var('func_3193')
call_7243 = func_3192_call()
call_7244 = func_3192_call()
func_7027_call = mod.get_global_var('func_7027')
func_7032_call = mutated_mod.get_global_var('func_7032')
var_7246 = relay.var("var_7246", dtype = "float64", shape = (360,))#candidate|7246|(360,)|var|float64
const_7247 = relay.const([[-2,-10],[-9,1],[-5,7],[-2,-5],[1,-9],[3,-2],[1,-4],[1,2],[-3,2],[-1,7],[2,4],[-7,4],[-8,8],[-8,4],[4,10],[-2,-1],[-7,6],[-8,6],[5,7],[-10,-9],[3,2],[10,3],[-6,1],[5,2]], dtype = "int64")#candidate|7247|(24, 2)|const|int64
const_7248 = relay.const([-2,8,-6,-1,-4,3,1,-3,-9,1,-8,5,4,1,4,1,-10,5,4,8,-6,1,9,2,-10,-10,-1,-8,-6,10,-7,-9,2,5,-1,3,-6,-7,-10,-2,2,-9,-8,-8,7,6,9,-1,9,-6,-10,8,-3,2,-3,-4,-10,-8,9,3,-1,10,-6,10,8,6,5,6,10,-1,-4,-8,5,3,1,2,6,-4,4,8,2,-1,-9,-4,7,-1,-8,5,6,-9,-7,9,-4,8,6,9,-1,4,-7,10,-4,5,2,7,-2,-5,9,2,6,1,-5,10,3,7,-2,6,-10,10,-4,3,3,-3,-1,-6,-5,1,-9,6,-6,-4,2,6,10,7,3,10,-8,-8,7,8,-5,2,9,-6,4,3,9,-9,5,4,8,4,6,4,10,-5,-10,-8,8,-4,-5,8,8,4,-5,-1,-2,-8,-9,-2,-6,-1,-8,7,-5,8,-10,2,4,-3,-6,-4,9,7,-6,-6,-7,-1,8,-1,-9,-10,5,-8,10,10,6,-4,-5,5,-9,-4,-8,3,2,-8,5,1,2,1,-3,-7,4,-5,4,8,1,-2,-8,-6,1,1,-1,-7,6,-4,10,9,7,-3,-4,-4,5,-5,-1,1,-6,-9,9,-10,6,3,9,10,-3,-5,-3,5,5,1,2,9,6,-3,-5,-7,8,9,-9,-1,1,3,-7,2,-8,-7,4,-8,-5,5,-5,3,2,1,2,-8,-10,-6,1,8,-2,-10,2,-9,9,8,-6,-7,2,4,10,6,-4,6,2,-5,-8,1,4,-8,3,9,7,-2,4,5,-9,-5,-3,10,-4,10,-3,3,-2,-10,-6,-8,5,-2,-7,4,-7,-1,-7,-8,8,-4,-2,8,-9,-10,-7,8,8,2,8,-1,4,-7,-3,-5,-6,1,7,3,8,-1,-2,1,-2,3,-1,-4,6,-10,-8,-1,-4,-4,4,7,3,-10,-8,4,6,-9,-4,3,-6,-1,8,3,-8,2,-6,-5,8,1,6,7,5,-8], dtype = "int64")#candidate|7248|(384,)|const|int64
const_7249 = relay.const([-5.600047,-0.021341,-3.420859,-7.160679,5.259128,7.671128,1.901598,2.407906,0.479831,-1.612449,9.076274,3.883013,6.747711,-1.212807,-8.077645,3.446242,-3.992078,-0.121203,1.360811,-7.314103,-6.562766,9.209768,-5.574020,4.233522,1.084795,-1.560603,0.419841,7.099523,3.446085,8.571080,4.838566,7.911427,8.400463,-1.585961,-9.913149,9.088168,8.968215,-4.295262,-5.143967,0.491684,-0.078248,-4.795783,2.657840,-4.233360,7.616353,7.822634,-4.319513,-7.561494,-7.819729,6.403604,-6.368580,0.035406,4.054126,6.058938,8.060160,6.113821,5.504143,-0.155105,4.193850,4.653422,-8.841560,1.144445,0.085509,-3.136115,2.415237,3.112581,7.229353,1.096100,-1.069832,-0.895139,5.803199,6.212830,0.602404,-5.751250,-9.801522,5.862671,-9.858099,-0.988998,0.268232,0.109225,-4.223371,-7.275065,2.222979,-7.821158,-5.335840,-8.792359,-1.747053,-4.702153,3.233251,3.161620,9.508093,-4.653363,5.882294,0.812866,-6.262750,1.680766,7.262629,-3.027037,5.928266,6.573246,3.236896,-3.669810,1.306727,9.905693,6.170632,2.691796,5.504747,-0.678044,-7.005674,8.401147,-7.090528,1.305035,-3.058638,-9.557341,-2.616519,-8.390866,7.479120,1.093782,2.892952,3.958278,4.077838,0.212009,2.552260,-8.364525,-7.890725,-1.487471,-4.673383,-8.677960,3.704727,2.843503,-8.649671,8.640029,-7.731685,1.865538,0.568345,-8.377372,7.287611,8.353015,8.018654,-0.529481,-7.933010,-3.558560,-9.116524,8.878413,1.690221,6.914302,-5.738133,-0.662775,9.661782,6.161482,-4.593023,-5.927230,4.876058,-9.599221,5.004445,-4.659396,1.653320,-5.174648,-6.947360,7.201323,-9.390232,1.661743,7.136229,3.768267,4.426386,1.184288,-7.603704,5.979786,-3.488504,-3.133365,-6.788473,0.116930,5.116297,8.032794,7.066337,-3.947432,9.523892,3.630090,8.964125,-2.088808,6.025980,-7.515674,3.405187,6.637696,-6.553580,7.418346,2.999463,-8.198127,-4.665628,-7.773946,1.337460,-4.194149,-4.114135,0.431127,-2.104547,4.797089,-3.957345,-4.186776,3.390787,9.822125,0.023775,1.164244,2.721056,-3.418417,4.115990,4.328174,2.373749,-4.266981,1.598434,0.805993,5.616600,2.899287,-5.020719,1.669336,-7.018896,0.488270,5.026355,-2.003622,0.365816,-8.215250,2.590029,2.517124,4.101433,-8.814824,6.447254,3.838156,-5.578770,-1.584217,-5.433357,1.701197,-2.295727,-3.542142,8.306663,-1.512430,3.929246,2.413117,4.532391,9.042741,-2.924571,5.291694,0.601758,-0.945413,-2.435385,4.763906,-1.301210,4.002490,2.550669,-6.104231,-3.684441,9.993598,-4.962312,-2.358855,5.222142,-2.906318,1.662994,-5.231358,-1.887737,2.598603,2.493452,7.415885,9.948404,4.285381,0.043908,4.164991,-7.893780,8.284844,5.423771,-1.878394,-7.317660,6.176145,7.143051,-3.594886,-8.642304,-4.884822,-5.138184,-5.078910,-5.295351,1.837265,2.124028,7.912934,1.303758,-4.047039,-9.464343,-0.557989,-3.643077,-9.389424,1.618248,0.933077,-9.723614,0.491402,-6.416649,-4.135317,8.885048,-2.721375,-4.586161,9.227307,-4.074676,9.986810,-1.737361,9.425250,2.891514,-0.759344,9.171471,-1.434771,3.195533,-6.445958,5.689423,-9.381861,-3.516907,-5.355680,-6.048721,8.294002,5.970204,4.169131,-5.690491,-6.298642,6.501097,-7.107840,7.450476,-4.064434,-8.825299,-9.229670,-9.711257,1.645937,0.945431,5.296408,8.526364,-6.137192,6.745599,-6.687201,3.035741,7.261353,-2.061558,1.978197,2.486045,-4.611660,-6.669315,2.531271,-6.587759,-1.369213,-0.010860,3.602408,-0.190011,1.280206,-5.735685,6.185538,-6.588770,-3.985015,-1.162356,-9.375195,8.545242,4.459271,9.871466,-3.597079,0.065170,4.895663,6.835412,7.012859,2.900688,0.077627,6.306540,4.275855,-6.020182,-3.613717,5.967734,-2.755631,9.122443,-6.437286,-6.255495,-6.329943,7.555257,-5.690279,6.352756,-3.401523,-9.823692,-1.139856,-4.214409,0.781642,3.391267,2.786885,0.828517,7.625800,-7.685832,0.134352,6.449440,-3.089419,-6.469032,7.480611,0.093967,-5.462125,5.581026,8.153051,-1.937385,-4.954947,-1.994160,-0.736756,4.146540,-6.164146,6.057093,4.495339,-0.557994,-7.478298,-5.203666,-2.564281,0.675804,4.890982,6.441840,6.900761,0.508330,4.983767,6.384310,2.187117,0.079124,-7.493300,-4.274370,7.815730,-7.379716,1.519197,7.009270,-7.434446,-3.578790,-1.730746,-4.500464,2.071405,8.854273,0.833075,-8.772798,-0.597648,-1.700371,-3.305641,-6.035366,4.748826,2.702434,2.925794,-1.014942,-3.472973,5.326069,-1.309444,-1.074781,0.739711,-9.872577,-9.703304,-2.926194,9.316852,-2.442696,1.813722,7.189186,6.971386,9.530651,-3.663707,-3.991742,-8.469551,5.014233,7.682278,-5.972316,6.217747,1.362576,5.395827,-4.889878,-1.716623,-5.398368,3.194026,0.502815,6.458021,2.261352,-8.688848,-1.426659,1.551596,-9.687192,1.174784,-9.259755,9.394812,-7.426417,8.332475,5.703414,1.336087,2.202136,-5.268231,1.871380,0.287388,7.003042,-2.283608,-7.125990,6.927876,-2.145797,7.429598,2.557347,-7.027804,3.817084,7.465190,-3.860351,-9.036086,6.352694,-1.101930,-5.401382,-2.293901,3.588764,6.172754,-8.424854,-9.533281,1.167957,5.345029,9.041822,4.568974,3.794812,5.088692,4.292071,7.620821,-5.023642,-5.716003,6.302225,-5.210267,7.282133,-5.772456,-9.653879,1.580736,-6.481832,6.787625,-0.536771,-8.134042,9.178359,5.618282,-8.632162,4.713843,-9.579916,7.846205,-0.260498,9.449065,-5.649611,-7.926217,-8.557034,-6.829032,-6.747757,-2.747861,-8.775179,0.236020,8.509717,8.715032,1.160839,-1.428666,-3.819800,-2.129387,-9.006326,-3.245687,4.679787,8.679334,-3.748866,3.295888,6.366733,-0.921252,-3.418629,3.645600,-7.260487,4.332639,-3.452367,-6.974098,-9.248444,1.525346,-2.741281,0.178667,-9.671384,9.076645,-4.046131,-0.065823,3.302612,-2.804518,-0.664877,0.740343,-4.353302,-0.070981,-2.351114,3.408504,7.238715,9.720269,-1.138093,-5.994087,-0.243732,-8.472031,-8.168689,-5.922533,6.242010,8.710349,8.978844,-1.313356,-7.972736,-8.617206,3.076556,6.726794,-4.408719,-8.024925,4.048250,-9.978531,9.124441,-2.787352,7.113969,1.378021,9.138763,-7.700358,8.965489,-6.513728,1.262034,-8.269724,-1.881895,-5.371653,0.662707,-5.069637,8.975624,-3.618851,3.829820,-4.416496,0.211163,6.077977,-4.120602,3.300283,-2.582802,2.644556,-9.436474,5.417617,6.913448,-9.209439,-8.515133,1.128884,6.913235,-8.837421,4.791627,6.481521,-6.333026,8.348325,-3.987549,-9.331789,5.310584,-1.905448,-0.710999,-5.376105,2.807450,-6.519186,0.055980,7.765931,6.734652,7.663216,-7.931574,3.518007,1.206548,-6.768269,-2.978379,8.731599,-5.536408,0.694019,3.791792,6.642692,-5.596818,-4.442855,3.608485,-1.337671,-9.838933,8.043965,-9.041175,9.227826,-8.674090,9.856588,8.338915,-2.273692,7.191511,-6.475552,6.598498,4.324089,9.297150,-0.727713,-9.822841,1.308961,-4.259923,5.609925,4.745289,1.965097,-3.246573,-5.136184,5.727893,-7.273438,3.674437,4.803144,-6.666480,-8.441345,-3.631095,-3.897317,-4.236383,6.228208,9.181613,5.747037,-4.017585,-2.946174,-2.879453,-3.846508,4.606392,-2.488854,4.530783,1.126789,-3.473793,9.435053,-8.802685,9.149618,4.060388,-0.772627,-2.590397,1.659801,-5.564708,2.572729,8.920388,-5.257807,-0.551468,3.588777,-4.803723,2.155345,-5.572345,0.018385,7.512574,2.393773,-5.688010,6.955271,-2.583640,8.433327,-1.875490,0.587895,-7.680148,-9.513867,-3.652994,-6.389376,-8.678470,6.439093,-7.447668,-2.907408,-1.772133,-8.100297,7.086250,9.452218,-8.021676,-3.858277,6.676870,-8.147863,4.959839,3.039552,-8.423334,-9.555152,5.686388,-5.607250,-5.216388,3.147198,-9.973047,4.574615,9.092705,6.210061,0.006566,-1.374076,5.935576,-4.651077,9.017730,-8.272082,6.127329,4.524543,8.144056,-1.420211,-6.254660,-1.028561,6.199764,-7.266363,-5.632655,5.468795,6.473224,-3.293573,-6.795212,7.476854,-2.971095,-7.859832,-2.170719,9.004823,6.009804,2.330525,3.754044,-6.840951,-6.674125,-6.505278,1.709769,-3.233417,6.241757,3.191015,-1.172640,-0.535142,5.496743,-9.902056,-5.609718,2.642524,-9.289390,8.719283,-6.851292,-4.129829,-4.720018,9.307928,-7.605419,-4.832259,-8.587446,-5.031348,-3.747199,-9.115001,1.135506,9.781242,-0.686161,1.110872,3.858579,-7.162979,-6.953986,-2.893066,2.212554,-3.292490,-8.625824,-1.328094,4.317128,8.758792,2.838156,1.493788,-3.806692,-7.998099,5.523402,9.633871,-1.018520,-1.855023,7.479648,8.595733,-2.583105,-7.202422,-6.859817,9.014176,1.604375,9.426993,-7.456034,1.228232,3.237209,2.506532,0.620380,7.711514,3.169900,8.873539,7.161797,2.138639,-3.445085,-7.252430,-4.819209,-6.592889,-3.445900,-3.052583,-2.487291,1.855177,8.724811,-6.136173,-6.336336,-6.290386,1.469963,-3.280370,-4.289357,-2.985882,0.787958,4.480759,5.907536,-9.648117,8.470587,-9.021509,-0.316983,6.253757,3.217813,9.157287,-6.841803,2.978069,2.130530,-8.956629,7.633499,-2.213898,0.289049,2.800205,-4.562369,-8.890039,-2.175277,2.968552,-8.145443,1.014688,1.053188,5.625813,-1.697876,6.618033,-5.445242,-8.790404,3.967434,2.144859,-2.270287,1.931599,-1.481109,7.552003,-8.726656,5.619526,8.335380,-5.599164,0.414328,-4.329171,-4.041640,1.173295,6.198609,1.263413,8.045015,2.050132,7.711550,-4.111218,-5.083522,-2.916341,-0.158909,-2.014058,-6.389980,-1.630975,-7.997186,-9.658269,9.927425,-6.501421,2.836296,4.525585,-8.788165,-4.840614,6.212942,9.063796,-9.593843,-3.457151,0.621013,7.513960,-5.408926,-3.035451,-0.985454,2.660001,-5.140287,5.931432,2.475537,-7.501748,1.793498,3.576773,5.863565,5.925735,3.743337,2.241577,-6.951613,-6.405883,-0.503928,1.794478,3.891500,-9.406290,-1.904592,4.540551,-2.265482,7.668081,6.581639,-8.532312,4.635483,-8.595292,-0.619198,-3.671545,-3.421905,8.712523,9.499464,-0.287304,6.523608,-9.502459,-1.793269,-2.853323,-3.030423,-0.063997,-6.875268,-4.264695,-8.485145,-8.766266,-3.440146,2.972718,-1.698737,-4.737556,-9.735213,-2.381003,6.839114,1.110692,6.242759,9.610882,-6.556405,4.013722,-1.048653,-6.956761,-4.139395,4.911420,2.334360,-3.289700,7.872859,0.292257,6.200290,-4.660226,1.018398,-4.384389,0.177037,-0.597750,9.172270,-6.303485,7.015193,3.828936,-2.903514,7.146471,1.905646,9.145916,-9.165614,-9.528927,-3.060449,-5.333679,7.149031,-8.568288,-2.320912,-9.001999,-9.587786,-7.943069,3.801625,-4.882121,-3.571152,-3.099135,8.403708,5.920398,-7.068087,3.684722,-2.806443,-2.706240,-6.326253,-8.512481,2.899194,-3.756153,7.592716,-6.740065,-3.667813,-2.848660,-4.725744,9.353361,-9.032084,1.065312,-8.905986,-9.573921,-7.137254,-9.718843,8.496570,-5.858985,6.362169,4.632447,0.486848,-6.149736,-7.760298,-0.094159,4.821973,-9.082716,-3.377814,-6.629262,-6.334896,1.755616,-5.520180,9.287239,-4.438620,-8.820725,-6.129075,3.587596,3.262041,-7.977834,-4.900711,-6.949172,-8.754331,-0.922168,-2.570710,1.837775,1.533152,-8.215723,9.465864,4.499420,8.434996,8.500024,0.810068,1.682790,-8.868219,-6.136533,-2.707195,-8.112466,4.721924,-2.096524,-3.361362,-3.264889,-1.496636,2.331072,-0.301120,-6.483134,-9.364462,-3.333763,-9.980467,1.618687,4.407286,7.767075,-9.968035,-3.244851,-6.147743,-3.844086,-8.513194,-0.384728,8.988593,-6.885924,6.845927,3.345722,6.076423,0.264688,5.486408,-6.053845,8.050631,-4.921047,-8.351919,8.490801,1.943190,2.245403,1.974725,8.841196,4.035026,-1.693704,-4.042551,-3.554814,6.342040,2.529453,-0.316481,8.124826,9.597460,-4.613854,-4.223413,3.704293,0.876854,-5.769214,-4.147003,6.866103,5.470370,-0.982718,3.149031,3.778033,9.332224,8.061562,3.968189,2.421521,-4.601085,-2.904012,4.841515,1.298085,-1.898138,8.216955,4.337453,-9.802920,2.407768,-5.685283,8.354194,1.363522,-2.681154,0.659874,-8.784489,-7.335292,-6.033176,3.409679,-1.290561,-9.712407,-8.027376,-1.044669,-1.861393,9.807551,5.696115,-7.867921,0.750282,6.953608,-3.581151,2.819327,6.387642,8.366169,-2.019796,-4.485120,3.762253,4.802418,-0.593970,0.177855,-9.280379,-1.827089,-3.330120,8.763649,3.847219,7.131457,7.965006,-3.529688,0.348090,-8.527463,-2.912095,-8.349447,3.937240,-4.820607,9.540920,-4.315430,-8.829424,-9.977189,1.164959,-5.782740,-1.426402,-7.281991,3.832491,3.127191,-3.203815,-1.052050,-4.551335,9.904553,4.681125,4.725539,9.278791,-9.685857,4.951120,1.450279,-7.361238,2.800549,6.311496,-9.143265,-8.970467,7.441426,5.462543,4.772474,8.620557,4.739835,-7.753728,1.502362,-9.421337,3.488971,-9.660176,-1.719732,6.708080,-8.926912,4.151357,4.459425,-7.734654,8.584610,-3.283407,5.399489,6.952756,-1.695242,4.704246,5.308599,-7.704985,5.473782,2.553367,9.082206,5.102299,-9.667115,2.033055,-8.279509,-0.648978,0.819956,6.417379,-8.142556,-2.596236,-4.071445,8.142838,0.293601,1.883995,-1.802259,0.258508,5.871488,5.390501,5.082880,5.510480,-6.250951,9.885086,-2.346131,-5.235261,2.414913,-5.351092,9.783603,-9.486525,4.810407,6.852827,-0.851032,9.296569,-9.704364,6.957296,9.311378,5.211007,3.910059,-8.834445,7.586416,-8.181136,2.183377,8.190052,-5.275002,8.759776,8.075140,-3.409709,0.347053,7.694974,-0.488518,-0.577336,0.641861,-9.405992,-4.795230,-5.943050,0.854320,3.482859,2.276728,3.084721,-8.269782,2.181715,-0.420413,9.631084,-3.413100,1.173727,-8.441947,-3.714962,0.307702,-6.894574,6.420778,-7.729428,1.613879,6.378826,-0.378592,6.633560,-8.377549,-0.217161,-4.258799,-2.273300,-9.039030,9.197380,9.170252,-2.853118,-6.940179,4.859586,1.354936,5.500762,8.406452,-3.155127,1.694231,-4.564541,-5.424704,-2.379581,-1.416197,4.609435,-7.026505,2.192420,9.322041,4.882184,-8.740866,7.747194,-3.664819,9.438295,-6.910117,8.350877,4.384251,7.742049,-2.326422,-2.082393,-2.336399,4.258468,-7.836225,9.578244,-9.086178,-5.893146,3.088742,-0.317859,-0.267835,7.932630,4.766431,-2.691136,-8.226776,8.140068,-4.173093,9.108756,3.124899,0.320951,-5.124120,9.799761,5.983416,2.110734,-8.287618,-5.835325,4.825646,3.594952,-2.044430,1.784477,1.253450,3.169053,-8.815624,-1.992386,5.591021,-7.681839,-7.234151,-8.663301,9.432400,-0.141410,-0.161473,-2.624769,-7.662753,-5.729975,5.374472,8.290661,-9.728037,-7.874740,-3.288062,0.774913,4.745144,3.788263,8.887709,4.621668,1.378826,-4.425202,4.948626,-7.471015,-4.197142,-6.654967,-0.973978,-0.231404,2.871700,-3.815071,-7.562194,8.472514,4.377988,7.255816,4.453349,6.942149,3.618391,-2.860144,-8.349973,-6.997797,6.380071,-6.100064,3.113447,1.387061,-0.212547,-2.086997,4.052263,-2.937792,-1.626165,8.013622,-1.295853,-3.841365,7.636161,-9.264429,9.086717,-4.934115,-7.238480,7.519098,-8.087940,-4.662667,-6.924829,6.375633,-3.526438,-4.831600,3.689042,-4.265061,-7.838908,8.986566,6.586259,2.124096,3.701469,-1.774015,-2.412831,6.990465,-7.680334,2.637946,-5.704000,-5.777024,-9.344253,3.274603,-5.612392,-1.409722,-6.581141,-5.951503,3.651286,1.274764,-9.460473,-6.404104,7.634679,1.861210,8.181336,-8.634250,3.040425,0.127177,4.194187,7.168384,-2.036494,-5.838936,-4.733992,3.815647,-6.075677,-6.046353,-1.994367,1.372926,-3.663152,2.166842,-8.836982,8.338172,-2.123427,7.838766,6.311366,8.413999,-0.487448,-6.333575,7.135196,9.725774,-7.746100,-5.726784,-1.987183,-5.744005,-3.354591,2.382231,5.264949,-1.335522,3.831778,6.591467,-6.872339,-3.592939,-3.336349,4.361585,-3.531665,1.076035,-1.338684,0.348429,-5.983574,3.979970,0.400199,6.760886,1.267274,-5.881608,0.982914,2.232642,5.625063,8.929771,2.845109,9.365320,0.517470,-2.265437,-5.789278,-7.791831,-2.497587,4.063425,-1.168759,-3.043961,-7.225494,-2.738728,9.942647,6.550829,-5.056337,-5.872925,-6.447339,7.016018,9.371603,1.082683,-3.621740,-0.254756,-5.799961,-7.619330,-1.806410,-5.047941,-8.560055,-7.121549,8.657977,-5.535055,-1.780660,5.098792,-7.825733,-8.811428,-0.322186,7.780746,-2.107692,1.026348,3.530815,5.223995,0.602728,-6.599205,7.155632,7.808952,-3.984998,-3.258625,-4.851727,3.592909,-5.546717,-6.255318,-6.133894,4.244611,4.036578,5.978736,3.705842,-2.310862,-4.437148,-0.584474,-6.653520,-9.974263,1.121114,9.764230,-6.929226,-8.307201,3.264299,-9.511812,-4.998874,-8.556977,-6.059282,-2.235637,-4.129149,-4.910160,5.543720,-4.958027,-4.021111,-5.041338,2.379006,-5.484936,9.707205,7.108553,7.134946,-8.870809,6.632068,-9.991132,-4.965304,4.330670,3.610487,1.545929,-2.264537,-8.446420,1.528474,-0.345321,8.729003,-0.225878,8.138948,5.643860,0.508086,-4.932673,-6.942618,5.904383,6.085691,4.000796,-5.198179,6.123225,9.426741,-6.456037,7.971686,6.380154,3.859812,6.923243,3.149903,8.412186,-9.825020,-3.917794,-3.503764,2.409425,-3.298549,9.745439,0.645085,-0.232489,-0.551700,9.314570,8.400102,-2.130403,4.198687,-2.385735,-5.672493,5.576447,7.785972,3.846179,6.838672,-8.629740,-7.172114,6.002187,-7.051672,-0.932906,-6.051213,-2.309591,-7.082616,-7.520752,-6.154645,8.328663,-1.069713,1.459671,-1.304335,-4.807784,1.945304,8.974764,-5.733365,-9.500849,-4.080115,4.670702,-1.426849,5.525506,4.373677,-4.592420,-5.294915,-8.162979,5.758276,-9.228471,2.922204,0.630384,0.754155,-0.512557,5.822256,2.347724,5.201045,-5.798459,-4.895684,-9.095251,7.082491,-0.581349,-8.366038,1.040089,-2.663865,8.584785,-5.322795,4.890056,-3.601078,4.447775,-6.816789,4.118492,3.380687,3.428347,9.037868,7.523987,3.008546,-8.781678,4.324050,6.479301,-9.383528,6.036980,9.150356,-4.791173,-9.520440,-8.280002,-1.824602,-2.673551,8.695890,-4.580356,2.773939,-2.799398,9.636420,3.258676,-9.156124,-0.819054,6.522718,4.670063,-7.903434,-5.723271,8.543090,1.867585,4.500212,4.926639,-6.279625,1.925188,-6.191670,-1.991287,8.059931,-0.558454,-4.459302,-9.761170,-0.144506,-3.952034,1.469504,2.653390,7.453392,7.247722,-2.488144,-1.270870,-7.927420,-4.127979,4.239446,-9.445656,-6.414403,-7.096541,1.905188,4.601877,-4.907981,7.303809,-9.452064,-3.250466,8.480649,-3.908653,-1.800800,-3.544385,1.508512,2.053597,8.140988,4.857172,-8.232976,-4.859705,-0.892759,7.750420,-3.079373,-8.890907,0.796992,-0.313927,-7.970671,-6.210213,8.339803,7.741316,-5.036112,1.740362,-1.959981,6.787974,-6.145816,5.183159,2.221045,0.447152,7.938376,9.291774,-6.278212,8.731535,-2.364966,-5.584264,7.734471,-1.389471,-3.941073,7.233400,-5.357675,-9.409052,0.267520,8.615755,-1.378399,-4.241326,0.364926,3.866931,3.452780,-2.342204,-1.324953,-1.375549,7.302286,4.623205,-4.027955,-4.135881,-1.832624,-3.792398,-2.079321,-8.923724,-2.994339,-8.851263,-1.474532,-1.084974,3.471025,-4.008608,1.645589,7.526246,0.247952,-6.549772,6.432099,5.013946,6.492295,1.016958,3.859426,7.147120,-3.031326,3.304395,6.977127,4.169587,8.023944,-3.746426,-8.360308,4.596564,4.001479,2.879151,-6.499087,-8.663205,-3.580227,-0.263003,8.578598,-8.024733,2.105174,0.166087,9.062076,5.558524,-5.306974,7.949110,4.098542,-4.507016,-8.145570,-4.885965,-2.576444,1.689715,-5.306007,7.668050,7.619731,-2.924313,3.624876,6.893358,-6.072634,9.482238,-6.587564,9.529928,9.076695,-9.303648,9.998089,6.649741,3.103161,7.662315,-0.423207,-8.998519,-8.794700,-2.563869,-7.767088,-9.057361,0.864083,2.921921,-8.433900,8.241168,-8.257634,0.801891,-7.543579,-8.641094,7.468298,-9.761175,-2.718863,3.782820,4.876693,-5.701331,7.308969,-9.428410,4.249460,7.942838,-4.730160,5.232735,-9.081288,-2.422735,0.647467,9.201786,-2.160974,-4.344695,-2.682372,0.876660,-3.050132,7.479727,-0.361232,-9.796524,3.677892,9.737731,-3.087021,-3.352466,-1.709718,-6.810381,8.764207,-1.940079,3.554084,-0.270552,0.003278,6.530100,-5.769849,3.243119,-9.907524,-4.966229,1.536625,1.269644,-0.195310,3.253345,-3.001899,7.458064,4.703691,-7.099220,-9.828064,-5.625097,-7.365838,6.897209,-5.905048,-7.622399,-8.940982,-3.708766,-6.780120,-5.097524,9.456864,2.163019,6.557811,-3.559728,8.605120,9.948136,3.225536,7.968940,4.376876,-0.624531,6.056010,-5.594527,4.672134,-3.928938,-7.490064,6.193188,-5.591192,6.238985,7.442224,-9.025482,-2.553130,-2.954007,7.189720,-0.662189,7.557891,-2.373839,6.787105,-6.181359,4.139715,-8.035489,3.127029,0.418634,9.896834,1.625292,-2.059148,9.586419,5.675562,6.950739,2.505286,2.194592,-6.222731,0.020611,-2.773747,7.570796,-1.171531,1.396796,7.873978,5.892883,-9.047256,5.971051,-5.906696,6.147089,-0.936961,-1.384736,-2.682163,-4.321497,0.906286,-1.648202,-5.007651,9.565549,-9.179933,-2.589882,-7.135322,-7.062159,2.385596,8.223740,-8.437960,8.031737,0.214778,-0.276430,-2.617854,0.790966,-8.957978,5.760139,0.688975,-9.064161,-3.601243,2.335233,-6.403884,9.829538,8.379046,-0.495382,5.292247,-8.148030,2.747824,9.647229,-1.021350,-0.601945,-4.825817,0.095513,-7.923501,0.511496,-0.971562,3.908936,-8.954892,-1.847910,-1.943578,5.042835,9.047491,-7.863642,-7.983246,-9.044350,-7.924488,-4.143175,-5.464765,-9.351051,6.167157,4.419573,-3.263744,-2.246107,4.207112,-3.322462,5.995103,-3.710698,-0.605919,-9.552954,-8.968994,1.486347,5.128177,3.922974,8.277513,-9.382102,-3.085679,-9.412778,4.334426,1.514342,-1.649460,-9.118937,-5.588835,-1.336323,0.360916,9.733101,1.706532,8.561230,-9.481933,-2.210563,-2.145343,-3.486752,6.238548,-7.162061,-1.665158,7.741706,5.159328,-9.795558,-2.307212,-5.793288,7.508577,7.858191,-8.826034,1.875333,-1.517595,-5.784302,8.836842,7.660509,-5.212603,1.277662,0.946874,6.341330,-9.152702,-2.908818,-5.338133,-5.130094,3.845025,-2.546754,-2.242556,-0.345001,2.150768,-3.676133,-2.989170,4.104260,1.490311,4.651901,-7.872361,1.920709,-6.071077,8.467432,6.992042,4.207506,-2.141133,-6.049196,8.009952,3.597158,-0.980928,4.322760,5.782452,7.626723,6.323356,1.426394,1.873856,-6.288844,9.897701,-4.651579,-0.473582,3.668319,6.227156,2.012948,-7.874593,9.359357,-2.305099,7.563791,-3.698500,-0.989612,8.607991,5.128132,5.342702,4.237603,5.994237,4.231373,1.227691,-5.211166,-0.496771,9.992131,-7.361306,5.019811,-4.727347,-8.508158,5.508105,-8.542762,8.932411,1.720836,-4.075331,2.251391,-7.445505,7.616668,4.393509,-2.153921,4.137103,-1.519788,4.336422,1.228811,5.034250,-7.906368,-8.872285,4.205252,-6.656609,-6.133598,4.932832,-1.615577,-0.249105,7.051083,-4.176745,-7.801911,-1.363985,8.599915,-7.337109,3.105562,3.861939,2.417095,-9.316637,3.963575,0.929390,1.901741,0.792662,1.134825,8.338263,5.143165,-6.766212,-7.018447,-8.579693,-2.469277,-4.780151,-2.623695,6.178228,8.286414,7.426850,-5.226015,4.733721,4.872552,-0.893201,-0.091288,-9.346729,8.541484,8.507543,2.174482,1.462752,8.126819,9.125060,4.570518,5.963364,-5.562356,3.085351,1.774683,1.207575,2.374124,7.639349,5.006755,7.303109,9.705108,-2.481279,2.105393,-2.056282,3.691669,-1.507145,2.320505,-5.464117,-4.403446,-9.649259,-8.153071,9.544795,2.351694,4.856125,-5.711646,5.144368,-6.405760,-2.538803,-0.612249,-5.365562,-0.094850,-5.990328,-0.269149,9.492614,7.862450,-3.107872,1.673534,5.457001,4.192866,-4.227168,-6.461677,2.621303,4.499920,-7.571071,-4.547920,-7.031460,6.023461,-2.163758,4.069879,1.606976,-0.823534,-6.338636,6.108403,-6.684084,-4.184938,-8.269530,0.014160,9.720847,5.999357,-0.160035,-4.020756,-2.930127,6.611918,2.907391,-1.179187,3.555803,6.364275,1.142170,-9.120281,4.785614,-2.347782,9.918189,0.812629,-1.172379,-2.902371,-6.949040,7.539360,-9.467138,-6.170753,2.876460,-8.816509,1.225471,-1.517988,-4.040983,-8.907939,-7.992681,4.486314,-8.584816,-5.070748,8.793962,1.522446,-8.051194,-7.023985,-4.488272,-7.938996,-2.592392,-9.781359,-1.488106,-1.833921,6.160383,-9.923435,2.154958,0.545557,-7.308072,-9.567180,-4.800621,-5.064323,6.551985,-0.625606,8.262035,1.081271,1.526777,2.499379,5.068201,2.163863,-1.740355,-7.937341,4.019199,-0.792613,0.363863,-1.772277,-6.998749,-6.480708,9.912581,2.345574,-9.235182,-8.529264,1.125018,8.871043,7.382453,6.540253,0.739813,3.732204,-3.187571,-5.330034,4.081557,3.061688,6.156026,7.371493,-7.235104,9.769360,2.551188,3.731782,9.374998,6.224720,6.862205,3.542809,-3.255478,3.410683,-9.868671,8.769118,-0.604263,6.577829,-9.465486,9.393211,-0.406911,5.478705,-5.578761,-2.012213,-3.947316,1.130025,-0.534467,-7.542339,8.826705,9.126701,4.744746,7.454681,-6.527375,-3.035691,8.654280,4.300397,-8.796258,-1.274695,6.816501,0.291954,-2.135064,3.134402,7.714867,-6.802432,-1.062524,-6.032543,-0.388001,9.468134,-0.763343,3.271185,2.049963,9.613046,-1.970607,7.919978,-4.732231,4.822603,7.477280,-8.379458,-2.360120,6.126311,-2.751738,-8.754848,-4.274117,9.283268,2.224708,-8.912865,-0.176188,1.816320,6.571519,-7.341789,2.186228,4.867640,9.064904,7.781971,-3.877172,-8.813783,-2.330257,9.554924,-8.216592,3.300281,0.543092,9.393389,-4.523196,-0.807558,5.693668,4.277850,-5.313212,5.094755,-1.318564,7.986317,4.312117,-0.142526,6.046026,-8.741398,-5.820982,3.925148,-8.920708,8.693154,4.483204,-7.241429,8.190630,0.280269,-0.626251,1.570445,7.941783,5.231287,-7.030098,-9.108490,4.739915,7.143464,5.964761,-7.127908,3.376858,-6.834874,7.640186,0.426384,-0.794485,7.488938,9.791477,-4.991724,2.383044,-4.290613,0.773323,5.670252,8.804831,-7.784712,-2.495530,-6.039265,1.486492,-7.051738,-2.229594,8.448713,5.111561,6.272797,5.746948,3.800225,-9.976172,-3.697866,0.737433,-3.916162,-3.223258,3.850580,5.769939,2.522938,-8.117257,-2.027343,5.768811,7.240444,-4.721236,-2.023105,-3.585476,-9.783294,6.179739,-8.393675,4.343520,5.579553,-7.926926,-3.187633,8.006050,-5.625696,1.222811,-4.976097,-4.396207,8.795025,-6.815940,-8.029076,-3.999819,6.072290,3.696381,-7.516051,1.376888,-2.563126,-6.302766,8.296751,-0.559478,7.655339,-6.354918,6.099931,2.897811,0.401838,-8.034055,7.928084,8.836612,-2.605462,-0.104340,5.984914,-8.250479,4.176326,-4.923103,-6.493300,-5.420237,-1.175242,1.472389,6.337857,7.293096,6.651318,-7.757451,-7.226387,1.377711,-9.320589,3.300088,6.987266,-6.128406,-4.239577,-9.978305,4.108697,-9.292824,2.907660,3.757755,-2.566348,-8.457485,-2.006984,-1.116738,-5.490601,3.820926,-8.123097,-5.882366,4.375712,-7.441368,5.721114,-1.168981,-9.316124,-5.826345,6.392150,-2.842326,-0.542734,9.584350,-1.712112,0.946610,1.790625,8.935228,2.476835,-2.846524,-1.080223,-1.759403,1.196692,9.802687,5.783747,1.761014,6.996876,5.067806,-8.836982,9.803859,-2.002531,0.922302,3.614184,4.761557,-0.968019,1.995377,7.446743,-4.962544,1.928325,-5.435231,-0.092121,6.345556,8.853941,2.623454,5.195577,-0.889129,-6.342209,8.372974,7.471214,-1.681872,-4.767885,-4.821621,-0.018494,-9.871370,-3.801490,-7.150801,8.040013,3.369890,-6.860953,-2.185020,9.118977,-3.163948,6.098937,0.905207,-2.726642,-2.997948,-7.563636,-4.046234,-5.384254,-9.080549,0.379345,8.710676,-3.714674,-9.738535,5.644457,-6.290306,0.639289,-4.181802,-3.076484,4.955399,-1.534622,-2.203868,6.238526,2.699705,7.651114,-0.168701,-3.390049,5.522943,-5.446958,-5.978393,5.483590,-2.759558,9.954717,9.004481,4.147595,-4.532819,-3.468664,-9.789321,-4.676198,8.966473,9.079505,-4.398293,6.473929,-8.434742,0.713076,-8.033433,2.129360,-8.120836,3.271753,-6.966750,-1.389353,-6.934506,6.631143,-8.006343,-4.378101,-2.824270,-5.499446,-4.314381,-7.799577,7.812053,1.850777,-4.359637,7.859895,0.823547,-5.389549,0.607367,-8.647330,-1.188003,-2.449652,9.411555,-2.755822,-2.267082,8.543469,2.666889,4.935787,5.507023,-0.235878,4.080182,-1.755739,-8.583626,-6.265046,-6.102360,-8.284095,2.191827], dtype = "float64")#candidate|7249|(2730,)|const|float64
call_7245 = relay.TupleGetItem(func_7027_call(relay.reshape(var_7246.astype('float64'), [360,]), relay.reshape(const_7247.astype('int64'), [48,]), relay.reshape(const_7248.astype('int64'), [384,]), relay.reshape(const_7249.astype('float64'), [2730,]), ), 1)
call_7250 = relay.TupleGetItem(func_7032_call(relay.reshape(var_7246.astype('float64'), [360,]), relay.reshape(const_7247.astype('int64'), [48,]), relay.reshape(const_7248.astype('int64'), [384,]), relay.reshape(const_7249.astype('float64'), [2730,]), ), 1)
output = relay.Tuple([call_7236,call_7243,call_7245,var_7246,const_7247,const_7248,const_7249,])
output2 = relay.Tuple([call_7237,call_7244,call_7250,var_7246,const_7247,const_7248,const_7249,])
func_7271 = relay.Function([var_7246,], output)
mod['func_7271'] = func_7271
mod = relay.transform.InferType()(mod)
mutated_mod['func_7271'] = func_7271
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7272 = relay.var("var_7272", dtype = "float64", shape = (360,))#candidate|7272|(360,)|var|float64
func_7271_call = mutated_mod.get_global_var('func_7271')
call_7273 = func_7271_call(var_7272)
output = call_7273
func_7274 = relay.Function([var_7272], output)
mutated_mod['func_7274'] = func_7274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6667_call = mod.get_global_var('func_6667')
func_6668_call = mutated_mod.get_global_var('func_6668')
call_7297 = func_6667_call()
call_7298 = func_6667_call()
func_4640_call = mod.get_global_var('func_4640')
func_4641_call = mutated_mod.get_global_var('func_4641')
call_7321 = func_4640_call()
call_7322 = func_4640_call()
func_3142_call = mod.get_global_var('func_3142')
func_3144_call = mutated_mod.get_global_var('func_3144')
call_7328 = relay.TupleGetItem(func_3142_call(), 0)
call_7329 = relay.TupleGetItem(func_3144_call(), 0)
func_996_call = mod.get_global_var('func_996')
func_998_call = mutated_mod.get_global_var('func_998')
const_7332 = relay.const([[5,8,1,2,-4,10,9,9,6,9,9,-9,-7,-1,-5,2,-8,5,4,-1,-2,2,-8,5,-3,9,2,-8,-9,9],[-7,3,1,5,7,4,8,3,6,-9,-4,10,-8,-4,-7,-10,-4,-10,-5,10,2,3,1,3,4,8,-4,-4,9,1],[1,-10,8,-1,6,5,9,-7,4,10,6,5,-8,-4,9,3,-1,-6,-7,-10,-2,3,2,10,2,3,-7,9,9,2],[-1,9,-10,-10,4,9,6,-7,-2,4,8,3,6,-3,-5,3,10,7,9,-6,-9,10,7,-4,4,-4,-5,-10,-6,6],[-7,-9,-10,-6,6,-3,9,10,1,-6,2,-9,-6,8,1,-5,-2,3,1,-3,5,1,9,1,-7,-5,8,4,3,10],[-5,-10,9,8,-7,8,7,6,-5,4,-8,9,-4,-2,4,-1,-8,5,-6,-1,6,-7,-1,8,1,-5,2,-5,-8,3]], dtype = "int64")#candidate|7332|(6, 30)|const|int64
call_7331 = relay.TupleGetItem(func_996_call(relay.reshape(const_7332.astype('int64'), [4, 9, 5])), 1)
call_7333 = relay.TupleGetItem(func_998_call(relay.reshape(const_7332.astype('int64'), [4, 9, 5])), 1)
output = relay.Tuple([call_7297,call_7321,call_7328,call_7331,const_7332,])
output2 = relay.Tuple([call_7298,call_7322,call_7329,call_7333,const_7332,])
func_7356 = relay.Function([], output)
mod['func_7356'] = func_7356
mod = relay.transform.InferType()(mod)
output = func_7356()
func_7357 = relay.Function([], output)
mutated_mod['func_7357'] = func_7357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mod.get_global_var('func_3244')
func_3246_call = mutated_mod.get_global_var('func_3246')
call_7358 = relay.TupleGetItem(func_3244_call(), 0)
call_7359 = relay.TupleGetItem(func_3246_call(), 0)
output = call_7358
output2 = call_7359
func_7361 = relay.Function([], output)
mod['func_7361'] = func_7361
mod = relay.transform.InferType()(mod)
output = func_7361()
func_7362 = relay.Function([], output)
mutated_mod['func_7362'] = func_7362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mod.get_global_var('func_3244')
func_3246_call = mutated_mod.get_global_var('func_3246')
call_7413 = relay.TupleGetItem(func_3244_call(), 0)
call_7414 = relay.TupleGetItem(func_3246_call(), 0)
output = call_7413
output2 = call_7414
func_7431 = relay.Function([], output)
mod['func_7431'] = func_7431
mod = relay.transform.InferType()(mod)
mutated_mod['func_7431'] = func_7431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7431_call = mutated_mod.get_global_var('func_7431')
call_7432 = func_7431_call()
output = call_7432
func_7433 = relay.Function([], output)
mutated_mod['func_7433'] = func_7433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6940_call = mod.get_global_var('func_6940')
func_6942_call = mutated_mod.get_global_var('func_6942')
call_7442 = relay.TupleGetItem(func_6940_call(), 0)
call_7443 = relay.TupleGetItem(func_6942_call(), 0)
func_6210_call = mod.get_global_var('func_6210')
func_6212_call = mutated_mod.get_global_var('func_6212')
var_7464 = relay.var("var_7464", dtype = "float64", shape = (54,))#candidate|7464|(54,)|var|float64
call_7463 = relay.TupleGetItem(func_6210_call(relay.reshape(var_7464.astype('float64'), [3, 9, 2])), 0)
call_7465 = relay.TupleGetItem(func_6212_call(relay.reshape(var_7464.astype('float64'), [3, 9, 2])), 0)
func_3293_call = mod.get_global_var('func_3293')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_7467 = relay.TupleGetItem(func_3293_call(), 3)
call_7468 = relay.TupleGetItem(func_3294_call(), 3)
output = relay.Tuple([call_7442,call_7463,var_7464,call_7467,])
output2 = relay.Tuple([call_7443,call_7465,var_7464,call_7468,])
func_7471 = relay.Function([var_7464,], output)
mod['func_7471'] = func_7471
mod = relay.transform.InferType()(mod)
var_7472 = relay.var("var_7472", dtype = "float64", shape = (54,))#candidate|7472|(54,)|var|float64
output = func_7471(var_7472)
func_7473 = relay.Function([var_7472], output)
mutated_mod['func_7473'] = func_7473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6841_call = mod.get_global_var('func_6841')
func_6843_call = mutated_mod.get_global_var('func_6843')
call_7521 = relay.TupleGetItem(func_6841_call(), 3)
call_7522 = relay.TupleGetItem(func_6843_call(), 3)
func_5989_call = mod.get_global_var('func_5989')
func_5991_call = mutated_mod.get_global_var('func_5991')
call_7544 = relay.TupleGetItem(func_5989_call(), 0)
call_7545 = relay.TupleGetItem(func_5991_call(), 0)
output = relay.Tuple([call_7521,call_7544,])
output2 = relay.Tuple([call_7522,call_7545,])
func_7561 = relay.Function([], output)
mod['func_7561'] = func_7561
mod = relay.transform.InferType()(mod)
mutated_mod['func_7561'] = func_7561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7561_call = mutated_mod.get_global_var('func_7561')
call_7562 = func_7561_call()
output = call_7562
func_7563 = relay.Function([], output)
mutated_mod['func_7563'] = func_7563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6636_call = mod.get_global_var('func_6636')
func_6638_call = mutated_mod.get_global_var('func_6638')
call_7585 = relay.TupleGetItem(func_6636_call(), 0)
call_7586 = relay.TupleGetItem(func_6638_call(), 0)
output = call_7585
output2 = call_7586
func_7587 = relay.Function([], output)
mod['func_7587'] = func_7587
mod = relay.transform.InferType()(mod)
mutated_mod['func_7587'] = func_7587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7587_call = mutated_mod.get_global_var('func_7587')
call_7588 = func_7587_call()
output = call_7588
func_7589 = relay.Function([], output)
mutated_mod['func_7589'] = func_7589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4369_call = mod.get_global_var('func_4369')
func_4370_call = mutated_mod.get_global_var('func_4370')
call_7611 = relay.TupleGetItem(func_4369_call(), 0)
call_7612 = relay.TupleGetItem(func_4370_call(), 0)
func_6883_call = mod.get_global_var('func_6883')
func_6885_call = mutated_mod.get_global_var('func_6885')
call_7616 = relay.TupleGetItem(func_6883_call(), 1)
call_7617 = relay.TupleGetItem(func_6885_call(), 1)
func_4995_call = mod.get_global_var('func_4995')
func_4997_call = mutated_mod.get_global_var('func_4997')
call_7618 = relay.TupleGetItem(func_4995_call(relay.reshape(call_7616.astype('int32'), [1, 384])), 4)
call_7619 = relay.TupleGetItem(func_4997_call(relay.reshape(call_7616.astype('int32'), [1, 384])), 4)
func_4078_call = mod.get_global_var('func_4078')
func_4080_call = mutated_mod.get_global_var('func_4080')
call_7628 = func_4078_call()
call_7629 = func_4078_call()
output = relay.Tuple([call_7611,call_7616,call_7618,call_7628,])
output2 = relay.Tuple([call_7612,call_7617,call_7619,call_7629,])
func_7650 = relay.Function([], output)
mod['func_7650'] = func_7650
mod = relay.transform.InferType()(mod)
output = func_7650()
func_7651 = relay.Function([], output)
mutated_mod['func_7651'] = func_7651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5863_call = mod.get_global_var('func_5863')
func_5864_call = mutated_mod.get_global_var('func_5864')
call_7685 = func_5863_call()
call_7686 = func_5863_call()
func_7587_call = mod.get_global_var('func_7587')
func_7589_call = mutated_mod.get_global_var('func_7589')
call_7702 = func_7587_call()
call_7703 = func_7587_call()
output = relay.Tuple([call_7685,call_7702,])
output2 = relay.Tuple([call_7686,call_7703,])
func_7706 = relay.Function([], output)
mod['func_7706'] = func_7706
mod = relay.transform.InferType()(mod)
output = func_7706()
func_7707 = relay.Function([], output)
mutated_mod['func_7707'] = func_7707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5759_call = mod.get_global_var('func_5759')
func_5761_call = mutated_mod.get_global_var('func_5761')
call_7781 = relay.TupleGetItem(func_5759_call(), 0)
call_7782 = relay.TupleGetItem(func_5761_call(), 0)
func_6525_call = mod.get_global_var('func_6525')
func_6526_call = mutated_mod.get_global_var('func_6526')
call_7794 = func_6525_call()
call_7795 = func_6525_call()
output = relay.Tuple([call_7781,call_7794,])
output2 = relay.Tuple([call_7782,call_7795,])
func_7799 = relay.Function([], output)
mod['func_7799'] = func_7799
mod = relay.transform.InferType()(mod)
mutated_mod['func_7799'] = func_7799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7799_call = mutated_mod.get_global_var('func_7799')
call_7800 = func_7799_call()
output = call_7800
func_7801 = relay.Function([], output)
mutated_mod['func_7801'] = func_7801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6841_call = mod.get_global_var('func_6841')
func_6843_call = mutated_mod.get_global_var('func_6843')
call_7809 = relay.TupleGetItem(func_6841_call(), 1)
call_7810 = relay.TupleGetItem(func_6843_call(), 1)
func_6525_call = mod.get_global_var('func_6525')
func_6526_call = mutated_mod.get_global_var('func_6526')
call_7814 = func_6525_call()
call_7815 = func_6525_call()
var_7819 = relay.var("var_7819", dtype = "float32", shape = (96, 4))#candidate|7819|(96, 4)|var|float32
bop_7820 = relay.maximum(call_7809.astype('float64'), relay.reshape(var_7819.astype('float64'), relay.shape_of(call_7809))) # shape=(96, 4)
bop_7823 = relay.maximum(call_7810.astype('float64'), relay.reshape(var_7819.astype('float64'), relay.shape_of(call_7810))) # shape=(96, 4)
output = relay.Tuple([call_7814,bop_7820,])
output2 = relay.Tuple([call_7815,bop_7823,])
func_7824 = relay.Function([var_7819,], output)
mod['func_7824'] = func_7824
mod = relay.transform.InferType()(mod)
var_7825 = relay.var("var_7825", dtype = "float32", shape = (96, 4))#candidate|7825|(96, 4)|var|float32
output = func_7824(var_7825)
func_7826 = relay.Function([var_7825], output)
mutated_mod['func_7826'] = func_7826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4758_call = mod.get_global_var('func_4758')
func_4759_call = mutated_mod.get_global_var('func_4759')
call_7828 = relay.TupleGetItem(func_4758_call(), 0)
call_7829 = relay.TupleGetItem(func_4759_call(), 0)
output = relay.Tuple([call_7828,])
output2 = relay.Tuple([call_7829,])
func_7834 = relay.Function([], output)
mod['func_7834'] = func_7834
mod = relay.transform.InferType()(mod)
output = func_7834()
func_7835 = relay.Function([], output)
mutated_mod['func_7835'] = func_7835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7587_call = mod.get_global_var('func_7587')
func_7589_call = mutated_mod.get_global_var('func_7589')
call_7839 = func_7587_call()
call_7840 = func_7587_call()
func_6562_call = mod.get_global_var('func_6562')
func_6564_call = mutated_mod.get_global_var('func_6564')
call_7844 = func_6562_call()
call_7845 = func_6562_call()
var_7847 = relay.var("var_7847", dtype = "float32", shape = (96, 4))#candidate|7847|(96, 4)|var|float32
bop_7848 = relay.less(call_7844.astype('bool'), relay.reshape(var_7847.astype('bool'), relay.shape_of(call_7844))) # shape=(96, 4)
bop_7851 = relay.less(call_7845.astype('bool'), relay.reshape(var_7847.astype('bool'), relay.shape_of(call_7845))) # shape=(96, 4)
func_5668_call = mod.get_global_var('func_5668')
func_5670_call = mutated_mod.get_global_var('func_5670')
call_7853 = relay.TupleGetItem(func_5668_call(relay.reshape(call_7839.astype('float32'), [10, 3, 7])), 1)
call_7854 = relay.TupleGetItem(func_5670_call(relay.reshape(call_7839.astype('float32'), [10, 3, 7])), 1)
func_5163_call = mod.get_global_var('func_5163')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_7862 = relay.TupleGetItem(func_5163_call(), 0)
call_7863 = relay.TupleGetItem(func_5164_call(), 0)
func_4619_call = mod.get_global_var('func_4619')
func_4621_call = mutated_mod.get_global_var('func_4621')
call_7869 = func_4619_call()
call_7870 = func_4619_call()
func_4369_call = mod.get_global_var('func_4369')
func_4370_call = mutated_mod.get_global_var('func_4370')
call_7883 = relay.TupleGetItem(func_4369_call(), 0)
call_7884 = relay.TupleGetItem(func_4370_call(), 0)
bop_7889 = relay.logical_and(var_7847.astype('bool'), relay.reshape(bop_7848.astype('bool'), relay.shape_of(var_7847))) # shape=(96, 4)
bop_7892 = relay.logical_and(var_7847.astype('bool'), relay.reshape(bop_7851.astype('bool'), relay.shape_of(var_7847))) # shape=(96, 4)
output = relay.Tuple([call_7839,call_7853,call_7862,call_7869,call_7883,bop_7889,])
output2 = relay.Tuple([call_7840,call_7854,call_7863,call_7870,call_7884,bop_7892,])
func_7894 = relay.Function([var_7847,], output)
mod['func_7894'] = func_7894
mod = relay.transform.InferType()(mod)
mutated_mod['func_7894'] = func_7894
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7895 = relay.var("var_7895", dtype = "float32", shape = (96, 4))#candidate|7895|(96, 4)|var|float32
func_7894_call = mutated_mod.get_global_var('func_7894')
call_7896 = func_7894_call(var_7895)
output = call_7896
func_7897 = relay.Function([var_7895], output)
mutated_mod['func_7897'] = func_7897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4282_call = mod.get_global_var('func_4282')
func_4283_call = mutated_mod.get_global_var('func_4283')
call_7899 = relay.TupleGetItem(func_4282_call(), 0)
call_7900 = relay.TupleGetItem(func_4283_call(), 0)
var_7917 = relay.var("var_7917", dtype = "float32", shape = (96, 4))#candidate|7917|(96, 4)|var|float32
bop_7918 = relay.divide(call_7899.astype('float64'), relay.reshape(var_7917.astype('float64'), relay.shape_of(call_7899))) # shape=(96, 4)
bop_7921 = relay.divide(call_7900.astype('float64'), relay.reshape(var_7917.astype('float64'), relay.shape_of(call_7900))) # shape=(96, 4)
func_7356_call = mod.get_global_var('func_7356')
func_7357_call = mutated_mod.get_global_var('func_7357')
call_7922 = relay.TupleGetItem(func_7356_call(), 4)
call_7923 = relay.TupleGetItem(func_7357_call(), 4)
func_4878_call = mod.get_global_var('func_4878')
func_4883_call = mutated_mod.get_global_var('func_4883')
const_7929 = relay.const([6,-1,9,2,-2,7,7,8,-8,-4,-8,-8,-3,-1,9,-10,1,-1,-7,-2,-7,-4,-9,-8,5,-6,3,10,-10,-8,2,-6,-1,3,-2,-7,-6,-5,-3,3,-7,1,-4,7,-3,-5,-4,7], dtype = "int64")#candidate|7929|(48,)|const|int64
var_7930 = relay.var("var_7930", dtype = "float64", shape = (198,))#candidate|7930|(198,)|var|float64
var_7931 = relay.var("var_7931", dtype = "int32", shape = ())#candidate|7931|()|var|int32
call_7928 = relay.TupleGetItem(func_4878_call(relay.reshape(const_7929.astype('int64'), [48, 1]), relay.reshape(bop_7918.astype('int64'), [48, 8]), relay.reshape(var_7930.astype('float64'), [198,]), relay.reshape(var_7931.astype('int32'), []), ), 0)
call_7932 = relay.TupleGetItem(func_4883_call(relay.reshape(const_7929.astype('int64'), [48, 1]), relay.reshape(bop_7918.astype('int64'), [48, 8]), relay.reshape(var_7930.astype('float64'), [198,]), relay.reshape(var_7931.astype('int32'), []), ), 0)
bop_7941 = relay.greater_equal(call_7899.astype('bool'), relay.reshape(var_7917.astype('bool'), relay.shape_of(call_7899))) # shape=(96, 4)
bop_7944 = relay.greater_equal(call_7900.astype('bool'), relay.reshape(var_7917.astype('bool'), relay.shape_of(call_7900))) # shape=(96, 4)
output = relay.Tuple([bop_7918,call_7922,call_7928,const_7929,var_7930,var_7931,bop_7941,])
output2 = relay.Tuple([bop_7921,call_7923,call_7932,const_7929,var_7930,var_7931,bop_7944,])
func_7951 = relay.Function([var_7917,var_7930,var_7931,], output)
mod['func_7951'] = func_7951
mod = relay.transform.InferType()(mod)
mutated_mod['func_7951'] = func_7951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7951_call = mutated_mod.get_global_var('func_7951')
var_7953 = relay.var("var_7953", dtype = "float32", shape = (96, 4))#candidate|7953|(96, 4)|var|float32
var_7954 = relay.var("var_7954", dtype = "float64", shape = (198,))#candidate|7954|(198,)|var|float64
var_7955 = relay.var("var_7955", dtype = "int32", shape = ())#candidate|7955|()|var|int32
call_7952 = func_7951_call(var_7953,var_7954,var_7955,)
output = call_7952
func_7956 = relay.Function([var_7953,var_7954,var_7955,], output)
mutated_mod['func_7956'] = func_7956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4260_call = mod.get_global_var('func_4260')
func_4261_call = mutated_mod.get_global_var('func_4261')
call_7988 = relay.TupleGetItem(func_4260_call(), 0)
call_7989 = relay.TupleGetItem(func_4261_call(), 0)
func_6105_call = mod.get_global_var('func_6105')
func_6110_call = mutated_mod.get_global_var('func_6110')
var_8005 = relay.var("var_8005", dtype = "float64", shape = (2730,))#candidate|8005|(2730,)|var|float64
const_8006 = relay.const([-1,-10,-1,-2,-8,-9,2,-10,10,-4,4,-6,-4,-4,-2,-6,6,-1,-5,-1,2,7,-4,6,8,10,-8,3,-3,-10,10,10,-10,-2,4,7,-3,-9,-9,5,-3,-1,5,4,-1,-3,-8,8,3,-2,3,-4,-4,-5,8,-2,7,1,-7,10,-7,10,7,5,10,-9,-7,-1,-6,5,10,-4,-1,9,-1,-8,3,6,-10,1,8,-4,5,-7,-4,4,2,-1,2,-2,10,-3,-2,6,-10,1,-9,5,10,2,4,8,-3,-10,-10,9,-4,4,1,-5,8,-9,1,-8,5,5,-5,7,1,-4,10,10,8,-10,-5,-10,-3,8,2,-4,-8,-8,3,3,-3,-4,2,6,9,9,-1,9,-7,-7,-4,5,2,-5,9,1,-4,-4,1,6,-6,-8,-3,10,-5,-8,7,-3,7,6,-5,-7,-3,7,10,6,10,2,2,-5,8,7,9,6,7,1,10,3,10,7,-5,4,8,9,10,6,9,5,1,-3,5,10,-3,-9,1,3,-1,-1,4,9,-6,-2,-6,3,8,6,4,-1,9,10,-5,7,-1,-7,10,9,-10,-3,7,8,3,-1,9,4,9,9,-8,-4,-5,-3,6,1,4,4,9,7,5,-1,-7,4,10,3,-10,-8,-5,-7,5,-9,-1,10,-5,6,-4,-6,-3,-10,4,2,10,8,-2,-8,-5,8,10,-10,5,-4,-4,-4,1,-9,-7,10,2,5,-4,-5,-10,7,-10,-4,4,8,10,-4,-5,-7,-5,-2,-6,-4,-1,-3,1,10,8,6,4,1,-5,-5,7,5,-1,-2,-7,1,-5,-7,-4,-6,3,-4,6,-10,-10,1,9,3,6,-10,2,-9,4,1,-4,-2,-1,-3,4,9,-8,-1,-10,-6,-10,9,8,8,5,1,8,-8,10,7,-3,-7,-9,-8,5,-5,-2,6,2,3,-3,9,-8,2,8,-3,8,-4,10,-5,-7,9,-5,-1,-9,8,-1,-5,6,10,-9,-7,-4,-3], dtype = "int32")#candidate|8006|(384,)|const|int32
call_8004 = relay.TupleGetItem(func_6105_call(relay.reshape(var_8005.astype('float64'), [2730,]), relay.reshape(const_8006.astype('int32'), [48, 8]), relay.reshape(var_8005.astype('bool'), [2730,]), ), 0)
call_8007 = relay.TupleGetItem(func_6110_call(relay.reshape(var_8005.astype('float64'), [2730,]), relay.reshape(const_8006.astype('int32'), [48, 8]), relay.reshape(var_8005.astype('bool'), [2730,]), ), 0)
output = relay.Tuple([call_7988,call_8004,var_8005,const_8006,])
output2 = relay.Tuple([call_7989,call_8007,var_8005,const_8006,])
func_8052 = relay.Function([var_8005,], output)
mod['func_8052'] = func_8052
mod = relay.transform.InferType()(mod)
mutated_mod['func_8052'] = func_8052
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8053 = relay.var("var_8053", dtype = "float64", shape = (2730,))#candidate|8053|(2730,)|var|float64
func_8052_call = mutated_mod.get_global_var('func_8052')
call_8054 = func_8052_call(var_8053)
output = call_8054
func_8055 = relay.Function([var_8053], output)
mutated_mod['func_8055'] = func_8055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5863_call = mod.get_global_var('func_5863')
func_5864_call = mutated_mod.get_global_var('func_5864')
call_8098 = func_5863_call()
call_8099 = func_5863_call()
output = call_8098
output2 = call_8099
func_8123 = relay.Function([], output)
mod['func_8123'] = func_8123
mod = relay.transform.InferType()(mod)
mutated_mod['func_8123'] = func_8123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8123_call = mutated_mod.get_global_var('func_8123')
call_8124 = func_8123_call()
output = call_8124
func_8125 = relay.Function([], output)
mutated_mod['func_8125'] = func_8125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4640_call = mod.get_global_var('func_4640')
func_4641_call = mutated_mod.get_global_var('func_4641')
call_8140 = func_4640_call()
call_8141 = func_4640_call()
var_8153 = relay.var("var_8153", dtype = "float64", shape = (3, 9, 2))#candidate|8153|(3, 9, 2)|var|float64
bop_8154 = relay.left_shift(call_8140.astype('int64'), relay.reshape(var_8153.astype('int64'), relay.shape_of(call_8140))) # shape=(3, 9, 2)
bop_8157 = relay.left_shift(call_8141.astype('int64'), relay.reshape(var_8153.astype('int64'), relay.shape_of(call_8141))) # shape=(3, 9, 2)
bop_8182 = relay.divide(bop_8154.astype('float64'), relay.reshape(var_8153.astype('float64'), relay.shape_of(bop_8154))) # shape=(3, 9, 2)
bop_8185 = relay.divide(bop_8157.astype('float64'), relay.reshape(var_8153.astype('float64'), relay.shape_of(bop_8157))) # shape=(3, 9, 2)
output = bop_8182
output2 = bop_8185
F = relay.Function([var_8153,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8153,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

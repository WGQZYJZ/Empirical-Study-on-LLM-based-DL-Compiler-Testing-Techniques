==========mod==========
#[version = "0.0.5"]
def @func_5398(%var_5373: Tensor[(2160), float64], %var_5375: Tensor[(432), int64], %var_5380: Tensor[(1092), float64]) -> (Tensor[(4, 3, 15), float32], Tensor[(2160), float64], Tensor[(432), int64], Tensor[(210), int64], Tensor[(2340), int16], Tensor[(1092), float64], Tensor[(2340), float32]) {
  %0 = cast(%var_5373, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %1 = cast(meta[relay.Constant][0] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %2 = cast(%var_5375, dtype="int64") /* ty=Tensor[(432), int64] */;
  %3 = cast(meta[relay.Constant][1] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %4 = reshape(%0, newshape=[2160]) /* ty=Tensor[(2160), float64] */;
  %5 = reshape(%1, newshape=[]) /* ty=int16 */;
  %6 = reshape(%2, newshape=[432]) /* ty=Tensor[(432), int64] */;
  %7 = reshape(%3, newshape=[105, 2]) /* ty=Tensor[(105, 2), int64] */;
  %8 = @func_3135(%4, %5, %6, %7) /* ty=(Tensor[(2340), bool], Tensor[(12, 15, 12), bool], Tensor[(2160), float64], Tensor[(12), uint64], int16, Tensor[(1, 90), int16], Tensor[(432), int64], int16, Tensor[(105, 2), int64], Tensor[(84), float32], Tensor[(4, 3, 15), float32], Tensor[(180), float32], Tensor[(2340), float32]) */;
  %9 = cast(%var_5380, dtype="float64") /* ty=Tensor[(1092), float64] */;
  %10 = reshape(%9, newshape=[13, 6, 14]) /* ty=Tensor[(13, 6, 14), float64] */;
  %11 = @func_2934(%10) /* ty=(Tensor[(2340), int16], Tensor[(13, 6, 14), float32]) */;
  %12 = @func_3170() /* ty=Tensor[(2340), float64] */;
  %13 = cast(%12, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %14 = atanh(%13) /* ty=Tensor[(2340), float32] */;
  %15 = cast(%14, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %16 = cast(meta[relay.Constant][0] /* ty=int16 */, dtype="float32") /* ty=float32 */;
  %17 = %8.10;
  %18 = %11.0;
  %19 = multiply(%15, %16) /* ty=Tensor[(2340), float32] */;
  (%17, %var_5373, %var_5375, meta[relay.Constant][1] /* ty=Tensor[(210), int64] */, %18, %var_5380, %19)
}

def @func_2663(%var_2655: Tensor[(2, 168), uint8]) -> (Tensor[(12, 15, 12), bool], Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), bool], Tensor[(2, 168), uint8], Tensor[(84), float32]) {
  %20 = @func_2614() /* ty=Tensor[(12, 15, 12), float64] */;
  %21 = cast(meta[relay.Constant][2] /* ty=Tensor[(12, 15, 12), float64] */, dtype="bool") /* ty=Tensor[(12, 15, 12), bool] */;
  %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(3), int32] */;
  %23 = cast(%20, dtype="bool") /* ty=Tensor[(12, 15, 12), bool] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %25 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %26 = cast(%var_2655, dtype="uint8") /* ty=Tensor[(2, 168), uint8] */;
  %27 = cast(%var_2655, dtype="uint8") /* ty=Tensor[(2, 168), uint8] */;
  %28 = cast(meta[relay.Constant][3] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %29 = %25.1;
  %30 = cast(%29, dtype="int16") /* ty=Tensor[(15, 12, 13), int16] */;
  %31 = reshape(%26, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %32 = reshape(%27, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %33 = reshape(%28, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %34 = reshape(%30, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %35 = @func_2134(%31, %32, %33, %34) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(15, 12, 13), bool], Tensor[(84), float32], Tensor[(2340), int16]) */;
  %36 = equal(%23, %24) /* ty=Tensor[(12, 15, 12), bool] */;
  %37 = %35.1;
  (%36, %29, %37, %var_2655, meta[relay.Constant][3] /* ty=Tensor[(84), float32] */)
}

def @func_4752(%var_4736: Tensor[(180), uint8], %var_4746: Tensor[(210), int64], %var_4747: Tensor[(84), float32]) -> (Tensor[(12, ?, 12), bool], Tensor[(12, 15, 12), float64], Tensor[(180), uint8], Tensor[(84), float32], Tensor[(210), int64], Tensor[(84), float32]) {
  %38 = @func_3627() /* ty=(Tensor[(2340), uint16], Tensor[(12, ?, 12), bool], Tensor[(144, 1), int8], Tensor[(2340), float64]) */;
  %39 = cast(%var_4736, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %40 = cast(%var_4736, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %41 = reshape(%39, newshape=[9, 10, 2]) /* ty=Tensor[(9, 10, 2), uint8] */;
  %42 = reshape(%40, newshape=[9, 10, 2]) /* ty=Tensor[(9, 10, 2), uint8] */;
  %43 = @func_4338(%41, %42) /* ty=(Tensor[(9, 10, 2), uint8], Tensor[(12, 15, 12), float64]) */;
  %44 = %43.1;
  %45 = cast(%44, dtype="float64") /* ty=Tensor[(12, 15, 12), float64] */;
  %46 = cast(%var_4746, dtype="int64") /* ty=Tensor[(210), int64] */;
  %47 = cast(%var_4747, dtype="float32") /* ty=Tensor[(84), float32] */;
  %48 = reshape(%45, newshape=[12, 15, 12]) /* ty=Tensor[(12, 15, 12), float64] */;
  %49 = reshape(%46, newshape=[1, 210]) /* ty=Tensor[(1, 210), int64] */;
  %50 = reshape(%47, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %51 = @func_2740(%48, %49, %50) /* ty=(Tensor[(12, 15, 12), float32], Tensor[(12, 15, 12), float32], Tensor[(12), uint64], Tensor[(1, 210), int64], Tensor[(84), float32], Tensor[(2340), int16], int16, Tensor[(432), int64]) */;
  %52 = %38.1;
  %53 = %51.4;
  (%52, %44, %var_4736, %53, %var_4746, %var_4747)
}

def @func_5244(%var_5226: Tensor[(1890), bool]) -> (Tensor[(2340), int16], Tensor[(9, 14, 15), float32], Tensor[(1890), bool], Tensor[(15, 12, 13), bool]) {
  %54 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %55 = cast(%var_5226, dtype="bool") /* ty=Tensor[(1890), bool] */;
  %56 = cast(%var_5226, dtype="bool") /* ty=Tensor[(1890), bool] */;
  %57 = cast(%var_5226, dtype="bool") /* ty=Tensor[(1890), bool] */;
  %58 = reshape(%55, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), bool] */;
  %59 = reshape(%56, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), bool] */;
  %60 = reshape(%57, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), bool] */;
  %61 = @func_4073(%58, %59, %60) /* ty=(Tensor[(84), float32], Tensor[(2340), int16], Tensor[(9, 14, 15), float64], Tensor[(9, 14, 15), uint64], Tensor[(9, 14, 15), float32]) */;
  %62 = %54.2;
  %63 = cast(%62, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %64 = reshape(%63, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), int16] */;
  %65 = @func_894(%64) /* ty=(Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), float32]) */;
  %66 = %61.4;
  %67 = %65.0;
  (%62, %66, %var_5226, %67)
}

def @func_6362(%var_6351: Tensor[(2340), float64]) -> (Tensor[(2340), int32], Tensor[(144, 1), int8], Tensor[(2340), bool], Tensor[(13, 2, 8), float32]) {
  %68 = @func_3924() /* ty=(Tensor[(2340), int32],) */;
  %69 = @func_5872() /* ty=(Tensor[(144, 1), int8],) */;
  %70 = @func_5170() /* ty=(Tensor[(2340), float64], Tensor[(2340), int16]) */;
  %71 = %70.0;
  %72 = cast(%var_6351, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(1), int32] */;
  %74 = cast(%71, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?), bool] */;
  %76 = @func_3680() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) */;
  %77 = %68.0;
  %78 = %69.0;
  %79 = less_equal(%74, %75) /* ty=Tensor[(2340), bool] */;
  %80 = %76.1;
  (%77, %78, %79, %80)
}

def @func_2934(%var_2912: Tensor[(13, 6, 14), float64]) -> (Tensor[(2340), int16], Tensor[(13, 6, 14), float32]) {
  %81 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
  %82 = cast(%var_2912, dtype="float64") /* ty=Tensor[(13, 6, 14), float64] */;
  %83 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(13, 6, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 6, 14), float64] */, dtype="float64") /* ty=Tensor[(13, 6, 14), float64] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %86 = mod(%84, %85) /* ty=Tensor[(13, 6, 14), float64] */;
  %87 = cast(%86, dtype="float32") /* ty=Tensor[(13, 6, 14), float32] */;
  %88 = %81.3;
  %89 = sinh(%87) /* ty=Tensor[(13, 6, 14), float32] */;
  (%88, %89)
}

def @func_5442(%var_5412: Tensor[(2340), float64]) -> (Tensor[(2340), float32], Tensor[(2340), int16]) {
  %90 = @func_3787() /* ty=Tensor[(2340), float64] */;
  %91 = cast(%var_5412, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(1), int32] */;
  %93 = cast(%90, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?), float32] */;
  %95 = power(%93, %94) /* ty=Tensor[(2340), float32] */;
  %96 = cast(%90, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(1), int32] */;
  %98 = cast(%95, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?), float32] */;
  %100 = floor_mod(%98, %99) /* ty=Tensor[(2340), float32] */;
  %101 = cast(%100, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %102 = reshape(%101, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %103 = @func_5272(%102) /* ty=(Tensor[(2340), int16], Tensor[(2340), int32]) */;
  %104 = %103.0;
  (%100, %104)
}

def @func_4687() -> Tensor[(15, 12, 13), bool] {
  @func_3355() /* ty=Tensor[(15, 12, 13), bool] */
}

def @func_4826(%var_4807: Tensor[(84), float32]) -> (Tensor[(12, ?, 12), float32], Tensor[(14, 1, 6), float64], Tensor[(84), float32], Tensor[(2340), int16]) {
  %105 = cast(%var_4807, dtype="float32") /* ty=Tensor[(84), float32] */;
  %106 = cast(meta[relay.Constant][5] /* ty=Tensor[(2340), int16] */, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %107 = reshape(%105, newshape=[14, 1, 6]) /* ty=Tensor[(14, 1, 6), float32] */;
  %108 = reshape(%106, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %109 = @func_1644(%107, %108) /* ty=(Tensor[(14, 1, 6), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %110 = @func_3809() /* ty=Tensor[(12, ?, 12), float32] */;
  %111 = %109.0;
  (%110, %111, %var_4807, meta[relay.Constant][5] /* ty=Tensor[(2340), int16] */)
}

def @func_6189() -> Tensor[(7, 14, 3), float64] {
  @func_5292() /* ty=Tensor[(7, 14, 3), float64] */
}

def @func_1587(%var_1560: int16, %var_1561: Tensor[(15, 1, 6), int16], %var_1581: Tensor[(108, 4), int64]) -> (Tensor[(15, 1, 6), int16], Tensor[(6, 2, 1), uint64], Tensor[(12), uint64], Tensor[(108, 4), int64]) {
  %112 = cast(%var_1560, dtype="int16") /* ty=int16 */;
  %113 = cast(%var_1561, dtype="int16") /* ty=Tensor[(15, 1, 6), int16] */;
  %114 = cast(%var_1560, dtype="uint64") /* ty=uint64 */;
  %115 = cast(meta[relay.Constant][6] /* ty=Tensor[(12), uint64] */, dtype="uint64") /* ty=Tensor[(12), uint64] */;
  %116 = cast(%var_1581, dtype="int64") /* ty=Tensor[(108, 4), int64] */;
  %117 = reshape(%114, newshape=[]) /* ty=uint64 */;
  %118 = reshape(%115, newshape=[6, 2, 1]) /* ty=Tensor[(6, 2, 1), uint64] */;
  %119 = reshape(%116, newshape=[12, 36]) /* ty=Tensor[(12, 36), int64] */;
  %120 = @func_598(%117, %118, %119) /* ty=(Tensor[(6, 2, 1), uint64], Tensor[(13, 2, 8), float32], Tensor[(208), float32], Tensor[(13, 2, 8), float32], Tensor[(12, 36), bool]) */;
  %121 = subtract(%112, %113) /* ty=Tensor[(15, 1, 6), int16] */;
  %122 = %120.0;
  (%121, %122, meta[relay.Constant][6] /* ty=Tensor[(12), uint64] */, %var_1581)
}

def @func_2764(%var_2759: Tensor[(2, 72), int8]) -> (Tensor[(2340), int16], Tensor[(12, ?, 12), bool], Tensor[(2, 72), int8]) {
  %123 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %124 = cast(%var_2759, dtype="int8") /* ty=Tensor[(2, 72), int8] */;
  %125 = cast(%var_2759, dtype="int8") /* ty=Tensor[(2, 72), int8] */;
  %126 = reshape(%124, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
  %127 = reshape(%125, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
  %128 = @func_1267(%126, %127) /* ty=(Tensor[(12, ?, 12), bool],) */;
  %129 = %123.2;
  %130 = %128.0;
  (%129, %130, %var_2759)
}

def @func_3135(%var_3112: Tensor[(2160), float64], %var_3120: int16, %var_3122: Tensor[(432), int64], %var_3125: Tensor[(105, 2), int64]) -> (Tensor[(2340), bool], Tensor[(12, 15, 12), bool], Tensor[(2160), float64], Tensor[(12), uint64], int16, Tensor[(1, 90), int16], Tensor[(432), int64], int16, Tensor[(105, 2), int64], Tensor[(84), float32], Tensor[(4, 3, 15), float32], Tensor[(180), float32], Tensor[(2340), float32]) {
  %131 = @func_2981() /* ty=Tensor[(2340), int16] */;
  %132 = cast(%131, dtype="float64") /* ty=Tensor[(2340), float64] */;
  %133 = log2(%132) /* ty=Tensor[(2340), float64] */;
  %134 = cast(%131, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %135 = shape_of(%133, dtype="int32") /* ty=Tensor[(1), int32] */;
  %136 = cast(%133, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?), bool] */;
  %138 = cast(%var_3112, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %139 = reshape(%138, newshape=[12, 15, 12]) /* ty=Tensor[(12, 15, 12), float64] */;
  %140 = cast(%var_3120, dtype="int16") /* ty=int16 */;
  %141 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 90), int16] */, dtype="int16") /* ty=Tensor[(1, 90), int16] */;
  %142 = cast(%var_3122, dtype="int64") /* ty=Tensor[(432), int64] */;
  %143 = reshape(%140, newshape=[]) /* ty=int16 */;
  %144 = reshape(%141, newshape=[15, 1, 6]) /* ty=Tensor[(15, 1, 6), int16] */;
  %145 = reshape(%142, newshape=[108, 4]) /* ty=Tensor[(108, 4), int64] */;
  %146 = @func_1587(%143, %144, %145) /* ty=(Tensor[(15, 1, 6), int16], Tensor[(6, 2, 1), uint64], Tensor[(12), uint64], Tensor[(108, 4), int64]) */;
  %147 = cast(%var_3125, dtype="int64") /* ty=Tensor[(105, 2), int64] */;
  %148 = cast(meta[relay.Constant][8] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %149 = cast(%133, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %150 = cast(%var_3120, dtype="int16") /* ty=int16 */;
  %151 = cast(%var_3122, dtype="int64") /* ty=Tensor[(432), int64] */;
  %152 = reshape(%147, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), int64] */;
  %153 = reshape(%148, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %154 = reshape(%149, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %155 = reshape(%150, newshape=[]) /* ty=int16 */;
  %156 = reshape(%151, newshape=[12, 36]) /* ty=Tensor[(12, 36), int64] */;
  %157 = @func_1923(%152, %153, %154, %155, %156) /* ty=(Tensor[(5, 7, 6), int64], Tensor[(84), float32], Tensor[(15, 12, 13), bool], Tensor[(12), uint64], int16, Tensor[(90), int16], Tensor[(12, 36), int64]) */;
  %158 = cast(meta[relay.Constant][9] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %159 = reshape(%158, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float32] */;
  %160 = cast(%133, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %161 = greater(%136, %137) /* ty=Tensor[(2340), bool] */;
  %162 = @func_2796(%139) /* ty=Tensor[(12, 15, 12), bool] */;
  %163 = %146.2;
  %164 = %157.4;
  %165 = @func_2036(%159) /* ty=Tensor[(4, 3, 15), float32] */;
  %166 = acosh(%160) /* ty=Tensor[(2340), float32] */;
  (%161, %162, %var_3112, %163, %var_3120, meta[relay.Constant][7] /* ty=Tensor[(1, 90), int16] */, %var_3122, %164, %var_3125, meta[relay.Constant][8] /* ty=Tensor[(84), float32] */, %165, meta[relay.Constant][9] /* ty=Tensor[(180), float32] */, %166)
}

def @func_6184() -> (Tensor[(12, 15, 12), float64],) {
  %167 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
  %168 = %167.0;
  (%168,)
}

def @func_4974() -> (Tensor[(2340), int16], Tensor[(12, 15, 12), float64]) {
  %169 = @func_2981() /* ty=Tensor[(2340), int16] */;
  %170 = @func_2614() /* ty=Tensor[(12, 15, 12), float64] */;
  (%169, %170)
}

def @func_1923(%var_1879: Tensor[(5, 7, 6), int64], %var_1885: Tensor[(84), float32], %var_1886: Tensor[(2340), int16], %var_1896: int16, %var_1898: Tensor[(12, 36), int64]) -> (Tensor[(5, 7, 6), int64], Tensor[(84), float32], Tensor[(15, 12, 13), bool], Tensor[(12), uint64], int16, Tensor[(90), int16], Tensor[(12, 36), int64]) {
  %171 = cast(meta[relay.Constant][10] /* ty=Tensor[(5, 7, 6), int64] */, dtype="int64") /* ty=Tensor[(5, 7, 6), int64] */;
  %172 = shape_of(%var_1879, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%var_1879, dtype="int64") /* ty=Tensor[(5, 7, 6), int64] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %175 = cast(%var_1885, dtype="float32") /* ty=Tensor[(84), float32] */;
  %176 = cast(%var_1886, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %177 = reshape(%175, newshape=[14, 1, 6]) /* ty=Tensor[(14, 1, 6), float32] */;
  %178 = reshape(%176, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %179 = @func_1644(%177, %178) /* ty=(Tensor[(14, 1, 6), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %180 = %179.1;
  %181 = cast(%var_1886, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %182 = shape_of(%180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %183 = cast(%180, dtype="bool") /* ty=Tensor[(15, 12, 13), bool] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %185 = cast(%var_1896, dtype="int16") /* ty=int16 */;
  %186 = cast(meta[relay.Constant][11] /* ty=Tensor[(90), int16] */, dtype="int16") /* ty=Tensor[(90), int16] */;
  %187 = cast(%var_1898, dtype="int64") /* ty=Tensor[(12, 36), int64] */;
  %188 = reshape(%185, newshape=[]) /* ty=int16 */;
  %189 = reshape(%186, newshape=[15, 1, 6]) /* ty=Tensor[(15, 1, 6), int16] */;
  %190 = reshape(%187, newshape=[108, 4]) /* ty=Tensor[(108, 4), int64] */;
  %191 = @func_1587(%188, %189, %190) /* ty=(Tensor[(15, 1, 6), int16], Tensor[(6, 2, 1), uint64], Tensor[(12), uint64], Tensor[(108, 4), int64]) */;
  %192 = logical_xor(%173, %174) /* ty=Tensor[(5, 7, 6), int64] */;
  %193 = less_equal(%183, %184) /* ty=Tensor[(15, 12, 13), bool] */;
  %194 = %191.2;
  (%192, %var_1885, %193, %194, %var_1896, meta[relay.Constant][11] /* ty=Tensor[(90), int16] */, %var_1898)
}

def @func_1267(%var_1254: Tensor[(12, 1, 12), int8], %var_1255: Tensor[(12, 1, 12), int8]) -> (Tensor[(12, ?, 12), bool],) {
  %195 = cast(%var_1255, dtype="bool") /* ty=Tensor[(12, 1, 12), bool] */;
  %196 = shape_of(%var_1254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %197 = cast(%var_1254, dtype="bool") /* ty=Tensor[(12, 1, 12), bool] */;
  %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %199 = greater_equal(%197, %198) /* ty=Tensor[(12, ?, 12), bool] */;
  (%199,)
}

def @func_6273() -> (Tensor[(2340), int64], Tensor[(12, 15, 12), float64], Tensor[(2340), int16], Tensor[(7, 11, 15), int64], Tensor[(77, 15), float32], Tensor[(144, 1), int8]) {
  %200 = @func_4177() /* ty=Tensor[(2340), float64] */;
  %201 = cast(meta[relay.Constant][12] /* ty=Tensor[(2340), float64] */, dtype="int64") /* ty=Tensor[(2340), int64] */;
  %202 = shape_of(%200, dtype="int32") /* ty=Tensor[(1), int32] */;
  %203 = cast(%200, dtype="int64") /* ty=Tensor[(2340), int64] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?), int64] */;
  %205 = @func_4249() /* ty=(Tensor[(12, 15, 12), float64],) */;
  %206 = @func_4323() /* ty=(Tensor[(2340), int16],) */;
  %207 = cast(meta[relay.Constant][13] /* ty=Tensor[(77, 15), float32] */, dtype="float32") /* ty=Tensor[(77, 15), float32] */;
  %208 = cast(meta[relay.Constant][13] /* ty=Tensor[(77, 15), float32] */, dtype="float32") /* ty=Tensor[(77, 15), float32] */;
  %209 = reshape(%207, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %210 = reshape(%208, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %211 = @func_1516(%209, %210) /* ty=(Tensor[(12, ?, 12), bool], Tensor[(144), int8], Tensor[(7, 11, 15), int64], Tensor[(7, 11, 15), bool]) */;
  %212 = @func_5872() /* ty=(Tensor[(144, 1), int8],) */;
  %213 = left_shift(%203, %204) /* ty=Tensor[(2340), int64] */;
  %214 = %205.0;
  %215 = %206.0;
  %216 = %211.2;
  %217 = %212.0;
  (%213, %214, %215, %216, meta[relay.Constant][13] /* ty=Tensor[(77, 15), float32] */, %217)
}

def @func_4305(%var_4289: Tensor[(7, 14, 3), float32]) -> (Tensor[(7, 14, 3), float64], Tensor[(15, 12, 13), float32], Tensor[(10, 5, 13), float32], Tensor[(650), float32]) {
  %218 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
  %219 = %218.1;
  %220 = cast(%219, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %221 = asin(%220) /* ty=Tensor[(7, 14, 3), float32] */;
  %222 = cast(%var_4289, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %223 = shape_of(%221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(%221, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %226 = @func_3680() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) */;
  %227 = cast(meta[relay.Constant][14] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
  %228 = reshape(%227, newshape=[10, 5, 13]) /* ty=Tensor[(10, 5, 13), float32] */;
  %229 = @func_143(%228) /* ty=(Tensor[(10, 5, 13), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), int16]) */;
  %230 = floor_divide(%224, %225) /* ty=Tensor[(7, 14, 3), float64] */;
  %231 = %226.0;
  %232 = %229.0;
  (%230, %231, %232, meta[relay.Constant][14] /* ty=Tensor[(650), float32] */)
}

def @func_3420() -> (Tensor[(2340), int16], Tensor[(15, 12, 13), float32]) {
  %233 = @func_3341() /* ty=(Tensor[(2340), int16],) */;
  %234 = %233.0;
  %235 = cast(%234, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %236 = reshape(%235, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), int16] */;
  %237 = @func_894(%236) /* ty=(Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), float32]) */;
  %238 = %237.1;
  (%234, %238)
}

def @func_4631() -> (Tensor[(7, 14, 3), bool],) {
  %239 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
  %240 = %239.1;
  (%240,)
}

def @func_239(%var_200: Tensor[(6, 6, 12), int64], %var_201: Tensor[(6, 6, 12), int64]) -> (Tensor[(6, 6, 12), int64], Tensor[(6, 6, 12), int16], Tensor[(6, 6, 12), float32]) {
  %241 = cast(%var_201, dtype="int64") /* ty=Tensor[(6, 6, 12), int64] */;
  %242 = shape_of(%var_200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%var_200, dtype="int64") /* ty=Tensor[(6, 6, 12), int64] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %245 = cast(meta[relay.Constant][15] /* ty=Tensor[(6, 6, 12), int64] */, dtype="int16") /* ty=Tensor[(6, 6, 12), int16] */;
  %246 = shape_of(%var_200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(%var_200, dtype="int16") /* ty=Tensor[(6, 6, 12), int16] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %249 = cast(meta[relay.Constant][15] /* ty=Tensor[(6, 6, 12), int64] */, dtype="float32") /* ty=Tensor[(6, 6, 12), float32] */;
  %250 = log(%249) /* ty=Tensor[(6, 6, 12), float32] */;
  %251 = cast(meta[relay.Constant][15] /* ty=Tensor[(6, 6, 12), int64] */, dtype="float32") /* ty=Tensor[(6, 6, 12), float32] */;
  %252 = shape_of(%250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %253 = cast(%250, dtype="float32") /* ty=Tensor[(6, 6, 12), float32] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %255 = maximum(%243, %244) /* ty=Tensor[(6, 6, 12), int64] */;
  %256 = bitwise_or(%247, %248) /* ty=Tensor[(6, 6, 12), int16] */;
  %257 = floor_divide(%253, %254) /* ty=Tensor[(6, 6, 12), float32] */;
  (%255, %256, %257)
}

def @func_3067(%var_3024: Tensor[(12, 6, 9), float64], %var_3033: Tensor[(84), float32], %var_3045: Tensor[(432), int64], %var_3054: Tensor[(45, 2), int16]) -> (Tensor[(12, 6, 9), float64], Tensor[(14, 1, 6), float64], Tensor[(84), float32], Tensor[(2340), int16], Tensor[(7, 14, 3), bool], Tensor[(6, 6, 12), int64], Tensor[(432), int64], Tensor[(12), uint64], int16, Tensor[(45, 2), int16], Tensor[(84), float32], Tensor[(336), uint8]) {
  %258 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 6, 9), float64] */, dtype="float64") /* ty=Tensor[(12, 6, 9), float64] */;
  %259 = shape_of(%var_3024, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%var_3024, dtype="float64") /* ty=Tensor[(12, 6, 9), float64] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %262 = cast(%var_3033, dtype="float32") /* ty=Tensor[(84), float32] */;
  %263 = cast(meta[relay.Constant][17] /* ty=Tensor[(2340), int16] */, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %264 = reshape(%262, newshape=[14, 1, 6]) /* ty=Tensor[(14, 1, 6), float32] */;
  %265 = reshape(%263, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %266 = @func_1644(%264, %265) /* ty=(Tensor[(14, 1, 6), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %267 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
  %268 = cast(%var_3045, dtype="int64") /* ty=Tensor[(432), int64] */;
  %269 = cast(%var_3045, dtype="int64") /* ty=Tensor[(432), int64] */;
  %270 = reshape(%268, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
  %271 = reshape(%269, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
  %272 = @func_239(%270, %271) /* ty=(Tensor[(6, 6, 12), int64], Tensor[(6, 6, 12), int16], Tensor[(6, 6, 12), float32]) */;
  %273 = cast(meta[relay.Constant][18] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %274 = cast(%var_3054, dtype="int16") /* ty=Tensor[(45, 2), int16] */;
  %275 = %272.0;
  %276 = cast(%275, dtype="int64") /* ty=Tensor[(6, 6, 12), int64] */;
  %277 = reshape(%273, newshape=[]) /* ty=int16 */;
  %278 = reshape(%274, newshape=[15, 1, 6]) /* ty=Tensor[(15, 1, 6), int16] */;
  %279 = reshape(%276, newshape=[108, 4]) /* ty=Tensor[(108, 4), int64] */;
  %280 = @func_1587(%277, %278, %279) /* ty=(Tensor[(15, 1, 6), int16], Tensor[(6, 2, 1), uint64], Tensor[(12), uint64], Tensor[(108, 4), int64]) */;
  %281 = cast(meta[relay.Constant][19] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %282 = reshape(%281, newshape=[2, 168]) /* ty=Tensor[(2, 168), uint8] */;
  %283 = @func_2663(%282) /* ty=(Tensor[(12, 15, 12), bool], Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), bool], Tensor[(2, 168), uint8], Tensor[(84), float32]) */;
  %284 = power(%260, %261) /* ty=Tensor[(12, 6, 9), float64] */;
  %285 = %266.0;
  %286 = %267.1;
  %287 = %280.2;
  %288 = %283.4;
  (%284, %285, %var_3033, meta[relay.Constant][17] /* ty=Tensor[(2340), int16] */, %286, %275, %var_3045, %287, meta[relay.Constant][18] /* ty=int16 */, %var_3054, %288, meta[relay.Constant][19] /* ty=Tensor[(336), uint8] */)
}

def @func_3924() -> (Tensor[(2340), int32],) {
  %289 = @func_3627() /* ty=(Tensor[(2340), uint16], Tensor[(12, ?, 12), bool], Tensor[(144, 1), int8], Tensor[(2340), float64]) */;
  %290 = %289.0;
  %291 = cast(meta[relay.Constant][20] /* ty=Tensor[(2340), uint16] */, dtype="int32") /* ty=Tensor[(2340), int32] */;
  %292 = shape_of(%290, dtype="int32") /* ty=Tensor[(1), int32] */;
  %293 = cast(%290, dtype="int32") /* ty=Tensor[(2340), int32] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?), int32] */;
  %295 = logical_xor(%293, %294) /* ty=Tensor[(2340), int32] */;
  (%295,)
}

def @func_6662() -> (Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool]) {
  %296 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
  %297 = %296.0;
  %298 = @func_3355() /* ty=Tensor[(15, 12, 13), bool] */;
  (%297, %298)
}

def @func_1644(%var_1607: Tensor[(14, 1, 6), float32], %var_1635: Tensor[(2340), int16]) -> (Tensor[(14, 1, 6), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) {
  %299 = cast(%var_1607, dtype="float32") /* ty=Tensor[(14, 1, 6), float32] */;
  %300 = asin(%299) /* ty=Tensor[(14, 1, 6), float32] */;
  %301 = cast(%300, dtype="float64") /* ty=Tensor[(14, 1, 6), float64] */;
  %302 = cast(%var_1635, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %303 = reshape(%302, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), int16] */;
  %304 = @func_894(%303) /* ty=(Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), float32]) */;
  %305 = erf(%301) /* ty=Tensor[(14, 1, 6), float64] */;
  %306 = %304.0;
  (%305, %306, %var_1635)
}

def @func_6022() -> (Tensor[(15, 12, 13), float64],) {
  %307 = @func_4879() /* ty=(Tensor[(15, 12, 13), float64],) */;
  %308 = %307.0;
  (%308,)
}

def @func_714(%var_685: Tensor[(7, 6, 16), uint16], %var_686: Tensor[(7, 6, 16), uint16]) -> (Tensor[(7, 14, 3), bool], Tensor[(65, 10), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 6, 16), bool]) {
  %309 = cast(meta[relay.Constant][21] /* ty=Tensor[(65, 10), float32] */, dtype="float32") /* ty=Tensor[(65, 10), float32] */;
  %310 = reshape(%309, newshape=[10, 5, 13]) /* ty=Tensor[(10, 5, 13), float32] */;
  %311 = @func_143(%310) /* ty=(Tensor[(10, 5, 13), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), int16]) */;
  %312 = %311.1;
  %313 = cast(%312, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
  %314 = reshape(%313, newshape=[7, 14, 3]) /* ty=Tensor[(7, 14, 3), bool] */;
  %315 = cast(%var_685, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
  %316 = sqrt(%315) /* ty=Tensor[(7, 6, 16), float64] */;
  %317 = cast(%var_686, dtype="uint16") /* ty=Tensor[(7, 6, 16), uint16] */;
  %318 = shape_of(%var_685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(%var_685, dtype="uint16") /* ty=Tensor[(7, 6, 16), uint16] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %321 = right_shift(%319, %320) /* ty=Tensor[(7, 6, 16), uint16] */;
  %322 = cast(%321, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %323 = shape_of(%316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%316, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %326 = @func_57(%314) /* ty=Tensor[(7, 14, 3), bool] */;
  %327 = less(%324, %325) /* ty=Tensor[(7, 6, 16), bool] */;
  (%312, meta[relay.Constant][21] /* ty=Tensor[(65, 10), float32] */, %326, %327)
}

def @func_3933() -> Tensor[(7, 14, 3), bool] {
  %328 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
  %328.1
}

def @func_6757() -> (Tensor[(12, 15, 12), float64],) {
  %329 = @func_3742() /* ty=(Tensor[(12, 15, 12), float64],) */;
  %330 = %329.0;
  %331 = cast(%330, dtype="float64") /* ty=Tensor[(12, 15, 12), float64] */;
  %332 = log2(%331) /* ty=Tensor[(12, 15, 12), float64] */;
  (%332,)
}

def @func_5170() -> (Tensor[(2340), float64], Tensor[(2340), int16]) {
  %333 = @func_3959() /* ty=(Tensor[(2340), float64], Tensor[(15, 12, 13), float32]) */;
  %334 = @func_3420() /* ty=(Tensor[(2340), int16], Tensor[(15, 12, 13), float32]) */;
  %335 = %333.0;
  %336 = %334.0;
  (%335, %336)
}

def @func_6131(%var_6114: Tensor[(3, 30), int16]) -> (Tensor[(2340), bool], Tensor[(12), uint64], Tensor[(648), float64], Tensor[(84, 1), float32], Tensor[(432), int64], Tensor[(3, 30), int16], Tensor[(2340), bool]) {
  %337 = @func_4177() /* ty=Tensor[(2340), float64] */;
  %338 = cast(meta[relay.Constant][22] /* ty=Tensor[(2340), float64] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %339 = shape_of(%337, dtype="int32") /* ty=Tensor[(1), int32] */;
  %340 = cast(%337, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?), bool] */;
  %342 = cast(meta[relay.Constant][23] /* ty=Tensor[(648), float64] */, dtype="float64") /* ty=Tensor[(648), float64] */;
  %343 = cast(meta[relay.Constant][24] /* ty=Tensor[(84, 1), float32] */, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %344 = cast(meta[relay.Constant][25] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
  %345 = cast(%var_6114, dtype="int16") /* ty=Tensor[(3, 30), int16] */;
  %346 = reshape(%342, newshape=[12, 6, 9]) /* ty=Tensor[(12, 6, 9), float64] */;
  %347 = reshape(%343, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %348 = reshape(%344, newshape=[432]) /* ty=Tensor[(432), int64] */;
  %349 = reshape(%345, newshape=[45, 2]) /* ty=Tensor[(45, 2), int16] */;
  %350 = @func_3067(%346, %347, %348, %349) /* ty=(Tensor[(12, 6, 9), float64], Tensor[(14, 1, 6), float64], Tensor[(84), float32], Tensor[(2340), int16], Tensor[(7, 14, 3), bool], Tensor[(6, 6, 12), int64], Tensor[(432), int64], Tensor[(12), uint64], int16, Tensor[(45, 2), int16], Tensor[(84), float32], Tensor[(336), uint8]) */;
  %351 = cast(%337, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %352 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(2340), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %353 = cast(meta[relay.Constant][22] /* ty=Tensor[(2340), float64] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?), bool] */;
  %355 = logical_and(%340, %341) /* ty=Tensor[(2340), bool] */;
  %356 = %350.7;
  %357 = less(%353, %354) /* ty=Tensor[(2340), bool] */;
  (%355, %356, meta[relay.Constant][23] /* ty=Tensor[(648), float64] */, meta[relay.Constant][24] /* ty=Tensor[(84, 1), float32] */, meta[relay.Constant][25] /* ty=Tensor[(432), int64] */, %var_6114, %357)
}

def @func_4097() -> Tensor[(15, 12, 13), float64] {
  %358 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %359 = %358.1;
  %360 = cast(%359, dtype="float64") /* ty=Tensor[(15, 12, 13), float64] */;
  log10(%360) /* ty=Tensor[(15, 12, 13), float64] */
}

def @func_3959() -> (Tensor[(2340), float64], Tensor[(15, 12, 13), float32]) {
  %361 = @func_3680() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) */;
  %362 = @func_3787() /* ty=Tensor[(2340), float64] */;
  %363 = %361.0;
  (%362, %363)
}

def @func_5047(%var_5006: Tensor[(12, 6, 10), float32], %var_5038: Tensor[(1920), int64], %var_5044: Tensor[(90, 1), int16]) -> (Tensor[(12, 6, 10), uint16], Tensor[(16, 15, 8), float64], Tensor[(1920), int64], int16, Tensor[(648), float64], Tensor[(1, 84), float32], Tensor[(432), int64], Tensor[(90, 1), int16]) {
  %364 = cast(%var_5006, dtype="float32") /* ty=Tensor[(12, 6, 10), float32] */;
  %365 = asin(%364) /* ty=Tensor[(12, 6, 10), float32] */;
  %366 = cast(%var_5006, dtype="uint16") /* ty=Tensor[(12, 6, 10), uint16] */;
  %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(%365, dtype="uint16") /* ty=Tensor[(12, 6, 10), uint16] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %370 = cast(%var_5038, dtype="int64") /* ty=Tensor[(1920), int64] */;
  %371 = cast(%var_5038, dtype="int64") /* ty=Tensor[(1920), int64] */;
  %372 = cast(%var_5038, dtype="bool") /* ty=Tensor[(1920), bool] */;
  %373 = reshape(%370, newshape=[16, 15, 8]) /* ty=Tensor[(16, 15, 8), int64] */;
  %374 = reshape(%371, newshape=[16, 15, 8]) /* ty=Tensor[(16, 15, 8), int64] */;
  %375 = reshape(%372, newshape=[16, 15, 8]) /* ty=Tensor[(16, 15, 8), bool] */;
  %376 = @func_4022(%373, %374, %375) /* ty=(Tensor[(16, 15, 8), float64],) */;
  %377 = cast(meta[relay.Constant][26] /* ty=Tensor[(648), float64] */, dtype="float64") /* ty=Tensor[(648), float64] */;
  %378 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 84), float32] */, dtype="float32") /* ty=Tensor[(1, 84), float32] */;
  %379 = cast(meta[relay.Constant][28] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
  %380 = cast(%var_5044, dtype="int16") /* ty=Tensor[(90, 1), int16] */;
  %381 = reshape(%377, newshape=[12, 6, 9]) /* ty=Tensor[(12, 6, 9), float64] */;
  %382 = reshape(%378, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %383 = reshape(%379, newshape=[432]) /* ty=Tensor[(432), int64] */;
  %384 = reshape(%380, newshape=[45, 2]) /* ty=Tensor[(45, 2), int16] */;
  %385 = @func_3067(%381, %382, %383, %384) /* ty=(Tensor[(12, 6, 9), float64], Tensor[(14, 1, 6), float64], Tensor[(84), float32], Tensor[(2340), int16], Tensor[(7, 14, 3), bool], Tensor[(6, 6, 12), int64], Tensor[(432), int64], Tensor[(12), uint64], int16, Tensor[(45, 2), int16], Tensor[(84), float32], Tensor[(336), uint8]) */;
  %386 = right_shift(%368, %369) /* ty=Tensor[(12, 6, 10), uint16] */;
  %387 = %376.0;
  %388 = %385.8;
  (%386, %387, %var_5038, %388, meta[relay.Constant][26] /* ty=Tensor[(648), float64] */, meta[relay.Constant][27] /* ty=Tensor[(1, 84), float32] */, meta[relay.Constant][28] /* ty=Tensor[(432), int64] */, %var_5044)
}

def @func_4177() -> Tensor[(2340), float64] {
  @func_3170() /* ty=Tensor[(2340), float64] */
}

def @func_5206() -> Tensor[(12, ?, 12), float32] {
  @func_3809() /* ty=Tensor[(12, ?, 12), float32] */
}

def @func_5935() -> (Tensor[(7, 14, 3), bool], Tensor[(15, 12, 13), float64], Tensor[(15, 12, 13), float32]) {
  %389 = @func_4631() /* ty=(Tensor[(7, 14, 3), bool],) */;
  %390 = @func_4879() /* ty=(Tensor[(15, 12, 13), float64],) */;
  %391 = @func_5817() /* ty=(Tensor[(15, 12, 13), float32],) */;
  %392 = %389.0;
  %393 = %390.0;
  %394 = %391.0;
  (%392, %393, %394)
}

def @func_2614() -> Tensor[(12, 15, 12), float64] {
  %395 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %395.0
}

def @func_57(%var_52: Tensor[(7, 14, 3), bool]) -> Tensor[(7, 14, 3), bool] {
  %396 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %397 = cast(%var_52, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
  logical_or(%396, %397) /* ty=Tensor[(7, 14, 3), bool] */
}

def @func_3262(%var_3251: Tensor[(2340, 1), int16]) -> (Tensor[(12, 15, 12), float32], Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(84), float32], Tensor[(2340, 1), int16]) {
  %398 = @func_3198() /* ty=(Tensor[(12, 15, 12), float64],) */;
  %399 = %398.0;
  %400 = cast(%399, dtype="float32") /* ty=Tensor[(12, 15, 12), float32] */;
  %401 = cast(meta[relay.Constant][29] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %402 = cast(meta[relay.Constant][29] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %403 = cast(meta[relay.Constant][30] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %404 = cast(%var_3251, dtype="int16") /* ty=Tensor[(2340, 1), int16] */;
  %405 = reshape(%401, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %406 = reshape(%402, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %407 = reshape(%403, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %408 = reshape(%404, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %409 = @func_2134(%405, %406, %407, %408) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(15, 12, 13), bool], Tensor[(84), float32], Tensor[(2340), int16]) */;
  %410 = tan(%400) /* ty=Tensor[(12, 15, 12), float32] */;
  %411 = %409.0;
  (%410, %411, meta[relay.Constant][29] /* ty=Tensor[(336), uint8] */, meta[relay.Constant][30] /* ty=Tensor[(84), float32] */, %var_3251)
}

def @func_6225() -> Tensor[(2340), float64] {
  %412 = @func_5331() /* ty=(Tensor[(2340), float64], Tensor[(6, 6, 12), int64], Tensor[(432), int64]) */;
  %412.0
}

def @func_2796(%var_2787: Tensor[(12, 15, 12), float64]) -> Tensor[(12, 15, 12), bool] {
  %413 = @func_2614() /* ty=Tensor[(12, 15, 12), float64] */;
  %414 = cast(%var_2787, dtype="bool") /* ty=Tensor[(12, 15, 12), bool] */;
  %415 = shape_of(%413, dtype="int32") /* ty=Tensor[(3), int32] */;
  %416 = cast(%413, dtype="bool") /* ty=Tensor[(12, 15, 12), bool] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%416, %417) /* ty=Tensor[(12, 15, 12), bool] */
}

def @func_3406() -> Tensor[(7, 14, 3), bool] {
  %418 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
  %418.1
}

def @func_3496(%var_3484: Tensor[(672), uint16]) -> (Tensor[(12, 15, 12), float64], Tensor[(65, 10), float32], Tensor[(672), uint16]) {
  %419 = @func_3198() /* ty=(Tensor[(12, 15, 12), float64],) */;
  %420 = cast(%var_3484, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %421 = cast(%var_3484, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %422 = reshape(%420, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %423 = reshape(%421, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %424 = @func_714(%422, %423) /* ty=(Tensor[(7, 14, 3), bool], Tensor[(65, 10), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 6, 16), bool]) */;
  %425 = %419.0;
  %426 = %424.1;
  (%425, %426, %var_3484)
}

def @func_6294(%var_6279: Tensor[(2, 10, 10), float32]) -> (Tensor[(2, 10, 10), bool], Tensor[(12, ?, 12), float32], Tensor[(7, 14, 3), bool]) {
  %427 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 10, 10), float32] */, dtype="bool") /* ty=Tensor[(2, 10, 10), bool] */;
  %428 = shape_of(%var_6279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%var_6279, dtype="bool") /* ty=Tensor[(2, 10, 10), bool] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %431 = @func_6152() /* ty=(Tensor[(12, ?, 12), float32],) */;
  %432 = less(%429, %430) /* ty=Tensor[(2, 10, 10), bool] */;
  %433 = %431.0;
  %434 = @func_3406() /* ty=Tensor[(7, 14, 3), bool] */;
  (%432, %433, %434)
}

def @func_5669(%var_5618: Tensor[(1890), bool]) -> (Tensor[(2340), float32], Tensor[(2340), int16], Tensor[(12, ?, 12), bool], Tensor[(144), int8], Tensor[(1890), float64]) {
  %435 = @func_4316() /* ty=Tensor[(2340), float64] */;
  %436 = cast(%435, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %437 = cast(%var_5618, dtype="bool") /* ty=Tensor[(1890), bool] */;
  %438 = cast(%var_5618, dtype="bool") /* ty=Tensor[(1890), bool] */;
  %439 = cast(%var_5618, dtype="bool") /* ty=Tensor[(1890), bool] */;
  %440 = reshape(%437, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), bool] */;
  %441 = reshape(%438, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), bool] */;
  %442 = reshape(%439, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), bool] */;
  %443 = @func_4073(%440, %441, %442) /* ty=(Tensor[(84), float32], Tensor[(2340), int16], Tensor[(9, 14, 15), float64], Tensor[(9, 14, 15), uint64], Tensor[(9, 14, 15), float32]) */;
  %444 = cast(meta[relay.Constant][32] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
  %445 = reshape(%444, newshape=[2, 72]) /* ty=Tensor[(2, 72), int8] */;
  %446 = @func_2764(%445) /* ty=(Tensor[(2340), int16], Tensor[(12, ?, 12), bool], Tensor[(2, 72), int8]) */;
  %447 = cast(%var_5618, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %448 = tan(%447) /* ty=Tensor[(1890), float32] */;
  %449 = cast(%var_5618, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %450 = shape_of(%448, dtype="int32") /* ty=Tensor[(1), int32] */;
  %451 = cast(%448, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?), float64] */;
  %453 = log(%436) /* ty=Tensor[(2340), float32] */;
  %454 = %443.1;
  %455 = %446.1;
  %456 = mod(%451, %452) /* ty=Tensor[(1890), float64] */;
  (%453, %454, %455, meta[relay.Constant][32] /* ty=Tensor[(144), int8] */, %456)
}

def @func_5853(%var_5849: Tensor[(180), float32]) -> (Tensor[(2340), int32], Tensor[(2340), int16], Tensor[(2340), float64], Tensor[(4, 3, 15), float32], Tensor[(180), float32]) {
  %457 = @func_3924() /* ty=(Tensor[(2340), int32],) */;
  %458 = @func_3420() /* ty=(Tensor[(2340), int16], Tensor[(15, 12, 13), float32]) */;
  %459 = cast(%var_5849, dtype="float32") /* ty=Tensor[(180), float32] */;
  %460 = reshape(%459, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float32] */;
  %461 = %457.0;
  %462 = %458.0;
  %463 = @func_3787() /* ty=Tensor[(2340), float64] */;
  %464 = @func_2036(%460) /* ty=Tensor[(4, 3, 15), float32] */;
  (%461, %462, %463, %464, %var_5849)
}

def @func_5817() -> (Tensor[(15, 12, 13), float32],) {
  %465 = @func_3959() /* ty=(Tensor[(2340), float64], Tensor[(15, 12, 13), float32]) */;
  %466 = %465.1;
  (%466,)
}

def @func_3742() -> (Tensor[(12, 15, 12), float64],) {
  %467 = @func_3215() /* ty=Tensor[(12, 15, 12), float64] */;
  (%467,)
}

def @func_4396(%var_4363: Tensor[(11, 16, 6), int32]) -> (Tensor[(11, 16, 6), int32],) {
  %468 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 16, 6), int32] */, dtype="int32") /* ty=Tensor[(11, 16, 6), int32] */;
  %469 = shape_of(%var_4363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%var_4363, dtype="int32") /* ty=Tensor[(11, 16, 6), int32] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %472 = bitwise_or(%470, %471) /* ty=Tensor[(11, 16, 6), int32] */;
  (%472,)
}

def @func_2036(%var_2030: Tensor[(4, 3, 15), float32]) -> Tensor[(4, 3, 15), float32] {
  %473 = cast(%var_2030, dtype="float32") /* ty=Tensor[(4, 3, 15), float32] */;
  cosh(%473) /* ty=Tensor[(4, 3, 15), float32] */
}

def @func_3285(%var_3269: Tensor[(9, 13, 1), float64]) -> (Tensor[(9, 13, 1), float64],) {
  %474 = cast(%var_3269, dtype="float64") /* ty=Tensor[(9, 13, 1), float64] */;
  %475 = asinh(%474) /* ty=Tensor[(9, 13, 1), float64] */;
  (%475,)
}

def @func_4879() -> (Tensor[(15, 12, 13), float64],) {
  %476 = @func_4097() /* ty=Tensor[(15, 12, 13), float64] */;
  (%476,)
}

def @func_4551(%var_4455: Tensor[(4, 7, 3), float64], %var_4456: Tensor[(4, 7, 3), float64], %var_4464: Tensor[(4, 7, 3), float64]) -> (Tensor[(7, 14, 3), bool], Tensor[(4, 7, 3), bool], Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32], Tensor[(13, 2, 8), float32], Tensor[(144), bool], Tensor[(7, 14, 3), bool], Tensor[(15, 12, 13), float64], Tensor[(12, 15, 12), float64], Tensor[(4, 7, 3), int16], Tensor[(7, 14, 3), bool], Tensor[(2340), int16]) {
  %477 = cast(%var_4464, dtype="bool") /* ty=Tensor[(4, 7, 3), bool] */;
  %478 = shape_of(%var_4455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%var_4455, dtype="bool") /* ty=Tensor[(4, 7, 3), bool] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %481 = @func_3680() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) */;
  %482 = cast(meta[relay.Constant][34] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %483 = reshape(%482, newshape=[13, 2, 8]) /* ty=Tensor[(13, 2, 8), float32] */;
  %484 = @func_3680() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) */;
  %485 = cast(meta[relay.Constant][35] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
  %486 = reshape(%485, newshape=[2, 72]) /* ty=Tensor[(2, 72), int8] */;
  %487 = @func_2764(%486) /* ty=(Tensor[(2340), int16], Tensor[(12, ?, 12), bool], Tensor[(2, 72), int8]) */;
  %488 = %487.2;
  %489 = cast(%488, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
  %490 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(144), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %491 = cast(meta[relay.Constant][35] /* ty=Tensor[(144), int8] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %492 = dyn.reshape(%489, %490, newshape=[]) /* ty=Tensor[(?), bool] */;
  %493 = @func_3742() /* ty=(Tensor[(12, 15, 12), float64],) */;
  %494 = cast(%var_4456, dtype="float64") /* ty=Tensor[(4, 7, 3), float64] */;
  %495 = shape_of(%var_4455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%var_4455, dtype="float64") /* ty=Tensor[(4, 7, 3), float64] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %498 = multiply(%496, %497) /* ty=Tensor[(4, 7, 3), float64] */;
  %499 = cast(%498, dtype="int16") /* ty=Tensor[(4, 7, 3), int16] */;
  %500 = shape_of(%var_4455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%var_4455, dtype="int16") /* ty=Tensor[(4, 7, 3), int16] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %503 = @func_3933() /* ty=Tensor[(7, 14, 3), bool] */;
  %504 = cast(%503, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
  %505 = reshape(%504, newshape=[7, 14, 3]) /* ty=Tensor[(7, 14, 3), bool] */;
  %506 = @func_3420() /* ty=(Tensor[(2340), int16], Tensor[(15, 12, 13), float32]) */;
  %507 = @func_3933() /* ty=Tensor[(7, 14, 3), bool] */;
  %508 = not_equal(%479, %480) /* ty=Tensor[(4, 7, 3), bool] */;
  %509 = %481.0;
  %510 = @func_444(%483) /* ty=Tensor[(13, 2, 8), float32] */;
  %511 = %484.1;
  %512 = less(%491, %492) /* ty=Tensor[(144), bool] */;
  %513 = @func_4097() /* ty=Tensor[(15, 12, 13), float64] */;
  %514 = %493.0;
  %515 = logical_xor(%501, %502) /* ty=Tensor[(4, 7, 3), int16] */;
  %516 = @func_57(%505) /* ty=Tensor[(7, 14, 3), bool] */;
  %517 = %506.0;
  (%507, %508, %509, %510, meta[relay.Constant][34] /* ty=Tensor[(208), float32] */, %511, %512, %503, %513, %514, %515, %516, %517)
}

def @func_783(%var_780: Tensor[(7, 9, 10), float32]) -> (Tensor[(7, 9, 10), float32],) {
  %518 = cast(%var_780, dtype="float32") /* ty=Tensor[(7, 9, 10), float32] */;
  %519 = erf(%518) /* ty=Tensor[(7, 9, 10), float32] */;
  (%519,)
}

def @func_894(%var_881: Tensor[(15, 12, 13), int16]) -> (Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), float32]) {
  %520 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 12, 13), int16] */, dtype="bool") /* ty=Tensor[(15, 12, 13), bool] */;
  %521 = shape_of(%var_881, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%var_881, dtype="bool") /* ty=Tensor[(15, 12, 13), bool] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %524 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 12, 13), int16] */, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
  %525 = greater(%522, %523) /* ty=Tensor[(15, 12, 13), bool] */;
  %526 = sin(%524) /* ty=Tensor[(15, 12, 13), float32] */;
  (%525, %526)
}

def @func_6442(%var_6425: Tensor[(200), float32], %var_6435: int16, %var_6437: Tensor[(432), int64]) -> (Tensor[(2340), int16], Tensor[(12, ?, 12), float32], Tensor[(200), float32], Tensor[(15, 12, 13), bool], Tensor[(6, 2, 1), uint64], int16, Tensor[(90), int16], Tensor[(432), int64]) {
  %527 = cast(%var_6425, dtype="float32") /* ty=Tensor[(200), float32] */;
  %528 = reshape(%527, newshape=[2, 10, 10]) /* ty=Tensor[(2, 10, 10), float32] */;
  %529 = @func_6294(%528) /* ty=(Tensor[(2, 10, 10), bool], Tensor[(12, ?, 12), float32], Tensor[(7, 14, 3), bool]) */;
  %530 = cast(%var_6435, dtype="int16") /* ty=int16 */;
  %531 = cast(meta[relay.Constant][37] /* ty=Tensor[(90), int16] */, dtype="int16") /* ty=Tensor[(90), int16] */;
  %532 = cast(%var_6437, dtype="int64") /* ty=Tensor[(432), int64] */;
  %533 = reshape(%530, newshape=[]) /* ty=int16 */;
  %534 = reshape(%531, newshape=[15, 1, 6]) /* ty=Tensor[(15, 1, 6), int16] */;
  %535 = reshape(%532, newshape=[108, 4]) /* ty=Tensor[(108, 4), int64] */;
  %536 = @func_1587(%533, %534, %535) /* ty=(Tensor[(15, 1, 6), int16], Tensor[(6, 2, 1), uint64], Tensor[(12), uint64], Tensor[(108, 4), int64]) */;
  %537 = @func_2981() /* ty=Tensor[(2340), int16] */;
  %538 = %529.1;
  %539 = @func_3355() /* ty=Tensor[(15, 12, 13), bool] */;
  %540 = %536.1;
  (%537, %538, %var_6425, %539, %540, %var_6435, meta[relay.Constant][37] /* ty=Tensor[(90), int16] */, %var_6437)
}

def @func_3341() -> (Tensor[(2340), int16],) {
  %541 = @func_2981() /* ty=Tensor[(2340), int16] */;
  (%541,)
}

def @func_6321(%var_6308: Tensor[(11, 3, 15), float32], %var_6309: Tensor[(11, 3, 15), float32]) -> Tensor[(11, 3, 15), float32] {
  %542 = cast(%var_6309, dtype="float32") /* ty=Tensor[(11, 3, 15), float32] */;
  %543 = shape_of(%var_6308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%var_6308, dtype="float32") /* ty=Tensor[(11, 3, 15), float32] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%544, %545) /* ty=Tensor[(11, 3, 15), float32] */
}

def @func_4249() -> (Tensor[(12, 15, 12), float64],) {
  %546 = @func_3742() /* ty=(Tensor[(12, 15, 12), float64],) */;
  %547 = %546.0;
  (%547,)
}

def @func_2740(%var_2721: Tensor[(12, 15, 12), float64], %var_2734: Tensor[(1, 210), int64], %var_2735: Tensor[(84), float32]) -> (Tensor[(12, 15, 12), float32], Tensor[(12, 15, 12), float32], Tensor[(12), uint64], Tensor[(1, 210), int64], Tensor[(84), float32], Tensor[(2340), int16], int16, Tensor[(432), int64]) {
  %548 = @func_2614() /* ty=Tensor[(12, 15, 12), float64] */;
  %549 = cast(%var_2721, dtype="float32") /* ty=Tensor[(12, 15, 12), float32] */;
  %550 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%548, dtype="float32") /* ty=Tensor[(12, 15, 12), float32] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %553 = cast(%var_2721, dtype="float32") /* ty=Tensor[(12, 15, 12), float32] */;
  %554 = cast(%var_2734, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
  %555 = cast(%var_2735, dtype="float32") /* ty=Tensor[(84), float32] */;
  %556 = cast(meta[relay.Constant][38] /* ty=Tensor[(2340), int16] */, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %557 = cast(meta[relay.Constant][39] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %558 = cast(meta[relay.Constant][40] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
  %559 = reshape(%554, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), int64] */;
  %560 = reshape(%555, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %561 = reshape(%556, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %562 = reshape(%557, newshape=[]) /* ty=int16 */;
  %563 = reshape(%558, newshape=[12, 36]) /* ty=Tensor[(12, 36), int64] */;
  %564 = @func_1923(%559, %560, %561, %562, %563) /* ty=(Tensor[(5, 7, 6), int64], Tensor[(84), float32], Tensor[(15, 12, 13), bool], Tensor[(12), uint64], int16, Tensor[(90), int16], Tensor[(12, 36), int64]) */;
  %565 = divide(%551, %552) /* ty=Tensor[(12, 15, 12), float32] */;
  %566 = log(%553) /* ty=Tensor[(12, 15, 12), float32] */;
  %567 = %564.3;
  (%565, %566, %567, %var_2734, %var_2735, meta[relay.Constant][38] /* ty=Tensor[(2340), int16] */, meta[relay.Constant][39] /* ty=int16 */, meta[relay.Constant][40] /* ty=Tensor[(432), int64] */)
}

def @func_4323() -> (Tensor[(2340), int16],) {
  %568 = @func_3341() /* ty=(Tensor[(2340), int16],) */;
  %569 = %568.0;
  (%569,)
}

def @func_598(%var_542: uint64, %var_543: Tensor[(6, 2, 1), uint64], %var_562: Tensor[(12, 36), int64]) -> (Tensor[(6, 2, 1), uint64], Tensor[(13, 2, 8), float32], Tensor[(208), float32], Tensor[(13, 2, 8), float32], Tensor[(12, 36), bool]) {
  %570 = cast(%var_542, dtype="uint64") /* ty=uint64 */;
  %571 = cast(%var_543, dtype="uint64") /* ty=Tensor[(6, 2, 1), uint64] */;
  %572 = cast(meta[relay.Constant][41] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %573 = reshape(%572, newshape=[13, 2, 8]) /* ty=Tensor[(13, 2, 8), float32] */;
  %574 = @func_444(%573) /* ty=Tensor[(13, 2, 8), float32] */;
  %575 = cast(%574, dtype="float32") /* ty=Tensor[(13, 2, 8), float32] */;
  %576 = reshape(%575, newshape=[13, 2, 8]) /* ty=Tensor[(13, 2, 8), float32] */;
  %577 = cast(%var_562, dtype="float64") /* ty=Tensor[(12, 36), float64] */;
  %578 = sinh(%577) /* ty=Tensor[(12, 36), float64] */;
  %579 = cast(%var_562, dtype="int64") /* ty=Tensor[(12, 36), int64] */;
  %580 = cast(%var_562, dtype="int64") /* ty=Tensor[(12, 36), int64] */;
  %581 = reshape(%579, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
  %582 = reshape(%580, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
  %583 = @func_239(%581, %582) /* ty=(Tensor[(6, 6, 12), int64], Tensor[(6, 6, 12), int16], Tensor[(6, 6, 12), float32]) */;
  %584 = %583.2;
  %585 = cast(%584, dtype="bool") /* ty=Tensor[(6, 6, 12), bool] */;
  %586 = shape_of(%578, dtype="int32") /* ty=Tensor[(2), int32] */;
  %587 = cast(%578, dtype="bool") /* ty=Tensor[(12, 36), bool] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %589 = multiply(%570, %571) /* ty=Tensor[(6, 2, 1), uint64] */;
  %590 = @func_444(%576) /* ty=Tensor[(13, 2, 8), float32] */;
  %591 = greater_equal(%587, %588) /* ty=Tensor[(12, 36), bool] */;
  (%589, %574, meta[relay.Constant][41] /* ty=Tensor[(208), float32] */, %590, %591)
}

def @func_3809() -> Tensor[(12, ?, 12), float32] {
  %592 = @func_3627() /* ty=(Tensor[(2340), uint16], Tensor[(12, ?, 12), bool], Tensor[(144, 1), int8], Tensor[(2340), float64]) */;
  %593 = %592.1;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(12, ?, 12), float32] */;
  tan(%594) /* ty=Tensor[(12, ?, 12), float32] */
}

def @func_4338(%var_4328: Tensor[(9, 10, 2), uint8], %var_4329: Tensor[(9, 10, 2), uint8]) -> (Tensor[(9, 10, 2), uint8], Tensor[(12, 15, 12), float64]) {
  %595 = cast(%var_4329, dtype="uint8") /* ty=Tensor[(9, 10, 2), uint8] */;
  %596 = shape_of(%var_4328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%var_4328, dtype="uint8") /* ty=Tensor[(9, 10, 2), uint8] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %599 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %600 = minimum(%597, %598) /* ty=Tensor[(9, 10, 2), uint8] */;
  %601 = %599.0;
  (%600, %601)
}

def @func_5736(%var_5697: Tensor[(60, 12), float32], %var_5699: Tensor[(90), int16], %var_5702: Tensor[(4, 108), int64], %var_5721: Tensor[(60, 12), float32]) -> (Tensor[(15, 12, 13), float32], Tensor[(1920), int64], Tensor[(1920), int64], Tensor[(90), int16], Tensor[(4, 108), int64], Tensor[(60, 12), bool], Tensor[(6, 6, 12), float32]) {
  %602 = @func_3680() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) */;
  %603 = cast(%var_5697, dtype="float32") /* ty=Tensor[(60, 12), float32] */;
  %604 = cast(meta[relay.Constant][42] /* ty=Tensor[(1920), int64] */, dtype="int64") /* ty=Tensor[(1920), int64] */;
  %605 = cast(%var_5699, dtype="int16") /* ty=Tensor[(90), int16] */;
  %606 = reshape(%603, newshape=[12, 6, 10]) /* ty=Tensor[(12, 6, 10), float32] */;
  %607 = reshape(%604, newshape=[1920]) /* ty=Tensor[(1920), int64] */;
  %608 = reshape(%605, newshape=[90, 1]) /* ty=Tensor[(90, 1), int16] */;
  %609 = @func_5047(%606, %607, %608) /* ty=(Tensor[(12, 6, 10), uint16], Tensor[(16, 15, 8), float64], Tensor[(1920), int64], int16, Tensor[(648), float64], Tensor[(1, 84), float32], Tensor[(432), int64], Tensor[(90, 1), int16]) */;
  %610 = cast(%var_5721, dtype="bool") /* ty=Tensor[(60, 12), bool] */;
  %611 = shape_of(%var_5697, dtype="int32") /* ty=Tensor[(2), int32] */;
  %612 = cast(%var_5697, dtype="bool") /* ty=Tensor[(60, 12), bool] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %614 = not_equal(%612, %613) /* ty=Tensor[(60, 12), bool] */;
  %615 = cast(%var_5721, dtype="bool") /* ty=Tensor[(60, 12), bool] */;
  %616 = shape_of(%614, dtype="int32") /* ty=Tensor[(2), int32] */;
  %617 = cast(%614, dtype="bool") /* ty=Tensor[(60, 12), bool] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %619 = cast(%var_5702, dtype="int64") /* ty=Tensor[(4, 108), int64] */;
  %620 = cast(%var_5702, dtype="int64") /* ty=Tensor[(4, 108), int64] */;
  %621 = reshape(%619, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
  %622 = reshape(%620, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
  %623 = @func_239(%621, %622) /* ty=(Tensor[(6, 6, 12), int64], Tensor[(6, 6, 12), int16], Tensor[(6, 6, 12), float32]) */;
  %624 = %623.1;
  %625 = cast(%624, dtype="float32") /* ty=Tensor[(6, 6, 12), float32] */;
  %626 = %602.0;
  %627 = %609.2;
  %628 = greater_equal(%617, %618) /* ty=Tensor[(60, 12), bool] */;
  %629 = rsqrt(%625) /* ty=Tensor[(6, 6, 12), float32] */;
  (%626, %627, meta[relay.Constant][42] /* ty=Tensor[(1920), int64] */, %var_5699, %var_5702, %628, %629)
}

def @main(%var_6782: Tensor[(1, 9, 6), float32]) -> (Tensor[(1, 9, 6), float32],) {
  %630 = cast(0.803689f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %631 = cast(%var_6782, dtype="float32") /* ty=Tensor[(1, 9, 6), float32] */;
  %632 = floor_mod(%630, %631) /* ty=Tensor[(1, 9, 6), float32] */;
  (%632,)
}

def @func_6475() -> (Tensor[(2340), int16],) {
  %633 = @func_4974() /* ty=(Tensor[(2340), int16], Tensor[(12, 15, 12), float64]) */;
  %634 = %633.0;
  (%634,)
}

def @func_5292() -> Tensor[(7, 14, 3), float64] {
  %635 = @func_3933() /* ty=Tensor[(7, 14, 3), bool] */;
  %636 = cast(%635, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  asinh(%636) /* ty=Tensor[(7, 14, 3), float64] */
}

def @func_3680() -> (Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) {
  %637 = @func_3420() /* ty=(Tensor[(2340), int16], Tensor[(15, 12, 13), float32]) */;
  %638 = cast(meta[relay.Constant][43] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %639 = reshape(%638, newshape=[13, 2, 8]) /* ty=Tensor[(13, 2, 8), float32] */;
  %640 = %637.1;
  %641 = @func_444(%639) /* ty=Tensor[(13, 2, 8), float32] */;
  (%640, %641, meta[relay.Constant][43] /* ty=Tensor[(208), float32] */)
}

def @func_6010(%var_6000: Tensor[(7, 14, 3), bool]) -> (Tensor[(7, 14, 3), float32], Tensor[(7, 14, 3), uint16]) {
  %642 = @func_3406() /* ty=Tensor[(7, 14, 3), bool] */;
  %643 = cast(%var_6000, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %644 = shape_of(%642, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(%642, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %647 = cast(%642, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %648 = rsqrt(%647) /* ty=Tensor[(7, 14, 3), float64] */;
  %649 = cast(%642, dtype="uint16") /* ty=Tensor[(7, 14, 3), uint16] */;
  %650 = shape_of(%648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %651 = cast(%648, dtype="uint16") /* ty=Tensor[(7, 14, 3), uint16] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %653 = floor_mod(%645, %646) /* ty=Tensor[(7, 14, 3), float32] */;
  %654 = multiply(%651, %652) /* ty=Tensor[(7, 14, 3), uint16] */;
  (%653, %654)
}

def @func_5331() -> (Tensor[(2340), float64], Tensor[(6, 6, 12), int64], Tensor[(432), int64]) {
  %655 = @func_3627() /* ty=(Tensor[(2340), uint16], Tensor[(12, ?, 12), bool], Tensor[(144, 1), int8], Tensor[(2340), float64]) */;
  %656 = cast(meta[relay.Constant][44] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
  %657 = cast(meta[relay.Constant][44] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
  %658 = reshape(%656, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
  %659 = reshape(%657, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
  %660 = @func_239(%658, %659) /* ty=(Tensor[(6, 6, 12), int64], Tensor[(6, 6, 12), int16], Tensor[(6, 6, 12), float32]) */;
  %661 = %655.3;
  %662 = %660.0;
  (%661, %662, meta[relay.Constant][44] /* ty=Tensor[(432), int64] */)
}

def @func_6164() -> Tensor[(15, 12, 13), float64] {
  %663 = @func_4879() /* ty=(Tensor[(15, 12, 13), float64],) */;
  %663.0
}

def @func_1516(%var_1495: Tensor[(7, 11, 15), float32], %var_1505: Tensor[(7, 11, 15), float32]) -> (Tensor[(12, ?, 12), bool], Tensor[(144), int8], Tensor[(7, 11, 15), int64], Tensor[(7, 11, 15), bool]) {
  %664 = cast(meta[relay.Constant][45] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
  %665 = cast(meta[relay.Constant][45] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
  %666 = reshape(%664, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
  %667 = reshape(%665, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
  %668 = @func_1267(%666, %667) /* ty=(Tensor[(12, ?, 12), bool],) */;
  %669 = cast(%var_1495, dtype="float32") /* ty=Tensor[(7, 11, 15), float32] */;
  %670 = exp(%669) /* ty=Tensor[(7, 11, 15), float32] */;
  %671 = cast(%var_1505, dtype="int64") /* ty=Tensor[(7, 11, 15), int64] */;
  %672 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%670, dtype="int64") /* ty=Tensor[(7, 11, 15), int64] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %675 = cast(%var_1505, dtype="bool") /* ty=Tensor[(7, 11, 15), bool] */;
  %676 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%670, dtype="bool") /* ty=Tensor[(7, 11, 15), bool] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %679 = %668.0;
  %680 = right_shift(%673, %674) /* ty=Tensor[(7, 11, 15), int64] */;
  %681 = less(%677, %678) /* ty=Tensor[(7, 11, 15), bool] */;
  (%679, meta[relay.Constant][45] /* ty=Tensor[(144), int8] */, %680, %681)
}

def @func_5580(%var_5540: Tensor[(13, 2, 8), float32]) -> (Tensor[(13, 2, 8), bool], Tensor[(2340), float32]) {
  %682 = @func_3680() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) */;
  %683 = %682.1;
  %684 = cast(%var_5540, dtype="bool") /* ty=Tensor[(13, 2, 8), bool] */;
  %685 = shape_of(%683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(%683, dtype="bool") /* ty=Tensor[(13, 2, 8), bool] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %688 = @func_4177() /* ty=Tensor[(2340), float64] */;
  %689 = cast(meta[relay.Constant][46] /* ty=Tensor[(2340), float64] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(1), int32] */;
  %691 = cast(%688, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?), float32] */;
  %693 = logical_or(%686, %687) /* ty=Tensor[(13, 2, 8), bool] */;
  %694 = maximum(%691, %692) /* ty=Tensor[(2340), float32] */;
  (%693, %694)
}

def @func_4316() -> Tensor[(2340), float64] {
  @func_4177() /* ty=Tensor[(2340), float64] */
}

def @func_6152() -> (Tensor[(12, ?, 12), float32],) {
  %695 = @func_3809() /* ty=Tensor[(12, ?, 12), float32] */;
  (%695,)
}

def @func_143(%var_78: Tensor[(10, 5, 13), float32]) -> (Tensor[(10, 5, 13), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), int16]) {
  %696 = cast(%var_78, dtype="float32") /* ty=Tensor[(10, 5, 13), float32] */;
  %697 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(10, 5, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(meta[relay.Constant][47] /* ty=Tensor[(10, 5, 13), float32] */, dtype="float32") /* ty=Tensor[(10, 5, 13), float32] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %700 = cast(meta[relay.Constant][48] /* ty=Tensor[(294), bool] */, dtype="bool") /* ty=Tensor[(294), bool] */;
  %701 = reshape(%700, newshape=[7, 14, 3]) /* ty=Tensor[(7, 14, 3), bool] */;
  %702 = @func_57(%701) /* ty=Tensor[(7, 14, 3), bool] */;
  %703 = cast(%702, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
  %704 = reshape(%703, newshape=[7, 14, 3]) /* ty=Tensor[(7, 14, 3), bool] */;
  %705 = cast(meta[relay.Constant][48] /* ty=Tensor[(294), bool] */, dtype="bool") /* ty=Tensor[(294), bool] */;
  %706 = reshape(%705, newshape=[7, 14, 3]) /* ty=Tensor[(7, 14, 3), bool] */;
  %707 = @func_57(%706) /* ty=Tensor[(7, 14, 3), bool] */;
  %708 = cast(%707, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %709 = sqrt(%708) /* ty=Tensor[(7, 14, 3), float32] */;
  %710 = cast(meta[relay.Constant][48] /* ty=Tensor[(294), bool] */, dtype="int16") /* ty=Tensor[(294), int16] */;
  %711 = shape_of(%709, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%709, dtype="int16") /* ty=Tensor[(7, 14, 3), int16] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %714 = floor_divide(%698, %699) /* ty=Tensor[(10, 5, 13), float32] */;
  %715 = @func_57(%704) /* ty=Tensor[(7, 14, 3), bool] */;
  %716 = subtract(%712, %713) /* ty=Tensor[(7, 14, 3), int16] */;
  (%714, %702, %715, %716)
}

def @func_4073(%var_4028: Tensor[(9, 14, 15), bool], %var_4046: Tensor[(9, 14, 15), bool], %var_4054: Tensor[(9, 14, 15), bool]) -> (Tensor[(84), float32], Tensor[(2340), int16], Tensor[(9, 14, 15), float64], Tensor[(9, 14, 15), uint64], Tensor[(9, 14, 15), float32]) {
  %717 = cast(meta[relay.Constant][49] /* ty=Tensor[(2340), int16] */, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %718 = reshape(%717, newshape=[2340, 1]) /* ty=Tensor[(2340, 1), int16] */;
  %719 = @func_3262(%718) /* ty=(Tensor[(12, 15, 12), float32], Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(84), float32], Tensor[(2340, 1), int16]) */;
  %720 = cast(%var_4046, dtype="float64") /* ty=Tensor[(9, 14, 15), float64] */;
  %721 = shape_of(%var_4028, dtype="int32") /* ty=Tensor[(3), int32] */;
  %722 = cast(%var_4028, dtype="float64") /* ty=Tensor[(9, 14, 15), float64] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %724 = cast(%var_4054, dtype="uint64") /* ty=Tensor[(9, 14, 15), uint64] */;
  %725 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(9, 14, 15), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %726 = cast(meta[relay.Constant][50] /* ty=Tensor[(9, 14, 15), bool] */, dtype="uint64") /* ty=Tensor[(9, 14, 15), uint64] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %728 = cast(meta[relay.Constant][50] /* ty=Tensor[(9, 14, 15), bool] */, dtype="bool") /* ty=Tensor[(9, 14, 15), bool] */;
  %729 = shape_of(%var_4028, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%var_4028, dtype="bool") /* ty=Tensor[(9, 14, 15), bool] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %732 = logical_and(%730, %731) /* ty=Tensor[(9, 14, 15), bool] */;
  %733 = cast(%732, dtype="float32") /* ty=Tensor[(9, 14, 15), float32] */;
  %734 = %719.3;
  %735 = floor_mod(%722, %723) /* ty=Tensor[(9, 14, 15), float64] */;
  %736 = bitwise_and(%726, %727) /* ty=Tensor[(9, 14, 15), uint64] */;
  %737 = erf(%733) /* ty=Tensor[(9, 14, 15), float32] */;
  (%734, meta[relay.Constant][49] /* ty=Tensor[(2340), int16] */, %735, %736, %737)
}

def @func_3170() -> Tensor[(2340), float64] {
  %738 = @func_2981() /* ty=Tensor[(2340), int16] */;
  %739 = cast(%738, dtype="float64") /* ty=Tensor[(2340), float64] */;
  asin(%739) /* ty=Tensor[(2340), float64] */
}

def @func_3627() -> (Tensor[(2340), uint16], Tensor[(12, ?, 12), bool], Tensor[(144, 1), int8], Tensor[(2340), float64]) {
  %740 = @func_3341() /* ty=(Tensor[(2340), int16],) */;
  %741 = %740.0;
  %742 = cast(meta[relay.Constant][51] /* ty=Tensor[(2340), int16] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %743 = shape_of(%741, dtype="int32") /* ty=Tensor[(1), int32] */;
  %744 = cast(%741, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?), bool] */;
  %746 = greater_equal(%744, %745) /* ty=Tensor[(2340), bool] */;
  %747 = cast(%746, dtype="uint16") /* ty=Tensor[(2340), uint16] */;
  %748 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(2340), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %749 = cast(meta[relay.Constant][51] /* ty=Tensor[(2340), int16] */, dtype="uint16") /* ty=Tensor[(2340), uint16] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %751 = cast(meta[relay.Constant][52] /* ty=Tensor[(144, 1), int8] */, dtype="int8") /* ty=Tensor[(144, 1), int8] */;
  %752 = reshape(%751, newshape=[2, 72]) /* ty=Tensor[(2, 72), int8] */;
  %753 = @func_2764(%752) /* ty=(Tensor[(2340), int16], Tensor[(12, ?, 12), bool], Tensor[(2, 72), int8]) */;
  %754 = cast(%741, dtype="float64") /* ty=Tensor[(2340), float64] */;
  %755 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(2340), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %756 = cast(meta[relay.Constant][51] /* ty=Tensor[(2340), int16] */, dtype="float64") /* ty=Tensor[(2340), float64] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?), float64] */;
  %758 = floor_divide(%756, %757) /* ty=Tensor[(2340), float64] */;
  %759 = cast(%746, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %760 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(2340), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %761 = cast(meta[relay.Constant][51] /* ty=Tensor[(2340), int16] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?), bool] */;
  %763 = equal(%761, %762) /* ty=Tensor[(2340), bool] */;
  %764 = cast(%763, dtype="float64") /* ty=Tensor[(2340), float64] */;
  %765 = shape_of(%758, dtype="int32") /* ty=Tensor[(1), int32] */;
  %766 = cast(%758, dtype="float64") /* ty=Tensor[(2340), float64] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?), float64] */;
  %768 = add(%749, %750) /* ty=Tensor[(2340), uint16] */;
  %769 = %753.1;
  %770 = mod(%766, %767) /* ty=Tensor[(2340), float64] */;
  (%768, %769, meta[relay.Constant][52] /* ty=Tensor[(144, 1), int8] */, %770)
}

def @func_5272(%var_5258: Tensor[(2340), int16]) -> (Tensor[(2340), int16], Tensor[(2340), int32]) {
  %771 = @func_3341() /* ty=(Tensor[(2340), int16],) */;
  %772 = %771.0;
  %773 = cast(%var_5258, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %774 = shape_of(%772, dtype="int32") /* ty=Tensor[(1), int32] */;
  %775 = cast(%772, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?), int16] */;
  %777 = cast(%772, dtype="int32") /* ty=Tensor[(2340), int32] */;
  %778 = shape_of(%var_5258, dtype="int32") /* ty=Tensor[(1), int32] */;
  %779 = cast(%var_5258, dtype="int32") /* ty=Tensor[(2340), int32] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?), int32] */;
  %781 = bitwise_and(%775, %776) /* ty=Tensor[(2340), int16] */;
  %782 = bitwise_xor(%779, %780) /* ty=Tensor[(2340), int32] */;
  (%781, %782)
}

def @func_5507(%var_5486: Tensor[(144), int8], %var_5490: Tensor[(15, 12, 13), float64]) -> (Tensor[(15, 12, 13), float32], Tensor[(12, ?, 12), bool]) {
  %783 = @func_4879() /* ty=(Tensor[(15, 12, 13), float64],) */;
  %784 = %783.0;
  %785 = cast(%var_5490, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
  %786 = shape_of(%784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %787 = cast(%784, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %789 = cast(%var_5486, dtype="int8") /* ty=Tensor[(144), int8] */;
  %790 = cast(%var_5486, dtype="int8") /* ty=Tensor[(144), int8] */;
  %791 = reshape(%789, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
  %792 = reshape(%790, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
  %793 = @func_1267(%791, %792) /* ty=(Tensor[(12, ?, 12), bool],) */;
  %794 = %793.0;
  %795 = cast(%var_5486, dtype="bool") /* ty=Tensor[(144), bool] */;
  %796 = shape_of(%794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(%794, dtype="bool") /* ty=Tensor[(12, ?, 12), bool] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %799 = divide(%787, %788) /* ty=Tensor[(15, 12, 13), float32] */;
  %800 = not_equal(%797, %798) /* ty=Tensor[(12, ?, 12), bool] */;
  (%799, %800)
}

def @func_4022(%var_4004: Tensor[(16, 15, 8), int64], %var_4005: Tensor[(16, 15, 8), int64], %var_4009: Tensor[(16, 15, 8), bool]) -> (Tensor[(16, 15, 8), float64],) {
  %801 = cast(%var_4005, dtype="bool") /* ty=Tensor[(16, 15, 8), bool] */;
  %802 = shape_of(%var_4004, dtype="int32") /* ty=Tensor[(3), int32] */;
  %803 = cast(%var_4004, dtype="bool") /* ty=Tensor[(16, 15, 8), bool] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %805 = greater_equal(%803, %804) /* ty=Tensor[(16, 15, 8), bool] */;
  %806 = cast(%var_4009, dtype="float64") /* ty=Tensor[(16, 15, 8), float64] */;
  %807 = shape_of(%805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(%805, dtype="float64") /* ty=Tensor[(16, 15, 8), float64] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %810 = floor_mod(%808, %809) /* ty=Tensor[(16, 15, 8), float64] */;
  (%810,)
}

def @func_5872() -> (Tensor[(144, 1), int8],) {
  %811 = @func_3627() /* ty=(Tensor[(2340), uint16], Tensor[(12, ?, 12), bool], Tensor[(144, 1), int8], Tensor[(2340), float64]) */;
  %812 = %811.2;
  (%812,)
}

def @func_3355() -> Tensor[(15, 12, 13), bool] {
  %813 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %813.1
}

def @func_2895() -> (Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) {
  %814 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %815 = %814.0;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(12, 15, 12), float64] */;
  %817 = cast(meta[relay.Constant][53] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
  %818 = reshape(%817, newshape=[10, 5, 13]) /* ty=Tensor[(10, 5, 13), float32] */;
  %819 = @func_143(%818) /* ty=(Tensor[(10, 5, 13), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), int16]) */;
  %820 = cast(meta[relay.Constant][54] /* ty=Tensor[(650), float32] */, dtype="uint64") /* ty=Tensor[(650), uint64] */;
  %821 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(650), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %822 = cast(meta[relay.Constant][53] /* ty=Tensor[(650), float32] */, dtype="uint64") /* ty=Tensor[(650), uint64] */;
  %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %824 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %825 = cosh(%816) /* ty=Tensor[(12, 15, 12), float64] */;
  %826 = %819.2;
  %827 = maximum(%822, %823) /* ty=Tensor[(650), uint64] */;
  %828 = %824.2;
  (%825, %826, %827, %828)
}

def @func_3215() -> Tensor[(12, 15, 12), float64] {
  %829 = @func_3198() /* ty=(Tensor[(12, 15, 12), float64],) */;
  %829.0
}

def @func_444(%var_430: Tensor[(13, 2, 8), float32]) -> Tensor[(13, 2, 8), float32] {
  %830 = cast(%var_430, dtype="float32") /* ty=Tensor[(13, 2, 8), float32] */;
  atanh(%830) /* ty=Tensor[(13, 2, 8), float32] */
}

def @func_2518(%var_2510: Tensor[(13, 15, 1), float32]) -> (Tensor[(13, 15, 1), float32], Tensor[(12, ?, 12), bool], Tensor[(144), int8]) {
  %831 = cast(%var_2510, dtype="float32") /* ty=Tensor[(13, 15, 1), float32] */;
  %832 = cast(meta[relay.Constant][55] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
  %833 = cast(meta[relay.Constant][55] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
  %834 = reshape(%832, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
  %835 = reshape(%833, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
  %836 = @func_1267(%834, %835) /* ty=(Tensor[(12, ?, 12), bool],) */;
  %837 = rsqrt(%831) /* ty=Tensor[(13, 15, 1), float32] */;
  %838 = %836.0;
  (%837, %838, meta[relay.Constant][55] /* ty=Tensor[(144), int8] */)
}

def @func_2134(%var_2124: Tensor[(6, 7, 8), uint8], %var_2125: Tensor[(6, 7, 8), uint8], %var_2131: Tensor[(84), float32], %var_2132: Tensor[(2340), int16]) -> (Tensor[(6, 7, 8), uint8], Tensor[(15, 12, 13), bool], Tensor[(84), float32], Tensor[(2340), int16]) {
  %839 = cast(%var_2125, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
  %840 = shape_of(%var_2124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %841 = cast(%var_2124, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %843 = cast(%var_2131, dtype="float32") /* ty=Tensor[(84), float32] */;
  %844 = cast(%var_2132, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %845 = reshape(%843, newshape=[14, 1, 6]) /* ty=Tensor[(14, 1, 6), float32] */;
  %846 = reshape(%844, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %847 = @func_1644(%845, %846) /* ty=(Tensor[(14, 1, 6), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %848 = bitwise_xor(%841, %842) /* ty=Tensor[(6, 7, 8), uint8] */;
  %849 = %847.1;
  (%848, %849, %var_2131, %var_2132)
}

def @func_3787() -> Tensor[(2340), float64] {
  %850 = @func_3341() /* ty=(Tensor[(2340), int16],) */;
  %851 = %850.0;
  %852 = cast(%851, dtype="float64") /* ty=Tensor[(2340), float64] */;
  sin(%852) /* ty=Tensor[(2340), float64] */
}

def @func_3198() -> (Tensor[(12, 15, 12), float64],) {
  %853 = @func_2614() /* ty=Tensor[(12, 15, 12), float64] */;
  (%853,)
}

def @func_4618(%var_4600: Tensor[(294), float32]) -> (Tensor[(15, 12, 13), float64], Tensor[(10, 5, 13), float32], Tensor[(294), float32], Tensor[(13, 2, 8), float32], uint64, Tensor[(3, 4), uint64], Tensor[(432), int64]) {
  %854 = cast(meta[relay.Constant][56] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %855 = reshape(%854, newshape=[7, 14, 3]) /* ty=Tensor[(7, 14, 3), float32] */;
  %856 = @func_4305(%855) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(15, 12, 13), float32], Tensor[(10, 5, 13), float32], Tensor[(650), float32]) */;
  %857 = cast(%var_4600, dtype="float32") /* ty=Tensor[(294), float32] */;
  %858 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(294), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %859 = cast(meta[relay.Constant][56] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?), float32] */;
  %861 = cast(meta[relay.Constant][57] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %862 = cast(meta[relay.Constant][58] /* ty=Tensor[(3, 4), uint64] */, dtype="uint64") /* ty=Tensor[(3, 4), uint64] */;
  %863 = cast(meta[relay.Constant][59] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
  %864 = reshape(%861, newshape=[]) /* ty=uint64 */;
  %865 = reshape(%862, newshape=[6, 2, 1]) /* ty=Tensor[(6, 2, 1), uint64] */;
  %866 = reshape(%863, newshape=[12, 36]) /* ty=Tensor[(12, 36), int64] */;
  %867 = @func_598(%864, %865, %866) /* ty=(Tensor[(6, 2, 1), uint64], Tensor[(13, 2, 8), float32], Tensor[(208), float32], Tensor[(13, 2, 8), float32], Tensor[(12, 36), bool]) */;
  %868 = @func_4097() /* ty=Tensor[(15, 12, 13), float64] */;
  %869 = %856.2;
  %870 = multiply(%859, %860) /* ty=Tensor[(294), float32] */;
  %871 = %867.1;
  (%868, %869, %870, %871, meta[relay.Constant][57] /* ty=uint64 */, meta[relay.Constant][58] /* ty=Tensor[(3, 4), uint64] */, meta[relay.Constant][59] /* ty=Tensor[(432), int64] */)
}

def @func_2609() -> (Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) {
  %872 = cast(meta[relay.Constant][60] /* ty=Tensor[(12, 15, 12), float64] */, dtype="float64") /* ty=Tensor[(12, 15, 12), float64] */;
  %873 = cast(meta[relay.Constant][61] /* ty=Tensor[(2340), int16] */, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %874 = reshape(%873, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), int16] */;
  %875 = @func_894(%874) /* ty=(Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), float32]) */;
  %876 = acosh(%872) /* ty=Tensor[(12, 15, 12), float64] */;
  %877 = %875.0;
  (%876, %877, meta[relay.Constant][61] /* ty=Tensor[(2340), int16] */)
}

def @func_2981() -> Tensor[(2340), int16] {
  %878 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
  %878.3
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6364(%var_6363: Tensor[(2340), float64]) -> (Tensor[(2340), int32], Tensor[(144, 1), int8], Tensor[(2340), bool], Tensor[(13, 2, 8), float32]) {
  %13 = fn (%var_6351: Tensor[(2340), float64]) -> (Tensor[(2340), int32], Tensor[(144, 1), int8], Tensor[(2340), bool], Tensor[(13, 2, 8), float32]) {
    %0 = @func_3924() /* ty=(Tensor[(2340), int32],) */;
    %1 = @func_5872() /* ty=(Tensor[(144, 1), int8],) */;
    %2 = @func_5170() /* ty=(Tensor[(2340), float64], Tensor[(2340), int16]) */;
    %3 = %2.0;
    %4 = cast(%var_6351, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %5 = shape_of(%3, dtype="int32") /* ty=Tensor[(1), int32] */;
    %6 = cast(%3, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?), bool] */;
    %8 = @func_3680() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) */;
    %9 = %0.0;
    %10 = %1.0;
    %11 = less_equal(%6, %7) /* ty=Tensor[(2340), bool] */;
    %12 = %8.1;
    (%9, %10, %11, %12)
  };
  %13(%var_6363) /* ty=(Tensor[(2340), int32], Tensor[(144, 1), int8], Tensor[(2340), bool], Tensor[(13, 2, 8), float32]) */
}

def @func_6294(%var_6279: Tensor[(2, 10, 10), float32]) -> (Tensor[(2, 10, 10), bool], Tensor[(12, ?, 12), float32], Tensor[(7, 14, 3), bool]) {
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 10, 10), float32] */, dtype="bool") /* ty=Tensor[(2, 10, 10), bool] */;
  %15 = shape_of(%var_6279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(%var_6279, dtype="bool") /* ty=Tensor[(2, 10, 10), bool] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %18 = @func_6152() /* ty=(Tensor[(12, ?, 12), float32],) */;
  %19 = less(%16, %17) /* ty=Tensor[(2, 10, 10), bool] */;
  %20 = %18.0;
  %21 = @func_3406() /* ty=Tensor[(7, 14, 3), bool] */;
  (%19, %20, %21)
}

def @func_2666(%var_2664: Tensor[(2, 168), uint8]) -> (Tensor[(12, 15, 12), bool], Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), bool], Tensor[(2, 168), uint8], Tensor[(84), float32]) {
  @func_2663(%var_2664) /* ty=(Tensor[(12, 15, 12), bool], Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), bool], Tensor[(2, 168), uint8], Tensor[(84), float32]) */
}

def @func_6184() -> (Tensor[(12, 15, 12), float64],) {
  %22 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
  %23 = %22.0;
  (%23,)
}

def @func_785(%var_784: Tensor[(7, 9, 10), float32]) -> (Tensor[(7, 9, 10), float32],) {
  %26 = fn (%var_780: Tensor[(7, 9, 10), float32]) -> (Tensor[(7, 9, 10), float32],) {
    %24 = cast(%var_780, dtype="float32") /* ty=Tensor[(7, 9, 10), float32] */;
    %25 = erf(%24) /* ty=Tensor[(7, 9, 10), float32] */;
    (%25,)
  };
  %26(%var_784) /* ty=(Tensor[(7, 9, 10), float32],) */
}

def @func_6757() -> (Tensor[(12, 15, 12), float64],) {
  %27 = @func_3742() /* ty=(Tensor[(12, 15, 12), float64],) */;
  %28 = %27.0;
  %29 = cast(%28, dtype="float64") /* ty=Tensor[(12, 15, 12), float64] */;
  %30 = log2(%29) /* ty=Tensor[(12, 15, 12), float64] */;
  (%30,)
}

def @func_3265(%var_3263: Tensor[(2340, 1), int16]) -> (Tensor[(12, 15, 12), float32], Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(84), float32], Tensor[(2340, 1), int16]) {
  @func_3262(%var_3263) /* ty=(Tensor[(12, 15, 12), float32], Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(84), float32], Tensor[(2340, 1), int16]) */
}

def @func_5294() -> Tensor[(7, 14, 3), float64] {
  @func_5292() /* ty=Tensor[(7, 14, 3), float64] */
}

def @func_4976() -> (Tensor[(2340), int16], Tensor[(12, 15, 12), float64]) {
  @func_4974() /* ty=(Tensor[(2340), int16], Tensor[(12, 15, 12), float64]) */
}

def @func_5206() -> Tensor[(12, ?, 12), float32] {
  @func_3809() /* ty=Tensor[(12, ?, 12), float32] */
}

def @func_3262(%var_3251: Tensor[(2340, 1), int16]) -> (Tensor[(12, 15, 12), float32], Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(84), float32], Tensor[(2340, 1), int16]) {
  %31 = @func_3198() /* ty=(Tensor[(12, 15, 12), float64],) */;
  %32 = %31.0;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(12, 15, 12), float32] */;
  %34 = cast(meta[relay.Constant][1] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %35 = cast(meta[relay.Constant][1] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %36 = cast(meta[relay.Constant][2] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %37 = cast(%var_3251, dtype="int16") /* ty=Tensor[(2340, 1), int16] */;
  %38 = reshape(%34, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %39 = reshape(%35, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %40 = reshape(%36, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %41 = reshape(%37, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %42 = @func_2134(%38, %39, %40, %41) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(15, 12, 13), bool], Tensor[(84), float32], Tensor[(2340), int16]) */;
  %43 = tan(%33) /* ty=Tensor[(12, 15, 12), float32] */;
  %44 = %42.0;
  (%43, %44, meta[relay.Constant][1] /* ty=Tensor[(336), uint8] */, meta[relay.Constant][2] /* ty=Tensor[(84), float32] */, %var_3251)
}

def @func_6476() -> (Tensor[(2340), int16],) {
  %47 = fn () -> (Tensor[(2340), int16],) {
    %45 = @func_4974() /* ty=(Tensor[(2340), int16], Tensor[(12, 15, 12), float64]) */;
    %46 = %45.0;
    (%46,)
  };
  %47() /* ty=(Tensor[(2340), int16],) */
}

def @func_5582(%var_5581: Tensor[(13, 2, 8), float32]) -> (Tensor[(13, 2, 8), bool], Tensor[(2340), float32]) {
  %61 = fn (%var_5540: Tensor[(13, 2, 8), float32]) -> (Tensor[(13, 2, 8), bool], Tensor[(2340), float32]) {
    %48 = @func_3680() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) */;
    %49 = %48.1;
    %50 = cast(%var_5540, dtype="bool") /* ty=Tensor[(13, 2, 8), bool] */;
    %51 = shape_of(%49, dtype="int32") /* ty=Tensor[(3), int32] */;
    %52 = cast(%49, dtype="bool") /* ty=Tensor[(13, 2, 8), bool] */;
    %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %54 = @func_4177() /* ty=Tensor[(2340), float64] */;
    %55 = cast(meta[relay.Constant][3] /* ty=Tensor[(2340), float64] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %56 = shape_of(%54, dtype="int32") /* ty=Tensor[(1), int32] */;
    %57 = cast(%54, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?), float32] */;
    %59 = logical_or(%52, %53) /* ty=Tensor[(13, 2, 8), bool] */;
    %60 = maximum(%57, %58) /* ty=Tensor[(2340), float32] */;
    (%59, %60)
  };
  %61(%var_5581) /* ty=(Tensor[(13, 2, 8), bool], Tensor[(2340), float32]) */
}

def @func_6225() -> Tensor[(2340), float64] {
  %62 = @func_5331() /* ty=(Tensor[(2340), float64], Tensor[(6, 6, 12), int64], Tensor[(432), int64]) */;
  %62.0
}

def @func_3141(%var_3137: Tensor[(2160), float64], %var_3138: int16, %var_3139: Tensor[(432), int64], %var_3140: Tensor[(105, 2), int64]) -> (Tensor[(2340), bool], Tensor[(12, 15, 12), bool], Tensor[(2160), float64], Tensor[(12), uint64], int16, Tensor[(1, 90), int16], Tensor[(432), int64], int16, Tensor[(105, 2), int64], Tensor[(84), float32], Tensor[(4, 3, 15), float32], Tensor[(180), float32], Tensor[(2340), float32]) {
  @func_3135(%var_3137, %var_3138, %var_3139, %var_3140) /* ty=(Tensor[(2340), bool], Tensor[(12, 15, 12), bool], Tensor[(2160), float64], Tensor[(12), uint64], int16, Tensor[(1, 90), int16], Tensor[(432), int64], int16, Tensor[(105, 2), int64], Tensor[(84), float32], Tensor[(4, 3, 15), float32], Tensor[(180), float32], Tensor[(2340), float32]) */
}

def @func_6165() -> Tensor[(15, 12, 13), float64] {
  %64 = fn () -> Tensor[(15, 12, 13), float64] {
    %63 = @func_4879() /* ty=(Tensor[(15, 12, 13), float64],) */;
    %63.0
  };
  %64() /* ty=Tensor[(15, 12, 13), float64] */
}

def @func_2611() -> (Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) {
  @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */
}

def @func_5819() -> (Tensor[(15, 12, 13), float32],) {
  @func_5817() /* ty=(Tensor[(15, 12, 13), float32],) */
}

def @func_6325(%var_6323: Tensor[(11, 3, 15), float32], %var_6324: Tensor[(11, 3, 15), float32]) -> Tensor[(11, 3, 15), float32] {
  @func_6321(%var_6323, %var_6324) /* ty=Tensor[(11, 3, 15), float32] */
}

def @func_3934() -> Tensor[(7, 14, 3), bool] {
  %66 = fn () -> Tensor[(7, 14, 3), bool] {
    %65 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
    %65.1
  };
  %66() /* ty=Tensor[(7, 14, 3), bool] */
}

def @func_3789() -> Tensor[(2340), float64] {
  @func_3787() /* ty=Tensor[(2340), float64] */
}

def @func_5292() -> Tensor[(7, 14, 3), float64] {
  %67 = @func_3933() /* ty=Tensor[(7, 14, 3), bool] */;
  %68 = cast(%67, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  asinh(%68) /* ty=Tensor[(7, 14, 3), float64] */
}

def @func_2521(%var_2519: Tensor[(13, 15, 1), float32]) -> (Tensor[(13, 15, 1), float32], Tensor[(12, ?, 12), bool], Tensor[(144), int8]) {
  @func_2518(%var_2519) /* ty=(Tensor[(13, 15, 1), float32], Tensor[(12, ?, 12), bool], Tensor[(144), int8]) */
}

def @func_5208() -> Tensor[(12, ?, 12), float32] {
  @func_5206() /* ty=Tensor[(12, ?, 12), float32] */
}

def @func_3198() -> (Tensor[(12, 15, 12), float64],) {
  %69 = @func_2614() /* ty=Tensor[(12, 15, 12), float64] */;
  (%69,)
}

def @func_4308(%var_4306: Tensor[(7, 14, 3), float32]) -> (Tensor[(7, 14, 3), float64], Tensor[(15, 12, 13), float32], Tensor[(10, 5, 13), float32], Tensor[(650), float32]) {
  @func_4305(%var_4306) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(15, 12, 13), float32], Tensor[(10, 5, 13), float32], Tensor[(650), float32]) */
}

def @func_4250() -> (Tensor[(12, 15, 12), float64],) {
  %72 = fn () -> (Tensor[(12, 15, 12), float64],) {
    %70 = @func_3742() /* ty=(Tensor[(12, 15, 12), float64],) */;
    %71 = %70.0;
    (%71,)
  };
  %72() /* ty=(Tensor[(12, 15, 12), float64],) */
}

def @func_5274(%var_5273: Tensor[(2340), int16]) -> (Tensor[(2340), int16], Tensor[(2340), int32]) {
  %85 = fn (%var_5258: Tensor[(2340), int16]) -> (Tensor[(2340), int16], Tensor[(2340), int32]) {
    %73 = @func_3341() /* ty=(Tensor[(2340), int16],) */;
    %74 = %73.0;
    %75 = cast(%var_5258, dtype="int16") /* ty=Tensor[(2340), int16] */;
    %76 = shape_of(%74, dtype="int32") /* ty=Tensor[(1), int32] */;
    %77 = cast(%74, dtype="int16") /* ty=Tensor[(2340), int16] */;
    %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?), int16] */;
    %79 = cast(%74, dtype="int32") /* ty=Tensor[(2340), int32] */;
    %80 = shape_of(%var_5258, dtype="int32") /* ty=Tensor[(1), int32] */;
    %81 = cast(%var_5258, dtype="int32") /* ty=Tensor[(2340), int32] */;
    %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?), int32] */;
    %83 = bitwise_and(%77, %78) /* ty=Tensor[(2340), int16] */;
    %84 = bitwise_xor(%81, %82) /* ty=Tensor[(2340), int32] */;
    (%83, %84)
  };
  %85(%var_5273) /* ty=(Tensor[(2340), int16], Tensor[(2340), int32]) */
}

def @func_5853(%var_5849: Tensor[(180), float32]) -> (Tensor[(2340), int32], Tensor[(2340), int16], Tensor[(2340), float64], Tensor[(4, 3, 15), float32], Tensor[(180), float32]) {
  %86 = @func_3924() /* ty=(Tensor[(2340), int32],) */;
  %87 = @func_3420() /* ty=(Tensor[(2340), int16], Tensor[(15, 12, 13), float32]) */;
  %88 = cast(%var_5849, dtype="float32") /* ty=Tensor[(180), float32] */;
  %89 = reshape(%88, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float32] */;
  %90 = %86.0;
  %91 = %87.0;
  %92 = @func_3787() /* ty=Tensor[(2340), float64] */;
  %93 = @func_2036(%89) /* ty=Tensor[(4, 3, 15), float32] */;
  (%90, %91, %92, %93, %var_5849)
}

def @func_3924() -> (Tensor[(2340), int32],) {
  %94 = @func_3627() /* ty=(Tensor[(2340), uint16], Tensor[(12, ?, 12), bool], Tensor[(144, 1), int8], Tensor[(2340), float64]) */;
  %95 = %94.0;
  %96 = cast(meta[relay.Constant][4] /* ty=Tensor[(2340), uint16] */, dtype="int32") /* ty=Tensor[(2340), int32] */;
  %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(1), int32] */;
  %98 = cast(%95, dtype="int32") /* ty=Tensor[(2340), int32] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?), int32] */;
  %100 = logical_xor(%98, %99) /* ty=Tensor[(2340), int32] */;
  (%100,)
}

def @func_4399(%var_4397: Tensor[(11, 16, 6), int32]) -> (Tensor[(11, 16, 6), int32],) {
  @func_4396(%var_4397) /* ty=(Tensor[(11, 16, 6), int32],) */
}

def @func_4618(%var_4600: Tensor[(294), float32]) -> (Tensor[(15, 12, 13), float64], Tensor[(10, 5, 13), float32], Tensor[(294), float32], Tensor[(13, 2, 8), float32], uint64, Tensor[(3, 4), uint64], Tensor[(432), int64]) {
  %101 = cast(meta[relay.Constant][5] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %102 = reshape(%101, newshape=[7, 14, 3]) /* ty=Tensor[(7, 14, 3), float32] */;
  %103 = @func_4305(%102) /* ty=(Tensor[(7, 14, 3), float64], Tensor[(15, 12, 13), float32], Tensor[(10, 5, 13), float32], Tensor[(650), float32]) */;
  %104 = cast(%var_4600, dtype="float32") /* ty=Tensor[(294), float32] */;
  %105 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(294), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %106 = cast(meta[relay.Constant][5] /* ty=Tensor[(294), float32] */, dtype="float32") /* ty=Tensor[(294), float32] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?), float32] */;
  %108 = cast(meta[relay.Constant][6] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %109 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 4), uint64] */, dtype="uint64") /* ty=Tensor[(3, 4), uint64] */;
  %110 = cast(meta[relay.Constant][8] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
  %111 = reshape(%108, newshape=[]) /* ty=uint64 */;
  %112 = reshape(%109, newshape=[6, 2, 1]) /* ty=Tensor[(6, 2, 1), uint64] */;
  %113 = reshape(%110, newshape=[12, 36]) /* ty=Tensor[(12, 36), int64] */;
  %114 = @func_598(%111, %112, %113) /* ty=(Tensor[(6, 2, 1), uint64], Tensor[(13, 2, 8), float32], Tensor[(208), float32], Tensor[(13, 2, 8), float32], Tensor[(12, 36), bool]) */;
  %115 = @func_4097() /* ty=Tensor[(15, 12, 13), float64] */;
  %116 = %103.2;
  %117 = multiply(%106, %107) /* ty=Tensor[(294), float32] */;
  %118 = %114.1;
  (%115, %116, %117, %118, meta[relay.Constant][6] /* ty=uint64 */, meta[relay.Constant][7] /* ty=Tensor[(3, 4), uint64] */, meta[relay.Constant][8] /* ty=Tensor[(432), int64] */)
}

def @func_6191() -> Tensor[(7, 14, 3), float64] {
  @func_6189() /* ty=Tensor[(7, 14, 3), float64] */
}

def @func_3744() -> (Tensor[(12, 15, 12), float64],) {
  @func_3742() /* ty=(Tensor[(12, 15, 12), float64],) */
}

def @func_5856(%var_5854: Tensor[(180), float32]) -> (Tensor[(2340), int32], Tensor[(2340), int16], Tensor[(2340), float64], Tensor[(4, 3, 15), float32], Tensor[(180), float32]) {
  @func_5853(%var_5854) /* ty=(Tensor[(2340), int32], Tensor[(2340), int16], Tensor[(2340), float64], Tensor[(4, 3, 15), float32], Tensor[(180), float32]) */
}

def @func_2766(%var_2765: Tensor[(2, 72), int8]) -> (Tensor[(2340), int16], Tensor[(12, ?, 12), bool], Tensor[(2, 72), int8]) {
  %127 = fn (%var_2759: Tensor[(2, 72), int8]) -> (Tensor[(2340), int16], Tensor[(12, ?, 12), bool], Tensor[(2, 72), int8]) {
    %119 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
    %120 = cast(%var_2759, dtype="int8") /* ty=Tensor[(2, 72), int8] */;
    %121 = cast(%var_2759, dtype="int8") /* ty=Tensor[(2, 72), int8] */;
    %122 = reshape(%120, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
    %123 = reshape(%121, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
    %124 = @func_1267(%122, %123) /* ty=(Tensor[(12, ?, 12), bool],) */;
    %125 = %119.2;
    %126 = %124.0;
    (%125, %126, %var_2759)
  };
  %127(%var_2765) /* ty=(Tensor[(2340), int16], Tensor[(12, ?, 12), bool], Tensor[(2, 72), int8]) */
}

def @func_5444(%var_5443: Tensor[(2340), float64]) -> (Tensor[(2340), float32], Tensor[(2340), int16]) {
  %143 = fn (%var_5412: Tensor[(2340), float64]) -> (Tensor[(2340), float32], Tensor[(2340), int16]) {
    %128 = @func_3787() /* ty=Tensor[(2340), float64] */;
    %129 = cast(%var_5412, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(1), int32] */;
    %131 = cast(%128, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?), float32] */;
    %133 = power(%131, %132) /* ty=Tensor[(2340), float32] */;
    %134 = cast(%128, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %135 = shape_of(%133, dtype="int32") /* ty=Tensor[(1), int32] */;
    %136 = cast(%133, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?), float32] */;
    %138 = floor_mod(%136, %137) /* ty=Tensor[(2340), float32] */;
    %139 = cast(%138, dtype="int16") /* ty=Tensor[(2340), int16] */;
    %140 = reshape(%139, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
    %141 = @func_5272(%140) /* ty=(Tensor[(2340), int16], Tensor[(2340), int32]) */;
    %142 = %141.0;
    (%138, %142)
  };
  %143(%var_5443) /* ty=(Tensor[(2340), float32], Tensor[(2340), int16]) */
}

def @func_5817() -> (Tensor[(15, 12, 13), float32],) {
  %144 = @func_3959() /* ty=(Tensor[(2340), float64], Tensor[(15, 12, 13), float32]) */;
  %145 = %144.1;
  (%145,)
}

def @func_2897() -> (Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) {
  @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */
}

def @func_2134(%var_2124: Tensor[(6, 7, 8), uint8], %var_2125: Tensor[(6, 7, 8), uint8], %var_2131: Tensor[(84), float32], %var_2132: Tensor[(2340), int16]) -> (Tensor[(6, 7, 8), uint8], Tensor[(15, 12, 13), bool], Tensor[(84), float32], Tensor[(2340), int16]) {
  %146 = cast(%var_2125, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
  %147 = shape_of(%var_2124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(%var_2124, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %150 = cast(%var_2131, dtype="float32") /* ty=Tensor[(84), float32] */;
  %151 = cast(%var_2132, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %152 = reshape(%150, newshape=[14, 1, 6]) /* ty=Tensor[(14, 1, 6), float32] */;
  %153 = reshape(%151, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %154 = @func_1644(%152, %153) /* ty=(Tensor[(14, 1, 6), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %155 = bitwise_xor(%148, %149) /* ty=Tensor[(6, 7, 8), uint8] */;
  %156 = %154.1;
  (%155, %156, %var_2131, %var_2132)
}

def @func_5051(%var_5048: Tensor[(12, 6, 10), float32], %var_5049: Tensor[(1920), int64], %var_5050: Tensor[(90, 1), int16]) -> (Tensor[(12, 6, 10), uint16], Tensor[(16, 15, 8), float64], Tensor[(1920), int64], int16, Tensor[(648), float64], Tensor[(1, 84), float32], Tensor[(432), int64], Tensor[(90, 1), int16]) {
  %182 = fn (%var_5006: Tensor[(12, 6, 10), float32], %var_5038: Tensor[(1920), int64], %var_5044: Tensor[(90, 1), int16]) -> (Tensor[(12, 6, 10), uint16], Tensor[(16, 15, 8), float64], Tensor[(1920), int64], int16, Tensor[(648), float64], Tensor[(1, 84), float32], Tensor[(432), int64], Tensor[(90, 1), int16]) {
    %157 = cast(%var_5006, dtype="float32") /* ty=Tensor[(12, 6, 10), float32] */;
    %158 = asin(%157) /* ty=Tensor[(12, 6, 10), float32] */;
    %159 = cast(%var_5006, dtype="uint16") /* ty=Tensor[(12, 6, 10), uint16] */;
    %160 = shape_of(%158, dtype="int32") /* ty=Tensor[(3), int32] */;
    %161 = cast(%158, dtype="uint16") /* ty=Tensor[(12, 6, 10), uint16] */;
    %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %163 = cast(%var_5038, dtype="int64") /* ty=Tensor[(1920), int64] */;
    %164 = cast(%var_5038, dtype="int64") /* ty=Tensor[(1920), int64] */;
    %165 = cast(%var_5038, dtype="bool") /* ty=Tensor[(1920), bool] */;
    %166 = reshape(%163, newshape=[16, 15, 8]) /* ty=Tensor[(16, 15, 8), int64] */;
    %167 = reshape(%164, newshape=[16, 15, 8]) /* ty=Tensor[(16, 15, 8), int64] */;
    %168 = reshape(%165, newshape=[16, 15, 8]) /* ty=Tensor[(16, 15, 8), bool] */;
    %169 = @func_4022(%166, %167, %168) /* ty=(Tensor[(16, 15, 8), float64],) */;
    %170 = cast(meta[relay.Constant][9] /* ty=Tensor[(648), float64] */, dtype="float64") /* ty=Tensor[(648), float64] */;
    %171 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 84), float32] */, dtype="float32") /* ty=Tensor[(1, 84), float32] */;
    %172 = cast(meta[relay.Constant][11] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
    %173 = cast(%var_5044, dtype="int16") /* ty=Tensor[(90, 1), int16] */;
    %174 = reshape(%170, newshape=[12, 6, 9]) /* ty=Tensor[(12, 6, 9), float64] */;
    %175 = reshape(%171, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %176 = reshape(%172, newshape=[432]) /* ty=Tensor[(432), int64] */;
    %177 = reshape(%173, newshape=[45, 2]) /* ty=Tensor[(45, 2), int16] */;
    %178 = @func_3067(%174, %175, %176, %177) /* ty=(Tensor[(12, 6, 9), float64], Tensor[(14, 1, 6), float64], Tensor[(84), float32], Tensor[(2340), int16], Tensor[(7, 14, 3), bool], Tensor[(6, 6, 12), int64], Tensor[(432), int64], Tensor[(12), uint64], int16, Tensor[(45, 2), int16], Tensor[(84), float32], Tensor[(336), uint8]) */;
    %179 = right_shift(%161, %162) /* ty=Tensor[(12, 6, 10), uint16] */;
    %180 = %169.0;
    %181 = %178.8;
    (%179, %180, %var_5038, %181, meta[relay.Constant][9] /* ty=Tensor[(648), float64] */, meta[relay.Constant][10] /* ty=Tensor[(1, 84), float32] */, meta[relay.Constant][11] /* ty=Tensor[(432), int64] */, %var_5044)
  };
  %182(%var_5048, %var_5049, %var_5050) /* ty=(Tensor[(12, 6, 10), uint16], Tensor[(16, 15, 8), float64], Tensor[(1920), int64], int16, Tensor[(648), float64], Tensor[(1, 84), float32], Tensor[(432), int64], Tensor[(90, 1), int16]) */
}

def @func_4621(%var_4619: Tensor[(294), float32]) -> (Tensor[(15, 12, 13), float64], Tensor[(10, 5, 13), float32], Tensor[(294), float32], Tensor[(13, 2, 8), float32], uint64, Tensor[(3, 4), uint64], Tensor[(432), int64]) {
  @func_4618(%var_4619) /* ty=(Tensor[(15, 12, 13), float64], Tensor[(10, 5, 13), float32], Tensor[(294), float32], Tensor[(13, 2, 8), float32], uint64, Tensor[(3, 4), uint64], Tensor[(432), int64]) */
}

def @func_6273() -> (Tensor[(2340), int64], Tensor[(12, 15, 12), float64], Tensor[(2340), int16], Tensor[(7, 11, 15), int64], Tensor[(77, 15), float32], Tensor[(144, 1), int8]) {
  %183 = @func_4177() /* ty=Tensor[(2340), float64] */;
  %184 = cast(meta[relay.Constant][12] /* ty=Tensor[(2340), float64] */, dtype="int64") /* ty=Tensor[(2340), int64] */;
  %185 = shape_of(%183, dtype="int32") /* ty=Tensor[(1), int32] */;
  %186 = cast(%183, dtype="int64") /* ty=Tensor[(2340), int64] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?), int64] */;
  %188 = @func_4249() /* ty=(Tensor[(12, 15, 12), float64],) */;
  %189 = @func_4323() /* ty=(Tensor[(2340), int16],) */;
  %190 = cast(meta[relay.Constant][13] /* ty=Tensor[(77, 15), float32] */, dtype="float32") /* ty=Tensor[(77, 15), float32] */;
  %191 = cast(meta[relay.Constant][13] /* ty=Tensor[(77, 15), float32] */, dtype="float32") /* ty=Tensor[(77, 15), float32] */;
  %192 = reshape(%190, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %193 = reshape(%191, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %194 = @func_1516(%192, %193) /* ty=(Tensor[(12, ?, 12), bool], Tensor[(144), int8], Tensor[(7, 11, 15), int64], Tensor[(7, 11, 15), bool]) */;
  %195 = @func_5872() /* ty=(Tensor[(144, 1), int8],) */;
  %196 = left_shift(%186, %187) /* ty=Tensor[(2340), int64] */;
  %197 = %188.0;
  %198 = %189.0;
  %199 = %194.2;
  %200 = %195.0;
  (%196, %197, %198, %199, meta[relay.Constant][13] /* ty=Tensor[(77, 15), float32] */, %200)
}

def @func_3216() -> Tensor[(12, 15, 12), float64] {
  %202 = fn () -> Tensor[(12, 15, 12), float64] {
    %201 = @func_3198() /* ty=(Tensor[(12, 15, 12), float64],) */;
    %201.0
  };
  %202() /* ty=Tensor[(12, 15, 12), float64] */
}

def @func_3355() -> Tensor[(15, 12, 13), bool] {
  %203 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %203.1
}

def @func_6447(%var_6444: Tensor[(200), float32], %var_6445: int16, %var_6446: Tensor[(432), int64]) -> (Tensor[(2340), int16], Tensor[(12, ?, 12), float32], Tensor[(200), float32], Tensor[(15, 12, 13), bool], Tensor[(6, 2, 1), uint64], int16, Tensor[(90), int16], Tensor[(432), int64]) {
  @func_6442(%var_6444, %var_6445, %var_6446) /* ty=(Tensor[(2340), int16], Tensor[(12, ?, 12), float32], Tensor[(200), float32], Tensor[(15, 12, 13), bool], Tensor[(6, 2, 1), uint64], int16, Tensor[(90), int16], Tensor[(432), int64]) */
}

def @func_1923(%var_1879: Tensor[(5, 7, 6), int64], %var_1885: Tensor[(84), float32], %var_1886: Tensor[(2340), int16], %var_1896: int16, %var_1898: Tensor[(12, 36), int64]) -> (Tensor[(5, 7, 6), int64], Tensor[(84), float32], Tensor[(15, 12, 13), bool], Tensor[(12), uint64], int16, Tensor[(90), int16], Tensor[(12, 36), int64]) {
  %204 = cast(meta[relay.Constant][14] /* ty=Tensor[(5, 7, 6), int64] */, dtype="int64") /* ty=Tensor[(5, 7, 6), int64] */;
  %205 = shape_of(%var_1879, dtype="int32") /* ty=Tensor[(3), int32] */;
  %206 = cast(%var_1879, dtype="int64") /* ty=Tensor[(5, 7, 6), int64] */;
  %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %208 = cast(%var_1885, dtype="float32") /* ty=Tensor[(84), float32] */;
  %209 = cast(%var_1886, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %210 = reshape(%208, newshape=[14, 1, 6]) /* ty=Tensor[(14, 1, 6), float32] */;
  %211 = reshape(%209, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %212 = @func_1644(%210, %211) /* ty=(Tensor[(14, 1, 6), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %213 = %212.1;
  %214 = cast(%var_1886, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %215 = shape_of(%213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%213, dtype="bool") /* ty=Tensor[(15, 12, 13), bool] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %218 = cast(%var_1896, dtype="int16") /* ty=int16 */;
  %219 = cast(meta[relay.Constant][15] /* ty=Tensor[(90), int16] */, dtype="int16") /* ty=Tensor[(90), int16] */;
  %220 = cast(%var_1898, dtype="int64") /* ty=Tensor[(12, 36), int64] */;
  %221 = reshape(%218, newshape=[]) /* ty=int16 */;
  %222 = reshape(%219, newshape=[15, 1, 6]) /* ty=Tensor[(15, 1, 6), int16] */;
  %223 = reshape(%220, newshape=[108, 4]) /* ty=Tensor[(108, 4), int64] */;
  %224 = @func_1587(%221, %222, %223) /* ty=(Tensor[(15, 1, 6), int16], Tensor[(6, 2, 1), uint64], Tensor[(12), uint64], Tensor[(108, 4), int64]) */;
  %225 = logical_xor(%206, %207) /* ty=Tensor[(5, 7, 6), int64] */;
  %226 = less_equal(%216, %217) /* ty=Tensor[(15, 12, 13), bool] */;
  %227 = %224.2;
  (%225, %var_1885, %226, %227, %var_1896, meta[relay.Constant][15] /* ty=Tensor[(90), int16] */, %var_1898)
}

def @func_3287(%var_3286: Tensor[(9, 13, 1), float64]) -> (Tensor[(9, 13, 1), float64],) {
  %230 = fn (%var_3269: Tensor[(9, 13, 1), float64]) -> (Tensor[(9, 13, 1), float64],) {
    %228 = cast(%var_3269, dtype="float64") /* ty=Tensor[(9, 13, 1), float64] */;
    %229 = asinh(%228) /* ty=Tensor[(9, 13, 1), float64] */;
    (%229,)
  };
  %230(%var_3286) /* ty=(Tensor[(9, 13, 1), float64],) */
}

def @func_1647(%var_1645: Tensor[(14, 1, 6), float32], %var_1646: Tensor[(2340), int16]) -> (Tensor[(14, 1, 6), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) {
  %239 = fn (%var_1607: Tensor[(14, 1, 6), float32], %var_1635: Tensor[(2340), int16]) -> (Tensor[(14, 1, 6), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) {
    %231 = cast(%var_1607, dtype="float32") /* ty=Tensor[(14, 1, 6), float32] */;
    %232 = asin(%231) /* ty=Tensor[(14, 1, 6), float32] */;
    %233 = cast(%232, dtype="float64") /* ty=Tensor[(14, 1, 6), float64] */;
    %234 = cast(%var_1635, dtype="int16") /* ty=Tensor[(2340), int16] */;
    %235 = reshape(%234, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), int16] */;
    %236 = @func_894(%235) /* ty=(Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), float32]) */;
    %237 = erf(%233) /* ty=Tensor[(14, 1, 6), float64] */;
    %238 = %236.0;
    (%237, %238, %var_1635)
  };
  %239(%var_1645, %var_1646) /* ty=(Tensor[(14, 1, 6), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */
}

def @func_3628() -> (Tensor[(2340), uint16], Tensor[(12, ?, 12), bool], Tensor[(144, 1), int8], Tensor[(2340), float64]) {
  %271 = fn () -> (Tensor[(2340), uint16], Tensor[(12, ?, 12), bool], Tensor[(144, 1), int8], Tensor[(2340), float64]) {
    %240 = @func_3341() /* ty=(Tensor[(2340), int16],) */;
    %241 = %240.0;
    %242 = cast(meta[relay.Constant][16] /* ty=Tensor[(2340), int16] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %243 = shape_of(%241, dtype="int32") /* ty=Tensor[(1), int32] */;
    %244 = cast(%241, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?), bool] */;
    %246 = greater_equal(%244, %245) /* ty=Tensor[(2340), bool] */;
    %247 = cast(%246, dtype="uint16") /* ty=Tensor[(2340), uint16] */;
    %248 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(2340), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %249 = cast(meta[relay.Constant][16] /* ty=Tensor[(2340), int16] */, dtype="uint16") /* ty=Tensor[(2340), uint16] */;
    %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %251 = cast(meta[relay.Constant][17] /* ty=Tensor[(144, 1), int8] */, dtype="int8") /* ty=Tensor[(144, 1), int8] */;
    %252 = reshape(%251, newshape=[2, 72]) /* ty=Tensor[(2, 72), int8] */;
    %253 = @func_2764(%252) /* ty=(Tensor[(2340), int16], Tensor[(12, ?, 12), bool], Tensor[(2, 72), int8]) */;
    %254 = cast(%241, dtype="float64") /* ty=Tensor[(2340), float64] */;
    %255 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(2340), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %256 = cast(meta[relay.Constant][16] /* ty=Tensor[(2340), int16] */, dtype="float64") /* ty=Tensor[(2340), float64] */;
    %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?), float64] */;
    %258 = floor_divide(%256, %257) /* ty=Tensor[(2340), float64] */;
    %259 = cast(%246, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %260 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(2340), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %261 = cast(meta[relay.Constant][16] /* ty=Tensor[(2340), int16] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?), bool] */;
    %263 = equal(%261, %262) /* ty=Tensor[(2340), bool] */;
    %264 = cast(%263, dtype="float64") /* ty=Tensor[(2340), float64] */;
    %265 = shape_of(%258, dtype="int32") /* ty=Tensor[(1), int32] */;
    %266 = cast(%258, dtype="float64") /* ty=Tensor[(2340), float64] */;
    %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?), float64] */;
    %268 = add(%249, %250) /* ty=Tensor[(2340), uint16] */;
    %269 = %253.1;
    %270 = mod(%266, %267) /* ty=Tensor[(2340), float64] */;
    (%268, %269, meta[relay.Constant][17] /* ty=Tensor[(144, 1), int8] */, %270)
  };
  %271() /* ty=(Tensor[(2340), uint16], Tensor[(12, ?, 12), bool], Tensor[(144, 1), int8], Tensor[(2340), float64]) */
}

def @func_5507(%var_5486: Tensor[(144), int8], %var_5490: Tensor[(15, 12, 13), float64]) -> (Tensor[(15, 12, 13), float32], Tensor[(12, ?, 12), bool]) {
  %272 = @func_4879() /* ty=(Tensor[(15, 12, 13), float64],) */;
  %273 = %272.0;
  %274 = cast(%var_5490, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
  %275 = shape_of(%273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%273, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %278 = cast(%var_5486, dtype="int8") /* ty=Tensor[(144), int8] */;
  %279 = cast(%var_5486, dtype="int8") /* ty=Tensor[(144), int8] */;
  %280 = reshape(%278, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
  %281 = reshape(%279, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
  %282 = @func_1267(%280, %281) /* ty=(Tensor[(12, ?, 12), bool],) */;
  %283 = %282.0;
  %284 = cast(%var_5486, dtype="bool") /* ty=Tensor[(144), bool] */;
  %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%283, dtype="bool") /* ty=Tensor[(12, ?, 12), bool] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %288 = divide(%276, %277) /* ty=Tensor[(15, 12, 13), float32] */;
  %289 = not_equal(%286, %287) /* ty=Tensor[(12, ?, 12), bool] */;
  (%288, %289)
}

def @func_3681() -> (Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) {
  %295 = fn () -> (Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) {
    %290 = @func_3420() /* ty=(Tensor[(2340), int16], Tensor[(15, 12, 13), float32]) */;
    %291 = cast(meta[relay.Constant][18] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
    %292 = reshape(%291, newshape=[13, 2, 8]) /* ty=Tensor[(13, 2, 8), float32] */;
    %293 = %290.1;
    %294 = @func_444(%292) /* ty=Tensor[(13, 2, 8), float32] */;
    (%293, %294, meta[relay.Constant][18] /* ty=Tensor[(208), float32] */)
  };
  %295() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) */
}

def @func_717(%var_715: Tensor[(7, 6, 16), uint16], %var_716: Tensor[(7, 6, 16), uint16]) -> (Tensor[(7, 14, 3), bool], Tensor[(65, 10), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 6, 16), bool]) {
  %315 = fn (%var_685: Tensor[(7, 6, 16), uint16], %var_686: Tensor[(7, 6, 16), uint16]) -> (Tensor[(7, 14, 3), bool], Tensor[(65, 10), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 6, 16), bool]) {
    %296 = cast(meta[relay.Constant][19] /* ty=Tensor[(65, 10), float32] */, dtype="float32") /* ty=Tensor[(65, 10), float32] */;
    %297 = reshape(%296, newshape=[10, 5, 13]) /* ty=Tensor[(10, 5, 13), float32] */;
    %298 = @func_143(%297) /* ty=(Tensor[(10, 5, 13), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), int16]) */;
    %299 = %298.1;
    %300 = cast(%299, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
    %301 = reshape(%300, newshape=[7, 14, 3]) /* ty=Tensor[(7, 14, 3), bool] */;
    %302 = cast(%var_685, dtype="float64") /* ty=Tensor[(7, 6, 16), float64] */;
    %303 = sqrt(%302) /* ty=Tensor[(7, 6, 16), float64] */;
    %304 = cast(%var_686, dtype="uint16") /* ty=Tensor[(7, 6, 16), uint16] */;
    %305 = shape_of(%var_685, dtype="int32") /* ty=Tensor[(3), int32] */;
    %306 = cast(%var_685, dtype="uint16") /* ty=Tensor[(7, 6, 16), uint16] */;
    %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %308 = right_shift(%306, %307) /* ty=Tensor[(7, 6, 16), uint16] */;
    %309 = cast(%308, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
    %310 = shape_of(%303, dtype="int32") /* ty=Tensor[(3), int32] */;
    %311 = cast(%303, dtype="bool") /* ty=Tensor[(7, 6, 16), bool] */;
    %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %313 = @func_57(%301) /* ty=Tensor[(7, 14, 3), bool] */;
    %314 = less(%311, %312) /* ty=Tensor[(7, 6, 16), bool] */;
    (%299, meta[relay.Constant][19] /* ty=Tensor[(65, 10), float32] */, %313, %314)
  };
  %315(%var_715, %var_716) /* ty=(Tensor[(7, 14, 3), bool], Tensor[(65, 10), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 6, 16), bool]) */
}

def @func_143(%var_78: Tensor[(10, 5, 13), float32]) -> (Tensor[(10, 5, 13), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), int16]) {
  %316 = cast(%var_78, dtype="float32") /* ty=Tensor[(10, 5, 13), float32] */;
  %317 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(10, 5, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %318 = cast(meta[relay.Constant][20] /* ty=Tensor[(10, 5, 13), float32] */, dtype="float32") /* ty=Tensor[(10, 5, 13), float32] */;
  %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %320 = cast(meta[relay.Constant][21] /* ty=Tensor[(294), bool] */, dtype="bool") /* ty=Tensor[(294), bool] */;
  %321 = reshape(%320, newshape=[7, 14, 3]) /* ty=Tensor[(7, 14, 3), bool] */;
  %322 = @func_57(%321) /* ty=Tensor[(7, 14, 3), bool] */;
  %323 = cast(%322, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
  %324 = reshape(%323, newshape=[7, 14, 3]) /* ty=Tensor[(7, 14, 3), bool] */;
  %325 = cast(meta[relay.Constant][21] /* ty=Tensor[(294), bool] */, dtype="bool") /* ty=Tensor[(294), bool] */;
  %326 = reshape(%325, newshape=[7, 14, 3]) /* ty=Tensor[(7, 14, 3), bool] */;
  %327 = @func_57(%326) /* ty=Tensor[(7, 14, 3), bool] */;
  %328 = cast(%327, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %329 = sqrt(%328) /* ty=Tensor[(7, 14, 3), float32] */;
  %330 = cast(meta[relay.Constant][21] /* ty=Tensor[(294), bool] */, dtype="int16") /* ty=Tensor[(294), int16] */;
  %331 = shape_of(%329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%329, dtype="int16") /* ty=Tensor[(7, 14, 3), int16] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %334 = floor_divide(%318, %319) /* ty=Tensor[(10, 5, 13), float32] */;
  %335 = @func_57(%324) /* ty=Tensor[(7, 14, 3), bool] */;
  %336 = subtract(%332, %333) /* ty=Tensor[(7, 14, 3), int16] */;
  (%334, %322, %335, %336)
}

def @func_4756(%var_4753: Tensor[(180), uint8], %var_4754: Tensor[(210), int64], %var_4755: Tensor[(84), float32]) -> (Tensor[(12, ?, 12), bool], Tensor[(12, 15, 12), float64], Tensor[(180), uint8], Tensor[(84), float32], Tensor[(210), int64], Tensor[(84), float32]) {
  %353 = fn (%var_4736: Tensor[(180), uint8], %var_4746: Tensor[(210), int64], %var_4747: Tensor[(84), float32]) -> (Tensor[(12, ?, 12), bool], Tensor[(12, 15, 12), float64], Tensor[(180), uint8], Tensor[(84), float32], Tensor[(210), int64], Tensor[(84), float32]) {
    %337 = @func_3627() /* ty=(Tensor[(2340), uint16], Tensor[(12, ?, 12), bool], Tensor[(144, 1), int8], Tensor[(2340), float64]) */;
    %338 = cast(%var_4736, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %339 = cast(%var_4736, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %340 = reshape(%338, newshape=[9, 10, 2]) /* ty=Tensor[(9, 10, 2), uint8] */;
    %341 = reshape(%339, newshape=[9, 10, 2]) /* ty=Tensor[(9, 10, 2), uint8] */;
    %342 = @func_4338(%340, %341) /* ty=(Tensor[(9, 10, 2), uint8], Tensor[(12, 15, 12), float64]) */;
    %343 = %342.1;
    %344 = cast(%343, dtype="float64") /* ty=Tensor[(12, 15, 12), float64] */;
    %345 = cast(%var_4746, dtype="int64") /* ty=Tensor[(210), int64] */;
    %346 = cast(%var_4747, dtype="float32") /* ty=Tensor[(84), float32] */;
    %347 = reshape(%344, newshape=[12, 15, 12]) /* ty=Tensor[(12, 15, 12), float64] */;
    %348 = reshape(%345, newshape=[1, 210]) /* ty=Tensor[(1, 210), int64] */;
    %349 = reshape(%346, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %350 = @func_2740(%347, %348, %349) /* ty=(Tensor[(12, 15, 12), float32], Tensor[(12, 15, 12), float32], Tensor[(12), uint64], Tensor[(1, 210), int64], Tensor[(84), float32], Tensor[(2340), int16], int16, Tensor[(432), int64]) */;
    %351 = %337.1;
    %352 = %350.4;
    (%351, %343, %var_4736, %352, %var_4746, %var_4747)
  };
  %353(%var_4753, %var_4754, %var_4755) /* ty=(Tensor[(12, ?, 12), bool], Tensor[(12, 15, 12), float64], Tensor[(180), uint8], Tensor[(84), float32], Tensor[(210), int64], Tensor[(84), float32]) */
}

def @func_3073(%var_3069: Tensor[(12, 6, 9), float64], %var_3070: Tensor[(84), float32], %var_3071: Tensor[(432), int64], %var_3072: Tensor[(45, 2), int16]) -> (Tensor[(12, 6, 9), float64], Tensor[(14, 1, 6), float64], Tensor[(84), float32], Tensor[(2340), int16], Tensor[(7, 14, 3), bool], Tensor[(6, 6, 12), int64], Tensor[(432), int64], Tensor[(12), uint64], int16, Tensor[(45, 2), int16], Tensor[(84), float32], Tensor[(336), uint8]) {
  @func_3067(%var_3069, %var_3070, %var_3071, %var_3072) /* ty=(Tensor[(12, 6, 9), float64], Tensor[(14, 1, 6), float64], Tensor[(84), float32], Tensor[(2340), int16], Tensor[(7, 14, 3), bool], Tensor[(6, 6, 12), int64], Tensor[(432), int64], Tensor[(12), uint64], int16, Tensor[(45, 2), int16], Tensor[(84), float32], Tensor[(336), uint8]) */
}

def @func_5398(%var_5373: Tensor[(2160), float64], %var_5375: Tensor[(432), int64], %var_5380: Tensor[(1092), float64]) -> (Tensor[(4, 3, 15), float32], Tensor[(2160), float64], Tensor[(432), int64], Tensor[(210), int64], Tensor[(2340), int16], Tensor[(1092), float64], Tensor[(2340), float32]) {
  %354 = cast(%var_5373, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %355 = cast(meta[relay.Constant][22] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %356 = cast(%var_5375, dtype="int64") /* ty=Tensor[(432), int64] */;
  %357 = cast(meta[relay.Constant][23] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %358 = reshape(%354, newshape=[2160]) /* ty=Tensor[(2160), float64] */;
  %359 = reshape(%355, newshape=[]) /* ty=int16 */;
  %360 = reshape(%356, newshape=[432]) /* ty=Tensor[(432), int64] */;
  %361 = reshape(%357, newshape=[105, 2]) /* ty=Tensor[(105, 2), int64] */;
  %362 = @func_3135(%358, %359, %360, %361) /* ty=(Tensor[(2340), bool], Tensor[(12, 15, 12), bool], Tensor[(2160), float64], Tensor[(12), uint64], int16, Tensor[(1, 90), int16], Tensor[(432), int64], int16, Tensor[(105, 2), int64], Tensor[(84), float32], Tensor[(4, 3, 15), float32], Tensor[(180), float32], Tensor[(2340), float32]) */;
  %363 = cast(%var_5380, dtype="float64") /* ty=Tensor[(1092), float64] */;
  %364 = reshape(%363, newshape=[13, 6, 14]) /* ty=Tensor[(13, 6, 14), float64] */;
  %365 = @func_2934(%364) /* ty=(Tensor[(2340), int16], Tensor[(13, 6, 14), float32]) */;
  %366 = @func_3170() /* ty=Tensor[(2340), float64] */;
  %367 = cast(%366, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %368 = atanh(%367) /* ty=Tensor[(2340), float32] */;
  %369 = cast(%368, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %370 = cast(meta[relay.Constant][22] /* ty=int16 */, dtype="float32") /* ty=float32 */;
  %371 = %362.10;
  %372 = %365.0;
  %373 = multiply(%369, %370) /* ty=Tensor[(2340), float32] */;
  (%371, %var_5373, %var_5375, meta[relay.Constant][23] /* ty=Tensor[(210), int64] */, %372, %var_5380, %373)
}

def @func_896(%var_895: Tensor[(15, 12, 13), int16]) -> (Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), float32]) {
  %381 = fn (%var_881: Tensor[(15, 12, 13), int16]) -> (Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), float32]) {
    %374 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 12, 13), int16] */, dtype="bool") /* ty=Tensor[(15, 12, 13), bool] */;
    %375 = shape_of(%var_881, dtype="int32") /* ty=Tensor[(3), int32] */;
    %376 = cast(%var_881, dtype="bool") /* ty=Tensor[(15, 12, 13), bool] */;
    %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %378 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 12, 13), int16] */, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
    %379 = greater(%376, %377) /* ty=Tensor[(15, 12, 13), bool] */;
    %380 = sin(%378) /* ty=Tensor[(15, 12, 13), float32] */;
    (%379, %380)
  };
  %381(%var_895) /* ty=(Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), float32]) */
}

def @func_4305(%var_4289: Tensor[(7, 14, 3), float32]) -> (Tensor[(7, 14, 3), float64], Tensor[(15, 12, 13), float32], Tensor[(10, 5, 13), float32], Tensor[(650), float32]) {
  %382 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
  %383 = %382.1;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %385 = asin(%384) /* ty=Tensor[(7, 14, 3), float32] */;
  %386 = cast(%var_4289, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %387 = shape_of(%385, dtype="int32") /* ty=Tensor[(3), int32] */;
  %388 = cast(%385, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %390 = @func_3680() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) */;
  %391 = cast(meta[relay.Constant][25] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
  %392 = reshape(%391, newshape=[10, 5, 13]) /* ty=Tensor[(10, 5, 13), float32] */;
  %393 = @func_143(%392) /* ty=(Tensor[(10, 5, 13), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), int16]) */;
  %394 = floor_divide(%388, %389) /* ty=Tensor[(7, 14, 3), float64] */;
  %395 = %390.0;
  %396 = %393.0;
  (%394, %395, %396, meta[relay.Constant][25] /* ty=Tensor[(650), float32] */)
}

def @func_6153() -> (Tensor[(12, ?, 12), float32],) {
  %398 = fn () -> (Tensor[(12, ?, 12), float32],) {
    %397 = @func_3809() /* ty=Tensor[(12, ?, 12), float32] */;
    (%397,)
  };
  %398() /* ty=(Tensor[(12, ?, 12), float32],) */
}

def @func_4687() -> Tensor[(15, 12, 13), bool] {
  @func_3355() /* ty=Tensor[(15, 12, 13), bool] */
}

def @func_2744(%var_2741: Tensor[(12, 15, 12), float64], %var_2742: Tensor[(1, 210), int64], %var_2743: Tensor[(84), float32]) -> (Tensor[(12, 15, 12), float32], Tensor[(12, 15, 12), float32], Tensor[(12), uint64], Tensor[(1, 210), int64], Tensor[(84), float32], Tensor[(2340), int16], int16, Tensor[(432), int64]) {
  %419 = fn (%var_2721: Tensor[(12, 15, 12), float64], %var_2734: Tensor[(1, 210), int64], %var_2735: Tensor[(84), float32]) -> (Tensor[(12, 15, 12), float32], Tensor[(12, 15, 12), float32], Tensor[(12), uint64], Tensor[(1, 210), int64], Tensor[(84), float32], Tensor[(2340), int16], int16, Tensor[(432), int64]) {
    %399 = @func_2614() /* ty=Tensor[(12, 15, 12), float64] */;
    %400 = cast(%var_2721, dtype="float32") /* ty=Tensor[(12, 15, 12), float32] */;
    %401 = shape_of(%399, dtype="int32") /* ty=Tensor[(3), int32] */;
    %402 = cast(%399, dtype="float32") /* ty=Tensor[(12, 15, 12), float32] */;
    %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %404 = cast(%var_2721, dtype="float32") /* ty=Tensor[(12, 15, 12), float32] */;
    %405 = cast(%var_2734, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
    %406 = cast(%var_2735, dtype="float32") /* ty=Tensor[(84), float32] */;
    %407 = cast(meta[relay.Constant][26] /* ty=Tensor[(2340), int16] */, dtype="int16") /* ty=Tensor[(2340), int16] */;
    %408 = cast(meta[relay.Constant][27] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %409 = cast(meta[relay.Constant][28] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
    %410 = reshape(%405, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), int64] */;
    %411 = reshape(%406, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %412 = reshape(%407, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
    %413 = reshape(%408, newshape=[]) /* ty=int16 */;
    %414 = reshape(%409, newshape=[12, 36]) /* ty=Tensor[(12, 36), int64] */;
    %415 = @func_1923(%410, %411, %412, %413, %414) /* ty=(Tensor[(5, 7, 6), int64], Tensor[(84), float32], Tensor[(15, 12, 13), bool], Tensor[(12), uint64], int16, Tensor[(90), int16], Tensor[(12, 36), int64]) */;
    %416 = divide(%402, %403) /* ty=Tensor[(12, 15, 12), float32] */;
    %417 = log(%404) /* ty=Tensor[(12, 15, 12), float32] */;
    %418 = %415.3;
    (%416, %417, %418, %var_2734, %var_2735, meta[relay.Constant][26] /* ty=Tensor[(2340), int16] */, meta[relay.Constant][27] /* ty=int16 */, meta[relay.Constant][28] /* ty=Tensor[(432), int64] */)
  };
  %419(%var_2741, %var_2742, %var_2743) /* ty=(Tensor[(12, 15, 12), float32], Tensor[(12, 15, 12), float32], Tensor[(12), uint64], Tensor[(1, 210), int64], Tensor[(84), float32], Tensor[(2340), int16], int16, Tensor[(432), int64]) */
}

def @func_1587(%var_1560: int16, %var_1561: Tensor[(15, 1, 6), int16], %var_1581: Tensor[(108, 4), int64]) -> (Tensor[(15, 1, 6), int16], Tensor[(6, 2, 1), uint64], Tensor[(12), uint64], Tensor[(108, 4), int64]) {
  %420 = cast(%var_1560, dtype="int16") /* ty=int16 */;
  %421 = cast(%var_1561, dtype="int16") /* ty=Tensor[(15, 1, 6), int16] */;
  %422 = cast(%var_1560, dtype="uint64") /* ty=uint64 */;
  %423 = cast(meta[relay.Constant][29] /* ty=Tensor[(12), uint64] */, dtype="uint64") /* ty=Tensor[(12), uint64] */;
  %424 = cast(%var_1581, dtype="int64") /* ty=Tensor[(108, 4), int64] */;
  %425 = reshape(%422, newshape=[]) /* ty=uint64 */;
  %426 = reshape(%423, newshape=[6, 2, 1]) /* ty=Tensor[(6, 2, 1), uint64] */;
  %427 = reshape(%424, newshape=[12, 36]) /* ty=Tensor[(12, 36), int64] */;
  %428 = @func_598(%425, %426, %427) /* ty=(Tensor[(6, 2, 1), uint64], Tensor[(13, 2, 8), float32], Tensor[(208), float32], Tensor[(13, 2, 8), float32], Tensor[(12, 36), bool]) */;
  %429 = subtract(%420, %421) /* ty=Tensor[(15, 1, 6), int16] */;
  %430 = %428.0;
  (%429, %430, meta[relay.Constant][29] /* ty=Tensor[(12), uint64] */, %var_1581)
}

def @func_146(%var_144: Tensor[(10, 5, 13), float32]) -> (Tensor[(10, 5, 13), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), int16]) {
  @func_143(%var_144) /* ty=(Tensor[(10, 5, 13), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), int16]) */
}

def @func_4026(%var_4023: Tensor[(16, 15, 8), int64], %var_4024: Tensor[(16, 15, 8), int64], %var_4025: Tensor[(16, 15, 8), bool]) -> (Tensor[(16, 15, 8), float64],) {
  %441 = fn (%var_4004: Tensor[(16, 15, 8), int64], %var_4005: Tensor[(16, 15, 8), int64], %var_4009: Tensor[(16, 15, 8), bool]) -> (Tensor[(16, 15, 8), float64],) {
    %431 = cast(%var_4005, dtype="bool") /* ty=Tensor[(16, 15, 8), bool] */;
    %432 = shape_of(%var_4004, dtype="int32") /* ty=Tensor[(3), int32] */;
    %433 = cast(%var_4004, dtype="bool") /* ty=Tensor[(16, 15, 8), bool] */;
    %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %435 = greater_equal(%433, %434) /* ty=Tensor[(16, 15, 8), bool] */;
    %436 = cast(%var_4009, dtype="float64") /* ty=Tensor[(16, 15, 8), float64] */;
    %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
    %438 = cast(%435, dtype="float64") /* ty=Tensor[(16, 15, 8), float64] */;
    %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %440 = floor_mod(%438, %439) /* ty=Tensor[(16, 15, 8), float64] */;
    (%440,)
  };
  %441(%var_4023, %var_4024, %var_4025) /* ty=(Tensor[(16, 15, 8), float64],) */
}

def @func_4826(%var_4807: Tensor[(84), float32]) -> (Tensor[(12, ?, 12), float32], Tensor[(14, 1, 6), float64], Tensor[(84), float32], Tensor[(2340), int16]) {
  %442 = cast(%var_4807, dtype="float32") /* ty=Tensor[(84), float32] */;
  %443 = cast(meta[relay.Constant][30] /* ty=Tensor[(2340), int16] */, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %444 = reshape(%442, newshape=[14, 1, 6]) /* ty=Tensor[(14, 1, 6), float32] */;
  %445 = reshape(%443, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %446 = @func_1644(%444, %445) /* ty=(Tensor[(14, 1, 6), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %447 = @func_3809() /* ty=Tensor[(12, ?, 12), float32] */;
  %448 = %446.0;
  (%447, %448, %var_4807, meta[relay.Constant][30] /* ty=Tensor[(2340), int16] */)
}

def @func_2799(%var_2797: Tensor[(12, 15, 12), float64]) -> Tensor[(12, 15, 12), bool] {
  @func_2796(%var_2797) /* ty=Tensor[(12, 15, 12), bool] */
}

def @func_3499(%var_3497: Tensor[(672), uint16]) -> (Tensor[(12, 15, 12), float64], Tensor[(65, 10), float32], Tensor[(672), uint16]) {
  @func_3496(%var_3497) /* ty=(Tensor[(12, 15, 12), float64], Tensor[(65, 10), float32], Tensor[(672), uint16]) */
}

def @func_4974() -> (Tensor[(2340), int16], Tensor[(12, 15, 12), float64]) {
  %449 = @func_2981() /* ty=Tensor[(2340), int16] */;
  %450 = @func_2614() /* ty=Tensor[(12, 15, 12), float64] */;
  (%449, %450)
}

def @func_446(%var_445: Tensor[(13, 2, 8), float32]) -> Tensor[(13, 2, 8), float32] {
  %452 = fn (%var_430: Tensor[(13, 2, 8), float32]) -> Tensor[(13, 2, 8), float32] {
    %451 = cast(%var_430, dtype="float32") /* ty=Tensor[(13, 2, 8), float32] */;
    atanh(%451) /* ty=Tensor[(13, 2, 8), float32] */
  };
  %452(%var_445) /* ty=Tensor[(13, 2, 8), float32] */
}

def @func_59(%var_58: Tensor[(7, 14, 3), bool]) -> Tensor[(7, 14, 3), bool] {
  %455 = fn (%var_52: Tensor[(7, 14, 3), bool]) -> Tensor[(7, 14, 3), bool] {
    %453 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %454 = cast(%var_52, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
    logical_or(%453, %454) /* ty=Tensor[(7, 14, 3), bool] */
  };
  %455(%var_58) /* ty=Tensor[(7, 14, 3), bool] */
}

def @func_3809() -> Tensor[(12, ?, 12), float32] {
  %456 = @func_3627() /* ty=(Tensor[(2340), uint16], Tensor[(12, ?, 12), bool], Tensor[(144, 1), int8], Tensor[(2340), float64]) */;
  %457 = %456.1;
  %458 = cast(%457, dtype="float32") /* ty=Tensor[(12, ?, 12), float32] */;
  tan(%458) /* ty=Tensor[(12, ?, 12), float32] */
}

def @func_4097() -> Tensor[(15, 12, 13), float64] {
  %459 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %460 = %459.1;
  %461 = cast(%460, dtype="float64") /* ty=Tensor[(15, 12, 13), float64] */;
  log10(%461) /* ty=Tensor[(15, 12, 13), float64] */
}

def @func_2615() -> Tensor[(12, 15, 12), float64] {
  %463 = fn () -> Tensor[(12, 15, 12), float64] {
    %462 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
    %462.0
  };
  %463() /* ty=Tensor[(12, 15, 12), float64] */
}

def @func_1516(%var_1495: Tensor[(7, 11, 15), float32], %var_1505: Tensor[(7, 11, 15), float32]) -> (Tensor[(12, ?, 12), bool], Tensor[(144), int8], Tensor[(7, 11, 15), int64], Tensor[(7, 11, 15), bool]) {
  %464 = cast(meta[relay.Constant][31] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
  %465 = cast(meta[relay.Constant][31] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
  %466 = reshape(%464, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
  %467 = reshape(%465, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
  %468 = @func_1267(%466, %467) /* ty=(Tensor[(12, ?, 12), bool],) */;
  %469 = cast(%var_1495, dtype="float32") /* ty=Tensor[(7, 11, 15), float32] */;
  %470 = exp(%469) /* ty=Tensor[(7, 11, 15), float32] */;
  %471 = cast(%var_1505, dtype="int64") /* ty=Tensor[(7, 11, 15), int64] */;
  %472 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%470, dtype="int64") /* ty=Tensor[(7, 11, 15), int64] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %475 = cast(%var_1505, dtype="bool") /* ty=Tensor[(7, 11, 15), bool] */;
  %476 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%470, dtype="bool") /* ty=Tensor[(7, 11, 15), bool] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %479 = %468.0;
  %480 = right_shift(%473, %474) /* ty=Tensor[(7, 11, 15), int64] */;
  %481 = less(%477, %478) /* ty=Tensor[(7, 11, 15), bool] */;
  (%479, meta[relay.Constant][31] /* ty=Tensor[(144), int8] */, %480, %481)
}

def @func_2982() -> Tensor[(2340), int16] {
  %483 = fn () -> Tensor[(2340), int16] {
    %482 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
    %482.3
  };
  %483() /* ty=Tensor[(2340), int16] */
}

def @func_4324() -> (Tensor[(2340), int16],) {
  %486 = fn () -> (Tensor[(2340), int16],) {
    %484 = @func_3341() /* ty=(Tensor[(2340), int16],) */;
    %485 = %484.0;
    (%485,)
  };
  %486() /* ty=(Tensor[(2340), int16],) */
}

def @func_2140(%var_2136: Tensor[(6, 7, 8), uint8], %var_2137: Tensor[(6, 7, 8), uint8], %var_2138: Tensor[(84), float32], %var_2139: Tensor[(2340), int16]) -> (Tensor[(6, 7, 8), uint8], Tensor[(15, 12, 13), bool], Tensor[(84), float32], Tensor[(2340), int16]) {
  @func_2134(%var_2136, %var_2137, %var_2138, %var_2139) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(15, 12, 13), bool], Tensor[(84), float32], Tensor[(2340), int16]) */
}

def @func_6227() -> Tensor[(2340), float64] {
  @func_6225() /* ty=Tensor[(2340), float64] */
}

def @func_4829(%var_4827: Tensor[(84), float32]) -> (Tensor[(12, ?, 12), float32], Tensor[(14, 1, 6), float64], Tensor[(84), float32], Tensor[(2340), int16]) {
  @func_4826(%var_4827) /* ty=(Tensor[(12, ?, 12), float32], Tensor[(14, 1, 6), float64], Tensor[(84), float32], Tensor[(2340), int16]) */
}

def @func_4077(%var_4074: Tensor[(9, 14, 15), bool], %var_4075: Tensor[(9, 14, 15), bool], %var_4076: Tensor[(9, 14, 15), bool]) -> (Tensor[(84), float32], Tensor[(2340), int16], Tensor[(9, 14, 15), float64], Tensor[(9, 14, 15), uint64], Tensor[(9, 14, 15), float32]) {
  %508 = fn (%var_4028: Tensor[(9, 14, 15), bool], %var_4046: Tensor[(9, 14, 15), bool], %var_4054: Tensor[(9, 14, 15), bool]) -> (Tensor[(84), float32], Tensor[(2340), int16], Tensor[(9, 14, 15), float64], Tensor[(9, 14, 15), uint64], Tensor[(9, 14, 15), float32]) {
    %487 = cast(meta[relay.Constant][32] /* ty=Tensor[(2340), int16] */, dtype="int16") /* ty=Tensor[(2340), int16] */;
    %488 = reshape(%487, newshape=[2340, 1]) /* ty=Tensor[(2340, 1), int16] */;
    %489 = @func_3262(%488) /* ty=(Tensor[(12, 15, 12), float32], Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(84), float32], Tensor[(2340, 1), int16]) */;
    %490 = cast(%var_4046, dtype="float64") /* ty=Tensor[(9, 14, 15), float64] */;
    %491 = shape_of(%var_4028, dtype="int32") /* ty=Tensor[(3), int32] */;
    %492 = cast(%var_4028, dtype="float64") /* ty=Tensor[(9, 14, 15), float64] */;
    %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %494 = cast(%var_4054, dtype="uint64") /* ty=Tensor[(9, 14, 15), uint64] */;
    %495 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(9, 14, 15), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %496 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 14, 15), bool] */, dtype="uint64") /* ty=Tensor[(9, 14, 15), uint64] */;
    %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %498 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 14, 15), bool] */, dtype="bool") /* ty=Tensor[(9, 14, 15), bool] */;
    %499 = shape_of(%var_4028, dtype="int32") /* ty=Tensor[(3), int32] */;
    %500 = cast(%var_4028, dtype="bool") /* ty=Tensor[(9, 14, 15), bool] */;
    %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %502 = logical_and(%500, %501) /* ty=Tensor[(9, 14, 15), bool] */;
    %503 = cast(%502, dtype="float32") /* ty=Tensor[(9, 14, 15), float32] */;
    %504 = %489.3;
    %505 = floor_mod(%492, %493) /* ty=Tensor[(9, 14, 15), float64] */;
    %506 = bitwise_and(%496, %497) /* ty=Tensor[(9, 14, 15), uint64] */;
    %507 = erf(%503) /* ty=Tensor[(9, 14, 15), float32] */;
    (%504, meta[relay.Constant][32] /* ty=Tensor[(2340), int16] */, %505, %506, %507)
  };
  %508(%var_4074, %var_4075, %var_4076) /* ty=(Tensor[(84), float32], Tensor[(2340), int16], Tensor[(9, 14, 15), float64], Tensor[(9, 14, 15), uint64], Tensor[(9, 14, 15), float32]) */
}

def @func_6189() -> Tensor[(7, 14, 3), float64] {
  @func_5292() /* ty=Tensor[(7, 14, 3), float64] */
}

def @func_4632() -> (Tensor[(7, 14, 3), bool],) {
  %511 = fn () -> (Tensor[(7, 14, 3), bool],) {
    %509 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
    %510 = %509.1;
    (%510,)
  };
  %511() /* ty=(Tensor[(7, 14, 3), bool],) */
}

def @func_5671(%var_5670: Tensor[(1890), bool]) -> (Tensor[(2340), float32], Tensor[(2340), int16], Tensor[(12, ?, 12), bool], Tensor[(144), int8], Tensor[(1890), float64]) {
  %534 = fn (%var_5618: Tensor[(1890), bool]) -> (Tensor[(2340), float32], Tensor[(2340), int16], Tensor[(12, ?, 12), bool], Tensor[(144), int8], Tensor[(1890), float64]) {
    %512 = @func_4316() /* ty=Tensor[(2340), float64] */;
    %513 = cast(%512, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %514 = cast(%var_5618, dtype="bool") /* ty=Tensor[(1890), bool] */;
    %515 = cast(%var_5618, dtype="bool") /* ty=Tensor[(1890), bool] */;
    %516 = cast(%var_5618, dtype="bool") /* ty=Tensor[(1890), bool] */;
    %517 = reshape(%514, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), bool] */;
    %518 = reshape(%515, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), bool] */;
    %519 = reshape(%516, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), bool] */;
    %520 = @func_4073(%517, %518, %519) /* ty=(Tensor[(84), float32], Tensor[(2340), int16], Tensor[(9, 14, 15), float64], Tensor[(9, 14, 15), uint64], Tensor[(9, 14, 15), float32]) */;
    %521 = cast(meta[relay.Constant][34] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
    %522 = reshape(%521, newshape=[2, 72]) /* ty=Tensor[(2, 72), int8] */;
    %523 = @func_2764(%522) /* ty=(Tensor[(2340), int16], Tensor[(12, ?, 12), bool], Tensor[(2, 72), int8]) */;
    %524 = cast(%var_5618, dtype="float32") /* ty=Tensor[(1890), float32] */;
    %525 = tan(%524) /* ty=Tensor[(1890), float32] */;
    %526 = cast(%var_5618, dtype="float64") /* ty=Tensor[(1890), float64] */;
    %527 = shape_of(%525, dtype="int32") /* ty=Tensor[(1), int32] */;
    %528 = cast(%525, dtype="float64") /* ty=Tensor[(1890), float64] */;
    %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?), float64] */;
    %530 = log(%513) /* ty=Tensor[(2340), float32] */;
    %531 = %520.1;
    %532 = %523.1;
    %533 = mod(%528, %529) /* ty=Tensor[(1890), float64] */;
    (%530, %531, %532, meta[relay.Constant][34] /* ty=Tensor[(144), int8] */, %533)
  };
  %534(%var_5670) /* ty=(Tensor[(2340), float32], Tensor[(2340), int16], Tensor[(12, ?, 12), bool], Tensor[(144), int8], Tensor[(1890), float64]) */
}

def @func_5872() -> (Tensor[(144, 1), int8],) {
  %535 = @func_3627() /* ty=(Tensor[(2340), uint16], Tensor[(12, ?, 12), bool], Tensor[(144, 1), int8], Tensor[(2340), float64]) */;
  %536 = %535.2;
  (%536,)
}

def @func_3960() -> (Tensor[(2340), float64], Tensor[(15, 12, 13), float32]) {
  %540 = fn () -> (Tensor[(2340), float64], Tensor[(15, 12, 13), float32]) {
    %537 = @func_3680() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) */;
    %538 = @func_3787() /* ty=Tensor[(2340), float64] */;
    %539 = %537.0;
    (%538, %539)
  };
  %540() /* ty=(Tensor[(2340), float64], Tensor[(15, 12, 13), float32]) */
}

def @func_6013(%var_6011: Tensor[(7, 14, 3), bool]) -> (Tensor[(7, 14, 3), float32], Tensor[(7, 14, 3), uint16]) {
  @func_6010(%var_6011) /* ty=(Tensor[(7, 14, 3), float32], Tensor[(7, 14, 3), uint16]) */
}

def @func_3135(%var_3112: Tensor[(2160), float64], %var_3120: int16, %var_3122: Tensor[(432), int64], %var_3125: Tensor[(105, 2), int64]) -> (Tensor[(2340), bool], Tensor[(12, 15, 12), bool], Tensor[(2160), float64], Tensor[(12), uint64], int16, Tensor[(1, 90), int16], Tensor[(432), int64], int16, Tensor[(105, 2), int64], Tensor[(84), float32], Tensor[(4, 3, 15), float32], Tensor[(180), float32], Tensor[(2340), float32]) {
  %541 = @func_2981() /* ty=Tensor[(2340), int16] */;
  %542 = cast(%541, dtype="float64") /* ty=Tensor[(2340), float64] */;
  %543 = log2(%542) /* ty=Tensor[(2340), float64] */;
  %544 = cast(%541, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %545 = shape_of(%543, dtype="int32") /* ty=Tensor[(1), int32] */;
  %546 = cast(%543, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?), bool] */;
  %548 = cast(%var_3112, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %549 = reshape(%548, newshape=[12, 15, 12]) /* ty=Tensor[(12, 15, 12), float64] */;
  %550 = cast(%var_3120, dtype="int16") /* ty=int16 */;
  %551 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 90), int16] */, dtype="int16") /* ty=Tensor[(1, 90), int16] */;
  %552 = cast(%var_3122, dtype="int64") /* ty=Tensor[(432), int64] */;
  %553 = reshape(%550, newshape=[]) /* ty=int16 */;
  %554 = reshape(%551, newshape=[15, 1, 6]) /* ty=Tensor[(15, 1, 6), int16] */;
  %555 = reshape(%552, newshape=[108, 4]) /* ty=Tensor[(108, 4), int64] */;
  %556 = @func_1587(%553, %554, %555) /* ty=(Tensor[(15, 1, 6), int16], Tensor[(6, 2, 1), uint64], Tensor[(12), uint64], Tensor[(108, 4), int64]) */;
  %557 = cast(%var_3125, dtype="int64") /* ty=Tensor[(105, 2), int64] */;
  %558 = cast(meta[relay.Constant][36] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %559 = cast(%543, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %560 = cast(%var_3120, dtype="int16") /* ty=int16 */;
  %561 = cast(%var_3122, dtype="int64") /* ty=Tensor[(432), int64] */;
  %562 = reshape(%557, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), int64] */;
  %563 = reshape(%558, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %564 = reshape(%559, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %565 = reshape(%560, newshape=[]) /* ty=int16 */;
  %566 = reshape(%561, newshape=[12, 36]) /* ty=Tensor[(12, 36), int64] */;
  %567 = @func_1923(%562, %563, %564, %565, %566) /* ty=(Tensor[(5, 7, 6), int64], Tensor[(84), float32], Tensor[(15, 12, 13), bool], Tensor[(12), uint64], int16, Tensor[(90), int16], Tensor[(12, 36), int64]) */;
  %568 = cast(meta[relay.Constant][37] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %569 = reshape(%568, newshape=[4, 3, 15]) /* ty=Tensor[(4, 3, 15), float32] */;
  %570 = cast(%543, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %571 = greater(%546, %547) /* ty=Tensor[(2340), bool] */;
  %572 = @func_2796(%549) /* ty=Tensor[(12, 15, 12), bool] */;
  %573 = %556.2;
  %574 = %567.4;
  %575 = @func_2036(%569) /* ty=Tensor[(4, 3, 15), float32] */;
  %576 = acosh(%570) /* ty=Tensor[(2340), float32] */;
  (%571, %572, %var_3112, %573, %var_3120, meta[relay.Constant][35] /* ty=Tensor[(1, 90), int16] */, %var_3122, %574, %var_3125, meta[relay.Constant][36] /* ty=Tensor[(84), float32] */, %575, meta[relay.Constant][37] /* ty=Tensor[(180), float32] */, %576)
}

def @func_4179() -> Tensor[(2340), float64] {
  @func_4177() /* ty=Tensor[(2340), float64] */
}

def @func_6442(%var_6425: Tensor[(200), float32], %var_6435: int16, %var_6437: Tensor[(432), int64]) -> (Tensor[(2340), int16], Tensor[(12, ?, 12), float32], Tensor[(200), float32], Tensor[(15, 12, 13), bool], Tensor[(6, 2, 1), uint64], int16, Tensor[(90), int16], Tensor[(432), int64]) {
  %577 = cast(%var_6425, dtype="float32") /* ty=Tensor[(200), float32] */;
  %578 = reshape(%577, newshape=[2, 10, 10]) /* ty=Tensor[(2, 10, 10), float32] */;
  %579 = @func_6294(%578) /* ty=(Tensor[(2, 10, 10), bool], Tensor[(12, ?, 12), float32], Tensor[(7, 14, 3), bool]) */;
  %580 = cast(%var_6435, dtype="int16") /* ty=int16 */;
  %581 = cast(meta[relay.Constant][38] /* ty=Tensor[(90), int16] */, dtype="int16") /* ty=Tensor[(90), int16] */;
  %582 = cast(%var_6437, dtype="int64") /* ty=Tensor[(432), int64] */;
  %583 = reshape(%580, newshape=[]) /* ty=int16 */;
  %584 = reshape(%581, newshape=[15, 1, 6]) /* ty=Tensor[(15, 1, 6), int16] */;
  %585 = reshape(%582, newshape=[108, 4]) /* ty=Tensor[(108, 4), int64] */;
  %586 = @func_1587(%583, %584, %585) /* ty=(Tensor[(15, 1, 6), int16], Tensor[(6, 2, 1), uint64], Tensor[(12), uint64], Tensor[(108, 4), int64]) */;
  %587 = @func_2981() /* ty=Tensor[(2340), int16] */;
  %588 = %579.1;
  %589 = @func_3355() /* ty=Tensor[(15, 12, 13), bool] */;
  %590 = %586.1;
  (%587, %588, %var_6425, %589, %590, %var_6435, meta[relay.Constant][38] /* ty=Tensor[(90), int16] */, %var_6437)
}

def @func_2039(%var_2037: Tensor[(4, 3, 15), float32]) -> Tensor[(4, 3, 15), float32] {
  @func_2036(%var_2037) /* ty=Tensor[(4, 3, 15), float32] */
}

def @func_3742() -> (Tensor[(12, 15, 12), float64],) {
  %591 = @func_3215() /* ty=Tensor[(12, 15, 12), float64] */;
  (%591,)
}

def @func_5937() -> (Tensor[(7, 14, 3), bool], Tensor[(15, 12, 13), float64], Tensor[(15, 12, 13), float32]) {
  @func_5935() /* ty=(Tensor[(7, 14, 3), bool], Tensor[(15, 12, 13), float64], Tensor[(15, 12, 13), float32]) */
}

def @func_4396(%var_4363: Tensor[(11, 16, 6), int32]) -> (Tensor[(11, 16, 6), int32],) {
  %592 = cast(meta[relay.Constant][39] /* ty=Tensor[(11, 16, 6), int32] */, dtype="int32") /* ty=Tensor[(11, 16, 6), int32] */;
  %593 = shape_of(%var_4363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%var_4363, dtype="int32") /* ty=Tensor[(11, 16, 6), int32] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %596 = bitwise_or(%594, %595) /* ty=Tensor[(11, 16, 6), int32] */;
  (%596,)
}

def @func_6010(%var_6000: Tensor[(7, 14, 3), bool]) -> (Tensor[(7, 14, 3), float32], Tensor[(7, 14, 3), uint16]) {
  %597 = @func_3406() /* ty=Tensor[(7, 14, 3), bool] */;
  %598 = cast(%var_6000, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %599 = shape_of(%597, dtype="int32") /* ty=Tensor[(3), int32] */;
  %600 = cast(%597, dtype="float32") /* ty=Tensor[(7, 14, 3), float32] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %602 = cast(%597, dtype="float64") /* ty=Tensor[(7, 14, 3), float64] */;
  %603 = rsqrt(%602) /* ty=Tensor[(7, 14, 3), float64] */;
  %604 = cast(%597, dtype="uint16") /* ty=Tensor[(7, 14, 3), uint16] */;
  %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%603, dtype="uint16") /* ty=Tensor[(7, 14, 3), uint16] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %608 = floor_mod(%600, %601) /* ty=Tensor[(7, 14, 3), float32] */;
  %609 = multiply(%606, %607) /* ty=Tensor[(7, 14, 3), uint16] */;
  (%608, %609)
}

def @func_3420() -> (Tensor[(2340), int16], Tensor[(15, 12, 13), float32]) {
  %610 = @func_3341() /* ty=(Tensor[(2340), int16],) */;
  %611 = %610.0;
  %612 = cast(%611, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %613 = reshape(%612, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), int16] */;
  %614 = @func_894(%613) /* ty=(Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), float32]) */;
  %615 = %614.1;
  (%611, %615)
}

def @func_2609() -> (Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) {
  %616 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 15, 12), float64] */, dtype="float64") /* ty=Tensor[(12, 15, 12), float64] */;
  %617 = cast(meta[relay.Constant][41] /* ty=Tensor[(2340), int16] */, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %618 = reshape(%617, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), int16] */;
  %619 = @func_894(%618) /* ty=(Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), float32]) */;
  %620 = acosh(%616) /* ty=Tensor[(12, 15, 12), float64] */;
  %621 = %619.0;
  (%620, %621, meta[relay.Constant][41] /* ty=Tensor[(2340), int16] */)
}

def @func_3787() -> Tensor[(2340), float64] {
  %622 = @func_3341() /* ty=(Tensor[(2340), int16],) */;
  %623 = %622.0;
  %624 = cast(%623, dtype="float64") /* ty=Tensor[(2340), float64] */;
  sin(%624) /* ty=Tensor[(2340), float64] */
}

def @func_1592(%var_1589: int16, %var_1590: Tensor[(15, 1, 6), int16], %var_1591: Tensor[(108, 4), int64]) -> (Tensor[(15, 1, 6), int16], Tensor[(6, 2, 1), uint64], Tensor[(12), uint64], Tensor[(108, 4), int64]) {
  @func_1587(%var_1589, %var_1590, %var_1591) /* ty=(Tensor[(15, 1, 6), int16], Tensor[(6, 2, 1), uint64], Tensor[(12), uint64], Tensor[(108, 4), int64]) */
}

def @func_5244(%var_5226: Tensor[(1890), bool]) -> (Tensor[(2340), int16], Tensor[(9, 14, 15), float32], Tensor[(1890), bool], Tensor[(15, 12, 13), bool]) {
  %625 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %626 = cast(%var_5226, dtype="bool") /* ty=Tensor[(1890), bool] */;
  %627 = cast(%var_5226, dtype="bool") /* ty=Tensor[(1890), bool] */;
  %628 = cast(%var_5226, dtype="bool") /* ty=Tensor[(1890), bool] */;
  %629 = reshape(%626, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), bool] */;
  %630 = reshape(%627, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), bool] */;
  %631 = reshape(%628, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), bool] */;
  %632 = @func_4073(%629, %630, %631) /* ty=(Tensor[(84), float32], Tensor[(2340), int16], Tensor[(9, 14, 15), float64], Tensor[(9, 14, 15), uint64], Tensor[(9, 14, 15), float32]) */;
  %633 = %625.2;
  %634 = cast(%633, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %635 = reshape(%634, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), int16] */;
  %636 = @func_894(%635) /* ty=(Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), float32]) */;
  %637 = %632.4;
  %638 = %636.0;
  (%633, %637, %var_5226, %638)
}

def @func_3067(%var_3024: Tensor[(12, 6, 9), float64], %var_3033: Tensor[(84), float32], %var_3045: Tensor[(432), int64], %var_3054: Tensor[(45, 2), int16]) -> (Tensor[(12, 6, 9), float64], Tensor[(14, 1, 6), float64], Tensor[(84), float32], Tensor[(2340), int16], Tensor[(7, 14, 3), bool], Tensor[(6, 6, 12), int64], Tensor[(432), int64], Tensor[(12), uint64], int16, Tensor[(45, 2), int16], Tensor[(84), float32], Tensor[(336), uint8]) {
  %639 = cast(meta[relay.Constant][42] /* ty=Tensor[(12, 6, 9), float64] */, dtype="float64") /* ty=Tensor[(12, 6, 9), float64] */;
  %640 = shape_of(%var_3024, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(%var_3024, dtype="float64") /* ty=Tensor[(12, 6, 9), float64] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %643 = cast(%var_3033, dtype="float32") /* ty=Tensor[(84), float32] */;
  %644 = cast(meta[relay.Constant][43] /* ty=Tensor[(2340), int16] */, dtype="int16") /* ty=Tensor[(2340), int16] */;
  %645 = reshape(%643, newshape=[14, 1, 6]) /* ty=Tensor[(14, 1, 6), float32] */;
  %646 = reshape(%644, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %647 = @func_1644(%645, %646) /* ty=(Tensor[(14, 1, 6), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %648 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
  %649 = cast(%var_3045, dtype="int64") /* ty=Tensor[(432), int64] */;
  %650 = cast(%var_3045, dtype="int64") /* ty=Tensor[(432), int64] */;
  %651 = reshape(%649, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
  %652 = reshape(%650, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
  %653 = @func_239(%651, %652) /* ty=(Tensor[(6, 6, 12), int64], Tensor[(6, 6, 12), int16], Tensor[(6, 6, 12), float32]) */;
  %654 = cast(meta[relay.Constant][44] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %655 = cast(%var_3054, dtype="int16") /* ty=Tensor[(45, 2), int16] */;
  %656 = %653.0;
  %657 = cast(%656, dtype="int64") /* ty=Tensor[(6, 6, 12), int64] */;
  %658 = reshape(%654, newshape=[]) /* ty=int16 */;
  %659 = reshape(%655, newshape=[15, 1, 6]) /* ty=Tensor[(15, 1, 6), int16] */;
  %660 = reshape(%657, newshape=[108, 4]) /* ty=Tensor[(108, 4), int64] */;
  %661 = @func_1587(%658, %659, %660) /* ty=(Tensor[(15, 1, 6), int16], Tensor[(6, 2, 1), uint64], Tensor[(12), uint64], Tensor[(108, 4), int64]) */;
  %662 = cast(meta[relay.Constant][45] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %663 = reshape(%662, newshape=[2, 168]) /* ty=Tensor[(2, 168), uint8] */;
  %664 = @func_2663(%663) /* ty=(Tensor[(12, 15, 12), bool], Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), bool], Tensor[(2, 168), uint8], Tensor[(84), float32]) */;
  %665 = power(%641, %642) /* ty=Tensor[(12, 6, 9), float64] */;
  %666 = %647.0;
  %667 = %648.1;
  %668 = %661.2;
  %669 = %664.4;
  (%665, %666, %var_3033, meta[relay.Constant][43] /* ty=Tensor[(2340), int16] */, %667, %656, %var_3045, %668, meta[relay.Constant][44] /* ty=int16 */, %var_3054, %669, meta[relay.Constant][45] /* ty=Tensor[(336), uint8] */)
}

def @func_3357() -> Tensor[(15, 12, 13), bool] {
  @func_3355() /* ty=Tensor[(15, 12, 13), bool] */
}

def @func_3407() -> Tensor[(7, 14, 3), bool] {
  %671 = fn () -> Tensor[(7, 14, 3), bool] {
    %670 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
    %670.1
  };
  %671() /* ty=Tensor[(7, 14, 3), bool] */
}

def @func_1270(%var_1268: Tensor[(12, 1, 12), int8], %var_1269: Tensor[(12, 1, 12), int8]) -> (Tensor[(12, ?, 12), bool],) {
  %677 = fn (%var_1254: Tensor[(12, 1, 12), int8], %var_1255: Tensor[(12, 1, 12), int8]) -> (Tensor[(12, ?, 12), bool],) {
    %672 = cast(%var_1255, dtype="bool") /* ty=Tensor[(12, 1, 12), bool] */;
    %673 = shape_of(%var_1254, dtype="int32") /* ty=Tensor[(3), int32] */;
    %674 = cast(%var_1254, dtype="bool") /* ty=Tensor[(12, 1, 12), bool] */;
    %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %676 = greater_equal(%674, %675) /* ty=Tensor[(12, ?, 12), bool] */;
    (%676,)
  };
  %677(%var_1268, %var_1269) /* ty=(Tensor[(12, ?, 12), bool],) */
}

def @func_5403(%var_5400: Tensor[(2160), float64], %var_5401: Tensor[(432), int64], %var_5402: Tensor[(1092), float64]) -> (Tensor[(4, 3, 15), float32], Tensor[(2160), float64], Tensor[(432), int64], Tensor[(210), int64], Tensor[(2340), int16], Tensor[(1092), float64], Tensor[(2340), float32]) {
  @func_5398(%var_5400, %var_5401, %var_5402) /* ty=(Tensor[(4, 3, 15), float32], Tensor[(2160), float64], Tensor[(432), int64], Tensor[(210), int64], Tensor[(2340), int16], Tensor[(1092), float64], Tensor[(2340), float32]) */
}

def @func_5874() -> (Tensor[(144, 1), int8],) {
  @func_5872() /* ty=(Tensor[(144, 1), int8],) */
}

def @func_6023() -> (Tensor[(15, 12, 13), float64],) {
  %680 = fn () -> (Tensor[(15, 12, 13), float64],) {
    %678 = @func_4879() /* ty=(Tensor[(15, 12, 13), float64],) */;
    %679 = %678.0;
    (%679,)
  };
  %680() /* ty=(Tensor[(15, 12, 13), float64],) */
}

def @func_6297(%var_6295: Tensor[(2, 10, 10), float32]) -> (Tensor[(2, 10, 10), bool], Tensor[(12, ?, 12), float32], Tensor[(7, 14, 3), bool]) {
  @func_6294(%var_6295) /* ty=(Tensor[(2, 10, 10), bool], Tensor[(12, ?, 12), float32], Tensor[(7, 14, 3), bool]) */
}

def @func_5247(%var_5245: Tensor[(1890), bool]) -> (Tensor[(2340), int16], Tensor[(9, 14, 15), float32], Tensor[(1890), bool], Tensor[(15, 12, 13), bool]) {
  @func_5244(%var_5245) /* ty=(Tensor[(2340), int16], Tensor[(9, 14, 15), float32], Tensor[(1890), bool], Tensor[(15, 12, 13), bool]) */
}

def @func_4177() -> Tensor[(2340), float64] {
  @func_3170() /* ty=Tensor[(2340), float64] */
}

def @func_5511(%var_5509: Tensor[(144), int8], %var_5510: Tensor[(15, 12, 13), float64]) -> (Tensor[(15, 12, 13), float32], Tensor[(12, ?, 12), bool]) {
  @func_5507(%var_5509, %var_5510) /* ty=(Tensor[(15, 12, 13), float32], Tensor[(12, ?, 12), bool]) */
}

def @func_6321(%var_6308: Tensor[(11, 3, 15), float32], %var_6309: Tensor[(11, 3, 15), float32]) -> Tensor[(11, 3, 15), float32] {
  %681 = cast(%var_6309, dtype="float32") /* ty=Tensor[(11, 3, 15), float32] */;
  %682 = shape_of(%var_6308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %683 = cast(%var_6308, dtype="float32") /* ty=Tensor[(11, 3, 15), float32] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%683, %684) /* ty=Tensor[(11, 3, 15), float32] */
}

def @func_2895() -> (Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) {
  %685 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %686 = %685.0;
  %687 = cast(%686, dtype="float64") /* ty=Tensor[(12, 15, 12), float64] */;
  %688 = cast(meta[relay.Constant][46] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
  %689 = reshape(%688, newshape=[10, 5, 13]) /* ty=Tensor[(10, 5, 13), float32] */;
  %690 = @func_143(%689) /* ty=(Tensor[(10, 5, 13), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), bool], Tensor[(7, 14, 3), int16]) */;
  %691 = cast(meta[relay.Constant][47] /* ty=Tensor[(650), float32] */, dtype="uint64") /* ty=Tensor[(650), uint64] */;
  %692 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(650), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %693 = cast(meta[relay.Constant][46] /* ty=Tensor[(650), float32] */, dtype="uint64") /* ty=Tensor[(650), uint64] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %695 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %696 = cosh(%687) /* ty=Tensor[(12, 15, 12), float64] */;
  %697 = %690.2;
  %698 = maximum(%693, %694) /* ty=Tensor[(650), uint64] */;
  %699 = %695.2;
  (%696, %697, %698, %699)
}

def @func_6186() -> (Tensor[(12, 15, 12), float64],) {
  @func_6184() /* ty=(Tensor[(12, 15, 12), float64],) */
}

def @func_5332() -> (Tensor[(2340), float64], Tensor[(6, 6, 12), int64], Tensor[(432), int64]) {
  %708 = fn () -> (Tensor[(2340), float64], Tensor[(6, 6, 12), int64], Tensor[(432), int64]) {
    %700 = @func_3627() /* ty=(Tensor[(2340), uint16], Tensor[(12, ?, 12), bool], Tensor[(144, 1), int8], Tensor[(2340), float64]) */;
    %701 = cast(meta[relay.Constant][48] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
    %702 = cast(meta[relay.Constant][48] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
    %703 = reshape(%701, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
    %704 = reshape(%702, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
    %705 = @func_239(%703, %704) /* ty=(Tensor[(6, 6, 12), int64], Tensor[(6, 6, 12), int16], Tensor[(6, 6, 12), float32]) */;
    %706 = %700.3;
    %707 = %705.0;
    (%706, %707, meta[relay.Constant][48] /* ty=Tensor[(432), int64] */)
  };
  %708() /* ty=(Tensor[(2340), float64], Tensor[(6, 6, 12), int64], Tensor[(432), int64]) */
}

def @func_3926() -> (Tensor[(2340), int32],) {
  @func_3924() /* ty=(Tensor[(2340), int32],) */
}

def @func_3171() -> Tensor[(2340), float64] {
  %711 = fn () -> Tensor[(2340), float64] {
    %709 = @func_2981() /* ty=Tensor[(2340), int16] */;
    %710 = cast(%709, dtype="float64") /* ty=Tensor[(2340), float64] */;
    asin(%710) /* ty=Tensor[(2340), float64] */
  };
  %711() /* ty=Tensor[(2340), float64] */
}

def @func_3496(%var_3484: Tensor[(672), uint16]) -> (Tensor[(12, 15, 12), float64], Tensor[(65, 10), float32], Tensor[(672), uint16]) {
  %712 = @func_3198() /* ty=(Tensor[(12, 15, 12), float64],) */;
  %713 = cast(%var_3484, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %714 = cast(%var_3484, dtype="uint16") /* ty=Tensor[(672), uint16] */;
  %715 = reshape(%713, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %716 = reshape(%714, newshape=[7, 6, 16]) /* ty=Tensor[(7, 6, 16), uint16] */;
  %717 = @func_714(%715, %716) /* ty=(Tensor[(7, 14, 3), bool], Tensor[(65, 10), float32], Tensor[(7, 14, 3), bool], Tensor[(7, 6, 16), bool]) */;
  %718 = %712.0;
  %719 = %717.1;
  (%718, %719, %var_3484)
}

def @func_5171() -> (Tensor[(2340), float64], Tensor[(2340), int16]) {
  %724 = fn () -> (Tensor[(2340), float64], Tensor[(2340), int16]) {
    %720 = @func_3959() /* ty=(Tensor[(2340), float64], Tensor[(15, 12, 13), float32]) */;
    %721 = @func_3420() /* ty=(Tensor[(2340), int16], Tensor[(15, 12, 13), float32]) */;
    %722 = %720.0;
    %723 = %721.0;
    (%722, %723)
  };
  %724() /* ty=(Tensor[(2340), float64], Tensor[(2340), int16]) */
}

def @func_2796(%var_2787: Tensor[(12, 15, 12), float64]) -> Tensor[(12, 15, 12), bool] {
  %725 = @func_2614() /* ty=Tensor[(12, 15, 12), float64] */;
  %726 = cast(%var_2787, dtype="bool") /* ty=Tensor[(12, 15, 12), bool] */;
  %727 = shape_of(%725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %728 = cast(%725, dtype="bool") /* ty=Tensor[(12, 15, 12), bool] */;
  %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%728, %729) /* ty=Tensor[(12, 15, 12), bool] */
}

def @func_2518(%var_2510: Tensor[(13, 15, 1), float32]) -> (Tensor[(13, 15, 1), float32], Tensor[(12, ?, 12), bool], Tensor[(144), int8]) {
  %730 = cast(%var_2510, dtype="float32") /* ty=Tensor[(13, 15, 1), float32] */;
  %731 = cast(meta[relay.Constant][49] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
  %732 = cast(meta[relay.Constant][49] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
  %733 = reshape(%731, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
  %734 = reshape(%732, newshape=[12, 1, 12]) /* ty=Tensor[(12, 1, 12), int8] */;
  %735 = @func_1267(%733, %734) /* ty=(Tensor[(12, ?, 12), bool],) */;
  %736 = rsqrt(%730) /* ty=Tensor[(13, 15, 1), float32] */;
  %737 = %735.0;
  (%736, %737, meta[relay.Constant][49] /* ty=Tensor[(144), int8] */)
}

def @func_4341(%var_4339: Tensor[(9, 10, 2), uint8], %var_4340: Tensor[(9, 10, 2), uint8]) -> (Tensor[(9, 10, 2), uint8], Tensor[(12, 15, 12), float64]) {
  %745 = fn (%var_4328: Tensor[(9, 10, 2), uint8], %var_4329: Tensor[(9, 10, 2), uint8]) -> (Tensor[(9, 10, 2), uint8], Tensor[(12, 15, 12), float64]) {
    %738 = cast(%var_4329, dtype="uint8") /* ty=Tensor[(9, 10, 2), uint8] */;
    %739 = shape_of(%var_4328, dtype="int32") /* ty=Tensor[(3), int32] */;
    %740 = cast(%var_4328, dtype="uint8") /* ty=Tensor[(9, 10, 2), uint8] */;
    %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %742 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
    %743 = minimum(%740, %741) /* ty=Tensor[(9, 10, 2), uint8] */;
    %744 = %742.0;
    (%743, %744)
  };
  %745(%var_4339, %var_4340) /* ty=(Tensor[(9, 10, 2), uint8], Tensor[(12, 15, 12), float64]) */
}

def @func_2936(%var_2935: Tensor[(13, 6, 14), float64]) -> (Tensor[(2340), int16], Tensor[(13, 6, 14), float32]) {
  %755 = fn (%var_2912: Tensor[(13, 6, 14), float64]) -> (Tensor[(2340), int16], Tensor[(13, 6, 14), float32]) {
    %746 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
    %747 = cast(%var_2912, dtype="float64") /* ty=Tensor[(13, 6, 14), float64] */;
    %748 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(13, 6, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %749 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 6, 14), float64] */, dtype="float64") /* ty=Tensor[(13, 6, 14), float64] */;
    %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %751 = mod(%749, %750) /* ty=Tensor[(13, 6, 14), float64] */;
    %752 = cast(%751, dtype="float32") /* ty=Tensor[(13, 6, 14), float32] */;
    %753 = %746.3;
    %754 = sinh(%752) /* ty=Tensor[(13, 6, 14), float32] */;
    (%753, %754)
  };
  %755(%var_2935) /* ty=(Tensor[(2340), int16], Tensor[(13, 6, 14), float32]) */
}

def @func_4317() -> Tensor[(2340), float64] {
  %756 = fn () -> Tensor[(2340), float64] {
    @func_4177() /* ty=Tensor[(2340), float64] */
  };
  %756() /* ty=Tensor[(2340), float64] */
}

def @func_6759() -> (Tensor[(12, 15, 12), float64],) {
  @func_6757() /* ty=(Tensor[(12, 15, 12), float64],) */
}

def @func_1520(%var_1518: Tensor[(7, 11, 15), float32], %var_1519: Tensor[(7, 11, 15), float32]) -> (Tensor[(12, ?, 12), bool], Tensor[(144), int8], Tensor[(7, 11, 15), int64], Tensor[(7, 11, 15), bool]) {
  @func_1516(%var_1518, %var_1519) /* ty=(Tensor[(12, ?, 12), bool], Tensor[(144), int8], Tensor[(7, 11, 15), int64], Tensor[(7, 11, 15), bool]) */
}

def @func_4555(%var_4552: Tensor[(4, 7, 3), float64], %var_4553: Tensor[(4, 7, 3), float64], %var_4554: Tensor[(4, 7, 3), float64]) -> (Tensor[(7, 14, 3), bool], Tensor[(4, 7, 3), bool], Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32], Tensor[(13, 2, 8), float32], Tensor[(144), bool], Tensor[(7, 14, 3), bool], Tensor[(15, 12, 13), float64], Tensor[(12, 15, 12), float64], Tensor[(4, 7, 3), int16], Tensor[(7, 14, 3), bool], Tensor[(2340), int16]) {
  %798 = fn (%var_4455: Tensor[(4, 7, 3), float64], %var_4456: Tensor[(4, 7, 3), float64], %var_4464: Tensor[(4, 7, 3), float64]) -> (Tensor[(7, 14, 3), bool], Tensor[(4, 7, 3), bool], Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32], Tensor[(13, 2, 8), float32], Tensor[(144), bool], Tensor[(7, 14, 3), bool], Tensor[(15, 12, 13), float64], Tensor[(12, 15, 12), float64], Tensor[(4, 7, 3), int16], Tensor[(7, 14, 3), bool], Tensor[(2340), int16]) {
    %757 = cast(%var_4464, dtype="bool") /* ty=Tensor[(4, 7, 3), bool] */;
    %758 = shape_of(%var_4455, dtype="int32") /* ty=Tensor[(3), int32] */;
    %759 = cast(%var_4455, dtype="bool") /* ty=Tensor[(4, 7, 3), bool] */;
    %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %761 = @func_3680() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) */;
    %762 = cast(meta[relay.Constant][51] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
    %763 = reshape(%762, newshape=[13, 2, 8]) /* ty=Tensor[(13, 2, 8), float32] */;
    %764 = @func_3680() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) */;
    %765 = cast(meta[relay.Constant][52] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
    %766 = reshape(%765, newshape=[2, 72]) /* ty=Tensor[(2, 72), int8] */;
    %767 = @func_2764(%766) /* ty=(Tensor[(2340), int16], Tensor[(12, ?, 12), bool], Tensor[(2, 72), int8]) */;
    %768 = %767.2;
    %769 = cast(%768, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
    %770 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(144), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %771 = cast(meta[relay.Constant][52] /* ty=Tensor[(144), int8] */, dtype="bool") /* ty=Tensor[(144), bool] */;
    %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?), bool] */;
    %773 = @func_3742() /* ty=(Tensor[(12, 15, 12), float64],) */;
    %774 = cast(%var_4456, dtype="float64") /* ty=Tensor[(4, 7, 3), float64] */;
    %775 = shape_of(%var_4455, dtype="int32") /* ty=Tensor[(3), int32] */;
    %776 = cast(%var_4455, dtype="float64") /* ty=Tensor[(4, 7, 3), float64] */;
    %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %778 = multiply(%776, %777) /* ty=Tensor[(4, 7, 3), float64] */;
    %779 = cast(%778, dtype="int16") /* ty=Tensor[(4, 7, 3), int16] */;
    %780 = shape_of(%var_4455, dtype="int32") /* ty=Tensor[(3), int32] */;
    %781 = cast(%var_4455, dtype="int16") /* ty=Tensor[(4, 7, 3), int16] */;
    %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %783 = @func_3933() /* ty=Tensor[(7, 14, 3), bool] */;
    %784 = cast(%783, dtype="bool") /* ty=Tensor[(7, 14, 3), bool] */;
    %785 = reshape(%784, newshape=[7, 14, 3]) /* ty=Tensor[(7, 14, 3), bool] */;
    %786 = @func_3420() /* ty=(Tensor[(2340), int16], Tensor[(15, 12, 13), float32]) */;
    %787 = @func_3933() /* ty=Tensor[(7, 14, 3), bool] */;
    %788 = not_equal(%759, %760) /* ty=Tensor[(4, 7, 3), bool] */;
    %789 = %761.0;
    %790 = @func_444(%763) /* ty=Tensor[(13, 2, 8), float32] */;
    %791 = %764.1;
    %792 = less(%771, %772) /* ty=Tensor[(144), bool] */;
    %793 = @func_4097() /* ty=Tensor[(15, 12, 13), float64] */;
    %794 = %773.0;
    %795 = logical_xor(%781, %782) /* ty=Tensor[(4, 7, 3), int16] */;
    %796 = @func_57(%785) /* ty=Tensor[(7, 14, 3), bool] */;
    %797 = %786.0;
    (%787, %788, %789, %790, meta[relay.Constant][51] /* ty=Tensor[(208), float32] */, %791, %792, %783, %793, %794, %795, %796, %797)
  };
  %798(%var_4552, %var_4553, %var_4554) /* ty=(Tensor[(7, 14, 3), bool], Tensor[(4, 7, 3), bool], Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32], Tensor[(13, 2, 8), float32], Tensor[(144), bool], Tensor[(7, 14, 3), bool], Tensor[(15, 12, 13), float64], Tensor[(12, 15, 12), float64], Tensor[(4, 7, 3), int16], Tensor[(7, 14, 3), bool], Tensor[(2340), int16]) */
}

def @func_4099() -> Tensor[(15, 12, 13), float64] {
  @func_4097() /* ty=Tensor[(15, 12, 13), float64] */
}

def @func_6133(%var_6132: Tensor[(3, 30), int16]) -> (Tensor[(2340), bool], Tensor[(12), uint64], Tensor[(648), float64], Tensor[(84, 1), float32], Tensor[(432), int64], Tensor[(3, 30), int16], Tensor[(2340), bool]) {
  %820 = fn (%var_6114: Tensor[(3, 30), int16]) -> (Tensor[(2340), bool], Tensor[(12), uint64], Tensor[(648), float64], Tensor[(84, 1), float32], Tensor[(432), int64], Tensor[(3, 30), int16], Tensor[(2340), bool]) {
    %799 = @func_4177() /* ty=Tensor[(2340), float64] */;
    %800 = cast(meta[relay.Constant][53] /* ty=Tensor[(2340), float64] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %801 = shape_of(%799, dtype="int32") /* ty=Tensor[(1), int32] */;
    %802 = cast(%799, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?), bool] */;
    %804 = cast(meta[relay.Constant][54] /* ty=Tensor[(648), float64] */, dtype="float64") /* ty=Tensor[(648), float64] */;
    %805 = cast(meta[relay.Constant][55] /* ty=Tensor[(84, 1), float32] */, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
    %806 = cast(meta[relay.Constant][56] /* ty=Tensor[(432), int64] */, dtype="int64") /* ty=Tensor[(432), int64] */;
    %807 = cast(%var_6114, dtype="int16") /* ty=Tensor[(3, 30), int16] */;
    %808 = reshape(%804, newshape=[12, 6, 9]) /* ty=Tensor[(12, 6, 9), float64] */;
    %809 = reshape(%805, newshape=[84]) /* ty=Tensor[(84), float32] */;
    %810 = reshape(%806, newshape=[432]) /* ty=Tensor[(432), int64] */;
    %811 = reshape(%807, newshape=[45, 2]) /* ty=Tensor[(45, 2), int16] */;
    %812 = @func_3067(%808, %809, %810, %811) /* ty=(Tensor[(12, 6, 9), float64], Tensor[(14, 1, 6), float64], Tensor[(84), float32], Tensor[(2340), int16], Tensor[(7, 14, 3), bool], Tensor[(6, 6, 12), int64], Tensor[(432), int64], Tensor[(12), uint64], int16, Tensor[(45, 2), int16], Tensor[(84), float32], Tensor[(336), uint8]) */;
    %813 = cast(%799, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %814 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(2340), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %815 = cast(meta[relay.Constant][53] /* ty=Tensor[(2340), float64] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?), bool] */;
    %817 = logical_and(%802, %803) /* ty=Tensor[(2340), bool] */;
    %818 = %812.7;
    %819 = less(%815, %816) /* ty=Tensor[(2340), bool] */;
    (%817, %818, meta[relay.Constant][54] /* ty=Tensor[(648), float64] */, meta[relay.Constant][55] /* ty=Tensor[(84, 1), float32] */, meta[relay.Constant][56] /* ty=Tensor[(432), int64] */, %var_6114, %819)
  };
  %820(%var_6132) /* ty=(Tensor[(2340), bool], Tensor[(12), uint64], Tensor[(648), float64], Tensor[(84, 1), float32], Tensor[(432), int64], Tensor[(3, 30), int16], Tensor[(2340), bool]) */
}

def @func_6663() -> (Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool]) {
  %824 = fn () -> (Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool]) {
    %821 = @func_2895() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(7, 14, 3), bool], Tensor[(650), uint64], Tensor[(2340), int16]) */;
    %822 = %821.0;
    %823 = @func_3355() /* ty=Tensor[(15, 12, 13), bool] */;
    (%822, %823)
  };
  %824() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool]) */
}

def @main(%var_6782: Tensor[(1, 9, 6), float32]) -> (Tensor[(1, 9, 6), float32],) {
  %825 = cast(0.803689f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %826 = cast(%var_6782, dtype="float32") /* ty=Tensor[(1, 9, 6), float32] */;
  %827 = floor_mod(%825, %826) /* ty=Tensor[(1, 9, 6), float32] */;
  (%827,)
}

def @func_4689() -> Tensor[(15, 12, 13), bool] {
  @func_4687() /* ty=Tensor[(15, 12, 13), bool] */
}

def @func_602(%var_599: uint64, %var_600: Tensor[(6, 2, 1), uint64], %var_601: Tensor[(12, 36), int64]) -> (Tensor[(6, 2, 1), uint64], Tensor[(13, 2, 8), float32], Tensor[(208), float32], Tensor[(13, 2, 8), float32], Tensor[(12, 36), bool]) {
  %850 = fn (%var_542: uint64, %var_543: Tensor[(6, 2, 1), uint64], %var_562: Tensor[(12, 36), int64]) -> (Tensor[(6, 2, 1), uint64], Tensor[(13, 2, 8), float32], Tensor[(208), float32], Tensor[(13, 2, 8), float32], Tensor[(12, 36), bool]) {
    %828 = cast(%var_542, dtype="uint64") /* ty=uint64 */;
    %829 = cast(%var_543, dtype="uint64") /* ty=Tensor[(6, 2, 1), uint64] */;
    %830 = cast(meta[relay.Constant][57] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
    %831 = reshape(%830, newshape=[13, 2, 8]) /* ty=Tensor[(13, 2, 8), float32] */;
    %832 = @func_444(%831) /* ty=Tensor[(13, 2, 8), float32] */;
    %833 = cast(%832, dtype="float32") /* ty=Tensor[(13, 2, 8), float32] */;
    %834 = reshape(%833, newshape=[13, 2, 8]) /* ty=Tensor[(13, 2, 8), float32] */;
    %835 = cast(%var_562, dtype="float64") /* ty=Tensor[(12, 36), float64] */;
    %836 = sinh(%835) /* ty=Tensor[(12, 36), float64] */;
    %837 = cast(%var_562, dtype="int64") /* ty=Tensor[(12, 36), int64] */;
    %838 = cast(%var_562, dtype="int64") /* ty=Tensor[(12, 36), int64] */;
    %839 = reshape(%837, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
    %840 = reshape(%838, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
    %841 = @func_239(%839, %840) /* ty=(Tensor[(6, 6, 12), int64], Tensor[(6, 6, 12), int16], Tensor[(6, 6, 12), float32]) */;
    %842 = %841.2;
    %843 = cast(%842, dtype="bool") /* ty=Tensor[(6, 6, 12), bool] */;
    %844 = shape_of(%836, dtype="int32") /* ty=Tensor[(2), int32] */;
    %845 = cast(%836, dtype="bool") /* ty=Tensor[(12, 36), bool] */;
    %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %847 = multiply(%828, %829) /* ty=Tensor[(6, 2, 1), uint64] */;
    %848 = @func_444(%834) /* ty=Tensor[(13, 2, 8), float32] */;
    %849 = greater_equal(%845, %846) /* ty=Tensor[(12, 36), bool] */;
    (%847, %832, meta[relay.Constant][57] /* ty=Tensor[(208), float32] */, %848, %849)
  };
  %850(%var_599, %var_600, %var_601) /* ty=(Tensor[(6, 2, 1), uint64], Tensor[(13, 2, 8), float32], Tensor[(208), float32], Tensor[(13, 2, 8), float32], Tensor[(12, 36), bool]) */
}

def @func_2663(%var_2655: Tensor[(2, 168), uint8]) -> (Tensor[(12, 15, 12), bool], Tensor[(15, 12, 13), bool], Tensor[(15, 12, 13), bool], Tensor[(2, 168), uint8], Tensor[(84), float32]) {
  %851 = @func_2614() /* ty=Tensor[(12, 15, 12), float64] */;
  %852 = cast(meta[relay.Constant][58] /* ty=Tensor[(12, 15, 12), float64] */, dtype="bool") /* ty=Tensor[(12, 15, 12), bool] */;
  %853 = shape_of(%851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %854 = cast(%851, dtype="bool") /* ty=Tensor[(12, 15, 12), bool] */;
  %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %856 = @func_2609() /* ty=(Tensor[(12, 15, 12), float64], Tensor[(15, 12, 13), bool], Tensor[(2340), int16]) */;
  %857 = cast(%var_2655, dtype="uint8") /* ty=Tensor[(2, 168), uint8] */;
  %858 = cast(%var_2655, dtype="uint8") /* ty=Tensor[(2, 168), uint8] */;
  %859 = cast(meta[relay.Constant][59] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %860 = %856.1;
  %861 = cast(%860, dtype="int16") /* ty=Tensor[(15, 12, 13), int16] */;
  %862 = reshape(%857, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %863 = reshape(%858, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %864 = reshape(%859, newshape=[84]) /* ty=Tensor[(84), float32] */;
  %865 = reshape(%861, newshape=[2340]) /* ty=Tensor[(2340), int16] */;
  %866 = @func_2134(%862, %863, %864, %865) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(15, 12, 13), bool], Tensor[(84), float32], Tensor[(2340), int16]) */;
  %867 = equal(%854, %855) /* ty=Tensor[(12, 15, 12), bool] */;
  %868 = %866.1;
  (%867, %860, %868, %var_2655, meta[relay.Constant][59] /* ty=Tensor[(84), float32] */)
}

def @func_3342() -> (Tensor[(2340), int16],) {
  %870 = fn () -> (Tensor[(2340), int16],) {
    %869 = @func_2981() /* ty=Tensor[(2340), int16] */;
    (%869,)
  };
  %870() /* ty=(Tensor[(2340), int16],) */
}

def @func_5935() -> (Tensor[(7, 14, 3), bool], Tensor[(15, 12, 13), float64], Tensor[(15, 12, 13), float32]) {
  %871 = @func_4631() /* ty=(Tensor[(7, 14, 3), bool],) */;
  %872 = @func_4879() /* ty=(Tensor[(15, 12, 13), float64],) */;
  %873 = @func_5817() /* ty=(Tensor[(15, 12, 13), float32],) */;
  %874 = %871.0;
  %875 = %872.0;
  %876 = %873.0;
  (%874, %875, %876)
}

def @func_3811() -> Tensor[(12, ?, 12), float32] {
  @func_3809() /* ty=Tensor[(12, ?, 12), float32] */
}

def @func_2036(%var_2030: Tensor[(4, 3, 15), float32]) -> Tensor[(4, 3, 15), float32] {
  %877 = cast(%var_2030, dtype="float32") /* ty=Tensor[(4, 3, 15), float32] */;
  cosh(%877) /* ty=Tensor[(4, 3, 15), float32] */
}

def @func_3200() -> (Tensor[(12, 15, 12), float64],) {
  @func_3198() /* ty=(Tensor[(12, 15, 12), float64],) */
}

def @func_1930(%var_1925: Tensor[(5, 7, 6), int64], %var_1926: Tensor[(84), float32], %var_1927: Tensor[(2340), int16], %var_1928: int16, %var_1929: Tensor[(12, 36), int64]) -> (Tensor[(5, 7, 6), int64], Tensor[(84), float32], Tensor[(15, 12, 13), bool], Tensor[(12), uint64], int16, Tensor[(90), int16], Tensor[(12, 36), int64]) {
  @func_1923(%var_1925, %var_1926, %var_1927, %var_1928, %var_1929) /* ty=(Tensor[(5, 7, 6), int64], Tensor[(84), float32], Tensor[(15, 12, 13), bool], Tensor[(12), uint64], int16, Tensor[(90), int16], Tensor[(12, 36), int64]) */
}

def @func_4880() -> (Tensor[(15, 12, 13), float64],) {
  %879 = fn () -> (Tensor[(15, 12, 13), float64],) {
    %878 = @func_4097() /* ty=Tensor[(15, 12, 13), float64] */;
    (%878,)
  };
  %879() /* ty=(Tensor[(15, 12, 13), float64],) */
}

def @func_242(%var_240: Tensor[(6, 6, 12), int64], %var_241: Tensor[(6, 6, 12), int64]) -> (Tensor[(6, 6, 12), int64], Tensor[(6, 6, 12), int16], Tensor[(6, 6, 12), float32]) {
  %897 = fn (%var_200: Tensor[(6, 6, 12), int64], %var_201: Tensor[(6, 6, 12), int64]) -> (Tensor[(6, 6, 12), int64], Tensor[(6, 6, 12), int16], Tensor[(6, 6, 12), float32]) {
    %880 = cast(%var_201, dtype="int64") /* ty=Tensor[(6, 6, 12), int64] */;
    %881 = shape_of(%var_200, dtype="int32") /* ty=Tensor[(3), int32] */;
    %882 = cast(%var_200, dtype="int64") /* ty=Tensor[(6, 6, 12), int64] */;
    %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %884 = cast(meta[relay.Constant][60] /* ty=Tensor[(6, 6, 12), int64] */, dtype="int16") /* ty=Tensor[(6, 6, 12), int16] */;
    %885 = shape_of(%var_200, dtype="int32") /* ty=Tensor[(3), int32] */;
    %886 = cast(%var_200, dtype="int16") /* ty=Tensor[(6, 6, 12), int16] */;
    %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %888 = cast(meta[relay.Constant][60] /* ty=Tensor[(6, 6, 12), int64] */, dtype="float32") /* ty=Tensor[(6, 6, 12), float32] */;
    %889 = log(%888) /* ty=Tensor[(6, 6, 12), float32] */;
    %890 = cast(meta[relay.Constant][60] /* ty=Tensor[(6, 6, 12), int64] */, dtype="float32") /* ty=Tensor[(6, 6, 12), float32] */;
    %891 = shape_of(%889, dtype="int32") /* ty=Tensor[(3), int32] */;
    %892 = cast(%889, dtype="float32") /* ty=Tensor[(6, 6, 12), float32] */;
    %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %894 = maximum(%882, %883) /* ty=Tensor[(6, 6, 12), int64] */;
    %895 = bitwise_or(%886, %887) /* ty=Tensor[(6, 6, 12), int16] */;
    %896 = floor_divide(%892, %893) /* ty=Tensor[(6, 6, 12), float32] */;
    (%894, %895, %896)
  };
  %897(%var_240, %var_241) /* ty=(Tensor[(6, 6, 12), int64], Tensor[(6, 6, 12), int16], Tensor[(6, 6, 12), float32]) */
}

def @func_3422() -> (Tensor[(2340), int16], Tensor[(15, 12, 13), float32]) {
  @func_3420() /* ty=(Tensor[(2340), int16], Tensor[(15, 12, 13), float32]) */
}

def @func_5741(%var_5737: Tensor[(60, 12), float32], %var_5738: Tensor[(90), int16], %var_5739: Tensor[(4, 108), int64], %var_5740: Tensor[(60, 12), float32]) -> (Tensor[(15, 12, 13), float32], Tensor[(1920), int64], Tensor[(1920), int64], Tensor[(90), int16], Tensor[(4, 108), int64], Tensor[(60, 12), bool], Tensor[(6, 6, 12), float32]) {
  %926 = fn (%var_5697: Tensor[(60, 12), float32], %var_5699: Tensor[(90), int16], %var_5702: Tensor[(4, 108), int64], %var_5721: Tensor[(60, 12), float32]) -> (Tensor[(15, 12, 13), float32], Tensor[(1920), int64], Tensor[(1920), int64], Tensor[(90), int16], Tensor[(4, 108), int64], Tensor[(60, 12), bool], Tensor[(6, 6, 12), float32]) {
    %898 = @func_3680() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(13, 2, 8), float32], Tensor[(208), float32]) */;
    %899 = cast(%var_5697, dtype="float32") /* ty=Tensor[(60, 12), float32] */;
    %900 = cast(meta[relay.Constant][61] /* ty=Tensor[(1920), int64] */, dtype="int64") /* ty=Tensor[(1920), int64] */;
    %901 = cast(%var_5699, dtype="int16") /* ty=Tensor[(90), int16] */;
    %902 = reshape(%899, newshape=[12, 6, 10]) /* ty=Tensor[(12, 6, 10), float32] */;
    %903 = reshape(%900, newshape=[1920]) /* ty=Tensor[(1920), int64] */;
    %904 = reshape(%901, newshape=[90, 1]) /* ty=Tensor[(90, 1), int16] */;
    %905 = @func_5047(%902, %903, %904) /* ty=(Tensor[(12, 6, 10), uint16], Tensor[(16, 15, 8), float64], Tensor[(1920), int64], int16, Tensor[(648), float64], Tensor[(1, 84), float32], Tensor[(432), int64], Tensor[(90, 1), int16]) */;
    %906 = cast(%var_5721, dtype="bool") /* ty=Tensor[(60, 12), bool] */;
    %907 = shape_of(%var_5697, dtype="int32") /* ty=Tensor[(2), int32] */;
    %908 = cast(%var_5697, dtype="bool") /* ty=Tensor[(60, 12), bool] */;
    %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %910 = not_equal(%908, %909) /* ty=Tensor[(60, 12), bool] */;
    %911 = cast(%var_5721, dtype="bool") /* ty=Tensor[(60, 12), bool] */;
    %912 = shape_of(%910, dtype="int32") /* ty=Tensor[(2), int32] */;
    %913 = cast(%910, dtype="bool") /* ty=Tensor[(60, 12), bool] */;
    %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %915 = cast(%var_5702, dtype="int64") /* ty=Tensor[(4, 108), int64] */;
    %916 = cast(%var_5702, dtype="int64") /* ty=Tensor[(4, 108), int64] */;
    %917 = reshape(%915, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
    %918 = reshape(%916, newshape=[6, 6, 12]) /* ty=Tensor[(6, 6, 12), int64] */;
    %919 = @func_239(%917, %918) /* ty=(Tensor[(6, 6, 12), int64], Tensor[(6, 6, 12), int16], Tensor[(6, 6, 12), float32]) */;
    %920 = %919.1;
    %921 = cast(%920, dtype="float32") /* ty=Tensor[(6, 6, 12), float32] */;
    %922 = %898.0;
    %923 = %905.2;
    %924 = greater_equal(%913, %914) /* ty=Tensor[(60, 12), bool] */;
    %925 = rsqrt(%921) /* ty=Tensor[(6, 6, 12), float32] */;
    (%922, %923, meta[relay.Constant][61] /* ty=Tensor[(1920), int64] */, %var_5699, %var_5702, %924, %925)
  };
  %926(%var_5737, %var_5738, %var_5739, %var_5740) /* ty=(Tensor[(15, 12, 13), float32], Tensor[(1920), int64], Tensor[(1920), int64], Tensor[(90), int16], Tensor[(4, 108), int64], Tensor[(60, 12), bool], Tensor[(6, 6, 12), float32]) */
}

def @func_6275() -> (Tensor[(2340), int64], Tensor[(12, 15, 12), float64], Tensor[(2340), int16], Tensor[(7, 11, 15), int64], Tensor[(77, 15), float32], Tensor[(144, 1), int8]) {
  @func_6273() /* ty=(Tensor[(2340), int64], Tensor[(12, 15, 12), float64], Tensor[(2340), int16], Tensor[(7, 11, 15), int64], Tensor[(77, 15), float32], Tensor[(144, 1), int8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen209/build/output.py:2119: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen209/build/output.py", line 2124, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(54) tvmgen_default_fused_floor_mod_kernel0(float* __restrict__ T_floor_mod, float* __restrict__ placeholder) {
  T_floor_mod[(((int)threadIdx.x))] = (8.036890e-01f - (floorf((8.036890e-01f / placeholder[(((int)threadIdx.x))])) * placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


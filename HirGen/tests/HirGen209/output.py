import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_51 = relay.const(False, dtype = "bool")#candidate|51|()|const|bool
var_52 = relay.var("var_52", dtype = "bool", shape = (7, 14, 3))#candidate|52|(7, 14, 3)|var|bool
bop_53 = relay.logical_or(const_51.astype('bool'), var_52.astype('bool')) # shape=(7, 14, 3)
output = bop_53
output2 = bop_53
func_57 = relay.Function([var_52,], output)
mod['func_57'] = func_57
mod = relay.transform.InferType()(mod)
var_58 = relay.var("var_58", dtype = "bool", shape = (7, 14, 3))#candidate|58|(7, 14, 3)|var|bool
output = func_57(var_58)
func_59 = relay.Function([var_58], output)
mutated_mod['func_59'] = func_59
mutated_mod = relay.transform.InferType()(mutated_mod)
const_77 = relay.const([[[-6.031495,1.188212,-0.885014,-3.872459,0.174847,0.751515,-8.048413,-0.957521,-5.422661,2.305767,0.248488,-4.617332,-5.039782],[1.229126,-6.628906,-4.634042,-5.352773,2.144768,-5.351274,4.964643,6.779216,-3.889869,9.375086,-2.056036,6.717911,-1.988834],[-4.271921,-7.132269,9.096378,-5.311082,-9.203049,-0.643064,-2.817800,-3.360288,-9.380206,6.082291,-8.173551,7.910340,-9.348679],[2.146662,-9.831858,8.374181,9.807206,5.290166,6.712673,-0.962176,-8.644948,-5.838413,-3.040269,-7.050069,6.571891,-9.224601],[9.916253,9.421150,-3.116090,7.661652,-5.169578,4.184203,-3.101767,-2.161343,-2.664874,-5.421556,-4.798317,3.689857,5.810675]],[[7.743587,1.116127,-6.624714,2.316793,0.385206,-2.469356,-2.195205,6.628631,-8.362748,7.319738,8.847863,3.350544,-0.623928],[-5.436541,2.796216,6.954215,-0.799116,-3.915542,-7.029860,-1.804733,0.295727,-9.486071,-8.395269,0.180624,-9.906966,3.256269],[-0.418212,0.148186,-6.351331,8.345277,5.506162,-5.156629,1.552329,-5.601720,9.882881,8.834240,0.299475,-2.778243,4.591373],[0.047089,-7.317047,4.198955,5.289240,-1.776575,3.027169,7.830141,-2.238165,-0.072244,6.610775,6.970403,-7.726072,6.607209],[8.267967,3.453178,-4.340813,-3.736670,6.959970,7.423740,-5.353779,8.681357,5.216829,-9.272609,-1.844878,-9.167442,7.588718]],[[-4.460351,-0.050813,2.389459,-8.515407,3.511635,7.394810,1.402541,4.464990,-5.904117,-0.503075,5.901145,-0.783522,-0.640077],[6.216073,-2.442205,-0.812804,-7.651496,0.714486,-8.269475,-6.030715,-2.121578,5.479510,-5.774279,-9.002925,-3.180881,-6.586522],[4.474766,5.748852,-1.636099,-8.132238,0.942070,4.645549,7.464358,-4.372173,-6.777780,6.567286,-2.940053,5.595981,-6.399248],[0.035225,-2.127470,-8.032348,4.713357,8.741669,-7.360318,-3.653358,0.288229,5.241687,-2.850003,-7.415688,-0.989199,9.460978],[8.955955,-6.017636,6.531756,-0.694799,4.527539,4.506852,6.081232,-3.731295,-7.618084,3.448328,1.614500,-3.202323,-9.222450]],[[-5.954239,2.166992,-1.810412,-5.370865,-0.178861,-6.172546,-5.807492,5.426375,-2.304372,-3.631479,1.214673,-2.548895,-4.478235],[7.768556,8.710402,-2.658884,1.024485,-2.046576,-9.129540,-9.809653,-2.264928,3.635593,-0.297287,-4.227690,1.148590,-3.127111],[1.776701,-0.708367,-0.439284,-9.042612,1.496086,7.861642,-4.226994,-7.789082,0.683983,6.153052,-4.529909,-7.553032,-4.466356],[3.894066,9.036840,-6.921061,-8.077450,1.471587,-2.643597,8.418965,-3.829803,-8.456447,-8.042867,5.911063,8.676938,9.421481],[6.017295,5.199596,-9.044112,-1.895659,-0.736803,-0.135223,5.536713,1.194739,2.339467,3.287918,3.348898,0.021982,9.249879]],[[8.621422,5.509039,-5.136550,-3.717827,-4.003417,-4.998299,7.628387,1.119221,-9.240034,5.180575,4.496087,-4.425667,-2.099305],[-0.904464,6.707819,-0.363701,4.933466,0.237361,-1.809694,1.819944,-9.673669,1.921738,-0.847951,7.611286,5.345289,-5.359449],[2.114025,-5.664812,-5.574275,6.556252,-9.615420,3.842096,-5.156479,2.785355,-9.129808,8.856947,-0.561866,-4.867254,-3.677456],[6.357775,-5.203382,-1.264172,-7.413462,7.049117,2.387120,-7.897747,-7.230032,9.747617,-1.347078,-0.478494,1.369111,7.720906],[-3.649305,-7.108847,1.784470,8.858104,2.614756,-4.741753,-8.514379,8.270913,-6.443666,5.408737,4.680996,3.116622,6.698061]],[[-6.167651,-6.339211,-3.340360,-8.403145,3.473754,1.386774,7.217337,-7.850321,-4.782897,-0.642034,-1.761076,-0.590371,0.991544],[6.992779,2.199908,-1.709174,4.461537,-6.014353,-2.493292,5.872895,-3.596888,-1.309565,6.556570,4.397498,2.462653,7.826785],[4.379721,2.134677,8.467105,1.089350,9.637806,6.167112,-0.344229,-3.117437,-5.647119,-4.636388,-6.404865,-8.937918,3.107100],[-4.349430,6.192012,5.853147,7.285550,-0.946509,6.072746,7.230014,6.833057,4.785071,-4.668195,-4.191278,7.631518,-1.965402],[4.470012,-0.394744,-9.870233,6.675738,-7.020918,-0.796247,8.855036,1.309885,4.376622,3.148788,6.936513,-6.118853,3.651284]],[[-0.027511,-0.224820,-4.203970,3.281731,-4.252875,7.619272,-7.821362,-6.043868,1.193564,0.957041,-0.001643,-2.136798,8.721708],[9.580191,2.060945,8.624828,6.637746,-8.941261,5.862722,-3.936107,-1.376931,-7.549019,-2.533995,6.496569,-1.221605,-0.740830],[3.538451,1.057032,-2.915525,0.131890,4.158622,4.804975,-6.417077,-3.543269,0.748517,5.080304,4.645824,-4.972192,0.587158],[4.434145,-6.574020,-2.936462,-6.667439,2.459583,-5.408177,7.096799,5.744236,3.876185,-4.195491,5.875395,-5.033814,8.365595],[-3.114674,3.627763,-8.886608,-3.089815,-3.855591,-8.922103,-8.391465,4.076521,-7.195754,-6.077018,8.822422,1.599544,4.068872]],[[-6.716882,-9.205303,1.973054,7.330115,-9.256748,-9.666697,9.176421,4.018901,8.696784,4.702300,1.067513,4.437233,9.493051],[6.065537,1.505362,8.399504,-9.292768,5.750422,4.901936,8.359579,-9.993703,-4.483630,-0.478547,-4.992345,0.454636,1.337241],[9.739889,-5.172780,3.893433,-3.853570,-9.552384,-5.634225,1.463915,7.019504,9.899392,-7.400108,-1.666064,3.935080,-5.781684],[-8.168953,7.461837,-0.286006,5.668955,5.258829,-0.532786,5.868058,5.147096,-6.372620,6.756450,8.142465,-9.944242,2.477990],[-0.157125,4.901278,-3.463384,-1.185558,8.751093,-5.620341,9.775439,-2.796268,8.859859,0.844586,8.210442,3.962167,1.681507]],[[2.281667,-5.315034,-3.365847,0.616204,-8.072357,9.906994,2.918857,4.442680,1.825228,5.844567,7.795377,8.691981,-8.190388],[-6.297317,-2.129163,-3.411006,8.833354,-3.164745,-1.444832,4.534646,8.075883,7.540474,-4.756922,-3.316266,-3.197897,0.025905],[1.021820,-1.921039,6.315327,9.900625,-6.380546,-6.737286,0.841889,2.563561,-9.278999,-5.164937,9.390022,9.511118,-1.272608],[-7.866509,2.116709,-9.009049,-5.544253,-8.290689,5.365571,6.638856,-5.376815,7.749158,-0.188110,6.829982,-0.325970,-3.169511],[6.826960,1.113718,-8.856848,-8.494296,3.963518,-2.359237,5.456507,2.411863,-1.870313,-8.198935,-4.265875,-2.983650,-3.797657]],[[-8.135594,2.318842,5.386579,-9.868643,9.561355,-5.253215,-0.668783,-0.343814,3.929316,-9.380867,1.111869,-7.976847,7.537585],[5.503073,5.185243,8.694726,-2.313002,3.534712,8.005389,-7.222290,-0.987430,7.821861,-3.834092,8.374335,1.309728,4.345186],[-2.293375,2.801492,-8.326666,-4.826468,-0.948995,6.782078,-2.559421,-9.863951,-5.554299,-3.879204,5.574860,-8.136751,-9.243741],[-9.229746,3.290945,-6.307403,0.481101,0.100378,-7.289853,8.137369,2.284685,-4.531916,6.599833,5.522513,8.496806,-4.291993],[3.791084,3.596174,-9.494154,-5.943884,9.851499,-0.400218,-8.656669,-3.881222,1.897079,3.851272,4.182062,-7.415903,3.012064]]], dtype = "float32")#candidate|77|(10, 5, 13)|const|float32
var_78 = relay.var("var_78", dtype = "float32", shape = (10, 5, 13))#candidate|78|(10, 5, 13)|var|float32
bop_79 = relay.floor_divide(const_77.astype('float32'), relay.reshape(var_78.astype('float32'), relay.shape_of(const_77))) # shape=(10, 5, 13)
func_57_call = mod.get_global_var('func_57')
func_59_call = mutated_mod.get_global_var('func_59')
const_100 = relay.const([True,True,False,False,False,False,True,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,False,True,True,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,False,False,False,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,False,False,False,False,True,True,False,False,True,True,False,True,True,False,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True], dtype = "bool")#candidate|100|(294,)|const|bool
call_99 = func_57_call(relay.reshape(const_100.astype('bool'), [7, 14, 3]))
call_101 = func_57_call(relay.reshape(const_100.astype('bool'), [7, 14, 3]))
func_57_call = mod.get_global_var('func_57')
func_59_call = mutated_mod.get_global_var('func_59')
call_102 = func_57_call(relay.reshape(const_100.astype('bool'), [7, 14, 3]))
call_103 = func_57_call(relay.reshape(const_100.astype('bool'), [7, 14, 3]))
uop_111 = relay.sqrt(call_99.astype('float32')) # shape=(7, 14, 3)
uop_113 = relay.sqrt(call_101.astype('float32')) # shape=(7, 14, 3)
func_57_call = mod.get_global_var('func_57')
func_59_call = mutated_mod.get_global_var('func_59')
call_114 = func_57_call(relay.reshape(call_102.astype('bool'), [7, 14, 3]))
call_115 = func_57_call(relay.reshape(call_102.astype('bool'), [7, 14, 3]))
bop_132 = relay.subtract(uop_111.astype('int16'), relay.reshape(const_100.astype('int16'), relay.shape_of(uop_111))) # shape=(7, 14, 3)
bop_135 = relay.subtract(uop_113.astype('int16'), relay.reshape(const_100.astype('int16'), relay.shape_of(uop_113))) # shape=(7, 14, 3)
output = relay.Tuple([bop_79,call_102,call_114,bop_132,])
output2 = relay.Tuple([bop_79,call_103,call_115,bop_135,])
func_143 = relay.Function([var_78,], output)
mod['func_143'] = func_143
mod = relay.transform.InferType()(mod)
mutated_mod['func_143'] = func_143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_144 = relay.var("var_144", dtype = "float32", shape = (10, 5, 13))#candidate|144|(10, 5, 13)|var|float32
func_143_call = mutated_mod.get_global_var('func_143')
call_145 = func_143_call(var_144)
output = call_145
func_146 = relay.Function([var_144], output)
mutated_mod['func_146'] = func_146
mutated_mod = relay.transform.InferType()(mutated_mod)
var_200 = relay.var("var_200", dtype = "int64", shape = (6, 6, 12))#candidate|200|(6, 6, 12)|var|int64
var_201 = relay.var("var_201", dtype = "int64", shape = (6, 6, 12))#candidate|201|(6, 6, 12)|var|int64
bop_202 = relay.maximum(var_200.astype('int64'), relay.reshape(var_201.astype('int64'), relay.shape_of(var_200))) # shape=(6, 6, 12)
const_217 = relay.const([[[4,7,-1,-9,7,-1,9,7,2,5,3,1],[-2,5,-9,3,6,-7,6,4,-7,10,-3,-10],[-1,3,10,5,-10,9,7,-3,4,2,5,3],[-2,-9,-10,-2,-5,-6,-8,6,-1,7,7,-1],[-7,10,8,3,-6,5,-3,-4,3,-5,3,8],[6,-2,-5,-5,7,-4,9,-4,-2,-9,-9,3]],[[-5,2,-10,3,-6,-9,9,1,9,10,-5,-1],[7,-1,-2,-8,-5,-6,1,-10,-4,7,-3,9],[6,-8,-6,-9,10,9,6,-1,-10,-5,8,-7],[4,-6,-4,9,-6,4,-7,-5,3,-8,-3,-10],[-10,3,10,-8,6,1,9,-4,6,-7,1,9],[7,-4,8,3,-9,-4,6,3,-8,-4,2,-3]],[[5,1,-3,-9,10,3,7,6,2,-5,5,-2],[2,-1,-3,-7,6,2,10,4,-7,8,2,-10],[-7,5,-4,-5,1,3,2,-2,-7,10,8,-7],[-10,6,10,-8,-2,-7,8,-3,1,4,-5,4],[3,-1,-7,-5,-3,8,-9,-8,-9,-5,10,7],[3,5,-10,-4,-10,-3,3,-3,-10,-10,7,-10]],[[-7,-5,-5,8,-8,10,1,-10,-8,9,2,10],[5,3,-1,10,9,5,-10,4,6,-5,-5,-10],[-9,-6,1,2,-5,-7,7,-4,-3,-10,2,10],[-7,6,1,7,-3,10,9,9,9,10,-3,4],[-3,-10,10,6,-6,-9,6,-6,9,4,-10,-1],[9,6,-8,-10,5,-10,2,10,8,-5,-7,5]],[[1,-3,-4,-1,-8,7,-5,8,6,5,-4,4],[-6,6,3,1,-3,-4,-1,-10,-2,-4,1,-7],[2,5,-6,-5,9,8,-5,8,3,4,7,-10],[8,-5,10,8,-3,7,1,2,5,5,-8,7],[5,3,5,2,-1,-4,9,10,-6,-1,-1,10],[4,-6,-6,-2,-6,4,10,5,-3,10,-5,-5]],[[-9,10,9,6,3,4,6,-2,-10,-2,-2,-2],[9,8,2,7,-8,-1,-4,2,8,-9,-3,5],[-7,6,7,4,-9,2,-6,3,5,-2,-1,-8],[-2,1,8,-3,-6,-4,-8,-1,-1,-8,-3,10],[7,8,-8,-8,3,-10,-7,6,3,-6,-10,-7],[9,9,-10,-1,3,-6,-6,-5,-4,-10,7,6]]], dtype = "int64")#candidate|217|(6, 6, 12)|const|int64
bop_218 = relay.bitwise_or(var_200.astype('int16'), relay.reshape(const_217.astype('int16'), relay.shape_of(var_200))) # shape=(6, 6, 12)
uop_230 = relay.log(const_217.astype('float32')) # shape=(6, 6, 12)
bop_236 = relay.floor_divide(uop_230.astype('float32'), relay.reshape(const_217.astype('float32'), relay.shape_of(uop_230))) # shape=(6, 6, 12)
output = relay.Tuple([bop_202,bop_218,bop_236,])
output2 = relay.Tuple([bop_202,bop_218,bop_236,])
func_239 = relay.Function([var_200,var_201,], output)
mod['func_239'] = func_239
mod = relay.transform.InferType()(mod)
var_240 = relay.var("var_240", dtype = "int64", shape = (6, 6, 12))#candidate|240|(6, 6, 12)|var|int64
var_241 = relay.var("var_241", dtype = "int64", shape = (6, 6, 12))#candidate|241|(6, 6, 12)|var|int64
output = func_239(var_240,var_241,)
func_242 = relay.Function([var_240,var_241,], output)
mutated_mod['func_242'] = func_242
mutated_mod = relay.transform.InferType()(mutated_mod)
var_430 = relay.var("var_430", dtype = "float32", shape = (13, 2, 8))#candidate|430|(13, 2, 8)|var|float32
uop_431 = relay.atanh(var_430.astype('float32')) # shape=(13, 2, 8)
output = uop_431
output2 = uop_431
func_444 = relay.Function([var_430,], output)
mod['func_444'] = func_444
mod = relay.transform.InferType()(mod)
var_445 = relay.var("var_445", dtype = "float32", shape = (13, 2, 8))#candidate|445|(13, 2, 8)|var|float32
output = func_444(var_445)
func_446 = relay.Function([var_445], output)
mutated_mod['func_446'] = func_446
mutated_mod = relay.transform.InferType()(mutated_mod)
var_542 = relay.var("var_542", dtype = "uint64", shape = ())#candidate|542|()|var|uint64
var_543 = relay.var("var_543", dtype = "uint64", shape = (6, 2, 1))#candidate|543|(6, 2, 1)|var|uint64
bop_544 = relay.multiply(var_542.astype('uint64'), var_543.astype('uint64')) # shape=(6, 2, 1)
func_239_call = mod.get_global_var('func_239')
func_242_call = mutated_mod.get_global_var('func_242')
var_562 = relay.var("var_562", dtype = "int64", shape = (12, 36))#candidate|562|(12, 36)|var|int64
call_561 = relay.TupleGetItem(func_239_call(relay.reshape(var_562.astype('int64'), [6, 6, 12]), relay.reshape(var_562.astype('int64'), [6, 6, 12]), ), 2)
call_563 = relay.TupleGetItem(func_242_call(relay.reshape(var_562.astype('int64'), [6, 6, 12]), relay.reshape(var_562.astype('int64'), [6, 6, 12]), ), 2)
uop_569 = relay.sinh(var_562.astype('float64')) # shape=(12, 36)
func_444_call = mod.get_global_var('func_444')
func_446_call = mutated_mod.get_global_var('func_446')
const_579 = relay.const([0.020738,-8.952658,-8.312312,-3.510145,-3.021570,2.329124,6.321066,8.033776,-7.005196,2.325620,2.570920,9.720583,-0.059454,-7.188572,-9.469631,5.810336,1.286173,5.986126,9.289782,8.521698,2.045942,2.126235,-2.425437,4.255704,2.003580,-1.669917,-2.044597,-8.452957,7.309218,-3.970182,2.438021,-5.854750,5.068192,-7.324774,5.991932,0.379198,-0.038902,-3.990557,5.359670,1.167023,-3.362497,1.637870,7.856144,1.679163,-9.287571,-3.073718,1.673591,-9.774030,-5.925066,-2.338645,-3.910470,-5.707239,-5.225604,5.405649,-8.587408,-1.017414,-2.889295,9.570376,1.865602,-7.642603,5.437652,3.070560,5.082495,3.077003,-1.815162,-3.655970,7.373667,0.945693,6.612429,3.525297,4.008130,-5.815167,5.716999,8.179149,6.562388,-4.986186,-4.340954,5.346777,6.479182,8.506405,-8.165661,-2.187570,-9.396560,8.452433,-8.094136,-5.188332,-9.487177,2.592517,-0.433131,-2.490260,5.366786,-4.922123,-7.739362,0.982536,2.735038,6.113100,-9.246826,9.300392,6.862681,-3.740692,-2.372634,7.892798,-1.432024,-6.870908,3.837734,-0.661607,-6.645369,-4.780815,-2.750197,-7.638711,-9.254420,-2.839706,-3.954641,-0.732764,-2.072504,4.467775,7.820213,-6.026291,-7.545813,-7.449611,6.173914,-9.553683,-1.548418,0.515327,-3.019428,-2.462618,7.078200,-7.799528,-2.285373,-3.505490,5.404152,6.564723,-0.378260,-4.790785,8.332059,5.586750,4.987588,-1.817219,-6.268861,8.469172,0.908280,-1.024173,-0.190015,-7.159497,1.585791,1.747259,4.845938,5.791767,-9.315897,-5.157154,-2.707722,4.007436,6.781595,1.418921,5.671562,-4.633250,-1.209207,5.638961,8.262659,-1.813551,-4.700140,-6.815694,-9.624617,-4.214145,6.265338,-0.371420,-2.805058,-0.463057,9.683512,0.845182,-5.196395,-1.120282,-4.579781,7.816322,0.300090,-7.730579,0.559473,7.283391,-5.704795,7.675923,-5.447145,-6.878898,3.198414,-4.158787,-1.302150,8.374177,-5.761869,-3.095786,6.359760,-5.526798,7.707208,7.997113,9.899764,-9.882936,-0.083855,-4.371972,-2.492672,3.862588,4.124971,-0.311814,9.691363,-1.511241,6.475478,0.593950,-4.958875,-5.711510,-5.798727,-7.376645], dtype = "float32")#candidate|579|(208,)|const|float32
call_578 = func_444_call(relay.reshape(const_579.astype('float32'), [13, 2, 8]))
call_580 = func_444_call(relay.reshape(const_579.astype('float32'), [13, 2, 8]))
func_444_call = mod.get_global_var('func_444')
func_446_call = mutated_mod.get_global_var('func_446')
call_581 = func_444_call(relay.reshape(call_578.astype('float32'), [13, 2, 8]))
call_582 = func_444_call(relay.reshape(call_578.astype('float32'), [13, 2, 8]))
bop_589 = relay.greater_equal(uop_569.astype('bool'), relay.reshape(call_561.astype('bool'), relay.shape_of(uop_569))) # shape=(12, 36)
bop_592 = relay.greater_equal(uop_569.astype('bool'), relay.reshape(call_563.astype('bool'), relay.shape_of(uop_569))) # shape=(12, 36)
output = relay.Tuple([bop_544,call_578,const_579,call_581,bop_589,])
output2 = relay.Tuple([bop_544,call_580,const_579,call_582,bop_592,])
func_598 = relay.Function([var_542,var_543,var_562,], output)
mod['func_598'] = func_598
mod = relay.transform.InferType()(mod)
var_599 = relay.var("var_599", dtype = "uint64", shape = ())#candidate|599|()|var|uint64
var_600 = relay.var("var_600", dtype = "uint64", shape = (6, 2, 1))#candidate|600|(6, 2, 1)|var|uint64
var_601 = relay.var("var_601", dtype = "int64", shape = (12, 36))#candidate|601|(12, 36)|var|int64
output = func_598(var_599,var_600,var_601,)
func_602 = relay.Function([var_599,var_600,var_601,], output)
mutated_mod['func_602'] = func_602
mutated_mod = relay.transform.InferType()(mutated_mod)
var_685 = relay.var("var_685", dtype = "uint16", shape = (7, 6, 16))#candidate|685|(7, 6, 16)|var|uint16
var_686 = relay.var("var_686", dtype = "uint16", shape = (7, 6, 16))#candidate|686|(7, 6, 16)|var|uint16
bop_687 = relay.right_shift(var_685.astype('uint16'), relay.reshape(var_686.astype('uint16'), relay.shape_of(var_685))) # shape=(7, 6, 16)
uop_690 = relay.sqrt(var_685.astype('float64')) # shape=(7, 6, 16)
func_143_call = mod.get_global_var('func_143')
func_146_call = mutated_mod.get_global_var('func_146')
const_695 = relay.const([[-4.873617,0.659579,3.559639,-4.580361,5.283951,8.392814,-7.136911,-6.031541,3.106553,-2.208899],[9.919088,8.830496,4.481064,0.910990,2.641808,0.317088,-2.866124,7.032741,9.008818,-5.757820],[9.504837,9.578479,9.779140,3.670196,-0.096873,4.862059,6.008899,3.032482,1.106136,-4.388268],[9.614744,-3.916672,-3.038004,6.541730,5.949239,-9.245473,1.328724,-8.583264,4.433790,-2.125937],[2.916029,6.964617,-2.820146,-8.251393,5.637302,3.052612,-1.532309,-8.124362,6.807726,9.145418],[9.767751,6.925133,6.059870,4.449026,9.266625,-3.375280,-7.867856,2.362635,-4.111182,-6.149540],[-3.750657,6.340365,-8.372132,0.484475,8.503260,-6.552050,-9.287961,-7.548346,-1.889625,-6.015658],[4.191637,-0.893217,-8.136078,-9.582571,9.377290,-9.852956,-6.283179,4.888691,-4.384278,-1.157453],[6.068460,-6.182415,-4.329131,9.466433,5.666944,-7.179536,-4.207676,-4.831119,-7.485561,7.200409],[7.605685,2.809200,4.405311,-9.271738,1.175015,-1.730292,-4.840832,-8.013497,8.690994,1.028789],[6.043570,9.388077,-2.640286,-4.067490,-5.044718,4.538207,-8.456143,-2.806154,8.166492,1.784867],[6.863250,0.818409,-3.640940,0.489002,2.960507,-8.837429,-4.724014,-8.905035,7.370737,-1.426571],[-9.992643,-6.767421,-8.463710,3.821089,1.579061,3.709235,-3.058499,-8.830234,-2.987047,-6.906992],[-1.585429,6.650988,-8.351030,-9.425176,-6.513830,7.686820,-9.205235,9.482696,-3.695869,-9.944043],[7.928640,6.638963,-7.496905,1.031391,6.705608,-5.523790,-7.324627,-0.693784,1.859581,7.959366],[1.354062,-0.271566,-8.731695,9.661618,-7.125896,-5.386879,8.581914,1.575226,-8.807311,-6.886334],[-9.133097,2.637515,-7.782131,9.402719,-2.052229,-6.323272,-5.803076,5.030691,-1.493419,4.296209],[-3.511621,6.226815,8.349376,6.731765,2.629452,2.957156,-5.539226,-4.890181,9.426525,-4.042790],[-1.450392,9.580285,-4.647059,3.717935,2.482851,6.729556,7.423102,5.376086,-6.025520,-2.164537],[1.839740,7.741522,-6.173820,-6.025461,-3.154409,-3.033807,9.245947,7.348120,-8.513802,6.674764],[3.282730,-1.794149,2.422675,-4.126187,-4.407687,0.628432,-4.750727,-0.991214,-4.486711,-7.105184],[9.774951,-7.231092,3.229736,-4.489892,-6.358324,7.612670,9.298200,-5.822976,-6.811538,-4.195905],[5.010865,-5.074508,-8.175185,4.234044,3.576880,3.660004,-4.983599,-0.613522,4.437812,3.000832],[-7.889097,-6.021086,-3.241684,-7.927706,1.915256,-5.397011,-3.134350,-2.551365,7.709758,4.877866],[-1.429518,1.834837,-6.591964,-1.555547,3.847610,-7.523077,-7.986904,1.602364,5.431859,8.716536],[-3.633787,-3.509462,-9.639205,1.953611,-9.762674,0.799515,-2.045666,5.616787,-5.193560,-3.185601],[4.657312,2.121890,0.446197,7.620462,-4.878221,9.417079,-4.827821,9.242391,8.438317,-5.932585],[5.047781,-4.686712,-8.294052,3.689082,1.285394,-7.441959,-7.630770,-4.724218,-5.812494,-0.306524],[7.289509,4.099618,4.679869,-6.289396,-0.038562,-3.579766,-2.872039,5.376410,-8.801166,6.689783],[-3.613573,6.766968,6.384385,9.039585,4.609345,-4.070610,7.272959,-3.108255,-7.163470,9.904197],[7.598499,2.009971,-9.207356,-9.217453,9.960433,-0.520325,-3.971593,-1.264285,-7.427724,5.118937],[4.833162,-2.203233,-1.429027,-6.562438,8.048909,4.191614,8.422713,1.722816,4.796040,4.223470],[1.258921,-8.422467,6.919745,-6.157626,-7.880524,4.221176,3.153580,2.715213,-3.060837,6.963292],[3.425916,-7.363882,1.613145,3.585040,3.890006,8.639144,-3.072063,-4.346221,-4.932727,4.489518],[9.707136,-0.091205,-2.660090,-6.939177,7.410541,6.275951,-2.955508,-4.735050,1.561619,-0.789346],[-4.144512,7.611498,5.617982,-0.939430,-6.670272,5.067538,-7.427277,7.420139,5.144608,4.769242],[9.710118,1.605492,-2.488285,2.712111,4.794636,-2.301996,5.371234,6.785704,-6.999398,-1.902565],[8.730341,-3.749390,5.932670,5.416989,9.508355,-0.774871,3.649756,-4.753767,5.232240,3.215351],[8.742624,-3.789834,5.340402,2.020288,7.424943,0.642412,4.027469,-6.600027,8.073581,2.723654],[-6.883831,1.332132,-6.896091,1.387911,9.677254,-3.100331,-4.397293,9.213709,-2.481608,5.453535],[-8.739651,3.625776,-5.580195,-8.488899,6.228975,-3.023424,4.643095,0.293383,1.245644,1.974316],[3.644480,3.600401,-1.818842,2.535891,-0.509988,-5.788911,1.570758,-0.522261,4.698429,3.589089],[7.212518,-6.162748,8.858057,-0.125240,-2.049687,8.767002,5.468230,-7.235133,0.854563,9.897413],[-5.060702,-2.362220,1.437965,-2.589725,-9.059237,6.156594,2.833509,-7.226347,9.906414,-3.102227],[2.628989,4.466257,-5.728373,-8.399803,7.882188,6.306660,-8.754734,-3.707871,8.332152,-0.725752],[-0.559450,2.691730,-6.051931,8.897714,-1.320536,6.045151,9.010337,-3.772793,-0.685124,-6.504422],[-7.217461,-5.743757,9.605834,-0.367694,6.608742,-8.560198,-8.376046,4.967752,-1.008926,-9.139405],[-4.410934,-9.869388,-3.712401,-4.423923,7.935664,1.051153,-0.591816,-1.412593,-7.533003,-7.285819],[-8.763761,0.471852,-6.972133,1.315605,6.237927,3.485704,5.820675,-1.554540,9.511797,7.165326],[1.608545,-7.366940,-4.236088,5.748983,-1.671531,-8.935701,5.653848,7.229732,-5.453506,-6.813616],[3.701981,-3.625422,4.865487,-0.757730,9.446465,6.434060,-0.371751,-8.239871,0.059795,7.723024],[-6.900664,-8.136618,-9.583496,8.183160,-5.993265,-4.720714,-7.664859,-3.146345,4.867543,-7.773645],[-3.799588,3.265756,2.212627,9.247601,-9.635837,-8.210163,-0.688902,-5.506486,9.913884,-7.849594],[2.256273,6.635552,8.823293,9.598415,-9.055220,1.136773,6.024124,-8.609774,-1.000878,6.608712],[-5.521039,6.067398,-5.810900,9.350412,-1.981016,6.716091,7.764110,1.841741,3.986042,4.899807],[-9.469928,-2.213080,-3.274601,-2.481811,5.579891,7.693986,-2.161597,-5.584519,-2.285516,-3.177481],[6.951500,-8.811521,-3.109620,5.656380,-8.003663,3.209141,8.527950,-7.846859,-6.292876,3.725963],[3.923513,-8.694723,1.000622,-1.595286,-2.683383,-4.550638,4.154023,-0.500645,-1.505923,3.753591],[7.775363,3.773541,-8.963981,-8.038573,5.298655,-5.129201,-5.996461,-2.980609,-9.610667,8.152477],[3.884901,-3.992920,-3.389119,-5.945014,4.762473,4.964804,-0.259768,7.312977,-6.053036,-2.538956],[7.123719,-7.687882,7.366913,-6.315120,-0.985809,-1.405501,6.330631,-7.965046,-9.203912,5.597562],[-1.398522,-0.491533,5.576700,1.367685,5.706748,5.113645,1.995500,-2.121330,-4.852544,-1.940906],[-0.783622,-2.246558,3.334941,8.550273,0.926977,7.783129,4.333529,4.416744,-6.526443,-9.768264],[-4.058238,-1.141789,-8.609978,-5.428311,3.959734,4.434148,4.695734,-7.578899,-0.276207,-2.195133],[-1.578018,2.867747,0.716642,-0.699844,1.276094,4.041990,8.596562,6.334666,-5.381182,-4.194717]], dtype = "float32")#candidate|695|(65, 10)|const|float32
call_694 = relay.TupleGetItem(func_143_call(relay.reshape(const_695.astype('float32'), [10, 5, 13])), 1)
call_696 = relay.TupleGetItem(func_146_call(relay.reshape(const_695.astype('float32'), [10, 5, 13])), 1)
func_57_call = mod.get_global_var('func_57')
func_59_call = mutated_mod.get_global_var('func_59')
call_708 = func_57_call(relay.reshape(call_694.astype('bool'), [7, 14, 3]))
call_709 = func_57_call(relay.reshape(call_694.astype('bool'), [7, 14, 3]))
bop_711 = relay.less(uop_690.astype('bool'), relay.reshape(bop_687.astype('bool'), relay.shape_of(uop_690))) # shape=(7, 6, 16)
output = relay.Tuple([call_694,const_695,call_708,bop_711,])
output2 = relay.Tuple([call_696,const_695,call_709,bop_711,])
func_714 = relay.Function([var_685,var_686,], output)
mod['func_714'] = func_714
mod = relay.transform.InferType()(mod)
var_715 = relay.var("var_715", dtype = "uint16", shape = (7, 6, 16))#candidate|715|(7, 6, 16)|var|uint16
var_716 = relay.var("var_716", dtype = "uint16", shape = (7, 6, 16))#candidate|716|(7, 6, 16)|var|uint16
output = func_714(var_715,var_716,)
func_717 = relay.Function([var_715,var_716,], output)
mutated_mod['func_717'] = func_717
mutated_mod = relay.transform.InferType()(mutated_mod)
var_780 = relay.var("var_780", dtype = "float32", shape = (7, 9, 10))#candidate|780|(7, 9, 10)|var|float32
uop_781 = relay.erf(var_780.astype('float32')) # shape=(7, 9, 10)
output = relay.Tuple([uop_781,])
output2 = relay.Tuple([uop_781,])
func_783 = relay.Function([var_780,], output)
mod['func_783'] = func_783
mod = relay.transform.InferType()(mod)
var_784 = relay.var("var_784", dtype = "float32", shape = (7, 9, 10))#candidate|784|(7, 9, 10)|var|float32
output = func_783(var_784)
func_785 = relay.Function([var_784], output)
mutated_mod['func_785'] = func_785
mutated_mod = relay.transform.InferType()(mutated_mod)
var_881 = relay.var("var_881", dtype = "int16", shape = (15, 12, 13))#candidate|881|(15, 12, 13)|var|int16
const_882 = relay.const([[[8,-5,2,3,9,-8,4,8,-2,-4,-3,3,1],[-4,3,-6,-10,5,-9,3,4,-10,-9,-4,-5,1],[-5,2,4,-10,-5,-9,-9,8,3,-5,1,7,8],[-2,-4,-9,-9,-5,-6,-1,-3,-8,5,2,9,4],[5,-1,-7,-5,8,-9,6,10,-9,5,-1,6,-10],[3,6,-1,-3,5,7,-10,-6,2,3,4,-4,5],[3,-3,-10,4,6,-8,-8,-10,2,8,8,-10,1],[-2,4,-2,1,-1,2,6,1,-8,8,1,-5,-10],[10,-4,5,-8,5,7,5,-6,3,4,9,-2,9],[7,-6,-7,-8,-9,-8,3,9,1,7,-1,-3,-6],[-9,9,2,2,-6,4,3,-8,-2,-6,2,5,9],[10,4,-6,4,3,-3,6,5,5,5,10,-6,-8]],[[-6,-6,2,-8,-3,9,10,-5,-8,-4,9,2,-5],[-3,9,-7,-6,-1,-10,5,3,-3,8,10,7,1],[-5,1,-5,9,6,10,-1,-2,-10,-4,-5,-6,5],[10,-1,-7,4,-4,-2,5,-1,2,6,2,-3,6],[5,10,9,-9,3,-7,-4,7,6,-4,9,-8,9],[8,8,7,-10,-3,-9,9,8,10,-7,-10,1,9],[-9,2,6,-8,-7,-8,-4,-6,-3,8,9,7,-4],[-8,-10,-4,3,-5,-7,-5,-9,-9,-4,-9,-10,-2],[4,-6,4,-3,2,-3,3,-7,-2,7,5,-6,3],[-8,2,-1,-9,5,4,8,-5,-2,-1,-1,1,-6],[-5,9,-8,8,-7,6,-9,-1,-9,8,2,-2,-1],[5,2,10,4,5,6,-1,6,3,10,-6,-1,-3]],[[-6,-5,10,1,-3,-3,-10,-8,2,3,1,-3,8],[-8,-6,5,5,-9,1,-1,10,-1,2,1,1,4],[-2,2,6,10,-10,4,-6,-4,-2,1,-1,-4,-6],[-7,-1,-8,7,2,2,7,-8,9,5,-10,2,-3],[-8,4,-4,-8,3,7,-7,-7,-2,1,7,-3,-7],[3,6,10,3,-7,-6,-1,2,3,8,10,-4,1],[3,8,-8,-7,5,10,3,4,-4,-10,-6,8,3],[-5,9,2,1,-3,-9,5,10,-1,-5,-2,-3,-7],[-5,2,-3,7,-10,-7,7,1,-10,9,4,-3,-6],[-9,-7,-7,-1,2,-3,-9,10,-5,4,2,-2,6],[-2,8,3,-8,-4,-5,-1,1,8,10,-6,4,10],[-7,-8,2,-9,-9,-8,3,1,8,-6,7,-1,-1]],[[-1,-10,-2,5,8,-1,6,9,8,-5,-9,10,-4],[-1,-3,1,-9,5,5,-3,-7,-2,-6,-6,-3,5],[4,9,-4,2,-3,3,3,5,-10,-3,-5,-10,5],[7,-7,-2,-8,10,1,1,-4,-10,-2,6,-3,7],[-5,-1,2,-2,2,1,-7,4,-2,6,7,4,-8],[1,1,-1,6,-1,-2,1,-7,6,5,3,-2,3],[2,-1,10,-4,-10,9,9,-8,3,6,2,-5,9],[4,5,-3,5,-7,-3,-5,-8,-3,-6,-7,-8,10],[-5,5,-1,5,6,-2,9,-7,-2,7,9,-6,-9],[-6,8,-7,1,4,10,-9,-7,-9,-2,-9,3,6],[-6,-8,7,-3,10,-5,1,4,-1,10,-3,4,-9],[4,3,-3,2,5,5,-4,8,-7,-1,4,3,-9]],[[7,4,10,-6,-7,1,2,9,-4,4,2,-4,-4],[4,2,-6,9,-5,-9,2,-1,7,9,-3,-9,-6],[10,-4,8,-6,1,1,5,1,-6,1,-5,1,4],[-6,10,-4,4,9,-5,-4,8,-8,-9,6,-3,-3],[5,2,-7,-2,2,9,3,-10,10,7,-1,-10,6],[-6,-3,7,4,-9,8,5,-9,-6,2,-3,1,-2],[-4,3,-8,-9,1,-1,5,-3,5,-3,-4,-9,8],[-9,-1,-3,3,5,8,-4,-9,-1,9,9,6,10],[-4,6,-2,-3,8,-8,-2,4,-6,-7,3,3,-6],[6,6,-3,5,-2,-6,2,1,-9,-2,2,-9,-4],[1,-4,10,8,-6,-6,-10,-9,-5,4,-10,10,-4],[-9,3,7,1,-8,1,-6,-9,-7,-5,7,7,8]],[[4,9,-10,1,2,-5,9,-3,-3,5,-3,3,9],[10,3,5,-3,5,3,-7,6,-9,7,-3,-2,2],[-3,5,-5,1,-10,5,-9,1,6,8,-9,-7,8],[5,-10,-7,-2,-6,7,4,2,-5,10,6,3,8],[-8,6,-4,-7,-10,9,9,8,3,-7,1,-9,-7],[9,-6,10,1,-3,1,-3,-6,-4,8,-3,5,-9],[2,-9,2,7,-4,-5,6,-4,-7,7,-7,-10,-6],[9,3,-2,-5,-3,9,-6,-8,-2,6,1,-10,9],[-1,4,10,-9,-9,-7,3,1,10,7,-6,-4,2],[8,-2,-1,5,-2,-7,9,3,-2,6,8,-3,-7],[3,-5,-5,-9,9,-1,5,9,-4,10,4,4,9],[7,-7,3,4,-7,1,7,7,-4,1,4,2,3]],[[-8,-6,-8,-9,7,-5,7,1,9,8,4,-8,-5],[-2,-6,3,-1,1,1,-4,-9,1,-2,-6,8,7],[-5,-9,-5,7,6,-5,8,8,-5,8,-1,4,1],[4,-3,5,4,-8,7,-4,7,1,7,-5,-2,-8],[3,-6,-9,6,-1,-10,7,6,5,-6,-1,-8,-4],[1,-7,1,-1,4,7,-4,3,3,-3,-3,-1,3],[-3,8,-5,7,8,-3,3,8,9,6,5,-1,10],[-9,2,3,-4,-7,10,2,-10,-6,4,4,-6,-5],[-2,9,4,-5,1,-4,-8,5,-6,5,-2,10,-5],[-9,-7,-1,-5,-10,-8,5,-2,-4,1,8,6,3],[4,-6,-10,-7,-3,5,-9,-7,2,6,-3,2,-10],[1,-4,4,10,7,6,4,-2,-7,3,-8,8,-9]],[[-6,6,3,-4,4,5,9,-3,-5,4,7,10,7],[-7,4,7,8,8,5,-10,-9,4,-8,2,-5,3],[-10,-5,1,-2,-9,6,6,-1,-7,7,-6,5,9],[9,6,7,-5,2,6,2,5,-3,6,-10,-2,1],[10,-6,-7,-5,7,10,-6,-9,-8,-6,-10,6,2],[9,6,6,7,-7,4,-9,3,4,-2,2,5,5],[-8,1,8,5,-9,-10,-10,-1,8,-7,9,-10,6],[3,9,-7,8,4,8,-9,-10,-3,3,-7,6,-2],[9,6,-2,-7,8,6,1,-1,1,6,-7,4,-5],[-3,-6,5,-6,1,1,-1,-3,4,-8,3,-5,3],[-7,5,7,-2,2,-8,-10,8,-6,-10,-5,3,9],[5,6,-5,-6,-5,-8,-7,4,-1,-4,-6,6,-1]],[[8,4,-9,-1,-8,8,-9,-6,1,9,1,-10,7],[-7,-1,3,10,9,6,-6,8,-8,-8,4,-2,-7],[-3,7,-4,-4,-1,-4,-4,-4,-3,-7,-6,-8,3],[-6,-4,-5,-9,-8,5,7,7,-8,-6,-3,3,-10],[7,5,-9,-3,3,2,10,-4,10,-2,-5,-9,-3],[10,4,-6,5,1,10,6,1,7,6,8,-5,6],[-3,10,9,3,-7,4,-8,-5,6,4,-7,-1,-4],[-2,1,10,-1,1,2,3,3,-3,-10,-1,-10,-6],[-8,2,9,-5,-2,-6,7,4,1,1,3,-5,2],[1,-1,-1,-7,-4,-8,7,-4,-2,-10,10,-4,-3],[5,-1,-4,-1,1,-7,-6,3,8,4,4,-2,-2],[4,-5,2,7,-1,6,-7,3,-5,4,2,9,5]],[[4,8,2,-4,10,-1,1,-9,3,4,-1,4,9],[7,-4,1,-2,3,-2,-2,-5,1,-6,-3,-8,4],[5,5,6,2,-4,7,4,9,9,10,8,-7,4],[3,6,1,7,-5,-8,4,-2,10,-3,3,4,-3],[7,-7,2,4,7,-9,-1,-9,3,-5,-4,-2,5],[6,-1,10,-3,-8,6,10,7,-8,-6,-1,10,-4],[10,1,1,3,-10,-9,-9,-5,1,8,7,-10,7],[-9,-5,1,-1,1,2,6,-8,-5,4,-3,7,6],[-1,4,6,-3,10,-8,-10,3,-6,4,-5,-2,8],[5,9,9,6,6,-1,-4,-6,-2,-5,8,5,5],[10,-1,3,6,-7,-9,-10,-8,-5,4,7,6,10],[-3,-6,6,-6,-8,3,8,-3,-7,-4,-6,7,8]],[[3,-8,-10,1,-1,-3,4,-5,-7,8,-2,3,-10],[-4,-8,-3,-8,5,5,-3,-2,1,-10,-4,-1,-9],[9,-10,-10,8,-7,-10,-3,5,2,2,6,2,2],[-3,10,8,3,-10,2,-2,8,-6,-8,9,-8,-5],[-6,10,-5,-5,-6,-6,-8,-1,-4,-9,-6,3,5],[3,-3,-10,5,1,3,-7,-8,8,-3,6,4,10],[-2,6,-5,5,-7,-8,-4,-2,-4,6,6,-8,4],[6,3,10,9,7,4,3,-4,4,2,5,-7,-10],[6,3,3,-10,7,4,-7,-1,10,10,7,-3,2],[-8,8,3,5,-4,7,-7,-3,10,1,-10,-7,6],[-6,4,-5,-6,-10,9,-7,6,-6,-8,-1,10,10],[-2,2,-1,-6,-4,-9,6,-1,5,-7,-4,1,3]],[[-10,7,-4,-7,6,3,-4,3,-1,-3,3,2,8],[-4,-10,4,-1,-2,-9,-9,6,8,-1,5,9,4],[-5,-3,-4,3,-5,6,7,1,6,10,-6,-3,-9],[-10,-6,4,3,-4,6,5,-4,7,6,7,2,5],[8,-4,6,-7,8,-2,9,-2,-5,6,5,-3,3],[-4,-9,-2,6,-6,-2,3,-6,-3,-2,10,1,7],[9,-8,9,-7,2,7,-7,-10,-8,9,9,9,-8],[-9,6,6,5,8,-7,-2,8,8,-4,4,-3,-6],[-6,6,-5,-2,2,-6,3,10,-3,-10,-4,4,-7],[10,1,2,4,-3,2,9,5,-8,-3,8,-3,-7],[-5,6,1,-9,3,-10,-9,5,-10,5,4,-2,4],[-3,8,-5,-10,4,7,4,7,7,8,-9,-8,4]],[[8,7,7,10,-9,-10,-3,10,10,-10,-7,6,8],[-4,10,8,-3,9,-4,-7,3,2,2,6,6,-2],[4,10,3,-2,-1,8,-5,6,-7,4,10,6,8],[3,-1,-8,-3,10,-2,7,-1,1,-6,-5,2,3],[-5,-2,-2,-8,-2,-7,-3,-2,-9,10,6,6,-8],[4,-2,2,5,-2,-2,9,7,10,-5,4,-1,-4],[6,10,-2,-6,9,-4,1,-1,-6,-7,-8,-2,-1],[-9,-1,-1,2,2,6,-8,5,9,-8,9,3,-7],[-4,8,-3,10,-7,-4,-2,4,-4,3,6,5,4],[-8,-1,2,3,-3,-4,-2,-3,3,-3,-3,1,8],[8,1,-9,-1,-3,-8,-2,3,-5,8,-3,3,-7],[-3,-4,6,-4,6,-6,-6,1,-7,6,-8,7,8]],[[6,-6,-10,1,-9,6,6,7,-8,-2,6,1,-9],[2,6,8,3,-6,2,-7,-6,4,-4,3,3,-2],[-5,2,3,-2,4,-10,3,-2,-3,5,1,-1,-2],[8,10,-6,-4,-10,2,5,-3,5,-10,2,5,3],[9,-4,8,8,-3,-2,-1,-5,4,1,4,3,2],[-5,3,6,2,4,-3,8,7,4,-10,-2,-8,2],[-10,5,-10,-10,8,8,-7,10,7,7,-7,3,-1],[-4,10,2,2,-2,8,9,10,-8,10,-9,7,10],[-1,3,-7,-3,-4,-7,-2,1,10,8,7,-9,5],[5,-7,7,-7,-10,-9,3,7,2,-6,-9,-4,8],[-2,-8,8,8,8,3,-8,-2,-7,-2,7,-6,-8],[-1,2,4,8,-3,-5,4,-8,9,-2,-3,-7,7]],[[-1,-7,8,3,-9,7,9,6,1,-7,6,7,8],[1,6,-1,9,-8,-8,-8,-10,-6,5,2,1,6],[-7,9,4,-3,6,-9,-4,3,-10,2,-5,8,2],[7,1,-5,8,-4,-2,5,2,2,-1,-1,5,10],[4,2,-7,-1,4,-7,-8,9,1,-9,-9,3,5],[2,7,-1,-9,-9,4,9,6,4,-8,-5,6,3],[4,-5,10,-10,-1,-10,-4,1,6,7,3,-7,4],[-1,5,-6,-10,1,-10,6,2,4,-2,-5,2,-2],[3,7,1,-8,3,-9,-8,-2,-1,-2,4,-10,-8],[9,-7,6,-10,7,-4,-2,-10,-10,1,-9,-2,-5],[4,5,10,-3,-6,-7,3,-2,9,-3,-4,7,7],[-10,-6,5,10,-3,7,7,6,-2,6,-5,-7,-3]]], dtype = "int16")#candidate|882|(15, 12, 13)|const|int16
bop_883 = relay.greater(var_881.astype('bool'), relay.reshape(const_882.astype('bool'), relay.shape_of(var_881))) # shape=(15, 12, 13)
uop_889 = relay.sin(const_882.astype('float32')) # shape=(15, 12, 13)
output = relay.Tuple([bop_883,uop_889,])
output2 = relay.Tuple([bop_883,uop_889,])
func_894 = relay.Function([var_881,], output)
mod['func_894'] = func_894
mod = relay.transform.InferType()(mod)
var_895 = relay.var("var_895", dtype = "int16", shape = (15, 12, 13))#candidate|895|(15, 12, 13)|var|int16
output = func_894(var_895)
func_896 = relay.Function([var_895], output)
mutated_mod['func_896'] = func_896
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1254 = relay.var("var_1254", dtype = "int8", shape = (12, 1, 12))#candidate|1254|(12, 1, 12)|var|int8
var_1255 = relay.var("var_1255", dtype = "int8", shape = (12, 1, 12))#candidate|1255|(12, 1, 12)|var|int8
bop_1256 = relay.greater_equal(var_1254.astype('bool'), relay.reshape(var_1255.astype('bool'), relay.shape_of(var_1254))) # shape=(12, 1, 12)
output = relay.Tuple([bop_1256,])
output2 = relay.Tuple([bop_1256,])
func_1267 = relay.Function([var_1254,var_1255,], output)
mod['func_1267'] = func_1267
mod = relay.transform.InferType()(mod)
var_1268 = relay.var("var_1268", dtype = "int8", shape = (12, 1, 12))#candidate|1268|(12, 1, 12)|var|int8
var_1269 = relay.var("var_1269", dtype = "int8", shape = (12, 1, 12))#candidate|1269|(12, 1, 12)|var|int8
output = func_1267(var_1268,var_1269,)
func_1270 = relay.Function([var_1268,var_1269,], output)
mutated_mod['func_1270'] = func_1270
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1495 = relay.var("var_1495", dtype = "float32", shape = (7, 11, 15))#candidate|1495|(7, 11, 15)|var|float32
uop_1496 = relay.exp(var_1495.astype('float32')) # shape=(7, 11, 15)
func_1267_call = mod.get_global_var('func_1267')
func_1270_call = mutated_mod.get_global_var('func_1270')
const_1502 = relay.const([6,-6,3,-2,-3,-2,-5,9,-7,-8,10,1,-5,-8,8,3,3,4,5,3,-6,-9,6,-7,-8,1,2,-7,8,8,-9,3,-8,-7,5,-5,7,-4,-3,3,-7,-9,-8,-3,-2,-6,2,4,-6,-7,3,4,5,10,-10,-9,-9,5,5,-6,1,-9,-1,6,-3,10,4,-5,-3,-7,8,-1,4,-6,6,-5,6,-1,-6,6,-10,7,-2,1,7,-10,3,4,7,-6,4,1,5,6,-1,-3,1,-4,-10,2,-4,2,6,-5,-8,8,-4,1,-3,1,1,4,3,7,-5,-3,-3,-6,-3,-2,4,10,-10,-7,9,-6,3,-2,-10,-2,-8,-1,1,10,10,4,3,-4,-6,6,1,4,4,2], dtype = "int8")#candidate|1502|(144,)|const|int8
call_1501 = relay.TupleGetItem(func_1267_call(relay.reshape(const_1502.astype('int8'), [12, 1, 12]), relay.reshape(const_1502.astype('int8'), [12, 1, 12]), ), 0)
call_1503 = relay.TupleGetItem(func_1270_call(relay.reshape(const_1502.astype('int8'), [12, 1, 12]), relay.reshape(const_1502.astype('int8'), [12, 1, 12]), ), 0)
var_1505 = relay.var("var_1505", dtype = "float32", shape = (7, 11, 15))#candidate|1505|(7, 11, 15)|var|float32
bop_1506 = relay.right_shift(uop_1496.astype('int64'), relay.reshape(var_1505.astype('int64'), relay.shape_of(uop_1496))) # shape=(7, 11, 15)
bop_1509 = relay.less(uop_1496.astype('bool'), relay.reshape(var_1505.astype('bool'), relay.shape_of(uop_1496))) # shape=(7, 11, 15)
output = relay.Tuple([call_1501,const_1502,bop_1506,bop_1509,])
output2 = relay.Tuple([call_1503,const_1502,bop_1506,bop_1509,])
func_1516 = relay.Function([var_1495,var_1505,], output)
mod['func_1516'] = func_1516
mod = relay.transform.InferType()(mod)
mutated_mod['func_1516'] = func_1516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1516_call = mutated_mod.get_global_var('func_1516')
var_1518 = relay.var("var_1518", dtype = "float32", shape = (7, 11, 15))#candidate|1518|(7, 11, 15)|var|float32
var_1519 = relay.var("var_1519", dtype = "float32", shape = (7, 11, 15))#candidate|1519|(7, 11, 15)|var|float32
call_1517 = func_1516_call(var_1518,var_1519,)
output = call_1517
func_1520 = relay.Function([var_1518,var_1519,], output)
mutated_mod['func_1520'] = func_1520
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1560 = relay.var("var_1560", dtype = "int16", shape = ())#candidate|1560|()|var|int16
var_1561 = relay.var("var_1561", dtype = "int16", shape = (15, 1, 6))#candidate|1561|(15, 1, 6)|var|int16
bop_1562 = relay.subtract(var_1560.astype('int16'), var_1561.astype('int16')) # shape=(15, 1, 6)
func_598_call = mod.get_global_var('func_598')
func_602_call = mutated_mod.get_global_var('func_602')
const_1580 = relay.const([8,6,5,7,3,-7,-6,9,-4,6,9,-10], dtype = "uint64")#candidate|1580|(12,)|const|uint64
var_1581 = relay.var("var_1581", dtype = "int64", shape = (108, 4))#candidate|1581|(108, 4)|var|int64
call_1579 = relay.TupleGetItem(func_598_call(relay.reshape(var_1560.astype('uint64'), []), relay.reshape(const_1580.astype('uint64'), [6, 2, 1]), relay.reshape(var_1581.astype('int64'), [12, 36]), ), 0)
call_1582 = relay.TupleGetItem(func_602_call(relay.reshape(var_1560.astype('uint64'), []), relay.reshape(const_1580.astype('uint64'), [6, 2, 1]), relay.reshape(var_1581.astype('int64'), [12, 36]), ), 0)
output = relay.Tuple([bop_1562,call_1579,const_1580,var_1581,])
output2 = relay.Tuple([bop_1562,call_1582,const_1580,var_1581,])
func_1587 = relay.Function([var_1560,var_1561,var_1581,], output)
mod['func_1587'] = func_1587
mod = relay.transform.InferType()(mod)
mutated_mod['func_1587'] = func_1587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1587_call = mutated_mod.get_global_var('func_1587')
var_1589 = relay.var("var_1589", dtype = "int16", shape = ())#candidate|1589|()|var|int16
var_1590 = relay.var("var_1590", dtype = "int16", shape = (15, 1, 6))#candidate|1590|(15, 1, 6)|var|int16
var_1591 = relay.var("var_1591", dtype = "int64", shape = (108, 4))#candidate|1591|(108, 4)|var|int64
call_1588 = func_1587_call(var_1589,var_1590,var_1591,)
output = call_1588
func_1592 = relay.Function([var_1589,var_1590,var_1591,], output)
mutated_mod['func_1592'] = func_1592
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1607 = relay.var("var_1607", dtype = "float32", shape = (14, 1, 6))#candidate|1607|(14, 1, 6)|var|float32
uop_1608 = relay.asin(var_1607.astype('float32')) # shape=(14, 1, 6)
uop_1611 = relay.erf(uop_1608.astype('float64')) # shape=(14, 1, 6)
func_894_call = mod.get_global_var('func_894')
func_896_call = mutated_mod.get_global_var('func_896')
var_1635 = relay.var("var_1635", dtype = "int16", shape = (2340,))#candidate|1635|(2340,)|var|int16
call_1634 = relay.TupleGetItem(func_894_call(relay.reshape(var_1635.astype('int16'), [15, 12, 13])), 0)
call_1636 = relay.TupleGetItem(func_896_call(relay.reshape(var_1635.astype('int16'), [15, 12, 13])), 0)
output = relay.Tuple([uop_1611,call_1634,var_1635,])
output2 = relay.Tuple([uop_1611,call_1636,var_1635,])
func_1644 = relay.Function([var_1607,var_1635,], output)
mod['func_1644'] = func_1644
mod = relay.transform.InferType()(mod)
var_1645 = relay.var("var_1645", dtype = "float32", shape = (14, 1, 6))#candidate|1645|(14, 1, 6)|var|float32
var_1646 = relay.var("var_1646", dtype = "int16", shape = (2340,))#candidate|1646|(2340,)|var|int16
output = func_1644(var_1645,var_1646,)
func_1647 = relay.Function([var_1645,var_1646,], output)
mutated_mod['func_1647'] = func_1647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1879 = relay.var("var_1879", dtype = "int64", shape = (5, 7, 6))#candidate|1879|(5, 7, 6)|var|int64
const_1880 = relay.const([[[6,-6,-7,-3,6,-3],[-1,-4,-2,9,4,-8],[3,6,8,-9,-7,-9],[7,-1,-1,-4,9,7],[6,-3,-6,-7,-9,-9],[3,1,-5,4,4,5],[-2,-10,-6,-2,-4,3]],[[4,-9,4,-1,-7,1],[-3,-6,-2,4,9,-5],[-10,-9,10,2,-3,8],[-2,6,-1,3,-4,3],[-9,10,-9,-5,1,-3],[8,-8,10,-2,-5,2],[-7,-10,-6,-5,-9,3]],[[1,9,3,-7,-9,6],[9,4,6,9,-2,2],[-3,-1,3,10,-3,8],[-3,1,-7,3,-4,-1],[-2,-4,9,-2,-7,5],[-8,-6,6,-1,8,-10],[8,3,10,-4,4,7]],[[-8,-8,-2,4,9,-3],[3,-1,5,-6,-5,-6],[-2,-9,10,10,7,-2],[-2,-10,-6,4,-8,-8],[8,-5,2,-10,-4,1],[-7,4,10,4,4,-2],[9,-8,3,-10,-10,4]],[[8,6,-4,-10,9,-6],[1,10,-6,-6,8,-3],[-9,-2,10,3,-1,-2],[8,-8,7,6,6,5],[-10,-10,-6,1,-8,8],[-10,-5,-2,8,2,-8],[9,-1,4,8,9,-2]]], dtype = "int64")#candidate|1880|(5, 7, 6)|const|int64
bop_1881 = relay.logical_xor(var_1879.astype('int64'), relay.reshape(const_1880.astype('int64'), relay.shape_of(var_1879))) # shape=(5, 7, 6)
func_1644_call = mod.get_global_var('func_1644')
func_1647_call = mutated_mod.get_global_var('func_1647')
var_1885 = relay.var("var_1885", dtype = "float32", shape = (84,))#candidate|1885|(84,)|var|float32
var_1886 = relay.var("var_1886", dtype = "int16", shape = (2340,))#candidate|1886|(2340,)|var|int16
call_1884 = relay.TupleGetItem(func_1644_call(relay.reshape(var_1885.astype('float32'), [14, 1, 6]), relay.reshape(var_1886.astype('int16'), [2340,]), ), 1)
call_1887 = relay.TupleGetItem(func_1647_call(relay.reshape(var_1885.astype('float32'), [14, 1, 6]), relay.reshape(var_1886.astype('int16'), [2340,]), ), 1)
bop_1889 = relay.less_equal(call_1884.astype('bool'), relay.reshape(var_1886.astype('bool'), relay.shape_of(call_1884))) # shape=(15, 12, 13)
bop_1892 = relay.less_equal(call_1887.astype('bool'), relay.reshape(var_1886.astype('bool'), relay.shape_of(call_1887))) # shape=(15, 12, 13)
func_1587_call = mod.get_global_var('func_1587')
func_1592_call = mutated_mod.get_global_var('func_1592')
var_1896 = relay.var("var_1896", dtype = "int16", shape = ())#candidate|1896|()|var|int16
const_1897 = relay.const([5,-5,-6,-4,1,10,9,8,9,5,-10,2,6,-5,-1,6,-6,7,-1,-4,6,-6,2,-9,3,-8,2,-10,6,-7,-4,10,-8,-9,-7,-9,-5,-10,-2,1,2,-8,-1,-3,8,3,5,-9,10,1,-2,-2,7,7,-10,-3,-8,-9,3,-8,-1,2,-4,-8,10,-6,10,-1,-2,4,-7,-6,-2,-5,-6,6,6,3,9,-8,9,-3,-2,5,3,7,8,6,-8,-5], dtype = "int16")#candidate|1897|(90,)|const|int16
var_1898 = relay.var("var_1898", dtype = "int64", shape = (12, 36))#candidate|1898|(12, 36)|var|int64
call_1895 = relay.TupleGetItem(func_1587_call(relay.reshape(var_1896.astype('int16'), []), relay.reshape(const_1897.astype('int16'), [15, 1, 6]), relay.reshape(var_1898.astype('int64'), [108, 4]), ), 2)
call_1899 = relay.TupleGetItem(func_1592_call(relay.reshape(var_1896.astype('int16'), []), relay.reshape(const_1897.astype('int16'), [15, 1, 6]), relay.reshape(var_1898.astype('int64'), [108, 4]), ), 2)
output = relay.Tuple([bop_1881,var_1885,bop_1889,call_1895,var_1896,const_1897,var_1898,])
output2 = relay.Tuple([bop_1881,var_1885,bop_1892,call_1899,var_1896,const_1897,var_1898,])
func_1923 = relay.Function([var_1879,var_1885,var_1886,var_1896,var_1898,], output)
mod['func_1923'] = func_1923
mod = relay.transform.InferType()(mod)
mutated_mod['func_1923'] = func_1923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1923_call = mutated_mod.get_global_var('func_1923')
var_1925 = relay.var("var_1925", dtype = "int64", shape = (5, 7, 6))#candidate|1925|(5, 7, 6)|var|int64
var_1926 = relay.var("var_1926", dtype = "float32", shape = (84,))#candidate|1926|(84,)|var|float32
var_1927 = relay.var("var_1927", dtype = "int16", shape = (2340,))#candidate|1927|(2340,)|var|int16
var_1928 = relay.var("var_1928", dtype = "int16", shape = ())#candidate|1928|()|var|int16
var_1929 = relay.var("var_1929", dtype = "int64", shape = (12, 36))#candidate|1929|(12, 36)|var|int64
call_1924 = func_1923_call(var_1925,var_1926,var_1927,var_1928,var_1929,)
output = call_1924
func_1930 = relay.Function([var_1925,var_1926,var_1927,var_1928,var_1929,], output)
mutated_mod['func_1930'] = func_1930
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2030 = relay.var("var_2030", dtype = "float32", shape = (4, 3, 15))#candidate|2030|(4, 3, 15)|var|float32
uop_2031 = relay.cosh(var_2030.astype('float32')) # shape=(4, 3, 15)
output = uop_2031
output2 = uop_2031
func_2036 = relay.Function([var_2030,], output)
mod['func_2036'] = func_2036
mod = relay.transform.InferType()(mod)
mutated_mod['func_2036'] = func_2036
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2037 = relay.var("var_2037", dtype = "float32", shape = (4, 3, 15))#candidate|2037|(4, 3, 15)|var|float32
func_2036_call = mutated_mod.get_global_var('func_2036')
call_2038 = func_2036_call(var_2037)
output = call_2038
func_2039 = relay.Function([var_2037], output)
mutated_mod['func_2039'] = func_2039
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2124 = relay.var("var_2124", dtype = "uint8", shape = (6, 7, 8))#candidate|2124|(6, 7, 8)|var|uint8
var_2125 = relay.var("var_2125", dtype = "uint8", shape = (6, 7, 8))#candidate|2125|(6, 7, 8)|var|uint8
bop_2126 = relay.bitwise_xor(var_2124.astype('uint8'), relay.reshape(var_2125.astype('uint8'), relay.shape_of(var_2124))) # shape=(6, 7, 8)
func_1644_call = mod.get_global_var('func_1644')
func_1647_call = mutated_mod.get_global_var('func_1647')
var_2131 = relay.var("var_2131", dtype = "float32", shape = (84,))#candidate|2131|(84,)|var|float32
var_2132 = relay.var("var_2132", dtype = "int16", shape = (2340,))#candidate|2132|(2340,)|var|int16
call_2130 = relay.TupleGetItem(func_1644_call(relay.reshape(var_2131.astype('float32'), [14, 1, 6]), relay.reshape(var_2132.astype('int16'), [2340,]), ), 1)
call_2133 = relay.TupleGetItem(func_1647_call(relay.reshape(var_2131.astype('float32'), [14, 1, 6]), relay.reshape(var_2132.astype('int16'), [2340,]), ), 1)
output = relay.Tuple([bop_2126,call_2130,var_2131,var_2132,])
output2 = relay.Tuple([bop_2126,call_2133,var_2131,var_2132,])
func_2134 = relay.Function([var_2124,var_2125,var_2131,var_2132,], output)
mod['func_2134'] = func_2134
mod = relay.transform.InferType()(mod)
mutated_mod['func_2134'] = func_2134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2134_call = mutated_mod.get_global_var('func_2134')
var_2136 = relay.var("var_2136", dtype = "uint8", shape = (6, 7, 8))#candidate|2136|(6, 7, 8)|var|uint8
var_2137 = relay.var("var_2137", dtype = "uint8", shape = (6, 7, 8))#candidate|2137|(6, 7, 8)|var|uint8
var_2138 = relay.var("var_2138", dtype = "float32", shape = (84,))#candidate|2138|(84,)|var|float32
var_2139 = relay.var("var_2139", dtype = "int16", shape = (2340,))#candidate|2139|(2340,)|var|int16
call_2135 = func_2134_call(var_2136,var_2137,var_2138,var_2139,)
output = call_2135
func_2140 = relay.Function([var_2136,var_2137,var_2138,var_2139,], output)
mutated_mod['func_2140'] = func_2140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2510 = relay.var("var_2510", dtype = "float32", shape = (13, 15, 1))#candidate|2510|(13, 15, 1)|var|float32
uop_2511 = relay.rsqrt(var_2510.astype('float32')) # shape=(13, 15, 1)
func_1267_call = mod.get_global_var('func_1267')
func_1270_call = mutated_mod.get_global_var('func_1270')
const_2516 = relay.const([-9,-8,3,-5,-5,3,-5,3,-6,7,4,2,5,-10,-2,-5,-5,-9,6,-5,9,7,10,-1,6,-4,9,6,9,-2,1,4,-10,-4,-9,7,9,-1,6,5,9,-2,-7,-4,-6,-7,-4,5,-6,-2,10,-2,-5,-7,-4,-3,-2,-5,5,5,-8,10,-5,-9,4,7,-3,2,-1,-9,1,-2,-8,6,-8,5,-5,-1,-10,3,-2,-7,-9,-10,-7,-5,-2,-5,-4,4,-10,-10,-5,-7,-1,-8,-9,5,1,-8,6,-9,10,7,-5,-10,1,1,-10,1,-7,2,2,-5,5,-5,7,-9,10,-3,-8,-9,2,3,8,-3,2,2,5,1,1,2,2,6,-9,4,-3,-4,-4,-9,4,-9,9,2], dtype = "int8")#candidate|2516|(144,)|const|int8
call_2515 = relay.TupleGetItem(func_1267_call(relay.reshape(const_2516.astype('int8'), [12, 1, 12]), relay.reshape(const_2516.astype('int8'), [12, 1, 12]), ), 0)
call_2517 = relay.TupleGetItem(func_1270_call(relay.reshape(const_2516.astype('int8'), [12, 1, 12]), relay.reshape(const_2516.astype('int8'), [12, 1, 12]), ), 0)
output = relay.Tuple([uop_2511,call_2515,const_2516,])
output2 = relay.Tuple([uop_2511,call_2517,const_2516,])
func_2518 = relay.Function([var_2510,], output)
mod['func_2518'] = func_2518
mod = relay.transform.InferType()(mod)
mutated_mod['func_2518'] = func_2518
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2519 = relay.var("var_2519", dtype = "float32", shape = (13, 15, 1))#candidate|2519|(13, 15, 1)|var|float32
func_2518_call = mutated_mod.get_global_var('func_2518')
call_2520 = func_2518_call(var_2519)
output = call_2520
func_2521 = relay.Function([var_2519], output)
mutated_mod['func_2521'] = func_2521
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2591 = relay.const([[[-9.918162,-6.983280,-1.746324,-2.870148,-0.505588,-1.557808,-5.583081,-4.479481,-9.410900,9.198711,-8.836654,5.207163],[-5.933996,-3.963972,-1.235310,-3.038856,6.853382,-1.603456,2.500575,2.599962,-1.256117,-7.488143,6.952562,-1.083245],[-0.180953,4.487972,1.321937,6.481185,-6.962997,-1.425728,8.790719,2.595308,8.615129,-6.437216,-5.409223,5.982867],[6.890258,8.631008,-8.697383,0.458517,-3.219195,4.244457,3.667108,5.986438,9.781697,-1.849217,-8.889084,2.325172],[5.389849,-5.111723,1.988706,0.375235,6.790653,-8.657213,-3.715997,-2.864668,-2.790773,7.292753,-4.726465,0.786115],[-8.103584,-1.793795,6.135475,8.292039,3.497538,2.082471,5.698771,-9.640082,9.111404,-6.437695,-5.338355,-0.728794],[9.280622,-0.281169,-1.616627,6.574589,4.717402,8.906631,5.435861,1.715402,-8.826631,-9.033876,8.636106,2.496065],[4.652037,2.298327,-2.452571,-2.332512,5.679220,-1.922219,4.419056,-0.115056,8.137514,4.248613,-6.805733,-5.239608],[7.412722,-8.815154,0.017895,-8.522594,-0.301922,-3.676092,4.356271,-4.131912,7.609211,0.566382,-0.088572,8.683363],[5.462234,-6.411649,0.329938,2.368514,3.447124,-4.057272,9.790377,9.455401,-9.083252,-3.883842,9.408990,-9.931490],[2.498102,0.721546,2.427776,-1.677952,0.774262,9.818489,1.384653,-0.971990,-0.660259,4.381617,5.817504,8.230273],[-2.797808,9.764647,-1.312313,-8.535081,2.952630,6.999533,-6.003357,-5.837472,1.361685,-8.977779,-3.860481,5.376210],[3.136331,-6.794964,-1.420039,-0.152664,1.686308,-2.742937,1.323824,-4.986530,-7.289143,-7.095649,0.265087,-8.150957],[-7.350112,9.505186,3.366545,6.047311,3.269810,6.575776,-2.497838,-5.414667,-1.231092,6.661470,9.926342,-8.744451],[-3.359680,-3.370292,2.511904,-9.252622,3.825873,-1.548954,-3.085802,-7.624282,1.652632,2.653436,5.026824,-8.503426]],[[-7.876747,-4.374539,6.643600,5.967661,0.990099,4.157348,2.814740,-2.991944,4.045654,1.903403,-6.475580,6.003999],[-5.507808,0.143431,-7.848963,0.152122,-6.387310,-9.781326,-9.818963,1.366591,0.643937,7.260657,-9.524095,2.831472],[-0.132025,3.971417,-5.067241,1.227868,-0.338597,7.761281,-9.456571,9.264170,-7.451166,-9.704359,-2.242076,-8.077959],[-5.743283,-1.750363,4.284819,-6.364525,-9.092056,-6.290027,-3.938590,0.497743,1.543194,3.859044,0.413408,-1.639580],[-4.893123,7.259595,-7.509026,-0.959649,0.545520,8.316373,-4.588807,-7.291008,9.498740,-9.174889,-9.538129,-0.321993],[-1.832854,0.536019,9.216220,7.790657,-1.484790,-2.000150,-7.401088,6.929911,5.874006,-0.700070,-6.934847,-8.118782],[1.151054,8.324850,4.610443,1.744722,3.648028,7.936806,-1.767017,-8.367084,0.028343,6.682977,8.555158,3.680739],[4.100364,0.027918,2.140753,-5.215935,-5.467098,-5.527953,6.859473,3.126058,2.663573,7.579003,8.453276,-1.515109],[-6.166978,-6.082491,7.356518,-9.179720,2.997610,-6.112737,-6.488731,9.097205,7.221474,-7.933291,-1.553556,7.135670],[-2.260087,9.385985,6.410681,6.577109,-1.090953,1.017229,4.426007,-8.540436,3.131191,7.680092,0.499499,-0.803658],[5.308922,-9.171088,-9.652241,8.377889,-6.164244,-6.454860,-3.434581,-5.489680,9.025827,-0.100929,8.749041,2.904584],[-8.584459,-3.168757,-3.796684,-4.255804,8.821361,2.355478,-3.493104,1.507071,5.297062,-9.960323,9.480652,-7.556211],[4.480559,9.386354,-5.872874,0.510720,-2.298281,-1.270229,5.622271,-2.728518,4.626463,-6.167005,-8.540924,7.104656],[-7.364375,8.232097,-7.831042,-9.489514,0.124433,-1.073193,7.355470,-7.867584,-5.412386,-2.063838,8.028987,-2.086568],[-6.588080,-6.212734,-8.027851,-4.691657,-0.339800,-9.073670,-2.723854,-5.692067,3.976081,5.930509,-0.225496,-5.476854]],[[-5.484624,-9.713946,5.831090,0.548228,-7.434284,-3.691760,0.261696,0.994376,-2.194316,-0.674009,-0.837070,-6.632869],[0.706498,-9.749956,2.193561,-0.601376,3.016405,6.080090,-9.734916,-0.366593,8.054190,8.686578,-3.164099,-8.135313],[3.303953,4.505604,0.936697,7.185226,5.218436,-9.829652,-2.919436,-2.207587,-9.933142,-8.929274,-0.411167,4.586660],[6.371108,-3.906587,6.456094,-4.558216,5.556358,-5.082759,-5.937958,-3.575973,-9.162419,-5.556111,4.655743,-0.449352],[6.031407,-3.863409,-4.012889,5.527130,4.984742,8.051091,-5.329410,6.098735,4.041792,-4.914953,6.539913,7.809873],[0.528101,-8.536152,-0.500539,-3.689086,6.333449,-5.119241,-9.246743,3.177344,3.741665,-8.344869,-3.331973,-5.666528],[-1.409780,6.485547,1.622880,1.795390,4.121825,5.073036,-1.998946,5.229278,8.161596,9.477929,2.243496,0.618545],[7.397060,-2.519204,4.328076,2.043750,9.880866,7.609586,6.071944,5.089675,-3.375386,6.618379,2.094019,-0.317137],[-6.245267,-0.811660,-9.594199,-7.479487,-0.134521,6.428876,0.153688,8.143138,-8.597420,5.292808,5.838815,-3.596892],[-0.509057,-5.513335,-9.599019,-1.277068,9.509629,-5.097285,-2.215287,0.295494,3.398803,-9.369730,-0.849280,5.984197],[-3.844999,-1.280014,7.194596,9.867352,-0.306072,2.596767,-9.211649,9.241661,3.541336,4.799329,2.534052,-1.187117],[4.229960,6.675302,-1.436448,-9.667598,-1.303296,-6.619360,6.634466,8.888568,7.657929,-6.116214,-2.118789,4.989548],[5.564849,9.098460,-0.656586,6.738782,-0.266320,2.998570,7.262323,3.565062,-9.244249,-7.676805,9.053165,-1.758463],[-8.285003,-6.700109,-5.342380,-2.985683,-2.748658,-0.945524,0.167116,-9.523468,1.093290,-3.438453,-1.897367,-9.891910],[0.100329,-6.129186,-5.369016,-2.968076,-5.104966,2.076611,-4.801983,-5.737352,7.885709,3.382716,8.710650,-6.041650]],[[0.835335,8.144341,-0.894893,7.547412,-2.734796,-6.223963,-6.635110,-0.209564,7.667421,4.516775,8.743039,-7.345562],[3.700585,-3.736555,4.864031,0.641307,0.049119,-1.004460,-4.266436,-1.011722,-9.841791,9.703277,2.048131,0.757895],[0.395808,-5.264430,-7.771797,0.201431,8.303659,-3.993709,-3.294146,8.031646,3.242233,8.016189,2.220271,-6.802728],[-6.011966,-7.668443,7.666669,-7.076773,3.493161,-2.910752,5.055034,1.102799,2.653643,0.495798,5.410347,1.490851],[2.605969,-5.483014,-5.053992,-3.228272,-7.302636,-8.002886,-1.324894,-8.602024,-7.831599,4.936526,-4.441862,-0.075972],[7.167552,1.184446,-2.612023,3.212087,9.682113,4.665557,-6.260556,-1.648890,-1.888389,9.532877,6.446999,-9.402750],[-1.972899,9.098934,-4.084894,-9.556496,1.702717,-2.901106,-4.674877,6.552233,8.980529,-8.722512,-9.443822,-5.622544],[8.536563,8.667509,3.154164,-0.149246,-5.206027,-9.403647,5.807682,-5.644890,-6.870897,3.610430,-0.304466,-8.903455],[6.731057,3.352930,0.248276,-1.997382,6.409726,2.368074,-3.923551,-5.443755,4.713047,7.264940,0.050614,-7.824908],[5.290221,6.406426,-4.513867,6.062509,-3.591387,-2.045861,3.657990,-3.467578,-7.460365,7.090627,-5.712040,8.969470],[1.125205,-3.387501,-1.780569,-0.738048,-2.587784,0.361770,-0.432652,-2.400184,-4.249144,-9.484612,-5.811891,-8.933824],[6.603862,4.595181,-7.620433,6.268307,2.830325,-9.505084,-5.589556,7.748658,-2.909863,-0.584914,-8.977794,7.855310],[0.979217,-9.519633,7.749333,-9.531260,-7.678576,-6.844357,7.717522,-8.517976,8.121819,-2.672409,-6.415579,0.765548],[1.335261,9.640863,-2.606932,-5.011871,-8.121992,5.259136,7.022240,-6.722318,4.155552,-0.019817,6.654859,-3.741759],[-3.707939,-0.742443,-5.435614,5.015775,8.295484,6.643781,-4.379244,2.548091,-6.590471,-1.596830,6.321950,-9.028723]],[[9.418175,1.052492,1.261574,9.070135,-5.372150,-9.734583,4.244087,-4.746990,-6.449931,1.952944,7.326961,-8.404159],[3.045053,-7.607581,9.086936,-9.213099,2.685650,7.006547,9.148804,-1.966216,4.356011,-6.470948,0.353494,5.865391],[1.887110,-3.467875,-8.232097,-2.906093,1.818820,-0.914558,0.911897,7.328918,-9.158532,-7.729177,0.936264,9.336631],[3.547197,-0.607355,9.153869,8.155062,-1.262335,8.391406,-3.967895,-8.444445,-3.937899,-2.531568,1.990691,4.402432],[8.265654,0.454783,-4.728118,7.952136,4.555324,-0.762679,9.965260,5.283163,4.228509,-2.987749,-3.996116,9.027336],[5.725171,7.161325,0.478688,-7.166496,-1.664481,-8.241508,4.361619,-1.897632,8.606200,6.182439,-8.393774,-4.553860],[2.151028,3.182172,9.954569,3.359601,2.012091,-4.673007,7.557241,5.085484,-8.772035,-9.875699,7.045144,-9.538181],[-5.126725,0.126241,-0.214252,-2.883713,6.079484,-3.272983,5.522899,6.364419,-7.574105,6.193554,6.267155,3.994593],[-7.438540,6.288507,-3.786752,-0.744360,6.813469,-2.725409,5.359573,9.073243,-1.399290,-8.442146,1.340791,-1.221601],[4.038310,3.148361,-7.787394,-2.978296,3.138564,-4.472475,-0.962920,-0.997341,2.663735,3.763214,2.407815,6.112150],[-2.514342,8.697749,7.992976,7.628169,-1.705262,4.480374,6.332012,1.736512,4.941809,4.346120,3.899372,1.667218],[-3.955846,6.148859,-4.644300,1.122973,-1.355025,-0.608592,2.550426,-3.776222,1.600574,-9.717764,-8.053238,1.692015],[-2.876534,7.959593,-8.967040,-4.471880,2.544746,-2.218810,-3.883837,7.958124,7.711328,-2.269359,1.606185,-8.722829],[1.347309,-9.413198,-4.894620,3.674497,-0.573230,-9.398730,-0.731407,1.086521,0.348349,5.318827,2.705700,-7.206673],[-9.128681,5.202923,-8.013501,-9.942750,5.251523,5.838443,-6.564430,-2.772703,4.904367,4.993419,6.537004,2.692232]],[[5.292313,-6.247184,1.438192,9.802902,8.769798,-4.949712,-9.921419,4.066803,5.023642,2.121026,-4.384066,-9.214064],[9.729747,7.654151,-1.691769,9.555443,4.762174,-4.566191,-2.175946,-3.602845,4.986231,7.548023,-9.072319,2.973044],[2.505398,2.401771,-1.564456,0.366802,-3.891371,-5.850498,-8.409637,-2.899413,3.852308,-4.346956,-9.952507,2.986128],[7.876064,6.817284,-3.779393,4.188835,3.820636,6.295618,-2.556493,1.940464,8.408749,0.488413,5.321078,8.766588],[4.805877,5.927792,-9.471221,7.549080,8.211284,5.266975,4.316196,-8.176159,-2.932131,-4.637473,-2.032508,1.307006],[8.491175,8.686297,-3.596432,2.635524,6.180736,8.961721,4.491154,9.395961,7.024108,-8.070368,-1.688510,0.830727],[-8.441888,8.604221,-1.466135,-6.480020,-9.330530,-3.722248,-6.769596,-2.457524,-3.696910,-5.722184,-4.234393,6.385138],[-2.496766,-1.018570,-0.500291,7.120131,9.433914,2.774211,3.427341,8.679605,-7.323310,-7.253685,7.409235,-6.643854],[-9.518953,2.386422,-9.412669,-7.773099,8.316595,6.415936,3.095898,-0.745901,-7.490052,-2.840204,-4.816520,1.085273],[1.955695,3.736784,-3.912967,3.126657,-9.086458,9.110368,4.628460,-0.451837,-2.288014,-4.928840,-4.633699,-2.834566],[-3.885733,4.498602,-4.464880,5.708880,-1.167211,-5.805203,-2.083458,-9.216842,-8.223529,-7.037116,0.099442,-9.347525],[-5.130466,8.553500,-8.256727,7.983620,-9.289442,3.662377,5.976744,3.918994,6.037571,-2.673375,4.433262,3.251811],[-0.599588,0.201486,-7.998547,7.068036,-4.019774,8.168706,-1.628647,5.774978,6.657587,3.191456,-0.766718,5.726772],[-5.185728,7.523551,-0.342557,-7.235368,-8.831206,-6.327666,1.419688,-1.277280,3.391070,-0.355759,-4.038402,-2.197910],[-3.831460,1.709253,-4.280343,2.479472,-8.475244,-4.734834,7.374132,-0.368124,-4.310623,-6.946228,-5.403251,7.839200]],[[-0.936046,-7.016266,-2.301609,3.679271,-0.835833,7.662013,1.455324,-7.809906,3.624760,-6.193902,6.707935,3.365803],[5.730448,5.912635,-3.782573,1.219301,5.646220,0.835811,5.375368,-8.338055,4.601444,-4.685372,-4.029383,1.884688],[-0.399589,-7.247291,-6.464671,9.286455,2.426019,9.416883,-2.277415,1.694841,-2.455226,7.058290,2.865700,-0.958708],[3.035324,9.155286,5.582091,1.596798,-2.851564,2.165174,9.891950,-0.762881,2.135107,-6.068306,4.057258,7.649282],[4.218966,7.590752,5.636586,8.111350,-3.395341,-6.436910,3.956721,5.855378,-7.920850,-7.921717,-9.773196,-9.546815],[7.390754,7.213637,-8.781901,-9.204403,0.105761,-0.186637,6.968810,5.219865,-7.299482,8.744924,6.585947,6.900063],[7.418816,-0.204846,8.163087,-7.687791,0.680914,2.308064,-3.929582,9.553631,2.902404,-8.254755,-9.805990,-4.471299],[-4.084009,-7.854709,9.341333,2.219869,-5.868311,-3.455760,-3.545245,-6.062151,-4.704735,-6.310991,8.703378,-3.492835],[8.980250,-0.465784,-5.616191,1.572954,-4.120551,-5.872193,4.201040,7.690403,2.666347,8.591426,-5.436661,-7.515318],[3.819693,6.532116,-1.590426,2.490326,3.876660,9.733734,4.734735,-1.146427,0.936401,6.301298,-4.838744,-5.237685],[-1.592649,7.644996,0.388447,8.325875,-2.346816,8.068831,-2.236400,1.246271,-0.450568,1.821179,6.669958,-5.266369],[-1.651578,3.742896,-8.153734,7.625893,-3.234855,6.066239,-8.066538,-2.132090,9.273298,7.523909,7.279360,7.356218],[-7.762534,0.517637,-9.370173,-2.289815,6.751148,5.828831,0.017132,-5.509923,-8.766523,5.870893,-7.078008,2.945268],[3.898289,9.918029,7.450093,3.977280,6.462578,2.865902,-6.008365,-0.131600,-9.081899,6.711806,-8.146981,7.478421],[7.893843,3.165269,-7.024901,7.312069,-1.661846,-9.786621,-5.861967,7.331961,-9.347230,5.046409,-6.541302,-5.423785]],[[-5.806140,-4.529589,9.565432,6.552192,-2.496224,-3.663461,6.048627,-6.645173,-5.359885,-5.929956,-6.989645,-1.877513],[-5.475076,0.847058,-9.925042,7.767200,4.372074,8.966723,4.801689,9.156701,-8.817825,2.048275,-6.302465,7.826952],[-8.028900,5.583501,1.085954,-1.949824,9.575517,-8.394202,8.901183,-8.850039,9.623933,-9.242733,-8.115578,-0.272180],[0.123213,8.313391,7.806626,3.323088,-2.062675,0.100485,-3.786390,4.900493,7.633422,8.708261,-8.050701,-8.217482],[-0.147856,-6.674812,-9.378206,8.856631,-2.017912,9.524832,5.896386,-5.738948,8.089985,9.627758,9.417408,-7.653785],[-0.165436,6.871611,1.091036,-5.254803,-6.458005,5.695940,8.165326,7.515467,9.721779,9.325661,1.443983,-7.282448],[4.116908,-1.841309,-5.733621,-0.149988,0.123680,5.842264,5.549592,-5.569191,0.455376,-9.772502,-2.763439,-5.327745],[2.787718,-4.795943,0.152882,1.339914,-9.584080,4.496871,-3.602666,7.157679,-0.740756,0.150774,-0.141435,7.155075],[0.549197,-9.341880,7.426765,5.360885,-9.556906,1.020948,-4.333514,8.447535,4.753351,9.960115,-3.114403,3.696716],[-6.430338,-9.598624,-6.456439,-5.342784,2.430425,1.648735,5.765739,9.754057,-4.089570,-4.622430,-0.072457,7.720684],[-3.449609,6.484036,8.975393,6.608403,0.330236,-0.434537,-2.589794,8.738031,4.321101,-6.987169,3.020977,-0.032769],[6.748863,-5.257319,-0.817322,7.108186,0.996324,0.771553,5.943206,-6.222702,-0.114514,-2.382712,1.936807,3.413716],[-8.695051,8.152915,9.221739,5.797482,-8.723051,-2.280230,5.718595,-3.490615,8.100828,9.699412,-7.415813,1.589189],[-7.970676,6.821994,-4.840760,-5.758526,8.961744,-0.387189,9.905195,9.589794,-4.184246,5.011725,9.287087,-7.114874],[3.505857,6.444267,0.613388,3.142597,-1.591557,0.942820,8.563142,7.568435,1.276268,0.472311,7.238386,8.253219]],[[6.119913,4.384977,-2.785671,2.290903,3.127691,2.220454,8.627609,-3.982402,-6.040043,-4.087615,8.202770,-1.434056],[-2.037479,1.589042,-1.032855,4.331135,3.081473,-9.341687,-8.655890,-7.990770,-0.259854,-8.915637,-9.047976,6.619833],[-1.193419,-1.110968,7.944147,-8.461919,-3.135695,3.919041,-3.118304,-8.480109,6.305117,7.785026,-8.309523,7.612950],[-5.731000,0.741839,-3.730931,9.624238,-3.296119,-0.185490,-6.949691,7.474645,-7.374836,1.118842,0.853115,0.731086],[-7.529897,-7.958354,-9.342408,6.626103,3.693441,3.319823,9.560940,-1.848617,-8.887167,1.084046,-2.885180,6.515612],[8.672085,8.243594,9.549093,0.719820,-0.604986,-7.472537,3.187012,0.077911,-8.512571,-3.550260,1.656567,-8.987058],[4.805242,-3.005388,-3.129339,-2.095301,-4.454537,6.936940,-2.935329,5.756433,-6.058689,0.732066,1.157384,2.609735],[0.314829,4.180429,-4.789468,-8.782391,2.750472,4.933722,2.128461,4.800324,-1.111593,3.461210,0.645289,0.981664],[-2.266185,2.041266,6.023519,-5.182608,-1.156852,7.864542,8.974416,-7.127342,-6.817094,-2.383597,5.230534,9.997091],[-6.623205,4.193365,5.186728,-9.993222,9.874058,6.209578,-6.021500,-2.082741,5.100394,7.694331,1.212625,0.192673],[-7.409270,2.912548,5.371263,8.817916,3.718132,6.898724,4.603352,4.016254,7.630035,6.968210,-9.150720,-8.039584],[6.007910,-2.913376,0.599181,-8.876146,0.368470,0.857546,-3.137661,8.096064,7.357304,-2.236968,-8.217738,-0.558106],[-2.840980,7.988102,9.136185,-2.881149,0.601186,7.812761,-7.276618,-1.763199,-7.846412,-3.238920,-1.109971,-5.986044],[-4.401309,-2.346875,-9.854394,-8.563527,-4.983474,6.340010,7.798983,-8.426924,-3.879735,5.753943,0.673373,6.602191],[9.323126,-2.741140,8.573526,-5.076383,3.683018,-3.636954,6.688558,-4.876007,-1.435226,0.869701,9.013432,-3.358736]],[[1.335665,-9.324330,-4.786747,-8.648681,2.426991,6.313067,-7.605395,-7.335814,0.470820,4.639351,9.895732,-3.461431],[-1.292341,0.861841,-7.913768,6.516579,8.430247,-2.356794,3.944696,-7.908470,-7.624106,5.929663,0.361617,-6.907113],[-2.518537,2.203592,-2.342840,4.273974,8.910979,-7.458893,4.967197,1.269612,-5.416022,-7.982867,7.663684,-8.463143],[-1.038896,-7.165512,-4.575665,-0.045239,-3.966063,-7.551732,-0.319343,4.636987,8.529696,5.842957,-0.010740,3.136570],[-4.783064,-4.208429,-3.099848,0.912391,4.594289,-6.738650,3.143566,-3.272460,-4.593663,-4.998728,0.291942,-1.852717],[8.491675,7.664235,8.017327,-9.953298,-0.740546,4.952695,-1.213454,9.810585,-3.911252,9.481762,3.147803,8.032977],[-2.866174,-3.253020,-9.745644,-7.805066,-7.589867,5.686143,6.504225,1.780159,-1.494568,-8.746597,-2.433339,-3.170169],[-5.632945,-6.778241,-5.203780,4.778936,7.001156,-7.757414,1.781080,9.628207,-7.265785,9.087240,9.926660,5.562385],[5.881268,-3.341402,4.239476,-8.627662,-0.408104,3.253286,-6.918816,0.075856,-6.675860,8.233664,8.332390,0.368424],[7.266359,0.319620,-6.093442,1.288755,-9.970243,6.822015,-3.972496,2.817495,-2.112917,0.048682,-2.690352,-3.612328],[-9.608208,-2.307563,-0.143961,5.255208,-2.167836,-1.689321,8.852446,-3.369827,6.264982,-1.402656,2.248272,-6.652107],[-0.831218,-4.072998,0.636438,-4.915658,1.123363,2.730060,-5.218449,3.916205,5.558115,7.769610,3.098570,-2.594793],[6.405571,2.167514,3.788194,-2.356035,2.963104,-0.346864,1.161732,5.708690,3.493630,8.000246,9.347911,-3.386775],[-2.380846,-6.279856,9.744264,9.514845,1.722844,9.211102,-2.284433,-4.125982,-5.839209,-2.196474,1.092200,-3.853384],[-3.147972,8.064145,6.527912,-1.356662,1.209934,8.356682,-3.523601,-1.460667,7.828826,-0.821841,2.513629,-9.361404]],[[8.508637,-8.947297,-7.403556,0.428789,-6.146226,-8.350405,-3.323563,6.784669,9.067318,-0.382573,3.258658,0.950344],[-0.926224,5.488092,0.036947,5.923337,-2.050268,0.661868,6.794388,-3.621932,3.356077,8.051794,8.136676,-5.890943],[6.776811,-0.928958,8.045099,-8.834027,3.953980,2.712189,2.945753,5.503345,-8.030752,-7.048880,6.927738,6.500480],[4.032496,-8.477213,-3.992336,-8.887946,2.928310,-9.099597,-2.155718,-2.958841,-2.350145,-1.323127,3.810870,-5.574603],[1.761111,4.036326,3.145252,5.059840,1.458994,0.061164,-7.825481,2.706218,1.463130,-4.648980,-1.446275,0.782740],[3.182794,-9.049454,-0.440986,-3.358525,4.830285,-1.117752,7.331266,-8.384117,-6.710511,-0.665800,5.161862,-0.259908],[1.675241,-3.130570,-5.537406,7.110270,-0.494241,-5.869405,-4.345317,-4.870974,-1.687417,-5.267933,-1.121925,-7.489506],[-7.460552,-5.323978,-7.752510,-3.061010,5.955364,-7.029662,9.660719,4.659703,2.342224,-7.607145,7.929162,-2.387504],[4.659236,2.086329,8.001588,-1.672963,-3.616363,1.667687,-3.042940,-4.332254,-0.550876,3.913812,-6.579907,2.573332],[-4.287089,4.328571,-9.203022,4.777929,-2.668993,-9.239117,-6.921560,-2.054531,2.949866,6.539512,8.025474,4.411032],[-8.891073,9.437007,-2.247327,0.637713,-1.419537,-7.966395,-2.097918,6.020972,-8.646432,-4.987371,-4.877719,0.058627],[-0.190461,2.808307,-5.172612,7.803032,7.725353,-9.946924,-4.151016,-1.698100,-0.104583,7.531606,-3.068107,-4.900960],[-9.481362,9.367273,6.640380,-2.144068,-9.117884,8.000778,5.330231,4.704972,-3.609997,-2.626402,6.843513,6.367751],[7.028486,-6.816641,4.098366,-0.006698,1.645453,2.752693,-2.798394,-6.555064,0.517765,1.276905,6.803711,-4.886912],[-0.498913,-5.606792,7.955030,-8.122855,-7.375394,9.827627,1.735273,-5.155836,1.532733,7.357519,1.146950,-0.861803]],[[5.480939,1.758876,8.233815,-3.729007,-6.983904,7.421329,6.453303,-5.742784,7.094889,7.976424,3.054610,4.679770],[4.219093,-9.169244,4.959058,-1.312842,0.926387,2.210466,6.121987,-2.231644,-2.962075,6.821438,3.873505,3.506245],[2.779971,2.781849,-2.018271,-1.383429,7.808587,6.307152,7.378551,-2.446038,9.587895,2.604136,5.917161,5.801031],[-7.180273,2.085265,-3.461020,-7.436688,-7.855333,7.422960,-4.806285,-8.544010,-3.483684,-4.803032,3.971957,-3.827438],[-8.307403,4.341155,-5.422750,3.864978,-2.005773,-9.632894,-2.182817,-2.128209,2.328817,4.951041,0.193176,2.857421],[5.632785,-5.405293,-8.451147,-2.480940,-2.230487,7.598255,-3.398355,4.334234,5.408585,2.361771,-6.411808,-0.250697],[7.914462,-8.322311,-8.565708,4.323103,3.972826,-5.135079,-8.485945,8.813349,4.099189,6.193056,3.597008,-6.188732],[3.830821,-3.389075,2.905160,8.926812,1.317829,-4.013294,7.638484,0.261072,6.503263,1.245038,-7.384312,-6.326999],[0.026179,6.785535,9.285539,5.333359,-5.124570,-4.516973,2.128896,-8.988138,9.006213,-5.254977,-1.687966,-5.208072],[1.443142,-3.106580,-6.740791,7.495203,-6.170895,-4.409597,-9.685468,-8.920715,-4.350845,3.930458,-9.582328,-5.478478],[-2.950418,2.478097,-0.484495,-1.240079,4.258997,-1.387002,8.743986,9.709137,-5.962797,8.825281,6.135586,8.549214],[6.296142,2.077080,6.472758,5.636481,-0.868333,-4.636862,-5.982857,6.491640,5.070105,7.292027,4.004994,2.471760],[3.842029,9.664804,-5.081000,-4.265690,4.385671,-4.393947,5.582189,-9.658010,-4.778830,-6.996965,1.468347,-8.510050],[2.948484,0.093831,-9.521922,5.901248,-7.947844,-3.152430,1.028559,-4.903600,5.843506,2.152108,-0.132733,-5.764227],[1.891640,-8.326727,-1.436101,3.286517,-2.591686,9.872914,8.651755,-1.529172,6.459763,9.139141,4.303272,8.740896]]], dtype = "float64")#candidate|2591|(12, 15, 12)|const|float64
uop_2592 = relay.acosh(const_2591.astype('float64')) # shape=(12, 15, 12)
func_894_call = mod.get_global_var('func_894')
func_896_call = mutated_mod.get_global_var('func_896')
const_2599 = relay.const([-7,-6,-8,-10,10,-9,5,-10,-3,1,10,8,-10,3,2,2,4,2,9,-5,3,9,-3,5,1,9,-7,-7,7,-5,-3,-10,7,8,-6,-4,-6,-9,3,-2,-1,6,-9,7,4,-7,-10,-1,-1,-2,2,7,2,7,-9,10,2,-10,-8,5,10,8,-8,-7,-7,-7,-9,-7,8,6,2,9,-1,-5,7,-2,3,-5,8,2,-2,-4,-3,10,6,-1,2,-4,-1,6,10,-3,8,4,1,-1,4,4,8,-1,1,-5,-1,10,10,10,-3,-1,-2,-7,2,5,-5,5,4,10,-7,-10,5,-2,5,-5,4,1,4,8,6,-3,-2,-4,4,2,10,4,2,-2,-8,5,-4,8,4,3,-7,3,-5,-6,3,-2,9,-8,-2,8,-7,1,-7,7,-3,1,7,1,-3,2,-8,8,-10,8,7,9,-9,5,-9,9,-5,4,-6,-3,-6,2,-9,1,7,1,-7,9,-1,4,-9,4,3,7,4,6,-6,4,-1,5,6,3,8,-9,-8,-1,-4,-2,-4,6,-10,-10,5,4,-10,-3,6,-10,-9,3,2,6,-10,4,-9,4,5,10,9,-5,4,5,-7,4,6,5,3,5,-2,-9,-1,4,6,-5,7,-4,-1,1,-6,4,-2,1,10,3,6,3,-5,-3,-1,4,10,9,8,9,-2,-7,2,4,-5,2,-8,-9,3,4,10,-2,-7,-2,-10,1,4,8,8,-5,-10,-6,-5,-3,-5,-4,6,-7,-8,10,-10,10,10,9,10,5,-5,8,4,-8,-10,-7,-10,-3,-1,-6,5,6,-2,5,9,3,1,-3,5,-5,8,3,-6,6,-9,-10,-8,2,-1,5,-7,5,-2,-2,-2,3,-10,-5,5,4,8,10,10,10,-9,1,-3,-1,-5,-1,-1,-4,-5,5,-4,3,3,-8,5,2,2,9,10,-10,4,-1,-10,-4,-5,2,-10,-9,-10,5,6,-9,-3,-4,8,-9,7,-7,-2,-1,-4,6,10,6,-6,-5,-8,-1,-5,-5,10,7,-1,-6,7,-2,10,6,3,2,-3,-2,-3,4,-9,-3,1,10,-6,7,-4,6,-6,6,4,-1,-4,2,7,7,2,-6,-2,7,3,-3,2,2,4,7,3,9,-10,-7,4,2,-4,3,7,3,-3,-8,8,2,6,-1,7,8,-10,2,-7,-4,-5,6,-6,-1,-5,-3,-6,6,4,3,-9,7,-6,-5,-5,3,-5,-1,7,-9,2,-5,7,-2,-9,10,-8,7,-8,-6,-1,-5,7,7,-10,4,8,-10,-1,4,9,-7,-3,-8,7,5,4,-2,6,3,-6,9,8,-7,-2,-8,8,-8,10,-3,-2,2,-8,7,6,1,-10,-3,10,9,4,-4,3,-5,-10,9,-7,-7,7,-1,5,2,4,4,-7,5,10,-6,-3,-5,7,4,5,1,7,-5,-3,10,4,1,-8,-3,-8,-1,-9,-4,4,-2,-1,-3,4,5,-4,-7,8,10,-6,4,3,5,-6,10,-8,9,5,10,-9,-9,7,-3,-5,2,-7,5,6,2,10,-3,6,6,3,3,10,-7,9,3,-3,5,-3,-10,10,-2,5,9,-5,-5,2,4,-1,8,-3,5,-5,-5,-1,-7,10,3,3,9,8,8,-1,1,-5,3,7,-1,-8,-1,3,2,-5,1,9,-6,1,7,8,3,7,9,-3,6,-9,2,5,7,1,8,5,6,-9,9,1,1,7,-3,10,-4,8,-5,2,-3,-10,-4,4,-5,5,10,-4,-5,1,-3,-7,2,-5,-6,-8,1,-9,-7,6,-6,3,-6,-7,10,-7,8,2,-9,8,-5,6,6,-2,8,2,7,-2,-4,4,-8,9,-6,10,9,3,-4,-1,-4,-3,8,-10,1,-10,2,1,4,8,4,-5,3,8,-9,-8,-9,-7,4,-4,9,4,-7,-1,-8,2,4,4,7,7,-10,-9,3,7,-5,-6,6,-4,-4,5,4,3,-7,9,8,10,-8,6,6,9,-6,-6,5,-7,-6,1,2,-2,-1,-4,5,-7,-4,-4,-8,-4,8,-1,1,-1,2,9,-8,-6,-9,7,4,-7,-9,-3,-4,5,6,-4,-4,3,1,-2,10,7,8,-3,10,-3,1,-7,-2,6,8,4,-6,-10,9,-5,1,10,6,4,-3,4,-4,8,5,5,-3,7,-7,10,8,5,-9,-9,-10,10,9,-9,9,8,-1,-7,-1,6,3,4,-1,-3,5,5,4,-9,3,7,-5,-6,-7,1,-1,-7,-4,6,-1,-8,-10,2,-2,8,-10,9,-7,10,-10,-3,1,-3,-1,2,7,-10,5,-10,6,-4,10,-10,8,2,-2,-9,7,7,1,1,1,5,-5,3,-1,-8,8,-8,9,-4,-7,5,5,3,3,-3,7,-10,-3,6,10,4,1,4,-4,-2,-1,6,-10,1,-6,8,2,-8,1,-8,-9,8,-4,1,-3,10,9,-10,-6,-2,5,6,8,-4,-9,1,-3,-7,3,5,-2,-2,1,-1,2,9,-5,-7,-10,-3,3,6,-3,3,2,4,2,-6,7,-10,-1,8,-6,9,8,-5,-6,-7,6,4,9,-2,3,2,5,1,-4,2,-6,6,-2,4,-3,-6,-2,-5,-10,10,4,3,7,-5,-3,-1,-7,2,9,9,9,-9,6,2,2,9,-5,7,-8,-2,-9,-1,-9,8,-9,10,-2,8,2,6,-3,1,-9,9,9,10,6,6,4,-5,-1,-2,-3,-5,-2,10,7,-3,-8,-6,6,8,-5,7,-8,-4,-9,-6,-9,-7,3,6,9,-6,2,5,-8,-9,-7,2,-1,8,3,2,4,-2,-9,7,-8,4,-5,-7,3,-5,4,-8,6,-5,-8,2,8,-9,2,2,8,-9,8,5,-2,2,2,3,3,-10,6,-5,5,9,9,-7,-1,10,-2,9,-9,-2,-10,-10,2,6,-9,-10,4,-4,-5,9,-7,5,6,-3,-4,6,7,-9,-6,-5,-5,-1,-8,-1,6,-9,1,-10,6,3,-6,6,-5,-2,-9,7,-6,2,-3,-5,4,-10,5,-1,-3,5,-5,7,-7,2,8,1,-8,-7,7,-8,5,-6,-9,-5,3,-6,-2,-10,-1,-6,-10,4,1,8,5,-1,-7,-5,5,-9,-2,7,-7,3,-9,-9,-10,-8,-6,1,4,6,-6,-6,-10,9,1,6,-5,7,9,-3,-9,-2,-7,8,4,1,-4,-2,3,6,9,3,10,8,-6,-2,1,-1,4,8,-5,7,7,4,3,5,2,6,7,-5,6,-7,-9,7,-10,-3,-5,4,2,-1,8,6,3,-5,-9,-3,-8,-4,-1,-2,6,-3,10,3,5,-8,10,-4,10,-5,-10,4,9,4,-8,10,-4,5,10,9,-1,-10,-2,4,-4,1,-7,9,-4,7,-9,-10,-2,10,-4,-9,5,6,4,1,8,9,8,3,-10,8,9,-4,-2,3,5,-10,1,-10,-5,10,-3,-1,6,-3,-6,8,8,4,-8,5,-9,4,1,3,-2,-1,4,6,-8,6,1,-7,6,10,-8,-7,-1,7,2,-2,-4,9,-7,-8,5,10,8,6,1,-7,-10,8,-5,5,-6,2,-2,-10,8,-5,-1,-9,-2,-2,9,-2,6,-2,6,8,6,5,-1,-6,-2,1,4,4,-5,7,-8,4,-10,4,-4,9,2,-8,9,-1,-3,-4,-2,-10,-7,-10,-7,-10,1,-2,-8,-6,5,3,-6,-2,-9,-5,-7,10,2,-10,4,-6,3,1,9,2,-9,-5,-1,3,7,5,-3,-9,-4,-5,-6,5,-1,1,-2,-3,9,-6,-6,2,-9,7,-1,8,-5,6,-6,-3,7,-4,-6,-10,4,7,6,-3,-6,6,9,3,-7,-7,9,-9,-3,-5,-9,-6,-2,-4,10,-5,10,-4,-7,4,7,8,-1,-4,9,3,-8,-2,-2,1,4,10,9,-4,4,-2,-9,-9,-7,-5,6,-4,-9,-5,3,-4,-3,-10,2,-1,-1,-7,5,-3,3,-9,-7,3,1,6,-3,-10,7,-1,7,-5,-8,1,10,-6,-1,4,-7,-4,3,2,-2,-4,-4,10,-10,-10,-7,2,6,-4,10,-6,3,5,2,3,10,7,-4,-7,-1,-3,-9,-8,2,3,10,-10,9,-10,-3,-9,10,-8,2,-9,2,1,-8,8,3,-3,-9,7,-10,-1,9,5,7,-6,-9,-1,-8,4,-3,5,2,-10,-2,-10,-3,-5,-2,-4,4,-7,-6,3,1,9,2,2,3,-6,9,7,-9,-4,3,-10,-7,-9,7,6,-1,-4,2,-8,1,2,-10,-2,3,9,-6,-2,-8,-6,5,3,-9,-1,-6,-6,1,-7,-8,9,6,7,7,-5,-10,-9,4,-3,8,4,10,-1,1,-3,6,10,10,-4,-9,-1,1,-6,-2,10,10,6,-7,3,2,4,-10,9,-6,-6,-5,3,-8,3,-5,-10,8,-7,10,10,7,-9,2,6,5,10,2,-6,-2,8,3,-4,-3,-5,-10,4,-2,-6,-5,2,-6,-9,-8,7,-5,1,3,8,-6,-9,-1,6,8,-8,4,-2,-2,1,6,-2,-4,-9,-8,-5,2,-3,-8,6,10,-10,4,9,3,-8,9,-1,4,-2,-9,-7,2,5,8,6,7,-4,-8,-9,-2,-9,8,4,10,-4,-4,1,10,3,-7,-6,5,-7,3,-3,4,8,5,-4,9,-5,9,-6,-10,-7,-2,-3,-2,-1,6,-4,7,2,3,7,6,-4,8,5,10,6,4,-8,-2,3,-2,-8,-8,-3,10,4,3,-2,9,8,-9,1,8,10,-10,-7,2,5,8,5,-7,-4,7,1,7,-7,-8,10,10,5,6,4,5,-10,-7,-1,-1,5,4,6,-7,-8,3,-2,-1,-5,-7,5,-8,7,7,2,-4,10,4,1,-10,8,-10,-6,-7,8,-2,8,-7,7,-2,5,-5,7,-10,-3,-9,4,3,-8,3,-4,10,-4,6,4,8,7,-4,-5,3,5,-10,1,10,-6,7,5,2,8,-1,-6,-2,4,-9,8,-10,-4,-5,6,4,8,1,-1,-5,9,-1,-6,-1,-7,-1,10,2,-4,1,-2,-1,8,-6,-3,10,-8,10,-4,-4,9,7,-9,-7,6,2,-3,-10,4,-4,8,2,4,10,3,8,3,3,-2,6,6,-6,4,-4,4,7,1,-10,1,3,-7,-8,-6,-4,-9,8,2,-6,2,5,7,7,-3,-3,8,10,6,-4,9,1,-2,-5,5,-9,3,-2,-9,-8,-8,9,-4,-9,-9,3,5,-5,-4,-9,2,-5,-5,-5,10,7,2,-1,-6,-9,7,4,9,-7,10,4,-6,-6,8,5,5,-5,9,5,8,2,-9,7,4,1,-2,7,-5,-10,4,-10,-9,-6,-3,-4,7,8,10,4,-1,-9,1,2,-1,-9,-10,-4,6,-7,-2,-1,5,-7,-9,1,5,5,-8,-1,3,-5,-1,-2,-10,-7,8,-3,9,9,10,-8,-4,2,1,-2,-3,7,-6,10,-8,8,5,2,-9,2,3,-4,-4,-10,10,-1,-8,7,-9,-8,6,-4,7,-6,9,8,9,-10,10,2,-1,-5,1,-1,-10,7,4,6,-9,2,10,1,-1,4,8,-3,9,6,-9,2,7,-7,3,4,8,2,-5,-9,2,10,-1,9,-1,2,3,3,-3,10,-6,8,10,1,-10,2,6,-4,-4,-7,-9,7,2,1,-10,1,-5,9,-8,-1,-1,-4,6,1,10,-7,6,-8,-5,4,-10,-1,-4,2,-1,4,-5,-6,-6,-1,7,-3,3,1,-2,3,-2,9,-7,1,2,-9,-4,10,-1,6,10,-1,3,-10,1,-9,2,-10,-6,8,-6,7,-1,10,9,-2,-5,1,-8,-5,8,1,-9,-2,2,5,6,-8,10,-9,-3,-7,5,-8,-2,-2,-6,-2,-6,10,-4,-3,-8,5,8,4,-6,-2,10,4,1,-2,-10,2,9,-1,-8,1,-7,3,-2,-9,-7,-9,-8,-8,-10,-8,5,4,3,-8,4,-8,-10,8,-7,10,7,2,6,-6,10,-5,-5,10,-8,10,2,3,-10,-3,8,-2,7,-10,-2,7,10,9,-3,-3,9,-3,3,2,6,10,-1,7,-4,10,5,10,-1,3,9,-7,1,-1,5,-8,1,3,8,-9,-8,10,6,1,8,3], dtype = "int16")#candidate|2599|(2340,)|const|int16
call_2598 = relay.TupleGetItem(func_894_call(relay.reshape(const_2599.astype('int16'), [15, 12, 13])), 0)
call_2600 = relay.TupleGetItem(func_896_call(relay.reshape(const_2599.astype('int16'), [15, 12, 13])), 0)
output = relay.Tuple([uop_2592,call_2598,const_2599,])
output2 = relay.Tuple([uop_2592,call_2600,const_2599,])
func_2609 = relay.Function([], output)
mod['func_2609'] = func_2609
mod = relay.transform.InferType()(mod)
mutated_mod['func_2609'] = func_2609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mutated_mod.get_global_var('func_2609')
call_2610 = func_2609_call()
output = call_2610
func_2611 = relay.Function([], output)
mutated_mod['func_2611'] = func_2611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_2612 = relay.TupleGetItem(func_2609_call(), 0)
call_2613 = relay.TupleGetItem(func_2611_call(), 0)
output = call_2612
output2 = call_2613
func_2614 = relay.Function([], output)
mod['func_2614'] = func_2614
mod = relay.transform.InferType()(mod)
output = func_2614()
func_2615 = relay.Function([], output)
mutated_mod['func_2615'] = func_2615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2614_call = mod.get_global_var('func_2614')
func_2615_call = mutated_mod.get_global_var('func_2615')
call_2636 = func_2614_call()
call_2637 = func_2614_call()
const_2640 = relay.constdtype = "float64")#candidate|2640|(12, 15, 12)|const|float64
bop_2641 = relay.equal(call_2636.astype('bool'), relay.reshape(const_2640.astype('bool'), relay.shape_of(call_2636))) # shape=(12, 15, 12)
bop_2644 = relay.equal(call_2637.astype('bool'), relay.reshape(const_2640.astype('bool'), relay.shape_of(call_2637))) # shape=(12, 15, 12)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_2651 = relay.TupleGetItem(func_2609_call(), 1)
call_2652 = relay.TupleGetItem(func_2611_call(), 1)
func_2134_call = mod.get_global_var('func_2134')
func_2140_call = mutated_mod.get_global_var('func_2140')
var_2655 = relay.var("var_2655", dtype = "uint8", shape = (2, 168))#candidate|2655|(2, 168)|var|uint8
const_2656 = relay.const([-5.028978,0.427501,-4.102080,-1.335738,1.457253,4.705798,0.156313,-1.724171,3.560277,5.360348,4.870278,-8.865796,6.125764,1.674102,-8.037177,0.644086,9.891531,-0.165574,-1.659434,4.363642,3.780147,-9.812406,7.095150,-1.708985,3.706195,-9.248393,7.718110,-3.252416,-6.801509,5.653555,4.645714,-1.308278,6.300859,3.411036,2.553811,-5.240068,7.018554,3.169125,9.512334,7.388989,9.323080,-4.750293,8.473103,2.947471,-2.224117,-1.359383,4.899981,-5.367122,5.725662,-8.065813,-2.767321,-8.582746,-5.005819,-9.813186,6.698816,-1.948905,-7.477174,7.855847,8.484168,6.775325,6.429674,-8.072669,-0.305258,-9.583530,-3.343745,-7.934254,7.674624,-2.913355,2.389620,4.674501,6.145230,1.040817,-7.932217,0.582847,-9.028656,7.605409,-2.110279,-5.762149,-5.604490,-8.503973,-6.621789,-6.484231,4.431765,9.648220], dtype = "float32")#candidate|2656|(84,)|const|float32
call_2654 = relay.TupleGetItem(func_2134_call(relay.reshape(var_2655.astype('uint8'), [6, 7, 8]), relay.reshape(var_2655.astype('uint8'), [6, 7, 8]), relay.reshape(const_2656.astype('float32'), [84,]), relay.reshape(call_2651.astype('int16'), [2340,]), ), 1)
call_2657 = relay.TupleGetItem(func_2140_call(relay.reshape(var_2655.astype('uint8'), [6, 7, 8]), relay.reshape(var_2655.astype('uint8'), [6, 7, 8]), relay.reshape(const_2656.astype('float32'), [84,]), relay.reshape(call_2651.astype('int16'), [2340,]), ), 1)
output = relay.Tuple([bop_2641,call_2651,call_2654,var_2655,const_2656,])
output2 = relay.Tuple([bop_2644,call_2652,call_2657,var_2655,const_2656,])
func_2663 = relay.Function([var_2655,], output)
mod['func_2663'] = func_2663
mod = relay.transform.InferType()(mod)
mutated_mod['func_2663'] = func_2663
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2664 = relay.var("var_2664", dtype = "uint8", shape = (2, 168))#candidate|2664|(2, 168)|var|uint8
func_2663_call = mutated_mod.get_global_var('func_2663')
call_2665 = func_2663_call(var_2664)
output = call_2665
func_2666 = relay.Function([var_2664], output)
mutated_mod['func_2666'] = func_2666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2614_call = mod.get_global_var('func_2614')
func_2615_call = mutated_mod.get_global_var('func_2615')
call_2719 = func_2614_call()
call_2720 = func_2614_call()
var_2721 = relay.var("var_2721", dtype = "float64", shape = (12, 15, 12))#candidate|2721|(12, 15, 12)|var|float64
bop_2722 = relay.divide(call_2719.astype('float32'), relay.reshape(var_2721.astype('float32'), relay.shape_of(call_2719))) # shape=(12, 15, 12)
bop_2725 = relay.divide(call_2720.astype('float32'), relay.reshape(var_2721.astype('float32'), relay.shape_of(call_2720))) # shape=(12, 15, 12)
uop_2729 = relay.log(var_2721.astype('float32')) # shape=(12, 15, 12)
func_1923_call = mod.get_global_var('func_1923')
func_1930_call = mutated_mod.get_global_var('func_1930')
var_2734 = relay.var("var_2734", dtype = "int64", shape = (1, 210))#candidate|2734|(1, 210)|var|int64
var_2735 = relay.var("var_2735", dtype = "float32", shape = (84,))#candidate|2735|(84,)|var|float32
const_2736 = relay.const([-6,-10,10,-8,8,9,-7,-2,-2,-4,10,7,-2,2,-6,2,6,10,9,-8,-9,7,-10,6,2,7,2,7,-2,8,2,3,-3,-3,-2,-9,9,-8,7,-9,6,10,9,-1,-4,2,-8,5,9,-6,-10,3,-5,8,-6,2,4,-1,-9,7,-1,1,-3,5,-6,-2,-7,8,5,3,-5,-5,-7,2,-7,1,-8,-9,1,-3,-4,7,-8,-3,-1,4,3,4,4,-6,-7,-2,9,5,5,9,1,-3,1,1,6,9,-7,-7,-1,3,-10,-2,-6,9,5,5,5,6,-7,1,4,-1,3,3,3,-3,-1,-1,1,10,-1,-3,-4,4,8,5,5,5,5,5,4,-2,10,3,5,-9,-10,-5,-3,-6,-6,5,6,-3,-9,-3,-4,-7,-10,8,-6,4,-1,-10,9,5,8,1,3,-9,2,-5,-6,-3,-5,-2,9,-8,-6,-7,6,-4,-4,-10,-7,-1,-10,-7,1,3,-2,10,2,4,-8,-6,-4,9,-3,7,8,3,6,-4,-10,4,3,-7,-2,6,-3,4,-3,5,4,10,-2,1,2,5,-6,6,-5,-6,-4,-8,-7,4,7,-7,-1,-4,9,9,5,-3,-4,-10,-2,5,1,2,-6,-9,4,-4,5,10,-7,7,-4,3,-1,-7,9,8,-5,-9,7,-4,4,-7,-9,-4,7,-8,-2,-9,2,-6,7,-3,2,-3,-8,9,-8,10,5,-4,5,-3,3,-10,7,-7,7,9,2,10,3,-3,-8,-8,6,5,-4,-8,10,3,3,-6,-4,2,8,-7,3,-10,10,6,-10,7,1,4,-3,-3,-10,9,-3,-9,4,10,3,-2,9,-1,1,6,5,-5,8,-7,4,-10,8,8,5,-1,9,1,3,1,-2,-8,-7,-9,1,-3,3,-4,3,3,9,6,1,-7,1,-10,3,2,-1,6,7,8,3,1,3,5,9,-9,-9,5,-2,-5,-3,6,-7,7,-2,-4,-7,10,-8,-2,-6,-7,5,5,9,4,-6,-7,3,-7,-8,-7,-7,-5,-3,1,-7,-4,-2,-4,8,2,-8,-7,10,-5,8,-3,10,7,6,5,-8,-10,10,1,9,4,-2,-8,6,1,5,8,-6,1,4,-7,-6,3,10,4,7,9,-8,2,-8,9,-10,1,1,-8,-7,-7,4,9,-4,-5,8,10,1,-3,6,-2,-8,-2,4,-5,-7,-6,-4,8,5,-1,-7,2,-5,-7,-6,7,4,4,-9,3,-1,10,-3,3,2,-4,7,5,10,4,2,9,-3,6,-1,-10,5,6,-8,7,-5,9,6,5,-7,-1,2,-5,-4,-7,-7,5,-8,-1,4,-6,-8,10,-10,-7,3,6,-9,-8,-1,7,-5,3,5,-2,1,-7,-5,-10,-1,-10,6,-10,6,-9,7,6,-8,5,-4,-2,5,3,-6,2,1,-4,9,-5,5,3,-7,4,-9,-9,-6,-7,8,-2,4,-4,8,-5,3,2,-1,-10,8,-4,-2,10,-3,10,9,-8,6,2,-1,10,7,3,-1,-8,6,-5,-4,10,-4,-9,-2,9,-10,-5,8,-4,-9,2,-10,8,2,-8,-8,6,-9,-6,3,-3,6,3,-3,-8,-5,-4,-3,-3,-4,3,-9,6,5,9,5,10,-9,-5,3,-5,-6,-5,1,-5,-9,9,-9,-6,-4,2,-8,-3,9,-7,3,-1,3,7,-4,-9,1,10,2,4,-10,7,3,5,2,-4,-6,-6,-1,-4,-7,9,-10,10,5,-10,-4,-5,9,-9,-3,-7,-8,-9,6,-5,6,-3,-2,-8,8,-4,-7,7,8,-8,-9,-2,-6,9,4,-6,-5,-7,-1,6,5,2,-8,7,-7,8,7,-4,-1,-6,-6,-3,3,-9,-5,6,4,1,6,-9,2,-10,9,4,8,5,6,4,8,-4,10,-4,-7,-6,2,6,5,4,2,4,-10,2,6,5,-3,8,10,-8,6,10,9,5,3,-8,7,-5,-8,5,6,8,1,-3,-8,8,4,6,-5,7,-8,5,4,6,-6,8,1,1,1,-2,6,-3,-7,2,-7,2,-4,5,-4,2,2,-3,-3,4,2,-3,6,-7,-6,-5,-9,-2,-1,-3,-8,8,-2,-10,9,2,-9,-10,-2,8,-7,3,-9,1,2,6,6,7,-6,6,2,-7,-3,-8,3,3,8,-7,8,6,1,-9,7,-6,4,10,-10,-9,-3,7,2,9,-5,6,6,5,-7,6,-10,-8,-6,10,-5,-8,5,-8,7,-8,6,8,-7,9,7,7,8,2,4,-10,1,9,5,-3,-7,-7,-5,6,5,-6,-1,-10,6,4,1,9,4,-10,-7,3,5,8,-2,2,10,-2,8,-1,-3,6,-1,-8,5,5,-2,-8,8,-7,-8,2,6,8,-7,2,-8,-5,-3,3,2,2,8,-1,5,1,-6,1,8,-7,2,6,-6,-8,-6,7,-1,-4,-8,-9,10,8,4,7,1,-6,1,-3,-5,-6,-2,-8,3,-5,-6,5,4,-3,3,10,-2,-6,-10,-2,2,5,2,-8,-7,9,7,1,-7,10,4,5,10,-1,-2,7,-10,7,-8,-10,-8,-10,2,8,6,1,-10,6,-10,10,9,-6,-10,4,10,4,-2,4,-6,3,-10,1,-1,-10,5,2,7,-4,3,-4,-3,-2,3,-7,8,-2,-6,-8,2,-7,8,-1,-9,2,5,4,6,-3,10,9,-1,6,-4,4,2,2,-3,5,-10,-4,4,-2,-4,1,-4,3,3,-3,-4,2,-8,-6,-7,-3,-9,-1,6,5,-8,-3,-7,8,-6,7,-7,7,-5,-6,-5,1,-7,7,8,3,-8,-8,3,-7,6,10,-4,9,-2,-6,-6,-3,9,-8,3,3,-6,-10,-7,-9,-2,-8,-7,-10,2,10,-2,2,-4,-8,-2,10,-2,-8,-9,3,7,8,6,7,-3,-7,9,-4,-2,1,3,-3,-4,-5,-9,4,10,1,9,8,-6,-7,-6,9,-5,-1,4,5,-2,-10,-1,-8,6,8,9,9,9,-10,7,3,2,10,6,3,-8,-1,-9,9,-10,3,1,3,-6,-6,-4,4,-3,-9,2,8,-9,8,-8,3,1,7,8,3,5,-8,8,-3,10,9,8,-3,-6,4,7,-4,-5,-2,1,8,5,-4,-10,6,-3,-2,-4,-7,-4,-8,10,9,3,8,-7,9,-2,6,2,-10,1,-5,4,7,6,-1,5,2,1,1,6,-1,5,-10,1,3,1,9,1,-7,1,-3,-10,-6,7,-1,1,3,9,-4,-5,-4,-6,-6,-1,4,-1,-10,-4,-3,6,-5,-4,-3,-2,-5,6,3,-6,-1,-2,-9,-3,-5,5,-9,-2,6,-3,-2,7,-1,-1,-7,5,-2,-2,-1,9,-2,-8,5,-5,7,-9,-2,6,-1,2,-4,5,-6,-8,-10,5,-1,-4,2,-7,-9,7,5,7,-2,6,-7,-1,-6,10,-6,-1,-7,-3,-6,9,9,7,1,1,-4,-7,-6,2,7,-9,6,-10,-4,-5,3,6,-1,-7,-6,6,-5,-8,3,-4,-1,-1,-2,-1,4,-9,-9,-1,7,-3,-6,2,1,-2,-2,-5,9,10,-7,-10,-9,9,5,8,-10,4,9,-5,9,-7,4,-4,9,6,6,-8,6,-5,-1,-2,4,-5,5,-7,7,-3,-7,-6,2,-2,-8,3,2,-7,-1,-2,-7,9,-8,6,10,8,8,-4,6,9,8,9,2,-3,-5,9,3,-5,6,-6,-5,-6,8,3,5,9,-6,3,4,-2,-10,-2,10,-2,3,5,-4,-10,10,-8,7,-8,8,10,5,1,-2,-6,2,-3,8,2,-10,6,-6,-4,-4,6,2,-3,8,4,-9,-6,-10,8,6,2,2,5,4,1,-2,1,-2,2,-10,-2,7,-2,5,-7,-9,7,8,-7,9,-4,4,-6,-10,8,5,9,-10,-8,-8,-7,5,6,4,-10,3,6,9,-8,10,-7,8,6,-6,2,-1,-10,-3,-2,4,-3,-5,-6,3,-1,2,6,5,-7,-6,4,-7,4,3,-8,7,5,10,-4,7,-6,5,-6,-5,3,1,-9,-4,-10,-10,-5,10,8,-3,-5,-8,-9,4,-5,-10,10,-8,2,3,-8,-2,9,4,4,-10,10,-1,-2,6,-3,8,8,4,7,-3,10,9,-7,-7,-4,1,6,3,-6,7,-5,-3,-10,-4,4,-3,3,6,-9,-3,1,-5,6,4,6,3,6,-6,-5,-5,-10,-7,-2,-2,-5,2,-1,-2,-6,10,6,3,3,10,2,1,6,4,1,9,-3,2,9,-10,10,6,7,-10,9,-10,-7,-2,9,1,1,7,-4,-7,-5,-7,-9,1,-4,-6,-2,3,-9,2,-10,7,-4,5,-5,10,-9,3,2,4,6,9,8,7,7,-5,-2,-8,9,6,-6,-2,-7,-7,-2,5,2,-5,-5,8,-2,1,-9,2,-4,10,7,7,10,3,4,9,1,8,6,2,-3,2,3,8,4,-7,3,-5,9,-4,-7,1,-6,-3,-7,10,7,-1,-8,8,-8,-5,1,1,-9,3,7,3,4,-8,3,2,2,10,10,-1,5,9,-5,3,7,-9,1,10,8,-8,-5,-10,-4,8,10,-4,5,-10,6,-6,1,-9,-9,-10,6,9,10,10,-4,10,8,-1,-7,-7,4,8,-1,10,6,9,9,5,7,-5,-4,7,9,6,6,-9,-7,6,5,-7,7,5,4,-9,-7,-4,-7,2,-8,2,-2,-4,9,8,-7,7,3,-2,-3,-9,-3,-9,5,-8,2,7,-2,-4,3,7,6,-4,5,5,-6,8,1,-4,1,-1,4,10,1,9,5,-1,-9,2,-2,-3,5,-10,9,5,7,-4,4,-7,9,8,-1,6,6,5,5,8,7,6,-3,-5,-7,-1,4,-5,-3,6,-1,-3,10,-7,-4,-7,-5,7,4,-8,3,-3,9,-10,10,-8,8,-2,-9,-7,3,6,-7,-6,6,-3,7,-6,1,-9,-3,5,-8,2,-5,-2,3,6,10,-10,-10,-5,-6,-1,8,1,9,-3,-3,4,-3,6,-6,-5,-6,3,7,-1,1,-3,6,-8,-2,-1,7,-10,-4,6,9,-6,-8,1,9,2,7,-8,-1,-5,-7,-7,4,5,-4,-7,4,-7,4,-10,1,-2,-7,-1,-7,3,-5,-10,-6,8,-8,4,-10,-6,1,9,6,-2,4,-3,-2,-6,-7,-9,-3,-4,3,3,-10,-10,-3,-5,-2,5,-2,8,-7,2,-3,6,7,-5,7,-6,6,-8,-6,-1,-1,6,-7,9,9,7,-2,5,2,-4,7,7,-7,-4,1,-3,2,-8,-4,-2,-8,-2,-1,-2,5,5,7,7,1,10,7,-4,3,-7,-7,-7,-7,5,-5,2,-4,-4,-8,-6,-2,-1,-10,-7,7,9,10,-8,6,-4,2,-3,-2,-9,7,1,2,8,7,6,-9,7,-4,8,-10,-10,-10,-1,9,-5,7,-8,6,-2,3,-6,-4,4,7,7,6,-10,-2,9,2,10,7,-8,-5,-7,-10,-5,-3,-10,10,-10,5,-3,10,10,5,1,7,-7,4,5,5,8,-8,2,6,-6,-9,-9,2,-3,9,-1,7,-3,1,5,-7,-8,9,-2,-10,-9,-9,10,-10,-10,-8,7,8,6,-7,7,-2,-8,-5,-10,-1,3,-9,-3,9,8,-2,-5,-7,2,-2,8,4,-6,8,-3,5,1,3,3,-5,9,9,10,3,-10,2,8,7,6,-10,-6,-5,10,-3,7,-5,-7,-10,-8,10,-7,-7,-10,-1,-10,3,7,-7,7,-10,-7,-3,-7,5,6,-7,-10,10,-9,-6,1,8,-9,-4,4,3,9,8,-10,5,-10,1,-7,2,3,6,9,-3,-9,-7,1,4,9,-7,-9,-5,3,1,-8,-5,-2,6,-6,-2,-7,10,10,-9,-10,-5,9,7,7,-3,2,-5,-10,6,9,-5,-6,4,8,2,-2,-6,9,4,-1,1,4,8,7,3,1,-2,-10,-10,2,10,-2,-2,10,-7,2,4,1,3,5,4,2,2,2,4,-5,7,-9,-8,-6,9,10,5,5,-9,-4,6,-9,-9,10,7,8,-3,-3,-7,6,9,9,-7,-2,7,-9,1,1,1,5,-7,1,1,2,5,4,-4,-9,-1,9,-6,-1,8,-1,3,8,9,1], dtype = "int16")#candidate|2736|(2340,)|const|int16
const_2737 = relay.const(-5, dtype = "int16")#candidate|2737|()|const|int16
const_2738 = relay.const([3,-8,-2,9,2,1,-5,-1,-2,10,10,-7,3,6,6,-4,1,-6,-6,-7,10,8,-10,-4,2,10,-7,-4,6,-10,5,-9,-8,1,9,2,-9,7,-1,-2,6,8,10,4,2,-8,10,5,-2,3,6,3,6,-5,-10,2,10,9,-2,5,9,-2,1,-8,-6,6,-4,5,10,9,-6,8,-10,5,-2,-7,6,-1,-7,-1,7,4,8,-3,9,10,2,-9,-5,-6,7,-7,3,9,6,-4,9,6,7,-6,3,2,-4,-10,7,5,9,6,-1,-3,-7,1,5,3,-9,8,7,-9,-3,9,7,4,9,8,-7,8,-10,-9,-8,-8,-3,1,8,-10,-9,3,-6,-1,-8,-4,4,8,3,-10,10,-8,-6,-3,-8,-5,4,4,4,-5,-6,7,3,3,-3,-4,1,-5,10,-1,-1,-7,6,-6,-7,-5,10,-5,7,8,3,2,6,2,5,4,2,2,-3,10,-9,-6,-9,3,-1,8,7,-1,-9,-8,-6,2,-6,-6,5,10,1,5,7,5,-3,3,5,2,6,-8,-4,10,5,8,4,-3,4,-4,-6,-8,-4,-8,6,2,-1,8,-9,5,6,3,3,-4,2,5,-7,-8,5,-1,-5,7,-3,1,-3,7,4,-9,4,2,-1,5,-2,-10,-8,-2,-6,-10,5,-1,10,10,-8,10,4,9,1,-5,6,1,-8,8,3,-1,9,-7,-1,-4,-7,8,-4,-7,10,9,-9,1,-3,-9,7,7,5,-7,-10,-3,5,10,-8,-6,9,6,6,-5,-8,-7,6,5,7,-6,-4,6,2,-9,-3,1,-10,1,-6,-5,1,-1,8,-10,7,4,7,-1,5,9,4,-3,-7,-2,-1,7,-1,-10,-2,3,-8,-1,6,6,-1,-3,-5,1,1,4,10,-3,-10,1,-5,1,1,2,5,3,3,1,2,-1,-7,2,-8,10,10,-10,-4,-10,-5,4,-10,-6,-3,-2,-10,8,2,5,-5,-8,6,1,10,-7,-4,7,-2,-9,-9,-9,-6,8,-7,7,-10,8,-2,-8,-10,9,9,-8,-8,-5,-7,-10,3,10,3,-3,-10,-10,10,7,4,4,4,4,10,-3,-6,-2,10,-9,7,7,1,-2,-5,2,6,5], dtype = "int64")#candidate|2738|(432,)|const|int64
call_2733 = relay.TupleGetItem(func_1923_call(relay.reshape(var_2734.astype('int64'), [5, 7, 6]), relay.reshape(var_2735.astype('float32'), [84,]), relay.reshape(const_2736.astype('int16'), [2340,]), relay.reshape(const_2737.astype('int16'), []), relay.reshape(const_2738.astype('int64'), [12, 36]), ), 3)
call_2739 = relay.TupleGetItem(func_1930_call(relay.reshape(var_2734.astype('int64'), [5, 7, 6]), relay.reshape(var_2735.astype('float32'), [84,]), relay.reshape(const_2736.astype('int16'), [2340,]), relay.reshape(const_2737.astype('int16'), []), relay.reshape(const_2738.astype('int64'), [12, 36]), ), 3)
output = relay.Tuple([bop_2722,uop_2729,call_2733,var_2734,var_2735,const_2736,const_2737,const_2738,])
output2 = relay.Tuple([bop_2725,uop_2729,call_2739,var_2734,var_2735,const_2736,const_2737,const_2738,])
func_2740 = relay.Function([var_2721,var_2734,var_2735,], output)
mod['func_2740'] = func_2740
mod = relay.transform.InferType()(mod)
var_2741 = relay.var("var_2741", dtype = "float64", shape = (12, 15, 12))#candidate|2741|(12, 15, 12)|var|float64
var_2742 = relay.var("var_2742", dtype = "int64", shape = (1, 210))#candidate|2742|(1, 210)|var|int64
var_2743 = relay.var("var_2743", dtype = "float32", shape = (84,))#candidate|2743|(84,)|var|float32
output = func_2740(var_2741,var_2742,var_2743,)
func_2744 = relay.Function([var_2741,var_2742,var_2743,], output)
mutated_mod['func_2744'] = func_2744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_2754 = relay.TupleGetItem(func_2609_call(), 2)
call_2755 = relay.TupleGetItem(func_2611_call(), 2)
func_1267_call = mod.get_global_var('func_1267')
func_1270_call = mutated_mod.get_global_var('func_1270')
var_2759 = relay.var("var_2759", dtype = "int8", shape = (2, 72))#candidate|2759|(2, 72)|var|int8
call_2758 = relay.TupleGetItem(func_1267_call(relay.reshape(var_2759.astype('int8'), [12, 1, 12]), relay.reshape(var_2759.astype('int8'), [12, 1, 12]), ), 0)
call_2760 = relay.TupleGetItem(func_1270_call(relay.reshape(var_2759.astype('int8'), [12, 1, 12]), relay.reshape(var_2759.astype('int8'), [12, 1, 12]), ), 0)
output = relay.Tuple([call_2754,call_2758,var_2759,])
output2 = relay.Tuple([call_2755,call_2760,var_2759,])
func_2764 = relay.Function([var_2759,], output)
mod['func_2764'] = func_2764
mod = relay.transform.InferType()(mod)
var_2765 = relay.var("var_2765", dtype = "int8", shape = (2, 72))#candidate|2765|(2, 72)|var|int8
output = func_2764(var_2765)
func_2766 = relay.Function([var_2765], output)
mutated_mod['func_2766'] = func_2766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2614_call = mod.get_global_var('func_2614')
func_2615_call = mutated_mod.get_global_var('func_2615')
call_2784 = func_2614_call()
call_2785 = func_2614_call()
var_2787 = relay.var("var_2787", dtype = "float64", shape = (12, 15, 12))#candidate|2787|(12, 15, 12)|var|float64
bop_2788 = relay.logical_or(call_2784.astype('bool'), relay.reshape(var_2787.astype('bool'), relay.shape_of(call_2784))) # shape=(12, 15, 12)
bop_2791 = relay.logical_or(call_2785.astype('bool'), relay.reshape(var_2787.astype('bool'), relay.shape_of(call_2785))) # shape=(12, 15, 12)
output = bop_2788
output2 = bop_2791
func_2796 = relay.Function([var_2787,], output)
mod['func_2796'] = func_2796
mod = relay.transform.InferType()(mod)
mutated_mod['func_2796'] = func_2796
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2797 = relay.var("var_2797", dtype = "float64", shape = (12, 15, 12))#candidate|2797|(12, 15, 12)|var|float64
func_2796_call = mutated_mod.get_global_var('func_2796')
call_2798 = func_2796_call(var_2797)
output = call_2798
func_2799 = relay.Function([var_2797], output)
mutated_mod['func_2799'] = func_2799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_2831 = relay.TupleGetItem(func_2609_call(), 0)
call_2832 = relay.TupleGetItem(func_2611_call(), 0)
uop_2843 = relay.cosh(call_2831.astype('float64')) # shape=(12, 15, 12)
uop_2845 = relay.cosh(call_2832.astype('float64')) # shape=(12, 15, 12)
func_143_call = mod.get_global_var('func_143')
func_146_call = mutated_mod.get_global_var('func_146')
const_2864 = relay.const([8.772799,7.964111,0.264689,-3.478215,1.450432,-4.300125,-7.795218,9.113974,-1.022628,-9.286466,-3.837237,1.421775,1.959518,1.744759,5.244023,-8.374820,-1.398682,-1.758851,2.393377,4.229109,4.076913,3.928249,-8.367000,-6.073729,0.051254,-5.713618,3.577641,-1.908300,-7.631561,-4.993277,3.211805,9.821016,-6.358756,4.914360,-2.017112,-5.251809,1.437437,0.129058,-8.359215,-9.032250,6.769563,-3.991978,-0.072877,1.774318,-5.826726,-7.775153,-1.728242,9.933662,7.054311,-4.181531,4.458369,8.069885,-0.934539,-6.459036,9.206169,2.292179,-3.278371,5.891906,-7.488970,2.085807,-8.028638,-9.172087,0.285718,1.699886,1.286438,3.210501,3.791815,4.841561,9.026083,-2.117185,-5.297355,5.486677,3.606188,5.865646,-1.690450,-5.453411,-2.511659,0.987825,-7.335166,-0.352915,4.696209,-7.421484,4.994228,-7.730866,-2.897506,4.970752,-5.456405,3.633172,7.829655,-8.777059,7.605531,9.873243,8.344721,-1.012476,1.394372,8.886813,-7.199388,5.665393,8.246329,-3.527862,3.123045,-2.248407,9.814991,8.813519,-4.949169,-2.770304,3.105352,7.801196,-5.516724,-9.432161,0.714281,-4.127051,-9.359081,7.240956,-1.399830,0.401625,0.490350,0.860870,6.471270,0.515738,-5.476463,7.597213,8.565267,1.724434,-7.186245,-5.897252,8.722990,3.497332,-6.650260,-8.206268,6.469811,-9.368180,5.652756,6.631895,5.425413,0.586946,-1.988807,1.364823,8.672251,6.494121,-2.043138,0.373858,3.172305,5.761053,1.777113,-1.875577,8.194699,6.274597,-5.918825,9.583831,-1.058212,-2.955888,-4.922368,-3.320049,-4.002580,3.707249,7.451594,-6.676502,-8.573510,1.919380,8.185709,-1.566229,-6.506139,-3.244389,-0.295900,-7.342317,-1.143007,7.210783,-7.341999,-6.098304,1.530424,-3.427058,0.541658,1.799712,-4.502755,4.762282,-1.139161,8.730740,-2.129631,-9.534048,5.445898,0.724341,5.790725,-4.402830,-5.373760,-9.249356,6.210241,2.918779,6.605932,-7.727239,2.798064,-9.882747,6.452833,-0.028759,5.164874,-7.050307,-8.702111,-6.206996,-9.482669,9.672709,6.789749,-4.970932,-8.400591,7.982827,6.082824,-1.077792,-8.101594,-2.164468,-1.880443,9.027415,7.671323,-8.242051,8.111437,5.660873,-8.206857,-5.460754,-3.821481,-0.367039,-1.880343,9.873251,1.531796,-1.680033,-2.103847,5.130370,-9.004994,-7.536553,-5.538222,1.707106,5.217000,8.420092,6.381473,9.817685,-9.292991,7.337775,-8.077945,-1.129620,-1.951194,1.943908,-9.415876,0.622178,0.098084,-6.465807,-1.491650,3.203339,0.774050,5.106407,-7.309294,-1.638999,-3.274429,-2.284410,-1.538451,-2.326366,8.747698,2.558355,-1.782134,-8.935457,-5.428974,9.857750,-8.177750,-2.287683,2.315911,3.972781,5.432426,4.302008,1.085812,-2.097810,-5.215882,-3.697800,-9.605753,5.818032,-1.886566,-4.806612,9.004954,9.533135,-6.106877,0.871247,-0.094026,2.211717,-6.116941,7.421009,-7.140103,-7.376538,3.461360,3.318366,-3.661313,-8.136159,-9.582371,-4.710157,8.760080,-8.378909,5.570385,7.305282,-5.852542,1.782299,3.320395,-7.228535,-1.156919,6.912190,2.941754,0.036668,7.733199,-4.127963,-8.075496,0.001045,-5.886874,0.550489,6.707400,1.591473,-7.463813,2.912821,-0.228525,9.262232,-7.379281,-8.673855,9.398095,3.890958,5.838771,0.098465,-7.028835,2.358428,-6.391423,9.977887,-1.572431,3.806475,5.543912,-1.725638,-1.547044,6.400341,-3.284557,-1.582591,2.294904,0.781506,0.872247,2.597662,2.271488,-5.013301,4.061945,-7.693961,2.254595,-9.415313,-5.449930,-2.676145,9.016949,1.076389,7.275425,6.046018,3.199866,8.207698,7.895293,3.213238,-4.952650,-3.311454,7.629186,8.835070,-1.857353,5.256491,-1.723775,9.003723,9.385523,-0.415669,-2.335540,-5.032236,-3.220553,-1.848820,-5.755616,-5.908853,-4.182430,-6.191747,8.404433,-2.698847,-4.988911,-8.870483,8.690918,-4.759416,-6.270913,4.543288,-4.708850,9.473021,6.095326,5.601357,8.793602,-5.546752,-4.282689,9.303923,-6.447149,-7.091788,3.028145,-1.444726,-8.315647,-2.646190,1.045107,-8.401192,5.509450,-6.873612,2.726405,-5.975619,9.279755,-2.934045,4.532082,-6.195363,6.726057,-9.249380,2.210122,1.841262,9.039457,2.551774,6.934616,1.374187,0.255302,-4.472916,9.966179,0.818834,7.174570,-9.920156,8.048685,8.849602,2.564632,9.462395,-0.102560,2.382257,-3.648245,-0.847884,-9.783757,-8.990027,1.515491,-2.343290,5.448722,8.106199,-1.667703,-8.229291,-8.024220,-4.559740,4.893579,2.469648,3.969614,-9.295063,4.150585,1.631935,-4.715662,4.258060,-2.720736,-1.425843,8.514431,1.801055,2.764502,1.535308,3.793559,-5.792060,0.960757,-8.675140,-1.830264,4.572018,2.975887,9.609280,-8.344510,3.692233,-1.212594,8.496970,7.415047,7.072742,-9.531859,4.799062,2.897945,-6.518747,2.900151,1.731799,0.755747,6.558796,4.328044,-0.843105,2.410593,1.124262,8.746869,5.735674,9.246212,-6.878635,7.514089,9.515471,7.277398,5.782486,-3.906633,-9.199820,7.632159,-2.026388,-0.581401,8.928037,-1.051490,7.545917,6.543030,-5.354185,-0.445746,-3.828368,-8.727714,-8.254650,8.464585,-5.716774,-7.846647,-4.719180,-2.821079,-5.788806,8.098192,-5.238554,-4.828817,-9.378758,-4.385361,-0.107603,4.146660,-1.679094,-7.081742,1.911065,2.264102,6.724134,-4.805908,5.602305,-5.126879,6.715919,3.170925,2.463857,2.561992,1.924208,0.874247,-4.766987,-1.133837,-1.812781,9.543551,7.226433,-9.200598,-2.849754,-1.548012,6.445316,-0.145516,-5.258415,1.456327,7.973950,3.565224,-0.887982,7.405122,7.418057,-7.271975,-4.105052,3.807702,-8.788071,0.018854,-8.609723,-0.609121,-5.235866,-3.145407,5.034398,4.327707,7.966900,2.056676,4.865337,-8.839552,6.418872,-8.468567,8.742535,9.302785,3.889500,-6.486531,-7.538180,-6.819256,7.435069,1.132563,-8.061801,-3.076688,-8.242231,4.755179,-4.003405,-6.171522,-9.020347,9.993134,2.031578,2.761557,1.461576,-0.715353,3.409073,6.161276,-7.028257,8.322579,2.192110,-5.955616,3.049689,2.576422,7.218668,2.559192,-6.067665,6.205137,0.511485,4.617443,1.583332,-4.686507,-4.828722,7.084022,8.814969,6.597155,-2.310737,-4.170578,2.373134,2.998437,6.866635,8.559650,-5.902797,7.920316,3.683947,-0.710499,6.558096,1.248072,-8.508411,-2.616710,2.781663,-6.322209,5.683245,-3.225432,-9.180010,1.719601,-6.022066,-0.681153,-3.074508,3.415624,-8.541129,-2.019709,-9.756282,7.008598,-0.421497,-1.797740,2.686244,-5.323313,5.072946,9.609741,-0.445265,-0.398777,1.798858,0.386011,-8.682344,-4.923600,1.523283,-4.993642,-9.087013,-1.551519,1.810819,4.671261,-9.519593,9.791111,-4.461047,1.451212,-1.482699,1.409370,-9.852535,1.338538,8.890661], dtype = "float32")#candidate|2864|(650,)|const|float32
call_2863 = relay.TupleGetItem(func_143_call(relay.reshape(const_2864.astype('float32'), [10, 5, 13])), 2)
call_2865 = relay.TupleGetItem(func_146_call(relay.reshape(const_2864.astype('float32'), [10, 5, 13])), 2)
const_2874 = relay.const([9.032761,2.057487,4.163261,-6.572584,-8.238917,8.868194,-5.365702,-6.126367,5.165225,5.494361,-0.971331,5.164540,6.922936,6.728189,-0.096966,6.681399,3.395303,-0.952364,7.757154,5.097670,-7.542426,-8.321226,-2.093448,-4.425911,3.638510,-5.414393,7.918107,-9.676321,1.012003,9.689603,4.443900,8.698038,6.063042,8.627711,-4.141067,-0.525239,5.257229,1.997488,6.270391,-3.567229,7.261909,6.070764,-3.123229,2.033995,2.278093,-1.073456,-5.026387,-5.840148,3.469986,-8.118148,-8.684430,-8.121854,3.965580,-9.288545,7.123197,7.880434,9.052062,7.390942,9.805549,8.604183,6.177831,9.287243,2.088384,-4.850711,2.681316,-8.342362,3.079223,8.997505,6.368425,-4.466663,-7.022526,5.445779,-8.072504,-2.506116,-9.826220,-1.219787,9.039893,6.764353,4.357236,5.653707,-9.791143,1.120838,-5.069742,6.783923,-4.066780,-2.256626,5.604658,-5.436860,-9.531646,9.157018,-3.255738,1.122723,7.542299,-8.204215,-7.915750,8.858096,1.696648,-8.101140,-8.632370,2.997523,5.766655,2.235139,-8.195098,-3.262101,-5.894250,5.535828,-9.272168,-0.283083,1.575665,-3.166420,-5.159752,-1.021804,-7.969248,3.735178,-2.655576,5.355042,-1.548605,8.729549,-3.560766,-9.062341,6.756844,5.320276,-0.395509,-4.577106,-5.206911,2.751398,-6.792390,4.338487,-8.722554,3.506691,8.900754,7.780710,-4.773873,-2.689447,-5.572399,2.038057,-6.209851,3.510143,7.040405,-3.405889,6.688886,-8.698088,-8.269924,-3.494096,4.421244,6.200156,4.278847,-8.691504,0.768570,-6.385341,9.908717,-2.657488,0.244830,-0.277651,2.309542,-4.824331,-3.119087,-4.100605,-1.713852,-4.522295,0.257778,4.219802,-5.906218,-8.144641,-5.889075,0.766496,-0.766654,-9.949873,-4.248749,-3.823509,7.484537,-2.630574,-2.963110,-0.018622,5.265010,-5.219610,7.732049,0.150853,5.624946,0.278773,8.355487,-8.296303,-7.172993,2.668163,7.623487,-1.251808,-3.600328,7.705116,-5.072358,-9.237411,-1.810693,-6.196385,-6.546699,3.226745,8.457274,9.536017,9.803229,-9.711073,-1.005892,-1.990072,-9.099939,5.413299,4.297407,5.536376,-0.059552,-0.523442,-7.330019,-6.632850,-4.499306,-5.000027,9.306019,-3.531190,2.577630,-8.420782,-4.528375,-2.419958,-7.997953,-7.573249,-9.942932,4.226046,2.813719,5.996685,-0.305196,-4.059030,9.838091,-9.168723,-2.049904,7.512471,9.507675,-9.045982,2.705501,-5.126626,-6.798513,8.367239,-4.425282,3.557948,-8.174829,2.714693,2.959820,-4.914836,2.206415,9.083946,3.333229,0.215646,-7.529054,8.237296,-7.537374,4.650917,-3.235163,0.787881,4.878131,-2.353136,8.158863,-7.324329,8.568944,1.391583,8.631225,-7.044268,-8.803230,-7.642110,4.690693,-3.313634,6.016652,-5.068522,-4.979312,6.782388,2.290470,-0.866781,9.720805,4.196685,3.615914,0.306359,5.756598,6.502855,-3.312938,-1.998066,2.827794,1.780767,7.900190,-1.657900,-9.105613,0.829630,4.378575,-5.050611,1.258589,8.723135,6.977945,3.286208,9.733709,-6.826752,-3.275181,3.020667,9.860846,4.611205,2.833369,-8.380244,5.138582,6.737209,1.548852,2.772914,5.645939,4.245198,-9.700462,7.918396,-5.983105,5.835449,-7.008782,-9.600029,2.961212,-0.198562,-9.623739,-8.070103,9.031617,-2.044717,-4.001941,9.687608,2.876989,-0.373255,5.430708,6.810472,5.186874,1.014227,8.136286,4.423756,5.145161,3.571696,-5.412568,9.673313,8.540236,6.971936,6.940259,2.463631,5.758295,-6.698529,0.462065,-0.146552,-2.540150,0.431339,-6.233783,9.559397,-0.269397,8.289259,-4.957406,-2.412726,-5.916952,5.680576,-7.756860,-4.050257,-1.597918,7.387955,-7.525804,-2.958917,9.863933,5.770188,-1.280505,4.682645,6.701281,-8.144052,8.102727,-8.618699,-3.629943,2.525870,-3.150808,-5.050018,4.295286,3.696109,-6.918709,-5.170472,6.626529,0.864482,-0.554019,-9.191147,2.883736,-7.977287,-3.518288,-0.244292,-0.832537,4.039756,-2.901347,-7.227203,5.816761,5.260197,2.369455,5.898656,3.517334,4.605008,6.394684,-3.820955,-8.385737,1.512476,4.796943,4.140606,-4.865862,-6.431220,-8.054066,-2.499339,-4.415189,2.085695,0.121131,-2.061829,3.401665,0.731269,-4.478744,5.877614,-3.573096,8.578607,5.464032,5.968199,6.944934,-1.078324,-1.129068,-7.617139,-1.284370,5.536972,-7.018743,0.613887,7.469622,4.503150,-2.067385,-1.500051,0.303823,-3.605525,-5.930089,-7.492722,4.694631,2.205338,0.254312,2.495318,-4.079946,-8.590125,-3.841469,-2.839689,-0.722771,0.086461,4.605130,4.795731,7.489396,9.078882,0.019892,-2.155991,-5.185171,4.259006,5.129181,8.309886,0.280828,-0.650992,8.788853,4.180362,-4.802619,-1.300930,-1.500937,2.444059,5.558824,2.985701,-1.339872,-7.202104,6.580214,9.077206,-9.113093,-3.415311,-8.353138,5.084091,-2.972479,1.171669,-5.063128,-9.672014,6.369824,-6.742130,-1.895175,6.358713,0.371869,9.921736,3.165930,3.678379,5.567379,0.379372,1.985660,-7.097438,3.179208,-0.742198,0.836960,-1.173066,-9.758722,-4.941736,-8.349831,-8.652652,1.291828,6.513712,-6.572215,-6.435363,-5.796858,1.308263,-7.467994,2.582667,2.260674,5.459741,-7.661251,5.147559,8.672124,9.859800,5.590956,1.312679,6.091472,-2.250453,-6.090812,-9.006189,-3.077132,-5.755885,4.807489,7.267682,6.657109,6.102723,-2.979724,0.862445,-7.233730,-2.039042,-9.315780,-5.099294,-4.947785,1.257981,5.431710,9.831478,2.283698,9.778916,-8.949971,4.041457,5.034548,0.137281,0.846884,3.712089,-4.100225,1.124669,-0.090184,-6.103959,-1.334347,0.357822,2.860622,-4.140929,-4.961187,4.967581,-8.122853,-3.464793,-1.445937,4.664598,-3.851312,3.428088,-2.609793,6.449979,9.771430,0.795903,4.541063,0.562732,-2.395269,6.510122,1.454089,7.332870,2.435034,-7.778877,2.791454,5.724299,-1.758935,-1.490220,-9.166067,8.370198,-8.168966,1.990467,8.597236,-0.168992,-0.234583,-1.113112,0.292235,0.372057,-9.877836,-1.848170,-5.202713,7.478296,-3.229975,0.298857,-2.557848,-8.252817,-4.088999,-2.985275,0.194438,8.359369,2.700601,1.676768,1.001358,0.294412,-4.217422,0.385042,-7.804411,-7.047157,1.654451,0.038804,-1.905559,-5.060110,0.490733,6.859341,7.247654,7.238723,-1.344508,8.788138,3.862581,2.390351,-9.902823,-4.565618,-1.335125,-1.684984,8.946525,0.738747,3.383588,-3.247917,-4.531728,2.179231,-5.124526,-1.211334,-7.956646,-4.402878,9.250742,3.094438,-8.050752,-5.727577,-1.041710,-1.559299,-9.083089,-4.081731,2.812702,-4.634713,-9.244427,-5.488841,-8.179354,3.220027,-7.660025,8.689380,-9.275990,-7.082743,-8.872610,7.926513,2.866076,-0.545773,5.542544,3.492743,1.439446,-4.045952,-1.037166,-7.365306,-6.044470,3.393019,5.579064,-5.383787], dtype = "float32")#candidate|2874|(650,)|const|float32
bop_2875 = relay.maximum(const_2864.astype('uint64'), relay.reshape(const_2874.astype('uint64'), relay.shape_of(const_2864))) # shape=(650,)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_2878 = relay.TupleGetItem(func_2609_call(), 2)
call_2879 = relay.TupleGetItem(func_2611_call(), 2)
output = relay.Tuple([uop_2843,call_2863,bop_2875,call_2878,])
output2 = relay.Tuple([uop_2845,call_2865,bop_2875,call_2879,])
func_2895 = relay.Function([], output)
mod['func_2895'] = func_2895
mod = relay.transform.InferType()(mod)
mutated_mod['func_2895'] = func_2895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2895_call = mutated_mod.get_global_var('func_2895')
call_2896 = func_2895_call()
output = call_2896
func_2897 = relay.Function([], output)
mutated_mod['func_2897'] = func_2897
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2911 = relay.const([[[-4.035810,0.388458,5.646988,3.904978,-7.274569,-6.446469,-6.197259,5.449644,5.009989,-4.378570,9.574395,-4.869210,1.976049,-7.238128],[7.361606,5.508933,0.374319,-4.471183,-2.399734,8.505978,-7.580837,-3.874267,5.384522,-3.640578,9.958588,8.010541,5.441534,-6.006194],[0.150128,1.177628,-5.499442,-9.735248,7.784580,-1.024695,1.370286,-0.529916,6.194142,-1.220178,-0.954355,-4.449092,-6.032338,-7.157656],[3.915275,-3.147116,-3.778557,9.276620,-8.636674,-6.666452,9.254345,-8.604842,-0.384803,-1.001643,3.371421,3.791244,5.849224,-3.510819],[0.742994,1.659126,6.003726,0.765332,5.177384,-8.090172,4.002686,5.719903,2.091474,6.713304,-7.864939,6.529770,-0.078145,6.045959],[-4.221417,9.928051,0.047789,-3.327318,-7.755868,-8.777177,9.040658,-5.614584,8.071471,0.851474,1.985805,5.092937,-7.234401,9.402759]],[[6.677719,-1.898229,-4.843034,1.787950,-2.951225,-0.801843,-7.557112,3.278115,8.882702,-5.085918,9.915540,5.360469,-4.457728,3.713945],[-0.154113,7.054899,2.080257,8.703547,-1.989949,9.236538,7.993487,1.789335,-7.930272,3.342379,-8.546734,3.265825,2.601478,-5.154836],[2.192488,-3.535494,6.093226,6.536111,9.769405,-8.385657,5.744795,-7.254000,-9.905049,-8.536272,-4.333729,-5.532736,5.718938,0.524251],[0.138121,-6.730130,8.630125,-2.604573,5.945326,1.484899,-8.476376,-9.716079,-6.395194,-0.500555,-8.314491,5.853351,-8.292185,-4.580814],[4.722636,-1.731026,8.576842,0.831242,2.786113,0.824899,9.309771,8.640073,5.159686,-8.817392,1.432968,-8.142170,8.938988,-0.631124],[6.618185,-1.664070,-7.377674,3.978263,6.698228,-9.675816,-2.529286,2.731448,3.310399,-1.920760,-5.708277,-3.873814,6.212015,-1.291454]],[[-5.386432,0.768647,9.611523,5.843713,-8.039245,9.930429,7.376323,0.034054,-3.313311,-4.871941,4.937142,-1.322150,8.598732,3.717436],[9.752263,2.333058,5.654897,5.724148,-9.238220,-9.593136,-2.025456,2.180274,-9.507802,2.262271,0.480793,-1.851131,-2.130168,9.438379],[2.570485,8.771389,-0.063678,-2.417879,7.706093,-3.951391,-5.305366,-8.639406,-3.352690,9.131626,-8.081251,8.047769,-9.447481,1.072687],[-0.590976,-0.294217,3.334576,-5.964161,-7.155219,5.896097,8.979961,-6.999661,9.104390,-1.794134,-0.424382,-5.685502,-1.310848,-7.917902],[1.181565,-2.028169,-9.363605,1.799408,-3.001988,8.214282,-2.765063,-7.212785,-4.671054,-0.306173,3.653398,-9.595601,-6.360149,1.426885],[-0.875762,5.122378,9.857548,-7.548084,-4.056781,7.285964,9.518437,2.063653,-6.174597,8.357687,-2.236657,-5.847920,-0.253620,9.249971]],[[9.676754,-5.463126,9.270114,8.081820,1.704944,-3.319217,3.580475,-5.184709,5.469110,-6.883244,1.249407,-1.537056,5.722873,0.636159],[9.625863,-4.833898,2.991395,3.422045,-9.392941,0.031948,-7.645244,5.095386,-7.698014,-9.055527,-8.609018,3.260465,0.896823,3.079388],[-8.775623,-7.361773,-9.027176,-9.665509,9.788680,-3.640513,-6.818731,5.343964,8.647003,-8.523970,-8.573371,1.612423,2.733300,-1.100510],[1.217637,-4.094236,4.833152,3.760274,7.215353,5.881793,8.797332,7.475492,-7.030722,-8.633498,0.515539,2.096716,-2.664716,-2.968268],[4.368776,-6.425858,8.796116,-7.550435,7.705408,-5.408025,8.395771,-5.104293,4.291741,-3.693162,-8.607774,5.873105,7.012593,-5.499595],[-6.611496,5.769617,9.063660,-6.814480,-4.740223,7.632436,-4.990552,8.209700,-4.783490,4.813051,0.473557,5.406716,-1.162818,2.301196]],[[7.172786,4.993930,3.054958,0.494582,-8.689646,2.840514,-8.491429,9.801459,-0.991967,-8.994672,-1.196197,-3.817439,6.477115,8.037354],[-0.233034,2.064770,-9.321469,9.241292,2.964341,4.521499,-2.796995,2.043238,1.422440,-2.004539,7.914404,-5.264431,-3.767637,5.457110],[-1.652925,8.140185,1.682586,-0.903638,-9.861363,1.260844,-1.405685,5.648037,8.344166,9.514265,7.140252,-1.379486,-9.521335,-9.347936],[0.794551,-8.349941,5.958443,9.160606,-7.298838,-8.938922,7.478632,1.295997,-4.110847,7.823718,9.520067,2.157450,-3.954985,0.208336],[-8.677997,7.920620,0.577176,-8.520762,5.129136,6.606682,8.072634,-4.521755,-5.424782,3.297017,9.604961,-2.761961,0.058214,0.061674],[-1.249896,3.299601,0.826689,-7.423566,-6.038811,3.725489,-4.790058,-3.997719,-7.820249,1.041454,-2.262432,-3.790058,6.425200,-6.659351]],[[-7.787716,-9.196616,-3.525258,0.591726,-6.312804,-4.921219,-1.450798,-5.856091,-5.557431,3.959000,-7.642082,5.083903,1.483409,-9.156073],[1.806954,4.957032,-3.060064,-4.531779,4.803305,-7.445201,7.595055,5.178273,-3.659418,3.048110,-9.758521,-0.835922,2.363420,7.284597],[6.773750,9.571987,-0.568357,-1.375969,-5.769905,2.619799,-2.463562,1.754575,-4.289411,-7.707783,-6.726420,7.089778,-6.209377,3.909820],[-5.543962,-4.703391,-8.796552,-0.014349,-0.367719,-1.340853,4.386606,8.155412,5.234143,4.273448,0.091823,5.015504,2.726430,-5.454291],[-0.086412,5.938510,-0.182433,-9.111200,3.938379,4.268510,7.951955,-6.288732,2.551665,-2.139624,-8.307969,-7.597586,9.163598,-8.967016],[-6.387565,-1.663906,-1.834129,1.737108,0.295486,-9.061335,-7.644558,5.873323,3.260861,-1.825264,7.229246,5.794179,3.969792,6.179618]],[[6.464996,5.415305,-6.843806,-4.729011,-3.834764,2.365713,3.042584,-2.412793,3.370429,3.654872,-4.525720,9.728712,4.526749,1.503241],[-8.499910,9.307237,-2.051706,6.793048,5.645251,-8.888462,-6.542868,9.018452,1.830781,5.030480,7.497128,7.758945,0.007359,1.112290],[5.527693,7.925761,4.050748,-0.796259,3.423120,-7.062356,3.060996,-6.629719,-9.845909,-0.137731,-4.811440,-4.340874,-9.066708,0.540581],[-0.212299,-4.429511,4.212033,4.030186,8.158576,7.724867,-5.586435,3.390072,-9.639748,0.448240,5.269504,-1.194069,1.691614,-3.668098],[-2.359822,9.858475,-2.466758,-4.001684,8.072311,1.834833,6.098748,-2.373758,-1.760971,-7.009421,4.941863,-2.458814,1.807422,-2.785344],[5.338176,-8.093760,-7.110769,4.062090,-7.713700,1.398535,5.891162,-2.157970,2.872505,-0.969901,-9.729363,-5.080494,-7.202136,-7.546632]],[[8.671266,6.687037,0.518508,-7.805758,5.357112,8.395254,6.791585,-6.670155,6.014849,-9.811938,1.565387,-3.462963,9.242103,9.027174],[5.992296,7.652144,8.558432,-5.916739,-4.607477,-6.035067,-2.402113,3.871361,-2.821349,-3.763540,-7.789595,-5.297565,-4.246462,9.057962],[2.491568,4.510172,6.586361,6.075879,8.524178,9.841906,-2.784264,-1.552173,1.197212,3.043540,8.297482,4.048543,-2.843322,7.089416],[3.079584,-5.657211,0.616882,2.225351,-8.287892,8.267312,-4.804290,7.950321,4.404374,1.456789,-5.568863,-9.894916,4.936168,6.113857],[-0.462565,-9.392887,-6.699148,-2.930678,-2.497995,-8.887256,3.947727,8.704345,-9.486415,-6.071071,-4.313014,1.159740,-8.480258,-9.101350],[2.797780,4.827346,-7.363592,3.949898,-8.802696,-3.403464,-2.562918,7.442932,2.758215,7.928759,-6.391873,4.996244,-1.256251,3.258874]],[[-1.816746,-0.157732,1.722926,5.498979,2.685903,-5.322427,0.425360,-5.834678,2.331526,0.959625,-2.697312,6.243507,-0.184943,5.837644],[8.396029,-7.661240,-2.153468,6.376646,-6.952496,8.110272,-0.003041,-8.288291,4.577537,9.746553,-5.370847,5.957732,5.203268,5.649954],[2.667186,-7.927662,5.737513,-8.428810,2.413605,-8.943814,3.462751,2.906940,0.783606,9.050362,8.310817,-1.577121,7.494224,-7.456463],[-9.077347,-6.787365,4.796509,-1.355671,9.680287,-9.460977,-4.245836,3.460903,2.484088,0.458031,-8.006954,2.247152,4.220704,6.862057],[1.134884,-6.451560,-3.130106,5.186205,8.403649,-2.030509,-5.865611,-4.224500,0.363033,-0.148209,-5.013283,-2.984137,-0.658343,-1.728436],[5.545015,-6.634681,-0.040355,-9.568815,-1.742003,-5.501972,1.062143,-7.266498,6.536823,-6.536690,-2.626083,4.738405,8.628790,2.844940]],[[2.441351,9.698196,-8.297098,8.927060,-6.977624,3.773246,2.079201,7.817640,-1.980753,8.232505,-9.894247,4.212124,-2.644802,4.033022],[-1.494590,-1.894340,7.571593,-7.245323,7.429281,-7.783727,4.124146,-2.024456,7.879341,5.861553,-8.744400,5.852223,-7.038009,5.050159],[-6.002211,-8.331465,-9.296527,-8.827780,6.113317,3.472531,8.729119,-9.766279,9.798391,3.867742,-9.887817,-3.089913,0.010804,3.379949],[-7.309351,9.739553,-4.915980,7.759169,-8.721695,-6.243556,-1.395083,-2.341799,1.557855,-1.441173,-6.455618,0.134627,-6.304166,8.741971],[1.956015,-0.229996,6.050893,-7.224188,9.045946,-5.173053,-4.627787,4.985005,-0.160025,-1.296906,7.935525,-6.314686,-8.131295,-4.442208],[-1.274972,8.095229,6.079538,0.954848,0.514930,-3.401601,-3.447849,-0.454959,5.196192,7.295910,4.415091,8.207094,1.089760,-8.454155]],[[6.543466,-6.551009,-8.331546,7.078210,7.573449,6.846987,1.969346,-1.186337,-6.752490,-9.327513,-4.057669,-3.628611,1.343368,-8.121286],[3.799055,-2.763285,-3.063613,-6.115206,-0.142578,-9.633133,7.558060,-6.265619,2.027756,-6.666812,2.456551,9.472857,-0.055487,-0.895073],[7.278163,-7.250939,9.299957,3.537286,-7.357129,0.592562,9.768929,-8.749639,3.661206,3.474207,9.534625,-6.306262,-3.192078,3.409359],[5.401206,-8.468604,-7.927189,-6.563065,-9.523576,1.218442,3.548720,6.283115,-7.408611,1.721811,5.715305,-4.591140,-3.083100,0.175722],[-7.870115,-5.867011,-8.410703,-0.224822,0.282936,7.490360,-5.635966,-8.100965,4.408376,7.606509,-5.092186,8.545625,7.151727,-3.893619],[-0.170221,8.654737,-8.545197,7.763126,-1.522403,-9.947084,-3.125290,7.450279,-2.034576,-1.673802,-4.548207,-0.610050,6.041618,-3.566439]],[[8.068646,-7.342824,-0.126701,8.664603,0.594596,-7.793835,-1.414689,-4.306514,-5.000973,-3.180393,8.320898,-1.039445,-9.865830,-0.628163],[-2.283872,-1.016275,-0.529518,0.733557,-6.633077,8.550435,9.300799,-6.311424,-2.822752,-3.431971,-7.501835,-7.825966,-9.344543,1.384264],[9.046871,-6.255563,-8.507134,1.221341,6.377547,-3.537430,5.397514,-7.982010,6.032712,3.768637,5.962859,-8.596415,-4.786133,2.779331],[1.270170,7.928455,9.993010,-2.631570,-8.607347,-7.068974,-0.410759,-9.667749,-3.099672,7.076130,0.140560,-2.705535,-2.716753,-3.100287],[3.894680,5.548932,7.871222,8.687801,-2.424165,-8.002970,7.542293,7.942550,9.569427,-5.144594,-6.999355,4.028076,-1.441298,-5.310076],[-8.009509,7.265891,-2.074614,-5.468391,2.848648,-7.997099,4.005679,-4.699468,9.576518,0.099443,5.226029,6.233159,6.237315,0.312754]],[[-3.783198,-7.250617,7.878802,-1.421674,4.709088,8.555661,-7.286553,-7.933142,-4.071396,-9.894091,-0.867261,1.435248,1.572872,0.478252],[2.009501,-6.277362,-5.673697,6.726549,-6.571952,-0.406482,-2.485300,-1.785041,2.726329,5.963650,-8.351975,-6.400849,3.389267,-6.754281],[-7.771997,3.464542,9.241417,5.858189,-2.282466,3.471164,-1.568828,-1.573263,3.570950,2.849865,-2.701343,-6.816679,-5.642135,0.650765],[-2.531397,6.582390,-4.128307,3.684236,-4.461749,2.115933,2.480847,-5.849125,-9.120738,-8.394882,8.138122,2.611231,-1.471512,-1.696315],[-8.073484,-4.679580,-5.770150,5.096370,-6.917009,-0.459571,7.420277,-0.815476,-6.395904,-3.085936,0.196441,-6.884802,-0.726993,-4.312442],[9.200831,5.949943,3.912130,3.458477,2.900219,-0.573452,4.258227,1.850398,-6.877747,6.698890,-7.370010,-4.370699,-2.110157,-8.027191]]], dtype = "float64")#candidate|2911|(13, 6, 14)|const|float64
var_2912 = relay.var("var_2912", dtype = "float64", shape = (13, 6, 14))#candidate|2912|(13, 6, 14)|var|float64
bop_2913 = relay.mod(const_2911.astype('float64'), relay.reshape(var_2912.astype('float64'), relay.shape_of(const_2911))) # shape=(13, 6, 14)
func_2895_call = mod.get_global_var('func_2895')
func_2897_call = mutated_mod.get_global_var('func_2897')
call_2919 = relay.TupleGetItem(func_2895_call(), 3)
call_2920 = relay.TupleGetItem(func_2897_call(), 3)
uop_2930 = relay.sinh(bop_2913.astype('float32')) # shape=(13, 6, 14)
output = relay.Tuple([call_2919,uop_2930,])
output2 = relay.Tuple([call_2920,uop_2930,])
func_2934 = relay.Function([var_2912,], output)
mod['func_2934'] = func_2934
mod = relay.transform.InferType()(mod)
var_2935 = relay.var("var_2935", dtype = "float64", shape = (13, 6, 14))#candidate|2935|(13, 6, 14)|var|float64
output = func_2934(var_2935)
func_2936 = relay.Function([var_2935], output)
mutated_mod['func_2936'] = func_2936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2895_call = mod.get_global_var('func_2895')
func_2897_call = mutated_mod.get_global_var('func_2897')
call_2965 = relay.TupleGetItem(func_2895_call(), 3)
call_2966 = relay.TupleGetItem(func_2897_call(), 3)
output = call_2965
output2 = call_2966
func_2981 = relay.Function([], output)
mod['func_2981'] = func_2981
mod = relay.transform.InferType()(mod)
output = func_2981()
func_2982 = relay.Function([], output)
mutated_mod['func_2982'] = func_2982
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3024 = relay.var("var_3024", dtype = "float64", shape = (12, 6, 9))#candidate|3024|(12, 6, 9)|var|float64
const_3025 = relay.const([[[-2.958880,-4.441043,-0.410724,8.357370,-5.029922,1.914728,-0.640522,5.832097,-5.716466],[3.933948,-4.450615,2.320704,1.644557,1.826874,3.336447,-0.716136,4.737211,-9.166612],[4.830246,-3.892095,7.395925,0.276983,5.014180,-0.865241,7.184483,-7.583180,3.363358],[-4.381907,-5.248154,-0.074529,-1.546293,-8.390511,6.081494,1.611114,-6.218888,0.135587],[-8.504726,0.390263,4.833444,8.823813,4.165586,-8.124465,4.100232,2.621533,-9.159636],[-3.601751,-1.140659,0.440145,0.446888,-5.042633,-2.835636,8.200644,-9.134576,-8.167225]],[[-7.367486,-6.660579,-4.078850,-6.960853,-3.885474,5.531192,3.248285,6.865445,-0.871665],[-7.692125,-2.913212,5.448320,-7.515120,1.984574,9.341730,-5.317612,8.026237,0.485114],[3.398759,9.672150,7.347600,1.175366,-9.559086,-3.731212,9.113706,-9.218209,2.037423],[-2.738656,0.836663,-9.613970,2.522327,-8.052977,-7.879592,-4.784693,-0.491288,9.912396],[8.169922,-1.689074,0.535259,-1.545782,6.093852,-5.801373,0.873768,-5.328559,-3.903585],[8.077509,5.311351,-9.661988,-8.236709,-0.072840,6.669450,-3.604136,-5.564988,-4.917289]],[[-4.583057,-8.755844,-3.583832,-1.243223,1.045694,-7.555249,-7.221100,8.667469,8.571973],[2.078712,1.302248,-7.179167,5.544636,8.164919,-2.011931,3.215651,-6.778083,-6.758988],[4.086496,-6.602919,-9.194284,-7.993390,4.255186,-4.487003,-8.696995,-7.143093,9.660846],[-7.518446,6.059520,-1.363081,0.295076,-5.947817,5.721437,-1.828899,-9.671170,5.074177],[1.649788,9.253587,-2.012947,-8.800528,1.586604,-5.417754,0.558268,9.314854,-6.292894],[-8.042767,3.170798,3.617472,-6.190582,1.234182,2.866394,8.533839,2.146658,9.091416]],[[-1.021918,-8.863135,-7.402266,2.400980,3.423403,-9.055708,-6.186248,6.742401,-6.760959],[8.531858,7.624940,9.813138,9.752727,9.199371,4.370571,-5.867107,-6.478691,4.107413],[2.240352,3.267180,5.367906,-8.568576,-1.544522,4.028825,0.027294,3.404158,-0.988049],[3.844632,1.855473,-8.695175,9.821998,5.223321,1.803395,-6.487136,3.553215,2.986066],[9.977668,-1.949082,7.512481,-0.534558,-0.595657,7.710133,-4.098800,2.438114,-7.638249],[-6.781779,-6.004481,9.175889,-1.600207,2.714262,4.030494,-8.926622,-3.989142,9.347085]],[[2.447534,-7.930268,9.030329,-0.631528,-7.826705,-6.125588,9.494572,-1.767417,-3.154233],[9.069109,9.562691,-3.847070,4.023763,-9.645326,3.563719,3.547760,3.699926,0.006650],[-4.694254,9.721709,9.486270,9.342907,-8.685284,-9.092469,5.878960,-9.834768,-4.573873],[-3.856502,0.045959,-4.138885,-9.294315,3.890880,9.593013,-6.378239,-5.390070,8.450089],[5.662968,-7.636247,-1.493687,-7.392885,-4.935366,4.123844,1.805400,-3.811801,-0.914543],[-1.849889,8.290580,-5.738948,-1.540798,-3.945653,-2.503594,-0.378299,-6.333682,-2.158570]],[[2.495081,-9.219256,1.198173,8.452768,0.139466,3.072142,-9.581455,-9.425713,-1.081294],[-4.361387,-7.618691,7.537487,-1.568500,-3.872451,0.582414,-6.172782,-6.917210,-9.882970],[-6.143316,-3.839398,-9.162443,0.757307,7.784736,-7.921620,-2.205526,-1.474799,0.500779],[-5.671122,7.023365,-6.679802,6.643906,-0.961289,0.218770,4.611745,-7.338900,-9.630644],[3.191556,4.819270,3.102646,-0.878271,-2.485635,-7.668977,4.801793,-9.778949,-9.479030],[8.153960,7.956040,3.700264,-0.816247,-8.030548,-4.861373,5.647244,-8.767396,1.383392]],[[-3.440829,4.120487,-0.082299,-7.478738,-6.785225,0.160878,8.561060,-5.248671,-3.394539],[-7.594505,-5.307095,2.982232,5.023300,1.329634,5.105410,7.339164,-1.923632,-1.882694],[7.087886,-5.083268,1.203513,-4.844477,-4.746458,1.561911,-9.041169,-1.045204,-7.244873],[0.996430,-2.482849,7.700341,8.107642,-1.026681,-5.172590,9.879462,3.038136,8.331957],[0.616062,-4.021958,1.311939,-6.854232,8.638835,-5.379124,-7.746546,5.877293,-6.660312],[-1.820697,3.512261,-5.434791,8.844151,1.025641,5.044278,-4.084455,-9.962803,1.810884]],[[-8.672945,7.385441,-5.470320,-8.677006,-8.204658,0.341316,-9.986858,-4.359563,-6.999898],[1.829145,-9.118058,4.128365,-5.071368,-4.452605,-0.683373,-3.531815,6.447663,-4.327311],[1.818205,-0.392666,-9.777756,6.962105,8.382167,-7.956685,-9.952818,-0.316129,8.622572],[-2.184912,0.393644,-0.043490,-1.220121,-8.957773,1.691825,7.898595,1.349375,-3.043678],[-6.462414,9.693086,8.845578,6.696955,9.886066,4.563610,0.031170,-6.123115,-8.831914],[-5.556559,4.485344,1.950401,7.160210,-2.554102,-9.054478,-0.757678,-1.624691,9.046082]],[[-8.430209,9.813658,-6.425207,-0.721145,-2.279208,-4.014891,0.815164,-7.851737,2.833399],[3.942175,-8.518548,-8.430831,-0.479803,5.475934,-3.311780,6.913527,-4.213617,-8.804305],[1.866841,-5.547197,-9.213322,-7.977194,-7.198501,-9.790611,-6.234113,-2.331331,5.333803],[-1.002481,-7.057791,-1.541996,-3.705560,4.522687,-6.407670,3.526481,-3.414872,-3.818779],[-6.094927,-4.797843,3.485405,-3.530312,2.790502,-3.667367,3.515966,-6.808649,9.673996],[-9.309764,-2.482295,-1.899504,-6.036762,-5.468524,1.502531,4.408316,-4.348370,-7.332277]],[[-7.934718,9.414258,-2.387222,1.294361,-8.025040,4.984188,-3.876674,9.796640,6.793865],[-6.696886,5.608342,-1.343538,0.223105,-6.338814,3.163742,6.321347,-7.138826,0.700528],[-0.252746,-8.019340,9.716661,-3.656740,-1.907282,-7.729154,8.545655,5.088688,-3.325331],[-5.377709,2.993003,6.163530,1.762058,-6.015468,6.106107,-7.280263,-0.522036,5.280236],[-2.289647,-8.182336,7.982195,-6.695228,2.925218,-2.141252,4.636648,9.659629,6.359437],[-1.804285,0.691829,-4.269689,-4.664990,-5.680753,-1.763567,-2.095857,-0.045382,0.390831]],[[-7.517583,-1.433950,3.743366,0.925523,8.002342,7.167565,6.726885,-5.656962,-3.859270],[2.197363,0.436686,-1.602508,5.746463,9.041242,0.193218,-0.927754,-0.525875,6.547774],[9.427794,4.766643,4.803728,7.818710,-6.017700,5.063105,1.396699,3.144228,-7.507898],[-7.515505,9.482649,2.401748,-2.235683,-2.716763,2.137814,-4.203411,-3.944799,7.375288],[-5.348527,-3.517518,-5.559522,6.452540,-2.555244,0.632198,-9.596763,2.306484,4.534502],[-7.410334,-6.166652,-5.896581,-1.558076,-5.424925,-9.582605,-3.129627,-5.256444,2.525693]],[[-9.607026,-6.443171,-3.288103,-1.854655,5.552755,-8.700496,-0.579355,-2.080389,0.082385],[-5.839218,6.443575,-2.545949,3.274429,-8.960187,9.946059,-4.957813,0.633150,-6.761896],[-6.441519,-1.314650,-4.631501,-1.625009,-5.345270,2.785555,-2.492625,7.823252,-0.741780],[9.744630,5.831764,-9.232843,-5.530232,-1.942081,2.870291,7.722871,5.213760,-8.544067],[-2.811928,8.865401,3.242809,-0.330703,-2.966019,-0.453746,7.157962,-2.029213,7.077452],[1.444354,-0.122244,2.599866,-5.203225,4.833404,7.958434,-6.193123,3.453936,-3.636626]]], dtype = "float64")#candidate|3025|(12, 6, 9)|const|float64
bop_3026 = relay.power(var_3024.astype('float64'), relay.reshape(const_3025.astype('float64'), relay.shape_of(var_3024))) # shape=(12, 6, 9)
func_1644_call = mod.get_global_var('func_1644')
func_1647_call = mutated_mod.get_global_var('func_1647')
var_3033 = relay.var("var_3033", dtype = "float32", shape = (84,))#candidate|3033|(84,)|var|float32
const_3034 = relay.const([8,-10,-3,10,-2,-2,5,-9,4,-5,6,9,-2,1,9,-7,-9,10,1,-8,10,-8,-1,-10,-4,9,-7,-3,9,-8,-5,-5,-1,10,7,-4,5,-2,9,-3,-6,-5,1,3,-10,-8,5,3,10,-7,1,-4,5,5,7,-9,10,-8,-1,-1,-2,-10,-4,-3,6,3,-1,-4,-4,-2,-6,-8,6,9,4,10,1,-3,1,-3,-5,-4,5,7,-4,-4,10,9,5,3,10,-7,1,9,-7,-1,-9,3,1,-3,6,7,7,-2,-6,6,-6,8,-5,1,9,6,-7,2,-6,-4,2,10,7,-4,7,-8,4,-2,7,3,-7,4,8,3,10,-8,-7,2,2,-7,-7,-4,5,10,-1,-7,-1,-4,6,-3,-3,9,-1,5,8,-2,9,5,-2,-3,7,-3,1,-5,5,5,1,9,4,5,6,-6,1,-8,-6,6,-2,-10,-6,-2,-3,8,-1,-5,-1,-1,-8,-3,-10,-2,3,-10,4,-10,4,-1,8,-2,8,-8,-10,5,7,6,8,-2,5,6,1,-2,-7,-4,2,-8,7,-9,-6,-4,-4,-8,8,5,-3,3,-6,-9,-7,10,2,2,-3,-4,-9,9,9,-6,-9,-2,-2,6,-1,-1,-9,10,8,-1,-6,7,5,7,-3,-3,-7,-5,-2,-9,8,-3,-2,10,-6,-8,-6,-8,-10,7,1,8,-6,7,5,-1,5,-2,9,-6,3,-9,-8,1,1,3,-9,10,-7,-3,2,-9,-10,-3,-3,3,-2,8,-9,-9,-9,2,7,-3,-8,9,2,8,-9,2,1,-9,-8,-2,7,7,6,-4,-3,7,5,3,4,-1,2,4,-9,-6,-1,3,-10,4,10,-8,6,6,1,-9,1,-7,-3,6,-5,8,1,-6,2,6,9,-6,-9,-4,-2,-5,-5,5,3,-10,2,-6,1,-3,-1,4,-2,3,-5,-2,-2,-7,7,-6,1,-1,-6,-5,7,8,6,-6,-4,-10,7,-5,6,7,6,-8,-9,-2,-5,2,7,-2,3,1,-8,-8,2,-6,-5,-6,4,8,2,-8,8,-1,-9,-8,-10,2,10,2,3,-2,1,-1,-9,-10,-10,-10,-10,3,-1,-4,10,8,5,-3,10,-9,1,-5,9,-5,-4,7,-3,5,-1,-4,4,2,4,10,-1,4,-6,-6,2,4,-4,2,-1,-3,6,7,1,-9,-7,8,7,1,9,-10,9,-1,-7,4,1,-2,5,5,1,1,-5,7,3,7,9,4,-3,3,-9,-8,6,-7,1,9,10,-1,10,-6,10,-4,-3,7,5,-4,8,-7,3,-5,8,8,3,2,1,-6,-3,10,-1,2,6,4,-9,10,7,-8,-1,-2,6,-10,1,-8,8,-2,4,9,-1,7,6,-4,5,7,-8,10,2,-3,-6,9,10,5,7,-5,6,2,9,4,-10,8,3,-4,-8,10,-7,-9,2,10,-7,2,4,7,2,5,-6,9,-1,-4,7,2,-5,-2,5,8,4,-7,-6,2,-6,9,10,-9,1,1,-7,6,5,9,-8,2,-1,-10,3,-4,-9,-1,10,-1,3,-3,-6,-4,-4,3,-2,-4,5,-9,-4,-7,7,-1,8,-10,-5,-3,1,-3,10,7,-2,6,-2,6,-9,8,-1,-3,-2,-9,-5,9,-10,10,-10,-4,5,2,7,5,10,-2,-2,-9,-9,3,-3,-1,-5,-4,8,-1,-10,-2,10,-2,9,-1,-10,-7,-9,4,-3,4,6,4,6,6,-8,-2,6,-9,10,7,-10,-9,-7,10,8,9,-2,7,-10,-5,-3,-9,10,3,-9,10,-9,10,-3,-7,6,6,-10,-7,10,-1,6,-2,-7,8,9,7,8,3,10,4,-7,4,-5,-10,-3,-8,10,-7,6,4,5,3,-1,-7,-6,4,3,-1,-1,5,-1,-4,4,-9,-9,6,-6,-9,5,5,9,7,1,2,10,-5,10,-3,3,5,-4,-7,-1,-7,-6,-2,-6,-9,-10,9,10,-10,-5,7,4,1,-6,-10,9,-5,-2,10,-9,-2,-1,8,5,4,-2,8,-2,6,1,4,3,-5,-10,10,-5,8,-1,1,-6,-6,5,-6,6,6,-8,-9,2,4,10,-1,6,3,8,5,-9,6,-6,-3,-4,10,-9,-3,-3,-5,2,-8,-7,-8,-6,-1,-2,1,9,10,10,7,1,2,-10,-6,7,1,-6,-1,9,-9,10,1,-3,5,5,5,-4,9,-8,-6,-9,-8,-5,-9,-2,-9,10,4,-5,9,10,5,2,8,6,-4,-1,10,-3,2,1,2,3,7,4,7,9,-8,3,3,-9,4,9,-8,7,2,3,-9,9,-4,3,6,3,-3,1,-8,2,2,8,-6,10,-2,1,9,9,-2,5,4,-2,-6,2,-5,6,8,7,-8,3,10,-1,-5,-2,-3,-4,7,-4,1,9,-4,3,-8,7,7,-3,-5,4,7,8,-3,8,10,-4,-2,9,7,-8,-4,8,5,8,10,-10,10,-10,2,-6,2,7,3,9,-10,5,-2,-7,6,6,1,-4,6,7,-4,2,3,9,5,-7,7,-1,5,-5,-7,-1,-7,-1,-1,-10,-1,10,-2,-1,-8,-4,-10,-3,6,10,-9,2,-5,8,1,-10,10,6,8,-1,-6,1,-1,-3,-2,-10,3,4,7,6,10,10,-6,2,-6,8,7,9,4,6,-4,-5,-10,-7,-3,-7,-6,2,5,-6,6,-4,3,-10,-5,3,5,-8,-10,-6,-5,5,9,-5,-1,7,5,8,-5,7,9,1,7,-2,6,10,-10,5,2,4,-9,9,-2,-1,9,7,7,1,9,3,-1,7,9,1,-1,3,7,3,-2,6,-4,9,-3,7,6,-7,4,6,-7,-3,1,-10,1,-8,10,4,7,7,-6,1,-6,-6,-6,2,-1,-2,4,-1,-7,-7,2,-3,5,-8,6,-10,10,3,-2,1,-1,-6,-5,7,5,-9,5,6,3,10,5,-4,-10,3,1,3,-9,4,-5,5,6,7,-9,-3,8,4,5,-2,-2,-7,1,4,9,3,10,4,-6,-9,-5,-9,-8,-10,-10,10,-9,6,6,-9,9,-9,-2,7,3,2,8,2,-2,-1,-7,6,-5,-6,-4,6,-7,-2,-7,6,5,-9,-7,1,5,4,10,-8,4,-7,-6,-10,9,1,-1,7,3,8,-7,1,-8,6,5,-4,5,-7,-6,6,-9,1,-6,-3,-4,-10,10,7,-6,-8,4,-2,-5,1,-6,-7,8,2,-8,-2,9,-7,5,9,-4,6,10,10,7,-9,10,7,-5,9,-5,10,-7,3,1,-7,10,7,-1,7,6,-10,-3,-4,5,6,8,-4,-2,-9,10,10,-7,-1,-1,8,-6,6,7,-10,5,4,1,-6,-6,8,1,5,-2,-8,-7,-2,7,4,8,-8,-9,4,-10,-5,-7,2,8,6,4,-4,-2,-5,2,5,-5,-3,-5,4,-9,-2,1,-4,1,-10,-8,7,-1,-9,4,-5,6,3,4,7,-8,2,2,8,-8,10,3,5,4,6,-9,8,8,-7,1,-8,4,8,-7,-1,7,2,1,-3,-3,-4,2,6,-1,6,8,1,-5,-7,-5,7,2,-1,7,9,-5,-2,4,8,-2,9,8,1,-9,6,-1,-6,-4,-7,1,1,-10,2,3,-1,-6,-5,2,-10,8,-5,-8,-3,7,3,7,-5,-9,5,9,-6,-8,-1,-9,-9,4,-8,-6,3,3,1,-2,-9,5,10,9,9,9,8,-9,-6,5,-5,7,2,6,9,2,-8,1,-1,5,10,9,1,6,-5,3,10,10,9,-9,-5,-6,10,-2,-8,10,-9,5,-1,7,-2,5,-10,5,-4,-8,7,-3,-1,-5,-10,-8,-6,-8,4,2,-6,9,6,7,-8,1,9,10,9,-1,-4,9,-2,8,2,3,9,-8,-3,4,-10,-9,-9,10,-6,-8,-2,10,-3,1,10,-7,-5,3,8,1,4,-8,1,-2,1,-9,4,10,-10,5,4,-9,7,-8,3,2,1,2,-7,9,2,-4,7,-8,-4,7,6,-8,-7,-5,-6,-8,6,9,4,-5,5,-7,-1,1,7,-5,1,-4,-10,1,-8,4,-8,-9,-2,1,4,-2,-10,-2,1,9,-9,-2,-4,4,3,7,-1,-8,-1,-10,4,9,5,10,-7,7,4,6,6,1,7,5,-4,-9,-9,-1,-1,6,2,-3,6,6,1,1,9,9,10,4,-6,-3,3,7,-2,1,10,2,4,-10,-9,4,-3,-6,8,10,-2,-8,-7,-9,9,-5,-4,7,-7,4,-9,4,1,8,-9,-3,1,5,6,7,4,4,-10,-7,-1,-3,-9,-4,-8,-2,-9,7,4,-8,-8,6,8,1,5,5,8,6,-6,10,3,10,-6,-3,-2,3,-7,-3,10,-5,3,3,-9,-9,-1,8,10,5,-8,6,-9,-10,-7,3,7,4,-9,1,8,-4,10,1,1,-8,4,9,-5,10,-1,3,3,8,-6,2,1,-3,10,-5,-1,2,-8,-9,-9,7,1,10,7,6,8,-7,3,-2,-5,-4,9,-2,-8,-2,-9,8,10,4,7,3,7,4,2,-5,-2,-3,-6,10,5,10,2,6,8,-9,1,8,-2,9,10,-8,4,7,-8,3,-10,9,-3,-4,-6,-5,3,-4,8,8,7,2,9,3,-6,-3,3,8,9,-6,3,10,5,-2,7,-2,-7,-8,-2,6,-9,-4,-2,-8,-2,-4,8,-2,7,-9,-3,-1,-3,-7,-1,-5,-1,-3,-3,4,9,-2,-1,3,8,2,-1,2,-1,-1,3,5,6,6,10,5,-7,8,3,6,1,5,-1,6,-7,8,-2,3,-10,-7,9,10,9,4,9,-5,7,2,6,-4,4,2,-3,-2,-4,-3,-1,8,3,3,-9,-2,-8,-6,2,-7,10,-10,2,7,-1,10,-5,3,10,10,4,-8,6,-7,4,3,-3,10,-7,3,9,-1,2,4,9,1,-8,8,-5,-2,-8,2,10,-7,8,6,-3,-2,10,-9,2,4,1,3,8,-2,4,8,-7,-2,6,2,4,6,-2,3,-5,3,1,-1,-5,7,-10,-3,1,1,5,9,-9,-3,10,-4,-5,2,-7,6,7,-9,-8,3,2,-7,7,-4,10,9,3,8,2,-3,2,-9,3,-7,4,10,-4,-1,-4,-9,-4,8,-2,7,-4,-5,10,-9,-3,5,6,3,4,-1,3,-7,-8,6,9,6,-4,4,-4,-8,-9,6,8,-3,5,3,4,7,-4,2,8,7,-8,5,-3,-8,-6,6,-4,-8,-5,-1,10,-8,10,-6,-9,-10,5,6,-2,10,1,-2,7,7,1,-8,3,5,-8,-4,7,4,3,10,6,-3,-6,-3,-5,4,6,8,9,-7,-6,4,6,3,-9,3,3,-4,1,1,-8,3,-8,-5,4,-6,2,-4,-9,8,-10,-3,8,-1,3,-6,-8,6,10,4,3,6,9,6,7,-4,-6,1,4,-3,-5,-9,8,10,9,3,2,-9,-9,9,-8,4,-9,8,-6,-10,9,-5,-7,6,9,-7,-1,1,9,8,2,1,-7,-7,-9,-6,-8,-5,4,-10,1,3,4,-3,-6,2,7,3,2,8,9,-10,-3,-4,6,-1,1,-2,9,-8,8,-5,3,10,-8,-9,-2,-3,-5,3,1,2,-9,-7,-10,5,4,7,-10,7,3,6,-4,-10,8,-2,-9,-10,-9,-7,3,10,-2,9,2,-1,-9,-2,-5,-3,8,-1,2,-5,10,3,-4,5,10,9,7,10,-6,-10,-7,-6,-2,3,-10,-6,-8,6,-2,9,2,-7,-7,-6,9,6,10,-2,8,-4,-2,9,-9,-4,-5,-6,-1,5,-10,-3,-6,7,-8,6,-4,4,-5,8,7,7,-6,-8,-6,7,5,-4,-6,7,-8,1,7,10,8,6,-1,-7,7,-6,-10,6,-2,6,-1,-3,8,-3,-1,7,-10,-7,5,7,-9,5,-5,-5,-3,-4,-4,5,5,6,-10,7,3,8,8,-2,-8,6,-9,-10,-10,7,1,5,-8,2,-2,-8,3,-5,-3,7,5,7,-4,6,-1,-9,3,-8,3,-10,1,1,4,-6,-6,-10,-8,-5,-2,-8,4,-5,1,1,-7,10,9,-5,-9,1,6,6,-6,8,-4,3,4,-6], dtype = "int16")#candidate|3034|(2340,)|const|int16
call_3032 = relay.TupleGetItem(func_1644_call(relay.reshape(var_3033.astype('float32'), [14, 1, 6]), relay.reshape(const_3034.astype('int16'), [2340,]), ), 0)
call_3035 = relay.TupleGetItem(func_1647_call(relay.reshape(var_3033.astype('float32'), [14, 1, 6]), relay.reshape(const_3034.astype('int16'), [2340,]), ), 0)
func_2895_call = mod.get_global_var('func_2895')
func_2897_call = mutated_mod.get_global_var('func_2897')
call_3040 = relay.TupleGetItem(func_2895_call(), 1)
call_3041 = relay.TupleGetItem(func_2897_call(), 1)
func_239_call = mod.get_global_var('func_239')
func_242_call = mutated_mod.get_global_var('func_242')
var_3045 = relay.var("var_3045", dtype = "int64", shape = (432,))#candidate|3045|(432,)|var|int64
call_3044 = relay.TupleGetItem(func_239_call(relay.reshape(var_3045.astype('int64'), [6, 6, 12]), relay.reshape(var_3045.astype('int64'), [6, 6, 12]), ), 0)
call_3046 = relay.TupleGetItem(func_242_call(relay.reshape(var_3045.astype('int64'), [6, 6, 12]), relay.reshape(var_3045.astype('int64'), [6, 6, 12]), ), 0)
func_1587_call = mod.get_global_var('func_1587')
func_1592_call = mutated_mod.get_global_var('func_1592')
const_3053 = relay.const(8, dtype = "int16")#candidate|3053|()|const|int16
var_3054 = relay.var("var_3054", dtype = "int16", shape = (45, 2))#candidate|3054|(45, 2)|var|int16
call_3052 = relay.TupleGetItem(func_1587_call(relay.reshape(const_3053.astype('int16'), []), relay.reshape(var_3054.astype('int16'), [15, 1, 6]), relay.reshape(call_3044.astype('int64'), [108, 4]), ), 2)
call_3055 = relay.TupleGetItem(func_1592_call(relay.reshape(const_3053.astype('int16'), []), relay.reshape(var_3054.astype('int16'), [15, 1, 6]), relay.reshape(call_3044.astype('int64'), [108, 4]), ), 2)
func_2663_call = mod.get_global_var('func_2663')
func_2666_call = mutated_mod.get_global_var('func_2666')
const_3063 = relay.const([2,8,-3,10,-2,1,7,4,8,4,-7,-3,8,10,1,5,-1,-3,-5,2,-10,-1,-8,-8,-5,10,-9,-6,-3,10,2,-7,-10,9,3,-5,4,-2,1,1,-4,-9,-7,1,3,-4,-9,-8,-3,-6,-10,-1,-9,9,3,-5,4,-2,-8,1,-4,-6,7,-2,5,-9,1,1,3,9,1,-2,9,-6,-5,-10,-1,4,4,-8,-5,4,-7,7,5,3,-1,9,-9,1,-1,4,1,9,5,-2,4,-8,1,10,-1,-1,10,-6,-4,-2,10,-4,8,-6,-1,-5,6,-6,1,4,9,-6,-5,7,-9,-4,-8,10,2,-9,4,-7,-9,9,9,2,7,8,-10,1,3,-10,4,7,8,10,-9,-4,2,-6,7,10,6,7,-2,-7,4,7,9,-7,-7,-1,-7,-5,-8,-1,-9,-10,10,10,6,6,7,1,7,-7,6,-1,4,-2,-8,-9,6,1,5,-8,3,10,-9,-7,8,9,3,6,7,-10,-3,-2,-6,-4,6,-1,-8,-10,3,-1,3,-4,-1,4,8,-5,-2,-9,1,1,-5,-8,-5,-10,-4,-9,1,3,-4,2,-10,-3,5,3,5,-3,8,3,-8,4,-4,-10,8,8,2,-4,-10,-7,8,1,3,4,-5,-9,-2,8,-7,2,4,9,-4,10,-9,7,4,1,-3,-3,1,-3,6,-10,10,2,4,3,2,9,8,-1,5,-4,-6,-5,10,2,9,-2,-4,6,4,3,1,-1,10,-5,-1,-1,7,-4,6,-4,-7,-6,1,-10,-1,4,7,-5,5,-9,-9,3,-8,5,-4,1,-7,4,-8,4,-9,3,4,-10,8,-7,-2,4,-1,6,-10,-7,-5,-5,-7,-4,9,-2,-5,-6,-4,3], dtype = "uint8")#candidate|3063|(336,)|const|uint8
call_3062 = relay.TupleGetItem(func_2663_call(relay.reshape(const_3063.astype('uint8'), [2, 168])), 4)
call_3064 = relay.TupleGetItem(func_2666_call(relay.reshape(const_3063.astype('uint8'), [2, 168])), 4)
output = relay.Tuple([bop_3026,call_3032,var_3033,const_3034,call_3040,call_3044,var_3045,call_3052,const_3053,var_3054,call_3062,const_3063,])
output2 = relay.Tuple([bop_3026,call_3035,var_3033,const_3034,call_3041,call_3046,var_3045,call_3055,const_3053,var_3054,call_3064,const_3063,])
func_3067 = relay.Function([var_3024,var_3033,var_3045,var_3054,], output)
mod['func_3067'] = func_3067
mod = relay.transform.InferType()(mod)
mutated_mod['func_3067'] = func_3067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3067_call = mutated_mod.get_global_var('func_3067')
var_3069 = relay.var("var_3069", dtype = "float64", shape = (12, 6, 9))#candidate|3069|(12, 6, 9)|var|float64
var_3070 = relay.var("var_3070", dtype = "float32", shape = (84,))#candidate|3070|(84,)|var|float32
var_3071 = relay.var("var_3071", dtype = "int64", shape = (432,))#candidate|3071|(432,)|var|int64
var_3072 = relay.var("var_3072", dtype = "int16", shape = (45, 2))#candidate|3072|(45, 2)|var|int16
call_3068 = func_3067_call(var_3069,var_3070,var_3071,var_3072,)
output = call_3068
func_3073 = relay.Function([var_3069,var_3070,var_3071,var_3072,], output)
mutated_mod['func_3073'] = func_3073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_3098 = func_2981_call()
call_3099 = func_2981_call()
uop_3102 = relay.log2(call_3098.astype('float64')) # shape=(2340,)
uop_3104 = relay.log2(call_3099.astype('float64')) # shape=(2340,)
bop_3106 = relay.greater(uop_3102.astype('bool'), relay.reshape(call_3098.astype('bool'), relay.shape_of(uop_3102))) # shape=(2340,)
bop_3109 = relay.greater(uop_3104.astype('bool'), relay.reshape(call_3099.astype('bool'), relay.shape_of(uop_3104))) # shape=(2340,)
func_2796_call = mod.get_global_var('func_2796')
func_2799_call = mutated_mod.get_global_var('func_2799')
var_3112 = relay.var("var_3112", dtype = "float64", shape = (2160,))#candidate|3112|(2160,)|var|float64
call_3111 = func_2796_call(relay.reshape(var_3112.astype('float64'), [12, 15, 12]))
call_3113 = func_2796_call(relay.reshape(var_3112.astype('float64'), [12, 15, 12]))
func_1587_call = mod.get_global_var('func_1587')
func_1592_call = mutated_mod.get_global_var('func_1592')
var_3120 = relay.var("var_3120", dtype = "int16", shape = ())#candidate|3120|()|var|int16
const_3121 = relay.const([[9,-8,-7,-9,2,7,8,9,4,-3,-3,-3,-8,-2,2,-3,-8,-7,-5,2,-6,5,-7,-5,10,-1,2,2,2,6,4,2,8,6,8,1,9,7,10,8,-1,-3,-4,-4,-8,10,-8,3,4,1,7,5,8,5,-5,8,-3,10,5,-4,4,5,6,2,-7,-9,5,-4,5,2,2,5,-10,-3,-1,-10,-10,-9,-2,4,5,6,9,-4,-1,6,6,-9,8,-5]], dtype = "int16")#candidate|3121|(1, 90)|const|int16
var_3122 = relay.var("var_3122", dtype = "int64", shape = (432,))#candidate|3122|(432,)|var|int64
call_3119 = relay.TupleGetItem(func_1587_call(relay.reshape(var_3120.astype('int16'), []), relay.reshape(const_3121.astype('int16'), [15, 1, 6]), relay.reshape(var_3122.astype('int64'), [108, 4]), ), 2)
call_3123 = relay.TupleGetItem(func_1592_call(relay.reshape(var_3120.astype('int16'), []), relay.reshape(const_3121.astype('int16'), [15, 1, 6]), relay.reshape(var_3122.astype('int64'), [108, 4]), ), 2)
func_1923_call = mod.get_global_var('func_1923')
func_1930_call = mutated_mod.get_global_var('func_1930')
var_3125 = relay.var("var_3125", dtype = "int64", shape = (105, 2))#candidate|3125|(105, 2)|var|int64
const_3126 = relay.const([1.603031,2.940671,-6.106725,-6.634812,-5.687367,-0.598517,-0.397420,8.967349,1.325612,5.396375,-8.534832,4.687256,0.635102,-8.774092,1.212081,7.107507,7.473814,-2.557150,9.949080,1.563812,-7.979261,-6.987348,7.960230,5.825752,-6.152792,7.639982,-6.319910,-0.423267,6.279275,-8.418486,2.047759,4.929708,-5.601725,-9.583239,-2.979755,3.411442,1.549246,-8.024782,-2.325704,-2.971609,-9.287170,8.581346,-4.415614,-4.252158,-4.697758,-7.386111,-6.143073,-9.985734,8.131175,-4.973420,6.267018,-8.054502,8.747285,2.725224,-4.661517,-7.164767,4.341984,5.162528,2.173475,-1.451533,-7.149189,7.287872,-0.296259,-5.113709,-9.839677,-2.828188,-8.360628,8.284462,3.861485,8.135004,-4.772580,-7.863567,-9.318821,9.506503,2.399104,4.139495,-9.839845,-0.619175,9.177613,-1.483756,6.449228,8.309359,-4.108801,7.910231], dtype = "float32")#candidate|3126|(84,)|const|float32
call_3124 = relay.TupleGetItem(func_1923_call(relay.reshape(var_3125.astype('int64'), [5, 7, 6]), relay.reshape(const_3126.astype('float32'), [84,]), relay.reshape(uop_3102.astype('int16'), [2340,]), relay.reshape(var_3120.astype('int16'), []), relay.reshape(var_3122.astype('int64'), [12, 36]), ), 4)
call_3127 = relay.TupleGetItem(func_1930_call(relay.reshape(var_3125.astype('int64'), [5, 7, 6]), relay.reshape(const_3126.astype('float32'), [84,]), relay.reshape(uop_3102.astype('int16'), [2340,]), relay.reshape(var_3120.astype('int16'), []), relay.reshape(var_3122.astype('int64'), [12, 36]), ), 4)
func_2036_call = mod.get_global_var('func_2036')
func_2039_call = mutated_mod.get_global_var('func_2039')
const_3129 = relay.const([7.671437,7.326804,-8.031615,-3.258058,7.793444,8.824387,-6.085577,3.669169,2.285298,-7.076285,-9.167635,-9.834737,5.239974,-4.548957,-2.951500,-9.427688,2.135785,5.167984,-3.207999,-6.611714,6.475827,-4.175638,4.860132,2.518358,-6.524788,-7.553547,-4.875118,-3.226811,7.880580,-9.031708,-2.229585,3.421634,4.559210,5.978843,5.619875,4.900095,8.047248,-9.670233,0.701813,7.294307,0.218791,-5.455586,-7.417512,-0.711200,0.366040,9.651499,4.385462,0.813463,0.543671,-1.244888,-3.791226,1.657519,0.893368,1.117561,0.758330,-2.360026,-9.699706,-5.024138,7.340732,-5.832231,-4.095712,-8.298545,-0.263091,-0.335221,-8.264913,-5.994381,-5.652429,-1.094996,0.062673,-0.255473,-9.471102,-6.758827,1.841238,2.554074,1.263286,8.059779,9.457289,6.600237,9.443151,0.305627,-2.553861,-0.569950,8.792323,-1.694282,-0.562270,3.398071,1.920779,9.629843,1.192854,4.733760,-4.480269,-2.154360,2.572765,-5.263247,9.846021,-8.540944,6.625555,-5.471755,-7.336677,-0.660234,2.640914,1.987665,8.444994,6.977773,-7.680346,4.628508,5.396345,-0.942708,8.801197,5.398580,6.935843,-4.224899,-6.588970,0.145293,9.711065,-7.004234,-8.422041,9.599003,-3.228303,-2.454474,1.898698,-3.312471,7.135477,1.972682,9.117091,8.807407,6.220340,0.745911,-0.932886,-7.408211,-9.474778,-4.933616,-3.281652,-3.642645,-3.538438,0.353825,-0.614093,-2.454807,8.292798,-9.562548,-3.441986,9.954171,8.260082,3.154343,6.637797,5.788725,-4.449960,-1.759122,8.824793,-2.779738,2.831678,-2.168820,4.067376,9.308548,-1.139038,7.168672,1.482727,-0.337830,9.885909,-2.151101,7.493428,8.554325,1.958891,8.334408,-4.830769,-5.653487,6.461498,-8.199250,1.452343,1.897219,8.577278,-7.969412,6.363018,-3.405533,4.005273,-8.667154,-4.889547,-4.235350,0.593449,0.014620], dtype = "float32")#candidate|3129|(180,)|const|float32
call_3128 = func_2036_call(relay.reshape(const_3129.astype('float32'), [4, 3, 15]))
call_3130 = func_2036_call(relay.reshape(const_3129.astype('float32'), [4, 3, 15]))
uop_3131 = relay.acosh(uop_3102.astype('float32')) # shape=(2340,)
uop_3133 = relay.acosh(uop_3104.astype('float32')) # shape=(2340,)
output = relay.Tuple([bop_3106,call_3111,var_3112,call_3119,var_3120,const_3121,var_3122,call_3124,var_3125,const_3126,call_3128,const_3129,uop_3131,])
output2 = relay.Tuple([bop_3109,call_3113,var_3112,call_3123,var_3120,const_3121,var_3122,call_3127,var_3125,const_3126,call_3130,const_3129,uop_3133,])
func_3135 = relay.Function([var_3112,var_3120,var_3122,var_3125,], output)
mod['func_3135'] = func_3135
mod = relay.transform.InferType()(mod)
mutated_mod['func_3135'] = func_3135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3135_call = mutated_mod.get_global_var('func_3135')
var_3137 = relay.var("var_3137", dtype = "float64", shape = (2160,))#candidate|3137|(2160,)|var|float64
var_3138 = relay.var("var_3138", dtype = "int16", shape = ())#candidate|3138|()|var|int16
var_3139 = relay.var("var_3139", dtype = "int64", shape = (432,))#candidate|3139|(432,)|var|int64
var_3140 = relay.var("var_3140", dtype = "int64", shape = (105, 2))#candidate|3140|(105, 2)|var|int64
call_3136 = func_3135_call(var_3137,var_3138,var_3139,var_3140,)
output = call_3136
func_3141 = relay.Function([var_3137,var_3138,var_3139,var_3140,], output)
mutated_mod['func_3141'] = func_3141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_3146 = func_2981_call()
call_3147 = func_2981_call()
uop_3167 = relay.asin(call_3146.astype('float64')) # shape=(2340,)
uop_3169 = relay.asin(call_3147.astype('float64')) # shape=(2340,)
output = uop_3167
output2 = uop_3169
func_3170 = relay.Function([], output)
mod['func_3170'] = func_3170
mod = relay.transform.InferType()(mod)
output = func_3170()
func_3171 = relay.Function([], output)
mutated_mod['func_3171'] = func_3171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2614_call = mod.get_global_var('func_2614')
func_2615_call = mutated_mod.get_global_var('func_2615')
call_3187 = func_2614_call()
call_3188 = func_2614_call()
output = relay.Tuple([call_3187,])
output2 = relay.Tuple([call_3188,])
func_3198 = relay.Function([], output)
mod['func_3198'] = func_3198
mod = relay.transform.InferType()(mod)
mutated_mod['func_3198'] = func_3198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3198_call = mutated_mod.get_global_var('func_3198')
call_3199 = func_3198_call()
output = call_3199
func_3200 = relay.Function([], output)
mutated_mod['func_3200'] = func_3200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3198_call = mod.get_global_var('func_3198')
func_3200_call = mutated_mod.get_global_var('func_3200')
call_3210 = relay.TupleGetItem(func_3198_call(), 0)
call_3211 = relay.TupleGetItem(func_3200_call(), 0)
output = call_3210
output2 = call_3211
func_3215 = relay.Function([], output)
mod['func_3215'] = func_3215
mod = relay.transform.InferType()(mod)
output = func_3215()
func_3216 = relay.Function([], output)
mutated_mod['func_3216'] = func_3216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3198_call = mod.get_global_var('func_3198')
func_3200_call = mutated_mod.get_global_var('func_3200')
call_3225 = relay.TupleGetItem(func_3198_call(), 0)
call_3226 = relay.TupleGetItem(func_3200_call(), 0)
uop_3231 = relay.tan(call_3225.astype('float32')) # shape=(12, 15, 12)
uop_3233 = relay.tan(call_3226.astype('float32')) # shape=(12, 15, 12)
func_2134_call = mod.get_global_var('func_2134')
func_2140_call = mutated_mod.get_global_var('func_2140')
const_3249 = relay.const([-4,10,-10,-2,-9,-10,7,-5,-5,-2,3,6,-4,-5,10,6,8,4,8,-4,-2,-8,-2,7,-7,10,-10,-10,-7,-5,-4,-3,-9,-10,-2,4,1,-6,-6,-2,-9,5,-1,6,-9,-6,-4,-5,7,-1,-2,-4,8,7,2,9,2,-3,-8,-10,1,-9,-7,9,-10,3,-7,6,-9,-9,2,4,-9,-8,7,-3,-6,-5,-9,-8,-7,2,10,-9,-10,-1,4,8,-2,10,4,10,-8,-4,-9,7,-3,-2,-6,3,-7,10,-10,5,-5,-3,-10,1,-8,-6,-7,-5,-3,-5,-5,-7,-5,-6,-5,8,7,9,6,7,6,3,8,6,-4,-2,-9,3,-6,-8,-9,-3,10,6,-1,-2,-8,-10,10,10,7,2,1,-10,4,9,8,10,5,6,8,-3,-10,5,-1,5,-6,-3,-4,-3,-5,-10,8,1,-5,-9,4,1,7,5,10,-5,8,-1,-5,9,-1,-10,-10,-10,7,-7,-1,6,-4,-5,2,-9,10,-1,6,-4,10,6,7,2,-7,-7,-9,8,4,8,-5,-4,-6,-1,-6,1,-1,5,-5,1,8,-2,-9,-10,4,-8,-4,-6,-1,5,4,-3,-5,10,-5,-3,9,10,6,2,10,10,6,6,-5,-5,9,1,-4,7,1,2,7,-7,-6,4,-1,-9,10,-4,-8,-3,7,-2,-4,2,-9,5,-8,9,-5,9,-7,3,-6,4,8,-9,-1,5,10,-1,2,6,-10,6,-10,-1,5,-8,-5,-5,10,-7,6,6,-7,-6,-5,-3,-9,-2,5,-8,9,3,6,8,-3,9,-5,7,2,-3,8,-3,4,-6,9,3,-9,6,4,3,7,9,7,-3,1,-5,3,-8,3,10,-9,4,9,3,-1,3], dtype = "uint8")#candidate|3249|(336,)|const|uint8
const_3250 = relay.const([-2.659583,0.249008,-2.402822,0.898110,-7.277544,-5.865843,4.171298,9.228860,5.309232,-0.707139,-0.817029,-5.056611,-8.049050,-4.456024,8.996316,7.379632,-1.558731,3.531009,-9.352762,3.225669,8.424476,-8.274524,9.197644,7.280050,-5.256018,-3.470850,7.454937,7.039501,-3.849829,6.463354,9.559627,7.011381,-9.428164,-0.316153,-9.596900,9.835803,-3.741253,-3.584509,4.442764,-8.195725,5.770457,9.332792,1.552135,2.924192,-4.896841,-6.127569,4.249898,-3.213647,-6.640441,-6.773561,-0.419338,-5.184313,4.386639,-9.121861,8.549306,-2.327521,-6.918817,5.074559,-6.015911,6.092567,-0.016816,1.111176,4.936619,6.939185,-0.330768,-1.754082,0.582582,1.098905,-9.240674,7.643392,-5.089928,-9.828634,8.590446,5.470642,-7.807808,5.879827,-1.025125,-7.967386,-6.691329,6.738348,5.046338,5.712504,-0.337371,1.767624], dtype = "float32")#candidate|3250|(84,)|const|float32
var_3251 = relay.var("var_3251", dtype = "int16", shape = (2340, 1))#candidate|3251|(2340, 1)|var|int16
call_3248 = relay.TupleGetItem(func_2134_call(relay.reshape(const_3249.astype('uint8'), [6, 7, 8]), relay.reshape(const_3249.astype('uint8'), [6, 7, 8]), relay.reshape(const_3250.astype('float32'), [84,]), relay.reshape(var_3251.astype('int16'), [2340,]), ), 0)
call_3252 = relay.TupleGetItem(func_2140_call(relay.reshape(const_3249.astype('uint8'), [6, 7, 8]), relay.reshape(const_3249.astype('uint8'), [6, 7, 8]), relay.reshape(const_3250.astype('float32'), [84,]), relay.reshape(var_3251.astype('int16'), [2340,]), ), 0)
output = relay.Tuple([uop_3231,call_3248,const_3249,const_3250,var_3251,])
output2 = relay.Tuple([uop_3233,call_3252,const_3249,const_3250,var_3251,])
func_3262 = relay.Function([var_3251,], output)
mod['func_3262'] = func_3262
mod = relay.transform.InferType()(mod)
mutated_mod['func_3262'] = func_3262
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3263 = relay.var("var_3263", dtype = "int16", shape = (2340, 1))#candidate|3263|(2340, 1)|var|int16
func_3262_call = mutated_mod.get_global_var('func_3262')
call_3264 = func_3262_call(var_3263)
output = call_3264
func_3265 = relay.Function([var_3263], output)
mutated_mod['func_3265'] = func_3265
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3269 = relay.var("var_3269", dtype = "float64", shape = (9, 13, 1))#candidate|3269|(9, 13, 1)|var|float64
uop_3270 = relay.asinh(var_3269.astype('float64')) # shape=(9, 13, 1)
output = relay.Tuple([uop_3270,])
output2 = relay.Tuple([uop_3270,])
func_3285 = relay.Function([var_3269,], output)
mod['func_3285'] = func_3285
mod = relay.transform.InferType()(mod)
var_3286 = relay.var("var_3286", dtype = "float64", shape = (9, 13, 1))#candidate|3286|(9, 13, 1)|var|float64
output = func_3285(var_3286)
func_3287 = relay.Function([var_3286], output)
mutated_mod['func_3287'] = func_3287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_3338 = func_2981_call()
call_3339 = func_2981_call()
output = relay.Tuple([call_3338,])
output2 = relay.Tuple([call_3339,])
func_3341 = relay.Function([], output)
mod['func_3341'] = func_3341
mod = relay.transform.InferType()(mod)
output = func_3341()
func_3342 = relay.Function([], output)
mutated_mod['func_3342'] = func_3342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_3349 = relay.TupleGetItem(func_2609_call(), 1)
call_3350 = relay.TupleGetItem(func_2611_call(), 1)
output = call_3349
output2 = call_3350
func_3355 = relay.Function([], output)
mod['func_3355'] = func_3355
mod = relay.transform.InferType()(mod)
mutated_mod['func_3355'] = func_3355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3355_call = mutated_mod.get_global_var('func_3355')
call_3356 = func_3355_call()
output = call_3356
func_3357 = relay.Function([], output)
mutated_mod['func_3357'] = func_3357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2895_call = mod.get_global_var('func_2895')
func_2897_call = mutated_mod.get_global_var('func_2897')
call_3390 = relay.TupleGetItem(func_2895_call(), 1)
call_3391 = relay.TupleGetItem(func_2897_call(), 1)
output = call_3390
output2 = call_3391
func_3406 = relay.Function([], output)
mod['func_3406'] = func_3406
mod = relay.transform.InferType()(mod)
output = func_3406()
func_3407 = relay.Function([], output)
mutated_mod['func_3407'] = func_3407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3341_call = mod.get_global_var('func_3341')
func_3342_call = mutated_mod.get_global_var('func_3342')
call_3411 = relay.TupleGetItem(func_3341_call(), 0)
call_3412 = relay.TupleGetItem(func_3342_call(), 0)
func_894_call = mod.get_global_var('func_894')
func_896_call = mutated_mod.get_global_var('func_896')
call_3413 = relay.TupleGetItem(func_894_call(relay.reshape(call_3411.astype('int16'), [15, 12, 13])), 1)
call_3414 = relay.TupleGetItem(func_896_call(relay.reshape(call_3411.astype('int16'), [15, 12, 13])), 1)
output = relay.Tuple([call_3411,call_3413,])
output2 = relay.Tuple([call_3412,call_3414,])
func_3420 = relay.Function([], output)
mod['func_3420'] = func_3420
mod = relay.transform.InferType()(mod)
mutated_mod['func_3420'] = func_3420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3420_call = mutated_mod.get_global_var('func_3420')
call_3421 = func_3420_call()
output = call_3421
func_3422 = relay.Function([], output)
mutated_mod['func_3422'] = func_3422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3198_call = mod.get_global_var('func_3198')
func_3200_call = mutated_mod.get_global_var('func_3200')
call_3480 = relay.TupleGetItem(func_3198_call(), 0)
call_3481 = relay.TupleGetItem(func_3200_call(), 0)
func_714_call = mod.get_global_var('func_714')
func_717_call = mutated_mod.get_global_var('func_717')
var_3484 = relay.var("var_3484", dtype = "uint16", shape = (672,))#candidate|3484|(672,)|var|uint16
call_3483 = relay.TupleGetItem(func_714_call(relay.reshape(var_3484.astype('uint16'), [7, 6, 16]), relay.reshape(var_3484.astype('uint16'), [7, 6, 16]), ), 1)
call_3485 = relay.TupleGetItem(func_717_call(relay.reshape(var_3484.astype('uint16'), [7, 6, 16]), relay.reshape(var_3484.astype('uint16'), [7, 6, 16]), ), 1)
output = relay.Tuple([call_3480,call_3483,var_3484,])
output2 = relay.Tuple([call_3481,call_3485,var_3484,])
func_3496 = relay.Function([var_3484,], output)
mod['func_3496'] = func_3496
mod = relay.transform.InferType()(mod)
mutated_mod['func_3496'] = func_3496
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3497 = relay.var("var_3497", dtype = "uint16", shape = (672,))#candidate|3497|(672,)|var|uint16
func_3496_call = mutated_mod.get_global_var('func_3496')
call_3498 = func_3496_call(var_3497)
output = call_3498
func_3499 = relay.Function([var_3497], output)
mutated_mod['func_3499'] = func_3499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3341_call = mod.get_global_var('func_3341')
func_3342_call = mutated_mod.get_global_var('func_3342')
call_3547 = relay.TupleGetItem(func_3341_call(), 0)
call_3548 = relay.TupleGetItem(func_3342_call(), 0)
const_3579 = relay.const([6,4,-10,10,-8,6,5,6,3,6,-6,6,-2,-1,1,-8,-5,10,5,-7,-2,6,6,1,-10,1,-7,-3,8,-8,6,-7,-10,-6,9,-9,6,-8,-9,-4,-5,-6,4,1,-3,-10,-9,-2,5,6,-1,5,-2,2,4,-2,-10,1,-8,-7,-5,4,5,-5,-3,-6,-5,4,6,1,-1,-8,1,-7,4,-4,3,5,1,10,-10,-10,7,-2,-7,2,-8,-1,10,10,3,4,-1,4,10,7,10,5,-1,-2,-2,8,-3,-10,6,6,5,3,-1,-1,-3,-1,6,-10,-4,5,7,7,2,-2,9,-8,-1,2,10,-3,2,3,1,-4,10,-1,5,-6,7,-5,-9,1,-4,2,-6,6,-2,-7,4,7,3,10,8,-4,7,1,10,6,7,-7,-6,3,2,10,-1,2,7,-1,10,-1,-5,-3,-4,-9,10,4,-1,-3,-4,10,9,1,-6,2,10,-2,-4,9,5,-1,-6,-10,-9,-9,-7,-2,3,-4,-8,2,10,2,-1,3,1,-3,-8,-5,10,-4,4,-5,9,-3,-8,4,1,3,9,9,10,8,-7,-7,-6,3,-4,7,10,10,-7,3,4,-9,1,-4,2,-1,6,9,6,2,-10,5,8,-7,4,2,-7,-3,-3,-1,1,-7,9,-9,-5,9,1,-7,-1,-4,6,5,1,4,-4,-8,-7,4,-10,-5,5,2,7,-4,8,3,8,-7,-5,2,6,-6,6,10,-2,-10,-8,2,-4,4,-6,5,-5,2,3,-9,5,-1,7,4,-8,-6,-7,-2,5,-4,-4,-7,-1,-9,5,1,-7,-1,-8,2,1,4,8,-10,3,6,-3,6,-5,8,7,2,-4,8,9,-9,10,8,-1,-3,-4,-2,5,1,-7,10,10,7,4,-7,-7,-5,10,-7,4,3,-10,-5,5,2,6,-5,5,-10,9,-4,-4,5,2,2,3,-4,-4,-7,6,10,-5,-6,-9,9,-4,6,2,9,-5,-2,10,-3,-6,1,2,-5,8,-5,-10,5,-9,-1,2,7,-2,-8,-6,7,1,-5,1,8,-3,-4,-9,-6,-8,1,6,-9,-6,3,6,-5,7,-10,2,-8,2,8,1,-2,-1,-2,1,-7,6,9,9,-9,-6,5,-6,4,6,-1,-6,-9,6,-5,-1,-3,2,9,8,8,-8,3,-7,-5,-9,-2,-1,-3,10,-3,-2,-8,-8,6,8,9,8,-3,7,7,-4,2,-10,10,4,-3,-10,1,-9,-4,-2,4,-5,6,-2,-7,-4,2,3,-3,7,-3,6,-7,-2,3,-3,5,-3,7,6,4,4,-3,9,-6,-4,5,3,-9,10,1,9,1,-9,-9,-4,-6,-8,7,-8,6,-2,-4,-3,-1,4,-8,2,-7,10,7,-9,-4,3,-6,6,3,-5,4,1,-2,-1,-8,-10,5,10,-5,6,-8,3,-2,-8,-7,-3,2,8,8,4,2,2,-5,-1,1,-2,-8,5,-5,4,-7,-5,-10,-2,-4,-4,-4,6,-9,2,4,-3,10,-10,-2,-9,1,9,-8,-10,9,1,-2,-5,-3,5,10,2,3,-8,-6,3,2,-9,-4,5,4,-7,4,-7,8,6,9,1,-10,6,-6,5,2,-8,-2,-10,-10,3,10,1,-4,-5,7,-5,-4,4,2,6,3,10,9,-4,-8,3,6,5,4,-3,7,7,8,1,-9,4,5,9,-8,4,-9,4,-2,-7,3,7,-9,3,-4,-7,-3,8,7,-1,2,10,2,-1,7,3,10,-1,-4,6,9,4,-4,-8,-10,7,4,-5,5,3,4,1,-7,2,-7,1,2,7,-8,1,6,1,-7,-6,-2,6,6,1,2,-7,2,4,-3,-3,8,10,2,-1,8,3,8,-8,-7,-10,-2,7,-4,1,-3,-10,-6,2,2,9,3,-3,-1,7,-10,6,-5,10,-3,-7,-3,7,9,-9,5,2,10,-10,8,9,-6,2,8,-1,10,9,-6,5,6,-6,-2,8,8,2,-5,4,6,3,7,-4,3,-2,-10,4,-1,-6,3,-4,1,-6,5,-10,-5,4,8,-3,-1,-9,2,-8,8,-7,-7,-3,-4,-9,-9,1,-5,-8,-3,5,5,-5,-9,-3,7,9,8,-6,-9,3,-5,3,-7,4,-1,-4,-3,5,-3,1,6,-8,10,-9,1,8,-4,8,4,-3,-1,3,-9,-5,7,-4,6,9,8,-6,10,8,8,7,-8,-5,9,-2,-6,-3,-3,-8,-1,-4,9,-9,-5,-4,3,-3,4,-1,-7,3,9,10,3,8,7,4,-1,4,9,9,9,-4,-3,8,-7,-7,5,6,-5,1,-6,9,-7,5,1,2,7,7,-1,4,-5,6,-6,9,9,-3,-6,-4,7,1,-3,-10,-8,-2,1,9,-7,-8,-9,4,9,-3,-2,-8,-6,7,-1,-2,5,10,-2,-3,-5,-1,10,-10,-3,-3,-2,1,1,9,-4,-5,-7,-6,5,7,2,4,-3,2,9,-8,10,1,9,5,1,2,-6,-6,-10,9,-10,4,7,-9,3,9,9,5,8,-1,2,6,4,9,4,5,-2,7,-7,8,-4,-3,5,-10,2,3,-7,-1,2,6,-7,9,-10,-9,-5,-8,3,1,-1,-2,-4,-6,7,-3,-7,-4,10,4,-4,-8,9,7,9,-10,10,-3,1,9,-7,7,-3,-8,8,4,4,-10,-10,-5,-4,-9,-8,-3,10,-9,4,10,-8,-10,-2,-8,-8,1,5,7,2,-8,-6,1,10,-4,-7,10,5,-4,4,-3,-2,8,-10,-1,-1,-5,7,-5,-6,-1,-5,8,1,-9,4,5,6,-5,10,-1,2,-10,-1,-6,-5,-2,8,-4,-2,3,-5,-3,-4,9,4,-7,-5,-7,-3,5,-2,2,-7,-10,-9,8,-1,-5,1,1,6,-4,-8,-7,-8,10,-9,9,-9,6,1,-2,-5,9,2,3,-9,-9,2,7,8,7,2,-1,6,-10,1,1,-10,-4,-2,2,-8,8,7,-7,5,-10,3,-9,-1,7,-3,-8,9,-9,10,2,-2,-7,10,-4,9,3,7,2,2,-10,10,-8,-1,-1,8,-9,8,9,-10,-4,-9,3,-8,2,6,5,-9,6,7,10,-1,-6,-7,-6,10,-7,4,2,7,-3,7,1,-10,7,4,-5,-8,-3,-7,-1,-8,3,10,-5,-3,-4,-8,-8,3,8,-5,-2,3,8,-6,-5,9,6,5,-8,4,1,-6,10,6,-7,-8,-4,8,-1,10,9,-5,-9,-10,9,9,-6,8,-6,-4,5,-6,3,2,-10,-1,4,-6,6,-9,10,6,-7,-1,-1,10,7,7,-1,5,3,-10,9,9,-4,10,-8,-1,3,10,7,9,5,5,7,7,3,9,3,-7,8,-2,-6,-1,-5,2,-10,-5,9,1,7,7,5,-3,-6,7,2,10,2,-6,4,-8,-10,-9,10,-4,8,-10,1,-1,-6,9,-8,5,-2,-9,-10,1,8,9,-10,9,-8,10,2,4,-2,3,4,1,8,10,-5,-8,-1,-4,-1,10,2,7,-3,-10,-6,4,1,-5,3,1,-6,-2,-7,9,-1,-5,1,7,-5,-9,-9,10,-8,3,10,-3,2,-5,-4,-6,5,8,-5,4,-1,10,7,2,-3,-1,10,9,-9,-10,9,8,9,-4,10,-4,-10,-10,2,-2,-10,8,-7,1,-9,1,-9,6,6,2,-7,-6,9,-3,2,6,10,-10,-10,3,4,-9,-2,8,-6,-5,-7,9,-6,8,10,10,9,7,2,9,3,-8,-5,-4,-9,2,-9,-1,-5,-5,-5,5,6,3,1,4,10,-10,10,-5,-4,-2,-10,-7,6,-2,-6,4,10,-2,9,-4,9,5,-9,-6,-7,-5,5,-4,6,1,4,6,5,2,3,5,3,9,8,4,-6,-4,2,2,-5,-10,10,-10,3,1,1,9,-5,5,-6,1,-9,4,5,7,-1,-9,-2,-8,-5,2,4,-10,-10,4,-4,-9,-2,-4,9,8,-8,-2,10,-9,10,10,3,-3,-3,-10,-4,1,3,4,7,-3,3,-9,-7,5,-10,-9,5,9,-1,-6,-9,2,4,-4,-1,8,-2,4,-5,-7,6,-1,10,-10,8,-7,-4,-9,-6,-1,-1,1,-8,-5,8,10,-9,-6,1,-1,3,-8,-10,7,-3,5,7,-9,2,10,5,-5,-10,-5,-8,-2,6,-8,-10,-4,-5,-6,6,-7,-9,-10,6,-1,8,-9,-4,-5,-4,9,-10,-4,-4,7,-6,-8,-3,1,6,8,-10,8,2,4,-8,8,6,5,4,1,10,5,10,5,-10,9,1,-1,3,-7,-8,3,8,-7,-9,2,-8,3,5,-5,10,-6,-3,4,-2,-9,7,-8,9,9,4,9,10,-1,1,-1,-1,-4,4,10,-10,-10,-2,-3,-6,3,4,3,6,-9,1,8,9,-4,-9,-10,-7,7,1,-2,-10,8,-7,-8,-4,-7,-10,-4,-8,-1,7,5,4,-3,2,3,-10,-8,1,-7,-2,9,-3,1,3,8,5,-6,-5,-7,4,-9,-10,-1,-2,3,5,7,7,7,2,-2,9,8,-6,-3,5,-7,10,4,-8,-7,1,1,2,9,-5,10,8,-10,-3,9,6,2,5,7,7,8,-9,-5,7,6,-5,-8,6,-9,10,8,-5,-1,8,-6,3,4,-3,5,-3,3,-7,4,8,2,-3,-3,3,-1,-1,6,2,-8,-9,6,1,-3,-10,-2,10,6,6,-2,-3,-10,1,-10,7,8,10,9,3,10,9,-2,5,4,7,-10,10,-7,-7,-6,7,-10,9,-6,3,8,7,-3,-7,-8,3,-5,10,-6,10,-1,7,4,3,10,8,-10,-5,-9,-9,7,7,-5,-3,-3,-4,-2,8,-8,-5,-6,6,10,-10,6,-8,-1,4,-9,8,3,-6,4,-8,4,-1,-8,8,-10,7,-8,-8,9,7,-10,9,9,-8,-1,5,2,10,5,-8,-8,1,-1,5,1,-7,8,-6,-3,-2,-1,-4,7,2,1,4,-6,-5,4,-6,-3,7,1,10,8,-10,3,3,-5,-9,-7,-8,-10,2,3,8,-3,7,10,7,1,8,-9,-1,6,-5,-5,-7,-5,6,9,6,-10,-5,10,8,-7,-5,-7,-3,6,-7,-10,-3,-5,7,-4,-5,5,5,-10,-7,9,-5,8,-1,-7,-5,-5,4,-9,4,-3,8,-7,-3,5,-5,-4,1,8,6,10,-4,10,-5,-8,-2,5,9,4,10,4,4,-6,9,6,-1,7,-3,3,5,4,6,-9,3,7,-3,-9,-8,-1,-10,2,-5,-7,5,-4,-5,2,-2,-6,-6,-10,-3,-5,5,10,3,7,3,6,-5,-10,1,-2,5,-7,1,10,-6,7,-1,9,10,-1,9,1,-10,-6,5,5,6,-10,9,2,-3,9,7,7,3,8,-7,-9,2,-9,3,-6,6,-7,6,-2,-8,2,-10,-3,-10,8,2,6,3,2,1,-9,3,-4,5,7,-9,-1,1,6,8,1,-1,5,-4,4,-4,2,6,6,4,-7,6,3,-1,-9,3,9,6,-10,1,-6,4,2,-6,1,4,2,-5,7,2,-7,5,8,1,4,9,-9,-9,-3,1,-4,2,-5,1,-5,10,-9,-7,8,5,10,-1,-9,9,-5,7,-5,7,8,-4,10,-4,-10,-6,-8,10,4,-8,4,-6,8,-10,2,5,-5,2,2,4,4,-10,-10,-2,-4,1,8,8,-9,-10,-6,-1,-1,-8,-7,-5,-4,-5,7,-3,8,10,-9,1,-7,-9,6,-5,10,-2,-8,10,-3,-6,-10,1,1,3,10,-10,-7,-9,8,9,-9,-7,-9,-7,-1,3,4,-1,-7,-6,8,-3,4,7,-8,-2,-9,-4,-5,1,5,-9,-9,-3,3,-3,-5,8,-10,1,-3,-7,-1,1,3,4,-5,7,3,2,9,-1,-4,4,-3,-6,-10,-9,3,9,-1,3,7,-1,8,-8,-1,-3,-5,-10,4,7,8,-4,-7,8,5,-5,9,-3,-1,8,-8,-8,-8,3,6,-5,-7,7,10,-3,7,9,6,-5,-3,-1,-3,-3,-1,2,-8,4,-6,1,-6,-2,10,1,3,3,10,-6,4,4,8,3,-5,-3,-7,6,7,-10,-9,-5,6,8,-1,-9,-4,10,-10,-7,-9,-3,-3,4,7], dtype = "int16")#candidate|3579|(2340,)|const|int16
bop_3580 = relay.greater_equal(call_3547.astype('bool'), relay.reshape(const_3579.astype('bool'), relay.shape_of(call_3547))) # shape=(2340,)
bop_3583 = relay.greater_equal(call_3548.astype('bool'), relay.reshape(const_3579.astype('bool'), relay.shape_of(call_3548))) # shape=(2340,)
bop_3585 = relay.add(const_3579.astype('uint16'), relay.reshape(bop_3580.astype('uint16'), relay.shape_of(const_3579))) # shape=(2340,)
bop_3588 = relay.add(const_3579.astype('uint16'), relay.reshape(bop_3583.astype('uint16'), relay.shape_of(const_3579))) # shape=(2340,)
bop_3596 = relay.floor_divide(const_3579.astype('float64'), relay.reshape(call_3547.astype('float64'), relay.shape_of(const_3579))) # shape=(2340,)
bop_3599 = relay.floor_divide(const_3579.astype('float64'), relay.reshape(call_3548.astype('float64'), relay.shape_of(const_3579))) # shape=(2340,)
bop_3602 = relay.equal(const_3579.astype('bool'), relay.reshape(bop_3580.astype('bool'), relay.shape_of(const_3579))) # shape=(2340,)
bop_3605 = relay.equal(const_3579.astype('bool'), relay.reshape(bop_3583.astype('bool'), relay.shape_of(const_3579))) # shape=(2340,)
func_2764_call = mod.get_global_var('func_2764')
func_2766_call = mutated_mod.get_global_var('func_2766')
const_3609 = relay.const([[-6],[2],[6],[2],[-2],[3],[1],[-7],[-2],[-8],[-8],[7],[2],[6],[-8],[6],[3],[-5],[-5],[-7],[1],[8],[5],[-10],[6],[9],[-10],[2],[8],[3],[-6],[-9],[8],[10],[-10],[-2],[-8],[-4],[4],[1],[-3],[5],[-9],[-5],[-7],[-5],[9],[4],[8],[1],[-2],[1],[-1],[-2],[-9],[8],[5],[3],[-2],[-1],[9],[4],[9],[-5],[3],[-7],[7],[4],[2],[-7],[-10],[3],[8],[-9],[6],[-1],[-5],[-5],[6],[-3],[4],[-3],[-9],[2],[-4],[-2],[-6],[8],[-1],[-6],[7],[6],[-6],[-10],[8],[1],[-5],[-6],[-1],[6],[9],[-10],[1],[1],[-6],[-2],[8],[-9],[-8],[-7],[2],[2],[-2],[4],[9],[1],[-5],[5],[10],[1],[4],[-1],[1],[7],[8],[-8],[1],[10],[8],[-1],[3],[7],[2],[6],[-9],[-9],[10],[5],[9],[1],[-7],[-6],[8],[-4]], dtype = "int8")#candidate|3609|(144, 1)|const|int8
call_3608 = relay.TupleGetItem(func_2764_call(relay.reshape(const_3609.astype('int8'), [2, 72])), 1)
call_3610 = relay.TupleGetItem(func_2766_call(relay.reshape(const_3609.astype('int8'), [2, 72])), 1)
bop_3618 = relay.mod(bop_3596.astype('float64'), relay.reshape(bop_3602.astype('float64'), relay.shape_of(bop_3596))) # shape=(2340,)
bop_3621 = relay.mod(bop_3599.astype('float64'), relay.reshape(bop_3605.astype('float64'), relay.shape_of(bop_3599))) # shape=(2340,)
output = relay.Tuple([bop_3585,call_3608,const_3609,bop_3618,])
output2 = relay.Tuple([bop_3588,call_3610,const_3609,bop_3621,])
func_3627 = relay.Function([], output)
mod['func_3627'] = func_3627
mod = relay.transform.InferType()(mod)
output = func_3627()
func_3628 = relay.Function([], output)
mutated_mod['func_3628'] = func_3628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3420_call = mod.get_global_var('func_3420')
func_3422_call = mutated_mod.get_global_var('func_3422')
call_3651 = relay.TupleGetItem(func_3420_call(), 1)
call_3652 = relay.TupleGetItem(func_3422_call(), 1)
func_444_call = mod.get_global_var('func_444')
func_446_call = mutated_mod.get_global_var('func_446')
const_3675 = relay.const([9.166289,-6.847268,-4.416779,6.882251,-1.527433,-3.729151,-0.219688,-3.558552,6.121406,5.157491,8.234854,6.180846,-2.442486,7.535402,9.244237,-1.739934,7.858131,-7.314660,-8.259247,1.644190,2.508427,-1.023884,3.900632,7.292181,-8.225615,-7.906372,9.852487,6.344112,5.755926,7.500963,7.968741,8.153773,-3.695063,-6.554163,9.160235,-4.169799,7.065594,-9.377141,7.703404,-4.807336,-4.857677,7.431679,-9.790171,-5.876725,3.421954,-7.536799,5.052382,9.483112,0.222969,-0.274505,-1.024355,5.765135,6.048811,-1.403183,-2.475334,-1.466754,7.995033,-9.618211,-4.650201,9.300592,-9.076345,-6.818274,4.446541,-3.453878,-4.878823,2.704618,5.800903,-8.417068,-8.842904,8.954079,3.658734,-4.569912,7.275556,-8.507625,4.855863,-6.618535,2.000813,0.101838,-5.011238,-3.296197,3.925553,8.985278,-8.763386,0.621981,3.847473,9.016686,1.107293,9.069819,-6.218520,-8.880280,-8.242657,-9.366041,-5.306189,-2.345152,0.163927,5.725003,5.167996,7.122512,-2.796058,-5.751025,5.492950,9.802521,8.006460,8.482756,-5.819461,8.764150,-5.590880,7.899747,-1.849241,-8.153565,-2.336536,-9.146889,-5.792424,1.346034,-7.621341,-0.821623,-8.172329,-2.961062,2.521773,8.820475,-4.026217,-6.832758,-9.781772,3.609333,8.660668,-5.756619,1.360307,5.602373,-5.657874,-1.060963,6.892352,-0.008710,-9.990349,9.092563,2.360426,-1.190697,-9.051403,-0.037465,-0.171316,1.078107,1.951591,3.284911,-5.742455,6.626651,0.985058,5.118767,-8.183163,-9.235096,1.569638,-2.936010,3.030722,-7.749305,5.128519,-5.553894,-1.352348,-8.998937,-2.058357,-4.011998,-3.559917,9.754726,8.148459,-8.603159,8.379333,8.398954,3.369739,4.438952,-5.307536,-0.556340,-8.843406,2.878513,-4.020958,4.538650,1.047981,1.117318,3.797409,5.110323,5.742463,-4.645155,5.198467,7.862364,-8.642696,1.148209,-7.453638,-2.888322,-3.245477,9.176580,9.911897,9.700480,-1.259843,0.154265,-7.484859,2.793826,-9.890836,-3.406758,7.337680,-6.083719,-7.303029,-0.816264,3.334181,3.811911,-1.697576,-9.513779,2.822498,-3.992354,-1.629467,6.053704,-0.217922,9.972518], dtype = "float32")#candidate|3675|(208,)|const|float32
call_3674 = func_444_call(relay.reshape(const_3675.astype('float32'), [13, 2, 8]))
call_3676 = func_444_call(relay.reshape(const_3675.astype('float32'), [13, 2, 8]))
output = relay.Tuple([call_3651,call_3674,const_3675,])
output2 = relay.Tuple([call_3652,call_3676,const_3675,])
func_3680 = relay.Function([], output)
mod['func_3680'] = func_3680
mod = relay.transform.InferType()(mod)
output = func_3680()
func_3681 = relay.Function([], output)
mutated_mod['func_3681'] = func_3681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3215_call = mod.get_global_var('func_3215')
func_3216_call = mutated_mod.get_global_var('func_3216')
call_3687 = func_3215_call()
call_3688 = func_3215_call()
output = relay.Tuple([call_3687,])
output2 = relay.Tuple([call_3688,])
func_3742 = relay.Function([], output)
mod['func_3742'] = func_3742
mod = relay.transform.InferType()(mod)
mutated_mod['func_3742'] = func_3742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mutated_mod.get_global_var('func_3742')
call_3743 = func_3742_call()
output = call_3743
func_3744 = relay.Function([], output)
mutated_mod['func_3744'] = func_3744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3341_call = mod.get_global_var('func_3341')
func_3342_call = mutated_mod.get_global_var('func_3342')
call_3764 = relay.TupleGetItem(func_3341_call(), 0)
call_3765 = relay.TupleGetItem(func_3342_call(), 0)
uop_3784 = relay.sin(call_3764.astype('float64')) # shape=(2340,)
uop_3786 = relay.sin(call_3765.astype('float64')) # shape=(2340,)
output = uop_3784
output2 = uop_3786
func_3787 = relay.Function([], output)
mod['func_3787'] = func_3787
mod = relay.transform.InferType()(mod)
mutated_mod['func_3787'] = func_3787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3787_call = mutated_mod.get_global_var('func_3787')
call_3788 = func_3787_call()
output = call_3788
func_3789 = relay.Function([], output)
mutated_mod['func_3789'] = func_3789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3627_call = mod.get_global_var('func_3627')
func_3628_call = mutated_mod.get_global_var('func_3628')
call_3798 = relay.TupleGetItem(func_3627_call(), 1)
call_3799 = relay.TupleGetItem(func_3628_call(), 1)
uop_3800 = relay.tan(call_3798.astype('float32')) # shape=(12, 1, 12)
uop_3802 = relay.tan(call_3799.astype('float32')) # shape=(12, 1, 12)
output = uop_3800
output2 = uop_3802
func_3809 = relay.Function([], output)
mod['func_3809'] = func_3809
mod = relay.transform.InferType()(mod)
mutated_mod['func_3809'] = func_3809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3809_call = mutated_mod.get_global_var('func_3809')
call_3810 = func_3809_call()
output = call_3810
func_3811 = relay.Function([], output)
mutated_mod['func_3811'] = func_3811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3627_call = mod.get_global_var('func_3627')
func_3628_call = mutated_mod.get_global_var('func_3628')
call_3908 = relay.TupleGetItem(func_3627_call(), 0)
call_3909 = relay.TupleGetItem(func_3628_call(), 0)
const_3919 = relay.const([7,-4,-4,2,-2,10,9,8,6,-1,7,-10,8,2,1,-3,-9,-3,-10,6,5,7,-4,6,-3,10,2,7,-3,-4,-3,5,6,7,-2,-9,-1,-5,-3,6,7,-6,-5,-10,1,3,3,-8,-5,-4,-5,5,9,-10,8,-10,1,-5,10,7,3,7,-7,4,7,-8,-1,10,-1,-6,-8,6,-2,-8,-10,4,-4,-9,6,-4,3,7,6,-6,10,8,8,-7,-8,-3,-1,-2,-7,-7,-6,6,-4,-3,-2,7,-1,-10,-2,-9,4,-1,-8,10,-7,10,10,3,3,-4,5,7,-10,-4,5,-5,5,6,2,-3,-4,10,-3,8,9,10,-3,9,-3,-6,-8,9,-8,9,8,-8,-6,-6,3,2,-4,-5,9,-2,9,-3,8,10,-5,-7,10,-7,4,-3,7,-7,10,-2,10,-3,10,5,8,-8,-4,-7,-8,9,10,-7,9,-10,9,-10,-5,-7,-1,-5,-8,3,7,6,-4,7,9,1,-9,-9,-4,-7,-5,6,-5,-6,-5,4,-9,-7,-5,7,10,2,-2,10,-1,6,1,2,6,-10,-7,3,5,10,-6,-4,8,8,8,-7,4,2,9,1,4,-4,-6,-8,1,-2,7,-5,-3,-7,10,-9,9,-10,-9,-2,10,3,-7,8,-1,6,10,4,-6,-6,7,1,-9,4,1,1,6,-9,7,2,2,7,-1,5,2,-4,-7,4,-7,5,6,1,-10,-4,2,4,-4,-3,-1,-2,2,-3,2,-6,-8,9,7,-6,4,3,-6,7,-9,4,-3,-5,2,-3,-5,-7,1,7,-10,6,-10,8,-7,5,7,6,-6,4,-6,4,5,-6,-9,-6,-3,1,-3,-1,-5,-6,6,4,-2,-1,5,-2,9,9,-1,9,7,-7,-10,-1,-7,-9,1,-6,-10,-3,-2,-7,5,1,1,7,-1,-10,-5,5,-2,-4,8,5,-6,-4,3,1,7,3,-1,8,7,2,1,-5,-2,5,8,9,-8,4,4,1,-7,-9,-5,2,-7,5,4,2,-8,7,6,-3,8,-10,-3,4,-5,2,-2,-3,1,-8,9,-2,-6,4,4,8,5,6,9,9,3,-8,-8,-3,-1,3,-10,7,-3,-9,10,-10,-5,4,6,-2,7,-3,8,-3,8,9,2,-5,-8,-3,-4,-5,1,7,-3,6,6,6,-5,5,6,3,-1,-4,-3,-9,-1,-7,2,-2,10,6,7,-2,-10,8,-10,-5,-9,1,-5,10,3,-8,3,1,-8,-9,-8,9,-7,-5,8,-7,-6,-9,-9,6,-8,8,-4,5,7,-7,7,4,-5,-1,10,9,6,-6,7,-6,8,-6,-6,-4,-5,9,-9,5,3,-6,-4,8,3,5,-8,6,-7,-8,-1,6,-5,7,-8,-9,-8,4,10,-10,-6,4,7,9,2,7,-2,-1,-7,-5,1,-6,9,-1,-3,-5,-7,4,8,-8,-3,-4,-7,1,3,9,-10,-5,6,-1,6,-8,4,6,5,2,8,-10,1,7,9,-10,-10,1,8,4,7,-8,2,-1,-10,3,-9,1,8,5,-5,-10,7,-10,3,-2,6,9,6,4,-5,1,2,5,1,9,3,10,1,7,-6,2,9,-7,-1,10,-10,9,7,3,-4,-4,4,-6,-6,8,-2,-1,2,-7,-2,1,1,3,-6,4,9,-6,3,-7,-5,-10,-5,-9,10,-2,-4,-4,4,1,-4,-9,-6,-7,9,6,10,10,-7,-2,4,1,10,-2,-3,-6,9,-1,2,-2,3,-4,5,8,-4,1,6,-5,7,1,-10,8,-4,-6,6,-7,7,-4,5,6,-2,-7,-1,5,10,10,2,-3,7,-3,7,-6,9,-9,-9,4,-4,-10,-5,-4,10,9,4,-10,-9,-5,-1,3,8,8,8,9,-5,6,-3,-7,4,6,-5,-8,7,1,6,-10,7,-4,-10,-5,-3,4,-3,10,6,7,10,6,-1,-7,-2,-3,-7,-1,1,3,-9,1,-10,1,-5,-5,-6,-2,7,-5,-6,-7,-7,-9,4,-4,1,-7,8,-6,6,8,2,8,1,10,4,-2,6,9,5,7,1,-8,-1,2,6,1,3,-1,5,-4,1,-7,-9,-8,-2,-2,-8,1,-3,-1,4,6,1,2,9,4,1,-6,10,5,-1,-6,-5,8,-4,8,-1,5,-4,-10,4,2,9,-4,-5,2,7,-3,-9,-2,-2,-10,5,-6,6,-1,-2,-4,4,-2,10,-3,4,-7,10,5,-10,-6,-2,-3,10,7,-8,5,-2,10,-10,6,10,-6,-5,-2,-8,9,3,-8,-7,-7,9,-6,8,2,-9,-4,2,-9,3,-3,2,-2,-5,7,7,-8,3,-9,9,1,-8,9,6,-8,-1,-1,2,-7,-4,-8,6,9,-1,4,-8,10,-1,7,-10,8,3,-4,1,-1,-6,7,-6,-5,7,-8,4,2,-8,-3,-3,10,10,-2,-7,-7,-3,-9,5,7,-5,8,3,-7,10,-9,-2,-10,5,5,-4,-9,9,7,1,-7,-8,-8,-4,10,-4,8,10,-8,9,-8,-6,-1,4,10,-3,-4,1,-10,4,2,2,5,7,6,-9,-10,-1,1,-10,-1,-9,5,-6,8,6,-9,7,10,-1,1,-3,4,-3,-9,7,7,6,7,-7,-1,2,-1,8,-4,-10,-9,-7,8,10,-2,-9,5,3,9,-5,-4,2,8,9,-9,7,3,-2,4,8,1,7,7,7,9,-6,-9,-10,-10,-8,-7,8,-9,-1,-4,-8,-10,-2,4,-1,-9,8,5,4,-7,4,-5,4,-5,-6,-3,6,1,8,-7,-2,8,-4,-8,-10,-1,8,9,2,4,6,6,1,-2,-3,-2,5,5,-4,-10,-9,-1,8,9,-5,-2,2,-5,-5,6,5,-3,7,-2,2,-5,4,7,5,6,1,-3,5,-8,4,-8,-1,9,-8,10,2,8,1,-10,1,8,-3,7,-8,8,-10,-9,7,10,9,-5,5,-1,-1,1,-8,-6,-10,10,-7,-8,-7,9,-8,-9,-8,10,-10,-10,-3,-4,1,-1,-2,-9,-9,7,7,-10,-4,-2,7,-8,4,-9,10,-7,5,2,-8,6,9,5,-1,8,8,-10,1,-2,-7,-1,4,7,-5,7,-9,5,8,1,9,-5,-9,-3,-4,-5,-6,7,6,1,5,9,3,-2,-5,2,-4,2,3,-4,-10,7,7,8,-10,-7,7,8,9,2,-5,-10,3,-2,7,3,-7,5,-6,9,2,-8,-1,10,6,-4,8,8,7,-6,-8,-4,-1,10,2,1,5,-6,6,6,9,1,-7,-9,-8,1,-5,-10,-5,-2,-10,-2,2,3,3,-10,-1,-2,-1,-3,7,5,-10,-8,7,-2,5,-2,-4,-7,-4,1,-9,4,-3,8,-2,2,10,-6,2,-4,4,3,2,-6,8,-4,10,6,-6,3,-7,-9,-5,-6,5,-3,9,-6,8,9,-9,5,-2,1,5,-7,9,3,-3,2,-10,-6,10,2,-3,-8,-8,2,-3,-10,-8,-5,5,2,7,-3,-6,-8,2,-6,4,7,-6,2,3,10,-8,-8,-2,-8,-4,-8,1,-9,-9,-8,-1,-5,-8,-8,6,2,-4,-7,-3,-7,-10,-9,4,-4,3,6,-10,10,-7,-9,-6,-8,-3,7,2,5,1,-2,2,-8,9,8,4,-5,6,-5,-5,5,8,6,-9,1,-4,5,-9,10,6,7,-6,2,-8,-8,-9,-3,-6,6,-9,-5,8,-9,-2,6,7,-1,-8,6,-1,-9,7,7,8,-1,10,1,8,6,-9,10,-6,8,4,-9,6,5,-9,-9,8,5,-7,-10,6,-5,-10,10,5,-1,-10,6,-8,1,5,-4,1,-5,-6,5,10,-9,-6,8,5,-2,10,2,7,5,3,-7,9,-5,4,8,-10,6,-6,-7,4,7,-5,1,-10,6,-6,-10,-4,1,-2,3,6,8,-6,4,-2,5,7,1,-2,5,-9,-2,-9,-10,2,5,-7,-1,-9,4,-3,9,4,-1,7,4,-10,-7,-9,-4,-4,-10,-3,5,-3,3,7,10,-4,-8,7,-4,-10,8,2,2,-10,-9,1,-4,1,2,9,-9,-3,3,1,-6,10,4,-5,-10,-9,9,2,-6,-9,1,2,-3,9,4,-3,4,-6,7,-5,8,7,5,9,2,-4,7,5,1,-6,-7,-5,2,1,5,-10,1,-10,-7,-2,8,4,-1,5,-6,-7,10,5,-7,5,2,5,-3,10,4,10,7,7,-6,2,-5,-4,2,7,6,1,7,1,-1,-1,4,-6,7,9,-8,-5,9,-8,-1,-2,6,6,9,3,-2,-4,-8,-7,6,8,8,-6,5,2,8,-6,9,-8,-1,8,-5,-8,-5,-8,3,-4,1,10,6,3,-5,-10,9,3,-1,3,-5,9,-10,-10,4,3,-6,1,-4,7,1,4,-7,2,-9,-4,-10,4,-1,-2,-10,10,10,9,-6,-5,-6,-9,-7,-9,-9,-1,-5,8,9,2,-5,-5,-6,2,3,-8,-8,1,9,-2,-2,-7,7,-4,-5,6,-9,-6,-9,6,6,10,5,9,-1,4,3,-2,-7,7,-5,2,7,-10,6,8,-3,8,-10,-2,10,-6,-9,5,9,8,6,7,-1,2,4,-1,-8,3,-8,1,-2,10,9,9,-9,9,8,1,-4,7,2,-5,9,-10,-4,2,10,-1,-9,-5,7,4,-2,5,9,-6,-1,1,8,6,2,1,-2,-9,3,7,-9,-5,7,9,-3,-7,3,-8,-9,4,-2,3,9,3,7,-10,-5,9,7,8,-10,-8,-4,5,-9,-5,6,-5,10,-5,-9,5,-1,6,10,-8,10,5,-10,-7,9,-2,-10,10,-4,-10,1,7,-8,8,8,10,1,3,-6,-4,4,2,10,7,8,-9,1,-10,10,8,-5,-9,4,2,4,-6,10,4,1,-8,-7,9,2,8,9,-3,6,3,-3,1,8,8,7,-2,3,9,-6,9,-8,-1,3,-1,5,9,8,-7,-9,-8,7,7,9,-10,-4,2,-6,-3,8,-9,10,3,2,-6,-5,7,2,9,-2,6,-10,2,-5,6,-8,8,-5,-4,3,7,-4,-9,10,10,9,-10,6,4,4,7,-6,-8,10,-9,-3,10,-3,-4,8,-7,-9,3,-6,1,6,-1,-6,3,-10,8,9,1,-8,-6,-8,-3,-7,-4,-5,4,4,-4,-2,-6,-9,8,-4,-1,1,-1,10,7,2,2,-8,-9,-10,3,-9,-8,3,8,2,-2,-7,-3,-8,-4,-4,8,-3,-6,-7,6,-10,-8,-10,-2,8,-7,-10,-1,3,-9,-4,-2,-1,9,-9,-7,1,4,2,4,-4,4,-1,2,-2,2,-7,2,-3,9,-8,-3,-2,10,2,5,-3,10,5,10,3,3,8,-2,-8,5,7,-5,-4,4,-7,4,9,-5,-7,2,-7,-2,4,-8,-4,8,-10,2,-8,-9,-7,-4,-6,1,-4,-5,-9,9,-10,-6,7,-6,7,-10,4,7,-2,-6,-1,-4,-9,9,-6,3,-5,-10,3,1,4,2,-9,-9,-3,1,-3,3,4,2,-2,5,4,-10,-3,-8,10,-7,10,-2,-5,8,-10,10,3,-3,8,2,5,-10,3,-9,7,-4,4,-1,10,6,10,-3,9,8,4,-1,10,-9,-1,-5,-4,9,-6,-8,-10,8,4,3,-7,-3,10,2,-9,-2,9,1,10,-5,10,5,-2,2,-6,9,5,-6,10,-5,-1,9,6,-5,-2,3,6,6,2,-3,-10,-2,6,7,6,-5,9,-6,6,3,4,3,-7,9,4,8,6,-10,7,-8,-1,9,9,-7,9,-6,-10,-6,-8,4,6,-10,1,-5,-7,-1,-10,-10,-8,-3,-1,-1,-7,-5,1,-9,-3,-9,6,3,1,-6,6,9,5,10,-2,-4,-5,4,-2,3,1,-10,-10,-2,8,-1,4,-8,-3,-4,9,-3,-10,-10,-1,6,9,-9,-10,9,1,-4,-3,5,-1,10,-8,4,-2,-8,1,7,1,-8,-8,-1,-8,-5,9,6,10,2,9,-4,4,5,8,-3,7,2,-8,-8,9,-9,5,10,1,3,-8,2,1,-7,-9,-9,-2,6,5,-10,7,-5,-5,8,-5,-6,8,-6,7,-9,4,5,-1,9,2,2,-7,4,10,-7,-2,9,-3,10,-10,4,-9,1,-9], dtype = "uint16")#candidate|3919|(2340,)|const|uint16
bop_3920 = relay.logical_xor(call_3908.astype('int32'), relay.reshape(const_3919.astype('int32'), relay.shape_of(call_3908))) # shape=(2340,)
bop_3923 = relay.logical_xor(call_3909.astype('int32'), relay.reshape(const_3919.astype('int32'), relay.shape_of(call_3909))) # shape=(2340,)
output = relay.Tuple([bop_3920,])
output2 = relay.Tuple([bop_3923,])
func_3924 = relay.Function([], output)
mod['func_3924'] = func_3924
mod = relay.transform.InferType()(mod)
mutated_mod['func_3924'] = func_3924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3924_call = mutated_mod.get_global_var('func_3924')
call_3925 = func_3924_call()
output = call_3925
func_3926 = relay.Function([], output)
mutated_mod['func_3926'] = func_3926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2895_call = mod.get_global_var('func_2895')
func_2897_call = mutated_mod.get_global_var('func_2897')
call_3927 = relay.TupleGetItem(func_2895_call(), 1)
call_3928 = relay.TupleGetItem(func_2897_call(), 1)
output = call_3927
output2 = call_3928
func_3933 = relay.Function([], output)
mod['func_3933'] = func_3933
mod = relay.transform.InferType()(mod)
output = func_3933()
func_3934 = relay.Function([], output)
mutated_mod['func_3934'] = func_3934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3787_call = mod.get_global_var('func_3787')
func_3789_call = mutated_mod.get_global_var('func_3789')
call_3946 = func_3787_call()
call_3947 = func_3787_call()
func_3680_call = mod.get_global_var('func_3680')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_3948 = relay.TupleGetItem(func_3680_call(), 0)
call_3949 = relay.TupleGetItem(func_3681_call(), 0)
output = relay.Tuple([call_3946,call_3948,])
output2 = relay.Tuple([call_3947,call_3949,])
func_3959 = relay.Function([], output)
mod['func_3959'] = func_3959
mod = relay.transform.InferType()(mod)
output = func_3959()
func_3960 = relay.Function([], output)
mutated_mod['func_3960'] = func_3960
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4004 = relay.var("var_4004", dtype = "int64", shape = (16, 15, 8))#candidate|4004|(16, 15, 8)|var|int64
var_4005 = relay.var("var_4005", dtype = "int64", shape = (16, 15, 8))#candidate|4005|(16, 15, 8)|var|int64
bop_4006 = relay.greater_equal(var_4004.astype('bool'), relay.reshape(var_4005.astype('bool'), relay.shape_of(var_4004))) # shape=(16, 15, 8)
var_4009 = relay.var("var_4009", dtype = "bool", shape = (16, 15, 8))#candidate|4009|(16, 15, 8)|var|bool
bop_4010 = relay.floor_mod(bop_4006.astype('float64'), relay.reshape(var_4009.astype('float64'), relay.shape_of(bop_4006))) # shape=(16, 15, 8)
output = relay.Tuple([bop_4010,])
output2 = relay.Tuple([bop_4010,])
func_4022 = relay.Function([var_4004,var_4005,var_4009,], output)
mod['func_4022'] = func_4022
mod = relay.transform.InferType()(mod)
var_4023 = relay.var("var_4023", dtype = "int64", shape = (16, 15, 8))#candidate|4023|(16, 15, 8)|var|int64
var_4024 = relay.var("var_4024", dtype = "int64", shape = (16, 15, 8))#candidate|4024|(16, 15, 8)|var|int64
var_4025 = relay.var("var_4025", dtype = "bool", shape = (16, 15, 8))#candidate|4025|(16, 15, 8)|var|bool
output = func_4022(var_4023,var_4024,var_4025,)
func_4026 = relay.Function([var_4023,var_4024,var_4025,], output)
mutated_mod['func_4026'] = func_4026
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4028 = relay.var("var_4028", dtype = "bool", shape = (9, 14, 15))#candidate|4028|(9, 14, 15)|var|bool
const_4029 = relay.const([[[False,False,False,False,True,True,False,False,False,False,True,False,False,False,True],[False,True,True,True,False,True,True,True,False,True,False,False,False,False,False],[False,True,False,True,True,False,False,False,False,False,False,True,False,False,True],[True,False,False,True,True,False,False,False,False,False,False,False,False,False,True],[False,True,False,True,False,True,True,False,True,True,False,True,True,True,True],[False,False,True,True,True,True,True,True,True,True,True,True,False,False,False],[True,False,True,True,True,True,False,False,True,False,False,True,True,True,False],[True,True,True,False,False,False,True,False,False,True,True,True,False,True,True],[False,False,False,True,True,True,False,False,False,True,False,False,True,True,True],[True,False,False,False,True,True,True,False,True,True,True,False,False,False,False],[False,False,False,False,False,False,True,False,False,True,False,False,True,True,True],[False,False,False,True,True,True,False,False,True,True,True,True,True,True,True],[True,True,True,False,True,True,False,True,False,False,False,False,False,False,True],[True,False,True,True,True,False,False,True,False,False,False,True,True,False,True]],[[False,True,False,True,True,False,True,True,True,True,True,True,True,True,True],[False,True,False,True,False,True,False,True,True,False,True,True,False,False,True],[True,False,True,True,True,False,True,False,False,False,True,True,False,False,True],[True,False,False,True,False,False,True,False,True,False,False,False,True,False,False],[True,True,False,False,True,False,False,False,False,False,True,False,False,True,False],[True,False,True,True,False,True,True,True,True,True,True,True,True,False,False],[False,True,True,False,True,False,False,False,True,True,False,False,True,False,True],[True,True,True,False,False,True,True,False,False,False,True,True,False,False,False],[False,False,True,True,True,True,False,True,True,True,False,True,True,True,False],[False,True,True,True,True,False,True,True,False,True,True,True,True,True,True],[True,True,False,False,True,True,True,True,False,False,False,True,False,True,False],[False,True,True,True,False,True,True,True,False,True,True,True,False,False,True],[False,True,False,False,True,True,True,True,False,True,True,False,False,True,True],[True,True,False,False,True,True,True,False,False,True,False,True,True,False,True]],[[False,False,False,False,False,False,False,True,True,False,True,False,True,True,False],[False,False,True,True,True,False,False,False,True,False,False,True,False,True,True],[True,True,False,False,True,False,False,True,False,True,False,True,True,True,False],[True,True,True,True,False,False,True,False,False,False,True,False,True,True,True],[True,False,False,True,False,False,True,False,True,True,True,True,False,True,False],[True,False,False,False,True,False,False,True,True,False,True,False,True,True,True],[False,False,True,True,True,False,True,False,False,False,False,False,False,False,True],[False,True,True,False,True,True,True,True,False,False,False,True,False,True,False],[True,True,False,False,False,True,False,True,False,True,False,False,True,False,False],[False,False,False,True,True,True,False,False,True,False,False,True,False,False,False],[False,True,True,True,True,False,False,False,True,False,True,True,False,False,True],[True,False,False,True,True,True,False,False,True,True,False,True,False,False,True],[False,True,False,False,False,True,False,False,True,True,True,False,True,True,False],[False,False,False,False,True,False,True,False,False,False,True,False,True,False,True]],[[False,False,False,False,False,False,False,False,False,True,False,True,False,True,True],[False,True,True,True,False,True,True,True,True,True,False,False,True,True,False],[False,False,True,False,False,True,False,False,False,True,False,False,False,False,True],[True,False,False,True,True,False,False,False,False,True,True,False,True,True,True],[False,True,True,True,False,False,False,False,False,False,True,False,False,False,False],[True,True,True,False,False,False,False,False,True,False,True,False,False,True,True],[False,True,True,True,False,True,True,False,True,False,True,True,False,True,True],[True,True,False,False,True,True,False,True,True,True,False,True,False,False,False],[True,False,True,False,False,True,True,True,True,True,True,False,False,False,False],[True,True,True,True,True,False,False,True,True,False,True,True,True,True,False],[True,False,False,False,True,False,True,False,False,False,True,True,True,True,True],[True,False,False,False,False,True,False,False,True,True,False,False,True,True,True],[True,False,True,True,False,False,False,True,True,False,False,False,True,True,False],[True,False,False,True,False,False,True,False,True,False,True,True,False,False,True]],[[True,True,True,False,True,False,True,True,True,False,True,True,False,False,False],[False,True,False,True,True,False,True,False,False,False,False,False,False,False,False],[True,True,False,False,True,True,False,False,False,False,False,True,True,True,True],[False,True,True,False,False,False,True,False,False,True,False,False,True,False,False],[False,True,True,False,False,False,True,False,True,True,False,True,False,False,False],[True,False,False,False,False,False,False,True,False,False,True,True,False,False,True],[False,False,True,True,False,True,False,True,True,True,False,False,False,False,False],[True,False,False,True,False,False,True,True,False,False,True,True,True,False,True],[False,False,False,True,False,False,False,False,False,False,True,False,False,True,True],[False,False,True,False,True,True,False,True,False,False,True,False,True,False,False],[True,False,False,True,False,False,True,False,False,True,False,True,False,False,True],[True,False,True,False,False,True,True,True,False,False,True,True,False,True,True],[False,False,True,False,True,True,True,False,False,True,False,False,True,False,True],[False,True,True,True,True,False,False,False,True,False,False,False,True,False,True]],[[False,False,True,False,True,False,True,False,True,True,True,True,False,False,True],[True,False,False,False,False,True,False,False,True,True,True,False,False,False,False],[True,True,True,True,True,False,True,False,False,False,False,True,True,False,False],[False,True,False,False,True,False,True,False,True,True,True,False,True,True,False],[True,True,True,False,False,False,False,True,True,False,False,True,False,True,True],[False,False,False,False,False,True,True,False,True,False,True,True,False,False,False],[False,True,True,False,False,True,False,False,True,True,True,True,False,True,False],[True,True,False,True,True,True,True,False,True,False,False,False,True,False,False],[False,True,True,True,True,True,True,True,False,False,True,True,True,True,False],[True,True,True,False,False,False,True,True,True,False,False,True,False,True,False],[False,True,True,True,True,False,True,False,True,True,False,False,False,True,False],[False,False,True,True,False,True,True,True,True,False,True,True,False,True,False],[False,True,False,True,True,True,True,False,True,False,True,True,True,True,False],[True,True,False,False,False,True,True,True,False,False,False,False,True,False,True]],[[False,False,True,False,True,False,True,False,False,False,False,True,True,True,False],[True,False,True,True,False,True,False,False,False,True,False,False,True,False,False],[False,False,False,True,False,True,True,True,True,True,True,False,False,False,True],[False,True,False,True,False,False,False,True,False,True,False,True,True,True,True],[False,True,True,False,True,True,False,False,False,True,False,True,True,False,True],[True,True,False,True,False,False,True,True,True,False,False,True,True,True,False],[False,True,False,True,False,True,False,False,True,False,True,True,True,True,False],[False,False,True,False,True,True,False,False,False,False,False,False,True,True,False],[False,True,True,False,False,True,True,False,True,False,False,True,False,True,False],[False,True,False,True,True,True,False,False,True,True,False,False,True,True,True],[True,True,True,True,True,True,False,False,False,False,True,False,True,True,False],[True,True,True,True,False,True,False,False,True,True,True,True,True,True,False],[True,False,False,False,True,True,True,False,False,True,False,True,False,True,False],[False,False,True,True,True,True,False,True,True,True,False,True,False,False,False]],[[True,True,False,True,True,False,False,False,False,False,False,False,True,False,True],[True,False,True,False,True,False,True,False,True,True,True,True,False,False,True],[False,True,False,False,False,True,False,False,False,False,True,False,False,False,False],[True,False,False,False,False,True,False,False,True,True,True,True,True,True,True],[False,True,False,True,True,False,False,False,False,False,False,True,False,True,False],[False,False,False,False,True,False,False,True,False,True,True,True,False,False,False],[True,False,True,True,True,True,True,False,True,False,False,True,True,True,False],[True,True,True,True,False,False,False,False,True,False,True,False,False,False,False],[False,True,True,False,True,False,True,False,False,False,False,True,True,False,False],[False,True,True,True,True,True,True,True,True,False,True,True,True,True,True],[True,False,False,False,False,True,True,True,False,True,True,False,False,False,False],[False,False,False,False,True,True,True,False,False,True,True,True,False,False,True],[True,True,True,True,False,True,True,True,False,True,False,True,True,True,True],[False,True,False,False,True,True,True,True,False,True,False,True,False,False,True]],[[True,True,False,False,False,False,True,True,True,True,False,False,False,False,True],[False,False,False,False,False,False,True,True,True,True,False,True,False,False,True],[True,False,False,False,False,False,False,False,False,False,True,False,False,False,False],[True,False,False,True,False,False,True,True,True,False,True,True,True,True,False],[False,True,False,False,True,False,True,True,False,True,True,False,True,True,False],[False,False,False,False,False,False,True,True,True,False,False,False,False,True,False],[False,False,True,False,False,False,False,True,True,True,False,True,True,False,False],[True,False,True,True,False,True,True,True,False,False,False,False,True,False,False],[True,False,False,False,False,False,False,False,False,True,True,False,False,False,False],[True,True,False,False,False,True,True,True,False,True,False,False,False,True,False],[False,False,False,False,False,False,False,False,True,False,True,False,True,False,True],[True,True,False,False,True,True,True,False,False,True,True,False,False,True,True],[False,True,True,True,True,True,True,False,True,False,False,True,True,True,True],[False,True,False,False,True,True,True,False,True,False,True,False,False,True,False]]], dtype = "bool")#candidate|4029|(9, 14, 15)|const|bool
bop_4030 = relay.logical_and(var_4028.astype('bool'), relay.reshape(const_4029.astype('bool'), relay.shape_of(var_4028))) # shape=(9, 14, 15)
func_3262_call = mod.get_global_var('func_3262')
func_3265_call = mutated_mod.get_global_var('func_3265')
const_4042 = relay.const([2,4,6,-8,6,-2,-2,6,-7,1,3,8,5,3,-8,-10,2,2,9,-8,7,-2,5,4,7,7,-9,5,-10,-2,3,-9,-6,-5,-10,10,5,6,-1,5,10,-10,-8,4,3,4,-6,3,5,6,10,-5,-7,-8,-3,-6,4,1,1,8,9,-2,-9,8,-2,9,10,1,-7,8,2,3,2,-8,1,-8,1,7,4,2,-10,2,-7,9,-1,-3,1,-9,-2,-7,-4,-3,-5,-3,-4,7,-7,5,-1,5,-1,5,6,4,-10,1,6,-8,-2,1,7,-3,-6,-8,3,1,4,6,9,-8,-3,-2,2,-9,3,2,8,4,-4,-3,8,10,9,1,-8,-6,7,9,7,4,5,-10,3,-7,8,5,3,7,-3,-9,-9,-3,2,-8,7,-1,-1,-9,6,-3,-7,10,8,-3,8,-4,-6,5,-7,7,8,10,8,4,-5,-8,-9,-4,8,8,1,2,8,-5,2,-3,-1,-10,2,5,-4,4,3,-10,7,-6,-9,6,-6,4,-7,8,10,9,3,3,-10,1,-5,4,-9,10,9,-9,9,4,-10,5,2,4,-9,3,4,-3,-4,-10,-7,3,8,-10,-5,4,7,-7,-1,-2,-10,10,-8,-2,9,-5,6,-10,-2,-3,5,2,5,8,-2,8,7,3,-10,8,-1,-4,3,-1,-6,-1,10,-2,-5,-2,-5,7,10,-7,-9,10,2,-4,9,9,10,8,-5,6,1,5,8,-7,-3,9,-3,-9,4,-9,1,-10,-10,-2,7,3,5,5,1,4,-8,6,-3,-6,2,-1,3,-7,-10,-8,-4,6,-10,-3,-2,-8,9,2,3,-10,-3,-10,-10,1,-6,6,1,-9,4,-5,10,-9,-7,2,10,5,-1,-4,-1,-3,-6,-7,3,-2,-10,5,8,9,-4,-5,3,10,4,6,-8,4,-8,-3,-9,-9,-9,8,-8,-5,10,-9,-2,6,2,5,1,-4,-10,-1,9,9,4,-9,6,5,6,8,2,5,-6,-3,-10,5,3,1,5,2,-7,2,-5,-9,10,8,-3,-5,5,-5,5,7,7,-2,7,-4,6,-8,-2,3,-6,5,6,-8,9,6,-5,-4,10,-7,-1,-9,-8,8,-6,3,2,3,7,8,5,10,8,4,-9,3,5,-4,3,-2,-3,-2,10,-2,7,3,-8,3,8,-4,-2,6,10,-8,-4,-1,5,3,-9,4,-8,7,1,-10,9,5,-10,9,-3,-3,9,-3,9,10,2,3,1,4,2,-1,9,-2,-9,10,-8,-8,-9,9,-8,4,-3,9,-9,-5,10,-1,4,-9,2,2,2,-5,2,7,-5,9,9,9,5,-8,2,2,-1,-6,10,-3,9,-3,3,2,-10,3,10,-9,10,8,7,5,-2,-2,-2,-5,4,3,-8,3,-5,-9,-2,10,6,-3,1,-2,10,5,9,-2,-10,8,7,5,-2,9,-3,-6,-8,-3,-7,-1,-8,-9,-8,10,6,-5,-1,-7,5,9,-4,8,-3,10,-5,-9,9,10,8,5,-7,-7,1,1,9,-5,-4,6,5,9,6,2,5,3,9,-5,8,-3,7,6,-6,10,3,9,-3,7,6,7,1,-3,7,5,2,-6,-5,-7,-3,-1,5,4,8,-9,3,4,-5,-2,-6,10,8,9,8,4,-4,-10,5,-9,7,5,-4,-2,7,3,-3,-3,3,-4,-7,4,3,2,-8,-1,1,-3,-7,5,-10,-7,-3,4,2,7,-6,1,-3,-9,6,-5,6,-1,4,-6,4,7,-4,3,9,-7,3,6,3,-8,-3,-3,1,-1,9,9,-3,-3,7,4,8,-1,-1,8,2,2,-8,-6,10,4,-7,3,7,-10,3,-10,-7,-3,-10,2,-6,-9,9,1,-3,9,8,-1,-1,9,4,5,2,10,9,-4,-6,7,-8,-7,5,-2,-9,8,-5,3,8,-3,-6,-4,6,-9,-3,-8,-9,4,10,-7,-1,8,-3,7,1,-4,4,-1,6,-3,-10,-9,-5,-1,9,5,-4,-7,-5,10,8,-2,-2,3,5,-6,-6,-4,-8,-5,2,8,-2,-4,-3,3,-6,4,-8,-5,-2,9,-6,8,-7,-2,2,6,-8,2,-3,-1,-10,9,1,-2,-5,-10,4,-8,10,10,1,-5,-4,-10,-2,10,-7,7,-2,-2,1,-1,-9,-4,8,-10,-1,10,2,4,5,3,2,-2,10,-3,-6,-6,3,6,5,2,1,-3,2,-8,-3,8,2,10,-6,4,9,-8,9,4,2,-4,-6,7,-4,6,5,-5,-6,8,9,-3,-2,-1,-7,-9,-10,1,9,7,-4,-3,7,-5,-2,-4,-6,1,9,3,8,-4,-4,-6,4,6,-6,-8,-6,7,-7,3,7,-5,8,10,-7,-4,-1,4,6,5,1,-7,6,9,3,1,5,-6,-4,-9,-1,2,5,-9,-7,5,6,7,3,9,7,8,6,5,2,-10,6,5,1,-2,-8,8,-8,8,-2,-9,-9,-1,3,-4,9,-8,-8,-6,-8,-7,7,10,10,-7,9,1,7,2,9,6,1,-3,-8,-10,-9,-3,-4,-2,-5,9,4,-1,-4,-10,-10,-3,10,-2,6,7,10,-4,6,-9,2,4,-7,-7,-9,-6,-5,2,4,4,-7,-5,-2,1,4,7,-9,-4,-10,-9,-9,-10,1,-10,5,3,4,8,9,-1,1,-1,-3,-7,5,3,-9,8,4,-3,1,-10,-7,2,8,-1,5,7,6,-2,8,-6,-8,-6,-2,1,6,2,-2,9,10,-8,3,-5,-9,-3,4,-5,4,7,10,-1,1,-10,-10,2,-1,6,-6,-7,10,4,-7,-8,-10,-9,3,5,-5,-9,-3,6,-1,-2,-3,-4,6,7,-8,-8,-8,-7,9,8,-6,-9,-8,-5,-7,-8,5,-3,1,-8,-5,-5,3,7,-5,-4,-10,2,-9,-8,5,5,9,2,-8,-7,7,7,6,-10,6,4,10,-7,4,-3,1,-10,6,10,-4,-8,-1,-1,-8,9,-6,2,-10,4,4,4,7,-6,6,8,3,1,10,2,-2,2,6,5,-2,-2,10,2,10,10,-3,7,6,-9,-9,-6,4,10,-1,7,-6,2,5,-3,3,2,-4,10,-7,8,-10,5,-10,5,2,9,-3,5,-6,-4,2,4,4,-5,3,-5,6,10,-6,1,8,-7,-4,2,9,-10,-1,6,-8,-6,-6,7,-2,-10,-1,8,5,-4,-6,-9,-2,7,-3,9,-5,4,8,3,-8,10,-8,-1,-6,9,1,8,-7,7,7,1,2,3,-7,-2,1,-6,-2,9,-4,-9,-8,-8,-3,5,2,-4,-3,4,5,-5,-8,3,-8,10,-3,-6,-8,-8,-1,3,-2,6,3,-5,6,5,3,-5,-2,-2,4,8,4,4,-2,7,-3,-7,-4,7,4,-3,-9,5,-1,-8,7,-10,-5,-6,-1,-9,7,3,10,-9,-1,9,-9,3,3,9,-1,-1,-3,-3,10,-3,10,8,7,2,10,-9,-8,-2,-6,-3,10,-3,-10,1,8,9,-9,8,6,3,-3,-6,-5,-2,-9,-7,-8,6,-7,-10,-9,3,-7,4,-10,7,9,4,4,-4,8,4,2,-6,4,-3,4,-3,-8,-2,1,-2,5,-4,-2,3,-10,8,6,-2,-9,-5,3,-3,4,1,-9,6,1,-4,-10,4,2,1,-5,10,10,-6,3,5,-7,3,-9,9,-2,-4,-9,-10,10,1,-6,1,6,8,7,7,8,-1,10,9,-2,-4,-1,4,-8,9,3,8,7,9,9,-9,7,-6,-9,-10,-9,-6,7,-4,-2,-8,4,4,-2,-5,-8,-8,6,1,10,-8,6,-9,-3,-7,-5,10,3,-1,9,-5,-2,-4,-10,4,8,7,8,-6,-9,4,10,-5,1,7,2,9,-9,-4,9,9,2,1,1,10,2,8,-9,-6,-9,-10,-7,8,-1,-6,-10,8,-10,1,6,-3,-7,-2,-6,-9,-1,7,-10,-5,7,3,-4,-9,-10,6,-4,-6,-2,9,5,2,-7,-6,-3,-9,-10,-8,-3,-1,-9,-1,-7,-4,-5,8,9,8,8,4,-4,-4,5,-1,10,1,10,-10,9,8,5,6,6,1,-7,-7,-1,-5,4,-7,7,-2,2,-6,6,-4,9,-6,-3,7,5,9,7,-2,-10,-3,-7,-6,9,-9,-5,7,-5,7,1,6,-9,1,10,7,4,-9,-7,9,6,-2,-3,4,-1,5,-6,9,7,3,5,7,2,-10,10,8,1,6,-8,-1,-1,2,-7,-3,2,4,-8,7,-7,-2,10,5,-9,-5,-1,-5,-3,10,-7,-6,10,6,-9,9,-2,4,-10,-3,-10,-5,5,3,-4,-9,7,10,3,7,-9,-1,9,4,4,10,8,-7,3,2,-5,10,6,3,-6,-3,-9,5,-10,1,6,10,-7,8,8,-1,3,-9,1,-10,2,-9,8,3,3,-1,-5,5,-7,4,-7,10,-6,8,-9,-2,2,6,-7,7,10,3,9,9,-2,-3,8,10,-2,-9,9,-4,7,10,-8,6,-2,-5,-8,9,7,-1,-5,9,9,8,3,6,3,-6,2,-9,2,7,8,9,6,-2,-1,8,-9,6,10,2,10,2,-1,-8,5,-10,-9,-2,-1,8,5,9,-4,-8,1,-6,9,4,-1,10,6,-2,-10,-4,9,10,9,8,8,-6,7,9,3,3,-6,1,4,10,8,-5,-5,-8,8,-8,3,3,-7,3,8,6,-10,7,-10,10,-9,6,-3,10,2,8,-1,5,-5,-10,8,-8,-2,-4,2,-4,-10,6,-5,-5,-4,4,3,-5,-10,5,2,-6,-8,1,-4,-2,-3,8,-5,-5,-5,4,8,8,6,-8,7,-5,6,-5,-8,7,-5,1,7,1,-7,-9,6,-5,-1,3,6,-2,-3,-5,6,-6,6,-3,3,4,-8,-5,2,-9,2,2,-9,4,-5,-6,-10,4,-8,-10,10,3,1,-6,-9,-8,6,-10,-8,10,-3,4,7,-1,4,7,9,4,9,3,-5,-8,-2,-8,1,4,4,-7,-4,5,-2,-4,4,1,9,1,6,7,-6,-8,4,-2,10,9,-10,1,-9,-4,-4,8,10,7,7,-4,8,-1,-6,3,2,9,6,-3,7,-10,2,-4,7,6,5,6,-6,10,-10,9,2,-4,-1,7,-4,-1,-7,7,-8,8,7,-1,-3,-6,-1,-6,4,-3,-7,-3,9,7,10,-8,9,2,-1,8,3,8,-8,8,6,-6,-2,-6,-2,-7,-7,1,-2,-1,-7,7,-2,5,-1,1,-4,10,6,7,9,10,-10,5,3,4,-4,1,8,-7,7,-6,-4,7,4,-8,9,-2,-9,10,2,4,-5,-5,9,3,9,6,-10,5,-10,-9,-1,9,-10,3,-1,2,-2,-10,-9,8,6,3,-9,-10,-9,10,-3,-1,-8,-7,-3,-6,5,5,-10,-4,-9,2,3,-8,4,6,9,-2,-4,-3,-9,-2,-6,8,2,-4,-9,10,2,-6,-8,-6,10,1,9,10,4,2,-9,-7,4,-3,-2,3,-10,2,1,-2,-6,-2,-8,10,-4,-3,-5,-5,6,10,-8,-1,3,-4,-9,-5,1,9,10,3,-4,-7,9,-7,-8,10,-1,-4,-4,1,5,10,3,-7,-1,-7,7,5,5,-10,1,9,-10,-8,-1,10,5,4,-9,1,1,8,-3,3,-7,1,2,-9,4,9,-6,-3,-8,9,10,-7,7,9,10,-7,5,-2,9,3,9,-9,10,-6,-1,-6,-4,-9,10,-2,-2,-5,7,5,-1,1,2,-6,4,-1,-8,3,1,6,4,10,-7,2,-4,-9,-7,6,-10,2,-8,-8,-1,10,-5,-1,-4,-4,10,4,6,1,-6,3,-1,10,1,8,9,3,-6,-4,7,-1,5,-1,1,-4,-10,10,5,3,-8,-7,-8,-2,7,5,3,1,3,6,-5,-8,-7,-8,-10,8,9,6,6,-4,-3,6,-6,3,2,-3,10,-4,4,9,1,4,3,-9,-10,-3,-3,1,10,9,5,-9,-5,-2,-2,-3,-10,-7,10,5,1,5,1,-3,3,-2,-6,-3,-3,10,-8,10,-1,-5,3,3,8,-7,-5,9,-4,6,2,-1,-4,10,-5,10,-7,8,-4,5,-8,-2,-5,-3,-10,9,6,-6,-2,-2], dtype = "int16")#candidate|4042|(2340,)|const|int16
call_4041 = relay.TupleGetItem(func_3262_call(relay.reshape(const_4042.astype('int16'), [2340, 1])), 3)
call_4043 = relay.TupleGetItem(func_3265_call(relay.reshape(const_4042.astype('int16'), [2340, 1])), 3)
var_4046 = relay.var("var_4046", dtype = "bool", shape = (9, 14, 15))#candidate|4046|(9, 14, 15)|var|bool
bop_4047 = relay.floor_mod(var_4028.astype('float64'), relay.reshape(var_4046.astype('float64'), relay.shape_of(var_4028))) # shape=(9, 14, 15)
var_4054 = relay.var("var_4054", dtype = "bool", shape = (9, 14, 15))#candidate|4054|(9, 14, 15)|var|bool
bop_4055 = relay.bitwise_and(const_4029.astype('uint64'), relay.reshape(var_4054.astype('uint64'), relay.shape_of(const_4029))) # shape=(9, 14, 15)
uop_4063 = relay.erf(bop_4030.astype('float32')) # shape=(9, 14, 15)
output = relay.Tuple([call_4041,const_4042,bop_4047,bop_4055,uop_4063,])
output2 = relay.Tuple([call_4043,const_4042,bop_4047,bop_4055,uop_4063,])
func_4073 = relay.Function([var_4028,var_4046,var_4054,], output)
mod['func_4073'] = func_4073
mod = relay.transform.InferType()(mod)
var_4074 = relay.var("var_4074", dtype = "bool", shape = (9, 14, 15))#candidate|4074|(9, 14, 15)|var|bool
var_4075 = relay.var("var_4075", dtype = "bool", shape = (9, 14, 15))#candidate|4075|(9, 14, 15)|var|bool
var_4076 = relay.var("var_4076", dtype = "bool", shape = (9, 14, 15))#candidate|4076|(9, 14, 15)|var|bool
output = func_4073(var_4074,var_4075,var_4076,)
func_4077 = relay.Function([var_4074,var_4075,var_4076,], output)
mutated_mod['func_4077'] = func_4077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_4079 = relay.TupleGetItem(func_2609_call(), 1)
call_4080 = relay.TupleGetItem(func_2611_call(), 1)
uop_4085 = relay.log10(call_4079.astype('float64')) # shape=(15, 12, 13)
uop_4087 = relay.log10(call_4080.astype('float64')) # shape=(15, 12, 13)
output = uop_4085
output2 = uop_4087
func_4097 = relay.Function([], output)
mod['func_4097'] = func_4097
mod = relay.transform.InferType()(mod)
mutated_mod['func_4097'] = func_4097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4097_call = mutated_mod.get_global_var('func_4097')
call_4098 = func_4097_call()
output = call_4098
func_4099 = relay.Function([], output)
mutated_mod['func_4099'] = func_4099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3170_call = mod.get_global_var('func_3170')
func_3171_call = mutated_mod.get_global_var('func_3171')
call_4171 = func_3170_call()
call_4172 = func_3170_call()
output = call_4171
output2 = call_4172
func_4177 = relay.Function([], output)
mod['func_4177'] = func_4177
mod = relay.transform.InferType()(mod)
mutated_mod['func_4177'] = func_4177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4177_call = mutated_mod.get_global_var('func_4177')
call_4178 = func_4177_call()
output = call_4178
func_4179 = relay.Function([], output)
mutated_mod['func_4179'] = func_4179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3744_call = mutated_mod.get_global_var('func_3744')
call_4244 = relay.TupleGetItem(func_3742_call(), 0)
call_4245 = relay.TupleGetItem(func_3744_call(), 0)
output = relay.Tuple([call_4244,])
output2 = relay.Tuple([call_4245,])
func_4249 = relay.Function([], output)
mod['func_4249'] = func_4249
mod = relay.transform.InferType()(mod)
output = func_4249()
func_4250 = relay.Function([], output)
mutated_mod['func_4250'] = func_4250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2895_call = mod.get_global_var('func_2895')
func_2897_call = mutated_mod.get_global_var('func_2897')
call_4267 = relay.TupleGetItem(func_2895_call(), 1)
call_4268 = relay.TupleGetItem(func_2897_call(), 1)
uop_4278 = relay.asin(call_4267.astype('float32')) # shape=(7, 14, 3)
uop_4280 = relay.asin(call_4268.astype('float32')) # shape=(7, 14, 3)
var_4289 = relay.var("var_4289", dtype = "float32", shape = (7, 14, 3))#candidate|4289|(7, 14, 3)|var|float32
bop_4290 = relay.floor_divide(uop_4278.astype('float64'), relay.reshape(var_4289.astype('float64'), relay.shape_of(uop_4278))) # shape=(7, 14, 3)
bop_4293 = relay.floor_divide(uop_4280.astype('float64'), relay.reshape(var_4289.astype('float64'), relay.shape_of(uop_4280))) # shape=(7, 14, 3)
func_3680_call = mod.get_global_var('func_3680')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_4296 = relay.TupleGetItem(func_3680_call(), 0)
call_4297 = relay.TupleGetItem(func_3681_call(), 0)
func_143_call = mod.get_global_var('func_143')
func_146_call = mutated_mod.get_global_var('func_146')
const_4303 = relay.const([8.804543,-4.754709,-3.587484,6.837121,-1.302425,-2.271679,6.537706,-4.630625,-0.378273,0.579246,6.960316,-7.648676,7.944416,5.143126,-8.638021,6.940513,-1.712963,-3.110141,-7.668468,-2.017659,-5.549242,-0.807054,-3.488810,6.669940,9.339121,-7.087885,-7.519599,-2.426821,2.902205,-1.470168,6.102023,6.585706,2.556606,-6.852391,5.758572,-9.555464,5.627121,3.271890,-8.886769,-1.083433,2.707729,-4.251361,5.060945,9.597136,4.161360,2.476592,7.631613,-0.838711,-1.194281,3.515171,7.014251,0.429363,-7.129941,-4.343270,9.149535,-9.534031,-6.754441,-3.926934,-2.177549,-3.519182,8.436799,-6.025092,-8.852050,-3.515895,6.665243,-2.480723,4.788901,-7.937561,-4.596963,-9.384026,5.907746,3.293708,-4.486657,-4.284238,8.311237,-8.394726,-7.604597,-9.054114,2.319775,4.450003,-0.687241,-5.190635,5.578561,2.736513,2.341748,9.741371,-4.929603,-4.875820,6.833975,1.605565,3.815996,1.106357,-3.962525,-8.072801,-3.598199,3.996428,4.981677,4.814627,-5.302535,6.039075,-4.670960,-9.848504,5.624279,0.610623,8.661261,9.367558,-7.751011,-4.346460,-6.747847,7.877055,-6.738975,7.118443,-4.419834,-7.987249,3.268406,-5.972590,1.885175,3.881757,-0.240047,4.823349,0.816225,-7.240408,0.144751,9.121309,-4.462044,4.936429,4.533140,-5.371426,5.692204,-9.594263,-0.958629,-1.887853,2.542240,-4.983234,3.557455,-4.270089,2.700451,-9.942159,6.726694,-7.720512,-1.022982,3.996505,5.865578,6.340999,-9.877117,0.986644,5.470606,-9.948298,6.003434,-2.048576,-4.130585,-1.334670,8.759191,7.904747,-0.875802,-0.938456,1.146346,-2.127170,-4.566606,5.452774,1.950007,6.209680,-9.143950,8.196582,2.775880,-1.359907,-2.655901,5.078995,-2.356102,0.405137,-1.418394,6.585321,0.298559,-5.247168,-0.217584,-7.370405,5.680187,-9.308833,-4.874556,2.040277,6.355744,7.143118,-2.294965,7.950120,2.331646,9.202891,0.097806,8.047367,-0.067901,-8.775628,0.660185,-0.232456,-8.523650,0.849775,8.646680,-4.377743,-4.991578,-5.005511,-0.189703,6.910115,-9.804070,-3.114183,-0.147942,-9.003883,7.187229,1.394487,-0.855126,7.930758,-1.912047,5.536972,-1.839061,-7.330225,6.405085,2.049676,-7.705141,-7.106450,-3.672985,-3.257854,-5.598466,7.292077,3.752763,1.745281,9.356967,7.468329,2.449435,9.886702,-4.392972,-2.358664,-5.251128,-7.597168,8.341352,-9.768034,4.796959,-7.219637,8.436714,9.370274,-7.322418,-6.109255,-7.811621,3.991911,-2.287186,8.368885,-3.777505,2.267826,3.525184,0.413766,-6.996210,-0.651282,0.109353,1.049254,0.513754,7.763967,4.097313,6.672364,7.548496,1.615272,9.802134,5.011913,2.121855,-0.327866,-3.491382,1.147661,2.457661,-1.612774,-0.428728,-4.028239,-7.014516,6.433378,3.686050,0.898994,2.092362,0.281505,1.863570,-1.279450,7.974098,-5.548552,-7.033227,-0.267824,7.909812,-6.603959,-3.083453,1.464905,7.975770,3.060392,2.158899,1.172375,6.510032,4.853102,1.383692,1.441623,8.647726,-5.089982,1.880197,8.568854,3.959575,-8.630483,-0.049989,8.668697,-9.478814,1.507552,9.689421,-7.461982,8.910734,-3.187820,0.874983,7.414542,8.900206,1.044658,-2.546931,5.804939,-6.141859,8.614806,-2.253707,-4.503785,8.492966,-8.204451,9.304297,-8.485336,5.647594,8.942342,-7.623981,9.691024,0.558828,8.639736,6.860088,7.721655,-5.590933,2.228741,1.037834,-0.782218,3.583348,-7.659121,1.778966,2.258364,6.662243,-3.562256,8.112787,9.167265,-1.025039,-3.133518,5.691417,5.568578,-3.479180,-9.332755,1.517555,2.114544,-6.111125,5.008273,-8.511869,-3.796927,9.659381,4.542008,-6.211439,2.365953,3.615562,-1.078775,-9.182195,2.345848,-3.269171,-6.363942,-7.256978,-6.524508,0.371143,-2.758039,-3.611412,2.882100,3.034709,-0.335840,7.253543,-8.092393,9.002863,-5.485897,6.308059,9.637316,6.011312,0.768301,0.551292,-1.439877,8.829943,-3.100472,1.065619,4.452036,-6.665452,-3.817218,-5.037644,1.543201,-7.807375,0.010530,1.087894,5.353151,-2.186695,-7.910574,7.327740,8.878362,9.688560,-3.044706,2.111383,-7.131499,-2.894017,-9.544259,8.914716,-9.391038,4.395271,7.005864,-1.112914,5.181907,9.194736,-4.881336,6.686308,9.987208,2.661618,0.088134,-2.700172,3.063578,3.296679,8.115091,8.629897,-9.826426,5.585855,7.471640,-4.117442,-9.199196,-3.700511,-8.059894,-0.921987,-4.381539,-6.406960,1.920740,6.827870,3.454792,-7.695634,-3.457114,-4.712624,-6.596506,-3.449690,-4.238412,-6.727139,2.252009,7.258388,-9.764960,1.010956,-9.031771,1.970210,-9.435347,-7.455975,3.994520,-6.562010,-6.822228,-1.690846,-4.218627,-1.602150,5.490374,-2.038219,7.017260,8.262983,1.861893,-1.020005,-6.687082,2.273444,6.893255,-8.378178,-2.842869,-9.550561,1.757731,9.230859,6.143882,-9.668873,5.641365,8.300500,7.706753,-0.620976,-6.121127,-6.846310,-5.489416,5.322461,8.147513,-4.499628,7.032738,-4.870462,6.643399,-8.820709,7.444111,-3.417383,9.061778,0.028668,-8.569761,-6.592107,-4.481842,7.310945,-6.015858,-9.781978,-0.071379,-2.272325,1.280789,-2.902431,-5.071234,-6.099430,-0.729765,-0.265760,-2.586118,-4.541496,-0.395286,9.972620,8.501230,7.789989,-6.240247,4.987479,4.575448,-7.678807,-7.376643,6.963488,5.440530,-3.553005,-3.424272,-0.100593,-3.603134,6.927519,8.099478,1.872252,0.742184,-2.555745,1.834234,-9.788807,5.825118,9.857024,-0.697802,5.847869,-4.028813,4.494209,-4.434333,-5.736223,-2.895552,1.340808,-8.378076,-3.927697,-7.033874,5.071902,-4.081797,-4.777975,-2.427671,3.443288,-6.462846,7.922851,-9.160733,-5.491279,-7.247056,3.662329,-0.303750,-5.114966,3.272573,2.635093,2.830240,4.613490,-9.344010,-9.528095,-0.804604,5.443351,-3.268124,8.063112,9.108736,9.435004,-3.723366,-3.876404,-1.075498,-7.533689,5.540827,9.966789,-2.501603,-4.833459,-8.525204,-2.794068,-9.078408,7.113492,-4.840488,2.655695,-2.481379,8.731415,4.104588,-6.177385,-6.497527,-7.439292,-3.522974,-8.429278,-9.482844,4.097086,7.768472,5.530017,-2.698363,-7.170810,-7.645609,-0.806262,4.538024,7.732883,-5.970604,-7.617432,-6.788497,-2.119416,-5.001255,-6.879956,-7.737682,0.129368,6.684152,4.932151,6.242400,-6.660948,-3.979592,0.065219,-6.031972,-3.169515,-7.815449,0.813260,4.427441,1.363794,-9.700711,1.023791,3.618994,9.287497,8.463588,-4.191065,-9.730806,-4.416004,-7.776433,-4.653224,5.249774,0.702777,1.709964,-6.480543,-7.437257,-8.358033,6.886147,2.428758,-2.684900,2.235175,-5.894153,1.464461,-3.039465,1.012910,8.441529,9.359543,-3.609152,-9.354391,1.774744,5.849519,-9.969475,7.159564,2.038214,-4.834789,0.421550,6.696782,-8.140410], dtype = "float32")#candidate|4303|(650,)|const|float32
call_4302 = relay.TupleGetItem(func_143_call(relay.reshape(const_4303.astype('float32'), [10, 5, 13])), 0)
call_4304 = relay.TupleGetItem(func_146_call(relay.reshape(const_4303.astype('float32'), [10, 5, 13])), 0)
output = relay.Tuple([bop_4290,call_4296,call_4302,const_4303,])
output2 = relay.Tuple([bop_4293,call_4297,call_4304,const_4303,])
func_4305 = relay.Function([var_4289,], output)
mod['func_4305'] = func_4305
mod = relay.transform.InferType()(mod)
mutated_mod['func_4305'] = func_4305
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4306 = relay.var("var_4306", dtype = "float32", shape = (7, 14, 3))#candidate|4306|(7, 14, 3)|var|float32
func_4305_call = mutated_mod.get_global_var('func_4305')
call_4307 = func_4305_call(var_4306)
output = call_4307
func_4308 = relay.Function([var_4306], output)
mutated_mod['func_4308'] = func_4308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4177_call = mod.get_global_var('func_4177')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_4310 = func_4177_call()
call_4311 = func_4177_call()
output = call_4310
output2 = call_4311
func_4316 = relay.Function([], output)
mod['func_4316'] = func_4316
mod = relay.transform.InferType()(mod)
output = func_4316()
func_4317 = relay.Function([], output)
mutated_mod['func_4317'] = func_4317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3341_call = mod.get_global_var('func_3341')
func_3342_call = mutated_mod.get_global_var('func_3342')
call_4320 = relay.TupleGetItem(func_3341_call(), 0)
call_4321 = relay.TupleGetItem(func_3342_call(), 0)
output = relay.Tuple([call_4320,])
output2 = relay.Tuple([call_4321,])
func_4323 = relay.Function([], output)
mod['func_4323'] = func_4323
mod = relay.transform.InferType()(mod)
output = func_4323()
func_4324 = relay.Function([], output)
mutated_mod['func_4324'] = func_4324
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4328 = relay.var("var_4328", dtype = "uint8", shape = (9, 10, 2))#candidate|4328|(9, 10, 2)|var|uint8
var_4329 = relay.var("var_4329", dtype = "uint8", shape = (9, 10, 2))#candidate|4329|(9, 10, 2)|var|uint8
bop_4330 = relay.minimum(var_4328.astype('uint8'), relay.reshape(var_4329.astype('uint8'), relay.shape_of(var_4328))) # shape=(9, 10, 2)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_4336 = relay.TupleGetItem(func_2609_call(), 0)
call_4337 = relay.TupleGetItem(func_2611_call(), 0)
output = relay.Tuple([bop_4330,call_4336,])
output2 = relay.Tuple([bop_4330,call_4337,])
func_4338 = relay.Function([var_4328,var_4329,], output)
mod['func_4338'] = func_4338
mod = relay.transform.InferType()(mod)
var_4339 = relay.var("var_4339", dtype = "uint8", shape = (9, 10, 2))#candidate|4339|(9, 10, 2)|var|uint8
var_4340 = relay.var("var_4340", dtype = "uint8", shape = (9, 10, 2))#candidate|4340|(9, 10, 2)|var|uint8
output = func_4338(var_4339,var_4340,)
func_4341 = relay.Function([var_4339,var_4340,], output)
mutated_mod['func_4341'] = func_4341
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4363 = relay.var("var_4363", dtype = "int32", shape = (11, 16, 6))#candidate|4363|(11, 16, 6)|var|int32
const_4364 = relay.const([[[-10,-3,5,6,2,3],[1,3,6,5,2,8],[3,-9,9,-4,10,7],[-1,-3,6,3,9,3],[7,-5,-1,6,6,-10],[-7,5,4,-5,5,-7],[5,10,7,-9,1,-5],[8,-10,-7,1,-5,-3],[10,-1,5,6,8,-2],[-9,-1,-7,-7,-6,-9],[-5,6,9,-8,-7,-2],[9,-10,3,-1,-7,3],[9,-8,4,7,-10,-9],[4,9,-8,-2,10,3],[-8,-6,-9,6,8,2],[-3,-1,-3,5,-10,9]],[[-7,5,4,3,-4,-6],[7,-8,8,-6,10,8],[-10,1,9,-9,2,6],[-4,8,7,1,-8,10],[1,-8,3,-4,-9,6],[4,4,1,-2,10,-5],[5,-2,4,-8,-6,-6],[10,-4,5,-7,-5,-5],[-1,-3,6,-8,1,4],[2,4,6,-8,10,-5],[2,-5,3,5,-6,4],[4,3,-4,5,-6,-3],[-9,-1,5,-7,10,-3],[-2,8,7,-10,-6,10],[-9,-5,4,-1,10,-5],[10,3,-3,-4,7,3]],[[-5,-6,-5,10,-1,-2],[4,-9,3,-1,-5,-4],[1,3,9,-1,-8,-3],[3,-8,-10,-9,-4,-1],[4,2,6,-8,-4,-6],[-5,-5,-4,-8,4,3],[-8,8,-3,-9,-3,-6],[6,6,3,3,9,-4],[8,1,-8,8,7,6],[-7,8,-7,-6,6,-3],[6,-10,-3,7,6,3],[-2,-10,7,10,-4,-1],[-3,-3,1,-2,1,-1],[8,-4,-7,8,8,-10],[-7,-8,-1,1,-7,4],[2,6,-10,6,6,2]],[[-8,3,-2,2,3,2],[10,9,2,9,1,-5],[-2,-1,-4,-10,-7,2],[-5,-1,-6,-2,8,6],[-7,2,-10,-3,2,9],[-10,10,-3,7,5,-6],[-10,-9,-2,-8,10,10],[-9,-2,-8,-6,-1,4],[-7,2,8,4,8,8],[-10,8,-8,-10,1,9],[5,8,4,-2,4,6],[1,1,5,9,6,5],[-8,-3,7,8,9,-7],[-7,-3,-2,2,9,1],[1,-9,-9,-10,-9,6],[5,7,-10,-7,1,8]],[[9,7,3,3,-9,-2],[-7,3,-7,2,-3,-6],[-3,-1,-2,-8,-3,10],[4,-2,8,-1,-10,2],[5,1,-3,2,9,10],[6,-4,-4,5,-10,1],[2,-4,8,2,-10,-3],[10,-10,-3,-4,-10,-8],[-5,-2,-1,-2,7,-7],[-3,-10,2,7,1,2],[-6,2,5,10,-4,-4],[9,10,-3,3,-8,9],[8,-5,-1,-4,-3,5],[-8,-9,-9,-9,-8,-4],[-10,7,2,9,1,-3],[-10,1,5,5,-1,8]],[[-7,8,-8,8,-1,-5],[2,5,9,-6,-2,6],[3,3,-6,-5,7,-10],[-6,-4,-3,10,-4,-1],[-10,4,5,3,3,-3],[-6,2,2,10,-10,4],[3,1,8,2,8,-4],[-8,-1,1,-8,2,10],[-3,1,5,1,1,7],[5,-9,-5,-5,10,-2],[2,9,1,10,-2,-1],[6,6,3,7,3,10],[9,-1,-3,-1,4,-1],[-1,-2,1,1,3,-7],[1,4,-1,1,2,-10],[-6,2,-3,6,-5,9]],[[2,-3,7,1,5,-1],[-2,6,-8,-8,9,4],[-2,-8,-1,-3,6,7],[-8,-1,-8,9,7,-1],[-4,-9,7,-9,-8,-8],[-5,-1,8,6,10,1],[2,-5,7,-5,-5,8],[-10,2,5,4,-2,-10],[-4,-8,-4,2,1,4],[-5,1,-3,-1,7,8],[7,1,-10,-2,9,-1],[-1,8,2,3,3,7],[-4,-1,-4,-10,-3,-10],[4,-9,2,-8,3,-8],[-10,-2,5,-2,-6,10],[2,-10,-3,-9,-10,9]],[[-8,-8,5,-6,9,9],[-7,-2,4,4,-2,-2],[-3,-3,1,9,-1,10],[7,10,-6,-7,-1,-6],[1,-10,2,-9,5,2],[-5,5,9,9,-3,-9],[7,-10,9,3,3,4],[-5,2,6,-6,-4,7],[8,9,-5,8,8,-2],[3,-6,1,4,4,8],[10,3,6,-9,-5,4],[1,-4,10,-6,3,1],[-4,10,1,-10,-3,-8],[2,-3,-8,-7,-9,-9],[-8,3,-7,-5,-9,10],[2,-4,-4,4,-2,5]],[[4,-10,-2,5,2,-1],[-4,3,-1,5,7,-8],[4,9,9,-5,-5,-7],[1,-8,9,5,6,-9],[3,10,-5,-10,-10,-4],[-2,-3,3,-3,9,-9],[-3,-4,-4,-7,6,4],[-6,2,-3,7,7,-2],[10,-5,9,9,-2,-10],[-5,1,4,5,-10,-10],[-3,-6,-6,1,6,-5],[1,6,9,10,-4,-7],[6,2,9,9,-10,-4],[-5,-2,-10,5,-5,7],[-10,-7,-7,5,-8,-9],[1,-9,-5,7,8,1]],[[8,-3,9,-6,8,3],[2,9,7,5,8,-8],[8,2,-7,-8,-9,10],[1,-4,1,-4,-7,1],[3,-3,3,-3,-9,9],[-6,-10,7,2,6,-9],[-3,-10,-8,-6,8,-3],[3,1,2,7,-8,4],[7,-5,2,-9,-9,-7],[1,-1,5,9,-3,-9],[2,-3,-2,-6,-3,-1],[-7,9,-1,-4,-2,-9],[-10,-6,-1,-7,2,1],[-7,3,10,-4,-6,4],[3,-10,-4,3,-9,6],[-3,-3,3,9,3,-1]],[[-9,1,-9,-5,-10,7],[-3,-9,-9,-4,-7,9],[1,1,1,-8,-8,6],[-1,-2,-5,8,-1,-2],[-9,5,3,8,-2,-9],[-3,-3,-7,10,1,10],[3,4,4,-6,-4,1],[-5,-1,-1,1,-9,-7],[-5,-6,-1,10,4,-7],[2,1,6,-3,-4,9],[-7,9,5,4,-5,6],[-9,-1,2,1,-3,4],[-8,-10,3,8,-10,-10],[5,6,-6,-9,1,-8],[-9,-1,-3,2,1,-6],[3,-4,2,-1,8,10]]], dtype = "int32")#candidate|4364|(11, 16, 6)|const|int32
bop_4365 = relay.bitwise_or(var_4363.astype('int32'), relay.reshape(const_4364.astype('int32'), relay.shape_of(var_4363))) # shape=(11, 16, 6)
output = relay.Tuple([bop_4365,])
output2 = relay.Tuple([bop_4365,])
func_4396 = relay.Function([var_4363,], output)
mod['func_4396'] = func_4396
mod = relay.transform.InferType()(mod)
mutated_mod['func_4396'] = func_4396
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4397 = relay.var("var_4397", dtype = "int32", shape = (11, 16, 6))#candidate|4397|(11, 16, 6)|var|int32
func_4396_call = mutated_mod.get_global_var('func_4396')
call_4398 = func_4396_call(var_4397)
output = call_4398
func_4399 = relay.Function([var_4397], output)
mutated_mod['func_4399'] = func_4399
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4455 = relay.var("var_4455", dtype = "float64", shape = (4, 7, 3))#candidate|4455|(4, 7, 3)|var|float64
var_4456 = relay.var("var_4456", dtype = "float64", shape = (4, 7, 3))#candidate|4456|(4, 7, 3)|var|float64
bop_4457 = relay.multiply(var_4455.astype('float64'), relay.reshape(var_4456.astype('float64'), relay.shape_of(var_4455))) # shape=(4, 7, 3)
func_3933_call = mod.get_global_var('func_3933')
func_3934_call = mutated_mod.get_global_var('func_3934')
call_4461 = func_3933_call()
call_4462 = func_3933_call()
var_4464 = relay.var("var_4464", dtype = "float64", shape = (4, 7, 3))#candidate|4464|(4, 7, 3)|var|float64
bop_4465 = relay.not_equal(var_4455.astype('bool'), relay.reshape(var_4464.astype('bool'), relay.shape_of(var_4455))) # shape=(4, 7, 3)
func_3680_call = mod.get_global_var('func_3680')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_4476 = relay.TupleGetItem(func_3680_call(), 0)
call_4477 = relay.TupleGetItem(func_3681_call(), 0)
func_2764_call = mod.get_global_var('func_2764')
func_2766_call = mutated_mod.get_global_var('func_2766')
const_4479 = relay.const([-6,4,-3,-7,8,5,1,-5,1,10,-2,4,8,-9,3,-9,-4,4,-7,-6,-4,-8,8,-6,9,6,4,7,2,-1,7,3,-4,1,-9,-8,-9,-8,2,-5,-9,4,-3,-5,6,9,7,7,10,-5,-8,-3,-1,-3,4,6,2,-9,3,-9,2,-2,-1,-10,-10,1,-10,-4,-7,6,8,-7,1,3,-9,-3,-2,10,6,6,7,-6,4,-9,-9,-2,-6,7,-4,1,5,-4,9,-2,-4,-2,6,9,10,-10,-3,-5,-1,4,5,1,-9,6,-7,-4,-7,-1,6,4,7,4,6,9,-4,-7,10,8,10,-7,4,-9,8,3,-9,-10,1,-6,-3,-6,-8,5,-10,-7,-9,-9,-4,4,-8,7], dtype = "int8")#candidate|4479|(144,)|const|int8
call_4478 = relay.TupleGetItem(func_2764_call(relay.reshape(const_4479.astype('int8'), [2, 72])), 2)
call_4480 = relay.TupleGetItem(func_2766_call(relay.reshape(const_4479.astype('int8'), [2, 72])), 2)
func_444_call = mod.get_global_var('func_444')
func_446_call = mutated_mod.get_global_var('func_446')
const_4483 = relay.const([-1.945361,-3.638505,2.244021,-3.791320,-6.762793,2.725158,3.655499,9.611029,1.178442,-6.576013,7.304526,-2.730209,7.739634,-1.627647,0.422912,3.776853,-0.076726,6.768206,9.956377,-9.833097,-1.546130,4.830421,1.140645,6.850301,0.057601,5.559449,7.978268,4.096525,6.999058,9.680063,8.322613,-4.282225,7.367146,-0.613207,-8.553917,-9.481692,-3.605419,-0.952420,-2.052614,-5.302181,7.396819,-2.775055,4.661543,6.978534,-8.638636,-8.537257,1.340366,0.341142,-0.175437,4.885567,-7.469546,7.687286,8.753587,-3.945426,8.307819,0.524806,-7.734802,0.622259,-7.084851,0.863137,-6.878631,-3.215308,-7.491422,-1.459095,2.867917,3.485723,9.260366,-9.907315,-7.406984,-1.333682,3.302109,-8.604769,5.565728,-4.833280,-7.728012,-9.572304,5.347273,-8.488353,-4.318235,-8.070641,4.966644,8.623772,-4.512336,2.649248,-2.296939,-6.406599,-0.914335,-8.585064,-4.741374,6.819040,-7.544548,4.002261,-6.707229,8.120678,-7.601072,6.753456,-0.793963,-2.943523,-0.960907,6.475547,8.901675,0.970042,3.313320,-4.587942,-4.375162,-5.035384,0.067354,-4.960125,-4.196671,0.244001,7.211438,-7.589101,9.320570,-4.218881,-0.078317,3.947502,4.732626,6.992231,-1.393448,-5.839529,7.075151,2.463864,1.322241,1.329069,2.516225,-3.504299,7.401923,-0.588383,-0.108743,-6.228331,5.782896,-3.310994,-2.474708,2.846823,1.901480,1.372557,-2.992139,-6.414329,-5.491200,9.991251,-7.150689,-6.824473,-0.183819,-4.084280,9.134772,-8.521085,-9.955574,0.094883,-3.929390,4.007435,0.242603,2.882369,4.338740,7.200616,2.827957,-8.594147,-0.664432,7.379412,7.346119,2.499380,-5.927992,9.015830,2.807398,-9.901445,9.955822,3.665762,-6.502221,8.058089,-3.412777,-5.407906,7.481653,6.853268,1.612585,0.491881,9.718158,-7.903719,-9.557795,-1.700245,-5.737927,3.252847,6.608712,-1.173855,6.577871,9.888854,-8.625834,0.291879,-2.450141,-3.809598,5.945730,1.452807,-8.767668,7.892942,4.198519,-2.445579,-8.567551,-0.699111,4.501838,6.785439,-1.998847,-7.899763,-5.569782,-7.964260,1.254445,7.314452,-0.111537,7.110132,-7.254047,2.863736], dtype = "float32")#candidate|4483|(208,)|const|float32
call_4482 = func_444_call(relay.reshape(const_4483.astype('float32'), [13, 2, 8]))
call_4484 = func_444_call(relay.reshape(const_4483.astype('float32'), [13, 2, 8]))
func_3680_call = mod.get_global_var('func_3680')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_4487 = relay.TupleGetItem(func_3680_call(), 1)
call_4488 = relay.TupleGetItem(func_3681_call(), 1)
bop_4494 = relay.less(const_4479.astype('bool'), relay.reshape(call_4478.astype('bool'), relay.shape_of(const_4479))) # shape=(144,)
bop_4497 = relay.less(const_4479.astype('bool'), relay.reshape(call_4480.astype('bool'), relay.shape_of(const_4479))) # shape=(144,)
func_3933_call = mod.get_global_var('func_3933')
func_3934_call = mutated_mod.get_global_var('func_3934')
call_4498 = func_3933_call()
call_4499 = func_3933_call()
func_4097_call = mod.get_global_var('func_4097')
func_4099_call = mutated_mod.get_global_var('func_4099')
call_4515 = func_4097_call()
call_4516 = func_4097_call()
func_3742_call = mod.get_global_var('func_3742')
func_3744_call = mutated_mod.get_global_var('func_3744')
call_4519 = relay.TupleGetItem(func_3742_call(), 0)
call_4520 = relay.TupleGetItem(func_3744_call(), 0)
bop_4526 = relay.logical_xor(var_4455.astype('int16'), relay.reshape(bop_4457.astype('int16'), relay.shape_of(var_4455))) # shape=(4, 7, 3)
func_57_call = mod.get_global_var('func_57')
func_59_call = mutated_mod.get_global_var('func_59')
call_4533 = func_57_call(relay.reshape(call_4498.astype('bool'), [7, 14, 3]))
call_4534 = func_57_call(relay.reshape(call_4498.astype('bool'), [7, 14, 3]))
func_3420_call = mod.get_global_var('func_3420')
func_3422_call = mutated_mod.get_global_var('func_3422')
call_4540 = relay.TupleGetItem(func_3420_call(), 0)
call_4541 = relay.TupleGetItem(func_3422_call(), 0)
output = relay.Tuple([call_4461,bop_4465,call_4476,call_4482,const_4483,call_4487,bop_4494,call_4498,call_4515,call_4519,bop_4526,call_4533,call_4540,])
output2 = relay.Tuple([call_4462,bop_4465,call_4477,call_4484,const_4483,call_4488,bop_4497,call_4499,call_4516,call_4520,bop_4526,call_4534,call_4541,])
func_4551 = relay.Function([var_4455,var_4456,var_4464,], output)
mod['func_4551'] = func_4551
mod = relay.transform.InferType()(mod)
var_4552 = relay.var("var_4552", dtype = "float64", shape = (4, 7, 3))#candidate|4552|(4, 7, 3)|var|float64
var_4553 = relay.var("var_4553", dtype = "float64", shape = (4, 7, 3))#candidate|4553|(4, 7, 3)|var|float64
var_4554 = relay.var("var_4554", dtype = "float64", shape = (4, 7, 3))#candidate|4554|(4, 7, 3)|var|float64
output = func_4551(var_4552,var_4553,var_4554,)
func_4555 = relay.Function([var_4552,var_4553,var_4554,], output)
mutated_mod['func_4555'] = func_4555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4097_call = mod.get_global_var('func_4097')
func_4099_call = mutated_mod.get_global_var('func_4099')
call_4580 = func_4097_call()
call_4581 = func_4097_call()
func_4305_call = mod.get_global_var('func_4305')
func_4308_call = mutated_mod.get_global_var('func_4308')
const_4597 = relay.const([4.485009,-0.380023,-2.353843,4.908344,-9.180070,-3.518396,-8.645323,-9.883079,2.044896,-3.096535,-9.354313,-6.102597,-0.630299,-5.762280,9.752452,-2.223950,-3.584487,-9.835435,7.379653,8.678063,-6.955086,4.244124,4.902402,7.133680,-4.312140,6.769351,-2.561608,5.721280,2.689197,-3.571467,-6.766394,3.123789,8.283624,-2.992438,6.361326,-8.096945,5.685194,-1.353772,-4.305109,0.462308,-8.839194,6.511627,-1.518389,5.076534,-8.913402,-9.410815,-9.454342,2.936163,-7.873053,1.609132,5.116905,8.755454,3.783718,-7.686794,0.661282,3.065744,-4.896021,-7.939212,8.565685,-2.642383,7.606549,-9.287925,-9.370405,-0.519295,7.703288,9.363637,3.734340,8.578095,-0.074245,-4.075210,4.869190,0.413212,-4.684062,5.039203,-6.112570,3.107969,-5.879496,6.793644,-7.358364,7.933818,6.734941,-1.521934,-2.690524,-4.761045,7.719490,-5.861640,-8.318719,-8.379626,-3.630856,-9.173626,9.005277,-1.450964,6.329100,9.368641,8.644060,-3.297973,1.098358,-1.177320,-4.855669,-2.205605,0.558224,0.267619,8.513073,7.357081,7.379486,-8.411202,7.195653,-6.566702,-6.614447,-8.837641,3.909860,7.064062,-6.074102,-7.246381,-6.966826,-5.989802,5.512714,3.577286,-9.164780,-7.950263,-3.436923,-3.572437,-0.855226,-7.587862,-4.797973,-0.380902,9.616318,-7.262821,0.644137,3.629401,-5.448105,-2.558440,0.774626,-7.759116,-7.059045,4.194976,9.477014,-6.904899,-1.749355,-8.661218,-2.838485,-5.792105,-3.377863,2.010950,1.430240,0.135140,-4.195590,-3.223328,5.404747,6.286270,7.753713,-3.553757,6.412034,-9.053387,-8.717417,-5.374201,-9.201830,-5.470184,-3.005883,-3.135465,-2.819858,7.014457,7.030856,-9.937858,-2.321773,-4.838069,-7.146926,-2.863274,-9.557720,-7.376668,2.811856,0.300430,8.027738,1.237869,8.107384,-8.774785,8.601680,-3.817406,5.487948,-3.533163,7.706451,7.135499,5.674700,0.065039,9.455302,-6.414957,-3.548164,-7.900244,-8.458155,2.586404,6.326453,1.162170,2.142302,-9.684269,5.776411,-7.293874,8.731344,-9.541114,8.245399,-7.236744,9.578474,-7.423388,-6.798306,-2.307374,-8.280692,-0.583062,6.439310,-2.320641,-3.514676,2.551224,2.389918,-9.715090,3.814793,-4.981366,-9.047437,0.392333,6.271160,5.008628,-2.429366,-1.697470,-0.149911,4.451759,8.006039,-3.290581,-4.811088,9.113383,-3.432312,-9.902295,-4.292634,-7.219670,-6.639136,5.993272,4.403211,0.474235,-3.884888,-4.130231,4.768808,-4.754948,-5.418761,-6.998482,-5.842805,-6.115007,2.610023,-7.671421,3.134221,-8.097863,4.684830,-9.099003,-4.381860,-3.274519,5.285617,8.323540,-4.757707,8.107291,0.936450,4.191734,7.786239,-2.288816,4.119984,8.363192,3.161534,-5.229682,4.787868,-5.168617,-8.333679,-3.988130,1.692592,-2.656473,4.792503,-8.168688,4.425654,-8.398027,-3.764667,1.167025,7.139022,-2.547120,-9.136368,2.916283,0.001481,-2.795280,2.090177,-5.282269,-4.619060,-6.220877,-9.985215,-0.305744,4.226103,8.535478,7.357894,7.973757,0.807592,-7.770415,-6.972113,3.961581], dtype = "float32")#candidate|4597|(294,)|const|float32
call_4596 = relay.TupleGetItem(func_4305_call(relay.reshape(const_4597.astype('float32'), [7, 14, 3])), 2)
call_4598 = relay.TupleGetItem(func_4308_call(relay.reshape(const_4597.astype('float32'), [7, 14, 3])), 2)
var_4600 = relay.var("var_4600", dtype = "float32", shape = (294,))#candidate|4600|(294,)|var|float32
bop_4601 = relay.multiply(const_4597.astype('float32'), relay.reshape(var_4600.astype('float32'), relay.shape_of(const_4597))) # shape=(294,)
func_598_call = mod.get_global_var('func_598')
func_602_call = mutated_mod.get_global_var('func_602')
const_4606 = relay.const(6, dtype = "uint64")#candidate|4606|()|const|uint64
const_4607 = relay.const([[-3,-7,2,3],[9,8,-9,-4],[3,-5,-8,-1]], dtype = "uint64")#candidate|4607|(3, 4)|const|uint64
const_4608 = relay.const([-3,8,-9,8,-10,-3,4,-6,-4,3,10,-5,-4,-1,-9,-9,-9,2,5,-7,2,-7,-3,-1,2,5,2,4,-3,3,7,2,6,-5,8,8,-1,-8,-10,3,5,-3,-8,-6,-5,-2,-8,10,10,9,-7,-8,3,-5,5,4,-6,10,5,-4,3,-3,-2,-7,8,10,2,-4,-4,-8,6,10,1,7,-3,8,-9,-9,6,3,9,-9,-1,-5,-3,5,-5,3,-4,1,1,5,2,9,9,10,-5,-10,2,-1,-8,-4,3,8,8,-7,1,-7,8,-1,-9,-5,-1,-9,10,-10,8,1,3,-9,9,10,-9,-2,-4,-2,-3,-5,3,7,-6,4,-3,5,4,-7,-9,-4,-3,-3,-1,-1,-3,-9,4,4,5,6,-2,-3,5,3,4,-2,6,-7,-2,1,7,-4,8,-1,-5,-2,-7,5,-3,-6,6,8,-3,8,3,3,-1,-3,6,-3,-2,-7,-10,-1,-1,-1,-4,10,4,-3,9,-1,2,9,-9,-8,-7,-1,9,1,-10,-8,1,-4,-10,-6,-2,1,-10,-3,-5,1,5,-1,6,4,-4,2,4,2,4,3,2,1,6,-2,-6,5,7,-6,7,10,-4,-7,-10,-2,-5,-10,3,-3,-9,10,-8,-7,-10,-7,-2,-6,-9,7,-2,-4,8,-7,9,-9,-5,-4,-1,-9,1,-8,2,3,7,-3,-1,-7,4,9,4,-2,5,3,4,-9,-7,-1,-10,-4,-4,-9,5,3,10,3,-10,-4,-10,4,-6,-2,-1,3,7,2,2,6,7,-9,3,-2,6,1,2,3,-10,10,7,-7,-9,-6,10,2,-5,-4,-10,3,-4,-5,2,2,-10,7,6,-4,3,-7,3,-8,-8,-7,1,-8,8,1,9,6,-8,9,-7,8,-4,-10,-6,-5,3,5,-6,10,8,4,5,-9,2,-6,2,8,-10,-2,9,1,3,-9,-2,-3,-8,-8,-8,5,-8,9,-4,-7,-5,3,8,7,1,-10,-3,-3,-9,-8,-1,-7,4,10,-2,4,-8,3,-10,-9,6,-6,-10,4,2,-8,-4,4,10,-6,3,-2,-7,-8,5,10,5,-2,6,6,-7,3,-9,7,-2,-4,5,5,10,10,9,9,-7,10,-7,3,3,3,-2,-3], dtype = "int64")#candidate|4608|(432,)|const|int64
call_4605 = relay.TupleGetItem(func_598_call(relay.reshape(const_4606.astype('uint64'), []), relay.reshape(const_4607.astype('uint64'), [6, 2, 1]), relay.reshape(const_4608.astype('int64'), [12, 36]), ), 1)
call_4609 = relay.TupleGetItem(func_602_call(relay.reshape(const_4606.astype('uint64'), []), relay.reshape(const_4607.astype('uint64'), [6, 2, 1]), relay.reshape(const_4608.astype('int64'), [12, 36]), ), 1)
output = relay.Tuple([call_4580,call_4596,bop_4601,call_4605,const_4606,const_4607,const_4608,])
output2 = relay.Tuple([call_4581,call_4598,bop_4601,call_4609,const_4606,const_4607,const_4608,])
func_4618 = relay.Function([var_4600,], output)
mod['func_4618'] = func_4618
mod = relay.transform.InferType()(mod)
mutated_mod['func_4618'] = func_4618
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4619 = relay.var("var_4619", dtype = "float32", shape = (294,))#candidate|4619|(294,)|var|float32
func_4618_call = mutated_mod.get_global_var('func_4618')
call_4620 = func_4618_call(var_4619)
output = call_4620
func_4621 = relay.Function([var_4619], output)
mutated_mod['func_4621'] = func_4621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2895_call = mod.get_global_var('func_2895')
func_2897_call = mutated_mod.get_global_var('func_2897')
call_4628 = relay.TupleGetItem(func_2895_call(), 1)
call_4629 = relay.TupleGetItem(func_2897_call(), 1)
output = relay.Tuple([call_4628,])
output2 = relay.Tuple([call_4629,])
func_4631 = relay.Function([], output)
mod['func_4631'] = func_4631
mod = relay.transform.InferType()(mod)
output = func_4631()
func_4632 = relay.Function([], output)
mutated_mod['func_4632'] = func_4632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3355_call = mod.get_global_var('func_3355')
func_3357_call = mutated_mod.get_global_var('func_3357')
call_4683 = func_3355_call()
call_4684 = func_3355_call()
output = call_4683
output2 = call_4684
func_4687 = relay.Function([], output)
mod['func_4687'] = func_4687
mod = relay.transform.InferType()(mod)
mutated_mod['func_4687'] = func_4687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4687_call = mutated_mod.get_global_var('func_4687')
call_4688 = func_4687_call()
output = call_4688
func_4689 = relay.Function([], output)
mutated_mod['func_4689'] = func_4689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3627_call = mod.get_global_var('func_3627')
func_3628_call = mutated_mod.get_global_var('func_3628')
call_4721 = relay.TupleGetItem(func_3627_call(), 1)
call_4722 = relay.TupleGetItem(func_3628_call(), 1)
func_4338_call = mod.get_global_var('func_4338')
func_4341_call = mutated_mod.get_global_var('func_4341')
var_4736 = relay.var("var_4736", dtype = "uint8", shape = (180,))#candidate|4736|(180,)|var|uint8
call_4735 = relay.TupleGetItem(func_4338_call(relay.reshape(var_4736.astype('uint8'), [9, 10, 2]), relay.reshape(var_4736.astype('uint8'), [9, 10, 2]), ), 1)
call_4737 = relay.TupleGetItem(func_4341_call(relay.reshape(var_4736.astype('uint8'), [9, 10, 2]), relay.reshape(var_4736.astype('uint8'), [9, 10, 2]), ), 1)
func_2740_call = mod.get_global_var('func_2740')
func_2744_call = mutated_mod.get_global_var('func_2744')
var_4746 = relay.var("var_4746", dtype = "int64", shape = (210,))#candidate|4746|(210,)|var|int64
var_4747 = relay.var("var_4747", dtype = "float32", shape = (84,))#candidate|4747|(84,)|var|float32
call_4745 = relay.TupleGetItem(func_2740_call(relay.reshape(call_4735.astype('float64'), [12, 15, 12]), relay.reshape(var_4746.astype('int64'), [1, 210]), relay.reshape(var_4747.astype('float32'), [84,]), ), 4)
call_4748 = relay.TupleGetItem(func_2744_call(relay.reshape(call_4735.astype('float64'), [12, 15, 12]), relay.reshape(var_4746.astype('int64'), [1, 210]), relay.reshape(var_4747.astype('float32'), [84,]), ), 4)
output = relay.Tuple([call_4721,call_4735,var_4736,call_4745,var_4746,var_4747,])
output2 = relay.Tuple([call_4722,call_4737,var_4736,call_4748,var_4746,var_4747,])
func_4752 = relay.Function([var_4736,var_4746,var_4747,], output)
mod['func_4752'] = func_4752
mod = relay.transform.InferType()(mod)
var_4753 = relay.var("var_4753", dtype = "uint8", shape = (180,))#candidate|4753|(180,)|var|uint8
var_4754 = relay.var("var_4754", dtype = "int64", shape = (210,))#candidate|4754|(210,)|var|int64
var_4755 = relay.var("var_4755", dtype = "float32", shape = (84,))#candidate|4755|(84,)|var|float32
output = func_4752(var_4753,var_4754,var_4755,)
func_4756 = relay.Function([var_4753,var_4754,var_4755,], output)
mutated_mod['func_4756'] = func_4756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3809_call = mod.get_global_var('func_3809')
func_3811_call = mutated_mod.get_global_var('func_3811')
call_4802 = func_3809_call()
call_4803 = func_3809_call()
func_1644_call = mod.get_global_var('func_1644')
func_1647_call = mutated_mod.get_global_var('func_1647')
var_4807 = relay.var("var_4807", dtype = "float32", shape = (84,))#candidate|4807|(84,)|var|float32
const_4808 = relay.const([-4,6,2,-6,4,7,-2,-10,-6,10,-5,-10,9,-6,10,8,10,-4,7,-9,9,2,6,-2,-8,10,1,8,-3,-8,10,7,-9,4,-2,9,-1,-3,-7,-1,-9,8,-10,7,-1,-6,-2,-10,-3,9,7,7,10,-7,4,2,1,-3,-6,-4,-5,9,3,-8,-4,-2,-4,-3,10,3,-9,7,-7,-1,-1,2,-7,-3,10,7,-8,-7,1,-1,9,4,9,8,-4,-10,7,-10,3,-7,7,-9,6,-9,5,5,-4,-3,-2,10,3,-2,-2,-7,8,-1,9,-3,-5,9,2,5,-4,-10,1,-4,-10,5,9,-8,-5,5,9,8,-10,-4,-10,10,-9,-10,-10,7,1,3,-5,8,-8,-5,-10,-10,1,-3,-7,4,-5,8,-1,7,-8,-1,-1,-4,-3,-7,5,3,3,6,-1,6,7,3,-9,-7,3,2,8,-3,9,1,-7,-10,2,-10,6,-1,2,-2,-6,-9,-8,3,9,4,7,-3,-2,7,-9,-9,7,-10,3,9,1,-10,-1,3,-10,9,4,4,-5,10,-1,8,8,-4,-10,-2,-3,9,5,3,1,-5,-5,3,-1,3,3,-8,1,-3,7,3,-8,-1,8,-2,-9,6,-5,4,-1,10,8,4,-1,2,2,7,8,7,-3,5,-6,-6,7,9,-8,-1,-6,-8,1,5,3,-5,2,-9,1,-9,-4,-9,6,10,-6,10,7,1,6,-1,-9,-2,-10,-8,-4,9,-1,-10,8,-10,-10,-8,-6,4,6,1,-6,6,3,-9,10,-4,6,-7,3,-9,-8,1,-6,6,-4,7,1,6,-9,10,10,-10,9,1,7,-6,-6,10,3,4,-6,-7,-6,10,5,5,-5,4,-6,-5,-4,9,9,-2,7,2,-8,-10,-10,-2,-2,10,5,1,-8,4,7,-10,5,1,-9,-7,9,-3,-8,4,5,-7,-8,2,5,6,1,10,-9,2,-3,-6,4,3,-8,4,-1,-4,9,6,1,-8,9,10,1,9,1,-8,7,-9,-6,-8,5,-9,7,-10,7,-1,-8,-6,3,2,-1,10,-10,4,-3,-7,6,3,-9,-2,-1,-3,-5,7,-4,-3,7,-4,-4,7,5,-6,-9,-6,1,3,2,2,-4,-5,-8,-5,4,6,-10,-3,-6,-5,7,-1,1,4,-3,1,7,-8,-6,4,2,8,-2,6,10,-10,7,9,9,-1,2,-10,8,4,10,-4,7,-6,-2,4,8,-3,9,-2,5,-3,-3,-6,2,5,-7,6,-2,2,7,-8,-3,-9,-4,3,4,6,10,8,-1,3,1,-3,-4,-9,-2,7,9,-10,-8,-10,-8,8,8,9,9,7,-3,-5,7,1,10,-7,-3,1,9,-4,10,4,-7,7,-6,8,-7,10,8,5,9,-8,-8,-6,2,3,-1,2,-1,6,3,1,-8,6,-2,5,-5,-4,1,10,-9,7,-2,-7,-8,-2,-8,5,-4,3,3,5,-10,1,-8,-7,3,-6,5,-8,6,-5,1,-2,2,10,3,1,6,-7,2,3,9,10,3,-8,6,-5,3,3,-3,1,8,-1,6,9,1,-3,1,6,-1,-3,8,-5,5,8,-1,-4,-3,-3,3,6,4,-6,-5,9,7,-1,9,-5,4,-2,2,-3,-9,3,6,5,1,7,6,-9,7,5,8,2,-3,6,-8,-10,3,10,5,3,9,-9,5,7,10,10,1,-1,-4,-2,5,-3,7,2,-1,7,5,6,-6,4,4,-5,5,1,-2,-6,-9,9,-2,-8,-6,-4,1,-2,2,4,-9,-3,2,6,9,2,10,-3,-4,5,8,-2,-9,7,-10,9,7,-4,8,-6,1,-6,-1,3,-4,5,10,-2,-2,2,9,1,-5,-8,6,-3,-3,-10,-10,10,-3,-5,-2,2,7,4,-7,-3,-10,7,-6,-5,-9,-1,-7,-2,-6,1,-5,10,7,7,10,6,2,6,-4,-7,5,2,9,-2,1,2,6,-8,-7,9,-5,-7,-10,7,5,7,-1,2,2,-4,-9,1,-10,2,-1,5,6,7,7,2,-7,4,9,-8,1,-6,-10,-10,3,8,-1,-2,-6,-4,4,-9,-4,-8,10,-4,10,5,-6,-2,5,2,4,-4,4,7,4,8,-8,1,-2,1,4,4,9,6,8,1,-4,4,2,6,5,4,-10,-3,9,-4,10,-10,6,2,-7,-5,7,-1,-9,7,-2,-9,-5,5,-6,6,9,-4,3,8,-10,-3,10,-8,-10,5,7,4,-8,-5,-8,-10,-8,-1,-4,-2,-1,3,-6,10,-7,10,1,-5,3,-3,10,9,10,8,-10,-8,5,10,-4,9,-7,7,-3,5,2,-8,-1,-2,-8,5,-1,8,-8,-7,-1,6,-5,6,-5,3,-6,10,9,-8,-2,-6,-10,1,5,10,4,5,-1,7,-1,1,-3,-5,-5,-1,10,2,-4,-7,2,-8,-5,8,-4,-2,-7,-4,-6,-3,4,7,-3,-5,1,5,-1,-2,6,4,2,6,-9,-10,-9,-5,8,10,-9,6,9,5,-4,8,-4,-3,10,-8,10,-5,2,6,2,-1,3,2,1,-1,2,-7,4,5,-1,-3,2,2,8,3,-7,10,4,-9,-1,1,2,2,-10,-9,1,-2,2,6,-5,1,-5,-10,-4,3,-1,-9,-2,10,7,3,-3,-10,8,-6,-6,2,7,10,3,5,6,1,-4,-2,-2,8,7,-2,-5,-9,-3,-2,-5,2,-6,5,10,1,-7,-6,7,6,-3,10,-5,10,-2,-10,5,-6,-10,4,-5,5,-10,-2,-4,-1,-5,4,-10,1,7,8,5,4,4,-3,-2,2,-9,7,3,8,-10,1,9,3,-5,-7,-4,-4,-8,9,7,-2,-8,-8,8,2,-2,-8,-6,6,-2,10,3,-6,2,1,-9,-6,1,-1,-1,4,7,-2,-3,-4,1,-10,-9,7,4,-1,-10,-1,10,-9,6,-4,-7,7,7,4,-9,-4,1,-2,-9,9,1,-2,3,-3,5,3,6,-2,3,-10,-10,-1,-6,-7,7,6,-3,8,-10,-4,-6,8,9,4,-8,4,-1,-1,9,3,2,-1,-10,3,-8,6,6,-8,8,6,-8,-5,5,-5,-4,10,2,2,-10,3,-4,6,6,6,9,1,-2,6,4,2,2,3,5,7,2,5,-10,9,-8,10,-7,-3,-7,6,10,9,-2,-5,10,2,1,-10,-2,-7,-4,-6,-7,-7,7,8,-3,-1,-1,-2,8,5,-5,10,-3,-6,3,-7,-2,-9,-10,-8,7,-8,6,1,5,-5,2,8,2,4,7,-10,-6,7,9,8,5,-4,7,-4,1,5,-5,-1,-8,-6,6,3,6,-7,5,1,-3,-2,-10,3,8,-7,10,3,4,-2,-7,4,4,10,-9,1,6,2,-2,9,4,4,-5,3,-6,10,9,9,-5,3,2,6,9,-5,-3,-10,10,1,1,-5,-9,2,-6,9,2,5,-8,-3,7,8,2,-6,-2,-10,-1,9,9,-7,-4,8,10,1,4,-7,-2,2,-2,6,5,8,10,-7,-1,-4,3,-3,5,3,10,10,-4,7,1,2,1,4,-7,10,7,5,8,-5,3,-2,-7,-6,7,8,7,5,-10,-9,2,-7,5,-1,9,6,5,7,-4,-2,6,-8,10,1,2,6,-9,-3,2,-7,-1,7,3,-7,-6,-8,10,7,9,1,8,-7,8,-1,-5,5,1,1,5,3,-8,-8,-6,10,3,-1,9,-9,-8,-9,-1,9,8,8,-10,7,-1,-8,-9,6,-2,-4,3,-7,-8,-3,5,-2,4,6,-2,-3,7,-2,4,8,-5,6,-6,8,-1,4,5,-9,-8,4,-10,-5,-10,1,4,-9,-2,8,8,-3,-7,7,10,2,2,8,-4,-9,9,-8,9,-4,2,8,-8,-1,7,10,5,-7,-7,-9,9,5,5,-3,-1,-7,10,5,8,4,1,5,3,2,-1,3,8,8,-3,10,-9,-9,2,-7,-7,6,-3,5,-4,-8,-10,5,-10,1,-5,9,6,2,-3,8,8,-1,6,-8,5,-5,8,-10,4,-4,-2,10,-5,8,1,-10,-10,9,7,6,5,6,3,2,1,6,-2,-3,-9,5,-7,-1,3,4,-9,-3,-4,-6,9,6,-5,-1,-9,4,-5,9,3,8,-2,-8,-5,-5,-2,-7,10,-8,8,-4,6,-6,-6,-5,-7,-4,7,9,-5,-10,5,7,-5,-10,8,9,-1,-9,9,5,6,6,3,5,2,-6,-5,4,-10,2,-10,6,-3,8,6,2,3,7,-5,-6,10,-6,5,-4,6,-4,6,-6,2,10,7,2,-10,-8,1,-4,7,5,-1,6,-6,4,2,-8,-5,-4,2,4,5,1,-9,-7,6,-6,-1,-6,5,-9,-1,-3,7,1,-1,5,9,2,-10,2,-10,-5,-3,10,-5,6,5,-4,-7,4,-10,-6,5,-6,-6,3,9,9,-2,-1,-5,3,-8,-4,10,5,-9,8,8,8,-2,-3,8,-2,-8,-7,4,7,-7,-9,9,8,4,3,-9,7,2,4,-2,2,1,-7,1,7,2,-4,9,-10,-9,-4,-4,2,10,9,2,4,-1,8,-2,10,10,-7,-8,-9,-2,7,-3,3,3,-5,-3,8,-9,-8,1,5,3,-10,10,10,-2,9,6,-1,4,-5,7,3,-10,-5,10,-4,-1,-6,6,5,4,5,6,10,2,-6,-9,-4,-3,-1,8,-6,2,4,-1,-5,-2,5,-4,7,2,-6,-6,1,-9,2,10,8,1,7,10,-7,10,-10,10,-4,-3,-1,-3,8,-7,-9,8,6,-1,1,4,-6,3,1,-5,4,-7,7,-1,10,-5,2,10,5,2,-7,-6,-3,8,2,10,3,5,5,-7,4,8,7,6,3,8,6,-2,-4,-4,-6,-4,-2,-9,7,-6,7,-6,3,-6,2,6,-7,7,-1,-8,5,-5,5,4,9,-10,3,3,-10,4,-3,9,9,3,-7,8,-5,9,-5,9,-2,-2,-6,10,-4,-7,-5,10,10,-5,-4,-1,3,8,-10,4,7,6,1,-1,-2,-5,-3,-2,-8,-2,-9,-1,10,2,8,3,-4,-1,8,-3,8,-7,2,-6,4,1,2,8,1,3,10,5,8,8,-7,6,8,10,1,-10,-5,-10,5,8,-2,5,10,5,-7,-6,5,-4,5,2,-2,-3,-5,4,5,-6,-7,-8,-5,7,-5,10,4,4,10,5,8,8,3,3,-8,-4,2,-3,4,-8,-2,-10,2,6,-9,5,9,3,7,-1,-5,-1,-6,3,-4,-10,1,3,-3,7,-7,1,6,-9,10,-2,-4,3,7,1,-10,6,-10,-7,5,5,6,10,-10,9,-9,-4,-3,-5,4,10,7,-7,6,-2,-8,4,2,10,-5,9,-1,8,-1,-4,1,1,3,-6,2,9,4,-5,-7,6,3,7,10,8,10,-8,-8,-10,-9,-10,-4,-2,-2,5,-2,-3,-8,-9,-8,2,10,1,-1,9,-7,2,7,2,-10,9,7,7,4,6,6,10,-7,6,-1,-9,-3,2,6,-9,10,-10,-2,6,4,8,9,-8,8,-6,6,-7,-8,-10,4,3,-9,-5,-10,7,-1,6,4,6,-5,-10,8,1,-8,-10,-2,8,-6,2,-2,-1,-5,-4,-8,-2,-1,-5,4,4,-9,-6,-9,-2,-7,-2,5,-3,8,-1,8,-1,-8,9,-4,-3,1,-6,4,-7,2,2,-3,-8,-4,9,-2,4,-1,-1,-10,-10,6,3,-3,2,10,-1,-3,-5,-7,1,-7,3,-10,2,1,-8,7,-8,2,6,-8,-8,-7,7,7,7,-3,-1,5,2,5,-4,1,-5,-3,-8,9,1,-7,1,-6,-8,-9,3,-2,3,-3,10,-10,-9,-5,4,-3,1,3,3,-2,-8,10,6,-4,-9,-5,-5,5,8,2,-5,8,4,10,1,-10,5,-10,-4,-10,-5,6,-2,3,1,3,-2,-4,2,-6,5,2,10,1,-8,8,7,-3,-5,8,-4,3,-10,2,2,5,-6,9,8,-1,-2,10,-3,10,-9,-5,9,-9,-9,-3,9,-10,4,10,-1,8,9,7,-3,1,5,-7,8,-5,4,-7,5,-7,-9,1,-9,-7,9,2,1,3,3,-10,5,5,-3,-2,2,-7], dtype = "int16")#candidate|4808|(2340,)|const|int16
call_4806 = relay.TupleGetItem(func_1644_call(relay.reshape(var_4807.astype('float32'), [14, 1, 6]), relay.reshape(const_4808.astype('int16'), [2340,]), ), 0)
call_4809 = relay.TupleGetItem(func_1647_call(relay.reshape(var_4807.astype('float32'), [14, 1, 6]), relay.reshape(const_4808.astype('int16'), [2340,]), ), 0)
output = relay.Tuple([call_4802,call_4806,var_4807,const_4808,])
output2 = relay.Tuple([call_4803,call_4809,var_4807,const_4808,])
func_4826 = relay.Function([var_4807,], output)
mod['func_4826'] = func_4826
mod = relay.transform.InferType()(mod)
mutated_mod['func_4826'] = func_4826
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4827 = relay.var("var_4827", dtype = "float32", shape = (84,))#candidate|4827|(84,)|var|float32
func_4826_call = mutated_mod.get_global_var('func_4826')
call_4828 = func_4826_call(var_4827)
output = call_4828
func_4829 = relay.Function([var_4827], output)
mutated_mod['func_4829'] = func_4829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4097_call = mod.get_global_var('func_4097')
func_4099_call = mutated_mod.get_global_var('func_4099')
call_4877 = func_4097_call()
call_4878 = func_4097_call()
output = relay.Tuple([call_4877,])
output2 = relay.Tuple([call_4878,])
func_4879 = relay.Function([], output)
mod['func_4879'] = func_4879
mod = relay.transform.InferType()(mod)
output = func_4879()
func_4880 = relay.Function([], output)
mutated_mod['func_4880'] = func_4880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_4968 = func_2981_call()
call_4969 = func_2981_call()
func_2614_call = mod.get_global_var('func_2614')
func_2615_call = mutated_mod.get_global_var('func_2615')
call_4972 = func_2614_call()
call_4973 = func_2614_call()
output = relay.Tuple([call_4968,call_4972,])
output2 = relay.Tuple([call_4969,call_4973,])
func_4974 = relay.Function([], output)
mod['func_4974'] = func_4974
mod = relay.transform.InferType()(mod)
mutated_mod['func_4974'] = func_4974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4974_call = mutated_mod.get_global_var('func_4974')
call_4975 = func_4974_call()
output = call_4975
func_4976 = relay.Function([], output)
mutated_mod['func_4976'] = func_4976
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5006 = relay.var("var_5006", dtype = "float32", shape = (12, 6, 10))#candidate|5006|(12, 6, 10)|var|float32
uop_5007 = relay.asin(var_5006.astype('float32')) # shape=(12, 6, 10)
bop_5026 = relay.right_shift(uop_5007.astype('uint16'), relay.reshape(var_5006.astype('uint16'), relay.shape_of(uop_5007))) # shape=(12, 6, 10)
func_4022_call = mod.get_global_var('func_4022')
func_4026_call = mutated_mod.get_global_var('func_4026')
var_5038 = relay.var("var_5038", dtype = "int64", shape = (1920,))#candidate|5038|(1920,)|var|int64
call_5037 = relay.TupleGetItem(func_4022_call(relay.reshape(var_5038.astype('int64'), [16, 15, 8]), relay.reshape(var_5038.astype('int64'), [16, 15, 8]), relay.reshape(var_5038.astype('bool'), [16, 15, 8]), ), 0)
call_5039 = relay.TupleGetItem(func_4026_call(relay.reshape(var_5038.astype('int64'), [16, 15, 8]), relay.reshape(var_5038.astype('int64'), [16, 15, 8]), relay.reshape(var_5038.astype('bool'), [16, 15, 8]), ), 0)
func_3067_call = mod.get_global_var('func_3067')
func_3073_call = mutated_mod.get_global_var('func_3073')
const_5041 = relay.const([3.472814,-7.191128,-5.213719,2.163058,0.998260,-5.289096,7.277013,-0.338652,-0.394169,4.007453,-5.827883,-7.962991,-3.889596,-1.953300,-4.254301,1.706719,9.073786,1.742455,-4.655555,0.408370,-6.070975,-9.627822,5.286531,-9.651889,-1.871377,1.651738,-5.393245,-2.279101,-6.416620,-5.344014,3.471157,-2.516028,8.139271,3.016612,-0.184112,9.171973,-5.135084,2.144007,1.450346,7.243565,8.967856,-9.383504,-9.487355,8.072158,3.284416,8.140832,6.377543,-3.531221,-3.155209,-8.236643,-8.875090,3.502778,1.876888,-9.702870,-9.617108,-4.692922,6.098579,9.583280,4.092970,-3.060181,7.379910,7.025865,1.243779,0.301236,6.024868,2.705066,-6.742254,-2.189596,4.357459,-8.846641,-4.233901,9.885917,9.102209,-0.293899,8.217091,8.046334,-0.375956,0.883304,-9.340021,0.406465,-7.244424,-0.735252,7.717803,-9.948314,9.552458,-9.165940,6.636013,9.136808,7.868347,9.516505,-9.700589,7.022631,-8.971820,3.576632,7.141229,-5.726461,0.320383,-7.976221,-6.383614,9.182449,3.724796,1.242496,1.222433,9.146022,-6.668723,-3.631728,-9.276919,-6.804531,-5.996339,5.564638,-7.027821,-9.357777,-5.544298,9.231606,2.657983,8.301868,-7.898116,-1.829234,0.538503,-1.319628,-8.628701,5.280698,-8.174480,7.526447,9.765263,3.487473,3.795525,8.909878,-3.377125,-7.236328,4.566903,8.793903,-5.213598,2.949124,2.184731,-5.410768,-2.101844,-4.201223,8.049121,-5.689787,6.366929,-8.547617,2.806036,-5.131980,-1.467670,6.858423,-3.975660,-5.530657,-5.940097,6.374088,2.738712,-2.292651,1.344466,9.996425,-2.757739,1.714110,5.366736,-6.966088,6.519564,-1.602466,4.239554,9.177379,-7.664327,4.429355,2.178414,7.124802,-6.683380,2.339476,-5.948081,-9.465843,-3.572076,-0.682458,2.937421,-7.726324,-1.743069,4.750737,-8.720452,6.486556,-1.126521,-0.912549,1.290624,-8.347033,9.999844,0.827231,-6.037123,-1.314379,3.206973,-7.017628,-2.258930,1.078623,-4.923771,-4.059836,0.682355,2.636956,-7.487661,-7.377620,9.056499,9.131553,-4.340626,1.357593,-6.543621,3.904099,-1.378870,3.601632,-4.796380,9.199726,2.481849,6.664473,-7.197038,-6.720806,-3.090001,-8.305784,6.484019,-0.368396,1.099105,4.884132,-7.160792,1.035543,-6.101464,1.614898,-7.249903,8.552893,-4.625387,-7.698589,-7.770015,-7.647955,5.829816,-3.685945,-4.704181,-7.143673,-5.550999,-7.881709,-3.942996,-6.904500,-7.730059,2.243772,-3.437964,-1.233678,-1.644331,3.576944,0.217491,8.214926,0.912141,2.165776,1.531658,3.768068,5.010201,-9.186583,8.361815,1.842589,-0.622557,-2.517521,9.688800,8.170095,-0.510887,-5.561138,-7.125077,-1.432320,-5.307241,-3.108197,-2.764643,4.925093,9.786183,8.824237,-4.630290,-7.931918,-9.887817,-1.021722,9.295037,5.171939,-8.791979,4.103239,9.122124,-8.636178,1.212902,9.060841,-4.366456,-2.702043,-9.758625,9.394765,-3.349944,1.842713,-2.431510,-3.365093,-7.691816,8.061775,-6.510618,9.739194,9.709692,6.624330,-6.687966,-8.345185,1.550227,-0.605582,-6.190675,9.054269,1.007844,0.688544,-5.199885,6.156610,9.111830,3.106875,1.245539,-1.823304,7.934474,-9.800940,-8.995874,-0.670331,9.281142,-5.444714,-2.636112,-2.489150,-4.510535,-2.159011,1.937120,0.664500,-7.634321,-3.049816,-5.966947,-0.223612,-9.297192,1.611747,0.988414,8.970198,9.689259,6.592091,9.040534,2.046473,2.030814,-1.061719,-9.908412,-3.519973,-5.865521,-3.106746,4.119850,-8.547469,1.168495,-3.487439,-2.330526,5.528243,1.875933,2.510459,-3.919746,2.874348,-1.202104,3.108016,1.768469,-8.270186,-6.188555,-9.240525,1.364153,-3.567589,6.210216,-1.862831,-9.110881,5.321869,-5.573121,-4.650227,5.562487,-3.336596,4.857062,-7.237917,7.080682,-5.918099,-8.973648,7.831238,-5.875650,-7.978195,5.488794,6.977162,0.497189,0.441068,4.543166,-0.233605,4.963612,4.136765,-8.740181,-0.926053,-9.965525,-4.565453,6.093234,-6.158047,4.890720,7.110072,2.811155,-1.308911,2.652840,-2.955290,4.245418,-2.183301,-5.787840,7.754363,6.563070,-8.136458,-8.750377,-8.428164,8.690214,7.705450,-5.770091,7.696380,5.942835,-8.987172,9.416098,-5.144365,3.429868,-3.205320,-8.118596,2.865774,2.049800,5.073095,-1.642197,9.431235,-1.034315,-0.645064,-3.536468,5.964261,3.464799,-1.692216,-1.104084,2.610240,5.827376,2.260488,5.692934,-4.497842,8.808660,-9.331898,5.690545,6.895446,0.387170,-8.288442,3.528680,7.919526,7.635492,9.743968,-1.486866,-8.875711,-0.728821,2.845474,-5.482321,-3.293230,3.990899,8.372462,8.829131,0.676073,-9.357906,-8.679161,0.232338,-1.357940,7.156621,-6.560362,-9.859265,-9.700381,0.791916,-0.838458,0.492841,3.642920,8.718274,7.672753,3.190551,9.451378,4.128114,5.458638,-3.771526,0.562636,1.416765,5.677696,-3.896699,1.660679,-0.251488,6.291100,-9.478862,-5.985405,6.810476,-7.660389,-3.570127,-3.123002,7.882478,-7.246826,8.388161,-1.877278,-7.714791,-5.218812,7.591513,-6.644092,8.718765,6.434960,-5.119575,-9.143067,0.004999,-0.982407,-5.268772,1.724355,-9.613190,3.305308,-1.479278,-6.800724,-1.626409,3.159221,-7.274629,9.392709,-0.869161,-7.707664,-9.984976,-6.933254,6.089084,-9.368831,-3.339195,-8.154731,4.376112,-2.623859,9.940487,-9.926710,-5.470311,2.971516,4.415823,-0.488690,4.915197,-1.694547,9.845006,1.706562,0.015928,7.743888,-0.884456,-8.033144,0.175227,4.238487,-0.893678,-6.302291,6.551374,0.104499,-6.029092,-5.573584,-5.440013,-5.477308,-4.485370,2.218347,3.827175,2.546482,-3.360962,3.106043,-8.646552,-8.570702,3.670078,4.017016,-0.558002,5.543961,5.716908,-7.041139,2.100275,5.623677,-7.193583,1.195198,2.170145,7.010778,1.482245,-4.011870,6.404189,-7.514584,1.900111,-5.490831,-9.754001,4.757126,9.262582,-7.597460,-3.921723,-3.762379,-4.069883,-1.126383,-1.741864,5.250495,-9.091426,-6.516178,-8.726638,-4.403847,-9.857951,8.193307,0.596891,-6.664120,-6.773157,3.635607,4.323882,4.951272,4.098338,5.193222,-6.186179,0.028488,-8.659396,-8.727659,-0.281666,8.050551,9.204048,-6.377869,7.154706,-1.840047,5.804302,-1.276869,0.056491,-5.951652,1.201328,8.767442,-5.079922,-4.291758,-1.538295,5.949751,-3.142679,2.157263,9.323046,-1.872861,4.830364,-4.684460,-8.713143,2.129679,-0.711764,-0.362023,9.720699,8.283021,8.868418,5.231520,5.353813,-1.374364,1.110310,4.199812,4.601643,1.139337,-7.844480,1.631609,-2.212983,1.225583,-2.260552,-5.093832,9.145355,4.774192,2.352041,-2.016505,2.165691,-0.140320,-5.680772,1.528867,0.237347,-5.199868,-0.089677,-1.661766,-3.665736,-0.336812,-9.985969,7.725036,-9.469279,-6.322460], dtype = "float64")#candidate|5041|(648,)|const|float64
const_5042 = relay.const([[2.628746,2.267427,-8.712284,7.272302,-8.967900,-2.277152,-3.509083,-6.649293,-8.201208,3.639681,-3.445435,-8.965078,0.798020,1.283334,9.345931,0.344642,3.658628,4.128957,0.396893,-3.047013,2.139078,9.249906,-1.674421,-9.272103,-8.907560,-3.476240,2.874571,9.947873,-2.551784,7.196888,4.548192,-7.591905,0.627104,-9.043590,-7.415842,-6.767902,-8.323879,8.225281,-9.890686,4.297666,4.912941,5.892497,-3.403151,5.032242,-2.764553,-1.145108,6.703093,-1.939708,9.710316,-3.447198,6.602605,3.720600,-6.358814,-6.636685,-1.367313,6.884834,2.828794,-0.146647,2.010321,-0.855057,-2.991427,3.235341,1.531500,-5.973991,1.406920,-1.939842,-6.605735,-2.715920,-1.824750,2.183699,-7.282264,-5.848676,3.923803,5.728924,0.250875,-9.792011,3.851345,3.227159,4.436544,8.653813,-3.250303,-9.454855,3.306178,8.155155]], dtype = "float32")#candidate|5042|(1, 84)|const|float32
const_5043 = relay.const([-1,5,9,-8,-2,3,9,-7,-4,-8,-7,-9,-4,-9,5,9,-6,4,8,4,-6,-6,-6,-7,-9,-5,2,5,3,3,5,3,-8,7,-10,8,7,8,-8,4,-10,6,-3,9,4,-3,6,10,-5,-2,7,-3,-5,-8,8,2,10,-1,8,10,-4,1,-9,5,-10,-2,-4,-1,-6,4,8,-3,2,1,3,-2,-2,-6,7,-8,-6,-2,-5,-1,-10,4,-9,-6,10,2,7,-10,-10,4,6,2,2,4,9,-8,-10,-8,-1,3,4,-7,-3,1,-1,-1,-9,-3,-1,8,-4,-10,3,7,-6,7,8,-10,9,6,-8,-1,4,-8,10,-6,4,-1,5,1,8,9,10,-9,-1,-10,-4,6,4,-2,1,1,3,2,-9,9,-1,-5,10,-1,-1,-9,-4,2,8,4,-1,5,-8,1,-10,-7,3,-5,8,-3,8,3,-9,-2,8,-8,-3,-2,-10,10,-7,4,-1,-2,-4,7,9,4,4,6,-3,10,7,-9,-6,8,8,-3,10,7,2,-6,3,-10,-7,6,1,8,-9,-7,-9,-10,9,-5,1,-5,-5,6,2,-2,4,-10,5,5,8,1,-6,-2,6,-6,-9,-4,1,-10,-7,1,-2,6,-1,-5,2,-4,-9,-5,-6,-6,3,9,9,6,-4,7,10,-7,-6,-9,8,-7,2,2,3,2,7,10,3,-3,-5,-4,6,5,4,8,-9,-7,-7,10,-8,-7,-6,-10,-5,5,-5,-4,-2,3,-4,6,-8,-8,-3,-6,-3,-5,-2,-5,7,-8,10,-3,2,8,9,-3,8,-3,-10,-1,3,-9,10,3,-7,-10,-4,1,9,4,-3,4,-6,2,5,8,-9,3,2,-7,-9,-8,-9,7,-6,5,-7,1,-5,1,8,10,-8,-9,10,-9,-4,-10,-6,1,9,3,7,1,-9,-6,4,4,-8,4,8,7,-2,5,5,10,-3,1,-9,4,9,-6,-5,-6,-5,10,-4,5,3,4,7,-1,-8,-2,9,6,-7,2,5,4,-8,3,-1,-10,10,10,9,-2,8,-4,4,-4,4,-5,-3,9,5,-3,-2,-9,-8,-4,4,2,1,-8,9,6,-9,-4,-1,-4,-7,-1,2,5,-10,-5,-4,6,-4,-10,10,6], dtype = "int64")#candidate|5043|(432,)|const|int64
var_5044 = relay.var("var_5044", dtype = "int16", shape = (90, 1))#candidate|5044|(90, 1)|var|int16
call_5040 = relay.TupleGetItem(func_3067_call(relay.reshape(const_5041.astype('float64'), [12, 6, 9]), relay.reshape(const_5042.astype('float32'), [84,]), relay.reshape(const_5043.astype('int64'), [432,]), relay.reshape(var_5044.astype('int16'), [45, 2]), ), 8)
call_5045 = relay.TupleGetItem(func_3073_call(relay.reshape(const_5041.astype('float64'), [12, 6, 9]), relay.reshape(const_5042.astype('float32'), [84,]), relay.reshape(const_5043.astype('int64'), [432,]), relay.reshape(var_5044.astype('int16'), [45, 2]), ), 8)
output = relay.Tuple([bop_5026,call_5037,var_5038,call_5040,const_5041,const_5042,const_5043,var_5044,])
output2 = relay.Tuple([bop_5026,call_5039,var_5038,call_5045,const_5041,const_5042,const_5043,var_5044,])
func_5047 = relay.Function([var_5006,var_5038,var_5044,], output)
mod['func_5047'] = func_5047
mod = relay.transform.InferType()(mod)
var_5048 = relay.var("var_5048", dtype = "float32", shape = (12, 6, 10))#candidate|5048|(12, 6, 10)|var|float32
var_5049 = relay.var("var_5049", dtype = "int64", shape = (1920,))#candidate|5049|(1920,)|var|int64
var_5050 = relay.var("var_5050", dtype = "int16", shape = (90, 1))#candidate|5050|(90, 1)|var|int16
output = func_5047(var_5048,var_5049,var_5050,)
func_5051 = relay.Function([var_5048,var_5049,var_5050,], output)
mutated_mod['func_5051'] = func_5051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3959_call = mod.get_global_var('func_3959')
func_3960_call = mutated_mod.get_global_var('func_3960')
call_5164 = relay.TupleGetItem(func_3959_call(), 0)
call_5165 = relay.TupleGetItem(func_3960_call(), 0)
func_3420_call = mod.get_global_var('func_3420')
func_3422_call = mutated_mod.get_global_var('func_3422')
call_5168 = relay.TupleGetItem(func_3420_call(), 0)
call_5169 = relay.TupleGetItem(func_3422_call(), 0)
output = relay.Tuple([call_5164,call_5168,])
output2 = relay.Tuple([call_5165,call_5169,])
func_5170 = relay.Function([], output)
mod['func_5170'] = func_5170
mod = relay.transform.InferType()(mod)
output = func_5170()
func_5171 = relay.Function([], output)
mutated_mod['func_5171'] = func_5171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3809_call = mod.get_global_var('func_3809')
func_3811_call = mutated_mod.get_global_var('func_3811')
call_5196 = func_3809_call()
call_5197 = func_3809_call()
output = call_5196
output2 = call_5197
func_5206 = relay.Function([], output)
mod['func_5206'] = func_5206
mod = relay.transform.InferType()(mod)
mutated_mod['func_5206'] = func_5206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5206_call = mutated_mod.get_global_var('func_5206')
call_5207 = func_5206_call()
output = call_5207
func_5208 = relay.Function([], output)
mutated_mod['func_5208'] = func_5208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_5219 = relay.TupleGetItem(func_2609_call(), 2)
call_5220 = relay.TupleGetItem(func_2611_call(), 2)
func_4073_call = mod.get_global_var('func_4073')
func_4077_call = mutated_mod.get_global_var('func_4077')
var_5226 = relay.var("var_5226", dtype = "bool", shape = (1890,))#candidate|5226|(1890,)|var|bool
call_5225 = relay.TupleGetItem(func_4073_call(relay.reshape(var_5226.astype('bool'), [9, 14, 15]), relay.reshape(var_5226.astype('bool'), [9, 14, 15]), relay.reshape(var_5226.astype('bool'), [9, 14, 15]), ), 4)
call_5227 = relay.TupleGetItem(func_4077_call(relay.reshape(var_5226.astype('bool'), [9, 14, 15]), relay.reshape(var_5226.astype('bool'), [9, 14, 15]), relay.reshape(var_5226.astype('bool'), [9, 14, 15]), ), 4)
func_894_call = mod.get_global_var('func_894')
func_896_call = mutated_mod.get_global_var('func_896')
call_5230 = relay.TupleGetItem(func_894_call(relay.reshape(call_5219.astype('int16'), [15, 12, 13])), 0)
call_5231 = relay.TupleGetItem(func_896_call(relay.reshape(call_5219.astype('int16'), [15, 12, 13])), 0)
output = relay.Tuple([call_5219,call_5225,var_5226,call_5230,])
output2 = relay.Tuple([call_5220,call_5227,var_5226,call_5231,])
func_5244 = relay.Function([var_5226,], output)
mod['func_5244'] = func_5244
mod = relay.transform.InferType()(mod)
mutated_mod['func_5244'] = func_5244
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5245 = relay.var("var_5245", dtype = "bool", shape = (1890,))#candidate|5245|(1890,)|var|bool
func_5244_call = mutated_mod.get_global_var('func_5244')
call_5246 = func_5244_call(var_5245)
output = call_5246
func_5247 = relay.Function([var_5245], output)
mutated_mod['func_5247'] = func_5247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3341_call = mod.get_global_var('func_3341')
func_3342_call = mutated_mod.get_global_var('func_3342')
call_5249 = relay.TupleGetItem(func_3341_call(), 0)
call_5250 = relay.TupleGetItem(func_3342_call(), 0)
var_5258 = relay.var("var_5258", dtype = "int16", shape = (2340,))#candidate|5258|(2340,)|var|int16
bop_5259 = relay.bitwise_and(call_5249.astype('int16'), relay.reshape(var_5258.astype('int16'), relay.shape_of(call_5249))) # shape=(2340,)
bop_5262 = relay.bitwise_and(call_5250.astype('int16'), relay.reshape(var_5258.astype('int16'), relay.shape_of(call_5250))) # shape=(2340,)
bop_5268 = relay.bitwise_xor(var_5258.astype('int32'), relay.reshape(call_5249.astype('int32'), relay.shape_of(var_5258))) # shape=(2340,)
bop_5271 = relay.bitwise_xor(var_5258.astype('int32'), relay.reshape(call_5250.astype('int32'), relay.shape_of(var_5258))) # shape=(2340,)
output = relay.Tuple([bop_5259,bop_5268,])
output2 = relay.Tuple([bop_5262,bop_5271,])
func_5272 = relay.Function([var_5258,], output)
mod['func_5272'] = func_5272
mod = relay.transform.InferType()(mod)
var_5273 = relay.var("var_5273", dtype = "int16", shape = (2340,))#candidate|5273|(2340,)|var|int16
output = func_5272(var_5273)
func_5274 = relay.Function([var_5273], output)
mutated_mod['func_5274'] = func_5274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3933_call = mod.get_global_var('func_3933')
func_3934_call = mutated_mod.get_global_var('func_3934')
call_5278 = func_3933_call()
call_5279 = func_3933_call()
uop_5285 = relay.asinh(call_5278.astype('float64')) # shape=(7, 14, 3)
uop_5287 = relay.asinh(call_5279.astype('float64')) # shape=(7, 14, 3)
output = uop_5285
output2 = uop_5287
func_5292 = relay.Function([], output)
mod['func_5292'] = func_5292
mod = relay.transform.InferType()(mod)
mutated_mod['func_5292'] = func_5292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5292_call = mutated_mod.get_global_var('func_5292')
call_5293 = func_5292_call()
output = call_5293
func_5294 = relay.Function([], output)
mutated_mod['func_5294'] = func_5294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3627_call = mod.get_global_var('func_3627')
func_3628_call = mutated_mod.get_global_var('func_3628')
call_5301 = relay.TupleGetItem(func_3627_call(), 3)
call_5302 = relay.TupleGetItem(func_3628_call(), 3)
func_239_call = mod.get_global_var('func_239')
func_242_call = mutated_mod.get_global_var('func_242')
const_5313 = relay.const([3,2,5,-8,10,-3,8,-1,-7,6,-1,-1,5,-1,8,7,-5,3,-8,2,9,-10,-7,-9,-8,-8,-9,7,10,6,-9,1,2,8,7,8,5,-2,-9,-5,-6,-5,-3,-1,-2,2,10,9,-9,1,-5,9,-7,2,-2,2,-3,2,-9,8,-10,7,6,-3,1,1,3,7,3,-5,-8,4,5,-7,1,-8,-6,2,-10,-8,-8,-10,1,10,-9,-8,5,-8,9,5,-1,-10,9,-10,6,-4,9,5,1,3,-4,7,-4,-10,-2,-1,-9,1,-3,-8,1,1,-4,-9,4,5,4,7,-8,-8,-1,3,-2,-7,7,1,-5,-7,1,-4,-7,-2,4,8,-8,4,7,-7,-4,-3,-10,-7,9,4,10,-6,10,10,1,5,4,7,7,-10,10,9,10,-5,-2,10,8,10,5,-9,8,4,-1,3,6,-8,9,-6,-5,-7,-7,-8,-2,-2,-6,3,-3,6,-7,2,4,-10,7,-1,7,9,4,9,-4,3,2,-6,3,8,2,-5,-2,-1,-3,3,-2,-3,8,4,-5,-1,-5,1,-10,-1,-1,-1,3,1,-6,-3,-5,-9,-8,-4,-2,-7,4,8,-7,6,-5,-10,-9,-4,7,5,4,4,7,-5,5,-7,-4,-2,-1,-8,5,5,-10,1,6,9,2,-4,-3,7,4,4,-8,-8,5,5,5,6,-1,-5,4,9,-9,-4,-3,-8,-4,5,-9,1,1,5,-8,-3,7,5,4,-9,6,-3,2,-8,-6,-10,-5,10,-7,-4,-6,-3,7,-6,2,3,-7,-9,-10,7,9,10,8,-2,2,9,4,-1,-10,1,-2,-1,1,-10,-8,-6,6,-5,-5,-1,-4,5,4,9,4,-7,-4,-5,-10,-5,-2,9,6,-2,10,10,-4,2,-2,2,-8,-10,9,7,-10,10,-5,10,3,-4,7,-7,-8,1,-9,-4,3,-1,-1,4,1,3,-2,-9,7,8,-5,9,3,3,-4,-8,1,9,-8,-3,-8,-6,9,7,-9,2,-9,9,-10,5,9,10,5,-2,-2,-3,-1,-3,6,-6,5,3,10,6,-6,3,6,-5,-3,-3,4,-7,5,-3,10,-8,-1,6,4,-1,-7,-4,-8,-2,-8,7,-1,6,6,8,1,8], dtype = "int64")#candidate|5313|(432,)|const|int64
call_5312 = relay.TupleGetItem(func_239_call(relay.reshape(const_5313.astype('int64'), [6, 6, 12]), relay.reshape(const_5313.astype('int64'), [6, 6, 12]), ), 0)
call_5314 = relay.TupleGetItem(func_242_call(relay.reshape(const_5313.astype('int64'), [6, 6, 12]), relay.reshape(const_5313.astype('int64'), [6, 6, 12]), ), 0)
output = relay.Tuple([call_5301,call_5312,const_5313,])
output2 = relay.Tuple([call_5302,call_5314,const_5313,])
func_5331 = relay.Function([], output)
mod['func_5331'] = func_5331
mod = relay.transform.InferType()(mod)
output = func_5331()
func_5332 = relay.Function([], output)
mutated_mod['func_5332'] = func_5332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3170_call = mod.get_global_var('func_3170')
func_3171_call = mutated_mod.get_global_var('func_3171')
call_5341 = func_3170_call()
call_5342 = func_3170_call()
uop_5357 = relay.atanh(call_5341.astype('float32')) # shape=(2340,)
uop_5359 = relay.atanh(call_5342.astype('float32')) # shape=(2340,)
func_3135_call = mod.get_global_var('func_3135')
func_3141_call = mutated_mod.get_global_var('func_3141')
var_5373 = relay.var("var_5373", dtype = "float64", shape = (2160,))#candidate|5373|(2160,)|var|float64
const_5374 = relay.const(3, dtype = "int16")#candidate|5374|()|const|int16
var_5375 = relay.var("var_5375", dtype = "int64", shape = (432,))#candidate|5375|(432,)|var|int64
const_5376 = relay.const([4,2,7,-1,-9,-5,-9,9,-2,-3,2,9,8,4,-10,9,-8,-7,8,-10,-8,3,3,-1,8,6,-7,-8,7,-6,-10,2,7,-3,-7,5,7,5,1,-7,-3,9,-5,5,-2,10,-8,-9,10,-2,-4,-2,-7,1,4,-7,8,-5,4,9,-2,7,9,-5,-8,6,5,3,5,-2,-1,-4,-6,5,10,7,3,2,-7,-1,-3,9,4,-10,7,6,10,8,-2,5,9,3,-3,1,1,9,8,-10,9,1,-1,-5,-8,4,-7,3,-2,-7,-3,-6,-2,-6,2,-3,7,8,-1,-6,5,-1,2,8,2,8,-6,8,1,8,-2,-6,-5,7,-7,-8,-7,-5,-5,-1,-10,2,5,-4,6,10,3,8,-2,5,-8,-2,-4,-3,3,5,5,9,-9,-6,5,2,-6,7,5,-7,-6,7,-9,-8,6,-6,-1,1,-10,-3,-7,-4,-7,-10,6,7,-10,2,7,-2,3,4,-4,2,-5,10,3,-4,-8,5,4,6,8,-3,-7,-8,2,-4,8,-4,-2,5,-10,-6,-3,-2], dtype = "int64")#candidate|5376|(210,)|const|int64
call_5372 = relay.TupleGetItem(func_3135_call(relay.reshape(var_5373.astype('float64'), [2160,]), relay.reshape(const_5374.astype('int16'), []), relay.reshape(var_5375.astype('int64'), [432,]), relay.reshape(const_5376.astype('int64'), [105, 2]), ), 10)
call_5377 = relay.TupleGetItem(func_3141_call(relay.reshape(var_5373.astype('float64'), [2160,]), relay.reshape(const_5374.astype('int16'), []), relay.reshape(var_5375.astype('int64'), [432,]), relay.reshape(const_5376.astype('int64'), [105, 2]), ), 10)
func_2934_call = mod.get_global_var('func_2934')
func_2936_call = mutated_mod.get_global_var('func_2936')
var_5380 = relay.var("var_5380", dtype = "float64", shape = (1092,))#candidate|5380|(1092,)|var|float64
call_5379 = relay.TupleGetItem(func_2934_call(relay.reshape(var_5380.astype('float64'), [13, 6, 14])), 0)
call_5381 = relay.TupleGetItem(func_2936_call(relay.reshape(var_5380.astype('float64'), [13, 6, 14])), 0)
bop_5384 = relay.multiply(uop_5357.astype('float32'), const_5374.astype('float32')) # shape=(2340,)
bop_5387 = relay.multiply(uop_5359.astype('float32'), const_5374.astype('float32')) # shape=(2340,)
output = relay.Tuple([call_5372,var_5373,var_5375,const_5376,call_5379,var_5380,bop_5384,])
output2 = relay.Tuple([call_5377,var_5373,var_5375,const_5376,call_5381,var_5380,bop_5387,])
func_5398 = relay.Function([var_5373,var_5375,var_5380,], output)
mod['func_5398'] = func_5398
mod = relay.transform.InferType()(mod)
mutated_mod['func_5398'] = func_5398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5398_call = mutated_mod.get_global_var('func_5398')
var_5400 = relay.var("var_5400", dtype = "float64", shape = (2160,))#candidate|5400|(2160,)|var|float64
var_5401 = relay.var("var_5401", dtype = "int64", shape = (432,))#candidate|5401|(432,)|var|int64
var_5402 = relay.var("var_5402", dtype = "float64", shape = (1092,))#candidate|5402|(1092,)|var|float64
call_5399 = func_5398_call(var_5400,var_5401,var_5402,)
output = call_5399
func_5403 = relay.Function([var_5400,var_5401,var_5402,], output)
mutated_mod['func_5403'] = func_5403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3787_call = mod.get_global_var('func_3787')
func_3789_call = mutated_mod.get_global_var('func_3789')
call_5405 = func_3787_call()
call_5406 = func_3787_call()
var_5412 = relay.var("var_5412", dtype = "float64", shape = (2340,))#candidate|5412|(2340,)|var|float64
bop_5413 = relay.power(call_5405.astype('float32'), relay.reshape(var_5412.astype('float32'), relay.shape_of(call_5405))) # shape=(2340,)
bop_5416 = relay.power(call_5406.astype('float32'), relay.reshape(var_5412.astype('float32'), relay.shape_of(call_5406))) # shape=(2340,)
bop_5428 = relay.floor_mod(bop_5413.astype('float32'), relay.reshape(call_5405.astype('float32'), relay.shape_of(bop_5413))) # shape=(2340,)
bop_5431 = relay.floor_mod(bop_5416.astype('float32'), relay.reshape(call_5406.astype('float32'), relay.shape_of(bop_5416))) # shape=(2340,)
func_5272_call = mod.get_global_var('func_5272')
func_5274_call = mutated_mod.get_global_var('func_5274')
call_5433 = relay.TupleGetItem(func_5272_call(relay.reshape(bop_5428.astype('int16'), [2340,])), 0)
call_5434 = relay.TupleGetItem(func_5274_call(relay.reshape(bop_5428.astype('int16'), [2340,])), 0)
output = relay.Tuple([bop_5428,call_5433,])
output2 = relay.Tuple([bop_5431,call_5434,])
func_5442 = relay.Function([var_5412,], output)
mod['func_5442'] = func_5442
mod = relay.transform.InferType()(mod)
var_5443 = relay.var("var_5443", dtype = "float64", shape = (2340,))#candidate|5443|(2340,)|var|float64
output = func_5442(var_5443)
func_5444 = relay.Function([var_5443], output)
mutated_mod['func_5444'] = func_5444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4879_call = mod.get_global_var('func_4879')
func_4880_call = mutated_mod.get_global_var('func_4880')
call_5478 = relay.TupleGetItem(func_4879_call(), 0)
call_5479 = relay.TupleGetItem(func_4880_call(), 0)
func_1267_call = mod.get_global_var('func_1267')
func_1270_call = mutated_mod.get_global_var('func_1270')
var_5486 = relay.var("var_5486", dtype = "int8", shape = (144,))#candidate|5486|(144,)|var|int8
call_5485 = relay.TupleGetItem(func_1267_call(relay.reshape(var_5486.astype('int8'), [12, 1, 12]), relay.reshape(var_5486.astype('int8'), [12, 1, 12]), ), 0)
call_5487 = relay.TupleGetItem(func_1270_call(relay.reshape(var_5486.astype('int8'), [12, 1, 12]), relay.reshape(var_5486.astype('int8'), [12, 1, 12]), ), 0)
var_5490 = relay.var("var_5490", dtype = "float64", shape = (15, 12, 13))#candidate|5490|(15, 12, 13)|var|float64
bop_5491 = relay.divide(call_5478.astype('float32'), relay.reshape(var_5490.astype('float32'), relay.shape_of(call_5478))) # shape=(15, 12, 13)
bop_5494 = relay.divide(call_5479.astype('float32'), relay.reshape(var_5490.astype('float32'), relay.shape_of(call_5479))) # shape=(15, 12, 13)
bop_5496 = relay.not_equal(call_5485.astype('bool'), relay.reshape(var_5486.astype('bool'), relay.shape_of(call_5485))) # shape=(12, 1, 12)
bop_5499 = relay.not_equal(call_5487.astype('bool'), relay.reshape(var_5486.astype('bool'), relay.shape_of(call_5487))) # shape=(12, 1, 12)
output = relay.Tuple([bop_5491,bop_5496,])
output2 = relay.Tuple([bop_5494,bop_5499,])
func_5507 = relay.Function([var_5486,var_5490,], output)
mod['func_5507'] = func_5507
mod = relay.transform.InferType()(mod)
mutated_mod['func_5507'] = func_5507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5507_call = mutated_mod.get_global_var('func_5507')
var_5509 = relay.var("var_5509", dtype = "int8", shape = (144,))#candidate|5509|(144,)|var|int8
var_5510 = relay.var("var_5510", dtype = "float64", shape = (15, 12, 13))#candidate|5510|(15, 12, 13)|var|float64
call_5508 = func_5507_call(var_5509,var_5510,)
output = call_5508
func_5511 = relay.Function([var_5509,var_5510,], output)
mutated_mod['func_5511'] = func_5511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3680_call = mod.get_global_var('func_3680')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_5536 = relay.TupleGetItem(func_3680_call(), 1)
call_5537 = relay.TupleGetItem(func_3681_call(), 1)
var_5540 = relay.var("var_5540", dtype = "float32", shape = (13, 2, 8))#candidate|5540|(13, 2, 8)|var|float32
bop_5541 = relay.logical_or(call_5536.astype('bool'), relay.reshape(var_5540.astype('bool'), relay.shape_of(call_5536))) # shape=(13, 2, 8)
bop_5544 = relay.logical_or(call_5537.astype('bool'), relay.reshape(var_5540.astype('bool'), relay.shape_of(call_5537))) # shape=(13, 2, 8)
func_4177_call = mod.get_global_var('func_4177')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_5546 = func_4177_call()
call_5547 = func_4177_call()
const_5563 = relay.const([-9.223107,-7.851208,8.789483,0.038721,7.739758,-4.568732,8.595391,-7.239674,-0.678991,-7.034027,8.209635,-7.018972,0.931302,-2.086341,1.404505,5.616368,3.176900,6.587432,1.145122,7.063576,9.536836,1.119248,-6.406734,1.834701,-4.242603,9.000357,-8.789514,3.982500,-9.753814,-6.805023,4.541813,2.817011,-3.558421,4.254510,0.605268,-5.517018,-1.946084,0.200399,7.247663,1.880353,-9.109176,2.198093,9.738535,-9.975556,-0.941717,1.050780,-1.534804,4.955228,5.806542,-3.179831,8.873198,2.112247,7.865399,-0.673555,-7.023817,-8.689738,-9.582651,6.436523,-7.006045,7.823058,3.999232,-6.486196,8.037354,-3.906189,-2.569487,-9.611358,8.006514,5.350774,-9.643627,9.614208,8.787724,-4.757018,9.284674,6.193750,8.764208,2.403340,1.242999,6.622555,1.601384,-6.331784,-6.984897,2.147342,-2.873570,-0.722929,9.894478,9.269417,1.445771,-6.749826,-5.694540,-1.354734,5.539825,-2.349850,7.475694,3.814596,6.359329,-3.950343,-6.139457,4.370300,-4.808683,-0.277314,0.519872,7.541155,0.804360,1.836790,8.160629,3.452027,6.613970,-0.328541,7.003795,9.724651,5.932467,6.513853,-1.187245,-8.209601,-4.516319,-0.209616,6.868291,3.484057,9.553106,-7.494962,-3.119387,7.319285,6.289543,6.945831,-4.499290,9.580887,-4.947339,0.146559,6.078771,-7.876293,-0.388635,4.253568,-7.202536,-3.689057,8.970978,-2.634947,0.436502,-7.485367,6.080889,3.627784,-4.347453,6.706556,3.998743,1.068273,0.183573,0.842327,-5.656896,9.021110,2.659948,2.829408,-7.042101,-6.387876,6.834103,-8.876248,-2.579110,-6.890502,-5.085201,-0.142236,6.228254,-0.756723,4.162842,-5.497716,-4.632782,-1.004879,-6.353493,-0.780262,3.409458,-6.983536,5.883777,-4.389826,-5.567704,8.483066,-7.400187,4.050007,3.082998,-5.393299,4.318031,5.052222,-3.549491,6.737523,4.312239,2.812980,-5.999088,5.109503,-2.164659,-3.554261,8.743825,0.670857,4.526503,8.327691,-8.266267,9.111975,-4.396075,4.004034,-5.706327,2.377125,6.298625,-7.117050,-5.121798,8.076166,5.637416,-5.826890,6.054547,9.130889,-1.123252,-7.200295,-5.921278,-6.865780,-3.677317,-8.335631,-5.620334,-0.624855,-2.010249,9.067466,-1.966950,-5.319277,-7.683373,-8.131415,-4.776329,-1.978998,-6.564277,-1.527793,-6.762457,-9.145138,-1.892239,2.364317,-6.416027,-9.297991,4.637558,-3.898725,4.911004,9.462773,5.380427,4.164908,7.358286,-1.575120,-7.062003,9.610154,6.600669,2.978128,-6.113424,-9.175592,-2.591317,0.937136,-1.609240,-4.842431,-0.701997,-6.589371,9.008341,-4.127482,1.231609,4.434903,8.403202,9.800948,-2.259229,-8.971463,9.569562,2.154672,-2.652018,4.825360,-6.077039,-9.084539,-8.599788,-1.600411,-5.939520,-4.677302,3.139479,-7.049653,-9.988106,3.732095,-9.943790,5.062768,-8.156035,-8.015530,-9.901138,-1.999698,8.308606,6.599687,2.038133,0.719792,-9.420705,7.409902,3.803606,-4.445061,2.233321,-3.657949,-0.579014,-4.438317,3.993107,5.724962,-6.770576,-5.400445,-5.583253,7.467733,-5.690668,6.661549,9.720183,-8.141427,-3.758415,-8.703603,2.118299,-2.488337,1.865410,-3.907132,3.673590,-6.381318,9.285272,8.464262,-8.121296,4.495798,4.726066,-9.408555,-5.104782,-2.021475,2.375922,-8.177766,7.134207,-8.171824,5.289929,9.316415,-8.820801,1.148948,8.153067,7.964143,9.186568,-0.477733,-8.719768,7.325580,7.313113,8.435266,8.454681,2.969657,-9.069004,6.562755,1.414546,-5.151361,-0.811523,3.498584,-7.542467,7.753860,-3.186303,9.881680,-2.668973,1.069735,-9.267955,1.694701,-9.842142,-1.845092,-8.153819,6.244562,1.116454,-1.984175,0.343531,6.436563,-2.718495,8.734782,-6.234995,0.686201,-4.728508,-8.591650,-3.997047,-4.206703,3.924752,0.698239,-4.576033,1.395793,3.168574,6.998955,4.289074,-9.589875,9.901499,-9.802608,-0.342227,1.423551,-4.484757,4.167819,4.891656,-5.059860,0.472584,-4.608867,-9.974095,5.101148,0.334522,-3.152291,4.090501,0.028567,-5.753618,-7.341054,5.571193,9.975183,9.440407,-2.683306,-8.559795,6.355588,6.374059,3.176592,2.197500,7.834484,8.978978,-2.225568,-9.269968,-7.327550,0.973917,-1.509883,-3.664547,9.798098,-8.638854,-4.507313,-6.995136,-4.558719,2.160689,3.790649,-5.431881,-1.486803,-0.603837,-2.395061,-3.709450,7.483009,5.052760,-0.769826,-1.190256,-4.617447,-4.042162,3.378925,-0.349138,-6.037608,-3.125996,4.091166,-3.388872,-3.146369,-5.380054,2.080745,8.302869,-9.785560,-3.837523,-8.772770,-6.658169,-0.517427,6.972228,8.062421,9.231144,-2.019111,3.082756,6.009790,8.277081,-4.080410,-6.931685,-3.828970,0.902932,1.766773,9.524975,-7.232893,-0.594894,-2.365651,-2.824860,4.239153,4.597897,3.462117,2.960983,-5.524473,0.540973,-5.203441,4.724460,3.075511,-1.025555,-7.831578,1.171994,9.750831,8.020101,2.753873,-4.017689,-4.769118,-8.972087,-2.913257,-8.305499,-1.194735,-5.077894,4.835983,8.989198,-5.682218,3.287562,-5.569747,6.410873,-9.676995,2.240767,-9.974640,8.267936,-9.121259,5.541725,9.615425,6.591950,4.234042,7.024546,6.089092,8.344864,-4.288112,8.701220,6.088677,-4.117456,2.868579,-4.323553,1.835801,-7.989909,5.977344,3.698435,1.905975,0.637849,-8.294981,-6.938457,7.570588,5.249227,-0.412509,-1.762122,0.378338,-5.476425,6.297820,-4.172086,-5.015530,-3.647449,-1.216413,-4.065946,-1.673569,-4.515822,-7.486925,5.458066,7.427888,9.545761,7.053812,8.276527,5.509607,9.947937,-0.138037,6.798679,1.291307,5.154753,5.176515,8.720309,6.829845,-1.035650,-9.609384,3.027890,-2.309955,-8.362083,0.365224,-5.717695,8.568955,4.305255,-3.938589,-5.565620,-2.868636,2.978856,1.474799,2.194192,2.543868,9.306338,9.040279,6.097223,0.241202,2.136616,2.860990,8.864083,-5.663459,2.027941,-2.589958,-0.854436,4.624780,-1.036372,-3.171189,1.271182,-6.194904,-1.460473,5.780122,1.727409,1.783567,3.007203,1.623360,0.699671,6.465380,-4.700420,-6.512759,-9.388759,-1.007327,-1.605266,0.747096,-0.390856,-6.233886,5.081379,-7.454114,2.094697,-4.737730,8.558199,2.311698,1.669536,1.815557,-3.933229,-6.087720,4.337731,-9.593821,6.446778,2.596700,8.819339,-2.492551,4.222160,3.401860,-0.669215,-7.700736,7.090016,-7.756407,-6.047821,-2.564190,6.776377,-9.536483,-3.405070,8.627218,-1.760216,9.555245,-4.672353,-0.429072,3.955911,-1.402949,2.814695,8.314092,9.883610,6.350716,7.700980,-3.666312,-8.203391,2.808053,8.956427,3.141608,4.132676,2.063532,-8.707831,1.106739,-2.005698,-4.425819,-5.796640,-6.889821,0.513932,-7.971726,-8.835706,-7.170340,4.512910,4.392674,-3.737701,-7.532268,3.431821,2.926680,3.940434,6.146372,0.254382,-2.504400,5.169705,6.855521,-2.537756,3.695276,-0.858422,-2.562051,4.274295,4.210237,-8.704853,3.655815,4.680983,6.315241,-8.117267,-0.116553,-7.704955,3.562785,-3.393156,5.686093,-7.357468,1.219924,-2.642921,-4.347067,4.838006,9.495166,9.544724,2.154862,3.490218,-1.782215,-4.552237,0.741135,7.371005,-6.521132,5.205834,-2.521558,1.316582,9.519237,8.870834,3.127968,9.311601,-5.321907,-4.198441,0.949263,2.096139,6.176775,7.057032,-7.443310,9.129901,-1.938500,-0.431530,3.524831,-3.176518,6.108629,-7.128914,-2.655937,2.846555,1.778187,-1.567104,-6.519722,-4.430307,4.584538,-8.927075,-3.009695,2.360102,4.400093,7.971086,5.073894,7.995959,-0.917760,2.284940,2.591892,1.574922,-8.615171,2.032363,3.437308,-3.162854,7.911432,1.320886,0.463772,-0.326187,-3.302052,4.781516,5.282793,6.581620,-5.500002,-9.110044,0.600206,-2.760234,-7.952645,-9.878272,3.643906,-6.673240,-9.511819,-6.402563,-8.204875,-2.461869,1.369379,-4.242201,-2.689158,-8.213190,9.310684,-9.735260,-4.289653,-3.360603,-7.609153,7.997978,-6.878268,3.504721,8.003360,-2.116270,-1.999525,-7.642750,-2.267727,7.456172,-5.021784,0.658128,-4.715094,2.975889,9.096337,1.240663,-8.633285,0.430037,9.425744,1.735412,4.473335,-3.479074,-3.610417,8.094454,-8.814079,6.418011,-8.664687,-6.968896,-2.280890,0.134063,0.809004,-6.096493,0.023192,-7.899484,-8.788313,2.572147,8.151852,6.517865,4.531529,-0.837608,8.616453,-6.715074,7.697539,5.171356,-6.699933,4.914771,8.261802,-8.992129,4.643439,0.318387,-4.821803,1.754494,3.506472,-7.497314,6.511214,-6.615007,-0.516591,-0.042399,7.953387,-2.795150,6.906146,0.186377,5.606525,4.692816,0.339909,-1.933008,-1.709827,7.715543,-5.701334,-1.086772,1.560820,9.956686,4.080500,9.920381,2.236657,7.344972,7.872813,9.252194,-3.501150,9.539157,-7.467173,2.727049,-8.992701,-5.405253,-1.489361,-7.850725,3.743607,-1.127897,-1.533983,3.418130,4.849425,-7.576313,7.208884,3.251287,-4.495147,2.290419,-2.869147,9.754511,-7.646896,3.585383,-8.266683,-8.805418,9.171158,9.305926,-0.564603,2.607866,3.580647,-6.936213,-9.913235,-6.337183,-7.123492,5.422881,-4.160859,8.288748,-2.205535,-2.459414,1.955719,-9.195862,6.178480,-2.282224,-4.071233,9.093482,7.050322,-8.423323,7.796360,-2.791797,1.460536,-7.324618,3.471260,-3.675012,-8.561850,-5.388173,8.537526,0.319263,-3.263846,-0.362265,7.949292,-8.210555,6.368288,-9.154300,7.298140,-7.596896,-4.282992,9.249347,0.546674,5.505233,-6.055722,0.043585,-8.946211,-1.998191,-7.469766,1.045739,-0.645703,-1.641574,1.691279,-8.013907,0.675628,3.095314,6.252168,5.389425,-1.442155,-3.651882,0.140090,-4.668061,-3.952130,-2.134093,0.601039,0.465144,-2.430299,7.404391,-4.952883,-2.722034,-0.896379,-5.243621,-8.475763,-1.956695,-8.356590,7.339368,-2.739742,-4.774462,-8.983353,1.883011,-3.986850,2.392584,-9.761893,-4.219383,-2.188319,4.325170,-1.182777,-3.147353,2.481950,5.362209,-0.678086,1.601397,-2.046152,9.065510,8.346963,-3.933077,7.133854,-1.417454,-0.077570,3.938708,0.433089,-4.376357,-0.244469,5.640257,0.236224,5.528000,1.761692,4.058311,-2.770886,9.436241,1.745942,-9.218884,0.384161,0.807384,6.934828,4.436863,1.160799,2.426774,-9.235901,4.933866,7.442193,0.961603,-4.746618,5.226594,-8.321002,-5.613216,-0.106154,-4.243347,9.274459,-0.131205,-6.683901,2.906453,9.313952,5.866968,3.407191,7.002651,-6.783073,-1.977741,4.535088,6.317970,-1.231813,-4.548094,-5.096407,-8.431235,-5.119726,3.415254,-3.034570,-1.514833,6.628391,-2.610131,-1.765579,3.479029,-6.622941,6.900186,3.768790,3.322869,-6.897371,7.021053,3.816740,-6.180726,-6.641083,-5.366470,4.110184,-2.350040,3.842401,5.257532,-0.181529,-5.570730,-8.194348,0.619189,-6.651635,3.543726,-7.446886,-0.619234,4.369914,2.360341,-7.731397,-4.693779,-0.348633,-8.482196,1.193957,3.308037,-7.261127,8.470966,-4.580384,9.060543,1.946649,2.933791,7.553828,2.406085,9.322784,-6.187383,1.245530,8.443290,9.595322,8.686416,4.866848,-5.934763,-1.207906,3.477769,-9.716159,1.798069,9.100539,9.753776,-8.924125,5.517422,8.990440,9.066657,4.372060,-4.801909,-5.274282,8.293037,8.975321,-2.058690,3.167612,-2.978884,-5.587676,-4.034673,-1.635011,-9.727107,-2.782049,-3.480627,3.837662,-2.116480,-8.908310,6.177759,-6.662155,7.092480,-3.545393,5.207792,4.202931,-6.743344,-5.097555,0.304535,-0.293214,0.713768,-7.146083,7.666147,-9.720193,-7.800985,-7.264290,6.247989,-3.676376,-1.300940,-0.428873,5.116585,0.469162,5.907226,-7.051517,0.475348,-2.242278,5.896971,-6.378282,-7.075871,1.165858,-0.106641,-5.854724,-9.226339,-1.665586,-6.705182,4.859619,-3.001198,4.626356,-2.751741,-6.058203,-7.007041,-8.088243,4.707912,-5.327057,2.677032,-5.624960,-6.460708,-0.563052,-7.679097,4.103989,5.120033,-3.959048,-5.002877,-2.924865,6.134936,-1.423349,6.163769,7.870579,0.856139,4.853438,6.761457,-8.341322,-0.969783,3.777059,8.533710,8.531951,3.121406,-0.978230,8.609792,-5.730764,-7.986723,0.435265,9.902813,-2.780559,-7.853523,-2.884735,-5.666066,1.356041,2.139157,6.806560,-1.485112,0.096568,-8.029263,6.941733,-3.926011,-6.710192,-4.805243,2.053707,-5.906305,-6.493600,8.274178,3.537653,-3.959918,-0.227372,8.306541,-0.453187,8.405535,4.965125,-5.437351,7.693380,-9.006655,4.442520,0.245715,-2.738990,-3.847387,2.372513,6.875805,5.389191,6.049911,7.277695,9.012864,-4.846075,-4.154826,-8.397128,-2.197444,6.805539,1.781338,3.430877,0.155498,3.674458,9.110641,1.136082,1.604918,-7.218112,0.268523,5.639846,3.899610,1.409152,3.581747,-3.379497,0.964181,-5.337868,-3.678186,-9.906210,4.239906,-5.652279,-8.622924,-0.347014,-1.940020,-3.454085,-0.589800,2.790697,-8.519665,0.623325,-4.064465,1.860990,-3.908257,8.042224,-1.657709,-8.618162,1.893291,-2.800241,8.103949,5.787155,6.433837,2.769947,1.448729,9.964714,3.561904,0.218561,2.010487,1.743411,-2.219341,-4.308402,-2.805613,-9.528243,2.157593,1.310148,0.716353,3.613738,6.273613,8.197250,1.412636,-2.114498,1.250569,-6.158655,-1.938804,-8.615445,-6.769072,8.904398,-1.482719,-0.184237,-6.771613,-5.823629,-6.403880,-8.858224,-2.094796,-4.664597,9.598286,-0.827129,-2.423462,0.060616,-9.045023,9.259884,-6.708960,-7.916559,4.604027,5.203119,-5.122146,4.532909,2.834716,-4.761016,3.351846,1.718728,3.917639,-3.480747,-7.244858,0.146817,7.339660,-2.115235,4.940771,-8.614693,7.602670,1.947602,9.246247,4.367477,-7.203530,-6.609528,-9.372760,-1.935343,3.904021,-2.181225,-0.482076,8.594067,-3.291763,-8.435570,-9.885480,-1.132211,-9.399483,1.507879,8.295998,-6.393702,4.268909,9.364747,-3.146157,7.289695,-7.379083,4.814788,7.759785,5.480907,-3.824476,-3.973665,-5.595815,6.837616,-9.518239,1.716493,0.845391,4.289472,-7.416735,-2.093253,7.884771,4.568306,3.272510,-3.342154,6.582021,5.795915,3.620514,-8.725803,-1.914606,-9.177555,-3.761449,-9.649360,2.657141,-6.058949,7.781982,-3.854414,2.054947,-9.240860,6.659634,2.933124,-6.931916,-7.567583,-0.597927,-8.824160,-7.138788,2.761920,-9.742698,-9.747290,-8.865946,0.886330,-8.614387,-5.274791,9.663835,-6.228195,5.069201,1.950761,-0.176766,-9.914994,-1.126019,-5.625116,0.975757,-2.767964,2.119931,-1.923206,4.619729,4.689087,6.220612,1.343118,2.956951,2.350762,-5.381151,-9.819652,6.580536,4.330079,2.694136,-8.137713,-6.052971,-8.442392,-6.824915,8.061697,9.132858,0.667982,-0.455975,7.165193,-2.746582,-9.758790,-0.990643,-4.457061,9.336957,0.846295,4.519178,-9.852066,-4.221321,0.905501,2.786877,3.366804,-6.977175,6.809861,9.101244,-4.071131,-6.279886,-6.951800,9.235637,-8.173745,9.254893,-3.236976,8.076421,-3.391104,1.914357,-9.908837,-7.574227,0.848872,-2.621182,8.108024,-2.211694,-1.314380,-0.969250,5.173180,0.575898,6.450258,9.896752,5.766940,-9.329043,7.404031,7.349266,-8.281978,3.981595,-1.554165,-1.348988,5.655005,9.963041,9.221768,0.481770,-9.403205,-9.738155,2.449347,6.057926,8.067213,-8.997587,6.681204,-0.590806,8.556445,-5.822430,-1.954645,1.405922,1.786201,0.313483,-7.651229,3.993866,3.820254,-5.694437,3.432360,4.336315,1.177752,3.933407,3.992610,-3.497875,5.823617,4.900699,-1.534023,-3.731848,4.396699,-1.493108,-7.017916,-4.290535,-5.692311,-2.178074,-8.632792,-3.586837,3.628845,9.881224,3.354073,4.006507,-8.861597,-0.915114,9.002302,-7.522604,-7.885773,-6.882791,-0.521144,-7.577260,-4.265566,-2.360240,-6.114197,-2.879488,2.984042,3.086160,-9.556536,0.591966,4.935181,1.738994,-8.106977,1.425860,-7.840701,6.368713,9.456713,2.207229,-9.191423,-6.770590,-6.653629,-5.612941,-1.298717,3.893447,-2.758039,3.431644,-7.491558,-2.180832,-5.226319,-7.844905,-4.472676,5.962376,8.054501,9.621412,8.137729,0.367351,-6.414241,0.340410,7.844634,1.536037,1.744152,1.714280,5.823906,6.250635,7.600586,0.024133,1.661500,1.022628,1.132282,2.144265,8.915204,2.759717,-1.421034,-4.127579,9.709086,-4.126648,6.133022,-8.024635,9.042065,-0.472201,3.060799,-2.995036,9.262224,-3.544869,-2.097304,9.275396,-8.236843,-7.471541,8.649766,-8.987662,-4.308381,5.431237,-8.004466,0.091439,0.631972,-2.519557,6.434621,-6.393914,5.512845,7.176067,-0.982508,6.040560,6.759780,2.440970,-5.258804,9.602053,-9.792410,-5.275195,3.505852,6.050854,-0.358322,0.876119,-2.559497,-5.392387,-4.686109,-5.765508,-0.649209,0.516521,8.078637,-8.770504,-9.806814,-6.034310,-7.145781,6.481273,-2.765005,2.881016,2.096532,-4.202477,-1.390667,9.982972,9.066149,8.303906,2.868947,9.279365,2.013707,-7.466152,-0.373572,5.110965,-3.874737,-5.928948,3.718133,0.426324,-9.787942,-7.960401,-9.690265,-5.117382,1.296580,5.319673,-2.076724,5.436925,-0.341196,-8.917796,1.047842,9.152417,-6.374268,-8.097183,5.362291,-0.566270,-6.042705,-2.233456,-0.467624,-9.830526,-8.982513,-2.432749,-9.546055,6.507360,-1.660065,6.689441,1.333751,6.644802,-9.316417,7.065921,7.279330,-7.296886,-2.058751,-0.425535,2.273557,0.365000,-2.771754,-2.297720,1.975644,0.513870,5.192967,0.413162,3.033056,1.244755,7.910171,-8.260764,-4.371438,-8.805170,9.583938,-6.238903,8.910204,6.456119,9.844160,-6.799604,2.868779,-2.552291,7.165950,2.861688,-2.846880,-5.747673,7.979767,-3.659201,5.071630,-5.852067,1.527555,1.225097,-5.936323,-9.378119,5.563668,5.637007,-7.792142,3.479734,6.402104,3.768043,7.540171,2.772583,-8.806339,1.866764,-0.089135,-6.202374,-9.160326,-1.238921,-9.130331,-1.229184,-8.569732,-3.896937,-2.890526,-8.540458,-6.278585,8.102632,4.530242,-0.315815,1.239294,-2.173083,-3.064894,6.213340,-2.147423,1.444933,2.608014,-1.476182,9.265537,-5.172512,1.744710,-4.958145,-3.350291,8.138689,-2.025353,8.695830,3.460345,-9.897328,2.434476,-0.171194,5.593568,-7.820796,-6.348818,-6.600880,-6.428728,3.508484,0.038315,8.051594,3.875657,-5.307394,0.427389,9.516327,6.413161,-8.619679,-7.420820,-1.367044,-9.381685,-9.372163,-2.887561,4.035347,9.331581,-0.852574,-9.038454,1.808822,-2.874877,0.737174,9.774146,8.984545,-9.712730,1.784480,-5.817372,3.692913,5.107653,0.770993,-5.137799,-0.095647,3.425353,9.926682,-4.287224,-5.401270,-2.781047,-0.133155,-5.734967,-6.800381,1.783870,6.512497,4.612283,0.503532,-5.005471,-3.569267,8.628672,3.737168,2.497720,-2.369020,9.966356,9.980611,-4.848011,5.541997,0.368708,-9.688570,-5.878221,-6.795823,-0.473650,-5.554263,6.570039,0.967600,0.517618,5.186572,4.629488,-7.669784,-3.084535,-3.775032,-1.275100,-2.238267,5.424316,-8.759974,-3.708601,-5.883728,-8.797387,-6.530674,9.019773,-3.462319,-4.049771,-6.412524,1.785715,-7.246623,-5.534174,5.778377,-4.547012,-2.174831,-4.815039,5.743156,1.884848,8.356640,-2.938094,6.500387,8.704148,-3.163455,-1.973569,-1.613061,-3.555181,1.101610,5.905717,8.749068,-1.222044,-6.535883,-2.276110,-7.060746,4.898938,-7.484464,1.968106,0.625117,3.463973,-0.343465,-8.564284,-1.829165,6.430610,7.129983,-4.460608,-4.889537,-1.063007,6.688229,5.336174,6.358028,6.781828,-1.284825,7.045201,2.189244,-6.029712,-5.597893,-3.643001,2.389689,1.791324,1.604482,6.946924,-1.448953,-3.529837,-1.747100,8.278645,-1.778854,2.168250,0.394414,-3.155682,-2.588402,-4.089798,-5.267876,8.531055,-3.200992,-1.248405,-7.765486,-4.485819,-8.726694,-7.435202,-8.152290,-3.306238,-3.279524,2.724230,-3.175450,-0.993599,-2.813242,-6.761193,-1.505100,-0.403526,-7.105840,-5.068168,-6.124234,3.757715,7.664517,-4.182724,-4.449166,-4.190288,-7.427637,-5.355978,8.954357,8.274793,-6.241615,-4.777579,0.724379,2.242937,-4.140392,-1.746923,-8.161962,6.141982,8.574978,5.858761,-5.164851,-7.101909,-9.854387,6.313468,-5.126748,6.525291,-0.885707,5.149398,9.828186,6.482861,-3.179891,-9.956858,-0.059144,-2.095841,5.365915,8.897318,8.489759,4.872042,-6.040113,7.886313,4.220673,5.913832,0.637066,-8.152691,-7.848419,-4.630657,0.642482,4.507702,-2.687028,-9.938044,-9.289663,4.531733,5.921750,4.685306,1.104734,-8.306519,7.027297,6.690604,-9.433433,0.621956,1.077841,6.444150,4.521073,-3.743862,-3.042379,5.711657,-0.275657,-6.768315,7.501778,-6.868302,7.433393,-1.782326,-5.575503,1.819553,4.897591,1.266828,-8.865346,5.641117,-6.124582,4.965391,-8.525397,2.706635,8.876964,7.467525,2.850766,4.098874,-6.399314,7.796841,3.622432,-8.532502,-1.647229,-7.096446,-3.598183,-8.565642,2.691212,-3.829300,-3.287618,4.343233,0.926605,2.310502,-3.916818,3.345169,-1.146507,7.211105,2.184836,-3.826163,-0.633644,-3.524899,-1.826731,2.526665,-6.900331,-2.904648,3.600180,-7.151339,-7.771406,9.756960,9.029010,4.463277,9.061231,7.401672,-2.213977,-0.974121,-7.856050,-0.379145,8.010443,8.529335,9.340198,2.513987,0.196820,6.082074,5.601647,-4.679534,-8.822903,-8.656867,-3.319637,-6.585816,1.071526,8.041754,-0.445808,-6.561709,6.544210,4.668315,0.454237,8.925897,2.945490,-3.436606,9.428405,4.748664,0.979674,-4.320376,7.709682,-0.546130,9.031460,3.772514,9.010797,-5.231316,3.435067,1.314762,-8.733604,1.406446,-5.662585,-3.863453,-0.637979,1.475118,9.226231,1.091372,-8.083792,4.612802,-8.134584,6.525596,-8.043335,-9.333302,-6.280117,6.492677,6.496940,-6.786497,-9.852514,1.424145,-3.499832,-6.007774,-7.940677,-9.553022,-3.418822,0.415915,-3.455405,-8.016834,-7.784561,-2.609900,1.045760,2.914113,-1.276057,-2.329002,-9.424584,6.093479,-7.919823,-9.272371,-5.668699,9.307650,-0.114140,7.567099,-5.953312,5.319658,-6.726845,7.158673,5.658982,-3.804198,-9.571197,6.678537,1.832241,1.303358,-5.841260,-6.016114,-0.387831,5.416273,-0.165305,-4.789890,7.677185,6.299575,8.166192,0.413801,3.012538,8.740743,-0.589031,-6.987748,9.077999,7.089339,5.775528,-2.078684,7.677796,-3.598575,-4.329245,-0.630238,1.626997,-0.551171,-7.396506,7.580920,2.268542,3.142323,0.543644,2.929894,6.244132,7.737534,5.795893,0.136474,0.364491,-0.578836,-2.335546,4.696371,9.940075,-3.155288,7.129215,9.569971,-3.663713,-2.208045,0.749698,7.685677,-6.923528,7.926847,-4.998419,7.009719,5.835237,-9.201536,-1.316756,5.697115,5.990199,-3.818600,8.243297,5.902671,-5.129736,-1.900975,-4.284284,1.993014,-6.959763,-1.999354,6.788102,-6.986106,9.957002,-1.225708,6.339920,4.886624,2.942434,2.008832,-3.206965,8.958079,4.104764,-3.914478,2.387180,-3.440513,-1.936264,-3.074960,-2.426597,-4.271806,0.959419,-5.686374,-7.223727,3.142213,5.245594,3.529369,-6.992608,-7.914161,-2.793084,1.778622,-0.492806,1.666229,-1.346779,-3.787163,-2.144680,-3.355792,7.227745,-9.847439,5.728577,-2.298574,9.653169,-9.148670,-3.769075,7.816197,8.165224,-8.641813,-8.334839,-9.848139,8.176799,-0.986275,-6.204941,-0.713807,0.580371,6.481581,-8.678215,6.547551,5.424565,2.830636,-2.546476,-6.457016,6.674217,-4.009381,-4.272810,-7.174874,8.748034,-8.438781,-1.580140,-4.895609,0.956925,-4.292616,1.711226,4.310159,5.452661,-7.556014,6.322398,3.559487,4.485357,0.689171,-3.124404,2.543335,-9.316584,2.314500,-4.886867,-2.592418,-8.076188,-7.649756,-0.451212,-5.799645,-8.414923,3.152961,-9.987853,5.909664,-9.255950,4.625602,-0.155664,0.630786,-3.798820,8.695969,-4.568233,9.663547,-8.267556,-0.339521,6.129417,-2.651890,4.028567,-3.344883,-2.430016,1.240249,-7.059852,-8.805730,6.470785,2.742903,-5.609879,9.954747,-8.017347,2.163577,-3.072271,0.764777,7.145763,0.131300,9.345655,-2.700394,7.559133,0.106143,-2.680473,4.442758,5.933024,-8.647889,2.025479,-5.904130,-5.801805,6.463593,3.590105,-4.100106,-2.500307,0.680478,2.860198,-1.238113,0.644721,-7.712563,8.060287,6.823926,-7.773338,-0.906428,9.053434,8.216954,3.208236,-7.642040,8.529717,5.902387,8.275571,-0.894902,-4.628431,8.484150,-9.238865,1.019547,2.699873,-5.174345,-0.251668,-2.813694,1.240570,9.621838,-0.544485,5.755787,6.203281,4.976257,4.013833,6.949313,-2.067039,2.574784,9.210086,-6.032749,5.308341,-2.124345,-6.244312,-8.110183,4.622021,-3.247363], dtype = "float64")#candidate|5563|(2340,)|const|float64
bop_5564 = relay.maximum(call_5546.astype('float32'), relay.reshape(const_5563.astype('float32'), relay.shape_of(call_5546))) # shape=(2340,)
bop_5567 = relay.maximum(call_5547.astype('float32'), relay.reshape(const_5563.astype('float32'), relay.shape_of(call_5547))) # shape=(2340,)
output = relay.Tuple([bop_5541,bop_5564,])
output2 = relay.Tuple([bop_5544,bop_5567,])
func_5580 = relay.Function([var_5540,], output)
mod['func_5580'] = func_5580
mod = relay.transform.InferType()(mod)
var_5581 = relay.var("var_5581", dtype = "float32", shape = (13, 2, 8))#candidate|5581|(13, 2, 8)|var|float32
output = func_5580(var_5581)
func_5582 = relay.Function([var_5581], output)
mutated_mod['func_5582'] = func_5582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4316_call = mod.get_global_var('func_4316')
func_4317_call = mutated_mod.get_global_var('func_4317')
call_5586 = func_4316_call()
call_5587 = func_4316_call()
uop_5607 = relay.log(call_5586.astype('float32')) # shape=(2340,)
uop_5609 = relay.log(call_5587.astype('float32')) # shape=(2340,)
func_4073_call = mod.get_global_var('func_4073')
func_4077_call = mutated_mod.get_global_var('func_4077')
var_5618 = relay.var("var_5618", dtype = "bool", shape = (1890,))#candidate|5618|(1890,)|var|bool
call_5617 = relay.TupleGetItem(func_4073_call(relay.reshape(var_5618.astype('bool'), [9, 14, 15]), relay.reshape(var_5618.astype('bool'), [9, 14, 15]), relay.reshape(var_5618.astype('bool'), [9, 14, 15]), ), 1)
call_5619 = relay.TupleGetItem(func_4077_call(relay.reshape(var_5618.astype('bool'), [9, 14, 15]), relay.reshape(var_5618.astype('bool'), [9, 14, 15]), relay.reshape(var_5618.astype('bool'), [9, 14, 15]), ), 1)
func_2764_call = mod.get_global_var('func_2764')
func_2766_call = mutated_mod.get_global_var('func_2766')
const_5634 = relay.const([-6,-10,9,4,-9,4,-4,5,-4,-3,-4,-10,7,-1,9,8,2,4,6,-7,4,8,-10,1,3,-1,-3,2,-2,8,8,-7,-8,2,-8,10,10,1,8,-6,-5,10,9,-10,4,10,-6,2,7,-7,-3,-6,-2,5,-8,2,7,3,-1,-4,-1,-7,-3,-10,-5,7,3,-10,-10,-6,3,4,-10,-5,2,-8,-6,-3,-5,1,-1,7,2,10,2,4,3,-7,-9,-6,2,5,8,-8,2,-5,10,6,7,5,3,7,9,1,-6,8,-10,9,2,2,-9,-6,7,10,-1,5,6,10,-8,3,7,-6,-6,-6,2,-4,-5,9,-4,7,-4,9,-8,7,-9,10,2,4,10,-8,-8,-3,-3,-6], dtype = "int8")#candidate|5634|(144,)|const|int8
call_5633 = relay.TupleGetItem(func_2764_call(relay.reshape(const_5634.astype('int8'), [2, 72])), 1)
call_5635 = relay.TupleGetItem(func_2766_call(relay.reshape(const_5634.astype('int8'), [2, 72])), 1)
uop_5659 = relay.tan(var_5618.astype('float32')) # shape=(1890,)
bop_5664 = relay.mod(uop_5659.astype('float64'), relay.reshape(var_5618.astype('float64'), relay.shape_of(uop_5659))) # shape=(1890,)
output = relay.Tuple([uop_5607,call_5617,call_5633,const_5634,bop_5664,])
output2 = relay.Tuple([uop_5609,call_5619,call_5635,const_5634,bop_5664,])
func_5669 = relay.Function([var_5618,], output)
mod['func_5669'] = func_5669
mod = relay.transform.InferType()(mod)
var_5670 = relay.var("var_5670", dtype = "bool", shape = (1890,))#candidate|5670|(1890,)|var|bool
output = func_5669(var_5670)
func_5671 = relay.Function([var_5670], output)
mutated_mod['func_5671'] = func_5671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3680_call = mod.get_global_var('func_3680')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_5694 = relay.TupleGetItem(func_3680_call(), 0)
call_5695 = relay.TupleGetItem(func_3681_call(), 0)
func_5047_call = mod.get_global_var('func_5047')
func_5051_call = mutated_mod.get_global_var('func_5051')
var_5697 = relay.var("var_5697", dtype = "float32", shape = (60, 12))#candidate|5697|(60, 12)|var|float32
const_5698 = relay.const([-5,9,2,4,7,-1,8,1,7,10,-2,2,-1,-10,3,2,2,6,5,-9,7,-5,7,-9,-1,6,9,9,-1,5,-2,1,-10,7,9,8,-7,-3,9,1,-2,-3,4,-3,5,-8,6,-9,8,-4,2,-3,4,-3,9,-5,8,-1,2,-7,1,3,5,-6,8,2,-1,-8,2,-8,-5,9,2,10,-4,-2,2,-6,7,-2,1,6,-2,7,-8,-4,-9,-10,4,7,-7,-5,-4,8,3,8,-5,-8,-1,-10,1,3,8,2,-5,2,-10,1,-9,7,8,-8,10,-1,-2,-9,4,4,7,-5,-9,-2,-3,-4,1,-4,9,-3,9,-7,6,5,-7,-3,-7,7,-3,-6,2,-1,-3,4,-9,10,-5,-1,2,1,5,6,-10,9,-3,-2,-6,10,9,1,4,-6,-8,-8,-10,-2,2,-8,-4,-8,3,2,2,-7,7,-9,-9,10,1,-8,8,8,9,-2,5,9,-9,-5,4,-4,-2,-4,7,6,5,-8,3,4,-4,-4,8,6,6,-10,5,-1,-4,-8,2,-8,-6,-1,6,3,-2,10,-2,-7,10,-9,1,4,7,-8,-5,-6,-5,-10,-10,3,-1,4,-9,-10,-8,6,8,-7,-1,6,3,7,-8,-1,1,2,6,5,-9,-6,3,6,-5,10,10,-2,-7,1,7,4,5,-1,-4,-6,-1,-7,8,10,8,9,-4,-1,1,6,3,9,-8,8,-7,2,-9,-4,6,-2,2,4,-4,10,-4,-5,-6,4,-7,3,-9,1,6,6,-9,-6,-2,10,-3,1,-7,-8,-5,7,5,5,7,-3,-3,-4,-7,-5,1,5,8,-5,4,-9,6,-10,-8,-6,-1,9,-7,-8,5,5,3,-2,-6,5,10,1,-10,6,6,-4,-10,10,-7,-4,-4,-8,7,-7,9,-4,-5,-5,-4,6,5,-6,4,2,6,4,3,6,-6,-4,4,3,1,-6,-1,4,2,-8,-7,8,8,-3,7,-2,4,-7,-2,-8,10,-7,-6,-4,-2,-5,-7,-2,8,-6,9,-10,-4,9,-9,8,-3,-10,-7,-7,9,9,6,10,9,9,-4,10,5,-3,-8,-4,7,8,-8,-2,-7,-2,-4,-7,6,10,-4,-9,2,5,-2,-1,-3,-2,5,8,7,-5,2,-4,7,-10,6,1,-1,10,-5,10,-9,1,-8,-6,-10,-4,2,-1,-3,1,2,9,-8,7,-7,3,1,10,4,-4,6,9,7,-6,-2,-10,-8,-10,-6,-2,-5,-1,-1,-6,6,3,8,-9,-1,5,-3,-10,4,7,-6,-6,-8,-7,-7,-5,-3,-6,-10,5,-1,7,-7,-5,8,2,-3,-6,5,-9,4,-7,4,-7,-8,8,-3,3,5,-1,-10,-8,1,-3,5,1,7,8,1,8,8,-9,4,-10,-8,1,-6,-10,-2,5,6,-1,-4,-6,4,6,-3,-2,-7,-5,5,-4,6,-10,-8,8,-3,-8,-7,3,2,3,4,-2,10,-7,-3,8,6,8,4,-7,6,-5,-2,6,8,9,5,-5,9,1,-3,-9,-6,-3,2,7,-9,-3,-1,-7,6,-4,-7,9,-1,6,-9,4,-2,8,-1,4,-7,1,3,10,-3,-4,3,8,2,-1,9,-8,4,-8,1,5,8,10,3,3,-6,8,-8,5,-8,-5,-4,1,9,3,1,1,-3,3,3,-1,2,-8,4,2,-10,3,10,-1,5,-10,-3,8,-4,-1,-6,3,2,6,-5,-1,5,-8,-10,-3,-7,3,-6,6,-1,-6,-1,-3,-2,-2,9,-1,-7,-7,-2,-4,-3,-8,10,-10,3,6,-7,-9,-9,-6,-4,3,8,2,10,8,5,-4,-2,-5,-10,-10,-1,-8,2,1,10,1,3,7,-9,7,-3,-10,5,9,-8,4,8,2,-5,7,-6,-3,-10,-2,-7,7,-10,-4,-2,-10,-2,10,6,1,6,7,4,10,-2,7,9,-1,10,-4,8,5,-8,-1,8,8,-10,5,-4,-10,-7,-6,-10,5,-2,-4,-3,-2,5,-7,-7,-6,-9,1,-4,-10,7,-7,-2,-6,-3,7,-1,-9,4,9,1,6,-4,5,-7,1,10,-8,-2,9,9,1,4,-6,6,-8,9,-8,1,3,8,-10,1,3,4,-1,5,-3,-2,5,-2,-4,9,6,-5,5,-2,-4,-5,-8,-6,-4,-9,-1,-5,8,1,10,3,-7,-4,4,9,9,-2,3,-4,-10,-5,5,-9,-9,4,-10,7,7,-2,-7,6,5,3,-7,-6,-3,10,-10,10,9,1,2,7,-9,-10,-9,4,-6,1,-7,4,7,7,-3,7,2,-1,5,-4,6,5,-2,-7,-8,-4,5,-3,2,-2,-9,-6,8,-7,-7,1,7,-9,5,-5,-4,7,7,-6,2,-3,-6,3,-8,10,1,9,5,5,3,4,1,9,-3,-4,-2,7,-5,3,-1,9,2,10,-5,1,6,-5,7,6,8,7,8,7,4,-9,5,-7,-5,8,3,-7,-5,8,6,-3,4,6,4,7,5,3,3,9,-6,-9,-6,-7,-9,-4,1,-3,9,-8,3,1,9,-10,-3,-2,7,7,8,-4,-1,5,-8,-8,8,-10,-9,-10,4,-3,-10,5,6,1,-9,2,5,-3,-6,8,5,4,8,6,-6,10,-6,5,10,-6,3,9,7,-9,-1,6,6,3,4,7,-10,7,-3,-6,8,-9,3,-7,8,-3,4,8,-9,-3,10,-4,8,-4,4,3,5,-3,10,1,7,-8,3,-10,-6,-9,4,7,-5,-2,-5,10,-6,10,-4,-5,-5,3,-10,-2,5,-3,5,10,2,-8,4,-7,-3,-8,8,-10,-6,-10,-6,-3,6,-10,5,-2,2,4,-9,8,-7,-3,-10,5,5,-4,-8,4,10,-4,5,-2,7,5,-6,-10,-9,-10,-5,5,-10,3,-4,3,-2,-3,-4,-4,-2,7,-1,-2,9,7,7,-3,1,-9,2,2,-1,-1,-9,-6,-5,8,-1,4,2,-5,5,10,-6,2,-10,-4,-9,-6,1,9,8,-1,8,10,-1,3,-2,4,9,-8,10,10,6,-8,-9,-2,-4,5,-2,-4,-9,-9,-9,1,-8,-6,10,10,3,10,4,-8,-8,-10,9,1,10,-3,2,-6,-4,3,-2,7,-2,7,10,4,-2,8,10,-1,9,1,9,-6,-2,6,-1,-9,-9,-8,-4,9,-9,-7,-6,1,-4,9,-10,8,-3,7,-7,-6,3,-7,8,-2,5,-6,-10,6,-9,-1,1,2,4,-9,-4,-7,-1,-5,-4,-6,10,10,10,6,-5,8,-6,2,-8,1,6,-10,-4,-7,-3,7,-4,-3,-5,2,8,5,-10,4,-8,1,-2,-2,-7,-5,2,4,-1,10,10,5,4,9,-7,-2,-5,10,4,-4,-2,1,-2,-2,6,8,-8,3,3,7,-5,6,4,9,-9,-8,5,7,-8,2,-2,9,5,1,-6,-9,-7,-2,10,-8,-8,2,-8,5,-9,-2,-9,-1,5,-4,8,1,-10,-8,-8,-1,-5,-4,-5,10,5,-5,5,1,-5,10,-10,-3,-7,3,7,4,9,8,-6,-8,-2,-5,8,-8,3,-10,-10,7,4,-5,-4,-5,-10,8,3,6,10,2,-9,3,-8,-9,6,10,-6,2,-7,-4,2,-10,8,8,-7,-8,-3,-10,-5,-1,-5,-2,-5,10,3,-8,5,-10,4,-3,-10,-9,3,4,-8,-1,-6,-5,-1,-5,-8,9,-1,-8,-7,-5,-1,10,4,4,-10,7,1,-1,7,-7,10,-8,-7,5,-7,-2,5,-6,7,2,-6,5,1,10,-1,2,-4,-2,9,4,-10,-8,-8,7,-4,-3,8,-8,2,-6,6,6,-10,-9,-10,9,-9,8,-9,1,1,-4,1,-7,-9,-8,1,-2,-6,2,-6,-5,-7,-4,-5,-10,8,7,-5,4,5,6,8,9,-1,-8,-3,5,8,-6,4,-1,-1,4,1,7,-10,6,-1,9,-7,2,-2,9,4,-2,5,-1,-2,-10,2,2,10,-1,-2,-4,9,-10,1,-2,-9,3,10,8,-2,-8,6,8,6,7,-10,-1,-7,4,2,-4,2,3,-5,7,-1,-2,3,-5,9,-10,-4,-10,2,8,-1,3,2,-7,-10,2,9,10,-4,-4,-6,-4,5,-1,9,9,4,5,-1,-2,-9,2,-8,2,9,5,-10,8,-4,-2,-10,2,4,-9,10,-6,6,6,2,6,-4,7,-1,-1,3,5,-2,-7,-4,1,-8,2,-5,-9,-6,6,-7,4,-7,-10,-8,-2,-4,7,5,-2,5,10,2,-6,-4,6,7,-7,7,-5,-6,5,7,-8,2,-9,5,8,9,-4,10,4,4,-4,-1,-5,-9,7,-4,10,6,-4,9,8,8,10,-4,7,-6,-6,-1,3,3,8,4,5,7,1,-3,-3,1,-1,10,10,1,2,-8,4,5,-1,7,-9,3,-2,10,-7,1,-5,-6,-6,4,-8,2,-6,-3,-6,-10,7,-6,2,-6,-9,9,-7,-1,-3,-10,-7,-5,9,-9,10,-1,-7,-8,3,9,1,5,4,-1,-1,10,-5,-3,4,-1,-5,3,-9,2,3,3,-1,1,6,-2,5,7,8,-8,5,-7,2,-2,-1,3,6,-7,6,-2,-2,-9,10,-8,-7,-1,6,5,-7,8,-1,-1,1,-6,8,1,-4,-6,8,3,2,10,-3,5,1,-10,-8,-3,-1,-8,-9,-6,1,9,7,7,-5,7,-3,8,8,10,8,-7,-4,-7,-3,-6,-6,4,-7,3,1,10,2,9,7,-8,-5,-4,-9,2,6,4,4,-7,10,-5,-2,4,4,-8,5,5,-10,-10,2,10,-1,1,-4,-6,-2,7,5,-2,7,9,-5,-5,-3,-3,-9,4,9,5,8,10,-2,6,10,-4,7,2,-8,-8,-2,-6,5,-10,7,-8,5,-5,-4,-4,-6,-3,4,6,10,2,4,-2,-10,-3,-6,-4,-8,-9,9,-7,2,9,-5,7,-6,7,7,-8,4,7,-2,-2,-7,3,4,2,-1,-3,3,-2,-9,8,-10,4,-10,5,-2,-2,-10,7,-8,2,-8,-6,5,2], dtype = "int64")#candidate|5698|(1920,)|const|int64
var_5699 = relay.var("var_5699", dtype = "int16", shape = (90,))#candidate|5699|(90,)|var|int16
call_5696 = relay.TupleGetItem(func_5047_call(relay.reshape(var_5697.astype('float32'), [12, 6, 10]), relay.reshape(const_5698.astype('int64'), [1920,]), relay.reshape(var_5699.astype('int16'), [90, 1]), ), 2)
call_5700 = relay.TupleGetItem(func_5051_call(relay.reshape(var_5697.astype('float32'), [12, 6, 10]), relay.reshape(const_5698.astype('int64'), [1920,]), relay.reshape(var_5699.astype('int16'), [90, 1]), ), 2)
func_239_call = mod.get_global_var('func_239')
func_242_call = mutated_mod.get_global_var('func_242')
var_5702 = relay.var("var_5702", dtype = "int64", shape = (4, 108))#candidate|5702|(4, 108)|var|int64
call_5701 = relay.TupleGetItem(func_239_call(relay.reshape(var_5702.astype('int64'), [6, 6, 12]), relay.reshape(var_5702.astype('int64'), [6, 6, 12]), ), 1)
call_5703 = relay.TupleGetItem(func_242_call(relay.reshape(var_5702.astype('int64'), [6, 6, 12]), relay.reshape(var_5702.astype('int64'), [6, 6, 12]), ), 1)
var_5721 = relay.var("var_5721", dtype = "float32", shape = (60, 12))#candidate|5721|(60, 12)|var|float32
bop_5722 = relay.not_equal(var_5697.astype('bool'), relay.reshape(var_5721.astype('bool'), relay.shape_of(var_5697))) # shape=(60, 12)
bop_5727 = relay.greater_equal(bop_5722.astype('bool'), relay.reshape(var_5721.astype('bool'), relay.shape_of(bop_5722))) # shape=(60, 12)
uop_5730 = relay.rsqrt(call_5701.astype('float32')) # shape=(6, 6, 12)
uop_5732 = relay.rsqrt(call_5703.astype('float32')) # shape=(6, 6, 12)
output = relay.Tuple([call_5694,call_5696,const_5698,var_5699,var_5702,bop_5727,uop_5730,])
output2 = relay.Tuple([call_5695,call_5700,const_5698,var_5699,var_5702,bop_5727,uop_5732,])
func_5736 = relay.Function([var_5697,var_5699,var_5702,var_5721,], output)
mod['func_5736'] = func_5736
mod = relay.transform.InferType()(mod)
var_5737 = relay.var("var_5737", dtype = "float32", shape = (60, 12))#candidate|5737|(60, 12)|var|float32
var_5738 = relay.var("var_5738", dtype = "int16", shape = (90,))#candidate|5738|(90,)|var|int16
var_5739 = relay.var("var_5739", dtype = "int64", shape = (4, 108))#candidate|5739|(4, 108)|var|int64
var_5740 = relay.var("var_5740", dtype = "float32", shape = (60, 12))#candidate|5740|(60, 12)|var|float32
output = func_5736(var_5737,var_5738,var_5739,var_5740,)
func_5741 = relay.Function([var_5737,var_5738,var_5739,var_5740,], output)
mutated_mod['func_5741'] = func_5741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3959_call = mod.get_global_var('func_3959')
func_3960_call = mutated_mod.get_global_var('func_3960')
call_5810 = relay.TupleGetItem(func_3959_call(), 1)
call_5811 = relay.TupleGetItem(func_3960_call(), 1)
output = relay.Tuple([call_5810,])
output2 = relay.Tuple([call_5811,])
func_5817 = relay.Function([], output)
mod['func_5817'] = func_5817
mod = relay.transform.InferType()(mod)
mutated_mod['func_5817'] = func_5817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5817_call = mutated_mod.get_global_var('func_5817')
call_5818 = func_5817_call()
output = call_5818
func_5819 = relay.Function([], output)
mutated_mod['func_5819'] = func_5819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3924_call = mod.get_global_var('func_3924')
func_3926_call = mutated_mod.get_global_var('func_3926')
call_5820 = relay.TupleGetItem(func_3924_call(), 0)
call_5821 = relay.TupleGetItem(func_3926_call(), 0)
func_3420_call = mod.get_global_var('func_3420')
func_3422_call = mutated_mod.get_global_var('func_3422')
call_5831 = relay.TupleGetItem(func_3420_call(), 0)
call_5832 = relay.TupleGetItem(func_3422_call(), 0)
func_3787_call = mod.get_global_var('func_3787')
func_3789_call = mutated_mod.get_global_var('func_3789')
call_5844 = func_3787_call()
call_5845 = func_3787_call()
func_2036_call = mod.get_global_var('func_2036')
func_2039_call = mutated_mod.get_global_var('func_2039')
var_5849 = relay.var("var_5849", dtype = "float32", shape = (180,))#candidate|5849|(180,)|var|float32
call_5848 = func_2036_call(relay.reshape(var_5849.astype('float32'), [4, 3, 15]))
call_5850 = func_2036_call(relay.reshape(var_5849.astype('float32'), [4, 3, 15]))
output = relay.Tuple([call_5820,call_5831,call_5844,call_5848,var_5849,])
output2 = relay.Tuple([call_5821,call_5832,call_5845,call_5850,var_5849,])
func_5853 = relay.Function([var_5849,], output)
mod['func_5853'] = func_5853
mod = relay.transform.InferType()(mod)
mutated_mod['func_5853'] = func_5853
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5854 = relay.var("var_5854", dtype = "float32", shape = (180,))#candidate|5854|(180,)|var|float32
func_5853_call = mutated_mod.get_global_var('func_5853')
call_5855 = func_5853_call(var_5854)
output = call_5855
func_5856 = relay.Function([var_5854], output)
mutated_mod['func_5856'] = func_5856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3627_call = mod.get_global_var('func_3627')
func_3628_call = mutated_mod.get_global_var('func_3628')
call_5870 = relay.TupleGetItem(func_3627_call(), 2)
call_5871 = relay.TupleGetItem(func_3628_call(), 2)
output = relay.Tuple([call_5870,])
output2 = relay.Tuple([call_5871,])
func_5872 = relay.Function([], output)
mod['func_5872'] = func_5872
mod = relay.transform.InferType()(mod)
mutated_mod['func_5872'] = func_5872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5872_call = mutated_mod.get_global_var('func_5872')
call_5873 = func_5872_call()
output = call_5873
func_5874 = relay.Function([], output)
mutated_mod['func_5874'] = func_5874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4631_call = mod.get_global_var('func_4631')
func_4632_call = mutated_mod.get_global_var('func_4632')
call_5916 = relay.TupleGetItem(func_4631_call(), 0)
call_5917 = relay.TupleGetItem(func_4632_call(), 0)
func_4879_call = mod.get_global_var('func_4879')
func_4880_call = mutated_mod.get_global_var('func_4880')
call_5922 = relay.TupleGetItem(func_4879_call(), 0)
call_5923 = relay.TupleGetItem(func_4880_call(), 0)
func_5817_call = mod.get_global_var('func_5817')
func_5819_call = mutated_mod.get_global_var('func_5819')
call_5930 = relay.TupleGetItem(func_5817_call(), 0)
call_5931 = relay.TupleGetItem(func_5819_call(), 0)
output = relay.Tuple([call_5916,call_5922,call_5930,])
output2 = relay.Tuple([call_5917,call_5923,call_5931,])
func_5935 = relay.Function([], output)
mod['func_5935'] = func_5935
mod = relay.transform.InferType()(mod)
mutated_mod['func_5935'] = func_5935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5935_call = mutated_mod.get_global_var('func_5935')
call_5936 = func_5935_call()
output = call_5936
func_5937 = relay.Function([], output)
mutated_mod['func_5937'] = func_5937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3406_call = mod.get_global_var('func_3406')
func_3407_call = mutated_mod.get_global_var('func_3407')
call_5989 = func_3406_call()
call_5990 = func_3406_call()
uop_5994 = relay.rsqrt(call_5989.astype('float64')) # shape=(7, 14, 3)
uop_5996 = relay.rsqrt(call_5990.astype('float64')) # shape=(7, 14, 3)
var_6000 = relay.var("var_6000", dtype = "bool", shape = (7, 14, 3))#candidate|6000|(7, 14, 3)|var|bool
bop_6001 = relay.floor_mod(call_5989.astype('float32'), relay.reshape(var_6000.astype('float32'), relay.shape_of(call_5989))) # shape=(7, 14, 3)
bop_6004 = relay.floor_mod(call_5990.astype('float32'), relay.reshape(var_6000.astype('float32'), relay.shape_of(call_5990))) # shape=(7, 14, 3)
bop_6006 = relay.multiply(uop_5994.astype('uint16'), relay.reshape(call_5989.astype('uint16'), relay.shape_of(uop_5994))) # shape=(7, 14, 3)
bop_6009 = relay.multiply(uop_5996.astype('uint16'), relay.reshape(call_5990.astype('uint16'), relay.shape_of(uop_5996))) # shape=(7, 14, 3)
output = relay.Tuple([bop_6001,bop_6006,])
output2 = relay.Tuple([bop_6004,bop_6009,])
func_6010 = relay.Function([var_6000,], output)
mod['func_6010'] = func_6010
mod = relay.transform.InferType()(mod)
mutated_mod['func_6010'] = func_6010
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6011 = relay.var("var_6011", dtype = "bool", shape = (7, 14, 3))#candidate|6011|(7, 14, 3)|var|bool
func_6010_call = mutated_mod.get_global_var('func_6010')
call_6012 = func_6010_call(var_6011)
output = call_6012
func_6013 = relay.Function([var_6011], output)
mutated_mod['func_6013'] = func_6013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4879_call = mod.get_global_var('func_4879')
func_4880_call = mutated_mod.get_global_var('func_4880')
call_6020 = relay.TupleGetItem(func_4879_call(), 0)
call_6021 = relay.TupleGetItem(func_4880_call(), 0)
output = relay.Tuple([call_6020,])
output2 = relay.Tuple([call_6021,])
func_6022 = relay.Function([], output)
mod['func_6022'] = func_6022
mod = relay.transform.InferType()(mod)
output = func_6022()
func_6023 = relay.Function([], output)
mutated_mod['func_6023'] = func_6023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4177_call = mod.get_global_var('func_4177')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_6097 = func_4177_call()
call_6098 = func_4177_call()
const_6103 = relay.const([-1.911071,7.421371,5.718318,0.483620,7.866353,-6.660373,5.387830,-4.495038,-4.518996,4.465954,-4.674810,9.324593,-8.687183,6.283822,-0.267899,-0.753798,-0.005296,3.642871,8.375153,-6.829336,9.991133,2.246118,4.134377,6.505281,7.519222,-7.346674,-4.338982,-7.065709,-1.216466,4.810728,4.216866,-4.302043,7.764985,7.413866,-1.441575,1.939549,-0.451483,-1.805822,-6.598384,-5.305793,2.161387,2.178266,-3.194615,-9.032594,0.706214,0.870815,8.420697,-7.864631,-2.704799,-7.187728,6.791421,-1.231776,-2.038116,9.407535,-5.125849,-8.227566,7.094617,6.298218,4.100925,-6.332256,9.618463,7.378407,3.800381,5.693926,4.016810,-7.093856,0.350693,1.338140,-4.554402,9.584465,-9.247476,-8.682813,1.898362,6.355021,4.692650,-6.427308,1.563090,-0.705290,0.578789,-8.378911,2.283732,-5.525036,0.079326,-3.600947,-9.459692,-2.617809,9.150723,-6.757525,3.956491,2.041338,-8.429957,7.154252,-0.289355,-3.078701,-7.540723,-4.300994,-8.020909,-8.149289,-6.064753,8.356907,-5.958665,5.442666,-2.236990,9.853382,8.386769,-0.754400,-3.612097,-8.203536,2.226050,-5.936968,1.115341,8.957995,8.239798,-8.190717,-2.166115,3.883134,8.512562,-4.463875,-8.081599,0.011043,6.785523,1.780906,-4.246994,-2.199553,3.751048,9.961245,9.798791,-5.835357,-5.838740,1.679425,-2.177818,-0.102037,2.659622,8.302902,-4.648111,-1.448679,-5.944708,9.275032,6.427796,5.436483,-4.542483,5.352156,5.625106,2.352734,-5.606111,0.333131,8.307823,2.299487,-8.157949,-3.547910,7.107429,-1.822624,3.560565,-5.706562,3.104449,0.753912,-5.617206,-6.762925,-0.439412,-2.743337,-8.337305,7.060060,9.602092,-0.061500,1.671114,-3.315317,5.085141,-0.292430,-9.507518,4.317523,-9.351343,8.817480,-6.079671,9.628098,0.608354,9.988005,2.442206,9.924726,0.284098,-7.838570,5.553792,-1.173668,-6.726152,2.624361,8.225335,-4.222878,6.766529,7.364324,4.846153,-4.107202,-2.713346,-1.705962,-0.059865,-0.695698,-8.826494,-3.568541,8.524866,-8.364235,9.250763,-3.543094,6.864125,4.290408,-4.768587,-1.692132,4.871368,5.318214,-5.019153,0.632134,5.944957,1.806139,-4.078636,5.762836,-9.425767,8.832156,4.317590,-4.650350,4.116855,3.854783,-6.497024,8.830618,-9.626923,5.185588,9.429896,6.509868,-2.414531,-0.364906,-0.108558,-8.618780,5.833885,3.291411,4.270455,5.091489,9.906115,8.417291,-9.313455,4.645674,7.697674,-0.151021,5.214882,4.485121,-8.679000,-9.186053,-5.914886,4.649281,2.637243,-0.689859,-7.759819,7.943789,8.085927,-2.911055,9.703792,-5.860592,-5.247865,5.483438,8.597668,-8.133825,-9.983001,-7.187412,8.325094,8.825442,-4.139887,-2.952831,6.954060,-6.395214,-2.414424,7.143687,-0.545282,-1.644914,-0.139863,-6.788732,-5.984950,6.894922,-0.629096,8.858652,6.909520,-3.360186,6.563109,-5.599430,-4.555118,3.637484,2.374930,-7.425880,-0.615075,0.199690,1.439751,-2.800968,-6.654074,-0.317890,-2.653475,-2.256850,-9.170857,4.007903,5.874630,4.627071,4.130877,-6.409558,1.705106,-4.198828,0.160202,-7.119915,-6.180994,0.390452,-1.541571,3.121266,2.866902,-3.514415,-8.812216,6.561575,6.133310,6.709069,2.509884,-6.396994,-3.666731,9.201663,-6.128387,-6.608055,-0.375908,4.126689,-9.768396,3.339532,-2.383024,6.052161,-3.744086,8.071547,5.640313,-8.590514,-5.634471,9.073572,6.360059,9.306088,-4.190854,-1.656489,7.477935,9.974835,-7.598457,7.538097,-2.355351,4.688406,-9.381256,1.967174,0.229314,-0.755041,-6.976804,2.011159,-4.410047,9.849138,-6.328312,-9.541565,3.597085,6.238070,-1.606511,-4.417732,-4.055268,1.469067,-9.659196,-3.029873,-2.142793,-9.776701,0.608493,4.726919,-5.947446,-4.519533,-2.861801,-3.369214,8.308189,-0.096993,-0.833200,-8.247557,-0.890980,0.012060,-2.693109,8.078147,1.802361,2.179946,5.264366,-5.457956,6.963216,-6.405386,7.871209,7.533305,4.778781,6.458391,1.691333,-6.110846,9.739103,-6.483578,9.285262,2.856709,6.139034,2.765375,2.301382,-0.036884,1.155267,-1.434908,4.950486,4.619796,3.315271,7.125676,-2.795037,5.063491,9.692219,-9.863442,1.749262,5.461677,-9.685196,8.049451,7.782868,2.101185,-5.571319,1.602256,0.252151,-9.880766,6.411948,6.702322,7.206685,-0.757139,7.486204,-3.289499,-1.742676,5.062198,-7.628337,-1.167388,0.035967,-9.422440,6.725811,9.838072,-8.980698,-5.662956,9.206128,-4.391765,-9.953751,-0.100917,8.852735,-2.462975,-7.592682,-3.443938,-0.122305,-2.822382,-8.249653,1.575061,3.079191,6.083952,0.512988,8.861694,1.232272,9.181409,-8.816026,6.662735,-7.986767,3.768329,-6.861427,-9.595309,-2.313358,-1.223971,9.353156,1.979181,-4.812260,6.717435,-7.401486,5.386343,-9.504992,2.663003,-8.418494,-2.759161,-2.676356,4.076883,9.385304,5.075055,3.249895,2.704454,5.786804,5.311391,4.892291,9.880500,5.909714,5.449998,-6.306030,0.917252,-9.083371,2.262902,6.007353,4.808864,-0.859146,2.526588,-8.266800,3.262846,2.217574,8.451536,3.555848,-2.197481,6.572751,-9.708388,-2.038606,-4.371178,2.107614,6.625334,4.624437,0.428209,7.357529,0.935080,9.384672,7.992597,1.758507,1.201297,-3.376680,1.359452,-0.783213,8.498504,4.892814,4.241832,7.729849,-7.508196,4.255354,2.240395,-9.934972,-8.014578,7.177759,-2.119331,-7.868102,5.141123,8.732637,4.264953,-8.416653,-9.662698,-3.947193,-6.595414,-2.308975,-5.581285,-2.827650,-2.496304,-3.091935,9.404103,-3.685157,-8.534973,3.707281,2.928296,8.240637,-8.540459,6.579211,4.596159,-1.371881,-5.662586,-0.178107,-2.044526,-6.679376,4.599138,8.275365,-8.229647,-8.070085,7.273685,-5.980293,-0.697637,1.689667,1.091713,2.711907,-4.602508,-6.549380,-2.325719,-5.394239,4.234663,1.405316,7.354112,1.181087,8.708856,5.984426,-7.352756,8.037290,4.836953,3.911232,-7.560742,9.443689,9.382147,9.241449,6.814722,-2.169173,-6.811036,1.387304,3.254431,3.766186,9.559538,7.294687,-0.782045,-9.790692,8.880729,-5.578451,2.615303,-7.097460,7.026679,-2.713771,6.020116,2.552763,5.341043,-9.530429,-3.603967,3.042963,-7.851907,8.607873,5.891788,-6.431340,5.372680,-8.181008,-5.531477,4.376740,-0.388729,-1.051761,7.416716,6.037366,9.159983,1.520762,9.049684,5.968819,1.402768,-5.021110,-3.224059,3.699147,7.520458,-1.681442,-6.173993,4.976531,-4.515081,8.025889,-5.590655,-1.541868,-0.498390,7.251501,-5.415468,1.554299,5.996704,-5.451919,-1.380529,6.383892,-4.836850,2.612259,-0.463388,6.391426,8.211090,-0.572649,-4.224519,7.462043,-0.589434,-9.511316,3.951324,-8.430926,-3.530376,-6.064088,-3.758575,-6.470263,-2.936009,3.304034,4.163166,9.050808,8.080690,-2.543489,-3.592644,-2.983864,-6.479394,4.545179,-9.075001,-3.503290,-0.912633,5.807772,-3.001210,1.166046,-8.049461,3.251674,-8.305942,-8.530218,-3.407455,4.202386,-5.243436,8.895607,-0.086833,-7.320074,-1.643201,2.026135,8.281744,7.905166,4.112053,-5.155426,-9.234036,7.396310,-5.038912,-9.742422,-6.574471,1.740703,-6.767668,6.657975,8.079992,3.142923,-0.823807,0.334847,-9.161198,2.304365,4.118022,5.897881,-6.039324,-3.999519,-5.514812,7.536418,-3.703169,1.854745,-3.511070,-6.578881,-1.133539,2.310458,-5.654464,-9.000711,-5.986071,-6.935789,-4.211261,6.193944,-3.733534,9.931538,-3.555367,2.607533,-6.559998,4.450101,0.312996,-0.520463,-7.091508,-9.769723,-8.412678,5.841671,4.760479,2.812809,8.268347,-2.217336,-1.268355,-1.132226,-0.728936,-6.217760,-1.141799,0.423920,0.607364,8.778257,-0.765033,-0.857432,-2.784240,0.386359,-6.194142,1.587393,9.262887,6.721319,-3.391040,-9.228401,-7.846707,3.214074,5.186100,-3.456507,-9.034152,-9.121666,-7.205116,-3.198705,-4.962996,-9.879907,-0.761679,-8.954640,4.521795,0.474315,5.211586,-6.831933,-3.427503,-5.355778,1.901592,-1.015571,-1.321187,-2.809486,-7.013898,5.590743,-0.128636,9.674777,-6.907490,-2.550272,9.449226,9.252633,6.983697,-5.731060,2.536670,5.173368,-2.654448,-3.346944,-9.258757,6.511246,4.664702,2.278118,-9.481389,-7.336421,-7.572632,-8.666338,7.941432,-0.706294,2.732104,-5.983757,7.861279,5.079171,-9.058443,-1.306671,-8.705610,9.446426,2.934821,5.904787,3.889375,-8.281504,-9.437864,0.539210,-0.080589,2.968806,9.123263,-8.797479,5.027335,-0.929120,8.663489,7.110040,-5.668675,-6.386466,5.866311,6.641797,6.774335,4.388229,-0.290472,2.205050,-5.615601,-1.033414,6.179194,2.509321,8.000344,-5.232729,-2.305111,-3.697970,-8.862285,-2.434997,2.140076,-0.501754,7.465641,-4.828174,-1.795684,-9.973757,-6.716347,-5.675705,7.610918,9.359966,5.861525,-8.627917,7.262621,-5.305969,3.814837,0.713739,-6.594829,3.513097,1.932689,7.565813,-5.543622,8.068464,2.948649,-1.402591,2.563187,4.495156,8.665075,-5.679879,-8.947988,-6.158953,-0.663126,-6.090882,0.850640,-0.407238,-2.677553,-0.080046,-8.033363,9.962369,-0.294467,-9.206559,3.824791,-0.918314,8.585632,4.664356,-5.586066,2.185971,-7.254589,5.774722,-5.794525,-1.365255,-1.378211,4.663691,-6.752883,-3.632820,-6.340775,-9.696466,-9.003646,-2.425459,-0.132436,1.587237,0.338987,6.162174,2.625528,2.559110,-0.339140,-7.627655,-7.032178,6.370167,-8.391684,5.915331,4.778709,6.776890,4.640742,8.747282,6.519777,-0.837041,-8.676932,-9.788957,-0.453528,6.503076,-4.390350,8.486258,9.322437,3.775098,-7.152826,-7.973801,9.865315,3.625047,8.127946,-0.959756,-4.375791,6.821106,-5.993766,-1.920222,0.235513,7.483354,6.985658,-8.315840,-9.622579,-7.761648,9.135663,-2.462465,-2.193113,8.374207,-1.145794,8.365018,-6.749894,5.848263,-0.886934,2.030571,5.938906,2.397542,-0.876051,1.731624,-6.848659,4.063183,-3.689093,-6.268438,-0.580999,-9.961504,4.912724,2.597120,-3.300611,-5.197182,-1.376593,-2.819166,-4.720183,-5.110130,-9.475661,0.634094,5.006654,-0.753878,-6.899441,4.293103,-0.671731,-2.399371,0.582047,3.362945,-4.804322,-9.487915,4.762008,8.444170,6.416767,-2.574621,0.348208,-0.455463,1.845091,1.579759,2.730206,-9.658097,-5.426325,0.822537,-8.496739,-1.333025,-3.520874,1.528796,3.147018,3.539904,-4.422379,-2.123379,-4.758612,-1.042037,5.963647,6.171177,-7.768570,-5.064179,-9.675781,-6.921538,-5.515029,-8.740275,-4.666920,6.854891,-1.430347,-6.998180,-9.608213,-2.689004,2.302892,-9.861519,-4.241003,7.141553,5.801584,-9.125381,1.484561,-4.636550,5.949272,-1.010962,-5.019918,5.794898,-5.694052,8.363889,1.774488,5.251280,0.009061,9.710211,-8.229373,-1.484006,5.142709,3.307904,-8.061374,-2.340672,-6.845397,4.273671,-3.092535,5.949893,-7.282503,-0.711122,9.170178,-5.872391,7.080078,-6.097568,-3.648947,-3.567623,7.338582,-0.481163,4.454634,0.933320,5.846893,8.250228,-9.976112,-7.996630,7.692970,-7.332255,8.751312,7.201072,-2.669183,-2.675941,6.129598,-8.363707,-3.675112,-0.770443,-4.349466,-5.828819,-9.628732,5.554665,-1.208545,7.527331,-8.576855,-7.398974,-8.296389,8.702489,-0.654210,8.446950,-6.116824,-2.007278,-4.254250,-6.834986,0.231114,-8.603331,-6.740740,-8.728720,2.333607,8.415467,2.595567,3.012859,1.799739,-7.003248,-7.193461,7.126947,-3.864219,-1.941688,-6.720850,3.924713,3.952237,7.531017,0.301201,-1.469180,5.380124,2.103568,-4.477854,-9.339665,1.571195,0.124359,-9.362915,-9.346627,-3.259591,4.735986,8.061665,-2.445515,-3.077246,0.873638,2.676878,6.088832,3.599473,7.614320,5.057162,5.692055,2.642595,6.691904,-2.793614,-6.074482,-7.164228,3.472849,-6.442015,-5.186680,-7.464405,-8.138651,4.590171,-0.735047,-5.983222,-1.922711,-5.352651,-8.020643,-8.380416,2.035036,2.294394,-3.145485,-1.594292,-9.074921,7.881988,2.147765,-6.259210,-1.846517,6.158822,-9.289665,-2.935651,-6.258099,-2.221732,-5.269018,-5.436271,3.204577,4.153669,1.553354,-5.948515,-2.821864,-2.555814,0.126475,-4.860982,-2.851055,-3.923573,5.886023,-1.977364,5.408105,6.342408,7.086437,-6.123359,9.616324,-6.823906,8.441078,-0.377155,4.055258,0.265773,3.269206,-0.436128,-9.524512,-7.896515,9.385753,3.850912,-8.558239,8.375321,-4.740528,-7.463878,9.873904,-8.756705,3.184259,3.180706,4.265270,2.294074,-5.805948,-8.645297,1.901223,-2.903250,3.897441,1.328287,-1.882769,-1.816328,-8.009054,4.014777,7.230085,-7.931201,-9.995552,1.465969,7.695231,3.753848,-7.237520,-9.033961,-6.432180,4.962622,-3.560587,5.297908,0.293816,5.224947,0.071595,0.689780,-3.156743,7.099368,4.695207,-5.082842,-8.533797,-8.164390,6.761112,-4.952104,-1.475933,-6.676739,-6.737783,2.476832,2.872562,-2.472734,6.536004,5.676528,3.838316,1.548780,-7.994440,3.612366,4.180830,2.867202,-8.465851,-2.833178,4.807733,1.052398,1.436496,2.935100,7.169717,4.887777,-5.372865,-2.280142,6.775455,-9.917771,1.138495,-9.505545,-9.817304,-1.286205,2.789773,5.421673,4.644717,0.143683,4.840745,6.417588,-2.377852,-6.443281,5.384790,-5.448472,-9.683102,-2.714674,8.658568,-9.196970,5.518383,-3.753942,5.793445,5.862704,2.665031,4.879449,-8.462820,3.095592,8.322225,4.049616,0.845367,-5.768662,-6.309858,3.755156,6.437842,9.107925,-7.513776,-9.053093,9.210517,-4.795815,-6.228820,-1.234159,-7.628171,3.716168,3.361262,2.400702,-0.180387,-3.185660,-8.462635,-6.427223,8.910768,-9.113486,-2.633999,2.465467,2.783116,-5.773311,-5.214615,-3.661909,-1.242127,-6.862836,-7.307236,-8.617307,6.813154,3.974529,3.841780,-3.725261,-2.663895,-7.950342,4.251224,-7.257904,-4.542473,-1.740795,4.928599,7.630257,-1.650228,5.920352,4.170122,6.090738,-1.033982,1.636769,3.025818,-3.241660,-6.037922,-7.578298,6.272224,-1.210193,4.590890,-2.671359,8.428301,-5.963736,4.827869,-2.319255,-1.132045,-7.015790,8.081547,-9.066642,2.499781,-7.613714,4.872578,9.934750,6.012106,-3.042805,-7.363931,-7.590244,4.429019,1.443728,-1.140833,7.989678,2.630828,-0.818636,4.484186,4.067091,4.059152,6.695087,-4.838704,7.814672,-5.372071,-1.736546,-1.483551,7.305866,-3.607857,5.387151,-8.487587,9.431529,-3.344670,-2.834670,-3.835549,-6.842722,0.716205,-8.306975,-8.898924,-0.929769,-4.617774,9.109504,7.516970,-9.396996,9.295059,-9.874967,-2.428259,2.411880,7.917081,6.800347,-9.350798,-9.981322,8.723607,8.476497,-1.165298,-8.351271,2.387168,-5.765091,-8.801747,-1.579392,-8.265626,-1.548599,-3.140082,0.975395,8.426072,8.999903,-0.914542,-8.177519,-5.145692,5.657538,8.485991,0.817551,8.800017,3.197681,-7.805621,9.142282,-6.243487,-0.103267,8.832124,7.687383,-8.887271,-1.198802,-1.551804,-4.690314,1.274222,0.777366,6.563073,2.471315,-7.374483,5.206885,-5.773189,1.619005,-7.416957,2.866054,7.665296,-6.922040,9.542990,-6.919153,5.579250,-6.901103,-6.426952,8.208533,4.580047,-2.913663,5.196627,-9.077748,-2.551924,4.746023,5.347363,1.744504,5.147104,-2.698699,-7.401128,-2.200394,7.434328,-3.360452,-5.280131,-4.023747,-0.499398,-4.903983,-7.265410,5.705697,-3.410578,8.316729,8.417615,2.033580,-6.732248,7.127523,-2.482103,6.871803,6.967236,-7.959963,8.942689,2.056918,1.916257,-5.095726,-2.012314,9.975824,-6.213625,1.051267,9.748682,-5.468272,-7.297942,-7.548461,9.741691,1.992466,-6.889867,-0.540206,-0.455354,9.557448,9.035626,8.702773,-4.962017,8.636185,1.748444,-2.245400,8.091773,-8.640641,3.037016,-5.302542,-2.200991,9.530399,5.183904,6.406788,9.708313,-9.085440,-7.201414,-9.149189,-2.286764,7.590052,-5.347288,-8.442680,-1.771012,-4.248405,5.300060,-2.074903,-5.094337,-1.274469,3.743474,1.483843,6.849378,-9.472410,8.730751,-2.196134,-2.730933,9.736715,6.142482,-2.064940,-1.616311,9.280612,8.894695,-8.746440,3.874598,-4.829818,-6.446821,7.879592,4.519135,7.398278,2.690506,-9.812403,8.518302,-0.660678,8.704396,-5.502320,8.395542,4.103617,1.203053,-2.389089,1.907627,2.230288,-8.772620,0.493489,-7.696937,-5.593642,-8.941676,4.871513,-6.913665,-1.672318,-7.680075,-7.960384,2.141035,0.409810,8.276352,7.900079,-6.502907,-5.494022,-4.564075,-9.252050,-2.355761,-6.639109,4.598963,-5.697910,7.861421,9.219269,5.271404,-0.695526,5.914007,0.323391,9.264537,3.403167,7.243659,2.240326,5.092817,4.707705,-2.392077,-9.783329,6.614580,-7.089207,-5.769031,3.167197,9.088884,-7.817078,2.931686,2.940913,-7.748163,-6.179288,-1.131187,3.017371,0.473575,0.978066,-9.860124,2.332072,-9.035159,3.085944,6.203786,-8.837789,-3.124894,6.861602,-4.806198,-7.618803,-9.662990,-8.524541,-1.474380,-1.862638,-6.420417,-3.018839,-6.717146,7.700890,8.026562,8.761882,1.157847,5.077150,-9.428306,6.919732,7.162197,9.102326,-0.939965,-3.630569,-6.445909,-5.167676,-4.244632,9.658921,-4.433547,6.381333,0.658773,-4.424096,-1.073825,-1.451400,-3.344390,3.072014,-8.507575,4.147848,-7.407833,3.448911,2.380826,-9.403136,-3.221920,-5.751895,-5.790806,-6.181962,-2.851621,-9.025361,-1.229302,1.287736,-2.110741,-3.871826,9.507074,9.277024,9.871332,-5.492305,-7.763779,-5.932717,1.876496,3.869549,-2.870397,9.991070,-7.923074,8.318182,4.851046,1.798870,6.652823,-6.418109,-9.596586,3.774391,-8.645072,-4.885161,-0.761075,-3.997141,0.270224,0.850068,9.334525,-2.378203,-0.283058,8.992728,-4.145905,2.026230,-6.907177,-3.866124,8.345085,2.921390,-7.010160,-8.766711,-7.387917,-6.404159,-1.863394,-8.106506,-3.947669,0.625177,-7.305339,-0.366083,8.533416,1.191224,7.648356,-3.493438,3.956085,7.807462,7.868979,-7.995030,-7.719800,8.627296,-8.748825,-0.016308,-6.100416,1.690985,-3.714706,3.549585,8.204588,-1.164725,5.370277,5.727860,-7.748763,-5.222761,-0.299698,7.422081,6.042686,3.577765,-2.477207,-6.244470,5.698780,-4.547201,-5.187842,4.952214,-5.424012,-1.893177,3.261575,-1.411015,-8.206202,9.028283,7.484529,1.992097,-0.391342,-3.986786,0.216028,8.713482,-6.340561,-1.659364,-3.082180,-3.523215,7.051654,-6.529954,-8.863421,-7.178094,1.515592,4.904460,2.673578,5.289207,0.826566,-9.826218,-2.733617,4.872670,3.788254,9.626711,8.053644,-6.759223,2.862062,0.407309,2.069508,-4.278472,-4.610652,3.560885,3.031621,3.834756,-9.256624,2.115445,5.441281,1.241646,-7.018158,-5.801344,-9.569704,0.446926,6.036395,1.285879,-1.218557,8.196367,2.316538,-6.464152,8.173861,8.896696,-8.850659,2.085348,7.142727,-3.219705,1.128215,-9.298349,-0.271025,6.983189,-8.001592,-5.970516,4.998324,2.907660,6.714054,5.520415,3.278117,-6.143206,0.026466,-7.131251,1.907766,-3.650495,2.715216,-5.888317,-5.764312,-0.035720,0.562654,-8.339741,-9.312140,0.163005,1.299349,2.155669,-7.533406,-3.263978,6.615373,-5.718887,-6.077069,8.074745,6.574884,8.396914,-4.571807,9.857127,-0.940652,-2.204306,0.398212,-4.321671,-8.816801,-8.759931,-4.843315,-6.098534,2.780069,-4.746665,6.763667,7.157141,5.326163,3.533972,-7.223671,4.083287,-7.044076,-4.203110,-2.914166,-9.469271,-3.058643,9.379854,-3.466768,-2.189692,-1.892283,2.690465,-9.595630,3.414216,2.610385,6.551922,1.088639,-9.801893,-5.835772,0.240215,-9.907758,4.703613,-0.454022,2.551479,-0.065472,-6.790561,-6.143013,3.448116,5.188356,-5.240383,5.819074,-8.126406,1.408818,-2.596324,7.193841,-6.822231,3.699887,-3.239000,-4.353783,-6.901783,0.867503,3.549160,-9.201987,7.218463,5.742360,-6.847967,9.800931,1.880097,-3.359910,4.915348,-3.993443,0.293092,9.870621,4.891303,8.837170,0.740745,3.568627,-3.298667,6.541374,7.681039,7.242405,2.516588,-7.080313,4.722732,-2.926046,7.011228,-9.777447,-9.342716,-5.518630,0.970030,-4.916135,2.874547,-4.550573,8.671000,7.216732,-8.451727,5.232501,5.228793,8.070716,-3.785440,9.455467,-4.923187,-8.886179,-9.966285,-6.461193,-3.934049,-0.182126,-9.481547,8.495103,-0.971275,-1.579633,8.012793,-8.588699,-4.135067,-8.639398,2.554233,-0.956578,5.937924,-3.521469,1.566927,-0.944631,9.711108,1.358134,8.766761,-7.289616,5.614197,-2.528301,-2.424251,-8.341563,-5.291375,0.687824,-7.589368,3.029560,-4.141852,3.581941,5.375788,2.767605,-2.712001,-2.230048,5.957156,6.129743,-5.537417,8.037304,-3.178704,0.898345,-8.824686,-7.301438,-2.265407,6.999474,-5.465972,-1.125106,-1.632139,-3.858803,4.778608,-8.471455,0.624838,1.311809,4.989379,-8.653601,-9.132077,4.156025,-8.317212,-9.315786,2.469769,7.864473,-9.303941,2.288470,0.401834,-0.066699,5.631376,1.843100,-5.389523,-3.124233,-2.298770,-8.065006,-3.973504,0.388631,2.065305,6.689806,1.964921,-4.624027,-6.853212,-4.158659,-5.270554,-2.463224,9.648676,-8.767193,3.840597,-5.759088,-1.664507,-5.029685,-7.356655,1.320923,4.027211,-2.035828,-1.855316,9.008970,9.526777,-9.063557,-2.485712,3.313571,7.346388,0.665782,-7.282125,-5.196027,-1.597281,9.544735,-0.683139,6.007449,6.088901,5.608016,-8.341062,-0.710683,-3.572992,1.009376,-1.667678,5.877841,3.504646,-8.020636,-5.684266,-2.963207,5.971327,3.494795,-0.026469,-5.583709,-0.627265,6.176898,-8.651086,-4.380745,7.336623,9.394386,-1.405765,1.170207,4.144318,3.105467,-7.774898,1.585074,4.015855,9.031693,8.783916,4.943996,0.162968,-4.409516,4.855838,8.443232,4.844625,-5.437744,5.564394,0.388945,5.448990,-8.133232,-7.877078,1.685982,-5.718694,9.910054,-0.784236,4.265156,-7.042624,3.619222,6.806308,-9.991929,3.728165,-7.009915,-1.990844,-4.305233,4.711824,6.966816,-8.117012,3.224663,2.160199,-4.567554,-4.076702,-7.671112,8.908848,-8.677315,-7.116491,0.231677,2.093911,-7.265631,0.436424,9.990360,4.493762,-3.766883,9.616927,-2.413090,8.014296,8.196835,-4.254619,-8.649801,2.345923,-0.474517,3.760391,-8.160374,-4.726276,-2.686729,3.730070,-5.802550,-9.457062,-4.617348,-2.698396,-7.965415,6.848737,3.018855,5.205592,5.621661,-3.154823,-1.289919,-2.141767,-7.805517,6.539022,-6.481866,-2.537284,2.540210,-1.352228,2.023464,-3.932067,-2.069714,7.033127,-2.408829,5.277283,9.056705,6.227231,6.311908,-2.879909,-6.503531,-7.286199,-4.125426,9.785940,1.470543,0.288458,1.141439,-1.114731,9.296307,1.420757,8.680247,-1.336754,9.777463,-2.916552,8.959958,-0.597567,5.327920,-4.134418,-2.045032,8.816010,9.171348,-4.030848,4.376723,-0.351883,-3.041696,-9.011183,-0.541589,-8.168527,-4.180063,-5.819704,-1.570829,-2.704584,8.615224,6.757782,-0.676951,3.088109,-2.336999,-4.603475,4.814010,-4.874061,6.595030,6.175710,7.626367,4.589287,-2.993464,5.707822,-4.602266,-9.478684,0.110850,9.907933,4.340611,0.918291,-0.561479,7.085922,6.914603,9.264286,-2.038005,-0.933066,7.190985,6.003524,-4.819619,-2.052147,-3.575469,-3.379225,-3.889358,-8.269558,3.806397,7.009031,4.526881,3.499681,1.643135,5.125123,5.116481,2.688391,3.793939,-3.650313,-2.207762,9.755119,-5.508090,-2.609307,7.383131,-5.565582,-9.584137,2.821784,-2.716467,-7.582525,6.327822,7.757708,-0.399149,0.766394,8.718861,7.200868,-7.333333,2.291064,-8.792385,-3.652606,-5.424490,-2.111166,-0.793140,-2.912222,-4.248450,-6.830718,4.694818,-0.057368,8.007943,9.251250,-6.867093,-5.459159,2.263795,1.996758,7.186878,-5.687787,-9.953090,-9.895402,-4.506510,7.419229,-2.461795,-2.240205,5.273035,2.244835,3.261482,4.439844,4.412965,-0.324362,4.375548,-2.385857,9.892021,-8.623181,-8.815129,4.478163,-2.533879,7.776623,-7.304081,-3.008623,5.864487,-4.125867,-1.591232,-9.764744,7.283947,8.622688,-1.652258,4.274915,-6.660988,7.577023,5.892435,9.077252,8.325124,-2.093980,-6.161335,4.375094,-8.926994,-9.335183,2.367151,-1.044696,-6.780016,-3.862039,3.944036,-1.282129,6.284947,-6.709319,-6.508522,-4.930365,6.681173,-7.773250,3.800950,0.088505,8.336057,1.875420,-0.259744,-8.477178,3.703227,4.028203,-2.470055,-4.800855,3.312341,-6.650112,-2.094324,1.772320,3.645262,2.517303,2.209715,-8.070524,1.005280,6.549357,5.165639,-7.494564,-7.392104,-1.665728,0.628972,3.034492,7.270311,9.977964,-5.106510,9.514266,-5.807458,2.361594], dtype = "float64")#candidate|6103|(2340,)|const|float64
bop_6104 = relay.logical_and(call_6097.astype('bool'), relay.reshape(const_6103.astype('bool'), relay.shape_of(call_6097))) # shape=(2340,)
bop_6107 = relay.logical_and(call_6098.astype('bool'), relay.reshape(const_6103.astype('bool'), relay.shape_of(call_6098))) # shape=(2340,)
func_3067_call = mod.get_global_var('func_3067')
func_3073_call = mutated_mod.get_global_var('func_3073')
const_6111 = relay.const([6.282239,-4.739969,-2.210763,-0.764364,9.252449,-9.350559,-8.625797,7.844757,-1.625410,9.960472,-2.035500,-5.955236,2.115956,2.917395,-7.058854,9.146333,-7.749215,-5.523519,-9.924115,-4.405132,3.853531,-7.530888,4.162365,7.593359,0.095949,3.071159,3.014456,4.545788,6.670010,-8.419658,1.924346,1.350592,3.358026,-7.419183,-5.083790,8.163351,-9.114939,1.531030,5.842183,6.633097,8.425147,-0.322154,-6.023941,-5.872329,6.451110,9.209308,-9.454836,-7.537188,-6.617829,9.241116,2.084906,-1.416779,-2.018543,7.028506,-7.937624,6.675047,-3.070872,-8.094212,3.113580,-4.336393,9.291684,2.286349,-5.601004,-0.108673,-3.653476,0.083413,-1.247738,4.199701,3.698933,2.015592,5.788694,-6.615553,-6.028461,-2.478783,9.981926,-5.315694,-8.956766,-9.780710,0.538470,0.943870,-0.838382,4.487987,-0.954867,-1.764248,-9.128944,1.051952,-0.644022,5.732611,3.158071,-8.465115,-4.024724,2.635252,-5.713143,4.256083,-7.372250,3.581567,2.406885,-1.973008,-7.475054,9.801918,-9.550533,-1.608043,-7.130450,8.806831,-3.055417,-2.694732,3.748032,2.334346,2.806501,3.848141,-3.154355,0.146084,-5.196271,9.131354,-6.551300,5.548916,-7.122195,6.762989,4.294189,-5.797347,-1.338872,-1.712371,-2.456345,6.919384,-0.777626,-3.361543,8.274463,-7.820363,8.628900,-0.140344,-8.183166,-6.427198,-0.040622,-0.018619,-9.934273,7.201256,3.804698,-6.122985,1.236804,-1.938714,8.803060,-1.764814,-0.404012,-2.314541,0.434310,4.118843,-6.727208,-3.514437,9.256352,-4.316460,1.353676,-2.894903,8.536834,-1.253122,-5.303617,-9.957242,5.518252,-8.998127,6.905202,0.428724,-5.699929,-3.471466,-2.425361,3.379998,4.939971,-5.724795,8.046804,-2.080898,1.118034,5.206110,8.605484,1.327700,0.756528,-3.554627,-3.067802,2.639275,-9.871596,6.244691,-6.211215,-2.194906,-9.344396,-4.753018,8.946159,-2.733104,9.447944,-3.747120,4.517733,-5.403087,0.969982,4.065631,-8.799970,-0.790608,6.230550,-6.138472,-3.499622,9.160914,6.340580,-2.578091,-8.373931,0.161168,9.709402,-9.390605,-5.112899,3.302586,3.366767,6.351178,2.237707,-3.500393,-6.227928,-5.221396,3.380936,0.896277,1.398019,6.178616,8.542803,7.563566,-6.369188,7.943331,-0.649737,0.155099,-8.956946,-6.792366,-7.188699,-8.266678,8.514012,-7.157500,-9.350223,7.373338,5.529496,-5.843271,1.831335,5.185253,6.489813,-4.969619,1.842688,-1.276286,8.319705,9.445483,4.346402,-2.771591,-7.657841,-6.974541,-5.660012,-9.990845,-2.214742,-8.420847,5.680275,-2.269726,7.927077,-1.107643,-4.650642,-4.236112,7.000831,8.257970,3.651006,5.598771,-0.619267,-7.586607,0.805882,2.989677,4.201293,-7.117088,8.861037,-0.615042,5.046803,-9.662684,5.041343,6.810893,-3.956719,6.330423,-7.659035,-9.738233,-6.706724,-8.998350,2.812668,-2.787347,7.496570,0.369333,2.879518,8.051491,5.713130,-0.629287,-1.382592,4.775348,-0.892849,-0.229310,-2.797212,-8.273229,-6.692801,-6.894825,-9.738089,-0.560416,9.606824,-4.445906,7.016964,-8.041274,6.356184,0.312339,-9.371245,6.413745,-1.290397,-3.505261,-3.598281,0.149883,1.584562,-5.001347,-2.393719,0.700675,3.918565,-9.932109,-7.229574,2.779121,7.536459,6.960382,7.527987,2.660055,9.415581,-6.277762,-6.851169,-3.541269,-2.914740,1.584294,6.360837,-9.751966,-3.525838,-9.825696,1.446617,0.370151,-2.655201,6.175208,1.183091,0.129205,-0.748600,-8.895294,-8.345085,-8.625599,5.798336,6.002405,-4.787241,3.889257,8.520330,9.636664,0.828388,3.041525,-7.949005,-3.619966,5.757923,-3.741144,5.148513,-4.718976,8.644237,-8.883776,-5.593166,7.149674,-4.947071,-4.845770,-7.439501,-2.796288,-0.541275,-2.975371,-7.994635,-5.018848,-6.021644,0.945238,9.841356,1.637480,-8.999643,3.083173,-6.687787,-3.274877,-2.795931,-1.888726,-8.133812,-0.009259,-9.150342,1.190936,2.305923,9.752274,-9.724304,-2.054798,-5.736166,-3.425915,0.655505,-1.462819,1.138776,-0.434026,0.995412,-9.539376,-8.267900,-8.162397,3.137278,1.170889,9.719176,3.837624,-2.693760,3.469117,2.474172,3.662711,6.958436,-8.890166,-3.529347,-6.304987,2.611721,-2.842937,-8.997079,7.942571,-3.959028,-6.448009,2.095754,-7.936951,4.101658,-5.685564,6.049419,-6.606771,3.636690,1.473445,2.584506,6.516956,1.956251,-5.049652,-6.795261,6.626865,6.453769,-1.352981,0.945287,-7.070121,-4.748734,-5.460717,-9.301534,7.366704,3.976803,-1.562930,-1.664406,-0.386925,4.195561,1.437646,-8.439519,-8.087915,8.406112,-6.465778,8.608096,0.805486,7.371535,-3.078559,-9.614318,-9.978833,-4.964265,6.366526,-5.520482,-8.762877,-1.152931,-0.832618,3.306481,-5.450181,1.246760,3.532687,2.351906,7.749716,-2.623461,3.443089,6.292807,7.782590,-1.409026,-5.045284,-6.819034,-7.969598,8.272222,5.691501,6.872754,7.715190,-7.941726,-2.134634,7.527475,-0.806069,2.171052,4.843272,2.105630,-8.414199,5.823287,1.907724,-2.161892,-0.213987,-4.145921,-5.634178,-0.126537,-0.099380,-9.042923,-5.413054,-7.697688,-0.300075,-9.196948,-7.650923,-1.830556,2.838109,-4.842575,0.141223,-0.470822,-4.639562,9.506381,9.999331,-7.255745,-1.946597,-7.433877,-7.075443,0.532364,-7.756612,-7.106741,-8.968898,7.188960,-0.604895,-0.428427,-8.365649,-5.940718,7.125540,1.676978,8.495373,-1.865940,0.967097,-6.261430,-3.068721,-0.001568,-7.292358,4.754633,7.117641,-8.984653,-6.109414,3.100575,-1.929767,1.335261,9.427064,-3.235277,-9.798825,-6.956779,0.284025,-1.176645,-9.607676,-9.893883,2.834239,1.886356,-2.938200,5.721187,-6.443897,-6.435441,-2.457657,-5.126402,-8.408395,-3.812481,-7.952562,-0.263218,2.250409,9.408589,8.828267,-6.748435,9.325223,9.976361,-6.512636,3.868537,6.942457,3.559852,3.669828,9.643965,-9.254138,2.674545,-1.378729,-9.077527,-8.672565,-7.650318,3.770189,-7.666358,-5.133023,-6.815111,-2.927053,-6.038121,5.272615,0.284701,7.399760,8.198407,-5.294709,-7.632391,-5.225586,1.385399,-4.760641,8.126156,-3.651216,9.726753,3.827696,6.957670,5.950592,-1.325190,1.170443,0.565273,-4.823684,-6.074579,4.817819,-8.093431,0.578594,-4.382100,3.903275,6.078842,-9.681869,-5.875988,8.754918,3.587130,3.007021,9.323301,-8.558329,-3.955340,5.626255,4.791902,5.716711,5.428924,0.287407,4.388857,9.130391,5.299697,7.699073,6.654343,1.208774,9.869684,-6.514688,-2.492354,7.267333,-9.873831,0.709987,-3.342653,7.399340,-5.089818,1.406070,4.390701,-1.904603,-7.988965,-4.562201,-1.863892,2.402127,5.502074,5.660639,-4.765749,-5.187404,3.174618,-7.450480,-1.800637,1.357959,4.991686,-4.985282,4.902197,9.572726,-8.636128,-4.792995], dtype = "float64")#candidate|6111|(648,)|const|float64
const_6112 = relay.const([[-9.914385],[8.492450],[-0.868358],[7.442991],[-3.565714],[-0.613649],[-2.596478],[-0.928994],[-7.691085],[4.445914],[-9.964648],[-8.968011],[4.804466],[-0.090756],[-2.384596],[4.012458],[8.039687],[0.859055],[2.690013],[-1.574604],[-0.780833],[-0.982647],[-4.502612],[-9.817690],[-9.291395],[-8.162976],[1.310809],[7.263102],[6.665182],[7.984736],[-2.010596],[-8.048977],[7.421783],[4.308373],[-3.535974],[-5.106210],[1.975144],[8.903566],[9.478992],[-8.521463],[-1.230615],[-5.725730],[8.274208],[-4.131561],[9.679609],[-1.567238],[-6.244465],[5.100600],[-8.745671],[-6.813207],[7.314090],[-4.828469],[4.689517],[-9.024821],[9.339718],[4.579701],[-2.410381],[3.913988],[3.697599],[-1.722268],[5.930995],[-6.797537],[0.654812],[6.761456],[3.547137],[9.937212],[-4.353462],[0.219638],[9.220048],[0.623572],[-3.185616],[-3.082424],[-3.452009],[9.353466],[8.142632],[0.166053],[-7.254773],[-6.262418],[5.754253],[-9.590054],[-6.097148],[2.975426],[9.740633],[-9.032446]], dtype = "float32")#candidate|6112|(84, 1)|const|float32
const_6113 = relay.const([-2,5,-1,6,-6,-9,-8,-2,3,-10,7,-3,-4,-2,-2,4,7,1,10,4,-4,-8,9,-7,-6,-5,2,-5,1,-7,2,8,1,-9,-9,-8,-4,-5,6,5,10,-5,8,-1,9,3,-1,3,10,-4,-3,-2,-9,-1,-9,-9,8,3,3,-4,-2,-6,-8,7,-10,-9,-3,3,-9,1,3,-9,3,7,-4,10,10,10,-6,-9,8,-1,-10,5,9,7,5,2,-8,5,2,7,-3,1,4,6,-8,4,-1,7,-6,-1,2,10,4,1,1,9,5,-3,-10,2,6,-7,-7,-5,3,-6,1,5,1,1,-4,-8,-10,1,-10,9,-10,-2,-3,10,5,10,-1,-9,-3,-4,1,-7,3,-1,10,8,6,-7,-9,4,-4,-9,-3,9,1,2,-5,2,-6,2,3,-6,-2,-8,1,-4,-8,1,-3,7,4,-5,6,-1,-10,-10,3,-10,8,-7,-1,5,-5,-3,7,-2,7,3,5,-8,5,8,4,4,-7,3,1,9,4,-4,-2,-3,-6,-4,10,-5,-2,4,10,-9,10,-7,8,7,-10,5,1,-10,-6,-5,-10,5,3,9,-9,10,-10,10,-3,-2,-2,-4,8,-8,-10,-3,3,-4,7,-10,2,6,9,2,5,-6,2,7,-3,4,-10,-6,5,9,-3,-8,1,7,-10,-1,-4,9,6,-7,3,-4,8,-3,-10,-7,-3,8,-7,-5,3,-1,2,4,-5,7,-2,-8,3,-5,8,-5,-7,7,7,2,-8,8,10,-8,-3,-5,-9,7,-6,4,4,-7,2,4,7,-9,6,5,-1,5,1,9,2,-2,8,-4,-7,1,6,9,1,8,-7,-7,7,2,-1,10,5,-6,9,-5,-3,-6,-4,-2,-6,4,3,-2,3,-10,5,10,1,-4,5,7,-8,9,-1,-6,-1,-10,10,-7,-8,-7,-7,6,4,10,-1,-9,1,8,-9,9,-3,-6,-3,-7,-10,-7,-3,6,-2,9,5,-10,-6,-10,-3,4,-10,-10,-3,-5,3,-3,2,6,-8,-7,2,1,8,-10,-10,6,7,4,-2,5,10,4,7,-8,-4,8,-4,2,10,-2,8,-2,-3,5,7,1,-7,-9,-4,1,-4,3,-10,2,9,-4,-2,-10,-5,2], dtype = "int64")#candidate|6113|(432,)|const|int64
var_6114 = relay.var("var_6114", dtype = "int16", shape = (3, 30))#candidate|6114|(3, 30)|var|int16
call_6110 = relay.TupleGetItem(func_3067_call(relay.reshape(const_6111.astype('float64'), [12, 6, 9]), relay.reshape(const_6112.astype('float32'), [84,]), relay.reshape(const_6113.astype('int64'), [432,]), relay.reshape(var_6114.astype('int16'), [45, 2]), ), 7)
call_6115 = relay.TupleGetItem(func_3073_call(relay.reshape(const_6111.astype('float64'), [12, 6, 9]), relay.reshape(const_6112.astype('float32'), [84,]), relay.reshape(const_6113.astype('int64'), [432,]), relay.reshape(var_6114.astype('int16'), [45, 2]), ), 7)
bop_6122 = relay.less(const_6103.astype('bool'), relay.reshape(call_6097.astype('bool'), relay.shape_of(const_6103))) # shape=(2340,)
bop_6125 = relay.less(const_6103.astype('bool'), relay.reshape(call_6098.astype('bool'), relay.shape_of(const_6103))) # shape=(2340,)
output = relay.Tuple([bop_6104,call_6110,const_6111,const_6112,const_6113,var_6114,bop_6122,])
output2 = relay.Tuple([bop_6107,call_6115,const_6111,const_6112,const_6113,var_6114,bop_6125,])
func_6131 = relay.Function([var_6114,], output)
mod['func_6131'] = func_6131
mod = relay.transform.InferType()(mod)
var_6132 = relay.var("var_6132", dtype = "int16", shape = (3, 30))#candidate|6132|(3, 30)|var|int16
output = func_6131(var_6132)
func_6133 = relay.Function([var_6132], output)
mutated_mod['func_6133'] = func_6133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3809_call = mod.get_global_var('func_3809')
func_3811_call = mutated_mod.get_global_var('func_3811')
call_6149 = func_3809_call()
call_6150 = func_3809_call()
output = relay.Tuple([call_6149,])
output2 = relay.Tuple([call_6150,])
func_6152 = relay.Function([], output)
mod['func_6152'] = func_6152
mod = relay.transform.InferType()(mod)
output = func_6152()
func_6153 = relay.Function([], output)
mutated_mod['func_6153'] = func_6153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4879_call = mod.get_global_var('func_4879')
func_4880_call = mutated_mod.get_global_var('func_4880')
call_6162 = relay.TupleGetItem(func_4879_call(), 0)
call_6163 = relay.TupleGetItem(func_4880_call(), 0)
output = call_6162
output2 = call_6163
func_6164 = relay.Function([], output)
mod['func_6164'] = func_6164
mod = relay.transform.InferType()(mod)
output = func_6164()
func_6165 = relay.Function([], output)
mutated_mod['func_6165'] = func_6165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2895_call = mod.get_global_var('func_2895')
func_2897_call = mutated_mod.get_global_var('func_2897')
call_6169 = relay.TupleGetItem(func_2895_call(), 0)
call_6170 = relay.TupleGetItem(func_2897_call(), 0)
output = relay.Tuple([call_6169,])
output2 = relay.Tuple([call_6170,])
func_6184 = relay.Function([], output)
mod['func_6184'] = func_6184
mod = relay.transform.InferType()(mod)
mutated_mod['func_6184'] = func_6184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6184_call = mutated_mod.get_global_var('func_6184')
call_6185 = func_6184_call()
output = call_6185
func_6186 = relay.Function([], output)
mutated_mod['func_6186'] = func_6186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5292_call = mod.get_global_var('func_5292')
func_5294_call = mutated_mod.get_global_var('func_5294')
call_6187 = func_5292_call()
call_6188 = func_5292_call()
output = call_6187
output2 = call_6188
func_6189 = relay.Function([], output)
mod['func_6189'] = func_6189
mod = relay.transform.InferType()(mod)
mutated_mod['func_6189'] = func_6189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6189_call = mutated_mod.get_global_var('func_6189')
call_6190 = func_6189_call()
output = call_6190
func_6191 = relay.Function([], output)
mutated_mod['func_6191'] = func_6191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5331_call = mod.get_global_var('func_5331')
func_5332_call = mutated_mod.get_global_var('func_5332')
call_6210 = relay.TupleGetItem(func_5331_call(), 0)
call_6211 = relay.TupleGetItem(func_5332_call(), 0)
output = call_6210
output2 = call_6211
func_6225 = relay.Function([], output)
mod['func_6225'] = func_6225
mod = relay.transform.InferType()(mod)
mutated_mod['func_6225'] = func_6225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6225_call = mutated_mod.get_global_var('func_6225')
call_6226 = func_6225_call()
output = call_6226
func_6227 = relay.Function([], output)
mutated_mod['func_6227'] = func_6227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4177_call = mod.get_global_var('func_4177')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_6228 = func_4177_call()
call_6229 = func_4177_call()
const_6230 = relay.const([-5.116126,-4.098385,9.832814,6.713793,-3.924633,-4.265583,-6.115839,-4.493340,3.716470,-0.209892,-3.074668,-9.757025,4.586054,1.398818,-0.040513,-8.101276,3.059878,9.797435,9.081804,3.735855,9.434706,9.800285,-4.900077,-6.941938,-5.155827,-0.459881,9.584083,-0.141066,2.666946,4.157313,-0.470693,-7.556749,-7.660492,-8.109540,-9.482099,2.481834,-1.202186,-7.367892,-6.865511,-9.144296,5.876544,6.532487,3.834186,8.249751,4.711234,0.795141,5.297896,-9.327760,4.575359,4.302947,-6.306120,7.646536,-3.874437,2.627138,8.054750,6.042509,-5.695190,1.181282,-4.167386,-8.077962,5.426230,-5.865538,1.080969,8.912407,0.069354,6.109644,2.351291,-8.339202,-8.936175,4.902263,-7.546445,-6.801069,0.900794,-8.149397,-9.594330,-9.906567,-6.665017,-3.811633,3.175168,4.564587,7.681765,-0.904345,4.662673,-2.010945,4.429501,4.157041,-3.790268,-5.636196,9.933280,2.760694,-1.167867,-8.464359,-5.867228,-4.689554,-5.706272,9.760492,-2.153766,-1.577529,-7.165167,8.106008,-0.449004,7.773244,-6.548498,4.227414,7.156577,-5.546129,-6.907349,-6.667734,7.376326,-8.011350,-2.879972,5.540682,1.396585,7.674036,-2.396217,7.762598,9.884897,3.111911,2.673931,-5.956291,-1.413877,-0.299646,0.869404,2.032558,6.843409,-1.425684,5.896003,5.419500,1.603755,4.043914,3.913598,1.841934,9.403460,9.755024,3.103606,1.677359,-0.010766,-1.376102,0.657651,-8.882241,1.453358,-2.790329,0.417058,8.254619,-0.271603,-0.559551,-3.905703,8.530090,9.333996,-7.408412,-2.103306,-2.482472,6.148983,-1.827059,-8.481384,2.483824,0.632359,2.388037,7.515356,3.291977,0.073872,-0.294232,1.227791,9.119423,-5.341221,0.182015,-3.902571,5.959274,-7.061326,-0.222328,-7.537955,-9.793492,6.679416,-0.711953,6.800508,9.971255,-4.602091,-4.697924,3.022331,-0.202594,8.022111,-1.181412,3.374114,0.387990,3.355533,-5.125175,9.025846,9.945700,-7.552369,-7.586002,2.233995,-9.006539,0.521936,-2.215371,5.990439,-4.844558,-1.575331,-6.726702,-2.655902,-8.588988,9.096551,3.280224,5.230352,6.093903,9.081226,5.347018,4.727685,-4.457870,-0.503796,7.438146,2.818307,-0.628159,-5.651635,3.878054,-4.305079,-9.858974,-9.247886,5.981295,-8.455648,-7.242440,-7.174516,9.257890,6.498301,-5.880211,-8.617163,5.814459,5.708181,4.449071,-8.785216,-4.919584,-8.590835,-3.604224,-5.551429,9.088917,3.572412,-2.894064,3.311556,6.212789,5.792603,7.934539,-8.635785,7.472728,-1.135069,6.927750,0.630368,-7.610776,2.759925,4.321255,-3.227471,-6.464831,-8.410731,5.389503,-3.070560,-4.097091,-1.108912,2.671332,7.337598,-2.211742,-6.184440,-6.919439,7.771467,0.823971,-3.546016,-0.012637,7.274689,-0.756684,-7.447041,-0.151000,-0.039459,-1.615977,-6.311619,7.821083,2.333382,0.659277,-8.464622,5.625465,-6.544761,-6.029878,6.999583,9.361420,0.619716,-1.586304,4.871295,3.352496,-6.044973,-7.682478,8.766412,-8.347379,1.801252,-9.892889,8.000425,8.571083,1.531378,-5.770792,9.304820,7.213799,5.777630,-0.343577,-7.851911,4.492373,0.276269,2.600257,3.310389,9.471093,-4.702524,-2.351666,-1.977973,8.055314,0.925252,-2.779274,-8.563761,-8.347290,-7.647961,-7.443433,-7.466660,2.533787,-7.799151,-1.403079,-2.202770,-4.423914,-3.369515,-0.249184,2.107791,-3.425338,-0.769464,0.195060,-2.665948,-9.268322,-7.519881,-3.384610,-4.484191,-0.680280,-6.550571,6.369226,6.406126,8.909969,-4.501551,-9.991251,-0.886851,7.716437,8.248629,2.399534,-8.388264,-6.432850,-2.629774,7.652795,-7.763556,6.562577,-1.109252,7.276829,9.370380,5.670757,8.719611,1.300170,-4.402167,-5.417779,1.262926,-4.365336,5.290485,-0.556413,4.334468,8.776822,5.357150,-0.601704,6.940461,1.314350,7.652291,-0.955271,-6.863747,-3.921448,-4.044514,2.705535,-1.796963,9.610519,-4.669176,8.262950,3.948177,-8.188164,-9.514143,9.895813,-5.176526,-3.442940,6.908300,-0.252104,-3.243262,7.718072,8.625595,-3.802724,-5.631755,-2.533629,0.739561,-0.349721,-1.997140,3.439173,8.521516,-4.482922,-6.158631,7.301111,5.849528,6.047691,-9.816784,3.620249,2.438781,3.633835,6.929607,5.115771,-1.996766,-7.874445,-3.751540,0.737631,-7.480341,3.136821,-6.050491,-5.657283,5.423479,0.275289,-0.567884,8.157973,-2.432234,9.945840,-5.616423,-5.279987,-3.079679,1.407008,-2.136362,3.040026,-0.688939,1.769627,7.830463,2.911771,-9.143916,2.261486,1.196336,-9.993544,0.133816,1.780839,-0.145834,-8.370854,-1.049541,4.953417,-2.529251,9.155737,-9.518331,0.993754,5.664203,-8.253806,5.049803,-1.334049,-3.234753,-3.546258,8.181072,-4.025406,0.023435,-1.240802,-3.068063,7.538689,-6.025472,-5.458946,5.288249,7.335680,-9.196285,-1.688295,0.103762,-3.623763,-9.941697,5.757127,-5.294397,6.140278,8.531227,-8.535049,-9.672861,-3.842026,-5.195254,6.504138,2.825794,-3.019420,-1.335133,6.009535,-9.997605,3.313919,3.043444,-6.518287,-4.727867,1.334024,9.124450,-2.396230,6.560249,2.110365,3.855093,-8.413684,2.365814,-7.358269,0.412375,9.326693,0.698218,-5.591303,6.651471,-7.582295,2.034564,0.348734,0.125142,-0.414373,3.882174,9.076922,-4.506697,3.914408,-9.325251,1.193676,2.694559,8.422821,4.299662,0.368939,-7.689061,0.218229,-1.034683,9.972281,-7.588800,-9.617171,6.464111,-3.301242,5.533335,4.119349,7.605420,-7.705797,4.975281,4.124064,2.392045,4.841348,-1.821926,6.859894,-6.262603,0.186334,-3.665951,-1.259866,6.443950,3.211364,-1.145511,-4.842475,6.247675,-6.857970,9.504661,-9.423264,2.751303,-1.895775,-5.684119,-1.506201,-2.760281,1.560075,6.104221,-6.796436,-5.801135,-1.887792,-9.121400,-6.309562,5.308936,-0.365612,-1.077583,3.700905,1.005831,0.444710,-0.884188,-4.946891,3.359839,6.748578,5.515187,0.270163,-0.097307,-0.790796,9.820979,-4.393439,2.480950,8.769244,0.207459,5.946432,-4.580126,-5.292094,-2.735038,-1.671613,-8.925625,7.194237,5.115973,1.714324,-5.246684,7.940745,-5.621081,-1.885532,-5.407688,0.496161,-3.759528,-7.291351,-5.237537,6.602518,8.709401,-5.308443,-2.636275,1.210531,7.050132,3.047406,-4.309817,0.363028,-2.370494,2.587232,2.045361,2.043083,7.937654,-8.507135,-2.223326,4.283663,1.975321,-0.604649,6.404707,-6.412182,-9.427676,-2.160560,-9.339187,-8.132867,0.483963,6.418113,-7.184621,-1.995365,8.373728,2.121853,2.638744,2.314837,2.607507,-9.837656,-1.968247,5.817313,-3.660166,8.375317,6.056540,5.613313,2.722721,0.301806,6.472614,-1.247697,-6.993498,5.870752,-4.622428,6.728030,-8.938781,-0.239924,-9.729128,3.512440,2.966976,2.813043,-4.350347,3.745506,4.507185,-1.474886,-5.248330,1.171432,-8.482955,-5.324473,-0.908542,-0.042670,2.499195,1.693571,-0.500681,-8.847915,8.940492,-5.584639,6.756551,-3.631686,-7.575581,5.264472,3.975183,-7.138359,3.333351,-7.541661,-9.091650,-2.472654,0.302118,8.473758,7.154336,0.733085,4.945578,-9.977893,1.991812,1.729099,7.330771,-3.546833,-1.534398,4.341322,-0.996472,8.189948,-9.838225,-9.979527,5.958675,-4.100759,-0.880008,3.632389,6.112452,-9.139768,-9.255417,5.927905,-2.888528,-1.568446,-4.467942,0.789742,4.900994,5.851564,-4.412577,1.998331,2.417726,-2.411022,6.049425,3.384348,-4.608735,6.928017,6.277371,-1.972625,9.972783,-5.345341,-4.944749,-2.615883,-7.025286,-6.482243,8.665184,-4.660884,1.471312,-7.459146,8.581772,6.676899,1.396391,-8.717879,8.589018,6.237902,-5.017598,-2.534651,8.198949,-2.501872,-9.973022,-9.626534,2.028576,-4.387907,-4.788460,2.339037,-1.598910,1.567347,-2.709013,9.572250,-6.208465,-1.398648,-8.836424,-3.847619,8.002124,-1.079230,1.561056,9.964399,1.312153,7.958486,3.847808,4.125307,3.948055,6.525979,0.905887,-2.459005,5.373479,-8.420115,1.972563,1.066924,1.386393,4.958979,5.627200,8.937000,-1.825295,-9.171906,-1.046451,-7.510372,-3.774118,5.451097,-0.299905,0.769258,-4.784038,8.602960,-1.864283,-5.952963,-4.719587,-9.424204,-5.248979,1.390437,-3.634306,-0.382506,6.557573,5.959060,7.825215,8.629109,-4.047782,8.714812,-4.674563,-5.788901,-9.273710,5.997846,-9.994623,-5.087662,5.036687,-9.833184,7.694378,-8.918211,4.065423,-4.678100,-5.574213,-9.894158,-6.242815,1.415981,-7.223795,-6.133661,-2.188196,-0.948299,8.462479,-5.632409,-7.290379,2.365257,2.949432,-8.251004,2.140307,8.367067,1.971469,-8.852735,-8.973051,-3.780327,9.833614,3.627505,-7.430977,9.585114,-7.295030,4.391638,-4.416712,-8.417232,-4.435015,-6.682819,3.951650,-9.582887,7.901695,-0.825923,-0.600977,-4.393997,7.291698,-4.675999,0.656018,-6.226727,2.643091,-0.129994,-9.722151,9.034925,-8.895618,-1.949247,-8.885178,-3.827233,8.906631,0.588507,9.107663,6.131372,6.232952,7.844816,9.255790,-7.885258,9.130037,-4.632148,7.581586,-2.781630,0.393109,6.459202,9.700185,0.274022,-3.487417,3.412983,5.841170,8.745139,-5.233168,9.566121,-7.984050,-5.335035,1.638047,6.394990,-5.319546,-0.260818,-7.511138,5.066392,2.423495,-3.649957,0.669661,2.797403,-5.251735,0.257711,0.409819,7.964841,-3.032908,6.993647,-6.319146,-0.022411,4.050254,9.976817,-9.156922,7.090173,6.311379,-4.574633,6.455552,6.550361,-2.073346,-8.798422,-5.086531,9.716529,0.364147,-7.662252,6.135706,8.816706,6.987008,-1.551010,0.192394,1.353723,8.947288,-8.089675,9.298216,-4.113669,-1.301062,-8.821184,-8.399751,-6.909518,-1.478495,-1.554308,0.344844,-8.247654,-9.187214,1.058634,3.068947,-6.804264,-8.426683,6.555744,0.089448,9.022401,8.389347,-6.824322,9.531171,8.056234,6.763416,6.405847,8.678557,7.403616,-7.055405,-9.966255,4.827848,-1.714402,9.822874,7.792033,4.786601,-3.726780,-9.703497,4.651199,1.300610,-6.319263,-2.202072,-6.768151,4.475694,4.517728,-7.610376,1.521643,-6.430272,6.998240,-8.263355,-8.772203,9.485140,-1.255688,4.917742,7.712256,-2.497378,1.527689,8.686294,5.816619,0.219240,-9.029372,-3.605724,7.897181,0.057643,-4.091629,-3.642319,7.238284,6.196710,4.084716,5.259455,-0.310399,-6.387883,-0.577281,4.181740,8.287463,-8.499356,-0.057811,5.958842,-9.126992,-3.285096,-6.635604,7.743284,-1.074033,1.827980,-7.546804,-0.067216,8.589270,-6.151339,-2.440824,5.633208,3.749556,0.782337,-5.486312,2.676629,5.220664,2.066121,-2.845065,0.485744,5.170044,6.846275,-3.417134,-5.901824,-1.406199,0.158461,-8.104433,-7.877729,0.300855,3.459841,8.056318,-5.863316,-6.733244,-4.468532,-0.472511,2.884564,3.913823,0.247389,-3.663733,3.093733,6.039502,0.621643,6.991059,6.525257,9.555751,-4.326834,0.723506,1.643369,-4.591868,2.487200,-7.164538,-7.992881,8.083513,3.472066,-0.945116,-3.003372,2.777121,3.248212,-4.370283,1.214703,-8.449820,-6.611715,-3.456161,8.942683,6.536416,-3.263070,-4.978357,7.553336,-8.763071,4.782797,1.956395,-9.050935,-9.207183,0.471908,-7.919942,-9.034652,-3.923035,6.918585,2.729085,1.015597,2.724811,-8.036177,5.703205,6.503493,-9.075205,-2.747267,-4.961910,-0.850215,-1.008901,2.742487,8.698861,7.205548,-7.953628,-9.003952,-0.852480,0.595902,8.532903,5.957140,7.123001,6.291155,6.849691,-2.284287,-6.927314,-5.803002,-6.150484,-1.439375,-2.026450,-2.589469,-8.081422,-7.001767,-2.896481,-4.315830,4.109078,-9.977439,-1.472559,-5.883197,5.208686,7.303548,5.136967,1.856521,-2.668248,7.353550,7.056775,7.875253,3.831145,-5.772487,5.648716,3.138640,-7.050292,-0.910048,8.718945,7.312545,0.976599,6.376713,-0.852313,-5.221257,-1.922030,3.602653,1.952722,7.276858,-1.935464,1.935733,-5.571375,-9.165066,-8.459405,4.090369,9.521696,9.590704,7.783068,-6.283699,7.396342,-6.012687,-3.736817,9.583475,5.739009,-0.920945,4.255306,9.508996,2.801188,-7.941418,-5.243127,9.429938,-5.102458,-2.124646,8.413323,-7.797364,-4.946620,-5.054334,-7.674651,-9.829275,-6.518773,-7.428628,-1.013834,2.311282,7.846614,-5.607565,8.239259,-3.497889,-1.427266,-0.992007,0.229173,-6.703965,9.016103,-9.456313,-9.183304,8.517359,-3.899644,-3.233572,-4.227216,-5.077209,-3.378100,3.957659,-6.006551,6.513113,3.923136,2.048673,-0.576395,-1.167321,-6.634933,-1.776649,7.165073,-7.856808,8.844798,7.035726,-4.616938,9.135320,-4.732076,1.099439,-9.177310,4.837185,-8.615164,-3.822317,-8.128685,-2.131966,-1.061859,5.754710,2.578543,1.873839,6.531561,-1.226931,-3.696571,-8.744503,-0.101962,9.438362,-4.844997,-6.452732,4.541691,-8.671297,2.537564,4.594362,6.619607,-6.261891,-3.580868,3.192005,-8.035565,5.635901,6.577816,8.853854,4.600419,2.381061,3.159554,-1.819743,-9.349504,-1.380673,-0.083686,0.132942,-1.799806,-9.756638,0.136168,-7.109942,5.707342,-7.371194,8.353537,-5.990485,2.215602,5.526038,-0.822671,3.343525,-2.486946,-5.407554,4.888517,-3.389107,4.790769,-3.535803,-9.298741,-0.591813,2.599938,-8.034872,-6.925673,8.039262,-4.472595,-2.484205,8.087512,-1.650831,6.152672,-7.528584,-2.452974,4.089473,5.173751,7.972126,-4.887848,5.852448,-7.350395,7.028773,-7.559368,-3.023353,1.217290,9.559941,5.907669,-5.436532,3.022397,9.268990,3.373214,6.236436,9.716686,-0.970659,4.030510,3.228034,7.344180,-9.670215,3.895791,3.952209,-9.667394,6.751578,-5.673604,-6.408919,-8.670276,4.603585,-1.568712,-7.858234,1.417706,-4.607142,-3.732032,8.502181,-6.602788,-2.503062,-3.496982,-0.941744,-2.034722,-8.518171,2.740640,-8.410157,4.652833,9.770499,7.597509,8.598297,-3.609657,9.660343,1.529422,-9.592905,-5.782598,2.253592,-9.115938,2.138337,-5.551248,4.196518,4.810896,9.719740,-4.042677,-7.961362,7.279541,-0.879271,8.245178,-8.292550,-2.397163,-7.509714,3.025294,-6.756442,6.383611,8.875056,4.421178,8.864398,-0.281075,8.543626,2.284269,-8.414051,9.116282,-4.165084,-0.958223,4.291877,-4.371584,-5.691792,-7.727014,3.519327,-6.828638,4.299710,-2.638728,-2.653062,2.366006,4.515837,-6.353870,6.924975,-0.800996,-3.032799,2.419865,-8.097683,-0.815346,6.372428,2.549092,-9.465639,4.214254,0.891562,9.260708,8.652313,-1.015688,3.583308,-4.204494,-9.594731,3.969578,-2.018680,3.375175,-5.790254,7.528139,-3.966523,-7.511933,-5.361757,-6.375334,2.711403,-7.962930,-6.154466,6.745271,1.040838,6.072728,2.222362,-3.106757,6.392293,-3.808962,3.285211,2.007267,-8.717010,3.418990,-2.316951,-0.466741,1.492689,-5.248164,8.300059,5.008300,5.918004,3.314593,4.289617,-2.150134,4.981748,-5.130777,-3.766326,-8.365940,-9.368312,-3.183529,5.199321,-4.933847,4.258020,-5.710055,6.210586,7.050475,-7.151176,2.038366,-7.757932,-6.427821,-5.768942,1.783263,7.720326,8.567007,7.948694,-7.441776,-7.779212,3.846869,0.891416,4.193604,5.627033,8.921162,4.386571,-6.451283,2.221695,3.440796,5.817933,-7.097709,-8.344095,-9.648524,1.938553,-9.485980,-6.517806,6.122660,0.676870,-5.421074,9.989491,3.373847,-1.954787,6.837359,-8.258196,9.445755,0.469259,-3.607110,7.186206,1.984290,8.243906,-4.648178,0.357711,6.929252,-3.216891,7.561420,-8.438719,-3.338564,-2.472201,-5.930234,-9.368092,1.806208,6.632321,9.505829,-1.310112,-8.718378,-5.878780,6.145533,-2.063056,4.753890,-4.436331,6.372379,8.601252,8.858065,7.066310,-2.262738,3.809309,5.745075,-9.115959,2.061792,9.177334,-7.524814,3.267828,6.717045,3.099041,-1.102003,8.807214,-1.376405,-9.409337,8.318800,5.110383,5.729896,9.428326,6.654682,-4.101164,-3.163580,-4.939726,6.433247,4.466052,-0.333216,6.294150,-3.790553,-9.338846,9.375119,0.578261,-6.543726,5.258117,0.555221,-2.064748,-9.389533,-1.659899,-1.066165,2.754352,-1.478116,-2.198152,6.603792,0.444990,-4.793216,-9.433277,-4.763956,-9.091201,-0.468726,7.426885,-0.252994,1.919701,-9.438165,-1.655303,-0.940082,-8.946515,-6.806341,5.788053,6.227778,3.601691,-7.018582,5.008923,3.892563,4.144567,4.616533,-5.204881,-0.066157,-5.800468,3.957440,1.794272,2.197383,-5.785309,-4.905755,7.510079,-7.434873,-7.164353,8.909202,-3.638875,7.825034,-7.841596,-7.829110,1.860779,-8.182586,5.389483,-3.914295,-0.358283,-8.743909,8.674354,-5.502961,-4.819029,6.428692,-1.166338,9.434739,-1.268162,-9.562329,6.358055,0.048619,-8.322616,0.722123,2.971363,-8.331059,5.728408,-1.324224,-4.484384,9.449289,9.403586,6.535860,7.892765,-1.913607,7.814290,7.590251,7.036816,9.919264,-6.629833,2.827710,-9.626732,4.128979,1.633917,-9.432179,7.969911,-0.510583,9.535119,-7.306423,-1.134576,-6.750794,8.618709,3.573122,-9.973421,-5.400098,2.470565,-0.730766,-4.394577,3.442142,3.077877,0.871117,1.804869,3.794891,0.556595,-6.338610,2.847573,1.827879,-3.707271,0.737817,-1.846017,3.224001,-2.348144,1.326681,-7.326325,-4.970560,7.869577,-9.994770,1.384318,0.071769,2.628633,7.895544,-0.597072,2.251986,4.351341,2.380901,1.947866,5.095027,-7.797391,-1.956650,4.968495,-4.640333,-1.505875,6.974598,-9.135418,-6.154485,-6.106640,-9.291498,-7.241179,5.708489,8.659629,9.319884,-8.574198,-7.259245,-2.647980,7.974116,7.609050,-0.277791,-7.381495,9.679524,-7.490699,-1.492263,6.967954,0.185402,-6.347416,1.981486,5.355915,-2.285783,6.173116,-7.139327,9.759314,6.942608,4.967610,-1.309172,-4.813295,-0.601722,7.261877,8.113647,-4.785858,2.975812,-1.843498,-5.410270,3.647417,6.790460,9.605160,-2.019145,9.102247,6.862884,0.713366,-9.970013,9.594119,-8.240481,3.971592,-4.402732,-3.948287,-3.419051,-2.001554,-6.510233,-1.454125,9.591299,5.577683,-3.178401,3.819179,8.890275,-5.132875,-8.911026,3.694240,-2.296232,6.132859,-1.785683,-6.377588,-9.585553,6.321314,4.053139,-9.943099,7.825288,-9.245476,-7.326401,3.507066,6.733866,1.571318,6.649714,-5.770496,8.718064,-6.994997,-7.475272,-0.913511,-8.061432,0.691784,8.255572,-3.125661,-7.928268,1.238356,-8.012001,-7.678745,-9.362361,-9.215709,-1.159237,9.619026,-7.018474,4.845824,3.099040,5.523486,1.489669,8.708034,-1.441741,5.460306,-4.145900,4.887052,9.081948,-7.615624,5.908512,-3.654780,-2.879823,2.010168,3.266051,9.531783,-2.550252,-4.530308,8.601324,0.568534,1.183133,-9.769487,4.495284,5.732777,-7.617342,-5.872283,-5.240348,6.830442,-0.628354,7.831609,-8.856958,-0.469037,7.231018,-1.699876,-3.671850,-0.641464,6.184555,-9.341170,-2.602210,7.487204,4.066821,-2.643541,-9.465783,-5.992605,-4.099143,0.541917,-1.182160,1.499907,-1.534585,1.201296,2.533817,6.003230,-1.883888,5.839839,0.250666,2.938798,-6.923376,-8.642935,-0.133979,-4.174174,-4.653930,9.156689,6.687429,-9.564651,-2.695123,5.479022,3.129330,-8.925899,-9.659586,-6.666813,0.980808,-9.736966,5.379862,-3.596838,-2.202662,-6.017421,-0.018369,4.276296,-6.772926,-8.339051,8.856649,3.103564,-8.100169,3.380366,8.656664,-7.484397,0.216276,3.747421,3.458775,-3.147256,-1.133953,-3.644852,-5.386752,-4.134122,8.297683,-9.359283,-5.070924,0.372902,7.019298,8.142156,-1.240191,2.141498,5.683202,-1.066008,9.972582,-4.019663,8.023642,-0.704244,-1.813617,-1.665944,7.394105,8.975805,-0.502388,-5.554818,1.322325,3.151562,9.996541,4.999245,6.414998,4.323637,5.135412,-1.452123,-0.760916,-8.965449,4.734745,-6.603033,2.566738,7.159081,-4.493780,-0.795350,0.109711,8.097125,-0.017951,4.283134,-9.657522,-3.544942,-0.679764,-4.180780,-7.443787,-1.172215,-9.541447,-5.797306,-9.288127,2.853832,-0.035555,-8.410606,9.126774,-5.150910,-0.224501,9.703679,5.370269,-5.882171,-8.899892,-3.533121,-8.996375,7.634918,-3.813348,-9.034744,0.149296,7.850429,5.679487,5.235630,-1.662804,5.170434,-9.339586,2.302315,-9.457714,2.762185,8.012186,3.982887,-0.488440,-6.892621,3.823371,6.423114,-6.477922,-9.712140,-5.115651,6.502151,7.778019,-8.255813,2.736064,1.026593,5.172205,7.057124,6.454242,-8.252937,4.057129,-0.499931,-1.986130,7.626410,-5.754532,-3.036555,8.373293,2.837468,-6.871936,-8.580528,-0.364250,-2.312531,4.525888,-5.381631,-1.876755,-3.383540,2.873175,-9.129353,2.069844,-4.705783,2.838167,-7.836506,-5.734971,-4.399258,9.539519,9.569130,-2.228461,-6.514146,8.020550,-7.979846,1.582788,4.178390,8.293593,-9.457379,5.262472,0.435080,-2.381188,1.001674,4.477966,1.495678,2.540193,-7.650426,-8.768103,5.096120,6.378913,-5.601276,-7.276318,4.386852,7.885986,-9.466574,6.472961,-2.756156,-8.258589,-7.906019,6.321487,-2.044202,-7.467981,-8.147392,0.567541,-6.426345,-0.983701,-3.297619,-0.434187,-9.136624,7.355829,-2.619906,-7.635082,-3.566692,4.987388,2.198774,3.155487,6.253547,-2.216299,-0.535165,0.993415,5.569937,4.024264,-9.481202,0.579636,-0.501104,-5.517900,5.714362,2.309094,6.948106,9.519365,1.909252,-4.408564,-7.301178,-7.136442,3.823072,-4.145453,6.147307,-9.851719,4.458275,3.281526,-7.969099,9.558154,-0.493815,-1.250062,8.305783,-5.271513,-4.619675,3.961998,-9.970353,8.845808,7.278835,-7.188535,-6.539941,-2.217985,-2.633330,8.311914,1.726467,6.383747,2.676903,7.629326,8.766342,7.031818,4.624262,-3.319074,-5.329500,3.927225,6.865555,1.427224,-3.398991,-7.644751,2.718312,5.212319,-6.198771,-8.700216,-2.055346,-2.389964,-1.626388,3.903829,-4.777576,8.632416,-8.402094,-4.197948,-6.220678,2.793872,0.407012,3.432369,9.512031,-0.464248,4.267749,7.498937,-2.896234,6.540726,9.089266,-9.808973,7.745399,-6.560073,-7.834165,4.892884,-3.253419,1.457174,-2.928000,-3.344081,-9.395953,6.420451,-2.454685,4.186549,-7.639573,5.536390,-7.994386,1.579628,9.388663,0.520294,-9.996239,-7.474020,2.818177,8.071477,-9.317491,3.111246,-1.164271,8.345532,5.395648,2.162341,2.474100,7.779512,8.144089,3.439110,-7.815636,-1.790160,-8.490495,-5.104774,1.401613,5.859639,0.543710,-7.139942,-4.800903,-1.495423,-8.260790,6.170850,-7.173003,8.669104,-2.644937,-5.034509,2.593058,8.276258,0.858521,9.098198,7.729152,1.768862,0.504135,-6.379084,9.207836,9.103541,4.014257,9.449899,4.309959,8.678178,-0.173321,1.693131,-7.171319,4.868248,-9.646915,-8.520341,7.608812,-1.447732,2.155691,-9.665026,-7.301779,2.095761,8.113397,7.806885,2.758906,-2.626057,8.640732,-6.546375,-0.401195,0.055196,-0.396753,5.132329,1.255640,5.064185,-4.104552,8.490493,5.539482,-0.494227,-7.926314,-0.710705,-2.344219,9.790516,-9.139968,-9.929301,4.404914,8.751738,5.066533,9.506556,-0.676730,-4.368321,7.732963,6.942797,-7.374673,0.061892,-9.763868,-7.576569,-4.970939,-7.573508,7.814431,7.704035,-3.401825,5.662219,0.457296,7.010201,8.856569,3.964615,5.773808,0.672421,-8.813425,-8.666807,-6.681532,-3.307231,-1.764664,2.634105,2.165251,-5.535183,6.616859,4.448458,5.543607,1.018682,-5.596106,2.198579,7.540240,4.690568,4.289641,-8.641557,2.085649,-2.715478,9.533685,2.847241,-6.889536,9.489342,0.305858,2.751574,3.664297,3.198743,5.642441,3.770719,-9.689122,-4.742620,9.075102,5.128415,5.130627,-4.260827,-4.529320,7.293602,-1.404356,-6.496614,-0.497126,-5.672351,-5.676302,4.815050,-8.817503,1.549393,-1.980471,-0.130622,-9.554213,-7.860461,0.373960,2.819837,-4.193771,-9.252795,0.616854,4.571930,-3.535988,9.615341,3.949876,-3.116226,1.100946,-5.373513,-9.456013,0.294033,6.437168,-1.849050,6.113306,-6.579677,8.723662,-4.844751,3.016519,-1.035856,0.793338,1.400730,-6.898905,-5.084710,6.206685,7.942332,9.502886,-1.087969,-4.772698,8.123777,-6.720946,-7.833857,-3.231444,-7.155805,-4.817512,-3.381180,-5.933228,-2.017498,2.857840,4.065827,-1.016193,-8.335856,1.648953,-8.433834,-2.210154,9.756214,9.206911,-3.527851,-9.508907,8.985827,0.813009,-8.591783,5.785973,-5.631369,6.567159,2.587925,7.890533,0.094748,4.283599,-9.775338,6.438185,-9.562320,5.899754,4.267957,-2.136238,-5.659597,-1.500940,6.701368,-5.160733,-2.380311,7.114969,5.707301,-4.092574,-9.954110,-6.071144,5.084459,-5.029459,-8.519757,-1.487117,-7.124596,-2.524437,-4.327709,0.378662,9.815683], dtype = "float64")#candidate|6230|(2340,)|const|float64
bop_6231 = relay.left_shift(call_6228.astype('int64'), relay.reshape(const_6230.astype('int64'), relay.shape_of(call_6228))) # shape=(2340,)
bop_6234 = relay.left_shift(call_6229.astype('int64'), relay.reshape(const_6230.astype('int64'), relay.shape_of(call_6229))) # shape=(2340,)
func_4249_call = mod.get_global_var('func_4249')
func_4250_call = mutated_mod.get_global_var('func_4250')
call_6240 = relay.TupleGetItem(func_4249_call(), 0)
call_6241 = relay.TupleGetItem(func_4250_call(), 0)
func_4323_call = mod.get_global_var('func_4323')
func_4324_call = mutated_mod.get_global_var('func_4324')
call_6258 = relay.TupleGetItem(func_4323_call(), 0)
call_6259 = relay.TupleGetItem(func_4324_call(), 0)
func_1516_call = mod.get_global_var('func_1516')
func_1520_call = mutated_mod.get_global_var('func_1520')
const_6265 = relay.const([[8.431111,5.630853,1.120399,8.369243,2.730173,3.697526,9.433231,6.323053,-1.252492,-1.864268,-0.046838,9.480550,4.815911,-2.829275,6.732768],[-4.277029,9.208628,3.819547,-2.476751,8.622333,-1.120174,6.077315,-2.784033,2.097335,-8.595096,8.634066,-5.399143,-8.041127,0.285567,5.925466],[6.197184,3.141027,9.307726,4.643966,-8.462582,5.660024,-4.856513,-6.384771,1.840021,6.371137,-7.301266,-6.783647,-7.606072,-0.287027,0.812717],[-2.553474,9.648332,8.008325,7.616154,9.045915,-6.365382,-1.069623,2.356638,7.846786,-4.012282,-7.171528,-2.583613,6.391709,-4.200166,-3.365241],[3.316376,-0.009991,1.071092,1.712298,1.967225,-3.228430,8.362787,-3.362413,5.824078,-4.029260,-4.158534,-0.410424,8.199898,7.495169,-0.393868],[-1.613780,9.569398,-3.644942,-1.526919,6.174275,-8.551321,1.581208,-9.259342,6.927711,-3.500959,-2.815037,-6.645887,7.820567,-4.707851,9.382568],[-4.893432,9.376582,9.377518,-4.592055,3.189321,9.682475,3.046455,-9.006740,-1.157416,-7.780512,9.600167,0.155859,0.960004,0.089963,-7.597574],[-7.854922,-8.436588,-1.029859,-5.209350,-6.314273,-3.502136,4.436958,-4.078792,8.152113,2.847822,6.691823,-5.863697,3.024820,9.538810,-5.135097],[9.056192,6.767654,-5.774651,7.457010,-3.664319,-3.330409,8.714488,7.050402,4.949389,-4.121523,-9.184325,3.738100,2.381278,-5.475828,-8.868913],[-4.211573,-7.973321,4.893922,2.088803,7.588898,-0.169037,-9.934252,7.040914,-6.217867,-0.512547,-0.441425,-8.319950,-5.884614,-6.027103,4.809169],[4.604956,-7.155636,1.256133,-7.749941,2.478394,-1.970124,0.843091,6.054352,-5.381995,-8.286774,4.525295,5.523117,-5.796929,2.647162,4.337032],[2.128719,-6.442419,-7.634228,-7.683757,-7.987118,-3.329681,5.681849,7.687952,-3.168676,-5.164126,-4.593969,2.547411,-4.625588,4.650279,-4.839237],[-5.268710,0.511313,-7.677739,-5.030261,-1.284508,-9.048151,1.261701,7.481167,-5.160053,1.802674,-1.257214,-8.830835,2.775277,1.358510,-8.213777],[1.409718,-8.962742,8.563658,-8.110220,5.063611,-5.488618,9.698853,1.371389,-5.153775,9.941495,2.569026,-1.545828,2.320303,-8.168572,-0.809063],[6.141531,6.298760,4.143861,-3.341187,-9.244522,-6.395318,5.070546,-3.256395,-1.903220,-4.044910,-8.209099,7.484538,-5.152675,5.403495,-7.828160],[2.597675,6.719040,2.112988,-2.895230,0.833229,9.884802,2.885568,0.347948,9.058721,3.954689,0.151273,7.533414,-0.096511,-8.804121,-9.141797],[8.128505,-6.093836,-1.769036,8.530550,0.629132,4.723344,3.273410,4.847560,5.444678,-0.444329,-2.196549,-9.824524,3.242286,5.276796,-4.337199],[-7.877938,-4.608263,6.290247,-2.323588,3.908387,9.514347,-7.161970,7.036937,6.720480,-3.345453,7.782702,-8.984520,8.343287,-8.287680,3.780300],[-1.827262,6.795545,-9.193215,-9.341651,5.395461,-9.995906,-3.528832,5.004346,-1.082310,-9.116548,3.345777,4.875833,-4.360299,5.934336,-8.211977],[0.970551,-3.721380,0.120868,8.889267,1.770311,4.714994,1.337486,-6.992214,7.135835,-7.156368,6.316794,-0.004857,2.379426,5.448816,6.849110],[7.200937,5.834911,8.914784,-1.372634,-6.993217,-5.784826,2.867975,8.914774,-4.285957,-9.412894,3.635834,-6.537328,-4.529958,-7.984971,-9.917523],[7.768676,-6.788341,4.241294,3.869475,9.091657,8.802368,7.465964,6.962188,-6.762653,-9.083552,-2.492644,6.211625,1.685933,-4.699837,5.249727],[7.152182,-7.387231,3.876828,-0.007523,6.448855,-3.454254,9.356652,4.071548,8.017699,-7.778644,-7.337514,3.780724,-0.220849,-9.825161,-9.477678],[1.103582,-1.663848,2.812964,-5.491698,1.802979,4.018714,-5.473159,8.428214,-2.412081,-4.093217,-2.970901,3.338863,-0.609486,-2.193490,2.655398],[-3.526337,4.547882,-4.828733,6.306400,-8.253024,9.767727,-7.219910,-2.834019,9.556779,-3.998154,5.364108,9.797714,-0.019497,-3.472696,-4.169669],[7.819113,6.458276,5.120540,-4.923660,-3.522459,9.224571,-6.422965,0.734769,-3.877693,1.952582,-9.678569,9.100660,-5.415573,6.501365,1.387678],[-8.112301,2.771231,0.310227,8.290130,0.844886,-8.743101,8.997889,-3.081155,5.205613,-7.931156,-3.515123,7.508354,-3.931981,3.101298,0.077621],[3.670197,-0.961726,1.500238,4.834894,7.999681,-5.173800,-3.619542,-1.157246,-8.674108,7.109110,9.202399,-8.491323,2.962951,-0.699394,-5.258189],[3.253838,2.715278,-6.202737,4.930913,8.646859,-8.345861,-5.316583,-4.364238,-0.732241,-2.254959,3.319694,4.357186,7.821977,-3.353258,0.510585],[0.012892,-2.952613,-1.059018,8.694053,-5.910688,-4.796529,-8.417662,2.851209,-3.897404,2.901953,9.934627,-8.162507,-9.412227,-9.445069,4.176345],[-1.384333,-1.427835,7.735064,5.654391,0.859492,9.636161,5.037283,-3.137203,-7.890179,-9.221183,-4.513971,-6.259991,-4.568157,-7.897991,4.980978],[-9.893991,-3.782208,-6.251628,-2.270745,-7.040141,-2.151657,4.263631,5.461271,-6.309274,-1.238857,9.341794,9.437041,4.606249,9.402637,-5.071106],[7.227756,-1.801176,7.845110,6.429621,-9.332015,6.962814,-4.366632,-2.597730,4.708258,2.002972,4.636783,-3.344688,9.152344,-5.536533,8.653939],[9.598599,-7.395334,-1.586095,5.833400,7.948886,2.109256,-2.193784,2.559889,3.103628,7.564642,8.250402,8.496256,6.185763,7.016808,1.760032],[-6.391931,-8.346016,-9.024104,1.028803,-9.778833,-5.318851,2.566458,6.517033,8.775965,4.810433,-9.801503,-7.680398,-2.305989,-8.898006,2.905005],[-1.784855,-1.900164,-3.963347,6.826655,-8.425789,-6.780339,7.979010,4.987167,7.020940,7.729673,-1.972576,8.376743,-7.376134,-4.971892,4.513805],[-7.914113,-8.204558,-9.328032,-5.373594,-0.798271,-8.936508,9.585342,-7.502130,-2.288770,7.911326,3.874084,4.710864,-6.833885,-4.337191,-5.134054],[4.077440,-2.366710,-9.965178,-8.074873,-9.701596,3.829521,-8.761038,2.757478,-8.950984,-9.799233,7.404189,1.903867,-3.696146,-4.365358,-9.124574],[-9.310743,-0.662212,8.403153,-0.106346,5.691816,-1.264983,5.806895,6.421758,-5.906094,-7.057736,3.724180,-1.293844,1.060355,9.196967,9.228510],[-1.447503,1.248120,-7.953193,8.995507,-2.860879,-3.035801,-0.420376,8.002909,-6.144095,0.575946,-6.783175,-4.959664,9.730788,4.857609,-9.011722],[-8.477983,2.758995,0.591492,5.162279,-8.332620,0.162920,-5.045064,-1.601580,3.648072,2.144395,6.305696,7.535060,-7.548773,3.115592,2.134651],[2.512581,6.894265,7.972945,-0.070958,1.907156,2.683248,9.502378,-4.154088,3.284179,-9.779742,-5.062658,9.736557,-7.330380,-0.873706,8.804827],[4.462132,-8.236475,6.083799,1.969693,-3.952364,-3.917270,0.402929,9.704349,9.760454,8.198916,-9.512965,-2.387901,4.231087,9.428320,-2.407309],[-9.517436,9.564043,-3.217178,-9.356447,9.934146,0.957119,-5.645753,9.701863,-5.188658,8.732023,8.820525,-7.413835,8.189456,-6.244483,3.722217],[2.412202,-1.955180,-9.927407,-4.977695,-3.287699,4.296369,8.517890,-2.381473,-8.103100,-3.357018,-9.012798,6.505538,2.213958,-7.209527,5.928810],[-6.573518,2.858993,-2.775109,-8.541905,6.612015,-3.945056,-2.284443,-1.987792,-2.084385,1.528079,-3.037471,-9.657533,-2.675387,-6.655961,7.310587],[5.900434,0.602050,-8.016425,-9.851657,-3.551798,5.739868,2.425057,-7.994703,-3.853319,-2.557128,2.268854,4.205266,-2.308199,9.874085,1.340643],[-8.913561,4.063119,7.516575,5.393803,-8.704500,2.144118,-3.211797,0.740980,8.214254,-5.723346,1.908314,-3.963330,3.523973,6.154429,-3.610616],[-6.595734,6.356733,-9.936582,9.166491,-0.654517,8.576813,-7.353907,-7.956012,-8.625576,6.327481,0.247475,0.719078,-2.022177,-2.793713,6.492524],[-3.219797,-9.350113,4.490232,-5.991477,-7.946451,-5.823866,5.724246,-9.067944,-9.973484,5.311163,6.489274,9.079013,-8.845640,8.163668,3.762305],[5.303866,-1.849234,1.962794,-4.626539,5.601141,-9.376396,-4.330537,-6.084556,-5.557231,-0.575968,-7.637128,-8.212455,-6.353950,5.726077,-0.690451],[-4.482907,-0.263914,1.197358,5.452591,-4.075363,-9.601229,-9.796473,-9.977768,9.054016,-1.048800,-6.733874,0.474287,-4.543058,3.144727,-2.727042],[-1.675495,-4.628802,3.889252,-6.648379,6.524649,7.282664,8.584171,2.172368,-7.258085,-7.110400,-0.076251,-5.371249,-3.284313,6.869509,-7.544969],[1.958534,-5.657794,-8.436822,5.325574,-2.977580,0.169997,-4.386204,-8.484815,-1.194650,3.271466,7.413672,2.625023,0.160269,-8.897932,5.952952],[-8.510496,7.046687,-4.047778,6.984972,-7.633195,5.198758,1.182629,-1.998146,2.246419,8.258827,-7.455054,-9.763478,-0.800789,3.583917,-7.177441],[5.666851,1.997617,7.555490,-6.300653,1.004396,7.942852,-3.876148,-1.768074,-3.642996,6.156651,-7.963896,-6.813682,8.119559,0.416582,7.113235],[-8.638980,-2.848825,0.779592,4.619341,-6.064718,-4.682524,7.690386,6.208892,6.289423,0.445231,4.066746,-2.324790,-0.281230,-1.809169,-2.245226],[5.887267,-2.031581,-8.049883,-8.087754,-8.833689,-9.998786,-7.865181,1.326981,-4.165685,7.029220,-7.676363,0.488045,-7.559086,-9.663731,4.732957],[-4.723837,4.247315,2.083324,-4.050496,-3.930294,-5.861964,9.525228,-9.947155,-2.314322,9.666758,6.750270,-9.650486,0.899934,-6.272705,3.158493],[-7.374246,7.083871,1.495063,-3.059170,-0.453537,-9.408460,4.220420,2.460134,-8.221324,-6.161126,3.302312,9.832365,2.414160,-2.332331,0.951423],[0.740689,3.143745,7.082847,6.517696,-9.855652,-9.235302,6.990220,-1.449065,-2.080606,-5.456805,-2.463194,-6.694268,-0.063552,-2.909198,5.522338],[-1.931616,-3.891371,6.641239,-4.183828,4.645848,-7.956878,5.825682,3.658828,-1.600592,3.711037,0.553327,-7.221083,8.669403,5.380037,0.873289],[8.529588,3.707622,7.127590,-2.245580,-4.914665,-2.069828,7.494448,-4.260245,0.603743,-7.066752,3.617347,5.124144,7.219738,-6.627284,-3.372166],[-8.181457,-2.518354,6.892747,-9.562766,3.875469,0.427493,-6.733696,-6.967801,-2.387612,4.238871,-6.312157,-1.578100,8.970940,-8.382867,-4.658107],[7.080180,5.066574,-3.795490,-6.794886,-2.282592,8.169139,9.397527,-1.828870,-2.329713,-1.391426,-1.687769,7.572424,-8.819088,-4.039284,-8.311509],[9.176260,3.462397,9.300272,-8.027914,9.291839,-1.729831,-0.973433,-5.500942,2.401063,8.044101,-3.519489,-9.491688,-5.336242,-4.906364,8.117094],[7.158345,5.038405,8.116045,3.316042,-0.509920,-2.066258,9.048754,-3.533742,-1.462584,7.057867,5.859660,2.496935,0.100954,-2.563654,-3.513635],[-9.826688,3.047893,4.668122,8.872413,-6.345364,4.145840,-8.248063,4.564802,-2.759797,-6.024782,-2.130499,7.050595,8.786465,3.968663,9.656663],[5.475418,-0.081377,8.388792,-6.088953,-7.195547,-1.668087,0.254076,-8.050179,0.525461,-1.017947,-9.842906,-0.344474,-1.788986,-3.875788,4.260227],[-1.431549,-3.199794,7.599286,-7.046114,-4.552696,-7.751406,-7.833637,5.528978,1.748098,1.694890,-3.807440,-8.966171,4.668148,-2.251047,-0.023433],[4.735996,-5.307882,6.048660,8.384859,0.719234,-8.029677,-5.316962,-9.420508,-9.524403,4.524753,7.712681,7.140491,-2.239608,4.228429,4.647192],[-4.243762,-6.547256,-5.808342,6.541849,1.243078,2.744348,-1.632044,-5.229764,3.332958,-0.389534,-3.117208,-0.863676,9.223594,-8.897877,1.706825],[1.717403,9.148857,-5.928573,0.549453,2.649448,0.421102,0.561843,5.591380,-8.748093,-2.219174,8.431614,-1.215173,-3.914758,-3.253446,-1.654908],[-7.496745,1.616275,7.649035,6.164222,8.471362,3.751504,3.194654,4.585500,-3.698790,7.793336,-2.349923,4.205898,-8.622525,3.754414,0.230317],[-9.335564,5.250515,9.292518,-8.355275,8.846899,7.921456,-7.310426,9.675120,9.610737,2.200576,-4.557219,3.816790,-2.593114,-4.882421,-1.579188],[-5.018290,5.293798,7.219614,-7.806271,-4.209987,0.510071,4.015425,-3.316139,0.867258,-6.928218,2.703657,9.182730,1.307437,-8.932391,5.120795],[7.345060,-5.223044,4.398878,2.899557,1.071492,6.776007,3.560341,-9.538370,-0.337888,-7.631795,-8.507708,6.674489,-2.832475,7.537770,-5.951910]], dtype = "float32")#candidate|6265|(77, 15)|const|float32
call_6264 = relay.TupleGetItem(func_1516_call(relay.reshape(const_6265.astype('float32'), [7, 11, 15]), relay.reshape(const_6265.astype('float32'), [7, 11, 15]), ), 2)
call_6266 = relay.TupleGetItem(func_1520_call(relay.reshape(const_6265.astype('float32'), [7, 11, 15]), relay.reshape(const_6265.astype('float32'), [7, 11, 15]), ), 2)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_6269 = relay.TupleGetItem(func_5872_call(), 0)
call_6270 = relay.TupleGetItem(func_5874_call(), 0)
output = relay.Tuple([bop_6231,call_6240,call_6258,call_6264,const_6265,call_6269,])
output2 = relay.Tuple([bop_6234,call_6241,call_6259,call_6266,const_6265,call_6270,])
func_6273 = relay.Function([], output)
mod['func_6273'] = func_6273
mod = relay.transform.InferType()(mod)
mutated_mod['func_6273'] = func_6273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6273_call = mutated_mod.get_global_var('func_6273')
call_6274 = func_6273_call()
output = call_6274
func_6275 = relay.Function([], output)
mutated_mod['func_6275'] = func_6275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6279 = relay.var("var_6279", dtype = "float32", shape = (2, 10, 10))#candidate|6279|(2, 10, 10)|var|float32
const_6280 = relay.const([[[-4.024289,-9.546112,1.172283,7.496817,-9.936242,-8.381215,-7.173231,-3.349866,9.738036,-9.071758],[-9.425569,5.138173,9.124100,-0.128607,-5.041393,0.222573,1.304189,9.428429,-7.663323,6.792767],[-5.577369,-0.528766,3.177479,5.264481,9.666404,-4.165710,-2.443674,-6.570471,-5.121251,7.275563],[-0.992278,4.764145,-4.632329,8.909336,-1.398151,6.415148,-1.593082,3.448035,1.101312,-2.911593],[2.001612,-1.822896,-4.842964,0.769637,0.940682,0.499397,5.848042,4.036793,5.188289,-1.174277],[2.992236,6.110585,2.945134,-5.475268,2.910973,8.350492,9.857470,9.975420,2.870060,-0.184412],[7.369803,-0.885595,7.648734,6.486360,-4.876790,-5.988146,8.653046,2.960795,-9.568444,2.102931],[-7.151775,-5.230665,-5.560521,6.007711,4.971950,-2.511598,-1.429915,4.105736,3.680191,-5.871147],[5.229601,3.851411,-7.730214,0.145845,-6.242423,9.710414,-8.311384,4.607060,0.031949,-7.374938],[-6.285426,9.360700,3.703436,-8.841882,0.661525,6.485229,1.040046,-8.549998,8.718793,5.643454]],[[-0.371243,2.454368,-2.890658,-6.379181,5.509827,-9.507704,3.683079,-4.380882,5.702139,5.937571],[-2.629378,8.182374,-3.954392,6.471195,0.892960,4.493110,0.427399,-9.506941,1.136358,4.955279],[2.452548,0.504683,-3.135376,-4.965341,-5.326162,-6.486564,-0.238156,1.521040,9.333256,-4.073917],[1.938724,8.372536,-1.498503,-1.946678,-9.063828,1.849072,-9.909465,-8.507212,-5.720430,-8.092752],[0.343286,4.495628,-1.315185,-0.081909,-1.264753,-2.063167,-6.485844,-9.097516,-5.286362,4.784282],[1.897378,-5.997585,2.520258,-0.408805,4.712388,-9.499240,6.360927,-6.766388,-6.219915,-4.778227],[-6.688059,-4.363003,-9.765886,7.971429,-1.404422,8.386447,2.076882,1.941129,-9.829327,4.215216],[-4.247615,-3.978333,9.304256,7.764022,8.163268,-4.314855,-8.084414,2.794125,-4.313896,3.283391],[1.890463,-0.504635,0.364640,3.906132,5.448064,8.295299,-5.322315,2.105825,2.317426,-8.683440],[-7.911801,-2.235657,4.064396,5.510039,-2.240968,-5.956884,3.882305,5.134198,-2.868930,1.478147]]], dtype = "float32")#candidate|6280|(2, 10, 10)|const|float32
bop_6281 = relay.less(var_6279.astype('bool'), relay.reshape(const_6280.astype('bool'), relay.shape_of(var_6279))) # shape=(2, 10, 10)
func_6152_call = mod.get_global_var('func_6152')
func_6153_call = mutated_mod.get_global_var('func_6153')
call_6284 = relay.TupleGetItem(func_6152_call(), 0)
call_6285 = relay.TupleGetItem(func_6153_call(), 0)
func_3406_call = mod.get_global_var('func_3406')
func_3407_call = mutated_mod.get_global_var('func_3407')
call_6289 = func_3406_call()
call_6290 = func_3406_call()
output = relay.Tuple([bop_6281,call_6284,call_6289,])
output2 = relay.Tuple([bop_6281,call_6285,call_6290,])
func_6294 = relay.Function([var_6279,], output)
mod['func_6294'] = func_6294
mod = relay.transform.InferType()(mod)
mutated_mod['func_6294'] = func_6294
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6295 = relay.var("var_6295", dtype = "float32", shape = (2, 10, 10))#candidate|6295|(2, 10, 10)|var|float32
func_6294_call = mutated_mod.get_global_var('func_6294')
call_6296 = func_6294_call(var_6295)
output = call_6296
func_6297 = relay.Function([var_6295], output)
mutated_mod['func_6297'] = func_6297
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6308 = relay.var("var_6308", dtype = "float32", shape = (11, 3, 15))#candidate|6308|(11, 3, 15)|var|float32
var_6309 = relay.var("var_6309", dtype = "float32", shape = (11, 3, 15))#candidate|6309|(11, 3, 15)|var|float32
bop_6310 = relay.divide(var_6308.astype('float32'), relay.reshape(var_6309.astype('float32'), relay.shape_of(var_6308))) # shape=(11, 3, 15)
output = bop_6310
output2 = bop_6310
func_6321 = relay.Function([var_6308,var_6309,], output)
mod['func_6321'] = func_6321
mod = relay.transform.InferType()(mod)
mutated_mod['func_6321'] = func_6321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6321_call = mutated_mod.get_global_var('func_6321')
var_6323 = relay.var("var_6323", dtype = "float32", shape = (11, 3, 15))#candidate|6323|(11, 3, 15)|var|float32
var_6324 = relay.var("var_6324", dtype = "float32", shape = (11, 3, 15))#candidate|6324|(11, 3, 15)|var|float32
call_6322 = func_6321_call(var_6323,var_6324,)
output = call_6322
func_6325 = relay.Function([var_6323,var_6324,], output)
mutated_mod['func_6325'] = func_6325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5170_call = mod.get_global_var('func_5170')
func_5171_call = mutated_mod.get_global_var('func_5171')
call_6327 = relay.TupleGetItem(func_5170_call(), 0)
call_6328 = relay.TupleGetItem(func_5171_call(), 0)
func_3924_call = mod.get_global_var('func_3924')
func_3926_call = mutated_mod.get_global_var('func_3926')
call_6336 = relay.TupleGetItem(func_3924_call(), 0)
call_6337 = relay.TupleGetItem(func_3926_call(), 0)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_6349 = relay.TupleGetItem(func_5872_call(), 0)
call_6350 = relay.TupleGetItem(func_5874_call(), 0)
var_6351 = relay.var("var_6351", dtype = "float64", shape = (2340,))#candidate|6351|(2340,)|var|float64
bop_6352 = relay.less_equal(call_6327.astype('bool'), relay.reshape(var_6351.astype('bool'), relay.shape_of(call_6327))) # shape=(2340,)
bop_6355 = relay.less_equal(call_6328.astype('bool'), relay.reshape(var_6351.astype('bool'), relay.shape_of(call_6328))) # shape=(2340,)
func_3680_call = mod.get_global_var('func_3680')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_6356 = relay.TupleGetItem(func_3680_call(), 1)
call_6357 = relay.TupleGetItem(func_3681_call(), 1)
output = relay.Tuple([call_6336,call_6349,bop_6352,call_6356,])
output2 = relay.Tuple([call_6337,call_6350,bop_6355,call_6357,])
func_6362 = relay.Function([var_6351,], output)
mod['func_6362'] = func_6362
mod = relay.transform.InferType()(mod)
var_6363 = relay.var("var_6363", dtype = "float64", shape = (2340,))#candidate|6363|(2340,)|var|float64
output = func_6362(var_6363)
func_6364 = relay.Function([var_6363], output)
mutated_mod['func_6364'] = func_6364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_6420 = func_2981_call()
call_6421 = func_2981_call()
func_6294_call = mod.get_global_var('func_6294')
func_6297_call = mutated_mod.get_global_var('func_6297')
var_6425 = relay.var("var_6425", dtype = "float32", shape = (200,))#candidate|6425|(200,)|var|float32
call_6424 = relay.TupleGetItem(func_6294_call(relay.reshape(var_6425.astype('float32'), [2, 10, 10])), 1)
call_6426 = relay.TupleGetItem(func_6297_call(relay.reshape(var_6425.astype('float32'), [2, 10, 10])), 1)
func_3355_call = mod.get_global_var('func_3355')
func_3357_call = mutated_mod.get_global_var('func_3357')
call_6429 = func_3355_call()
call_6430 = func_3355_call()
func_1587_call = mod.get_global_var('func_1587')
func_1592_call = mutated_mod.get_global_var('func_1592')
var_6435 = relay.var("var_6435", dtype = "int16", shape = ())#candidate|6435|()|var|int16
const_6436 = relay.const([-7,4,-10,1,9,-4,1,5,-8,8,-6,-2,-4,4,-3,3,4,2,-8,3,-10,-4,7,-2,8,-4,-1,-9,-7,9,6,9,-1,3,-6,7,-5,7,-2,-9,-1,5,7,8,-6,3,-1,1,-5,-3,5,9,5,-10,-6,-7,9,-10,-5,10,7,5,-10,-4,-3,8,-9,7,-2,10,5,-5,-9,-3,-5,-6,-10,2,9,7,-3,1,-1,-7,-5,-10,-4,7,2,-6], dtype = "int16")#candidate|6436|(90,)|const|int16
var_6437 = relay.var("var_6437", dtype = "int64", shape = (432,))#candidate|6437|(432,)|var|int64
call_6434 = relay.TupleGetItem(func_1587_call(relay.reshape(var_6435.astype('int16'), []), relay.reshape(const_6436.astype('int16'), [15, 1, 6]), relay.reshape(var_6437.astype('int64'), [108, 4]), ), 1)
call_6438 = relay.TupleGetItem(func_1592_call(relay.reshape(var_6435.astype('int16'), []), relay.reshape(const_6436.astype('int16'), [15, 1, 6]), relay.reshape(var_6437.astype('int64'), [108, 4]), ), 1)
output = relay.Tuple([call_6420,call_6424,var_6425,call_6429,call_6434,var_6435,const_6436,var_6437,])
output2 = relay.Tuple([call_6421,call_6426,var_6425,call_6430,call_6438,var_6435,const_6436,var_6437,])
func_6442 = relay.Function([var_6425,var_6435,var_6437,], output)
mod['func_6442'] = func_6442
mod = relay.transform.InferType()(mod)
mutated_mod['func_6442'] = func_6442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6442_call = mutated_mod.get_global_var('func_6442')
var_6444 = relay.var("var_6444", dtype = "float32", shape = (200,))#candidate|6444|(200,)|var|float32
var_6445 = relay.var("var_6445", dtype = "int16", shape = ())#candidate|6445|()|var|int16
var_6446 = relay.var("var_6446", dtype = "int64", shape = (432,))#candidate|6446|(432,)|var|int64
call_6443 = func_6442_call(var_6444,var_6445,var_6446,)
output = call_6443
func_6447 = relay.Function([var_6444,var_6445,var_6446,], output)
mutated_mod['func_6447'] = func_6447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4974_call = mod.get_global_var('func_4974')
func_4976_call = mutated_mod.get_global_var('func_4976')
call_6471 = relay.TupleGetItem(func_4974_call(), 0)
call_6472 = relay.TupleGetItem(func_4976_call(), 0)
output = relay.Tuple([call_6471,])
output2 = relay.Tuple([call_6472,])
func_6475 = relay.Function([], output)
mod['func_6475'] = func_6475
mod = relay.transform.InferType()(mod)
output = func_6475()
func_6476 = relay.Function([], output)
mutated_mod['func_6476'] = func_6476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2895_call = mod.get_global_var('func_2895')
func_2897_call = mutated_mod.get_global_var('func_2897')
call_6649 = relay.TupleGetItem(func_2895_call(), 0)
call_6650 = relay.TupleGetItem(func_2897_call(), 0)
func_3355_call = mod.get_global_var('func_3355')
func_3357_call = mutated_mod.get_global_var('func_3357')
call_6660 = func_3355_call()
call_6661 = func_3355_call()
output = relay.Tuple([call_6649,call_6660,])
output2 = relay.Tuple([call_6650,call_6661,])
func_6662 = relay.Function([], output)
mod['func_6662'] = func_6662
mod = relay.transform.InferType()(mod)
output = func_6662()
func_6663 = relay.Function([], output)
mutated_mod['func_6663'] = func_6663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3744_call = mutated_mod.get_global_var('func_3744')
call_6723 = relay.TupleGetItem(func_3742_call(), 0)
call_6724 = relay.TupleGetItem(func_3744_call(), 0)
uop_6746 = relay.log2(call_6723.astype('float64')) # shape=(12, 15, 12)
uop_6748 = relay.log2(call_6724.astype('float64')) # shape=(12, 15, 12)
output = relay.Tuple([uop_6746,])
output2 = relay.Tuple([uop_6748,])
func_6757 = relay.Function([], output)
mod['func_6757'] = func_6757
mod = relay.transform.InferType()(mod)
mutated_mod['func_6757'] = func_6757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6757_call = mutated_mod.get_global_var('func_6757')
call_6758 = func_6757_call()
output = call_6758
func_6759 = relay.Function([], output)
mutated_mod['func_6759'] = func_6759
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6781 = relay.const(0.803689, dtype = "float32")#candidate|6781|()|const|float32
var_6782 = relay.var("var_6782", dtype = "float32", shape = (1, 9, 6))#candidate|6782|(1, 9, 6)|var|float32
bop_6783 = relay.floor_mod(const_6781.astype('float32'), var_6782.astype('float32')) # shape=(1, 9, 6)
output = relay.Tuple([bop_6783,])
output2 = relay.Tuple([bop_6783,])
F = relay.Function([var_6782,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6782,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

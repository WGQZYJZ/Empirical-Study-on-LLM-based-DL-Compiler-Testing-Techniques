==========mod==========
#[version = "0.0.5"]
def @func_9762(%var_9733: Tensor[(1, 195), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(13, 15, 1), float64], Tensor[(1, 195), float32], Tensor[(2, 10, 13), float32]) {
  %0 = @func_1873() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1 = cast(%var_9733, dtype="float64") /* ty=Tensor[(1, 195), float64] */;
  %2 = reshape(%1, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), float64] */;
  %3 = cast(%var_9733, dtype="float32") /* ty=Tensor[(1, 195), float32] */;
  %4 = @func_7634() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) */;
  %5 = %0.0;
  %6 = @func_7846(%2) /* ty=Tensor[(13, 15, 1), float64] */;
  %7 = erf(%3) /* ty=Tensor[(1, 195), float32] */;
  %8 = %4.0;
  (%5, %6, %7, %8)
}

def @func_6223() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) {
  %9 = @func_2007() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %10 = %9.0;
  %11 = cast(%10, dtype="float64") /* ty=Tensor[(2, 10, 13), float64] */;
  %12 = reshape(%11, newshape=[2, 10, 13]) /* ty=Tensor[(2, 10, 13), float64] */;
  %13 = @func_2369(%12) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), bool]) */;
  %14 = @func_3295() /* ty=(Tensor[(4, 11, 12), float64],) */;
  %15 = %13.0;
  %16 = %14.0;
  %17 = @func_1236() /* ty=Tensor[(2, 10, 13), float32] */;
  (%10, %15, %16, %17)
}

def @func_11986(%var_11953: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(7, 3, 15), bool], Tensor[(315), float32], Tensor[(2, 10, 13), float32]) {
  %18 = @func_9968() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %19 = cast(%var_11953, dtype="float64") /* ty=Tensor[(528), float64] */;
  %20 = reshape(%19, newshape=[2, 264]) /* ty=Tensor[(2, 264), float64] */;
  %21 = @func_5281(%20) /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 264), float64]) */;
  %22 = @func_1328() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %23 = cast(meta[relay.Constant][0] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %24 = reshape(%23, newshape=[7, 3, 15]) /* ty=Tensor[(7, 3, 15), float32] */;
  %25 = @func_6603() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %26 = %18.1;
  %27 = %21.3;
  %28 = %22.0;
  %29 = @func_7302(%24) /* ty=Tensor[(7, 3, 15), bool] */;
  %30 = %25.0;
  (%26, %27, %var_11953, %28, %29, meta[relay.Constant][0] /* ty=Tensor[(315), float32] */, %30)
}

def @func_3437() -> Tensor[(2, 10, 13), float32] {
  %31 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %31.0
}

def @func_3720() -> (Tensor[(2, 10, 13), float32],) {
  %32 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
  (%32,)
}

def @func_9301() -> (Tensor[(2, 10, 13), float32],) {
  %33 = @func_1274() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %34 = %33.0;
  (%34,)
}

def @func_616() -> Tensor[(2, 10, 13), float32] {
  %35 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %35.0
}

def @func_8757() -> (Tensor[(2, 10, 13), float32], Tensor[(2366), bool], Tensor[(2366), bool], Tensor[(2, 10, 13), float32]) {
  %36 = @func_1873() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(2366), bool] */, dtype="bool") /* ty=Tensor[(2366), bool] */;
  %38 = reshape(%37, newshape=[2366]) /* ty=Tensor[(2366), bool] */;
  %39 = @func_8233(%38) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2366), bool]) */;
  %40 = @func_5801() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %41 = %36.0;
  %42 = %39.3;
  %43 = %40.1;
  (%41, %42, meta[relay.Constant][1] /* ty=Tensor[(2366), bool] */, %43)
}

def @func_13725(%var_13704: Tensor[(16, 9, 15), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64]) {
  %44 = @func_13384() /* ty=(Tensor[(16, 9, 15), float64],) */;
  %45 = %44.0;
  %46 = cast(%var_13704, dtype="float64") /* ty=Tensor[(16, 9, 15), float64] */;
  %47 = shape_of(%45, dtype="int32") /* ty=Tensor[(3), int32] */;
  %48 = cast(%45, dtype="float64") /* ty=Tensor[(16, 9, 15), float64] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %50 = @func_9081() /* ty=Tensor[(2, 10, 13), float32] */;
  %51 = maximum(%48, %49) /* ty=Tensor[(16, 9, 15), float64] */;
  (%50, %51)
}

def @func_13269() -> Tensor[(2, 10, 13), float64] {
  %52 = @func_3851() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %52.2
}

def @func_12921(%var_12851: Tensor[(3, 15, 3), int8]) -> (Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(3, 15, 3), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %53 = @func_8499() /* ty=Tensor[(528), float64] */;
  %54 = cast(%53, dtype="float64") /* ty=Tensor[(528), float64] */;
  %55 = reshape(%54, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %56 = @func_5603(%55) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
  %57 = @func_11573() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(3, 15, 3), int8], Tensor[(3, 45), int8]) */;
  %58 = %57.2;
  %59 = cast(%var_12851, dtype="float64") /* ty=Tensor[(3, 15, 3), float64] */;
  %60 = shape_of(%58, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%58, dtype="float64") /* ty=Tensor[(3, 15, 3), float64] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %63 = @func_10852() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %64 = @func_10522() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %65 = @func_10737() /* ty=Tensor[(2, 10, 13), float32] */;
  %66 = @func_10737() /* ty=Tensor[(2, 10, 13), float32] */;
  %67 = %56.1;
  %68 = floor_divide(%61, %62) /* ty=Tensor[(3, 15, 3), float64] */;
  %69 = %63.1;
  %70 = @func_2381() /* ty=Tensor[(2, 10, 13), float32] */;
  %71 = %64.0;
  (%65, %53, %66, %67, %68, %69, %70, %71)
}

def @func_5489() -> (Tensor[(2, 10, 13), float64],) {
  %72 = @func_4903() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %73 = %72.0;
  (%73,)
}

def @func_12361() -> (Tensor[(2, 10, 13), float64],) {
  %74 = @func_7836() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %75 = %74.0;
  (%75,)
}

def @func_11064() -> (Tensor[(2, 10, 13), float32],) {
  %76 = @func_9968() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %77 = %76.0;
  (%77,)
}

def @func_2029() -> Tensor[(2, 10, 13), float32] {
  %78 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %78.0
}

def @func_13563() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %79 = @func_10698() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(9, 5, 14), bool], Tensor[(2, 10, 13), float32]) */;
  %80 = @func_4222() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %81 = %79.0;
  %82 = %80.0;
  (%81, %82)
}

def @func_16336() -> Tensor[(2, 10, 13), float32] {
  @func_2468() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_11429() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %83 = @func_2171() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %84 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %85 = %83.0;
  %86 = %84.0;
  (%85, %86)
}

def @func_4773() -> Tensor[(2, 10, 13), float32] {
  %87 = @func_1274() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %87.0
}

def @func_881(%var_866: Tensor[(2, 2, 1), uint64], %var_867: Tensor[(2, 2, 12), uint64]) -> (Tensor[(2, 2, 12), uint64], Tensor[(2, 10, 13), float32]) {
  %88 = cast(%var_866, dtype="uint64") /* ty=Tensor[(2, 2, 1), uint64] */;
  %89 = cast(%var_867, dtype="uint64") /* ty=Tensor[(2, 2, 12), uint64] */;
  %90 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %91 = right_shift(%88, %89) /* ty=Tensor[(2, 2, 12), uint64] */;
  %92 = %90.0;
  (%91, %92)
}

def @func_9935() -> Tensor[(2160), float64] {
  %93 = @func_9322() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64]) */;
  %93.2
}

def @func_2662() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %94 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %95 = @func_1741() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %96 = %94.0;
  %97 = %95.0;
  (%96, %97)
}

def @func_2861(%var_2849: Tensor[(2, 10, 13), float32]) -> Tensor[(2, 10, 13), int16] {
  %98 = @func_1808() /* ty=Tensor[(2, 10, 13), float32] */;
  %99 = cast(%var_2849, dtype="int16") /* ty=Tensor[(2, 10, 13), int16] */;
  %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%98, dtype="int16") /* ty=Tensor[(2, 10, 13), int16] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  minimum(%101, %102) /* ty=Tensor[(2, 10, 13), int16] */
}

def @func_14965(%var_14949: Tensor[(5, 6, 12), float64]) -> (Tensor[(5, 6, 12), float64], Tensor[(2, 10, 13), float64]) {
  %103 = cast(%var_14949, dtype="float64") /* ty=Tensor[(5, 6, 12), float64] */;
  %104 = acos(%103) /* ty=Tensor[(5, 6, 12), float64] */;
  %105 = @func_13269() /* ty=Tensor[(2, 10, 13), float64] */;
  (%104, %105)
}

def @func_5241() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64]) {
  %106 = @func_1005() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %107 = %106.0;
  %108 = cast(%107, dtype="float64") /* ty=Tensor[(2, 10, 13), float64] */;
  %109 = @func_2007() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %110 = sin(%108) /* ty=Tensor[(2, 10, 13), float64] */;
  %111 = %109.0;
  (%110, %111)
}

def @func_5912(%var_5889: Tensor[(9, 5, 3), uint64]) -> (Tensor[(9, 5, 3), bool], Tensor[(4, 11, 12), float64]) {
  %112 = cast(%var_5889, dtype="bool") /* ty=Tensor[(9, 5, 3), bool] */;
  %113 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(9, 5, 3), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 5, 3), uint64] */, dtype="bool") /* ty=Tensor[(9, 5, 3), bool] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %116 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %117 = less(%114, %115) /* ty=Tensor[(9, 5, 3), bool] */;
  %118 = %116.0;
  (%117, %118)
}

def @func_8546() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %119 = @func_2949() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64]) */;
  %120 = @func_6603() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %121 = @func_2522() /* ty=Tensor[(2, 10, 13), float64] */;
  %122 = %119.0;
  %123 = %120.0;
  (%121, %122, %123)
}

def @func_15628() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %124 = @func_7460() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %125 = %124.1;
  %126 = @func_7509() /* ty=Tensor[(2, 10, 13), float32] */;
  (%125, %126)
}

def @func_7734() -> (Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  %127 = @func_5123() /* ty=(Tensor[(2, 10, 13), bool],) */;
  %128 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %129 = @func_2829() /* ty=(Tensor[(4, 11, 12), float64],) */;
  %130 = %127.0;
  %131 = %128.0;
  %132 = %129.0;
  (%130, %131, %132)
}

def @func_4720(%var_4706: Tensor[(5, 11, 1), float32]) -> (Tensor[(5, 11, 1), float32], Tensor[(2, 10, 13), float32]) {
  %133 = cast(%var_4706, dtype="float32") /* ty=Tensor[(5, 11, 1), float32] */;
  %134 = @func_1274() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %135 = asin(%133) /* ty=Tensor[(5, 11, 1), float32] */;
  %136 = %134.0;
  (%135, %136)
}

def @func_10816() -> Tensor[(2, 10, 13), float64] {
  %137 = @func_5489() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %137.0
}

def @func_8979() -> (Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), float64]) {
  %138 = @func_8925() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %139 = @func_7734() /* ty=(Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) */;
  %140 = %138.0;
  %141 = %139.2;
  (%140, %141)
}

def @func_13235() -> (Tensor[(2, 10, 13), float32],) {
  %142 = @func_10102() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %143 = %142.0;
  (%143,)
}

def @func_13884(%var_13879: Tensor[(40), float32]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(40), float32]) {
  %144 = @func_12731() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %145 = cast(%var_13879, dtype="float32") /* ty=Tensor[(40), float32] */;
  %146 = reshape(%145, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), float32] */;
  %147 = @func_12634(%146) /* ty=(Tensor[(1, 5, 8), float32], Tensor[(2, 10, 13), float64]) */;
  %148 = %144.0;
  %149 = %147.1;
  (%148, %149, %var_13879)
}

def @func_6151(%var_6143: Tensor[(7, 10, 13), float32], %var_6144: Tensor[(7, 10, 13), float32]) -> (Tensor[(7, 10, 13), float32],) {
  %150 = cast(%var_6144, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %151 = shape_of(%var_6143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(%var_6143, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %154 = floor_divide(%152, %153) /* ty=Tensor[(7, 10, 13), float32] */;
  (%154,)
}

def @func_479() -> (Tensor[(2, 10, 13), float32],) {
  %155 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %156 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(2, 10, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %157 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %159 = floor_divide(%157, %158) /* ty=Tensor[(2, 10, 13), float32] */;
  (%159,)
}

def @func_11020() -> (Tensor[(2, 10, 13), float32],) {
  %160 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %161 = %160.0;
  (%161,)
}

def @func_2733() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %162 = @func_2279() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) */;
  %163 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %164 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %165 = %162.5;
  %166 = %163.0;
  %167 = %164.1;
  (%165, %166, %167)
}

def @func_4891() -> Tensor[(2, 10, 13), float32] {
  %168 = @func_3526() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %168.0
}

def @func_5565() -> (Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) {
  %169 = @func_1470() /* ty=(Tensor[(16, 9, 15), float64],) */;
  %170 = cast(meta[relay.Constant][5] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %171 = reshape(%170, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float64] */;
  %172 = @func_2297(%171) /* ty=(Tensor[(14, 7, 16), float64], Tensor[(2, 10, 13), float32]) */;
  %173 = @func_2746() /* ty=Tensor[(2, 10, 13), float32] */;
  %174 = %169.0;
  %175 = %172.1;
  (%173, %174, %175, meta[relay.Constant][5] /* ty=Tensor[(1568), float64] */)
}

def @func_13017() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %176 = @func_5381() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 11, 9), bool], Tensor[(2, 10, 13), float32]) */;
  %177 = @func_2662() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %178 = @func_7836() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %179 = %176.2;
  %180 = %177.1;
  %181 = %178.0;
  (%179, %180, %181)
}

def @func_1083() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %182 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %183 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %184 = %182.0;
  %185 = %183.0;
  (%184, %185)
}

def @func_12719() -> Tensor[(2, 10, 13), float32] {
  %186 = @func_11786() /* ty=(Tensor[(3, 14, 16), float64], Tensor[(3, 14, 16), bool], Tensor[(3, 14, 16), float32], Tensor[(2, 10, 13), float32]) */;
  %186.3
}

def @func_7959() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(1, 528), float64]) {
  %187 = @func_6603() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %188 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 528), float64] */, dtype="float64") /* ty=Tensor[(1, 528), float64] */;
  %189 = reshape(%188, newshape=[2, 264]) /* ty=Tensor[(2, 264), float64] */;
  %190 = @func_5281(%189) /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 264), float64]) */;
  %191 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 528), float64] */, dtype="float64") /* ty=Tensor[(1, 528), float64] */;
  %192 = %187.0;
  %193 = %190.1;
  %194 = atan(%191) /* ty=Tensor[(1, 528), float64] */;
  (%192, %193, %194)
}

def @func_16419() -> (Tensor[(2, 10, 13), float32],) {
  %195 = @func_4538() /* ty=Tensor[(2, 10, 13), float32] */;
  (%195,)
}

def @func_2752() -> (Tensor[(2, 10, 13), float32],) {
  %196 = @func_2433() /* ty=Tensor[(2, 10, 13), float32] */;
  (%196,)
}

def @func_5801() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %197 = @func_5489() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %198 = @func_3526() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %199 = %197.0;
  %200 = %198.0;
  (%199, %200)
}

def @func_7302(%var_7295: Tensor[(7, 3, 15), float32]) -> Tensor[(7, 3, 15), bool] {
  %201 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 3, 15), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 15), float32] */;
  %202 = sqrt(%201) /* ty=Tensor[(7, 3, 15), float32] */;
  %203 = cast(%var_7295, dtype="bool") /* ty=Tensor[(7, 3, 15), bool] */;
  %204 = shape_of(%202, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%202, dtype="bool") /* ty=Tensor[(7, 3, 15), bool] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%205, %206) /* ty=Tensor[(7, 3, 15), bool] */
}

def @func_12231() -> (Tensor[(2366), bool], Tensor[(2, 10, 13), float32]) {
  %207 = @func_8757() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2366), bool], Tensor[(2366), bool], Tensor[(2, 10, 13), float32]) */;
  %208 = @func_6188() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %209 = %207.1;
  %210 = %208.0;
  (%209, %210)
}

def @func_10522() -> (Tensor[(2, 10, 13), float32],) {
  %211 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %212 = %211.0;
  (%212,)
}

def @func_10624(%var_10621: Tensor[(9, 5, 14), float64]) -> Tensor[(9, 5, 14), float64] {
  %213 = cast(%var_10621, dtype="float64") /* ty=Tensor[(9, 5, 14), float64] */;
  tan(%213) /* ty=Tensor[(9, 5, 14), float64] */
}

def @func_13961() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %214 = @func_10954() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %215 = @func_6554() /* ty=Tensor[(2, 10, 13), float32] */;
  %216 = %214.1;
  (%215, %216)
}

def @func_2829() -> (Tensor[(4, 11, 12), float64],) {
  %217 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %218 = %217.0;
  (%218,)
}

def @func_2926() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %219 = @func_1328() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %220 = @func_2522() /* ty=Tensor[(2, 10, 13), float64] */;
  %221 = %219.1;
  (%220, %221)
}

def @func_3295() -> (Tensor[(4, 11, 12), float64],) {
  %222 = @func_2829() /* ty=(Tensor[(4, 11, 12), float64],) */;
  %223 = %222.0;
  (%223,)
}

def @func_16635() -> Tensor[(2, 10, 13), float64] {
  %224 = @func_2007() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %224.0
}

def @func_12548(%var_12459: Tensor[(528), uint64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), int64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) {
  %225 = @func_9514() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %226 = @func_8464() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %227 = @func_9651() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %228 = cast(%var_12459, dtype="uint64") /* ty=Tensor[(528), uint64] */;
  %229 = reshape(%228, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), uint64] */;
  %230 = @func_4995(%229) /* ty=Tensor[(4, 11, 12), bool] */;
  %231 = cast(%var_12459, dtype="int64") /* ty=Tensor[(528), int64] */;
  %232 = shape_of(%230, dtype="int32") /* ty=Tensor[(3), int32] */;
  %233 = cast(%230, dtype="int64") /* ty=Tensor[(4, 11, 12), int64] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %235 = @func_10852() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %236 = @func_7919() /* ty=(Tensor[(4, 11, 12), float64],) */;
  %237 = @func_10852() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %238 = @func_10405() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %239 = %225.0;
  %240 = @func_4891() /* ty=Tensor[(2, 10, 13), float32] */;
  %241 = %226.0;
  %242 = %227.0;
  %243 = bitwise_or(%233, %234) /* ty=Tensor[(4, 11, 12), int64] */;
  %244 = %235.1;
  %245 = %236.0;
  %246 = @func_9081() /* ty=Tensor[(2, 10, 13), float32] */;
  %247 = %237.0;
  %248 = %238.0;
  (%239, %240, %241, %242, %243, %244, %245, %246, %247, %248)
}

def @func_11680() -> (Tensor[(2, 10, 13), float32],) {
  %249 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %250 = %249.0;
  (%250,)
}

def @func_15490() -> (Tensor[(2, 10, 13), float32],) {
  %251 = @func_8631() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %252 = %251.2;
  (%252,)
}

def @func_9081() -> Tensor[(2, 10, 13), float32] {
  %253 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %253.0
}

def @func_12145() -> (Tensor[(2, 10, 13), float32],) {
  %254 = @func_2381() /* ty=Tensor[(2, 10, 13), float32] */;
  (%254,)
}

def @func_1236() -> Tensor[(2, 10, 13), float32] {
  %255 = @func_674() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %255.0
}

def @func_12390() -> (Tensor[(2, 10, 13), float64],) {
  %256 = @func_10360() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %257 = %256.0;
  (%257,)
}

def @func_4995(%var_4978: Tensor[(4, 11, 12), uint64]) -> Tensor[(4, 11, 12), bool] {
  %258 = @func_2279() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) */;
  %259 = %258.3;
  %260 = cast(%var_4978, dtype="bool") /* ty=Tensor[(4, 11, 12), bool] */;
  %261 = shape_of(%259, dtype="int32") /* ty=Tensor[(3), int32] */;
  %262 = cast(%259, dtype="bool") /* ty=Tensor[(4, 11, 12), bool] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%262, %263) /* ty=Tensor[(4, 11, 12), bool] */
}

def @func_3526() -> (Tensor[(2, 10, 13), float32],) {
  %264 = @func_2381() /* ty=Tensor[(2, 10, 13), float32] */;
  (%264,)
}

def @func_10070() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %265 = @func_6603() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %266 = @func_4773() /* ty=Tensor[(2, 10, 13), float32] */;
  %267 = %265.0;
  (%266, %267)
}

def @func_3851() -> (Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %268 = @func_2829() /* ty=(Tensor[(4, 11, 12), float64],) */;
  %269 = @func_2007() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %270 = @func_3628() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %271 = @func_3628() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %272 = %268.0;
  %273 = @func_2522() /* ty=Tensor[(2, 10, 13), float64] */;
  %274 = %269.0;
  %275 = %270.1;
  %276 = %271.0;
  (%272, %273, %274, %275, %276)
}

def @func_12247() -> Tensor[(2, 10, 13), float32] {
  @func_1808() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_7881() -> (Tensor[(2, 10, 13), float32],) {
  %277 = @func_4512() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %278 = %277.0;
  (%278,)
}

def @func_10836() -> Tensor[(528), float64] {
  %279 = @func_3019() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
  %279.2
}

def @func_10852() -> (Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) {
  %280 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %281 = %280.0;
  %282 = @func_9081() /* ty=Tensor[(2, 10, 13), float32] */;
  (%281, %282)
}

def @func_15416(%var_15412: Tensor[(65, 4), float32]) -> (Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), int16], Tensor[(65, 4), float32]) {
  %283 = @func_9322() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64]) */;
  %284 = cast(%var_15412, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
  %285 = reshape(%284, newshape=[2, 10, 13]) /* ty=Tensor[(2, 10, 13), float32] */;
  %286 = %283.1;
  %287 = @func_2861(%285) /* ty=Tensor[(2, 10, 13), int16] */;
  (%286, %287, %var_15412)
}

def @func_7846(%var_7843: Tensor[(13, 15, 1), float64]) -> Tensor[(13, 15, 1), float64] {
  %288 = cast(%var_7843, dtype="float64") /* ty=Tensor[(13, 15, 1), float64] */;
  acosh(%288) /* ty=Tensor[(13, 15, 1), float64] */
}

def @func_1436() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %289 = @func_540() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %290 = @func_1005() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %291 = %289.1;
  %292 = %290.1;
  (%291, %292)
}

def @func_13384() -> (Tensor[(16, 9, 15), float64],) {
  %293 = @func_5565() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) */;
  %294 = %293.1;
  (%294,)
}

def @func_14229() -> Tensor[(2, 10, 13), float32] {
  %295 = @func_7213() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %295.0
}

def @func_6188() -> (Tensor[(2, 10, 13), float32],) {
  %296 = @func_5327() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
  %297 = %296.0;
  (%297,)
}

def @func_1873() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %298 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %299 = @func_1236() /* ty=Tensor[(2, 10, 13), float32] */;
  %300 = cast(%299, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %301 = %298.0;
  %302 = cos(%300) /* ty=Tensor[(2, 10, 13), float32] */;
  (%301, %302)
}

def @func_10698() -> (Tensor[(2, 10, 13), float32], Tensor[(9, 5, 14), bool], Tensor[(2, 10, 13), float32]) {
  %303 = @func_8092() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %304 = cast(meta[relay.Constant][8] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %305 = reshape(%304, newshape=[9, 5, 14]) /* ty=Tensor[(9, 5, 14), float64] */;
  %306 = @func_10624(%305) /* ty=Tensor[(9, 5, 14), float64] */;
  %307 = cast(meta[relay.Constant][8] /* ty=Tensor[(630), float64] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %308 = shape_of(%306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %309 = cast(%306, dtype="bool") /* ty=Tensor[(9, 5, 14), bool] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %311 = @func_4035() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %312 = %303.0;
  %313 = greater(%309, %310) /* ty=Tensor[(9, 5, 14), bool] */;
  %314 = %311.2;
  (%312, %313, %314)
}

def @func_9347() -> (Tensor[(2, 10, 13), float32],) {
  %315 = @func_9233() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %316 = %315.0;
  (%316,)
}

def @func_10405() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %317 = @func_1741() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %318 = @func_6675() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %319 = %317.0;
  %320 = %318.0;
  (%319, %320)
}

def @func_15121() -> (Tensor[(2, 10, 13), float64],) {
  %321 = @func_4035() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %322 = %321.0;
  (%322,)
}

def @func_3901() -> Tensor[(2, 10, 13), float32] {
  @func_616() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_2279() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) {
  %323 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %324 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %325 = @func_2029() /* ty=Tensor[(2, 10, 13), float32] */;
  %326 = cast(%325, dtype="float64") /* ty=Tensor[(2, 10, 13), float64] */;
  %327 = sqrt(%326) /* ty=Tensor[(2, 10, 13), float64] */;
  %328 = cast(%327, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %329 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 66), float64] */, dtype="float64") /* ty=Tensor[(8, 66), float64] */;
  %330 = reshape(%329, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
  %331 = @func_787(%330) /* ty=(Tensor[(4, 11, 12), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %332 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %333 = %323.0;
  %334 = %324.0;
  %335 = log10(%328) /* ty=Tensor[(2, 10, 13), float32] */;
  %336 = %331.0;
  %337 = %332.0;
  (%333, %334, %335, %336, meta[relay.Constant][9] /* ty=Tensor[(8, 66), float64] */, %337)
}

def @func_11933(%var_11920: Tensor[(450), float32]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(5, 10, 9), bool], Tensor[(50), float32], Tensor[(450), float32]) {
  %338 = cast(meta[relay.Constant][10] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
  %339 = cast(%var_11920, dtype="float32") /* ty=Tensor[(450), float32] */;
  %340 = reshape(%338, newshape=[5, 10, 1]) /* ty=Tensor[(5, 10, 1), float32] */;
  %341 = reshape(%339, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %342 = @func_6943(%340, %341) /* ty=(Tensor[(5, 10, 9), bool],) */;
  %343 = @func_4802() /* ty=Tensor[(2, 10, 13), float32] */;
  %344 = @func_4773() /* ty=Tensor[(2, 10, 13), float32] */;
  %345 = %342.0;
  (%343, %344, %345, meta[relay.Constant][10] /* ty=Tensor[(50), float32] */, %var_11920)
}

def @func_10038() -> (Tensor[(2, 10, 13), float64],) {
  %346 = @func_5824() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %347 = %346.1;
  (%347,)
}

def @func_14633() -> (Tensor[(2, 10, 13), float32],) {
  %348 = @func_14105() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %349 = %348.2;
  (%349,)
}

def @func_11903(%var_11898: Tensor[(10, 14, 3), uint8], %var_11899: Tensor[(10, 14, 3), uint8]) -> (Tensor[(10, 14, 3), uint8],) {
  %350 = cast(%var_11899, dtype="uint8") /* ty=Tensor[(10, 14, 3), uint8] */;
  %351 = shape_of(%var_11898, dtype="int32") /* ty=Tensor[(3), int32] */;
  %352 = cast(%var_11898, dtype="uint8") /* ty=Tensor[(10, 14, 3), uint8] */;
  %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %354 = multiply(%352, %353) /* ty=Tensor[(10, 14, 3), uint8] */;
  (%354,)
}

def @func_4222() -> (Tensor[(2, 10, 13), float64],) {
  %355 = @func_674() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %356 = %355.1;
  (%356,)
}

def @main(%var_16783: Tensor[(3, 12, 10), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(3, 12, 10), float64]) {
  %357 = @func_10954() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %358 = cast(%var_16783, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %359 = log(%358) /* ty=Tensor[(3, 12, 10), float64] */;
  %360 = cast(%var_16783, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %361 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%359, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %364 = %357.0;
  %365 = floor_divide(%362, %363) /* ty=Tensor[(3, 12, 10), float64] */;
  (%364, %365)
}

def @func_5708(%var_5696: Tensor[(7, 6, 6), int8]) -> (Tensor[(7, 6, 6), bool],) {
  %366 = cast(meta[relay.Constant][11] /* ty=Tensor[(7, 6, 6), int8] */, dtype="bool") /* ty=Tensor[(7, 6, 6), bool] */;
  %367 = shape_of(%var_5696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(%var_5696, dtype="bool") /* ty=Tensor[(7, 6, 6), bool] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %370 = equal(%368, %369) /* ty=Tensor[(7, 6, 6), bool] */;
  (%370,)
}

def @func_11573() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(3, 15, 3), int8], Tensor[(3, 45), int8]) {
  %371 = @func_10522() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %372 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 45), int8] */, dtype="int8") /* ty=Tensor[(3, 45), int8] */;
  %373 = reshape(%372, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), int8] */;
  %374 = @func_9362(%373) /* ty=(Tensor[(3, 15, 3), int8],) */;
  %375 = %371.0;
  %376 = @func_4201() /* ty=Tensor[(2, 10, 13), float32] */;
  %377 = %374.0;
  (%375, %376, %377, meta[relay.Constant][12] /* ty=Tensor[(3, 45), int8] */)
}

def @func_1328() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %378 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
  %379 = %378.0;
  %380 = cast(%379, dtype="float64") /* ty=Tensor[(2, 10, 13), float64] */;
  %381 = acosh(%380) /* ty=Tensor[(2, 10, 13), float64] */;
  %382 = @func_1236() /* ty=Tensor[(2, 10, 13), float32] */;
  (%381, %382)
}

def @func_15253(%var_15240: Tensor[(7, 14, 5), uint32]) -> Tensor[(7, 14, 5), bool] {
  %383 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 14, 5), uint32] */, dtype="bool") /* ty=Tensor[(7, 14, 5), bool] */;
  %384 = shape_of(%var_15240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%var_15240, dtype="bool") /* ty=Tensor[(7, 14, 5), bool] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%385, %386) /* ty=Tensor[(7, 14, 5), bool] */
}

def @func_14720() -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  %387 = @func_12145() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %388 = @func_3851() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %389 = %387.0;
  %390 = %388.0;
  (%389, %390)
}

def @func_14105() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %391 = @func_10463() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) */;
  %392 = @func_6675() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %393 = @func_9301() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %394 = %391.0;
  %395 = %392.0;
  %396 = %393.0;
  %397 = @func_4582() /* ty=Tensor[(2, 10, 13), float32] */;
  (%394, %395, %396, %397)
}

def @func_1741() -> (Tensor[(2, 10, 13), float32],) {
  %398 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %399 = %398.0;
  (%399,)
}

def @func_1808() -> Tensor[(2, 10, 13), float32] {
  %400 = @func_1741() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %400.0
}

def @func_5428() -> Tensor[(2, 10, 13), int8] {
  %401 = @func_3561() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) */;
  %401.1
}

def @func_14207() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(14, ?, 16), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %402 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 16), float32] */;
  %403 = tan(%402) /* ty=Tensor[(14, 1, 16), float32] */;
  %404 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 16), float32] */;
  %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %406 = cast(%403, dtype="float32") /* ty=Tensor[(14, 1, 16), float32] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %408 = @func_5241() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64]) */;
  %409 = @func_6125() /* ty=Tensor[(2, 10, 13), float32] */;
  %410 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
  %411 = divide(%406, %407) /* ty=Tensor[(14, ?, 16), float32] */;
  %412 = @func_13994() /* ty=Tensor[(2, 10, 13), float32] */;
  %413 = %408.1;
  (%409, %410, %411, %412, %413)
}

def @func_15598() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %414 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %415 = %414.0;
  %416 = @func_6106() /* ty=Tensor[(2, 10, 13), float64] */;
  (%415, %416)
}

def @func_6675() -> (Tensor[(2, 10, 13), float32],) {
  %417 = @func_5565() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) */;
  %418 = %417.2;
  (%418,)
}

def @func_674() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %419 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %420 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %421 = %420.0;
  %422 = cast(%421, dtype="float64") /* ty=Tensor[(2, 10, 13), float64] */;
  %423 = %419.0;
  %424 = sinh(%422) /* ty=Tensor[(2, 10, 13), float64] */;
  (%423, %424)
}

def @func_5381() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 11, 9), bool], Tensor[(2, 10, 13), float32]) {
  %425 = @func_1083() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %426 = %425.1;
  %427 = @func_4173() /* ty=Tensor[(2, 11, 9), bool] */;
  %428 = @func_4582() /* ty=Tensor[(2, 10, 13), float32] */;
  (%426, %427, %428)
}

def @func_787(%var_751: Tensor[(4, 11, 12), float64]) -> (Tensor[(4, 11, 12), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %429 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %430 = %429.0;
  %431 = cast(%var_751, dtype="uint64") /* ty=Tensor[(4, 11, 12), uint64] */;
  %432 = shape_of(%430, dtype="int32") /* ty=Tensor[(3), int32] */;
  %433 = cast(%430, dtype="uint64") /* ty=Tensor[(4, 11, 12), uint64] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %435 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %436 = @func_674() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %437 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %438 = left_shift(%433, %434) /* ty=Tensor[(4, 11, 12), uint64] */;
  %439 = %435.0;
  %440 = %436.1;
  %441 = %437.0;
  %442 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
  (%438, %439, %440, %441, %442)
}

def @func_13146() -> Tensor[(2, 10, 13), float32] {
  %443 = @func_9106() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %443.0
}

def @func_2630() -> (Tensor[(2, 10, 13), float32],) {
  %444 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %445 = %444.0;
  (%445,)
}

def @func_12731() -> (Tensor[(2, 10, 13), float32],) {
  %446 = @func_1873() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %447 = %446.0;
  (%447,)
}

def @func_15915() -> Tensor[(2, 10, 13), float32] {
  %448 = @func_11342() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %448.0
}

def @func_8869() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %449 = @func_8092() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %450 = @func_1005() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %451 = %449.0;
  %452 = %450.0;
  (%451, %452)
}

def @func_3019() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) {
  %453 = @func_2433() /* ty=Tensor[(2, 10, 13), float32] */;
  %454 = cast(%453, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %455 = log2(%454) /* ty=Tensor[(2, 10, 13), float32] */;
  %456 = cast(%455, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %457 = cast(meta[relay.Constant][15] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %458 = reshape(%457, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
  %459 = @func_787(%458) /* ty=(Tensor[(4, 11, 12), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %460 = atanh(%456) /* ty=Tensor[(2, 10, 13), float32] */;
  %461 = %459.3;
  (%460, %461, meta[relay.Constant][15] /* ty=Tensor[(528), float64] */)
}

def @func_12045(%var_12007: Tensor[(1568), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(1568), float64], Tensor[(528), float64], Tensor[(2160), float32]) {
  %462 = cast(meta[relay.Constant][16] /* ty=Tensor[(2160), float64] */, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %463 = cast(%var_12007, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %464 = cast(meta[relay.Constant][17] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %465 = reshape(%462, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
  %466 = reshape(%463, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %467 = reshape(%464, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %468 = @func_8397(%465, %466, %467) /* ty=(Tensor[(16, 9, 15), int16], Tensor[(14, 7, 16), float64], Tensor[(1568), float64], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(13, 15, 1), float64], Tensor[(195), float64]) */;
  %469 = cast(meta[relay.Constant][16] /* ty=Tensor[(2160), float64] */, dtype="float32") /* ty=Tensor[(2160), float32] */;
  %470 = @func_1808() /* ty=Tensor[(2, 10, 13), float32] */;
  %471 = %468.2;
  %472 = asinh(%469) /* ty=Tensor[(2160), float32] */;
  (%470, %471, %var_12007, meta[relay.Constant][17] /* ty=Tensor[(528), float64] */, %472)
}

def @func_9927() -> Tensor[(4, 11, 12), float64] {
  %473 = @func_3851() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %473.0
}

def @func_14399() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %474 = @func_14248() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %475 = @func_5824() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %476 = %474.0;
  %477 = %475.0;
  (%476, %477)
}

def @func_1361() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %478 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %479 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
  %480 = %478.0;
  (%479, %480)
}

def @func_11438() -> (Tensor[(528), float64],) {
  %481 = @func_10836() /* ty=Tensor[(528), float64] */;
  (%481,)
}

def @func_7836() -> (Tensor[(2, 10, 13), float64],) {
  %482 = @func_4903() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %483 = %482.0;
  (%483,)
}

def @func_7213() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %484 = @func_2733() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %485 = @func_2381() /* ty=Tensor[(2, 10, 13), float32] */;
  %486 = %484.0;
  (%485, %486)
}

def @func_10360() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %487 = @func_5801() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %488 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %489 = %487.0;
  %490 = %488.0;
  %491 = @func_2446() /* ty=Tensor[(2, 10, 13), float32] */;
  (%489, %490, %491)
}

def @func_16123() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %492 = @func_3851() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %493 = %492.4;
  %494 = @func_14229() /* ty=Tensor[(2, 10, 13), float32] */;
  (%493, %494)
}

def @func_7702() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %495 = @func_3628() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %496 = %495.1;
  %497 = @func_4802() /* ty=Tensor[(2, 10, 13), float32] */;
  (%496, %497)
}

def @func_8061() -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  %498 = @func_2171() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %499 = @func_2829() /* ty=(Tensor[(4, 11, 12), float64],) */;
  %500 = %498.2;
  %501 = %499.0;
  (%500, %501)
}

def @func_11382(%var_11374: Tensor[(1, 15, 5), float64]) -> Tensor[(1, 15, 5), float64] {
  %502 = cast(%var_11374, dtype="float64") /* ty=Tensor[(1, 15, 5), float64] */;
  log2(%502) /* ty=Tensor[(1, 15, 5), float64] */
}

def @func_9514() -> (Tensor[(2, 10, 13), float32],) {
  %503 = @func_6554() /* ty=Tensor[(2, 10, 13), float32] */;
  (%503,)
}

def @func_10102() -> (Tensor[(2, 10, 13), float32],) {
  %504 = @func_4773() /* ty=Tensor[(2, 10, 13), float32] */;
  (%504,)
}

def @func_11280() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %505 = @func_1741() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %506 = @func_8092() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %507 = %505.0;
  %508 = %506.0;
  (%507, %508)
}

def @func_3384(%var_3303: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), int32], Tensor[(2, 10, 13), float32]) {
  %509 = @func_2662() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %510 = @func_2171() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %511 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %512 = @func_2926() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %513 = cast(%var_3303, dtype="float64") /* ty=Tensor[(528), float64] */;
  %514 = reshape(%513, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
  %515 = @func_1634(%514) /* ty=Tensor[(4, 11, 12), float32] */;
  %516 = cast(%515, dtype="float64") /* ty=Tensor[(4, 11, 12), float64] */;
  %517 = log2(%516) /* ty=Tensor[(4, 11, 12), float64] */;
  %518 = cast(%515, dtype="int32") /* ty=Tensor[(4, 11, 12), int32] */;
  %519 = shape_of(%517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%517, dtype="int32") /* ty=Tensor[(4, 11, 12), int32] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %522 = @func_2279() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) */;
  %523 = %509.0;
  %524 = %510.1;
  %525 = %511.0;
  %526 = %512.0;
  %527 = @func_2522() /* ty=Tensor[(2, 10, 13), float64] */;
  %528 = maximum(%520, %521) /* ty=Tensor[(4, 11, 12), int32] */;
  %529 = %522.0;
  (%523, %var_3303, %524, %525, %526, %527, %528, %529)
}

def @func_9322() -> (Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64]) {
  %530 = @func_7634() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) */;
  %531 = %530.0;
  %532 = cast(%531, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %533 = cast(meta[relay.Constant][18] /* ty=Tensor[(2160), float64] */, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %534 = reshape(%532, newshape=[2, 10, 13]) /* ty=Tensor[(2, 10, 13), float32] */;
  %535 = reshape(%533, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
  %536 = @func_3277(%534, %535) /* ty=(Tensor[(2, 10, 13), uint8], Tensor[(16, 9, 15), float64], Tensor[(16, 9, 15), bool]) */;
  %537 = %536.1;
  (%531, %537, meta[relay.Constant][18] /* ty=Tensor[(2160), float64] */)
}

def @func_8464() -> (Tensor[(2, 10, 13), float64],) {
  %538 = @func_5241() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64]) */;
  %539 = %538.0;
  (%539,)
}

def @func_4538() -> Tensor[(2, 10, 13), float32] {
  %540 = @func_2662() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %540.0
}

def @func_3962(%var_3947: Tensor[(1, 528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(1, 528), float64]) {
  %541 = @func_2279() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) */;
  %542 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %543 = cast(%var_3947, dtype="float64") /* ty=Tensor[(1, 528), float64] */;
  %544 = reshape(%543, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
  %545 = %541.5;
  %546 = %542.0;
  %547 = @func_1634(%544) /* ty=Tensor[(4, 11, 12), float32] */;
  (%545, %546, %547, %var_3947)
}

def @func_15212(%var_15194: Tensor[(6, 12, 9), float64]) -> (Tensor[(6, 12, 9), float64],) {
  %548 = cast(%var_15194, dtype="float64") /* ty=Tensor[(6, 12, 9), float64] */;
  %549 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(6, 12, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(meta[relay.Constant][19] /* ty=Tensor[(6, 12, 9), float64] */, dtype="float64") /* ty=Tensor[(6, 12, 9), float64] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %552 = power(%550, %551) /* ty=Tensor[(6, 12, 9), float64] */;
  (%552,)
}

def @func_10761() -> Tensor[(2, 10, 13), int8] {
  %553 = @func_6068() /* ty=(Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), int8]) */;
  %553.1
}

def @func_14369() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %554 = @func_3019() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
  %555 = @func_11429() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %556 = %554.1;
  %557 = %555.0;
  (%556, %557)
}

def @func_5327() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) {
  %558 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %559 = cast(meta[relay.Constant][20] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %560 = reshape(%559, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
  %561 = @func_787(%560) /* ty=(Tensor[(4, 11, 12), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %562 = @func_3901() /* ty=Tensor[(2, 10, 13), float32] */;
  %563 = %558.0;
  %564 = %561.4;
  (%562, %563, %564, meta[relay.Constant][20] /* ty=Tensor[(528), float64] */)
}

def @func_1634(%var_1604: Tensor[(4, 11, 12), float64]) -> Tensor[(4, 11, 12), float32] {
  %565 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %566 = %565.0;
  %567 = cast(%var_1604, dtype="float32") /* ty=Tensor[(4, 11, 12), float32] */;
  %568 = shape_of(%566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%566, dtype="float32") /* ty=Tensor[(4, 11, 12), float32] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%569, %570) /* ty=Tensor[(4, 11, 12), float32] */
}

def @func_4286() -> (Tensor[(2, 10, 13), float32],) {
  %571 = @func_540() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %572 = %571.1;
  (%572,)
}

def @func_2433() -> Tensor[(2, 10, 13), float32] {
  @func_1236() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_7509() -> Tensor[(2, 10, 13), float32] {
  %573 = @func_5146() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %573.0
}

def @func_16084() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(300, 1), float64], Tensor[(15, 10, 10), float32]) {
  %574 = @func_11064() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %575 = cast(meta[relay.Constant][21] /* ty=Tensor[(300, 1), float64] */, dtype="float64") /* ty=Tensor[(300, 1), float64] */;
  %576 = reshape(%575, newshape=[15, 2, 10]) /* ty=Tensor[(15, 2, 10), float64] */;
  %577 = @func_15442(%576) /* ty=(Tensor[(15, 2, 10), float64], Tensor[(2, 10, 13), float32]) */;
  %578 = %574.0;
  %579 = %577.1;
  %580 = @func_16001() /* ty=Tensor[(15, 10, 10), float32] */;
  (%578, %579, meta[relay.Constant][21] /* ty=Tensor[(300, 1), float64] */, %580)
}

def @func_6390() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) {
  %581 = @func_4451() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %582 = @func_1083() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %583 = @func_5327() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
  %584 = @func_3851() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %585 = @func_5327() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
  %586 = %581.1;
  %587 = %582.1;
  %588 = %583.3;
  %589 = %584.2;
  %590 = %585.2;
  %591 = @func_5428() /* ty=Tensor[(2, 10, 13), int8] */;
  (%586, %587, %588, %589, %590, %591)
}

def @func_12677() -> (Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), float32]) {
  %592 = @func_5123() /* ty=(Tensor[(2, 10, 13), bool],) */;
  %593 = @func_7213() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %594 = %592.0;
  %595 = %593.0;
  (%594, %595)
}

def @func_14733() -> Tensor[(2366), bool] {
  %596 = @func_8757() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2366), bool], Tensor[(2366), bool], Tensor[(2, 10, 13), float32]) */;
  %596.1
}

def @func_6428() -> Tensor[(2, 10, 13), float32] {
  @func_2746() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_16288(%var_16281: Tensor[(135), int8]) -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(3, 15, 3), int8], Tensor[(135), int8]) {
  %597 = @func_13961() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %598 = cast(%var_16281, dtype="int8") /* ty=Tensor[(135), int8] */;
  %599 = reshape(%598, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), int8] */;
  %600 = @func_9362(%599) /* ty=(Tensor[(3, 15, 3), int8],) */;
  %601 = @func_6106() /* ty=Tensor[(2, 10, 13), float64] */;
  %602 = %597.0;
  %603 = @func_12247() /* ty=Tensor[(2, 10, 13), float32] */;
  %604 = %600.0;
  (%601, %602, %603, %604, %var_16281)
}

def @func_7634() -> (Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) {
  %605 = cast(meta[relay.Constant][22] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %606 = reshape(%605, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %607 = @func_3668(%606) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(528), float64]) */;
  %608 = @func_2433() /* ty=Tensor[(2, 10, 13), float32] */;
  %609 = %607.2;
  %610 = @func_4582() /* ty=Tensor[(2, 10, 13), float32] */;
  (%608, %609, meta[relay.Constant][22] /* ty=Tensor[(528), float64] */, %610)
}

def @func_8499() -> Tensor[(528), float64] {
  %611 = @func_3019() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
  %611.2
}

def @func_9165(%var_9156: Tensor[(11, 6, 13), float32]) -> (Tensor[(11, 6, 13), float32],) {
  %612 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 6, 13), float32] */, dtype="float32") /* ty=Tensor[(11, 6, 13), float32] */;
  %613 = shape_of(%var_9156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(%var_9156, dtype="float32") /* ty=Tensor[(11, 6, 13), float32] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %616 = floor_mod(%614, %615) /* ty=Tensor[(11, 6, 13), float32] */;
  (%616,)
}

def @func_11523() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64]) {
  %617 = @func_6782() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %618 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
  %619 = @func_8979() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), float64]) */;
  %620 = %617.1;
  %621 = %618.1;
  %622 = %619.0;
  (%620, %621, %622)
}

def @func_16385() -> Tensor[(2, 10, 13), float64] {
  %623 = @func_1005() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %623.1
}

def @func_8631() -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) {
  %624 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %625 = @func_2829() /* ty=(Tensor[(4, 11, 12), float64],) */;
  %626 = @func_1083() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %627 = %624.0;
  %628 = %625.0;
  %629 = %626.1;
  (%627, %628, %629)
}

def @func_5502() -> (Tensor[(2, 10, 13), float32],) {
  %630 = @func_3561() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) */;
  %631 = %630.0;
  (%631,)
}

def @func_5281(%var_5272: Tensor[(2, 264), float64]) -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 264), float64]) {
  %632 = @func_5241() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64]) */;
  %633 = cast(meta[relay.Constant][24] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %634 = reshape(%633, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float64] */;
  %635 = @func_2297(%634) /* ty=(Tensor[(14, 7, 16), float64], Tensor[(2, 10, 13), float32]) */;
  %636 = cast(%var_5272, dtype="float64") /* ty=Tensor[(2, 264), float64] */;
  %637 = reshape(%636, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %638 = @func_3384(%637) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), int32], Tensor[(2, 10, 13), float32]) */;
  %639 = %632.0;
  %640 = %635.1;
  %641 = %638.2;
  (%639, %640, meta[relay.Constant][24] /* ty=Tensor[(1568), float64] */, %641, %var_5272)
}

def @func_2468() -> Tensor[(2, 10, 13), float32] {
  %642 = @func_1741() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %642.0
}

def @func_6554() -> Tensor[(2, 10, 13), float32] {
  @func_4802() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_15348(%var_15313: Tensor[(648), float64], %var_15346: Tensor[(1980), bool]) -> (Tensor[(2, 10, 13), float32], Tensor[(6, 12, 9), float64], Tensor[(648), float64], Tensor[(2, 10, 13), float32], Tensor[(12, 15, 11), bool], Tensor[(132, 1), bool], Tensor[(1980), bool]) {
  %643 = @func_7460() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %644 = cast(%var_15313, dtype="float64") /* ty=Tensor[(648), float64] */;
  %645 = reshape(%644, newshape=[6, 12, 9]) /* ty=Tensor[(6, 12, 9), float64] */;
  %646 = @func_15212(%645) /* ty=(Tensor[(6, 12, 9), float64],) */;
  %647 = @func_11064() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %648 = cast(meta[relay.Constant][25] /* ty=Tensor[(132, 1), bool] */, dtype="bool") /* ty=Tensor[(132, 1), bool] */;
  %649 = cast(%var_15346, dtype="bool") /* ty=Tensor[(1980), bool] */;
  %650 = reshape(%648, newshape=[12, 1, 11]) /* ty=Tensor[(12, 1, 11), bool] */;
  %651 = reshape(%649, newshape=[12, 15, 11]) /* ty=Tensor[(12, 15, 11), bool] */;
  %652 = @func_15078(%650, %651) /* ty=(Tensor[(12, 15, 11), bool], Tensor[(2, 10, 13), float32]) */;
  %653 = %643.0;
  %654 = %646.0;
  %655 = %647.0;
  %656 = %652.0;
  (%653, %654, %var_15313, %655, %656, meta[relay.Constant][25] /* ty=Tensor[(132, 1), bool] */, %var_15346)
}

def @func_9106() -> (Tensor[(2, 10, 13), float32],) {
  %657 = @func_3628() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %658 = %657.1;
  (%658,)
}

def @func_10463() -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  %659 = @func_3019() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
  %660 = @func_8631() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %661 = %659.0;
  %662 = %660.1;
  (%661, %662)
}

def @func_15951(%var_15931: Tensor[(8, 16, 13), uint32]) -> (Tensor[(8, 16, 13), uint32], Tensor[(2, 10, 13), float32]) {
  %663 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 16, 13), uint32] */, dtype="uint32") /* ty=Tensor[(8, 16, 13), uint32] */;
  %664 = shape_of(%var_15931, dtype="int32") /* ty=Tensor[(3), int32] */;
  %665 = cast(%var_15931, dtype="uint32") /* ty=Tensor[(8, 16, 13), uint32] */;
  %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %667 = @func_5381() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 11, 9), bool], Tensor[(2, 10, 13), float32]) */;
  %668 = right_shift(%665, %666) /* ty=Tensor[(8, 16, 13), uint32] */;
  %669 = %667.2;
  (%668, %669)
}

def @func_10954() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %670 = @func_540() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %671 = @func_2381() /* ty=Tensor[(2, 10, 13), float32] */;
  %672 = %670.1;
  (%671, %672)
}

def @func_4582() -> Tensor[(2, 10, 13), float32] {
  @func_2446() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_493() -> (Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) {
  %673 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 11, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 11, 12), float64] */;
  %674 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %675 = asin(%673) /* ty=Tensor[(4, 11, 12), float64] */;
  %676 = %674.0;
  (%675, %676)
}

def @func_5986(%var_5920: Tensor[(14, 13, 13), bool], %var_5921: Tensor[(14, 13, 13), bool]) -> (Tensor[(14, 13, 13), int16], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) {
  %677 = cast(%var_5921, dtype="bool") /* ty=Tensor[(14, 13, 13), bool] */;
  %678 = shape_of(%var_5920, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(%var_5920, dtype="bool") /* ty=Tensor[(14, 13, 13), bool] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %681 = logical_or(%679, %680) /* ty=Tensor[(14, 13, 13), bool] */;
  %682 = cast(%var_5920, dtype="bool") /* ty=Tensor[(14, 13, 13), bool] */;
  %683 = shape_of(%681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%681, dtype="bool") /* ty=Tensor[(14, 13, 13), bool] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %686 = greater(%684, %685) /* ty=Tensor[(14, 13, 13), bool] */;
  %687 = cast(%686, dtype="int16") /* ty=Tensor[(14, 13, 13), int16] */;
  %688 = shape_of(%var_5921, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%var_5921, dtype="int16") /* ty=Tensor[(14, 13, 13), int16] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %691 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
  %692 = @func_540() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %693 = subtract(%689, %690) /* ty=Tensor[(14, 13, 13), int16] */;
  %694 = %691.2;
  %695 = %692.0;
  (%693, %694, %695)
}

def @func_4802() -> Tensor[(2, 10, 13), float32] {
  @func_2029() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_9145() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 11, 9), bool], Tensor[(2, 10, 13), float64]) {
  %696 = @func_7881() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %697 = @func_4035() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %698 = %696.0;
  %699 = @func_4173() /* ty=Tensor[(2, 11, 9), bool] */;
  %700 = %697.1;
  (%698, %699, %700)
}

def @func_5482() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %701 = @func_2029() /* ty=Tensor[(2, 10, 13), float32] */;
  %702 = @func_2433() /* ty=Tensor[(2, 10, 13), float32] */;
  (%701, %702)
}

def @func_15282() -> (Tensor[(2, 10, 13), float32],) {
  %703 = @func_10405() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %704 = %703.0;
  (%704,)
}

def @func_1911() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %705 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %706 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %707 = %705.0;
  %708 = %706.0;
  (%707, %708)
}

def @func_8092() -> (Tensor[(2, 10, 13), float32],) {
  %709 = @func_2926() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %710 = %709.1;
  (%710,)
}

def @func_1411() -> (Tensor[(2, 10, 13), float32],) {
  %711 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %712 = %711.1;
  (%712,)
}

def @func_2369(%var_2340: Tensor[(2, 10, 13), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), bool]) {
  %713 = @func_1274() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %714 = @func_2007() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %715 = %714.0;
  %716 = cast(%var_2340, dtype="int64") /* ty=Tensor[(2, 10, 13), int64] */;
  %717 = shape_of(%715, dtype="int32") /* ty=Tensor[(3), int32] */;
  %718 = cast(%715, dtype="int64") /* ty=Tensor[(2, 10, 13), int64] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %720 = maximum(%718, %719) /* ty=Tensor[(2, 10, 13), int64] */;
  %721 = cast(%var_2340, dtype="bool") /* ty=Tensor[(2, 10, 13), bool] */;
  %722 = shape_of(%720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(%720, dtype="bool") /* ty=Tensor[(2, 10, 13), bool] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %725 = %713.0;
  %726 = equal(%723, %724) /* ty=Tensor[(2, 10, 13), bool] */;
  (%725, %726)
}

def @func_5146() -> (Tensor[(2, 10, 13), float32],) {
  %727 = @func_2029() /* ty=Tensor[(2, 10, 13), float32] */;
  (%727,)
}

def @func_11786() -> (Tensor[(3, 14, 16), float64], Tensor[(3, 14, 16), bool], Tensor[(3, 14, 16), float32], Tensor[(2, 10, 13), float32]) {
  %728 = cast(meta[relay.Constant][29] /* ty=Tensor[(3, 14, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 16), float64] */;
  %729 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(3, 14, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(meta[relay.Constant][28] /* ty=Tensor[(3, 14, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 16), float64] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %732 = cast(meta[relay.Constant][29] /* ty=Tensor[(3, 14, 16), float64] */, dtype="bool") /* ty=Tensor[(3, 14, 16), bool] */;
  %733 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(3, 14, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(meta[relay.Constant][28] /* ty=Tensor[(3, 14, 16), float64] */, dtype="bool") /* ty=Tensor[(3, 14, 16), bool] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %736 = cast(meta[relay.Constant][28] /* ty=Tensor[(3, 14, 16), float64] */, dtype="float32") /* ty=Tensor[(3, 14, 16), float32] */;
  %737 = @func_11064() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %738 = power(%730, %731) /* ty=Tensor[(3, 14, 16), float64] */;
  %739 = logical_or(%734, %735) /* ty=Tensor[(3, 14, 16), bool] */;
  %740 = atanh(%736) /* ty=Tensor[(3, 14, 16), float32] */;
  %741 = %737.0;
  (%738, %739, %740, %741)
}

def @func_6782() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %742 = @func_5146() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %743 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %744 = %742.0;
  %745 = %743.0;
  (%744, %745)
}

def @func_10585() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %746 = @func_1274() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %747 = @func_4451() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %748 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %749 = @func_4451() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %750 = %746.0;
  %751 = %747.0;
  %752 = %748.0;
  %753 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
  %754 = %749.1;
  %755 = @func_7895() /* ty=Tensor[(2, 10, 13), float64] */;
  (%750, %751, %752, %753, %754, %755)
}

def @func_13924(%var_13909: Tensor[(195), float64]) -> (Tensor[(2, 10, 13), float64], Tensor[(1, 195), float32], Tensor[(195), float64]) {
  %756 = @func_12361() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %757 = cast(%var_13909, dtype="float64") /* ty=Tensor[(195), float64] */;
  %758 = reshape(%757, newshape=[1, 195]) /* ty=Tensor[(1, 195), float64] */;
  %759 = @func_9762(%758) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(13, 15, 1), float64], Tensor[(1, 195), float32], Tensor[(2, 10, 13), float32]) */;
  %760 = %756.0;
  %761 = %759.2;
  (%760, %761, %var_13909)
}

def @func_15820() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  %762 = @func_4512() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %763 = @func_5801() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %764 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %765 = %762.0;
  %766 = %763.1;
  %767 = %764.0;
  (%765, %766, %767)
}

def @func_10285() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %768 = @func_8273() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %769 = @func_2433() /* ty=Tensor[(2, 10, 13), float32] */;
  %770 = %768.0;
  (%769, %770)
}

def @func_1976(%var_1945: Tensor[(7, 6, 14), uint8], %var_1946: Tensor[(7, 6, 14), uint8]) -> (Tensor[(7, 6, 14), float32], Tensor[(7, 6, 14), float64]) {
  %771 = cast(%var_1946, dtype="uint8") /* ty=Tensor[(7, 6, 14), uint8] */;
  %772 = shape_of(%var_1945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %773 = cast(%var_1945, dtype="uint8") /* ty=Tensor[(7, 6, 14), uint8] */;
  %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %775 = maximum(%773, %774) /* ty=Tensor[(7, 6, 14), uint8] */;
  %776 = cast(%775, dtype="float32") /* ty=Tensor[(7, 6, 14), float32] */;
  %777 = cast(%var_1946, dtype="float64") /* ty=Tensor[(7, 6, 14), float64] */;
  %778 = erf(%776) /* ty=Tensor[(7, 6, 14), float32] */;
  %779 = rsqrt(%777) /* ty=Tensor[(7, 6, 14), float64] */;
  (%778, %779)
}

def @func_2522() -> Tensor[(2, 10, 13), float64] {
  %780 = @func_1328() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %780.0
}

def @func_9651() -> (Tensor[(2, 10, 13), float32],) {
  %781 = @func_2171() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %782 = %781.1;
  (%782,)
}

def @func_3277(%var_3247: Tensor[(2, 10, 13), float32], %var_3272: Tensor[(16, 9, 15), float64]) -> (Tensor[(2, 10, 13), uint8], Tensor[(16, 9, 15), float64], Tensor[(16, 9, 15), bool]) {
  %783 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %784 = %783.0;
  %785 = cast(%var_3247, dtype="uint8") /* ty=Tensor[(2, 10, 13), uint8] */;
  %786 = shape_of(%784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %787 = cast(%784, dtype="uint8") /* ty=Tensor[(2, 10, 13), uint8] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %789 = @func_1470() /* ty=(Tensor[(16, 9, 15), float64],) */;
  %790 = @func_1470() /* ty=(Tensor[(16, 9, 15), float64],) */;
  %791 = %790.0;
  %792 = cast(%var_3272, dtype="bool") /* ty=Tensor[(16, 9, 15), bool] */;
  %793 = shape_of(%791, dtype="int32") /* ty=Tensor[(3), int32] */;
  %794 = cast(%791, dtype="bool") /* ty=Tensor[(16, 9, 15), bool] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %796 = bitwise_xor(%787, %788) /* ty=Tensor[(2, 10, 13), uint8] */;
  %797 = %789.0;
  %798 = equal(%794, %795) /* ty=Tensor[(16, 9, 15), bool] */;
  (%796, %797, %798)
}

def @func_13410() -> (Tensor[(2, 10, 13), float32],) {
  %799 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %800 = %799.0;
  (%800,)
}

def @func_11342() -> (Tensor[(2, 10, 13), float32],) {
  %801 = @func_10954() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %802 = %801.1;
  (%802,)
}

def @func_14580() -> (Tensor[(2, 10, 13), float32],) {
  %803 = @func_6390() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) */;
  %804 = %803.4;
  (%804,)
}

def @func_5824() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %805 = @func_5327() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
  %806 = @func_4222() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %807 = %805.1;
  %808 = %806.0;
  (%807, %808)
}

def @func_3668(%var_3663: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(528), float64]) {
  %809 = @func_1274() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %810 = cast(%var_3663, dtype="float64") /* ty=Tensor[(528), float64] */;
  %811 = reshape(%810, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
  %812 = %809.0;
  %813 = @func_1634(%811) /* ty=Tensor[(4, 11, 12), float32] */;
  (%812, %813, %var_3663)
}

def @func_2171() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %814 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %815 = %814.0;
  %816 = cast(%815, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %817 = sigmoid(%816) /* ty=Tensor[(2, 10, 13), float32] */;
  %818 = cast(%817, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %819 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %820 = atan(%818) /* ty=Tensor[(2, 10, 13), float32] */;
  %821 = %819.0;
  %822 = @func_1236() /* ty=Tensor[(2, 10, 13), float32] */;
  (%820, %821, %822)
}

def @func_7377(%var_7362: Tensor[(1, 5, 1), float64], %var_7363: Tensor[(1, 5, 6), float64]) -> Tensor[(1, 5, 6), float64] {
  %823 = cast(%var_7362, dtype="float64") /* ty=Tensor[(1, 5, 1), float64] */;
  %824 = cast(%var_7363, dtype="float64") /* ty=Tensor[(1, 5, 6), float64] */;
  power(%823, %824) /* ty=Tensor[(1, 5, 6), float64] */
}

def @func_10737() -> Tensor[(2, 10, 13), float32] {
  %825 = @func_8273() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %825.0
}

def @func_5123() -> (Tensor[(2, 10, 13), bool],) {
  %826 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %827 = %826.0;
  %828 = cast(%827, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %829 = reshape(%828, newshape=[2, 10, 13]) /* ty=Tensor[(2, 10, 13), float32] */;
  %830 = @func_2861(%829) /* ty=Tensor[(2, 10, 13), int16] */;
  %831 = cast(%830, dtype="bool") /* ty=Tensor[(2, 10, 13), bool] */;
  %832 = shape_of(%827, dtype="int32") /* ty=Tensor[(3), int32] */;
  %833 = cast(%827, dtype="bool") /* ty=Tensor[(2, 10, 13), bool] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %835 = logical_and(%833, %834) /* ty=Tensor[(2, 10, 13), bool] */;
  (%835,)
}

def @func_2007() -> (Tensor[(2, 10, 13), float64],) {
  %836 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
  %837 = %836.1;
  (%837,)
}

def @func_3183(%var_3147: Tensor[(260), float32]) -> (Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), int16], Tensor[(260), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %838 = @func_1470() /* ty=(Tensor[(16, 9, 15), float64],) */;
  %839 = cast(%var_3147, dtype="float32") /* ty=Tensor[(260), float32] */;
  %840 = reshape(%839, newshape=[2, 10, 13]) /* ty=Tensor[(2, 10, 13), float32] */;
  %841 = cast(%var_3147, dtype="float32") /* ty=Tensor[(260), float32] */;
  %842 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %843 = @func_2630() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %844 = %838.0;
  %845 = @func_3059(%840) /* ty=Tensor[(2, 10, 13), int16] */;
  %846 = acosh(%841) /* ty=Tensor[(260), float32] */;
  %847 = %842.0;
  %848 = @func_2746() /* ty=Tensor[(2, 10, 13), float32] */;
  %849 = %843.0;
  (%844, %845, %846, %847, %848, %849)
}

def @func_15442(%var_15429: Tensor[(15, 2, 10), float64]) -> (Tensor[(15, 2, 10), float64], Tensor[(2, 10, 13), float32]) {
  %850 = cast(%var_15429, dtype="float64") /* ty=Tensor[(15, 2, 10), float64] */;
  %851 = sinh(%850) /* ty=Tensor[(15, 2, 10), float64] */;
  %852 = @func_3469() /* ty=Tensor[(2, 10, 13), float32] */;
  (%851, %852)
}

def @func_12634(%var_12626: Tensor[(1, 5, 8), float32]) -> (Tensor[(1, 5, 8), float32], Tensor[(2, 10, 13), float64]) {
  %853 = cast(%var_12626, dtype="float32") /* ty=Tensor[(1, 5, 8), float32] */;
  %854 = rsqrt(%853) /* ty=Tensor[(1, 5, 8), float32] */;
  %855 = @func_5028() /* ty=Tensor[(2, 10, 13), float64] */;
  (%854, %855)
}

def @func_8925() -> (Tensor[(2, 10, 13), float64],) {
  %856 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
  %857 = %856.1;
  (%857,)
}

def @func_7895() -> Tensor[(2, 10, 13), float64] {
  %858 = @func_2675() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %858.0
}

def @func_540() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %859 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %860 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %861 = %859.1;
  %862 = %860.1;
  (%861, %862)
}

def @func_5012(%var_5005: float64, %var_5006: Tensor[(11, 8, 7), float64]) -> Tensor[(11, 8, 7), bool] {
  %863 = cast(%var_5005, dtype="bool") /* ty=bool */;
  %864 = cast(%var_5006, dtype="bool") /* ty=Tensor[(11, 8, 7), bool] */;
  not_equal(%863, %864) /* ty=Tensor[(11, 8, 7), bool] */
}

def @func_13629(%var_13568: Tensor[(7, 7, 8), bool], %var_13569: Tensor[(7, 7, 8), bool]) -> (Tensor[(7, 7, 8), bool], Tensor[(2, 10, 13), float32], Tensor[(7, 7, 8), float64], Tensor[(3, 15, 3), int8], Tensor[(135), int8], Tensor[(4, 11, 12), bool], Tensor[(528), uint64]) {
  %865 = cast(%var_13569, dtype="float32") /* ty=Tensor[(7, 7, 8), float32] */;
  %866 = erf(%865) /* ty=Tensor[(7, 7, 8), float32] */;
  %867 = cast(%var_13569, dtype="bool") /* ty=Tensor[(7, 7, 8), bool] */;
  %868 = shape_of(%var_13568, dtype="int32") /* ty=Tensor[(3), int32] */;
  %869 = cast(%var_13568, dtype="bool") /* ty=Tensor[(7, 7, 8), bool] */;
  %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %871 = logical_or(%869, %870) /* ty=Tensor[(7, 7, 8), bool] */;
  %872 = cast(%871, dtype="bool") /* ty=Tensor[(7, 7, 8), bool] */;
  %873 = shape_of(%866, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(%866, dtype="bool") /* ty=Tensor[(7, 7, 8), bool] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %876 = @func_2279() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) */;
  %877 = cast(%866, dtype="float64") /* ty=Tensor[(7, 7, 8), float64] */;
  %878 = cast(meta[relay.Constant][30] /* ty=Tensor[(135), int8] */, dtype="int8") /* ty=Tensor[(135), int8] */;
  %879 = reshape(%878, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), int8] */;
  %880 = @func_9362(%879) /* ty=(Tensor[(3, 15, 3), int8],) */;
  %881 = cast(meta[relay.Constant][31] /* ty=Tensor[(528), uint64] */, dtype="uint64") /* ty=Tensor[(528), uint64] */;
  %882 = reshape(%881, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), uint64] */;
  %883 = greater_equal(%874, %875) /* ty=Tensor[(7, 7, 8), bool] */;
  %884 = %876.1;
  %885 = atan(%877) /* ty=Tensor[(7, 7, 8), float64] */;
  %886 = %880.0;
  %887 = @func_4995(%882) /* ty=Tensor[(4, 11, 12), bool] */;
  (%883, %884, %885, %886, meta[relay.Constant][30] /* ty=Tensor[(135), int8] */, %887, meta[relay.Constant][31] /* ty=Tensor[(528), uint64] */)
}

def @func_11401() -> (Tensor[(2, 10, 13), float32],) {
  %888 = @func_5482() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %889 = %888.1;
  (%889,)
}

def @func_12138() -> (Tensor[(3, 14, 16), float32], Tensor[(2, 10, 13), float32]) {
  %890 = @func_11786() /* ty=(Tensor[(3, 14, 16), float64], Tensor[(3, 14, 16), bool], Tensor[(3, 14, 16), float32], Tensor[(2, 10, 13), float32]) */;
  %891 = %890.0;
  %892 = cast(%891, dtype="float32") /* ty=Tensor[(3, 14, 16), float32] */;
  %893 = asinh(%892) /* ty=Tensor[(3, 14, 16), float32] */;
  %894 = @func_2468() /* ty=Tensor[(2, 10, 13), float32] */;
  (%893, %894)
}

def @func_13047() -> Tensor[(2, 10, 13), float32] {
  %895 = @func_12731() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %895.0
}

def @func_2381() -> Tensor[(2, 10, 13), float32] {
  %896 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %896.1
}

def @func_16621() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %897 = @func_12731() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %898 = @func_16123() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %899 = %897.0;
  %900 = %898.1;
  (%899, %900)
}

def @func_4703() -> Tensor[(2, 10, 13), float32] {
  %901 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %901.0
}

def @func_2949() -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64]) {
  %902 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %903 = @func_2279() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) */;
  %904 = %902.0;
  %905 = %903.3;
  (%904, %905)
}

def @func_4903() -> (Tensor[(2, 10, 13), float64],) {
  %906 = @func_2522() /* ty=Tensor[(2, 10, 13), float64] */;
  (%906,)
}

def @func_6125() -> Tensor[(2, 10, 13), float32] {
  %907 = @func_1005() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %907.0
}

def @func_11243(%var_11235: float64, %var_11236: Tensor[(14, 44), float64]) -> (Tensor[(2, 10, 13), float64], Tensor[(11, 8, 7), bool], float64, Tensor[(14, 44), float64]) {
  %908 = @func_4903() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %909 = cast(%var_11235, dtype="float64") /* ty=float64 */;
  %910 = cast(%var_11236, dtype="float64") /* ty=Tensor[(14, 44), float64] */;
  %911 = reshape(%909, newshape=[]) /* ty=float64 */;
  %912 = reshape(%910, newshape=[11, 8, 7]) /* ty=Tensor[(11, 8, 7), float64] */;
  %913 = %908.0;
  %914 = @func_5012(%911, %912) /* ty=Tensor[(11, 8, 7), bool] */;
  (%913, %914, %var_11235, %var_11236)
}

def @func_15049() -> (Tensor[(2, 10, 13), float32],) {
  %915 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %916 = %915.0;
  (%916,)
}

def @func_11141(%var_11119: float64, %var_11120: Tensor[(616), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(11, 8, 7), bool], float64, Tensor[(616), float64], Tensor[(528), float64], Tensor[(2366), bool]) {
  %917 = @func_1083() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %918 = cast(%var_11119, dtype="float64") /* ty=float64 */;
  %919 = cast(%var_11120, dtype="float64") /* ty=Tensor[(616), float64] */;
  %920 = reshape(%918, newshape=[]) /* ty=float64 */;
  %921 = reshape(%919, newshape=[11, 8, 7]) /* ty=Tensor[(11, 8, 7), float64] */;
  %922 = cast(meta[relay.Constant][32] /* ty=Tensor[(2366), bool] */, dtype="bool") /* ty=Tensor[(2366), bool] */;
  %923 = cast(meta[relay.Constant][32] /* ty=Tensor[(2366), bool] */, dtype="bool") /* ty=Tensor[(2366), bool] */;
  %924 = reshape(%922, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), bool] */;
  %925 = reshape(%923, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), bool] */;
  %926 = @func_5986(%924, %925) /* ty=(Tensor[(14, 13, 13), int16], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) */;
  %927 = %917.0;
  %928 = @func_5012(%920, %921) /* ty=Tensor[(11, 8, 7), bool] */;
  %929 = %926.1;
  (%927, %928, %var_11119, %var_11120, %929, meta[relay.Constant][32] /* ty=Tensor[(2366), bool] */)
}

def @func_6068() -> (Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), int8]) {
  %930 = @func_5123() /* ty=(Tensor[(2, 10, 13), bool],) */;
  %931 = @func_3561() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) */;
  %932 = %930.0;
  %933 = %931.1;
  (%932, %933)
}

def @func_6535(%var_6529: Tensor[(11, 9, 7), uint8], %var_6530: Tensor[(11, 9, 7), uint8]) -> Tensor[(11, 9, 7), uint8] {
  %934 = cast(%var_6530, dtype="uint8") /* ty=Tensor[(11, 9, 7), uint8] */;
  %935 = shape_of(%var_6529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %936 = cast(%var_6529, dtype="uint8") /* ty=Tensor[(11, 9, 7), uint8] */;
  %937 = dyn.reshape(%934, %935, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  minimum(%936, %937) /* ty=Tensor[(11, 9, 7), uint8] */
}

def @func_7327(%var_7322: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(528), float64]) {
  %938 = @func_5327() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
  %939 = cast(%var_7322, dtype="float64") /* ty=Tensor[(528), float64] */;
  %940 = reshape(%939, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
  %941 = %938.0;
  %942 = @func_1634(%940) /* ty=Tensor[(4, 11, 12), float32] */;
  (%941, %942, %var_7322)
}

def @func_11097(%var_11074: Tensor[(4), uint64], %var_11090: Tensor[(2, 264), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(4), uint64], Tensor[(4), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 264), float64]) {
  %943 = @func_10522() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %944 = cast(%var_11074, dtype="uint64") /* ty=Tensor[(4), uint64] */;
  %945 = reshape(%944, newshape=[4]) /* ty=Tensor[(4), uint64] */;
  %946 = @func_9049(%945) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(4), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 2, 12), bool]) */;
  %947 = @func_5482() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %948 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %949 = cast(%var_11090, dtype="float64") /* ty=Tensor[(2, 264), float64] */;
  %950 = reshape(%949, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %951 = @func_9703(%950) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), bool], Tensor[(2, 10, 13), float32]) */;
  %952 = %943.0;
  %953 = %946.2;
  %954 = %947.0;
  %955 = %948.1;
  %956 = %951.2;
  (%952, %953, %var_11074, %954, %955, %956, %var_11090)
}

def @func_4451() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %957 = @func_540() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %958 = @func_3019() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
  %959 = %957.1;
  %960 = %958.1;
  (%959, %960)
}

def @func_9631() -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  %961 = @func_5502() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %962 = @func_7919() /* ty=(Tensor[(4, 11, 12), float64],) */;
  %963 = %961.0;
  %964 = %962.0;
  (%963, %964)
}

def @func_9968() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %965 = @func_8092() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %966 = @func_2746() /* ty=Tensor[(2, 10, 13), float32] */;
  %967 = %965.0;
  (%966, %967)
}

def @func_14479(%var_14441: Tensor[(78), int16]) -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(78), int16], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %968 = @func_4903() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %969 = cast(%var_14441, dtype="int16") /* ty=Tensor[(78), int16] */;
  %970 = cast(%var_14441, dtype="int16") /* ty=Tensor[(78), int16] */;
  %971 = reshape(%969, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), int16] */;
  %972 = reshape(%970, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), int16] */;
  %973 = @func_11666(%971, %972) /* ty=(Tensor[(2, 13, 3), int16], Tensor[(2, 10, 13), float32]) */;
  %974 = @func_10360() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %975 = @func_6223() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %976 = @func_14105() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %977 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
  %978 = %968.0;
  %979 = %973.1;
  %980 = %974.1;
  %981 = %975.0;
  %982 = %976.3;
  %983 = %977.1;
  (%978, %979, %var_14441, %980, %981, %982, %983)
}

def @func_16001() -> Tensor[(15, 10, 10), float32] {
  %984 = cast(meta[relay.Constant][33] /* ty=Tensor[(15, 10, 10), float32] */, dtype="float32") /* ty=Tensor[(15, 10, 10), float32] */;
  exp(%984) /* ty=Tensor[(15, 10, 10), float32] */
}

def @func_5603(%var_5601: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) {
  %985 = cast(%var_5601, dtype="float64") /* ty=Tensor[(528), float64] */;
  %986 = reshape(%985, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %987 = @func_3384(%986) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), int32], Tensor[(2, 10, 13), float32]) */;
  %988 = @func_2381() /* ty=Tensor[(2, 10, 13), float32] */;
  %989 = %987.5;
  (%988, %989, %var_5601)
}

def @func_7919() -> (Tensor[(4, 11, 12), float64],) {
  %990 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %991 = %990.0;
  (%991,)
}

def @func_8233(%var_8221: Tensor[(2366), bool]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2366), bool]) {
  %992 = cast(%var_8221, dtype="bool") /* ty=Tensor[(2366), bool] */;
  %993 = cast(%var_8221, dtype="bool") /* ty=Tensor[(2366), bool] */;
  %994 = reshape(%992, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), bool] */;
  %995 = reshape(%993, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), bool] */;
  %996 = @func_5986(%994, %995) /* ty=(Tensor[(14, 13, 13), int16], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) */;
  %997 = @func_4703() /* ty=Tensor[(2, 10, 13), float32] */;
  %998 = @func_2381() /* ty=Tensor[(2, 10, 13), float32] */;
  %999 = %996.2;
  (%997, %998, %999, %var_8221)
}

def @func_14248() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %1000 = @func_12361() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %1001 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1002 = %1000.0;
  %1003 = %1001.0;
  (%1002, %1003)
}

def @func_6106() -> Tensor[(2, 10, 13), float64] {
  %1004 = @func_2926() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %1004.0
}

def @func_15990(%var_15981: Tensor[(9, 2, 3), float64]) -> Tensor[(9, 2, 3), bool] {
  %1005 = cast(-7.15085f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %1006 = cast(%var_15981, dtype="bool") /* ty=Tensor[(9, 2, 3), bool] */;
  not_equal(%1005, %1006) /* ty=Tensor[(9, 2, 3), bool] */
}

def @func_9775() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1007 = @func_8842() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1008 = @func_5482() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1009 = %1007.0;
  %1010 = %1008.1;
  (%1009, %1010)
}

def @func_13848() -> (Tensor[(2, 10, 13), float64], Tensor[(528), uint64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32]) {
  %1011 = @func_7836() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %1012 = @func_2662() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1013 = cast(meta[relay.Constant][34] /* ty=Tensor[(528), uint64] */, dtype="uint64") /* ty=Tensor[(528), uint64] */;
  %1014 = reshape(%1013, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), uint64] */;
  %1015 = @func_4995(%1014) /* ty=Tensor[(4, 11, 12), bool] */;
  %1016 = cast(%1015, dtype="float32") /* ty=Tensor[(4, 11, 12), float32] */;
  %1017 = %1011.0;
  %1018 = %1012.0;
  %1019 = acos(%1016) /* ty=Tensor[(4, 11, 12), float32] */;
  (%1017, meta[relay.Constant][34] /* ty=Tensor[(528), uint64] */, %1018, %1019)
}

def @func_7232() -> Tensor[(2, 10, 13), float32] {
  @func_2446() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_1470() -> (Tensor[(16, 9, 15), float64],) {
  %1020 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 9, 15), float64] */, dtype="float64") /* ty=Tensor[(16, 9, 15), float64] */;
  %1021 = atanh(%1020) /* ty=Tensor[(16, 9, 15), float64] */;
  (%1021,)
}

def @func_2446() -> Tensor[(2, 10, 13), float32] {
  %1022 = @func_1328() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %1022.1
}

def @func_14987() -> Tensor[(2, 10, 13), float32] {
  %1023 = @func_9301() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1023.0
}

def @func_2746() -> Tensor[(2, 10, 13), float32] {
  @func_616() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_9472() -> Tensor[(2, 10, 13), float32] {
  @func_3437() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_8787(%var_8769: Tensor[(9, 8, 14), int16]) -> (Tensor[(9, 8, 14), int16],) {
  %1024 = cast(meta[relay.Constant][36] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1025 = cast(%var_8769, dtype="int16") /* ty=Tensor[(9, 8, 14), int16] */;
  %1026 = left_shift(%1024, %1025) /* ty=Tensor[(9, 8, 14), int16] */;
  (%1026,)
}

def @func_10446() -> (Tensor[(2, 16, 10), float32], Tensor[(2, 10, 13), float32]) {
  %1027 = cast(meta[relay.Constant][38] /* ty=Tensor[(2, 16, 10), float32] */, dtype="float32") /* ty=Tensor[(2, 16, 10), float32] */;
  %1028 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(2, 16, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1029 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 16, 10), float32] */, dtype="float32") /* ty=Tensor[(2, 16, 10), float32] */;
  %1030 = dyn.reshape(%1027, %1028, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1031 = @func_1005() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %1032 = floor_divide(%1029, %1030) /* ty=Tensor[(2, 16, 10), float32] */;
  %1033 = %1031.0;
  (%1032, %1033)
}

def @func_1005() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %1034 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1035 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
  %1036 = cast(%1035, dtype="float64") /* ty=Tensor[(2, 10, 13), float64] */;
  %1037 = %1034.0;
  %1038 = rsqrt(%1036) /* ty=Tensor[(2, 10, 13), float64] */;
  (%1037, %1038)
}

def @func_4512() -> (Tensor[(2, 10, 13), float32],) {
  %1039 = @func_3720() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1040 = %1039.0;
  %1041 = cast(%1040, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %1042 = asin(%1041) /* ty=Tensor[(2, 10, 13), float32] */;
  (%1042,)
}

def @func_6165() -> (Tensor[(2, 10, 13), float32],) {
  %1043 = @func_5381() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 11, 9), bool], Tensor[(2, 10, 13), float32]) */;
  %1044 = %1043.0;
  (%1044,)
}

def @func_7359() -> (Tensor[(2, 10, 13), float32],) {
  %1045 = @func_6165() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1046 = %1045.0;
  (%1046,)
}

def @func_6943(%var_6935: Tensor[(5, 10, 1), float32], %var_6936: Tensor[(5, 10, 9), float32]) -> (Tensor[(5, 10, 9), bool],) {
  %1047 = cast(%var_6935, dtype="bool") /* ty=Tensor[(5, 10, 1), bool] */;
  %1048 = cast(%var_6936, dtype="bool") /* ty=Tensor[(5, 10, 9), bool] */;
  %1049 = greater(%1047, %1048) /* ty=Tensor[(5, 10, 9), bool] */;
  (%1049,)
}

def @func_15183() -> (Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64]) {
  %1050 = @func_2675() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %1051 = @func_9927() /* ty=Tensor[(4, 11, 12), float64] */;
  %1052 = %1050.0;
  (%1051, %1052)
}

def @func_8397(%var_8365: Tensor[(16, 9, 15), float64], %var_8377: Tensor[(1568), float64], %var_8384: Tensor[(528), float64]) -> (Tensor[(16, 9, 15), int16], Tensor[(14, 7, 16), float64], Tensor[(1568), float64], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(13, 15, 1), float64], Tensor[(195), float64]) {
  %1053 = @func_1470() /* ty=(Tensor[(16, 9, 15), float64],) */;
  %1054 = %1053.0;
  %1055 = cast(%var_8365, dtype="int16") /* ty=Tensor[(16, 9, 15), int16] */;
  %1056 = shape_of(%1054, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1057 = cast(%1054, dtype="int16") /* ty=Tensor[(16, 9, 15), int16] */;
  %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1059 = cast(%var_8377, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %1060 = reshape(%1059, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float64] */;
  %1061 = @func_2297(%1060) /* ty=(Tensor[(14, 7, 16), float64], Tensor[(2, 10, 13), float32]) */;
  %1062 = cast(%var_8384, dtype="float64") /* ty=Tensor[(528), float64] */;
  %1063 = reshape(%1062, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %1064 = @func_3668(%1063) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(528), float64]) */;
  %1065 = cast(meta[relay.Constant][39] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %1066 = reshape(%1065, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), float64] */;
  %1067 = right_shift(%1057, %1058) /* ty=Tensor[(16, 9, 15), int16] */;
  %1068 = %1061.0;
  %1069 = %1064.2;
  %1070 = @func_3901() /* ty=Tensor[(2, 10, 13), float32] */;
  %1071 = @func_7846(%1066) /* ty=Tensor[(13, 15, 1), float64] */;
  (%1067, %1068, %var_8377, %1069, %var_8384, %1070, %1071, meta[relay.Constant][39] /* ty=Tensor[(195), float64] */)
}

def @func_13119() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) {
  %1072 = @func_8273() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1073 = cast(meta[relay.Constant][40] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %1074 = reshape(%1073, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %1075 = @func_12045(%1074) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(1568), float64], Tensor[(528), float64], Tensor[(2160), float32]) */;
  %1076 = %1072.0;
  %1077 = %1075.0;
  (%1076, %1077, meta[relay.Constant][40] /* ty=Tensor[(1568), float64] */)
}

def @func_5028() -> Tensor[(2, 10, 13), float64] {
  %1078 = @func_2926() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %1078.0
}

def @func_9233() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1079 = @func_8631() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %1080 = @func_5502() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1081 = %1079.2;
  %1082 = %1080.0;
  (%1081, %1082)
}

def @func_14500(%var_14495: bool, %var_14496: Tensor[(4, 14, 1), bool]) -> Tensor[(4, 14, 1), bool] {
  %1083 = cast(%var_14495, dtype="bool") /* ty=bool */;
  %1084 = cast(%var_14496, dtype="bool") /* ty=Tensor[(4, 14, 1), bool] */;
  logical_or(%1083, %1084) /* ty=Tensor[(4, 14, 1), bool] */
}

def @func_2675() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %1085 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
  %1086 = @func_1911() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1087 = %1085.1;
  %1088 = %1086.1;
  (%1087, %1088)
}

def @func_6603() -> (Tensor[(2, 10, 13), float32],) {
  %1089 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1090 = %1089.0;
  (%1090,)
}

def @func_15683(%var_15681: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(2160), float64], Tensor[(1568), float64], Tensor[(528), float64]) {
  %1091 = @func_9651() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1092 = cast(meta[relay.Constant][41] /* ty=Tensor[(2160), float64] */, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %1093 = cast(meta[relay.Constant][42] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %1094 = cast(%var_15681, dtype="float64") /* ty=Tensor[(528), float64] */;
  %1095 = reshape(%1092, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
  %1096 = reshape(%1093, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %1097 = reshape(%1094, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %1098 = @func_8397(%1095, %1096, %1097) /* ty=(Tensor[(16, 9, 15), int16], Tensor[(14, 7, 16), float64], Tensor[(1568), float64], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(13, 15, 1), float64], Tensor[(195), float64]) */;
  %1099 = %1091.0;
  %1100 = %1098.2;
  (%1099, %1100, meta[relay.Constant][41] /* ty=Tensor[(2160), float64] */, meta[relay.Constant][42] /* ty=Tensor[(1568), float64] */, %var_15681)
}

def @func_15868(%var_15864: Tensor[(13, 16, 5), uint64]) -> (Tensor[(13, 16, 5), uint64],) {
  %1101 = cast(%var_15864, dtype="uint64") /* ty=Tensor[(13, 16, 5), uint64] */;
  %1102 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(13, 16, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1103 = cast(meta[relay.Constant][43] /* ty=Tensor[(13, 16, 5), uint64] */, dtype="uint64") /* ty=Tensor[(13, 16, 5), uint64] */;
  %1104 = dyn.reshape(%1101, %1102, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1105 = maximum(%1103, %1104) /* ty=Tensor[(13, 16, 5), uint64] */;
  (%1105,)
}

def @func_13994() -> Tensor[(2, 10, 13), float32] {
  %1106 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1106.0
}

def @func_6925(%var_6917: Tensor[(12, 616), float64]) -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], float64, Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), float64], Tensor[(?, 616), bool], Tensor[(12, 616), bool]) {
  %1107 = @func_2007() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %1108 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1109 = cast(meta[relay.Constant][44] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %1110 = reshape(%1109, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %1111 = @func_3668(%1110) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(528), float64]) */;
  %1112 = @func_5565() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) */;
  %1113 = @func_3295() /* ty=(Tensor[(4, 11, 12), float64],) */;
  %1114 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 616), float64] */, dtype="float32") /* ty=Tensor[(1, 616), float32] */;
  %1115 = rsqrt(%1114) /* ty=Tensor[(1, 616), float32] */;
  %1116 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 616), float64] */, dtype="bool") /* ty=Tensor[(1, 616), bool] */;
  %1117 = shape_of(%1115, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1118 = cast(%1115, dtype="bool") /* ty=Tensor[(1, 616), bool] */;
  %1119 = dyn.reshape(%1116, %1117, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1120 = cast(-1.9651f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1121 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 616), float64] */, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
  %1122 = reshape(%1120, newshape=[]) /* ty=float64 */;
  %1123 = reshape(%1121, newshape=[11, 8, 7]) /* ty=Tensor[(11, 8, 7), float64] */;
  %1124 = @func_5012(%1122, %1123) /* ty=Tensor[(11, 8, 7), bool] */;
  %1125 = cast(%1124, dtype="uint32") /* ty=Tensor[(11, 8, 7), uint32] */;
  %1126 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(1, 616), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1127 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 616), float64] */, dtype="uint32") /* ty=Tensor[(1, 616), uint32] */;
  %1128 = dyn.reshape(%1125, %1126, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1129 = logical_xor(%1127, %1128) /* ty=Tensor[(?, 616), uint32] */;
  %1130 = cast(%1129, dtype="float64") /* ty=Tensor[(?, 616), float64] */;
  %1131 = asinh(%1130) /* ty=Tensor[(?, 616), float64] */;
  %1132 = cast(%1131, dtype="bool") /* ty=Tensor[(?, 616), bool] */;
  %1133 = cast(%var_6917, dtype="bool") /* ty=Tensor[(12, 616), bool] */;
  %1134 = %1107.0;
  %1135 = %1108.0;
  %1136 = %1111.2;
  %1137 = %1112.0;
  %1138 = @func_6106() /* ty=Tensor[(2, 10, 13), float64] */;
  %1139 = %1113.0;
  %1140 = logical_or(%1118, %1119) /* ty=Tensor[(?, 616), bool] */;
  %1141 = logical_or(%1132, %1133) /* ty=Tensor[(12, 616), bool] */;
  (%1134, %1135, -1.9651f64 /* ty=float64 */, %1136, meta[relay.Constant][44] /* ty=Tensor[(528), float64] */, %1137, %1138, %1139, %1140, %1141)
}

def @func_7460() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1142 = @func_5502() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1143 = @func_3437() /* ty=Tensor[(2, 10, 13), float32] */;
  %1144 = %1142.0;
  (%1143, %1144)
}

def @func_12772(%var_12754: Tensor[(14, 5, 15), int32], %var_12755: Tensor[(14, 5, 15), int32]) -> (Tensor[(14, 5, 15), float32], Tensor[(2, 10, 13), float32]) {
  %1145 = cast(%var_12755, dtype="bool") /* ty=Tensor[(14, 5, 15), bool] */;
  %1146 = shape_of(%var_12754, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1147 = cast(%var_12754, dtype="bool") /* ty=Tensor[(14, 5, 15), bool] */;
  %1148 = dyn.reshape(%1145, %1146, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1149 = greater_equal(%1147, %1148) /* ty=Tensor[(14, 5, 15), bool] */;
  %1150 = cast(%1149, dtype="float32") /* ty=Tensor[(14, 5, 15), float32] */;
  %1151 = @func_1873() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1152 = tan(%1150) /* ty=Tensor[(14, 5, 15), float32] */;
  %1153 = %1151.1;
  (%1152, %1153)
}

def @func_9049(%var_9025: Tensor[(4), uint64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(4), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 2, 12), bool]) {
  %1154 = @func_5565() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) */;
  %1155 = @func_8464() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %1156 = cast(%var_9025, dtype="uint64") /* ty=Tensor[(4), uint64] */;
  %1157 = cast(meta[relay.Constant][46] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %1158 = reshape(%1156, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), uint64] */;
  %1159 = reshape(%1157, newshape=[2, 2, 12]) /* ty=Tensor[(2, 2, 12), uint64] */;
  %1160 = @func_881(%1158, %1159) /* ty=(Tensor[(2, 2, 12), uint64], Tensor[(2, 10, 13), float32]) */;
  %1161 = %1160.0;
  %1162 = cast(meta[relay.Constant][46] /* ty=Tensor[(48), uint64] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %1163 = shape_of(%1161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1164 = cast(%1161, dtype="bool") /* ty=Tensor[(2, 2, 12), bool] */;
  %1165 = dyn.reshape(%1162, %1163, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1166 = %1154.2;
  %1167 = %1155.0;
  %1168 = @func_2433() /* ty=Tensor[(2, 10, 13), float32] */;
  %1169 = equal(%1164, %1165) /* ty=Tensor[(2, 2, 12), bool] */;
  (%1166, %1167, %var_9025, %1168, %1169)
}

def @func_3469() -> Tensor[(2, 10, 13), float32] {
  @func_2746() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_8657() -> (Tensor[(2, 10, 13), float32],) {
  %1170 = @func_5824() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %1171 = %1170.0;
  (%1171,)
}

def @func_9703(%var_9675: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), bool], Tensor[(2, 10, 13), float32]) {
  %1172 = @func_7460() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1173 = @func_7959() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(1, 528), float64]) */;
  %1174 = cast(%var_9675, dtype="float64") /* ty=Tensor[(528), float64] */;
  %1175 = reshape(%1174, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %1176 = @func_5603(%1175) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
  %1177 = @func_2675() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %1178 = cast(%var_9675, dtype="uint64") /* ty=Tensor[(528), uint64] */;
  %1179 = reshape(%1178, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), uint64] */;
  %1180 = @func_6675() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1181 = @func_4802() /* ty=Tensor[(2, 10, 13), float32] */;
  %1182 = %1172.0;
  %1183 = %1173.0;
  %1184 = %1176.1;
  %1185 = %1177.0;
  %1186 = @func_4995(%1179) /* ty=Tensor[(4, 11, 12), bool] */;
  %1187 = %1180.0;
  (%1181, %1182, %1183, %1184, %var_9675, %1185, %1186, %1187)
}

def @func_641() -> (Tensor[(2, 10, 13), float32],) {
  %1188 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
  (%1188,)
}

def @func_3059(%var_3041: Tensor[(2, 10, 13), float32]) -> Tensor[(2, 10, 13), int16] {
  %1189 = @func_2171() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1190 = %1189.1;
  %1191 = cast(%var_3041, dtype="int16") /* ty=Tensor[(2, 10, 13), int16] */;
  %1192 = shape_of(%1190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1193 = cast(%1190, dtype="int16") /* ty=Tensor[(2, 10, 13), int16] */;
  %1194 = dyn.reshape(%1191, %1192, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_or(%1193, %1194) /* ty=Tensor[(2, 10, 13), int16] */
}

def @func_8273() -> (Tensor[(2, 10, 13), float32],) {
  %1195 = @func_5327() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
  %1196 = %1195.2;
  (%1196,)
}

def @func_9603() -> (Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), float32]) {
  %1197 = @func_5123() /* ty=(Tensor[(2, 10, 13), bool],) */;
  %1198 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1199 = %1197.0;
  %1200 = %1198.0;
  (%1199, %1200)
}

def @func_8704() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1201 = @func_7881() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1202 = @func_2662() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1203 = %1201.0;
  %1204 = %1202.1;
  (%1203, %1204)
}

def @func_9362(%var_9357: Tensor[(3, 15, 3), int8]) -> (Tensor[(3, 15, 3), int8],) {
  %1205 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 15, 3), int8] */, dtype="int8") /* ty=Tensor[(3, 15, 3), int8] */;
  %1206 = shape_of(%var_9357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1207 = cast(%var_9357, dtype="int8") /* ty=Tensor[(3, 15, 3), int8] */;
  %1208 = dyn.reshape(%1205, %1206, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1209 = bitwise_xor(%1207, %1208) /* ty=Tensor[(3, 15, 3), int8] */;
  (%1209,)
}

def @func_1274() -> (Tensor[(2, 10, 13), float32],) {
  %1210 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
  (%1210,)
}

def @func_1165() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) {
  %1211 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1212 = cast(meta[relay.Constant][48] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %1213 = reshape(%1212, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
  %1214 = @func_787(%1213) /* ty=(Tensor[(4, 11, 12), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1215 = %1211.0;
  %1216 = %1214.2;
  (%1215, %1216, meta[relay.Constant][48] /* ty=Tensor[(528), float64] */)
}

def @func_2297(%var_2285: Tensor[(14, 7, 16), float64]) -> (Tensor[(14, 7, 16), float64], Tensor[(2, 10, 13), float32]) {
  %1217 = cast(%var_2285, dtype="float64") /* ty=Tensor[(14, 7, 16), float64] */;
  %1218 = @func_1741() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1219 = log(%1217) /* ty=Tensor[(14, 7, 16), float64] */;
  %1220 = %1218.0;
  (%1219, %1220)
}

def @func_8842() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1221 = @func_674() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %1222 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1223 = %1221.0;
  %1224 = %1222.1;
  (%1223, %1224)
}

def @func_15646() -> Tensor[(2, 10, 13), float64] {
  %1225 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
  %1225.1
}

def @func_14919(%var_14898: Tensor[(420), uint8], %var_14904: Tensor[(858), float32]) -> (Tensor[(2, 10, 13), float32], Tensor[(10, 14, 3), uint8], Tensor[(420), uint8], Tensor[(2, 10, 13), float64], Tensor[(78), int16], Tensor[(11, 6, 13), float32], Tensor[(858), float32]) {
  %1226 = @func_9514() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1227 = cast(%var_14898, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %1228 = cast(%var_14898, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %1229 = reshape(%1227, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), uint8] */;
  %1230 = reshape(%1228, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), uint8] */;
  %1231 = @func_11903(%1229, %1230) /* ty=(Tensor[(10, 14, 3), uint8],) */;
  %1232 = cast(meta[relay.Constant][49] /* ty=Tensor[(78), int16] */, dtype="int16") /* ty=Tensor[(78), int16] */;
  %1233 = reshape(%1232, newshape=[78]) /* ty=Tensor[(78), int16] */;
  %1234 = @func_14479(%1233) /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(78), int16], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %1235 = cast(%var_14904, dtype="float32") /* ty=Tensor[(858), float32] */;
  %1236 = reshape(%1235, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
  %1237 = @func_9165(%1236) /* ty=(Tensor[(11, 6, 13), float32],) */;
  %1238 = %1226.0;
  %1239 = %1231.0;
  %1240 = %1234.4;
  %1241 = %1237.0;
  (%1238, %1239, %var_14898, %1240, meta[relay.Constant][49] /* ty=Tensor[(78), int16] */, %1241, %var_14904)
}

def @func_4201() -> Tensor[(2, 10, 13), float32] {
  %1242 = @func_540() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1242.1
}

def @func_15078(%var_15065: Tensor[(12, 1, 11), bool], %var_15066: Tensor[(12, 15, 11), bool]) -> (Tensor[(12, 15, 11), bool], Tensor[(2, 10, 13), float32]) {
  %1243 = cast(%var_15065, dtype="bool") /* ty=Tensor[(12, 1, 11), bool] */;
  %1244 = cast(%var_15066, dtype="bool") /* ty=Tensor[(12, 15, 11), bool] */;
  %1245 = @func_14369() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1246 = logical_and(%1243, %1244) /* ty=Tensor[(12, 15, 11), bool] */;
  %1247 = %1245.1;
  (%1246, %1247)
}

def @func_3561() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) {
  %1248 = @func_1741() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1249 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1250 = %1249.0;
  %1251 = @func_2433() /* ty=Tensor[(2, 10, 13), float32] */;
  %1252 = cast(%1251, dtype="int8") /* ty=Tensor[(2, 10, 13), int8] */;
  %1253 = shape_of(%1250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1254 = cast(%1250, dtype="int8") /* ty=Tensor[(2, 10, 13), int8] */;
  %1255 = dyn.reshape(%1252, %1253, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1256 = %1248.0;
  %1257 = bitwise_and(%1254, %1255) /* ty=Tensor[(2, 10, 13), int8] */;
  (%1256, %1257)
}

def @func_15294() -> (Tensor[(2, 10, 13), float32],) {
  %1258 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1259 = %1258.0;
  (%1259,)
}

def @func_6630() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %1260 = @func_5801() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %1261 = @func_4286() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1262 = %1260.0;
  %1263 = %1261.0;
  (%1262, %1263)
}

def @func_16767(%var_16757: Tensor[(264, 2), float64]) -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(264, 2), bool], Tensor[(2, 10, 13), float32]) {
  %1264 = @func_12361() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %1265 = cast(meta[relay.Constant][50] /* ty=Tensor[(264, 2), float64] */, dtype="float64") /* ty=Tensor[(264, 2), float64] */;
  %1266 = reshape(%1265, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %1267 = @func_3384(%1266) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), int32], Tensor[(2, 10, 13), float32]) */;
  %1268 = cast(%var_16757, dtype="bool") /* ty=Tensor[(264, 2), bool] */;
  %1269 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(264, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1270 = cast(meta[relay.Constant][50] /* ty=Tensor[(264, 2), float64] */, dtype="bool") /* ty=Tensor[(264, 2), bool] */;
  %1271 = dyn.reshape(%1268, %1269, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1272 = cast(meta[relay.Constant][50] /* ty=Tensor[(264, 2), float64] */, dtype="float64") /* ty=Tensor[(264, 2), float64] */;
  %1273 = reshape(%1272, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
  %1274 = @func_787(%1273) /* ty=(Tensor[(4, 11, 12), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1275 = %1264.0;
  %1276 = %1267.2;
  %1277 = logical_or(%1270, %1271) /* ty=Tensor[(264, 2), bool] */;
  %1278 = %1274.4;
  (%1275, %1276, %1277, %1278)
}

def @func_14310() -> (Tensor[(2, 10, 13), float32],) {
  %1279 = @func_5146() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1280 = %1279.0;
  (%1280,)
}

def @func_13367(%var_13313: float64, %var_13314: Tensor[(14, 1), float64]) -> (Tensor[(14, 1), float64], Tensor[(2, 10, 13), float32]) {
  %1281 = cast(%var_13313, dtype="float64") /* ty=float64 */;
  %1282 = cast(%var_13314, dtype="float64") /* ty=Tensor[(14, 1), float64] */;
  %1283 = @func_2733() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1284 = power(%1281, %1282) /* ty=Tensor[(14, 1), float64] */;
  %1285 = %1283.2;
  (%1284, %1285)
}

def @func_10491() -> Tensor[(2, 10, 13), bool] {
  %1286 = @func_6068() /* ty=(Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), int8]) */;
  %1286.0
}

def @func_4173() -> Tensor[(2, 11, 9), bool] {
  %1287 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 11, 9), uint64] */, dtype="bool") /* ty=Tensor[(2, 11, 9), bool] */;
  %1288 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(2, 11, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1289 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 11, 9), uint64] */, dtype="bool") /* ty=Tensor[(2, 11, 9), bool] */;
  %1290 = dyn.reshape(%1287, %1288, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%1289, %1290) /* ty=Tensor[(2, 11, 9), bool] */
}

def @func_4677(%var_4670: Tensor[(7, 1, 8), float32]) -> Tensor[(7, 1, 8), float32] {
  %1291 = cast(%var_4670, dtype="float32") /* ty=Tensor[(7, 1, 8), float32] */;
  cosh(%1291) /* ty=Tensor[(7, 1, 8), float32] */
}

def @func_11666(%var_11648: Tensor[(2, 13, 3), int16], %var_11649: Tensor[(2, 13, 3), int16]) -> (Tensor[(2, 13, 3), int16], Tensor[(2, 10, 13), float32]) {
  %1292 = cast(%var_11649, dtype="int16") /* ty=Tensor[(2, 13, 3), int16] */;
  %1293 = shape_of(%var_11648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1294 = cast(%var_11648, dtype="int16") /* ty=Tensor[(2, 13, 3), int16] */;
  %1295 = dyn.reshape(%1292, %1293, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1296 = @func_11429() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1297 = add(%1294, %1295) /* ty=Tensor[(2, 13, 3), int16] */;
  %1298 = %1296.0;
  (%1297, %1298)
}

def @func_4035() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %1299 = @func_2007() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %1300 = @func_1436() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %1301 = @func_2926() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %1302 = %1299.0;
  %1303 = %1300.1;
  %1304 = %1301.1;
  (%1302, %1303, %1304)
}

def @func_8168() -> Tensor[(2, 10, 13), float32] {
  %1305 = @func_8061() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) */;
  %1305.0
}

def @func_3628() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1306 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1307 = %1306.1;
  %1308 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
  (%1307, %1308)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11788() -> (Tensor[(3, 14, 16), float64], Tensor[(3, 14, 16), bool], Tensor[(3, 14, 16), float32], Tensor[(2, 10, 13), float32]) {
  @func_11786() /* ty=(Tensor[(3, 14, 16), float64], Tensor[(3, 14, 16), bool], Tensor[(3, 14, 16), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_12139() -> (Tensor[(3, 14, 16), float32], Tensor[(2, 10, 13), float32]) {
  %5 = fn () -> (Tensor[(3, 14, 16), float32], Tensor[(2, 10, 13), float32]) {
    %0 = @func_11786() /* ty=(Tensor[(3, 14, 16), float64], Tensor[(3, 14, 16), bool], Tensor[(3, 14, 16), float32], Tensor[(2, 10, 13), float32]) */;
    %1 = %0.0;
    %2 = cast(%1, dtype="float32") /* ty=Tensor[(3, 14, 16), float32] */;
    %3 = asinh(%2) /* ty=Tensor[(3, 14, 16), float32] */;
    %4 = @func_2468() /* ty=Tensor[(2, 10, 13), float32] */;
    (%3, %4)
  };
  %5() /* ty=(Tensor[(3, 14, 16), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_14635() -> (Tensor[(2, 10, 13), float32],) {
  @func_14633() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_6165() -> (Tensor[(2, 10, 13), float32],) {
  %6 = @func_5381() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 11, 9), bool], Tensor[(2, 10, 13), float32]) */;
  %7 = %6.0;
  (%7,)
}

def @func_4720(%var_4706: Tensor[(5, 11, 1), float32]) -> (Tensor[(5, 11, 1), float32], Tensor[(2, 10, 13), float32]) {
  %8 = cast(%var_4706, dtype="float32") /* ty=Tensor[(5, 11, 1), float32] */;
  %9 = @func_1274() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %10 = asin(%8) /* ty=Tensor[(5, 11, 1), float32] */;
  %11 = %9.0;
  (%10, %11)
}

def @func_15442(%var_15429: Tensor[(15, 2, 10), float64]) -> (Tensor[(15, 2, 10), float64], Tensor[(2, 10, 13), float32]) {
  %12 = cast(%var_15429, dtype="float64") /* ty=Tensor[(15, 2, 10), float64] */;
  %13 = sinh(%12) /* ty=Tensor[(15, 2, 10), float64] */;
  %14 = @func_3469() /* ty=Tensor[(2, 10, 13), float32] */;
  (%13, %14)
}

def @func_2927() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %18 = fn () -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
    %15 = @func_1328() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
    %16 = @func_2522() /* ty=Tensor[(2, 10, 13), float64] */;
    %17 = %15.1;
    (%16, %17)
  };
  %18() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_16767(%var_16757: Tensor[(264, 2), float64]) -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(264, 2), bool], Tensor[(2, 10, 13), float32]) {
  %19 = @func_12361() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %20 = cast(meta[relay.Constant][0] /* ty=Tensor[(264, 2), float64] */, dtype="float64") /* ty=Tensor[(264, 2), float64] */;
  %21 = reshape(%20, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %22 = @func_3384(%21) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), int32], Tensor[(2, 10, 13), float32]) */;
  %23 = cast(%var_16757, dtype="bool") /* ty=Tensor[(264, 2), bool] */;
  %24 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(264, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(264, 2), float64] */, dtype="bool") /* ty=Tensor[(264, 2), bool] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %27 = cast(meta[relay.Constant][0] /* ty=Tensor[(264, 2), float64] */, dtype="float64") /* ty=Tensor[(264, 2), float64] */;
  %28 = reshape(%27, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
  %29 = @func_787(%28) /* ty=(Tensor[(4, 11, 12), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %30 = %19.0;
  %31 = %22.2;
  %32 = logical_or(%25, %26) /* ty=Tensor[(264, 2), bool] */;
  %33 = %29.4;
  (%30, %31, %32, %33)
}

def @func_15915() -> Tensor[(2, 10, 13), float32] {
  %34 = @func_11342() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %34.0
}

def @func_15123() -> (Tensor[(2, 10, 13), float64],) {
  @func_15121() /* ty=(Tensor[(2, 10, 13), float64],) */
}

def @func_13850() -> (Tensor[(2, 10, 13), float64], Tensor[(528), uint64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32]) {
  @func_13848() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(528), uint64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32]) */
}

def @func_14734() -> Tensor[(2366), bool] {
  %36 = fn () -> Tensor[(2366), bool] {
    %35 = @func_8757() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2366), bool], Tensor[(2366), bool], Tensor[(2, 10, 13), float32]) */;
    %35.1
  };
  %36() /* ty=Tensor[(2366), bool] */
}

def @func_9322() -> (Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64]) {
  %37 = @func_7634() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) */;
  %38 = %37.0;
  %39 = cast(%38, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(2160), float64] */, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %41 = reshape(%39, newshape=[2, 10, 13]) /* ty=Tensor[(2, 10, 13), float32] */;
  %42 = reshape(%40, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
  %43 = @func_3277(%41, %42) /* ty=(Tensor[(2, 10, 13), uint8], Tensor[(16, 9, 15), float64], Tensor[(16, 9, 15), bool]) */;
  %44 = %43.1;
  (%38, %44, meta[relay.Constant][1] /* ty=Tensor[(2160), float64] */)
}

def @func_14229() -> Tensor[(2, 10, 13), float32] {
  %45 = @func_7213() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %45.0
}

def @func_6943(%var_6935: Tensor[(5, 10, 1), float32], %var_6936: Tensor[(5, 10, 9), float32]) -> (Tensor[(5, 10, 9), bool],) {
  %46 = cast(%var_6935, dtype="bool") /* ty=Tensor[(5, 10, 1), bool] */;
  %47 = cast(%var_6936, dtype="bool") /* ty=Tensor[(5, 10, 9), bool] */;
  %48 = greater(%46, %47) /* ty=Tensor[(5, 10, 9), bool] */;
  (%48,)
}

def @func_8062() -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  %53 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
    %49 = @func_2171() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %50 = @func_2829() /* ty=(Tensor[(4, 11, 12), float64],) */;
    %51 = %49.2;
    %52 = %50.0;
    (%51, %52)
  };
  %53() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) */
}

def @func_15214(%var_15213: Tensor[(6, 12, 9), float64]) -> (Tensor[(6, 12, 9), float64],) {
  %59 = fn (%var_15194: Tensor[(6, 12, 9), float64]) -> (Tensor[(6, 12, 9), float64],) {
    %54 = cast(%var_15194, dtype="float64") /* ty=Tensor[(6, 12, 9), float64] */;
    %55 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(6, 12, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %56 = cast(meta[relay.Constant][2] /* ty=Tensor[(6, 12, 9), float64] */, dtype="float64") /* ty=Tensor[(6, 12, 9), float64] */;
    %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %58 = power(%56, %57) /* ty=Tensor[(6, 12, 9), float64] */;
    (%58,)
  };
  %59(%var_15213) /* ty=(Tensor[(6, 12, 9), float64],) */
}

def @func_5030() -> Tensor[(2, 10, 13), float64] {
  @func_5028() /* ty=Tensor[(2, 10, 13), float64] */
}

def @func_16770(%var_16768: Tensor[(264, 2), float64]) -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(264, 2), bool], Tensor[(2, 10, 13), float32]) {
  @func_16767(%var_16768) /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(264, 2), bool], Tensor[(2, 10, 13), float32]) */
}

def @func_13995() -> Tensor[(2, 10, 13), float32] {
  %61 = fn () -> Tensor[(2, 10, 13), float32] {
    %60 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %60.0
  };
  %61() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_11682() -> (Tensor[(2, 10, 13), float32],) {
  @func_11680() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_9146() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 11, 9), bool], Tensor[(2, 10, 13), float64]) {
  %67 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 11, 9), bool], Tensor[(2, 10, 13), float64]) {
    %62 = @func_7881() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %63 = @func_4035() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
    %64 = %62.0;
    %65 = @func_4173() /* ty=Tensor[(2, 11, 9), bool] */;
    %66 = %63.1;
    (%64, %65, %66)
  };
  %67() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 11, 9), bool], Tensor[(2, 10, 13), float64]) */
}

def @func_9775() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %68 = @func_8842() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %69 = @func_5482() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %70 = %68.0;
  %71 = %69.1;
  (%70, %71)
}

def @func_5708(%var_5696: Tensor[(7, 6, 6), int8]) -> (Tensor[(7, 6, 6), bool],) {
  %72 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 6, 6), int8] */, dtype="bool") /* ty=Tensor[(7, 6, 6), bool] */;
  %73 = shape_of(%var_5696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %74 = cast(%var_5696, dtype="bool") /* ty=Tensor[(7, 6, 6), bool] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %76 = equal(%74, %75) /* ty=Tensor[(7, 6, 6), bool] */;
  (%76,)
}

def @func_3670(%var_3669: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(528), float64]) {
  %82 = fn (%var_3663: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(528), float64]) {
    %77 = @func_1274() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %78 = cast(%var_3663, dtype="float64") /* ty=Tensor[(528), float64] */;
    %79 = reshape(%78, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
    %80 = %77.0;
    %81 = @func_1634(%79) /* ty=Tensor[(4, 11, 12), float32] */;
    (%80, %81, %var_3663)
  };
  %82(%var_3669) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(528), float64]) */
}

def @func_7380(%var_7378: Tensor[(1, 5, 1), float64], %var_7379: Tensor[(1, 5, 6), float64]) -> Tensor[(1, 5, 6), float64] {
  %85 = fn (%var_7362: Tensor[(1, 5, 1), float64], %var_7363: Tensor[(1, 5, 6), float64]) -> Tensor[(1, 5, 6), float64] {
    %83 = cast(%var_7362, dtype="float64") /* ty=Tensor[(1, 5, 1), float64] */;
    %84 = cast(%var_7363, dtype="float64") /* ty=Tensor[(1, 5, 6), float64] */;
    power(%83, %84) /* ty=Tensor[(1, 5, 6), float64] */
  };
  %85(%var_7378, %var_7379) /* ty=Tensor[(1, 5, 6), float64] */
}

def @func_1437() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %90 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
    %86 = @func_540() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %87 = @func_1005() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
    %88 = %86.1;
    %89 = %87.1;
    (%88, %89)
  };
  %90() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */
}

def @func_790(%var_788: Tensor[(4, 11, 12), float64]) -> (Tensor[(4, 11, 12), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_787(%var_788) /* ty=(Tensor[(4, 11, 12), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_4540() -> Tensor[(2, 10, 13), float32] {
  @func_4538() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_11680() -> (Tensor[(2, 10, 13), float32],) {
  %91 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %92 = %91.0;
  (%92,)
}

def @func_1361() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %93 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %94 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
  %95 = %93.0;
  (%94, %95)
}

def @func_3962(%var_3947: Tensor[(1, 528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(1, 528), float64]) {
  %96 = @func_2279() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) */;
  %97 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %98 = cast(%var_3947, dtype="float64") /* ty=Tensor[(1, 528), float64] */;
  %99 = reshape(%98, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
  %100 = %96.5;
  %101 = %97.0;
  %102 = @func_1634(%99) /* ty=Tensor[(4, 11, 12), float32] */;
  (%100, %101, %102, %var_3947)
}

def @func_13271() -> Tensor[(2, 10, 13), float64] {
  @func_13269() /* ty=Tensor[(2, 10, 13), float64] */
}

def @func_13728(%var_13726: Tensor[(16, 9, 15), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64]) {
  @func_13725(%var_13726) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64]) */
}

def @func_16002() -> Tensor[(15, 10, 10), float32] {
  %104 = fn () -> Tensor[(15, 10, 10), float32] {
    %103 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 10, 10), float32] */, dtype="float32") /* ty=Tensor[(15, 10, 10), float32] */;
    exp(%103) /* ty=Tensor[(15, 10, 10), float32] */
  };
  %104() /* ty=Tensor[(15, 10, 10), float32] */
}

def @func_7634() -> (Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) {
  %105 = cast(meta[relay.Constant][5] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %106 = reshape(%105, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %107 = @func_3668(%106) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(528), float64]) */;
  %108 = @func_2433() /* ty=Tensor[(2, 10, 13), float32] */;
  %109 = %107.2;
  %110 = @func_4582() /* ty=Tensor[(2, 10, 13), float32] */;
  (%108, %109, meta[relay.Constant][5] /* ty=Tensor[(528), float64] */, %110)
}

def @func_14482(%var_14480: Tensor[(78), int16]) -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(78), int16], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  @func_14479(%var_14480) /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(78), int16], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */
}

def @func_2434() -> Tensor[(2, 10, 13), float32] {
  %111 = fn () -> Tensor[(2, 10, 13), float32] {
    @func_1236() /* ty=Tensor[(2, 10, 13), float32] */
  };
  %111() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_4223() -> (Tensor[(2, 10, 13), float64],) {
  %114 = fn () -> (Tensor[(2, 10, 13), float64],) {
    %112 = @func_674() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
    %113 = %112.1;
    (%113,)
  };
  %114() /* ty=(Tensor[(2, 10, 13), float64],) */
}

def @func_4584() -> Tensor[(2, 10, 13), float32] {
  @func_4582() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_2300(%var_2298: Tensor[(14, 7, 16), float64]) -> (Tensor[(14, 7, 16), float64], Tensor[(2, 10, 13), float32]) {
  @func_2297(%var_2298) /* ty=(Tensor[(14, 7, 16), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_6155(%var_6153: Tensor[(7, 10, 13), float32], %var_6154: Tensor[(7, 10, 13), float32]) -> (Tensor[(7, 10, 13), float32],) {
  @func_6151(%var_6153, %var_6154) /* ty=(Tensor[(7, 10, 13), float32],) */
}

def @func_16290(%var_16289: Tensor[(135), int8]) -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(3, 15, 3), int8], Tensor[(135), int8]) {
  %123 = fn (%var_16281: Tensor[(135), int8]) -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(3, 15, 3), int8], Tensor[(135), int8]) {
    %115 = @func_13961() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %116 = cast(%var_16281, dtype="int8") /* ty=Tensor[(135), int8] */;
    %117 = reshape(%116, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), int8] */;
    %118 = @func_9362(%117) /* ty=(Tensor[(3, 15, 3), int8],) */;
    %119 = @func_6106() /* ty=Tensor[(2, 10, 13), float64] */;
    %120 = %115.0;
    %121 = @func_12247() /* ty=Tensor[(2, 10, 13), float32] */;
    %122 = %118.0;
    (%119, %120, %121, %122, %var_16281)
  };
  %123(%var_16289) /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(3, 15, 3), int8], Tensor[(135), int8]) */
}

def @func_14208() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(14, ?, 16), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %136 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(14, ?, 16), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
    %124 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 16), float32] */;
    %125 = tan(%124) /* ty=Tensor[(14, 1, 16), float32] */;
    %126 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 16), float32] */;
    %127 = shape_of(%125, dtype="int32") /* ty=Tensor[(3), int32] */;
    %128 = cast(%125, dtype="float32") /* ty=Tensor[(14, 1, 16), float32] */;
    %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %130 = @func_5241() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64]) */;
    %131 = @func_6125() /* ty=Tensor[(2, 10, 13), float32] */;
    %132 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
    %133 = divide(%128, %129) /* ty=Tensor[(14, ?, 16), float32] */;
    %134 = @func_13994() /* ty=Tensor[(2, 10, 13), float32] */;
    %135 = %130.1;
    (%131, %132, %133, %134, %135)
  };
  %136() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(14, ?, 16), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */
}

def @func_9234() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %141 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %137 = @func_8631() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
    %138 = @func_5502() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %139 = %137.2;
    %140 = %138.0;
    (%139, %140)
  };
  %141() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_7636() -> (Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) {
  @func_7634() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_7214() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %145 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %142 = @func_2733() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %143 = @func_2381() /* ty=Tensor[(2, 10, 13), float32] */;
    %144 = %142.0;
    (%143, %144)
  };
  %145() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_8979() -> (Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), float64]) {
  %146 = @func_8925() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %147 = @func_7734() /* ty=(Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) */;
  %148 = %146.0;
  %149 = %147.2;
  (%148, %149)
}

def @func_10103() -> (Tensor[(2, 10, 13), float32],) {
  %151 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %150 = @func_4773() /* ty=Tensor[(2, 10, 13), float32] */;
    (%150,)
  };
  %151() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_11430() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %156 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %152 = @func_2171() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %153 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %154 = %152.0;
    %155 = %153.0;
    (%154, %155)
  };
  %156() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_10954() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %157 = @func_540() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %158 = @func_2381() /* ty=Tensor[(2, 10, 13), float32] */;
  %159 = %157.1;
  (%158, %159)
}

def @func_542() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_540() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_12548(%var_12459: Tensor[(528), uint64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), int64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) {
  %160 = @func_9514() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %161 = @func_8464() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %162 = @func_9651() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %163 = cast(%var_12459, dtype="uint64") /* ty=Tensor[(528), uint64] */;
  %164 = reshape(%163, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), uint64] */;
  %165 = @func_4995(%164) /* ty=Tensor[(4, 11, 12), bool] */;
  %166 = cast(%var_12459, dtype="int64") /* ty=Tensor[(528), int64] */;
  %167 = shape_of(%165, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(%165, dtype="int64") /* ty=Tensor[(4, 11, 12), int64] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %170 = @func_10852() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %171 = @func_7919() /* ty=(Tensor[(4, 11, 12), float64],) */;
  %172 = @func_10852() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %173 = @func_10405() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %174 = %160.0;
  %175 = @func_4891() /* ty=Tensor[(2, 10, 13), float32] */;
  %176 = %161.0;
  %177 = %162.0;
  %178 = bitwise_or(%168, %169) /* ty=Tensor[(4, 11, 12), int64] */;
  %179 = %170.1;
  %180 = %171.0;
  %181 = @func_9081() /* ty=Tensor[(2, 10, 13), float32] */;
  %182 = %172.0;
  %183 = %173.0;
  (%174, %175, %176, %177, %178, %179, %180, %181, %182, %183)
}

def @func_4773() -> Tensor[(2, 10, 13), float32] {
  %184 = @func_1274() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %184.0
}

def @func_10762() -> Tensor[(2, 10, 13), int8] {
  %186 = fn () -> Tensor[(2, 10, 13), int8] {
    %185 = @func_6068() /* ty=(Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), int8]) */;
    %185.1
  };
  %186() /* ty=Tensor[(2, 10, 13), int8] */
}

def @func_5430() -> Tensor[(2, 10, 13), int8] {
  @func_5428() /* ty=Tensor[(2, 10, 13), int8] */
}

def @func_13121() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) {
  @func_13119() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) */
}

def @func_2522() -> Tensor[(2, 10, 13), float64] {
  %187 = @func_1328() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %187.0
}

def @func_5565() -> (Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) {
  %188 = @func_1470() /* ty=(Tensor[(16, 9, 15), float64],) */;
  %189 = cast(meta[relay.Constant][7] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %190 = reshape(%189, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float64] */;
  %191 = @func_2297(%190) /* ty=(Tensor[(14, 7, 16), float64], Tensor[(2, 10, 13), float32]) */;
  %192 = @func_2746() /* ty=Tensor[(2, 10, 13), float32] */;
  %193 = %188.0;
  %194 = %191.1;
  (%192, %193, %194, meta[relay.Constant][7] /* ty=Tensor[(1568), float64] */)
}

def @func_15284() -> (Tensor[(2, 10, 13), float32],) {
  @func_15282() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_11342() -> (Tensor[(2, 10, 13), float32],) {
  %195 = @func_10954() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %196 = %195.1;
  (%196,)
}

def @func_494() -> (Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) {
  %201 = fn () -> (Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) {
    %197 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 11, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 11, 12), float64] */;
    %198 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %199 = asin(%197) /* ty=Tensor[(4, 11, 12), float64] */;
    %200 = %198.0;
    (%199, %200)
  };
  %201() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_10854() -> (Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) {
  @func_10852() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_14310() -> (Tensor[(2, 10, 13), float32],) {
  %202 = @func_5146() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %203 = %202.0;
  (%203,)
}

def @func_3629() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %207 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %204 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %205 = %204.1;
    %206 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
    (%205, %206)
  };
  %207() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_2446() -> Tensor[(2, 10, 13), float32] {
  %208 = @func_1328() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %208.1
}

def @func_12232() -> (Tensor[(2366), bool], Tensor[(2, 10, 13), float32]) {
  %213 = fn () -> (Tensor[(2366), bool], Tensor[(2, 10, 13), float32]) {
    %209 = @func_8757() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2366), bool], Tensor[(2366), bool], Tensor[(2, 10, 13), float32]) */;
    %210 = @func_6188() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %211 = %209.1;
    %212 = %210.0;
    (%211, %212)
  };
  %213() /* ty=(Tensor[(2366), bool], Tensor[(2, 10, 13), float32]) */
}

def @func_7232() -> Tensor[(2, 10, 13), float32] {
  @func_2446() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_13236() -> (Tensor[(2, 10, 13), float32],) {
  %216 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %214 = @func_10102() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %215 = %214.0;
    (%215,)
  };
  %216() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_8402(%var_8399: Tensor[(16, 9, 15), float64], %var_8400: Tensor[(1568), float64], %var_8401: Tensor[(528), float64]) -> (Tensor[(16, 9, 15), int16], Tensor[(14, 7, 16), float64], Tensor[(1568), float64], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(13, 15, 1), float64], Tensor[(195), float64]) {
  @func_8397(%var_8399, %var_8400, %var_8401) /* ty=(Tensor[(16, 9, 15), int16], Tensor[(14, 7, 16), float64], Tensor[(1568), float64], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(13, 15, 1), float64], Tensor[(195), float64]) */
}

def @func_15599() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %220 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
    %217 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %218 = %217.0;
    %219 = @func_6106() /* ty=Tensor[(2, 10, 13), float64] */;
    (%218, %219)
  };
  %220() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */
}

def @func_16622() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %225 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %221 = @func_12731() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %222 = @func_16123() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %223 = %221.0;
    %224 = %222.1;
    (%223, %224)
  };
  %225() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_11021() -> (Tensor[(2, 10, 13), float32],) {
  %228 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %226 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %227 = %226.0;
    (%227,)
  };
  %228() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_8842() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %229 = @func_674() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %230 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %231 = %229.0;
  %232 = %230.1;
  (%231, %232)
}

def @func_11936(%var_11934: Tensor[(450), float32]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(5, 10, 9), bool], Tensor[(50), float32], Tensor[(450), float32]) {
  @func_11933(%var_11934) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(5, 10, 9), bool], Tensor[(50), float32], Tensor[(450), float32]) */
}

def @func_2030() -> Tensor[(2, 10, 13), float32] {
  %234 = fn () -> Tensor[(2, 10, 13), float32] {
    %233 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %233.0
  };
  %234() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_12551(%var_12549: Tensor[(528), uint64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), int64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) {
  @func_12548(%var_12549) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), int64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_15630() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_15628() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_13047() -> Tensor[(2, 10, 13), float32] {
  %235 = @func_12731() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %235.0
}

def @func_9929() -> Tensor[(4, 11, 12), float64] {
  @func_9927() /* ty=Tensor[(4, 11, 12), float64] */
}

def @func_787(%var_751: Tensor[(4, 11, 12), float64]) -> (Tensor[(4, 11, 12), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %236 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %237 = %236.0;
  %238 = cast(%var_751, dtype="uint64") /* ty=Tensor[(4, 11, 12), uint64] */;
  %239 = shape_of(%237, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(%237, dtype="uint64") /* ty=Tensor[(4, 11, 12), uint64] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %242 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %243 = @func_674() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %244 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %245 = left_shift(%240, %241) /* ty=Tensor[(4, 11, 12), uint64] */;
  %246 = %242.0;
  %247 = %243.1;
  %248 = %244.0;
  %249 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
  (%245, %246, %247, %248, %249)
}

def @func_7837() -> (Tensor[(2, 10, 13), float64],) {
  %252 = fn () -> (Tensor[(2, 10, 13), float64],) {
    %250 = @func_4903() /* ty=(Tensor[(2, 10, 13), float64],) */;
    %251 = %250.0;
    (%251,)
  };
  %252() /* ty=(Tensor[(2, 10, 13), float64],) */
}

def @func_7961() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(1, 528), float64]) {
  @func_7959() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(1, 528), float64]) */
}

def @func_14923(%var_14921: Tensor[(420), uint8], %var_14922: Tensor[(858), float32]) -> (Tensor[(2, 10, 13), float32], Tensor[(10, 14, 3), uint8], Tensor[(420), uint8], Tensor[(2, 10, 13), float64], Tensor[(78), int16], Tensor[(11, 6, 13), float32], Tensor[(858), float32]) {
  @func_14919(%var_14921, %var_14922) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(10, 14, 3), uint8], Tensor[(420), uint8], Tensor[(2, 10, 13), float64], Tensor[(78), int16], Tensor[(11, 6, 13), float32], Tensor[(858), float32]) */
}

def @func_7359() -> (Tensor[(2, 10, 13), float32],) {
  %253 = @func_6165() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %254 = %253.0;
  (%254,)
}

def @func_6539(%var_6537: Tensor[(11, 9, 7), uint8], %var_6538: Tensor[(11, 9, 7), uint8]) -> Tensor[(11, 9, 7), uint8] {
  @func_6535(%var_6537, %var_6538) /* ty=Tensor[(11, 9, 7), uint8] */
}

def @func_4288() -> (Tensor[(2, 10, 13), float32],) {
  @func_4286() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_2281() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) {
  @func_2279() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_642() -> (Tensor[(2, 10, 13), float32],) {
  %256 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %255 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
    (%255,)
  };
  %256() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_2468() -> Tensor[(2, 10, 13), float32] {
  %257 = @func_1741() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %257.0
}

def @func_5826() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  @func_5824() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */
}

def @func_5490() -> (Tensor[(2, 10, 13), float64],) {
  %260 = fn () -> (Tensor[(2, 10, 13), float64],) {
    %258 = @func_4903() /* ty=(Tensor[(2, 10, 13), float64],) */;
    %259 = %258.0;
    (%259,)
  };
  %260() /* ty=(Tensor[(2, 10, 13), float64],) */
}

def @func_13146() -> Tensor[(2, 10, 13), float32] {
  %261 = @func_9106() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %261.0
}

def @func_2752() -> (Tensor[(2, 10, 13), float32],) {
  %262 = @func_2433() /* ty=Tensor[(2, 10, 13), float32] */;
  (%262,)
}

def @func_3021() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) {
  @func_3019() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */
}

def @func_13269() -> Tensor[(2, 10, 13), float64] {
  %263 = @func_3851() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %263.2
}

def @func_14722() -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  @func_14720() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) */
}

def @func_15820() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  %264 = @func_4512() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %265 = @func_5801() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %266 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %267 = %264.0;
  %268 = %265.1;
  %269 = %266.0;
  (%267, %268, %269)
}

def @func_15418(%var_15417: Tensor[(65, 4), float32]) -> (Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), int16], Tensor[(65, 4), float32]) {
  %275 = fn (%var_15412: Tensor[(65, 4), float32]) -> (Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), int16], Tensor[(65, 4), float32]) {
    %270 = @func_9322() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64]) */;
    %271 = cast(%var_15412, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
    %272 = reshape(%271, newshape=[2, 10, 13]) /* ty=Tensor[(2, 10, 13), float32] */;
    %273 = %270.1;
    %274 = @func_2861(%272) /* ty=Tensor[(2, 10, 13), int16] */;
    (%273, %274, %var_15412)
  };
  %275(%var_15417) /* ty=(Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), int16], Tensor[(65, 4), float32]) */
}

def @func_10586() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %286 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
    %276 = @func_1274() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %277 = @func_4451() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %278 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
    %279 = @func_4451() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %280 = %276.0;
    %281 = %277.0;
    %282 = %278.0;
    %283 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
    %284 = %279.1;
    %285 = @func_7895() /* ty=Tensor[(2, 10, 13), float64] */;
    (%280, %281, %282, %283, %284, %285)
  };
  %286() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */
}

def @func_8500() -> Tensor[(528), float64] {
  %288 = fn () -> Tensor[(528), float64] {
    %287 = @func_3019() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
    %287.2
  };
  %288() /* ty=Tensor[(528), float64] */
}

def @func_11066() -> (Tensor[(2, 10, 13), float32],) {
  @func_11064() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_9364(%var_9363: Tensor[(3, 15, 3), int8]) -> (Tensor[(3, 15, 3), int8],) {
  %294 = fn (%var_9357: Tensor[(3, 15, 3), int8]) -> (Tensor[(3, 15, 3), int8],) {
    %289 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 15, 3), int8] */, dtype="int8") /* ty=Tensor[(3, 15, 3), int8] */;
    %290 = shape_of(%var_9357, dtype="int32") /* ty=Tensor[(3), int32] */;
    %291 = cast(%var_9357, dtype="int8") /* ty=Tensor[(3, 15, 3), int8] */;
    %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %293 = bitwise_xor(%291, %292) /* ty=Tensor[(3, 15, 3), int8] */;
    (%293,)
  };
  %294(%var_9363) /* ty=(Tensor[(3, 15, 3), int8],) */
}

def @func_12249() -> Tensor[(2, 10, 13), float32] {
  @func_12247() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_3185(%var_3184: Tensor[(260), float32]) -> (Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), int16], Tensor[(260), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %307 = fn (%var_3147: Tensor[(260), float32]) -> (Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), int16], Tensor[(260), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %295 = @func_1470() /* ty=(Tensor[(16, 9, 15), float64],) */;
    %296 = cast(%var_3147, dtype="float32") /* ty=Tensor[(260), float32] */;
    %297 = reshape(%296, newshape=[2, 10, 13]) /* ty=Tensor[(2, 10, 13), float32] */;
    %298 = cast(%var_3147, dtype="float32") /* ty=Tensor[(260), float32] */;
    %299 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %300 = @func_2630() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %301 = %295.0;
    %302 = @func_3059(%297) /* ty=Tensor[(2, 10, 13), int16] */;
    %303 = acosh(%298) /* ty=Tensor[(260), float32] */;
    %304 = %299.0;
    %305 = @func_2746() /* ty=Tensor[(2, 10, 13), float32] */;
    %306 = %300.0;
    (%301, %302, %303, %304, %305, %306)
  };
  %307(%var_3184) /* ty=(Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), int16], Tensor[(260), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_5605(%var_5604: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) {
  %313 = fn (%var_5601: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) {
    %308 = cast(%var_5601, dtype="float64") /* ty=Tensor[(528), float64] */;
    %309 = reshape(%308, newshape=[528]) /* ty=Tensor[(528), float64] */;
    %310 = @func_3384(%309) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), int32], Tensor[(2, 10, 13), float32]) */;
    %311 = @func_2381() /* ty=Tensor[(2, 10, 13), float32] */;
    %312 = %310.5;
    (%311, %312, %var_5601)
  };
  %313(%var_5604) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */
}

def @main(%var_16783: Tensor[(3, 12, 10), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(3, 12, 10), float64]) {
  %314 = @func_10956() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %315 = cast(%var_16783, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %316 = log(%315) /* ty=Tensor[(3, 12, 10), float64] */;
  %317 = cast(%var_16783, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %318 = shape_of(%316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(%316, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %321 = %314.0;
  %322 = floor_divide(%319, %320) /* ty=Tensor[(3, 12, 10), float64] */;
  (%321, %322)
}

def @func_9324() -> (Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64]) {
  @func_9322() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64]) */
}

def @func_4705() -> Tensor[(2, 10, 13), float32] {
  @func_4703() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_14504(%var_14502: bool, %var_14503: Tensor[(4, 14, 1), bool]) -> Tensor[(4, 14, 1), bool] {
  @func_14500(%var_14502, %var_14503) /* ty=Tensor[(4, 14, 1), bool] */
}

def @func_16386() -> Tensor[(2, 10, 13), float64] {
  %324 = fn () -> Tensor[(2, 10, 13), float64] {
    %323 = @func_1005() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
    %323.1
  };
  %324() /* ty=Tensor[(2, 10, 13), float64] */
}

def @func_480() -> (Tensor[(2, 10, 13), float32],) {
  %330 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %325 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
    %326 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(2, 10, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %327 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
    %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %329 = floor_divide(%327, %328) /* ty=Tensor[(2, 10, 13), float32] */;
    (%329,)
  };
  %330() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_10700() -> (Tensor[(2, 10, 13), float32], Tensor[(9, 5, 14), bool], Tensor[(2, 10, 13), float32]) {
  @func_10698() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(9, 5, 14), bool], Tensor[(2, 10, 13), float32]) */
}

def @func_9633() -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  @func_9631() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) */
}

def @func_3562() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) {
  %341 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) {
    %331 = @func_1741() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %332 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %333 = %332.0;
    %334 = @func_2433() /* ty=Tensor[(2, 10, 13), float32] */;
    %335 = cast(%334, dtype="int8") /* ty=Tensor[(2, 10, 13), int8] */;
    %336 = shape_of(%333, dtype="int32") /* ty=Tensor[(3), int32] */;
    %337 = cast(%333, dtype="int8") /* ty=Tensor[(2, 10, 13), int8] */;
    %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %339 = %331.0;
    %340 = bitwise_and(%337, %338) /* ty=Tensor[(2, 10, 13), int8] */;
    (%339, %340)
  };
  %341() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) */
}

def @func_7511() -> Tensor[(2, 10, 13), float32] {
  @func_7509() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_6677() -> (Tensor[(2, 10, 13), float32],) {
  @func_6675() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_1874() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %347 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %342 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %343 = @func_1236() /* ty=Tensor[(2, 10, 13), float32] */;
    %344 = cast(%343, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
    %345 = %342.0;
    %346 = cos(%344) /* ty=Tensor[(2, 10, 13), float32] */;
    (%345, %346)
  };
  %347() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_4891() -> Tensor[(2, 10, 13), float32] {
  %348 = @func_3526() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %348.0
}

def @func_3437() -> Tensor[(2, 10, 13), float32] {
  %349 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %349.0
}

def @func_10698() -> (Tensor[(2, 10, 13), float32], Tensor[(9, 5, 14), bool], Tensor[(2, 10, 13), float32]) {
  %350 = @func_8092() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %351 = cast(meta[relay.Constant][12] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %352 = reshape(%351, newshape=[9, 5, 14]) /* ty=Tensor[(9, 5, 14), float64] */;
  %353 = @func_10624(%352) /* ty=Tensor[(9, 5, 14), float64] */;
  %354 = cast(meta[relay.Constant][12] /* ty=Tensor[(630), float64] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %355 = shape_of(%353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%353, dtype="bool") /* ty=Tensor[(9, 5, 14), bool] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %358 = @func_4035() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %359 = %350.0;
  %360 = greater(%356, %357) /* ty=Tensor[(9, 5, 14), bool] */;
  %361 = %358.2;
  (%359, %360, %361)
}

def @func_10837() -> Tensor[(528), float64] {
  %363 = fn () -> Tensor[(528), float64] {
    %362 = @func_3019() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
    %362.2
  };
  %363() /* ty=Tensor[(528), float64] */
}

def @func_5242() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64]) {
  %370 = fn () -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64]) {
    %364 = @func_1005() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
    %365 = %364.0;
    %366 = cast(%365, dtype="float64") /* ty=Tensor[(2, 10, 13), float64] */;
    %367 = @func_2007() /* ty=(Tensor[(2, 10, 13), float64],) */;
    %368 = sin(%366) /* ty=Tensor[(2, 10, 13), float64] */;
    %369 = %367.0;
    (%368, %369)
  };
  %370() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64]) */
}

def @func_4512() -> (Tensor[(2, 10, 13), float32],) {
  %371 = @func_3720() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %372 = %371.0;
  %373 = cast(%372, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %374 = asin(%373) /* ty=Tensor[(2, 10, 13), float32] */;
  (%374,)
}

def @func_13370(%var_13368: float64, %var_13369: Tensor[(14, 1), float64]) -> (Tensor[(14, 1), float64], Tensor[(2, 10, 13), float32]) {
  %380 = fn (%var_13313: float64, %var_13314: Tensor[(14, 1), float64]) -> (Tensor[(14, 1), float64], Tensor[(2, 10, 13), float32]) {
    %375 = cast(%var_13313, dtype="float64") /* ty=float64 */;
    %376 = cast(%var_13314, dtype="float64") /* ty=Tensor[(14, 1), float64] */;
    %377 = @func_2733() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %378 = power(%375, %376) /* ty=Tensor[(14, 1), float64] */;
    %379 = %377.2;
    (%378, %379)
  };
  %380(%var_13368, %var_13369) /* ty=(Tensor[(14, 1), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_15628() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %381 = @func_7460() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %382 = %381.1;
  %383 = @func_7509() /* ty=Tensor[(2, 10, 13), float32] */;
  (%382, %383)
}

def @func_7461() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %387 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %384 = @func_5502() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %385 = @func_3437() /* ty=Tensor[(2, 10, 13), float32] */;
    %386 = %384.0;
    (%385, %386)
  };
  %387() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_8397(%var_8365: Tensor[(16, 9, 15), float64], %var_8377: Tensor[(1568), float64], %var_8384: Tensor[(528), float64]) -> (Tensor[(16, 9, 15), int16], Tensor[(14, 7, 16), float64], Tensor[(1568), float64], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(13, 15, 1), float64], Tensor[(195), float64]) {
  %388 = @func_1470() /* ty=(Tensor[(16, 9, 15), float64],) */;
  %389 = %388.0;
  %390 = cast(%var_8365, dtype="int16") /* ty=Tensor[(16, 9, 15), int16] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="int16") /* ty=Tensor[(16, 9, 15), int16] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %394 = cast(%var_8377, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %395 = reshape(%394, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float64] */;
  %396 = @func_2297(%395) /* ty=(Tensor[(14, 7, 16), float64], Tensor[(2, 10, 13), float32]) */;
  %397 = cast(%var_8384, dtype="float64") /* ty=Tensor[(528), float64] */;
  %398 = reshape(%397, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %399 = @func_3668(%398) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(528), float64]) */;
  %400 = cast(meta[relay.Constant][13] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %401 = reshape(%400, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), float64] */;
  %402 = right_shift(%392, %393) /* ty=Tensor[(16, 9, 15), int16] */;
  %403 = %396.0;
  %404 = %399.2;
  %405 = @func_3901() /* ty=Tensor[(2, 10, 13), float32] */;
  %406 = @func_7846(%401) /* ty=Tensor[(13, 15, 1), float64] */;
  (%402, %403, %var_8377, %404, %var_8384, %405, %406, meta[relay.Constant][13] /* ty=Tensor[(195), float64] */)
}

def @func_15183() -> (Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64]) {
  %407 = @func_2675() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %408 = @func_9927() /* ty=Tensor[(4, 11, 12), float64] */;
  %409 = %407.0;
  (%408, %409)
}

def @func_6556() -> Tensor[(2, 10, 13), float32] {
  @func_6554() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_16125() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_16123() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_4286() -> (Tensor[(2, 10, 13), float32],) {
  %410 = @func_540() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %411 = %410.1;
  (%411,)
}

def @func_7881() -> (Tensor[(2, 10, 13), float32],) {
  %412 = @func_4512() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %413 = %412.0;
  (%413,)
}

def @func_2631() -> (Tensor[(2, 10, 13), float32],) {
  %416 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %414 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %415 = %414.0;
    (%415,)
  };
  %416() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_1913() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_1911() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_7736() -> (Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  @func_7734() /* ty=(Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) */
}

def @func_10816() -> Tensor[(2, 10, 13), float64] {
  %417 = @func_5489() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %417.0
}

def @func_9472() -> Tensor[(2, 10, 13), float32] {
  @func_3437() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_3280(%var_3278: Tensor[(2, 10, 13), float32], %var_3279: Tensor[(16, 9, 15), float64]) -> (Tensor[(2, 10, 13), uint8], Tensor[(16, 9, 15), float64], Tensor[(16, 9, 15), bool]) {
  %434 = fn (%var_3247: Tensor[(2, 10, 13), float32], %var_3272: Tensor[(16, 9, 15), float64]) -> (Tensor[(2, 10, 13), uint8], Tensor[(16, 9, 15), float64], Tensor[(16, 9, 15), bool]) {
    %418 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %419 = %418.0;
    %420 = cast(%var_3247, dtype="uint8") /* ty=Tensor[(2, 10, 13), uint8] */;
    %421 = shape_of(%419, dtype="int32") /* ty=Tensor[(3), int32] */;
    %422 = cast(%419, dtype="uint8") /* ty=Tensor[(2, 10, 13), uint8] */;
    %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %424 = @func_1470() /* ty=(Tensor[(16, 9, 15), float64],) */;
    %425 = @func_1470() /* ty=(Tensor[(16, 9, 15), float64],) */;
    %426 = %425.0;
    %427 = cast(%var_3272, dtype="bool") /* ty=Tensor[(16, 9, 15), bool] */;
    %428 = shape_of(%426, dtype="int32") /* ty=Tensor[(3), int32] */;
    %429 = cast(%426, dtype="bool") /* ty=Tensor[(16, 9, 15), bool] */;
    %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %431 = bitwise_xor(%422, %423) /* ty=Tensor[(2, 10, 13), uint8] */;
    %432 = %424.0;
    %433 = equal(%429, %430) /* ty=Tensor[(16, 9, 15), bool] */;
    (%431, %432, %433)
  };
  %434(%var_3278, %var_3279) /* ty=(Tensor[(2, 10, 13), uint8], Tensor[(16, 9, 15), float64], Tensor[(16, 9, 15), bool]) */
}

def @func_1007() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  @func_1005() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */
}

def @func_4893() -> Tensor[(2, 10, 13), float32] {
  @func_4891() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_8547() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %440 = fn () -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %435 = @func_2949() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64]) */;
    %436 = @func_6603() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %437 = @func_2522() /* ty=Tensor[(2, 10, 13), float64] */;
    %438 = %435.0;
    %439 = %436.0;
    (%437, %438, %439)
  };
  %440() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_884(%var_882: Tensor[(2, 2, 1), uint64], %var_883: Tensor[(2, 2, 12), uint64]) -> (Tensor[(2, 2, 12), uint64], Tensor[(2, 10, 13), float32]) {
  %446 = fn (%var_866: Tensor[(2, 2, 1), uint64], %var_867: Tensor[(2, 2, 12), uint64]) -> (Tensor[(2, 2, 12), uint64], Tensor[(2, 10, 13), float32]) {
    %441 = cast(%var_866, dtype="uint64") /* ty=Tensor[(2, 2, 1), uint64] */;
    %442 = cast(%var_867, dtype="uint64") /* ty=Tensor[(2, 2, 12), uint64] */;
    %443 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %444 = right_shift(%441, %442) /* ty=Tensor[(2, 2, 12), uint64] */;
    %445 = %443.0;
    (%444, %445)
  };
  %446(%var_882, %var_883) /* ty=(Tensor[(2, 2, 12), uint64], Tensor[(2, 10, 13), float32]) */
}

def @func_13049() -> Tensor[(2, 10, 13), float32] {
  @func_13047() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_12677() -> (Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), float32]) {
  %447 = @func_5123() /* ty=(Tensor[(2, 10, 13), bool],) */;
  %448 = @func_7213() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %449 = %447.0;
  %450 = %448.0;
  (%449, %450)
}

def @func_3061(%var_3060: Tensor[(2, 10, 13), float32]) -> Tensor[(2, 10, 13), int16] {
  %457 = fn (%var_3041: Tensor[(2, 10, 13), float32]) -> Tensor[(2, 10, 13), int16] {
    %451 = @func_2171() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %452 = %451.1;
    %453 = cast(%var_3041, dtype="int16") /* ty=Tensor[(2, 10, 13), int16] */;
    %454 = shape_of(%452, dtype="int32") /* ty=Tensor[(3), int32] */;
    %455 = cast(%452, dtype="int16") /* ty=Tensor[(2, 10, 13), int16] */;
    %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_or(%455, %456) /* ty=Tensor[(2, 10, 13), int16] */
  };
  %457(%var_3060) /* ty=Tensor[(2, 10, 13), int16] */
}

def @func_5824() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %458 = @func_5327() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
  %459 = @func_4222() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %460 = %458.1;
  %461 = %459.0;
  (%460, %461)
}

def @func_2172() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %471 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %462 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %463 = %462.0;
    %464 = cast(%463, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
    %465 = sigmoid(%464) /* ty=Tensor[(2, 10, 13), float32] */;
    %466 = cast(%465, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
    %467 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %468 = atan(%466) /* ty=Tensor[(2, 10, 13), float32] */;
    %469 = %467.0;
    %470 = @func_1236() /* ty=Tensor[(2, 10, 13), float32] */;
    (%468, %469, %470)
  };
  %471() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_13848() -> (Tensor[(2, 10, 13), float64], Tensor[(528), uint64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32]) {
  %472 = @func_7836() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %473 = @func_2662() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %474 = cast(meta[relay.Constant][14] /* ty=Tensor[(528), uint64] */, dtype="uint64") /* ty=Tensor[(528), uint64] */;
  %475 = reshape(%474, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), uint64] */;
  %476 = @func_4995(%475) /* ty=Tensor[(4, 11, 12), bool] */;
  %477 = cast(%476, dtype="float32") /* ty=Tensor[(4, 11, 12), float32] */;
  %478 = %472.0;
  %479 = %473.0;
  %480 = acos(%477) /* ty=Tensor[(4, 11, 12), float32] */;
  (%478, meta[relay.Constant][14] /* ty=Tensor[(528), uint64] */, %479, %480)
}

def @func_9968() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %481 = @func_8092() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %482 = @func_2746() /* ty=Tensor[(2, 10, 13), float32] */;
  %483 = %481.0;
  (%482, %483)
}

def @func_11101(%var_11099: Tensor[(4), uint64], %var_11100: Tensor[(2, 264), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(4), uint64], Tensor[(4), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 264), float64]) {
  @func_11097(%var_11099, %var_11100) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4), uint64], Tensor[(4), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 264), float64]) */
}

def @func_9167(%var_9166: Tensor[(11, 6, 13), float32]) -> (Tensor[(11, 6, 13), float32],) {
  %489 = fn (%var_9156: Tensor[(11, 6, 13), float32]) -> (Tensor[(11, 6, 13), float32],) {
    %484 = cast(meta[relay.Constant][15] /* ty=Tensor[(11, 6, 13), float32] */, dtype="float32") /* ty=Tensor[(11, 6, 13), float32] */;
    %485 = shape_of(%var_9156, dtype="int32") /* ty=Tensor[(3), int32] */;
    %486 = cast(%var_9156, dtype="float32") /* ty=Tensor[(11, 6, 13), float32] */;
    %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %488 = floor_mod(%486, %487) /* ty=Tensor[(11, 6, 13), float32] */;
    (%488,)
  };
  %489(%var_9166) /* ty=(Tensor[(11, 6, 13), float32],) */
}

def @func_15282() -> (Tensor[(2, 10, 13), float32],) {
  %490 = @func_10405() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %491 = %490.0;
  (%491,)
}

def @func_6605() -> (Tensor[(2, 10, 13), float32],) {
  @func_6603() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_8233(%var_8221: Tensor[(2366), bool]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2366), bool]) {
  %492 = cast(%var_8221, dtype="bool") /* ty=Tensor[(2366), bool] */;
  %493 = cast(%var_8221, dtype="bool") /* ty=Tensor[(2366), bool] */;
  %494 = reshape(%492, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), bool] */;
  %495 = reshape(%493, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), bool] */;
  %496 = @func_5986(%494, %495) /* ty=(Tensor[(14, 13, 13), int16], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) */;
  %497 = @func_4703() /* ty=Tensor[(2, 10, 13), float32] */;
  %498 = @func_2381() /* ty=Tensor[(2, 10, 13), float32] */;
  %499 = %496.2;
  (%497, %498, %499, %var_8221)
}

def @func_11246(%var_11244: float64, %var_11245: Tensor[(14, 44), float64]) -> (Tensor[(2, 10, 13), float64], Tensor[(11, 8, 7), bool], float64, Tensor[(14, 44), float64]) {
  %507 = fn (%var_11235: float64, %var_11236: Tensor[(14, 44), float64]) -> (Tensor[(2, 10, 13), float64], Tensor[(11, 8, 7), bool], float64, Tensor[(14, 44), float64]) {
    %500 = @func_4903() /* ty=(Tensor[(2, 10, 13), float64],) */;
    %501 = cast(%var_11235, dtype="float64") /* ty=float64 */;
    %502 = cast(%var_11236, dtype="float64") /* ty=Tensor[(14, 44), float64] */;
    %503 = reshape(%501, newshape=[]) /* ty=float64 */;
    %504 = reshape(%502, newshape=[11, 8, 7]) /* ty=Tensor[(11, 8, 7), float64] */;
    %505 = %500.0;
    %506 = @func_5012(%503, %504) /* ty=Tensor[(11, 8, 7), bool] */;
    (%505, %506, %var_11235, %var_11236)
  };
  %507(%var_11244, %var_11245) /* ty=(Tensor[(2, 10, 13), float64], Tensor[(11, 8, 7), bool], float64, Tensor[(14, 44), float64]) */
}

def @func_6631() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %512 = fn () -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
    %508 = @func_5801() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
    %509 = @func_4286() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %510 = %508.0;
    %511 = %509.0;
    (%510, %511)
  };
  %512() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_10626(%var_10625: Tensor[(9, 5, 14), float64]) -> Tensor[(9, 5, 14), float64] {
  %514 = fn (%var_10621: Tensor[(9, 5, 14), float64]) -> Tensor[(9, 5, 14), float64] {
    %513 = cast(%var_10621, dtype="float64") /* ty=Tensor[(9, 5, 14), float64] */;
    tan(%513) /* ty=Tensor[(9, 5, 14), float64] */
  };
  %514(%var_10625) /* ty=Tensor[(9, 5, 14), float64] */
}

def @func_8236(%var_8234: Tensor[(2366), bool]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2366), bool]) {
  @func_8233(%var_8234) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2366), bool]) */
}

def @func_13410() -> (Tensor[(2, 10, 13), float32],) {
  %515 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %516 = %515.0;
  (%516,)
}

def @func_2754() -> (Tensor[(2, 10, 13), float32],) {
  @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_4804() -> Tensor[(2, 10, 13), float32] {
  @func_4802() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_9082() -> Tensor[(2, 10, 13), float32] {
  %518 = fn () -> Tensor[(2, 10, 13), float32] {
    %517 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %517.0
  };
  %518() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_9777() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_9775() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_6224() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) {
  %528 = fn () -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) {
    %519 = @func_2007() /* ty=(Tensor[(2, 10, 13), float64],) */;
    %520 = %519.0;
    %521 = cast(%520, dtype="float64") /* ty=Tensor[(2, 10, 13), float64] */;
    %522 = reshape(%521, newshape=[2, 10, 13]) /* ty=Tensor[(2, 10, 13), float64] */;
    %523 = @func_2369(%522) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), bool]) */;
    %524 = @func_3295() /* ty=(Tensor[(4, 11, 12), float64],) */;
    %525 = %523.0;
    %526 = %524.0;
    %527 = @func_1236() /* ty=Tensor[(2, 10, 13), float32] */;
    (%520, %525, %526, %527)
  };
  %528() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_9347() -> (Tensor[(2, 10, 13), float32],) {
  %529 = @func_9233() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %530 = %529.0;
  (%530,)
}

def @func_1083() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %531 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %532 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %533 = %531.0;
  %534 = %532.0;
  (%533, %534)
}

def @func_15490() -> (Tensor[(2, 10, 13), float32],) {
  %535 = @func_8631() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %536 = %535.2;
  (%536,)
}

def @func_1742() -> (Tensor[(2, 10, 13), float32],) {
  %539 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %537 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %538 = %537.0;
    (%538,)
  };
  %539() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_15445(%var_15443: Tensor[(15, 2, 10), float64]) -> (Tensor[(15, 2, 10), float64], Tensor[(2, 10, 13), float32]) {
  @func_15442(%var_15443) /* ty=(Tensor[(15, 2, 10), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_15993(%var_15991: Tensor[(9, 2, 3), float64]) -> Tensor[(9, 2, 3), bool] {
  @func_15990(%var_15991) /* ty=Tensor[(9, 2, 3), bool] */
}

def @func_1237() -> Tensor[(2, 10, 13), float32] {
  %541 = fn () -> Tensor[(2, 10, 13), float32] {
    %540 = @func_674() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
    %540.0
  };
  %541() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_5329() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) {
  @func_5327() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */
}

def @func_5802() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %546 = fn () -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
    %542 = @func_5489() /* ty=(Tensor[(2, 10, 13), float64],) */;
    %543 = @func_3526() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %544 = %542.0;
    %545 = %543.0;
    (%544, %545)
  };
  %546() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_9107() -> (Tensor[(2, 10, 13), float32],) {
  %549 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %547 = @func_3628() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %548 = %547.1;
    (%548,)
  };
  %549() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_12145() -> (Tensor[(2, 10, 13), float32],) {
  %550 = @func_2381() /* ty=Tensor[(2, 10, 13), float32] */;
  (%550,)
}

def @func_15294() -> (Tensor[(2, 10, 13), float32],) {
  %551 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %552 = %551.0;
  (%552,)
}

def @func_10040() -> (Tensor[(2, 10, 13), float64],) {
  @func_10038() /* ty=(Tensor[(2, 10, 13), float64],) */
}

def @func_13725(%var_13704: Tensor[(16, 9, 15), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64]) {
  %553 = @func_13384() /* ty=(Tensor[(16, 9, 15), float64],) */;
  %554 = %553.0;
  %555 = cast(%var_13704, dtype="float64") /* ty=Tensor[(16, 9, 15), float64] */;
  %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%554, dtype="float64") /* ty=Tensor[(16, 9, 15), float64] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %559 = @func_9081() /* ty=Tensor[(2, 10, 13), float32] */;
  %560 = maximum(%557, %558) /* ty=Tensor[(16, 9, 15), float64] */;
  (%559, %560)
}

def @func_15351(%var_15349: Tensor[(648), float64], %var_15350: Tensor[(1980), bool]) -> (Tensor[(2, 10, 13), float32], Tensor[(6, 12, 9), float64], Tensor[(648), float64], Tensor[(2, 10, 13), float32], Tensor[(12, 15, 11), bool], Tensor[(132, 1), bool], Tensor[(1980), bool]) {
  %575 = fn (%var_15313: Tensor[(648), float64], %var_15346: Tensor[(1980), bool]) -> (Tensor[(2, 10, 13), float32], Tensor[(6, 12, 9), float64], Tensor[(648), float64], Tensor[(2, 10, 13), float32], Tensor[(12, 15, 11), bool], Tensor[(132, 1), bool], Tensor[(1980), bool]) {
    %561 = @func_7460() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %562 = cast(%var_15313, dtype="float64") /* ty=Tensor[(648), float64] */;
    %563 = reshape(%562, newshape=[6, 12, 9]) /* ty=Tensor[(6, 12, 9), float64] */;
    %564 = @func_15212(%563) /* ty=(Tensor[(6, 12, 9), float64],) */;
    %565 = @func_11064() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %566 = cast(meta[relay.Constant][16] /* ty=Tensor[(132, 1), bool] */, dtype="bool") /* ty=Tensor[(132, 1), bool] */;
    %567 = cast(%var_15346, dtype="bool") /* ty=Tensor[(1980), bool] */;
    %568 = reshape(%566, newshape=[12, 1, 11]) /* ty=Tensor[(12, 1, 11), bool] */;
    %569 = reshape(%567, newshape=[12, 15, 11]) /* ty=Tensor[(12, 15, 11), bool] */;
    %570 = @func_15078(%568, %569) /* ty=(Tensor[(12, 15, 11), bool], Tensor[(2, 10, 13), float32]) */;
    %571 = %561.0;
    %572 = %564.0;
    %573 = %565.0;
    %574 = %570.0;
    (%571, %572, %var_15313, %573, %574, meta[relay.Constant][16] /* ty=Tensor[(132, 1), bool] */, %var_15346)
  };
  %575(%var_15349, %var_15350) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(6, 12, 9), float64], Tensor[(648), float64], Tensor[(2, 10, 13), float32], Tensor[(12, 15, 11), bool], Tensor[(132, 1), bool], Tensor[(1980), bool]) */
}

def @func_2448() -> Tensor[(2, 10, 13), float32] {
  @func_2446() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_7509() -> Tensor[(2, 10, 13), float32] {
  %576 = @func_5146() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %576.0
}

def @func_4723(%var_4721: Tensor[(5, 11, 1), float32]) -> (Tensor[(5, 11, 1), float32], Tensor[(2, 10, 13), float32]) {
  @func_4720(%var_4721) /* ty=(Tensor[(5, 11, 1), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_14580() -> (Tensor[(2, 10, 13), float32],) {
  %577 = @func_6390() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) */;
  %578 = %577.4;
  (%578,)
}

def @func_16084() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(300, 1), float64], Tensor[(15, 10, 10), float32]) {
  %579 = @func_11064() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %580 = cast(meta[relay.Constant][17] /* ty=Tensor[(300, 1), float64] */, dtype="float64") /* ty=Tensor[(300, 1), float64] */;
  %581 = reshape(%580, newshape=[15, 2, 10]) /* ty=Tensor[(15, 2, 10), float64] */;
  %582 = @func_15442(%581) /* ty=(Tensor[(15, 2, 10), float64], Tensor[(2, 10, 13), float32]) */;
  %583 = %579.0;
  %584 = %582.1;
  %585 = @func_16001() /* ty=Tensor[(15, 10, 10), float32] */;
  (%583, %584, meta[relay.Constant][17] /* ty=Tensor[(300, 1), float64] */, %585)
}

def @func_10737() -> Tensor[(2, 10, 13), float32] {
  %586 = @func_8273() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %586.0
}

def @func_4174() -> Tensor[(2, 11, 9), bool] {
  %591 = fn () -> Tensor[(2, 11, 9), bool] {
    %587 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 11, 9), uint64] */, dtype="bool") /* ty=Tensor[(2, 11, 9), bool] */;
    %588 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(2, 11, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %589 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 11, 9), uint64] */, dtype="bool") /* ty=Tensor[(2, 11, 9), bool] */;
    %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%589, %590) /* ty=Tensor[(2, 11, 9), bool] */
  };
  %591() /* ty=Tensor[(2, 11, 9), bool] */
}

def @func_3439() -> Tensor[(2, 10, 13), float32] {
  @func_3437() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_11344() -> (Tensor[(2, 10, 13), float32],) {
  @func_11342() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_3470() -> Tensor[(2, 10, 13), float32] {
  %592 = fn () -> Tensor[(2, 10, 13), float32] {
    @func_2746() /* ty=Tensor[(2, 10, 13), float32] */
  };
  %592() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_11786() -> (Tensor[(3, 14, 16), float64], Tensor[(3, 14, 16), bool], Tensor[(3, 14, 16), float32], Tensor[(2, 10, 13), float32]) {
  %593 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 14, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 16), float64] */;
  %594 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(3, 14, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 14, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 16), float64] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %597 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 14, 16), float64] */, dtype="bool") /* ty=Tensor[(3, 14, 16), bool] */;
  %598 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(3, 14, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 14, 16), float64] */, dtype="bool") /* ty=Tensor[(3, 14, 16), bool] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %601 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 14, 16), float64] */, dtype="float32") /* ty=Tensor[(3, 14, 16), float32] */;
  %602 = @func_11064() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %603 = power(%595, %596) /* ty=Tensor[(3, 14, 16), float64] */;
  %604 = logical_or(%599, %600) /* ty=Tensor[(3, 14, 16), bool] */;
  %605 = atanh(%601) /* ty=Tensor[(3, 14, 16), float32] */;
  %606 = %602.0;
  (%603, %604, %605, %606)
}

def @func_2949() -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64]) {
  %607 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %608 = @func_2279() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) */;
  %609 = %607.0;
  %610 = %608.3;
  (%609, %610)
}

def @func_6535(%var_6529: Tensor[(11, 9, 7), uint8], %var_6530: Tensor[(11, 9, 7), uint8]) -> Tensor[(11, 9, 7), uint8] {
  %611 = cast(%var_6530, dtype="uint8") /* ty=Tensor[(11, 9, 7), uint8] */;
  %612 = shape_of(%var_6529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%var_6529, dtype="uint8") /* ty=Tensor[(11, 9, 7), uint8] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  minimum(%613, %614) /* ty=Tensor[(11, 9, 7), uint8] */
}

def @func_4998(%var_4996: Tensor[(4, 11, 12), uint64]) -> Tensor[(4, 11, 12), bool] {
  @func_4995(%var_4996) /* ty=Tensor[(4, 11, 12), bool] */
}

def @func_617() -> Tensor[(2, 10, 13), float32] {
  %616 = fn () -> Tensor[(2, 10, 13), float32] {
    %615 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %615.0
  };
  %616() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_676() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  @func_674() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */
}

def @func_10447() -> (Tensor[(2, 16, 10), float32], Tensor[(2, 10, 13), float32]) {
  %624 = fn () -> (Tensor[(2, 16, 10), float32], Tensor[(2, 10, 13), float32]) {
    %617 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 16, 10), float32] */, dtype="float32") /* ty=Tensor[(2, 16, 10), float32] */;
    %618 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(2, 16, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %619 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 16, 10), float32] */, dtype="float32") /* ty=Tensor[(2, 16, 10), float32] */;
    %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %621 = @func_1005() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
    %622 = floor_divide(%619, %620) /* ty=Tensor[(2, 16, 10), float32] */;
    %623 = %621.0;
    (%622, %623)
  };
  %624() /* ty=(Tensor[(2, 16, 10), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_4582() -> Tensor[(2, 10, 13), float32] {
  @func_2446() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_4995(%var_4978: Tensor[(4, 11, 12), uint64]) -> Tensor[(4, 11, 12), bool] {
  %625 = @func_2279() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) */;
  %626 = %625.3;
  %627 = cast(%var_4978, dtype="bool") /* ty=Tensor[(4, 11, 12), bool] */;
  %628 = shape_of(%626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%626, dtype="bool") /* ty=Tensor[(4, 11, 12), bool] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%629, %630) /* ty=Tensor[(4, 11, 12), bool] */
}

def @func_9604() -> (Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), float32]) {
  %635 = fn () -> (Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), float32]) {
    %631 = @func_5123() /* ty=(Tensor[(2, 10, 13), bool],) */;
    %632 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %633 = %631.0;
    %634 = %632.0;
    (%633, %634)
  };
  %635() /* ty=(Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), float32]) */
}

def @func_9051(%var_9050: Tensor[(4), uint64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(4), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 2, 12), bool]) {
  %652 = fn (%var_9025: Tensor[(4), uint64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(4), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 2, 12), bool]) {
    %636 = @func_5565() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) */;
    %637 = @func_8464() /* ty=(Tensor[(2, 10, 13), float64],) */;
    %638 = cast(%var_9025, dtype="uint64") /* ty=Tensor[(4), uint64] */;
    %639 = cast(meta[relay.Constant][24] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
    %640 = reshape(%638, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), uint64] */;
    %641 = reshape(%639, newshape=[2, 2, 12]) /* ty=Tensor[(2, 2, 12), uint64] */;
    %642 = @func_881(%640, %641) /* ty=(Tensor[(2, 2, 12), uint64], Tensor[(2, 10, 13), float32]) */;
    %643 = %642.0;
    %644 = cast(meta[relay.Constant][24] /* ty=Tensor[(48), uint64] */, dtype="bool") /* ty=Tensor[(48), bool] */;
    %645 = shape_of(%643, dtype="int32") /* ty=Tensor[(3), int32] */;
    %646 = cast(%643, dtype="bool") /* ty=Tensor[(2, 2, 12), bool] */;
    %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %648 = %636.2;
    %649 = %637.0;
    %650 = @func_2433() /* ty=Tensor[(2, 10, 13), float32] */;
    %651 = equal(%646, %647) /* ty=Tensor[(2, 2, 12), bool] */;
    (%648, %649, %var_9025, %650, %651)
  };
  %652(%var_9050) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(4), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 2, 12), bool]) */
}

def @func_11575() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(3, 15, 3), int8], Tensor[(3, 45), int8]) {
  @func_11573() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(3, 15, 3), int8], Tensor[(3, 45), int8]) */
}

def @func_1810() -> Tensor[(2, 10, 13), float32] {
  @func_1808() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_10956() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_10954() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_2735() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_2733() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_8465() -> (Tensor[(2, 10, 13), float64],) {
  %655 = fn () -> (Tensor[(2, 10, 13), float64],) {
    %653 = @func_5241() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64]) */;
    %654 = %653.0;
    (%654,)
  };
  %655() /* ty=(Tensor[(2, 10, 13), float64],) */
}

def @func_11933(%var_11920: Tensor[(450), float32]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(5, 10, 9), bool], Tensor[(50), float32], Tensor[(450), float32]) {
  %656 = cast(meta[relay.Constant][25] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
  %657 = cast(%var_11920, dtype="float32") /* ty=Tensor[(450), float32] */;
  %658 = reshape(%656, newshape=[5, 10, 1]) /* ty=Tensor[(5, 10, 1), float32] */;
  %659 = reshape(%657, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %660 = @func_6943(%658, %659) /* ty=(Tensor[(5, 10, 9), bool],) */;
  %661 = @func_4802() /* ty=Tensor[(2, 10, 13), float32] */;
  %662 = @func_4773() /* ty=Tensor[(2, 10, 13), float32] */;
  %663 = %660.0;
  (%661, %662, %663, meta[relay.Constant][25] /* ty=Tensor[(50), float32] */, %var_11920)
}

def @func_674() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %664 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %665 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %666 = %665.0;
  %667 = cast(%666, dtype="float64") /* ty=Tensor[(2, 10, 13), float64] */;
  %668 = %664.0;
  %669 = sinh(%667) /* ty=Tensor[(2, 10, 13), float64] */;
  (%668, %669)
}

def @func_13565() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  @func_13563() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */
}

def @func_7883() -> (Tensor[(2, 10, 13), float32],) {
  @func_7881() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_4201() -> Tensor[(2, 10, 13), float32] {
  %670 = @func_540() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %670.1
}

def @func_12679() -> (Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), float32]) {
  @func_12677() /* ty=(Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), float32]) */
}

def @func_13884(%var_13879: Tensor[(40), float32]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(40), float32]) {
  %671 = @func_12731() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %672 = cast(%var_13879, dtype="float32") /* ty=Tensor[(40), float32] */;
  %673 = reshape(%672, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), float32] */;
  %674 = @func_12634(%673) /* ty=(Tensor[(1, 5, 8), float32], Tensor[(2, 10, 13), float64]) */;
  %675 = %671.0;
  %676 = %674.1;
  (%675, %676, %var_13879)
}

def @func_14582() -> (Tensor[(2, 10, 13), float32],) {
  @func_14580() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_10818() -> Tensor[(2, 10, 13), float64] {
  @func_10816() /* ty=Tensor[(2, 10, 13), float64] */
}

def @func_15870(%var_15869: Tensor[(13, 16, 5), uint64]) -> (Tensor[(13, 16, 5), uint64],) {
  %682 = fn (%var_15864: Tensor[(13, 16, 5), uint64]) -> (Tensor[(13, 16, 5), uint64],) {
    %677 = cast(%var_15864, dtype="uint64") /* ty=Tensor[(13, 16, 5), uint64] */;
    %678 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(13, 16, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %679 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 16, 5), uint64] */, dtype="uint64") /* ty=Tensor[(13, 16, 5), uint64] */;
    %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %681 = maximum(%679, %680) /* ty=Tensor[(13, 16, 5), uint64] */;
    (%681,)
  };
  %682(%var_15869) /* ty=(Tensor[(13, 16, 5), uint64],) */
}

def @func_4203() -> Tensor[(2, 10, 13), float32] {
  @func_4201() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_11385(%var_11383: Tensor[(1, 15, 5), float64]) -> Tensor[(1, 15, 5), float64] {
  @func_11382(%var_11383) /* ty=Tensor[(1, 15, 5), float64] */
}

def @func_2470() -> Tensor[(2, 10, 13), float32] {
  @func_2468() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_14371() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_14369() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_13963() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_13961() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_11524() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64]) {
  %689 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64]) {
    %683 = @func_6782() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %684 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
    %685 = @func_8979() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), float64]) */;
    %686 = %683.1;
    %687 = %684.1;
    %688 = %685.0;
    (%686, %687, %688)
  };
  %689() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64]) */
}

def @func_5012(%var_5005: float64, %var_5006: Tensor[(11, 8, 7), float64]) -> Tensor[(11, 8, 7), bool] {
  %690 = cast(%var_5005, dtype="bool") /* ty=bool */;
  %691 = cast(%var_5006, dtype="bool") /* ty=Tensor[(11, 8, 7), bool] */;
  not_equal(%690, %691) /* ty=Tensor[(11, 8, 7), bool] */
}

def @func_13926(%var_13925: Tensor[(195), float64]) -> (Tensor[(2, 10, 13), float64], Tensor[(1, 195), float32], Tensor[(195), float64]) {
  %698 = fn (%var_13909: Tensor[(195), float64]) -> (Tensor[(2, 10, 13), float64], Tensor[(1, 195), float32], Tensor[(195), float64]) {
    %692 = @func_12361() /* ty=(Tensor[(2, 10, 13), float64],) */;
    %693 = cast(%var_13909, dtype="float64") /* ty=Tensor[(195), float64] */;
    %694 = reshape(%693, newshape=[1, 195]) /* ty=Tensor[(1, 195), float64] */;
    %695 = @func_9762(%694) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(13, 15, 1), float64], Tensor[(1, 195), float32], Tensor[(2, 10, 13), float32]) */;
    %696 = %692.0;
    %697 = %695.2;
    (%696, %697, %var_13909)
  };
  %698(%var_13925) /* ty=(Tensor[(2, 10, 13), float64], Tensor[(1, 195), float32], Tensor[(195), float64]) */
}

def @func_15951(%var_15931: Tensor[(8, 16, 13), uint32]) -> (Tensor[(8, 16, 13), uint32], Tensor[(2, 10, 13), float32]) {
  %699 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 16, 13), uint32] */, dtype="uint32") /* ty=Tensor[(8, 16, 13), uint32] */;
  %700 = shape_of(%var_15931, dtype="int32") /* ty=Tensor[(3), int32] */;
  %701 = cast(%var_15931, dtype="uint32") /* ty=Tensor[(8, 16, 13), uint32] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %703 = @func_5381() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 11, 9), bool], Tensor[(2, 10, 13), float32]) */;
  %704 = right_shift(%701, %702) /* ty=Tensor[(8, 16, 13), uint32] */;
  %705 = %703.2;
  (%704, %705)
}

def @func_9936() -> Tensor[(2160), float64] {
  %707 = fn () -> Tensor[(2160), float64] {
    %706 = @func_9322() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64]) */;
    %706.2
  };
  %707() /* ty=Tensor[(2160), float64] */
}

def @func_15296() -> (Tensor[(2, 10, 13), float32],) {
  @func_15294() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_4775() -> Tensor[(2, 10, 13), float32] {
  @func_4773() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_12391() -> (Tensor[(2, 10, 13), float64],) {
  %710 = fn () -> (Tensor[(2, 10, 13), float64],) {
    %708 = @func_10360() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %709 = %708.0;
    (%709,)
  };
  %710() /* ty=(Tensor[(2, 10, 13), float64],) */
}

def @func_3527() -> (Tensor[(2, 10, 13), float32],) {
  %712 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %711 = @func_2381() /* ty=Tensor[(2, 10, 13), float32] */;
    (%711,)
  };
  %712() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_6107() -> Tensor[(2, 10, 13), float64] {
  %714 = fn () -> Tensor[(2, 10, 13), float64] {
    %713 = @func_2926() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
    %713.0
  };
  %714() /* ty=Tensor[(2, 10, 13), float64] */
}

def @func_10038() -> (Tensor[(2, 10, 13), float64],) {
  %715 = @func_5824() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %716 = %715.1;
  (%716,)
}

def @func_7920() -> (Tensor[(4, 11, 12), float64],) {
  %719 = fn () -> (Tensor[(4, 11, 12), float64],) {
    %717 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
    %718 = %717.0;
    (%718,)
  };
  %719() /* ty=(Tensor[(4, 11, 12), float64],) */
}

def @func_8790(%var_8788: Tensor[(9, 8, 14), int16]) -> (Tensor[(9, 8, 14), int16],) {
  @func_8787(%var_8788) /* ty=(Tensor[(9, 8, 14), int16],) */
}

def @func_5912(%var_5889: Tensor[(9, 5, 3), uint64]) -> (Tensor[(9, 5, 3), bool], Tensor[(4, 11, 12), float64]) {
  %720 = cast(%var_5889, dtype="bool") /* ty=Tensor[(9, 5, 3), bool] */;
  %721 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(9, 5, 3), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %722 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 5, 3), uint64] */, dtype="bool") /* ty=Tensor[(9, 5, 3), bool] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %724 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %725 = less(%722, %723) /* ty=Tensor[(9, 5, 3), bool] */;
  %726 = %724.0;
  (%725, %726)
}

def @func_15255(%var_15254: Tensor[(7, 14, 5), uint32]) -> Tensor[(7, 14, 5), bool] {
  %731 = fn (%var_15240: Tensor[(7, 14, 5), uint32]) -> Tensor[(7, 14, 5), bool] {
    %727 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 14, 5), uint32] */, dtype="bool") /* ty=Tensor[(7, 14, 5), bool] */;
    %728 = shape_of(%var_15240, dtype="int32") /* ty=Tensor[(3), int32] */;
    %729 = cast(%var_15240, dtype="bool") /* ty=Tensor[(7, 14, 5), bool] */;
    %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%729, %730) /* ty=Tensor[(7, 14, 5), bool] */
  };
  %731(%var_15254) /* ty=Tensor[(7, 14, 5), bool] */
}

def @func_16123() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %732 = @func_3851() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %733 = %732.4;
  %734 = @func_14229() /* ty=Tensor[(2, 10, 13), float32] */;
  (%733, %734)
}

def @func_10072() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_10070() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_8093() -> (Tensor[(2, 10, 13), float32],) {
  %737 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %735 = @func_2926() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
    %736 = %735.1;
    (%736,)
  };
  %737() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_1808() -> Tensor[(2, 10, 13), float32] {
  %738 = @func_1741() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %738.0
}

def @func_10464() -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  %743 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
    %739 = @func_3019() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
    %740 = @func_8631() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
    %741 = %739.0;
    %742 = %740.1;
    (%741, %742)
  };
  %743() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) */
}

def @func_1979(%var_1977: Tensor[(7, 6, 14), uint8], %var_1978: Tensor[(7, 6, 14), uint8]) -> (Tensor[(7, 6, 14), float32], Tensor[(7, 6, 14), float64]) {
  %753 = fn (%var_1945: Tensor[(7, 6, 14), uint8], %var_1946: Tensor[(7, 6, 14), uint8]) -> (Tensor[(7, 6, 14), float32], Tensor[(7, 6, 14), float64]) {
    %744 = cast(%var_1946, dtype="uint8") /* ty=Tensor[(7, 6, 14), uint8] */;
    %745 = shape_of(%var_1945, dtype="int32") /* ty=Tensor[(3), int32] */;
    %746 = cast(%var_1945, dtype="uint8") /* ty=Tensor[(7, 6, 14), uint8] */;
    %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %748 = maximum(%746, %747) /* ty=Tensor[(7, 6, 14), uint8] */;
    %749 = cast(%748, dtype="float32") /* ty=Tensor[(7, 6, 14), float32] */;
    %750 = cast(%var_1946, dtype="float64") /* ty=Tensor[(7, 6, 14), float64] */;
    %751 = erf(%749) /* ty=Tensor[(7, 6, 14), float32] */;
    %752 = rsqrt(%750) /* ty=Tensor[(7, 6, 14), float64] */;
    (%751, %752)
  };
  %753(%var_1977, %var_1978) /* ty=(Tensor[(7, 6, 14), float32], Tensor[(7, 6, 14), float64]) */
}

def @func_5016(%var_5014: float64, %var_5015: Tensor[(11, 8, 7), float64]) -> Tensor[(11, 8, 7), bool] {
  @func_5012(%var_5014, %var_5015) /* ty=Tensor[(11, 8, 7), bool] */
}

def @func_1470() -> (Tensor[(16, 9, 15), float64],) {
  %754 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 9, 15), float64] */, dtype="float64") /* ty=Tensor[(16, 9, 15), float64] */;
  %755 = atanh(%754) /* ty=Tensor[(16, 9, 15), float64] */;
  (%755,)
}

def @func_5382() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 11, 9), bool], Tensor[(2, 10, 13), float32]) {
  %760 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 11, 9), bool], Tensor[(2, 10, 13), float32]) {
    %756 = @func_1083() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %757 = %756.1;
    %758 = @func_4173() /* ty=Tensor[(2, 11, 9), bool] */;
    %759 = @func_4582() /* ty=Tensor[(2, 10, 13), float32] */;
    (%757, %758, %759)
  };
  %760() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 11, 9), bool], Tensor[(2, 10, 13), float32]) */
}

def @func_9927() -> Tensor[(4, 11, 12), float64] {
  %761 = @func_3851() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %761.0
}

def @func_10739() -> Tensor[(2, 10, 13), float32] {
  @func_10737() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_13961() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %762 = @func_10954() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %763 = @func_6554() /* ty=Tensor[(2, 10, 13), float32] */;
  %764 = %762.1;
  (%763, %764)
}

def @func_16636() -> Tensor[(2, 10, 13), float64] {
  %766 = fn () -> Tensor[(2, 10, 13), float64] {
    %765 = @func_2007() /* ty=(Tensor[(2, 10, 13), float64],) */;
    %765.0
  };
  %766() /* ty=Tensor[(2, 10, 13), float64] */
}

def @func_2951() -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64]) {
  @func_2949() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64]) */
}

def @func_5484() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_5482() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_10406() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %771 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %767 = @func_1741() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %768 = @func_6675() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %769 = %767.0;
    %770 = %768.0;
    (%769, %770)
  };
  %771() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_8981() -> (Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), float64]) {
  @func_8979() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), float64]) */
}

def @func_6927(%var_6926: Tensor[(12, 616), float64]) -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], float64, Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), float64], Tensor[(?, 616), bool], Tensor[(12, 616), bool]) {
  %807 = fn (%var_6917: Tensor[(12, 616), float64]) -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], float64, Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), float64], Tensor[(?, 616), bool], Tensor[(12, 616), bool]) {
    %772 = @func_2007() /* ty=(Tensor[(2, 10, 13), float64],) */;
    %773 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %774 = cast(meta[relay.Constant][31] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
    %775 = reshape(%774, newshape=[528]) /* ty=Tensor[(528), float64] */;
    %776 = @func_3668(%775) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(528), float64]) */;
    %777 = @func_5565() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) */;
    %778 = @func_3295() /* ty=(Tensor[(4, 11, 12), float64],) */;
    %779 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 616), float64] */, dtype="float32") /* ty=Tensor[(1, 616), float32] */;
    %780 = rsqrt(%779) /* ty=Tensor[(1, 616), float32] */;
    %781 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 616), float64] */, dtype="bool") /* ty=Tensor[(1, 616), bool] */;
    %782 = shape_of(%780, dtype="int32") /* ty=Tensor[(2), int32] */;
    %783 = cast(%780, dtype="bool") /* ty=Tensor[(1, 616), bool] */;
    %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %785 = cast(-1.9651f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %786 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 616), float64] */, dtype="float64") /* ty=Tensor[(1, 616), float64] */;
    %787 = reshape(%785, newshape=[]) /* ty=float64 */;
    %788 = reshape(%786, newshape=[11, 8, 7]) /* ty=Tensor[(11, 8, 7), float64] */;
    %789 = @func_5012(%787, %788) /* ty=Tensor[(11, 8, 7), bool] */;
    %790 = cast(%789, dtype="uint32") /* ty=Tensor[(11, 8, 7), uint32] */;
    %791 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(1, 616), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %792 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 616), float64] */, dtype="uint32") /* ty=Tensor[(1, 616), uint32] */;
    %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %794 = logical_xor(%792, %793) /* ty=Tensor[(?, 616), uint32] */;
    %795 = cast(%794, dtype="float64") /* ty=Tensor[(?, 616), float64] */;
    %796 = asinh(%795) /* ty=Tensor[(?, 616), float64] */;
    %797 = cast(%796, dtype="bool") /* ty=Tensor[(?, 616), bool] */;
    %798 = cast(%var_6917, dtype="bool") /* ty=Tensor[(12, 616), bool] */;
    %799 = %772.0;
    %800 = %773.0;
    %801 = %776.2;
    %802 = %777.0;
    %803 = @func_6106() /* ty=Tensor[(2, 10, 13), float64] */;
    %804 = %778.0;
    %805 = logical_or(%783, %784) /* ty=Tensor[(?, 616), bool] */;
    %806 = logical_or(%797, %798) /* ty=Tensor[(12, 616), bool] */;
    (%799, %800, -1.9651f64 /* ty=float64 */, %801, meta[relay.Constant][31] /* ty=Tensor[(528), float64] */, %802, %803, %804, %805, %806)
  };
  %807(%var_6926) /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], float64, Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), float64], Tensor[(?, 616), bool], Tensor[(12, 616), bool]) */
}

def @func_12637(%var_12635: Tensor[(1, 5, 8), float32]) -> (Tensor[(1, 5, 8), float32], Tensor[(2, 10, 13), float64]) {
  @func_12634(%var_12635) /* ty=(Tensor[(1, 5, 8), float32], Tensor[(2, 10, 13), float64]) */
}

def @func_12733() -> (Tensor[(2, 10, 13), float32],) {
  @func_12731() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_15917() -> Tensor[(2, 10, 13), float32] {
  @func_15915() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_12047(%var_12046: Tensor[(1568), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(1568), float64], Tensor[(528), float64], Tensor[(2160), float32]) {
  %819 = fn (%var_12007: Tensor[(1568), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(1568), float64], Tensor[(528), float64], Tensor[(2160), float32]) {
    %808 = cast(meta[relay.Constant][33] /* ty=Tensor[(2160), float64] */, dtype="float64") /* ty=Tensor[(2160), float64] */;
    %809 = cast(%var_12007, dtype="float64") /* ty=Tensor[(1568), float64] */;
    %810 = cast(meta[relay.Constant][34] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
    %811 = reshape(%808, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
    %812 = reshape(%809, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
    %813 = reshape(%810, newshape=[528]) /* ty=Tensor[(528), float64] */;
    %814 = @func_8397(%811, %812, %813) /* ty=(Tensor[(16, 9, 15), int16], Tensor[(14, 7, 16), float64], Tensor[(1568), float64], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(13, 15, 1), float64], Tensor[(195), float64]) */;
    %815 = cast(meta[relay.Constant][33] /* ty=Tensor[(2160), float64] */, dtype="float32") /* ty=Tensor[(2160), float32] */;
    %816 = @func_1808() /* ty=Tensor[(2, 10, 13), float32] */;
    %817 = %814.2;
    %818 = asinh(%815) /* ty=Tensor[(2160), float32] */;
    (%816, %817, %var_12007, meta[relay.Constant][34] /* ty=Tensor[(528), float64] */, %818)
  };
  %819(%var_12046) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(1568), float64], Tensor[(528), float64], Tensor[(2160), float32]) */
}

def @func_13412() -> (Tensor[(2, 10, 13), float32],) {
  @func_13410() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_14988() -> Tensor[(2, 10, 13), float32] {
  %821 = fn () -> Tensor[(2, 10, 13), float32] {
    %820 = @func_9301() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %820.0
  };
  %821() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_9703(%var_9675: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), bool], Tensor[(2, 10, 13), float32]) {
  %822 = @func_7460() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %823 = @func_7959() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(1, 528), float64]) */;
  %824 = cast(%var_9675, dtype="float64") /* ty=Tensor[(528), float64] */;
  %825 = reshape(%824, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %826 = @func_5603(%825) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
  %827 = @func_2675() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %828 = cast(%var_9675, dtype="uint64") /* ty=Tensor[(528), uint64] */;
  %829 = reshape(%828, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), uint64] */;
  %830 = @func_6675() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %831 = @func_4802() /* ty=Tensor[(2, 10, 13), float32] */;
  %832 = %822.0;
  %833 = %823.0;
  %834 = %826.1;
  %835 = %827.0;
  %836 = @func_4995(%829) /* ty=Tensor[(4, 11, 12), bool] */;
  %837 = %830.0;
  (%831, %832, %833, %834, %var_9675, %835, %836, %837)
}

def @func_14633() -> (Tensor[(2, 10, 13), float32],) {
  %838 = @func_14105() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %839 = %838.2;
  (%839,)
}

def @func_10361() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %845 = fn () -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %840 = @func_5801() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
    %841 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %842 = %840.0;
    %843 = %841.0;
    %844 = @func_2446() /* ty=Tensor[(2, 10, 13), float32] */;
    (%842, %843, %844)
  };
  %845() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_8926() -> (Tensor[(2, 10, 13), float64],) {
  %848 = fn () -> (Tensor[(2, 10, 13), float64],) {
    %846 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
    %847 = %846.1;
    (%847,)
  };
  %848() /* ty=(Tensor[(2, 10, 13), float64],) */
}

def @func_13632(%var_13630: Tensor[(7, 7, 8), bool], %var_13631: Tensor[(7, 7, 8), bool]) -> (Tensor[(7, 7, 8), bool], Tensor[(2, 10, 13), float32], Tensor[(7, 7, 8), float64], Tensor[(3, 15, 3), int8], Tensor[(135), int8], Tensor[(4, 11, 12), bool], Tensor[(528), uint64]) {
  %872 = fn (%var_13568: Tensor[(7, 7, 8), bool], %var_13569: Tensor[(7, 7, 8), bool]) -> (Tensor[(7, 7, 8), bool], Tensor[(2, 10, 13), float32], Tensor[(7, 7, 8), float64], Tensor[(3, 15, 3), int8], Tensor[(135), int8], Tensor[(4, 11, 12), bool], Tensor[(528), uint64]) {
    %849 = cast(%var_13569, dtype="float32") /* ty=Tensor[(7, 7, 8), float32] */;
    %850 = erf(%849) /* ty=Tensor[(7, 7, 8), float32] */;
    %851 = cast(%var_13569, dtype="bool") /* ty=Tensor[(7, 7, 8), bool] */;
    %852 = shape_of(%var_13568, dtype="int32") /* ty=Tensor[(3), int32] */;
    %853 = cast(%var_13568, dtype="bool") /* ty=Tensor[(7, 7, 8), bool] */;
    %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %855 = logical_or(%853, %854) /* ty=Tensor[(7, 7, 8), bool] */;
    %856 = cast(%855, dtype="bool") /* ty=Tensor[(7, 7, 8), bool] */;
    %857 = shape_of(%850, dtype="int32") /* ty=Tensor[(3), int32] */;
    %858 = cast(%850, dtype="bool") /* ty=Tensor[(7, 7, 8), bool] */;
    %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %860 = @func_2279() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) */;
    %861 = cast(%850, dtype="float64") /* ty=Tensor[(7, 7, 8), float64] */;
    %862 = cast(meta[relay.Constant][35] /* ty=Tensor[(135), int8] */, dtype="int8") /* ty=Tensor[(135), int8] */;
    %863 = reshape(%862, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), int8] */;
    %864 = @func_9362(%863) /* ty=(Tensor[(3, 15, 3), int8],) */;
    %865 = cast(meta[relay.Constant][36] /* ty=Tensor[(528), uint64] */, dtype="uint64") /* ty=Tensor[(528), uint64] */;
    %866 = reshape(%865, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), uint64] */;
    %867 = greater_equal(%858, %859) /* ty=Tensor[(7, 7, 8), bool] */;
    %868 = %860.1;
    %869 = atan(%861) /* ty=Tensor[(7, 7, 8), float64] */;
    %870 = %864.0;
    %871 = @func_4995(%866) /* ty=Tensor[(4, 11, 12), bool] */;
    (%867, %868, %869, %870, meta[relay.Constant][35] /* ty=Tensor[(135), int8] */, %871, meta[relay.Constant][36] /* ty=Tensor[(528), uint64] */)
  };
  %872(%var_13630, %var_13631) /* ty=(Tensor[(7, 7, 8), bool], Tensor[(2, 10, 13), float32], Tensor[(7, 7, 8), float64], Tensor[(3, 15, 3), int8], Tensor[(135), int8], Tensor[(4, 11, 12), bool], Tensor[(528), uint64]) */
}

def @func_11988(%var_11987: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(7, 3, 15), bool], Tensor[(315), float32], Tensor[(2, 10, 13), float32]) {
  %886 = fn (%var_11953: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(7, 3, 15), bool], Tensor[(315), float32], Tensor[(2, 10, 13), float32]) {
    %873 = @func_9968() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %874 = cast(%var_11953, dtype="float64") /* ty=Tensor[(528), float64] */;
    %875 = reshape(%874, newshape=[2, 264]) /* ty=Tensor[(2, 264), float64] */;
    %876 = @func_5281(%875) /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 264), float64]) */;
    %877 = @func_1328() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
    %878 = cast(meta[relay.Constant][37] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
    %879 = reshape(%878, newshape=[7, 3, 15]) /* ty=Tensor[(7, 3, 15), float32] */;
    %880 = @func_6603() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %881 = %873.1;
    %882 = %876.3;
    %883 = %877.0;
    %884 = @func_7302(%879) /* ty=Tensor[(7, 3, 15), bool] */;
    %885 = %880.0;
    (%881, %882, %var_11953, %883, %884, meta[relay.Constant][37] /* ty=Tensor[(315), float32] */, %885)
  };
  %886(%var_11987) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(7, 3, 15), bool], Tensor[(315), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_6125() -> Tensor[(2, 10, 13), float32] {
  %887 = @func_1005() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %887.0
}

def @func_8657() -> (Tensor[(2, 10, 13), float32],) {
  %888 = @func_5824() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %889 = %888.0;
  (%889,)
}

def @func_14231() -> Tensor[(2, 10, 13), float32] {
  @func_14229() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_2008() -> (Tensor[(2, 10, 13), float64],) {
  %892 = fn () -> (Tensor[(2, 10, 13), float64],) {
    %890 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
    %891 = %890.1;
    (%891,)
  };
  %892() /* ty=(Tensor[(2, 10, 13), float64],) */
}

def @func_12147() -> (Tensor[(2, 10, 13), float32],) {
  @func_12145() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_12775(%var_12773: Tensor[(14, 5, 15), int32], %var_12774: Tensor[(14, 5, 15), int32]) -> (Tensor[(14, 5, 15), float32], Tensor[(2, 10, 13), float32]) {
  %902 = fn (%var_12754: Tensor[(14, 5, 15), int32], %var_12755: Tensor[(14, 5, 15), int32]) -> (Tensor[(14, 5, 15), float32], Tensor[(2, 10, 13), float32]) {
    %893 = cast(%var_12755, dtype="bool") /* ty=Tensor[(14, 5, 15), bool] */;
    %894 = shape_of(%var_12754, dtype="int32") /* ty=Tensor[(3), int32] */;
    %895 = cast(%var_12754, dtype="bool") /* ty=Tensor[(14, 5, 15), bool] */;
    %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %897 = greater_equal(%895, %896) /* ty=Tensor[(14, 5, 15), bool] */;
    %898 = cast(%897, dtype="float32") /* ty=Tensor[(14, 5, 15), float32] */;
    %899 = @func_1873() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %900 = tan(%898) /* ty=Tensor[(14, 5, 15), float32] */;
    %901 = %899.1;
    (%900, %901)
  };
  %902(%var_12773, %var_12774) /* ty=(Tensor[(14, 5, 15), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_4677(%var_4670: Tensor[(7, 1, 8), float32]) -> Tensor[(7, 1, 8), float32] {
  %903 = cast(%var_4670, dtype="float32") /* ty=Tensor[(7, 1, 8), float32] */;
  cosh(%903) /* ty=Tensor[(7, 1, 8), float32] */
}

def @func_13148() -> Tensor[(2, 10, 13), float32] {
  @func_13146() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_10287() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_10285() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_2733() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %904 = @func_2279() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) */;
  %905 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %906 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %907 = %904.5;
  %908 = %905.0;
  %909 = %906.1;
  (%907, %908, %909)
}

def @func_5327() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) {
  %910 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %911 = cast(meta[relay.Constant][38] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %912 = reshape(%911, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
  %913 = @func_787(%912) /* ty=(Tensor[(4, 11, 12), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %914 = @func_3901() /* ty=Tensor[(2, 10, 13), float32] */;
  %915 = %910.0;
  %916 = %913.4;
  (%914, %915, %916, meta[relay.Constant][38] /* ty=Tensor[(528), float64] */)
}

def @func_7848(%var_7847: Tensor[(13, 15, 1), float64]) -> Tensor[(13, 15, 1), float64] {
  %918 = fn (%var_7843: Tensor[(13, 15, 1), float64]) -> Tensor[(13, 15, 1), float64] {
    %917 = cast(%var_7843, dtype="float64") /* ty=Tensor[(13, 15, 1), float64] */;
    acosh(%917) /* ty=Tensor[(13, 15, 1), float64] */
  };
  %918(%var_7847) /* ty=Tensor[(13, 15, 1), float64] */
}

def @func_4802() -> Tensor[(2, 10, 13), float32] {
  @func_2029() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_6189() -> (Tensor[(2, 10, 13), float32],) {
  %921 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %919 = @func_5327() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
    %920 = %919.0;
    (%920,)
  };
  %921() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_6603() -> (Tensor[(2, 10, 13), float32],) {
  %922 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %923 = %922.0;
  (%923,)
}

def @func_8274() -> (Tensor[(2, 10, 13), float32],) {
  %926 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %924 = @func_5327() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
    %925 = %924.2;
    (%925,)
  };
  %926() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_540() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %927 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %928 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %929 = %927.1;
  %930 = %928.1;
  (%929, %930)
}

def @func_2830() -> (Tensor[(4, 11, 12), float64],) {
  %933 = fn () -> (Tensor[(4, 11, 12), float64],) {
    %931 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
    %932 = %931.0;
    (%932,)
  };
  %933() /* ty=(Tensor[(4, 11, 12), float64],) */
}

def @func_9652() -> (Tensor[(2, 10, 13), float32],) {
  %936 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %934 = @func_2171() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %935 = %934.1;
    (%935,)
  };
  %936() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_8870() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %941 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %937 = @func_8092() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %938 = @func_1005() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
    %939 = %937.0;
    %940 = %938.0;
    (%939, %940)
  };
  %941() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_5482() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %942 = @func_2029() /* ty=Tensor[(2, 10, 13), float32] */;
  %943 = @func_2433() /* ty=Tensor[(2, 10, 13), float32] */;
  (%942, %943)
}

def @func_5428() -> Tensor[(2, 10, 13), int8] {
  %944 = @func_3561() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) */;
  %944.1
}

def @func_10523() -> (Tensor[(2, 10, 13), float32],) {
  %947 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %945 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %946 = %945.0;
    (%946,)
  };
  %947() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_11141(%var_11119: float64, %var_11120: Tensor[(616), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(11, 8, 7), bool], float64, Tensor[(616), float64], Tensor[(528), float64], Tensor[(2366), bool]) {
  %948 = @func_1083() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %949 = cast(%var_11119, dtype="float64") /* ty=float64 */;
  %950 = cast(%var_11120, dtype="float64") /* ty=Tensor[(616), float64] */;
  %951 = reshape(%949, newshape=[]) /* ty=float64 */;
  %952 = reshape(%950, newshape=[11, 8, 7]) /* ty=Tensor[(11, 8, 7), float64] */;
  %953 = cast(meta[relay.Constant][39] /* ty=Tensor[(2366), bool] */, dtype="bool") /* ty=Tensor[(2366), bool] */;
  %954 = cast(meta[relay.Constant][39] /* ty=Tensor[(2366), bool] */, dtype="bool") /* ty=Tensor[(2366), bool] */;
  %955 = reshape(%953, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), bool] */;
  %956 = reshape(%954, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), bool] */;
  %957 = @func_5986(%955, %956) /* ty=(Tensor[(14, 13, 13), int16], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) */;
  %958 = %948.0;
  %959 = @func_5012(%951, %952) /* ty=Tensor[(11, 8, 7), bool] */;
  %960 = %957.1;
  (%958, %959, %var_11119, %var_11120, %960, meta[relay.Constant][39] /* ty=Tensor[(2366), bool] */)
}

def @func_6429() -> Tensor[(2, 10, 13), float32] {
  %961 = fn () -> Tensor[(2, 10, 13), float32] {
    @func_2746() /* ty=Tensor[(2, 10, 13), float32] */
  };
  %961() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_2747() -> Tensor[(2, 10, 13), float32] {
  %962 = fn () -> Tensor[(2, 10, 13), float32] {
    @func_616() /* ty=Tensor[(2, 10, 13), float32] */
  };
  %962() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_1166() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) {
  %969 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) {
    %963 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %964 = cast(meta[relay.Constant][40] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
    %965 = reshape(%964, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
    %966 = @func_787(%965) /* ty=(Tensor[(4, 11, 12), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %967 = %963.0;
    %968 = %966.2;
    (%967, %968, meta[relay.Constant][40] /* ty=Tensor[(528), float64] */)
  };
  %969() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */
}

def @func_12362() -> (Tensor[(2, 10, 13), float64],) {
  %972 = fn () -> (Tensor[(2, 10, 13), float64],) {
    %970 = @func_7836() /* ty=(Tensor[(2, 10, 13), float64],) */;
    %971 = %970.0;
    (%971,)
  };
  %972() /* ty=(Tensor[(2, 10, 13), float64],) */
}

def @func_8632() -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) {
  %979 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) {
    %973 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %974 = @func_2829() /* ty=(Tensor[(4, 11, 12), float64],) */;
    %975 = @func_1083() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %976 = %973.0;
    %977 = %974.0;
    %978 = %975.1;
    (%976, %977, %978)
  };
  %979() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_10491() -> Tensor[(2, 10, 13), bool] {
  %980 = @func_6068() /* ty=(Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), int8]) */;
  %980.0
}

def @func_9706(%var_9704: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), bool], Tensor[(2, 10, 13), float32]) {
  @func_9703(%var_9704) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), bool], Tensor[(2, 10, 13), float32]) */
}

def @func_14919(%var_14898: Tensor[(420), uint8], %var_14904: Tensor[(858), float32]) -> (Tensor[(2, 10, 13), float32], Tensor[(10, 14, 3), uint8], Tensor[(420), uint8], Tensor[(2, 10, 13), float64], Tensor[(78), int16], Tensor[(11, 6, 13), float32], Tensor[(858), float32]) {
  %981 = @func_9514() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %982 = cast(%var_14898, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %983 = cast(%var_14898, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %984 = reshape(%982, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), uint8] */;
  %985 = reshape(%983, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), uint8] */;
  %986 = @func_11903(%984, %985) /* ty=(Tensor[(10, 14, 3), uint8],) */;
  %987 = cast(meta[relay.Constant][41] /* ty=Tensor[(78), int16] */, dtype="int16") /* ty=Tensor[(78), int16] */;
  %988 = reshape(%987, newshape=[78]) /* ty=Tensor[(78), int16] */;
  %989 = @func_14479(%988) /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(78), int16], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %990 = cast(%var_14904, dtype="float32") /* ty=Tensor[(858), float32] */;
  %991 = reshape(%990, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
  %992 = @func_9165(%991) /* ty=(Tensor[(11, 6, 13), float32],) */;
  %993 = %981.0;
  %994 = %986.0;
  %995 = %989.4;
  %996 = %992.0;
  (%993, %994, %var_14898, %995, meta[relay.Constant][41] /* ty=Tensor[(78), int16] */, %996, %var_14904)
}

def @func_14400() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %1001 = fn () -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
    %997 = @func_14248() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
    %998 = @func_5824() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
    %999 = %997.0;
    %1000 = %998.0;
    (%999, %1000)
  };
  %1001() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_9970() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_9968() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_12924(%var_12922: Tensor[(3, 15, 3), int8]) -> (Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(3, 15, 3), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_12921(%var_12922) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(3, 15, 3), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_2382() -> Tensor[(2, 10, 13), float32] {
  %1003 = fn () -> Tensor[(2, 10, 13), float32] {
    %1002 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
    %1002.1
  };
  %1003() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_6069() -> (Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), int8]) {
  %1008 = fn () -> (Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), int8]) {
    %1004 = @func_5123() /* ty=(Tensor[(2, 10, 13), bool],) */;
    %1005 = @func_3561() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) */;
    %1006 = %1004.0;
    %1007 = %1005.1;
    (%1006, %1007)
  };
  %1008() /* ty=(Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), int8]) */
}

def @func_15990(%var_15981: Tensor[(9, 2, 3), float64]) -> Tensor[(9, 2, 3), bool] {
  %1009 = cast(-7.15085f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %1010 = cast(%var_15981, dtype="bool") /* ty=Tensor[(9, 2, 3), bool] */;
  not_equal(%1009, %1010) /* ty=Tensor[(9, 2, 3), bool] */
}

def @func_1005() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %1011 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1012 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
  %1013 = cast(%1012, dtype="float64") /* ty=Tensor[(2, 10, 13), float64] */;
  %1014 = %1011.0;
  %1015 = rsqrt(%1013) /* ty=Tensor[(2, 10, 13), float64] */;
  (%1014, %1015)
}

def @func_4514() -> (Tensor[(2, 10, 13), float32],) {
  @func_4512() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_10070() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1016 = @func_6603() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1017 = @func_4773() /* ty=Tensor[(2, 10, 13), float32] */;
  %1018 = %1016.0;
  (%1017, %1018)
}

def @func_10852() -> (Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) {
  %1019 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %1020 = %1019.0;
  %1021 = @func_9081() /* ty=Tensor[(2, 10, 13), float32] */;
  (%1020, %1021)
}

def @func_11282() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_11280() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_16419() -> (Tensor[(2, 10, 13), float32],) {
  %1022 = @func_4538() /* ty=Tensor[(2, 10, 13), float32] */;
  (%1022,)
}

def @func_3902() -> Tensor[(2, 10, 13), float32] {
  %1023 = fn () -> Tensor[(2, 10, 13), float32] {
    @func_616() /* ty=Tensor[(2, 10, 13), float32] */
  };
  %1023() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_2676() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %1028 = fn () -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
    %1024 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
    %1025 = @func_1911() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1026 = %1024.1;
    %1027 = %1025.1;
    (%1026, %1027)
  };
  %1028() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_14369() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1029 = @func_3019() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
  %1030 = @func_11429() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1031 = %1029.1;
  %1032 = %1030.0;
  (%1031, %1032)
}

def @func_16421() -> (Tensor[(2, 10, 13), float32],) {
  @func_16419() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_16086() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(300, 1), float64], Tensor[(15, 10, 10), float32]) {
  @func_16084() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(300, 1), float64], Tensor[(15, 10, 10), float32]) */
}

def @func_5284(%var_5282: Tensor[(2, 264), float64]) -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 264), float64]) {
  @func_5281(%var_5282) /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 264), float64]) */
}

def @func_15492() -> (Tensor[(2, 10, 13), float32],) {
  @func_15490() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_15686(%var_15684: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(2160), float64], Tensor[(1568), float64], Tensor[(528), float64]) {
  @func_15683(%var_15684) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(2160), float64], Tensor[(1568), float64], Tensor[(528), float64]) */
}

def @func_6167() -> (Tensor[(2, 10, 13), float32],) {
  @func_6165() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_1363() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_11280() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1033 = @func_1741() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1034 = @func_8092() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1035 = %1033.0;
  %1036 = %1034.0;
  (%1035, %1036)
}

def @func_4538() -> Tensor[(2, 10, 13), float32] {
  %1037 = @func_2662() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1037.0
}

def @func_2371(%var_2370: Tensor[(2, 10, 13), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), bool]) {
  %1052 = fn (%var_2340: Tensor[(2, 10, 13), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), bool]) {
    %1038 = @func_1274() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %1039 = @func_2007() /* ty=(Tensor[(2, 10, 13), float64],) */;
    %1040 = %1039.0;
    %1041 = cast(%var_2340, dtype="int64") /* ty=Tensor[(2, 10, 13), int64] */;
    %1042 = shape_of(%1040, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1043 = cast(%1040, dtype="int64") /* ty=Tensor[(2, 10, 13), int64] */;
    %1044 = dyn.reshape(%1041, %1042, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1045 = maximum(%1043, %1044) /* ty=Tensor[(2, 10, 13), int64] */;
    %1046 = cast(%var_2340, dtype="bool") /* ty=Tensor[(2, 10, 13), bool] */;
    %1047 = shape_of(%1045, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1048 = cast(%1045, dtype="bool") /* ty=Tensor[(2, 10, 13), bool] */;
    %1049 = dyn.reshape(%1046, %1047, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1050 = %1038.0;
    %1051 = equal(%1048, %1049) /* ty=Tensor[(2, 10, 13), bool] */;
    (%1050, %1051)
  };
  %1052(%var_2370) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), bool]) */
}

def @func_7703() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1056 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %1053 = @func_3628() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1054 = %1053.1;
    %1055 = @func_4802() /* ty=Tensor[(2, 10, 13), float32] */;
    (%1054, %1055)
  };
  %1056() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_15081(%var_15079: Tensor[(12, 1, 11), bool], %var_15080: Tensor[(12, 15, 11), bool]) -> (Tensor[(12, 15, 11), bool], Tensor[(2, 10, 13), float32]) {
  %1062 = fn (%var_15065: Tensor[(12, 1, 11), bool], %var_15066: Tensor[(12, 15, 11), bool]) -> (Tensor[(12, 15, 11), bool], Tensor[(2, 10, 13), float32]) {
    %1057 = cast(%var_15065, dtype="bool") /* ty=Tensor[(12, 1, 11), bool] */;
    %1058 = cast(%var_15066, dtype="bool") /* ty=Tensor[(12, 15, 11), bool] */;
    %1059 = @func_14369() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1060 = logical_and(%1057, %1058) /* ty=Tensor[(12, 15, 11), bool] */;
    %1061 = %1059.1;
    (%1060, %1061)
  };
  %1062(%var_15079, %var_15080) /* ty=(Tensor[(12, 15, 11), bool], Tensor[(2, 10, 13), float32]) */
}

def @func_14106() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1070 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %1063 = @func_10463() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) */;
    %1064 = @func_6675() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %1065 = @func_9301() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %1066 = %1063.0;
    %1067 = %1064.0;
    %1068 = %1065.0;
    %1069 = @func_4582() /* ty=Tensor[(2, 10, 13), float32] */;
    (%1066, %1067, %1068, %1069)
  };
  %1070() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_1636(%var_1635: Tensor[(4, 11, 12), float64]) -> Tensor[(4, 11, 12), float32] {
  %1077 = fn (%var_1604: Tensor[(4, 11, 12), float64]) -> Tensor[(4, 11, 12), float32] {
    %1071 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
    %1072 = %1071.0;
    %1073 = cast(%var_1604, dtype="float32") /* ty=Tensor[(4, 11, 12), float32] */;
    %1074 = shape_of(%1072, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1075 = cast(%1072, dtype="float32") /* ty=Tensor[(4, 11, 12), float32] */;
    %1076 = dyn.reshape(%1073, %1074, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%1075, %1076) /* ty=Tensor[(4, 11, 12), float32] */
  };
  %1077(%var_1635) /* ty=Tensor[(4, 11, 12), float32] */
}

def @func_6947(%var_6945: Tensor[(5, 10, 1), float32], %var_6946: Tensor[(5, 10, 9), float32]) -> (Tensor[(5, 10, 9), bool],) {
  @func_6943(%var_6945, %var_6946) /* ty=(Tensor[(5, 10, 9), bool],) */
}

def @func_5503() -> (Tensor[(2, 10, 13), float32],) {
  %1080 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %1078 = @func_3561() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) */;
    %1079 = %1078.0;
    (%1079,)
  };
  %1080() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_15121() -> (Tensor[(2, 10, 13), float64],) {
  %1081 = @func_4035() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %1082 = %1081.0;
  (%1082,)
}

def @func_4452() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1087 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %1083 = @func_540() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1084 = @func_3019() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
    %1085 = %1083.1;
    %1086 = %1084.1;
    (%1085, %1086)
  };
  %1087() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_5711(%var_5709: Tensor[(7, 6, 6), int8]) -> (Tensor[(7, 6, 6), bool],) {
  @func_5708(%var_5709) /* ty=(Tensor[(7, 6, 6), bool],) */
}

def @func_6127() -> Tensor[(2, 10, 13), float32] {
  @func_6125() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_7302(%var_7295: Tensor[(7, 3, 15), float32]) -> Tensor[(7, 3, 15), bool] {
  %1088 = cast(meta[relay.Constant][42] /* ty=Tensor[(7, 3, 15), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 15), float32] */;
  %1089 = sqrt(%1088) /* ty=Tensor[(7, 3, 15), float32] */;
  %1090 = cast(%var_7295, dtype="bool") /* ty=Tensor[(7, 3, 15), bool] */;
  %1091 = shape_of(%1089, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1092 = cast(%1089, dtype="bool") /* ty=Tensor[(7, 3, 15), bool] */;
  %1093 = dyn.reshape(%1090, %1091, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1092, %1093) /* ty=Tensor[(7, 3, 15), bool] */
}

def @func_6783() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1098 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %1094 = @func_5146() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %1095 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %1096 = %1094.0;
    %1097 = %1095.0;
    (%1096, %1097)
  };
  %1098() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_3386(%var_3385: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), int32], Tensor[(2, 10, 13), float32]) {
  %1120 = fn (%var_3303: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), int32], Tensor[(2, 10, 13), float32]) {
    %1099 = @func_2662() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1100 = @func_2171() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1101 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %1102 = @func_2926() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
    %1103 = cast(%var_3303, dtype="float64") /* ty=Tensor[(528), float64] */;
    %1104 = reshape(%1103, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
    %1105 = @func_1634(%1104) /* ty=Tensor[(4, 11, 12), float32] */;
    %1106 = cast(%1105, dtype="float64") /* ty=Tensor[(4, 11, 12), float64] */;
    %1107 = log2(%1106) /* ty=Tensor[(4, 11, 12), float64] */;
    %1108 = cast(%1105, dtype="int32") /* ty=Tensor[(4, 11, 12), int32] */;
    %1109 = shape_of(%1107, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1110 = cast(%1107, dtype="int32") /* ty=Tensor[(4, 11, 12), int32] */;
    %1111 = dyn.reshape(%1108, %1109, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1112 = @func_2279() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) */;
    %1113 = %1099.0;
    %1114 = %1100.1;
    %1115 = %1101.0;
    %1116 = %1102.0;
    %1117 = @func_2522() /* ty=Tensor[(2, 10, 13), float64] */;
    %1118 = maximum(%1110, %1111) /* ty=Tensor[(4, 11, 12), int32] */;
    %1119 = %1112.0;
    (%1113, %var_3303, %1114, %1115, %1116, %1117, %1118, %1119)
  };
  %1120(%var_3385) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), int32], Tensor[(2, 10, 13), float32]) */
}

def @func_7234() -> Tensor[(2, 10, 13), float32] {
  @func_7232() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_11382(%var_11374: Tensor[(1, 15, 5), float64]) -> Tensor[(1, 15, 5), float64] {
  %1121 = cast(%var_11374, dtype="float64") /* ty=Tensor[(1, 15, 5), float64] */;
  log2(%1121) /* ty=Tensor[(1, 15, 5), float64] */
}

def @func_13018() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %1128 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
    %1122 = @func_5381() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 11, 9), bool], Tensor[(2, 10, 13), float32]) */;
    %1123 = @func_2662() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1124 = @func_7836() /* ty=(Tensor[(2, 10, 13), float64],) */;
    %1125 = %1122.2;
    %1126 = %1123.1;
    %1127 = %1124.0;
    (%1125, %1126, %1127)
  };
  %1128() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */
}

def @func_6151(%var_6143: Tensor[(7, 10, 13), float32], %var_6144: Tensor[(7, 10, 13), float32]) -> (Tensor[(7, 10, 13), float32],) {
  %1129 = cast(%var_6144, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %1130 = shape_of(%var_6143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1131 = cast(%var_6143, dtype="float32") /* ty=Tensor[(7, 10, 13), float32] */;
  %1132 = dyn.reshape(%1129, %1130, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1133 = floor_divide(%1131, %1132) /* ty=Tensor[(7, 10, 13), float32] */;
  (%1133,)
}

def @func_12921(%var_12851: Tensor[(3, 15, 3), int8]) -> (Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(3, 15, 3), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1134 = @func_8499() /* ty=Tensor[(528), float64] */;
  %1135 = cast(%1134, dtype="float64") /* ty=Tensor[(528), float64] */;
  %1136 = reshape(%1135, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %1137 = @func_5603(%1136) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
  %1138 = @func_11573() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(3, 15, 3), int8], Tensor[(3, 45), int8]) */;
  %1139 = %1138.2;
  %1140 = cast(%var_12851, dtype="float64") /* ty=Tensor[(3, 15, 3), float64] */;
  %1141 = shape_of(%1139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1142 = cast(%1139, dtype="float64") /* ty=Tensor[(3, 15, 3), float64] */;
  %1143 = dyn.reshape(%1140, %1141, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1144 = @func_10852() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %1145 = @func_10522() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1146 = @func_10737() /* ty=Tensor[(2, 10, 13), float32] */;
  %1147 = @func_10737() /* ty=Tensor[(2, 10, 13), float32] */;
  %1148 = %1137.1;
  %1149 = floor_divide(%1142, %1143) /* ty=Tensor[(3, 15, 3), float64] */;
  %1150 = %1144.1;
  %1151 = @func_2381() /* ty=Tensor[(2, 10, 13), float32] */;
  %1152 = %1145.0;
  (%1146, %1134, %1147, %1148, %1149, %1150, %1151, %1152)
}

def @func_8705() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1157 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %1153 = @func_7881() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %1154 = @func_2662() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1155 = %1153.0;
    %1156 = %1154.1;
    (%1155, %1156)
  };
  %1157() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_9764(%var_9763: Tensor[(1, 195), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(13, 15, 1), float64], Tensor[(1, 195), float32], Tensor[(2, 10, 13), float32]) {
  %1167 = fn (%var_9733: Tensor[(1, 195), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(13, 15, 1), float64], Tensor[(1, 195), float32], Tensor[(2, 10, 13), float32]) {
    %1158 = @func_1873() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1159 = cast(%var_9733, dtype="float64") /* ty=Tensor[(1, 195), float64] */;
    %1160 = reshape(%1159, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), float64] */;
    %1161 = cast(%var_9733, dtype="float32") /* ty=Tensor[(1, 195), float32] */;
    %1162 = @func_7634() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) */;
    %1163 = %1158.0;
    %1164 = @func_7846(%1160) /* ty=Tensor[(13, 15, 1), float64] */;
    %1165 = erf(%1161) /* ty=Tensor[(1, 195), float32] */;
    %1166 = %1162.0;
    (%1163, %1164, %1165, %1166)
  };
  %1167(%var_9763) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(13, 15, 1), float64], Tensor[(1, 195), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_4904() -> (Tensor[(2, 10, 13), float64],) {
  %1169 = fn () -> (Tensor[(2, 10, 13), float64],) {
    %1168 = @func_2522() /* ty=Tensor[(2, 10, 13), float64] */;
    (%1168,)
  };
  %1169() /* ty=(Tensor[(2, 10, 13), float64],) */
}

def @func_14479(%var_14441: Tensor[(78), int16]) -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(78), int16], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %1170 = @func_4903() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %1171 = cast(%var_14441, dtype="int16") /* ty=Tensor[(78), int16] */;
  %1172 = cast(%var_14441, dtype="int16") /* ty=Tensor[(78), int16] */;
  %1173 = reshape(%1171, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), int16] */;
  %1174 = reshape(%1172, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), int16] */;
  %1175 = @func_11666(%1173, %1174) /* ty=(Tensor[(2, 13, 3), int16], Tensor[(2, 10, 13), float32]) */;
  %1176 = @func_10360() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1177 = @func_6223() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
  %1178 = @func_14105() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1179 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
  %1180 = %1170.0;
  %1181 = %1175.1;
  %1182 = %1176.1;
  %1183 = %1177.0;
  %1184 = %1178.3;
  %1185 = %1179.1;
  (%1180, %1181, %var_14441, %1182, %1183, %1184, %1185)
}

def @func_4703() -> Tensor[(2, 10, 13), float32] {
  %1186 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1186.0
}

def @func_3965(%var_3963: Tensor[(1, 528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(1, 528), float64]) {
  @func_3962(%var_3963) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(1, 528), float64]) */
}

def @func_6391() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) {
  %1198 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) {
    %1187 = @func_4451() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1188 = @func_1083() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1189 = @func_5327() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
    %1190 = @func_3851() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1191 = @func_5327() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
    %1192 = %1187.1;
    %1193 = %1188.1;
    %1194 = %1189.3;
    %1195 = %1190.2;
    %1196 = %1191.2;
    %1197 = @func_5428() /* ty=Tensor[(2, 10, 13), int8] */;
    (%1192, %1193, %1194, %1195, %1196, %1197)
  };
  %1198() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), int8]) */
}

def @func_6554() -> Tensor[(2, 10, 13), float32] {
  @func_4802() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_11097(%var_11074: Tensor[(4), uint64], %var_11090: Tensor[(2, 264), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(4), uint64], Tensor[(4), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 264), float64]) {
  %1199 = @func_10522() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1200 = cast(%var_11074, dtype="uint64") /* ty=Tensor[(4), uint64] */;
  %1201 = reshape(%1200, newshape=[4]) /* ty=Tensor[(4), uint64] */;
  %1202 = @func_9049(%1201) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(4), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 2, 12), bool]) */;
  %1203 = @func_5482() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1204 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1205 = cast(%var_11090, dtype="float64") /* ty=Tensor[(2, 264), float64] */;
  %1206 = reshape(%1205, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %1207 = @func_9703(%1206) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), bool], Tensor[(2, 10, 13), float32]) */;
  %1208 = %1199.0;
  %1209 = %1202.2;
  %1210 = %1203.0;
  %1211 = %1204.1;
  %1212 = %1207.2;
  (%1208, %1209, %var_11074, %1210, %1211, %1212, %var_11090)
}

def @func_2297(%var_2285: Tensor[(14, 7, 16), float64]) -> (Tensor[(14, 7, 16), float64], Tensor[(2, 10, 13), float32]) {
  %1213 = cast(%var_2285, dtype="float64") /* ty=Tensor[(14, 7, 16), float64] */;
  %1214 = @func_1741() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1215 = log(%1213) /* ty=Tensor[(14, 7, 16), float64] */;
  %1216 = %1214.0;
  (%1215, %1216)
}

def @func_8169() -> Tensor[(2, 10, 13), float32] {
  %1218 = fn () -> Tensor[(2, 10, 13), float32] {
    %1217 = @func_8061() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) */;
    %1217.0
  };
  %1218() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_2279() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), uint64], Tensor[(8, 66), float64], Tensor[(2, 10, 13), float32]) {
  %1219 = @func_479() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1220 = @func_1361() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1221 = @func_2029() /* ty=Tensor[(2, 10, 13), float32] */;
  %1222 = cast(%1221, dtype="float64") /* ty=Tensor[(2, 10, 13), float64] */;
  %1223 = sqrt(%1222) /* ty=Tensor[(2, 10, 13), float64] */;
  %1224 = cast(%1223, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %1225 = cast(meta[relay.Constant][43] /* ty=Tensor[(8, 66), float64] */, dtype="float64") /* ty=Tensor[(8, 66), float64] */;
  %1226 = reshape(%1225, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
  %1227 = @func_787(%1226) /* ty=(Tensor[(4, 11, 12), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1228 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1229 = %1219.0;
  %1230 = %1220.0;
  %1231 = log10(%1224) /* ty=Tensor[(2, 10, 13), float32] */;
  %1232 = %1227.0;
  %1233 = %1228.0;
  (%1229, %1230, %1231, %1232, meta[relay.Constant][43] /* ty=Tensor[(8, 66), float64] */, %1233)
}

def @func_4037() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  @func_4035() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_11145(%var_11143: float64, %var_11144: Tensor[(616), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(11, 8, 7), bool], float64, Tensor[(616), float64], Tensor[(528), float64], Tensor[(2366), bool]) {
  @func_11141(%var_11143, %var_11144) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(11, 8, 7), bool], float64, Tensor[(616), float64], Tensor[(528), float64], Tensor[(2366), bool]) */
}

def @func_12731() -> (Tensor[(2, 10, 13), float32],) {
  %1234 = @func_1873() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1235 = %1234.0;
  (%1235,)
}

def @func_14249() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %1240 = fn () -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
    %1236 = @func_12361() /* ty=(Tensor[(2, 10, 13), float64],) */;
    %1237 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %1238 = %1236.0;
    %1239 = %1237.0;
    (%1238, %1239)
  };
  %1240() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_1085() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_1083() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_7361() -> (Tensor[(2, 10, 13), float32],) {
  @func_7359() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_10493() -> Tensor[(2, 10, 13), bool] {
  @func_10491() /* ty=Tensor[(2, 10, 13), bool] */
}

def @func_13385() -> (Tensor[(16, 9, 15), float64],) {
  %1243 = fn () -> (Tensor[(16, 9, 15), float64],) {
    %1241 = @func_5565() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) */;
    %1242 = %1241.1;
    (%1242,)
  };
  %1243() /* ty=(Tensor[(16, 9, 15), float64],) */
}

def @func_5148() -> (Tensor[(2, 10, 13), float32],) {
  @func_5146() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_3721() -> (Tensor[(2, 10, 13), float32],) {
  %1245 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %1244 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
    (%1244,)
  };
  %1245() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_5124() -> (Tensor[(2, 10, 13), bool],) {
  %1256 = fn () -> (Tensor[(2, 10, 13), bool],) {
    %1246 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %1247 = %1246.0;
    %1248 = cast(%1247, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
    %1249 = reshape(%1248, newshape=[2, 10, 13]) /* ty=Tensor[(2, 10, 13), float32] */;
    %1250 = @func_2861(%1249) /* ty=Tensor[(2, 10, 13), int16] */;
    %1251 = cast(%1250, dtype="bool") /* ty=Tensor[(2, 10, 13), bool] */;
    %1252 = shape_of(%1247, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1253 = cast(%1247, dtype="bool") /* ty=Tensor[(2, 10, 13), bool] */;
    %1254 = dyn.reshape(%1251, %1252, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1255 = logical_and(%1253, %1254) /* ty=Tensor[(2, 10, 13), bool] */;
    (%1255,)
  };
  %1256() /* ty=(Tensor[(2, 10, 13), bool],) */
}

def @func_13563() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) {
  %1257 = @func_10698() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(9, 5, 14), bool], Tensor[(2, 10, 13), float32]) */;
  %1258 = @func_4222() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %1259 = %1257.0;
  %1260 = %1258.0;
  (%1259, %1260)
}

def @func_15185() -> (Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64]) {
  @func_15183() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64]) */
}

def @func_15954(%var_15952: Tensor[(8, 16, 13), uint32]) -> (Tensor[(8, 16, 13), uint32], Tensor[(2, 10, 13), float32]) {
  @func_15951(%var_15952) /* ty=(Tensor[(8, 16, 13), uint32], Tensor[(2, 10, 13), float32]) */
}

def @func_9515() -> (Tensor[(2, 10, 13), float32],) {
  %1262 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %1261 = @func_6554() /* ty=Tensor[(2, 10, 13), float32] */;
    (%1261,)
  };
  %1262() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_15051() -> (Tensor[(2, 10, 13), float32],) {
  @func_15049() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_12634(%var_12626: Tensor[(1, 5, 8), float32]) -> (Tensor[(1, 5, 8), float32], Tensor[(2, 10, 13), float64]) {
  %1263 = cast(%var_12626, dtype="float32") /* ty=Tensor[(1, 5, 8), float32] */;
  %1264 = rsqrt(%1263) /* ty=Tensor[(1, 5, 8), float32] */;
  %1265 = @func_5028() /* ty=Tensor[(2, 10, 13), float64] */;
  (%1264, %1265)
}

def @func_15683(%var_15681: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(2160), float64], Tensor[(1568), float64], Tensor[(528), float64]) {
  %1266 = @func_9651() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1267 = cast(meta[relay.Constant][44] /* ty=Tensor[(2160), float64] */, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %1268 = cast(meta[relay.Constant][45] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %1269 = cast(%var_15681, dtype="float64") /* ty=Tensor[(528), float64] */;
  %1270 = reshape(%1267, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
  %1271 = reshape(%1268, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %1272 = reshape(%1269, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %1273 = @func_8397(%1270, %1271, %1272) /* ty=(Tensor[(16, 9, 15), int16], Tensor[(14, 7, 16), float64], Tensor[(1568), float64], Tensor[(528), float64], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(13, 15, 1), float64], Tensor[(195), float64]) */;
  %1274 = %1266.0;
  %1275 = %1273.2;
  (%1274, %1275, meta[relay.Constant][44] /* ty=Tensor[(2160), float64] */, meta[relay.Constant][45] /* ty=Tensor[(1568), float64] */, %var_15681)
}

def @func_11906(%var_11904: Tensor[(10, 14, 3), uint8], %var_11905: Tensor[(10, 14, 3), uint8]) -> (Tensor[(10, 14, 3), uint8],) {
  %1281 = fn (%var_11898: Tensor[(10, 14, 3), uint8], %var_11899: Tensor[(10, 14, 3), uint8]) -> (Tensor[(10, 14, 3), uint8],) {
    %1276 = cast(%var_11899, dtype="uint8") /* ty=Tensor[(10, 14, 3), uint8] */;
    %1277 = shape_of(%var_11898, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1278 = cast(%var_11898, dtype="uint8") /* ty=Tensor[(10, 14, 3), uint8] */;
    %1279 = dyn.reshape(%1276, %1277, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1280 = multiply(%1278, %1279) /* ty=Tensor[(10, 14, 3), uint8] */;
    (%1280,)
  };
  %1281(%var_11904, %var_11905) /* ty=(Tensor[(10, 14, 3), uint8],) */
}

def @func_2524() -> Tensor[(2, 10, 13), float64] {
  @func_2522() /* ty=Tensor[(2, 10, 13), float64] */
}

def @func_5281(%var_5272: Tensor[(2, 264), float64]) -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 264), float64]) {
  %1282 = @func_5241() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64]) */;
  %1283 = cast(meta[relay.Constant][46] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %1284 = reshape(%1283, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float64] */;
  %1285 = @func_2297(%1284) /* ty=(Tensor[(14, 7, 16), float64], Tensor[(2, 10, 13), float32]) */;
  %1286 = cast(%var_5272, dtype="float64") /* ty=Tensor[(2, 264), float64] */;
  %1287 = reshape(%1286, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %1288 = @func_3384(%1287) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(528), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(4, 11, 12), int32], Tensor[(2, 10, 13), float32]) */;
  %1289 = %1282.0;
  %1290 = %1285.1;
  %1291 = %1288.2;
  (%1289, %1290, meta[relay.Constant][46] /* ty=Tensor[(1568), float64] */, %1291, %var_5272)
}

def @func_11669(%var_11667: Tensor[(2, 13, 3), int16], %var_11668: Tensor[(2, 13, 3), int16]) -> (Tensor[(2, 13, 3), int16], Tensor[(2, 10, 13), float32]) {
  %1299 = fn (%var_11648: Tensor[(2, 13, 3), int16], %var_11649: Tensor[(2, 13, 3), int16]) -> (Tensor[(2, 13, 3), int16], Tensor[(2, 10, 13), float32]) {
    %1292 = cast(%var_11649, dtype="int16") /* ty=Tensor[(2, 13, 3), int16] */;
    %1293 = shape_of(%var_11648, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1294 = cast(%var_11648, dtype="int16") /* ty=Tensor[(2, 13, 3), int16] */;
    %1295 = dyn.reshape(%1292, %1293, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1296 = @func_11429() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1297 = add(%1294, %1295) /* ty=Tensor[(2, 13, 3), int16] */;
    %1298 = %1296.0;
    (%1297, %1298)
  };
  %1299(%var_11667, %var_11668) /* ty=(Tensor[(2, 13, 3), int16], Tensor[(2, 10, 13), float32]) */
}

def @func_11439() -> (Tensor[(528), float64],) {
  %1301 = fn () -> (Tensor[(528), float64],) {
    %1300 = @func_10836() /* ty=Tensor[(528), float64] */;
    (%1300,)
  };
  %1301() /* ty=(Tensor[(528), float64],) */
}

def @func_5915(%var_5913: Tensor[(9, 5, 3), uint64]) -> (Tensor[(9, 5, 3), bool], Tensor[(4, 11, 12), float64]) {
  @func_5912(%var_5913) /* ty=(Tensor[(9, 5, 3), bool], Tensor[(4, 11, 12), float64]) */
}

def @func_5146() -> (Tensor[(2, 10, 13), float32],) {
  %1302 = @func_2029() /* ty=Tensor[(2, 10, 13), float32] */;
  (%1302,)
}

def @func_9474() -> Tensor[(2, 10, 13), float32] {
  @func_9472() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_1275() -> (Tensor[(2, 10, 13), float32],) {
  %1304 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %1303 = @func_616() /* ty=Tensor[(2, 10, 13), float32] */;
    (%1303,)
  };
  %1304() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_2863(%var_2862: Tensor[(2, 10, 13), float32]) -> Tensor[(2, 10, 13), int16] {
  %1310 = fn (%var_2849: Tensor[(2, 10, 13), float32]) -> Tensor[(2, 10, 13), int16] {
    %1305 = @func_1808() /* ty=Tensor[(2, 10, 13), float32] */;
    %1306 = cast(%var_2849, dtype="int16") /* ty=Tensor[(2, 10, 13), int16] */;
    %1307 = shape_of(%1305, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1308 = cast(%1305, dtype="int16") /* ty=Tensor[(2, 10, 13), int16] */;
    %1309 = dyn.reshape(%1306, %1307, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    minimum(%1308, %1309) /* ty=Tensor[(2, 10, 13), int16] */
  };
  %1310(%var_2862) /* ty=Tensor[(2, 10, 13), int16] */
}

def @func_7329(%var_7328: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(528), float64]) {
  %1316 = fn (%var_7322: Tensor[(528), float64]) -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(528), float64]) {
    %1311 = @func_5327() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) */;
    %1312 = cast(%var_7322, dtype="float64") /* ty=Tensor[(528), float64] */;
    %1313 = reshape(%1312, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
    %1314 = %1311.0;
    %1315 = @func_1634(%1313) /* ty=Tensor[(4, 11, 12), float32] */;
    (%1314, %1315, %var_7322)
  };
  %1316(%var_7328) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float32], Tensor[(528), float64]) */
}

def @func_9631() -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  %1317 = @func_5502() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1318 = @func_7919() /* ty=(Tensor[(4, 11, 12), float64],) */;
  %1319 = %1317.0;
  %1320 = %1318.0;
  (%1319, %1320)
}

def @func_15647() -> Tensor[(2, 10, 13), float64] {
  %1322 = fn () -> Tensor[(2, 10, 13), float64] {
    %1321 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
    %1321.1
  };
  %1322() /* ty=Tensor[(2, 10, 13), float64] */
}

def @func_7734() -> (Tensor[(2, 10, 13), bool], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  %1323 = @func_5123() /* ty=(Tensor[(2, 10, 13), bool],) */;
  %1324 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1325 = @func_2829() /* ty=(Tensor[(4, 11, 12), float64],) */;
  %1326 = %1323.0;
  %1327 = %1324.0;
  %1328 = %1325.0;
  (%1326, %1327, %1328)
}

def @func_12720() -> Tensor[(2, 10, 13), float32] {
  %1330 = fn () -> Tensor[(2, 10, 13), float32] {
    %1329 = @func_11786() /* ty=(Tensor[(3, 14, 16), float64], Tensor[(3, 14, 16), bool], Tensor[(3, 14, 16), float32], Tensor[(2, 10, 13), float32]) */;
    %1329.3
  };
  %1330() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_11573() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(3, 15, 3), int8], Tensor[(3, 45), int8]) {
  %1331 = @func_10522() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1332 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 45), int8] */, dtype="int8") /* ty=Tensor[(3, 45), int8] */;
  %1333 = reshape(%1332, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), int8] */;
  %1334 = @func_9362(%1333) /* ty=(Tensor[(3, 15, 3), int8],) */;
  %1335 = %1331.0;
  %1336 = @func_4201() /* ty=Tensor[(2, 10, 13), float32] */;
  %1337 = %1334.0;
  (%1335, %1336, %1337, meta[relay.Constant][47] /* ty=Tensor[(3, 45), int8] */)
}

def @func_14967(%var_14966: Tensor[(5, 6, 12), float64]) -> (Tensor[(5, 6, 12), float64], Tensor[(2, 10, 13), float64]) {
  %1341 = fn (%var_14949: Tensor[(5, 6, 12), float64]) -> (Tensor[(5, 6, 12), float64], Tensor[(2, 10, 13), float64]) {
    %1338 = cast(%var_14949, dtype="float64") /* ty=Tensor[(5, 6, 12), float64] */;
    %1339 = acos(%1338) /* ty=Tensor[(5, 6, 12), float64] */;
    %1340 = @func_13269() /* ty=Tensor[(2, 10, 13), float64] */;
    (%1339, %1340)
  };
  %1341(%var_14966) /* ty=(Tensor[(5, 6, 12), float64], Tensor[(2, 10, 13), float64]) */
}

def @func_11064() -> (Tensor[(2, 10, 13), float32],) {
  %1342 = @func_9968() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1343 = %1342.0;
  (%1343,)
}

def @func_1329() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %1349 = fn () -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
    %1344 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
    %1345 = %1344.0;
    %1346 = cast(%1345, dtype="float64") /* ty=Tensor[(2, 10, 13), float64] */;
    %1347 = acosh(%1346) /* ty=Tensor[(2, 10, 13), float64] */;
    %1348 = @func_1236() /* ty=Tensor[(2, 10, 13), float32] */;
    (%1347, %1348)
  };
  %1349() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_10285() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1350 = @func_8273() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1351 = @func_2433() /* ty=Tensor[(2, 10, 13), float32] */;
  %1352 = %1350.0;
  (%1351, %1352)
}

def @func_14312() -> (Tensor[(2, 10, 13), float32],) {
  @func_14310() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_14500(%var_14495: bool, %var_14496: Tensor[(4, 14, 1), bool]) -> Tensor[(4, 14, 1), bool] {
  %1353 = cast(%var_14495, dtype="bool") /* ty=bool */;
  %1354 = cast(%var_14496, dtype="bool") /* ty=Tensor[(4, 14, 1), bool] */;
  logical_or(%1353, %1354) /* ty=Tensor[(4, 14, 1), bool] */
}

def @func_14720() -> (Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  %1355 = @func_12145() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1356 = @func_3851() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1357 = %1355.0;
  %1358 = %1356.0;
  (%1357, %1358)
}

def @func_8844() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  @func_8842() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_13887(%var_13885: Tensor[(40), float32]) -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(40), float32]) {
  @func_13884(%var_13885) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(40), float32]) */
}

def @func_9302() -> (Tensor[(2, 10, 13), float32],) {
  %1361 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %1359 = @func_1274() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %1360 = %1359.0;
    (%1360,)
  };
  %1361() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_15822() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) {
  @func_15820() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(4, 11, 12), float64]) */
}

def @func_5989(%var_5987: Tensor[(14, 13, 13), bool], %var_5988: Tensor[(14, 13, 13), bool]) -> (Tensor[(14, 13, 13), int16], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) {
  %1381 = fn (%var_5920: Tensor[(14, 13, 13), bool], %var_5921: Tensor[(14, 13, 13), bool]) -> (Tensor[(14, 13, 13), int16], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) {
    %1362 = cast(%var_5921, dtype="bool") /* ty=Tensor[(14, 13, 13), bool] */;
    %1363 = shape_of(%var_5920, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1364 = cast(%var_5920, dtype="bool") /* ty=Tensor[(14, 13, 13), bool] */;
    %1365 = dyn.reshape(%1362, %1363, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1366 = logical_or(%1364, %1365) /* ty=Tensor[(14, 13, 13), bool] */;
    %1367 = cast(%var_5920, dtype="bool") /* ty=Tensor[(14, 13, 13), bool] */;
    %1368 = shape_of(%1366, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1369 = cast(%1366, dtype="bool") /* ty=Tensor[(14, 13, 13), bool] */;
    %1370 = dyn.reshape(%1367, %1368, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1371 = greater(%1369, %1370) /* ty=Tensor[(14, 13, 13), bool] */;
    %1372 = cast(%1371, dtype="int16") /* ty=Tensor[(14, 13, 13), int16] */;
    %1373 = shape_of(%var_5921, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1374 = cast(%var_5921, dtype="int16") /* ty=Tensor[(14, 13, 13), int16] */;
    %1375 = dyn.reshape(%1372, %1373, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1376 = @func_1165() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(528), float64]) */;
    %1377 = @func_540() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1378 = subtract(%1374, %1375) /* ty=Tensor[(14, 13, 13), int16] */;
    %1379 = %1376.2;
    %1380 = %1377.0;
    (%1378, %1379, %1380)
  };
  %1381(%var_5987, %var_5988) /* ty=(Tensor[(14, 13, 13), int16], Tensor[(528), float64], Tensor[(2, 10, 13), float32]) */
}

def @func_6675() -> (Tensor[(2, 10, 13), float32],) {
  %1382 = @func_5565() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) */;
  %1383 = %1382.2;
  (%1383,)
}

def @func_1472() -> (Tensor[(16, 9, 15), float64],) {
  @func_1470() /* ty=(Tensor[(16, 9, 15), float64],) */
}

def @func_12247() -> Tensor[(2, 10, 13), float32] {
  @func_1808() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_11402() -> (Tensor[(2, 10, 13), float32],) {
  %1386 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %1384 = @func_5482() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1385 = %1384.1;
    (%1385,)
  };
  %1386() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_13119() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) {
  %1387 = @func_8273() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1388 = cast(meta[relay.Constant][48] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %1389 = reshape(%1388, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %1390 = @func_12045(%1389) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(1568), float64], Tensor[(528), float64], Tensor[(2160), float32]) */;
  %1391 = %1387.0;
  %1392 = %1390.0;
  (%1391, %1392, meta[relay.Constant][48] /* ty=Tensor[(1568), float64] */)
}

def @func_8659() -> (Tensor[(2, 10, 13), float32],) {
  @func_8657() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_15049() -> (Tensor[(2, 10, 13), float32],) {
  %1393 = @func_2752() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1394 = %1393.0;
  (%1394,)
}

def @func_8758() -> (Tensor[(2, 10, 13), float32], Tensor[(2366), bool], Tensor[(2366), bool], Tensor[(2, 10, 13), float32]) {
  %1403 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2366), bool], Tensor[(2366), bool], Tensor[(2, 10, 13), float32]) {
    %1395 = @func_1873() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1396 = cast(meta[relay.Constant][49] /* ty=Tensor[(2366), bool] */, dtype="bool") /* ty=Tensor[(2366), bool] */;
    %1397 = reshape(%1396, newshape=[2366]) /* ty=Tensor[(2366), bool] */;
    %1398 = @func_8233(%1397) /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(2366), bool]) */;
    %1399 = @func_5801() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
    %1400 = %1395.0;
    %1401 = %1398.3;
    %1402 = %1399.1;
    (%1400, %1401, meta[relay.Constant][49] /* ty=Tensor[(2366), bool] */, %1402)
  };
  %1403() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2366), bool], Tensor[(2366), bool], Tensor[(2, 10, 13), float32]) */
}

def @func_8787(%var_8769: Tensor[(9, 8, 14), int16]) -> (Tensor[(9, 8, 14), int16],) {
  %1404 = cast(meta[relay.Constant][50] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1405 = cast(%var_8769, dtype="int16") /* ty=Tensor[(9, 8, 14), int16] */;
  %1406 = left_shift(%1404, %1405) /* ty=Tensor[(9, 8, 14), int16] */;
  (%1406,)
}

def @func_9349() -> (Tensor[(2, 10, 13), float32],) {
  @func_9347() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_2663() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1411 = fn () -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %1407 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %1408 = @func_1741() /* ty=(Tensor[(2, 10, 13), float32],) */;
    %1409 = %1407.0;
    %1410 = %1408.0;
    (%1409, %1410)
  };
  %1411() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_7959() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(1, 528), float64]) {
  %1412 = @func_6603() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1413 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 528), float64] */, dtype="float64") /* ty=Tensor[(1, 528), float64] */;
  %1414 = reshape(%1413, newshape=[2, 264]) /* ty=Tensor[(2, 264), float64] */;
  %1415 = @func_5281(%1414) /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 264), float64]) */;
  %1416 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 528), float64] */, dtype="float64") /* ty=Tensor[(1, 528), float64] */;
  %1417 = %1412.0;
  %1418 = %1415.1;
  %1419 = atan(%1416) /* ty=Tensor[(1, 528), float64] */;
  (%1417, %1418, %1419)
}

def @func_7896() -> Tensor[(2, 10, 13), float64] {
  %1421 = fn () -> Tensor[(2, 10, 13), float64] {
    %1420 = @func_2675() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
    %1420.0
  };
  %1421() /* ty=Tensor[(2, 10, 13), float64] */
}

def @func_4035() -> (Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) {
  %1422 = @func_2007() /* ty=(Tensor[(2, 10, 13), float64],) */;
  %1423 = @func_1436() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64]) */;
  %1424 = @func_2926() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %1425 = %1422.0;
  %1426 = %1423.1;
  %1427 = %1424.1;
  (%1425, %1426, %1427)
}

def @func_7305(%var_7303: Tensor[(7, 3, 15), float32]) -> Tensor[(7, 3, 15), bool] {
  @func_7302(%var_7303) /* ty=Tensor[(7, 3, 15), bool] */
}

def @func_16337() -> Tensor[(2, 10, 13), float32] {
  %1428 = fn () -> Tensor[(2, 10, 13), float32] {
    @func_2468() /* ty=Tensor[(2, 10, 13), float32] */
  };
  %1428() /* ty=Tensor[(2, 10, 13), float32] */
}

def @func_1412() -> (Tensor[(2, 10, 13), float32],) {
  %1431 = fn () -> (Tensor[(2, 10, 13), float32],) {
    %1429 = @func_493() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float32]) */;
    %1430 = %1429.1;
    (%1430,)
  };
  %1431() /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_4680(%var_4678: Tensor[(7, 1, 8), float32]) -> Tensor[(7, 1, 8), float32] {
  @func_4677(%var_4678) /* ty=Tensor[(7, 1, 8), float32] */
}

def @func_1911() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1432 = @func_1411() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1433 = @func_641() /* ty=(Tensor[(2, 10, 13), float32],) */;
  %1434 = %1432.0;
  %1435 = %1433.0;
  (%1434, %1435)
}

def @func_5028() -> Tensor[(2, 10, 13), float64] {
  %1436 = @func_2926() /* ty=(Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32]) */;
  %1436.0
}

def @func_3019() -> (Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32], Tensor[(528), float64]) {
  %1437 = @func_2433() /* ty=Tensor[(2, 10, 13), float32] */;
  %1438 = cast(%1437, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %1439 = log2(%1438) /* ty=Tensor[(2, 10, 13), float32] */;
  %1440 = cast(%1439, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %1441 = cast(meta[relay.Constant][52] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %1442 = reshape(%1441, newshape=[4, 11, 12]) /* ty=Tensor[(4, 11, 12), float64] */;
  %1443 = @func_787(%1442) /* ty=(Tensor[(4, 11, 12), uint64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
  %1444 = atanh(%1440) /* ty=Tensor[(2, 10, 13), float32] */;
  %1445 = %1443.3;
  (%1444, %1445, meta[relay.Constant][52] /* ty=Tensor[(528), float64] */)
}

def @func_5567() -> (Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) {
  @func_5565() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(16, 9, 15), float64], Tensor[(2, 10, 13), float32], Tensor[(1568), float64]) */
}

def @func_3852() -> (Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
  %1455 = fn () -> (Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) {
    %1446 = @func_2829() /* ty=(Tensor[(4, 11, 12), float64],) */;
    %1447 = @func_2007() /* ty=(Tensor[(2, 10, 13), float64],) */;
    %1448 = @func_3628() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1449 = @func_3628() /* ty=(Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */;
    %1450 = %1446.0;
    %1451 = @func_2522() /* ty=Tensor[(2, 10, 13), float64] */;
    %1452 = %1447.0;
    %1453 = %1448.1;
    %1454 = %1449.0;
    (%1450, %1451, %1452, %1453, %1454)
  };
  %1455() /* ty=(Tensor[(4, 11, 12), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float64], Tensor[(2, 10, 13), float32], Tensor[(2, 10, 13), float32]) */
}

def @func_3296() -> (Tensor[(4, 11, 12), float64],) {
  %1458 = fn () -> (Tensor[(4, 11, 12), float64],) {
    %1456 = @func_2829() /* ty=(Tensor[(4, 11, 12), float64],) */;
    %1457 = %1456.0;
    (%1457,)
  };
  %1458() /* ty=(Tensor[(4, 11, 12), float64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

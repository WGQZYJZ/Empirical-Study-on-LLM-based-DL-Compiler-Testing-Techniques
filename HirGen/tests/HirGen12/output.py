import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_272 = relay.var("var_272", dtype = "float64", shape = (11, 13, 2))#candidate|272|(11, 13, 2)|var|float64
uop_273 = relay.atanh(var_272.astype('float64')) # shape=(11, 13, 2)
output = uop_273
output2 = uop_273
func_277 = relay.Function([var_272,], output)
mod['func_277'] = func_277
mod = relay.transform.InferType()(mod)
mutated_mod['func_277'] = func_277
mutated_mod = relay.transform.InferType()(mutated_mod)
var_278 = relay.var("var_278", dtype = "float64", shape = (11, 13, 2))#candidate|278|(11, 13, 2)|var|float64
func_277_call = mutated_mod.get_global_var('func_277')
call_279 = func_277_call(var_278)
output = call_279
func_280 = relay.Function([var_278], output)
mutated_mod['func_280'] = func_280
mutated_mod = relay.transform.InferType()(mutated_mod)
var_459 = relay.var("var_459", dtype = "float64", shape = (4, 4, 11))#candidate|459|(4, 4, 11)|var|float64
var_460 = relay.var("var_460", dtype = "float64", shape = (4, 4, 11))#candidate|460|(4, 4, 11)|var|float64
bop_461 = relay.not_equal(var_459.astype('bool'), relay.reshape(var_460.astype('bool'), relay.shape_of(var_459))) # shape=(4, 4, 11)
func_277_call = mod.get_global_var('func_277')
func_280_call = mutated_mod.get_global_var('func_280')
const_467 = relay.const([-7.487651,6.918163,1.244430,-4.324302,8.534966,2.804700,0.512410,0.433866,4.363206,5.781071,-0.879926,-0.794805,-1.613255,-8.236698,0.432746,0.270553,-2.126459,-8.857351,-2.356421,-6.921791,7.655782,3.978537,-0.694472,-2.768825,5.757828,-3.883881,8.560867,1.100358,-4.849736,1.374879,5.872535,7.220917,0.296868,8.362738,-5.115423,6.508217,-1.996176,3.456874,4.752728,-0.123211,4.999121,-7.113091,-9.959119,6.241387,-8.475034,-2.525552,6.331499,7.837792,9.619806,6.182157,-4.712044,-8.881852,1.060581,6.494264,9.592706,1.684098,-8.342750,2.087356,5.534914,-0.962102,4.673429,0.675255,-5.051021,9.066809,-9.312606,-9.893050,0.916037,5.138797,-8.848800,-2.537874,-4.286597,-3.291758,6.012777,5.253104,-3.592367,-0.642025,-1.199237,7.457166,-8.603567,2.380986,0.091197,-7.520120,-5.624506,2.044588,-8.153896,-7.412269,1.699446,-9.262724,-4.696734,1.722226,6.554420,-1.336388,7.155191,-2.934416,-7.731858,-2.191192,9.826521,-1.066318,-4.833887,-5.653848,1.438480,-7.007177,-7.872510,-6.306363,-4.421723,8.180995,5.068621,-1.228034,6.237514,9.917453,-8.137379,9.880276,-1.158157,7.543683,4.819247,4.696527,-1.316136,2.898245,-8.539172,3.564228,8.591780,-9.623829,-6.426273,-9.012862,-4.117608,5.829528,2.486267,-5.658548,-6.098271,7.668846,-4.396507,0.357359,-4.579130,7.788464,-9.313020,6.033340,2.222484,-0.737164,-9.588843,-7.946232,-0.502179,2.470177,-9.915473,9.745377,9.880555,6.776012,-6.713681,-7.428385,0.341357,5.408806,-2.847358,-5.705175,8.557152,8.372472,5.856347,-8.399377,0.870413,0.052977,9.410596,8.279969,3.433075,-8.265649,3.611310,-9.780316,-7.717514,-2.648046,1.130647,1.178789,9.245603,-2.014205,-2.116948,2.962051,0.765649,9.148041,1.174121,3.181354,4.323265,-8.450708,1.828620,-8.287199,0.409760,-0.426879,3.636344,6.133869,9.985246,8.592023,-8.687985,0.314309,6.888340,-9.108672,0.764119,-6.333332,-5.253199,3.717814,0.015167,4.818441,-3.422469,8.241503,7.744322,9.687822,6.695594,-8.727115,9.974631,9.628593,1.610891,0.001530,1.187958,1.682942,2.720015,7.545215,-1.517746,0.463608,3.911155,-0.928512,5.340488,4.724401,-1.282798,-9.437075,9.248884,7.260803,5.193446,-0.851132,-3.434158,-6.716180,-6.501149,-6.858702,3.207743,-0.793606,0.234858,4.182725,-0.643457,2.501497,4.674764,-1.206326,0.713350,0.732895,-4.638550,6.788033,7.844149,-7.836466,-7.006415,2.432666,-1.759752,-2.841138,-8.449433,-8.233830,-4.373114,-1.595879,7.580753,-9.380109,-3.943428,-5.724070,6.957257,7.437017,8.936542,2.369894,-8.630107,4.057229,-7.239186,-9.784935,-8.752470,4.410514,-3.293192,-6.653227,-5.659695,-3.365078,-0.400687,0.413194,8.907413,-3.250535,4.708439,-5.885329,-9.328548,-4.442784,0.523919,-3.638469,-0.738982,-7.359686,6.656967,-3.768338,5.040049,-1.644577,4.195063,-8.036649,-9.624737,-0.290144], dtype = "float64")#candidate|467|(286,)|const|float64
call_466 = func_277_call(relay.reshape(const_467.astype('float64'), [11, 13, 2]))
call_468 = func_277_call(relay.reshape(const_467.astype('float64'), [11, 13, 2]))
output = relay.Tuple([bop_461,call_466,const_467,])
output2 = relay.Tuple([bop_461,call_468,const_467,])
func_470 = relay.Function([var_459,var_460,], output)
mod['func_470'] = func_470
mod = relay.transform.InferType()(mod)
var_471 = relay.var("var_471", dtype = "float64", shape = (4, 4, 11))#candidate|471|(4, 4, 11)|var|float64
var_472 = relay.var("var_472", dtype = "float64", shape = (4, 4, 11))#candidate|472|(4, 4, 11)|var|float64
output = func_470(var_471,var_472,)
func_473 = relay.Function([var_471,var_472,], output)
mutated_mod['func_473'] = func_473
mutated_mod = relay.transform.InferType()(mutated_mod)
var_536 = relay.var("var_536", dtype = "float32", shape = (10, 12, 13))#candidate|536|(10, 12, 13)|var|float32
uop_537 = relay.sigmoid(var_536.astype('float32')) # shape=(10, 12, 13)
func_470_call = mod.get_global_var('func_470')
func_473_call = mutated_mod.get_global_var('func_473')
const_550 = relay.const([-9.429970,-4.307296,3.804210,-1.943594,-9.296701,3.473546,9.303099,5.896176,0.944412,3.693999,5.063636,3.326622,2.242150,2.025786,6.259964,-3.098932,5.051155,7.971945,-1.122762,-4.515196,7.427130,-7.103195,6.289367,0.604392,8.507146,-9.176217,-8.720224,5.036325,3.359137,-0.797774,-7.786569,-3.906515,-6.046701,-8.421149,6.694011,6.799727,-5.842112,-5.715909,6.316550,-0.941515,-7.560152,6.361938,5.355547,-3.518860,-0.479063,3.434290,6.932730,-5.942612,4.573586,-6.068064,-2.403015,-7.523784,4.844575,-4.218282,-4.227872,-3.356220,1.208241,7.847053,-2.034083,9.149508,4.259489,1.435476,-9.439010,-7.074616,-8.312899,0.475043,-4.492822,4.769728,-3.236882,-9.693183,-4.793736,7.395554,-1.511882,-8.542305,-5.709950,4.330012,-9.012463,8.877169,2.747207,3.201977,-2.672172,-9.188648,-1.956706,3.267521,5.467397,0.626348,-4.187008,-3.283705,5.899223,1.546436,-0.998236,5.365501,6.620331,-9.178315,-0.302502,-2.701301,-0.698427,5.062621,-9.735916,1.694491,-3.171322,3.950247,1.557782,-8.617092,7.869235,-8.579856,-2.847628,-0.377390,-8.536176,-8.859465,-0.731962,-3.976267,7.585253,8.775097,-1.588334,-1.705253,0.067135,9.695019,6.500294,-5.474499,0.765060,-3.024067,-5.364166,5.636544,1.331594,-1.943945,-7.036227,-1.859997,-4.940834,4.975226,-6.481047,-8.823666,5.688987,-9.076776,6.641093,4.465827,-8.389529,-4.228634,1.897667,0.190000,-6.047430,-1.921134,-3.476670,-5.922963,4.807794,3.443736,9.318491,6.379454,1.880259,5.914062,-9.700746,9.978170,9.049969,-0.807820,3.057612,5.918442,6.708333,-7.564265,0.989721,-8.264141,-6.870503,-8.246978,1.380116,9.506031,-3.835990,7.115378,1.613138,5.491635,5.184583,9.942720,5.588361,-5.275656,9.023338,0.809636,3.753327,7.736891], dtype = "float64")#candidate|550|(176,)|const|float64
call_549 = relay.TupleGetItem(func_470_call(relay.reshape(const_550.astype('float64'), [4, 4, 11]), relay.reshape(const_550.astype('float64'), [4, 4, 11]), ), 0)
call_551 = relay.TupleGetItem(func_473_call(relay.reshape(const_550.astype('float64'), [4, 4, 11]), relay.reshape(const_550.astype('float64'), [4, 4, 11]), ), 0)
output = relay.Tuple([uop_537,call_549,const_550,])
output2 = relay.Tuple([uop_537,call_551,const_550,])
func_553 = relay.Function([var_536,], output)
mod['func_553'] = func_553
mod = relay.transform.InferType()(mod)
var_554 = relay.var("var_554", dtype = "float32", shape = (10, 12, 13))#candidate|554|(10, 12, 13)|var|float32
output = func_553(var_554)
func_555 = relay.Function([var_554], output)
mutated_mod['func_555'] = func_555
mutated_mod = relay.transform.InferType()(mutated_mod)
var_682 = relay.var("var_682", dtype = "float64", shape = (14, 12, 14))#candidate|682|(14, 12, 14)|var|float64
uop_683 = relay.sin(var_682.astype('float64')) # shape=(14, 12, 14)
output = uop_683
output2 = uop_683
func_687 = relay.Function([var_682,], output)
mod['func_687'] = func_687
mod = relay.transform.InferType()(mod)
var_688 = relay.var("var_688", dtype = "float64", shape = (14, 12, 14))#candidate|688|(14, 12, 14)|var|float64
output = func_687(var_688)
func_689 = relay.Function([var_688], output)
mutated_mod['func_689'] = func_689
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1120 = relay.var("var_1120", dtype = "float64", shape = (7, 15, 10))#candidate|1120|(7, 15, 10)|var|float64
uop_1121 = relay.sin(var_1120.astype('float64')) # shape=(7, 15, 10)
func_277_call = mod.get_global_var('func_277')
func_280_call = mutated_mod.get_global_var('func_280')
var_1135 = relay.var("var_1135", dtype = "float64", shape = (286,))#candidate|1135|(286,)|var|float64
call_1134 = func_277_call(relay.reshape(var_1135.astype('float64'), [11, 13, 2]))
call_1136 = func_277_call(relay.reshape(var_1135.astype('float64'), [11, 13, 2]))
output = relay.Tuple([uop_1121,call_1134,var_1135,])
output2 = relay.Tuple([uop_1121,call_1136,var_1135,])
func_1138 = relay.Function([var_1120,var_1135,], output)
mod['func_1138'] = func_1138
mod = relay.transform.InferType()(mod)
mutated_mod['func_1138'] = func_1138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1138_call = mutated_mod.get_global_var('func_1138')
var_1140 = relay.var("var_1140", dtype = "float64", shape = (7, 15, 10))#candidate|1140|(7, 15, 10)|var|float64
var_1141 = relay.var("var_1141", dtype = "float64", shape = (286,))#candidate|1141|(286,)|var|float64
call_1139 = func_1138_call(var_1140,var_1141,)
output = call_1139
func_1142 = relay.Function([var_1140,var_1141,], output)
mutated_mod['func_1142'] = func_1142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1186 = relay.var("var_1186", dtype = "float32", shape = (14, 6, 2))#candidate|1186|(14, 6, 2)|var|float32
const_1187 = relay.const([[[-6.786855,-5.473550],[-1.895754,-5.661792],[-4.907345,9.640470],[0.179380,-7.278127],[1.327206,-4.676309],[-1.995989,5.937755]],[[4.915625,1.268271],[1.369516,8.750834],[-1.477640,-7.800441],[-6.753151,0.207176],[3.092725,-9.911660],[-4.813397,1.519561]],[[3.199634,9.561629],[3.636619,5.322524],[-5.352152,-8.812835],[6.560053,-2.349420],[-5.060281,-2.123454],[5.800519,8.186729]],[[-2.269966,9.676044],[-5.386586,3.903190],[-5.937744,-0.090745],[5.309445,-4.643146],[-8.001340,-6.796058],[-4.882839,-2.019374]],[[4.193054,2.838168],[-3.615485,8.906675],[-4.810619,9.428139],[-3.343646,5.340234],[4.099614,-8.422547],[0.914807,1.331840]],[[1.813362,3.558137],[-2.348571,-1.461412],[-1.940924,-5.097739],[5.171457,1.334120],[-7.197461,-7.897097],[9.459686,3.180877]],[[3.855153,-1.228362],[-9.015048,6.071889],[3.144477,9.531483],[-1.286954,6.185697],[1.142641,6.225646],[-2.300112,8.432598]],[[9.752171,5.326206],[5.169211,2.623706],[-4.171603,7.943927],[7.324452,-8.950940],[2.246352,-8.535021],[-4.334421,-8.188768]],[[4.331433,-0.065872],[-3.081662,-1.936016],[2.663146,8.208727],[-0.261353,-9.269682],[-9.640345,5.160883],[-0.454852,-3.921659]],[[3.206308,0.970237],[-1.803743,-5.400404],[8.350188,7.327186],[-7.828061,9.715752],[6.596871,-5.890776],[1.026579,-6.332944]],[[-0.509512,-2.021194],[-9.638088,-3.802702],[7.587074,6.162003],[0.389531,-8.486535],[-3.199661,-2.105059],[7.231712,-8.525021]],[[-0.340842,2.621317],[6.131126,4.349989],[5.875335,-3.894980],[-7.164617,-3.247173],[-7.230434,-8.634818],[3.318309,-9.700210]],[[-9.977113,-1.825127],[-1.217375,3.505086],[5.705954,1.228134],[-0.682161,-9.249368],[-6.800029,8.368827],[0.073538,-1.914263]],[[5.045810,7.713066],[6.286629,-5.863874],[-2.564479,-3.587845],[-2.567327,-1.370825],[-7.315169,-9.277470],[-3.189218,-5.011844]]], dtype = "float32")#candidate|1187|(14, 6, 2)|const|float32
bop_1188 = relay.mod(var_1186.astype('float32'), relay.reshape(const_1187.astype('float32'), relay.shape_of(var_1186))) # shape=(14, 6, 2)
func_553_call = mod.get_global_var('func_553')
func_555_call = mutated_mod.get_global_var('func_555')
const_1196 = relay.const([0.250949,1.584684,-7.011807,-6.809841,5.556429,-3.042014,-6.487401,-8.823716,-2.547840,-5.961560,8.434002,-3.539903,8.205496,7.848079,2.611109,-8.120477,8.814089,-0.052856,-4.232004,-2.589311,-5.114286,-3.383038,-1.579183,-2.214156,9.751328,-4.329998,-0.161601,-9.952780,6.905902,-8.233509,-4.677277,-1.225382,-1.517292,9.245738,5.626869,0.435647,-3.191671,3.649419,-8.740070,-0.156756,-0.370169,-5.205899,7.249432,-1.450986,-1.202201,9.735108,-7.460220,2.491191,-8.256049,7.849178,-1.918576,9.227281,-1.812967,8.158500,9.236912,-4.521993,9.903256,-8.771690,3.874274,1.457440,3.531177,-4.938201,-4.173197,5.753149,-3.735216,1.991979,6.803032,-7.836899,4.834729,-5.767917,1.299977,-2.673838,6.307845,7.852958,3.250884,6.716009,7.387864,-9.329780,3.638862,0.078447,-4.733590,-9.469686,4.597824,5.539034,-2.441251,2.172246,3.732368,-3.045171,-7.029316,8.640348,9.413732,3.737409,9.239150,-3.797731,0.827511,-0.077123,-2.298673,1.804150,5.931461,-1.253002,-0.198774,4.757948,0.842322,-4.021221,6.831465,-0.930661,-2.803831,-9.038914,0.478363,-7.711921,-1.474808,1.408779,5.203100,-1.437988,1.846629,5.291821,6.664997,5.481043,-4.230504,-0.991962,-6.710186,-5.756906,-6.053724,-8.849777,-8.363463,-8.544305,5.804743,6.637012,-0.366102,-8.378164,5.144506,0.831971,-4.742024,7.927204,0.393515,0.134925,-7.623846,-8.439508,-2.938254,2.457600,-4.837851,2.035106,4.283729,-0.769907,-7.975754,6.923648,-5.612711,-6.436237,-7.249758,-0.425774,-7.267659,9.740968,1.840578,9.263413,-3.593625,-0.394227,3.965215,-0.405845,9.615780,-7.894743,7.401394,5.747135,0.820779,1.898690,7.308601,8.355182,4.240110,3.072500,-3.607203,-6.531853,7.269022,8.397996,-9.944397,5.315386,7.127615,4.049850,9.748170,-6.887217,7.484278,-9.317536,8.982262,-4.603249,-5.469419,-6.069805,-1.809126,3.127031,9.507180,-3.122528,4.031810,2.143818,-2.924591,6.152328,4.131889,-8.318896,7.720298,-4.994952,-7.929724,6.090303,-2.902852,1.184197,-8.883890,-0.792893,-9.704141,3.179681,-5.750929,-6.726953,-5.384303,-1.523385,3.763975,-7.593080,-4.622202,-4.654562,1.025143,2.756254,6.071001,-2.119150,-2.878969,0.261387,-9.515769,-3.027590,-7.966203,6.780635,-3.847525,-9.432326,-3.548446,5.280898,1.119365,6.229931,8.541190,-4.270528,1.979993,4.983899,4.276928,-9.787998,4.356241,-0.030283,0.592132,-8.618292,-5.952845,-0.726028,3.147111,4.133633,1.428865,0.204706,2.124220,2.148192,7.512446,-2.610953,5.023349,-5.723587,1.441621,-4.039373,-7.592113,7.731315,-5.681697,2.255491,9.335472,-0.282978,0.930008,1.499759,-4.836391,4.313063,6.491361,-8.312560,6.430435,-0.292578,-3.822165,0.203552,6.654410,9.778589,-8.874899,-0.517359,6.482972,-3.957554,-1.031587,7.922738,-2.380653,-0.086796,1.804751,4.451833,8.109082,6.366798,-6.613165,-0.751835,1.281299,9.485259,-0.185532,9.101638,9.549514,-0.627995,-6.324418,-8.928066,6.916712,-6.633699,8.195076,3.197026,2.982302,-6.543653,1.939982,-9.935701,-2.839993,6.053423,7.646618,-0.656916,-1.188473,-2.838824,1.839424,-7.953764,-7.558460,1.901231,-5.858797,-8.322173,1.412827,5.470761,-9.888620,-9.091001,-0.218915,6.842546,-0.112807,-8.191038,5.211070,9.745373,6.384931,3.110227,3.409891,6.026225,3.844075,5.354697,6.708818,2.436111,-7.420732,-6.808840,4.004155,-0.094705,-6.235113,6.593516,-1.906713,-5.078205,-2.089884,9.242691,-6.232319,4.564549,-2.174729,-5.608757,0.304684,3.255988,4.269761,-7.619147,-0.558413,1.304306,5.642888,-4.191137,9.738636,9.212790,-8.306986,6.149574,-0.127626,-2.160128,-2.713706,-5.115806,-7.606980,8.228878,1.370430,5.579426,4.342768,-7.442027,2.576628,-1.809905,3.553124,-3.074326,-0.170274,-5.500055,-2.040673,5.426145,-1.870474,-7.208825,-0.253397,-3.724120,-0.322184,9.362803,-3.036203,-5.654794,-4.884630,2.931727,9.795498,8.127481,6.050674,-6.651084,-4.019607,-4.841692,3.019887,0.336966,9.025974,7.451374,1.910651,8.464513,8.265984,1.371378,-6.223409,0.524486,-5.758278,1.727267,8.619071,2.666878,2.855269,-1.494377,3.567554,-1.155954,6.835732,-3.626258,-5.211654,3.121781,2.473747,7.505815,2.263362,1.953520,4.183371,1.728986,-8.444955,-2.438227,9.707161,-8.092621,9.996209,2.479711,8.351569,9.611265,7.731018,7.407880,-1.545308,-6.995290,5.141142,0.208591,-2.322030,1.832333,-2.801894,-1.599436,-7.874162,-3.292615,-4.975350,2.403435,9.956386,3.583175,5.219349,5.493093,-4.634296,4.931412,-9.885361,-5.371399,4.546381,3.889804,-1.063888,8.697350,3.644326,-4.288656,0.964464,3.781971,-7.872238,4.977514,4.664773,2.579147,-9.809316,5.248411,-6.979803,3.270671,-9.145037,0.010905,8.637324,2.727701,-3.224991,-8.566326,0.906955,-9.377480,-7.872782,1.782790,-6.057074,8.625726,6.123404,2.633198,8.484825,-5.207824,-8.113594,-6.809734,-0.990504,-3.402343,6.416797,2.511801,-7.433403,-3.140822,2.740866,-4.941628,8.127081,0.701235,-6.534788,-1.876333,5.906161,3.423559,-7.829304,9.468834,-5.386682,5.903621,-0.702159,-5.268139,-6.541477,-0.118879,2.034766,2.363439,-2.021305,1.207261,-5.533143,-1.293912,-8.713623,0.815645,7.247585,-6.395063,-7.589199,2.471275,-1.308742,2.369554,6.788665,-7.824729,-0.084640,7.357085,-9.585069,1.568966,-7.032756,9.806582,-8.456038,0.840510,1.697270,1.449904,7.369518,4.174236,-1.301598,-9.022389,-6.631863,-6.999785,-4.194972,2.674914,8.673360,3.614939,3.891909,-6.625594,9.133380,7.966160,8.324140,-1.804901,-8.316592,-0.666015,-9.870654,-1.555972,-5.183864,4.414619,-7.936304,5.051625,-9.189478,5.430828,7.822166,5.788058,3.526751,-3.803077,8.159642,9.029257,-8.017502,-2.091782,-0.539871,6.535437,-9.172920,1.222001,2.989781,-3.950208,-8.195913,3.197764,7.932380,-9.396548,-5.945680,-0.993016,-9.566620,9.088267,4.542616,2.526775,-8.590356,-5.428741,-3.218457,0.133140,0.521331,2.999282,4.704268,3.407314,4.758958,1.074855,-4.661210,9.677310,8.765861,9.392159,-2.223584,-4.342560,5.868274,5.383173,-3.889634,-2.188298,-7.670444,0.261792,-1.544998,1.321019,7.379496,4.432035,-8.125063,-8.489012,9.279007,-5.220994,-2.114728,-4.853698,-9.691465,8.295084,-6.011564,-2.650799,7.277250,-8.478494,-8.502627,7.827748,-1.894097,-4.295862,6.018811,-4.031979,-9.715316,4.893739,3.450485,8.755070,7.737221,2.238041,-9.930779,2.688788,0.559443,9.994951,5.649539,7.113653,-9.937845,-7.301972,-7.807148,-8.017541,8.401923,-3.580338,-9.067832,-0.146463,-8.263681,6.167439,6.800538,6.960885,0.901528,8.113905,8.917778,-9.599847,-1.014407,-4.902769,-2.536658,9.889312,-3.669678,-9.370179,2.418811,-9.575073,-4.350433,-9.414448,-3.766077,4.194816,9.462000,-5.412869,8.114952,-0.621719,5.700751,3.889781,2.825680,-9.342105,-4.544742,-7.832491,3.888685,9.599410,9.701000,-3.001116,3.160697,3.526764,-3.695715,-1.733576,-7.800206,7.088645,9.740322,8.312389,2.783092,-9.210316,1.458937,-4.665785,6.575670,-6.643246,4.511633,2.839126,-4.015856,3.460273,-0.475399,5.351170,-7.343751,3.240877,5.797333,4.530926,-9.064957,-7.691914,-7.723380,-6.791765,-2.547982,-0.652277,4.552370,6.189535,-0.184605,-4.148048,-3.852103,-5.300648,-2.908614,-6.869273,-1.671316,3.194290,0.871901,-8.443779,-7.105456,5.370174,-6.386718,-2.360831,7.235459,1.445044,8.019528,9.376273,4.943197,-9.146110,0.916268,9.566061,-9.306809,-3.344779,-7.653023,-1.060490,8.750983,-8.273542,3.584269,-4.116590,-1.585893,1.696696,1.905765,5.459942,-0.324920,9.306895,-2.297848,9.394411,7.796833,-3.179710,8.940706,-8.922803,-1.203129,-2.516344,5.886335,7.785222,-6.234969,9.678112,5.457256,1.040317,9.185552,5.316157,6.381961,-8.659459,-8.756418,7.865479,0.368124,-1.838805,-7.707684,-5.303478,2.909345,6.444600,-1.851065,-6.907454,9.193491,1.008256,-1.761623,-6.707458,7.305463,-0.948271,1.674841,0.263268,5.247519,-2.642161,-4.711956,6.709453,-1.528034,-0.747049,-0.792748,-4.949422,-1.858984,-7.787694,-0.127780,-9.748752,2.003309,0.223748,-3.962386,-3.220164,3.578610,3.513880,2.878119,7.584515,3.757807,-1.827861,-7.330471,6.125883,-0.048859,0.324447,-5.747158,-2.174358,-7.611095,-6.242110,7.427590,-5.199648,-8.438125,-9.584692,1.237671,1.672016,0.911104,-2.202315,6.393571,-9.620746,9.880587,-9.758825,-7.274532,3.305970,4.808002,5.600624,-2.894753,7.634097,-4.584688,-6.457019,7.867164,-1.313775,1.883975,2.687324,9.845669,-3.371445,9.550666,-9.314721,-4.801253,2.055858,-1.440516,-3.204731,-1.595146,2.621062,3.715576,-6.937520,4.901191,-7.033172,4.418072,0.906970,5.034518,0.364319,0.395541,-5.864490,-8.052494,3.801973,3.824589,9.792183,4.601750,-8.930792,9.057123,6.041910,7.671970,5.877139,4.719655,9.667683,3.907671,-1.618616,3.057882,-2.719738,-2.996011,-1.958024,0.831505,7.124849,-2.491612,5.664872,4.411667,-2.754041,-0.033960,4.609047,4.069250,1.685443,-0.290206,7.406840,-0.566533,5.728119,2.246041,-7.348439,3.249218,8.989987,2.017808,0.729188,8.867463,-2.465114,-2.221258,-2.794548,-5.755283,-8.840206,6.968670,-5.501791,1.129227,-9.499546,4.064974,2.739995,-4.620062,-3.601712,7.689365,-8.725623,-5.472063,3.146962,5.763549,-0.544521,5.294206,-8.101405,-4.900097,-0.788065,-2.354269,-2.873467,-5.801744,-4.964557,-3.322194,-5.593078,3.051337,-5.852787,8.922409,-6.233464,6.833788,9.923249,8.316085,7.764843,-5.366835,5.794168,-6.681429,7.023662,0.308947,-2.604151,-6.890254,8.106372,6.844490,1.648127,3.171256,9.165192,-2.612663,0.354714,-4.532058,9.356809,6.061688,4.159548,-8.060726,-3.289448,1.235466,0.129785,7.968133,6.766266,2.030050,-3.613220,-0.952122,4.207440,-1.148009,-9.417613,-7.236424,6.250256,-7.397199,2.800240,9.077512,-7.838810,-9.376047,4.994611,-2.033041,4.085580,6.012914,0.415883,2.087676,2.531486,0.249284,6.511109,8.425426,5.573817,2.585006,9.061120,-6.944527,4.754225,5.947082,9.979649,3.481438,7.239975,-0.194251,-4.745230,-0.858930,2.629987,1.577011,6.938267,1.833014,-3.469445,6.868267,-2.529953,6.378763,8.050026,-9.141569,4.283356,8.716000,-5.826145,2.249520,6.953712,-0.766239,4.658578,3.178366,2.366614,-6.132090,-7.250166,4.326566,5.865082,-1.931206,6.526210,9.633239,8.734205,-3.823696,-4.367359,-6.630223,0.350718,-4.496508,5.137535,5.384612,3.695401,-1.801175,5.031978,-8.350937,2.969128,1.020527,0.733595,8.330672,5.723994,-2.987591,3.930517,-3.321373,-2.559093,1.106076,-3.860529,-8.597892,-6.565877,7.729037,-8.396590,1.947634,3.591685,-9.366268,4.199752,2.905801,1.616386,6.687587,-6.748432,7.496222,-9.090231,-1.945363,6.884548,-6.982330,-8.084527,-6.485578,3.020011,-9.138807,-9.251146,4.866665,-6.054809,3.016013,7.679521,-4.225731,-5.445359,-0.119975,-3.505715,6.995484,7.344168,-1.097014,-6.969630,-9.903202,-6.227628,-3.387098,4.738299,-5.091632,-9.807710,-3.416791,-9.183772,3.082115,-9.224683,-2.894141,3.214841,2.512614,3.025109,-8.344926,-4.621843,-3.136431,3.102028,4.453745,-2.483840,-6.943679,7.134820,-3.232564,2.453201,-3.539572,6.252144,-6.659001,6.803861,9.068329,5.348426,-6.083742,-5.468918,-5.539916,7.210125,4.662683,-9.769291,-7.885473,-9.636669,2.110311,-6.946420,0.849185,-4.980183,-2.770263,5.615873,1.814996,0.327723,-6.131734,-9.753516,4.356732,8.813647,9.652509,-3.398006,0.988375,2.510471,-9.603724,1.672677,0.132836,-5.535974,2.763906,-7.060199,-5.000485,-6.613077,6.640507,-7.928797,-2.171809,6.318929,6.279181,3.015373,-4.666379,5.237821,-8.192498,8.609224,9.505178,-1.828103,6.155727,8.451605,-5.949100,8.200823,-9.714726,6.106972,4.654613,-2.701113,-3.670285,3.885733,-5.858246,-1.816126,9.664091,2.465986,2.124901,9.843517,-3.424612,-4.848114,-4.756383,-4.237944,2.654677,5.387541,3.051581,3.982921,8.527144,-9.245782,-6.557963,4.520525,-9.170543,-9.672308,-2.521765,8.566039,-2.073752,1.281089,1.361892,0.759862,0.452226,1.587746,-0.571625,7.072947,5.525114,-7.182997,-8.814823,-9.123403,-6.229732,-4.934350,-1.671935,5.388138,1.378840,-3.366981,-6.046260,-7.989266,-8.160289,-4.042534,-0.386435,3.880723,-3.448753,4.403243,4.053871,9.242242,-9.718777,-9.801960,9.426784,7.392497,-4.616934,9.122708,1.215254,5.621883,5.284347,0.641000,7.550895,-6.469527,-3.367134,-7.701357,9.748710,9.257353,1.877551,-1.154260,0.722407,9.042834,9.673406,-2.494352,-8.879404,9.701030,-8.168670,-5.104980,1.879573,1.373085,-9.836024,4.489297,8.753462,-6.497337,-6.868924,-2.381984,-8.060986,0.615739,-1.275729,7.514934,7.405137,4.936694,4.671223,0.812305,-7.265399,-9.723875,-8.905629,-7.277404,-0.660191,-2.291899,0.254049,-3.422044,4.491344,-9.261845,2.330788,-4.698437,-4.496765,-7.922996,9.522419,-9.368441,-4.034453,5.029466,-4.559655,1.632954,-7.473015,9.486705,-1.587643,0.948443,2.113389,5.682863,3.677394,-3.237896,1.102058,6.134147,-7.804591,-5.821923,-9.353231,-8.105126,7.305999,5.992837,8.612168,-6.823011,-4.812247,3.933304,7.848919,9.327427,9.716911,-4.401413,-9.525739,6.513893,3.521960,-9.032707,7.216008,-5.633055,-8.092298,-3.134745,-1.573000,4.843592,1.019814,-2.334345,9.470566,1.597768,1.630221,-6.284585,-3.249440,7.550651,5.119121,3.206676,-9.636482,-0.903663,-6.024264,-2.211599,5.231066,6.466308,9.170447,0.736501,8.380965,5.355338,-6.202042,9.452334,2.883983,-3.899194,-0.705478,-2.076967,3.583574,0.647120,5.113517,-2.295226,8.631909,8.541510,0.396914,3.449237,-7.216442,-9.320453,-6.025962,5.677406,-4.888713,1.929529,7.697077,9.635442,-4.193692,-3.591624,-2.140128,-7.881301,4.716024,-0.186758,-4.948021,8.918991,-4.315002,1.680285,3.094808,1.796003,-6.480500,-0.113051,-8.416738,-4.653276,-0.276602,-8.026990,2.639936,-1.820407,5.859734,9.839905,8.678423,-4.811896,-5.640669,-5.432765,-8.641498,7.918652,-1.434939,-2.685166,1.771269,2.413393,-9.690984,0.053626,-0.207903,-5.272112,-0.880106,6.213848,-1.896657,-3.152547,9.271835,2.205398,-1.590100,-1.173745,-8.913321,4.592305,5.115787,-8.064291,-5.765423,1.970229,3.269111,-8.346754,-1.883525,1.589513,6.593602,5.870204,9.587244,-3.949854,-7.531550,-1.244284,-3.479240,-0.122023,6.269551,5.713921,-2.469822,-9.438788,-2.917745,-9.986712,9.633799,6.192856,5.803875,5.702330,4.440292,-8.441524,9.098654,0.954551,-2.577069,3.892846,-8.448066,9.976851,-2.219255,-1.058819,1.660230,6.820087,3.489871,0.183044,4.380854,7.763152,3.373320,-4.271405,-9.544917,-2.702905,-8.418447,-8.984531,-2.073099,5.443822,-4.918181,1.745263,-1.919808,-1.852316,7.781639,-4.967906,-1.326007,-3.177261,9.552689,-0.317776,-5.720920,-1.718517,6.558874,4.975140,0.839879,-6.052258,-7.082324,7.307950,-1.525090,-9.105349,7.971930,-6.819215,-3.285823,0.642479,-3.616204,-2.531414,-4.513120,4.082156,7.813386,2.694576,7.084392,-4.159369,1.350776,4.719093,0.350788,-1.066284,-0.967019,4.746945,0.766612,2.310844,-1.423445,-4.120896,-5.651650,-8.309692,-2.900988,-7.038160,3.319670,7.934134,-7.858550,-8.254781,6.937786,0.462051,-7.270141,-8.780600,5.742960,4.140644,3.388495,9.206847,9.792149,-2.214708,5.050933,7.201378,5.973212,-0.524936,5.044644,-2.115687,0.069560,4.246529,-7.628032,0.116176,0.804447,6.346570,-3.433457,-2.134921,1.644522,5.915545,-3.292199,9.880120,8.708485,6.920723,5.304023,4.317990,6.471445,-6.003893,8.471608,-1.920815,-6.118210,5.958105,-1.323746,-0.300832,-8.171039,-5.193496,-8.748707,2.821850,0.443227,2.294299,-1.772335,6.984794,5.985378,8.799518,0.168358,1.813797,0.371708,-3.197673,-1.297536,7.658559,-7.374595,3.825976,-5.058069,6.840945,-4.022136,-1.342611,3.131838,-1.581364,7.245667,9.833471,4.703780,-7.395730], dtype = "float32")#candidate|1196|(1560,)|const|float32
call_1195 = relay.TupleGetItem(func_553_call(relay.reshape(const_1196.astype('float32'), [10, 12, 13])), 2)
call_1197 = relay.TupleGetItem(func_555_call(relay.reshape(const_1196.astype('float32'), [10, 12, 13])), 2)
uop_1201 = relay.asin(const_1196.astype('float64')) # shape=(1560,)
output = relay.Tuple([bop_1188,call_1195,uop_1201,])
output2 = relay.Tuple([bop_1188,call_1197,uop_1201,])
func_1224 = relay.Function([var_1186,], output)
mod['func_1224'] = func_1224
mod = relay.transform.InferType()(mod)
var_1225 = relay.var("var_1225", dtype = "float32", shape = (14, 6, 2))#candidate|1225|(14, 6, 2)|var|float32
output = func_1224(var_1225)
func_1226 = relay.Function([var_1225], output)
mutated_mod['func_1226'] = func_1226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1239 = relay.var("var_1239", dtype = "float32", shape = (12, 13, 7))#candidate|1239|(12, 13, 7)|var|float32
uop_1240 = relay.atanh(var_1239.astype('float32')) # shape=(12, 13, 7)
bop_1244 = relay.maximum(var_1239.astype('float64'), relay.reshape(uop_1240.astype('float64'), relay.shape_of(var_1239))) # shape=(12, 13, 7)
var_1252 = relay.var("var_1252", dtype = "float32", shape = (12, 13, 7))#candidate|1252|(12, 13, 7)|var|float32
bop_1253 = relay.less_equal(uop_1240.astype('bool'), relay.reshape(var_1252.astype('bool'), relay.shape_of(uop_1240))) # shape=(12, 13, 7)
func_687_call = mod.get_global_var('func_687')
func_689_call = mutated_mod.get_global_var('func_689')
const_1257 = relay.const([7.563741,2.217201,2.079791,7.547290,1.603927,-6.972391,-8.001415,0.313201,-1.570753,0.088753,-4.830321,-6.121339,0.348031,3.002049,-3.516426,-8.604378,0.985198,0.786019,0.193912,1.449577,3.605902,-3.408872,-7.843170,5.830074,-9.918434,5.930760,3.431502,-8.747398,-6.608990,5.378346,-9.876282,4.255094,6.301157,-1.530496,2.634860,-8.984261,-2.232046,-4.525444,-1.495534,9.143876,-8.487968,5.837322,2.937747,-8.223196,4.341683,-3.416075,8.229824,5.734092,-8.291023,0.518227,5.618832,-3.446347,-3.859442,-5.074079,-0.130576,-4.162783,-0.194273,-6.739582,9.319075,2.451342,0.169626,-4.777473,1.024725,6.573962,-5.977965,3.020832,-6.104445,2.336842,-3.840660,7.200983,7.260586,7.566132,4.197844,9.745935,-0.046957,8.174150,-4.662358,8.706508,3.085871,1.529637,9.222802,2.495891,-5.694016,4.297906,-2.114646,-2.117382,-8.053286,8.218276,3.984786,-1.150371,-5.672636,0.786318,3.718761,-7.447914,-1.016409,-7.234071,4.271280,7.739029,-2.002153,-8.225659,-0.620322,7.685705,8.662776,-8.129349,3.612434,-5.945936,4.705813,7.946493,-9.074561,0.404835,6.687843,4.102044,-0.234979,6.394314,7.740928,1.348863,-4.355774,-8.493504,-2.517974,-0.550467,0.049267,8.964521,9.895859,3.980101,-9.377379,-8.765055,1.760861,-1.098675,-9.749239,-6.337488,-4.037179,2.587460,-4.493656,-3.727506,7.213360,8.341825,8.878104,2.028798,4.595883,2.245108,2.727293,3.573685,1.082223,-5.454194,4.248350,5.990407,1.998305,-0.076779,-5.604961,-2.484346,-8.558603,-1.481708,-4.543413,-0.861052,-6.502014,8.116865,2.632776,-7.837529,4.814951,-4.587874,-8.455071,-1.156893,1.231953,1.480206,1.315155,7.168754,1.660249,4.882940,6.810476,3.798331,9.568259,8.479220,-2.787679,5.758393,1.108232,-7.004896,5.003030,0.376406,-8.861546,-5.377011,-1.999572,8.550823,1.181667,0.432459,-1.863048,6.708428,4.751882,-3.882403,-4.914822,0.290680,8.609520,4.732317,-2.828473,8.231423,-0.359094,-0.112959,3.082667,-5.705777,5.463874,9.858112,1.817546,5.636496,-3.778243,-6.925810,-2.991207,-5.597748,6.252467,-4.869771,-5.525011,-3.448146,-4.988026,2.431407,-1.391352,-7.732485,5.874206,3.817643,-1.556558,8.419580,-6.065137,-4.929401,-6.974957,2.254290,-5.264267,4.812062,0.579415,5.326732,8.961476,-1.255645,7.442534,6.626688,-3.210815,8.792948,6.117719,7.663216,-3.002381,-3.863649,-0.273632,-7.055564,-1.324610,9.015456,-6.633658,6.564093,7.517424,1.763281,-1.504910,8.266840,-3.499220,-8.659354,-2.226075,3.866623,3.507763,3.602229,1.326213,-3.470917,5.829053,-0.661092,1.329504,7.783260,6.697630,5.402839,6.996623,-4.759850,1.977368,-7.821884,2.414093,-9.107136,0.094259,-0.382936,8.203765,-5.180978,7.618225,-9.669572,-9.095288,8.008406,5.898119,-8.269337,-2.200450,-6.146268,5.854399,6.305205,-4.321365,2.548608,8.783840,6.209788,-9.026775,4.616776,-3.041790,-5.307031,-7.526830,-4.308202,-4.147320,-8.119975,7.876514,-6.603532,9.806654,9.634792,5.217016,-8.848007,8.632483,-4.154225,2.099221,5.211886,1.380741,0.462404,1.058231,5.082289,-4.750658,-5.865551,-5.155703,-7.624341,-3.875133,-6.720194,-5.425030,-4.181666,-3.758007,9.533185,0.149734,9.239603,4.888435,-5.930784,-3.024761,-9.086141,0.180514,-4.740117,-5.341584,-8.726664,4.566190,-4.839384,2.098906,9.145371,5.165875,3.559694,9.321688,-8.748894,5.175171,7.069008,-1.895245,-7.146445,9.289812,-1.241291,5.756483,-3.279473,7.623330,-3.396361,-8.435506,-6.837128,8.017599,-6.908026,-2.279948,4.060526,1.890756,7.248745,-2.049529,5.983646,-7.652943,7.256435,-1.991893,-8.304306,8.340586,-6.077572,-6.922831,2.503262,0.829741,-6.083759,-9.641615,6.694507,1.424072,-0.466220,6.735465,3.789175,4.668751,5.748148,-3.452085,3.913923,4.239501,6.077916,-1.825946,8.967716,-4.678090,6.269745,3.153596,-8.049633,1.578174,-2.293829,6.185559,-6.995497,7.403698,-1.938454,-0.590343,9.411636,-5.644164,8.744203,4.960835,-7.627518,5.364047,8.146484,-9.270669,3.885580,-9.892862,-9.098404,5.227642,-9.518142,6.257643,-6.780486,-6.504643,2.091875,7.763192,5.448442,3.773714,-5.956923,1.778601,5.923017,-4.256924,4.431881,-0.499936,-6.291478,-4.988168,-1.966135,8.270420,6.154549,-8.527515,-4.761202,-3.178481,6.642169,9.861029,-9.691784,6.233023,8.496859,-7.653680,-2.713911,-5.237038,-8.657020,6.916109,-1.998298,7.211372,-0.978267,-2.303611,5.800851,-5.010706,-8.721732,7.834668,-7.343680,-0.672261,-7.298012,-1.799442,-5.619208,6.155099,1.598180,4.960704,0.361586,-7.105419,6.863315,1.712474,4.239550,9.307623,2.101773,-8.322335,3.045901,9.202266,5.811239,-4.091769,3.648818,-9.283434,-4.774649,-4.680981,-0.497480,5.492372,-8.640291,8.561424,-4.286065,5.539540,8.246721,4.983171,1.128458,-8.406808,-7.813951,-0.198857,-0.162200,-8.850079,-8.321706,-0.997666,2.360575,-9.264570,-5.432610,7.533970,-8.571571,4.979267,-1.285532,-5.672383,7.646328,-7.270814,6.577029,2.238218,7.844993,-1.456945,3.033861,9.286096,-7.289416,-2.775070,1.075470,6.020300,-1.661792,1.010218,0.642731,-9.622864,-0.983624,-9.860225,6.689349,6.162813,-7.694393,6.141694,-1.474768,-1.268824,-4.508326,-8.372384,4.178024,-9.658454,-2.535756,-2.220521,8.773868,-6.856165,-3.986237,-0.012294,9.240801,-2.111886,5.158701,2.538786,-3.343337,6.103751,-9.590171,-2.823472,0.352888,2.068576,-7.801136,-5.289304,4.924805,8.091839,5.488612,7.244641,2.729302,-1.994575,1.279719,8.298233,-2.608237,1.949975,-1.350373,-6.083752,-8.636384,5.745505,9.816910,-0.111874,-6.790519,-4.509360,4.243553,-8.108274,-0.862372,-4.118273,-6.529377,5.621441,-4.050734,8.309249,4.729998,-4.457924,-1.880069,-1.642110,2.945793,-6.201557,5.621099,-8.788177,-9.053237,9.951260,2.584601,4.676627,5.447622,-1.625861,6.917832,-9.435605,9.329567,-1.679427,-4.970079,-6.050042,9.872279,-8.934700,0.442303,-8.791827,3.002371,-1.157333,5.333996,7.141392,0.266036,-8.973394,6.593955,9.668151,3.681942,-8.669221,-5.229087,-3.900251,3.894909,-2.818484,4.966430,6.717993,1.054652,9.048133,0.625618,2.817500,6.664829,9.878724,5.076638,2.330831,-4.892041,-7.429912,-3.115416,-2.423763,8.403106,4.226929,8.446345,-6.289761,-3.999650,9.599863,-6.166621,-6.708329,-0.383311,-4.938385,-9.682346,5.894595,-9.214425,-4.544968,-0.722846,-0.966228,9.888349,-0.595750,-5.750595,4.413213,-2.444622,-7.734623,-2.562687,-1.510001,-0.259281,-7.756589,1.689996,8.649859,6.531890,-2.792157,2.435039,-3.363652,-2.895849,0.188819,7.624683,-7.367108,-3.079340,-2.704850,9.501190,8.328895,4.697997,1.561463,9.874768,-2.725399,-5.181016,-5.338179,-3.317437,-5.947918,0.306379,6.881453,8.250679,3.424766,3.178855,-9.322703,-0.633461,-9.509434,5.637995,-1.629252,7.324307,7.322077,-8.384736,1.338849,-7.280419,7.968592,2.735694,-2.963157,-5.532687,-4.724635,8.669583,2.136176,3.696653,-4.044566,2.866529,1.221018,0.151683,-1.377527,4.176458,-2.572608,6.646796,7.787291,1.293234,5.525647,0.911375,3.898567,-2.043557,8.952908,-9.250533,-4.393449,-3.044618,-7.207409,3.905467,0.136459,-1.907650,-8.933623,-2.369923,5.328397,-7.687538,9.923845,-8.614213,-3.618297,8.607145,-8.061736,2.140854,7.199713,3.193193,-4.957068,-7.125558,0.448100,9.072426,2.985813,8.204194,6.955220,5.631142,-1.250531,3.015466,3.762522,-5.297592,1.620769,-1.956645,2.950562,-2.566818,-0.377854,-7.734372,-7.869674,-0.508241,0.686288,-9.306850,5.024299,1.236339,6.482276,-6.255403,-3.676221,4.641378,3.814310,-1.344236,6.447543,-3.655596,-3.469604,2.813264,-2.739362,-9.637011,3.443997,2.748558,-2.538281,-3.998998,2.614084,-3.747500,9.758856,2.669460,-2.639890,-4.976937,3.921021,6.330204,4.314598,-3.844221,-5.781155,8.324348,1.246604,-9.420635,1.265328,5.506986,-0.303979,-1.745835,5.657297,-5.717321,-5.158525,1.627086,6.562427,8.372775,6.357700,-4.038373,-2.642001,-4.282532,-4.628102,3.283574,4.663748,5.578424,6.651897,-9.155298,8.319266,-7.691100,7.384556,7.494163,-8.973147,8.287086,-3.398409,-4.157882,0.839719,-7.214543,9.892910,5.445332,1.146161,-1.855906,3.578568,8.396859,8.909511,-1.166896,-1.002329,3.399011,-1.141400,-4.620646,9.648932,0.490352,9.169998,-0.952890,0.301461,-3.810232,-9.579878,5.295923,2.160427,5.110630,-6.515463,2.762476,1.351857,-9.209280,4.299363,3.369565,8.790066,4.414426,-3.364072,4.673980,3.498810,-1.221911,2.732370,7.276836,6.251324,0.702895,-1.613622,-6.813968,-9.661152,6.845075,3.852629,-1.354922,2.545325,-5.757021,3.879676,-2.609973,0.637641,9.108386,-3.049822,7.896581,1.841411,-6.508359,3.594092,0.568213,9.766083,1.631501,7.207016,2.000183,6.738506,7.217310,9.958990,7.334941,-0.677564,8.123307,-6.787704,-3.670320,-4.134703,7.356223,4.712788,0.614513,-3.780929,-6.111954,-3.688056,-9.004358,7.507961,-1.857776,9.786904,7.097325,-8.961373,8.645631,2.562892,-2.689953,-0.815561,7.513725,8.916886,-1.427210,9.245399,4.726861,-2.753122,2.777390,8.294654,-5.773358,5.302833,3.364262,8.402454,-3.109563,-4.393868,-9.034059,8.679621,6.407877,-1.236492,-9.348177,-1.436402,3.784130,8.652288,-7.517569,-6.204611,-4.135191,-8.153585,-1.364571,-6.822523,-1.820415,7.809025,5.344739,-2.401567,9.272599,-9.623458,-3.623987,-2.196295,4.149471,-1.479881,-3.693325,-7.032761,-5.878116,-2.876787,-9.849568,-4.921957,-5.999283,1.198464,-3.528157,-0.501978,-4.188794,6.662557,7.995889,-3.889908,2.992902,-1.315929,-5.672154,-9.882929,4.950354,7.006370,4.470093,-4.889620,2.188732,1.325527,1.321793,-8.358078,-0.178913,-0.487137,0.822519,-3.341249,9.158919,-4.127275,-0.885215,-5.371718,-8.664022,3.121058,7.263663,2.790906,-1.349257,-9.855279,-8.179105,3.402246,-3.441973,-0.026935,1.508639,5.932315,7.139434,-6.171368,-4.056540,2.604112,-8.472665,4.252188,-0.414442,-9.283607,1.353417,-0.842475,2.922481,6.753370,9.062198,7.511320,-0.661053,8.387323,5.671810,7.409515,-7.768283,-2.151269,-8.246639,3.722123,-2.257151,6.038304,-6.865618,4.915247,1.361086,-8.493544,-7.682787,5.990377,-3.044828,-0.378380,-6.661194,7.673115,-4.577944,7.935528,2.818847,4.950711,5.701631,-2.811939,-8.119463,3.719137,-3.342928,-7.137339,-0.311267,4.540401,-1.553135,-7.566647,-1.319295,9.794632,7.342701,9.923182,4.616642,-5.844724,1.142199,7.228448,-6.845397,5.227349,-1.528307,9.199892,-8.411053,6.992125,-5.801599,5.089145,1.739992,1.743951,-3.468893,-6.122438,7.960907,-5.206635,1.066852,-4.812314,-3.218962,-4.306083,8.614701,9.569256,-4.063586,-7.053371,-9.278633,7.354856,-7.547669,-2.257218,2.297623,2.408327,1.203670,3.274865,3.107454,-4.989997,-5.415065,-2.777569,-0.807726,4.737515,-8.213968,5.307359,2.447876,-3.442808,6.796176,-8.847326,0.131923,8.139728,2.952763,3.506679,-1.478686,4.941066,-5.051968,-8.441217,9.318624,-1.569881,0.246352,2.134768,-1.848094,7.673924,-1.890210,7.037822,7.585040,0.911998,3.206255,5.649114,-1.371150,-8.423016,-0.618727,-8.521995,-8.108976,9.813977,-0.756155,4.038222,-5.899413,0.244241,-2.008337,2.454496,1.038671,9.785462,9.849341,8.304057,5.445632,3.940058,-5.619208,5.165536,-4.120147,5.646998,3.790081,2.816428,3.648386,6.486954,8.195354,3.138575,5.121561,-2.828327,4.158862,-9.151848,7.352910,-6.732542,9.762767,6.920626,-9.822868,2.664717,5.941812,2.980646,1.581378,-8.132229,4.490608,2.969360,-4.839884,-2.035622,3.062732,-0.998807,-0.901984,5.918327,0.850395,3.168384,3.092449,1.337461,0.455109,2.962208,6.566553,-8.378060,0.404493,2.009762,6.109323,6.557617,6.733415,8.853266,-2.412552,4.904013,9.494775,9.899430,7.308577,7.483006,1.516881,9.147961,9.421008,-3.144396,-7.402072,-8.268386,2.254993,-7.871949,-4.409323,-4.142859,-9.040833,-9.212170,-2.619212,-3.349322,-8.670847,-3.021096,-5.346204,0.380732,7.895693,-5.101901,0.398676,1.206219,-2.460323,9.021702,-7.605839,7.605361,-6.340853,-3.195913,3.286488,-7.790206,6.040437,-8.271439,7.054184,7.898516,6.056154,-1.988499,-9.330533,9.325182,4.469261,7.874057,-9.329191,5.277927,-1.694013,9.932221,-0.963849,-0.130067,-4.471402,-7.940396,-7.563449,1.287635,6.991628,-1.372436,6.207833,3.101653,5.383576,-5.976009,3.813273,-0.429619,-3.516620,-6.307212,6.275378,-1.546640,8.681707,8.678269,-5.697476,9.507552,-8.238533,1.025507,9.149015,3.014065,-9.939144,-9.716078,1.002957,1.502118,-4.148872,-2.374726,-9.167324,2.257852,1.628261,0.830843,1.854096,-6.374765,7.137397,-6.961522,-1.234509,9.019084,6.235397,-8.225055,-2.649328,-4.516855,9.685447,-2.226947,3.013247,1.627644,3.024402,-5.690062,9.539796,-0.212109,5.140643,2.735850,-3.372253,-7.818938,-1.183630,-8.781924,-9.687481,9.452869,-6.909195,-5.482507,-7.905930,-6.473930,-5.841380,-5.980894,9.973281,-3.606738,6.700256,-1.204102,-1.661950,-9.436553,-9.368772,6.803043,4.550030,-9.974799,1.346093,-4.506861,5.864746,7.444769,5.724243,9.438267,-2.075205,6.330154,-6.860613,-3.441306,-2.172049,2.860172,1.824274,-3.710714,-0.883447,-5.652596,8.878914,2.357158,-5.254812,-3.530968,-1.074241,-6.328243,-8.452218,8.931226,-0.624226,3.626666,-0.807351,7.757753,-3.285102,-1.636080,-7.262915,-2.141801,2.019622,-8.596375,-7.347588,-4.110201,4.920085,1.945328,-6.082005,-0.252923,-7.869046,-2.533280,-1.837380,5.802717,7.899200,6.284786,-4.937170,2.320957,3.092339,9.434774,-9.469360,6.742140,7.776372,6.646915,3.762565,-2.273812,-8.534802,-4.787547,-0.824495,2.932881,8.918812,6.969788,-3.998504,-4.077725,8.178305,0.234714,2.187196,3.020056,1.106348,-7.229187,-4.277898,7.520797,9.334686,8.243059,8.169998,3.235388,-0.146969,-6.109192,1.068046,-2.869849,6.093315,8.312072,-5.621733,7.308162,2.252812,-5.023834,-8.993608,-6.365755,3.464846,7.708409,-1.996647,-2.754590,2.458596,3.769674,9.338879,9.225282,3.118313,1.604448,8.359669,-3.471601,-6.665907,-8.080359,-7.432934,1.280958,8.544774,-1.256270,5.288106,-1.266487,1.636957,-2.526787,1.080723,0.435993,-0.484959,6.303359,8.624680,-6.646497,-7.082448,-9.535169,-8.869756,3.643887,-7.538301,3.087454,-3.737079,7.551502,-8.526646,-7.600587,8.337970,-0.283459,-1.623468,-1.007830,7.724814,6.703350,9.326275,-0.793318,6.298738,0.239449,7.996287,-4.627764,-0.140559,-7.738866,6.770292,7.481828,-4.652929,-7.088448,1.075218,3.698535,5.783146,-5.686872,-9.747745,-0.406708,-3.910500,-8.539519,2.209065,0.794232,-9.603883,-7.108211,-7.826601,-1.824097,7.713642,9.902045,0.816333,-3.089087,-4.651464,-7.983691,1.550219,-5.560953,-4.180979,-4.221766,0.009165,-1.624611,2.443800,3.287899,-3.887447,-6.592510,-4.851940,-8.644252,-8.004053,3.980765,3.402958,-0.749712,-4.300430,7.323758,9.507881,-0.119190,4.984716,-0.288809,1.860913,8.249410,5.841245,-2.457434,7.478093,-6.324353,5.709072,-5.032474,4.334049,3.196220,-0.632884,-2.974032,-7.493652,-3.086863,8.605781,-0.367273,8.155313,-3.554181,-9.524399,-6.211195,1.438373,8.281857,-3.499719,-7.279452,-2.557356,-5.240012,-0.363593,-6.184613,0.938485,-6.205679,7.988996,-0.973104,-0.452446,-0.330698,9.877977,0.530193,6.504899,3.373699,-4.427554,3.343032,8.939300,2.930044,-9.858733,4.222987,1.834632,6.879300,-1.171935,0.805879,-8.333293,7.596897,-5.464860,5.977078,-8.676510,-7.065767,-6.374442,3.906361,9.438498,5.990657,2.193787,8.311766,-0.029617,4.979663,-7.680873,-9.255584,-3.635194,-0.417364,-7.705443,-8.359715,-2.430327,4.834877,-1.373251,2.243067,-9.103512,-5.889133,2.424993,-9.715362,-4.023094,-6.104532,-0.091565,1.668906,6.246637,8.536030,0.697303,-7.136277,-6.935530,-7.500062,-1.576257,-8.930397,-4.496953,-7.781271,2.512078,-0.613462,1.222447,-8.781203,7.690593,-3.677098,-5.296646,-8.940661,-6.248854,5.094667,-5.024724,2.799664,9.847459,4.285404,-1.402871,0.978691,-8.037407,1.196732,8.936266,8.877202,-8.956666,6.332105,-2.775740,-2.275677,-8.581014,4.687072,-9.645959,5.352974,7.019215,8.537073,7.326872,4.463874,-4.943311,2.007651,-1.376394,-3.694561,-7.872969,1.631448,7.330020,4.109536,-5.841303,7.332184,-6.650430,-0.209971,7.910735,1.904269,4.484634,7.450321,-8.389663,8.032553,0.768068,7.827320,3.910705,-9.187158,-5.701089,-1.760461,2.956603,4.161713,-9.124212,9.343257,-1.748513,-1.508469,0.996585,3.429530,-0.536576,-4.137144,1.165862,-6.960266,7.988736,9.683833,-9.140517,-0.892972,4.340153,4.447809,6.027578,-6.457148,-0.110196,5.347121,-9.597304,1.938748,1.183051,-1.308814,1.586974,7.415342,-3.648552,-6.616580,-6.070257,-7.596898,4.149173,-5.268951,-0.727875,-3.636050,9.165950,-9.579323,-3.512875,1.791672,3.934650,-8.472925,-3.992447,6.209826,3.249037,3.450266,-6.343235,8.513145,-4.058796,4.467969,-4.583893,7.600851,9.085716,0.094646,4.446496,-8.576010,5.233360,0.442448,-2.294606,-5.140912,-4.858867,-8.732267,1.888485,-8.482257,4.823451,-2.973836,8.069111,1.606106,9.421004,6.086631,6.989962,0.041617,-6.613462,-0.058602,-6.017770,-7.374402,5.516148,4.185028,0.133010,-6.079364,5.924650,-8.509333,-2.521485,-6.014066,1.483204,-7.838300,7.230936,8.730857,-5.353951,-5.032555,-0.433565,7.963250,9.393651,-8.933374,6.910858,3.812875,7.751626,0.351208,-1.713172,0.039887,3.424253,-4.195630,2.519726,4.846294,-9.998804,-5.762703,-4.280391,-1.329922,3.140231,-7.575978,3.319499,0.465448,-0.002842,-1.659353,-1.748320,-1.589785,6.291547,-7.467875,-7.150506,-6.940144,-8.660499,7.552450,-8.554165,-1.381104,-0.399288,-8.888938,7.097364,-3.184103,0.579154,-1.303721,-1.107879,8.239034,7.971536,-1.146588,8.854049,-2.263730,-3.773172,4.660085,0.882515,-3.283893,-2.289122,2.455992,-1.596924,6.838890,-1.360819,-8.568796,-6.789636,-7.488586,6.927470,4.067024,8.257518,-4.243562,2.980782,4.971958,-3.625296,-6.814731,-5.837150,-0.565756,0.862508,-7.458041,5.818359,-0.988102,7.836410,9.648707,-2.021022,0.993625,3.623124,4.293001,0.290648,6.602039,-4.419085,2.937248,-7.959394,6.100114,5.390874,2.407857,-3.542405,9.449489,3.146145,6.042536,7.385318,3.876083,-0.073642,-1.703727,5.892506,8.686933,3.920373,6.971226,-7.262963,-6.765358,-2.429520,-9.037104,2.957197,-6.187208,4.657551,-9.924457,9.086267,3.722662,-5.676505,2.207319,1.833033,0.354486,5.724869,-7.381684,-6.370080,-9.206472,2.462360,6.254335,-3.005658,3.626868,0.456323,-8.508642,2.194156,8.237533,9.329350,-9.942307,6.623803,-0.207324,-8.110124,5.361491,2.244693,6.619615,-9.238380,0.017789,0.656678,-8.723007,7.400466,3.555107,-2.070290,-7.928458,3.673991,4.172166,7.442202,-7.654465,-9.918015,-8.378106,3.159797,-4.014204,-1.515589,-9.332812,-7.716804,7.221383,5.571104,0.508911,5.871268,-1.432079,-9.890425,4.414981,8.009294,9.721108,4.490680,6.501046,1.747386,1.128148,2.371650,1.807671,-5.314150,2.706452,7.358028,-6.955715,4.945489,-4.136391,-2.469839,0.340084,1.672944,0.665759,-4.233318,1.353134,3.630620,3.284012,-0.521067,-1.611104,8.791639,-5.072337,-2.451581,9.868243,1.624642,9.364780,-9.583428,1.057949,0.116155,-7.735345,2.610056,-2.358496,-1.090229,-8.688519,-8.587112,-1.560987,-3.372009,6.520217,9.057800,-4.601043,-2.044398,-3.329314,-8.545186,-6.369747,-1.514432,4.629909,-4.388981,-3.154225,-7.275885,4.550212,-9.642599,-9.917558,-0.555693,7.939507,7.538952,8.794267,-1.228012,-4.473396,5.486944,-7.750900,9.718504,-2.334615,9.732049,7.124963,9.820252,0.142667,-6.008575,-6.427139,5.266943,-0.518560,-3.529635,-0.982885,8.018214,2.043485,9.349660,-5.042098,-8.611657,-4.328600,-2.931714,3.776592,-0.316116,8.169922,-1.028983,3.600780,1.503709,-1.567023,2.834473,-8.427021,5.675138,-0.321773,-4.874137,-7.224225,5.776088,-1.333766,-3.730430,8.901532,-5.496374,9.702071,-8.421579,-4.806000,-5.988891,5.306002,8.576017,-5.411993,-8.442250,8.446852,4.263368,1.450919,-0.540983,-8.536508,9.850684,1.479096,-5.080076,-7.581117,-1.754267,9.179998,-0.213106,-9.997496,-9.505381,-4.626730,3.363032,7.082536,0.472531,6.675034,6.592879,-1.285532,0.783173,-1.165011,-8.484399,8.730074,-6.960340,5.554692,1.572066,-8.728543,-2.517414,-8.989134,7.679711,8.879530,-7.763874,-6.558986,-4.399705,-9.951841,5.641326,-6.805138,-3.453352,-8.465565,-3.199789,9.022204,7.671159,4.328697,-0.343239,-8.817645,-9.861109,2.467342,-5.532011,-7.725872,-7.725664,0.037100,5.248706,-3.578746,6.317947,-4.138176,-8.361955,1.530558,-0.885060,-9.145370,2.553476,-1.957505,-4.232584,-7.344736,8.801938,4.520557,-5.300841,7.846344,-7.971007,5.930048,-1.761561,0.126244,9.230298,3.993457,-9.095526,-2.149729,-9.322238,5.787053,-9.728642,6.411645,-1.590445,-4.078058,9.310997,-9.580398,5.220831,1.583324,-3.756773,-0.487992,-2.408177,1.122740,9.054148,-9.189616,-1.115936,-3.330110,9.865510,-5.345333,8.167818,-3.550012,0.975138,-9.979320,-5.299807,-7.446830,2.331026,-5.750703,-1.921762,-6.059345,-6.060326,0.192764,-0.685794,1.023464,-1.619457,2.692724,-7.861674,-0.636479,-5.375534,-7.624699,6.596013,7.745360,-1.416575,-6.672995,1.251072,-6.348350,6.451612,-5.638799,-3.535128,9.720886,-9.581371,-6.906408,1.615667,-0.418952,0.397073,-9.840243,3.096591,5.414163,-9.173429,4.905947,-5.518840,7.954409,6.120493,4.529625,1.363526,-0.874366,1.236527,7.809710,-7.083651,6.442866,-4.913195,-1.546385,8.499613,0.469975,5.070605,-5.167762,4.508818,8.905163,5.099723,-6.628608,9.420022,-6.348476,2.511869,9.611640,7.934142,7.479168,8.344482,-5.872960,-0.755687,-6.855373,-6.857704,9.456484,-2.261445,-3.604377,-7.432062,-0.014546,-2.777815,-0.817860,-7.898694,0.518783,-4.729395,-7.118082,-6.923112,0.602872,-0.856176,-3.717448,-0.464023,-1.929620,-6.788001,-9.902831,6.331113,-7.560707,-7.381840,9.231570,8.224539,-0.946255,-1.424173,3.441045,0.260533,2.358206,-3.370637,-5.909485,2.505126,6.726470,-6.720157,-6.328818,-6.076007,1.081262,-6.948206,-3.398346,0.078981,4.292069,5.723130,-3.920187,9.985517,-9.481988,7.102674,-3.379499,-2.391232,-6.054397,-9.027719,-3.248920,3.663611,7.192394,8.696192,8.688776,-4.699129,-7.733072,9.132794,7.618173,-9.605582,-1.715327,-0.493783,-2.749069,-3.672984,5.811360,-5.365479,-0.188214,3.430280,1.183450,8.635916,8.330152,5.694546,7.705905,-1.488200,-4.268273,-6.962399,-6.386119,8.786750,2.040451,8.721808,-3.710849,0.478348,-9.949378,-6.146305,1.707928,-5.586623,-2.658502,-3.308326,5.057937,-7.637682,7.476237,-1.891604,9.099451,-0.504919,-1.753571,-2.721981,7.786555,3.349229,-9.895609,4.366114,3.810100,6.014486,-8.024137,9.038103,-8.654563,4.077148,-4.180104,-7.028084,4.622766,4.376361,-1.651467,8.462979,1.089699,0.836931,-0.088821,0.488988,7.148295,7.335711,-5.733414,5.072372,-9.559441,-5.044490,-7.799580,7.914237,7.240677,0.083958,-7.633391,-7.807219,5.925360,5.109309,-0.810004,6.708425,8.853374,5.634830,3.667828,7.838917,8.481103,0.774407,-6.754123,-2.567146,7.698484,1.920156,-5.678409,1.626664,-7.309041,8.798873,5.548562,-7.552255,-1.129206,-8.681788,-2.232037,4.357320,3.343647,7.189946,1.881347,8.976322,-7.024774,-8.810254,-6.977973,-2.376380,5.303500,-6.269617,7.830342,6.919953,-7.093204,6.318641,7.350772,5.718887,8.849495,-6.312533,-4.630776,9.733518,1.438891,1.405307,0.647359,-1.604212,6.484354,1.008055,0.225326,-0.044818,-2.725925,-7.094325,9.368683,-3.250421,-9.239440,4.303737,4.557481,3.984219,8.357669,-4.541735,8.572367,8.917968,7.463438,7.928680,9.627091,0.876992,9.496807,-1.266575,5.630565,-7.430134,9.982787,-9.508547,-8.010633,4.365283,-0.254747,6.671702,-8.911672,-4.809883,6.407474,-8.404592,-0.531006,5.830060,5.715340,-5.713747], dtype = "float64")#candidate|1257|(2352,)|const|float64
call_1256 = func_687_call(relay.reshape(const_1257.astype('float64'), [14, 12, 14]))
call_1258 = func_687_call(relay.reshape(const_1257.astype('float64'), [14, 12, 14]))
bop_1265 = relay.left_shift(bop_1244.astype('uint64'), relay.reshape(var_1252.astype('uint64'), relay.shape_of(bop_1244))) # shape=(12, 13, 7)
var_1270 = relay.var("var_1270", dtype = "float32", shape = (12, 13, 7))#candidate|1270|(12, 13, 7)|var|float32
bop_1271 = relay.subtract(var_1239.astype('int64'), relay.reshape(var_1270.astype('int64'), relay.shape_of(var_1239))) # shape=(12, 13, 7)
func_470_call = mod.get_global_var('func_470')
func_473_call = mutated_mod.get_global_var('func_473')
var_1285 = relay.var("var_1285", dtype = "float64", shape = (4, 44))#candidate|1285|(4, 44)|var|float64
call_1284 = relay.TupleGetItem(func_470_call(relay.reshape(var_1285.astype('float64'), [4, 4, 11]), relay.reshape(var_1285.astype('float64'), [4, 4, 11]), ), 0)
call_1286 = relay.TupleGetItem(func_473_call(relay.reshape(var_1285.astype('float64'), [4, 4, 11]), relay.reshape(var_1285.astype('float64'), [4, 4, 11]), ), 0)
uop_1293 = relay.cosh(call_1284.astype('float64')) # shape=(4, 4, 11)
uop_1295 = relay.cosh(call_1286.astype('float64')) # shape=(4, 4, 11)
output = relay.Tuple([bop_1253,call_1256,const_1257,bop_1265,bop_1271,var_1285,uop_1293,])
output2 = relay.Tuple([bop_1253,call_1258,const_1257,bop_1265,bop_1271,var_1285,uop_1295,])
func_1305 = relay.Function([var_1239,var_1252,var_1270,var_1285,], output)
mod['func_1305'] = func_1305
mod = relay.transform.InferType()(mod)
mutated_mod['func_1305'] = func_1305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1305_call = mutated_mod.get_global_var('func_1305')
var_1307 = relay.var("var_1307", dtype = "float32", shape = (12, 13, 7))#candidate|1307|(12, 13, 7)|var|float32
var_1308 = relay.var("var_1308", dtype = "float32", shape = (12, 13, 7))#candidate|1308|(12, 13, 7)|var|float32
var_1309 = relay.var("var_1309", dtype = "float32", shape = (12, 13, 7))#candidate|1309|(12, 13, 7)|var|float32
var_1310 = relay.var("var_1310", dtype = "float64", shape = (4, 44))#candidate|1310|(4, 44)|var|float64
call_1306 = func_1305_call(var_1307,var_1308,var_1309,var_1310,)
output = call_1306
func_1311 = relay.Function([var_1307,var_1308,var_1309,var_1310,], output)
mutated_mod['func_1311'] = func_1311
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1788 = relay.const([[[-2.544522,7.793330,-0.104659],[-2.492938,5.208286,1.491896],[-6.841273,4.668216,-4.619815],[3.658147,2.358306,-0.377183],[-3.384474,-1.020694,-2.280771],[-9.691782,2.809543,1.005858],[-3.316288,9.166373,1.304244],[2.277527,5.470468,1.870046],[0.875707,-0.226712,-5.634035],[8.204018,-3.399799,-2.368150],[8.736002,4.175556,3.623835],[-5.550518,-1.026781,7.633032],[1.807051,-8.780674,2.369635]],[[-8.764461,-4.334106,6.434305],[7.787745,4.615343,-9.040658],[-5.347882,9.499072,-2.300008],[0.240856,-0.597296,-6.017934],[9.994324,-4.042539,-7.662887],[8.025881,4.069600,4.330400],[-0.898620,3.592454,3.585915],[-2.676808,0.864293,5.489373],[-4.671460,7.620010,7.814716],[-2.556121,2.351072,-9.870744],[-6.998635,-3.038658,7.085478],[-1.528491,-6.509776,-6.597226],[7.988355,-1.616697,-4.607961]],[[-5.087725,-7.429411,6.889518],[1.763285,-4.560402,-6.677610],[-3.777987,6.455896,-4.455476],[0.235224,-4.475520,-9.625427],[3.875556,5.623050,3.880943],[0.194928,-5.979578,8.116531],[1.206321,2.273407,2.265938],[-4.175755,-5.785692,-7.080587],[9.715886,3.608134,0.634955],[-8.972070,4.911994,-6.471988],[7.182137,-3.181657,7.040523],[9.629233,-5.254726,3.212173],[-4.487855,-6.286862,9.736740]],[[-9.225162,-2.220917,-0.354681],[3.677132,-9.477548,4.196091],[3.321116,-3.120830,-1.014165],[9.843809,2.290277,4.012622],[3.305135,-8.366823,-3.882916],[-5.897190,-0.932189,0.021191],[3.721644,9.169657,7.142529],[-0.218104,9.538602,3.318165],[4.685848,7.258207,-1.022079],[6.622381,4.179703,9.053379],[6.102617,-6.519993,-0.537641],[-5.909218,-7.371647,0.648978],[-0.252342,8.548744,8.352510]]], dtype = "float64")#candidate|1788|(4, 13, 3)|const|float64
uop_1789 = relay.asin(const_1788.astype('float64')) # shape=(4, 13, 3)
output = uop_1789
output2 = uop_1789
func_1793 = relay.Function([], output)
mod['func_1793'] = func_1793
mod = relay.transform.InferType()(mod)
mutated_mod['func_1793'] = func_1793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1793_call = mutated_mod.get_global_var('func_1793')
call_1794 = func_1793_call()
output = call_1794
func_1795 = relay.Function([], output)
mutated_mod['func_1795'] = func_1795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1793_call = mod.get_global_var('func_1793')
func_1795_call = mutated_mod.get_global_var('func_1795')
call_1825 = func_1793_call()
call_1826 = func_1793_call()
const_1829 = relay.const([[[-0.086935,9.706081,7.959986],[0.690059,-0.428225,-9.905516],[-6.176478,-8.436100,-1.221608],[4.090827,9.166909,3.037689],[0.112936,1.989006,6.683801],[-1.991242,-8.596483,0.565444],[7.825067,-8.662538,-1.297912],[-7.404349,4.425791,-9.352664],[-0.191479,5.836672,-2.726834],[6.623546,-7.246435,-9.531895],[-0.148598,8.745835,1.313966],[-2.737119,-8.439312,-0.854291],[0.409264,5.572105,-8.218169]],[[-7.510511,3.413456,-9.346097],[-9.247833,-9.233134,-3.452768],[0.218758,1.156206,4.426097],[5.374121,7.133288,-7.015859],[2.668314,8.573860,2.003547],[-2.765910,-2.417654,4.413447],[1.147644,4.936440,-2.797964],[-3.670923,-9.657727,-6.689794],[-2.234905,9.824213,6.577085],[-2.436752,4.790478,4.728884],[0.797397,-0.274500,-2.698980],[-4.848698,-2.413397,8.539239],[-5.046002,-5.024101,8.883647]],[[-9.191308,-5.046068,-1.213944],[-8.132333,-2.635191,-7.370770],[-7.903340,9.387980,6.070644],[-3.787083,3.338587,4.633589],[0.393564,3.208426,-8.437661],[-4.390993,-9.982778,-8.410612],[1.307912,4.565595,-2.085884],[3.841782,0.895464,-9.612502],[-9.285256,4.756675,4.638728],[-2.190890,-9.859981,-9.209840],[6.374277,0.934126,7.650894],[-0.572744,-3.473318,0.343512],[9.137435,2.020155,6.958224]],[[0.030592,-3.308339,-4.430287],[-6.148310,-7.833290,-5.535223],[6.110313,-2.241067,2.761056],[1.104012,-8.040991,-1.070792],[-6.638825,-8.816904,-7.793771],[0.143482,-2.193984,-7.683196],[8.902442,6.578995,0.637308],[-2.387042,3.997313,-4.236443],[5.431711,-9.422333,4.225417],[2.027450,-0.620809,-9.887437],[9.580278,7.945212,4.718607],[-7.369943,-2.286215,0.125535],[4.118623,-3.268074,-6.371058]]], dtype = "float64")#candidate|1829|(4, 13, 3)|const|float64
bop_1830 = relay.divide(call_1825.astype('float64'), relay.reshape(const_1829.astype('float64'), relay.shape_of(call_1825))) # shape=(4, 13, 3)
bop_1833 = relay.divide(call_1826.astype('float64'), relay.reshape(const_1829.astype('float64'), relay.shape_of(call_1826))) # shape=(4, 13, 3)
output = bop_1830
output2 = bop_1833
func_1834 = relay.Function([], output)
mod['func_1834'] = func_1834
mod = relay.transform.InferType()(mod)
mutated_mod['func_1834'] = func_1834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mutated_mod.get_global_var('func_1834')
call_1835 = func_1834_call()
output = call_1835
func_1836 = relay.Function([], output)
mutated_mod['func_1836'] = func_1836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1793_call = mod.get_global_var('func_1793')
func_1795_call = mutated_mod.get_global_var('func_1795')
call_1902 = func_1793_call()
call_1903 = func_1793_call()
output = call_1902
output2 = call_1903
func_1910 = relay.Function([], output)
mod['func_1910'] = func_1910
mod = relay.transform.InferType()(mod)
mutated_mod['func_1910'] = func_1910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1910_call = mutated_mod.get_global_var('func_1910')
call_1911 = func_1910_call()
output = call_1911
func_1912 = relay.Function([], output)
mutated_mod['func_1912'] = func_1912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_1944 = func_1834_call()
call_1945 = func_1834_call()
output = call_1944
output2 = call_1945
func_1955 = relay.Function([], output)
mod['func_1955'] = func_1955
mod = relay.transform.InferType()(mod)
mutated_mod['func_1955'] = func_1955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1955_call = mutated_mod.get_global_var('func_1955')
call_1956 = func_1955_call()
output = call_1956
func_1957 = relay.Function([], output)
mutated_mod['func_1957'] = func_1957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1793_call = mod.get_global_var('func_1793')
func_1795_call = mutated_mod.get_global_var('func_1795')
call_1958 = func_1793_call()
call_1959 = func_1793_call()
var_1963 = relay.var("var_1963", dtype = "float64", shape = (4, 13, 3))#candidate|1963|(4, 13, 3)|var|float64
bop_1964 = relay.left_shift(call_1958.astype('int16'), relay.reshape(var_1963.astype('int16'), relay.shape_of(call_1958))) # shape=(4, 13, 3)
bop_1967 = relay.left_shift(call_1959.astype('int16'), relay.reshape(var_1963.astype('int16'), relay.shape_of(call_1959))) # shape=(4, 13, 3)
output = relay.Tuple([bop_1964,])
output2 = relay.Tuple([bop_1967,])
func_1969 = relay.Function([var_1963,], output)
mod['func_1969'] = func_1969
mod = relay.transform.InferType()(mod)
var_1970 = relay.var("var_1970", dtype = "float64", shape = (4, 13, 3))#candidate|1970|(4, 13, 3)|var|float64
output = func_1969(var_1970)
func_1971 = relay.Function([var_1970], output)
mutated_mod['func_1971'] = func_1971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_1997 = func_1834_call()
call_1998 = func_1834_call()
output = relay.Tuple([call_1997,])
output2 = relay.Tuple([call_1998,])
func_2001 = relay.Function([], output)
mod['func_2001'] = func_2001
mod = relay.transform.InferType()(mod)
mutated_mod['func_2001'] = func_2001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2001_call = mutated_mod.get_global_var('func_2001')
call_2002 = func_2001_call()
output = call_2002
func_2003 = relay.Function([], output)
mutated_mod['func_2003'] = func_2003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_2004 = func_1834_call()
call_2005 = func_1834_call()
output = relay.Tuple([call_2004,])
output2 = relay.Tuple([call_2005,])
func_2009 = relay.Function([], output)
mod['func_2009'] = func_2009
mod = relay.transform.InferType()(mod)
mutated_mod['func_2009'] = func_2009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2009_call = mutated_mod.get_global_var('func_2009')
call_2010 = func_2009_call()
output = call_2010
func_2011 = relay.Function([], output)
mutated_mod['func_2011'] = func_2011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_2020 = func_1834_call()
call_2021 = func_1834_call()
output = call_2020
output2 = call_2021
func_2035 = relay.Function([], output)
mod['func_2035'] = func_2035
mod = relay.transform.InferType()(mod)
output = func_2035()
func_2036 = relay.Function([], output)
mutated_mod['func_2036'] = func_2036
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2134 = relay.var("var_2134", dtype = "float32", shape = (10, 1, 7))#candidate|2134|(10, 1, 7)|var|float32
const_2135 = relay.const([[[1.881545,-7.489983,9.019321,3.042798,-8.639074,-1.127114,1.299407],[6.279759,0.909534,-2.675187,9.747271,-3.243661,-8.148484,1.546155],[-3.417649,-5.197186,-6.972959,6.304310,-2.494631,-5.972096,-0.637997],[2.845223,8.919860,5.610247,-4.618138,9.918344,8.350873,-8.691631],[2.492265,9.369841,-9.038591,2.289061,9.821629,-6.239720,9.026171],[-8.803636,9.325294,1.184009,-4.024052,0.098288,-1.347155,-4.932502],[2.672993,-5.353439,-5.788509,-8.524413,0.908406,-2.041032,-2.590426],[-0.943960,4.866133,3.305546,-0.905796,1.842445,-8.398311,4.177199],[8.057325,-8.712833,-4.161886,6.192521,4.288592,0.240087,0.477098]],[[5.120301,-8.233458,0.391159,-0.723319,-2.348075,-8.515915,-9.725502],[-2.189232,4.639154,9.887317,-5.362201,-2.938455,1.530847,4.590409],[-2.902506,-0.961525,-3.647168,1.907817,-4.811750,2.963795,-2.815454],[-0.033483,-8.969529,-8.375546,3.420010,5.450988,3.949200,0.815834],[6.358630,7.248434,-3.991110,0.132803,-3.412922,-8.488351,4.236150],[2.396676,7.052447,-9.753473,0.072634,-6.653969,-9.745140,-7.837113],[2.744572,-5.024151,8.278733,1.498807,2.883641,-1.275588,4.984601],[-9.643071,-5.046667,2.067301,-7.077650,7.710991,-2.526093,-4.152982],[-2.594878,9.705104,-5.606360,-5.111214,2.133124,9.486767,9.167736]],[[2.861530,7.923321,8.358981,1.057974,9.643016,-9.424300,4.919530],[-9.426075,0.332685,8.298911,1.300073,4.328533,4.145879,6.904066],[5.928533,-6.155226,4.722946,0.088165,-7.184511,6.427185,-7.989649],[-1.195822,6.880200,2.649490,6.625031,4.544336,-1.856411,7.092315],[0.366493,8.970544,5.732072,2.453131,4.611362,8.468520,-4.010703],[7.091367,-6.353310,-0.481717,4.145473,-4.883948,-8.214804,7.027076],[-2.908079,-3.539110,3.414138,1.532105,-4.664712,9.338270,7.203455],[0.532132,-6.817108,-8.760179,-4.528626,-8.266575,-7.520186,3.894649],[-5.394952,3.182134,5.132409,-3.607043,0.262760,2.392071,8.747320]],[[9.794959,5.706643,-2.993187,-6.062921,-6.555852,4.419622,-7.475040],[8.242791,9.258092,-3.849245,9.575087,-7.626788,-5.331758,3.301888],[1.421944,-7.184162,9.864327,9.457459,5.512075,-3.079159,9.282317],[-7.997753,6.344573,4.276178,2.106295,6.972311,7.004620,8.348568],[-1.075881,8.161807,7.503533,-3.457935,6.334349,-9.205991,5.869241],[-9.157253,-8.181933,-4.254791,-3.921516,-6.921279,4.249307,-2.348009],[-3.938325,-1.537028,-9.770249,-9.960045,-6.445796,-4.141636,9.961966],[-9.906028,2.495333,8.270514,-5.553926,7.999456,1.205790,-5.012622],[-0.845060,8.853801,-5.351697,3.042017,1.520712,-9.411843,-2.497665]],[[3.193759,8.251361,3.741351,-0.878480,3.491564,-3.321393,7.084213],[-5.084423,0.650494,6.459349,4.626651,-5.860332,-4.741016,0.621180],[2.811400,-6.370423,2.441092,7.245833,-1.398807,0.746043,-9.892643],[7.003067,2.486447,8.109971,-0.820500,0.104531,4.014121,-9.572404],[6.214443,-6.777416,5.807470,2.280509,7.923014,1.417504,-1.010866],[3.381132,0.043795,-2.420040,-8.639205,7.719861,-9.589623,4.321172],[-7.851292,-8.963178,0.288313,0.217146,0.251827,7.965472,4.248989],[-1.081772,1.052703,-0.248808,-6.715081,9.728882,-3.779623,3.523901],[1.229862,-6.281992,-7.813341,5.412041,-8.853094,5.946214,3.281256]],[[-6.535411,2.866150,-3.670848,-3.333305,3.939539,1.729931,1.357485],[8.967377,4.452188,1.364648,8.513879,-5.484320,6.026286,7.260613],[-8.619768,2.519437,1.416918,4.704763,4.208986,-6.605985,0.909960],[1.738012,5.625929,0.430132,3.627751,7.549386,8.837788,3.620145],[-2.156059,0.534159,2.427739,0.748608,9.537277,-3.141352,-3.923346],[-6.294461,1.155881,-7.696486,-5.769184,4.482199,8.523468,-0.560009],[-5.852007,1.721052,-0.957267,1.930692,-9.455279,-1.953411,9.128491],[-3.359966,1.268368,7.717321,9.817196,-3.317391,-3.190939,7.018010],[-5.133774,-9.369678,-3.948049,2.595891,-7.490490,-4.438730,3.978357]],[[-2.192308,-6.605423,-6.943251,8.130975,-3.452688,9.295744,6.055258],[-7.354128,6.339390,-9.878986,4.989894,-2.142111,-3.286183,2.298798],[4.507691,9.571734,1.733392,-7.963533,-7.530519,-8.533115,-4.722546],[3.003930,0.832098,1.289108,-1.391290,-4.290263,-0.769136,-4.596556],[7.057659,8.306403,-5.724297,-8.199785,-7.886414,3.664224,4.849075],[1.395115,9.393920,8.871587,-8.617116,-4.131170,-2.320942,-8.636551],[1.373678,4.596292,-1.071330,9.906882,-5.112868,3.072056,-2.967203],[1.999792,-4.529691,-8.960074,2.966885,-8.664896,-0.460302,-5.793782],[4.215473,7.561178,9.219734,2.253895,9.414227,-5.115784,-0.067422]],[[8.728466,-3.754882,-4.384344,1.772392,-0.631106,-8.945040,1.299456],[9.058469,-5.732877,-4.448235,2.172205,-0.070963,-2.095408,1.582429],[2.730928,-0.985479,8.441716,8.992737,2.875660,-0.992203,4.095839],[-5.266093,7.023986,-5.249021,-4.081791,4.066372,-3.087915,-3.231094],[7.577210,8.127079,1.176398,6.375351,-8.615445,1.440645,-7.383697],[-5.295781,-5.450296,-4.048837,-5.123352,8.710798,6.294941,5.289911],[8.346421,-8.100848,3.720813,9.475254,3.245977,7.224436,-2.482269],[8.618805,-4.268911,-7.227225,-5.727580,-6.230691,-2.922925,8.046716],[-9.280708,3.650930,-6.415288,1.372137,-1.570543,0.144611,0.198785]],[[4.728549,6.826466,-5.395626,-4.406269,-9.519118,7.240707,-9.840247],[1.624034,-6.490851,-7.442677,5.754727,2.162350,-5.929303,8.476496],[-1.136918,0.722310,-5.162535,-2.307212,-5.514693,-8.113364,-6.106764],[-9.278666,9.271418,-8.666095,6.755914,4.136658,-8.560923,2.229876],[-2.529352,-5.814008,-3.581509,9.931834,-8.389338,8.561319,-1.034220],[6.597551,-9.281044,9.133124,7.175051,9.678942,-6.153765,4.573271],[3.709105,-9.215322,-7.055084,-2.501720,-0.376390,5.033164,-1.345706],[3.846931,-4.988776,2.024081,-7.342959,-4.307871,-6.417449,0.874702],[4.033194,4.443339,9.928372,-6.583311,-8.281179,-5.809803,-5.187885]],[[4.599441,5.521318,-4.884948,-0.626121,-2.831656,-7.052614,-9.301452],[-5.529453,-9.160672,3.040538,-9.172485,0.742370,-4.906025,-1.508703],[-4.694841,-6.460968,9.157485,-1.763812,-8.187347,2.198383,-6.697902],[9.510369,-6.826003,-4.837354,9.769052,5.970070,-8.918503,0.297690],[-6.135678,-8.351368,-2.691049,5.148826,-9.734600,7.320449,-6.689030],[3.598342,1.124356,3.626312,-4.573565,-1.791449,2.450768,9.774319],[-8.548327,-7.084448,-8.015561,2.858646,-0.967814,-7.918431,-2.146453],[4.871177,-6.017274,8.996870,2.190379,-1.364294,-7.676273,-8.093816],[-7.258759,-9.257473,-9.192163,5.032729,2.460533,6.708415,9.818208]]], dtype = "float32")#candidate|2135|(10, 9, 7)|const|float32
bop_2136 = relay.floor_mod(var_2134.astype('float32'), const_2135.astype('float32')) # shape=(10, 9, 7)
output = relay.Tuple([bop_2136,])
output2 = relay.Tuple([bop_2136,])
func_2149 = relay.Function([var_2134,], output)
mod['func_2149'] = func_2149
mod = relay.transform.InferType()(mod)
var_2150 = relay.var("var_2150", dtype = "float32", shape = (10, 1, 7))#candidate|2150|(10, 1, 7)|var|float32
output = func_2149(var_2150)
func_2151 = relay.Function([var_2150], output)
mutated_mod['func_2151'] = func_2151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1793_call = mod.get_global_var('func_1793')
func_1795_call = mutated_mod.get_global_var('func_1795')
call_2183 = func_1793_call()
call_2184 = func_1793_call()
func_1969_call = mod.get_global_var('func_1969')
func_1971_call = mutated_mod.get_global_var('func_1971')
call_2187 = relay.TupleGetItem(func_1969_call(relay.reshape(call_2183.astype('float64'), [4, 13, 3])), 0)
call_2188 = relay.TupleGetItem(func_1971_call(relay.reshape(call_2183.astype('float64'), [4, 13, 3])), 0)
output = relay.Tuple([call_2183,call_2187,])
output2 = relay.Tuple([call_2184,call_2188,])
func_2189 = relay.Function([], output)
mod['func_2189'] = func_2189
mod = relay.transform.InferType()(mod)
mutated_mod['func_2189'] = func_2189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2189_call = mutated_mod.get_global_var('func_2189')
call_2190 = func_2189_call()
output = call_2190
func_2191 = relay.Function([], output)
mutated_mod['func_2191'] = func_2191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2001_call = mod.get_global_var('func_2001')
func_2003_call = mutated_mod.get_global_var('func_2003')
call_2192 = relay.TupleGetItem(func_2001_call(), 0)
call_2193 = relay.TupleGetItem(func_2003_call(), 0)
var_2200 = relay.var("var_2200", dtype = "float64", shape = (4, 13, 3))#candidate|2200|(4, 13, 3)|var|float64
bop_2201 = relay.logical_and(call_2192.astype('bool'), relay.reshape(var_2200.astype('bool'), relay.shape_of(call_2192))) # shape=(4, 13, 3)
bop_2204 = relay.logical_and(call_2193.astype('bool'), relay.reshape(var_2200.astype('bool'), relay.shape_of(call_2193))) # shape=(4, 13, 3)
func_553_call = mod.get_global_var('func_553')
func_555_call = mutated_mod.get_global_var('func_555')
var_2206 = relay.var("var_2206", dtype = "float32", shape = (1560, 1))#candidate|2206|(1560, 1)|var|float32
call_2205 = relay.TupleGetItem(func_553_call(relay.reshape(var_2206.astype('float32'), [10, 12, 13])), 2)
call_2207 = relay.TupleGetItem(func_555_call(relay.reshape(var_2206.astype('float32'), [10, 12, 13])), 2)
func_2189_call = mod.get_global_var('func_2189')
func_2191_call = mutated_mod.get_global_var('func_2191')
call_2209 = relay.TupleGetItem(func_2189_call(), 1)
call_2210 = relay.TupleGetItem(func_2191_call(), 1)
func_2009_call = mod.get_global_var('func_2009')
func_2011_call = mutated_mod.get_global_var('func_2011')
call_2214 = relay.TupleGetItem(func_2009_call(), 0)
call_2215 = relay.TupleGetItem(func_2011_call(), 0)
func_1305_call = mod.get_global_var('func_1305')
func_1311_call = mutated_mod.get_global_var('func_1311')
var_2217 = relay.var("var_2217", dtype = "float32", shape = (1092,))#candidate|2217|(1092,)|var|float32
call_2216 = relay.TupleGetItem(func_1305_call(relay.reshape(var_2217.astype('float32'), [12, 13, 7]), relay.reshape(var_2217.astype('float32'), [12, 13, 7]), relay.reshape(var_2217.astype('float32'), [12, 13, 7]), relay.reshape(call_2205.astype('float64'), [4, 44]), ), 4)
call_2218 = relay.TupleGetItem(func_1311_call(relay.reshape(var_2217.astype('float32'), [12, 13, 7]), relay.reshape(var_2217.astype('float32'), [12, 13, 7]), relay.reshape(var_2217.astype('float32'), [12, 13, 7]), relay.reshape(call_2205.astype('float64'), [4, 44]), ), 4)
uop_2219 = relay.log2(bop_2201.astype('float64')) # shape=(4, 13, 3)
uop_2221 = relay.log2(bop_2204.astype('float64')) # shape=(4, 13, 3)
output = relay.Tuple([call_2205,var_2206,call_2209,call_2214,call_2216,var_2217,uop_2219,])
output2 = relay.Tuple([call_2207,var_2206,call_2210,call_2215,call_2218,var_2217,uop_2221,])
func_2224 = relay.Function([var_2200,var_2206,var_2217,], output)
mod['func_2224'] = func_2224
mod = relay.transform.InferType()(mod)
mutated_mod['func_2224'] = func_2224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2224_call = mutated_mod.get_global_var('func_2224')
var_2226 = relay.var("var_2226", dtype = "float64", shape = (4, 13, 3))#candidate|2226|(4, 13, 3)|var|float64
var_2227 = relay.var("var_2227", dtype = "float32", shape = (1560, 1))#candidate|2227|(1560, 1)|var|float32
var_2228 = relay.var("var_2228", dtype = "float32", shape = (1092,))#candidate|2228|(1092,)|var|float32
call_2225 = func_2224_call(var_2226,var_2227,var_2228,)
output = call_2225
func_2229 = relay.Function([var_2226,var_2227,var_2228,], output)
mutated_mod['func_2229'] = func_2229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2009_call = mod.get_global_var('func_2009')
func_2011_call = mutated_mod.get_global_var('func_2011')
call_2270 = relay.TupleGetItem(func_2009_call(), 0)
call_2271 = relay.TupleGetItem(func_2011_call(), 0)
output = relay.Tuple([call_2270,])
output2 = relay.Tuple([call_2271,])
func_2275 = relay.Function([], output)
mod['func_2275'] = func_2275
mod = relay.transform.InferType()(mod)
mutated_mod['func_2275'] = func_2275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2275_call = mutated_mod.get_global_var('func_2275')
call_2276 = func_2275_call()
output = call_2276
func_2277 = relay.Function([], output)
mutated_mod['func_2277'] = func_2277
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2292 = relay.var("var_2292", dtype = "float64", shape = (4, 14, 12))#candidate|2292|(4, 14, 12)|var|float64
const_2293 = relay.const([[[4.575632,4.955315,1.184697,-0.606361,1.176180,9.122648,8.345330,-2.721480,-7.463140,-6.091631,7.272991,-5.363014],[-6.530934,-9.676184,-6.765063,6.297212,8.935536,-0.368668,-7.227985,-2.078502,8.460154,5.144832,-4.444287,7.753946],[6.146746,-7.211795,-4.110104,-5.809647,0.058332,5.856489,0.905586,8.180291,4.906518,3.731550,-4.909367,0.542593],[4.397470,-5.657851,-7.821799,-7.304598,8.218646,-2.705984,7.839011,8.418846,7.854158,-9.250763,4.626216,3.523810],[5.401819,-2.337724,-1.326718,7.050244,-3.804791,-7.089360,7.875782,6.920939,1.052423,-7.601103,-8.730715,3.121236],[-8.015799,-8.259585,9.070988,-4.924008,-8.945844,-5.981373,-7.078789,-8.464847,5.762945,2.311725,0.166210,6.970864],[-1.363403,5.648529,4.429522,-6.537478,5.578119,0.459338,4.912174,3.164797,8.839027,-0.109385,-7.288669,-4.610419],[5.270296,-6.047984,-0.369659,5.779590,-5.562792,-7.833138,8.877998,9.165013,1.765449,9.296001,4.398815,5.266621],[-4.005955,-8.968416,-8.255828,-6.282551,0.812776,8.075814,0.810078,-9.892769,8.747894,9.400854,-0.888121,2.324209],[-5.001409,-7.845902,-7.161174,-5.201292,6.767833,6.304095,3.219060,-5.760960,-5.874142,8.460613,-6.842879,6.243380],[-9.915679,8.174912,-7.111349,-5.493966,9.482231,-9.414880,-6.807154,1.082880,1.889526,-9.123567,-5.677139,7.711384],[-9.989224,-5.523668,3.635427,-9.391416,1.463362,-6.579001,4.625385,-7.605151,0.251649,-2.600012,9.991848,4.042253],[-5.947908,0.162606,-7.978426,3.769166,1.235415,-4.166114,-9.738641,-9.351282,-1.884408,7.232221,-1.936892,-9.731270],[-8.947143,6.360836,-0.848012,-2.142823,-2.705757,-9.265883,5.863346,1.696455,0.889032,7.766398,3.825885,8.627982]],[[-4.066013,8.442086,-5.479757,-2.449356,-2.016343,-1.360438,-4.120367,9.467692,2.097508,-6.103069,8.069558,2.206208],[9.483605,-5.832955,8.970229,-3.373920,-0.546494,-2.114948,0.389261,3.430979,-6.216377,4.530591,5.946048,-1.002436],[-1.326538,5.666354,-4.430624,-0.359883,4.745988,-6.314236,2.961874,-4.738035,-9.572308,-9.975135,1.726370,4.381201],[-3.203200,-2.976546,5.624803,-0.041007,2.658581,-0.748399,-0.137196,2.148750,7.740692,-5.027967,-1.575306,0.319802],[8.165526,3.125382,8.413858,7.026887,6.890086,7.752496,-0.821810,-2.282303,8.889933,3.239988,4.556656,1.662616],[0.993522,1.354857,-6.056213,-7.492918,4.908634,-6.080520,7.014674,-8.311312,-9.224926,0.350460,2.167537,-5.699422],[-5.385089,-3.173824,2.613590,7.865072,-9.892338,-7.135100,1.019967,-3.756335,-4.365825,6.549905,-2.365517,-8.239264],[-2.871276,8.523281,6.763738,-4.613312,-1.147775,-4.981149,6.114262,-8.027233,-7.775402,-1.873845,6.806351,-5.921350],[-4.614995,3.344709,1.757092,9.037873,-9.187266,0.832354,-8.401814,1.289403,3.340668,-6.029145,5.271700,-5.311042],[-1.067956,4.741869,4.963823,4.910841,-2.622898,1.368720,3.333320,0.962865,6.240070,2.496716,-9.461475,-8.752623],[-5.982953,-2.284754,2.886160,-5.377787,-9.376626,-1.310044,7.099243,8.648829,-0.895334,-0.068336,7.498627,7.207854],[-1.463845,-6.051683,-4.792426,-4.615127,-6.084768,-0.553031,0.719001,8.842613,3.483092,-7.694262,7.631543,-6.623146],[-3.893370,4.390149,-2.518287,-3.465773,-8.685054,2.211296,-3.386158,7.939584,7.821147,-5.425660,-2.878899,-4.277618],[9.283293,3.695355,-8.526547,7.342311,-8.852430,-2.825517,9.885863,3.571639,9.842388,-8.985325,6.870769,-4.675653]],[[-2.421295,8.023197,-6.966094,-9.114583,-7.111671,0.097150,9.382929,4.222343,5.431104,-9.840667,9.074619,-4.987532],[-9.007080,-3.611422,2.949048,-3.085379,3.636526,-7.547123,0.675786,-0.097571,-2.422630,-0.367671,-8.109959,9.500035],[7.944976,-6.668838,-9.478565,-9.223824,-1.801537,-3.416215,0.111274,5.873229,-6.225846,1.473157,-9.307901,-3.527046],[7.068774,-8.867625,-4.895144,8.500459,6.126251,-2.410271,0.253200,-2.636394,3.841313,4.630569,-0.415204,-2.280146],[-5.657979,-7.106897,7.251549,-2.345774,-0.222987,-2.078953,-0.406353,-7.751382,8.437334,9.278322,7.837016,-2.446817],[-9.028088,-6.735553,-2.793783,-0.404203,-0.433659,1.093569,8.085685,-2.209791,-7.972478,-0.149294,-5.373348,-5.679965],[-8.580632,-9.662396,-8.978194,-3.047191,-3.003537,9.944893,1.379933,-3.897116,-4.666619,8.996115,9.803402,0.534538],[-1.121062,-2.293656,8.514493,3.126496,3.320854,7.603501,-3.113800,-0.255216,-6.388737,-7.731969,1.147316,7.813581],[-2.014748,1.165364,-2.713887,-0.281036,9.354512,-4.271786,4.610379,-6.945373,1.278193,-1.536424,7.261801,8.996830],[-1.948310,-2.386199,-3.953658,-3.047172,-7.172513,-6.504097,-9.566304,-8.595752,1.686673,-0.729999,-8.150676,5.158658],[2.429100,1.270168,2.497459,-0.008065,-5.334810,1.513766,1.231128,-1.541732,-3.550028,-9.623181,8.901509,-1.478112],[8.284964,4.812725,4.319230,-1.937016,5.199278,1.587196,-7.159523,-4.647884,-5.639442,2.098070,8.198664,-7.108641],[-6.694991,9.802261,3.071935,-0.022633,-2.443964,-4.301025,1.250341,-6.577670,-1.771460,9.251451,-7.211707,-8.364330],[4.602518,-9.087685,3.700217,-9.228036,4.833670,6.003009,5.293201,-6.322054,7.063921,0.084993,1.360483,4.666935]],[[-2.524637,-4.717456,1.337605,3.104094,-9.174631,9.583978,-6.736057,5.626561,4.162567,-6.076160,-7.049534,5.725251],[3.553382,-8.543162,-5.790718,8.788098,-7.329180,6.522115,-5.104294,4.405029,-6.663529,-2.491849,-0.787879,6.745264],[-2.303424,0.460186,-1.048477,-7.397677,6.934916,-9.003083,3.865537,-4.383917,9.718060,9.683570,4.163179,-8.648858],[5.184711,-2.757065,-8.469856,-8.378918,-4.349545,8.416513,-5.304977,-5.804478,4.244848,3.922741,-0.929022,-1.272119],[-0.424702,4.198791,-3.633304,0.343297,-0.489600,-8.909665,2.938100,3.248405,-8.631495,-3.190385,2.058635,-9.261078],[2.621334,8.907920,-6.485567,2.847091,4.359442,-9.324821,-2.012981,9.327804,6.732963,2.600857,-7.342919,-8.091816],[-3.301106,6.732979,-0.209907,-3.592920,-0.872537,3.983182,2.405187,8.716950,-2.093637,8.919330,2.650869,7.366239],[-3.668431,-6.723371,-6.785706,3.498236,4.822987,-7.821523,-9.784032,-6.948847,-0.663367,6.752006,-1.830505,-7.551394],[-8.175503,-8.244345,-9.019427,8.668238,-8.758969,-3.393348,-3.859362,1.075405,-3.490472,9.171704,-3.633472,6.640365],[-7.504018,3.184838,7.343465,7.200484,4.272056,-2.401117,3.451261,-6.141789,4.848631,-5.079746,-0.089310,5.432962],[2.956390,7.377057,-6.662981,-6.207654,-8.326012,-9.568159,0.270451,5.513636,8.867960,9.570168,9.963710,-2.567291],[-8.445052,8.577024,1.652525,0.092480,8.784238,-0.176404,-1.466674,-3.384457,-1.456839,-3.473584,-0.873784,-9.372024],[8.728657,7.067522,3.239393,8.647182,-6.435954,-3.744390,-4.907851,0.160473,2.772111,1.886646,-5.605643,-2.426508],[-3.509706,7.304533,-0.714124,-5.584235,9.941317,1.985278,-7.451235,-6.723976,3.800227,-3.456785,-0.661821,7.257775]]], dtype = "float64")#candidate|2293|(4, 14, 12)|const|float64
bop_2294 = relay.floor_mod(var_2292.astype('float64'), relay.reshape(const_2293.astype('float64'), relay.shape_of(var_2292))) # shape=(4, 14, 12)
output = bop_2294
output2 = bop_2294
func_2318 = relay.Function([var_2292,], output)
mod['func_2318'] = func_2318
mod = relay.transform.InferType()(mod)
mutated_mod['func_2318'] = func_2318
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2319 = relay.var("var_2319", dtype = "float64", shape = (4, 14, 12))#candidate|2319|(4, 14, 12)|var|float64
func_2318_call = mutated_mod.get_global_var('func_2318')
call_2320 = func_2318_call(var_2319)
output = call_2320
func_2321 = relay.Function([var_2319], output)
mutated_mod['func_2321'] = func_2321
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2333 = relay.var("var_2333", dtype = "int8", shape = (6, 12, 3))#candidate|2333|(6, 12, 3)|var|int8
var_2334 = relay.var("var_2334", dtype = "int8", shape = (6, 12, 3))#candidate|2334|(6, 12, 3)|var|int8
bop_2335 = relay.bitwise_or(var_2333.astype('int8'), relay.reshape(var_2334.astype('int8'), relay.shape_of(var_2333))) # shape=(6, 12, 3)
output = bop_2335
output2 = bop_2335
func_2339 = relay.Function([var_2333,var_2334,], output)
mod['func_2339'] = func_2339
mod = relay.transform.InferType()(mod)
var_2340 = relay.var("var_2340", dtype = "int8", shape = (6, 12, 3))#candidate|2340|(6, 12, 3)|var|int8
var_2341 = relay.var("var_2341", dtype = "int8", shape = (6, 12, 3))#candidate|2341|(6, 12, 3)|var|int8
output = func_2339(var_2340,var_2341,)
func_2342 = relay.Function([var_2340,var_2341,], output)
mutated_mod['func_2342'] = func_2342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2189_call = mod.get_global_var('func_2189')
func_2191_call = mutated_mod.get_global_var('func_2191')
call_2344 = relay.TupleGetItem(func_2189_call(), 0)
call_2345 = relay.TupleGetItem(func_2191_call(), 0)
uop_2352 = relay.atanh(call_2344.astype('float32')) # shape=(4, 13, 3)
uop_2354 = relay.atanh(call_2345.astype('float32')) # shape=(4, 13, 3)
bop_2376 = relay.equal(uop_2352.astype('bool'), relay.reshape(call_2344.astype('bool'), relay.shape_of(uop_2352))) # shape=(4, 13, 3)
bop_2379 = relay.equal(uop_2354.astype('bool'), relay.reshape(call_2345.astype('bool'), relay.shape_of(uop_2354))) # shape=(4, 13, 3)
bop_2382 = relay.add(call_2344.astype('int32'), relay.reshape(uop_2352.astype('int32'), relay.shape_of(call_2344))) # shape=(4, 13, 3)
bop_2385 = relay.add(call_2345.astype('int32'), relay.reshape(uop_2354.astype('int32'), relay.shape_of(call_2345))) # shape=(4, 13, 3)
output = relay.Tuple([bop_2376,bop_2382,])
output2 = relay.Tuple([bop_2379,bop_2385,])
func_2389 = relay.Function([], output)
mod['func_2389'] = func_2389
mod = relay.transform.InferType()(mod)
output = func_2389()
func_2390 = relay.Function([], output)
mutated_mod['func_2390'] = func_2390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2035_call = mod.get_global_var('func_2035')
func_2036_call = mutated_mod.get_global_var('func_2036')
call_2477 = func_2035_call()
call_2478 = func_2035_call()
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_2481 = func_1834_call()
call_2482 = func_1834_call()
uop_2484 = relay.acosh(call_2477.astype('float32')) # shape=(4, 13, 3)
uop_2486 = relay.acosh(call_2478.astype('float32')) # shape=(4, 13, 3)
uop_2493 = relay.asinh(uop_2484.astype('float64')) # shape=(4, 13, 3)
uop_2495 = relay.asinh(uop_2486.astype('float64')) # shape=(4, 13, 3)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_2496 = func_1834_call()
call_2497 = func_1834_call()
uop_2498 = relay.erf(uop_2493.astype('float64')) # shape=(4, 13, 3)
uop_2500 = relay.erf(uop_2495.astype('float64')) # shape=(4, 13, 3)
output = relay.Tuple([call_2481,call_2496,uop_2498,])
output2 = relay.Tuple([call_2482,call_2497,uop_2500,])
func_2515 = relay.Function([], output)
mod['func_2515'] = func_2515
mod = relay.transform.InferType()(mod)
mutated_mod['func_2515'] = func_2515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2515_call = mutated_mod.get_global_var('func_2515')
call_2516 = func_2515_call()
output = call_2516
func_2517 = relay.Function([], output)
mutated_mod['func_2517'] = func_2517
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2518 = relay.var("var_2518", dtype = "int8", shape = (3, 4, 13))#candidate|2518|(3, 4, 13)|var|int8
var_2519 = relay.var("var_2519", dtype = "int8", shape = (3, 4, 13))#candidate|2519|(3, 4, 13)|var|int8
bop_2520 = relay.bitwise_or(var_2518.astype('int8'), relay.reshape(var_2519.astype('int8'), relay.shape_of(var_2518))) # shape=(3, 4, 13)
output = relay.Tuple([bop_2520,])
output2 = relay.Tuple([bop_2520,])
func_2534 = relay.Function([var_2518,var_2519,], output)
mod['func_2534'] = func_2534
mod = relay.transform.InferType()(mod)
var_2535 = relay.var("var_2535", dtype = "int8", shape = (3, 4, 13))#candidate|2535|(3, 4, 13)|var|int8
var_2536 = relay.var("var_2536", dtype = "int8", shape = (3, 4, 13))#candidate|2536|(3, 4, 13)|var|int8
output = func_2534(var_2535,var_2536,)
func_2537 = relay.Function([var_2535,var_2536,], output)
mutated_mod['func_2537'] = func_2537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2009_call = mod.get_global_var('func_2009')
func_2011_call = mutated_mod.get_global_var('func_2011')
call_2562 = relay.TupleGetItem(func_2009_call(), 0)
call_2563 = relay.TupleGetItem(func_2011_call(), 0)
func_470_call = mod.get_global_var('func_470')
func_473_call = mutated_mod.get_global_var('func_473')
const_2593 = relay.const([[3.553311,-3.377074,-3.462057,0.047099,-9.205248,5.023683,4.857505,-5.082055,0.260428,9.118687,3.806551,3.902669,8.823827,-4.956429,-9.393543,4.996505,7.854932,8.966170,0.321170,4.634196,-6.494051,8.839921,-0.359269,-3.338633,-5.669570,8.661297,-3.899467,7.171796,2.320380,8.047910,5.434709,5.911409,-8.420672,-0.318541,0.596284,8.642959,-9.397123,3.554140,8.883225,-2.139843,7.046248,3.805739,4.016236,4.947616,-4.850431,-3.413512,4.367208,5.361394,-8.756897,9.004018,0.739142,-9.929613,6.659899,-8.365544,6.110578,-0.334487,-3.295170,-2.220881,-6.049798,-9.318088,0.949059,-1.492923,-5.228992,-8.660643,6.822717,-6.777848,8.277108,7.025188,-6.618657,7.536186,-4.561094,7.897976,1.982891,-5.446536,2.759062,6.941443,-8.476989,-3.125596,7.515685,3.376583,-2.445003,6.672986,-5.591317,8.724789,4.134629,6.019867,-5.403202,-8.626873,-3.553405,-8.475794,-3.553927,-5.906871,2.881299,8.639644,-8.406468,-7.241338,9.966399,-0.835794,-6.015929,-6.442148,-9.230353,8.313118,-4.707813,-0.295996,4.260053,6.558195,-6.793045,-6.870137,-9.344684,-2.186558,-8.793673,0.279862,5.817184,-4.689659,0.230345,0.486803,-0.676309,5.865329,-9.986163,4.068249,-4.134972,2.360373,0.064217,-9.332253,-4.276937,-4.302733,4.563557,-9.052573,5.482008,-1.028832,8.393258,-2.033870,6.895586,6.460483,5.927484,2.042035,1.000478,3.711174,-0.344403,-5.464369,-6.357333,7.508172,-3.816263,-7.418938,-9.131484,7.347963,-4.695703,8.092560,3.354895,-9.795792,-2.844391,-4.481815,-5.117694,-0.366017,7.460981,5.694612,5.027302,-6.169356,-0.274064,9.738837,8.952759,4.863717,-0.891621,6.302221,1.095024,-8.859136,3.991486,1.306936,-5.477707,-5.626042,-5.996181,-6.259906,6.512254,9.343393,9.316861,-7.317874]], dtype = "float64")#candidate|2593|(1, 176)|const|float64
call_2592 = relay.TupleGetItem(func_470_call(relay.reshape(const_2593.astype('float64'), [4, 4, 11]), relay.reshape(const_2593.astype('float64'), [4, 4, 11]), ), 2)
call_2594 = relay.TupleGetItem(func_473_call(relay.reshape(const_2593.astype('float64'), [4, 4, 11]), relay.reshape(const_2593.astype('float64'), [4, 4, 11]), ), 2)
const_2597 = relay.const([[5.232579,-1.405807,0.377968,-2.601140,6.772890,0.682163,9.219483,4.867145,0.768777,9.043240,7.227727,-3.442494,-3.239958,1.183267,7.437280,-5.788197,-4.395086,3.206740,-6.312633,-5.430022,-9.254603,2.575039,6.437362,4.766822,-1.100327,4.713514,4.026583,0.140820,2.490293,-5.529435,0.041388,4.232049,-8.384427,-2.304112,-3.746327,-7.818384,-6.732135,3.239414,-5.581559,1.686611,7.966872,-7.802047,-4.304143,-2.624723,-2.397060,-7.989263,1.582422,-7.982631,8.500029,6.208573,0.118663,-5.513463,4.038613,-9.184313,-4.952036,-7.367067,-9.963964,4.817273,-2.170137,0.126788,-5.934407,9.203669,5.609155,0.540147,-0.556491,0.256783,-6.174442,2.812408,5.989250,-2.517296,1.705682,9.573666,2.502684,4.817016,-8.586745,0.698171,-3.699249,-4.128400,-4.733547,-4.407938,-6.565695,-8.242543,1.590191,5.748358,9.986026,2.178555,-5.453320,1.901168,6.807334,-9.979320,8.257372,-6.539385,-4.423794,2.300136,7.885590,1.933989,0.458968,-3.006231,1.966771,0.286242,2.927834,-1.625803,8.935982,-7.660167,-8.347498,-7.233326,-7.478588,5.275302,-6.976863,7.115337,6.643480,6.168390,-2.990440,5.017124,8.173900,3.250582,9.030288,7.224611,3.625720,8.045302,-7.292734,9.636545,8.778106,4.163149,8.124432,1.823838,4.879362,-7.830520,-6.129149,3.771131,-9.120122,2.990118,-0.465946,2.552028,-5.939420,6.242162,-2.559480,9.187729,-6.739621,3.453970,5.883978,-9.040902,-0.370541,-1.083556,-9.893716,-3.489374,-4.568357,0.975995,-6.042154,-2.525509,8.192777,3.800504,-6.822576,8.703911,9.071350,9.093048,0.401322,5.781325,-8.291470,8.757576,-7.105056,6.198565,6.543446,4.680355,1.813947,-8.525757,-2.880693,2.169551,-4.767268,7.813236,6.024272,-7.921513,-9.203052,-7.202704,3.512483,8.688489],[-7.159155,7.427931,7.995237,2.658826,-4.328339,-5.313539,-3.126409,-7.801972,-6.385272,-9.915317,-8.267389,8.018182,2.881458,0.773244,5.002398,-3.011289,2.752662,7.393128,-7.716747,-0.460646,-2.013965,3.435373,-1.474807,9.176585,0.259942,-5.698078,-1.409867,-8.259260,-7.041851,-5.767947,4.229836,3.727668,-9.523447,5.088766,1.721094,-7.248128,-1.174324,-7.237312,0.836442,-6.370662,-0.693382,-9.922311,-6.476568,-1.672022,-5.354996,-2.293767,6.732678,-0.663576,-1.567498,-9.267890,5.093409,9.755528,0.297649,-0.739881,8.619740,5.580613,-2.378629,-1.677833,7.757310,2.208306,3.771645,4.218920,5.276589,7.946583,5.029819,6.394943,-5.150135,1.815834,6.516721,-4.107396,-8.699975,-6.489339,5.995211,3.771417,1.509778,-3.127016,-3.690176,4.725930,3.064704,3.287035,-2.842765,-3.303434,6.416383,-7.665011,8.014937,4.229328,8.671289,-1.786782,-2.618944,6.967860,-4.536846,-3.065863,9.061690,-6.056576,-5.068440,5.316722,7.272976,7.329027,1.071600,7.666768,-2.175800,-6.779682,-2.175748,-6.469553,-5.408170,-0.281593,2.313831,8.803263,-4.110093,-2.200471,9.233010,8.440601,2.264244,4.777888,3.628146,9.840754,5.941433,6.280599,8.823401,-8.824644,2.461081,-6.825094,-2.867369,9.585014,-5.155511,4.701757,2.240917,-9.187055,-2.006296,-3.717852,-4.857213,8.819694,2.311043,0.715145,5.307218,7.950898,-3.627723,4.610780,8.089451,0.177700,-9.864659,-3.095609,5.914206,-3.711655,-9.436557,1.843881,4.845255,3.215717,8.632988,2.374707,-7.400042,5.960647,-9.404270,1.479756,8.103870,5.704290,-5.018246,-2.232478,-4.772038,8.024583,4.305849,2.001187,5.193422,9.544245,7.571537,9.637215,9.943807,-2.238440,-6.051875,-7.055570,-1.260491,2.651718,7.404556,2.838301,9.983893,-1.752499],[5.618910,6.655232,-3.372459,-5.140562,0.425120,-4.667019,-9.145688,-7.505154,-1.545163,9.763852,3.559129,3.919751,-0.735480,-4.228430,0.350976,-5.138071,8.390107,-1.414229,-9.374599,8.360517,-4.246112,7.026978,9.574747,3.376960,-4.934501,-1.702460,-0.342280,-7.349297,-9.721705,-0.249284,1.304974,6.590187,-3.755230,5.704417,-2.291715,-6.331983,-4.306972,0.720910,5.821954,5.609702,5.774715,7.143895,-7.138562,-3.316833,7.522738,-3.535114,6.178081,7.582577,4.872723,0.549047,7.200162,4.262694,5.576705,0.363507,2.433328,-5.699819,0.510399,-1.574164,1.456046,-7.615048,9.301000,9.092273,-0.145522,-5.718429,5.041150,6.238029,2.542741,-0.052206,-5.544871,-3.940929,8.831209,-5.148675,-4.452456,-1.271125,-9.338740,-3.865860,0.185565,-4.271757,-6.625341,-6.609124,-0.066453,6.176093,-6.650976,-7.443959,0.702843,-7.091745,6.055497,7.258037,-7.666827,7.054187,2.911063,-2.317544,-7.083873,-0.738347,-3.946579,-7.485262,9.737806,-4.731664,-8.831384,-2.683158,4.918173,-4.309729,7.265118,9.964961,4.206584,-6.940474,-5.748004,1.682992,-6.875288,-9.352374,-8.446592,7.741569,-9.027161,6.065666,5.041484,-4.425159,6.831702,4.642281,0.493887,-0.549519,-2.360953,9.510349,0.128812,5.735610,-6.998479,-7.586404,-5.763170,-2.304894,-6.548245,0.377052,8.381005,-9.242760,-7.069864,-2.830293,-5.616580,-9.626204,4.115728,-2.081259,4.952609,-0.968878,5.394048,-3.398291,6.209917,-8.400340,5.450460,4.059655,4.213991,1.520047,6.102679,6.286653,-8.217807,-0.686222,1.753831,-5.110018,-8.269042,0.506443,-9.707829,-7.099981,-0.798266,8.179795,-2.812952,5.617416,-9.094466,-3.160157,-6.711073,-2.798426,0.524831,-0.037598,8.139864,1.253166,-7.781437,9.040260,3.112485,-8.238101,-8.970466,6.088825],[-3.581200,-2.759001,4.095257,-1.994285,1.512368,-6.550281,-3.238821,3.430164,4.601909,4.994087,0.565792,-7.725989,-8.095748,6.456999,-4.857993,-5.150622,7.791120,-9.965214,2.104315,-3.722272,6.017868,6.177118,5.356318,3.754456,-2.158054,-1.723759,2.279551,-5.620386,6.086560,-6.953639,-0.413767,-9.382088,4.801819,-5.269216,-6.301818,2.962664,1.391542,9.464365,-7.317400,8.517563,9.023486,-0.556359,7.695277,4.468741,-1.281241,-5.138286,-7.674698,-5.935740,7.192790,-4.504277,3.011105,7.871779,-6.382253,-2.378953,6.690717,5.744926,4.918536,2.534023,-2.518826,-4.453536,-6.884036,3.029837,8.337257,7.093608,-1.562127,-8.287089,4.609154,-7.509695,-4.349828,-1.133025,6.337748,6.233763,-3.646050,7.693516,8.168740,0.784278,-2.509133,-7.813405,5.735434,2.304319,4.078871,6.813943,5.097442,-0.694382,-8.835791,-8.997625,6.904592,6.474693,-0.542916,-6.341091,-6.266179,-2.036409,5.516044,-4.492833,-5.267868,-0.931601,-0.315194,-8.876963,-1.418226,2.683814,-2.255091,-4.325041,8.728696,7.219637,-9.806899,3.954313,3.968994,4.804899,-9.370321,2.081067,0.698364,-1.247227,-1.434584,-0.342428,-1.351443,8.343998,4.378119,-2.016647,4.989927,-8.537824,9.369839,-3.601295,7.413020,0.861005,-1.901169,-4.859065,1.976475,2.376528,-5.912117,-7.300509,2.705229,5.470380,8.192289,-8.544104,9.408689,-5.583077,-1.514676,8.961393,-5.523245,-4.229079,-5.598929,3.412285,6.485906,8.718911,-9.512410,-5.715536,4.854602,-8.694540,3.434449,-8.824412,0.285316,-8.328456,5.008382,-5.318081,-0.209596,-5.134677,1.081244,-8.042565,-1.496621,-1.160028,2.294136,9.574167,-5.966163,5.587552,-3.962248,-7.421675,-7.322356,6.286340,8.356853,-7.015682,-6.615331,-8.306470,-6.332805,3.490374,-6.803882,6.982175],[-8.941140,-4.047492,-2.830275,8.442469,9.617414,-1.190170,-3.001867,-3.527712,0.591846,9.232255,5.303587,-8.681891,4.427981,7.002901,3.883607,8.596011,9.034877,0.221565,-1.599586,-7.746860,-1.742888,4.375298,-7.328221,-4.651498,-4.528642,-7.822113,1.737765,2.715675,-6.216732,-0.625057,0.972316,4.317978,-4.802593,-7.118635,9.444250,-4.973706,-3.155135,-7.201058,7.224985,-2.380574,3.902039,-2.788431,2.787725,8.884760,-9.427197,-5.955617,0.472383,-1.721348,-7.867280,-4.333752,4.822365,8.393714,0.492240,-4.317164,4.179527,-2.164019,5.684191,7.639759,3.951198,-1.113982,3.369548,8.572147,8.854530,-7.087235,5.349850,8.411225,1.986285,-5.060992,2.520132,-4.768823,7.449490,8.799830,8.956106,-2.762202,1.095283,-2.164552,1.722898,4.940212,9.441098,-2.896218,5.133234,5.626858,-1.257909,5.838622,-1.326976,-5.575852,-7.664509,8.650263,8.133635,-2.957223,-4.397511,9.702021,3.007394,-6.647380,-1.939041,4.034572,8.595595,-6.360162,-7.853258,8.002901,7.096389,-4.839747,5.641802,0.748134,9.316782,7.036344,-6.996732,0.428632,8.056037,-6.888434,-9.697095,5.595448,-5.637778,-0.933647,7.480853,-3.207651,2.964758,3.874371,-3.144975,5.023191,-8.389801,8.350718,4.080192,-7.490694,6.190486,-4.059954,-2.336540,3.726149,-9.556216,6.947399,9.867632,-3.032199,8.118487,8.226646,7.453237,4.450534,0.356530,-6.995255,-1.639215,9.081903,-8.015985,4.890413,-8.968824,5.509650,-2.316525,-0.191106,-9.353311,2.204565,-7.518510,0.237701,6.997666,-6.306178,-6.076763,-7.795991,9.196722,-7.247388,6.838797,4.524213,-5.530984,-8.281045,5.784164,-7.863808,-9.280706,6.571945,-5.014315,-7.144945,-6.668222,-8.224609,2.442358,7.185065,-0.115771,-4.990794,1.991612,6.124711,9.567084,8.831350],[3.335213,-8.455657,0.735500,-9.338172,6.547646,4.315416,7.875813,-4.807132,-0.627878,-4.487527,0.789970,0.281381,-5.582420,-1.835046,-3.096080,-0.754713,2.559579,8.952951,9.174245,-1.851642,-8.732577,-9.008974,4.070418,2.672881,-6.150317,-4.470568,-0.663354,-9.648023,9.407420,-2.890249,-1.124452,8.995234,-9.300231,-8.505023,-4.961526,-8.093060,5.055842,5.604067,9.288052,-3.622033,-4.967665,7.143386,-6.220921,6.735486,-8.610293,-9.463663,-3.423948,-8.489186,-9.633837,-4.746525,0.794172,-9.826779,9.772027,6.667617,-5.578241,-4.597030,-1.844263,8.845420,-3.901761,-7.900585,8.091338,0.719054,-0.793539,-8.930922,1.176780,-0.447010,3.115737,5.281338,-5.816961,8.755190,-9.802394,3.264843,1.036389,-9.725690,1.819793,-7.156419,6.325102,-4.649036,2.448353,-2.675912,-1.396222,1.077837,3.804221,-5.835739,3.134846,-3.241657,-0.798738,-2.990410,8.929795,5.545155,-4.271008,3.813531,2.781939,5.046467,-1.939766,1.555495,-7.001557,-7.909236,2.406513,0.807262,-7.446403,1.975505,3.498895,-9.712674,-0.301067,9.416621,7.813008,-2.082688,5.854046,4.971947,0.860766,-3.844719,9.013099,-0.337202,1.824325,0.349846,6.666371,-7.724166,-6.870855,7.720443,-4.916961,6.010529,8.571831,2.443707,-2.632590,-3.079791,4.735989,2.775211,4.866751,-3.311349,-4.140400,-1.518283,-4.245672,-8.489063,7.589288,3.674065,6.961825,3.577861,-4.536209,1.488162,3.948956,-5.669967,-4.749488,8.544470,3.923421,-5.919316,5.110171,-9.334993,-6.534765,3.356655,-3.428988,3.085917,0.118367,6.337856,3.084942,-9.030424,-2.023034,-8.197191,8.535482,1.018881,1.515913,-2.640804,-7.973487,-4.177042,5.751932,0.847561,-8.932111,9.091542,2.735444,6.522384,1.237575,-8.740568,-3.196945,-9.142707,-2.728120,6.158474],[-6.987329,1.304706,-7.286264,8.747559,6.094045,8.702298,7.580604,8.288357,1.618679,-2.757861,6.889127,1.500259,6.212257,8.814032,5.529438,6.749509,-4.194644,-4.821912,-7.270347,-7.069998,-6.303902,9.275132,2.353230,7.484242,8.385041,4.453971,-7.276811,-0.641447,8.484224,1.558371,-3.056847,-6.031533,7.463074,8.158413,-5.205470,7.406667,-1.459734,-7.938414,-3.328417,-3.699545,7.934524,-1.945657,-3.163610,7.057383,-1.003549,-5.998466,5.739344,8.007940,-2.627006,-9.090079,-1.194720,4.955188,-7.245472,-7.477480,0.441302,-7.286992,1.950382,-4.217422,-7.117360,4.110923,2.751316,5.442573,-5.181627,5.390875,-6.930166,9.279995,-5.149257,4.668527,-4.684350,8.190662,-4.431573,3.497447,-8.865330,-2.632206,6.970930,8.074550,1.426623,-2.622461,9.995603,-1.161261,2.546875,-7.289157,2.944922,2.591721,-6.254584,9.412330,-3.675286,-6.108274,3.756361,9.963072,-0.622761,8.130636,-9.727057,1.605610,8.948188,9.974447,1.212920,-4.075956,9.891598,-7.944109,-1.323351,-0.056374,-7.546992,0.036537,4.009046,0.802465,0.380751,-8.746603,-3.080490,7.260361,7.407250,-2.246048,1.905796,6.921189,-4.994820,-1.507678,-0.566660,-3.966329,9.500403,-9.166205,-1.331468,-5.018669,-5.174997,3.748921,-6.105693,-1.285409,0.409264,-8.617504,-0.488463,8.387735,3.061274,5.232151,7.948799,9.843905,-3.913799,0.154737,2.095080,-9.237048,-0.245873,-7.875851,9.432896,1.695576,7.338327,7.853532,2.976753,5.300778,-2.905389,-4.846727,-8.044718,-2.067945,4.418038,5.801053,1.776649,-8.391032,-5.281403,-8.767290,-0.310847,-9.207676,4.297555,1.176003,3.573325,3.161572,2.779412,4.654996,6.618121,-7.252975,5.295019,1.577229,-0.332460,5.561163,-8.197210,-0.006513,9.234327,4.125188,-8.357377,4.376884],[7.482021,4.659516,4.345539,-9.551996,-2.822642,1.628213,-3.111713,-8.213064,7.072110,1.632291,0.602985,-1.355405,8.470856,9.246821,-9.262195,8.131640,1.849556,-8.439419,5.197072,-1.060899,-0.649810,3.223399,-5.693225,5.051089,0.960712,-7.562196,-3.492781,2.876434,-2.590362,9.179705,-9.771887,-5.442535,3.947557,-2.356592,2.321477,-0.889656,-3.215105,-0.138630,3.186345,-7.170130,5.873520,4.619260,6.621715,0.127418,0.742162,-3.475177,9.265057,7.051571,-4.046299,5.239334,-0.292406,5.768833,1.078902,-4.696774,9.766482,-8.300948,9.636361,-4.629453,-7.343047,-7.103920,-1.600835,9.270427,9.043591,-7.755651,-9.291219,8.022275,5.991996,-7.176106,-8.622290,0.807793,3.487638,-5.052011,4.100894,-4.816239,-0.325143,0.320741,5.852490,-4.671567,6.308448,-5.016037,-9.035940,9.047859,-1.738733,5.852316,-9.374086,-4.778148,-8.385161,-9.326953,8.753475,4.347985,0.372717,-3.354863,-3.942895,7.522217,6.762101,8.130802,8.827156,8.391973,-8.695993,-2.632014,1.598945,6.345249,-7.724475,2.179592,-6.735725,3.745662,1.494957,-0.074640,0.934030,-4.676460,-2.331974,-1.244531,-6.044594,0.191373,-5.184289,5.828531,2.501121,4.561532,-9.044299,9.869685,-0.812430,-1.957186,1.208789,1.571465,-9.425188,6.325072,7.396428,-1.098014,-0.129413,4.372526,5.181864,-9.103317,1.626188,-4.380894,4.031008,-0.610657,5.158759,6.040897,1.804991,9.272235,-1.612308,-1.336670,-1.275606,5.307561,9.054739,-9.154767,9.736954,8.674057,-4.880227,-8.712626,8.252064,8.370967,7.332915,3.371405,1.893203,-9.911377,-9.349735,-5.510496,4.750690,5.864321,-1.920151,-9.344287,-2.763773,-6.729671,7.348881,-3.208039,4.192109,9.065959,9.828113,8.056417,9.055866,-9.571757,3.603011,3.432331,9.452616,7.873681],[-9.637269,0.204818,1.259378,5.997712,8.931165,5.749726,-8.224368,4.139799,-6.745460,-8.805184,4.156204,2.482093,3.006838,0.400402,9.946527,-1.916381,-0.306898,-8.909429,0.239423,7.581696,-5.934190,3.327055,1.460544,-3.498513,-6.193483,-5.191193,0.689767,-7.862953,-0.309058,9.607947,-6.213056,1.741894,-3.530242,-0.785471,4.438676,-3.891098,-7.460451,-7.387302,-8.163197,5.479356,-3.847901,-7.128488,8.437676,-3.770213,6.645433,1.299007,-5.035085,-2.835036,0.099336,-0.993138,-5.061753,-0.112906,5.490971,8.253870,5.842083,-0.484192,-3.391519,2.812341,1.978566,7.189059,-0.657080,-9.460868,9.287996,4.727876,4.693327,7.604764,-9.265251,-2.979657,2.709512,3.917630,4.255673,-2.104412,2.173900,4.233766,1.203056,2.914704,-1.481030,-7.924621,-4.589077,-2.660970,-2.178295,-9.100316,3.803110,-0.547408,-8.022095,7.221394,1.635097,8.837261,4.121206,9.877622,7.010849,-6.825989,-3.698052,7.137862,-4.401887,-2.185508,6.810628,2.623099,2.033823,2.842968,-1.475346,7.988473,-5.877132,-7.177097,-5.851232,5.033817,-6.899371,3.796057,-5.091391,6.488246,-6.271601,4.309297,-0.823439,-4.309856,-9.039971,9.412767,-9.322150,-6.486004,3.428025,-9.369114,-9.649835,5.479141,-8.550914,2.238166,7.413583,3.243889,-5.860513,-5.882136,-7.133535,6.908341,-5.008741,7.092700,6.537987,-2.933563,-1.022773,-3.078136,-3.763030,7.104476,-3.796461,5.907084,5.504655,7.351669,-5.882322,9.444750,-0.209866,5.505619,5.283443,6.096876,5.330129,-1.230053,0.139065,-5.066074,-3.721875,-3.300251,7.815964,9.582463,-3.759782,-1.822504,-6.726606,8.944555,-5.544335,4.420978,6.710465,5.886089,-5.725853,-2.464253,-7.442832,3.159972,-7.249578,-0.399479,-2.749719,8.158844,-7.406007,3.183707,6.877322,-7.751837],[8.093594,5.638640,-7.060475,2.938303,-9.425344,-7.887667,1.967228,-8.262218,6.634645,4.895219,-9.739796,4.732037,-0.001782,5.787888,8.569852,-7.183087,7.646652,-9.970948,-8.543239,6.853523,9.214308,8.413977,2.997805,2.562832,-4.634823,-4.085522,2.893630,-2.762715,-2.519527,9.743516,7.218869,0.501746,3.642616,-2.445747,0.430391,5.511566,-5.005088,4.410522,-7.833403,-2.767625,3.856461,3.296394,-8.033901,8.387051,1.044563,3.624482,-8.758385,4.796312,-0.310916,5.026562,0.068461,-7.599778,5.587312,-6.435996,-2.954135,0.786585,8.749368,-3.093088,-8.641016,8.072041,-9.911505,-3.995809,2.849741,6.713779,3.718712,6.319497,2.590992,-9.109133,-6.584271,-1.050181,-0.294469,-1.318847,-4.616362,9.267712,-1.761034,-3.600873,8.937170,4.328439,-5.060356,-8.380365,1.272948,8.416649,-0.676773,-5.862081,-4.243026,1.720267,-7.586318,-8.917600,0.179334,4.555313,-9.290188,-6.713423,-9.738775,-8.801149,-9.387043,-7.802181,0.610229,-6.352511,-5.670942,-5.866916,6.226938,5.215991,0.390739,-2.132957,4.404113,5.009314,4.466699,-3.534637,2.205247,4.169734,7.132938,-3.411029,8.966400,-9.579648,5.824691,-0.634843,9.954373,-4.990782,2.289965,3.269307,-4.335918,3.542619,-1.457736,5.237959,-7.818920,-5.101120,-1.871961,-8.465287,8.612608,5.351738,5.352239,-3.910924,2.136739,-9.590329,4.228861,-3.348965,-9.337270,-2.143862,8.015232,-0.272163,-8.823396,7.044470,5.718659,-8.784597,4.000623,6.118539,8.943844,6.908714,-8.015328,5.215803,2.816061,5.770269,9.785616,-8.801060,1.036426,7.643487,3.708726,6.674996,-1.901872,-7.552424,2.088799,4.711587,6.754781,-8.760399,-3.020635,0.803515,2.779644,9.607080,-4.039163,3.180517,-8.247124,5.459098,1.460981,2.799202,-8.796293,4.526605]], dtype = "float64")#candidate|2597|(10, 176)|const|float64
bop_2598 = relay.greater(const_2593.astype('bool'), const_2597.astype('bool')) # shape=(10, 176)
output = relay.Tuple([call_2562,call_2592,bop_2598,])
output2 = relay.Tuple([call_2563,call_2594,bop_2598,])
func_2601 = relay.Function([], output)
mod['func_2601'] = func_2601
mod = relay.transform.InferType()(mod)
mutated_mod['func_2601'] = func_2601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2601_call = mutated_mod.get_global_var('func_2601')
call_2602 = func_2601_call()
output = call_2602
func_2603 = relay.Function([], output)
mutated_mod['func_2603'] = func_2603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2389_call = mod.get_global_var('func_2389')
func_2390_call = mutated_mod.get_global_var('func_2390')
call_2622 = relay.TupleGetItem(func_2389_call(), 0)
call_2623 = relay.TupleGetItem(func_2390_call(), 0)
output = relay.Tuple([call_2622,])
output2 = relay.Tuple([call_2623,])
func_2646 = relay.Function([], output)
mod['func_2646'] = func_2646
mod = relay.transform.InferType()(mod)
mutated_mod['func_2646'] = func_2646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2646_call = mutated_mod.get_global_var('func_2646')
call_2647 = func_2646_call()
output = call_2647
func_2648 = relay.Function([], output)
mutated_mod['func_2648'] = func_2648
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2652 = relay.var("var_2652", dtype = "float64", shape = (3, 4, 6))#candidate|2652|(3, 4, 6)|var|float64
uop_2653 = relay.log10(var_2652.astype('float64')) # shape=(3, 4, 6)
func_470_call = mod.get_global_var('func_470')
func_473_call = mutated_mod.get_global_var('func_473')
var_2661 = relay.var("var_2661", dtype = "float64", shape = (176,))#candidate|2661|(176,)|var|float64
call_2660 = relay.TupleGetItem(func_470_call(relay.reshape(var_2661.astype('float64'), [4, 4, 11]), relay.reshape(var_2661.astype('float64'), [4, 4, 11]), ), 2)
call_2662 = relay.TupleGetItem(func_473_call(relay.reshape(var_2661.astype('float64'), [4, 4, 11]), relay.reshape(var_2661.astype('float64'), [4, 4, 11]), ), 2)
output = relay.Tuple([uop_2653,call_2660,var_2661,])
output2 = relay.Tuple([uop_2653,call_2662,var_2661,])
func_2665 = relay.Function([var_2652,var_2661,], output)
mod['func_2665'] = func_2665
mod = relay.transform.InferType()(mod)
var_2666 = relay.var("var_2666", dtype = "float64", shape = (3, 4, 6))#candidate|2666|(3, 4, 6)|var|float64
var_2667 = relay.var("var_2667", dtype = "float64", shape = (176,))#candidate|2667|(176,)|var|float64
output = func_2665(var_2666,var_2667,)
func_2668 = relay.Function([var_2666,var_2667,], output)
mutated_mod['func_2668'] = func_2668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2601_call = mod.get_global_var('func_2601')
func_2603_call = mutated_mod.get_global_var('func_2603')
call_2687 = relay.TupleGetItem(func_2601_call(), 0)
call_2688 = relay.TupleGetItem(func_2603_call(), 0)
output = call_2687
output2 = call_2688
func_2690 = relay.Function([], output)
mod['func_2690'] = func_2690
mod = relay.transform.InferType()(mod)
mutated_mod['func_2690'] = func_2690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2690_call = mutated_mod.get_global_var('func_2690')
call_2691 = func_2690_call()
output = call_2691
func_2692 = relay.Function([], output)
mutated_mod['func_2692'] = func_2692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2001_call = mod.get_global_var('func_2001')
func_2003_call = mutated_mod.get_global_var('func_2003')
call_2719 = relay.TupleGetItem(func_2001_call(), 0)
call_2720 = relay.TupleGetItem(func_2003_call(), 0)
output = relay.Tuple([call_2719,])
output2 = relay.Tuple([call_2720,])
func_2723 = relay.Function([], output)
mod['func_2723'] = func_2723
mod = relay.transform.InferType()(mod)
output = func_2723()
func_2724 = relay.Function([], output)
mutated_mod['func_2724'] = func_2724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1955_call = mod.get_global_var('func_1955')
func_1957_call = mutated_mod.get_global_var('func_1957')
call_2743 = func_1955_call()
call_2744 = func_1955_call()
uop_2746 = relay.rsqrt(call_2743.astype('float64')) # shape=(4, 13, 3)
uop_2748 = relay.rsqrt(call_2744.astype('float64')) # shape=(4, 13, 3)
output = relay.Tuple([uop_2746,])
output2 = relay.Tuple([uop_2748,])
func_2750 = relay.Function([], output)
mod['func_2750'] = func_2750
mod = relay.transform.InferType()(mod)
mutated_mod['func_2750'] = func_2750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2750_call = mutated_mod.get_global_var('func_2750')
call_2751 = func_2750_call()
output = call_2751
func_2752 = relay.Function([], output)
mutated_mod['func_2752'] = func_2752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2601_call = mod.get_global_var('func_2601')
func_2603_call = mutated_mod.get_global_var('func_2603')
call_2798 = relay.TupleGetItem(func_2601_call(), 0)
call_2799 = relay.TupleGetItem(func_2603_call(), 0)
func_2035_call = mod.get_global_var('func_2035')
func_2036_call = mutated_mod.get_global_var('func_2036')
call_2807 = func_2035_call()
call_2808 = func_2035_call()
func_687_call = mod.get_global_var('func_687')
func_689_call = mutated_mod.get_global_var('func_689')
var_2828 = relay.var("var_2828", dtype = "float64", shape = (2352,))#candidate|2828|(2352,)|var|float64
call_2827 = func_687_call(relay.reshape(var_2828.astype('float64'), [14, 12, 14]))
call_2829 = func_687_call(relay.reshape(var_2828.astype('float64'), [14, 12, 14]))
const_2830 = relay.const([-4.341912,4.857874,-4.241408,9.713718,5.861861,0.290082,-0.215984,-8.798558,5.071575,1.026999,3.821607,-1.016750,-3.973399,-9.006376,-9.698490,-6.056274,-2.226279,8.414964,3.354112,-8.890401,-0.175289,-5.866428,-9.475157,3.801862,1.782032,6.290263,-6.032211,8.530065,-8.534644,-0.662404,4.397711,3.792630,3.231544,-8.837594,1.484234,7.622128,-2.780226,-2.514403,-0.639173,1.323609,5.771844,-3.419929,-3.490496,-1.337553,3.590533,9.256335,5.151297,-6.844764,4.466718,3.139868,2.645084,-9.233431,6.205723,-1.342130,-7.091344,6.041211,8.865364,3.184797,1.401032,-7.494687,8.189636,-9.067782,-2.578060,4.054816,1.487205,-0.194816,4.184260,8.568586,-5.448801,-8.872254,6.060603,-3.139019,8.223975,-0.057244,1.791479,2.099492,-4.598572,-7.219732,-6.157281,1.190744,-6.494089,-3.950211,-9.633304,-1.425281,-4.599506,-5.522991,-5.156105,-2.046707,-2.083528,3.241867,7.955083,-6.059748,-5.015990,-5.794918,-5.734510,-6.859665,8.784587,-7.271336,-8.990696,-6.406994,0.309948,-9.783498,0.313851,9.614815,6.593922,-1.140855,1.438979,4.978050,3.610947,-9.181959,2.812908,-4.087147,-1.743897,-0.120150,-3.687145,5.841899,0.204247,5.985163,-5.027432,2.146519,1.197620,-6.031759,-1.380665,-1.433015,4.572364,-8.834369,-4.183150,1.899318,5.097497,0.060550,4.806071,-7.739101,4.965930,6.900716,-8.086711,9.727363,-3.217208,0.753062,6.046009,-5.113245,-7.549092,0.117921,-5.953794,3.806358,8.548332,7.384521,6.461429,3.153372,3.877567,-6.108902,3.041171,-4.075210,5.848408,8.358772,7.673817,2.611976,-7.737253,-7.123312,-7.488443,-8.236215,5.583811,-0.069333,8.408119,1.270014,-8.040585,4.252710,0.503630,-6.216812,7.154643,-0.346771,6.132990,-6.360017,-3.926020,-9.624320,1.740485,-4.378407,-0.027120,9.440226,6.013790,6.829039,0.413573,1.544488,-6.989906,9.300661,8.983401,-5.295962,-5.252536,-9.421369,-9.644726,6.750027,-2.809628,-6.761957,-6.786112,-1.954974,-2.706600,4.164563,-0.993753,-0.685276,-6.098274,-5.910986,3.604730,7.282703,-2.560995,9.418113,-2.691750,-6.455862,-0.302971,-1.850629,-4.759286,-0.142468,-6.817672,-8.081176,9.483105,1.890172,5.195043,6.415751,-5.238376,-4.384460,5.802388,6.173471,-6.537652,-9.556286,-8.428798,4.486423,6.101679,8.945121,1.413680,6.186712,3.302766,2.036062,-0.945461,8.188620,5.802138,6.647786,3.273351,-1.651588,-2.139301,1.611620,8.350798,-0.925778,-0.679699,-0.098283,6.955375,-1.853017,-1.582229,8.798816,5.634699,-5.497479,-5.190596,8.895343,-6.001644,3.176352,-2.548029,-5.733802,2.708659,-8.503281,-8.302365,-6.444837,-9.738488,-0.316052,-1.747342,-6.810300,7.863268,-9.455001,-6.079431,0.807385,4.293328,-2.241015,8.028706,-3.247942,8.864265,7.871093,7.042092,2.130545,-9.619999,0.291358,-0.927015,-7.543478,-9.220940,9.602006,-6.388618,6.792603,-0.480417,4.020067,-5.811124,-0.388512,7.970058,-6.790816,6.669936,-9.370018,6.869491,-4.526036,2.858230,1.111845,7.304432,9.377636,-0.648796,-4.638117,-9.421436,-8.205011,5.151421,-0.862703,-2.699235,1.660945,-1.632359,-3.608270,2.430620,1.912657,9.242106,-7.195115,-5.149854,5.204074,4.580530,1.146155,8.003878,-5.021522,-6.714801,9.994126,3.866253,8.819551,5.428720,-6.755405,-9.378982,3.321684,-9.088305,0.588464,6.501164,1.023891,-7.157652,-1.875640,5.080225,-1.547074,5.134733,-4.271203,-5.129343,6.930477,2.432602,2.241168,3.486613,-0.765013,-4.615526,-2.386936,-4.223198,-8.417421,-1.251680,-3.969890,-5.975274,-8.233537,4.368637,-6.787201,-1.397023,3.350541,6.459868,4.017128,5.256977,7.046525,4.951324,-5.589163,4.521041,-7.486536,2.137199,1.339887,1.622143,-1.683566,2.402409,9.486119,-3.639570,9.834718,9.792216,-1.431733,-4.128427,-7.535677,-9.746134,5.271446,-9.000243,1.337510,2.687755,5.489132,-1.159018,0.063099,-3.402714,6.117836,0.193232,6.139358,-6.972846,4.845249,2.349942,-7.011374,-4.458738,4.563585,-1.672181,4.832517,-0.509614,-8.276678,-0.933747,-8.047761,-5.013020,3.284837,-9.706625,-6.282296,-9.474318,-8.537498,-6.989607,4.587346,-1.196270,3.076381,-3.146992,-4.296068,3.826193,5.460071,-2.457335,-0.726032,-3.892195,-8.826297,-5.501408,5.877117,7.167354,-6.087370,-5.039240,-8.820792,8.487562,2.994529,-3.282693,-7.430218,8.642253,6.513138,6.651973,-9.713647,4.471387,-2.900618,-4.015868,6.646724,9.761670,1.015674,9.164221,1.346938,2.162713,-9.136434,-8.242051,0.883134,4.499333,-5.428830,-9.019166,-4.079213,7.205754,-5.352742,-6.830298,2.732333,4.183891,5.261987,1.976837,2.285112,-7.977204,-8.268107,-0.146581,-0.199511,8.911421,-0.503147,6.763757,0.386455,-8.610929,-7.027417,3.291928,-7.242832,-8.886748,-5.111667,-9.337959,-0.500411,9.431296,-0.803321,-5.780761,1.561834,6.264696,-4.878794,-4.664635,9.050870,1.719807,5.328535,-6.377941,7.607702,-4.707459,-4.918671,-3.920019,2.518288,0.281695,2.001828,-1.884327,5.771246,6.508512,-9.349375,-2.803458,-2.215567,-7.104878,-6.727364,1.139247,7.110049,0.956578,2.893915,4.487724,-2.612521,-7.030245,-2.537021,-1.631796,-2.965675,7.476009,-9.957491,-1.152396,7.825164,-9.079933,0.495750,-9.633443,5.914199,-9.285643,5.996301,6.940376,0.581217,8.267332,-1.441581,2.071862,6.899984,-4.471105,-2.298344,-2.089996,8.792839,-7.597706,9.174555,5.406796,-2.907686,5.719296,6.202788,9.093701,-7.727712,0.328756,6.921158,1.021957,4.121619,-8.869437,-2.386133,-7.089135,4.788122,0.157147,0.690376,-7.573344,-5.468895,9.872335,-1.259562,-0.591187,8.939013,-6.824914,6.050221,-1.357053,3.116464,-2.139210,6.416293,2.881526,3.635673,0.514989,3.760540,4.240308,1.926865,-8.673658,5.523544,-6.741373,-5.977400,0.802770,-6.520001,-4.124420,-4.787054,-3.063564,0.013875,6.596875,-6.587960,6.336232,-3.621996,4.711291,4.763253,3.110011,6.373724,-3.297150,-1.797305,1.445944,9.052522,-0.418784,-5.189431,3.191015,-3.840192,3.858323,-3.149489,9.343573,3.388945,-1.749217,-3.462471,7.328538,-7.000838,3.995946,-4.999193,7.010822,-2.325433,1.741290,-0.889795,5.519921,4.668883,9.159810,9.719046,-5.318439,-1.116886,-0.209499,1.296002,-7.977408,4.219475,-0.623969,-5.794858,0.086904,-3.469263,3.079045,0.307554,1.804440,1.423478,-8.104854,7.581409,2.873773,-3.172552,-7.791724,-3.387348,7.955386,-9.893724,2.137594,3.066410,-0.471599,8.643510,6.396969,-2.969653,-3.739636,2.644006,-6.511605,7.049734,-1.054558,1.756386,0.278114,9.846884,3.231408,0.798195,-2.322408,5.655689,-9.411645,8.915780,-1.547648,-8.410060,9.065406,2.884190,8.327202,-6.713369,-3.932798,-6.343427,7.146251,-6.616520,-3.686547,2.550553,9.270227,7.653574,4.810283,2.369904,-7.319423,-1.683316,4.461137,6.074941,6.441177,1.414372,-6.751006,0.290563,0.712412,-6.717144,8.789447,3.850868,8.493311,-3.560046,0.498215,-6.419234,-2.473428,9.953589,-6.129595,-3.701107,-6.271222,-6.901665,6.215049,-5.927791,8.097329,-4.997890,-6.707671,7.536652,-1.348344,9.345304,2.416933,4.110698,-3.927904,-4.663832,-4.049383,-3.246562,-8.951030,1.661115,6.001247,-0.286964,-5.252238,7.590826,-6.933697,-6.331884,6.173665,-1.799923,5.454701,-9.157697,8.255686,3.407613,1.102505,-7.338704,-2.892972,0.089544,-5.349225,-3.681440,0.608897,4.440251,6.791725,-9.285694,8.035242,9.614871,8.301986,5.501467,-7.308474,-9.465862,-1.914272,9.631247,-5.354642,-2.662501,2.424742,3.017844,4.733438,-6.402859,2.482542,2.354600,-6.351687,1.785731,-7.786831,-9.367927,0.625844,-6.917619,7.937845,-1.696194,-2.287333,-6.263566,-4.422833,-6.953804,6.425451,-2.641641,-8.919146,8.326605,-4.138688,-8.007979,3.718531,-7.925205,8.212234,7.928831,-3.676968,-5.275998,-6.021745,-8.210015,-7.168928,-6.459481,-4.144303,-1.403298,-7.777209,8.885777,0.067173,7.819756,-8.145986,7.702372,-4.880389,-1.898147,4.079031,-5.675177,-1.330824,-9.436287,2.323529,-7.822395,7.590531,-6.096468,-2.485886,-7.113345,9.800465,4.802781,0.177603,8.411804,4.101485,0.004947,-5.636394,-3.160942,-5.226786,-4.965422,-4.074406,9.521116,2.979512,4.285398,9.124264,4.181555,-0.863792,-9.510179,-0.479305,3.591705,-4.802131,-4.287960,-6.179984,2.924043,1.673280,9.857559,-6.225091,3.439948,-3.355313,4.617660,-6.404566,3.710783,0.611694,4.593343,7.918973,0.725516,8.672984,3.946327,0.204550,-2.929093,-2.284780,-4.479979,3.834380,-7.634720,-1.915305,6.379686,1.619209,4.799345,1.587119,-9.817027,-7.804982,-8.947414,5.209543,8.653013,-7.050121,5.794997,0.073841,9.519986,9.958265,4.663195,9.523713,-0.017079,6.565032,-8.704425,-2.918152,4.039554,-2.899950,-9.835828,2.066280,-7.751650,-0.246336,-4.296117,6.441027,-7.233968,-1.629751,3.261881,-2.439710,-7.195724,1.396818,-5.600650,1.209200,-0.549034,3.761430,5.313530,4.153024,-3.747902,8.262355,6.260505,-3.292417,8.259161,3.763083,5.658458,-1.790349,1.499963,-5.885486,-1.416554,-2.797371,3.313602,7.963082,-5.648465,6.306247,-4.497284,-6.162128,1.504737,2.955588,8.743053,7.427343,8.188562,-9.112212,-9.840809,-4.417787,-4.621209,0.790168,5.624532,-8.593342,0.042089,-2.628135,-2.509539,-8.569927,-0.619458,-2.791484,-8.452793,-4.241648,7.109044,8.896110,0.574551,-2.835688,-8.070952,4.093445,0.069819,7.590311,4.378314,-9.078847,-5.092836,-4.883119,5.015848,-2.234331,-8.691982,7.531264,4.701391,9.685430,-7.299040,-9.858917,-2.965663,-3.945146,9.473802,-4.119572,-0.689656,-5.273828,3.943930,2.726784,3.264212,5.737502,-9.128402,-8.478848,5.821496,-2.110223,0.286516,-8.134200,-3.473009,1.238920,-9.723867,8.603362,2.284924,-6.476799,-7.309687,1.920176,0.341669,7.195766,8.573016,-6.908798,-6.877653,-6.284684,7.694077,6.253044,-6.264666,-7.868469,-4.839013,9.041415,1.518422,2.514384,1.788090,-0.616278,1.011233,-8.023367,2.681463,0.951166,8.975817,7.363514,-3.590478,-1.467056,-0.158880,5.101522,-2.852618,-2.516017,-8.764422,2.158784,-1.381020,4.754057,-5.026301,-2.625144,-0.484694,9.237149,2.882271,-6.322347,5.698357,-0.962100,3.898943,-7.368300,-5.442313,-7.187008,-0.289651,-0.703584,0.127388,-4.798269,7.717929,0.826782,-5.302925,6.381504,7.232722,0.964511,9.662311,-7.040143,-9.948428,-6.572944,8.413933,1.440607,4.372850,-0.130943,1.137009,-8.762871,6.094753,-2.952019,-2.135935,-2.668999,-5.355105,-9.610321,8.807827,-0.002834,2.665757,3.741362,7.670186,8.195700,-2.389377,2.176399,-2.819880,4.376533,0.103244,-8.555352,0.970113,-9.115220,-3.130183,3.308996,3.045427,7.471488,2.930712,-6.421576,-3.439425,3.698705,9.659935,-1.882022,-8.050925,-0.502417,-5.846157,8.011576,1.465409,3.944127,-4.288568,4.709357,-1.030467,-8.635315,1.619884,7.239919,-9.627948,1.746298,9.478821,-6.426951,1.299027,-7.025688,8.834902,5.864189,4.406890,-0.785503,-1.479276,5.447522,9.202121,-3.992463,-6.116896,-0.812812,-7.533521,9.741509,7.530344,4.217963,-9.661243,-4.994957,6.651084,-5.613549,-8.278500,-6.145963,-7.866512,-4.717924,1.887727,9.567024,-6.768048,7.906764,1.660161,-2.661067,-5.174158,3.090123,0.637255,-5.161070,6.474956,8.781629,8.401206,-0.033064,-3.664634,0.830535,2.100046,0.988610,-7.064732,-7.006731,6.597298,3.596140,-1.121080,-6.898624,-9.185970,-3.833901,0.500768,-3.370361,6.751231,9.033993,5.195434,-1.707852,0.787241,-7.037164,-4.933474,0.983045,9.011897,2.887813,1.507657,-0.183855,-0.120048,1.172743,-3.780329,-2.114174,0.946054,3.702315,0.684911,8.649827,-5.908676,-4.711459,5.243661,-0.960957,-6.148264,-4.639382,-2.274302,-7.172492,-0.697233,-9.319952,7.660135,-6.961462,-7.306314,7.987539,7.910325,-2.693032,-4.546454,-6.242809,-4.994000,-8.300647,-3.137735,-6.433401,0.857423,7.188967,7.528919,6.083068,7.226593,5.591095,4.254991,9.898354,9.368466,-9.987069,-7.693813,0.931992,-3.682709,-9.394917,8.321557,0.019837,0.534891,-4.196369,-9.033321,0.695320,2.626615,-1.421373,0.842765,-3.852237,6.046916,-6.068426,8.637354,0.826375,9.206027,4.308389,-7.325014,-1.803592,4.884319,-0.087773,-1.321953,1.702221,-0.575347,-5.562802,3.911216,6.731494,-5.618425,6.747325,7.047637,2.309292,-2.503289,0.200283,7.297933,-2.019307,-4.515189,-5.856373,-0.172353,0.203501,0.452211,-9.652670,-2.680948,-2.146815,0.082852,-0.362035,-9.897117,7.927437,-5.693435,2.547516,-2.113057,4.745899,8.191268,7.518651,0.175348,-3.006152,4.409625,-5.520245,-6.231310,-0.683287,-9.053419,1.857813,-1.232823,5.981377,6.160472,-4.982554,-0.368377,7.481036,8.397121,7.771649,6.948215,-6.870041,-1.735235,-0.203647,8.341723,-3.214684,0.505674,-2.098685,-1.233519,2.139984,-0.318992,-7.841318,2.107420,-2.282524,-9.780681,5.187412,-2.520437,-6.906619,-4.979814,4.319622,7.328744,4.487511,3.891106,-4.991432,0.377136,-6.234721,3.351408,-9.758093,-1.809643,-7.315692,-6.673121,-6.217848,6.824551,3.496743,9.015863,8.806051,-1.960875,6.801630,-3.083145,-2.198983,1.117920,1.819089,9.370743,7.573747,6.079842,-2.683599,-0.569502,-8.673413,-1.203221,0.069960,-4.516727,-9.446611,-8.682037,7.816966,-4.523163,-6.167983,-2.619215,-7.935530,-2.997089,3.731735,9.390839,2.887426,-7.372228,9.406996,-5.820050,-9.491528,0.665569,9.217724,-2.119369,-7.762562,-8.023050,7.839855,8.946590,-8.007247,5.252638,0.030887,-4.261983,-5.569079,-7.178914,7.463221,2.630909,9.552399,-8.571284,-2.055292,2.333212,8.993444,1.407032,-9.925877,5.988349,-0.543950,-2.318633,1.333326,5.002414,4.841165,-2.952018,-3.465318,-6.652353,-4.986966,-0.339926,-8.051198,-0.261850,-6.673681,-8.995707,-2.012270,3.537144,-8.295077,-6.798164,-5.451868,-5.355829,9.326307,-9.320883,-4.118902,2.455301,-5.860866,7.712275,-8.117722,-5.333698,9.581663,2.694770,-2.192143,1.070764,9.146900,5.096747,3.424428,4.487189,-9.776606,-3.882754,8.752524,0.678139,2.811998,-1.409963,-5.974521,-0.780499,4.836579,0.806532,7.176803,-6.136653,-0.811171,-8.021577,2.672100,-4.249106,-8.309350,-8.802996,9.111864,4.451919,-9.107466,-4.158589,-0.126918,5.077861,-9.484957,-2.282679,6.960567,-4.149233,-3.272783,6.207719,6.875134,2.595550,-3.430819,0.529307,8.256026,-9.278986,-3.596636,5.543826,-4.138019,-1.454868,5.917898,-0.610454,6.700609,9.696072,4.875787,-0.803440,-1.575004,-5.981985,9.946492,-7.490155,-5.663584,8.936184,8.555332,-4.463584,9.568607,3.384853,3.461736,1.295905,-4.831596,-2.824224,0.071095,-8.159114,-9.266526,-6.296880,-4.740069,-8.700574,5.014839,6.165245,-8.357539,-6.369649,-3.668636,3.487967,1.841141,2.891768,4.483485,-3.906092,-6.068585,-8.477202,4.591985,-2.287363,-6.693273,5.226987,-9.627582,-1.655622,-6.871806,-1.856239,-7.864611,-0.763049,-5.248666,-3.163241,2.987122,-2.547927,5.312369,-7.872946,5.707418,6.687116,1.806606,-8.720572,3.300909,7.067966,4.485214,9.970791,3.903184,-6.843884,2.507033,7.666732,9.373601,-7.373933,-9.826161,4.710301,7.226779,1.734591,9.256101,3.101420,6.625453,-6.657650,-3.522900,-9.881372,2.650511,-2.117275,9.581660,1.913162,1.139665,-4.974644,-3.411260,-0.063686,-6.853970,7.825253,0.233139,-3.474504,9.421001,2.924968,-4.553606,4.349535,-1.917973,-2.684451,2.973290,-3.368857,4.040185,-6.902528,9.428570,-1.391046,5.638385,2.169851,-5.481196,0.086409,1.065304,1.288431,-1.815972,8.062680,-5.628348,5.486696,-6.328153,7.950622,-1.128461,8.815199,-7.833740,0.201561,9.450626,-1.528994,-1.326870,6.157705,-3.190052,-5.482427,1.819965,-6.775912,8.231876,7.543552,7.930964,-1.158857,9.568435,0.522042,5.977419,6.559028,-6.582620,-8.189158,3.570744,-4.425397,-1.400604,-6.558658,-9.298340,-3.513624,-7.648836,9.534276,-4.625169,9.497852,-0.658426,7.209581,5.721413,-8.755786,-7.910392,9.757398,2.918560,5.861562,-9.796549,9.609721,-7.819832,-9.075585,-1.990338,6.576948,4.269882,-2.828187,7.253095,6.895794,-2.488545,-4.189881,-2.668650,-5.798483,6.062440,-8.906677,3.414532,0.835748,1.309539,1.811762,5.326463,-3.653197,6.807516,-7.585775,-5.987711,-9.952168,-1.512469,8.422034,-3.198730,-8.351268,2.874454,4.932677,-5.958207,3.070682,-6.867262,0.511675,9.357221,7.345931,-4.634308,9.298462,3.181024,1.888156,9.809196,6.431700,-5.457147,7.292493,-8.468601,5.172846,8.026892,-4.426399,4.678256,-8.221791,2.919866,3.554468,2.121473,-9.274781,-8.639505,-6.549864,-6.439361,5.882873,8.312421,-0.871781,1.038286,7.320946,-0.397657,3.161520,9.586667,-1.803709,7.696306,9.846714,7.919240,8.308166,2.330271,6.828375,6.114183,6.744288,2.764968,-7.484199,5.827986,-3.982818,8.025314,4.194494,1.970019,1.881410,6.496604,6.707679,-9.852589,7.202352,2.150383,4.979689,0.463310,7.801024,5.727872,-5.705881,4.380674,-1.893571,-6.956703,-7.134078,-8.237995,-9.012846,-0.694973,-5.348883,-6.049813,-3.993423,-6.394686,5.159342,-7.697414,-3.025451,-4.194298,-4.391035,7.153011,5.397602,-6.421433,2.699536,6.397738,4.544998,-8.135712,3.281168,6.038035,-3.241255,0.265091,7.264311,-3.763066,0.884711,-3.590596,6.097537,2.188285,9.539082,-5.573639,-6.457989,-8.236758,6.584261,9.236562,-3.474569,-8.927285,-9.953469,-2.442968,-0.189759,7.744571,2.849431,1.755382,-9.719942,8.136423,2.887620,-4.820419,-3.784463,0.746534,9.364600,-6.529457,2.046428,-7.112121,-8.858916,2.060958,-9.937267,9.118353,0.857044,-8.548609,1.815343,6.125684,4.431874,-3.991349,4.798581,3.614961,-6.940310,-4.589882,-7.370124,6.584767,5.659872,7.294057,5.290423,6.593021,-2.629178,-4.053350,-6.783792,-4.458214,-6.471613,1.676803,-3.821580,-2.885424,-1.290634,-7.519366,-0.032608,6.885688,-8.715635,0.241210,5.344638,-1.156234,-9.510935,5.921443,0.173133,-0.399659,-4.445077,4.884957,-9.442146,3.632745,-9.339152,0.954564,5.883465,-2.674035,-1.305273,-3.019046,-5.746902,5.925018,1.014048,6.748093,-5.680309,-4.128243,3.513298,2.848095,-7.941665,-5.426457,-9.716132,0.643214,9.493702,9.544940,2.201808,3.260925,4.705161,-7.637146,-5.200551,4.136374,3.541715,2.355970,2.777856,-7.931373,-8.971946,-2.800874,-4.744725,-2.800419,9.691477,0.512273,1.108644,-7.251583,7.571097,-1.697569,6.957651,-2.748588,2.920797,9.328232,-6.933203,-7.867836,0.526758,1.872954,-6.988327,4.780664,-5.770568,-7.031507,0.101290,-9.670947,5.258448,-7.888104,-5.393286,9.406080,0.541452,-6.621313,-7.889011,-9.820835,4.000173,-5.539270,1.987346,7.841799,-3.177504,-6.552192,-9.202599,1.422137,6.973546,-6.721622,-3.605435,6.767506,4.677600,-7.219819,2.123331,6.918108,-5.037211,-6.293338,3.458462,3.179104,-7.572242,9.889632,-4.838808,-4.766038,3.827909,4.706917,5.067998,2.496873,-0.593572,-2.805026,-1.320639,-2.093453,9.239398,-3.851909,-4.662910,9.303874,5.281866,-6.647475,2.908961,6.485864,8.428571,-2.069570,-5.774599,5.505099,0.101371,-1.974111,2.941397,6.734041,7.283222,0.457723,5.527860,-5.481098,-6.469165,7.997866,-5.106819,-7.291237,6.316350,-7.145487,-3.042613,7.667998,3.927769,1.110541,-2.667808,-6.618492,-4.693988,-5.739277,-3.494825,7.039538,9.267312,-3.253722,0.416078,6.606590,4.501947,-9.716692,-6.084058,-5.940369,2.479742,-5.514924,-1.903493,-7.200169,4.855412,-8.128705,9.626562,-2.888789,-5.108889,-8.444160,7.589556,1.087329,1.134844,-9.154063,6.733629,-5.428299,-8.099915,-7.759658,9.602096,2.828025,9.894546,-3.829716,5.623741,8.016158,2.477439,-3.962584,-1.776364,7.117175,5.549229,2.517767,-7.809558,-5.511779,-4.098096,4.280619,0.361334,-0.262573,3.477185,1.926894,7.379507,-0.713785,1.455668,5.990632,-6.671113,8.868910,-3.810734,-8.435625,-4.336595,4.891594,-5.319072,-2.792343,-3.619952,-1.254844,3.324976,-3.051721,9.811183,7.056482,9.404486,-5.617859,-5.132558,-4.030918,-7.181257,9.066548,6.895289,7.483612,-0.690433,7.294773,6.216018,-1.301727,4.992768,4.604856,6.119922,0.348800,-9.826303,3.202931,-6.157236,5.937512,-7.825836,8.517231,-1.055527,9.448472,3.094542,7.476737,3.806788,8.496316,-2.925062,0.001124,-8.474482,4.732946,-4.976236,4.948577,-4.542642,8.875393,0.557068,-3.263524,6.537136,-9.845994,-9.828431,0.829864,8.871517,-6.456509,-6.498607,-1.943017,4.644448,2.456741,-8.023845,-6.812349,7.939706,4.346571,-9.149576,-5.038768,-6.377744,-8.604637,-7.605693,-5.088402,7.924522,-3.412962,-6.225934,-3.101966,-5.933213,5.120990,-8.432915,1.965995,7.445973,-3.716293,-3.141199,3.218141,-3.013333,0.204416,-8.929310,-5.277408,-2.304363,7.711227,9.548232,-5.337746,8.553857,-7.528689,7.376556,7.898795,3.519311,8.642415,6.759815,-9.952313,-5.187297,-3.155319,0.486614,-6.134265,2.450546,-5.996703,1.489795,-6.409120,-6.813633,-1.117815,-5.282269,-7.171664,-3.753438,3.517664,-9.116695,3.317801,8.747495,3.819487,-3.830468,7.604964,6.560541,1.880045,-3.171630,4.701162,-4.772782,5.065414,-0.688499,-5.229816,0.098852,-6.426546,7.092085,-4.355634,5.891914,4.709241,-9.601770,-3.754089,-6.139560,-3.166482,9.894910,4.370960,-7.529546,5.673822,-1.084772,2.502330,8.045879,-6.014927,8.551627,-4.007051,-7.572622,-6.826826,-0.228514,9.522993,-3.027305,6.088778,5.508414,-5.676145,6.910016,-9.109531,1.248725,7.181149,3.001693,-5.092137,4.165819,-1.894181,-2.760976,-8.506445,5.033045,-0.604022,2.655048,3.010705,-3.499162,-2.423876,0.124202,-0.069701,-8.506823,-6.027308,5.087269,-3.839457,3.824348,-4.204759,-3.268818,-6.562730,-3.470997,7.118858,-1.479999,6.177198,-1.519838,4.904832,-3.016372,2.080943,6.452599,4.273110,-0.508262,6.884949,-4.491172,0.971417,-8.886357,-9.948031,-7.689111,8.760962,-3.011543,-2.777179,-4.444952,5.828619,7.741466,-0.836919,-4.754664,4.754214,2.006327,-1.437019,-3.960965,-8.739345,5.847622,-7.376222,7.122598,-5.627714,-3.445807,-9.944764,-7.212448,5.020897,-6.861154,8.818884,5.354833,2.147204,1.839905,-9.302939,-3.636289,9.473088,0.353340,0.734079,0.234216,5.562350,-9.304986,-7.793861,1.256317,-7.299612,7.097865,-9.686922,-7.685299,-8.618073,1.553897,-6.274580,3.654338,6.252231,2.762494,8.612525,-3.750135,-4.437145,7.123538,-0.265854,-1.597427,-8.628218,-5.066045,2.811148,3.668621,-7.066817,-8.506695,-7.724104,-3.096293,6.456354,-0.532307,-1.218786,4.368647,-6.697709,-9.760157,8.244160,3.617172,-8.834396,-0.232812,9.684651,2.203460,-4.764148,-0.612223,-1.569763,-6.110897,-4.410608,-3.065798,4.581697,6.762555,-4.963153,-0.135208,-5.495087,-3.827051,7.066667,-7.096076,-6.025366,6.065206,-9.754081,9.780353,-8.651958,-3.588128,-6.817780,-0.318341,-9.546020,1.105853,1.931353,-7.233277,-9.731426,-9.854906,3.120226,-2.007523,6.352606,-6.829361,5.563712,-8.813106,9.133111,-8.542545,7.352535,6.819059,-9.918493,7.283769,8.070340,8.837517,-0.873923,7.056288,3.465167,2.884386,6.046056,-0.901325,2.600359,4.205956,7.270329,-1.092629,-9.571826,-1.783333,3.976842,-9.396428,6.304678,-8.007129,2.817148,0.422086,2.896730,6.927788,-5.037203,6.584355,-8.744028,-9.060590,-9.127775,2.759003,-8.406048,0.975637,4.342744,-0.729510,1.237717,-3.516958,8.175951,3.852941,-9.399030,6.126110,-1.906936,-8.388822,6.805659,-3.012509,6.775246,-3.381066,8.156211,9.644038,6.863534,3.538754,-9.946251,-0.372462,5.531783,-9.145374,-6.456191,-6.268191,-0.291290,-5.792844,8.213290,6.635496,-1.602433,0.814418,5.827147,-0.856369,-0.445220,-7.865204,2.450968,-0.298303,-8.690720,-6.534473,6.191600,-2.733554,4.829064,0.860197,1.031767,4.422191,2.882578,-4.145928,-2.704024,6.774112,-3.974973,2.399240,-5.150957,1.961980,7.980410,-8.961430,-8.704363,-3.679420,6.007728,7.097449,2.036543,-5.236732,5.404270,9.019137,2.426810,-5.826684,-0.694401,2.645401,-9.326190,-7.546889,-2.409323,-1.631659,7.700486,-3.259263,-5.656927,0.280274,-2.101335,-7.021201,-7.881335,5.603332], dtype = "float64")#candidate|2830|(2352,)|const|float64
bop_2831 = relay.bitwise_xor(var_2828.astype('uint8'), relay.reshape(const_2830.astype('uint8'), relay.shape_of(var_2828))) # shape=(2352,)
func_2149_call = mod.get_global_var('func_2149')
func_2151_call = mutated_mod.get_global_var('func_2151')
const_2838 = relay.const([-0.475865,-6.494722,-2.463848,3.078026,-9.348804,-8.842637,-1.007024,-8.543955,-9.938458,4.821582,9.905175,3.328315,-7.878270,-2.121812,-7.870619,8.749716,9.610933,-7.030453,4.931797,4.362978,-9.529323,-0.402458,-1.156547,4.260528,-1.046410,1.265453,1.465951,0.314553,-1.028569,3.530192,0.540668,-2.902911,6.624671,-0.952347,-0.593100,-1.700670,2.433140,6.606265,8.366620,-8.656675,-4.354637,-5.128308,9.399732,0.578042,4.170508,-7.410946,2.693357,3.670118,2.667396,-4.210458,-5.724101,-7.267934,4.759706,4.799829,5.451797,-3.231365,2.496978,1.065436,-4.471447,1.563322,8.928573,-7.424894,-2.047005,3.137918,5.761486,8.706641,-3.952369,-7.952764,6.671131,3.521112], dtype = "float32")#candidate|2838|(70,)|const|float32
call_2837 = relay.TupleGetItem(func_2149_call(relay.reshape(const_2838.astype('float32'), [10, 1, 7])), 0)
call_2839 = relay.TupleGetItem(func_2151_call(relay.reshape(const_2838.astype('float32'), [10, 1, 7])), 0)
uop_2850 = relay.atan(call_2827.astype('float32')) # shape=(14, 12, 14)
uop_2852 = relay.atan(call_2829.astype('float32')) # shape=(14, 12, 14)
output = relay.Tuple([call_2798,call_2807,bop_2831,call_2837,const_2838,uop_2850,])
output2 = relay.Tuple([call_2799,call_2808,bop_2831,call_2839,const_2838,uop_2852,])
func_2853 = relay.Function([var_2828,], output)
mod['func_2853'] = func_2853
mod = relay.transform.InferType()(mod)
mutated_mod['func_2853'] = func_2853
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2854 = relay.var("var_2854", dtype = "float64", shape = (2352,))#candidate|2854|(2352,)|var|float64
func_2853_call = mutated_mod.get_global_var('func_2853')
call_2855 = func_2853_call(var_2854)
output = call_2855
func_2856 = relay.Function([var_2854], output)
mutated_mod['func_2856'] = func_2856
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2860 = relay.var("var_2860", dtype = "float64", shape = (11, 12, 3))#candidate|2860|(11, 12, 3)|var|float64
uop_2861 = relay.sinh(var_2860.astype('float64')) # shape=(11, 12, 3)
output = uop_2861
output2 = uop_2861
func_2875 = relay.Function([var_2860,], output)
mod['func_2875'] = func_2875
mod = relay.transform.InferType()(mod)
mutated_mod['func_2875'] = func_2875
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2876 = relay.var("var_2876", dtype = "float64", shape = (11, 12, 3))#candidate|2876|(11, 12, 3)|var|float64
func_2875_call = mutated_mod.get_global_var('func_2875')
call_2877 = func_2875_call(var_2876)
output = call_2877
func_2878 = relay.Function([var_2876], output)
mutated_mod['func_2878'] = func_2878
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2906 = relay.var("var_2906", dtype = "float32", shape = (8, 5, 7))#candidate|2906|(8, 5, 7)|var|float32
var_2907 = relay.var("var_2907", dtype = "float32", shape = (8, 5, 7))#candidate|2907|(8, 5, 7)|var|float32
bop_2908 = relay.subtract(var_2906.astype('float32'), relay.reshape(var_2907.astype('float32'), relay.shape_of(var_2906))) # shape=(8, 5, 7)
func_2275_call = mod.get_global_var('func_2275')
func_2277_call = mutated_mod.get_global_var('func_2277')
call_2913 = relay.TupleGetItem(func_2275_call(), 0)
call_2914 = relay.TupleGetItem(func_2277_call(), 0)
output = relay.Tuple([bop_2908,call_2913,])
output2 = relay.Tuple([bop_2908,call_2914,])
func_2915 = relay.Function([var_2906,var_2907,], output)
mod['func_2915'] = func_2915
mod = relay.transform.InferType()(mod)
mutated_mod['func_2915'] = func_2915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2915_call = mutated_mod.get_global_var('func_2915')
var_2917 = relay.var("var_2917", dtype = "float32", shape = (8, 5, 7))#candidate|2917|(8, 5, 7)|var|float32
var_2918 = relay.var("var_2918", dtype = "float32", shape = (8, 5, 7))#candidate|2918|(8, 5, 7)|var|float32
call_2916 = func_2915_call(var_2917,var_2918,)
output = call_2916
func_2919 = relay.Function([var_2917,var_2918,], output)
mutated_mod['func_2919'] = func_2919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2001_call = mod.get_global_var('func_2001')
func_2003_call = mutated_mod.get_global_var('func_2003')
call_2945 = relay.TupleGetItem(func_2001_call(), 0)
call_2946 = relay.TupleGetItem(func_2003_call(), 0)
var_2959 = relay.var("var_2959", dtype = "float64", shape = (4, 13, 3))#candidate|2959|(4, 13, 3)|var|float64
bop_2960 = relay.less_equal(call_2945.astype('bool'), relay.reshape(var_2959.astype('bool'), relay.shape_of(call_2945))) # shape=(4, 13, 3)
bop_2963 = relay.less_equal(call_2946.astype('bool'), relay.reshape(var_2959.astype('bool'), relay.shape_of(call_2946))) # shape=(4, 13, 3)
output = relay.Tuple([bop_2960,])
output2 = relay.Tuple([bop_2963,])
func_2964 = relay.Function([var_2959,], output)
mod['func_2964'] = func_2964
mod = relay.transform.InferType()(mod)
var_2965 = relay.var("var_2965", dtype = "float64", shape = (4, 13, 3))#candidate|2965|(4, 13, 3)|var|float64
output = func_2964(var_2965)
func_2966 = relay.Function([var_2965], output)
mutated_mod['func_2966'] = func_2966
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2982 = relay.const([[[1.511454,-5.586743,-3.637236,2.334852],[-3.838387,-3.916662,8.983548,4.164563],[4.338243,1.682370,9.929288,8.734017],[7.792458,-0.053737,-3.737970,0.492252],[-5.059508,6.394421,3.603381,-8.414919]],[[-7.819565,-5.116158,-4.004720,8.988573],[4.526313,-3.364344,6.745950,2.444369],[-0.103906,-0.810078,2.114916,-3.493335],[3.530577,5.809146,-0.793380,-2.670000],[-7.378463,-8.215591,-9.750173,-1.734232]],[[4.117000,-4.346028,-8.190251,8.187664],[8.850486,4.306263,-6.153975,-5.381283],[-2.539358,-5.216247,-4.171904,5.688704],[-1.819009,9.929095,-1.915867,-3.512343],[-9.691173,-8.188993,-0.537822,-7.558167]],[[3.724647,-4.584363,5.389444,8.494882],[-2.683642,1.945170,-6.085232,3.133523],[-0.166485,9.222542,-0.905547,-7.326050],[-8.527452,5.303767,1.773060,-8.060706],[-3.078119,-3.750432,3.022836,1.120384]],[[1.780278,-4.941257,6.448230,-3.801295],[-4.758134,-3.187786,9.368602,-9.867835],[6.832416,-0.156697,3.693149,9.287090],[-7.508293,7.058762,0.003432,2.747189],[4.945008,-6.998580,-2.309118,5.631607]],[[-0.802020,7.776580,-4.713370,8.123824],[-1.410984,-6.557806,-4.129436,5.882836],[5.999824,7.940363,3.127026,-7.860299],[-3.455938,1.730363,8.799528,-7.265291],[4.603931,-1.022548,7.934356,5.810321]],[[4.080661,2.441291,-7.783616,-1.052498],[4.822252,-9.526010,7.243491,-6.933791],[-2.195733,-1.343784,-0.552303,9.475165],[-6.813229,9.647878,-8.189717,8.235139],[8.043369,9.054149,1.985936,5.847672]]], dtype = "float64")#candidate|2982|(7, 5, 4)|const|float64
const_2983 = relay.const([[[1.388067,-3.730551,9.933695,-6.593025],[8.201650,-7.759293,-0.289658,-1.507493],[-2.128444,-5.093472,-0.918620,-8.257574],[4.892476,-2.620207,-5.215808,1.439790],[-8.396395,1.719340,-3.250684,0.331918]],[[-8.235051,-3.805240,-8.385661,1.582653],[2.321844,8.497393,9.364071,-0.189472],[1.765189,1.653486,-5.349481,-3.183300],[4.039316,-0.252575,0.322573,9.795011],[3.648783,-5.320496,-3.717885,-4.718293]],[[6.813522,1.983020,8.622163,-6.447669],[-0.123589,8.926241,-8.826876,1.688421],[1.563144,3.943805,3.361166,1.253189],[-9.505721,3.466111,4.473813,0.529080],[4.977664,6.672807,-3.541554,3.920093]],[[6.384543,5.240149,-2.721486,1.858834],[1.890094,-7.598430,5.094569,2.222146],[4.918062,-2.420984,8.140287,-4.716195],[5.208977,5.816811,9.222126,-2.111211],[9.375972,-8.935434,5.190598,-5.810626]],[[-8.731749,4.436826,-7.686961,5.114103],[5.820382,-2.533935,1.508609,0.200098],[-1.857540,-2.054694,-5.109558,-1.401259],[1.576038,7.774711,2.381721,6.676112],[7.636077,5.822390,5.665453,0.892005]],[[0.206241,2.756535,-4.616533,7.443710],[-9.861225,-6.150594,-9.512410,-0.336975],[2.978836,-9.210368,5.297175,-9.028138],[9.446375,-3.643736,3.965796,8.947905],[7.365525,7.450738,-8.067910,-7.502590]],[[5.247977,6.980777,-6.450774,9.043848],[1.595307,-8.625183,9.313514,6.128831],[-0.721895,9.195501,-6.835681,-8.244272],[-9.529482,7.968205,-8.548876,6.024723],[9.843126,-9.503339,-3.155787,3.492691]]], dtype = "float64")#candidate|2983|(7, 5, 4)|const|float64
bop_2984 = relay.add(const_2982.astype('float64'), relay.reshape(const_2983.astype('float64'), relay.shape_of(const_2982))) # shape=(7, 5, 4)
func_2646_call = mod.get_global_var('func_2646')
func_2648_call = mutated_mod.get_global_var('func_2648')
call_2999 = relay.TupleGetItem(func_2646_call(), 0)
call_3000 = relay.TupleGetItem(func_2648_call(), 0)
output = relay.Tuple([bop_2984,call_2999,])
output2 = relay.Tuple([bop_2984,call_3000,])
func_3029 = relay.Function([], output)
mod['func_3029'] = func_3029
mod = relay.transform.InferType()(mod)
mutated_mod['func_3029'] = func_3029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3029_call = mutated_mod.get_global_var('func_3029')
call_3030 = func_3029_call()
output = call_3030
func_3031 = relay.Function([], output)
mutated_mod['func_3031'] = func_3031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2009_call = mod.get_global_var('func_2009')
func_2011_call = mutated_mod.get_global_var('func_2011')
call_3035 = relay.TupleGetItem(func_2009_call(), 0)
call_3036 = relay.TupleGetItem(func_2011_call(), 0)
var_3052 = relay.var("var_3052", dtype = "float64", shape = (4, 13, 3))#candidate|3052|(4, 13, 3)|var|float64
bop_3053 = relay.subtract(call_3035.astype('float64'), relay.reshape(var_3052.astype('float64'), relay.shape_of(call_3035))) # shape=(4, 13, 3)
bop_3056 = relay.subtract(call_3036.astype('float64'), relay.reshape(var_3052.astype('float64'), relay.shape_of(call_3036))) # shape=(4, 13, 3)
uop_3067 = relay.log10(bop_3053.astype('float64')) # shape=(4, 13, 3)
uop_3069 = relay.log10(bop_3056.astype('float64')) # shape=(4, 13, 3)
output = uop_3067
output2 = uop_3069
func_3086 = relay.Function([var_3052,], output)
mod['func_3086'] = func_3086
mod = relay.transform.InferType()(mod)
var_3087 = relay.var("var_3087", dtype = "float64", shape = (4, 13, 3))#candidate|3087|(4, 13, 3)|var|float64
output = func_3086(var_3087)
func_3088 = relay.Function([var_3087], output)
mutated_mod['func_3088'] = func_3088
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3096 = relay.var("var_3096", dtype = "uint8", shape = (3, 4, 13))#candidate|3096|(3, 4, 13)|var|uint8
var_3097 = relay.var("var_3097", dtype = "uint8", shape = (3, 4, 13))#candidate|3097|(3, 4, 13)|var|uint8
bop_3098 = relay.add(var_3096.astype('uint8'), relay.reshape(var_3097.astype('uint8'), relay.shape_of(var_3096))) # shape=(3, 4, 13)
output = relay.Tuple([bop_3098,])
output2 = relay.Tuple([bop_3098,])
func_3105 = relay.Function([var_3096,var_3097,], output)
mod['func_3105'] = func_3105
mod = relay.transform.InferType()(mod)
var_3106 = relay.var("var_3106", dtype = "uint8", shape = (3, 4, 13))#candidate|3106|(3, 4, 13)|var|uint8
var_3107 = relay.var("var_3107", dtype = "uint8", shape = (3, 4, 13))#candidate|3107|(3, 4, 13)|var|uint8
output = func_3105(var_3106,var_3107,)
func_3108 = relay.Function([var_3106,var_3107,], output)
mutated_mod['func_3108'] = func_3108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2601_call = mod.get_global_var('func_2601')
func_2603_call = mutated_mod.get_global_var('func_2603')
call_3116 = relay.TupleGetItem(func_2601_call(), 2)
call_3117 = relay.TupleGetItem(func_2603_call(), 2)
var_3126 = relay.var("var_3126", dtype = "bool", shape = (10, 176))#candidate|3126|(10, 176)|var|bool
bop_3127 = relay.logical_or(call_3116.astype('bool'), relay.reshape(var_3126.astype('bool'), relay.shape_of(call_3116))) # shape=(10, 176)
bop_3130 = relay.logical_or(call_3117.astype('bool'), relay.reshape(var_3126.astype('bool'), relay.shape_of(call_3117))) # shape=(10, 176)
output = bop_3127
output2 = bop_3130
func_3138 = relay.Function([var_3126,], output)
mod['func_3138'] = func_3138
mod = relay.transform.InferType()(mod)
var_3139 = relay.var("var_3139", dtype = "bool", shape = (10, 176))#candidate|3139|(10, 176)|var|bool
output = func_3138(var_3139)
func_3140 = relay.Function([var_3139], output)
mutated_mod['func_3140'] = func_3140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2275_call = mod.get_global_var('func_2275')
func_2277_call = mutated_mod.get_global_var('func_2277')
call_3170 = relay.TupleGetItem(func_2275_call(), 0)
call_3171 = relay.TupleGetItem(func_2277_call(), 0)
output = call_3170
output2 = call_3171
func_3191 = relay.Function([], output)
mod['func_3191'] = func_3191
mod = relay.transform.InferType()(mod)
mutated_mod['func_3191'] = func_3191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3191_call = mutated_mod.get_global_var('func_3191')
call_3192 = func_3191_call()
output = call_3192
func_3193 = relay.Function([], output)
mutated_mod['func_3193'] = func_3193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2515_call = mod.get_global_var('func_2515')
func_2517_call = mutated_mod.get_global_var('func_2517')
call_3194 = relay.TupleGetItem(func_2515_call(), 0)
call_3195 = relay.TupleGetItem(func_2517_call(), 0)
var_3200 = relay.var("var_3200", dtype = "float64", shape = (4, 13, 3))#candidate|3200|(4, 13, 3)|var|float64
bop_3201 = relay.not_equal(call_3194.astype('bool'), relay.reshape(var_3200.astype('bool'), relay.shape_of(call_3194))) # shape=(4, 13, 3)
bop_3204 = relay.not_equal(call_3195.astype('bool'), relay.reshape(var_3200.astype('bool'), relay.shape_of(call_3195))) # shape=(4, 13, 3)
uop_3214 = relay.sqrt(bop_3201.astype('float64')) # shape=(4, 13, 3)
uop_3216 = relay.sqrt(bop_3204.astype('float64')) # shape=(4, 13, 3)
output = uop_3214
output2 = uop_3216
func_3221 = relay.Function([var_3200,], output)
mod['func_3221'] = func_3221
mod = relay.transform.InferType()(mod)
var_3222 = relay.var("var_3222", dtype = "float64", shape = (4, 13, 3))#candidate|3222|(4, 13, 3)|var|float64
output = func_3221(var_3222)
func_3223 = relay.Function([var_3222], output)
mutated_mod['func_3223'] = func_3223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2009_call = mod.get_global_var('func_2009')
func_2011_call = mutated_mod.get_global_var('func_2011')
call_3225 = relay.TupleGetItem(func_2009_call(), 0)
call_3226 = relay.TupleGetItem(func_2011_call(), 0)
func_1793_call = mod.get_global_var('func_1793')
func_1795_call = mutated_mod.get_global_var('func_1795')
call_3231 = func_1793_call()
call_3232 = func_1793_call()
uop_3241 = relay.tan(call_3225.astype('float64')) # shape=(4, 13, 3)
uop_3243 = relay.tan(call_3226.astype('float64')) # shape=(4, 13, 3)
func_1969_call = mod.get_global_var('func_1969')
func_1971_call = mutated_mod.get_global_var('func_1971')
call_3244 = relay.TupleGetItem(func_1969_call(relay.reshape(call_3231.astype('float64'), [4, 13, 3])), 0)
call_3245 = relay.TupleGetItem(func_1971_call(relay.reshape(call_3231.astype('float64'), [4, 13, 3])), 0)
func_3105_call = mod.get_global_var('func_3105')
func_3108_call = mutated_mod.get_global_var('func_3108')
call_3248 = relay.TupleGetItem(func_3105_call(relay.reshape(call_3244.astype('uint8'), [3, 4, 13]), relay.reshape(uop_3241.astype('uint8'), [3, 4, 13]), ), 0)
call_3249 = relay.TupleGetItem(func_3108_call(relay.reshape(call_3244.astype('uint8'), [3, 4, 13]), relay.reshape(uop_3241.astype('uint8'), [3, 4, 13]), ), 0)
output = relay.Tuple([call_3231,uop_3241,call_3244,call_3248,])
output2 = relay.Tuple([call_3232,uop_3243,call_3245,call_3249,])
func_3251 = relay.Function([], output)
mod['func_3251'] = func_3251
mod = relay.transform.InferType()(mod)
output = func_3251()
func_3252 = relay.Function([], output)
mutated_mod['func_3252'] = func_3252
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3260 = relay.var("var_3260", dtype = "float32", shape = (12, 7, 6))#candidate|3260|(12, 7, 6)|var|float32
var_3261 = relay.var("var_3261", dtype = "float32", shape = (12, 7, 6))#candidate|3261|(12, 7, 6)|var|float32
bop_3262 = relay.floor_mod(var_3260.astype('float32'), relay.reshape(var_3261.astype('float32'), relay.shape_of(var_3260))) # shape=(12, 7, 6)
output = bop_3262
output2 = bop_3262
func_3272 = relay.Function([var_3260,var_3261,], output)
mod['func_3272'] = func_3272
mod = relay.transform.InferType()(mod)
mutated_mod['func_3272'] = func_3272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3272_call = mutated_mod.get_global_var('func_3272')
var_3274 = relay.var("var_3274", dtype = "float32", shape = (12, 7, 6))#candidate|3274|(12, 7, 6)|var|float32
var_3275 = relay.var("var_3275", dtype = "float32", shape = (12, 7, 6))#candidate|3275|(12, 7, 6)|var|float32
call_3273 = func_3272_call(var_3274,var_3275,)
output = call_3273
func_3276 = relay.Function([var_3274,var_3275,], output)
mutated_mod['func_3276'] = func_3276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_3301 = func_1834_call()
call_3302 = func_1834_call()
output = call_3301
output2 = call_3302
func_3303 = relay.Function([], output)
mod['func_3303'] = func_3303
mod = relay.transform.InferType()(mod)
output = func_3303()
func_3304 = relay.Function([], output)
mutated_mod['func_3304'] = func_3304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2009_call = mod.get_global_var('func_2009')
func_2011_call = mutated_mod.get_global_var('func_2011')
call_3310 = relay.TupleGetItem(func_2009_call(), 0)
call_3311 = relay.TupleGetItem(func_2011_call(), 0)
func_1955_call = mod.get_global_var('func_1955')
func_1957_call = mutated_mod.get_global_var('func_1957')
call_3338 = func_1955_call()
call_3339 = func_1955_call()
output = relay.Tuple([call_3310,call_3338,])
output2 = relay.Tuple([call_3311,call_3339,])
func_3343 = relay.Function([], output)
mod['func_3343'] = func_3343
mod = relay.transform.InferType()(mod)
output = func_3343()
func_3344 = relay.Function([], output)
mutated_mod['func_3344'] = func_3344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3029_call = mod.get_global_var('func_3029')
func_3031_call = mutated_mod.get_global_var('func_3031')
call_3402 = relay.TupleGetItem(func_3029_call(), 0)
call_3403 = relay.TupleGetItem(func_3031_call(), 0)
func_3343_call = mod.get_global_var('func_3343')
func_3344_call = mutated_mod.get_global_var('func_3344')
call_3415 = relay.TupleGetItem(func_3343_call(), 0)
call_3416 = relay.TupleGetItem(func_3344_call(), 0)
output = relay.Tuple([call_3402,call_3415,])
output2 = relay.Tuple([call_3403,call_3416,])
func_3417 = relay.Function([], output)
mod['func_3417'] = func_3417
mod = relay.transform.InferType()(mod)
mutated_mod['func_3417'] = func_3417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3417_call = mutated_mod.get_global_var('func_3417')
call_3418 = func_3417_call()
output = call_3418
func_3419 = relay.Function([], output)
mutated_mod['func_3419'] = func_3419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2515_call = mod.get_global_var('func_2515')
func_2517_call = mutated_mod.get_global_var('func_2517')
call_3422 = relay.TupleGetItem(func_2515_call(), 1)
call_3423 = relay.TupleGetItem(func_2517_call(), 1)
output = relay.Tuple([call_3422,])
output2 = relay.Tuple([call_3423,])
func_3424 = relay.Function([], output)
mod['func_3424'] = func_3424
mod = relay.transform.InferType()(mod)
mutated_mod['func_3424'] = func_3424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3424_call = mutated_mod.get_global_var('func_3424')
call_3425 = func_3424_call()
output = call_3425
func_3426 = relay.Function([], output)
mutated_mod['func_3426'] = func_3426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2009_call = mod.get_global_var('func_2009')
func_2011_call = mutated_mod.get_global_var('func_2011')
call_3434 = relay.TupleGetItem(func_2009_call(), 0)
call_3435 = relay.TupleGetItem(func_2011_call(), 0)
func_2915_call = mod.get_global_var('func_2915')
func_2919_call = mutated_mod.get_global_var('func_2919')
var_3438 = relay.var("var_3438", dtype = "float32", shape = (280,))#candidate|3438|(280,)|var|float32
call_3437 = relay.TupleGetItem(func_2915_call(relay.reshape(var_3438.astype('float32'), [8, 5, 7]), relay.reshape(var_3438.astype('float32'), [8, 5, 7]), ), 1)
call_3439 = relay.TupleGetItem(func_2919_call(relay.reshape(var_3438.astype('float32'), [8, 5, 7]), relay.reshape(var_3438.astype('float32'), [8, 5, 7]), ), 1)
uop_3456 = relay.exp(call_3434.astype('float32')) # shape=(4, 13, 3)
uop_3458 = relay.exp(call_3435.astype('float32')) # shape=(4, 13, 3)
output = relay.Tuple([call_3437,var_3438,uop_3456,])
output2 = relay.Tuple([call_3439,var_3438,uop_3458,])
func_3460 = relay.Function([var_3438,], output)
mod['func_3460'] = func_3460
mod = relay.transform.InferType()(mod)
mutated_mod['func_3460'] = func_3460
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3461 = relay.var("var_3461", dtype = "float32", shape = (280,))#candidate|3461|(280,)|var|float32
func_3460_call = mutated_mod.get_global_var('func_3460')
call_3462 = func_3460_call(var_3461)
output = call_3462
func_3463 = relay.Function([var_3461], output)
mutated_mod['func_3463'] = func_3463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3424_call = mod.get_global_var('func_3424')
func_3426_call = mutated_mod.get_global_var('func_3426')
call_3479 = relay.TupleGetItem(func_3424_call(), 0)
call_3480 = relay.TupleGetItem(func_3426_call(), 0)
var_3481 = relay.var("var_3481", dtype = "float64", shape = (4, 13, 3))#candidate|3481|(4, 13, 3)|var|float64
bop_3482 = relay.multiply(call_3479.astype('uint16'), relay.reshape(var_3481.astype('uint16'), relay.shape_of(call_3479))) # shape=(4, 13, 3)
bop_3485 = relay.multiply(call_3480.astype('uint16'), relay.reshape(var_3481.astype('uint16'), relay.shape_of(call_3480))) # shape=(4, 13, 3)
output = bop_3482
output2 = bop_3485
func_3496 = relay.Function([var_3481,], output)
mod['func_3496'] = func_3496
mod = relay.transform.InferType()(mod)
mutated_mod['func_3496'] = func_3496
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3497 = relay.var("var_3497", dtype = "float64", shape = (4, 13, 3))#candidate|3497|(4, 13, 3)|var|float64
func_3496_call = mutated_mod.get_global_var('func_3496')
call_3498 = func_3496_call(var_3497)
output = call_3498
func_3499 = relay.Function([var_3497], output)
mutated_mod['func_3499'] = func_3499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3029_call = mod.get_global_var('func_3029')
func_3031_call = mutated_mod.get_global_var('func_3031')
call_3558 = relay.TupleGetItem(func_3029_call(), 0)
call_3559 = relay.TupleGetItem(func_3031_call(), 0)
output = relay.Tuple([call_3558,])
output2 = relay.Tuple([call_3559,])
func_3560 = relay.Function([], output)
mod['func_3560'] = func_3560
mod = relay.transform.InferType()(mod)
output = func_3560()
func_3561 = relay.Function([], output)
mutated_mod['func_3561'] = func_3561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_3582 = func_1834_call()
call_3583 = func_1834_call()
output = call_3582
output2 = call_3583
func_3601 = relay.Function([], output)
mod['func_3601'] = func_3601
mod = relay.transform.InferType()(mod)
mutated_mod['func_3601'] = func_3601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3601_call = mutated_mod.get_global_var('func_3601')
call_3602 = func_3601_call()
output = call_3602
func_3603 = relay.Function([], output)
mutated_mod['func_3603'] = func_3603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3424_call = mod.get_global_var('func_3424')
func_3426_call = mutated_mod.get_global_var('func_3426')
call_3619 = relay.TupleGetItem(func_3424_call(), 0)
call_3620 = relay.TupleGetItem(func_3426_call(), 0)
func_470_call = mod.get_global_var('func_470')
func_473_call = mutated_mod.get_global_var('func_473')
const_3626 = relay.const([6.174660,2.870750,3.773407,9.388684,-6.987477,-0.691684,5.009398,7.153724,-2.849852,-7.330418,-1.101819,7.500240,-8.776369,-3.118509,-0.438501,-5.689906,-3.899849,-6.801332,3.379289,-0.548763,-6.888917,4.958544,5.013708,-6.528099,-6.917473,-6.012495,6.742250,9.009976,2.170191,-3.262548,-4.012568,2.494454,-7.675917,-1.467737,1.395685,-5.023157,6.445649,-1.352287,-4.974790,-6.434461,9.557831,9.270504,-2.816550,-5.996692,-7.006855,-4.365071,-8.500798,9.506874,5.695810,-3.135382,-8.164234,-0.328847,-2.030853,2.025502,0.516950,3.219622,-1.640097,-5.479834,-9.907288,-9.025945,2.168914,1.085623,5.502071,-0.444101,-5.543413,9.546548,0.413605,0.958503,-5.562299,1.157672,-2.125252,1.624990,7.471788,-8.862492,-3.565849,4.019138,3.001779,9.163677,8.222823,5.918509,-1.153024,9.967090,-8.190478,8.168091,4.024979,9.653984,-7.630047,-8.166583,-3.036012,7.039165,5.826357,-9.554517,8.054714,7.681661,0.269274,-0.845683,-3.802001,-1.504608,-4.663200,4.423208,-4.903361,-3.410547,4.119027,-6.122678,7.783632,3.488086,-1.908015,6.185077,3.161636,2.701762,2.779734,2.645177,4.271736,-4.654374,1.379000,3.056353,-0.871027,-0.732670,-7.306382,5.005802,-8.379598,-9.807221,-5.442972,-1.116275,8.897834,1.268240,-8.506684,-5.437600,-7.865454,2.560638,-9.161189,0.883736,-3.803941,1.144177,-9.175340,-3.712004,0.279246,-9.557854,-1.281591,9.735829,-9.986511,-9.073907,9.223462,-3.094115,-5.522746,-1.872201,-1.894548,2.545090,7.711695,3.004586,-0.459573,8.549460,-6.412950,3.808084,-1.292422,-8.589448,2.555200,9.428912,3.261298,-9.532556,-1.144604,4.208027,-7.031491,3.056420,3.281739,-5.162141,1.755424,7.158010,6.829525,-4.301524,0.058969,-7.952080,-1.475843,-9.029326,6.215582,7.328268], dtype = "float64")#candidate|3626|(176,)|const|float64
call_3625 = relay.TupleGetItem(func_470_call(relay.reshape(const_3626.astype('float64'), [4, 4, 11]), relay.reshape(const_3626.astype('float64'), [4, 4, 11]), ), 0)
call_3627 = relay.TupleGetItem(func_473_call(relay.reshape(const_3626.astype('float64'), [4, 4, 11]), relay.reshape(const_3626.astype('float64'), [4, 4, 11]), ), 0)
uop_3635 = relay.sin(call_3625.astype('float32')) # shape=(4, 4, 11)
uop_3637 = relay.sin(call_3627.astype('float32')) # shape=(4, 4, 11)
uop_3647 = relay.rsqrt(uop_3635.astype('float64')) # shape=(4, 4, 11)
uop_3649 = relay.rsqrt(uop_3637.astype('float64')) # shape=(4, 4, 11)
bop_3660 = relay.minimum(uop_3647.astype('uint16'), relay.reshape(uop_3635.astype('uint16'), relay.shape_of(uop_3647))) # shape=(4, 4, 11)
bop_3663 = relay.minimum(uop_3649.astype('uint16'), relay.reshape(uop_3637.astype('uint16'), relay.shape_of(uop_3649))) # shape=(4, 4, 11)
func_2534_call = mod.get_global_var('func_2534')
func_2537_call = mutated_mod.get_global_var('func_2537')
call_3670 = relay.TupleGetItem(func_2534_call(relay.reshape(call_3619.astype('int8'), [3, 4, 13]), relay.reshape(call_3619.astype('int8'), [3, 4, 13]), ), 0)
call_3671 = relay.TupleGetItem(func_2537_call(relay.reshape(call_3619.astype('int8'), [3, 4, 13]), relay.reshape(call_3619.astype('int8'), [3, 4, 13]), ), 0)
func_2915_call = mod.get_global_var('func_2915')
func_2919_call = mutated_mod.get_global_var('func_2919')
const_3684 = relay.const([-7.586876,-8.532649,5.453542,-6.334129,-1.342134,-4.035655,-6.182667,4.236117,0.898762,-4.344898,-6.836715,3.100039,-5.412721,3.079884,-8.584171,1.375891,9.448794,-5.125526,2.624058,1.174554,-2.793795,4.843540,5.262769,-8.719494,-0.350475,5.767685,7.805171,-8.988894,-2.215251,8.008337,-6.007137,5.529401,-6.690018,6.609611,-9.123198,3.898051,-7.106814,-7.629566,5.171107,-2.493206,2.053866,-7.679286,-5.610392,9.720439,-4.101043,4.833935,9.479822,-7.187716,-9.249607,-7.789436,-3.526664,-5.345537,-5.918229,0.397909,4.485488,6.355047,6.018550,7.139978,1.724101,-5.243168,8.175647,-1.540796,2.787975,-3.400980,-1.724764,-6.566622,-9.700111,4.904202,6.323808,-5.302230,-1.713147,-8.861996,0.938337,7.692511,-3.989202,-7.291439,4.198003,-9.948505,-2.588979,5.465890,8.249430,0.134799,-3.735928,-8.941050,2.705396,-4.129131,0.724151,9.391785,-7.320370,4.573884,5.889997,-7.423365,-3.241755,8.143092,0.676084,-3.774558,-9.516369,-9.756136,-4.311685,4.036360,7.412572,-1.819793,-1.578892,3.317695,-6.621430,2.045679,-5.713328,4.964847,-2.587946,0.243942,4.694930,8.049634,-5.276006,-1.508266,-9.164572,-7.976251,7.139284,-2.369567,7.029938,-6.117681,-2.634769,1.860241,3.504218,-5.017382,9.351126,0.634035,2.276057,-2.203367,-3.080672,-3.252647,-6.103372,-8.634949,6.002813,0.007937,-3.566106,0.848054,4.699046,8.830283,2.668740,6.675865,-9.441267,7.323133,9.844082,5.533422,-4.461444,-0.468528,-3.479824,-4.691201,-1.461348,-2.602987,7.854218,0.021588,-2.298623,4.464922,-1.732392,-3.350931,2.768235,-7.132778,-0.577763,-8.101400,-0.215171,4.682000,3.981474,-2.688728,-7.486911,-3.586728,-0.779120,-2.675126,-3.812843,-8.030561,-5.648331,9.172873,-1.909225,-8.972040,0.030400,0.801897,-4.907530,2.740354,-7.574642,8.472714,-6.019419,-1.487540,1.520389,-8.646912,-0.227955,9.797774,1.127532,-8.085031,-2.323736,-1.710638,8.649734,8.896531,8.577891,1.156252,8.233340,-3.617688,-8.122578,-3.995847,5.767596,-9.171851,-9.628744,9.172726,-9.290326,1.599687,-2.914647,2.050636,-3.629717,5.685976,5.441219,1.207527,3.400138,-2.819201,7.170377,-3.046905,6.438763,-2.454207,-0.370892,-2.522297,-5.659178,3.845171,4.983634,-3.207805,-3.447130,3.205447,7.311797,-2.585388,-8.637446,-0.842120,2.512442,0.784609,5.980452,-0.299430,5.552288,0.519755,7.536407,-1.217260,8.149290,-7.537565,0.274171,2.454005,-2.982852,5.098090,-1.106410,-4.176485,-9.643497,4.370384,-6.015320,5.666991,-6.366109,5.713449,-6.254283,-6.721647,-3.412784,1.266352,7.774218,-0.949094,-2.617923,-4.363296,-9.415750,-0.970568,-9.610270,-6.008939,-7.035423,-4.956781,-4.619451,-1.036721,-0.546037,-2.409615,9.193434,-5.095557,-5.689125,-5.138820,-6.713649,-4.348798,-9.850479,-8.801199,-6.395500,8.564164,-6.424763,4.931982], dtype = "float32")#candidate|3684|(280,)|const|float32
call_3683 = relay.TupleGetItem(func_2915_call(relay.reshape(const_3684.astype('float32'), [8, 5, 7]), relay.reshape(const_3684.astype('float32'), [8, 5, 7]), ), 1)
call_3685 = relay.TupleGetItem(func_2919_call(relay.reshape(const_3684.astype('float32'), [8, 5, 7]), relay.reshape(const_3684.astype('float32'), [8, 5, 7]), ), 1)
bop_3690 = relay.add(bop_3660.astype('int8'), relay.reshape(uop_3647.astype('int8'), relay.shape_of(bop_3660))) # shape=(4, 4, 11)
bop_3693 = relay.add(bop_3663.astype('int8'), relay.reshape(uop_3649.astype('int8'), relay.shape_of(bop_3663))) # shape=(4, 4, 11)
const_3695 = relay.const([[[7.292059,3.000687,0.902052,-0.183169,6.581860,-0.030187,-4.006353,2.221462,5.073941,6.170260,-3.544002],[-1.210906,-3.493292,-6.935719,-3.716116,3.735375,-1.665481,3.421231,-3.087064,-1.270213,4.578401,-4.231839],[-4.634892,5.164761,3.105395,2.185733,-1.132499,-0.848159,-2.032484,0.267289,-7.533237,-3.108595,0.279212],[-1.699459,-7.164100,-8.087707,-5.664831,8.437183,-7.524642,-0.277344,-3.828436,-9.911138,3.070703,5.586913]],[[2.510422,-8.356191,6.022973,-9.125436,-5.251711,8.275574,-6.614962,-5.048062,-1.830030,9.817181,-8.668265],[-3.339294,9.095923,-6.732820,-1.823561,-7.698338,-7.458626,8.962581,-6.729794,8.462649,1.463884,9.870383],[-0.422890,-0.094377,1.641763,0.397734,0.532766,-4.642152,-6.436067,-5.697876,9.446846,6.105307,5.555974],[4.404721,-9.813416,8.551978,7.321572,0.003316,-5.996247,-5.336138,-8.006171,-8.648352,-2.105071,-8.571062]],[[9.253692,8.680274,-1.758539,-8.345732,8.712003,9.942035,-4.158748,9.785272,0.017990,9.302072,-2.195127],[7.354835,-4.969151,6.082273,0.213972,4.970924,-4.114848,8.343843,3.858584,-3.234276,4.577755,8.348143],[-5.274109,-6.577469,4.566732,-3.409995,9.176051,-9.164782,6.430042,-5.599645,-5.073968,8.317843,-8.657751],[7.291148,-6.288112,9.415654,0.961235,-0.300328,1.753914,4.678922,-2.835136,8.713529,6.888796,2.076604]],[[3.256344,6.228549,-4.315503,-3.573264,3.193576,-2.155925,8.833543,-6.414190,-9.560202,2.130291,2.239916],[9.521767,-7.784889,3.154866,-7.510101,-1.398484,3.560817,9.651246,-1.635320,-8.591019,7.917677,1.970077],[-7.565820,4.688440,-7.912213,6.008987,4.774311,-4.056693,7.302919,-6.870294,-7.353639,2.484013,-6.880235],[0.933408,-7.627346,5.563361,8.743741,-9.388029,-8.641578,-0.810888,-0.897573,-0.958894,-6.725832,0.120327]]], dtype = "float32")#candidate|3695|(4, 4, 11)|const|float32
bop_3696 = relay.right_shift(uop_3635.astype('uint64'), relay.reshape(const_3695.astype('uint64'), relay.shape_of(uop_3635))) # shape=(4, 4, 11)
bop_3699 = relay.right_shift(uop_3637.astype('uint64'), relay.reshape(const_3695.astype('uint64'), relay.shape_of(uop_3637))) # shape=(4, 4, 11)
func_3424_call = mod.get_global_var('func_3424')
func_3426_call = mutated_mod.get_global_var('func_3426')
call_3703 = relay.TupleGetItem(func_3424_call(), 0)
call_3704 = relay.TupleGetItem(func_3426_call(), 0)
func_2646_call = mod.get_global_var('func_2646')
func_2648_call = mutated_mod.get_global_var('func_2648')
call_3713 = relay.TupleGetItem(func_2646_call(), 0)
call_3714 = relay.TupleGetItem(func_2648_call(), 0)
func_2149_call = mod.get_global_var('func_2149')
func_2151_call = mutated_mod.get_global_var('func_2151')
const_3716 = relay.const([5.519742,-5.278940,9.488888,-4.546012,2.243508,-8.004908,-9.965183,4.824886,3.647084,-8.419416,-7.609093,-3.558583,-0.216168,2.258132,-9.354024,0.029271,-7.440719,-3.513671,-7.795744,4.926468,-7.403728,-3.388177,3.506644,-5.085681,9.006565,-2.178387,8.768617,-7.039891,4.945246,-9.514843,2.356708,5.671854,1.888221,0.048782,-3.862509,7.358018,-4.769475,8.102574,-8.059575,5.683823,1.272588,8.084647,-8.605875,-3.983935,9.504829,7.554116,3.671228,-5.546852,7.375535,-1.611118,9.048875,-7.486544,5.235009,2.152447,9.654779,8.544382,-5.992629,2.069054,-1.883438,5.054183,-3.297729,9.429957,4.526462,-3.570072,7.647834,1.553576,3.236240,4.647314,2.896985,-6.567187], dtype = "float32")#candidate|3716|(70,)|const|float32
call_3715 = relay.TupleGetItem(func_2149_call(relay.reshape(const_3716.astype('float32'), [10, 1, 7])), 0)
call_3717 = relay.TupleGetItem(func_2151_call(relay.reshape(const_3716.astype('float32'), [10, 1, 7])), 0)
uop_3725 = relay.sigmoid(uop_3635.astype('float32')) # shape=(4, 4, 11)
uop_3727 = relay.sigmoid(uop_3637.astype('float32')) # shape=(4, 4, 11)
func_1793_call = mod.get_global_var('func_1793')
func_1795_call = mutated_mod.get_global_var('func_1795')
call_3732 = func_1793_call()
call_3733 = func_1793_call()
output = relay.Tuple([call_3619,const_3626,call_3670,call_3683,const_3684,bop_3690,bop_3696,call_3703,call_3713,call_3715,const_3716,uop_3725,call_3732,])
output2 = relay.Tuple([call_3620,const_3626,call_3671,call_3685,const_3684,bop_3693,bop_3699,call_3704,call_3714,call_3717,const_3716,uop_3727,call_3733,])
func_3734 = relay.Function([], output)
mod['func_3734'] = func_3734
mod = relay.transform.InferType()(mod)
output = func_3734()
func_3735 = relay.Function([], output)
mutated_mod['func_3735'] = func_3735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2001_call = mod.get_global_var('func_2001')
func_2003_call = mutated_mod.get_global_var('func_2003')
call_3757 = relay.TupleGetItem(func_2001_call(), 0)
call_3758 = relay.TupleGetItem(func_2003_call(), 0)
func_2515_call = mod.get_global_var('func_2515')
func_2517_call = mutated_mod.get_global_var('func_2517')
call_3761 = relay.TupleGetItem(func_2515_call(), 0)
call_3762 = relay.TupleGetItem(func_2517_call(), 0)
func_2009_call = mod.get_global_var('func_2009')
func_2011_call = mutated_mod.get_global_var('func_2011')
call_3778 = relay.TupleGetItem(func_2009_call(), 0)
call_3779 = relay.TupleGetItem(func_2011_call(), 0)
func_2665_call = mod.get_global_var('func_2665')
func_2668_call = mutated_mod.get_global_var('func_2668')
var_3781 = relay.var("var_3781", dtype = "float64", shape = (72,))#candidate|3781|(72,)|var|float64
var_3782 = relay.var("var_3782", dtype = "float64", shape = (176,))#candidate|3782|(176,)|var|float64
call_3780 = relay.TupleGetItem(func_2665_call(relay.reshape(var_3781.astype('float64'), [3, 4, 6]), relay.reshape(var_3782.astype('float64'), [176,]), ), 1)
call_3783 = relay.TupleGetItem(func_2668_call(relay.reshape(var_3781.astype('float64'), [3, 4, 6]), relay.reshape(var_3782.astype('float64'), [176,]), ), 1)
func_2189_call = mod.get_global_var('func_2189')
func_2191_call = mutated_mod.get_global_var('func_2191')
call_3833 = relay.TupleGetItem(func_2189_call(), 0)
call_3834 = relay.TupleGetItem(func_2191_call(), 0)
var_3841 = relay.var("var_3841", dtype = "float64", shape = (4, 13, 3))#candidate|3841|(4, 13, 3)|var|float64
bop_3842 = relay.floor_mod(call_3778.astype('float32'), relay.reshape(var_3841.astype('float32'), relay.shape_of(call_3778))) # shape=(4, 13, 3)
bop_3845 = relay.floor_mod(call_3779.astype('float32'), relay.reshape(var_3841.astype('float32'), relay.shape_of(call_3779))) # shape=(4, 13, 3)
var_3848 = relay.var("var_3848", dtype = "float64", shape = (72,))#candidate|3848|(72,)|var|float64
bop_3849 = relay.power(var_3781.astype('float32'), relay.reshape(var_3848.astype('float32'), relay.shape_of(var_3781))) # shape=(72,)
func_2750_call = mod.get_global_var('func_2750')
func_2752_call = mutated_mod.get_global_var('func_2752')
call_3856 = relay.TupleGetItem(func_2750_call(), 0)
call_3857 = relay.TupleGetItem(func_2752_call(), 0)
func_2601_call = mod.get_global_var('func_2601')
func_2603_call = mutated_mod.get_global_var('func_2603')
call_3864 = relay.TupleGetItem(func_2601_call(), 2)
call_3865 = relay.TupleGetItem(func_2603_call(), 2)
uop_3866 = relay.cos(call_3757.astype('float64')) # shape=(4, 13, 3)
uop_3868 = relay.cos(call_3758.astype('float64')) # shape=(4, 13, 3)
func_2665_call = mod.get_global_var('func_2665')
func_2668_call = mutated_mod.get_global_var('func_2668')
call_3884 = relay.TupleGetItem(func_2665_call(relay.reshape(var_3848.astype('float64'), [3, 4, 6]), relay.reshape(var_3782.astype('float64'), [176,]), ), 0)
call_3885 = relay.TupleGetItem(func_2668_call(relay.reshape(var_3848.astype('float64'), [3, 4, 6]), relay.reshape(var_3782.astype('float64'), [176,]), ), 0)
output = relay.Tuple([call_3761,call_3780,var_3782,call_3833,bop_3842,bop_3849,call_3856,call_3864,uop_3866,call_3884,])
output2 = relay.Tuple([call_3762,call_3783,var_3782,call_3834,bop_3845,bop_3849,call_3857,call_3865,uop_3868,call_3885,])
func_3889 = relay.Function([var_3781,var_3782,var_3841,var_3848,], output)
mod['func_3889'] = func_3889
mod = relay.transform.InferType()(mod)
var_3890 = relay.var("var_3890", dtype = "float64", shape = (72,))#candidate|3890|(72,)|var|float64
var_3891 = relay.var("var_3891", dtype = "float64", shape = (176,))#candidate|3891|(176,)|var|float64
var_3892 = relay.var("var_3892", dtype = "float64", shape = (4, 13, 3))#candidate|3892|(4, 13, 3)|var|float64
var_3893 = relay.var("var_3893", dtype = "float64", shape = (72,))#candidate|3893|(72,)|var|float64
output = func_3889(var_3890,var_3891,var_3892,var_3893,)
func_3894 = relay.Function([var_3890,var_3891,var_3892,var_3893,], output)
mutated_mod['func_3894'] = func_3894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_3910 = func_1834_call()
call_3911 = func_1834_call()
func_1910_call = mod.get_global_var('func_1910')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_3943 = func_1910_call()
call_3944 = func_1910_call()
func_2339_call = mod.get_global_var('func_2339')
func_2342_call = mutated_mod.get_global_var('func_2342')
const_3951 = relay.const([-7,-3,1,5,-8,8,5,8,2,7,-10,-1,-6,7,-10,-8,3,-9,-9,-4,7,-2,3,-6,-7,10,2,6,-8,5,-1,-6,-4,-9,-9,-1,-4,-1,-5,1,1,-9,-5,-2,-8,-2,10,5,2,9,6,10,-3,8,9,7,-5,5,-3,-4,6,2,-3,-1,1,-10,10,-9,-10,-2,-8,-1,7,-2,4,1,-1,5,-10,-3,-8,7,1,-2,3,-4,-3,4,2,10,2,-6,-6,9,9,6,2,-5,7,6,1,1,-4,6,2,1,-9,7,10,-1,7,-6,1,2,1,10,-9,-8,7,-8,-9,-3,6,6,-7,6,-6,-10,6,-5,-1,10,5,2,1,-10,-9,-1,-4,-2,3,4,-2,6,-8,6,-7,9,6,7,1,10,-2,-4,5,7,4,9,6,4,10,5,-10,-3,-8,-4,8,9,-4,-6,9,-10,7,-8,7,-6,6,4,8,10,8,2,-9,-3,4,-3,5,5,-3,4,5,-6,-3,-6,-10,4,-2,1,7,-4,5,3,1,3,-9,3,-9,6,9,-3,-8,-6,-3,-2,1,3], dtype = "int8")#candidate|3951|(216,)|const|int8
call_3950 = func_2339_call(relay.reshape(const_3951.astype('int8'), [6, 12, 3]), relay.reshape(const_3951.astype('int8'), [6, 12, 3]), )
call_3952 = func_2339_call(relay.reshape(const_3951.astype('int8'), [6, 12, 3]), relay.reshape(const_3951.astype('int8'), [6, 12, 3]), )
func_2750_call = mod.get_global_var('func_2750')
func_2752_call = mutated_mod.get_global_var('func_2752')
call_3953 = relay.TupleGetItem(func_2750_call(), 0)
call_3954 = relay.TupleGetItem(func_2752_call(), 0)
func_1910_call = mod.get_global_var('func_1910')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_3955 = func_1910_call()
call_3956 = func_1910_call()
output = relay.Tuple([call_3910,call_3943,call_3950,const_3951,call_3953,call_3955,])
output2 = relay.Tuple([call_3911,call_3944,call_3952,const_3951,call_3954,call_3956,])
func_3958 = relay.Function([], output)
mod['func_3958'] = func_3958
mod = relay.transform.InferType()(mod)
output = func_3958()
func_3959 = relay.Function([], output)
mutated_mod['func_3959'] = func_3959
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3972 = relay.var("var_3972", dtype = "float64", shape = (6, 1, 14))#candidate|3972|(6, 1, 14)|var|float64
uop_3973 = relay.asin(var_3972.astype('float64')) # shape=(6, 1, 14)
output = relay.Tuple([uop_3973,])
output2 = relay.Tuple([uop_3973,])
func_3975 = relay.Function([var_3972,], output)
mod['func_3975'] = func_3975
mod = relay.transform.InferType()(mod)
mutated_mod['func_3975'] = func_3975
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3976 = relay.var("var_3976", dtype = "float64", shape = (6, 1, 14))#candidate|3976|(6, 1, 14)|var|float64
func_3975_call = mutated_mod.get_global_var('func_3975')
call_3977 = func_3975_call(var_3976)
output = call_3977
func_3978 = relay.Function([var_3976], output)
mutated_mod['func_3978'] = func_3978
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3985 = relay.var("var_3985", dtype = "float64", shape = (10, 3, 6))#candidate|3985|(10, 3, 6)|var|float64
uop_3986 = relay.sinh(var_3985.astype('float64')) # shape=(10, 3, 6)
func_2601_call = mod.get_global_var('func_2601')
func_2603_call = mutated_mod.get_global_var('func_2603')
call_3988 = relay.TupleGetItem(func_2601_call(), 2)
call_3989 = relay.TupleGetItem(func_2603_call(), 2)
output = relay.Tuple([uop_3986,call_3988,])
output2 = relay.Tuple([uop_3986,call_3989,])
func_4003 = relay.Function([var_3985,], output)
mod['func_4003'] = func_4003
mod = relay.transform.InferType()(mod)
mutated_mod['func_4003'] = func_4003
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4004 = relay.var("var_4004", dtype = "float64", shape = (10, 3, 6))#candidate|4004|(10, 3, 6)|var|float64
func_4003_call = mutated_mod.get_global_var('func_4003')
call_4005 = func_4003_call(var_4004)
output = call_4005
func_4006 = relay.Function([var_4004], output)
mutated_mod['func_4006'] = func_4006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2389_call = mod.get_global_var('func_2389')
func_2390_call = mutated_mod.get_global_var('func_2390')
call_4040 = relay.TupleGetItem(func_2389_call(), 0)
call_4041 = relay.TupleGetItem(func_2390_call(), 0)
output = call_4040
output2 = call_4041
func_4050 = relay.Function([], output)
mod['func_4050'] = func_4050
mod = relay.transform.InferType()(mod)
mutated_mod['func_4050'] = func_4050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4050_call = mutated_mod.get_global_var('func_4050')
call_4051 = func_4050_call()
output = call_4051
func_4052 = relay.Function([], output)
mutated_mod['func_4052'] = func_4052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3191_call = mod.get_global_var('func_3191')
func_3193_call = mutated_mod.get_global_var('func_3193')
call_4062 = func_3191_call()
call_4063 = func_3191_call()
output = call_4062
output2 = call_4063
func_4075 = relay.Function([], output)
mod['func_4075'] = func_4075
mod = relay.transform.InferType()(mod)
mutated_mod['func_4075'] = func_4075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4075_call = mutated_mod.get_global_var('func_4075')
call_4076 = func_4075_call()
output = call_4076
func_4077 = relay.Function([], output)
mutated_mod['func_4077'] = func_4077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2189_call = mod.get_global_var('func_2189')
func_2191_call = mutated_mod.get_global_var('func_2191')
call_4078 = relay.TupleGetItem(func_2189_call(), 1)
call_4079 = relay.TupleGetItem(func_2191_call(), 1)
uop_4082 = relay.cosh(call_4078.astype('float64')) # shape=(4, 13, 3)
uop_4084 = relay.cosh(call_4079.astype('float64')) # shape=(4, 13, 3)
output = relay.Tuple([uop_4082,])
output2 = relay.Tuple([uop_4084,])
func_4086 = relay.Function([], output)
mod['func_4086'] = func_4086
mod = relay.transform.InferType()(mod)
output = func_4086()
func_4087 = relay.Function([], output)
mutated_mod['func_4087'] = func_4087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4075_call = mod.get_global_var('func_4075')
func_4077_call = mutated_mod.get_global_var('func_4077')
call_4091 = func_4075_call()
call_4092 = func_4075_call()
var_4136 = relay.var("var_4136", dtype = "float64", shape = (4, 13, 3))#candidate|4136|(4, 13, 3)|var|float64
bop_4137 = relay.minimum(call_4091.astype('uint32'), relay.reshape(var_4136.astype('uint32'), relay.shape_of(call_4091))) # shape=(4, 13, 3)
bop_4140 = relay.minimum(call_4092.astype('uint32'), relay.reshape(var_4136.astype('uint32'), relay.shape_of(call_4092))) # shape=(4, 13, 3)
output = bop_4137
output2 = bop_4140
func_4146 = relay.Function([var_4136,], output)
mod['func_4146'] = func_4146
mod = relay.transform.InferType()(mod)
var_4147 = relay.var("var_4147", dtype = "float64", shape = (4, 13, 3))#candidate|4147|(4, 13, 3)|var|float64
output = func_4146(var_4147)
func_4148 = relay.Function([var_4147], output)
mutated_mod['func_4148'] = func_4148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3303_call = mod.get_global_var('func_3303')
func_3304_call = mutated_mod.get_global_var('func_3304')
call_4173 = func_3303_call()
call_4174 = func_3303_call()
output = relay.Tuple([call_4173,])
output2 = relay.Tuple([call_4174,])
func_4175 = relay.Function([], output)
mod['func_4175'] = func_4175
mod = relay.transform.InferType()(mod)
mutated_mod['func_4175'] = func_4175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4175_call = mutated_mod.get_global_var('func_4175')
call_4176 = func_4175_call()
output = call_4176
func_4177 = relay.Function([], output)
mutated_mod['func_4177'] = func_4177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4178 = relay.var("var_4178", dtype = "float64", shape = (14, 11, 11))#candidate|4178|(14, 11, 11)|var|float64
var_4179 = relay.var("var_4179", dtype = "float64", shape = (14, 11, 11))#candidate|4179|(14, 11, 11)|var|float64
bop_4180 = relay.mod(var_4178.astype('float64'), relay.reshape(var_4179.astype('float64'), relay.shape_of(var_4178))) # shape=(14, 11, 11)
bop_4184 = relay.add(var_4178.astype('int64'), relay.reshape(bop_4180.astype('int64'), relay.shape_of(var_4178))) # shape=(14, 11, 11)
bop_4187 = relay.logical_and(bop_4180.astype('bool'), relay.reshape(var_4179.astype('bool'), relay.shape_of(bop_4180))) # shape=(14, 11, 11)
output = relay.Tuple([bop_4184,bop_4187,])
output2 = relay.Tuple([bop_4184,bop_4187,])
func_4197 = relay.Function([var_4178,var_4179,], output)
mod['func_4197'] = func_4197
mod = relay.transform.InferType()(mod)
mutated_mod['func_4197'] = func_4197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4197_call = mutated_mod.get_global_var('func_4197')
var_4199 = relay.var("var_4199", dtype = "float64", shape = (14, 11, 11))#candidate|4199|(14, 11, 11)|var|float64
var_4200 = relay.var("var_4200", dtype = "float64", shape = (14, 11, 11))#candidate|4200|(14, 11, 11)|var|float64
call_4198 = func_4197_call(var_4199,var_4200,)
output = call_4198
func_4201 = relay.Function([var_4199,var_4200,], output)
mutated_mod['func_4201'] = func_4201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_4213 = func_1834_call()
call_4214 = func_1834_call()
func_4050_call = mod.get_global_var('func_4050')
func_4052_call = mutated_mod.get_global_var('func_4052')
call_4215 = func_4050_call()
call_4216 = func_4050_call()
func_3221_call = mod.get_global_var('func_3221')
func_3223_call = mutated_mod.get_global_var('func_3223')
call_4217 = func_3221_call(relay.reshape(call_4213.astype('float64'), [4, 13, 3]))
call_4218 = func_3221_call(relay.reshape(call_4213.astype('float64'), [4, 13, 3]))
func_2275_call = mod.get_global_var('func_2275')
func_2277_call = mutated_mod.get_global_var('func_2277')
call_4219 = relay.TupleGetItem(func_2275_call(), 0)
call_4220 = relay.TupleGetItem(func_2277_call(), 0)
func_1910_call = mod.get_global_var('func_1910')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_4229 = func_1910_call()
call_4230 = func_1910_call()
func_4086_call = mod.get_global_var('func_4086')
func_4087_call = mutated_mod.get_global_var('func_4087')
call_4236 = relay.TupleGetItem(func_4086_call(), 0)
call_4237 = relay.TupleGetItem(func_4087_call(), 0)
output = relay.Tuple([call_4213,call_4215,call_4217,call_4219,call_4229,call_4236,])
output2 = relay.Tuple([call_4214,call_4216,call_4218,call_4220,call_4230,call_4237,])
func_4253 = relay.Function([], output)
mod['func_4253'] = func_4253
mod = relay.transform.InferType()(mod)
mutated_mod['func_4253'] = func_4253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4253_call = mutated_mod.get_global_var('func_4253')
call_4254 = func_4253_call()
output = call_4254
func_4255 = relay.Function([], output)
mutated_mod['func_4255'] = func_4255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2750_call = mod.get_global_var('func_2750')
func_2752_call = mutated_mod.get_global_var('func_2752')
call_4259 = relay.TupleGetItem(func_2750_call(), 0)
call_4260 = relay.TupleGetItem(func_2752_call(), 0)
output = relay.Tuple([call_4259,])
output2 = relay.Tuple([call_4260,])
func_4285 = relay.Function([], output)
mod['func_4285'] = func_4285
mod = relay.transform.InferType()(mod)
mutated_mod['func_4285'] = func_4285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4285_call = mutated_mod.get_global_var('func_4285')
call_4286 = func_4285_call()
output = call_4286
func_4287 = relay.Function([], output)
mutated_mod['func_4287'] = func_4287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2035_call = mod.get_global_var('func_2035')
func_2036_call = mutated_mod.get_global_var('func_2036')
call_4364 = func_2035_call()
call_4365 = func_2035_call()
func_2853_call = mod.get_global_var('func_2853')
func_2856_call = mutated_mod.get_global_var('func_2856')
const_4373 = relay.const([7.753936,-1.852958,7.889241,1.729651,-6.809180,9.960139,2.674569,-7.645929,7.227499,9.345578,-0.677260,6.484182,5.913359,6.966656,2.044757,-8.897607,9.013588,3.534349,0.842676,-0.885725,8.412140,2.061636,-5.472531,2.647502,7.190274,-1.027553,-3.486762,7.610999,-8.893718,-8.556471,-7.276318,5.058141,7.750185,-7.388335,3.433087,-5.409253,1.242816,-8.323557,-0.838056,3.868462,-4.983969,9.392202,5.712229,-8.979318,5.548951,-4.766442,4.355056,2.244532,-8.429206,3.006193,-7.341983,-6.784685,-3.755070,-2.598364,3.110713,-4.904428,5.800663,-7.481278,-0.734437,-1.547339,5.966735,-3.734137,-1.398649,3.193423,2.894357,0.927681,0.469448,3.458222,-6.831033,-1.511762,4.092448,1.029584,-5.531456,-8.994704,-5.150612,-5.146535,3.335822,-1.777064,-8.387779,-2.493728,-6.413982,1.817125,-1.166358,0.816430,-3.695631,-4.568344,-5.706811,-2.098888,1.854263,-7.240784,-4.629818,2.029632,2.489517,8.692359,6.527573,6.073543,1.629181,7.159397,-5.007676,-5.684107,-4.035233,-1.330378,-4.680809,2.959369,8.349868,0.868653,-6.706074,2.883081,-7.007218,5.336476,7.215763,-8.085661,-8.996596,-4.564089,-6.226531,5.587601,6.023643,-8.887197,1.304353,1.320565,7.567749,-0.671190,0.440744,4.230109,-0.569598,8.277180,0.451368,9.874587,-2.880964,-8.079619,-8.324868,3.448274,-5.533840,-5.073304,-0.005161,-0.439509,-5.844035,7.454799,7.786967,-6.591045,-1.508844,3.571502,4.983886,1.987101,-2.004607,-0.679353,4.833592,-0.593197,3.559785,3.369198,-4.136607,0.753673,-7.905922,-6.586849,8.800779,-1.783254,-3.198082,-7.588010,-2.285249,2.683111,9.933950,2.760144,-9.030037,-3.079806,-9.146655,1.212651,-8.139063,-7.112338,2.305535,-9.531060,7.030070,-3.738472,-4.739082,0.827823,-3.650959,0.445575,-6.391524,0.738092,-5.211960,7.344640,3.126868,1.017572,2.918553,0.167963,-1.641227,-3.205148,-9.596008,4.091381,7.545877,1.558095,-3.709716,5.693686,2.342226,3.876136,9.088062,1.804198,1.104376,-6.542633,-4.155253,0.982488,1.725588,-1.264586,2.584350,-7.213054,-4.639169,-2.617144,-8.701450,4.821578,-9.023138,9.250157,7.431436,3.639658,3.909911,-9.961630,0.644188,-2.736373,6.162947,-3.476121,-1.774270,4.834243,-0.984225,7.563622,8.772695,-0.485020,9.498940,9.782617,-3.795714,9.657589,-7.056318,3.574080,-8.620819,-0.669079,-4.556057,-2.718408,3.351869,1.673885,3.058474,-2.488235,-7.906662,9.786192,-5.838690,-1.205941,1.131555,-0.700096,3.606208,5.572561,6.457313,4.335974,-0.257422,2.022618,1.502192,5.483051,9.268190,-5.994140,-1.240195,-1.754713,-2.568171,-5.813143,-9.889592,-1.005609,-8.017291,4.482005,5.302119,-7.914247,-2.566385,-3.226031,-3.462228,0.298954,3.591812,4.071820,7.088420,4.535511,8.985747,2.738329,-0.792080,1.173414,7.833668,7.567361,-8.454114,-9.126341,3.637106,-4.616623,-7.709802,0.156969,2.285192,3.379760,-8.374807,9.639026,-7.212995,-0.291123,-9.656775,-9.503593,-5.668698,-1.018348,0.742516,-0.135401,0.471571,-5.165691,-9.712271,-2.437955,4.246673,-4.806720,-3.015979,8.440182,-5.833265,3.401993,6.486974,-6.753500,5.230261,-6.996953,0.568865,2.154270,-5.276876,-4.619969,-5.517824,-6.351563,-4.007876,6.662877,-6.226054,-2.157243,-0.637329,3.060028,3.359382,-8.242193,5.070157,7.222854,6.387726,6.039358,-7.256484,-4.813210,-5.367092,-5.361310,2.958784,2.129370,-6.536776,-5.426894,-9.822884,6.900073,3.439616,-8.399286,-2.843522,3.847454,2.835530,9.767486,-3.878354,-7.195265,7.052625,2.446492,-4.171932,-1.550264,-4.999078,-0.092954,7.280129,-0.846927,5.338067,2.469284,-7.669227,7.771846,6.353313,-7.242507,-8.531330,2.792881,3.632582,-2.653831,6.622367,7.887194,3.149638,-0.149035,4.712288,9.766569,-5.627843,-7.510499,2.280501,-5.597033,9.186420,-4.839507,5.253885,9.527290,-5.099770,-2.926462,-5.078172,-1.599017,1.131893,-3.312358,4.507348,6.070516,-9.326175,6.522838,5.055048,3.600707,-3.581070,-8.453174,1.501587,-7.841287,2.732820,0.893975,-6.881787,3.435608,4.392029,-2.547470,6.059288,-5.995036,-0.058718,0.634251,6.734493,-9.527399,-8.210132,3.979891,-4.636436,-9.359760,-8.621465,9.062901,3.318518,9.225587,8.945892,1.213183,2.639232,-0.960734,7.632366,-4.617634,-4.701993,-0.125816,5.836828,-4.459466,-4.952431,-6.077023,6.835125,8.232591,-1.205484,4.460457,8.602852,3.829612,-7.371097,-3.220470,9.456991,-3.307632,3.365913,5.281116,-6.400469,-9.449775,-0.002409,8.927803,-4.231757,-8.795362,8.240165,-0.465257,-4.304374,-2.709086,-5.732710,2.796377,1.783380,0.668539,-5.494252,6.722952,4.950301,6.723583,-4.402139,1.914017,-9.236726,-0.309941,8.908702,-7.431021,-4.069063,-3.595160,8.244501,-7.735636,3.014390,5.305864,-3.046620,-2.752380,-1.309245,2.662330,-7.512441,5.048266,-1.666501,4.346348,9.522601,-1.240502,-4.240428,-4.706983,-4.285591,-9.088571,-7.810760,1.953607,-0.328505,-0.338644,-0.708063,-4.636276,-3.390758,7.055404,9.176663,-5.495917,-9.351569,-9.825006,3.676745,-3.633979,6.479750,1.835913,-6.703369,4.675781,-4.360723,2.999478,8.810220,-9.405504,0.193715,7.406664,-8.112864,8.315376,-0.308359,7.279701,-3.160264,6.791762,-6.410965,-1.589303,3.430319,8.464117,9.410980,-1.677985,-0.548222,3.301359,-5.309679,-9.087251,-5.922783,0.050226,7.047351,9.168254,-5.125708,-9.630569,7.194955,0.817117,-0.108169,9.445559,2.935789,-1.396261,-5.460598,-3.414468,-9.633857,3.796218,-7.549295,9.777583,5.507899,-2.644365,0.406375,-9.951737,4.934435,-8.839472,-7.620916,0.350580,3.009299,-8.398439,4.546172,3.224082,4.776294,4.728584,7.673984,-6.627779,8.076706,0.461123,2.063238,8.661182,3.010887,-2.765996,7.724508,-3.274536,3.258951,-1.052448,3.249126,6.324742,-5.644121,-8.199789,0.303171,-2.477740,5.189809,-9.442594,6.114490,7.174345,6.332080,8.305121,-3.483143,9.204130,-7.643693,-6.287320,5.201531,-6.011062,-1.596301,-2.870981,0.975308,-7.493053,-4.745775,4.035650,6.220626,-8.318068,-4.975869,2.055661,3.569789,4.497215,7.617317,7.936835,2.089147,-1.226595,7.617510,2.026980,-8.589115,2.433235,-1.627163,-1.984909,-7.187465,-7.373284,-5.465702,6.526567,1.298452,0.646570,-3.709023,3.003341,6.271309,-7.846082,-5.155100,3.510280,8.779220,5.940429,-9.683850,5.017378,7.329257,9.206979,-1.056661,6.240401,6.568224,-9.128446,-2.464545,1.783811,4.150290,-4.934397,-9.067111,-5.029791,-7.884060,9.008164,-8.779816,9.315061,3.227393,5.041084,0.713550,4.525332,-4.676708,9.032004,5.368119,-8.648296,-3.084035,3.198490,-0.843916,-5.272716,8.429030,0.645664,8.229192,7.113398,-5.238175,-2.498536,-9.320878,-5.491301,4.159290,3.308140,5.524793,3.364883,-1.233240,-5.997664,9.487691,6.887326,-9.707395,-5.929566,-9.714545,-9.400094,-7.735331,-6.778081,-7.899777,1.672412,-9.816848,4.421939,-7.794080,4.593223,8.432224,-6.330638,2.634303,5.267537,-6.520188,4.642879,-5.018616,9.136645,-2.719969,3.859925,8.551618,-0.482200,5.529119,7.094169,-7.962985,-0.668116,-0.158654,-4.462244,-4.100281,7.683377,6.008185,3.603240,1.341784,8.766057,4.730319,-0.669604,7.904047,-8.250152,-5.907531,3.403755,4.355754,-2.921935,-3.247355,6.889776,5.000746,9.962600,8.232286,-4.721401,-1.179371,-2.827998,-7.395978,-2.600100,8.384001,-2.260829,-0.548629,-0.347054,1.820274,7.240333,-0.269452,-4.810066,9.135799,-6.774656,3.285689,8.569420,-6.732959,0.523427,8.099265,5.574775,-5.178849,-6.081452,0.680996,-1.344457,-3.820390,-3.649524,-0.841685,-0.539025,-4.738799,-1.289192,9.146296,7.963542,6.179215,-0.983975,-5.963196,9.037782,2.093417,8.944128,0.815328,0.798661,3.410608,-6.850401,-7.991955,-0.281167,5.222232,-4.104014,-7.410457,5.194482,-9.551672,-0.220908,8.353267,-6.084606,-3.665238,1.475706,1.138918,4.667737,-1.048783,7.385204,-4.636924,0.896459,-4.622407,-9.711732,-2.267079,9.685219,5.232724,0.847215,2.748960,4.163221,-2.033574,8.743744,2.936595,-1.147801,-8.033139,-7.776299,6.504013,1.565521,-3.902356,4.828330,9.415074,6.517276,-4.232437,8.820175,-4.759567,5.813209,1.781705,5.368505,1.748943,-4.336880,0.426596,-0.268288,-3.203054,-7.055661,2.171390,2.081046,-1.121258,5.166365,-6.896018,1.601802,1.781867,0.288335,3.484868,1.959289,-9.321336,8.396124,1.653392,7.405785,9.362394,-2.064420,8.298568,7.137283,-4.341670,-2.584499,3.674597,-5.712875,7.573577,7.324911,-4.884301,9.559567,-9.252828,-8.549153,0.896987,5.694114,0.379482,3.974735,-1.862901,4.842880,-6.083770,0.138236,7.855218,-4.813491,9.444632,9.427700,7.546136,-4.387463,1.729329,7.046331,-2.709655,9.529292,-5.783372,-4.773674,1.847887,0.208632,-3.272035,1.566999,-8.026395,-1.810181,6.683002,8.702225,-5.018560,-5.195563,-6.892434,-7.966792,4.758632,8.588550,8.203878,-7.562799,3.704661,-6.492316,-3.682319,3.467929,3.392167,-7.234797,4.815271,4.715348,8.252406,-4.110020,2.279627,5.957150,-9.030834,-0.413605,-4.715303,4.498444,2.784461,7.168248,3.202247,-6.686578,-6.259547,-3.210357,6.766932,-3.293127,5.633069,-0.424957,4.955210,1.655645,-0.434994,1.525687,-7.199667,-5.214078,-8.560085,3.161643,-0.970249,9.662496,-8.848651,5.585656,9.787104,3.922346,-6.560694,-9.516967,0.699450,2.183896,9.783922,-4.273511,7.867458,0.449989,2.473293,-9.970902,3.029606,-3.084562,6.939143,2.615071,4.193335,8.707649,-4.498651,-5.072505,-3.652815,-9.475565,-8.091547,1.318165,7.969073,-8.307964,-7.489683,2.816088,-9.528095,4.702550,4.896383,-2.252863,1.475024,-4.198772,2.802476,9.340841,-8.434426,-2.055003,0.327632,9.861146,-0.244758,5.217135,-7.669405,-0.427497,-0.852146,-2.770863,-0.882946,3.836498,-4.808638,-0.155424,-8.454221,2.211370,3.963234,9.052787,-5.566916,0.276360,-7.870143,0.504849,9.328921,1.590174,2.986282,8.117929,7.808240,-8.991927,-9.448785,4.723640,-1.813799,-1.973131,-9.231361,-1.569988,-9.133311,-5.168578,-8.527599,5.715969,2.393085,-4.319488,-9.904057,2.896976,-7.802646,9.238157,-0.737964,9.545510,-8.197659,-7.072448,8.599356,8.362030,-7.549989,6.290284,6.306867,0.715966,5.991491,8.876055,6.726215,7.733117,-8.411049,5.583912,-4.758139,-0.121600,-3.496654,8.351620,3.553661,5.232627,-3.097602,9.376801,2.617638,3.302534,-0.967161,-6.719017,5.779581,4.062572,-5.823416,-3.768741,6.661203,5.402921,5.867981,8.287709,1.430350,-9.219456,7.752835,2.591672,-1.107784,-4.205520,-4.639557,0.387491,-4.551754,7.203080,9.689588,7.719230,-5.497227,-4.723208,-6.732472,3.908337,-7.445565,6.761923,0.442627,-8.601392,5.363139,-3.517391,9.547799,1.518311,-5.841228,-3.155444,-4.833900,-8.527933,9.079980,-1.559103,-0.216361,4.735443,-7.346258,9.499063,-7.087191,1.140937,-9.267787,7.323373,8.522965,9.488693,0.047401,1.053356,-1.189262,9.842677,-5.757778,9.373890,3.615698,8.320408,4.163414,8.901702,-5.482079,-7.418631,-3.397807,-0.523334,-9.953580,4.499899,-9.294409,-4.143993,-0.418919,-3.536402,6.657487,4.180979,-6.695291,-0.101966,0.346978,7.723791,7.840615,-4.329644,1.104248,3.859514,2.829499,-8.528158,-1.344778,-8.899186,-8.092057,1.028370,-0.757121,-1.955758,-6.681748,-0.731665,-1.768678,3.553565,6.398664,2.476931,3.561897,8.977710,5.742577,-4.106660,-9.551936,-9.335368,0.274237,-1.437974,-8.780932,-6.223543,-6.559527,5.238125,7.099683,-6.431058,-0.069113,3.825341,-7.480509,-9.994031,-6.923678,7.793099,0.129998,4.906962,-5.189765,-9.052367,-7.855129,8.926101,-5.920877,1.993436,3.408808,-6.944637,2.664250,3.942971,-4.278691,6.113454,-4.037072,7.067896,-3.036076,-4.240827,6.017542,-8.250791,-3.415438,-8.328439,-3.547717,-4.731235,9.435875,6.892711,-9.069639,-8.911204,3.774929,-8.786005,2.008607,3.520425,-0.320961,-9.934487,7.992594,-7.404322,-4.055550,-7.626740,-4.224914,-2.226230,1.000113,3.029565,1.086179,1.566007,8.946154,-0.153246,8.214927,4.339196,-2.105380,4.146457,-0.379904,1.064957,-8.000490,3.295256,-0.615383,-1.684681,9.908816,3.545818,-8.495987,6.403616,-0.900701,-3.959043,-0.885406,-1.940235,0.841662,-1.453099,0.836528,-9.803178,3.760770,-4.329969,6.567658,8.855148,-8.807254,2.554837,5.288875,9.218502,7.141552,-9.032328,0.616327,-4.987601,-8.146058,-1.995622,-5.012664,-7.301867,-5.621310,7.477386,7.697775,-5.155025,3.012730,-9.037942,6.576920,1.508175,2.542129,-8.088044,-3.896304,2.298920,9.163773,-8.339312,-3.692587,5.102536,7.770602,8.337103,0.529260,7.476376,9.786425,-1.254561,3.861746,1.086594,8.114698,7.500108,-5.597941,-7.420683,-2.667692,3.708915,7.209993,5.990362,8.161138,-7.142787,-2.422693,-9.493619,5.171916,-9.586265,-6.656181,-5.088288,1.179044,3.032778,-6.755434,6.865250,-8.150179,-0.341360,3.087324,-2.337398,-6.445346,-4.297082,-8.363836,-1.293064,0.877437,-3.745584,9.707336,8.257053,-6.369517,-8.370233,-2.645496,2.795565,5.428055,1.099652,3.305068,8.243588,-2.064101,9.605669,-1.424511,-7.459078,-9.838392,5.516517,9.715315,8.416150,5.497192,2.523253,9.442183,-3.430846,-2.786055,-3.307507,-4.037529,6.537581,1.228522,1.209154,-7.901695,3.040195,8.478199,-6.126908,1.784813,-4.618142,-2.219902,-3.093944,1.617281,-7.140909,-7.701100,1.280223,-6.373730,9.778869,2.547793,-5.415081,1.507335,4.333191,-5.006609,4.506146,6.541913,0.959990,5.560395,7.133390,-7.214208,-3.464822,-7.177277,1.607507,-4.665950,-1.441140,-1.859689,-4.872139,-7.415752,-3.822019,6.994671,-4.285457,7.405066,-7.473730,-8.195457,8.933472,2.908206,1.902289,-2.135278,2.998060,-2.522394,-7.969224,-0.895895,-1.166095,-8.462275,0.029036,-6.640146,-7.776354,0.942085,1.711141,5.776625,8.215299,-9.345163,-2.671910,1.992046,-9.304752,-7.644511,-3.943184,2.335020,6.807954,2.595229,5.112626,1.935105,-9.320050,6.187120,-4.467054,-7.499171,1.825660,-7.316149,8.273961,2.941908,6.945430,9.901004,-6.537576,-9.692070,-0.332466,7.447257,-8.173412,-9.908086,2.774091,-9.383809,-3.035553,2.417004,1.711215,5.712999,-9.641312,-6.672535,-1.033353,7.164674,-1.935413,4.211766,-4.621978,2.784909,5.251214,5.090778,6.584974,-6.929981,-8.486941,9.904368,3.081169,4.232776,-2.819729,-0.341211,4.524542,1.402656,1.146171,-7.356102,3.276899,-3.368902,0.645349,-1.194554,6.692603,-5.692840,-4.079730,-2.953464,9.695632,1.886319,6.826639,-9.689284,-9.757010,6.043069,-4.236014,4.620604,1.850426,-8.825335,3.103844,0.756429,0.228754,-1.033956,3.265062,-1.776763,-1.328608,-4.783224,6.958141,-7.989284,4.876593,8.293248,-7.900280,6.024872,7.752491,-6.230775,-2.322647,0.346586,-7.251409,-2.866945,-1.374424,-4.145966,-4.706338,0.663716,7.656864,2.059355,9.943742,5.101887,8.788081,4.916268,-5.793172,5.494428,3.540057,1.941267,4.979411,5.144524,-7.973459,-5.805195,8.189665,-7.621191,-3.041324,4.546038,-5.173975,7.335652,2.130188,-1.774954,-2.795657,2.416708,9.654727,4.834257,-2.321210,-5.607165,-6.284163,1.134522,-5.904636,7.617367,-5.051676,-6.742980,7.537351,-6.287393,-8.447576,-5.878953,9.694011,-9.882155,-9.267980,2.356641,5.162130,6.672931,-3.452577,1.759127,-1.971881,0.064903,8.133490,-5.612404,4.457977,4.557988,4.855779,5.167728,7.179610,1.740129,8.200862,-2.160304,2.543626,0.832310,9.350291,-1.189895,5.171213,-6.457269,-0.358165,9.085287,3.843806,2.472871,-1.098245,7.365050,4.625873,-2.017310,7.712007,8.867466,-7.512938,9.806825,7.744724,-8.980801,3.552288,2.444844,4.009065,-1.576597,6.793599,6.079347,-7.631917,-0.957512,-4.860187,-7.621287,7.914660,-4.894561,-4.048441,9.044708,4.740309,-0.174839,-3.556403,-1.448263,-9.131711,5.706253,1.890918,-5.791443,0.561688,4.330194,0.675057,-2.871974,5.087266,-4.073839,-9.549413,8.339759,8.357050,-3.579256,2.124312,6.992533,6.184778,7.104387,-2.045819,-3.765425,-3.491334,8.898548,-8.283137,7.373855,-8.727805,1.179574,1.990510,-0.060519,8.538801,2.286618,-2.546502,-8.845060,8.130559,-3.023886,9.662100,2.636306,-3.945593,9.558694,-8.987345,-1.509587,9.541518,5.486527,-1.252934,2.301841,4.608119,-4.613180,-0.413146,2.515998,-0.169439,0.938320,3.490897,-5.676849,0.987864,-4.099510,-8.617809,-5.985456,-0.463181,-7.438399,5.471923,-7.617556,-5.487718,-3.898629,-8.590220,-7.271821,0.659517,-0.393233,3.546942,-5.880749,5.247981,-3.217401,5.720380,1.513572,3.375897,-3.665589,8.159951,3.503276,1.044629,-0.590919,3.714646,4.071406,-5.367815,9.466827,-3.162855,-8.215584,-1.963301,5.165348,0.136859,-9.357535,-6.579677,-9.189650,9.707453,-2.850613,1.107702,-7.102407,7.040713,-0.618781,-4.860146,4.365876,1.215898,-8.329211,1.654545,-7.583466,-6.818315,0.125965,7.541630,-0.808252,9.899879,-2.685132,-9.532869,3.321815,-8.007522,5.923789,-4.711981,3.883658,9.347571,7.099556,5.445682,9.399656,-5.051458,-8.915956,-7.550761,7.722958,2.984596,2.081330,-7.113578,-2.763732,-3.560757,8.100295,-8.651552,-6.979874,-1.982508,-7.950455,4.431221,5.980862,-8.189860,-8.697664,4.245278,-3.811025,0.674473,-0.965030,8.773539,-8.513289,-8.910909,-0.879052,-3.234555,-5.902140,-5.946840,-4.409751,5.587581,-8.176140,6.366120,-4.519254,-7.409511,-1.304633,-0.085358,2.264716,3.686356,3.218579,-0.360829,-1.366619,7.464043,3.249331,-2.747997,7.301197,-9.930269,4.066182,-8.208483,-2.018577,3.138880,-3.512529,2.359681,0.800534,3.240060,-8.636944,-8.809232,-9.457418,-9.823917,6.942568,3.120078,-7.106102,-7.750290,-7.341423,4.489722,9.370442,9.355805,8.863850,-9.444826,6.448536,7.463537,3.866763,-9.272724,6.013361,5.922667,1.662389,-6.756423,-6.414480,-4.470969,7.281682,7.799820,-9.868317,0.578638,0.741642,-2.699374,3.460540,4.602976,7.625574,4.886990,-5.585296,8.920551,7.586645,5.036053,7.616084,-6.792355,6.199710,5.424485,-4.755855,3.552191,-7.841859,-1.852187,-5.755312,-3.753863,-6.204173,-8.149387,4.114125,-0.490906,1.669189,-5.237952,5.200956,-2.606180,1.032288,-2.634805,-9.788951,4.124311,6.223800,-5.940072,0.553062,2.059957,-2.614834,-9.852554,-1.946527,5.156885,-8.099107,-1.954225,-6.708167,4.772010,-8.541534,-6.779544,9.974043,-5.372764,3.975741,-6.581822,5.490552,-1.560979,-5.850243,7.834091,-6.392609,-7.922596,1.174414,-1.700087,9.158415,1.197870,-0.655634,-9.937220,9.220075,-8.880627,-3.270834,-6.644629,5.836745,1.517243,7.412090,-7.818797,2.248772,0.256894,4.111697,4.952574,2.583388,-9.040661,-4.299527,7.216813,1.305446,-7.387764,8.027667,-7.160092,-9.336114,-0.944345,-3.925619,8.939784,1.307363,-9.713203,-5.897383,-9.962497,-0.339871,2.693249,2.741217,2.014290,9.689134,-1.341896,-7.643418,7.799388,9.952500,-9.732748,-1.061139,7.861932,-4.512294,-8.516680,0.856062,-1.682882,8.851744,-4.494466,9.224364,-6.157761,-9.464162,1.571940,9.781219,4.458109,-4.506961,-8.492158,3.165905,-8.859206,-7.442214,-0.398295,1.111755,6.477494,0.036765,-7.370311,3.632921,7.553772,6.426785,-7.017904,7.311692,4.598176,-4.982367,-2.164458,-2.425896,0.656450,9.901373,-2.089690,2.788779,8.044101,-9.094340,3.777416,-9.086657,6.422799,0.280394,-2.230356,3.443860,-7.254267,-6.185583,3.709326,8.152536,3.027772,-0.100474,-3.467514,2.520733,-8.074253,0.706680,-2.198091,-1.682955,1.230694,4.023775,-7.510595,-5.360114,-3.647685,8.226636,0.634755,7.639810,2.271509,-9.992360,1.016618,-4.904687,7.418460,0.521762,6.903886,1.183140,5.783187,5.048272,0.779981,-1.337301,-1.443012,7.863379,-9.920611,-8.218595,4.070713,0.157750,-5.411405,-5.367433,3.641439,3.814278,-5.458581,-5.991642,-7.651962,1.936116,7.659332,8.263543,-9.656922,4.467991,6.829674,-1.876968,-8.747318,4.254806,4.402420,9.296921,6.745489,-1.016174,3.300989,4.099252,-2.124645,-4.763572,-6.736448,5.414150,-4.850534,-6.255581,-5.751846,-7.896300,-1.990423,7.236143,-2.147635,9.338306,-1.054757,6.463549,-5.215308,8.094097,6.198102,-2.775244,0.725547,-1.782893,-9.616837,-5.070626,-3.183822,8.954578,-3.338623,-1.907681,8.968132,5.341346,9.599635,-5.436530,3.790104,-5.858567,4.265034,0.284753,-5.540246,-3.302634,-0.802247,5.353935,-6.362245,9.591641,-2.273200,2.044040,4.381402,1.938514,1.620853,-1.459969,7.415652,1.299571,9.285354,0.323101,5.555789,-2.713566,-1.101736,-7.121090,1.006080,-2.856734,5.223141,7.122739,-0.910773,-6.348668,-7.209725,-2.355338,7.326573,-4.843781,-7.315381,5.949028,-2.675807,9.539787,2.842043,9.280194,-0.283077,-0.406773,6.951474,-1.825358,-9.728709,5.818962,-7.816023,-1.121659,1.852503,-3.816118,7.875153,6.581921,-3.734313,-5.166627,-7.916708,-3.641540,2.354421,5.220369,-7.126776,-3.396703,-4.467389,-7.513059,-6.853721,-5.350507,1.344717,7.925931,-9.519425,-5.022675,-4.247306,1.267020,-1.141776,9.901005,-8.190835,-9.348297,-8.140990,-4.178287,-7.303129,0.133189,9.965784,0.739389,0.939463,4.634764,5.817053,-7.708319,9.690716,1.129948,3.873942,0.969237,4.417739,-7.918709,6.504116,-5.914319,7.469660,-5.495353,7.242974,-5.798296,-0.460614,3.581618,6.235985,2.433536,2.437418,7.292565,3.521906,-6.524909,-7.986867,6.092127,1.194622,-2.469737,7.267085,-2.886865,-2.786696,4.803869,-0.448896,-7.965181,-7.177037,-8.418237,-6.208810,-4.307997,2.479242,-2.767402,-4.068786,0.388879,9.879692,-6.412915,-3.158957,-0.147180,5.262343,0.726479,-7.873730,-9.808560,-3.448466,-2.383878,-2.190198,-1.897689,3.612069,8.850168,-6.674722,-7.696095,-7.733494,7.214895,4.501490,1.091876,8.657940,-5.671705,5.950377,8.965748,-7.651370,-9.848800,-6.375949,-3.063714,-7.790974,0.583505,-7.889694,-5.104330,7.085787,9.738503,3.155368,1.715776,0.674002,-1.237165,-2.227448,-7.558516,9.319520,6.661479,-8.328923,-0.056296,-8.749529,3.190479,8.028759,6.307721,1.240511,2.079372,-6.020498,-9.162158,-7.256836,-6.119468,-5.746120,4.564755,0.630936,0.575893,-9.079376,-9.619803,-2.354372,4.878098,-0.267622,-4.233174,3.084940,-8.132838,-8.779749,-7.361891,-0.245421,-4.534749,2.216420,-2.930259,-5.599797,-8.717757,1.893804,0.362849,3.059037,3.526592,-8.279149,9.721052,6.035599,6.916294,-9.572240,2.579496,-8.902117,2.834506,2.204810,-7.795940,-2.409351,1.025791,-7.063909,5.981355,8.370148,3.072416,-7.295741,-5.768073,-6.593895,7.058039,3.198940,3.320994,-2.906479,0.018850,1.140979,-6.496428,2.203959,7.265343,-2.975230,6.064512,-4.581920,7.639086,7.779841,-6.465397,8.982252,8.844021,-3.946387,-6.447854,9.543752,4.199801,-9.464944,-8.757895,2.573818,9.710496,-3.390099,1.764882,0.906686,3.256875,-3.532870,-5.189031,-5.006934,-0.384097,0.883834,2.584483,2.324246,6.296656,-3.667859,6.184412,6.011321,-6.362912,0.287196,-5.521885,-7.816262,5.890696,-2.366190,7.890978,8.287787,6.807278,-0.996853,-4.715284,8.083246,7.569242,1.906972,3.387358,7.377057,7.684010,-4.303353,9.606316,4.834388,4.954354,3.009734,-9.968527,0.158915,1.405441,0.738526,9.518573,2.720718,-3.105968,2.239069,6.570316,4.146247,6.329725,7.319867,1.325149,0.918185,-6.963428,0.919584,-1.265430,-5.717928,-3.726310,9.078494,4.806821,6.485936,5.178179,0.931397,9.875877,1.108400,-0.907566,-2.935403,-3.737981,8.529726,-7.953426,4.912756,0.866230,-8.517944,4.847488,1.466065,-4.498296,6.788031,3.668412,-7.614313,1.398389,6.602724,-8.818062,3.996177,4.223733,8.571412,2.840233,-5.902566,6.372847,8.156217,-7.102115,2.330293,3.573983,0.057505,6.621075,1.596474,1.224758,5.403308,-4.255551,-6.245521,8.336295,5.583608,6.972876,7.765400,-7.954490,7.327915,3.788802,6.928212,4.407716,5.285853,2.964242,-6.805986,2.246085,-4.834963,-2.735754,1.061998,7.128379,6.900295,1.594559,8.232185,6.666122,-4.632280,0.554528,8.008805,-2.682323,8.003746,8.023094,3.835480,9.028184,1.062692], dtype = "float64")#candidate|4373|(2352,)|const|float64
call_4372 = relay.TupleGetItem(func_2853_call(relay.reshape(const_4373.astype('float64'), [2352,])), 0)
call_4374 = relay.TupleGetItem(func_2856_call(relay.reshape(const_4373.astype('float64'), [2352,])), 0)
const_4376 = relay.const([[[9.598993,-9.188571,8.140451],[7.779908,-6.890847,-6.185332],[3.505486,-0.562695,-2.728611],[3.076259,-1.055493,8.372375],[3.542012,-6.825305,0.675435],[6.928508,-9.736335,3.165238],[-0.965039,-9.666753,-4.119768],[-7.865885,1.907402,-2.083273],[3.878245,9.272227,-7.322779],[5.881899,6.769505,-2.706252],[-4.126846,-0.717660,-4.840909],[-1.740176,-6.743177,8.435810],[3.299914,-9.151234,-6.031863]],[[-1.114035,-6.889663,2.894782],[0.448422,-5.734574,-9.977734],[4.334553,-3.812537,3.578962],[1.072571,6.840852,4.102488],[-6.185528,6.980803,6.881858],[7.942840,6.321179,9.735777],[-6.221849,9.748435,0.767691],[-0.866808,-1.818251,-9.143442],[1.680512,-9.706026,8.128058],[9.079180,-8.543032,-4.000108],[-6.623390,-4.010056,4.863485],[-5.142516,-1.504075,-8.609905],[5.704790,-7.542518,-7.559811]],[[0.970057,-9.723235,-9.479559],[1.319926,1.774671,-8.532977],[2.186782,-1.709303,-3.622731],[3.827229,1.234424,5.636684],[-6.137254,-7.606800,-1.342980],[5.159582,-4.325814,5.145805],[-6.416679,-8.506377,7.605772],[5.968720,9.278282,-6.887032],[-6.604231,-0.767559,9.679531],[8.504682,-0.481238,-7.421548],[-8.504138,0.375648,5.347742],[-9.675969,7.348632,5.843696],[7.018939,-0.294504,-2.554825]],[[6.893400,-3.943569,1.680539],[3.908846,0.854750,-4.675038],[-0.764885,-4.226943,-8.852016],[0.698940,8.608246,3.991212],[3.529860,9.486970,-2.595453],[-4.780072,-0.931997,0.424673],[-4.340013,4.838882,2.624974],[4.816474,-7.401810,5.134490],[4.788068,2.474674,1.546133],[1.953577,-0.323623,-2.382432],[3.303656,-5.561732,-6.281015],[5.620117,-3.024136,-3.979885],[-0.363083,8.638578,8.443410]]], dtype = "float64")#candidate|4376|(4, 13, 3)|const|float64
bop_4377 = relay.logical_xor(call_4364.astype('int64'), relay.reshape(const_4376.astype('int64'), relay.shape_of(call_4364))) # shape=(4, 13, 3)
bop_4380 = relay.logical_xor(call_4365.astype('int64'), relay.reshape(const_4376.astype('int64'), relay.shape_of(call_4365))) # shape=(4, 13, 3)
output = relay.Tuple([call_4372,const_4373,bop_4377,])
output2 = relay.Tuple([call_4374,const_4373,bop_4380,])
func_4389 = relay.Function([], output)
mod['func_4389'] = func_4389
mod = relay.transform.InferType()(mod)
mutated_mod['func_4389'] = func_4389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4389_call = mutated_mod.get_global_var('func_4389')
call_4390 = func_4389_call()
output = call_4390
func_4391 = relay.Function([], output)
mutated_mod['func_4391'] = func_4391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2035_call = mod.get_global_var('func_2035')
func_2036_call = mutated_mod.get_global_var('func_2036')
call_4397 = func_2035_call()
call_4398 = func_2035_call()
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_4405 = func_1834_call()
call_4406 = func_1834_call()
func_2723_call = mod.get_global_var('func_2723')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_4427 = relay.TupleGetItem(func_2723_call(), 0)
call_4428 = relay.TupleGetItem(func_2724_call(), 0)
func_2665_call = mod.get_global_var('func_2665')
func_2668_call = mutated_mod.get_global_var('func_2668')
const_4433 = relay.const([[-8.586808,-0.697223],[-6.738149,3.820690],[-7.365028,-4.870549],[7.378612,0.270522],[7.489471,2.192711],[8.770468,2.844617],[7.495977,6.365955],[6.185602,-0.003671],[-6.667537,-5.154217],[-8.849004,-7.962563],[-2.241452,-7.500179],[8.156334,9.342165],[0.334756,8.217683],[4.484121,5.762317],[1.247016,-9.066684],[3.130086,6.927599],[-3.222594,-1.292815],[6.830879,7.450672],[-8.406393,4.214485],[-7.613412,-8.608715],[9.631962,-2.504078],[5.936868,1.702058],[0.354066,6.211925],[6.387844,-7.993427],[-8.120211,-0.802030],[0.645140,4.135058],[-5.146970,1.956451],[-8.716625,-4.510521],[-3.927224,-6.234012],[-5.534911,-6.644532],[-1.607625,-9.663392],[-7.395485,8.357586],[-7.741631,-8.956662],[1.356255,5.880906],[-2.440119,-0.918701],[-6.905950,5.981914]], dtype = "float64")#candidate|4433|(36, 2)|const|float64
var_4434 = relay.var("var_4434", dtype = "float64", shape = (176,))#candidate|4434|(176,)|var|float64
call_4432 = relay.TupleGetItem(func_2665_call(relay.reshape(const_4433.astype('float64'), [3, 4, 6]), relay.reshape(var_4434.astype('float64'), [176,]), ), 1)
call_4435 = relay.TupleGetItem(func_2668_call(relay.reshape(const_4433.astype('float64'), [3, 4, 6]), relay.reshape(var_4434.astype('float64'), [176,]), ), 1)
output = relay.Tuple([call_4397,call_4405,call_4427,call_4432,const_4433,var_4434,])
output2 = relay.Tuple([call_4398,call_4406,call_4428,call_4435,const_4433,var_4434,])
func_4447 = relay.Function([var_4434,], output)
mod['func_4447'] = func_4447
mod = relay.transform.InferType()(mod)
var_4448 = relay.var("var_4448", dtype = "float64", shape = (176,))#candidate|4448|(176,)|var|float64
output = func_4447(var_4448)
func_4449 = relay.Function([var_4448], output)
mutated_mod['func_4449'] = func_4449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2646_call = mod.get_global_var('func_2646')
func_2648_call = mutated_mod.get_global_var('func_2648')
call_4467 = relay.TupleGetItem(func_2646_call(), 0)
call_4468 = relay.TupleGetItem(func_2648_call(), 0)
output = relay.Tuple([call_4467,])
output2 = relay.Tuple([call_4468,])
func_4475 = relay.Function([], output)
mod['func_4475'] = func_4475
mod = relay.transform.InferType()(mod)
output = func_4475()
func_4476 = relay.Function([], output)
mutated_mod['func_4476'] = func_4476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2646_call = mod.get_global_var('func_2646')
func_2648_call = mutated_mod.get_global_var('func_2648')
call_4505 = relay.TupleGetItem(func_2646_call(), 0)
call_4506 = relay.TupleGetItem(func_2648_call(), 0)
func_4175_call = mod.get_global_var('func_4175')
func_4177_call = mutated_mod.get_global_var('func_4177')
call_4510 = relay.TupleGetItem(func_4175_call(), 0)
call_4511 = relay.TupleGetItem(func_4177_call(), 0)
func_2915_call = mod.get_global_var('func_2915')
func_2919_call = mutated_mod.get_global_var('func_2919')
const_4525 = relay.const([[8.846969,-9.468322,-4.724336,6.436835,3.311131,-5.588182,4.401050,1.234589,-6.531307,-4.880284,2.161767,5.772098,-7.312188,-1.609088,-1.611880,-1.624757,-8.680778,-1.732639,-3.071269,8.031640,3.481909,-9.804942,4.237652,-8.444463,-8.673401,-9.818558,-8.154582,4.764178,-8.302746,-8.509097,6.923363,2.253760,2.293698,-3.569234,5.594791,6.904022,5.946629,8.527565,2.342944,6.812707,-2.646238,-1.053462,7.656482,-1.067132,8.164143,-9.085047,8.253392,-7.805936,-7.322064,-4.546531,7.178911,-2.737177,5.489244,2.020690,2.220642,-7.753527,-6.532380,4.963313,-5.208337,-1.135918,-8.165530,-3.328436,-9.022659,-7.491075,-6.537127,-3.985944,-7.261004,-2.455223,-2.733266,7.936581,-3.450846,-0.645180,-9.274158,-8.942060,7.245593,-1.956859,-1.850471,8.284141,-6.343324,4.808378,3.389763,-1.343296,-3.936823,6.271508,-7.582881,-0.991456,8.982070,6.172862,-5.225862,-0.380106,-1.879354,5.193422,-6.500646,2.159125,-8.151918,5.518028,-9.097897,-5.600032,-3.244567,-3.048429,-5.463151,-2.218562,7.956952,9.575508,5.565234,0.704829,-1.014875,-6.726053,3.912022,8.226660,-9.749270,8.919627,-8.792586,9.895719,-1.793867,4.166187,0.041028,-6.679724,-7.723268,-6.703215,3.508610,6.224330,7.668756,-0.352116,-6.512240,-8.775605,-0.494942,5.008240,2.065428,-9.699034,-8.344817,-3.039943,1.389870,-1.283504,-1.920929,1.500239,-5.702589,-5.189348,5.508232,5.959606,-8.703504,-8.422338,2.509814,-9.335123,5.969012,-0.772912,-8.345636,1.396959,4.887560,8.846613,-6.223264,-7.673288,-0.026623,-9.846623,0.102440,7.636193,-1.470654,7.817325,0.509840,-9.916844,-0.503086,6.889772,-9.902617,-6.752825,-7.047432,1.987134,-5.663379,-6.516884,-2.955847,-9.711685,-5.976122,-8.078433,-1.568018,-2.240277,1.361368,-1.332732,-8.404987,-7.758623,-7.531149,-4.882068,0.362496,7.062961,8.271797,-7.720117,5.878098,-3.567987,-3.247690,-3.479854,-9.956768,-2.592466,7.571765,7.621437,-9.717576,-3.439950,-6.669667,-9.194841,0.897570,0.328267,4.249690,-4.335305,3.260213,-8.368694,8.739506,-3.150341,2.512671,4.402023,4.898254,-7.523462,7.928153,-1.619664,-5.342700,4.638862,-3.671973,-0.107079,-1.954707,-1.959256,5.529316,4.874840,5.632388,-2.050700,-7.700606,-3.010687,-6.815649,-5.889050,3.788124,6.719075,2.735173,6.806128,-3.058740,6.990812,4.409773,-5.512638,-5.818287,2.307297,0.134043,-9.424892,-6.939002,7.015233,-7.942878,-2.604258,-9.760741,7.759715,-8.377041,6.136897,-8.277463,0.205361,8.137347,2.536166,7.549560,5.407940,-3.930667,-1.500864,-4.914017,-1.739066,5.159650,9.160138,-2.689413,3.316102,8.253749,1.654406,3.228392,3.061476,-1.733710,-4.767155,-2.102190,-1.160959,-5.497935,9.227837,-0.406378,8.837344,-8.452609,7.605329,9.041371,7.966767,-5.774180,-8.389720,2.484209,-6.207269,-7.903162,3.094001]], dtype = "float32")#candidate|4525|(1, 280)|const|float32
call_4524 = relay.TupleGetItem(func_2915_call(relay.reshape(const_4525.astype('float32'), [8, 5, 7]), relay.reshape(const_4525.astype('float32'), [8, 5, 7]), ), 1)
call_4526 = relay.TupleGetItem(func_2919_call(relay.reshape(const_4525.astype('float32'), [8, 5, 7]), relay.reshape(const_4525.astype('float32'), [8, 5, 7]), ), 1)
output = relay.Tuple([call_4505,call_4510,call_4524,const_4525,])
output2 = relay.Tuple([call_4506,call_4511,call_4526,const_4525,])
func_4539 = relay.Function([], output)
mod['func_4539'] = func_4539
mod = relay.transform.InferType()(mod)
output = func_4539()
func_4540 = relay.Function([], output)
mutated_mod['func_4540'] = func_4540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2515_call = mod.get_global_var('func_2515')
func_2517_call = mutated_mod.get_global_var('func_2517')
call_4561 = relay.TupleGetItem(func_2515_call(), 2)
call_4562 = relay.TupleGetItem(func_2517_call(), 2)
output = relay.Tuple([call_4561,])
output2 = relay.Tuple([call_4562,])
func_4564 = relay.Function([], output)
mod['func_4564'] = func_4564
mod = relay.transform.InferType()(mod)
mutated_mod['func_4564'] = func_4564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4564_call = mutated_mod.get_global_var('func_4564')
call_4565 = func_4564_call()
output = call_4565
func_4566 = relay.Function([], output)
mutated_mod['func_4566'] = func_4566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1955_call = mod.get_global_var('func_1955')
func_1957_call = mutated_mod.get_global_var('func_1957')
call_4575 = func_1955_call()
call_4576 = func_1955_call()
output = call_4575
output2 = call_4576
func_4613 = relay.Function([], output)
mod['func_4613'] = func_4613
mod = relay.transform.InferType()(mod)
mutated_mod['func_4613'] = func_4613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4613_call = mutated_mod.get_global_var('func_4613')
call_4614 = func_4613_call()
output = call_4614
func_4615 = relay.Function([], output)
mutated_mod['func_4615'] = func_4615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2750_call = mod.get_global_var('func_2750')
func_2752_call = mutated_mod.get_global_var('func_2752')
call_4656 = relay.TupleGetItem(func_2750_call(), 0)
call_4657 = relay.TupleGetItem(func_2752_call(), 0)
func_3221_call = mod.get_global_var('func_3221')
func_3223_call = mutated_mod.get_global_var('func_3223')
call_4677 = func_3221_call(relay.reshape(call_4656.astype('float64'), [4, 13, 3]))
call_4678 = func_3221_call(relay.reshape(call_4656.astype('float64'), [4, 13, 3]))
output = relay.Tuple([call_4656,call_4677,])
output2 = relay.Tuple([call_4657,call_4678,])
func_4686 = relay.Function([], output)
mod['func_4686'] = func_4686
mod = relay.transform.InferType()(mod)
output = func_4686()
func_4687 = relay.Function([], output)
mutated_mod['func_4687'] = func_4687
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4708 = relay.var("var_4708", dtype = "float64", shape = ())#candidate|4708|()|var|float64
var_4709 = relay.var("var_4709", dtype = "float64", shape = (15, 12, 11))#candidate|4709|(15, 12, 11)|var|float64
bop_4710 = relay.floor_mod(var_4708.astype('float64'), var_4709.astype('float64')) # shape=(15, 12, 11)
output = bop_4710
output2 = bop_4710
func_4723 = relay.Function([var_4708,var_4709,], output)
mod['func_4723'] = func_4723
mod = relay.transform.InferType()(mod)
mutated_mod['func_4723'] = func_4723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4723_call = mutated_mod.get_global_var('func_4723')
var_4725 = relay.var("var_4725", dtype = "float64", shape = ())#candidate|4725|()|var|float64
var_4726 = relay.var("var_4726", dtype = "float64", shape = (15, 12, 11))#candidate|4726|(15, 12, 11)|var|float64
call_4724 = func_4723_call(var_4725,var_4726,)
output = call_4724
func_4727 = relay.Function([var_4725,var_4726,], output)
mutated_mod['func_4727'] = func_4727
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4761 = relay.var("var_4761", dtype = "float64", shape = (5, 6, 10))#candidate|4761|(5, 6, 10)|var|float64
uop_4762 = relay.sigmoid(var_4761.astype('float64')) # shape=(5, 6, 10)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_4766 = func_1834_call()
call_4767 = func_1834_call()
output = relay.Tuple([uop_4762,call_4766,])
output2 = relay.Tuple([uop_4762,call_4767,])
func_4770 = relay.Function([var_4761,], output)
mod['func_4770'] = func_4770
mod = relay.transform.InferType()(mod)
var_4771 = relay.var("var_4771", dtype = "float64", shape = (5, 6, 10))#candidate|4771|(5, 6, 10)|var|float64
output = func_4770(var_4771)
func_4772 = relay.Function([var_4771], output)
mutated_mod['func_4772'] = func_4772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_4787 = func_1834_call()
call_4788 = func_1834_call()
func_3251_call = mod.get_global_var('func_3251')
func_3252_call = mutated_mod.get_global_var('func_3252')
call_4813 = relay.TupleGetItem(func_3251_call(), 1)
call_4814 = relay.TupleGetItem(func_3252_call(), 1)
func_3251_call = mod.get_global_var('func_3251')
func_3252_call = mutated_mod.get_global_var('func_3252')
call_4817 = relay.TupleGetItem(func_3251_call(), 1)
call_4818 = relay.TupleGetItem(func_3252_call(), 1)
func_4447_call = mod.get_global_var('func_4447')
func_4449_call = mutated_mod.get_global_var('func_4449')
var_4828 = relay.var("var_4828", dtype = "float64", shape = (176,))#candidate|4828|(176,)|var|float64
call_4827 = relay.TupleGetItem(func_4447_call(relay.reshape(var_4828.astype('float64'), [176,])), 2)
call_4829 = relay.TupleGetItem(func_4449_call(relay.reshape(var_4828.astype('float64'), [176,])), 2)
output = relay.Tuple([call_4787,call_4813,call_4817,call_4827,var_4828,])
output2 = relay.Tuple([call_4788,call_4814,call_4818,call_4829,var_4828,])
func_4830 = relay.Function([var_4828,], output)
mod['func_4830'] = func_4830
mod = relay.transform.InferType()(mod)
var_4831 = relay.var("var_4831", dtype = "float64", shape = (176,))#candidate|4831|(176,)|var|float64
output = func_4830(var_4831)
func_4832 = relay.Function([var_4831], output)
mutated_mod['func_4832'] = func_4832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1793_call = mod.get_global_var('func_1793')
func_1795_call = mutated_mod.get_global_var('func_1795')
call_4843 = func_1793_call()
call_4844 = func_1793_call()
output = relay.Tuple([call_4843,])
output2 = relay.Tuple([call_4844,])
func_4847 = relay.Function([], output)
mod['func_4847'] = func_4847
mod = relay.transform.InferType()(mod)
output = func_4847()
func_4848 = relay.Function([], output)
mutated_mod['func_4848'] = func_4848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2515_call = mod.get_global_var('func_2515')
func_2517_call = mutated_mod.get_global_var('func_2517')
call_4908 = relay.TupleGetItem(func_2515_call(), 2)
call_4909 = relay.TupleGetItem(func_2517_call(), 2)
output = relay.Tuple([call_4908,])
output2 = relay.Tuple([call_4909,])
func_4910 = relay.Function([], output)
mod['func_4910'] = func_4910
mod = relay.transform.InferType()(mod)
output = func_4910()
func_4911 = relay.Function([], output)
mutated_mod['func_4911'] = func_4911
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4923 = relay.const([[[-4.802586,7.785597,1.104516,-5.186512],[0.845190,3.254861,0.351265,-9.021953],[-3.658047,1.575397,9.091227,-9.070522],[-8.086729,5.057673,-3.867064,9.126959],[-7.566516,4.603108,5.510707,6.878086],[0.984506,-8.946829,8.192839,-3.472329],[-3.661189,-3.428715,1.351121,4.044770],[-2.131413,1.721140,5.151140,5.881174],[9.216881,0.067525,4.229943,-9.207340],[1.447933,9.395944,4.989774,-9.927691],[1.051524,6.839590,-3.015350,-6.656185],[9.248470,9.677440,-9.402166,-4.591061],[8.066392,-9.558404,-2.981037,6.506697],[-5.492742,9.681925,-9.929490,3.728783],[-0.690757,3.012340,3.641359,-7.347329]]], dtype = "float32")#candidate|4923|(1, 15, 4)|const|float32
uop_4924 = relay.acos(const_4923.astype('float32')) # shape=(1, 15, 4)
output = relay.Tuple([uop_4924,])
output2 = relay.Tuple([uop_4924,])
func_4926 = relay.Function([], output)
mod['func_4926'] = func_4926
mod = relay.transform.InferType()(mod)
mutated_mod['func_4926'] = func_4926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4926_call = mutated_mod.get_global_var('func_4926')
call_4927 = func_4926_call()
output = call_4927
func_4928 = relay.Function([], output)
mutated_mod['func_4928'] = func_4928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4613_call = mod.get_global_var('func_4613')
func_4615_call = mutated_mod.get_global_var('func_4615')
call_4929 = func_4613_call()
call_4930 = func_4613_call()
output = call_4929
output2 = call_4930
func_4932 = relay.Function([], output)
mod['func_4932'] = func_4932
mod = relay.transform.InferType()(mod)
mutated_mod['func_4932'] = func_4932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4932_call = mutated_mod.get_global_var('func_4932')
call_4933 = func_4932_call()
output = call_4933
func_4934 = relay.Function([], output)
mutated_mod['func_4934'] = func_4934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1793_call = mod.get_global_var('func_1793')
func_1795_call = mutated_mod.get_global_var('func_1795')
call_5047 = func_1793_call()
call_5048 = func_1793_call()
output = relay.Tuple([call_5047,])
output2 = relay.Tuple([call_5048,])
func_5066 = relay.Function([], output)
mod['func_5066'] = func_5066
mod = relay.transform.InferType()(mod)
output = func_5066()
func_5067 = relay.Function([], output)
mutated_mod['func_5067'] = func_5067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2189_call = mod.get_global_var('func_2189')
func_2191_call = mutated_mod.get_global_var('func_2191')
call_5070 = relay.TupleGetItem(func_2189_call(), 0)
call_5071 = relay.TupleGetItem(func_2191_call(), 0)
func_3424_call = mod.get_global_var('func_3424')
func_3426_call = mutated_mod.get_global_var('func_3426')
call_5074 = relay.TupleGetItem(func_3424_call(), 0)
call_5075 = relay.TupleGetItem(func_3426_call(), 0)
output = relay.Tuple([call_5070,call_5074,])
output2 = relay.Tuple([call_5071,call_5075,])
func_5085 = relay.Function([], output)
mod['func_5085'] = func_5085
mod = relay.transform.InferType()(mod)
mutated_mod['func_5085'] = func_5085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5085_call = mutated_mod.get_global_var('func_5085')
call_5086 = func_5085_call()
output = call_5086
func_5087 = relay.Function([], output)
mutated_mod['func_5087'] = func_5087
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5133 = relay.const([[[1.634642,-2.382440,-1.858324,8.696615],[4.473016,-0.391203,9.710580,1.832833],[-1.926863,6.085904,-9.503746,-7.355807],[-7.798035,2.815863,-1.883778,3.208179],[3.240406,-9.686525,-2.507013,5.701508],[5.763925,9.982820,-4.864713,-0.566850],[1.754364,9.509259,6.806072,-8.137410],[7.001568,-5.658576,-8.107502,3.758720],[-4.557947,4.207270,1.145746,-9.364587],[-8.415190,1.392892,-0.013693,6.967675],[0.303439,8.438454,2.096953,-9.701899],[-7.855077,-4.895808,-0.930350,-6.295660]],[[2.581622,0.767930,-2.871271,-2.555623],[-2.717962,0.061710,2.544353,-2.173471],[-3.697315,2.182127,1.504279,-7.920714],[4.917733,-0.420675,-4.807177,-0.627538],[-4.654749,-8.830359,3.903440,3.454765],[0.930685,8.112967,-0.722118,8.383606],[9.508911,-0.649511,9.155499,-7.369164],[6.999787,-9.589301,-3.762745,-4.706648],[2.431415,2.771114,8.528235,-3.019671],[-0.978914,2.951242,5.256312,9.665331],[5.710729,-4.389453,-4.686257,9.293950],[5.159937,4.542774,-0.561942,7.499159]],[[-9.010567,3.160442,5.767725,-2.799017],[5.010675,-1.582372,5.233500,9.084569],[7.628036,8.104099,3.247843,-2.020177],[-8.741013,-3.901971,3.579441,-8.778655],[-9.823849,4.601859,9.288565,2.155581],[5.817199,-6.262633,8.187294,7.279879],[1.432126,-1.510364,-8.154919,8.958917],[-2.817617,8.271298,1.113804,-9.211541],[0.878887,-3.135399,3.498883,8.904462],[9.173060,7.208668,-3.709025,-2.336687],[6.210502,-5.859046,6.395109,6.901865],[7.325037,7.502677,-4.884307,-1.376530]],[[9.932485,7.997163,2.112694,9.387734],[-5.299075,0.563170,5.793001,-3.844994],[4.137955,-4.123691,-5.406562,-6.020303],[9.711076,7.454686,1.125383,8.669933],[-6.078924,-9.369946,-8.070561,-3.545290],[-4.699168,4.589484,1.601226,3.364316],[-6.558665,4.094760,8.762161,-1.302895],[1.565338,-6.458610,4.881087,3.786007],[-1.261950,8.944943,8.285166,6.799929],[-3.927148,-4.924322,-7.986642,-6.630886],[0.302677,-9.529364,6.086590,9.913878],[-0.711290,-6.640122,-2.635744,5.806516]],[[8.344593,0.868940,-0.804569,-9.438134],[1.044466,8.237263,-1.580532,-2.578243],[7.887951,-9.744045,9.117404,-1.924246],[-6.225392,9.993002,-3.293543,5.747720],[-0.990960,1.087572,-6.721067,5.707554],[-0.379895,4.464287,-9.089925,-7.561541],[-8.769856,-9.988523,4.153469,7.021864],[8.629357,-3.611308,5.552542,9.239288],[-8.065403,3.363989,3.373276,-1.328787],[1.734074,-5.469145,1.968313,7.043619],[-4.920896,1.228946,-1.529231,5.592391],[9.676719,-7.113787,7.918558,-0.761231]],[[-7.771119,-6.214208,-4.234382,5.879223],[4.147228,7.625582,-8.264605,-6.482193],[8.175322,-3.483934,3.421287,2.856778],[0.466087,1.920921,-5.452444,-9.718039],[2.543960,-7.355360,8.940917,9.589239],[4.660314,5.836508,-4.032787,-3.493344],[0.257077,5.904140,-2.751431,-0.111441],[-8.783428,7.622520,8.270305,9.444308],[-3.662497,3.530951,6.099986,-9.883744],[6.914646,9.847128,-6.966679,9.027476],[-8.865183,-6.592313,-7.379973,1.278946],[-9.194144,7.349670,-9.852271,5.649841]],[[-2.280866,3.808775,7.703527,-2.124535],[4.850001,-9.628596,-6.910762,-0.237014],[8.291119,4.727792,6.566099,-9.782534],[1.356429,5.763622,4.136691,6.559047],[7.681510,5.147899,-9.816138,-8.462793],[4.509941,6.463840,-5.755239,2.401812],[-6.022514,4.194942,0.006934,-7.681951],[8.829857,-0.714428,-8.260767,-4.185136],[-9.276192,-5.376226,-7.880085,3.204570],[-0.191588,4.553313,-3.494786,-7.240672],[9.478423,-2.319215,0.006233,-7.078015],[-3.522432,1.818781,-9.835211,5.166241]]], dtype = "float32")#candidate|5133|(7, 12, 4)|const|float32
uop_5134 = relay.rsqrt(const_5133.astype('float32')) # shape=(7, 12, 4)
uop_5138 = relay.sigmoid(const_5133.astype('float64')) # shape=(7, 12, 4)
output = relay.Tuple([uop_5134,uop_5138,])
output2 = relay.Tuple([uop_5134,uop_5138,])
func_5142 = relay.Function([], output)
mod['func_5142'] = func_5142
mod = relay.transform.InferType()(mod)
output = func_5142()
func_5143 = relay.Function([], output)
mutated_mod['func_5143'] = func_5143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5166 = relay.var("var_5166", dtype = "float64", shape = (11, 3, 10))#candidate|5166|(11, 3, 10)|var|float64
uop_5167 = relay.atanh(var_5166.astype('float64')) # shape=(11, 3, 10)
output = uop_5167
output2 = uop_5167
func_5173 = relay.Function([var_5166,], output)
mod['func_5173'] = func_5173
mod = relay.transform.InferType()(mod)
mutated_mod['func_5173'] = func_5173
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5174 = relay.var("var_5174", dtype = "float64", shape = (11, 3, 10))#candidate|5174|(11, 3, 10)|var|float64
func_5173_call = mutated_mod.get_global_var('func_5173')
call_5175 = func_5173_call(var_5174)
output = call_5175
func_5176 = relay.Function([var_5174], output)
mutated_mod['func_5176'] = func_5176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3343_call = mod.get_global_var('func_3343')
func_3344_call = mutated_mod.get_global_var('func_3344')
call_5234 = relay.TupleGetItem(func_3343_call(), 0)
call_5235 = relay.TupleGetItem(func_3344_call(), 0)
func_2001_call = mod.get_global_var('func_2001')
func_2003_call = mutated_mod.get_global_var('func_2003')
call_5244 = relay.TupleGetItem(func_2001_call(), 0)
call_5245 = relay.TupleGetItem(func_2003_call(), 0)
output = relay.Tuple([call_5234,call_5244,])
output2 = relay.Tuple([call_5235,call_5245,])
func_5254 = relay.Function([], output)
mod['func_5254'] = func_5254
mod = relay.transform.InferType()(mod)
output = func_5254()
func_5255 = relay.Function([], output)
mutated_mod['func_5255'] = func_5255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3251_call = mod.get_global_var('func_3251')
func_3252_call = mutated_mod.get_global_var('func_3252')
call_5317 = relay.TupleGetItem(func_3251_call(), 0)
call_5318 = relay.TupleGetItem(func_3252_call(), 0)
output = relay.Tuple([call_5317,])
output2 = relay.Tuple([call_5318,])
func_5325 = relay.Function([], output)
mod['func_5325'] = func_5325
mod = relay.transform.InferType()(mod)
output = func_5325()
func_5326 = relay.Function([], output)
mutated_mod['func_5326'] = func_5326
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5402 = relay.var("var_5402", dtype = "float64", shape = (2, 15, 4))#candidate|5402|(2, 15, 4)|var|float64
uop_5403 = relay.sigmoid(var_5402.astype('float64')) # shape=(2, 15, 4)
uop_5412 = relay.tan(uop_5403.astype('float64')) # shape=(2, 15, 4)
bop_5414 = relay.power(uop_5412.astype('float64'), relay.reshape(uop_5403.astype('float64'), relay.shape_of(uop_5412))) # shape=(2, 15, 4)
output = bop_5414
output2 = bop_5414
func_5417 = relay.Function([var_5402,], output)
mod['func_5417'] = func_5417
mod = relay.transform.InferType()(mod)
var_5418 = relay.var("var_5418", dtype = "float64", shape = (2, 15, 4))#candidate|5418|(2, 15, 4)|var|float64
output = func_5417(var_5418)
func_5419 = relay.Function([var_5418], output)
mutated_mod['func_5419'] = func_5419
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5426 = relay.var("var_5426", dtype = "float64", shape = (11, 6, 13))#candidate|5426|(11, 6, 13)|var|float64
uop_5427 = relay.log(var_5426.astype('float64')) # shape=(11, 6, 13)
output = uop_5427
output2 = uop_5427
func_5432 = relay.Function([var_5426,], output)
mod['func_5432'] = func_5432
mod = relay.transform.InferType()(mod)
mutated_mod['func_5432'] = func_5432
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5433 = relay.var("var_5433", dtype = "float64", shape = (11, 6, 13))#candidate|5433|(11, 6, 13)|var|float64
func_5432_call = mutated_mod.get_global_var('func_5432')
call_5434 = func_5432_call(var_5433)
output = call_5434
func_5435 = relay.Function([var_5433], output)
mutated_mod['func_5435'] = func_5435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4686_call = mod.get_global_var('func_4686')
func_4687_call = mutated_mod.get_global_var('func_4687')
call_5486 = relay.TupleGetItem(func_4686_call(), 0)
call_5487 = relay.TupleGetItem(func_4687_call(), 0)
uop_5494 = relay.sin(call_5486.astype('float32')) # shape=(4, 13, 3)
uop_5496 = relay.sin(call_5487.astype('float32')) # shape=(4, 13, 3)
func_2275_call = mod.get_global_var('func_2275')
func_2277_call = mutated_mod.get_global_var('func_2277')
call_5509 = relay.TupleGetItem(func_2275_call(), 0)
call_5510 = relay.TupleGetItem(func_2277_call(), 0)
func_2875_call = mod.get_global_var('func_2875')
func_2878_call = mutated_mod.get_global_var('func_2878')
var_5519 = relay.var("var_5519", dtype = "float64", shape = (396,))#candidate|5519|(396,)|var|float64
call_5518 = func_2875_call(relay.reshape(var_5519.astype('float64'), [11, 12, 3]))
call_5520 = func_2875_call(relay.reshape(var_5519.astype('float64'), [11, 12, 3]))
uop_5523 = relay.cosh(var_5519.astype('float32')) # shape=(396,)
output = relay.Tuple([uop_5494,call_5509,call_5518,uop_5523,])
output2 = relay.Tuple([uop_5496,call_5510,call_5520,uop_5523,])
func_5529 = relay.Function([var_5519,], output)
mod['func_5529'] = func_5529
mod = relay.transform.InferType()(mod)
mutated_mod['func_5529'] = func_5529
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5530 = relay.var("var_5530", dtype = "float64", shape = (396,))#candidate|5530|(396,)|var|float64
func_5529_call = mutated_mod.get_global_var('func_5529')
call_5531 = func_5529_call(var_5530)
output = call_5531
func_5532 = relay.Function([var_5530], output)
mutated_mod['func_5532'] = func_5532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3601_call = mod.get_global_var('func_3601')
func_3603_call = mutated_mod.get_global_var('func_3603')
call_5539 = func_3601_call()
call_5540 = func_3601_call()
output = call_5539
output2 = call_5540
func_5541 = relay.Function([], output)
mod['func_5541'] = func_5541
mod = relay.transform.InferType()(mod)
mutated_mod['func_5541'] = func_5541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mutated_mod.get_global_var('func_5541')
call_5542 = func_5541_call()
output = call_5542
func_5543 = relay.Function([], output)
mutated_mod['func_5543'] = func_5543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4539_call = mod.get_global_var('func_4539')
func_4540_call = mutated_mod.get_global_var('func_4540')
call_5555 = relay.TupleGetItem(func_4539_call(), 2)
call_5556 = relay.TupleGetItem(func_4540_call(), 2)
output = call_5555
output2 = call_5556
func_5557 = relay.Function([], output)
mod['func_5557'] = func_5557
mod = relay.transform.InferType()(mod)
mutated_mod['func_5557'] = func_5557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5557_call = mutated_mod.get_global_var('func_5557')
call_5558 = func_5557_call()
output = call_5558
func_5559 = relay.Function([], output)
mutated_mod['func_5559'] = func_5559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4050_call = mod.get_global_var('func_4050')
func_4052_call = mutated_mod.get_global_var('func_4052')
call_5568 = func_4050_call()
call_5569 = func_4050_call()
var_5584 = relay.var("var_5584", dtype = "bool", shape = (4, 13, 3))#candidate|5584|(4, 13, 3)|var|bool
bop_5585 = relay.power(call_5568.astype('float32'), relay.reshape(var_5584.astype('float32'), relay.shape_of(call_5568))) # shape=(4, 13, 3)
bop_5588 = relay.power(call_5569.astype('float32'), relay.reshape(var_5584.astype('float32'), relay.shape_of(call_5569))) # shape=(4, 13, 3)
output = relay.Tuple([bop_5585,])
output2 = relay.Tuple([bop_5588,])
func_5593 = relay.Function([var_5584,], output)
mod['func_5593'] = func_5593
mod = relay.transform.InferType()(mod)
var_5594 = relay.var("var_5594", dtype = "bool", shape = (4, 13, 3))#candidate|5594|(4, 13, 3)|var|bool
output = func_5593(var_5594)
func_5595 = relay.Function([var_5594], output)
mutated_mod['func_5595'] = func_5595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5557_call = mod.get_global_var('func_5557')
func_5559_call = mutated_mod.get_global_var('func_5559')
call_5600 = func_5557_call()
call_5601 = func_5557_call()
func_4475_call = mod.get_global_var('func_4475')
func_4476_call = mutated_mod.get_global_var('func_4476')
call_5606 = relay.TupleGetItem(func_4475_call(), 0)
call_5607 = relay.TupleGetItem(func_4476_call(), 0)
func_2389_call = mod.get_global_var('func_2389')
func_2390_call = mutated_mod.get_global_var('func_2390')
call_5611 = relay.TupleGetItem(func_2389_call(), 0)
call_5612 = relay.TupleGetItem(func_2390_call(), 0)
output = relay.Tuple([call_5600,call_5606,call_5611,])
output2 = relay.Tuple([call_5601,call_5607,call_5612,])
func_5641 = relay.Function([], output)
mod['func_5641'] = func_5641
mod = relay.transform.InferType()(mod)
mutated_mod['func_5641'] = func_5641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5641_call = mutated_mod.get_global_var('func_5641')
call_5642 = func_5641_call()
output = call_5642
func_5643 = relay.Function([], output)
mutated_mod['func_5643'] = func_5643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5689 = relay.var("var_5689", dtype = "float32", shape = (10, 9, 13))#candidate|5689|(10, 9, 13)|var|float32
const_5690 = relay.const([[[-2.339427,-7.608813,-7.589437,4.960289,-3.914029,1.151796,-5.786616,4.169922,-2.186578,5.772346,-2.491642,0.637837,1.109719],[3.376292,-5.878186,5.395038,-2.682848,-1.653972,6.124824,3.699289,7.578208,6.494176,9.153089,-5.632192,-8.389929,4.938869],[4.394054,0.979066,3.554348,-1.689541,9.676843,-9.927938,6.610460,-8.954384,-6.400653,6.892161,8.520888,9.181222,9.302311],[-3.290428,-1.158871,-0.613342,-9.113455,-9.990979,-2.614302,5.118982,-3.004355,1.376175,-1.663880,8.924577,4.315849,-6.826533],[1.577616,0.921825,1.081770,-7.966538,2.449189,-8.542839,-8.268408,1.175849,5.330038,-9.819727,9.148220,-3.333835,-4.808046],[-9.925815,-8.502012,-3.838532,3.708231,-3.631187,4.729485,-3.408477,4.003459,-5.695886,8.843572,-5.118198,-4.787643,0.675937],[-9.584486,-6.320092,2.646814,-6.957606,5.598016,2.389781,-7.946671,-2.105657,-6.965624,0.187717,8.438336,-0.162263,2.216153],[7.458396,4.459338,3.848133,-1.963727,-2.199318,4.540651,7.839991,3.048089,0.314277,-0.421349,3.220277,-5.967807,-3.377542],[-0.153133,-0.941035,1.583763,-5.294885,-4.670554,-9.757759,0.945523,-0.119862,4.514975,5.069233,-8.131378,5.985301,-8.459372]],[[-4.356614,7.318352,-4.392980,8.184033,7.085072,8.279348,5.975322,-1.827004,-1.523456,0.428017,-0.736087,6.144683,3.061135],[-1.422613,-2.413101,-3.490499,7.543839,-7.262674,0.940352,-3.301738,-6.753795,-0.656973,-9.833264,-1.186806,-2.398529,8.895364],[-9.327228,0.252000,7.773387,-1.310428,-2.832537,-9.302527,-3.260755,-4.805334,-8.760434,7.512898,-5.865629,-9.095655,-8.511231],[3.246153,-5.904499,4.171994,5.614258,1.293076,-6.581551,5.340621,-3.817266,-6.252842,-5.690432,-4.549761,1.457107,9.767702],[-1.964715,-4.999635,-1.165316,0.891982,6.496481,-5.754506,6.337852,6.232491,5.720577,0.157163,-6.807809,9.141770,-8.073136],[9.653817,7.945930,0.492387,-6.876183,-3.702747,6.957319,-1.118447,-0.800940,-1.021133,-1.959839,0.992014,-3.575351,0.499801],[-1.536743,2.765785,-6.239870,-4.806943,7.294338,8.619316,-2.108031,0.060805,-6.368323,-7.745264,-5.393820,-6.902766,-0.878357],[-1.409057,-1.429250,8.290316,-5.442908,3.809327,2.610059,-1.989149,0.768374,-4.601081,9.323787,-9.057858,2.331224,-6.271138],[5.985998,-2.619339,-1.097607,-1.245344,-9.801472,8.959989,-6.294078,-0.727026,6.125819,-4.564481,-3.297249,-6.019416,-6.868794]],[[3.562939,0.879642,5.636979,0.300170,-3.808945,1.427092,-4.279862,-4.081793,-7.381894,7.612342,-8.549461,-6.936427,5.283336],[3.743238,-2.598381,-8.413549,-7.570426,-6.835210,-7.079623,3.846340,2.253853,2.012103,5.374655,-4.443611,-9.782374,-0.762584],[-7.088896,-3.947105,0.964725,2.842024,6.132382,-6.797061,4.778483,-0.627106,-1.563404,-9.710466,-3.899551,2.240639,3.405059],[3.949685,1.885054,-0.652257,-2.999527,-7.321576,-6.513742,-5.161402,0.285642,1.052847,7.892721,5.141062,-1.761864,4.524080],[4.875853,-6.661994,-9.555590,5.304870,4.775738,2.478125,-2.414613,2.907010,7.080315,-5.256420,-4.057288,4.899174,3.981824],[3.569428,-6.157906,-8.947292,-8.800683,-4.871834,7.235203,-0.668812,9.537366,-4.891144,0.057222,3.434580,1.501073,-8.152490],[1.203216,3.028498,-6.653682,-3.954536,-9.894786,-9.752244,8.187126,7.271391,-5.056431,8.276206,-6.726035,3.603119,-5.139652],[-1.479733,3.844210,5.129448,5.260760,6.015450,-6.112953,-3.534172,3.643935,9.522575,-5.281673,0.264180,-8.913408,-9.513287],[-7.460897,0.977678,-0.287264,6.787398,-5.535639,4.337347,8.548840,5.120818,-0.724088,-7.279789,-7.863140,7.988340,1.076431]],[[-1.261815,3.347784,-7.547839,-3.809948,-0.061323,9.530440,-5.394912,6.755373,2.747415,3.014972,-5.262112,3.596408,8.992206],[-8.783258,-1.255203,3.483345,1.522680,7.450778,-4.261614,0.983303,5.747161,-7.525229,-6.098111,9.858873,0.554009,-3.400915],[-7.558464,-4.736892,-8.421127,-0.467293,-7.807375,5.897053,4.062884,3.728085,-1.824384,-9.187366,-8.031050,-6.420519,-1.396169],[-6.795921,-8.862097,4.796374,-3.414433,-3.346365,-7.268904,4.311331,-8.314626,9.497803,-4.676883,1.411353,2.986592,-2.761996],[2.302223,9.338796,-0.083432,5.869574,-7.127425,5.851584,-4.449489,0.715649,4.515911,-8.000394,8.866998,0.943028,-6.186864],[7.053940,-1.237783,6.936074,-6.841166,-7.274102,4.259270,5.561154,-2.375984,-4.809534,-8.659498,-2.231019,2.308745,2.053225],[-5.931156,-5.064097,7.094603,-4.525626,1.427587,5.680857,-3.065519,-2.686201,9.275040,-0.969009,-2.138044,4.058332,-7.109095],[-3.761628,-1.072239,8.380926,-9.518456,7.791369,4.362846,-3.019558,-1.737663,-1.655803,3.367169,-9.289683,-5.788613,-1.215238],[1.229986,7.160288,1.434708,5.000933,9.819555,-1.301662,-1.811939,1.238356,-6.342231,-3.353518,-5.979599,8.109522,1.427026]],[[-6.891036,-9.819983,8.450722,-6.524356,-6.962831,-4.739799,1.534436,-0.562272,-8.166576,-6.088147,-2.009433,5.218533,1.955516],[7.814307,4.273406,-5.263869,-6.110446,-9.911505,-2.932994,-5.759661,3.604121,5.567738,-8.258662,-8.947813,-5.806256,-0.330074],[6.284429,-2.466529,1.769594,-6.272462,-3.351459,0.246893,1.455743,-8.797067,-4.291630,-5.649585,-5.435900,4.168177,3.845035],[6.855741,-4.293588,-0.375799,8.776794,-2.377254,-1.520189,3.055754,2.210650,4.839998,-7.459091,-7.988168,-8.701224,-3.246567],[-4.762175,8.240710,-4.300725,-8.261985,1.278145,-2.011697,5.767735,2.947719,0.560485,-5.759696,4.994006,-9.260554,-4.841071],[0.848283,0.162046,3.344753,7.983988,-3.413327,5.161198,-5.954994,9.773060,4.416963,6.277688,0.021672,5.141488,7.492204],[3.465588,-4.506057,-3.226587,7.910826,-5.896507,-9.932827,5.738282,6.792585,0.586655,5.695105,-7.796983,1.792636,-5.318980],[4.598814,-7.525599,-2.444021,-0.331000,3.779513,-0.429762,-6.172392,2.335334,-0.278023,3.108366,1.407360,9.861506,-3.965404],[4.046967,4.875823,-7.112061,1.147689,9.701818,-0.910187,9.780369,3.857459,-4.981188,-1.273782,-3.121620,8.477098,-6.542126]],[[-1.733454,6.532222,1.420762,-0.968189,-7.370677,3.909854,6.985678,-5.477367,-5.765342,-6.397105,9.922747,-1.347608,-4.371068],[9.604074,-3.120897,9.657700,6.905472,8.122283,7.211583,-4.610402,-8.816483,-4.209228,-6.465202,-8.134029,-9.985798,-7.557900],[9.978680,7.681746,3.853438,1.072931,-8.397331,-0.414774,-5.523582,-9.615434,8.274347,0.869396,7.336139,-1.439783,-8.022088],[-3.553095,5.205691,3.272775,5.228722,-5.134757,4.900419,4.238120,-9.039560,0.949506,7.151098,9.346535,-1.793396,2.341374],[-7.137511,-6.712649,-1.366063,6.521822,4.597083,-8.269493,7.920248,-1.030571,6.616160,-3.069331,5.503304,-3.692058,2.637963],[-7.723203,-4.397383,3.580420,1.337533,-4.556229,1.594790,6.757161,-1.293891,6.121340,-3.096892,-0.306511,6.371492,-0.712775],[-8.105043,-8.210743,-7.754541,-4.118098,-6.761151,6.713624,2.936090,6.945162,3.468743,7.649935,-3.721860,2.145204,-7.952944],[-6.137702,-4.101067,7.747106,2.225541,-0.319093,-3.620057,2.852478,8.507127,-1.872155,-8.905041,6.893313,-6.075885,1.040717],[5.758092,4.294577,-7.896645,-1.695859,-1.415992,6.238617,3.001724,5.583180,-6.208790,-9.918761,0.556159,-9.954788,-5.942580]],[[1.797816,5.686700,0.001038,7.879513,-9.723721,7.411190,-8.170207,-2.599836,8.561904,-6.739901,8.371031,6.626836,-3.026113],[-8.912352,-7.450692,-4.576362,1.027945,-5.812651,-7.731956,-1.997644,6.977675,9.921293,4.104113,-3.697265,8.938918,-8.169621],[2.819792,-7.824332,-7.678007,9.732786,2.900531,5.221270,5.440773,-8.239248,3.747228,-1.764470,-5.592835,5.572172,-5.304001],[-4.614002,-7.962631,-1.897034,9.909067,0.561991,-4.552821,-0.134122,-1.149341,-6.138588,-4.453410,4.155799,6.758737,-5.601594],[-7.581701,-9.253790,0.796223,-8.491871,9.452935,-0.355205,-1.739420,-2.783939,-6.531021,-2.972882,-2.848443,-7.637321,2.581512],[1.259848,5.954198,-5.068750,3.890072,-2.362124,-7.241268,-0.920696,-3.255606,-1.600095,-7.390300,1.587968,2.432048,5.864851],[-8.213628,-9.080841,4.406345,3.341051,-1.841984,-8.355412,-4.382076,-6.187899,-5.785292,-2.655006,9.495726,1.703194,3.537529],[-4.991406,-8.711697,9.516904,3.990738,8.833337,1.536928,-0.412019,-9.361248,5.813333,7.122048,1.438518,-5.220265,-8.019580],[-2.038751,1.492825,-4.888926,2.403855,0.609589,-7.667785,-3.756312,1.200598,-9.810216,0.622761,3.084703,3.898072,8.398790]],[[-2.458927,-2.715229,3.318817,-2.354953,-0.306454,4.844673,3.678163,-2.357067,1.436675,2.132202,-3.689115,-3.342801,0.615067],[-1.380096,9.996671,0.398525,5.517481,-1.759120,9.003147,7.964505,-5.358331,5.845021,3.865912,9.517156,-8.069941,-3.408578],[-2.716565,0.100684,-9.368127,-9.793927,4.765312,0.332159,3.423352,2.799193,-5.752963,-4.948906,0.936658,-8.464995,-2.307601],[-1.580457,6.494858,3.593757,7.797018,3.540728,2.636879,3.739886,5.937335,7.403699,6.368232,4.522258,-0.289649,-8.139519],[3.108322,-2.121065,-6.484816,0.881062,8.517161,1.312678,7.991536,-5.947059,-6.604868,2.697643,-7.257556,-4.985704,1.092338],[7.183650,0.588206,-5.472644,1.114809,-7.117444,3.980465,5.547490,0.905410,2.803571,0.815787,8.960949,-2.603163,9.348798],[5.291693,-2.478811,-5.942649,-5.541276,8.518170,-3.710648,-9.319274,-0.210413,-8.302542,-7.759390,-6.774327,-5.282847,-9.361732],[8.059358,-6.301916,7.454575,-2.130981,7.811350,-1.072366,-0.926904,-6.743219,-6.744531,-0.739667,-9.831550,-9.475649,-4.157674],[-6.291320,-7.110347,-8.465470,3.157154,-5.466753,-4.865011,-3.085071,6.539157,-5.798093,-8.539924,2.324982,0.932986,5.795670]],[[-7.558389,-0.926250,-2.293809,-5.352315,2.471004,-6.563813,1.506466,-1.802032,6.720622,9.947899,5.056270,8.274633,-6.479655],[-8.321439,-7.488174,3.578651,4.560410,7.214478,1.485794,-4.687871,-2.452637,4.885600,9.263397,2.893123,7.571966,-4.676055],[-8.614184,-4.442625,-1.082211,-0.549698,0.619414,2.949910,-1.099561,-1.333159,-6.450730,-9.233411,-9.953765,0.351866,7.825304],[-2.401548,1.291751,8.068069,-7.818458,0.758892,-1.755782,0.301960,3.528081,-3.210330,6.319098,7.469800,8.313947,-1.500418],[-3.200939,-3.605293,1.897984,-1.301333,8.717872,-3.981002,2.812343,-3.175512,-8.495684,0.245281,-8.087684,5.713710,3.319762],[-9.876313,-4.855044,-1.952226,-7.824251,4.266736,7.823049,-3.171079,1.657185,4.040203,-2.117022,2.752198,6.478615,3.633307],[-5.564787,-3.528616,4.342812,3.241785,7.818230,-2.490502,-6.205887,1.955564,5.499104,-9.637355,5.975584,-5.531065,0.466370],[-5.103807,-3.152161,-0.792699,-5.834398,-8.393816,0.444079,8.215738,2.075248,-9.042669,5.541295,-9.774876,-2.288043,-6.792573],[-0.830542,2.219774,-1.959917,-5.708235,0.673785,9.496644,0.523897,-7.617499,5.634367,-4.643405,6.368816,-1.741173,-3.957271]],[[-2.473846,4.323084,-0.357270,1.266244,9.566414,1.561906,-3.601224,6.802594,-4.520057,-7.250639,8.813249,7.089158,-0.326591],[0.205548,6.866416,9.264340,-7.631158,-4.888681,-9.385571,-1.786411,4.976567,-3.323954,5.962216,-2.215652,-7.914706,-8.214539],[-4.587931,8.499308,-4.280571,-5.623308,2.429812,3.000736,-8.490942,-0.665861,2.448032,6.864489,2.837498,6.467799,9.235863],[-6.430131,-0.209540,3.381168,-7.262781,9.683797,7.696356,0.338297,-9.302525,-6.001160,-6.225150,4.234559,-6.207312,0.447496],[-7.275824,-8.486701,-8.455279,-9.887795,3.900620,7.775247,-9.609611,-8.227201,-4.215742,-3.957560,9.016323,-3.802021,-7.182813],[0.095864,-8.805410,-4.165294,8.027021,-2.376617,4.922308,-6.890522,-8.979434,5.509156,6.174311,4.793331,9.215519,-6.203172],[-3.650871,-0.193789,-8.286104,4.076489,-8.729108,-2.450855,-6.326546,0.304355,5.339196,-7.348530,-0.780061,-6.257253,-6.134529],[3.497367,-0.876819,-0.943148,-7.068620,7.286617,-9.593993,4.635206,-2.274489,4.759377,-2.741519,-1.167877,-1.297348,-9.976681],[-2.902375,-3.831248,-1.096441,-9.284936,9.280137,1.675526,-4.267933,8.005123,-6.731150,9.507711,-9.247896,3.901535,-1.026142]]], dtype = "float32")#candidate|5690|(10, 9, 13)|const|float32
bop_5691 = relay.subtract(var_5689.astype('float32'), relay.reshape(const_5690.astype('float32'), relay.shape_of(var_5689))) # shape=(10, 9, 13)
output = bop_5691
output2 = bop_5691
func_5695 = relay.Function([var_5689,], output)
mod['func_5695'] = func_5695
mod = relay.transform.InferType()(mod)
mutated_mod['func_5695'] = func_5695
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5696 = relay.var("var_5696", dtype = "float32", shape = (10, 9, 13))#candidate|5696|(10, 9, 13)|var|float32
func_5695_call = mutated_mod.get_global_var('func_5695')
call_5697 = func_5695_call(var_5696)
output = call_5697
func_5698 = relay.Function([var_5696], output)
mutated_mod['func_5698'] = func_5698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4686_call = mod.get_global_var('func_4686')
func_4687_call = mutated_mod.get_global_var('func_4687')
call_5709 = relay.TupleGetItem(func_4686_call(), 1)
call_5710 = relay.TupleGetItem(func_4687_call(), 1)
output = call_5709
output2 = call_5710
func_5711 = relay.Function([], output)
mod['func_5711'] = func_5711
mod = relay.transform.InferType()(mod)
mutated_mod['func_5711'] = func_5711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5711_call = mutated_mod.get_global_var('func_5711')
call_5712 = func_5711_call()
output = call_5712
func_5713 = relay.Function([], output)
mutated_mod['func_5713'] = func_5713
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5743 = relay.var("var_5743", dtype = "float64", shape = (6, 5, 7))#candidate|5743|(6, 5, 7)|var|float64
const_5744 = relay.const([[[-8.380148,1.273139,-9.578988,-2.399441,-5.329545,8.001962,-2.469824],[1.254490,-5.832375,0.717711,3.085140,-5.599989,-2.818104,7.437478],[-7.086741,-1.525531,9.599534,-6.366355,5.178656,-9.981685,-9.839272],[7.981306,-0.702360,-8.341802,-2.347566,-6.205308,6.821317,-8.279803],[-5.110039,-6.343276,4.860138,-7.829830,-6.789197,-6.493234,2.041440]],[[-5.350590,-9.727008,-4.433673,-1.057502,-2.776886,-7.237145,8.542271],[3.518507,8.474945,9.372193,7.118593,-5.022760,9.765619,-7.875353],[8.520144,-4.961078,9.373439,1.698550,-5.385343,-2.596476,-4.370570],[4.910149,-6.494078,-1.933577,-7.295938,3.258458,-9.079238,9.275508],[7.991401,7.253211,-2.782789,-6.360893,-1.508546,1.943887,7.832620]],[[3.907027,2.427654,2.939293,-1.042986,8.024218,-0.675369,-1.741369],[7.820712,-6.768524,1.811534,8.608867,-9.812144,-6.469904,4.588866],[1.594171,2.756208,0.352664,4.950237,4.856963,-9.044556,-4.299029],[0.100697,8.438068,4.649651,9.212493,3.352857,-1.727267,-0.238847],[-7.187178,-0.477154,2.095146,4.142904,-1.232663,0.565961,-3.577048]],[[2.678551,-5.056228,7.015055,0.771657,-6.618630,7.768714,5.609950],[0.868004,-2.215512,3.237022,9.083273,5.330023,7.658726,7.835327],[7.534143,-0.003953,-5.443627,7.776594,-2.313823,-6.476364,-6.535088],[-9.679541,9.057797,1.790490,-8.872096,9.850369,4.416094,-6.019455],[-3.514586,-4.753435,8.598000,-9.637640,0.675249,2.266924,-7.985826]],[[-7.453854,8.548715,-1.210067,-1.021685,8.166873,9.194603,-6.795830],[8.925137,5.816241,-6.315162,1.551189,6.355925,-4.566402,9.759545],[-1.113897,3.453414,-9.097823,-5.300173,-9.480258,7.520807,1.648447],[-5.168654,1.573286,-8.951420,6.878766,-0.566061,-2.352313,2.112169],[1.737238,-2.858110,-6.901908,-8.945402,-2.822017,-5.968344,-4.739702]],[[-4.041345,-3.338113,5.366459,-5.402656,-4.700523,3.107929,-5.043399],[-4.594709,-3.591283,0.161736,-6.828207,-0.458984,-4.185929,1.330147],[8.681083,-0.543887,2.446020,-2.892286,0.411413,-1.778011,7.693995],[-4.984341,5.969077,2.229221,-6.786330,-1.778084,-5.942124,-9.908486],[7.378530,7.666899,9.300313,4.003642,-6.893546,1.997687,-8.143529]]], dtype = "float64")#candidate|5744|(6, 5, 7)|const|float64
bop_5745 = relay.add(var_5743.astype('float64'), relay.reshape(const_5744.astype('float64'), relay.shape_of(var_5743))) # shape=(6, 5, 7)
func_4847_call = mod.get_global_var('func_4847')
func_4848_call = mutated_mod.get_global_var('func_4848')
call_5762 = relay.TupleGetItem(func_4847_call(), 0)
call_5763 = relay.TupleGetItem(func_4848_call(), 0)
func_5254_call = mod.get_global_var('func_5254')
func_5255_call = mutated_mod.get_global_var('func_5255')
call_5767 = relay.TupleGetItem(func_5254_call(), 1)
call_5768 = relay.TupleGetItem(func_5255_call(), 1)
uop_5776 = relay.sinh(call_5767.astype('float64')) # shape=(4, 13, 3)
uop_5778 = relay.sinh(call_5768.astype('float64')) # shape=(4, 13, 3)
bop_5794 = relay.subtract(const_5744.astype('float64'), relay.reshape(bop_5745.astype('float64'), relay.shape_of(const_5744))) # shape=(6, 5, 7)
output = relay.Tuple([call_5762,uop_5776,bop_5794,])
output2 = relay.Tuple([call_5763,uop_5778,bop_5794,])
func_5800 = relay.Function([var_5743,], output)
mod['func_5800'] = func_5800
mod = relay.transform.InferType()(mod)
mutated_mod['func_5800'] = func_5800
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5801 = relay.var("var_5801", dtype = "float64", shape = (6, 5, 7))#candidate|5801|(6, 5, 7)|var|float64
func_5800_call = mutated_mod.get_global_var('func_5800')
call_5802 = func_5800_call(var_5801)
output = call_5802
func_5803 = relay.Function([var_5801], output)
mutated_mod['func_5803'] = func_5803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4847_call = mod.get_global_var('func_4847')
func_4848_call = mutated_mod.get_global_var('func_4848')
call_5811 = relay.TupleGetItem(func_4847_call(), 0)
call_5812 = relay.TupleGetItem(func_4848_call(), 0)
output = call_5811
output2 = call_5812
func_5814 = relay.Function([], output)
mod['func_5814'] = func_5814
mod = relay.transform.InferType()(mod)
mutated_mod['func_5814'] = func_5814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5814_call = mutated_mod.get_global_var('func_5814')
call_5815 = func_5814_call()
output = call_5815
func_5816 = relay.Function([], output)
mutated_mod['func_5816'] = func_5816
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5834 = relay.var("var_5834", dtype = "uint8", shape = (6, 7, 2))#candidate|5834|(6, 7, 2)|var|uint8
const_5835 = relay.const([[[2,3],[3,-7],[9,-3],[8,7],[-2,-5],[10,1],[-6,10]],[[3,-5],[2,-5],[3,1],[3,-6],[-5,-10],[7,-6],[-9,1]],[[-1,-7],[1,-1],[9,7],[7,7],[-1,-1],[-10,-3],[-6,4]],[[-5,-3],[5,3],[1,6],[-10,-5],[10,9],[6,8],[-2,-3]],[[-10,-4],[-1,3],[6,-2],[8,10],[-3,-6],[-6,6],[4,-10]],[[-5,-5],[-9,1],[-7,-5],[-10,3],[-5,7],[7,-10],[-8,-6]]], dtype = "uint8")#candidate|5835|(6, 7, 2)|const|uint8
bop_5836 = relay.not_equal(var_5834.astype('bool'), relay.reshape(const_5835.astype('bool'), relay.shape_of(var_5834))) # shape=(6, 7, 2)
output = bop_5836
output2 = bop_5836
func_5841 = relay.Function([var_5834,], output)
mod['func_5841'] = func_5841
mod = relay.transform.InferType()(mod)
mutated_mod['func_5841'] = func_5841
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5842 = relay.var("var_5842", dtype = "uint8", shape = (6, 7, 2))#candidate|5842|(6, 7, 2)|var|uint8
func_5841_call = mutated_mod.get_global_var('func_5841')
call_5843 = func_5841_call(var_5842)
output = call_5843
func_5844 = relay.Function([var_5842], output)
mutated_mod['func_5844'] = func_5844
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5846 = relay.var("var_5846", dtype = "uint16", shape = ())#candidate|5846|()|var|uint16
var_5847 = relay.var("var_5847", dtype = "uint16", shape = (8, 5, 4))#candidate|5847|(8, 5, 4)|var|uint16
bop_5848 = relay.equal(var_5846.astype('bool'), var_5847.astype('bool')) # shape=(8, 5, 4)
output = relay.Tuple([bop_5848,])
output2 = relay.Tuple([bop_5848,])
func_5862 = relay.Function([var_5846,var_5847,], output)
mod['func_5862'] = func_5862
mod = relay.transform.InferType()(mod)
var_5863 = relay.var("var_5863", dtype = "uint16", shape = ())#candidate|5863|()|var|uint16
var_5864 = relay.var("var_5864", dtype = "uint16", shape = (8, 5, 4))#candidate|5864|(8, 5, 4)|var|uint16
output = func_5862(var_5863,var_5864,)
func_5865 = relay.Function([var_5863,var_5864,], output)
mutated_mod['func_5865'] = func_5865
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5877 = relay.var("var_5877", dtype = "int64", shape = (7, 13, 16))#candidate|5877|(7, 13, 16)|var|int64
var_5878 = relay.var("var_5878", dtype = "int64", shape = (7, 13, 16))#candidate|5878|(7, 13, 16)|var|int64
bop_5879 = relay.bitwise_xor(var_5877.astype('int64'), relay.reshape(var_5878.astype('int64'), relay.shape_of(var_5877))) # shape=(7, 13, 16)
func_4285_call = mod.get_global_var('func_4285')
func_4287_call = mutated_mod.get_global_var('func_4287')
call_5892 = relay.TupleGetItem(func_4285_call(), 0)
call_5893 = relay.TupleGetItem(func_4287_call(), 0)
func_3343_call = mod.get_global_var('func_3343')
func_3344_call = mutated_mod.get_global_var('func_3344')
call_5914 = relay.TupleGetItem(func_3343_call(), 1)
call_5915 = relay.TupleGetItem(func_3344_call(), 1)
bop_5916 = relay.maximum(bop_5879.astype('int16'), relay.reshape(var_5877.astype('int16'), relay.shape_of(bop_5879))) # shape=(7, 13, 16)
output = relay.Tuple([call_5892,call_5914,bop_5916,])
output2 = relay.Tuple([call_5893,call_5915,bop_5916,])
func_5924 = relay.Function([var_5877,var_5878,], output)
mod['func_5924'] = func_5924
mod = relay.transform.InferType()(mod)
mutated_mod['func_5924'] = func_5924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5924_call = mutated_mod.get_global_var('func_5924')
var_5926 = relay.var("var_5926", dtype = "int64", shape = (7, 13, 16))#candidate|5926|(7, 13, 16)|var|int64
var_5927 = relay.var("var_5927", dtype = "int64", shape = (7, 13, 16))#candidate|5927|(7, 13, 16)|var|int64
call_5925 = func_5924_call(var_5926,var_5927,)
output = call_5925
func_5928 = relay.Function([var_5926,var_5927,], output)
mutated_mod['func_5928'] = func_5928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3251_call = mod.get_global_var('func_3251')
func_3252_call = mutated_mod.get_global_var('func_3252')
call_5978 = relay.TupleGetItem(func_3251_call(), 3)
call_5979 = relay.TupleGetItem(func_3252_call(), 3)
output = relay.Tuple([call_5978,])
output2 = relay.Tuple([call_5979,])
func_5991 = relay.Function([], output)
mod['func_5991'] = func_5991
mod = relay.transform.InferType()(mod)
mutated_mod['func_5991'] = func_5991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5991_call = mutated_mod.get_global_var('func_5991')
call_5992 = func_5991_call()
output = call_5992
func_5993 = relay.Function([], output)
mutated_mod['func_5993'] = func_5993
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6012 = relay.var("var_6012", dtype = "int64", shape = (12, 2, 7))#candidate|6012|(12, 2, 7)|var|int64
var_6013 = relay.var("var_6013", dtype = "int64", shape = (12, 2, 7))#candidate|6013|(12, 2, 7)|var|int64
bop_6014 = relay.bitwise_or(var_6012.astype('int64'), relay.reshape(var_6013.astype('int64'), relay.shape_of(var_6012))) # shape=(12, 2, 7)
uop_6045 = relay.rsqrt(var_6012.astype('float32')) # shape=(12, 2, 7)
output = relay.Tuple([bop_6014,uop_6045,])
output2 = relay.Tuple([bop_6014,uop_6045,])
func_6051 = relay.Function([var_6012,var_6013,], output)
mod['func_6051'] = func_6051
mod = relay.transform.InferType()(mod)
var_6052 = relay.var("var_6052", dtype = "int64", shape = (12, 2, 7))#candidate|6052|(12, 2, 7)|var|int64
var_6053 = relay.var("var_6053", dtype = "int64", shape = (12, 2, 7))#candidate|6053|(12, 2, 7)|var|int64
output = func_6051(var_6052,var_6053,)
func_6054 = relay.Function([var_6052,var_6053,], output)
mutated_mod['func_6054'] = func_6054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_6056 = relay.TupleGetItem(func_5142_call(), 0)
call_6057 = relay.TupleGetItem(func_5143_call(), 0)
output = relay.Tuple([call_6056,])
output2 = relay.Tuple([call_6057,])
func_6058 = relay.Function([], output)
mod['func_6058'] = func_6058
mod = relay.transform.InferType()(mod)
output = func_6058()
func_6059 = relay.Function([], output)
mutated_mod['func_6059'] = func_6059
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6077 = relay.var("var_6077", dtype = "int32", shape = (5, 15, 12))#candidate|6077|(5, 15, 12)|var|int32
var_6078 = relay.var("var_6078", dtype = "int32", shape = (5, 15, 12))#candidate|6078|(5, 15, 12)|var|int32
bop_6079 = relay.equal(var_6077.astype('bool'), relay.reshape(var_6078.astype('bool'), relay.shape_of(var_6077))) # shape=(5, 15, 12)
uop_6083 = relay.atan(var_6078.astype('float64')) # shape=(5, 15, 12)
uop_6089 = relay.acos(uop_6083.astype('float64')) # shape=(5, 15, 12)
output = relay.Tuple([bop_6079,uop_6089,])
output2 = relay.Tuple([bop_6079,uop_6089,])
func_6096 = relay.Function([var_6077,var_6078,], output)
mod['func_6096'] = func_6096
mod = relay.transform.InferType()(mod)
var_6097 = relay.var("var_6097", dtype = "int32", shape = (5, 15, 12))#candidate|6097|(5, 15, 12)|var|int32
var_6098 = relay.var("var_6098", dtype = "int32", shape = (5, 15, 12))#candidate|6098|(5, 15, 12)|var|int32
output = func_6096(var_6097,var_6098,)
func_6099 = relay.Function([var_6097,var_6098,], output)
mutated_mod['func_6099'] = func_6099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2001_call = mod.get_global_var('func_2001')
func_2003_call = mutated_mod.get_global_var('func_2003')
call_6156 = relay.TupleGetItem(func_2001_call(), 0)
call_6157 = relay.TupleGetItem(func_2003_call(), 0)
func_3221_call = mod.get_global_var('func_3221')
func_3223_call = mutated_mod.get_global_var('func_3223')
call_6160 = func_3221_call(relay.reshape(call_6156.astype('float64'), [4, 13, 3]))
call_6161 = func_3221_call(relay.reshape(call_6156.astype('float64'), [4, 13, 3]))
func_3889_call = mod.get_global_var('func_3889')
func_3894_call = mutated_mod.get_global_var('func_3894')
var_6171 = relay.var("var_6171", dtype = "float64", shape = (3, 24))#candidate|6171|(3, 24)|var|float64
var_6172 = relay.var("var_6172", dtype = "float64", shape = (176,))#candidate|6172|(176,)|var|float64
call_6170 = relay.TupleGetItem(func_3889_call(relay.reshape(var_6171.astype('float64'), [72,]), relay.reshape(var_6172.astype('float64'), [176,]), relay.reshape(call_6160.astype('float64'), [4, 13, 3]), relay.reshape(var_6171.astype('float64'), [72,]), ), 9)
call_6173 = relay.TupleGetItem(func_3894_call(relay.reshape(var_6171.astype('float64'), [72,]), relay.reshape(var_6172.astype('float64'), [176,]), relay.reshape(call_6160.astype('float64'), [4, 13, 3]), relay.reshape(var_6171.astype('float64'), [72,]), ), 9)
output = relay.Tuple([call_6156,call_6160,call_6170,var_6171,var_6172,])
output2 = relay.Tuple([call_6157,call_6161,call_6173,var_6171,var_6172,])
func_6174 = relay.Function([var_6171,var_6172,], output)
mod['func_6174'] = func_6174
mod = relay.transform.InferType()(mod)
mutated_mod['func_6174'] = func_6174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6174_call = mutated_mod.get_global_var('func_6174')
var_6176 = relay.var("var_6176", dtype = "float64", shape = (3, 24))#candidate|6176|(3, 24)|var|float64
var_6177 = relay.var("var_6177", dtype = "float64", shape = (176,))#candidate|6177|(176,)|var|float64
call_6175 = func_6174_call(var_6176,var_6177,)
output = call_6175
func_6178 = relay.Function([var_6176,var_6177,], output)
mutated_mod['func_6178'] = func_6178
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6205 = relay.var("var_6205", dtype = "float32", shape = (12, 9, 10))#candidate|6205|(12, 9, 10)|var|float32
uop_6206 = relay.sinh(var_6205.astype('float32')) # shape=(12, 9, 10)
uop_6209 = relay.log10(uop_6206.astype('float32')) # shape=(12, 9, 10)
func_6174_call = mod.get_global_var('func_6174')
func_6178_call = mutated_mod.get_global_var('func_6178')
var_6215 = relay.var("var_6215", dtype = "float64", shape = (72,))#candidate|6215|(72,)|var|float64
var_6216 = relay.var("var_6216", dtype = "float64", shape = (176,))#candidate|6216|(176,)|var|float64
call_6214 = relay.TupleGetItem(func_6174_call(relay.reshape(var_6215.astype('float64'), [3, 24]), relay.reshape(var_6216.astype('float64'), [176,]), ), 3)
call_6217 = relay.TupleGetItem(func_6178_call(relay.reshape(var_6215.astype('float64'), [3, 24]), relay.reshape(var_6216.astype('float64'), [176,]), ), 3)
output = relay.Tuple([uop_6209,call_6214,var_6215,var_6216,])
output2 = relay.Tuple([uop_6209,call_6217,var_6215,var_6216,])
func_6224 = relay.Function([var_6205,var_6215,var_6216,], output)
mod['func_6224'] = func_6224
mod = relay.transform.InferType()(mod)
var_6225 = relay.var("var_6225", dtype = "float32", shape = (12, 9, 10))#candidate|6225|(12, 9, 10)|var|float32
var_6226 = relay.var("var_6226", dtype = "float64", shape = (72,))#candidate|6226|(72,)|var|float64
var_6227 = relay.var("var_6227", dtype = "float64", shape = (176,))#candidate|6227|(176,)|var|float64
output = func_6224(var_6225,var_6226,var_6227,)
func_6228 = relay.Function([var_6225,var_6226,var_6227,], output)
mutated_mod['func_6228'] = func_6228
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6274 = relay.const([[[-3.339697,4.452655,-2.756621,2.040132,-6.558548,4.181834],[-3.892126,-7.956755,6.805826,-0.425083,6.282547,9.489553]],[[2.605197,-3.308278,-3.337261,-4.419665,-2.188072,0.796712],[4.216676,4.911793,-7.032303,-2.607109,7.531412,6.213479]],[[-7.017873,6.648551,-4.415777,6.863895,-1.923956,9.106495],[0.834910,9.379665,-2.919374,-8.077772,-7.029747,7.190805]],[[-9.701278,3.820611,-6.010664,-1.290355,-8.800769,-3.172105],[0.597257,-0.837744,8.396643,-4.810137,-3.617584,-2.646456]],[[-8.670565,-1.955421,-5.399100,-8.371783,8.207574,9.179048],[-0.584890,1.774304,1.259828,7.329647,5.741141,-7.919263]],[[-7.713416,-3.568165,8.952549,6.994637,6.269610,-2.606745],[0.563848,6.931005,-2.501367,0.269780,-8.291230,5.420541]],[[-7.667120,-9.984980,7.727748,0.975951,6.720460,-8.444776],[-0.531391,9.795563,0.296155,-4.103363,-5.546954,5.949113]],[[-5.258461,6.558936,2.908871,-8.395403,5.514490,-8.731730],[0.364795,-3.836434,0.987861,4.174144,-8.334407,3.127546]],[[-7.796151,4.056069,5.426340,5.110774,6.954494,4.918233],[-6.612857,-9.016026,-3.786049,-4.088334,-6.813537,6.788618]],[[9.224002,-4.840972,3.097031,7.237293,1.650868,-4.451542],[9.282732,-2.095188,-2.989825,-1.177389,1.822898,-4.275990]],[[6.370474,6.916936,-6.377601,4.858123,-5.402904,1.055044],[8.562084,6.448646,9.892206,-2.112299,-2.376159,2.334341]],[[-8.472983,1.774061,7.279742,1.361829,-8.420176,-5.130940],[5.247604,-0.913808,7.184164,8.985712,-5.132317,6.340778]]], dtype = "float32")#candidate|6274|(12, 2, 6)|const|float32
uop_6275 = relay.asin(const_6274.astype('float32')) # shape=(12, 2, 6)
func_5142_call = mod.get_global_var('func_5142')
func_5143_call = mutated_mod.get_global_var('func_5143')
call_6305 = relay.TupleGetItem(func_5142_call(), 1)
call_6306 = relay.TupleGetItem(func_5143_call(), 1)
output = relay.Tuple([uop_6275,call_6305,])
output2 = relay.Tuple([uop_6275,call_6306,])
func_6332 = relay.Function([], output)
mod['func_6332'] = func_6332
mod = relay.transform.InferType()(mod)
output = func_6332()
func_6333 = relay.Function([], output)
mutated_mod['func_6333'] = func_6333
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6337 = relay.var("var_6337", dtype = "float32", shape = (10, 7, 8))#candidate|6337|(10, 7, 8)|var|float32
uop_6338 = relay.log10(var_6337.astype('float32')) # shape=(10, 7, 8)
func_1305_call = mod.get_global_var('func_1305')
func_1311_call = mutated_mod.get_global_var('func_1311')
const_6349 = relay.const([1.219656,0.532562,2.136889,-2.114426,-6.067911,-6.614403,-9.783738,-3.257818,-4.351577,6.783411,-9.923427,-7.488552,0.011758,8.396706,4.692081,-1.201644,-2.081787,2.978130,2.187847,8.441428,8.895769,-1.892564,-8.257374,8.863704,-6.582299,0.827298,3.721927,-4.552058,-1.129156,3.631959,1.397293,6.168229,-1.212278,-8.301774,-2.778264,8.840804,0.393327,0.804339,-4.673258,-1.680518,5.637210,0.690823,2.791755,0.531219,-2.342442,6.765231,8.620410,0.978613,4.567911,2.433996,9.607774,3.115573,-5.838690,-8.394111,4.777296,-5.603859,-1.571414,-4.281286,4.876369,-8.926613,-6.608350,-9.020428,-3.926151,4.716490,7.295211,1.012043,-9.617173,5.435693,-0.772673,4.549235,-4.994905,-6.229828,-6.336007,-4.834281,3.823652,1.736227,-0.611901,2.429733,7.989959,7.602630,4.764419,8.184078,6.578180,3.001493,3.778503,-9.472641,-3.289561,-7.475853,9.187709,-1.084731,7.424138,-5.450363,4.374009,-6.320785,5.087276,2.516477,1.783065,-0.520067,9.399513,-1.670096,-6.846537,-0.122437,6.146308,8.526980,1.427159,5.060468,9.305011,2.212587,5.188915,4.400311,2.336640,-0.461262,-8.975164,7.402194,-1.279147,-6.215922,-7.683357,6.732081,6.063083,-1.251927,-5.286085,-3.637736,-7.346829,5.862894,9.051510,-9.372332,8.148925,4.814256,2.529218,-6.614879,-9.700519,-0.179615,5.269501,5.763203,0.912334,-0.786768,4.854870,9.683583,-8.344177,-5.992337,-3.337109,-9.912370,5.359994,5.852256,-1.327671,-1.772960,-0.354106,-4.766564,-5.771612,-2.820127,9.018168,1.607836,0.900018,-5.253638,9.997731,-5.554950,7.861006,-0.557636,-7.597872,8.282885,6.806824,-6.950001,6.933108,7.261847,-2.156127,2.286847,-2.949352,-3.923058,3.222144,5.426819,5.259110,-2.961497,-7.816550,5.191137,-8.648096,-1.721235,-7.285542,6.170738,0.209201,8.397467,9.464423,3.444939,-7.297919,0.301912,0.574846,-4.737953,-8.414993,7.738542,0.714205,-9.979890,-6.762916,9.895778,2.559769,-2.767828,-5.751797,-7.241539,-7.935262,1.163514,6.024454,-5.713295,-8.005041,-9.830465,-4.761728,3.251942,-0.327552,8.890169,-9.287549,-8.961760,-2.639577,-5.215003,-1.111065,-8.402593,3.661801,0.949753,-8.940297,1.277488,6.188203,-4.119650,8.138240,8.392714,0.384463,-4.744452,-3.100660,8.115832,6.742294,3.203445,-8.360085,-9.394594,1.182998,-4.600705,-4.431190,-6.924040,9.880362,9.951858,3.254843,5.153623,1.839663,-9.365885,-9.744264,-9.137377,-2.681740,0.041982,0.313506,-3.858692,-4.599215,1.285803,-8.841332,-1.532685,-5.288239,-7.143431,-2.508341,-7.018312,-9.589799,8.402714,-2.291438,-0.433559,2.679066,8.937129,-7.167438,-8.674111,-7.553771,0.734724,8.449526,7.023552,8.873032,7.919297,5.588368,5.055190,7.962074,-1.879495,4.804319,-2.031714,-9.057786,1.016656,5.947127,0.895415,4.851145,-8.807140,-0.442852,-1.980424,6.953075,-8.839028,7.262017,-0.281068,-5.509301,-7.692012,-5.362657,8.426907,-4.071462,5.600976,-1.494976,-9.582926,9.072885,-4.603361,-4.103055,8.565277,4.615838,-9.972452,9.390664,6.828173,9.997477,7.205361,-3.217560,-6.172432,-1.212915,-1.709597,4.009445,-4.238294,3.260115,-5.375990,-1.407972,5.368790,3.728885,-5.625977,9.259975,8.628348,-8.305029,-9.397955,8.848325,4.314359,-0.638598,-6.104621,-7.017498,-2.162569,6.343600,9.183509,-7.804421,7.946982,-9.400046,-2.022300,1.979247,-3.592516,7.568340,-2.870286,-5.928096,-5.748166,4.632907,-8.589473,3.331586,0.290676,3.367551,-4.288309,-3.827104,-8.023341,-1.949887,-6.084951,-0.100234,7.749435,3.699125,-7.957434,1.253042,-0.421995,1.271834,9.051879,4.523012,4.567254,7.285533,-4.043006,-6.448174,2.548729,0.093626,-8.315859,-4.695757,4.295580,-4.018141,7.818611,-1.029433,-7.952388,-3.995692,9.317890,8.726229,1.733641,-3.639658,-3.315975,-5.070781,5.631828,2.367894,8.257778,2.666692,9.443549,-0.133584,-5.895532,-7.827780,-3.763272,-0.182246,-8.621668,-6.195704,-6.306910,7.630288,3.680557,-3.682534,1.446600,7.246925,-1.680576,-5.112000,-2.914848,-8.489099,8.299914,8.806005,-5.684688,8.180307,2.387486,-0.366077,6.426613,-0.607849,5.126751,6.718242,-5.399558,3.857979,-8.750725,-7.736271,-4.862850,3.722541,0.331988,0.018594,-3.023357,-3.174837,-8.742522,4.281147,-9.879989,0.436370,4.830275,0.974405,6.525961,-7.133023,-4.965375,-8.804145,1.280559,-3.872522,-5.585197,-6.919871,5.487931,4.618463,1.226616,9.008703,-5.350469,5.262647,9.299134,-6.053487,1.493257,-8.360280,4.694320,-7.179907,-0.989305,-6.032521,-9.756604,1.930803,4.252741,-1.805853,-3.642790,6.965316,-9.990199,-2.151523,3.102004,-0.886685,8.022261,-5.675292,9.319904,0.329428,1.383024,-4.925725,3.574493,5.056034,-9.758525,0.014023,8.698721,-8.067147,-3.284263,-1.068514,3.080012,-6.927348,6.909678,0.703983,-8.734567,8.335182,-8.442115,0.357274,6.178823,8.349480,-7.700014,-7.717227,8.848320,0.162087,2.882333,3.828647,-2.565999,1.256724,-9.765574,-1.978186,-5.990716,-4.118738,-1.157592,-4.832498,1.622482,4.752009,-1.813936,0.887648,-8.723188,2.578806,-3.897847,-1.745357,7.472080,7.144534,9.263289,-6.917754,2.605015,-0.097281,-2.533201,6.337270,-4.620535,-0.045889,7.607300,-8.981053,-9.147000,1.435662,-1.336363,-4.105443,-1.064773,3.848376,9.595643,2.278025,8.914473,-5.880985,-9.214115,7.891445,4.695060,4.616106,0.793819,-6.504778,-4.753189,5.966069,-2.801538,-7.415691,5.094495,-3.005267,1.423333,8.181789,4.593195,-7.669960,3.140656,9.256623,1.857427,3.457770,-0.190757,2.162996,-6.235553,-6.815881,-3.012674,8.411982,-9.336377,-8.388714,5.526656,-8.208434,-5.890679,-3.440644,-2.961361,-7.117748,-8.497346,4.981819,1.243609,3.072996,9.517555,-3.368929,-8.472988,1.510700,4.065082,-2.908040,6.818736,-5.618579,-3.348930,9.547429,-0.243745,-4.050688,-2.317217,8.764778,-4.998313,3.811610,-4.070034,3.407425,4.474252,-5.306365,8.939080,0.864747,0.013004,-7.038622,-1.139319,8.274155,4.817372,3.229537,9.331917,8.188510,-6.732175,6.519564,4.755192,7.194987,1.224935,2.553853,9.188720,6.881808,-0.848650,-4.371945,6.216307,1.511003,9.017991,-0.072528,-3.547783,3.865148,-6.026266,6.033824,8.519908,-5.696804,-1.845189,4.517813,-1.405428,8.608796,-1.695585,0.040321,8.015363,-1.479727,-5.305558,7.300854,7.788817,4.787628,0.406202,8.020061,4.996727,4.067934,4.387767,4.401560,6.238301,0.063604,-3.768378,6.921532,1.541503,1.206622,4.822609,-3.184312,2.883346,-7.702343,5.078378,8.876668,-4.858218,-9.938567,-0.025540,1.967802,-1.692133,9.668099,-5.384870,-1.908090,2.546891,2.013974,-8.965208,9.950085,8.392537,-8.444963,3.030268,9.327391,-5.671020,4.769053,-3.662540,-3.614159,5.083650,9.102047,1.222770,-2.074512,9.060673,0.523957,5.695153,6.426471,-7.806744,1.534470,-5.501462,5.762416,9.160906,0.815749,-4.962983,-9.195082,3.586956,6.178603,-3.921014,6.082297,9.838487,1.647188,9.427226,3.712982,1.011533,1.686900,3.949965,-5.422044,-0.484329,-4.154078,-4.828380,-0.298273,0.542881,-0.399846,3.665995,5.667658,-5.949216,-4.168881,-4.438547,7.163456,-2.902260,7.190840,-4.625994,-2.659951,4.295836,6.782233,-6.647529,1.631183,6.496359,3.701522,-2.070706,7.725718,9.476995,-8.303822,3.850115,3.477748,9.243986,7.951562,2.270712,-8.310773,3.233007,-3.348791,8.275896,6.124962,7.627112,-2.509053,6.873891,-3.530361,3.360211,-4.478081,-8.809385,-1.554393,-8.442293,3.511575,-9.406414,-4.320657,9.226443,8.956436,9.855314,7.446080,6.256162,-5.160924,0.636631,4.766415,6.434662,3.256194,-7.234687,0.889199,-7.465429,-8.962616,-8.546561,-6.086992,1.317374,8.235036,-2.346582,4.983874,-8.139773,-8.737815,-2.118728,-8.180834,-8.228793,6.012639,7.413861,1.051716,-9.960477,-3.284104,6.735726,-2.079300,-8.235969,6.759923,3.004935,-4.591204,-0.281226,7.645218,2.226026,-5.945048,-2.313404,-4.971034,5.055814,3.462516,0.482431,-5.265114,-1.390788,3.324311,-1.987380,0.914120,3.515005,7.970400,-6.725807,-8.675289,-8.464383,7.229105,-3.351748,5.958302,-4.136174,0.246087,-3.677710,-4.285469,8.596651,-9.878420,-5.867978,0.689702,9.984270,2.078242,4.368630,2.041532,-1.398416,-3.945996,-8.779298,-1.897553,-2.563558,-8.652821,-3.018533,3.453272,-3.344589,9.902855,3.954881,-3.165188,-7.135402,6.164692,8.918691,9.626570,4.660027,5.035785,8.656273,-1.394696,4.606989,3.777034,4.686904,4.654517,-1.269430,-3.854456,1.840550,-9.321693,-0.184113,-1.439344,7.206566,-0.747218,3.931913,-8.973953,2.500430,6.777583,-6.784839,-1.447446,6.350041,1.191130,1.559380,-6.785740,4.072924,-5.527474,-7.793701,4.767355,-5.352508,-1.641229,2.109581,5.413776,-4.121520,-8.679601,1.697940,-3.759566,-1.787857,-3.408150,-9.360248,6.365632,4.223621,3.102641,-0.927393,3.755479,-6.898535,-5.359342,0.787461,2.202288,-7.436378,-9.054148,-9.180708,0.064391,-3.607413,-5.026821,-0.386588,-3.661843,3.954585,4.317828,5.907896,8.946170,-7.761297,5.491509,0.105775,8.641876,-9.647641,4.717626,0.029638,-8.966481,-9.777123,-9.038137,-4.956388,-4.915355,-0.947930,1.008863,9.054184,-6.771670,-8.725154,4.632098,-2.299840,-3.293924,-7.994868,0.243072,-7.954047,5.238688,4.834312,5.946487,6.339900,2.263041,2.031542,8.134472,3.209687,-7.119166,6.368537,1.604754,5.266258,9.268296,4.426013,6.634716,-1.114943,-7.407595,-4.104978,0.297853,-0.612808,9.375586,1.547229,-8.775107,-1.210761,-4.167978,-1.095841,6.425345,2.753172,5.745450,-7.512718,-3.087768,4.186537,-5.622810,-6.474106,2.570320,-8.032814,-5.466831,7.636776,2.182467,-6.146745,-9.728944,3.653074,-8.360139,-1.733951,-4.286603,-1.808674,2.957700,2.030349,6.639435,3.549465,-4.947684,8.406629,3.416567,8.381656,2.573784,-2.603613,-2.914621,7.278648,6.674504,-8.852799,-6.592118,-5.599228,8.587844,0.368845,-4.802545,2.616390,8.603021,5.122847,-1.679442,7.813600,-7.434449,9.671077,1.444511,3.683762,-4.821412,-0.561410,-1.448971,-2.583836,0.459162,-1.723367,-4.953569,-8.388502,1.422943,-3.509284,8.895477,9.201321,2.508605,-0.548949,0.202963,1.895376,-7.900137,6.033554,0.391778,-4.193096,6.482005,-7.270586,-2.367751,1.791692,-3.062414,4.323983,3.733053,-4.527635,3.700897,-2.084636,-7.312027,-6.923503,9.038900,-9.445901,8.870869,0.878630,3.013810,-2.241910,3.529949,5.593492,7.854773,8.238086,8.857526,-5.160327,-6.615656,-8.516549,-9.462556,0.910638,-7.328841,-8.089975,-7.787725,-0.430340,8.489908,-4.979662,7.135021,1.753724,-5.389554,8.179582,-7.728714,9.309837,-3.324080,2.110560,-3.703180,1.370460,-0.288029,6.021087,6.335984,3.904508,-1.502802,3.985696,5.093334,7.409137,7.912628,-6.726226,-1.532981,4.176597,3.759677,1.224040,8.912958,-5.235759,9.201634,1.531925,6.059124,3.088722,-5.867525,4.817704,8.930474,9.490998,-9.891221,-8.933489,6.755296,4.878055,1.894375,9.754782,1.201705,-0.251555,2.739343,-6.604068,-4.550002,-2.718802,-2.677825,8.479944,-4.905744,7.442583,-6.594833,0.284080,6.301855,-3.062193,-8.029090,1.545086], dtype = "float32")#candidate|6349|(1092,)|const|float32
const_6350 = relay.const([-3.457526,-1.370558,-3.600684,5.945382,3.435381,9.556860,-6.567950,0.262045,7.922249,-9.023856,1.476763,-5.928862,-7.436248,1.283553,3.120945,6.826753,8.832250,-9.726905,7.840381,-6.353194,-5.717035,-3.722892,7.494206,-1.905101,3.708997,-7.541886,8.743861,6.999665,0.221980,5.581379,-4.948371,-0.849343,8.903276,3.061006,-1.516982,7.543279,2.479830,-9.687512,5.431926,8.260796,4.211145,-8.193669,-6.173254,-1.657910,-3.375234,-6.759866,9.524555,-2.791428,-2.779729,8.040982,-4.935472,3.676022,1.811812,-3.636044,0.540444,1.139038,5.235429,4.972608,-4.474209,4.997121,5.004839,3.613764,-0.326874,6.360824,0.574993,-0.024407,3.984028,9.958198,9.531069,-5.818888,8.074878,2.749650,8.118584,3.375135,8.548079,-2.686396,-0.723560,1.173856,-3.856591,1.581948,2.248418,2.525477,-1.034274,7.622553,-5.490669,-9.987399,-6.664660,-0.013862,-4.521424,6.113732,-6.964668,-4.601250,6.696990,3.212389,5.006714,3.297687,-2.494773,4.293311,4.731927,-3.410956,-8.761604,0.864289,0.840722,-1.918854,2.403887,7.274580,-6.714452,3.470929,6.138376,7.580929,4.630220,4.664080,0.485129,-4.840438,-6.765351,-2.939330,5.951742,8.289755,6.923817,-0.902633,4.156330,-5.458920,-7.593319,8.029363,-7.348606,-0.396477,5.948054,-8.422455,-9.778631,9.139860,2.762846,-8.343674,2.405821,7.500942,2.561797,-7.709873,7.950611,-9.304870,-6.093759,1.477439,-2.359181,-7.219450,-5.487029,-5.664406,-8.651221,8.044807,0.042007,-5.173186,9.461993,9.230464,-1.430223,7.534965,-1.318222,0.441355,2.438763,-5.258870,-4.938990,8.084133,5.199091,8.436735,7.483002,4.629682,-9.367992,9.543585,-3.657188,8.236201,-9.834441,-7.630079,-7.014547,7.637286,3.886065,-5.564372,0.292700,-2.937775,1.153960,-1.978036], dtype = "float64")#candidate|6350|(176,)|const|float64
call_6348 = relay.TupleGetItem(func_1305_call(relay.reshape(const_6349.astype('float32'), [12, 13, 7]), relay.reshape(const_6349.astype('float32'), [12, 13, 7]), relay.reshape(const_6349.astype('float32'), [12, 13, 7]), relay.reshape(const_6350.astype('float64'), [4, 44]), ), 5)
call_6351 = relay.TupleGetItem(func_1311_call(relay.reshape(const_6349.astype('float32'), [12, 13, 7]), relay.reshape(const_6349.astype('float32'), [12, 13, 7]), relay.reshape(const_6349.astype('float32'), [12, 13, 7]), relay.reshape(const_6350.astype('float64'), [4, 44]), ), 5)
func_6096_call = mod.get_global_var('func_6096')
func_6099_call = mutated_mod.get_global_var('func_6099')
const_6363 = relay.const([[4,-3,10,-4,7,10,-6,-8,-5,10,5,8,-10,5,-8,5,6,4,-4,-10,2,2,2,6,-10,9,6,5,2,3,9,-3,6,1,-6,10,1,-5,-3,-2,7,-8,-9,-10,1,2,-1,-6,-4,4,8,-9,7,5,5,3,-9,5,-4,-2,10,6,10,-8,-9,-8,8,9,1,7,3,10,-3,-3,-1,1,-8,-3,-10,-5,-5,9,8,1,4,-9,-10,-1,5,-9,7,-8,-8,3,3,-7,9,-10,-4,10,8,4,-10,10,-9,10,8,10,10,-4,-1,9,-8,1,-1,1,2,-9,10,-6,6,-4,-7,-2,8,-9,-6,-1,1,-8,2,-4,-5,-7,-2,-6,2,-5,-4,5,3,-3,6,5,5,-2,1,3,8,-2,4,1,8,6,-2,-6,-7,-6,-2,-2,2,-3,-1,2,-8,-10,-4,10,-8,6,7,7,-10,1,-3,8,-9,10,-9,9,-7,-2,1,-5,-8,1,2,3,8,-3,-9,6,-1,-5,-1,8,5,-10,-1,5,5,-7,3,-10,-6,-2,3,-10,-8,-5,-3,-8,-2,-5,5,-2,-6,-9,1,-10,2,9,-3,10,-7,-2,-9,-7,1,3,1,-10,6,-8,1,-1,1,10,2,5,6,-10,-10,-5,-10,-8,-4,10,10,-5,5,5,10,9,-7,1,-2,8,7,-4,2,8,2,3,5,2,8,3,3,9,-8,3,1,-1,-7,-5,-9,-2,-10,-3,-7,-4,-4,-2,-1,-9,1,-9,5,1,7,8,9,-6,-7,4,4,8,5,7,10,4,-9,-4,-3,6,-10,-5,-6,-8,10,8,7,3,5,7,7,-9,-4,-9,-9,-8,-1,8,2,2,-7,5,6,6,-10,-9,4,-1,2,-7,7,1,-6,5,6,-1,10,7,-8,1,5,2,9,-10,-5,3,-2,-10,-7,10,4,6,-9,-2,-5,-4,-3,2,10,-5,10,-7,-4,3,-3,5,-4,3,-4,-2,-8,-9,-3,-4,-2,-7,9,-5,10,6,-10,-3,2,10,1,-4,10,-3,-4,-5,-8,-9,8,-9,1,-4,-6,5,-2,-5,9,-5,7,-2,-5,-9,1,9,1,2,5,5,4,1,-7,1,10,-4,2,-5,-3,9,2,5,-7,-9,2,6,-4,-2,-5,-6,6,9,-6,-4,-1,-2,2,8,4,-4,1,-2,6,7,-6,-4,5,-10,-10,-7,-9,3,6,-3,-9,9,-6,7,5,-3,9,5,3,-4,-10,-1,1,2,-5,10,-3,-4,-9,3,6,-9,5,10,7,-10,-6,10,7,5,-9,8,5,1,4,2,-1,-9,-2,6,-3,-8,9,6,-10,-10,7,10,-9,-8,6,4,-8,4,4,-1,6,7,9,-3,-6,9,2,-7,-2,-5,4,4,4,4,-7,4,6,1,5,-6,9,-4,5,-2,-6,-5,-8,-10,8,10,-9,-9,8,-10,-3,5,10,-3,-1,-3,-1,5,9,4,1,3,2,5,-3,4,1,-8,-7,7,-5,4,1,7,-7,5,7,-8,-1,7,-9,-10,10,-1,-10,-4,-1,10,8,-1,-10,-2,6,4,-4,3,-3,4,-4,10,-7,6,-3,-9,-6,7,-9,-3,-9,-4,9,8,2,-5,1,8,-2,-6,-3,-7,7,6,-2,-1,-7,6,2,-10,-10,-1,-2,8,5,10,-3,10,-2,-8,-7,-7,-3,2,9,-10,-9,-9,-1,-9,-3,4,-8,7,-3,4,3,-4,-6,-2,10,-5,4,-4,-3,1,1,-3,2,-9,-7,2,-4,-6,7,-5,-1,-8,4,-2,-4,-2,-8,2,-7,2,-3,3,5,8,-7,-10,5,7,-9,-6,-10,6,5,10,10,-5,-8,-10,8,-6,-5,5,-4,9,1,-4,8,-1,-1,-7,4,-4,2,7,4,-7,10,8,6,7,7,-8,-5,-7,1,5,-8,8,-3,-10,-10,7,-8,-6,-4,-10,6,5,-9,8,-8,3,-2,-4,8,5,10,10,6,-2,10,-3,-2,-8,1,-10,8,5,-6,8,-4,4,4,-3,1,-5,1,-7,-6,-5,10,-8,-1,-2,-3,-3,-3,2,-4,-10,-2,7,-2,-6,1,9,-7,2,1,6,-4,10,9,-5,-9,-9,-1,-4,-1,3,-2,-3,-9,-10,1,-4,-7,2,-8,-9,3,8,4,-7,4,7,2,8,9,2,4,-4,-10,-6,-5,-5,-5,-4,-9,-4,-1,-1,-4,-4,5,-10,-2,1,-1,10,6,-6,-2,-9,-1,2,-7,5,-1,2,-5,-6,-9,8,-6,7,6,2,-4,-7,-6,-7,3,4,-2,-2,1,5,5,-9,4,2,1,-7,4,10,-4,-5,-2,1,-7,3,10,-7,5,-7,-4,-8,10,-2,9,4,-10,10]], dtype = "int32")#candidate|6363|(1, 900)|const|int32
call_6362 = relay.TupleGetItem(func_6096_call(relay.reshape(const_6363.astype('int32'), [5, 15, 12]), relay.reshape(const_6363.astype('int32'), [5, 15, 12]), ), 1)
call_6364 = relay.TupleGetItem(func_6099_call(relay.reshape(const_6363.astype('int32'), [5, 15, 12]), relay.reshape(const_6363.astype('int32'), [5, 15, 12]), ), 1)
func_2275_call = mod.get_global_var('func_2275')
func_2277_call = mutated_mod.get_global_var('func_2277')
call_6365 = relay.TupleGetItem(func_2275_call(), 0)
call_6366 = relay.TupleGetItem(func_2277_call(), 0)
output = relay.Tuple([uop_6338,call_6348,const_6349,const_6350,call_6362,const_6363,call_6365,])
output2 = relay.Tuple([uop_6338,call_6351,const_6349,const_6350,call_6364,const_6363,call_6366,])
func_6371 = relay.Function([var_6337,], output)
mod['func_6371'] = func_6371
mod = relay.transform.InferType()(mod)
mutated_mod['func_6371'] = func_6371
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6372 = relay.var("var_6372", dtype = "float32", shape = (10, 7, 8))#candidate|6372|(10, 7, 8)|var|float32
func_6371_call = mutated_mod.get_global_var('func_6371')
call_6373 = func_6371_call(var_6372)
output = call_6373
func_6374 = relay.Function([var_6372], output)
mutated_mod['func_6374'] = func_6374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2690_call = mod.get_global_var('func_2690')
func_2692_call = mutated_mod.get_global_var('func_2692')
call_6391 = func_2690_call()
call_6392 = func_2690_call()
func_6058_call = mod.get_global_var('func_6058')
func_6059_call = mutated_mod.get_global_var('func_6059')
call_6393 = relay.TupleGetItem(func_6058_call(), 0)
call_6394 = relay.TupleGetItem(func_6059_call(), 0)
output = relay.Tuple([call_6391,call_6393,])
output2 = relay.Tuple([call_6392,call_6394,])
func_6421 = relay.Function([], output)
mod['func_6421'] = func_6421
mod = relay.transform.InferType()(mod)
output = func_6421()
func_6422 = relay.Function([], output)
mutated_mod['func_6422'] = func_6422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3417_call = mod.get_global_var('func_3417')
func_3419_call = mutated_mod.get_global_var('func_3419')
call_6488 = relay.TupleGetItem(func_3417_call(), 0)
call_6489 = relay.TupleGetItem(func_3419_call(), 0)
func_2964_call = mod.get_global_var('func_2964')
func_2966_call = mutated_mod.get_global_var('func_2966')
const_6494 = relay.const([6.961513,9.311902,-2.927867,-3.147973,7.282335,8.983804,9.468987,-7.719218,-9.490996,-0.174583,-3.335282,8.211901,-2.521591,-1.750678,-5.635547,7.772337,9.644159,1.669943,-8.389504,-9.556069,5.617581,0.714738,-7.667888,4.392527,-5.258277,-9.184375,-8.574704,-4.818094,-0.186425,-3.015338,-4.725287,-6.415282,-1.646036,9.552037,6.299533,-0.853539,3.497907,3.234809,8.214566,-2.955792,-8.707284,-2.797788,-1.358169,-0.384361,-8.647512,-9.209775,-2.182706,-4.283908,-1.797247,2.701458,1.541393,-9.545153,6.598768,-1.849415,-8.939491,-3.195531,6.426188,2.024306,2.149598,-6.136904,-0.182147,-7.891127,5.556912,1.282978,-1.380794,3.329540,-9.148893,5.004276,6.335050,5.202209,-9.754302,6.303589,-3.790926,-6.032505,-6.119269,5.436295,1.313975,6.494316,-2.270324,-3.130852,6.375313,-5.444213,-7.533830,4.170842,-8.318439,0.226026,-3.238413,-1.164340,-7.207542,1.162111,-3.122119,2.189618,-4.589839,-8.404591,-5.011060,-8.662511,8.467334,0.365809,-4.755852,9.578735,3.378685,0.950312,2.714717,5.412043,-9.160362,-0.499113,5.090338,-0.262930,-4.468148,2.357919,-6.439711,-3.006818,-0.908437,5.805480,-8.615134,0.522712,1.274987,-1.211597,6.903339,-5.189027,-5.237907,-4.072601,7.353585,1.291860,1.565396,-8.201647,-6.517379,5.284843,-5.512967,8.644845,-0.239310,3.122371,-2.526027,-7.953230,9.296858,4.933324,-3.307088,7.825700,3.136247,7.955898,6.547993,-7.347371,1.500714,6.728166,-1.852455,-2.499910,1.050561,-3.721155,2.537424,9.940186,-9.120196,-2.968164,-2.368060,-4.175561,6.851020,9.036607], dtype = "float64")#candidate|6494|(156,)|const|float64
call_6493 = relay.TupleGetItem(func_2964_call(relay.reshape(const_6494.astype('float64'), [4, 13, 3])), 0)
call_6495 = relay.TupleGetItem(func_2966_call(relay.reshape(const_6494.astype('float64'), [4, 13, 3])), 0)
output = relay.Tuple([call_6488,call_6493,const_6494,])
output2 = relay.Tuple([call_6489,call_6495,const_6494,])
func_6499 = relay.Function([], output)
mod['func_6499'] = func_6499
mod = relay.transform.InferType()(mod)
output = func_6499()
func_6500 = relay.Function([], output)
mutated_mod['func_6500'] = func_6500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2035_call = mod.get_global_var('func_2035')
func_2036_call = mutated_mod.get_global_var('func_2036')
call_6565 = func_2035_call()
call_6566 = func_2035_call()
output = relay.Tuple([call_6565,])
output2 = relay.Tuple([call_6566,])
func_6583 = relay.Function([], output)
mod['func_6583'] = func_6583
mod = relay.transform.InferType()(mod)
output = func_6583()
func_6584 = relay.Function([], output)
mutated_mod['func_6584'] = func_6584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3191_call = mod.get_global_var('func_3191')
func_3193_call = mutated_mod.get_global_var('func_3193')
call_6592 = func_3191_call()
call_6593 = func_3191_call()
output = relay.Tuple([call_6592,])
output2 = relay.Tuple([call_6593,])
func_6613 = relay.Function([], output)
mod['func_6613'] = func_6613
mod = relay.transform.InferType()(mod)
mutated_mod['func_6613'] = func_6613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6613_call = mutated_mod.get_global_var('func_6613')
call_6614 = func_6613_call()
output = call_6614
func_6615 = relay.Function([], output)
mutated_mod['func_6615'] = func_6615
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6650 = relay.var("var_6650", dtype = "uint32", shape = (9, 15, 15))#candidate|6650|(9, 15, 15)|var|uint32
var_6651 = relay.var("var_6651", dtype = "uint32", shape = (9, 15, 15))#candidate|6651|(9, 15, 15)|var|uint32
bop_6652 = relay.left_shift(var_6650.astype('uint32'), relay.reshape(var_6651.astype('uint32'), relay.shape_of(var_6650))) # shape=(9, 15, 15)
uop_6656 = relay.rsqrt(bop_6652.astype('float64')) # shape=(9, 15, 15)
var_6661 = relay.var("var_6661", dtype = "uint32", shape = (9, 15, 15))#candidate|6661|(9, 15, 15)|var|uint32
bop_6662 = relay.floor_mod(var_6651.astype('float32'), relay.reshape(var_6661.astype('float32'), relay.shape_of(var_6651))) # shape=(9, 15, 15)
bop_6666 = relay.bitwise_or(var_6651.astype('int64'), relay.reshape(uop_6656.astype('int64'), relay.shape_of(var_6651))) # shape=(9, 15, 15)
func_5695_call = mod.get_global_var('func_5695')
func_5698_call = mutated_mod.get_global_var('func_5698')
var_6673 = relay.var("var_6673", dtype = "float32", shape = (390, 3))#candidate|6673|(390, 3)|var|float32
call_6672 = func_5695_call(relay.reshape(var_6673.astype('float32'), [10, 9, 13]))
call_6674 = func_5695_call(relay.reshape(var_6673.astype('float32'), [10, 9, 13]))
uop_6688 = relay.sigmoid(bop_6666.astype('float64')) # shape=(9, 15, 15)
func_3417_call = mod.get_global_var('func_3417')
func_3419_call = mutated_mod.get_global_var('func_3419')
call_6699 = relay.TupleGetItem(func_3417_call(), 0)
call_6700 = relay.TupleGetItem(func_3419_call(), 0)
output = relay.Tuple([bop_6662,call_6672,var_6673,uop_6688,call_6699,])
output2 = relay.Tuple([bop_6662,call_6674,var_6673,uop_6688,call_6700,])
func_6701 = relay.Function([var_6650,var_6651,var_6661,var_6673,], output)
mod['func_6701'] = func_6701
mod = relay.transform.InferType()(mod)
mutated_mod['func_6701'] = func_6701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6701_call = mutated_mod.get_global_var('func_6701')
var_6703 = relay.var("var_6703", dtype = "uint32", shape = (9, 15, 15))#candidate|6703|(9, 15, 15)|var|uint32
var_6704 = relay.var("var_6704", dtype = "uint32", shape = (9, 15, 15))#candidate|6704|(9, 15, 15)|var|uint32
var_6705 = relay.var("var_6705", dtype = "uint32", shape = (9, 15, 15))#candidate|6705|(9, 15, 15)|var|uint32
var_6706 = relay.var("var_6706", dtype = "float32", shape = (390, 3))#candidate|6706|(390, 3)|var|float32
call_6702 = func_6701_call(var_6703,var_6704,var_6705,var_6706,)
output = call_6702
func_6707 = relay.Function([var_6703,var_6704,var_6705,var_6706,], output)
mutated_mod['func_6707'] = func_6707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5557_call = mod.get_global_var('func_5557')
func_5559_call = mutated_mod.get_global_var('func_5559')
call_6735 = func_5557_call()
call_6736 = func_5557_call()
func_4723_call = mod.get_global_var('func_4723')
func_4727_call = mutated_mod.get_global_var('func_4727')
const_6746 = relay.const(-0.315888, dtype = "float64")#candidate|6746|()|const|float64
var_6747 = relay.var("var_6747", dtype = "float64", shape = (1980,))#candidate|6747|(1980,)|var|float64
call_6745 = func_4723_call(relay.reshape(const_6746.astype('float64'), []), relay.reshape(var_6747.astype('float64'), [15, 12, 11]), )
call_6748 = func_4723_call(relay.reshape(const_6746.astype('float64'), []), relay.reshape(var_6747.astype('float64'), [15, 12, 11]), )
func_2665_call = mod.get_global_var('func_2665')
func_2668_call = mutated_mod.get_global_var('func_2668')
const_6757 = relay.const([-8.038894,7.323124,7.200291,1.862037,-4.350471,-9.127287,8.903088,-5.466140,9.223935,-1.554576,4.840915,-3.146829,-3.757961,7.262805,-7.383094,-2.310241,3.581073,-2.177811,0.965181,7.950213,0.518663,8.026031,4.922347,-5.150083,9.128723,-2.370161,-7.391946,-3.278466,3.272344,-5.199570,-0.586381,-5.267037,3.188814,-6.187879,3.236009,-3.965623,9.788951,5.259038,9.091238,-1.538529,-2.804654,-1.583486,6.016377,3.989778,-9.394831,-3.040164,-7.897773,2.491564,0.075057,-8.596744,8.174545,-2.485093,-0.284804,3.205237,9.591114,4.817756,5.931597,2.169131,-6.414288,7.718412,-4.259278,1.478796,4.369508,-4.744672,-3.103068,9.692920,7.024919,5.221868,7.664532,-0.167803,-8.596585,-0.658605], dtype = "float64")#candidate|6757|(72,)|const|float64
const_6758 = relay.const([[-1.456845,5.604112,-3.498617,-4.409708,5.434020,-0.411410,-7.348830,-2.756347,0.778039,0.157667,1.754045,4.490510,4.409356,5.443612,-4.131544,8.281060,-1.210900,-3.461436,0.883222,-5.207493,-5.694764,1.042786,-9.340999,-1.866995,6.969414,8.890126,2.202925,1.974130,4.170889,-5.945505,8.569049,5.908398,-3.485539,-1.222660,-2.062065,-1.615699,5.661378,-0.905187,-5.642890,-1.193189,-2.169962,-4.565131,-3.204248,-4.286764],[-9.155414,-3.134600,-0.784095,0.743405,0.864815,7.969954,-1.325598,-2.517008,5.446030,-4.742024,6.532813,-9.974253,-0.709229,4.586675,-3.014887,4.654484,-4.382167,-8.777730,4.480623,8.814765,7.162502,-1.983184,3.573694,-2.674785,6.929840,-3.056006,5.668358,-9.459135,6.388839,-8.507068,9.166185,-5.059479,5.843459,8.622894,-7.689820,-1.730112,9.165121,-3.185905,1.990671,2.569645,4.655520,-5.710102,-1.064575,-5.577800],[-6.233325,8.979212,-4.527503,-0.029799,-4.723790,-8.909722,-3.477770,6.149834,-7.195289,-5.311697,-2.661555,-5.069802,1.557697,-8.091722,-4.473414,9.279755,4.373172,-6.990094,-9.973337,-7.303693,-7.891405,-7.793181,9.251370,-8.674543,5.901905,8.669859,7.384871,4.803941,-4.366539,-1.381621,-0.658176,-3.386384,6.948091,-2.418331,0.003693,-7.493575,7.700617,-0.079810,-0.887073,-4.451318,-3.189520,7.962156,-1.146285,-2.467535],[-7.151315,2.267992,1.640979,6.145227,-1.084011,-7.341877,-7.005053,-4.856378,9.042901,-1.295849,1.991609,2.140118,-7.763213,2.810556,8.483074,-9.399230,8.115581,3.211074,6.252070,3.513453,-6.563726,7.477775,-0.016731,-7.409519,-5.067171,-8.267823,-1.796205,6.142418,-5.152668,2.495108,0.256683,-4.226958,9.329664,8.424093,-7.202581,-3.077260,-0.806311,2.218268,2.373072,3.020200,-1.799388,-9.261180,6.538176,2.898760]], dtype = "float64")#candidate|6758|(4, 44)|const|float64
call_6756 = relay.TupleGetItem(func_2665_call(relay.reshape(const_6757.astype('float64'), [3, 4, 6]), relay.reshape(const_6758.astype('float64'), [176,]), ), 2)
call_6759 = relay.TupleGetItem(func_2668_call(relay.reshape(const_6757.astype('float64'), [3, 4, 6]), relay.reshape(const_6758.astype('float64'), [176,]), ), 2)
output = relay.Tuple([call_6735,call_6745,const_6746,var_6747,call_6756,const_6757,const_6758,])
output2 = relay.Tuple([call_6736,call_6748,const_6746,var_6747,call_6759,const_6757,const_6758,])
func_6762 = relay.Function([var_6747,], output)
mod['func_6762'] = func_6762
mod = relay.transform.InferType()(mod)
mutated_mod['func_6762'] = func_6762
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6763 = relay.var("var_6763", dtype = "float64", shape = (1980,))#candidate|6763|(1980,)|var|float64
func_6762_call = mutated_mod.get_global_var('func_6762')
call_6764 = func_6762_call(var_6763)
output = call_6764
func_6765 = relay.Function([var_6763], output)
mutated_mod['func_6765'] = func_6765
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6770 = relay.const([[[-10],[-9],[7],[10]],[[10],[4],[3],[1]],[[10],[8],[-1],[6]],[[2],[2],[2],[7]],[[-4],[-10],[8],[8]],[[1],[7],[7],[-6]],[[3],[10],[8],[-4]],[[3],[-10],[-5],[-4]],[[3],[-9],[-3],[8]],[[-10],[8],[4],[6]],[[-9],[1],[-2],[10]],[[1],[10],[-6],[7]],[[8],[2],[-7],[-5]]], dtype = "uint8")#candidate|6770|(13, 4, 1)|const|uint8
var_6771 = relay.var("var_6771", dtype = "uint8", shape = (13, 4, 11))#candidate|6771|(13, 4, 11)|var|uint8
bop_6772 = relay.less_equal(const_6770.astype('bool'), var_6771.astype('bool')) # shape=(13, 4, 11)
output = bop_6772
output2 = bop_6772
F = relay.Function([var_6771,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6771,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

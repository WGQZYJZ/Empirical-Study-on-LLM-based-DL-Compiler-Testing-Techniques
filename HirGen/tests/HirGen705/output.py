import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_147 = relay.var("var_147", dtype = "bool", shape = (11, 6, 6))#candidate|147|(11, 6, 6)|var|bool
var_148 = relay.var("var_148", dtype = "bool", shape = (11, 6, 6))#candidate|148|(11, 6, 6)|var|bool
bop_149 = relay.logical_or(var_147.astype('bool'), relay.reshape(var_148.astype('bool'), relay.shape_of(var_147))) # shape=(11, 6, 6)
output = bop_149
output2 = bop_149
func_182 = relay.Function([var_147,var_148,], output)
mod['func_182'] = func_182
mod = relay.transform.InferType()(mod)
mutated_mod['func_182'] = func_182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_182_call = mutated_mod.get_global_var('func_182')
var_184 = relay.var("var_184", dtype = "bool", shape = (11, 6, 6))#candidate|184|(11, 6, 6)|var|bool
var_185 = relay.var("var_185", dtype = "bool", shape = (11, 6, 6))#candidate|185|(11, 6, 6)|var|bool
call_183 = func_182_call(var_184,var_185,)
output = call_183
func_186 = relay.Function([var_184,var_185,], output)
mutated_mod['func_186'] = func_186
mutated_mod = relay.transform.InferType()(mutated_mod)
const_422 = relay.const([[[10,-9,9,-2,-10,-3,3,2,9,-1,4,-3,7,1,-9],[-7,2,1,-5,6,-5,-4,4,-4,-1,9,7,6,-6,-1],[5,3,4,-1,-10,4,7,-6,7,-7,6,-6,7,-9,2],[7,8,5,7,10,-4,-3,-4,3,8,2,3,9,1,-3],[9,-8,-4,-8,-10,8,-5,-6,-1,-2,8,-5,9,3,1],[3,-9,-7,-6,4,3,4,7,7,-9,-7,1,10,-5,2],[-10,-5,5,-10,9,1,-9,10,-4,-2,-3,10,10,-8,2],[10,-4,-8,9,2,-5,-9,-7,-8,3,-4,8,4,3,-2],[1,-8,9,6,6,-7,10,-5,5,7,-5,8,-6,-3,4],[5,-9,2,9,-7,5,-9,-2,-3,-10,-4,-3,8,5,-10],[1,6,-8,-10,-4,5,-3,-6,9,-1,-10,-5,7,4,-7],[1,-8,7,-5,7,6,-1,-6,-5,6,5,-10,1,-4,-1],[7,-8,-9,5,4,5,3,10,-5,-6,2,9,4,9,-4],[10,2,-10,-4,7,6,9,-10,-9,-5,-7,8,9,7,9]],[[-10,-5,-6,-5,10,10,6,3,10,2,-9,-4,-5,7,3],[-3,5,-5,-5,-3,2,8,5,-5,-7,2,-6,-3,1,4],[7,7,9,3,4,-6,-9,6,8,-1,-8,1,1,-8,-5],[8,-4,-4,-9,-5,-2,1,7,-7,9,-2,-3,3,-8,-8],[-5,-2,1,2,-2,-5,9,-8,-5,3,-5,3,9,-1,10],[7,6,-4,5,9,2,4,3,-8,-8,-4,-8,-2,4,-4],[-5,-10,2,7,10,9,-1,-3,-4,3,-4,7,-4,8,2],[-2,7,-7,-6,10,-10,7,-9,-8,-5,-5,9,-2,-8,-5],[-4,-9,-1,-10,9,-4,-9,2,3,-1,2,7,5,-8,-10],[7,-10,-7,-3,7,-8,-2,-1,-3,6,-5,9,2,3,-10],[1,-9,4,-1,4,10,8,-7,8,-5,5,5,-2,-9,-6],[-8,-4,9,2,6,9,-7,10,8,-5,2,-1,-3,1,7],[-1,-8,1,-7,-9,-8,9,-7,-1,-6,-6,-6,3,-9,3],[6,9,1,1,-5,-10,-9,10,9,9,-6,4,-3,3,-3]],[[-7,2,-3,8,-2,-2,-5,1,-9,5,-8,4,-4,8,8],[-8,2,-1,-5,-7,-1,9,-4,-1,3,-10,10,-2,10,4],[5,2,-3,2,-5,7,10,4,-8,-6,3,-1,-1,-7,-7],[2,4,1,9,7,2,10,10,9,-10,-7,2,-6,-5,7],[-6,5,-3,7,-10,7,-8,8,-10,-4,-2,3,-2,-7,6],[10,3,3,-4,7,7,-9,-1,-1,-4,3,-7,-9,9,-6],[2,-6,3,-10,-10,-2,10,-1,8,4,-8,-9,-3,-6,6],[7,9,-4,5,-9,10,-3,3,-3,-8,3,2,-3,-10,-9],[-2,-6,-2,-3,-6,-1,4,-9,7,-7,9,-1,2,9,-4],[8,-7,-6,7,-7,2,1,1,2,-4,-5,1,-5,9,-2],[-4,-8,7,1,1,-8,3,10,1,-6,-3,9,4,-4,8],[7,-8,-3,6,10,-10,-2,-10,-9,-6,-6,-5,-2,9,-3],[6,8,-4,9,-5,-9,9,-9,6,10,4,-3,-2,-7,3],[-9,1,-2,-10,-7,4,-1,-1,-10,8,-9,7,-3,-8,-10]],[[-2,1,8,-10,-8,3,-5,3,-5,-3,6,-7,-5,-1,-1],[-6,-2,6,-2,-8,3,10,-6,-4,-9,-5,-8,-7,-3,5],[-9,-8,-8,9,-3,8,-8,6,5,-6,6,9,-4,-6,-3],[4,2,3,6,-9,8,-7,-10,-2,-2,9,-10,3,-5,2],[9,-1,7,2,7,4,-1,-2,5,-7,-10,6,-5,3,-5],[-9,2,7,6,-5,-3,8,2,-6,-4,4,9,6,-9,5],[6,10,6,9,9,4,-5,-5,-2,3,-5,-2,9,8,6],[1,9,-2,-9,8,-5,9,5,-6,-6,-5,-8,-5,2,2],[-1,2,4,-7,-2,-2,-9,6,4,3,3,-3,4,7,-5],[5,-3,6,-8,-2,-7,-9,5,10,-1,1,2,2,-6,-1],[-7,-5,-3,8,1,4,-4,4,-10,1,1,5,10,9,-8],[4,-7,8,9,1,-7,10,8,3,2,1,-7,-5,6,10],[-4,-1,-5,-3,4,6,9,-5,2,6,1,7,6,5,-8],[7,-1,-5,7,1,-1,5,3,-6,-7,8,2,7,9,-1]]], dtype = "int64")#candidate|422|(4, 14, 15)|const|int64
var_423 = relay.var("var_423", dtype = "int64", shape = (4, 14, 15))#candidate|423|(4, 14, 15)|var|int64
bop_424 = relay.not_equal(const_422.astype('bool'), relay.reshape(var_423.astype('bool'), relay.shape_of(const_422))) # shape=(4, 14, 15)
output = bop_424
output2 = bop_424
func_442 = relay.Function([var_423,], output)
mod['func_442'] = func_442
mod = relay.transform.InferType()(mod)
var_443 = relay.var("var_443", dtype = "int64", shape = (4, 14, 15))#candidate|443|(4, 14, 15)|var|int64
output = func_442(var_443)
func_444 = relay.Function([var_443], output)
mutated_mod['func_444'] = func_444
mutated_mod = relay.transform.InferType()(mutated_mod)
const_510 = relay.const([[[2],[9],[1],[8],[-3],[10],[-6],[1],[4]],[[-3],[-10],[-10],[-5],[-4],[-8],[8],[-10],[7]],[[6],[-9],[-2],[9],[8],[4],[-7],[-7],[-7]],[[2],[1],[10],[2],[1],[-6],[3],[4],[3]],[[3],[-5],[-3],[-4],[-3],[7],[-7],[-1],[-6]],[[8],[-10],[10],[-5],[-10],[-7],[6],[4],[-2]],[[10],[7],[-7],[3],[-5],[10],[7],[9],[-7]],[[3],[-4],[-3],[-5],[-2],[2],[-6],[-9],[8]],[[-1],[-10],[9],[-10],[-10],[-4],[-2],[8],[-2]],[[-8],[2],[6],[1],[10],[8],[6],[1],[8]]], dtype = "uint32")#candidate|510|(10, 9, 1)|const|uint32
var_511 = relay.var("var_511", dtype = "uint32", shape = (10, 9, 1))#candidate|511|(10, 9, 1)|var|uint32
bop_512 = relay.not_equal(const_510.astype('bool'), relay.reshape(var_511.astype('bool'), relay.shape_of(const_510))) # shape=(10, 9, 1)
output = relay.Tuple([bop_512,])
output2 = relay.Tuple([bop_512,])
func_555 = relay.Function([var_511,], output)
mod['func_555'] = func_555
mod = relay.transform.InferType()(mod)
mutated_mod['func_555'] = func_555
mutated_mod = relay.transform.InferType()(mutated_mod)
var_556 = relay.var("var_556", dtype = "uint32", shape = (10, 9, 1))#candidate|556|(10, 9, 1)|var|uint32
func_555_call = mutated_mod.get_global_var('func_555')
call_557 = func_555_call(var_556)
output = call_557
func_558 = relay.Function([var_556], output)
mutated_mod['func_558'] = func_558
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1017 = relay.var("var_1017", dtype = "float32", shape = (12, 13, 12))#candidate|1017|(12, 13, 12)|var|float32
uop_1018 = relay.log10(var_1017.astype('float32')) # shape=(12, 13, 12)
func_442_call = mod.get_global_var('func_442')
func_444_call = mutated_mod.get_global_var('func_444')
const_1022 = relay.const([3,-5,5,6,1,6,-3,-6,-7,-4,-6,9,-9,-3,5,7,10,-8,5,6,9,5,2,-5,-6,9,5,1,-3,10,-4,5,-1,8,-8,-2,-8,-6,-6,-1,-3,8,10,-1,4,2,-8,-2,1,-5,-6,-7,1,9,6,4,2,-7,-9,-7,2,1,-6,9,6,-8,10,-9,1,-2,9,6,6,-6,-4,10,-2,-5,7,-8,9,-5,3,2,1,-1,-8,4,2,2,2,-1,-6,-5,-2,6,-10,2,5,5,8,8,3,-3,-3,1,9,-2,-10,-8,1,-6,2,-4,4,3,-7,9,5,5,6,-3,-9,8,3,6,7,-5,-1,-6,-8,6,-3,7,4,-6,-9,-3,-4,-2,8,-9,9,6,2,-5,-4,-8,-6,5,-7,10,7,-8,8,-8,-5,1,-2,6,-10,4,5,-1,7,1,-6,-3,6,-6,9,-1,2,10,1,-7,10,9,5,6,-7,-9,-10,5,-2,-10,-4,5,5,9,-5,8,-10,-3,-8,-9,8,5,-8,3,3,1,4,-5,-5,-6,-1,-8,-3,5,1,-6,2,6,4,-10,-3,-6,8,8,6,-6,8,9,8,-3,-8,10,10,9,-5,3,-1,5,-10,7,-4,-4,-8,6,-9,-4,7,6,-10,-5,8,-1,9,-2,-6,7,-9,-4,6,-2,-8,1,-10,7,5,-3,10,-4,9,-7,3,6,-5,-1,-10,-5,9,6,-4,-9,2,2,7,10,9,10,-9,8,-7,-6,-3,-5,-6,4,-3,1,-7,7,8,-10,3,1,-8,-8,7,2,-5,-2,8,-3,1,6,6,1,-1,10,-3,-7,-9,6,1,8,4,6,-8,-5,-2,8,-4,-1,2,-2,4,5,-6,-1,-8,-2,-1,-6,-7,7,-2,1,-5,-3,-4,1,-4,-1,-7,7,3,10,8,-2,-5,-8,3,-4,-2,5,-2,5,-5,8,1,9,-7,-8,3,1,9,6,1,-2,7,-10,-6,-4,-1,2,8,-6,10,-1,3,4,3,4,2,-8,3,-7,-1,9,3,-4,3,-7,5,8,10,-8,2,9,-9,-2,-3,1,-9,-7,-2,-3,-4,-9,-8,5,-9,-3,6,-4,10,-7,-4,-8,1,-5,-10,-7,1,-3,1,9,2,10,5,-3,1,-8,8,-7,-5,1,1,10,-4,-10,-3,-6,10,-1,1,2,3,6,-9,-2,3,10,1,-5,4,-1,-2,-10,-2,-1,-4,-4,4,10,-3,8,4,-10,-9,-10,-10,-10,8,9,4,5,-3,-6,-1,2,7,-1,-7,7,-8,9,-8,10,-10,7,9,1,-3,10,-3,9,10,10,1,-3,4,6,-10,9,-5,5,10,-5,5,8,-8,6,7,7,-3,8,2,-1,-8,4,1,-7,-7,6,8,8,3,7,-1,-1,-5,-6,-2,-9,9,6,-5,3,-5,-4,6,-2,7,10,-2,-4,9,3,-7,2,8,-8,-10,4,1,-10,-1,6,10,6,7,10,-2,-7,-5,-6,6,-3,4,-4,7,-4,4,4,5,7,-4,10,-10,-2,8,6,-2,2,8,5,-10,4,8,-10,-2,7,-4,9,-5,-8,10,9,-5,-10,-9,-10,3,-2,4,3,1,-9,10,10,10,10,-4,-2,10,-3,6,-7,-1,-7,3,2,-4,2,10,9,1,-10,8,3,-3,-8,-4,-7,4,-2,5,-4,5,-3,7,5,-1,1,4,-9,4,7,2,5,-9,4,8,-3,3,8,-9,-6,-5,-10,-4,-7,6,-8,-9,6,-9,1,10,2,1,-1,-10,-1,-7,5,1,2,7,8,5,3,-6,-3,10,8,-3,2,-10,-8,3,8,5,-1,-2,-8,3,-2,6,5,-1,7,-6,9,9,2,-3,6,-2,2,-6,-10,-2,9,-8,-5,-7,-4,1,-8,-5,2,3,-5,5,-9,-8,1,3,-9,2,1,6,2,-3,8,1,5,8,-8,-7,-3,8,-4,-1,4,-9,-5,-4,-2,7,4,-2,3,9,2,-8,1,-8,-7,-10,-4,-9,5,6,-10,-9,-3,5,8,7,2,-6,1,9,-5,-10,9,-10,3,-2,-10,-9,-2,1,10,2,3,-6,4,-2,-4,9,-4,-10,6,-9,-4,1,5,-6,2,-9,-7,-7,10,-1,-6,10,1,4,-3,-6,-3,3,-1,-5,8,-5,-8,-8,-6,3,-9,-1,-4,-10,9,-3,2,-10,-4,5,-8,-7,-5], dtype = "int64")#candidate|1022|(840,)|const|int64
call_1021 = func_442_call(relay.reshape(const_1022.astype('int64'), [4, 14, 15]))
call_1023 = func_442_call(relay.reshape(const_1022.astype('int64'), [4, 14, 15]))
func_442_call = mod.get_global_var('func_442')
func_444_call = mutated_mod.get_global_var('func_444')
call_1024 = func_442_call(relay.reshape(const_1022.astype('int64'), [4, 14, 15]))
call_1025 = func_442_call(relay.reshape(const_1022.astype('int64'), [4, 14, 15]))
func_182_call = mod.get_global_var('func_182')
func_186_call = mutated_mod.get_global_var('func_186')
var_1037 = relay.var("var_1037", dtype = "bool", shape = (66, 6))#candidate|1037|(66, 6)|var|bool
call_1036 = func_182_call(relay.reshape(var_1037.astype('bool'), [11, 6, 6]), relay.reshape(var_1037.astype('bool'), [11, 6, 6]), )
call_1038 = func_182_call(relay.reshape(var_1037.astype('bool'), [11, 6, 6]), relay.reshape(var_1037.astype('bool'), [11, 6, 6]), )
func_555_call = mod.get_global_var('func_555')
func_558_call = mutated_mod.get_global_var('func_558')
var_1077 = relay.var("var_1077", dtype = "uint32", shape = (90,))#candidate|1077|(90,)|var|uint32
call_1076 = relay.TupleGetItem(func_555_call(relay.reshape(var_1077.astype('uint32'), [10, 9, 1])), 0)
call_1078 = relay.TupleGetItem(func_558_call(relay.reshape(var_1077.astype('uint32'), [10, 9, 1])), 0)
uop_1100 = relay.sqrt(call_1024.astype('float64')) # shape=(4, 14, 15)
uop_1102 = relay.sqrt(call_1025.astype('float64')) # shape=(4, 14, 15)
func_182_call = mod.get_global_var('func_182')
func_186_call = mutated_mod.get_global_var('func_186')
call_1108 = func_182_call(relay.reshape(call_1036.astype('bool'), [11, 6, 6]), relay.reshape(var_1037.astype('bool'), [11, 6, 6]), )
call_1109 = func_182_call(relay.reshape(call_1036.astype('bool'), [11, 6, 6]), relay.reshape(var_1037.astype('bool'), [11, 6, 6]), )
output = relay.Tuple([uop_1018,call_1021,const_1022,call_1036,var_1037,call_1076,var_1077,uop_1100,call_1108,])
output2 = relay.Tuple([uop_1018,call_1023,const_1022,call_1038,var_1037,call_1078,var_1077,uop_1102,call_1109,])
func_1111 = relay.Function([var_1017,var_1037,var_1077,], output)
mod['func_1111'] = func_1111
mod = relay.transform.InferType()(mod)
var_1112 = relay.var("var_1112", dtype = "float32", shape = (12, 13, 12))#candidate|1112|(12, 13, 12)|var|float32
var_1113 = relay.var("var_1113", dtype = "bool", shape = (66, 6))#candidate|1113|(66, 6)|var|bool
var_1114 = relay.var("var_1114", dtype = "uint32", shape = (90,))#candidate|1114|(90,)|var|uint32
output = func_1111(var_1112,var_1113,var_1114,)
func_1115 = relay.Function([var_1112,var_1113,var_1114,], output)
mutated_mod['func_1115'] = func_1115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1771 = relay.var("var_1771", dtype = "float32", shape = (9, 7, 16))#candidate|1771|(9, 7, 16)|var|float32
uop_1772 = relay.atan(var_1771.astype('float32')) # shape=(9, 7, 16)
func_555_call = mod.get_global_var('func_555')
func_558_call = mutated_mod.get_global_var('func_558')
var_1785 = relay.var("var_1785", dtype = "uint32", shape = (3, 30))#candidate|1785|(3, 30)|var|uint32
call_1784 = relay.TupleGetItem(func_555_call(relay.reshape(var_1785.astype('uint32'), [10, 9, 1])), 0)
call_1786 = relay.TupleGetItem(func_558_call(relay.reshape(var_1785.astype('uint32'), [10, 9, 1])), 0)
output = relay.Tuple([uop_1772,call_1784,var_1785,])
output2 = relay.Tuple([uop_1772,call_1786,var_1785,])
func_1787 = relay.Function([var_1771,var_1785,], output)
mod['func_1787'] = func_1787
mod = relay.transform.InferType()(mod)
mutated_mod['func_1787'] = func_1787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1787_call = mutated_mod.get_global_var('func_1787')
var_1789 = relay.var("var_1789", dtype = "float32", shape = (9, 7, 16))#candidate|1789|(9, 7, 16)|var|float32
var_1790 = relay.var("var_1790", dtype = "uint32", shape = (3, 30))#candidate|1790|(3, 30)|var|uint32
call_1788 = func_1787_call(var_1789,var_1790,)
output = call_1788
func_1791 = relay.Function([var_1789,var_1790,], output)
mutated_mod['func_1791'] = func_1791
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1854 = relay.var("var_1854", dtype = "float32", shape = (1, 13, 12))#candidate|1854|(1, 13, 12)|var|float32
uop_1855 = relay.log2(var_1854.astype('float32')) # shape=(1, 13, 12)
func_442_call = mod.get_global_var('func_442')
func_444_call = mutated_mod.get_global_var('func_444')
var_1859 = relay.var("var_1859", dtype = "int64", shape = (2, 420))#candidate|1859|(2, 420)|var|int64
call_1858 = func_442_call(relay.reshape(var_1859.astype('int64'), [4, 14, 15]))
call_1860 = func_442_call(relay.reshape(var_1859.astype('int64'), [4, 14, 15]))
bop_1869 = relay.floor_mod(uop_1855.astype('float64'), relay.reshape(var_1854.astype('float64'), relay.shape_of(uop_1855))) # shape=(1, 13, 12)
output = relay.Tuple([call_1858,var_1859,bop_1869,])
output2 = relay.Tuple([call_1860,var_1859,bop_1869,])
func_1890 = relay.Function([var_1854,var_1859,], output)
mod['func_1890'] = func_1890
mod = relay.transform.InferType()(mod)
var_1891 = relay.var("var_1891", dtype = "float32", shape = (1, 13, 12))#candidate|1891|(1, 13, 12)|var|float32
var_1892 = relay.var("var_1892", dtype = "int64", shape = (2, 420))#candidate|1892|(2, 420)|var|int64
output = func_1890(var_1891,var_1892,)
func_1893 = relay.Function([var_1891,var_1892,], output)
mutated_mod['func_1893'] = func_1893
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1937 = relay.var("var_1937", dtype = "float32", shape = (16, 10, 15))#candidate|1937|(16, 10, 15)|var|float32
uop_1938 = relay.atan(var_1937.astype('float32')) # shape=(16, 10, 15)
output = uop_1938
output2 = uop_1938
func_1940 = relay.Function([var_1937,], output)
mod['func_1940'] = func_1940
mod = relay.transform.InferType()(mod)
mutated_mod['func_1940'] = func_1940
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1941 = relay.var("var_1941", dtype = "float32", shape = (16, 10, 15))#candidate|1941|(16, 10, 15)|var|float32
func_1940_call = mutated_mod.get_global_var('func_1940')
call_1942 = func_1940_call(var_1941)
output = call_1942
func_1943 = relay.Function([var_1941], output)
mutated_mod['func_1943'] = func_1943
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2239 = relay.var("var_2239", dtype = "uint32", shape = (6, 14, 13))#candidate|2239|(6, 14, 13)|var|uint32
var_2240 = relay.var("var_2240", dtype = "uint32", shape = (6, 14, 13))#candidate|2240|(6, 14, 13)|var|uint32
bop_2241 = relay.subtract(var_2239.astype('uint32'), relay.reshape(var_2240.astype('uint32'), relay.shape_of(var_2239))) # shape=(6, 14, 13)
output = bop_2241
output2 = bop_2241
func_2246 = relay.Function([var_2239,var_2240,], output)
mod['func_2246'] = func_2246
mod = relay.transform.InferType()(mod)
var_2247 = relay.var("var_2247", dtype = "uint32", shape = (6, 14, 13))#candidate|2247|(6, 14, 13)|var|uint32
var_2248 = relay.var("var_2248", dtype = "uint32", shape = (6, 14, 13))#candidate|2248|(6, 14, 13)|var|uint32
output = func_2246(var_2247,var_2248,)
func_2249 = relay.Function([var_2247,var_2248,], output)
mutated_mod['func_2249'] = func_2249
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2405 = relay.var("var_2405", dtype = "float32", shape = ())#candidate|2405|()|var|float32
const_2406 = relay.const([[[-3.491680,-7.340479,2.971112,-9.554557,-7.576851,-0.125137,-1.913797,1.145566,-9.882757],[-7.953475,-6.814110,-8.445968,-6.907203,-4.965517,-9.019730,3.501873,1.443560,4.899819],[6.174871,-9.296298,-7.428627,-1.349734,-1.768732,-9.414583,4.411766,-5.688848,5.932365],[2.922767,1.741803,9.198606,-0.251012,-0.128355,-1.305080,-6.864495,1.257751,6.118120],[2.008031,1.467232,6.030421,-6.964667,-0.019885,-1.098409,0.182433,6.075654,6.538391],[-6.882594,-7.187954,0.484651,-1.017424,-2.582774,-7.076499,-5.019571,-6.607994,7.389266],[3.246800,-4.978368,-3.977539,0.654847,-8.082131,-8.948524,6.517524,1.118315,-1.586662],[-5.257157,-4.799600,-8.822418,-0.160493,-2.840663,-1.507726,9.752920,9.397604,3.329738],[-3.795462,7.657736,-2.354109,0.397844,0.548021,8.073071,5.653871,-5.038141,-5.722345],[8.740461,6.446605,8.023968,4.390277,8.578154,-2.394525,3.326692,4.512439,-6.791929],[-8.212209,0.587723,-1.310081,2.713526,-8.956904,-5.153712,2.514538,-3.956181,1.065471],[-1.983758,-4.878592,-5.892212,2.113665,7.560509,-6.580111,-9.477571,2.984379,-8.598882],[-0.998607,-6.559526,-9.324413,8.009601,-7.842404,-8.822222,-1.415788,-8.792728,5.083298],[3.320634,-2.782495,2.449458,-3.521159,-6.072557,-7.119058,-4.144984,-0.798782,5.976108]],[[2.188088,-2.888932,-6.880063,5.941529,-4.845001,7.611873,-0.479034,-6.452935,-8.992561],[-0.116797,6.281236,-4.095776,9.164194,-0.595528,6.195493,-7.829524,-5.719587,-6.809465],[-6.845481,9.997449,-3.398873,-1.337055,-9.006308,1.028768,-8.853831,7.222904,-0.067595],[0.468852,-3.596641,-1.529106,-2.444376,-8.413713,3.720545,6.791139,9.645403,-9.428288],[-0.458264,-3.349552,2.860300,1.582923,8.957702,7.610756,-2.470079,-9.781743,-3.967246],[9.696451,7.040975,-5.945405,-3.774832,-5.910476,-2.841166,1.370555,6.041885,3.689690],[-7.967638,3.386921,-5.746955,2.233954,3.603030,4.917057,-3.728796,-4.034242,5.696182],[9.558970,2.663345,7.598283,-5.310985,-8.865292,-3.338388,7.674120,-2.360230,1.642438],[0.184033,8.308698,-5.652420,8.748747,0.552545,-2.735244,-8.500566,2.178406,-0.050201],[1.222863,2.945408,-5.426488,-2.038494,-3.234679,-5.610579,8.245470,5.702033,1.516827],[3.259477,-2.304747,-6.277375,0.716460,-7.213555,-5.467390,5.941228,-2.805987,3.958592],[9.173342,-7.436343,-5.994213,9.370324,-8.599951,5.246115,-5.596573,-7.368467,2.874854],[5.814465,1.351718,7.087500,-0.823454,-9.614385,-0.631747,-7.541014,0.639445,5.717495],[2.410807,7.778160,4.568807,8.136296,0.270727,8.059395,2.456341,-7.651655,-8.048096]],[[-5.130904,-3.928821,9.193962,4.616630,-1.779476,-7.459757,-6.472340,-1.218846,-4.351771],[-4.889752,7.793519,9.021112,4.204295,-4.999532,-7.038206,4.540948,7.511135,4.162064],[-6.967121,-7.918498,3.194336,0.968336,8.438878,8.421244,3.046618,5.732557,2.015079],[4.732575,1.870246,-8.603308,4.113457,5.384488,-3.266243,0.384987,4.433730,1.750666],[7.468939,-8.195147,8.003864,-6.167446,-3.994133,1.692405,-6.858841,-4.483288,-1.472843],[3.724378,-8.879166,2.994204,3.081548,-4.534507,-6.461312,6.007677,-9.066219,-1.740269],[9.916643,-2.797145,1.170856,-5.056535,5.729790,6.894256,9.700655,9.036605,2.743914],[-0.751767,4.116563,7.454661,0.672948,6.843908,6.829230,0.602629,-4.794867,-6.931800],[3.649089,-6.033219,5.042496,7.011875,-1.783815,-1.966727,3.253297,0.420594,0.624496],[-3.984129,1.036793,-3.875505,-1.337293,-8.436276,-4.704436,-5.725865,4.177460,-4.110926],[-7.055351,0.132045,-8.338884,1.441005,1.562101,-7.405744,3.862315,1.694658,9.435937],[7.287735,9.767256,-7.788067,-5.157236,8.897792,9.872340,-9.594893,7.228499,4.661422],[-0.853274,1.678773,8.957837,-7.302357,2.311397,8.863168,-3.517223,-7.060579,-2.895004],[9.342740,0.817928,-3.088079,-4.955267,-1.768058,1.373836,5.674532,-8.484920,5.005931]],[[-8.479151,6.583649,7.644846,-1.194358,5.325420,4.798156,-6.109997,9.510241,2.428384],[-5.524809,-8.535772,-3.144884,-9.906818,3.974824,-2.448090,-4.207872,1.236606,-5.869944],[8.246187,-1.797400,6.151906,-2.852245,-2.476122,1.067202,-8.591583,9.620399,7.947830],[-0.764253,8.635694,-8.152588,-8.739246,-3.250279,-6.077919,-1.617099,-5.377718,2.468355],[-4.834412,4.114964,1.838455,-5.758731,-3.396396,-1.287820,3.898393,-2.202366,4.226408],[9.554043,9.772323,2.354381,-8.071392,6.013615,-3.971769,9.792812,4.003994,4.515463],[3.253320,-6.065387,3.882602,0.710169,9.463286,3.253764,8.837423,-7.864074,-9.020097],[-3.619868,2.065335,2.202458,-2.564813,-0.326627,7.394928,-8.252928,6.254983,9.849996],[-4.566832,-6.717195,-9.719536,-8.483134,-3.521641,-9.555377,-2.749912,4.553026,8.002245],[4.276746,0.396757,0.262936,0.520803,-6.581141,-1.170222,5.519792,-6.640979,-7.110083],[9.495740,-4.792439,4.765222,-3.403029,-7.966938,1.804966,1.391145,8.992248,-7.293176],[8.944303,0.148964,-8.457424,1.178458,-3.534940,2.615639,-5.559244,1.347913,-5.549463],[-4.903092,-8.337669,2.603976,-9.100520,-0.076582,9.957012,-9.008550,-9.680520,-2.763122],[9.941256,-0.472784,-0.833281,-1.408675,-7.350595,1.508277,-8.168437,5.322489,-9.782900]],[[-3.574508,0.085475,2.569867,5.917614,-1.592428,9.138291,-1.581029,-9.974015,-1.773911],[7.993517,-1.880095,-8.807119,-6.628587,1.819610,2.152377,-9.259565,-2.513693,-2.627841],[4.709539,5.636244,6.828940,-2.368787,2.674645,-4.516200,6.179971,-4.559676,0.051031],[-5.844957,5.868370,0.569989,1.802059,-9.518602,-0.725657,9.410368,-1.437322,3.856659],[4.816320,0.706003,-1.145890,-1.584134,9.949743,8.724996,2.726378,1.260495,3.377543],[9.186808,-9.606919,-3.081666,-5.832135,-9.042693,-5.247051,-1.279235,-2.770702,-5.820098],[4.033183,-7.989726,9.540575,0.290689,7.287268,7.505967,-3.706329,-0.654680,-3.972821],[9.106348,-6.043959,5.607927,5.011973,6.090546,-8.985247,-5.346010,-2.937210,-7.790789],[8.933365,0.949983,-7.011803,7.477792,4.826238,-4.866470,7.193331,2.357304,1.896099],[-4.064362,-8.499052,-7.167830,-3.125758,4.033869,-6.033375,-0.888794,0.264439,-9.765108],[1.385543,-6.829567,5.892102,-5.069578,-9.741943,4.840979,1.367138,-6.349727,0.152772],[-6.549437,-6.864765,-2.442846,5.057238,-7.532941,-0.302392,2.490545,-7.516117,8.849693],[-4.598947,-8.634705,5.164574,-7.930367,-6.796996,-4.126104,-1.519359,6.738398,-7.551251],[3.353859,-7.280964,7.915644,-5.055429,-2.189284,-9.093200,7.425629,-3.058847,-0.933274]],[[1.916449,-4.733011,2.765699,4.072415,7.156946,-5.495629,-0.357368,7.826357,6.428521],[-3.648915,1.778486,6.467171,-9.399344,-5.968506,-6.511928,-5.453278,-9.442336,9.334399],[8.851987,5.166849,9.212125,2.762282,7.978895,0.151992,8.657204,-5.700276,-6.587130],[-0.967454,-3.457612,6.686374,1.556339,-8.213251,-5.821478,-4.816061,-0.554919,-9.578547],[8.087738,-0.409422,7.975092,-4.405269,0.690185,2.144328,-3.685484,-5.140011,2.144849],[0.881042,9.020591,-9.721999,-9.055147,2.148251,-7.175649,-0.300965,4.238699,-4.738697],[-5.630259,5.134007,5.873784,-5.646390,9.174899,8.122750,-3.084417,9.467944,-2.311971],[-8.551218,-8.744680,-0.981109,7.692626,7.129293,0.583293,9.781118,-0.368487,7.662506],[-8.493508,5.789737,-7.486107,-9.604870,7.675979,-6.924522,7.716379,-3.399129,-9.504025],[-0.482965,-6.763201,0.595502,2.687251,6.558521,9.245837,5.306331,-6.711461,4.128289],[6.975590,-3.443315,-5.044109,3.854133,8.407229,8.550928,-0.213789,1.432487,3.219700],[-8.829461,-5.819410,-0.132979,-0.661141,8.639509,-6.155998,5.818400,-7.437075,4.797121],[-7.179189,-5.871684,-4.027258,9.245349,1.972769,0.239268,1.354142,9.588772,-6.703981],[-2.285783,0.215598,6.911583,-6.346559,-2.700788,-1.807177,7.605827,-6.806304,-2.115434]],[[-9.785502,8.513501,8.719931,-9.741149,-4.746977,-2.008027,-3.810958,7.795944,-0.120006],[9.323532,3.049419,3.144844,5.805114,-2.059995,-1.805181,2.767785,-5.700344,-5.749254],[4.505571,4.059831,-4.766898,-0.489611,-0.586851,-6.372741,2.699116,1.634990,1.255073],[-9.800774,-5.682818,-8.949332,-5.384034,2.860460,-6.406293,-8.285544,-5.307339,8.232709],[4.602782,0.176142,1.544874,-1.943011,-0.768585,9.232838,-1.026827,-1.661357,-5.646862],[8.527601,-9.672128,-0.635712,-5.775379,4.778379,-8.046178,0.680083,-5.220137,6.893765],[-0.294644,-2.439823,6.209771,1.587824,-3.406946,-8.058522,-8.878118,8.638959,-8.530971],[-8.845168,-7.606339,-7.122113,-8.194684,-0.529197,-6.305135,6.330234,4.240916,0.678732],[5.134406,-7.572641,8.996149,4.026362,-9.433696,-2.427084,-0.905954,3.954744,-8.839224],[6.469657,9.301127,-5.792703,9.880431,-6.073162,1.288571,6.806124,-0.878396,-9.330198],[6.852581,-7.458978,-0.231684,-5.435223,0.359840,1.786762,6.520577,-9.568113,-5.489645],[4.473562,-1.141839,-0.369374,9.231829,3.752222,9.041406,9.885991,4.851530,-5.465137],[6.401819,-4.928117,-6.166770,-2.005300,-0.863907,-8.683031,1.734165,-6.923103,-5.471776],[-6.767018,-8.129153,5.510962,1.125926,-5.282446,-2.263430,6.244681,-7.393955,-3.138551]],[[7.145358,-4.701692,-6.781756,5.343524,-6.812829,9.720514,-5.884626,4.992444,1.538170],[8.153899,0.628832,5.124024,-2.102296,0.731549,-5.779977,-9.334155,4.068242,0.158417],[0.762390,1.161540,-3.668919,-8.104624,-6.952209,-7.540118,6.837000,2.150012,9.011980],[-3.203954,8.657963,-2.874609,-6.378887,5.697779,-9.818855,3.511470,8.417272,8.969662],[9.307934,2.030676,1.445708,-8.983115,8.167432,-9.392133,-9.254908,-4.759883,-6.047189],[-0.283046,5.801588,-0.829183,-3.780957,-5.247960,9.178164,-0.357662,3.381854,-2.480514],[8.204681,6.757569,-2.597823,1.857825,5.089098,-2.637246,0.235636,-5.723265,5.095071],[-7.671121,-7.917587,4.808624,-3.875644,-4.922755,5.787756,5.321014,4.337812,5.656583],[-3.756886,4.438056,0.786672,2.773174,-2.618185,1.525305,5.631172,7.887801,-9.964925],[2.928132,-8.103527,9.491551,-6.184536,-6.824851,8.715915,-2.828817,9.693668,0.766258],[8.843031,8.116616,-4.479271,9.377638,-1.325050,5.525890,-4.012681,3.783724,2.232453],[-7.528274,2.099892,0.831319,9.004647,-3.021047,3.597128,8.138330,7.050474,-4.988189],[7.403644,7.412189,8.425406,7.599069,8.326816,-4.443866,1.867948,-4.763575,-8.833794],[3.035855,1.812099,-8.559167,-9.240022,-1.832145,-5.139610,0.461829,-3.305011,8.318392]],[[-9.110892,9.592142,1.754024,-9.744542,3.487452,-7.769553,-1.764920,8.784537,7.993052],[4.706269,5.478256,9.442897,-8.553207,3.588357,8.737854,-1.597435,6.632815,7.428207],[-6.887427,5.697857,3.027481,2.649756,-4.684982,6.788263,-3.450431,5.130798,-9.192577],[8.486964,3.046158,-9.649045,6.083343,-8.549476,-9.169471,4.387388,4.548072,-5.029666],[-4.474604,3.606789,-3.215614,8.935511,0.415072,-5.837310,7.448527,-2.077415,4.892675],[-0.473408,-7.078942,6.684078,-4.550707,7.639487,-4.677948,-5.283821,3.453264,5.563491],[7.067121,-5.326159,2.998755,-5.901288,-9.692933,3.566238,7.971060,-5.110550,7.829006],[6.686700,-9.584367,7.461144,-9.010013,-0.149320,2.624286,-3.614801,-0.295954,3.166244],[1.872060,-2.114967,9.490450,4.119291,4.829128,-4.299104,-9.958697,6.358412,-5.497644],[9.974542,-8.041997,-4.862710,6.201546,-8.239774,6.277693,9.058229,-3.907243,-8.108833],[9.688491,-8.339928,3.952877,8.072605,-8.240622,-7.701764,-6.697207,-6.628880,3.352999],[-1.914929,8.276906,-5.209858,4.560286,6.492903,-9.098877,7.612703,-5.335586,-6.323456],[-4.612567,0.652861,-7.485199,3.195822,8.927577,-7.732740,-3.361088,0.209092,7.083631],[-0.764828,1.659304,-8.489516,8.808311,4.463121,-1.516863,2.584538,-5.418732,1.720661]],[[-5.712875,2.951157,-6.107400,2.415902,-6.135182,-9.568774,-2.949707,-9.827613,8.582320],[7.324301,-5.937799,-5.200412,0.491283,1.895472,-7.649961,-7.568328,6.969982,-7.523383],[3.688375,-2.073144,-3.486449,-8.897897,6.472021,-8.562614,4.122908,0.330967,-7.376104],[-8.234214,4.837871,7.389381,2.343355,0.369440,9.855637,-5.241027,1.910307,0.491354],[-7.030682,-2.422065,-1.542568,-6.322593,4.898792,-9.177533,5.873462,3.174388,-2.985956],[-3.733871,-0.431535,3.764690,6.189149,4.006631,-4.567944,-3.248145,-2.269228,2.144575],[9.525538,-3.828131,0.553387,-4.502782,-7.888600,-4.730088,3.518006,-8.289388,-2.881317],[3.212716,2.908062,-6.015225,5.174204,-3.544440,7.440942,6.498441,3.537929,8.526582],[-9.802580,5.945863,7.280586,0.774866,-2.120882,7.880746,7.046295,-9.600409,7.096533],[8.799754,5.111377,-6.094247,3.801571,7.296799,7.906820,1.177080,8.073484,-7.046639],[-8.065711,2.845501,9.676824,5.101940,1.945975,-3.981776,-4.450821,-0.009734,3.951515],[5.740487,-4.006262,-0.764458,6.733713,6.709459,-7.532498,-6.254175,2.459288,-1.221257],[-2.138626,-9.817164,7.287626,-6.615069,-9.549615,-8.954991,8.591430,-7.271342,-6.849161],[9.880381,-3.681297,-2.474508,8.913674,-1.220954,-4.092136,3.189216,-4.350789,4.373679]],[[-6.884627,-6.560474,-4.218737,7.510446,-6.360906,3.360288,-0.650862,-9.106114,5.708243],[1.138007,8.572520,2.670027,-4.894301,-3.922614,-8.897734,4.588929,0.015431,5.616441],[-3.538475,0.233520,-7.399666,9.666453,-5.291487,-5.935698,3.098856,-9.439814,8.526667],[-7.341692,-6.723908,-3.716645,-0.271544,-9.317637,0.429904,4.643541,-9.866282,-3.575554],[9.753481,2.571112,-5.521895,4.457239,2.535183,-6.998882,-5.530469,2.110267,-4.247483],[0.871437,6.891631,-5.097015,-5.843823,-8.976333,3.374641,9.252062,-1.601121,-1.759360],[-3.007072,-6.384799,7.597714,-6.442416,-7.052584,-2.141469,-1.456145,1.222049,2.240784],[-9.215586,-4.848862,-8.300315,-5.635782,-1.498915,-9.137340,0.530204,8.162742,7.019614],[-3.278315,-3.006795,4.366605,6.305225,-4.392569,1.884874,7.703374,7.425657,-8.440972],[7.835021,-3.460663,4.518132,-1.164586,3.538076,8.540309,-6.708894,7.827683,-8.356874],[0.697708,-8.296554,-9.853456,-6.787654,1.926012,1.814216,9.568645,-3.103990,0.497662],[2.271094,-8.334063,4.473921,0.668330,-8.400810,-0.343825,2.727108,-0.685538,7.334778],[8.232361,-2.905293,-3.229424,-1.206030,-4.108921,1.748614,-2.963063,1.037213,8.448439],[-6.727585,-7.688660,5.661174,6.806912,8.555850,-7.604518,0.029179,-4.223182,6.375071]]], dtype = "float32")#candidate|2406|(11, 14, 9)|const|float32
bop_2407 = relay.floor_mod(var_2405.astype('float32'), const_2406.astype('float32')) # shape=(11, 14, 9)
func_1940_call = mod.get_global_var('func_1940')
func_1943_call = mutated_mod.get_global_var('func_1943')
var_2423 = relay.var("var_2423", dtype = "float32", shape = (2400,))#candidate|2423|(2400,)|var|float32
call_2422 = func_1940_call(relay.reshape(var_2423.astype('float32'), [16, 10, 15]))
call_2424 = func_1940_call(relay.reshape(var_2423.astype('float32'), [16, 10, 15]))
func_442_call = mod.get_global_var('func_442')
func_444_call = mutated_mod.get_global_var('func_444')
const_2453 = relay.const([[-9,4,-9,6,2,3,10,2,9,4,5,8,-9,-10,3,5,10,-10,8,9,5,5,-8,-1,-1,7,-6,5,-5,4,6,2,9,-5,7,9,5,-9,3,10,-7,-1,-3,8,-3,8,4,-3,1,1,3,-1,-4,-3,-10,-2,-1,10,9,-2,2,2,-9,8,5,9,9,-6,10,-9,-4,9,-4,-9,-7,-7,-2,-3,-4,-10,-10,4,-1,-2,10,3,-4,9,-1,3,1,7,9,-6,-2,-1,-5,2,7,-9,7,1,4,1,2,3,6,-9,-1,7,1,-6,2,4,-3,-6,-5,-4,-9,-4,1,-4,-1,-1,8,-8,3,-7,1,4,-2,-4,9,8,5,9,-3,-4,-10,7,-2,-6,8,-1,3,-4,-8,-6,8,-7,5,-8,10,3,6,7,4,4,7,4,3,-8,6,-9,5,-5,1,9,7,1,-1,-1,4,-10,9,2,9,4,-2,-10,-7,9,10,9,-9,9,1,-8,5,3,-1,-7,-4,6,2,-5,10,-6,2,-8,-6,-5,-8,9,1,9,-8,2,7,-10,-3,9,8,6,1,-5,10,5,2,-9,-7,-5,-5,8,7,3,2,-5,-9,10,-2,8,-4,-8,-6,-9,7,9,3,8,-5,9,-4,8,3,3,3,-9,-6,-3,-6,-5,-8,-9,-6,-8,7,-8,2,-4,6,-2,1,-5,-8,9,-3,-9,3,-10,4,-9,5,-1,5,-4,3,9,-7,2,5,1,8,-8,7,-9,6,-1,-5,-10,8,-9,-1,-6,3,4,-1,-5,-5,1,1,-5,8,-1,-8,3,-6,6,3,4,4,-5,4,-6,-2,-3,9,-1,-3,9,-3,7,7,7,-7,-5,10,6,9,-3,2,-8,-3,9,-1,-7,-3,6,-8,-9,5,-6,3,8,-5,-4,8,-10,-3,7,7,10,10,9,8,-3,-3,7,2,-9,10,-5,-7,9,4,-2,2,1,10,10,-10,-1,3,-9,7,3,1,-6,-5,-6,1,-9,2,4,10,9,8,-4,-2,-7,9,6,10,-8,-7,3,4,10,10,7,-10,3,-6,9,8,-7,-6,8,-5,10,-3,-9,-2,3,4,5,6,-10,-3,-10],[-4,9,-2,-5,-7,10,-9,9,9,-5,-1,7,-8,-10,7,-3,9,-3,1,9,-7,10,-7,5,-2,-10,-3,-10,7,2,-2,-7,7,3,9,7,-2,-2,-7,-6,9,2,7,1,-4,8,-5,8,-6,-9,-4,3,-7,-6,1,-3,-9,2,-9,-10,5,-10,4,4,10,8,-2,-9,-5,-3,-6,-9,-3,1,-4,-8,8,3,7,-3,-1,-10,-2,-3,-5,-7,5,8,-7,-4,1,-3,-10,-2,-2,-4,5,-9,7,6,-8,-5,-9,5,-3,10,-10,2,7,-9,-10,-3,8,-2,4,7,2,-9,4,-8,2,10,9,2,-9,-7,3,-3,-6,8,-4,-3,6,7,5,-6,3,7,-1,10,-1,6,-10,6,4,5,-6,6,10,3,-1,2,-6,-6,9,6,6,3,3,-4,-3,6,-9,3,-6,-7,-5,10,8,-8,-5,-5,8,-7,-9,-7,9,-2,-8,8,-9,-2,3,-6,10,-8,-8,-4,-2,7,-3,4,10,2,8,3,-4,4,4,10,3,9,-2,-10,-5,8,3,-1,5,-10,-3,4,7,7,-7,-5,5,-4,6,-1,-2,10,10,-8,-3,2,3,-3,4,-2,-7,3,-3,-8,2,-2,10,-10,1,5,-10,10,-3,-6,5,9,-6,-3,-1,10,2,-8,1,-3,9,6,7,3,-1,8,-8,7,9,-3,-10,-2,4,-5,1,5,7,9,7,3,-2,3,8,-4,-9,5,-1,-2,-10,-7,-6,-1,6,-7,4,3,5,-8,6,-9,-8,-4,5,3,4,6,-4,5,1,-5,5,2,3,-2,9,-4,8,-7,4,8,-8,8,-5,2,-4,-10,-4,-9,-2,6,2,2,7,-3,-7,-7,-5,-9,-7,-6,-7,-1,9,-7,-1,-6,-2,1,6,-10,-4,10,-3,2,9,4,4,-6,-5,6,6,7,10,1,1,-1,-8,6,9,3,4,5,-3,3,-5,-4,-10,-1,10,-6,-3,7,7,5,9,-5,5,3,2,6,4,8,-10,4,-1,10,-7,-7,10,10,10,-2,-5,1,-8,5,-6,6,2,-7,-10,8,5,2,7,-3,-9,-10,-10,4,-1,-2,1,-4,-9,7]], dtype = "int64")#candidate|2453|(2, 420)|const|int64
call_2452 = func_442_call(relay.reshape(const_2453.astype('int64'), [4, 14, 15]))
call_2454 = func_442_call(relay.reshape(const_2453.astype('int64'), [4, 14, 15]))
output = relay.Tuple([bop_2407,call_2422,var_2423,call_2452,const_2453,])
output2 = relay.Tuple([bop_2407,call_2424,var_2423,call_2454,const_2453,])
func_2462 = relay.Function([var_2405,var_2423,], output)
mod['func_2462'] = func_2462
mod = relay.transform.InferType()(mod)
mutated_mod['func_2462'] = func_2462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2462_call = mutated_mod.get_global_var('func_2462')
var_2464 = relay.var("var_2464", dtype = "float32", shape = ())#candidate|2464|()|var|float32
var_2465 = relay.var("var_2465", dtype = "float32", shape = (2400,))#candidate|2465|(2400,)|var|float32
call_2463 = func_2462_call(var_2464,var_2465,)
output = call_2463
func_2466 = relay.Function([var_2464,var_2465,], output)
mutated_mod['func_2466'] = func_2466
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2545 = relay.var("var_2545", dtype = "float64", shape = (13, 3, 13))#candidate|2545|(13, 3, 13)|var|float64
uop_2546 = relay.asin(var_2545.astype('float64')) # shape=(13, 3, 13)
const_2553 = relay.const([[[-0.869033,3.748320,-5.728581,6.014352,4.725286,-3.051045,-4.274693,0.062962,-9.998246,1.616221,3.269174,5.201470,-3.353313],[-8.985154,-9.473353,3.581805,-5.181441,3.006258,-7.761516,-4.330054,5.569211,-9.025455,1.241528,-5.006187,1.287859,0.932604],[6.584649,-9.734259,-5.562557,-9.877710,4.714771,4.498592,-6.862366,-8.477402,9.787673,-0.366322,0.483286,-6.491037,5.731429]],[[6.380796,-6.628761,8.886475,6.718986,9.405983,2.224315,-3.632861,-1.380354,-4.245620,-3.241443,3.479955,6.445432,-8.080192],[-2.432674,2.090969,-1.906840,-8.190273,0.326066,-5.496129,-2.239794,4.097972,5.018767,-1.315709,7.789865,-8.172962,8.262772],[-6.022813,-6.092388,4.465519,0.747331,-5.700659,4.322997,1.179484,-7.456019,-2.217834,3.575656,-0.137220,9.712722,-9.865211]],[[-9.391167,1.184817,-9.682837,-8.669360,-5.786143,-6.126079,5.805447,1.923992,0.774567,1.624942,5.275223,-3.696362,4.864654],[7.940719,6.295189,-7.235850,2.549028,9.887513,6.022544,-2.206956,-5.451752,9.177370,6.730598,-5.716977,6.086421,-1.177157],[2.584789,-0.454103,-2.359331,-3.860810,5.995822,0.636464,-6.529756,5.022748,-3.663384,1.355008,-0.936341,-5.320505,-8.021403]],[[-2.534655,4.604962,-4.381533,-3.666085,7.545380,-6.751156,-3.367133,-0.641636,-4.276519,9.290208,-7.396723,9.568316,-6.484540],[9.955182,4.034661,3.228773,1.620199,8.348612,-0.038984,-2.797366,-1.835397,4.971032,4.025000,-4.293390,-2.960964,7.477887],[1.719652,-4.180112,-0.137163,3.217121,6.777982,2.218166,6.057372,-1.590272,-1.593584,9.977259,-8.901298,-1.869590,6.113397]],[[8.150033,-7.288032,-5.997774,-1.352928,4.560473,-0.944154,-1.539724,6.503796,1.263778,-2.236623,-2.371343,-9.411203,2.293806],[-8.295384,-1.595219,-1.419916,0.689618,-0.480468,7.828484,0.885967,6.801213,5.127190,7.226440,-5.667393,6.221073,8.584033],[9.398005,6.417726,-1.890869,-5.798669,9.143734,-1.085308,5.887002,1.288969,1.093865,4.803011,-2.443835,7.793982,-8.305038]],[[-7.111231,-8.773861,0.200400,-3.019076,0.399408,1.843479,1.154202,-0.511912,3.708307,6.551816,-3.589061,3.628085,2.567529],[-3.932352,-0.747225,-8.985660,-1.452834,-7.755354,8.121761,5.909086,5.916383,-2.685755,9.036137,-9.726257,2.369598,6.856635],[0.613763,2.264023,6.790858,4.020873,-9.954255,-7.348914,-3.370523,0.585971,8.461427,-8.230885,4.181781,-9.216276,-3.250772]],[[4.624223,-1.796320,9.551375,-9.588077,-2.739788,8.598660,3.399313,-1.039186,-6.327335,-9.567878,-0.165757,-3.881616,-2.175288],[2.239809,4.087791,8.749419,2.110343,6.171634,9.431488,-4.287732,9.178334,8.377486,0.826666,0.410870,0.619005,7.553870],[5.813789,-0.065217,4.641060,-3.162805,3.611221,-7.465343,7.508431,-4.712568,5.170644,6.323096,-0.050226,0.022554,-5.663602]],[[8.222714,-9.400570,5.386444,8.671604,3.215023,9.623683,5.209892,5.729093,-1.633677,1.091012,-4.323226,3.682480,-8.879017],[-5.729882,5.547219,-4.189501,-2.118454,-4.526430,-0.974084,-8.650608,-6.106314,-8.342125,-6.631445,3.103010,-0.106943,7.572517],[2.621977,-2.296495,-2.032055,3.955885,9.433335,7.020210,-6.258857,2.001337,3.995955,-2.933543,-5.149024,4.884786,9.101121]],[[0.820724,8.223149,-6.030029,9.528214,-5.100724,0.245563,2.484270,7.013913,4.541013,-7.559746,8.975710,-3.067634,-7.183678],[-8.133270,8.900542,-0.409142,1.587887,-4.574481,2.188504,5.805274,0.554878,7.457891,7.334373,7.097631,9.354070,-7.020246],[1.628093,-2.902326,3.919106,2.588551,-7.376724,2.013351,-4.789736,1.378852,7.284234,6.456435,-5.903042,3.603424,-2.719533]],[[-8.384061,9.375758,-5.483989,7.762184,-7.587215,2.986336,5.863265,3.130287,7.742170,-4.336122,9.163364,7.336939,7.904454],[-2.646188,-5.786038,4.060049,-6.124958,8.140439,-4.320164,2.224896,9.792201,-8.906754,1.366523,9.506228,7.155854,1.844091],[7.941319,-5.662117,-8.775958,2.594631,1.036304,3.478938,1.651790,-8.317201,0.922057,-3.162240,-8.018609,-1.845565,7.266331]],[[-0.193539,5.982785,2.686026,1.220213,6.617041,-4.595010,-8.339958,-1.130357,5.196438,-3.924668,9.580789,-0.183548,-9.890071],[-4.312786,-9.545289,-1.458573,7.257959,-5.562993,-5.258580,-8.026004,-6.176054,-9.050612,-8.665037,-0.172467,0.339259,7.166216],[5.932968,-8.263215,-1.246988,-3.023946,-0.697667,9.271639,-0.863961,8.348021,4.825091,6.712413,-6.273203,-8.416349,-7.228199]],[[1.033951,7.861288,-8.621391,-9.014830,-9.808193,0.133256,5.933395,9.555876,1.448015,-5.302179,-5.361658,-4.092973,6.427413],[-8.900223,9.288582,1.837581,-6.598628,1.320389,1.512329,3.004757,-0.616906,-8.853519,4.089868,2.141515,2.853360,6.113466],[7.954507,3.079301,-0.286183,0.238672,-4.177081,-8.110981,7.353732,0.308959,6.851878,5.212938,-3.885703,7.002020,1.684805]],[[-8.634132,9.722173,3.428416,-2.226821,3.832269,-8.055982,-9.425802,9.740562,0.928410,6.668994,3.176118,3.034047,-2.818728],[-4.511769,9.998467,-3.292961,4.116580,1.556750,8.262887,3.716930,4.945085,0.830440,8.993134,-4.927747,0.304271,9.806953],[2.364852,7.932182,-3.862865,7.901511,-6.619957,-0.138387,9.147705,-0.902203,9.436068,-6.604398,6.210948,-0.702571,-9.414324]]], dtype = "float64")#candidate|2553|(13, 3, 13)|const|float64
bop_2554 = relay.bitwise_xor(var_2545.astype('uint32'), relay.reshape(const_2553.astype('uint32'), relay.shape_of(var_2545))) # shape=(13, 3, 13)
func_2462_call = mod.get_global_var('func_2462')
func_2466_call = mutated_mod.get_global_var('func_2466')
const_2574 = relay.const(1.695898, dtype = "float32")#candidate|2574|()|const|float32
const_2575 = relay.const([[-3.144805,8.920037,3.596857,-3.031886,4.558792,0.023921,-0.403996,4.915244],[4.800995,-2.453608,-9.630695,4.308674,-9.317218,-1.132453,-6.341693,8.090155],[7.006242,7.140878,-4.020747,7.607399,1.884397,-3.414529,-3.357302,2.605262],[-1.082844,-7.161925,2.276703,8.092775,-8.889948,-2.604454,0.945945,8.361740],[1.265661,-9.425830,0.856706,4.775084,-9.627504,-4.154857,-4.174027,-8.015929],[3.182375,4.427098,-9.972795,-4.621641,-5.544722,8.704342,-8.174347,-2.716204],[0.889657,3.957354,-6.323080,5.278358,-2.843170,6.977940,6.864137,-2.012035],[-2.126475,1.609809,-3.470810,7.750468,5.708259,-7.749345,-6.838441,2.192428],[7.323927,-7.283397,4.504743,-6.340380,3.352585,-6.857862,1.147302,5.721377],[-8.577272,4.141818,2.388747,1.158483,8.130883,-2.267728,-2.017206,-5.460762],[7.686138,5.036995,-7.423817,-9.197467,2.454182,2.626989,4.338532,-8.317695],[2.286128,-5.989385,5.661623,9.472836,-2.791876,-3.278357,5.899197,-3.690938],[8.978931,-1.730093,-9.928149,3.192212,9.796820,-1.182585,9.031185,7.145522],[-8.898985,1.379187,9.746112,3.887510,7.004333,9.655060,-0.933380,4.987381],[6.994002,5.748700,-2.760791,-0.791419,9.906557,6.824622,9.834626,-1.684071],[-0.062280,7.586593,-0.499060,1.478591,-2.595730,1.221811,2.903091,-2.601283],[-9.751606,-5.010322,-7.317269,-9.473274,2.190089,2.056277,-3.726774,8.643692],[3.378716,3.713646,6.186431,2.117718,1.728570,-2.127612,6.887097,7.481806],[-4.669193,4.353626,-5.612411,8.392302,5.121737,1.934235,-7.013582,-2.857810],[4.788727,8.693573,9.263590,1.411853,8.161142,4.165810,-3.732645,-3.274973],[-0.934171,-0.506202,-1.912693,-1.019181,-8.583798,8.279546,-1.012772,-1.106825],[1.055883,-1.338437,0.114980,5.830710,6.620337,3.956366,-9.161300,0.185077],[5.570422,3.434046,0.891492,4.733346,8.044964,-6.581428,6.552719,-7.534710],[-3.547011,6.779636,-8.344018,3.281538,4.736080,0.310530,-0.575024,-8.521974],[-9.992691,2.893149,6.711913,2.768390,-4.660772,1.224427,3.594509,-2.757295],[-1.548274,3.885357,1.433320,6.163969,7.295737,-2.036913,2.288547,-4.835919],[-6.730258,8.480958,-5.314170,5.518563,-4.687917,-3.015825,-2.647788,9.663994],[-3.681438,0.479313,4.840394,-6.374163,4.565242,3.169089,0.921004,9.383179],[3.190538,-9.095170,3.330077,-4.782359,-0.770469,8.260408,-7.740858,6.607800],[1.989668,-0.511980,8.917228,-0.988451,0.685686,9.411451,1.906754,-6.859381],[5.079753,-8.836125,-8.919629,-8.325456,-6.226971,6.352248,1.769205,7.978019],[5.473297,4.623061,8.309636,-0.841794,9.502650,3.445674,-6.134696,-7.688759],[-6.448965,-8.356237,9.487308,4.294690,0.416258,-7.386136,-6.263083,6.684525],[6.583450,-1.478993,-1.443818,4.836714,0.796965,-4.034614,6.672243,3.860715],[-6.254001,-9.285309,5.771114,7.710763,7.712367,6.719078,8.212771,8.850631],[6.307386,0.653555,-8.449097,-0.955771,-5.014466,6.621925,9.079960,6.112084],[1.693457,7.197934,-0.447879,5.895406,8.531300,6.150057,3.767996,2.472861],[-6.812269,4.753158,-2.853618,-7.007019,-5.611840,-0.799824,7.430745,0.801412],[2.590191,4.693043,3.808696,4.309338,8.805220,-8.943581,-5.332480,7.362393],[-9.372533,2.913770,-7.721422,6.164161,-4.948190,-1.851427,-0.013723,-1.472721],[9.474738,1.176876,-8.984216,3.262706,7.133783,-8.625931,0.836967,-2.566700],[-8.176172,-1.801591,-9.927246,-4.518456,4.288912,-3.408081,-2.899975,-0.998588],[-2.288286,3.844948,-9.413279,-5.977383,-0.813793,3.730723,-3.521183,3.221652],[-2.647821,-6.487837,-8.497612,0.085100,2.781028,6.046340,-7.855591,4.864324],[1.471160,2.108053,6.017555,3.450799,-5.354919,-7.314996,-3.757720,-3.750197],[7.157981,3.330553,9.282922,-6.865232,-7.475775,-9.475906,3.071002,2.925636],[-8.001028,-1.369580,-5.372024,7.275167,4.379692,-5.058851,-7.549929,-5.294094],[9.724431,7.636482,-0.430046,6.458687,8.180565,3.643263,-4.882899,2.862270],[2.506833,-2.570033,0.578910,-3.091047,7.842310,-6.024256,4.596356,-2.309373],[8.562730,4.605424,0.222428,-8.708953,1.253175,3.595357,5.882892,-2.436074],[-9.834444,-0.066224,4.696003,-6.585620,4.626044,-1.232443,1.625454,0.256089],[-4.699682,-7.841757,-6.875865,-6.279242,-3.266879,5.297652,-8.022561,-5.093408],[-2.484930,-5.350872,-3.516029,4.148721,5.660701,-8.425048,-3.674983,8.676667],[3.002537,-8.123060,0.082580,8.379403,-8.685938,5.949507,-1.965700,5.938191],[-9.100326,-4.000762,1.078653,0.051131,8.446118,5.802322,7.941692,-8.842076],[4.305945,-7.470826,2.127183,-9.441032,-6.931651,-9.432898,-5.330096,-8.773353],[2.504609,8.509626,-3.736229,-1.242331,-6.156425,2.165701,-2.064878,-8.227979],[-1.409292,-9.842834,-4.931702,5.709141,-8.007540,-7.429986,7.531239,-7.931819],[4.765421,3.763022,-4.099643,-9.636238,-3.775079,-0.975577,7.518591,-7.615482],[-7.735065,-0.950329,1.304468,8.720082,6.664189,-5.642059,-7.800598,-0.539152],[-0.139669,7.865029,2.607925,-2.625849,2.917033,-0.461491,4.456030,-7.496886],[-3.033828,4.821269,-3.731503,1.541854,-9.439568,5.743318,-9.544359,-0.534595],[2.079089,1.258919,8.991148,-1.859570,1.250819,-2.283664,6.804335,-7.952271],[0.985524,-1.926207,-8.827134,8.185046,8.560719,-5.090590,-0.047844,4.198435],[-4.979571,-5.520513,-5.770821,9.941241,-3.554235,-7.365447,-5.854830,0.736605],[-5.897547,-6.257610,2.965169,6.426923,-0.301679,9.638204,3.177277,-4.536960],[8.526300,0.960589,-3.008824,4.398881,-4.587500,-1.834149,-8.900891,-5.803630],[3.539589,-7.827641,4.387113,-3.906634,4.437451,-7.367512,-9.234504,-7.575127],[-8.268818,8.706067,-7.375156,2.840698,-3.839772,-3.326584,9.164606,-2.722659],[6.348365,2.667348,-3.182289,-3.415384,9.705409,-8.905639,3.850365,-7.231952],[5.229072,-1.047288,-7.809356,-1.930145,-5.109539,-0.538295,-3.099467,-5.203099],[8.435472,-6.354090,0.297190,2.684455,7.932673,-6.177532,-7.016163,-4.375196],[-8.234387,-1.902448,-4.062749,-5.041830,5.370344,-8.500529,2.689305,3.427304],[6.815193,-2.848416,-9.725509,2.494508,-9.960214,-2.627175,-0.316778,-6.942729],[-1.595472,-1.245537,7.839366,2.510180,6.346346,-2.469516,-0.860147,6.867619],[3.417138,1.648210,5.344426,-3.052261,-5.148250,-3.131697,4.900230,-8.734710],[7.296004,6.945741,0.755915,5.275513,-4.788692,5.167270,2.199437,-7.705978],[-8.823393,-5.531338,3.134514,4.339744,-1.578270,-2.967987,-9.926360,4.192231],[9.157933,8.609730,2.785312,4.942460,-2.732960,-7.980917,3.918731,0.065632],[-2.298891,2.831024,-9.739547,-5.944062,5.602598,-3.308808,4.115297,4.004993],[-6.187998,6.282388,-3.471876,-7.641748,6.416795,-4.227980,2.314407,-4.409523],[-5.052458,6.977203,0.243668,5.943063,3.241611,-4.545975,5.124774,5.818636],[-3.625186,0.217470,-2.686616,-2.586631,-6.029180,-8.167474,-6.518409,-0.617594],[4.548850,8.471052,5.082805,2.932024,-4.269616,1.520880,0.099462,-1.760131],[6.442030,-3.406776,8.375530,9.398590,-3.086775,7.155047,-7.238212,3.064118],[-9.586967,-7.777625,8.056904,-3.521969,-3.205984,5.952637,-7.217859,1.447301],[4.448610,2.192504,-0.974819,-7.628182,2.057488,6.140399,5.515591,4.313873],[6.260228,6.294836,9.447663,2.953685,8.059976,8.893871,-7.140292,5.366305],[6.412972,-1.116856,1.730217,-9.530685,-8.602721,9.919921,-8.068814,4.002039],[-0.233013,-8.102842,-6.156961,1.983215,-0.625356,-1.908372,-0.291878,-3.499665],[-1.961258,6.991090,6.518449,-1.728403,-4.476145,-9.124046,-9.950842,-9.202466],[-3.329516,-8.963171,-3.417354,3.479240,2.311402,0.565846,7.004706,6.518734],[-0.087952,-5.415183,-7.722845,-9.491405,-3.652797,4.847619,-0.138618,0.830659],[-2.417598,-1.545996,-5.255789,4.812613,8.762637,3.752666,-0.340171,-2.971419],[9.450649,-4.486561,-3.056927,-7.131196,7.648872,0.173415,-4.848902,8.796333],[4.022194,2.143642,8.271631,4.769980,-5.137767,4.636777,1.467239,7.265493],[-8.215475,-9.857509,-3.902830,0.150082,-2.480002,-9.967938,-9.223141,2.760166],[8.166342,7.758643,7.822928,9.795341,2.669444,-1.714295,-4.885789,6.071948],[5.823531,5.541460,2.020693,-3.055718,-8.981164,-7.635386,-5.734375,-8.033095],[-2.058666,-0.379590,-8.587320,6.427810,-0.492356,-7.989889,-3.987565,-9.965048],[9.501797,4.675898,-3.211871,-9.406417,-0.753659,2.662812,-7.595987,-5.578556],[6.818523,-0.528891,-8.013539,5.392341,2.254408,-8.319230,-6.428957,6.325415],[-8.040483,-8.784682,-3.194897,0.451626,4.884921,7.930018,-4.500927,-6.187220],[-7.016257,0.858336,3.658206,-1.347800,-5.035397,-0.045104,9.645657,-5.171807],[-8.384674,-7.749843,3.731154,-4.806880,1.902614,-4.295365,7.806775,7.541589],[8.904928,3.301937,-0.180658,8.003498,-0.573302,5.389446,-2.375791,2.886644],[-1.452103,1.462493,-7.036171,-4.386927,-4.152748,5.041598,3.519364,5.395962],[-8.899136,5.024200,-7.926153,1.723192,-7.521326,-0.077359,9.803713,-0.802789],[-1.430400,7.314890,0.384031,-3.728069,6.495675,4.766056,-7.908263,5.738094],[4.697844,4.396959,-9.287541,-6.869320,7.904949,2.224865,3.694133,-4.436120],[4.781285,-2.390679,4.739273,-2.467289,-0.084060,-9.934362,8.943848,7.694700],[-4.932509,-1.832306,-1.140171,-6.852868,-1.364318,-0.446496,0.727629,6.696949],[-0.386469,0.894258,-5.583884,-0.067465,6.225372,6.308802,2.438409,-4.758890],[-1.301562,-4.684426,4.841348,-9.231350,-8.718139,0.979839,-2.264245,-3.324164],[-6.084822,-2.905792,-4.532115,-4.081911,7.314803,-3.116906,-1.709137,4.902992],[8.834165,4.513642,-6.999963,-7.486405,-8.890242,-9.777540,-2.730075,-5.019687],[-1.567046,8.888812,4.186465,-4.121897,-9.030632,3.322682,0.181716,7.053612],[-4.189002,-9.387874,-1.833784,7.398352,-7.904813,5.421956,3.151160,-2.105647],[4.273884,-9.982534,2.802135,0.574250,0.331812,-5.550770,9.868116,7.923766],[1.608414,-6.943997,9.748911,-5.783010,2.687848,-9.925831,1.674689,-4.378651],[0.325640,-9.625276,-8.803617,-4.386833,-4.973550,-0.124459,-5.394072,-4.723991],[6.756228,7.993672,-0.632584,4.208963,-4.062489,-8.183914,-9.714959,-3.822681],[9.501368,-4.942209,-2.147119,9.287615,7.107784,6.269440,-5.567411,1.525338],[-0.939334,-6.500381,7.349775,4.724618,2.764600,0.654529,-4.152660,0.695945],[-1.159948,7.873212,-7.077217,-3.696937,6.397416,6.807593,1.386994,3.942589],[-3.512274,-0.701536,1.152418,0.537082,-4.663029,-2.127819,-2.698211,-5.021768],[9.546698,1.856360,3.528331,-3.926631,3.213268,-5.036021,-8.320345,5.510892],[7.153173,-6.421262,3.421880,5.385604,3.990243,-1.172547,-7.004261,-8.551886],[6.143752,4.786038,0.181853,8.697550,-0.196695,8.239076,0.444335,8.997278],[4.805923,-4.221354,3.568668,-7.634113,9.278015,-3.879515,5.373954,-4.028075],[-4.596334,9.339884,5.396773,2.363514,-4.931167,-1.129944,5.145715,-4.386471],[-4.504426,2.493249,2.150809,-6.174674,-8.080308,-8.546572,1.052687,-4.537080],[-2.422041,-7.768150,-9.509068,7.231415,-8.993597,0.308540,7.914068,-8.160957],[-8.947208,9.503507,3.151688,-8.224748,-5.812760,-7.722883,1.821074,-3.987027],[-8.894374,3.919044,-5.718992,-3.760009,0.735430,-0.989434,7.666088,-0.384266],[-2.014036,9.940064,0.035558,0.176364,-4.212569,1.928291,2.515540,-6.715001],[-8.152843,-4.750372,-3.330747,-8.768640,-2.344313,2.450602,2.890269,2.096078],[6.245317,-8.879033,4.116754,3.234759,9.395010,2.418357,-2.606274,-5.362228],[-4.783084,5.809745,4.221966,-3.049559,-2.588059,-4.167383,0.518833,5.163848],[-9.796694,2.491790,4.322720,-8.529675,2.769062,9.758236,2.764141,9.329525],[0.363968,-7.710954,-8.895316,-4.322475,-3.819435,-2.437663,6.658227,8.450304],[0.589218,1.159007,9.796096,4.384957,8.047190,-6.483576,7.509298,-8.616868],[-2.677182,1.876279,1.937462,3.079502,-7.831259,0.144034,3.637304,-7.323700],[9.407756,9.417064,9.845784,-8.835700,-6.537745,7.713882,-2.948420,-4.126524],[-1.896453,0.625479,4.500691,-2.372570,-4.921965,6.514279,-9.157576,4.827916],[7.659932,-4.764005,3.855243,-4.189050,9.498058,1.649926,2.316016,-0.659818],[-4.478461,-0.604821,-3.019021,9.245339,-3.784767,-0.121657,-4.754528,6.679092],[-4.380872,-5.123912,-9.685183,8.941220,-9.563297,0.427102,-0.337926,-7.826433],[7.792793,8.076093,6.491145,-0.217403,8.581727,-6.026303,-5.942237,-4.074661],[4.007736,5.907780,5.512215,2.543523,5.395125,7.212213,-6.962402,-0.832590],[-8.501309,9.099887,2.385620,-0.530677,-3.976391,-8.381342,-6.064209,6.729775],[-8.835560,4.754403,-4.135019,0.022872,4.465464,4.726239,-1.055715,0.516012],[0.961333,-9.534718,-2.512537,-7.039298,3.629010,-1.526772,7.790336,4.013492],[-9.419965,4.523531,7.450166,-4.404797,5.803464,-3.639097,-0.076714,9.037121],[-1.351656,-2.878218,-8.831928,2.300089,4.235902,7.665297,-9.134623,-8.619554],[7.620870,1.763374,4.932981,1.277892,9.212859,-1.758291,0.552415,-3.450628],[-7.626554,-3.861933,2.698968,-6.100499,6.750474,2.414277,3.653055,-7.899148],[4.923269,7.545877,-4.608307,1.491471,6.584401,1.963020,1.660311,-4.278311],[-3.058892,-0.906219,0.237590,-1.477437,-7.406302,-3.971329,-6.168181,-8.444068],[-1.721352,-9.072120,-1.073920,-8.759491,4.592360,-2.633225,0.025605,-8.513695],[-5.387501,5.888532,-1.764517,-1.399492,8.216869,-8.341388,-5.033511,9.051362],[-9.766332,2.621675,-2.190781,-1.819262,5.175779,-6.164235,-6.530526,-9.365258],[-0.350688,-5.578735,4.531858,6.066761,2.780364,-0.646923,2.011150,-8.423760],[7.366117,-6.182034,6.433035,-6.171234,-9.681840,-3.337137,0.282893,2.828505],[-6.451933,-4.598463,-1.473445,8.457819,5.212557,2.771230,8.120544,9.463947],[5.756178,-8.199972,-0.995626,6.314837,-8.189018,5.922575,-6.658753,5.795034],[-4.510903,4.539845,1.381907,-5.446192,-7.587169,7.916463,9.343032,2.379901],[9.732530,-5.547703,-5.408620,-2.761328,4.598721,-1.251075,-5.848714,-8.413853],[-2.360898,9.633247,-2.512410,-8.516148,-2.611969,8.168695,-5.536226,-7.943641],[-1.297421,-1.977624,2.562202,6.882554,-7.858015,-9.191843,0.629146,-8.205954],[-0.010924,-7.457431,0.949088,-6.934777,-1.973282,-1.346418,-7.519957,-9.415325],[3.926714,6.735110,5.321826,6.775061,-5.971633,-9.753253,-1.251380,6.401961],[2.416551,-5.823035,5.508899,-3.867893,-4.724847,-2.198234,0.230289,1.146236],[4.448478,0.702103,-7.454689,2.803906,3.020827,-6.684419,-9.800261,-5.010330],[4.059849,-3.242819,0.002658,9.623330,8.624599,-4.677111,-0.281221,6.222123],[-1.444819,1.860476,3.848591,-4.135306,-9.087535,1.751624,-8.631759,-9.471783],[-8.875315,-3.795670,7.381422,3.610754,-6.609333,-1.350892,2.475942,-4.280512],[-3.009224,-3.939258,-7.505440,-7.385574,-3.463086,8.208512,-0.645468,-3.201152],[8.021258,-0.195913,-4.117761,8.907348,-0.550901,-7.141458,-8.346705,3.235679],[-4.959256,-5.335509,-4.122331,2.749718,-7.434224,-1.895411,6.215625,0.338418],[0.768418,2.227735,1.099347,-4.851477,-4.512365,-8.213511,-2.952223,-6.478687],[8.647365,8.301057,3.343854,-8.992147,-5.995134,-0.542059,-0.969388,-1.463914],[-3.886992,1.583269,-4.261817,8.526625,-8.564377,3.376929,4.514549,6.010498],[3.601708,6.705097,-3.540021,-1.280016,-3.384374,-2.001579,3.523807,-4.218928],[-8.555398,0.239365,-0.937112,-9.393496,-0.182867,7.227021,3.444584,0.802409],[5.056037,8.647981,-6.211453,-6.981540,2.651415,6.499403,7.022270,-6.324424],[-0.421929,2.082259,-6.461928,2.352687,5.342010,-7.542698,-6.916691,9.862295],[-2.520538,7.871370,8.360227,9.468897,-7.234620,3.623186,8.201017,6.858910],[5.513100,-0.732991,-0.406041,8.386546,-4.876229,-3.991523,7.110456,-8.690411],[9.888254,-6.499647,-2.918964,8.849036,8.862869,-9.616581,-3.978167,-5.048354],[-7.892747,5.546651,-3.618310,3.674439,-3.277575,2.655069,7.620341,-7.491534],[6.644916,7.250081,-8.806897,-3.577542,0.010623,-3.593912,3.814907,-5.832002],[7.943234,-8.953098,-1.618189,-5.428729,-3.260998,-6.186898,-4.685283,-3.709740],[7.533171,3.442806,-7.543199,4.431021,-6.172167,9.603482,-9.974943,-8.421000],[8.904734,-9.098805,-0.343483,-6.955270,-8.857288,-4.332576,7.669869,5.991589],[6.557054,9.048145,-2.022439,8.545693,-4.771605,-3.928854,-0.167014,6.352147],[-7.653086,9.314039,-2.330872,1.418095,-9.975911,9.856958,-6.754809,0.170982],[5.331910,5.858946,8.371205,9.577466,6.757454,8.210036,-8.896208,9.182570],[-8.516769,1.321866,-7.318831,9.262636,-0.693186,5.495219,7.281431,-0.591140],[0.567420,2.790380,3.543166,-8.517155,-0.125883,-3.897373,-3.030827,4.568158],[0.835621,-3.023584,4.215199,-0.966097,-5.157460,-4.333262,-8.041534,8.902744],[-5.291692,0.758067,1.633985,-2.166276,5.576069,-3.774358,-5.520886,-8.804643],[-6.197769,-0.921235,-4.725002,4.952804,-7.591412,6.237323,0.263172,-4.892608],[0.161535,9.559873,3.356413,-0.288856,-1.495854,5.600741,8.160957,-3.987299],[-7.073239,8.024977,-4.522135,6.372899,2.818531,0.427011,9.935278,-8.923227],[7.214375,6.592936,-9.991530,2.443268,-3.940558,5.589077,-8.512555,7.986567],[-2.657194,-3.522280,-2.812074,0.787947,-8.453255,-0.020182,-0.029851,-0.065780],[-8.051058,3.368857,4.457865,8.711454,0.313312,3.774997,3.867593,-1.466735],[-4.962970,-7.562430,-5.080615,-7.124460,-5.605991,1.051649,5.854084,8.766749],[0.158127,-7.513437,8.843410,1.442738,6.440763,8.031452,6.453110,-5.788006],[-0.112534,-3.553833,9.815184,4.457141,9.159201,-7.335528,-9.464778,-9.298447],[-3.237120,-0.870431,7.302333,-0.744726,7.060783,8.475441,2.151703,-2.230256],[-2.386531,9.950331,9.588072,7.048423,3.799198,7.551777,7.997732,1.628060],[4.991085,-6.557733,9.771697,5.222801,-0.972722,-5.546247,-9.755890,1.900115],[4.537287,-4.314291,7.875104,-7.960043,-8.304325,-0.303270,3.723623,6.651882],[9.732941,9.517157,3.824388,8.206603,6.072936,2.409839,-3.648549,-4.221512],[5.876904,-8.065453,0.450990,4.352264,4.248180,6.579625,-6.830204,2.444115],[-2.080450,-2.648793,2.682458,2.239849,3.769703,-8.274308,2.672641,-2.258923],[-6.035051,5.028210,4.384667,4.245997,-9.848071,4.375405,3.233826,5.852723],[-9.682459,4.395075,5.884001,-4.951669,-7.513373,3.021237,-8.954537,-4.918304],[-2.644606,-5.484773,5.388657,-1.369749,-9.126226,-8.949243,-8.876440,-0.432915],[0.907059,-7.062420,-9.328005,-1.236031,-8.954796,3.262788,2.968773,8.301635],[6.867656,9.838209,4.938612,9.561256,5.184950,6.098372,2.765784,-7.378170],[-7.477002,2.528802,-3.688862,5.845216,9.595388,5.243134,-1.841254,3.091943],[-2.626997,-0.288199,-1.805780,1.940193,5.130789,-8.457102,-4.213772,-0.202550],[9.433471,-5.819850,7.762161,-0.183074,-5.216163,2.555622,-4.212754,-9.754057],[4.739693,-4.253966,-2.246166,8.997406,5.192360,-6.273638,6.424647,-0.876277],[8.790822,-9.347542,-3.962827,2.399813,-6.267816,3.848912,6.216902,1.381747],[1.864668,3.642543,2.218920,7.852887,-7.584824,4.018603,-0.273282,-4.445875],[-1.325364,-9.932236,-2.330976,2.912801,-8.948863,0.199684,-4.263452,-7.431439],[9.357332,-1.663992,9.217001,4.095108,1.596750,1.259767,-3.569353,4.603920],[-1.558835,8.412364,-8.778630,0.448513,3.004653,-9.800898,0.661111,6.851321],[-3.996752,4.393983,-6.881996,9.208578,4.042706,4.054403,8.673063,-0.674064],[8.561693,-3.936839,-3.063247,-8.424417,-6.162988,-9.844015,-5.003283,-5.651876],[4.034595,-0.294621,-1.469998,1.928235,-6.883095,5.422967,-3.378669,8.934091],[1.374329,6.110009,4.054118,-8.466709,-1.516879,2.368855,-4.993485,-2.267464],[5.972232,5.863210,-9.347008,-5.429249,-1.919112,-0.335789,0.894956,-9.481772],[1.979814,9.646672,9.737243,4.011893,-3.426865,-6.273727,-6.158939,-1.225709],[3.336055,-3.037187,-2.151134,-5.144235,-6.664627,0.952597,-7.934116,9.381112],[9.829806,-0.093759,-4.354388,7.814750,-1.889980,6.656480,-6.699332,0.054252],[-0.081399,8.888793,-1.408484,4.071298,5.710320,-2.032786,-3.657244,2.013462],[-9.008559,-9.921698,7.596687,8.416186,-3.852341,5.956629,-0.232193,-1.921846],[-7.468196,-0.620715,-1.316125,4.712964,-1.019914,6.582696,2.424726,4.300644],[2.951606,-6.779139,9.937572,-0.802322,5.474105,-6.351839,-4.916237,-7.409253],[-5.977058,9.337141,-4.580825,-5.171882,5.015641,0.083528,4.280513,-9.730771],[-9.187118,0.716580,7.519292,0.050802,2.953802,-5.194468,6.873083,-6.899118],[0.875130,-0.860069,9.065534,5.370266,-4.590766,6.636078,8.130030,-6.031609],[8.067356,7.661410,-2.421703,6.411127,-2.962873,0.422622,-0.720568,4.972935],[-8.048359,1.767088,8.482153,-3.352811,0.806588,7.419696,3.319474,-9.447613],[1.775922,1.501699,0.376370,-5.110856,3.954282,4.954823,5.707334,7.074352],[-8.332743,2.954095,2.980776,2.132910,-1.152338,1.140945,3.010661,-9.056311],[8.761728,-3.350877,-4.307403,-2.056640,-0.247955,8.645496,6.293288,1.903727],[7.307461,0.620160,-3.235403,3.692768,5.743198,1.591298,-2.722064,6.906627],[6.763046,-1.618567,-4.900667,5.080023,-4.038496,4.657162,-4.040625,8.849658],[8.515032,-3.417940,-7.394854,-8.396890,6.769026,-2.938435,5.871492,9.516989],[1.781637,-1.961170,9.016543,-7.600585,-0.263733,9.278238,0.009721,-3.718384],[2.652849,-4.937132,-1.956870,7.042960,-6.223173,-8.036617,8.649925,1.526461],[7.235597,5.109407,9.318209,9.931271,5.770134,-1.054077,1.108229,7.669276],[-5.495179,-4.898325,0.710459,-7.882601,1.544300,1.050107,-7.085685,3.383930],[1.345675,-8.862582,0.258803,-8.767411,-4.751521,1.180497,-4.463822,-0.959727],[-4.152450,1.001657,-3.442647,-4.380294,-3.415268,6.184560,-1.157971,7.118688],[7.348715,-1.008829,6.057249,4.344768,-1.063399,1.987213,0.059805,4.857502],[5.849565,2.700878,-0.115553,4.334774,-2.235792,7.625708,-5.108912,-0.757012],[9.117918,-9.002887,9.679847,-9.933991,-0.050932,-2.294044,-4.889803,5.386223],[9.842934,0.548462,-2.584375,-6.242635,1.872427,5.287208,-5.767959,8.152572],[2.666263,-3.682490,4.745238,-5.922670,3.697778,-2.005962,-5.357703,0.403269],[-5.550130,0.794542,8.307391,4.470320,8.890985,-4.862222,-8.950954,7.797525],[6.996273,6.164661,5.539570,-5.133527,-9.939184,-9.709268,2.816758,-7.075902],[-1.411607,-2.397011,-7.185570,0.225949,8.254626,3.123303,7.704397,0.713212],[8.697427,-6.846943,-8.234355,9.160980,2.957978,2.310107,3.693762,-3.272049],[5.420227,1.431158,1.026527,8.259703,5.679815,-2.680000,-1.794821,8.509868],[-0.655421,-6.011888,4.959133,-5.688220,2.988523,7.525130,3.439371,-5.313397],[-5.127663,-5.788704,-3.761027,-4.949517,3.967506,4.750229,-6.173497,7.140230],[-0.558758,0.638218,2.287151,-7.260407,1.588969,0.788774,0.048932,3.410055],[7.100064,8.699264,-9.889724,0.032866,4.289594,7.417557,-3.250474,-7.950242],[-4.887238,-4.388410,8.014407,-8.010897,-1.846688,-2.224290,8.807868,5.151130],[9.402403,7.249159,2.391565,2.735620,9.969432,-7.876878,8.795657,-8.454206],[4.693759,1.671076,8.157910,3.548441,7.307726,9.931598,-8.912741,-9.715483],[-7.640342,1.117970,-8.652349,-8.544561,8.710288,5.032591,2.796142,-4.142697],[-6.372897,-5.515826,6.717067,8.553171,0.374062,6.695806,-5.116915,8.445653],[5.697683,-9.699634,-5.037454,8.315843,4.357428,-1.598380,-6.849974,4.061604],[3.491981,-3.727175,-1.393139,8.675004,1.478111,5.487551,-5.515213,-5.592262],[9.653789,-6.836746,9.626318,7.027580,-0.403803,7.315861,-0.091607,-5.999159],[-2.015479,-6.318392,-6.258502,-4.958043,-7.823579,4.594656,9.877297,3.850257],[-1.699521,-8.690742,8.152574,3.499726,7.510901,0.520948,6.777546,4.542094],[-1.324633,-1.562983,-6.405566,-4.351713,-9.022210,9.168177,3.118101,-1.539570],[-1.057232,7.122253,-1.858555,-9.701744,-8.921813,0.293668,7.684246,7.104623],[-4.686092,-2.884798,7.802180,-8.800453,3.125531,5.131621,-8.674048,-4.168546],[-5.073258,-8.874673,-4.166989,-7.892130,-7.432860,7.369374,5.599726,-4.253486],[-5.379216,-0.028870,6.510652,-8.172085,-1.435337,-5.847434,4.259230,-5.114340],[-8.015322,9.266917,3.317230,7.074147,9.882409,3.840530,-0.426928,3.309574],[-2.188942,-5.403339,-2.612681,-2.260218,-0.998200,6.211229,-0.059847,5.111437],[-0.358224,1.864290,-9.964258,-5.623786,9.882220,-3.006310,4.230085,2.731340],[8.551827,5.578071,-3.275133,4.419305,-6.936928,-5.734781,-1.605450,-4.067712],[-4.196106,-3.901155,-1.445275,8.932335,-6.402217,7.913154,7.931535,0.904713],[-6.274936,-9.267470,0.229747,4.340770,-3.757301,-3.689590,7.595981,9.143930],[-6.650927,2.115570,-1.963646,9.171252,-7.867726,-7.339252,6.214345,1.622099],[0.054095,-2.662335,0.212975,-0.305740,3.506142,-0.439918,2.434484,4.217007],[7.582632,6.769499,3.824081,-5.092809,8.308291,9.446872,-7.727852,6.217408],[-2.991942,-4.509147,8.741573,8.463203,5.366448,-7.030835,0.621494,2.643251]], dtype = "float32")#candidate|2575|(300, 8)|const|float32
call_2573 = relay.TupleGetItem(func_2462_call(relay.reshape(const_2574.astype('float32'), []), relay.reshape(const_2575.astype('float32'), [2400,]), ), 2)
call_2576 = relay.TupleGetItem(func_2466_call(relay.reshape(const_2574.astype('float32'), []), relay.reshape(const_2575.astype('float32'), [2400,]), ), 2)
output = relay.Tuple([uop_2546,bop_2554,call_2573,const_2574,const_2575,])
output2 = relay.Tuple([uop_2546,bop_2554,call_2576,const_2574,const_2575,])
func_2580 = relay.Function([var_2545,], output)
mod['func_2580'] = func_2580
mod = relay.transform.InferType()(mod)
var_2581 = relay.var("var_2581", dtype = "float64", shape = (13, 3, 13))#candidate|2581|(13, 3, 13)|var|float64
output = func_2580(var_2581)
func_2582 = relay.Function([var_2581], output)
mutated_mod['func_2582'] = func_2582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2753 = relay.var("var_2753", dtype = "bool", shape = (1, 1, 15))#candidate|2753|(1, 1, 15)|var|bool
const_2754 = relay.const([[[True,True,True,True,True,True,True,False,False,False,False,True,False,True,False],[True,False,True,True,True,True,False,True,True,False,True,True,True,True,False],[False,True,False,True,False,True,False,True,True,True,True,True,False,True,True],[False,False,True,True,True,True,True,True,False,False,True,True,True,True,False],[False,True,True,False,False,True,True,False,True,False,True,False,False,True,False],[True,False,False,False,True,False,True,False,True,True,False,True,False,False,False],[True,False,True,False,False,True,False,True,True,True,True,True,True,True,False],[True,False,False,False,True,False,False,False,False,True,False,True,False,False,True],[False,True,True,True,False,True,False,False,False,False,True,True,True,False,True],[True,False,True,False,False,False,False,False,True,False,True,True,True,False,True],[False,False,True,True,False,True,False,False,True,False,False,False,False,True,False],[True,True,False,False,True,False,True,True,False,False,True,False,True,True,False]],[[False,True,False,True,True,False,False,True,True,True,False,True,True,False,True],[False,True,False,False,True,True,True,False,False,True,False,True,True,True,False],[True,False,False,False,True,True,False,False,False,True,True,False,True,True,False],[False,True,True,False,True,True,True,False,True,True,False,False,False,True,True],[True,True,True,True,True,True,False,True,True,False,True,False,True,False,True],[True,False,False,True,False,False,False,True,False,True,False,False,True,False,False],[True,True,True,False,False,False,True,False,True,False,True,False,True,False,False],[False,True,False,True,False,False,True,False,True,True,False,True,False,True,False],[False,False,True,True,True,False,True,False,False,False,True,True,True,False,True],[True,False,True,False,True,True,False,False,False,False,False,False,True,False,True],[True,False,False,True,True,True,True,False,True,True,False,False,True,True,False],[False,True,True,True,True,False,True,True,True,True,True,True,True,True,True]],[[False,False,True,False,True,False,True,False,False,True,False,False,True,True,False],[False,True,True,True,True,False,True,False,True,False,True,True,True,False,False],[False,False,False,True,True,False,True,False,False,True,True,False,False,True,True],[False,True,True,True,False,False,True,True,False,False,False,True,True,True,True],[True,False,True,False,True,False,False,True,True,False,False,False,True,False,True],[False,False,False,True,True,False,True,False,False,True,True,False,False,False,True],[True,False,True,True,False,True,True,False,False,False,False,False,True,True,True],[False,False,True,True,True,True,True,True,True,True,False,False,True,True,True],[True,False,True,False,True,True,True,True,True,True,True,True,False,False,True],[True,True,True,False,False,False,True,True,True,True,True,False,True,False,True],[False,True,True,True,False,True,False,True,False,True,True,True,True,True,False],[False,False,True,True,False,True,True,False,False,True,True,True,True,False,False]],[[False,True,True,True,False,True,False,True,True,False,False,False,False,True,True],[False,True,True,True,False,True,False,False,True,False,True,False,False,False,True],[False,False,False,True,True,False,True,False,True,False,False,False,False,False,True],[True,False,True,False,True,True,True,True,True,True,False,False,True,False,False],[False,False,False,False,True,False,True,False,False,False,False,False,False,False,True],[False,True,True,True,True,True,False,True,False,False,False,False,False,True,False],[True,False,False,True,False,False,True,True,False,True,False,True,False,False,True],[True,False,True,False,True,False,True,False,True,False,False,True,False,False,True],[True,True,True,True,True,True,True,False,True,False,False,True,True,False,True],[False,True,False,True,True,True,False,True,True,True,True,True,True,True,False],[False,False,True,True,False,False,False,True,True,True,True,True,False,False,True],[False,True,False,False,False,True,True,False,False,True,False,True,False,True,True]],[[False,True,True,False,False,True,False,False,True,True,False,False,False,False,True],[True,False,False,True,False,False,True,False,True,True,True,True,True,True,False],[False,False,True,True,False,True,True,False,True,False,False,True,False,False,False],[True,False,False,True,True,True,False,False,True,True,False,False,False,True,True],[False,True,True,True,False,True,False,True,False,True,True,False,True,False,False],[True,True,False,True,True,False,False,True,False,True,False,False,True,False,True],[True,False,False,False,True,True,False,True,False,False,False,False,False,True,False],[False,False,True,True,False,False,True,False,True,True,False,True,False,True,True],[True,False,True,False,True,False,True,True,True,True,True,False,True,True,True],[True,True,False,True,False,False,True,True,False,True,True,False,False,True,False],[False,False,False,True,False,True,False,True,False,True,True,True,True,False,False],[True,False,False,True,True,False,True,False,False,True,True,True,False,False,False]]], dtype = "bool")#candidate|2754|(5, 12, 15)|const|bool
bop_2755 = relay.logical_or(var_2753.astype('bool'), const_2754.astype('bool')) # shape=(5, 12, 15)
bop_2768 = relay.greater_equal(var_2753.astype('bool'), const_2754.astype('bool')) # shape=(5, 12, 15)
output = relay.Tuple([bop_2755,bop_2768,])
output2 = relay.Tuple([bop_2755,bop_2768,])
func_2771 = relay.Function([var_2753,], output)
mod['func_2771'] = func_2771
mod = relay.transform.InferType()(mod)
var_2772 = relay.var("var_2772", dtype = "bool", shape = (1, 1, 15))#candidate|2772|(1, 1, 15)|var|bool
output = func_2771(var_2772)
func_2773 = relay.Function([var_2772], output)
mutated_mod['func_2773'] = func_2773
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2826 = relay.const([[[4,-3,9,6,-10,-3,7,1,-6,-10,-10,-10,1,-10],[3,-8,10,-9,-1,-8,3,4,-3,5,-5,4,8,-4],[7,9,-6,4,-2,4,9,6,7,-3,-4,10,3,-5],[-8,-1,3,-5,-9,-6,4,-6,-5,-7,2,-3,-8,6],[-4,2,1,9,5,4,4,7,-1,-3,5,9,9,6]],[[2,7,-4,-10,-4,1,-2,3,9,6,-3,6,-10,-5],[-6,6,-2,4,4,3,10,5,-2,-9,-8,-1,-5,-7],[2,4,5,-6,3,-5,3,-4,3,-6,-8,6,-10,-7],[5,-10,7,5,-5,9,2,-6,-3,7,-10,10,5,-5],[2,10,5,-4,-7,4,-3,-2,8,-7,8,4,-4,7]],[[-2,-6,4,2,7,2,9,8,1,-7,9,10,8,7],[-10,-3,7,-7,-7,-2,6,-10,2,-9,9,-1,-7,-6],[-7,-9,7,7,3,-7,-4,-7,-5,-7,5,1,9,-4],[5,3,3,8,4,-8,-1,9,5,6,-1,8,-9,3],[3,6,7,9,-9,-4,4,4,-6,-3,-7,1,-3,7]],[[8,-2,7,-10,-7,-6,7,1,-1,-1,8,-8,-4,-4],[-9,-1,-10,9,-2,4,7,-6,-2,-8,-4,10,2,8],[6,-2,-4,4,-5,5,-10,-7,-1,-3,-1,-5,-9,-10],[2,6,-1,-5,-9,-1,1,-4,-5,10,-5,6,-6,-3],[-6,8,1,10,-10,9,3,8,7,5,-2,-7,-9,-2]],[[-6,10,10,-1,-1,6,-5,5,-4,4,-4,3,-5,4],[5,-7,-5,-2,6,-7,-6,10,-8,3,-5,-5,-5,6],[1,4,-8,-5,-1,-7,4,-3,6,6,-6,8,-4,-2],[-3,1,-10,10,-7,10,-3,4,-8,-10,8,-10,4,10],[3,9,2,-2,6,-2,-6,-10,7,8,10,-2,5,5]],[[-4,-7,6,-4,5,-3,-5,-3,-5,-10,6,-10,8,-5],[5,-2,4,5,3,-8,-5,-9,-6,-1,-7,5,-3,-10],[-6,5,4,2,5,7,7,8,10,4,4,-9,8,-4],[1,-1,-8,10,-4,-1,-10,-10,-8,10,-10,4,-8,2],[-10,-7,10,-8,6,10,10,2,-10,6,-3,-5,-9,-4]],[[3,6,-4,-2,5,-1,-8,3,-2,8,7,1,-10,-2],[5,-9,4,10,8,-10,-4,6,-4,1,-3,-2,-3,-2],[-9,-4,-10,3,-8,-2,6,1,-5,-1,-5,-8,1,3],[-3,7,-1,6,-5,7,-1,4,-1,7,-2,-8,3,7],[8,-10,-7,4,-9,9,-1,-9,-5,2,-10,5,-9,10]],[[9,-8,7,7,-6,-2,-3,-10,9,-7,-4,10,7,-5],[8,-10,3,3,7,-6,3,9,10,8,-1,-4,3,-1],[1,7,-1,8,7,6,5,9,1,-2,7,2,7,5],[2,-10,-1,-4,-6,-8,6,-10,-7,7,-7,1,-2,-2],[-3,-9,-2,-9,8,5,6,10,7,-2,-9,2,-1,9]],[[-10,-2,-9,-7,10,2,-7,-3,-10,6,-2,-10,9,-6],[7,-4,8,7,7,-8,7,-8,-9,-1,3,-4,6,-8],[8,-7,-3,9,9,1,-9,6,9,4,4,-6,-1,-3],[-6,5,-7,6,-5,3,2,-9,-1,9,-6,9,-8,-8],[5,7,-4,-5,5,3,8,-4,-8,-3,8,10,-7,-6]],[[3,-4,-7,2,-5,4,-8,-2,3,-1,10,1,-8,-4],[1,9,-7,-4,8,-6,3,-5,-9,9,4,2,-4,2],[5,8,-9,1,4,8,1,4,-6,-7,7,-6,6,3],[-10,-5,-2,-10,-1,-4,-6,6,-10,1,1,-2,6,9],[5,-5,6,7,-2,-8,-8,8,9,-1,-4,7,-2,6]],[[-5,9,7,-5,3,-3,-1,-8,7,2,9,5,8,1],[-10,-10,-1,5,3,1,3,1,-6,2,-4,-9,10,8],[-7,9,-7,-4,-8,-6,-8,8,-4,-5,9,-6,-4,8],[1,1,7,7,9,-4,-10,-9,-1,2,-6,-6,6,10],[6,-3,3,9,6,-8,5,3,4,6,8,1,-4,-1]],[[-8,10,8,-5,9,-3,-7,-1,4,-10,5,6,-3,-7],[3,-9,8,6,-7,7,2,1,2,4,6,-6,9,2],[8,-10,9,5,3,3,2,-3,1,-8,8,9,-5,4],[-7,-7,-8,-10,-8,-6,6,-10,1,-7,-9,-5,6,-10],[-1,8,-1,-4,1,7,9,-2,-5,7,8,-8,10,8]],[[1,8,4,-1,10,5,-1,5,-6,-9,1,-6,-10,10],[2,-6,7,5,2,6,1,-5,6,4,-7,2,7,-9],[-4,8,8,-9,10,6,-9,-5,-4,5,-8,-1,-2,-5],[2,-7,-4,2,-1,-6,-6,4,-5,-6,-7,8,-9,-2],[-3,-9,2,3,3,7,8,-4,6,-10,6,1,-8,-1]],[[-9,10,-10,8,7,8,-9,-3,-10,3,-6,8,-8,5],[7,5,-1,-9,5,4,1,3,9,-8,2,9,-2,-10],[-8,-8,-5,3,9,-8,1,6,6,-1,5,7,9,-7],[-5,-5,6,-1,8,6,8,-2,5,-1,7,-7,-1,2],[-2,-3,8,1,-1,2,6,7,-3,1,6,1,3,-8]]], dtype = "uint64")#candidate|2826|(14, 5, 14)|const|uint64
var_2827 = relay.var("var_2827", dtype = "uint64", shape = (14, 5, 14))#candidate|2827|(14, 5, 14)|var|uint64
bop_2828 = relay.not_equal(const_2826.astype('bool'), relay.reshape(var_2827.astype('bool'), relay.shape_of(const_2826))) # shape=(14, 5, 14)
func_1940_call = mod.get_global_var('func_1940')
func_1943_call = mutated_mod.get_global_var('func_1943')
var_2838 = relay.var("var_2838", dtype = "float32", shape = (2400,))#candidate|2838|(2400,)|var|float32
call_2837 = func_1940_call(relay.reshape(var_2838.astype('float32'), [16, 10, 15]))
call_2839 = func_1940_call(relay.reshape(var_2838.astype('float32'), [16, 10, 15]))
output = relay.Tuple([bop_2828,call_2837,var_2838,])
output2 = relay.Tuple([bop_2828,call_2839,var_2838,])
func_2840 = relay.Function([var_2827,var_2838,], output)
mod['func_2840'] = func_2840
mod = relay.transform.InferType()(mod)
var_2841 = relay.var("var_2841", dtype = "uint64", shape = (14, 5, 14))#candidate|2841|(14, 5, 14)|var|uint64
var_2842 = relay.var("var_2842", dtype = "float32", shape = (2400,))#candidate|2842|(2400,)|var|float32
output = func_2840(var_2841,var_2842,)
func_2843 = relay.Function([var_2841,var_2842,], output)
mutated_mod['func_2843'] = func_2843
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3692 = relay.var("var_3692", dtype = "uint8", shape = (16, 10, 15))#candidate|3692|(16, 10, 15)|var|uint8
var_3693 = relay.var("var_3693", dtype = "uint8", shape = (16, 10, 15))#candidate|3693|(16, 10, 15)|var|uint8
bop_3694 = relay.bitwise_or(var_3692.astype('uint8'), relay.reshape(var_3693.astype('uint8'), relay.shape_of(var_3692))) # shape=(16, 10, 15)
uop_3715 = relay.log10(var_3692.astype('float64')) # shape=(16, 10, 15)
func_182_call = mod.get_global_var('func_182')
func_186_call = mutated_mod.get_global_var('func_186')
const_3719 = relay.const([True,False,True,True,True,True,False,True,True,True,True,False,False,True,False,False,False,False,False,False,True,False,False,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,False,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False,True,True,True,False,True,False,True,True,False,False,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,True,True,True,False,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,True,True,False,False,False,True,False,True,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,False,True,True,True,True], dtype = "bool")#candidate|3719|(396,)|const|bool
call_3718 = func_182_call(relay.reshape(const_3719.astype('bool'), [11, 6, 6]), relay.reshape(const_3719.astype('bool'), [11, 6, 6]), )
call_3720 = func_182_call(relay.reshape(const_3719.astype('bool'), [11, 6, 6]), relay.reshape(const_3719.astype('bool'), [11, 6, 6]), )
func_1890_call = mod.get_global_var('func_1890')
func_1893_call = mutated_mod.get_global_var('func_1893')
const_3729 = relay.const([-1.414444,1.681441,3.128725,-7.183490,2.552676,-9.803174,6.887289,-4.713070,-5.208002,0.140559,6.951920,0.550516,1.647625,-9.317215,8.231188,-3.737751,6.222900,-8.810708,1.288906,4.804157,-2.241272,-4.299324,1.434109,-7.899126,-5.499281,3.838532,-1.689850,0.849504,-4.614637,9.690583,6.000741,5.617483,5.685913,5.273664,-4.989092,-7.419325,-8.424904,-5.786941,8.043740,6.427578,5.974954,-6.610578,-6.245100,0.473698,1.186531,-8.998455,-8.144327,2.878702,-3.291453,-9.476498,7.197357,2.763893,5.052982,0.755000,-6.944405,-0.285618,1.541703,-4.273135,-9.219177,2.783560,-2.849038,-6.225398,9.591101,-5.319725,-8.542959,2.030058,9.326519,-1.742673,-7.568887,-1.862940,-3.850963,-6.697214,3.076539,3.548075,-1.443031,6.635563,8.573090,-9.478367,8.410914,-9.486589,7.962949,5.619473,-3.589829,-2.335311,5.528507,-4.455674,1.651576,-8.311840,6.023627,3.137041,-7.537864,-6.835343,-2.309664,-5.408876,2.306674,-7.588727,-7.643001,-7.423806,2.830764,-5.878223,1.139271,-1.433480,6.650508,5.941270,8.339633,8.066301,3.561374,6.901150,-3.174835,5.856023,-8.549862,-4.232049,2.410508,8.202558,2.551197,2.255748,-6.415052,-9.664138,-4.978572,-5.811155,-5.504362,0.262037,6.677430,1.893946,5.404288,-6.100525,-9.253775,-4.688962,1.020271,-2.498924,2.095785,3.661106,-1.080159,-5.151496,6.073375,-5.374373,-4.034372,8.919822,-0.875905,5.948465,0.106464,2.649611,-1.340591,3.972699,8.527103,1.929169,8.545727,2.538605,-9.768367,9.421894,-1.625320,6.640863,2.786526,0.018174,2.843673,8.641476], dtype = "float32")#candidate|3729|(156,)|const|float32
var_3730 = relay.var("var_3730", dtype = "int64", shape = (840,))#candidate|3730|(840,)|var|int64
call_3728 = relay.TupleGetItem(func_1890_call(relay.reshape(const_3729.astype('float32'), [1, 13, 12]), relay.reshape(var_3730.astype('int64'), [2, 420]), ), 1)
call_3731 = relay.TupleGetItem(func_1893_call(relay.reshape(const_3729.astype('float32'), [1, 13, 12]), relay.reshape(var_3730.astype('int64'), [2, 420]), ), 1)
output = relay.Tuple([bop_3694,uop_3715,call_3718,const_3719,call_3728,const_3729,var_3730,])
output2 = relay.Tuple([bop_3694,uop_3715,call_3720,const_3719,call_3731,const_3729,var_3730,])
func_3732 = relay.Function([var_3692,var_3693,var_3730,], output)
mod['func_3732'] = func_3732
mod = relay.transform.InferType()(mod)
var_3733 = relay.var("var_3733", dtype = "uint8", shape = (16, 10, 15))#candidate|3733|(16, 10, 15)|var|uint8
var_3734 = relay.var("var_3734", dtype = "uint8", shape = (16, 10, 15))#candidate|3734|(16, 10, 15)|var|uint8
var_3735 = relay.var("var_3735", dtype = "int64", shape = (840,))#candidate|3735|(840,)|var|int64
output = func_3732(var_3733,var_3734,var_3735,)
func_3736 = relay.Function([var_3733,var_3734,var_3735,], output)
mutated_mod['func_3736'] = func_3736
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3825 = relay.var("var_3825", dtype = "float32", shape = (15, 13, 4))#candidate|3825|(15, 13, 4)|var|float32
uop_3826 = relay.asin(var_3825.astype('float32')) # shape=(15, 13, 4)
func_2840_call = mod.get_global_var('func_2840')
func_2843_call = mutated_mod.get_global_var('func_2843')
const_3833 = relay.const([3,-1,-2,-2,-6,-10,1,5,8,8,-4,10,-4,-3,4,10,-3,2,1,6,8,6,2,5,-1,-5,-9,2,7,10,5,-1,-3,6,9,-1,7,-8,-1,10,-10,-8,-1,-4,6,-2,-4,-1,-7,10,8,3,-1,6,-6,5,-5,-4,-3,-5,-2,2,-1,10,-2,4,-2,-7,9,-4,-4,-10,-1,-3,5,-5,-4,-1,-2,3,-1,-5,-3,3,-10,7,-5,-2,5,3,5,5,7,-4,-6,2,-3,10,3,-8,-2,6,-3,-4,-6,-6,-6,-10,-8,-9,-3,-4,2,-2,9,8,4,7,-4,4,9,-9,-3,-6,-5,-7,-10,5,-7,8,5,-5,10,4,4,-2,-10,-8,1,-5,-10,5,5,3,4,-8,-7,-8,5,-1,-2,4,5,8,-7,-2,-7,-9,6,-6,5,-1,-5,9,3,-10,10,-6,5,1,-8,9,2,10,1,-10,8,-9,2,-6,6,7,-10,-3,8,-9,8,2,9,2,7,-8,-5,1,-5,-10,3,-8,-4,-9,6,-1,-7,6,6,-8,10,-10,-1,2,-6,-6,4,1,3,-2,-10,-3,7,-5,-9,-8,6,-6,8,2,2,4,-2,-4,9,-5,-1,7,10,-3,-4,-10,8,9,3,2,9,-9,-3,7,-1,10,-1,-9,1,-1,-10,5,-6,4,6,-3,3,10,-7,9,-7,9,8,-2,8,3,-4,-6,3,-8,-9,7,-4,-10,-2,-8,-10,1,-5,-6,-4,-10,7,9,-9,10,9,-10,4,4,10,7,1,9,-10,-8,4,-5,6,-3,-2,-3,-2,-3,-4,2,-1,6,-8,-9,-10,5,6,6,-5,-9,4,7,6,2,-9,3,-5,3,4,4,-10,7,-10,-8,-2,3,10,1,1,5,8,-1,9,-6,7,-6,-8,3,-5,-6,-9,-2,10,6,-5,-3,-2,-5,10,5,-1,4,-3,-1,1,3,6,-10,7,10,-8,-6,-9,1,-10,7,-7,-3,2,-7,9,3,-7,4,1,-7,-8,7,-2,9,5,5,8,2,-4,-1,1,10,8,-2,-7,6,-2,5,3,7,-9,-2,4,7,3,1,-3,-9,-5,10,2,9,10,7,7,3,-10,-3,9,2,-5,5,4,-8,7,-2,5,10,-7,-1,2,-10,-1,9,-10,-3,4,4,-1,8,2,4,3,-3,2,-5,-9,1,8,1,8,5,-9,-9,-3,8,-9,1,8,-4,-7,9,4,8,-7,-1,1,7,5,10,-5,1,3,-7,5,3,2,10,1,9,-6,-5,4,-7,-1,7,7,1,-10,-3,4,1,-10,-2,-8,1,1,1,9,6,-6,8,-1,-3,1,-7,4,9,-8,4,-3,-2,-2,-4,2,3,-5,9,-1,-8,-10,7,3,-7,8,1,-8,-8,5,-1,3,4,6,3,-8,10,-8,-2,-3,-3,10,-2,6,-9,3,-9,6,4,7,-9,-10,4,4,-8,5,-7,5,3,1,-4,2,1,-5,9,-2,-8,5,-2,-8,-9,-4,-9,-8,-2,-4,3,8,-5,-9,-6,3,5,5,-9,10,7,-6,2,-9,-3,9,-1,10,-1,-10,-9,-2,-1,4,4,-1,7,-7,9,3,3,8,10,-1,4,-9,-4,-1,-10,8,10,-4,5,6,-1,6,3,-7,-9,-6,-10,9,-8,3,-9,3,-10,-6,2,1,-1,7,-10,-6,3,-5,9,-10,-6,6,-4,5,-7,1,3,1,8,5,-2,-6,-5,9,6,-10,2,10,-6,-2,-5,10,-4,1,1,-9,-9,10,-7,-7,-8,-7,-4,10,1,-2,-4,6,7,9,3,1,-4,-7,1,4,-2,2,8,-7,4,9,4,-8,-1,9,5,-10,-2,-10,1,-4,6,1,8,7,9,-1,-9,4,-6,-8,4,1,-2,-10,-8,-10,-10,10,-10,9,-3,2,9,-6,8,7,-1,-9,9,8,4,4,8,2,-3,7,3,-1,-5,9,-10,-7,-3,6,8,1,-1,-7,-1,6,4,-1,5,9,-9,-5,-5,2,1,-1,-1,4,-9,10,2,3,1,2,6,-6,-2,-7,-5,4,-8,-6,7,-10,3,-6,8,-10,5,-5,-5,-9,-3,-3,-7,6,-2,-6,-4,-7,8,3,-5,5,7,3,2,-1,8,5,3,-3,-6,5,-5,7,8,-7,5,4,-3,-3,9,-2,-10,-2,-10,7,2,-4,-6,10,2,-8,-1,-8,9,9,-7,-5,-10,9,2,4,10,2,-10,10,2,-3,-8,5,-4,5,7,-10,9,-5,-7,-6,6,3,-2,1,8,-5,5,-6,-6,2,-1,10,-4,-10,3,-10,-5,8,5,-1,5,1,-10,9,-8,-1,5,-8,6,10,3,10,-2,-7,-10,-1,-6,3,9,-4,-4,5,-4,-8,10,-10,7,-5,8,7,-2,-1,1,6,7,-9,3,-2,-7,-7,-8,2,-7,-6,8,-5,2,-9,-1,4,-5,2,-7,4,3,-10,10,-8,-10,-4,-8,9,4,-4,4,-4,1,6,-10,-1,-2,6,5,-9,-6,3,3,-3,-1,3,-5,4,-4,-5,1,-7,-6,-4,-7,-6,-7,9,1,6,-1,5,5], dtype = "uint64")#candidate|3833|(980,)|const|uint64
const_3834 = relay.const([-1.825513,7.178028,-8.534918,-7.399799,1.343729,-8.813847,8.158234,-3.915698,-9.375533,-7.752604,-3.094641,-5.976306,-8.719347,9.983798,1.891576,-2.973316,-7.098122,7.285890,1.028443,-5.967157,-2.585520,-3.882567,1.349269,-2.304498,-9.625969,3.589014,-4.143913,-7.069377,4.836959,-1.054337,-5.272710,-6.903514,-5.291803,7.601494,1.744031,-2.393331,4.115471,0.194974,6.995600,-5.336239,5.376629,-6.066162,0.659926,-8.523603,-7.281721,2.918200,7.224918,-1.298843,-6.470891,9.786254,0.519939,8.578668,0.368380,5.072969,-1.967326,-7.249684,-0.918785,6.740741,0.785929,-0.453295,-0.526554,2.359150,-1.742897,6.079793,4.261265,-6.944133,-1.748585,8.395723,9.230384,-5.861223,-9.935616,1.842368,-2.082537,-3.449559,-7.130592,9.249285,5.765300,-8.010351,-1.746129,-3.780354,6.968531,5.364432,-9.533065,8.939195,0.844151,6.370869,-3.441866,-9.432797,0.775404,-0.456971,-4.786154,-5.084834,-4.820451,4.720971,-2.577113,6.536576,-6.006522,8.009143,7.561665,-5.787890,-9.486911,7.177607,-0.594732,2.636246,-1.600214,8.768189,-1.075239,-4.702478,0.763187,5.082999,0.251463,4.781954,4.070307,-6.489974,8.617606,-0.006020,-4.922060,-4.296020,0.268561,-5.332630,4.043997,-7.049883,2.667887,1.774505,-2.338282,-9.079741,9.314002,-1.408957,-6.365956,8.063278,2.154843,-9.669010,4.893550,2.704745,-9.883853,8.960045,7.328391,9.996948,-9.644245,1.443956,-7.744413,0.519983,1.856268,-8.888388,-1.211726,2.634541,9.740086,-5.472379,-4.004364,-1.086721,7.780360,5.603300,4.751604,-7.331271,1.865814,3.202281,9.477846,3.267298,-4.546285,8.934077,9.915733,-2.664283,-0.451159,-8.006341,-0.980965,9.018531,-9.047958,8.193105,-5.468963,6.271066,0.835403,5.919817,7.612434,-7.786737,-5.692704,4.823438,-9.764847,0.653634,-8.912061,-8.303169,-7.935404,-3.842648,-5.126799,-6.056309,1.999596,-5.905406,-4.401835,-0.158647,-7.102514,0.710477,-6.087376,-0.168128,6.979734,2.626292,2.222059,-0.238813,6.474397,-8.329409,-4.410616,-4.207798,8.571490,2.410072,-1.479078,2.584481,-2.368325,-2.511989,1.693074,5.079085,-0.055164,-0.660898,-0.249130,5.087485,-7.821977,2.378123,-6.368270,-2.837860,-8.874788,-8.983808,6.163510,4.762534,-9.458372,-8.984416,4.743672,-6.754721,-6.256603,2.178673,-2.607157,3.190790,3.257554,5.955196,-7.297744,5.045752,6.507181,-6.135025,3.051979,-7.772037,0.777141,-4.133135,5.356891,-2.636938,4.777103,-4.839218,-2.438389,-8.704277,7.024664,8.094953,-4.240890,-2.108395,-2.989886,-8.624186,1.189792,-9.814876,-7.684970,6.539819,5.089453,6.968531,7.279346,-8.845002,4.058446,0.006959,7.867125,2.042485,7.226759,3.652381,-0.551156,-3.215413,4.614885,-3.896051,3.889037,5.911738,9.144774,3.729838,-8.874924,-2.268477,3.345618,-0.885254,-8.445966,-1.639662,-5.898296,-6.004255,8.812355,-5.374352,5.145114,-9.521979,-9.067662,9.259820,3.754554,-1.312391,9.469439,1.970626,0.789274,9.114002,5.325046,8.241553,5.141764,-3.376817,-1.605394,0.131002,2.853871,-4.330788,0.323687,6.695219,6.929084,2.341369,-0.982581,7.100873,-1.662917,-7.007447,-3.578181,1.752492,1.391840,-1.196430,-1.287740,5.537033,-5.992365,4.447323,2.830177,-5.336812,7.076598,0.722642,-3.669209,7.069657,7.691235,8.798995,8.644134,-2.986769,-5.930774,9.367207,-2.248935,0.575881,-6.741358,2.870464,7.202485,-5.127905,7.746287,5.316039,-2.834144,-2.607526,-0.592332,1.211616,6.721512,-9.762909,4.354475,-6.499292,-2.915945,-9.871236,7.762139,-0.939671,6.830399,1.954995,4.915335,-2.694143,1.604210,2.811339,-0.457064,1.718614,-5.633345,-8.259506,9.616802,-5.151559,-5.213400,2.966312,-5.373070,-1.127941,-2.425544,-7.717716,-3.564681,-1.435528,8.300711,4.038784,-8.750547,6.821985,-6.489810,-8.542947,2.692135,7.641699,1.390132,3.195633,3.711603,5.385169,3.198072,5.500969,7.437892,4.297738,3.362800,-1.601545,0.104278,0.617348,7.116533,-0.538196,-4.572352,-8.256006,-8.669970,8.493182,-6.216614,2.656712,-6.229219,6.481324,-9.229773,-1.396050,-4.480163,-8.183965,9.267381,2.027843,0.929001,1.487933,-4.410083,-2.330328,6.560539,-8.105159,-0.484553,3.739734,-0.377883,-8.458368,4.796082,-2.022079,-9.995593,6.688869,-1.611232,-8.520362,-2.100240,3.089372,-9.735085,0.920961,0.314578,4.408070,-9.511473,-0.605890,3.279112,5.624470,-8.873797,-4.261742,-1.245049,-1.942367,1.035007,6.403423,-5.704226,-6.759475,-8.957913,-3.451423,8.179237,3.290668,-1.759748,-2.354005,7.799009,-7.734711,8.185009,-2.740395,-1.731102,0.920550,8.745788,-7.463122,6.121688,-5.164528,-0.056699,-7.836968,-9.554692,5.866575,8.387868,2.382443,-2.737534,-9.773254,-3.814510,4.177486,8.350829,-4.287966,4.872498,-8.783130,5.486441,-4.931247,9.768262,5.438637,0.015535,-3.225804,-9.232786,9.362447,6.196618,1.421893,-9.690173,5.452200,5.389204,-9.784529,-9.888200,0.382822,-5.801542,6.466262,-3.820017,5.874192,-9.250261,3.659890,8.966593,8.289052,-1.893812,6.418850,5.028288,4.223044,-3.417431,-0.468871,-1.251855,7.441698,5.571196,8.310462,5.569048,0.907655,-4.837614,3.430041,2.279242,1.116595,2.864918,-0.420082,1.924713,3.285623,-2.748084,-0.212181,9.738436,8.594696,-4.852063,4.126322,2.543149,9.934067,3.555240,-1.735103,3.081987,-3.494814,-0.390207,-9.137383,-0.899225,5.164538,0.971966,-8.772284,1.844328,4.871956,-3.599936,-7.111854,-4.375939,4.577616,-5.056912,-8.143259,7.823796,-3.572765,-3.671305,1.382845,-9.832563,9.406836,-8.743398,-5.420726,7.686184,-1.204366,-4.111948,0.906544,-3.228752,-8.937009,-3.706565,6.764014,-1.931584,7.928696,-1.537657,6.478279,-7.555763,-3.497476,-8.600095,-3.786623,-5.398329,3.112288,3.797575,2.880735,-4.088547,-3.835381,7.174096,-7.782815,9.633868,-0.174188,3.493312,-9.677913,-5.572230,-0.036018,-9.803581,-1.842923,2.990679,8.622085,-7.232896,8.010079,7.192230,-2.505152,9.699013,-2.911843,-2.538562,-1.591168,-2.444733,2.606635,0.106882,-8.638719,9.483058,-4.425209,-2.966164,9.021392,7.895998,2.966908,7.440811,6.033424,8.157367,4.260419,-2.678481,2.876048,6.455364,1.157785,-8.606908,-3.418430,-0.307863,3.931656,-3.710824,0.539957,1.102112,-9.371735,-7.942842,1.286841,2.650365,-0.518243,-3.219421,1.790201,-1.006848,-6.169655,-1.385418,-1.208019,0.187610,7.804949,5.703220,8.336798,-7.481976,3.666069,4.322315,-6.633913,9.862092,-0.418727,-9.880709,4.841583,-5.987369,0.308403,-1.534012,8.597704,2.890618,-6.838941,-6.900973,8.990085,4.964467,0.344878,4.977788,-2.498411,-3.887570,-5.294659,-2.686029,-4.371618,1.737083,1.234468,9.929521,-2.590337,8.126864,5.922806,-5.481009,-2.418974,5.437564,7.294281,4.423755,-1.389001,-2.418375,-0.066518,-1.944164,-0.634963,7.583917,-2.904530,-5.048231,3.181551,9.349259,3.469758,-0.691265,6.456089,-3.084080,-4.516040,-5.689115,4.469031,-7.980934,3.240209,-6.829430,-9.708871,0.869741,4.790209,3.408117,-4.309550,3.473929,6.095452,9.021701,-4.555640,1.204268,-2.514222,1.790980,-1.846660,5.221986,-1.625803,1.450563,7.058027,5.599526,1.265874,-3.039654,8.816827,1.891611,7.837160,-7.250146,-3.757702,-6.554095,2.549103,2.023983,3.196016,-8.482650,-9.290196,4.378440,-8.041378,-5.528278,2.642051,8.004576,4.828042,6.020441,-5.326499,-8.348504,4.689732,0.354489,-9.648473,4.950789,6.935130,0.636654,3.763439,-1.655631,-4.310190,2.613070,3.378407,-1.472108,-3.386346,2.456728,1.042446,3.533070,-0.289826,-7.592036,1.470796,6.398817,5.232351,8.854403,9.606305,-4.844373,-3.305694,3.189531,4.834178,-3.976636,-5.790733,-0.260975,5.425755,-9.042969,-6.075399,-2.731539,-6.498186,-4.524636,0.402959,2.531216,8.341932,-5.572908,0.337684,7.084378,4.075880,-3.255834,6.385830,-1.741253,9.389526,0.680849,7.989698,5.277960,8.053007,7.759446,7.529161,0.545443,-7.214466,3.121576,7.333320,-7.748035,-1.539767,-1.716879,6.225203,1.449247,-1.218305,-2.326103,-6.816563,0.093313,-0.897339,-8.011821,0.291988,-9.898557,2.272890,-2.321512,5.483096,-4.008538,1.401745,8.762887,5.556954,8.908566,3.998738,0.356471,-6.670251,2.638988,7.449264,-3.691421,3.648788,-4.582378,-7.111628,-9.232862,-8.934121,-1.800656,2.488500,-5.569551,-0.348945,-0.583684,-5.056475,8.777460,2.284735,4.691814,1.074178,3.636459,-4.458916,7.003585,-6.974591,-7.736525,-4.481536,4.701928,2.950689,-6.232357,2.027667,8.596302,-3.583947,-7.119302,-4.212859,-1.244185,-4.265650,-5.678123,-4.543250,8.398696,5.938602,3.731482,-6.376911,-4.242702,-0.939800,9.804686,5.903171,2.663438,-0.704291,8.209012,4.055613,-8.448755,-6.135827,7.923667,-5.675557,7.938593,-0.735057,-1.633853,2.872931,-6.035026,1.966272,-2.953988,2.329139,6.469096,0.203247,-6.115834,-5.845476,-4.805455,8.188076,8.500709,2.381362,-0.383594,4.473655,-8.909298,8.908380,4.049743,5.576897,7.837066,6.811121,-5.291792,-0.668930,-6.921954,9.512529,9.637807,-6.051242,-0.678373,5.129144,3.516160,3.715846,-0.873610,6.605360,-6.747243,3.308674,7.757426,-7.843326,5.990573,-2.506464,0.322222,2.802701,-5.269042,-1.911070,9.346185,4.634264,-9.811706,-7.677333,8.423869,-8.435760,-2.707202,-4.817452,0.405103,9.938824,5.222411,-2.570829,3.609402,5.432887,8.181781,5.282607,1.543543,8.808234,8.821676,-7.051661,5.145705,-0.574724,-7.630720,7.338619,9.995365,0.861216,-6.091357,-7.757036,6.101437,-1.378641,1.508888,7.559337,-1.732966,-5.602925,-9.910372,3.820466,-0.814590,-0.356909,-7.365442,-0.439302,-8.559288,-6.112508,6.943847,6.799365,-6.739179,8.330218,2.218844,-5.448554,8.105457,4.345990,-3.938474,-9.336272,1.939989,6.079743,-3.987328,4.006508,6.610112,-4.258378,-8.908017,5.458907,3.320908,-8.887954,0.610852,-9.891901,-7.947308,7.082426,-2.682390,4.150056,-0.322211,8.581540,-1.645679,5.368219,-6.493735,-6.958838,6.384644,1.968152,-3.902409,4.741221,3.146440,-1.598168,-2.118991,-2.648442,8.256600,-9.996596,-0.668549,8.258046,-5.774237,2.858691,-9.663570,-4.083802,3.896530,-6.845862,6.326540,-3.943717,1.023788,-9.329445,-7.095855,9.425245,-0.514037,4.959033,0.890985,7.153195,1.327349,9.523440,-0.443550,-5.126124,6.601470,2.295320,-4.543493,2.174895,9.485526,3.313365,-1.536115,5.752820,-1.850939,-2.143140,9.025919,-5.790858,-5.308416,-5.041472,2.941098,-4.381371,5.527853,3.083756,8.880499,-9.373687,2.741220,-9.327707,-0.231552,-3.996929,-9.653055,-0.813582,7.505749,4.914649,-2.547603,-5.362576,-3.139184,3.076398,0.581909,8.239046,8.096625,5.461438,-5.052646,1.903212,2.404725,4.075700,-8.987768,-6.093058,-1.048202,1.748974,1.202726,-7.705952,-8.761623,-5.978304,8.540506,0.410623,6.282532,8.803124,-2.395071,-0.764758,-5.479326,-3.107481,0.905841,-8.431075,-3.207697,4.385331,-4.812351,5.528499,2.131503,-3.476986,7.345667,3.867685,-6.711174,-9.497529,9.647115,-7.962374,9.364903,-1.699231,7.946856,-3.331230,-0.735218,-9.239651,-5.336548,-7.312420,4.471687,-9.705064,-3.543941,5.541364,-1.750497,6.221111,-2.373136,0.282694,-6.292733,-9.191046,7.236660,6.448480,-3.477894,-2.366237,2.551990,-0.215126,4.855438,-3.503617,9.834271,-8.922375,7.357067,3.652170,2.764263,1.690580,3.196515,-8.032994,9.375025,-7.792389,9.320266,-4.221757,8.813695,0.787922,8.641234,-4.257217,1.750396,-0.154668,0.366971,-7.048583,-3.065060,-7.726188,6.022246,-1.540005,5.675636,4.886535,8.017796,5.432943,-9.696725,2.301341,-0.530482,-0.086161,-1.141760,9.524933,7.152702,4.900618,0.037333,5.013655,-0.224347,8.992133,-4.882866,-6.328727,-2.964572,3.436247,-6.403066,-6.638323,-3.294954,-8.971056,6.205980,-7.899212,5.316406,9.354787,-8.651481,7.977606,-9.933405,-7.068643,9.123213,2.045696,-2.010422,2.566159,9.655644,-6.170143,-4.519904,3.806515,-6.381194,-9.844118,9.933055,-4.328932,-4.888310,-0.471206,9.296231,-0.137408,5.303006,-4.897546,-9.635753,-1.991134,-1.587418,4.570593,4.344018,-5.163035,4.074290,6.193871,-5.841259,-5.980576,8.989844,-7.133055,5.929890,-9.081294,-0.599959,-8.884494,-6.889710,-3.580784,5.970649,8.953180,-1.924403,-2.330322,6.648083,-4.926421,-4.499847,-8.512603,7.691947,-5.608278,9.980103,1.055572,7.724820,-8.825013,-8.224342,-8.372472,1.722401,-5.607495,-7.837051,8.419890,-8.839825,4.386505,-0.480563,6.284458,-8.533676,-7.214753,-7.166872,3.325746,2.694690,9.957154,9.515145,-1.149816,1.640203,-1.764237,1.471721,6.287625,-7.742207,-2.752051,5.781587,-7.488364,0.547193,9.332731,0.736270,-5.054835,9.274157,-8.032163,8.198129,1.321184,-8.536431,-0.904233,0.642968,1.370797,3.689419,-4.258327,0.748483,-3.189806,1.925771,-3.515816,5.000968,2.897510,-5.923796,2.759060,-5.025422,7.413052,-2.501645,5.846630,7.105936,9.323812,-5.554141,3.302504,1.685073,9.722896,-7.842946,3.858551,-3.183088,-1.627327,-6.006105,-6.217657,-6.177308,5.113927,-8.383270,-6.404417,-0.275259,-0.355189,7.838347,-1.361277,0.810524,0.177433,-6.713555,0.812477,0.461981,8.960920,6.554811,9.754633,5.803034,8.226075,3.878849,-6.996175,5.237905,-5.221800,-2.837327,8.803146,-9.276931,6.872661,3.608984,8.708634,-9.701046,7.600732,8.809564,5.375010,6.976113,-6.210975,-8.296265,-1.610357,6.861508,-3.698371,-1.435668,7.846705,-7.108019,3.392614,-6.157265,9.971484,4.211432,-7.092879,5.829711,-3.547940,-4.590782,6.839050,6.642771,0.108151,-8.532266,-1.425394,2.430788,-2.753260,0.242130,-3.241314,-2.302573,-8.031842,-3.350264,-1.977366,3.210760,-3.277610,4.069075,-9.398934,-9.737188,5.635589,-9.148283,8.493017,-1.961554,5.921818,0.299462,3.391187,8.732718,1.362545,-4.530077,6.030637,-0.327464,-1.865654,4.726352,-8.306604,-9.755141,7.327688,-0.449941,-7.184518,-7.873540,-5.506389,8.323295,6.336176,9.106603,-8.548027,8.280130,1.645916,-7.100494,9.904899,1.135761,3.106268,-4.708515,-8.282291,3.352304,5.628748,-8.311594,5.149648,9.780674,1.524509,2.180458,-5.648061,4.526116,1.913848,8.740254,-1.020211,-9.732492,-7.281371,-6.837295,9.670717,-9.120151,4.938088,-9.741251,-6.939819,3.690939,4.423220,-2.289474,7.901565,1.384075,5.356513,-9.530197,0.254704,6.242222,2.733064,-7.248786,1.625498,2.396215,-2.656200,2.865700,3.314465,-8.337484,2.484912,-5.409840,-6.623555,1.852895,6.303651,3.189089,9.153666,-3.092964,-1.458448,3.867945,9.614975,-4.670232,3.787484,3.360867,2.467787,0.767805,-5.119053,4.488727,6.443308,-5.068450,-5.574334,-0.116658,-9.187247,-2.305296,3.105984,-2.598390,-8.786200,-8.769116,-5.284988,-6.803208,7.734747,-7.673010,-4.618387,3.984526,9.826634,-6.782661,7.932411,8.286320,7.046509,6.252127,1.978309,-4.374702,-2.015994,9.814014,-2.104143,-9.212373,6.231977,2.616822,7.913355,-5.125540,-6.081483,-8.151087,1.486569,7.723618,-3.870527,3.022735,-8.616923,0.469573,2.692497,7.796144,3.134381,9.056635,-1.749785,-9.144597,1.560176,-2.607793,8.934551,-8.670604,-6.635126,3.274283,-5.190144,5.824996,-1.851524,3.862091,0.064986,5.490384,3.285999,-5.506265,1.819520,7.821286,6.666494,-6.747933,-3.432014,8.134265,-0.590828,3.107946,2.301503,2.046831,-4.960446,6.648797,4.929724,-7.322589,-5.849591,7.315661,3.010029,-9.804467,-5.782733,8.097878,5.904084,-7.804250,8.938393,-0.780718,-6.205819,4.746769,0.660586,-1.189036,1.388891,3.750454,9.994791,-3.130926,0.342296,2.263265,7.470927,-3.987121,2.272246,4.177103,6.827464,-3.978171,4.621535,-4.635677,-4.674095,-5.252526,5.236539,3.675254,-2.339079,1.726657,9.241704,7.748138,7.176858,8.009212,-0.828314,3.831391,9.584128,5.853751,3.287445,8.128052,1.621942,-0.207854,5.921851,6.834407,9.068327,9.524729,-4.720856,3.264237,-2.988982,-8.423658,7.878796,-7.322303,9.901646,-1.448747,7.020933,8.464426,7.403728,8.095409,0.951938,-7.937269,3.461447,5.373977,-8.601080,1.248875,-2.309075,-2.902676,-9.763626,-0.795612,-8.006590,-8.213942,-8.648045,-0.282784,4.599449,-2.586554,1.347807,2.713489,-6.698672,-7.214892,-0.613586,1.043159,1.220523,-0.599443,2.877874,-7.841011,2.368703,8.748649,-4.236644,8.991336,-3.088553,-2.857145,-0.008512,-7.891895,0.169136,-3.321582,0.074386,-2.046408,9.245479,-5.645140,1.726640,-7.409123,8.802357,-5.419990,-9.816967,-7.631310,3.902790,-3.461341,-3.611461,-6.495230,0.240555,0.343674,-3.651906,2.252483,5.141073,-6.047554,-1.640491,4.332257,2.101493,2.879556,-1.841427,-2.817145,4.384539,1.958609,7.521019,2.507255,-7.298700,6.853798,-2.477203,-9.647315,-2.429446,-4.522662,-9.282478,7.271749,7.471396,0.447344,-3.301999,7.247561,-7.123832,8.506535,-8.098946,-3.801127,-6.554866,0.408998,-7.765916,-0.682601,5.005569,-6.300596,-6.138312,3.008805,-2.065878,5.543347,-2.487951,-9.081703,-9.560077,-1.678000,-0.726005,3.430916,9.503357,4.597121,7.604484,-1.259811,-6.524941,-1.661817,-6.938624,-2.776829,-4.155017,6.693100,-6.840986,6.191288,-6.451431,1.994270,-9.586748,9.567953,-9.866534,5.884884,-5.734246,-8.444821,-3.635904,6.305051,-3.286042,-6.627530,-8.213209,8.188666,6.873042,6.997181,-1.784448,0.459616,5.256170,-2.537254,8.143418,2.289722,-3.403599,4.548590,-2.968039,8.940181,-6.943360,6.987052,-9.955894,-6.020029,8.449109,8.325863,-2.199504,-3.651380,1.806807,9.129689,3.588438,-1.989198,-7.354729,-1.238596,-6.937331,5.029548,9.445451,7.255287,8.692425,-7.291241,4.314835,3.959373,-3.110408,-8.867311,-8.077901,-2.519201,-0.843203,7.554240,-9.216859,-4.488081,-6.929934,-3.059046,-0.911251,5.508503,0.122921,5.418469,4.964758,-4.201452,-6.475623,3.962795,5.663161,-6.702526,-7.334543,-9.167904,-5.646470,3.329628,7.414727,-3.302617,-2.599113,4.942418,0.033649,-7.649221,9.549368,-5.436858,4.328269,7.793706,-9.359925,2.938319,9.569808,4.613083,-4.527039,-4.564517,-4.609455,1.635881,-0.372725,-1.158971,4.165442,-9.884819,-2.801404,3.624689,-0.807698,-9.423991,-2.979416,0.833001,5.288983,3.676839,-2.350307,2.540371,6.296524,0.564758,-6.708150,5.617067,-9.072022,-9.234049,5.219851,3.333151,-6.939833,-9.788106,9.603556,7.838357,-3.178214,-0.292892,-1.508275,-7.624566,-6.406636,-7.085552,3.311007,3.597775,0.995275,-9.204548,5.538651,0.011648,6.636144,-7.626751,3.334091,-5.174141,3.453917,-4.113692,-3.320724,3.137260,-4.567984,1.882034,2.055474,-5.039844,3.939265,1.387061,-8.371885,-1.824214,-5.158672,-2.345947,-9.844367,-0.246142,8.421769,-8.844394,0.715520,-5.552372,8.518547,3.097004,-8.550961,4.303771,5.749666,-6.214443,2.111947,0.362517,-5.889240,-2.269923,-5.879536,-7.191797,9.621377,-3.137337,-0.150298,0.232551,-1.625907,-9.160257,-1.417792,-7.828803,0.430665,6.445007,-5.881453,-5.700938,-8.166489,5.413927,0.670854,-6.829568,-3.319126,3.169612,8.085963,-1.361300,-8.822581,0.393345,2.916816,-6.142292,-9.751329,3.422551,-9.498912,4.597815,-4.401767,-0.657762,-0.367242,9.858729,9.968953,4.685606,2.380060,-3.224395,6.721186,-0.337296,-9.163581,9.697728,-9.905952,1.942161,-2.178418,2.898823,0.826641,6.750066,-7.053889,4.926820,8.672390,-5.419012,-8.069566,-5.492041,-0.869983,-1.296751,0.735858,-6.606986,7.575734,6.176394,-4.106372,-3.179013,-3.521388,-0.377797,-0.925624,-3.822692,-0.604933,-0.892732,9.218497,-6.453017,5.134616,-2.791280,-5.543177,-2.003432,-7.453351,-0.833942,-8.178196,7.907211,-1.940508,3.580415,1.713157,-0.165115,1.717637,-3.171918,-2.815559,-9.553747,-9.712069,-3.772028,2.369003,-5.882136,-7.237869,7.977965,3.091137,4.286634,-1.862721,7.893653,-3.757332,9.202025,-1.749851,0.723741,0.361998,5.766538,-7.573581,-7.832066,-3.817407,-5.420985,4.293957,-6.039095,-1.551294,-5.461075,-4.216799,-4.755268,-4.914315,-5.884019,5.001370,9.699817,-1.411367,-8.482632,-5.770956,-9.776673,2.672159,-8.124931,-3.174707,-3.460785,-1.587174,4.767406,-1.794658,-9.582888,-5.236885,7.076826,-7.343093,-0.915967,2.976188,7.822677,7.894735,8.492514,-7.973463,-3.967595,-9.604493,0.292083,9.092265,7.712768,-0.252047,-6.749243,4.758292,1.949848,-5.709376,-0.217602,-1.611400,-0.597197,5.415653,4.817371,1.287616,9.977702,-5.281340,-6.649249,1.229618,7.215247,2.827291,-5.553755,0.049025,-6.842877,2.774510,-3.727445,8.402571,-2.421396,-6.265299,-4.796184,2.234159,3.949336,4.627295,1.741126,1.779582,-7.140627,7.022009,7.678307,-3.131367,-1.308476,-7.301084,-5.714837,9.019416,3.167666,-6.625420,7.820258,8.773539,6.508367,5.959088,6.482666,5.950553,0.306176,0.236764,3.485936,5.070139,4.960905,-8.398729,5.676411,-5.297960,1.129398,-8.893263,-2.930021,1.560221,-5.712698,3.877363,-6.399571,-4.165107,9.607865,-0.942817,8.252852,-1.836834,-1.607848,-1.046118,5.422128,-2.631485,0.558953,5.888942,-3.259820,8.949227,4.472532,-2.394497,1.317003,-3.876536,-0.332972,-9.940666,-8.120342,5.814804,8.720800,-3.996426,-6.140820,-3.942434,4.950470,-6.764582,-7.304719,8.655159,-8.698182,9.150467,-4.884995,-3.908739,5.735946,-8.258012,1.510371,-1.581239,-0.142728,5.369427,6.321071,-1.624896,-2.048899,-0.063388,8.342543,-8.049642,6.156658,3.742435,5.506862,6.258365,-4.423580,-5.535957,8.115066,1.553666,3.140265,-5.436450,-5.950372,-0.694085,9.898180,5.202565,-7.913722,-1.610413,-7.148605,9.364182,8.694025,-3.256694,-7.218370,-1.169438,6.009340,7.849851,-7.946528,9.028792,0.984819,1.413413,-6.813743,4.063453,1.562548,-8.825013,4.131309,9.898223,-6.701244,6.212469,8.395159,-9.794747,2.206431,1.181081,-1.011643,-0.751363,-5.303228,-8.668366,-2.506271,3.975465,-3.486923,1.939787,8.438982,-8.470354,-6.757226,9.077746,2.485182,-4.370550,7.983536,8.452464,-2.403775,0.921874,4.133710,9.483861,7.688035,7.016631,6.633307,-6.417437,-2.364170,-6.160873,-9.669433,-9.759245,-6.739251,-6.833249,-3.675612,4.152853,2.285455,-1.217145,-0.301395,-4.436472,-9.995798,5.528055,9.121651,7.007526,8.894682,-0.687434,0.748403,2.130326,-4.589005,3.204929,3.448370,8.143077,-9.417284,-4.164336,-6.876403,-9.088309,-8.194709,-0.923286,3.803828,9.568370,8.516169,-8.230553,-3.171882,-6.515461,3.203341,-5.732825,-2.934219,6.781792,2.208067,-7.647482,4.624034,-9.271388,-7.677666,0.021607,-2.935271,-3.916485,-5.962766,-5.019507,9.729167,5.960560,3.638753,4.685179,-0.392419,-5.354293,-8.738916,6.520974,6.833201,-9.054629,-4.717165,-1.833351,-2.311454,-8.581782,8.559876,-2.431172,-1.040548,-4.673544,0.702419,2.554016,-0.247782,3.986824,-5.823793,-6.607537,-8.132727,-4.913832,-1.847012,-2.274318,2.694768,-0.081605,0.105862,7.756325,-1.557031,3.623023,-6.105757,5.818444,-6.444007,9.872283,7.759949,9.369382,-9.917005,-7.054316,-1.629069,-2.575787,-2.419668,-3.569199,3.127819,9.906351,8.271623,1.679692,6.914874,6.069145,0.156566,6.906875,-2.822856,-1.808685,-7.443621,-3.496927,1.590883,-7.407071,3.809568,-5.853789,4.485586,-4.693530,-1.516389,-2.218804,2.363526,-2.933789,-8.910493,1.914718,-5.496379,-0.010326,0.939884,5.311348,7.390653,-6.924729,-7.756809,5.793112,-6.015007,9.951287,5.732132,-4.496595,7.351411,3.952307,-9.133789,-9.237290,-8.538214,9.453149,4.958627,5.879077,2.111802,1.485552,-6.556175,7.069633,7.359187,9.274825,-0.241017,9.939582,-3.475162,7.422635,4.546083,0.600039,-7.155009,7.516615,5.593007,-0.479252,-3.093779,9.053678,-2.624198,7.696447,4.916036,-1.310488,7.975480,6.794709,-5.509340,-5.568161,-1.581946,-1.487461,9.349015,9.089615,-3.497458,6.051574,5.971516,1.254694,1.175670,2.221027,8.890084,-4.829877,7.476476,1.061498,-8.668376,-4.788742,9.588129,-5.711121,-8.823001,-0.142697,1.104895,-1.801098,-2.956377,4.797852,-2.422191,-2.931031,-5.118801,-0.317129,-8.566577,-5.343862,-9.376584,2.792943,9.204390,-4.012591,7.670668,-9.314722,-6.915210,-6.513592,-1.841616,-1.716151,-5.818627,-0.895602,3.894573,9.462224,-9.079251,-1.425095,-3.734971,1.870761,1.603491,4.441161,-1.187501,-4.296330,-2.280856,9.762097,-8.285660,-0.898772,-0.858346,7.615564,5.390045,9.916360,-6.991311,-7.882192,0.432151,-1.227547,9.288266,-1.790515,1.818668,-1.298245,5.299057,-8.576821,2.956627,-6.878443,-8.539138,3.671545,-3.014299,2.090983,5.744180,7.344346,9.928981,1.358569,-4.022902,-2.586598,-2.092856,4.791820], dtype = "float32")#candidate|3834|(2400,)|const|float32
call_3832 = relay.TupleGetItem(func_2840_call(relay.reshape(const_3833.astype('uint64'), [14, 5, 14]), relay.reshape(const_3834.astype('float32'), [2400,]), ), 1)
call_3835 = relay.TupleGetItem(func_2843_call(relay.reshape(const_3833.astype('uint64'), [14, 5, 14]), relay.reshape(const_3834.astype('float32'), [2400,]), ), 1)
output = relay.Tuple([uop_3826,call_3832,const_3833,const_3834,])
output2 = relay.Tuple([uop_3826,call_3835,const_3833,const_3834,])
func_3846 = relay.Function([var_3825,], output)
mod['func_3846'] = func_3846
mod = relay.transform.InferType()(mod)
var_3847 = relay.var("var_3847", dtype = "float32", shape = (15, 13, 4))#candidate|3847|(15, 13, 4)|var|float32
output = func_3846(var_3847)
func_3848 = relay.Function([var_3847], output)
mutated_mod['func_3848'] = func_3848
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4097 = relay.var("var_4097", dtype = "uint16", shape = (10, 8, 11))#candidate|4097|(10, 8, 11)|var|uint16
var_4098 = relay.var("var_4098", dtype = "uint16", shape = (10, 8, 11))#candidate|4098|(10, 8, 11)|var|uint16
bop_4099 = relay.bitwise_xor(var_4097.astype('uint16'), relay.reshape(var_4098.astype('uint16'), relay.shape_of(var_4097))) # shape=(10, 8, 11)
output = relay.Tuple([bop_4099,])
output2 = relay.Tuple([bop_4099,])
func_4113 = relay.Function([var_4097,var_4098,], output)
mod['func_4113'] = func_4113
mod = relay.transform.InferType()(mod)
var_4114 = relay.var("var_4114", dtype = "uint16", shape = (10, 8, 11))#candidate|4114|(10, 8, 11)|var|uint16
var_4115 = relay.var("var_4115", dtype = "uint16", shape = (10, 8, 11))#candidate|4115|(10, 8, 11)|var|uint16
output = func_4113(var_4114,var_4115,)
func_4116 = relay.Function([var_4114,var_4115,], output)
mutated_mod['func_4116'] = func_4116
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4141 = relay.var("var_4141", dtype = "float64", shape = (1, 5, 11))#candidate|4141|(1, 5, 11)|var|float64
var_4142 = relay.var("var_4142", dtype = "float64", shape = (2, 5, 11))#candidate|4142|(2, 5, 11)|var|float64
bop_4143 = relay.mod(var_4141.astype('float64'), var_4142.astype('float64')) # shape=(2, 5, 11)
uop_4147 = relay.sqrt(bop_4143.astype('float64')) # shape=(2, 5, 11)
output = uop_4147
output2 = uop_4147
func_4154 = relay.Function([var_4141,var_4142,], output)
mod['func_4154'] = func_4154
mod = relay.transform.InferType()(mod)
mutated_mod['func_4154'] = func_4154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4154_call = mutated_mod.get_global_var('func_4154')
var_4156 = relay.var("var_4156", dtype = "float64", shape = (1, 5, 11))#candidate|4156|(1, 5, 11)|var|float64
var_4157 = relay.var("var_4157", dtype = "float64", shape = (2, 5, 11))#candidate|4157|(2, 5, 11)|var|float64
call_4155 = func_4154_call(var_4156,var_4157,)
output = call_4155
func_4158 = relay.Function([var_4156,var_4157,], output)
mutated_mod['func_4158'] = func_4158
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4246 = relay.var("var_4246", dtype = "int8", shape = (12, 13, 9))#candidate|4246|(12, 13, 9)|var|int8
var_4247 = relay.var("var_4247", dtype = "int8", shape = (12, 13, 9))#candidate|4247|(12, 13, 9)|var|int8
bop_4248 = relay.not_equal(var_4246.astype('bool'), relay.reshape(var_4247.astype('bool'), relay.shape_of(var_4246))) # shape=(12, 13, 9)
output = relay.Tuple([bop_4248,])
output2 = relay.Tuple([bop_4248,])
func_4263 = relay.Function([var_4246,var_4247,], output)
mod['func_4263'] = func_4263
mod = relay.transform.InferType()(mod)
var_4264 = relay.var("var_4264", dtype = "int8", shape = (12, 13, 9))#candidate|4264|(12, 13, 9)|var|int8
var_4265 = relay.var("var_4265", dtype = "int8", shape = (12, 13, 9))#candidate|4265|(12, 13, 9)|var|int8
output = func_4263(var_4264,var_4265,)
func_4266 = relay.Function([var_4264,var_4265,], output)
mutated_mod['func_4266'] = func_4266
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4679 = relay.var("var_4679", dtype = "uint64", shape = (9, 15, 7))#candidate|4679|(9, 15, 7)|var|uint64
var_4680 = relay.var("var_4680", dtype = "uint64", shape = (9, 15, 7))#candidate|4680|(9, 15, 7)|var|uint64
bop_4681 = relay.multiply(var_4679.astype('uint64'), relay.reshape(var_4680.astype('uint64'), relay.shape_of(var_4679))) # shape=(9, 15, 7)
output = relay.Tuple([bop_4681,])
output2 = relay.Tuple([bop_4681,])
func_4684 = relay.Function([var_4679,var_4680,], output)
mod['func_4684'] = func_4684
mod = relay.transform.InferType()(mod)
mutated_mod['func_4684'] = func_4684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4684_call = mutated_mod.get_global_var('func_4684')
var_4686 = relay.var("var_4686", dtype = "uint64", shape = (9, 15, 7))#candidate|4686|(9, 15, 7)|var|uint64
var_4687 = relay.var("var_4687", dtype = "uint64", shape = (9, 15, 7))#candidate|4687|(9, 15, 7)|var|uint64
call_4685 = func_4684_call(var_4686,var_4687,)
output = call_4685
func_4688 = relay.Function([var_4686,var_4687,], output)
mutated_mod['func_4688'] = func_4688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4849 = relay.var("var_4849", dtype = "uint32", shape = ())#candidate|4849|()|var|uint32
var_4850 = relay.var("var_4850", dtype = "uint32", shape = (12, 6, 13))#candidate|4850|(12, 6, 13)|var|uint32
bop_4851 = relay.greater(var_4849.astype('bool'), var_4850.astype('bool')) # shape=(12, 6, 13)
func_2771_call = mod.get_global_var('func_2771')
func_2773_call = mutated_mod.get_global_var('func_2773')
var_4855 = relay.var("var_4855", dtype = "bool", shape = (15,))#candidate|4855|(15,)|var|bool
call_4854 = relay.TupleGetItem(func_2771_call(relay.reshape(var_4855.astype('bool'), [1, 1, 15])), 1)
call_4856 = relay.TupleGetItem(func_2773_call(relay.reshape(var_4855.astype('bool'), [1, 1, 15])), 1)
func_2771_call = mod.get_global_var('func_2771')
func_2773_call = mutated_mod.get_global_var('func_2773')
call_4863 = relay.TupleGetItem(func_2771_call(relay.reshape(var_4855.astype('bool'), [1, 1, 15])), 0)
call_4864 = relay.TupleGetItem(func_2773_call(relay.reshape(var_4855.astype('bool'), [1, 1, 15])), 0)
func_1890_call = mod.get_global_var('func_1890')
func_1893_call = mutated_mod.get_global_var('func_1893')
var_4867 = relay.var("var_4867", dtype = "float32", shape = (156,))#candidate|4867|(156,)|var|float32
var_4868 = relay.var("var_4868", dtype = "int64", shape = (840,))#candidate|4868|(840,)|var|int64
call_4866 = relay.TupleGetItem(func_1890_call(relay.reshape(var_4867.astype('float32'), [1, 13, 12]), relay.reshape(var_4868.astype('int64'), [2, 420]), ), 1)
call_4869 = relay.TupleGetItem(func_1893_call(relay.reshape(var_4867.astype('float32'), [1, 13, 12]), relay.reshape(var_4868.astype('int64'), [2, 420]), ), 1)
output = relay.Tuple([bop_4851,call_4854,var_4855,call_4863,call_4866,var_4867,var_4868,])
output2 = relay.Tuple([bop_4851,call_4856,var_4855,call_4864,call_4869,var_4867,var_4868,])
func_4879 = relay.Function([var_4849,var_4850,var_4855,var_4867,var_4868,], output)
mod['func_4879'] = func_4879
mod = relay.transform.InferType()(mod)
var_4880 = relay.var("var_4880", dtype = "uint32", shape = ())#candidate|4880|()|var|uint32
var_4881 = relay.var("var_4881", dtype = "uint32", shape = (12, 6, 13))#candidate|4881|(12, 6, 13)|var|uint32
var_4882 = relay.var("var_4882", dtype = "bool", shape = (15,))#candidate|4882|(15,)|var|bool
var_4883 = relay.var("var_4883", dtype = "float32", shape = (156,))#candidate|4883|(156,)|var|float32
var_4884 = relay.var("var_4884", dtype = "int64", shape = (840,))#candidate|4884|(840,)|var|int64
output = func_4879(var_4880,var_4881,var_4882,var_4883,var_4884,)
func_4885 = relay.Function([var_4880,var_4881,var_4882,var_4883,var_4884,], output)
mutated_mod['func_4885'] = func_4885
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5251 = relay.const([[[-3.708176,-5.741636,-5.351419,9.392173,-6.453259],[-8.142039,-1.616303,6.446157,9.783727,3.056082],[0.888541,4.645402,6.907388,7.673805,1.800832],[2.564417,5.579064,-8.338774,-3.959540,4.857105],[4.686647,-0.216960,4.582483,-4.741869,-4.203845],[-3.747521,-4.215505,-7.012429,-5.571705,-9.764220],[-0.966703,-9.016890,-9.918427,6.367556,-1.208726],[6.567656,-1.271192,0.852502,6.384407,-4.887016],[8.223589,5.430914,5.718769,-8.308080,-8.671232],[0.414865,-5.222863,-3.592739,-6.303526,8.741429],[-8.732723,-5.887713,-1.206359,2.706118,-4.178298],[4.394570,-5.642760,2.045067,-5.899354,1.495902],[-0.801363,7.594861,-6.183054,9.843729,-0.952777]],[[0.477504,0.471237,5.336059,-4.618934,-9.649687],[0.576283,-2.282357,-6.978944,1.937992,3.145315],[6.286596,7.348986,-7.872877,-0.980526,-2.004863],[-6.639245,-8.200816,-1.729209,1.055868,-9.508330],[1.791256,9.555830,1.089574,2.978021,-5.180293],[5.440007,-8.159753,3.829182,9.111933,2.229337],[-8.426582,9.606775,6.568935,-0.606224,-7.189149],[-7.597513,-2.001080,-9.814136,-1.426202,-6.037511],[-5.779146,-4.439236,-2.214850,-9.866585,-4.313210],[-9.004409,2.180833,3.147147,7.262925,-2.712076],[-9.330878,0.077457,-3.399621,-4.794985,7.801935],[-9.493642,-5.153910,-7.795088,-8.047614,-1.083262],[-1.733478,0.447535,7.567778,7.929538,-1.026167]],[[-7.665535,-0.731835,-4.616757,2.152810,0.354473],[5.997577,8.150092,6.620642,2.354312,-4.766952],[-3.322113,-0.444792,-9.355810,-8.516115,-0.150330],[9.813115,0.403392,-9.040183,5.639795,-9.800832],[-7.401329,-9.881397,7.569970,7.486520,8.002972],[1.467333,2.956459,4.020672,8.503156,7.835579],[-0.261713,-1.426461,-7.448813,8.342468,0.065971],[0.457707,-9.255452,5.542469,3.670794,-6.537023],[-9.179202,-9.184788,8.112910,3.849297,9.591312],[-6.825111,-1.112204,3.493083,4.915188,-9.451351],[-4.467406,-3.619323,0.180501,-9.485673,-8.653504],[9.616240,-4.993355,-3.525204,0.554158,-7.561232],[-6.457802,-3.155876,-5.002948,-8.857597,9.329899]],[[-1.736840,-0.440307,-6.775356,-5.699016,-4.810018],[4.391710,2.772304,4.254255,2.897503,3.741311],[6.720748,-5.434616,-2.100400,3.089574,-7.906232],[6.799479,-2.710755,9.466483,9.076795,6.033764],[-0.502006,4.591172,1.023947,-4.393871,3.337218],[-7.585494,6.811322,7.314250,6.980335,-4.065527],[2.110982,-2.981764,5.270859,-5.695019,6.383971],[-0.884243,-1.271821,5.788114,-6.084209,-8.304835],[-4.481790,-8.624476,7.486876,5.433494,-2.942922],[-4.785660,-3.843276,5.102335,-1.927401,-9.081496],[-9.321133,0.487593,7.509342,-0.870985,-9.196182],[1.785296,0.779584,8.620856,0.581785,-5.577667],[-6.900535,7.700185,9.801035,0.865727,-4.477580]],[[-3.476717,-6.529050,0.352221,-7.000881,-3.333324],[-8.327863,4.881538,8.334058,-6.075237,-3.716727],[0.050550,1.844291,9.766822,0.941559,-3.778599],[-3.558405,-7.158688,8.323791,-6.545752,8.740399],[-6.644340,8.373456,-3.222304,-0.607883,4.357393],[1.781067,-0.243002,-8.497940,0.301869,-0.841623],[5.877305,-2.535691,8.210116,-6.238729,-7.316042],[-2.075762,8.901872,-7.367046,5.671271,4.841036],[8.609578,2.323666,5.493508,0.571777,7.922801],[2.360011,9.709622,3.602425,3.985989,-7.456326],[7.722702,-5.346092,-6.077995,-9.118716,-3.255136],[3.685768,-7.258810,5.963969,-1.328827,0.179375],[-6.260879,-1.867455,-9.692628,-0.942245,3.945769]],[[4.858082,-5.025372,-3.131873,0.897499,-8.985587],[-6.099730,9.158631,-6.413912,-5.564278,-4.309942],[-5.844728,-6.573036,-5.671470,-4.449033,-7.087976],[0.126047,3.668285,-0.668613,8.197847,-5.478443],[5.569112,5.718480,-3.013276,3.649079,-2.967250],[-8.681332,-6.485013,1.217033,9.449546,3.240795],[-8.015159,-9.747652,-1.786501,2.133991,-4.564520],[7.625132,-1.058805,-4.184543,-4.718710,5.741175],[9.019622,-7.958634,3.833253,-6.574331,6.346475],[-0.745303,7.307185,4.396285,6.580523,5.353890],[8.340941,2.088653,6.315762,-9.206504,1.192262],[-9.883431,8.057441,-9.308132,-4.474492,0.744847],[5.225555,0.535975,-2.448387,-5.671457,6.313443]],[[0.563609,1.363687,-4.171665,1.223311,-1.540149],[5.116895,2.610478,9.702282,2.937155,9.022246],[-9.094487,-8.978260,9.130260,-2.992253,6.216598],[5.979985,-8.310565,9.986473,9.564061,3.335625],[-0.636154,-6.133027,5.339026,5.087852,9.595913],[-9.765120,5.495210,-6.968013,9.701033,0.830839],[-6.723961,-8.464517,4.076582,-8.512336,-2.882337],[-3.446878,-3.338812,-8.308350,1.586865,-9.632704],[-2.058167,-5.104495,9.335960,-3.870185,2.220546],[6.587292,-0.319854,6.845848,-6.247014,-9.461329],[2.192714,9.859097,0.595788,-5.559631,0.488507],[-3.971706,0.450025,-7.973423,6.535861,3.659430],[-1.439537,-7.830496,-4.322102,-8.584879,2.852619]],[[2.630608,1.179656,-0.193341,6.955866,6.240962],[1.696321,-5.715887,-0.448838,-4.565325,-9.191355],[1.079580,-4.798391,7.043452,3.708982,0.032894],[7.792623,4.325160,8.553455,9.354834,-5.394026],[-1.510157,-8.918318,-4.577399,1.352617,-5.357593],[3.213920,-1.208610,-9.526224,-0.123431,3.221674],[-9.161924,3.126233,1.346967,-6.004027,2.319811],[-6.364952,-4.573645,-6.889526,3.088263,4.849066],[8.762387,8.748338,6.664201,-3.323224,9.099226],[4.192570,-4.564743,-5.762607,-3.380392,-5.352717],[5.019612,0.329222,-2.643778,5.427745,4.611460],[2.420105,3.956600,-2.935644,-1.208058,-7.076570],[-9.704966,-8.157011,-3.502119,-8.420449,4.649802]],[[-3.564180,2.059177,-9.073609,-6.622506,-8.579847],[1.937197,-2.519203,-0.189059,0.566090,3.030012],[1.001697,8.012723,-9.335111,-7.135101,-3.547234],[-8.827721,-0.329695,-2.166722,6.251852,-8.297755],[-8.045019,4.715299,-7.442627,7.621832,1.742287],[-4.629357,-6.432816,-4.346000,3.646368,-4.843084],[-2.513991,5.157775,-2.021202,4.267480,-6.355427],[7.640141,2.314383,9.400152,1.586615,7.471379],[-2.809997,1.659332,-1.115516,7.043309,-8.718167],[5.483202,-7.701272,8.458056,9.541190,-1.831696],[9.382601,-7.313527,6.976750,-6.061889,8.162439],[7.629942,4.061105,-8.516771,-6.272758,-8.370300],[0.633478,8.109837,-2.379496,1.505128,1.672610]],[[1.405600,4.345304,-0.119682,8.356418,0.748180],[-5.399665,-5.738441,3.738164,8.947399,6.881013],[-8.131480,-6.214682,-6.251605,5.431885,-1.882674],[-7.018617,5.687840,7.801005,-6.578959,-3.983332],[6.734578,-0.621735,3.038224,8.243250,2.634317],[-7.072112,8.696121,5.166336,0.108531,6.736721],[5.707776,4.400506,-2.187829,-9.945761,4.015992],[-5.629036,-6.783067,2.673144,9.016542,-4.607958],[3.517797,-0.074864,6.844548,-2.249829,-8.073601],[-4.863477,4.164198,-2.267485,3.461224,-3.640361],[-2.539785,0.514384,5.649268,-2.298154,3.320989],[1.124224,4.292175,-4.733099,5.963625,6.691598],[-0.345426,-4.603249,8.210181,5.769811,5.445882]],[[1.964433,0.328702,-2.012719,1.371665,4.647775],[-1.770077,1.270655,-0.277872,-3.397143,5.433967],[-2.305118,-3.012390,1.039232,4.810185,-7.548662],[1.117576,-0.199575,-1.446972,7.208295,5.141064],[9.443825,-7.726116,0.369883,-2.556051,-4.608945],[3.191183,0.270852,7.039585,9.101471,-7.729539],[-8.309017,-1.001743,-5.305690,3.283620,-8.247510],[-6.454843,-6.172043,6.581364,0.167561,-0.569021],[7.943949,-0.255016,5.987286,9.993516,0.503502],[-6.530875,4.242021,-1.210539,9.451846,-6.387919],[1.470234,0.048455,4.753456,3.438981,-5.510994],[-2.550747,-7.052196,5.172791,2.571410,-5.386877],[-5.708484,-4.709797,4.076384,3.180248,-0.159980]],[[5.922617,-3.584226,-4.369788,9.585987,-1.808818],[1.302681,1.792446,-2.259216,4.934949,8.001645],[-3.861118,-4.727995,-8.523086,0.311880,-3.318613],[3.903620,3.786150,2.649427,8.797410,-8.241471],[-8.686299,-7.337886,7.636077,-3.607249,-0.819635],[-8.844320,3.895966,5.218830,9.409332,7.901017],[0.990375,9.782686,-8.877473,-2.060579,3.357511],[-7.856171,-5.589351,9.248051,8.925424,-3.586620],[9.793123,-8.589561,2.098602,-7.095515,-5.479591],[-5.804178,-9.479666,4.481053,-9.368710,-3.209141],[-2.393692,-0.355587,-7.621192,-5.699242,5.270187],[5.733132,5.855324,-2.406422,-9.431715,9.481513],[-9.470847,-3.408521,8.599716,-5.895867,3.431563]],[[8.886077,0.533369,-4.549119,2.739231,0.518648],[8.983619,-1.615186,-5.245513,8.942881,7.523351],[3.612820,-9.690828,3.345244,9.553015,-0.092553],[-9.802884,-8.543430,1.099328,5.446454,2.916448],[5.460203,-4.776109,-6.005552,-8.661748,5.251704],[-2.896982,-2.415717,-2.636972,9.494672,6.607381],[-5.939260,4.802847,7.611927,1.499936,-2.411732],[8.799982,6.372181,4.723299,-7.959582,8.236265],[1.741494,-1.635249,-2.106238,5.279415,9.043327],[0.205550,8.236268,-0.871359,8.523188,0.414787],[1.917766,-7.799392,-2.154822,-9.257283,1.656753],[-1.219463,7.616205,-0.324976,5.088892,8.435827],[-9.229168,-9.011613,-3.665789,-9.114512,-4.211647]],[[9.270569,-5.356453,-6.463082,3.075997,0.513698],[-4.573878,2.841461,5.883042,-8.677284,-3.237616],[4.617798,-4.565777,-1.472124,-5.580650,3.150065],[-2.639214,-9.629749,-1.811045,-3.292344,8.705313],[-2.080104,2.373662,-3.002085,-4.898869,-4.149025],[-6.625908,5.209947,0.455695,5.595250,7.071111],[1.363788,6.992554,-9.509335,-6.724082,2.750288],[2.150151,-3.528492,-4.779836,5.278725,9.617364],[2.441486,3.372179,-2.684513,-4.242356,-1.683546],[-6.552625,5.551909,-3.673241,9.323677,-8.218452],[-2.443996,7.625102,3.351705,4.804314,-5.370885],[-3.672565,4.401061,-2.198126,-9.014879,7.226882],[-9.291047,-6.918774,-5.895081,-4.468925,-9.059645]],[[-8.881125,-7.163066,2.324195,4.765027,-5.514130],[4.284222,2.690205,-3.190146,-1.481578,-9.301649],[3.689986,-6.904407,2.733813,-0.588752,-1.657263],[-4.719779,-8.783208,-5.700109,-9.081999,-3.751827],[5.892632,3.936249,-1.885576,2.619663,1.736279],[7.870422,-4.643977,-5.272088,-0.427194,2.627993],[0.539820,8.544755,-4.561570,0.090056,-5.960336],[5.505920,7.554857,-1.993716,-2.039771,7.882475],[-8.231647,8.995223,-6.880073,-5.864843,-3.163512],[0.392787,1.734937,1.191221,7.349487,7.821751],[4.788148,9.621804,6.410578,-4.209251,6.953168],[1.553552,-2.035002,6.963235,1.267823,2.433091],[5.926191,5.005525,-8.823944,6.240075,-5.208093]]], dtype = "float64")#candidate|5251|(15, 13, 5)|const|float64
uop_5252 = relay.cos(const_5251.astype('float64')) # shape=(15, 13, 5)
uop_5257 = relay.acosh(const_5251.astype('float64')) # shape=(15, 13, 5)
func_1940_call = mod.get_global_var('func_1940')
func_1943_call = mutated_mod.get_global_var('func_1943')
var_5260 = relay.var("var_5260", dtype = "float32", shape = (300, 8))#candidate|5260|(300, 8)|var|float32
call_5259 = func_1940_call(relay.reshape(var_5260.astype('float32'), [16, 10, 15]))
call_5261 = func_1940_call(relay.reshape(var_5260.astype('float32'), [16, 10, 15]))
output = relay.Tuple([uop_5252,uop_5257,call_5259,var_5260,])
output2 = relay.Tuple([uop_5252,uop_5257,call_5261,var_5260,])
func_5274 = relay.Function([var_5260,], output)
mod['func_5274'] = func_5274
mod = relay.transform.InferType()(mod)
mutated_mod['func_5274'] = func_5274
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5275 = relay.var("var_5275", dtype = "float32", shape = (300, 8))#candidate|5275|(300, 8)|var|float32
func_5274_call = mutated_mod.get_global_var('func_5274')
call_5276 = func_5274_call(var_5275)
output = call_5276
func_5277 = relay.Function([var_5275], output)
mutated_mod['func_5277'] = func_5277
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5533 = relay.const([[[-9.225842]],[[7.838466]],[[-9.568030]]], dtype = "float64")#candidate|5533|(3, 1, 1)|const|float64
uop_5534 = relay.sqrt(const_5533.astype('float64')) # shape=(3, 1, 1)
output = uop_5534
output2 = uop_5534
func_5541 = relay.Function([], output)
mod['func_5541'] = func_5541
mod = relay.transform.InferType()(mod)
mutated_mod['func_5541'] = func_5541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mutated_mod.get_global_var('func_5541')
call_5542 = func_5541_call()
output = call_5542
func_5543 = relay.Function([], output)
mutated_mod['func_5543'] = func_5543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_5547 = func_5541_call()
call_5548 = func_5541_call()
var_5581 = relay.var("var_5581", dtype = "float64", shape = (3, 11, 1))#candidate|5581|(3, 11, 1)|var|float64
bop_5582 = relay.greater_equal(call_5547.astype('bool'), var_5581.astype('bool')) # shape=(3, 11, 1)
bop_5585 = relay.greater_equal(call_5548.astype('bool'), var_5581.astype('bool')) # shape=(3, 11, 1)
uop_5589 = relay.asin(bop_5582.astype('float64')) # shape=(3, 11, 1)
uop_5591 = relay.asin(bop_5585.astype('float64')) # shape=(3, 11, 1)
func_2246_call = mod.get_global_var('func_2246')
func_2249_call = mutated_mod.get_global_var('func_2249')
var_5599 = relay.var("var_5599", dtype = "uint32", shape = (7, 156))#candidate|5599|(7, 156)|var|uint32
call_5598 = func_2246_call(relay.reshape(var_5599.astype('uint32'), [6, 14, 13]), relay.reshape(var_5599.astype('uint32'), [6, 14, 13]), )
call_5600 = func_2246_call(relay.reshape(var_5599.astype('uint32'), [6, 14, 13]), relay.reshape(var_5599.astype('uint32'), [6, 14, 13]), )
func_2580_call = mod.get_global_var('func_2580')
func_2582_call = mutated_mod.get_global_var('func_2582')
const_5604 = relay.const([9.536749,8.495670,3.933957,-5.315263,-9.224584,-2.920767,6.435760,3.880158,-6.354867,8.691178,-8.561940,-6.689458,3.750584,-0.350759,8.720885,-1.583861,2.426165,-6.594781,7.117601,9.385351,-2.170469,7.606380,1.084210,1.765015,-7.610163,-2.035344,-9.222114,-2.597539,2.119573,-4.351022,5.752452,5.896441,-8.055226,3.289334,6.238188,8.774405,-4.403212,4.885918,5.121196,-5.762885,9.355672,5.466335,3.918258,4.694137,-4.266101,1.810960,-9.724877,-5.340088,-9.185709,1.326749,9.057349,6.321459,9.355400,6.442803,-1.453744,-0.846202,-5.350981,8.124068,2.667121,5.266601,-5.681555,9.625071,8.223128,3.858796,4.355001,0.206478,0.496454,5.013867,0.286318,-4.508367,-5.988381,-0.014625,-3.037890,-3.464253,-8.465321,3.145731,-1.694003,-0.907493,-9.515249,7.150253,-1.155239,-2.959099,-5.507542,-2.286780,6.745304,0.818006,1.251663,-9.376092,9.419607,2.656585,-2.578411,-6.910603,-5.506098,7.246371,-6.784915,-6.989027,4.870587,-4.718920,-1.094541,-2.394294,1.286144,9.343418,7.821629,-9.044834,-3.774948,-1.001850,-0.686036,1.618602,0.839338,-1.733094,-8.971755,-6.167098,9.429410,5.484979,5.966781,7.712612,5.813214,5.593219,7.036847,4.638760,-6.170470,-3.033363,-9.655718,4.334248,-8.027344,0.235069,-1.286604,9.990166,-9.980376,-0.220633,-8.188564,3.469963,-2.664111,-3.834684,-3.171807,-4.633795,3.073062,-0.824127,-5.174528,-5.389426,4.549676,4.858289,9.819277,7.715347,9.428881,-0.768056,-1.171484,5.309961,-4.669456,-1.771960,9.211504,7.572384,5.532914,-9.517468,5.548082,7.857123,-8.353752,4.671225,1.999856,-2.978762,-9.894740,-2.759919,-8.510241,8.494452,6.825520,1.246353,-2.819938,1.030108,-4.009880,-8.280602,-3.904402,-4.114029,-2.132208,5.206415,7.348573,2.259265,-0.039751,-5.556938,4.405068,0.315785,3.790333,-1.706289,-3.276838,0.017723,8.970108,-8.109173,4.535242,8.741987,-7.073318,0.108285,-4.973092,8.362742,-2.376056,8.078957,-4.603572,-7.005227,7.807582,9.932307,0.987474,9.250574,-9.396431,-2.737436,-4.584885,-5.909116,-2.682124,-6.932149,-3.711795,0.537533,4.786291,-2.588286,-4.871165,3.928496,4.849735,1.367781,-9.997684,-7.568454,-5.590504,-5.425390,-8.536048,-1.789092,0.357375,3.971774,-0.576828,-1.350858,1.267661,8.593717,-9.308961,8.552988,-6.400175,-7.744154,1.072331,8.699902,6.601383,4.115136,-8.120476,2.364331,-9.003009,1.892889,2.388231,9.044227,9.999296,-5.821426,5.906537,7.573874,-6.436365,-0.484769,-6.338438,-9.419069,-3.381562,7.095430,2.235402,-3.088391,3.376702,-3.206284,0.626302,8.079069,8.497227,-4.089028,-3.656641,-4.629882,1.027099,-8.315503,-6.727716,-8.923284,-7.193442,-3.821387,-1.339502,-7.184157,-7.351585,-0.024355,-3.729713,-8.549756,-1.220226,-5.925812,0.058850,0.576877,-4.570130,-4.095959,-7.326375,2.717932,0.587354,-8.366411,-7.455110,2.361610,-7.587822,-0.793347,-0.513051,-4.830712,-0.485141,8.363670,9.546547,-8.067820,-8.425372,-4.356610,1.545356,-0.714813,3.597057,-7.166660,0.935406,4.941661,-4.163514,-4.913682,-3.588396,7.291903,7.555378,-3.193486,5.716583,-0.637930,-1.816060,7.527441,-8.350940,-0.270965,-4.555375,5.089773,-9.431758,6.204450,1.589974,6.686445,-9.481415,-9.954062,6.331368,-4.178934,0.626607,7.512170,-5.097771,-7.423262,-4.534676,-9.834288,5.005123,-3.562256,-9.845244,-4.301420,7.089010,-8.570831,-5.267394,6.539707,8.317743,5.426287,2.711085,-4.152488,2.360590,-2.979657,5.085443,-4.483038,3.995334,9.495016,7.799770,5.984621,2.826543,-6.314814,-3.779241,-6.314091,-8.270903,-1.524234,-9.146103,8.777732,4.863040,4.377240,-4.678766,-3.816101,-5.162981,-4.537780,4.212481,-4.319917,6.669888,7.591571,-4.531196,3.213192,5.356589,-9.230826,8.615734,6.556681,-1.296325,6.467274,-7.547820,-4.669424,4.287128,-0.343643,-8.125642,-2.115862,-8.777220,8.351856,3.797216,6.179235,-0.058607,-8.685423,5.338584,4.661138,-7.321405,-9.345693,-8.508218,9.332095,4.019321,-3.335248,-0.947734,7.815406,-1.096741,7.453391,-9.354731,-9.385790,3.568041,-2.067707,-7.650339,-4.379915,-9.315808,-8.677431,3.545305,1.448059,0.927969,-9.593150,-5.143424,-9.369337,-1.474808,-3.236706,-4.062540,2.861779,1.625428,-5.490043,1.288874,-3.267344,-6.025276,-3.547228,-7.990331,-4.123857,-2.271820,2.817175,4.568750,6.395718,8.351991,-3.346795,1.538915,4.775498,0.317439,-6.199432,-3.856033,-0.450664,0.193438,-0.127125,-9.461025,-5.752027,2.756154,1.166261,9.114098,-5.300766,-0.756712,2.203560,8.888116,-8.011908,-8.305975,2.712456,0.203954,7.422168,5.075827,-3.708817,9.910305,-3.174378,-9.259902,1.598079,-6.410380,7.973262,-0.783473,-3.997246,8.363663,-2.502640,-2.575438,0.917700,8.393166,-9.192189,-9.986752,1.540530,1.728975,1.491480,4.835386,-8.322305,-2.200647,4.881827,-6.978348,-2.139271,-2.509795,3.935182,0.721312,0.135661,-3.097737,4.191438,-3.209546,-9.942880,-2.641157,-8.961183,-8.103057,4.913522,-8.696429,3.029692,9.668523,-3.525962,-0.838869,-5.987808,-0.137659,-0.675330,1.875700,-6.492060,-7.294055,-2.926544,-4.888311,5.207247,8.510929,9.477657,9.578970], dtype = "float64")#candidate|5604|(507,)|const|float64
call_5603 = relay.TupleGetItem(func_2580_call(relay.reshape(const_5604.astype('float64'), [13, 3, 13])), 3)
call_5605 = relay.TupleGetItem(func_2582_call(relay.reshape(const_5604.astype('float64'), [13, 3, 13])), 3)
func_1940_call = mod.get_global_var('func_1940')
func_1943_call = mutated_mod.get_global_var('func_1943')
const_5611 = relay.const([7.841114,-0.877876,6.946806,8.534702,9.998400,4.724488,-9.442340,-9.371520,4.815950,8.627066,3.564172,-3.685263,0.368467,-6.695453,-2.780339,-5.323671,-9.868220,5.345435,1.000801,-8.743382,-7.342448,3.635394,9.222480,9.361825,-6.456472,6.901930,7.020061,-4.077622,-5.935023,1.385498,-7.327477,-1.856758,-7.568530,3.326487,-2.385014,-1.839428,3.231593,-4.943654,4.018474,-8.114404,-6.717382,-0.430822,0.416859,2.712244,1.224669,-4.384751,-8.176715,-9.888577,7.400709,-0.084786,6.768204,-7.387062,-5.313013,9.281025,-3.727548,7.889393,-8.007781,-3.385839,-2.540151,7.784849,-5.343970,-0.832861,-3.861862,7.784214,-9.316329,-2.716610,-3.693401,-6.400161,1.677146,1.880356,3.720018,-6.730681,-7.684692,-5.723331,-5.552273,-8.360420,9.761107,-9.818732,1.179262,8.446465,4.075473,-7.628888,-6.020195,7.660451,-5.540268,3.957558,1.140918,8.098477,-9.859593,4.273370,4.679132,1.461999,-1.202048,5.258514,9.201445,2.883712,-7.338895,3.324161,-2.508348,-2.424690,6.055716,5.517055,6.063084,-5.938508,-9.012226,6.585278,6.916230,-7.494838,-9.382265,9.066980,1.752030,-8.653303,-7.468828,-6.039313,-6.832265,-6.397962,2.970623,9.982414,-5.066992,-2.938924,9.904558,5.668520,0.141683,-7.945009,1.425543,3.987973,-1.742864,-0.459841,2.543875,4.858546,5.976197,3.225594,3.120308,7.447265,-0.389104,-8.377117,0.972356,-4.620511,-5.787174,-5.916754,0.057747,-0.783090,-4.825948,-0.512048,0.003837,5.208264,7.015296,3.786168,1.025894,0.747818,2.694083,2.498515,1.982234,4.129528,-9.130366,7.448545,1.954577,9.647117,-0.251864,-4.751018,-5.271294,-8.974838,-2.533275,-2.639747,-9.739361,-8.551889,-8.297328,5.161302,4.954427,3.437083,-6.831469,3.670560,-7.457836,5.247172,1.256005,-3.587287,-4.184736,0.238123,0.071406,-6.023103,0.205714,0.765424,0.948874,5.454382,7.478621,-2.003379,8.485727,5.722739,2.806337,-1.265162,-3.268906,-6.330421,1.276558,-5.425919,7.078009,3.870426,6.661438,-1.006581,6.980347,7.281055,-5.664011,-1.243917,-5.834173,6.967474,1.619390,-0.598721,1.078390,-2.543099,-4.969628,7.954512,7.968270,0.887285,5.928877,5.345779,9.381640,6.471964,3.260666,-3.404648,2.438863,7.505160,3.979249,5.780915,-9.883248,-2.664274,-1.223993,-3.088651,-6.985719,-4.855484,-5.021235,-1.296929,-0.070267,8.132264,0.434663,2.438917,-5.359095,9.466383,-0.355048,-3.122213,-8.043508,-8.823563,-8.582444,0.945888,-0.991644,-5.180347,9.083295,-6.758152,-1.471432,2.512983,0.481763,-0.097452,1.754838,-1.389199,-3.086407,-5.767842,5.740386,0.382150,-1.278647,-2.287668,-7.365966,0.054105,2.909083,-8.752391,4.714863,9.591720,-1.338459,-2.523874,-5.043024,-3.556408,6.386358,4.043521,6.474501,-7.721712,4.497698,-4.107338,9.768020,-9.108754,7.046906,-5.906402,-5.291105,-6.805277,-5.652912,6.980314,9.669153,3.159705,-2.197409,7.811472,-6.305832,4.941466,-9.294901,5.149978,2.071303,-6.673795,-8.813332,-2.098915,-1.074843,-4.559465,4.075886,1.423595,5.660144,-8.833025,-5.172828,0.300462,8.297095,-9.626912,-9.443929,-8.221934,9.702842,-9.458940,7.594281,6.651701,9.454525,-8.215950,9.654453,1.194719,2.841664,-4.505558,5.628839,-3.082080,9.961383,-8.922632,-1.435698,0.849465,3.086682,-6.078656,-6.363384,7.188752,9.440725,4.286034,6.953696,6.962747,-2.135670,-2.477802,1.280056,-6.821971,-2.664456,-0.654439,4.913318,-7.305382,9.113569,-1.340346,-0.450621,-8.912643,3.637391,-6.615613,-9.428297,8.857476,-3.276953,3.926378,-2.349939,-2.448639,-1.229835,-5.149942,-7.124841,8.678390,1.766528,-2.488461,1.090343,1.682422,-6.027382,3.301353,3.952633,1.768502,1.190483,2.329776,-9.834665,-5.693101,-3.126327,0.310290,6.535768,-9.141222,-5.695401,4.505291,6.676986,-4.169770,-2.919194,4.469702,7.283845,6.014148,6.836795,-4.469564,-4.451841,-3.810758,8.185083,-9.435296,-3.821033,4.932130,0.477831,-5.709543,3.814446,-1.705772,5.943440,0.265615,-3.811541,5.843811,9.839897,9.248808,-7.202843,-0.871748,3.249227,-9.779654,-9.882126,-7.980715,-5.988689,-4.485380,-7.448464,-7.262044,-3.652909,-2.407919,-9.198416,-1.617906,5.245161,-5.443730,-2.796066,-6.988385,3.980839,3.540267,-6.962849,4.018312,7.554794,5.147683,-5.756776,5.086713,3.552375,2.041459,8.445120,-1.940308,8.712806,-9.961607,7.967516,-2.373594,3.607270,-4.916973,6.378894,6.507696,-8.533291,-5.763168,-0.507214,0.556309,1.759611,8.643968,0.227081,-8.954085,-6.619963,-6.556215,4.632159,-7.681717,-7.524651,-8.603327,-1.441069,-8.629439,-5.208781,8.040176,-5.648554,5.554400,1.520906,-0.748454,-2.561909,-9.357844,7.450991,-5.174764,9.944472,-3.983588,-1.205797,2.444048,-4.169890,4.876069,1.989652,9.454962,1.636163,1.704943,7.802256,7.276590,-8.856743,8.687474,-1.384803,-3.979150,-9.418701,-3.413150,-5.875592,-5.610330,8.572918,7.522258,-6.464008,3.905825,0.554664,9.257948,-2.944069,-6.857162,-5.228763,7.173537,-5.446679,-9.524610,-6.971976,0.016589,-3.902251,1.886076,5.640943,-6.683597,0.246606,9.532393,6.978494,9.109154,-5.168114,-5.730604,7.703904,6.775970,-2.292922,1.813800,-7.926839,0.759026,-0.913379,7.352276,2.381201,4.737345,1.078036,-2.739816,3.728379,-7.440251,1.330316,-5.905360,-0.026373,-7.660761,5.086228,1.007031,-7.657502,7.761437,3.700513,-2.806775,-9.644397,4.401180,8.312180,-3.890830,-4.934889,-8.523714,-9.596747,-3.784797,-7.428015,0.275881,-3.940024,-6.272437,4.769833,4.847051,-7.185192,5.117924,-3.857255,-1.008802,-1.155618,-3.623177,2.334256,2.850847,-5.969809,1.120383,-9.525746,-9.408634,8.003333,-0.716206,-3.191407,-8.931808,7.468889,-8.796483,-5.688825,4.892920,8.765247,8.564136,-5.424146,-8.143942,1.210077,-4.440805,-4.712753,-7.470055,3.249945,-5.227685,3.449948,-9.046786,9.245524,-0.654578,8.424395,-5.372951,4.619603,6.449140,-4.306730,-9.978712,9.396722,-7.972941,-6.707116,-9.613920,6.097284,0.336989,9.922532,0.035269,-0.021335,-6.088206,-7.245403,6.434570,9.838909,9.661616,-6.936980,5.712786,-0.780139,-2.086803,-3.351141,-5.099809,9.569219,-8.526529,4.590888,1.333046,5.726242,6.987192,9.699465,-0.560686,-0.825462,-8.602961,1.849920,-0.363236,8.921570,-7.289867,5.181323,8.964036,1.625624,0.964404,-8.254768,-6.155098,8.725017,5.020029,-1.020658,5.163406,7.606109,-2.522541,9.740440,6.357707,0.323095,-7.515936,-4.309569,8.578472,-9.712455,7.224834,-5.367750,-5.876245,5.324774,-6.747672,0.630482,-4.103669,8.614923,-3.662590,-8.971704,-2.825249,3.624216,-7.301149,-9.140476,1.194084,1.799122,5.434812,3.580299,2.990296,8.067069,-8.405388,6.327355,-3.443285,5.635927,5.064573,-6.808752,5.522580,-0.877956,5.520764,-2.099991,9.658255,7.430042,1.781031,0.158248,-2.372481,-7.947468,0.638377,6.006704,-3.248149,-7.186873,-0.594173,1.151193,8.548579,-0.981397,6.698095,9.588778,-5.240186,7.625194,9.894598,-3.030210,-1.007405,4.795847,-3.791752,4.664134,3.153088,-6.008811,-4.391749,-7.549939,9.514721,-4.267865,5.435719,-6.593307,0.319138,3.793587,-5.627263,-0.776768,-3.644306,-2.155434,-6.919788,3.188947,-8.149130,-8.977252,-5.339353,-5.851236,9.459757,-4.733256,-4.616354,-6.243809,-8.770641,3.352553,3.676396,5.628324,2.438400,-6.134356,7.909516,5.345587,2.004418,-2.610348,-2.097567,3.082292,-6.111967,-1.301360,-8.428168,-5.792329,-0.888279,7.338084,7.625693,8.609738,1.448815,-9.093055,-0.955726,-1.619562,0.121473,8.262049,6.592058,9.895042,-3.952631,-6.207421,-3.278435,2.738529,-8.403714,-8.108809,-5.212689,-5.067448,1.243955,-2.172817,4.284786,6.423363,-7.197800,-2.865878,-2.930707,3.967614,-7.295008,9.333788,-1.044074,2.123928,-4.713329,-5.765944,-3.948776,-3.812339,0.150309,3.573444,5.466107,-5.388567,0.355268,2.675244,-6.124911,-7.118327,-9.940090,-9.318451,-0.023276,-2.995176,1.812487,3.541611,0.210937,-6.300240,7.439321,7.248093,-1.979234,-5.286710,7.194879,5.023131,-0.108194,-3.654657,-0.686280,6.677387,-4.574325,2.914382,-2.412354,0.734915,-4.616506,-2.377199,6.059581,-3.987526,6.012729,8.880830,-6.470116,7.788723,-3.265601,8.065332,-5.713955,-2.954135,-1.160370,-5.706623,-7.999389,7.902541,0.364816,-9.847623,5.392349,1.629058,0.622043,0.210864,1.078313,-5.917970,-9.281931,-9.244132,-3.395030,-9.035209,-7.848530,7.045317,-4.991876,9.512769,3.192739,9.885466,-7.708953,1.464353,7.914153,6.977963,6.542676,5.396867,-5.638923,-2.219510,-8.128656,6.631964,-4.232696,8.576925,1.865727,-7.388153,9.824048,-5.343904,-7.260829,7.883863,-8.994385,8.149786,1.660141,-7.439296,-9.281978,-6.928219,5.533664,-4.003771,2.116753,-0.833989,-4.404479,2.268265,-1.579682,-6.194906,3.292935,0.323667,-1.714679,-2.187744,7.797407,8.336428,1.451306,-2.901267,-8.205749,-5.188640,-2.209971,-8.436431,-5.558823,-7.893835,2.732960,1.748901,9.656719,3.035569,0.616203,4.307989,-6.139230,0.023546,-5.841972,-8.015829,-4.188647,-2.857963,8.547407,7.716850,-6.116199,5.739444,-3.800169,7.491241,8.738009,-8.804657,-2.808201,1.755055,-2.243095,-7.431034,-7.151891,3.626755,-7.778179,5.932921,7.239143,0.083872,6.257030,8.450485,3.896369,5.693708,4.275571,-5.826980,7.863504,-4.782832,-2.283185,-0.774611,6.180170,4.663129,-7.469567,-3.604503,1.743069,0.663380,-5.262548,0.369244,1.139652,-1.836159,-4.975442,-1.467503,-1.556515,3.905695,-1.748056,1.350791,-1.582961,8.799952,7.582658,-3.041645,9.241660,0.410872,-0.618534,2.935400,8.281642,1.157636,-6.518715,9.594675,-1.518890,2.666467,6.580986,7.240637,3.428481,-2.747371,-9.985991,-6.519513,-1.021945,0.673880,-5.899446,1.183364,-4.850138,0.595003,-7.502891,6.368535,2.255850,5.797080,2.599746,-8.435759,5.210679,1.237113,3.140101,7.328714,-6.182611,8.065446,-3.795253,-7.909965,9.884838,0.030165,8.893812,-7.554029,-9.923311,7.830947,-3.849420,-9.802366,-5.330315,9.576080,9.500354,9.319803,6.954019,-6.050231,2.407391,-8.837168,-2.177195,5.160567,-0.707985,2.939736,1.677257,-1.996615,-0.692067,-3.103949,9.524139,5.603561,-0.609062,-3.351495,3.932056,3.965154,0.640450,9.416505,-7.792527,5.170117,-6.516843,1.853560,6.171377,-9.508211,-5.100751,-9.088362,-4.062537,1.158893,7.670189,1.460851,-8.783585,5.854746,-3.657404,-4.495225,5.926552,-4.223168,-3.604188,-4.571513,8.032844,4.508041,0.836217,2.958542,5.403403,-2.209176,-5.555942,4.462799,4.896638,6.432996,2.641980,-7.281737,9.549837,8.234200,-2.907730,-7.517705,-7.541057,6.363974,4.708668,1.027421,2.441950,4.914332,6.357400,5.484133,-3.895729,1.218381,-8.534162,-7.709908,-5.424439,1.945517,0.129877,-2.175396,8.247954,2.469025,5.097655,-8.562343,0.248930,-8.933368,-9.894252,8.227728,-2.716294,8.752623,-5.689552,6.627608,7.319036,8.238393,-1.905713,-4.329239,0.801975,-0.345108,-6.243032,-3.252767,0.648260,7.290448,-4.021884,-5.143324,2.869418,1.120572,4.330347,-4.744446,9.114908,-8.659875,7.662616,3.336927,-9.441918,7.134579,-0.263659,-4.977579,4.939541,-0.847378,-7.343407,-3.846189,-3.339150,7.139836,-0.751182,-5.225080,2.713586,0.970408,6.628403,-0.768909,4.550120,-8.629235,6.122222,5.887420,-4.584178,-4.701015,-6.266700,-2.985477,-6.427989,-2.055240,9.151162,-9.642610,4.857590,-2.981422,-9.391990,1.179020,-1.449945,-3.579460,-1.242074,-2.222405,7.576988,-9.343832,-4.542795,-0.838640,-3.191975,6.627151,6.281699,2.727255,-4.156001,1.459179,-4.772165,-3.953152,-9.541264,-8.047886,-9.000013,-4.488567,6.918884,8.897739,1.707577,-3.444873,-3.855977,-3.402565,8.630233,8.411853,9.502425,-0.330492,9.527564,-4.430250,5.191100,-7.518041,-9.360899,3.661462,1.598319,2.450381,-2.941851,5.390872,0.292650,-3.684631,0.799872,-2.765117,-8.166707,-1.437791,1.449694,-8.212718,9.304282,-0.253378,8.293371,5.850562,-5.424198,6.806482,-2.241558,-8.280493,-5.427439,-7.375401,-1.884813,-5.135940,2.177598,-6.538510,-3.690856,-0.323695,3.597725,2.661282,-2.923963,-0.087711,4.707734,-9.438445,-7.016482,0.356925,9.958403,-6.890931,0.063234,8.278574,2.171205,1.244387,-2.911948,1.047598,9.432870,-4.774687,1.596719,-3.256296,-9.621097,-6.218868,7.436666,-0.178691,0.297818,-4.953009,8.726410,6.410006,7.220091,-2.455328,-4.090460,-9.640121,-5.476155,-7.499179,8.780354,-4.527887,8.144896,-2.749282,6.684490,5.140955,2.668239,7.359879,3.334014,0.977307,4.732482,-4.957438,5.839366,0.520080,7.724741,7.084801,0.868694,6.574649,-2.137281,9.562803,-4.778839,-6.334820,5.489296,-6.453384,-1.058492,3.576377,-3.297041,-0.683440,-5.876034,6.120584,2.220129,-8.561814,3.381095,4.097071,5.855352,8.164797,0.191142,1.630567,4.001947,-6.202067,9.937604,9.161559,1.199099,0.706447,-6.206492,-3.456081,0.113629,-5.751962,-2.869098,-0.972486,-9.065603,2.134144,2.838372,-1.300341,-2.810291,9.861871,8.831212,1.739790,-6.561629,-5.096270,-4.052515,-5.986175,-0.701973,-3.315949,-1.969719,-9.214457,-8.428215,-9.350351,6.935535,-9.094473,3.770903,1.597859,-5.565941,-1.364959,-1.694535,4.053102,0.109598,-6.033041,-3.682335,-6.028742,-5.445645,-1.814150,-0.062285,-8.490411,4.434250,8.822868,-1.597076,5.363457,-3.851500,9.680988,2.707434,7.761684,-6.956447,-7.636956,-2.041932,4.871352,8.425865,4.278386,6.076431,2.269102,-6.821360,3.569504,-3.042099,5.493778,-8.111102,1.039728,-1.729858,-3.985616,-0.261583,6.251796,7.142057,3.388028,-2.832052,-4.856146,8.718679,2.522596,7.781877,-7.053149,6.195779,-6.962220,7.165919,2.140752,-8.949976,-5.656470,-9.907225,1.273238,1.270947,5.343686,8.116892,7.247229,8.868358,-9.081451,6.448616,-2.464510,-5.059258,4.491047,-9.290722,5.010171,-8.092262,-2.434694,-5.413822,9.313741,-3.830949,8.597657,-9.164770,-3.264604,1.377249,-7.716979,-6.541175,-1.250791,5.793102,-4.326169,-4.289431,-5.693772,6.453044,-3.570796,-5.032992,6.656781,-4.319527,-0.843689,9.084204,-9.234450,5.914695,-8.834642,-5.142636,3.113500,-9.956553,0.869198,8.756823,4.327045,-3.160264,-8.142056,7.328766,-1.052072,8.248059,7.119700,1.135943,3.810943,-1.215065,-0.743368,-3.007711,9.677603,2.372992,-0.999250,-3.242911,-4.684956,7.977772,-5.993949,-4.374155,-8.014894,2.898061,6.198206,8.484530,-7.303356,-7.426446,-2.781321,-3.903648,1.008946,3.974251,-5.158456,5.118755,-6.328897,-5.384211,-1.386394,1.313188,-3.829234,-5.814878,-5.029601,-1.827347,6.281601,1.479561,-4.683438,5.393940,-6.999153,9.015746,4.894346,3.030116,2.675620,-3.456434,-7.146456,-4.972803,-5.460460,-6.820218,-8.061229,7.548856,1.429425,-6.008121,-3.272460,1.536014,-9.886309,-0.563293,-9.109210,7.100113,8.775588,9.825701,-5.105541,-1.097732,-3.143225,6.358044,0.451560,-8.142825,9.058903,-3.904157,5.510205,-6.288596,-0.927626,8.237088,-3.595244,-9.044592,-2.083073,-7.083164,0.559699,5.800930,8.605566,7.119552,-8.527876,-3.293569,-7.955123,9.450705,-6.086114,7.076643,-6.690875,9.964144,0.653606,-0.470222,2.769165,-6.220684,2.151384,-4.017547,-9.282455,-7.211516,-3.189505,5.240877,1.818482,-4.920596,-7.441709,9.078725,-7.235525,-8.356215,-8.242518,6.845730,8.121289,5.195447,0.855055,7.541903,2.097242,-2.890389,-3.154631,-1.965205,4.950653,-7.991275,-8.448447,-3.663591,-9.234952,-7.875256,-3.272037,8.429681,-3.950396,-0.126738,-8.543726,9.738207,2.112630,0.814396,7.006783,-2.514424,-8.586279,0.965290,-7.895200,9.435059,-3.297801,8.026530,7.214664,-1.533760,9.224049,-4.825285,-8.473757,6.201087,2.587338,-0.338351,-8.259609,6.039681,5.006921,9.501106,1.871773,-8.421460,5.275315,-4.473242,-9.973021,-5.365600,2.109729,-4.846684,-3.876405,-7.260180,-0.673710,9.679010,8.827215,-8.873177,9.889938,-8.356334,-8.224656,-6.794127,-0.466608,6.732733,7.806771,9.816953,-5.894480,-0.049446,1.632508,-4.662042,1.372055,7.104742,1.852277,7.479294,3.440653,8.197051,2.000538,8.953782,-0.284155,-4.111047,-1.244142,-3.884857,0.996261,-3.237998,6.154203,2.750994,-1.909362,7.150962,-2.050262,-5.740609,-6.800944,9.184819,9.913504,-2.677658,0.941542,2.912645,-6.907057,-3.037518,-4.783588,-8.401467,-6.889805,5.620016,-5.084864,-9.440146,5.936544,8.533907,-1.355274,3.769682,6.753573,8.825003,7.615208,7.421941,-8.535386,2.400073,-6.026167,1.403990,7.767717,8.704431,8.923079,-6.841733,-4.043925,0.738178,4.932941,-7.370874,-0.318468,9.686067,-1.092109,1.375378,5.156371,9.883885,-3.280690,-8.803240,2.986929,-3.078240,0.021033,-7.888746,-6.728698,-7.392908,-2.510986,-6.700350,-6.686551,-7.877961,-8.291719,9.142496,3.121761,1.239418,4.606232,0.693217,4.510843,-0.886180,8.531944,-7.786937,-1.079358,9.533401,9.776415,7.738137,0.108243,-5.015598,0.972383,5.356297,8.409902,-7.674247,-0.660356,2.234240,9.659583,-6.663694,-8.546813,-0.946236,0.888163,-5.345615,-9.797975,-4.823799,5.861337,4.216347,3.618133,7.463702,-7.498882,7.180768,-1.045420,-3.485186,-9.474636,-6.630425,-5.921159,2.248123,-8.603759,-9.109688,1.590461,-4.324135,-7.093880,4.309124,3.001382,-5.490807,3.389163,-3.916197,-7.090708,2.862386,-0.384601,-6.698573,4.875475,-1.932030,2.216695,-0.768597,-1.765484,9.253816,-6.012593,-8.428969,-9.892474,7.535985,-5.033478,4.086361,7.325861,-9.496462,-0.761407,-9.063951,-6.930658,2.212327,9.734593,1.513898,-2.588217,-1.915218,1.323803,-0.536541,1.453354,1.777863,-8.228847,8.398311,-7.741884,2.331989,-7.501150,-3.082133,-9.364940,-1.894157,9.562377,6.358067,-5.339064,-0.825803,-8.848352,1.887930,6.081714,-7.906752,5.044347,4.120791,4.179941,-9.589355,-0.816949,-5.898671,-2.774538,-5.152274,-0.308237,-9.444309,-6.672912,8.004867,8.320155,-1.804385,5.985028,-3.755586,-2.647440,-9.472479,-5.562677,6.105505,1.166483,-7.553733,-9.880873,6.099659,-6.739887,-7.491366,0.604818,-9.297185,-5.761408,7.507592,1.358710,6.760077,7.827258,5.248641,-8.190761,-8.057274,-5.879822,-0.923214,5.400549,-6.284656,0.647478,-5.418167,-4.548549,1.101670,-5.433688,-2.381070,1.492942,6.763774,-0.411777,-1.814729,-5.987471,-3.160245,4.591967,2.292222,6.071779,6.151159,-0.232988,2.961152,-3.264370,-7.209447,7.810411,-1.995996,-6.988661,7.292776,-6.429873,1.763952,-3.954455,7.485047,-0.776920,-5.112264,-4.730440,-1.118867,-4.701204,7.846112,5.814895,9.593941,8.170350,9.543686,7.686319,-9.433629,-8.269601,-2.003771,5.927449,0.125617,4.618256,6.778150,4.503833,-3.018258,0.780632,-6.565216,4.419462,6.610013,5.366300,-5.162483,3.285015,-6.289431,2.105758,-2.802809,-8.291928,-9.902115,-0.768614,-5.754959,-5.688201,8.647901,-1.454082,-4.021596,6.847286,-3.935036,-6.808450,2.649388,7.653357,9.051829,2.163710,-8.179229,7.360743,0.753292,-2.978621,3.412988,-1.096172,5.990612,-4.689328,1.228156,1.612739,-8.823387,-6.244661,-1.263293,2.483613,-8.036614,1.876122,6.691709,-9.331848,-8.378149,-1.226631,9.279416,-0.487468,0.540397,-5.378657,-7.506457,4.340834,4.240016,8.116772,7.886892,2.344551,8.062487,-1.617544,-0.162334,9.901852,-9.167136,-6.651332,-7.692934,-7.584015,-8.791781,-4.025142,-9.242096,3.836491,-4.279813,2.492971,-4.217875,5.994029,-7.323013,-4.004042,-4.140427,1.058732,4.993910,-2.420410,2.279130,5.071038,8.120789,-9.487724,0.316491,9.384474,-2.441297,-1.791162,-4.337214,-9.687727,2.357344,2.080435,-6.795358,-5.753417,-2.172685,-6.883137,8.818528,4.550647,2.308115,9.853920,-9.792769,-8.758488,0.558170,4.630576,5.007103,-5.201616,-5.868178,-0.269543,4.645369,-2.560642,-3.550333,2.622900,-8.801458,-1.929864,-6.322109,2.538219,5.898900,-8.418849,-9.476738,-4.551521,4.557487,-0.307905,-1.101332,9.386103,-4.730843,4.246412,-1.684341,-8.435384,-6.320374,-1.229475,-9.324408,5.619512,-8.946413,1.526312,0.122703,-5.168527,-4.518702,-2.798958,4.826267,-9.955193,7.748849,-9.118072,-3.934444,-2.769682,-6.354816,-4.805369,-1.373140,-3.921325,0.200972,5.494917,6.036347,3.970377,0.496689,-8.409307,1.940813,-2.577703,-4.948231,-9.180609,0.852943,7.801489,-1.528525,8.632723,3.505882,9.478552,2.658899,2.782210,-1.915889,-9.295848,-7.299039,-7.273456,-2.736094,-4.522990,-2.908894,1.660303,-4.408167,3.139337,-4.948994,7.807375,-5.893402,-7.201159,-4.923027,-9.893018,3.457532,-9.605398,0.106289,6.513948,0.757856,-7.173605,5.525093,0.530035,9.689059,-2.437060,5.307249,6.134206,-9.083050,8.944362,-5.293198,6.381304,1.647821,9.892776,-2.364683,-6.647674,0.233092,3.084676,-8.222066,-7.875603,2.805317,-5.180042,-7.629817,-5.269128,5.332141,2.922809,7.345838,8.861324,-8.317922,4.892243,-1.648685,-2.579341,0.674073,-1.113956,1.700667,4.595786,7.127021,5.387374,0.761020,-6.604863,-4.061866,-9.157957,-9.450192,-0.797808,5.486445,9.100098,4.809491,7.082221,-5.620362,-4.009479,-9.626037,-2.863248,1.118607,3.706867,-4.079211,-3.840351,-3.371957,-0.266946,-9.355527,0.934709,5.928807,5.640515,0.800309,0.591964,-6.785929,4.698697,3.953041,-4.068231,8.455292,0.857400,1.796182,-6.236067,6.516260,-9.729434,7.568899,2.205778,4.775536,7.109810,1.895422,-5.578291,3.507071,-6.610843,7.139152,3.469968,-7.475094,-6.235882,-5.926837,9.800578,-5.413389,-1.797834,-6.224732,-9.715041,-5.473969,-9.933677,-3.832711,-2.635478,-5.730222,-9.409067,8.497025,-2.604425,-6.801292,-7.194667,-7.907021,-3.928306,6.343975,-9.478624,-6.342211,5.797913,0.084039,-2.820909,-5.967736,9.817485,6.404954,4.525971,4.441793,3.683526,-2.676919,5.081149,1.471557,4.256974,-9.619881,-1.608658,-5.673418,8.407476,3.565016,9.557991,-3.852199,-0.618133,-9.883665,6.417176,-4.099079,-9.466735,-2.238703,4.892729,3.084080,-4.334185,-6.254067,1.445608,5.098118,-1.086779,-7.191490,-7.423304,-4.301722,2.792242,-0.230355,0.963835,4.355052,-6.275580,3.359144,5.831866,-5.073080,-5.182466,5.774818,-8.476634,-8.206908,1.993098,-6.932278,-0.755040,1.836486,-1.356652,-5.979813,-5.150416,6.619035,3.208536,-8.654834,5.154389,-9.875069,4.501878,6.873282,-6.264248,8.944342,5.271838,-4.957110,-8.805744,4.791537,7.764463,-0.724023,7.429172,-7.583550,-2.843598,1.239605,-8.732072,0.901075,4.002093,7.165232,6.496631,-7.244219,-6.425662,-5.523887,-3.481969,4.750210,6.944326,7.021943,2.168721,9.344177,-0.247332,-1.705194,-4.940532,-6.747215,-2.327091,-6.423402,-0.036673,-4.275082,9.826426,-8.769685,-0.995315,8.857838,6.556480,-4.304338,7.007671,7.256702,8.736248,-4.215233,4.609416,8.011253,-2.833218,4.278903,-1.998237,8.592083,-3.402874,5.599628,-6.191854,-4.601024,2.632738,-2.518416,-3.499118,-8.183904,8.671961,-3.142141,-5.475162,0.291004,2.452897,6.969998,-4.722050,3.635117,-8.554575,-0.308611,5.277994,2.158866,9.072406,7.954632,1.000411,5.109871,-2.604322,9.941526,-6.682321,6.817268,-9.775541,4.777151,-4.217110,7.483576,-3.224002,3.590395,8.830880,-2.104723,-8.365197,-9.630767,-7.877666,1.651319,7.902302,8.725507,3.896430,5.096802,5.981637,-9.319937,0.686133,3.298603,1.376683,-0.071255,3.584780,-9.639786,-2.649570,7.479704,-8.224317,-8.078928,8.724969,5.837491,-1.227500,-3.203121,-2.303062,6.956096,8.661528,5.505998,5.670888,5.823757,-2.625755,8.024954,-2.274086,7.255575,4.646814,3.193332,4.079726,4.559047,1.675091,-7.682417,-2.086935,-3.893857,-3.455820,7.549694,2.382786,-2.249526,-5.347484,-5.070090,-1.097952,4.563807,5.965364,-5.039211,-5.039419,1.535757,-7.533713,2.626640,8.520353,-6.055033,8.635852,-9.630993,-7.776445,-1.713528,-1.122318,3.530674,2.004084,-5.716718,4.956397,3.521602,-3.272289,-7.586372,-1.835072,5.147900,1.495928,5.576708,6.626964,6.884285,-7.334038,-4.040189,-4.676201,8.165649,1.457370,6.083558,7.850721,-0.257369,4.743296,-9.875837,-8.455936,9.905191,0.344921,-7.967147,-4.924437,-9.240697,2.526591,5.058342,-3.528905,1.356670,-7.270889,9.953407,-0.870214,1.763696,-8.384190,0.907240,-2.561631,-0.397798,-9.454131,-4.592401,-4.232269,6.124304,-7.420822,7.094051,-9.142713,-3.723296,3.854138,-2.674716,7.281883,0.743598,5.556303,-3.388425,-5.770688,5.929487,4.001306,0.341105,-8.184913,3.587269,-7.176066,3.472747,-2.585105,4.323338,1.791598,2.860168,-1.019513,-9.548579,1.184749,4.400734,6.649596,-3.449377,-1.831196,-6.752861], dtype = "float32")#candidate|5611|(2400,)|const|float32
call_5610 = func_1940_call(relay.reshape(const_5611.astype('float32'), [16, 10, 15]))
call_5612 = func_1940_call(relay.reshape(const_5611.astype('float32'), [16, 10, 15]))
const_5613 = relay.const([[[-8.792715,-7.219979,7.401748,5.804556,8.078297,5.421435,9.614285,4.135479,-1.289884,-9.099365,-5.182751,-3.724980,3.715857],[6.163525,5.973121,8.645234,-1.410570,-9.659915,1.393958,-1.562021,6.047243,4.292466,3.466483,-5.018165,0.123862,-4.713739],[-6.822929,-4.178374,7.248153,6.825095,-9.802752,3.321434,-5.698535,-5.750078,9.870493,-7.759413,-6.921152,-3.296531,-6.208871],[3.064122,6.852378,-6.388176,-2.382852,0.813722,-6.041263,-4.143868,6.327980,9.429365,-1.273876,8.031051,-1.366141,-0.939117],[9.383186,-1.362374,3.284914,3.908966,2.951820,4.080355,-1.308432,-3.392533,7.764423,6.940435,-7.119191,-9.553621,-4.144351],[-6.752326,4.844724,1.988435,0.542668,-3.112332,2.408397,4.078060,1.704882,2.604795,9.625896,-3.902392,-7.957452,0.971609],[-3.015355,0.813863,-5.867164,8.473275,-7.791432,-5.335436,9.284525,8.236244,5.448835,2.045834,0.174606,-5.789144,-1.182102],[4.802809,9.946220,8.567338,-3.140210,-9.281368,0.805213,-8.736895,7.129776,9.137141,1.503616,4.318300,-7.012403,-6.801052],[7.537204,-4.449457,0.380071,8.178680,8.531897,0.283202,5.640613,-9.606894,9.219015,6.141530,5.859723,6.788368,8.651015],[5.239032,-1.588983,6.386558,6.542102,0.078926,5.431718,0.369205,-8.238643,-9.472482,-8.724759,-6.958098,8.989208,-4.406595],[-0.512282,7.012311,3.768685,4.212860,-7.690646,8.509382,9.489799,5.688431,5.645149,9.255532,5.608389,-7.902165,-4.016644]],[[8.769452,-1.325037,-4.851836,-1.121310,-2.828064,6.522621,5.429053,-9.907731,4.968607,2.330587,-2.899008,7.277357,-7.621134],[2.234870,-0.778950,2.894191,4.935869,-9.729302,5.005753,3.528616,-6.087826,5.779144,2.738008,-5.347798,9.628251,7.450564],[0.714439,9.648013,3.460426,-5.107408,-8.750911,2.716477,5.983088,-3.607203,-7.093986,-9.489224,-5.464841,-4.027283,7.660567],[-3.666012,5.098262,-9.759900,-5.490961,-1.166899,-3.122947,7.650369,6.937089,-9.129240,-7.685923,5.768017,-6.153942,0.715920],[5.672158,-0.534152,4.016532,-6.218031,-0.794154,6.172977,-9.374996,-9.349805,-7.822325,-7.989092,9.618778,-7.720658,0.949334],[-8.331689,0.737352,-0.284713,-3.419912,6.666156,4.361217,-2.321041,-6.735083,-8.685100,5.369775,9.662128,-6.114070,8.670374],[-6.063500,-9.803398,6.349964,7.682086,-0.291885,-7.611801,0.390232,-0.569048,6.736766,-9.671211,-2.369526,-3.530447,-0.773297],[3.283716,2.377659,-0.394863,-6.221525,4.108487,6.243567,-4.174680,-9.113681,-0.300131,-5.066357,-9.140314,4.317865,4.251295],[8.910300,-1.552143,5.491249,3.991691,-8.925551,-1.535915,-0.663902,8.739504,4.260359,3.164220,-4.848032,9.232549,9.572391],[-4.367832,-8.026429,-3.041148,0.957884,0.425285,1.758055,-2.483483,-8.978461,-6.274988,-1.614042,2.730424,-2.486326,-9.724268],[-3.833952,1.120542,9.680703,1.421957,-4.373228,-0.433869,-3.655516,-7.248701,-1.237137,3.310049,-7.296643,1.374863,5.932815]],[[-6.467029,3.520967,-3.271991,-3.320492,3.568237,3.239362,4.370387,2.082529,-0.998196,-0.429678,2.441084,9.928266,4.603344],[-7.957384,-7.997900,5.742426,8.486860,6.917030,7.089232,-9.038707,-1.527801,1.734620,3.981008,7.103138,-6.391150,-9.012594],[-8.204447,-2.498209,3.797051,-2.480189,3.810520,-8.605688,-5.430140,-3.949164,2.932204,5.726088,4.008325,-2.684824,5.633561],[-8.358003,5.247322,2.529605,-9.095911,6.538711,-0.220591,0.851202,-5.992164,3.056686,-8.160995,-8.396491,-8.816672,2.091357],[-8.810554,-5.586512,9.672854,6.376739,6.232597,-7.654154,-0.975144,-1.208083,1.042071,-7.194934,6.905672,-4.768076,-2.217125],[-0.913140,-7.740518,-4.083430,3.737426,-7.116908,6.404451,3.256274,-7.549081,-8.828138,8.597806,-9.974948,-3.773068,-5.755463],[-4.511299,0.125018,2.353684,0.544041,8.817512,-4.576120,-9.487065,1.794001,-5.979990,-2.841843,-6.702006,-9.728797,9.609312],[-2.519352,1.852961,-2.444683,-9.316869,-0.140960,8.239733,6.859504,0.460596,7.580589,0.781201,7.448538,0.297314,-4.870145],[-0.199035,1.929688,2.790522,-0.836278,7.212553,-7.999526,-8.699078,2.075975,-8.720075,3.288524,4.211772,3.335743,6.394271],[-4.718785,8.643680,4.554709,3.216815,8.790926,-5.561110,-2.758665,-5.003122,7.458554,6.096513,-7.952657,-6.793983,-5.206897],[-7.573956,-9.293624,-5.911896,-7.964176,1.360783,-7.174427,0.643983,-6.407121,9.773046,6.678601,1.571199,-2.571312,6.674167]]], dtype = "float64")#candidate|5613|(3, 11, 13)|const|float64
bop_5614 = relay.divide(uop_5589.astype('float64'), const_5613.astype('float64')) # shape=(3, 11, 13)
bop_5617 = relay.divide(uop_5591.astype('float64'), const_5613.astype('float64')) # shape=(3, 11, 13)
output = relay.Tuple([call_5598,var_5599,call_5603,const_5604,call_5610,const_5611,bop_5614,])
output2 = relay.Tuple([call_5600,var_5599,call_5605,const_5604,call_5612,const_5611,bop_5617,])
func_5621 = relay.Function([var_5581,var_5599,], output)
mod['func_5621'] = func_5621
mod = relay.transform.InferType()(mod)
mutated_mod['func_5621'] = func_5621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5621_call = mutated_mod.get_global_var('func_5621')
var_5623 = relay.var("var_5623", dtype = "float64", shape = (3, 11, 1))#candidate|5623|(3, 11, 1)|var|float64
var_5624 = relay.var("var_5624", dtype = "uint32", shape = (7, 156))#candidate|5624|(7, 156)|var|uint32
call_5622 = func_5621_call(var_5623,var_5624,)
output = call_5622
func_5625 = relay.Function([var_5623,var_5624,], output)
mutated_mod['func_5625'] = func_5625
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5651 = relay.const([[[-8.719015,-2.821196,-2.014396,-9.911949,-2.642114,6.853221,-0.715645,-2.776285,-8.522584,-5.051822],[0.241230,-5.884422,1.485719,-4.185383,-1.533429,1.733676,-6.685123,2.000361,-9.523181,2.101121]],[[-4.265408,8.466186,-7.803863,-3.846589,5.570007,-4.166845,5.997870,-2.086523,-3.671871,-9.662391],[0.983376,6.736273,-4.453610,-2.089734,-4.631380,3.681667,-4.255163,-8.172811,-5.385088,-8.746251]],[[9.971371,4.059814,6.771410,6.127721,-1.207123,-7.938546,-2.331754,2.450786,-4.688444,9.215617],[3.815551,7.800185,6.102443,1.938155,5.802200,1.464811,-5.577822,3.143920,-6.977782,0.820028]],[[2.942396,-2.539452,5.387884,-3.246273,-0.434133,0.104096,-7.567625,5.593759,-4.155276,-0.158016],[-5.058789,-7.519940,-6.570667,-3.105798,2.428433,7.168052,8.455652,-5.097714,0.365819,-7.024623]],[[-7.897662,-3.631538,0.380933,-0.671834,-6.190946,0.895534,-3.251107,3.846837,7.247614,5.118958],[-2.804352,8.412692,4.189549,-3.935643,-2.492725,-7.808658,-0.903744,-9.170206,-1.026117,1.170259]],[[1.363885,-4.584888,2.113430,-5.648345,9.894555,9.936140,-1.034664,-5.219987,-6.505462,-9.836816],[5.897508,2.073703,5.535735,3.472532,-5.746052,-3.171263,1.169741,5.202951,5.023617,-8.885220]],[[8.441041,-7.821874,-2.237776,2.517343,7.008076,-4.234632,-1.095674,8.998016,4.404417,-6.837274],[3.217554,7.834609,1.818067,7.175629,-3.276067,5.991294,1.218262,0.638379,-1.620898,-3.463249]],[[-0.976791,9.368034,-3.758427,0.544985,3.658827,2.261832,-3.556631,-7.931411,9.890092,-1.244499],[2.211284,-3.201837,9.124931,-3.606462,-6.888985,-7.977232,3.831412,-4.521445,-3.442105,4.862508]],[[1.406492,-8.975329,4.284557,4.412358,4.221831,-2.349198,3.758060,6.600365,-4.900664,3.106989],[4.751277,-6.633070,5.758751,-0.140805,-3.576909,3.114948,1.506318,6.070208,-9.153037,3.710788]],[[7.151231,-6.302833,-8.296078,4.138283,-1.253167,-7.870962,-4.246660,-1.787459,7.400793,5.273972],[4.842804,1.196843,7.400382,9.680433,2.044814,8.475188,5.983104,5.171605,8.411142,-3.016826]],[[6.384613,3.139755,7.271640,5.361082,6.706853,-2.881651,-5.863123,5.450492,0.053000,0.508452],[4.234318,0.745734,6.508462,0.220407,9.272427,-2.617161,-9.814241,4.166550,3.160829,-3.987864]],[[8.817924,2.164580,-4.070178,2.881394,-6.295785,-3.324850,3.898106,-6.609944,-7.036240,-0.258099],[4.465815,8.606533,-1.553134,-1.555198,2.263823,-9.411981,1.361012,-7.423055,-7.038338,0.097777]],[[4.201660,5.061871,2.458924,5.516373,0.967516,-1.518223,-3.243480,-0.489688,-7.526082,-6.598470],[4.779424,-9.373108,2.248097,-5.884498,3.643925,-4.415468,6.946929,5.472161,2.122612,-9.954829]],[[-0.028889,2.570929,-2.362704,-5.916081,-1.237924,8.874350,7.508942,0.329246,-0.379114,1.273134],[4.157141,-8.860003,8.540099,-2.392598,-1.874831,8.494917,1.439536,4.757748,-6.463827,-9.672685]]], dtype = "float64")#candidate|5651|(14, 2, 10)|const|float64
uop_5652 = relay.log(const_5651.astype('float64')) # shape=(14, 2, 10)
output = uop_5652
output2 = uop_5652
func_5662 = relay.Function([], output)
mod['func_5662'] = func_5662
mod = relay.transform.InferType()(mod)
mutated_mod['func_5662'] = func_5662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5662_call = mutated_mod.get_global_var('func_5662')
call_5663 = func_5662_call()
output = call_5663
func_5664 = relay.Function([], output)
mutated_mod['func_5664'] = func_5664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_5871 = func_5541_call()
call_5872 = func_5541_call()
output = call_5871
output2 = call_5872
func_5898 = relay.Function([], output)
mod['func_5898'] = func_5898
mod = relay.transform.InferType()(mod)
mutated_mod['func_5898'] = func_5898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5898_call = mutated_mod.get_global_var('func_5898')
call_5899 = func_5898_call()
output = call_5899
func_5900 = relay.Function([], output)
mutated_mod['func_5900'] = func_5900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5662_call = mod.get_global_var('func_5662')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_5923 = func_5662_call()
call_5924 = func_5662_call()
uop_5926 = relay.asin(call_5923.astype('float32')) # shape=(14, 2, 10)
uop_5928 = relay.asin(call_5924.astype('float32')) # shape=(14, 2, 10)
output = relay.Tuple([uop_5926,])
output2 = relay.Tuple([uop_5928,])
func_5938 = relay.Function([], output)
mod['func_5938'] = func_5938
mod = relay.transform.InferType()(mod)
output = func_5938()
func_5939 = relay.Function([], output)
mutated_mod['func_5939'] = func_5939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_5984 = func_5541_call()
call_5985 = func_5541_call()
output = call_5984
output2 = call_5985
func_5994 = relay.Function([], output)
mod['func_5994'] = func_5994
mod = relay.transform.InferType()(mod)
mutated_mod['func_5994'] = func_5994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5994_call = mutated_mod.get_global_var('func_5994')
call_5995 = func_5994_call()
output = call_5995
func_5996 = relay.Function([], output)
mutated_mod['func_5996'] = func_5996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_6033 = func_5541_call()
call_6034 = func_5541_call()
output = relay.Tuple([call_6033,])
output2 = relay.Tuple([call_6034,])
func_6049 = relay.Function([], output)
mod['func_6049'] = func_6049
mod = relay.transform.InferType()(mod)
output = func_6049()
func_6050 = relay.Function([], output)
mutated_mod['func_6050'] = func_6050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5994_call = mod.get_global_var('func_5994')
func_5996_call = mutated_mod.get_global_var('func_5996')
call_6062 = func_5994_call()
call_6063 = func_5994_call()
const_6068 = relay.const([[[8.686643,6.078395,3.762484,-5.824011,6.518337,6.896575,-6.563250,-9.982025,2.857422,6.867100,-7.677787,-3.035555,-8.938964,1.541352,9.422134],[-6.120458,5.643162,6.998292,0.904523,3.439698,8.823888,6.820019,8.142885,2.165429,-7.691998,5.443117,-5.933389,6.832725,4.409433,-1.176231],[0.013851,3.583435,8.298439,-8.643406,-5.746184,2.276209,-5.115768,-2.918650,6.656695,-9.473779,-6.067544,-2.985468,9.828809,8.778964,-1.271456],[-1.709086,-1.568171,2.273446,-0.919989,-2.643023,6.983758,-9.878113,-0.398157,-1.207586,-5.264663,-6.938873,-8.481407,4.782163,-4.222806,-3.189517]],[[5.565539,4.555698,-1.436727,5.373800,-3.893866,-9.020988,6.626502,2.136124,8.503052,0.903172,-8.285055,-8.765050,-5.228842,-1.167953,-9.189539],[-1.781885,6.378476,1.332608,-8.105272,-4.200973,4.398398,-6.686044,0.290010,-2.686989,0.798754,-8.051054,7.431828,5.529231,1.812775,2.818262],[-6.395011,9.533961,3.522645,-3.062299,7.829698,-3.436535,5.505128,8.273606,-4.968830,3.490244,-6.520909,8.468424,-8.794377,0.374673,-1.487475],[3.652364,-8.723979,7.922966,8.932849,0.423799,-4.812465,5.386482,7.316185,2.936601,1.670425,0.184184,-5.721955,3.009746,8.088925,-4.242991]],[[7.552102,5.538464,-8.062183,5.224013,-0.095410,-8.370374,-9.564033,-3.181330,5.355472,4.852101,-8.121586,-4.687447,6.993999,3.006863,-1.131718],[4.844310,3.635893,-3.054305,3.442248,8.802150,-7.450318,-0.926760,-2.344318,-1.528651,-1.741166,-0.898421,0.957593,-2.999218,-1.205407,3.249896],[1.082212,3.587854,2.547542,2.292034,5.434019,-8.777436,-0.607845,9.117593,3.719854,-5.966282,0.477722,-2.628094,9.640743,-7.454899,-9.349316],[9.774650,-9.371586,-3.503808,-1.685118,-1.734043,1.847508,7.064413,4.530626,-9.797833,9.422378,3.203709,7.064299,7.416025,-2.055056,-7.380464]]], dtype = "float64")#candidate|6068|(3, 4, 15)|const|float64
bop_6069 = relay.bitwise_or(call_6062.astype('uint16'), const_6068.astype('uint16')) # shape=(3, 4, 15)
bop_6072 = relay.bitwise_or(call_6063.astype('uint16'), const_6068.astype('uint16')) # shape=(3, 4, 15)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_6077 = func_5541_call()
call_6078 = func_5541_call()
func_2462_call = mod.get_global_var('func_2462')
func_2466_call = mutated_mod.get_global_var('func_2466')
const_6080 = relay.const(1.872085, dtype = "float32")#candidate|6080|()|const|float32
const_6081 = relay.const([1.448435,3.000117,0.085279,-8.997746,7.046637,-5.494536,3.397854,-7.840730,4.433928,7.409586,-8.071197,8.423622,-8.998999,-3.426624,-6.644741,-5.877457,1.947962,9.150600,8.944723,-3.392641,2.641043,-1.838464,8.045061,-4.406777,-6.562293,-0.310807,-1.906675,3.035423,-6.279139,-0.555329,9.647365,-8.513648,4.574061,-5.042471,4.531228,0.746054,0.453581,-5.274079,-6.971383,7.153285,-1.674968,-4.369581,5.743986,9.346125,0.633922,6.840765,-0.576513,5.333424,8.179127,9.557022,8.075941,0.010054,-1.343232,0.042692,-4.918698,-5.557879,-4.296378,5.578283,-1.725764,-3.871437,7.164736,-8.197997,1.212304,2.392025,4.603773,-9.617343,5.225280,1.396444,1.958940,-4.408174,2.562649,-2.496183,2.743149,-6.726296,-9.724151,-6.645244,-3.136700,3.354156,-0.991454,-3.557579,3.707527,-6.413059,-3.406039,5.836644,-0.084720,9.052265,-6.299400,-2.998644,-6.367144,0.486776,0.924120,-9.710008,-3.276282,4.163613,-4.783001,2.478532,-7.741760,-7.037416,3.735901,-5.102653,0.476980,-5.505441,2.208867,-7.559608,8.461871,-6.346069,1.253057,-1.235187,4.395528,-8.353178,7.905669,4.479323,-9.928893,-9.070214,2.773730,8.663245,-3.619548,-6.030321,-9.443667,8.570267,-2.754582,-4.087594,-3.402272,-1.573076,2.149571,0.340124,-4.055351,-7.534662,-2.307459,-7.273673,-3.504185,0.838424,8.709588,-3.012797,-0.734256,1.766997,-3.555264,-6.090719,-9.199507,-2.818779,9.813052,-6.240356,-3.201814,-1.467986,3.802354,4.012171,2.114261,5.649007,-0.315213,-4.124641,8.553998,-8.074718,-4.333818,1.681930,1.868320,-1.888456,1.981595,-9.698578,5.352146,0.284571,6.997776,-6.885030,2.838782,-5.662685,-6.307249,-6.544741,-9.189458,5.354248,7.343194,-7.063704,-5.053764,5.377576,4.372890,5.545973,5.364045,-7.869686,3.201719,6.056400,-3.605455,7.231150,-5.402524,-8.395845,-5.858777,1.576476,-2.797282,-0.868026,-3.846689,5.967471,8.842372,5.957952,9.251176,1.176962,-0.919288,6.666742,-8.613148,2.985892,-4.015123,-5.176157,7.551169,-6.874272,4.315395,-9.433787,-7.558230,8.257397,8.478872,-1.540281,-3.623613,8.843496,-1.436494,1.909028,1.730900,-5.302107,8.623709,-2.903924,-4.988391,-5.909571,9.507992,-5.969276,-6.356373,8.838019,-2.611944,-3.254185,-4.664022,6.640718,-6.024849,7.590789,-9.270539,1.087816,-1.315416,-2.038976,-3.781065,-1.385148,-0.802382,-7.411111,6.820672,-2.100495,9.117771,-5.996353,-0.362887,2.075277,0.819608,4.955526,-9.778821,8.883365,-7.924917,9.057251,-7.539702,0.209188,-7.766083,-3.537633,4.142046,5.929267,6.900073,-4.697251,-8.432709,3.559970,3.331818,1.651785,3.781524,-6.125691,-7.049984,8.853515,-4.064406,8.478009,-3.095497,-7.523235,-0.578842,-2.470947,1.003787,-8.698778,-5.408113,1.117407,-1.541376,8.594954,5.201288,3.188305,-9.884885,9.793559,3.382521,5.500146,-4.683326,-4.195058,-4.338798,-1.377556,9.747249,7.647952,-4.497063,7.823681,7.230350,0.338482,8.814129,-4.906815,1.834482,-7.014240,5.547040,-7.197755,3.998370,-2.996359,9.514526,7.320346,2.707185,1.492290,-3.197738,-0.322026,1.766024,-6.596545,4.411950,-7.022781,-1.940107,5.485778,8.914354,7.114444,-0.729493,-8.720633,0.068404,5.780144,-2.327053,-0.056801,2.703532,-2.149045,-6.145445,2.420592,8.666266,-0.459259,-4.113914,6.869048,7.488104,-6.714700,5.105433,-6.040874,1.881900,1.152971,-6.736560,-7.096870,5.711324,-5.727781,1.369322,4.815352,-9.992922,4.745733,8.070913,-1.256317,2.231950,6.827936,1.208165,0.581676,8.506876,-7.504822,0.963129,3.516535,0.190278,-3.128662,-0.464829,9.436590,-1.727749,0.635084,-1.365114,-2.014776,1.879822,-5.787342,9.267911,5.253219,-2.772573,-4.285637,-1.769116,-5.963436,-9.241916,-7.528520,-0.184402,6.676212,-9.103910,8.642737,-6.704546,1.006438,4.980993,-4.052870,4.329683,7.352442,9.318719,8.103374,8.065529,6.891026,1.501672,-9.715062,9.303123,-4.674351,3.285921,-7.968576,7.551673,6.429636,6.627356,-0.774095,7.735471,1.466156,7.882851,-6.985512,-3.011471,-9.139197,3.720997,-1.564956,-6.771287,7.763699,-4.635604,3.953458,8.685959,-5.267382,-7.865349,2.242273,-9.827675,-6.043705,-6.097420,-7.438261,-0.422040,-4.913739,-9.352670,7.674939,0.863347,-7.475978,-7.806007,1.764615,-6.809996,7.581883,-3.556027,-0.585767,7.681266,8.655507,9.051895,-6.348117,-4.095421,9.381952,8.326954,-0.406641,9.442644,-7.467397,-2.746341,3.220517,0.239100,-7.958393,-4.235786,-8.666538,0.058229,1.139738,-2.280525,5.819179,-6.833514,0.580134,1.012688,-2.766146,-1.477060,-0.410745,-3.384934,9.732874,-5.642499,-8.226581,-4.339604,-5.291492,-3.783329,-3.174575,-9.728068,6.852832,-5.462920,-4.588405,-6.397782,6.892395,-3.688390,-2.738340,0.716945,-4.425556,1.302892,-1.657097,-2.883147,8.497466,-6.612909,1.885629,2.513209,1.747674,1.476185,3.695519,-7.971827,-3.821191,4.032161,-3.044522,-7.986174,-8.411635,9.716442,9.212862,-9.788788,-1.268826,-3.446877,5.665859,-2.532407,2.871209,-0.853041,-7.145057,1.953330,5.039160,2.507238,-4.605474,5.604022,8.246337,3.473378,-8.196805,3.260030,9.345432,-1.590567,-8.123800,3.435863,-9.566568,-3.091773,4.949477,2.872678,-4.207651,-6.093214,-1.804284,-7.104193,-0.954586,-3.767610,1.877713,1.334604,0.929015,5.927975,-3.548276,8.946457,-9.860912,1.435117,-8.795764,7.243975,9.611868,4.307417,1.952559,0.585447,1.788745,-6.343291,-8.935058,3.295696,1.370848,4.841536,-4.127948,-8.116495,-9.737017,-1.939286,-1.316721,-9.196100,3.541864,6.593076,6.182162,-3.682948,-0.745029,5.860102,-2.503362,-1.169839,6.017857,7.985618,-4.356010,-1.919589,-3.970618,3.588903,-1.471385,-3.568863,4.516504,-2.106680,0.419495,-6.959808,1.586895,-3.732632,-7.125178,8.852022,-4.386570,1.973384,-5.070283,2.021149,-2.641024,5.816246,-1.092261,-0.911168,1.269300,-6.457107,3.202716,-4.237349,-8.467288,-2.938541,3.005819,-5.748554,1.264710,7.233641,-7.324663,-0.403046,0.378868,9.312730,3.396193,-6.128915,8.736144,7.033702,7.632640,6.088310,-9.796739,-8.537931,-3.550872,5.507707,8.589533,1.392155,-2.091439,-5.514264,-9.070695,9.807848,-1.457810,-0.980791,3.514073,-3.621630,-9.823326,-6.306896,-5.118040,-2.993380,-8.539809,-2.218682,-7.363708,8.614038,2.521969,7.340474,1.360492,4.286212,-5.671880,4.121149,-3.252957,-0.075831,-3.255410,6.089743,4.089531,5.366191,-9.921424,8.067707,3.997008,6.813980,4.946091,-1.205450,6.542339,-0.022066,-5.634076,4.859287,5.069964,5.216173,2.787291,-4.147141,-8.838963,-9.620730,2.414276,-1.518911,-6.876077,9.541276,-0.638618,-1.089893,-8.304222,6.572724,5.546517,1.840364,-0.110294,-1.641797,4.993706,-4.634191,-5.236286,-3.896754,5.993083,-8.328622,-0.894659,9.831213,-9.576798,8.878182,-4.274594,0.565331,8.159554,-5.369705,4.524719,1.055918,-8.883033,-1.496356,-9.139521,-5.906483,5.648534,3.614415,9.912866,-5.222281,4.787446,-9.377605,-2.542713,0.508930,-4.005201,0.462712,-6.845467,-6.574416,6.281972,8.600160,-1.217291,6.494488,-8.481645,8.811137,3.487757,0.339044,2.744455,-1.425548,5.088890,-8.317970,7.706779,8.853572,-0.195919,-3.009312,6.563590,-2.650857,-8.932133,8.227749,-6.528350,-7.997707,6.924887,-0.096365,6.695625,-6.255740,-3.468650,-5.099561,8.993759,2.714211,7.996932,2.333242,0.144840,-7.927127,4.879349,8.152500,5.770951,0.572546,4.865307,8.709474,-4.937378,-2.114040,-2.558401,-1.135788,-2.572655,-5.548065,-4.149503,-1.996327,9.151536,8.092556,7.995330,-5.979444,-0.296909,7.986827,-9.972034,-7.561903,-8.941032,4.126459,9.100754,-0.840580,-2.804750,2.413831,-3.908918,-1.933152,8.275234,-5.916903,-9.063830,7.617804,-0.045495,8.608977,6.362549,0.386405,-1.454337,2.248754,0.503950,2.197975,-8.373022,-8.289568,5.725283,-0.778515,-4.435291,9.652118,0.940478,2.320371,7.727053,-1.225145,-7.633752,-7.261613,5.021927,-8.039796,-8.570525,-4.546121,-1.249770,2.184324,8.646510,-0.907452,7.983376,1.722518,-4.074907,-5.529607,0.893657,2.648680,0.381206,-8.237986,1.874711,3.785197,-8.692492,-7.393518,-0.462466,-4.446001,6.639138,1.592483,-9.113407,4.992762,7.466236,-0.312756,3.908729,-6.328900,-1.243799,5.950565,9.217587,5.688405,-4.003832,-2.693940,9.919044,-6.938398,-7.160115,0.290351,-1.855020,0.632156,2.667380,-0.108219,5.998663,0.174648,2.137798,3.087463,7.123817,5.680950,-1.153511,-7.831623,-6.071370,-2.570208,-6.865312,-7.917226,4.783077,-3.010158,0.398608,9.811994,0.728889,-5.751113,9.985319,3.575288,-1.063450,-7.210996,-1.648409,0.790637,7.698198,7.421349,7.455382,8.746205,-3.371797,8.934294,-8.449909,-2.398236,1.816457,8.962617,2.011731,3.721091,0.021855,-3.404270,-0.688303,-5.743053,-4.973009,0.137366,8.087745,-6.915049,-5.652374,-0.980415,-2.940175,-9.558430,5.765194,-3.640968,-6.138316,4.524886,0.312150,-4.838052,4.693533,3.863193,-1.205336,2.558045,7.219245,8.551276,-2.872764,7.822477,9.647138,-9.628150,5.154555,9.001466,6.818908,0.882077,-0.609996,-9.044752,-3.277017,7.051288,1.442352,6.522462,-4.158795,-9.087271,-8.685248,6.314891,-4.644071,-2.674451,-5.946700,2.841482,-4.771820,-8.270113,-3.359327,-6.297108,0.708056,-9.866169,5.070852,9.855048,-1.925624,-8.939582,7.258255,-0.660263,5.128973,8.976244,-9.875855,7.972284,2.405682,-9.870522,0.184844,8.052567,-3.433295,6.158045,3.841348,-9.092515,-7.183501,-5.153021,-9.429430,4.054727,5.349786,-3.620034,-4.300556,5.813157,6.251542,4.462196,-4.261151,2.435522,-3.614925,-3.981720,-5.175951,-5.023930,1.853893,-2.036895,2.140361,-1.957050,3.163289,0.176050,-3.195817,3.114416,-3.079041,-9.481578,6.946123,1.975086,-5.889428,8.529003,-4.928016,-5.792873,-9.193074,-9.566637,-1.075198,0.532428,1.735223,5.566404,3.669026,5.320652,-1.427977,-0.703580,-7.724400,1.662740,-8.973139,6.360101,-0.335058,-6.987897,-7.573713,4.519605,2.359680,-6.534833,8.753060,5.185901,0.306130,-4.979939,-4.749020,5.751652,-4.452577,-1.931661,-7.865423,-7.531780,7.249800,7.662923,1.381920,-1.266054,3.597692,6.552012,5.593132,7.571889,9.088163,-5.714503,2.143365,-6.635214,-5.628385,-0.920712,-9.578411,-8.898195,4.351307,-5.411981,-0.197093,-0.275365,7.719052,-4.390669,-5.218077,7.270621,8.843304,6.777693,-3.732967,-9.144586,-4.068043,8.028512,4.731004,-3.333441,3.472602,9.802674,-6.330651,-0.947585,6.344719,-0.845712,-4.923021,-4.751927,4.344071,-6.218980,6.481540,-9.142827,3.771998,0.475307,4.730065,-6.102956,-8.003573,-6.397586,6.773456,-7.323261,8.545104,-8.648753,8.356383,7.903167,-6.951198,-3.399399,3.264169,-4.716330,-9.008607,7.890977,6.932418,-0.941081,-3.648376,-0.222618,8.729714,-9.942934,4.644912,1.328427,4.661596,2.202991,-2.821619,-7.715516,6.121991,1.616400,-3.636025,3.441919,-9.259069,6.577215,7.382906,-9.997243,-8.436275,7.192827,4.321084,-1.307521,-1.967611,-3.934210,1.830789,-9.979085,8.538432,-7.679150,-7.403562,-2.183656,-3.772295,1.825582,1.833100,-3.848502,0.979489,-1.465810,-1.067064,8.725514,-2.652402,-8.113844,-7.387089,-4.438492,-5.298263,0.637221,1.931845,4.848761,4.904614,4.302445,-4.836176,6.907641,0.602914,-5.237571,-5.816013,-8.546809,5.145053,0.830011,5.737617,-4.716221,-8.866993,8.756319,3.812052,6.457951,9.599092,5.977635,6.895578,5.113373,-4.906895,-7.727645,-7.255633,-1.272512,0.213240,4.541230,7.978618,-2.622548,-9.297241,7.076784,-7.113987,-3.316770,2.972886,2.929855,-1.544012,-7.347681,-8.229618,-3.165223,8.663704,2.942327,-3.022364,-5.589437,-8.278117,5.099050,-8.768572,-2.993599,-9.978447,-3.288733,-1.011219,-1.543468,3.414749,-6.942041,4.478448,-0.246883,5.245844,-3.879846,-1.204325,2.819434,2.595866,9.465666,-8.624426,4.365322,0.778993,-2.733531,4.196385,-6.524782,3.399292,3.543071,5.944864,-5.525807,9.834426,-0.900638,6.141806,-3.697312,1.430879,-9.582325,0.383216,-7.628830,3.608945,-8.971608,4.576057,0.102349,0.195418,3.533400,-2.021409,3.252881,-2.199026,-1.840652,-0.273423,7.268908,-7.089644,9.137085,8.062875,-2.011598,-7.407567,2.760900,-5.874325,6.496097,5.978156,-4.895043,-3.565734,3.397415,-5.337650,-2.110136,-9.603227,-3.753242,3.324598,-4.963320,4.024679,1.560411,-5.858008,0.048767,-3.901743,-1.113753,6.533588,1.278487,8.596949,6.736830,-9.299803,-4.990209,6.406002,-7.285463,-8.002968,7.524838,0.823695,8.284646,7.787752,-1.496606,7.131963,-9.361658,-2.557320,-5.743337,-7.507817,7.188967,7.423342,-0.720806,-5.869449,7.990658,0.600331,-5.270088,-2.831036,-1.746203,-6.064559,5.865223,-7.483125,-6.488246,2.267559,-6.664031,-2.319059,8.432288,1.861113,-6.258386,-0.521650,-1.943721,-0.255379,-9.734955,-4.185433,5.310993,-6.232162,9.588496,-3.257341,8.569248,-2.387352,5.824668,3.807603,2.700721,-3.806675,-6.651605,7.494503,9.061362,5.600513,-1.933036,-4.403620,-2.888871,-2.150045,1.941639,3.971385,0.851341,-9.736493,3.166815,3.522434,-5.940090,-5.791848,-7.925560,6.449229,-3.174019,6.481579,8.364627,-4.609184,-4.997596,0.124010,3.406470,-3.980004,-6.032256,3.656118,-6.613442,-1.507424,0.519251,7.428864,8.492758,4.418616,8.701020,-2.216739,-9.943738,-4.713731,-9.666778,2.105775,8.581901,-0.854387,-2.851732,1.744984,-6.490155,-2.483797,-4.551737,1.947336,-1.124828,3.337015,4.978137,-1.399307,-3.291383,2.173477,-3.535738,-0.356132,-8.063036,-8.794565,8.804126,-5.587071,6.264221,8.248996,-7.037738,5.384615,3.653275,5.731902,5.530849,-2.271974,-1.301990,-8.266468,-0.476491,-1.241182,0.800864,-0.948422,-0.465827,-0.595601,8.098112,-6.805958,-4.038628,-6.899605,-8.010717,-1.791821,-3.898337,-3.014128,-4.031435,3.085281,3.047579,-0.376241,-4.805914,1.749861,8.586896,2.875341,4.339166,-1.880398,8.201085,6.611606,-9.307600,8.543730,5.438496,-0.316720,-5.763743,-9.171632,2.506250,-6.949676,2.420436,8.831148,3.523954,4.516916,-3.078762,-6.264078,3.122304,2.747563,-5.815509,-3.649510,-9.182744,4.812214,-8.639913,5.432071,-9.723677,-0.663135,9.383205,-9.300101,-1.425543,-2.377315,-8.313102,-7.451520,-8.638635,4.171870,5.700354,-5.819209,-8.941682,-8.283665,-9.584427,5.188785,-1.736586,-3.413730,5.190508,-9.905111,6.393125,-2.567616,-2.226939,8.804486,-6.941199,6.340246,-2.771555,-2.673171,2.724843,2.295098,-8.686473,3.333261,-7.961527,-0.528225,-6.893605,2.251731,7.708752,4.750338,8.528620,2.455684,-9.760651,0.751778,-5.319824,3.709390,-1.011378,6.983045,4.704879,7.453822,2.172932,6.438189,2.391713,9.703538,-5.918564,-1.835839,8.973729,-6.794833,-7.011691,-2.138476,9.306242,-6.975294,-0.879581,-1.915519,-5.960743,-2.859372,1.196014,-7.354563,-2.844190,-7.357039,-6.693779,-9.337407,-7.378872,4.275831,-1.488016,9.182038,-0.895150,-0.245464,-1.198239,-4.811263,-7.774807,-2.726352,9.503219,-9.804783,-8.275981,-7.137765,2.751508,-4.327982,6.577970,-6.306227,6.559751,6.491954,-4.966730,-4.101198,-9.990824,9.188919,1.816642,8.974246,-7.370335,9.823410,-3.105037,-7.160839,-8.249497,4.757600,-7.597401,-9.258543,3.986755,9.533844,4.168586,-0.112410,1.887869,-6.570887,4.468666,9.646785,-8.063812,-8.516353,-5.676934,-9.975102,3.041330,5.937902,-5.897380,0.166285,5.756729,5.677888,8.821364,0.050059,6.886258,3.903351,8.272873,5.434513,6.804251,-8.333522,-0.006369,9.142199,-9.476312,8.054467,-0.804030,-4.884999,-1.703090,-6.804092,-0.388842,-6.310034,7.677101,-9.871566,-9.332554,-4.476767,-1.616673,3.245867,-8.636215,-0.271988,4.785442,0.787079,9.595370,-8.079412,3.181252,3.354842,-0.853913,3.035005,1.324577,-3.563999,1.671275,-7.498841,5.798787,-8.082561,-3.188089,-3.843281,1.610706,2.993463,2.506162,-7.000702,-0.161096,-9.824306,7.449298,-4.887388,-9.509255,-6.334979,-7.204216,8.120407,-9.894763,0.387210,-1.707469,5.287807,8.218750,-9.369593,-0.070499,6.960502,-6.416262,3.538169,4.890956,2.266441,-1.467472,-5.775199,-9.703384,-1.831855,5.245711,2.974928,9.408889,5.167248,1.152377,5.042227,-1.853540,-4.808008,2.568150,-6.345256,6.614278,-7.424951,9.334982,-7.096799,-4.974800,8.634008,-6.955180,5.879974,7.219251,-9.254644,6.854454,-3.850514,-4.783189,-7.141425,-6.883990,1.813906,-4.503616,4.726917,-7.480602,7.896415,-6.886392,-0.915794,2.795059,-8.529543,3.410951,8.522633,-5.756842,-7.480188,-9.133468,-5.577632,-4.679411,7.265967,2.775533,-6.191832,-5.130193,-4.594123,-5.819938,-7.315868,5.992605,-4.060455,7.423272,7.163635,2.231486,0.983384,-8.931715,-7.277503,8.847013,-4.532964,-9.386038,-8.370738,-5.394517,6.351038,6.919528,5.958319,-9.553628,3.975101,6.937642,-5.552704,2.721266,6.042386,0.642489,-1.318878,7.359701,-2.719062,2.097327,-2.260932,7.304787,4.732615,9.854475,9.187364,-8.663021,-1.486579,7.508961,4.148216,-2.525670,7.273523,-2.606394,-5.531393,-7.694930,-2.236506,2.368809,8.348292,-2.922003,5.211537,4.855046,-9.519382,-5.288093,-4.236150,1.033201,-5.397785,-7.734998,2.163874,6.926756,-4.323097,-2.970738,6.360857,6.154191,4.570813,8.901746,-2.606894,5.830982,3.649500,8.232930,-8.335712,3.102342,-0.951821,-2.579141,-4.184280,8.633335,0.561204,9.557609,0.506958,8.407893,2.614721,0.883445,-6.110189,-9.319513,-4.348487,4.542762,-1.130310,4.454000,-6.882936,-2.825813,6.686957,9.589787,-9.446317,-9.501367,8.499195,-6.039582,-3.522125,-4.698569,-7.383015,-6.584284,-6.766330,0.990675,-3.614159,3.638531,-1.739671,-0.091422,6.547807,-4.071852,-7.980390,8.184406,6.873167,-1.719262,-9.477893,-7.571686,7.258215,5.551929,-6.327120,-3.297814,-1.775607,6.174589,-6.071553,-7.725982,3.165640,0.623445,0.798175,1.717915,-9.415643,9.189998,7.780921,0.876011,-2.477670,-0.307285,-1.757486,-4.375862,8.594070,0.332494,3.605975,5.976618,6.987739,-0.802276,-2.057886,0.118178,-7.901431,4.333840,-7.183543,-8.559071,7.114843,5.910147,-2.481157,-0.641838,9.259787,7.887034,-8.757809,9.112131,2.690037,-3.793247,8.627239,-0.250158,-4.891641,0.781768,-1.746624,-0.923366,2.476364,4.871158,5.905763,4.369681,-9.265860,8.960805,7.100794,-8.323887,-6.328666,-4.136204,-3.125208,0.447145,-0.128051,9.733268,8.845108,7.760761,4.776401,-9.921319,-2.498436,2.402901,-7.460787,7.016499,0.183832,-0.381048,9.712080,9.223830,8.322359,-7.812028,-4.625593,-2.456941,6.256811,-3.449692,1.227491,3.471652,-5.740639,-4.563998,3.218615,-0.084634,8.966523,9.248184,-1.585411,-0.846653,8.234692,3.370023,-2.608714,2.903782,1.461967,-3.675934,-2.996342,1.966453,-8.845126,0.238967,5.581252,-6.446669,-4.246919,5.484223,-3.544064,-9.669484,5.109472,8.850815,-8.023223,6.113872,-7.857839,-1.606611,-0.154802,4.266360,8.348514,-7.768895,4.069252,7.261724,-7.522633,-8.169363,-2.009070,6.133044,-0.409412,9.803604,1.805617,5.244717,-3.713547,4.909663,8.507582,3.051604,8.530343,1.060613,-5.942946,6.620518,-1.078023,6.340343,-7.237011,-1.087510,-8.200032,9.592969,-7.948123,1.238927,-6.458728,1.206627,-9.803052,-1.385175,2.867765,-1.332800,-5.235038,-3.348659,6.866957,1.938403,-8.050100,-1.907718,3.073448,3.522264,-5.421419,-5.725269,0.693235,-1.825458,-6.872593,3.697894,4.066220,1.943235,5.815926,-4.654808,-8.656690,1.285758,6.327327,7.468332,7.659146,-9.362407,2.720831,7.467410,9.515585,-2.638483,-6.054409,7.943124,3.807874,-6.273499,-8.722852,4.876670,-2.205860,-1.289903,1.682674,3.079913,-2.220720,-4.360930,-8.616315,-4.982179,-3.571173,-2.693976,-2.865366,-6.170917,-6.949319,8.463593,8.511631,9.936350,1.620265,6.797623,8.944045,3.877380,-3.856639,-2.057142,0.972168,-6.382183,6.185125,3.849660,-4.560708,-0.215948,-7.874655,-1.202260,-4.922174,5.683683,9.533132,-4.432790,2.120460,-9.991800,-8.817934,1.324752,3.772988,9.205893,-7.380765,-1.812607,-8.043273,3.185563,-1.149342,-1.975582,-2.576372,-0.313884,-6.363234,-4.432635,7.905375,0.302414,4.654989,1.086296,9.027394,-5.605245,3.790399,-5.491849,3.769414,-9.827773,9.087978,-0.945613,1.630953,1.375635,-3.083993,0.492836,-4.630383,7.012388,5.805106,-0.903393,7.925112,-5.018289,-1.078410,-8.626925,0.694952,2.599337,8.929392,-1.329038,9.124554,-1.737191,6.393032,6.312209,-4.491189,-0.240732,5.547539,-0.999707,7.761415,-7.757957,-7.272471,4.787348,7.897458,-5.415349,-4.578062,4.496633,0.638173,2.451163,-9.349561,-9.652890,3.965360,-5.176388,-2.710593,3.862310,-9.038515,2.261911,-9.964957,-4.955513,0.109878,-2.112238,3.024698,6.833352,3.989003,5.028031,0.459907,2.425639,-2.621200,-0.255859,-6.159943,-5.330226,9.577179,8.245199,-6.550475,8.874848,8.402939,-8.661273,-0.002358,6.397999,-9.979249,7.260703,-4.634031,5.438504,-5.787325,4.255695,3.093021,2.990722,1.479505,9.658268,-6.139234,-1.062878,-6.487697,-7.249371,-3.097825,5.302306,6.691366,3.408953,1.079070,-6.923585,-6.618689,-0.479843,-4.366580,-0.938983,0.186124,3.505811,-4.821485,9.818988,-4.551115,8.787813,7.445784,-3.796455,7.050722,-3.836329,-4.460756,9.457259,4.499383,-8.853741,3.563396,7.838339,-7.120032,2.728320,-7.232485,-4.499285,-6.344082,-8.144790,-5.145736,-6.073220,-9.967121,-9.391912,-4.661965,5.610886,0.574316,7.650072,-6.751618,3.317551,5.174732,3.995298,4.842363,7.822475,-7.507684,5.774545,-9.774970,-1.294526,6.576425,7.206145,-1.350226,4.883238,-8.307273,8.047665,8.335619,-8.726556,7.956869,7.075190,3.012666,-0.566525,-9.898533,-9.029635,-7.325414,0.455304,2.333508,0.050908,6.923949,9.967344,2.097034,-7.219488,-4.791620,7.175539,-3.861994,-7.086430,4.840190,6.295687,3.650292,-8.603599,9.021949,0.841283,-7.014055,-1.113618,3.091609,-4.791641,-7.438510,9.806552,9.583425,-5.691897,7.896245,1.413572,-3.155162,-5.146047,-7.182036,3.514451,-4.715853,-7.178961,9.880753,-7.655571,-5.908004,8.197676,5.993370,3.597138,7.437841,8.566377,5.807213,-1.245446,8.767615,1.615928,8.239496,0.104534,9.328703,3.452446,5.340463,7.373031,-5.601455,-4.882704,2.175743,-1.772655,-2.461947,-5.132405,-3.775030,2.150143,5.585570,5.160586,1.447854,9.686366,-1.492194,4.141396,-2.893071,1.151058,1.581472,5.872019,-6.809827,6.262237,2.740064,-8.182499,-2.086425,1.636044,-5.243714,7.894248,-0.092064,-4.331957,8.372539,-7.561976,-1.755746,-6.765295,7.947399,-1.990909,5.658422,-7.928343,7.343693,-7.024139,-9.196826,-5.700321,-6.646703,-0.434118,-6.371939,6.121087,-5.597289,0.987549,5.945725,-5.415341,0.557013,-1.664978,7.789443,4.872026,1.861694,-2.604143,-5.844164,-8.783367,-8.113023,6.863922,4.048269,-4.737626,-6.605234,-1.644834,4.004488,-7.318192,-5.164055,1.400577,-7.078495,-2.124956,-2.605380,3.107191,2.507801,8.664556,7.265606,-5.493148,0.460458,-0.267727,5.140875,-0.657142,-2.521787,4.718697,7.497352,-7.527699,-6.233612,-4.214105,3.959783,1.083411,8.207053,4.685679,8.873606,-2.441275,-9.069165,-2.503959,8.923907,9.595050,6.532435,-1.371253,8.425901,-5.669383,-3.962366,0.725858,2.248356,-1.905785,3.529077,2.892102,-2.135879,-0.872288,-9.218698,-9.868447,1.459472,9.721089,-5.331271,1.367885,-9.727242,9.677300,-2.487126,1.041899,9.638738,7.935541,9.332217,0.801173,-8.579079,-4.737093,-6.739651,-0.231397,-7.677673,8.904337,-7.022370,0.162275,-7.702946,0.258157,9.506270,-1.521882,-3.648118,8.823648,-9.584610,8.296423,-4.343399,-5.302836,-0.680571,-5.462133,-3.816633,-1.427868,4.454747,-3.548847,-0.496376,-8.458722,-7.989612,7.385290,-3.746383,-7.731027,8.833456,1.473370,3.689499,3.647356,4.855601,2.481133,5.839264,-5.783100,5.983523,-5.444962,-4.813526,3.870539,-7.642936,5.406156,0.471567,6.057492,-7.006925,7.566442,-7.690038,4.277954,-5.953674,-0.602123,-5.940116,-7.066675,4.560863,-1.796763,-1.115146,-1.138467,-9.422376,1.447424,0.767314,-3.226946,-4.328834,1.747448,-8.905321,-0.737859,0.941813,-9.942713,3.029069,8.105518,-6.177612,-1.570237,7.621376,7.766988,-2.864895,-6.617600,3.078314,1.499357,-2.429037,6.798058,-2.756692,4.441022,-6.829749,0.605801,2.446246,-2.322986,-6.672157,-8.419647,7.376716,3.974688,-0.763274,5.987767,0.689500,8.000904,5.172688,-6.732711,-6.560472,-6.791484,-4.865899,-7.857630,-6.874439,1.703238,0.501790,7.954794,1.735239,2.388959,-8.385723,6.953384,9.651915], dtype = "float32")#candidate|6081|(2400,)|const|float32
call_6079 = relay.TupleGetItem(func_2462_call(relay.reshape(const_6080.astype('float32'), []), relay.reshape(const_6081.astype('float32'), [2400,]), ), 2)
call_6082 = relay.TupleGetItem(func_2466_call(relay.reshape(const_6080.astype('float32'), []), relay.reshape(const_6081.astype('float32'), [2400,]), ), 2)
var_6085 = relay.var("var_6085", dtype = "uint16", shape = (3, 4, 15))#candidate|6085|(3, 4, 15)|var|uint16
bop_6086 = relay.bitwise_and(bop_6069.astype('int8'), relay.reshape(var_6085.astype('int8'), relay.shape_of(bop_6069))) # shape=(3, 4, 15)
bop_6089 = relay.bitwise_and(bop_6072.astype('int8'), relay.reshape(var_6085.astype('int8'), relay.shape_of(bop_6072))) # shape=(3, 4, 15)
output = relay.Tuple([call_6077,call_6079,const_6080,const_6081,bop_6086,])
output2 = relay.Tuple([call_6078,call_6082,const_6080,const_6081,bop_6089,])
func_6125 = relay.Function([var_6085,], output)
mod['func_6125'] = func_6125
mod = relay.transform.InferType()(mod)
mutated_mod['func_6125'] = func_6125
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6126 = relay.var("var_6126", dtype = "uint16", shape = (3, 4, 15))#candidate|6126|(3, 4, 15)|var|uint16
func_6125_call = mutated_mod.get_global_var('func_6125')
call_6127 = func_6125_call(var_6126)
output = call_6127
func_6128 = relay.Function([var_6126], output)
mutated_mod['func_6128'] = func_6128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6049_call = mod.get_global_var('func_6049')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_6162 = relay.TupleGetItem(func_6049_call(), 0)
call_6163 = relay.TupleGetItem(func_6050_call(), 0)
output = call_6162
output2 = call_6163
func_6173 = relay.Function([], output)
mod['func_6173'] = func_6173
mod = relay.transform.InferType()(mod)
mutated_mod['func_6173'] = func_6173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6173_call = mutated_mod.get_global_var('func_6173')
call_6174 = func_6173_call()
output = call_6174
func_6175 = relay.Function([], output)
mutated_mod['func_6175'] = func_6175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5662_call = mod.get_global_var('func_5662')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_6184 = func_5662_call()
call_6185 = func_5662_call()
output = call_6184
output2 = call_6185
func_6186 = relay.Function([], output)
mod['func_6186'] = func_6186
mod = relay.transform.InferType()(mod)
mutated_mod['func_6186'] = func_6186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6186_call = mutated_mod.get_global_var('func_6186')
call_6187 = func_6186_call()
output = call_6187
func_6188 = relay.Function([], output)
mutated_mod['func_6188'] = func_6188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_6204 = func_5541_call()
call_6205 = func_5541_call()
uop_6229 = relay.erf(call_6204.astype('float32')) # shape=(3, 1, 1)
uop_6231 = relay.erf(call_6205.astype('float32')) # shape=(3, 1, 1)
func_2246_call = mod.get_global_var('func_2246')
func_2249_call = mutated_mod.get_global_var('func_2249')
var_6233 = relay.var("var_6233", dtype = "uint32", shape = (1092,))#candidate|6233|(1092,)|var|uint32
call_6232 = func_2246_call(relay.reshape(var_6233.astype('uint32'), [6, 14, 13]), relay.reshape(var_6233.astype('uint32'), [6, 14, 13]), )
call_6234 = func_2246_call(relay.reshape(var_6233.astype('uint32'), [6, 14, 13]), relay.reshape(var_6233.astype('uint32'), [6, 14, 13]), )
output = relay.Tuple([uop_6229,call_6232,var_6233,])
output2 = relay.Tuple([uop_6231,call_6234,var_6233,])
func_6240 = relay.Function([var_6233,], output)
mod['func_6240'] = func_6240
mod = relay.transform.InferType()(mod)
var_6241 = relay.var("var_6241", dtype = "uint32", shape = (1092,))#candidate|6241|(1092,)|var|uint32
output = func_6240(var_6241)
func_6242 = relay.Function([var_6241], output)
mutated_mod['func_6242'] = func_6242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6173_call = mod.get_global_var('func_6173')
func_6175_call = mutated_mod.get_global_var('func_6175')
call_6329 = func_6173_call()
call_6330 = func_6173_call()
var_6335 = relay.var("var_6335", dtype = "float64", shape = (3, 11, 6))#candidate|6335|(3, 11, 6)|var|float64
bop_6336 = relay.subtract(call_6329.astype('uint16'), var_6335.astype('uint16')) # shape=(3, 11, 6)
bop_6339 = relay.subtract(call_6330.astype('uint16'), var_6335.astype('uint16')) # shape=(3, 11, 6)
uop_6340 = relay.sqrt(bop_6336.astype('float64')) # shape=(3, 11, 6)
uop_6342 = relay.sqrt(bop_6339.astype('float64')) # shape=(3, 11, 6)
bop_6345 = relay.not_equal(var_6335.astype('bool'), relay.reshape(uop_6340.astype('bool'), relay.shape_of(var_6335))) # shape=(3, 11, 6)
bop_6348 = relay.not_equal(var_6335.astype('bool'), relay.reshape(uop_6342.astype('bool'), relay.shape_of(var_6335))) # shape=(3, 11, 6)
func_1890_call = mod.get_global_var('func_1890')
func_1893_call = mutated_mod.get_global_var('func_1893')
var_6375 = relay.var("var_6375", dtype = "float32", shape = (156,))#candidate|6375|(156,)|var|float32
const_6376 = relay.const([4,5,7,-9,-7,8,-10,-3,3,10,-4,-6,-1,-5,2,2,4,-9,1,8,10,4,-8,2,4,7,-8,5,3,-4,-10,1,6,-6,8,4,10,10,4,-3,4,8,-2,-1,3,-10,-4,10,2,4,2,8,6,1,-1,-10,-6,-7,3,3,-5,-2,5,6,8,7,-10,1,4,9,8,-10,-10,-5,9,1,-3,3,-5,-5,-1,-2,-9,8,-4,-1,-6,1,10,-1,5,2,-4,-8,-4,-1,-7,-7,-5,10,-3,6,-3,-7,2,-1,1,5,-8,4,5,-10,-8,9,-3,-5,-1,8,-7,-7,7,5,3,3,2,7,3,-2,-4,6,-3,6,1,7,2,-6,6,-5,1,4,5,3,-7,-3,-7,10,10,-3,9,1,-6,10,-10,2,-5,7,8,-10,-8,-7,1,-4,-3,-4,-8,6,5,9,3,9,8,9,-7,-10,-1,-9,-4,5,-3,-10,5,-9,3,6,-7,-3,-10,-10,1,-3,7,-7,8,-8,3,3,5,-10,8,-4,10,2,10,-10,-2,-5,4,7,6,-2,3,-6,-5,-7,-4,-2,10,6,-5,-3,9,3,-2,7,8,-6,5,1,8,-5,-1,-7,-8,-3,1,-10,-5,-6,-7,-6,2,-6,-4,7,7,4,-6,10,-6,-8,8,9,-5,4,-10,7,-2,7,1,8,3,-7,5,-4,8,-1,-4,-4,7,-10,-10,-9,1,-8,9,2,10,-2,5,-7,9,-3,-10,1,7,-4,-8,9,10,-2,3,-10,3,7,9,-5,2,3,-9,9,6,2,8,-3,-9,5,9,5,9,-4,-6,9,8,-7,-6,2,-2,6,-8,-8,4,-10,-1,8,7,-8,-10,-8,-1,-7,3,-1,-8,7,-7,-6,8,-5,1,1,-7,8,8,-8,-2,7,8,4,-8,3,-6,6,3,5,7,1,-6,1,-6,4,8,7,1,10,-10,5,-10,-2,-4,-8,-2,7,7,-2,1,-2,9,-2,1,-2,-5,-9,-9,1,-9,-8,-7,8,5,8,10,-4,1,1,-10,-7,1,-1,8,-6,10,-5,-1,10,7,-3,-9,-3,-2,4,-9,-6,-6,3,-8,8,-4,-4,8,-2,-1,-9,3,1,-8,7,6,10,-2,-6,1,-10,-7,-10,10,1,9,2,-3,9,-9,-3,-2,9,-3,8,-8,-8,5,-3,2,-6,3,-4,2,2,-2,8,-5,9,3,1,-6,-8,7,-5,5,-3,-7,7,-2,1,-5,7,-8,-7,2,4,-6,-8,-4,-3,2,9,3,-9,6,-9,2,10,-10,3,-6,-9,-9,-7,-8,4,-6,-9,1,-4,-1,10,8,-3,1,-10,3,9,-6,7,-7,-8,-3,2,7,3,-10,9,-4,-6,-8,-2,-8,3,9,2,8,-1,-6,-7,10,3,4,5,4,-3,-10,3,9,-5,-5,-6,-6,-6,-9,-7,4,8,2,5,7,-10,6,6,-1,-4,10,9,-9,10,7,-9,-7,-8,10,-9,-5,3,-4,9,-2,2,-4,-7,8,-1,7,8,4,-5,3,-1,-2,-2,-3,-4,3,-6,8,8,-3,3,-8,3,8,6,1,10,2,-10,2,-2,1,-9,-5,5,7,-5,-8,7,-8,7,-2,3,-8,1,-8,-6,2,7,4,5,-1,-6,-1,-7,8,8,-1,-6,-7,-3,-9,-5,-4,-10,6,10,8,-10,-1,-9,1,8,10,4,-10,-4,4,4,2,6,1,-9,2,-7,-6,-1,-4,2,-3,-3,1,-4,7,-5,-1,-10,9,-9,-1,-3,5,-6,4,-4,2,2,7,2,-5,6,8,-8,7,7,6,-7,-5,-9,-10,-10,4,-8,9,6,7,-9,10,-1,7,-5,9,3,4,6,8,-6,9,3,6,-3,-1,-9,10,-8,-9,1,4,3,-7,-1,5,7,-5,-2,-8,-5,7,-2,5,7,2,1,1,5,7,3,5,-5,-8,1,-4,-9,-10,2,-8,9,-7,9,8,-4,-9,-6,6,-7,10,4,-4,-9,-3,-10,-1,2,-9,4,4,10,-6,2,-8,10,-4,-4,-9,-3,-5,3,9,-2,10,-8,5,-10,4,6,-8,2,3,2,-2,-4,7,-2,7,-9,-1,1,-4,-10,-2,2,5,4,1,-9,3,9,3,8,-5,-6,1,4,-8,-4,1,2,10,-5,4,-4,-9,8,-2,3,1,-6,9,-10,4,-7,9,-2,-7,-10,1,9], dtype = "int64")#candidate|6376|(840,)|const|int64
call_6374 = relay.TupleGetItem(func_1890_call(relay.reshape(var_6375.astype('float32'), [1, 13, 12]), relay.reshape(const_6376.astype('int64'), [2, 420]), ), 1)
call_6377 = relay.TupleGetItem(func_1893_call(relay.reshape(var_6375.astype('float32'), [1, 13, 12]), relay.reshape(const_6376.astype('int64'), [2, 420]), ), 1)
bop_6384 = relay.minimum(call_6374.astype('float32'), call_6329.astype('float32')) # shape=(3, 2, 420)
bop_6387 = relay.minimum(call_6377.astype('float32'), call_6330.astype('float32')) # shape=(3, 2, 420)
func_1890_call = mod.get_global_var('func_1890')
func_1893_call = mutated_mod.get_global_var('func_1893')
call_6392 = relay.TupleGetItem(func_1890_call(relay.reshape(var_6375.astype('float32'), [1, 13, 12]), relay.reshape(call_6374.astype('int64'), [2, 420]), ), 1)
call_6393 = relay.TupleGetItem(func_1893_call(relay.reshape(var_6375.astype('float32'), [1, 13, 12]), relay.reshape(call_6374.astype('int64'), [2, 420]), ), 1)
uop_6399 = relay.log2(uop_6340.astype('float64')) # shape=(3, 11, 6)
uop_6401 = relay.log2(uop_6342.astype('float64')) # shape=(3, 11, 6)
output = relay.Tuple([bop_6345,var_6375,const_6376,bop_6384,call_6392,uop_6399,])
output2 = relay.Tuple([bop_6348,var_6375,const_6376,bop_6387,call_6393,uop_6401,])
func_6410 = relay.Function([var_6335,var_6375,], output)
mod['func_6410'] = func_6410
mod = relay.transform.InferType()(mod)
mutated_mod['func_6410'] = func_6410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6410_call = mutated_mod.get_global_var('func_6410')
var_6412 = relay.var("var_6412", dtype = "float64", shape = (3, 11, 6))#candidate|6412|(3, 11, 6)|var|float64
var_6413 = relay.var("var_6413", dtype = "float32", shape = (156,))#candidate|6413|(156,)|var|float32
call_6411 = func_6410_call(var_6412,var_6413,)
output = call_6411
func_6414 = relay.Function([var_6412,var_6413,], output)
mutated_mod['func_6414'] = func_6414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6049_call = mod.get_global_var('func_6049')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_6427 = relay.TupleGetItem(func_6049_call(), 0)
call_6428 = relay.TupleGetItem(func_6050_call(), 0)
uop_6431 = relay.exp(call_6427.astype('float32')) # shape=(3, 1, 1)
uop_6433 = relay.exp(call_6428.astype('float32')) # shape=(3, 1, 1)
output = relay.Tuple([uop_6431,])
output2 = relay.Tuple([uop_6433,])
func_6434 = relay.Function([], output)
mod['func_6434'] = func_6434
mod = relay.transform.InferType()(mod)
output = func_6434()
func_6435 = relay.Function([], output)
mutated_mod['func_6435'] = func_6435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5662_call = mod.get_global_var('func_5662')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_6469 = func_5662_call()
call_6470 = func_5662_call()
output = call_6469
output2 = call_6470
func_6471 = relay.Function([], output)
mod['func_6471'] = func_6471
mod = relay.transform.InferType()(mod)
mutated_mod['func_6471'] = func_6471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6471_call = mutated_mod.get_global_var('func_6471')
call_6472 = func_6471_call()
output = call_6472
func_6473 = relay.Function([], output)
mutated_mod['func_6473'] = func_6473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_6539 = relay.TupleGetItem(func_5938_call(), 0)
call_6540 = relay.TupleGetItem(func_5939_call(), 0)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_6541 = func_5541_call()
call_6542 = func_5541_call()
output = relay.Tuple([call_6539,call_6541,])
output2 = relay.Tuple([call_6540,call_6542,])
func_6565 = relay.Function([], output)
mod['func_6565'] = func_6565
mod = relay.transform.InferType()(mod)
mutated_mod['func_6565'] = func_6565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6565_call = mutated_mod.get_global_var('func_6565')
call_6566 = func_6565_call()
output = call_6566
func_6567 = relay.Function([], output)
mutated_mod['func_6567'] = func_6567
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6604 = relay.var("var_6604", dtype = "float32", shape = (9, 1, 14))#candidate|6604|(9, 1, 14)|var|float32
uop_6605 = relay.acosh(var_6604.astype('float32')) # shape=(9, 1, 14)
output = relay.Tuple([uop_6605,])
output2 = relay.Tuple([uop_6605,])
func_6616 = relay.Function([var_6604,], output)
mod['func_6616'] = func_6616
mod = relay.transform.InferType()(mod)
mutated_mod['func_6616'] = func_6616
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6617 = relay.var("var_6617", dtype = "float32", shape = (9, 1, 14))#candidate|6617|(9, 1, 14)|var|float32
func_6616_call = mutated_mod.get_global_var('func_6616')
call_6618 = func_6616_call(var_6617)
output = call_6618
func_6619 = relay.Function([var_6617], output)
mutated_mod['func_6619'] = func_6619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6471_call = mod.get_global_var('func_6471')
func_6473_call = mutated_mod.get_global_var('func_6473')
call_6648 = func_6471_call()
call_6649 = func_6471_call()
func_1940_call = mod.get_global_var('func_1940')
func_1943_call = mutated_mod.get_global_var('func_1943')
const_6651 = relay.const([-7.349569,7.932593,-6.219346,-8.648517,9.280517,9.694763,-6.902260,-7.755813,1.824273,-4.336085,-4.462264,-8.644337,-2.422266,-8.799315,-8.047276,7.029907,0.477447,-3.085131,-3.184481,1.639352,-8.057306,7.269754,3.329401,-3.437174,-1.557818,-5.265710,3.162112,-3.893193,-7.104538,5.770351,-5.119635,-6.911306,2.961351,4.280476,2.183597,6.811279,0.312266,7.368790,-9.103791,-8.611429,-2.225892,-0.211699,3.894648,8.920971,7.020967,8.754020,6.412276,-4.086190,-7.459617,-8.141417,-9.708159,-5.489788,8.389497,-2.883653,8.436584,-5.952967,5.177796,5.838783,5.335887,3.987576,8.892651,-5.193688,-5.412925,7.907358,-9.522906,-7.842859,6.935383,6.947487,-6.693706,3.660108,-8.148127,-5.408484,-8.991643,-9.708659,-9.720081,-0.912191,-6.405672,1.705319,9.724536,-6.947089,-6.700895,-7.276963,2.113251,-4.867416,-8.722717,3.454971,-8.016471,-1.267998,3.945853,-9.561126,-2.064034,8.006045,-9.680129,9.654536,0.174973,4.553177,5.486546,8.854082,8.893894,-4.457374,6.231565,-6.313327,6.928833,-6.490729,-4.393190,0.808495,-6.915508,1.667204,0.757251,-2.417334,-7.313716,-4.055074,-5.049275,-1.703902,-2.644976,0.839468,-0.223123,2.210926,-9.305427,-8.049962,-5.611870,-3.352789,-3.638708,6.693970,-1.770224,-4.738991,-1.667035,-2.875184,9.791250,-4.789012,-2.141412,1.555661,-7.063206,-4.122057,5.185702,5.299557,-3.540675,-0.627178,4.197328,-5.877711,4.859026,1.872244,-1.290308,-0.304294,-1.402631,2.055544,-1.343366,-2.692639,8.922777,-7.612594,6.079672,-2.130981,9.333384,2.680374,4.685247,-6.942039,-2.543298,-0.922519,-0.575147,-1.679737,5.512369,3.455312,2.243265,-0.144418,-2.080487,6.951120,-8.095813,-2.114670,-7.935233,9.522852,2.696211,-1.491628,1.172049,-2.777898,-9.449113,-6.515638,-8.378014,6.525351,2.047399,-4.348089,-1.990034,-2.083823,-5.783340,-4.594786,-5.353262,-0.566765,-1.930619,5.247742,7.259885,3.086272,5.446585,5.835810,2.784591,6.917606,1.439357,-1.178925,3.592573,-9.847506,9.980148,-7.407788,-9.283188,-1.127709,7.752271,-8.693711,4.091167,-0.494485,-1.752077,7.729667,3.091110,-7.945883,-6.812302,-2.895203,4.536248,3.882420,-3.824605,-3.272305,-4.384292,6.579704,7.587113,-3.974202,4.749478,7.322356,4.739199,3.519328,0.239010,3.817991,-3.807751,5.374817,-4.249250,7.068929,-1.964011,-9.449454,-0.184363,-9.937495,3.524523,-7.383892,-6.825551,-8.675735,-9.602600,-3.962034,-9.394389,-0.798960,1.186382,-0.209178,-2.309359,-1.419519,-4.179220,-3.291003,-3.296820,-4.186492,7.692064,-2.641046,-0.629168,0.194574,-0.695759,-0.685790,1.901901,-5.316966,-1.732403,7.245354,-2.491899,8.963429,-7.379798,2.594132,-3.048384,-2.715302,-5.027582,4.655088,-0.259105,-1.104646,-1.996720,8.836440,6.678182,6.711080,-2.945199,-9.271009,-9.420305,4.562179,7.370782,-7.877894,-2.048530,-0.218629,7.087841,6.218332,-0.372597,1.789748,-7.742447,0.792440,-9.461065,4.161449,8.683313,2.714880,5.118298,-0.069548,3.021690,5.316221,1.530978,-7.081011,8.559114,-7.365885,5.340800,5.841978,-8.878749,2.195237,3.103422,-8.702698,8.972488,-2.155752,-9.216731,1.852073,7.459457,-2.520564,-2.856656,-8.064439,-6.178766,-2.505719,-1.953389,-2.287157,-6.115088,7.162059,-4.906253,-1.021874,9.757133,1.865716,5.834780,6.075983,2.609995,9.972933,-2.005254,6.614120,8.501689,2.472058,4.088431,-2.484979,7.714714,4.108089,0.404668,3.929048,3.529787,2.573305,-8.589091,9.060910,-3.764381,6.273783,-4.107265,6.812709,-6.846148,6.443137,-6.778566,9.776436,7.773865,-5.259272,-3.182323,2.413686,-8.661474,-2.871820,5.873760,-6.664250,3.371032,8.136716,-2.020091,1.252354,7.950826,3.891969,-2.555402,9.712336,5.619140,5.502676,-9.354731,7.027791,1.740650,3.226006,-5.600978,-9.741957,9.126166,9.038505,-7.174301,6.990543,-2.773553,-1.052340,6.488639,-1.925519,3.263874,7.283711,7.144061,-8.777856,-7.011424,6.567232,7.564388,-4.680077,4.280518,-9.766794,-2.538025,1.693836,-9.725979,-2.148825,-0.969017,4.968888,-1.112674,2.850286,8.040851,-9.341906,7.806628,-5.099912,5.266822,6.526438,0.550202,-3.489109,3.242513,-0.902899,2.698826,-0.734238,4.410906,1.890737,-3.389212,1.892754,-6.907251,4.824425,-8.584287,-7.599164,1.866590,-4.831779,-9.594657,-2.992176,3.403939,9.754582,2.939172,-4.250165,0.485682,-9.818723,-3.631126,-1.652569,6.949039,-3.935138,8.250730,5.027977,-8.021917,3.646402,8.319355,8.091266,-3.941148,7.339363,-1.993534,4.273126,-2.687841,3.881014,9.344727,9.198110,0.339384,-1.167624,7.298814,1.140574,-3.668833,-9.942407,2.583588,-5.513891,-7.641207,1.532507,6.583241,3.635835,2.657779,-0.255186,-6.749431,7.099941,5.305192,-7.639677,-9.419062,-1.808547,2.355482,-8.762098,-1.251125,-1.968238,-9.325641,0.209003,-0.049225,6.544675,5.481967,9.917689,-0.994443,-6.519197,-8.243553,-4.399295,-5.159911,8.717157,4.254357,-1.309763,-2.004717,-5.399656,7.708426,-8.135751,-9.105941,4.781355,3.532717,6.791861,2.661103,6.557165,6.971423,-4.174577,5.369676,1.058216,3.705483,-7.242155,-4.175808,6.903731,6.526897,-0.902883,1.864791,7.830453,-0.170503,-0.231225,-7.546987,6.198425,9.863239,-1.020633,-7.756403,6.141606,1.373223,6.338508,9.379838,3.097738,2.389225,-3.584266,7.788134,6.563189,7.552042,-3.014244,-4.535556,5.261851,3.956565,-5.916551,8.225341,-9.511104,7.835403,-0.715360,-2.433569,7.875102,2.510786,-3.431007,-5.275454,-4.481060,-8.398698,0.852355,1.349768,-0.936097,-1.227179,-4.628088,3.000967,3.374798,-4.589976,1.575065,3.372574,-4.288233,-7.849785,-9.392713,5.519494,-9.820539,8.784900,-5.159382,-5.978887,2.852354,9.651590,-7.147449,-4.994056,0.527939,-0.619089,6.243965,-7.726630,-4.566112,9.386441,5.121884,-1.808656,-5.456826,8.474193,-0.226832,7.150162,0.450457,0.019720,4.133481,7.979334,-3.523552,7.922144,1.694818,-2.764835,5.527840,-5.621220,-1.537505,-3.522801,-4.041101,0.097778,-3.050081,0.917463,8.286907,5.409738,-7.643080,8.046153,-8.810008,1.228707,-1.605959,-5.891623,7.534462,-9.359085,2.765303,-8.867134,0.107828,-7.402417,-3.432033,6.745504,-8.791952,4.978810,4.419051,2.336339,6.409909,5.906848,-6.568700,8.775864,5.736045,9.477782,5.084488,-7.364309,9.192000,-4.217730,-5.775048,5.497066,-8.556747,-3.719318,-5.583652,-2.499818,-4.541919,0.280623,7.654247,-6.589830,2.493092,0.054236,5.723229,6.731933,-6.560037,-5.006406,3.448154,5.952015,-1.213552,3.747195,9.072733,7.411793,0.378712,3.931580,9.784858,5.993124,3.702182,1.747422,5.278718,-8.564891,-2.043991,-6.711582,-4.474428,-3.711648,8.652252,4.544830,2.893430,-8.201283,-8.622994,3.053653,0.119663,-6.363016,6.954332,8.215357,-6.528058,-3.637290,3.019265,-8.503937,-1.324216,-4.565362,-1.903951,-8.747528,-2.545762,-8.977854,-6.085839,1.200188,0.652464,9.070352,0.877764,0.342670,-6.756969,3.151493,-8.538511,0.780079,-6.460453,0.942614,-9.831875,-5.801415,-0.506843,1.992128,-0.006395,4.979730,-4.131264,-6.570132,9.125464,1.305139,8.561280,1.227211,-6.817294,-0.097658,0.095433,2.212758,5.799440,-1.242304,-2.268703,8.882266,-1.211418,-8.753509,7.557763,1.846475,-8.334727,-8.016702,0.546794,-0.759769,-7.790768,-7.891040,-2.288441,0.348822,4.165749,8.763876,2.712211,-8.462406,9.498723,-4.939851,2.013957,-9.317909,-0.815694,8.287817,-5.872949,3.635048,-0.482884,-0.251526,3.089385,-3.671688,-4.300481,1.590342,-5.485566,9.203148,-8.947673,-2.969743,7.765275,-2.535063,6.019181,8.010290,6.128805,5.812663,-8.107205,-8.620989,3.020220,-3.295065,-8.604770,-9.095182,0.070736,1.729640,3.616462,0.474371,-2.173126,5.004956,5.700646,2.906124,1.011595,-3.540113,8.223384,-3.345827,-6.457792,-7.048356,-3.237510,3.950633,-1.359665,4.344039,9.099331,6.796287,-4.177117,1.048161,6.694673,-8.017878,9.523831,1.617766,9.834316,-2.265835,-5.958105,9.757706,3.009797,4.433776,5.638964,2.024884,6.436953,-3.264244,0.717490,-3.442231,-3.958996,-7.011610,0.176302,-4.289036,8.654672,-3.163557,8.814567,-5.246427,4.518294,1.533442,-7.350751,1.580760,5.479882,-3.205206,9.380027,0.364021,1.209983,-5.036523,4.244176,-5.157218,2.582564,2.870807,-4.805175,1.805767,5.525807,-8.554487,7.113762,5.965762,2.491906,-5.759249,-9.510560,-1.917405,2.360042,0.575155,-4.522605,1.495710,-8.239280,-7.753499,-8.289291,-6.886108,-3.538551,3.273678,-0.876563,-5.695039,-2.750309,8.518550,9.779057,6.522145,-0.320586,4.898247,-4.465353,-4.519777,6.315505,7.490840,-3.480772,4.002642,-5.184486,-7.893205,-3.416153,-4.056321,1.005104,2.516270,7.289691,0.843858,5.049402,-5.805965,6.693548,7.814051,-4.456128,-5.254578,-3.501296,0.125523,0.942533,-3.578034,5.622614,-0.984168,-3.229664,4.860754,-5.188329,2.183607,4.101363,8.759364,-5.106462,-1.377762,4.695389,6.064106,-8.786132,-0.307053,-2.955814,4.761020,4.266957,7.572486,-2.292948,-7.533933,5.066130,-1.718233,5.353888,-8.465265,-6.836546,-3.586517,1.453309,-3.624079,5.381213,3.564821,3.674293,0.127259,6.862509,-1.446845,0.241695,-5.636449,-1.738871,5.679402,1.080072,5.830487,-4.806301,6.362141,0.936848,-2.119969,2.945341,-6.964374,-8.346622,7.586719,-1.662040,6.734429,-2.826909,4.908180,2.063365,0.845693,-3.088661,-5.383645,-9.607621,-4.863648,9.376191,-4.751723,1.867572,1.778586,-1.977555,3.970412,-9.493004,-3.227197,-7.504513,5.176678,2.685749,-1.630185,2.119678,-0.865262,6.617161,2.232526,5.058824,8.056372,8.064189,3.300525,0.717569,-7.916738,7.318341,9.965787,-6.791787,5.017184,1.849816,6.214020,0.388659,-1.319533,6.261090,9.680256,-2.325408,4.045801,-1.795900,6.762335,5.802415,4.046976,6.869568,-2.657611,-9.628621,3.756687,-7.038573,-0.177818,-1.075923,-7.173096,8.862474,9.510320,-8.082449,3.386443,4.760866,-4.753764,-0.375912,5.731339,-7.587791,-2.218900,-8.739087,-9.503304,-3.571639,-7.164051,-7.553791,-5.889572,-1.571804,3.565283,-0.680329,7.339822,0.344079,-6.792551,-8.155332,3.706445,-0.544184,2.645125,4.985814,2.685336,-5.362940,8.500694,-1.341296,-1.506554,4.095927,6.626825,-2.701640,8.805924,-0.424342,-7.501841,1.649894,-7.508780,8.570106,-2.471846,1.275283,-5.498114,3.010558,-3.143242,-8.401871,6.387019,-4.599866,4.600289,5.137970,2.506273,5.522274,-4.338417,2.705275,-2.613660,-9.623891,-1.512379,-3.928960,-7.820474,-8.859770,6.227444,1.131473,-1.465948,8.195107,9.186013,-6.795015,-3.497814,-0.961567,-7.006767,7.398259,-4.273292,-5.616544,-8.269816,0.420336,-9.401904,1.781352,-3.542346,-2.697974,4.626433,6.869041,5.637614,7.195039,8.309687,-9.353424,1.756915,-8.557297,-3.888962,-4.913833,5.866892,1.126557,4.275741,4.066179,0.926510,-9.347541,6.520848,8.619961,6.275200,-6.706688,-7.504745,0.507157,1.009266,2.843259,-6.603531,-7.476709,-0.099928,8.191021,-0.429388,4.384914,2.939828,-4.206903,2.626145,2.394817,-7.237315,0.209768,-3.386085,5.880654,-7.993123,6.302619,-0.296835,-4.996415,5.273125,7.269702,-2.186459,-7.660743,-6.339811,-8.666016,-1.367895,3.842657,-4.867765,-3.703415,5.482067,-0.979427,-4.141074,-8.647190,0.604526,2.693846,-8.963617,-5.118839,-9.954812,-6.626679,-4.932429,-7.293793,-7.214279,5.120811,5.934949,-4.035989,6.401030,-8.511778,-7.683844,6.635324,-6.063684,2.719607,3.122772,0.923297,-9.334872,-2.088374,4.806723,7.749683,-5.365215,-5.123870,-2.841970,-0.428724,5.554822,-7.344391,0.695380,2.593490,-8.944706,2.055333,-7.107541,6.517927,-4.063279,3.922695,8.398462,-1.644022,-2.776402,4.751191,5.936505,-1.274292,-2.264797,-4.907281,-6.656419,2.796343,-5.780576,-0.196093,-2.499785,6.769984,-0.815638,-2.565047,-2.371280,1.062517,6.932007,4.993519,1.992827,5.359841,-3.955801,3.586762,2.530075,-8.475959,3.576785,-8.283890,-4.476137,9.375362,8.552849,-4.885854,-2.766883,-6.784334,-5.183701,-2.143322,4.317709,-3.976357,1.333825,3.270218,-3.366282,5.364193,-0.049111,1.182790,3.483773,2.633594,-5.684303,-6.506644,-3.130419,-7.789273,9.058562,-7.704591,-7.189949,-3.911306,-0.820498,-3.368102,5.568601,0.777020,-4.746073,7.704332,1.652215,-0.415665,-5.653656,-5.056492,8.805005,-0.844623,8.608553,5.704303,7.793208,9.603000,5.182288,-7.141752,6.755698,8.803633,0.556937,-0.261558,7.188187,-8.112859,9.644728,-1.567850,-2.179976,9.267451,8.250418,3.492611,5.118865,5.144098,8.689619,4.267874,3.115060,-9.812177,4.212276,7.970251,9.717032,2.828739,-5.005250,9.098748,-4.277860,-6.823289,8.903302,-1.649272,-3.168443,-2.796839,8.329690,9.950321,-9.958131,7.691190,-0.699108,-8.448207,4.431231,-3.474566,-3.153079,-3.122315,2.367001,-9.329369,-4.442072,7.930768,-6.679482,-5.554785,2.375237,-3.272141,7.211110,-7.083284,-8.168910,4.397744,-5.931314,4.880861,3.991934,4.673235,-0.651870,-9.674679,-1.685648,-5.511691,7.222763,-0.762812,-7.367561,-1.129168,7.052576,8.913983,4.741972,9.471795,-9.532844,-8.802594,-6.150845,-5.682928,-0.638372,1.851871,-4.440547,8.965034,8.933992,8.708130,0.083037,0.655654,-5.815368,-6.343856,-2.606747,9.434305,8.555182,-1.118485,3.572412,-0.201484,9.275209,-5.036909,2.186843,7.168693,2.901396,-6.900824,-9.144081,4.734585,-4.021239,7.412651,8.518530,-6.489132,-8.968168,-2.443241,1.405207,0.503052,1.730677,0.871076,-9.740945,2.103706,9.756999,-2.193517,2.262891,-0.930027,0.631173,-2.825574,-4.161516,4.467853,-3.863633,-1.193692,3.006973,-0.273737,8.452307,0.496664,5.712723,2.169940,8.810883,-3.074068,-1.875395,-9.483911,-8.827396,-0.559844,3.993719,-3.138738,-5.877095,-0.205141,-2.290592,-5.714571,-4.315593,0.374877,-9.950435,-2.017706,-4.185877,-6.956729,5.376918,8.119426,-0.630778,-5.676093,3.245960,2.737516,4.190787,6.912601,-5.637356,9.979426,-2.513323,-2.567527,4.073128,-0.532894,-3.770284,-2.198402,4.321573,5.197530,-6.830002,-6.018325,-4.901467,9.645911,5.337417,-2.881163,-6.709248,-9.712907,-6.174160,6.607390,6.543009,-7.315482,-5.191181,9.300081,-0.382092,8.618901,-1.769574,-4.214050,9.535321,-9.841203,3.506734,2.328208,-6.232577,-0.684369,-9.633656,-3.753259,2.682649,7.156370,-2.197143,2.909376,-8.823071,3.599053,-5.669187,8.898899,1.613076,-2.728328,-4.176028,-8.757551,3.961114,-9.629604,-0.448334,0.225202,2.746813,3.066008,3.216090,-0.446956,-7.242971,-5.594576,2.395657,-0.422599,2.450267,8.386317,-3.418856,-8.565097,-9.915503,-9.375742,-4.463643,-1.764068,-9.753728,3.075336,3.085797,9.645886,2.898032,-9.986052,-6.557377,0.946220,-7.179643,7.116979,-5.469291,-7.664805,-4.759894,0.696714,0.856459,-9.454936,8.109688,8.149554,2.050083,-2.373599,2.156373,-5.073863,-1.871162,0.993144,-6.059993,1.152655,7.253193,-0.986442,-7.890458,-0.424209,4.310541,-5.920302,-0.144399,1.144742,-9.875989,-5.982318,6.434322,3.369332,-1.713856,-3.070699,-9.634212,9.317974,7.166555,6.593577,4.769795,9.016769,1.571109,5.376044,-9.858146,4.491573,4.264246,-9.970573,-9.995881,-4.845618,-6.070161,-5.722979,-8.329743,-8.989859,8.431469,-6.716809,0.564747,6.706273,9.007483,-0.128175,-7.251622,-6.319976,2.976134,-0.878043,6.476938,-2.523479,6.370811,-1.945725,-6.579054,0.333853,-1.307606,-6.620937,-8.760189,-4.456371,7.782936,2.450040,3.901413,2.265063,-7.033041,-3.797694,-7.154298,3.573736,6.824609,7.221300,9.624036,8.929465,-5.340525,4.146815,-2.518981,-0.613632,0.894609,7.570913,-6.180511,8.780921,-3.534726,-8.273172,8.628824,-7.465066,7.645235,-8.983573,-1.824400,-9.542850,-0.245203,4.126986,-7.960361,-8.301771,2.903170,-4.937086,-3.999127,-8.875141,2.316695,7.135001,9.487763,-9.987324,5.259756,8.753269,-8.499050,0.595995,9.003087,6.899469,-0.180862,5.531094,5.522729,5.828848,-0.266211,-4.991447,-9.042008,-0.703917,0.085379,-3.856000,1.892510,6.408836,-9.063170,-5.610479,4.031086,2.325535,7.146036,-8.245214,-5.301115,-3.914958,4.506732,-7.258157,-2.215584,2.956389,6.370089,7.979372,4.207098,1.343181,5.367105,-1.636321,0.689091,-5.323174,-0.933123,-7.269588,6.301452,3.290965,1.850504,-4.143982,-1.127889,-5.031260,-7.903434,8.172645,-1.635164,2.913073,-6.610859,-2.952782,4.720984,1.851023,0.160039,-7.287269,-0.282231,-9.526546,4.567659,-6.199141,-2.308944,-3.156454,-1.900383,1.577439,-5.445709,-9.415816,-6.880055,-1.041369,2.529669,3.086258,7.399464,3.601950,-7.593949,-9.645496,4.341191,0.758170,8.929610,-4.445361,2.501714,-5.557955,-0.674352,0.495058,8.391105,-2.368577,1.983714,-2.679841,7.976966,-3.631979,6.154789,9.181894,2.792889,-2.008408,-1.561023,-3.552909,-9.873680,0.787928,9.228221,9.806090,1.020532,-7.640025,-6.971120,9.707459,-4.810445,3.282947,-0.354095,-5.393802,4.246131,-5.688261,0.419079,-2.187965,1.041658,-5.526468,-3.597620,-0.829626,5.786574,-2.030952,5.975618,4.910253,6.181270,7.714327,-2.200691,-3.260995,-2.611106,5.657691,9.416138,-1.964197,-2.900881,-4.441365,-6.436533,-3.691155,3.866870,6.385226,-9.174546,-8.895929,7.915637,-3.523676,-1.152868,-4.768297,8.680826,-1.636456,8.103339,-7.866956,-5.087580,-8.833139,1.435908,-4.943909,5.748598,7.157761,0.503505,3.131660,6.434188,-8.020645,-0.436563,-4.134400,-8.022356,0.959222,0.895308,8.346859,-8.163704,1.270171,-5.861500,-7.674987,6.275754,-4.288608,0.755545,-9.156559,9.006628,-6.401149,8.607304,9.030874,-0.164154,2.140358,-2.191598,4.742443,-5.893854,-3.701749,-9.646582,-5.867412,-0.642733,-4.889486,-7.308037,-3.214459,6.734750,-5.576546,-0.816321,8.869894,-2.115139,-0.346373,6.098211,6.067870,-6.470629,2.500234,-8.597605,7.751717,-8.385411,-4.020336,-5.072390,-1.204315,-2.796725,-2.956776,-3.110897,8.194679,-7.379422,-2.406795,5.781697,2.025237,8.306957,-2.939589,-8.272500,2.780496,-6.124014,3.606572,-6.442412,-3.993790,-8.623265,0.341620,-3.191611,3.993718,1.511014,4.296832,2.994911,-8.069870,3.500191,-8.326317,-7.983208,-5.003371,-8.901047,4.314013,1.704401,7.420366,-7.614682,-4.675856,9.923465,2.133312,5.534590,2.481438,4.111867,-3.272178,-2.218093,-7.076535,-2.111884,6.135688,3.481699,4.256536,8.907266,-1.828655,-7.223274,-9.773548,2.871668,-0.127595,-9.502229,0.261894,7.066738,-0.528300,0.754359,0.212192,5.518096,-4.885246,0.188103,9.318093,-4.161509,6.674159,7.846220,-4.392673,0.217652,1.324751,-7.477858,-5.154574,-0.256620,2.055810,7.037226,3.642998,-7.606455,7.486129,-4.980357,-7.151733,4.980782,3.666628,7.201834,0.639661,-4.209855,7.052894,1.620981,-9.528352,-8.979428,7.866794,-3.405146,0.025476,-9.583972,5.006535,7.784281,0.847756,2.743232,5.726112,-8.745870,2.162963,-2.512278,5.939988,-6.371543,1.670524,-5.836916,6.089799,-1.886836,3.485902,7.953304,0.119236,-0.166369,3.695930,7.321288,-3.696768,1.314520,-8.763456,-7.488830,-2.669223,1.863381,-0.818386,-0.965947,3.285329,-3.079977,-4.986877,5.447680,-5.125089,-9.091197,2.585917,9.091401,-3.291290,7.798141,-3.066532,-1.277367,3.121396,-4.250506,8.586829,3.996956,3.587981,5.259289,4.946124,1.058748,-2.931641,-8.675001,3.080159,-6.680368,-0.006006,-8.099383,5.451264,0.602456,6.467308,-5.297374,6.391120,2.774092,4.486829,-8.005639,7.071175,6.772900,7.977549,7.241795,1.264090,-5.675716,0.213913,-4.806319,-7.431680,1.957068,4.643213,-3.885194,8.225769,-8.717093,2.438164,-5.762845,-4.562786,-6.137124,6.135449,9.625853,2.192926,-2.898580,-6.966149,-7.006103,0.564412,-2.878889,4.826735,5.193256,-9.932240,-4.235171,-4.897168,-4.371837,-8.757446,-1.698995,-7.294273,-4.833401,-7.731635,3.116927,6.685898,3.727850,1.037913,2.852735,-9.319867,-7.541377,-6.624437,-6.439916,7.191129,-7.135529,-2.536626,1.020604,-1.385845,-3.747124,-7.807318,1.099429,1.611626,-8.766734,8.312217,-4.537387,-8.867259,-3.794330,3.397606,7.161282,-0.530737,-9.528644,6.350110,5.051769,4.782656,-9.572676,1.071411,1.361213,-5.160165,-4.215227,5.175742,1.290390,5.090502,3.319148,2.799868,8.117721,-1.476737,-0.011648,3.483250,6.570702,0.562907,-4.496084,7.139138,-1.925847,-5.312189,4.114913,7.159782,5.577282,7.155279,2.896994,-4.615618,-2.942473,-1.131180,-1.017030,-9.710769,-6.590638,8.024482,5.413048,-0.294546,-2.406836,-8.547664,-7.589270,-5.699612,-4.224171,-0.760839,-4.074628,-5.263531,7.423781,6.366289,-7.467048,8.438351,-1.404015,2.140660,-4.535655,2.695194,-4.233573,-6.754560,2.821967,7.703511,-8.724640,6.282708,-2.180712,6.713649,-9.093837,3.015658,5.632310,7.294330,0.142399,6.204533,-9.613149,-3.459707,-5.527812,2.842398,3.677266,0.724138,1.722609,9.066402,-0.112981,9.189918,1.461157,6.009624,-5.129906,-9.107152,5.818354,2.584274,-2.805658,1.663959,-5.485409,-1.370969,5.368369,-2.504603,-1.260558,-1.130374,-5.701584,3.641250,-6.517035,-0.326702,1.591731,-2.761411,-6.477374,-0.875646,5.522873,4.578922,7.014009,6.644777,6.459565,6.363324,1.286017,-1.441917,7.468279,-8.552459,-5.385621,-9.708139,4.877855,0.006918,-1.811959,5.408232,3.218544,-6.055480,-3.957630,9.819010,4.403660,-8.795070,-4.285352,-5.820678,-2.210401,3.866575,-3.474215,8.399847,-8.856408,2.496661,-7.041318,-3.293093,-7.842130,-9.156415,-6.006059,-6.313787,-6.625121,9.338378,-9.685110,3.610018,-1.368948,4.299311,-8.350283,-2.893546,6.929530,-0.051092,-3.804747,0.313340,5.864926,-9.076881,1.172370,0.590825,6.958965,-9.448074,-7.714097,-6.184733,-6.254460,6.364276,-8.031207,4.457474,-1.526705,-6.082888,-7.614556,5.644858,8.633009,-5.022022,-0.416610,4.053172,-5.097440,3.823970,5.648454,6.063166,-8.917185,-0.393137,-7.356110,-3.616939,1.794606,-2.517382,9.136692,8.663687,4.061768,0.632074,9.885276,4.731609,9.517796,2.622092,-5.780542,-7.268347,0.920499,-8.566194,8.243182,-0.841866,2.215966,-1.805208,-4.018742,9.154692,9.610751,-7.226787,8.773527,-5.173143,-5.092371,0.919751,-7.792842,9.578958,8.553637,-4.944803,2.538309,1.361573,0.175944,1.441287,-3.906301,2.934564,0.996043,-6.784329,4.094536,7.394079,-4.689486,-2.767387,8.689084,6.328119,1.785200,6.043215,-9.606730,4.821290,-5.070570,-3.374942,-3.533364,9.253185,2.265533,-5.205055,-9.081406,-7.136714,1.311728,-2.162774,0.457991,3.335996,0.425225,2.151308,9.625958,3.843441,4.607725,-9.127785,3.824724,6.342507,-0.371387,7.980968,-0.037977,7.870599,-0.888540,-9.004577,3.792593,6.022300,-4.188447,1.968234,3.294396,3.111315,-7.632518,-5.083969,1.923776,-3.741940,-5.763970,5.114439,2.581541,-2.543563,-2.619519,1.219918,-3.272640,-2.390407,3.692178,-1.456583,-6.826248,5.776466,-5.924994,-2.714664,-3.447000,8.964527,-7.482860,0.826420,2.020142,8.570243,-4.967120,-6.064251,5.714202,9.719739,-0.404601,-1.211224,7.320377,4.475115,9.942132,-8.505107,-5.668915,-4.957071,-6.367786,-5.050074,3.659224,6.822949,2.602137,-2.813490,-9.848683,8.749106,-5.493041,7.576796,-6.901984,0.189390,-4.549150,1.131577,4.498526,8.043470,3.639182,9.419680,3.538078,-4.674424,-4.248709,-6.883531,-4.739948,2.681186,0.310609,-0.406625,0.538313,3.358011,1.732826,-9.359835,2.971876,-9.336394,-5.440242,6.793069,-7.199996,-0.307572,7.489046,3.369644,-8.574839,-6.325116,6.237787,8.539117,-3.972875,-0.427683,0.610634,-9.642052,-1.448153,2.082242,-9.901949,5.724814,-6.725118,-0.486720,-1.223527,2.110428,-5.225551,-0.042196,4.754243,1.120538,-7.906568,5.113979,-2.966118,-9.364822,8.017071,1.566404,5.463873,-2.146235,-5.600748,1.923347,1.409497,-9.097516,-9.261006,1.637685,-8.721178,8.529316,8.946767,7.454609,-4.948336,-6.697223,2.911115,4.088560,-9.303904,5.646933,-0.901379,4.773439,4.393825,-0.094174,-8.948124,9.885708,-4.287993,-9.181345,-8.020582,7.713697,7.772532,-2.513362,-9.739258,2.344004,4.932590,1.710804,5.718310,0.134557,-8.775526,-3.298497,-9.485219,-6.940714,-3.389589,-5.851181,-4.220294,1.871399,6.587131,-8.286648,-2.115431,8.389579,-9.431436,0.646412,1.338581,2.609951,-2.019609,8.628831,5.073235,3.514975,-0.292437,-3.682600,-2.693352,-5.348762,0.027533,9.162335,7.864052,-0.174064,3.005143,5.322105,-1.469018,3.694251,0.621429,9.508143,-6.921488,-2.613221,-7.593595,6.008247,7.251814,9.224737,-1.211840,-2.991347,8.655012,-8.356037], dtype = "float32")#candidate|6651|(2400,)|const|float32
call_6650 = func_1940_call(relay.reshape(const_6651.astype('float32'), [16, 10, 15]))
call_6652 = func_1940_call(relay.reshape(const_6651.astype('float32'), [16, 10, 15]))
func_4684_call = mod.get_global_var('func_4684')
func_4688_call = mutated_mod.get_global_var('func_4688')
const_6660 = relay.const([10,4,-6,1,5,-10,8,3,7,-4,-1,3,-6,9,4,-4,10,10,-4,-7,5,-6,-7,10,6,-5,2,1,7,-7,-6,7,9,-3,10,-2,7,-9,-6,10,-2,10,-7,5,-1,-4,3,4,-9,-5,-6,8,-4,2,8,5,-7,6,-8,-7,-3,-5,-2,-8,-5,-2,9,-6,6,6,-10,-6,6,2,-4,2,-9,6,5,2,7,10,-3,1,-4,5,-6,2,4,-5,-10,6,3,1,-3,7,-7,6,-5,3,-3,-5,1,2,-9,2,5,1,9,5,4,-2,1,1,6,-5,-2,2,8,-9,-5,8,-6,-8,-10,-6,7,3,9,-3,-10,8,1,-7,3,5,6,8,4,-8,-2,-9,6,6,10,2,10,-3,-9,-7,8,-2,9,8,-7,8,-1,-8,-8,2,-4,7,-4,2,-5,-8,4,9,2,-7,-2,-8,-1,-1,9,-9,8,8,10,-9,-10,10,-9,-7,6,7,10,-2,2,-2,-7,-5,-10,-8,4,7,-4,-9,-8,1,-2,-4,6,5,-1,10,-1,2,-9,-2,-10,8,-6,7,5,7,-10,2,-9,5,-6,-8,9,6,4,10,9,-8,-5,8,-4,-7,-8,-2,6,6,2,8,-6,7,4,-4,5,7,-10,10,-2,10,-8,6,10,5,-8,3,-7,5,-10,-4,4,7,-8,8,5,-9,-10,6,-9,-4,-6,-2,-9,-6,-8,6,-4,6,9,2,-1,7,-6,-3,-6,3,-4,-6,-3,-2,3,-5,-10,-8,6,-4,-1,-10,6,3,10,5,-2,-7,-3,8,-6,4,-7,-6,2,-1,1,-9,5,-10,-9,-9,7,-8,4,6,-2,-7,-3,-1,10,-8,-3,9,-3,1,5,-5,-5,-3,-10,10,-1,8,-7,-1,-2,2,-9,1,2,-4,-3,9,9,-10,1,8,6,-8,-8,4,9,5,-6,10,2,7,10,-7,8,-7,-7,2,4,10,10,-1,-1,7,-5,-7,8,4,8,6,-7,6,9,-1,10,2,-7,-9,1,6,-2,3,-7,-7,-6,-2,5,1,7,-6,5,-9,2,3,-3,-9,1,6,-9,-2,5,2,-3,-5,-4,9,8,4,-5,1,-5,4,2,-6,2,-8,2,-10,-2,5,-5,-7,-2,3,7,9,6,-8,3,1,-3,-4,-10,2,-1,-10,-3,3,10,-5,2,7,-7,-10,10,-8,10,-8,10,4,8,10,-1,-7,9,-7,7,-2,-2,7,-2,5,-8,-4,-4,10,2,-1,10,-5,-1,-1,8,-5,4,2,-6,1,1,-2,6,9,9,3,10,-2,4,-1,9,-3,-7,-10,-6,-7,-6,4,-1,10,-4,3,2,-7,9,9,4,-10,10,6,-10,-5,-3,10,3,-6,-4,-9,4,-3,3,-10,7,-10,1,3,10,-2,8,-5,-2,5,9,2,-1,-6,-10,-5,-8,4,-10,5,-6,3,8,2,-10,-6,3,4,-7,-10,9,-2,10,-10,-4,2,-9,3,-2,7,-3,3,-3,10,9,6,5,7,-7,-6,2,-2,-3,-10,9,-9,2,-8,10,6,-8,-7,2,8,1,-10,-4,-5,7,-3,3,-9,-7,2,5,-7,10,-5,8,-2,9,-3,4,1,-3,8,-10,3,-3,5,2,-10,5,-5,-1,3,10,-3,4,-8,10,-7,2,-6,-4,3,-2,-8,-10,-10,-1,3,9,-8,9,1,1,-10,7,-9,8,5,-7,-6,6,-10,-9,10,8,-10,-5,8,1,10,5,-9,1,2,-8,9,-4,-3,-1,-10,1,7,3,4,5,-3,3,-1,9,4,-2,1,1,7,-5,2,9,3,-7,7,1,2,4,-8,-9,-10,7,-6,-3,2,-2,-7,-6,-2,-7,6,-10,2,4,-9,-4,5,-10,2,8,5,-8,2,1,8,-2,6,5,-10,-9,5,7,7,-4,5,10,-1,-10,-4,-6,1,-9,2,6,-6,-10,-8,-2,8,-1,6,-3,-2,2,6,-10,-8,5,-6,3,-7,2,1,10,10,2,-5,-6,8,4,-6,2,-7,5,9,5,10,-1,1,-10,-5,8,-7,-8,10,6,10,1,6,-1,3,-1,3,-6,3,7,10,9,-10,10,-3,-10,-6,-2,-7,7,1,5,-10,-10,8,-5,7,-8,3,10,6,-10,-1,5,5,9,10,10,6,-6,-1,5,-5,4,-10,-5,-4,-1,7,-4,9,-10,9,2,-4,-10,-9,3,-7,-1,3,5,1,4,-3,-2,-4,-3,6,6,4,-5,2,-5,6,8,-4,-9,-1,2,-3,-6,1,-10,7,-7,4,3,9,-5,-6,6,-5,4,2,-10,4,-4,7,10,-9,-4,8,-9,5,-3,6,-10,6,7,-2,5,-4,9,-2,-5,7,-4,-7,3,8,3,-5,4,-7,-1,9,4,-2,7,5,5,-3,8,-3,-4,-7,4,9,5,-3,6,-10,-7,3,-6,-10,-2,-1,5,-3,6,5,4,-2,-10,5,8,6,10], dtype = "uint64")#candidate|6660|(945,)|const|uint64
call_6659 = relay.TupleGetItem(func_4684_call(relay.reshape(const_6660.astype('uint64'), [9, 15, 7]), relay.reshape(const_6660.astype('uint64'), [9, 15, 7]), ), 0)
call_6661 = relay.TupleGetItem(func_4688_call(relay.reshape(const_6660.astype('uint64'), [9, 15, 7]), relay.reshape(const_6660.astype('uint64'), [9, 15, 7]), ), 0)
bop_6663 = relay.subtract(const_6660.astype('uint64'), relay.reshape(call_6659.astype('uint64'), relay.shape_of(const_6660))) # shape=(945,)
bop_6666 = relay.subtract(const_6660.astype('uint64'), relay.reshape(call_6661.astype('uint64'), relay.shape_of(const_6660))) # shape=(945,)
func_6125_call = mod.get_global_var('func_6125')
func_6128_call = mutated_mod.get_global_var('func_6128')
const_6668 = relay.const([-4,-2,5,-6,5,-10,4,-9,-4,6,7,7,-6,3,-9,-9,-1,2,2,7,-6,8,-7,-4,4,-8,2,1,2,-1,6,6,4,5,7,-5,-7,2,2,6,8,8,-9,-1,5,-2,3,-10,5,2,7,5,-2,9,-5,-1,9,4,-8,-7,-6,-6,6,-5,-3,-2,-8,-4,4,-6,8,-1,-7,-3,9,-10,10,5,5,-8,8,-7,-7,-9,-4,-9,2,-9,8,-6,1,-3,5,6,7,-6,-6,-1,6,3,5,-4,5,-6,3,-9,1,5,9,5,7,-10,6,7,1,2,5,5,-9,-2,-4,-7,4,-10,-7,-10,-6,-9,-6,-4,6,5,4,-1,10,5,6,-10,6,-5,4,-7,-10,5,-3,-4,-5,-10,8,1,-5,-3,-8,1,-2,-5,6,1,8,-3,-2,-10,8,7,-1,4,-5,-9,10,7,8,2,-5,1,8,-6,3,-9,-8,-6], dtype = "uint16")#candidate|6668|(180,)|const|uint16
call_6667 = relay.TupleGetItem(func_6125_call(relay.reshape(const_6668.astype('uint16'), [3, 4, 15])), 3)
call_6669 = relay.TupleGetItem(func_6128_call(relay.reshape(const_6668.astype('uint16'), [3, 4, 15])), 3)
output = relay.Tuple([call_6648,call_6650,const_6651,bop_6663,call_6667,const_6668,])
output2 = relay.Tuple([call_6649,call_6652,const_6651,bop_6666,call_6669,const_6668,])
func_6672 = relay.Function([], output)
mod['func_6672'] = func_6672
mod = relay.transform.InferType()(mod)
output = func_6672()
func_6673 = relay.Function([], output)
mutated_mod['func_6673'] = func_6673
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6695 = relay.const(-2.185999, dtype = "float64")#candidate|6695|()|const|float64
const_6696 = relay.const([[[-8.263526,1.898018,0.779303,6.238327,1.454232,-0.966298,-5.147305,9.219909,9.594085,6.960294,-3.052700,-9.672740],[-4.988777,-3.246798,7.660743,6.256689,-3.157500,4.962178,-3.576693,9.520956,-2.561931,-4.363714,8.470592,2.816997],[-6.396234,-2.213248,-9.077810,-1.569041,-3.032221,3.876863,-5.265608,-0.095054,-1.440106,-7.411427,-4.212074,-8.774345],[6.388743,6.668606,-7.306287,6.184958,-4.158686,7.968258,4.105689,2.898450,8.134501,5.220768,1.736740,-1.528471],[2.896504,0.549708,5.468697,-6.396615,-3.541245,6.326605,-5.989367,6.080289,6.399937,0.457023,-9.200387,-5.904568],[-2.669624,9.807299,9.042212,4.625399,5.104661,7.371980,-1.058001,9.987691,9.296544,-7.649973,-9.621111,-0.208853],[-3.784842,-5.068080,1.266327,-3.302625,-6.688811,3.806542,-5.991713,-3.391924,4.505729,-3.349994,2.648074,-7.918873],[-4.239396,2.655663,-5.854255,-3.404519,9.674756,5.323782,-3.523648,-1.317645,-5.805489,-1.307211,-7.038730,-5.504670],[-9.141837,-4.026519,-3.421235,3.568854,6.583256,4.948101,-5.239562,-1.658859,-9.654311,-0.487490,-4.769779,8.183415],[3.545583,3.190240,-1.905024,8.679396,-7.429463,9.816746,7.805531,0.996584,6.419654,-3.609640,0.436698,6.844623],[2.698042,-6.796827,5.842544,-5.331869,7.530775,-8.512923,9.676057,1.318514,6.534263,-1.871680,2.524814,7.745788],[0.633112,-1.349782,8.732596,-9.164262,-6.429644,-8.998950,1.597528,-1.829100,-1.777667,-6.696272,-6.305699,5.667800],[-6.114269,-2.859972,4.578694,-1.010713,-4.577466,6.476073,4.977798,-6.479446,-7.884649,6.740782,0.236303,7.181294]],[[-2.866229,1.182034,9.058078,1.164292,-5.709723,5.170853,6.677609,-9.823479,-1.732828,5.853087,-0.746673,8.658522],[-2.887159,-9.129262,-3.135057,4.912685,8.570391,-4.162530,2.551570,4.863960,2.689217,-0.794324,-7.093128,-5.644357],[-7.428220,-1.664479,7.990455,-6.114679,-4.543957,9.886594,-8.344452,-4.667469,9.096961,-5.740970,-7.269663,4.267303],[-1.081120,-7.415406,-5.565036,4.736260,5.150809,7.540362,-5.036358,-4.991800,-0.424998,0.480444,1.221657,6.600822],[-6.822128,9.519643,3.519354,2.781050,-3.387881,-0.529287,-3.895028,-1.587417,-2.636077,5.509575,0.412174,0.030954],[8.931151,-4.113244,-0.889590,-0.026494,5.527749,8.043136,-7.102491,-4.660982,7.713854,4.194685,-3.798562,8.956384],[-4.525995,8.881581,-2.453004,7.667149,-0.550976,-9.559602,7.263121,5.792455,7.912765,0.764532,5.698838,-1.297523],[0.969319,4.144995,4.470914,-2.045956,2.501427,3.778863,-8.370560,9.812269,-5.676924,-0.833823,-8.315797,-5.727688],[-5.738321,3.673363,8.497486,-7.474682,-9.142874,5.892352,-8.431597,6.464845,4.333587,-7.852183,6.642406,-4.907718],[0.130492,-5.151924,1.713906,0.663231,-3.624230,8.341125,6.981259,-0.447127,2.992988,8.823307,7.445631,2.450630],[-7.144152,2.421933,-8.296761,3.633007,-7.026396,3.167551,8.762748,6.021175,-7.952393,2.970375,5.194854,2.981082],[8.634620,-7.749620,2.837514,-2.333020,7.952488,5.433118,7.564170,-1.824541,-8.307571,9.836243,-8.490256,-7.851134],[-2.200440,-2.924590,1.098575,-1.414971,0.724788,-7.748894,9.747732,-5.592306,-2.421372,-3.259473,-0.179953,0.264363]],[[-0.780709,-6.923058,7.844908,5.665871,8.550740,1.945069,9.982640,6.933689,3.223573,3.791821,-3.675923,0.142332],[-0.848999,0.339808,-0.549562,8.967424,7.673308,-0.679417,-2.023901,-6.427558,3.496242,9.430474,-8.464202,3.801447],[-2.090369,-7.706209,-4.403180,7.326079,0.633306,-0.990438,0.518470,-2.756639,5.259104,2.202422,4.573387,6.721982],[-6.970061,4.521856,-1.168636,-7.560660,-6.604579,0.363371,-7.101500,5.939549,7.317395,-8.153008,9.943123,-8.360238],[9.387802,2.033602,4.043465,9.523354,2.733259,-0.163989,-6.032702,-4.782569,9.343136,3.573673,-0.128395,4.744425],[-0.134363,-4.834784,1.243650,0.392987,-7.382032,2.273580,0.027727,3.960367,6.116004,-2.342718,-5.782358,-4.292791],[1.999535,-6.519483,-9.952911,0.228786,6.477922,2.678859,-9.415665,3.050900,3.017181,7.632342,7.137028,1.657631],[-8.755197,-9.730257,-3.639967,0.531467,6.980495,0.183145,9.800548,-9.221032,-9.299548,6.489009,-3.629381,9.340286],[5.274755,0.056629,-1.032594,-7.714124,-4.934993,7.068278,7.536458,-4.844418,-0.778160,0.959175,1.295447,-9.058555],[4.705139,-8.253416,-2.326742,5.957715,-3.054103,1.366563,5.006822,-3.086665,-4.818685,-3.277672,-6.833805,-1.897520],[-1.525461,-0.821007,-9.999053,1.075193,6.606729,0.553716,2.191496,2.171243,0.210541,-4.598921,-4.484413,1.357467],[5.214953,4.935381,-6.396545,-3.077550,2.036150,-5.255446,-3.314820,3.633997,-3.051318,5.623284,5.292946,3.878289],[3.486678,5.733178,-7.108428,1.756481,-6.828988,4.426625,-6.550575,5.826727,3.612335,8.013366,1.310288,2.260637]],[[-3.064087,6.527195,9.387020,-7.924638,4.877046,4.816094,-0.114995,0.053416,2.905961,-1.736038,-8.158977,6.316560],[7.471283,1.972309,3.792405,-9.179053,-2.832575,7.496696,5.670731,-9.520103,9.462852,-2.041142,-7.541430,-6.127856],[8.616608,-9.576321,-3.071494,8.542841,-0.250764,-2.735946,9.179858,7.631273,-9.963781,2.042128,4.211650,-1.456848],[8.168696,-1.312680,-5.562763,8.495472,6.587735,-4.658310,9.209930,-8.937265,-6.980017,5.041223,5.481161,9.916063],[4.102001,8.497568,0.726132,6.306540,3.729608,-4.336521,-3.307088,1.931746,6.131528,1.297888,9.438840,8.478532],[-0.810145,6.159758,5.784840,-0.590925,7.628437,9.000074,6.224006,-1.029045,7.061073,7.182921,-9.010527,3.673217],[-1.060501,7.609383,-4.495187,9.510781,2.652422,3.513542,-2.495602,-5.059014,0.052212,-8.723223,-4.510348,0.834869],[9.611512,-3.069171,6.989595,-5.490452,-0.078613,0.934064,-9.275668,-2.123653,2.615127,-1.187787,8.669060,-3.259259],[7.517904,9.911585,1.252317,2.188084,0.314238,-5.254882,3.613381,-0.935952,-7.383710,1.194304,5.145735,3.901166],[6.259240,-8.082339,-9.629487,6.271244,0.088500,4.279753,-5.694509,9.818877,-6.736257,-8.380099,-9.119147,-1.403719],[7.194347,5.975725,4.119506,3.941467,3.878079,3.975818,-3.342220,5.119102,8.515363,-7.823648,8.232514,-8.642779],[-0.821746,9.461060,7.006280,6.410836,3.002859,7.633405,2.558631,2.801573,-6.255039,-9.125988,-9.294858,-1.617276],[8.431796,1.688996,5.699767,-0.995569,-7.892675,-4.639005,2.487194,-5.113271,9.328918,8.019496,8.438468,8.926639]],[[1.791867,-9.223217,7.520694,-4.532912,-0.001913,5.646623,9.392838,2.010851,0.352822,6.569361,9.134198,-0.644753],[-4.606346,-8.562682,-1.392953,6.663909,1.418734,3.571136,8.957428,4.964145,8.701644,1.778880,6.139658,4.575880],[-3.866771,0.156320,-5.813618,-8.412472,-3.963698,-5.838109,-8.986613,-6.062876,-3.365588,-8.758644,1.004850,1.358863],[-0.296885,5.415811,0.616858,9.343046,-3.299128,6.465143,-6.321593,7.764116,-6.848970,1.906071,0.120896,9.971054],[-4.897742,4.947709,0.322218,-5.850785,4.396718,7.709035,-8.477275,2.019448,-3.502424,-0.708509,-4.980171,4.842599],[7.286220,-7.043438,-2.985802,-3.053060,5.141862,5.287367,-5.796145,3.970505,8.854133,-3.278229,9.254338,-2.016458],[6.420897,-6.124102,-2.372159,-1.245386,-8.275059,5.676680,-1.810181,3.684115,3.441483,4.529347,3.623933,-4.902794],[1.505784,-8.670104,-1.191944,-9.243646,3.679037,3.036339,-4.214974,-5.061385,-0.450705,-6.430561,4.305765,4.925388],[-2.771856,1.875119,1.867465,-3.499118,-8.815580,8.662329,-5.309448,-1.028011,-2.125260,9.152544,-3.399104,5.729766],[2.209857,7.563053,-8.510320,-2.545075,8.663934,-2.755645,0.933893,-3.863022,3.969759,-4.857063,2.813350,-6.955981],[-7.770548,8.801077,1.324825,-6.754416,-9.862259,0.177916,-9.813058,9.597568,4.207407,-6.362264,-8.478982,7.139585],[-5.605204,5.314248,-8.292468,1.705565,-7.947668,4.977836,8.491543,-1.118434,-1.525707,-8.047320,9.028109,-7.291098],[6.212353,2.830586,1.000772,-9.299552,-5.522446,-0.094998,0.956316,-8.977751,-7.203907,8.735588,6.948015,7.954690]],[[2.318951,-2.248784,6.588413,-1.101444,9.328453,-2.119715,-7.608978,-4.544638,3.992599,9.198905,-5.236051,-1.722915],[-9.421315,-1.831816,9.324385,9.049975,-6.038822,-2.317742,-9.840574,-4.655564,-1.983712,4.334280,8.953648,-5.236582],[-2.445649,7.106098,2.134191,9.543096,4.778593,2.092549,7.448789,-4.141804,-9.912799,8.761565,1.444593,-4.965348],[-8.346851,-3.665703,9.153120,-1.217133,-1.854719,-1.281685,5.628741,4.923258,5.508988,-4.350257,6.352526,-6.579528],[8.841642,0.543301,-9.761083,-6.477116,8.593634,-4.139512,8.604356,-9.947303,2.082175,5.769270,-7.128344,0.728325],[2.284549,-6.898425,-3.412098,-0.563671,-3.614666,-4.087797,8.565930,9.365591,6.066652,7.888559,5.227204,7.899385],[-8.504206,4.057675,2.825459,4.742956,-8.056861,-2.773681,-5.939906,-5.358250,-6.340281,6.655252,-7.367065,-9.435457],[1.496234,-5.091007,2.382999,1.206206,7.210829,-6.659880,6.845089,2.106360,3.940665,8.909855,2.122746,-6.401132],[-7.727223,9.879945,-6.443535,2.175307,-2.589779,-0.518125,0.595216,5.220660,8.953851,6.387269,5.746445,-2.689806],[-0.924571,1.058084,-8.833936,8.580708,7.352134,8.003408,-5.556164,1.989021,-2.477824,-9.575160,6.593826,-5.295073],[3.450212,-3.407277,3.637871,4.783185,-2.443240,9.336716,-0.054991,5.926102,6.664970,-4.403683,4.255249,-6.336958],[8.275762,6.274696,0.874413,9.896353,-8.718368,9.641346,0.760757,3.159902,4.837864,-8.526728,-9.885436,-0.892729],[-6.713805,4.070554,-0.131469,0.067019,8.499262,5.990124,6.548580,1.692939,-9.015816,2.172001,-6.373844,7.088967]],[[7.884887,9.632513,0.648822,8.757140,-3.610215,-3.663178,3.872235,1.297460,-5.173584,5.692679,9.864675,9.790786],[7.559211,6.543044,-6.503501,-7.166214,-0.081081,0.101636,5.946222,1.936431,7.378059,-6.794208,-1.844070,9.357749],[-4.593030,-9.708369,-2.564204,4.444436,-3.983317,5.602457,1.526283,-9.404597,3.187165,-0.525575,-7.884655,7.376464],[2.017559,-9.467921,5.654266,-6.090349,-0.954052,8.000064,9.904325,9.633057,-2.149553,-5.475382,-3.045531,2.499529],[-8.841810,-3.515442,-3.502561,-7.429021,4.989193,5.700175,7.903550,2.720442,-8.522275,-9.094606,3.157224,5.861957],[-2.809115,-1.398107,-7.076822,-8.133320,5.160542,4.285686,-7.944835,4.791386,9.440695,-5.509944,-4.542182,-6.752217],[0.613994,-6.414191,-2.754157,-4.118766,2.635121,8.595216,-5.082305,-9.755220,-3.115293,0.370333,-0.365041,7.719214],[3.359472,-0.398726,4.756775,-4.083836,6.593958,9.556564,-2.703955,-8.005089,-5.994215,6.304708,7.024086,-5.982722],[-4.984772,1.297240,-9.101110,-0.271167,-5.183360,-8.408226,8.056956,-6.578911,3.539063,6.261630,8.737909,-7.155106],[8.854969,8.365188,7.532077,1.058613,5.205242,-7.167202,8.436614,-5.043841,6.842757,0.743579,0.235937,8.067253],[7.456790,4.443524,-7.705603,6.009240,0.618685,6.752030,-8.093902,-2.891535,9.642670,-2.854206,1.897053,-0.108440],[6.406051,-3.886901,-9.013061,6.088298,-6.406966,-2.173527,-5.035849,-8.757653,-2.299623,9.063437,-7.777443,4.819358],[-5.451640,-4.071907,-4.050465,9.171391,-2.913398,-9.832480,1.571221,2.879225,-9.608160,3.479845,8.594675,5.522532]],[[2.918418,-8.342028,-4.056278,8.082110,6.062973,8.489647,-5.181469,6.755751,-8.685835,7.075007,-7.527274,6.742080],[0.359697,2.917577,-3.868773,-2.225585,9.510148,-5.974084,-6.705843,2.566159,4.920788,7.248965,4.600733,8.021832],[5.497221,5.222911,8.136042,-3.506173,4.293678,4.760763,-4.267867,4.296231,-9.209279,-0.822010,8.899225,4.328817],[-1.281476,1.337415,2.332681,7.462979,5.652250,-9.420229,5.593034,8.598781,0.284104,-2.112676,7.772918,9.413570],[3.230495,-7.195397,1.675111,-8.537637,9.626056,9.824430,-1.668316,6.539986,-2.534851,-3.532684,-4.910000,-2.294850],[-7.618870,-0.067976,1.193870,5.211353,3.441498,7.854985,6.148244,-7.283945,5.162857,-7.281984,-0.119312,-2.018337],[0.686974,-2.845423,-9.687693,3.349971,9.426937,-5.241105,-1.939004,-6.434214,-6.006158,-5.276381,3.393038,-3.373247],[4.376616,-1.543665,-1.573240,-2.199289,2.459670,9.957631,7.421781,-7.965078,-9.804860,9.910007,-0.492640,-4.251543],[-1.272478,5.258584,6.794931,-7.046018,-1.012499,-5.555332,0.276600,-9.564203,8.235357,9.195444,3.849952,-9.359655],[-6.997753,-2.274854,4.032547,5.334011,4.381862,2.045402,-9.177723,7.445029,-1.592738,0.327873,-9.973227,-7.648967],[-9.216128,7.918479,1.596838,0.639137,1.075150,-5.795734,6.727491,-5.965867,-4.877411,3.389362,-9.905811,7.147475],[5.198033,-4.783633,9.484632,5.961161,-9.268168,9.295272,-3.735089,-7.448814,-9.450830,-0.484757,-4.028153,-1.088781],[-0.176475,-7.006443,2.807521,4.640814,-4.180378,-2.730361,-8.730165,6.932119,-6.924144,-5.161428,-7.561762,5.714061]],[[-0.658919,-6.395942,-6.207453,5.507726,-6.336311,6.391124,-8.455709,-2.185294,4.174546,-8.236958,4.963650,-9.107919],[-6.616969,-8.953803,5.987592,3.283825,-2.756078,6.987690,-7.983995,8.740243,-1.923281,-5.742593,-0.359908,3.501854],[-1.095802,0.054318,-5.844888,4.271032,1.131086,4.613025,7.260129,-5.067120,-7.066466,2.451205,-3.036895,1.631087],[1.983326,7.958356,8.009874,9.497206,-5.851202,6.861358,1.498328,2.158323,-6.274031,6.814190,6.599177,8.317923],[7.081024,5.252222,-9.695728,-0.051828,-1.990621,3.924244,2.367923,2.403255,6.521838,-2.065979,-0.987124,6.217117],[-3.849780,-5.289852,-4.020378,4.568538,-1.928382,-1.844295,6.508835,9.300432,-9.785522,9.917675,2.257294,-4.125819],[1.687594,7.809058,-4.931291,1.876925,-8.141514,4.638205,3.646107,-2.873301,6.863101,-1.453951,-8.791187,-8.801922],[-2.263305,-6.988206,1.573945,8.781272,9.600565,-7.840482,0.790575,-9.795593,3.566605,8.324926,-5.829996,0.911202],[-7.069079,-1.141232,4.726116,2.645713,3.986590,5.558458,-2.501989,9.612677,-0.082984,-2.684889,6.248018,4.424183],[-9.089338,-1.056053,-7.916090,-8.464462,6.106025,9.558238,4.496458,8.720478,-8.636812,3.001022,3.061515,-3.568149],[-5.192807,9.352323,4.867123,5.194614,3.329917,-6.206184,7.206823,-1.645295,-0.437919,1.893141,5.114820,-1.758031],[3.329092,-1.551531,-9.582232,-2.638980,6.891835,1.067959,-6.941649,-1.297656,-8.027462,-2.471867,8.461445,-1.754665],[-6.334309,-1.594194,-8.625580,-1.812123,-2.173077,-9.426264,4.719856,-0.297794,2.122580,-1.933827,-3.978851,9.906537]],[[0.728132,-5.470094,7.487813,-0.975193,-6.744271,5.025689,5.624175,-4.280185,-7.503765,5.858802,-3.992045,2.810679],[6.694009,8.448135,-7.319020,-1.654914,-2.638714,2.782822,4.029454,-0.409108,-3.698039,1.948996,6.421297,1.326386],[-0.808653,1.003493,-0.003287,-8.938738,-6.203349,1.906012,1.320483,2.733554,-0.839151,6.141089,-8.924947,3.706754],[9.360714,9.463479,4.050407,-9.646442,5.806897,-2.988588,-0.470587,9.554847,-3.843307,-3.273776,-0.795034,-5.483377],[-8.033957,-6.167961,2.995318,0.010232,-6.301579,8.570926,6.105674,-5.462031,5.690321,8.446236,2.377654,8.210036],[7.570814,1.873938,6.430649,8.275903,2.947558,-7.968304,2.770377,1.836911,-9.715816,0.596948,4.175472,-5.066847],[-8.195717,-3.779368,-8.199882,-7.628159,5.648863,0.212584,4.825016,-9.312264,3.221971,3.725513,-2.970512,-3.387703],[8.011458,6.156491,5.697731,2.916123,3.187184,-5.247033,1.591941,7.340888,-1.581457,6.335279,4.704187,6.707033],[5.639500,-1.882120,8.056920,-7.418662,-5.773025,0.692828,-0.926486,-7.794765,7.068416,5.374712,7.354496,8.512595],[-4.557374,4.133214,3.594317,-9.276189,9.586237,-9.788850,7.089330,1.397525,-2.677659,-0.687172,7.627388,-5.656243],[3.107035,-3.950032,9.772315,-8.389450,-9.927819,0.002464,-0.680378,-8.393342,-6.453264,1.324965,-2.251811,-5.216053],[2.921677,4.228404,9.277887,2.321441,6.167045,7.869149,-1.166837,-0.251782,4.472819,-2.820422,0.428394,6.923244],[2.462579,-0.425174,4.849892,7.198322,7.264461,8.424729,-3.818317,7.207379,-6.948226,-9.223636,-2.801176,-9.037926]],[[9.601263,-3.751864,9.475210,-1.054255,-4.187974,-0.724708,1.745310,-0.499407,-9.935715,4.560402,2.795990,1.279573],[4.301667,-3.302478,-1.055111,5.227386,8.945151,8.283537,2.105204,3.784963,-3.323154,3.333798,0.327782,-2.078149],[-9.988588,2.547332,-4.711665,3.516529,-7.840118,2.869752,-2.643041,-5.192563,-9.425619,6.798478,-6.242104,6.490311],[-3.637988,-0.432675,3.566662,-7.687646,6.442882,9.520979,-2.516933,4.828515,-7.893196,6.460478,-7.803542,-6.536624],[2.413699,-2.272463,-8.231753,-3.930751,6.825523,6.096309,0.316727,-5.199240,2.774542,-6.361048,-0.305118,-1.149040],[1.950867,-3.011485,-8.879349,-9.372077,-6.563950,5.067733,4.916380,2.720663,-9.017168,5.900561,-4.063792,-4.442205],[0.948806,0.027855,0.883314,-4.263001,-0.762749,-0.409364,2.591459,-4.780706,9.814817,-9.475173,-8.890094,5.473293],[-7.615899,-4.548524,-8.387215,-8.381613,-3.362933,-0.844930,-4.708286,-5.408098,5.664154,4.755380,2.885243,-6.328644],[7.511306,4.944285,-0.254974,-8.558020,2.231749,-2.273022,-3.400335,2.047972,-5.849016,-9.909192,-1.641531,2.702108],[7.281224,-8.772375,6.836530,5.191733,-1.638417,-5.112472,-3.749319,1.829070,3.600220,6.991042,4.831308,-6.038633],[-3.917777,-6.685533,4.407381,-9.397156,-8.832055,-3.800180,7.279245,-0.634357,-9.331581,5.861512,6.709922,2.417996],[-5.822442,-0.473857,8.558179,7.641463,0.850810,5.900267,-1.410751,3.458442,-4.756238,-6.486850,-5.175415,9.813520],[3.274481,9.974474,-2.403712,5.593102,4.757802,-1.202197,7.797196,8.119151,7.717051,2.937680,-7.243007,-2.454963]],[[-6.957262,9.451813,5.057627,-6.838412,5.545311,5.652438,-3.094804,-7.429722,1.118271,-5.557865,-8.790982,9.801625],[-3.579452,1.631818,-3.343017,-9.525301,-4.904907,2.181456,-5.208099,-1.267071,5.477223,7.020905,9.523496,5.716612],[-0.597316,8.274274,8.890720,-1.756894,2.942377,8.081757,6.124063,0.396707,8.462708,1.180919,-3.270799,9.832793],[-6.465804,1.584749,-6.252646,-1.292187,-7.490117,3.253127,-2.031622,-8.710919,-9.734140,8.151130,0.360951,7.891610],[9.269589,-5.079109,2.079346,7.858675,3.811134,2.995827,-2.932464,-1.339963,2.105336,-0.238230,-3.777944,4.616731],[-3.833358,-4.511913,5.981965,-3.492191,1.128786,-7.420646,-7.286277,-2.841321,-2.487943,2.123371,9.770201,-2.044632],[-6.931475,-1.726115,4.916955,2.649814,1.174832,1.590772,2.183119,3.542941,-2.385005,3.379758,-9.322804,-6.958784],[5.123901,4.706749,-1.112116,4.888112,-0.487279,3.325017,-2.776946,-4.319137,-7.312349,-3.177270,5.203987,-8.300841],[-6.636297,8.705992,3.689535,5.137180,6.599457,3.748344,-7.763551,-1.577947,5.841262,-5.833957,-7.088296,5.005037],[-7.680791,0.252532,8.814248,-1.079003,4.947697,-2.356855,8.389343,-0.770421,-9.978561,-1.612558,-6.401518,-6.788863],[-3.277707,0.392525,8.114247,-5.638304,6.892203,9.208161,1.094387,-0.697545,3.177709,-1.420549,-7.681154,-2.646546],[-6.541067,-0.867928,3.045607,-7.354781,1.272201,6.754150,-4.767148,7.447931,4.374382,7.284797,-8.305905,7.676971],[-1.946657,-4.072130,-9.539011,-8.846935,-0.304082,-7.937974,9.863162,0.867029,-0.456871,6.133372,-7.233695,-6.177801]],[[0.917411,1.363782,1.457448,-5.118891,-3.560462,3.102962,3.661616,1.757718,-9.690116,5.417748,1.791646,-1.549313],[2.396343,-5.865938,-9.539542,0.799537,-3.061933,3.706567,-3.705380,-1.402621,5.677443,4.137968,7.011897,-4.168049],[-8.141513,0.782097,-3.059066,-8.476298,9.384373,-3.246686,2.596566,1.218628,-7.339524,-7.577070,-0.425095,3.659805],[-6.274563,-5.919676,8.000297,6.762084,0.350862,0.304402,-4.535336,0.872218,1.171295,-0.664394,-2.980411,-7.763092],[-7.516018,1.515821,8.574669,-6.485983,3.698239,2.949398,8.208131,1.733584,4.657960,6.523616,-7.340087,5.695709],[-6.874342,-7.189715,-8.516917,5.320918,2.276786,2.008406,8.746948,-9.690084,8.962757,3.020737,-5.897955,7.755345],[-3.086220,-2.188159,7.655065,-6.025656,2.009326,-3.210034,0.771280,-3.682616,-0.573578,-9.642692,-2.202919,3.181890],[-7.169228,-6.156527,6.743057,3.861711,-0.364032,-1.415612,9.028285,3.446607,9.541275,-7.109103,5.885830,-4.879131],[1.808902,8.159270,3.673753,3.172965,-0.149125,7.775458,2.428554,6.071894,-2.575699,2.070037,-9.046634,-0.489259],[3.357751,-8.874775,0.833334,-9.491536,8.072014,-2.750856,-1.097451,9.468318,-2.007617,-6.071531,0.720910,6.254670],[7.948078,9.359411,-0.237917,-5.944133,6.144929,-2.484881,0.160966,0.262669,9.045756,1.123620,7.312055,-7.471108],[2.265003,8.613581,-5.420752,-3.208296,1.208870,6.464936,2.908829,3.409128,-1.714057,-2.904872,9.018033,9.394756],[3.826664,-7.076443,0.724297,-4.279790,-2.475604,8.681752,6.733084,-5.615471,6.712141,-7.072573,9.010048,3.731098]],[[8.596084,9.826426,0.742937,9.735215,-6.111933,7.102452,-8.728267,-8.123826,0.973432,4.093178,-9.590031,-0.103951],[5.231844,-7.901754,-3.688153,9.654606,4.829974,-4.090296,0.819556,-6.469459,-3.539805,9.834687,3.119495,5.661946],[8.022363,7.610153,-4.640122,0.783004,-6.876452,5.153947,-2.848877,9.166310,7.576258,-9.888601,4.430649,-6.269032],[2.546344,1.335003,-6.507212,0.580052,5.933989,4.470421,-2.537829,-0.448609,-9.634648,-4.469841,-3.358115,6.906881],[3.454286,-2.822663,-3.072280,-7.824349,-6.358451,-4.315948,-5.043122,-5.693881,7.629122,-8.853585,-3.648763,-0.648437],[-4.433690,2.164966,-4.362022,-2.042681,9.209523,1.744670,-1.143214,0.127300,1.930147,6.527293,6.167607,6.628785],[4.002481,4.717039,-4.731609,-6.949439,-6.928732,9.086753,-5.729182,-3.946453,-9.623158,4.238479,-1.269146,4.883446],[3.414078,5.333668,-6.181551,7.086770,-8.712450,-8.661954,-7.576059,8.476083,-1.064128,-7.614283,0.701244,-6.303408],[-7.858549,-1.965079,-3.214211,-0.136521,-4.696638,6.407971,-3.858537,-0.423809,7.620258,-0.670305,0.820029,-6.677856],[-8.322036,2.462277,4.862203,-6.952592,8.629782,-3.058158,-0.853298,7.486724,7.282078,-1.965606,8.074130,-8.678086],[6.487865,4.987847,7.231879,-2.181770,-6.760125,6.910613,-6.353805,7.679449,-9.566610,7.926540,-6.658720,0.658143],[4.757804,4.531607,-5.215411,9.811066,-0.098154,-2.713825,-6.198114,-1.093395,-1.604937,0.140419,5.516420,0.643166],[-0.923426,-2.101815,4.916233,-7.981956,8.455275,-6.856918,-5.209923,6.756061,-1.530788,-5.503260,4.900410,1.420108]],[[-6.789558,-6.455091,7.241799,7.980608,-0.528992,-5.705337,2.478439,9.426878,-4.095986,-8.712519,2.772598,-5.912830],[6.071976,6.541684,6.376165,0.876251,1.233058,5.393379,2.566025,-0.967860,-5.657369,4.284751,-8.366029,8.367926],[-3.193426,9.107520,6.440401,2.255939,-4.192939,7.702319,1.012048,4.387692,-1.698567,0.423347,5.954363,-8.746949],[-1.122759,3.666046,-7.285772,-2.060607,-9.056630,-7.696996,7.889285,-4.413909,-5.393895,7.347094,-9.209452,-7.107685],[6.106258,-9.112128,-7.213110,-9.216534,2.357635,1.376562,-5.647696,-0.328920,9.391759,4.944140,3.054356,-1.611651],[3.763655,5.420042,-1.128204,1.925898,-4.669914,-8.006744,-4.772453,9.987150,-3.946404,9.189923,-5.724593,0.774429],[-6.738503,-1.482816,-2.573637,-2.846071,-6.238697,-8.767923,6.806523,-9.065435,4.956179,-1.408962,-8.108163,0.351847],[-0.141778,5.308643,3.255759,-1.190127,7.114852,1.422336,2.611576,-0.322275,1.170171,-9.722637,-1.329507,-4.715649],[7.225917,6.427881,8.747577,-8.062989,2.853217,-8.767642,-2.448314,-6.015605,-6.337222,-3.984013,2.621280,2.644498],[6.939759,-4.004803,3.175638,4.101877,8.403776,-9.199136,-2.796508,9.104296,-2.109083,-9.101323,-5.080240,4.586412],[-6.785978,3.182862,-2.628564,-4.224630,-8.754861,8.914921,-7.624293,9.218669,4.276707,-2.996651,-5.088693,8.765340],[2.897808,-1.637893,-6.851579,-3.482718,3.488814,9.289851,7.659618,5.107908,-6.249510,4.612325,3.042414,-0.205241],[-2.650770,-5.224945,-9.746788,6.975495,8.065185,-8.432570,0.953037,-9.395715,-3.938471,-0.038597,-1.663286,9.388053]]], dtype = "float64")#candidate|6696|(15, 13, 12)|const|float64
bop_6697 = relay.floor_divide(const_6695.astype('float64'), const_6696.astype('float64')) # shape=(15, 13, 12)
output = relay.Tuple([bop_6697,])
output2 = relay.Tuple([bop_6697,])
func_6703 = relay.Function([], output)
mod['func_6703'] = func_6703
mod = relay.transform.InferType()(mod)
mutated_mod['func_6703'] = func_6703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6703_call = mutated_mod.get_global_var('func_6703')
call_6704 = func_6703_call()
output = call_6704
func_6705 = relay.Function([], output)
mutated_mod['func_6705'] = func_6705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5994_call = mod.get_global_var('func_5994')
func_5996_call = mutated_mod.get_global_var('func_5996')
call_6749 = func_5994_call()
call_6750 = func_5994_call()
output = relay.Tuple([call_6749,])
output2 = relay.Tuple([call_6750,])
func_6758 = relay.Function([], output)
mod['func_6758'] = func_6758
mod = relay.transform.InferType()(mod)
mutated_mod['func_6758'] = func_6758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6758_call = mutated_mod.get_global_var('func_6758')
call_6759 = func_6758_call()
output = call_6759
func_6760 = relay.Function([], output)
mutated_mod['func_6760'] = func_6760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6471_call = mod.get_global_var('func_6471')
func_6473_call = mutated_mod.get_global_var('func_6473')
call_6780 = func_6471_call()
call_6781 = func_6471_call()
var_6807 = relay.var("var_6807", dtype = "float64", shape = (14, 2, 10))#candidate|6807|(14, 2, 10)|var|float64
bop_6808 = relay.equal(call_6780.astype('bool'), relay.reshape(var_6807.astype('bool'), relay.shape_of(call_6780))) # shape=(14, 2, 10)
bop_6811 = relay.equal(call_6781.astype('bool'), relay.reshape(var_6807.astype('bool'), relay.shape_of(call_6781))) # shape=(14, 2, 10)
output = relay.Tuple([bop_6808,])
output2 = relay.Tuple([bop_6811,])
func_6825 = relay.Function([var_6807,], output)
mod['func_6825'] = func_6825
mod = relay.transform.InferType()(mod)
var_6826 = relay.var("var_6826", dtype = "float64", shape = (14, 2, 10))#candidate|6826|(14, 2, 10)|var|float64
output = func_6825(var_6826)
func_6827 = relay.Function([var_6826], output)
mutated_mod['func_6827'] = func_6827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6434_call = mod.get_global_var('func_6434')
func_6435_call = mutated_mod.get_global_var('func_6435')
call_6907 = relay.TupleGetItem(func_6434_call(), 0)
call_6908 = relay.TupleGetItem(func_6435_call(), 0)
func_6186_call = mod.get_global_var('func_6186')
func_6188_call = mutated_mod.get_global_var('func_6188')
call_6920 = func_6186_call()
call_6921 = func_6186_call()
uop_6945 = relay.atan(call_6920.astype('float32')) # shape=(14, 2, 10)
uop_6947 = relay.atan(call_6921.astype('float32')) # shape=(14, 2, 10)
output = relay.Tuple([call_6907,uop_6945,])
output2 = relay.Tuple([call_6908,uop_6947,])
func_6948 = relay.Function([], output)
mod['func_6948'] = func_6948
mod = relay.transform.InferType()(mod)
mutated_mod['func_6948'] = func_6948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6948_call = mutated_mod.get_global_var('func_6948')
call_6949 = func_6948_call()
output = call_6949
func_6950 = relay.Function([], output)
mutated_mod['func_6950'] = func_6950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_6984 = relay.TupleGetItem(func_5938_call(), 0)
call_6985 = relay.TupleGetItem(func_5939_call(), 0)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_6999 = func_5541_call()
call_7000 = func_5541_call()
output = relay.Tuple([call_6984,call_6999,])
output2 = relay.Tuple([call_6985,call_7000,])
func_7017 = relay.Function([], output)
mod['func_7017'] = func_7017
mod = relay.transform.InferType()(mod)
mutated_mod['func_7017'] = func_7017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7017_call = mutated_mod.get_global_var('func_7017')
call_7018 = func_7017_call()
output = call_7018
func_7019 = relay.Function([], output)
mutated_mod['func_7019'] = func_7019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6758_call = mod.get_global_var('func_6758')
func_6760_call = mutated_mod.get_global_var('func_6760')
call_7046 = relay.TupleGetItem(func_6758_call(), 0)
call_7047 = relay.TupleGetItem(func_6760_call(), 0)
output = call_7046
output2 = call_7047
func_7049 = relay.Function([], output)
mod['func_7049'] = func_7049
mod = relay.transform.InferType()(mod)
output = func_7049()
func_7050 = relay.Function([], output)
mutated_mod['func_7050'] = func_7050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6758_call = mod.get_global_var('func_6758')
func_6760_call = mutated_mod.get_global_var('func_6760')
call_7064 = relay.TupleGetItem(func_6758_call(), 0)
call_7065 = relay.TupleGetItem(func_6760_call(), 0)
uop_7071 = relay.sigmoid(call_7064.astype('float64')) # shape=(3, 1, 1)
uop_7073 = relay.sigmoid(call_7065.astype('float64')) # shape=(3, 1, 1)
output = relay.Tuple([uop_7071,])
output2 = relay.Tuple([uop_7073,])
func_7075 = relay.Function([], output)
mod['func_7075'] = func_7075
mod = relay.transform.InferType()(mod)
output = func_7075()
func_7076 = relay.Function([], output)
mutated_mod['func_7076'] = func_7076
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7088 = relay.var("var_7088", dtype = "uint8", shape = (8, 10, 14))#candidate|7088|(8, 10, 14)|var|uint8
var_7089 = relay.var("var_7089", dtype = "uint8", shape = (8, 10, 14))#candidate|7089|(8, 10, 14)|var|uint8
bop_7090 = relay.minimum(var_7088.astype('uint8'), relay.reshape(var_7089.astype('uint8'), relay.shape_of(var_7088))) # shape=(8, 10, 14)
func_442_call = mod.get_global_var('func_442')
func_444_call = mutated_mod.get_global_var('func_444')
const_7096 = relay.const([8,-9,5,7,-2,7,2,-10,2,2,5,3,8,-9,-6,7,-2,-3,8,5,2,-9,-6,3,1,3,5,-8,-5,-7,-3,5,1,-2,-7,-8,-1,-5,-9,6,-6,-8,2,-5,10,9,8,-9,-9,5,-10,-5,1,-7,-2,10,9,-8,-1,9,5,-9,2,-2,-8,7,2,-8,-5,5,5,3,3,-6,-4,-10,-5,-4,6,7,4,4,7,-1,7,10,-3,-10,4,-3,-1,7,-3,-2,-6,-4,3,6,-10,-4,5,10,5,-6,-6,-7,-3,4,5,4,-2,-4,6,7,-9,2,-3,3,4,8,8,6,10,-5,3,8,8,2,-4,-10,10,-8,-6,-2,8,-8,-3,-6,-4,10,2,5,-2,4,8,8,5,2,6,-10,3,-1,-4,-1,-9,8,-1,-3,-1,-8,8,8,1,-5,-3,-1,2,-7,8,7,-1,1,9,4,1,-1,-7,2,-9,4,1,10,-7,2,-9,5,5,3,-1,5,8,-3,-3,4,4,-5,5,-10,4,-10,-4,-2,-4,-2,1,-9,3,3,-8,9,-7,7,-10,4,3,-7,-10,6,4,-9,7,-2,-9,-8,4,-9,2,2,-6,-7,2,-6,3,-8,-9,-9,-6,-9,-10,4,-6,2,10,1,-2,-5,-10,-9,-2,-9,-6,9,3,-9,-5,-4,7,-1,4,4,-10,-10,-9,-5,-6,4,-5,3,9,9,-6,-6,-3,-1,1,-10,-4,1,-9,-6,1,6,3,3,5,7,-9,6,4,-8,3,-5,-10,2,-5,4,-10,-3,4,-4,-10,-2,-8,10,4,-6,-5,5,9,5,-8,1,3,-3,-2,8,2,10,8,1,-7,8,7,-9,1,-10,5,10,-7,-5,-2,10,2,-3,9,2,-2,-10,-6,-7,3,9,-9,5,2,5,-2,-7,5,7,-3,-2,1,-3,-10,-7,8,-2,5,-2,-7,10,-2,-8,-4,-10,3,-1,3,5,-2,8,-6,-8,-8,-7,-9,-6,3,-7,6,5,9,-8,-10,8,3,4,6,2,2,7,-8,2,5,-10,7,4,3,-10,3,7,-4,5,4,-2,-9,-10,3,8,-3,1,-4,-6,5,10,-4,3,-1,-5,-8,-3,-9,-3,7,10,-10,10,8,-10,3,-2,-8,-4,5,-4,-8,1,-2,-10,6,10,5,-7,-9,-5,-7,-9,3,-4,3,-3,-4,10,1,-8,-4,-2,-10,9,7,2,-2,-9,-2,-5,-10,8,5,4,2,2,10,-2,-4,-2,6,5,2,-4,8,1,-10,-3,-1,-2,9,-8,7,-3,-2,9,6,-7,-7,-5,2,2,7,6,4,-10,1,6,-7,-10,4,6,-3,-10,-3,7,1,7,7,-7,-3,-6,4,-4,-8,9,-4,-4,7,9,-9,7,-8,-9,10,-5,-2,9,2,-6,-6,4,7,8,10,-5,-6,10,-7,-10,-6,1,-6,3,-2,8,-3,9,-10,5,6,10,2,-7,-10,5,-2,3,5,-5,4,-6,-8,6,-5,8,1,-5,-10,2,-9,-8,-3,8,7,-8,9,-8,10,4,7,7,2,10,4,3,-1,4,-10,-4,8,-9,-6,5,-3,3,3,-9,-2,8,-3,9,10,7,-10,8,-5,-6,-6,-8,1,8,-9,-10,7,7,7,-3,-1,-8,3,10,4,8,-8,8,6,-5,4,8,-3,1,-2,8,5,6,-5,6,4,-7,8,4,-3,1,-6,9,5,-9,4,-2,-7,-7,-5,-10,-6,-3,-4,8,-6,5,9,1,-3,9,-10,-6,-9,7,-7,5,8,8,3,-1,7,2,1,-8,-4,2,7,-2,5,2,-8,7,-5,10,-1,8,7,1,-3,-2,7,-2,-4,-3,-4,2,2,-10,2,-6,8,-2,5,-3,-4,7,1,-8,-4,3,-5,-9,-4,-5,-6,-3,4,1,9,-8,-1,6,2,4,-2,3,-3,6,1,8,-10,-6,-4,-4,1,8,6,-3,-6,4,5,7,10,-9,-5,-2,6,1,-3,5,-6,-7,6,1,-6,-2,-4,2,10,-9,-6,2,-7,4,-8,7,3,-8,-5,-1,-6,3,-9,6,-4,-6,3,4,1,-3,8,-2,-3,8,-9,-8,-1,7,-6,1,7,2,-7,2,-6,-6,-5,5,-9,6,3,5,7,-6,-6,-6,-6,4,7,-1,1,7,-6,-3,-7,-6,-7,4,4,8,9,-2,-4,-2,2,-4,-3,-10,5,-5], dtype = "int64")#candidate|7096|(840,)|const|int64
call_7095 = func_442_call(relay.reshape(const_7096.astype('int64'), [4, 14, 15]))
call_7097 = func_442_call(relay.reshape(const_7096.astype('int64'), [4, 14, 15]))
func_5621_call = mod.get_global_var('func_5621')
func_5625_call = mutated_mod.get_global_var('func_5625')
const_7104 = relay.const([-1.398853,6.433821,0.401152,1.311955,-2.250387,-1.352038,6.165089,-7.608360,5.002832,-3.391055,9.269322,-6.178109,-9.375216,-9.736147,0.629641,-3.588534,1.457149,3.659778,-9.363876,1.110778,1.936699,7.360547,7.772612,-3.778141,-5.543900,-8.733367,-4.241613,8.555136,4.354462,-3.061009,2.234259,-3.882100,-3.492961], dtype = "float64")#candidate|7104|(33,)|const|float64
const_7105 = relay.const([-2,10,5,-7,-5,-4,-8,5,8,3,6,-9,-1,-4,-2,3,-6,-7,4,-9,-1,-6,-5,4,7,-1,3,6,5,-2,-3,-4,-9,-3,2,-10,4,-4,8,-4,9,6,5,5,-9,10,3,4,-4,-5,-10,3,-2,3,-7,3,-4,8,-10,-3,2,-5,-7,9,10,2,-8,2,-2,-7,3,6,10,9,1,-3,5,-9,8,6,1,-6,2,8,6,-6,-5,8,-8,-7,9,3,-7,6,10,3,-1,10,-10,9,4,-5,-8,6,10,-5,3,-2,-2,-6,-2,4,10,7,2,6,-9,-7,-3,-3,6,1,7,10,4,2,6,9,1,6,10,-1,2,-8,-9,-8,-8,-4,4,4,1,4,-1,-1,-9,-6,-8,9,-5,5,-7,-10,-1,10,10,5,-10,-7,4,-3,-7,-3,6,-7,9,6,4,-1,-10,-4,6,2,-10,7,8,-8,-1,-4,-3,7,-4,7,8,-4,-2,-1,-8,6,-3,-2,5,10,1,2,-6,5,3,-7,-4,9,1,-4,-2,-7,-5,8,10,-7,-3,-4,-9,6,-3,-1,5,-2,-10,5,9,9,-2,-6,-6,-5,4,-5,-8,-3,3,9,3,-4,10,-5,3,4,2,10,-7,-4,-4,-1,1,7,-9,-3,8,7,7,10,7,-7,-6,-4,2,3,8,-8,10,-4,2,3,-5,1,-2,3,-4,6,-5,-4,-10,-3,-3,-9,8,3,-9,1,7,-5,10,-8,-6,6,-7,-10,-9,7,-4,4,10,-2,-4,-2,-5,-7,6,-1,2,-6,10,-7,-9,-1,-3,-4,2,3,-1,6,3,-10,1,-1,-1,-3,5,9,6,-6,7,-3,10,-7,-10,-4,8,-2,-7,3,10,-10,8,8,1,5,7,-9,6,5,-8,-9,-7,7,-3,-4,8,9,-3,-2,-2,4,-6,6,8,-10,-2,-5,1,3,-6,-9,10,10,5,-10,10,-8,-9,-10,8,5,10,-1,4,5,10,6,-1,5,-10,-7,-1,7,-1,-6,9,-1,3,-2,-3,-9,-10,-4,3,1,4,-4,-2,4,-9,2,-4,-7,-4,-4,-5,-1,9,-7,3,-6,5,4,10,-3,-10,7,10,3,-2,-1,1,3,5,2,10,-7,-5,-4,-8,-4,-4,6,-4,7,5,4,-10,-8,10,7,8,-7,-4,10,8,4,-6,7,7,-7,-4,10,1,-2,-8,1,4,10,8,2,5,-9,4,2,-4,6,1,5,-4,3,8,9,-1,-10,9,7,7,5,-4,5,-6,-7,6,1,8,3,7,6,1,8,-7,3,1,-3,5,-4,-8,-9,2,6,3,6,3,9,7,3,-2,-5,-4,-7,-8,-1,-1,-3,-10,3,-10,5,-8,-7,-4,8,-9,-7,3,4,-5,8,-5,9,9,9,10,5,10,4,4,-8,-4,6,8,-7,-4,1,5,5,1,-5,9,8,4,1,-3,-3,-5,6,-10,8,-9,5,8,-10,-5,-1,-7,-4,-2,-10,-6,-4,3,-4,-3,9,1,6,6,-10,10,-5,-10,-9,6,9,-4,2,-3,10,-9,9,-5,-1,2,-1,-1,-1,-5,-3,-2,2,-5,3,1,7,-4,-3,-3,1,-4,-10,-1,7,-3,-9,-3,1,5,8,-9,9,-3,-4,7,-4,2,-5,8,2,-2,-8,-2,-5,-5,7,9,-9,10,-1,-1,-5,10,7,-2,1,10,1,10,-2,-8,-9,5,-9,1,2,-4,8,-9,-4,-6,6,-4,-9,-10,9,8,-7,8,-9,-6,5,-10,-6,8,9,-4,-9,2,1,8,2,-2,10,4,10,-2,2,8,10,-9,-9,4,9,7,-7,-4,1,-9,5,-2,-5,-10,8,-8,-3,7,-8,-3,6,1,-2,-4,8,-4,7,7,-4,-3,-4,-1,6,2,-9,-4,-2,-8,-7,-9,-6,-7,-1,-6,-3,9,8,6,-10,-1,-1,3,8,-10,-4,2,-2,-4,5,-9,-9,-6,10,2,-8,10,7,-7,-5,-2,5,-10,2,1,-3,6,3,-10,1,3,-6,3,6,-10,6,-3,-5,8,-8,3,-3,5,10,-9,9,2,-6,-9,-4,7,-1,3,-5,1,1,-9,4,10,-9,-7,-2,-4,-6,3,1,2,-10,8,-5,1,7,-2,-1,-7,3,1,-4,4,-7,2,6,-2,8,-2,-10,-10,-10,-10,-9,5,2,9,-10,-6,9,9,-1,-2,10,3,-4,9,-7,6,9,-10,-5,8,2,-6,-3,8,5,-4,-1,-7,2,-10,-6,-7,-6,-7,-3,-10,-3,6,9,-2,4,-9,5,-2,3,-5,8,5,8,7,-1,6,1,-9,-8,7,9,6,4,-8,-10,6,-7,-2,-7,6,-5,-1,4,9,1,3,1,-3,-7,-2,5,9,-2,-7,-9,6,-5,10,-7,1,-4,7,4,-10,2,-2,-1,9,1,2,-10,5,5,5,6,-9,2,6,7,-9,-10,-6,-3,6,-4,5,9,7,7,8,-10,4,7,8,-5,-5,-7,10,7,-3,6,-4,9,-3,-5,-2,9,5,-3,10,-9,7,-5,7,2,-4,9,5,1,-6,8,1,1,1,-8,-6,-5,2,-7,-5,-8,-9,-9,7,-2,-6,9,8,-3,6,2,-10,-4,-1,3,1,-7,10,-7,-5,8,-1,-1,8,10,7,5,-2,-10,-9,-1,4,-1,3,1,-8,3,5,8,10,-9,-3,4,3,-10,-9,-3,8,-7,-3,-1,7,-8,-10,8,-8,6,-1,-7,-6,-7,8,8,-5,7,5,-6,-3,-7,-5,-2,-3,-4,-9,-1,8,2,7,1,6,9,-9,-6,-1,5,7,9,-4,-6,-4,9,-4,-9,2,-2,-2,-2,6,-3,-10,-5,6,8,-6,4,-1,3,6,6], dtype = "uint32")#candidate|7105|(1092,)|const|uint32
call_7103 = relay.TupleGetItem(func_5621_call(relay.reshape(const_7104.astype('float64'), [3, 11, 1]), relay.reshape(const_7105.astype('uint32'), [7, 156]), ), 2)
call_7106 = relay.TupleGetItem(func_5625_call(relay.reshape(const_7104.astype('float64'), [3, 11, 1]), relay.reshape(const_7105.astype('uint32'), [7, 156]), ), 2)
func_6616_call = mod.get_global_var('func_6616')
func_6619_call = mutated_mod.get_global_var('func_6619')
const_7110 = relay.const([[-5.543300,-8.903905],[9.588047,3.705994],[-2.423978,3.645216],[9.488846,3.749266],[-7.771865,-3.616225],[-0.972769,-5.130860],[1.269530,-1.254231],[-0.261109,-0.342462],[4.685429,-5.178799],[3.770638,-2.736835],[6.634106,-0.860066],[-2.972639,8.744617],[9.307123,5.046433],[9.502108,6.854209],[3.300863,-7.113761],[8.224021,-4.100400],[3.552729,8.182360],[-3.439174,-7.184429],[2.419650,-8.815047],[-9.599003,-9.808970],[3.670199,6.653297],[-2.542670,-5.987340],[3.680325,8.145330],[0.749706,3.372774],[-5.835911,6.974620],[-2.237170,-6.603133],[2.366363,3.494737],[9.832621,2.508770],[8.123694,2.301515],[5.108637,-4.714947],[-8.756241,2.625640],[4.011595,-6.811031],[-2.262182,7.986250],[7.973923,-3.832533],[-6.895984,-5.035025],[-5.572497,5.415287],[4.645961,0.052301],[-5.272200,6.410885],[6.413411,-1.150445],[3.813315,7.097204],[3.112493,-7.259554],[-2.431834,8.066918],[-7.841538,-8.454203],[0.689318,-0.509203],[-0.617395,6.735579],[9.265158,8.845119],[-8.427674,-1.546645],[-6.672531,5.316538],[-8.072951,-4.390023],[-4.179234,9.633909],[-2.349586,6.708126],[3.253956,-8.311484],[8.353522,-9.429313],[-4.917877,-3.440142],[-1.692717,-2.414712],[-1.429238,-3.161031],[2.472075,7.611992],[-5.753984,-1.420503],[9.521598,-0.018154],[0.870592,-6.125881],[-2.963318,-0.164930],[9.691863,4.154808],[9.283876,-0.392721]], dtype = "float32")#candidate|7110|(63, 2)|const|float32
call_7109 = relay.TupleGetItem(func_6616_call(relay.reshape(const_7110.astype('float32'), [9, 1, 14])), 0)
call_7111 = relay.TupleGetItem(func_6619_call(relay.reshape(const_7110.astype('float32'), [9, 1, 14])), 0)
func_6125_call = mod.get_global_var('func_6125')
func_6128_call = mutated_mod.get_global_var('func_6128')
const_7117 = relay.const([10,-8,-6,-8,7,-5,7,2,7,-10,-1,-3,-3,9,1,-4,2,9,4,1,3,4,-3,5,4,1,10,2,2,-3,-5,-8,-7,-5,6,-4,-3,-8,9,-10,-1,-8,-6,-4,-4,-5,-6,-6,-10,5,10,-5,-2,-1,8,-3,2,-10,4,1,3,-6,7,-1,6,4,-9,-9,4,1,-3,1,-6,6,-4,-7,-10,-5,9,-7,6,-1,2,6,-1,-8,-1,-10,9,-4,-2,2,-6,-1,7,-9,9,7,-1,-7,-10,-5,-7,8,10,1,-5,-3,1,5,4,-10,8,-4,10,9,10,3,-6,3,2,-7,-6,7,6,3,10,3,-1,-4,2,-3,7,10,-6,1,-7,-5,1,-10,6,9,9,3,-2,-2,-2,7,-10,5,1,4,-4,-3,-2,6,-8,-5,8,6,-9,-4,-3,10,-9,-9,-1,-10,-3,2,8,5,-2,1,-2,-9,5,-2,4,10], dtype = "uint16")#candidate|7117|(180,)|const|uint16
call_7116 = relay.TupleGetItem(func_6125_call(relay.reshape(const_7117.astype('uint16'), [3, 4, 15])), 2)
call_7118 = relay.TupleGetItem(func_6128_call(relay.reshape(const_7117.astype('uint16'), [3, 4, 15])), 2)
output = relay.Tuple([bop_7090,call_7095,const_7096,call_7103,const_7104,const_7105,call_7109,const_7110,call_7116,const_7117,])
output2 = relay.Tuple([bop_7090,call_7097,const_7096,call_7106,const_7104,const_7105,call_7111,const_7110,call_7118,const_7117,])
func_7120 = relay.Function([var_7088,var_7089,], output)
mod['func_7120'] = func_7120
mod = relay.transform.InferType()(mod)
var_7121 = relay.var("var_7121", dtype = "uint8", shape = (8, 10, 14))#candidate|7121|(8, 10, 14)|var|uint8
var_7122 = relay.var("var_7122", dtype = "uint8", shape = (8, 10, 14))#candidate|7122|(8, 10, 14)|var|uint8
output = func_7120(var_7121,var_7122,)
func_7123 = relay.Function([var_7121,var_7122,], output)
mutated_mod['func_7123'] = func_7123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_7141 = relay.TupleGetItem(func_5938_call(), 0)
call_7142 = relay.TupleGetItem(func_5939_call(), 0)
output = relay.Tuple([call_7141,])
output2 = relay.Tuple([call_7142,])
func_7145 = relay.Function([], output)
mod['func_7145'] = func_7145
mod = relay.transform.InferType()(mod)
output = func_7145()
func_7146 = relay.Function([], output)
mutated_mod['func_7146'] = func_7146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6434_call = mod.get_global_var('func_6434')
func_6435_call = mutated_mod.get_global_var('func_6435')
call_7168 = relay.TupleGetItem(func_6434_call(), 0)
call_7169 = relay.TupleGetItem(func_6435_call(), 0)
output = relay.Tuple([call_7168,])
output2 = relay.Tuple([call_7169,])
func_7185 = relay.Function([], output)
mod['func_7185'] = func_7185
mod = relay.transform.InferType()(mod)
output = func_7185()
func_7186 = relay.Function([], output)
mutated_mod['func_7186'] = func_7186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6173_call = mod.get_global_var('func_6173')
func_6175_call = mutated_mod.get_global_var('func_6175')
call_7187 = func_6173_call()
call_7188 = func_6173_call()
func_6672_call = mod.get_global_var('func_6672')
func_6673_call = mutated_mod.get_global_var('func_6673')
call_7203 = relay.TupleGetItem(func_6672_call(), 5)
call_7204 = relay.TupleGetItem(func_6673_call(), 5)
bop_7225 = relay.right_shift(call_7203.astype('int16'), call_7187.astype('int16')) # shape=(3, 1, 180)
bop_7228 = relay.right_shift(call_7204.astype('int16'), call_7188.astype('int16')) # shape=(3, 1, 180)
func_4879_call = mod.get_global_var('func_4879')
func_4885_call = mutated_mod.get_global_var('func_4885')
var_7231 = relay.var("var_7231", dtype = "uint32", shape = ())#candidate|7231|()|var|uint32
const_7232 = relay.const([[9,-7,-9,5,-10,-3,1,-5,7,3,-2,9,8,4,5,-6,5,9,4,5,4,2,2,-4,9,-1],[2,7,-7,-3,8,-9,3,-8,-3,-10,-4,2,-4,-5,4,4,-7,8,-5,-10,-10,-7,-6,-9,9,-8],[4,1,6,10,3,8,6,-5,8,-1,2,-3,-4,-1,-4,8,-9,-5,-4,-9,-9,-6,-6,6,-4,-4],[7,-9,4,4,9,7,10,6,-6,-10,1,-2,6,-3,-6,-9,6,4,9,9,1,-7,7,6,8,10],[3,-8,-1,1,8,10,9,-6,-1,8,1,6,9,-1,9,6,-7,-3,5,-6,4,-9,-8,-3,9,5],[-7,8,-3,2,-4,4,-5,10,8,1,9,-9,4,-8,-5,5,-3,7,3,6,10,-9,-6,2,-2,-8],[-4,10,8,3,2,-5,-10,-1,-6,2,-8,10,9,-7,-9,-4,1,1,1,-3,1,-7,2,5,6,3],[-8,7,-7,8,9,-8,-3,8,-2,-6,10,-3,-9,10,6,9,-6,-9,1,8,-1,-10,5,10,-10,-2],[8,-3,-4,4,4,-1,-10,-5,2,-10,-2,-9,10,-6,-6,9,4,4,-2,-7,4,9,2,6,9,-7],[8,-8,5,-7,4,8,-9,-7,1,-1,6,8,6,-2,-1,4,4,8,-7,4,-2,-1,-5,3,-4,10],[4,8,5,5,-8,5,-2,-5,7,-2,2,-1,-2,4,1,-8,5,5,5,-3,-8,8,1,-10,-3,-1],[-6,3,-7,7,-10,-2,-10,-2,-8,9,7,-7,9,9,2,10,-2,-7,9,-8,-9,-3,-9,4,-3,-5],[-8,-9,2,2,9,1,2,-2,-3,1,3,3,-2,1,-1,6,-1,-8,-6,-6,-2,-6,-8,-7,-1,5],[4,-5,-6,-10,5,8,-2,8,7,-2,-2,5,-1,10,-3,-5,4,3,-6,-9,-10,6,3,1,7,-1],[4,-8,-2,-6,-3,2,-8,-9,10,7,5,4,-9,-10,-8,7,8,-6,4,-5,-2,-6,2,7,5,1],[-9,-10,8,7,8,10,9,-6,10,2,8,2,-5,-3,-5,2,9,-6,-1,-5,-7,7,-2,1,-4,-2],[2,4,5,2,2,-7,8,-10,-4,-8,-1,-1,7,5,-6,4,2,-7,-5,-8,5,-10,9,-1,-4,-6],[-5,-9,10,4,2,-5,-7,-3,3,1,-9,10,8,10,10,8,4,8,3,9,-1,10,-9,2,6,-10],[2,-2,-1,4,-8,-9,-2,-6,10,-8,10,-8,-5,-10,2,6,8,-4,-10,-2,-3,-3,-7,-9,4,7],[7,4,-8,3,-4,5,8,-3,-10,-1,8,-7,2,-4,-5,-2,-8,6,-1,-7,-9,9,2,10,-8,6],[-2,3,-10,10,-7,8,9,3,-3,6,-3,-1,-6,-8,1,-10,-8,7,-7,-1,-1,4,-5,1,7,1],[-10,-6,7,-1,-7,-1,4,-3,7,9,-7,6,-10,-9,4,-7,-6,3,7,2,-6,1,1,5,9,5],[-7,-7,10,5,8,10,-5,9,-8,-9,2,-8,-3,-2,-5,10,8,10,-3,-9,7,7,2,-5,7,-7],[-4,-5,-6,-1,1,-4,7,4,8,-3,5,-6,-7,9,7,-6,-3,-7,-5,-1,-10,-5,10,6,-7,3],[-10,10,2,-1,7,7,8,8,-2,10,-5,-8,-6,-5,3,4,-6,1,4,-6,-1,3,-9,-3,-2,-5],[-7,4,-9,-6,-6,6,-5,-2,10,1,3,1,5,-6,-6,-3,-4,-8,-5,-5,-3,7,-9,6,-8,-3],[1,6,-9,-10,-3,-1,10,-2,-2,-10,-2,-4,7,-2,-8,-10,10,-2,8,5,-7,-2,6,5,-3,-4],[3,7,7,-7,-8,-4,2,-9,-10,-4,3,-5,10,-6,5,9,9,8,-9,2,9,-6,-2,3,-9,10],[-3,-10,4,-9,9,7,-5,-5,9,2,3,-10,10,8,10,-3,4,-9,3,-9,7,-10,10,-9,-1,8],[-6,1,-2,7,-9,-7,4,-3,-4,-9,10,-3,3,9,10,9,6,2,-9,9,9,-2,10,2,-10,4],[8,-10,7,6,9,-5,-5,2,-8,-3,5,-2,1,-8,4,-10,-9,-3,2,-6,-7,7,-10,6,-7,6],[4,-8,1,7,10,-8,-10,7,-2,-2,-6,1,-7,5,-5,8,9,4,4,5,-1,-2,6,2,2,7],[4,-1,4,-4,7,10,-8,7,-8,-5,-5,-7,-6,-9,4,4,5,-8,3,9,6,5,-4,7,5,10],[-8,-3,7,-1,-1,10,2,6,-1,-5,-6,2,-3,3,-8,-1,1,1,7,10,6,-3,-7,-2,-6,7],[7,4,-6,-1,-2,-3,6,9,-5,-1,-9,7,-7,-6,8,-7,-1,-7,9,-5,10,-2,-1,10,-1,5],[9,-6,5,-9,3,7,8,5,4,8,6,-8,2,3,1,3,-1,4,1,8,9,2,-3,-5,-4,9]], dtype = "uint32")#candidate|7232|(36, 26)|const|uint32
const_7233 = relay.const([[True,False,False,True,False,False,False,False,False,True,False,True,True,False,False]], dtype = "bool")#candidate|7233|(1, 15)|const|bool
const_7234 = relay.const([4.014549,-4.299496,6.401742,-9.379019,3.904577,6.281256,4.796310,-6.977190,0.107474,7.867818,3.699199,9.010158,7.878132,1.241980,-1.530073,6.932901,9.839849,-5.754912,8.157859,7.157770,-5.451359,9.046209,8.588948,8.731217,1.385109,-2.375158,2.559206,8.217029,4.520619,7.568276,-7.698422,7.594982,-0.878697,-3.509814,-9.000872,-4.664138,2.448786,0.963217,5.729957,0.442394,4.397910,9.022647,0.925636,9.689956,8.177071,-8.574372,4.261143,7.476136,3.939473,2.596875,6.800569,-1.247807,-3.594822,-7.559610,5.295170,-6.142038,0.531008,0.016869,4.889890,1.384710,9.797794,-7.068352,-7.750091,-8.622120,1.194155,1.480082,4.059033,9.368725,3.190555,0.215262,9.652928,-7.307985,-3.227083,2.988162,-8.713173,-4.764505,2.145858,8.520891,4.078042,0.039694,1.506613,6.372628,3.029175,-8.281576,-7.235106,8.453300,-9.127746,0.584567,7.963824,-7.742261,2.294972,5.653313,3.236309,-2.321151,-7.036227,7.937591,2.508360,-8.824999,-7.522983,2.312045,-9.518993,-9.808314,-5.599873,9.491668,2.565829,-2.616355,7.280854,4.600218,-8.375941,1.783512,2.037252,-7.945495,0.322207,5.599976,-3.151453,0.254761,5.433720,3.972705,8.857969,5.691619,-0.227803,2.755563,8.970930,-9.526079,8.442050,-9.391155,-8.124796,9.569501,8.877335,0.220379,4.645661,3.757298,2.857478,4.235265,1.872035,5.622965,-1.227047,1.610253,1.703920,0.909007,1.264073,4.721371,-1.438253,-1.971850,-9.004047,0.699158,-4.305906,-3.269426,7.308745,-0.120389,5.647991,-5.652778,-8.001962,3.591591,9.989413,-9.218352], dtype = "float32")#candidate|7234|(156,)|const|float32
const_7235 = relay.const([2,1,9,-9,-9,2,10,4,10,8,-2,-4,8,-3,1,-10,1,-10,-9,-1,-3,-8,10,1,-7,9,-3,-2,-9,8,10,2,-9,-6,-9,-7,-1,5,9,3,-4,3,5,10,2,-5,6,-8,8,-5,2,-1,-9,6,2,-3,-10,-6,6,1,4,2,1,-6,5,-8,-5,2,7,3,-5,-8,7,-2,-9,-10,-10,4,-6,2,4,-10,1,5,10,-7,-6,-2,8,5,8,2,-2,9,9,-7,3,3,9,-2,-8,6,6,9,3,-3,3,-8,2,-1,1,7,7,-10,10,7,-2,5,10,-4,-10,-3,10,8,-1,4,-8,9,-3,-4,-10,-2,-4,2,3,-5,1,-7,-9,5,-5,5,-4,-1,-1,9,-5,-6,9,3,4,-4,5,-7,6,6,5,-7,4,-3,2,-8,4,-8,-2,3,-8,-8,-8,-7,9,6,-5,-2,-10,7,8,10,9,-6,-10,4,6,3,9,8,5,3,-8,2,1,-9,5,2,1,3,-7,-3,1,8,-8,-1,4,-7,-8,-10,8,-9,-1,7,10,-7,-8,-3,6,2,-10,9,6,6,-4,-4,-8,-7,7,2,5,8,8,6,-5,-8,-9,10,-2,1,5,-8,10,1,-9,-7,-10,10,6,-4,2,5,10,9,4,-7,5,1,1,7,4,-4,10,-4,10,9,-3,-5,2,4,4,-4,-9,8,-6,1,8,-4,-1,-5,10,3,8,4,-10,5,-2,-4,-5,-10,-5,1,-6,2,-5,6,-2,-9,-7,-2,3,-2,8,5,-8,2,-4,9,-8,-7,7,-10,-4,-9,4,-7,-9,-4,-5,-10,-4,8,-7,-9,-5,2,2,3,1,-7,5,5,-5,3,-8,4,-7,-9,7,-3,-4,6,-5,2,-1,4,-2,-10,-6,8,-7,-5,3,1,1,2,-7,1,-7,1,-1,4,3,-2,-8,-4,-1,1,2,3,8,-9,4,-8,-1,9,-3,7,8,5,-10,-2,8,6,-7,-3,6,9,-2,-1,9,6,2,8,-1,-5,-3,-1,-2,3,7,4,10,3,2,4,3,-3,-1,4,-7,-4,-8,3,3,-9,4,6,-9,-5,-3,2,8,3,-10,5,8,8,-4,7,-9,-10,2,-6,-4,-1,9,-5,3,-8,4,10,3,-9,-1,4,5,-2,9,7,8,-10,-5,3,4,-1,-7,2,9,6,-8,-3,-6,1,2,9,-7,-6,-8,8,-4,-10,-10,-10,-4,2,-9,-8,-9,-2,-6,-2,4,3,10,-3,2,5,6,2,4,-5,-8,-9,9,-9,-6,7,-10,-9,-6,5,6,2,5,-5,10,1,-2,-7,6,7,9,-10,-6,9,1,-2,4,-10,-9,-8,-4,1,3,-8,-5,9,-1,-3,9,-1,-8,7,6,-10,4,-6,-1,6,-6,-1,9,5,10,-9,1,-9,-2,2,-6,4,2,-8,-8,7,9,7,9,-8,-1,7,-6,3,-3,-5,-9,8,-1,-4,-9,5,8,-5,-3,5,-1,-7,9,6,-7,10,2,-5,4,-5,2,-2,1,7,-4,9,-7,4,-6,-7,-3,-9,6,-1,-5,5,6,8,-7,-1,-9,8,-7,-3,5,8,-8,-7,10,7,4,-5,-1,8,-1,-1,-9,8,1,1,-1,6,-7,-4,-10,-4,-2,5,-5,-3,1,-7,-1,10,-4,10,1,5,-6,7,-9,-10,-2,-4,9,-3,9,3,-3,-4,6,-2,-9,-5,3,10,-2,3,-7,-3,4,7,4,-7,-4,3,6,-7,2,9,3,-7,2,-1,9,-7,9,-8,5,9,-6,-7,8,5,-5,5,-6,5,4,-8,1,4,9,-3,7,4,-4,6,-7,2,-7,-2,-1,10,-6,-6,4,-6,-4,-7,-1,-4,2,-9,-3,10,9,-1,-2,6,9,-2,-4,6,-9,10,-4,5,6,-6,6,-9,10,5,-10,10,3,-4,2,6,3,-1,4,-4,1,-1,5,-2,-9,9,-8,-1,-2,-9,-3,8,-2,-6,7,9,9,5,-8,-3,5,-6,-2,5,2,-10,10,-2,9,1,7,5,9,-1,8,6,7,-8,9,-5,-7,5,-5,2,-4,-1,4,-6,-8,10,3,1,7,9,3,8,-8,-9,-1,-8,-7,-7,-5,-4,10,-8,1,2,-9,8,2,-3,-3,3,5,-1,10,-3,-1,-5,2,-5,-3,5,-6,3,10,-10,8,5,5,-8,-3,10], dtype = "int64")#candidate|7235|(840,)|const|int64
call_7230 = relay.TupleGetItem(func_4879_call(relay.reshape(var_7231.astype('uint32'), []), relay.reshape(const_7232.astype('uint32'), [12, 6, 13]), relay.reshape(const_7233.astype('bool'), [15,]), relay.reshape(const_7234.astype('float32'), [156,]), relay.reshape(const_7235.astype('int64'), [840,]), ), 1)
call_7236 = relay.TupleGetItem(func_4885_call(relay.reshape(var_7231.astype('uint32'), []), relay.reshape(const_7232.astype('uint32'), [12, 6, 13]), relay.reshape(const_7233.astype('bool'), [15,]), relay.reshape(const_7234.astype('float32'), [156,]), relay.reshape(const_7235.astype('int64'), [840,]), ), 1)
output = relay.Tuple([bop_7225,call_7230,var_7231,const_7232,const_7233,const_7234,const_7235,])
output2 = relay.Tuple([bop_7228,call_7236,var_7231,const_7232,const_7233,const_7234,const_7235,])
func_7237 = relay.Function([var_7231,], output)
mod['func_7237'] = func_7237
mod = relay.transform.InferType()(mod)
var_7238 = relay.var("var_7238", dtype = "uint32", shape = ())#candidate|7238|()|var|uint32
output = func_7237(var_7238)
func_7239 = relay.Function([var_7238], output)
mutated_mod['func_7239'] = func_7239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_7257 = func_5541_call()
call_7258 = func_5541_call()
output = relay.Tuple([call_7257,])
output2 = relay.Tuple([call_7258,])
func_7259 = relay.Function([], output)
mod['func_7259'] = func_7259
mod = relay.transform.InferType()(mod)
output = func_7259()
func_7260 = relay.Function([], output)
mutated_mod['func_7260'] = func_7260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6703_call = mod.get_global_var('func_6703')
func_6705_call = mutated_mod.get_global_var('func_6705')
call_7271 = relay.TupleGetItem(func_6703_call(), 0)
call_7272 = relay.TupleGetItem(func_6705_call(), 0)
func_4879_call = mod.get_global_var('func_4879')
func_4885_call = mutated_mod.get_global_var('func_4885')
const_7291 = relay.const(-7, dtype = "uint32")#candidate|7291|()|const|uint32
const_7292 = relay.const([8,2,-3,2,9,9,-9,-7,7,-2,6,-10,8,-8,-2,-2,4,-10,-9,6,4,3,6,10,4,6,2,10,6,6,-10,-10,-4,-3,3,-4,5,-2,-7,-4,6,2,8,9,1,1,8,8,-2,-7,-8,-5,8,6,10,8,-10,4,-4,1,2,9,-3,-2,-5,3,-1,8,4,7,-4,1,-5,1,10,5,5,-10,8,-7,-10,-8,-9,-10,-10,8,-2,-7,4,6,-1,-5,-6,7,8,9,-4,-9,-5,7,-8,9,-4,8,-6,1,7,6,-3,-9,8,-9,7,7,-10,7,-9,-9,5,-10,-2,-8,9,2,8,-2,-1,1,2,-10,-4,10,7,8,-7,-3,-3,7,7,-5,3,5,2,-2,6,5,-10,7,6,-9,8,-9,-7,5,6,-10,9,2,3,-6,-5,1,7,3,5,-4,8,-2,-2,10,6,6,7,-9,-10,-7,7,10,-8,-7,9,-6,7,-3,-6,6,2,9,9,-8,-4,-6,5,-3,3,7,-1,10,-10,6,3,-8,-3,-2,7,-5,-7,10,-9,6,-4,3,-6,3,5,10,1,-2,-6,-9,6,-2,5,6,6,5,7,-5,-2,-8,10,-4,7,5,10,-6,6,-1,1,-6,-1,7,10,10,-4,6,6,5,5,7,-2,4,-3,2,4,1,6,1,3,7,-10,1,2,-9,4,4,9,7,-5,-5,4,2,5,-7,7,-6,-6,10,1,-6,-5,4,-10,-7,-9,-4,8,4,-1,4,2,2,-6,-7,-6,-5,-5,7,9,10,4,-8,10,-8,2,7,-3,-3,5,-10,-5,2,-4,-7,2,-9,-1,-1,-1,-2,-10,-9,9,-3,-4,-7,-6,10,7,2,-5,6,-10,-9,-5,-5,9,9,10,6,5,-4,2,2,1,7,-7,-2,-1,9,1,4,-2,1,4,-5,-1,-1,-2,10,-9,9,-3,4,-3,9,-8,5,-5,1,4,-2,2,-7,8,-10,-6,4,4,-1,-2,-3,5,-2,4,2,9,4,7,8,7,-4,-6,2,10,-7,6,-5,-7,9,-10,1,5,1,-7,9,8,8,-6,6,-4,8,-2,-10,2,2,2,-3,3,1,4,5,-7,-6,5,-9,-4,8,-2,6,-8,7,-4,-9,4,-6,-1,-10,5,-1,7,-7,9,-8,-6,6,-3,-5,3,5,-3,-8,1,3,4,-6,8,-2,1,-9,-4,-2,-9,-7,9,2,4,-6,-7,-3,-7,-2,2,-1,5,9,-8,-10,8,-1,-9,8,-4,10,-5,2,10,6,-7,-5,8,4,7,-5,3,-1,-1,-8,5,-6,-9,-2,-2,2,-5,4,3,1,3,-4,-2,-1,-5,-9,6,-9,-6,5,1,-7,-4,-2,-10,6,9,-2,-6,5,1,-10,-1,-2,-1,-5,4,-1,-5,-5,7,2,3,6,-8,-1,-7,6,1,5,6,-6,-3,1,3,-7,-9,-6,-3,-2,-5,10,5,10,-5,-9,4,-3,4,7,2,-8,10,-3,-10,6,9,7,-3,9,-1,-8,6,2,-7,-9,-10,10,-3,-7,-10,-8,8,-5,4,8,4,8,9,-2,-8,7,-8,-10,-2,5,9,-2,-3,-9,-3,-10,-4,7,-10,-10,-9,-8,4,9,-6,-9,-2,-3,10,-1,10,-9,4,8,4,2,-6,10,8,-7,8,9,-7,-6,-8,-7,10,3,-4,8,2,1,2,-8,-3,-5,1,2,10,-4,-4,-7,8,8,4,10,-6,3,-2,-8,-8,-7,-1,-6,4,-9,10,3,-9,-8,7,-6,8,-10,-10,5,-3,6,1,7,1,-4,-4,-9,-9,4,6,6,-1,4,7,9,4,-6,-9,-10,8,1,2,7,-6,5,2,6,10,-7,1,-8,3,-10,6,-3,6,8,-4,9,-5,4,8,3,9,-6,7,-5,-8,3,5,-8,-9,-8,1,-5,-2,8,-6,-9,-2,-5,-8,9,5,8,7,-10,-4,1,8,4,2,1,4,5,4,4,2,6,5,-9,1,1,10,1,-6,7,10,8,-7,-1,-2,-2,8,4,-3,-8,-4,10,-8,1,9,-2,7,2,-2,4,-7,10,6,3,-7,-6,9,-7,10,-3,-8,-7,-6,1,-3,3,3,7,7,1,-10,-5,6,8,-9,-6,-7,-4,-3,2,-9,-7,-6,4,-6,-7,3,-7,-5,-6,7,3,-4,-8,3,-2,-3,-7,-5,4,5,8,-7,-6,2,-7,3,-5,-1,3,-5,6,-5,-8,-3,2,6,-5,-6,5,4,-9,6,-3,8,-10,-2,10,-1,-10,3,-2,1,-3,-2,-7,4,5,-9,-6,-6,-10,7,8,10,-2,-1,5,-6,10,-1,-4,2,-5,-8,10,9,4,1,4,1,8,2,3,4,-6,2,-9,9,-5,-5,3,-6,2,1,1,-1,4,-2,3,-2,-10,1,9,3,9,9,-6,8,-2,-3,1,-4,1,-5,4,5,2], dtype = "uint32")#candidate|7292|(936,)|const|uint32
const_7293 = relay.const([True,True,True,True,True,True,True,False,True,False,False,False,False,False,False], dtype = "bool")#candidate|7293|(15,)|const|bool
const_7294 = relay.const([-8.363657,-0.867612,-8.006751,-3.543114,-1.727966,4.730770,1.181048,-0.962603,-1.391436,-7.603090,8.589649,-7.193676,-7.139191,-9.639651,2.543505,4.242732,-0.537966,-6.494385,6.962467,6.796841,7.628216,4.597484,-4.218120,-0.788979,-5.040609,4.279955,-0.001918,-5.654384,3.997163,-1.365984,8.892195,-9.454812,2.191951,1.253948,0.143605,-5.451391,1.327712,-8.770409,-6.255384,-7.480087,3.374277,-1.923891,-1.757032,-4.911666,-6.135057,-7.818708,1.152895,6.312283,-5.968267,8.627267,2.141153,-6.807609,7.522080,0.847085,7.277303,-1.522627,6.131592,-3.766556,-2.598108,5.172819,8.795775,-8.112158,-7.622209,2.837038,-5.748120,-1.075813,7.556563,7.367734,0.356525,-1.932700,-9.277691,8.801233,2.771923,1.671880,2.260861,-4.168110,6.117352,3.032240,-6.020140,-2.360267,1.588999,2.045251,0.536630,8.543124,3.798948,-9.342519,7.363514,2.044222,2.413116,-5.306776,6.568146,-4.312876,4.755195,-6.935135,-9.605678,9.977400,4.211434,-7.155525,2.268128,-7.033218,8.417721,-6.958293,-4.731921,-8.449540,2.444701,-5.225676,7.266250,0.651508,-6.270458,9.244961,-8.662973,-5.310590,8.142982,-6.304875,9.365905,7.468330,7.731692,7.601274,0.220693,-9.985281,-0.983324,1.116735,9.803079,-9.183184,-6.112417,-5.865417,-7.583086,-9.144658,-0.821547,-6.350867,7.758617,-1.262906,-4.749608,4.455690,9.303092,-3.154625,-0.537072,-1.119219,-8.623996,-9.499826,-5.512227,6.473819,9.438361,-8.167754,-0.853963,4.397208,-4.166497,9.053865,9.523676,-4.026038,-1.382814,-2.078228,-3.571593,-3.430481,-5.182596,6.026093], dtype = "float32")#candidate|7294|(156,)|const|float32
const_7295 = relay.const([-2,7,-4,-9,-1,-7,-9,-8,7,-2,9,-5,-4,5,-6,-4,-3,-10,-5,8,-1,-2,6,-1,-3,-8,-8,-9,-6,10,5,2,6,-7,-10,10,1,-2,-3,-2,5,9,4,6,2,-4,2,5,8,1,-10,-9,-3,8,3,-2,-1,-4,9,-5,-5,-8,-4,7,8,4,-8,-8,6,-9,-7,9,-4,-3,2,5,-6,6,-9,-6,10,-6,-2,1,2,9,1,-7,1,-7,9,-2,-7,7,-1,1,-4,8,-1,6,-9,5,4,-4,-4,-10,4,-8,-10,5,9,-1,-4,10,7,3,2,-7,-9,-3,-5,6,3,-10,-8,-4,-2,-1,-3,-4,-1,-8,4,-1,-8,6,5,3,-5,-3,-8,1,10,-8,6,-3,8,10,-9,-5,-5,-2,-2,-10,-8,9,10,9,3,-2,9,4,9,9,6,6,-6,2,3,-2,-5,-8,10,-4,3,10,3,1,-9,-1,6,-6,4,-10,-10,-8,3,7,-3,8,6,2,-3,3,-5,7,-10,6,9,-10,8,3,6,-9,-2,9,-3,9,-1,-8,-5,-10,7,10,1,8,-10,3,2,6,-6,-4,-3,-9,-5,3,-3,6,8,-10,8,8,-7,-5,-2,-3,-4,-1,1,-3,6,-8,-10,1,-2,7,-6,-7,6,4,-1,-10,5,5,-1,4,-6,-8,-7,-6,-7,9,8,10,8,-3,2,-5,5,7,-10,-5,1,5,-10,7,6,5,-1,-9,1,-7,7,4,-4,10,-9,-10,-6,-10,-6,8,-2,7,9,2,9,-3,-1,-10,5,7,-5,-6,-2,1,-1,1,1,-7,-3,8,-8,10,-7,4,-10,-8,8,8,-10,1,8,-7,1,9,4,-5,10,2,6,3,-7,-1,-5,-8,-5,-8,-10,-2,-8,-4,-10,-5,-6,10,-10,-6,-4,-3,-5,5,9,-5,-6,-1,-7,9,6,10,10,2,2,9,6,-4,3,2,-3,-3,5,-5,9,-2,7,-4,1,-7,5,-7,-7,3,2,-4,-4,6,-8,-2,7,9,7,3,1,-8,-7,9,-10,6,10,9,-4,3,-7,9,10,-2,-3,-4,-6,-3,1,-8,4,3,3,-6,-8,-1,6,1,-9,-5,-7,-9,1,-9,-3,3,3,9,-9,-5,6,2,-9,9,7,2,-1,10,-4,6,5,3,7,-6,-9,-5,-10,-4,-1,6,-7,1,-3,1,9,-3,9,2,9,2,10,10,4,6,-9,5,-5,3,9,-3,3,3,-5,-8,5,-2,-7,5,-8,-1,5,4,-2,8,-3,10,-9,8,9,10,-5,-1,7,-8,-6,4,2,-3,-7,8,2,-7,-10,-6,-2,5,1,2,1,-2,8,10,4,-4,4,2,-9,-8,-4,10,-3,5,-2,-9,-8,9,7,-6,5,-3,-4,-7,-1,-6,9,5,2,5,9,-6,-3,5,-8,-2,-2,4,-7,1,-5,-7,2,6,1,7,-5,9,9,9,-6,10,5,4,-4,2,-3,-4,10,-10,-3,-3,1,8,7,-7,8,10,3,5,-10,-7,-5,-9,-10,8,-5,2,4,-6,-7,5,-2,1,1,-1,3,6,-8,3,-4,-3,-3,-5,-5,1,5,1,2,-1,8,-6,1,-8,-10,6,3,3,4,-2,-10,-5,8,-2,-8,5,-8,-6,6,-7,5,10,-5,-2,2,10,-9,-9,-2,7,-8,5,-5,5,3,8,5,5,-1,-1,-3,7,5,-8,8,7,10,-2,-1,8,6,1,2,-3,3,7,4,-5,-9,8,-10,5,-6,-7,-1,10,-9,-1,7,5,10,5,6,-3,-4,-4,5,-6,-6,8,6,-7,1,7,3,-7,3,-7,3,-6,10,-3,9,7,-2,3,3,4,-9,3,4,7,3,8,3,-6,4,-9,1,-8,-9,1,-2,-9,10,5,1,5,3,1,-7,-8,-8,-6,10,-2,-7,-4,-9,-2,-4,-5,8,-8,-3,-8,8,3,-2,5,-3,5,-9,8,4,9,6,3,-3,-6,4,7,9,-7,9,5,8,-1,-10,5,1,-2,-9,1,-7,-8,-1,10,7,5,1,9,1,-4,-10,-5,-6,-8,-1,5,-7,9,-8,-2,-8,2,-6,-7,-2,7,4,3,-10,-3,1,1,10,10,8,-4,6,4,-6,8,-5,-10,-9,-9,5,2,-1,-5,-10,1,-6,4,9,-3,-10,1,-8,-4,-3,7,-6,-5,1,-8,-5,-1], dtype = "int64")#candidate|7295|(840,)|const|int64
call_7290 = relay.TupleGetItem(func_4879_call(relay.reshape(const_7291.astype('uint32'), []), relay.reshape(const_7292.astype('uint32'), [12, 6, 13]), relay.reshape(const_7293.astype('bool'), [15,]), relay.reshape(const_7294.astype('float32'), [156,]), relay.reshape(const_7295.astype('int64'), [840,]), ), 5)
call_7296 = relay.TupleGetItem(func_4885_call(relay.reshape(const_7291.astype('uint32'), []), relay.reshape(const_7292.astype('uint32'), [12, 6, 13]), relay.reshape(const_7293.astype('bool'), [15,]), relay.reshape(const_7294.astype('float32'), [156,]), relay.reshape(const_7295.astype('int64'), [840,]), ), 5)
func_1787_call = mod.get_global_var('func_1787')
func_1791_call = mutated_mod.get_global_var('func_1791')
var_7308 = relay.var("var_7308", dtype = "float32", shape = (1008,))#candidate|7308|(1008,)|var|float32
var_7309 = relay.var("var_7309", dtype = "uint32", shape = (90,))#candidate|7309|(90,)|var|uint32
call_7307 = relay.TupleGetItem(func_1787_call(relay.reshape(var_7308.astype('float32'), [9, 7, 16]), relay.reshape(var_7309.astype('uint32'), [3, 30]), ), 1)
call_7310 = relay.TupleGetItem(func_1791_call(relay.reshape(var_7308.astype('float32'), [9, 7, 16]), relay.reshape(var_7309.astype('uint32'), [3, 30]), ), 1)
func_1787_call = mod.get_global_var('func_1787')
func_1791_call = mutated_mod.get_global_var('func_1791')
call_7311 = relay.TupleGetItem(func_1787_call(relay.reshape(var_7308.astype('float32'), [9, 7, 16]), relay.reshape(call_7307.astype('uint32'), [3, 30]), ), 0)
call_7312 = relay.TupleGetItem(func_1791_call(relay.reshape(var_7308.astype('float32'), [9, 7, 16]), relay.reshape(call_7307.astype('uint32'), [3, 30]), ), 0)
bop_7314 = relay.subtract(call_7271.astype('uint8'), const_7291.astype('uint8')) # shape=(15, 13, 12)
bop_7317 = relay.subtract(call_7272.astype('uint8'), const_7291.astype('uint8')) # shape=(15, 13, 12)
func_6125_call = mod.get_global_var('func_6125')
func_6128_call = mutated_mod.get_global_var('func_6128')
const_7323 = relay.const([-7,-3,7,-2,-9,-1,-2,9,-3,-1,-8,5,-1,-6,7,5,2,-2,1,2,-4,3,5,10,-2,6,5,-10,10,-1,9,-10,5,2,8,10,-8,-6,6,8,-6,-7,-6,9,-5,3,-8,5,-7,-1,-2,4,3,-2,7,-6,6,6,-10,-10,-5,9,7,7,2,6,-7,3,-4,9,-4,-6,6,-4,7,3,6,5,5,-5,10,-10,-6,6,-7,1,8,4,9,4,10,2,-7,-9,-9,-1,8,5,-6,1,-6,7,-10,-9,8,7,-1,6,-5,2,9,-2,-5,-8,8,4,-2,7,3,10,-1,3,-5,-10,4,-4,-5,2,5,-1,-1,-8,-8,-4,-3,4,3,-8,6,9,-1,-5,-3,-8,-8,5,8,2,-8,-6,-3,9,-8,4,-4,-4,-8,-3,7,-1,-4,4,-10,7,5,3,4,3,8,5,-10,8,9,3,5,-1,-10,1,1,10], dtype = "uint16")#candidate|7323|(180,)|const|uint16
call_7322 = relay.TupleGetItem(func_6125_call(relay.reshape(const_7323.astype('uint16'), [3, 4, 15])), 3)
call_7324 = relay.TupleGetItem(func_6128_call(relay.reshape(const_7323.astype('uint16'), [3, 4, 15])), 3)
output = relay.Tuple([call_7290,const_7292,const_7293,const_7294,const_7295,call_7307,var_7308,var_7309,call_7311,bop_7314,call_7322,const_7323,])
output2 = relay.Tuple([call_7296,const_7292,const_7293,const_7294,const_7295,call_7310,var_7308,var_7309,call_7312,bop_7317,call_7324,const_7323,])
func_7338 = relay.Function([var_7308,var_7309,], output)
mod['func_7338'] = func_7338
mod = relay.transform.InferType()(mod)
var_7339 = relay.var("var_7339", dtype = "float32", shape = (1008,))#candidate|7339|(1008,)|var|float32
var_7340 = relay.var("var_7340", dtype = "uint32", shape = (90,))#candidate|7340|(90,)|var|uint32
output = func_7338(var_7339,var_7340,)
func_7341 = relay.Function([var_7339,var_7340,], output)
mutated_mod['func_7341'] = func_7341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7017_call = mod.get_global_var('func_7017')
func_7019_call = mutated_mod.get_global_var('func_7019')
call_7349 = relay.TupleGetItem(func_7017_call(), 1)
call_7350 = relay.TupleGetItem(func_7019_call(), 1)
output = call_7349
output2 = call_7350
func_7370 = relay.Function([], output)
mod['func_7370'] = func_7370
mod = relay.transform.InferType()(mod)
mutated_mod['func_7370'] = func_7370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7370_call = mutated_mod.get_global_var('func_7370')
call_7371 = func_7370_call()
output = call_7371
func_7372 = relay.Function([], output)
mutated_mod['func_7372'] = func_7372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7145_call = mod.get_global_var('func_7145')
func_7146_call = mutated_mod.get_global_var('func_7146')
call_7375 = relay.TupleGetItem(func_7145_call(), 0)
call_7376 = relay.TupleGetItem(func_7146_call(), 0)
output = relay.Tuple([call_7375,])
output2 = relay.Tuple([call_7376,])
func_7380 = relay.Function([], output)
mod['func_7380'] = func_7380
mod = relay.transform.InferType()(mod)
output = func_7380()
func_7381 = relay.Function([], output)
mutated_mod['func_7381'] = func_7381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6434_call = mod.get_global_var('func_6434')
func_6435_call = mutated_mod.get_global_var('func_6435')
call_7411 = relay.TupleGetItem(func_6434_call(), 0)
call_7412 = relay.TupleGetItem(func_6435_call(), 0)
func_2840_call = mod.get_global_var('func_2840')
func_2843_call = mutated_mod.get_global_var('func_2843')
var_7425 = relay.var("var_7425", dtype = "uint64", shape = (980,))#candidate|7425|(980,)|var|uint64
const_7426 = relay.const([[-9.774489,7.503482,4.164946,9.812383,-7.677453,-9.026547,0.415565,-4.002346,3.871820,-2.801798,-8.435528,-6.026433,8.412293,5.032457,8.405504,7.511180,-3.570970,6.315736,3.792532,-3.677462,-9.013359,5.675641,8.762751,9.759456],[-2.681970,-4.788019,5.899681,-0.099153,-5.702682,-9.978776,4.302510,2.838352,-2.081497,5.491360,-7.807354,-9.955507,-5.437207,-9.009454,6.545821,-7.967072,3.740318,-6.812764,7.152338,6.295701,-7.303651,3.159583,-3.694905,-7.711183],[1.588719,-7.019885,5.904355,-9.361973,-6.622970,-6.412992,-2.294588,-6.627707,9.659442,-9.949545,7.500454,-9.397674,-9.508137,8.867915,3.510410,7.960411,3.918011,-9.002622,-3.783768,-4.448951,1.745863,-2.845577,9.199713,-6.083952],[4.131324,0.714000,-8.393582,1.698657,5.382386,3.847782,-0.525285,7.219900,9.041073,-5.197431,-7.647982,-2.948220,9.523417,-9.678077,2.451837,6.729207,1.635812,-0.359881,7.974369,-5.468564,-8.048621,2.548396,8.677183,1.260184],[-0.723408,-6.187811,-2.791895,-4.169854,-8.454392,9.791784,4.328528,-4.705543,4.310850,5.630505,-8.011964,-0.429439,4.954262,4.648827,-4.563937,7.856322,1.522666,-6.494307,7.695461,9.073167,9.959187,3.980243,-8.720173,0.489812],[-2.992436,-6.028268,9.436738,-0.581066,-0.968409,2.461099,-4.233743,4.989275,-7.765383,5.026675,-4.642448,1.416199,7.593852,6.546656,6.935490,-5.743203,8.125771,-2.404527,2.987423,2.538333,3.535428,-4.250679,-5.476681,5.957575],[8.859795,-6.848375,3.314355,3.423055,-0.587321,-2.303231,-3.819182,-7.854034,7.913382,-1.622560,0.315252,-0.457458,-8.800262,-7.441247,-7.401370,4.600289,-4.349784,-4.823372,-0.837353,4.786205,-8.938325,-5.975325,-7.224302,-5.305372],[6.611790,-6.266288,-9.354810,7.113383,8.195112,5.090112,4.494752,-9.053153,-0.821071,-7.454295,-1.924377,-8.920624,6.330995,6.802046,1.879473,-3.877312,-7.281748,2.452821,2.976002,3.817491,-0.745621,2.689501,-5.307895,2.132865],[-8.322378,5.731792,5.659438,5.099807,-6.801478,-5.491940,-2.808444,-1.645192,0.389301,6.023970,9.698511,-9.523972,-6.605207,2.628384,6.530338,6.403957,-1.895337,-5.679912,-4.351634,3.758319,4.295307,-6.281189,-0.472787,-1.975921],[-9.431555,-7.694752,6.060407,5.313445,-3.413399,-6.426667,-9.586246,5.833557,-0.397724,-0.769432,8.173583,1.950481,-7.155269,-8.815724,-1.407430,-7.941170,4.643790,-3.666755,2.964753,-6.620406,8.699514,1.441833,-2.525337,-4.023429],[9.856717,-7.560614,-7.810571,2.361889,2.844598,1.615714,-1.750801,1.135839,1.330617,-1.682892,0.426690,-8.306807,8.940291,-1.305860,4.720772,-7.017520,-5.823922,7.229990,-5.334296,4.874065,1.866822,-2.455987,-8.055300,0.094858],[3.685335,8.525042,-3.937778,5.694169,1.368980,4.236586,8.364484,6.991217,-8.826046,-3.019347,0.990368,7.098761,8.139009,4.877906,6.884064,3.865876,-2.570893,5.382082,-2.671682,6.420350,0.399856,-3.753210,-4.826918,-7.142594],[6.158931,-3.422690,-3.303626,0.444714,1.320012,3.818161,6.469701,9.723883,8.576415,-7.804147,-9.439429,-2.832962,-7.186168,-3.774447,-7.883704,-9.380826,0.142528,5.786938,-4.237361,5.422228,4.313493,-0.100905,2.409042,-7.401763],[-3.760752,9.417138,-5.156507,-1.750025,-2.437308,-0.240168,2.966505,-5.972989,8.592479,-5.667323,-9.089998,0.553659,0.119799,-7.493935,2.338314,3.786027,0.746934,-8.789354,-6.384848,8.535515,5.608309,-7.778261,-7.482616,-1.481447],[-9.395875,0.540496,-7.918682,-2.575719,-2.025747,3.442101,2.866192,4.471615,1.240555,3.459561,9.743023,-5.127809,-9.289957,1.250292,-4.005539,-6.493335,5.584510,3.677590,-6.646615,9.234264,2.415243,-8.103272,1.018371,5.678481],[-2.606340,9.103971,6.388517,-5.254279,-0.386748,-4.061694,1.924265,5.154873,-2.698127,4.273776,-1.691923,1.596268,6.052376,-0.864381,-4.281750,2.326209,-8.052044,-9.002636,-2.388745,5.272543,-3.038458,0.378055,-3.660360,-0.359097],[-1.349282,8.020087,-9.673038,-6.878680,9.045934,6.923109,-0.691340,-3.628678,9.714495,3.478426,2.586162,-5.129945,-0.471894,-5.595633,-1.934039,-2.720848,-2.866851,6.083497,-5.071995,-1.263264,-6.735517,2.409526,-9.451063,-1.680463],[-8.574011,1.815788,-5.830933,-4.136604,-2.256650,-1.947019,8.703417,3.320271,-5.276251,9.549853,-1.311394,-3.972602,9.408189,0.294039,7.534498,9.070071,4.380328,-6.472230,-4.745256,3.258280,8.581409,9.340302,-3.215403,-2.722957],[1.199149,4.387311,4.764248,-7.420823,-4.969082,-8.445066,1.180203,3.360848,-1.967785,7.205354,-1.761193,4.018158,-2.095563,4.941021,3.301830,8.249078,0.381396,-4.908903,0.609308,0.934115,7.470607,1.340025,3.117857,1.937277],[-1.890105,-1.801446,2.111306,-5.708097,-0.211330,-0.844224,2.979636,-2.580185,2.415937,2.416069,9.677668,-3.284452,-2.651338,-1.419578,-1.351654,-3.829163,-1.518498,-2.574870,-9.958431,9.911304,-4.997095,8.795308,0.269003,-3.876651],[-9.435560,6.156336,-6.969446,-8.422853,-2.203936,-5.941561,3.091445,4.006423,7.820802,3.215881,5.358261,-8.686785,2.252977,3.025418,4.750610,4.687170,-6.689958,0.001841,-4.338797,6.123232,-9.593576,9.783943,-3.062869,8.079476],[-1.565558,-1.958627,3.788381,8.458245,-2.224695,-2.258673,-0.821627,4.079095,-0.820865,7.339270,3.455839,0.707508,-3.994648,0.140931,-9.395636,-8.958521,7.910538,-2.643143,6.043802,6.193277,-9.211459,9.338127,5.470041,1.334778],[-6.367664,-5.689370,-1.009174,2.606001,7.559018,6.154070,-7.051705,-6.579976,-5.717806,-7.306492,0.040674,1.079219,5.595176,-6.152954,-2.311539,4.268394,0.476069,-2.273270,8.432848,-8.230320,-2.170073,-6.457609,-0.514768,-1.332994],[4.069767,-5.926810,3.692176,4.070162,6.765371,9.653307,2.549093,-9.489238,2.752103,-5.057957,-0.339836,3.572388,3.539480,2.593226,-2.619281,-3.034010,5.239082,-5.361173,2.841057,7.057665,-4.230606,-9.085875,3.021514,-7.664991],[8.366185,-4.215255,4.166590,-9.272849,4.262210,-8.515783,4.496807,-1.991492,-0.666516,9.463508,-6.609652,-6.024872,-2.041628,-8.939612,5.389254,-4.451743,-0.897321,-4.278669,-6.085493,-7.123706,0.653621,1.847290,3.891443,5.567906],[3.593591,9.061998,6.430454,-0.774620,-3.113063,-9.816621,0.546713,-8.808773,9.050859,2.371340,7.965563,2.324401,5.637007,-9.940576,-6.520492,-8.707897,-9.284546,9.251650,2.338239,0.019649,7.007661,4.931048,-4.068876,-1.248844],[-9.527578,2.636584,1.338036,-5.711512,-4.644291,1.081111,-7.300182,-9.319121,-7.408599,2.656151,9.214479,4.593913,-9.623200,6.447807,3.317746,-1.601822,8.909930,9.010297,-9.709483,7.021751,-1.674507,-0.749827,-6.836477,-8.679012],[-4.158683,-9.709486,-9.156763,-5.450408,-9.052838,-3.578394,0.203409,-0.531804,-0.065431,3.541468,9.575084,9.803026,-9.861677,7.174333,-2.168887,4.157006,6.391146,-3.821106,6.327903,-0.640559,-4.268250,1.187668,9.890521,5.193151],[-0.062486,-4.422960,4.293409,9.893721,2.814595,7.949115,-6.254364,2.330783,-3.870391,-2.112470,-2.945039,-1.566724,7.841468,3.742897,2.312170,-6.633899,6.777860,8.970901,6.116428,-1.891704,4.285217,-4.022437,-4.474915,8.196765],[-4.403327,2.363525,-1.076181,5.224246,7.553231,-7.208186,7.339503,-3.592463,-9.165984,-0.661934,2.852178,-1.065590,-3.054063,-3.403629,-2.165562,0.754823,2.610153,-1.182356,-4.253843,0.878625,-2.796334,-2.856219,3.716148,-4.163923],[0.113354,6.001280,-4.911314,5.632625,-0.439148,0.449583,-5.626140,6.922370,9.736459,1.040186,-2.505946,-8.261599,4.687911,-7.481101,5.919434,-3.371871,1.118802,0.447734,0.511288,-3.887309,1.959470,9.504594,5.440642,0.685476],[-9.454385,-8.174389,-4.131863,3.069926,-1.859966,-7.245961,-9.614584,-9.224198,-3.064167,5.732023,-1.117955,9.239173,-4.664049,0.861354,-2.186524,-4.559944,-6.343314,8.138227,4.684171,-4.204306,-0.244695,-3.094933,4.413165,9.353091],[-8.201752,7.825711,-5.760440,-5.873983,6.970517,-0.988527,3.167278,-5.084587,-0.814409,-0.610593,-7.615350,4.758008,3.582576,-5.309934,-1.632652,-1.121343,-8.329937,8.448123,-2.533696,9.994387,-1.783400,7.597014,2.985197,0.983107],[0.583416,3.600288,-2.362412,2.060316,-2.163130,-0.466163,6.918120,-0.359304,-0.688203,-7.360410,6.399086,2.636147,-4.432228,3.395643,-4.513899,4.754870,-1.746742,-6.001423,3.429061,-5.688939,0.947398,-3.547798,7.581468,-9.522756],[-7.306853,7.643043,5.950886,3.686422,0.604361,0.494086,8.894465,-1.949974,6.227174,-8.636130,-3.651071,4.444864,9.934092,-2.733856,-1.888299,8.046182,7.810413,-5.876915,7.487061,-6.540334,5.633050,-0.787310,-2.067354,-0.171475],[4.495397,-5.834429,-1.125328,2.797888,5.532415,-4.290231,0.615898,8.398918,-7.027699,5.445398,5.011365,0.477819,7.998127,-7.667351,-7.784782,0.086538,7.850285,7.164381,3.043327,-3.844443,-6.813866,-6.741367,-3.254812,-6.534430],[-3.765809,-7.825978,-3.224421,-1.024557,8.202100,3.314054,4.413965,-5.151235,6.089388,-3.694959,-2.368737,7.377052,-2.849602,-0.520362,7.978086,1.645507,-9.468809,-6.263104,8.940774,-8.709772,9.519222,-5.810852,0.056628,4.944595],[-5.598771,4.389756,-9.162689,6.760174,2.847676,9.633140,5.304060,-0.298280,-7.670621,-6.555845,5.852628,3.436324,-8.497379,9.880469,-1.153978,-2.641225,2.909184,8.267465,6.298053,-4.619966,0.111166,3.721882,-6.613822,-7.748137],[-6.712669,4.008016,-1.695245,-6.634342,-2.021197,-4.115730,6.873090,-3.319026,-6.328632,-6.279103,-9.408015,-5.511664,3.838973,-9.567867,8.115188,-0.677875,9.666209,8.487638,-1.359582,0.297845,-5.775431,0.705820,-4.901921,-4.996843],[-1.936644,-1.197894,4.860585,-3.361186,9.771367,-4.034034,2.565509,-3.021676,-1.113770,-2.219224,-2.207564,-1.799429,2.317121,-0.570159,6.374481,4.040915,0.341718,-2.740600,-2.718337,7.785816,-2.423557,9.868985,8.748416,-3.050833],[6.768205,-4.584357,-0.892404,-0.415974,6.534088,-1.655518,9.385661,-2.971173,7.219019,3.419133,1.938675,5.654038,6.420237,9.259004,5.895736,-7.806148,4.256535,-7.488508,2.847203,5.979618,2.499884,4.789446,2.543387,0.131697],[1.646502,7.246306,-1.815470,-0.650619,3.809694,-2.555914,0.353041,6.477918,1.259026,9.635211,3.243755,7.558794,-3.773113,9.745194,-1.281927,-8.014982,-4.418650,-7.096291,7.097750,-6.025300,2.410632,6.384447,0.483546,4.570177],[-7.794170,-1.668950,4.175547,-0.433814,-0.580187,-9.618826,-6.572223,-5.885206,-7.339399,3.402470,8.762773,-5.430156,-9.273424,-3.749704,-1.825615,4.480772,-0.415836,-8.462239,3.129031,2.244505,2.117609,8.480643,-3.527339,-7.768128],[-0.481079,-4.645410,9.192509,-5.204775,-4.664054,2.168196,-0.632812,0.406460,-6.443481,2.264472,-6.259193,-8.095839,-0.755151,-8.647384,8.233098,5.077567,-7.127000,-3.413445,-1.617097,-2.126721,8.586839,4.894489,-5.200698,-1.493134],[9.010928,-7.354817,-5.472134,7.085953,-3.682681,9.353866,-1.188388,-4.630474,1.165206,-6.135793,1.680882,-7.384388,-1.028523,3.377793,2.069986,-7.647422,9.418544,-4.477695,6.598918,-4.917478,9.096319,7.220728,-3.133603,9.576133],[-2.897023,1.971078,-8.950414,-2.897440,4.581212,8.951956,7.437785,9.789681,-2.288681,-6.284330,5.450410,-1.916402,0.038570,-3.506458,6.108440,5.828880,0.907156,6.509607,-8.686411,1.918831,4.754620,-5.419982,-8.418780,7.016175],[-1.459419,-2.929925,-0.058944,-6.892851,-9.488172,9.291187,-8.383881,-8.501414,1.507807,3.204829,3.390178,-1.952766,1.511131,-0.124965,-8.620793,9.694112,5.292893,1.762371,-9.612182,9.450557,-9.040534,-5.425021,9.414032,0.660315],[-9.847080,6.176812,2.733888,5.595461,-7.146940,-6.033034,7.858268,4.134795,7.568924,7.730465,4.880463,-3.020876,8.223776,-1.947146,4.486940,-7.707536,5.131510,-5.460746,9.416139,7.831857,5.077167,-5.881082,3.908087,0.235208],[-0.739469,-4.567337,-3.490621,-5.721335,8.145043,-5.666861,-5.883199,9.293558,-5.256779,-8.764156,4.229388,-3.890472,5.782949,4.246682,-6.894155,9.817920,6.135334,-1.748318,-1.296204,-8.000401,-2.943086,8.011824,4.041325,-0.094740],[-0.497609,5.026593,-8.153776,-0.392106,-4.201988,3.290755,-3.601750,-1.128130,-8.256386,6.702278,4.326846,4.713380,5.441046,-1.869241,9.362563,-2.296460,0.392123,7.892250,8.714424,8.594682,4.293794,7.707089,5.093620,-6.414658],[-0.380744,-4.821482,2.495430,9.856368,-6.503751,7.658077,-8.702741,3.192233,1.275396,-4.699556,-4.333742,-1.362508,-0.955493,-9.308933,9.823458,4.930008,-1.171103,4.671211,9.244835,-5.297643,-1.039932,2.345347,-3.122759,-0.084047],[1.391792,-3.411428,-5.348144,-8.775279,-4.008218,-3.516113,1.561420,-6.031774,-3.001425,7.683205,-6.923022,9.446764,6.615121,-9.913838,-8.540330,6.029253,0.344581,3.056838,-9.296086,-5.992117,-7.591029,7.746322,-8.532809,-3.447962],[1.140792,0.143580,9.170230,1.035819,6.367327,-9.668326,-7.485491,-3.932080,-5.870669,-5.396338,6.934233,8.934610,8.414122,5.991746,-1.666206,-9.919300,0.187255,-1.626500,7.070437,7.024265,7.716199,-8.403853,2.995189,1.209958],[-3.438252,-1.891915,-6.168180,-4.105759,-6.566113,3.973268,4.975399,7.118187,2.312126,7.868885,2.817663,-1.265167,9.819588,-6.497600,3.975754,-7.529044,6.862475,1.705573,-4.706759,-2.022398,7.447613,-4.732672,0.679824,8.990866],[2.382671,5.716978,0.280108,0.259433,-5.647316,0.684654,5.721251,-0.715777,-9.848530,-2.764149,9.549236,-7.810598,-3.421345,2.675284,-9.673386,6.492627,5.952794,-6.658690,-5.034678,7.106890,9.445067,-4.189644,-5.165929,-3.131928],[-3.887393,-0.026945,4.883709,-8.414679,2.388175,0.044902,-5.224763,6.244508,-9.229693,-0.659883,1.887626,6.562945,-9.118867,1.055206,-7.457536,4.116824,-4.075207,-9.988037,-2.832227,9.290613,-0.921978,7.020220,3.834034,3.236470],[-6.362840,-8.747286,5.842664,1.853697,1.722773,5.579471,-4.805891,-8.497882,-1.131342,-7.383662,3.751632,-4.877186,-1.555734,-7.349381,-9.540048,8.137632,0.712298,-7.658730,-2.540820,-6.177559,-4.142185,8.010663,4.670041,0.668945],[2.681548,-7.632878,9.594204,-0.666495,2.919114,-6.782218,-1.890807,-5.165453,4.337900,7.240620,-3.479926,-6.732940,9.643081,8.485011,2.669532,-8.563179,-4.964260,-1.439611,7.537779,-7.385907,9.697792,-7.674897,-7.855249,-2.377535],[5.884615,0.897446,7.484826,-7.925689,-8.893432,6.425991,-4.488496,-3.299393,7.726364,-8.973398,4.128609,7.437932,0.877649,9.663713,-1.910294,-9.382658,7.214548,-4.896794,4.071017,7.483989,-3.330836,4.969026,-7.382465,-2.060425],[-8.038102,-0.681028,8.656328,0.016565,4.749869,-2.903902,-3.736432,6.412676,0.163886,-3.650035,-2.741436,-0.028132,1.638358,1.951279,3.368661,1.572118,-9.168052,3.221547,2.291193,7.317568,3.984433,-8.318345,-5.740710,5.913470],[8.319783,-7.886235,0.992304,2.659000,-5.458405,-4.107154,-1.106980,-9.434916,4.921706,-9.262564,-0.936980,1.985721,1.945798,3.645968,7.197515,2.097097,-3.357639,-3.161315,-3.609521,-9.407898,-5.780524,-9.925019,-0.809508,-7.507825],[0.444573,-8.720434,-9.825499,2.387597,-7.995938,3.721841,-9.737055,-6.581970,-4.009172,-6.632635,-6.681867,5.354438,-3.165045,5.097904,-4.910248,-7.745332,-0.046693,0.385928,5.281311,7.234390,4.994189,3.328134,8.095518,0.407798],[8.389774,5.365963,-3.301264,-4.780736,-4.650241,-2.413588,2.736519,-1.759100,5.984939,-6.802936,1.123188,-5.754266,-6.935788,-4.221715,-3.892528,5.511668,2.612777,0.529899,-4.739323,-1.630988,-9.079233,6.816062,-6.717889,6.332161],[-6.302780,-1.578813,3.731946,-6.242504,-7.607904,-4.495974,-0.126326,-7.859323,-5.696161,-3.407440,-3.942350,8.823607,7.802777,-3.924439,5.111635,5.726658,-5.915637,0.809716,2.953628,4.093014,-7.724040,-0.975483,-9.719911,-7.217415],[-2.812973,3.028705,-8.532605,7.611863,2.180071,6.792596,-4.746724,-7.344527,-3.667887,-3.319167,-3.729112,1.212578,5.666858,0.942364,2.752786,-2.618069,-3.566682,-1.814550,8.076788,-3.910390,3.226276,8.402957,1.928076,-8.003350],[9.876268,6.360686,9.711673,-9.878009,-1.710363,-2.553219,6.117295,5.532194,-3.128608,-2.575499,-1.257727,-7.653582,-7.054617,8.991204,-2.512145,8.193698,-5.839195,7.005587,-7.174508,4.046914,2.032774,-2.242744,-8.746875,6.266774],[1.087276,-8.519911,-2.451564,4.373133,-1.079781,-7.396328,7.940825,-9.753189,-3.875649,9.090014,7.327268,1.208130,-8.196394,-3.224165,-4.690820,0.182688,9.855641,3.187097,-0.540699,4.464580,6.841266,9.150563,9.465547,-2.550107],[2.307267,-3.444563,-9.174429,-6.022075,3.117457,-1.014058,-1.094467,3.868218,6.205315,0.133062,-9.399913,2.258743,1.331067,-5.393812,-5.336521,-3.569471,-5.319747,1.410393,9.597512,0.032790,-7.487824,-8.777520,0.596953,-0.567907],[-4.420129,-5.974011,-7.363277,-7.836878,5.561809,1.720443,1.744150,6.442709,-7.998126,8.889277,-8.295220,5.772682,-4.243335,9.859192,5.493090,-7.938201,-3.633866,-7.058996,-6.649649,-5.222386,7.745802,-6.250333,3.702134,-8.428745],[-3.627745,3.661800,-1.180024,9.434100,-2.889173,-7.898911,-7.507130,1.382990,-5.796129,-4.104762,-7.898978,-6.027064,-9.321553,2.462003,-9.865809,2.599882,3.485499,-4.200741,8.042016,-7.891614,-9.088518,-0.082175,8.718699,3.395866],[9.796692,3.865437,-4.263597,-3.011976,-1.465595,0.793070,4.029936,3.767657,4.235427,2.022886,6.626155,4.109058,-7.535388,-4.285438,8.551555,2.501309,4.215966,3.681993,-4.489163,-5.512832,2.117284,-7.392101,5.916691,6.100572],[0.637467,7.727504,-7.306611,-6.029955,-4.130223,-4.633363,3.872232,4.341507,-0.044942,-0.431647,-4.164846,3.034681,-5.085652,-9.149470,1.669929,1.713622,-1.539513,2.672669,9.252977,-0.230998,9.088568,2.628767,-7.154811,3.392270],[9.037605,-3.563045,1.207127,6.756890,6.957194,0.779386,9.595993,6.774974,2.422094,-5.369570,-7.806867,8.398077,-0.976167,-6.238651,4.907348,2.346011,-5.365505,-3.283314,-5.355443,3.283315,5.807284,-9.015932,0.210160,1.833600],[9.072509,9.094629,-4.028334,1.900537,-4.722632,4.433942,9.470465,-6.498794,-9.181306,1.151130,9.468648,-5.611771,9.062513,5.790849,-0.512934,-7.426021,7.248284,-1.714203,-6.068695,-3.079208,9.262149,-6.570584,-1.042692,-0.439497],[3.170108,3.992091,6.587871,9.913255,3.399983,6.760516,1.092566,2.727823,-3.418239,-1.218994,8.665745,2.806814,6.868681,7.115714,-8.455445,-6.289604,-6.169067,-5.474951,-0.095336,-5.265419,7.095349,4.252331,1.502258,8.482911],[-1.163871,-7.666296,-5.742061,0.757893,7.608956,0.437681,-0.338329,6.335737,-6.167629,-0.663411,-3.332932,-4.861359,6.803479,-9.650533,-0.252093,-4.503162,-1.520428,-9.246559,-7.773596,-2.419920,-2.381565,9.369305,8.802188,3.678337],[5.012839,-2.601832,9.603447,0.298605,6.510836,2.592084,8.669132,-3.052092,9.458680,-2.934543,-1.281101,6.361470,-2.881237,-7.398093,-8.702880,7.672319,8.949127,9.732692,-3.614432,2.548925,-7.276828,8.157584,-4.888304,3.909732],[-0.847595,3.698654,-4.635175,-3.050349,-6.516444,7.220063,-1.575613,-8.124834,-1.921843,-7.768422,-4.855356,-4.932258,7.240766,-1.276804,-6.090150,1.252710,6.845716,2.296181,6.552962,-3.057355,-7.030955,-4.517884,2.464254,3.408703],[-7.238931,-3.308707,1.648174,-0.972650,5.242985,2.459881,-6.216307,-6.401990,4.539295,-2.412448,4.635099,-0.037716,-6.062084,9.160279,2.580124,6.143852,-0.818386,-8.299499,7.949965,-7.266393,2.776214,-3.065648,-7.670621,5.189489],[-7.875381,1.200451,4.103396,-8.676616,-4.839325,5.346268,-4.817743,-1.009050,-5.707379,-8.980542,5.323273,-4.414216,-7.263709,-5.712832,-8.123896,4.400984,3.217322,-8.300405,-4.471652,-3.775909,-2.096881,2.178091,4.807896,-4.199113],[-4.391161,5.924367,4.204872,0.381744,-5.300453,3.315606,6.123578,1.400721,6.704129,0.764290,-6.341261,-9.347996,9.040985,4.889454,6.778552,2.928167,9.255231,5.775251,-0.794533,-4.718220,0.619719,5.148290,-4.285540,0.976067],[6.616179,-4.021958,8.224542,-5.252145,-2.802952,5.334581,8.185685,1.221845,7.504220,-8.913911,4.217293,-2.034099,-4.914399,-6.606109,-2.157579,-8.249536,-8.131960,-9.471468,3.393486,0.117958,-2.802316,-2.195254,9.588023,-3.695725],[-7.818801,-1.166313,-0.389546,-0.368989,0.120704,0.171076,8.878009,0.920432,-3.012750,6.223352,-5.813539,6.593790,0.718464,7.603126,-9.024893,1.325807,-5.418314,-3.012327,-2.833705,9.504747,8.095553,5.898172,-2.975150,4.649141],[-6.276949,-8.232695,5.743496,-0.728065,7.591707,7.168662,9.394126,4.041229,-6.409600,-6.524044,-2.076804,-2.689505,9.125823,-0.047847,-7.222620,-0.212385,-4.545738,-2.095697,0.259931,-4.158557,-7.248456,-6.134827,-3.800736,6.000980],[9.632227,5.310815,9.253037,-0.484321,-7.168211,-8.966322,-0.801053,3.918651,3.679808,-5.953153,-6.861791,-7.916171,-5.146100,3.912075,-9.354408,4.896451,-5.021789,9.253398,5.412659,-9.258779,8.151573,-2.524375,-8.680297,-0.421676],[8.053483,-8.503158,-3.592522,-3.299112,4.362732,5.017911,-3.038914,9.653320,-9.855144,-2.070962,-4.995808,2.264775,3.533641,4.709724,6.966215,-0.702349,-4.028109,4.350525,4.525955,3.653719,2.338337,-6.176809,-4.359056,-6.711354],[-8.664715,-2.933996,-8.261583,-8.646943,1.515872,0.368374,-3.666352,-5.040968,-3.215680,3.032348,9.607947,-6.583465,3.660100,9.648138,-4.583669,-1.213489,-6.645796,-7.608754,-6.282900,8.007871,-8.357978,9.844638,-6.835825,-2.026606],[7.858540,-8.104658,-7.005455,5.545608,5.212960,5.578337,-3.162765,-2.025454,-9.743826,0.885173,-2.095109,6.832322,0.780233,1.023557,-5.283363,-7.230356,7.048011,-4.686265,9.927654,7.734580,-6.114364,4.471596,1.211302,-6.578312],[-0.872384,-4.211051,-3.851593,1.205659,-6.049255,3.312573,-6.101892,-5.242449,-0.917863,-4.761847,-5.768590,-5.326745,-2.266662,-4.104537,5.125777,-5.697246,-6.762828,-1.119219,-3.823345,7.919941,-8.994568,2.436076,-6.534704,-2.729187],[-0.030317,7.300651,0.279410,-6.367575,6.391601,0.398032,6.654251,-9.149921,-6.424612,-9.407369,-2.091862,-3.345020,-4.443442,-1.110478,7.129206,7.097591,0.868769,8.152232,-6.458740,-0.016206,-7.987052,-6.010930,6.073318,1.311316],[-4.332823,-4.357522,2.037160,2.800409,-9.879674,7.260897,4.924571,-6.631913,0.815104,0.004732,2.379576,1.814237,2.439339,1.276348,-8.368919,-0.854103,-5.509867,6.381313,3.096841,9.875258,-1.712224,-9.509068,8.174196,-6.774982],[-7.748811,-4.316975,-1.401930,6.094144,5.674064,-7.324587,5.220128,-9.825619,-0.549352,-6.324482,5.022063,2.091836,-4.242712,2.748811,-2.251410,-0.457178,8.293956,-1.129245,-9.548746,6.120361,-3.304497,9.094589,-2.876057,3.115445],[3.705958,4.885872,5.874151,7.768025,-2.455994,1.371231,-4.531163,6.359577,-3.298318,5.894767,1.947736,5.096214,9.830671,0.776126,-3.121534,-1.381117,-8.616862,-3.189271,-3.387079,5.970614,-6.008259,-2.373142,-3.857770,-3.630488],[9.992034,2.766596,-8.143384,8.597699,7.452410,-5.108127,5.122849,-2.594069,-6.660728,-6.265056,-7.029513,1.415086,-0.700811,6.992896,6.642478,-6.881081,-8.423794,9.792919,-0.472481,-5.600284,2.572041,7.994991,6.259838,5.218652],[1.681290,-8.461390,0.998827,-8.035342,5.308017,2.002000,-6.885204,-3.085772,8.658065,8.758400,-0.084010,-6.945153,-5.715453,-0.869673,2.916522,6.530824,7.898258,-3.780756,2.592321,1.989139,-1.643656,5.603086,-7.376536,4.915607],[0.028374,9.888637,-0.828464,-0.454564,1.350089,-3.271703,-4.377063,4.305961,-9.368383,-2.656247,2.144899,-8.813883,-0.191900,-0.160539,3.664132,7.961049,-0.124963,-1.048702,-3.301435,-4.392155,-7.851116,-4.878780,-7.617001,-4.162517],[1.934183,6.420150,-8.131075,-2.134145,7.961896,5.365467,0.249436,-6.872073,2.779760,-4.490840,2.933879,-5.855986,-4.275204,-6.198700,-3.796417,9.437009,5.242513,-7.904529,-7.668550,9.418605,4.099061,2.585906,0.344614,9.697058],[-3.761248,-1.309508,-2.780412,4.171927,9.915905,9.761079,7.028335,2.609964,7.100827,-5.638050,-0.108519,-4.523727,8.909672,-8.160432,3.935114,7.842423,-5.001371,2.373708,-0.915739,8.544947,-6.850320,-2.123014,2.576474,-6.362395],[9.479656,-8.497304,-6.825163,-4.169074,-6.213180,-2.560430,-6.789965,-0.999500,9.147098,0.214945,-2.896941,9.569134,5.089876,-5.400585,4.069504,-5.329167,-2.315298,0.275971,5.404298,-1.661640,-2.580179,9.649236,-2.380895,5.086659],[1.125304,-7.821005,0.668708,-4.736634,2.646326,5.490496,8.545665,7.972659,3.558833,3.133389,-0.631387,-0.604613,-1.827182,3.154603,7.941730,8.867362,6.509788,2.626726,0.522980,-9.151709,-2.469604,-5.113907,8.698207,7.999548]], dtype = "float32")#candidate|7426|(100, 24)|const|float32
call_7424 = relay.TupleGetItem(func_2840_call(relay.reshape(var_7425.astype('uint64'), [14, 5, 14]), relay.reshape(const_7426.astype('float32'), [2400,]), ), 1)
call_7427 = relay.TupleGetItem(func_2843_call(relay.reshape(var_7425.astype('uint64'), [14, 5, 14]), relay.reshape(const_7426.astype('float32'), [2400,]), ), 1)
bop_7432 = relay.minimum(const_7426.astype('int16'), relay.reshape(call_7424.astype('int16'), relay.shape_of(const_7426))) # shape=(100, 24)
bop_7435 = relay.minimum(const_7426.astype('int16'), relay.reshape(call_7427.astype('int16'), relay.shape_of(const_7426))) # shape=(100, 24)
uop_7442 = relay.sqrt(const_7426.astype('float64')) # shape=(100, 24)
bop_7444 = relay.bitwise_xor(uop_7442.astype('uint32'), call_7411.astype('uint32')) # shape=(3, 100, 24)
bop_7447 = relay.bitwise_xor(uop_7442.astype('uint32'), call_7412.astype('uint32')) # shape=(3, 100, 24)
bop_7454 = relay.minimum(call_7411.astype('uint32'), const_7426.astype('uint32')) # shape=(3, 100, 24)
bop_7457 = relay.minimum(call_7412.astype('uint32'), const_7426.astype('uint32')) # shape=(3, 100, 24)
func_5898_call = mod.get_global_var('func_5898')
func_5900_call = mutated_mod.get_global_var('func_5900')
call_7459 = func_5898_call()
call_7460 = func_5898_call()
uop_7467 = relay.rsqrt(bop_7444.astype('float32')) # shape=(3, 100, 24)
uop_7469 = relay.rsqrt(bop_7447.astype('float32')) # shape=(3, 100, 24)
func_7075_call = mod.get_global_var('func_7075')
func_7076_call = mutated_mod.get_global_var('func_7076')
call_7473 = relay.TupleGetItem(func_7075_call(), 0)
call_7474 = relay.TupleGetItem(func_7076_call(), 0)
func_6565_call = mod.get_global_var('func_6565')
func_6567_call = mutated_mod.get_global_var('func_6567')
call_7477 = relay.TupleGetItem(func_6565_call(), 0)
call_7478 = relay.TupleGetItem(func_6567_call(), 0)
output = relay.Tuple([var_7425,bop_7432,bop_7454,call_7459,uop_7467,call_7473,call_7477,])
output2 = relay.Tuple([var_7425,bop_7435,bop_7457,call_7460,uop_7469,call_7474,call_7478,])
func_7481 = relay.Function([var_7425,], output)
mod['func_7481'] = func_7481
mod = relay.transform.InferType()(mod)
mutated_mod['func_7481'] = func_7481
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7482 = relay.var("var_7482", dtype = "uint64", shape = (980,))#candidate|7482|(980,)|var|uint64
func_7481_call = mutated_mod.get_global_var('func_7481')
call_7483 = func_7481_call(var_7482)
output = call_7483
func_7484 = relay.Function([var_7482], output)
mutated_mod['func_7484'] = func_7484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6703_call = mod.get_global_var('func_6703')
func_6705_call = mutated_mod.get_global_var('func_6705')
call_7488 = relay.TupleGetItem(func_6703_call(), 0)
call_7489 = relay.TupleGetItem(func_6705_call(), 0)
output = call_7488
output2 = call_7489
func_7504 = relay.Function([], output)
mod['func_7504'] = func_7504
mod = relay.transform.InferType()(mod)
mutated_mod['func_7504'] = func_7504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7504_call = mutated_mod.get_global_var('func_7504')
call_7505 = func_7504_call()
output = call_7505
func_7506 = relay.Function([], output)
mutated_mod['func_7506'] = func_7506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6565_call = mod.get_global_var('func_6565')
func_6567_call = mutated_mod.get_global_var('func_6567')
call_7539 = relay.TupleGetItem(func_6565_call(), 1)
call_7540 = relay.TupleGetItem(func_6567_call(), 1)
uop_7567 = relay.log2(call_7539.astype('float32')) # shape=(3, 1, 1)
uop_7569 = relay.log2(call_7540.astype('float32')) # shape=(3, 1, 1)
uop_7576 = relay.log(uop_7567.astype('float64')) # shape=(3, 1, 1)
uop_7578 = relay.log(uop_7569.astype('float64')) # shape=(3, 1, 1)
output = relay.Tuple([uop_7576,])
output2 = relay.Tuple([uop_7578,])
func_7582 = relay.Function([], output)
mod['func_7582'] = func_7582
mod = relay.transform.InferType()(mod)
output = func_7582()
func_7583 = relay.Function([], output)
mutated_mod['func_7583'] = func_7583
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7596 = relay.var("var_7596", dtype = "int32", shape = (5, 5, 14))#candidate|7596|(5, 5, 14)|var|int32
const_7597 = relay.const([[[-5,-1,-6,-3,5,-5,-9,9,-7,10,-8,-9,-5,-8],[-10,-10,2,9,10,5,6,-10,-4,6,3,-1,7,8],[4,2,-9,-1,8,8,-4,3,3,-4,-6,8,-10,-10],[10,-9,-6,-10,-5,-7,-3,-9,8,-8,9,9,4,-5],[-8,-1,5,-5,-3,7,6,-9,10,9,-1,-10,2,-8]],[[-7,-3,7,3,6,-4,-3,-4,-6,-1,10,6,-8,6],[8,-6,-6,-9,-3,-7,-10,-7,-2,5,4,6,-5,-9],[-1,-5,-6,3,2,-5,4,-5,2,9,-10,6,10,10],[-8,-10,-4,7,8,4,-2,4,-2,2,10,2,6,6],[1,3,6,8,8,2,5,-5,-6,3,-9,-3,-6,9]],[[-2,2,-2,3,-8,-10,6,4,9,-10,-10,4,-10,6],[-4,2,1,-1,8,-3,-5,-3,-6,-2,-6,-9,-7,-6],[9,-5,-7,9,10,3,4,-2,-10,7,4,10,-4,-8],[3,8,-6,-5,9,-2,-3,-4,-4,5,-5,-1,-2,1],[-1,6,5,-6,-6,-3,-6,-1,4,8,-4,-2,-5,-10]],[[-6,-2,-1,1,-2,-6,-9,-1,-6,5,-10,7,-6,-2],[4,8,2,8,-10,-1,5,3,6,8,8,3,-6,3],[1,-3,-7,6,-4,-7,3,-9,5,4,-5,3,-8,3],[-7,8,-2,-7,-3,-2,-7,-9,7,1,-9,-1,-9,-10],[-3,3,-9,-9,9,2,9,8,5,8,-7,-3,-6,-3]],[[-1,4,-7,-5,5,1,-10,-7,-9,8,-2,5,7,-8],[-2,-8,5,6,-8,-2,5,-10,-6,-7,-1,8,-1,-5],[-9,-9,-3,4,10,3,1,2,9,-2,-8,10,3,-5],[9,3,10,-8,1,-2,-2,-1,-10,-8,7,-4,10,-4],[-1,7,6,9,2,-2,9,-5,9,-3,-1,8,2,2]]], dtype = "int32")#candidate|7597|(5, 5, 14)|const|int32
bop_7598 = relay.maximum(var_7596.astype('int32'), relay.reshape(const_7597.astype('int32'), relay.shape_of(var_7596))) # shape=(5, 5, 14)
output = bop_7598
output2 = bop_7598
func_7601 = relay.Function([var_7596,], output)
mod['func_7601'] = func_7601
mod = relay.transform.InferType()(mod)
mutated_mod['func_7601'] = func_7601
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7602 = relay.var("var_7602", dtype = "int32", shape = (5, 5, 14))#candidate|7602|(5, 5, 14)|var|int32
func_7601_call = mutated_mod.get_global_var('func_7601')
call_7603 = func_7601_call(var_7602)
output = call_7603
func_7604 = relay.Function([var_7602], output)
mutated_mod['func_7604'] = func_7604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7380_call = mod.get_global_var('func_7380')
func_7381_call = mutated_mod.get_global_var('func_7381')
call_7646 = relay.TupleGetItem(func_7380_call(), 0)
call_7647 = relay.TupleGetItem(func_7381_call(), 0)
func_7185_call = mod.get_global_var('func_7185')
func_7186_call = mutated_mod.get_global_var('func_7186')
call_7663 = relay.TupleGetItem(func_7185_call(), 0)
call_7664 = relay.TupleGetItem(func_7186_call(), 0)
output = relay.Tuple([call_7646,call_7663,])
output2 = relay.Tuple([call_7647,call_7664,])
func_7667 = relay.Function([], output)
mod['func_7667'] = func_7667
mod = relay.transform.InferType()(mod)
output = func_7667()
func_7668 = relay.Function([], output)
mutated_mod['func_7668'] = func_7668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6049_call = mod.get_global_var('func_6049')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_7677 = relay.TupleGetItem(func_6049_call(), 0)
call_7678 = relay.TupleGetItem(func_6050_call(), 0)
func_2462_call = mod.get_global_var('func_2462')
func_2466_call = mutated_mod.get_global_var('func_2466')
const_7682 = relay.const(-6.698855, dtype = "float32")#candidate|7682|()|const|float32
const_7683 = relay.const([[8.298253,-7.994416,4.075941,6.183315,-5.937426,4.586830,6.292772,9.155391,8.246440,-1.466588,-2.426699,3.382764,4.047607,-9.421335,0.208081,6.606246,-5.646145,-0.410890,-7.242419,0.207958,6.136122,-4.147891,1.564051,-3.776847,-8.472756,1.386808,-6.261930,2.065757,3.846925,-2.375033,-2.706222,0.140570,3.279085,-3.289623,2.940738,-4.932736,9.979295,-4.437328,-1.689269,3.582846,6.277478,4.323276,0.213437,-5.308072,6.032808,5.553929,-5.304477,-8.931645,-8.297769,7.013534,-6.182841,0.883437,-8.255022,-3.334264,-8.865631,4.233575,-0.932003,0.124402,-5.938753,-0.481799,-0.123433,4.032898,5.556736,9.500069,4.881308,0.148802,-2.664309,9.106149,-6.902565,-5.486101,2.097155,7.832660,-7.719255,4.682615,-2.179338,-7.241145,9.848044,1.718274,5.577717,-9.216605,1.429391,-5.529529,-6.936904,-6.475205,-8.357902,3.927243,1.783699,0.676582,-5.802898,-0.493010,3.668247,8.918739,-0.898664,0.658869,3.828390,-8.157854,2.617198,9.602040,-4.962968,0.732482,-7.197336,-2.715686,9.826064,7.906823,-1.028435,-6.731362,2.421296,-2.417542,-1.512990,9.860428,-2.681115,-2.147585,4.736961,4.807097,8.561062,-2.968316,-4.362919,5.012243,-6.135479,5.850391,-1.356959,-6.231356,9.785601,-3.895629,-9.179138,-3.499415,2.491535,9.125272,-9.998849,1.675456,8.191157,3.143469,-7.344924,4.579167,5.837570,-1.485228,-7.885050,5.267741,9.379107,3.630492,-3.287088,-6.138473,-8.568250,-3.269494,1.286499,-1.497591,7.672378,-4.319239,1.354918,-4.325014,-1.304113,-5.484443,-8.173817,-8.938347,4.232693,5.413911,6.000046,-1.473545,0.387469,-5.348288,-2.531636,8.098162,-1.627836,0.700193,4.480954,0.740011,-6.517389,-4.501808,7.083550,7.706548,-1.301015,-9.422694,-0.647717,2.728532,3.994849,-4.438494,9.810043,6.456863,0.110249,0.637611,8.112078,-9.211233,-5.712650,-0.626877,-5.507031,0.225224,-9.776286,-4.051644,-6.992457,8.669344,-6.542140,5.604315,8.742739,0.046463,2.797427,-5.073479,3.000055,5.981565,1.517473,-3.250813,6.549089,4.125781,0.587825,-4.718288,8.465079,-5.665466,-6.887212,0.541481,-5.401474,-8.994033,2.393298,-3.073224,-8.097439,9.606362,2.205813,4.716727,0.828912,1.669219,-6.009595,-7.986342,8.764771,3.950365,-6.757770,4.975445,-2.818414,-7.542556,-2.786542,-4.955501,-8.519397,9.578030,8.287217,-5.310089,0.880204,-1.999653,-4.460829,0.771302,5.505820,8.379007,-2.567606,-8.568401,-0.695457,-6.176714,-9.909540,4.988879,-9.730502,-5.654993,1.556383,-9.444912,-1.064902,3.076131,0.682012,-7.235605,9.716497,-0.533689,8.311155,-0.763004,-4.817563,-6.335341,-6.248001,5.403519,-3.591351,-7.038325,8.859135,-9.345371,2.618141,-4.301767,6.922355,3.051823,-7.163667,-7.168007,3.643026,9.852021,6.864325,-8.765335,-6.151184,4.265776,6.097556,-0.035285,-4.258425,4.696739,-3.645460,1.932473,-6.153555,4.123626,-2.853575,-1.415228,-2.212330,3.883437,-3.617354,3.102177,-3.587935,4.248741,3.579375,-2.752533,0.191182,1.891203,0.298993,3.221101,-9.703789,-2.500803,-9.193844,-8.175773,-1.457267,-9.346213,4.350634,1.339354,-1.581974,0.720154,7.914460,-1.011470,7.156341,-1.356440,-2.303187,6.025332,-4.668472,6.021228,-8.885301,-4.267890,-0.601375,3.417288,-7.890661,7.355336,-6.167978,-4.219782,-7.300577,-5.448738,8.725827,-5.611949,-1.817334,-9.327882,8.349631,5.031175,9.639219,-6.817304,-0.832351,2.042604,5.588177,-4.845123,7.317110,3.881324,2.115843,-4.322157,-5.879477,-1.445012,-4.585977,-4.013401,-4.879915,3.903463,0.337516,5.168538,-2.410562,-2.147611,8.053399,0.659871,-7.593435,-4.149705,-9.847669,-8.425679,4.204080,7.921138,3.962609,8.491583,8.450009,1.565159,3.851384,-9.749784,4.832670,2.722740,8.973543,9.283985,7.930637,4.006087,-3.423220,-5.640391,-1.060781,8.811200,8.433310,-1.934167,-4.849502,0.703263,-6.093843,2.532905,4.435766,4.048936,6.128234,-2.711683,-8.366612,-8.365271,1.840281,9.676900,-3.315469,8.911726,3.351973,-4.635458,3.599308,6.259911,0.204631,8.337485,3.792983,-1.520523,3.410540,8.214513,-9.082480,6.229523,8.280074,-6.172541,1.411069,8.984720,6.333084,-3.524918,-6.607315,-0.159254,-4.815545,-7.765375,-9.309331,-6.617803,0.838300,-5.607731,4.792012,8.928797,-6.457000,-6.179277,3.847013,-2.372166,1.228637,7.076824,1.566422,-3.841793,7.581973,8.169182,4.055082,3.925624,-8.912642,-5.241303,9.745003,-8.856782,3.014810,-0.979695,-7.196960,4.155250,0.729270,4.764531,4.177531,0.844714,-7.435653,-2.979457,-4.311728,-7.110674,3.175796,1.267923,-1.399888,-7.582806,-7.111969,-3.375957,-5.982687,1.995778,-3.315876,-0.465507,-9.279524,-5.598421,-9.831307,-2.021948,4.551317,0.125433,3.735052,1.347564,-7.014025,-2.330665,-3.458372,-2.414698,-3.533399,5.732584,-1.371652,-6.974564,8.281999,-1.794836,-5.733716,-9.409459,9.888594,-9.396273,-9.428611,2.180686,-6.532968,-5.784976,-6.539436,5.158082,-3.721709,-6.883519,-1.757065,9.644008,1.810708,2.925512,-3.623336,7.629445,-0.818481,-9.155413,-0.898573,1.419568,3.883562,9.417854,-3.548771,4.370347,4.350241,-0.557841,-4.813082,0.224813,7.263608,7.596077,3.398632,1.750460,0.486172,-9.697548,4.901372,-4.530819,7.044551,1.222722,-2.214674,-5.888874,-1.512259,3.516060,-4.912364,-3.992002,7.991087,9.763602,0.238956,-7.249160,3.754396,-1.770480,2.327572,6.750267,-5.553818,-5.483259,8.496291,2.265219,8.551823,9.882865,9.810150,4.148842,0.253286,2.528858,-5.941264,4.301010,4.450541,-2.157121,-2.863728,2.605023,-1.089685,6.219032,2.740141,3.137226,6.730047,-0.078271,9.858967,-3.911816,5.262169,2.527235,5.660865,2.129349,-6.307040,2.953222,9.375208,7.638273,4.974685,-1.169876,0.678533,6.426077,-7.888218,-9.900051,-5.316140,-4.600810,-1.266672,3.255360,3.609956,-6.114233,-2.300772,-3.986244,8.202657,-8.730880,3.392879,0.647762,-7.084023,8.365310,-7.179153,-4.170421,-0.364097,-2.416041,-9.590147,3.121712,-1.243971,9.743206,8.244254,7.940992,-7.067837,7.995301,-2.885062,-2.321516,-3.511878,7.374733,0.104275,4.411071,-8.812364,0.923825,4.588354,-5.254569,-2.879675,-7.600231,-5.501714,-3.147008,2.953309,-6.141222,-0.730878,7.107861,-5.431936,-4.763137,-5.577344,-7.505094,1.463414,-2.376544,-8.747112,6.336526,-4.417489,-4.148591,2.702301,8.264736,0.117193,-4.852799,9.828245,-1.744053,-7.435039,5.402649,-3.987100,0.539167,4.197905,-0.402872,2.105411,1.257274,6.585681,-5.482285,-2.444644,-4.487073,4.817832,-5.854002,-0.834805,-1.650319,0.519059,3.953364,9.374325,8.799128,-6.531899,-3.068293,5.894897,-9.810977,-3.336485,9.331294,-9.046841,-9.977213,-2.814245,-8.454428,9.000698,4.000186,2.151574,-1.803893,-4.399385,7.361299,1.260991,-1.726177,3.956139,5.228946,5.199201,8.803002,-4.557379,5.535071,-4.306294,0.024925,-6.634186,-7.454108,-8.692596,4.500139,-3.578531,6.793879,-0.282954,3.733781,-7.205668,5.949842,6.095443,-1.156469,-9.307248,6.155624,0.680158,-7.640366,2.077117,1.678256,5.640066,-4.867310,-1.928062,6.024475,7.932355,-7.265086,-7.555167,3.362140,-8.978749,0.966287,3.120215,3.997035,-3.968583,7.966758,-5.170167,5.017831,2.023195,-1.706474,6.535280,-7.534083,-4.119939,3.068483,5.600916,-1.154603,-4.796865,-9.302792,-9.254376,-4.540455,-2.394790,2.698347,8.618005,-8.694641,-7.676295,-4.624978,7.653588,4.624219,2.467278,-5.289743,8.215238,5.014766,-2.929422,-0.613772,5.544494,2.131888,-9.265742,2.609050,9.462207,-3.297042,-3.502225,-7.275763,1.941713,3.642507,-4.746766,1.711142,-2.180384,1.585129,6.155829,-9.437050,-3.984977,-0.019191,-2.969442,-8.324643,2.224070,1.286193,1.681611,0.266789,1.052652,-4.468670,-6.207876,-8.271712,-4.486970,-3.947698,7.563936,-6.161697,-6.691236,-5.625998,-3.194408,6.553517,4.088928,6.633658,-8.163278,7.727820,2.078842,6.830426,-3.028911,7.591153,4.675800,-4.244677,-9.909563,-5.269003,6.863313,4.553295,-7.922111,7.799393,9.027636,-7.094578,-0.308440,-9.692239,0.778277,2.768523,2.514335,-6.230114,-9.949716,7.244810,-8.191352,-5.270057,-0.712484,8.951005,-0.757496,-7.228337,-6.338582,9.149994,-1.577183,-7.287750,4.815842,8.083330,-4.818583,5.610902,-0.213168,7.479782,-6.768194,-0.950372,5.925063,1.835196,0.185785,-4.558222,0.436051,-5.388115,8.719120,7.992103,-1.111926,5.882974,7.046718,-2.766579,6.234524,-2.885694,8.882941,-4.281802,-0.268422,-6.626999,8.098430,7.023246,-2.034155,-3.535036,8.736269,-8.945362,1.509699,-1.567836,-7.664054,-6.009265,7.849879,6.733370,-7.952497,3.383415,-6.370220,-0.315613,-0.944970,-0.656661,6.781975,-7.174353,-3.981470,-2.547783,-0.768837,-6.056544,7.017519,-2.268471,9.364052,4.310658,0.120414,0.210547,-5.693914,2.848197,8.256890,8.884252,5.594089,3.159154,-2.866797,7.110159,7.649757,8.513796,-5.272784,4.723071,-1.666002,5.850936,1.990921,5.528559,-5.746416,9.243478,-6.197802,-3.193971,-8.169315,5.052712,-2.891669,-4.983106,5.614963,-7.626106,9.435398,3.953629,7.324556,-0.670104,4.662860,-2.106766,-4.153719,-8.295805,6.115935,-4.656977,-3.802449,-4.743090,-0.954251,-6.347337,6.257484,-7.849773,-9.917451,-6.593362,-2.623225,3.856507,-2.344118,-6.948992,7.512905,7.659492,4.204915,-4.755446,0.554285,-8.001625,6.047709,4.755288,-5.696683,-6.057052,-5.110483,-1.786493,0.288579,-9.952046,1.988383,-7.698272,8.084408,4.538917,-4.331874,1.237968,2.019236,8.387085,-4.125507,8.001781,-3.638765,-8.187715,-1.537128,-6.184827,-3.543022,5.879336,7.669953,-1.053372,4.415020,6.613737,7.827892,6.713140,0.894842,-2.811003,-2.446486,-2.738089,5.327647,4.829027,7.682190,9.972883,-6.970731,9.795395,-3.322944,9.382374,-8.523135,6.943261,1.191491,-1.224879,-8.636391,-9.587304,-9.618164,7.710342,2.943149,0.939682,-7.667324,-3.683658,6.212741,-3.143023,4.326605,4.955881,1.953960,-8.902450,4.410879,8.253330,8.862836,-4.055215,-5.851288,2.023592,-8.688405,-1.611708,4.881516,-8.932406,-1.103414,-2.889150,-8.612641,0.923881,2.864946,-8.821126,-3.833758,-2.902810,2.168062,0.574490,-0.790368,-9.884481,0.357777,-0.864768,6.164368,4.465847,5.041718,-9.721552,0.270313,3.769598,7.863284,-0.252128,2.895040,3.010586,0.347772,-8.680327,6.975864,1.615361,7.719806,4.919528,-4.286310,0.436829,-5.553659,4.598074,1.345490,-8.186082,-2.545151,3.527775,1.088067,-5.949645,2.277826,3.112142,2.861463,-3.992000,-7.004647,-7.099307,-7.572710,-8.257524,5.761320,7.985418,9.106458,3.048772,-1.386033,0.008710,3.988321,-5.969593,2.602225,2.695253,-1.813890,8.745623,5.835163,7.105401,5.242832,-6.080807,6.229548,-5.182325,-3.750188,-7.522798,-6.045598,-6.012388,-5.225658,-3.270569,-0.655821,-0.906543,4.927105,1.700869,8.034908,8.091284,4.414145,2.172602,0.643237,0.828705,8.031696,-5.687258,4.594341,4.392791,5.567726,9.058946,0.450064,0.551038,-1.783647,8.167119,7.949108,-8.917851,3.047203,-9.142479,1.359251,-4.569532,2.240988,-0.503255,6.748090,-9.988567,-7.462160,2.793985,-4.853054,-0.312090,5.510627,-0.092440,-1.406920,9.412768,7.562017,-4.205457,1.635313,4.501139,8.376080,-9.446108,-4.249467,-7.886534,-6.098018,-1.070034,-7.361197,4.516158,9.460342,-1.568789,3.264076,6.135972,1.062970,8.146909,-4.384291,-9.503810,3.402795,-0.077850,5.175383,-8.177478,-8.560074,-0.241674,8.245809,9.418023,-7.005480,4.446623,0.792874,-3.245479,-8.996144,-0.727934,-5.909906,3.804128,4.907007,3.800204,-3.221279,-0.693868,7.346798,1.822169,9.310417,3.620724,-5.686661,6.845207,6.099024,6.622942,1.750256,-5.989464,-0.634661,8.446570,3.518430,-0.553868,-3.050080,5.359744,-8.467263,8.298203,9.352408,0.817314,1.128241,4.725717,-9.153206,-7.172786,-9.164273,1.022457,-3.543514,-4.446206,-4.705689,2.792331,-3.308294,-7.308422,8.867078,-5.267237,-8.791344,8.148076,-4.301909,-2.645247,0.848579,-0.019220,6.679826,-5.603459,7.555218,9.109188,3.501319,-8.095697,6.665131,-4.476666,-7.229347,8.859482,-0.427757,-2.801813,-0.722506,2.510971,-7.586174,8.423673,-5.740294,5.295923,4.127939,8.839288,-0.704359,-4.977841,-6.645505,-6.564890,6.351652,1.663923,-9.136652,-3.960039,-7.869759,-4.856540,3.315333,-0.308132,0.141720,7.113565,-2.404400,-8.405302,7.372938,5.068368,5.283802,-9.197733,2.042634,4.455386,-3.832506,-8.415744,2.958853,6.872110,5.391008,-5.682790,5.434552,8.024511,-8.137743,-0.680701,-7.351394,1.256397,-6.478464,-6.051710,7.974315,4.265094,5.743167,-0.800447,7.210894,5.323128,5.863307,7.749345,-5.491582,3.346118,-9.933902,-7.623756,1.603040,2.874980,5.768543,4.645531,2.777059,-0.579101,3.849376,9.359820,-7.582104,3.267586,0.966291,9.264910,1.727118,-6.351847,-8.336750,-8.180925,8.720217,7.186040,2.885739,1.214171,-2.429036,4.081223,8.324762,-4.329233,7.795648,0.576467,-4.839227,-0.428598,8.758055,-2.175737,6.711823,8.515708,-6.185219,-6.053935,-1.112415,-4.227809,8.972941,-9.737137,-1.862372,6.021950,-4.354693,-1.571678,0.830488,-1.606992,-2.348730,-9.884854,4.104886,-7.813950,1.993003,2.446775,-0.847023,-2.852636,6.322090,-3.837499,6.698531,4.573514,5.571511,-0.929536,6.307367,4.019249,8.422719,4.183870,-5.238369,-3.905435,-9.609359,8.472854,2.116234,7.376017,-8.905336,4.378746,4.201088,3.999717,-4.322865,9.595884,-4.724889,0.079911,-8.933555,-2.214116,-9.325036,-5.619890,-5.264905,-4.862198,9.708448,-7.982937,6.344805,8.691856,-2.503158,0.252114,9.194706,-3.367578,-9.064955,3.991871,5.580555,4.057491,9.445223,-0.937256,4.826843,2.818267,-5.566728,-3.649872,7.376026,-0.586389,-9.487218,4.883470,-8.326814,8.618477,0.985152,-2.360993,-3.760224,0.582789,3.545830,5.248679,-1.131905,-4.566339,-7.860103,-5.061629,-9.025189,4.733521,5.045855,-3.655633,5.879571,-1.927317,5.051395,0.324685,-7.490491,9.689618,-5.191849,-9.998668,8.319001,-1.976546,1.403005,-5.783860,2.074607,-6.063827,-1.642196,4.282487,-9.599934,-2.045480,-2.483492,4.950568,-8.315265,-6.085876,9.152801,6.353556,6.849087,-7.848782,5.254114,8.330411,-5.742857,2.077546,-1.756667,-6.522787,-0.096944,-6.850380,-2.751147,7.233080,-2.953431,-5.516843,-3.715024,9.900291,9.121354,-7.085488,-5.149112,6.084686,8.400570,5.396198,1.250568,-4.635894,-6.942059,-9.675112,-5.503197,-1.725775,-6.391972,-4.353994,-5.121753,-4.217034,1.867403,-3.675095,-9.617965,-4.517216,-8.757035,-4.902260,-7.738742,0.055683,1.753171,5.834523,6.838972,3.927819,-3.991876,-5.393922,5.218142,-0.985490,5.400613,-3.269066,8.062238,1.747172,-9.280273,2.517281,-0.769371,5.406985,9.643025,8.390235,-2.317365,-5.625164,-5.027474,-4.376567,1.115405,-4.370076,7.948536,5.946917,-6.818767,7.046753,-7.281567,5.368495,9.066878,-0.049473,1.400373,-1.812087,-8.337460,5.098401,8.990645,-6.323787,-8.875568,-5.628112,5.019491,-4.126997,-8.987125,-6.559842,7.322030,-8.856597,6.699751,8.239675,-1.605433,-4.623765,-1.850622,-8.796996,8.816569,-3.231584,6.037042,-6.758773,-6.421989,-3.239870,-7.666445,7.641332,-6.630865,-7.250288,7.662042,4.260967,1.523268,-0.031475,9.392305,-0.997853,-4.039071,-9.595761,4.212265,-6.442699,-0.459121,-4.117805,-1.140304,-1.393181,6.842148,-9.080834,-7.931979,6.336203,4.266563,9.573210,-8.630716,-3.820669,-2.386990,-7.034777,6.828272,-7.563798,-5.927547,-1.647112,-5.017734,6.372945,4.007286,-2.773782,1.910332,-3.041899,-3.872344,0.400791,8.322870,3.966679,1.731404,0.862239,-3.772685,-8.801240,-8.447715,0.630713,8.737430,0.659453,-3.908891,-2.638190,6.030351,6.231728,-9.034887,-5.556387,-7.365092,6.019711,7.165826,-3.429547,-2.142931,-1.248642,9.202483,-8.530937,1.352455,8.071810,7.193407,0.137092,-8.695204,-2.989231,-3.742633,-4.859472,-6.074617,-3.246985,-3.623820,-7.788120,1.531537,-9.269004,-9.927564,7.271409,-7.227376,-6.687034,-9.215200,-8.333032,-3.687193,5.536317,5.230085,7.439232,6.490389,8.853782,-3.517906,0.018397,1.280972,-6.731636,-7.329306,6.738256,-5.951462,-8.905410,4.723418,-8.538121,-5.814044,-0.802948,6.257279,6.873367,1.562908,5.764524,-1.507171,3.706792,-7.447315,-6.507111,6.496870,8.689333,7.649694,-8.265517,-8.784224,-1.742553,-3.691792,-1.177858,-3.913910,4.151786,-0.321128,1.319718,4.968788,-4.944021,-2.744989,-5.757949,-4.015133,2.289056,7.510717,3.124794,-4.928307,-5.639165,-2.017958,0.224902,1.154252,3.870364,1.108354,-7.356886,6.257600,-5.037848,5.391002,-7.058641,-8.063103,6.719217,8.290223,5.525761,-0.770966,0.442820,-0.041198,6.131464,8.769365,0.883631,9.200001,8.081197,0.136639,-0.567225,-3.965715,-9.310463,2.350796,-9.720836,-4.458375,-6.397542,-6.057155,-7.541604,-5.311645,-3.417440,-1.242464,-5.204846,0.222044,-9.740290,5.242088,-5.102203,4.657092,-2.360231,-0.274395,-7.495446,-3.469418,-7.477804,-4.653072,4.401871,-9.310962,-6.549275,-3.395328,4.572303,-9.157403,-8.987469,-7.752242,3.514704,9.099168,-9.001297,-9.532077,1.784375,-7.893634,5.077278,-9.659556,4.449498,-8.531890,4.670486,7.792951,1.802602,-3.140266,9.264115,-1.043494,3.992728,2.735275,4.124389,-4.347867,-0.729934,-8.801754,7.263343,0.771969,-6.301140,-0.360883,-6.068143,-6.624902,3.455820,6.863265,0.484507,2.317805,1.061548,4.571116,-2.891748,0.532710,-3.913563,4.562195,-8.898242,-0.198198,-9.238112,-7.520767,-6.705437,-3.345444,-2.990037,4.549018,0.959447,-7.833551,0.830165,-4.596888,8.511724,-9.938832,1.859555,9.706112,-6.918431,-8.763662,-0.284096,2.955914,9.577934,-4.791380,4.356788,-0.003218,-6.132304,-0.150378,-5.467696,6.681626,-6.261898,6.080636,1.804129,-6.090219,-8.718383,3.331429,4.124596,-3.139250,-3.342999,-0.150117,-8.064145,8.287257,4.303133,-3.103262,-2.565573,3.078228,6.808076,-2.250298,9.455517,8.889799,-9.482010,-6.209298,6.446750,-4.055835,4.615153,-2.631387,7.573593,-4.376342,0.378609,-0.449773,2.315677,-3.093000,-6.610194,8.377213,7.540026,-9.916451,8.008872,-3.315495,8.949649,8.137051,4.727124,-0.440408,0.360800,-1.990287,4.676782,-7.817359,-1.031717,1.376220,6.468993,6.319784,3.630816,-8.020318,-6.261511,-8.310283,-3.842395,7.436306,7.516656,-3.791465,-4.270958,5.209335,-2.089945,-1.429074,-9.388196,3.578687,7.519615,4.455333,-4.443079,6.571558,-4.781315,-0.016608,9.523981,-8.079799,9.077348,0.686283,1.730071,5.340246,-0.481074,2.599536,-7.428910,0.621634,1.645115,-1.972593,-4.988523,-7.788451,9.118036,4.281361,-5.843554,1.538757,3.944251,-7.240685,7.745941,-8.452268,8.774038,0.892477,-0.676825,9.073165,8.571958,-8.297125,-4.349562,-6.253417,9.773634,-8.889146,5.589683,-2.764452,8.649294,-7.213311,-1.790243,-0.521225,-4.192557,9.166915,-7.782395,-5.316389,1.656454,-4.488763,5.805418,5.001956,-4.078164,1.255856,-5.549043,-6.366096,-2.567040,-6.155744,9.226578,-8.487681,-5.580491,9.730951,7.353280,-5.268635,-6.024798,-1.866736,9.838786,-4.284040,5.567252,-1.223363,1.384718,0.295569,0.058052,4.897250,3.549138,-1.818952,8.467916,-2.969483,5.809744,8.682096,0.776234,1.292102,-0.127419,7.413340,5.954845,1.316378,-9.858207,-7.892595,-5.129822,7.106848,-6.122074,-0.162067,4.493021,-6.582544,5.227434,-5.788824,7.545190,-1.421091,6.185009,8.936295,8.423206,-2.488011,-8.109295,6.610533,-7.738132,-0.593949,-8.124404,-4.678796,1.218163,-1.807363,8.389007,-9.657440,-6.020236,-0.673551,-1.739616,0.794594,-4.265417,8.414216,-0.630195,4.109847,9.488099,5.316862,-0.890998,9.870560,-9.738301,4.460441,-4.199021,-4.600189,-1.189135,9.090275,7.114506,-7.097317,-8.855047,-3.671093,-1.969306,0.846198,1.016610,6.435877,-7.192660,5.485761,-3.908947,-1.888051,-9.090187,4.811442,1.525929,1.847462,7.931098,-3.651580,-8.209592,7.343419,3.086539,-0.068435,6.148298,-3.394823,7.593660,4.214393,-6.139349,-2.861232,-8.933406,1.425515,-3.115146,-9.440750,-1.816285,9.997445,0.389067,3.825348,4.459765,2.757082,6.048543,7.247669,-1.682444,-2.744898,-6.298058,7.714143,7.842628,4.601664,-0.798556,9.757553,-0.197490,4.854112,1.704235,-4.785413,-2.899652,-9.163682,-8.665095,-2.048418,-5.821793,5.680508,-3.981365,3.414309,-3.472168,4.311094,8.224670,2.304213,-8.842473,5.375425,-4.948876,-9.824362,-7.719638,-9.447092,-8.861603,9.524020,-1.906417,-2.676132,9.227013,-8.868426,-5.487076,-2.172508,-5.572873,5.932653,-7.571914,7.492260,3.348359,-2.924856,-7.748088,-9.172535,1.721308,4.367134,-0.600096,-7.531168,1.909674,0.269435,7.493494,7.358993,-3.614912,-5.550875,-6.619338,2.778894,2.538613,8.013514,-0.764419,5.569870,1.892701,3.192460,-1.043792,0.835798,-9.930440,8.059667,5.444345,-6.242118,0.136948,-8.724468,-4.263810,5.903569,6.044258,6.118772,-3.798121,-1.821230,4.565697,-9.108192,9.952379,6.146550,-1.553475,6.776249,-4.420829,4.550441,-2.556930,5.085490,1.393655,7.720745,2.004104,5.891916,3.595713,5.891889,9.990147,-4.122729,6.938896,3.371584,-3.190138,4.874081,-4.740835,-4.664421,8.835377,7.687924,9.803042,3.824869,5.426876,-8.163779,-5.076050,0.977697,7.102119,2.314215,3.569416,4.412481,6.360739,-8.887785,5.726058,8.290179,-5.159830,-0.581509,6.627704,-8.908115,-6.904074,5.431303,-4.456053,-3.099732,-8.130569,2.274435,-3.556583,2.415864,5.655565,4.332795,-9.823682,3.403784,1.187660,-7.462824,-5.465579,7.281111,-0.301353,6.516660,3.645801,-9.661564,4.931485,-7.465738,-6.493190,-7.847737,3.912726,1.977793,-7.125971,0.636417,-0.333682,-8.628023,-3.879024,6.804991,-6.079783,-3.930747,-1.996576,5.284865,-1.771792,-7.455049,4.456849,-7.122935,-4.813200,-3.883738,8.775551,8.344977,-3.729943,-3.047933,6.854224,2.112263,-0.058809,-9.388962,-3.290086,7.159449,8.654604,-2.835511,-0.938190,6.585743,-8.106556,8.780833,5.293790,1.462355,-1.363253,8.349613,2.298964,7.554061,-0.872482,-6.540104,5.137045,8.938313,5.266795,1.082711,-4.018542,8.578657,-0.631853,-0.968615,4.978697,8.341663,4.777417,1.055383,5.614702,1.577698,-4.430398,9.513742,6.806089,-9.507753,-0.274068,-2.343480,0.172158,8.744382,-2.668744,3.107923,0.108248,1.433334,7.369986,0.326786,7.059360,-5.767619,-7.314188,3.023603,-1.719863,1.252531,3.716892,-0.847842,9.989939,-1.109475,9.183440,5.270652,7.048683,-8.934350,2.277381,4.105655,-4.423508,2.661031,7.243814,-0.108252,-1.604744,-2.054418,5.651583,-8.076477,-2.623689,-6.893080,7.633675,-8.492128,-5.158094,1.202233,-4.398709,-2.653105,5.986716,-6.773884,-5.146327,-6.979969,-1.295965,-6.475179,1.793089,-0.830646,9.540430,-1.890414,-5.590131,2.049831,9.598756,-7.200356,-6.942538,-6.858014,-0.258800,-3.115812,4.236280,-1.579827,-5.954974,3.867488,1.257986,1.651944,-5.478409,2.929707,1.417249,4.537925,-7.841009,-8.069899,-8.316401,-5.348590,8.250782,2.830718,6.742648,-7.866515,-6.052098,-9.989840,7.718146,-6.792749,7.208714,-8.245940,0.819408,0.970642,-4.991741,-2.402563,-1.201820,0.821161,5.112741,-9.387282,-3.816528,-6.503289,-5.428498,4.475761,9.907901,4.830317,6.753844,1.870598,4.528945,-6.092415,-4.083518,-0.841016,6.104962,0.802646,-3.944935,-9.150486,-5.528351,9.839085,6.062853,9.622142,-0.623786,3.838450,-2.950142,-8.963493,6.855527,3.270448,5.888449,-8.955104,-5.517630,-8.908199,9.589354,6.439682,3.107122,-3.675489,2.911643,0.463840,-1.732128,-3.884226,9.742914,-9.052908,1.487785,4.312742,0.784879,-7.525438,3.374669,-7.984440,6.636957,-2.971075,-1.747330,5.369517,-0.793777,4.628906,4.117377,-5.075165,3.802117,0.319950,-1.120026,9.566047,-2.948513,3.156706,-2.497214,-8.169083,-7.368335,9.125695,8.657703,-5.282304,7.429508,-0.122543,5.980525,-1.552644,7.287911,-2.175021,-5.154400,8.820440,0.750608,-6.971435,-5.185975,3.187181,3.490737,4.286915,6.412698,8.997938,6.583137,7.912544,-2.985862,7.697803,6.986083,5.485268,-7.843375,-6.618741,-2.676884,9.490649,7.596248,1.525237,2.440180,4.641437,-9.405078,-1.392003,-8.341672,9.181324,8.129985,-6.017745,-4.447943,-7.486622,-0.962673,-5.179344,3.452842,1.515203,-3.010441,4.767726,2.859383,-8.501025,6.433808,0.574379,-4.074648,-8.828179,-1.551746,-0.430205,2.506230,8.947525,4.535913,-7.517229,1.907608,3.241976,-2.169711,-4.863253,5.387366,7.440254,1.699750]], dtype = "float32")#candidate|7683|(1, 2400)|const|float32
call_7681 = relay.TupleGetItem(func_2462_call(relay.reshape(const_7682.astype('float32'), []), relay.reshape(const_7683.astype('float32'), [2400,]), ), 3)
call_7684 = relay.TupleGetItem(func_2466_call(relay.reshape(const_7682.astype('float32'), []), relay.reshape(const_7683.astype('float32'), [2400,]), ), 3)
uop_7692 = relay.tan(call_7681.astype('float64')) # shape=(4, 14, 15)
uop_7694 = relay.tan(call_7684.astype('float64')) # shape=(4, 14, 15)
output = relay.Tuple([call_7677,const_7682,const_7683,uop_7692,])
output2 = relay.Tuple([call_7678,const_7682,const_7683,uop_7694,])
func_7697 = relay.Function([], output)
mod['func_7697'] = func_7697
mod = relay.transform.InferType()(mod)
output = func_7697()
func_7698 = relay.Function([], output)
mutated_mod['func_7698'] = func_7698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7075_call = mod.get_global_var('func_7075')
func_7076_call = mutated_mod.get_global_var('func_7076')
call_7702 = relay.TupleGetItem(func_7075_call(), 0)
call_7703 = relay.TupleGetItem(func_7076_call(), 0)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_7713 = relay.TupleGetItem(func_5938_call(), 0)
call_7714 = relay.TupleGetItem(func_5939_call(), 0)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_7715 = func_5541_call()
call_7716 = func_5541_call()
output = relay.Tuple([call_7702,call_7713,call_7715,])
output2 = relay.Tuple([call_7703,call_7714,call_7716,])
func_7728 = relay.Function([], output)
mod['func_7728'] = func_7728
mod = relay.transform.InferType()(mod)
output = func_7728()
func_7729 = relay.Function([], output)
mutated_mod['func_7729'] = func_7729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6948_call = mod.get_global_var('func_6948')
func_6950_call = mutated_mod.get_global_var('func_6950')
call_7730 = relay.TupleGetItem(func_6948_call(), 0)
call_7731 = relay.TupleGetItem(func_6950_call(), 0)
output = relay.Tuple([call_7730,])
output2 = relay.Tuple([call_7731,])
func_7762 = relay.Function([], output)
mod['func_7762'] = func_7762
mod = relay.transform.InferType()(mod)
output = func_7762()
func_7763 = relay.Function([], output)
mutated_mod['func_7763'] = func_7763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7697_call = mod.get_global_var('func_7697')
func_7698_call = mutated_mod.get_global_var('func_7698')
call_7816 = relay.TupleGetItem(func_7697_call(), 3)
call_7817 = relay.TupleGetItem(func_7698_call(), 3)
func_6173_call = mod.get_global_var('func_6173')
func_6175_call = mutated_mod.get_global_var('func_6175')
call_7820 = func_6173_call()
call_7821 = func_6173_call()
var_7826 = relay.var("var_7826", dtype = "float64", shape = (3, 14, 11))#candidate|7826|(3, 14, 11)|var|float64
bop_7827 = relay.greater(call_7820.astype('bool'), var_7826.astype('bool')) # shape=(3, 14, 11)
bop_7830 = relay.greater(call_7821.astype('bool'), var_7826.astype('bool')) # shape=(3, 14, 11)
output = relay.Tuple([call_7816,bop_7827,])
output2 = relay.Tuple([call_7817,bop_7830,])
func_7843 = relay.Function([var_7826,], output)
mod['func_7843'] = func_7843
mod = relay.transform.InferType()(mod)
var_7844 = relay.var("var_7844", dtype = "float64", shape = (3, 14, 11))#candidate|7844|(3, 14, 11)|var|float64
output = func_7843(var_7844)
func_7845 = relay.Function([var_7844], output)
mutated_mod['func_7845'] = func_7845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7667_call = mod.get_global_var('func_7667')
func_7668_call = mutated_mod.get_global_var('func_7668')
call_7855 = relay.TupleGetItem(func_7667_call(), 0)
call_7856 = relay.TupleGetItem(func_7668_call(), 0)
func_7185_call = mod.get_global_var('func_7185')
func_7186_call = mutated_mod.get_global_var('func_7186')
call_7860 = relay.TupleGetItem(func_7185_call(), 0)
call_7861 = relay.TupleGetItem(func_7186_call(), 0)
var_7871 = relay.var("var_7871", dtype = "float32", shape = (3, 13, 13))#candidate|7871|(3, 13, 13)|var|float32
bop_7872 = relay.less_equal(call_7860.astype('bool'), var_7871.astype('bool')) # shape=(3, 13, 13)
bop_7875 = relay.less_equal(call_7861.astype('bool'), var_7871.astype('bool')) # shape=(3, 13, 13)
output = relay.Tuple([call_7855,bop_7872,])
output2 = relay.Tuple([call_7856,bop_7875,])
func_7879 = relay.Function([var_7871,], output)
mod['func_7879'] = func_7879
mod = relay.transform.InferType()(mod)
var_7880 = relay.var("var_7880", dtype = "float32", shape = (3, 13, 13))#candidate|7880|(3, 13, 13)|var|float32
output = func_7879(var_7880)
func_7881 = relay.Function([var_7880], output)
mutated_mod['func_7881'] = func_7881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5994_call = mod.get_global_var('func_5994')
func_5996_call = mutated_mod.get_global_var('func_5996')
call_7887 = func_5994_call()
call_7888 = func_5994_call()
output = relay.Tuple([call_7887,])
output2 = relay.Tuple([call_7888,])
func_7891 = relay.Function([], output)
mod['func_7891'] = func_7891
mod = relay.transform.InferType()(mod)
output = func_7891()
func_7892 = relay.Function([], output)
mutated_mod['func_7892'] = func_7892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6471_call = mod.get_global_var('func_6471')
func_6473_call = mutated_mod.get_global_var('func_6473')
call_7896 = func_6471_call()
call_7897 = func_6471_call()
func_7891_call = mod.get_global_var('func_7891')
func_7892_call = mutated_mod.get_global_var('func_7892')
call_7943 = relay.TupleGetItem(func_7891_call(), 0)
call_7944 = relay.TupleGetItem(func_7892_call(), 0)
func_7728_call = mod.get_global_var('func_7728')
func_7729_call = mutated_mod.get_global_var('func_7729')
call_7962 = relay.TupleGetItem(func_7728_call(), 1)
call_7963 = relay.TupleGetItem(func_7729_call(), 1)
func_1111_call = mod.get_global_var('func_1111')
func_1115_call = mutated_mod.get_global_var('func_1115')
const_7976 = relay.const([9.927913,-7.808111,-9.732724,-5.585036,7.101039,-8.286946,-6.212498,-4.330004,-0.099140,-3.904224,5.554765,8.137200,-8.621922,3.913692,-4.357655,2.657051,3.469773,6.998811,2.997797,-0.362467,2.847146,0.086782,-4.151560,-5.090266,-6.656477,6.191789,6.958777,-5.928120,6.821068,5.478672,9.133207,6.348900,5.986111,-4.041780,7.740849,6.860872,7.648839,-7.794341,-0.878082,-6.019686,-0.372158,-4.447572,-8.918562,4.855205,-5.385904,2.293993,8.840436,-7.787135,-9.062895,2.102230,7.736688,-8.901919,9.812087,-9.895269,4.793328,9.476113,-9.513800,5.599752,-6.353514,8.511829,3.189034,-0.672036,8.445417,8.369348,8.057690,7.364444,2.553762,-2.336555,3.053135,-9.140029,9.739451,-0.879554,8.552447,4.540614,-5.244896,2.518920,6.030100,-0.245615,-1.750585,-6.251969,-7.187746,0.439986,0.225814,0.244091,-1.535445,5.927545,6.380182,-9.845011,2.849513,-3.975738,-7.826477,-5.694762,-8.848543,-0.103409,-4.504955,-7.302375,9.592088,1.629460,5.459683,0.438443,-9.689125,-7.857382,-8.733462,7.221456,-1.049511,7.966991,1.884514,-0.197191,-8.451896,-7.629684,-5.547240,5.740148,-7.159183,-5.281190,3.250581,-7.578495,0.465957,8.892444,3.983756,0.801217,5.096112,-2.968802,-8.786095,-9.410150,7.335973,-4.346459,3.917634,1.567836,-7.817281,-9.946832,8.739335,9.986760,2.466356,-8.447550,1.576418,-3.608234,-0.105838,6.967637,1.809173,1.995917,7.433573,-3.554028,-5.923575,-0.967800,-7.826565,-3.792424,6.311334,-6.584499,5.721894,2.196956,-1.609396,6.965697,-5.079914,-5.873799,-2.792799,4.157366,4.738150,-7.853973,1.793604,-9.491796,0.941925,-0.555360,-5.760216,5.075732,6.736758,4.631413,-4.282607,9.965669,4.842683,7.339013,0.657224,5.742205,-4.518098,-9.200195,7.720059,8.824502,-9.383088,9.279046,-2.375904,-1.637882,-6.275470,-7.534774,-4.093542,4.595326,7.833706,7.167314,9.439346,3.242670,-5.437446,-6.779972,-8.238965,8.981512,8.213188,7.995421,5.409929,9.630226,7.421487,7.034056,1.940406,-1.974351,4.940847,-7.470929,-1.200655,-5.238031,2.961793,-7.215367,6.806433,-8.869069,9.111152,-4.463265,2.118857,-9.867682,5.003634,-4.828221,-2.671479,3.280182,-5.662334,7.064339,3.425639,-3.668193,-4.785809,-5.408711,-0.241288,-0.730411,1.258422,-9.324644,-4.445223,8.817191,-6.672054,3.725836,-2.989745,-4.147301,-7.691518,-2.760813,-4.949247,-1.716960,2.595228,-8.387391,-0.121540,2.852981,9.049125,-6.855052,-1.168979,-4.802537,-3.865501,-9.185680,-2.939991,2.656120,-1.617826,7.919996,-4.804440,5.861457,-9.548561,4.264463,-5.710827,-1.052175,7.110595,2.298386,7.243584,-0.924589,6.056430,-0.870697,-3.469504,-0.595423,6.345702,4.267616,-7.873604,-6.324440,-0.512700,1.760407,-1.000998,-3.579341,-8.888689,-8.753877,5.315832,6.866865,8.064821,2.855035,-0.196349,-4.363165,0.397881,6.150961,-0.948065,-7.460719,-9.305268,2.341333,-3.099577,-3.319169,2.368970,-9.193790,7.104928,-1.656960,5.373395,-4.921006,4.375484,-8.235054,-9.004599,-0.714015,9.771136,5.607828,-9.108495,-2.956200,6.588230,-2.286520,8.826941,4.122507,-2.363330,5.400164,0.301486,2.432479,-3.616398,7.755972,-3.981427,1.547398,8.098280,4.524248,4.708838,-9.988900,-2.401749,-5.174698,3.082418,-4.132697,9.581231,9.954489,-4.135653,8.220675,-7.230517,0.739838,1.819239,-9.525744,-3.280300,-8.413928,-5.038930,-2.042408,9.447092,-0.597858,-7.581395,7.675677,0.606472,6.577865,3.848032,-1.897694,5.748121,-2.775558,7.213207,9.819593,-6.389459,0.559497,-7.196464,2.454297,-2.101184,-3.390174,1.346755,-6.839432,5.381078,-9.620763,5.178208,-2.319625,-0.302802,2.438900,-9.235207,6.806871,-9.813172,7.984844,-3.931189,8.234131,-9.792183,-7.534869,8.063694,-5.735277,-2.488818,0.573499,-2.111848,-3.786703,6.233480,-4.139278,3.144180,-7.470516,-0.407001,-3.714773,3.159305,-9.400545,-8.885394,9.459805,9.433557,-2.091022,-7.193398,1.058480,6.741139,1.113826,1.497907,-7.603296,-6.244778,8.524588,-7.646726,6.343642,9.634013,-6.991584,-5.847447,1.264235,1.546505,4.381184,7.714456,-2.973862,6.999404,8.197509,9.752441,6.197402,5.464145,6.698614,-0.904985,7.838483,-9.938312,7.094368,5.649288,-4.582445,-3.589979,-6.901014,1.448589,3.831851,-8.550535,1.338456,-3.621491,9.017955,3.752653,-7.443712,-5.421883,2.879074,5.930169,2.620664,0.861522,4.465610,-4.253953,-4.176127,7.080975,-9.924766,-4.032464,9.913513,-5.876220,-3.743635,3.081538,1.974858,-5.039181,-7.733165,-7.080611,-3.553726,-7.755676,8.153646,6.163389,-3.721766,9.852837,0.367444,-9.700146,7.791759,0.284440,0.898526,-2.307395,-2.621624,9.341484,-5.659098,0.056559,-3.147338,-9.059784,-4.384292,7.704941,-7.420250,2.542180,-7.911342,6.773701,-0.458788,-3.310801,3.642065,-8.846890,0.396840,5.161951,1.847808,9.426647,-8.692770,-4.355868,9.625184,0.852957,-6.887965,4.737452,-0.956368,-0.375280,-1.782921,-9.277641,9.182620,3.683336,3.490926,-6.889796,5.852981,-5.529129,-8.636800,-5.583787,-5.420378,4.298304,-0.580635,5.925047,4.510469,0.036379,-1.883372,-0.487263,3.314375,7.128904,-7.512627,3.099199,8.979106,8.413634,-5.549061,4.213917,9.097702,-0.564671,-3.625977,-9.044503,4.137371,0.243175,-0.513391,-9.888169,2.690072,-9.391750,2.317759,-7.652653,4.806428,-9.136468,4.277526,-3.721900,7.121306,6.211690,-7.481030,3.867532,0.890846,-1.548398,-5.157439,6.617185,-2.321821,6.154326,-8.848478,-8.039412,2.836491,8.088320,-9.955483,5.695078,-1.812276,2.912418,9.213367,6.417245,0.510985,-9.782813,-5.155134,-5.918832,7.628641,-2.999023,5.975542,8.010971,-3.173520,6.944005,-5.115124,-3.491203,8.087376,4.108036,-3.866354,-3.534966,-6.654987,-4.348936,-1.761824,8.459632,-1.347340,8.172057,-2.648681,7.471435,-3.951819,-9.700234,3.661140,1.658580,-4.217782,2.601800,0.253355,8.731923,-5.046810,-9.781533,-9.998744,-3.996050,-1.968979,-4.995638,-8.598683,1.134282,-8.662984,3.497348,-3.273194,4.266979,-2.809022,2.679847,-5.033305,1.456693,-8.990549,6.714248,-9.069784,-4.032073,-4.238989,2.242209,-6.089986,1.417866,-0.404806,-9.355868,8.725268,-7.301621,7.175171,-5.184230,-2.592092,-7.536957,4.948441,1.161813,-5.212889,-2.348832,-3.828389,9.855984,-2.657445,4.510066,-2.509814,5.142231,4.088599,5.989406,-8.712640,-0.187863,0.695484,3.976052,0.372107,-8.049257,-1.946369,-4.353183,8.483193,8.430444,-8.503840,-6.115714,6.006150,-5.350987,8.716207,6.253110,2.524695,-8.113597,-7.199869,-2.709416,-7.178309,4.287416,2.240024,6.373353,-0.100730,8.771491,-7.084968,6.731394,4.771125,-2.334560,6.230834,-1.869339,-2.144636,4.668872,4.900458,-6.177844,7.205340,-7.728710,1.269027,8.974514,2.220471,-3.221986,-5.755708,7.195735,5.573235,8.826610,9.570605,-7.260161,-3.026478,-7.513178,9.160582,-5.750890,1.021847,2.413968,-5.104593,-0.671836,2.338909,8.640142,-4.315150,-3.451828,9.308651,-7.578255,0.303289,-2.782539,-4.310469,0.351353,9.832598,-8.496625,3.556849,2.947878,-8.838105,8.199368,-1.606288,-6.662148,1.726670,-4.969539,-5.262742,9.286031,7.267031,5.592756,-2.841415,4.045720,-8.253756,-9.099472,-2.840430,-2.308000,2.035651,-7.204856,-8.201308,-4.080889,6.431407,-5.610864,9.378163,-6.736676,8.824022,8.018040,-0.073497,1.878411,-0.411265,-2.493672,4.495697,-9.385393,-5.907306,-5.215894,6.460856,-1.217607,-4.436826,-9.893238,-8.106522,-9.860726,-7.709866,-5.714527,1.078760,-3.402769,9.364983,-8.436337,0.299547,-0.508194,6.777968,-1.297181,7.162401,-8.651908,-1.889048,-6.336389,2.195134,-9.088822,-5.494916,-6.617282,3.986709,6.840168,-5.110911,2.537546,-1.251677,0.085290,3.706038,-5.609112,3.882953,-9.482745,6.054510,-4.516636,8.784859,3.525502,2.476518,5.350233,-2.672804,-1.842390,-2.416933,-4.239814,4.918903,9.257218,1.304474,2.524755,-1.091396,-3.911076,-9.519927,-2.164268,-1.896344,5.933950,8.586187,-8.942043,-1.443063,-9.685090,-1.223544,7.916749,2.752601,-0.515139,1.266949,6.739342,0.453266,2.538436,-7.958699,-6.814495,7.455350,1.069754,-7.493119,-9.641047,-0.694325,-8.556836,5.441681,-8.875915,-1.088139,-4.633303,-1.476778,8.796652,5.858675,-0.407993,-9.863108,-9.526455,-7.056141,-9.142057,8.000688,4.095539,-2.141466,4.647735,-8.212932,-3.734165,-8.690669,-7.609745,-6.494558,4.280587,-3.335848,4.083957,-8.467650,1.278203,2.285786,9.356553,-8.929771,-7.109144,-2.464489,2.312369,8.952415,6.417009,-2.097725,9.406161,1.295892,-2.140034,-7.880415,-5.497622,-1.970432,8.935144,-7.243273,-1.351407,-1.817604,2.758631,-5.516684,0.391059,-5.420902,-5.594304,-4.835542,9.197074,-9.179756,7.451493,8.795579,3.619732,4.793024,-3.016856,7.362295,2.519947,5.898082,1.556887,3.964598,-4.713202,3.671475,-9.450275,-2.966201,-5.196172,7.148005,7.695043,5.561231,-0.074083,8.552424,-7.172922,-8.736080,-4.442012,-0.979178,3.192146,-2.073082,4.957635,-4.732607,0.698296,7.098223,9.244192,-4.792229,-7.793160,1.680812,-3.445635,6.387166,-4.663914,-6.650399,7.956172,-8.380441,-5.056029,-8.923983,-3.409832,8.252555,1.693484,5.055039,-5.150182,9.156525,-8.216259,8.816184,-2.364451,1.949499,-8.750087,8.639064,9.882462,0.757203,7.060796,7.887302,-0.125769,9.415719,-5.165198,4.788592,-1.327288,7.002407,4.786125,-4.935744,7.008392,-5.029023,5.669297,6.171161,3.637598,2.517484,9.593576,9.987946,6.433476,6.201068,3.568255,-5.888704,-4.635808,-6.863283,7.935420,0.680087,8.960080,-3.771065,2.716689,2.910520,-4.509792,4.725317,2.768915,-5.906816,-0.176004,-9.846276,-6.300865,4.095066,-9.638632,-5.313571,-2.057199,-4.621456,-8.730219,2.158969,3.754427,-4.574989,8.556067,3.794123,-3.579579,5.927058,2.983092,4.390974,0.045487,-5.561093,-9.052902,6.495688,-0.939396,-9.094706,-0.380541,9.538946,-5.367693,-8.299027,3.163775,5.617881,0.306575,-7.173605,-9.420480,-9.983524,7.882105,-4.787772,1.103886,-6.360787,4.536290,-8.017228,-2.391161,1.340883,-1.932058,-9.051486,0.220953,6.426758,9.138420,-4.227146,6.451570,7.355529,6.215379,2.116904,4.307907,4.473930,-2.154585,-6.260756,6.012361,-6.795980,6.480881,1.699258,-4.832446,8.070073,6.709735,9.468178,-2.299886,5.923176,-9.703385,2.401580,-1.682391,2.517842,-3.527569,-1.516317,3.280319,1.577863,7.589740,-4.216064,-4.498408,8.522620,6.945846,-6.390794,4.128186,5.855972,-2.369994,5.058333,1.373221,-1.304711,9.930089,7.786674,9.752313,8.818632,-5.588166,-9.138473,-2.868570,-0.039135,-9.546069,5.516280,-4.936125,-1.638983,0.914700,1.001626,-0.777166,6.941343,-7.607701,-8.413259,0.647359,1.566369,3.847496,-3.195399,1.660733,0.365791,-4.342850,-7.067233,-8.973286,7.913731,-6.644473,-2.412818,-8.408043,-9.662918,0.596890,-2.208149,4.840943,-6.563121,4.073217,-1.563782,9.064058,2.923361,-5.131540,-4.859623,-2.711302,1.881949,-7.526166,8.611366,3.324511,-5.613505,-4.477915,7.439032,-9.051457,0.181903,6.437539,-4.552965,5.925862,-2.316588,3.558876,-8.213175,-6.635205,2.101851,-7.198878,-5.082628,-0.954240,-8.581993,4.308231,-7.706702,3.393294,-6.069829,2.826923,4.761576,-4.382803,4.586730,-6.400563,5.168497,3.005716,2.514784,0.185730,5.109949,-6.705977,-5.433127,2.923342,4.755894,-4.221973,1.496314,7.944576,6.477339,-4.655301,3.732978,-5.777280,-0.272098,1.739070,2.235677,9.117813,1.845971,-2.513823,0.656506,-6.663224,-8.529748,-4.700074,1.636107,-2.706440,4.114005,6.389492,2.937501,5.683470,3.542930,-5.781021,2.422247,1.467086,2.081427,1.284524,0.749580,-4.294821,-8.052853,-8.076821,-3.644858,-9.670416,3.812247,-9.787991,-8.853115,-5.385973,4.916790,-1.855028,-5.017140,2.961775,-7.987029,0.316067,-5.489485,5.470608,-2.977823,-3.770806,7.916849,2.427169,-7.205716,9.857979,9.394880,-5.603081,-9.205887,-6.188904,-1.125575,7.458004,-6.271922,4.419794,-8.178934,7.134711,-8.604528,9.750504,9.765720,-9.635910,-7.349320,-6.856186,-8.244264,-4.981488,4.221483,8.609954,-0.301143,-1.498057,0.057178,-4.533795,0.055201,8.034501,8.663197,8.894849,2.222408,0.651832,7.589471,8.271174,-8.094475,6.158723,-8.398288,-6.506573,2.460001,1.364400,-2.264085,-7.727766,-2.983144,3.320023,-2.456582,-1.092270,-1.437170,5.376589,8.518813,5.761881,8.519315,8.509500,-7.251557,-4.172972,9.840722,-8.518152,9.173443,3.145129,-1.540330,-0.215356,7.520360,-2.658680,-7.808184,3.706793,2.373135,0.774158,3.545628,-3.720355,-1.654595,2.606351,2.975322,6.271908,-7.581167,-4.112775,1.117438,2.950758,7.900660,9.993222,-5.825166,6.692637,7.543804,-1.625288,7.967502,-7.587041,4.814321,3.546270,-8.370242,-4.354908,4.237803,9.585211,0.738639,6.857050,6.213246,-8.795971,-9.489296,5.255638,-0.577840,-4.235138,-2.720149,-5.933377,0.746670,-7.094990,-5.323761,-2.241466,7.650477,4.085809,3.241123,2.455451,3.673952,-6.509195,5.410889,1.247030,8.272733,-9.295370,2.080470,0.957403,-2.822384,-2.090463,-4.057314,1.207771,-0.453719,-2.763278,1.958806,-3.075251,0.578170,-1.783585,-2.083924,5.843795,-3.781630,-2.919072,-9.082208,-9.005095,5.164534,7.822716,5.628579,-5.580613,9.910282,1.053185,-6.567567,9.210316,-3.852211,2.470430,-8.374333,-2.832840,-0.590666,-7.589375,0.269128,5.716881,0.324123,-1.407657,7.440586,-9.155374,-7.611190,-1.897898,-9.151870,-2.137954,5.061257,6.173199,-1.684600,-2.181064,-6.337602,1.917839,9.149917,2.384961,-0.624291,-1.762230,-2.284754,-1.822351,-3.715588,0.147872,9.674134,-5.472604,9.103269,-3.738652,9.959164,-3.450580,5.262994,1.537362,0.695794,5.188395,2.315434,3.920404,-3.093359,-6.410798,-4.719543,4.141313,6.774679,2.966821,-9.919713,1.220959,-7.168683,2.200399,5.946591,3.722541,3.166487,-8.016081,-5.020989,-4.977718,-2.026124,7.600833,7.891641,-7.494804,-5.278833,5.689927,4.242276,9.401441,2.536155,6.439953,2.520249,6.819656,6.203796,2.406392,3.208852,-8.890706,-1.435256,4.765208,8.202707,0.904539,1.798376,-2.085960,5.573487,-9.022813,-1.083405,8.815934,-1.723651,6.770044,8.445501,5.337692,-8.089372,-1.191129,-3.788426,-1.805123,0.477096,0.016328,7.673275,4.484422,4.832023,0.625745,8.053851,-6.940260,7.667478,8.584450,-7.592005,1.329898,-6.135419,-5.123012,2.808294,-6.177833,-9.110353,9.714895,4.014262,-5.620639,4.569523,4.766886,-1.961613,-1.974514,7.331902,-2.619423,5.566020,-0.972069,1.295948,-6.203612,-0.812652,4.351132,-1.819806,-6.282321,8.599595,7.618834,-3.801775,0.631173,-3.459641,-0.689009,3.701774,9.362573,-3.596166,8.301388,-1.713434,7.737715,-2.162346,9.150870,3.520162,9.463753,-6.792621,1.199333,8.049229,-6.241711,0.035700,1.788918,7.022824,3.988260,-6.225192,-1.690642,-8.035104,2.549541,-4.696394,2.249695,-4.022849,0.385272,2.904942,9.503285,5.176012,-2.322929,-7.911370,-9.716631,8.104309,-8.115066,-9.816889,-9.329302,-5.011736,7.919121,4.041836,-6.283626,2.901779,-4.406387,2.926116,5.067014,8.588521,7.594391,5.337150,-9.615453,2.455911,0.778027,4.486146,-3.018913,2.454412,-6.556177,-5.237618,9.229356,-6.648884,4.598085,5.947752,2.022661,-8.691372,5.764938,-6.800014,-2.452717,-8.096140,8.372895,-6.091894,9.833629,5.825232,-9.948322,-2.444977,-8.208718,0.474425,-2.731145,-4.042299,-3.492691,-4.122187,0.464136,3.832606,-6.815876,8.589854,8.028041,8.934950,1.288855,-6.039267,3.181119,2.004228,-1.414810,6.282535,-8.973864,-2.803934,-0.898046,-9.309791,9.286200,-6.003567,1.395490,9.437889,1.331657,3.482288,1.049512,-0.210834,-6.510353,-8.166813,-9.838676,-6.312238,-0.666773,4.958650,0.521553,-8.661394,2.940557,9.811765,-5.600094,0.753774,3.489905,-7.779327,7.305019,9.855284,4.435691,-8.821203,6.476904,-6.600620,4.315813,2.415388,9.504206,6.488465,-8.420026,8.002119,2.559121,-2.636663,9.878055,0.539596,0.308180,-3.946556,9.129530,-8.708557,7.990821,-7.391553,9.851942,-6.881442,2.514130,5.920554,-3.243324,-4.064707,-2.495270,-3.463918,1.616375,-1.012694,4.355223,2.594437,1.256224,4.779545,-7.161184,3.489215,1.839975,-2.727339,7.636870,-5.633021,-7.548710,0.394715,3.624472,-8.858330,0.872473,9.819961,-3.031026,1.404889,8.406828,-4.125257,-9.182280,6.773625,8.175308,-4.562622,0.590972,-4.374155,6.755290,-1.202399,-8.947895,-1.502673,6.361398,-2.460250,-3.993809,8.883218,-2.496823,-1.490689,5.197116,0.499168,5.928666,9.188775,-6.758888,1.493864,4.566205,1.630092,-8.875812,-4.776354,3.848166,6.067655,-3.483166,6.047732,2.266015,-9.193887,6.756239,6.143215,6.101796,-9.204985,5.081125,-2.780111,0.722958,-2.993374,4.588043,-3.419025,5.458002,-2.278856,-1.652265,-4.339580,4.512635,9.191215,-2.049304,-2.018712,2.476820,-4.433263,-9.427015,-2.370012,-8.455951,6.970980,2.389518,-7.873306,-1.176293,-4.706177,7.604112,-8.162550,5.995064,4.496267,-4.494584,-3.901751,-1.015308,-5.409684,0.147830,6.298496,9.246938,6.284786,-4.226794,1.951535,-3.499172,1.873782,9.702212,8.529063,5.412423,-2.507938,-6.411579,-8.604874,6.608046,6.182519,1.986024,-6.313563,7.086609,8.172032,-4.072765,-7.049804,-8.562069,-8.120342,3.613706,1.090695,-6.207671,9.999259,-4.567721,-6.388764,-4.094839,-3.588647,-3.366896,6.349293,-0.282441,1.547734,5.163076,7.930176,4.967822,0.993342,5.554754,-3.561165,3.464114,-6.366397,7.157709,2.957481,-2.756846,1.310325,7.662659,0.362921,4.507907,-6.222655,-7.944133,-6.511171,5.886581,7.257976,-5.751572,-7.383723,7.099797,8.043179,6.941313,-8.756404,-1.655003,-1.376177,-0.175259,7.835838,-8.977367,3.791588,-7.017592,5.501254,0.929785,-8.429680,-5.974776,3.779162,-2.328457,-2.324102,-9.877692,4.419331,-6.281524,-9.686692,6.463151,-5.288081,6.735205,5.191001,0.172642,2.830115,8.375548,9.077204,-8.501737,4.279503,2.153049,4.250211,-4.320876,5.005695,-7.771307,-9.067096,2.887415,-3.936552,-0.674360,-6.943641,-3.584655,-6.611684,-1.245442,0.032553,1.523951,6.292737,-9.182361,-6.097579,8.379684,4.360459,9.282302,-6.439341,-4.265919,9.747324,-4.887641,-5.404932,5.486729,-9.016132,-9.958725,-1.707793,-2.855708,5.110145,-4.366704,4.932254,4.055389,-1.472496,-8.375112,7.433679,8.064603,4.921262,0.030111,-6.227287,4.437583,-9.350215,-2.202766,5.466595,-0.179831,0.832700,-7.654612,-6.130208,3.540868,-8.492798,2.102478,-7.655619,-6.296687,-3.454450,0.419635,-3.857712,7.219065,5.411086,9.079041,-4.471270,8.052325,7.681846,9.044454,1.929178,-8.247998,-9.726400,5.848879,-1.330549,8.699260,3.085700,6.185228,1.435222,-4.797702,-5.568713,6.782428,6.349270,-3.899205,-5.311592,5.172680,-8.725530,8.234455,8.137872,8.771069,-3.124518,8.894053,3.326841,6.604958,5.939328,2.789051,1.633276,0.865776,1.214293,9.398756,5.260436,3.304764,-9.945746,-3.884702,-9.359108,6.948066,-4.805495,-5.437630,8.178523,-3.282915,-8.088523,-1.635760,-1.501468,-7.756642,9.359012,2.574560,-6.838570], dtype = "float32")#candidate|7976|(1872,)|const|float32
var_7977 = relay.var("var_7977", dtype = "bool", shape = (396,))#candidate|7977|(396,)|var|bool
const_7978 = relay.const([[7,4,9,-1,5,8],[3,-7,-1,-6,9,-9],[2,-5,1,2,1,9],[-9,-4,-10,-6,-6,-8],[5,-1,-7,-7,8,-2],[5,4,-9,-10,5,5],[-8,-8,3,-1,-1,-3],[3,-7,-3,-9,-10,8],[7,-10,-2,8,7,4],[4,-8,-8,-5,-10,1],[9,6,2,-3,-2,9],[-1,5,5,-7,7,-5],[-6,-5,3,4,5,-3],[1,-5,-10,-6,3,8],[1,6,1,-2,-2,-5]], dtype = "uint32")#candidate|7978|(15, 6)|const|uint32
call_7975 = relay.TupleGetItem(func_1111_call(relay.reshape(const_7976.astype('float32'), [12, 13, 12]), relay.reshape(var_7977.astype('bool'), [66, 6]), relay.reshape(const_7978.astype('uint32'), [90,]), ), 1)
call_7979 = relay.TupleGetItem(func_1115_call(relay.reshape(const_7976.astype('float32'), [12, 13, 12]), relay.reshape(var_7977.astype('bool'), [66, 6]), relay.reshape(const_7978.astype('uint32'), [90,]), ), 1)
func_4113_call = mod.get_global_var('func_4113')
func_4116_call = mutated_mod.get_global_var('func_4116')
var_7982 = relay.var("var_7982", dtype = "uint16", shape = (880,))#candidate|7982|(880,)|var|uint16
call_7981 = relay.TupleGetItem(func_4113_call(relay.reshape(var_7982.astype('uint16'), [10, 8, 11]), relay.reshape(var_7982.astype('uint16'), [10, 8, 11]), ), 0)
call_7983 = relay.TupleGetItem(func_4116_call(relay.reshape(var_7982.astype('uint16'), [10, 8, 11]), relay.reshape(var_7982.astype('uint16'), [10, 8, 11]), ), 0)
var_7985 = relay.var("var_7985", dtype = "float32", shape = (1872,))#candidate|7985|(1872,)|var|float32
bop_7986 = relay.bitwise_or(const_7976.astype('int64'), relay.reshape(var_7985.astype('int64'), relay.shape_of(const_7976))) # shape=(1872,)
bop_7991 = relay.divide(call_7943.astype('float32'), var_7982.astype('float32')) # shape=(3, 1, 880)
bop_7994 = relay.divide(call_7944.astype('float32'), var_7982.astype('float32')) # shape=(3, 1, 880)
func_6173_call = mod.get_global_var('func_6173')
func_6175_call = mutated_mod.get_global_var('func_6175')
call_7997 = func_6173_call()
call_7998 = func_6173_call()
output = relay.Tuple([call_7896,call_7962,call_7975,var_7977,const_7978,call_7981,bop_7986,bop_7991,call_7997,])
output2 = relay.Tuple([call_7897,call_7963,call_7979,var_7977,const_7978,call_7983,bop_7986,bop_7994,call_7998,])
func_8002 = relay.Function([var_7977,var_7982,var_7985,], output)
mod['func_8002'] = func_8002
mod = relay.transform.InferType()(mod)
mutated_mod['func_8002'] = func_8002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8002_call = mutated_mod.get_global_var('func_8002')
var_8004 = relay.var("var_8004", dtype = "bool", shape = (396,))#candidate|8004|(396,)|var|bool
var_8005 = relay.var("var_8005", dtype = "uint16", shape = (880,))#candidate|8005|(880,)|var|uint16
var_8006 = relay.var("var_8006", dtype = "float32", shape = (1872,))#candidate|8006|(1872,)|var|float32
call_8003 = func_8002_call(var_8004,var_8005,var_8006,)
output = call_8003
func_8007 = relay.Function([var_8004,var_8005,var_8006,], output)
mutated_mod['func_8007'] = func_8007
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8166 = relay.var("var_8166", dtype = "float64", shape = (12, 12, 13))#candidate|8166|(12, 12, 13)|var|float64
uop_8167 = relay.tan(var_8166.astype('float64')) # shape=(12, 12, 13)
output = relay.Tuple([uop_8167,])
output2 = relay.Tuple([uop_8167,])
func_8172 = relay.Function([var_8166,], output)
mod['func_8172'] = func_8172
mod = relay.transform.InferType()(mod)
mutated_mod['func_8172'] = func_8172
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8173 = relay.var("var_8173", dtype = "float64", shape = (12, 12, 13))#candidate|8173|(12, 12, 13)|var|float64
func_8172_call = mutated_mod.get_global_var('func_8172')
call_8174 = func_8172_call(var_8173)
output = call_8174
func_8175 = relay.Function([var_8173], output)
mutated_mod['func_8175'] = func_8175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7728_call = mod.get_global_var('func_7728')
func_7729_call = mutated_mod.get_global_var('func_7729')
call_8209 = relay.TupleGetItem(func_7728_call(), 0)
call_8210 = relay.TupleGetItem(func_7729_call(), 0)
var_8235 = relay.var("var_8235", dtype = "float64", shape = (3, 11, 14))#candidate|8235|(3, 11, 14)|var|float64
bop_8236 = relay.right_shift(call_8209.astype('uint16'), var_8235.astype('uint16')) # shape=(3, 11, 14)
bop_8239 = relay.right_shift(call_8210.astype('uint16'), var_8235.astype('uint16')) # shape=(3, 11, 14)
uop_8243 = relay.sin(bop_8236.astype('float64')) # shape=(3, 11, 14)
uop_8245 = relay.sin(bop_8239.astype('float64')) # shape=(3, 11, 14)
func_7762_call = mod.get_global_var('func_7762')
func_7763_call = mutated_mod.get_global_var('func_7763')
call_8250 = relay.TupleGetItem(func_7762_call(), 0)
call_8251 = relay.TupleGetItem(func_7763_call(), 0)
func_6186_call = mod.get_global_var('func_6186')
func_6188_call = mutated_mod.get_global_var('func_6188')
call_8258 = func_6186_call()
call_8259 = func_6186_call()
output = relay.Tuple([uop_8243,call_8250,call_8258,])
output2 = relay.Tuple([uop_8245,call_8251,call_8259,])
func_8268 = relay.Function([var_8235,], output)
mod['func_8268'] = func_8268
mod = relay.transform.InferType()(mod)
var_8269 = relay.var("var_8269", dtype = "float64", shape = (3, 11, 14))#candidate|8269|(3, 11, 14)|var|float64
output = func_8268(var_8269)
func_8270 = relay.Function([var_8269], output)
mutated_mod['func_8270'] = func_8270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6703_call = mod.get_global_var('func_6703')
func_6705_call = mutated_mod.get_global_var('func_6705')
call_8302 = relay.TupleGetItem(func_6703_call(), 0)
call_8303 = relay.TupleGetItem(func_6705_call(), 0)
var_8312 = relay.var("var_8312", dtype = "float64", shape = (15, 13, 12))#candidate|8312|(15, 13, 12)|var|float64
bop_8313 = relay.minimum(call_8302.astype('int16'), relay.reshape(var_8312.astype('int16'), relay.shape_of(call_8302))) # shape=(15, 13, 12)
bop_8316 = relay.minimum(call_8303.astype('int16'), relay.reshape(var_8312.astype('int16'), relay.shape_of(call_8303))) # shape=(15, 13, 12)
func_5621_call = mod.get_global_var('func_5621')
func_5625_call = mutated_mod.get_global_var('func_5625')
var_8331 = relay.var("var_8331", dtype = "float64", shape = (33,))#candidate|8331|(33,)|var|float64
const_8332 = relay.const([[6],[6],[7],[7],[7],[10],[-4],[-10],[8],[-6],[-7],[3],[-3],[2],[-6],[5],[-8],[2],[-6],[-3],[5],[-2],[2],[9],[5],[-8],[-6],[-6],[-8],[3],[7],[-6],[10],[10],[6],[-10],[7],[-3],[-6],[-10],[-10],[7],[9],[-4],[-10],[-1],[-6],[3],[6],[1],[-7],[7],[5],[-4],[6],[3],[-2],[3],[2],[10],[-6],[-10],[-9],[-6],[6],[-9],[10],[-8],[7],[5],[-8],[9],[-7],[-1],[2],[2],[2],[10],[-4],[-6],[-6],[7],[4],[1],[9],[-5],[4],[-5],[8],[3],[-9],[8],[6],[-5],[-6],[5],[8],[10],[-7],[-5],[8],[-1],[6],[5],[-4],[-6],[3],[6],[-3],[4],[-2],[3],[-8],[3],[-5],[2],[-10],[6],[-9],[-2],[1],[-7],[5],[6],[6],[9],[-6],[1],[-7],[-1],[-3],[-4],[6],[-9],[-2],[9],[2],[-8],[1],[6],[3],[-7],[-10],[-4],[3],[9],[-10],[8],[-2],[-8],[-1],[-8],[5],[9],[1],[5],[-1],[-4],[9],[5],[-5],[7],[-7],[9],[4],[-6],[6],[-8],[-1],[9],[2],[-5],[-4],[-1],[-8],[4],[-1],[9],[8],[9],[-9],[6],[8],[-8],[-1],[-10],[-9],[-6],[-5],[6],[3],[7],[3],[-6],[-5],[-4],[10],[2],[4],[-9],[-5],[9],[-6],[-8],[2],[-2],[-6],[-3],[-4],[1],[-3],[-6],[4],[3],[5],[6],[2],[5],[2],[1],[-7],[-1],[4],[3],[2],[-9],[-8],[-10],[-2],[2],[-6],[9],[-4],[8],[-10],[-10],[-1],[-2],[-6],[3],[1],[-4],[9],[-3],[6],[10],[4],[2],[6],[3],[-6],[-2],[5],[-2],[-1],[10],[-6],[-2],[8],[-6],[1],[-8],[7],[-2],[-7],[-8],[-8],[-2],[6],[-4],[8],[8],[-6],[-1],[-6],[-1],[-4],[1],[-9],[4],[-7],[-1],[-7],[-6],[6],[10],[3],[9],[10],[6],[-6],[-4],[-5],[2],[7],[-10],[-2],[-9],[-3],[-2],[6],[2],[-1],[9],[-1],[-9],[9],[9],[-8],[8],[1],[-10],[-8],[-10],[6],[7],[-3],[9],[9],[7],[-2],[-7],[10],[5],[-9],[3],[-2],[10],[2],[10],[-3],[9],[-5],[2],[-8],[-4],[-5],[-1],[6],[-3],[10],[6],[-7],[-9],[-8],[8],[-5],[7],[-9],[6],[6],[-8],[-10],[6],[-5],[-5],[-4],[-7],[7],[1],[-5],[7],[8],[-4],[3],[-6],[9],[-1],[-3],[6],[-7],[4],[-2],[-2],[7],[2],[-4],[5],[-3],[1],[-8],[-6],[-1],[7],[6],[-3],[-6],[2],[-10],[-5],[-8],[10],[-8],[-6],[-4],[6],[3],[1],[8],[9],[1],[5],[-1],[-5],[3],[-7],[-7],[-5],[-3],[-5],[-7],[1],[2],[6],[-1],[-6],[-9],[2],[-9],[-2],[-5],[5],[7],[4],[-2],[-9],[1],[-9],[-5],[4],[9],[8],[2],[7],[-5],[6],[-9],[1],[-3],[-8],[-5],[4],[-8],[-10],[9],[8],[-4],[6],[-4],[-9],[-4],[-10],[-8],[-1],[-9],[7],[-5],[-1],[-3],[7],[-5],[-2],[9],[6],[2],[4],[-10],[3],[9],[-10],[10],[-4],[6],[9],[6],[-3],[-8],[9],[4],[-1],[-1],[-6],[-3],[-1],[-10],[1],[-6],[-4],[-10],[-6],[-8],[-5],[-6],[4],[-2],[-8],[-3],[-3],[1],[7],[5],[-1],[2],[-5],[-10],[-7],[2],[5],[-10],[7],[3],[4],[10],[-2],[-1],[2],[8],[-7],[1],[-1],[5],[-9],[1],[4],[-2],[-3],[6],[1],[-5],[7],[-4],[4],[-4],[-10],[-4],[-8],[-10],[5],[-3],[-5],[2],[10],[-7],[6],[-5],[-10],[3],[9],[-8],[4],[2],[3],[1],[7],[9],[-6],[2],[-2],[8],[3],[-2],[2],[-8],[5],[-2],[9],[3],[7],[-2],[-7],[-8],[3],[-1],[-9],[5],[-6],[-4],[4],[-1],[-9],[10],[-10],[8],[8],[-4],[10],[-9],[2],[-9],[3],[-10],[1],[-7],[-7],[6],[5],[1],[-2],[5],[-10],[4],[-10],[4],[5],[10],[7],[6],[5],[5],[-6],[-7],[-8],[8],[-9],[9],[-1],[1],[7],[3],[9],[1],[5],[-6],[-3],[-4],[1],[-1],[4],[-10],[-4],[4],[1],[7],[9],[4],[-3],[-3],[-2],[-1],[-9],[7],[-10],[2],[10],[9],[-10],[-9],[8],[-1],[-8],[-6],[9],[1],[10],[8],[1],[-3],[6],[7],[7],[7],[-10],[-8],[-6],[5],[3],[-7],[1],[-6],[2],[-2],[1],[-5],[9],[10],[9],[3],[8],[8],[-10],[8],[-4],[-8],[10],[8],[9],[-8],[5],[7],[7],[-2],[-7],[-6],[4],[-8],[6],[-10],[8],[-7],[-3],[4],[-7],[2],[6],[-8],[7],[9],[-2],[-10],[8],[-3],[-4],[7],[2],[-2],[-9],[6],[-9],[-7],[-8],[-7],[-4],[-10],[3],[3],[9],[-8],[-10],[7],[-8],[-6],[7],[6],[10],[10],[8],[-2],[6],[-9],[1],[-2],[9],[-3],[6],[-10],[1],[5],[7],[4],[5],[-7],[3],[-7],[1],[-8],[7],[5],[2],[4],[10],[-4],[9],[-10],[1],[6],[-8],[-10],[2],[2],[3],[-10],[-1],[-6],[-4],[3],[-6],[8],[-10],[-6],[10],[8],[-4],[-3],[-6],[-2],[4],[-9],[6],[10],[-8],[6],[3],[3],[-2],[-4],[-10],[-2],[-1],[-1],[-9],[-3],[-6],[10],[10],[3],[-4],[-5],[-3],[-8],[-5],[9],[7],[10],[-6],[2],[-5],[-10],[1],[-2],[-9],[-10],[4],[-10],[2],[-3],[-4],[-2],[4],[6],[2],[-9],[7],[7],[-9],[-9],[-6],[3],[-2],[8],[-3],[-3],[-3],[-8],[7],[-9],[4],[-6],[-7],[-8],[-6],[7],[4],[9],[-5],[2],[-9],[-6],[9],[1],[10],[5],[-10],[-4],[7],[-5],[9],[-2],[-4],[-2],[9],[-8],[8],[1],[10],[7],[2],[3],[-4],[8],[10],[-4],[-5],[-5],[1],[-9],[-1],[9],[5],[-9],[1],[-4],[-8],[6],[-7],[-5],[8],[-10],[-8],[-4],[-10],[9],[2],[-1],[9],[-1],[-7],[-5],[5],[9],[6],[10],[5],[-8],[5],[-4],[-7],[-6],[-3],[7],[10],[4],[4],[-4],[-1],[-10],[9],[10],[2],[-9],[-2],[-3],[7],[1],[8],[-2],[3],[-6],[5],[5],[-5],[10],[8],[7],[10],[8],[10],[2],[-1],[-5],[-8],[-9],[-3],[9],[7],[2],[2],[5],[4],[10],[10],[5],[-9],[5],[-9],[-3],[9],[1],[9],[2],[5],[-9],[7],[-8],[7],[-4],[-8],[-7],[9],[7],[6],[6],[-3],[9],[-6],[-9],[6],[9],[3],[-6],[-5],[-7],[3],[-10],[-10],[10],[-8],[-1],[-1],[3],[3],[10],[2],[-5],[-9],[5],[-1],[-9],[-10],[5],[-7],[-6],[-1],[-5],[9],[-2],[2],[2],[-3],[8],[5],[-8],[-10],[1],[5],[10],[2],[6],[-4],[4],[1],[-4],[9],[-8],[4],[-6],[3],[-7],[10],[-3],[-5],[6],[10],[1],[-5],[7],[-2],[-10],[8],[5],[5],[-3],[5],[1],[10],[-10],[-8],[4],[-8],[-4],[-9],[-8],[4],[4],[-7],[-6],[-10],[9],[8],[1],[-4],[7],[-7],[4],[6],[-6],[-8],[8],[4],[4],[10],[-2],[-8],[8],[-2],[8],[-1],[-10],[5],[-2],[1],[-8],[2]], dtype = "uint32")#candidate|8332|(1092, 1)|const|uint32
call_8330 = relay.TupleGetItem(func_5621_call(relay.reshape(var_8331.astype('float64'), [3, 11, 1]), relay.reshape(const_8332.astype('uint32'), [7, 156]), ), 0)
call_8333 = relay.TupleGetItem(func_5625_call(relay.reshape(var_8331.astype('float64'), [3, 11, 1]), relay.reshape(const_8332.astype('uint32'), [7, 156]), ), 0)
func_6825_call = mod.get_global_var('func_6825')
func_6827_call = mutated_mod.get_global_var('func_6827')
var_8335 = relay.var("var_8335", dtype = "float64", shape = (280,))#candidate|8335|(280,)|var|float64
call_8334 = relay.TupleGetItem(func_6825_call(relay.reshape(var_8335.astype('float64'), [14, 2, 10])), 0)
call_8336 = relay.TupleGetItem(func_6827_call(relay.reshape(var_8335.astype('float64'), [14, 2, 10])), 0)
func_6240_call = mod.get_global_var('func_6240')
func_6242_call = mutated_mod.get_global_var('func_6242')
call_8341 = relay.TupleGetItem(func_6240_call(relay.reshape(call_8330.astype('uint32'), [1092,])), 2)
call_8342 = relay.TupleGetItem(func_6242_call(relay.reshape(call_8330.astype('uint32'), [1092,])), 2)
output = relay.Tuple([bop_8313,call_8330,var_8331,const_8332,call_8334,var_8335,call_8341,])
output2 = relay.Tuple([bop_8316,call_8333,var_8331,const_8332,call_8336,var_8335,call_8342,])
func_8344 = relay.Function([var_8312,var_8331,var_8335,], output)
mod['func_8344'] = func_8344
mod = relay.transform.InferType()(mod)
var_8345 = relay.var("var_8345", dtype = "float64", shape = (15, 13, 12))#candidate|8345|(15, 13, 12)|var|float64
var_8346 = relay.var("var_8346", dtype = "float64", shape = (33,))#candidate|8346|(33,)|var|float64
var_8347 = relay.var("var_8347", dtype = "float64", shape = (280,))#candidate|8347|(280,)|var|float64
output = func_8344(var_8345,var_8346,var_8347,)
func_8348 = relay.Function([var_8345,var_8346,var_8347,], output)
mutated_mod['func_8348'] = func_8348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_8355 = func_5541_call()
call_8356 = func_5541_call()
func_7601_call = mod.get_global_var('func_7601')
func_7604_call = mutated_mod.get_global_var('func_7604')
var_8361 = relay.var("var_8361", dtype = "int32", shape = (350,))#candidate|8361|(350,)|var|int32
call_8360 = func_7601_call(relay.reshape(var_8361.astype('int32'), [5, 5, 14]))
call_8362 = func_7601_call(relay.reshape(var_8361.astype('int32'), [5, 5, 14]))
output = relay.Tuple([call_8355,call_8360,var_8361,])
output2 = relay.Tuple([call_8356,call_8362,var_8361,])
func_8374 = relay.Function([var_8361,], output)
mod['func_8374'] = func_8374
mod = relay.transform.InferType()(mod)
mutated_mod['func_8374'] = func_8374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8375 = relay.var("var_8375", dtype = "int32", shape = (350,))#candidate|8375|(350,)|var|int32
func_8374_call = mutated_mod.get_global_var('func_8374')
call_8376 = func_8374_call(var_8375)
output = call_8376
func_8377 = relay.Function([var_8375], output)
mutated_mod['func_8377'] = func_8377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6758_call = mod.get_global_var('func_6758')
func_6760_call = mutated_mod.get_global_var('func_6760')
call_8414 = relay.TupleGetItem(func_6758_call(), 0)
call_8415 = relay.TupleGetItem(func_6760_call(), 0)
output = relay.Tuple([call_8414,])
output2 = relay.Tuple([call_8415,])
func_8439 = relay.Function([], output)
mod['func_8439'] = func_8439
mod = relay.transform.InferType()(mod)
mutated_mod['func_8439'] = func_8439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8439_call = mutated_mod.get_global_var('func_8439')
call_8440 = func_8439_call()
output = call_8440
func_8441 = relay.Function([], output)
mutated_mod['func_8441'] = func_8441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7697_call = mod.get_global_var('func_7697')
func_7698_call = mutated_mod.get_global_var('func_7698')
call_8442 = relay.TupleGetItem(func_7697_call(), 3)
call_8443 = relay.TupleGetItem(func_7698_call(), 3)
func_7017_call = mod.get_global_var('func_7017')
func_7019_call = mutated_mod.get_global_var('func_7019')
call_8458 = relay.TupleGetItem(func_7017_call(), 1)
call_8459 = relay.TupleGetItem(func_7019_call(), 1)
output = relay.Tuple([call_8442,call_8458,])
output2 = relay.Tuple([call_8443,call_8459,])
func_8460 = relay.Function([], output)
mod['func_8460'] = func_8460
mod = relay.transform.InferType()(mod)
mutated_mod['func_8460'] = func_8460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8460_call = mutated_mod.get_global_var('func_8460')
call_8461 = func_8460_call()
output = call_8461
func_8462 = relay.Function([], output)
mutated_mod['func_8462'] = func_8462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7762_call = mod.get_global_var('func_7762')
func_7763_call = mutated_mod.get_global_var('func_7763')
call_8473 = relay.TupleGetItem(func_7762_call(), 0)
call_8474 = relay.TupleGetItem(func_7763_call(), 0)
var_8480 = relay.var("var_8480", dtype = "float32", shape = (3, 10, 7))#candidate|8480|(3, 10, 7)|var|float32
bop_8481 = relay.greater(call_8473.astype('bool'), var_8480.astype('bool')) # shape=(3, 10, 7)
bop_8484 = relay.greater(call_8474.astype('bool'), var_8480.astype('bool')) # shape=(3, 10, 7)
func_1111_call = mod.get_global_var('func_1111')
func_1115_call = mutated_mod.get_global_var('func_1115')
var_8493 = relay.var("var_8493", dtype = "float32", shape = (1872, 1))#candidate|8493|(1872, 1)|var|float32
var_8494 = relay.var("var_8494", dtype = "bool", shape = (396,))#candidate|8494|(396,)|var|bool
const_8495 = relay.const([6,2,-8,-7,-7,-3,-2,-6,-1,-8,5,1,-3,-6,-8,8,8,9,-8,2,-5,-6,-6,-1,1,-6,-3,6,8,10,-8,-2,-8,-2,-9,10,9,-10,2,4,3,2,8,4,9,-4,2,-5,6,5,-10,-9,4,-6,5,2,1,-7,-3,9,-5,-8,6,7,9,-9,-8,-9,-10,-1,-4,-4,-10,-6,-2,-4,7,-5,-5,6,6,-4,4,9,8,-8,6,7,-4,6], dtype = "uint32")#candidate|8495|(90,)|const|uint32
call_8492 = relay.TupleGetItem(func_1111_call(relay.reshape(var_8493.astype('float32'), [12, 13, 12]), relay.reshape(var_8494.astype('bool'), [66, 6]), relay.reshape(const_8495.astype('uint32'), [90,]), ), 7)
call_8496 = relay.TupleGetItem(func_1115_call(relay.reshape(var_8493.astype('float32'), [12, 13, 12]), relay.reshape(var_8494.astype('bool'), [66, 6]), relay.reshape(const_8495.astype('uint32'), [90,]), ), 7)
func_2771_call = mod.get_global_var('func_2771')
func_2773_call = mutated_mod.get_global_var('func_2773')
var_8526 = relay.var("var_8526", dtype = "bool", shape = (1, 15))#candidate|8526|(1, 15)|var|bool
call_8525 = relay.TupleGetItem(func_2771_call(relay.reshape(var_8526.astype('bool'), [1, 1, 15])), 0)
call_8527 = relay.TupleGetItem(func_2773_call(relay.reshape(var_8526.astype('bool'), [1, 1, 15])), 0)
bop_8533 = relay.bitwise_and(const_8495.astype('uint64'), var_8493.astype('uint64')) # shape=(1872, 90)
func_7380_call = mod.get_global_var('func_7380')
func_7381_call = mutated_mod.get_global_var('func_7381')
call_8539 = relay.TupleGetItem(func_7380_call(), 0)
call_8540 = relay.TupleGetItem(func_7381_call(), 0)
uop_8541 = relay.log10(var_8480.astype('float32')) # shape=(3, 10, 7)
func_7017_call = mod.get_global_var('func_7017')
func_7019_call = mutated_mod.get_global_var('func_7019')
call_8547 = relay.TupleGetItem(func_7017_call(), 0)
call_8548 = relay.TupleGetItem(func_7019_call(), 0)
func_7145_call = mod.get_global_var('func_7145')
func_7146_call = mutated_mod.get_global_var('func_7146')
call_8558 = relay.TupleGetItem(func_7145_call(), 0)
call_8559 = relay.TupleGetItem(func_7146_call(), 0)
output = relay.Tuple([bop_8481,call_8492,var_8494,call_8525,var_8526,bop_8533,call_8539,uop_8541,call_8547,call_8558,])
output2 = relay.Tuple([bop_8484,call_8496,var_8494,call_8527,var_8526,bop_8533,call_8540,uop_8541,call_8548,call_8559,])
func_8565 = relay.Function([var_8480,var_8493,var_8494,var_8526,], output)
mod['func_8565'] = func_8565
mod = relay.transform.InferType()(mod)
var_8566 = relay.var("var_8566", dtype = "float32", shape = (3, 10, 7))#candidate|8566|(3, 10, 7)|var|float32
var_8567 = relay.var("var_8567", dtype = "float32", shape = (1872, 1))#candidate|8567|(1872, 1)|var|float32
var_8568 = relay.var("var_8568", dtype = "bool", shape = (396,))#candidate|8568|(396,)|var|bool
var_8569 = relay.var("var_8569", dtype = "bool", shape = (1, 15))#candidate|8569|(1, 15)|var|bool
output = func_8565(var_8566,var_8567,var_8568,var_8569,)
func_8570 = relay.Function([var_8566,var_8567,var_8568,var_8569,], output)
mutated_mod['func_8570'] = func_8570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7582_call = mod.get_global_var('func_7582')
func_7583_call = mutated_mod.get_global_var('func_7583')
call_8598 = relay.TupleGetItem(func_7582_call(), 0)
call_8599 = relay.TupleGetItem(func_7583_call(), 0)
var_8600 = relay.var("var_8600", dtype = "float64", shape = (3, 1, 6))#candidate|8600|(3, 1, 6)|var|float64
bop_8601 = relay.greater_equal(call_8598.astype('bool'), var_8600.astype('bool')) # shape=(3, 1, 6)
bop_8604 = relay.greater_equal(call_8599.astype('bool'), var_8600.astype('bool')) # shape=(3, 1, 6)
output = relay.Tuple([bop_8601,])
output2 = relay.Tuple([bop_8604,])
func_8615 = relay.Function([var_8600,], output)
mod['func_8615'] = func_8615
mod = relay.transform.InferType()(mod)
var_8616 = relay.var("var_8616", dtype = "float64", shape = (3, 1, 6))#candidate|8616|(3, 1, 6)|var|float64
output = func_8615(var_8616)
func_8617 = relay.Function([var_8616], output)
mutated_mod['func_8617'] = func_8617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7145_call = mod.get_global_var('func_7145')
func_7146_call = mutated_mod.get_global_var('func_7146')
call_8644 = relay.TupleGetItem(func_7145_call(), 0)
call_8645 = relay.TupleGetItem(func_7146_call(), 0)
func_8565_call = mod.get_global_var('func_8565')
func_8570_call = mutated_mod.get_global_var('func_8570')
const_8648 = relay.const([-7.383658,-7.080631,8.135222,1.778487,-5.871792,-6.535198,-7.699249,-5.131087,6.809413,-1.803448,0.561335,-5.720897,-7.500131,-3.578818,-3.244639,-2.295692,-0.526090,-6.834976,1.608168,-6.680134,-0.877220,0.683428,-6.712425,-1.767908,0.668581,9.376006,6.969064,4.773619,9.954658,-6.744935,4.834917,1.360683,9.151800,8.254093,7.891460,-0.722280,9.539479,-2.007601,-4.916344,3.720837,9.135803,-1.325039,0.342143,-1.307380,6.993322,-8.538554,-9.679558,-4.612485,-0.421566,-1.812937,2.027726,1.198457,-8.092817,-5.516914,3.467422,-8.182661,-4.284355,4.330448,5.827159,6.016431,-7.348841,8.978709,9.215841,4.307665,5.187734,3.506336,-2.394530,1.041206,-4.245442,5.463763,-9.183284,2.014766,-0.976102,-8.611146,-7.272316,-0.641145,5.871104,3.995489,7.687192,-9.381467,-3.948147,-0.199826,8.235152,1.754795,4.469234,6.025985,5.508538,2.432429,9.045893,7.429725,1.137200,6.930072,1.358223,4.829833,1.320247,9.485455,3.731767,-9.497797,-8.654091,-6.247804,7.108941,8.325571,-9.271300,-6.310406,-9.504313,-3.395358,-4.617851,-4.028912,-0.178089,-8.894595,-5.185754,-4.030397,8.336119,-1.531543,-8.879194,-2.114925,-0.774442,-9.216608,-7.025707,-4.755003,-1.761609,-6.391277,-1.252343,-9.849144,-5.710365,-6.449285,2.479504,-1.254237,-2.932252,-3.511081,3.910845,-8.962514,-7.300006,1.325468,7.044253,6.194835,-0.704476,-7.627341,-1.236860,2.819664,-4.231413,7.192162,-1.923406,-6.647459,-8.854459,-3.964075,0.262787,4.232366,7.865514,-9.215879,5.271342,0.335390,9.567375,-0.961120,-2.266762,-7.622481,-1.933270,-5.147052,1.175496,2.123970,0.400621,-8.697856,-1.156399,-8.130174,-4.438688,-5.125460,-2.113770,0.172009,-4.350298,-5.811800,9.984073,2.901327,-5.413555,6.802789,-5.928035,-1.603691,-9.785551,4.516680,-0.639719,-7.544309,-1.481393,-5.793719,-2.387691,2.053228,-9.827732,-5.858509,-1.876081,8.471957,4.903593,9.879067,2.974038,-8.146903,-9.931358,-7.958473,3.003002,5.824477,9.258549,6.821885,5.650469,-8.337923,-5.556365,7.027685,-2.434898,7.754693,3.129494,-7.925556,-4.076084,-5.440738,-9.131683,-1.721237], dtype = "float32")#candidate|8648|(210,)|const|float32
var_8649 = relay.var("var_8649", dtype = "float32", shape = (1872,))#candidate|8649|(1872,)|var|float32
const_8650 = relay.const([False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,False,False,False,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,True,True,True,False,False,True,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,True,False,False,False,True,True,True,True,False,True,True,False,True,False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,False,True,False,True,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,False,False,False,True,True,False,False,True,False,False,True,True,False,True,True,True,False,False,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,False,False,False,False,True,False,True,True,False,False,True,False,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,False], dtype = "bool")#candidate|8650|(396,)|const|bool
var_8651 = relay.var("var_8651", dtype = "bool", shape = (15,))#candidate|8651|(15,)|var|bool
call_8647 = relay.TupleGetItem(func_8565_call(relay.reshape(const_8648.astype('float32'), [3, 10, 7]), relay.reshape(var_8649.astype('float32'), [1872, 1]), relay.reshape(const_8650.astype('bool'), [396,]), relay.reshape(var_8651.astype('bool'), [1, 15]), ), 6)
call_8652 = relay.TupleGetItem(func_8570_call(relay.reshape(const_8648.astype('float32'), [3, 10, 7]), relay.reshape(var_8649.astype('float32'), [1872, 1]), relay.reshape(const_8650.astype('bool'), [396,]), relay.reshape(var_8651.astype('bool'), [1, 15]), ), 6)
output = relay.Tuple([call_8644,call_8647,const_8648,var_8649,const_8650,var_8651,])
output2 = relay.Tuple([call_8645,call_8652,const_8648,var_8649,const_8650,var_8651,])
func_8672 = relay.Function([var_8649,var_8651,], output)
mod['func_8672'] = func_8672
mod = relay.transform.InferType()(mod)
var_8673 = relay.var("var_8673", dtype = "float32", shape = (1872,))#candidate|8673|(1872,)|var|float32
var_8674 = relay.var("var_8674", dtype = "bool", shape = (15,))#candidate|8674|(15,)|var|bool
output = func_8672(var_8673,var_8674,)
func_8675 = relay.Function([var_8673,var_8674,], output)
mutated_mod['func_8675'] = func_8675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7370_call = mod.get_global_var('func_7370')
func_7372_call = mutated_mod.get_global_var('func_7372')
call_8677 = func_7370_call()
call_8678 = func_7370_call()
func_7667_call = mod.get_global_var('func_7667')
func_7668_call = mutated_mod.get_global_var('func_7668')
call_8693 = relay.TupleGetItem(func_7667_call(), 0)
call_8694 = relay.TupleGetItem(func_7668_call(), 0)
uop_8719 = relay.log10(call_8693.astype('float32')) # shape=(14, 2, 10)
uop_8721 = relay.log10(call_8694.astype('float32')) # shape=(14, 2, 10)
func_8439_call = mod.get_global_var('func_8439')
func_8441_call = mutated_mod.get_global_var('func_8441')
call_8744 = relay.TupleGetItem(func_8439_call(), 0)
call_8745 = relay.TupleGetItem(func_8441_call(), 0)
func_8439_call = mod.get_global_var('func_8439')
func_8441_call = mutated_mod.get_global_var('func_8441')
call_8754 = relay.TupleGetItem(func_8439_call(), 0)
call_8755 = relay.TupleGetItem(func_8441_call(), 0)
uop_8772 = relay.sin(uop_8719.astype('float32')) # shape=(14, 2, 10)
uop_8774 = relay.sin(uop_8721.astype('float32')) # shape=(14, 2, 10)
uop_8778 = relay.cosh(call_8754.astype('float64')) # shape=(3, 1, 1)
uop_8780 = relay.cosh(call_8755.astype('float64')) # shape=(3, 1, 1)
output = relay.Tuple([call_8677,call_8744,uop_8772,uop_8778,])
output2 = relay.Tuple([call_8678,call_8745,uop_8774,uop_8780,])
func_8782 = relay.Function([], output)
mod['func_8782'] = func_8782
mod = relay.transform.InferType()(mod)
mutated_mod['func_8782'] = func_8782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8782_call = mutated_mod.get_global_var('func_8782')
call_8783 = func_8782_call()
output = call_8783
func_8784 = relay.Function([], output)
mutated_mod['func_8784'] = func_8784
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8820 = relay.const([[[-3,2,8,-5,9,9,2,5,-8,-6,4,-5,-2,5,8],[-3,2,4,-7,-8,-5,-10,-3,-8,5,9,1,2,-4,1],[-6,2,-10,-1,-9,7,-4,-10,1,-9,3,-6,3,-10,-6],[9,-5,-3,1,-6,-10,4,-8,-2,-4,7,-2,-4,10,2],[-4,9,5,-6,3,9,-5,-7,7,5,-4,-1,-5,1,-8],[1,-5,-1,2,9,3,9,10,2,7,1,10,-8,-6,10],[2,-5,-4,9,8,-9,5,9,-6,-5,8,6,7,-5,-5],[-6,-8,5,-9,-6,-2,8,-5,-3,9,3,1,9,5,2],[9,-6,10,9,-6,8,3,3,6,10,3,5,5,3,-6],[-10,4,-3,7,-6,8,9,4,3,10,-3,9,9,2,5],[-9,-2,-1,7,-9,-1,7,-2,5,-10,7,10,-3,-9,2],[-10,9,4,-1,7,4,-8,-9,-1,-4,-1,-4,8,-1,2],[-10,-4,6,-8,9,-6,-7,-3,5,-3,6,-9,-5,10,3],[-9,4,-4,9,9,1,-10,-10,-5,8,-3,1,5,-8,-4]],[[-6,-5,-6,1,3,5,5,-10,-8,-9,10,9,3,-9,-10],[1,-6,4,-5,7,-5,2,8,5,5,-2,-6,-8,6,8],[-10,2,7,-6,-1,2,7,-5,4,-1,-4,7,6,6,5],[-8,5,1,-5,6,-1,-3,-2,5,8,6,9,-9,1,8],[1,10,-5,-10,7,-10,6,-9,2,4,-8,-10,-6,-3,-4],[2,9,1,-1,6,-9,-8,-10,3,9,-9,-10,5,10,4],[10,-9,-7,3,-5,8,7,-9,1,6,1,-6,-4,10,2],[8,-9,-3,1,-4,6,10,-8,-10,-5,8,10,1,-8,10],[5,3,6,10,-1,6,8,3,-7,4,7,-9,7,-5,-1],[4,2,9,3,-7,-4,4,-1,8,9,-1,6,-7,2,-10],[6,10,-1,-8,-6,9,-10,-4,1,8,-3,-8,10,4,7],[6,7,-3,-3,-5,8,3,-8,-6,6,-8,-4,10,10,-6],[9,2,6,-6,-6,9,6,9,-8,2,-10,5,-5,-10,2],[-3,7,-6,-1,-3,-7,9,6,-7,5,-8,-8,-3,-1,-9]],[[6,-1,9,10,-4,-9,7,4,7,10,9,-1,3,1,4],[7,5,-4,9,-6,-9,4,4,1,-7,5,9,6,-7,-5],[10,10,-2,-2,10,-4,5,-7,3,-10,7,10,-9,-9,5],[7,8,1,-6,8,10,-7,9,-4,9,7,-9,-5,5,-5],[8,8,-3,-3,-1,-5,5,6,5,8,-3,-2,-2,-1,9],[-7,-1,-2,-3,1,7,5,-7,10,2,-6,3,-9,4,-1],[-7,-1,-3,-1,7,-2,-10,-10,9,-1,-6,-10,-6,5,1],[3,4,6,-7,8,3,-10,-7,1,8,1,-8,6,-1,4],[-7,-10,2,-2,7,5,-8,-2,-5,2,-5,-1,3,-7,-6],[-4,9,-6,4,-2,-8,10,1,-2,4,-2,-7,2,-8,-2],[-9,9,-4,10,5,-8,10,8,9,8,3,2,2,-8,2],[-7,10,-10,-3,2,-4,-2,8,6,9,3,-5,-2,9,-9],[3,4,4,-8,4,-6,10,-3,-7,6,-6,-9,-5,1,-4],[7,-6,1,-4,-8,10,-9,1,9,-2,7,-5,2,-9,6]],[[-1,3,3,-9,4,7,1,-6,-7,-4,1,8,8,-8,3],[4,-6,-3,-10,7,-8,-2,10,3,3,6,-7,-10,6,-5],[9,-5,4,-7,8,2,8,-5,2,-6,3,6,8,-8,1],[7,3,-8,-8,5,9,-10,-1,-5,-2,5,5,-9,7,-1],[-3,10,-8,4,1,2,7,7,8,9,7,9,-7,-6,8],[-5,-6,6,1,-10,9,2,-3,-2,-5,2,8,1,-2,2],[-4,10,9,-4,5,-5,-5,10,10,-10,4,-4,-5,-10,3],[6,8,-9,-3,-7,8,-5,-1,-10,7,-5,-6,-7,-5,8],[8,9,-2,-3,1,3,4,-2,-3,7,4,4,10,-1,-8],[-4,4,2,-10,-1,7,-2,-2,-7,7,-6,5,-3,1,9],[-4,6,4,4,-5,7,-8,4,-3,6,4,-3,2,-3,9],[-4,4,-8,2,-2,-8,-10,10,-6,-4,1,6,8,-9,3],[-2,8,9,-4,-10,7,-7,-4,-10,8,-5,-3,-4,-9,1],[-10,10,-10,-5,-9,1,3,-2,5,-7,5,5,-3,10,-1]],[[-7,-5,8,-6,-2,-8,-3,-2,-7,-9,3,8,-4,6,-4],[-5,9,-8,9,-10,10,-3,8,-8,-6,9,2,7,8,-2],[-10,5,-8,6,6,-8,3,-7,-9,-6,-3,4,2,-3,-5],[-7,1,6,-3,-9,-8,5,-8,-4,9,-4,5,-10,-9,1],[8,-1,-8,-10,-9,1,-4,1,-1,3,-5,4,4,10,7],[-9,9,-3,7,9,-2,5,9,10,-3,9,9,-9,-7,6],[10,10,5,6,9,-10,-8,-7,-5,6,-1,5,10,2,-4],[-3,4,-2,9,3,-3,-10,-9,9,-5,9,2,5,1,1],[-6,8,10,-10,-9,-6,5,-5,-5,6,9,-6,-1,-5,10],[8,10,5,7,8,8,10,2,-6,8,-6,7,-8,-7,-3],[-8,-3,6,-10,-5,10,-4,7,-4,2,-6,8,2,-4,-10],[-4,-5,-1,-6,5,-9,5,5,-7,6,2,-8,3,-10,-9],[-1,1,9,-8,-2,6,-10,-3,2,8,1,-8,-2,-1,10],[-3,2,-1,-7,-5,4,10,-4,-2,5,4,10,7,7,-6]],[[-7,-9,4,-9,7,-8,7,6,3,8,8,5,6,-3,1],[9,8,-4,-6,-1,-9,5,-9,5,-10,9,7,-9,-8,-5],[10,7,-1,-10,6,-1,2,-8,10,-2,-8,-10,7,-7,2],[3,5,-1,1,-3,-5,-1,-2,-10,4,-3,-5,7,-4,8],[-4,9,-3,6,-4,-2,-3,5,-1,8,-9,8,-5,7,-7],[7,-9,3,-7,-5,-7,-1,9,-6,3,4,6,-5,6,2],[10,-9,6,-1,10,-7,3,7,-3,10,10,7,7,9,-7],[-9,2,6,-9,-4,-2,-5,-6,7,-9,7,-5,5,8,7],[7,-4,5,1,-4,-4,6,1,4,-5,-7,2,9,-3,-1],[4,-8,1,6,-9,8,9,3,-10,-10,-1,7,10,-9,3],[-7,2,-5,9,4,4,-1,8,4,10,2,4,3,3,1],[5,-5,3,7,-1,-10,-5,-9,5,-10,1,6,-1,-1,4],[2,-2,-6,7,7,-6,-5,7,5,-9,-7,-9,8,-4,4],[-3,-7,5,7,7,-10,-10,6,-8,9,8,-10,1,-4,-6]],[[-2,9,3,-5,6,6,-6,2,6,-5,-7,-5,9,-4,-10],[3,1,-5,8,7,-3,1,-3,-3,2,6,-2,-8,-6,6],[-3,9,-3,-8,-2,4,-2,-5,9,-4,10,2,-10,5,-3],[1,1,1,4,-2,6,2,-2,-3,-8,2,6,10,-4,-3],[7,4,5,10,7,-6,10,3,8,5,-10,4,10,-1,10],[-3,9,2,5,1,-6,6,-8,1,4,2,10,-9,9,-5],[3,3,-5,6,-9,-1,6,2,-8,-10,7,-6,5,7,5],[-10,-10,-2,9,5,5,-10,5,4,5,6,5,8,5,-3],[-7,-3,-7,-2,-3,4,-2,10,8,-1,-10,-4,-6,5,10],[-4,-3,4,1,6,-2,1,-5,-1,5,-4,8,-9,10,6],[4,-7,-8,-4,-10,1,1,5,-3,8,10,-2,-2,3,-7],[-4,-10,5,-3,-4,-3,4,-9,1,9,9,-3,-8,-3,9],[-1,-10,-3,8,6,-8,9,3,4,9,5,-3,-10,-5,3],[5,-6,-4,2,6,5,6,-7,3,7,5,1,-10,10,-6]],[[-1,6,5,-6,-3,6,-8,6,-3,9,1,2,1,-1,-9],[-1,-7,8,10,-1,-8,-2,9,-4,-5,4,6,-7,10,-5],[4,-9,-4,5,3,-8,10,9,-8,-4,5,-10,-4,5,5],[-2,7,-2,-8,-6,10,2,-2,1,-2,-4,5,-8,-10,-2],[3,6,7,3,-4,6,1,-5,-9,-4,3,9,-3,-6,10],[-10,4,-2,-5,-4,-2,-2,-8,-7,-5,-7,-2,-6,-1,-9],[-10,3,6,-5,-10,9,-1,6,-10,-6,7,-5,10,-3,-6],[4,-3,2,-2,-10,7,-6,-2,10,9,-1,9,-5,-9,-2],[3,1,-2,-5,1,9,-7,-6,9,-3,2,-5,9,-2,10],[-3,9,-9,6,-7,9,5,-5,7,9,-2,-3,1,-9,-2],[6,-2,-7,8,-4,10,-5,1,8,-3,9,7,6,-6,3],[-6,1,-6,10,4,2,-9,-1,-8,10,3,9,-1,-7,2],[5,1,-5,-6,2,10,8,-3,-2,5,2,-1,-9,8,1],[8,-7,4,7,-6,2,4,-5,-8,-10,1,2,-5,-8,8]],[[4,-5,-4,-10,9,-9,3,-10,2,9,2,6,-4,6,7],[-1,-2,9,-3,7,8,-2,3,1,-9,-9,-10,4,9,6],[-6,4,-1,-3,3,-8,-8,-2,-2,8,3,2,-4,9,-8],[9,2,-1,-8,1,4,2,8,5,-7,1,2,-5,-4,2],[-9,-8,-6,-6,-3,6,4,1,2,-2,-1,-10,10,9,-8],[-10,2,10,8,4,2,-9,10,8,8,-2,7,-1,-5,-5],[-1,-2,2,3,-5,-1,9,-3,2,10,5,8,-1,-1,9],[-1,-10,3,2,-1,-3,8,-4,10,4,7,-9,1,6,-8],[9,-5,-2,-8,4,-5,-4,8,4,4,-7,7,-8,8,2],[8,7,8,-2,6,-10,5,-4,9,-3,5,-6,6,1,-5],[-3,-4,-6,10,1,-4,-8,4,-3,7,-8,4,5,7,7],[8,-6,-10,5,2,7,8,6,5,-6,3,-7,9,10,-9],[-9,7,-9,2,9,1,-10,1,-2,-5,-3,4,9,3,1],[-6,-6,10,2,-1,-3,-6,3,1,4,-6,8,6,-5,-7]],[[-8,9,-8,3,-10,-10,7,8,-1,-9,-6,-3,-7,2,-7],[-10,-5,-1,9,-2,8,-4,6,-9,2,6,-5,4,6,-3],[6,10,-4,4,-6,-2,8,1,7,-3,-10,-7,-7,-6,-7],[-8,4,-4,-8,10,5,-8,8,-9,1,-2,-10,-3,-9,2],[8,1,-5,-10,5,8,-4,5,8,-6,5,-8,-10,3,-2],[7,2,-1,3,3,3,-10,-10,2,-6,-6,8,-5,7,-10],[-3,-8,-3,6,-2,5,-10,6,-9,-7,7,-7,9,5,-10],[-4,2,-9,-3,-2,-4,4,-4,-6,-9,10,-6,2,7,-1],[4,3,7,10,9,-7,-1,-8,1,7,-7,-7,2,-8,9],[-9,7,7,-3,6,-9,4,-3,-4,-8,-4,6,10,1,6],[-9,2,-6,-10,6,-1,-10,-6,9,7,10,2,5,3,-10],[-5,-3,-5,-6,8,-2,10,5,-4,5,-2,5,1,8,5],[5,8,-6,7,-1,-3,-5,4,-8,-4,10,-10,-4,4,-6],[-1,-6,9,6,-4,-2,-2,2,6,-6,5,-8,2,7,-3]]], dtype = "uint32")#candidate|8820|(10, 14, 15)|const|uint32
var_8821 = relay.var("var_8821", dtype = "uint32", shape = (10, 14, 15))#candidate|8821|(10, 14, 15)|var|uint32
bop_8822 = relay.bitwise_and(const_8820.astype('uint32'), relay.reshape(var_8821.astype('uint32'), relay.shape_of(const_8820))) # shape=(10, 14, 15)
var_8828 = relay.var("var_8828", dtype = "uint32", shape = (10, 14, 15))#candidate|8828|(10, 14, 15)|var|uint32
bop_8829 = relay.logical_and(const_8820.astype('bool'), relay.reshape(var_8828.astype('bool'), relay.shape_of(const_8820))) # shape=(10, 14, 15)
uop_8834 = relay.sin(bop_8822.astype('float64')) # shape=(10, 14, 15)
func_2580_call = mod.get_global_var('func_2580')
func_2582_call = mutated_mod.get_global_var('func_2582')
const_8841 = relay.const([[6.276485,-4.719849,6.432963,4.668873,3.941010,0.851688,3.542243,-1.617654,8.085698,-4.184626,0.116020,-5.868466,5.348409,-2.634334,1.383905,4.075379,-3.215835,5.729810,0.637072,-8.134595,-8.835905,-5.254444,-2.810455,-2.686377,5.763383,9.095812,9.927472,-8.139292,-4.111231,-4.070583,8.750324,-4.369527,3.912898,0.640532,-6.197518,-6.413770,2.693951,-0.245782,9.576492,9.485673,5.660917,9.939653,-9.279933,-0.114382,-8.243646,-5.399553,-8.036642,-0.109523,3.352235,-1.493894,1.578493,-0.642390,-9.569989,-4.300597,-9.131814,-4.674801,-8.793075,-7.495826,-7.811850,5.220478,-8.961887,-1.168135,-2.283636,-8.309884,-6.463627,1.148962,7.153671,5.062961,0.767818,1.314025,2.854369,7.200668,-0.358363,4.182076,-7.830342,9.101495,-2.816491,-4.082870,-9.173052,-1.267066,5.633425,-4.048185,-5.606501,-2.798191,6.140278,3.695849,-7.382979,8.887822,-3.515445,5.260700,8.434198,0.867360,-6.921228,9.807191,0.995401,0.879536,8.027441,0.409577,7.215268,5.538738,-6.954595,-4.384569,-4.612561,0.270621,-1.771144,3.287977,2.099613,4.856848,-9.181722,0.642013,6.658294,7.148508,-7.753168,-2.394319,-3.917985,3.921134,-5.349587,1.570181,7.876656,3.846522,6.909653,0.710261,-3.288598,-2.274560,6.272627,-5.264398,8.936613,-1.821777,-5.096830,8.168288,-6.229031,3.069206,-7.754895,8.492192,7.620248,9.198454,-1.046183,-2.838760,-3.879060,3.376210,-4.117420,-9.785743,8.419460,8.807584,8.620611,6.075002,8.803436,-0.910050,9.004569,2.626124,-4.264905,-0.141318,-0.429417,2.157277,4.227915,-5.402530,-2.211091,3.610774,3.231014,-6.768193,-3.192663,2.718808,-9.528400,6.086719,3.100386,5.157963,-8.440463,-1.734163,-7.802479,0.886901,3.852047,1.087139,-6.921942,1.037538,1.246448,-6.556485,0.640790,-5.492186,9.844356,-2.734023,-9.426014,-8.389174,2.054218,7.836592,9.646583,6.127777,2.828468,-8.482806,-2.318392,3.481088,2.532756,7.994439,4.996590,3.697988,8.818769,-7.537720,3.594645,-6.255201,8.401292,-1.575307,-1.296302,3.491827,-3.024101,4.589423,-9.500593,-5.223761,-9.157753,-4.512696,6.240957,-6.670496,8.589904,5.845359,-1.260011,7.143625,5.808830,-6.012664,-8.944915,2.502488,4.228273,2.673999,-4.716390,-0.031286,4.323033,-6.372518,-9.694098,1.279890,4.775080,-5.263733,0.176892,-1.109375,2.676072,-1.426653,-5.364046,-2.666894,6.045793,4.921419,0.763196,-9.021219,5.458556,-2.709464,-1.002992,5.208080,-0.903228,2.545416,-8.817962,-5.527915,-8.371023,4.957844,3.676316,-9.097557,1.867570,-4.195586,8.779317,3.990769,8.513426,-1.045128,3.615798,-0.810245,3.609246,0.034567,0.123776,5.218234,4.299091,-8.075658,-8.262088,7.635101,8.532136,3.164612,-1.570982,3.655227,-1.695257,4.526335,8.880364,3.193003,2.289735,-7.455714,-5.457439,-8.966567,-2.787133,-7.946116,-8.490281,-5.021617,1.850360,-5.460023,-8.847845,-2.265272,-4.096159,1.991660,2.784642,-5.584856,0.163234,4.158086,6.826752,9.067496,-7.094039,-9.908898,7.631459,-9.025866,-5.279171,0.778763,-2.721559,8.583224,3.019214,5.634761,8.683063,-3.780473,-1.442713,5.429369,8.160880,-6.317624,-1.300346,-1.020711,8.862774,0.969256,-6.741871,0.520675,-0.469676,4.477757,9.344015,-7.198304,-3.843248,5.080567,-2.207453,-4.558527,-6.535220,1.322184,-4.563721,-9.719164,8.239643,8.818016,-3.798180,-0.143200,-7.100257,0.149625,-8.301301,-5.147669,-2.532735,-8.886122,-9.980101,-9.442249,7.534951,-7.881409,-5.528673,7.151079,-1.319627,3.257116,9.240617,0.528301,8.651097,9.488746,-1.079721,-0.627860,-3.851306,0.489096,-5.965268,8.886480,5.382204,3.055531,-5.613298,7.603282,5.255671,-1.599129,2.877540,-4.203734,-2.201860,-8.565481,-7.040125,8.092777,6.548954,1.741473,-7.138253,8.250907,-0.526684,7.318624,-6.482029,9.500349,6.772487,-9.615011,6.831780,1.474287,2.989093,-8.916379,2.337799,-1.253609,-8.276051,-1.023549,-2.430265,0.042493,-7.264108,4.301267,0.151179,-2.622478,-2.637217,0.711867,-4.984876,5.298288,4.710260,8.033335,7.594077,5.447576,9.141608,6.734835,-7.075358,3.141315,1.189965,4.533557,3.143786,-1.517741,-4.461916,-0.395004,-6.103524,-9.295961,1.618567,-5.614323,4.050957,1.818550,4.234178,-7.783529,8.493628,-7.783645,3.832247,5.527283,-9.355252,-2.125761,-8.171716,8.810177,6.650329,-7.106760,8.357180,3.449443,-4.887759,6.635565,5.489910,2.590784,8.980889,-3.010497,6.039523,-5.005297,7.975558,5.021516,7.307005,-6.882517,-6.687759,6.697336,-6.407656,0.900958,2.210541,-8.578175,-5.696428,5.374877,-4.205892,-9.219649,-2.068667,9.887624,-1.117643,9.766567,8.802993,-2.754638,-1.352655,7.808160,-9.849674,5.271019,8.958352,9.092253,-4.923218,-8.837384,-4.102343,-4.384362,3.598482,-4.071604,-3.514938,2.477417,9.469232,-1.303888,7.825123,-5.176911,-0.626360,-8.676830,-9.638149,2.936379,-5.364099,3.425308,9.787163,8.660836,1.193654,-0.652137,4.598777,5.619819,9.283705,-1.959241,0.804131,-8.514674,1.002788,3.505868,-1.165424,-6.499519,-3.148027,3.940681,9.724673,-4.890161,-1.986595,1.342437,-9.480013,4.804438,-7.137713,8.195456,-5.611232]], dtype = "float64")#candidate|8841|(1, 507)|const|float64
call_8840 = relay.TupleGetItem(func_2580_call(relay.reshape(const_8841.astype('float64'), [13, 3, 13])), 0)
call_8842 = relay.TupleGetItem(func_2582_call(relay.reshape(const_8841.astype('float64'), [13, 3, 13])), 0)
output = relay.Tuple([bop_8829,uop_8834,call_8840,const_8841,])
output2 = relay.Tuple([bop_8829,uop_8834,call_8842,const_8841,])
func_8846 = relay.Function([var_8821,var_8828,], output)
mod['func_8846'] = func_8846
mod = relay.transform.InferType()(mod)
var_8847 = relay.var("var_8847", dtype = "uint32", shape = (10, 14, 15))#candidate|8847|(10, 14, 15)|var|uint32
var_8848 = relay.var("var_8848", dtype = "uint32", shape = (10, 14, 15))#candidate|8848|(10, 14, 15)|var|uint32
output = func_8846(var_8847,var_8848,)
func_8849 = relay.Function([var_8847,var_8848,], output)
mutated_mod['func_8849'] = func_8849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6948_call = mod.get_global_var('func_6948')
func_6950_call = mutated_mod.get_global_var('func_6950')
call_8907 = relay.TupleGetItem(func_6948_call(), 0)
call_8908 = relay.TupleGetItem(func_6950_call(), 0)
output = relay.Tuple([call_8907,])
output2 = relay.Tuple([call_8908,])
func_8911 = relay.Function([], output)
mod['func_8911'] = func_8911
mod = relay.transform.InferType()(mod)
output = func_8911()
func_8912 = relay.Function([], output)
mutated_mod['func_8912'] = func_8912
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8936 = relay.const(-8, dtype = "int16")#candidate|8936|()|const|int16
var_8937 = relay.var("var_8937", dtype = "int16", shape = (8, 8, 4))#candidate|8937|(8, 8, 4)|var|int16
bop_8938 = relay.equal(const_8936.astype('bool'), var_8937.astype('bool')) # shape=(8, 8, 4)
func_4113_call = mod.get_global_var('func_4113')
func_4116_call = mutated_mod.get_global_var('func_4116')
const_8963 = relay.const([7,-2,-4,1,-5,6,5,3,1,1,5,-10,2,-5,7,8,5,5,6,1,-4,-7,-2,7,2,-3,-5,6,-5,8,2,8,-7,9,6,5,7,-9,4,-2,-3,3,-8,-7,1,4,1,-3,4,4,-1,10,-10,-5,-6,-1,4,8,7,6,1,3,2,4,7,-6,6,-6,-4,1,2,8,9,7,-1,4,-2,8,3,2,2,10,-5,-4,-9,-8,10,6,-3,-3,-5,10,6,-5,-2,10,-6,-1,7,9,-2,-9,-6,10,-8,-6,4,4,6,6,6,-1,6,-3,-5,3,1,10,8,9,-6,1,-2,7,-6,-5,9,-7,6,-10,-4,10,6,5,1,10,-8,5,-7,8,-7,6,-7,-3,-2,-5,7,-2,-7,-4,10,8,-6,7,-7,-7,-6,-10,-5,-7,7,3,-1,-6,-1,-9,-6,-8,1,-8,-10,5,-9,10,-10,-2,9,3,-10,8,-1,4,-5,-10,10,7,2,-8,6,6,3,3,1,3,4,5,-2,1,-5,-4,-10,7,-10,4,10,-10,-7,-8,10,2,-5,-9,9,-4,2,9,8,5,-8,-4,10,5,8,8,7,1,-10,-10,-10,-1,-2,-6,6,-8,2,-7,7,-10,5,4,9,-3,8,7,-8,2,-1,-2,-10,3,4,6,2,-8,-5,7,10,2,3,-5,8,-3,-6,7,-5,9,10,1,-1,-9,1,-10,-7,-8,2,3,9,-8,-1,10,-5,5,2,9,5,10,3,-9,-2,1,8,-3,-2,-1,-6,-6,10,10,9,5,-7,-10,-5,-1,5,1,7,-10,5,-9,4,5,9,6,-3,2,8,-10,-2,-9,2,10,-4,-6,4,9,3,2,9,9,-10,4,2,10,5,-1,-9,-4,-3,-9,8,-7,-4,-10,-8,7,-10,6,4,-6,-5,-6,7,-7,-10,7,8,8,2,9,7,-8,8,10,1,-1,-2,3,6,-2,-10,-6,-5,-2,-2,-7,-6,7,10,-6,-3,7,3,-7,-2,7,7,10,-8,9,5,1,2,5,-7,-2,9,8,-9,-1,3,3,-3,-4,-5,-1,10,2,-1,-5,-10,-9,-6,1,1,8,-3,-5,-4,-5,1,-9,-7,-4,-10,7,6,8,-2,-9,4,8,-8,4,-4,-1,5,8,1,-2,-1,-2,4,10,1,-10,9,-4,3,-9,7,1,-1,5,1,4,6,-10,6,-8,-9,1,6,-5,3,5,-3,1,-5,8,6,1,-6,2,-1,8,-9,-8,-6,4,-8,-7,-5,-6,7,-10,4,2,-2,-1,-7,5,-7,10,7,-3,3,5,-8,-8,-5,-5,10,10,-6,-5,9,10,2,-1,6,-3,4,6,-10,-9,5,-3,-3,-4,-3,5,-6,10,-7,-6,-5,-1,-8,-10,-3,3,-3,10,-9,-7,3,4,7,1,5,8,-8,-8,7,-5,7,8,-6,7,5,8,8,-1,-8,-10,10,2,6,-4,-7,3,9,-3,-10,-10,4,4,2,6,8,2,1,-5,3,2,-2,-4,-6,6,5,4,-6,1,4,7,-3,-9,4,-3,-7,8,10,10,9,4,4,5,-6,7,2,-1,4,9,-6,-4,7,-10,-4,-5,-10,8,8,-5,8,4,5,-6,7,-6,10,-4,2,8,-8,-10,1,-4,1,-5,1,-10,-7,7,4,7,-3,-2,8,-2,2,-5,-2,-4,-8,2,8,-8,-8,1,6,5,10,6,-9,2,-2,4,8,7,-9,-7,-10,-4,-8,10,2,5,7,9,10,7,10,8,-1,6,-3,-9,-6,1,7,-1,-1,2,-8,1,-2,-1,-2,-2,3,3,9,-1,4,-10,-7,3,-7,-3,-3,2,7,-10,4,1,8,-7,5,-3,-2,-1,3,-7,8,5,8,-9,-3,-1,-8,8,6,4,-3,-2,9,-4,-7,3,2,-7,7,3,-6,9,-7,-2,2,4,-5,10,10,-6,-4,-2,-9,5,8,8,-4,-8,5,4,7,5,-6,4,9,-3,-3,9,8,7,-4,8,3,-1,-5,6,-4,-2,5,4,-9,7,4,3,-2,7,-7,-5,10,-9,-10,-7,-5,5,-8,-4,-8,9,8,5,4,9,-7,-2,-10,-2,-5,5,1,-1,-8,5,7,9,10,9,-6,-7,-3,-9,-9,3,3,5,-7,10,1,-1,-3,-8,-4,7,3,4,3,9,8,6,-10,-5,5,-10,3,7,-4,7,1,-10,7,2,-1,10,3,-1,6,9,1,8,-3,-10,-1,4,2,-6,-2,-9,-9,10,-6,4,7,3,-5,4,7,4,2,8,4,4,-2,6,-3,-5,9,1], dtype = "uint16")#candidate|8963|(880,)|const|uint16
call_8962 = relay.TupleGetItem(func_4113_call(relay.reshape(const_8963.astype('uint16'), [10, 8, 11]), relay.reshape(const_8963.astype('uint16'), [10, 8, 11]), ), 0)
call_8964 = relay.TupleGetItem(func_4116_call(relay.reshape(const_8963.astype('uint16'), [10, 8, 11]), relay.reshape(const_8963.astype('uint16'), [10, 8, 11]), ), 0)
bop_8983 = relay.divide(call_8962.astype('float64'), const_8936.astype('float64')) # shape=(10, 8, 11)
bop_8986 = relay.divide(call_8964.astype('float64'), const_8936.astype('float64')) # shape=(10, 8, 11)
func_7049_call = mod.get_global_var('func_7049')
func_7050_call = mutated_mod.get_global_var('func_7050')
call_9001 = func_7049_call()
call_9002 = func_7049_call()
uop_9004 = relay.atan(var_8937.astype('float32')) # shape=(8, 8, 4)
func_7075_call = mod.get_global_var('func_7075')
func_7076_call = mutated_mod.get_global_var('func_7076')
call_9018 = relay.TupleGetItem(func_7075_call(), 0)
call_9019 = relay.TupleGetItem(func_7076_call(), 0)
func_4879_call = mod.get_global_var('func_4879')
func_4885_call = mutated_mod.get_global_var('func_4885')
const_9027 = relay.const([6,-6,-8,-4,10,-3,6,10,-6,-1,-3,-5,-8,6,10,9,-7,-4,-6,1,-6,5,-4,-4,-5,-3,5,-1,7,-5,9,4,9,-8,6,-2,-4,4,3,-10,5,1,3,3,1,10,1,3,4,8,-1,-4,-7,-4,-8,-1,10,-1,3,-7,-3,2,1,-6,7,4,-4,4,7,-4,-4,8,-4,-1,4,-1,2,-10,9,9,10,5,-4,-7,-8,-5,-5,-8,-3,-8,-6,-1,2,-3,-7,-8,-8,3,9,2,-3,2,2,-1,-9,-10,-9,5,-2,4,-3,-10,-3,-10,5,4,10,9,5,5,-10,1,7,3,-4,-1,-1,-7,-6,-1,-10,-10,-8,-2,-9,-9,3,-10,-5,2,-2,-6,5,-9,4,-1,-2,5,-2,-5,6,-3,3,9,-8,7,3,-3,9,-9,-2,7,5,-6,-1,-9,-4,-7,-6,4,9,-4,-5,3,10,6,4,8,5,6,4,6,8,4,2,-5,-9,3,5,7,8,9,-7,3,10,2,5,-3,-1,-6,-5,4,-10,-8,-5,-2,8,-6,8,-9,-9,2,6,6,2,-10,4,3,-3,1,-5,10,6,-8,-5,3,-7,9,-2,-3,-8,-3,7,6,-6,7,-4,5,-2,6,-2,-3,-6,2,-9,2,8,-10,1,6,-7,-9,9,-10,-8,10,7,-1,-8,-3,-10,4,2,4,2,-1,4,-9,-3,-5,7,-3,1,-9,6,7,1,-3,-7,-8,-8,7,8,-4,5,4,-7,6,10,8,-7,4,-8,1,-8,4,10,8,5,1,-5,2,5,-1,-1,-2,6,8,-5,-1,10,8,7,7,10,-4,6,-7,1,-3,7,-3,-3,8,10,2,-5,9,8,5,-6,3,4,1,7,8,-1,-8,-1,-6,-6,-10,-9,-4,-7,-5,10,2,-9,9,-7,4,5,-6,-10,7,1,8,8,-6,-5,-7,10,-8,2,-7,-2,9,-4,-6,-7,10,-4,-7,4,-7,-4,-3,4,3,7,-5,2,-8,10,1,-9,-5,-3,5,-6,6,9,-2,1,8,-7,8,-8,-4,-2,-8,-5,-6,-7,-6,5,5,-3,6,-2,3,7,9,-8,8,7,3,-10,2,9,-4,-2,-8,-6,9,9,9,3,-3,-10,-3,6,-1,-6,-8,3,-9,1,-1,2,-6,4,-6,3,8,-10,-2,-10,7,-8,-2,8,-9,1,-7,2,3,-9,10,8,-7,2,7,4,9,10,6,-3,7,5,-6,-7,10,9,2,-10,8,-10,-6,-10,8,-6,-7,7,4,10,-8,2,5,-10,9,-7,3,-3,-2,6,2,-4,3,-5,-5,1,-1,1,-4,-4,2,9,7,-4,4,8,-4,-7,4,-5,8,-2,9,-5,-6,-6,-8,-4,9,-5,10,1,8,10,-1,-2,-1,5,10,4,1,-6,7,6,-10,8,-6,3,-6,-5,7,3,-2,9,10,-9,3,10,7,-5,8,-6,-2,-8,1,-3,-3,-8,5,-8,-1,8,4,6,-5,-6,-4,-7,3,-5,1,5,-2,-8,10,-4,4,-5,-9,8,1,8,10,2,-3,8,-4,-9,-7,5,-2,8,-2,-4,3,-6,-10,10,10,-1,-10,8,-5,-10,3,-10,6,-2,-3,9,10,10,10,8,-5,-2,2,-9,-4,-9,-4,-1,-7,1,9,5,7,-9,-7,-6,8,7,7,-6,5,-9,4,-1,5,10,4,-5,-1,10,1,-2,4,-10,-5,6,-4,9,7,1,-4,7,-6,-2,7,7,-8,9,-6,4,9,-9,5,3,10,5,4,-3,-4,-7,5,-1,1,-6,2,10,10,-6,-9,-6,-2,-2,-2,-7,10,-9,8,-9,-1,5,4,5,-7,8,10,3,-4,-8,-2,7,9,-8,-6,-5,9,-8,-7,7,-2,8,-9,-3,7,-3,8,-10,4,1,4,-4,-8,-8,-5,-7,-9,10,5,3,9,-3,-4,2,-3,-7,-3,-2,7,-3,4,-1,4,-1,9,3,9,-4,10,-2,-3,10,4,-4,-1,-3,-5,-7,10,-10,-3,-6,10,7,6,-5,-2,2,8,-7,2,-5,6,8,2,-4,10,1,-10,1,10,4,2,8,-3,-10,-6,-2,7,-8,-7,-7,-4,6,-7,-9,-3,-10,10,-7,-2,-6,2,-1,-9,9,3,10,4,-9,-4,-7,3,6,-5,8,9,-6,-3,9,7,-5,-4,6,-4,-9,7,-7,-5,-6,5,-8,8,-3,-2,-3,2,9,-5,-6,-2,-7,-2,1,-7,-8,1,-7,1,-1,4,-3,-4,-4,9,-9,-4,-2,-3,4,10,-2,-9,3,9,-4,-10,1,9,-6,-3,1,-1,6,6,4,3,10,-7,1,-8,2,1,-3,-7,1,2,-9,-5,-9,-4,-8,10,-8,-10,6,-1,-6,-2,-3,8,8,5,6,-4,-2,7,5,7,-8,-2,7,-3,-8,-3,-3,-6,-4,-2,-3,-3,-5,5,8,5,1,10], dtype = "uint32")#candidate|9027|(936,)|const|uint32
const_9028 = relay.const([True,True,False,True,False,False,True,True,False,False,False,True,True,False,False], dtype = "bool")#candidate|9028|(15,)|const|bool
const_9029 = relay.const([0.699898,-2.275960,6.940280,-1.955066,3.377060,7.149537,-2.413506,8.736310,4.679926,-3.832720,4.574062,7.307678,-7.765114,-2.340180,-8.322801,3.757773,4.125170,-7.901713,8.744742,8.850958,1.296961,-9.322829,6.874444,4.945586,7.950474,4.747111,6.204694,8.577081,8.400270,0.520418,9.777696,-9.206477,-2.378822,1.497059,7.365341,-3.168549,-4.699233,-5.705738,-1.499127,-1.145146,-9.220582,-6.835219,9.123142,9.083845,-6.655918,-8.062281,-2.681025,-5.628933,9.903731,-8.043675,-9.868212,3.210806,-0.327661,2.060322,-6.790403,-5.779865,5.828487,-3.072558,-0.945299,3.098261,-0.262819,7.644787,-6.780362,7.216545,2.970307,-7.331166,-0.924498,-1.977211,-1.973829,0.431622,-1.360531,6.466569,6.374301,-6.192402,5.662922,-0.955638,1.512574,-5.704361,9.549423,-6.334050,-0.346873,-8.477345,-6.020707,9.162845,-3.905675,2.791387,-3.544426,-4.904778,-2.940246,2.667240,1.130545,9.214478,7.268666,-8.017890,5.131853,-7.251301,-8.313350,-4.781632,2.580969,4.194819,6.172234,-5.430290,6.531659,8.983702,2.661529,5.930673,-2.558712,-0.697879,7.846994,-8.520376,9.762296,-1.521900,8.778432,-8.328218,-1.585638,1.808879,7.585826,4.555006,-1.149299,-5.849424,5.127378,-7.515963,5.603312,-8.968173,-4.102706,6.609770,2.098311,0.120530,2.503481,7.480514,6.454147,3.705750,7.340862,3.645658,7.344673,5.721652,9.951587,-1.420718,-0.949940,6.811584,0.088663,-5.080211,-2.653374,0.774611,-0.400903,5.641356,5.734004,-3.673993,8.234152,8.760869,3.957744,-9.646953,-5.933110,0.287744,9.347623,0.351392], dtype = "float32")#candidate|9029|(156,)|const|float32
var_9030 = relay.var("var_9030", dtype = "int64", shape = (840,))#candidate|9030|(840,)|var|int64
call_9026 = relay.TupleGetItem(func_4879_call(relay.reshape(const_8936.astype('uint32'), []), relay.reshape(const_9027.astype('uint32'), [12, 6, 13]), relay.reshape(const_9028.astype('bool'), [15,]), relay.reshape(const_9029.astype('float32'), [156,]), relay.reshape(var_9030.astype('int64'), [840,]), ), 1)
call_9031 = relay.TupleGetItem(func_4885_call(relay.reshape(const_8936.astype('uint32'), []), relay.reshape(const_9027.astype('uint32'), [12, 6, 13]), relay.reshape(const_9028.astype('bool'), [15,]), relay.reshape(const_9029.astype('float32'), [156,]), relay.reshape(var_9030.astype('int64'), [840,]), ), 1)
output = relay.Tuple([bop_8938,const_8963,bop_8983,call_9001,uop_9004,call_9018,call_9026,const_9027,const_9028,const_9029,var_9030,])
output2 = relay.Tuple([bop_8938,const_8963,bop_8986,call_9002,uop_9004,call_9019,call_9031,const_9027,const_9028,const_9029,var_9030,])
func_9032 = relay.Function([var_8937,var_9030,], output)
mod['func_9032'] = func_9032
mod = relay.transform.InferType()(mod)
var_9033 = relay.var("var_9033", dtype = "int16", shape = (8, 8, 4))#candidate|9033|(8, 8, 4)|var|int16
var_9034 = relay.var("var_9034", dtype = "int64", shape = (840,))#candidate|9034|(840,)|var|int64
output = func_9032(var_9033,var_9034,)
func_9035 = relay.Function([var_9033,var_9034,], output)
mutated_mod['func_9035'] = func_9035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7582_call = mod.get_global_var('func_7582')
func_7583_call = mutated_mod.get_global_var('func_7583')
call_9037 = relay.TupleGetItem(func_7582_call(), 0)
call_9038 = relay.TupleGetItem(func_7583_call(), 0)
output = call_9037
output2 = call_9038
func_9039 = relay.Function([], output)
mod['func_9039'] = func_9039
mod = relay.transform.InferType()(mod)
output = func_9039()
func_9040 = relay.Function([], output)
mutated_mod['func_9040'] = func_9040
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9041 = relay.const(10, dtype = "uint16")#candidate|9041|()|const|uint16
var_9042 = relay.var("var_9042", dtype = "uint16", shape = (10, 1))#candidate|9042|(10, 1)|var|uint16
bop_9043 = relay.bitwise_and(const_9041.astype('uint16'), var_9042.astype('uint16')) # shape=(10, 1)
output = bop_9043
output2 = bop_9043
func_9056 = relay.Function([var_9042,], output)
mod['func_9056'] = func_9056
mod = relay.transform.InferType()(mod)
var_9057 = relay.var("var_9057", dtype = "uint16", shape = (10, 1))#candidate|9057|(10, 1)|var|uint16
output = func_9056(var_9057)
func_9058 = relay.Function([var_9057], output)
mutated_mod['func_9058'] = func_9058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7891_call = mod.get_global_var('func_7891')
func_7892_call = mutated_mod.get_global_var('func_7892')
call_9104 = relay.TupleGetItem(func_7891_call(), 0)
call_9105 = relay.TupleGetItem(func_7892_call(), 0)
output = relay.Tuple([call_9104,])
output2 = relay.Tuple([call_9105,])
func_9116 = relay.Function([], output)
mod['func_9116'] = func_9116
mod = relay.transform.InferType()(mod)
mutated_mod['func_9116'] = func_9116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9116_call = mutated_mod.get_global_var('func_9116')
call_9117 = func_9116_call()
output = call_9117
func_9118 = relay.Function([], output)
mutated_mod['func_9118'] = func_9118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9039_call = mod.get_global_var('func_9039')
func_9040_call = mutated_mod.get_global_var('func_9040')
call_9119 = func_9039_call()
call_9120 = func_9039_call()
output = relay.Tuple([call_9119,])
output2 = relay.Tuple([call_9120,])
func_9126 = relay.Function([], output)
mod['func_9126'] = func_9126
mod = relay.transform.InferType()(mod)
mutated_mod['func_9126'] = func_9126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9126_call = mutated_mod.get_global_var('func_9126')
call_9127 = func_9126_call()
output = call_9127
func_9128 = relay.Function([], output)
mutated_mod['func_9128'] = func_9128
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9129 = relay.var("var_9129", dtype = "float64", shape = (7, 6, 7))#candidate|9129|(7, 6, 7)|var|float64
var_9130 = relay.var("var_9130", dtype = "float64", shape = (7, 6, 7))#candidate|9130|(7, 6, 7)|var|float64
bop_9131 = relay.maximum(var_9129.astype('float64'), relay.reshape(var_9130.astype('float64'), relay.shape_of(var_9129))) # shape=(7, 6, 7)
uop_9150 = relay.atanh(var_9130.astype('float64')) # shape=(7, 6, 7)
output = relay.Tuple([bop_9131,uop_9150,])
output2 = relay.Tuple([bop_9131,uop_9150,])
func_9198 = relay.Function([var_9129,var_9130,], output)
mod['func_9198'] = func_9198
mod = relay.transform.InferType()(mod)
mutated_mod['func_9198'] = func_9198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9198_call = mutated_mod.get_global_var('func_9198')
var_9200 = relay.var("var_9200", dtype = "float64", shape = (7, 6, 7))#candidate|9200|(7, 6, 7)|var|float64
var_9201 = relay.var("var_9201", dtype = "float64", shape = (7, 6, 7))#candidate|9201|(7, 6, 7)|var|float64
call_9199 = func_9198_call(var_9200,var_9201,)
output = call_9199
func_9202 = relay.Function([var_9200,var_9201,], output)
mutated_mod['func_9202'] = func_9202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8439_call = mod.get_global_var('func_8439')
func_8441_call = mutated_mod.get_global_var('func_8441')
call_9260 = relay.TupleGetItem(func_8439_call(), 0)
call_9261 = relay.TupleGetItem(func_8441_call(), 0)
output = call_9260
output2 = call_9261
func_9278 = relay.Function([], output)
mod['func_9278'] = func_9278
mod = relay.transform.InferType()(mod)
output = func_9278()
func_9279 = relay.Function([], output)
mutated_mod['func_9279'] = func_9279
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9349 = relay.var("var_9349", dtype = "int8", shape = (11, 4, 8))#candidate|9349|(11, 4, 8)|var|int8
var_9350 = relay.var("var_9350", dtype = "int8", shape = (11, 4, 8))#candidate|9350|(11, 4, 8)|var|int8
bop_9351 = relay.less_equal(var_9349.astype('bool'), relay.reshape(var_9350.astype('bool'), relay.shape_of(var_9349))) # shape=(11, 4, 8)
func_2771_call = mod.get_global_var('func_2771')
func_2773_call = mutated_mod.get_global_var('func_2773')
const_9378 = relay.const([True,False,False,False,False,False,False,False,False,False,False,False,False,False,False], dtype = "bool")#candidate|9378|(15,)|const|bool
call_9377 = relay.TupleGetItem(func_2771_call(relay.reshape(const_9378.astype('bool'), [1, 1, 15])), 1)
call_9379 = relay.TupleGetItem(func_2773_call(relay.reshape(const_9378.astype('bool'), [1, 1, 15])), 1)
func_5662_call = mod.get_global_var('func_5662')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_9388 = func_5662_call()
call_9389 = func_5662_call()
func_2771_call = mod.get_global_var('func_2771')
func_2773_call = mutated_mod.get_global_var('func_2773')
call_9390 = relay.TupleGetItem(func_2771_call(relay.reshape(const_9378.astype('bool'), [1, 1, 15])), 0)
call_9391 = relay.TupleGetItem(func_2773_call(relay.reshape(const_9378.astype('bool'), [1, 1, 15])), 0)
output = relay.Tuple([bop_9351,call_9377,const_9378,call_9388,call_9390,])
output2 = relay.Tuple([bop_9351,call_9379,const_9378,call_9389,call_9391,])
func_9406 = relay.Function([var_9349,var_9350,], output)
mod['func_9406'] = func_9406
mod = relay.transform.InferType()(mod)
mutated_mod['func_9406'] = func_9406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9406_call = mutated_mod.get_global_var('func_9406')
var_9408 = relay.var("var_9408", dtype = "int8", shape = (11, 4, 8))#candidate|9408|(11, 4, 8)|var|int8
var_9409 = relay.var("var_9409", dtype = "int8", shape = (11, 4, 8))#candidate|9409|(11, 4, 8)|var|int8
call_9407 = func_9406_call(var_9408,var_9409,)
output = call_9407
func_9410 = relay.Function([var_9408,var_9409,], output)
mutated_mod['func_9410'] = func_9410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6471_call = mod.get_global_var('func_6471')
func_6473_call = mutated_mod.get_global_var('func_6473')
call_9423 = func_6471_call()
call_9424 = func_6471_call()
output = call_9423
output2 = call_9424
func_9427 = relay.Function([], output)
mod['func_9427'] = func_9427
mod = relay.transform.InferType()(mod)
output = func_9427()
func_9428 = relay.Function([], output)
mutated_mod['func_9428'] = func_9428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8911_call = mod.get_global_var('func_8911')
func_8912_call = mutated_mod.get_global_var('func_8912')
call_9481 = relay.TupleGetItem(func_8911_call(), 0)
call_9482 = relay.TupleGetItem(func_8912_call(), 0)
output = relay.Tuple([call_9481,])
output2 = relay.Tuple([call_9482,])
func_9497 = relay.Function([], output)
mod['func_9497'] = func_9497
mod = relay.transform.InferType()(mod)
mutated_mod['func_9497'] = func_9497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9497_call = mutated_mod.get_global_var('func_9497')
call_9498 = func_9497_call()
output = call_9498
func_9499 = relay.Function([], output)
mutated_mod['func_9499'] = func_9499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9278_call = mod.get_global_var('func_9278')
func_9279_call = mutated_mod.get_global_var('func_9279')
call_9506 = func_9278_call()
call_9507 = func_9278_call()
func_182_call = mod.get_global_var('func_182')
func_186_call = mutated_mod.get_global_var('func_186')
const_9530 = relay.const([[False,True,True,False,True,False,True,True,False,True,False,False,True,True,True,True,True,False,True,True,False,False,False,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,False,False,False,True,False,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,True,False],[True,True,True,True,True,True,False,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,False],[False,False,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,False,True,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,False,False,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True]], dtype = "bool")#candidate|9530|(3, 132)|const|bool
call_9529 = func_182_call(relay.reshape(const_9530.astype('bool'), [11, 6, 6]), relay.reshape(const_9530.astype('bool'), [11, 6, 6]), )
call_9531 = func_182_call(relay.reshape(const_9530.astype('bool'), [11, 6, 6]), relay.reshape(const_9530.astype('bool'), [11, 6, 6]), )
bop_9534 = relay.add(const_9530.astype('int8'), call_9506.astype('int8')) # shape=(3, 3, 132)
bop_9537 = relay.add(const_9530.astype('int8'), call_9507.astype('int8')) # shape=(3, 3, 132)
func_2840_call = mod.get_global_var('func_2840')
func_2843_call = mutated_mod.get_global_var('func_2843')
const_9539 = relay.const([2,3,7,4,-2,10,1,-10,-6,6,2,9,9,3,10,10,-7,7,-2,-3,4,-2,-1,-3,-5,-9,10,-8,-4,10,6,-7,4,-7,7,-1,-5,7,5,5,8,8,-1,-6,-9,10,-8,-8,-5,7,7,4,-2,10,-8,7,8,-3,-4,-6,5,8,-7,6,-3,3,-2,4,5,-9,-8,8,-4,6,9,-2,-2,-10,7,8,-10,2,7,3,-1,-6,1,-6,4,-6,6,1,-8,-6,8,5,-6,-9,-4,-6,7,5,-3,-6,2,3,-9,7,-7,10,-8,3,-3,-8,7,1,3,3,-6,-4,2,-10,4,-6,-2,-6,3,-6,-6,-5,-6,8,-4,-7,1,-1,-3,-1,8,-5,6,-1,-5,-7,-1,1,-1,-9,9,5,1,2,-5,-8,2,3,7,9,3,2,-10,-1,3,6,-8,-3,-7,1,-1,6,4,-3,5,4,8,10,-8,-9,-3,-2,-7,9,1,-5,1,-6,-1,8,9,-2,8,6,-6,-7,-1,-1,-4,-10,2,-7,-7,10,2,-1,-9,-1,-8,-3,4,-5,-6,3,7,-7,1,4,9,-3,1,5,9,-5,2,1,-5,-1,3,5,9,10,9,5,7,2,-2,-6,-2,-9,-10,-10,-9,7,7,1,-7,-4,-5,4,-9,-8,3,3,6,10,4,-10,-3,4,-1,3,-6,-4,-10,-10,5,9,3,-3,-5,4,3,2,-3,5,1,-3,7,-5,8,-5,5,-2,7,9,8,-3,9,8,-4,-7,-3,2,-10,6,-4,10,6,-10,-7,6,4,8,-9,-5,-1,9,-5,-3,-8,2,1,-3,-1,-9,4,4,9,9,-8,2,-9,3,-10,10,7,-1,-1,5,-7,-2,2,-9,10,10,4,-9,-10,8,9,7,-9,4,3,4,6,3,4,10,1,1,-9,-10,-3,9,8,9,6,-9,-3,-1,1,-8,7,6,-5,5,7,2,-8,1,-9,-5,-2,-4,-7,7,-10,-10,2,-4,3,2,7,-8,-5,10,9,-8,10,-9,6,5,-10,2,-3,8,8,-5,-2,-7,-4,-2,10,6,-2,7,1,-6,8,-1,-6,6,7,-8,-6,9,-2,5,-10,4,-7,2,4,7,5,1,-6,-7,10,-5,8,8,-2,-2,5,-4,6,8,-3,-1,4,-2,-1,-5,-4,-7,2,-2,10,9,-1,-8,1,8,5,-4,1,9,-7,-3,5,-5,7,5,5,-5,-9,5,10,-5,1,4,-7,6,-9,7,10,3,1,-5,4,-3,2,4,-9,7,-8,4,3,-1,8,6,-2,-5,1,-9,9,-7,-10,-3,9,1,-2,-5,6,7,6,3,-6,-4,8,1,5,-8,-8,4,-4,5,1,-1,7,-10,-5,2,-1,8,10,-7,-7,2,6,5,4,-6,-1,1,-6,1,-3,-3,-1,-4,-10,8,3,-5,9,-1,-1,5,3,-9,6,-2,-5,3,-8,7,-7,-7,8,-1,3,7,8,-9,-7,-4,10,-3,-3,-1,5,-8,6,3,9,-8,-6,10,8,-7,-8,9,6,-3,10,7,5,-6,-3,4,10,8,-8,10,-10,2,-5,-5,4,-10,-3,10,4,-8,2,3,-5,-10,1,-10,6,-8,6,-3,-1,-5,-10,2,-10,5,4,5,-8,2,-4,2,-6,-2,4,-3,8,9,4,4,-6,5,6,9,5,-5,6,9,-8,6,-6,-4,8,4,9,-5,8,4,10,-10,-7,-1,4,8,-1,-1,3,1,3,5,-5,8,10,9,-7,4,8,8,-7,4,-1,5,2,-7,-5,-8,3,-6,-10,-5,-6,1,-6,3,-7,1,2,2,-6,-1,-9,1,-9,-7,2,3,10,-9,7,10,-1,-10,9,-8,-10,3,-2,-3,9,-7,1,8,-8,-8,3,6,8,-8,9,1,-7,-1,7,9,4,-9,-9,-6,6,-1,1,2,7,-8,5,8,-4,-4,-4,8,-10,3,-6,6,3,10,7,5,3,10,3,-4,6,-7,-1,-8,-4,10,-10,-1,-6,-6,6,-8,-5,8,6,-2,-8,-5,-3,-9,6,6,-10,8,1,-10,7,5,8,-7,-5,-9,7,-3,-10,9,4,1,-6,9,-7,4,8,-4,-3,1,2,-1,5,-1,-6,3,8,3,5,1,10,-5,-3,5,2,3,5,2,8,6,-4,6,-5,5,-1,-1,2,-1,7,-2,-1,2,9,-9,9,-2,6,-6,5,10,-10,8,9,6,5,-4,2,-4,3,-7,9,-5,5,6,3,-7,7,4,5,1,-7,-6,-2,-8,-4,-5,-4,7,-2,-3,-9,9,-6,-1,2,-10,-6,7,-7,-2,2,3,10,9,-5,8,-3,-1,7,-1,-1,-7,9,4,1,-4,-5,-10,7,6,2,-7,8,-5,7,5,10,6,8,-3,7,-3,-4,-5,4,4,-5,10,-8,-2,4,-4,9,-2,-1,-5,2,-1,3,-9,9,-1,-4,-10,8,7,9,-6,1,-5,-5,-1,10,-5,-7,-8,-10,1,-1,-8,4,3,-9,2,-9,2,-7,2,4,8,4,8,-6,7,1,-6,-1,8,10,-9,5,2,4,-1,3,-2], dtype = "uint64")#candidate|9539|(980,)|const|uint64
const_9540 = relay.const([-4.105757,3.752168,-0.957385,8.216631,6.544939,-6.367491,5.614432,-8.256615,9.382980,2.093666,-0.094201,4.611752,8.499108,0.168278,7.850360,3.985129,-3.444865,4.599233,8.973011,7.493747,-6.941198,3.727662,5.663088,-7.811618,-7.547984,-6.114129,-2.254534,9.562060,1.120175,8.918369,7.235856,2.576069,8.106870,-8.799098,1.503572,8.251194,5.309821,4.889047,-4.277773,5.931330,2.719169,3.450124,1.316913,0.244994,3.484943,-4.728770,4.998885,-0.386813,-0.785914,-6.502666,-2.504665,0.231537,-4.009096,5.945802,3.168471,0.178601,-6.077310,-0.494255,7.093178,-8.596708,-6.390504,7.015293,-1.189886,-3.098595,-1.742347,-5.645224,-8.863735,-6.049065,-3.400204,-7.217915,-0.813474,-0.122797,-3.231249,6.720099,-2.029579,9.605924,-2.472181,3.283907,-0.254616,5.968925,-7.040941,-7.264498,-1.196513,5.705236,-6.568840,-7.590830,7.668702,5.277330,7.483693,7.135708,-1.651357,0.346740,0.325985,-1.900041,-0.730994,-0.104769,3.087721,-0.742290,7.908681,4.931129,0.851579,-0.326990,-8.965571,-1.783290,-5.293508,-7.028072,-3.332468,6.850860,-8.934032,-4.004878,-3.824200,8.922747,7.007670,3.832182,1.608417,-2.539311,-6.482305,8.219946,-7.244540,-5.628024,1.628105,4.970714,-4.079923,7.766039,-2.134979,-5.985357,-0.726115,3.475404,3.258839,-9.856312,0.002430,8.061139,5.222986,-1.495072,-4.051317,3.098616,6.426151,-6.284036,9.704165,-8.945787,8.235716,-9.467254,-0.240963,8.130579,-5.502455,-5.859640,-0.044384,4.943139,-3.090098,7.400086,3.941644,-2.598387,7.711529,-6.381663,-7.581461,1.941500,6.485853,0.516122,4.209277,2.521128,-2.980601,5.706492,8.354019,2.494015,-9.833690,4.387701,5.658626,3.450545,-4.733880,3.366080,-7.052013,-2.281924,0.580624,-3.017006,-5.804590,-7.788526,6.042905,1.271020,6.361907,7.568538,5.573934,3.593227,-4.895998,4.942657,-8.204131,-2.330502,4.436896,6.761740,-9.052344,2.216727,7.466195,-1.935218,3.670935,-6.173053,-9.173695,2.292924,-8.020385,-2.512575,9.771599,3.967318,-2.964537,-4.308878,-6.480974,-8.621978,3.799697,0.553938,-0.133442,-7.249419,2.524969,-5.991229,-9.401468,0.848184,-4.020246,0.634654,2.059890,2.172252,-1.733424,-2.842217,0.558121,-9.483431,-0.800220,-4.397970,2.567514,1.767206,0.966346,-5.262990,9.080448,-5.258870,4.926206,0.594075,-9.603748,-5.857903,-9.328943,2.011961,-4.233766,5.778537,8.513492,8.258232,-3.844290,5.179458,-3.184899,1.262750,1.288322,6.296831,5.227813,8.894528,4.519432,8.498865,-3.983715,-0.613545,-0.046179,-6.501370,9.441024,-2.513648,-7.604511,3.609771,8.324984,-8.530551,-5.703576,3.683085,-2.145135,0.196881,-6.887643,8.581408,2.007899,3.754889,3.317727,0.591069,2.892113,-6.874613,5.174329,-8.336185,-4.108407,7.156230,-5.297434,1.753418,6.469158,3.922462,7.171619,5.046408,-4.640571,-8.789976,-4.541796,-8.841501,4.411841,8.618555,-4.931498,7.659648,-6.173834,0.466290,4.862042,7.893068,4.372961,-6.911333,9.677757,9.919363,1.718684,-3.166418,7.740950,1.384474,6.521500,3.044663,4.591990,1.764704,7.064836,-6.776352,7.382701,0.063169,-6.157358,8.292249,5.933937,7.349083,-7.410741,-1.832964,-2.227344,-7.897430,-4.518147,1.523872,-2.417569,0.755281,1.384322,-0.038512,8.963033,5.886681,0.730524,-6.686532,4.889446,6.730188,4.194191,8.162736,-6.433022,6.480670,9.108756,-2.441618,3.491157,4.520346,1.531833,3.925260,-5.771963,5.975565,9.962648,-9.695941,8.926384,-4.848104,-9.196089,3.155609,6.267638,5.523070,8.902236,-4.694821,-3.843124,-8.009029,8.830715,-7.816515,-6.523398,-8.438524,6.969719,3.739285,-0.436210,5.112664,4.432059,9.077904,-8.184171,-5.079398,-3.607485,-8.574890,-6.630346,3.722148,4.396822,0.107524,2.049313,5.772476,6.568859,0.717010,2.416477,-5.800498,6.224110,5.712249,-7.118136,-6.878164,5.369015,3.607861,8.972993,7.631698,9.834386,-7.820693,-3.506362,0.582991,-1.006874,-8.367315,-9.527437,2.230949,-9.445039,9.423253,-0.255949,-6.111478,-5.257595,9.797705,-7.249541,-5.289151,-4.464202,-8.170682,6.695621,-4.855239,-3.382596,4.483932,9.499459,8.522020,6.915061,-2.969573,-2.567355,0.964458,0.401324,-4.108271,-2.590206,4.057092,4.221886,0.603423,3.475667,9.266537,-4.659605,-1.469722,8.831274,-3.628920,-8.953311,-1.375456,8.355774,-3.867183,-1.742303,-1.423340,8.371478,9.146425,3.446062,9.682187,-1.087963,-4.323949,8.907657,-7.181934,-4.481515,-2.510465,-0.218225,5.841659,-9.518291,-4.340720,-0.289873,6.606504,-4.799317,4.073800,-9.896184,-5.197025,8.821625,9.415831,-7.614995,5.984711,-9.053801,6.063960,-3.723203,-9.601258,-1.496066,8.689725,6.298274,1.082732,-7.155781,3.435211,3.300690,1.249571,7.035151,-4.775090,1.038283,-8.491163,1.317792,-4.846543,0.811349,-5.573194,6.547786,-2.129107,9.017274,-9.926415,-0.859152,-2.168401,2.193061,-0.913179,-9.802194,-0.397423,-9.156329,-6.559578,5.286470,2.849869,9.078045,-5.948805,-6.029538,-0.124637,-1.647179,8.470670,-2.484602,1.833363,0.760933,-5.707941,-1.279125,8.633911,-6.118200,-4.727021,-1.174586,-5.155737,6.203611,-8.684115,7.751904,4.401964,8.565487,6.564330,-6.275643,-6.374611,-5.847780,-4.006149,5.057683,-5.291178,6.978486,6.017375,-5.802532,6.537603,0.193438,3.173117,-2.190100,-0.643054,8.604991,-9.493911,-6.758489,-3.837310,7.993523,1.412401,-1.486856,-0.825031,-2.266728,-8.901949,0.567617,5.549561,9.835738,-5.476963,1.391019,-5.784751,-2.047250,2.406425,6.791447,9.126064,-6.839208,2.671954,-9.702016,-2.983280,-5.967199,-9.756009,-7.462564,-9.457272,-8.941643,-6.563960,6.002409,5.605968,6.776966,6.656735,-6.406351,2.685874,2.303206,6.581370,5.779090,4.047702,-2.594876,5.441829,7.094585,4.868745,-8.341445,6.590879,-4.936805,3.039638,3.610055,-2.383348,-6.964260,-5.129618,-6.385682,2.634655,2.162698,5.014319,-7.324388,8.041512,-9.895075,-6.761093,-3.078243,4.850255,-6.318865,-3.340371,6.072661,9.871837,-7.776049,6.943839,6.179233,-1.276716,0.952871,9.990151,5.583044,5.481579,2.979777,-4.686483,-5.664150,-8.129322,5.031467,-2.930738,9.455533,-9.630711,-9.000090,-4.171497,-4.359721,-5.508740,9.869290,-9.756864,-7.284922,-5.843743,9.996252,7.651711,-4.336103,-6.646772,-4.928580,-7.156381,-4.019997,-1.685506,8.116324,-8.557412,3.071452,8.237231,-9.859007,2.850923,-4.391272,-4.377866,7.012173,3.903413,3.637730,7.999585,-0.865840,6.200670,-4.731257,9.331230,6.457479,1.024939,9.815895,5.301682,-0.041583,-3.576388,-1.225938,-8.486651,5.393120,-2.467343,0.375300,-3.972085,1.341356,-8.829333,6.082134,7.389439,-8.271412,-5.625196,-4.489563,9.154080,-6.134196,7.023891,7.757228,-3.148829,4.035285,7.181321,-6.099395,-9.854284,-4.953643,9.424420,2.426493,-5.169906,-7.227166,6.253603,-3.955120,7.093408,-8.446839,9.287695,3.691251,-1.591221,-7.374192,7.786741,-8.418215,8.286632,8.262298,-1.473024,8.462217,-7.404222,7.541493,-4.263523,-2.023318,3.176954,-7.240144,-5.576435,-0.640453,-1.380798,3.546581,-3.336315,-8.381526,-6.224432,-1.323665,-7.051391,2.042736,3.811075,-3.813448,-1.855437,-1.884289,8.998713,-6.811317,-4.048814,3.594310,-9.895523,-5.814283,-5.409840,-6.705882,-3.642276,2.422484,-3.826387,8.469749,-1.545106,-3.496990,9.111098,-5.836535,6.759135,-6.112609,8.511066,1.850328,-0.088960,-9.936556,-7.595461,8.702194,-6.423275,8.673314,9.525813,-5.251361,-3.386163,-9.271074,3.166289,-3.279644,-5.392052,-6.952083,-6.946483,8.419562,-7.032436,3.952853,-6.296058,9.796521,-7.290835,0.240109,-9.983257,6.665371,-8.170591,-9.098683,-6.766736,5.401169,2.010641,-8.919636,2.561208,7.641029,-8.949894,-3.639704,5.363928,5.598274,-7.277489,-5.290500,-5.315457,2.332128,7.216183,4.090278,-5.144452,-9.298949,-7.689669,-6.276376,-1.148999,8.796220,-9.848643,6.307996,-3.141555,8.757590,-0.503257,7.277746,0.018316,4.825294,-8.813630,-1.968194,8.215686,-8.743880,-2.559292,5.897751,-7.766731,0.628429,-0.650648,0.396619,8.194495,1.851432,-3.693721,-3.198055,5.810778,-6.030709,-9.427754,6.667995,-6.170767,-8.770076,-9.048873,7.220144,-1.353544,4.473034,-4.811371,7.873916,-7.596151,6.367556,0.857096,-9.435163,5.447016,-2.941387,-9.063834,-0.438660,-3.165228,5.577447,-5.911241,8.938292,2.936617,-5.265336,7.525139,9.621453,-5.948128,-5.460921,-4.554675,9.606275,-2.569565,-4.873847,8.071838,3.871725,9.723724,-2.942503,7.494551,-0.770434,-1.272133,-2.174021,6.943106,0.152889,-6.040040,5.014757,8.606500,6.155066,3.382842,-1.333607,-0.257143,-6.968149,-2.075484,8.060055,-2.984301,-7.555686,-4.408694,4.007064,-9.634474,-3.009607,-0.513096,8.584600,-7.430576,5.685008,-1.534536,-9.695029,3.545847,-1.973812,5.989874,-8.689245,-9.051691,-0.945038,5.778332,-9.375889,9.357037,8.247623,-4.964073,3.291160,1.802018,-8.991871,-2.585336,-7.766478,7.812554,5.059879,-2.528329,0.877340,-1.541952,-4.713255,9.458486,2.338396,9.236997,-1.783447,9.513293,-7.945208,8.256662,6.532360,5.754494,2.637418,-3.561032,8.670285,-7.985432,3.492620,-3.499236,9.122307,-0.681388,-8.071132,2.944271,-2.484066,-0.699052,4.263831,1.396548,8.754586,-4.164757,-2.065245,8.184377,4.397218,-1.547793,-6.703061,-4.495243,-5.421775,-9.235739,-2.446054,8.866818,6.399162,8.569524,9.879499,4.181636,5.498496,-2.193198,-6.499192,7.940720,8.723749,8.671313,6.006793,4.374806,-1.197627,-9.747940,5.202088,1.220957,-2.765126,9.736840,-4.779354,-7.802119,-3.153177,5.118531,1.568734,9.542291,-8.153106,-7.982450,-9.134455,4.692764,-4.203993,-6.383403,5.914314,-4.879250,-5.799425,-1.701888,-4.995098,5.005979,8.071083,2.423932,9.586646,5.112549,7.540754,4.493478,-2.216626,9.397114,9.687896,-4.975140,0.706927,-6.873187,8.778315,-0.793207,3.993530,-0.911108,-9.008785,0.276073,-4.290331,6.506927,8.890626,-7.773068,5.484158,-7.158934,6.525454,-4.749271,6.148052,-5.633279,5.902694,-8.301905,-1.993817,0.798262,-4.171640,9.217192,5.246145,5.317556,6.245055,-5.422520,1.837813,1.184053,-8.829925,5.585913,-2.065704,-4.202943,4.661456,3.279902,0.212750,-8.288229,9.019307,7.610184,2.009700,7.434421,-3.805106,5.849763,-9.351380,-2.017744,-9.517729,-5.934433,2.226810,-8.488897,6.178089,3.657707,-8.118396,5.171667,6.774799,4.577608,7.465937,7.090293,-5.090329,8.228703,-5.438950,6.685090,8.283925,5.473516,-8.987517,3.567786,6.524031,4.771277,2.491234,-8.217637,7.140268,5.135273,-9.574606,-6.673353,2.135790,-9.355764,5.350754,3.046997,3.429403,8.873682,-1.892869,-6.202420,8.301731,-4.720755,-3.995680,7.689217,-1.363583,-6.024255,-0.121715,8.536540,-1.561015,3.322965,-5.790762,-8.050063,0.046545,1.154181,5.023011,-7.731765,3.376079,9.346085,6.036657,3.601533,0.083508,-1.385434,-3.249599,6.915989,3.038585,-5.332368,4.867321,-5.636623,6.583837,6.873759,8.971655,9.579115,-3.693928,-9.073213,-7.335726,1.040210,2.785312,3.675404,2.592409,-8.618379,6.221211,-8.348233,3.915745,6.496570,0.201879,3.671727,-5.187533,4.016913,1.210516,-6.122134,-3.497677,9.960061,-6.759494,4.561556,-9.535442,-4.802140,3.228710,-2.496450,3.512224,2.358773,-7.223106,3.844424,9.683778,6.731936,-8.659074,-4.084243,5.011677,-5.803475,-6.010006,-2.888719,8.440561,-9.625829,0.971769,-2.611306,1.173051,2.644401,-7.340254,-1.045620,-8.181066,3.019197,-8.818043,5.595784,2.054373,4.644124,6.458076,-5.645854,-8.761868,0.641125,-4.449570,7.161625,8.091323,0.431199,2.668558,-3.912937,-7.740850,1.252705,2.181351,-2.230485,-4.531082,0.908172,4.703252,7.423384,-9.511043,-3.635844,-6.645948,-2.054702,-5.884359,8.583022,-3.719292,8.260221,5.577127,4.680215,8.881267,-5.478240,8.940340,-9.588296,8.355918,-2.041075,-4.574144,-7.114159,-6.816691,0.634499,7.513512,4.852139,-6.236754,-0.343109,2.451379,-4.872611,3.352325,-2.839326,-1.802449,-9.114725,-0.612903,-8.744154,9.644361,8.962430,6.546256,-3.791802,-7.512502,-3.969798,8.581674,-2.965255,-9.698129,8.189898,8.832900,-0.669825,-3.885579,-6.783680,-4.630480,-7.929099,5.034078,7.743123,-7.611829,6.388940,1.803147,0.590969,-7.451338,9.675588,-3.289335,3.595772,6.700240,-6.488298,-1.358915,-0.234209,4.452738,-6.904678,2.733338,2.189170,3.696428,-0.991486,3.289398,2.266840,6.751296,-2.652934,-5.798623,-3.579694,-7.421422,8.773420,9.889906,0.805346,-6.172608,0.858913,6.254531,3.948133,-6.586629,-1.800909,2.328296,4.539478,-7.302205,9.920845,3.893287,-5.305908,-4.531625,-3.927529,-5.591043,-3.557723,6.650009,-9.451772,-2.205323,-8.790984,9.192292,-8.766357,-8.587800,3.325039,-4.048909,8.166680,-2.016375,3.272429,-9.016771,-7.899610,9.009134,9.496982,7.270948,5.720308,-1.934205,-0.283658,-9.419284,-6.873771,-6.985880,-8.694306,-0.041025,5.720702,6.642681,1.588122,-1.038750,-2.244520,-4.791239,8.360519,1.929476,-1.774347,-7.442878,3.698409,3.313605,1.891854,-7.374786,-2.206176,-4.006383,6.178586,-8.670577,4.053276,4.923611,-9.054295,6.575486,4.231262,9.020266,-8.583077,-3.228014,-9.375019,-1.382597,7.896563,8.805154,3.811456,9.830269,-7.386438,-4.201500,4.171449,8.700186,6.449086,5.949786,-3.200615,-7.426429,-7.192517,-3.934123,6.755887,-9.653015,6.607001,-9.390142,1.049992,-1.072074,-5.613299,4.318775,-3.880117,9.807501,-8.660740,-1.560583,7.145681,2.824179,0.622540,2.331467,-5.590184,2.280248,4.493773,3.429392,-6.919229,-5.861709,-6.416521,-8.324631,4.346204,-2.272481,-6.560503,-7.627727,-7.883124,7.655785,5.971972,-2.308389,-0.701392,-0.218688,6.374322,4.421765,7.728661,-4.541096,7.076823,-7.796580,6.310506,-1.535102,2.770924,6.428968,4.258661,7.054657,9.046510,-4.676726,5.818585,-8.291341,-0.618707,-1.472846,0.052848,6.708335,6.061033,7.149634,7.007617,-1.909841,-1.861392,-4.775096,-9.242060,3.952399,5.466321,-1.875652,-9.773378,0.680443,-9.948820,-2.555290,3.091698,-4.689697,4.994257,9.348644,-2.560984,4.402906,3.715337,-3.838297,2.363826,-4.039440,7.282571,3.214661,1.314040,5.052071,7.937810,8.254117,3.513225,1.603506,-1.094151,8.795018,0.295949,0.214939,-3.169166,-9.405657,2.091989,-3.671555,0.218334,-1.768470,6.783254,-6.314091,6.044072,6.894332,-0.180576,4.679244,3.116604,9.240025,3.401623,5.335841,-7.337669,3.621625,-1.842261,-6.353223,-5.159878,-3.348332,-7.613396,-2.886914,8.384256,0.595698,-1.626561,-5.332499,1.355802,-2.304938,-6.252223,9.277542,-6.100713,2.352593,-6.260949,-0.551555,-5.898782,-0.848597,-0.945183,8.911591,-0.147475,5.042461,5.495671,-0.331692,1.748151,-9.518935,8.661932,-6.395319,-8.952918,-2.572772,0.509691,9.584542,-4.124203,1.639514,-0.424918,-1.691305,2.904304,-3.663959,1.840581,2.606644,3.347057,-4.470180,6.887416,-5.941720,-5.626455,2.399094,-4.232367,-0.583330,-7.873510,4.113531,-5.520338,-5.654636,9.332413,-2.023891,8.121213,1.606691,4.731339,8.186138,-0.109077,1.961267,3.943613,-2.996434,6.170178,-6.113194,-3.186421,8.466349,5.380976,-1.796725,-8.871032,8.587510,8.538438,-3.751169,-7.921561,4.916910,-9.473457,-8.137449,2.710579,4.539941,9.979015,5.696547,7.052611,-0.335337,-8.432463,2.005569,3.302639,-8.571443,5.781002,-5.598856,9.673502,-7.236014,-6.162888,3.706412,7.619278,-4.598728,-1.438797,4.016838,-1.845536,-0.131663,-5.229804,5.960692,-1.098259,-8.373125,8.344221,9.318797,4.251194,-6.054932,-6.664512,6.492584,-7.686855,-7.556674,0.615871,-4.630252,3.066994,-9.411240,-3.932593,-2.252549,-3.645129,-8.759891,8.302561,-4.186737,7.188115,-1.214024,-9.317470,3.433669,4.243364,9.811923,6.303526,5.488110,-0.381832,0.906597,8.419391,1.312185,-7.947045,9.709123,0.398896,-7.609153,-5.091889,7.693805,2.028458,3.354113,-4.705108,5.843657,-6.394473,2.092435,5.144729,0.574939,-7.020916,-4.539862,-8.547281,-9.464681,1.947432,-2.486693,1.537787,-3.920158,1.126186,8.965969,-7.826055,3.685633,4.978335,7.395587,4.818380,-3.659749,0.974305,4.521270,-9.535751,4.342373,-6.201838,-5.946015,2.379936,-6.956820,-7.107097,1.512218,8.559155,-6.606884,7.979150,0.027908,-6.652042,-6.014896,-6.987581,-2.113821,6.036315,-5.571759,2.422445,7.135811,6.128479,7.627173,2.258075,-8.884074,-6.314093,-6.027671,-1.250467,-7.979830,3.808035,-5.174033,-8.722682,-6.452845,-9.988187,-5.471079,2.925350,2.877671,3.172521,9.250513,2.141408,0.791423,-6.789310,7.991288,5.893243,4.948069,-6.603724,-0.499141,-0.002753,-4.277820,3.880274,9.504758,-8.651520,7.710733,3.712100,-5.514141,-8.569930,-0.192433,9.487918,8.486461,-5.283701,2.066053,-8.602143,7.051182,3.134257,-7.133925,-2.345695,1.396072,-8.250254,9.331648,3.004578,-7.966946,6.208594,-0.691243,-4.210545,-4.921094,7.191972,7.854099,6.597591,-4.980279,-7.647416,-0.150899,-0.972731,8.022773,-9.150352,3.256722,-2.530287,-2.812444,-6.128991,2.137861,-9.109855,5.820241,1.038228,-3.239177,-2.358559,5.076320,5.632872,6.242194,-2.688947,-0.396350,1.691026,-7.773590,3.650052,-6.267320,-4.687886,-7.165631,2.642658,-6.402983,-5.151790,9.999026,4.083518,8.858864,-7.252115,9.737887,7.650412,-6.908000,3.451943,-5.231578,2.897534,-8.620695,-0.468618,-7.377830,8.914008,0.756551,1.390169,-1.497897,0.241758,0.105652,-3.025074,-3.902005,-2.539435,8.420528,-9.555983,-5.260608,-1.010075,7.210080,0.758012,-0.696100,-5.246340,-3.394718,-0.550950,-1.754543,-3.648796,-0.734596,-0.753658,-0.777315,2.512625,-2.365758,-1.588105,7.964972,-1.498483,7.370821,-2.452791,-4.936676,8.891142,7.452999,3.680263,-9.019343,6.940624,-5.862455,5.224236,9.681738,-7.877771,-4.147093,-9.315392,9.929815,-0.525028,8.374081,-8.669553,9.499420,-8.478268,-8.509122,2.202972,-5.694072,6.920946,-4.090109,1.822891,2.020983,-3.205447,-9.661391,1.533107,9.840276,0.822323,-0.273814,-2.472850,9.511058,-7.022677,-1.605987,-6.678396,6.536009,6.298915,5.087710,7.359697,0.646528,-8.419195,-3.026526,5.605837,-7.790951,-1.001221,4.514949,-3.359590,-4.786683,-5.815913,-0.969560,7.748385,-5.459522,-8.734799,7.926668,-8.834310,1.677346,0.113867,-9.228935,4.155161,2.781246,3.135847,-0.939290,3.667649,9.391783,8.232564,5.961866,1.434541,6.475218,7.279390,8.825338,6.579381,-5.963047,-0.800519,-2.688191,8.540553,-3.506408,-7.774326,0.834883,6.505190,9.114123,-9.091792,4.185204,-5.679927,6.933063,2.728795,9.477468,8.958486,5.187868,-9.300921,8.532887,4.023810,-3.742467,-4.501290,-9.778175,-0.723974,-0.659424,-3.793485,-6.124396,1.714875,-9.344369,-1.865464,0.619712,3.031020,-9.880462,-9.184398,-0.520276,0.765661,9.509060,-8.244895,8.043410,1.494193,7.408807,3.647356,-5.130997,-3.441180,4.623615,-4.340826,-6.500783,-8.239697,8.268953,2.138371,-6.548925,0.961607,-6.080532,0.408677,-1.767631,-4.763119,-1.731647,-1.117248,-8.089128,0.034888,5.607496,-9.151891,-9.141892,-5.449084,-3.822488,0.008454,-8.389315,-3.962224,-2.949993,-9.238787,1.162825,-3.342232,-4.584563,-5.222553,7.834162,5.559770,-0.253952,9.388875,-4.609113,-7.607799,5.854082,7.766286,-3.522092,-5.241455,-9.346479,-4.158042,8.957136,5.012429,7.937787,-5.941700,-2.592688,4.842216,-3.862074,7.551189,7.343326,3.284415,5.008431,-9.848172,-0.789098,-7.897321,-6.690179,-5.534991,5.001820,0.375588,-1.046656,-3.731462,3.125197,8.526829,-5.077933,-6.719008,-4.035932,-0.131531,8.095667,-9.134984,6.933737,-2.276768,8.535562,-1.531038,-5.178737,9.544188,6.977426,3.706480,5.795768,-2.311911,5.166268,6.011258,-9.502472,7.708346,7.612614,-8.820537,-3.053659,-1.578689,0.036858,7.540717,-3.514085,-9.402619,-2.036439,6.837543,-2.557697,4.254414,-4.618818,-1.612741,-2.356150,-1.741133,0.129176,-3.146002,3.841734,3.100411,8.299025,7.574188,4.239831,-9.940700,4.230384,2.063483,3.721865,-2.659915,-3.719999,5.125395,-5.950847,-0.836488,-5.351292,-4.463324,3.373342,-2.167989,-7.048791,-5.443414,-3.001658,5.527636,-9.197967,4.610925,9.923023,-7.779242,-3.238333,-8.692660,5.732310,-3.718670,7.818191,-8.213048,-9.085494,-9.432777,-3.124180,-9.689707,7.991820,-1.478419,2.951134,1.184635,9.015232,-4.022043,5.833549,3.637583,8.699850,-5.170825,-6.689048,9.013155,-5.643122,2.510269,-3.875999,1.182356,2.262772,-1.676394,1.925572,4.936612,6.279231,8.054482,-5.242632,7.619714,-3.197295,-0.408904,-6.498173,-7.622911,9.937089,1.602210,0.731410,2.411811,8.224504,5.989947,-0.691465,0.770347,-2.297538,-0.360034,4.016613,-0.598604,-2.366180,-6.260055,-9.603070,5.172773,-6.439221,-7.937235,5.716615,-7.087076,6.835764,3.705218,-2.648356,4.874037,2.755651,1.399904,8.905388,7.730851,0.747649,1.024938,-6.428287,7.697958,2.673525,-6.205595,-1.817663,8.246932,8.997393,3.683562,-9.493385,-8.400366,-4.483685,-9.740476,-8.339757,9.783492,-4.070971,9.330041,7.738150,6.607243,-9.786268,4.066633,8.710649,-8.760739,-6.475538,-7.698784,-9.160113,-7.410475,2.411421,8.037502,-9.575383,1.920508,5.726023,5.606590,8.705958,3.066829,7.964903,-8.072827,-2.218824,8.023559,-5.933474,9.693668,-3.518110,-3.320369,-4.861677,5.510364,-9.556172,0.267813,-1.769710,4.205881,-6.030245,1.423453,6.255035,-9.181009,0.220313,-7.473694,5.117393,-8.458349,-4.964856,1.521677,-6.188568,5.958798,1.934687,-7.300834,-8.700000,-6.938305,9.631822,-8.660077,3.196689,-8.340429,-2.858992,3.644682,-4.285316,9.269930,-5.090004,5.518378,-8.405594,0.693759,-1.205514,0.310639,6.687416,1.550796,5.661940,-1.555387,-9.756203,8.606299,7.313199,-4.684834,9.491401,-0.465307,0.299165,-2.002461,1.802875,2.619146,-3.124212,-7.217549,-4.175368,-3.986697,4.565185,3.932423,9.295037,-6.095495,8.250439,-0.478466,-6.769858,-1.888778,-6.608494,6.664216,-3.377508,2.193781,4.706705,4.333862,3.624026,-8.411278,-5.855117,-0.111652,-0.039175,-6.188886,-1.622889,-3.237635,-9.458249,-0.853705,-2.443636,-8.594865,-6.567199,7.283837,7.494935,-6.050838,-1.145954,8.709728,-8.980910,-8.645799,-7.923220,-6.889668,4.050681,3.754700,8.432232,-5.125594,-0.985509,-0.958545,1.343881,-5.981789,-6.245227,9.038614,8.286279,4.986207,8.621392,7.314524,2.650105,-0.135621,-3.159343,-2.384770,5.035897,0.673655,4.212607,-2.029544,5.203428,2.475036,8.065450,-0.196158,6.471019,-1.526445,7.234307,-8.126379,1.956230,6.817780,-7.495552,7.905742,6.620630,4.475336,8.481062,6.776054,9.409176,-8.196776,2.842837,4.019671,9.325916,9.336150,5.759328,2.358643,-4.671509,8.039228,-8.720536,-8.457115,7.864468,-4.196413,-4.939021,-3.200287,-6.741060,-2.012631,7.220145,-0.915409,-3.965431,-9.352596,2.937783,-4.802535,-5.223258,-0.212584,6.579186,-9.639200,5.457106,3.786389,-1.125074,3.060870,-7.482634,5.545155,6.189062,-9.255923,1.695052,-6.283880,-6.800623,6.976842,-4.657369,2.206471,-0.630265,-0.544173,-3.846313,0.390108,5.981298,2.273185,5.916268,-1.952170,-4.632566,-5.230602,1.792033,-1.449492,0.102604,-6.597849,-0.052064,5.871195,-4.493058,-9.719599,1.803958,2.148870,-8.645321,7.260225,1.057143,-6.304534,-9.457309,-7.761589,2.262159,-6.063188,-3.090364,-2.544642,-1.711074,5.276958,-8.477749,-0.581672,-9.495438,-2.955833,-0.977874,-6.109316,3.714006,-7.883141,4.067942,9.571178,5.837229,9.106217,8.016618,-6.347873,-0.237297,-6.141978,7.259798,-5.929110,-3.803221,-2.717362,-7.908977,2.851739,-5.971273,-8.626863,-4.036466,-0.794311,5.449288,7.451027,-8.697722,-3.092439,8.731041,9.815054,3.405886,-1.367584,-8.158348,4.316831,0.291649,7.078344,-0.400943,6.159995,2.982580,-7.095800,-1.136196,8.881319,-2.129259,1.350341,-9.876351,-7.840411,-4.879837,-8.121006,-8.207951,-7.087511,-4.828738,7.170200,2.894923,2.214015,-9.607614,2.520846,4.380491,2.736943,-5.738579,4.757500,0.283126,4.998104,2.224463,3.663078,0.402326,0.307328,4.746912,-9.046825,-0.363411,2.403123,6.875583,1.092682,-5.813380,-5.981572,1.754749,0.410793,-2.960198,-5.063391,-7.751167,7.796810,5.029070,5.761817,1.301357,9.430418,8.133055,-8.103254,4.559996,2.752927,1.682175,7.168232,-5.371730,4.680574,6.107021,-4.363749,5.377153,1.186469,-9.035765,5.648310,-0.286463,7.152280,-3.663444,-9.290902,0.895707,0.987439,-8.878364,4.605044,4.412017,6.400136], dtype = "float32")#candidate|9540|(2400,)|const|float32
call_9538 = relay.TupleGetItem(func_2840_call(relay.reshape(const_9539.astype('uint64'), [14, 5, 14]), relay.reshape(const_9540.astype('float32'), [2400,]), ), 1)
call_9541 = relay.TupleGetItem(func_2843_call(relay.reshape(const_9539.astype('uint64'), [14, 5, 14]), relay.reshape(const_9540.astype('float32'), [2400,]), ), 1)
bop_9543 = relay.minimum(bop_9534.astype('int32'), const_9530.astype('int32')) # shape=(3, 3, 132)
bop_9546 = relay.minimum(bop_9537.astype('int32'), const_9530.astype('int32')) # shape=(3, 3, 132)
uop_9579 = relay.atan(bop_9543.astype('float32')) # shape=(3, 3, 132)
uop_9581 = relay.atan(bop_9546.astype('float32')) # shape=(3, 3, 132)
uop_9584 = relay.erf(uop_9579.astype('float64')) # shape=(3, 3, 132)
uop_9586 = relay.erf(uop_9581.astype('float64')) # shape=(3, 3, 132)
output = relay.Tuple([call_9529,call_9538,const_9539,const_9540,uop_9584,])
output2 = relay.Tuple([call_9531,call_9541,const_9539,const_9540,uop_9586,])
func_9587 = relay.Function([], output)
mod['func_9587'] = func_9587
mod = relay.transform.InferType()(mod)
mutated_mod['func_9587'] = func_9587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9587_call = mutated_mod.get_global_var('func_9587')
call_9588 = func_9587_call()
output = call_9588
func_9589 = relay.Function([], output)
mutated_mod['func_9589'] = func_9589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7728_call = mod.get_global_var('func_7728')
func_7729_call = mutated_mod.get_global_var('func_7729')
call_9601 = relay.TupleGetItem(func_7728_call(), 2)
call_9602 = relay.TupleGetItem(func_7729_call(), 2)
func_9497_call = mod.get_global_var('func_9497')
func_9499_call = mutated_mod.get_global_var('func_9499')
call_9605 = relay.TupleGetItem(func_9497_call(), 0)
call_9606 = relay.TupleGetItem(func_9499_call(), 0)
func_9126_call = mod.get_global_var('func_9126')
func_9128_call = mutated_mod.get_global_var('func_9128')
call_9627 = relay.TupleGetItem(func_9126_call(), 0)
call_9628 = relay.TupleGetItem(func_9128_call(), 0)
output = relay.Tuple([call_9601,call_9605,call_9627,])
output2 = relay.Tuple([call_9602,call_9606,call_9628,])
func_9637 = relay.Function([], output)
mod['func_9637'] = func_9637
mod = relay.transform.InferType()(mod)
mutated_mod['func_9637'] = func_9637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9637_call = mutated_mod.get_global_var('func_9637')
call_9638 = func_9637_call()
output = call_9638
func_9639 = relay.Function([], output)
mutated_mod['func_9639'] = func_9639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9116_call = mod.get_global_var('func_9116')
func_9118_call = mutated_mod.get_global_var('func_9118')
call_9646 = relay.TupleGetItem(func_9116_call(), 0)
call_9647 = relay.TupleGetItem(func_9118_call(), 0)
output = call_9646
output2 = call_9647
func_9649 = relay.Function([], output)
mod['func_9649'] = func_9649
mod = relay.transform.InferType()(mod)
output = func_9649()
func_9650 = relay.Function([], output)
mutated_mod['func_9650'] = func_9650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7762_call = mod.get_global_var('func_7762')
func_7763_call = mutated_mod.get_global_var('func_7763')
call_9669 = relay.TupleGetItem(func_7762_call(), 0)
call_9670 = relay.TupleGetItem(func_7763_call(), 0)
func_9116_call = mod.get_global_var('func_9116')
func_9118_call = mutated_mod.get_global_var('func_9118')
call_9693 = relay.TupleGetItem(func_9116_call(), 0)
call_9694 = relay.TupleGetItem(func_9118_call(), 0)
func_4113_call = mod.get_global_var('func_4113')
func_4116_call = mutated_mod.get_global_var('func_4116')
var_9711 = relay.var("var_9711", dtype = "uint16", shape = (2, 440))#candidate|9711|(2, 440)|var|uint16
call_9710 = relay.TupleGetItem(func_4113_call(relay.reshape(var_9711.astype('uint16'), [10, 8, 11]), relay.reshape(var_9711.astype('uint16'), [10, 8, 11]), ), 0)
call_9712 = relay.TupleGetItem(func_4116_call(relay.reshape(var_9711.astype('uint16'), [10, 8, 11]), relay.reshape(var_9711.astype('uint16'), [10, 8, 11]), ), 0)
output = relay.Tuple([call_9669,call_9693,call_9710,var_9711,])
output2 = relay.Tuple([call_9670,call_9694,call_9712,var_9711,])
func_9713 = relay.Function([var_9711,], output)
mod['func_9713'] = func_9713
mod = relay.transform.InferType()(mod)
var_9714 = relay.var("var_9714", dtype = "uint16", shape = (2, 440))#candidate|9714|(2, 440)|var|uint16
output = func_9713(var_9714)
func_9715 = relay.Function([var_9714], output)
mutated_mod['func_9715'] = func_9715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7667_call = mod.get_global_var('func_7667')
func_7668_call = mutated_mod.get_global_var('func_7668')
call_9725 = relay.TupleGetItem(func_7667_call(), 1)
call_9726 = relay.TupleGetItem(func_7668_call(), 1)
output = relay.Tuple([call_9725,])
output2 = relay.Tuple([call_9726,])
func_9733 = relay.Function([], output)
mod['func_9733'] = func_9733
mod = relay.transform.InferType()(mod)
mutated_mod['func_9733'] = func_9733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9733_call = mutated_mod.get_global_var('func_9733')
call_9734 = func_9733_call()
output = call_9734
func_9735 = relay.Function([], output)
mutated_mod['func_9735'] = func_9735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7891_call = mod.get_global_var('func_7891')
func_7892_call = mutated_mod.get_global_var('func_7892')
call_9739 = relay.TupleGetItem(func_7891_call(), 0)
call_9740 = relay.TupleGetItem(func_7892_call(), 0)
func_9637_call = mod.get_global_var('func_9637')
func_9639_call = mutated_mod.get_global_var('func_9639')
call_9741 = relay.TupleGetItem(func_9637_call(), 1)
call_9742 = relay.TupleGetItem(func_9639_call(), 1)
func_2771_call = mod.get_global_var('func_2771')
func_2773_call = mutated_mod.get_global_var('func_2773')
const_9746 = relay.const([[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True]], dtype = "bool")#candidate|9746|(15, 1)|const|bool
call_9745 = relay.TupleGetItem(func_2771_call(relay.reshape(const_9746.astype('bool'), [1, 1, 15])), 0)
call_9747 = relay.TupleGetItem(func_2773_call(relay.reshape(const_9746.astype('bool'), [1, 1, 15])), 0)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_9749 = relay.TupleGetItem(func_5938_call(), 0)
call_9750 = relay.TupleGetItem(func_5939_call(), 0)
bop_9766 = relay.less(call_9741.astype('bool'), const_9746.astype('bool')) # shape=(3, 15, 1)
bop_9769 = relay.less(call_9742.astype('bool'), const_9746.astype('bool')) # shape=(3, 15, 1)
func_6471_call = mod.get_global_var('func_6471')
func_6473_call = mutated_mod.get_global_var('func_6473')
call_9777 = func_6471_call()
call_9778 = func_6471_call()
func_5898_call = mod.get_global_var('func_5898')
func_5900_call = mutated_mod.get_global_var('func_5900')
call_9796 = func_5898_call()
call_9797 = func_5898_call()
output = relay.Tuple([call_9739,call_9745,call_9749,bop_9766,call_9777,call_9796,])
output2 = relay.Tuple([call_9740,call_9747,call_9750,bop_9769,call_9778,call_9797,])
func_9800 = relay.Function([], output)
mod['func_9800'] = func_9800
mod = relay.transform.InferType()(mod)
mutated_mod['func_9800'] = func_9800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9800_call = mutated_mod.get_global_var('func_9800')
call_9801 = func_9800_call()
output = call_9801
func_9802 = relay.Function([], output)
mutated_mod['func_9802'] = func_9802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7697_call = mod.get_global_var('func_7697')
func_7698_call = mutated_mod.get_global_var('func_7698')
call_9820 = relay.TupleGetItem(func_7697_call(), 0)
call_9821 = relay.TupleGetItem(func_7698_call(), 0)
output = call_9820
output2 = call_9821
func_9826 = relay.Function([], output)
mod['func_9826'] = func_9826
mod = relay.transform.InferType()(mod)
mutated_mod['func_9826'] = func_9826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9826_call = mutated_mod.get_global_var('func_9826')
call_9827 = func_9826_call()
output = call_9827
func_9828 = relay.Function([], output)
mutated_mod['func_9828'] = func_9828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6434_call = mod.get_global_var('func_6434')
func_6435_call = mutated_mod.get_global_var('func_6435')
call_9895 = relay.TupleGetItem(func_6434_call(), 0)
call_9896 = relay.TupleGetItem(func_6435_call(), 0)
output = call_9895
output2 = call_9896
func_9897 = relay.Function([], output)
mod['func_9897'] = func_9897
mod = relay.transform.InferType()(mod)
output = func_9897()
func_9898 = relay.Function([], output)
mutated_mod['func_9898'] = func_9898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8460_call = mod.get_global_var('func_8460')
func_8462_call = mutated_mod.get_global_var('func_8462')
call_10011 = relay.TupleGetItem(func_8460_call(), 1)
call_10012 = relay.TupleGetItem(func_8462_call(), 1)
output = call_10011
output2 = call_10012
func_10016 = relay.Function([], output)
mod['func_10016'] = func_10016
mod = relay.transform.InferType()(mod)
output = func_10016()
func_10017 = relay.Function([], output)
mutated_mod['func_10017'] = func_10017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9800_call = mod.get_global_var('func_9800')
func_9802_call = mutated_mod.get_global_var('func_9802')
call_10140 = relay.TupleGetItem(func_9800_call(), 4)
call_10141 = relay.TupleGetItem(func_9802_call(), 4)
func_9198_call = mod.get_global_var('func_9198')
func_9202_call = mutated_mod.get_global_var('func_9202')
var_10147 = relay.var("var_10147", dtype = "float64", shape = (294,))#candidate|10147|(294,)|var|float64
call_10146 = relay.TupleGetItem(func_9198_call(relay.reshape(var_10147.astype('float64'), [7, 6, 7]), relay.reshape(var_10147.astype('float64'), [7, 6, 7]), ), 1)
call_10148 = relay.TupleGetItem(func_9202_call(relay.reshape(var_10147.astype('float64'), [7, 6, 7]), relay.reshape(var_10147.astype('float64'), [7, 6, 7]), ), 1)
output = relay.Tuple([call_10140,call_10146,var_10147,])
output2 = relay.Tuple([call_10141,call_10148,var_10147,])
func_10160 = relay.Function([var_10147,], output)
mod['func_10160'] = func_10160
mod = relay.transform.InferType()(mod)
var_10161 = relay.var("var_10161", dtype = "float64", shape = (294,))#candidate|10161|(294,)|var|float64
output = func_10160(var_10161)
func_10162 = relay.Function([var_10161], output)
mutated_mod['func_10162'] = func_10162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7370_call = mod.get_global_var('func_7370')
func_7372_call = mutated_mod.get_global_var('func_7372')
call_10188 = func_7370_call()
call_10189 = func_7370_call()
output = call_10188
output2 = call_10189
func_10203 = relay.Function([], output)
mod['func_10203'] = func_10203
mod = relay.transform.InferType()(mod)
output = func_10203()
func_10204 = relay.Function([], output)
mutated_mod['func_10204'] = func_10204
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10244 = relay.var("var_10244", dtype = "uint32", shape = (1, 6, 12))#candidate|10244|(1, 6, 12)|var|uint32
var_10245 = relay.var("var_10245", dtype = "uint32", shape = (11, 6, 12))#candidate|10245|(11, 6, 12)|var|uint32
bop_10246 = relay.right_shift(var_10244.astype('uint32'), var_10245.astype('uint32')) # shape=(11, 6, 12)
func_8439_call = mod.get_global_var('func_8439')
func_8441_call = mutated_mod.get_global_var('func_8441')
call_10251 = relay.TupleGetItem(func_8439_call(), 0)
call_10252 = relay.TupleGetItem(func_8441_call(), 0)
func_5994_call = mod.get_global_var('func_5994')
func_5996_call = mutated_mod.get_global_var('func_5996')
call_10257 = func_5994_call()
call_10258 = func_5994_call()
bop_10268 = relay.less(bop_10246.astype('bool'), var_10244.astype('bool')) # shape=(11, 6, 12)
func_7049_call = mod.get_global_var('func_7049')
func_7050_call = mutated_mod.get_global_var('func_7050')
call_10289 = func_7049_call()
call_10290 = func_7049_call()
bop_10298 = relay.logical_or(call_10251.astype('bool'), relay.reshape(call_10257.astype('bool'), relay.shape_of(call_10251))) # shape=(3, 1, 1)
bop_10301 = relay.logical_or(call_10252.astype('bool'), relay.reshape(call_10258.astype('bool'), relay.shape_of(call_10252))) # shape=(3, 1, 1)
output = relay.Tuple([bop_10268,call_10289,bop_10298,])
output2 = relay.Tuple([bop_10268,call_10290,bop_10301,])
func_10309 = relay.Function([var_10244,var_10245,], output)
mod['func_10309'] = func_10309
mod = relay.transform.InferType()(mod)
var_10310 = relay.var("var_10310", dtype = "uint32", shape = (1, 6, 12))#candidate|10310|(1, 6, 12)|var|uint32
var_10311 = relay.var("var_10311", dtype = "uint32", shape = (11, 6, 12))#candidate|10311|(11, 6, 12)|var|uint32
output = func_10309(var_10310,var_10311,)
func_10312 = relay.Function([var_10310,var_10311,], output)
mutated_mod['func_10312'] = func_10312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9733_call = mod.get_global_var('func_9733')
func_9735_call = mutated_mod.get_global_var('func_9735')
call_10322 = relay.TupleGetItem(func_9733_call(), 0)
call_10323 = relay.TupleGetItem(func_9735_call(), 0)
output = call_10322
output2 = call_10323
func_10325 = relay.Function([], output)
mod['func_10325'] = func_10325
mod = relay.transform.InferType()(mod)
output = func_10325()
func_10326 = relay.Function([], output)
mutated_mod['func_10326'] = func_10326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10203_call = mod.get_global_var('func_10203')
func_10204_call = mutated_mod.get_global_var('func_10204')
call_10359 = func_10203_call()
call_10360 = func_10203_call()
func_2462_call = mod.get_global_var('func_2462')
func_2466_call = mutated_mod.get_global_var('func_2466')
const_10366 = relay.const(8.655546, dtype = "float32")#candidate|10366|()|const|float32
const_10367 = relay.const([1.128220,-2.557975,1.971524,-9.818683,2.572843,-8.261942,-8.997480,1.457828,-9.674914,9.322713,-4.249097,8.171777,-3.171631,1.307906,3.471688,3.664241,-8.241972,0.485883,1.049327,0.485021,5.503158,4.836631,-8.591978,8.345751,-9.324350,3.843992,-0.321999,-4.989035,4.198434,-8.116987,7.189891,2.391340,-1.794871,6.286632,3.550215,-9.823906,-2.306761,-0.242332,2.261203,-2.365140,-3.667625,-9.924928,-5.300451,6.049912,-8.753249,7.544969,8.082929,-6.061749,5.557313,9.811877,-1.819740,-2.137394,8.138145,9.645586,-8.016822,-4.010211,3.950884,-3.189262,-3.045397,-2.942588,0.353523,-0.781896,-0.770023,-6.620039,-8.774222,-9.704049,-3.163000,9.840987,7.468973,-5.922510,-2.101450,8.293523,2.945934,-7.728931,4.389740,8.989797,-4.564034,-8.470474,-7.737906,-2.811835,-5.306748,1.560556,2.742441,0.707516,3.076389,2.427800,-9.519833,-0.566071,-1.875157,6.244231,2.355626,-0.315548,-6.508305,-1.551280,-2.275784,1.820673,-9.573631,0.080713,-7.541257,-7.864345,-6.552568,0.944773,-8.162942,-7.676237,-8.282579,0.028430,-6.495527,6.338738,-7.369869,6.279055,7.700359,9.204478,7.550246,4.356869,6.649687,-9.509178,4.112743,2.688102,5.979904,-7.236528,5.846043,6.246463,-3.246300,1.290573,-5.949756,4.362599,6.313898,1.251154,0.726632,-5.479204,5.792454,-8.255310,5.739978,-1.381858,2.455300,-8.426495,-7.932626,0.071380,6.963151,2.889696,7.800091,6.290885,-4.006936,-7.053344,4.893770,-5.149727,4.983054,-6.712830,-8.754052,5.017718,2.195249,0.080972,8.495331,-6.473928,9.131096,-9.231502,-0.387744,3.867031,3.875891,-6.474206,4.239090,7.039831,8.548609,3.974983,-0.741101,-6.961644,-0.327483,-6.066829,-9.068624,-0.372961,-9.125830,-7.320838,-3.001638,8.247909,7.955393,1.901416,3.955582,7.965968,-8.920666,-8.289586,0.553584,-7.130119,-4.835859,4.758002,-2.982450,-7.217901,6.843443,6.421122,7.210536,0.852042,2.251281,5.463227,6.971546,5.041456,1.152504,-1.775552,-9.699709,-2.720068,7.017595,8.506369,-3.166957,5.483093,0.640074,5.802815,9.067366,8.038861,3.991479,1.689311,-2.877991,-7.124086,1.327434,-8.638565,-3.726550,-5.209365,0.794927,8.893269,-6.049974,2.565660,5.153506,-3.652408,3.284851,4.201143,-7.964948,1.128790,-9.187386,-7.311085,-5.873560,5.426381,8.333882,4.932037,-8.717800,-1.575793,8.809931,-7.682095,3.704748,7.652219,-9.040244,3.679646,-6.931426,1.419184,6.514854,-8.843852,9.936000,-8.855231,1.731490,3.968743,-7.228246,-0.354376,4.731734,-6.174611,9.987141,9.731856,0.128749,-2.715296,8.753847,-2.401990,0.656443,-8.516079,-1.511764,-7.330429,-0.171678,7.511912,7.453614,-2.675274,-5.511050,1.404601,3.340286,-7.856072,-5.754786,-9.874116,-4.893902,-5.249082,4.878810,-8.110939,1.741688,1.975002,-6.545563,-9.740323,9.917329,-6.662836,0.531023,6.677070,-8.148669,2.281177,6.334328,-8.334533,-6.058797,2.333497,-3.446094,-6.674131,-1.423282,8.273143,-7.514754,0.402853,7.658479,-6.289422,5.702087,6.260151,8.760843,-6.767221,-2.757376,-3.751467,4.547158,-5.330954,-7.067366,4.269399,-6.096858,5.741597,-1.305635,-2.278933,0.671188,8.368356,1.617442,-2.942047,4.101613,6.382529,-9.218780,9.992549,6.593840,1.511471,-1.952417,5.180738,0.684214,7.252211,7.726795,4.559900,-2.042099,4.883191,2.187800,-0.754298,3.876398,-2.534876,-7.911623,6.980856,0.368771,4.086794,-9.840577,5.358014,8.596868,6.582177,-0.642667,4.878093,3.291317,-1.569291,9.082445,-0.438709,-3.072813,-4.206487,-1.476799,5.170632,-8.005765,7.399252,4.891770,-1.964749,1.226424,4.680608,5.519709,0.041686,8.686865,9.095778,-0.116281,9.127359,9.156946,0.379420,-9.525142,8.027928,9.260012,3.307322,6.037956,-2.844759,7.181573,0.699802,-3.566894,-8.857172,-5.112295,-6.174054,8.503913,-9.699349,9.169538,-1.583977,-6.476639,-6.786761,-2.614849,-0.531230,-0.966363,-7.342934,-6.642307,-2.129528,-6.928557,-2.345731,-3.515592,-8.704754,7.837644,-5.043612,-5.203010,-6.126329,0.280411,1.092208,-9.606079,8.525476,-9.726899,-0.735714,8.246658,7.478004,6.304657,1.563916,1.162311,2.901601,-5.940288,3.971118,-5.665720,9.973244,0.322597,7.655938,-6.670766,-6.639258,2.590622,2.694240,8.919502,-8.158882,-6.220956,-0.792015,0.073543,-6.609461,-0.873151,3.599817,8.949181,-3.669194,5.672902,-2.271484,-6.311267,-4.839175,-3.915659,0.726933,-7.380676,-6.465272,1.379239,-2.691212,2.854641,-9.309197,3.884393,-9.765091,-5.337152,7.858406,4.044451,0.934256,-7.498463,4.030361,3.921384,-6.441173,-3.354447,-2.318047,4.793932,8.894011,-1.981929,-9.840571,1.491308,-8.626912,6.719714,0.748428,-9.725445,5.460711,-6.622258,2.747210,3.389026,8.860369,-1.502786,3.835221,4.243801,-4.014901,-2.031410,6.367421,-7.742770,9.120281,6.945317,-4.130001,3.355574,-5.549018,-9.258986,9.293142,0.686897,4.533730,-7.915458,7.339492,0.274098,5.588777,1.149723,6.474486,1.660617,8.975951,7.660859,-7.791466,2.357580,-4.241969,-8.570890,0.028942,3.098003,9.632604,1.535178,7.060786,7.871467,-4.205445,6.740344,-1.166051,-4.906757,4.173813,5.390813,-7.140974,-3.014220,-8.443483,-2.443999,-4.100030,-9.771164,-8.086342,-1.111178,2.117367,-4.916852,-7.657932,3.050627,-2.727334,9.773440,-8.420892,3.304247,4.093657,1.382171,-2.692327,-1.286274,8.888276,5.233743,-0.109109,2.211207,1.102333,-1.422204,5.053566,-1.788914,3.157787,8.022232,-4.126767,7.265253,-5.542267,9.110491,-0.107969,8.766328,-2.045274,2.542223,6.761951,-6.386463,3.058902,-0.684989,8.458221,-6.341141,-9.864065,-8.567085,2.970314,7.486166,-0.931844,-3.440045,-7.097734,7.222572,-3.543646,5.402674,3.121343,-3.943348,-3.728250,-5.303469,8.483383,0.969768,-0.844875,-3.156346,3.777019,-3.758789,-5.695835,-1.662942,-5.504644,-8.679233,7.660508,-7.649318,3.806597,7.240274,-5.547746,5.323639,-2.779433,3.187335,-2.612910,-9.225723,3.635244,-7.129735,-4.503539,-9.946456,-8.201881,4.228118,5.330503,-4.279371,7.167011,-3.624290,6.109088,3.227523,-0.839138,8.522673,1.829817,-5.456125,-9.933660,-7.827456,-9.701533,2.697434,5.226122,-1.033693,0.031245,-1.996868,-0.580398,-7.240845,-4.500746,4.892132,-9.242861,-1.231617,7.777394,4.070064,4.524163,-0.466751,-4.641186,-7.407324,-2.191226,-6.898474,7.990676,-0.789346,-9.069051,-6.115453,1.801450,9.080543,-8.556666,3.253760,7.223300,4.349662,-0.654618,-4.080734,0.285151,4.154967,2.475850,1.682403,-4.928175,-4.096697,-8.042591,6.041597,-6.590668,-4.602734,-8.816265,-7.067222,-0.737846,-5.353759,0.793015,9.953389,4.630204,4.896562,6.069298,-3.507705,-8.979061,-5.135427,3.872988,-5.017397,-9.109825,-9.891060,-1.796132,-5.848372,-6.557103,-6.390075,2.874054,-0.800166,-9.182343,2.523045,5.260537,0.379472,-6.283760,-5.265424,7.472251,-5.390476,3.226474,4.722465,6.891146,-2.572782,-6.069482,-0.541138,9.735740,9.707504,-1.725382,7.806454,-8.541976,0.502073,-0.227964,-4.957304,2.125175,3.088205,9.344826,-9.545988,5.333658,-6.286830,5.261923,4.854378,1.906590,-1.424922,-3.737052,4.415150,-9.838293,4.062677,9.545038,8.125251,-3.174422,2.395174,6.171490,5.327843,0.304159,-1.261293,-2.876165,2.484908,-1.035613,7.154653,6.522915,0.714076,4.150591,-4.768661,-1.991117,9.342844,-9.319586,-9.243977,4.356658,-9.127763,0.531619,6.390465,0.231992,-6.300563,0.708362,-9.590938,-4.188266,-1.205157,-2.384494,-0.922580,-9.836915,-3.910021,8.239813,-8.574267,-8.861190,3.373899,-6.139695,4.173908,3.294933,8.113225,6.250401,5.461240,-3.373387,2.892913,-2.112415,7.462300,-3.569584,0.331291,5.591635,-2.746422,8.536533,6.265982,-2.052427,4.654400,-3.542503,-8.225064,-1.854331,-7.671855,-0.928022,9.307198,8.216838,2.590934,-9.883275,4.896067,2.373037,1.525916,8.056460,-5.166090,0.555908,8.601911,-5.759630,9.976303,9.642734,8.864921,-9.295215,-3.494592,-9.418948,0.033681,5.401525,-2.693396,-2.012837,5.904682,-3.168590,7.911899,2.108989,-5.276501,8.307641,-9.637789,3.638526,-1.480160,-6.851394,4.941663,-5.318717,-6.490241,-0.984706,-1.395166,-2.294531,-7.380939,8.553193,5.901412,6.636159,6.843108,4.365282,2.998127,5.789890,-0.343727,2.356412,-3.116617,-0.008753,0.295962,9.775715,2.465239,9.926746,1.347188,-2.228044,7.845427,-9.512976,-3.422229,-0.843813,-4.031283,0.527629,8.043129,-2.715645,-5.015430,-6.498334,8.085640,-1.173752,-9.936485,9.551315,-3.955947,-6.260863,6.755167,-8.067496,-1.366794,8.290954,5.454730,-1.971336,4.460279,-0.719495,1.008573,1.911068,9.723464,-1.822205,4.225057,9.792385,9.173491,8.887971,-9.449019,-9.723094,-8.966794,2.758383,-0.315847,7.317103,-5.655068,6.368314,-6.596029,2.175105,-2.468987,5.133427,0.969115,-9.307829,-8.321580,8.460960,5.961157,-9.956271,0.537497,6.678911,7.032207,-2.393589,2.974116,5.044665,-1.984017,0.433233,-1.697409,9.685714,6.675644,-4.334753,4.736188,-7.272469,4.552420,7.165361,-1.386421,-8.035678,0.618301,0.873913,7.737256,-4.228674,6.273535,-9.203071,9.409321,5.370210,6.327475,-5.394329,7.597201,-8.106686,6.006808,-4.083122,-9.123665,2.995569,1.724320,-9.035824,-6.743349,-1.528488,-3.337407,1.293110,-9.827394,-0.658561,4.077993,1.477464,3.430222,4.895275,5.046092,-9.870770,0.297876,7.065474,2.499728,7.397483,-8.253183,0.159590,-8.727649,-4.224062,-6.141773,1.119808,-3.310702,-4.995603,-5.626092,-2.653497,6.991983,2.643329,3.126060,9.515316,8.315288,-3.221332,9.470693,-6.780311,-3.751927,-4.026952,-3.373961,-3.247211,-7.897632,-0.124186,2.671083,-5.586407,-7.025228,9.104372,-0.563718,-7.929852,0.070816,-2.774729,-3.920402,-0.209936,0.456148,0.123571,-3.032946,-8.503009,4.323596,7.114423,-0.241312,8.876716,-8.012468,-9.321897,-8.754812,-6.417250,2.691253,-3.642626,2.925145,-0.275921,5.191247,-7.257427,-4.440020,2.075738,-9.276354,-8.039360,-0.351356,3.919780,-8.225657,-8.002623,-0.773019,-8.171471,0.787777,9.322543,2.319264,7.316666,-0.830569,7.315422,0.557013,-0.873918,3.189409,-1.656524,-0.943934,-1.745024,9.259012,9.673273,5.872231,2.958721,-1.825011,-6.058890,-5.948440,0.054759,8.959881,6.696210,7.938649,-1.997018,-4.479110,-0.369150,-3.100945,9.757348,1.511044,3.961041,-1.761925,1.523399,-3.742216,6.600053,-1.629461,9.134648,9.669874,-5.409257,-7.055048,3.655435,4.149855,6.235489,6.774836,2.999420,-8.564057,3.551902,7.868451,9.567951,-0.196249,-6.415998,6.810818,1.276826,2.327764,9.496640,-2.897757,-5.161445,4.580711,-2.364084,7.884270,4.048374,-2.774942,-2.307430,-6.767921,2.117803,-3.525597,3.745467,4.096689,-6.776604,-9.421347,-7.763498,6.689010,-9.597499,7.531719,9.743242,-3.515218,-1.089279,4.444970,-2.931450,-2.866630,8.334372,6.464837,5.283150,7.228925,7.147223,9.047068,-2.462839,3.392587,7.649767,2.066184,0.171971,-3.901536,7.367799,-2.738037,3.989186,6.199533,-3.632905,6.162403,-5.827011,0.105233,-6.740936,3.874287,5.812109,3.296797,7.501740,4.630170,-1.507013,-2.420268,-4.382123,6.268391,-1.691521,-5.943854,5.515030,-1.570509,-0.181595,-6.042628,-8.297142,2.029751,-7.050700,5.913808,-2.408037,-9.678537,-3.082390,-3.458351,7.441572,-3.803845,-9.927458,-2.771695,-3.994681,2.766885,8.403878,8.888740,-0.297838,4.112454,3.703358,-3.102792,-4.658725,-5.783306,-1.270966,6.296332,-0.444168,8.705751,-1.700876,-9.479946,-6.339097,8.463090,3.145109,2.609139,3.671680,-5.866368,2.884170,-3.405393,7.944357,-2.890602,3.557797,-2.398689,5.844740,6.201254,4.726867,-2.145733,6.265619,2.562625,-1.506137,-5.680053,-8.873839,-7.474131,-2.993960,2.667827,2.952340,2.963474,7.738856,-3.902770,9.315447,-2.753230,-5.429235,-9.917132,-8.146392,-0.238319,-3.499616,-2.874948,-9.132577,7.939821,-4.521536,-0.063681,-6.612237,-0.727527,4.934583,9.145384,-8.438171,-2.521621,-0.034548,1.708032,-5.670430,-0.699195,-7.077281,4.075288,0.708115,2.232305,7.831655,-5.858479,9.850020,9.667871,9.039148,1.946355,-8.728666,-2.076212,-1.653591,6.364715,-1.362113,-1.662076,5.414267,5.343189,-8.845905,-6.869076,-7.956664,7.085302,7.527422,3.218593,1.213828,9.222699,-5.433535,7.087235,7.734769,7.966825,-9.635317,-5.752311,-2.113997,-2.962541,7.095467,-9.383984,9.437948,5.347005,5.059312,-4.763538,-4.507827,-6.430411,0.094506,5.057451,8.815585,-1.310007,-9.643600,5.652527,-5.817018,3.897943,-1.661369,-8.154412,-1.255045,-9.707002,-0.849531,-8.923719,-9.969893,2.493262,-0.339634,-2.739171,3.899500,7.454940,-7.493435,-5.917150,2.076549,-8.462602,-2.808134,1.807219,-2.928667,-4.748874,-4.232834,5.768139,9.771133,3.496711,-7.402232,5.581183,-4.571622,0.441946,8.794771,-9.583245,-5.084154,-7.075009,1.600928,0.764712,-5.186518,-2.232928,-7.640415,0.110469,-4.882463,-6.217298,6.472151,-4.801199,-5.119905,-0.573319,-1.960968,-0.716186,8.891913,5.038577,9.964203,-1.293222,-8.421354,-7.012928,7.147129,-9.242596,-3.352111,-2.633666,0.187305,-0.657989,-8.261468,8.348141,7.292942,7.162408,8.864638,4.328923,1.277618,-9.767346,-4.021651,4.035995,-8.377557,7.384324,-1.835189,-1.510438,-9.989673,9.595537,1.148522,8.866038,8.894947,8.426765,0.335165,4.820460,7.829460,-3.952930,-7.430661,5.217797,-3.871119,-5.241692,-7.495188,-1.488101,9.586522,8.639031,-0.738272,5.225953,-0.156438,-5.698108,0.029925,-1.315674,2.555153,-8.770955,-1.617605,9.211594,-3.391092,0.727766,-4.780308,2.839569,-1.815681,9.077752,-5.903298,-4.748246,2.686204,-4.111473,-8.733531,8.893343,-7.076492,0.649130,4.878953,1.739667,-6.207124,-9.356826,-4.619620,-3.511373,7.209353,5.085732,-5.018611,-9.302485,9.908017,-9.807772,1.089045,9.758325,9.469523,8.249881,7.856459,-3.744824,4.531753,4.579070,5.857037,-2.069109,9.907555,-1.122227,8.556344,0.818666,4.034313,-6.796560,-1.887466,-4.455643,5.308822,-9.146286,-5.911997,-4.981730,-5.223671,8.630729,-2.382002,-9.541901,-0.446401,4.173571,3.994859,-1.269709,1.464722,8.032456,-5.960106,8.286769,2.936680,0.027933,6.153452,-4.771549,8.926902,9.694537,6.716619,0.393996,-8.265433,-8.534362,4.575012,-0.556955,5.611969,-8.278161,-3.950770,5.312516,-5.386611,0.970217,1.550403,5.494287,-3.210271,-1.660987,-4.380803,7.695457,-7.376319,-6.855804,-2.768733,-6.059115,-3.523032,9.406303,4.007701,4.608659,8.250653,7.048534,-7.537746,8.435850,7.680919,-3.748730,1.922111,-4.147485,4.844149,-0.903344,3.993845,-8.905815,8.397297,-3.051464,-2.703865,-7.199398,6.905595,-7.739807,-8.883649,-5.740989,3.246236,7.689541,-5.099194,0.376274,-1.995693,0.200128,-0.413779,-9.565758,6.910159,-7.478855,-6.876107,-1.467487,-6.633955,4.502659,-7.919442,-5.024695,-3.860517,2.623581,3.455759,4.535032,-2.442810,-2.179507,-3.597306,-4.166023,0.957842,2.052746,-3.267718,3.968857,9.696979,3.578057,-9.596299,9.982784,-3.749144,6.973816,2.116777,2.408632,4.055936,2.085855,-3.386122,-5.887431,-4.195338,5.300929,4.406068,-2.231372,4.056443,-4.087256,3.851730,5.306713,-3.844693,-5.558168,4.654711,7.148421,4.931498,-1.970385,2.697150,0.800467,-3.909275,-3.205824,-6.884802,-4.344445,-5.499129,1.749272,0.906800,1.628421,-2.954685,4.169204,-9.292997,-6.805220,9.465535,7.502978,5.269824,3.510440,-6.049296,7.943500,-3.210919,-3.132840,0.835720,-3.262077,-8.119765,-1.972700,9.091256,-8.082939,0.270411,2.298119,2.967078,5.276558,-3.148123,1.370717,-8.903007,5.883603,-9.095815,8.394228,8.761059,-6.356400,-6.077432,-9.299545,2.730585,5.350367,-4.497476,5.659652,9.824275,-6.871235,7.072953,-7.498881,5.624937,-8.891743,-9.446670,0.293494,-8.271575,7.709704,-0.533977,-3.398090,6.244772,-8.146187,4.631944,9.926641,-6.144611,-1.609043,8.114043,8.981708,-1.703410,1.043660,-0.332822,-9.979596,-4.973425,6.505773,-8.709791,-4.926648,9.182981,5.732320,1.000530,1.732944,-4.326731,0.498691,5.840455,-0.928152,4.019041,-3.965811,-7.879153,-8.326693,-1.179101,-6.548113,3.964487,-1.774228,4.977048,4.092056,3.155290,8.539102,-1.356590,4.178420,2.745182,1.628026,2.917929,-5.936588,0.906913,7.153283,-8.834246,-8.838257,-1.470311,-2.761498,-9.807713,-2.722554,6.125915,2.369324,0.550727,5.495453,6.600702,3.199321,-3.201904,-2.105775,-4.397001,8.999093,7.912502,-0.708063,8.551813,-0.260997,4.111543,0.615215,-8.529019,-6.658952,1.896052,-4.061244,2.365048,-9.823171,-1.049425,8.577734,-4.009872,9.199627,-4.384434,4.687657,5.994189,7.425555,8.094143,7.753876,7.515291,5.565342,0.270620,6.075187,6.122285,-2.275825,8.069116,-1.549895,-2.562462,2.217239,0.533427,-0.303764,-5.171964,3.536082,-6.008670,6.924224,8.243300,9.127205,3.628073,0.980473,-8.967672,-3.934697,6.063573,6.251375,-5.059310,-8.589557,2.023839,-8.794676,-8.235196,4.411884,-8.039447,-6.094704,5.602657,-7.295035,3.216070,9.670654,3.064014,9.096273,-1.750453,2.255543,6.702669,1.374697,-1.676475,7.640975,2.716733,-1.219373,2.331299,0.804732,-9.331603,3.829335,4.772522,3.934070,-1.050862,0.581359,7.295663,-7.819934,-2.427042,9.435515,3.870009,6.757376,-1.237553,5.990395,6.269999,-6.374603,-0.768162,4.427377,7.969846,6.898195,2.242788,-0.595886,5.990799,1.467093,-2.757031,-6.482518,4.452168,4.767898,7.395106,-2.716018,4.196174,-6.442939,-9.936089,-4.520573,-3.231284,-9.217254,-9.116678,-7.036587,2.290624,-4.133325,3.732934,3.082260,-8.172943,-7.858444,5.499194,-5.331208,8.166625,1.708846,-5.059562,9.981366,8.095270,-8.177332,4.465779,1.275814,0.299395,-0.967973,-1.853937,2.381978,-2.702400,1.857599,-4.013833,3.364755,-3.044442,-7.658196,-9.427421,-9.046669,2.154299,0.495476,6.375902,2.181754,-8.188392,6.539614,5.309636,-0.736356,-5.585890,-7.671294,8.420791,2.839279,-8.888404,7.143169,7.087804,-1.746011,-2.446986,0.537892,-8.472031,-3.822524,9.331500,8.171995,4.171379,-3.909157,2.404351,-6.569315,-0.314626,2.741472,8.958562,7.586369,-0.618294,8.742939,-4.664412,-9.176650,3.352436,8.062426,3.110496,-6.286940,-6.907872,-3.883348,4.461156,6.322482,-1.346258,-5.014754,2.845711,5.726610,6.904822,-3.962587,5.539628,-0.248868,-9.504514,2.709139,-7.511953,-7.121242,2.334102,1.064663,3.601478,-7.224547,1.055710,-9.024891,5.111268,-8.998168,-9.833087,-6.974321,1.512207,3.742405,-5.047465,2.869963,-1.185993,-3.962143,7.844237,-2.839366,-4.094675,-6.668806,8.914423,-7.514382,-1.061344,9.703675,0.772601,8.928932,-7.200045,-5.330437,9.431002,3.176969,3.227436,0.714327,0.221377,-0.812502,7.086878,7.296400,2.551238,6.605521,-7.766243,-6.265762,-9.530365,1.677519,-6.538291,1.526072,2.833023,2.187501,-8.890520,4.016842,-7.539499,0.690566,4.984322,-1.562265,-1.043922,-3.582568,-3.091166,9.946516,-8.667109,3.589478,-3.679580,9.152672,-0.537608,8.278754,1.229888,-6.663139,-8.487177,6.722261,3.060661,-2.836883,6.196176,-8.799231,4.416136,-0.929293,-2.991282,1.962353,3.867763,5.120192,3.402825,-9.310121,6.638197,4.986573,1.463436,8.958125,-6.692716,-9.195588,0.882984,-9.057947,-6.954180,-9.274879,-4.764040,-0.266418,-0.207673,7.134938,-3.533731,5.991411,7.987426,8.727789,1.008404,0.561174,-9.543183,-9.124750,-2.573101,-2.759337,7.590897,-7.990117,-3.858339,7.913073,-1.078104,6.560480,6.103826,-7.367447,4.017892,7.297819,9.217869,-8.714188,-2.248527,4.619666,5.600622,-0.984068,-6.524599,9.354603,1.509391,-7.476946,1.796791,-9.843533,-0.434001,6.903299,-9.908927,-5.682662,9.252018,6.307470,0.419232,3.581401,-9.531348,-1.057354,-5.611551,-2.616266,-2.262663,4.699481,-2.258731,-0.935334,-0.352416,-1.083273,-9.791720,-8.906079,4.454249,-4.112250,-3.090150,-5.603530,2.607429,-9.390482,-2.995036,7.451933,4.268643,-2.753267,-5.215079,-4.896479,0.875376,2.461460,2.695748,7.994017,4.271534,-2.442293,8.788087,-9.827033,5.654856,-3.829900,0.978479,-6.397129,-9.511361,-7.516592,-7.413558,-1.173389,9.709681,3.273240,2.845450,-8.368904,-1.267413,8.078234,6.887660,-7.219502,-8.575785,-7.876580,-2.241307,-9.289435,0.655369,9.049452,1.358529,7.001604,6.016054,8.375280,-6.873852,6.821066,-4.661623,-8.184429,5.257781,-3.967924,-3.129980,9.703005,-3.931853,2.033795,7.605137,4.087272,-1.703058,7.061101,9.449579,5.127379,-2.110100,5.347306,7.947152,-0.972442,-5.529730,-3.650400,7.073573,-6.850677,7.630017,-1.640157,-4.799544,6.603763,-4.363544,3.020442,4.082235,6.673253,0.328468,3.061075,2.493697,9.167915,-0.651642,-5.657323,-3.972348,2.351643,-8.013769,-8.524515,8.983584,-0.168601,-1.423269,-5.041124,-9.801692,-9.371650,-9.320880,-6.108719,1.590532,6.421643,2.276740,-9.601298,-1.406967,9.528622,6.879982,-1.837713,3.418825,-9.345348,-7.843514,0.625635,8.398213,-0.408894,5.127724,7.576630,9.716025,6.761666,-5.477234,-8.478938,0.343470,4.221628,4.926575,-8.991781,-5.187406,-7.075289,5.122528,4.694334,5.252914,-9.243337,-0.839425,-8.635279,-4.007752,-5.346500,3.402247,-0.614306,-1.344842,7.604446,4.320590,-4.644597,-5.593640,-6.081517,0.257050,-8.492182,2.435847,9.867208,-5.959634,2.794054,2.183728,6.461226,-1.681942,-3.356280,-5.000519,-8.621090,1.708730,4.396986,-4.011836,8.684138,-6.474351,-7.384732,-1.530404,4.275811,0.097083,0.068722,6.140327,0.981238,-3.356282,-6.232124,4.217968,-7.656069,-5.429863,3.516312,4.306881,-7.167217,-0.705723,-7.657197,-2.903645,-9.626148,-2.598829,7.937176,-2.435704,-2.735157,-1.052045,9.917401,4.009953,-7.623668,-7.861097,-1.183130,-9.271167,2.861524,-4.785624,0.521566,0.978264,-0.983454,1.364083,9.620996,5.807716,0.949370,9.231155,9.496092,-0.973315,-6.351207,0.065272,9.145094,0.976053,1.737104,-6.369586,-4.561043,-3.580949,6.181018,-3.594683,1.610275,-9.581092,3.167109,-1.141507,9.829142,-0.900601,9.027885,-2.234274,4.865160,6.882808,1.195418,6.283566,1.589172,6.841623,-2.047686,-5.555251,9.677558,-2.344603,-0.357023,7.322830,5.222159,3.619063,-6.840680,1.990464,1.441757,-0.254571,-9.812437,-6.195091,3.850312,8.207376,-6.781822,3.152599,-3.960983,-1.315792,-1.582405,-0.830952,-3.493206,-5.280654,-6.751114,-7.130290,-7.800879,-3.001287,0.496187,5.656317,-7.332182,-3.227061,-6.800252,-4.902218,5.685428,0.872124,6.464345,8.136430,0.712492,-8.307311,-7.289619,8.625846,3.519278,0.386918,-3.034193,5.320283,0.936810,7.877646,9.090397,7.021270,8.644290,7.393142,-8.636205,-0.803841,-4.780897,8.678326,5.360607,-4.107871,9.479677,4.350849,-7.972611,-8.920799,-1.993550,9.828570,-3.253540,-2.076162,0.968023,-3.647627,8.388089,2.959482,3.550916,-8.460889,9.936560,3.185397,-3.591397,-8.320386,0.659031,9.774489,0.398057,3.524616,1.810810,8.993405,9.777717,-4.854847,-4.497932,8.962412,0.848334,-3.100776,-4.858629,3.181770,0.302061,4.995569,-5.833039,-0.250346,5.020841,0.875960,-4.140786,4.737679,-0.155136,-2.099742,8.674697,-3.792513,7.889765,1.101880,-5.243995,-0.500984,-7.534687,-3.726839,-3.088351,-1.915781,1.203080,-2.719265,-7.102155,3.095594,-2.242937,9.626354,7.733284,-5.876982,6.761096,-5.951990,-1.303553,0.729435,-0.500345,3.950734,-9.959035,-1.842344,-5.985908,3.373866,-4.314525,0.390041,-0.067985,-1.603236,5.120899,-0.764408,-4.704260,-1.731737,-7.233459,-1.404899,-6.335641,8.632204,7.237096,-5.955286,1.500380,7.513088,-1.825216,-0.269574,3.816587,5.199509,2.378189,6.207951,-2.148108,-3.483976,9.059039,-9.464800,-7.599274,4.232871,5.478247,3.555186,4.602279,7.876844,-2.598500,6.998173,-2.378146,-1.915644,-2.722185,-8.250232,8.616667,0.525663,9.137318,-7.451064,-3.294897,9.835211,8.168989,-3.255852,9.180383,2.559018,4.182838,-7.635439,7.799368,2.161298,-9.095245,-1.950361,-0.319363,7.925552,8.453556,3.983971,2.739600,-2.147083,-5.909244,1.520754,-7.212393,7.114337,9.361190,5.147765,-0.394199,5.381971,-3.482031,-7.349815,1.592701,-7.733017,-2.753809,-2.785644,7.531752,-2.193963,5.016742,6.025668,-4.174750,3.067647,-1.498286,-6.316029,5.968045,-5.425212,-6.158745,-3.496879,-2.718343,-0.424363,0.504037,-2.845258,6.132162,-0.421045,-4.195742,-3.097087,-2.383010,5.487196,8.428892,1.761948,0.484867,-6.154398,-2.966652,8.742643,-2.903744,4.594224,8.789168,-2.426937], dtype = "float32")#candidate|10367|(2400,)|const|float32
call_10365 = relay.TupleGetItem(func_2462_call(relay.reshape(const_10366.astype('float32'), []), relay.reshape(const_10367.astype('float32'), [2400,]), ), 4)
call_10368 = relay.TupleGetItem(func_2466_call(relay.reshape(const_10366.astype('float32'), []), relay.reshape(const_10367.astype('float32'), [2400,]), ), 4)
func_7049_call = mod.get_global_var('func_7049')
func_7050_call = mutated_mod.get_global_var('func_7050')
call_10370 = func_7049_call()
call_10371 = func_7049_call()
func_9713_call = mod.get_global_var('func_9713')
func_9715_call = mutated_mod.get_global_var('func_9715')
const_10376 = relay.const([6,-4,3,-7,-6,-6,4,-1,6,-8,1,-1,-7,-10,-2,4,2,-4,1,10,6,-4,3,-1,-7,3,8,-7,-4,3,-5,-4,6,1,-3,7,-8,-2,-6,3,3,-3,7,-6,-8,-9,-6,9,-4,1,3,7,-9,-4,1,10,1,-2,3,1,9,-4,4,-8,4,-4,-7,8,-9,3,-10,-1,-6,1,-3,3,-4,-6,2,7,-3,-5,-3,10,-7,-9,8,8,-4,-5,1,10,9,-6,-10,-7,5,5,6,9,8,10,9,-10,-7,4,7,5,-10,4,-3,6,4,-7,7,-4,5,3,-2,-9,-1,6,6,1,2,9,6,-5,-7,1,-10,2,-8,9,9,-8,-2,-6,6,4,3,-7,-9,9,7,-1,-6,-2,8,-4,-1,7,5,-2,1,2,1,4,2,-7,5,7,1,-4,3,7,-10,-1,-8,-7,1,6,9,-4,-3,-1,9,10,9,10,-3,10,-1,-8,4,-1,-7,6,5,6,-1,8,6,1,-3,-9,-9,-10,10,1,-3,8,9,5,-4,-6,9,6,-2,-3,9,3,-3,-8,1,6,4,-6,-7,-1,-4,-5,-10,2,-9,9,9,6,5,4,3,-3,-5,2,-10,3,9,-10,-3,3,7,8,5,7,-7,-9,-4,-9,-9,-1,3,6,-5,1,9,8,7,4,-1,6,-4,8,5,-5,8,7,1,1,10,-2,7,6,7,8,1,-5,6,2,-1,-10,-4,-10,10,1,-5,-10,-4,-8,6,-8,-7,1,6,-7,-2,-10,3,3,3,-5,8,3,-2,4,5,5,5,-5,9,2,8,8,-1,-3,7,-3,3,-7,-6,-5,3,3,5,-2,2,8,5,-9,8,-9,2,-10,-9,-2,-9,6,-6,-3,8,7,-9,-8,-2,-1,3,-5,-3,1,-3,-6,1,-6,2,-10,-5,10,2,8,-9,4,8,-6,-6,4,-2,-4,6,-2,1,9,-10,2,9,8,9,-7,-3,10,1,-1,-8,-10,6,1,5,-5,-10,-7,-7,6,-6,2,7,-9,8,5,-4,8,-6,-9,-10,-6,-1,1,7,-1,2,2,-5,-10,-2,7,-10,6,-6,7,-9,-10,5,8,9,-4,-1,10,1,9,7,-9,-2,4,-2,-6,3,1,7,9,9,7,-2,-7,9,6,3,4,10,5,-9,5,7,2,-7,10,-4,7,-5,1,-2,1,-10,-3,5,6,-1,7,-9,3,-8,2,-1,-10,-3,2,7,3,10,-10,5,8,7,7,-4,9,-5,-6,10,-5,-8,-10,-10,-2,8,5,10,-1,-3,-2,-1,1,-4,4,-4,8,-4,8,-1,6,4,3,9,10,4,-8,-5,-1,-5,-4,4,2,-2,3,1,-1,5,1,-9,5,-5,10,-2,-10,8,8,7,1,2,-3,7,2,-9,5,3,3,3,-9,-6,3,-2,7,5,-9,4,-4,5,1,6,-3,-6,-9,4,5,5,-6,-1,6,-1,-4,8,-5,1,-8,4,8,-2,8,-4,-5,-2,-8,4,-8,-3,-1,10,6,4,8,7,-7,-4,-4,9,-9,-10,4,5,2,-4,-8,1,-6,8,-2,-2,4,5,6,7,2,4,-3,8,4,-10,-8,6,5,-10,7,-7,9,8,3,3,-3,1,-6,3,3,-4,-4,7,-4,-8,10,-3,7,-6,-7,8,-8,7,-8,-7,4,3,4,7,6,9,3,7,-3,2,4,9,-9,-5,9,-9,5,-2,2,5,7,6,-7,-9,7,-10,1,2,-8,-6,-1,1,-9,-3,2,-10,5,8,10,2,-1,10,-4,4,9,10,-7,4,-1,6,6,-2,-2,2,-10,-1,7,-4,4,-4,10,-3,-2,-2,5,-6,-1,-3,-1,-7,1,3,-1,-8,5,-8,-5,-1,-9,10,8,-6,-6,-4,-5,-7,10,4,-7,6,6,8,-6,-6,3,-8,6,3,-6,1,9,8,10,-1,-4,-10,3,-2,10,-4,6,5,10,3,5,7,-4,3,7,-10,3,1,-9,-6,1,-1,6,8,-3,1,-7,-2,-1,4,9,1,5,7,-5,2,-3,-4,10,-4,-6,-3,-3,-5,-7,4,-4,-7,5,2,7,9,-8,8,6,3,8,5,10,-6,9,-5,3,2,8,-1,8,4,2,6,-5,-9,6,4,4,-4,-8,-7,-5,-2,-3,-5,-2,8,2,-1,2,9,6,3,3,-4,-10,-3,-8,-5,5,-1,-8,10,-3,-6,3,-3,9,8,5,3,2,8,1,2,-3,5,-4,-1,8,-1,3,1,-10,-3,10,10,-4,-2,4,-4,-7,-10,6,7,7], dtype = "uint16")#candidate|10376|(880,)|const|uint16
call_10375 = relay.TupleGetItem(func_9713_call(relay.reshape(const_10376.astype('uint16'), [2, 440])), 0)
call_10377 = relay.TupleGetItem(func_9715_call(relay.reshape(const_10376.astype('uint16'), [2, 440])), 0)
output = relay.Tuple([call_10359,call_10365,const_10366,const_10367,call_10370,call_10375,const_10376,])
output2 = relay.Tuple([call_10360,call_10368,const_10366,const_10367,call_10371,call_10377,const_10376,])
func_10378 = relay.Function([], output)
mod['func_10378'] = func_10378
mod = relay.transform.InferType()(mod)
mutated_mod['func_10378'] = func_10378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10378_call = mutated_mod.get_global_var('func_10378')
call_10379 = func_10378_call()
output = call_10379
func_10380 = relay.Function([], output)
mutated_mod['func_10380'] = func_10380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6703_call = mod.get_global_var('func_6703')
func_6705_call = mutated_mod.get_global_var('func_6705')
call_10421 = relay.TupleGetItem(func_6703_call(), 0)
call_10422 = relay.TupleGetItem(func_6705_call(), 0)
const_10432 = relay.const([[[-9.163272,7.093002,-7.451325,-3.021772,-8.176433,-0.025807,3.243324,-8.532636,-2.106415,-0.751088,5.002059,7.501140],[2.554072,-8.371485,-1.771987,-9.748841,-4.540410,5.150801,-7.320257,-8.688078,7.388208,-9.987612,-1.503313,-8.106469],[-9.017133,-7.410255,-5.792535,-4.504913,3.950450,4.048453,-4.632255,-5.645865,0.802560,5.108327,6.343820,6.128064],[0.833289,-9.876358,-0.695229,-0.937177,2.780119,-2.628474,-6.519433,8.803062,1.531992,-5.633219,6.877274,9.451662],[-4.852713,-6.900150,-2.598889,-8.760931,-7.120156,3.240021,7.760051,4.755364,5.213855,4.981265,-4.169111,0.353058],[2.166892,-2.622361,-7.514933,-8.729046,-3.519514,0.437571,-1.278118,-8.908131,-9.880003,4.239248,2.406805,-5.080667],[-9.798965,7.505369,-4.891660,-6.134892,-2.817642,-9.253652,-5.423656,7.842185,-0.486673,2.528786,6.620341,2.311465],[-9.377338,6.816665,2.018839,-9.979472,4.383290,-2.266964,-7.992331,-2.245069,3.932382,3.325599,2.790065,7.981127],[0.019778,-7.355347,-1.621078,-0.523008,-4.086966,7.519516,5.605782,2.916518,1.020370,9.657618,-9.470022,-2.000827],[-6.863461,-1.018235,-0.672212,1.617984,-7.758578,-0.713880,9.055967,5.753106,0.578009,7.138826,-3.621163,6.011144],[6.746364,5.056833,-3.438316,5.703551,-4.043743,-2.712700,3.358312,-9.969713,2.909456,4.086613,-0.578795,-9.582191],[5.448152,-6.504157,-1.085930,3.775862,-2.284065,-3.462895,-1.878434,-2.949506,6.513503,3.837378,-1.305636,-0.425311],[0.328101,0.055160,7.692004,8.918949,7.560003,-0.074885,0.674797,8.821046,3.958613,6.933165,-3.635036,-6.540712]],[[-0.987702,-6.440105,6.732327,2.683466,-2.514460,-4.010327,-6.045930,-1.395207,-5.364111,-0.865068,-4.687356,5.102350],[6.777387,3.691309,-1.564716,3.863498,-7.613021,-0.750607,-2.865423,-9.618066,-2.743436,-4.493934,-5.841296,-4.913366],[-4.994834,-5.172500,5.395219,-6.260247,-9.652850,-1.112201,5.274148,-7.215761,6.922529,9.571072,-3.200679,2.568524],[1.103230,4.951824,-6.147442,-6.309367,-6.090945,-2.784903,-8.581346,-8.379304,-7.660206,-3.817456,-1.165525,9.975437],[3.186320,-3.635680,-1.537632,-7.655776,3.109270,6.996798,6.500333,-8.782667,0.879478,5.255185,9.037421,-0.915783],[-0.681437,2.488946,3.458416,0.864848,-7.286947,-5.771841,7.231180,-4.476788,3.655352,-1.068997,9.321662,-4.388759],[3.879502,-6.456797,-4.378295,1.548031,9.440304,9.574985,2.813661,4.279567,-4.108644,0.606110,-6.597703,6.314354],[1.532266,9.296988,-8.528513,6.453386,9.563485,2.485452,4.502644,0.662118,9.929298,6.437307,4.817929,-2.068834],[3.160221,8.403675,1.232803,7.956248,-3.510535,2.523227,-3.530255,6.019551,8.931765,7.515241,6.539384,9.522279],[-8.953957,6.376864,-7.889215,0.586900,0.262037,0.689579,2.649393,-6.123461,9.851908,6.447571,-4.578798,-7.499435],[2.521532,-1.425825,-1.743714,2.534376,7.327334,-5.278248,6.227694,2.593779,-5.633801,1.875796,5.763775,3.669060],[-8.747569,-4.945093,1.037308,-5.359026,7.758677,9.094898,-6.837352,-2.102856,-1.517536,2.698645,-8.585213,-5.598524],[-8.111109,3.327930,6.454682,-2.696208,3.323819,0.700222,2.020212,7.334266,-5.324381,-6.073105,6.275788,-6.151937]],[[4.339146,7.698023,-9.591056,-7.803658,-1.354657,-0.998517,8.861577,7.305977,-1.889575,0.006618,-5.258736,-1.968718],[-9.334414,3.787609,4.054746,1.156928,-4.906892,-6.167613,-5.232296,1.735081,-2.668280,7.242020,-3.329052,-6.757624],[3.819352,0.328815,-3.146900,-5.355517,-4.603443,5.723642,-5.522597,5.610076,1.963444,1.014296,-4.682905,-2.870104],[6.267081,-1.851377,-0.568297,-7.089619,8.971654,7.573110,6.408503,-8.465626,-3.194735,2.021035,-6.161894,8.109760],[-8.632483,6.757795,6.925273,-4.235640,9.057395,-2.281605,9.308074,6.538716,-2.351601,1.086382,6.499486,-7.272276],[6.260570,-9.276247,-9.587309,4.596142,-5.603061,7.101221,2.407406,-8.661685,5.267139,-3.696259,7.197382,7.297516],[8.177227,5.786498,-9.413506,-2.300349,0.026099,7.362234,-8.651592,6.474382,0.841299,-3.297924,-1.622631,-5.115204],[3.892031,-1.617849,-6.802925,2.270680,-9.015420,-3.424662,-6.469296,-2.795124,4.988039,9.537144,0.727785,8.590024],[6.431851,9.714792,-2.410845,2.869245,-9.647710,0.099745,8.702568,-6.373772,8.593513,-3.879570,9.884839,-9.164395],[-1.281702,-3.311583,-4.302880,6.801941,9.064928,5.587752,-7.482435,-5.510919,-2.013970,2.552272,-5.378707,-2.770579],[6.182071,4.021312,5.412272,1.030808,1.482602,6.149532,3.051669,3.877269,1.971905,7.123650,-5.951057,4.659833],[6.387657,-0.973221,-0.531746,1.843228,-2.526039,0.013486,-6.606184,8.442390,-6.430819,3.151154,1.500310,6.879727],[3.627781,-6.357243,-6.468332,1.485538,8.300591,5.833040,-2.300021,0.202425,4.962562,-9.535336,5.170377,7.351919]],[[9.418935,-7.841605,7.497132,9.385221,-6.289935,-3.091025,0.616824,-8.381280,-1.153799,0.139925,-3.020459,9.888107],[2.817899,-4.603264,2.804020,-9.514284,-5.814641,-7.154075,-5.548310,3.429478,9.419861,3.432645,0.738156,2.315814],[5.893957,-2.890000,4.196787,0.504972,6.500775,-9.739081,6.718885,8.720040,3.153235,-3.870812,-7.198955,-7.975073],[1.574705,-3.979933,7.710314,-7.833317,-8.701916,-1.315267,-9.665097,-7.711548,2.145099,2.690868,-1.168636,5.520562],[-1.505969,3.515162,4.063394,-4.088381,-8.103486,4.244998,5.622162,-1.805068,-5.964739,0.693815,6.367780,-5.662697],[-4.029568,4.378015,9.323084,-0.670238,-1.574419,-2.784751,4.979444,7.388726,7.824284,8.379957,-5.934917,3.892102],[3.629716,-8.353149,-4.238221,4.174776,-5.367526,4.253629,2.301541,9.326624,-5.689448,6.955872,-9.242863,9.436403],[6.339313,-4.531442,-7.323896,-7.426163,8.374101,-3.986434,-0.557067,-6.654728,6.207881,-0.077898,-0.018000,-1.469883],[1.658456,-6.249315,-7.517860,7.999175,1.349312,-9.263034,6.156217,6.857026,2.867553,6.525011,1.630740,-8.291608],[9.683929,-4.803257,-2.822681,-6.420701,-9.264347,0.697483,-2.900008,2.064812,2.085481,-2.011619,-0.198305,4.463830],[3.222529,3.638975,-0.092693,3.915409,-6.782607,1.930047,6.703049,-4.725442,8.543599,-7.990749,9.118657,6.350682],[1.666836,0.744610,6.715553,9.826526,1.377670,3.258004,-1.678834,-1.535504,-2.525047,7.886289,4.706428,-0.979240],[-9.629815,4.192235,-2.192966,-2.432436,-9.022572,2.562936,-4.539405,-5.258757,-6.676395,3.577648,7.759059,1.118289]],[[-3.254811,9.758759,5.882443,-0.949515,-9.927817,2.514879,-6.102909,3.532535,9.880500,-9.878502,2.545170,-2.702272],[-0.025131,9.410097,4.573482,-5.887204,4.892355,6.069735,1.586838,-2.139250,3.243338,-2.873180,1.134207,-4.237329],[-0.325854,-7.151445,-2.106382,8.567206,8.060104,-4.590383,-5.696587,-4.710489,-5.466623,-1.787389,3.013356,5.172545],[-3.567290,-9.731528,3.582079,-5.148154,8.061823,-3.729102,0.356547,-9.149053,-2.917681,3.841252,2.022275,-1.919527],[-3.942163,8.452227,-0.687879,-0.932504,-5.617409,-9.457129,-7.787440,-2.034811,-3.933687,6.915405,-1.586616,-0.283467],[-6.627103,8.113161,3.360435,8.219475,-8.075848,7.704472,6.541131,9.950902,-3.132264,-6.834313,2.924862,-3.450175],[3.060941,0.164384,9.976610,-4.791400,-9.771919,-3.990016,6.101244,6.308920,-2.101964,-4.951140,-1.346237,-5.434233],[-3.518572,2.738164,4.606946,9.917971,3.509892,-3.974479,-6.054890,-2.523851,5.477251,-6.767671,-2.675169,-2.323279],[-8.133583,0.766813,9.486424,7.775059,-1.574476,0.233473,-3.860806,-8.986528,8.604904,-4.949313,5.588437,-2.618798],[7.437823,6.317168,-1.431341,7.467349,3.842455,-1.089843,-4.615593,-2.005523,-3.332650,-8.037291,-4.658367,1.224023],[3.659219,9.100914,-7.222957,2.562896,-6.111833,-0.478509,3.396448,2.522706,-0.165103,5.155209,2.133437,6.193484],[4.852314,-0.215768,-8.365268,9.015606,4.222429,-9.522269,3.651414,-8.660472,-3.382963,-6.709069,-5.750595,-1.379070],[5.351201,9.456450,8.214296,7.008614,-0.917506,-7.505706,3.212202,-6.955616,-5.586000,-0.889273,2.131849,2.146707]],[[2.346544,0.995620,9.695962,-4.507060,7.493713,6.189334,-2.590417,1.053540,-0.839096,6.034945,6.562984,5.539582],[-8.217310,4.433052,-4.699883,-3.209634,3.795356,0.566223,0.810786,1.718432,4.136481,-4.129573,8.819644,-8.079155],[6.680615,8.013047,2.395604,5.128707,3.624144,9.136586,5.301194,2.033696,7.553001,-2.278567,6.133095,4.117870],[-9.217082,-1.342608,5.626388,-2.404916,9.464581,-5.772245,-8.361709,-0.634799,-9.908358,3.034289,8.923271,-5.024603],[1.599246,-0.638487,4.022392,4.105833,6.055146,9.757353,-0.963106,9.074100,-4.311042,-8.754605,4.417174,-4.250400],[6.435606,-2.569530,-1.932103,7.856000,2.602229,-8.127741,-3.895732,-4.137435,-6.171393,-0.176708,4.884634,-5.848447],[8.358766,-5.205243,9.888572,4.310053,-9.570667,-0.244232,-6.993815,-4.336983,3.165047,-7.306528,-8.448135,1.231743],[8.635982,8.805656,9.843977,-8.160243,7.970685,-0.949991,3.523130,4.605234,6.929015,-1.866221,3.659778,2.908659],[-1.867266,-8.031903,-0.127206,3.838379,-7.014955,5.264959,-9.728955,-6.626740,-9.246426,-6.033881,-1.860024,-6.825706],[1.042700,-2.683802,8.843576,5.443970,8.888987,8.829801,7.373012,4.425175,8.142092,-5.130393,-4.079034,5.670232],[2.574867,-2.163713,5.618945,2.833628,-6.074238,-8.445905,4.235504,1.608730,4.491154,-9.268329,2.667112,-1.781839],[-4.770691,-7.483221,-2.105118,-5.701064,1.880651,4.868401,7.878578,-0.342412,-3.429541,8.892232,-8.793241,1.505512],[8.237694,6.747524,1.676807,-9.319449,-3.350065,1.771573,-5.149650,-0.354277,-1.288298,8.375945,-0.419875,5.230395]],[[-8.417890,-9.424663,8.453434,-0.498413,3.885225,1.654338,-5.944834,3.390134,-2.332476,0.156839,-0.007557,3.606287],[4.809587,-9.868430,-9.992802,5.370494,-5.345652,9.189735,7.369837,7.778294,9.226064,4.778784,-1.101505,-2.193939],[1.582085,1.387196,1.932354,9.894832,6.146841,-6.869386,3.982482,-2.567755,4.174399,-4.988528,-1.797494,-9.069637],[-7.779786,7.336447,-3.377546,-6.926124,5.628305,3.642230,-1.767939,2.961125,-7.364602,2.006911,2.675625,2.491925],[0.336216,1.842286,3.860240,-1.260922,-3.981165,-2.347971,6.112533,-3.021267,3.024153,-9.282639,-0.813825,3.652930],[1.149966,9.753431,7.309167,-8.808501,-9.749739,-2.741473,4.346119,8.665690,-8.138220,-3.698756,-2.502560,-2.448565],[-4.488079,5.612920,-4.395881,5.218936,5.577494,7.427963,5.065448,-6.069502,3.821211,-4.272505,3.473506,-2.828596],[0.308961,6.777416,-5.519045,2.509008,-2.917027,4.041352,-2.902667,0.086977,0.539508,-1.669289,-2.869612,-0.758562],[9.319297,-1.236575,4.390586,-7.901116,0.309891,-1.449325,4.613420,-4.834369,7.969310,-8.868308,-1.787828,2.101232],[-2.866024,-7.459797,-6.103214,1.675645,4.217598,-0.131920,-7.431935,-3.483469,3.590268,4.217540,-3.063410,-0.630809],[-0.831069,4.673937,-9.847170,-4.207574,-0.472083,4.648656,-5.114758,-3.348194,-7.452270,-0.394886,4.447664,-1.572818],[4.473199,8.018394,6.634955,7.359476,6.074773,-5.506511,-6.665309,-8.594136,-5.758034,6.718277,-5.509370,-4.006241],[3.280953,-1.875782,9.666341,4.103768,-2.151974,7.201758,-3.785511,6.039972,8.595752,-3.820917,3.836998,2.964533]],[[-4.892971,-7.425220,-5.804982,-6.210503,3.462990,6.921336,0.483230,0.977479,9.618662,-1.506151,-0.648369,6.973508],[2.566408,9.949422,2.141867,-2.296039,7.012997,-2.417874,-3.924005,1.302718,5.739042,-6.846978,8.017468,8.778115],[-9.534967,5.675589,8.496455,6.512752,-5.119212,1.969906,8.222174,7.038842,-0.632646,-9.677438,-5.994583,-3.508493],[-9.044963,1.820492,9.835115,4.798888,-0.701564,-5.026039,1.765457,-7.218415,-5.991412,9.916636,-3.644568,-2.928463],[2.655912,2.792219,4.363664,8.330640,-0.243711,6.367776,2.787896,-2.562662,0.381382,-5.368669,-9.562556,-4.564349],[-8.591548,-9.048904,8.230045,-2.413159,1.771336,-1.529495,9.580011,5.812983,-3.994441,1.608498,4.607698,5.930659],[-9.617691,8.211849,2.373020,2.007073,-6.252505,-4.100868,5.264622,-2.702443,-3.238851,5.779088,-8.886437,7.001616],[9.297149,4.628016,-1.680271,-6.114712,-5.892507,1.784531,6.900996,7.121835,-8.982827,1.807632,-9.266121,8.532809],[8.873496,2.092681,5.446438,-0.211402,5.837359,5.671389,2.106671,3.766714,5.875485,2.933111,8.417261,-5.278128],[-2.809717,7.254845,9.369044,6.146837,6.354834,3.375440,1.391332,-4.617184,0.632450,6.311517,7.627921,-1.463924],[7.356278,8.011380,-9.927320,5.842038,-2.632349,-1.902781,8.200824,-1.584662,-2.274324,4.528124,0.724682,-5.170113],[9.422572,7.257900,-4.499447,5.298053,9.976905,8.676001,5.065840,-5.810703,8.714985,3.235017,-2.704810,-4.270748],[1.158132,7.427641,3.346278,3.208569,1.786094,0.956448,-9.684494,8.969142,2.816594,-4.039192,3.142556,-3.758966]],[[3.081561,2.477459,8.371099,-0.345551,6.842088,-5.024612,4.258985,7.920959,-5.513230,6.014348,-2.324059,5.788532],[2.552917,-8.873872,-8.694800,0.966606,-8.317226,-9.780223,-5.496822,3.202794,-3.683328,-0.773046,0.878770,-8.732938],[-5.203249,7.323439,-1.580267,1.209993,-8.867711,2.046961,-8.836824,-7.912195,7.949913,9.546751,4.097959,-1.814368],[-5.961352,0.959791,-2.855284,3.032022,4.673505,6.737544,1.043568,3.631830,-8.560152,2.900842,-8.103903,-1.586063],[-7.358548,3.143317,-0.673787,1.103063,2.196354,-1.977615,-8.675196,-7.035928,-4.816595,1.172022,-9.303835,1.905248],[9.750819,-6.302120,-7.401510,-2.352772,-3.268149,-4.836038,7.766556,7.989489,3.352084,-0.302885,3.887026,2.186230],[3.934994,-6.745895,-8.574171,-6.912865,-9.083568,0.895936,2.170522,2.826443,3.524623,-9.880046,4.550680,2.745904],[-5.588754,-9.539671,3.282232,5.882220,-5.300501,-6.907997,-1.389719,3.623104,4.011798,1.013280,-4.105311,-6.876481],[5.026392,-4.296619,-3.094246,9.941720,9.000341,3.288337,4.515046,4.059563,-3.443507,-5.467836,8.757081,2.152101],[-6.471718,6.770532,6.226038,2.630455,2.658872,8.289754,9.187490,-7.463176,-5.038108,9.777316,-0.108374,0.832240],[6.757492,3.669558,6.988569,9.230904,-8.973397,-4.334152,5.404924,-4.545426,8.813844,-9.960998,-2.830182,-1.354757],[-0.643385,-8.197391,-7.098820,9.140610,-7.575277,-6.765624,0.551845,0.153950,6.145693,8.717392,7.350403,4.925891],[9.448585,-3.746579,-0.478039,-5.136295,-9.365822,4.997726,6.282240,-3.153113,-0.421382,9.793990,0.737462,2.643933]],[[3.610577,5.842426,-8.400797,7.978535,-3.931251,9.683777,-2.554041,-4.691928,-0.576114,-2.992629,-3.879934,1.192720],[4.522411,7.590012,-0.873567,8.892382,4.932927,-5.057892,0.892365,-5.358969,1.439616,-3.943552,6.803834,9.710250],[1.856687,7.370510,-2.525631,-5.874273,-9.193880,-8.899297,-9.014538,-1.456848,-3.169080,8.881757,-7.080776,-9.089404],[2.642852,-9.151666,1.333992,-0.730388,8.664474,-5.967567,4.275812,4.511247,-4.996235,-2.371038,-7.699143,9.446443],[7.459767,-7.668806,-8.481884,-1.968927,-4.771721,-4.377702,-1.610865,-1.267014,8.609224,7.297887,4.895717,-4.036085],[7.736425,-4.458952,1.125672,-1.619656,-7.512262,-5.066227,8.348848,-3.106755,0.184915,5.457689,5.275261,3.417148],[5.770982,1.790496,-2.858924,-2.888044,-7.386235,0.302284,-6.858537,5.807901,-1.709860,4.626397,-5.643806,6.597018],[2.235276,1.778788,-3.192755,4.939840,3.507548,-1.066312,-7.876532,7.663172,3.880955,-4.169138,1.005376,-8.966691],[5.653384,7.980817,7.538672,-4.700461,-5.677043,-0.859901,-9.620888,-5.623966,-3.993269,9.194222,9.955844,-8.241368],[1.593941,3.595506,-5.118846,9.339586,0.146009,1.109740,7.236291,0.725406,5.204850,8.616092,3.895015,1.047296],[-8.932186,-5.204088,-9.678055,8.112257,3.952693,-5.564419,-8.013893,-6.566010,-7.173870,0.288989,2.294008,1.275609],[-5.946036,-3.647904,-4.958602,9.475851,3.298240,9.351123,-3.707189,2.373704,8.189146,7.562275,6.074034,4.743720],[5.887918,-1.495736,-2.705756,4.284557,-0.950082,-5.604096,-0.067630,9.806779,-9.822221,3.844719,4.385430,-8.620394]],[[-6.319421,5.039478,5.585876,6.273941,8.213931,6.664506,-7.966067,-9.706999,6.718284,3.208093,-1.974237,8.843027],[9.784243,-0.059333,2.633910,2.959841,-0.610273,-4.658982,-8.495825,3.519509,6.690420,3.659126,7.380250,-0.745133],[-1.438492,-0.316876,-5.209156,5.087469,-6.160405,2.916985,8.079296,5.694995,1.498108,3.570354,-9.768208,8.951623],[-9.210585,0.117824,-2.230960,-7.934437,2.571944,7.110334,-9.979367,-1.557638,-2.016242,-3.930454,-3.930371,-6.657635],[4.613441,8.729581,-2.394498,4.518062,1.895094,-4.834837,-2.926013,6.685933,-5.703282,-0.027626,0.675085,7.326066],[-0.211862,4.154843,-3.170944,-5.921522,-4.614252,5.188761,-1.083817,8.203398,5.017411,4.078227,-7.052220,1.018485],[8.085261,0.738991,-1.173223,5.878012,-2.672228,-6.109600,-8.438994,2.588017,-4.835960,5.095295,9.495935,9.965507],[-3.910635,7.095113,5.863468,5.477460,-7.048861,7.698709,-6.196452,4.116973,-0.289003,7.343272,-1.176077,6.892949],[8.402085,3.326381,7.720658,2.828580,9.893416,-2.368522,9.110431,8.692443,-3.739675,9.653509,8.039587,0.227235],[-8.644638,-8.604801,4.700534,1.527300,-1.805856,-1.002091,0.044102,-1.036081,-5.625735,9.066473,-3.234428,6.837179],[-9.169036,5.350150,6.958694,4.653708,4.571689,-6.687062,6.971493,0.447356,-7.946943,7.126992,1.100308,-3.496556],[-2.569666,-7.345279,-5.777521,6.508592,-4.086231,8.719741,6.308563,6.883755,-5.593788,-0.978234,6.067145,-6.478802],[3.756701,-7.355440,8.336061,-9.617695,-3.205576,-0.667234,-9.683491,0.995802,0.745629,-1.623840,7.188492,5.767278]],[[5.189541,7.569617,-8.799597,-3.257288,8.228219,-9.754580,0.007282,-4.063921,4.980776,-9.497593,-9.295231,-4.981277],[-7.677041,1.185317,-6.088535,-8.806198,-5.448827,2.560907,6.252353,-3.423335,-0.639204,8.474515,7.480735,8.156292],[-1.417625,-9.835024,-7.554270,-7.069546,5.728832,-2.946734,4.590717,8.939331,2.767464,-2.190129,-7.026173,4.601643],[8.428959,-6.826034,2.290104,-5.112712,5.008897,-0.599025,1.055105,4.618782,-2.805365,8.036376,-1.044860,8.627844],[7.105864,-6.315826,-9.021716,-7.384650,-2.945501,-3.614579,-7.566889,3.850458,0.733083,9.734079,4.191662,6.099363],[6.938426,2.339994,0.837588,3.341026,-6.935225,-8.901698,4.018344,-6.960651,4.254350,2.781663,2.195255,-4.206484],[9.579039,-0.631632,-9.519121,-9.015885,-6.116830,8.887982,1.647489,-5.955663,-4.675577,-4.556898,2.654319,1.768026],[-9.695598,-8.181978,0.053458,-6.497919,3.460267,0.564695,0.297518,0.295958,7.299272,0.268454,3.704746,-6.688745],[9.684541,5.125594,-8.935150,4.417057,-4.327063,-8.777916,-2.937277,-9.322411,0.166778,1.775609,6.014506,-0.186030],[5.103131,9.379181,4.802685,-9.257393,8.404192,1.786388,-6.218583,-4.432886,4.251419,3.050233,8.364892,7.828307],[3.457328,3.692143,9.040218,-6.794374,-4.583265,5.693598,8.660349,-4.806707,4.915265,-3.920410,-6.920046,-2.698494],[-8.756531,-9.095751,3.463657,-3.852828,-0.320770,-8.303269,-4.670340,8.802812,-4.372295,-6.102132,-4.055474,-4.197692],[8.645756,-7.842428,9.998592,5.754274,-6.474278,-7.678685,1.939012,-4.187726,-9.016982,3.654908,4.493491,7.922315]],[[6.979609,-7.199081,-6.014319,4.621648,9.502147,-3.342852,5.521602,-8.149377,1.282355,7.755934,-7.350024,-8.958557],[-7.110002,9.566435,-9.048002,-6.974433,-1.731990,-0.421137,4.551358,-3.722917,6.527537,-1.854655,-9.400950,-4.224416],[3.267150,-6.584168,4.101954,-3.948536,-8.529123,-7.736682,2.486799,-6.537264,9.149803,-5.915697,4.390700,0.863866],[3.061111,1.714177,5.002000,3.214877,3.048618,-7.980413,2.826229,8.517260,-2.451300,-5.457336,-8.813159,0.598750],[3.090019,-9.383650,9.037130,1.848921,4.948384,-8.317766,-9.490947,6.045188,-5.587278,9.845051,9.759402,7.331947],[-6.304901,8.947951,1.929400,-4.788884,-6.284293,9.441575,-0.949748,1.711477,3.535653,-3.690847,7.015354,0.587405],[9.973250,8.803006,5.407573,-6.507340,8.798344,-5.867896,1.353814,2.616942,-2.391962,4.428186,-8.252486,-6.404881],[-4.018907,4.630036,6.785053,4.914782,4.181209,8.352688,-6.211768,-5.492224,2.221484,-8.804349,2.871681,-1.879040],[-9.322525,2.096185,-6.093017,-5.168891,-3.371807,9.325330,-4.051225,4.394867,2.907769,9.159249,-8.353678,3.326530],[-7.048681,-1.689806,-6.180346,0.863309,-0.506957,1.267915,9.633408,-9.205021,0.505665,6.312784,-2.877042,-1.890045],[3.752242,7.314365,4.895997,7.108569,-2.477693,-6.540970,-9.437130,2.665869,-9.309755,-0.481703,-7.885095,5.224806],[-3.545556,-2.122289,8.833101,-1.311456,-8.745627,7.654771,0.117569,4.906335,-0.579210,-9.698604,-2.303172,-4.164462],[-0.385188,-0.195524,2.678787,-1.640866,-9.858590,-8.348648,9.046972,-2.930679,7.382742,-6.658201,-5.044648,-7.703442]],[[4.894973,8.894096,1.220600,-1.695164,-5.317121,-3.583974,-9.044232,1.883111,0.004311,2.819464,1.084595,-7.649740],[7.819011,4.067124,6.116958,-5.481175,-7.705458,-6.414657,2.998831,0.776961,0.293838,6.182543,-4.653111,-5.616726],[9.540074,3.961108,8.625049,1.580258,-1.500271,-4.460680,-2.307012,-4.126910,-6.878706,-0.912361,1.664404,-3.400591],[-8.453625,-9.097684,-8.052061,-3.753882,-1.578441,-1.333307,-7.466173,-3.759921,-0.181114,-3.239592,-4.525183,7.620457],[5.810366,-5.185848,2.724751,2.420483,3.613765,8.854735,-3.783764,5.428801,2.400140,-3.057803,8.647417,-1.944638],[6.391082,-0.099090,7.361917,-5.449374,-9.692782,9.800512,8.036805,8.536859,-4.546160,3.754825,-4.136126,-2.868703],[-6.730252,9.160230,3.915844,-9.650842,-4.417423,-6.387542,-1.356975,-9.762151,-4.504614,1.303708,-2.642771,-3.412618],[6.824653,2.959542,-4.676968,6.406673,-2.744987,-1.841293,-2.368150,-6.488416,4.752739,-1.119068,-9.541161,-8.994839],[-8.059131,-9.456561,-9.026820,1.445356,-8.501376,-5.711509,-9.769524,-9.806059,-3.811443,3.444802,5.842574,-4.330600],[-5.422603,-5.885833,3.740014,2.223986,-6.681982,8.460181,-7.018237,-3.137644,1.774200,5.149394,-3.036993,8.831844],[-4.846601,9.947123,-9.366803,9.683635,-2.894405,3.211722,-6.254721,4.474121,1.038700,-0.989770,-8.666890,-5.645964],[3.010230,7.463642,6.904058,-4.843613,9.089049,5.679244,4.879807,8.863266,1.563787,-6.692021,9.072673,-7.932163],[-3.964805,9.401770,-5.219726,-8.504948,9.682006,2.083378,-5.604704,0.373786,-5.697879,-3.070989,1.657108,6.006943]],[[-6.006488,-5.193907,-8.020011,-6.543863,8.018104,4.714981,-7.509886,7.167692,2.457838,-9.265529,7.070346,-9.224393],[8.225431,1.080725,-4.812429,8.593442,-1.577933,-4.651502,-6.527891,7.579728,-8.719002,0.278203,5.358044,7.275918],[-1.178343,-7.284632,9.294874,1.467798,9.724702,0.831888,4.027476,4.807657,-8.229036,-1.750712,-6.536895,4.621447],[-4.849730,3.483567,4.332472,4.325730,0.838081,5.592952,-3.163720,0.127008,-4.199583,9.313632,1.133122,7.878520],[-3.843775,-4.303502,-4.976258,-7.907346,3.561799,-2.225024,-2.258952,-3.822551,7.935915,-4.715681,-2.837499,-1.728980],[-6.569935,-7.219470,-4.143687,0.007218,-8.484280,1.369216,7.603961,9.186346,-9.384733,-7.385488,9.985873,-6.055519],[-8.367101,-7.326734,-0.892197,1.014219,-3.232551,-4.244345,-5.832349,-9.095565,3.394241,9.197010,7.077531,9.644611],[-6.930205,-1.397730,-5.617843,-9.684686,4.360098,7.673835,2.597876,-9.958174,9.025328,-7.214571,-4.083717,-1.584117],[4.791428,1.619061,-3.403413,-2.998956,-5.425243,2.844517,9.544755,4.955789,-4.165499,-4.857984,-2.316528,-6.849774],[9.026507,9.683572,4.124734,7.610430,2.354966,1.491576,-3.879097,-0.966707,-5.819416,1.867110,2.570280,-2.701713],[-4.706330,-8.899119,3.724943,-3.168920,8.678290,-5.252678,0.566356,9.691949,-9.221096,-0.308985,-6.082293,3.686195],[-5.130950,-8.053330,-0.555790,-0.157077,7.011023,4.479107,7.213914,2.139051,3.137937,0.329107,-1.915115,7.894483],[9.806509,1.324471,-1.429446,-4.527915,5.275648,-6.474152,1.739664,-6.894141,2.088605,5.037852,1.533762,-2.072615]]], dtype = "float64")#candidate|10432|(15, 13, 12)|const|float64
bop_10433 = relay.not_equal(call_10421.astype('bool'), relay.reshape(const_10432.astype('bool'), relay.shape_of(call_10421))) # shape=(15, 13, 12)
bop_10436 = relay.not_equal(call_10422.astype('bool'), relay.reshape(const_10432.astype('bool'), relay.shape_of(call_10422))) # shape=(15, 13, 12)
bop_10439 = relay.logical_xor(const_10432.astype('int32'), relay.reshape(bop_10433.astype('int32'), relay.shape_of(const_10432))) # shape=(15, 13, 12)
bop_10442 = relay.logical_xor(const_10432.astype('int32'), relay.reshape(bop_10436.astype('int32'), relay.shape_of(const_10432))) # shape=(15, 13, 12)
uop_10446 = relay.atan(bop_10439.astype('float32')) # shape=(15, 13, 12)
uop_10448 = relay.atan(bop_10442.astype('float32')) # shape=(15, 13, 12)
output = uop_10446
output2 = uop_10448
func_10454 = relay.Function([], output)
mod['func_10454'] = func_10454
mod = relay.transform.InferType()(mod)
mutated_mod['func_10454'] = func_10454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10454_call = mutated_mod.get_global_var('func_10454')
call_10455 = func_10454_call()
output = call_10455
func_10456 = relay.Function([], output)
mutated_mod['func_10456'] = func_10456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8439_call = mod.get_global_var('func_8439')
func_8441_call = mutated_mod.get_global_var('func_8441')
call_10489 = relay.TupleGetItem(func_8439_call(), 0)
call_10490 = relay.TupleGetItem(func_8441_call(), 0)
func_10454_call = mod.get_global_var('func_10454')
func_10456_call = mutated_mod.get_global_var('func_10456')
call_10517 = func_10454_call()
call_10518 = func_10454_call()
func_8565_call = mod.get_global_var('func_8565')
func_8570_call = mutated_mod.get_global_var('func_8570')
var_10520 = relay.var("var_10520", dtype = "float32", shape = (210,))#candidate|10520|(210,)|var|float32
const_10521 = relay.const([[3.592174,-0.435177,8.059372,-4.704763],[3.942481,-3.578883,8.721987,3.800407],[5.057055,4.168471,-0.824986,-3.143576],[-5.549027,-6.014630,4.778430,3.624189],[-2.597806,4.871539,-4.016466,-6.946500],[-3.479921,6.730003,-7.622336,5.171229],[2.073573,0.347447,-8.188012,5.555556],[8.493704,-5.292082,2.255482,0.691422],[1.784641,4.814923,6.463811,9.782320],[-6.730953,6.157196,7.797898,-2.251716],[9.429001,-3.370115,9.433422,1.207430],[-0.487110,7.748133,8.181586,5.953263],[8.161540,-7.986546,-4.044454,-5.477739],[-5.450207,-5.649658,7.658509,0.644600],[-7.904601,-9.312159,0.545246,5.986819],[1.012387,8.934985,8.247443,0.280433],[4.454514,4.334097,3.229520,-2.083770],[7.085620,9.449439,9.483724,-2.919777],[7.569385,6.733211,-5.880805,-6.538725],[4.587506,-2.347153,-5.539391,5.002368],[3.474977,-1.451013,4.836113,4.868935],[1.370393,4.106402,7.949338,-4.352010],[-9.020029,7.619967,-3.864700,7.917278],[-8.009557,3.014944,0.407023,-3.887631],[1.670368,-9.541744,-6.507620,-3.377997],[-4.481991,-7.478481,8.681747,-5.169892],[8.033200,-5.243148,3.971214,3.194994],[2.987784,0.926313,-5.269906,7.587896],[-4.339358,-4.560635,7.895123,-9.623348],[-6.028868,0.424721,6.971214,7.952489],[-2.209953,6.644646,1.841762,3.184693],[6.697217,-7.838018,-5.425899,9.638934],[4.678348,6.000635,-1.080598,-1.563968],[5.498292,-7.930198,-4.499632,3.594624],[6.715870,-7.373543,0.111447,7.763226],[-1.626450,-9.020367,-3.325809,1.147843],[6.863980,-1.819120,-5.689823,-8.060058],[4.327656,1.475227,8.762546,-0.802569],[7.885961,9.601429,-5.021195,8.833040],[-0.935936,8.566778,2.266473,-2.154272],[-7.048491,4.618399,-7.332385,-4.324670],[-3.593655,4.950525,-1.186872,2.757574],[-3.679980,-1.835688,0.013781,-6.418176],[-1.997907,-1.819776,-7.232691,-6.030625],[-9.858313,-4.592342,-8.615773,-3.886360],[-5.540266,-4.832443,0.031418,-4.298781],[-4.403084,-1.812140,-0.860251,-5.657196],[-9.760819,-8.852962,4.874513,9.895631],[-4.483950,-3.881281,-9.294552,-7.607908],[-2.693329,7.516747,-9.959377,-5.770898],[0.605424,-3.917060,9.641655,-2.299103],[-3.619030,-8.754973,0.979833,0.746959],[0.117720,-1.764387,-7.143585,-8.040055],[1.506192,-6.190021,1.174383,5.711318],[5.006161,-9.661025,-5.890384,-8.294325],[-1.592475,-1.586646,7.258921,2.098524],[-9.966702,-2.694274,-0.685622,6.150382],[4.064738,0.882301,-5.800888,4.601885],[3.464892,-9.498888,-2.741010,-0.047379],[-7.117844,-9.411293,-1.859536,-1.086976],[-2.087043,8.047835,-9.859566,-5.622848],[-0.177446,-5.992644,-7.850579,-2.371822],[-6.424285,5.912900,6.510418,6.242217],[0.733667,4.809689,1.265272,-5.739236],[0.841059,5.017619,-8.120634,9.071190],[7.930604,-8.172743,6.724724,0.489919],[1.558834,-8.190400,-7.350556,-9.456005],[7.153463,3.923294,-5.309265,-7.184374],[3.496111,4.297402,-4.263741,-8.661334],[-3.449259,2.082341,3.806515,5.262996],[-2.698102,-9.753556,2.937208,-9.103975],[-7.418137,-3.733882,0.882674,-7.371101],[-2.420137,-6.331839,-7.654740,-3.570253],[9.169732,-2.556889,6.209924,-7.741906],[4.680783,-5.357586,3.623522,-1.758741],[4.951194,-6.689280,5.442605,9.851954],[-2.019515,-5.174206,0.328319,-0.667541],[6.536308,8.887539,-2.308620,-2.822115],[-4.230984,9.129564,2.229208,-3.252923],[-1.940272,6.541616,9.082977,1.927685],[-8.509790,0.418793,-2.138539,4.332293],[-2.718928,-1.219703,-0.112188,3.292570],[-5.868910,-8.931673,-1.818348,-6.072847],[-6.128355,-3.645064,-7.502205,0.633962],[-1.800311,-4.243269,-6.459616,-1.095397],[9.278351,-0.778128,8.667250,-8.530025],[-1.293075,5.092053,0.690462,0.595111],[5.969114,-0.389027,5.277955,-3.668605],[-1.306095,-9.089083,-7.405522,2.726960],[-2.342826,7.892034,3.941539,4.397674],[1.950457,-9.943859,-6.512148,-6.382625],[-5.687377,6.814634,-5.749983,9.666599],[6.145088,-3.854320,-1.281767,3.758247],[3.315190,-8.527535,-0.839855,-9.704367],[-1.734911,9.463679,-6.963959,-0.967179],[-6.221491,-5.463544,2.160666,1.068515],[8.152563,2.847703,7.488588,-6.327066],[7.052221,-6.602942,-4.572013,6.149828],[4.387722,6.912337,-7.495770,-3.270912],[-5.391921,-4.053026,-4.929605,-4.765432],[3.811219,5.567281,-2.771611,5.508993],[-0.150580,8.905184,-4.571960,2.570045],[8.594310,9.174192,-3.971691,-3.779885],[-9.122581,1.733090,-6.414223,-7.059156],[7.649969,5.638757,-2.351171,0.370413],[-6.661793,3.436959,-8.620873,-3.236686],[-6.542474,1.251399,-5.036303,1.186507],[-5.808387,5.394328,-3.712870,-3.563187],[-7.891801,9.760751,-5.237776,1.184913],[7.444772,0.676332,-0.017615,-7.079232],[8.052709,2.951238,2.106184,-1.208076],[3.629550,9.267121,-7.021189,2.112848],[6.493350,0.319563,-4.845203,-3.857037],[4.836544,0.158859,4.332003,-3.131736],[3.025037,-6.496812,-9.097680,7.763023],[7.676870,8.411841,-7.713641,-6.653662],[5.474289,-7.981691,-9.069826,-5.384405],[-6.887271,7.464151,6.638563,8.300154],[-1.464580,3.188407,-6.028733,-3.748931],[9.621213,4.074870,7.795875,3.974084],[2.468534,-2.220830,-8.495378,-6.022269],[-5.836508,3.301967,0.664227,-7.147175],[-3.293049,8.889449,-2.550569,-0.416139],[5.917851,-0.237312,8.569437,-3.191248],[1.602022,1.157308,9.654194,-6.370559],[0.625500,1.797871,-2.089526,-5.089830],[3.843349,-8.223055,-2.931733,-3.016974],[-0.820796,-6.527943,-6.635105,4.437869],[1.454616,-1.876827,-2.542996,-7.555324],[-0.415628,-4.292390,8.790331,1.363712],[-8.321275,3.823632,5.991192,2.958709],[-9.957238,2.783989,-2.738416,-8.542829],[0.600129,-1.226728,5.345681,-4.832010],[-6.225381,6.760775,0.269003,-7.365754],[-8.661482,-0.543064,0.718028,6.608128],[4.288222,3.574196,4.770627,3.089969],[-9.673509,-8.150154,-4.214207,8.693500],[-8.812814,2.457382,0.590438,8.835727],[3.815819,3.841138,5.423983,-4.294827],[-1.482063,-4.250737,7.077529,-1.937521],[1.852096,4.512048,8.595302,-4.149834],[8.497315,-0.705125,-2.986119,-6.948254],[9.591000,-5.440257,6.155731,-1.327106],[-8.152468,4.272834,-7.153495,3.513687],[5.928144,-7.439025,6.518318,-4.679738],[-1.495375,-7.433200,-4.252544,-2.747537],[-0.221148,4.968202,6.718251,5.884434],[-0.347380,4.445611,1.803066,7.773938],[2.311668,6.498108,-3.111546,-0.136717],[-6.100623,6.130914,6.306535,5.630542],[8.294841,6.789676,-9.278372,-0.073295],[-4.381560,6.927056,1.217123,-5.880535],[-8.630252,4.818132,8.774309,9.902259],[-7.876741,-9.762810,-4.438466,-2.996987],[-9.188211,-2.615463,-5.330499,-7.680530],[-0.443922,-8.476565,-3.404922,9.803334],[6.552355,4.128636,-9.553718,-1.397922],[-2.812236,-6.386722,-2.472465,-2.771581],[6.175950,9.965187,8.625932,-3.529883],[-7.398659,8.506209,6.939402,7.291434],[-9.516596,7.992601,-9.267957,0.753609],[-4.773532,9.812806,-3.819440,-4.672367],[6.244209,-1.966693,6.381521,-4.696203],[3.827287,-7.430932,-7.513307,7.531987],[-3.492018,3.939499,4.144590,4.561646],[0.736932,-8.362123,-5.853057,2.750365],[9.372770,7.461892,-2.404610,-3.399253],[5.514014,-8.936161,-0.380715,-8.295331],[-6.712348,5.933996,1.386791,2.524631],[-6.014287,-1.119341,-2.665004,-8.700334],[3.119516,-4.229544,0.501044,-7.029235],[4.990524,5.271871,-5.478780,3.875092],[1.183175,-3.245827,5.545873,8.587891],[-7.223758,4.818449,0.313885,-6.086274],[3.513215,-6.543636,6.226801,2.254843],[5.796892,-3.655072,2.915040,-3.329203],[6.823946,5.818256,3.342314,-8.633922],[-6.987425,-8.668093,7.966188,5.551165],[-0.553745,8.701153,-8.176203,-3.484884],[2.048525,1.979374,-6.577002,-1.747408],[6.343100,2.421375,-2.431398,-2.821435],[9.694643,5.579057,7.146216,0.469948],[-3.553354,4.767732,3.492375,5.414245],[-4.781401,4.527614,-1.803279,-7.577709],[6.299664,-4.126609,4.978874,4.978224],[-8.202705,4.479684,5.307615,6.821415],[-3.781757,-8.731334,-9.035122,-8.198908],[-7.411608,-0.077462,7.680970,-5.370573],[-9.745834,5.504980,9.194609,-5.151175],[1.374930,8.709444,-6.159292,-1.617500],[7.770727,-9.024577,-7.266905,3.050221],[7.692891,-7.887732,-0.437533,6.928278],[9.317322,8.622223,7.405091,-9.279705],[7.918035,3.878676,-9.147914,-8.292141],[-0.430120,-5.549822,-4.279779,-2.502910],[0.475145,-8.929903,0.463287,-9.906601],[-3.601450,-9.104419,0.916500,-1.584592],[-3.646066,-4.525158,-1.928824,5.688792],[7.385628,3.457938,6.185663,3.775212],[-5.040048,-8.771056,-6.883056,3.284011],[-1.140240,-6.140729,-8.634641,9.409961],[2.476069,-5.625892,-1.847320,-1.133666],[7.110766,5.072382,4.734324,2.761279],[5.037521,-8.972152,-7.833190,-8.449825],[9.157526,-7.133142,-6.985851,-3.994389],[6.964584,9.818643,-9.880483,4.465391],[4.305780,-4.617196,-6.903018,4.832821],[-7.251450,3.734671,6.730560,3.680886],[-1.803421,-6.818246,4.323452,-3.342935],[9.282528,2.372083,-6.226204,7.358897],[0.551320,-8.900160,2.753383,7.141084],[3.813197,-3.326312,9.428436,8.303567],[1.486231,-7.002740,3.485998,6.192126],[-5.896658,-1.845222,-6.864797,-7.503144],[-8.215825,5.438741,-5.091657,6.955231],[1.322694,-2.745536,3.295466,-3.894662],[-4.778715,-3.264231,-8.298828,-9.358845],[-9.558114,9.073473,2.446201,-3.604339],[-2.596873,5.578863,5.624766,0.455077],[9.813226,5.598547,6.187406,5.578998],[-0.514490,2.586821,-0.085833,6.138239],[2.504587,4.737020,-9.272440,-4.113790],[5.828428,-7.478981,-5.088238,4.844609],[7.249840,-5.468247,-1.945692,-9.403862],[1.226555,9.886934,-7.637697,-5.077194],[8.480559,-0.315073,-5.848448,2.739890],[-2.005380,-9.190488,7.450294,-6.250410],[-5.268491,2.922157,2.566669,7.667153],[-6.068115,-6.318205,1.720346,-2.266758],[-0.492806,-6.336053,0.797049,-6.920974],[0.856784,-4.834033,-5.163345,-7.944486],[9.022734,5.344782,7.306821,-1.544445],[-1.706736,-0.876932,6.571737,-5.312096],[5.079794,-0.199600,-3.028505,9.689029],[0.197187,-7.398241,-8.838749,-6.813504],[0.616268,-8.432027,-0.328721,-0.763508],[0.258230,-0.251780,8.518913,-3.514380],[-7.895979,7.938359,7.143305,-2.948778],[-8.275363,-6.777972,3.672979,-5.008177],[8.237669,-7.539707,2.019558,-4.355709],[1.969834,-5.607381,1.303388,-7.527757],[5.279162,9.455367,-0.445321,-8.871019],[-3.403991,4.633470,7.836556,-0.226937],[8.624899,7.742540,3.426746,0.192960],[-3.782648,0.667963,2.559263,4.666400],[7.766662,6.493853,6.230235,-9.787657],[6.053281,3.347866,-2.073055,6.081426],[-7.226139,-1.707876,-7.269632,3.194417],[7.649152,-0.441788,-8.415658,-2.684419],[-3.968244,7.945806,5.911417,-0.554524],[9.287773,0.559801,2.444037,3.678435],[6.118465,-6.497814,-5.773101,0.857323],[-2.677095,-1.516742,2.816849,7.270919],[-3.326407,5.180192,-7.310685,-9.070125],[-7.588161,9.785839,-2.811867,6.797000],[9.175522,2.615844,2.036791,0.848957],[9.588920,-4.420974,-1.405968,-8.201939],[-0.681056,-7.664804,2.887050,0.627588],[0.928432,-7.787948,8.996232,6.212047],[7.680378,-1.588655,2.690925,-7.526071],[9.579214,-9.693190,-0.484210,7.960486],[-1.291850,-5.694278,-3.382032,8.176636],[-8.782853,-3.674334,-2.124859,-9.977026],[-8.262849,-9.043068,8.484633,-0.859582],[-6.249270,-4.102133,-4.242445,1.212487],[-5.166390,-0.771258,0.910337,-3.552920],[6.287856,-5.436274,-0.208432,0.811948],[2.194467,1.800234,8.858787,-5.409498],[-5.208214,-5.221013,-9.074414,7.323918],[2.552904,8.980921,-7.856652,1.777416],[-1.475802,7.872120,-7.135679,-3.061192],[-8.510451,-2.474031,7.885210,1.485463],[-3.659709,-2.288895,-8.812959,1.263424],[-0.928355,-4.613571,-9.746042,-2.420337],[1.552037,1.135748,4.032131,-1.475885],[8.725485,5.707381,7.040442,-6.265057],[-8.113204,-7.278816,7.650205,6.956989],[-4.797320,-0.560282,1.347769,-6.858146],[-4.113219,-8.542474,6.514505,5.037355],[-3.743905,2.087226,-1.783936,7.837648],[6.537900,3.530455,7.511464,-8.018753],[-1.700611,-8.047072,9.708951,6.150515],[-5.594147,8.617767,-3.315265,5.416862],[9.805202,-3.118138,-6.703903,1.681455],[9.929345,-4.743131,2.307949,-0.302995],[1.118915,7.766481,1.627020,-0.030817],[-4.188948,0.163150,2.071386,1.994540],[-6.818351,-0.555698,5.066769,-0.749964],[-6.505952,1.882413,5.650945,1.362762],[-4.564215,1.680921,8.668034,-2.271089],[-7.886657,-8.986091,-7.134463,-0.790239],[0.519614,4.349926,-1.661361,6.671653],[5.619928,-2.693912,5.801200,7.981288],[-9.820873,5.423276,2.465175,-2.710511],[-3.053435,8.781540,-1.030027,0.429422],[-1.360460,1.568224,-8.595407,2.636722],[1.281901,-1.647826,0.075906,8.345978],[-5.271728,-0.533326,-1.569677,4.477496],[6.644651,5.435751,2.864613,-5.044250],[3.244540,-3.213417,-1.391834,6.134867],[-4.731387,-5.963601,-3.469282,4.037451],[5.253756,-1.711140,-0.616381,-7.030214],[-1.331805,-8.969933,-9.190569,2.983832],[-5.909533,1.971525,3.206930,-6.781587],[-6.787387,6.616968,-8.134211,9.812595],[-6.516195,6.505472,-0.221417,6.523044],[3.510435,-1.745342,-2.663305,-0.056513],[8.319324,3.451293,-6.293402,-5.460688],[3.674958,9.074112,9.919414,4.201629],[-9.377342,-5.671098,-0.355959,8.862908],[4.643066,7.679626,0.515709,-9.072015],[7.621726,3.721202,-3.863973,-6.669257],[-1.087591,5.407841,-1.656566,7.425533],[-0.103811,0.385473,7.530675,-5.358711],[-4.694750,-4.438453,2.917096,5.138634],[3.545044,6.574347,-6.653115,5.444606],[1.502072,-7.893367,0.986367,8.404570],[-5.151949,-1.153250,6.429911,-9.867158],[-9.303198,-9.214264,-7.818279,-3.895051],[-2.815886,0.864415,8.313907,3.491633],[5.723321,-8.537887,-9.138131,-8.210532],[1.507348,-6.395678,-2.191723,-7.727603],[-2.411979,-2.671556,-1.819893,-9.676539],[-6.648841,-7.455404,-3.898448,1.365670],[4.927343,-6.676331,4.355931,-9.670602],[2.423808,9.894712,-5.961300,-2.419436],[-3.264412,9.750940,5.356098,-0.921821],[6.679504,5.850688,-9.570517,4.295212],[-7.500321,9.009765,2.573333,-2.797179],[9.705754,-6.235446,-4.916093,-2.952110],[1.761329,8.697442,4.291232,1.375131],[-3.385040,-8.243843,7.305511,8.862232],[4.040695,0.500308,-8.510598,3.573551],[5.920397,0.922116,-8.537556,9.319571],[7.636625,-1.638409,-2.818813,0.048185],[-7.059440,3.693206,-6.972885,7.202372],[-7.284757,-0.263118,6.503207,-2.465308],[0.385037,-7.424328,0.476286,9.284457],[-4.252275,8.296656,0.765323,-8.076068],[-6.233747,8.417429,-9.540838,-7.053438],[3.835156,6.899494,-2.038953,-8.848771],[-2.792279,5.584928,-0.276143,-4.528050],[-2.941788,8.195433,3.767817,9.454810],[6.612898,-4.151514,9.943754,-5.539741],[7.285077,4.923147,8.942911,9.517482],[-7.334684,5.867733,2.934288,-8.451317],[3.765577,-7.259503,6.394544,-5.915513],[-8.740084,-0.959891,7.369853,7.876235],[-8.866085,-6.137481,-0.587929,9.982517],[-3.592813,9.379725,0.892473,5.415110],[3.807441,9.779267,5.022236,4.700570],[-8.589024,-0.323129,6.915627,-6.554625],[-0.446123,4.193792,-4.385100,-2.062255],[-3.339690,-3.738245,3.185084,-2.980057],[2.978299,6.241302,-3.150659,9.902453],[-4.619157,-0.254481,8.687547,7.830880],[-6.304772,-1.965744,-5.438305,4.733686],[-5.577959,-0.769097,-3.975931,-3.796071],[-5.412805,-5.437042,-9.953494,4.049366],[9.734829,-2.198589,-1.613077,6.784696],[8.201603,8.639049,-3.795532,-5.641259],[-9.097081,-2.021341,4.433616,7.388894],[-5.117140,-1.860687,5.772003,1.017394],[-6.164018,6.133995,1.107702,8.306721],[-6.322979,-0.352824,5.662275,8.270825],[4.628056,-2.986972,-9.171855,-3.671040],[-9.095312,1.110502,-7.447042,-1.909524],[8.436144,6.778189,-5.324580,4.901762],[4.500697,2.629371,-1.037073,4.853090],[-2.604789,-1.410266,2.320226,6.780303],[-8.618776,4.432708,2.810111,9.385338],[5.821174,-9.239959,9.992646,-2.860048],[9.642290,1.926693,-2.138881,-1.947126],[8.939819,6.452893,8.965658,-0.921719],[6.932348,8.849994,7.826309,1.709857],[2.644671,3.569973,1.445360,-8.842013],[5.549515,-7.199609,-9.655944,6.041995],[-1.354141,-0.827383,6.235141,2.971285],[-3.619429,-7.404390,6.299431,-1.420188],[4.692450,2.846608,9.240337,8.399279],[5.930727,-8.601297,-4.086308,4.686803],[-9.759163,7.834519,-6.560490,-0.430313],[9.706861,4.974632,7.812536,3.309200],[5.460009,2.271926,-3.623046,1.033821],[0.221327,5.836526,0.128902,-8.415797],[-8.243186,-1.836321,-1.448906,5.422848],[8.279332,-4.777973,-2.323271,2.152781],[-9.052275,-3.186581,3.752019,-1.387781],[9.605632,5.815049,5.128566,-0.332539],[9.333059,-9.407114,-5.343150,8.939422],[-5.785082,-1.116248,5.241355,-4.899629],[-6.478422,4.311568,0.575459,-2.112557],[5.959883,6.883586,5.922020,9.229950],[-6.555301,-0.534908,6.053830,-8.378337],[3.876655,8.127312,-1.936567,-5.344435],[-4.376518,4.358772,-2.098030,0.389997],[0.343981,-2.424895,-9.485445,1.772591],[8.985644,0.775677,0.505363,9.727532],[-2.953592,6.419149,-3.762847,-5.479979],[7.114714,-4.916595,4.174610,-2.236091],[0.307492,-3.286029,-1.370948,-1.234195],[9.836245,-4.506121,-6.386563,-4.071588],[-5.211106,0.248743,8.260514,-2.512659],[3.842338,-1.110148,-1.488120,7.591409],[6.733358,8.191626,9.946910,-5.432854],[-0.523370,5.921411,-8.791299,2.824509],[-7.342144,9.320269,-4.501793,-1.843598],[7.186265,9.246919,4.174512,8.821301],[-9.352839,-5.494537,-8.879921,-8.634160],[-1.903328,9.996122,0.462659,6.917522],[-2.244476,-6.913316,-5.346809,-9.981611],[4.601099,1.400752,1.226300,-0.771964],[-9.284945,1.453755,4.831157,0.377690],[-3.765853,-8.728191,2.941650,9.622192],[-2.457337,6.363469,-7.132781,-8.317982],[4.829484,3.840179,-0.604585,-6.728079],[-7.334244,-6.856091,1.328585,9.704693],[-6.051039,-7.309792,-3.685783,9.624612],[1.297312,1.357325,8.327620,2.862719],[-0.154917,2.365684,-9.324200,6.898221],[2.297552,-9.479860,5.717775,-1.361841],[0.232946,4.563819,-5.899033,7.693804],[7.449710,-7.645665,-1.684251,3.981228],[-0.310415,-9.525775,-0.050042,0.988558],[0.231991,0.853794,-7.746751,-0.740766],[-1.748116,2.331053,8.304253,-5.068132],[0.763236,2.126230,-4.740306,-9.455000],[9.802881,-3.133407,-8.520454,2.829155],[7.960129,-7.390440,3.791928,-7.882663],[9.415935,-0.992590,-6.083408,5.311993],[7.241930,6.031560,-6.129217,-1.956677],[-2.192916,2.944985,4.532892,-7.368952],[5.622216,-0.189044,-7.570864,-4.116789],[-1.144102,-7.030241,7.727883,-3.684639],[-3.338244,5.103880,-3.432187,-5.714493],[-7.264272,8.458695,-2.654238,-6.415530],[3.108669,-8.456170,6.821983,3.808966],[-0.008809,-6.813796,2.647379,-1.202615],[0.122397,-9.544204,-9.439549,-3.288682],[6.510522,-1.282288,-0.195352,3.102198],[5.062804,8.570115,4.151626,-9.568106],[-6.396862,2.039704,1.622245,9.550649],[6.973604,-3.886872,-1.566210,-8.626385],[6.892575,5.287328,-9.662219,8.126942],[9.090397,-4.558038,5.577146,-5.106885],[-5.688674,6.656467,8.570446,-6.900232],[3.719240,-1.398559,1.507860,9.223327],[0.299022,-7.726612,1.750124,6.370744],[-6.740408,3.750878,-9.385470,6.696404],[-9.475495,5.957618,1.247915,-7.699991],[-6.351772,-2.029593,-7.812248,-2.593417],[0.883596,3.476778,-2.382465,2.597440],[-8.532634,-5.701538,-2.181888,0.311370],[3.888275,-8.768492,-6.549581,7.701216],[-1.664366,4.227989,0.955374,-4.449432],[-8.739481,8.252026,4.004520,-8.635306],[-8.710781,-1.695840,-1.669264,4.800703],[-7.239911,6.183679,-6.978151,-2.806251],[-9.905874,5.440030,9.897133,-7.935930],[3.993001,3.054660,-9.838178,1.578116],[-2.478900,8.563865,3.774366,-5.437252],[7.584887,8.685081,-4.351257,-1.821429],[4.850666,-3.538677,0.124216,-8.285051],[4.474036,6.628892,3.104900,-5.980862],[6.286265,9.587795,-1.461643,-5.348355],[3.170728,5.835300,2.034279,-8.408165],[-4.866491,-1.112775,-0.923606,-3.302300],[-2.702339,8.406095,-8.570353,2.435716]], dtype = "float32")#candidate|10521|(468, 4)|const|float32
var_10522 = relay.var("var_10522", dtype = "bool", shape = (396,))#candidate|10522|(396,)|var|bool
const_10523 = relay.const([[True],[False],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False]], dtype = "bool")#candidate|10523|(15, 1)|const|bool
call_10519 = relay.TupleGetItem(func_8565_call(relay.reshape(var_10520.astype('float32'), [3, 10, 7]), relay.reshape(const_10521.astype('float32'), [1872, 1]), relay.reshape(var_10522.astype('bool'), [396,]), relay.reshape(const_10523.astype('bool'), [1, 15]), ), 3)
call_10524 = relay.TupleGetItem(func_8570_call(relay.reshape(var_10520.astype('float32'), [3, 10, 7]), relay.reshape(const_10521.astype('float32'), [1872, 1]), relay.reshape(var_10522.astype('bool'), [396,]), relay.reshape(const_10523.astype('bool'), [1, 15]), ), 3)
output = relay.Tuple([call_10489,call_10517,call_10519,var_10520,const_10521,var_10522,const_10523,])
output2 = relay.Tuple([call_10490,call_10518,call_10524,var_10520,const_10521,var_10522,const_10523,])
func_10539 = relay.Function([var_10520,var_10522,], output)
mod['func_10539'] = func_10539
mod = relay.transform.InferType()(mod)
var_10540 = relay.var("var_10540", dtype = "float32", shape = (210,))#candidate|10540|(210,)|var|float32
var_10541 = relay.var("var_10541", dtype = "bool", shape = (396,))#candidate|10541|(396,)|var|bool
output = func_10539(var_10540,var_10541,)
func_10542 = relay.Function([var_10540,var_10541,], output)
mutated_mod['func_10542'] = func_10542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7762_call = mod.get_global_var('func_7762')
func_7763_call = mutated_mod.get_global_var('func_7763')
call_10547 = relay.TupleGetItem(func_7762_call(), 0)
call_10548 = relay.TupleGetItem(func_7763_call(), 0)
func_3732_call = mod.get_global_var('func_3732')
func_3736_call = mutated_mod.get_global_var('func_3736')
var_10565 = relay.var("var_10565", dtype = "uint8", shape = (1, 2400))#candidate|10565|(1, 2400)|var|uint8
const_10566 = relay.const([7,-6,-3,-7,-9,1,10,-3,-10,5,5,2,-5,5,4,-10,-7,-5,5,9,10,-4,-4,3,3,7,2,-3,4,6,-1,-10,5,1,7,4,9,-10,-6,-8,1,-6,-3,-9,7,4,4,-8,-9,-8,6,8,9,-8,-8,-1,-2,-1,-8,-3,-6,4,-10,8,9,10,6,-3,-3,-10,-9,-10,-10,5,9,-2,4,-6,8,6,10,5,3,2,8,6,3,-8,7,10,1,3,-7,10,3,-3,5,10,5,-3,-4,-2,-7,1,-2,-1,2,-8,5,4,-7,2,6,-9,3,-4,1,5,6,1,6,3,-6,-9,-3,8,2,2,-1,9,-3,3,10,-1,6,6,-3,-10,-2,-7,-3,-4,4,-1,7,1,2,3,3,-8,-5,1,-5,-7,1,3,1,-7,5,2,-9,-3,8,-2,-9,2,-9,2,-3,3,2,-7,5,-8,3,4,4,2,-3,-4,9,8,8,-1,8,-6,10,-5,-9,-7,6,4,-7,1,3,4,-1,9,2,-2,-6,3,4,-2,5,-5,1,9,8,-9,7,-4,-4,2,4,8,-4,7,1,3,1,6,-9,-9,9,9,-9,-6,5,1,-2,1,-10,-4,-2,-8,6,4,-1,2,10,5,4,4,-1,-3,4,9,-4,6,1,-8,7,2,-4,-7,-8,6,8,-3,7,-2,-10,6,5,2,5,4,-4,2,-3,-4,5,-4,10,-10,5,-9,-2,-1,-6,-6,2,4,8,-4,7,3,8,3,-5,6,-4,5,9,-6,10,5,-1,10,5,10,3,-3,1,8,10,7,8,-1,-9,-1,8,1,-5,9,-6,-1,2,-8,10,8,2,4,-9,-7,4,5,4,-1,8,8,-9,-1,-2,6,8,2,1,-10,-4,7,4,2,-2,4,5,4,-10,-8,5,-6,8,-3,-5,9,1,-9,-10,3,-8,-1,-9,-8,1,3,10,1,7,-6,8,-4,-3,-3,6,6,3,6,4,2,1,-1,5,8,-5,-4,2,-1,-3,-8,10,-4,1,4,-5,1,4,-7,-4,-10,-1,-2,-4,-8,7,9,-9,-10,-2,-6,-3,-5,6,5,-10,1,-9,6,5,-4,1,-2,4,-1,-6,-7,3,-7,5,1,7,7,-4,-1,9,3,-7,-10,-7,-9,-9,4,-10,1,1,1,3,-3,-10,-5,-2,-9,-1,1,-2,-1,-9,-1,5,4,-5,3,-10,-6,-5,-1,7,-3,9,-8,-6,-1,7,-4,5,8,1,-1,-10,-5,-6,-1,6,-5,9,7,-6,2,2,4,4,-9,-5,-9,-7,-1,1,-8,-5,-4,-8,-2,1,6,10,1,3,-8,-10,5,-1,2,8,1,-5,-10,7,-7,-5,-10,-4,8,10,-8,-5,10,1,8,-4,-5,-3,1,-6,-8,3,8,8,-9,-2,-1,-1,-2,4,2,-10,-8,1,-3,-10,-9,-9,-2,-3,-7,7,-1,-8,-1,-7,-2,-7,10,-10,4,-3,2,-2,-1,7,-7,6,5,4,-8,-6,-6,3,-10,8,-4,10,7,2,4,-7,-6,-2,-7,-4,5,-9,4,8,6,9,-1,8,9,-7,1,-6,5,7,-2,10,4,2,-1,1,8,-9,-9,8,-9,2,9,9,6,7,-1,-7,6,3,2,9,6,-1,-7,4,4,-7,4,6,-4,-7,-9,9,6,5,8,9,1,8,7,-5,-7,-3,-8,10,1,6,4,5,9,-9,3,-10,6,-4,1,-5,10,1,6,-2,9,-6,5,-4,-3,-1,10,3,-1,-2,-4,1,6,6,3,8,-5,-8,8,-3,4,-9,7,-2,-7,-1,1,9,-5,-9,2,-4,-4,5,4,-4,4,-5,-3,1,3,-5,7,-2,-10,5,-8,8,1,5,5,-6,-3,2,-9,-10,-9,7,-10,10,-9,3,-2,-1,-8,8,6,-2,4,4,1,6,-10,5,1,1,8,9,-7,-5,-5,-8,-9,-9,-8,-8,9,-6,6,-9,7,-9,6,-7,6,-7,4,-3,8,8,7,5,-10,6,-4,-7,7,-6,-3,5,4,2,9,-3,-7,5,6,1,2,-4,-4,-9,-6,-3,7,-8,-4,-9,8,-4,-2,1,10,4,1,10,10,8,6,4,-3,-2,-5,-10,2,9,2,2,4,-5,5,-4,-7,-10,6,-4,-10,-4,9,9,-9,-5,-8,4,-4,-9,-4,-3,-5,-4,9,-8,6,6,-9], dtype = "int64")#candidate|10566|(840,)|const|int64
call_10564 = relay.TupleGetItem(func_3732_call(relay.reshape(var_10565.astype('uint8'), [16, 10, 15]), relay.reshape(var_10565.astype('uint8'), [16, 10, 15]), relay.reshape(const_10566.astype('int64'), [840,]), ), 0)
call_10567 = relay.TupleGetItem(func_3736_call(relay.reshape(var_10565.astype('uint8'), [16, 10, 15]), relay.reshape(var_10565.astype('uint8'), [16, 10, 15]), relay.reshape(const_10566.astype('int64'), [840,]), ), 0)
func_5274_call = mod.get_global_var('func_5274')
func_5277_call = mutated_mod.get_global_var('func_5277')
call_10580 = relay.TupleGetItem(func_5274_call(relay.reshape(call_10564.astype('float32'), [300, 8])), 2)
call_10581 = relay.TupleGetItem(func_5277_call(relay.reshape(call_10564.astype('float32'), [300, 8])), 2)
func_8846_call = mod.get_global_var('func_8846')
func_8849_call = mutated_mod.get_global_var('func_8849')
var_10589 = relay.var("var_10589", dtype = "uint32", shape = (2100,))#candidate|10589|(2100,)|var|uint32
call_10588 = relay.TupleGetItem(func_8846_call(relay.reshape(var_10589.astype('uint32'), [10, 14, 15]), relay.reshape(var_10589.astype('uint32'), [10, 14, 15]), ), 3)
call_10590 = relay.TupleGetItem(func_8849_call(relay.reshape(var_10589.astype('uint32'), [10, 14, 15]), relay.reshape(var_10589.astype('uint32'), [10, 14, 15]), ), 3)
bop_10591 = relay.greater(call_10547.astype('bool'), const_10566.astype('bool')) # shape=(3, 1, 840)
bop_10594 = relay.greater(call_10548.astype('bool'), const_10566.astype('bool')) # shape=(3, 1, 840)
func_182_call = mod.get_global_var('func_182')
func_186_call = mutated_mod.get_global_var('func_186')
const_10606 = relay.const([True,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True,False,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,False,True,True,False,False,True,False,False,True,True,True,True,True,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,True,False,True,True,False,False,True,False,False,True,False,True,False,False,False,False,False,False,True,False,False,False,True,True,True,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,False,False,False,False,False,False,False,False,False,True,False,True,False,False,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,False,False,False,True,False,False,True,False,False,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,True,False,False,False], dtype = "bool")#candidate|10606|(396,)|const|bool
call_10605 = func_182_call(relay.reshape(const_10606.astype('bool'), [11, 6, 6]), relay.reshape(const_10606.astype('bool'), [11, 6, 6]), )
call_10607 = func_182_call(relay.reshape(const_10606.astype('bool'), [11, 6, 6]), relay.reshape(const_10606.astype('bool'), [11, 6, 6]), )
bop_10608 = relay.less_equal(call_10547.astype('bool'), call_10588.astype('bool')) # shape=(3, 1, 507)
bop_10611 = relay.less_equal(call_10548.astype('bool'), call_10590.astype('bool')) # shape=(3, 1, 507)
output = relay.Tuple([call_10564,var_10565,call_10580,var_10589,bop_10591,call_10605,const_10606,bop_10608,])
output2 = relay.Tuple([call_10567,var_10565,call_10581,var_10589,bop_10594,call_10607,const_10606,bop_10611,])
func_10612 = relay.Function([var_10565,var_10589,], output)
mod['func_10612'] = func_10612
mod = relay.transform.InferType()(mod)
mutated_mod['func_10612'] = func_10612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10612_call = mutated_mod.get_global_var('func_10612')
var_10614 = relay.var("var_10614", dtype = "uint8", shape = (1, 2400))#candidate|10614|(1, 2400)|var|uint8
var_10615 = relay.var("var_10615", dtype = "uint32", shape = (2100,))#candidate|10615|(2100,)|var|uint32
call_10613 = func_10612_call(var_10614,var_10615,)
output = call_10613
func_10616 = relay.Function([var_10614,var_10615,], output)
mutated_mod['func_10616'] = func_10616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9897_call = mod.get_global_var('func_9897')
func_9898_call = mutated_mod.get_global_var('func_9898')
call_10643 = func_9897_call()
call_10644 = func_9897_call()
output = call_10643
output2 = call_10644
func_10670 = relay.Function([], output)
mod['func_10670'] = func_10670
mod = relay.transform.InferType()(mod)
output = func_10670()
func_10671 = relay.Function([], output)
mutated_mod['func_10671'] = func_10671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7728_call = mod.get_global_var('func_7728')
func_7729_call = mutated_mod.get_global_var('func_7729')
call_10701 = relay.TupleGetItem(func_7728_call(), 0)
call_10702 = relay.TupleGetItem(func_7729_call(), 0)
func_9039_call = mod.get_global_var('func_9039')
func_9040_call = mutated_mod.get_global_var('func_9040')
call_10705 = func_9039_call()
call_10706 = func_9039_call()
func_5662_call = mod.get_global_var('func_5662')
func_5664_call = mutated_mod.get_global_var('func_5664')
call_10708 = func_5662_call()
call_10709 = func_5662_call()
output = relay.Tuple([call_10701,call_10705,call_10708,])
output2 = relay.Tuple([call_10702,call_10706,call_10709,])
func_10711 = relay.Function([], output)
mod['func_10711'] = func_10711
mod = relay.transform.InferType()(mod)
output = func_10711()
func_10712 = relay.Function([], output)
mutated_mod['func_10712'] = func_10712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6471_call = mod.get_global_var('func_6471')
func_6473_call = mutated_mod.get_global_var('func_6473')
call_10732 = func_6471_call()
call_10733 = func_6471_call()
func_6703_call = mod.get_global_var('func_6703')
func_6705_call = mutated_mod.get_global_var('func_6705')
call_10734 = relay.TupleGetItem(func_6703_call(), 0)
call_10735 = relay.TupleGetItem(func_6705_call(), 0)
func_10325_call = mod.get_global_var('func_10325')
func_10326_call = mutated_mod.get_global_var('func_10326')
call_10741 = func_10325_call()
call_10742 = func_10325_call()
output = relay.Tuple([call_10732,call_10734,call_10741,])
output2 = relay.Tuple([call_10733,call_10735,call_10742,])
func_10744 = relay.Function([], output)
mod['func_10744'] = func_10744
mod = relay.transform.InferType()(mod)
output = func_10744()
func_10745 = relay.Function([], output)
mutated_mod['func_10745'] = func_10745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5994_call = mod.get_global_var('func_5994')
func_5996_call = mutated_mod.get_global_var('func_5996')
call_10749 = func_5994_call()
call_10750 = func_5994_call()
output = relay.Tuple([call_10749,])
output2 = relay.Tuple([call_10750,])
func_10776 = relay.Function([], output)
mod['func_10776'] = func_10776
mod = relay.transform.InferType()(mod)
output = func_10776()
func_10777 = relay.Function([], output)
mutated_mod['func_10777'] = func_10777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6948_call = mod.get_global_var('func_6948')
func_6950_call = mutated_mod.get_global_var('func_6950')
call_10794 = relay.TupleGetItem(func_6948_call(), 1)
call_10795 = relay.TupleGetItem(func_6950_call(), 1)
func_7237_call = mod.get_global_var('func_7237')
func_7239_call = mutated_mod.get_global_var('func_7239')
var_10820 = relay.var("var_10820", dtype = "uint32", shape = ())#candidate|10820|()|var|uint32
call_10819 = relay.TupleGetItem(func_7237_call(relay.reshape(var_10820.astype('uint32'), [])), 5)
call_10821 = relay.TupleGetItem(func_7239_call(relay.reshape(var_10820.astype('uint32'), [])), 5)
uop_10822 = relay.cos(call_10794.astype('float32')) # shape=(14, 2, 10)
uop_10824 = relay.cos(call_10795.astype('float32')) # shape=(14, 2, 10)
func_1787_call = mod.get_global_var('func_1787')
func_1791_call = mutated_mod.get_global_var('func_1791')
var_10827 = relay.var("var_10827", dtype = "float32", shape = (1, 1008))#candidate|10827|(1, 1008)|var|float32
const_10828 = relay.const([-4,4,3,-6,5,4,5,-2,-7,-10,10,10,6,6,-3,-6,6,-9,-7,-9,-4,-8,1,10,6,-2,-9,-2,6,-2,5,-8,-9,-1,-3,1,-3,6,8,-1,7,1,-6,2,10,-2,1,-7,-6,7,9,7,-8,6,-1,2,-10,4,7,7,10,-4,9,9,10,-5,5,-10,4,-1,-3,-1,-6,-9,10,2,-7,-1,8,2,-10,-8,8,10,-6,-7,5,-1,4,6], dtype = "uint32")#candidate|10828|(90,)|const|uint32
call_10826 = relay.TupleGetItem(func_1787_call(relay.reshape(var_10827.astype('float32'), [9, 7, 16]), relay.reshape(const_10828.astype('uint32'), [3, 30]), ), 1)
call_10829 = relay.TupleGetItem(func_1791_call(relay.reshape(var_10827.astype('float32'), [9, 7, 16]), relay.reshape(const_10828.astype('uint32'), [3, 30]), ), 1)
output = relay.Tuple([call_10819,var_10820,uop_10822,call_10826,var_10827,const_10828,])
output2 = relay.Tuple([call_10821,var_10820,uop_10824,call_10829,var_10827,const_10828,])
func_10832 = relay.Function([var_10820,var_10827,], output)
mod['func_10832'] = func_10832
mod = relay.transform.InferType()(mod)
mutated_mod['func_10832'] = func_10832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10832_call = mutated_mod.get_global_var('func_10832')
var_10834 = relay.var("var_10834", dtype = "uint32", shape = ())#candidate|10834|()|var|uint32
var_10835 = relay.var("var_10835", dtype = "float32", shape = (1, 1008))#candidate|10835|(1, 1008)|var|float32
call_10833 = func_10832_call(var_10834,var_10835,)
output = call_10833
func_10836 = relay.Function([var_10834,var_10835,], output)
mutated_mod['func_10836'] = func_10836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10744_call = mod.get_global_var('func_10744')
func_10745_call = mutated_mod.get_global_var('func_10745')
call_10841 = relay.TupleGetItem(func_10744_call(), 1)
call_10842 = relay.TupleGetItem(func_10745_call(), 1)
func_5274_call = mod.get_global_var('func_5274')
func_5277_call = mutated_mod.get_global_var('func_5277')
var_10868 = relay.var("var_10868", dtype = "float32", shape = (2400,))#candidate|10868|(2400,)|var|float32
call_10867 = relay.TupleGetItem(func_5274_call(relay.reshape(var_10868.astype('float32'), [300, 8])), 3)
call_10869 = relay.TupleGetItem(func_5277_call(relay.reshape(var_10868.astype('float32'), [300, 8])), 3)
output = relay.Tuple([call_10841,call_10867,var_10868,])
output2 = relay.Tuple([call_10842,call_10869,var_10868,])
func_10886 = relay.Function([var_10868,], output)
mod['func_10886'] = func_10886
mod = relay.transform.InferType()(mod)
mutated_mod['func_10886'] = func_10886
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10887 = relay.var("var_10887", dtype = "float32", shape = (2400,))#candidate|10887|(2400,)|var|float32
func_10886_call = mutated_mod.get_global_var('func_10886')
call_10888 = func_10886_call(var_10887)
output = call_10888
func_10889 = relay.Function([var_10887], output)
mutated_mod['func_10889'] = func_10889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10776_call = mod.get_global_var('func_10776')
func_10777_call = mutated_mod.get_global_var('func_10777')
call_10920 = relay.TupleGetItem(func_10776_call(), 0)
call_10921 = relay.TupleGetItem(func_10777_call(), 0)
output = call_10920
output2 = call_10921
func_10922 = relay.Function([], output)
mod['func_10922'] = func_10922
mod = relay.transform.InferType()(mod)
output = func_10922()
func_10923 = relay.Function([], output)
mutated_mod['func_10923'] = func_10923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7891_call = mod.get_global_var('func_7891')
func_7892_call = mutated_mod.get_global_var('func_7892')
call_10962 = relay.TupleGetItem(func_7891_call(), 0)
call_10963 = relay.TupleGetItem(func_7892_call(), 0)
func_4154_call = mod.get_global_var('func_4154')
func_4158_call = mutated_mod.get_global_var('func_4158')
var_10974 = relay.var("var_10974", dtype = "float64", shape = (55,))#candidate|10974|(55,)|var|float64
const_10975 = relay.const([3.818694,5.919307,-6.694644,-2.302598,-2.334781,-6.768292,-9.653806,5.242910,-0.549426,-2.937977,-5.356890,1.588817,-9.168646,8.245619,2.597687,5.236603,-8.637936,-2.655078,9.786447,8.769954,-0.826172,-5.532596,7.652507,2.523709,-9.142311,0.114946,-4.601877,7.702285,0.612356,6.931614,1.002577,-8.414738,5.102948,5.675009,3.039892,-7.706883,-8.032483,-0.598027,7.150803,8.014913,-9.882292,-7.938531,2.733408,2.931845,-9.750630,-9.731698,9.998320,-4.559119,0.072954,8.434605,-7.142472,0.719840,5.648685,-9.529550,2.182595,-3.838630,1.274744,6.232430,5.419299,2.138752,3.960818,6.829496,-9.161523,1.711741,7.420844,1.972025,8.091202,-8.990047,-0.527314,5.763694,-4.678367,4.074998,-4.919364,6.103498,5.184707,-9.900601,-7.926472,9.662535,5.671286,-9.431793,-0.080704,-3.431335,-6.148494,-9.565002,-0.857065,8.388352,1.284350,-5.443125,3.805509,9.400777,-3.958650,4.659148,-4.073441,-0.880380,3.236801,-7.557953,-6.838904,9.083287,-4.589375,9.583315,1.439714,8.066180,-1.382629,1.861779,5.954011,-6.063344,-5.403270,-5.595379,2.121743,-0.572972], dtype = "float64")#candidate|10975|(110,)|const|float64
call_10973 = func_4154_call(relay.reshape(var_10974.astype('float64'), [1, 5, 11]), relay.reshape(const_10975.astype('float64'), [2, 5, 11]), )
call_10976 = func_4154_call(relay.reshape(var_10974.astype('float64'), [1, 5, 11]), relay.reshape(const_10975.astype('float64'), [2, 5, 11]), )
func_9032_call = mod.get_global_var('func_9032')
func_9035_call = mutated_mod.get_global_var('func_9035')
var_10981 = relay.var("var_10981", dtype = "int16", shape = (64, 4))#candidate|10981|(64, 4)|var|int16
var_10982 = relay.var("var_10982", dtype = "int64", shape = (840,))#candidate|10982|(840,)|var|int64
call_10980 = relay.TupleGetItem(func_9032_call(relay.reshape(var_10981.astype('int16'), [8, 8, 4]), relay.reshape(var_10982.astype('int64'), [840,]), ), 1)
call_10983 = relay.TupleGetItem(func_9035_call(relay.reshape(var_10981.astype('int16'), [8, 8, 4]), relay.reshape(var_10982.astype('int64'), [840,]), ), 1)
output = relay.Tuple([call_10962,call_10973,var_10974,const_10975,call_10980,var_10981,var_10982,])
output2 = relay.Tuple([call_10963,call_10976,var_10974,const_10975,call_10983,var_10981,var_10982,])
func_11004 = relay.Function([var_10974,var_10981,var_10982,], output)
mod['func_11004'] = func_11004
mod = relay.transform.InferType()(mod)
var_11005 = relay.var("var_11005", dtype = "float64", shape = (55,))#candidate|11005|(55,)|var|float64
var_11006 = relay.var("var_11006", dtype = "int16", shape = (64, 4))#candidate|11006|(64, 4)|var|int16
var_11007 = relay.var("var_11007", dtype = "int64", shape = (840,))#candidate|11007|(840,)|var|int64
output = func_11004(var_11005,var_11006,var_11007,)
func_11008 = relay.Function([var_11005,var_11006,var_11007,], output)
mutated_mod['func_11008'] = func_11008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5939_call = mutated_mod.get_global_var('func_5939')
call_11022 = relay.TupleGetItem(func_5938_call(), 0)
call_11023 = relay.TupleGetItem(func_5939_call(), 0)
output = call_11022
output2 = call_11023
func_11028 = relay.Function([], output)
mod['func_11028'] = func_11028
mod = relay.transform.InferType()(mod)
output = func_11028()
func_11029 = relay.Function([], output)
mutated_mod['func_11029'] = func_11029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10325_call = mod.get_global_var('func_10325')
func_10326_call = mutated_mod.get_global_var('func_10326')
call_11035 = func_10325_call()
call_11036 = func_10325_call()
output = relay.Tuple([call_11035,])
output2 = relay.Tuple([call_11036,])
func_11046 = relay.Function([], output)
mod['func_11046'] = func_11046
mod = relay.transform.InferType()(mod)
output = func_11046()
func_11047 = relay.Function([], output)
mutated_mod['func_11047'] = func_11047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6173_call = mod.get_global_var('func_6173')
func_6175_call = mutated_mod.get_global_var('func_6175')
call_11066 = func_6173_call()
call_11067 = func_6173_call()
func_4113_call = mod.get_global_var('func_4113')
func_4116_call = mutated_mod.get_global_var('func_4116')
const_11070 = relay.const([[-2,-8,2,9,-5,1,-2,-10,-6,-4,5,-9,-10,-8,-4,9,-5,-6,-4,-4,-3,-2,6,6,5,6,-10,10,3,-4,-2,2,-9,-6,-1,-1,5,-1,-5,4,9,-1,-6,-8,9,-3,6,-8,-4,-9,7,9,-3,-5,-9,2,1,-6,4,-6,-7,-4,4,9,10,-3,8,-9,6,3,2,-3,9,-10,5,-6,6,-7,-5,8,-4,10,-7,-5,2,-6,1,9,-9,3,-6,-10,10,-3,-6,10,-6,-2,-1,3,2,10,-1,5,2,5,8,10,-5,-5,-8,8,9,-4,-6,-4,10,-4,-4,10,9,-6,3,7,1,-8,8,10,6,8,2,-10,7,-3,3,9,-1,8,-10,-3,-8,-1,-6,4,6,-4,5,3,8,-2,-9,2,5,7,7,-8,2,-1,-10,-10,8,-7,8,4,-3,-8,9,-6,9,2,3,1,9,4,7,-6,-8,8,2,-3,-8,1,10,-2,9,7,3,-9,-9,2,9,-3,-2,4,-4,-2,7,-10,9,5,5,3,-9,-2,5,4,-3,-10,9,10,-10,-6,4,-3,-9,2,-2,3,7,-10],[9,-8,-3,7,2,-7,-2,1,-10,-10,7,-2,6,2,1,8,8,-2,4,-4,9,-1,4,-10,8,-3,3,-4,1,4,8,1,8,8,3,8,-5,6,3,-6,-5,6,4,-6,-7,-8,2,10,5,4,2,-3,-3,6,4,-6,1,-4,3,-2,2,-5,3,6,7,-7,2,-6,10,2,4,-10,2,-1,-6,7,-7,4,-2,-8,-10,8,9,-8,5,-1,-10,5,-5,-8,3,10,-10,10,5,-10,4,-1,-9,-2,-1,-5,-3,2,9,10,-7,-2,5,8,-9,-6,-6,8,6,-2,-2,-7,-7,5,-8,10,5,2,-3,1,1,-8,4,4,7,-8,-3,4,-3,8,5,-7,-9,2,1,5,-3,-7,-1,9,-7,7,-2,-1,-1,6,-6,-6,-2,-8,-4,-5,6,-3,2,-2,-1,-10,1,7,8,-8,6,1,2,3,10,2,9,-2,-1,2,5,-4,3,8,3,-8,-10,9,8,-8,7,6,-9,-8,7,2,-2,-8,-6,-8,2,9,7,-6,9,3,5,-3,10,-5,-1,-8,-3,-10,5,-9,-6,-1,-6,7,-2,-3],[-2,1,6,-8,3,10,4,-7,7,-10,-6,-5,-7,-10,-5,-5,-7,-10,4,-10,5,7,9,10,9,9,10,-10,10,-7,-2,1,-3,-2,10,6,-1,5,-6,-6,-7,-2,2,-8,-3,7,-9,5,-1,9,-1,7,7,-4,10,-9,6,6,3,-2,10,10,-10,-3,3,2,-8,-6,10,-9,-1,-7,-10,-6,-8,-9,-8,2,-5,-6,-9,-2,7,6,-9,10,-3,-8,-2,6,-3,-10,6,-8,7,9,4,2,1,-1,-5,2,-7,-3,-5,9,-5,-10,9,10,-3,1,-2,1,3,6,4,-5,10,-10,-8,4,5,2,3,-1,1,-6,-5,6,10,5,2,2,10,9,-10,9,9,1,-3,8,4,-9,-2,8,-9,-5,5,-4,-1,10,6,-7,1,6,-2,-10,-10,-5,3,4,8,-4,-7,7,9,-7,7,9,4,3,-10,2,1,-10,-3,-8,-2,-4,-1,6,8,-5,9,-4,9,-1,-10,7,-10,-6,1,-4,6,-3,8,-7,5,1,5,-1,1,-1,2,-2,5,7,-4,1,8,-7,3,3,5,4,-7,4,4,1],[-5,2,3,-8,-10,-8,-2,5,8,-3,-1,-5,-1,-10,-6,5,-8,-5,-6,-9,-1,5,2,1,9,3,1,2,-8,-9,5,-10,-10,-3,8,-3,9,-4,-9,8,-9,9,10,-5,4,-5,-9,4,-7,-6,-9,6,4,-8,7,10,-9,-7,2,9,8,-7,-6,4,7,8,6,5,-6,-4,1,8,-7,-10,8,7,3,3,-4,-3,-7,-1,7,-7,-1,7,-7,3,-1,-2,-4,7,2,7,4,-9,2,-8,-7,3,5,9,4,-5,7,-6,-8,-8,-10,6,-4,-9,-6,5,-9,9,-8,-8,-2,-7,-2,-8,5,-1,-1,-3,4,1,-6,-3,-7,-10,3,-9,-3,-4,1,-5,7,3,5,-1,7,-10,10,-1,8,-4,-1,7,-9,-9,10,9,2,-5,8,-7,-10,10,-2,9,-2,2,7,-7,8,-9,2,10,-9,-4,-1,-4,9,2,-4,-1,7,-2,-3,-1,7,-3,-7,4,6,-3,-8,-9,-2,6,6,-4,1,7,7,6,9,2,10,2,-1,-4,-3,-5,8,10,-1,6,2,-5,-3,-2,8,-8,9,4,-4,-10]], dtype = "uint16")#candidate|11070|(4, 220)|const|uint16
call_11069 = relay.TupleGetItem(func_4113_call(relay.reshape(const_11070.astype('uint16'), [10, 8, 11]), relay.reshape(const_11070.astype('uint16'), [10, 8, 11]), ), 0)
call_11071 = relay.TupleGetItem(func_4116_call(relay.reshape(const_11070.astype('uint16'), [10, 8, 11]), relay.reshape(const_11070.astype('uint16'), [10, 8, 11]), ), 0)
bop_11081 = relay.floor_divide(call_11066.astype('float64'), const_11070.astype('float64')) # shape=(3, 4, 220)
bop_11084 = relay.floor_divide(call_11067.astype('float64'), const_11070.astype('float64')) # shape=(3, 4, 220)
output = relay.Tuple([call_11069,bop_11081,])
output2 = relay.Tuple([call_11071,bop_11084,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

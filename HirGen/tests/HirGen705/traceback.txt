==========mod==========
#[version = "0.0.5"]
def @func_9713(%var_9711: Tensor[(2, 440), uint16]) -> (Tensor[(3, 1, 1), float32], Tensor[(3, 1, 1), float64], Tensor[(10, 8, 11), uint16], Tensor[(2, 440), uint16]) {
  %0 = @func_7762() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %1 = @func_9116() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %2 = cast(%var_9711, dtype="uint16") /* ty=Tensor[(2, 440), uint16] */;
  %3 = cast(%var_9711, dtype="uint16") /* ty=Tensor[(2, 440), uint16] */;
  %4 = reshape(%2, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
  %5 = reshape(%3, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
  %6 = @func_4113(%4, %5) /* ty=(Tensor[(10, 8, 11), uint16],) */;
  %7 = %0.0;
  %8 = %1.0;
  %9 = %6.0;
  (%7, %8, %9, %var_9711)
}

def @func_8344(%var_8312: Tensor[(15, 13, 12), float64], %var_8331: Tensor[(33), float64], %var_8335: Tensor[(280), float64]) -> (Tensor[(15, 13, 12), int16], Tensor[(6, 14, 13), uint32], Tensor[(33), float64], Tensor[(1092, 1), uint32], Tensor[(14, 2, 10), bool], Tensor[(280), float64], Tensor[(1092), uint32]) {
  %10 = @func_6703() /* ty=(Tensor[(15, 13, 12), float64],) */;
  %11 = %10.0;
  %12 = cast(%var_8312, dtype="int16") /* ty=Tensor[(15, 13, 12), int16] */;
  %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%11, dtype="int16") /* ty=Tensor[(15, 13, 12), int16] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %16 = cast(%var_8331, dtype="float64") /* ty=Tensor[(33), float64] */;
  %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(1092, 1), uint32] */, dtype="uint32") /* ty=Tensor[(1092, 1), uint32] */;
  %18 = reshape(%16, newshape=[3, 11, 1]) /* ty=Tensor[(3, 11, 1), float64] */;
  %19 = reshape(%17, newshape=[7, 156]) /* ty=Tensor[(7, 156), uint32] */;
  %20 = @func_5621(%18, %19) /* ty=(Tensor[(6, 14, 13), uint32], Tensor[(7, 156), uint32], float32, Tensor[(507), float64], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(3, 11, 13), float64]) */;
  %21 = cast(%var_8335, dtype="float64") /* ty=Tensor[(280), float64] */;
  %22 = reshape(%21, newshape=[14, 2, 10]) /* ty=Tensor[(14, 2, 10), float64] */;
  %23 = @func_6825(%22) /* ty=(Tensor[(14, 2, 10), bool],) */;
  %24 = %20.0;
  %25 = cast(%24, dtype="uint32") /* ty=Tensor[(6, 14, 13), uint32] */;
  %26 = reshape(%25, newshape=[1092]) /* ty=Tensor[(1092), uint32] */;
  %27 = @func_6240(%26) /* ty=(Tensor[(3, 1, 1), float32], Tensor[(6, 14, 13), uint32], Tensor[(1092), uint32]) */;
  %28 = minimum(%14, %15) /* ty=Tensor[(15, 13, 12), int16] */;
  %29 = %23.0;
  %30 = %27.2;
  (%28, %24, %var_8331, meta[relay.Constant][0] /* ty=Tensor[(1092, 1), uint32] */, %29, %var_8335, %30)
}

def @func_9116() -> (Tensor[(3, 1, 1), float64],) {
  %31 = @func_7891() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %32 = %31.0;
  (%32,)
}

def @func_10922() -> Tensor[(3, 1, 1), float64] {
  %33 = @func_10776() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %33.0
}

def @func_3846(%var_3825: Tensor[(15, 13, 4), float32]) -> (Tensor[(15, 13, 4), float32], Tensor[(16, 10, 15), float32], Tensor[(980), uint64], Tensor[(2400), float32]) {
  %34 = cast(%var_3825, dtype="float32") /* ty=Tensor[(15, 13, 4), float32] */;
  %35 = cast(meta[relay.Constant][1] /* ty=Tensor[(980), uint64] */, dtype="uint64") /* ty=Tensor[(980), uint64] */;
  %36 = cast(meta[relay.Constant][2] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %37 = reshape(%35, newshape=[14, 5, 14]) /* ty=Tensor[(14, 5, 14), uint64] */;
  %38 = reshape(%36, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %39 = @func_2840(%37, %38) /* ty=(Tensor[(14, 5, 14), bool], Tensor[(16, 10, 15), float32], Tensor[(2400), float32]) */;
  %40 = asin(%34) /* ty=Tensor[(15, 13, 4), float32] */;
  %41 = %39.1;
  (%40, %41, meta[relay.Constant][1] /* ty=Tensor[(980), uint64] */, meta[relay.Constant][2] /* ty=Tensor[(2400), float32] */)
}

def @func_6758() -> (Tensor[(3, 1, 1), float64],) {
  %42 = @func_5994() /* ty=Tensor[(3, 1, 1), float64] */;
  (%42,)
}

def @func_7762() -> (Tensor[(3, 1, 1), float32],) {
  %43 = @func_6948() /* ty=(Tensor[(3, 1, 1), float32], Tensor[(14, 2, 10), float32]) */;
  %44 = %43.0;
  (%44,)
}

def @func_1890(%var_1854: Tensor[(1, 13, 12), float32], %var_1859: Tensor[(2, 420), int64]) -> (Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64], Tensor[(?, 13, 12), float64]) {
  %45 = cast(%var_1859, dtype="int64") /* ty=Tensor[(2, 420), int64] */;
  %46 = reshape(%45, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), int64] */;
  %47 = cast(%var_1854, dtype="float32") /* ty=Tensor[(1, 13, 12), float32] */;
  %48 = log2(%47) /* ty=Tensor[(1, 13, 12), float32] */;
  %49 = cast(%var_1854, dtype="float64") /* ty=Tensor[(1, 13, 12), float64] */;
  %50 = shape_of(%48, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%48, dtype="float64") /* ty=Tensor[(1, 13, 12), float64] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %53 = @func_442(%46) /* ty=Tensor[(4, 14, 15), bool] */;
  %54 = floor_mod(%51, %52) /* ty=Tensor[(?, 13, 12), float64] */;
  (%53, %var_1859, %54)
}

def @func_8565(%var_8480: Tensor[(3, 10, 7), float32], %var_8493: Tensor[(1872, 1), float32], %var_8494: Tensor[(396), bool], %var_8526: Tensor[(1, 15), bool]) -> (Tensor[(3, 10, 7), bool], Tensor[(4, 14, 15), float64], Tensor[(396), bool], Tensor[(5, 12, 15), bool], Tensor[(1, 15), bool], Tensor[(1872, 90), uint64], Tensor[(14, 2, 10), float32], Tensor[(3, 10, 7), float32], Tensor[(14, 2, 10), float32], Tensor[(14, 2, 10), float32]) {
  %55 = @func_7762() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %56 = %55.0;
  %57 = cast(%56, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %58 = cast(%var_8480, dtype="bool") /* ty=Tensor[(3, 10, 7), bool] */;
  %59 = cast(%var_8493, dtype="float32") /* ty=Tensor[(1872, 1), float32] */;
  %60 = cast(%var_8494, dtype="bool") /* ty=Tensor[(396), bool] */;
  %61 = cast(meta[relay.Constant][3] /* ty=Tensor[(90), uint32] */, dtype="uint32") /* ty=Tensor[(90), uint32] */;
  %62 = reshape(%59, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float32] */;
  %63 = reshape(%60, newshape=[66, 6]) /* ty=Tensor[(66, 6), bool] */;
  %64 = reshape(%61, newshape=[90]) /* ty=Tensor[(90), uint32] */;
  %65 = @func_1111(%62, %63, %64) /* ty=(Tensor[(12, 13, 12), float32], Tensor[(4, 14, 15), bool], Tensor[(840), int64], Tensor[(11, 6, 6), bool], Tensor[(66, 6), bool], Tensor[(10, 9, ?), bool], Tensor[(90), uint32], Tensor[(4, 14, 15), float64], Tensor[(11, 6, 6), bool]) */;
  %66 = cast(%var_8526, dtype="bool") /* ty=Tensor[(1, 15), bool] */;
  %67 = reshape(%66, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), bool] */;
  %68 = @func_2771(%67) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) */;
  %69 = cast(meta[relay.Constant][3] /* ty=Tensor[(90), uint32] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %70 = cast(%var_8493, dtype="uint64") /* ty=Tensor[(1872, 1), uint64] */;
  %71 = @func_7380() /* ty=(Tensor[(14, 2, 10), float32],) */;
  %72 = cast(%var_8480, dtype="float32") /* ty=Tensor[(3, 10, 7), float32] */;
  %73 = @func_7017() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
  %74 = @func_7145() /* ty=(Tensor[(14, 2, 10), float32],) */;
  %75 = greater(%57, %58) /* ty=Tensor[(3, 10, 7), bool] */;
  %76 = %65.7;
  %77 = %68.0;
  %78 = bitwise_and(%69, %70) /* ty=Tensor[(1872, 90), uint64] */;
  %79 = %71.0;
  %80 = log10(%72) /* ty=Tensor[(3, 10, 7), float32] */;
  %81 = %73.0;
  %82 = %74.0;
  (%75, %76, %var_8494, %77, %var_8526, %78, %79, %80, %81, %82)
}

def @func_182(%var_147: Tensor[(11, 6, 6), bool], %var_148: Tensor[(11, 6, 6), bool]) -> Tensor[(11, 6, 6), bool] {
  %83 = cast(%var_148, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %84 = shape_of(%var_147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%var_147, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%85, %86) /* ty=Tensor[(11, 6, 6), bool] */
}

def @func_6410(%var_6335: Tensor[(3, 11, 6), float64], %var_6375: Tensor[(156), float32]) -> (Tensor[(3, 11, 6), bool], Tensor[(156), float32], Tensor[(840), int64], Tensor[(3, 2, 420), float32], Tensor[(2, 420), int64], Tensor[(3, 11, 6), float64]) {
  %87 = @func_6173() /* ty=Tensor[(3, 1, 1), float64] */;
  %88 = cast(%87, dtype="uint16") /* ty=Tensor[(3, 1, 1), uint16] */;
  %89 = cast(%var_6335, dtype="uint16") /* ty=Tensor[(3, 11, 6), uint16] */;
  %90 = subtract(%88, %89) /* ty=Tensor[(3, 11, 6), uint16] */;
  %91 = cast(%90, dtype="float64") /* ty=Tensor[(3, 11, 6), float64] */;
  %92 = sqrt(%91) /* ty=Tensor[(3, 11, 6), float64] */;
  %93 = cast(%92, dtype="bool") /* ty=Tensor[(3, 11, 6), bool] */;
  %94 = shape_of(%var_6335, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(%var_6335, dtype="bool") /* ty=Tensor[(3, 11, 6), bool] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %97 = cast(%var_6375, dtype="float32") /* ty=Tensor[(156), float32] */;
  %98 = cast(meta[relay.Constant][4] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
  %99 = reshape(%97, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), float32] */;
  %100 = reshape(%98, newshape=[2, 420]) /* ty=Tensor[(2, 420), int64] */;
  %101 = @func_1890(%99, %100) /* ty=(Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64], Tensor[(?, 13, 12), float64]) */;
  %102 = %101.1;
  %103 = cast(%102, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
  %104 = cast(%87, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
  %105 = cast(%var_6375, dtype="float32") /* ty=Tensor[(156), float32] */;
  %106 = cast(%102, dtype="int64") /* ty=Tensor[(2, 420), int64] */;
  %107 = reshape(%105, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), float32] */;
  %108 = reshape(%106, newshape=[2, 420]) /* ty=Tensor[(2, 420), int64] */;
  %109 = @func_1890(%107, %108) /* ty=(Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64], Tensor[(?, 13, 12), float64]) */;
  %110 = cast(%92, dtype="float64") /* ty=Tensor[(3, 11, 6), float64] */;
  %111 = not_equal(%95, %96) /* ty=Tensor[(3, 11, 6), bool] */;
  %112 = minimum(%103, %104) /* ty=Tensor[(3, 2, 420), float32] */;
  %113 = %109.1;
  %114 = log2(%110) /* ty=Tensor[(3, 11, 6), float64] */;
  (%111, %var_6375, meta[relay.Constant][4] /* ty=Tensor[(840), int64] */, %112, %113, %114)
}

def @func_5898() -> Tensor[(3, 1, 1), float64] {
  @func_5541() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_10016() -> Tensor[(3, 1, 1), float64] {
  %115 = @func_8460() /* ty=(Tensor[(4, 14, 15), float64], Tensor[(3, 1, 1), float64]) */;
  %115.1
}

def @func_5662() -> Tensor[(14, 2, 10), float64] {
  %116 = cast(meta[relay.Constant][5] /* ty=Tensor[(14, 2, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 2, 10), float64] */;
  log(%116) /* ty=Tensor[(14, 2, 10), float64] */
}

def @func_2840(%var_2827: Tensor[(14, 5, 14), uint64], %var_2838: Tensor[(2400), float32]) -> (Tensor[(14, 5, 14), bool], Tensor[(16, 10, 15), float32], Tensor[(2400), float32]) {
  %117 = cast(%var_2827, dtype="bool") /* ty=Tensor[(14, 5, 14), bool] */;
  %118 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(14, 5, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 5, 14), uint64] */, dtype="bool") /* ty=Tensor[(14, 5, 14), bool] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %121 = cast(%var_2838, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %122 = reshape(%121, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), float32] */;
  %123 = not_equal(%119, %120) /* ty=Tensor[(14, 5, 14), bool] */;
  %124 = @func_1940(%122) /* ty=Tensor[(16, 10, 15), float32] */;
  (%123, %124, %var_2838)
}

def @func_5541() -> Tensor[(3, 1, 1), float64] {
  %125 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 1, 1), float64] */, dtype="float64") /* ty=Tensor[(3, 1, 1), float64] */;
  sqrt(%125) /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_10325() -> Tensor[(3, 1, 1), float32] {
  %126 = @func_9733() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %126.0
}

def @func_5274(%var_5260: Tensor[(300, 8), float32]) -> (Tensor[(15, 13, 5), float64], Tensor[(15, 13, 5), float64], Tensor[(16, 10, 15), float32], Tensor[(300, 8), float32]) {
  %127 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(15, 13, 5), float64] */;
  %128 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(15, 13, 5), float64] */;
  %129 = cast(%var_5260, dtype="float32") /* ty=Tensor[(300, 8), float32] */;
  %130 = reshape(%129, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), float32] */;
  %131 = cos(%127) /* ty=Tensor[(15, 13, 5), float64] */;
  %132 = acosh(%128) /* ty=Tensor[(15, 13, 5), float64] */;
  %133 = @func_1940(%130) /* ty=Tensor[(16, 10, 15), float32] */;
  (%131, %132, %133, %var_5260)
}

def @func_7120(%var_7088: Tensor[(8, 10, 14), uint8], %var_7089: Tensor[(8, 10, 14), uint8]) -> (Tensor[(8, 10, 14), uint8], Tensor[(4, 14, 15), bool], Tensor[(840), int64], float32, Tensor[(33), float64], Tensor[(1092), uint32], Tensor[(9, 1, 14), float32], Tensor[(63, 2), float32], float32, Tensor[(180), uint16]) {
  %134 = cast(%var_7089, dtype="uint8") /* ty=Tensor[(8, 10, 14), uint8] */;
  %135 = shape_of(%var_7088, dtype="int32") /* ty=Tensor[(3), int32] */;
  %136 = cast(%var_7088, dtype="uint8") /* ty=Tensor[(8, 10, 14), uint8] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %138 = cast(meta[relay.Constant][9] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
  %139 = reshape(%138, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), int64] */;
  %140 = cast(meta[relay.Constant][10] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %141 = cast(meta[relay.Constant][11] /* ty=Tensor[(1092), uint32] */, dtype="uint32") /* ty=Tensor[(1092), uint32] */;
  %142 = reshape(%140, newshape=[3, 11, 1]) /* ty=Tensor[(3, 11, 1), float64] */;
  %143 = reshape(%141, newshape=[7, 156]) /* ty=Tensor[(7, 156), uint32] */;
  %144 = @func_5621(%142, %143) /* ty=(Tensor[(6, 14, 13), uint32], Tensor[(7, 156), uint32], float32, Tensor[(507), float64], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(3, 11, 13), float64]) */;
  %145 = cast(meta[relay.Constant][12] /* ty=Tensor[(63, 2), float32] */, dtype="float32") /* ty=Tensor[(63, 2), float32] */;
  %146 = reshape(%145, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
  %147 = @func_6616(%146) /* ty=(Tensor[(9, 1, 14), float32],) */;
  %148 = cast(meta[relay.Constant][13] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %149 = reshape(%148, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint16] */;
  %150 = @func_6125(%149) /* ty=(Tensor[(3, 1, 1), float64], Tensor[(2400), float32], float32, Tensor[(2400), float32], Tensor[(3, 4, 15), int8]) */;
  %151 = minimum(%136, %137) /* ty=Tensor[(8, 10, 14), uint8] */;
  %152 = @func_442(%139) /* ty=Tensor[(4, 14, 15), bool] */;
  %153 = %144.2;
  %154 = %147.0;
  %155 = %150.2;
  (%151, %152, meta[relay.Constant][9] /* ty=Tensor[(840), int64] */, %153, meta[relay.Constant][10] /* ty=Tensor[(33), float64] */, meta[relay.Constant][11] /* ty=Tensor[(1092), uint32] */, %154, meta[relay.Constant][12] /* ty=Tensor[(63, 2), float32] */, %155, meta[relay.Constant][13] /* ty=Tensor[(180), uint16] */)
}

def @func_2462(%var_2405: float32, %var_2423: Tensor[(2400), float32]) -> (Tensor[(11, 14, 9), float32], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64]) {
  %156 = cast(%var_2405, dtype="float32") /* ty=float32 */;
  %157 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 14, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 14, 9), float32] */;
  %158 = cast(%var_2423, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %159 = reshape(%158, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), float32] */;
  %160 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 420), int64] */, dtype="int64") /* ty=Tensor[(2, 420), int64] */;
  %161 = reshape(%160, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), int64] */;
  %162 = floor_mod(%156, %157) /* ty=Tensor[(11, 14, 9), float32] */;
  %163 = @func_1940(%159) /* ty=Tensor[(16, 10, 15), float32] */;
  %164 = @func_442(%161) /* ty=Tensor[(4, 14, 15), bool] */;
  (%162, %163, %var_2423, %164, meta[relay.Constant][15] /* ty=Tensor[(2, 420), int64] */)
}

def @func_9039() -> Tensor[(3, 1, 1), float64] {
  %165 = @func_7582() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %165.0
}

def @func_8439() -> (Tensor[(3, 1, 1), float64],) {
  %166 = @func_6758() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %167 = %166.0;
  (%167,)
}

def @func_9126() -> (Tensor[(3, 1, 1), float64],) {
  %168 = @func_9039() /* ty=Tensor[(3, 1, 1), float64] */;
  (%168,)
}

def @func_6672() -> (Tensor[(14, 2, 10), float64], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(945), uint64], Tensor[(2400), float32], Tensor[(180), uint16]) {
  %169 = cast(meta[relay.Constant][16] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %170 = reshape(%169, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), float32] */;
  %171 = cast(meta[relay.Constant][17] /* ty=Tensor[(945), uint64] */, dtype="uint64") /* ty=Tensor[(945), uint64] */;
  %172 = cast(meta[relay.Constant][17] /* ty=Tensor[(945), uint64] */, dtype="uint64") /* ty=Tensor[(945), uint64] */;
  %173 = reshape(%171, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), uint64] */;
  %174 = reshape(%172, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), uint64] */;
  %175 = @func_4684(%173, %174) /* ty=(Tensor[(9, 15, 7), uint64],) */;
  %176 = %175.0;
  %177 = cast(%176, dtype="uint64") /* ty=Tensor[(9, 15, 7), uint64] */;
  %178 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(945), uint64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %179 = cast(meta[relay.Constant][17] /* ty=Tensor[(945), uint64] */, dtype="uint64") /* ty=Tensor[(945), uint64] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %181 = cast(meta[relay.Constant][18] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %182 = reshape(%181, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint16] */;
  %183 = @func_6125(%182) /* ty=(Tensor[(3, 1, 1), float64], Tensor[(2400), float32], float32, Tensor[(2400), float32], Tensor[(3, 4, 15), int8]) */;
  %184 = @func_6471() /* ty=Tensor[(14, 2, 10), float64] */;
  %185 = @func_1940(%170) /* ty=Tensor[(16, 10, 15), float32] */;
  %186 = subtract(%179, %180) /* ty=Tensor[(945), uint64] */;
  %187 = %183.3;
  (%184, %185, meta[relay.Constant][16] /* ty=Tensor[(2400), float32] */, %186, %187, meta[relay.Constant][18] /* ty=Tensor[(180), uint16] */)
}

def @func_6471() -> Tensor[(14, 2, 10), float64] {
  @func_5662() /* ty=Tensor[(14, 2, 10), float64] */
}

def @func_7370() -> Tensor[(3, 1, 1), float64] {
  %188 = @func_7017() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
  %188.1
}

def @func_6616(%var_6604: Tensor[(9, 1, 14), float32]) -> (Tensor[(9, 1, 14), float32],) {
  %189 = cast(%var_6604, dtype="float32") /* ty=Tensor[(9, 1, 14), float32] */;
  %190 = acosh(%189) /* ty=Tensor[(9, 1, 14), float32] */;
  (%190,)
}

def @func_6049() -> (Tensor[(3, 1, 1), float64],) {
  %191 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
  (%191,)
}

def @func_9733() -> (Tensor[(3, 1, 1), float32],) {
  %192 = @func_7667() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float32]) */;
  %193 = %192.1;
  (%193,)
}

def @func_6703() -> (Tensor[(15, 13, 12), float64],) {
  %194 = cast(-2.186f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %195 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(15, 13, 12), float64] */;
  %196 = floor_divide(%194, %195) /* ty=Tensor[(15, 13, 12), float64] */;
  (%196,)
}

def @func_1787(%var_1771: Tensor[(9, 7, 16), float32], %var_1785: Tensor[(3, 30), uint32]) -> (Tensor[(9, 7, 16), float32], Tensor[(10, 9, ?), bool], Tensor[(3, 30), uint32]) {
  %197 = cast(%var_1771, dtype="float32") /* ty=Tensor[(9, 7, 16), float32] */;
  %198 = cast(%var_1785, dtype="uint32") /* ty=Tensor[(3, 30), uint32] */;
  %199 = reshape(%198, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), uint32] */;
  %200 = @func_555(%199) /* ty=(Tensor[(10, 9, ?), bool],) */;
  %201 = atan(%197) /* ty=Tensor[(9, 7, 16), float32] */;
  %202 = %200.0;
  (%201, %202, %var_1785)
}

def @func_8460() -> (Tensor[(4, 14, 15), float64], Tensor[(3, 1, 1), float64]) {
  %203 = @func_7697() /* ty=(Tensor[(3, 1, 1), float64], float32, Tensor[(1, 2400), float32], Tensor[(4, 14, 15), float64]) */;
  %204 = @func_7017() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
  %205 = %203.3;
  %206 = %204.1;
  (%205, %206)
}

def @func_9406(%var_9349: Tensor[(11, 4, 8), int8], %var_9350: Tensor[(11, 4, 8), int8]) -> (Tensor[(11, 4, 8), bool], Tensor[(5, 12, 15), bool], Tensor[(15), bool], Tensor[(14, 2, 10), float64], Tensor[(5, 12, 15), bool]) {
  %207 = cast(%var_9350, dtype="bool") /* ty=Tensor[(11, 4, 8), bool] */;
  %208 = shape_of(%var_9349, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%var_9349, dtype="bool") /* ty=Tensor[(11, 4, 8), bool] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %211 = cast(meta[relay.Constant][20] /* ty=Tensor[(15), bool] */, dtype="bool") /* ty=Tensor[(15), bool] */;
  %212 = reshape(%211, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), bool] */;
  %213 = @func_2771(%212) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) */;
  %214 = cast(meta[relay.Constant][20] /* ty=Tensor[(15), bool] */, dtype="bool") /* ty=Tensor[(15), bool] */;
  %215 = reshape(%214, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), bool] */;
  %216 = @func_2771(%215) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) */;
  %217 = less_equal(%209, %210) /* ty=Tensor[(11, 4, 8), bool] */;
  %218 = %213.1;
  %219 = @func_5662() /* ty=Tensor[(14, 2, 10), float64] */;
  %220 = %216.0;
  (%217, %218, meta[relay.Constant][20] /* ty=Tensor[(15), bool] */, %219, %220)
}

def @func_2771(%var_2753: Tensor[(1, 1, 15), bool]) -> (Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) {
  %221 = cast(%var_2753, dtype="bool") /* ty=Tensor[(1, 1, 15), bool] */;
  %222 = cast(meta[relay.Constant][21] /* ty=Tensor[(5, 12, 15), bool] */, dtype="bool") /* ty=Tensor[(5, 12, 15), bool] */;
  %223 = cast(%var_2753, dtype="bool") /* ty=Tensor[(1, 1, 15), bool] */;
  %224 = cast(meta[relay.Constant][21] /* ty=Tensor[(5, 12, 15), bool] */, dtype="bool") /* ty=Tensor[(5, 12, 15), bool] */;
  %225 = logical_or(%221, %222) /* ty=Tensor[(5, 12, 15), bool] */;
  %226 = greater_equal(%223, %224) /* ty=Tensor[(5, 12, 15), bool] */;
  (%225, %226)
}

def @func_5938() -> (Tensor[(14, 2, 10), float32],) {
  %227 = @func_5662() /* ty=Tensor[(14, 2, 10), float64] */;
  %228 = cast(%227, dtype="float32") /* ty=Tensor[(14, 2, 10), float32] */;
  %229 = asin(%228) /* ty=Tensor[(14, 2, 10), float32] */;
  (%229,)
}

def @func_6948() -> (Tensor[(3, 1, 1), float32], Tensor[(14, 2, 10), float32]) {
  %230 = @func_6434() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %231 = @func_6186() /* ty=Tensor[(14, 2, 10), float64] */;
  %232 = cast(%231, dtype="float32") /* ty=Tensor[(14, 2, 10), float32] */;
  %233 = %230.0;
  %234 = atan(%232) /* ty=Tensor[(14, 2, 10), float32] */;
  (%233, %234)
}

def @func_7237(%var_7231: uint32) -> (Tensor[(3, 1, 180), int16], Tensor[(5, 12, 15), bool], uint32, Tensor[(36, 26), uint32], Tensor[(1, 15), bool], Tensor[(156), float32], Tensor[(840), int64]) {
  %235 = @func_6672() /* ty=(Tensor[(14, 2, 10), float64], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(945), uint64], Tensor[(2400), float32], Tensor[(180), uint16]) */;
  %236 = %235.5;
  %237 = @func_6173() /* ty=Tensor[(3, 1, 1), float64] */;
  %238 = cast(%236, dtype="int16") /* ty=Tensor[(180), int16] */;
  %239 = cast(%237, dtype="int16") /* ty=Tensor[(3, 1, 1), int16] */;
  %240 = cast(%var_7231, dtype="uint32") /* ty=uint32 */;
  %241 = cast(meta[relay.Constant][22] /* ty=Tensor[(36, 26), uint32] */, dtype="uint32") /* ty=Tensor[(36, 26), uint32] */;
  %242 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 15), bool] */, dtype="bool") /* ty=Tensor[(1, 15), bool] */;
  %243 = cast(meta[relay.Constant][24] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %244 = cast(meta[relay.Constant][25] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
  %245 = reshape(%240, newshape=[]) /* ty=uint32 */;
  %246 = reshape(%241, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint32] */;
  %247 = reshape(%242, newshape=[15]) /* ty=Tensor[(15), bool] */;
  %248 = reshape(%243, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %249 = reshape(%244, newshape=[840]) /* ty=Tensor[(840), int64] */;
  %250 = @func_4879(%245, %246, %247, %248, %249) /* ty=(Tensor[(12, 6, 13), bool], Tensor[(5, 12, 15), bool], Tensor[(15), bool], Tensor[(5, 12, 15), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) */;
  %251 = right_shift(%238, %239) /* ty=Tensor[(3, 1, 180), int16] */;
  %252 = %250.1;
  (%251, %252, %var_7231, meta[relay.Constant][22] /* ty=Tensor[(36, 26), uint32] */, meta[relay.Constant][23] /* ty=Tensor[(1, 15), bool] */, meta[relay.Constant][24] /* ty=Tensor[(156), float32] */, meta[relay.Constant][25] /* ty=Tensor[(840), int64] */)
}

def @func_3732(%var_3692: Tensor[(16, 10, 15), uint8], %var_3693: Tensor[(16, 10, 15), uint8], %var_3730: Tensor[(840), int64]) -> (Tensor[(16, 10, 15), uint8], Tensor[(16, 10, 15), float64], Tensor[(11, 6, 6), bool], Tensor[(396), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) {
  %253 = cast(%var_3693, dtype="uint8") /* ty=Tensor[(16, 10, 15), uint8] */;
  %254 = shape_of(%var_3692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%var_3692, dtype="uint8") /* ty=Tensor[(16, 10, 15), uint8] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %257 = cast(%var_3692, dtype="float64") /* ty=Tensor[(16, 10, 15), float64] */;
  %258 = cast(meta[relay.Constant][26] /* ty=Tensor[(396), bool] */, dtype="bool") /* ty=Tensor[(396), bool] */;
  %259 = cast(meta[relay.Constant][26] /* ty=Tensor[(396), bool] */, dtype="bool") /* ty=Tensor[(396), bool] */;
  %260 = reshape(%258, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
  %261 = reshape(%259, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
  %262 = cast(meta[relay.Constant][27] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %263 = cast(%var_3730, dtype="int64") /* ty=Tensor[(840), int64] */;
  %264 = reshape(%262, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), float32] */;
  %265 = reshape(%263, newshape=[2, 420]) /* ty=Tensor[(2, 420), int64] */;
  %266 = @func_1890(%264, %265) /* ty=(Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64], Tensor[(?, 13, 12), float64]) */;
  %267 = bitwise_or(%255, %256) /* ty=Tensor[(16, 10, 15), uint8] */;
  %268 = log10(%257) /* ty=Tensor[(16, 10, 15), float64] */;
  %269 = @func_182(%260, %261) /* ty=Tensor[(11, 6, 6), bool] */;
  %270 = %266.1;
  (%267, %268, %269, meta[relay.Constant][26] /* ty=Tensor[(396), bool] */, %270, meta[relay.Constant][27] /* ty=Tensor[(156), float32] */, %var_3730)
}

def @func_6186() -> Tensor[(14, 2, 10), float64] {
  @func_5662() /* ty=Tensor[(14, 2, 10), float64] */
}

def @func_9649() -> Tensor[(3, 1, 1), float64] {
  %271 = @func_9116() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %271.0
}

def @func_9278() -> Tensor[(3, 1, 1), float64] {
  %272 = @func_8439() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %272.0
}

def @func_7504() -> Tensor[(15, 13, 12), float64] {
  %273 = @func_6703() /* ty=(Tensor[(15, 13, 12), float64],) */;
  %273.0
}

def @func_10539(%var_10520: Tensor[(210), float32], %var_10522: Tensor[(396), bool]) -> (Tensor[(3, 1, 1), float64], Tensor[(15, 13, 12), float32], Tensor[(5, 12, 15), bool], Tensor[(210), float32], Tensor[(468, 4), float32], Tensor[(396), bool], Tensor[(15, 1), bool]) {
  %274 = @func_8439() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %275 = cast(%var_10520, dtype="float32") /* ty=Tensor[(210), float32] */;
  %276 = cast(meta[relay.Constant][28] /* ty=Tensor[(468, 4), float32] */, dtype="float32") /* ty=Tensor[(468, 4), float32] */;
  %277 = cast(%var_10522, dtype="bool") /* ty=Tensor[(396), bool] */;
  %278 = cast(meta[relay.Constant][29] /* ty=Tensor[(15, 1), bool] */, dtype="bool") /* ty=Tensor[(15, 1), bool] */;
  %279 = reshape(%275, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float32] */;
  %280 = reshape(%276, newshape=[1872, 1]) /* ty=Tensor[(1872, 1), float32] */;
  %281 = reshape(%277, newshape=[396]) /* ty=Tensor[(396), bool] */;
  %282 = reshape(%278, newshape=[1, 15]) /* ty=Tensor[(1, 15), bool] */;
  %283 = @func_8565(%279, %280, %281, %282) /* ty=(Tensor[(3, 10, 7), bool], Tensor[(4, 14, 15), float64], Tensor[(396), bool], Tensor[(5, 12, 15), bool], Tensor[(1, 15), bool], Tensor[(1872, 90), uint64], Tensor[(14, 2, 10), float32], Tensor[(3, 10, 7), float32], Tensor[(14, 2, 10), float32], Tensor[(14, 2, 10), float32]) */;
  %284 = %274.0;
  %285 = @func_10454() /* ty=Tensor[(15, 13, 12), float32] */;
  %286 = %283.3;
  (%284, %285, %286, %var_10520, meta[relay.Constant][28] /* ty=Tensor[(468, 4), float32] */, %var_10522, meta[relay.Constant][29] /* ty=Tensor[(15, 1), bool] */)
}

def @func_8268(%var_8235: Tensor[(3, 11, 14), float64]) -> (Tensor[(3, 11, 14), float64], Tensor[(3, 1, 1), float32], Tensor[(14, 2, 10), float64]) {
  %287 = @func_7728() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
  %288 = %287.0;
  %289 = cast(%288, dtype="uint16") /* ty=Tensor[(3, 1, 1), uint16] */;
  %290 = cast(%var_8235, dtype="uint16") /* ty=Tensor[(3, 11, 14), uint16] */;
  %291 = right_shift(%289, %290) /* ty=Tensor[(3, 11, 14), uint16] */;
  %292 = cast(%291, dtype="float64") /* ty=Tensor[(3, 11, 14), float64] */;
  %293 = @func_7762() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %294 = sin(%292) /* ty=Tensor[(3, 11, 14), float64] */;
  %295 = %293.0;
  %296 = @func_6186() /* ty=Tensor[(14, 2, 10), float64] */;
  (%294, %295, %296)
}

def @func_8374(%var_8361: Tensor[(350), int32]) -> (Tensor[(3, 1, 1), float64], Tensor[(5, 5, 14), int32], Tensor[(350), int32]) {
  %297 = cast(%var_8361, dtype="int32") /* ty=Tensor[(350), int32] */;
  %298 = reshape(%297, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
  %299 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
  %300 = @func_7601(%298) /* ty=Tensor[(5, 5, 14), int32] */;
  (%299, %300, %var_8361)
}

def @func_7049() -> Tensor[(3, 1, 1), float64] {
  %301 = @func_6758() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %301.0
}

def @func_10886(%var_10868: Tensor[(2400), float32]) -> (Tensor[(15, 13, 12), float64], Tensor[(300, 8), float32], Tensor[(2400), float32]) {
  %302 = @func_10744() /* ty=(Tensor[(14, 2, 10), float64], Tensor[(15, 13, 12), float64], Tensor[(3, 1, 1), float32]) */;
  %303 = cast(%var_10868, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %304 = reshape(%303, newshape=[300, 8]) /* ty=Tensor[(300, 8), float32] */;
  %305 = @func_5274(%304) /* ty=(Tensor[(15, 13, 5), float64], Tensor[(15, 13, 5), float64], Tensor[(16, 10, 15), float32], Tensor[(300, 8), float32]) */;
  %306 = %302.1;
  %307 = %305.3;
  (%306, %307, %var_10868)
}

def @func_7891() -> (Tensor[(3, 1, 1), float64],) {
  %308 = @func_5994() /* ty=Tensor[(3, 1, 1), float64] */;
  (%308,)
}

def @func_7601(%var_7596: Tensor[(5, 5, 14), int32]) -> Tensor[(5, 5, 14), int32] {
  %309 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 5, 14), int32] */, dtype="int32") /* ty=Tensor[(5, 5, 14), int32] */;
  %310 = shape_of(%var_7596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %311 = cast(%var_7596, dtype="int32") /* ty=Tensor[(5, 5, 14), int32] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  maximum(%311, %312) /* ty=Tensor[(5, 5, 14), int32] */
}

def @func_11046() -> (Tensor[(3, 1, 1), float32],) {
  %313 = @func_10325() /* ty=Tensor[(3, 1, 1), float32] */;
  (%313,)
}

def @func_6434() -> (Tensor[(3, 1, 1), float32],) {
  %314 = @func_6049() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %315 = %314.0;
  %316 = cast(%315, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
  %317 = exp(%316) /* ty=Tensor[(3, 1, 1), float32] */;
  (%317,)
}

def @func_7697() -> (Tensor[(3, 1, 1), float64], float32, Tensor[(1, 2400), float32], Tensor[(4, 14, 15), float64]) {
  %318 = @func_6049() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %319 = cast(-6.69885f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %320 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 2400), float32] */, dtype="float32") /* ty=Tensor[(1, 2400), float32] */;
  %321 = reshape(%319, newshape=[]) /* ty=float32 */;
  %322 = reshape(%320, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %323 = @func_2462(%321, %322) /* ty=(Tensor[(11, 14, 9), float32], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64]) */;
  %324 = %323.3;
  %325 = cast(%324, dtype="float64") /* ty=Tensor[(4, 14, 15), float64] */;
  %326 = %318.0;
  %327 = tan(%325) /* ty=Tensor[(4, 14, 15), float64] */;
  (%326, -6.69885f /* ty=float32 */, meta[relay.Constant][31] /* ty=Tensor[(1, 2400), float32] */, %327)
}

def @func_10776() -> (Tensor[(3, 1, 1), float64],) {
  %328 = @func_5994() /* ty=Tensor[(3, 1, 1), float64] */;
  (%328,)
}

def @func_7879(%var_7871: Tensor[(3, 13, 13), float32]) -> (Tensor[(14, 2, 10), float32], Tensor[(3, 13, 13), bool]) {
  %329 = @func_7667() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float32]) */;
  %330 = @func_7185() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %331 = %330.0;
  %332 = cast(%331, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %333 = cast(%var_7871, dtype="bool") /* ty=Tensor[(3, 13, 13), bool] */;
  %334 = %329.0;
  %335 = less_equal(%332, %333) /* ty=Tensor[(3, 13, 13), bool] */;
  (%334, %335)
}

def @func_10160(%var_10147: Tensor[(294), float64]) -> (Tensor[(14, 2, 10), float64], Tensor[(7, 6, 7), float64], Tensor[(294), float64]) {
  %336 = @func_9800() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(5, 12, 15), bool], Tensor[(14, 2, 10), float32], Tensor[(3, 15, 1), bool], Tensor[(14, 2, 10), float64], Tensor[(3, 1, 1), float64]) */;
  %337 = cast(%var_10147, dtype="float64") /* ty=Tensor[(294), float64] */;
  %338 = cast(%var_10147, dtype="float64") /* ty=Tensor[(294), float64] */;
  %339 = reshape(%337, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), float64] */;
  %340 = reshape(%338, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), float64] */;
  %341 = @func_9198(%339, %340) /* ty=(Tensor[(7, 6, 7), float64], Tensor[(7, 6, 7), float64]) */;
  %342 = %336.4;
  %343 = %341.1;
  (%342, %343, %var_10147)
}

def @func_5621(%var_5581: Tensor[(3, 11, 1), float64], %var_5599: Tensor[(7, 156), uint32]) -> (Tensor[(6, 14, 13), uint32], Tensor[(7, 156), uint32], float32, Tensor[(507), float64], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(3, 11, 13), float64]) {
  %344 = cast(%var_5599, dtype="uint32") /* ty=Tensor[(7, 156), uint32] */;
  %345 = cast(%var_5599, dtype="uint32") /* ty=Tensor[(7, 156), uint32] */;
  %346 = reshape(%344, newshape=[6, 14, 13]) /* ty=Tensor[(6, 14, 13), uint32] */;
  %347 = reshape(%345, newshape=[6, 14, 13]) /* ty=Tensor[(6, 14, 13), uint32] */;
  %348 = cast(meta[relay.Constant][32] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %349 = reshape(%348, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %350 = @func_2580(%349) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(13, 3, 13), uint32], Tensor[(2400), float32], float32, Tensor[(300, 8), float32]) */;
  %351 = cast(meta[relay.Constant][33] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %352 = reshape(%351, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), float32] */;
  %353 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
  %354 = cast(%353, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %355 = cast(%var_5581, dtype="bool") /* ty=Tensor[(3, 11, 1), bool] */;
  %356 = greater_equal(%354, %355) /* ty=Tensor[(3, 11, 1), bool] */;
  %357 = cast(%356, dtype="float64") /* ty=Tensor[(3, 11, 1), float64] */;
  %358 = asin(%357) /* ty=Tensor[(3, 11, 1), float64] */;
  %359 = cast(%358, dtype="float64") /* ty=Tensor[(3, 11, 1), float64] */;
  %360 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 11, 13), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 13), float64] */;
  %361 = @func_2246(%346, %347) /* ty=Tensor[(6, 14, 13), uint32] */;
  %362 = %350.3;
  %363 = @func_1940(%352) /* ty=Tensor[(16, 10, 15), float32] */;
  %364 = divide(%359, %360) /* ty=Tensor[(3, 11, 13), float64] */;
  (%361, %var_5599, %362, meta[relay.Constant][32] /* ty=Tensor[(507), float64] */, %363, meta[relay.Constant][33] /* ty=Tensor[(2400), float32] */, %364)
}

def @func_2246(%var_2239: Tensor[(6, 14, 13), uint32], %var_2240: Tensor[(6, 14, 13), uint32]) -> Tensor[(6, 14, 13), uint32] {
  %365 = cast(%var_2240, dtype="uint32") /* ty=Tensor[(6, 14, 13), uint32] */;
  %366 = shape_of(%var_2239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%var_2239, dtype="uint32") /* ty=Tensor[(6, 14, 13), uint32] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%367, %368) /* ty=Tensor[(6, 14, 13), uint32] */
}

def @func_8002(%var_7977: Tensor[(396), bool], %var_7982: Tensor[(880), uint16], %var_7985: Tensor[(1872), float32]) -> (Tensor[(14, 2, 10), float64], Tensor[(14, 2, 10), float32], Tensor[(4, 14, 15), bool], Tensor[(396), bool], Tensor[(15, 6), uint32], Tensor[(10, 8, 11), uint16], Tensor[(1872), int64], Tensor[(3, 1, 880), float32], Tensor[(3, 1, 1), float64]) {
  %369 = @func_7728() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
  %370 = cast(meta[relay.Constant][35] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %371 = cast(%var_7977, dtype="bool") /* ty=Tensor[(396), bool] */;
  %372 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 6), uint32] */, dtype="uint32") /* ty=Tensor[(15, 6), uint32] */;
  %373 = reshape(%370, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float32] */;
  %374 = reshape(%371, newshape=[66, 6]) /* ty=Tensor[(66, 6), bool] */;
  %375 = reshape(%372, newshape=[90]) /* ty=Tensor[(90), uint32] */;
  %376 = @func_1111(%373, %374, %375) /* ty=(Tensor[(12, 13, 12), float32], Tensor[(4, 14, 15), bool], Tensor[(840), int64], Tensor[(11, 6, 6), bool], Tensor[(66, 6), bool], Tensor[(10, 9, ?), bool], Tensor[(90), uint32], Tensor[(4, 14, 15), float64], Tensor[(11, 6, 6), bool]) */;
  %377 = cast(%var_7982, dtype="uint16") /* ty=Tensor[(880), uint16] */;
  %378 = cast(%var_7982, dtype="uint16") /* ty=Tensor[(880), uint16] */;
  %379 = reshape(%377, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
  %380 = reshape(%378, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
  %381 = @func_4113(%379, %380) /* ty=(Tensor[(10, 8, 11), uint16],) */;
  %382 = cast(%var_7985, dtype="int64") /* ty=Tensor[(1872), int64] */;
  %383 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(1872), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %384 = cast(meta[relay.Constant][35] /* ty=Tensor[(1872), float32] */, dtype="int64") /* ty=Tensor[(1872), int64] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?), int64] */;
  %386 = @func_7891() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %387 = %386.0;
  %388 = cast(%387, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
  %389 = cast(%var_7982, dtype="float32") /* ty=Tensor[(880), float32] */;
  %390 = @func_6471() /* ty=Tensor[(14, 2, 10), float64] */;
  %391 = %369.1;
  %392 = %376.1;
  %393 = %381.0;
  %394 = bitwise_or(%384, %385) /* ty=Tensor[(1872), int64] */;
  %395 = divide(%388, %389) /* ty=Tensor[(3, 1, 880), float32] */;
  %396 = @func_6173() /* ty=Tensor[(3, 1, 1), float64] */;
  (%390, %391, %392, %var_7977, meta[relay.Constant][36] /* ty=Tensor[(15, 6), uint32] */, %393, %394, %395, %396)
}

def @func_1940(%var_1937: Tensor[(16, 10, 15), float32]) -> Tensor[(16, 10, 15), float32] {
  %397 = cast(%var_1937, dtype="float32") /* ty=Tensor[(16, 10, 15), float32] */;
  atan(%397) /* ty=Tensor[(16, 10, 15), float32] */
}

def @func_1111(%var_1017: Tensor[(12, 13, 12), float32], %var_1037: Tensor[(66, 6), bool], %var_1077: Tensor[(90), uint32]) -> (Tensor[(12, 13, 12), float32], Tensor[(4, 14, 15), bool], Tensor[(840), int64], Tensor[(11, 6, 6), bool], Tensor[(66, 6), bool], Tensor[(10, 9, ?), bool], Tensor[(90), uint32], Tensor[(4, 14, 15), float64], Tensor[(11, 6, 6), bool]) {
  %398 = cast(%var_1017, dtype="float32") /* ty=Tensor[(12, 13, 12), float32] */;
  %399 = cast(meta[relay.Constant][37] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
  %400 = reshape(%399, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), int64] */;
  %401 = cast(%var_1037, dtype="bool") /* ty=Tensor[(66, 6), bool] */;
  %402 = cast(%var_1037, dtype="bool") /* ty=Tensor[(66, 6), bool] */;
  %403 = reshape(%401, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
  %404 = reshape(%402, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
  %405 = cast(%var_1077, dtype="uint32") /* ty=Tensor[(90), uint32] */;
  %406 = reshape(%405, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), uint32] */;
  %407 = @func_555(%406) /* ty=(Tensor[(10, 9, ?), bool],) */;
  %408 = cast(meta[relay.Constant][37] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
  %409 = reshape(%408, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), int64] */;
  %410 = @func_442(%409) /* ty=Tensor[(4, 14, 15), bool] */;
  %411 = cast(%410, dtype="float64") /* ty=Tensor[(4, 14, 15), float64] */;
  %412 = @func_182(%403, %404) /* ty=Tensor[(11, 6, 6), bool] */;
  %413 = cast(%412, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %414 = cast(%var_1037, dtype="bool") /* ty=Tensor[(66, 6), bool] */;
  %415 = reshape(%413, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
  %416 = reshape(%414, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
  %417 = log10(%398) /* ty=Tensor[(12, 13, 12), float32] */;
  %418 = @func_442(%400) /* ty=Tensor[(4, 14, 15), bool] */;
  %419 = %407.0;
  %420 = sqrt(%411) /* ty=Tensor[(4, 14, 15), float64] */;
  %421 = @func_182(%415, %416) /* ty=Tensor[(11, 6, 6), bool] */;
  (%417, %418, meta[relay.Constant][37] /* ty=Tensor[(840), int64] */, %412, %var_1037, %419, %var_1077, %420, %421)
}

def @func_4879(%var_4849: uint32, %var_4850: Tensor[(12, 6, 13), uint32], %var_4855: Tensor[(15), bool], %var_4867: Tensor[(156), float32], %var_4868: Tensor[(840), int64]) -> (Tensor[(12, 6, 13), bool], Tensor[(5, 12, 15), bool], Tensor[(15), bool], Tensor[(5, 12, 15), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) {
  %422 = cast(%var_4849, dtype="bool") /* ty=bool */;
  %423 = cast(%var_4850, dtype="bool") /* ty=Tensor[(12, 6, 13), bool] */;
  %424 = cast(%var_4855, dtype="bool") /* ty=Tensor[(15), bool] */;
  %425 = reshape(%424, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), bool] */;
  %426 = @func_2771(%425) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) */;
  %427 = cast(%var_4855, dtype="bool") /* ty=Tensor[(15), bool] */;
  %428 = reshape(%427, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), bool] */;
  %429 = @func_2771(%428) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) */;
  %430 = cast(%var_4867, dtype="float32") /* ty=Tensor[(156), float32] */;
  %431 = cast(%var_4868, dtype="int64") /* ty=Tensor[(840), int64] */;
  %432 = reshape(%430, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), float32] */;
  %433 = reshape(%431, newshape=[2, 420]) /* ty=Tensor[(2, 420), int64] */;
  %434 = @func_1890(%432, %433) /* ty=(Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64], Tensor[(?, 13, 12), float64]) */;
  %435 = greater(%422, %423) /* ty=Tensor[(12, 6, 13), bool] */;
  %436 = %426.1;
  %437 = %429.0;
  %438 = %434.1;
  (%435, %436, %var_4855, %437, %438, %var_4867, %var_4868)
}

def @func_7075() -> (Tensor[(3, 1, 1), float64],) {
  %439 = @func_6758() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %440 = %439.0;
  %441 = cast(%440, dtype="float64") /* ty=Tensor[(3, 1, 1), float64] */;
  %442 = sigmoid(%441) /* ty=Tensor[(3, 1, 1), float64] */;
  (%442,)
}

def @func_7259() -> (Tensor[(3, 1, 1), float64],) {
  %443 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
  (%443,)
}

def @func_2580(%var_2545: Tensor[(13, 3, 13), float64]) -> (Tensor[(13, 3, 13), float64], Tensor[(13, 3, 13), uint32], Tensor[(2400), float32], float32, Tensor[(300, 8), float32]) {
  %444 = cast(%var_2545, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %445 = cast(meta[relay.Constant][38] /* ty=Tensor[(13, 3, 13), float64] */, dtype="uint32") /* ty=Tensor[(13, 3, 13), uint32] */;
  %446 = shape_of(%var_2545, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%var_2545, dtype="uint32") /* ty=Tensor[(13, 3, 13), uint32] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %449 = cast(1.6959f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %450 = cast(meta[relay.Constant][39] /* ty=Tensor[(300, 8), float32] */, dtype="float32") /* ty=Tensor[(300, 8), float32] */;
  %451 = reshape(%449, newshape=[]) /* ty=float32 */;
  %452 = reshape(%450, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %453 = @func_2462(%451, %452) /* ty=(Tensor[(11, 14, 9), float32], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64]) */;
  %454 = asin(%444) /* ty=Tensor[(13, 3, 13), float64] */;
  %455 = bitwise_xor(%447, %448) /* ty=Tensor[(13, 3, 13), uint32] */;
  %456 = %453.2;
  (%454, %455, %456, 1.6959f /* ty=float32 */, meta[relay.Constant][39] /* ty=Tensor[(300, 8), float32] */)
}

def @func_9497() -> (Tensor[(3, 1, 1), float32],) {
  %457 = @func_8911() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %458 = %457.0;
  (%458,)
}

def @func_10744() -> (Tensor[(14, 2, 10), float64], Tensor[(15, 13, 12), float64], Tensor[(3, 1, 1), float32]) {
  %459 = @func_6703() /* ty=(Tensor[(15, 13, 12), float64],) */;
  %460 = @func_6471() /* ty=Tensor[(14, 2, 10), float64] */;
  %461 = %459.0;
  %462 = @func_10325() /* ty=Tensor[(3, 1, 1), float32] */;
  (%460, %461, %462)
}

def @func_7338(%var_7308: Tensor[(1008), float32], %var_7309: Tensor[(90), uint32]) -> (Tensor[(156), float32], Tensor[(936), uint32], Tensor[(15), bool], Tensor[(156), float32], Tensor[(840), int64], Tensor[(10, 9, ?), bool], Tensor[(1008), float32], Tensor[(90), uint32], Tensor[(9, 7, 16), float32], Tensor[(15, 13, 12), uint8], Tensor[(2400), float32], Tensor[(180), uint16]) {
  %463 = cast(meta[relay.Constant][40] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %464 = cast(meta[relay.Constant][41] /* ty=Tensor[(936), uint32] */, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %465 = cast(meta[relay.Constant][42] /* ty=Tensor[(15), bool] */, dtype="bool") /* ty=Tensor[(15), bool] */;
  %466 = cast(meta[relay.Constant][43] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %467 = cast(meta[relay.Constant][44] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
  %468 = reshape(%463, newshape=[]) /* ty=uint32 */;
  %469 = reshape(%464, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint32] */;
  %470 = reshape(%465, newshape=[15]) /* ty=Tensor[(15), bool] */;
  %471 = reshape(%466, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %472 = reshape(%467, newshape=[840]) /* ty=Tensor[(840), int64] */;
  %473 = @func_4879(%468, %469, %470, %471, %472) /* ty=(Tensor[(12, 6, 13), bool], Tensor[(5, 12, 15), bool], Tensor[(15), bool], Tensor[(5, 12, 15), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) */;
  %474 = cast(%var_7308, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %475 = cast(%var_7309, dtype="uint32") /* ty=Tensor[(90), uint32] */;
  %476 = reshape(%474, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), float32] */;
  %477 = reshape(%475, newshape=[3, 30]) /* ty=Tensor[(3, 30), uint32] */;
  %478 = @func_1787(%476, %477) /* ty=(Tensor[(9, 7, 16), float32], Tensor[(10, 9, ?), bool], Tensor[(3, 30), uint32]) */;
  %479 = cast(%var_7308, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %480 = %478.1;
  %481 = cast(%480, dtype="uint32") /* ty=Tensor[(10, 9, ?), uint32] */;
  %482 = reshape(%479, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), float32] */;
  %483 = reshape(%481, newshape=[3, 30]) /* ty=Tensor[(3, 30), uint32] */;
  %484 = @func_1787(%482, %483) /* ty=(Tensor[(9, 7, 16), float32], Tensor[(10, 9, ?), bool], Tensor[(3, 30), uint32]) */;
  %485 = @func_6703() /* ty=(Tensor[(15, 13, 12), float64],) */;
  %486 = %485.0;
  %487 = cast(%486, dtype="uint8") /* ty=Tensor[(15, 13, 12), uint8] */;
  %488 = cast(meta[relay.Constant][40] /* ty=uint32 */, dtype="uint8") /* ty=uint8 */;
  %489 = cast(meta[relay.Constant][45] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %490 = reshape(%489, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint16] */;
  %491 = @func_6125(%490) /* ty=(Tensor[(3, 1, 1), float64], Tensor[(2400), float32], float32, Tensor[(2400), float32], Tensor[(3, 4, 15), int8]) */;
  %492 = %473.5;
  %493 = %484.0;
  %494 = subtract(%487, %488) /* ty=Tensor[(15, 13, 12), uint8] */;
  %495 = %491.3;
  (%492, meta[relay.Constant][41] /* ty=Tensor[(936), uint32] */, meta[relay.Constant][42] /* ty=Tensor[(15), bool] */, meta[relay.Constant][43] /* ty=Tensor[(156), float32] */, meta[relay.Constant][44] /* ty=Tensor[(840), int64] */, %480, %var_7308, %var_7309, %493, %494, %495, meta[relay.Constant][45] /* ty=Tensor[(180), uint16] */)
}

def @func_10378() -> (Tensor[(3, 1, 1), float64], Tensor[(2, 420), int64], float32, Tensor[(2400), float32], Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float32], Tensor[(880), uint16]) {
  %496 = cast(8.65555f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %497 = cast(meta[relay.Constant][46] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %498 = reshape(%496, newshape=[]) /* ty=float32 */;
  %499 = reshape(%497, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %500 = @func_2462(%498, %499) /* ty=(Tensor[(11, 14, 9), float32], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64]) */;
  %501 = cast(meta[relay.Constant][47] /* ty=Tensor[(880), uint16] */, dtype="uint16") /* ty=Tensor[(880), uint16] */;
  %502 = reshape(%501, newshape=[2, 440]) /* ty=Tensor[(2, 440), uint16] */;
  %503 = @func_9713(%502) /* ty=(Tensor[(3, 1, 1), float32], Tensor[(3, 1, 1), float64], Tensor[(10, 8, 11), uint16], Tensor[(2, 440), uint16]) */;
  %504 = @func_10203() /* ty=Tensor[(3, 1, 1), float64] */;
  %505 = %500.4;
  %506 = @func_7049() /* ty=Tensor[(3, 1, 1), float64] */;
  %507 = %503.0;
  (%504, %505, 8.65555f /* ty=float32 */, meta[relay.Constant][46] /* ty=Tensor[(2400), float32] */, %506, %507, meta[relay.Constant][47] /* ty=Tensor[(880), uint16] */)
}

def @func_7582() -> (Tensor[(3, 1, 1), float64],) {
  %508 = @func_6565() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
  %509 = %508.1;
  %510 = cast(%509, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
  %511 = log2(%510) /* ty=Tensor[(3, 1, 1), float32] */;
  %512 = cast(%511, dtype="float64") /* ty=Tensor[(3, 1, 1), float64] */;
  %513 = log(%512) /* ty=Tensor[(3, 1, 1), float64] */;
  (%513,)
}

def @func_9198(%var_9129: Tensor[(7, 6, 7), float64], %var_9130: Tensor[(7, 6, 7), float64]) -> (Tensor[(7, 6, 7), float64], Tensor[(7, 6, 7), float64]) {
  %514 = cast(%var_9130, dtype="float64") /* ty=Tensor[(7, 6, 7), float64] */;
  %515 = shape_of(%var_9129, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%var_9129, dtype="float64") /* ty=Tensor[(7, 6, 7), float64] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %518 = cast(%var_9130, dtype="float64") /* ty=Tensor[(7, 6, 7), float64] */;
  %519 = maximum(%516, %517) /* ty=Tensor[(7, 6, 7), float64] */;
  %520 = atanh(%518) /* ty=Tensor[(7, 6, 7), float64] */;
  (%519, %520)
}

def @func_7843(%var_7826: Tensor[(3, 14, 11), float64]) -> (Tensor[(4, 14, 15), float64], Tensor[(3, 14, 11), bool]) {
  %521 = @func_7697() /* ty=(Tensor[(3, 1, 1), float64], float32, Tensor[(1, 2400), float32], Tensor[(4, 14, 15), float64]) */;
  %522 = @func_6173() /* ty=Tensor[(3, 1, 1), float64] */;
  %523 = cast(%522, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %524 = cast(%var_7826, dtype="bool") /* ty=Tensor[(3, 14, 11), bool] */;
  %525 = %521.3;
  %526 = greater(%523, %524) /* ty=Tensor[(3, 14, 11), bool] */;
  (%525, %526)
}

def @func_10309(%var_10244: Tensor[(1, 6, 12), uint32], %var_10245: Tensor[(11, 6, 12), uint32]) -> (Tensor[(11, 6, 12), bool], Tensor[(3, 1, 1), float64], Tensor[(3, ?, ?), bool]) {
  %527 = cast(%var_10244, dtype="uint32") /* ty=Tensor[(1, 6, 12), uint32] */;
  %528 = cast(%var_10245, dtype="uint32") /* ty=Tensor[(11, 6, 12), uint32] */;
  %529 = right_shift(%527, %528) /* ty=Tensor[(11, 6, 12), uint32] */;
  %530 = cast(%529, dtype="bool") /* ty=Tensor[(11, 6, 12), bool] */;
  %531 = cast(%var_10244, dtype="bool") /* ty=Tensor[(1, 6, 12), bool] */;
  %532 = @func_8439() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %533 = %532.0;
  %534 = @func_5994() /* ty=Tensor[(3, 1, 1), float64] */;
  %535 = cast(%534, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %536 = shape_of(%533, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(%533, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %539 = less(%530, %531) /* ty=Tensor[(11, 6, 12), bool] */;
  %540 = @func_7049() /* ty=Tensor[(3, 1, 1), float64] */;
  %541 = logical_or(%537, %538) /* ty=Tensor[(3, ?, ?), bool] */;
  (%539, %540, %541)
}

def @func_6125(%var_6085: Tensor[(3, 4, 15), uint16]) -> (Tensor[(3, 1, 1), float64], Tensor[(2400), float32], float32, Tensor[(2400), float32], Tensor[(3, 4, 15), int8]) {
  %542 = cast(1.87208f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %543 = cast(meta[relay.Constant][48] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %544 = reshape(%542, newshape=[]) /* ty=float32 */;
  %545 = reshape(%543, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %546 = @func_2462(%544, %545) /* ty=(Tensor[(11, 14, 9), float32], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64]) */;
  %547 = @func_5994() /* ty=Tensor[(3, 1, 1), float64] */;
  %548 = cast(%547, dtype="uint16") /* ty=Tensor[(3, 1, 1), uint16] */;
  %549 = cast(meta[relay.Constant][49] /* ty=Tensor[(3, 4, 15), float64] */, dtype="uint16") /* ty=Tensor[(3, 4, 15), uint16] */;
  %550 = bitwise_or(%548, %549) /* ty=Tensor[(3, 4, 15), uint16] */;
  %551 = cast(%var_6085, dtype="int8") /* ty=Tensor[(3, 4, 15), int8] */;
  %552 = shape_of(%550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %553 = cast(%550, dtype="int8") /* ty=Tensor[(3, 4, 15), int8] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %555 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
  %556 = %546.2;
  %557 = bitwise_and(%553, %554) /* ty=Tensor[(3, 4, 15), int8] */;
  (%555, %556, 1.87208f /* ty=float32 */, meta[relay.Constant][48] /* ty=Tensor[(2400), float32] */, %557)
}

def @func_10670() -> Tensor[(3, 1, 1), float32] {
  @func_9897() /* ty=Tensor[(3, 1, 1), float32] */
}

def @func_6565() -> (Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) {
  %558 = @func_5938() /* ty=(Tensor[(14, 2, 10), float32],) */;
  %559 = %558.0;
  %560 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
  (%559, %560)
}

def @func_7481(%var_7425: Tensor[(980), uint64]) -> (Tensor[(980), uint64], Tensor[(100, 24), int16], Tensor[(3, 100, 24), uint32], Tensor[(3, 1, 1), float64], Tensor[(3, 100, 24), float32], Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32]) {
  %561 = cast(%var_7425, dtype="uint64") /* ty=Tensor[(980), uint64] */;
  %562 = cast(meta[relay.Constant][50] /* ty=Tensor[(100, 24), float32] */, dtype="float32") /* ty=Tensor[(100, 24), float32] */;
  %563 = reshape(%561, newshape=[14, 5, 14]) /* ty=Tensor[(14, 5, 14), uint64] */;
  %564 = reshape(%562, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %565 = @func_2840(%563, %564) /* ty=(Tensor[(14, 5, 14), bool], Tensor[(16, 10, 15), float32], Tensor[(2400), float32]) */;
  %566 = %565.1;
  %567 = cast(%566, dtype="int16") /* ty=Tensor[(16, 10, 15), int16] */;
  %568 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(100, 24), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %569 = cast(meta[relay.Constant][50] /* ty=Tensor[(100, 24), float32] */, dtype="int16") /* ty=Tensor[(100, 24), int16] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %571 = @func_6434() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %572 = %571.0;
  %573 = cast(%572, dtype="uint32") /* ty=Tensor[(3, 1, 1), uint32] */;
  %574 = cast(meta[relay.Constant][50] /* ty=Tensor[(100, 24), float32] */, dtype="uint32") /* ty=Tensor[(100, 24), uint32] */;
  %575 = cast(meta[relay.Constant][50] /* ty=Tensor[(100, 24), float32] */, dtype="float64") /* ty=Tensor[(100, 24), float64] */;
  %576 = sqrt(%575) /* ty=Tensor[(100, 24), float64] */;
  %577 = cast(%576, dtype="uint32") /* ty=Tensor[(100, 24), uint32] */;
  %578 = cast(%572, dtype="uint32") /* ty=Tensor[(3, 1, 1), uint32] */;
  %579 = bitwise_xor(%577, %578) /* ty=Tensor[(3, 100, 24), uint32] */;
  %580 = cast(%579, dtype="float32") /* ty=Tensor[(3, 100, 24), float32] */;
  %581 = @func_7075() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %582 = @func_6565() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
  %583 = minimum(%569, %570) /* ty=Tensor[(100, 24), int16] */;
  %584 = minimum(%573, %574) /* ty=Tensor[(3, 100, 24), uint32] */;
  %585 = @func_5898() /* ty=Tensor[(3, 1, 1), float64] */;
  %586 = rsqrt(%580) /* ty=Tensor[(3, 100, 24), float32] */;
  %587 = %581.0;
  %588 = %582.0;
  (%var_7425, %583, %584, %585, %586, %587, %588)
}

def @func_555(%var_511: Tensor[(10, 9, 1), uint32]) -> (Tensor[(10, 9, ?), bool],) {
  %589 = cast(%var_511, dtype="bool") /* ty=Tensor[(10, 9, 1), bool] */;
  %590 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(10, 9, 1), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 9, 1), uint32] */, dtype="bool") /* ty=Tensor[(10, 9, 1), bool] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %593 = not_equal(%591, %592) /* ty=Tensor[(10, 9, ?), bool] */;
  (%593,)
}

def @func_6825(%var_6807: Tensor[(14, 2, 10), float64]) -> (Tensor[(14, 2, 10), bool],) {
  %594 = @func_6471() /* ty=Tensor[(14, 2, 10), float64] */;
  %595 = cast(%var_6807, dtype="bool") /* ty=Tensor[(14, 2, 10), bool] */;
  %596 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%594, dtype="bool") /* ty=Tensor[(14, 2, 10), bool] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %599 = equal(%597, %598) /* ty=Tensor[(14, 2, 10), bool] */;
  (%599,)
}

def @func_9587() -> (Tensor[(11, 6, 6), bool], Tensor[(16, 10, 15), float32], Tensor[(980), uint64], Tensor[(2400), float32], Tensor[(3, 3, 132), float64]) {
  %600 = cast(meta[relay.Constant][52] /* ty=Tensor[(3, 132), bool] */, dtype="bool") /* ty=Tensor[(3, 132), bool] */;
  %601 = cast(meta[relay.Constant][52] /* ty=Tensor[(3, 132), bool] */, dtype="bool") /* ty=Tensor[(3, 132), bool] */;
  %602 = reshape(%600, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
  %603 = reshape(%601, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
  %604 = cast(meta[relay.Constant][53] /* ty=Tensor[(980), uint64] */, dtype="uint64") /* ty=Tensor[(980), uint64] */;
  %605 = cast(meta[relay.Constant][54] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %606 = reshape(%604, newshape=[14, 5, 14]) /* ty=Tensor[(14, 5, 14), uint64] */;
  %607 = reshape(%605, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %608 = @func_2840(%606, %607) /* ty=(Tensor[(14, 5, 14), bool], Tensor[(16, 10, 15), float32], Tensor[(2400), float32]) */;
  %609 = @func_9278() /* ty=Tensor[(3, 1, 1), float64] */;
  %610 = cast(meta[relay.Constant][52] /* ty=Tensor[(3, 132), bool] */, dtype="int8") /* ty=Tensor[(3, 132), int8] */;
  %611 = cast(%609, dtype="int8") /* ty=Tensor[(3, 1, 1), int8] */;
  %612 = add(%610, %611) /* ty=Tensor[(3, 3, 132), int8] */;
  %613 = cast(%612, dtype="int32") /* ty=Tensor[(3, 3, 132), int32] */;
  %614 = cast(meta[relay.Constant][52] /* ty=Tensor[(3, 132), bool] */, dtype="int32") /* ty=Tensor[(3, 132), int32] */;
  %615 = minimum(%613, %614) /* ty=Tensor[(3, 3, 132), int32] */;
  %616 = cast(%615, dtype="float32") /* ty=Tensor[(3, 3, 132), float32] */;
  %617 = atan(%616) /* ty=Tensor[(3, 3, 132), float32] */;
  %618 = cast(%617, dtype="float64") /* ty=Tensor[(3, 3, 132), float64] */;
  %619 = @func_182(%602, %603) /* ty=Tensor[(11, 6, 6), bool] */;
  %620 = %608.1;
  %621 = erf(%618) /* ty=Tensor[(3, 3, 132), float64] */;
  (%619, %620, meta[relay.Constant][53] /* ty=Tensor[(980), uint64] */, meta[relay.Constant][54] /* ty=Tensor[(2400), float32] */, %621)
}

def @func_7185() -> (Tensor[(3, 1, 1), float32],) {
  %622 = @func_6434() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %623 = %622.0;
  (%623,)
}

def @func_9056(%var_9042: Tensor[(10, 1), uint16]) -> Tensor[(10, 1), uint16] {
  %624 = cast(meta[relay.Constant][55] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %625 = cast(%var_9042, dtype="uint16") /* ty=Tensor[(10, 1), uint16] */;
  bitwise_and(%624, %625) /* ty=Tensor[(10, 1), uint16] */
}

def @func_10711() -> (Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float64]) {
  %626 = @func_7728() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
  %627 = %626.0;
  %628 = @func_9039() /* ty=Tensor[(3, 1, 1), float64] */;
  %629 = @func_5662() /* ty=Tensor[(14, 2, 10), float64] */;
  (%627, %628, %629)
}

def @func_7728() -> (Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) {
  %630 = @func_7075() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %631 = @func_5938() /* ty=(Tensor[(14, 2, 10), float32],) */;
  %632 = %630.0;
  %633 = %631.0;
  %634 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
  (%632, %633, %634)
}

def @func_10203() -> Tensor[(3, 1, 1), float64] {
  @func_7370() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_9637() -> (Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float32], Tensor[(3, 1, 1), float64]) {
  %635 = @func_7728() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
  %636 = @func_9497() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %637 = @func_9126() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %638 = %635.2;
  %639 = %636.0;
  %640 = %637.0;
  (%638, %639, %640)
}

def @func_4113(%var_4097: Tensor[(10, 8, 11), uint16], %var_4098: Tensor[(10, 8, 11), uint16]) -> (Tensor[(10, 8, 11), uint16],) {
  %641 = cast(%var_4098, dtype="uint16") /* ty=Tensor[(10, 8, 11), uint16] */;
  %642 = shape_of(%var_4097, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%var_4097, dtype="uint16") /* ty=Tensor[(10, 8, 11), uint16] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %645 = bitwise_xor(%643, %644) /* ty=Tensor[(10, 8, 11), uint16] */;
  (%645,)
}

def @func_7145() -> (Tensor[(14, 2, 10), float32],) {
  %646 = @func_5938() /* ty=(Tensor[(14, 2, 10), float32],) */;
  %647 = %646.0;
  (%647,)
}

def @func_5994() -> Tensor[(3, 1, 1), float64] {
  @func_5541() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_9427() -> Tensor[(14, 2, 10), float64] {
  @func_6471() /* ty=Tensor[(14, 2, 10), float64] */
}

def @func_10612(%var_10565: Tensor[(1, 2400), uint8], %var_10589: Tensor[(2100), uint32]) -> (Tensor[(16, 10, 15), uint8], Tensor[(1, 2400), uint8], Tensor[(16, 10, 15), float32], Tensor[(2100), uint32], Tensor[(3, 1, 840), bool], Tensor[(11, 6, 6), bool], Tensor[(396), bool], Tensor[(3, 1, 507), bool]) {
  %648 = cast(%var_10565, dtype="uint8") /* ty=Tensor[(1, 2400), uint8] */;
  %649 = cast(%var_10565, dtype="uint8") /* ty=Tensor[(1, 2400), uint8] */;
  %650 = cast(meta[relay.Constant][56] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
  %651 = reshape(%648, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), uint8] */;
  %652 = reshape(%649, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), uint8] */;
  %653 = reshape(%650, newshape=[840]) /* ty=Tensor[(840), int64] */;
  %654 = @func_3732(%651, %652, %653) /* ty=(Tensor[(16, 10, 15), uint8], Tensor[(16, 10, 15), float64], Tensor[(11, 6, 6), bool], Tensor[(396), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) */;
  %655 = %654.0;
  %656 = cast(%655, dtype="float32") /* ty=Tensor[(16, 10, 15), float32] */;
  %657 = reshape(%656, newshape=[300, 8]) /* ty=Tensor[(300, 8), float32] */;
  %658 = @func_5274(%657) /* ty=(Tensor[(15, 13, 5), float64], Tensor[(15, 13, 5), float64], Tensor[(16, 10, 15), float32], Tensor[(300, 8), float32]) */;
  %659 = @func_7762() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %660 = %659.0;
  %661 = cast(%660, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %662 = cast(meta[relay.Constant][56] /* ty=Tensor[(840), int64] */, dtype="bool") /* ty=Tensor[(840), bool] */;
  %663 = cast(meta[relay.Constant][57] /* ty=Tensor[(396), bool] */, dtype="bool") /* ty=Tensor[(396), bool] */;
  %664 = cast(meta[relay.Constant][57] /* ty=Tensor[(396), bool] */, dtype="bool") /* ty=Tensor[(396), bool] */;
  %665 = reshape(%663, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
  %666 = reshape(%664, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
  %667 = cast(%var_10589, dtype="uint32") /* ty=Tensor[(2100), uint32] */;
  %668 = cast(%var_10589, dtype="uint32") /* ty=Tensor[(2100), uint32] */;
  %669 = reshape(%667, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint32] */;
  %670 = reshape(%668, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint32] */;
  %671 = @func_8846(%669, %670) /* ty=(Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(13, 3, 13), float64], Tensor[(1, 507), float64]) */;
  %672 = %671.3;
  %673 = cast(%660, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %674 = cast(%672, dtype="bool") /* ty=Tensor[(1, 507), bool] */;
  %675 = %658.2;
  %676 = greater(%661, %662) /* ty=Tensor[(3, 1, 840), bool] */;
  %677 = @func_182(%665, %666) /* ty=Tensor[(11, 6, 6), bool] */;
  %678 = less_equal(%673, %674) /* ty=Tensor[(3, 1, 507), bool] */;
  (%655, %var_10565, %675, %var_10589, %676, %677, meta[relay.Constant][57] /* ty=Tensor[(396), bool] */, %678)
}

def @func_7017() -> (Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) {
  %679 = @func_5938() /* ty=(Tensor[(14, 2, 10), float32],) */;
  %680 = %679.0;
  %681 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
  (%680, %681)
}

def @func_10454() -> Tensor[(15, 13, 12), float32] {
  %682 = @func_6703() /* ty=(Tensor[(15, 13, 12), float64],) */;
  %683 = %682.0;
  %684 = cast(meta[relay.Constant][58] /* ty=Tensor[(15, 13, 12), float64] */, dtype="bool") /* ty=Tensor[(15, 13, 12), bool] */;
  %685 = shape_of(%683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(%683, dtype="bool") /* ty=Tensor[(15, 13, 12), bool] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %688 = not_equal(%686, %687) /* ty=Tensor[(15, 13, 12), bool] */;
  %689 = cast(%688, dtype="int32") /* ty=Tensor[(15, 13, 12), int32] */;
  %690 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(15, 13, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(meta[relay.Constant][58] /* ty=Tensor[(15, 13, 12), float64] */, dtype="int32") /* ty=Tensor[(15, 13, 12), int32] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %693 = logical_xor(%691, %692) /* ty=Tensor[(15, 13, 12), int32] */;
  %694 = cast(%693, dtype="float32") /* ty=Tensor[(15, 13, 12), float32] */;
  atan(%694) /* ty=Tensor[(15, 13, 12), float32] */
}

def @func_8172(%var_8166: Tensor[(12, 12, 13), float64]) -> (Tensor[(12, 12, 13), float64],) {
  %695 = cast(%var_8166, dtype="float64") /* ty=Tensor[(12, 12, 13), float64] */;
  %696 = tan(%695) /* ty=Tensor[(12, 12, 13), float64] */;
  (%696,)
}

def @func_10832(%var_10820: uint32, %var_10827: Tensor[(1, 1008), float32]) -> (Tensor[(156), float32], uint32, Tensor[(14, 2, 10), float32], Tensor[(10, 9, ?), bool], Tensor[(1, 1008), float32], Tensor[(90), uint32]) {
  %697 = cast(%var_10820, dtype="uint32") /* ty=uint32 */;
  %698 = reshape(%697, newshape=[]) /* ty=uint32 */;
  %699 = @func_7237(%698) /* ty=(Tensor[(3, 1, 180), int16], Tensor[(5, 12, 15), bool], uint32, Tensor[(36, 26), uint32], Tensor[(1, 15), bool], Tensor[(156), float32], Tensor[(840), int64]) */;
  %700 = @func_6948() /* ty=(Tensor[(3, 1, 1), float32], Tensor[(14, 2, 10), float32]) */;
  %701 = %700.1;
  %702 = cast(%701, dtype="float32") /* ty=Tensor[(14, 2, 10), float32] */;
  %703 = cast(%var_10827, dtype="float32") /* ty=Tensor[(1, 1008), float32] */;
  %704 = cast(meta[relay.Constant][59] /* ty=Tensor[(90), uint32] */, dtype="uint32") /* ty=Tensor[(90), uint32] */;
  %705 = reshape(%703, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), float32] */;
  %706 = reshape(%704, newshape=[3, 30]) /* ty=Tensor[(3, 30), uint32] */;
  %707 = @func_1787(%705, %706) /* ty=(Tensor[(9, 7, 16), float32], Tensor[(10, 9, ?), bool], Tensor[(3, 30), uint32]) */;
  %708 = %699.5;
  %709 = cos(%702) /* ty=Tensor[(14, 2, 10), float32] */;
  %710 = %707.1;
  (%708, %var_10820, %709, %710, %var_10827, meta[relay.Constant][59] /* ty=Tensor[(90), uint32] */)
}

def @func_7667() -> (Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float32]) {
  %711 = @func_7380() /* ty=(Tensor[(14, 2, 10), float32],) */;
  %712 = @func_7185() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %713 = %711.0;
  %714 = %712.0;
  (%713, %714)
}

def @func_11004(%var_10974: Tensor[(55), float64], %var_10981: Tensor[(64, 4), int16], %var_10982: Tensor[(840), int64]) -> (Tensor[(3, 1, 1), float64], Tensor[(2, 5, 11), float64], Tensor[(55), float64], Tensor[(110), float64], Tensor[(880), uint16], Tensor[(64, 4), int16], Tensor[(840), int64]) {
  %715 = @func_7891() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %716 = cast(%var_10974, dtype="float64") /* ty=Tensor[(55), float64] */;
  %717 = cast(meta[relay.Constant][60] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %718 = reshape(%716, newshape=[1, 5, 11]) /* ty=Tensor[(1, 5, 11), float64] */;
  %719 = reshape(%717, newshape=[2, 5, 11]) /* ty=Tensor[(2, 5, 11), float64] */;
  %720 = cast(%var_10981, dtype="int16") /* ty=Tensor[(64, 4), int16] */;
  %721 = cast(%var_10982, dtype="int64") /* ty=Tensor[(840), int64] */;
  %722 = reshape(%720, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), int16] */;
  %723 = reshape(%721, newshape=[840]) /* ty=Tensor[(840), int64] */;
  %724 = @func_9032(%722, %723) /* ty=(Tensor[(8, 8, 4), bool], Tensor[(880), uint16], Tensor[(10, 8, 11), float64], Tensor[(3, 1, 1), float64], Tensor[(8, 8, 4), float32], Tensor[(3, 1, 1), float64], Tensor[(5, 12, 15), bool], Tensor[(936), uint32], Tensor[(15), bool], Tensor[(156), float32], Tensor[(840), int64]) */;
  %725 = %715.0;
  %726 = @func_4154(%718, %719) /* ty=Tensor[(2, 5, 11), float64] */;
  %727 = %724.1;
  (%725, %726, %var_10974, meta[relay.Constant][60] /* ty=Tensor[(110), float64] */, %727, %var_10981, %var_10982)
}

def @func_7380() -> (Tensor[(14, 2, 10), float32],) {
  %728 = @func_7145() /* ty=(Tensor[(14, 2, 10), float32],) */;
  %729 = %728.0;
  (%729,)
}

def @func_4263(%var_4246: Tensor[(12, 13, 9), int8], %var_4247: Tensor[(12, 13, 9), int8]) -> (Tensor[(12, 13, 9), bool],) {
  %730 = cast(%var_4247, dtype="bool") /* ty=Tensor[(12, 13, 9), bool] */;
  %731 = shape_of(%var_4246, dtype="int32") /* ty=Tensor[(3), int32] */;
  %732 = cast(%var_4246, dtype="bool") /* ty=Tensor[(12, 13, 9), bool] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %734 = not_equal(%732, %733) /* ty=Tensor[(12, 13, 9), bool] */;
  (%734,)
}

def @func_11028() -> Tensor[(14, 2, 10), float32] {
  %735 = @func_5938() /* ty=(Tensor[(14, 2, 10), float32],) */;
  %735.0
}

def @func_4684(%var_4679: Tensor[(9, 15, 7), uint64], %var_4680: Tensor[(9, 15, 7), uint64]) -> (Tensor[(9, 15, 7), uint64],) {
  %736 = cast(%var_4680, dtype="uint64") /* ty=Tensor[(9, 15, 7), uint64] */;
  %737 = shape_of(%var_4679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%var_4679, dtype="uint64") /* ty=Tensor[(9, 15, 7), uint64] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %740 = multiply(%738, %739) /* ty=Tensor[(9, 15, 7), uint64] */;
  (%740,)
}

def @func_8672(%var_8649: Tensor[(1872), float32], %var_8651: Tensor[(15), bool]) -> (Tensor[(14, 2, 10), float32], Tensor[(14, 2, 10), float32], Tensor[(210), float32], Tensor[(1872), float32], Tensor[(396), bool], Tensor[(15), bool]) {
  %741 = @func_7145() /* ty=(Tensor[(14, 2, 10), float32],) */;
  %742 = cast(meta[relay.Constant][61] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %743 = cast(%var_8649, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %744 = cast(meta[relay.Constant][62] /* ty=Tensor[(396), bool] */, dtype="bool") /* ty=Tensor[(396), bool] */;
  %745 = cast(%var_8651, dtype="bool") /* ty=Tensor[(15), bool] */;
  %746 = reshape(%742, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float32] */;
  %747 = reshape(%743, newshape=[1872, 1]) /* ty=Tensor[(1872, 1), float32] */;
  %748 = reshape(%744, newshape=[396]) /* ty=Tensor[(396), bool] */;
  %749 = reshape(%745, newshape=[1, 15]) /* ty=Tensor[(1, 15), bool] */;
  %750 = @func_8565(%746, %747, %748, %749) /* ty=(Tensor[(3, 10, 7), bool], Tensor[(4, 14, 15), float64], Tensor[(396), bool], Tensor[(5, 12, 15), bool], Tensor[(1, 15), bool], Tensor[(1872, 90), uint64], Tensor[(14, 2, 10), float32], Tensor[(3, 10, 7), float32], Tensor[(14, 2, 10), float32], Tensor[(14, 2, 10), float32]) */;
  %751 = %741.0;
  %752 = %750.6;
  (%751, %752, meta[relay.Constant][61] /* ty=Tensor[(210), float32] */, %var_8649, meta[relay.Constant][62] /* ty=Tensor[(396), bool] */, %var_8651)
}

def @func_8846(%var_8821: Tensor[(10, 14, 15), uint32], %var_8828: Tensor[(10, 14, 15), uint32]) -> (Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(13, 3, 13), float64], Tensor[(1, 507), float64]) {
  %753 = cast(%var_8828, dtype="bool") /* ty=Tensor[(10, 14, 15), bool] */;
  %754 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(10, 14, 15), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(meta[relay.Constant][63] /* ty=Tensor[(10, 14, 15), uint32] */, dtype="bool") /* ty=Tensor[(10, 14, 15), bool] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %757 = cast(%var_8821, dtype="uint32") /* ty=Tensor[(10, 14, 15), uint32] */;
  %758 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(10, 14, 15), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(meta[relay.Constant][63] /* ty=Tensor[(10, 14, 15), uint32] */, dtype="uint32") /* ty=Tensor[(10, 14, 15), uint32] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %761 = bitwise_and(%759, %760) /* ty=Tensor[(10, 14, 15), uint32] */;
  %762 = cast(%761, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
  %763 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 507), float64] */, dtype="float64") /* ty=Tensor[(1, 507), float64] */;
  %764 = reshape(%763, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %765 = @func_2580(%764) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(13, 3, 13), uint32], Tensor[(2400), float32], float32, Tensor[(300, 8), float32]) */;
  %766 = logical_and(%755, %756) /* ty=Tensor[(10, 14, 15), bool] */;
  %767 = sin(%762) /* ty=Tensor[(10, 14, 15), float64] */;
  %768 = %765.0;
  (%766, %767, %768, meta[relay.Constant][64] /* ty=Tensor[(1, 507), float64] */)
}

def @func_9826() -> Tensor[(3, 1, 1), float64] {
  %769 = @func_7697() /* ty=(Tensor[(3, 1, 1), float64], float32, Tensor[(1, 2400), float32], Tensor[(4, 14, 15), float64]) */;
  %769.0
}

def @func_9800() -> (Tensor[(3, 1, 1), float64], Tensor[(5, 12, 15), bool], Tensor[(14, 2, 10), float32], Tensor[(3, 15, 1), bool], Tensor[(14, 2, 10), float64], Tensor[(3, 1, 1), float64]) {
  %770 = @func_7891() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %771 = cast(meta[relay.Constant][65] /* ty=Tensor[(15, 1), bool] */, dtype="bool") /* ty=Tensor[(15, 1), bool] */;
  %772 = reshape(%771, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), bool] */;
  %773 = @func_2771(%772) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) */;
  %774 = @func_5938() /* ty=(Tensor[(14, 2, 10), float32],) */;
  %775 = @func_9637() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float32], Tensor[(3, 1, 1), float64]) */;
  %776 = %775.1;
  %777 = cast(%776, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %778 = cast(meta[relay.Constant][65] /* ty=Tensor[(15, 1), bool] */, dtype="bool") /* ty=Tensor[(15, 1), bool] */;
  %779 = %770.0;
  %780 = %773.0;
  %781 = %774.0;
  %782 = less(%777, %778) /* ty=Tensor[(3, 15, 1), bool] */;
  %783 = @func_6471() /* ty=Tensor[(14, 2, 10), float64] */;
  %784 = @func_5898() /* ty=Tensor[(3, 1, 1), float64] */;
  (%779, %780, %781, %782, %783, %784)
}

def @func_9897() -> Tensor[(3, 1, 1), float32] {
  %785 = @func_6434() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %785.0
}

def @func_6240(%var_6233: Tensor[(1092), uint32]) -> (Tensor[(3, 1, 1), float32], Tensor[(6, 14, 13), uint32], Tensor[(1092), uint32]) {
  %786 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
  %787 = cast(%786, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
  %788 = cast(%var_6233, dtype="uint32") /* ty=Tensor[(1092), uint32] */;
  %789 = cast(%var_6233, dtype="uint32") /* ty=Tensor[(1092), uint32] */;
  %790 = reshape(%788, newshape=[6, 14, 13]) /* ty=Tensor[(6, 14, 13), uint32] */;
  %791 = reshape(%789, newshape=[6, 14, 13]) /* ty=Tensor[(6, 14, 13), uint32] */;
  %792 = erf(%787) /* ty=Tensor[(3, 1, 1), float32] */;
  %793 = @func_2246(%790, %791) /* ty=Tensor[(6, 14, 13), uint32] */;
  (%792, %793, %var_6233)
}

def @func_6173() -> Tensor[(3, 1, 1), float64] {
  %794 = @func_6049() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %794.0
}

def @func_8782() -> (Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) {
  %795 = @func_8439() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %796 = @func_7667() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float32]) */;
  %797 = %796.0;
  %798 = cast(%797, dtype="float32") /* ty=Tensor[(14, 2, 10), float32] */;
  %799 = log10(%798) /* ty=Tensor[(14, 2, 10), float32] */;
  %800 = cast(%799, dtype="float32") /* ty=Tensor[(14, 2, 10), float32] */;
  %801 = @func_8439() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %802 = %801.0;
  %803 = cast(%802, dtype="float64") /* ty=Tensor[(3, 1, 1), float64] */;
  %804 = @func_7370() /* ty=Tensor[(3, 1, 1), float64] */;
  %805 = %795.0;
  %806 = sin(%800) /* ty=Tensor[(14, 2, 10), float32] */;
  %807 = cosh(%803) /* ty=Tensor[(3, 1, 1), float64] */;
  (%804, %805, %806, %807)
}

def @func_8615(%var_8600: Tensor[(3, 1, 6), float64]) -> (Tensor[(3, 1, 6), bool],) {
  %808 = @func_7582() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %809 = %808.0;
  %810 = cast(%809, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %811 = cast(%var_8600, dtype="bool") /* ty=Tensor[(3, 1, 6), bool] */;
  %812 = greater_equal(%810, %811) /* ty=Tensor[(3, 1, 6), bool] */;
  (%812,)
}

def @func_4154(%var_4141: Tensor[(1, 5, 11), float64], %var_4142: Tensor[(2, 5, 11), float64]) -> Tensor[(2, 5, 11), float64] {
  %813 = cast(%var_4141, dtype="float64") /* ty=Tensor[(1, 5, 11), float64] */;
  %814 = cast(%var_4142, dtype="float64") /* ty=Tensor[(2, 5, 11), float64] */;
  %815 = mod(%813, %814) /* ty=Tensor[(2, 5, 11), float64] */;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(2, 5, 11), float64] */;
  sqrt(%816) /* ty=Tensor[(2, 5, 11), float64] */
}

def @func_8911() -> (Tensor[(3, 1, 1), float32],) {
  %817 = @func_6948() /* ty=(Tensor[(3, 1, 1), float32], Tensor[(14, 2, 10), float32]) */;
  %818 = %817.0;
  (%818,)
}

def @func_9032(%var_8937: Tensor[(8, 8, 4), int16], %var_9030: Tensor[(840), int64]) -> (Tensor[(8, 8, 4), bool], Tensor[(880), uint16], Tensor[(10, 8, 11), float64], Tensor[(3, 1, 1), float64], Tensor[(8, 8, 4), float32], Tensor[(3, 1, 1), float64], Tensor[(5, 12, 15), bool], Tensor[(936), uint32], Tensor[(15), bool], Tensor[(156), float32], Tensor[(840), int64]) {
  %819 = cast(meta[relay.Constant][66] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %820 = cast(%var_8937, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
  %821 = cast(meta[relay.Constant][67] /* ty=Tensor[(880), uint16] */, dtype="uint16") /* ty=Tensor[(880), uint16] */;
  %822 = cast(meta[relay.Constant][67] /* ty=Tensor[(880), uint16] */, dtype="uint16") /* ty=Tensor[(880), uint16] */;
  %823 = reshape(%821, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
  %824 = reshape(%822, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
  %825 = @func_4113(%823, %824) /* ty=(Tensor[(10, 8, 11), uint16],) */;
  %826 = %825.0;
  %827 = cast(%826, dtype="float64") /* ty=Tensor[(10, 8, 11), float64] */;
  %828 = cast(meta[relay.Constant][66] /* ty=int16 */, dtype="float64") /* ty=float64 */;
  %829 = cast(%var_8937, dtype="float32") /* ty=Tensor[(8, 8, 4), float32] */;
  %830 = @func_7075() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %831 = cast(meta[relay.Constant][66] /* ty=int16 */, dtype="uint32") /* ty=uint32 */;
  %832 = cast(meta[relay.Constant][68] /* ty=Tensor[(936), uint32] */, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %833 = cast(meta[relay.Constant][69] /* ty=Tensor[(15), bool] */, dtype="bool") /* ty=Tensor[(15), bool] */;
  %834 = cast(meta[relay.Constant][70] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %835 = cast(%var_9030, dtype="int64") /* ty=Tensor[(840), int64] */;
  %836 = reshape(%831, newshape=[]) /* ty=uint32 */;
  %837 = reshape(%832, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint32] */;
  %838 = reshape(%833, newshape=[15]) /* ty=Tensor[(15), bool] */;
  %839 = reshape(%834, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %840 = reshape(%835, newshape=[840]) /* ty=Tensor[(840), int64] */;
  %841 = @func_4879(%836, %837, %838, %839, %840) /* ty=(Tensor[(12, 6, 13), bool], Tensor[(5, 12, 15), bool], Tensor[(15), bool], Tensor[(5, 12, 15), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) */;
  %842 = equal(%819, %820) /* ty=Tensor[(8, 8, 4), bool] */;
  %843 = divide(%827, %828) /* ty=Tensor[(10, 8, 11), float64] */;
  %844 = @func_7049() /* ty=Tensor[(3, 1, 1), float64] */;
  %845 = atan(%829) /* ty=Tensor[(8, 8, 4), float32] */;
  %846 = %830.0;
  %847 = %841.1;
  (%842, meta[relay.Constant][67] /* ty=Tensor[(880), uint16] */, %843, %844, %845, %846, %847, meta[relay.Constant][68] /* ty=Tensor[(936), uint32] */, meta[relay.Constant][69] /* ty=Tensor[(15), bool] */, meta[relay.Constant][70] /* ty=Tensor[(156), float32] */, %var_9030)
}

def @func_442(%var_423: Tensor[(4, 14, 15), int64]) -> Tensor[(4, 14, 15), bool] {
  %848 = cast(%var_423, dtype="bool") /* ty=Tensor[(4, 14, 15), bool] */;
  %849 = shape_of(meta[relay.Constant][71] /* ty=Tensor[(4, 14, 15), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(meta[relay.Constant][71] /* ty=Tensor[(4, 14, 15), int64] */, dtype="bool") /* ty=Tensor[(4, 14, 15), bool] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%850, %851) /* ty=Tensor[(4, 14, 15), bool] */
}

def @main() -> (Tensor[(10, 8, 11), uint16], Tensor[(3, 4, 220), float64]) {
  %852 = cast(meta[relay.Constant][72] /* ty=Tensor[(4, 220), uint16] */, dtype="uint16") /* ty=Tensor[(4, 220), uint16] */;
  %853 = cast(meta[relay.Constant][72] /* ty=Tensor[(4, 220), uint16] */, dtype="uint16") /* ty=Tensor[(4, 220), uint16] */;
  %854 = reshape(%852, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
  %855 = reshape(%853, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
  %856 = @func_4113(%854, %855) /* ty=(Tensor[(10, 8, 11), uint16],) */;
  %857 = @func_6173() /* ty=Tensor[(3, 1, 1), float64] */;
  %858 = cast(%857, dtype="float64") /* ty=Tensor[(3, 1, 1), float64] */;
  %859 = cast(meta[relay.Constant][72] /* ty=Tensor[(4, 220), uint16] */, dtype="float64") /* ty=Tensor[(4, 220), float64] */;
  %860 = %856.0;
  %861 = floor_divide(%858, %859) /* ty=Tensor[(3, 4, 220), float64] */;
  (%860, %861)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9406(%var_9349: Tensor[(11, 4, 8), int8], %var_9350: Tensor[(11, 4, 8), int8]) -> (Tensor[(11, 4, 8), bool], Tensor[(5, 12, 15), bool], Tensor[(15), bool], Tensor[(14, 2, 10), float64], Tensor[(5, 12, 15), bool]) {
  %0 = cast(%var_9350, dtype="bool") /* ty=Tensor[(11, 4, 8), bool] */;
  %1 = shape_of(%var_9349, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_9349, dtype="bool") /* ty=Tensor[(11, 4, 8), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(15), bool] */, dtype="bool") /* ty=Tensor[(15), bool] */;
  %5 = reshape(%4, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), bool] */;
  %6 = @func_2771(%5) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(15), bool] */, dtype="bool") /* ty=Tensor[(15), bool] */;
  %8 = reshape(%7, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), bool] */;
  %9 = @func_2771(%8) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) */;
  %10 = less_equal(%2, %3) /* ty=Tensor[(11, 4, 8), bool] */;
  %11 = %6.1;
  %12 = @func_5662() /* ty=Tensor[(14, 2, 10), float64] */;
  %13 = %9.0;
  (%10, %11, meta[relay.Constant][0] /* ty=Tensor[(15), bool] */, %12, %13)
}

def @func_5664() -> Tensor[(14, 2, 10), float64] {
  @func_5662() /* ty=Tensor[(14, 2, 10), float64] */
}

def @func_9058(%var_9057: Tensor[(10, 1), uint16]) -> Tensor[(10, 1), uint16] {
  %16 = fn (%var_9042: Tensor[(10, 1), uint16]) -> Tensor[(10, 1), uint16] {
    %14 = cast(meta[relay.Constant][1] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %15 = cast(%var_9042, dtype="uint16") /* ty=Tensor[(10, 1), uint16] */;
    bitwise_and(%14, %15) /* ty=Tensor[(10, 1), uint16] */
  };
  %16(%var_9057) /* ty=Tensor[(10, 1), uint16] */
}

def @func_6410(%var_6335: Tensor[(3, 11, 6), float64], %var_6375: Tensor[(156), float32]) -> (Tensor[(3, 11, 6), bool], Tensor[(156), float32], Tensor[(840), int64], Tensor[(3, 2, 420), float32], Tensor[(2, 420), int64], Tensor[(3, 11, 6), float64]) {
  %17 = @func_6173() /* ty=Tensor[(3, 1, 1), float64] */;
  %18 = cast(%17, dtype="uint16") /* ty=Tensor[(3, 1, 1), uint16] */;
  %19 = cast(%var_6335, dtype="uint16") /* ty=Tensor[(3, 11, 6), uint16] */;
  %20 = subtract(%18, %19) /* ty=Tensor[(3, 11, 6), uint16] */;
  %21 = cast(%20, dtype="float64") /* ty=Tensor[(3, 11, 6), float64] */;
  %22 = sqrt(%21) /* ty=Tensor[(3, 11, 6), float64] */;
  %23 = cast(%22, dtype="bool") /* ty=Tensor[(3, 11, 6), bool] */;
  %24 = shape_of(%var_6335, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%var_6335, dtype="bool") /* ty=Tensor[(3, 11, 6), bool] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %27 = cast(%var_6375, dtype="float32") /* ty=Tensor[(156), float32] */;
  %28 = cast(meta[relay.Constant][2] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
  %29 = reshape(%27, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), float32] */;
  %30 = reshape(%28, newshape=[2, 420]) /* ty=Tensor[(2, 420), int64] */;
  %31 = @func_1890(%29, %30) /* ty=(Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64], Tensor[(?, 13, 12), float64]) */;
  %32 = %31.1;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(2, 420), float32] */;
  %34 = cast(%17, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
  %35 = cast(%var_6375, dtype="float32") /* ty=Tensor[(156), float32] */;
  %36 = cast(%32, dtype="int64") /* ty=Tensor[(2, 420), int64] */;
  %37 = reshape(%35, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), float32] */;
  %38 = reshape(%36, newshape=[2, 420]) /* ty=Tensor[(2, 420), int64] */;
  %39 = @func_1890(%37, %38) /* ty=(Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64], Tensor[(?, 13, 12), float64]) */;
  %40 = cast(%22, dtype="float64") /* ty=Tensor[(3, 11, 6), float64] */;
  %41 = not_equal(%25, %26) /* ty=Tensor[(3, 11, 6), bool] */;
  %42 = minimum(%33, %34) /* ty=Tensor[(3, 2, 420), float32] */;
  %43 = %39.1;
  %44 = log2(%40) /* ty=Tensor[(3, 11, 6), float64] */;
  (%41, %var_6375, meta[relay.Constant][2] /* ty=Tensor[(840), int64] */, %42, %43, %44)
}

def @func_10923() -> Tensor[(3, 1, 1), float64] {
  %46 = fn () -> Tensor[(3, 1, 1), float64] {
    %45 = @func_10776() /* ty=(Tensor[(3, 1, 1), float64],) */;
    %45.0
  };
  %46() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_3848(%var_3847: Tensor[(15, 13, 4), float32]) -> (Tensor[(15, 13, 4), float32], Tensor[(16, 10, 15), float32], Tensor[(980), uint64], Tensor[(2400), float32]) {
  %55 = fn (%var_3825: Tensor[(15, 13, 4), float32]) -> (Tensor[(15, 13, 4), float32], Tensor[(16, 10, 15), float32], Tensor[(980), uint64], Tensor[(2400), float32]) {
    %47 = cast(%var_3825, dtype="float32") /* ty=Tensor[(15, 13, 4), float32] */;
    %48 = cast(meta[relay.Constant][3] /* ty=Tensor[(980), uint64] */, dtype="uint64") /* ty=Tensor[(980), uint64] */;
    %49 = cast(meta[relay.Constant][4] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
    %50 = reshape(%48, newshape=[14, 5, 14]) /* ty=Tensor[(14, 5, 14), uint64] */;
    %51 = reshape(%49, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
    %52 = @func_2840(%50, %51) /* ty=(Tensor[(14, 5, 14), bool], Tensor[(16, 10, 15), float32], Tensor[(2400), float32]) */;
    %53 = asin(%47) /* ty=Tensor[(15, 13, 4), float32] */;
    %54 = %52.1;
    (%53, %54, meta[relay.Constant][3] /* ty=Tensor[(980), uint64] */, meta[relay.Constant][4] /* ty=Tensor[(2400), float32] */)
  };
  %55(%var_3847) /* ty=(Tensor[(15, 13, 4), float32], Tensor[(16, 10, 15), float32], Tensor[(980), uint64], Tensor[(2400), float32]) */
}

def @func_1791(%var_1789: Tensor[(9, 7, 16), float32], %var_1790: Tensor[(3, 30), uint32]) -> (Tensor[(9, 7, 16), float32], Tensor[(10, 9, ?), bool], Tensor[(3, 30), uint32]) {
  @func_1787(%var_1789, %var_1790) /* ty=(Tensor[(9, 7, 16), float32], Tensor[(10, 9, ?), bool], Tensor[(3, 30), uint32]) */
}

def @func_6950() -> (Tensor[(3, 1, 1), float32], Tensor[(14, 2, 10), float32]) {
  @func_6948() /* ty=(Tensor[(3, 1, 1), float32], Tensor[(14, 2, 10), float32]) */
}

def @func_2773(%var_2772: Tensor[(1, 1, 15), bool]) -> (Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) {
  %62 = fn (%var_2753: Tensor[(1, 1, 15), bool]) -> (Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) {
    %56 = cast(%var_2753, dtype="bool") /* ty=Tensor[(1, 1, 15), bool] */;
    %57 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 12, 15), bool] */, dtype="bool") /* ty=Tensor[(5, 12, 15), bool] */;
    %58 = cast(%var_2753, dtype="bool") /* ty=Tensor[(1, 1, 15), bool] */;
    %59 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 12, 15), bool] */, dtype="bool") /* ty=Tensor[(5, 12, 15), bool] */;
    %60 = logical_or(%56, %57) /* ty=Tensor[(5, 12, 15), bool] */;
    %61 = greater_equal(%58, %59) /* ty=Tensor[(5, 12, 15), bool] */;
    (%60, %61)
  };
  %62(%var_2772) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) */
}

def @func_8377(%var_8375: Tensor[(350), int32]) -> (Tensor[(3, 1, 1), float64], Tensor[(5, 5, 14), int32], Tensor[(350), int32]) {
  @func_8374(%var_8375) /* ty=(Tensor[(3, 1, 1), float64], Tensor[(5, 5, 14), int32], Tensor[(350), int32]) */
}

def @func_5900() -> Tensor[(3, 1, 1), float64] {
  @func_5898() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_1787(%var_1771: Tensor[(9, 7, 16), float32], %var_1785: Tensor[(3, 30), uint32]) -> (Tensor[(9, 7, 16), float32], Tensor[(10, 9, ?), bool], Tensor[(3, 30), uint32]) {
  %63 = cast(%var_1771, dtype="float32") /* ty=Tensor[(9, 7, 16), float32] */;
  %64 = cast(%var_1785, dtype="uint32") /* ty=Tensor[(3, 30), uint32] */;
  %65 = reshape(%64, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), uint32] */;
  %66 = @func_555(%65) /* ty=(Tensor[(10, 9, ?), bool],) */;
  %67 = atan(%63) /* ty=Tensor[(9, 7, 16), float32] */;
  %68 = %66.0;
  (%67, %68, %var_1785)
}

def @func_10889(%var_10887: Tensor[(2400), float32]) -> (Tensor[(15, 13, 12), float64], Tensor[(300, 8), float32], Tensor[(2400), float32]) {
  @func_10886(%var_10887) /* ty=(Tensor[(15, 13, 12), float64], Tensor[(300, 8), float32], Tensor[(2400), float32]) */
}

def @func_9826() -> Tensor[(3, 1, 1), float64] {
  %69 = @func_7697() /* ty=(Tensor[(3, 1, 1), float64], float32, Tensor[(1, 2400), float32], Tensor[(4, 14, 15), float64]) */;
  %69.0
}

def @func_7698() -> (Tensor[(3, 1, 1), float64], float32, Tensor[(1, 2400), float32], Tensor[(4, 14, 15), float64]) {
  %80 = fn () -> (Tensor[(3, 1, 1), float64], float32, Tensor[(1, 2400), float32], Tensor[(4, 14, 15), float64]) {
    %70 = @func_6049() /* ty=(Tensor[(3, 1, 1), float64],) */;
    %71 = cast(-6.69885f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %72 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 2400), float32] */, dtype="float32") /* ty=Tensor[(1, 2400), float32] */;
    %73 = reshape(%71, newshape=[]) /* ty=float32 */;
    %74 = reshape(%72, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
    %75 = @func_2462(%73, %74) /* ty=(Tensor[(11, 14, 9), float32], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64]) */;
    %76 = %75.3;
    %77 = cast(%76, dtype="float64") /* ty=Tensor[(4, 14, 15), float64] */;
    %78 = %70.0;
    %79 = tan(%77) /* ty=Tensor[(4, 14, 15), float64] */;
    (%78, -6.69885f /* ty=float32 */, meta[relay.Constant][6] /* ty=Tensor[(1, 2400), float32] */, %79)
  };
  %80() /* ty=(Tensor[(3, 1, 1), float64], float32, Tensor[(1, 2400), float32], Tensor[(4, 14, 15), float64]) */
}

def @func_9040() -> Tensor[(3, 1, 1), float64] {
  %82 = fn () -> Tensor[(3, 1, 1), float64] {
    %81 = @func_7582() /* ty=(Tensor[(3, 1, 1), float64],) */;
    %81.0
  };
  %82() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_5543() -> Tensor[(3, 1, 1), float64] {
  @func_5541() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_8782() -> (Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) {
  %83 = @func_8439() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %84 = @func_7667() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float32]) */;
  %85 = %84.0;
  %86 = cast(%85, dtype="float32") /* ty=Tensor[(14, 2, 10), float32] */;
  %87 = log10(%86) /* ty=Tensor[(14, 2, 10), float32] */;
  %88 = cast(%87, dtype="float32") /* ty=Tensor[(14, 2, 10), float32] */;
  %89 = @func_8439() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %90 = %89.0;
  %91 = cast(%90, dtype="float64") /* ty=Tensor[(3, 1, 1), float64] */;
  %92 = @func_7370() /* ty=Tensor[(3, 1, 1), float64] */;
  %93 = %83.0;
  %94 = sin(%88) /* ty=Tensor[(14, 2, 10), float32] */;
  %95 = cosh(%91) /* ty=Tensor[(3, 1, 1), float64] */;
  (%92, %93, %94, %95)
}

def @func_8175(%var_8173: Tensor[(12, 12, 13), float64]) -> (Tensor[(12, 12, 13), float64],) {
  @func_8172(%var_8173) /* ty=(Tensor[(12, 12, 13), float64],) */
}

def @func_10456() -> Tensor[(15, 13, 12), float32] {
  @func_10454() /* ty=Tensor[(15, 13, 12), float32] */
}

def @func_8439() -> (Tensor[(3, 1, 1), float64],) {
  %96 = @func_6758() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %97 = %96.0;
  (%97,)
}

def @func_9497() -> (Tensor[(3, 1, 1), float32],) {
  %98 = @func_8911() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %99 = %98.0;
  (%99,)
}

def @func_4158(%var_4156: Tensor[(1, 5, 11), float64], %var_4157: Tensor[(2, 5, 11), float64]) -> Tensor[(2, 5, 11), float64] {
  @func_4154(%var_4156, %var_4157) /* ty=Tensor[(2, 5, 11), float64] */
}

def @func_8784() -> (Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) {
  @func_8782() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */
}

def @func_5939() -> (Tensor[(14, 2, 10), float32],) {
  %103 = fn () -> (Tensor[(14, 2, 10), float32],) {
    %100 = @func_5662() /* ty=Tensor[(14, 2, 10), float64] */;
    %101 = cast(%100, dtype="float32") /* ty=Tensor[(14, 2, 10), float32] */;
    %102 = asin(%101) /* ty=Tensor[(14, 2, 10), float32] */;
    (%102,)
  };
  %103() /* ty=(Tensor[(14, 2, 10), float32],) */
}

def @func_10671() -> Tensor[(3, 1, 1), float32] {
  %104 = fn () -> Tensor[(3, 1, 1), float32] {
    @func_9897() /* ty=Tensor[(3, 1, 1), float32] */
  };
  %104() /* ty=Tensor[(3, 1, 1), float32] */
}

def @func_4684(%var_4679: Tensor[(9, 15, 7), uint64], %var_4680: Tensor[(9, 15, 7), uint64]) -> (Tensor[(9, 15, 7), uint64],) {
  %105 = cast(%var_4680, dtype="uint64") /* ty=Tensor[(9, 15, 7), uint64] */;
  %106 = shape_of(%var_4679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%var_4679, dtype="uint64") /* ty=Tensor[(9, 15, 7), uint64] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %109 = multiply(%107, %108) /* ty=Tensor[(9, 15, 7), uint64] */;
  (%109,)
}

def @func_10832(%var_10820: uint32, %var_10827: Tensor[(1, 1008), float32]) -> (Tensor[(156), float32], uint32, Tensor[(14, 2, 10), float32], Tensor[(10, 9, ?), bool], Tensor[(1, 1008), float32], Tensor[(90), uint32]) {
  %110 = cast(%var_10820, dtype="uint32") /* ty=uint32 */;
  %111 = reshape(%110, newshape=[]) /* ty=uint32 */;
  %112 = @func_7237(%111) /* ty=(Tensor[(3, 1, 180), int16], Tensor[(5, 12, 15), bool], uint32, Tensor[(36, 26), uint32], Tensor[(1, 15), bool], Tensor[(156), float32], Tensor[(840), int64]) */;
  %113 = @func_6948() /* ty=(Tensor[(3, 1, 1), float32], Tensor[(14, 2, 10), float32]) */;
  %114 = %113.1;
  %115 = cast(%114, dtype="float32") /* ty=Tensor[(14, 2, 10), float32] */;
  %116 = cast(%var_10827, dtype="float32") /* ty=Tensor[(1, 1008), float32] */;
  %117 = cast(meta[relay.Constant][7] /* ty=Tensor[(90), uint32] */, dtype="uint32") /* ty=Tensor[(90), uint32] */;
  %118 = reshape(%116, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), float32] */;
  %119 = reshape(%117, newshape=[3, 30]) /* ty=Tensor[(3, 30), uint32] */;
  %120 = @func_1787(%118, %119) /* ty=(Tensor[(9, 7, 16), float32], Tensor[(10, 9, ?), bool], Tensor[(3, 30), uint32]) */;
  %121 = %112.5;
  %122 = cos(%115) /* ty=Tensor[(14, 2, 10), float32] */;
  %123 = %120.1;
  (%121, %var_10820, %122, %123, %var_10827, meta[relay.Constant][7] /* ty=Tensor[(90), uint32] */)
}

def @func_8675(%var_8673: Tensor[(1872), float32], %var_8674: Tensor[(15), bool]) -> (Tensor[(14, 2, 10), float32], Tensor[(14, 2, 10), float32], Tensor[(210), float32], Tensor[(1872), float32], Tensor[(396), bool], Tensor[(15), bool]) {
  %136 = fn (%var_8649: Tensor[(1872), float32], %var_8651: Tensor[(15), bool]) -> (Tensor[(14, 2, 10), float32], Tensor[(14, 2, 10), float32], Tensor[(210), float32], Tensor[(1872), float32], Tensor[(396), bool], Tensor[(15), bool]) {
    %124 = @func_7145() /* ty=(Tensor[(14, 2, 10), float32],) */;
    %125 = cast(meta[relay.Constant][8] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
    %126 = cast(%var_8649, dtype="float32") /* ty=Tensor[(1872), float32] */;
    %127 = cast(meta[relay.Constant][9] /* ty=Tensor[(396), bool] */, dtype="bool") /* ty=Tensor[(396), bool] */;
    %128 = cast(%var_8651, dtype="bool") /* ty=Tensor[(15), bool] */;
    %129 = reshape(%125, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float32] */;
    %130 = reshape(%126, newshape=[1872, 1]) /* ty=Tensor[(1872, 1), float32] */;
    %131 = reshape(%127, newshape=[396]) /* ty=Tensor[(396), bool] */;
    %132 = reshape(%128, newshape=[1, 15]) /* ty=Tensor[(1, 15), bool] */;
    %133 = @func_8565(%129, %130, %131, %132) /* ty=(Tensor[(3, 10, 7), bool], Tensor[(4, 14, 15), float64], Tensor[(396), bool], Tensor[(5, 12, 15), bool], Tensor[(1, 15), bool], Tensor[(1872, 90), uint64], Tensor[(14, 2, 10), float32], Tensor[(3, 10, 7), float32], Tensor[(14, 2, 10), float32], Tensor[(14, 2, 10), float32]) */;
    %134 = %124.0;
    %135 = %133.6;
    (%134, %135, meta[relay.Constant][8] /* ty=Tensor[(210), float32] */, %var_8649, meta[relay.Constant][9] /* ty=Tensor[(396), bool] */, %var_8651)
  };
  %136(%var_8673, %var_8674) /* ty=(Tensor[(14, 2, 10), float32], Tensor[(14, 2, 10), float32], Tensor[(210), float32], Tensor[(1872), float32], Tensor[(396), bool], Tensor[(15), bool]) */
}

def @func_10712() -> (Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float64]) {
  %141 = fn () -> (Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float64]) {
    %137 = @func_7728() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
    %138 = %137.0;
    %139 = @func_9039() /* ty=Tensor[(3, 1, 1), float64] */;
    %140 = @func_5662() /* ty=Tensor[(14, 2, 10), float64] */;
    (%138, %139, %140)
  };
  %141() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float64]) */
}

def @func_2249(%var_2247: Tensor[(6, 14, 13), uint32], %var_2248: Tensor[(6, 14, 13), uint32]) -> Tensor[(6, 14, 13), uint32] {
  %146 = fn (%var_2239: Tensor[(6, 14, 13), uint32], %var_2240: Tensor[(6, 14, 13), uint32]) -> Tensor[(6, 14, 13), uint32] {
    %142 = cast(%var_2240, dtype="uint32") /* ty=Tensor[(6, 14, 13), uint32] */;
    %143 = shape_of(%var_2239, dtype="int32") /* ty=Tensor[(3), int32] */;
    %144 = cast(%var_2239, dtype="uint32") /* ty=Tensor[(6, 14, 13), uint32] */;
    %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    subtract(%144, %145) /* ty=Tensor[(6, 14, 13), uint32] */
  };
  %146(%var_2247, %var_2248) /* ty=Tensor[(6, 14, 13), uint32] */
}

def @func_7017() -> (Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) {
  %147 = @func_5938() /* ty=(Tensor[(14, 2, 10), float32],) */;
  %148 = %147.0;
  %149 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
  (%148, %149)
}

def @func_10745() -> (Tensor[(14, 2, 10), float64], Tensor[(15, 13, 12), float64], Tensor[(3, 1, 1), float32]) {
  %154 = fn () -> (Tensor[(14, 2, 10), float64], Tensor[(15, 13, 12), float64], Tensor[(3, 1, 1), float32]) {
    %150 = @func_6703() /* ty=(Tensor[(15, 13, 12), float64],) */;
    %151 = @func_6471() /* ty=Tensor[(14, 2, 10), float64] */;
    %152 = %150.0;
    %153 = @func_10325() /* ty=Tensor[(3, 1, 1), float32] */;
    (%151, %152, %153)
  };
  %154() /* ty=(Tensor[(14, 2, 10), float64], Tensor[(15, 13, 12), float64], Tensor[(3, 1, 1), float32]) */
}

def @func_8441() -> (Tensor[(3, 1, 1), float64],) {
  @func_8439() /* ty=(Tensor[(3, 1, 1), float64],) */
}

def @func_10312(%var_10310: Tensor[(1, 6, 12), uint32], %var_10311: Tensor[(11, 6, 12), uint32]) -> (Tensor[(11, 6, 12), bool], Tensor[(3, 1, 1), float64], Tensor[(3, ?, ?), bool]) {
  %170 = fn (%var_10244: Tensor[(1, 6, 12), uint32], %var_10245: Tensor[(11, 6, 12), uint32]) -> (Tensor[(11, 6, 12), bool], Tensor[(3, 1, 1), float64], Tensor[(3, ?, ?), bool]) {
    %155 = cast(%var_10244, dtype="uint32") /* ty=Tensor[(1, 6, 12), uint32] */;
    %156 = cast(%var_10245, dtype="uint32") /* ty=Tensor[(11, 6, 12), uint32] */;
    %157 = right_shift(%155, %156) /* ty=Tensor[(11, 6, 12), uint32] */;
    %158 = cast(%157, dtype="bool") /* ty=Tensor[(11, 6, 12), bool] */;
    %159 = cast(%var_10244, dtype="bool") /* ty=Tensor[(1, 6, 12), bool] */;
    %160 = @func_8439() /* ty=(Tensor[(3, 1, 1), float64],) */;
    %161 = %160.0;
    %162 = @func_5994() /* ty=Tensor[(3, 1, 1), float64] */;
    %163 = cast(%162, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
    %164 = shape_of(%161, dtype="int32") /* ty=Tensor[(3), int32] */;
    %165 = cast(%161, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
    %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %167 = less(%158, %159) /* ty=Tensor[(11, 6, 12), bool] */;
    %168 = @func_7049() /* ty=Tensor[(3, 1, 1), float64] */;
    %169 = logical_or(%165, %166) /* ty=Tensor[(3, ?, ?), bool] */;
    (%167, %168, %169)
  };
  %170(%var_10310, %var_10311) /* ty=(Tensor[(11, 6, 12), bool], Tensor[(3, 1, 1), float64], Tensor[(3, ?, ?), bool]) */
}

def @func_7370() -> Tensor[(3, 1, 1), float64] {
  %171 = @func_7017() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
  %171.1
}

def @func_11029() -> Tensor[(14, 2, 10), float32] {
  %173 = fn () -> Tensor[(14, 2, 10), float32] {
    %172 = @func_5938() /* ty=(Tensor[(14, 2, 10), float32],) */;
    %172.0
  };
  %173() /* ty=Tensor[(14, 2, 10), float32] */
}

def @func_6125(%var_6085: Tensor[(3, 4, 15), uint16]) -> (Tensor[(3, 1, 1), float64], Tensor[(2400), float32], float32, Tensor[(2400), float32], Tensor[(3, 4, 15), int8]) {
  %174 = cast(1.87208f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %175 = cast(meta[relay.Constant][10] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %176 = reshape(%174, newshape=[]) /* ty=float32 */;
  %177 = reshape(%175, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %178 = @func_2462(%176, %177) /* ty=(Tensor[(11, 14, 9), float32], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64]) */;
  %179 = @func_5994() /* ty=Tensor[(3, 1, 1), float64] */;
  %180 = cast(%179, dtype="uint16") /* ty=Tensor[(3, 1, 1), uint16] */;
  %181 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 4, 15), float64] */, dtype="uint16") /* ty=Tensor[(3, 4, 15), uint16] */;
  %182 = bitwise_or(%180, %181) /* ty=Tensor[(3, 4, 15), uint16] */;
  %183 = cast(%var_6085, dtype="int8") /* ty=Tensor[(3, 4, 15), int8] */;
  %184 = shape_of(%182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(%182, dtype="int8") /* ty=Tensor[(3, 4, 15), int8] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %187 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
  %188 = %178.2;
  %189 = bitwise_and(%185, %186) /* ty=Tensor[(3, 4, 15), int8] */;
  (%187, %188, 1.87208f /* ty=float32 */, meta[relay.Constant][10] /* ty=Tensor[(2400), float32] */, %189)
}

def @func_6827(%var_6826: Tensor[(14, 2, 10), float64]) -> (Tensor[(14, 2, 10), bool],) {
  %196 = fn (%var_6807: Tensor[(14, 2, 10), float64]) -> (Tensor[(14, 2, 10), bool],) {
    %190 = @func_6471() /* ty=Tensor[(14, 2, 10), float64] */;
    %191 = cast(%var_6807, dtype="bool") /* ty=Tensor[(14, 2, 10), bool] */;
    %192 = shape_of(%190, dtype="int32") /* ty=Tensor[(3), int32] */;
    %193 = cast(%190, dtype="bool") /* ty=Tensor[(14, 2, 10), bool] */;
    %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %195 = equal(%193, %194) /* ty=Tensor[(14, 2, 10), bool] */;
    (%195,)
  };
  %196(%var_6826) /* ty=(Tensor[(14, 2, 10), bool],) */
}

def @func_6175() -> Tensor[(3, 1, 1), float64] {
  @func_6173() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_9802() -> (Tensor[(3, 1, 1), float64], Tensor[(5, 12, 15), bool], Tensor[(14, 2, 10), float32], Tensor[(3, 15, 1), bool], Tensor[(14, 2, 10), float64], Tensor[(3, 1, 1), float64]) {
  @func_9800() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(5, 12, 15), bool], Tensor[(14, 2, 10), float32], Tensor[(3, 15, 1), bool], Tensor[(14, 2, 10), float64], Tensor[(3, 1, 1), float64]) */
}

def @func_9202(%var_9200: Tensor[(7, 6, 7), float64], %var_9201: Tensor[(7, 6, 7), float64]) -> (Tensor[(7, 6, 7), float64], Tensor[(7, 6, 7), float64]) {
  @func_9198(%var_9200, %var_9201) /* ty=(Tensor[(7, 6, 7), float64], Tensor[(7, 6, 7), float64]) */
}

def @func_4116(%var_4114: Tensor[(10, 8, 11), uint16], %var_4115: Tensor[(10, 8, 11), uint16]) -> (Tensor[(10, 8, 11), uint16],) {
  %202 = fn (%var_4097: Tensor[(10, 8, 11), uint16], %var_4098: Tensor[(10, 8, 11), uint16]) -> (Tensor[(10, 8, 11), uint16],) {
    %197 = cast(%var_4098, dtype="uint16") /* ty=Tensor[(10, 8, 11), uint16] */;
    %198 = shape_of(%var_4097, dtype="int32") /* ty=Tensor[(3), int32] */;
    %199 = cast(%var_4097, dtype="uint16") /* ty=Tensor[(10, 8, 11), uint16] */;
    %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %201 = bitwise_xor(%199, %200) /* ty=Tensor[(10, 8, 11), uint16] */;
    (%201,)
  };
  %202(%var_4114, %var_4115) /* ty=(Tensor[(10, 8, 11), uint16],) */
}

def @func_9116() -> (Tensor[(3, 1, 1), float64],) {
  %203 = @func_7891() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %204 = %203.0;
  (%204,)
}

def @func_6435() -> (Tensor[(3, 1, 1), float32],) {
  %209 = fn () -> (Tensor[(3, 1, 1), float32],) {
    %205 = @func_6049() /* ty=(Tensor[(3, 1, 1), float64],) */;
    %206 = %205.0;
    %207 = cast(%206, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
    %208 = exp(%207) /* ty=Tensor[(3, 1, 1), float32] */;
    (%208,)
  };
  %209() /* ty=(Tensor[(3, 1, 1), float32],) */
}

def @func_7504() -> Tensor[(15, 13, 12), float64] {
  %210 = @func_6703() /* ty=(Tensor[(15, 13, 12), float64],) */;
  %210.0
}

def @func_11047() -> (Tensor[(3, 1, 1), float32],) {
  %212 = fn () -> (Tensor[(3, 1, 1), float32],) {
    %211 = @func_10325() /* ty=Tensor[(3, 1, 1), float32] */;
    (%211,)
  };
  %212() /* ty=(Tensor[(3, 1, 1), float32],) */
}

def @func_9800() -> (Tensor[(3, 1, 1), float64], Tensor[(5, 12, 15), bool], Tensor[(14, 2, 10), float32], Tensor[(3, 15, 1), bool], Tensor[(14, 2, 10), float64], Tensor[(3, 1, 1), float64]) {
  %213 = @func_7891() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %214 = cast(meta[relay.Constant][12] /* ty=Tensor[(15, 1), bool] */, dtype="bool") /* ty=Tensor[(15, 1), bool] */;
  %215 = reshape(%214, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), bool] */;
  %216 = @func_2771(%215) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) */;
  %217 = @func_5938() /* ty=(Tensor[(14, 2, 10), float32],) */;
  %218 = @func_9637() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float32], Tensor[(3, 1, 1), float64]) */;
  %219 = %218.1;
  %220 = cast(%219, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %221 = cast(meta[relay.Constant][12] /* ty=Tensor[(15, 1), bool] */, dtype="bool") /* ty=Tensor[(15, 1), bool] */;
  %222 = %213.0;
  %223 = %216.0;
  %224 = %217.0;
  %225 = less(%220, %221) /* ty=Tensor[(3, 15, 1), bool] */;
  %226 = @func_6471() /* ty=Tensor[(14, 2, 10), float64] */;
  %227 = @func_5898() /* ty=Tensor[(3, 1, 1), float64] */;
  (%222, %223, %224, %225, %226, %227)
}

def @func_5277(%var_5275: Tensor[(300, 8), float32]) -> (Tensor[(15, 13, 5), float64], Tensor[(15, 13, 5), float64], Tensor[(16, 10, 15), float32], Tensor[(300, 8), float32]) {
  @func_5274(%var_5275) /* ty=(Tensor[(15, 13, 5), float64], Tensor[(15, 13, 5), float64], Tensor[(16, 10, 15), float32], Tensor[(300, 8), float32]) */
}

def @func_10454() -> Tensor[(15, 13, 12), float32] {
  %228 = @func_6703() /* ty=(Tensor[(15, 13, 12), float64],) */;
  %229 = %228.0;
  %230 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 13, 12), float64] */, dtype="bool") /* ty=Tensor[(15, 13, 12), bool] */;
  %231 = shape_of(%229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(%229, dtype="bool") /* ty=Tensor[(15, 13, 12), bool] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %234 = not_equal(%232, %233) /* ty=Tensor[(15, 13, 12), bool] */;
  %235 = cast(%234, dtype="int32") /* ty=Tensor[(15, 13, 12), int32] */;
  %236 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(15, 13, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 13, 12), float64] */, dtype="int32") /* ty=Tensor[(15, 13, 12), int32] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %239 = logical_xor(%237, %238) /* ty=Tensor[(15, 13, 12), int32] */;
  %240 = cast(%239, dtype="float32") /* ty=Tensor[(15, 13, 12), float32] */;
  atan(%240) /* ty=Tensor[(15, 13, 12), float32] */
}

def @func_7186() -> (Tensor[(3, 1, 1), float32],) {
  %243 = fn () -> (Tensor[(3, 1, 1), float32],) {
    %241 = @func_6434() /* ty=(Tensor[(3, 1, 1), float32],) */;
    %242 = %241.0;
    (%242,)
  };
  %243() /* ty=(Tensor[(3, 1, 1), float32],) */
}

def @func_9499() -> (Tensor[(3, 1, 1), float32],) {
  @func_9497() /* ty=(Tensor[(3, 1, 1), float32],) */
}

def @func_5621(%var_5581: Tensor[(3, 11, 1), float64], %var_5599: Tensor[(7, 156), uint32]) -> (Tensor[(6, 14, 13), uint32], Tensor[(7, 156), uint32], float32, Tensor[(507), float64], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(3, 11, 13), float64]) {
  %244 = cast(%var_5599, dtype="uint32") /* ty=Tensor[(7, 156), uint32] */;
  %245 = cast(%var_5599, dtype="uint32") /* ty=Tensor[(7, 156), uint32] */;
  %246 = reshape(%244, newshape=[6, 14, 13]) /* ty=Tensor[(6, 14, 13), uint32] */;
  %247 = reshape(%245, newshape=[6, 14, 13]) /* ty=Tensor[(6, 14, 13), uint32] */;
  %248 = cast(meta[relay.Constant][14] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %249 = reshape(%248, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %250 = @func_2580(%249) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(13, 3, 13), uint32], Tensor[(2400), float32], float32, Tensor[(300, 8), float32]) */;
  %251 = cast(meta[relay.Constant][15] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %252 = reshape(%251, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), float32] */;
  %253 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
  %254 = cast(%253, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %255 = cast(%var_5581, dtype="bool") /* ty=Tensor[(3, 11, 1), bool] */;
  %256 = greater_equal(%254, %255) /* ty=Tensor[(3, 11, 1), bool] */;
  %257 = cast(%256, dtype="float64") /* ty=Tensor[(3, 11, 1), float64] */;
  %258 = asin(%257) /* ty=Tensor[(3, 11, 1), float64] */;
  %259 = cast(%258, dtype="float64") /* ty=Tensor[(3, 11, 1), float64] */;
  %260 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 11, 13), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 13), float64] */;
  %261 = @func_2246(%246, %247) /* ty=Tensor[(6, 14, 13), uint32] */;
  %262 = %250.3;
  %263 = @func_1940(%252) /* ty=Tensor[(16, 10, 15), float32] */;
  %264 = divide(%259, %260) /* ty=Tensor[(3, 11, 13), float64] */;
  (%261, %var_5599, %262, meta[relay.Constant][14] /* ty=Tensor[(507), float64] */, %263, meta[relay.Constant][15] /* ty=Tensor[(2400), float32] */, %264)
}

def @func_9198(%var_9129: Tensor[(7, 6, 7), float64], %var_9130: Tensor[(7, 6, 7), float64]) -> (Tensor[(7, 6, 7), float64], Tensor[(7, 6, 7), float64]) {
  %265 = cast(%var_9130, dtype="float64") /* ty=Tensor[(7, 6, 7), float64] */;
  %266 = shape_of(%var_9129, dtype="int32") /* ty=Tensor[(3), int32] */;
  %267 = cast(%var_9129, dtype="float64") /* ty=Tensor[(7, 6, 7), float64] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %269 = cast(%var_9130, dtype="float64") /* ty=Tensor[(7, 6, 7), float64] */;
  %270 = maximum(%267, %268) /* ty=Tensor[(7, 6, 7), float64] */;
  %271 = atanh(%269) /* ty=Tensor[(7, 6, 7), float64] */;
  (%270, %271)
}

def @func_7123(%var_7121: Tensor[(8, 10, 14), uint8], %var_7122: Tensor[(8, 10, 14), uint8]) -> (Tensor[(8, 10, 14), uint8], Tensor[(4, 14, 15), bool], Tensor[(840), int64], float32, Tensor[(33), float64], Tensor[(1092), uint32], Tensor[(9, 1, 14), float32], Tensor[(63, 2), float32], float32, Tensor[(180), uint16]) {
  %294 = fn (%var_7088: Tensor[(8, 10, 14), uint8], %var_7089: Tensor[(8, 10, 14), uint8]) -> (Tensor[(8, 10, 14), uint8], Tensor[(4, 14, 15), bool], Tensor[(840), int64], float32, Tensor[(33), float64], Tensor[(1092), uint32], Tensor[(9, 1, 14), float32], Tensor[(63, 2), float32], float32, Tensor[(180), uint16]) {
    %272 = cast(%var_7089, dtype="uint8") /* ty=Tensor[(8, 10, 14), uint8] */;
    %273 = shape_of(%var_7088, dtype="int32") /* ty=Tensor[(3), int32] */;
    %274 = cast(%var_7088, dtype="uint8") /* ty=Tensor[(8, 10, 14), uint8] */;
    %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %276 = cast(meta[relay.Constant][17] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
    %277 = reshape(%276, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), int64] */;
    %278 = cast(meta[relay.Constant][18] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
    %279 = cast(meta[relay.Constant][19] /* ty=Tensor[(1092), uint32] */, dtype="uint32") /* ty=Tensor[(1092), uint32] */;
    %280 = reshape(%278, newshape=[3, 11, 1]) /* ty=Tensor[(3, 11, 1), float64] */;
    %281 = reshape(%279, newshape=[7, 156]) /* ty=Tensor[(7, 156), uint32] */;
    %282 = @func_5621(%280, %281) /* ty=(Tensor[(6, 14, 13), uint32], Tensor[(7, 156), uint32], float32, Tensor[(507), float64], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(3, 11, 13), float64]) */;
    %283 = cast(meta[relay.Constant][20] /* ty=Tensor[(63, 2), float32] */, dtype="float32") /* ty=Tensor[(63, 2), float32] */;
    %284 = reshape(%283, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
    %285 = @func_6616(%284) /* ty=(Tensor[(9, 1, 14), float32],) */;
    %286 = cast(meta[relay.Constant][21] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
    %287 = reshape(%286, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint16] */;
    %288 = @func_6125(%287) /* ty=(Tensor[(3, 1, 1), float64], Tensor[(2400), float32], float32, Tensor[(2400), float32], Tensor[(3, 4, 15), int8]) */;
    %289 = minimum(%274, %275) /* ty=Tensor[(8, 10, 14), uint8] */;
    %290 = @func_442(%277) /* ty=Tensor[(4, 14, 15), bool] */;
    %291 = %282.2;
    %292 = %285.0;
    %293 = %288.2;
    (%289, %290, meta[relay.Constant][17] /* ty=Tensor[(840), int64] */, %291, meta[relay.Constant][18] /* ty=Tensor[(33), float64] */, meta[relay.Constant][19] /* ty=Tensor[(1092), uint32] */, %292, meta[relay.Constant][20] /* ty=Tensor[(63, 2), float32] */, %293, meta[relay.Constant][21] /* ty=Tensor[(180), uint16] */)
  };
  %294(%var_7121, %var_7122) /* ty=(Tensor[(8, 10, 14), uint8], Tensor[(4, 14, 15), bool], Tensor[(840), int64], float32, Tensor[(33), float64], Tensor[(1092), uint32], Tensor[(9, 1, 14), float32], Tensor[(63, 2), float32], float32, Tensor[(180), uint16]) */
}

def @func_9428() -> Tensor[(14, 2, 10), float64] {
  %295 = fn () -> Tensor[(14, 2, 10), float64] {
    @func_6471() /* ty=Tensor[(14, 2, 10), float64] */
  };
  %295() /* ty=Tensor[(14, 2, 10), float64] */
}

def @func_6173() -> Tensor[(3, 1, 1), float64] {
  %296 = @func_6049() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %296.0
}

def @func_2582(%var_2581: Tensor[(13, 3, 13), float64]) -> (Tensor[(13, 3, 13), float64], Tensor[(13, 3, 13), uint32], Tensor[(2400), float32], float32, Tensor[(300, 8), float32]) {
  %310 = fn (%var_2545: Tensor[(13, 3, 13), float64]) -> (Tensor[(13, 3, 13), float64], Tensor[(13, 3, 13), uint32], Tensor[(2400), float32], float32, Tensor[(300, 8), float32]) {
    %297 = cast(%var_2545, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
    %298 = cast(meta[relay.Constant][22] /* ty=Tensor[(13, 3, 13), float64] */, dtype="uint32") /* ty=Tensor[(13, 3, 13), uint32] */;
    %299 = shape_of(%var_2545, dtype="int32") /* ty=Tensor[(3), int32] */;
    %300 = cast(%var_2545, dtype="uint32") /* ty=Tensor[(13, 3, 13), uint32] */;
    %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %302 = cast(1.6959f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %303 = cast(meta[relay.Constant][23] /* ty=Tensor[(300, 8), float32] */, dtype="float32") /* ty=Tensor[(300, 8), float32] */;
    %304 = reshape(%302, newshape=[]) /* ty=float32 */;
    %305 = reshape(%303, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
    %306 = @func_2462(%304, %305) /* ty=(Tensor[(11, 14, 9), float32], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64]) */;
    %307 = asin(%297) /* ty=Tensor[(13, 3, 13), float64] */;
    %308 = bitwise_xor(%300, %301) /* ty=Tensor[(13, 3, 13), uint32] */;
    %309 = %306.2;
    (%307, %308, %309, 1.6959f /* ty=float32 */, meta[relay.Constant][23] /* ty=Tensor[(300, 8), float32] */)
  };
  %310(%var_2581) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(13, 3, 13), uint32], Tensor[(2400), float32], float32, Tensor[(300, 8), float32]) */
}

def @func_5898() -> Tensor[(3, 1, 1), float64] {
  @func_5541() /* ty=Tensor[(3, 1, 1), float64] */
}

def @main() -> (Tensor[(10, 8, 11), uint16], Tensor[(3, 4, 220), float64]) {
  %311 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 220), uint16] */, dtype="uint16") /* ty=Tensor[(4, 220), uint16] */;
  %312 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 220), uint16] */, dtype="uint16") /* ty=Tensor[(4, 220), uint16] */;
  %313 = reshape(%311, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
  %314 = reshape(%312, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
  %315 = @func_4116(%313, %314) /* ty=(Tensor[(10, 8, 11), uint16],) */;
  %316 = @func_6173() /* ty=Tensor[(3, 1, 1), float64] */;
  %317 = cast(%316, dtype="float64") /* ty=Tensor[(3, 1, 1), float64] */;
  %318 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 220), uint16] */, dtype="float64") /* ty=Tensor[(4, 220), float64] */;
  %319 = %315.0;
  %320 = floor_divide(%317, %318) /* ty=Tensor[(3, 4, 220), float64] */;
  (%319, %320)
}

def @func_1940(%var_1937: Tensor[(16, 10, 15), float32]) -> Tensor[(16, 10, 15), float32] {
  %321 = cast(%var_1937, dtype="float32") /* ty=Tensor[(16, 10, 15), float32] */;
  atan(%321) /* ty=Tensor[(16, 10, 15), float32] */
}

def @func_1115(%var_1112: Tensor[(12, 13, 12), float32], %var_1113: Tensor[(66, 6), bool], %var_1114: Tensor[(90), uint32]) -> (Tensor[(12, 13, 12), float32], Tensor[(4, 14, 15), bool], Tensor[(840), int64], Tensor[(11, 6, 6), bool], Tensor[(66, 6), bool], Tensor[(10, 9, ?), bool], Tensor[(90), uint32], Tensor[(4, 14, 15), float64], Tensor[(11, 6, 6), bool]) {
  %346 = fn (%var_1017: Tensor[(12, 13, 12), float32], %var_1037: Tensor[(66, 6), bool], %var_1077: Tensor[(90), uint32]) -> (Tensor[(12, 13, 12), float32], Tensor[(4, 14, 15), bool], Tensor[(840), int64], Tensor[(11, 6, 6), bool], Tensor[(66, 6), bool], Tensor[(10, 9, ?), bool], Tensor[(90), uint32], Tensor[(4, 14, 15), float64], Tensor[(11, 6, 6), bool]) {
    %322 = cast(%var_1017, dtype="float32") /* ty=Tensor[(12, 13, 12), float32] */;
    %323 = cast(meta[relay.Constant][25] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
    %324 = reshape(%323, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), int64] */;
    %325 = cast(%var_1037, dtype="bool") /* ty=Tensor[(66, 6), bool] */;
    %326 = cast(%var_1037, dtype="bool") /* ty=Tensor[(66, 6), bool] */;
    %327 = reshape(%325, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
    %328 = reshape(%326, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
    %329 = cast(%var_1077, dtype="uint32") /* ty=Tensor[(90), uint32] */;
    %330 = reshape(%329, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), uint32] */;
    %331 = @func_555(%330) /* ty=(Tensor[(10, 9, ?), bool],) */;
    %332 = cast(meta[relay.Constant][25] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
    %333 = reshape(%332, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), int64] */;
    %334 = @func_442(%333) /* ty=Tensor[(4, 14, 15), bool] */;
    %335 = cast(%334, dtype="float64") /* ty=Tensor[(4, 14, 15), float64] */;
    %336 = @func_182(%327, %328) /* ty=Tensor[(11, 6, 6), bool] */;
    %337 = cast(%336, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
    %338 = cast(%var_1037, dtype="bool") /* ty=Tensor[(66, 6), bool] */;
    %339 = reshape(%337, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
    %340 = reshape(%338, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
    %341 = log10(%322) /* ty=Tensor[(12, 13, 12), float32] */;
    %342 = @func_442(%324) /* ty=Tensor[(4, 14, 15), bool] */;
    %343 = %331.0;
    %344 = sqrt(%335) /* ty=Tensor[(4, 14, 15), float64] */;
    %345 = @func_182(%339, %340) /* ty=Tensor[(11, 6, 6), bool] */;
    (%341, %342, meta[relay.Constant][25] /* ty=Tensor[(840), int64] */, %336, %var_1037, %343, %var_1077, %344, %345)
  };
  %346(%var_1112, %var_1113, %var_1114) /* ty=(Tensor[(12, 13, 12), float32], Tensor[(4, 14, 15), bool], Tensor[(840), int64], Tensor[(11, 6, 6), bool], Tensor[(66, 6), bool], Tensor[(10, 9, ?), bool], Tensor[(90), uint32], Tensor[(4, 14, 15), float64], Tensor[(11, 6, 6), bool]) */
}

def @func_10616(%var_10614: Tensor[(1, 2400), uint8], %var_10615: Tensor[(2100), uint32]) -> (Tensor[(16, 10, 15), uint8], Tensor[(1, 2400), uint8], Tensor[(16, 10, 15), float32], Tensor[(2100), uint32], Tensor[(3, 1, 840), bool], Tensor[(11, 6, 6), bool], Tensor[(396), bool], Tensor[(3, 1, 507), bool]) {
  @func_10612(%var_10614, %var_10615) /* ty=(Tensor[(16, 10, 15), uint8], Tensor[(1, 2400), uint8], Tensor[(16, 10, 15), float32], Tensor[(2100), uint32], Tensor[(3, 1, 840), bool], Tensor[(11, 6, 6), bool], Tensor[(396), bool], Tensor[(3, 1, 507), bool]) */
}

def @func_10836(%var_10834: uint32, %var_10835: Tensor[(1, 1008), float32]) -> (Tensor[(156), float32], uint32, Tensor[(14, 2, 10), float32], Tensor[(10, 9, ?), bool], Tensor[(1, 1008), float32], Tensor[(90), uint32]) {
  @func_10832(%var_10834, %var_10835) /* ty=(Tensor[(156), float32], uint32, Tensor[(14, 2, 10), float32], Tensor[(10, 9, ?), bool], Tensor[(1, 1008), float32], Tensor[(90), uint32]) */
}

def @func_8374(%var_8361: Tensor[(350), int32]) -> (Tensor[(3, 1, 1), float64], Tensor[(5, 5, 14), int32], Tensor[(350), int32]) {
  %347 = cast(%var_8361, dtype="int32") /* ty=Tensor[(350), int32] */;
  %348 = reshape(%347, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
  %349 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
  %350 = @func_7601(%348) /* ty=Tensor[(5, 5, 14), int32] */;
  (%349, %350, %var_8361)
}

def @func_7341(%var_7339: Tensor[(1008), float32], %var_7340: Tensor[(90), uint32]) -> (Tensor[(156), float32], Tensor[(936), uint32], Tensor[(15), bool], Tensor[(156), float32], Tensor[(840), int64], Tensor[(10, 9, ?), bool], Tensor[(1008), float32], Tensor[(90), uint32], Tensor[(9, 7, 16), float32], Tensor[(15, 13, 12), uint8], Tensor[(2400), float32], Tensor[(180), uint16]) {
  %384 = fn (%var_7308: Tensor[(1008), float32], %var_7309: Tensor[(90), uint32]) -> (Tensor[(156), float32], Tensor[(936), uint32], Tensor[(15), bool], Tensor[(156), float32], Tensor[(840), int64], Tensor[(10, 9, ?), bool], Tensor[(1008), float32], Tensor[(90), uint32], Tensor[(9, 7, 16), float32], Tensor[(15, 13, 12), uint8], Tensor[(2400), float32], Tensor[(180), uint16]) {
    %351 = cast(meta[relay.Constant][26] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %352 = cast(meta[relay.Constant][27] /* ty=Tensor[(936), uint32] */, dtype="uint32") /* ty=Tensor[(936), uint32] */;
    %353 = cast(meta[relay.Constant][28] /* ty=Tensor[(15), bool] */, dtype="bool") /* ty=Tensor[(15), bool] */;
    %354 = cast(meta[relay.Constant][29] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %355 = cast(meta[relay.Constant][30] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
    %356 = reshape(%351, newshape=[]) /* ty=uint32 */;
    %357 = reshape(%352, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint32] */;
    %358 = reshape(%353, newshape=[15]) /* ty=Tensor[(15), bool] */;
    %359 = reshape(%354, newshape=[156]) /* ty=Tensor[(156), float32] */;
    %360 = reshape(%355, newshape=[840]) /* ty=Tensor[(840), int64] */;
    %361 = @func_4879(%356, %357, %358, %359, %360) /* ty=(Tensor[(12, 6, 13), bool], Tensor[(5, 12, 15), bool], Tensor[(15), bool], Tensor[(5, 12, 15), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) */;
    %362 = cast(%var_7308, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %363 = cast(%var_7309, dtype="uint32") /* ty=Tensor[(90), uint32] */;
    %364 = reshape(%362, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), float32] */;
    %365 = reshape(%363, newshape=[3, 30]) /* ty=Tensor[(3, 30), uint32] */;
    %366 = @func_1787(%364, %365) /* ty=(Tensor[(9, 7, 16), float32], Tensor[(10, 9, ?), bool], Tensor[(3, 30), uint32]) */;
    %367 = cast(%var_7308, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %368 = %366.1;
    %369 = cast(%368, dtype="uint32") /* ty=Tensor[(10, 9, ?), uint32] */;
    %370 = reshape(%367, newshape=[9, 7, 16]) /* ty=Tensor[(9, 7, 16), float32] */;
    %371 = reshape(%369, newshape=[3, 30]) /* ty=Tensor[(3, 30), uint32] */;
    %372 = @func_1787(%370, %371) /* ty=(Tensor[(9, 7, 16), float32], Tensor[(10, 9, ?), bool], Tensor[(3, 30), uint32]) */;
    %373 = @func_6703() /* ty=(Tensor[(15, 13, 12), float64],) */;
    %374 = %373.0;
    %375 = cast(%374, dtype="uint8") /* ty=Tensor[(15, 13, 12), uint8] */;
    %376 = cast(meta[relay.Constant][26] /* ty=uint32 */, dtype="uint8") /* ty=uint8 */;
    %377 = cast(meta[relay.Constant][31] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
    %378 = reshape(%377, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint16] */;
    %379 = @func_6125(%378) /* ty=(Tensor[(3, 1, 1), float64], Tensor[(2400), float32], float32, Tensor[(2400), float32], Tensor[(3, 4, 15), int8]) */;
    %380 = %361.5;
    %381 = %372.0;
    %382 = subtract(%375, %376) /* ty=Tensor[(15, 13, 12), uint8] */;
    %383 = %379.3;
    (%380, meta[relay.Constant][27] /* ty=Tensor[(936), uint32] */, meta[relay.Constant][28] /* ty=Tensor[(15), bool] */, meta[relay.Constant][29] /* ty=Tensor[(156), float32] */, meta[relay.Constant][30] /* ty=Tensor[(840), int64] */, %368, %var_7308, %var_7309, %381, %382, %383, meta[relay.Constant][31] /* ty=Tensor[(180), uint16] */)
  };
  %384(%var_7339, %var_7340) /* ty=(Tensor[(156), float32], Tensor[(936), uint32], Tensor[(15), bool], Tensor[(156), float32], Tensor[(840), int64], Tensor[(10, 9, ?), bool], Tensor[(1008), float32], Tensor[(90), uint32], Tensor[(9, 7, 16), float32], Tensor[(15, 13, 12), uint8], Tensor[(2400), float32], Tensor[(180), uint16]) */
}

def @func_5625(%var_5623: Tensor[(3, 11, 1), float64], %var_5624: Tensor[(7, 156), uint32]) -> (Tensor[(6, 14, 13), uint32], Tensor[(7, 156), uint32], float32, Tensor[(507), float64], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(3, 11, 13), float64]) {
  @func_5621(%var_5623, %var_5624) /* ty=(Tensor[(6, 14, 13), uint32], Tensor[(7, 156), uint32], float32, Tensor[(507), float64], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(3, 11, 13), float64]) */
}

def @func_182(%var_147: Tensor[(11, 6, 6), bool], %var_148: Tensor[(11, 6, 6), bool]) -> Tensor[(11, 6, 6), bool] {
  %385 = cast(%var_148, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %386 = shape_of(%var_147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%var_147, dtype="bool") /* ty=Tensor[(11, 6, 6), bool] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%387, %388) /* ty=Tensor[(11, 6, 6), bool] */
}

def @func_9715(%var_9714: Tensor[(2, 440), uint16]) -> (Tensor[(3, 1, 1), float32], Tensor[(3, 1, 1), float64], Tensor[(10, 8, 11), uint16], Tensor[(2, 440), uint16]) {
  %399 = fn (%var_9711: Tensor[(2, 440), uint16]) -> (Tensor[(3, 1, 1), float32], Tensor[(3, 1, 1), float64], Tensor[(10, 8, 11), uint16], Tensor[(2, 440), uint16]) {
    %389 = @func_7762() /* ty=(Tensor[(3, 1, 1), float32],) */;
    %390 = @func_9116() /* ty=(Tensor[(3, 1, 1), float64],) */;
    %391 = cast(%var_9711, dtype="uint16") /* ty=Tensor[(2, 440), uint16] */;
    %392 = cast(%var_9711, dtype="uint16") /* ty=Tensor[(2, 440), uint16] */;
    %393 = reshape(%391, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
    %394 = reshape(%392, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
    %395 = @func_4113(%393, %394) /* ty=(Tensor[(10, 8, 11), uint16],) */;
    %396 = %389.0;
    %397 = %390.0;
    %398 = %395.0;
    (%396, %397, %398, %var_9711)
  };
  %399(%var_9714) /* ty=(Tensor[(3, 1, 1), float32], Tensor[(3, 1, 1), float64], Tensor[(10, 8, 11), uint16], Tensor[(2, 440), uint16]) */
}

def @func_1943(%var_1941: Tensor[(16, 10, 15), float32]) -> Tensor[(16, 10, 15), float32] {
  @func_1940(%var_1941) /* ty=Tensor[(16, 10, 15), float32] */
}

def @func_7729() -> (Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) {
  %405 = fn () -> (Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) {
    %400 = @func_7075() /* ty=(Tensor[(3, 1, 1), float64],) */;
    %401 = @func_5938() /* ty=(Tensor[(14, 2, 10), float32],) */;
    %402 = %400.0;
    %403 = %401.0;
    %404 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
    (%402, %403, %404)
  };
  %405() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */
}

def @func_9639() -> (Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float32], Tensor[(3, 1, 1), float64]) {
  @func_9637() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float32], Tensor[(3, 1, 1), float64]) */
}

def @func_2843(%var_2841: Tensor[(14, 5, 14), uint64], %var_2842: Tensor[(2400), float32]) -> (Tensor[(14, 5, 14), bool], Tensor[(16, 10, 15), float32], Tensor[(2400), float32]) {
  %414 = fn (%var_2827: Tensor[(14, 5, 14), uint64], %var_2838: Tensor[(2400), float32]) -> (Tensor[(14, 5, 14), bool], Tensor[(16, 10, 15), float32], Tensor[(2400), float32]) {
    %406 = cast(%var_2827, dtype="bool") /* ty=Tensor[(14, 5, 14), bool] */;
    %407 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(14, 5, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %408 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 5, 14), uint64] */, dtype="bool") /* ty=Tensor[(14, 5, 14), bool] */;
    %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %410 = cast(%var_2838, dtype="float32") /* ty=Tensor[(2400), float32] */;
    %411 = reshape(%410, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), float32] */;
    %412 = not_equal(%408, %409) /* ty=Tensor[(14, 5, 14), bool] */;
    %413 = @func_1940(%411) /* ty=Tensor[(16, 10, 15), float32] */;
    (%412, %413, %var_2838)
  };
  %414(%var_2841, %var_2842) /* ty=(Tensor[(14, 5, 14), bool], Tensor[(16, 10, 15), float32], Tensor[(2400), float32]) */
}

def @func_5274(%var_5260: Tensor[(300, 8), float32]) -> (Tensor[(15, 13, 5), float64], Tensor[(15, 13, 5), float64], Tensor[(16, 10, 15), float32], Tensor[(300, 8), float32]) {
  %415 = cast(meta[relay.Constant][33] /* ty=Tensor[(15, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(15, 13, 5), float64] */;
  %416 = cast(meta[relay.Constant][33] /* ty=Tensor[(15, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(15, 13, 5), float64] */;
  %417 = cast(%var_5260, dtype="float32") /* ty=Tensor[(300, 8), float32] */;
  %418 = reshape(%417, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), float32] */;
  %419 = cos(%415) /* ty=Tensor[(15, 13, 5), float64] */;
  %420 = acosh(%416) /* ty=Tensor[(15, 13, 5), float64] */;
  %421 = @func_1940(%418) /* ty=Tensor[(16, 10, 15), float32] */;
  (%419, %420, %421, %var_5260)
}

def @func_8002(%var_7977: Tensor[(396), bool], %var_7982: Tensor[(880), uint16], %var_7985: Tensor[(1872), float32]) -> (Tensor[(14, 2, 10), float64], Tensor[(14, 2, 10), float32], Tensor[(4, 14, 15), bool], Tensor[(396), bool], Tensor[(15, 6), uint32], Tensor[(10, 8, 11), uint16], Tensor[(1872), int64], Tensor[(3, 1, 880), float32], Tensor[(3, 1, 1), float64]) {
  %422 = @func_7728() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
  %423 = cast(meta[relay.Constant][34] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %424 = cast(%var_7977, dtype="bool") /* ty=Tensor[(396), bool] */;
  %425 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 6), uint32] */, dtype="uint32") /* ty=Tensor[(15, 6), uint32] */;
  %426 = reshape(%423, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float32] */;
  %427 = reshape(%424, newshape=[66, 6]) /* ty=Tensor[(66, 6), bool] */;
  %428 = reshape(%425, newshape=[90]) /* ty=Tensor[(90), uint32] */;
  %429 = @func_1111(%426, %427, %428) /* ty=(Tensor[(12, 13, 12), float32], Tensor[(4, 14, 15), bool], Tensor[(840), int64], Tensor[(11, 6, 6), bool], Tensor[(66, 6), bool], Tensor[(10, 9, ?), bool], Tensor[(90), uint32], Tensor[(4, 14, 15), float64], Tensor[(11, 6, 6), bool]) */;
  %430 = cast(%var_7982, dtype="uint16") /* ty=Tensor[(880), uint16] */;
  %431 = cast(%var_7982, dtype="uint16") /* ty=Tensor[(880), uint16] */;
  %432 = reshape(%430, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
  %433 = reshape(%431, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
  %434 = @func_4113(%432, %433) /* ty=(Tensor[(10, 8, 11), uint16],) */;
  %435 = cast(%var_7985, dtype="int64") /* ty=Tensor[(1872), int64] */;
  %436 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(1872), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %437 = cast(meta[relay.Constant][34] /* ty=Tensor[(1872), float32] */, dtype="int64") /* ty=Tensor[(1872), int64] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?), int64] */;
  %439 = @func_7891() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %440 = %439.0;
  %441 = cast(%440, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
  %442 = cast(%var_7982, dtype="float32") /* ty=Tensor[(880), float32] */;
  %443 = @func_6471() /* ty=Tensor[(14, 2, 10), float64] */;
  %444 = %422.1;
  %445 = %429.1;
  %446 = %434.0;
  %447 = bitwise_or(%437, %438) /* ty=Tensor[(1872), int64] */;
  %448 = divide(%441, %442) /* ty=Tensor[(3, 1, 880), float32] */;
  %449 = @func_6173() /* ty=Tensor[(3, 1, 1), float64] */;
  (%443, %444, %445, %var_7977, meta[relay.Constant][35] /* ty=Tensor[(15, 6), uint32] */, %446, %447, %448, %449)
}

def @func_6414(%var_6412: Tensor[(3, 11, 6), float64], %var_6413: Tensor[(156), float32]) -> (Tensor[(3, 11, 6), bool], Tensor[(156), float32], Tensor[(840), int64], Tensor[(3, 2, 420), float32], Tensor[(2, 420), int64], Tensor[(3, 11, 6), float64]) {
  @func_6410(%var_6412, %var_6413) /* ty=(Tensor[(3, 11, 6), bool], Tensor[(156), float32], Tensor[(840), int64], Tensor[(3, 2, 420), float32], Tensor[(2, 420), int64], Tensor[(3, 11, 6), float64]) */
}

def @func_4885(%var_4880: uint32, %var_4881: Tensor[(12, 6, 13), uint32], %var_4882: Tensor[(15), bool], %var_4883: Tensor[(156), float32], %var_4884: Tensor[(840), int64]) -> (Tensor[(12, 6, 13), bool], Tensor[(5, 12, 15), bool], Tensor[(15), bool], Tensor[(5, 12, 15), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) {
  %467 = fn (%var_4849: uint32, %var_4850: Tensor[(12, 6, 13), uint32], %var_4855: Tensor[(15), bool], %var_4867: Tensor[(156), float32], %var_4868: Tensor[(840), int64]) -> (Tensor[(12, 6, 13), bool], Tensor[(5, 12, 15), bool], Tensor[(15), bool], Tensor[(5, 12, 15), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) {
    %450 = cast(%var_4849, dtype="bool") /* ty=bool */;
    %451 = cast(%var_4850, dtype="bool") /* ty=Tensor[(12, 6, 13), bool] */;
    %452 = cast(%var_4855, dtype="bool") /* ty=Tensor[(15), bool] */;
    %453 = reshape(%452, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), bool] */;
    %454 = @func_2771(%453) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) */;
    %455 = cast(%var_4855, dtype="bool") /* ty=Tensor[(15), bool] */;
    %456 = reshape(%455, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), bool] */;
    %457 = @func_2771(%456) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) */;
    %458 = cast(%var_4867, dtype="float32") /* ty=Tensor[(156), float32] */;
    %459 = cast(%var_4868, dtype="int64") /* ty=Tensor[(840), int64] */;
    %460 = reshape(%458, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), float32] */;
    %461 = reshape(%459, newshape=[2, 420]) /* ty=Tensor[(2, 420), int64] */;
    %462 = @func_1890(%460, %461) /* ty=(Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64], Tensor[(?, 13, 12), float64]) */;
    %463 = greater(%450, %451) /* ty=Tensor[(12, 6, 13), bool] */;
    %464 = %454.1;
    %465 = %457.0;
    %466 = %462.1;
    (%463, %464, %var_4855, %465, %466, %var_4867, %var_4868)
  };
  %467(%var_4880, %var_4881, %var_4882, %var_4883, %var_4884) /* ty=(Tensor[(12, 6, 13), bool], Tensor[(5, 12, 15), bool], Tensor[(15), bool], Tensor[(5, 12, 15), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) */
}

def @func_9128() -> (Tensor[(3, 1, 1), float64],) {
  @func_9126() /* ty=(Tensor[(3, 1, 1), float64],) */
}

def @func_10542(%var_10540: Tensor[(210), float32], %var_10541: Tensor[(396), bool]) -> (Tensor[(3, 1, 1), float64], Tensor[(15, 13, 12), float32], Tensor[(5, 12, 15), bool], Tensor[(210), float32], Tensor[(468, 4), float32], Tensor[(396), bool], Tensor[(15, 1), bool]) {
  %481 = fn (%var_10520: Tensor[(210), float32], %var_10522: Tensor[(396), bool]) -> (Tensor[(3, 1, 1), float64], Tensor[(15, 13, 12), float32], Tensor[(5, 12, 15), bool], Tensor[(210), float32], Tensor[(468, 4), float32], Tensor[(396), bool], Tensor[(15, 1), bool]) {
    %468 = @func_8439() /* ty=(Tensor[(3, 1, 1), float64],) */;
    %469 = cast(%var_10520, dtype="float32") /* ty=Tensor[(210), float32] */;
    %470 = cast(meta[relay.Constant][36] /* ty=Tensor[(468, 4), float32] */, dtype="float32") /* ty=Tensor[(468, 4), float32] */;
    %471 = cast(%var_10522, dtype="bool") /* ty=Tensor[(396), bool] */;
    %472 = cast(meta[relay.Constant][37] /* ty=Tensor[(15, 1), bool] */, dtype="bool") /* ty=Tensor[(15, 1), bool] */;
    %473 = reshape(%469, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float32] */;
    %474 = reshape(%470, newshape=[1872, 1]) /* ty=Tensor[(1872, 1), float32] */;
    %475 = reshape(%471, newshape=[396]) /* ty=Tensor[(396), bool] */;
    %476 = reshape(%472, newshape=[1, 15]) /* ty=Tensor[(1, 15), bool] */;
    %477 = @func_8565(%473, %474, %475, %476) /* ty=(Tensor[(3, 10, 7), bool], Tensor[(4, 14, 15), float64], Tensor[(396), bool], Tensor[(5, 12, 15), bool], Tensor[(1, 15), bool], Tensor[(1872, 90), uint64], Tensor[(14, 2, 10), float32], Tensor[(3, 10, 7), float32], Tensor[(14, 2, 10), float32], Tensor[(14, 2, 10), float32]) */;
    %478 = %468.0;
    %479 = @func_10454() /* ty=Tensor[(15, 13, 12), float32] */;
    %480 = %477.3;
    (%478, %479, %480, %var_10520, meta[relay.Constant][36] /* ty=Tensor[(468, 4), float32] */, %var_10522, meta[relay.Constant][37] /* ty=Tensor[(15, 1), bool] */)
  };
  %481(%var_10540, %var_10541) /* ty=(Tensor[(3, 1, 1), float64], Tensor[(15, 13, 12), float32], Tensor[(5, 12, 15), bool], Tensor[(210), float32], Tensor[(468, 4), float32], Tensor[(396), bool], Tensor[(15, 1), bool]) */
}

def @func_6473() -> Tensor[(14, 2, 10), float64] {
  @func_6471() /* ty=Tensor[(14, 2, 10), float64] */
}

def @func_6703() -> (Tensor[(15, 13, 12), float64],) {
  %482 = cast(-2.186f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %483 = cast(meta[relay.Constant][38] /* ty=Tensor[(15, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(15, 13, 12), float64] */;
  %484 = floor_divide(%482, %483) /* ty=Tensor[(15, 13, 12), float64] */;
  (%484,)
}

def @func_7146() -> (Tensor[(14, 2, 10), float32],) {
  %487 = fn () -> (Tensor[(14, 2, 10), float32],) {
    %485 = @func_5938() /* ty=(Tensor[(14, 2, 10), float32],) */;
    %486 = %485.0;
    (%486,)
  };
  %487() /* ty=(Tensor[(14, 2, 10), float32],) */
}

def @func_9035(%var_9033: Tensor[(8, 8, 4), int16], %var_9034: Tensor[(840), int64]) -> (Tensor[(8, 8, 4), bool], Tensor[(880), uint16], Tensor[(10, 8, 11), float64], Tensor[(3, 1, 1), float64], Tensor[(8, 8, 4), float32], Tensor[(3, 1, 1), float64], Tensor[(5, 12, 15), bool], Tensor[(936), uint32], Tensor[(15), bool], Tensor[(156), float32], Tensor[(840), int64]) {
  %517 = fn (%var_8937: Tensor[(8, 8, 4), int16], %var_9030: Tensor[(840), int64]) -> (Tensor[(8, 8, 4), bool], Tensor[(880), uint16], Tensor[(10, 8, 11), float64], Tensor[(3, 1, 1), float64], Tensor[(8, 8, 4), float32], Tensor[(3, 1, 1), float64], Tensor[(5, 12, 15), bool], Tensor[(936), uint32], Tensor[(15), bool], Tensor[(156), float32], Tensor[(840), int64]) {
    %488 = cast(meta[relay.Constant][39] /* ty=int16 */, dtype="bool") /* ty=bool */;
    %489 = cast(%var_8937, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
    %490 = cast(meta[relay.Constant][40] /* ty=Tensor[(880), uint16] */, dtype="uint16") /* ty=Tensor[(880), uint16] */;
    %491 = cast(meta[relay.Constant][40] /* ty=Tensor[(880), uint16] */, dtype="uint16") /* ty=Tensor[(880), uint16] */;
    %492 = reshape(%490, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
    %493 = reshape(%491, newshape=[10, 8, 11]) /* ty=Tensor[(10, 8, 11), uint16] */;
    %494 = @func_4113(%492, %493) /* ty=(Tensor[(10, 8, 11), uint16],) */;
    %495 = %494.0;
    %496 = cast(%495, dtype="float64") /* ty=Tensor[(10, 8, 11), float64] */;
    %497 = cast(meta[relay.Constant][39] /* ty=int16 */, dtype="float64") /* ty=float64 */;
    %498 = cast(%var_8937, dtype="float32") /* ty=Tensor[(8, 8, 4), float32] */;
    %499 = @func_7075() /* ty=(Tensor[(3, 1, 1), float64],) */;
    %500 = cast(meta[relay.Constant][39] /* ty=int16 */, dtype="uint32") /* ty=uint32 */;
    %501 = cast(meta[relay.Constant][41] /* ty=Tensor[(936), uint32] */, dtype="uint32") /* ty=Tensor[(936), uint32] */;
    %502 = cast(meta[relay.Constant][42] /* ty=Tensor[(15), bool] */, dtype="bool") /* ty=Tensor[(15), bool] */;
    %503 = cast(meta[relay.Constant][43] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %504 = cast(%var_9030, dtype="int64") /* ty=Tensor[(840), int64] */;
    %505 = reshape(%500, newshape=[]) /* ty=uint32 */;
    %506 = reshape(%501, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint32] */;
    %507 = reshape(%502, newshape=[15]) /* ty=Tensor[(15), bool] */;
    %508 = reshape(%503, newshape=[156]) /* ty=Tensor[(156), float32] */;
    %509 = reshape(%504, newshape=[840]) /* ty=Tensor[(840), int64] */;
    %510 = @func_4879(%505, %506, %507, %508, %509) /* ty=(Tensor[(12, 6, 13), bool], Tensor[(5, 12, 15), bool], Tensor[(15), bool], Tensor[(5, 12, 15), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) */;
    %511 = equal(%488, %489) /* ty=Tensor[(8, 8, 4), bool] */;
    %512 = divide(%496, %497) /* ty=Tensor[(10, 8, 11), float64] */;
    %513 = @func_7049() /* ty=Tensor[(3, 1, 1), float64] */;
    %514 = atan(%498) /* ty=Tensor[(8, 8, 4), float32] */;
    %515 = %499.0;
    %516 = %510.1;
    (%511, meta[relay.Constant][40] /* ty=Tensor[(880), uint16] */, %512, %513, %514, %515, %516, meta[relay.Constant][41] /* ty=Tensor[(936), uint32] */, meta[relay.Constant][42] /* ty=Tensor[(15), bool] */, meta[relay.Constant][43] /* ty=Tensor[(156), float32] */, %var_9030)
  };
  %517(%var_9033, %var_9034) /* ty=(Tensor[(8, 8, 4), bool], Tensor[(880), uint16], Tensor[(10, 8, 11), float64], Tensor[(3, 1, 1), float64], Tensor[(8, 8, 4), float32], Tensor[(3, 1, 1), float64], Tensor[(5, 12, 15), bool], Tensor[(936), uint32], Tensor[(15), bool], Tensor[(156), float32], Tensor[(840), int64]) */
}

def @func_9126() -> (Tensor[(3, 1, 1), float64],) {
  %518 = @func_9039() /* ty=Tensor[(3, 1, 1), float64] */;
  (%518,)
}

def @func_7239(%var_7238: uint32) -> (Tensor[(3, 1, 180), int16], Tensor[(5, 12, 15), bool], uint32, Tensor[(36, 26), uint32], Tensor[(1, 15), bool], Tensor[(156), float32], Tensor[(840), int64]) {
  %537 = fn (%var_7231: uint32) -> (Tensor[(3, 1, 180), int16], Tensor[(5, 12, 15), bool], uint32, Tensor[(36, 26), uint32], Tensor[(1, 15), bool], Tensor[(156), float32], Tensor[(840), int64]) {
    %519 = @func_6672() /* ty=(Tensor[(14, 2, 10), float64], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(945), uint64], Tensor[(2400), float32], Tensor[(180), uint16]) */;
    %520 = %519.5;
    %521 = @func_6173() /* ty=Tensor[(3, 1, 1), float64] */;
    %522 = cast(%520, dtype="int16") /* ty=Tensor[(180), int16] */;
    %523 = cast(%521, dtype="int16") /* ty=Tensor[(3, 1, 1), int16] */;
    %524 = cast(%var_7231, dtype="uint32") /* ty=uint32 */;
    %525 = cast(meta[relay.Constant][44] /* ty=Tensor[(36, 26), uint32] */, dtype="uint32") /* ty=Tensor[(36, 26), uint32] */;
    %526 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 15), bool] */, dtype="bool") /* ty=Tensor[(1, 15), bool] */;
    %527 = cast(meta[relay.Constant][46] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %528 = cast(meta[relay.Constant][47] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
    %529 = reshape(%524, newshape=[]) /* ty=uint32 */;
    %530 = reshape(%525, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint32] */;
    %531 = reshape(%526, newshape=[15]) /* ty=Tensor[(15), bool] */;
    %532 = reshape(%527, newshape=[156]) /* ty=Tensor[(156), float32] */;
    %533 = reshape(%528, newshape=[840]) /* ty=Tensor[(840), int64] */;
    %534 = @func_4879(%529, %530, %531, %532, %533) /* ty=(Tensor[(12, 6, 13), bool], Tensor[(5, 12, 15), bool], Tensor[(15), bool], Tensor[(5, 12, 15), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) */;
    %535 = right_shift(%522, %523) /* ty=Tensor[(3, 1, 180), int16] */;
    %536 = %534.1;
    (%535, %536, %var_7231, meta[relay.Constant][44] /* ty=Tensor[(36, 26), uint32] */, meta[relay.Constant][45] /* ty=Tensor[(1, 15), bool] */, meta[relay.Constant][46] /* ty=Tensor[(156), float32] */, meta[relay.Constant][47] /* ty=Tensor[(840), int64] */)
  };
  %537(%var_7238) /* ty=(Tensor[(3, 1, 180), int16], Tensor[(5, 12, 15), bool], uint32, Tensor[(36, 26), uint32], Tensor[(1, 15), bool], Tensor[(156), float32], Tensor[(840), int64]) */
}

def @func_7892() -> (Tensor[(3, 1, 1), float64],) {
  %539 = fn () -> (Tensor[(3, 1, 1), float64],) {
    %538 = @func_5994() /* ty=Tensor[(3, 1, 1), float64] */;
    (%538,)
  };
  %539() /* ty=(Tensor[(3, 1, 1), float64],) */
}

def @func_1893(%var_1891: Tensor[(1, 13, 12), float32], %var_1892: Tensor[(2, 420), int64]) -> (Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64], Tensor[(?, 13, 12), float64]) {
  %550 = fn (%var_1854: Tensor[(1, 13, 12), float32], %var_1859: Tensor[(2, 420), int64]) -> (Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64], Tensor[(?, 13, 12), float64]) {
    %540 = cast(%var_1859, dtype="int64") /* ty=Tensor[(2, 420), int64] */;
    %541 = reshape(%540, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), int64] */;
    %542 = cast(%var_1854, dtype="float32") /* ty=Tensor[(1, 13, 12), float32] */;
    %543 = log2(%542) /* ty=Tensor[(1, 13, 12), float32] */;
    %544 = cast(%var_1854, dtype="float64") /* ty=Tensor[(1, 13, 12), float64] */;
    %545 = shape_of(%543, dtype="int32") /* ty=Tensor[(3), int32] */;
    %546 = cast(%543, dtype="float64") /* ty=Tensor[(1, 13, 12), float64] */;
    %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %548 = @func_442(%541) /* ty=Tensor[(4, 14, 15), bool] */;
    %549 = floor_mod(%546, %547) /* ty=Tensor[(?, 13, 12), float64] */;
    (%548, %var_1859, %549)
  };
  %550(%var_1891, %var_1892) /* ty=(Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64], Tensor[(?, 13, 12), float64]) */
}

def @func_7076() -> (Tensor[(3, 1, 1), float64],) {
  %555 = fn () -> (Tensor[(3, 1, 1), float64],) {
    %551 = @func_6758() /* ty=(Tensor[(3, 1, 1), float64],) */;
    %552 = %551.0;
    %553 = cast(%552, dtype="float64") /* ty=Tensor[(3, 1, 1), float64] */;
    %554 = sigmoid(%553) /* ty=Tensor[(3, 1, 1), float64] */;
    (%554,)
  };
  %555() /* ty=(Tensor[(3, 1, 1), float64],) */
}

def @func_6565() -> (Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) {
  %556 = @func_5938() /* ty=(Tensor[(14, 2, 10), float32],) */;
  %557 = %556.0;
  %558 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
  (%557, %558)
}

def @func_8849(%var_8847: Tensor[(10, 14, 15), uint32], %var_8848: Tensor[(10, 14, 15), uint32]) -> (Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(13, 3, 13), float64], Tensor[(1, 507), float64]) {
  %575 = fn (%var_8821: Tensor[(10, 14, 15), uint32], %var_8828: Tensor[(10, 14, 15), uint32]) -> (Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(13, 3, 13), float64], Tensor[(1, 507), float64]) {
    %559 = cast(%var_8828, dtype="bool") /* ty=Tensor[(10, 14, 15), bool] */;
    %560 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(10, 14, 15), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %561 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 14, 15), uint32] */, dtype="bool") /* ty=Tensor[(10, 14, 15), bool] */;
    %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %563 = cast(%var_8821, dtype="uint32") /* ty=Tensor[(10, 14, 15), uint32] */;
    %564 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(10, 14, 15), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %565 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 14, 15), uint32] */, dtype="uint32") /* ty=Tensor[(10, 14, 15), uint32] */;
    %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %567 = bitwise_and(%565, %566) /* ty=Tensor[(10, 14, 15), uint32] */;
    %568 = cast(%567, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
    %569 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 507), float64] */, dtype="float64") /* ty=Tensor[(1, 507), float64] */;
    %570 = reshape(%569, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
    %571 = @func_2580(%570) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(13, 3, 13), uint32], Tensor[(2400), float32], float32, Tensor[(300, 8), float32]) */;
    %572 = logical_and(%561, %562) /* ty=Tensor[(10, 14, 15), bool] */;
    %573 = sin(%568) /* ty=Tensor[(10, 14, 15), float64] */;
    %574 = %571.0;
    (%572, %573, %574, meta[relay.Constant][49] /* ty=Tensor[(1, 507), float64] */)
  };
  %575(%var_8847, %var_8848) /* ty=(Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(13, 3, 13), float64], Tensor[(1, 507), float64]) */
}

def @func_6673() -> (Tensor[(14, 2, 10), float64], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(945), uint64], Tensor[(2400), float32], Tensor[(180), uint16]) {
  %595 = fn () -> (Tensor[(14, 2, 10), float64], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(945), uint64], Tensor[(2400), float32], Tensor[(180), uint16]) {
    %576 = cast(meta[relay.Constant][50] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
    %577 = reshape(%576, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), float32] */;
    %578 = cast(meta[relay.Constant][51] /* ty=Tensor[(945), uint64] */, dtype="uint64") /* ty=Tensor[(945), uint64] */;
    %579 = cast(meta[relay.Constant][51] /* ty=Tensor[(945), uint64] */, dtype="uint64") /* ty=Tensor[(945), uint64] */;
    %580 = reshape(%578, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), uint64] */;
    %581 = reshape(%579, newshape=[9, 15, 7]) /* ty=Tensor[(9, 15, 7), uint64] */;
    %582 = @func_4684(%580, %581) /* ty=(Tensor[(9, 15, 7), uint64],) */;
    %583 = %582.0;
    %584 = cast(%583, dtype="uint64") /* ty=Tensor[(9, 15, 7), uint64] */;
    %585 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(945), uint64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %586 = cast(meta[relay.Constant][51] /* ty=Tensor[(945), uint64] */, dtype="uint64") /* ty=Tensor[(945), uint64] */;
    %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %588 = cast(meta[relay.Constant][52] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
    %589 = reshape(%588, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint16] */;
    %590 = @func_6125(%589) /* ty=(Tensor[(3, 1, 1), float64], Tensor[(2400), float32], float32, Tensor[(2400), float32], Tensor[(3, 4, 15), int8]) */;
    %591 = @func_6471() /* ty=Tensor[(14, 2, 10), float64] */;
    %592 = @func_1940(%577) /* ty=Tensor[(16, 10, 15), float32] */;
    %593 = subtract(%586, %587) /* ty=Tensor[(945), uint64] */;
    %594 = %590.3;
    (%591, %592, meta[relay.Constant][50] /* ty=Tensor[(2400), float32] */, %593, %594, meta[relay.Constant][52] /* ty=Tensor[(180), uint16] */)
  };
  %595() /* ty=(Tensor[(14, 2, 10), float64], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(945), uint64], Tensor[(2400), float32], Tensor[(180), uint16]) */
}

def @func_5994() -> Tensor[(3, 1, 1), float64] {
  @func_5541() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_6567() -> (Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) {
  @func_6565() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */
}

def @func_7381() -> (Tensor[(14, 2, 10), float32],) {
  %598 = fn () -> (Tensor[(14, 2, 10), float32],) {
    %596 = @func_7145() /* ty=(Tensor[(14, 2, 10), float32],) */;
    %597 = %596.0;
    (%597,)
  };
  %598() /* ty=(Tensor[(14, 2, 10), float32],) */
}

def @func_11008(%var_11005: Tensor[(55), float64], %var_11006: Tensor[(64, 4), int16], %var_11007: Tensor[(840), int64]) -> (Tensor[(3, 1, 1), float64], Tensor[(2, 5, 11), float64], Tensor[(55), float64], Tensor[(110), float64], Tensor[(880), uint16], Tensor[(64, 4), int16], Tensor[(840), int64]) {
  %612 = fn (%var_10974: Tensor[(55), float64], %var_10981: Tensor[(64, 4), int16], %var_10982: Tensor[(840), int64]) -> (Tensor[(3, 1, 1), float64], Tensor[(2, 5, 11), float64], Tensor[(55), float64], Tensor[(110), float64], Tensor[(880), uint16], Tensor[(64, 4), int16], Tensor[(840), int64]) {
    %599 = @func_7891() /* ty=(Tensor[(3, 1, 1), float64],) */;
    %600 = cast(%var_10974, dtype="float64") /* ty=Tensor[(55), float64] */;
    %601 = cast(meta[relay.Constant][53] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
    %602 = reshape(%600, newshape=[1, 5, 11]) /* ty=Tensor[(1, 5, 11), float64] */;
    %603 = reshape(%601, newshape=[2, 5, 11]) /* ty=Tensor[(2, 5, 11), float64] */;
    %604 = cast(%var_10981, dtype="int16") /* ty=Tensor[(64, 4), int16] */;
    %605 = cast(%var_10982, dtype="int64") /* ty=Tensor[(840), int64] */;
    %606 = reshape(%604, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), int16] */;
    %607 = reshape(%605, newshape=[840]) /* ty=Tensor[(840), int64] */;
    %608 = @func_9032(%606, %607) /* ty=(Tensor[(8, 8, 4), bool], Tensor[(880), uint16], Tensor[(10, 8, 11), float64], Tensor[(3, 1, 1), float64], Tensor[(8, 8, 4), float32], Tensor[(3, 1, 1), float64], Tensor[(5, 12, 15), bool], Tensor[(936), uint32], Tensor[(15), bool], Tensor[(156), float32], Tensor[(840), int64]) */;
    %609 = %599.0;
    %610 = @func_4154(%602, %603) /* ty=Tensor[(2, 5, 11), float64] */;
    %611 = %608.1;
    (%609, %610, %var_10974, meta[relay.Constant][53] /* ty=Tensor[(110), float64] */, %611, %var_10981, %var_10982)
  };
  %612(%var_11005, %var_11006, %var_11007) /* ty=(Tensor[(3, 1, 1), float64], Tensor[(2, 5, 11), float64], Tensor[(55), float64], Tensor[(110), float64], Tensor[(880), uint16], Tensor[(64, 4), int16], Tensor[(840), int64]) */
}

def @func_10380() -> (Tensor[(3, 1, 1), float64], Tensor[(2, 420), int64], float32, Tensor[(2400), float32], Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float32], Tensor[(880), uint16]) {
  @func_10378() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(2, 420), int64], float32, Tensor[(2400), float32], Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float32], Tensor[(880), uint16]) */
}

def @func_4154(%var_4141: Tensor[(1, 5, 11), float64], %var_4142: Tensor[(2, 5, 11), float64]) -> Tensor[(2, 5, 11), float64] {
  %613 = cast(%var_4141, dtype="float64") /* ty=Tensor[(1, 5, 11), float64] */;
  %614 = cast(%var_4142, dtype="float64") /* ty=Tensor[(2, 5, 11), float64] */;
  %615 = mod(%613, %614) /* ty=Tensor[(2, 5, 11), float64] */;
  %616 = cast(%615, dtype="float64") /* ty=Tensor[(2, 5, 11), float64] */;
  sqrt(%616) /* ty=Tensor[(2, 5, 11), float64] */
}

def @func_10612(%var_10565: Tensor[(1, 2400), uint8], %var_10589: Tensor[(2100), uint32]) -> (Tensor[(16, 10, 15), uint8], Tensor[(1, 2400), uint8], Tensor[(16, 10, 15), float32], Tensor[(2100), uint32], Tensor[(3, 1, 840), bool], Tensor[(11, 6, 6), bool], Tensor[(396), bool], Tensor[(3, 1, 507), bool]) {
  %617 = cast(%var_10565, dtype="uint8") /* ty=Tensor[(1, 2400), uint8] */;
  %618 = cast(%var_10565, dtype="uint8") /* ty=Tensor[(1, 2400), uint8] */;
  %619 = cast(meta[relay.Constant][54] /* ty=Tensor[(840), int64] */, dtype="int64") /* ty=Tensor[(840), int64] */;
  %620 = reshape(%617, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), uint8] */;
  %621 = reshape(%618, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), uint8] */;
  %622 = reshape(%619, newshape=[840]) /* ty=Tensor[(840), int64] */;
  %623 = @func_3732(%620, %621, %622) /* ty=(Tensor[(16, 10, 15), uint8], Tensor[(16, 10, 15), float64], Tensor[(11, 6, 6), bool], Tensor[(396), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) */;
  %624 = %623.0;
  %625 = cast(%624, dtype="float32") /* ty=Tensor[(16, 10, 15), float32] */;
  %626 = reshape(%625, newshape=[300, 8]) /* ty=Tensor[(300, 8), float32] */;
  %627 = @func_5274(%626) /* ty=(Tensor[(15, 13, 5), float64], Tensor[(15, 13, 5), float64], Tensor[(16, 10, 15), float32], Tensor[(300, 8), float32]) */;
  %628 = @func_7762() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %629 = %628.0;
  %630 = cast(%629, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %631 = cast(meta[relay.Constant][54] /* ty=Tensor[(840), int64] */, dtype="bool") /* ty=Tensor[(840), bool] */;
  %632 = cast(meta[relay.Constant][55] /* ty=Tensor[(396), bool] */, dtype="bool") /* ty=Tensor[(396), bool] */;
  %633 = cast(meta[relay.Constant][55] /* ty=Tensor[(396), bool] */, dtype="bool") /* ty=Tensor[(396), bool] */;
  %634 = reshape(%632, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
  %635 = reshape(%633, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
  %636 = cast(%var_10589, dtype="uint32") /* ty=Tensor[(2100), uint32] */;
  %637 = cast(%var_10589, dtype="uint32") /* ty=Tensor[(2100), uint32] */;
  %638 = reshape(%636, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint32] */;
  %639 = reshape(%637, newshape=[10, 14, 15]) /* ty=Tensor[(10, 14, 15), uint32] */;
  %640 = @func_8846(%638, %639) /* ty=(Tensor[(10, 14, 15), bool], Tensor[(10, 14, 15), float64], Tensor[(13, 3, 13), float64], Tensor[(1, 507), float64]) */;
  %641 = %640.3;
  %642 = cast(%629, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %643 = cast(%641, dtype="bool") /* ty=Tensor[(1, 507), bool] */;
  %644 = %627.2;
  %645 = greater(%630, %631) /* ty=Tensor[(3, 1, 840), bool] */;
  %646 = @func_182(%634, %635) /* ty=Tensor[(11, 6, 6), bool] */;
  %647 = less_equal(%642, %643) /* ty=Tensor[(3, 1, 507), bool] */;
  (%624, %var_10565, %644, %var_10589, %645, %646, meta[relay.Constant][55] /* ty=Tensor[(396), bool] */, %647)
}

def @func_555(%var_511: Tensor[(10, 9, 1), uint32]) -> (Tensor[(10, 9, ?), bool],) {
  %648 = cast(%var_511, dtype="bool") /* ty=Tensor[(10, 9, 1), bool] */;
  %649 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(10, 9, 1), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(meta[relay.Constant][56] /* ty=Tensor[(10, 9, 1), uint32] */, dtype="bool") /* ty=Tensor[(10, 9, 1), bool] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %652 = not_equal(%650, %651) /* ty=Tensor[(10, 9, ?), bool] */;
  (%652,)
}

def @func_10162(%var_10161: Tensor[(294), float64]) -> (Tensor[(14, 2, 10), float64], Tensor[(7, 6, 7), float64], Tensor[(294), float64]) {
  %661 = fn (%var_10147: Tensor[(294), float64]) -> (Tensor[(14, 2, 10), float64], Tensor[(7, 6, 7), float64], Tensor[(294), float64]) {
    %653 = @func_9800() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(5, 12, 15), bool], Tensor[(14, 2, 10), float32], Tensor[(3, 15, 1), bool], Tensor[(14, 2, 10), float64], Tensor[(3, 1, 1), float64]) */;
    %654 = cast(%var_10147, dtype="float64") /* ty=Tensor[(294), float64] */;
    %655 = cast(%var_10147, dtype="float64") /* ty=Tensor[(294), float64] */;
    %656 = reshape(%654, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), float64] */;
    %657 = reshape(%655, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), float64] */;
    %658 = @func_9198(%656, %657) /* ty=(Tensor[(7, 6, 7), float64], Tensor[(7, 6, 7), float64]) */;
    %659 = %653.4;
    %660 = %658.1;
    (%659, %660, %var_10147)
  };
  %661(%var_10161) /* ty=(Tensor[(14, 2, 10), float64], Tensor[(7, 6, 7), float64], Tensor[(294), float64]) */
}

def @func_9118() -> (Tensor[(3, 1, 1), float64],) {
  @func_9116() /* ty=(Tensor[(3, 1, 1), float64],) */
}

def @func_6619(%var_6617: Tensor[(9, 1, 14), float32]) -> (Tensor[(9, 1, 14), float32],) {
  @func_6616(%var_6617) /* ty=(Tensor[(9, 1, 14), float32],) */
}

def @func_6705() -> (Tensor[(15, 13, 12), float64],) {
  @func_6703() /* ty=(Tensor[(15, 13, 12), float64],) */
}

def @func_444(%var_443: Tensor[(4, 14, 15), int64]) -> Tensor[(4, 14, 15), bool] {
  %666 = fn (%var_423: Tensor[(4, 14, 15), int64]) -> Tensor[(4, 14, 15), bool] {
    %662 = cast(%var_423, dtype="bool") /* ty=Tensor[(4, 14, 15), bool] */;
    %663 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(4, 14, 15), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %664 = cast(meta[relay.Constant][57] /* ty=Tensor[(4, 14, 15), int64] */, dtype="bool") /* ty=Tensor[(4, 14, 15), bool] */;
    %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%664, %665) /* ty=Tensor[(4, 14, 15), bool] */
  };
  %666(%var_443) /* ty=Tensor[(4, 14, 15), bool] */
}

def @func_6758() -> (Tensor[(3, 1, 1), float64],) {
  %667 = @func_5994() /* ty=Tensor[(3, 1, 1), float64] */;
  (%667,)
}

def @func_7668() -> (Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float32]) {
  %672 = fn () -> (Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float32]) {
    %668 = @func_7380() /* ty=(Tensor[(14, 2, 10), float32],) */;
    %669 = @func_7185() /* ty=(Tensor[(3, 1, 1), float32],) */;
    %670 = %668.0;
    %671 = %669.0;
    (%670, %671)
  };
  %672() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float32]) */
}

def @func_7372() -> Tensor[(3, 1, 1), float64] {
  @func_7370() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_7601(%var_7596: Tensor[(5, 5, 14), int32]) -> Tensor[(5, 5, 14), int32] {
  %673 = cast(meta[relay.Constant][58] /* ty=Tensor[(5, 5, 14), int32] */, dtype="int32") /* ty=Tensor[(5, 5, 14), int32] */;
  %674 = shape_of(%var_7596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %675 = cast(%var_7596, dtype="int32") /* ty=Tensor[(5, 5, 14), int32] */;
  %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  maximum(%675, %676) /* ty=Tensor[(5, 5, 14), int32] */
}

def @func_6050() -> (Tensor[(3, 1, 1), float64],) {
  %678 = fn () -> (Tensor[(3, 1, 1), float64],) {
    %677 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
    (%677,)
  };
  %678() /* ty=(Tensor[(3, 1, 1), float64],) */
}

def @func_7604(%var_7602: Tensor[(5, 5, 14), int32]) -> Tensor[(5, 5, 14), int32] {
  @func_7601(%var_7602) /* ty=Tensor[(5, 5, 14), int32] */
}

def @func_7763() -> (Tensor[(3, 1, 1), float32],) {
  %681 = fn () -> (Tensor[(3, 1, 1), float32],) {
    %679 = @func_6948() /* ty=(Tensor[(3, 1, 1), float32], Tensor[(14, 2, 10), float32]) */;
    %680 = %679.0;
    (%680,)
  };
  %681() /* ty=(Tensor[(3, 1, 1), float32],) */
}

def @func_6242(%var_6241: Tensor[(1092), uint32]) -> (Tensor[(3, 1, 1), float32], Tensor[(6, 14, 13), uint32], Tensor[(1092), uint32]) {
  %690 = fn (%var_6233: Tensor[(1092), uint32]) -> (Tensor[(3, 1, 1), float32], Tensor[(6, 14, 13), uint32], Tensor[(1092), uint32]) {
    %682 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
    %683 = cast(%682, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
    %684 = cast(%var_6233, dtype="uint32") /* ty=Tensor[(1092), uint32] */;
    %685 = cast(%var_6233, dtype="uint32") /* ty=Tensor[(1092), uint32] */;
    %686 = reshape(%684, newshape=[6, 14, 13]) /* ty=Tensor[(6, 14, 13), uint32] */;
    %687 = reshape(%685, newshape=[6, 14, 13]) /* ty=Tensor[(6, 14, 13), uint32] */;
    %688 = erf(%683) /* ty=Tensor[(3, 1, 1), float32] */;
    %689 = @func_2246(%686, %687) /* ty=Tensor[(6, 14, 13), uint32] */;
    (%688, %689, %var_6233)
  };
  %690(%var_6241) /* ty=(Tensor[(3, 1, 1), float32], Tensor[(6, 14, 13), uint32], Tensor[(1092), uint32]) */
}

def @func_5662() -> Tensor[(14, 2, 10), float64] {
  %691 = cast(meta[relay.Constant][59] /* ty=Tensor[(14, 2, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 2, 10), float64] */;
  log(%691) /* ty=Tensor[(14, 2, 10), float64] */
}

def @func_5541() -> Tensor[(3, 1, 1), float64] {
  %692 = cast(meta[relay.Constant][60] /* ty=Tensor[(3, 1, 1), float64] */, dtype="float64") /* ty=Tensor[(3, 1, 1), float64] */;
  sqrt(%692) /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_10378() -> (Tensor[(3, 1, 1), float64], Tensor[(2, 420), int64], float32, Tensor[(2400), float32], Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float32], Tensor[(880), uint16]) {
  %693 = cast(8.65555f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %694 = cast(meta[relay.Constant][61] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %695 = reshape(%693, newshape=[]) /* ty=float32 */;
  %696 = reshape(%694, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %697 = @func_2462(%695, %696) /* ty=(Tensor[(11, 14, 9), float32], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64]) */;
  %698 = cast(meta[relay.Constant][62] /* ty=Tensor[(880), uint16] */, dtype="uint16") /* ty=Tensor[(880), uint16] */;
  %699 = reshape(%698, newshape=[2, 440]) /* ty=Tensor[(2, 440), uint16] */;
  %700 = @func_9713(%699) /* ty=(Tensor[(3, 1, 1), float32], Tensor[(3, 1, 1), float64], Tensor[(10, 8, 11), uint16], Tensor[(2, 440), uint16]) */;
  %701 = @func_10203() /* ty=Tensor[(3, 1, 1), float64] */;
  %702 = %697.4;
  %703 = @func_7049() /* ty=Tensor[(3, 1, 1), float64] */;
  %704 = %700.0;
  (%701, %702, 8.65555f /* ty=float32 */, meta[relay.Constant][61] /* ty=Tensor[(2400), float32] */, %703, %704, meta[relay.Constant][62] /* ty=Tensor[(880), uint16] */)
}

def @func_10326() -> Tensor[(3, 1, 1), float32] {
  %706 = fn () -> Tensor[(3, 1, 1), float32] {
    %705 = @func_9733() /* ty=(Tensor[(3, 1, 1), float32],) */;
    %705.0
  };
  %706() /* ty=Tensor[(3, 1, 1), float32] */
}

def @func_9589() -> (Tensor[(11, 6, 6), bool], Tensor[(16, 10, 15), float32], Tensor[(980), uint64], Tensor[(2400), float32], Tensor[(3, 3, 132), float64]) {
  @func_9587() /* ty=(Tensor[(11, 6, 6), bool], Tensor[(16, 10, 15), float32], Tensor[(980), uint64], Tensor[(2400), float32], Tensor[(3, 3, 132), float64]) */
}

def @func_6948() -> (Tensor[(3, 1, 1), float32], Tensor[(14, 2, 10), float32]) {
  %707 = @func_6434() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %708 = @func_6186() /* ty=Tensor[(14, 2, 10), float64] */;
  %709 = cast(%708, dtype="float32") /* ty=Tensor[(14, 2, 10), float32] */;
  %710 = %707.0;
  %711 = atan(%709) /* ty=Tensor[(14, 2, 10), float32] */;
  (%710, %711)
}

def @func_186(%var_184: Tensor[(11, 6, 6), bool], %var_185: Tensor[(11, 6, 6), bool]) -> Tensor[(11, 6, 6), bool] {
  @func_182(%var_184, %var_185) /* ty=Tensor[(11, 6, 6), bool] */
}

def @func_9587() -> (Tensor[(11, 6, 6), bool], Tensor[(16, 10, 15), float32], Tensor[(980), uint64], Tensor[(2400), float32], Tensor[(3, 3, 132), float64]) {
  %712 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 132), bool] */, dtype="bool") /* ty=Tensor[(3, 132), bool] */;
  %713 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 132), bool] */, dtype="bool") /* ty=Tensor[(3, 132), bool] */;
  %714 = reshape(%712, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
  %715 = reshape(%713, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
  %716 = cast(meta[relay.Constant][64] /* ty=Tensor[(980), uint64] */, dtype="uint64") /* ty=Tensor[(980), uint64] */;
  %717 = cast(meta[relay.Constant][65] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %718 = reshape(%716, newshape=[14, 5, 14]) /* ty=Tensor[(14, 5, 14), uint64] */;
  %719 = reshape(%717, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %720 = @func_2840(%718, %719) /* ty=(Tensor[(14, 5, 14), bool], Tensor[(16, 10, 15), float32], Tensor[(2400), float32]) */;
  %721 = @func_9278() /* ty=Tensor[(3, 1, 1), float64] */;
  %722 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 132), bool] */, dtype="int8") /* ty=Tensor[(3, 132), int8] */;
  %723 = cast(%721, dtype="int8") /* ty=Tensor[(3, 1, 1), int8] */;
  %724 = add(%722, %723) /* ty=Tensor[(3, 3, 132), int8] */;
  %725 = cast(%724, dtype="int32") /* ty=Tensor[(3, 3, 132), int32] */;
  %726 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 132), bool] */, dtype="int32") /* ty=Tensor[(3, 132), int32] */;
  %727 = minimum(%725, %726) /* ty=Tensor[(3, 3, 132), int32] */;
  %728 = cast(%727, dtype="float32") /* ty=Tensor[(3, 3, 132), float32] */;
  %729 = atan(%728) /* ty=Tensor[(3, 3, 132), float32] */;
  %730 = cast(%729, dtype="float64") /* ty=Tensor[(3, 3, 132), float64] */;
  %731 = @func_182(%714, %715) /* ty=Tensor[(11, 6, 6), bool] */;
  %732 = %720.1;
  %733 = erf(%730) /* ty=Tensor[(3, 3, 132), float64] */;
  (%731, %732, meta[relay.Constant][64] /* ty=Tensor[(980), uint64] */, meta[relay.Constant][65] /* ty=Tensor[(2400), float32] */, %733)
}

def @func_7484(%var_7482: Tensor[(980), uint64]) -> (Tensor[(980), uint64], Tensor[(100, 24), int16], Tensor[(3, 100, 24), uint32], Tensor[(3, 1, 1), float64], Tensor[(3, 100, 24), float32], Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32]) {
  @func_7481(%var_7482) /* ty=(Tensor[(980), uint64], Tensor[(100, 24), int16], Tensor[(3, 100, 24), uint32], Tensor[(3, 1, 1), float64], Tensor[(3, 100, 24), float32], Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32]) */
}

def @func_8172(%var_8166: Tensor[(12, 12, 13), float64]) -> (Tensor[(12, 12, 13), float64],) {
  %734 = cast(%var_8166, dtype="float64") /* ty=Tensor[(12, 12, 13), float64] */;
  %735 = tan(%734) /* ty=Tensor[(12, 12, 13), float64] */;
  (%735,)
}

def @func_3736(%var_3733: Tensor[(16, 10, 15), uint8], %var_3734: Tensor[(16, 10, 15), uint8], %var_3735: Tensor[(840), int64]) -> (Tensor[(16, 10, 15), uint8], Tensor[(16, 10, 15), float64], Tensor[(11, 6, 6), bool], Tensor[(396), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) {
  %754 = fn (%var_3692: Tensor[(16, 10, 15), uint8], %var_3693: Tensor[(16, 10, 15), uint8], %var_3730: Tensor[(840), int64]) -> (Tensor[(16, 10, 15), uint8], Tensor[(16, 10, 15), float64], Tensor[(11, 6, 6), bool], Tensor[(396), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) {
    %736 = cast(%var_3693, dtype="uint8") /* ty=Tensor[(16, 10, 15), uint8] */;
    %737 = shape_of(%var_3692, dtype="int32") /* ty=Tensor[(3), int32] */;
    %738 = cast(%var_3692, dtype="uint8") /* ty=Tensor[(16, 10, 15), uint8] */;
    %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %740 = cast(%var_3692, dtype="float64") /* ty=Tensor[(16, 10, 15), float64] */;
    %741 = cast(meta[relay.Constant][66] /* ty=Tensor[(396), bool] */, dtype="bool") /* ty=Tensor[(396), bool] */;
    %742 = cast(meta[relay.Constant][66] /* ty=Tensor[(396), bool] */, dtype="bool") /* ty=Tensor[(396), bool] */;
    %743 = reshape(%741, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
    %744 = reshape(%742, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), bool] */;
    %745 = cast(meta[relay.Constant][67] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %746 = cast(%var_3730, dtype="int64") /* ty=Tensor[(840), int64] */;
    %747 = reshape(%745, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), float32] */;
    %748 = reshape(%746, newshape=[2, 420]) /* ty=Tensor[(2, 420), int64] */;
    %749 = @func_1890(%747, %748) /* ty=(Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64], Tensor[(?, 13, 12), float64]) */;
    %750 = bitwise_or(%738, %739) /* ty=Tensor[(16, 10, 15), uint8] */;
    %751 = log10(%740) /* ty=Tensor[(16, 10, 15), float64] */;
    %752 = @func_182(%743, %744) /* ty=Tensor[(11, 6, 6), bool] */;
    %753 = %749.1;
    (%750, %751, %752, meta[relay.Constant][66] /* ty=Tensor[(396), bool] */, %753, meta[relay.Constant][67] /* ty=Tensor[(156), float32] */, %var_3730)
  };
  %754(%var_3733, %var_3734, %var_3735) /* ty=(Tensor[(16, 10, 15), uint8], Tensor[(16, 10, 15), float64], Tensor[(11, 6, 6), bool], Tensor[(396), bool], Tensor[(2, 420), int64], Tensor[(156), float32], Tensor[(840), int64]) */
}

def @func_558(%var_556: Tensor[(10, 9, 1), uint32]) -> (Tensor[(10, 9, ?), bool],) {
  @func_555(%var_556) /* ty=(Tensor[(10, 9, ?), bool],) */
}

def @func_10886(%var_10868: Tensor[(2400), float32]) -> (Tensor[(15, 13, 12), float64], Tensor[(300, 8), float32], Tensor[(2400), float32]) {
  %755 = @func_10744() /* ty=(Tensor[(14, 2, 10), float64], Tensor[(15, 13, 12), float64], Tensor[(3, 1, 1), float32]) */;
  %756 = cast(%var_10868, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %757 = reshape(%756, newshape=[300, 8]) /* ty=Tensor[(300, 8), float32] */;
  %758 = @func_5274(%757) /* ty=(Tensor[(15, 13, 5), float64], Tensor[(15, 13, 5), float64], Tensor[(16, 10, 15), float32], Tensor[(300, 8), float32]) */;
  %759 = %755.1;
  %760 = %758.3;
  (%759, %760, %var_10868)
}

def @func_10204() -> Tensor[(3, 1, 1), float64] {
  %761 = fn () -> Tensor[(3, 1, 1), float64] {
    @func_7370() /* ty=Tensor[(3, 1, 1), float64] */
  };
  %761() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_8270(%var_8269: Tensor[(3, 11, 14), float64]) -> (Tensor[(3, 11, 14), float64], Tensor[(3, 1, 1), float32], Tensor[(14, 2, 10), float64]) {
  %772 = fn (%var_8235: Tensor[(3, 11, 14), float64]) -> (Tensor[(3, 11, 14), float64], Tensor[(3, 1, 1), float32], Tensor[(14, 2, 10), float64]) {
    %762 = @func_7728() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
    %763 = %762.0;
    %764 = cast(%763, dtype="uint16") /* ty=Tensor[(3, 1, 1), uint16] */;
    %765 = cast(%var_8235, dtype="uint16") /* ty=Tensor[(3, 11, 14), uint16] */;
    %766 = right_shift(%764, %765) /* ty=Tensor[(3, 11, 14), uint16] */;
    %767 = cast(%766, dtype="float64") /* ty=Tensor[(3, 11, 14), float64] */;
    %768 = @func_7762() /* ty=(Tensor[(3, 1, 1), float32],) */;
    %769 = sin(%767) /* ty=Tensor[(3, 11, 14), float64] */;
    %770 = %768.0;
    %771 = @func_6186() /* ty=Tensor[(14, 2, 10), float64] */;
    (%769, %770, %771)
  };
  %772(%var_8269) /* ty=(Tensor[(3, 11, 14), float64], Tensor[(3, 1, 1), float32], Tensor[(14, 2, 10), float64]) */
}

def @func_7583() -> (Tensor[(3, 1, 1), float64],) {
  %779 = fn () -> (Tensor[(3, 1, 1), float64],) {
    %773 = @func_6565() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
    %774 = %773.1;
    %775 = cast(%774, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
    %776 = log2(%775) /* ty=Tensor[(3, 1, 1), float32] */;
    %777 = cast(%776, dtype="float64") /* ty=Tensor[(3, 1, 1), float64] */;
    %778 = log(%777) /* ty=Tensor[(3, 1, 1), float64] */;
    (%778,)
  };
  %779() /* ty=(Tensor[(3, 1, 1), float64],) */
}

def @func_8462() -> (Tensor[(4, 14, 15), float64], Tensor[(3, 1, 1), float64]) {
  @func_8460() /* ty=(Tensor[(4, 14, 15), float64], Tensor[(3, 1, 1), float64]) */
}

def @func_6186() -> Tensor[(14, 2, 10), float64] {
  @func_5662() /* ty=Tensor[(14, 2, 10), float64] */
}

def @func_8570(%var_8566: Tensor[(3, 10, 7), float32], %var_8567: Tensor[(1872, 1), float32], %var_8568: Tensor[(396), bool], %var_8569: Tensor[(1, 15), bool]) -> (Tensor[(3, 10, 7), bool], Tensor[(4, 14, 15), float64], Tensor[(396), bool], Tensor[(5, 12, 15), bool], Tensor[(1, 15), bool], Tensor[(1872, 90), uint64], Tensor[(14, 2, 10), float32], Tensor[(3, 10, 7), float32], Tensor[(14, 2, 10), float32], Tensor[(14, 2, 10), float32]) {
  %808 = fn (%var_8480: Tensor[(3, 10, 7), float32], %var_8493: Tensor[(1872, 1), float32], %var_8494: Tensor[(396), bool], %var_8526: Tensor[(1, 15), bool]) -> (Tensor[(3, 10, 7), bool], Tensor[(4, 14, 15), float64], Tensor[(396), bool], Tensor[(5, 12, 15), bool], Tensor[(1, 15), bool], Tensor[(1872, 90), uint64], Tensor[(14, 2, 10), float32], Tensor[(3, 10, 7), float32], Tensor[(14, 2, 10), float32], Tensor[(14, 2, 10), float32]) {
    %780 = @func_7762() /* ty=(Tensor[(3, 1, 1), float32],) */;
    %781 = %780.0;
    %782 = cast(%781, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
    %783 = cast(%var_8480, dtype="bool") /* ty=Tensor[(3, 10, 7), bool] */;
    %784 = cast(%var_8493, dtype="float32") /* ty=Tensor[(1872, 1), float32] */;
    %785 = cast(%var_8494, dtype="bool") /* ty=Tensor[(396), bool] */;
    %786 = cast(meta[relay.Constant][68] /* ty=Tensor[(90), uint32] */, dtype="uint32") /* ty=Tensor[(90), uint32] */;
    %787 = reshape(%784, newshape=[12, 13, 12]) /* ty=Tensor[(12, 13, 12), float32] */;
    %788 = reshape(%785, newshape=[66, 6]) /* ty=Tensor[(66, 6), bool] */;
    %789 = reshape(%786, newshape=[90]) /* ty=Tensor[(90), uint32] */;
    %790 = @func_1111(%787, %788, %789) /* ty=(Tensor[(12, 13, 12), float32], Tensor[(4, 14, 15), bool], Tensor[(840), int64], Tensor[(11, 6, 6), bool], Tensor[(66, 6), bool], Tensor[(10, 9, ?), bool], Tensor[(90), uint32], Tensor[(4, 14, 15), float64], Tensor[(11, 6, 6), bool]) */;
    %791 = cast(%var_8526, dtype="bool") /* ty=Tensor[(1, 15), bool] */;
    %792 = reshape(%791, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), bool] */;
    %793 = @func_2771(%792) /* ty=(Tensor[(5, 12, 15), bool], Tensor[(5, 12, 15), bool]) */;
    %794 = cast(meta[relay.Constant][68] /* ty=Tensor[(90), uint32] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
    %795 = cast(%var_8493, dtype="uint64") /* ty=Tensor[(1872, 1), uint64] */;
    %796 = @func_7380() /* ty=(Tensor[(14, 2, 10), float32],) */;
    %797 = cast(%var_8480, dtype="float32") /* ty=Tensor[(3, 10, 7), float32] */;
    %798 = @func_7017() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
    %799 = @func_7145() /* ty=(Tensor[(14, 2, 10), float32],) */;
    %800 = greater(%782, %783) /* ty=Tensor[(3, 10, 7), bool] */;
    %801 = %790.7;
    %802 = %793.0;
    %803 = bitwise_and(%794, %795) /* ty=Tensor[(1872, 90), uint64] */;
    %804 = %796.0;
    %805 = log10(%797) /* ty=Tensor[(3, 10, 7), float32] */;
    %806 = %798.0;
    %807 = %799.0;
    (%800, %801, %var_8494, %802, %var_8526, %803, %804, %805, %806, %807)
  };
  %808(%var_8566, %var_8567, %var_8568, %var_8569) /* ty=(Tensor[(3, 10, 7), bool], Tensor[(4, 14, 15), float64], Tensor[(396), bool], Tensor[(5, 12, 15), bool], Tensor[(1, 15), bool], Tensor[(1872, 90), uint64], Tensor[(14, 2, 10), float32], Tensor[(3, 10, 7), float32], Tensor[(14, 2, 10), float32], Tensor[(14, 2, 10), float32]) */
}

def @func_7881(%var_7880: Tensor[(3, 13, 13), float32]) -> (Tensor[(14, 2, 10), float32], Tensor[(3, 13, 13), bool]) {
  %816 = fn (%var_7871: Tensor[(3, 13, 13), float32]) -> (Tensor[(14, 2, 10), float32], Tensor[(3, 13, 13), bool]) {
    %809 = @func_7667() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float32]) */;
    %810 = @func_7185() /* ty=(Tensor[(3, 1, 1), float32],) */;
    %811 = %810.0;
    %812 = cast(%811, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
    %813 = cast(%var_7871, dtype="bool") /* ty=Tensor[(3, 13, 13), bool] */;
    %814 = %809.0;
    %815 = less_equal(%812, %813) /* ty=Tensor[(3, 13, 13), bool] */;
    (%814, %815)
  };
  %816(%var_7880) /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 13, 13), bool]) */
}

def @func_8007(%var_8004: Tensor[(396), bool], %var_8005: Tensor[(880), uint16], %var_8006: Tensor[(1872), float32]) -> (Tensor[(14, 2, 10), float64], Tensor[(14, 2, 10), float32], Tensor[(4, 14, 15), bool], Tensor[(396), bool], Tensor[(15, 6), uint32], Tensor[(10, 8, 11), uint16], Tensor[(1872), int64], Tensor[(3, 1, 880), float32], Tensor[(3, 1, 1), float64]) {
  @func_8002(%var_8004, %var_8005, %var_8006) /* ty=(Tensor[(14, 2, 10), float64], Tensor[(14, 2, 10), float32], Tensor[(4, 14, 15), bool], Tensor[(396), bool], Tensor[(15, 6), uint32], Tensor[(10, 8, 11), uint16], Tensor[(1872), int64], Tensor[(3, 1, 880), float32], Tensor[(3, 1, 1), float64]) */
}

def @func_9637() -> (Tensor[(3, 1, 1), float64], Tensor[(3, 1, 1), float32], Tensor[(3, 1, 1), float64]) {
  %817 = @func_7728() /* ty=(Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
  %818 = @func_9497() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %819 = @func_9126() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %820 = %817.2;
  %821 = %818.0;
  %822 = %819.0;
  (%820, %821, %822)
}

def @func_6616(%var_6604: Tensor[(9, 1, 14), float32]) -> (Tensor[(9, 1, 14), float32],) {
  %823 = cast(%var_6604, dtype="float32") /* ty=Tensor[(9, 1, 14), float32] */;
  %824 = acosh(%823) /* ty=Tensor[(9, 1, 14), float32] */;
  (%824,)
}

def @func_7481(%var_7425: Tensor[(980), uint64]) -> (Tensor[(980), uint64], Tensor[(100, 24), int16], Tensor[(3, 100, 24), uint32], Tensor[(3, 1, 1), float64], Tensor[(3, 100, 24), float32], Tensor[(3, 1, 1), float64], Tensor[(14, 2, 10), float32]) {
  %825 = cast(%var_7425, dtype="uint64") /* ty=Tensor[(980), uint64] */;
  %826 = cast(meta[relay.Constant][69] /* ty=Tensor[(100, 24), float32] */, dtype="float32") /* ty=Tensor[(100, 24), float32] */;
  %827 = reshape(%825, newshape=[14, 5, 14]) /* ty=Tensor[(14, 5, 14), uint64] */;
  %828 = reshape(%826, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %829 = @func_2840(%827, %828) /* ty=(Tensor[(14, 5, 14), bool], Tensor[(16, 10, 15), float32], Tensor[(2400), float32]) */;
  %830 = %829.1;
  %831 = cast(%830, dtype="int16") /* ty=Tensor[(16, 10, 15), int16] */;
  %832 = shape_of(meta[relay.Constant][69] /* ty=Tensor[(100, 24), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %833 = cast(meta[relay.Constant][69] /* ty=Tensor[(100, 24), float32] */, dtype="int16") /* ty=Tensor[(100, 24), int16] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %835 = @func_6434() /* ty=(Tensor[(3, 1, 1), float32],) */;
  %836 = %835.0;
  %837 = cast(%836, dtype="uint32") /* ty=Tensor[(3, 1, 1), uint32] */;
  %838 = cast(meta[relay.Constant][69] /* ty=Tensor[(100, 24), float32] */, dtype="uint32") /* ty=Tensor[(100, 24), uint32] */;
  %839 = cast(meta[relay.Constant][69] /* ty=Tensor[(100, 24), float32] */, dtype="float64") /* ty=Tensor[(100, 24), float64] */;
  %840 = sqrt(%839) /* ty=Tensor[(100, 24), float64] */;
  %841 = cast(%840, dtype="uint32") /* ty=Tensor[(100, 24), uint32] */;
  %842 = cast(%836, dtype="uint32") /* ty=Tensor[(3, 1, 1), uint32] */;
  %843 = bitwise_xor(%841, %842) /* ty=Tensor[(3, 100, 24), uint32] */;
  %844 = cast(%843, dtype="float32") /* ty=Tensor[(3, 100, 24), float32] */;
  %845 = @func_7075() /* ty=(Tensor[(3, 1, 1), float64],) */;
  %846 = @func_6565() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
  %847 = minimum(%833, %834) /* ty=Tensor[(100, 24), int16] */;
  %848 = minimum(%837, %838) /* ty=Tensor[(3, 100, 24), uint32] */;
  %849 = @func_5898() /* ty=Tensor[(3, 1, 1), float64] */;
  %850 = rsqrt(%844) /* ty=Tensor[(3, 100, 24), float32] */;
  %851 = %845.0;
  %852 = %846.0;
  (%var_7425, %847, %848, %849, %850, %851, %852)
}

def @func_7845(%var_7844: Tensor[(3, 14, 11), float64]) -> (Tensor[(4, 14, 15), float64], Tensor[(3, 14, 11), bool]) {
  %859 = fn (%var_7826: Tensor[(3, 14, 11), float64]) -> (Tensor[(4, 14, 15), float64], Tensor[(3, 14, 11), bool]) {
    %853 = @func_7697() /* ty=(Tensor[(3, 1, 1), float64], float32, Tensor[(1, 2400), float32], Tensor[(4, 14, 15), float64]) */;
    %854 = @func_6173() /* ty=Tensor[(3, 1, 1), float64] */;
    %855 = cast(%854, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
    %856 = cast(%var_7826, dtype="bool") /* ty=Tensor[(3, 14, 11), bool] */;
    %857 = %853.3;
    %858 = greater(%855, %856) /* ty=Tensor[(3, 14, 11), bool] */;
    (%857, %858)
  };
  %859(%var_7844) /* ty=(Tensor[(4, 14, 15), float64], Tensor[(3, 14, 11), bool]) */
}

def @func_6188() -> Tensor[(14, 2, 10), float64] {
  @func_6186() /* ty=Tensor[(14, 2, 10), float64] */
}

def @func_2466(%var_2464: float32, %var_2465: Tensor[(2400), float32]) -> (Tensor[(11, 14, 9), float32], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64]) {
  @func_2462(%var_2464, %var_2465) /* ty=(Tensor[(11, 14, 9), float32], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64]) */
}

def @func_7050() -> Tensor[(3, 1, 1), float64] {
  %861 = fn () -> Tensor[(3, 1, 1), float64] {
    %860 = @func_6758() /* ty=(Tensor[(3, 1, 1), float64],) */;
    %860.0
  };
  %861() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_10017() -> Tensor[(3, 1, 1), float64] {
  %863 = fn () -> Tensor[(3, 1, 1), float64] {
    %862 = @func_8460() /* ty=(Tensor[(4, 14, 15), float64], Tensor[(3, 1, 1), float64]) */;
    %862.1
  };
  %863() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_8617(%var_8616: Tensor[(3, 1, 6), float64]) -> (Tensor[(3, 1, 6), bool],) {
  %869 = fn (%var_8600: Tensor[(3, 1, 6), float64]) -> (Tensor[(3, 1, 6), bool],) {
    %864 = @func_7582() /* ty=(Tensor[(3, 1, 1), float64],) */;
    %865 = %864.0;
    %866 = cast(%865, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
    %867 = cast(%var_8600, dtype="bool") /* ty=Tensor[(3, 1, 6), bool] */;
    %868 = greater_equal(%866, %867) /* ty=Tensor[(3, 1, 6), bool] */;
    (%868,)
  };
  %869(%var_8616) /* ty=(Tensor[(3, 1, 6), bool],) */
}

def @func_6128(%var_6126: Tensor[(3, 4, 15), uint16]) -> (Tensor[(3, 1, 1), float64], Tensor[(2400), float32], float32, Tensor[(2400), float32], Tensor[(3, 4, 15), int8]) {
  @func_6125(%var_6126) /* ty=(Tensor[(3, 1, 1), float64], Tensor[(2400), float32], float32, Tensor[(2400), float32], Tensor[(3, 4, 15), int8]) */
}

def @func_7260() -> (Tensor[(3, 1, 1), float64],) {
  %871 = fn () -> (Tensor[(3, 1, 1), float64],) {
    %870 = @func_5541() /* ty=Tensor[(3, 1, 1), float64] */;
    (%870,)
  };
  %871() /* ty=(Tensor[(3, 1, 1), float64],) */
}

def @func_2462(%var_2405: float32, %var_2423: Tensor[(2400), float32]) -> (Tensor[(11, 14, 9), float32], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(4, 14, 15), bool], Tensor[(2, 420), int64]) {
  %872 = cast(%var_2405, dtype="float32") /* ty=float32 */;
  %873 = cast(meta[relay.Constant][70] /* ty=Tensor[(11, 14, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 14, 9), float32] */;
  %874 = cast(%var_2423, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %875 = reshape(%874, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), float32] */;
  %876 = cast(meta[relay.Constant][71] /* ty=Tensor[(2, 420), int64] */, dtype="int64") /* ty=Tensor[(2, 420), int64] */;
  %877 = reshape(%876, newshape=[4, 14, 15]) /* ty=Tensor[(4, 14, 15), int64] */;
  %878 = floor_mod(%872, %873) /* ty=Tensor[(11, 14, 9), float32] */;
  %879 = @func_1940(%875) /* ty=Tensor[(16, 10, 15), float32] */;
  %880 = @func_442(%877) /* ty=Tensor[(4, 14, 15), bool] */;
  (%878, %879, %var_2423, %880, meta[relay.Constant][71] /* ty=Tensor[(2, 420), int64] */)
}

def @func_4266(%var_4264: Tensor[(12, 13, 9), int8], %var_4265: Tensor[(12, 13, 9), int8]) -> (Tensor[(12, 13, 9), bool],) {
  %886 = fn (%var_4246: Tensor[(12, 13, 9), int8], %var_4247: Tensor[(12, 13, 9), int8]) -> (Tensor[(12, 13, 9), bool],) {
    %881 = cast(%var_4247, dtype="bool") /* ty=Tensor[(12, 13, 9), bool] */;
    %882 = shape_of(%var_4246, dtype="int32") /* ty=Tensor[(3), int32] */;
    %883 = cast(%var_4246, dtype="bool") /* ty=Tensor[(12, 13, 9), bool] */;
    %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %885 = not_equal(%883, %884) /* ty=Tensor[(12, 13, 9), bool] */;
    (%885,)
  };
  %886(%var_4264, %var_4265) /* ty=(Tensor[(12, 13, 9), bool],) */
}

def @func_6760() -> (Tensor[(3, 1, 1), float64],) {
  @func_6758() /* ty=(Tensor[(3, 1, 1), float64],) */
}

def @func_8460() -> (Tensor[(4, 14, 15), float64], Tensor[(3, 1, 1), float64]) {
  %887 = @func_7697() /* ty=(Tensor[(3, 1, 1), float64], float32, Tensor[(1, 2400), float32], Tensor[(4, 14, 15), float64]) */;
  %888 = @func_7017() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */;
  %889 = %887.3;
  %890 = %888.1;
  (%889, %890)
}

def @func_7019() -> (Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) {
  @func_7017() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float64]) */
}

def @func_8912() -> (Tensor[(3, 1, 1), float32],) {
  %893 = fn () -> (Tensor[(3, 1, 1), float32],) {
    %891 = @func_6948() /* ty=(Tensor[(3, 1, 1), float32], Tensor[(14, 2, 10), float32]) */;
    %892 = %891.0;
    (%892,)
  };
  %893() /* ty=(Tensor[(3, 1, 1), float32],) */
}

def @func_9410(%var_9408: Tensor[(11, 4, 8), int8], %var_9409: Tensor[(11, 4, 8), int8]) -> (Tensor[(11, 4, 8), bool], Tensor[(5, 12, 15), bool], Tensor[(15), bool], Tensor[(14, 2, 10), float64], Tensor[(5, 12, 15), bool]) {
  @func_9406(%var_9408, %var_9409) /* ty=(Tensor[(11, 4, 8), bool], Tensor[(5, 12, 15), bool], Tensor[(15), bool], Tensor[(14, 2, 10), float64], Tensor[(5, 12, 15), bool]) */
}

def @func_9828() -> Tensor[(3, 1, 1), float64] {
  @func_9826() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_5996() -> Tensor[(3, 1, 1), float64] {
  @func_5994() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_10777() -> (Tensor[(3, 1, 1), float64],) {
  %895 = fn () -> (Tensor[(3, 1, 1), float64],) {
    %894 = @func_5994() /* ty=Tensor[(3, 1, 1), float64] */;
    (%894,)
  };
  %895() /* ty=(Tensor[(3, 1, 1), float64],) */
}

def @func_8348(%var_8345: Tensor[(15, 13, 12), float64], %var_8346: Tensor[(33), float64], %var_8347: Tensor[(280), float64]) -> (Tensor[(15, 13, 12), int16], Tensor[(6, 14, 13), uint32], Tensor[(33), float64], Tensor[(1092, 1), uint32], Tensor[(14, 2, 10), bool], Tensor[(280), float64], Tensor[(1092), uint32]) {
  %917 = fn (%var_8312: Tensor[(15, 13, 12), float64], %var_8331: Tensor[(33), float64], %var_8335: Tensor[(280), float64]) -> (Tensor[(15, 13, 12), int16], Tensor[(6, 14, 13), uint32], Tensor[(33), float64], Tensor[(1092, 1), uint32], Tensor[(14, 2, 10), bool], Tensor[(280), float64], Tensor[(1092), uint32]) {
    %896 = @func_6703() /* ty=(Tensor[(15, 13, 12), float64],) */;
    %897 = %896.0;
    %898 = cast(%var_8312, dtype="int16") /* ty=Tensor[(15, 13, 12), int16] */;
    %899 = shape_of(%897, dtype="int32") /* ty=Tensor[(3), int32] */;
    %900 = cast(%897, dtype="int16") /* ty=Tensor[(15, 13, 12), int16] */;
    %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %902 = cast(%var_8331, dtype="float64") /* ty=Tensor[(33), float64] */;
    %903 = cast(meta[relay.Constant][72] /* ty=Tensor[(1092, 1), uint32] */, dtype="uint32") /* ty=Tensor[(1092, 1), uint32] */;
    %904 = reshape(%902, newshape=[3, 11, 1]) /* ty=Tensor[(3, 11, 1), float64] */;
    %905 = reshape(%903, newshape=[7, 156]) /* ty=Tensor[(7, 156), uint32] */;
    %906 = @func_5621(%904, %905) /* ty=(Tensor[(6, 14, 13), uint32], Tensor[(7, 156), uint32], float32, Tensor[(507), float64], Tensor[(16, 10, 15), float32], Tensor[(2400), float32], Tensor[(3, 11, 13), float64]) */;
    %907 = cast(%var_8335, dtype="float64") /* ty=Tensor[(280), float64] */;
    %908 = reshape(%907, newshape=[14, 2, 10]) /* ty=Tensor[(14, 2, 10), float64] */;
    %909 = @func_6825(%908) /* ty=(Tensor[(14, 2, 10), bool],) */;
    %910 = %906.0;
    %911 = cast(%910, dtype="uint32") /* ty=Tensor[(6, 14, 13), uint32] */;
    %912 = reshape(%911, newshape=[1092]) /* ty=Tensor[(1092), uint32] */;
    %913 = @func_6240(%912) /* ty=(Tensor[(3, 1, 1), float32], Tensor[(6, 14, 13), uint32], Tensor[(1092), uint32]) */;
    %914 = minimum(%900, %901) /* ty=Tensor[(15, 13, 12), int16] */;
    %915 = %909.0;
    %916 = %913.2;
    (%914, %910, %var_8331, meta[relay.Constant][72] /* ty=Tensor[(1092, 1), uint32] */, %915, %var_8335, %916)
  };
  %917(%var_8345, %var_8346, %var_8347) /* ty=(Tensor[(15, 13, 12), int16], Tensor[(6, 14, 13), uint32], Tensor[(33), float64], Tensor[(1092, 1), uint32], Tensor[(14, 2, 10), bool], Tensor[(280), float64], Tensor[(1092), uint32]) */
}

def @func_4688(%var_4686: Tensor[(9, 15, 7), uint64], %var_4687: Tensor[(9, 15, 7), uint64]) -> (Tensor[(9, 15, 7), uint64],) {
  @func_4684(%var_4686, %var_4687) /* ty=(Tensor[(9, 15, 7), uint64],) */
}

def @func_9279() -> Tensor[(3, 1, 1), float64] {
  %919 = fn () -> Tensor[(3, 1, 1), float64] {
    %918 = @func_8439() /* ty=(Tensor[(3, 1, 1), float64],) */;
    %918.0
  };
  %919() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_7506() -> Tensor[(15, 13, 12), float64] {
  @func_7504() /* ty=Tensor[(15, 13, 12), float64] */
}

def @func_6471() -> Tensor[(14, 2, 10), float64] {
  @func_5662() /* ty=Tensor[(14, 2, 10), float64] */
}

def @func_9735() -> (Tensor[(3, 1, 1), float32],) {
  @func_9733() /* ty=(Tensor[(3, 1, 1), float32],) */
}

def @func_9650() -> Tensor[(3, 1, 1), float64] {
  %921 = fn () -> Tensor[(3, 1, 1), float64] {
    %920 = @func_9116() /* ty=(Tensor[(3, 1, 1), float64],) */;
    %920.0
  };
  %921() /* ty=Tensor[(3, 1, 1), float64] */
}

def @func_9898() -> Tensor[(3, 1, 1), float32] {
  %923 = fn () -> Tensor[(3, 1, 1), float32] {
    %922 = @func_6434() /* ty=(Tensor[(3, 1, 1), float32],) */;
    %922.0
  };
  %923() /* ty=Tensor[(3, 1, 1), float32] */
}

def @func_9733() -> (Tensor[(3, 1, 1), float32],) {
  %924 = @func_7667() /* ty=(Tensor[(14, 2, 10), float32], Tensor[(3, 1, 1), float32]) */;
  %925 = %924.1;
  (%925,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

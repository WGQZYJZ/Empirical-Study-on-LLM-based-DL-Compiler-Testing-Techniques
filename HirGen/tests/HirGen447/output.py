import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_28 = relay.const([[[6.332368],[-4.573426],[-2.221293],[-0.071862],[2.263495],[-8.225072]],[[-0.993670],[2.471587],[-3.815346],[2.320700],[1.500397],[7.226166]],[[5.696380],[0.269199],[5.842217],[2.735349],[-1.639341],[0.976856]],[[-9.620950],[7.942888],[0.868534],[6.900543],[1.391740],[-6.581264]],[[-6.659594],[-2.529046],[2.674884],[5.687527],[-3.181542],[0.150842]],[[-9.943608],[-4.176871],[-7.379595],[9.474267],[3.427405],[-3.592992]],[[-1.275340],[-4.892483],[7.439631],[1.888528],[-7.447272],[1.849716]],[[-9.779600],[7.475433],[5.604445],[-6.694140],[9.786414],[4.822040]],[[1.036934],[-1.518821],[0.023454],[1.972068],[-6.057713],[9.809016]],[[-1.897560],[7.534742],[2.777023],[-5.030010],[-4.400505],[-0.582388]],[[-9.061403],[5.143695],[0.320652],[2.991815],[5.107836],[-6.154015]],[[9.050923],[-0.036693],[4.377841],[1.960977],[2.662519],[9.714785]]], dtype = "float32")#candidate|28|(12, 6, 1)|const|float32
var_29 = relay.var("var_29", dtype = "float32", shape = (12, 6, 7))#candidate|29|(12, 6, 7)|var|float32
bop_30 = relay.mod(const_28.astype('float32'), var_29.astype('float32')) # shape=(12, 6, 7)
uop_47 = relay.atan(var_29.astype('float32')) # shape=(12, 6, 7)
output = relay.Tuple([bop_30,uop_47,])
output2 = relay.Tuple([bop_30,uop_47,])
func_58 = relay.Function([var_29,], output)
mod['func_58'] = func_58
mod = relay.transform.InferType()(mod)
var_59 = relay.var("var_59", dtype = "float32", shape = (12, 6, 7))#candidate|59|(12, 6, 7)|var|float32
output = func_58(var_59)
func_60 = relay.Function([var_59], output)
mutated_mod['func_60'] = func_60
mutated_mod = relay.transform.InferType()(mutated_mod)
const_309 = relay.const([[[-1.044627,5.238026,-3.026320,6.608425,4.064157,-9.873214,7.390017,5.372653,2.809589],[-3.993517,3.643300,0.180362,-1.656858,-1.731526,-1.975074,-7.703538,4.354420,3.355797],[-6.298529,1.883861,-2.031901,-4.215037,9.758750,5.218780,-6.544111,-2.967879,-4.177579],[1.302218,9.231254,-1.696567,5.821905,6.712504,-4.808859,-0.910199,8.336762,-9.828005],[-3.454301,6.236558,-3.508425,-2.307594,3.061844,-1.338690,-0.350241,-7.403553,-2.859862],[-7.844931,4.722546,-0.649895,-7.739631,-7.404740,1.469977,3.800272,8.421186,9.497256]],[[6.094758,-6.779803,1.003915,-5.468543,-8.537207,5.819826,4.547235,6.449997,0.370098],[-3.319168,-1.666317,1.349423,9.768180,1.335639,-3.609671,3.682755,-8.822784,-5.770144],[-3.577971,-8.668153,4.077602,0.346915,4.054352,2.660163,4.254561,-9.916643,-1.340867],[2.662890,1.119427,4.768645,3.307970,0.994511,-2.530059,5.506738,2.250020,-3.740671],[-4.172453,7.784581,-3.703409,-1.990622,9.691627,0.924424,1.097739,5.102709,-6.270423],[-2.196911,8.663401,7.139119,0.663031,2.566618,-0.397814,3.827637,2.571274,-8.837060]],[[1.307079,0.864147,-7.470006,-5.001425,1.430533,-8.258008,-9.377776,-4.761245,-8.238164],[-0.706300,-5.056157,-5.884078,3.647838,6.808836,3.278529,-3.223221,6.403231,4.874874],[-9.598841,6.895097,9.854779,1.459196,-7.521531,-6.168431,-7.384392,-7.197657,-1.878111],[0.797130,-4.396202,-6.073750,1.423518,-4.701284,5.580930,-9.630500,6.529136,9.042421],[4.999977,3.502517,-5.093436,-6.475676,-0.140125,-4.870219,-4.361556,-6.705000,-2.173073],[-8.724180,0.001114,-5.284839,-2.610314,-7.942713,-8.241311,-7.437812,6.592621,2.089808]],[[7.446036,-1.942843,-1.908100,-2.812048,-4.343321,2.811646,-1.156248,-7.374130,-6.342863],[-2.570567,4.139552,0.100178,-6.599690,4.792412,2.353265,-4.329602,6.680586,-9.374978],[7.900853,-6.331037,4.251203,-5.380777,0.015749,8.500228,-0.903082,-4.311223,-5.775019],[3.487868,1.797850,-7.475154,-7.531608,-4.369514,7.254947,3.728783,9.820205,7.035669],[-3.712981,-0.189215,-1.089295,8.031833,1.721656,1.734125,3.635521,1.908690,1.470626],[5.036162,-6.344126,6.564185,-0.287804,-5.836715,-9.663989,-5.903034,4.281658,-4.924845]],[[-6.570909,-4.182679,1.653560,-3.073816,7.975458,-2.517869,2.291098,-4.334692,4.802355],[-4.228243,-3.042124,4.259340,-0.056262,6.272964,7.115623,7.527520,-3.026690,1.785963],[2.864146,-2.913901,6.369520,-6.768495,0.175315,-8.210884,-0.924867,-8.009653,9.473465],[-5.643069,-0.617947,-5.008723,2.752518,5.410573,1.379016,-5.456492,-8.156609,0.001618],[2.024277,9.918496,-6.785044,3.758255,-4.263653,-5.847987,8.484460,4.684924,-2.771642],[9.326490,6.851466,1.658810,-8.534799,-3.418287,2.535442,-3.596482,9.013943,8.461704]],[[-4.458131,-8.525177,-4.853023,-5.231936,9.246056,5.244017,8.716488,-2.678596,-6.700969],[-5.193198,5.207426,9.143418,-3.513438,4.632671,8.230784,-1.274164,0.806977,-5.498172],[3.655665,0.845216,-4.626174,-5.157406,-2.539180,2.095482,8.589770,0.021573,-4.461980],[5.287842,-9.537674,-8.550042,3.393237,5.107801,1.895824,-3.998846,3.610670,-8.590368],[8.939126,2.276253,4.295245,-4.439088,-2.889457,4.028474,-8.354926,-9.758322,6.036768],[6.700544,8.491423,3.199310,-2.880224,8.964919,7.449767,-8.306634,-1.847702,-7.031423]]], dtype = "float32")#candidate|309|(6, 6, 9)|const|float32
var_310 = relay.var("var_310", dtype = "float32", shape = (6, 6, 9))#candidate|310|(6, 6, 9)|var|float32
bop_311 = relay.not_equal(const_309.astype('bool'), relay.reshape(var_310.astype('bool'), relay.shape_of(const_309))) # shape=(6, 6, 9)
func_58_call = mod.get_global_var('func_58')
func_60_call = mutated_mod.get_global_var('func_60')
var_315 = relay.var("var_315", dtype = "float32", shape = (504, 1))#candidate|315|(504, 1)|var|float32
call_314 = relay.TupleGetItem(func_58_call(relay.reshape(var_315.astype('float32'), [12, 6, 7])), 1)
call_316 = relay.TupleGetItem(func_60_call(relay.reshape(var_315.astype('float32'), [12, 6, 7])), 1)
func_58_call = mod.get_global_var('func_58')
func_60_call = mutated_mod.get_global_var('func_60')
call_322 = relay.TupleGetItem(func_58_call(relay.reshape(call_314.astype('float32'), [12, 6, 7])), 1)
call_323 = relay.TupleGetItem(func_60_call(relay.reshape(call_314.astype('float32'), [12, 6, 7])), 1)
uop_342 = relay.sin(const_309.astype('float32')) # shape=(6, 6, 9)
output = relay.Tuple([bop_311,call_314,var_315,call_322,uop_342,])
output2 = relay.Tuple([bop_311,call_316,var_315,call_323,uop_342,])
func_364 = relay.Function([var_310,var_315,], output)
mod['func_364'] = func_364
mod = relay.transform.InferType()(mod)
mutated_mod['func_364'] = func_364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_364_call = mutated_mod.get_global_var('func_364')
var_366 = relay.var("var_366", dtype = "float32", shape = (6, 6, 9))#candidate|366|(6, 6, 9)|var|float32
var_367 = relay.var("var_367", dtype = "float32", shape = (504, 1))#candidate|367|(504, 1)|var|float32
call_365 = func_364_call(var_366,var_367,)
output = call_365
func_368 = relay.Function([var_366,var_367,], output)
mutated_mod['func_368'] = func_368
mutated_mod = relay.transform.InferType()(mutated_mod)
const_549 = relay.const([[[-1,-8,5,-10,-6,7,2,-4,8],[7,5,10,3,6,-7,7,-3,-4],[4,7,9,-9,-5,-3,9,1,-3],[7,-6,-3,7,-3,-6,1,3,2],[-1,-10,-6,-1,3,10,-2,-10,-9],[1,3,-6,-1,1,-4,3,-5,-2],[-7,5,-5,-4,1,7,-8,-6,2],[-2,-9,-6,-5,8,3,-1,5,8]],[[3,8,9,4,4,10,1,9,-4],[-3,-4,-9,3,7,7,9,-1,-6],[4,8,9,2,-8,2,-5,-1,7],[6,-1,9,8,8,9,-10,3,9],[-3,-5,-3,5,3,-7,-5,10,3],[3,-1,3,-6,-3,8,-4,4,-4],[-6,6,-4,-10,3,-6,-3,-10,-4],[4,-5,-1,-10,7,-4,-2,-9,-2]],[[1,-3,-1,-5,-2,9,-9,7,2],[8,-5,-6,8,-1,-8,2,-2,6],[-6,10,-5,3,1,-7,-8,-3,-1],[-1,-8,-6,5,6,2,3,-2,-7],[1,2,-2,5,5,4,-8,7,-9],[-2,10,4,-9,-2,-1,9,-1,-5],[9,6,9,-4,-6,5,-3,-2,5],[6,6,-7,9,10,-7,6,7,4]],[[9,-5,6,-10,6,-1,-9,-7,5],[1,-9,7,-8,-4,2,-10,-3,-7],[6,-7,1,-5,4,-7,-7,-4,-1],[-4,1,-3,5,5,-8,-8,-2,-9],[2,-3,-6,-5,9,9,10,9,1],[-6,5,6,-6,10,-1,10,2,2],[-6,-1,8,-6,-3,-2,9,3,-1],[-9,-5,-2,-7,2,8,7,2,-8]],[[10,-1,-1,9,2,3,-3,10,-3],[-6,7,-2,-3,6,9,-6,-9,3],[-7,-7,-6,-2,-7,1,-5,2,7],[6,3,3,-7,10,-3,4,-7,1],[-3,4,-5,10,4,-1,-6,-10,8],[-10,2,1,-2,7,5,-5,-3,10],[6,8,-2,10,8,6,3,3,5],[-1,8,-8,-6,-3,4,6,5,-9]],[[-7,-4,8,2,-7,7,8,1,-5],[-9,4,9,7,-5,1,9,4,4],[-7,-5,1,6,-9,-5,8,5,-8],[-7,2,-9,-7,-5,-4,-4,5,-5],[3,-6,-8,9,5,-7,2,9,-7],[9,9,-6,-2,3,-2,-4,10,1],[10,-6,-6,9,-7,4,-7,10,6],[8,-8,5,-9,-9,6,-7,-2,1]],[[-5,5,-9,8,1,-3,-7,7,3],[-7,1,-1,8,5,-10,5,9,7],[-1,5,6,3,10,-9,1,5,-4],[1,4,-1,4,-10,-9,10,-4,4],[-6,3,6,-1,2,1,4,-7,9],[3,-5,8,-1,-4,5,7,4,7],[4,8,-4,1,2,4,-7,7,-1],[-5,-3,-9,6,8,-8,9,1,-7]],[[6,-2,-9,4,-5,-9,5,-1,5],[-9,-6,1,1,5,7,8,-1,6],[7,9,10,-10,-3,5,9,-7,10],[8,-7,-5,4,-2,6,-8,-7,-6],[-2,-3,-5,3,2,-10,7,6,-10],[2,6,10,1,6,-4,4,7,3],[6,8,5,10,6,9,9,-2,5],[-9,-2,4,-5,2,-6,6,10,-9]],[[1,-8,-7,5,-8,1,10,10,2],[8,4,1,-4,3,-8,8,6,-8],[-2,-7,1,4,7,-3,-9,8,10],[5,-4,-7,-3,-4,8,-1,5,1],[-7,7,-8,-5,-1,10,10,-7,-4],[-9,-7,7,4,-6,-8,-5,1,-1],[4,5,8,-9,1,-5,10,3,6],[3,-9,-9,7,6,-7,8,-2,7]],[[8,-8,-3,3,4,1,7,-10,-4],[-5,-4,-2,7,-2,-2,-7,-8,9],[-6,5,8,2,9,-2,-2,7,-8],[-8,-8,4,-1,2,5,-1,4,3],[-1,5,-8,4,-6,7,-9,-8,7],[-8,-2,8,-2,8,-4,-5,-7,-4],[9,-4,-8,-8,-6,-3,-10,-1,-1],[-2,9,-8,3,9,-6,-3,-2,10]],[[8,4,-4,-8,10,-9,-10,4,10],[-6,5,-3,10,-6,2,10,-3,7],[3,-4,-5,-4,3,-8,-7,-8,-2],[5,-6,2,-6,10,-1,9,-2,-7],[-7,6,8,-4,8,1,-2,2,5],[6,8,-3,4,-3,6,-3,-4,2],[3,-8,8,3,-6,-8,10,-4,-1],[-7,10,1,-1,-6,5,6,-6,1]]], dtype = "int32")#candidate|549|(11, 8, 9)|const|int32
var_550 = relay.var("var_550", dtype = "int32", shape = (11, 8, 9))#candidate|550|(11, 8, 9)|var|int32
bop_551 = relay.equal(const_549.astype('bool'), relay.reshape(var_550.astype('bool'), relay.shape_of(const_549))) # shape=(11, 8, 9)
output = relay.Tuple([bop_551,])
output2 = relay.Tuple([bop_551,])
func_572 = relay.Function([var_550,], output)
mod['func_572'] = func_572
mod = relay.transform.InferType()(mod)
var_573 = relay.var("var_573", dtype = "int32", shape = (11, 8, 9))#candidate|573|(11, 8, 9)|var|int32
output = func_572(var_573)
func_574 = relay.Function([var_573], output)
mutated_mod['func_574'] = func_574
mutated_mod = relay.transform.InferType()(mutated_mod)
var_631 = relay.var("var_631", dtype = "float32", shape = (3, 1, 14))#candidate|631|(3, 1, 14)|var|float32
uop_632 = relay.exp(var_631.astype('float32')) # shape=(3, 1, 14)
uop_634 = relay.asinh(uop_632.astype('float64')) # shape=(3, 1, 14)
func_364_call = mod.get_global_var('func_364')
func_368_call = mutated_mod.get_global_var('func_368')
var_650 = relay.var("var_650", dtype = "float32", shape = (324,))#candidate|650|(324,)|var|float32
var_651 = relay.var("var_651", dtype = "float32", shape = (504,))#candidate|651|(504,)|var|float32
call_649 = relay.TupleGetItem(func_364_call(relay.reshape(var_650.astype('float32'), [6, 6, 9]), relay.reshape(var_651.astype('float32'), [504, 1]), ), 0)
call_652 = relay.TupleGetItem(func_368_call(relay.reshape(var_650.astype('float32'), [6, 6, 9]), relay.reshape(var_651.astype('float32'), [504, 1]), ), 0)
output = relay.Tuple([uop_634,call_649,var_650,var_651,])
output2 = relay.Tuple([uop_634,call_652,var_650,var_651,])
func_653 = relay.Function([var_631,var_650,var_651,], output)
mod['func_653'] = func_653
mod = relay.transform.InferType()(mod)
var_654 = relay.var("var_654", dtype = "float32", shape = (3, 1, 14))#candidate|654|(3, 1, 14)|var|float32
var_655 = relay.var("var_655", dtype = "float32", shape = (324,))#candidate|655|(324,)|var|float32
var_656 = relay.var("var_656", dtype = "float32", shape = (504,))#candidate|656|(504,)|var|float32
output = func_653(var_654,var_655,var_656,)
func_657 = relay.Function([var_654,var_655,var_656,], output)
mutated_mod['func_657'] = func_657
mutated_mod = relay.transform.InferType()(mutated_mod)
var_683 = relay.var("var_683", dtype = "float32", shape = (2, 6, 2))#candidate|683|(2, 6, 2)|var|float32
const_684 = relay.const([[[1.613748,-6.547178],[7.163597,0.763381],[5.771152,6.103264],[-3.396241,6.016752],[2.496838,8.050912],[-2.836883,-0.938103]],[[-7.899489,-3.770907],[-5.519871,-5.502147],[-8.672214,5.872913],[8.110200,3.083322],[-5.398876,2.432299],[-1.521436,3.416783]]], dtype = "float32")#candidate|684|(2, 6, 2)|const|float32
bop_685 = relay.floor_divide(var_683.astype('float32'), relay.reshape(const_684.astype('float32'), relay.shape_of(var_683))) # shape=(2, 6, 2)
output = bop_685
output2 = bop_685
func_707 = relay.Function([var_683,], output)
mod['func_707'] = func_707
mod = relay.transform.InferType()(mod)
mutated_mod['func_707'] = func_707
mutated_mod = relay.transform.InferType()(mutated_mod)
var_708 = relay.var("var_708", dtype = "float32", shape = (2, 6, 2))#candidate|708|(2, 6, 2)|var|float32
func_707_call = mutated_mod.get_global_var('func_707')
call_709 = func_707_call(var_708)
output = call_709
func_710 = relay.Function([var_708], output)
mutated_mod['func_710'] = func_710
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1003 = relay.var("var_1003", dtype = "float64", shape = (7, 10, 14))#candidate|1003|(7, 10, 14)|var|float64
uop_1004 = relay.asinh(var_1003.astype('float64')) # shape=(7, 10, 14)
func_58_call = mod.get_global_var('func_58')
func_60_call = mutated_mod.get_global_var('func_60')
const_1022 = relay.const([8.946905,-9.304262,-9.655679,7.989066,9.093388,3.022560,5.299852,-8.057938,-1.739886,-7.935967,5.387187,0.046402,4.643142,9.526589,3.293379,5.673435,8.582162,-0.236821,-0.982158,-0.794187,7.155267,0.452486,-2.928466,0.815590,7.154313,3.928280,-5.940547,9.230932,-5.386003,-1.059843,8.126443,-3.053121,1.800299,-0.549487,-9.823853,6.540296,4.028181,3.548061,-1.630721,-6.120863,-3.990182,-8.397855,-1.764685,-2.379742,-4.863252,7.061228,-4.847788,-8.772934,-2.581160,-5.152642,8.118115,-8.749330,-9.590771,-3.941238,6.202078,-2.079785,-7.477485,-6.956786,2.456395,4.471694,4.846970,3.666298,-9.133502,1.055793,6.859878,-7.323187,1.257133,3.847557,-8.666634,-0.952408,-6.338697,4.790371,4.560971,6.104471,-0.981660,-1.025876,0.584447,5.246648,6.401487,-8.196556,-0.337793,9.666482,-7.439182,8.123172,1.135026,-5.123114,4.835213,-2.797286,9.909913,3.383363,8.149289,8.808200,8.003969,-3.065788,2.290835,3.650719,5.905773,6.288855,2.138393,-8.386649,-8.919422,-4.841839,-6.000268,-0.764840,7.757560,8.837303,2.112550,7.659907,-8.579888,0.929361,7.425395,3.828640,8.863117,-7.204040,-5.528871,3.411257,4.408085,-7.934438,3.201100,6.328340,-5.160679,5.010506,8.599343,-1.780566,-3.182266,5.883307,1.612918,2.173225,5.621358,9.646043,-1.672255,-8.974603,0.483984,-0.992209,9.678638,8.236925,-4.779286,3.395345,5.191402,4.020431,1.522236,9.346581,-1.975626,9.537126,-0.518730,0.992979,-4.647331,-8.057666,-0.551498,-2.555578,-5.073147,9.162108,-3.161309,-1.559723,-1.978746,0.949622,-6.396546,-6.916855,5.172664,-0.680695,7.129796,2.001413,3.112138,0.889302,-0.203387,1.118481,4.094892,0.135629,6.035717,6.032300,-5.749727,5.040971,-6.686290,5.456457,-4.521624,5.073591,5.910192,8.156208,0.898648,-1.337553,-3.830502,-2.166233,-4.171035,1.558719,-9.034547,5.823789,9.470513,8.158262,3.257766,-9.515134,2.974384,6.856925,-8.945829,7.251559,1.851832,1.984090,-3.948905,1.409783,1.142209,-7.273608,6.144798,-7.569698,4.878772,-0.148266,-2.069013,-1.971035,6.617218,-4.555767,-6.967060,4.968280,8.178724,2.208075,-3.124820,-3.351887,7.182071,8.847559,2.563683,1.373591,-1.504804,5.411058,-0.802221,-2.249663,0.210270,2.026550,-4.561975,8.255812,9.027947,0.817083,4.182540,-1.683894,1.929862,6.949062,8.368623,0.097805,1.435433,3.550683,-8.372021,9.067724,-7.838515,4.970924,1.748028,7.272410,3.349479,-8.269193,-9.842169,6.633010,3.752055,-2.485224,2.742335,-5.000348,-4.507577,6.875983,3.460243,-9.239083,8.626056,-9.156091,-8.273241,-8.355154,1.874363,-9.761411,8.411331,0.286840,3.948248,9.439713,3.604419,2.242100,8.264779,-2.639938,0.483131,5.762064,-3.692494,5.715056,7.911986,-7.023383,-5.709928,-2.659508,-8.393207,-7.811139,-0.202907,-8.720816,7.032395,7.288043,-1.784413,6.630743,0.629577,9.560067,9.540673,-3.844612,-6.731902,0.040277,-3.329631,-7.273431,5.201660,-4.084772,-2.333538,4.784309,-4.822853,8.728955,-0.120262,-7.448665,5.312207,0.811582,-3.525652,7.412975,-4.768483,0.986797,-2.486980,5.874459,3.124718,1.939681,-7.861590,7.124595,-0.803960,-7.798276,-2.012605,-7.628653,-6.780685,-6.064916,7.148109,0.182222,-4.870084,-3.653585,-2.677474,-7.290802,9.591294,4.731114,-0.518285,-0.006687,7.236894,9.063786,4.216230,2.523050,2.818968,-1.417855,9.235674,-2.023718,9.976073,9.485282,-0.779207,0.781012,9.525845,4.463218,8.260813,-7.222561,-1.407509,-5.364894,0.373875,5.896227,5.745820,-2.432870,0.324938,-9.316272,5.493302,-5.370738,5.106487,-3.590672,5.195663,-3.336826,7.029666,5.049014,-0.101858,-3.732243,-4.354840,-6.869242,8.458356,-0.077175,8.657100,5.761342,-3.676074,-4.589323,1.581390,6.387751,4.802026,-9.800889,-0.775167,-3.482663,2.150479,7.901852,4.387686,-7.243177,-0.206847,4.537557,8.165973,-0.418800,4.520692,-1.041421,2.898446,5.244614,1.472771,-9.135261,7.982986,5.233230,0.930308,-2.729994,-0.201096,2.961051,-3.131680,0.866120,-5.524267,5.120787,-7.343745,-6.510804,5.188206,-6.665721,4.937361,5.202274,-0.145740,-0.610878,6.182843,-0.288143,3.312588,-4.651903,-5.746786,2.353933,4.889354,-1.876703,-2.241522,-8.902199,-9.916223,5.551745,1.392518,9.370020,5.668297,9.064352,-9.187443,-1.759085,8.766428,8.266449,-0.655125,-3.644071,-4.626381,-6.678127,-2.122091,-9.960310,2.625879,-4.648516,-8.729799,-8.043714,5.682521,-6.344677,7.733236,2.774805,1.731847,2.154867,-9.751205,-5.397563,-8.331957,9.633009,5.546269,-6.771958,0.122947,4.264738,-5.988352,5.532847,2.988308,2.537786,9.065867,1.956150,-1.745717,-5.261902,6.804778,0.926422,5.496227,-3.388222,-5.917809,-2.740419,3.299224,-1.192321,4.449988,-2.865583,0.147909,-6.339429,-1.056414,-3.094216,-6.300190,3.249575,8.031665,3.384319,-9.057895,9.880206,-7.595751,-9.735314,5.414372,0.695896,9.319747,6.353133,-3.102619,9.043214,1.309707,9.830441,-2.411121,0.765114,1.198288,4.144326,-7.936618,-9.635456,-7.434477,6.220224,9.316969,-2.316893,-9.908012,-1.505286,8.115842,4.412042], dtype = "float32")#candidate|1022|(504,)|const|float32
call_1021 = relay.TupleGetItem(func_58_call(relay.reshape(const_1022.astype('float32'), [12, 6, 7])), 1)
call_1023 = relay.TupleGetItem(func_60_call(relay.reshape(const_1022.astype('float32'), [12, 6, 7])), 1)
output = relay.Tuple([uop_1004,call_1021,const_1022,])
output2 = relay.Tuple([uop_1004,call_1023,const_1022,])
func_1026 = relay.Function([var_1003,], output)
mod['func_1026'] = func_1026
mod = relay.transform.InferType()(mod)
mutated_mod['func_1026'] = func_1026
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1027 = relay.var("var_1027", dtype = "float64", shape = (7, 10, 14))#candidate|1027|(7, 10, 14)|var|float64
func_1026_call = mutated_mod.get_global_var('func_1026')
call_1028 = func_1026_call(var_1027)
output = call_1028
func_1029 = relay.Function([var_1027], output)
mutated_mod['func_1029'] = func_1029
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1134 = relay.const([[[6.997202],[4.515053],[3.536780],[7.364472],[-4.209226]],[[-0.408445],[-1.258631],[7.516955],[7.575748],[-2.959214]],[[4.096408],[-3.188880],[-4.080329],[-3.646167],[8.629659]],[[-7.076706],[-8.990802],[-6.827246],[-3.558182],[2.368894]],[[0.520269],[-9.850205],[-7.765741],[-1.565385],[0.188710]],[[1.343829],[1.357234],[4.315160],[1.775693],[1.373346]],[[-4.810129],[6.144055],[-0.387479],[-6.444028],[-2.871124]],[[1.433162],[7.582170],[6.823784],[9.869045],[4.620519]],[[4.812254],[-6.690886],[-8.933824],[-9.382855],[4.077215]],[[-2.807643],[3.297230],[-2.110168],[1.628743],[-4.459356]],[[-2.540167],[-5.283048],[-0.166781],[8.342518],[2.165830]],[[-0.236410],[-5.583571],[-8.483756],[-7.806850],[-5.016708]],[[-1.613526],[2.345329],[3.971526],[8.999164],[-1.057356]]], dtype = "float32")#candidate|1134|(13, 5, 1)|const|float32
uop_1135 = relay.acos(const_1134.astype('float32')) # shape=(13, 5, 1)
output = uop_1135
output2 = uop_1135
func_1139 = relay.Function([], output)
mod['func_1139'] = func_1139
mod = relay.transform.InferType()(mod)
output = func_1139()
func_1140 = relay.Function([], output)
mutated_mod['func_1140'] = func_1140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1139_call = mod.get_global_var('func_1139')
func_1140_call = mutated_mod.get_global_var('func_1140')
call_1141 = func_1139_call()
call_1142 = func_1139_call()
output = call_1141
output2 = call_1142
func_1143 = relay.Function([], output)
mod['func_1143'] = func_1143
mod = relay.transform.InferType()(mod)
output = func_1143()
func_1144 = relay.Function([], output)
mutated_mod['func_1144'] = func_1144
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1169 = relay.const([[[9,1,-6,-9,-6,-7,-4,-9,-7,-9],[10,5,-9,1,-3,10,-8,-8,-1,-9],[9,-3,-4,-3,9,3,1,-9,8,-4],[9,-5,-6,-1,9,4,-5,-2,-1,-2],[-10,10,-3,-4,1,4,-2,6,3,3],[-9,-1,-7,-5,-9,-9,-10,-2,1,3],[-6,1,5,3,9,1,6,2,6,-2],[-2,6,1,4,6,4,-4,9,6,-9],[-10,3,-4,-1,-10,-5,-3,6,-3,-6],[10,10,-6,-5,-2,5,7,-10,-3,-1],[-4,-7,9,3,-6,10,8,9,-10,-6],[1,6,1,10,9,-9,10,-1,1,-1]],[[-2,2,3,-4,6,-7,3,-6,9,6],[-7,-2,3,6,-9,1,-9,3,-2,9],[9,6,9,-6,-10,-10,-9,4,8,-4],[-8,-10,5,1,4,-9,5,-7,-1,-7],[-7,-8,7,-6,5,-4,4,9,9,9],[9,-8,-5,-1,10,-7,-4,1,8,-6],[7,5,-4,-3,6,8,-1,-2,-5,-3],[2,2,-7,-7,2,10,-5,-3,9,4],[7,1,-2,6,-7,-4,1,4,3,-4],[7,6,-9,1,-4,-5,8,-1,-10,-10],[6,-9,2,-4,5,9,2,-1,6,-10],[8,-3,3,9,-9,-2,4,3,-5,2]],[[4,3,1,-8,-8,7,-4,-2,-2,-2],[-1,9,6,-5,6,-4,-3,8,-10,8],[5,-4,6,5,9,1,2,9,-2,2],[4,-10,-10,8,5,8,3,-8,-7,9],[10,8,-9,-1,-3,-1,-8,3,-1,10],[1,5,-9,3,8,4,1,2,-10,3],[8,10,4,6,6,-1,-3,1,1,-9],[-5,7,-6,-7,3,-2,3,7,-7,3],[8,-10,-10,10,-4,-10,-2,4,5,-6],[1,-9,2,-10,-8,2,-6,-6,1,8],[7,-4,-3,8,-10,-6,4,3,-3,5],[-7,9,9,-10,3,6,3,8,-8,6]],[[5,-7,9,-5,5,4,-8,5,-8,6],[10,1,3,1,-8,-9,1,1,8,-2],[9,4,9,-3,-4,-8,2,-10,-9,-6],[8,-1,1,-8,-2,-1,6,-6,-7,-4],[9,-5,-9,6,6,6,-9,-4,1,-1],[-2,-3,8,-7,-8,5,-1,8,7,-10],[10,-6,7,1,-2,2,-3,-6,4,-7],[2,-2,4,5,-8,4,-2,-6,2,6],[8,-10,3,-5,9,1,-5,6,-5,-3],[-5,10,9,6,-5,-5,-10,-5,3,10],[-1,-5,6,-6,-10,5,-5,-5,-2,8],[-3,10,10,-6,5,-6,9,-5,-3,-7]],[[1,10,-8,2,6,-9,3,-2,-7,7],[-8,-10,-6,-3,5,2,5,-4,7,-5],[6,-1,5,3,4,4,2,-9,9,7],[-4,-2,1,2,-1,-10,-4,5,2,1],[-5,8,-9,8,-10,3,-4,-3,-8,2],[5,-6,2,-8,7,-2,4,-4,8,-10],[8,4,-6,-8,3,6,3,9,-5,-10],[4,-7,-4,9,4,10,-3,-4,1,-7],[-2,-6,-7,10,10,4,-2,2,1,-7],[3,7,-4,-8,2,3,8,-1,-2,7],[-1,-8,2,-10,-3,8,-6,5,5,-7],[7,-3,9,2,-4,-5,-7,-9,-3,2]],[[8,4,-6,-6,-2,-1,4,6,9,5],[6,-10,3,2,10,3,-7,-4,6,5],[6,7,-10,-1,2,2,-6,-10,4,4],[-7,2,4,6,-7,-7,7,-2,8,7],[9,-5,2,3,-9,-9,-4,2,-8,-9],[1,7,2,8,3,2,-5,-9,4,4],[-9,-10,4,2,-2,7,6,5,5,10],[7,2,-8,-8,4,-6,4,7,-9,2],[-9,7,6,5,-5,1,-8,-1,-5,9],[-10,-2,2,-4,8,4,-6,-5,5,4],[-9,-10,-10,-3,2,2,-8,8,-4,3],[-10,-9,8,-1,-6,-2,1,-1,-3,-6]],[[8,-8,-2,8,-3,-8,-8,1,3,-10],[10,5,2,-2,2,-1,-6,7,-7,4],[6,3,10,-1,-8,3,2,9,4,2],[-1,-8,-4,-7,-2,3,2,3,1,-5],[6,9,6,4,3,-7,9,-1,10,5],[8,9,3,-4,-7,-5,6,3,-4,-3],[-4,-9,-6,7,-10,-6,-10,10,9,8],[-2,-3,7,-2,4,5,-4,5,7,-5],[-6,-5,8,-2,9,6,-2,-10,4,9],[-5,-10,-1,10,8,-6,8,1,-9,4],[-2,7,-9,5,1,3,-10,-9,-7,10],[-4,-10,-10,-10,-5,-4,5,10,-2,-9]],[[-1,-1,7,-10,8,-2,6,7,-4,-4],[-1,3,-4,2,-10,-9,5,-1,-9,-7],[-1,-9,10,5,-3,10,-9,-10,7,-9],[4,9,-7,2,-1,2,7,-1,9,10],[6,6,4,-8,-9,-10,-4,-2,9,-8],[-10,-4,-4,-5,-2,-5,-4,6,6,-9],[-1,-5,9,-10,1,1,-10,10,2,7],[10,-4,10,10,-4,-8,-9,-3,-2,9],[1,-9,-4,7,4,-2,3,-9,-6,8],[10,-8,-2,-9,4,-2,-7,7,9,9],[-5,8,-7,-4,7,-4,1,8,-2,10],[7,2,10,-7,-3,-2,7,10,-8,6]],[[6,4,1,1,-3,9,10,3,-1,10],[-9,4,-2,-8,7,-8,2,-10,-6,-8],[9,-8,-1,10,-3,7,3,-6,4,-7],[-7,-3,9,-4,2,3,-1,2,-3,-5],[-3,8,4,10,9,-8,-2,-7,-4,-5],[5,10,10,2,-4,-2,1,-2,-6,-2],[10,1,-3,-3,1,7,-10,6,9,-5],[-4,10,9,-10,-4,1,-4,-6,-3,8],[-10,2,2,-2,-5,-5,-6,-4,-9,-9],[9,-7,-2,-2,3,-1,-4,3,-10,-8],[1,-5,8,-1,4,-8,-2,5,-9,1],[8,-8,-4,10,-5,-10,-10,5,-4,5]],[[-8,8,9,6,-2,-3,-8,5,-2,-7],[-3,-5,-3,3,9,-3,2,-9,-9,-2],[-9,-1,5,-8,-1,4,-3,9,1,1],[-9,-7,10,-3,-10,-9,-9,7,-8,-9],[-1,3,3,-9,-5,4,-7,-6,-8,7],[3,6,-8,-3,7,5,6,1,-1,6],[3,9,-1,-8,-3,7,-10,-5,-8,-5],[10,-5,10,-6,8,-5,1,10,9,3],[2,-8,-4,1,1,9,7,-8,9,6],[-7,8,-6,-2,-6,-9,-6,1,7,-2],[-9,10,4,-3,-3,2,-3,-7,-9,-6],[-3,-1,9,9,-3,6,3,-10,-3,9]],[[3,5,-10,-2,1,-1,-2,-3,4,1],[-4,-1,-3,3,-3,4,-2,9,9,-10],[-1,5,7,6,-4,1,4,-7,5,4],[10,4,-7,5,-6,8,-8,-3,-3,-8],[-8,6,-1,10,1,-3,-4,-5,10,6],[-5,-5,9,9,9,-10,-6,-10,7,2],[7,-1,4,1,5,2,-4,-2,7,5],[-9,-4,9,-2,3,6,-3,1,2,1],[-9,-7,2,-6,-3,6,3,-8,3,9],[-6,-7,2,6,10,-1,-2,4,8,-4],[10,-4,1,5,2,9,-9,-6,-4,6],[10,5,-4,8,10,4,6,-10,7,-9]],[[9,8,-6,-10,-7,-8,-2,2,3,-9],[-4,2,-10,-4,-10,-8,5,-9,-10,-3],[5,-5,4,6,-7,-2,-9,-10,-9,-6],[9,9,9,5,9,6,1,3,-1,7],[-4,-1,-3,2,5,-2,3,10,-3,1],[7,6,-3,5,7,-3,9,6,7,8],[5,10,-3,-9,-5,8,10,-10,-4,6],[-5,4,5,9,-7,5,7,1,-6,-8],[-3,-3,-2,-5,-7,8,1,9,-4,-9],[-5,7,2,4,10,-8,-10,-5,5,-7],[-10,6,8,7,-6,-5,3,-3,-7,2],[10,-10,3,3,5,10,-4,5,4,6]],[[-10,-10,-10,-7,-1,4,-9,2,-2,-9],[4,10,-8,1,-9,-1,-7,-2,-4,-4],[6,-6,4,8,-2,3,-4,5,-2,-3],[5,-9,-7,-9,-8,3,1,-2,7,3],[4,-7,-2,2,1,2,1,8,2,6],[10,-7,-1,8,-8,-7,-8,3,-7,2],[10,5,7,9,3,-1,-9,6,7,7],[-4,8,-1,1,-5,9,7,7,9,5],[-5,7,-7,3,-6,1,-7,1,1,-9],[3,4,-3,-7,-8,6,-1,5,-5,-5],[-9,10,-9,-7,1,9,-5,7,5,-10],[-8,-6,9,-8,2,-7,2,-10,-8,-3]],[[2,-4,-6,-2,-7,-2,9,6,1,-4],[9,-5,-9,-4,-1,-6,1,-1,5,6],[8,-8,7,-4,-10,-5,-2,-4,7,-7],[-6,-3,-5,4,8,1,-9,2,5,-8],[8,5,-4,-10,8,-9,-2,-3,-7,-8],[-8,-10,10,-7,-9,9,10,7,5,-7],[7,-9,-10,-6,1,1,-3,-8,-6,7],[2,3,3,6,-9,1,8,-3,-2,5],[-2,-3,-1,9,8,3,5,-1,-7,-6],[-1,2,-7,-10,-5,2,-3,-4,8,10],[-3,-5,2,-7,-5,7,10,-7,-4,7],[2,-7,-4,7,-8,7,3,-10,-8,-4]],[[-7,-8,10,-3,-10,4,-10,7,3,8],[-5,1,-5,-3,-7,5,-7,1,6,-2],[6,2,-6,-2,5,8,-2,-7,1,1],[8,2,-7,-5,-8,-3,2,10,4,-4],[-1,8,5,-4,9,4,9,5,8,-1],[6,3,-1,3,-7,4,-1,-3,10,-3],[-1,8,-3,-8,-10,9,6,1,5,1],[-3,1,-9,-2,-2,-10,2,-6,1,-7],[-6,-9,8,-10,-6,-8,7,-4,-4,7],[-1,-2,7,9,-4,8,-5,-2,9,-8],[4,3,-5,-8,-3,-8,4,-7,-10,6],[5,3,3,2,7,8,-8,-3,-9,-6]]], dtype = "int32")#candidate|1169|(15, 12, 10)|const|int32
var_1170 = relay.var("var_1170", dtype = "int32", shape = (15, 12, 10))#candidate|1170|(15, 12, 10)|var|int32
bop_1171 = relay.greater(const_1169.astype('bool'), relay.reshape(var_1170.astype('bool'), relay.shape_of(const_1169))) # shape=(15, 12, 10)
bop_1174 = relay.divide(const_1169.astype('float32'), relay.reshape(var_1170.astype('float32'), relay.shape_of(const_1169))) # shape=(15, 12, 10)
uop_1178 = relay.tan(var_1170.astype('float64')) # shape=(15, 12, 10)
bop_1192 = relay.greater_equal(uop_1178.astype('bool'), relay.reshape(bop_1174.astype('bool'), relay.shape_of(uop_1178))) # shape=(15, 12, 10)
uop_1195 = relay.asin(var_1170.astype('float64')) # shape=(15, 12, 10)
func_364_call = mod.get_global_var('func_364')
func_368_call = mutated_mod.get_global_var('func_368')
var_1201 = relay.var("var_1201", dtype = "float32", shape = (324,))#candidate|1201|(324,)|var|float32
var_1202 = relay.var("var_1202", dtype = "float32", shape = (504,))#candidate|1202|(504,)|var|float32
call_1200 = relay.TupleGetItem(func_364_call(relay.reshape(var_1201.astype('float32'), [6, 6, 9]), relay.reshape(var_1202.astype('float32'), [504, 1]), ), 4)
call_1203 = relay.TupleGetItem(func_368_call(relay.reshape(var_1201.astype('float32'), [6, 6, 9]), relay.reshape(var_1202.astype('float32'), [504, 1]), ), 4)
uop_1207 = relay.atanh(uop_1178.astype('float32')) # shape=(15, 12, 10)
output = relay.Tuple([bop_1171,bop_1192,uop_1195,call_1200,var_1201,var_1202,uop_1207,])
output2 = relay.Tuple([bop_1171,bop_1192,uop_1195,call_1203,var_1201,var_1202,uop_1207,])
func_1214 = relay.Function([var_1170,var_1201,var_1202,], output)
mod['func_1214'] = func_1214
mod = relay.transform.InferType()(mod)
mutated_mod['func_1214'] = func_1214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1214_call = mutated_mod.get_global_var('func_1214')
var_1216 = relay.var("var_1216", dtype = "int32", shape = (15, 12, 10))#candidate|1216|(15, 12, 10)|var|int32
var_1217 = relay.var("var_1217", dtype = "float32", shape = (324,))#candidate|1217|(324,)|var|float32
var_1218 = relay.var("var_1218", dtype = "float32", shape = (504,))#candidate|1218|(504,)|var|float32
call_1215 = func_1214_call(var_1216,var_1217,var_1218,)
output = call_1215
func_1219 = relay.Function([var_1216,var_1217,var_1218,], output)
mutated_mod['func_1219'] = func_1219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1143_call = mod.get_global_var('func_1143')
func_1144_call = mutated_mod.get_global_var('func_1144')
call_1262 = func_1143_call()
call_1263 = func_1143_call()
uop_1269 = relay.cos(call_1262.astype('float32')) # shape=(13, 5, 1)
uop_1271 = relay.cos(call_1263.astype('float32')) # shape=(13, 5, 1)
uop_1272 = relay.rsqrt(call_1262.astype('float32')) # shape=(13, 5, 1)
uop_1274 = relay.rsqrt(call_1263.astype('float32')) # shape=(13, 5, 1)
bop_1277 = relay.right_shift(call_1262.astype('uint32'), relay.reshape(uop_1272.astype('uint32'), relay.shape_of(call_1262))) # shape=(13, 5, 1)
bop_1280 = relay.right_shift(call_1263.astype('uint32'), relay.reshape(uop_1274.astype('uint32'), relay.shape_of(call_1263))) # shape=(13, 5, 1)
bop_1281 = relay.logical_xor(uop_1272.astype('uint16'), relay.reshape(uop_1269.astype('uint16'), relay.shape_of(uop_1272))) # shape=(13, 5, 1)
bop_1284 = relay.logical_xor(uop_1274.astype('uint16'), relay.reshape(uop_1271.astype('uint16'), relay.shape_of(uop_1274))) # shape=(13, 5, 1)
bop_1289 = relay.greater(call_1262.astype('bool'), relay.reshape(uop_1269.astype('bool'), relay.shape_of(call_1262))) # shape=(13, 5, 1)
bop_1292 = relay.greater(call_1263.astype('bool'), relay.reshape(uop_1271.astype('bool'), relay.shape_of(call_1263))) # shape=(13, 5, 1)
func_1143_call = mod.get_global_var('func_1143')
func_1144_call = mutated_mod.get_global_var('func_1144')
call_1294 = func_1143_call()
call_1295 = func_1143_call()
bop_1302 = relay.bitwise_and(bop_1289.astype('uint8'), relay.reshape(bop_1277.astype('uint8'), relay.shape_of(bop_1289))) # shape=(13, 5, 1)
bop_1305 = relay.bitwise_and(bop_1292.astype('uint8'), relay.reshape(bop_1280.astype('uint8'), relay.shape_of(bop_1292))) # shape=(13, 5, 1)
uop_1313 = relay.acosh(call_1294.astype('float32')) # shape=(13, 5, 1)
uop_1315 = relay.acosh(call_1295.astype('float32')) # shape=(13, 5, 1)
bop_1316 = relay.equal(uop_1313.astype('bool'), relay.reshape(bop_1277.astype('bool'), relay.shape_of(uop_1313))) # shape=(13, 5, 1)
bop_1319 = relay.equal(uop_1315.astype('bool'), relay.reshape(bop_1280.astype('bool'), relay.shape_of(uop_1315))) # shape=(13, 5, 1)
output = relay.Tuple([bop_1281,bop_1302,bop_1316,])
output2 = relay.Tuple([bop_1284,bop_1305,bop_1319,])
func_1323 = relay.Function([], output)
mod['func_1323'] = func_1323
mod = relay.transform.InferType()(mod)
mutated_mod['func_1323'] = func_1323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1323_call = mutated_mod.get_global_var('func_1323')
call_1324 = func_1323_call()
output = call_1324
func_1325 = relay.Function([], output)
mutated_mod['func_1325'] = func_1325
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1335 = relay.var("var_1335", dtype = "float32", shape = (16, 7, 7))#candidate|1335|(16, 7, 7)|var|float32
uop_1336 = relay.sinh(var_1335.astype('float32')) # shape=(16, 7, 7)
bop_1345 = relay.left_shift(uop_1336.astype('int8'), relay.reshape(var_1335.astype('int8'), relay.shape_of(uop_1336))) # shape=(16, 7, 7)
func_1323_call = mod.get_global_var('func_1323')
func_1325_call = mutated_mod.get_global_var('func_1325')
call_1363 = relay.TupleGetItem(func_1323_call(), 1)
call_1364 = relay.TupleGetItem(func_1325_call(), 1)
uop_1365 = relay.log(var_1335.astype('float64')) # shape=(16, 7, 7)
const_1373 = relay.const([[[5,-10,-9,5,-6],[-10,8,3,1,5],[-8,-6,-3,-10,-2],[-1,-4,-7,4,5],[-7,-10,-8,-2,-7]],[[-2,-1,9,-3,-5],[9,-3,-6,3,6],[-10,6,7,-5,4],[-7,6,-5,2,-1],[3,2,2,-10,-10]],[[5,-9,-1,7,-7],[-7,-7,2,5,2],[-8,7,-2,-8,4],[-9,7,9,6,4],[-9,8,4,-10,4]],[[7,6,2,1,-4],[-9,3,3,-3,-10],[-4,8,6,2,10],[-7,-7,-1,5,-10],[-8,-2,-4,4,3]],[[4,4,-9,-3,8],[8,2,-2,-6,-8],[6,7,6,-2,-1],[-6,-4,7,5,-6],[-7,10,-2,4,-9]],[[-6,10,-10,7,9],[-9,-2,-9,6,-1],[7,-7,-9,9,-6],[-8,1,8,-4,-7],[2,10,-9,-5,3]],[[9,5,-8,6,-8],[6,-9,-3,10,1],[-4,3,6,-5,1],[8,7,-10,8,2],[2,-3,5,-5,5]],[[4,10,-5,3,9],[7,6,1,-9,-1],[4,-1,4,2,2],[-7,9,6,-6,-2],[-1,-2,-3,2,-1]],[[-4,-8,-3,10,-4],[-5,1,-10,7,-3],[1,-8,-10,6,-4],[7,-4,-5,-7,-2],[-9,6,10,4,4]],[[-6,3,7,-6,7],[2,2,-9,4,-3],[-1,-5,2,-2,5],[-8,-2,9,-4,4],[9,-7,3,7,4]],[[-8,-2,-1,-10,-5],[-1,-10,-1,2,-5],[9,4,6,-2,7],[-3,-10,-7,3,5],[6,8,1,-6,7]],[[3,9,1,-7,8],[-10,8,-8,-2,6],[-9,-7,10,-8,-5],[10,-2,5,4,-8],[-5,-3,-10,-10,4]],[[-4,-8,-9,1,5],[-2,-3,-5,8,8],[2,-6,-6,8,3],[-2,2,-7,8,-8],[-5,-1,-5,-7,-6]]], dtype = "uint8")#candidate|1373|(13, 5, 5)|const|uint8
bop_1374 = relay.bitwise_and(call_1363.astype('int8'), const_1373.astype('int8')) # shape=(13, 5, 5)
bop_1377 = relay.bitwise_and(call_1364.astype('int8'), const_1373.astype('int8')) # shape=(13, 5, 5)
output = relay.Tuple([bop_1345,uop_1365,bop_1374,])
output2 = relay.Tuple([bop_1345,uop_1365,bop_1377,])
func_1387 = relay.Function([var_1335,], output)
mod['func_1387'] = func_1387
mod = relay.transform.InferType()(mod)
mutated_mod['func_1387'] = func_1387
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1388 = relay.var("var_1388", dtype = "float32", shape = (16, 7, 7))#candidate|1388|(16, 7, 7)|var|float32
func_1387_call = mutated_mod.get_global_var('func_1387')
call_1389 = func_1387_call(var_1388)
output = call_1389
func_1390 = relay.Function([var_1388], output)
mutated_mod['func_1390'] = func_1390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1323_call = mod.get_global_var('func_1323')
func_1325_call = mutated_mod.get_global_var('func_1325')
call_1394 = relay.TupleGetItem(func_1323_call(), 2)
call_1395 = relay.TupleGetItem(func_1325_call(), 2)
func_364_call = mod.get_global_var('func_364')
func_368_call = mutated_mod.get_global_var('func_368')
const_1408 = relay.const([[-9.021346],[8.677249],[-7.070222],[-7.377593],[-6.420487],[-1.803015],[4.256133],[-4.227789],[-2.165502],[0.814251],[-8.217292],[9.738857],[-9.748716],[5.194715],[4.161819],[1.143319],[6.330509],[2.673082],[-4.976741],[9.641967],[-0.806791],[3.748145],[7.730112],[4.178335],[-3.949848],[-0.418553],[3.127145],[1.210339],[4.205356],[-8.437619],[2.419707],[-3.587530],[9.470150],[5.848207],[-7.610495],[-8.769529],[-8.552861],[-8.868811],[5.627467],[5.983846],[-3.336891],[-5.073243],[6.567141],[-2.400047],[-5.116581],[-4.557438],[-0.284356],[9.296350],[-3.166647],[3.138831],[3.410118],[0.227659],[1.118540],[6.458399],[1.652283],[-5.524031],[8.829794],[8.593011],[2.557488],[1.231168],[-6.297902],[1.519072],[-7.253006],[-9.176623],[1.570138],[9.200156],[9.242905],[8.113105],[9.517711],[-4.197990],[9.626243],[-1.072909],[9.496697],[-5.042773],[2.049090],[2.776169],[4.698063],[-8.708058],[4.863798],[-2.209539],[3.647757],[1.275324],[-6.786990],[5.144459],[7.726149],[-1.667401],[8.175023],[1.970941],[-6.670111],[9.348075],[5.758270],[3.350590],[0.653813],[7.245278],[4.616927],[-7.561429],[7.612769],[6.103117],[-0.158943],[3.332224],[-1.386540],[-0.301888],[5.113484],[7.111164],[1.268171],[3.445231],[5.456139],[6.401886],[2.265476],[6.765708],[-6.522146],[8.577080],[3.159092],[3.275087],[4.007492],[7.876156],[-0.932419],[1.740095],[-3.236652],[1.588491],[4.250297],[-7.845532],[-2.549957],[-4.293060],[-7.019169],[-5.626848],[0.348245],[8.080089],[-2.858943],[-0.386884],[5.136734],[-0.571556],[2.735877],[2.366671],[-5.302824],[-0.460657],[-0.557610],[-2.923485],[-1.344701],[-8.133221],[-8.898991],[-6.064800],[-4.418276],[-1.142243],[-6.500826],[-6.473074],[-9.101987],[-1.827188],[1.824495],[4.476903],[-4.489927],[4.183024],[9.486803],[1.865454],[-2.610988],[-6.309900],[-6.066228],[-8.459663],[-3.324861],[-5.121034],[9.260017],[3.408010],[1.781223],[-6.351906],[8.904118],[-9.207628],[1.896274],[-0.741595],[7.697981],[-8.131602],[4.332332],[-6.557878],[4.300711],[-4.039933],[8.327503],[5.450207],[-7.748208],[-2.682266],[-0.027511],[-1.815714],[2.544028],[4.105497],[-7.846467],[8.916841],[-0.812934],[-9.570145],[-6.517181],[1.247920],[4.767332],[-4.879429],[-9.342288],[-7.420616],[-6.806815],[-6.015177],[3.855215],[-1.025285],[7.958439],[9.056954],[-0.974049],[8.136149],[-3.714341],[-2.348947],[-9.241592],[4.795201],[-4.014532],[-7.934317],[5.967298],[7.200712],[-8.697862],[-1.390979],[-0.800740],[-1.222491],[-0.118602],[1.855496],[-4.092289],[2.197232],[-6.660448],[6.435377],[-4.115850],[5.050220],[-0.693425],[6.741068],[-7.083767],[8.748839],[5.744730],[-6.164647],[7.939726],[0.511956],[-7.782441],[-5.852177],[-7.381332],[7.197211],[7.091156],[9.840792],[4.782509],[-8.976411],[5.218836],[1.567587],[-1.588212],[-9.784963],[-9.314123],[5.155869],[5.867506],[-1.832257],[-2.464753],[-3.613345],[-5.620855],[6.484570],[-8.902646],[8.951855],[8.975388],[-0.629802],[-4.731956],[-3.442632],[-8.353533],[-9.240923],[1.018413],[-1.247414],[-3.640072],[-7.825491],[5.140140],[0.756483],[6.933907],[-1.617493],[-5.493574],[7.933139],[4.388580],[-7.704342],[-9.067258],[9.874814],[6.451636],[9.700257],[7.533259],[3.638333],[-1.762513],[-0.098019],[-4.563017],[-3.580385],[6.104636],[8.488219],[-8.070711],[7.074585],[-0.780231],[9.087110],[0.824772],[-2.156441],[-0.853378],[9.439417],[7.006971],[-6.869583],[4.043746],[-1.718007],[-4.295027],[2.603427],[8.445062],[3.429185],[6.410808],[0.692046],[-2.478060],[-9.406340],[8.846574],[-5.996668],[1.190971],[-9.472702],[-2.995839],[-8.858667],[9.119564],[7.950598],[5.129352],[7.072088],[-2.520057],[7.487670],[-6.663057],[6.742429],[1.808866],[-2.832195],[-9.306733],[0.676959],[-0.455467],[1.200289],[-8.634028],[-9.030662],[-4.564226],[2.080108]], dtype = "float32")#candidate|1408|(324, 1)|const|float32
var_1409 = relay.var("var_1409", dtype = "float32", shape = (252, 2))#candidate|1409|(252, 2)|var|float32
call_1407 = relay.TupleGetItem(func_364_call(relay.reshape(const_1408.astype('float32'), [6, 6, 9]), relay.reshape(var_1409.astype('float32'), [504, 1]), ), 4)
call_1410 = relay.TupleGetItem(func_368_call(relay.reshape(const_1408.astype('float32'), [6, 6, 9]), relay.reshape(var_1409.astype('float32'), [504, 1]), ), 4)
output = relay.Tuple([call_1394,call_1407,const_1408,var_1409,])
output2 = relay.Tuple([call_1395,call_1410,const_1408,var_1409,])
func_1416 = relay.Function([var_1409,], output)
mod['func_1416'] = func_1416
mod = relay.transform.InferType()(mod)
var_1417 = relay.var("var_1417", dtype = "float32", shape = (252, 2))#candidate|1417|(252, 2)|var|float32
output = func_1416(var_1417)
func_1418 = relay.Function([var_1417], output)
mutated_mod['func_1418'] = func_1418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1323_call = mod.get_global_var('func_1323')
func_1325_call = mutated_mod.get_global_var('func_1325')
call_1445 = relay.TupleGetItem(func_1323_call(), 0)
call_1446 = relay.TupleGetItem(func_1325_call(), 0)
var_1449 = relay.var("var_1449", dtype = "uint16", shape = (13, 5, 7))#candidate|1449|(13, 5, 7)|var|uint16
bop_1450 = relay.right_shift(call_1445.astype('int8'), var_1449.astype('int8')) # shape=(13, 5, 7)
bop_1453 = relay.right_shift(call_1446.astype('int8'), var_1449.astype('int8')) # shape=(13, 5, 7)
func_1323_call = mod.get_global_var('func_1323')
func_1325_call = mutated_mod.get_global_var('func_1325')
call_1464 = relay.TupleGetItem(func_1323_call(), 2)
call_1465 = relay.TupleGetItem(func_1325_call(), 2)
output = relay.Tuple([bop_1450,call_1464,])
output2 = relay.Tuple([bop_1453,call_1465,])
func_1474 = relay.Function([var_1449,], output)
mod['func_1474'] = func_1474
mod = relay.transform.InferType()(mod)
mutated_mod['func_1474'] = func_1474
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1475 = relay.var("var_1475", dtype = "uint16", shape = (13, 5, 7))#candidate|1475|(13, 5, 7)|var|uint16
func_1474_call = mutated_mod.get_global_var('func_1474')
call_1476 = func_1474_call(var_1475)
output = call_1476
func_1477 = relay.Function([var_1475], output)
mutated_mod['func_1477'] = func_1477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1323_call = mod.get_global_var('func_1323')
func_1325_call = mutated_mod.get_global_var('func_1325')
call_1524 = relay.TupleGetItem(func_1323_call(), 2)
call_1525 = relay.TupleGetItem(func_1325_call(), 2)
output = call_1524
output2 = call_1525
func_1526 = relay.Function([], output)
mod['func_1526'] = func_1526
mod = relay.transform.InferType()(mod)
mutated_mod['func_1526'] = func_1526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1526_call = mutated_mod.get_global_var('func_1526')
call_1527 = func_1526_call()
output = call_1527
func_1528 = relay.Function([], output)
mutated_mod['func_1528'] = func_1528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1139_call = mod.get_global_var('func_1139')
func_1140_call = mutated_mod.get_global_var('func_1140')
call_1532 = func_1139_call()
call_1533 = func_1139_call()
output = call_1532
output2 = call_1533
func_1534 = relay.Function([], output)
mod['func_1534'] = func_1534
mod = relay.transform.InferType()(mod)
output = func_1534()
func_1535 = relay.Function([], output)
mutated_mod['func_1535'] = func_1535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1526_call = mod.get_global_var('func_1526')
func_1528_call = mutated_mod.get_global_var('func_1528')
call_1574 = func_1526_call()
call_1575 = func_1526_call()
func_1526_call = mod.get_global_var('func_1526')
func_1528_call = mutated_mod.get_global_var('func_1528')
call_1576 = func_1526_call()
call_1577 = func_1526_call()
output = relay.Tuple([call_1574,call_1576,])
output2 = relay.Tuple([call_1575,call_1577,])
func_1584 = relay.Function([], output)
mod['func_1584'] = func_1584
mod = relay.transform.InferType()(mod)
mutated_mod['func_1584'] = func_1584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1584_call = mutated_mod.get_global_var('func_1584')
call_1585 = func_1584_call()
output = call_1585
func_1586 = relay.Function([], output)
mutated_mod['func_1586'] = func_1586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1584_call = mod.get_global_var('func_1584')
func_1586_call = mutated_mod.get_global_var('func_1586')
call_1607 = relay.TupleGetItem(func_1584_call(), 0)
call_1608 = relay.TupleGetItem(func_1586_call(), 0)
func_1526_call = mod.get_global_var('func_1526')
func_1528_call = mutated_mod.get_global_var('func_1528')
call_1617 = func_1526_call()
call_1618 = func_1526_call()
output = relay.Tuple([call_1607,call_1617,])
output2 = relay.Tuple([call_1608,call_1618,])
func_1626 = relay.Function([], output)
mod['func_1626'] = func_1626
mod = relay.transform.InferType()(mod)
mutated_mod['func_1626'] = func_1626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mutated_mod.get_global_var('func_1626')
call_1627 = func_1626_call()
output = call_1627
func_1628 = relay.Function([], output)
mutated_mod['func_1628'] = func_1628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1584_call = mod.get_global_var('func_1584')
func_1586_call = mutated_mod.get_global_var('func_1586')
call_1674 = relay.TupleGetItem(func_1584_call(), 1)
call_1675 = relay.TupleGetItem(func_1586_call(), 1)
func_1143_call = mod.get_global_var('func_1143')
func_1144_call = mutated_mod.get_global_var('func_1144')
call_1685 = func_1143_call()
call_1686 = func_1143_call()
output = relay.Tuple([call_1674,call_1685,])
output2 = relay.Tuple([call_1675,call_1686,])
func_1697 = relay.Function([], output)
mod['func_1697'] = func_1697
mod = relay.transform.InferType()(mod)
mutated_mod['func_1697'] = func_1697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1697_call = mutated_mod.get_global_var('func_1697')
call_1698 = func_1697_call()
output = call_1698
func_1699 = relay.Function([], output)
mutated_mod['func_1699'] = func_1699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1139_call = mod.get_global_var('func_1139')
func_1140_call = mutated_mod.get_global_var('func_1140')
call_1722 = func_1139_call()
call_1723 = func_1139_call()
output = call_1722
output2 = call_1723
func_1726 = relay.Function([], output)
mod['func_1726'] = func_1726
mod = relay.transform.InferType()(mod)
mutated_mod['func_1726'] = func_1726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1726_call = mutated_mod.get_global_var('func_1726')
call_1727 = func_1726_call()
output = call_1727
func_1728 = relay.Function([], output)
mutated_mod['func_1728'] = func_1728
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1729 = relay.const([[[0.453732,-3.836702,9.834831,9.329760],[-6.794596,5.050476,-7.042868,1.937339],[3.718071,-5.562549,-7.330274,0.997813],[-3.513480,-0.875714,-5.604078,9.144645],[5.042081,0.683030,-4.658816,-0.469347],[5.741269,9.959314,-3.868749,4.858046],[6.219988,6.219116,2.850975,-9.422269],[-5.396334,-1.581605,4.737808,5.810866],[5.054690,2.325631,9.600659,-0.190750],[0.055948,2.702382,-4.210115,-1.219249],[-7.277072,-9.117263,-5.232386,4.673183],[7.507023,-1.888779,3.495960,6.340326],[-1.024671,8.396476,-0.220844,-1.244030],[5.853558,-2.153938,5.197285,-3.276960]],[[-9.946151,7.507261,1.077483,-7.076640],[-0.935691,8.076666,-8.327275,-5.151862],[-0.971088,-9.997008,2.533379,-4.333406],[-6.615566,5.809312,7.795775,1.747962],[-2.383216,1.306030,1.485205,-7.480241],[-4.962600,-2.645340,-9.998527,0.992950],[-1.352938,-7.645175,-5.922862,-0.996195],[3.001884,-1.914512,5.113222,-2.124427],[-3.378073,-1.637574,5.973452,4.200263],[-6.692938,-2.121098,-7.814291,0.702112],[-2.638492,2.152824,2.640163,2.219095],[8.373874,2.634322,-7.750581,-3.662872],[3.370639,-9.861235,0.899353,-1.206479],[2.854272,-7.380569,-7.953596,-4.205912]],[[1.904331,-8.665223,-0.727024,2.840736],[5.803853,-9.867564,3.297602,3.514523],[2.918256,5.745159,2.626128,8.573410],[6.636360,5.878191,2.038662,-4.816179],[3.063647,7.666469,-0.499652,6.830955],[-6.099045,2.706091,-3.361168,-7.456727],[9.468786,-9.202328,-5.303538,3.307611],[2.393648,8.703219,9.328832,-0.981036],[-8.528821,-5.630516,-1.662962,4.185731],[3.746651,-5.820987,7.186442,-3.110727],[6.780504,5.607472,-7.427052,9.502302],[8.901441,-4.856150,-6.110388,0.341769],[9.589504,9.248094,8.608705,-9.017321],[-5.110290,-5.447313,8.134842,-6.002390]],[[7.124612,-6.248997,-5.087789,-7.730779],[5.450050,-8.615748,2.559816,-7.600444],[5.706426,-0.530160,-5.984059,-9.029002],[-5.800066,-1.050389,6.804654,-3.025090],[3.554086,-6.987528,-1.238583,2.496968],[5.818003,2.263404,-5.471743,9.637828],[1.637061,-5.629330,-4.727029,-0.186192],[-3.120079,7.446940,0.278905,-5.699854],[-7.483596,6.032807,0.839472,-5.007122],[-2.237070,8.025350,-1.267474,5.488823],[3.651907,6.871151,-5.671545,-3.018222],[5.361767,-5.635496,6.580939,2.000210],[1.963659,-7.170466,6.328823,7.606796],[-7.908356,-1.922625,-9.451077,-9.350769]],[[-4.095316,1.197377,-9.205005,3.816608],[4.834557,-6.849844,-3.878860,7.577289],[-7.454964,7.808240,-8.561074,-7.424670],[1.593336,9.846650,-2.641294,6.558906],[-2.537949,6.914018,-1.345115,-4.631433],[-3.108946,-9.565402,-8.515999,-2.689886],[2.171153,-2.932304,-1.875500,-7.220954],[-2.261630,9.388386,-4.567326,7.451937],[-5.391439,3.627144,4.317412,-2.872864],[-4.274736,-8.983357,-7.112214,-1.719481],[-6.096300,-2.440344,8.970197,4.966144],[-6.594088,-0.751234,8.399778,1.657581],[-5.187991,8.102849,-9.797112,3.869423],[-8.068186,4.384927,-6.981048,0.025748]],[[0.746330,6.859973,-7.987153,-4.591407],[-6.827517,2.834390,-4.989021,4.493620],[6.943520,-1.875691,-1.415421,6.558850],[2.550042,-2.262582,-1.343491,1.536060],[3.095716,-7.657468,7.599501,-9.985083],[0.664654,6.595013,6.807659,-8.156479],[6.668093,-4.298891,-3.771531,7.508078],[9.802175,1.915789,2.250749,0.593101],[3.889906,-9.970529,-2.156519,-3.168212],[5.296703,3.372629,-9.783140,4.175066],[-5.667214,-7.970251,5.134869,-0.180142],[0.450228,-8.040344,-0.613982,6.624585],[7.472915,-5.871972,-2.755234,9.745518],[8.201469,-7.761340,-7.854422,9.203343]],[[-5.134915,7.575999,0.261152,-8.687250],[8.950153,3.971426,-1.258409,-2.708463],[8.355147,4.140850,7.830011,3.431147],[9.170431,0.462055,2.927614,-7.821137],[-4.477702,-3.698325,1.213624,-1.969988],[1.748596,6.617289,-8.696877,-6.641849],[-2.946178,8.982300,-4.233870,-5.695430],[7.027993,-3.996585,0.302507,-7.713519],[-5.119710,3.220680,1.872645,4.795839],[-5.096430,-9.833288,-4.746628,-2.698184],[-6.153768,-4.723107,-9.386159,-3.546803],[-8.841383,-9.888192,5.693747,4.739334],[0.066885,1.938258,-4.949642,-1.427599],[0.309051,0.817003,3.917215,4.071127]],[[-0.239005,-8.635250,-1.494345,-6.171830],[2.177141,-7.670777,1.200591,1.404042],[9.907557,2.785238,7.125590,-1.250268],[-7.237290,-7.624132,5.834550,7.216145],[1.807348,-6.966928,-8.626797,1.346529],[9.060055,-2.384731,9.204223,-9.552006],[-4.259366,5.031079,1.027853,5.444184],[5.344698,0.559151,2.907664,-2.285411],[-5.631299,-2.184168,4.822587,4.988398],[-5.992576,9.563168,3.017875,-1.984863],[8.022157,0.485429,4.617620,-7.681103],[-3.338253,5.904611,-0.683387,-6.226518],[-3.240746,8.544458,-7.567300,-8.795180],[-1.354325,8.654930,2.304369,-1.863231]]], dtype = "float32")#candidate|1729|(8, 14, 4)|const|float32
const_1730 = relay.const([[[7.871842,-1.729950,4.578437,1.060560],[-1.074363,2.768575,1.703381,9.472900],[7.576300,3.646402,-4.567830,-0.590307],[3.118179,5.622928,-9.973536,2.876601],[5.417936,-9.177105,-0.505062,4.564953],[9.668611,6.921415,-7.698791,-5.661884],[7.646802,-5.693415,3.330110,4.250135],[-3.581076,-4.913261,7.015672,5.519727],[0.893745,4.263393,0.592724,-1.216643],[6.505597,3.822364,6.018251,-1.672158],[9.300545,-9.611540,2.803080,7.147948],[9.296165,-6.380961,5.095299,2.701251],[8.233640,-8.637635,-9.608488,-4.010023],[8.311231,6.473040,5.477219,0.546737]],[[-3.358029,1.445409,8.593866,-2.202622],[8.660320,4.061464,-1.079461,4.161462],[4.743132,-8.433438,6.584481,-6.149127],[1.092169,0.003614,7.229650,2.975631],[-4.513413,0.507554,-6.380717,-8.401519],[-0.593743,-0.374338,4.916869,9.113844],[-7.479229,-2.069863,-2.088191,-5.665641],[-1.709782,-5.783642,-1.250876,-5.983642],[-7.515802,-8.737510,8.675301,-7.355559],[-6.222740,-0.052980,4.193001,-3.059325],[4.556829,2.652563,5.440914,8.409454],[5.494395,9.242594,-7.534490,-8.505311],[1.122494,4.852353,-5.176517,4.101360],[-1.575177,-9.119488,8.083366,6.544085]],[[1.644540,-5.743797,-4.100744,-7.674549],[4.149487,3.459444,3.055158,-1.770788],[-5.728124,4.706673,-9.316691,7.688163],[-1.767660,-7.886391,5.610316,5.719691],[-4.382589,6.876058,2.214908,-7.674385],[-2.566160,-9.194966,5.256414,-7.762484],[-8.980453,-5.486341,-6.850319,-6.970786],[8.877645,-2.041441,-4.993255,2.147557],[4.789559,-8.383851,9.787293,5.747865],[-6.457784,0.919757,5.969454,-4.706436],[-5.981260,-3.216593,-2.418658,3.300233],[4.132062,-4.847703,0.898408,-0.916900],[8.929298,-4.294910,1.029100,-6.119715],[3.721113,1.177401,1.316049,3.593754]],[[2.314489,7.024219,-9.995031,9.821026],[-7.980747,8.477512,-8.489758,3.928489],[-6.135301,-1.373358,3.811275,-9.506415],[-3.822998,3.695236,1.421906,9.722341],[-7.666352,-9.203422,-8.383328,-1.370464],[-7.214972,-1.865913,8.934037,-4.013057],[4.243442,3.224322,6.139667,-5.642864],[-0.363536,4.840064,-8.933657,-5.992470],[6.547261,3.149889,-5.559977,5.209161],[3.100759,8.002894,2.972783,6.253164],[-4.626592,2.773564,-4.537044,-0.363553],[-4.678881,-1.416085,-0.483025,0.251992],[1.916147,4.373284,7.060915,-0.528459],[3.664998,3.380756,3.316609,5.895668]],[[-1.708642,4.983704,-6.375695,8.696457],[-1.068900,4.872897,-6.014727,-2.096254],[5.731233,9.571478,-8.207597,-7.421198],[-4.771691,-5.638111,-6.708545,8.688564],[5.599175,5.794087,-8.676719,-0.421425],[-0.945868,-5.853493,-0.535742,-9.918350],[-2.428963,-5.099035,-8.466426,-1.779558],[3.906304,-7.607858,9.299259,-3.638256],[7.597159,-6.295199,-7.569506,-7.699806],[9.223995,6.669653,8.961223,5.091132],[8.076560,3.457117,-1.606747,-7.137327],[-4.527690,1.989645,0.803958,-5.988651],[0.979489,-4.545445,8.811590,-3.857215],[2.805018,6.753329,-5.894691,7.803658]],[[-7.819995,8.697130,-5.904306,-5.923892],[-3.576618,-3.100116,1.194967,-5.359567],[-2.330506,-8.430618,5.323040,-6.219817],[-9.012582,-4.852505,-8.029289,5.837854],[-7.037012,-9.371072,-6.492042,5.042447],[-6.399346,-7.838760,6.811422,5.370611],[-8.944914,2.205247,-6.592429,-6.173924],[7.835664,1.314664,-9.433148,4.741173],[8.438063,-5.033827,-3.334481,7.865772],[5.625200,8.718115,-4.537127,-3.112621],[-5.545063,9.732078,4.477927,-4.693455],[-6.884001,0.658109,-1.061584,3.561551],[-1.130007,0.764558,1.634048,6.378080],[0.736560,4.129386,9.801522,-7.530459]],[[-8.206373,1.411637,7.671243,-8.125633],[7.452443,3.268485,-8.732559,-9.434838],[-2.224868,-1.343065,-7.782689,-5.907587],[-3.932547,9.479668,-1.019009,4.327600],[9.046854,-2.172439,-0.730559,-1.667261],[-7.075337,0.906342,-8.149422,7.063206],[-7.268074,6.026108,-1.497537,-9.541063],[6.438119,-2.349836,2.311991,-7.546447],[-5.356210,7.159846,-7.110142,4.428901],[4.698774,6.941150,-4.490886,-0.014401],[-6.285327,8.055648,-6.126356,0.113132],[5.981951,6.517241,-1.706004,-1.263965],[-9.598106,8.464688,0.246814,-7.830628],[-4.128187,7.240380,-6.247661,1.848442]],[[5.539629,6.599775,-8.080737,8.183247],[8.779435,-3.759557,4.948721,-2.056239],[-2.832569,-7.684258,-6.974489,8.814574],[-6.763647,8.827522,-9.441661,-0.778281],[6.750926,3.893466,-2.091241,-4.279265],[2.624647,4.488424,1.164227,4.836275],[-6.746391,5.924448,-8.892110,4.569788],[3.855480,1.279428,4.055740,9.954497],[-3.190902,-9.084715,-8.693011,-3.564156],[4.596024,-0.190315,4.496149,-2.878972],[7.744034,1.045106,-2.059088,-2.879122],[9.460856,-0.001204,8.694921,-6.849054],[-9.765913,5.020858,6.754654,6.854017],[7.309113,4.246833,6.902538,-4.659693]]], dtype = "float32")#candidate|1730|(8, 14, 4)|const|float32
bop_1731 = relay.not_equal(const_1729.astype('bool'), relay.reshape(const_1730.astype('bool'), relay.shape_of(const_1729))) # shape=(8, 14, 4)
func_1697_call = mod.get_global_var('func_1697')
func_1699_call = mutated_mod.get_global_var('func_1699')
call_1737 = relay.TupleGetItem(func_1697_call(), 0)
call_1738 = relay.TupleGetItem(func_1699_call(), 0)
func_572_call = mod.get_global_var('func_572')
func_574_call = mutated_mod.get_global_var('func_574')
const_1751 = relay.const([[-7,-5],[-3,-5],[4,6],[3,-1],[3,3],[-2,-4],[-4,9],[-9,2],[-7,-3],[8,1],[-5,1],[10,-6],[-4,1],[-9,-5],[8,-5],[-10,-2],[-6,7],[2,-5],[6,-4],[-10,9],[1,-9],[7,-3],[7,-3],[-9,-2],[-10,6],[-7,-1],[-8,1],[-5,-1],[-10,-7],[4,1],[2,-8],[9,-5],[-1,2],[-3,-2],[8,-9],[4,1],[10,-9],[2,8],[4,-4],[-8,-3],[-9,6],[8,2],[-1,-10],[1,-9],[1,-5],[-9,-6],[1,-7],[10,-7],[-7,-10],[-2,2],[3,8],[-3,-5],[4,9],[5,8],[7,4],[-7,4],[-5,-8],[7,10],[-2,-4],[-7,3],[-8,-7],[-6,-10],[4,8],[-6,-7],[9,8],[7,-7],[-8,8],[-1,7],[1,-4],[-2,-10],[8,-8],[-2,-7],[-10,8],[5,-8],[8,10],[-5,1],[-2,-3],[-9,1],[-2,-2],[-3,7],[6,-3],[-3,-5],[7,2],[-4,-7],[8,-1],[4,-4],[2,-1],[5,-10],[-3,3],[6,-9],[-3,8],[-4,4],[-7,-8],[-8,7],[8,-4],[-6,-5],[9,-7],[6,-1],[-6,4],[6,-9],[4,3],[-10,1],[8,3],[2,-5],[6,10],[-7,-8],[-2,3],[2,-2],[-1,-10],[7,9],[7,-1],[7,-3],[-7,2],[-4,9],[7,-5],[-3,-7],[3,-5],[7,6],[-5,-6],[-3,5],[2,4],[-2,-3],[4,-7],[-6,-3],[-10,-7],[-2,4],[10,-10],[-6,2],[6,5],[8,6],[7,-1],[8,10],[-10,-6],[10,10],[7,-2],[6,-3],[10,8],[-8,-2],[-8,6],[4,-3],[-2,7],[-8,-3],[-6,9],[1,-4],[-2,10],[9,-4],[2,-4],[-3,3],[5,-7],[-6,9],[5,5],[2,6],[-2,-5],[-8,-9],[-9,1],[9,9],[-3,-8],[-7,2],[-6,2],[6,5],[6,-2],[-9,9],[3,1],[-3,7],[-9,4],[5,1],[-4,-9],[-1,-10],[-4,-1],[3,-2],[9,10],[6,-5],[-4,10],[-6,-1],[4,-1],[-4,-9],[-5,-3],[10,5],[-1,-1],[-2,-3],[-9,8],[-5,-6],[-8,-1],[-9,-1],[1,-5],[9,4],[4,-10],[-6,-7],[-5,-8],[3,-9],[-2,3],[1,8],[-8,-6],[-4,9],[-8,6],[-10,-6],[-7,7],[-10,-1],[7,6],[6,3],[-8,2],[-9,-9],[10,10],[-10,6],[3,-7],[2,-7],[-2,10],[-8,3],[-1,-7],[-6,9],[4,5],[-6,-1],[-8,3],[-6,10],[5,5],[2,1],[-3,-4],[-7,-4],[-2,4],[1,6],[6,1],[2,-10],[-1,2],[5,9],[-4,-6],[5,3],[-8,-5],[4,8],[3,-10],[1,3],[6,-7],[1,-8],[8,7],[1,-5],[6,-6],[3,8],[5,2],[9,10],[-9,8],[-5,-6],[-8,10],[-2,6],[5,8],[-10,-4],[8,1],[-9,5],[-1,9],[-7,1],[-7,-5],[-4,-7],[-7,-6],[5,1],[8,-3],[4,9],[2,1],[3,7],[1,-9],[4,-5],[-4,7],[-5,-3],[10,-1],[5,-10],[-8,-8],[-1,2],[-6,-10],[-8,-3],[-9,10],[-7,-8],[10,-1],[-1,-3],[2,-1],[4,-6],[4,-3],[2,-3],[-6,-7],[-7,-10],[-6,5],[2,6],[7,6],[1,-6],[-9,-7],[6,-3],[4,-5],[-5,-9],[4,6],[-2,-9],[-2,-2],[6,-7],[-8,-7],[6,-5],[10,-1],[-5,-3],[6,4],[-4,7],[-7,-8],[-7,-9],[3,9],[5,-10],[-4,-7],[-3,9],[-4,7],[5,5],[-3,6],[-9,-4],[8,-2],[7,-8],[-2,1],[7,-5],[2,-8],[-4,-10],[5,-6],[8,9],[-3,-1],[-10,3],[-5,-7],[6,-3],[4,7],[6,6],[3,8],[-3,-9],[7,-9],[10,10],[8,-8],[-9,-3],[4,-2],[7,-6],[9,-2],[-10,-1],[3,-5],[-1,6],[2,4],[-7,-6],[-8,3],[-6,6],[2,10],[-8,-10],[-10,-4],[10,10],[6,-3],[2,-5],[-8,6],[7,1],[-7,-5],[1,-8],[2,2],[5,-4],[-8,5],[-8,2],[9,10],[-7,9],[-2,-3],[-10,4],[4,-4],[9,-10],[-6,-1],[-5,8],[9,4],[-9,-2],[-5,-3],[-5,-7],[-4,5],[-8,2],[-10,-8],[-6,-1],[-6,-10],[7,-5],[-8,-9],[7,1],[-8,7],[-3,-10],[4,2],[-6,-4],[9,9],[-8,2],[5,9],[9,3],[8,3],[-1,-8],[3,-2],[2,-5],[-9,-9],[-1,5],[2,9],[-5,9],[4,-7],[-7,9],[-3,-2],[6,6],[-4,-4],[-5,10],[-2,9],[3,1],[1,2],[2,-9],[10,-10],[1,-4]], dtype = "int32")#candidate|1751|(396, 2)|const|int32
call_1750 = relay.TupleGetItem(func_572_call(relay.reshape(const_1751.astype('int32'), [11, 8, 9])), 0)
call_1752 = relay.TupleGetItem(func_574_call(relay.reshape(const_1751.astype('int32'), [11, 8, 9])), 0)
output = relay.Tuple([bop_1731,call_1737,call_1750,const_1751,])
output2 = relay.Tuple([bop_1731,call_1738,call_1752,const_1751,])
func_1763 = relay.Function([], output)
mod['func_1763'] = func_1763
mod = relay.transform.InferType()(mod)
mutated_mod['func_1763'] = func_1763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1763_call = mutated_mod.get_global_var('func_1763')
call_1764 = func_1763_call()
output = call_1764
func_1765 = relay.Function([], output)
mutated_mod['func_1765'] = func_1765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1323_call = mod.get_global_var('func_1323')
func_1325_call = mutated_mod.get_global_var('func_1325')
call_1779 = relay.TupleGetItem(func_1323_call(), 2)
call_1780 = relay.TupleGetItem(func_1325_call(), 2)
func_653_call = mod.get_global_var('func_653')
func_657_call = mutated_mod.get_global_var('func_657')
var_1792 = relay.var("var_1792", dtype = "float32", shape = (42,))#candidate|1792|(42,)|var|float32
var_1793 = relay.var("var_1793", dtype = "float32", shape = (324,))#candidate|1793|(324,)|var|float32
var_1794 = relay.var("var_1794", dtype = "float32", shape = (504,))#candidate|1794|(504,)|var|float32
call_1791 = relay.TupleGetItem(func_653_call(relay.reshape(var_1792.astype('float32'), [3, 1, 14]), relay.reshape(var_1793.astype('float32'), [324,]), relay.reshape(var_1794.astype('float32'), [504,]), ), 3)
call_1795 = relay.TupleGetItem(func_657_call(relay.reshape(var_1792.astype('float32'), [3, 1, 14]), relay.reshape(var_1793.astype('float32'), [324,]), relay.reshape(var_1794.astype('float32'), [504,]), ), 3)
bop_1798 = relay.divide(call_1779.astype('float64'), var_1794.astype('float64')) # shape=(13, 5, 504)
bop_1801 = relay.divide(call_1780.astype('float64'), var_1794.astype('float64')) # shape=(13, 5, 504)
func_572_call = mod.get_global_var('func_572')
func_574_call = mutated_mod.get_global_var('func_574')
const_1808 = relay.const([[4,7,-4,-2,7,-5,9,-7,-1,-1,3,2,1,3,-8,8,-3,-3,-6,-9,4,-1],[-10,-3,9,3,5,1,9,-5,2,-1,10,4,-9,-8,7,-8,-10,-1,-5,8,-2,-4],[-4,8,-6,-3,-2,-4,-9,8,4,6,4,-10,4,7,-8,6,3,9,2,-6,8,9],[-10,5,10,-7,-7,-3,6,6,4,9,-6,5,-10,-4,8,-6,-2,-4,10,-9,10,-9],[-4,2,9,-5,10,4,-8,-6,6,7,-3,-10,-2,-4,-3,-9,-2,-4,2,7,-9,10],[1,-4,-10,-3,-1,7,-4,-6,-6,3,-5,8,-8,7,-5,-5,-7,-3,1,9,1,-7],[-1,-9,5,-4,10,-8,-6,-6,-4,-7,-1,7,6,-7,-3,1,5,-2,3,1,-9,-10],[3,-8,-8,-7,5,4,-9,-10,3,-8,-1,-9,6,6,6,-10,5,-6,-5,3,-7,3],[5,-8,-5,7,7,-10,3,-8,-5,9,-8,-2,-8,-3,9,-10,-9,5,7,8,5,8],[-6,-10,-7,-1,-4,8,-6,-8,6,3,8,-9,-9,10,-7,-3,-7,3,4,8,7,-1],[-6,-1,-8,-2,-2,5,10,-5,-6,-1,5,-6,10,-6,-10,1,7,2,6,-6,-5,-10],[-8,3,5,-6,1,-7,8,9,10,5,4,5,-1,8,1,2,-5,3,10,10,3,-4],[3,-8,7,-2,-1,3,-7,-8,1,8,-5,-5,2,8,-5,6,-10,-10,-8,-8,-9,-8],[3,5,-6,-9,-3,5,10,-1,-8,2,1,-4,4,7,2,10,-3,-9,-9,9,-5,-9],[10,9,-9,5,-2,-1,1,-10,3,-10,4,-5,-10,-4,3,-9,3,2,-10,2,-7,8],[10,3,-7,-2,-2,3,5,4,-1,10,10,8,10,4,4,3,10,-9,-9,-8,-2,-1],[-10,-5,-10,7,-7,-2,6,2,9,-5,-3,8,7,-3,8,-4,-10,9,3,2,2,7],[-9,9,-8,7,-7,1,10,3,-9,6,7,9,-1,2,-4,-1,-1,1,3,9,4,7],[6,-3,8,-4,5,7,-4,-9,-9,1,1,7,1,-7,8,8,2,8,-1,5,6,1],[-10,-8,1,8,3,-9,3,-1,7,-4,-3,3,5,-9,1,-10,-2,-1,-10,-6,-4,9],[-10,8,-10,-10,-7,6,-10,-2,6,-1,2,3,1,-7,6,-2,-4,4,7,6,7,-5],[-8,-8,-10,-5,1,6,-7,6,-9,-10,1,9,-9,1,9,-3,-2,1,9,8,-4,-1],[9,6,6,-1,9,-4,-4,-4,-10,10,-9,-7,9,-10,10,-7,9,-7,7,-1,-9,-5],[-1,-8,8,-2,-10,-5,4,5,-7,5,6,-2,-9,1,9,2,7,-10,7,9,-2,-8],[2,-2,-6,6,8,-6,2,-6,-3,2,8,2,5,-3,-10,5,4,2,6,-3,7,-3],[7,1,-8,10,4,-1,7,-9,-3,-8,4,9,1,6,1,6,-9,-10,9,-4,3,-3],[-7,9,7,-9,9,-2,-1,-8,-8,-2,3,-7,-3,-7,-6,9,5,5,7,-4,5,-7],[-4,1,-1,-10,-7,9,8,8,-8,-9,-7,4,10,10,-6,2,-4,-4,7,3,1,-4],[8,6,9,9,-10,9,3,-7,-8,8,3,-9,6,-6,4,9,-2,-9,8,8,-3,10],[-6,-4,8,-6,-4,5,7,-10,-9,-2,-3,3,-9,1,-8,7,-10,10,-4,2,3,9],[-7,10,7,-9,3,2,-5,-3,4,8,-2,3,-5,4,-2,-8,2,-7,10,-7,-7,6],[-2,4,-10,9,3,7,-10,-7,-4,1,3,-4,3,-7,-10,2,-3,-7,3,6,-1,3],[4,2,-5,5,-1,4,-10,-6,-3,2,7,8,7,-5,6,8,7,1,4,-3,-5,-1],[-7,7,5,5,-1,1,6,-4,3,-4,3,4,1,2,-4,3,10,-1,-9,9,9,8],[8,-10,6,-3,1,-6,-7,-10,-3,-2,3,10,-10,-4,10,8,5,-1,4,-2,3,9],[10,3,-2,-8,10,7,-10,-3,-4,-10,-9,-10,7,7,-1,2,-6,5,-1,3,5,-3]], dtype = "int32")#candidate|1808|(36, 22)|const|int32
call_1807 = relay.TupleGetItem(func_572_call(relay.reshape(const_1808.astype('int32'), [11, 8, 9])), 0)
call_1809 = relay.TupleGetItem(func_574_call(relay.reshape(const_1808.astype('int32'), [11, 8, 9])), 0)
func_1416_call = mod.get_global_var('func_1416')
func_1418_call = mutated_mod.get_global_var('func_1418')
call_1819 = relay.TupleGetItem(func_1416_call(relay.reshape(call_1791.astype('float32'), [252, 2])), 0)
call_1820 = relay.TupleGetItem(func_1418_call(relay.reshape(call_1791.astype('float32'), [252, 2])), 0)
func_58_call = mod.get_global_var('func_58')
func_60_call = mutated_mod.get_global_var('func_60')
call_1823 = relay.TupleGetItem(func_58_call(relay.reshape(call_1791.astype('float32'), [12, 6, 7])), 1)
call_1824 = relay.TupleGetItem(func_60_call(relay.reshape(call_1791.astype('float32'), [12, 6, 7])), 1)
func_1584_call = mod.get_global_var('func_1584')
func_1586_call = mutated_mod.get_global_var('func_1586')
call_1829 = relay.TupleGetItem(func_1584_call(), 1)
call_1830 = relay.TupleGetItem(func_1586_call(), 1)
output = relay.Tuple([call_1791,var_1792,var_1793,bop_1798,call_1807,const_1808,call_1819,call_1823,call_1829,])
output2 = relay.Tuple([call_1795,var_1792,var_1793,bop_1801,call_1809,const_1808,call_1820,call_1824,call_1830,])
func_1840 = relay.Function([var_1792,var_1793,var_1794,], output)
mod['func_1840'] = func_1840
mod = relay.transform.InferType()(mod)
mutated_mod['func_1840'] = func_1840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1840_call = mutated_mod.get_global_var('func_1840')
var_1842 = relay.var("var_1842", dtype = "float32", shape = (42,))#candidate|1842|(42,)|var|float32
var_1843 = relay.var("var_1843", dtype = "float32", shape = (324,))#candidate|1843|(324,)|var|float32
var_1844 = relay.var("var_1844", dtype = "float32", shape = (504,))#candidate|1844|(504,)|var|float32
call_1841 = func_1840_call(var_1842,var_1843,var_1844,)
output = call_1841
func_1845 = relay.Function([var_1842,var_1843,var_1844,], output)
mutated_mod['func_1845'] = func_1845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1534_call = mod.get_global_var('func_1534')
func_1535_call = mutated_mod.get_global_var('func_1535')
call_1893 = func_1534_call()
call_1894 = func_1534_call()
output = call_1893
output2 = call_1894
func_1906 = relay.Function([], output)
mod['func_1906'] = func_1906
mod = relay.transform.InferType()(mod)
output = func_1906()
func_1907 = relay.Function([], output)
mutated_mod['func_1907'] = func_1907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1534_call = mod.get_global_var('func_1534')
func_1535_call = mutated_mod.get_global_var('func_1535')
call_1925 = func_1534_call()
call_1926 = func_1534_call()
output = call_1925
output2 = call_1926
func_1936 = relay.Function([], output)
mod['func_1936'] = func_1936
mod = relay.transform.InferType()(mod)
mutated_mod['func_1936'] = func_1936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1936_call = mutated_mod.get_global_var('func_1936')
call_1937 = func_1936_call()
output = call_1937
func_1938 = relay.Function([], output)
mutated_mod['func_1938'] = func_1938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1906_call = mod.get_global_var('func_1906')
func_1907_call = mutated_mod.get_global_var('func_1907')
call_1947 = func_1906_call()
call_1948 = func_1906_call()
func_58_call = mod.get_global_var('func_58')
func_60_call = mutated_mod.get_global_var('func_60')
var_1963 = relay.var("var_1963", dtype = "float32", shape = (504,))#candidate|1963|(504,)|var|float32
call_1962 = relay.TupleGetItem(func_58_call(relay.reshape(var_1963.astype('float32'), [12, 6, 7])), 1)
call_1964 = relay.TupleGetItem(func_60_call(relay.reshape(var_1963.astype('float32'), [12, 6, 7])), 1)
func_1726_call = mod.get_global_var('func_1726')
func_1728_call = mutated_mod.get_global_var('func_1728')
call_1970 = func_1726_call()
call_1971 = func_1726_call()
func_1214_call = mod.get_global_var('func_1214')
func_1219_call = mutated_mod.get_global_var('func_1219')
const_1974 = relay.const([7,3,-8,-7,10,7,-9,-7,-8,8,-1,10,-8,-10,-6,-10,-4,2,-8,10,-6,9,-10,2,-1,5,-9,-5,-8,7,3,-8,10,9,-8,8,-6,9,5,5,-4,-9,-5,-2,-9,-6,8,-1,3,-8,9,-7,7,2,-9,-10,-7,-8,5,-3,10,-9,3,-7,-10,-9,5,3,-2,-3,-1,-6,4,-9,5,-3,5,-5,4,7,9,2,-4,5,1,8,3,-10,-1,7,-5,3,4,8,-10,-1,-3,-10,-9,2,4,-4,6,-5,-5,3,3,-7,5,-5,10,-1,-1,9,-9,2,1,-10,9,5,8,-1,-5,-7,6,5,-2,-1,9,-4,1,2,1,-10,-7,-2,3,7,-4,10,8,9,2,-4,-10,-1,-4,4,7,6,8,-1,3,-1,-2,-8,6,2,-9,-1,5,-1,-7,6,8,-7,10,-9,4,10,3,-6,-9,-9,5,7,-3,10,-3,1,-6,10,-6,9,-1,6,10,4,-2,-8,-2,8,-5,-3,-5,-2,5,-1,4,-1,-10,10,-8,-1,-7,9,6,-5,8,-1,-4,-7,8,-10,-7,-7,5,-9,2,-7,-3,-8,-6,1,-3,-8,-7,8,3,8,-6,-7,2,7,-9,5,-1,-10,8,-2,4,-9,-4,-4,4,7,7,-2,1,7,4,-4,6,3,-5,-8,4,10,4,-7,8,-8,-9,5,10,1,-5,10,-9,7,7,-1,-3,-10,-4,5,2,-6,6,10,5,-1,-6,-2,-1,7,4,-10,10,4,-9,-8,4,2,9,-7,3,5,-6,-4,-5,6,2,6,10,-8,3,-1,-1,-9,5,5,2,7,6,-7,-2,-10,-3,-6,10,-1,1,-2,-3,5,6,5,-9,-8,-4,5,9,2,-6,4,-4,9,-7,10,-1,-7,6,-5,-4,9,7,6,3,-10,8,-5,7,8,6,-3,4,3,3,4,-2,-5,-8,9,-9,-2,-10,-9,-2,2,-8,4,6,1,-9,5,9,2,-3,1,-9,10,10,8,-8,-10,5,8,5,-9,4,6,7,1,1,3,6,9,5,-8,6,-9,5,-2,-7,-5,-6,6,-10,-3,-10,-1,10,-2,5,-7,-9,-2,4,-5,5,-5,2,4,8,-5,4,5,-5,-10,-9,3,-3,-2,-1,1,-6,8,-6,2,-2,4,-2,-3,-8,-9,-7,-4,-1,9,-3,9,7,-9,-4,8,-7,-3,3,-6,-6,-7,9,-5,-8,-4,7,2,3,-10,4,2,-2,10,10,8,3,10,5,-4,-2,-3,2,-4,7,-1,-1,2,-7,-1,-10,-2,2,-7,-5,-1,-1,-5,-10,-9,2,9,2,-9,6,3,-8,-9,5,9,-8,9,5,-4,5,-3,3,2,-5,-2,2,-5,10,-1,3,-7,10,-2,-1,1,10,-5,-6,-6,-2,2,-6,4,-4,-3,7,-7,7,4,-6,6,-9,-8,-9,-7,-5,-5,-7,-8,-4,-7,-10,-7,-2,7,-6,-3,-3,3,5,3,1,2,-6,1,3,8,2,2,-8,1,9,10,-3,4,-5,2,4,5,6,10,6,5,-5,10,-6,-7,5,9,-10,-9,-9,-10,7,-2,3,-2,-10,-5,-4,8,9,6,-3,-3,-7,8,3,10,-3,-3,-6,5,4,3,-8,1,-8,-1,-2,-4,7,7,-7,-2,-1,9,1,-3,4,6,-7,-9,-4,6,5,6,-9,3,-2,-10,-9,-10,1,-9,9,8,10,1,-8,-9,6,-6,-10,4,-6,-5,-1,9,-8,8,-2,1,6,8,-10,8,2,-10,-6,4,-7,9,4,2,4,7,-10,10,4,-1,-4,-8,-4,-1,-3,2,-6,9,-9,-9,-5,-3,-7,-3,10,5,3,-2,-2,-7,10,6,-10,-3,10,-4,-2,-1,9,-10,-6,-4,-8,5,-1,-6,4,6,-1,-5,-3,-9,7,4,4,6,10,-10,-10,10,-9,-2,-2,-9,9,5,4,-9,-4,10,10,9,-7,10,-5,-9,-9,-9,1,-4,-3,-4,-5,-9,-5,-6,-4,5,-3,9,5,4,10,7,-1,-2,1,1,-7,4,9,9,4,-5,8,7,-3,-9,4,4,6,2,-2,-3,3,-2,-7,8,-4,-10,-8,-6,-8,5,1,-9,-7,-6,4,-1,9,1,-6,-9,1,-3,-6,1,-5,6,-8,-5,-6,8,-2,-8,4,-7,10,1,5,2,4,-5,-10,7,8,4,2,-5,-1,-5,6,-3,10,-8,7,-6,3,-2,-4,10,-10,5,6,-6,5,-10,-5,-7,-9,10,5,9,-7,1,-7,-1,-5,8,-8,-6,6,-6,-1,6,10,-5,9,-2,-4,-8,-4,-9,7,10,-4,2,4,-10,3,-4,1,-5,-5,9,-2,4,7,-4,-3,-4,1,-6,4,-10,4,-7,5,-5,10,4,10,9,1,4,8,-10,1,-1,-4,1,7,2,1,6,3,5,-8,-1,-6,5,-10,-2,-1,-6,-6,-4,5,6,-5,-7,-2,4,-7,-9,9,-6,8,-1,-2,5,-6,-10,-7,6,9,-2,8,-1,2,-7,-3,-1,-2,10,-1,-2,6,-7,10,-6,-1,-10,-8,-3,2,-1,-6,3,-5,3,-10,1,7,-10,3,6,6,-2,-8,3,6,4,-6,-1,-2,5,7,7,-5,-1,-2,-2,-2,5,1,9,-3,9,-9,-8,-5,2,-10,6,-7,6,3,-2,-2,4,-4,-1,7,6,-2,-9,-1,7,-2,-7,-1,10,10,-6,8,8,-4,-1,-10,-8,-5,-7,8,8,-10,-8,-9,-2,2,-5,-9,-4,-3,5,6,-6,-10,7,-1,-7,1,10,8,1,10,-2,-1,4,-3,-7,-2,-10,-8,-2,2,-7,-7,-3,9,-4,-1,9,-3,4,-2,5,-6,8,-1,-2,-10,-4,-8,-1,-4,-7,3,5,-9,-6,-1,-4,-5,10,3,-7,-3,-9,1,-7,8,7,1,9,-4,8,-5,4,-7,8,-6,-2,-7,9,2,2,-1,-1,-3,-10,-7,-4,-3,4,3,-9,-6,-8,-1,-10,3,10,3,6,-4,-2,-7,3,5,9,1,4,8,-10,-1,9,-4,-9,2,2,-10,-7,3,6,-1,-3,-4,8,1,10,-10,-7,9,1,9,-9,10,-7,-10,-10,-7,-1,-9,2,1,-3,2,5,-8,-7,2,8,-2,6,6,-2,8,-6,4,-9,4,6,-6,1,1,-10,2,6,1,-7,-9,-3,-4,-4,-9,-5,-8,10,4,-5,7,-8,3,6,-8,-2,4,4,6,-6,2,9,4,4,-1,3,-6,1,-6,5,10,3,-5,-1,6,8,-9,-9,-6,-1,4,7,6,1,-2,8,-4,-7,-7,-9,-6,-2,-4,7,4,9,3,-9,-3,-1,-5,-9,7,9,4,8,7,-4,8,10,-1,-1,-4,-3,9,4,-10,-4,-10,-2,2,-2,-7,7,8,-9,-8,-5,-1,3,-10,-3,-1,9,1,-4,1,-10,-4,6,-8,-3,7,1,4,-7,1,7,8,-3,-7,-10,7,-7,-8,-3,1,-3,1,6,9,10,-5,6,-2,2,8,-8,-3,5,9,10,-1,-10,-8,-8,2,-1,-6,10,-5,-5,-6,7,-7,3,-10,8,5,-4,4,3,1,-3,-2,2,7,10,2,5,2,7,-10,-3,-3,-1,2,-7,10,9,4,9,3,-7,9,-4,9,-4,6,-5,8,-10,-9,-3,-6,1,6,-3,1,3,1,2,-9,-8,-8,8,8,6,4,8,-4,9,-1,8,-4,4,8,-5,4,6,8,-10,9,-8,7,-2,-9,10,5,1,-9,-5,3,-8,5,1,-5,4,8,8,9,4,-2,7,-2,-7,5,2,3,-7,1,6,10,1,-1,3,8,8,-4,7,3,-9,-7,-6,-10,-3,-10,10,-10,-10,-9,-10,10,4,3,2,-7,-2,-3,-9,1,5,-2,3,-5,2,6,10,2,-2,7,-10,-4,-3,1,1,5,-3,-2,-10,9,-10,5,-1,-7,-3,8,1,6,-10,-7,8,6,10,6,-6,1,10,-7,7,5,-8,-3,-6,4,-5,6,2,5,-1,-1,7,-2,-10,-9,4,-6,8,5,10,1,-2,-1,10,-8,10,-7,-1,-6,-1,7,3,-10,-5,-7,4,-4,-5,-3,-2,6,-8,1,-4,-10,1,10,3,7,5,-6,-1,7,5,1,-9,-1,1,-8,-8,10,8,-5,2,-2,5,-7,-6,2,-4,-1,1,-4,4,7,-2,3,-1,-4,8,1,2,10,2,-1,7,3,-6,2,9,-3,-8,-3,-3,-1,3,-6,10,4,2,-10,9,-8,-10,-6,2,10,-6,-1,9,3,4,8,-7,-7,10,-7,1,-6,8,10,3,-9,4,-7,-2,7,-10,-1,7,-8,-5,4,2,1,-3,-9,-2,3,-8,10,-3,-7,10,-3,-6,-4,8,9,9,2,-10,6,1,7,-4,-1,-4,1,6,2,5,-1,3,4,1,-4,9,2,-3,-1,-7,-3,3,-6,-10,-9,4,9,-1,9,-1,2,7,9,-4,-7,5,2,6,4,-6,-4,-4,-8,-7,8,4,-7,-5,-8,-9,10,5,-3,-9,8,2,6,4,-3,-2,9,1,6,-4,-5,-9,8,-6,-6,8,2,7,-7,5,4,-9,5,10,-3,6,-9,2,1,-8,7,-3,9,-1,1,-4,-3,-9,-2,8,5,-5,10,-4,9,10,-10,-5,2,-3,1,-9,2,-1,-1,4,-4,2,8,7,-6,3,7,-4,5,-4,-7,-9,3,5,-10,9,8,9,5,-5], dtype = "int32")#candidate|1974|(1800,)|const|int32
var_1975 = relay.var("var_1975", dtype = "float32", shape = (54, 6))#candidate|1975|(54, 6)|var|float32
call_1973 = relay.TupleGetItem(func_1214_call(relay.reshape(const_1974.astype('int32'), [15, 12, 10]), relay.reshape(var_1975.astype('float32'), [324,]), relay.reshape(call_1962.astype('float32'), [504,]), ), 2)
call_1976 = relay.TupleGetItem(func_1219_call(relay.reshape(const_1974.astype('int32'), [15, 12, 10]), relay.reshape(var_1975.astype('float32'), [324,]), relay.reshape(call_1962.astype('float32'), [504,]), ), 2)
func_1584_call = mod.get_global_var('func_1584')
func_1586_call = mutated_mod.get_global_var('func_1586')
call_1980 = relay.TupleGetItem(func_1584_call(), 0)
call_1981 = relay.TupleGetItem(func_1586_call(), 0)
func_1387_call = mod.get_global_var('func_1387')
func_1390_call = mutated_mod.get_global_var('func_1390')
var_1985 = relay.var("var_1985", dtype = "float32", shape = (784,))#candidate|1985|(784,)|var|float32
call_1984 = relay.TupleGetItem(func_1387_call(relay.reshape(var_1985.astype('float32'), [16, 7, 7])), 1)
call_1986 = relay.TupleGetItem(func_1390_call(relay.reshape(var_1985.astype('float32'), [16, 7, 7])), 1)
func_1534_call = mod.get_global_var('func_1534')
func_1535_call = mutated_mod.get_global_var('func_1535')
call_1987 = func_1534_call()
call_1988 = func_1534_call()
func_1474_call = mod.get_global_var('func_1474')
func_1477_call = mutated_mod.get_global_var('func_1477')
const_2001 = relay.const([10,-5,9,-9,-4,-7,-7,-9,-6,9,-3,-3,3,-1,6,4,-9,4,-5,-8,-7,1,2,6,5,5,-10,3,2,-2,-3,-8,-7,2,-5,-8,-3,-8,-3,4,8,5,2,1,3,-4,-2,-1,-3,9,-3,-2,-8,-3,5,-8,-9,-10,5,4,-7,-4,-9,5,8,-3,3,-7,-6,-3,-10,-3,-7,1,-6,-8,5,9,-9,-7,-10,-9,-6,7,7,-4,-2,9,1,9,-6,8,3,5,-4,10,-1,-9,5,10,8,10,-4,-9,-10,-2,-9,6,-10,5,-1,9,4,-2,6,1,-7,-1,-2,6,3,8,10,4,-5,3,-4,10,2,6,-4,-9,-2,4,3,7,7,7,-9,5,-10,10,3,-3,-3,-1,8,10,2,-3,3,2,5,-7,-10,8,3,5,9,-10,-7,-9,-3,-4,-4,-10,8,7,1,8,6,-5,-4,-4,-10,-5,-7,1,-5,3,-3,6,-6,5,-5,-1,8,10,6,-5,10,3,-6,7,1,-1,-6,-4,-8,-10,-1,-5,-4,-3,1,-7,9,8,4,7,7,8,2,6,2,-6,4,3,6,-10,-5,-10,5,-8,-5,-4,2,8,7,-6,9,-3,-3,10,-4,8,7,2,6,-1,-6,5,-9,1,-6,-5,3,7,4,-7,10,-8,3,-9,1,-10,-6,-4,-10,1,6,-1,3,4,5,-8,5,2,-5,7,-10,4,3,-1,2,9,7,6,-7,-9,-10,-9,-2,-4,-1,-4,9,-9,5,3,3,5,1,-9,-2,1,5,8,1,6,-5,7,8,6,7,9,3,-1,9,-3,8,4,3,3,-6,-10,-7,6,-2,-7,2,-10,-3,-1,10,-3,7,-4,-1,-8,3,-9,4,6,-8,6,2,-6,4,-9,-1,-3,-2,-9,-3,2,-5,-6,8,7,-8,5,7,-7,9,5,8,8,-6,-5,-6,-5,-1,1,7,-5,-1,5,4,-10,7,4,-5,9,1,-2,-2,9,-10,-3,8,-1,10,6,-9,-8,-4,-4,-5,10,-7,-3,9,-4,-2,-5,-7,-9,4,1,-4,10,1,6,-6,-4,-1,6,10,-1,9,5,4,-2,-3,-2,2,-4,-3,-3,-9,4,5,-1,9,1,10,5,2,-2,10,2,3,9,6,-9,-8,-4,4,-1,-7,-3,8,3,-5,5,-9,9,2,-2,-7,-3,3,-1,-5], dtype = "uint16")#candidate|2001|(455,)|const|uint16
call_2000 = relay.TupleGetItem(func_1474_call(relay.reshape(const_2001.astype('uint16'), [13, 5, 7])), 1)
call_2002 = relay.TupleGetItem(func_1477_call(relay.reshape(const_2001.astype('uint16'), [13, 5, 7])), 1)
bop_2005 = relay.divide(call_1980.astype('float32'), relay.reshape(call_1947.astype('float32'), relay.shape_of(call_1980))) # shape=(13, 5, 1)
bop_2008 = relay.divide(call_1981.astype('float32'), relay.reshape(call_1948.astype('float32'), relay.shape_of(call_1981))) # shape=(13, 5, 1)
output = relay.Tuple([call_1962,var_1963,call_1970,call_1973,const_1974,var_1975,call_1984,var_1985,call_1987,call_2000,const_2001,bop_2005,])
output2 = relay.Tuple([call_1964,var_1963,call_1971,call_1976,const_1974,var_1975,call_1986,var_1985,call_1988,call_2002,const_2001,bop_2008,])
func_2010 = relay.Function([var_1963,var_1975,var_1985,], output)
mod['func_2010'] = func_2010
mod = relay.transform.InferType()(mod)
mutated_mod['func_2010'] = func_2010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2010_call = mutated_mod.get_global_var('func_2010')
var_2012 = relay.var("var_2012", dtype = "float32", shape = (504,))#candidate|2012|(504,)|var|float32
var_2013 = relay.var("var_2013", dtype = "float32", shape = (54, 6))#candidate|2013|(54, 6)|var|float32
var_2014 = relay.var("var_2014", dtype = "float32", shape = (784,))#candidate|2014|(784,)|var|float32
call_2011 = func_2010_call(var_2012,var_2013,var_2014,)
output = call_2011
func_2015 = relay.Function([var_2012,var_2013,var_2014,], output)
mutated_mod['func_2015'] = func_2015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_2017 = relay.TupleGetItem(func_1626_call(), 1)
call_2018 = relay.TupleGetItem(func_1628_call(), 1)
func_58_call = mod.get_global_var('func_58')
func_60_call = mutated_mod.get_global_var('func_60')
var_2020 = relay.var("var_2020", dtype = "float32", shape = (504,))#candidate|2020|(504,)|var|float32
call_2019 = relay.TupleGetItem(func_58_call(relay.reshape(var_2020.astype('float32'), [12, 6, 7])), 0)
call_2021 = relay.TupleGetItem(func_60_call(relay.reshape(var_2020.astype('float32'), [12, 6, 7])), 0)
output = relay.Tuple([call_2017,call_2019,var_2020,])
output2 = relay.Tuple([call_2018,call_2021,var_2020,])
func_2023 = relay.Function([var_2020,], output)
mod['func_2023'] = func_2023
mod = relay.transform.InferType()(mod)
mutated_mod['func_2023'] = func_2023
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2024 = relay.var("var_2024", dtype = "float32", shape = (504,))#candidate|2024|(504,)|var|float32
func_2023_call = mutated_mod.get_global_var('func_2023')
call_2025 = func_2023_call(var_2024)
output = call_2025
func_2026 = relay.Function([var_2024], output)
mutated_mod['func_2026'] = func_2026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1763_call = mod.get_global_var('func_1763')
func_1765_call = mutated_mod.get_global_var('func_1765')
call_2059 = relay.TupleGetItem(func_1763_call(), 1)
call_2060 = relay.TupleGetItem(func_1765_call(), 1)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_2065 = relay.TupleGetItem(func_1626_call(), 0)
call_2066 = relay.TupleGetItem(func_1628_call(), 0)
output = relay.Tuple([call_2059,call_2065,])
output2 = relay.Tuple([call_2060,call_2066,])
func_2067 = relay.Function([], output)
mod['func_2067'] = func_2067
mod = relay.transform.InferType()(mod)
output = func_2067()
func_2068 = relay.Function([], output)
mutated_mod['func_2068'] = func_2068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1763_call = mod.get_global_var('func_1763')
func_1765_call = mutated_mod.get_global_var('func_1765')
call_2076 = relay.TupleGetItem(func_1763_call(), 1)
call_2077 = relay.TupleGetItem(func_1765_call(), 1)
output = relay.Tuple([call_2076,])
output2 = relay.Tuple([call_2077,])
func_2078 = relay.Function([], output)
mod['func_2078'] = func_2078
mod = relay.transform.InferType()(mod)
output = func_2078()
func_2079 = relay.Function([], output)
mutated_mod['func_2079'] = func_2079
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2089 = relay.const(4, dtype = "uint8")#candidate|2089|()|const|uint8
var_2090 = relay.var("var_2090", dtype = "uint8", shape = (6, 16, 1))#candidate|2090|(6, 16, 1)|var|uint8
bop_2091 = relay.subtract(const_2089.astype('uint8'), var_2090.astype('uint8')) # shape=(6, 16, 1)
output = relay.Tuple([bop_2091,])
output2 = relay.Tuple([bop_2091,])
func_2109 = relay.Function([var_2090,], output)
mod['func_2109'] = func_2109
mod = relay.transform.InferType()(mod)
mutated_mod['func_2109'] = func_2109
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2110 = relay.var("var_2110", dtype = "uint8", shape = (6, 16, 1))#candidate|2110|(6, 16, 1)|var|uint8
func_2109_call = mutated_mod.get_global_var('func_2109')
call_2111 = func_2109_call(var_2110)
output = call_2111
func_2112 = relay.Function([var_2110], output)
mutated_mod['func_2112'] = func_2112
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2159 = relay.var("var_2159", dtype = "float32", shape = (3, 12, 16))#candidate|2159|(3, 12, 16)|var|float32
uop_2160 = relay.sigmoid(var_2159.astype('float32')) # shape=(3, 12, 16)
output = relay.Tuple([uop_2160,])
output2 = relay.Tuple([uop_2160,])
func_2163 = relay.Function([var_2159,], output)
mod['func_2163'] = func_2163
mod = relay.transform.InferType()(mod)
mutated_mod['func_2163'] = func_2163
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2164 = relay.var("var_2164", dtype = "float32", shape = (3, 12, 16))#candidate|2164|(3, 12, 16)|var|float32
func_2163_call = mutated_mod.get_global_var('func_2163')
call_2165 = func_2163_call(var_2164)
output = call_2165
func_2166 = relay.Function([var_2164], output)
mutated_mod['func_2166'] = func_2166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1697_call = mod.get_global_var('func_1697')
func_1699_call = mutated_mod.get_global_var('func_1699')
call_2195 = relay.TupleGetItem(func_1697_call(), 1)
call_2196 = relay.TupleGetItem(func_1699_call(), 1)
output = relay.Tuple([call_2195,])
output2 = relay.Tuple([call_2196,])
func_2212 = relay.Function([], output)
mod['func_2212'] = func_2212
mod = relay.transform.InferType()(mod)
mutated_mod['func_2212'] = func_2212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2212_call = mutated_mod.get_global_var('func_2212')
call_2213 = func_2212_call()
output = call_2213
func_2214 = relay.Function([], output)
mutated_mod['func_2214'] = func_2214
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2279 = relay.var("var_2279", dtype = "float64", shape = (13, 8, 15))#candidate|2279|(13, 8, 15)|var|float64
uop_2280 = relay.sigmoid(var_2279.astype('float64')) # shape=(13, 8, 15)
bop_2305 = relay.divide(uop_2280.astype('float32'), relay.reshape(var_2279.astype('float32'), relay.shape_of(uop_2280))) # shape=(13, 8, 15)
output = relay.Tuple([bop_2305,])
output2 = relay.Tuple([bop_2305,])
func_2308 = relay.Function([var_2279,], output)
mod['func_2308'] = func_2308
mod = relay.transform.InferType()(mod)
var_2309 = relay.var("var_2309", dtype = "float64", shape = (13, 8, 15))#candidate|2309|(13, 8, 15)|var|float64
output = func_2308(var_2309)
func_2310 = relay.Function([var_2309], output)
mutated_mod['func_2310'] = func_2310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1534_call = mod.get_global_var('func_1534')
func_1535_call = mutated_mod.get_global_var('func_1535')
call_2312 = func_1534_call()
call_2313 = func_1534_call()
func_1143_call = mod.get_global_var('func_1143')
func_1144_call = mutated_mod.get_global_var('func_1144')
call_2314 = func_1143_call()
call_2315 = func_1143_call()
output = relay.Tuple([call_2312,call_2314,])
output2 = relay.Tuple([call_2313,call_2315,])
func_2317 = relay.Function([], output)
mod['func_2317'] = func_2317
mod = relay.transform.InferType()(mod)
mutated_mod['func_2317'] = func_2317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2317_call = mutated_mod.get_global_var('func_2317')
call_2318 = func_2317_call()
output = call_2318
func_2319 = relay.Function([], output)
mutated_mod['func_2319'] = func_2319
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2356 = relay.var("var_2356", dtype = "bool", shape = (7, 14, 5))#candidate|2356|(7, 14, 5)|var|bool
var_2357 = relay.var("var_2357", dtype = "bool", shape = (7, 14, 5))#candidate|2357|(7, 14, 5)|var|bool
bop_2358 = relay.logical_and(var_2356.astype('bool'), relay.reshape(var_2357.astype('bool'), relay.shape_of(var_2356))) # shape=(7, 14, 5)
output = relay.Tuple([bop_2358,])
output2 = relay.Tuple([bop_2358,])
func_2370 = relay.Function([var_2356,var_2357,], output)
mod['func_2370'] = func_2370
mod = relay.transform.InferType()(mod)
var_2371 = relay.var("var_2371", dtype = "bool", shape = (7, 14, 5))#candidate|2371|(7, 14, 5)|var|bool
var_2372 = relay.var("var_2372", dtype = "bool", shape = (7, 14, 5))#candidate|2372|(7, 14, 5)|var|bool
output = func_2370(var_2371,var_2372,)
func_2373 = relay.Function([var_2371,var_2372,], output)
mutated_mod['func_2373'] = func_2373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2078_call = mod.get_global_var('func_2078')
func_2079_call = mutated_mod.get_global_var('func_2079')
call_2404 = relay.TupleGetItem(func_2078_call(), 0)
call_2405 = relay.TupleGetItem(func_2079_call(), 0)
output = relay.Tuple([call_2404,])
output2 = relay.Tuple([call_2405,])
func_2409 = relay.Function([], output)
mod['func_2409'] = func_2409
mod = relay.transform.InferType()(mod)
output = func_2409()
func_2410 = relay.Function([], output)
mutated_mod['func_2410'] = func_2410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1139_call = mod.get_global_var('func_1139')
func_1140_call = mutated_mod.get_global_var('func_1140')
call_2440 = func_1139_call()
call_2441 = func_1139_call()
func_2212_call = mod.get_global_var('func_2212')
func_2214_call = mutated_mod.get_global_var('func_2214')
call_2447 = relay.TupleGetItem(func_2212_call(), 0)
call_2448 = relay.TupleGetItem(func_2214_call(), 0)
output = relay.Tuple([call_2440,call_2447,])
output2 = relay.Tuple([call_2441,call_2448,])
func_2449 = relay.Function([], output)
mod['func_2449'] = func_2449
mod = relay.transform.InferType()(mod)
output = func_2449()
func_2450 = relay.Function([], output)
mutated_mod['func_2450'] = func_2450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1936_call = mod.get_global_var('func_1936')
func_1938_call = mutated_mod.get_global_var('func_1938')
call_2504 = func_1936_call()
call_2505 = func_1936_call()
uop_2510 = relay.sin(call_2504.astype('float64')) # shape=(13, 5, 1)
uop_2512 = relay.sin(call_2505.astype('float64')) # shape=(13, 5, 1)
uop_2520 = relay.atanh(uop_2510.astype('float32')) # shape=(13, 5, 1)
uop_2522 = relay.atanh(uop_2512.astype('float32')) # shape=(13, 5, 1)
output = uop_2520
output2 = uop_2522
func_2524 = relay.Function([], output)
mod['func_2524'] = func_2524
mod = relay.transform.InferType()(mod)
mutated_mod['func_2524'] = func_2524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2524_call = mutated_mod.get_global_var('func_2524')
call_2525 = func_2524_call()
output = call_2525
func_2526 = relay.Function([], output)
mutated_mod['func_2526'] = func_2526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1139_call = mod.get_global_var('func_1139')
func_1140_call = mutated_mod.get_global_var('func_1140')
call_2575 = func_1139_call()
call_2576 = func_1139_call()
output = call_2575
output2 = call_2576
func_2577 = relay.Function([], output)
mod['func_2577'] = func_2577
mod = relay.transform.InferType()(mod)
mutated_mod['func_2577'] = func_2577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2577_call = mutated_mod.get_global_var('func_2577')
call_2578 = func_2577_call()
output = call_2578
func_2579 = relay.Function([], output)
mutated_mod['func_2579'] = func_2579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1143_call = mod.get_global_var('func_1143')
func_1144_call = mutated_mod.get_global_var('func_1144')
call_2583 = func_1143_call()
call_2584 = func_1143_call()
func_572_call = mod.get_global_var('func_572')
func_574_call = mutated_mod.get_global_var('func_574')
var_2595 = relay.var("var_2595", dtype = "int32", shape = (792,))#candidate|2595|(792,)|var|int32
call_2594 = relay.TupleGetItem(func_572_call(relay.reshape(var_2595.astype('int32'), [11, 8, 9])), 0)
call_2596 = relay.TupleGetItem(func_574_call(relay.reshape(var_2595.astype('int32'), [11, 8, 9])), 0)
output = relay.Tuple([call_2583,call_2594,var_2595,])
output2 = relay.Tuple([call_2584,call_2596,var_2595,])
func_2600 = relay.Function([var_2595,], output)
mod['func_2600'] = func_2600
mod = relay.transform.InferType()(mod)
var_2601 = relay.var("var_2601", dtype = "int32", shape = (792,))#candidate|2601|(792,)|var|int32
output = func_2600(var_2601)
func_2602 = relay.Function([var_2601], output)
mutated_mod['func_2602'] = func_2602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2577_call = mod.get_global_var('func_2577')
func_2579_call = mutated_mod.get_global_var('func_2579')
call_2624 = func_2577_call()
call_2625 = func_2577_call()
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_2629 = relay.TupleGetItem(func_1626_call(), 1)
call_2630 = relay.TupleGetItem(func_1628_call(), 1)
output = relay.Tuple([call_2624,call_2629,])
output2 = relay.Tuple([call_2625,call_2630,])
func_2636 = relay.Function([], output)
mod['func_2636'] = func_2636
mod = relay.transform.InferType()(mod)
mutated_mod['func_2636'] = func_2636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2636_call = mutated_mod.get_global_var('func_2636')
call_2637 = func_2636_call()
output = call_2637
func_2638 = relay.Function([], output)
mutated_mod['func_2638'] = func_2638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1936_call = mod.get_global_var('func_1936')
func_1938_call = mutated_mod.get_global_var('func_1938')
call_2645 = func_1936_call()
call_2646 = func_1936_call()
func_2163_call = mod.get_global_var('func_2163')
func_2166_call = mutated_mod.get_global_var('func_2166')
var_2655 = relay.var("var_2655", dtype = "float32", shape = (576,))#candidate|2655|(576,)|var|float32
call_2654 = relay.TupleGetItem(func_2163_call(relay.reshape(var_2655.astype('float32'), [3, 12, 16])), 0)
call_2656 = relay.TupleGetItem(func_2166_call(relay.reshape(var_2655.astype('float32'), [3, 12, 16])), 0)
func_2078_call = mod.get_global_var('func_2078')
func_2079_call = mutated_mod.get_global_var('func_2079')
call_2660 = relay.TupleGetItem(func_2078_call(), 0)
call_2661 = relay.TupleGetItem(func_2079_call(), 0)
output = relay.Tuple([call_2645,call_2654,var_2655,call_2660,])
output2 = relay.Tuple([call_2646,call_2656,var_2655,call_2661,])
func_2666 = relay.Function([var_2655,], output)
mod['func_2666'] = func_2666
mod = relay.transform.InferType()(mod)
mutated_mod['func_2666'] = func_2666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2667 = relay.var("var_2667", dtype = "float32", shape = (576,))#candidate|2667|(576,)|var|float32
func_2666_call = mutated_mod.get_global_var('func_2666')
call_2668 = func_2666_call(var_2667)
output = call_2668
func_2669 = relay.Function([var_2667], output)
mutated_mod['func_2669'] = func_2669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mod.get_global_var('func_2067')
func_2068_call = mutated_mod.get_global_var('func_2068')
call_2673 = relay.TupleGetItem(func_2067_call(), 1)
call_2674 = relay.TupleGetItem(func_2068_call(), 1)
uop_2685 = relay.sinh(call_2673.astype('float32')) # shape=(13, 5, 1)
uop_2687 = relay.sinh(call_2674.astype('float32')) # shape=(13, 5, 1)
output = relay.Tuple([uop_2685,])
output2 = relay.Tuple([uop_2687,])
func_2693 = relay.Function([], output)
mod['func_2693'] = func_2693
mod = relay.transform.InferType()(mod)
mutated_mod['func_2693'] = func_2693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2693_call = mutated_mod.get_global_var('func_2693')
call_2694 = func_2693_call()
output = call_2694
func_2695 = relay.Function([], output)
mutated_mod['func_2695'] = func_2695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2212_call = mod.get_global_var('func_2212')
func_2214_call = mutated_mod.get_global_var('func_2214')
call_2700 = relay.TupleGetItem(func_2212_call(), 0)
call_2701 = relay.TupleGetItem(func_2214_call(), 0)
output = call_2700
output2 = call_2701
func_2714 = relay.Function([], output)
mod['func_2714'] = func_2714
mod = relay.transform.InferType()(mod)
mutated_mod['func_2714'] = func_2714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2714_call = mutated_mod.get_global_var('func_2714')
call_2715 = func_2714_call()
output = call_2715
func_2716 = relay.Function([], output)
mutated_mod['func_2716'] = func_2716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2714_call = mod.get_global_var('func_2714')
func_2716_call = mutated_mod.get_global_var('func_2716')
call_2754 = func_2714_call()
call_2755 = func_2714_call()
var_2775 = relay.var("var_2775", dtype = "float32", shape = (13, 5, 7))#candidate|2775|(13, 5, 7)|var|float32
bop_2776 = relay.equal(call_2754.astype('bool'), var_2775.astype('bool')) # shape=(13, 5, 7)
bop_2779 = relay.equal(call_2755.astype('bool'), var_2775.astype('bool')) # shape=(13, 5, 7)
output = relay.Tuple([bop_2776,])
output2 = relay.Tuple([bop_2779,])
func_2791 = relay.Function([var_2775,], output)
mod['func_2791'] = func_2791
mod = relay.transform.InferType()(mod)
mutated_mod['func_2791'] = func_2791
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2792 = relay.var("var_2792", dtype = "float32", shape = (13, 5, 7))#candidate|2792|(13, 5, 7)|var|float32
func_2791_call = mutated_mod.get_global_var('func_2791')
call_2793 = func_2791_call(var_2792)
output = call_2793
func_2794 = relay.Function([var_2792], output)
mutated_mod['func_2794'] = func_2794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2693_call = mod.get_global_var('func_2693')
func_2695_call = mutated_mod.get_global_var('func_2695')
call_2809 = relay.TupleGetItem(func_2693_call(), 0)
call_2810 = relay.TupleGetItem(func_2695_call(), 0)
func_1906_call = mod.get_global_var('func_1906')
func_1907_call = mutated_mod.get_global_var('func_1907')
call_2813 = func_1906_call()
call_2814 = func_1906_call()
func_58_call = mod.get_global_var('func_58')
func_60_call = mutated_mod.get_global_var('func_60')
var_2823 = relay.var("var_2823", dtype = "float32", shape = (504,))#candidate|2823|(504,)|var|float32
call_2822 = relay.TupleGetItem(func_58_call(relay.reshape(var_2823.astype('float32'), [12, 6, 7])), 1)
call_2824 = relay.TupleGetItem(func_60_call(relay.reshape(var_2823.astype('float32'), [12, 6, 7])), 1)
func_2308_call = mod.get_global_var('func_2308')
func_2310_call = mutated_mod.get_global_var('func_2310')
const_2831 = relay.const([[-5.821647,-2.403893,-4.839662,9.628868,9.916822,8.372720,6.989273,7.248751,1.037175,5.559259,-3.005599,-4.813066,-9.077714,-8.768756,6.771298,-4.429464,-4.879021,2.619269,0.206376,3.181676,-5.146616,0.739500,-1.194562,-0.398251,-5.432876,4.878453,8.456154,-7.769734,-3.641161,-0.885877,1.446305,8.996425,1.848155,2.512999,7.129149,8.525814,8.824888,4.024435,-4.325727,7.525314,3.502240,1.650816,-4.394397,9.351696,-8.083831,-2.382979,-1.835937,-2.200225,-2.410708,-4.862842,-6.394787,2.629481,9.228244,0.287456,3.615159,-8.693125,-3.193334,2.103953,0.080050,5.862612,2.995721,3.269662,1.253905,4.469347,2.221504,8.722994,-6.833406,3.571266,-7.019378,1.490770,3.300120,-1.918732,0.354227,-9.715948,-2.904063,-0.275189,-2.463339,2.374258,6.230278,6.189054,5.069801,9.027372,-4.004888,5.264612,3.986381,-6.543007,-2.697313,-8.111787,-1.990975,-5.640589,-0.226851,-8.698982,-6.217137,-3.616988,1.524716,3.932553,7.739924,-0.675572,9.816677,-6.224475,-7.953410,-0.547837,5.537621,-5.979088,1.259682,5.596718,7.028731,-5.310302,2.103592,-3.354406,3.915147,7.499488,-8.583280,-8.356280,5.921788,-9.292047,5.079661,-5.731237,-4.022558,-3.729461,5.893350,6.390861,-0.166082,8.658906,4.486658,-2.393370,7.626405,1.482416,6.944556,5.876748,-2.807217,-0.558733,-2.013652,-2.027616,8.998155,8.855093,-5.556525,6.071887,-8.701735,3.821854,-9.749535,-6.275243,6.660076,0.360910,5.439418,-4.164685,7.395780,2.559147,5.352050,-4.201706,6.395488,-8.812162,-9.829192,-9.194547,-0.877556,-8.742112,2.156995,-3.343271,-0.136864,0.867516,-1.351005,3.124527,-8.956079,-3.872303,3.492587,-0.661193,-2.027497,-5.112379,-4.868876,7.967899,-6.015391,-1.791769,1.700307,9.223525,-1.489250,6.343547,-0.620249,-5.699424,-5.363859,-0.755113,7.557618,-9.083940,2.778310,0.024987,4.407283,-1.367122,-1.972661,8.839109,6.241718,-2.137028,7.915332,4.422115,-3.692671,-2.068212,-8.775869,-2.146795,6.677534,2.565418,-5.561507,-8.682871,4.088713,1.875405,7.418709,4.273130,2.261739,4.313450,-4.660679,-7.037897,-4.943803,2.074121,-2.623442,1.325499,-2.535402,-9.000325,7.208049,-7.790002,-5.701580,-8.289555,-4.728373,-3.138042,9.181803,-7.374340,-5.013821,4.677135,3.825820,1.799449,-6.656208,8.367628,6.472714,2.609978,-6.404549,-7.934713,-8.480309,0.968301,-0.208826,-9.204366,1.394377,6.133344,-0.602387,-9.077380,5.260633,5.740630,-8.525389,-6.504732,-9.704085,-1.336320,6.320460,7.158543,-6.090642,-2.690093,4.272898,-6.723668,6.960179,-1.245970,-1.524892,9.594684,1.234970,-5.002966,4.045926,7.366805,-3.412692,5.244320,-4.164886,0.181468,0.599189,-4.859979,5.934749,0.692083,-2.488069,-8.044807,-6.855401,2.391761,-9.358082,-3.244757,-9.773264,9.166905,5.708726,1.443073,-1.283038,-3.504485,-1.421858,-3.327241,-9.627607,9.639542,1.408077,8.331627,0.303850,7.799832,-1.262001,-6.500397,-4.103163,-3.260789,-6.880127,9.670934,-2.777345,-6.445162,-3.139950,-8.052364,-5.021520,-0.986941,6.444360,2.462396,-5.463300,-2.405979,-9.897710,5.735511,9.228547,7.138040,7.760711,-0.107422,-2.913694,1.734238,7.840194,6.394863,3.813204,8.619243,-0.773977,6.304069,-2.105236,7.195402,-3.216257,5.661357,-2.703780,6.262118,5.018122,-5.636392,-8.541230,4.764772,0.425912,8.668723,-7.089270,-7.411872,-9.004882,4.295891,4.427568,0.648157,3.245619,1.341089,6.629623,-6.434066,-8.322570,7.059779,-3.220243,-7.583315,9.431456,-8.955570,1.212328,-3.547046,-0.974179,-0.922971,8.147707,-4.148594,-4.087561,-6.628305,-6.933789,-3.300298,3.435850,-5.957996,-4.776925,-5.113411,-9.098270,1.188812,0.390474,8.258893,0.750275,7.270914,-9.773652,-9.095786,-4.782112,-9.056909,1.857579,9.696147,-6.124870,-7.237365,3.837141,5.646518,1.708573,7.622127,-7.972867,-6.396785,-5.290991,-0.771634,6.749009,3.054488,-6.137549,7.258078,-6.139321,-1.989165,-3.077616,-3.724623,2.638091,2.919956,-4.468333,9.758051,-0.908191,9.676728,-7.656325,9.094300,-7.627169,0.196013,-3.266697,-9.669727,2.190026,-5.767869,4.756441,6.899635,-4.428908,1.793558,0.149597,1.142305,-5.496124,-1.641572,6.626151,1.327245,-8.364566,-4.882911,0.710415,-6.182323,1.479960,-1.279870,8.716281,-8.159159,-2.557424,-5.408901,-1.129651,6.311084,-9.061797,0.167133,6.225100,7.568279,2.031465,3.164666,-7.280535,-8.452303,-3.846934,-3.393111,-2.612269,8.592494,-8.175087,2.296740,1.787165,-6.717524,-1.206688,8.905961,-7.885488,-1.715554,-0.802127,-0.842255,7.944879,6.802862,7.811473,5.056395,-4.042737,-2.704207,-9.050116,1.694817,4.703288,-1.109126,-3.437492,2.651694,-0.611154,-2.793239,6.071048,-5.662480,2.767661,-2.441661,4.874166,9.366833,-9.104594,1.634284,5.993348,5.775731,-2.674514,-6.061292,0.021224,7.855831,8.391308,2.341630,-9.016463,3.986298,5.900393,-0.423653,1.797461,-9.309424,6.533488,0.997963,-2.068927,6.734837,-2.039814,0.126015,-6.216905,5.586354,1.121384,-6.562078,-7.796962,2.913450,-5.564084,0.719512,8.870251,5.591318,3.584928,2.572311,9.747729,-2.080934,4.028437,-4.229955,-3.680125,0.229698,-5.475814,3.688294,-5.875382,-8.971066,-5.390788,-5.378670,2.200279,-9.238641,-4.101698,-8.818474,1.275814,7.270655,9.848774,-7.254397,-4.215172,4.596589,2.755716,4.063602,1.434066,-6.474891,6.456067,-5.602104,9.253982,5.583113,-2.737172,8.457060,-4.100557,-2.777040,-0.822905,5.944317,8.015255,2.920818,8.247869,-1.499946,-1.976513,-4.651891,8.350600,-5.909646,-7.841946,1.153332,-7.912966,-3.695402,9.771540,-9.055536,1.417597,-6.115976,-2.269616,6.910157,8.949111,-8.297735,5.071375,1.703058,8.671020,0.881418,-9.858985,8.558235,8.218078,0.991925,-8.390154,4.472638,-6.706046,-0.202753,2.388580,-2.589338,4.514188,1.821185,-8.517244,-4.122276,-2.263178,7.745032,-9.042694,8.861817,-1.581636,-9.253042,-1.706107,-1.492345,-8.366078,3.199071,-1.250555,-9.374592,4.069891,-3.938870,-6.927321,6.774517,-0.637449,0.378349,3.861969,0.264039,-3.826154,5.671923,2.719742,9.700441,-2.523622,3.978337,-5.937663,8.488939,5.574710,1.898807,-5.915782,5.686248,2.482325,2.144871,6.629700,-7.134492,-6.085649,4.509902,6.366223,6.358776,7.681225,1.430267,-1.025951,8.999862,-5.723341,-6.944468,-3.661829,-8.924069,-3.255396,-0.921995,-6.812148,2.595438,-9.878740,-3.465844,7.903082,-3.951891,-1.856002,9.578169,-5.849087,6.341675,5.716942,9.867767,4.601841,-6.202329,8.007974,7.857146,7.062406,-2.785939,9.044786,-2.132835,2.579599,-0.502752,-9.338095,-2.661241,-8.091641,1.892581,2.220997,2.789284,-8.667346,7.765724,0.979815,4.770594,2.347505,-5.193913,-0.203467,-1.741416,1.201164,-3.963802,-8.362457,-1.517841,-8.687491,-3.890751,-2.711879,-6.125762,5.136952,-2.289671,-3.127221,-3.485362,-6.823547,4.921816,4.899505,-9.813489,-9.170916,-7.140077,2.550907,8.523608,-0.487885,-5.113526,-4.686502,-3.996752,-9.725058,-8.223906,-1.535465,-9.881673,9.227327,-0.594060,8.269634,-9.502707,0.508093,-2.449094,8.185027,-4.917945,-0.382651,1.682983,0.368416,-7.570982,-2.028380,-2.997324,6.099285,1.396498,-7.990771,4.251098,-1.397225,6.409381,-5.751536,1.099717,-4.377710,-4.009463,-0.674822,2.880203,9.220566,0.744037,-2.586217,-3.529128,-9.725955,-7.631126,2.170409,7.610737,3.215241,5.151943,-0.314558,-9.165600,-4.577815,5.395741,-7.791150,-2.417584,3.739580,0.464418,-5.333422,5.481618,-4.096556,9.159498,-3.865101,1.933240,-7.241023,4.114582,1.892373,1.570967,-3.091952,-3.028005,2.701489,-8.259110,-1.095136,-2.649319,-1.336735,-0.031528,5.158398,-5.875552,-9.796756,-6.187758,0.572477,9.548354,4.942837,-4.191103,-2.508951,-6.994792,-6.484579,-5.028301,-9.240221,5.287512,-8.048478,0.926953,1.411700,5.712553,-1.148953,-2.962570,-9.828333,-1.151230,-6.056214,8.423420,-1.382045,-3.449872,8.533882,1.234609,5.911407,-2.097217,-1.827710,-6.022511,5.817804,3.349744,3.988816,8.195686,-3.638944,7.769053,7.799746,0.810189,-2.998346,-5.386579,-0.958204,8.707710,-6.513676,3.625268,-8.818013,-6.061791,-4.841308,8.690111,-1.074732,4.939761,-8.092748,5.724485,4.778431,3.596478,0.182412,5.567907,-7.886867,9.398974,-6.339670,2.551286,-0.587035,5.290321,-5.377549,-0.076007,9.894958,4.215054,-9.758512,0.279491,8.843981,3.719414,-9.383219,-7.468535,-7.699004,1.483958,-7.541486,6.360210,0.414852,2.194927,5.065168,-3.723618,4.856939,-8.469063,-3.977465,-0.690483,4.144194,-0.848180,-4.749810,-6.454843,5.628201,-1.436714,-3.065712,-5.547770,-6.588794,7.030096,-3.452821,-9.360983,9.192178,7.562461,3.759436,5.006630,-6.886805,-4.902694,-1.408719,2.497753,5.586397,-9.647011,2.924969,7.462030,-0.845840,0.048283,-1.906216,4.063513,-9.647356,9.423922,-6.190463,-5.025806,9.328923,8.483280,7.958256,1.809672,-3.529087,4.826952,-6.938831,6.270996,2.423441,3.872091,6.174740,-5.040697,-3.271931,9.049208,-7.200216,7.026992,-7.097146,-7.878669,9.648126,-3.812521,9.218034,7.386842,-1.612627,-4.293393,7.550444,7.420508,-3.876013,-2.560388,-6.141648,4.504286,-8.533029,-1.326568,-7.811284,-7.244777,-9.581730,4.365098,-8.660929,1.419253,-5.048894,3.149926,-6.213444,-7.314074,-1.362318,8.630260,-1.677919,2.731936,9.795403,3.479202,-2.312047,6.890011,6.122177,-8.474588,6.607280,-9.895062,-8.606923,2.471087,2.393539,7.219201,-8.507490,-4.434253,-0.942332,6.444716,6.789741,1.746213,7.415547,-6.752600,8.906601,-4.006405,-5.657472,-2.690024,-9.595089,8.743277,7.451780,6.370295,9.762808,-9.329367,-4.424406,7.893249,1.349801,9.919297,2.321059,2.481500,4.984808,2.375781,-0.685325,-8.873847,1.033588,-4.637969,-0.832963,8.908880,3.656416,0.762867,9.299009,3.798968,1.791525,2.273669,-7.617977,-1.003873,0.555316,-6.715456,7.060238,-0.246283,-3.567971,-0.433609,8.253726,5.805296,1.268812,-7.929595,0.851266,0.084807,-4.564681,-6.665092,4.595869,-6.759703,-9.695045,4.203528,0.413201,0.458165,-3.508347,2.770831,0.726274,9.457268,3.428704,9.465096,4.181905,-8.618798,-0.819940,4.115825,4.552712,-2.962638,-0.430520,4.836809,7.257688,8.934790,-2.345653,6.671427,1.685280,0.740403,-3.744910,-5.735610,3.400438,-0.289692,4.441148,-9.998579,7.678229,-9.493257,-9.659684,-9.258701,-5.741938,4.270835,-6.780809,-4.161344,8.170863,-7.716991,1.261222,-9.927889,5.993937,-6.202735,-7.441876,4.244696,0.809452,8.323993,-5.240301,4.521282,5.193483,5.368847,-3.948148,-3.146081,6.002751,8.360166,1.231286,-0.201631,-2.166060,3.012272,1.342213,8.432005,-1.882004,-4.891088,-5.440805,-0.176429,-4.535229,8.531493,2.480352,2.843615,-8.511197,9.832545,-9.924139,1.036954,-7.601659,5.147760,2.814342,-5.037268,6.823923,-8.075075,3.788916,7.093602,7.833691,-9.263807,-8.053661,7.880109,-9.325985,-5.650349,-7.136027,-2.453490,-2.254623,-4.152100,-1.364176,-7.295789,8.097554,0.551409,5.331823,9.814981,9.281009,3.362387,7.619432,-4.503451,-5.232016,-8.750636,-9.359076,3.374856,-4.038484,5.659918,4.999875,-1.983967,-3.389969,7.254224,-9.347093,-8.021635,-4.685384,-0.214559,6.406789,4.092039,8.586903,-1.420896,-9.417780,7.867144,-4.350077,2.007659,-5.570453,-9.344553,1.714517,-0.214583,-8.282680,0.206682,-4.839666,-9.758098,5.497449,6.686353,0.721264,-7.055835,-7.691027,-0.709347,-6.914134,-9.696425,4.530393,-0.808671,-9.962991,0.859405,0.673008,3.429296,-4.741122,6.246300,9.009332,-7.885834,9.781401,5.436132,-5.152542,-5.993294,7.448527,3.364739,1.045930,-7.990293,-9.536173,9.550672,-3.340668,-9.086631,-4.662221,-8.353414,-4.901571,5.480650,-7.447112,1.635217,-3.373763,9.068578,-6.911699,1.308964,-8.976574,3.234468,6.265513,3.626436,0.271389,-9.955753,3.194309,-9.387151,1.070087,7.283323,-8.895831,9.548852,-0.835947,-7.651632,8.743235,7.555018,0.299625,5.549538,1.011065,7.801546,-8.751726,-9.948193,-6.048794,4.399843,-5.139568,5.415986,-9.980752,-1.699659,-7.673963,5.097439,-9.860474,1.920919,-1.540092,-2.221953,4.803675,-3.323220,2.694494,-2.665845,2.639149,4.321930,-9.907001,-4.709564,9.296096,-4.500958,-1.879186,-7.334709,-6.463735,-9.681572,-1.731032,-1.252774,-8.694859,9.480245,7.978814,-9.811836,2.456614,2.872885,-7.206421,-5.069539,-0.370333,9.464843,4.126141,2.763264,-3.624235,-3.150201,-3.864560,-7.563526,0.636602,-0.093242,1.077877,-9.525207,-6.083654,0.562480,5.261758,3.208710,-1.802191,-6.365530,-6.630993,4.534143,-2.491363,3.822402,-4.349930,7.375065,4.300427,-8.838674,-4.564905,8.701556,-3.708577,-9.923360,4.095307,0.204350,-0.220847,8.767765,9.896378,6.294949,-5.364443,-7.804686,3.900786,-8.068093,4.961235,8.192404,9.674360,8.008344,3.040393,-8.805592,1.540582,-4.024591,2.598312,-9.968967,-1.179730,-0.600118,-3.981818,5.766743,2.838151,-7.297499,1.457553,-3.325565,-6.435044,-2.220175,4.627615,-1.445463,8.642056,9.122376,-7.806169,9.358308,0.717210,7.953033,4.978908,8.109978,8.563539,4.023375,-5.637359,1.231680,4.012723,-3.690860,-9.712975,0.494250,-8.179438,2.968842,-9.346700,8.532885,-3.096091,1.458426,-1.090811,-3.447281,-5.182638,-2.779135,-2.738027,-5.995586,6.851434,-6.709408,5.285471,7.208440,-6.186536,4.226062,-1.744612,2.404490,0.390912,-2.983393,0.517945,8.025787,-7.865964,-0.022146,-1.579826,0.946217,-1.946075,2.954288,1.037294,7.919847,2.858572,4.294144,8.429765,0.548459,3.595147,-9.599450,-8.591656,3.653732,8.662509,4.955912,-7.687055,-1.135773,6.297283,-3.313157,-7.852566,-5.317776,-9.850355,0.421853,-6.241405,9.021995,-8.928612,6.350761,1.981721,-5.051308,-8.223804,-9.382287,-9.675112,5.961340,5.330297,-7.005701,1.960476,4.315642,-3.444702,-7.513767,2.631647,0.901224,6.647024,7.222085,9.643483,-7.263689,0.040857,-6.923837,6.408465,4.580601,5.460642,-4.146376,8.631114,2.545750,6.155673,-8.774346,3.252302,-6.561620,-1.908823,8.503750,4.437862,-2.265228,5.709210,-4.408595,-4.652477,1.457351,-9.571990,5.245745,4.426827,1.755180,-9.881103,-1.281217,9.167419,-7.727031,-2.660459,2.951659,3.820271,-7.798954,-1.047763,8.841642,3.277118,2.615027,1.072677,3.709527,0.249843,0.955013,-9.158589,1.930491,-8.340332,-8.657090,9.779475,4.852474,9.238674,2.684503,-2.775290,-6.998007,1.078633,2.850782,-6.936458,-0.633298,-5.329496,7.673496,8.257380,-7.253816,1.171001,-0.890544,2.599243,3.502875,5.853168,-5.574062,-1.616685,7.022787,-7.365787,-2.100872,1.385507,-9.238320,-6.231990,7.055892,-1.817703,2.820431,-5.411935,4.868388,2.073516,-6.884596,0.200656,1.495560,5.035227,-9.444707,3.785258,6.368889,5.168099,-5.226242,9.114046,3.417356,-2.893079,2.773383,-2.120927,-7.873445,-7.702185,-3.203097,7.104306,2.306020,5.297272,4.579125,-1.644083,5.424039,-0.796913,5.600168,3.135709,-1.387700,6.011509,-7.986285,-7.669609,-2.891550,5.986377,-3.346331,-9.314542,-1.053405,3.460687,-3.761579,-4.483824,4.872918,-4.381642,-9.039293,1.826084,5.093772,2.294561,-1.315908,-1.626469,-1.046474,-6.324802,-9.018902,-2.716645,-4.745408,-9.329862,3.512251,-5.531610,-4.656400,7.131132,9.114594,8.666313,5.418366,-6.124106,-6.821065,-6.418959,1.085324,5.695771,6.143329,-3.091999,-6.439172,7.267679,8.695117,-8.832394,-3.867995,-8.011742,1.863287,-4.270280,-9.951700,-1.832523,0.894480,7.683673,3.618539,-8.353309,-9.785831,-1.858827,-7.915122,-6.460719,-9.674083,1.201643,-9.952450,-6.218228,1.826012,6.751761,4.610792,-9.667569,-5.839304,6.997255,-0.030627,3.888570,-0.089649,9.624088,5.150933,-2.552568,6.864981,-2.556068,-2.032741,0.957117,2.406344,6.913393,-7.320101,7.014260,-5.315839,5.637914,-1.853445,0.952975,-5.923504,4.633803,7.495612,0.694796,8.897026,-5.757012,-5.240375]], dtype = "float64")#candidate|2831|(1, 1560)|const|float64
call_2830 = relay.TupleGetItem(func_2308_call(relay.reshape(const_2831.astype('float64'), [13, 8, 15])), 0)
call_2832 = relay.TupleGetItem(func_2310_call(relay.reshape(const_2831.astype('float64'), [13, 8, 15])), 0)
func_2714_call = mod.get_global_var('func_2714')
func_2716_call = mutated_mod.get_global_var('func_2716')
call_2841 = func_2714_call()
call_2842 = func_2714_call()
output = relay.Tuple([call_2809,call_2813,call_2822,var_2823,call_2830,const_2831,call_2841,])
output2 = relay.Tuple([call_2810,call_2814,call_2824,var_2823,call_2832,const_2831,call_2842,])
func_2846 = relay.Function([var_2823,], output)
mod['func_2846'] = func_2846
mod = relay.transform.InferType()(mod)
var_2847 = relay.var("var_2847", dtype = "float32", shape = (504,))#candidate|2847|(504,)|var|float32
output = func_2846(var_2847)
func_2848 = relay.Function([var_2847], output)
mutated_mod['func_2848'] = func_2848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1906_call = mod.get_global_var('func_1906')
func_1907_call = mutated_mod.get_global_var('func_1907')
call_2869 = func_1906_call()
call_2870 = func_1906_call()
var_2871 = relay.var("var_2871", dtype = "float32", shape = (13, 5, 15))#candidate|2871|(13, 5, 15)|var|float32
bop_2872 = relay.floor_mod(call_2869.astype('float64'), var_2871.astype('float64')) # shape=(13, 5, 15)
bop_2875 = relay.floor_mod(call_2870.astype('float64'), var_2871.astype('float64')) # shape=(13, 5, 15)
func_1214_call = mod.get_global_var('func_1214')
func_1219_call = mutated_mod.get_global_var('func_1219')
var_2878 = relay.var("var_2878", dtype = "int32", shape = (90, 20))#candidate|2878|(90, 20)|var|int32
var_2879 = relay.var("var_2879", dtype = "float32", shape = (324,))#candidate|2879|(324,)|var|float32
var_2880 = relay.var("var_2880", dtype = "float32", shape = (504,))#candidate|2880|(504,)|var|float32
call_2877 = relay.TupleGetItem(func_1214_call(relay.reshape(var_2878.astype('int32'), [15, 12, 10]), relay.reshape(var_2879.astype('float32'), [324,]), relay.reshape(var_2880.astype('float32'), [504,]), ), 1)
call_2881 = relay.TupleGetItem(func_1219_call(relay.reshape(var_2878.astype('int32'), [15, 12, 10]), relay.reshape(var_2879.astype('float32'), [324,]), relay.reshape(var_2880.astype('float32'), [504,]), ), 1)
output = relay.Tuple([bop_2872,call_2877,var_2878,var_2879,var_2880,])
output2 = relay.Tuple([bop_2875,call_2881,var_2878,var_2879,var_2880,])
func_2923 = relay.Function([var_2871,var_2878,var_2879,var_2880,], output)
mod['func_2923'] = func_2923
mod = relay.transform.InferType()(mod)
mutated_mod['func_2923'] = func_2923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2923_call = mutated_mod.get_global_var('func_2923')
var_2925 = relay.var("var_2925", dtype = "float32", shape = (13, 5, 15))#candidate|2925|(13, 5, 15)|var|float32
var_2926 = relay.var("var_2926", dtype = "int32", shape = (90, 20))#candidate|2926|(90, 20)|var|int32
var_2927 = relay.var("var_2927", dtype = "float32", shape = (324,))#candidate|2927|(324,)|var|float32
var_2928 = relay.var("var_2928", dtype = "float32", shape = (504,))#candidate|2928|(504,)|var|float32
call_2924 = func_2923_call(var_2925,var_2926,var_2927,var_2928,)
output = call_2924
func_2929 = relay.Function([var_2925,var_2926,var_2927,var_2928,], output)
mutated_mod['func_2929'] = func_2929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2409_call = mod.get_global_var('func_2409')
func_2410_call = mutated_mod.get_global_var('func_2410')
call_2947 = relay.TupleGetItem(func_2409_call(), 0)
call_2948 = relay.TupleGetItem(func_2410_call(), 0)
func_2078_call = mod.get_global_var('func_2078')
func_2079_call = mutated_mod.get_global_var('func_2079')
call_2950 = relay.TupleGetItem(func_2078_call(), 0)
call_2951 = relay.TupleGetItem(func_2079_call(), 0)
output = relay.Tuple([call_2947,call_2950,])
output2 = relay.Tuple([call_2948,call_2951,])
func_2955 = relay.Function([], output)
mod['func_2955'] = func_2955
mod = relay.transform.InferType()(mod)
output = func_2955()
func_2956 = relay.Function([], output)
mutated_mod['func_2956'] = func_2956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2212_call = mod.get_global_var('func_2212')
func_2214_call = mutated_mod.get_global_var('func_2214')
call_3000 = relay.TupleGetItem(func_2212_call(), 0)
call_3001 = relay.TupleGetItem(func_2214_call(), 0)
func_2023_call = mod.get_global_var('func_2023')
func_2026_call = mutated_mod.get_global_var('func_2026')
const_3003 = relay.const([[3.683478],[-2.108366],[-9.013691],[8.088559],[-0.674580],[3.792089],[1.946980],[-3.955390],[3.598423],[-8.955023],[-9.291925],[2.342660],[-3.140578],[1.790074],[9.823728],[-8.627492],[8.277267],[-2.061751],[-3.224860],[0.675251],[3.430297],[-6.890632],[6.046966],[3.122506],[9.837618],[-9.812216],[9.411815],[-2.960998],[3.521811],[9.936683],[-0.668527],[9.692754],[-9.569612],[2.396226],[9.893505],[-5.917132],[-3.304831],[9.676593],[3.195322],[-6.118172],[-5.646857],[-1.169192],[-1.681701],[3.373477],[-7.021982],[-6.081360],[-4.057009],[-5.008543],[4.556055],[0.745610],[-0.953253],[-0.279268],[-9.886884],[0.949712],[-4.422113],[-0.022994],[-1.588011],[8.480679],[-9.424243],[-3.904064],[1.129560],[7.151801],[-9.460997],[-8.419112],[4.071875],[-0.691802],[3.375360],[-1.628337],[-9.624830],[1.371906],[0.044834],[6.963581],[6.817956],[-8.028663],[2.419034],[-9.582315],[2.148841],[-8.681859],[-4.413397],[-1.495831],[-6.939051],[6.265509],[5.420582],[5.103971],[1.306396],[-8.330551],[5.032746],[5.570282],[-0.671192],[-2.010963],[-2.771723],[-0.674452],[-2.706720],[-3.126213],[-3.861969],[-4.622419],[9.253508],[-9.127747],[-8.467703],[1.673721],[4.409327],[-9.801681],[2.584885],[1.130387],[-4.767373],[-7.329374],[-6.305696],[-2.352650],[5.675223],[0.381127],[7.174267],[2.425317],[-4.259440],[1.753565],[6.497788],[-0.817270],[4.607158],[2.834898],[-9.092453],[-0.986890],[-1.443644],[-6.360769],[-1.486658],[9.655734],[9.865069],[9.110692],[3.922519],[8.854689],[-1.878330],[-3.057697],[7.970973],[-2.227405],[1.149896],[-1.399832],[-9.923013],[-7.300451],[6.582604],[-0.076283],[-2.510083],[2.863952],[-5.677238],[-1.066985],[9.295476],[8.166612],[1.843916],[-3.064731],[0.571757],[4.886605],[-9.941525],[-6.315467],[-9.868528],[-9.397752],[2.045620],[4.202275],[-9.998537],[1.002279],[9.575175],[-0.161409],[-1.154803],[9.183562],[0.742174],[-6.257959],[-0.311732],[-6.660746],[1.052537],[-8.036007],[8.822247],[5.686950],[5.475550],[-0.613670],[-0.410052],[-6.077863],[-7.536170],[-2.320191],[8.421420],[-0.766871],[9.696141],[4.487025],[-5.925533],[5.408338],[-7.727343],[3.287371],[-1.212682],[3.735950],[-7.177174],[3.836288],[6.258435],[-2.922069],[1.506344],[-5.079319],[-2.105376],[5.960596],[-6.281908],[-5.413960],[-6.745841],[-9.343325],[2.774709],[0.877361],[8.927268],[4.777438],[-2.491075],[-7.354631],[-6.818562],[2.006975],[0.063154],[-2.518336],[-3.438272],[-7.263004],[-6.420697],[9.515070],[-0.954863],[-3.460190],[-4.262145],[1.539471],[-4.610214],[2.082253],[0.861548],[-4.870178],[-0.079418],[6.054359],[-3.383389],[-6.542705],[-2.662799],[2.249510],[4.362609],[4.045467],[-3.459736],[6.853093],[8.597974],[-9.605614],[9.113042],[6.048165],[8.708784],[-6.267799],[2.102831],[-0.804527],[-5.313711],[5.744394],[6.748552],[7.055503],[6.280988],[-9.921452],[-9.752734],[-9.266676],[-0.425030],[2.345807],[-8.264289],[-1.219089],[7.234450],[-4.834693],[7.533583],[-9.167336],[3.684024],[-0.210882],[-0.160030],[5.300647],[-9.658940],[9.332549],[4.887165],[2.159682],[9.998707],[3.199344],[3.066838],[1.226731],[-8.117522],[9.353878],[-3.737217],[0.169620],[0.015067],[-1.876536],[-6.670563],[-5.159737],[4.057111],[9.361602],[9.702244],[-2.002428],[-3.245661],[4.349134],[-0.544224],[-8.653266],[-9.193133],[-5.283912],[7.836010],[-6.047673],[7.544758],[-9.503784],[-4.606853],[-8.131534],[-0.055654],[-0.939814],[-2.096244],[-7.709418],[-5.050060],[-5.034168],[6.500413],[8.787294],[3.898628],[-6.805259],[-4.320672],[4.717269],[-3.380728],[7.465507],[-8.240132],[-1.150375],[0.667357],[1.443592],[-3.642734],[-2.514762],[6.394624],[1.813180],[5.048836],[-4.712667],[-8.869411],[3.768686],[7.882034],[-1.879087],[-4.039758],[-3.395447],[5.445376],[-1.161533],[8.754168],[5.067760],[8.763099],[-1.478203],[-8.119773],[6.565071],[-0.167991],[-3.194190],[1.847362],[0.639319],[0.813873],[-8.049769],[3.239260],[-0.882388],[1.111324],[-3.563913],[-7.553246],[-7.226057],[5.007524],[-1.068836],[-4.991117],[-2.583403],[9.803556],[4.468987],[-0.366313],[8.051458],[-7.733632],[-5.115217],[-7.815758],[7.696767],[9.775481],[-8.245720],[0.313067],[1.052285],[9.837617],[-0.480899],[-5.365153],[7.933596],[-8.866361],[-4.601859],[7.304944],[-7.472029],[1.629847],[-2.136216],[2.881843],[7.069837],[3.355810],[1.889915],[0.055000],[0.363170],[-2.868275],[-0.936278],[-9.734723],[8.970817],[8.587212],[-3.678816],[0.315646],[-8.887391],[8.649423],[6.659127],[-8.260748],[4.895763],[-6.256947],[-0.654250],[2.741516],[9.151243],[-3.706544],[-6.882976],[9.650211],[0.268748],[8.584926],[1.376779],[-2.015065],[0.026316],[-6.244525],[-5.529049],[-4.909250],[-0.798054],[-9.458464],[-2.445923],[7.144846],[-8.009178],[3.484683],[-8.887881],[-0.456602],[1.211024],[3.551684],[-8.997030],[2.843588],[6.133701],[-8.168496],[-0.999004],[8.924080],[-2.706540],[-9.464455],[-7.355504],[-8.256260],[4.974202],[8.328313],[-2.820486],[7.832132],[-6.286730],[-6.887069],[-7.077800],[-1.662838],[-0.809100],[6.927175],[1.282909],[0.812480],[4.868488],[-9.789496],[4.161853],[-4.088026],[4.452739],[1.776534],[8.100302],[5.912489],[4.758575],[-4.785532],[6.079362],[-0.667509],[-9.608632],[9.963594],[-7.208812],[4.409505],[-9.441774],[1.630358],[-9.167687],[-4.201693],[-2.920919],[2.925447],[-2.392980],[7.867957],[-1.640029],[0.223797],[-6.682063],[2.027845],[4.950095],[4.577921],[-3.613196],[1.245461],[-9.044020],[-9.398112],[-1.092455],[-5.906642],[-6.991015],[-8.844756],[2.075315],[9.094900],[-1.038005],[8.557892],[-3.094355],[2.757788],[6.658156],[0.661563],[2.149030],[-4.750757],[-6.135268],[-6.468912],[1.215073],[6.134620],[-8.272407],[-8.880296],[1.912465],[3.011658],[-6.015371],[-0.858045],[-5.672141],[6.628166],[-3.447911],[8.676984],[1.846247],[-4.495905],[-5.231661],[9.669151],[7.574295],[-5.792974],[-9.822995],[1.089080],[-3.287136],[5.024096],[-9.795669],[4.758413],[4.544871]], dtype = "float32")#candidate|3003|(504, 1)|const|float32
call_3002 = relay.TupleGetItem(func_2023_call(relay.reshape(const_3003.astype('float32'), [504,])), 1)
call_3004 = relay.TupleGetItem(func_2026_call(relay.reshape(const_3003.astype('float32'), [504,])), 1)
uop_3026 = relay.cosh(call_3002.astype('float32')) # shape=(12, 6, 7)
uop_3028 = relay.cosh(call_3004.astype('float32')) # shape=(12, 6, 7)
func_1139_call = mod.get_global_var('func_1139')
func_1140_call = mutated_mod.get_global_var('func_1140')
call_3029 = func_1139_call()
call_3030 = func_1139_call()
bop_3031 = relay.multiply(uop_3026.astype('float32'), relay.reshape(const_3003.astype('float32'), relay.shape_of(uop_3026))) # shape=(12, 6, 7)
bop_3034 = relay.multiply(uop_3028.astype('float32'), relay.reshape(const_3003.astype('float32'), relay.shape_of(uop_3028))) # shape=(12, 6, 7)
output = relay.Tuple([call_3000,call_3029,bop_3031,])
output2 = relay.Tuple([call_3001,call_3030,bop_3034,])
func_3038 = relay.Function([], output)
mod['func_3038'] = func_3038
mod = relay.transform.InferType()(mod)
output = func_3038()
func_3039 = relay.Function([], output)
mutated_mod['func_3039'] = func_3039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2449_call = mod.get_global_var('func_2449')
func_2450_call = mutated_mod.get_global_var('func_2450')
call_3070 = relay.TupleGetItem(func_2449_call(), 1)
call_3071 = relay.TupleGetItem(func_2450_call(), 1)
func_2109_call = mod.get_global_var('func_2109')
func_2112_call = mutated_mod.get_global_var('func_2112')
var_3083 = relay.var("var_3083", dtype = "uint8", shape = (1, 96))#candidate|3083|(1, 96)|var|uint8
call_3082 = relay.TupleGetItem(func_2109_call(relay.reshape(var_3083.astype('uint8'), [6, 16, 1])), 0)
call_3084 = relay.TupleGetItem(func_2112_call(relay.reshape(var_3083.astype('uint8'), [6, 16, 1])), 0)
func_2955_call = mod.get_global_var('func_2955')
func_2956_call = mutated_mod.get_global_var('func_2956')
call_3086 = relay.TupleGetItem(func_2955_call(), 1)
call_3087 = relay.TupleGetItem(func_2956_call(), 1)
output = relay.Tuple([call_3070,call_3082,var_3083,call_3086,])
output2 = relay.Tuple([call_3071,call_3084,var_3083,call_3087,])
func_3090 = relay.Function([var_3083,], output)
mod['func_3090'] = func_3090
mod = relay.transform.InferType()(mod)
mutated_mod['func_3090'] = func_3090
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3091 = relay.var("var_3091", dtype = "uint8", shape = (1, 96))#candidate|3091|(1, 96)|var|uint8
func_3090_call = mutated_mod.get_global_var('func_3090')
call_3092 = func_3090_call(var_3091)
output = call_3092
func_3093 = relay.Function([var_3091], output)
mutated_mod['func_3093'] = func_3093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2524_call = mod.get_global_var('func_2524')
func_2526_call = mutated_mod.get_global_var('func_2526')
call_3117 = func_2524_call()
call_3118 = func_2524_call()
output = call_3117
output2 = call_3118
func_3121 = relay.Function([], output)
mod['func_3121'] = func_3121
mod = relay.transform.InferType()(mod)
output = func_3121()
func_3122 = relay.Function([], output)
mutated_mod['func_3122'] = func_3122
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3199 = relay.var("var_3199", dtype = "float32", shape = (10, 9, 11))#candidate|3199|(10, 9, 11)|var|float32
var_3200 = relay.var("var_3200", dtype = "float32", shape = (10, 9, 11))#candidate|3200|(10, 9, 11)|var|float32
bop_3201 = relay.floor_divide(var_3199.astype('float32'), relay.reshape(var_3200.astype('float32'), relay.shape_of(var_3199))) # shape=(10, 9, 11)
output = bop_3201
output2 = bop_3201
func_3205 = relay.Function([var_3199,var_3200,], output)
mod['func_3205'] = func_3205
mod = relay.transform.InferType()(mod)
mutated_mod['func_3205'] = func_3205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3205_call = mutated_mod.get_global_var('func_3205')
var_3207 = relay.var("var_3207", dtype = "float32", shape = (10, 9, 11))#candidate|3207|(10, 9, 11)|var|float32
var_3208 = relay.var("var_3208", dtype = "float32", shape = (10, 9, 11))#candidate|3208|(10, 9, 11)|var|float32
call_3206 = func_3205_call(var_3207,var_3208,)
output = call_3206
func_3209 = relay.Function([var_3207,var_3208,], output)
mutated_mod['func_3209'] = func_3209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2078_call = mod.get_global_var('func_2078')
func_2079_call = mutated_mod.get_global_var('func_2079')
call_3211 = relay.TupleGetItem(func_2078_call(), 0)
call_3212 = relay.TupleGetItem(func_2079_call(), 0)
var_3213 = relay.var("var_3213", dtype = "bool", shape = (13, 5, 15))#candidate|3213|(13, 5, 15)|var|bool
bop_3214 = relay.bitwise_xor(call_3211.astype('uint32'), var_3213.astype('uint32')) # shape=(13, 5, 15)
bop_3217 = relay.bitwise_xor(call_3212.astype('uint32'), var_3213.astype('uint32')) # shape=(13, 5, 15)
uop_3218 = relay.asinh(bop_3214.astype('float64')) # shape=(13, 5, 15)
uop_3220 = relay.asinh(bop_3217.astype('float64')) # shape=(13, 5, 15)
output = relay.Tuple([uop_3218,])
output2 = relay.Tuple([uop_3220,])
func_3227 = relay.Function([var_3213,], output)
mod['func_3227'] = func_3227
mod = relay.transform.InferType()(mod)
mutated_mod['func_3227'] = func_3227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3228 = relay.var("var_3228", dtype = "bool", shape = (13, 5, 15))#candidate|3228|(13, 5, 15)|var|bool
func_3227_call = mutated_mod.get_global_var('func_3227')
call_3229 = func_3227_call(var_3228)
output = call_3229
func_3230 = relay.Function([var_3228], output)
mutated_mod['func_3230'] = func_3230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2636_call = mod.get_global_var('func_2636')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_3234 = relay.TupleGetItem(func_2636_call(), 0)
call_3235 = relay.TupleGetItem(func_2638_call(), 0)
func_2923_call = mod.get_global_var('func_2923')
func_2929_call = mutated_mod.get_global_var('func_2929')
const_3240 = relay.const([9.677807,4.455555,3.707469,3.732199,7.864088,3.222405,-4.910738,-4.814999,-0.198665,6.675041,6.711528,0.780866,7.180124,-2.794373,-7.100922,-3.962121,-1.546329,-2.355954,2.800289,-0.072540,9.991146,-5.541145,6.775648,9.676445,5.303324,0.558594,-4.167994,3.051848,4.367074,-5.138882,7.599488,2.236978,5.903078,3.954354,-3.851206,5.171926,7.531433,0.738750,-3.485667,8.801263,7.651134,4.917932,7.655939,5.931865,-7.085701,-1.445703,6.737485,2.369344,9.330843,2.252245,-4.591212,1.726830,-0.329962,5.980186,5.292522,1.454583,2.182221,-3.865316,8.954856,9.641669,7.398538,5.849130,5.805616,0.103179,6.649351,-3.422931,-4.124784,3.127294,-2.621590,6.054235,4.223064,-2.009241,8.529212,6.074597,5.015551,-5.324124,-7.123540,7.150898,4.014056,-3.648792,8.074951,-2.160789,-2.367749,4.356546,-3.015114,-4.362359,2.621565,-0.332960,3.632529,0.493479,-0.652973,-5.243420,7.594669,0.535766,-8.188168,8.571861,-7.829170,8.388100,7.130617,-3.905547,-9.482346,-3.025195,4.798201,-3.014825,-2.913316,2.487666,-3.808118,-6.121129,2.705200,-5.597641,3.911118,-8.809463,3.890122,4.599568,-8.206479,5.697141,-7.360504,-6.757874,-4.695840,1.346861,-9.246620,-2.125886,-4.747374,-2.638704,-2.483274,2.366335,-3.810792,0.991518,-8.426109,-6.868099,-0.400754,2.262684,5.208790,6.219856,-4.532011,8.620000,3.934308,4.384470,-9.854449,-8.746496,-8.871593,-4.136280,3.257050,8.014244,-2.253288,-6.506790,0.925768,-8.432531,2.139819,-2.043009,-6.426836,-2.421827,8.624468,4.233480,4.630851,-3.389685,4.206731,-5.711400,8.064618,-0.725614,1.580419,-2.080791,-2.453541,-0.411889,-5.808517,-3.912114,-3.068360,4.908928,-9.829221,2.309936,-9.810749,-5.903299,-3.284112,-3.374442,-5.154007,-6.510951,8.424171,-9.070294,8.200904,2.724143,8.782456,-2.183452,-4.624758,-2.728016,-4.921755,-0.512298,5.082391,-8.707587,0.799857,0.472718,-7.078569,9.568195,1.470706,4.342101,-8.883149,-9.109336,-6.780940,1.106013,-0.244102,-2.265261,8.574593,7.169955,1.370991,2.853576,-2.769818,-5.029292,-3.617707,-0.654630,6.257781,-7.906833,-0.832241,7.128468,4.557681,9.462917,-0.935512,-7.584359,-8.631556,2.614943,7.903446,-7.970502,8.608968,-7.030930,9.533545,3.545070,7.241057,-4.685404,9.947145,-2.710111,9.729129,-8.496850,5.515460,9.036332,0.344543,1.186279,9.542928,-2.387510,-5.619285,-1.776825,-2.479773,-3.105848,6.786657,5.062386,8.616135,8.482195,-1.340789,-9.650606,-5.629541,7.238602,-4.599782,3.363513,1.504139,0.763187,-2.800313,3.997973,0.609068,-4.528282,-1.896313,9.293126,-5.349343,-4.657947,5.699545,-1.231249,1.897884,3.406149,3.096921,9.729617,-1.030200,-7.704056,6.344245,6.522455,-5.881850,0.467695,-8.054471,-9.019939,-1.743602,6.626837,1.661229,2.569422,7.689148,9.830684,6.882806,7.390935,9.061843,3.945376,6.752041,6.454660,-5.682189,6.543673,-1.314208,2.312462,-8.641686,-9.004193,2.373082,-7.085587,-6.214272,1.039049,3.041336,3.129586,-8.029473,0.441722,-6.743969,1.585085,9.331487,7.278331,-0.737671,-8.569722,7.222012,7.865557,2.734230,8.767339,7.161381,4.002754,-7.799330,1.704070,4.952233,-2.030086,0.760687,4.362981,-1.711735,-1.723118,6.160325,-4.998526,1.037414,1.593184,3.934404,-2.343013,0.008840,2.478751,3.602313,9.844207,4.957773,-4.158555,9.249796,-0.601891,-5.675469,9.102898,0.087526,-7.422719,0.234228,4.796356,-4.114434,2.180704,-3.106182,3.417726,7.584917,-7.461626,3.680559,8.311588,-9.965962,-0.005035,2.596880,0.929720,1.298292,2.399435,6.780094,-1.487237,3.178156,-4.237570,-0.010561,9.633235,-4.061023,1.935661,-2.757565,-7.602992,-8.269433,2.958954,-1.955508,-2.963023,-8.900738,-5.277189,0.146066,7.611802,-9.765615,-1.770746,-3.503530,-2.091298,4.472803,-4.397317,6.577535,5.508265,1.299167,0.565413,3.792807,-4.828825,2.438130,4.344915,8.026505,2.368005,-5.120197,-5.411371,9.417003,9.261963,-6.352245,-8.702497,8.340811,7.451425,-9.381834,-3.721399,5.715979,3.948949,-0.730505,2.717309,-3.955774,1.225544,-8.389134,4.738719,6.121617,-1.915247,-2.419770,8.267107,-6.352127,-8.057294,9.708223,-4.868616,5.032472,2.722597,8.985035,0.101246,-9.532327,-2.582574,2.250169,-6.859915,6.890482,-4.774995,-0.285482,0.086296,0.836488,6.065794,-8.159427,0.617625,-0.720691,3.548843,1.429320,9.334911,-7.931167,-1.776126,6.849206,-9.276666,1.174237,-2.033923,-2.412128,7.475316,7.042980,-3.235914,-9.632926,-5.931147,-1.194421,-7.016337,-6.102394,4.898841,-7.559317,-2.052329,4.103732,-7.644626,-7.444334,-4.796381,-1.478514,-1.187793,-0.852893,2.783593,-6.223867,7.557089,-1.214904,-0.651885,2.941349,2.698497,0.276002,3.555852,-8.227546,8.852519,-9.348891,4.406513,7.408609,2.173650,-7.851907,9.100883,-6.556757,1.704485,-4.528217,2.641748,-0.152477,8.959609,3.658748,-3.517030,-4.567475,-5.400879,4.078481,5.445210,0.836273,-0.361529,-4.015611,-8.747212,2.077025,9.563896,9.792917,0.710637,7.082126,0.382398,-2.253542,-6.151815,5.286091,9.554974,-9.549850,-7.697037,6.591961,8.556170,-9.720330,-0.167363,8.090540,4.637035,1.034184,-3.203945,-9.609645,9.781422,8.364621,5.454983,-1.288266,7.713209,-1.880335,-6.058496,4.080998,6.185261,0.350248,0.144874,3.866053,0.816755,2.624847,7.391851,1.649093,-0.753914,-3.009812,1.563026,5.721405,8.938554,-5.906049,9.413331,2.186716,7.183884,2.898314,0.964750,-3.365322,2.999396,1.027707,9.475522,1.490246,1.269746,8.411995,-7.628548,-0.675987,-6.519141,0.469710,-5.236871,-0.395820,5.931346,-6.016118,-6.137483,5.856060,-0.859271,-8.053627,2.074729,-8.214670,4.021496,7.690568,-6.273390,2.357893,2.925256,-6.804979,0.217607,9.579497,-2.232647,-8.914432,-1.937684,-8.528555,-5.355756,-4.725853,-8.817871,-3.615228,3.443457,7.725559,0.110901,-9.260115,3.429413,-5.323310,-3.393815,3.743176,3.987196,1.356486,7.020265,6.101989,1.795579,4.110353,-9.879968,2.845523,-7.803696,8.274295,-7.438873,-8.842861,-9.700156,-6.104773,-1.495894,-6.397541,6.752109,-8.411877,3.626013,-0.109595,9.639094,0.095300,-2.195455,7.517147,1.654535,-5.549926,9.238876,-2.731613,-7.884561,-0.117686,-3.542964,-2.122284,-9.531863,4.952699,-3.258198,-0.736520,8.917950,4.510799,8.046306,-0.754267,1.121849,-1.674927,2.650206,9.565850,7.680860,2.252283,-0.011510,-9.554293,-1.823295,-8.692836,7.330224,-4.858233,-5.833905,-5.537408,3.864276,5.570340,-7.266801,7.141145,-4.614404,2.134588,-0.108365,9.540108,-0.979782,6.299511,1.272775,-2.475604,7.106560,-8.760321,-3.170261,2.211826,1.974280,9.470568,-7.188330,-8.356762,4.110617,-3.685154,-4.697598,-3.257164,9.596451,4.676186,5.116682,-3.545064,-7.467369,2.645666,3.408543,-5.423011,9.514386,-9.960720,-9.617030,-5.513635,-2.608676,2.062227,-4.059996,-2.412534,-1.589995,6.026623,0.198691,-9.208708,-4.523086,-2.354078,-3.699871,-1.924779,-0.240013,0.414984,2.509477,-4.503799,-7.285779,-5.379352,4.007377,7.633048,-6.440741,-2.580834,-0.460210,-6.036846,-5.470159,-0.771809,5.789389,-2.933895,-0.174477,3.207448,6.625207,5.941485,2.368879,-9.912246,-5.820782,-6.250791,-6.865355,-3.578333,0.704611,7.610807,-1.975942,-4.633573,3.836093,5.873823,-4.442617,8.326499,0.238079,-0.917694,1.991631,5.386813,-1.010263,-7.197703,-1.020911,3.880008,8.920240,7.718328,-8.610995,-2.349888,-8.912016,1.382071,-7.489811,-4.678986,-2.773844,-9.827179,-6.022413,0.345389,-0.399532,6.730366,0.657517,-6.605251,-5.193675,-9.167053,-0.364466,-0.772166,-4.157538,5.792577,-9.761468,-3.557749,-9.742043,-3.461780,3.977986,5.845136,-3.202615,-4.137418,8.001176,-2.251647,5.915615,1.538292,3.863095,-7.167786,9.010228,-7.194088,-6.214045,-9.316000,-5.453574,7.257442,5.823164,4.036811,1.511036,7.223728,-3.660012,-4.245295,-7.107362,3.005529,0.112188,8.340561,-4.328923,6.026721,8.838202,9.605151,-2.200951,4.769582,-4.749063,0.923031,-9.351259,-3.169211,4.660530,-5.368572,-9.451586,5.441908,-2.106103,7.160700,7.817341,7.661428,-7.924969,-5.473280,1.742376,-9.415836,-7.487367,9.694958,-5.235975,6.721178,6.763972,2.758902,-9.800513,3.978234,-4.821711,1.050581,1.715943,-8.222660,7.170472,4.910246,-6.862911,-7.249663,4.481300,4.505385,-0.245955,5.541763,5.889603,8.218377,-6.974023,-6.847913,1.459818,-2.493152,-2.958096,4.593934,7.379475,-2.277126,-5.735398,-6.897878,-6.505124,-2.430320,-5.234602,-0.270584,-3.112752,7.978753,2.212841,2.502979,0.083910,9.561165,-2.735637,-4.365922,1.537204,0.739367,7.470468,-2.374832,-5.139379,-8.153475,-4.764902,-4.394354,1.144658,0.961638,4.711458,1.689593,-2.006095,-3.090677,8.002724,-9.383070,5.493163,6.225408,1.017160,-3.678672,-0.687601,8.202070,-4.468446,9.101898,5.235383,-7.560485,-3.015133,-7.312885,-5.553957,0.464113,2.541722,1.434032,-1.741199,4.389541,-6.503057,1.179452,1.051083,0.423736,-8.906735,1.377492,-7.962678,-3.218361,9.226511,2.477087,0.791545,-4.190951,0.289071,6.465183,-0.859251,0.428769,-0.238120,3.936500,3.711094,6.778786,0.799054,-7.175051,-5.698222,-5.820855,7.821488,-7.132548,6.005252,8.716600,-3.209042,-0.070716,7.462851,6.701973,-2.308108,1.228072,2.033335,2.454610,6.851846,-2.776299,-1.107971,-1.853802,0.431517,-3.734551,1.437678,6.850159,-9.172241,-1.087484,1.657990,8.020986,-7.483052,-5.442318,-2.787499,-6.257901,7.200351,7.237058,-0.492199,4.859567,-6.313112,-4.103605,1.709012,4.085827,7.884003,5.676680,6.229624,-2.961354,-0.732784,-4.029319,-5.071940,-7.513484,6.127514,6.598652,7.594785,8.009759,-8.687556,2.121761,4.916336,8.189819,-0.222959,-4.223055,6.027113,4.182094,0.353313,-0.042333,9.084325,6.828794,2.215215,-5.677881,0.540515,-6.973152,0.743449,0.440446,8.539829,8.739784,2.145103,8.448650], dtype = "float32")#candidate|3240|(975,)|const|float32
var_3241 = relay.var("var_3241", dtype = "int32", shape = (450, 4))#candidate|3241|(450, 4)|var|int32
const_3242 = relay.const([[5.186075,-5.252144,0.105189,-7.239214,1.311326,-3.192643,-8.043043,-7.713310,3.336693,-5.816681,5.097471,5.242165,-0.797624,1.198667,1.744798,-7.985285,-1.621294,6.578125,6.932692,-6.340512,5.364261,1.105012,-7.119348,1.273009,-7.118728,9.284295,2.230014,5.966232,5.343099,-3.067641,7.740519,4.615428,3.525891,-4.596586,-1.938583,7.153719],[5.377958,6.025075,7.941725,5.859876,-1.335458,5.758746,9.814905,6.451826,0.878905,2.721125,-6.811130,-6.301790,6.678013,5.633095,0.843893,1.117076,2.832253,-2.440809,3.508439,-4.578750,-5.351183,1.915211,5.916348,-0.036508,-3.639493,1.184013,-1.095304,6.862251,-2.231582,5.991976,5.871465,-6.993914,3.040873,8.039368,-6.924849,-2.732680],[4.868879,-1.505669,9.712774,4.440351,-6.012930,-4.984469,-0.713604,-8.000151,-4.797042,-6.162850,-5.049558,2.148375,7.185987,6.896418,-9.419207,-9.528451,4.405890,-9.209679,5.121812,8.103758,8.115245,-7.651951,6.394774,-7.520562,-5.407634,1.002197,-9.505551,-0.666360,-0.524164,8.688659,-5.581307,-1.071683,7.036601,-4.060006,7.269083,-5.592716],[6.781072,-2.789485,-8.044081,4.606296,-5.463818,0.143660,0.713058,-0.211705,5.016673,-1.115437,-9.496269,-4.895369,-5.333329,-8.818204,-5.111023,-7.007883,-1.283193,-8.818403,7.682509,3.131692,-3.963610,-5.309591,4.070271,5.441990,8.605628,-4.834300,2.874453,5.374827,5.653631,2.132207,-5.354031,7.002536,-2.710507,5.746024,4.940790,7.674565],[-8.490664,8.856302,8.845349,-9.265449,2.244242,-7.748863,5.776810,-6.754229,8.079453,-8.703505,3.047502,-3.564359,1.870643,0.147972,2.045720,2.424996,9.627044,6.228079,5.840740,0.311174,-4.405663,7.492099,3.446915,-0.305993,8.942597,-9.535953,-2.799696,7.676049,7.590677,0.042777,4.793868,-1.887074,2.671593,8.882296,9.612536,1.939100],[-4.076855,-9.476753,-0.893453,7.273096,3.576110,-3.632708,-7.595726,-3.074851,6.392762,-9.981123,-5.545615,7.154805,-2.112022,-8.665746,3.535595,1.416964,2.658706,7.639016,-5.525082,1.057104,-5.419824,-4.536053,7.857949,-2.427844,-3.373538,-1.704841,2.364901,-4.636248,-1.020682,-8.468439,4.553060,-6.074923,1.506054,-0.452804,-5.048410,7.631649],[-7.207016,3.560279,-4.508077,-8.917977,4.099145,5.250899,-9.908377,-1.514227,1.831281,-1.714605,8.567834,0.480205,-6.912733,-3.103901,7.225285,6.234540,7.667787,-6.518068,0.150129,-6.600885,5.790104,8.292578,-1.674709,-4.547174,-7.799259,-6.172064,9.517821,-2.685139,9.920499,-7.453998,9.673606,-3.924411,1.343914,-7.130401,8.955539,2.633674],[5.032283,-8.275489,-8.952539,3.409918,7.634936,-6.395023,0.271159,-2.596624,-0.432670,0.520315,8.169827,-7.182606,-5.871580,7.889045,-6.116982,-3.037134,0.122973,0.197123,-8.884719,7.249165,-3.107358,-6.291041,-1.022624,-8.851640,-4.921802,-4.838861,-6.364197,-4.496440,-0.539341,-7.850761,-8.198704,-0.234424,-6.366087,1.182703,-1.187950,-3.826277],[1.401055,-6.916482,-4.920645,-5.472893,-5.544620,-3.047971,8.396250,-0.703973,-1.693883,-8.865746,2.819050,-0.220184,-9.131810,-9.684115,-4.359325,0.853782,-9.737197,-0.728276,8.917834,2.233227,9.405255,-9.589271,-5.099955,-9.280365,7.437024,0.148620,4.562979,-4.777593,7.813579,-0.957894,-5.817767,9.442147,0.567247,4.746742,-0.830638,9.929010]], dtype = "float32")#candidate|3242|(9, 36)|const|float32
var_3243 = relay.var("var_3243", dtype = "float32", shape = (504,))#candidate|3243|(504,)|var|float32
call_3239 = relay.TupleGetItem(func_2923_call(relay.reshape(const_3240.astype('float32'), [13, 5, 15]), relay.reshape(var_3241.astype('int32'), [90, 20]), relay.reshape(const_3242.astype('float32'), [324,]), relay.reshape(var_3243.astype('float32'), [504,]), ), 3)
call_3244 = relay.TupleGetItem(func_2929_call(relay.reshape(const_3240.astype('float32'), [13, 5, 15]), relay.reshape(var_3241.astype('int32'), [90, 20]), relay.reshape(const_3242.astype('float32'), [324,]), relay.reshape(var_3243.astype('float32'), [504,]), ), 3)
uop_3251 = relay.atanh(const_3242.astype('float64')) # shape=(9, 36)
uop_3256 = relay.acos(uop_3251.astype('float64')) # shape=(9, 36)
uop_3260 = relay.acosh(uop_3256.astype('float64')) # shape=(9, 36)
uop_3262 = relay.log2(uop_3256.astype('float32')) # shape=(9, 36)
func_707_call = mod.get_global_var('func_707')
func_710_call = mutated_mod.get_global_var('func_710')
var_3276 = relay.var("var_3276", dtype = "float32", shape = (24,))#candidate|3276|(24,)|var|float32
call_3275 = func_707_call(relay.reshape(var_3276.astype('float32'), [2, 6, 2]))
call_3277 = func_707_call(relay.reshape(var_3276.astype('float32'), [2, 6, 2]))
func_2023_call = mod.get_global_var('func_2023')
func_2026_call = mutated_mod.get_global_var('func_2026')
call_3283 = relay.TupleGetItem(func_2023_call(relay.reshape(var_3243.astype('float32'), [504,])), 0)
call_3284 = relay.TupleGetItem(func_2026_call(relay.reshape(var_3243.astype('float32'), [504,])), 0)
output = relay.Tuple([call_3234,call_3239,const_3240,var_3241,var_3243,uop_3260,uop_3262,call_3275,var_3276,call_3283,])
output2 = relay.Tuple([call_3235,call_3244,const_3240,var_3241,var_3243,uop_3260,uop_3262,call_3277,var_3276,call_3284,])
func_3286 = relay.Function([var_3241,var_3243,var_3276,], output)
mod['func_3286'] = func_3286
mod = relay.transform.InferType()(mod)
var_3287 = relay.var("var_3287", dtype = "int32", shape = (450, 4))#candidate|3287|(450, 4)|var|int32
var_3288 = relay.var("var_3288", dtype = "float32", shape = (504,))#candidate|3288|(504,)|var|float32
var_3289 = relay.var("var_3289", dtype = "float32", shape = (24,))#candidate|3289|(24,)|var|float32
output = func_3286(var_3287,var_3288,var_3289,)
func_3290 = relay.Function([var_3287,var_3288,var_3289,], output)
mutated_mod['func_3290'] = func_3290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2636_call = mod.get_global_var('func_2636')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_3314 = relay.TupleGetItem(func_2636_call(), 0)
call_3315 = relay.TupleGetItem(func_2638_call(), 0)
output = relay.Tuple([call_3314,])
output2 = relay.Tuple([call_3315,])
func_3321 = relay.Function([], output)
mod['func_3321'] = func_3321
mod = relay.transform.InferType()(mod)
mutated_mod['func_3321'] = func_3321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3321_call = mutated_mod.get_global_var('func_3321')
call_3322 = func_3321_call()
output = call_3322
func_3323 = relay.Function([], output)
mutated_mod['func_3323'] = func_3323
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3387 = relay.var("var_3387", dtype = "float64", shape = ())#candidate|3387|()|var|float64
var_3388 = relay.var("var_3388", dtype = "float64", shape = (7, 11, 7))#candidate|3388|(7, 11, 7)|var|float64
bop_3389 = relay.mod(var_3387.astype('float64'), var_3388.astype('float64')) # shape=(7, 11, 7)
func_2636_call = mod.get_global_var('func_2636')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_3397 = relay.TupleGetItem(func_2636_call(), 1)
call_3398 = relay.TupleGetItem(func_2638_call(), 1)
output = relay.Tuple([bop_3389,call_3397,])
output2 = relay.Tuple([bop_3389,call_3398,])
func_3399 = relay.Function([var_3387,var_3388,], output)
mod['func_3399'] = func_3399
mod = relay.transform.InferType()(mod)
var_3400 = relay.var("var_3400", dtype = "float64", shape = ())#candidate|3400|()|var|float64
var_3401 = relay.var("var_3401", dtype = "float64", shape = (7, 11, 7))#candidate|3401|(7, 11, 7)|var|float64
output = func_3399(var_3400,var_3401,)
func_3402 = relay.Function([var_3400,var_3401,], output)
mutated_mod['func_3402'] = func_3402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1726_call = mod.get_global_var('func_1726')
func_1728_call = mutated_mod.get_global_var('func_1728')
call_3416 = func_1726_call()
call_3417 = func_1726_call()
output = call_3416
output2 = call_3417
func_3419 = relay.Function([], output)
mod['func_3419'] = func_3419
mod = relay.transform.InferType()(mod)
mutated_mod['func_3419'] = func_3419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mutated_mod.get_global_var('func_3419')
call_3420 = func_3419_call()
output = call_3420
func_3421 = relay.Function([], output)
mutated_mod['func_3421'] = func_3421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2524_call = mod.get_global_var('func_2524')
func_2526_call = mutated_mod.get_global_var('func_2526')
call_3438 = func_2524_call()
call_3439 = func_2524_call()
output = call_3438
output2 = call_3439
func_3443 = relay.Function([], output)
mod['func_3443'] = func_3443
mod = relay.transform.InferType()(mod)
mutated_mod['func_3443'] = func_3443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3443_call = mutated_mod.get_global_var('func_3443')
call_3444 = func_3443_call()
output = call_3444
func_3445 = relay.Function([], output)
mutated_mod['func_3445'] = func_3445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_3456 = func_3419_call()
call_3457 = func_3419_call()
output = relay.Tuple([call_3456,])
output2 = relay.Tuple([call_3457,])
func_3464 = relay.Function([], output)
mod['func_3464'] = func_3464
mod = relay.transform.InferType()(mod)
output = func_3464()
func_3465 = relay.Function([], output)
mutated_mod['func_3465'] = func_3465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mod.get_global_var('func_2067')
func_2068_call = mutated_mod.get_global_var('func_2068')
call_3522 = relay.TupleGetItem(func_2067_call(), 1)
call_3523 = relay.TupleGetItem(func_2068_call(), 1)
func_2409_call = mod.get_global_var('func_2409')
func_2410_call = mutated_mod.get_global_var('func_2410')
call_3557 = relay.TupleGetItem(func_2409_call(), 0)
call_3558 = relay.TupleGetItem(func_2410_call(), 0)
var_3562 = relay.var("var_3562", dtype = "bool", shape = (13, 5, 1))#candidate|3562|(13, 5, 1)|var|bool
bop_3563 = relay.bitwise_or(call_3522.astype('uint64'), relay.reshape(var_3562.astype('uint64'), relay.shape_of(call_3522))) # shape=(13, 5, 1)
bop_3566 = relay.bitwise_or(call_3523.astype('uint64'), relay.reshape(var_3562.astype('uint64'), relay.shape_of(call_3523))) # shape=(13, 5, 1)
output = relay.Tuple([call_3557,bop_3563,])
output2 = relay.Tuple([call_3558,bop_3566,])
func_3573 = relay.Function([var_3562,], output)
mod['func_3573'] = func_3573
mod = relay.transform.InferType()(mod)
mutated_mod['func_3573'] = func_3573
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3574 = relay.var("var_3574", dtype = "bool", shape = (13, 5, 1))#candidate|3574|(13, 5, 1)|var|bool
func_3573_call = mutated_mod.get_global_var('func_3573')
call_3575 = func_3573_call(var_3574)
output = call_3575
func_3576 = relay.Function([var_3574], output)
mutated_mod['func_3576'] = func_3576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1143_call = mod.get_global_var('func_1143')
func_1144_call = mutated_mod.get_global_var('func_1144')
call_3627 = func_1143_call()
call_3628 = func_1143_call()
var_3631 = relay.var("var_3631", dtype = "float32", shape = (13, 5, 1))#candidate|3631|(13, 5, 1)|var|float32
bop_3632 = relay.floor_mod(call_3627.astype('float64'), relay.reshape(var_3631.astype('float64'), relay.shape_of(call_3627))) # shape=(13, 5, 1)
bop_3635 = relay.floor_mod(call_3628.astype('float64'), relay.reshape(var_3631.astype('float64'), relay.shape_of(call_3628))) # shape=(13, 5, 1)
func_2308_call = mod.get_global_var('func_2308')
func_2310_call = mutated_mod.get_global_var('func_2310')
var_3637 = relay.var("var_3637", dtype = "float64", shape = (1560,))#candidate|3637|(1560,)|var|float64
call_3636 = relay.TupleGetItem(func_2308_call(relay.reshape(var_3637.astype('float64'), [13, 8, 15])), 0)
call_3638 = relay.TupleGetItem(func_2310_call(relay.reshape(var_3637.astype('float64'), [13, 8, 15])), 0)
func_2693_call = mod.get_global_var('func_2693')
func_2695_call = mutated_mod.get_global_var('func_2695')
call_3643 = relay.TupleGetItem(func_2693_call(), 0)
call_3644 = relay.TupleGetItem(func_2695_call(), 0)
output = relay.Tuple([bop_3632,call_3636,var_3637,call_3643,])
output2 = relay.Tuple([bop_3635,call_3638,var_3637,call_3644,])
func_3645 = relay.Function([var_3631,var_3637,], output)
mod['func_3645'] = func_3645
mod = relay.transform.InferType()(mod)
var_3646 = relay.var("var_3646", dtype = "float32", shape = (13, 5, 1))#candidate|3646|(13, 5, 1)|var|float32
var_3647 = relay.var("var_3647", dtype = "float64", shape = (1560,))#candidate|3647|(1560,)|var|float64
output = func_3645(var_3646,var_3647,)
func_3648 = relay.Function([var_3646,var_3647,], output)
mutated_mod['func_3648'] = func_3648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3121_call = mod.get_global_var('func_3121')
func_3122_call = mutated_mod.get_global_var('func_3122')
call_3654 = func_3121_call()
call_3655 = func_3121_call()
output = call_3654
output2 = call_3655
func_3658 = relay.Function([], output)
mod['func_3658'] = func_3658
mod = relay.transform.InferType()(mod)
mutated_mod['func_3658'] = func_3658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mutated_mod.get_global_var('func_3658')
call_3659 = func_3658_call()
output = call_3659
func_3660 = relay.Function([], output)
mutated_mod['func_3660'] = func_3660
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3774 = relay.var("var_3774", dtype = "int64", shape = (7, 15, 15))#candidate|3774|(7, 15, 15)|var|int64
const_3775 = relay.const([[[1,8,-7,4,-2,-10,10,2,-6,3,-2,-6,9,2,5],[-5,-9,4,-2,10,3,-6,5,-6,-9,-4,8,-9,-1,-10],[-2,5,-9,-5,-1,-7,-4,-5,3,4,2,4,8,-8,6],[-7,2,8,-5,4,-10,8,4,-7,-7,-10,8,1,-1,7],[7,-4,6,-10,-8,4,-5,-4,-8,-7,-1,-5,5,5,5],[1,-3,-10,-8,-1,7,4,10,3,8,-6,-9,6,-9,7],[-2,-3,-5,6,-5,10,2,4,-10,1,-6,-7,-10,-6,3],[-10,-4,-1,-7,-4,4,4,6,10,-4,-5,10,5,4,-6],[7,-1,-10,-1,9,-3,7,-9,-7,10,9,-4,-7,8,10],[-8,1,-7,-2,-2,-4,-4,-2,4,1,1,-1,-1,-3,10],[5,10,9,-9,-8,4,3,2,10,-5,2,-2,-2,-1,-2],[-10,-1,2,-10,1,-9,-9,-2,8,-7,-2,10,9,-7,-6],[-3,5,-9,-4,-8,-8,-1,-1,-7,4,3,-2,9,2,-4],[-4,-7,1,-8,8,1,4,2,-6,4,3,-7,10,-6,2],[3,5,5,-9,-2,-8,10,6,7,10,-3,1,-8,5,-3]],[[4,-3,7,4,10,2,10,9,-5,9,8,-10,3,7,-4],[7,8,6,7,-3,7,-2,-9,-2,-7,-2,2,-1,-2,2],[-3,-3,-8,-6,8,-9,-7,1,-4,-10,3,-4,-4,9,-5],[3,2,9,-4,5,8,-8,-7,-9,-1,9,-1,-8,-10,-2],[-1,-5,10,3,10,-5,-1,1,1,6,1,5,-10,8,3],[5,6,7,3,-1,9,9,-8,-10,4,-10,-3,8,1,3],[7,-7,7,2,-5,3,8,8,4,-6,5,-3,2,-4,-9],[-6,5,1,7,-4,-6,-8,8,-10,-3,-3,4,-9,-9,-9],[9,7,9,8,3,8,-8,4,10,2,-2,-4,-5,3,3],[2,-9,8,9,4,9,-1,-6,-4,-1,-4,3,9,8,-2],[6,-4,5,3,-1,5,-8,-6,-3,3,-9,9,4,10,2],[4,7,2,-2,-5,-3,3,-9,6,-1,6,-7,-2,4,2],[3,3,5,-2,-2,10,-7,5,-1,-8,1,2,10,8,7],[8,-9,2,6,-3,-10,2,-5,5,-9,10,-6,7,-8,10],[6,-5,-8,-8,-2,-3,-3,2,-5,8,10,1,2,-4,2]],[[8,-1,-4,2,5,5,6,6,-8,5,-2,-7,4,2,2],[1,5,-4,3,3,10,8,7,-6,-5,-2,7,-2,9,-9],[10,-2,4,-4,-4,6,4,-9,-10,-6,7,3,-7,7,1],[-8,7,-3,-8,7,3,-3,7,-8,1,1,-1,-2,-1,6],[-6,-10,6,6,-2,3,6,4,2,-2,7,-8,8,-9,-10],[1,-1,1,-6,-1,-9,8,2,1,-6,-4,-6,3,4,-3],[1,2,-4,-1,-9,-1,-7,-4,-10,3,-7,1,9,9,8],[-8,5,10,3,2,-4,-10,3,-9,10,9,7,1,3,-9],[-2,-9,9,10,9,-5,6,-3,1,2,-4,-9,10,-8,1],[-6,-6,-2,2,-10,4,5,1,7,-10,1,9,-4,1,-5],[-1,5,-6,4,-9,-3,10,-2,-6,10,9,1,-5,-8,6],[9,4,5,-1,10,-3,-4,10,3,7,3,9,4,8,-10],[-7,4,-3,3,-9,-5,-5,7,-6,-1,-4,-9,-10,-6,-4],[5,-5,3,7,1,9,10,6,-1,-8,5,9,-8,8,-7],[10,6,-10,-1,-6,-5,-10,-1,4,1,6,-7,-2,4,-9]],[[-4,3,-2,8,-10,-10,9,1,6,-4,1,-5,-3,-5,8],[-9,3,-10,-3,-10,5,9,10,6,9,-5,7,9,8,10],[8,-8,-9,5,9,6,-7,-7,-7,5,4,6,-9,-3,1],[-2,-3,9,1,6,1,-3,1,5,7,-3,9,2,8,-6],[-1,7,1,5,-2,-1,7,1,-7,3,6,5,-9,5,2],[-4,10,-6,9,-2,-6,-4,-10,-8,-1,1,1,5,2,-5],[1,-9,5,3,-9,-3,-9,-6,1,-8,-7,2,-6,5,-6],[2,4,-10,7,10,-10,10,9,-10,2,-3,-6,4,-1,-10],[1,-6,-3,3,10,5,6,1,3,-10,-9,3,-9,9,-8],[-6,-1,6,-9,-6,-2,-10,8,8,3,8,10,-9,-10,8],[9,9,-8,-6,5,7,2,-10,1,4,7,-7,-3,7,-9],[1,10,-6,8,5,-3,-5,-2,-5,-4,-8,-1,9,3,7],[-10,8,10,-6,5,2,-6,2,1,-2,8,-5,4,5,7],[-7,-10,-6,-10,-9,-6,4,-9,3,-6,4,-4,5,2,-3],[-1,5,-9,2,-5,-6,-3,4,-7,-1,-1,-8,-3,-3,2]],[[3,10,5,-10,9,-9,6,-3,3,9,-4,-8,-7,5,5],[8,1,9,-7,2,-4,-1,2,-3,6,10,6,2,10,-5],[-5,6,-3,9,-1,6,-1,-8,-10,7,-6,-6,6,6,-5],[2,6,-5,10,-8,4,-10,10,-7,8,-8,2,7,-2,-3],[-3,-7,2,7,6,7,-1,5,5,-4,6,9,6,4,-8],[4,-4,10,3,-10,-3,8,-3,5,-3,-1,1,-4,6,4],[7,-5,9,8,3,8,6,1,-9,9,7,8,2,6,2],[-1,-8,-1,-2,-8,7,-2,-3,4,1,-1,-5,-6,-3,-4],[2,3,2,6,2,-10,9,-4,6,4,5,-6,4,-9,4],[-9,1,-6,-7,8,6,10,3,-10,6,-6,9,1,-4,10],[6,-4,-3,-1,-3,-2,8,-8,8,9,2,-4,9,-4,-8],[1,-4,-10,-3,9,-9,-7,-3,-9,3,-6,5,-5,7,-7],[4,8,3,6,8,-4,-8,-5,5,3,-4,-2,9,5,-9],[-3,-10,-2,1,-1,-5,8,-3,4,7,-6,8,-9,-3,5],[7,-4,10,-2,-6,-10,5,4,-10,-7,-8,9,-9,5,5]],[[6,1,-10,8,2,4,-4,-1,-10,9,-2,-10,-6,-9,3],[-2,-5,10,4,7,3,9,2,-8,-2,8,7,-3,7,4],[8,-8,9,-8,8,-8,-9,-8,6,3,-2,-10,-1,2,6],[9,-1,7,-6,2,2,-5,-6,4,-7,-10,10,-10,4,10],[-9,6,-7,-10,9,9,4,6,4,-2,7,-4,3,-9,-7],[8,7,3,-8,8,-7,-1,-10,-10,7,7,-3,2,-4,-2],[-7,6,6,-9,-4,-2,-6,1,9,10,3,-9,-8,-2,-9],[3,7,-3,9,-7,-1,-6,-9,-2,-8,4,10,10,2,8],[8,-9,-3,10,-4,-6,4,-1,1,-3,6,2,9,-1,4],[6,5,7,-8,9,-3,-9,7,2,-5,-8,-2,-6,2,4],[9,8,-7,-1,1,9,2,-3,-9,-8,-9,5,7,-2,9],[5,-8,-3,7,10,-3,-5,10,-6,2,5,-2,-5,-2,-10],[-5,-2,-7,7,-8,-5,9,-5,-8,8,-7,-3,3,-8,3],[7,-2,-2,-3,-6,-8,-3,-10,6,1,8,-4,5,-7,4],[2,9,-2,4,1,-8,2,8,10,-2,5,-9,10,-10,-8]],[[8,-8,5,-9,-5,10,1,-7,-5,-2,-9,6,-8,3,-3],[2,2,-8,10,-7,-10,-10,-10,10,7,-2,-9,-6,5,4],[-2,-7,4,1,-5,-1,-5,5,-10,-3,-9,1,5,4,7],[-8,-2,-5,-2,-2,-5,3,-4,7,5,10,7,1,-1,2],[1,-8,4,-3,8,-5,-8,6,7,7,5,6,-9,4,10],[-7,-5,-5,-6,7,-4,10,-9,6,-2,-7,-10,-1,-10,6],[-10,-10,-8,3,-3,-10,3,1,-4,9,1,3,9,-8,-8],[8,9,-4,-4,1,-9,6,-8,-3,5,-10,-8,-8,8,7],[-2,5,-2,10,-8,-5,3,7,10,6,4,2,3,-2,-7],[7,3,-3,-1,-10,6,-5,7,-2,4,2,6,-1,-7,-9],[1,6,-10,-8,3,-9,5,10,6,1,-2,9,9,6,-4],[-10,3,-6,6,3,3,-10,7,-2,-4,4,-6,-3,-4,2],[-5,10,10,-10,-1,-6,8,3,-8,8,-8,5,7,8,6],[-9,4,-9,-7,-1,-6,3,2,9,2,1,2,-3,-3,-10],[3,-2,-9,3,1,-2,-2,-1,4,-6,9,-6,3,-2,10]]], dtype = "int64")#candidate|3775|(7, 15, 15)|const|int64
bop_3776 = relay.not_equal(var_3774.astype('bool'), relay.reshape(const_3775.astype('bool'), relay.shape_of(var_3774))) # shape=(7, 15, 15)
func_2846_call = mod.get_global_var('func_2846')
func_2848_call = mutated_mod.get_global_var('func_2848')
var_3781 = relay.var("var_3781", dtype = "float32", shape = (504,))#candidate|3781|(504,)|var|float32
call_3780 = relay.TupleGetItem(func_2846_call(relay.reshape(var_3781.astype('float32'), [504,])), 6)
call_3782 = relay.TupleGetItem(func_2848_call(relay.reshape(var_3781.astype('float32'), [504,])), 6)
output = relay.Tuple([bop_3776,call_3780,var_3781,])
output2 = relay.Tuple([bop_3776,call_3782,var_3781,])
func_3790 = relay.Function([var_3774,var_3781,], output)
mod['func_3790'] = func_3790
mod = relay.transform.InferType()(mod)
var_3791 = relay.var("var_3791", dtype = "int64", shape = (7, 15, 15))#candidate|3791|(7, 15, 15)|var|int64
var_3792 = relay.var("var_3792", dtype = "float32", shape = (504,))#candidate|3792|(504,)|var|float32
output = func_3790(var_3791,var_3792,)
func_3793 = relay.Function([var_3791,var_3792,], output)
mutated_mod['func_3793'] = func_3793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2636_call = mod.get_global_var('func_2636')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_3805 = relay.TupleGetItem(func_2636_call(), 1)
call_3806 = relay.TupleGetItem(func_2638_call(), 1)
output = relay.Tuple([call_3805,])
output2 = relay.Tuple([call_3806,])
func_3811 = relay.Function([], output)
mod['func_3811'] = func_3811
mod = relay.transform.InferType()(mod)
mutated_mod['func_3811'] = func_3811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3811_call = mutated_mod.get_global_var('func_3811')
call_3812 = func_3811_call()
output = call_3812
func_3813 = relay.Function([], output)
mutated_mod['func_3813'] = func_3813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2577_call = mod.get_global_var('func_2577')
func_2579_call = mutated_mod.get_global_var('func_2579')
call_3841 = func_2577_call()
call_3842 = func_2577_call()
func_3464_call = mod.get_global_var('func_3464')
func_3465_call = mutated_mod.get_global_var('func_3465')
call_3849 = relay.TupleGetItem(func_3464_call(), 0)
call_3850 = relay.TupleGetItem(func_3465_call(), 0)
func_2023_call = mod.get_global_var('func_2023')
func_2026_call = mutated_mod.get_global_var('func_2026')
const_3855 = relay.const([2.010916,4.397373,9.094266,7.359431,2.648990,-8.458165,-7.880410,-7.039756,1.317653,8.019778,4.200935,-7.094165,3.285968,-9.819780,1.995669,-5.254810,7.833733,4.778863,-0.731837,7.069824,-2.224996,2.260052,-0.401557,-7.863701,6.702951,7.418074,-4.703944,1.080047,-1.786280,-7.552028,5.912381,2.129879,-3.473394,6.457848,9.345939,7.263830,8.460484,-4.172465,-2.983410,0.154384,-3.240699,-1.211648,-5.945798,1.058529,-7.499525,-6.576391,-4.164875,-7.574740,-6.868177,2.426310,-3.793386,-0.797030,6.908694,5.802402,6.161968,-0.591917,1.061691,-9.045222,-3.088555,-2.771361,5.454448,7.255896,-3.609496,4.646122,4.839672,9.639587,6.057059,5.619331,-0.886160,-3.213746,5.833628,-9.289657,-4.041345,-2.376955,-0.378543,3.084099,-2.591692,1.388695,-0.514606,1.583080,6.862311,0.551744,-7.628425,4.099763,1.886563,1.928889,-1.327052,4.467825,-1.148655,-8.158261,-7.712892,4.227679,-0.465139,-1.309647,4.288405,-7.287539,-5.007475,9.714113,4.913665,7.765341,-4.207918,8.182376,-4.055835,6.622652,9.357331,8.779131,4.821062,-7.589535,6.881080,-9.251689,-9.769002,7.869309,-3.006189,-7.104401,-7.037104,-8.887305,-9.563862,4.581793,-1.386940,8.125274,-4.148126,-3.185273,2.727534,8.932409,4.305783,3.098739,9.735846,-8.406035,8.772463,1.474818,-1.911982,7.219381,2.427544,-1.620448,9.621116,7.235471,-2.550574,-1.902717,-8.941900,4.990186,9.909629,-7.870805,9.192209,7.503695,8.650696,-3.359179,-8.804087,-4.485644,3.122753,-1.423370,-2.515110,-7.439383,0.628398,5.587121,0.424127,3.540497,3.427453,1.230492,-1.076862,-4.523096,6.381900,8.930687,-3.211369,1.642856,-3.545545,-0.763141,-8.368935,-5.578648,2.069328,8.990509,-6.982732,-1.280967,-0.798214,-2.732272,-0.109314,-9.174464,-6.752604,8.354442,1.463114,-2.738826,-6.671689,0.248640,0.045564,-4.773844,3.129521,7.350320,-6.604670,5.173390,2.624075,0.872098,-9.575758,1.119380,-2.960082,8.082614,-8.056922,8.336851,0.523597,9.694305,-5.421107,3.035073,3.575368,5.776755,-0.763638,4.370728,6.656433,3.384595,-7.532475,-7.638221,-1.140131,0.736858,8.315951,2.673689,3.342815,5.981924,2.627481,4.312695,-0.345674,-3.700318,8.272079,-2.762674,7.729453,3.327721,9.353423,-8.854164,6.572730,-9.924363,-4.026403,5.077501,-5.918758,-3.960305,-3.690482,-8.349886,-5.101747,3.997984,-6.665867,-6.479619,-3.203067,-0.304807,6.777983,0.232827,-5.053899,0.691801,9.641066,-3.910165,-1.914956,7.080209,-0.593775,3.807463,1.085094,-0.241973,-8.740999,4.287866,-2.011624,-5.660967,-9.169244,0.893332,6.124436,3.022974,9.469777,-6.320438,-9.392983,-2.830199,-0.730886,-2.580409,7.636115,1.292547,2.188211,-2.734082,-4.645633,-0.143695,-8.577746,0.995872,-1.589905,-1.867576,-9.713804,2.195859,5.498660,6.491346,6.145293,6.290380,9.823542,4.595625,7.164144,-5.004370,-1.728450,-3.110076,-5.740925,5.817018,-8.860943,9.785577,-4.751195,-1.152219,-9.825985,2.280591,5.783377,-5.159627,-0.315926,3.903191,0.163188,3.453720,-9.812644,-4.165104,-4.048085,-0.132001,-5.484574,9.577464,-0.501701,-2.510674,-0.349345,8.560181,-4.113882,-7.503796,7.804109,-6.175531,0.188927,-3.127220,3.074141,6.137022,-5.395657,-6.514991,7.593864,-2.254858,4.864957,-9.835991,-8.305942,2.872246,-5.522475,8.602380,-7.298588,-4.893316,-6.039860,0.695528,-4.581655,9.507172,-6.700238,7.323996,5.608341,-9.159024,-2.339663,-9.257404,-7.507056,7.002531,8.990005,-3.306610,-9.422784,-3.582037,3.600908,-3.446888,-9.502888,2.728315,4.713086,-0.322860,-9.210821,-1.785054,9.128539,3.968107,-6.474702,-7.827037,-6.014938,4.115928,-5.810697,3.620108,-7.509998,2.428540,6.251004,1.504520,3.154440,7.839230,-0.732021,-1.109199,0.943505,7.954801,-5.919595,4.406399,-8.974031,9.555956,-0.844910,1.658963,-2.086100,9.694643,4.821997,-9.189570,-4.239190,-8.873576,7.643691,6.691854,-4.524604,6.442658,-4.535020,1.249339,9.709607,7.792558,8.939264,-3.677891,9.484821,9.742418,8.467732,7.033738,-3.083569,-5.721408,-3.258194,-4.128793,5.087580,3.861558,-8.191332,-3.493472,2.426433,-7.111911,-5.484540,-8.488136,-8.643097,-9.403571,-5.075293,-5.236649,6.332637,-0.493619,-6.883644,3.816291,-3.683146,9.260534,8.776267,2.092189,-3.545143,-2.926207,-8.348441,-5.537837,-0.986449,-2.210615,3.810343,8.868885,-0.659092,-0.183888,-9.089957,-2.642162,0.104535,-6.158379,1.105673,7.046003,4.221702,3.870400,3.054727,-2.776304,-8.934936,-8.345226,5.373534,1.057357,4.387801,-2.495684,1.370176,2.234436,6.623557,3.243481,1.844990,-8.752163,-2.763256,-1.504362,0.037023,-1.394798,-5.120536,8.316319,-4.495345,6.486751,0.663096,-3.034739,-9.699105,9.608644,4.288890,-3.720939,5.134030,2.086323,-7.348827,8.994568,-4.894376,-1.436288,-3.762985,1.075321,-2.188720,1.173835,-2.004371,-9.597430,7.315128,-5.400627,-3.875157,3.776161,8.922853,-2.224310,-8.806862,-1.430567,3.339517,5.353798,-3.984915,-0.078530,3.509833,-8.067124,1.937614,-4.723806,-3.011128,4.626617,-7.036872,2.769625,1.745724,5.643441,2.685355,2.254100], dtype = "float32")#candidate|3855|(504,)|const|float32
call_3854 = relay.TupleGetItem(func_2023_call(relay.reshape(const_3855.astype('float32'), [504,])), 0)
call_3856 = relay.TupleGetItem(func_2026_call(relay.reshape(const_3855.astype('float32'), [504,])), 0)
func_1840_call = mod.get_global_var('func_1840')
func_1845_call = mutated_mod.get_global_var('func_1845')
const_3860 = relay.const([9.366774,3.814489,-7.869681,8.258379,-3.801094,1.629615,4.924945,-0.399192,9.967576,-9.362332,-6.996770,-0.962888,-9.340411,-4.130818,-0.675200,-0.545005,-9.936218,-2.283582,-2.593073,-4.674745,7.106674,-2.648388,-9.390343,-3.780500,4.921445,-7.737506,-0.222850,3.762789,-1.803564,-1.154357,6.032355,-1.586115,-0.640640,-2.012593,-7.122778,-0.331841,-4.794314,-6.970908,1.944419,9.594771,2.827227,-6.013855], dtype = "float32")#candidate|3860|(42,)|const|float32
var_3861 = relay.var("var_3861", dtype = "float32", shape = (324,))#candidate|3861|(324,)|var|float32
call_3859 = relay.TupleGetItem(func_1840_call(relay.reshape(const_3860.astype('float32'), [42,]), relay.reshape(var_3861.astype('float32'), [324,]), relay.reshape(const_3855.astype('float32'), [504,]), ), 4)
call_3862 = relay.TupleGetItem(func_1845_call(relay.reshape(const_3860.astype('float32'), [42,]), relay.reshape(var_3861.astype('float32'), [324,]), relay.reshape(const_3855.astype('float32'), [504,]), ), 4)
bop_3863 = relay.maximum(const_3855.astype('uint8'), call_3849.astype('uint8')) # shape=(13, 5, 504)
bop_3866 = relay.maximum(const_3855.astype('uint8'), call_3850.astype('uint8')) # shape=(13, 5, 504)
bop_3871 = relay.bitwise_xor(bop_3863.astype('int8'), call_3849.astype('int8')) # shape=(13, 5, 504)
bop_3874 = relay.bitwise_xor(bop_3866.astype('int8'), call_3850.astype('int8')) # shape=(13, 5, 504)
uop_3891 = relay.log(call_3854.astype('float64')) # shape=(13, 5, 1)
uop_3893 = relay.log(call_3856.astype('float64')) # shape=(13, 5, 1)
output = relay.Tuple([call_3841,call_3859,const_3860,var_3861,bop_3871,uop_3891,])
output2 = relay.Tuple([call_3842,call_3862,const_3860,var_3861,bop_3874,uop_3893,])
func_3898 = relay.Function([var_3861,], output)
mod['func_3898'] = func_3898
mod = relay.transform.InferType()(mod)
mutated_mod['func_3898'] = func_3898
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3899 = relay.var("var_3899", dtype = "float32", shape = (324,))#candidate|3899|(324,)|var|float32
func_3898_call = mutated_mod.get_global_var('func_3898')
call_3900 = func_3898_call(var_3899)
output = call_3900
func_3901 = relay.Function([var_3899], output)
mutated_mod['func_3901'] = func_3901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1726_call = mod.get_global_var('func_1726')
func_1728_call = mutated_mod.get_global_var('func_1728')
call_3909 = func_1726_call()
call_3910 = func_1726_call()
func_1143_call = mod.get_global_var('func_1143')
func_1144_call = mutated_mod.get_global_var('func_1144')
call_3934 = func_1143_call()
call_3935 = func_1143_call()
output = relay.Tuple([call_3909,call_3934,])
output2 = relay.Tuple([call_3910,call_3935,])
func_3940 = relay.Function([], output)
mod['func_3940'] = func_3940
mod = relay.transform.InferType()(mod)
output = func_3940()
func_3941 = relay.Function([], output)
mutated_mod['func_3941'] = func_3941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2212_call = mod.get_global_var('func_2212')
func_2214_call = mutated_mod.get_global_var('func_2214')
call_3948 = relay.TupleGetItem(func_2212_call(), 0)
call_3949 = relay.TupleGetItem(func_2214_call(), 0)
output = relay.Tuple([call_3948,])
output2 = relay.Tuple([call_3949,])
func_3957 = relay.Function([], output)
mod['func_3957'] = func_3957
mod = relay.transform.InferType()(mod)
output = func_3957()
func_3958 = relay.Function([], output)
mutated_mod['func_3958'] = func_3958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2212_call = mod.get_global_var('func_2212')
func_2214_call = mutated_mod.get_global_var('func_2214')
call_3974 = relay.TupleGetItem(func_2212_call(), 0)
call_3975 = relay.TupleGetItem(func_2214_call(), 0)
output = relay.Tuple([call_3974,])
output2 = relay.Tuple([call_3975,])
func_3976 = relay.Function([], output)
mod['func_3976'] = func_3976
mod = relay.transform.InferType()(mod)
output = func_3976()
func_3977 = relay.Function([], output)
mutated_mod['func_3977'] = func_3977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3121_call = mod.get_global_var('func_3121')
func_3122_call = mutated_mod.get_global_var('func_3122')
call_4011 = func_3121_call()
call_4012 = func_3121_call()
func_3227_call = mod.get_global_var('func_3227')
func_3230_call = mutated_mod.get_global_var('func_3230')
var_4040 = relay.var("var_4040", dtype = "bool", shape = (1, 975))#candidate|4040|(1, 975)|var|bool
call_4039 = relay.TupleGetItem(func_3227_call(relay.reshape(var_4040.astype('bool'), [13, 5, 15])), 0)
call_4041 = relay.TupleGetItem(func_3230_call(relay.reshape(var_4040.astype('bool'), [13, 5, 15])), 0)
output = relay.Tuple([call_4011,call_4039,var_4040,])
output2 = relay.Tuple([call_4012,call_4041,var_4040,])
func_4042 = relay.Function([var_4040,], output)
mod['func_4042'] = func_4042
mod = relay.transform.InferType()(mod)
mutated_mod['func_4042'] = func_4042
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4043 = relay.var("var_4043", dtype = "bool", shape = (1, 975))#candidate|4043|(1, 975)|var|bool
func_4042_call = mutated_mod.get_global_var('func_4042')
call_4044 = func_4042_call(var_4043)
output = call_4044
func_4045 = relay.Function([var_4043], output)
mutated_mod['func_4045'] = func_4045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2577_call = mod.get_global_var('func_2577')
func_2579_call = mutated_mod.get_global_var('func_2579')
call_4057 = func_2577_call()
call_4058 = func_2577_call()
func_2791_call = mod.get_global_var('func_2791')
func_2794_call = mutated_mod.get_global_var('func_2794')
const_4063 = relay.const([[-7.555517],[1.859500],[4.952793],[5.837196],[8.552749],[1.020167],[4.868496],[-9.676126],[1.483255],[-5.293545],[7.791504],[2.473964],[-8.399513],[0.352795],[8.232715],[-6.440366],[-2.693572],[2.212516],[9.396058],[1.459218],[-8.959445],[-7.632683],[-8.167685],[-1.122423],[-5.507276],[-6.260689],[6.190843],[-7.127125],[-8.121004],[-3.590782],[-2.077589],[4.281881],[-4.207473],[-2.359531],[1.256353],[-6.094389],[-2.059647],[-2.340413],[-2.676428],[-0.883431],[2.154002],[-6.669391],[7.918525],[-0.151922],[2.642921],[5.882659],[-9.589175],[-0.656060],[0.097388],[-7.773998],[-1.652996],[3.127890],[1.683174],[-0.822794],[-9.870039],[-0.644335],[0.272061],[-6.742576],[-4.177275],[4.715919],[4.866525],[6.035377],[8.372558],[3.077682],[-7.188917],[-7.037206],[-0.848889],[-4.026348],[7.456811],[6.317800],[1.985685],[0.904528],[7.744879],[9.978328],[-2.914618],[8.079752],[-6.785531],[4.052111],[-1.493684],[-8.617246],[-7.652235],[1.369406],[-0.474644],[-4.406544],[-5.275106],[-4.022808],[-9.018511],[1.581929],[1.711238],[1.811735],[4.746254],[-4.517922],[0.851210],[3.444297],[-2.242976],[-1.830793],[-6.387032],[4.147466],[9.384802],[-0.941939],[-0.353301],[-5.714989],[-3.474218],[-5.480739],[-7.429987],[-7.277402],[-0.599839],[6.238981],[-3.070260],[2.067392],[0.112131],[-9.960299],[7.384014],[-8.601199],[6.241708],[2.838140],[4.209278],[-8.518648],[5.117839],[-1.875338],[-7.717684],[9.957390],[7.496707],[-5.049476],[6.120626],[-3.800817],[-9.680998],[7.903173],[-1.348610],[-0.652735],[-2.017760],[6.625315],[2.177896],[-7.404567],[-6.443418],[7.282688],[8.510764],[6.771101],[7.022446],[-4.095568],[0.208899],[7.516825],[3.928255],[-2.045726],[6.668907],[-6.357190],[-2.431461],[3.395007],[7.710883],[-5.363440],[-4.824275],[4.302754],[-3.619394],[-8.016091],[-8.550138],[-6.780402],[8.666811],[7.145903],[-4.127600],[6.128958],[3.842282],[-8.401613],[0.169979],[6.756732],[9.255212],[4.513343],[8.447351],[8.357806],[6.059907],[-8.906978],[-2.853869],[-7.726132],[-2.455290],[7.067695],[4.235796],[-9.228574],[-8.019532],[-0.900190],[2.559572],[-1.930182],[8.148669],[-1.663783],[-9.817732],[-6.592854],[-8.650856],[-1.424486],[1.841264],[-2.881780],[-2.056144],[7.079925],[-1.071438],[-4.694206],[-4.305199],[2.948444],[8.942476],[-7.324774],[0.116992],[9.139945],[-0.337500],[3.364665],[-2.281044],[9.782101],[-3.733570],[-2.835192],[2.259585],[-5.983593],[6.120668],[-3.469198],[4.341323],[0.082768],[-5.572231],[9.336344],[6.672400],[0.747612],[-9.912359],[-4.774371],[-4.919728],[8.450669],[1.495844],[-1.944536],[7.749314],[9.643289],[9.600521],[-4.066180],[6.606179],[5.199514],[8.359978],[3.789246],[-6.927309],[-8.526890],[9.710548],[6.515641],[-5.115542],[5.932707],[-7.463706],[9.491894],[-4.905426],[6.147102],[-6.877275],[9.137255],[0.253489],[3.579627],[0.850349],[4.567187],[-7.876519],[3.866354],[-0.581353],[6.626442],[3.474845],[6.965602],[-6.067652],[5.910999],[2.961090],[0.306077],[-7.614275],[0.994920],[7.087487],[-4.999941],[6.219065],[-7.205895],[3.463405],[2.768591],[3.246280],[-7.020929],[1.729439],[-4.028845],[-2.483976],[2.015977],[-8.379168],[-7.744964],[7.746335],[4.687199],[-2.345631],[1.171383],[8.426721],[9.938901],[3.150173],[9.296306],[-4.920798],[2.792167],[9.655371],[4.475321],[6.684816],[6.519245],[6.298334],[-2.156326],[5.234136],[-9.828432],[8.022601],[6.370864],[8.478190],[5.195656],[7.226498],[3.759445],[1.193804],[-7.200216],[8.616506],[-8.790815],[-6.084462],[-1.824257],[3.850451],[-9.560428],[-2.150597],[4.547303],[-5.682946],[0.024450],[8.492994],[0.188948],[0.543506],[-1.297323],[8.785175],[8.340063],[8.644913],[-6.555816],[5.076217],[6.124373],[8.568226],[9.110888],[-5.807351],[-7.078584],[1.998903],[6.400459],[-2.479306],[1.154678],[9.477133],[-7.591761],[-0.476622],[0.510980],[-7.937024],[8.717973],[2.602919],[-4.930143],[-1.502039],[-8.970059],[-8.392810],[-6.459688],[-7.274303],[1.385296],[-5.108901],[-4.683127],[-9.473508],[-0.033446],[-6.760020],[-4.031963],[0.880471],[-8.971281],[6.248282],[-8.367293],[-0.283396],[-1.675473],[1.092911],[-8.255149],[-8.198190],[-5.899528],[6.601914],[8.053446],[-9.790977],[-3.578888],[5.287664],[0.028776],[1.041092],[8.307180],[-5.027969],[-8.803225],[3.343308],[-9.570036],[5.723505],[-7.339354],[-2.431698],[-3.028550],[-2.043847],[2.972057],[-1.452899],[9.226722],[5.378395],[-4.339118],[9.886501],[8.096846],[3.672401],[-0.790717],[-5.883622],[0.101215],[-9.842423],[-4.149111],[4.477048],[-6.197214],[-5.961342],[-2.497772],[9.990078],[-5.626826],[-6.170616],[8.258186],[2.944641],[8.444247],[1.735228],[9.691667],[-5.513929],[3.140099],[-9.339599],[5.225000],[6.528672],[2.004334],[-4.600157],[-1.903895],[-3.952144],[-0.066924],[5.581666],[-7.127088],[-9.183774],[-8.473954],[3.918047],[7.240092],[-1.958799],[-0.547319],[-5.283242],[-1.076290],[4.934492],[0.475082],[5.878145],[-8.198869],[8.050263],[-2.793539],[-3.916813],[8.682434],[1.459398],[-2.809621],[1.736181],[-8.928921],[5.573333],[-2.742692],[4.123931],[5.796334],[5.024571],[-8.260430],[-9.994987],[-0.514103],[9.672719],[-2.468484],[0.842188],[-9.350230],[0.229732],[0.117536],[-5.527455],[0.084832],[2.106829],[-1.167891],[-4.454264],[6.882051],[-5.840363],[7.576739],[-6.022998],[-0.220987],[-2.522577],[-6.333788],[-1.151825]], dtype = "float32")#candidate|4063|(455, 1)|const|float32
call_4062 = relay.TupleGetItem(func_2791_call(relay.reshape(const_4063.astype('float32'), [13, 5, 7])), 0)
call_4064 = relay.TupleGetItem(func_2794_call(relay.reshape(const_4063.astype('float32'), [13, 5, 7])), 0)
output = relay.Tuple([call_4057,call_4062,const_4063,])
output2 = relay.Tuple([call_4058,call_4064,const_4063,])
func_4065 = relay.Function([], output)
mod['func_4065'] = func_4065
mod = relay.transform.InferType()(mod)
mutated_mod['func_4065'] = func_4065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4065_call = mutated_mod.get_global_var('func_4065')
call_4066 = func_4065_call()
output = call_4066
func_4067 = relay.Function([], output)
mutated_mod['func_4067'] = func_4067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3660_call = mutated_mod.get_global_var('func_3660')
call_4118 = func_3658_call()
call_4119 = func_3658_call()
var_4137 = relay.var("var_4137", dtype = "float32", shape = (13, 5, 10))#candidate|4137|(13, 5, 10)|var|float32
bop_4138 = relay.logical_and(call_4118.astype('bool'), var_4137.astype('bool')) # shape=(13, 5, 10)
bop_4141 = relay.logical_and(call_4119.astype('bool'), var_4137.astype('bool')) # shape=(13, 5, 10)
output = bop_4138
output2 = bop_4141
func_4142 = relay.Function([var_4137,], output)
mod['func_4142'] = func_4142
mod = relay.transform.InferType()(mod)
mutated_mod['func_4142'] = func_4142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4143 = relay.var("var_4143", dtype = "float32", shape = (13, 5, 10))#candidate|4143|(13, 5, 10)|var|float32
func_4142_call = mutated_mod.get_global_var('func_4142')
call_4144 = func_4142_call(var_4143)
output = call_4144
func_4145 = relay.Function([var_4143], output)
mutated_mod['func_4145'] = func_4145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3660_call = mutated_mod.get_global_var('func_3660')
call_4196 = func_3658_call()
call_4197 = func_3658_call()
func_1143_call = mod.get_global_var('func_1143')
func_1144_call = mutated_mod.get_global_var('func_1144')
call_4217 = func_1143_call()
call_4218 = func_1143_call()
var_4222 = relay.var("var_4222", dtype = "float32", shape = (13, 5, 5))#candidate|4222|(13, 5, 5)|var|float32
bop_4223 = relay.floor_divide(call_4217.astype('float32'), var_4222.astype('float32')) # shape=(13, 5, 5)
bop_4226 = relay.floor_divide(call_4218.astype('float32'), var_4222.astype('float32')) # shape=(13, 5, 5)
output = relay.Tuple([call_4196,bop_4223,])
output2 = relay.Tuple([call_4197,bop_4226,])
func_4228 = relay.Function([var_4222,], output)
mod['func_4228'] = func_4228
mod = relay.transform.InferType()(mod)
mutated_mod['func_4228'] = func_4228
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4229 = relay.var("var_4229", dtype = "float32", shape = (13, 5, 5))#candidate|4229|(13, 5, 5)|var|float32
func_4228_call = mutated_mod.get_global_var('func_4228')
call_4230 = func_4228_call(var_4229)
output = call_4230
func_4231 = relay.Function([var_4229], output)
mutated_mod['func_4231'] = func_4231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3957_call = mod.get_global_var('func_3957')
func_3958_call = mutated_mod.get_global_var('func_3958')
call_4262 = relay.TupleGetItem(func_3957_call(), 0)
call_4263 = relay.TupleGetItem(func_3958_call(), 0)
func_3573_call = mod.get_global_var('func_3573')
func_3576_call = mutated_mod.get_global_var('func_3576')
call_4276 = relay.TupleGetItem(func_3573_call(relay.reshape(call_4262.astype('bool'), [13, 5, 1])), 1)
call_4277 = relay.TupleGetItem(func_3576_call(relay.reshape(call_4262.astype('bool'), [13, 5, 1])), 1)
bop_4281 = relay.greater_equal(call_4276.astype('bool'), relay.reshape(call_4262.astype('bool'), relay.shape_of(call_4276))) # shape=(13, 5, 1)
bop_4284 = relay.greater_equal(call_4277.astype('bool'), relay.reshape(call_4263.astype('bool'), relay.shape_of(call_4277))) # shape=(13, 5, 1)
uop_4288 = relay.sqrt(bop_4281.astype('float64')) # shape=(13, 5, 1)
uop_4290 = relay.sqrt(bop_4284.astype('float64')) # shape=(13, 5, 1)
output = relay.Tuple([uop_4288,])
output2 = relay.Tuple([uop_4290,])
func_4301 = relay.Function([], output)
mod['func_4301'] = func_4301
mod = relay.transform.InferType()(mod)
mutated_mod['func_4301'] = func_4301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4301_call = mutated_mod.get_global_var('func_4301')
call_4302 = func_4301_call()
output = call_4302
func_4303 = relay.Function([], output)
mutated_mod['func_4303'] = func_4303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3660_call = mutated_mod.get_global_var('func_3660')
call_4304 = func_3658_call()
call_4305 = func_3658_call()
func_3645_call = mod.get_global_var('func_3645')
func_3648_call = mutated_mod.get_global_var('func_3648')
const_4312 = relay.const([5.562020,-2.069657,-8.167876,-6.492336,-6.755278,-7.064840,-3.945861,4.257806,-5.159475,8.617471,6.012789,9.483094,3.994098,2.217280,2.783199,1.298590,7.447752,0.361812,-8.388337,-2.356522,-1.340726,6.387732,-7.738337,5.439273,0.688445,-8.432016,-6.227068,-4.358484,-6.362858,-6.765830,-1.402289,4.105923,5.428500,-2.063707,-2.081112,-2.447399,8.934582,4.374908,-3.160311,-4.213499,1.027434,9.487017,1.811901,-6.105484,5.562366,9.243555,-6.909990,-9.112593,9.754468,-4.837815,0.839744,-2.715996,-7.783640,-2.617458,-6.395573,6.709256,0.351419,3.889818,-5.054751,6.600581,-7.911627,-6.480438,5.136227,-3.882165,7.955374,-5.551612,-2.588473,7.807536,-5.070046,0.930353,-2.335288,-4.190095,2.630216,-5.923785,3.354343,-4.933066,-1.057020,0.949860,0.338264,9.029644,-0.179646,1.804046,-7.850512,4.640108,2.219196,-2.181444,8.793557,2.463992,-5.149937,3.940061,0.105949,-1.637061,-5.064880,8.002237,8.312504,-9.818629,-6.965698,-0.845080,-7.531423,1.810577,7.240774,6.457077,7.872520,4.563008,6.805734,3.515594,-4.732608,-1.769832,7.418814,-8.203895,-6.675239,-6.151908,6.352345,-0.431380,6.320465,7.286834,9.083633,7.733888,2.269044,-8.527721,5.890393,-9.429937,5.771354,-3.782625,-2.293233,-7.339364,2.505607,-5.096862,0.163931,-7.072794,-8.009969,7.945401,0.237444,-9.869830,-3.551281,2.938019,4.093422,0.410214,-0.355246,1.543782,9.791507,-0.874904,6.673670,5.785330,9.617852,8.265992,5.298163,1.704243,4.184998,5.681283,-1.280848,-9.448064,-0.067112,3.990293,9.906140,-3.819169,-0.801572,-4.901058,8.351784,-1.763307,7.349438,-9.659523,6.762788,6.632627,-0.533667,-5.530594,7.226426,-4.371931,-2.722887,7.259053,-1.202171,-8.755348,-1.474358,-9.348729,-3.026854,-4.654904,-6.309049,-2.395910,-9.698301,7.724875,8.469691,5.819804,-8.427285,-7.367203,7.039811,-6.846897,1.242453,-1.071005,9.101105,0.958097,-3.082356,-2.481466,1.107666,-8.682699,-3.972471,-4.420643,2.502673,4.726503,4.646592,-7.110021,1.442144,-6.309983,-4.479283,-6.527676,-5.219846,2.459265,7.044022,3.353027,0.695174,-2.539255,4.617654,6.757851,-6.669419,-2.366238,-1.183147,9.027749,-1.263341,4.688745,-7.124600,-8.290675,1.137475,2.777006,4.415733,4.377003,-0.618889,6.659499,-3.631403,-1.775987,0.481711,-7.274053,-5.622761,2.138562,-8.229270,8.488798,-8.034789,9.787194,2.541652,-3.094243,3.408057,2.078176,7.761888,-5.827531,2.409358,-0.319415,8.286143,7.835114,-1.981713,-2.979985,2.885142,-7.124131,-8.842160,5.793845,-9.201483,-8.383322,-3.513372,-2.109327,-5.918011,8.943152,7.689836,-0.966504,2.110173,-5.993279,-1.597642,-6.976682,-6.543245,3.366111,-6.957288,6.324515,-0.232288,-1.205977,2.668094,-1.903100,2.386956,-7.309109,-4.355541,-7.618553,-7.886163,7.191797,2.966881,-3.538312,-0.370818,-2.412503,-2.426264,-7.357685,-3.761590,9.239975,3.207074,8.676333,-3.612124,8.338586,4.138318,-5.807036,1.173287,-8.420094,6.278792,-7.224314,3.411739,-9.004009,-1.057049,-6.361202,7.819488,2.367071,-9.351463,-5.257590,-4.287894,4.180563,3.677068,1.122934,6.892590,5.715020,-6.059360,2.776571,1.713697,6.781159,-0.611321,-2.234570,-9.872556,-5.535206,-4.972312,9.872037,-6.317343,-0.124562,-1.438940,-8.303998,-6.896171,-4.227228,-6.562619,-2.069585,0.621487,4.683961,2.287032,9.939002,9.599584,-8.085701,-9.981350,-5.286624,-7.252238,-1.230852,-2.171241,7.513049,8.808822,7.868561,9.410994,3.760779,-7.412292,-8.349851,-7.760948,1.284511,3.867038,6.769864,8.706434,-6.076005,2.514124,-5.311483,-7.877802,-1.723311,9.969333,9.091919,3.793002,8.777679,0.193870,3.488093,0.490878,-8.201614,9.518265,4.073531,0.794257,-6.624148,-5.521667,6.818286,-4.646937,-6.179820,2.400857,-5.801936,-1.418845,-7.735552,5.436652,6.800147,-8.949479,0.877841,-2.794507,-5.935381,8.938357,-3.707401,3.430985,-6.751581,4.009476,7.399806,-9.173365,5.611449,3.283607,-1.558578,6.138976,-6.098719,3.681660,0.367688,-1.124029,-8.545848,4.929602,9.822262,-1.402646,-4.776186,2.797933,-6.889345,-3.511195,-2.406814,-6.758687,-5.931679,0.519332,2.046684,8.296577,-4.604434,7.721500,8.123694,5.681877,7.310609,-7.024365,0.848586,-6.513600,2.384400,8.946063,-5.587877,-6.812531,8.600776,5.816229,5.383672,-3.375363,-0.867217,-7.405428,-9.902474,2.817776,1.559050,5.368237,4.251137,-3.772215,-6.991196,-5.657910,9.971367,-8.524965,-4.605022,-1.579421,-3.460306,4.508723,-3.665906,-1.276184,7.692398,-1.699486,9.185959,6.298545,9.432256,6.020111,0.394512,9.915506,-2.643581,-4.709037,0.748388,-0.236027,5.812738,4.631344,4.192876,-3.599016,8.075887,5.745994,-2.820927,8.125818,5.447902,-4.782912,-7.252567,3.491333,0.276277,-3.553768,-2.068101,-9.097639,-9.382931,6.640001,3.364253,0.870595,7.117477,3.392926,5.897690,4.600810,9.967232,-0.375338,9.246681,-7.026811,5.405173,-4.980649,-1.252385,3.602279,-2.287858,-1.791220,-0.851666,-4.418481,3.283520,7.903274,-3.689668,3.709445,-8.403401,1.127719,2.833176,-2.078250,-2.676336,5.460822,6.499991,-1.808350,9.902394,9.973334,-6.686694,7.745957,4.435935,-8.626925,-9.754725,8.063962,9.197755,-8.346203,4.161734,8.259295,3.015942,-6.091884,2.995171,-2.821720,0.295711,-6.036324,7.552013,2.959989,6.719240,-7.376391,9.088195,-8.111349,8.629870,-5.728343,-7.707619,-9.752809,-1.432007,-5.379192,4.759588,-1.025135,2.792303,-6.266839,1.289614,2.903193,-2.933777,-1.890604,-9.222015,-2.341376,0.847093,-7.213989,7.609358,-7.862154,7.043169,6.158140,2.461669,8.388841,2.950143,-2.422239,-9.888630,7.742523,2.189475,-0.716459,-3.491533,8.385655,0.196212,4.595563,1.601592,-6.998645,7.452693,7.273786,-1.001451,1.107868,1.638164,-6.193953,8.418896,-7.205502,6.048736,-8.125215,6.504434,6.402917,6.914064,5.419035,-1.726367,1.541696,-6.082281,8.859713,-5.589989,-4.558919,-5.595853,6.576150,-3.792760,-1.240777,-7.659640,4.212397,4.986006,6.079709,-7.858641,7.232293,-6.147079,-2.408702,5.789501,0.065721,-5.094979,2.840131,-3.662814,-8.869617,-7.773114,-0.170655,-1.245990,5.779299,2.888995,-4.661725,6.534948,-0.025553,4.857325,-0.315751,-2.133824,-8.248740,9.779030,9.719071,-2.056435,-9.197168,3.554215,2.912223,1.785896,6.537507,9.379018,-3.852679,2.981032,8.264773,7.534670,1.544416,5.441584,-1.626247,-9.461942,5.435957,2.604425,3.894721,-1.000064,-8.879312,6.566921,-5.013745,-9.074162,-9.866328,-6.647245,-7.081042,7.083778,8.650826,0.338144,-6.880597,-7.308951,-2.693192,5.092624,-7.925163,-0.201939,2.702557,-2.488338,3.855162,-2.166549,-0.227171,8.518427,-7.190625,-1.175846,0.312657,3.670625,4.422573,7.637679,-4.669730,-1.347101,3.222211,8.269763,-2.152691,-0.390768,-1.344448,9.192702,6.446970,7.883098,-8.084089,-5.095964,7.500920,5.454135,2.061131,-9.055683,3.781007,-8.729724,-5.213975,-6.696799,9.625704,-0.962939,3.738285,-0.234921,-6.443168,1.441752,6.397684,-0.909235,2.221237,-5.279626,6.663699,-8.940807,2.273629,2.805759,2.497998,-5.930345,-7.383723,-0.557242,5.468178,6.391032,8.423282,-4.665806,-9.786852,1.553518,-4.909514,-9.274947,1.928960,-3.908459,8.113044,-7.734471,6.299716,0.411081,0.840470,-0.655302,-8.646660,-9.151005,-9.003155,-8.466598,8.982035,-7.480871,3.758748,8.767626,-6.167747,2.826892,1.344873,-7.106852,9.942014,9.251346,4.506797,8.771937,3.985311,0.591375,-7.504154,-3.779554,-9.962748,5.456665,8.461684,-4.909321,-7.872149,8.279001,5.512146,6.799699,6.614816,7.328014,-9.800432,-4.855912,-8.584233,2.385309,7.449306,-0.843275,-0.944181,-3.396504,7.857985,8.430230,-3.897193,3.931809,-6.777563,-8.035811,3.131215,3.013587,-0.064218,2.722165,9.358753,4.707671,-6.376081,-6.869761,0.091190,-6.590525,2.298351,1.005512,-2.394007,2.900707,3.017791,-6.921297,6.815286,-6.573496,9.890843,-3.232817,-8.216475,-3.164530,-2.224515,4.434220,9.513878,-8.489378,-4.740579,-4.292844,-2.372835,4.083656,-8.405222,5.165683,1.037861,4.423990,8.912081,-0.262179,-8.673805,8.481923,7.320952,-8.164631,-0.129380,-6.740860,-5.956002,-3.693194,-1.146027,-9.152554,8.893860,1.724394,3.315716,-4.463003,-9.647581,-2.870228,3.105924,6.530220,7.264659,0.786889,-3.516642,-5.337832,-1.285825,-5.090553,-9.861667,6.283330,-5.642455,1.767529,-8.521930,-5.318095,-9.176434,8.472217,-8.243804,-3.716430,-2.728155,-5.418717,4.265962,-0.408438,6.091641,7.534681,1.181325,3.434118,7.917767,-4.870380,-8.594418,-3.205961,4.583041,-6.648859,3.165162,2.882084,-8.326931,-5.925818,-2.364569,-8.623935,5.288654,-9.842748,-7.164271,-8.379049,-4.481369,9.607667,-2.463340,8.785265,9.581869,5.901491,-2.510486,8.464116,-1.964418,9.805119,-2.470702,-2.290309,9.255418,-4.017533,7.872301,9.025640,8.623366,-6.650977,-3.081274,-6.985360,-9.253487,-8.223560,-8.237546,8.899247,-0.921450,-5.483617,-7.133195,-6.113421,4.847653,-7.383624,-1.337227,-4.924447,-3.089746,0.971914,-7.227485,9.264404,7.573115,4.950571,8.106356,2.580203,9.120264,-3.369675,-6.812173,7.297395,8.584463,-6.353666,7.994223,-1.786059,-9.568398,8.075000,6.085860,1.941569,-9.518556,-8.729188,0.544855,3.931550,1.503225,1.719895,3.385474,7.791955,-8.020113,-5.327925,-0.180722,1.610467,-1.007061,7.301232,8.580857,-1.165692,-4.219683,6.549961,-1.991693,-1.349347,-3.727367,-7.315566,3.986263,8.712619,5.336000,2.766884,-8.430375,-6.140422,4.768288,-2.839207,-3.729928,6.093235,3.182055,3.901524,5.865173,-9.315554,4.433755,7.443416,-7.101487,-6.499566,-7.953750,-3.725428,-7.186160,0.707787,-5.607859,8.383724,2.882682,7.914558,1.724511,-9.452661,2.303462,7.573698,9.126078,7.707658,8.570305,-1.642129,4.161919,-0.311073,3.535459,-6.924537,8.126172,2.771777,-4.808034,4.787234,0.012334,-7.525157,-9.846659,6.423273,5.271708,-2.498719,-8.643849,-4.007161,2.866799,9.975316,8.272984,-6.567228,6.365195,7.881532,7.801256,-8.192499,-8.667659,7.515425,-4.079558,0.520565,4.548415,-2.137396,-9.294840,0.528076,8.140029,-7.540552,-3.099554,5.208311,-1.316428,6.698631,1.555034,-4.698973,0.777167,0.011719,-4.876541,1.104162,-8.668879,5.131139,-0.482153,-6.915986,-9.523428,-0.986993,7.887562,-8.098298,-5.734992,2.665762,7.315320,-1.774909,9.983184,-4.836259,-7.353997,9.487622,3.088847,6.484818,-7.138618,5.776877,-3.469218,9.299606,3.480738,-4.875062,-8.917062,-4.686571,0.589906,-0.938435,-5.666501,9.037629,-8.770534,0.593675,6.632711,9.732886,-9.651530,-0.346651,9.818423,-0.014644,-6.346794,-6.888197,7.152938,-1.014561,0.553344,0.136504,-8.268563,-5.859212,-4.788281,-1.432879,-9.939346,4.122021,4.731334,-4.801642,7.620585,4.445661,3.293232,-3.251550,-7.988648,9.896535,6.335503,6.927557,7.137461,-0.959400,3.352229,-1.381557,4.544773,-3.362703,5.923796,0.467460,-5.921647,-0.374459,-3.909536,-0.868790,-5.815653,3.373761,-5.212823,3.565163,-9.103352,8.820123,-0.268983,-4.801262,4.994385,-4.776130,4.636660,-0.154608,9.230031,9.208736,9.509030,-4.862216,5.747710,-0.673980,4.908903,-9.949806,2.323613,5.259426,3.932223,2.215149,6.143738,6.923265,0.551714,-1.757738,2.112298,8.619528,7.564242,-5.493341,2.072565,-3.555959,-3.467228,-1.996189,0.326994,0.078923,9.826646,4.974015,4.694148,8.810135,-1.902240,1.006485,3.067746,1.296874,-2.362555,-1.839306,-7.103119,-8.694651,4.239865,-9.190143,6.164635,5.242659,2.721934,7.867590,6.986988,5.412474,-0.690622,2.047263,5.896575,-8.848963,-3.083188,0.127971,7.747263,4.006842,8.001731,8.437680,-3.366245,3.263506,-1.936156,-7.007599,-5.212046,0.633187,-6.318934,-9.396868,3.242587,9.663610,1.702986,-3.130759,0.146640,0.995616,-7.474789,5.262745,7.656229,-0.227149,1.052052,-8.498111,-4.524247,-2.620582,-3.151607,4.195290,0.283339,-3.172172,7.873615,5.661323,-5.533008,9.945294,-3.938701,1.512181,-1.418814,4.708166,-2.027154,5.900662,6.054256,1.641504,-0.657839,-5.485212,-1.251594,8.252598,9.606188,-2.972276,4.701561,-3.498229,-1.579564,-6.619749,1.540649,-7.387774,0.762720,0.715025,0.443838,-8.603182,7.815527,7.672751,8.500381,0.328123,6.741148,2.404855,-9.141766,-7.724144,8.919987,9.577173,-3.036152,6.553356,4.743132,3.948272,6.078188,-2.516786,-0.478843,-9.223091,-4.465589,-5.047669,2.417288,0.047678,-7.948298,-6.804982,-8.828604,-0.903470,7.712766,-1.052363,-4.153013,9.380399,0.155861,-2.782823,1.712934,-8.059660,0.139264,-0.241646,-3.924191,-0.711492,7.568497,-2.251547,-0.879628,0.923980,-1.552780,-2.647852,5.739034,7.718506,6.167586,-5.681763,-3.360272,7.412589,4.971704,0.656202,4.921305,-0.317765,-5.616864,-5.593595,-4.346374,5.187645,8.475519,9.971060,7.085580,8.916250,4.016486,-5.510740,-6.433294,9.372067,6.613713,5.976885,-0.593952,7.954851,0.377107,9.450220,4.572687,-1.436033,-3.877300,7.527485,-1.684766,-8.672032,-6.757650,-6.509119,-1.049200,3.291755,-2.624797,-0.348401,-1.562472,3.328241,0.354053,7.271950,7.722871,5.445827,-9.900307,-4.438853,-3.409746,-6.449806,1.266806,0.869250,-5.497253,2.640944,-7.974528,1.106993,7.731200,-9.592451,7.066652,-6.867555,5.646643,-6.818125,-8.884421,9.196644,7.581654,-9.039761,-2.956067,5.486975,-8.488109,7.331693,-1.786441,7.928229,6.395906,8.202342,-8.021905,-0.511187,1.752165,4.977642,9.963920,-1.842470,-3.104920,1.179283,9.209004,9.537962,7.982925,-9.578258,6.182798,5.822003,3.915938,6.414458,-5.361477,3.873037,-7.637353,-2.312774,6.186224,-2.856361,5.514544,-1.671119,-4.932678,-7.458374,-2.231277,-8.938446,-9.325136,0.191613,-4.311529,2.412361,-8.904418,-2.961328,4.549388,-6.650803,-8.581695,-1.066083,-5.917775,-6.788058,-6.025119,-8.646721,8.640178,-4.300093,-6.456729,9.930403,-5.623072,-2.010817,1.872705,7.634174,0.486982,-5.994219,0.290822,7.897714,8.791283,-2.158337,-3.847304,8.993406,1.552273,2.320038,1.248688,-9.566905,-3.416010,-4.341261,-3.285321,-9.110810,6.538341,2.877458,-7.623032,-5.155259,-2.001063,0.009104,5.381113,-9.000476,2.850851,-5.229875,-8.971599,-1.893951,6.638391,-4.017323,7.306014,5.351442,2.874149,6.529118,7.381949,-5.932072,-5.038822,-2.709094,-4.019325,5.615180,6.512555,-7.383958,-6.348392,-8.963458,2.122222,4.202264,7.736128,2.857803,7.746751,-4.239285,-8.225373,-1.775832,9.277948,-6.223166,5.765087,0.187769,2.360795,-1.231860,-5.167088,-9.573473,-7.195753,-7.997374,-9.598692,-4.698190,-4.821480,2.353561,0.016975,-0.508147,-7.918734,-0.274529,-3.022684,-1.030741,1.164120,5.398762,4.953408,8.753861,-4.490045,-0.734656,4.412164,-0.557032,7.137975,-5.052870,-8.189955,1.134218,3.865054,-8.702595,0.820305,-5.251042,-0.256282,9.760244,6.415152,9.159672,-5.659779,-9.706527,-3.515010,-3.823371,-5.455244,3.981645,4.564512,-0.827184,-6.589991,-4.164842,3.482708,0.212114,-9.616858,-4.005178,8.209364,1.379571,6.158025,-1.497288,7.515319,6.628129,9.566859,-8.960595,-3.575765,-3.832977,8.364522,-6.938659,6.066291,-2.957108,-7.351640,8.916425,-6.138975,-9.836097,-2.896832,-6.810622,3.400236,-7.653471,-7.861542,2.865435,3.363374,7.803428,-6.901149,1.438891,9.122345,1.474228,-8.400267,-5.361278,-3.617875,-0.659446,9.209488,-4.182619,4.328391,6.819903,1.055505,-4.009246,-3.018540,9.948284,5.765632,-1.140949,7.427480,7.521081,-1.528089,-2.508555,-2.197082,-6.504262,0.390405,-9.948079,7.457836,-0.846662,-7.175922,3.572361,7.175993,5.665620,7.981473,9.658907,1.794747,5.871819,-0.197677,-8.976548,-5.250900,-6.925246,7.164357,-8.531317,8.635646,2.623620,0.706737,-4.322893,-7.454974,-4.485653,-9.216352,-7.856028,-6.469868,0.031550,6.113584,9.112949,-2.608920,-4.599304,-5.038087,-2.027050], dtype = "float64")#candidate|4312|(1560,)|const|float64
call_4311 = relay.TupleGetItem(func_3645_call(relay.reshape(call_4304.astype('float32'), [13, 5, 1]), relay.reshape(const_4312.astype('float64'), [1560,]), ), 3)
call_4313 = relay.TupleGetItem(func_3648_call(relay.reshape(call_4304.astype('float32'), [13, 5, 1]), relay.reshape(const_4312.astype('float64'), [1560,]), ), 3)
func_2409_call = mod.get_global_var('func_2409')
func_2410_call = mutated_mod.get_global_var('func_2410')
call_4316 = relay.TupleGetItem(func_2409_call(), 0)
call_4317 = relay.TupleGetItem(func_2410_call(), 0)
var_4321 = relay.var("var_4321", dtype = "float32", shape = (13, 5, 14))#candidate|4321|(13, 5, 14)|var|float32
bop_4322 = relay.subtract(call_4311.astype('uint32'), var_4321.astype('uint32')) # shape=(13, 5, 14)
bop_4325 = relay.subtract(call_4313.astype('uint32'), var_4321.astype('uint32')) # shape=(13, 5, 14)
bop_4331 = relay.bitwise_xor(call_4311.astype('int64'), relay.reshape(call_4304.astype('int64'), relay.shape_of(call_4311))) # shape=(13, 5, 1)
bop_4334 = relay.bitwise_xor(call_4313.astype('int64'), relay.reshape(call_4305.astype('int64'), relay.shape_of(call_4313))) # shape=(13, 5, 1)
output = relay.Tuple([const_4312,call_4316,bop_4322,bop_4331,])
output2 = relay.Tuple([const_4312,call_4317,bop_4325,bop_4334,])
func_4337 = relay.Function([var_4321,], output)
mod['func_4337'] = func_4337
mod = relay.transform.InferType()(mod)
mutated_mod['func_4337'] = func_4337
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4338 = relay.var("var_4338", dtype = "float32", shape = (13, 5, 14))#candidate|4338|(13, 5, 14)|var|float32
func_4337_call = mutated_mod.get_global_var('func_4337')
call_4339 = func_4337_call(var_4338)
output = call_4339
func_4340 = relay.Function([var_4338], output)
mutated_mod['func_4340'] = func_4340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1584_call = mod.get_global_var('func_1584')
func_1586_call = mutated_mod.get_global_var('func_1586')
call_4434 = relay.TupleGetItem(func_1584_call(), 1)
call_4435 = relay.TupleGetItem(func_1586_call(), 1)
output = call_4434
output2 = call_4435
func_4437 = relay.Function([], output)
mod['func_4437'] = func_4437
mod = relay.transform.InferType()(mod)
mutated_mod['func_4437'] = func_4437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4437_call = mutated_mod.get_global_var('func_4437')
call_4438 = func_4437_call()
output = call_4438
func_4439 = relay.Function([], output)
mutated_mod['func_4439'] = func_4439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1143_call = mod.get_global_var('func_1143')
func_1144_call = mutated_mod.get_global_var('func_1144')
call_4443 = func_1143_call()
call_4444 = func_1143_call()
func_2636_call = mod.get_global_var('func_2636')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_4461 = relay.TupleGetItem(func_2636_call(), 0)
call_4462 = relay.TupleGetItem(func_2638_call(), 0)
uop_4463 = relay.asinh(call_4443.astype('float64')) # shape=(13, 5, 1)
uop_4465 = relay.asinh(call_4444.astype('float64')) # shape=(13, 5, 1)
output = relay.Tuple([call_4461,uop_4463,])
output2 = relay.Tuple([call_4462,uop_4465,])
func_4468 = relay.Function([], output)
mod['func_4468'] = func_4468
mod = relay.transform.InferType()(mod)
output = func_4468()
func_4469 = relay.Function([], output)
mutated_mod['func_4469'] = func_4469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1726_call = mod.get_global_var('func_1726')
func_1728_call = mutated_mod.get_global_var('func_1728')
call_4478 = func_1726_call()
call_4479 = func_1726_call()
output = call_4478
output2 = call_4479
func_4489 = relay.Function([], output)
mod['func_4489'] = func_4489
mod = relay.transform.InferType()(mod)
output = func_4489()
func_4490 = relay.Function([], output)
mutated_mod['func_4490'] = func_4490
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4507 = relay.const(2, dtype = "int8")#candidate|4507|()|const|int8
var_4508 = relay.var("var_4508", dtype = "int8", shape = (11, 1, 9))#candidate|4508|(11, 1, 9)|var|int8
bop_4509 = relay.maximum(const_4507.astype('int8'), var_4508.astype('int8')) # shape=(11, 1, 9)
output = relay.Tuple([bop_4509,])
output2 = relay.Tuple([bop_4509,])
func_4515 = relay.Function([var_4508,], output)
mod['func_4515'] = func_4515
mod = relay.transform.InferType()(mod)
mutated_mod['func_4515'] = func_4515
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4516 = relay.var("var_4516", dtype = "int8", shape = (11, 1, 9))#candidate|4516|(11, 1, 9)|var|int8
func_4515_call = mutated_mod.get_global_var('func_4515')
call_4517 = func_4515_call(var_4516)
output = call_4517
func_4518 = relay.Function([var_4516], output)
mutated_mod['func_4518'] = func_4518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_4580 = func_3419_call()
call_4581 = func_3419_call()
output = relay.Tuple([call_4580,])
output2 = relay.Tuple([call_4581,])
func_4590 = relay.Function([], output)
mod['func_4590'] = func_4590
mod = relay.transform.InferType()(mod)
output = func_4590()
func_4591 = relay.Function([], output)
mutated_mod['func_4591'] = func_4591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4437_call = mod.get_global_var('func_4437')
func_4439_call = mutated_mod.get_global_var('func_4439')
call_4606 = func_4437_call()
call_4607 = func_4437_call()
output = call_4606
output2 = call_4607
func_4616 = relay.Function([], output)
mod['func_4616'] = func_4616
mod = relay.transform.InferType()(mod)
output = func_4616()
func_4617 = relay.Function([], output)
mutated_mod['func_4617'] = func_4617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3443_call = mod.get_global_var('func_3443')
func_3445_call = mutated_mod.get_global_var('func_3445')
call_4652 = func_3443_call()
call_4653 = func_3443_call()
output = relay.Tuple([call_4652,])
output2 = relay.Tuple([call_4653,])
func_4676 = relay.Function([], output)
mod['func_4676'] = func_4676
mod = relay.transform.InferType()(mod)
output = func_4676()
func_4677 = relay.Function([], output)
mutated_mod['func_4677'] = func_4677
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4678 = relay.var("var_4678", dtype = "uint8", shape = ())#candidate|4678|()|var|uint8
var_4679 = relay.var("var_4679", dtype = "uint8", shape = (14, 13, 7))#candidate|4679|(14, 13, 7)|var|uint8
bop_4680 = relay.right_shift(var_4678.astype('uint8'), var_4679.astype('uint8')) # shape=(14, 13, 7)
func_1906_call = mod.get_global_var('func_1906')
func_1907_call = mutated_mod.get_global_var('func_1907')
call_4685 = func_1906_call()
call_4686 = func_1906_call()
const_4688 = relay.const([[[4,-9,5,-3]],[[-3,1,-3,-5]],[[-2,6,2,-2]],[[-6,1,6,1]],[[7,5,3,6]],[[3,3,8,6]],[[-7,-7,-6,3]],[[9,3,9,-5]]], dtype = "uint8")#candidate|4688|(8, 1, 4)|const|uint8
bop_4689 = relay.power(var_4678.astype('float32'), const_4688.astype('float32')) # shape=(8, 1, 4)
var_4692 = relay.var("var_4692", dtype = "uint8", shape = (14, 13, 7))#candidate|4692|(14, 13, 7)|var|uint8
bop_4693 = relay.logical_or(bop_4680.astype('bool'), relay.reshape(var_4692.astype('bool'), relay.shape_of(bop_4680))) # shape=(14, 13, 7)
output = relay.Tuple([call_4685,bop_4689,bop_4693,])
output2 = relay.Tuple([call_4686,bop_4689,bop_4693,])
func_4702 = relay.Function([var_4678,var_4679,var_4692,], output)
mod['func_4702'] = func_4702
mod = relay.transform.InferType()(mod)
mutated_mod['func_4702'] = func_4702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4702_call = mutated_mod.get_global_var('func_4702')
var_4704 = relay.var("var_4704", dtype = "uint8", shape = ())#candidate|4704|()|var|uint8
var_4705 = relay.var("var_4705", dtype = "uint8", shape = (14, 13, 7))#candidate|4705|(14, 13, 7)|var|uint8
var_4706 = relay.var("var_4706", dtype = "uint8", shape = (14, 13, 7))#candidate|4706|(14, 13, 7)|var|uint8
call_4703 = func_4702_call(var_4704,var_4705,var_4706,)
output = call_4703
func_4707 = relay.Function([var_4704,var_4705,var_4706,], output)
mutated_mod['func_4707'] = func_4707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_4787 = func_3419_call()
call_4788 = func_3419_call()
func_1143_call = mod.get_global_var('func_1143')
func_1144_call = mutated_mod.get_global_var('func_1144')
call_4799 = func_1143_call()
call_4800 = func_1143_call()
output = relay.Tuple([call_4787,call_4799,])
output2 = relay.Tuple([call_4788,call_4800,])
func_4801 = relay.Function([], output)
mod['func_4801'] = func_4801
mod = relay.transform.InferType()(mod)
mutated_mod['func_4801'] = func_4801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4801_call = mutated_mod.get_global_var('func_4801')
call_4802 = func_4801_call()
output = call_4802
func_4803 = relay.Function([], output)
mutated_mod['func_4803'] = func_4803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4437_call = mod.get_global_var('func_4437')
func_4439_call = mutated_mod.get_global_var('func_4439')
call_4817 = func_4437_call()
call_4818 = func_4437_call()
func_4065_call = mod.get_global_var('func_4065')
func_4067_call = mutated_mod.get_global_var('func_4067')
call_4819 = relay.TupleGetItem(func_4065_call(), 1)
call_4820 = relay.TupleGetItem(func_4067_call(), 1)
output = relay.Tuple([call_4817,call_4819,])
output2 = relay.Tuple([call_4818,call_4820,])
func_4823 = relay.Function([], output)
mod['func_4823'] = func_4823
mod = relay.transform.InferType()(mod)
mutated_mod['func_4823'] = func_4823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4823_call = mutated_mod.get_global_var('func_4823')
call_4824 = func_4823_call()
output = call_4824
func_4825 = relay.Function([], output)
mutated_mod['func_4825'] = func_4825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1906_call = mod.get_global_var('func_1906')
func_1907_call = mutated_mod.get_global_var('func_1907')
call_4832 = func_1906_call()
call_4833 = func_1906_call()
uop_4836 = relay.log10(call_4832.astype('float32')) # shape=(13, 5, 1)
uop_4838 = relay.log10(call_4833.astype('float32')) # shape=(13, 5, 1)
output = relay.Tuple([uop_4836,])
output2 = relay.Tuple([uop_4838,])
func_4839 = relay.Function([], output)
mod['func_4839'] = func_4839
mod = relay.transform.InferType()(mod)
mutated_mod['func_4839'] = func_4839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4839_call = mutated_mod.get_global_var('func_4839')
call_4840 = func_4839_call()
output = call_4840
func_4841 = relay.Function([], output)
mutated_mod['func_4841'] = func_4841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1697_call = mod.get_global_var('func_1697')
func_1699_call = mutated_mod.get_global_var('func_1699')
call_4873 = relay.TupleGetItem(func_1697_call(), 1)
call_4874 = relay.TupleGetItem(func_1699_call(), 1)
output = call_4873
output2 = call_4874
func_4880 = relay.Function([], output)
mod['func_4880'] = func_4880
mod = relay.transform.InferType()(mod)
mutated_mod['func_4880'] = func_4880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4880_call = mutated_mod.get_global_var('func_4880')
call_4881 = func_4880_call()
output = call_4881
func_4882 = relay.Function([], output)
mutated_mod['func_4882'] = func_4882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4616_call = mod.get_global_var('func_4616')
func_4617_call = mutated_mod.get_global_var('func_4617')
call_4904 = func_4616_call()
call_4905 = func_4616_call()
func_2078_call = mod.get_global_var('func_2078')
func_2079_call = mutated_mod.get_global_var('func_2079')
call_4906 = relay.TupleGetItem(func_2078_call(), 0)
call_4907 = relay.TupleGetItem(func_2079_call(), 0)
output = relay.Tuple([call_4904,call_4906,])
output2 = relay.Tuple([call_4905,call_4907,])
func_4924 = relay.Function([], output)
mod['func_4924'] = func_4924
mod = relay.transform.InferType()(mod)
output = func_4924()
func_4925 = relay.Function([], output)
mutated_mod['func_4925'] = func_4925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1323_call = mod.get_global_var('func_1323')
func_1325_call = mutated_mod.get_global_var('func_1325')
call_4967 = relay.TupleGetItem(func_1323_call(), 0)
call_4968 = relay.TupleGetItem(func_1325_call(), 0)
output = call_4967
output2 = call_4968
func_4972 = relay.Function([], output)
mod['func_4972'] = func_4972
mod = relay.transform.InferType()(mod)
output = func_4972()
func_4973 = relay.Function([], output)
mutated_mod['func_4973'] = func_4973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1526_call = mod.get_global_var('func_1526')
func_1528_call = mutated_mod.get_global_var('func_1528')
call_5076 = func_1526_call()
call_5077 = func_1526_call()
output = relay.Tuple([call_5076,])
output2 = relay.Tuple([call_5077,])
func_5099 = relay.Function([], output)
mod['func_5099'] = func_5099
mod = relay.transform.InferType()(mod)
mutated_mod['func_5099'] = func_5099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5099_call = mutated_mod.get_global_var('func_5099')
call_5100 = func_5099_call()
output = call_5100
func_5101 = relay.Function([], output)
mutated_mod['func_5101'] = func_5101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1906_call = mod.get_global_var('func_1906')
func_1907_call = mutated_mod.get_global_var('func_1907')
call_5128 = func_1906_call()
call_5129 = func_1906_call()
output = call_5128
output2 = call_5129
func_5135 = relay.Function([], output)
mod['func_5135'] = func_5135
mod = relay.transform.InferType()(mod)
output = func_5135()
func_5136 = relay.Function([], output)
mutated_mod['func_5136'] = func_5136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3660_call = mutated_mod.get_global_var('func_3660')
call_5137 = func_3658_call()
call_5138 = func_3658_call()
func_2010_call = mod.get_global_var('func_2010')
func_2015_call = mutated_mod.get_global_var('func_2015')
var_5144 = relay.var("var_5144", dtype = "float32", shape = (504,))#candidate|5144|(504,)|var|float32
const_5145 = relay.const([5.906937,5.803927,5.727113,2.287603,-2.658973,-4.396927,6.233854,-4.796462,6.179513,3.516502,2.073331,-4.080551,-2.557629,2.075354,4.332627,0.169996,0.200844,9.187934,-1.899177,1.320269,-3.261778,8.385088,-9.897163,4.262508,-4.286886,2.985040,-6.960322,1.313697,-2.822711,-6.391161,4.941979,-0.674760,-4.492924,6.843795,0.917270,-7.820532,3.233543,2.072403,1.306124,7.588950,-3.686588,3.054228,-0.087878,7.986021,2.677670,-9.577103,6.656751,0.700696,3.962956,-4.485010,5.780707,-8.268722,-8.476028,-9.509388,-7.183198,8.795954,0.689260,-2.430681,-4.493253,-9.709010,4.194376,-9.706721,4.159522,8.369129,4.207903,2.945591,-3.046937,3.094279,-7.651239,-4.204959,4.314495,2.823532,-2.072840,6.752434,8.863083,-1.818077,-3.164758,7.094995,-7.153689,-5.034148,-9.774777,-9.237114,7.132928,6.549244,5.234814,3.381391,9.262680,3.123521,-5.040170,-9.272132,-8.687805,-9.582128,-2.088533,1.066579,-2.676988,-4.862628,8.842003,8.535033,-1.566336,-4.721892,-9.685344,-8.450606,-3.510610,4.727741,-8.613236,-6.767450,-2.781582,-1.680225,-2.285626,8.943663,9.973743,7.073171,-5.397870,-9.709633,7.651682,7.936279,-6.329367,-0.390247,7.508836,4.350715,5.232911,8.732923,-6.827792,-4.390120,4.221646,-8.430509,7.024428,5.996602,-7.246173,-2.912998,3.775206,-8.821173,-3.663610,-7.830860,-1.893760,7.150695,-8.589097,-5.562678,-5.171993,1.076378,-5.117804,2.672038,-9.649268,-8.013176,-0.189766,-1.200075,-4.784034,0.097915,2.518383,-4.106751,7.179024,-8.815991,-2.699199,-4.829586,3.469432,-4.669396,6.344742,-3.200806,6.760659,2.402796,6.245335,2.381339,-3.743296,-8.003095,-4.857193,9.266513,8.131509,7.272052,-3.869681,-6.768091,-4.197972,-4.266810,-9.979364,5.902665,8.119209,7.478472,-0.027618,-4.384917,1.515478,6.748676,5.642653,9.638072,-8.835380,3.425581,5.735368,-3.450764,-4.910615,7.362375,1.297856,-0.046524,8.894053,-7.383907,-6.624307,-9.688923,8.414290,-5.692068,1.301253,3.631710,-7.012904,-3.851162,5.921904,5.356258,9.709189,-8.662992,2.113849,6.059242,5.546896,4.668930,-9.088675,5.657463,0.648041,4.040299,-1.273693,-0.406369,6.591734,-7.113728,4.612713,-5.783255,-1.328633,-1.326638,-6.114839,7.481858,9.144758,6.119192,-3.866966,1.056429,-1.476717,-0.866845,-5.759410,-1.221495,-6.311833,-2.568004,-7.442394,-0.795646,3.995287,2.535261,1.545171,6.092081,3.708834,-8.040941,-0.043860,3.764196,-4.066419,6.350589,-2.952049,-1.949879,-2.656168,-6.592542,-4.506127,8.959752,9.688407,6.416024,7.362508,8.375074,0.898988,5.176030,-0.775640,1.123742,-3.367866,6.186777,-0.988321,6.451563,-2.085614,6.752384,7.079102,-1.876226,8.307395,7.580016,8.446967,3.731927,-3.251140,-0.130378,8.547552,-0.992200,-5.295217,-6.383559,7.287433,1.029084,-5.500562,-1.006394,8.569528,-7.961749,-6.307744,-9.500551,5.211213,7.622866,-0.143748,-6.920580,8.842025,3.924711,-0.789137,-3.866251,-7.560544,7.498795,-0.038674,-9.348303,-2.230392,5.978132,-6.250381,-1.193977,7.087744,8.887738,6.613162,-9.739210,-3.647692,-2.794341,4.377245,0.448404,-5.118099,-3.517895,-9.995313,5.512203,-8.209752,-3.639572,-5.459638,-8.113584,-7.421038,8.589488,5.287468,-4.157823,6.069956,-6.634367,8.300922,-7.006600], dtype = "float32")#candidate|5145|(324,)|const|float32
var_5146 = relay.var("var_5146", dtype = "float32", shape = (784,))#candidate|5146|(784,)|var|float32
call_5143 = relay.TupleGetItem(func_2010_call(relay.reshape(var_5144.astype('float32'), [504,]), relay.reshape(const_5145.astype('float32'), [54, 6]), relay.reshape(var_5146.astype('float32'), [784,]), ), 11)
call_5147 = relay.TupleGetItem(func_2015_call(relay.reshape(var_5144.astype('float32'), [504,]), relay.reshape(const_5145.astype('float32'), [54, 6]), relay.reshape(var_5146.astype('float32'), [784,]), ), 11)
bop_5157 = relay.bitwise_xor(var_5146.astype('int16'), call_5143.astype('int16')) # shape=(13, 5, 784)
bop_5160 = relay.bitwise_xor(var_5146.astype('int16'), call_5147.astype('int16')) # shape=(13, 5, 784)
bop_5173 = relay.logical_and(const_5145.astype('bool'), call_5137.astype('bool')) # shape=(13, 5, 324)
bop_5176 = relay.logical_and(const_5145.astype('bool'), call_5138.astype('bool')) # shape=(13, 5, 324)
output = relay.Tuple([var_5144,bop_5157,bop_5173,])
output2 = relay.Tuple([var_5144,bop_5160,bop_5176,])
func_5182 = relay.Function([var_5144,var_5146,], output)
mod['func_5182'] = func_5182
mod = relay.transform.InferType()(mod)
var_5183 = relay.var("var_5183", dtype = "float32", shape = (504,))#candidate|5183|(504,)|var|float32
var_5184 = relay.var("var_5184", dtype = "float32", shape = (784,))#candidate|5184|(784,)|var|float32
output = func_5182(var_5183,var_5184,)
func_5185 = relay.Function([var_5183,var_5184,], output)
mutated_mod['func_5185'] = func_5185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_5241 = relay.TupleGetItem(func_1626_call(), 0)
call_5242 = relay.TupleGetItem(func_1628_call(), 0)
func_5182_call = mod.get_global_var('func_5182')
func_5185_call = mutated_mod.get_global_var('func_5185')
const_5283 = relay.const([-9.798670,1.769299,-0.358037,-9.140745,7.721714,-8.254701,-0.751727,-9.355165,3.585060,-1.917735,-3.054481,-8.365230,2.679840,3.473654,-9.327783,-6.655117,-0.471503,9.356392,1.088140,6.698367,-4.997896,-0.361456,3.595806,7.579052,-3.925163,4.399164,-0.581278,-4.280163,2.655223,-4.751323,-4.765734,0.048500,2.044706,6.274943,-9.282984,8.379776,1.941395,-0.340070,6.818137,1.094107,6.816251,-0.928038,4.560235,-5.755608,-6.261876,-9.735121,8.610193,3.752596,-2.715175,0.171234,2.527460,3.453648,4.019782,0.781662,7.034050,-6.727662,8.887051,-8.324925,0.698117,-4.896721,-8.726459,-3.372293,-5.979005,-5.128181,7.357626,7.085480,-1.643824,5.064855,-7.932996,-6.874306,8.672722,4.642949,5.922289,6.168287,-4.965942,-6.961236,-8.939991,-7.692251,-9.560423,0.383471,-1.872550,6.167992,8.886893,-5.215995,1.914870,8.027800,6.738627,-9.008013,6.448534,-8.950192,4.743005,-4.611535,2.839650,-4.358928,2.822118,9.310405,-6.913522,-9.937864,4.222075,-8.643367,-6.754542,-4.780535,-3.484835,-1.224488,-1.172043,2.015381,-6.498477,-9.586218,-8.949028,7.343708,-5.659733,1.226771,9.709642,0.314189,2.624058,-6.775048,4.626791,9.940633,9.045942,3.620333,-4.964854,8.906095,-8.005780,4.585387,-9.960827,-2.405138,7.136931,6.883667,-7.096860,-0.827468,-9.534626,4.406355,4.143685,8.659739,-6.673256,-0.748917,5.526367,7.039231,9.154828,-4.655255,-7.904974,3.662144,9.487627,-1.839314,9.226055,3.916105,4.189055,8.925839,5.647118,0.149545,-5.528879,3.926087,4.725507,5.629150,9.362606,-1.545646,9.227453,5.257854,1.080668,-2.419176,-1.439810,-4.548140,-4.867447,-0.846608,2.905213,1.435800,-7.287984,1.533198,-1.187397,-2.150778,0.780624,0.354945,-3.040892,9.516020,-0.817599,-0.502058,2.538649,7.075840,5.168013,8.928268,5.977003,-3.109018,4.109604,-3.607975,-4.863675,1.095548,0.639003,-5.755018,-0.652226,9.013838,8.661304,9.407998,4.421482,-5.175796,4.365732,2.827890,0.804281,-2.993800,9.359886,-4.274927,2.351586,7.448652,-0.335162,6.462774,6.380003,3.128177,-8.197610,8.286729,2.418148,-9.542684,-8.603886,-1.707631,7.232573,-1.551633,1.836483,7.366674,4.247665,9.441853,-8.087074,-5.375243,-4.122508,7.157547,-4.497511,-6.556249,-9.994025,-8.995879,-1.971184,-2.946483,5.424083,-1.691703,1.901111,-6.921177,8.680783,-3.924015,-7.880748,7.347344,5.051069,4.444018,-6.106630,3.220849,2.164851,2.332177,-7.352324,9.888301,-6.965901,-4.920599,7.632962,-7.426682,9.860299,2.957134,7.256039,-0.004197,8.872265,9.983229,8.844622,-2.868056,-9.235387,-2.237296,-7.957952,9.713851,6.272284,-1.991948,-2.645785,6.750665,-6.657958,1.679858,-5.961672,-3.695577,6.918125,4.764803,-7.191947,0.874875,4.400049,-7.168697,-1.620105,-0.004222,5.624105,-2.028693,-3.302228,2.877009,-0.878554,-8.613476,-4.953171,-9.550026,-8.324546,-1.105401,-3.043102,-7.821811,1.557828,6.282779,-3.244977,-0.781383,-0.338182,4.441298,-2.006590,6.949315,4.805978,3.416417,-9.105618,1.412863,9.429862,-8.407151,-0.961099,8.149758,1.796409,8.865409,1.136937,9.675759,-5.168723,-4.342249,-6.069617,-8.672160,0.072534,3.720256,9.740824,2.758902,1.301644,-6.480746,-9.143383,7.378055,-2.330588,5.926510,-3.166354,-2.470123,8.804260,-9.430213,-0.772291,5.447952,-5.158926,-1.698442,6.318282,7.442863,6.566918,-6.016197,4.210064,2.172694,-1.930242,0.252129,7.459977,-4.249069,-5.754053,-8.860271,0.107090,2.194631,6.822766,0.546629,0.125208,8.322781,2.382101,-9.889432,8.618878,-1.648428,-9.668306,3.535627,8.730673,-6.848872,-1.375368,1.467195,-7.782737,0.782736,-5.673980,-8.733084,1.364873,-1.859944,-6.719624,-7.345039,-0.981783,4.213995,-2.022394,-3.169635,-4.548234,-5.604306,-3.391805,-4.474674,-6.002391,-0.068572,5.565074,-2.187844,-1.360161,8.600715,5.335249,-2.780191,-2.236039,-7.370205,-8.591322,8.771466,5.631808,0.391744,7.810981,-5.266135,-6.100419,-0.990723,3.366314,-7.637814,3.015801,-7.370181,6.315620,-5.963749,7.754188,9.132235,6.186404,-3.791977,-2.290836,-3.549355,-7.968656,0.285835,3.123586,-0.478223,-4.920831,-9.277497,-2.067995,-8.075144,-0.070642,7.674719,6.501130,0.586433,8.566501,7.325188,-6.734511,1.877972,-2.238494,3.157794,-9.238534,-7.264582,-8.825435,-4.129793,-0.445133,5.126733,4.038439,-8.375898,5.271405,-6.773149,9.641585,-5.287737,0.994956,-7.916615,-8.396820,-2.155068,6.470697,2.799859,7.092040,-8.516480,-4.415079,-2.751850,6.281171,-2.780049,4.348035,5.603951,-3.008780,-0.454688,-0.649256,3.985614,-5.977835,7.285598,-0.397100,1.886287,9.552727,8.028425,6.160793,1.275489,-6.442235,5.350476,-0.685594,3.478308,-9.548470,2.494426,-4.094746,1.386953,-7.737497,1.606816,7.607975,-6.097719,-7.721271,-9.460903,-9.633011,-7.161688,8.858793,-6.680295,6.689097,-8.522684,2.153726,-0.359677,-0.395941,-8.990756,-3.650204,-6.628518,-8.332962,-2.341245,-5.344998,1.261804,3.392670,-7.335033,6.842840,-4.952538,-7.561870,8.440726,-0.890245,1.026812,7.162154,0.810815,2.907301,-5.179076,8.962404,6.372618], dtype = "float32")#candidate|5283|(504,)|const|float32
const_5284 = relay.const([[-0.996003,2.487485,-0.192815,6.160242,2.274861,7.374559,6.758759,-9.401337,3.086091,-6.203195,1.159294,-4.795412,3.367426,8.766423,-8.260195,-3.443745,-2.238757,-8.069542,1.700244,-6.117129,4.944805,-5.198729,-3.021763,-6.592516,-9.301004,4.909036,-6.528370,-5.239750,-4.812426,2.530559,-1.989670,8.740016,0.414735,7.981417,8.619844,0.633626,-9.732118,1.587240,-1.142512,-9.656898,-5.390904,-4.679944,0.434129,2.158445,2.671664,2.116731,-8.625311,-8.026976,-2.209739,2.408476,2.196694,-6.599801,-6.764754,-6.083655,1.938605,8.383672,8.754081,-6.875116,3.571909,-7.973142,-3.241067,-7.298193,-6.152614,-7.296730,-8.125464,-9.034894,-6.457157,7.109145,1.404423,5.475527,-8.081525,-8.682703,3.943186,2.495608,-2.145080,4.656305,9.709283,-1.044539,-6.356623,-6.218186,-8.451932,-1.317921,3.165351,8.549400,1.512654,-4.646031,6.900440,7.002201,1.594950,8.028818,-7.076608,6.322383,-8.289831,1.750708,-0.218263,-4.406436,8.091181,-6.438759,-9.673426,5.266634,-8.568819,-9.456388,-6.700090,-2.032705,-0.976314,-2.413994,-9.212553,-9.728334,3.342778,6.248619,1.941522,-2.344691,-1.069199,3.542809,-7.318012,8.465081,-7.729083,-1.835511,7.081588,3.422550,1.501908,5.939276,5.479630,-0.049772,7.247084,-0.981503,4.149093,1.442846,4.390823,6.151602,0.904724,9.580204,-9.171086,8.360274,-2.261442,8.021613,-0.883738,-2.661634,-6.863535,-0.741688,-0.400250,-0.420198,0.860337,-7.587912,-7.746822,-7.636048,-7.171848,-3.420557,4.962512,-2.809644,-4.350075,3.695279,-5.453514,-7.190645,2.789972,7.548624,9.784112,7.738283,6.050883,-5.176542,3.079699,-3.926136,-8.879350,-8.050501,-3.147777,8.596722,-1.264832,8.325179,-8.279077,8.675798,-4.428421,-4.755373,-5.037779,-9.553847,0.425086,-6.698930,4.616324,-3.586128,1.431333,7.163796,3.439270,-0.586320,-2.445039,3.218483,3.629230,-8.960168,0.195346,4.565236,-3.195685,2.216031,-2.025661,6.600536,-0.003516,4.240468,-1.479954,1.301794,-8.922262,-0.379740,7.452482,5.291073,-3.893551,-1.439458,-6.643496,-6.657092,8.421153,-2.113700,1.567595,5.150035,0.606972,5.879195,-7.254138,-8.642425,-5.074402,2.998453,-9.342762,-7.694308,-8.011128,-0.129278,-4.126490,9.214667,-6.865675,-0.779308,3.786085,-6.780516,-8.284513,3.892730,-5.028197,3.364657,-2.095145,2.572216,-7.771559,3.553572,-3.553589,5.261525,-8.442984,5.337039,5.106052,-6.826927,4.574840,7.684663,-1.175343,-7.155703,-6.161934,2.709413,-7.690130,7.204655,-3.153130,7.934582,-9.581746,-5.382440,-4.313893,-2.222531,6.945835,-7.667396,2.560641,-9.117687,-8.614959,-1.551284,5.321304,4.562261,-8.839784,-5.499302,-9.457022,-3.645958,-9.222396,8.112289,-4.201310,-6.467427,6.648477,-7.891028,3.363132,-1.353248,-1.613421,-2.119415,4.574517,6.855089,1.975365,-9.039889,-8.265135,-0.153277,4.024520,7.186660,5.386963,0.813082,-6.648932,8.219969,2.536901,-2.584955,2.933837,2.714652,-3.871035,-4.005139,-0.189656,1.979773,1.614339,2.473252,-6.845425,-7.153125,3.598704,-3.329884,-6.703382,7.652374,2.076827,6.871711,-8.348003,8.708835,4.647920,-7.712141,9.698897,-0.642768,-8.152632,5.287346,-9.318136,-4.247984,-8.653652,-3.186486,5.779187,-1.527703,4.756783,0.704670,-8.337082,-2.062193,-5.240124,4.199824,7.185404,7.040524,4.444583,-3.810422,-4.501859,0.349830,2.589446,5.942890,8.100470,5.793638,9.465367,2.851320,-5.228719,-6.047186,-8.795929,-1.816899,9.725603,8.347048,-7.357321,7.703341,4.320338,7.489384,-8.197630,3.233121,-4.299881,-3.336956,2.922527,0.123449,5.187174,-6.618469,5.054361,9.578310,-6.204626,-6.503555,-4.567130,-9.628122,-7.033354,-0.005138,-0.599662,0.575748,6.293172,9.273457,4.383272,-5.214716,-3.028963,-8.485796,3.514387,-4.201576,0.596097,-4.118246,-6.105365,7.615254,1.950208,4.236495,8.573408,-6.902697,-3.416840,8.834043,5.745964,2.208713,-1.571626,0.946566,1.612065,-0.280011,-2.196141,3.283908,7.003945,-4.906421],[-4.934714,-6.164363,-0.227128,-3.228360,-1.265815,-8.444263,9.189067,6.386439,3.262461,8.787794,9.209079,4.919242,5.077725,-4.857083,6.468375,3.171950,8.220856,7.183056,-5.930974,-2.697704,7.497302,-2.262664,-3.316393,5.983024,4.472236,9.244948,-4.275887,-8.075631,4.737275,-5.613759,7.632420,-5.960981,0.677412,-6.058385,-7.305625,3.016072,8.052975,-0.559126,9.140523,-2.206015,7.211294,9.483638,-2.104936,4.413217,9.424365,1.796191,6.345976,7.363747,3.884912,-3.313096,-9.347893,-4.354397,-4.795022,-2.892152,-8.908340,-7.355051,-6.525533,7.311721,5.548447,-6.094511,-3.312949,-0.195100,6.144544,-5.501332,1.887833,-8.978454,-2.778804,-4.469996,-4.850395,0.654839,0.354642,-6.753463,3.676737,-0.351477,-7.440001,6.450116,-3.758639,-7.769094,4.495655,9.913674,1.909282,0.142401,-5.923189,-1.227900,-8.141123,8.277290,9.423813,0.199317,4.887838,-3.569335,-0.213827,-5.938116,9.103874,-1.384474,6.736418,7.542527,-2.588305,7.711833,-3.968222,0.398560,0.166017,-3.747723,-9.987788,2.893945,-6.542216,6.637780,-9.568762,7.169512,-6.247296,-4.979630,0.365814,-2.496024,-4.589489,-6.446333,-0.660332,6.204136,-3.703466,-0.616766,2.826494,-0.886609,5.782987,-2.957063,9.313725,9.084917,-1.382467,-7.605228,-5.802752,1.479021,-0.915521,9.320124,7.160483,-3.196200,6.183146,-0.616267,-1.931590,-4.278534,-8.262497,1.231012,-6.907602,5.676911,1.191534,1.960908,-2.920802,-0.384336,-5.181395,4.420641,5.066317,-9.837896,1.527736,6.572713,3.394856,9.590635,1.556213,-1.869472,-0.587537,-4.414285,8.633029,4.680990,-2.855772,-8.990251,2.304639,-0.807620,5.138378,9.481528,4.221190,-1.235798,-6.651551,-4.841414,7.297166,-7.559338,-1.975130,3.647251,-9.358469,9.414771,-0.171256,6.791868,-3.184474,-4.835060,-6.745149,-8.275047,4.594594,9.751185,-2.569666,3.578191,-9.241476,8.093008,-0.382909,-7.242017,6.369182,2.644613,5.121805,-4.651609,-5.123836,9.837225,-7.943235,-4.121604,-0.513725,-1.960941,5.660576,-2.070967,6.332212,-3.848176,-3.875703,-3.370219,-8.212147,-0.529260,-5.377862,8.890273,0.743082,-9.103378,-7.657581,5.629201,-0.090636,-7.291445,7.965993,0.683202,-2.200849,-9.874621,-3.814706,7.460335,-0.258632,-1.441003,-4.485699,6.231077,-7.203742,7.823755,-9.368521,3.327407,-4.582993,-3.689466,0.578542,-0.014864,3.155475,-1.760277,3.722176,2.280550,9.335090,4.896469,4.182837,-4.595033,-0.730990,2.967656,-6.151457,6.571670,-7.102793,2.994379,5.039324,5.544955,-9.148514,-3.105215,7.130532,-4.685483,1.825529,-0.813814,-9.455626,-8.585637,0.151343,-6.635405,-7.233799,-2.037313,8.960132,-4.660154,-2.934326,-7.264419,-1.161707,-8.093772,-6.876086,-2.559485,-7.701038,-5.552865,8.284606,2.899602,-1.009114,8.202383,5.198633,3.156107,1.980740,3.668686,-5.544313,-2.647588,-9.532572,-6.610149,5.211178,-3.735291,-8.432920,4.946510,6.438899,-9.746786,-6.564017,7.612374,8.900847,-1.679669,-4.910623,-0.774494,0.210490,6.459455,-4.936517,-9.766962,5.852910,8.643676,-7.275876,7.932309,-4.831345,3.730146,5.284537,-9.089733,-9.725294,1.040477,3.903500,4.687388,1.237886,-7.892060,-9.980963,5.419896,-0.799464,2.882900,0.988789,-9.323829,-6.327284,-4.161918,-3.846892,5.949676,-3.429872,-6.373934,-0.447211,-7.783470,-3.286369,4.471409,-9.957045,-5.151837,-3.678503,2.485454,4.081108,4.876596,2.988253,9.327477,-4.313468,-8.028010,-9.222909,-6.219702,-3.369642,-0.303457,-2.484654,-9.920190,-1.227607,0.903287,-2.887267,1.760368,-4.432972,-4.729844,-0.523834,-3.568400,-5.015098,0.536014,2.321323,3.314662,4.938059,-7.034140,-8.122710,-0.824424,-4.507602,2.839078,-8.369916,-2.136744,6.965218,-4.322498,-6.577122,-6.068605,-4.469918,4.085384,-7.022404,0.015748,-3.405047,3.644698,-5.667895,-2.860165,9.677531,-1.071375,-7.303904,-8.815440,2.810412,2.510280,3.823120,-3.551496,-5.038321,1.861311,-2.285517,-7.662103,2.571417,3.429319,7.209365,-2.406988]], dtype = "float32")#candidate|5284|(2, 392)|const|float32
call_5282 = relay.TupleGetItem(func_5182_call(relay.reshape(const_5283.astype('float32'), [504,]), relay.reshape(const_5284.astype('float32'), [784,]), ), 0)
call_5285 = relay.TupleGetItem(func_5185_call(relay.reshape(const_5283.astype('float32'), [504,]), relay.reshape(const_5284.astype('float32'), [784,]), ), 0)
var_5286 = relay.var("var_5286", dtype = "float32", shape = (2, 392))#candidate|5286|(2, 392)|var|float32
bop_5287 = relay.greater_equal(const_5284.astype('bool'), relay.reshape(var_5286.astype('bool'), relay.shape_of(const_5284))) # shape=(2, 392)
bop_5290 = relay.bitwise_xor(var_5286.astype('int32'), relay.reshape(const_5284.astype('int32'), relay.shape_of(var_5286))) # shape=(2, 392)
uop_5296 = relay.sinh(bop_5290.astype('float32')) # shape=(2, 392)
bop_5299 = relay.mod(uop_5296.astype('float32'), relay.reshape(bop_5287.astype('float32'), relay.shape_of(uop_5296))) # shape=(2, 392)
func_1906_call = mod.get_global_var('func_1906')
func_1907_call = mutated_mod.get_global_var('func_1907')
call_5302 = func_1906_call()
call_5303 = func_1906_call()
output = relay.Tuple([call_5241,call_5282,const_5283,bop_5299,call_5302,])
output2 = relay.Tuple([call_5242,call_5285,const_5283,bop_5299,call_5303,])
func_5306 = relay.Function([var_5286,], output)
mod['func_5306'] = func_5306
mod = relay.transform.InferType()(mod)
mutated_mod['func_5306'] = func_5306
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5307 = relay.var("var_5307", dtype = "float32", shape = (2, 392))#candidate|5307|(2, 392)|var|float32
func_5306_call = mutated_mod.get_global_var('func_5306')
call_5308 = func_5306_call(var_5307)
output = call_5308
func_5309 = relay.Function([var_5307], output)
mutated_mod['func_5309'] = func_5309
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5373 = relay.var("var_5373", dtype = "float32", shape = (1, 3, 9))#candidate|5373|(1, 3, 9)|var|float32
uop_5374 = relay.log(var_5373.astype('float32')) # shape=(1, 3, 9)
output = relay.Tuple([uop_5374,])
output2 = relay.Tuple([uop_5374,])
func_5396 = relay.Function([var_5373,], output)
mod['func_5396'] = func_5396
mod = relay.transform.InferType()(mod)
mutated_mod['func_5396'] = func_5396
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5397 = relay.var("var_5397", dtype = "float32", shape = (1, 3, 9))#candidate|5397|(1, 3, 9)|var|float32
func_5396_call = mutated_mod.get_global_var('func_5396')
call_5398 = func_5396_call(var_5397)
output = call_5398
func_5399 = relay.Function([var_5397], output)
mutated_mod['func_5399'] = func_5399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3660_call = mutated_mod.get_global_var('func_3660')
call_5420 = func_3658_call()
call_5421 = func_3658_call()
output = call_5420
output2 = call_5421
func_5424 = relay.Function([], output)
mod['func_5424'] = func_5424
mod = relay.transform.InferType()(mod)
mutated_mod['func_5424'] = func_5424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5424_call = mutated_mod.get_global_var('func_5424')
call_5425 = func_5424_call()
output = call_5425
func_5426 = relay.Function([], output)
mutated_mod['func_5426'] = func_5426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2524_call = mod.get_global_var('func_2524')
func_2526_call = mutated_mod.get_global_var('func_2526')
call_5459 = func_2524_call()
call_5460 = func_2524_call()
func_5424_call = mod.get_global_var('func_5424')
func_5426_call = mutated_mod.get_global_var('func_5426')
call_5461 = func_5424_call()
call_5462 = func_5424_call()
func_58_call = mod.get_global_var('func_58')
func_60_call = mutated_mod.get_global_var('func_60')
const_5482 = relay.const([-6.186731,1.092511,8.489767,-2.453703,-6.685725,0.323556,3.429923,0.917120,4.923451,-7.044113,-2.030829,-4.788239,-3.259500,-8.661928,-6.413519,-1.620424,7.597465,8.176845,-3.923536,3.088320,5.011967,-1.932361,6.346405,-2.074235,2.067271,1.722481,9.385670,9.723928,8.357346,7.505688,-4.147915,4.607609,0.735106,-2.179750,-6.233349,-4.321242,-5.588787,-4.051285,-8.320006,-8.954899,0.905238,5.443326,-9.873726,-1.633665,-1.174448,9.039027,9.015482,3.606162,7.417662,1.584553,6.963797,0.491582,-2.779606,8.673466,7.777028,-2.358836,8.038608,7.921206,6.987461,1.453296,9.486614,-2.374305,1.079370,7.533108,8.229941,5.182584,-5.732234,-5.541563,-7.207592,8.228907,-9.083172,5.932294,-5.335325,6.646861,-6.027428,7.711150,0.877819,1.926784,7.096435,5.485754,1.491345,9.822433,6.858851,-5.503070,5.645137,1.104397,4.033628,8.715962,2.954264,3.246923,-9.285949,9.107367,-0.484139,-8.069934,5.860459,-0.526919,-3.083702,-2.761947,-6.676603,-7.433652,2.168778,3.692151,-2.586063,-7.099200,7.574193,7.020107,-4.510717,5.890359,4.627215,8.137579,9.021391,1.984997,5.399978,7.715315,-3.102965,-0.616840,-6.976179,5.708799,-4.135744,-0.621887,9.046364,5.297140,0.310910,5.705209,1.705391,0.976820,-6.801181,-7.882640,9.427711,9.028624,6.623814,9.990175,1.040370,-3.508199,-1.865219,0.423804,9.633109,8.438400,4.368673,4.554978,3.021540,0.416002,-1.751563,-3.985401,-0.156771,2.262519,4.091052,6.369863,1.337625,-3.075695,-2.732512,-4.836590,8.314241,-7.874041,-1.747761,7.573526,1.966646,3.687224,-9.180992,9.829210,-7.456299,6.539825,8.679859,-0.291134,-0.127894,-3.265055,0.370960,-8.853287,-6.960864,5.071940,8.848900,0.616256,-1.058253,-0.366918,-2.627990,1.599803,-3.815293,-4.826919,7.681593,6.067670,4.803973,-7.152560,-8.189064,8.425231,-3.665810,4.207481,6.261680,-0.598611,3.781627,8.324033,-0.273102,-7.991695,1.756335,-9.804497,-0.957005,-1.337295,6.331070,-9.674459,-3.195660,-1.935081,-7.146395,-9.608205,-6.181515,3.651461,6.623718,0.277285,5.863501,-1.939695,-6.906981,7.416148,-4.465092,5.240967,9.674464,7.813636,8.755383,-0.471025,7.284798,-2.256080,3.298183,-7.375547,-5.640272,-1.194194,9.336968,-7.092996,4.563076,-1.659600,8.257136,1.915826,9.350169,-3.836503,-6.300278,3.156301,3.853010,-1.504890,2.210541,9.333328,-8.698852,-0.023968,8.164325,-0.220090,-9.240475,-2.690134,-4.041063,-4.183644,8.639334,-7.531503,8.362226,5.463982,1.310628,3.198038,-7.941727,-8.717972,-0.201039,6.559053,1.922425,-9.433600,-0.840628,-6.084188,-6.640744,0.013875,0.642220,-4.424223,4.682899,-9.364272,1.135887,0.980595,-9.831142,-9.728463,-8.197482,-2.428585,8.589948,-6.031254,-5.587924,-8.619316,2.712331,-7.774563,-4.544413,-4.424964,-6.043326,-2.720927,-2.051411,-4.781540,-7.759134,-8.431721,-3.401450,-6.426287,4.368625,8.408890,0.376530,1.116218,3.465399,-7.783080,-9.108924,4.788240,8.497649,-2.716716,-8.423767,-7.553690,8.874023,5.952797,-2.074072,-7.453081,-3.579873,7.467536,8.270221,7.095806,-8.555864,-7.897950,-5.707335,8.127386,-0.470592,5.827753,-5.504297,7.890438,-2.207914,2.630140,-6.685678,4.362114,-4.265004,9.970906,9.390424,-6.193912,-7.450248,-0.308290,7.678039,-4.286782,3.763315,-2.561814,1.523570,4.077596,-5.791774,-6.501752,-0.293292,-3.284972,-9.902728,3.101659,-8.558202,8.229546,-6.435857,6.245631,-5.982195,2.089823,1.302451,4.299127,6.190883,0.945321,-2.040145,1.288439,0.337080,5.459890,3.642888,4.235674,-0.529820,-1.270509,-8.896661,-1.231846,8.294282,-0.370881,7.516130,3.276290,-7.260665,8.853807,1.978366,-4.424266,-0.933182,-9.731411,-1.276072,2.224836,3.813149,3.474191,8.506763,-6.252060,-2.224233,7.669461,-8.286517,-6.605936,8.287245,6.361399,-5.011478,0.557030,7.823743,-8.443811,6.865370,9.960733,1.354454,-2.491293,-9.444290,9.682714,1.447641,1.549052,-5.224755,1.852244,0.045042,-1.336071,-8.681860,-8.689874,8.087592,3.136130,-6.866152,2.309491,9.181054,-5.397676,-8.287107,-5.408518,-5.508041,-2.931375,-3.206402,6.359761,-8.021706,0.271644,2.679523,4.083411,6.199182,-5.177627,7.748897,0.050625,9.206172,-2.350467,-5.213076,-0.516950,-7.889566,4.569467,-8.262077,-3.281598,-0.685003,4.246761,4.859066,-9.650986,0.766780,-9.180244,3.236503,5.367043,5.596830,-9.154130,3.520150,7.467182,0.779437,-1.096030,4.400149,2.969298,-2.398406,9.696550,8.268763,-7.517076,-7.833567,7.401171,6.672769,5.442749,-6.729476,-0.137370,-1.188324,-0.841792,-4.132450,1.485133,9.599383,5.075445,2.855367,-7.661087,-4.486202,6.431002,9.977914,-3.940631,0.992001,-8.677913,-3.413219,9.694454,-1.425582,-8.123371,-5.520437,-0.783862,-5.105957,-4.668175,-7.907204,-3.910232,7.562331,-2.953955,-7.698693,7.985216,-7.938941,-4.095099,-4.653770,1.265591,7.910739,4.465125,9.578761,5.645394,7.898352,5.157664,-7.178195,7.877217,9.735736,9.664437,-9.240305,5.216993,-7.781791,3.509378,-2.232158,4.966899,8.413396,8.855975,-2.508465,-3.075498,-5.899811,4.311135], dtype = "float32")#candidate|5482|(504,)|const|float32
call_5481 = relay.TupleGetItem(func_58_call(relay.reshape(const_5482.astype('float32'), [12, 6, 7])), 0)
call_5483 = relay.TupleGetItem(func_60_call(relay.reshape(const_5482.astype('float32'), [12, 6, 7])), 0)
bop_5490 = relay.power(call_5459.astype('float32'), const_5482.astype('float32')) # shape=(13, 5, 504)
bop_5493 = relay.power(call_5460.astype('float32'), const_5482.astype('float32')) # shape=(13, 5, 504)
output = relay.Tuple([call_5461,call_5481,bop_5490,])
output2 = relay.Tuple([call_5462,call_5483,bop_5493,])
func_5496 = relay.Function([], output)
mod['func_5496'] = func_5496
mod = relay.transform.InferType()(mod)
mutated_mod['func_5496'] = func_5496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5496_call = mutated_mod.get_global_var('func_5496')
call_5497 = func_5496_call()
output = call_5497
func_5498 = relay.Function([], output)
mutated_mod['func_5498'] = func_5498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5496_call = mod.get_global_var('func_5496')
func_5498_call = mutated_mod.get_global_var('func_5498')
call_5526 = relay.TupleGetItem(func_5496_call(), 0)
call_5527 = relay.TupleGetItem(func_5498_call(), 0)
uop_5560 = relay.sigmoid(call_5526.astype('float32')) # shape=(13, 5, 1)
uop_5562 = relay.sigmoid(call_5527.astype('float32')) # shape=(13, 5, 1)
func_2023_call = mod.get_global_var('func_2023')
func_2026_call = mutated_mod.get_global_var('func_2026')
const_5567 = relay.const([-5.799657,-8.844828,-9.345277,-1.854338,5.297385,-0.198869,6.661001,-4.750714,8.007597,-6.600927,7.229562,-5.993997,3.927470,3.657046,-2.124369,6.896373,-7.381670,-4.191172,-6.381627,-8.025719,5.914596,4.895363,-3.229414,-6.739088,1.020851,-7.988717,5.429234,8.951598,-1.441774,2.976556,3.109832,7.112129,-8.863850,-5.322722,0.302816,-3.972470,-7.617315,1.187585,5.653294,-9.754776,-5.793213,-9.710063,1.758678,-0.204117,-4.310605,-2.987500,-6.266027,2.106011,6.084744,-1.360993,-0.602339,0.677396,-2.146657,-6.495164,-9.422900,-4.328783,8.469291,4.439861,-2.989269,-4.030185,9.958466,4.819069,5.227747,3.661731,-1.620210,4.017379,-7.245004,0.656341,8.782105,3.567795,2.527564,-9.251133,-7.638511,5.315669,-6.872945,7.201768,0.208071,2.936672,4.422330,0.302785,-5.184358,1.356806,-3.655900,-3.789988,-9.749631,0.712047,3.214461,-4.941718,8.614097,8.045877,0.253422,-5.699054,9.891977,7.754965,-8.397905,-4.144573,1.472524,6.464388,3.184819,8.342558,1.369063,9.603022,7.678544,-9.254679,6.281205,-9.740230,-2.932160,5.100595,-9.463869,8.117457,-7.209814,-9.290413,2.954146,4.541953,8.643441,-2.499730,3.229410,0.011185,2.516155,-3.334515,5.026863,2.803731,9.091213,9.394686,-6.880122,-1.091919,9.756542,-8.509113,-0.162040,7.957676,1.931004,0.889520,7.149750,7.219246,-0.965865,5.786426,-2.584527,-0.579348,-6.381615,6.691141,-9.288753,2.204235,-5.583351,-5.518595,4.033217,-2.470320,0.748837,9.264403,1.153308,8.585876,-2.820419,2.837295,2.690620,-0.384954,-0.431330,-1.070127,1.557959,-7.230720,-8.893282,4.148696,-6.283434,-8.062033,6.463037,-3.798611,-1.902555,-6.428310,-4.683191,5.509548,7.542335,9.494277,3.851428,-4.862833,6.933788,7.583528,7.191255,7.876970,-7.903680,2.838125,-9.163893,-6.027470,6.681539,0.806675,6.521439,-0.020388,0.939536,-0.361535,1.865673,3.495080,8.509042,-1.705126,4.063839,-4.757024,8.035981,1.068097,5.304280,-3.440541,1.181588,-9.069811,-0.279841,6.219805,3.514339,6.933961,3.426007,7.383993,8.560286,8.740087,-3.936577,-8.619083,-7.841974,6.241260,-4.746600,-2.430857,3.011834,-5.107960,9.262016,3.684616,1.479083,-6.679297,-1.788549,3.371545,6.312641,-4.972277,-6.128842,-1.198160,6.946375,-5.407344,7.545671,4.832009,6.214854,2.755017,4.191008,6.248460,2.445676,6.491633,-9.815403,2.891720,-4.387198,2.336986,-9.172605,7.677096,9.853239,8.198143,-3.670581,4.655643,-9.452884,6.828418,-4.978996,-8.710457,-4.032489,5.661396,-1.546337,-6.658094,-1.852294,5.691026,1.206511,-7.873371,-9.440378,-1.101729,-3.440035,7.386168,-0.857628,5.219898,8.108624,-3.897608,4.029798,-9.751929,-2.454169,-8.713210,-1.848724,5.733323,-9.479670,-7.178958,-7.694747,-9.809865,9.837632,0.408278,-5.616659,-2.350458,6.749950,6.308875,-1.777524,-3.783963,-3.153274,3.182061,6.320308,4.079791,0.611507,-6.184902,-1.733805,-6.669839,-2.378228,5.091569,-5.489649,8.034433,-9.910027,2.905458,-7.509096,9.032710,-6.342901,-2.338879,8.922990,-6.745468,6.457660,-0.038758,1.491277,5.951316,9.233151,-3.986805,-5.729361,2.896229,-0.462817,9.958357,-4.749197,1.573888,-9.863788,-3.942274,0.943034,-0.573918,-8.578077,-6.931326,5.520985,3.251449,-3.435116,0.605350,9.640568,7.151900,0.580765,1.343723,0.589182,-8.666724,-5.288666,-5.009772,8.388415,-9.665305,1.437303,5.950805,5.827662,4.169906,-1.051656,-5.503555,3.457780,8.468876,1.183752,0.630438,-6.446873,-4.088717,-3.697404,-2.854323,1.429507,6.442914,-3.478453,7.596483,-5.604183,8.769031,6.003169,-2.968030,-3.731032,6.526388,-5.106510,-8.612398,4.698140,4.401861,5.900201,4.128888,6.455533,-1.665201,-1.370123,9.049134,-9.519714,6.139577,-7.306282,8.948047,-5.397252,-5.930878,1.902932,6.381642,6.945818,-3.489357,-1.795106,7.218451,7.755901,0.156617,-9.891613,-2.871733,-0.253567,-4.062353,5.664461,6.645722,1.857572,3.999547,-1.373827,0.151021,0.652410,6.844806,6.394567,1.220644,-5.823188,-1.096757,7.400023,0.174391,5.538236,3.946337,5.281171,-6.634615,-7.557581,6.148247,-0.223723,6.761445,2.835986,9.512879,6.130609,3.148742,-5.232842,-0.854899,-0.543711,6.767193,-5.786234,-5.930606,5.316323,-9.966342,-6.631325,-3.778900,-8.557479,2.921972,-4.328452,-2.546577,8.183183,2.524849,-7.888125,-7.680471,-7.903639,-0.097733,-3.180763,-7.752331,0.551190,2.766425,5.209837,-4.305026,0.002149,7.057429,-7.821758,-5.948251,5.703213,9.420003,9.324697,-4.320292,3.506872,-2.220433,1.813098,5.144472,3.273557,5.253034,1.688012,-2.060486,9.655237,-1.775865,-9.533769,9.120404,0.245333,1.204114,-4.837360,-4.273873,-1.886389,5.441697,7.450672,-7.805428,-5.360968,8.731072,1.807137,-0.867800,1.524530,-5.340639,5.911150,2.585785,2.889265,-3.205031,-6.300387,6.278414,5.889319,8.951103,-7.890699,-1.085196,8.292185,-5.097538,8.121350,6.830348,6.948687,-5.010031,5.804503,9.675009,-0.053572,8.601807,-6.554922,2.798249,4.061058,5.411089,-6.670490,-2.971751,6.466823,-5.757095,-4.074764,-3.709178,-7.287407,-0.297360], dtype = "float32")#candidate|5567|(504,)|const|float32
call_5566 = relay.TupleGetItem(func_2023_call(relay.reshape(const_5567.astype('float32'), [504,])), 1)
call_5568 = relay.TupleGetItem(func_2026_call(relay.reshape(const_5567.astype('float32'), [504,])), 1)
output = relay.Tuple([uop_5560,call_5566,const_5567,])
output2 = relay.Tuple([uop_5562,call_5568,const_5567,])
func_5571 = relay.Function([], output)
mod['func_5571'] = func_5571
mod = relay.transform.InferType()(mod)
output = func_5571()
func_5572 = relay.Function([], output)
mutated_mod['func_5572'] = func_5572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1697_call = mod.get_global_var('func_1697')
func_1699_call = mutated_mod.get_global_var('func_1699')
call_5680 = relay.TupleGetItem(func_1697_call(), 0)
call_5681 = relay.TupleGetItem(func_1699_call(), 0)
func_2023_call = mod.get_global_var('func_2023')
func_2026_call = mutated_mod.get_global_var('func_2026')
const_5690 = relay.const([-1.131961,5.486537,-5.502737,-2.522091,-4.033938,-3.976959,-5.904213,7.285726,6.376647,6.829436,-3.964845,3.725021,-1.941925,3.896656,-5.228334,-7.810522,-0.982961,0.067373,3.153063,4.912741,-8.359010,-5.712476,4.639112,-6.789075,4.083454,-8.851757,-0.987089,7.966707,6.592888,-5.064927,2.723376,-0.811374,5.535339,1.509122,9.032493,-1.847277,-5.995982,-2.426003,-6.506393,-2.188592,8.754430,-7.578467,-4.511549,-5.109932,-6.246236,-7.325369,4.455415,-6.198741,-7.672693,2.565439,-5.496920,9.063027,2.252668,-0.538081,-2.366305,3.492631,1.001733,3.229577,6.532887,9.804834,0.072977,4.416671,-1.831730,5.264685,9.916799,2.961152,-4.039693,1.725413,-3.365169,6.667287,-9.804430,-5.997861,-9.229110,-8.244550,-7.380938,-9.727814,4.156491,-9.725710,6.364927,-0.057689,9.867923,-9.455955,-4.887372,5.783842,5.500904,0.396465,1.415439,0.047346,-0.925105,5.251614,-7.345847,-7.242989,0.059471,8.017412,-9.042269,-2.861314,8.205718,3.485741,-2.550704,5.187217,9.724348,2.429653,-3.067005,7.454231,-2.650953,7.553753,-1.331682,-4.652612,9.620831,-5.767303,3.320267,9.151431,5.966373,-5.052557,1.071080,4.952779,4.846528,1.521236,6.099788,-3.571217,4.516039,-5.432508,3.230853,7.610381,1.913601,-9.162288,-1.838642,0.701403,-2.014848,4.909985,5.140777,-2.007431,-6.164236,3.316985,-4.840855,1.505261,1.922342,6.802141,3.285712,7.352265,-1.062455,2.385751,3.599310,-2.038725,7.377356,0.458011,-2.324517,2.621513,5.811137,7.337528,-2.607467,5.775519,-8.899936,-2.137579,-0.113354,-9.344593,5.121984,7.551800,1.693630,-9.411384,-9.224397,6.186328,6.191357,1.994436,9.020295,1.856548,7.019659,-6.142884,4.342288,6.846121,-8.574401,1.198740,-6.386676,7.002789,-5.765995,-6.028545,1.510771,-4.709294,-3.543713,-8.440174,-2.088333,2.105534,-9.623686,6.981931,-4.861331,7.450525,4.945320,-1.889235,-7.990758,9.740226,4.916528,6.773233,4.094829,2.760554,2.226181,-9.127753,5.352962,5.716065,9.851637,-3.526260,-7.120255,-5.322414,-8.312484,8.126267,-3.753557,9.726054,-8.094964,5.324095,-9.554579,2.759941,-9.387868,0.100172,3.782656,1.537639,-3.933939,-5.709971,-2.346107,-3.364346,2.215450,2.050945,-4.506346,6.646033,0.509006,-5.103171,8.115825,0.931662,3.685633,-4.735559,7.918186,0.770061,8.435156,-0.686208,5.522621,-1.121884,-1.735878,-3.666288,-7.342205,3.356670,-3.116018,-0.318973,6.080889,7.102122,-9.672836,2.732583,-3.180875,5.649136,-6.846667,9.047146,-4.139017,-6.403342,7.390721,4.230570,-7.852955,1.069038,1.494890,1.537327,5.052305,8.203585,-7.193777,2.181693,-5.338477,-7.377699,6.136763,-0.471997,0.811518,-6.639222,3.309051,-2.999839,7.564054,6.017296,1.923521,4.710010,2.693314,4.495565,-5.572428,-5.803887,4.133915,0.132075,-3.752698,1.759433,0.879641,-9.778187,6.453710,-1.100803,-9.137405,0.809501,-5.955995,-3.413925,-2.539573,7.158360,8.570241,9.013126,-2.945780,9.474982,-2.580639,-4.574745,-6.426611,-4.286203,-6.772853,-5.126483,-3.622174,-4.829607,5.960801,4.865116,-7.685846,-3.460309,-1.583671,1.079153,-1.551913,-9.462521,6.951383,-0.401144,3.571721,5.888928,-8.183249,8.219305,-7.605361,7.563537,-1.408401,2.434741,-1.930525,-1.195188,1.497030,1.635104,-3.343535,-1.348797,4.229050,-8.900629,7.831739,-0.679287,5.973296,8.655300,2.523510,7.637282,4.513121,5.761529,-7.697215,-8.449459,3.434237,-3.154569,2.446049,0.286432,1.881021,-6.695515,4.579297,-4.943978,-9.694415,-6.880003,1.192626,7.300446,-9.780676,-7.768186,6.602141,-7.468706,-7.023514,-0.731805,1.815625,-5.613999,1.141659,-1.244152,8.138513,-2.000504,-4.755010,-7.160349,-7.489283,-7.852247,-0.893992,-6.795108,4.558943,-1.104582,7.746982,-8.365410,-3.273270,4.184123,6.454591,-2.432072,6.573277,-5.514292,-0.335163,9.354070,-5.658248,3.919232,-3.265053,-9.007402,7.269928,6.572856,-4.262890,8.260202,8.567486,-3.445918,-2.059213,0.045979,8.007454,4.308448,-8.119810,3.073868,-3.513266,5.851329,-3.354562,7.150418,-4.786861,-9.749405,-3.252250,6.533264,-7.251999,-1.565935,1.315461,-7.755788,2.484145,-7.185577,-4.703556,-5.390033,-6.276145,7.404161,-0.103781,-4.960710,-5.563711,6.197130,6.782132,-4.362460,-4.831390,-4.861242,-8.644569,6.879244,3.876784,-2.708921,1.178229,-2.495435,-1.659648,-2.439760,-3.960035,-0.658643,3.783588,2.269217,-0.166464,-6.169221,-7.476487,-6.223055,-6.416396,-1.072809,4.244464,0.474314,-8.596733,0.600629,-7.960257,1.022749,-9.556689,7.974408,7.872876,-9.916275,-5.479210,-9.038983,-2.950157,1.476182,-8.340150,-4.824728,-9.335399,-3.855853,2.027237,-6.989346,4.442709,5.740546,1.263637,7.929884,5.996476,-1.547255,4.274683,5.928636,-0.071127,-1.113063,-6.627437,-1.976319,-4.541722,3.892125,-2.507337,3.800240,8.034163,-8.864906,0.362840,7.829397,6.301672,-6.657680,6.795299,-8.244591,7.251341,-0.734557,3.841523,-7.647853,-9.987263,-4.548241,0.498532,-7.892417,-6.188939,6.103654,9.875683,-4.975163,1.935848,1.407581,-5.847890,-1.015626,-4.106954,-8.198903,2.178113,3.665929], dtype = "float32")#candidate|5690|(504,)|const|float32
call_5689 = relay.TupleGetItem(func_2023_call(relay.reshape(const_5690.astype('float32'), [504,])), 1)
call_5691 = relay.TupleGetItem(func_2026_call(relay.reshape(const_5690.astype('float32'), [504,])), 1)
output = relay.Tuple([call_5680,call_5689,const_5690,])
output2 = relay.Tuple([call_5681,call_5691,const_5690,])
func_5698 = relay.Function([], output)
mod['func_5698'] = func_5698
mod = relay.transform.InferType()(mod)
output = func_5698()
func_5699 = relay.Function([], output)
mutated_mod['func_5699'] = func_5699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3660_call = mutated_mod.get_global_var('func_3660')
call_5728 = func_3658_call()
call_5729 = func_3658_call()
output = call_5728
output2 = call_5729
func_5736 = relay.Function([], output)
mod['func_5736'] = func_5736
mod = relay.transform.InferType()(mod)
mutated_mod['func_5736'] = func_5736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5736_call = mutated_mod.get_global_var('func_5736')
call_5737 = func_5736_call()
output = call_5737
func_5738 = relay.Function([], output)
mutated_mod['func_5738'] = func_5738
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5758 = relay.const(6, dtype = "int32")#candidate|5758|()|const|int32
var_5759 = relay.var("var_5759", dtype = "int32", shape = (15, 6, 14))#candidate|5759|(15, 6, 14)|var|int32
bop_5760 = relay.bitwise_or(const_5758.astype('int32'), var_5759.astype('int32')) # shape=(15, 6, 14)
output = bop_5760
output2 = bop_5760
func_5771 = relay.Function([var_5759,], output)
mod['func_5771'] = func_5771
mod = relay.transform.InferType()(mod)
var_5772 = relay.var("var_5772", dtype = "int32", shape = (15, 6, 14))#candidate|5772|(15, 6, 14)|var|int32
output = func_5771(var_5772)
func_5773 = relay.Function([var_5772], output)
mutated_mod['func_5773'] = func_5773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2636_call = mod.get_global_var('func_2636')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_5786 = relay.TupleGetItem(func_2636_call(), 1)
call_5787 = relay.TupleGetItem(func_2638_call(), 1)
output = relay.Tuple([call_5786,])
output2 = relay.Tuple([call_5787,])
func_5796 = relay.Function([], output)
mod['func_5796'] = func_5796
mod = relay.transform.InferType()(mod)
output = func_5796()
func_5797 = relay.Function([], output)
mutated_mod['func_5797'] = func_5797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3121_call = mod.get_global_var('func_3121')
func_3122_call = mutated_mod.get_global_var('func_3122')
call_5814 = func_3121_call()
call_5815 = func_3121_call()
var_5826 = relay.var("var_5826", dtype = "float32", shape = (13, 5, 15))#candidate|5826|(13, 5, 15)|var|float32
bop_5827 = relay.not_equal(call_5814.astype('bool'), var_5826.astype('bool')) # shape=(13, 5, 15)
bop_5830 = relay.not_equal(call_5815.astype('bool'), var_5826.astype('bool')) # shape=(13, 5, 15)
func_2010_call = mod.get_global_var('func_2010')
func_2015_call = mutated_mod.get_global_var('func_2015')
var_5835 = relay.var("var_5835", dtype = "float32", shape = (504,))#candidate|5835|(504,)|var|float32
var_5836 = relay.var("var_5836", dtype = "float32", shape = (324,))#candidate|5836|(324,)|var|float32
var_5837 = relay.var("var_5837", dtype = "float32", shape = (784, 1))#candidate|5837|(784, 1)|var|float32
call_5834 = relay.TupleGetItem(func_2010_call(relay.reshape(var_5835.astype('float32'), [504,]), relay.reshape(var_5836.astype('float32'), [54, 6]), relay.reshape(var_5837.astype('float32'), [784,]), ), 1)
call_5838 = relay.TupleGetItem(func_2015_call(relay.reshape(var_5835.astype('float32'), [504,]), relay.reshape(var_5836.astype('float32'), [54, 6]), relay.reshape(var_5837.astype('float32'), [784,]), ), 1)
func_2846_call = mod.get_global_var('func_2846')
func_2848_call = mutated_mod.get_global_var('func_2848')
call_5847 = relay.TupleGetItem(func_2846_call(relay.reshape(call_5834.astype('float32'), [504,])), 1)
call_5848 = relay.TupleGetItem(func_2848_call(relay.reshape(call_5834.astype('float32'), [504,])), 1)
func_4972_call = mod.get_global_var('func_4972')
func_4973_call = mutated_mod.get_global_var('func_4973')
call_5857 = func_4972_call()
call_5858 = func_4972_call()
output = relay.Tuple([bop_5827,call_5834,var_5835,var_5836,var_5837,call_5847,call_5857,])
output2 = relay.Tuple([bop_5830,call_5838,var_5835,var_5836,var_5837,call_5848,call_5858,])
func_5866 = relay.Function([var_5826,var_5835,var_5836,var_5837,], output)
mod['func_5866'] = func_5866
mod = relay.transform.InferType()(mod)
mutated_mod['func_5866'] = func_5866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5866_call = mutated_mod.get_global_var('func_5866')
var_5868 = relay.var("var_5868", dtype = "float32", shape = (13, 5, 15))#candidate|5868|(13, 5, 15)|var|float32
var_5869 = relay.var("var_5869", dtype = "float32", shape = (504,))#candidate|5869|(504,)|var|float32
var_5870 = relay.var("var_5870", dtype = "float32", shape = (324,))#candidate|5870|(324,)|var|float32
var_5871 = relay.var("var_5871", dtype = "float32", shape = (784, 1))#candidate|5871|(784, 1)|var|float32
call_5867 = func_5866_call(var_5868,var_5869,var_5870,var_5871,)
output = call_5867
func_5872 = relay.Function([var_5868,var_5869,var_5870,var_5871,], output)
mutated_mod['func_5872'] = func_5872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_5939 = func_3419_call()
call_5940 = func_3419_call()
func_1387_call = mod.get_global_var('func_1387')
func_1390_call = mutated_mod.get_global_var('func_1390')
const_5945 = relay.const([4.126272,-0.491108,-8.307598,0.093872,3.998369,2.232244,-2.147279,-6.589009,4.669516,4.129513,6.040178,-1.286852,9.700583,-5.956325,0.873348,9.633665,8.726589,0.862995,5.912136,-5.070314,-4.452853,-9.666856,-2.565668,-7.236045,7.111711,-1.584478,7.780121,7.017668,8.682001,0.244416,9.766326,7.287723,6.633960,-1.642299,5.942130,9.295465,1.760456,-8.816885,4.266437,1.311020,-7.322203,9.148469,-2.767366,-1.129551,-8.177916,-2.136255,9.055334,-1.290097,-7.642600,8.486297,5.948812,4.048584,-2.385710,-4.922938,-4.210583,4.236636,-2.165084,-4.362462,6.138806,-3.574918,2.458843,7.049175,-7.608188,0.344095,4.201376,-8.314489,1.292291,8.972705,5.539356,4.088501,3.897216,-8.043233,6.788435,-0.907742,-8.039630,-6.096787,5.746388,-3.425971,8.450532,-8.234556,-5.036975,-6.506331,-0.389811,-5.610211,5.950769,2.237966,-9.865966,-9.731765,-4.623104,-5.184078,0.313753,-9.803090,-6.296889,-9.021089,-9.685995,-7.510591,7.654786,8.868234,-0.628564,5.943482,8.378002,-7.210378,7.285825,-4.821971,9.648222,-8.632545,4.828740,4.174373,0.926365,-4.832998,-7.860710,-8.840516,7.747847,3.779578,1.059884,3.394919,5.997921,-4.876962,6.421172,0.603339,7.944381,3.839687,-9.714313,5.784205,1.498556,-2.571254,-2.200588,9.263132,-0.312408,-5.896671,-2.795521,-0.988004,9.783740,-2.844846,4.387697,-3.319227,3.404845,-6.745453,-8.928511,6.178776,1.606258,-0.169298,-8.917519,7.599130,-5.098421,1.638263,5.496478,9.316599,-1.563668,9.499222,9.011685,6.741110,-9.257186,-3.796309,7.390962,-2.671890,5.817491,-4.395211,-2.179645,-1.224938,8.091344,6.398250,-9.577100,-5.778215,-3.362907,-6.595226,8.365341,-8.796204,2.086529,-6.876648,-6.166754,8.783248,6.686615,-7.073957,7.080971,2.194150,-6.652650,-6.889368,9.038535,6.848668,-7.363022,3.118739,1.114396,7.147774,-5.865560,6.901307,-3.155545,5.864258,0.874852,-9.495299,-7.361739,2.742982,-7.323507,6.212718,-4.133319,-8.700218,4.061663,-2.531139,7.616587,8.864518,-3.307817,5.737811,-2.103532,-8.928146,-9.042165,-5.914828,-9.765309,8.697744,2.848931,-0.847523,7.384118,8.962827,-0.837901,-5.486463,3.083699,-6.172622,-3.812881,6.753137,-4.439006,-7.043213,-0.631472,2.984363,9.998122,4.743647,-5.245935,-7.481988,-0.466606,-8.434866,-2.499701,7.065683,-3.902829,4.112329,4.216909,6.593036,-3.751115,-9.418908,5.613114,-9.410350,-2.975698,7.596767,5.379254,-3.668236,0.693310,8.180424,4.753715,-1.262673,-8.839000,8.628305,-9.864279,1.124985,-8.066945,8.112660,4.008173,-3.812794,6.241689,-6.814570,-0.011002,3.745657,8.118768,7.761065,2.439476,8.947561,1.720622,1.058526,2.055208,-4.363330,-3.835127,0.819568,8.234017,3.221888,-1.400564,-6.870779,-6.795906,-7.674264,-0.889839,4.935971,9.734891,0.445698,7.775844,-8.570968,6.350315,-9.928554,-9.494075,9.143961,-3.553048,2.537586,8.467266,5.235515,7.564725,3.759796,1.514278,8.685791,9.438204,3.831685,1.623811,-0.646499,-5.814136,-1.487452,-0.702942,9.584432,-4.194096,4.466759,-1.570259,8.403330,5.426489,1.916231,6.850559,9.794143,6.780138,8.506768,4.153622,2.246319,9.850244,-2.863943,7.428539,-6.512867,-2.886635,4.103567,-7.013668,-0.187316,-5.017367,-8.436406,-7.088239,-3.270730,-8.917424,-4.765354,5.372043,7.556513,7.741261,5.678350,9.410644,-6.644902,2.063866,-1.278720,8.432733,2.956958,-4.851805,3.562631,-3.816575,-4.571658,-8.024144,-2.356236,-5.353365,-5.164227,7.265660,5.957425,3.550539,6.359827,6.795704,-7.650286,-0.119845,-5.005495,2.213030,-0.078530,-1.976407,-9.264181,1.798816,-1.439809,-3.098502,-6.253878,-5.882762,8.874016,9.605813,0.935540,-3.915884,5.300834,3.137648,-9.487943,-6.385641,-7.398786,4.418940,3.830585,1.478474,6.073035,-1.821744,-2.125521,8.845161,-8.517253,-0.602097,0.399748,5.868682,6.930758,1.459049,6.681843,-8.064818,-8.412562,-4.171453,7.158315,3.859551,2.906157,-0.790997,2.466355,7.389140,-2.750079,5.399253,8.317071,5.579193,0.799735,-3.841197,-2.323347,7.326093,-2.407683,-4.370249,0.016806,-4.074560,5.307256,-9.169162,-9.986552,-3.291976,5.248269,4.121992,-1.820702,-8.575926,4.292514,-9.961669,9.268348,-3.933275,4.289868,1.203675,-4.829101,3.760671,-0.689746,-6.790588,-4.600669,-8.359339,-0.605686,-6.535247,-5.160631,4.712561,4.344739,3.835723,2.883962,-6.257836,-9.699235,3.146146,-0.990932,-2.315569,2.992125,4.305825,9.199636,2.567768,6.123907,-7.352596,-4.681402,3.184432,2.839827,7.934485,-9.479296,6.560151,0.107348,-3.416825,7.268796,8.151216,6.582198,-7.759681,-0.079477,8.795968,5.936842,8.676558,6.611795,5.802389,7.697770,1.304320,5.283580,-1.163730,9.337682,-3.619294,8.316650,4.927504,-1.757874,8.770583,-2.812710,2.167584,-1.746432,5.755534,2.904050,-9.584292,7.045563,3.180860,-1.416838,-6.455909,-2.075897,-1.272913,-0.028537,-0.591771,-5.935470,6.543627,-5.441419,-7.427705,8.973290,-4.024273,8.919021,0.192511,-5.746016,2.511758,-4.517542,3.959244,-2.575980,-8.402408,9.518563,6.363988,-7.081940,-0.271256,4.052148,0.200886,4.563472,-4.251672,-1.139880,1.299015,-3.821713,3.522557,-5.659970,8.211238,-9.683849,8.368343,-3.960055,1.772703,5.898937,-8.328590,8.444261,8.353936,5.140727,6.612137,0.718895,6.642828,3.748522,-8.879197,1.318767,-0.090235,5.901579,2.549578,-5.212493,-8.620948,4.453766,9.721163,-5.257458,0.977116,-8.311282,4.343061,2.638602,4.062405,3.886788,7.427701,7.926286,2.236698,3.340869,-9.041083,0.281547,-1.269835,4.837002,4.841727,-4.699789,-5.082445,6.023661,3.144383,-9.343968,7.876255,-4.526517,-8.112593,-0.323845,1.083099,-7.245898,-6.382193,-6.690104,-3.299335,-7.096503,-8.369815,-0.623691,7.857799,-7.021984,0.717953,8.679891,5.166567,9.069478,3.953291,2.189753,5.243482,-8.711418,3.663726,-6.334449,4.437892,-8.073606,-9.784155,-7.241841,-9.941851,-8.941283,5.588791,0.806352,2.285896,-1.563129,-4.637557,4.003012,3.125082,5.584943,9.881466,0.872319,-2.332854,-9.193023,-0.143716,-1.560469,7.349656,-5.520932,-6.584615,0.125522,-4.500914,-9.730153,3.338636,5.048972,-6.145120,-1.017514,-6.955241,-3.200360,5.981378,1.505694,9.150150,-8.719047,-4.206578,4.910441,-8.217233,1.146921,-9.420861,-8.132107,3.288161,-6.870618,-5.302515,7.919901,-0.943176,-0.253799,-1.138136,-5.182699,1.754752,1.763198,0.259150,9.741386,5.033650,8.956857,-5.109947,-9.090420,7.853427,0.131217,8.314363,-7.153144,-6.403441,3.739219,3.191804,-5.743025,-5.892442,-7.021743,-9.549597,-7.619483,-9.973404,1.693672,3.089555,4.659597,8.540053,-6.421806,4.125794,-9.800757,4.064679,1.850213,5.322320,-4.414972,7.141055,-3.676165,-7.572987,8.323817,-6.192398,9.234600,-7.821217,-0.535354,-4.235373,-0.812381,6.259883,0.921496,-0.293935,4.957867,7.033734,-1.039734,2.609599,-7.322500,2.512324,-1.882927,4.322707,3.275575,-7.166160,5.108134,-1.762495,4.558778,-0.896051,1.500690,9.019218,3.954337,-0.732078,3.090842,-7.273813,0.339743,6.860871,1.501121,6.514126,1.148000,-0.087204,-5.549176,-1.206147,-3.347020,6.310008,-8.932737,5.270073,1.794433,2.328989,7.512896,-2.866968,6.860334,-3.597434,-0.398999,5.274695,-4.869297,-6.243236,-4.386463,-6.096389,-0.437100,-4.674371,-7.687964,-4.353052,7.989115,-2.644164,5.641571,5.275816,-6.224646,9.162223,-7.402970,-2.129839,-3.103928,1.393792,-2.501106,4.014427,0.315699,2.413086,6.731414,0.105383,7.779810,4.475423,5.551149,4.714226,9.579816,-2.793434,4.562807,-4.086867,-7.176103,-0.507208,1.456811,4.336441,-4.282354,-9.961534,-4.006018,-0.868904,9.176271,-7.175009,2.514277,-0.872515,-3.828032,-7.423699,-7.120392,6.324424,-1.357248,8.387314,2.097130,7.886211,6.757270,-9.468239,0.076137,6.178678,-0.578521,3.766894,7.554618,-1.121797,4.792173,5.022619,1.036915,-4.967383,-9.086148,9.466656,-1.745033,4.403177,-4.857631], dtype = "float32")#candidate|5945|(784,)|const|float32
call_5944 = relay.TupleGetItem(func_1387_call(relay.reshape(const_5945.astype('float32'), [16, 7, 7])), 0)
call_5946 = relay.TupleGetItem(func_1390_call(relay.reshape(const_5945.astype('float32'), [16, 7, 7])), 0)
func_4616_call = mod.get_global_var('func_4616')
func_4617_call = mutated_mod.get_global_var('func_4617')
call_5947 = func_4616_call()
call_5948 = func_4616_call()
func_2846_call = mod.get_global_var('func_2846')
func_2848_call = mutated_mod.get_global_var('func_2848')
var_5955 = relay.var("var_5955", dtype = "float32", shape = (504,))#candidate|5955|(504,)|var|float32
call_5954 = relay.TupleGetItem(func_2846_call(relay.reshape(var_5955.astype('float32'), [504,])), 1)
call_5956 = relay.TupleGetItem(func_2848_call(relay.reshape(var_5955.astype('float32'), [504,])), 1)
bop_5959 = relay.not_equal(call_5947.astype('bool'), const_5945.astype('bool')) # shape=(13, 5, 784)
bop_5962 = relay.not_equal(call_5948.astype('bool'), const_5945.astype('bool')) # shape=(13, 5, 784)
func_4142_call = mod.get_global_var('func_4142')
func_4145_call = mutated_mod.get_global_var('func_4145')
var_5964 = relay.var("var_5964", dtype = "float32", shape = (650,))#candidate|5964|(650,)|var|float32
call_5963 = func_4142_call(relay.reshape(var_5964.astype('float32'), [13, 5, 10]))
call_5965 = func_4142_call(relay.reshape(var_5964.astype('float32'), [13, 5, 10]))
bop_5972 = relay.power(call_5939.astype('float32'), var_5964.astype('float32')) # shape=(13, 5, 650)
bop_5975 = relay.power(call_5940.astype('float32'), var_5964.astype('float32')) # shape=(13, 5, 650)
bop_5986 = relay.subtract(call_5947.astype('int32'), const_5945.astype('int32')) # shape=(13, 5, 784)
bop_5989 = relay.subtract(call_5948.astype('int32'), const_5945.astype('int32')) # shape=(13, 5, 784)
func_4042_call = mod.get_global_var('func_4042')
func_4045_call = mutated_mod.get_global_var('func_4045')
const_5992 = relay.const([False,True,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,True,False,False,False,True,True,False,False,False,False,False,True,True,True,False,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,False,True,False,True,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,True,False,False,False,True,False,True,False,True,False,True,False,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,True,True,False,True,False,False,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,False,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,True,True,True,True,False,False,True,True,True,False,False,False,True,True,False,False,False,True,True,False,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,True,True,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,False,False,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,True,False,True,False,False,False,False,False,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True,False,False,False,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,False,False,False,False,True,False,False,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,False,True,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,False,True,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,True,True,False,True,False,True,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,True,False,True,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,False,True,False,False,True,True,True,True,False,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,False,True,False,True,False,True,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,False,True,False,True,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False], dtype = "bool")#candidate|5992|(975,)|const|bool
call_5991 = relay.TupleGetItem(func_4042_call(relay.reshape(const_5992.astype('bool'), [1, 975])), 1)
call_5993 = relay.TupleGetItem(func_4045_call(relay.reshape(const_5992.astype('bool'), [1, 975])), 1)
output = relay.Tuple([call_5944,call_5954,var_5955,bop_5959,call_5963,bop_5972,bop_5986,call_5991,const_5992,])
output2 = relay.Tuple([call_5946,call_5956,var_5955,bop_5962,call_5965,bop_5975,bop_5989,call_5993,const_5992,])
func_6003 = relay.Function([var_5955,var_5964,], output)
mod['func_6003'] = func_6003
mod = relay.transform.InferType()(mod)
var_6004 = relay.var("var_6004", dtype = "float32", shape = (504,))#candidate|6004|(504,)|var|float32
var_6005 = relay.var("var_6005", dtype = "float32", shape = (650,))#candidate|6005|(650,)|var|float32
output = func_6003(var_6004,var_6005,)
func_6006 = relay.Function([var_6004,var_6005,], output)
mutated_mod['func_6006'] = func_6006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1763_call = mod.get_global_var('func_1763')
func_1765_call = mutated_mod.get_global_var('func_1765')
call_6046 = relay.TupleGetItem(func_1763_call(), 2)
call_6047 = relay.TupleGetItem(func_1765_call(), 2)
var_6070 = relay.var("var_6070", dtype = "bool", shape = (11, 8, 9))#candidate|6070|(11, 8, 9)|var|bool
bop_6071 = relay.divide(call_6046.astype('float32'), relay.reshape(var_6070.astype('float32'), relay.shape_of(call_6046))) # shape=(11, 8, 9)
bop_6074 = relay.divide(call_6047.astype('float32'), relay.reshape(var_6070.astype('float32'), relay.shape_of(call_6047))) # shape=(11, 8, 9)
output = relay.Tuple([bop_6071,])
output2 = relay.Tuple([bop_6074,])
func_6085 = relay.Function([var_6070,], output)
mod['func_6085'] = func_6085
mod = relay.transform.InferType()(mod)
var_6086 = relay.var("var_6086", dtype = "bool", shape = (11, 8, 9))#candidate|6086|(11, 8, 9)|var|bool
output = func_6085(var_6086)
func_6087 = relay.Function([var_6086], output)
mutated_mod['func_6087'] = func_6087
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6098 = relay.const([[[4,7,-10,-10,-3,-5,-5,-3,7,-8,-3,-9],[6,-3,-3,2,8,-3,4,5,2,10,5,10],[3,10,9,-10,-5,5,2,5,-7,-10,-2,10],[-7,9,-6,-3,9,6,5,4,-6,7,-6,-8],[1,-6,5,6,6,3,6,-10,1,4,1,3],[-9,-7,-3,10,5,8,1,1,7,9,9,-10],[-7,-4,4,-6,-10,-8,10,-10,3,4,-9,-3],[-10,-2,6,-9,6,-9,-5,-1,-10,1,-6,-4],[6,-5,4,3,-2,2,5,-1,7,1,-7,-6]],[[-3,8,7,-8,-1,-7,-1,-10,5,1,5,3],[3,3,-8,8,7,3,-9,6,6,-8,6,-1],[2,-1,5,-1,9,8,-7,1,4,8,6,7],[7,-8,5,-2,-1,-6,-8,-5,-4,-6,-1,3],[-2,-1,4,2,-3,-4,10,-7,-10,7,1,7],[-5,4,-4,3,1,6,-2,-7,-9,-5,-9,-1],[-7,-9,2,-4,2,3,9,10,10,5,4,-10],[3,3,-10,-2,-3,-5,-8,-2,-9,4,2,9],[-2,5,6,-3,1,-2,-10,-7,-5,8,5,4]],[[6,3,-4,2,-7,-5,4,-4,4,7,-10,7],[-9,1,-4,8,-4,9,-5,5,-8,5,-8,7],[2,-4,-10,-10,-5,-3,-7,-10,-5,-9,10,2],[-8,-9,5,8,2,2,4,-1,2,-9,-8,-9],[8,3,6,5,2,10,-4,5,-2,-7,10,5],[-3,-2,-3,-2,-1,-10,-10,-10,-1,-10,-9,-2],[-3,-7,-7,4,7,1,-6,-1,-9,5,8,-2],[6,-5,-6,-5,-5,1,-5,4,-10,1,9,5],[5,-9,-5,-3,4,5,-4,-10,-5,1,-5,-1]]], dtype = "uint8")#candidate|6098|(3, 9, 12)|const|uint8
const_6099 = relay.const([[[1,-9,9,10,8,4,5,7,10,6,7,-7],[5,-3,-9,10,-2,-6,9,-7,-7,10,-4,3],[-3,7,3,8,-3,1,-10,4,2,-1,4,-1],[-10,5,6,-10,-9,10,5,1,9,-2,5,-10],[-3,-9,10,2,-10,6,4,-6,6,-4,6,-1],[-7,5,-6,-8,-6,10,8,-8,8,6,-1,-5],[-8,8,-6,10,-1,-7,8,7,-4,-1,-8,3],[-2,-8,-9,8,3,3,6,-5,8,3,9,3],[-9,-8,-3,5,-7,-8,7,8,-3,-9,6,-5]],[[8,-2,2,-4,10,-9,2,8,-6,-10,2,3],[10,-6,8,3,-1,-6,-2,3,-2,-5,-6,-6],[1,5,5,-1,-2,1,8,9,-1,-10,3,5],[6,10,4,6,3,1,3,-2,10,-6,-9,8],[8,-1,3,-8,7,-3,-5,6,-4,5,10,-2],[-1,9,-1,-10,-4,2,6,-8,-8,-3,2,1],[8,-3,3,9,4,-6,4,8,6,5,1,-6],[-6,2,-10,-6,-8,9,6,7,-5,-7,-6,8],[4,-5,-9,-4,2,3,-10,2,-9,9,-2,-5]],[[7,7,6,9,-9,7,-7,-2,-8,3,-5,-3],[-8,8,-9,9,5,-1,-9,3,5,5,10,3],[4,3,10,2,8,-10,-4,-5,2,2,-8,-1],[-2,7,4,9,5,-7,-7,5,-10,-4,-3,-5],[-7,-8,1,-10,-6,6,-8,-9,-4,7,5,9],[-8,-10,-4,-8,2,-7,-7,-8,3,-4,9,-3],[-10,-6,-4,-8,10,5,-5,-6,-1,1,-2,-3],[-5,6,-2,6,-1,5,-9,-10,-5,4,10,-8],[-5,-2,-10,-1,-4,6,10,-6,-6,6,7,6]]], dtype = "uint8")#candidate|6099|(3, 9, 12)|const|uint8
bop_6100 = relay.bitwise_and(const_6098.astype('uint8'), relay.reshape(const_6099.astype('uint8'), relay.shape_of(const_6098))) # shape=(3, 9, 12)
output = bop_6100
output2 = bop_6100
func_6103 = relay.Function([], output)
mod['func_6103'] = func_6103
mod = relay.transform.InferType()(mod)
output = func_6103()
func_6104 = relay.Function([], output)
mutated_mod['func_6104'] = func_6104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1936_call = mod.get_global_var('func_1936')
func_1938_call = mutated_mod.get_global_var('func_1938')
call_6116 = func_1936_call()
call_6117 = func_1936_call()
output = call_6116
output2 = call_6117
func_6124 = relay.Function([], output)
mod['func_6124'] = func_6124
mod = relay.transform.InferType()(mod)
mutated_mod['func_6124'] = func_6124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6124_call = mutated_mod.get_global_var('func_6124')
call_6125 = func_6124_call()
output = call_6125
func_6126 = relay.Function([], output)
mutated_mod['func_6126'] = func_6126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_6131 = relay.TupleGetItem(func_3940_call(), 1)
call_6132 = relay.TupleGetItem(func_3941_call(), 1)
output = call_6131
output2 = call_6132
func_6141 = relay.Function([], output)
mod['func_6141'] = func_6141
mod = relay.transform.InferType()(mod)
output = func_6141()
func_6142 = relay.Function([], output)
mutated_mod['func_6142'] = func_6142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4468_call = mod.get_global_var('func_4468')
func_4469_call = mutated_mod.get_global_var('func_4469')
call_6154 = relay.TupleGetItem(func_4468_call(), 1)
call_6155 = relay.TupleGetItem(func_4469_call(), 1)
func_4142_call = mod.get_global_var('func_4142')
func_4145_call = mutated_mod.get_global_var('func_4145')
var_6201 = relay.var("var_6201", dtype = "float32", shape = (650,))#candidate|6201|(650,)|var|float32
call_6200 = func_4142_call(relay.reshape(var_6201.astype('float32'), [13, 5, 10]))
call_6202 = func_4142_call(relay.reshape(var_6201.astype('float32'), [13, 5, 10]))
bop_6208 = relay.greater_equal(call_6200.astype('bool'), relay.reshape(var_6201.astype('bool'), relay.shape_of(call_6200))) # shape=(13, 5, 10)
bop_6211 = relay.greater_equal(call_6202.astype('bool'), relay.reshape(var_6201.astype('bool'), relay.shape_of(call_6202))) # shape=(13, 5, 10)
func_6124_call = mod.get_global_var('func_6124')
func_6126_call = mutated_mod.get_global_var('func_6126')
call_6226 = func_6124_call()
call_6227 = func_6124_call()
output = relay.Tuple([call_6154,bop_6208,call_6226,])
output2 = relay.Tuple([call_6155,bop_6211,call_6227,])
func_6229 = relay.Function([var_6201,], output)
mod['func_6229'] = func_6229
mod = relay.transform.InferType()(mod)
mutated_mod['func_6229'] = func_6229
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6230 = relay.var("var_6230", dtype = "float32", shape = (650,))#candidate|6230|(650,)|var|float32
func_6229_call = mutated_mod.get_global_var('func_6229')
call_6231 = func_6229_call(var_6230)
output = call_6231
func_6232 = relay.Function([var_6230], output)
mutated_mod['func_6232'] = func_6232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1534_call = mod.get_global_var('func_1534')
func_1535_call = mutated_mod.get_global_var('func_1535')
call_6258 = func_1534_call()
call_6259 = func_1534_call()
func_2846_call = mod.get_global_var('func_2846')
func_2848_call = mutated_mod.get_global_var('func_2848')
const_6262 = relay.const([0.821789,2.600960,5.400494,-7.280071,4.164794,1.020419,1.469669,4.881862,3.994117,6.057972,3.765288,8.850145,-2.779320,-9.420197,-0.854658,-0.484768,5.490274,0.501900,-6.703344,0.618157,-3.464074,4.089320,7.059375,-8.363908,-0.295971,3.849924,-3.895121,9.731517,8.792056,2.278268,-6.714871,7.221039,3.759024,-2.146489,-0.459722,1.299363,-7.181981,-1.224942,-7.386126,-9.277088,-7.106712,-4.948291,-2.041838,0.652198,-0.414114,7.242306,1.637928,-6.320466,8.847273,-3.606121,-7.771975,-8.192445,-7.772984,4.334968,9.184965,5.091519,5.907778,7.613250,-1.935251,0.122880,0.495738,3.761641,-1.282744,3.920641,-6.602100,3.354062,5.065067,-4.483840,3.507784,-5.029315,3.310272,-6.705914,-7.790378,3.060800,2.039790,8.492495,1.881346,1.426267,-4.876738,-2.301103,-8.269115,1.243094,5.640672,-1.054615,4.120971,-6.161660,-6.233521,2.684636,-4.659929,3.471445,-1.457986,-7.899346,6.434141,1.367760,-6.219011,6.079412,3.674043,-4.381607,-2.762920,7.225249,-6.047341,-1.207480,0.109650,9.857221,-9.766372,3.912882,7.257533,7.458330,6.540524,-7.801224,-7.580857,-5.328470,-7.432533,-9.871209,3.964909,5.324048,0.743207,2.969363,1.497498,-9.116336,7.632723,-7.358371,0.444819,-7.017396,-5.262898,-3.243648,-1.526212,7.291728,-1.691142,1.607515,9.593042,1.979126,-2.094945,7.180275,2.981071,-5.897243,0.917022,9.399078,-8.205125,0.778844,-3.734562,8.586628,9.900597,2.787704,-6.754579,3.506577,8.072638,7.814949,5.765642,-2.454894,-2.765968,-9.717287,7.881171,8.269908,5.483054,6.291067,-8.453024,-1.852804,8.665361,8.832452,-2.807726,3.048314,7.164590,8.201005,-5.058508,9.066789,-2.356444,-6.995092,3.003059,2.950004,5.616404,-6.785922,6.230565,5.677023,2.287256,0.766166,8.158592,6.145671,1.431113,-9.721680,-8.760969,-4.756024,9.786581,6.717004,-5.703928,3.918121,1.956799,-2.969667,-1.595744,2.321868,-9.379467,4.614280,1.071783,3.988207,1.895186,-2.914350,9.632343,8.679904,-5.630583,-4.669045,7.271755,-9.318784,0.925042,-0.188428,-7.843754,1.979656,-4.257660,-2.367878,-9.179903,-6.558502,6.875104,1.962578,6.083080,0.847692,8.485825,6.201418,4.662472,4.437345,-9.392249,-9.487195,3.603514,3.875783,-4.082003,-8.674001,6.220152,7.099413,5.857797,-9.181057,6.907348,-0.586829,8.879287,5.927658,3.949548,3.647204,-0.002942,-1.433292,-1.726740,4.866523,-1.384901,7.848764,-1.634554,-9.830560,3.344032,0.819067,8.503879,-9.551232,7.470115,6.489371,-0.118249,-0.100918,8.756432,7.690706,-7.195195,-9.914275,-6.934857,1.317684,-4.985842,-4.550757,-7.355142,-9.792394,-9.671939,-8.946472,2.432607,-4.333550,-5.259383,-4.233532,-8.008696,3.783052,4.678122,4.588334,4.134435,-7.634890,-3.353591,-5.727730,-6.660105,-0.676779,1.847209,-9.487831,9.945937,-1.059257,4.115192,4.057022,-2.191595,2.774542,-4.669189,2.420969,5.137718,-6.578707,0.085514,-8.825456,0.820423,-4.242967,2.606051,6.708832,4.393243,-4.815357,3.320969,-5.307231,7.554477,9.854479,-0.072898,4.283994,-4.838412,-3.608487,-4.687293,-8.117453,2.539392,-0.577566,5.173194,3.530599,-2.827910,-2.468950,8.673291,6.557139,-8.405906,6.356572,-2.656806,-8.090323,-3.914969,-8.481677,1.677956,-7.500508,1.884207,9.422078,3.970865,3.828419,-4.695761,8.410653,3.263691,-3.200422,5.068162,-5.089597,4.980468,-7.732751,9.284111,-4.468365,6.587769,-6.291914,-1.518709,-7.420832,-1.425185,2.790838,2.731889,4.803198,2.264139,-7.120249,4.393076,-9.432524,3.775724,-5.065907,4.177371,7.975301,6.192460,3.794250,6.508754,2.589810,-1.840155,-4.611826,0.353347,-3.163905,-0.152514,7.620227,9.151598,-5.753655,9.936297,-4.746216,0.412170,9.028987,2.939719,-0.139718,-4.820221,-8.355910,-4.491454,-4.580738,-2.757519,9.044726,7.875185,-1.637015,-4.415505,6.177552,3.521988,8.541303,7.275456,-6.790696,3.379177,5.696159,-7.637552,-1.499142,7.159645,8.017802,0.290138,-0.049066,5.933344,-4.793595,4.289343,3.393302,5.085263,4.683919,-4.231271,3.551068,8.066069,2.347853,-8.687870,-9.054230,6.176659,-8.738201,-4.315068,2.539684,6.722672,-4.960248,-5.194393,-3.025509,-9.968555,-4.325190,3.301442,-5.896203,2.177187,-2.726832,-2.523228,5.572476,-0.310079,-4.728570,-4.363882,4.682412,3.492430,-4.390968,3.397876,2.922983,-7.198040,-4.615968,2.544041,-1.614518,1.909703,7.470009,-6.849386,4.011027,-7.467101,3.605774,3.991438,-7.189987,-4.979157,-3.682648,1.690048,9.388912,-2.343411,6.297457,5.118011,-2.774985,8.502589,-2.994916,-6.543836,-4.741430,7.159579,6.055227,-3.641386,-7.591173,-3.125911,1.567027,-7.073354,6.854088,-8.965029,9.019452,1.703638,-9.267373,4.107774,-4.075658,-8.560958,-6.152709,-8.251146,4.927583,1.359662,-2.497522,-1.777948,-8.757341,-9.982031,2.686799,-5.785854,-8.958099,-7.429020,-2.795359,8.753076,6.681941,-2.169167,-4.701413,0.227076,4.280881,6.552031,-3.657852,8.482281,-5.031829,6.479694,6.300720,-7.486729,7.885442,-0.556720,-7.431389,-2.585659,-1.921217,7.890217,3.930531,-7.059125,-3.107328,-9.704651,8.237711], dtype = "float32")#candidate|6262|(504,)|const|float32
call_6261 = relay.TupleGetItem(func_2846_call(relay.reshape(const_6262.astype('float32'), [504,])), 0)
call_6263 = relay.TupleGetItem(func_2848_call(relay.reshape(const_6262.astype('float32'), [504,])), 0)
output = relay.Tuple([call_6258,call_6261,const_6262,])
output2 = relay.Tuple([call_6259,call_6263,const_6262,])
func_6266 = relay.Function([], output)
mod['func_6266'] = func_6266
mod = relay.transform.InferType()(mod)
output = func_6266()
func_6267 = relay.Function([], output)
mutated_mod['func_6267'] = func_6267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5424_call = mod.get_global_var('func_5424')
func_5426_call = mutated_mod.get_global_var('func_5426')
call_6294 = func_5424_call()
call_6295 = func_5424_call()
func_1936_call = mod.get_global_var('func_1936')
func_1938_call = mutated_mod.get_global_var('func_1938')
call_6345 = func_1936_call()
call_6346 = func_1936_call()
func_4676_call = mod.get_global_var('func_4676')
func_4677_call = mutated_mod.get_global_var('func_4677')
call_6359 = relay.TupleGetItem(func_4676_call(), 0)
call_6360 = relay.TupleGetItem(func_4677_call(), 0)
func_4042_call = mod.get_global_var('func_4042')
func_4045_call = mutated_mod.get_global_var('func_4045')
const_6366 = relay.const([False,False,False,False,True,True,True,False,True,True,True,True,True,True,True,False,True,False,False,True,True,True,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,False,True,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,True,False,True,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,False,True,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,True,True,True,False,False,False,False,True,True,False,False,True,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,False,True,True,False,False,False,True,False,False,True,False,False,False,True,True,False,True,False,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,False,True,True,False,True,True,True,False,True,False,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,True,True,False,False,False,False,False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,True,True,True,False,False,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,False,True,False,True,True,True,True,True,True,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,False,False,False,True,False,True,False,False,True,True,False,False,False,False,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,False,False,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,True,False,False,False,False,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,False,False,False,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,True,True,True,False,False,False,True,True,True,True,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,True,False,False,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,True,True,True,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,True,False,False,False,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False], dtype = "bool")#candidate|6366|(975,)|const|bool
call_6365 = relay.TupleGetItem(func_4042_call(relay.reshape(const_6366.astype('bool'), [1, 975])), 0)
call_6367 = relay.TupleGetItem(func_4045_call(relay.reshape(const_6366.astype('bool'), [1, 975])), 0)
var_6376 = relay.var("var_6376", dtype = "float32", shape = (13, 5, 4))#candidate|6376|(13, 5, 4)|var|float32
bop_6377 = relay.greater(call_6359.astype('bool'), var_6376.astype('bool')) # shape=(13, 5, 4)
bop_6380 = relay.greater(call_6360.astype('bool'), var_6376.astype('bool')) # shape=(13, 5, 4)
uop_6390 = relay.erf(call_6365.astype('float32')) # shape=(13, 5, 1)
uop_6392 = relay.erf(call_6367.astype('float32')) # shape=(13, 5, 1)
output = relay.Tuple([call_6294,call_6345,const_6366,bop_6377,uop_6390,])
output2 = relay.Tuple([call_6295,call_6346,const_6366,bop_6380,uop_6392,])
func_6410 = relay.Function([var_6376,], output)
mod['func_6410'] = func_6410
mod = relay.transform.InferType()(mod)
var_6411 = relay.var("var_6411", dtype = "float32", shape = (13, 5, 4))#candidate|6411|(13, 5, 4)|var|float32
output = func_6410(var_6411)
func_6412 = relay.Function([var_6411], output)
mutated_mod['func_6412'] = func_6412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5424_call = mod.get_global_var('func_5424')
func_5426_call = mutated_mod.get_global_var('func_5426')
call_6496 = func_5424_call()
call_6497 = func_5424_call()
func_1139_call = mod.get_global_var('func_1139')
func_1140_call = mutated_mod.get_global_var('func_1140')
call_6533 = func_1139_call()
call_6534 = func_1139_call()
func_1626_call = mod.get_global_var('func_1626')
func_1628_call = mutated_mod.get_global_var('func_1628')
call_6536 = relay.TupleGetItem(func_1626_call(), 1)
call_6537 = relay.TupleGetItem(func_1628_call(), 1)
output = relay.Tuple([call_6496,call_6533,call_6536,])
output2 = relay.Tuple([call_6497,call_6534,call_6537,])
func_6544 = relay.Function([], output)
mod['func_6544'] = func_6544
mod = relay.transform.InferType()(mod)
mutated_mod['func_6544'] = func_6544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6544_call = mutated_mod.get_global_var('func_6544')
call_6545 = func_6544_call()
output = call_6545
func_6546 = relay.Function([], output)
mutated_mod['func_6546'] = func_6546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_6627 = relay.TupleGetItem(func_3940_call(), 0)
call_6628 = relay.TupleGetItem(func_3941_call(), 0)
func_2524_call = mod.get_global_var('func_2524')
func_2526_call = mutated_mod.get_global_var('func_2526')
call_6664 = func_2524_call()
call_6665 = func_2524_call()
bop_6678 = relay.not_equal(call_6627.astype('bool'), relay.reshape(call_6664.astype('bool'), relay.shape_of(call_6627))) # shape=(13, 5, 1)
bop_6681 = relay.not_equal(call_6628.astype('bool'), relay.reshape(call_6665.astype('bool'), relay.shape_of(call_6628))) # shape=(13, 5, 1)
output = relay.Tuple([bop_6678,])
output2 = relay.Tuple([bop_6681,])
func_6690 = relay.Function([], output)
mod['func_6690'] = func_6690
mod = relay.transform.InferType()(mod)
output = func_6690()
func_6691 = relay.Function([], output)
mutated_mod['func_6691'] = func_6691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4616_call = mod.get_global_var('func_4616')
func_4617_call = mutated_mod.get_global_var('func_4617')
call_6719 = func_4616_call()
call_6720 = func_4616_call()
output = call_6719
output2 = call_6720
func_6724 = relay.Function([], output)
mod['func_6724'] = func_6724
mod = relay.transform.InferType()(mod)
output = func_6724()
func_6725 = relay.Function([], output)
mutated_mod['func_6725'] = func_6725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6544_call = mod.get_global_var('func_6544')
func_6546_call = mutated_mod.get_global_var('func_6546')
call_6726 = relay.TupleGetItem(func_6544_call(), 1)
call_6727 = relay.TupleGetItem(func_6546_call(), 1)
func_2449_call = mod.get_global_var('func_2449')
func_2450_call = mutated_mod.get_global_var('func_2450')
call_6774 = relay.TupleGetItem(func_2449_call(), 0)
call_6775 = relay.TupleGetItem(func_2450_call(), 0)
func_2666_call = mod.get_global_var('func_2666')
func_2669_call = mutated_mod.get_global_var('func_2669')
var_6788 = relay.var("var_6788", dtype = "float32", shape = (576,))#candidate|6788|(576,)|var|float32
call_6787 = relay.TupleGetItem(func_2666_call(relay.reshape(var_6788.astype('float32'), [576,])), 1)
call_6789 = relay.TupleGetItem(func_2669_call(relay.reshape(var_6788.astype('float32'), [576,])), 1)
func_3790_call = mod.get_global_var('func_3790')
func_3793_call = mutated_mod.get_global_var('func_3793')
var_6794 = relay.var("var_6794", dtype = "int64", shape = (1575,))#candidate|6794|(1575,)|var|int64
const_6795 = relay.const([2.995112,3.860183,-1.934652,3.236183,-7.159570,5.550001,-6.919402,5.353313,0.867708,1.280873,-8.108688,-7.318604,2.858825,-2.047977,-9.908572,4.470837,-9.227433,0.784020,-2.731003,9.445607,-6.678335,2.199844,8.212299,2.269582,-9.087091,8.094144,-0.864081,4.648382,-6.011137,4.236229,-7.933888,-3.697052,6.562411,4.547391,-0.107428,-7.879502,2.503475,-4.866803,-4.016735,-4.966965,-7.986003,-1.746068,9.886357,-0.191956,4.265782,3.096599,-7.251753,-9.583066,9.232073,7.074930,3.532854,8.502033,-2.598285,5.695206,9.254077,4.363626,-0.853532,-2.098199,1.288666,8.857809,-3.532186,-8.917738,-7.963415,-4.915027,-5.230626,-4.759122,-6.736961,2.567143,6.395998,3.094784,-2.825154,-1.783960,-3.062796,-1.590914,6.452205,8.012140,-5.000511,-2.260118,-1.330969,4.855871,3.096767,-7.779407,6.997643,-6.324212,5.730919,7.859048,-9.979921,-0.162082,-0.820645,-0.365590,-7.608577,-0.335028,-8.591632,8.129167,0.416799,9.664184,-5.078592,-9.108424,8.461884,-6.202796,8.559987,-7.050117,0.058648,-9.242935,-8.673627,9.015642,-1.225959,6.209890,5.964604,-1.054752,7.765804,9.652946,4.691942,2.989864,-8.725994,5.755923,4.425777,1.624429,-2.026005,9.851938,-1.804911,6.152711,-2.615722,7.770713,-8.255850,-4.631709,-0.959371,8.336763,-0.105239,-4.711522,0.014806,-6.193355,-9.300315,6.813389,4.258470,9.926255,-1.712406,9.114682,6.123949,-5.059191,-0.817261,-5.793286,-3.728967,-1.113601,-0.842199,1.526778,5.526769,6.457386,3.257510,-9.733774,5.077447,-2.923092,8.255558,-4.611409,9.820153,-1.418537,8.304151,-9.186013,-5.517090,-6.216857,9.248454,-0.790687,9.423225,-4.073248,9.927313,-2.932029,-0.087114,-2.867787,-0.546458,0.098535,7.371650,6.581369,-8.547649,-4.572011,-9.653861,4.579442,-9.728149,-9.755471,0.411374,-0.182513,-3.250520,5.154078,0.533072,-6.663197,-7.106555,8.857775,2.491835,0.471375,-5.052817,-4.786832,-7.956286,9.180521,-5.784750,7.426656,-0.818617,-5.170534,-1.912225,-1.901181,5.983269,3.859869,-6.166240,6.345139,0.408159,1.875309,-0.256648,-6.068494,5.057522,6.619833,-5.527671,-3.721395,-0.938081,5.403160,-0.262630,-4.616001,-0.474595,-5.610938,2.198380,-9.918732,-7.687483,-4.263633,8.964456,3.983739,-9.327501,-1.604534,8.337397,-6.899652,5.537385,-4.054918,2.034598,4.963808,-2.875500,-4.953183,5.424682,-5.786646,-8.437356,-5.714788,-8.845003,-7.839080,-6.678946,2.913815,4.859162,1.184711,5.177130,1.539788,5.638465,-8.786988,-6.760095,1.654772,1.626471,5.034310,-8.145505,1.596597,2.210328,-8.473165,2.049071,-2.381729,3.659890,4.274103,0.984896,5.244673,-6.974035,1.366846,-6.931075,-8.406147,-6.493854,4.032963,-6.259968,9.239767,-4.382465,1.764145,1.479763,8.020516,-0.120048,9.313127,7.345979,-6.277020,-3.534192,-1.678034,-4.312979,-4.553973,-9.773814,6.520307,1.610106,-2.534531,-4.922998,8.574659,7.666175,-7.738232,0.903655,-4.519984,-9.246022,-4.443427,-5.577561,9.301014,-6.716233,9.985370,9.152623,2.491269,-2.051533,0.857123,4.602857,-0.837048,0.131827,-6.457738,5.621327,2.638219,4.476642,-0.225447,-0.242690,-6.332289,-8.595446,0.588365,5.134332,-9.913793,-5.325817,-7.229822,-4.542272,8.844225,-6.380287,-8.213563,-4.828860,1.284129,-9.940409,7.284197,-1.448582,0.403655,9.727135,-0.239714,4.353727,-7.290626,-3.565750,2.438059,-0.744506,-6.028032,8.645046,-9.021786,-3.419385,2.493060,3.220829,8.496839,3.973011,-4.330114,8.251158,1.801449,2.633007,1.451396,-0.028633,-0.331462,5.273670,4.868206,-9.524533,-4.033428,-3.463334,6.531800,-8.439373,0.058550,4.970653,-3.215591,-1.275444,4.469130,-7.705772,-5.757632,4.183961,8.871969,9.693816,5.087716,-1.293615,5.728537,-1.147089,-8.285309,0.804480,-6.813225,-1.659583,-8.340359,-5.592890,-5.847350,-2.225218,6.960399,-5.537570,-3.163664,-2.427141,6.816120,1.702411,0.604983,5.791969,-8.495292,5.492740,2.150644,3.090910,-8.211819,6.515159,-3.358361,3.219752,4.582582,-9.763769,-0.040644,-0.698921,8.002321,-3.945660,9.608922,8.956127,-0.286085,-4.737322,-3.413133,1.239846,2.265554,0.098917,-4.454518,8.297286,-7.561999,9.090694,-5.158962,-0.754525,5.331371,-8.562999,-4.124852,-4.030562,-8.522765,-4.181420,9.395216,-5.915630,-6.172208,-6.961613,-3.602113,5.350398,-8.933171,8.805155,-2.675220,-4.621404,-1.911618,-4.216827,-1.376769,-3.658016,3.292104,8.127334,-8.755960,5.489378,-1.763480,-3.984146,3.116321,5.769187,-5.385271,9.949375,8.900755,2.334320,-6.483935,-0.758801,-8.127690,-9.584987,-8.211123,-0.292033,8.842861,3.829413,-4.745588,-4.573719,0.483149,2.322554,9.154368,-0.259301,-9.400009,-4.807663,4.838018,-4.605154,8.042454,3.743706,-5.328066,6.066539,2.652543,8.239170,-7.168510,-9.595863,-3.011651,5.894174,-0.240073,-7.823128,5.820441,3.035272,2.318043,0.423654,-3.745903,-1.302151,-0.760787,-1.150862,1.761559,5.878238,-1.104893,4.493338,2.127458,-4.467385,1.426824,9.521190,4.646175,6.940860,-4.645114,-1.291677,-7.852945,2.110630,-9.919463,-0.281194,-8.412964,2.677469,2.306138,2.565051,9.854665], dtype = "float32")#candidate|6795|(504,)|const|float32
call_6793 = relay.TupleGetItem(func_3790_call(relay.reshape(var_6794.astype('int64'), [7, 15, 15]), relay.reshape(const_6795.astype('float32'), [504,]), ), 0)
call_6796 = relay.TupleGetItem(func_3793_call(relay.reshape(var_6794.astype('int64'), [7, 15, 15]), relay.reshape(const_6795.astype('float32'), [504,]), ), 0)
func_5736_call = mod.get_global_var('func_5736')
func_5738_call = mutated_mod.get_global_var('func_5738')
call_6799 = func_5736_call()
call_6800 = func_5736_call()
output = relay.Tuple([call_6726,call_6774,call_6787,var_6788,call_6793,var_6794,const_6795,call_6799,])
output2 = relay.Tuple([call_6727,call_6775,call_6789,var_6788,call_6796,var_6794,const_6795,call_6800,])
func_6803 = relay.Function([var_6788,var_6794,], output)
mod['func_6803'] = func_6803
mod = relay.transform.InferType()(mod)
mutated_mod['func_6803'] = func_6803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6803_call = mutated_mod.get_global_var('func_6803')
var_6805 = relay.var("var_6805", dtype = "float32", shape = (576,))#candidate|6805|(576,)|var|float32
var_6806 = relay.var("var_6806", dtype = "int64", shape = (1575,))#candidate|6806|(1575,)|var|int64
call_6804 = func_6803_call(var_6805,var_6806,)
output = call_6804
func_6807 = relay.Function([var_6805,var_6806,], output)
mutated_mod['func_6807'] = func_6807
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6846 = relay.const([[[2],[8],[5],[-5],[-4],[-9],[6],[1],[-10],[3],[6],[-6],[2],[3],[6]],[[1],[-7],[-1],[6],[-5],[6],[-1],[-8],[6],[-9],[1],[-8],[10],[-5],[-9]],[[9],[8],[9],[-10],[-9],[9],[-9],[-8],[3],[6],[-2],[7],[-5],[10],[-4]],[[-10],[-9],[8],[-2],[-6],[5],[6],[6],[-2],[7],[-2],[6],[7],[-10],[3]]], dtype = "uint8")#candidate|6846|(4, 15, 1)|const|uint8
const_6847 = relay.const([[[4],[-4],[5],[3],[8],[-9],[-2],[8],[5],[-2],[4],[-8],[-9],[-9],[-2]],[[-6],[2],[1],[9],[-1],[1],[-1],[8],[-5],[-5],[-1],[2],[2],[-10],[6]],[[5],[10],[-5],[5],[4],[2],[7],[-6],[-5],[7],[7],[10],[9],[-5],[-3]],[[3],[-4],[-5],[4],[2],[7],[3],[9],[10],[-10],[3],[9],[9],[7],[9]]], dtype = "uint8")#candidate|6847|(4, 15, 1)|const|uint8
bop_6848 = relay.greater(const_6846.astype('bool'), relay.reshape(const_6847.astype('bool'), relay.shape_of(const_6846))) # shape=(4, 15, 1)
func_3957_call = mod.get_global_var('func_3957')
func_3958_call = mutated_mod.get_global_var('func_3958')
call_6857 = relay.TupleGetItem(func_3957_call(), 0)
call_6858 = relay.TupleGetItem(func_3958_call(), 0)
func_2370_call = mod.get_global_var('func_2370')
func_2373_call = mutated_mod.get_global_var('func_2373')
const_6864 = relay.const([False,True,False,True,True,False,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,True,False,False,True,True,True,False,True,True,True,True,True,True,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,False,False,False,True,True,False,True,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,True,True,False,False,False], dtype = "bool")#candidate|6864|(490,)|const|bool
call_6863 = relay.TupleGetItem(func_2370_call(relay.reshape(const_6864.astype('bool'), [7, 14, 5]), relay.reshape(const_6864.astype('bool'), [7, 14, 5]), ), 0)
call_6865 = relay.TupleGetItem(func_2373_call(relay.reshape(const_6864.astype('bool'), [7, 14, 5]), relay.reshape(const_6864.astype('bool'), [7, 14, 5]), ), 0)
output = relay.Tuple([bop_6848,call_6857,call_6863,const_6864,])
output2 = relay.Tuple([bop_6848,call_6858,call_6865,const_6864,])
func_6870 = relay.Function([], output)
mod['func_6870'] = func_6870
mod = relay.transform.InferType()(mod)
output = func_6870()
func_6871 = relay.Function([], output)
mutated_mod['func_6871'] = func_6871
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6887 = relay.var("var_6887", dtype = "float64", shape = (16, 9, 13))#candidate|6887|(16, 9, 13)|var|float64
uop_6888 = relay.cos(var_6887.astype('float64')) # shape=(16, 9, 13)
uop_6906 = relay.sin(var_6887.astype('float32')) # shape=(16, 9, 13)
func_4042_call = mod.get_global_var('func_4042')
func_4045_call = mutated_mod.get_global_var('func_4045')
const_6909 = relay.const([True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,True,False,False,True,True,True,True,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,True,False,False,True,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,False,True,True,True,True,False,True,False,True,True,False,False,False,True,False,True,True,True,True,False,True,True,True,False,True,False,False,True,True,True,True,True,False,False,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,False,False,True,False,False,False,False,True,True,False,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,False,True,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True,True,False,True,False,False,True,False,True,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,False,False,True,False,False,False,True,True,False,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,False,False,False,True,False,True,False,True,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,False,False,True,False,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,False,True,False,False,False,True,False,False,False,True,False,True,False,False,True,True,True,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,False,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,False,False,False,False,True,False,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,False,False,False,False,False,True,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True], dtype = "bool")#candidate|6909|(975,)|const|bool
call_6908 = relay.TupleGetItem(func_4042_call(relay.reshape(const_6909.astype('bool'), [1, 975])), 1)
call_6910 = relay.TupleGetItem(func_4045_call(relay.reshape(const_6909.astype('bool'), [1, 975])), 1)
func_4702_call = mod.get_global_var('func_4702')
func_4707_call = mutated_mod.get_global_var('func_4707')
const_6925 = relay.const(3, dtype = "uint8")#candidate|6925|()|const|uint8
var_6926 = relay.var("var_6926", dtype = "uint8", shape = (1274,))#candidate|6926|(1274,)|var|uint8
call_6924 = relay.TupleGetItem(func_4702_call(relay.reshape(const_6925.astype('uint8'), []), relay.reshape(var_6926.astype('uint8'), [14, 13, 7]), relay.reshape(var_6926.astype('uint8'), [14, 13, 7]), ), 1)
call_6927 = relay.TupleGetItem(func_4707_call(relay.reshape(const_6925.astype('uint8'), []), relay.reshape(var_6926.astype('uint8'), [14, 13, 7]), relay.reshape(var_6926.astype('uint8'), [14, 13, 7]), ), 1)
func_6103_call = mod.get_global_var('func_6103')
func_6104_call = mutated_mod.get_global_var('func_6104')
call_6939 = func_6103_call()
call_6940 = func_6103_call()
bop_6955 = relay.bitwise_or(var_6926.astype('uint32'), const_6925.astype('uint32')) # shape=(1274,)
bop_6966 = relay.greater(call_6924.astype('bool'), const_6925.astype('bool')) # shape=(8, 1, 4)
bop_6969 = relay.greater(call_6927.astype('bool'), const_6925.astype('bool')) # shape=(8, 1, 4)
func_1214_call = mod.get_global_var('func_1214')
func_1219_call = mutated_mod.get_global_var('func_1219')
var_6971 = relay.var("var_6971", dtype = "int32", shape = (1800,))#candidate|6971|(1800,)|var|int32
const_6972 = relay.const([-9.772826,8.210230,6.933223,4.531543,1.747984,9.985930,-3.106290,0.604193,-3.667771,-5.364619,6.011707,-1.181419,-1.736937,0.038334,0.959289,-3.648601,7.818763,9.717692,5.837487,6.352468,-4.050641,-6.066717,7.341547,-5.557914,1.728415,-7.623773,9.879205,0.652413,3.550207,7.324037,-4.681656,-2.588524,9.678377,2.079503,-2.528715,-9.892990,5.823076,2.332955,-5.399380,-8.396545,1.965681,2.199922,-9.425335,-3.920502,9.269436,-1.030728,0.649736,5.334476,-4.630183,8.740524,5.738631,-0.750057,0.822348,2.225027,3.399142,4.929901,1.666723,0.015604,1.655363,6.189386,7.312816,-2.354174,-3.880645,8.894553,-1.246537,3.153883,-6.746797,8.568088,-4.211348,-1.647474,-9.764318,-0.260286,-4.035265,7.503091,4.490317,-4.963471,3.920834,9.990907,-8.933010,-0.209622,6.602510,2.309147,0.836190,6.400949,6.261136,1.469213,3.185076,8.706131,6.065195,0.495299,1.942980,9.422714,3.471094,-0.798461,-0.207354,-9.655542,0.930971,8.289458,-3.993291,-8.054247,-3.411161,-7.324406,8.076720,7.182471,-5.926602,7.057387,-8.451746,-1.485283,1.560306,-0.439990,-3.206966,7.537300,-2.245955,-4.896112,-9.910831,-1.580214,3.619136,-0.511125,9.600161,0.332421,6.341082,8.101035,-6.297741,5.676033,3.706737,4.939874,-8.809274,5.471274,5.163734,-4.038025,-7.041856,3.936177,5.625418,-5.330589,6.881141,-2.257022,-4.580486,5.344100,-9.127864,-5.060409,-2.740395,5.517865,-6.216616,2.456573,-3.504200,9.819908,-5.754789,-1.689591,0.441249,-8.290063,8.760985,4.885313,9.303264,-1.666605,9.052944,2.475430,-4.164881,-5.101983,8.914374,-5.800642,4.163532,-1.534084,-0.032412,2.792684,9.107687,0.011007,9.887898,-8.919964,6.050220,-4.316065,0.717027,-0.245182,-1.451849,-4.632414,-0.473630,6.648309,7.115657,4.341415,2.634274,4.132026,7.599536,4.435778,2.902979,6.720951,-4.253413,4.708079,6.534869,9.097095,-3.918645,4.916208,-3.080635,5.103423,-9.729041,-7.979650,7.376605,-5.455026,-9.802361,0.118275,8.885450,-2.471830,-7.230194,7.261840,1.860865,6.869022,-7.283903,-1.686243,-5.338383,-7.872508,-6.059748,-4.309400,-9.249568,-6.827886,-9.518748,-1.493028,-3.917799,8.257325,-1.965501,-3.330989,7.756261,-0.671713,-2.530239,-9.071096,-8.470837,2.751652,6.779946,-4.380728,-6.043469,-4.753978,6.910128,-1.561682,0.657729,-2.223245,-5.549736,3.390059,1.447820,-8.968913,-4.184834,-1.152095,2.868607,-1.402477,5.761108,9.853284,1.475989,-7.817176,-0.460250,3.991652,-4.304138,-8.847938,-8.340419,-3.286806,9.555862,-8.190508,0.311037,-8.196411,-1.976711,-6.858629,8.513096,-7.921881,2.012773,1.542291,8.444102,-7.466122,0.711286,1.999227,-7.808847,2.154087,-2.279035,-7.632343,-2.154982,-0.127616,3.979253,-4.506314,-2.233870,7.894527,6.665347,-5.894363,9.131263,-8.165532,9.916648,0.192729,9.145139,9.439517,-8.083857,8.068589,-0.600678,4.218550,-2.894110,-6.504060,-2.200516,2.197209,5.560945,4.209450,-6.788589,8.977271,9.248428,8.341969,9.313978,-6.820863,-4.798223,-8.883942,8.596973,-1.776515,8.121094,3.505382,0.675502,4.727237,-3.735870,0.807501,-0.066435,-7.001304,8.585430,-0.631194,-1.726809,-4.312525,-9.635702,2.802031,1.434258,-2.826469,-6.146845,-5.567969,-8.692437,-9.610454,-3.356608,8.263271,-1.433444,-7.354929,6.228554,-6.081274,9.164806,2.132658,4.884782,-2.959450,-0.535096,5.857017,-5.877894,-7.591002,1.115926,1.201633,2.793286,-3.029692,-8.535732,9.114181,7.619944,3.336293,4.852602,4.964791,7.402677,9.147141,-5.389452,-6.815346,-5.102984,8.378963,-0.770598,-1.001427,8.993769,1.183068,8.156434,8.211426,0.454642,-0.949681,9.458770,3.534866,5.226674,1.152316,-6.550572,-4.910461,-7.283269,-6.822006,-9.429478,-0.072732,-3.468821,7.537966,0.219078,-1.005644,6.099285,6.218269,-6.343874,6.213640,4.042157,2.045224,-9.617482,-2.557915,4.387802,7.663116,7.845586,1.018593,-5.753613,-7.601322,-3.723752,-5.221462,7.930915,-4.452778,-7.823316,6.967089,-2.385181,5.505145,-7.141600,-1.608303,1.939198,6.856680,9.614620,-6.944288,2.304249,2.007853,2.543706,9.001368,1.807689,1.828452,5.930388,3.785747,6.649803,-1.152164,5.372633,-6.187479,5.931643,6.136015,-3.436560,-1.092895,-3.337493,1.239311,8.923583,-4.097989,1.633614,-9.345034,-8.043410,-7.491247,3.302971,5.122650,0.241381,5.979163,3.560224,-6.681048,-1.391871,2.075455,-9.077412,-4.296256,5.093469,9.775367,-4.845534,5.429951,0.524165,1.809088,3.542808,7.406254,-1.252098,4.754477,-8.875658,9.852129,-8.360412,0.861593,-0.128061,-8.485765,1.470206,-0.488281,5.489160,-1.281793,7.367365,1.288089,3.232694,-0.854814,6.976385,0.838389,8.442229,-2.178884,-2.777307,-6.836755,-5.439645,-6.831394,-4.615609,2.935831,3.038258,6.029976,8.959940,6.820495,8.054087,-0.191116,0.176702,-4.469972,5.761084,-8.836446,6.878441,-6.865602,9.674753,1.739348,6.307770,6.382143,-9.721468,2.864442,-7.259186,-1.874534,-5.595699,-2.756390,1.312221,-1.760552,-8.270301,-1.151259,-5.069723,2.004073,3.158522,8.190701,9.231893,1.521683,1.301376,-9.260625], dtype = "float32")#candidate|6972|(504,)|const|float32
call_6970 = relay.TupleGetItem(func_1214_call(relay.reshape(var_6971.astype('int32'), [15, 12, 10]), relay.reshape(call_6939.astype('float32'), [324,]), relay.reshape(const_6972.astype('float32'), [504,]), ), 0)
call_6973 = relay.TupleGetItem(func_1219_call(relay.reshape(var_6971.astype('int32'), [15, 12, 10]), relay.reshape(call_6939.astype('float32'), [324,]), relay.reshape(const_6972.astype('float32'), [504,]), ), 0)
func_4468_call = mod.get_global_var('func_4468')
func_4469_call = mutated_mod.get_global_var('func_4469')
call_6974 = relay.TupleGetItem(func_4468_call(), 0)
call_6975 = relay.TupleGetItem(func_4469_call(), 0)
func_3399_call = mod.get_global_var('func_3399')
func_3402_call = mutated_mod.get_global_var('func_3402')
const_6985 = relay.const([[-8.310484,3.873970,-2.389617,0.282618,-9.876134,-4.257541,2.925162],[7.230774,2.154177,8.035104,-4.704223,-8.056583,-8.667570,-8.825517],[-7.804280,9.526298,2.382379,-8.058256,3.620428,2.492796,8.089368],[4.217465,-5.986709,1.463523,-4.782921,-6.381674,-1.000931,6.569493],[-8.181354,5.132232,1.748206,1.916962,-6.530191,7.678332,-9.787454],[2.049714,-0.706741,-7.528711,3.211527,-7.345736,-0.877004,-8.286393],[5.632276,6.603946,-7.276433,-7.095352,9.980153,-9.185724,-6.031546],[-5.294095,-1.982941,-1.445878,-8.189076,9.291810,-0.279537,3.578922],[-5.350393,-2.456614,2.829043,-4.640814,-4.934360,8.364459,-4.816012],[5.444689,7.899917,0.692058,1.362558,6.743173,-0.646423,2.483501],[-2.684172,3.256228,1.232682,2.315892,0.320262,-0.529622,-3.581743],[-6.734628,9.870081,9.874311,2.086597,-3.342832,0.360001,-9.429394],[-5.298757,-3.106327,-7.398362,-4.285907,1.707894,-4.460095,8.456423],[9.628448,-1.166972,-9.040898,8.968290,2.472649,8.704797,-1.346176],[3.970577,-2.237649,-2.333498,-7.170969,7.625999,-3.500702,-7.241192],[3.995950,2.283875,-7.285091,-3.999241,0.996767,-0.020189,-0.587813],[-7.810807,-2.406248,6.460624,-8.628363,-1.360825,-2.276713,6.425661],[-1.394518,6.394070,5.642155,-7.464524,6.473691,-8.720215,0.551773],[2.859251,-4.131781,-5.187650,0.520365,-3.279316,6.536659,-6.857270],[-3.806090,6.930779,-7.247061,-8.356817,5.276054,9.525084,-9.884599],[-5.138938,-9.591531,1.558353,6.479872,-4.352722,-9.031434,-0.645325],[5.343784,5.719511,-8.635512,-8.917299,-5.845702,-6.526100,-3.729706],[-0.200512,-2.129681,-5.028655,-7.610955,7.587249,4.821800,-1.933756],[-8.636158,1.369404,5.060524,2.532566,0.784238,-2.148659,8.037631],[-8.447765,-2.926849,-1.425815,2.389702,-6.858796,-7.178526,2.261924],[7.203253,6.672516,6.984797,6.799475,-6.448076,-8.455489,-4.604132],[4.954574,-3.920982,5.987992,-9.731782,5.932682,-6.613027,5.747426],[1.622809,-9.366091,-5.747040,3.167340,1.540939,-7.916396,7.108477],[8.779844,-5.986499,9.456778,-1.693442,7.502812,-5.715227,-3.468676],[-8.278444,-3.301168,8.626076,-7.669952,-2.506856,4.944119,-1.207761],[5.622235,-8.080835,-9.047091,2.847491,1.252128,-7.730971,-6.377427],[1.881974,-9.792028,-2.284965,-3.259423,9.659554,0.144978,-9.049462],[3.267204,8.891549,-2.076389,-1.951784,-9.775119,4.787377,7.993215],[-0.757165,-9.901294,3.886099,-4.110451,9.488639,2.661370,9.217962],[5.241693,3.509816,2.403267,3.122135,-0.966031,-9.749954,-2.264746],[5.369697,3.630760,6.049782,2.855563,-9.500642,5.369529,-9.776876],[1.451552,9.149399,5.913407,1.476846,6.930330,7.503437,-6.520238],[-6.315539,1.927241,6.650339,-9.465216,-6.850802,9.402354,2.300481],[8.350794,1.027789,7.725003,7.746911,0.216683,3.645584,5.231258],[-9.717685,-9.002786,-7.080502,-8.513027,4.553253,6.305667,5.033856],[-6.019817,4.899468,-3.360761,-9.213805,4.695228,6.973317,8.904041],[-5.070850,3.837744,-1.813753,3.741777,6.369899,-9.621310,-5.434320],[-7.885804,-4.986891,-2.351287,-5.794911,-2.336573,6.200720,-3.000565],[-4.349352,4.657640,4.303256,-2.297407,7.303579,-0.030367,3.879297],[0.732553,-3.366601,5.205074,-5.071199,-7.237199,2.851846,-5.897772],[0.937681,5.219561,-3.182088,-5.700018,4.287257,5.283857,-9.785290],[8.741979,3.186447,-8.737960,-0.245621,-3.743447,3.170504,-8.627101],[-1.587674,4.151088,8.204614,8.843597,-4.658874,2.443831,-7.143020],[-4.296469,5.799087,9.583036,-9.653200,-7.205132,8.152809,2.461454],[-8.886487,2.783417,-7.656518,-1.530533,4.768380,4.143904,9.920791],[8.925205,-2.783112,-8.659342,0.464100,-5.938070,8.514102,7.197715],[1.642499,-7.587483,-7.034835,-9.489564,-4.130547,-6.972756,2.497505],[5.548053,5.622025,-9.553270,-8.709758,1.028958,-5.027127,2.814057],[-5.226848,0.275253,-9.376581,4.055502,5.565550,5.843405,-6.517408],[-0.049780,-9.231549,-8.983024,-7.178930,6.018044,-0.595832,4.250637],[-3.865314,-5.448193,1.957595,-0.099376,9.404666,-4.054772,-1.733876],[1.809828,8.511677,-3.488562,9.872721,8.113680,8.736657,0.195855],[2.918838,1.765884,4.887994,5.767642,0.636847,-0.628963,1.265829],[2.885038,6.638453,5.620834,-6.550962,-1.817823,-5.680811,-0.695579],[-5.055822,2.437967,-2.680395,7.649205,3.813570,-4.614387,-6.663079],[8.531234,3.029704,6.468429,3.218682,9.455076,-5.824910,-9.690504],[-8.940427,3.017379,-7.893313,-8.555412,2.190850,-1.457287,-3.756301],[3.398838,-3.081676,9.338112,7.389832,-8.543851,4.488684,3.658491],[2.994151,-0.809217,-8.395265,-5.279361,3.875425,7.337949,-4.293979],[3.731825,-1.360690,1.089685,7.177786,-0.520755,-3.731909,-4.391074],[-3.338787,2.334566,7.457485,0.161302,9.637664,-7.714866,1.924896],[0.214963,4.593075,-9.656256,7.360572,-1.980889,-4.786058,-2.584186],[9.307605,-6.515403,-8.204722,2.629176,-8.284489,3.260187,-4.387281],[-1.637881,0.476277,6.098198,-5.096041,-6.321446,-0.624176,-6.057073],[0.338423,7.871440,9.414214,-1.053675,4.875906,7.142538,8.652555],[-7.204243,-9.203849,5.671285,-4.874194,6.365313,-7.826211,5.737154],[-0.126562,-1.018737,-3.229510,9.391692,5.070237,3.716027,8.297222],[-4.296611,0.814369,2.469066,6.665890,3.044056,1.419136,-8.886085],[-1.103891,-8.230286,-7.980776,-8.330717,-4.286603,-7.825688,2.235642],[9.935213,2.116382,1.045472,-6.874853,-5.638373,2.550768,0.127045],[-6.480442,5.503960,3.483008,-2.056550,-1.956933,-5.128049,-6.464001],[-0.683174,-7.251489,-3.358885,-8.029442,-1.868081,-5.445204,-3.573632]], dtype = "float64")#candidate|6985|(77, 7)|const|float64
call_6984 = relay.TupleGetItem(func_3399_call(relay.reshape(const_6925.astype('float64'), []), relay.reshape(const_6985.astype('float64'), [7, 11, 7]), ), 1)
call_6986 = relay.TupleGetItem(func_3402_call(relay.reshape(const_6925.astype('float64'), []), relay.reshape(const_6985.astype('float64'), [7, 11, 7]), ), 1)
output = relay.Tuple([uop_6888,uop_6906,call_6908,const_6909,call_6939,bop_6955,bop_6966,call_6970,var_6971,const_6972,call_6974,call_6984,const_6985,])
output2 = relay.Tuple([uop_6888,uop_6906,call_6910,const_6909,call_6940,bop_6955,bop_6969,call_6973,var_6971,const_6972,call_6975,call_6986,const_6985,])
func_6995 = relay.Function([var_6887,var_6926,var_6971,], output)
mod['func_6995'] = func_6995
mod = relay.transform.InferType()(mod)
mutated_mod['func_6995'] = func_6995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6995_call = mutated_mod.get_global_var('func_6995')
var_6997 = relay.var("var_6997", dtype = "float64", shape = (16, 9, 13))#candidate|6997|(16, 9, 13)|var|float64
var_6998 = relay.var("var_6998", dtype = "uint8", shape = (1274,))#candidate|6998|(1274,)|var|uint8
var_6999 = relay.var("var_6999", dtype = "int32", shape = (1800,))#candidate|6999|(1800,)|var|int32
call_6996 = func_6995_call(var_6997,var_6998,var_6999,)
output = call_6996
func_7000 = relay.Function([var_6997,var_6998,var_6999,], output)
mutated_mod['func_7000'] = func_7000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_7062 = relay.TupleGetItem(func_3940_call(), 1)
call_7063 = relay.TupleGetItem(func_3941_call(), 1)
func_3321_call = mod.get_global_var('func_3321')
func_3323_call = mutated_mod.get_global_var('func_3323')
call_7077 = relay.TupleGetItem(func_3321_call(), 0)
call_7078 = relay.TupleGetItem(func_3323_call(), 0)
output = relay.Tuple([call_7062,call_7077,])
output2 = relay.Tuple([call_7063,call_7078,])
func_7079 = relay.Function([], output)
mod['func_7079'] = func_7079
mod = relay.transform.InferType()(mod)
output = func_7079()
func_7080 = relay.Function([], output)
mutated_mod['func_7080'] = func_7080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1526_call = mod.get_global_var('func_1526')
func_1528_call = mutated_mod.get_global_var('func_1528')
call_7122 = func_1526_call()
call_7123 = func_1526_call()
func_58_call = mod.get_global_var('func_58')
func_60_call = mutated_mod.get_global_var('func_60')
const_7134 = relay.const([-7.191143,-2.201678,-3.713567,-8.839479,-9.203312,-7.510306,2.749115,7.175117,-0.616133,6.767874,-8.670928,-0.095436,-8.707013,-6.398969,-0.413103,-3.215468,0.069738,4.516475,-5.631689,-0.318636,9.745969,2.132868,-0.868136,-7.625042,5.693013,-4.109912,9.542443,-4.342606,9.089388,3.672791,-2.722443,-5.386556,-5.832846,8.755929,9.428519,6.870102,-8.597472,3.117476,0.551890,2.875161,1.461968,9.423386,-3.465177,-0.255402,-7.898689,-9.207719,-8.200506,0.707568,-1.961521,6.899747,-0.744228,-4.784171,0.211682,5.385749,-0.823434,-1.930422,-5.125638,-3.970581,6.057435,-4.385121,0.340497,-3.386265,9.522367,-8.712514,-3.689381,5.025546,1.100845,6.689021,8.792712,5.500428,8.300028,7.436824,5.071391,-6.945526,9.266324,3.585621,9.074813,-9.942124,5.425616,8.817566,-0.614682,-5.122675,-4.499673,6.524792,-3.359453,0.806286,-0.466608,1.068623,1.137928,-1.508168,0.956151,1.976465,4.656878,0.645138,-6.484683,-1.191392,-0.619538,-6.391338,-8.645992,-7.564681,2.562993,-3.890402,6.425306,2.535622,7.655092,8.922603,6.420828,-2.445734,-1.231395,7.260149,-1.771685,9.256645,-0.164791,8.206121,4.937698,0.878606,-1.568133,-1.855030,-4.068033,-2.017359,1.963175,-4.295162,-9.773514,7.622811,-2.900564,5.713939,-2.257750,5.959870,7.082101,7.820017,6.855413,8.344589,-9.318552,9.476873,3.188978,3.618150,1.756994,-6.890652,-8.145790,-7.572377,-2.703866,1.914404,-4.602310,-9.979721,0.683771,6.309130,-8.788782,-6.290186,-6.600671,0.044482,4.072575,9.053555,-1.071180,-8.147891,1.345397,-4.608062,0.540818,8.021770,-9.275680,7.768462,3.664338,-0.730968,8.411523,7.026059,-8.108978,8.482006,4.192351,-9.840159,-9.679596,-8.924627,7.635312,-1.733280,-1.412742,4.334270,8.057975,-4.977805,2.753752,-6.034365,-8.833372,-4.358875,7.648544,-7.518913,-5.259351,-0.226190,-1.025077,7.709689,2.672527,-6.687178,1.893028,1.929307,-5.414010,0.960245,-9.016302,-3.750625,9.835753,-4.412331,-2.387750,9.163415,4.654786,-7.409965,-8.333552,-6.068151,4.244149,9.799733,-3.347546,4.448415,2.111653,-0.551385,-2.080386,-1.136925,5.666447,-1.449231,9.794312,0.110756,-8.309515,-1.307540,6.721393,-4.726728,8.087901,9.439334,-9.540990,-2.418710,6.094230,-4.478275,2.619875,-0.665967,8.430303,7.129740,-9.457381,4.164827,-9.195304,-0.392977,-8.173983,-4.708898,-9.223050,7.811777,-1.457821,-1.288225,-7.092367,5.269650,7.196373,5.959608,2.310382,-2.076661,1.554315,-3.869111,5.605753,3.202765,2.653517,-5.560428,5.380145,7.777375,0.333545,5.125535,-8.647005,-7.952968,-8.142165,-2.269728,-4.249774,-5.157616,-5.800166,8.452191,6.305026,-8.220346,-3.988199,-5.014994,-9.933397,5.173220,-1.353836,-7.797322,3.852494,-7.443852,-3.000945,4.945123,9.131878,-2.275727,-2.501462,-4.527138,-8.539572,2.871446,2.069194,-4.249360,7.291396,3.149666,-3.133271,-2.250013,-2.140712,-5.284651,5.424297,9.939886,6.746407,-6.689428,9.743307,7.468941,7.433407,-6.302312,-2.051273,7.314760,-4.377538,8.212604,-8.192471,5.141513,4.001760,5.850971,8.684354,7.829917,-5.704538,4.737649,-9.899784,8.797730,0.866787,-6.523962,-7.569094,5.379017,1.245037,8.459985,-9.259324,-6.454152,-7.518315,-8.873374,8.399721,-6.379982,1.197653,4.250982,-3.839462,-2.660055,9.805328,-8.616666,-6.016322,-1.044080,-4.197020,4.697836,-5.076866,-9.694087,5.037177,1.140251,8.260985,-3.583762,3.609688,-5.123094,-2.338984,5.971471,-0.922354,0.263772,7.339066,-9.627187,5.839471,-3.484059,3.195467,2.418917,3.413903,6.712595,-2.058510,2.958911,-7.458548,-2.751130,-3.913850,-4.927680,3.239042,8.908060,9.664807,-8.978888,5.737874,7.359134,-7.156464,5.930126,3.210024,-5.024753,-3.929234,0.996555,6.935703,3.027154,8.924944,-4.984196,0.538048,3.568991,9.199830,-6.787903,-9.340684,-1.192947,-9.909860,-6.844619,-9.648389,2.404394,-0.351296,2.157764,-5.402865,-6.490252,-0.734881,-2.342150,-3.457758,7.650911,-0.358901,1.333049,4.563299,6.332960,7.182523,3.685715,-0.572112,5.575346,3.437779,-9.382524,9.336751,5.731902,-9.062484,-4.465521,2.889508,-9.317646,6.571553,-1.245747,7.888595,-3.247395,5.828249,8.404019,-9.531204,-0.633475,9.402644,-3.233350,9.503503,3.319446,2.609456,3.391426,1.851598,-3.208659,7.079752,9.932048,-5.826572,9.124849,0.419319,8.797511,2.007138,8.821920,7.002194,-0.506198,9.658081,-6.425061,0.001931,6.501903,7.368429,2.915424,-4.753478,-6.048838,-5.185956,-5.874496,-6.712770,6.682174,1.141230,-9.702999,-2.169537,-4.237845,-6.995886,7.803532,-8.841328,-6.070650,-3.597809,-8.686441,-7.909139,-5.620525,-1.595029,-0.237747,-5.981900,6.587038,-8.077459,-4.928460,-3.563561,-6.776100,2.567702,-8.909688,-8.436416,-6.277636,-1.535348,4.459743,7.839533,0.639767,-8.087775,-4.998674,8.156088,8.147487,5.376504,7.651924,-4.814695,1.101926,0.536379,2.028491,-1.504667,-1.316061,-0.233725,-7.794429,0.810382,0.368680,4.228087,0.026216,0.615231,4.509350,-5.030051,-4.749617,-2.641061,4.488362,8.729613,-1.782684,-2.189670,-6.991263,-9.934684,-0.314599], dtype = "float32")#candidate|7134|(504,)|const|float32
call_7133 = relay.TupleGetItem(func_58_call(relay.reshape(const_7134.astype('float32'), [12, 6, 7])), 0)
call_7135 = relay.TupleGetItem(func_60_call(relay.reshape(const_7134.astype('float32'), [12, 6, 7])), 0)
func_4702_call = mod.get_global_var('func_4702')
func_4707_call = mutated_mod.get_global_var('func_4707')
const_7137 = relay.const(2, dtype = "uint8")#candidate|7137|()|const|uint8
const_7138 = relay.const([7,7,-8,8,-4,5,-10,-4,8,7,-10,-8,-5,-4,-5,4,-6,5,-9,5,2,9,-9,-8,-8,-5,-4,-7,-6,-6,9,-4,3,10,2,5,9,6,1,-7,9,-7,2,1,-4,-10,-7,9,6,1,-7,4,2,-6,-5,2,-2,6,1,-4,4,-8,-8,10,8,-2,10,3,-5,7,-9,-6,5,6,1,3,-2,6,-9,6,8,4,-3,1,3,9,-6,4,-7,1,8,3,6,4,6,3,-7,3,4,-1,4,1,-5,3,-5,1,-8,-5,-4,10,-10,-5,1,-8,-3,-2,-7,7,9,-5,2,-8,-10,5,-4,3,7,1,-5,-5,-8,-5,1,8,-2,2,8,-6,-5,-2,5,4,-1,-2,-6,5,3,8,2,3,10,9,7,6,-8,2,-2,-5,-1,-1,5,8,8,3,-3,-5,4,-1,-1,3,-5,-1,1,-2,-7,7,1,-4,-5,-8,-5,-3,8,10,-1,7,9,-3,-7,1,7,8,7,-6,8,3,8,-4,8,-6,-10,4,-2,-8,-1,-5,-10,8,-4,2,-10,-9,8,5,-9,6,-5,-7,-7,-7,7,-7,-4,6,9,4,-2,-10,-8,8,-7,5,7,10,-10,-10,-9,-5,2,-3,-7,2,1,2,10,-7,6,-10,7,-7,-7,3,4,8,-9,-8,-9,-8,6,-10,-9,3,8,-8,-5,1,2,5,3,-5,-4,1,-5,6,6,-8,-2,2,-8,6,-5,-3,-2,-4,-4,7,4,-1,-6,2,2,9,-3,-5,-1,-4,9,-5,8,6,-10,7,-1,-3,-7,1,5,3,-10,8,-1,-2,-10,9,-8,-7,10,-4,-6,9,2,-3,9,6,6,5,-8,6,-3,5,2,10,10,6,-1,-9,5,3,-8,5,6,-1,-6,2,4,1,-3,-9,-4,-1,9,1,2,10,-4,-3,-7,-5,-1,-2,-6,10,-5,2,-3,-6,3,-8,3,4,-3,6,-1,-4,-7,7,1,-3,-8,8,10,-6,3,-9,-2,-2,1,-6,10,-7,6,10,-3,6,10,3,-7,-4,-10,5,-7,6,6,2,-2,10,-5,7,-5,-9,6,6,8,-2,-4,-2,-5,-1,-2,6,4,-4,-8,8,6,8,-7,5,-6,-4,3,3,6,-8,7,-2,2,1,-9,-3,6,8,10,9,-8,8,10,-1,5,3,-5,-6,-3,7,6,8,3,-5,9,1,-6,-3,10,3,5,-1,2,-7,4,6,6,-4,-4,-4,-3,-10,-3,7,7,1,5,2,1,10,-5,-5,-4,10,8,-9,-8,-9,-4,-4,-4,4,-9,7,-8,-3,-5,2,9,-7,5,-5,-7,-1,1,-3,-10,-6,-5,-9,10,-4,2,4,7,8,7,2,-10,-6,-8,-7,8,-9,6,6,2,1,-5,7,8,1,-3,-9,7,5,6,8,-5,9,-7,-7,4,-4,5,-8,-1,8,5,6,-5,-1,-2,9,8,-1,2,5,-10,-4,4,-7,2,-8,5,10,6,-4,-10,10,-10,4,-10,9,-10,4,4,9,-9,4,-3,-7,-8,1,-6,8,1,10,-1,-1,4,4,-9,6,2,-5,8,7,-4,6,9,-8,5,4,-8,10,-2,-2,9,-10,-9,7,-8,-5,-5,2,4,6,9,9,7,-9,-4,-2,8,4,-9,-7,9,1,3,-8,3,-8,4,-10,-5,-1,-10,1,-9,7,8,-6,6,-1,-1,5,10,8,1,6,9,-4,-4,-6,2,10,-7,-6,-6,-1,-3,2,-2,-1,10,-8,7,-7,6,4,7,7,2,9,2,6,-8,1,1,-2,9,10,-9,7,-10,-5,-4,-1,8,6,-1,5,1,9,10,-2,9,-5,7,-6,-10,4,-3,-2,-6,-1,9,6,2,3,-7,10,-7,4,6,10,3,2,2,7,2,-5,-3,-2,-4,-8,-10,-7,-3,10,5,9,-8,3,7,-6,-7,-2,1,7,9,-8,-4,-5,-8,-10,6,10,-10,-4,5,6,10,-4,9,8,-7,-8,-1,-9,1,1,-9,-3,-6,-4,6,4,-7,9,-10,-6,3,-9,1,1,-9,9,-7,-7,-9,5,10,-5,8,4,1,4,-6,-8,2,8,4,-9,10,-6,-6,4,10,4,-3,5,-8,10,1,2,-7,-7,8,4,2,6,-2,-6,2,-2,10,-1,-6,4,-8,3,7,-8,3,-2,3,5,-8,2,4,-7,1,3,-10,5,5,3,5,6,5,-5,8,8,2,8,-3,-10,-2,10,-2,-7,-10,-1,-6,-2,-7,-1,-8,10,8,6,10,4,9,-1,-8,9,3,-2,9,9,-5,-10,1,3,-8,3,-4,-10,-2,5,-3,7,-4,-4,6,-8,6,-4,-8,8,-5,-5,-9,-2,-10,-8,-1,9,-5,10,-8,2,8,3,-2,-3,-4,-4,5,-4,2,10,-9,9,-3,7,9,7,7,3,-5,-6,7,3,-7,9,-9,5,7,1,-4,3,-10,-1,4,-8,-2,-7,-6,5,7,7,2,-1,-5,-10,3,-2,-6,9,7,-9,2,2,-6,5,10,9,-3,2,5,7,-7,-10,-2,-3,6,9,-7,10,-7,-9,9,10,8,-10,-6,-2,7,-6,-3,-7,-10,-9,-9,-10,-5,5,7,-6,9,-10,2,-6,4,-8,-10,5,3,-6,-6,1,5,5,-3,-7,-4,5,-10,5,-4,10,7,-5,3,5,10,-1,1,-9,7,-7,4,9,3,-8,8,-3,7,-7,9,-2,-9,-6,-10,-5,2,10,-3,9,-4,3,9,8,3,-8,9,-3,-2,-9,5,-7,-7,2,5,-8,-10,-2,-8,-5,-8,-3,-3,-7,7,-5,-1,9,1,-8,5,-9,8,6,-4,4,3,10,6,-1,3,-5,-10,2,6,-8,-5,-7,-8,6,-3,-5,10,4,-5,8,1,-2,-10,10,4,8,-7,-2,-8,-9,1,-1,1,8,10,-4,3,-2,2,-8,4,-6,3,-5,8,-5,-10,-1,-2,7,-9,5,-10,-3,-2,7,-9,6,2,-4,-7,-1,-5,-8,-5,3,7,-4,-6,9,9,4,10,-3,-1,-5,6,-5,-10,2,-7,9,-2,3,1,-7,-8,2,1,10,-2,10,1,-3,-8,8,9,-1,4,10,-4,10,8,-9,7,10,-4,-7,6,8,4,-9,-7,3,-2,7,-4,7,-8,2,6,5,2,5,-4,2,-2,1,1,1,1,-9,-4,6,5,-9,7,10,-6,7,-9,7,10,-9,2,-4,9,-5,-4,-6,8,-9,-7,-6,4,-2,2,4,-7,-5,-4,-1,4,5,8,6,-5,1,-6,7,-10,-2,-8,8,-1,4,4,8,3,6,5,7,9,-3,7,-4,7,-3,4,10], dtype = "uint8")#candidate|7138|(1274,)|const|uint8
call_7136 = relay.TupleGetItem(func_4702_call(relay.reshape(const_7137.astype('uint8'), []), relay.reshape(const_7138.astype('uint8'), [14, 13, 7]), relay.reshape(const_7138.astype('uint8'), [14, 13, 7]), ), 0)
call_7139 = relay.TupleGetItem(func_4707_call(relay.reshape(const_7137.astype('uint8'), []), relay.reshape(const_7138.astype('uint8'), [14, 13, 7]), relay.reshape(const_7138.astype('uint8'), [14, 13, 7]), ), 0)
output = relay.Tuple([call_7122,call_7133,const_7134,call_7136,const_7137,const_7138,])
output2 = relay.Tuple([call_7123,call_7135,const_7134,call_7139,const_7137,const_7138,])
func_7142 = relay.Function([], output)
mod['func_7142'] = func_7142
mod = relay.transform.InferType()(mod)
mutated_mod['func_7142'] = func_7142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7142_call = mutated_mod.get_global_var('func_7142')
call_7143 = func_7142_call()
output = call_7143
func_7144 = relay.Function([], output)
mutated_mod['func_7144'] = func_7144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4468_call = mod.get_global_var('func_4468')
func_4469_call = mutated_mod.get_global_var('func_4469')
call_7190 = relay.TupleGetItem(func_4468_call(), 0)
call_7191 = relay.TupleGetItem(func_4469_call(), 0)
output = relay.Tuple([call_7190,])
output2 = relay.Tuple([call_7191,])
func_7199 = relay.Function([], output)
mod['func_7199'] = func_7199
mod = relay.transform.InferType()(mod)
mutated_mod['func_7199'] = func_7199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7199_call = mutated_mod.get_global_var('func_7199')
call_7200 = func_7199_call()
output = call_7200
func_7201 = relay.Function([], output)
mutated_mod['func_7201'] = func_7201
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7234 = relay.const([[[-1,-10,9,7,7,-3,-4,1,2],[9,-4,7,3,8,-5,5,-7,-8],[6,6,5,-6,-10,6,7,-8,-6],[2,1,5,9,3,-4,2,-6,-5],[-2,2,10,-3,-3,9,-8,-1,2],[-4,-5,-9,-7,10,1,-6,6,4],[8,-4,-8,4,-5,6,10,-8,-8],[5,8,-1,-1,-2,7,-5,-3,7],[4,-9,4,-6,-7,1,-9,-1,10],[-6,8,-9,1,-9,-5,-6,-6,9],[2,6,8,-3,4,6,5,-6,-9],[8,-9,4,3,-4,-7,-1,-6,8]],[[-4,3,-6,-3,-10,-4,4,-8,-8],[8,4,-2,-4,-2,10,6,-5,-2],[-7,-2,4,7,9,-2,8,10,-3],[-3,-3,-9,6,-7,-6,2,5,-2],[9,8,5,-6,-1,2,-7,3,3],[3,9,2,10,-9,-7,4,2,-5],[4,-9,6,-3,8,4,-9,-1,-8],[4,-7,5,-5,10,-2,6,6,5],[7,-6,-1,6,-7,8,10,-7,4],[10,10,-1,-7,-2,-10,-5,-2,-2],[1,-5,-5,-8,-5,-1,-5,-2,-3],[9,10,4,-8,-7,-2,-7,6,-3]],[[-5,5,4,-2,-1,5,-7,-3,-8],[7,8,8,2,2,7,7,6,5],[10,-8,2,-4,-10,6,-5,-3,6],[10,-7,3,8,6,-4,4,8,6],[7,-9,-10,-4,9,-8,9,2,-2],[9,-7,-4,6,8,1,-4,-5,-5],[9,7,-7,4,3,-3,2,-5,-7],[-1,-6,-6,2,-5,-2,-9,-10,-8],[3,4,-7,3,8,-10,6,5,10],[-10,9,9,-8,2,-9,8,2,8],[-8,1,-8,9,4,-9,-7,-7,6],[8,6,-5,-2,-7,-4,6,-7,-10]],[[-9,2,-4,8,-9,8,4,-1,-7],[7,7,4,10,-5,-8,-5,-5,2],[7,-1,-6,-2,-6,-1,9,-2,2],[10,-7,-1,2,-6,1,6,-8,4],[9,-6,-1,10,7,-6,10,-2,-3],[-4,7,3,7,-7,10,3,-7,4],[10,-8,8,7,-2,-6,2,-1,9],[-10,-5,3,8,3,-7,-5,-1,-3],[7,-6,8,5,2,-10,1,-9,-5],[-10,-8,-8,1,9,6,-2,1,3],[10,9,5,-4,7,3,-6,5,-9],[9,6,-4,2,-7,-4,2,8,7]],[[-1,2,-4,10,-9,6,-7,7,-6],[8,-7,-3,-5,4,-8,-9,-3,7],[-5,9,-1,3,1,3,-1,7,8],[-8,7,-8,-4,-4,-9,6,7,9],[2,5,-2,-1,1,-10,10,-4,9],[-9,-1,9,5,4,-1,-7,-5,-6],[-1,9,-7,-1,-8,-1,6,-9,7],[7,-5,2,-3,1,-1,4,-4,-4],[-5,-7,7,-9,1,10,-8,-10,5],[1,10,6,6,5,-5,2,-1,1],[10,1,-8,9,-7,10,-10,-1,-10],[-4,-9,10,-8,-3,3,7,6,7]],[[10,-1,-5,-10,-2,5,-10,-10,-8],[4,-3,4,-5,-1,2,6,-4,-10],[9,-3,-3,-3,-9,-5,-3,2,-5],[6,-1,2,5,-5,4,7,7,4],[-10,6,-10,-8,-9,-3,-9,6,-3],[3,-4,-8,-8,-4,7,-9,-5,-8],[-6,-1,9,1,10,9,-4,3,3],[-10,8,-7,2,-4,1,-5,10,-3],[-10,8,10,5,-10,-3,2,5,7],[-7,-8,-9,4,-7,10,5,2,1],[-9,-7,-7,-3,6,-8,-9,-4,-5],[5,9,-8,-10,10,-6,-8,-7,7]],[[7,-2,-5,-6,7,-1,-4,-6,6],[3,-6,-10,4,-1,-2,7,-6,2],[3,-8,-9,5,-5,8,2,7,-6],[2,6,-3,2,10,2,3,-2,-6],[-10,-6,-9,-6,8,10,-2,-6,-6],[9,-10,7,-10,5,-1,-7,-9,8],[9,-8,-9,3,-1,-10,-7,-6,-7],[-6,3,-1,4,9,-10,1,3,8],[-10,-5,-9,9,-3,10,-7,-9,10],[9,7,-7,-5,8,-2,1,-7,-4],[-1,-2,-7,6,-9,-6,-4,-4,1],[10,10,7,6,5,-4,2,9,4]],[[6,-1,5,-5,10,-2,1,-10,-1],[4,-5,-3,-5,6,8,-1,10,-9],[-9,5,-4,-2,-2,5,-9,1,5],[5,-10,7,3,-2,9,-9,6,10],[5,-4,-6,10,-7,1,6,3,9],[4,7,6,-7,-6,2,-2,10,4],[4,-3,-7,-4,-2,-9,-6,-4,6],[1,-8,-6,-5,-9,-6,-8,7,3],[8,6,-4,-1,-5,5,9,-7,-7],[7,-5,4,9,2,-5,-1,2,-3],[2,9,10,-1,4,-6,-4,10,1],[-1,-5,-8,9,5,5,-8,-1,6]],[[-2,10,6,-4,1,10,-7,-2,-5],[5,8,-5,-6,-1,9,8,-6,-7],[6,-5,-5,-7,-7,5,9,-5,-1],[-1,-3,-6,2,6,-2,-10,-4,5],[9,2,-3,7,-10,-9,5,8,4],[10,7,2,1,-10,-5,4,9,2],[-4,3,5,7,-4,6,10,-2,4],[-8,5,9,7,8,1,9,10,1],[6,5,-2,7,-9,-9,-4,9,9],[3,-3,-1,2,-2,-1,-10,-1,-6],[4,-7,4,-7,4,-2,-5,-8,-8],[1,-8,2,5,4,-5,-1,6,5]],[[3,-10,7,2,7,-8,-9,-4,-3],[-6,-8,-6,-3,-5,4,-10,-9,4],[4,-10,7,7,9,5,-8,2,-3],[1,5,6,-6,-6,7,-3,-7,-2],[-10,-10,-10,3,-6,-6,-5,-5,-4],[2,7,7,8,-7,-2,1,9,3],[8,9,-2,3,5,10,8,1,9],[-9,7,-4,-6,1,8,-5,1,-8],[-3,2,8,-9,-3,-2,-8,9,-9],[-4,-10,10,-8,-2,-1,2,3,1],[-8,-8,1,-3,-2,-4,-7,-8,3],[3,-5,10,7,-1,8,2,4,-6]],[[1,-6,4,-6,8,8,-1,3,-7],[-3,5,-5,-6,8,6,-7,-5,-9],[-2,-10,10,2,-10,-9,-5,1,6],[4,10,2,-10,-2,9,-4,8,-1],[-1,-2,-5,-9,-3,2,-6,-1,-2],[4,-1,5,-10,3,2,-8,7,7],[3,4,-4,-5,-5,-7,-9,-7,9],[-4,-2,9,-1,10,-1,9,10,-9],[-2,-7,1,5,4,2,-5,-4,-1],[10,2,-1,-6,-4,-6,3,7,6],[-3,-8,3,2,-6,5,-9,-1,-7],[-3,-3,-9,10,-8,1,5,-6,-1]],[[-2,-7,9,-6,-8,-7,-9,10,-7],[-4,3,6,-7,8,-5,-2,-1,-7],[-2,-7,2,-7,-6,5,-8,-4,3],[4,2,-3,10,8,-6,-2,-10,9],[4,-2,-7,-6,8,-7,-2,10,5],[-5,-1,-6,7,-3,8,-6,-2,-5],[-9,-3,2,9,2,-10,-5,4,7],[10,10,9,-7,-10,-7,-5,7,5],[-9,7,-4,-10,3,2,4,4,-5],[-9,1,-1,-6,5,6,7,2,9],[-1,4,1,-4,6,-8,-10,-5,-8],[-9,3,-2,-6,4,-2,-6,2,-7]]], dtype = "int16")#candidate|7234|(12, 12, 9)|const|int16
var_7235 = relay.var("var_7235", dtype = "int16", shape = (12, 12, 9))#candidate|7235|(12, 12, 9)|var|int16
bop_7236 = relay.maximum(const_7234.astype('int16'), relay.reshape(var_7235.astype('int16'), relay.shape_of(const_7234))) # shape=(12, 12, 9)
func_2449_call = mod.get_global_var('func_2449')
func_2450_call = mutated_mod.get_global_var('func_2450')
call_7240 = relay.TupleGetItem(func_2449_call(), 0)
call_7241 = relay.TupleGetItem(func_2450_call(), 0)
output = relay.Tuple([bop_7236,call_7240,])
output2 = relay.Tuple([bop_7236,call_7241,])
func_7253 = relay.Function([var_7235,], output)
mod['func_7253'] = func_7253
mod = relay.transform.InferType()(mod)
var_7254 = relay.var("var_7254", dtype = "int16", shape = (12, 12, 9))#candidate|7254|(12, 12, 9)|var|int16
output = func_7253(var_7254)
func_7255 = relay.Function([var_7254], output)
mutated_mod['func_7255'] = func_7255
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7273 = relay.var("var_7273", dtype = "float64", shape = (8, 11, 6))#candidate|7273|(8, 11, 6)|var|float64
uop_7274 = relay.log2(var_7273.astype('float64')) # shape=(8, 11, 6)
output = uop_7274
output2 = uop_7274
func_7286 = relay.Function([var_7273,], output)
mod['func_7286'] = func_7286
mod = relay.transform.InferType()(mod)
var_7287 = relay.var("var_7287", dtype = "float64", shape = (8, 11, 6))#candidate|7287|(8, 11, 6)|var|float64
output = func_7286(var_7287)
func_7288 = relay.Function([var_7287], output)
mutated_mod['func_7288'] = func_7288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6141_call = mod.get_global_var('func_6141')
func_6142_call = mutated_mod.get_global_var('func_6142')
call_7301 = func_6141_call()
call_7302 = func_6141_call()
output = relay.Tuple([call_7301,])
output2 = relay.Tuple([call_7302,])
func_7305 = relay.Function([], output)
mod['func_7305'] = func_7305
mod = relay.transform.InferType()(mod)
output = func_7305()
func_7306 = relay.Function([], output)
mutated_mod['func_7306'] = func_7306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4437_call = mod.get_global_var('func_4437')
func_4439_call = mutated_mod.get_global_var('func_4439')
call_7364 = func_4437_call()
call_7365 = func_4437_call()
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_7366 = func_3419_call()
call_7367 = func_3419_call()
bop_7378 = relay.mod(call_7364.astype('float32'), relay.reshape(call_7366.astype('float32'), relay.shape_of(call_7364))) # shape=(13, 5, 1)
bop_7381 = relay.mod(call_7365.astype('float32'), relay.reshape(call_7367.astype('float32'), relay.shape_of(call_7365))) # shape=(13, 5, 1)
bop_7388 = relay.logical_and(call_7364.astype('bool'), relay.reshape(bop_7378.astype('bool'), relay.shape_of(call_7364))) # shape=(13, 5, 1)
bop_7391 = relay.logical_and(call_7365.astype('bool'), relay.reshape(bop_7381.astype('bool'), relay.shape_of(call_7365))) # shape=(13, 5, 1)
func_3898_call = mod.get_global_var('func_3898')
func_3901_call = mutated_mod.get_global_var('func_3901')
var_7396 = relay.var("var_7396", dtype = "float32", shape = (324,))#candidate|7396|(324,)|var|float32
call_7395 = relay.TupleGetItem(func_3898_call(relay.reshape(var_7396.astype('float32'), [324,])), 5)
call_7397 = relay.TupleGetItem(func_3901_call(relay.reshape(var_7396.astype('float32'), [324,])), 5)
uop_7429 = relay.exp(call_7364.astype('float32')) # shape=(13, 5, 1)
uop_7431 = relay.exp(call_7365.astype('float32')) # shape=(13, 5, 1)
output = relay.Tuple([bop_7388,call_7395,var_7396,uop_7429,])
output2 = relay.Tuple([bop_7391,call_7397,var_7396,uop_7431,])
F = relay.Function([var_7396,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7396,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

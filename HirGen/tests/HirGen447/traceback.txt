==========mod==========
#[version = "0.0.5"]
def @func_5182(%var_5144: Tensor[(504), float32], %var_5146: Tensor[(784), float32]) -> (Tensor[(504), float32], Tensor[(13, 5, 784), int16], Tensor[(13, 5, 324), bool]) {
  %0 = cast(%var_5144, dtype="float32") /* ty=Tensor[(504), float32] */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
  %2 = cast(%var_5146, dtype="float32") /* ty=Tensor[(784), float32] */;
  %3 = reshape(%0, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %4 = reshape(%1, newshape=[54, 6]) /* ty=Tensor[(54, 6), float32] */;
  %5 = reshape(%2, newshape=[784]) /* ty=Tensor[(784), float32] */;
  %6 = @func_2010(%3, %4, %5) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], Tensor[(15, 12, 10), float64], Tensor[(1800), int32], Tensor[(54, 6), float32], Tensor[(16, 7, 7), float64], Tensor[(784), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool], Tensor[(455), uint16], Tensor[(13, 5, ?), float32]) */;
  %7 = %6.11;
  %8 = cast(%var_5146, dtype="int16") /* ty=Tensor[(784), int16] */;
  %9 = cast(%7, dtype="int16") /* ty=Tensor[(13, 5, ?), int16] */;
  %10 = @func_3658() /* ty=Tensor[(13, 5, 1), float32] */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(324), float32] */, dtype="bool") /* ty=Tensor[(324), bool] */;
  %12 = cast(%10, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %13 = bitwise_xor(%8, %9) /* ty=Tensor[(13, 5, 784), int16] */;
  %14 = logical_and(%11, %12) /* ty=Tensor[(13, 5, 324), bool] */;
  (%var_5144, %13, %14)
}

def @func_3443() -> Tensor[(13, 5, 1), float32] {
  @func_2524() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_6141() -> Tensor[(13, 5, 1), float32] {
  %15 = @func_3940() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */;
  %15.1
}

def @func_4880() -> Tensor[(13, 5, 1), float32] {
  %16 = @func_1697() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, 1), float32]) */;
  %16.1
}

def @func_7142() -> (Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], uint8, Tensor[(1274), uint8]) {
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %18 = reshape(%17, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %19 = @func_58(%18) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %20 = cast(meta[relay.Constant][2] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %21 = cast(meta[relay.Constant][3] /* ty=Tensor[(1274), uint8] */, dtype="uint8") /* ty=Tensor[(1274), uint8] */;
  %22 = cast(meta[relay.Constant][3] /* ty=Tensor[(1274), uint8] */, dtype="uint8") /* ty=Tensor[(1274), uint8] */;
  %23 = reshape(%20, newshape=[]) /* ty=uint8 */;
  %24 = reshape(%21, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), uint8] */;
  %25 = reshape(%22, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), uint8] */;
  %26 = @func_4702(%23, %24, %25) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(8, 1, 4), float32], Tensor[(14, 13, 7), bool]) */;
  %27 = @func_1526() /* ty=Tensor[(13, 5, ?), bool] */;
  %28 = %19.0;
  %29 = %26.0;
  (%27, %28, meta[relay.Constant][1] /* ty=Tensor[(504), float32] */, %29, meta[relay.Constant][2] /* ty=uint8 */, meta[relay.Constant][3] /* ty=Tensor[(1274), uint8] */)
}

def @func_2449() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) {
  %30 = @func_2212() /* ty=(Tensor[(13, 5, 1), float32],) */;
  %31 = @func_1139() /* ty=Tensor[(13, 5, 1), float32] */;
  %32 = %30.0;
  (%31, %32)
}

def @func_4515(%var_4508: Tensor[(11, 1, 9), int8]) -> (Tensor[(11, 1, 9), int8],) {
  %33 = cast(meta[relay.Constant][4] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %34 = cast(%var_4508, dtype="int8") /* ty=Tensor[(11, 1, 9), int8] */;
  %35 = maximum(%33, %34) /* ty=Tensor[(11, 1, 9), int8] */;
  (%35,)
}

def @func_1139() -> Tensor[(13, 5, 1), float32] {
  %36 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 5, 1), float32] */, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  acos(%36) /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_5796() -> (Tensor[(13, 5, ?), bool],) {
  %37 = @func_2636() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */;
  %38 = %37.1;
  (%38,)
}

def @func_5306(%var_5286: Tensor[(2, 392), float32]) -> (Tensor[(13, 5, ?), bool], Tensor[(504), float32], Tensor[(504), float32], Tensor[(2, 392), float32], Tensor[(13, 5, 1), float32]) {
  %39 = @func_1626() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %40 = cast(meta[relay.Constant][6] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %41 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 392), float32] */, dtype="float32") /* ty=Tensor[(2, 392), float32] */;
  %42 = reshape(%40, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %43 = reshape(%41, newshape=[784]) /* ty=Tensor[(784), float32] */;
  %44 = @func_5182(%42, %43) /* ty=(Tensor[(504), float32], Tensor[(13, 5, 784), int16], Tensor[(13, 5, 324), bool]) */;
  %45 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 392), float32] */, dtype="int32") /* ty=Tensor[(2, 392), int32] */;
  %46 = shape_of(%var_5286, dtype="int32") /* ty=Tensor[(2), int32] */;
  %47 = cast(%var_5286, dtype="int32") /* ty=Tensor[(2, 392), int32] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %49 = bitwise_xor(%47, %48) /* ty=Tensor[(2, 392), int32] */;
  %50 = cast(%49, dtype="float32") /* ty=Tensor[(2, 392), float32] */;
  %51 = sinh(%50) /* ty=Tensor[(2, 392), float32] */;
  %52 = cast(%var_5286, dtype="bool") /* ty=Tensor[(2, 392), bool] */;
  %53 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(2, 392), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %54 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 392), float32] */, dtype="bool") /* ty=Tensor[(2, 392), bool] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %56 = greater_equal(%54, %55) /* ty=Tensor[(2, 392), bool] */;
  %57 = cast(%56, dtype="float32") /* ty=Tensor[(2, 392), float32] */;
  %58 = shape_of(%51, dtype="int32") /* ty=Tensor[(2), int32] */;
  %59 = cast(%51, dtype="float32") /* ty=Tensor[(2, 392), float32] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %61 = %39.0;
  %62 = %44.0;
  %63 = mod(%59, %60) /* ty=Tensor[(2, 392), float32] */;
  %64 = @func_1906() /* ty=Tensor[(13, 5, 1), float32] */;
  (%61, %62, meta[relay.Constant][6] /* ty=Tensor[(504), float32] */, %63, %64)
}

def @func_1526() -> Tensor[(13, 5, ?), bool] {
  %65 = @func_1323() /* ty=(Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) */;
  %65.2
}

def @func_6690() -> (Tensor[(13, 5, ?), bool],) {
  %66 = @func_3940() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */;
  %67 = %66.0;
  %68 = @func_2524() /* ty=Tensor[(13, 5, 1), float32] */;
  %69 = cast(%68, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %70 = shape_of(%67, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%67, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %73 = not_equal(%71, %72) /* ty=Tensor[(13, 5, ?), bool] */;
  (%73,)
}

def @func_3321() -> (Tensor[(13, 5, 1), float32],) {
  %74 = @func_2636() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */;
  %75 = %74.0;
  (%75,)
}

def @func_3573(%var_3562: Tensor[(13, 5, 1), bool]) -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), uint64]) {
  %76 = @func_2409() /* ty=(Tensor[(13, 5, ?), bool],) */;
  %77 = @func_2067() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %78 = %77.1;
  %79 = cast(%var_3562, dtype="uint64") /* ty=Tensor[(13, 5, 1), uint64] */;
  %80 = shape_of(%78, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%78, dtype="uint64") /* ty=Tensor[(13, 5, ?), uint64] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %83 = %76.0;
  %84 = bitwise_or(%81, %82) /* ty=Tensor[(13, 5, ?), uint64] */;
  (%83, %84)
}

def @func_2010(%var_1963: Tensor[(504), float32], %var_1975: Tensor[(54, 6), float32], %var_1985: Tensor[(784), float32]) -> (Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], Tensor[(15, 12, 10), float64], Tensor[(1800), int32], Tensor[(54, 6), float32], Tensor[(16, 7, 7), float64], Tensor[(784), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool], Tensor[(455), uint16], Tensor[(13, 5, ?), float32]) {
  %85 = cast(%var_1963, dtype="float32") /* ty=Tensor[(504), float32] */;
  %86 = reshape(%85, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %87 = @func_58(%86) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %88 = cast(meta[relay.Constant][8] /* ty=Tensor[(1800), int32] */, dtype="int32") /* ty=Tensor[(1800), int32] */;
  %89 = cast(%var_1975, dtype="float32") /* ty=Tensor[(54, 6), float32] */;
  %90 = %87.1;
  %91 = cast(%90, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
  %92 = reshape(%88, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), int32] */;
  %93 = reshape(%89, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %94 = reshape(%91, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %95 = @func_1214(%92, %93, %94) /* ty=(Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), float64], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(504), float32], Tensor[(15, 12, 10), float32]) */;
  %96 = cast(%var_1985, dtype="float32") /* ty=Tensor[(784), float32] */;
  %97 = reshape(%96, newshape=[16, 7, 7]) /* ty=Tensor[(16, 7, 7), float32] */;
  %98 = @func_1387(%97) /* ty=(Tensor[(16, 7, 7), int8], Tensor[(16, 7, 7), float64], Tensor[(13, 5, 5), int8]) */;
  %99 = cast(meta[relay.Constant][9] /* ty=Tensor[(455), uint16] */, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %100 = reshape(%99, newshape=[13, 5, 7]) /* ty=Tensor[(13, 5, 7), uint16] */;
  %101 = @func_1474(%100) /* ty=(Tensor[(13, 5, 7), int8], Tensor[(13, 5, ?), bool]) */;
  %102 = @func_1584() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %103 = %102.0;
  %104 = @func_1906() /* ty=Tensor[(13, 5, 1), float32] */;
  %105 = cast(%104, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %106 = shape_of(%103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%103, dtype="float32") /* ty=Tensor[(13, 5, ?), float32] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %109 = @func_1726() /* ty=Tensor[(13, 5, 1), float32] */;
  %110 = %95.2;
  %111 = %98.1;
  %112 = @func_1534() /* ty=Tensor[(13, 5, 1), float32] */;
  %113 = %101.1;
  %114 = divide(%107, %108) /* ty=Tensor[(13, 5, ?), float32] */;
  (%90, %var_1963, %109, %110, meta[relay.Constant][8] /* ty=Tensor[(1800), int32] */, %var_1975, %111, %var_1985, %112, %113, meta[relay.Constant][9] /* ty=Tensor[(455), uint16] */, %114)
}

def @func_1416(%var_1409: Tensor[(252, 2), float32]) -> (Tensor[(13, 5, ?), bool], Tensor[(6, 6, 9), float32], Tensor[(324, 1), float32], Tensor[(252, 2), float32]) {
  %115 = @func_1323() /* ty=(Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) */;
  %116 = cast(meta[relay.Constant][10] /* ty=Tensor[(324, 1), float32] */, dtype="float32") /* ty=Tensor[(324, 1), float32] */;
  %117 = cast(%var_1409, dtype="float32") /* ty=Tensor[(252, 2), float32] */;
  %118 = reshape(%116, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
  %119 = reshape(%117, newshape=[504, 1]) /* ty=Tensor[(504, 1), float32] */;
  %120 = @func_364(%118, %119) /* ty=(Tensor[(6, 6, 9), bool], Tensor[(12, 6, 7), float32], Tensor[(504, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(6, 6, 9), float32]) */;
  %121 = %115.2;
  %122 = %120.4;
  (%121, %122, meta[relay.Constant][10] /* ty=Tensor[(324, 1), float32] */, %var_1409)
}

def @func_2923(%var_2871: Tensor[(13, 5, 15), float32], %var_2878: Tensor[(90, 20), int32], %var_2879: Tensor[(324), float32], %var_2880: Tensor[(504), float32]) -> (Tensor[(13, 5, 15), float64], Tensor[(15, 12, 10), bool], Tensor[(90, 20), int32], Tensor[(324), float32], Tensor[(504), float32]) {
  %123 = @func_1906() /* ty=Tensor[(13, 5, 1), float32] */;
  %124 = cast(%123, dtype="float64") /* ty=Tensor[(13, 5, 1), float64] */;
  %125 = cast(%var_2871, dtype="float64") /* ty=Tensor[(13, 5, 15), float64] */;
  %126 = cast(%var_2878, dtype="int32") /* ty=Tensor[(90, 20), int32] */;
  %127 = cast(%var_2879, dtype="float32") /* ty=Tensor[(324), float32] */;
  %128 = cast(%var_2880, dtype="float32") /* ty=Tensor[(504), float32] */;
  %129 = reshape(%126, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), int32] */;
  %130 = reshape(%127, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %131 = reshape(%128, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %132 = @func_1214(%129, %130, %131) /* ty=(Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), float64], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(504), float32], Tensor[(15, 12, 10), float32]) */;
  %133 = floor_mod(%124, %125) /* ty=Tensor[(13, 5, 15), float64] */;
  %134 = %132.1;
  (%133, %134, %var_2878, %var_2879, %var_2880)
}

def @func_2109(%var_2090: Tensor[(6, 16, 1), uint8]) -> (Tensor[(6, 16, 1), uint8],) {
  %135 = cast(meta[relay.Constant][11] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %136 = cast(%var_2090, dtype="uint8") /* ty=Tensor[(6, 16, 1), uint8] */;
  %137 = subtract(%135, %136) /* ty=Tensor[(6, 16, 1), uint8] */;
  (%137,)
}

def @func_6003(%var_5955: Tensor[(504), float32], %var_5964: Tensor[(650), float32]) -> (Tensor[(16, 7, 7), int8], Tensor[(13, 5, 1), float32], Tensor[(504), float32], Tensor[(13, 5, 784), bool], Tensor[(13, 5, 10), bool], Tensor[(13, 5, 650), float32], Tensor[(13, 5, 784), int32], Tensor[(13, 5, 15), float64], Tensor[(975), bool]) {
  %138 = cast(meta[relay.Constant][12] /* ty=Tensor[(784), float32] */, dtype="float32") /* ty=Tensor[(784), float32] */;
  %139 = reshape(%138, newshape=[16, 7, 7]) /* ty=Tensor[(16, 7, 7), float32] */;
  %140 = @func_1387(%139) /* ty=(Tensor[(16, 7, 7), int8], Tensor[(16, 7, 7), float64], Tensor[(13, 5, 5), int8]) */;
  %141 = cast(%var_5955, dtype="float32") /* ty=Tensor[(504), float32] */;
  %142 = reshape(%141, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %143 = @func_2846(%142) /* ty=(Tensor[(13, 5, ?), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 8, 15), float32], Tensor[(1, 1560), float64], Tensor[(13, 5, 1), float32]) */;
  %144 = @func_4616() /* ty=Tensor[(13, 5, ?), bool] */;
  %145 = cast(%144, dtype="bool") /* ty=Tensor[(13, 5, ?), bool] */;
  %146 = cast(meta[relay.Constant][12] /* ty=Tensor[(784), float32] */, dtype="bool") /* ty=Tensor[(784), bool] */;
  %147 = cast(%var_5964, dtype="float32") /* ty=Tensor[(650), float32] */;
  %148 = reshape(%147, newshape=[13, 5, 10]) /* ty=Tensor[(13, 5, 10), float32] */;
  %149 = @func_3419() /* ty=Tensor[(13, 5, 1), float32] */;
  %150 = cast(%149, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %151 = cast(%var_5964, dtype="float32") /* ty=Tensor[(650), float32] */;
  %152 = cast(%144, dtype="int32") /* ty=Tensor[(13, 5, ?), int32] */;
  %153 = cast(meta[relay.Constant][12] /* ty=Tensor[(784), float32] */, dtype="int32") /* ty=Tensor[(784), int32] */;
  %154 = cast(meta[relay.Constant][13] /* ty=Tensor[(975), bool] */, dtype="bool") /* ty=Tensor[(975), bool] */;
  %155 = reshape(%154, newshape=[1, 975]) /* ty=Tensor[(1, 975), bool] */;
  %156 = @func_4042(%155) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 15), float64], Tensor[(1, 975), bool]) */;
  %157 = %140.0;
  %158 = %143.1;
  %159 = not_equal(%145, %146) /* ty=Tensor[(13, 5, 784), bool] */;
  %160 = @func_4142(%148) /* ty=Tensor[(13, 5, 10), bool] */;
  %161 = power(%150, %151) /* ty=Tensor[(13, 5, 650), float32] */;
  %162 = subtract(%152, %153) /* ty=Tensor[(13, 5, 784), int32] */;
  %163 = %156.1;
  (%157, %158, %var_5955, %159, %160, %161, %162, %163, meta[relay.Constant][13] /* ty=Tensor[(975), bool] */)
}

def @func_5866(%var_5826: Tensor[(13, 5, 15), float32], %var_5835: Tensor[(504), float32], %var_5836: Tensor[(324), float32], %var_5837: Tensor[(784, 1), float32]) -> (Tensor[(13, 5, 15), bool], Tensor[(504), float32], Tensor[(504), float32], Tensor[(324), float32], Tensor[(784, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), uint16]) {
  %164 = @func_3121() /* ty=Tensor[(13, 5, 1), float32] */;
  %165 = cast(%164, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %166 = cast(%var_5826, dtype="bool") /* ty=Tensor[(13, 5, 15), bool] */;
  %167 = cast(%var_5835, dtype="float32") /* ty=Tensor[(504), float32] */;
  %168 = cast(%var_5836, dtype="float32") /* ty=Tensor[(324), float32] */;
  %169 = cast(%var_5837, dtype="float32") /* ty=Tensor[(784, 1), float32] */;
  %170 = reshape(%167, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %171 = reshape(%168, newshape=[54, 6]) /* ty=Tensor[(54, 6), float32] */;
  %172 = reshape(%169, newshape=[784]) /* ty=Tensor[(784), float32] */;
  %173 = @func_2010(%170, %171, %172) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], Tensor[(15, 12, 10), float64], Tensor[(1800), int32], Tensor[(54, 6), float32], Tensor[(16, 7, 7), float64], Tensor[(784), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool], Tensor[(455), uint16], Tensor[(13, 5, ?), float32]) */;
  %174 = %173.1;
  %175 = cast(%174, dtype="float32") /* ty=Tensor[(504), float32] */;
  %176 = reshape(%175, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %177 = @func_2846(%176) /* ty=(Tensor[(13, 5, ?), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 8, 15), float32], Tensor[(1, 1560), float64], Tensor[(13, 5, 1), float32]) */;
  %178 = not_equal(%165, %166) /* ty=Tensor[(13, 5, 15), bool] */;
  %179 = %177.1;
  %180 = @func_4972() /* ty=Tensor[(13, 5, ?), uint16] */;
  (%178, %174, %var_5835, %var_5836, %var_5837, %179, %180)
}

def @func_6124() -> Tensor[(13, 5, 1), float32] {
  @func_1936() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_4337(%var_4321: Tensor[(13, 5, 14), float32]) -> (Tensor[(1560), float64], Tensor[(13, 5, ?), bool], Tensor[(13, 5, 14), uint32], Tensor[(13, 5, ?), int64]) {
  %181 = @func_2409() /* ty=(Tensor[(13, 5, ?), bool],) */;
  %182 = @func_3658() /* ty=Tensor[(13, 5, 1), float32] */;
  %183 = cast(%182, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %184 = cast(meta[relay.Constant][14] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %185 = reshape(%183, newshape=[13, 5, 1]) /* ty=Tensor[(13, 5, 1), float32] */;
  %186 = reshape(%184, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %187 = @func_3645(%185, %186) /* ty=(Tensor[(13, 5, ?), float64], Tensor[(13, 8, 15), float32], Tensor[(1560), float64], Tensor[(13, 5, ?), float32]) */;
  %188 = %187.3;
  %189 = cast(%188, dtype="uint32") /* ty=Tensor[(13, 5, ?), uint32] */;
  %190 = cast(%var_4321, dtype="uint32") /* ty=Tensor[(13, 5, 14), uint32] */;
  %191 = cast(%182, dtype="int64") /* ty=Tensor[(13, 5, 1), int64] */;
  %192 = shape_of(%188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%188, dtype="int64") /* ty=Tensor[(13, 5, ?), int64] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %195 = %181.0;
  %196 = subtract(%189, %190) /* ty=Tensor[(13, 5, 14), uint32] */;
  %197 = bitwise_xor(%193, %194) /* ty=Tensor[(13, 5, ?), int64] */;
  (meta[relay.Constant][14] /* ty=Tensor[(1560), float64] */, %195, %196, %197)
}

def @func_2636() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) {
  %198 = @func_1626() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %199 = @func_2577() /* ty=Tensor[(13, 5, 1), float32] */;
  %200 = %198.1;
  (%199, %200)
}

def @func_1387(%var_1335: Tensor[(16, 7, 7), float32]) -> (Tensor[(16, 7, 7), int8], Tensor[(16, 7, 7), float64], Tensor[(13, 5, 5), int8]) {
  %201 = cast(%var_1335, dtype="float32") /* ty=Tensor[(16, 7, 7), float32] */;
  %202 = sinh(%201) /* ty=Tensor[(16, 7, 7), float32] */;
  %203 = cast(%var_1335, dtype="int8") /* ty=Tensor[(16, 7, 7), int8] */;
  %204 = shape_of(%202, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%202, dtype="int8") /* ty=Tensor[(16, 7, 7), int8] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %207 = cast(%var_1335, dtype="float64") /* ty=Tensor[(16, 7, 7), float64] */;
  %208 = @func_1323() /* ty=(Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) */;
  %209 = %208.1;
  %210 = cast(%209, dtype="int8") /* ty=Tensor[(13, 5, ?), int8] */;
  %211 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 5, 5), uint8] */, dtype="int8") /* ty=Tensor[(13, 5, 5), int8] */;
  %212 = left_shift(%205, %206) /* ty=Tensor[(16, 7, 7), int8] */;
  %213 = log(%207) /* ty=Tensor[(16, 7, 7), float64] */;
  %214 = bitwise_and(%210, %211) /* ty=Tensor[(13, 5, 5), int8] */;
  (%212, %213, %214)
}

def @func_4616() -> Tensor[(13, 5, ?), bool] {
  @func_4437() /* ty=Tensor[(13, 5, ?), bool] */
}

def @func_2023(%var_2020: Tensor[(504), float32]) -> (Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) {
  %215 = @func_1626() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %216 = cast(%var_2020, dtype="float32") /* ty=Tensor[(504), float32] */;
  %217 = reshape(%216, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %218 = @func_58(%217) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %219 = %215.1;
  %220 = %218.0;
  (%219, %220, %var_2020)
}

def @func_707(%var_683: Tensor[(2, 6, 2), float32]) -> Tensor[(2, 6, 2), float32] {
  %221 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 6, 2), float32] */, dtype="float32") /* ty=Tensor[(2, 6, 2), float32] */;
  %222 = shape_of(%var_683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(%var_683, dtype="float32") /* ty=Tensor[(2, 6, 2), float32] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%223, %224) /* ty=Tensor[(2, 6, 2), float32] */
}

def @func_1214(%var_1170: Tensor[(15, 12, 10), int32], %var_1201: Tensor[(324), float32], %var_1202: Tensor[(504), float32]) -> (Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), float64], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(504), float32], Tensor[(15, 12, 10), float32]) {
  %225 = cast(%var_1170, dtype="bool") /* ty=Tensor[(15, 12, 10), bool] */;
  %226 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(15, 12, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(meta[relay.Constant][17] /* ty=Tensor[(15, 12, 10), int32] */, dtype="bool") /* ty=Tensor[(15, 12, 10), bool] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %229 = cast(%var_1170, dtype="float64") /* ty=Tensor[(15, 12, 10), float64] */;
  %230 = tan(%229) /* ty=Tensor[(15, 12, 10), float64] */;
  %231 = cast(%var_1170, dtype="float32") /* ty=Tensor[(15, 12, 10), float32] */;
  %232 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(15, 12, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %233 = cast(meta[relay.Constant][17] /* ty=Tensor[(15, 12, 10), int32] */, dtype="float32") /* ty=Tensor[(15, 12, 10), float32] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %235 = divide(%233, %234) /* ty=Tensor[(15, 12, 10), float32] */;
  %236 = cast(%235, dtype="bool") /* ty=Tensor[(15, 12, 10), bool] */;
  %237 = shape_of(%230, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%230, dtype="bool") /* ty=Tensor[(15, 12, 10), bool] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %240 = cast(%var_1170, dtype="float64") /* ty=Tensor[(15, 12, 10), float64] */;
  %241 = cast(%var_1201, dtype="float32") /* ty=Tensor[(324), float32] */;
  %242 = cast(%var_1202, dtype="float32") /* ty=Tensor[(504), float32] */;
  %243 = reshape(%241, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
  %244 = reshape(%242, newshape=[504, 1]) /* ty=Tensor[(504, 1), float32] */;
  %245 = @func_364(%243, %244) /* ty=(Tensor[(6, 6, 9), bool], Tensor[(12, 6, 7), float32], Tensor[(504, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(6, 6, 9), float32]) */;
  %246 = cast(%230, dtype="float32") /* ty=Tensor[(15, 12, 10), float32] */;
  %247 = greater(%227, %228) /* ty=Tensor[(15, 12, 10), bool] */;
  %248 = greater_equal(%238, %239) /* ty=Tensor[(15, 12, 10), bool] */;
  %249 = asin(%240) /* ty=Tensor[(15, 12, 10), float64] */;
  %250 = %245.4;
  %251 = atanh(%246) /* ty=Tensor[(15, 12, 10), float32] */;
  (%247, %248, %249, %250, %var_1201, %var_1202, %251)
}

def @func_2409() -> (Tensor[(13, 5, ?), bool],) {
  %252 = @func_2078() /* ty=(Tensor[(13, 5, ?), bool],) */;
  %253 = %252.0;
  (%253,)
}

def @func_5424() -> Tensor[(13, 5, 1), float32] {
  @func_3658() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_2846(%var_2823: Tensor[(504), float32]) -> (Tensor[(13, 5, ?), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 8, 15), float32], Tensor[(1, 1560), float64], Tensor[(13, 5, 1), float32]) {
  %254 = @func_2693() /* ty=(Tensor[(13, 5, ?), float32],) */;
  %255 = cast(%var_2823, dtype="float32") /* ty=Tensor[(504), float32] */;
  %256 = reshape(%255, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %257 = @func_58(%256) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %258 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 1560), float64] */, dtype="float64") /* ty=Tensor[(1, 1560), float64] */;
  %259 = reshape(%258, newshape=[13, 8, 15]) /* ty=Tensor[(13, 8, 15), float64] */;
  %260 = @func_2308(%259) /* ty=(Tensor[(13, 8, 15), float32],) */;
  %261 = %254.0;
  %262 = @func_1906() /* ty=Tensor[(13, 5, 1), float32] */;
  %263 = %257.1;
  %264 = %260.0;
  %265 = @func_2714() /* ty=Tensor[(13, 5, 1), float32] */;
  (%261, %262, %263, %var_2823, %264, meta[relay.Constant][18] /* ty=Tensor[(1, 1560), float64] */, %265)
}

def @func_3811() -> (Tensor[(13, 5, ?), bool],) {
  %266 = @func_2636() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */;
  %267 = %266.1;
  (%267,)
}

def @func_3090(%var_3083: Tensor[(1, 96), uint8]) -> (Tensor[(13, 5, 1), float32], Tensor[(6, 16, 1), uint8], Tensor[(1, 96), uint8], Tensor[(13, 5, ?), bool]) {
  %268 = @func_2449() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */;
  %269 = cast(%var_3083, dtype="uint8") /* ty=Tensor[(1, 96), uint8] */;
  %270 = reshape(%269, newshape=[6, 16, 1]) /* ty=Tensor[(6, 16, 1), uint8] */;
  %271 = @func_2109(%270) /* ty=(Tensor[(6, 16, 1), uint8],) */;
  %272 = @func_2955() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %273 = %268.1;
  %274 = %271.0;
  %275 = %272.1;
  (%273, %274, %var_3083, %275)
}

def @func_3205(%var_3199: Tensor[(10, 9, 11), float32], %var_3200: Tensor[(10, 9, 11), float32]) -> Tensor[(10, 9, 11), float32] {
  %276 = cast(%var_3200, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %277 = shape_of(%var_3199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %278 = cast(%var_3199, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%278, %279) /* ty=Tensor[(10, 9, 11), float32] */
}

def @func_1323() -> (Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) {
  %280 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  %281 = cast(%280, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %282 = rsqrt(%281) /* ty=Tensor[(13, 5, 1), float32] */;
  %283 = cast(%280, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %284 = cos(%283) /* ty=Tensor[(13, 5, 1), float32] */;
  %285 = cast(%284, dtype="uint16") /* ty=Tensor[(13, 5, 1), uint16] */;
  %286 = shape_of(%282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %287 = cast(%282, dtype="uint16") /* ty=Tensor[(13, 5, 1), uint16] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %289 = cast(%284, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %290 = shape_of(%280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(%280, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %293 = greater(%291, %292) /* ty=Tensor[(13, 5, ?), bool] */;
  %294 = cast(%282, dtype="uint32") /* ty=Tensor[(13, 5, 1), uint32] */;
  %295 = shape_of(%280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%280, dtype="uint32") /* ty=Tensor[(13, 5, 1), uint32] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %298 = right_shift(%296, %297) /* ty=Tensor[(13, 5, ?), uint32] */;
  %299 = cast(%298, dtype="uint8") /* ty=Tensor[(13, 5, ?), uint8] */;
  %300 = shape_of(%293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%293, dtype="uint8") /* ty=Tensor[(13, 5, ?), uint8] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %303 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  %304 = cast(%303, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %305 = acosh(%304) /* ty=Tensor[(13, 5, 1), float32] */;
  %306 = cast(%298, dtype="bool") /* ty=Tensor[(13, 5, ?), bool] */;
  %307 = shape_of(%305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%305, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %310 = logical_xor(%287, %288) /* ty=Tensor[(13, 5, ?), uint16] */;
  %311 = bitwise_and(%301, %302) /* ty=Tensor[(13, 5, ?), uint8] */;
  %312 = equal(%308, %309) /* ty=Tensor[(13, 5, ?), bool] */;
  (%310, %311, %312)
}

def @func_3399(%var_3387: float64, %var_3388: Tensor[(7, 11, 7), float64]) -> (Tensor[(7, 11, 7), float64], Tensor[(13, 5, ?), bool]) {
  %313 = cast(%var_3387, dtype="float64") /* ty=float64 */;
  %314 = cast(%var_3388, dtype="float64") /* ty=Tensor[(7, 11, 7), float64] */;
  %315 = @func_2636() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */;
  %316 = mod(%313, %314) /* ty=Tensor[(7, 11, 7), float64] */;
  %317 = %315.1;
  (%316, %317)
}

def @func_5135() -> Tensor[(13, 5, 1), float32] {
  @func_1906() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_5099() -> (Tensor[(13, 5, ?), bool],) {
  %318 = @func_1526() /* ty=Tensor[(13, 5, ?), bool] */;
  (%318,)
}

def @func_2693() -> (Tensor[(13, 5, ?), float32],) {
  %319 = @func_2067() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %320 = %319.1;
  %321 = cast(%320, dtype="float32") /* ty=Tensor[(13, 5, ?), float32] */;
  %322 = sinh(%321) /* ty=Tensor[(13, 5, ?), float32] */;
  (%322,)
}

def @func_5771(%var_5759: Tensor[(15, 6, 14), int32]) -> Tensor[(15, 6, 14), int32] {
  %323 = cast(6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %324 = cast(%var_5759, dtype="int32") /* ty=Tensor[(15, 6, 14), int32] */;
  bitwise_or(%323, %324) /* ty=Tensor[(15, 6, 14), int32] */
}

def @func_3976() -> (Tensor[(13, 5, 1), float32],) {
  %325 = @func_2212() /* ty=(Tensor[(13, 5, 1), float32],) */;
  %326 = %325.0;
  (%326,)
}

def @func_6085(%var_6070: Tensor[(11, 8, 9), bool]) -> (Tensor[(11, 8, 9), float32],) {
  %327 = @func_1763() /* ty=(Tensor[(8, 14, 4), bool], Tensor[(13, 5, ?), bool], Tensor[(11, 8, 9), bool], Tensor[(396, 2), int32]) */;
  %328 = %327.2;
  %329 = cast(%var_6070, dtype="float32") /* ty=Tensor[(11, 8, 9), float32] */;
  %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%328, dtype="float32") /* ty=Tensor[(11, 8, 9), float32] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %333 = divide(%331, %332) /* ty=Tensor[(11, 8, 9), float32] */;
  (%333,)
}

def @func_3038() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32]) {
  %334 = @func_2212() /* ty=(Tensor[(13, 5, 1), float32],) */;
  %335 = cast(meta[relay.Constant][19] /* ty=Tensor[(504, 1), float32] */, dtype="float32") /* ty=Tensor[(504, 1), float32] */;
  %336 = reshape(%335, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %337 = @func_2023(%336) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) */;
  %338 = %337.1;
  %339 = cast(%338, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
  %340 = cosh(%339) /* ty=Tensor[(12, 6, 7), float32] */;
  %341 = cast(meta[relay.Constant][19] /* ty=Tensor[(504, 1), float32] */, dtype="float32") /* ty=Tensor[(504, 1), float32] */;
  %342 = shape_of(%340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%340, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %345 = %334.0;
  %346 = @func_1139() /* ty=Tensor[(13, 5, 1), float32] */;
  %347 = multiply(%343, %344) /* ty=Tensor[(12, 6, 7), float32] */;
  (%345, %346, %347)
}

def @func_6870() -> (Tensor[(4, 15, ?), bool], Tensor[(13, 5, 1), float32], Tensor[(7, 14, 5), bool], Tensor[(490), bool]) {
  %348 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 15, 1), uint8] */, dtype="bool") /* ty=Tensor[(4, 15, 1), bool] */;
  %349 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(4, 15, 1), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 15, 1), uint8] */, dtype="bool") /* ty=Tensor[(4, 15, 1), bool] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %352 = @func_3957() /* ty=(Tensor[(13, 5, 1), float32],) */;
  %353 = cast(meta[relay.Constant][22] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
  %354 = cast(meta[relay.Constant][22] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
  %355 = reshape(%353, newshape=[7, 14, 5]) /* ty=Tensor[(7, 14, 5), bool] */;
  %356 = reshape(%354, newshape=[7, 14, 5]) /* ty=Tensor[(7, 14, 5), bool] */;
  %357 = @func_2370(%355, %356) /* ty=(Tensor[(7, 14, 5), bool],) */;
  %358 = greater(%350, %351) /* ty=Tensor[(4, 15, ?), bool] */;
  %359 = %352.0;
  %360 = %357.0;
  (%358, %359, %360, meta[relay.Constant][22] /* ty=Tensor[(490), bool] */)
}

def @func_7286(%var_7273: Tensor[(8, 11, 6), float64]) -> Tensor[(8, 11, 6), float64] {
  %361 = cast(%var_7273, dtype="float64") /* ty=Tensor[(8, 11, 6), float64] */;
  log2(%361) /* ty=Tensor[(8, 11, 6), float64] */
}

def @func_2524() -> Tensor[(13, 5, 1), float32] {
  %362 = @func_1936() /* ty=Tensor[(13, 5, 1), float32] */;
  %363 = cast(%362, dtype="float64") /* ty=Tensor[(13, 5, 1), float64] */;
  %364 = sin(%363) /* ty=Tensor[(13, 5, 1), float64] */;
  %365 = cast(%364, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  atanh(%365) /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_3464() -> (Tensor[(13, 5, 1), float32],) {
  %366 = @func_3419() /* ty=Tensor[(13, 5, 1), float32] */;
  (%366,)
}

def @func_2666(%var_2655: Tensor[(576), float32]) -> (Tensor[(13, 5, 1), float32], Tensor[(3, 12, 16), float32], Tensor[(576), float32], Tensor[(13, 5, ?), bool]) {
  %367 = cast(%var_2655, dtype="float32") /* ty=Tensor[(576), float32] */;
  %368 = reshape(%367, newshape=[3, 12, 16]) /* ty=Tensor[(3, 12, 16), float32] */;
  %369 = @func_2163(%368) /* ty=(Tensor[(3, 12, 16), float32],) */;
  %370 = @func_2078() /* ty=(Tensor[(13, 5, ?), bool],) */;
  %371 = @func_1936() /* ty=Tensor[(13, 5, 1), float32] */;
  %372 = %369.0;
  %373 = %370.0;
  (%371, %372, %var_2655, %373)
}

def @func_1936() -> Tensor[(13, 5, 1), float32] {
  @func_1534() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_2317() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) {
  %374 = @func_1534() /* ty=Tensor[(13, 5, 1), float32] */;
  %375 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  (%374, %375)
}

def @func_1906() -> Tensor[(13, 5, 1), float32] {
  @func_1534() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_3940() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) {
  %376 = @func_1726() /* ty=Tensor[(13, 5, 1), float32] */;
  %377 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  (%376, %377)
}

def @func_1143() -> Tensor[(13, 5, 1), float32] {
  @func_1139() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_1726() -> Tensor[(13, 5, 1), float32] {
  @func_1139() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_4702(%var_4678: uint8, %var_4679: Tensor[(14, 13, 7), uint8], %var_4692: Tensor[(14, 13, 7), uint8]) -> (Tensor[(13, 5, 1), float32], Tensor[(8, 1, 4), float32], Tensor[(14, 13, 7), bool]) {
  %378 = cast(%var_4678, dtype="float32") /* ty=float32 */;
  %379 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 1, 4), uint8] */, dtype="float32") /* ty=Tensor[(8, 1, 4), float32] */;
  %380 = cast(%var_4678, dtype="uint8") /* ty=uint8 */;
  %381 = cast(%var_4679, dtype="uint8") /* ty=Tensor[(14, 13, 7), uint8] */;
  %382 = right_shift(%380, %381) /* ty=Tensor[(14, 13, 7), uint8] */;
  %383 = cast(%var_4692, dtype="bool") /* ty=Tensor[(14, 13, 7), bool] */;
  %384 = shape_of(%382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%382, dtype="bool") /* ty=Tensor[(14, 13, 7), bool] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %387 = @func_1906() /* ty=Tensor[(13, 5, 1), float32] */;
  %388 = power(%378, %379) /* ty=Tensor[(8, 1, 4), float32] */;
  %389 = logical_or(%385, %386) /* ty=Tensor[(14, 13, 7), bool] */;
  (%387, %388, %389)
}

def @func_5698() -> (Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) {
  %390 = @func_1697() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, 1), float32]) */;
  %391 = cast(meta[relay.Constant][24] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %392 = reshape(%391, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %393 = @func_2023(%392) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) */;
  %394 = %390.0;
  %395 = %393.1;
  (%394, %395, meta[relay.Constant][24] /* ty=Tensor[(504), float32] */)
}

def @func_1534() -> Tensor[(13, 5, 1), float32] {
  @func_1139() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_1026(%var_1003: Tensor[(7, 10, 14), float64]) -> (Tensor[(7, 10, 14), float64], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) {
  %396 = cast(%var_1003, dtype="float64") /* ty=Tensor[(7, 10, 14), float64] */;
  %397 = cast(meta[relay.Constant][25] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %398 = reshape(%397, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %399 = @func_58(%398) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %400 = asinh(%396) /* ty=Tensor[(7, 10, 14), float64] */;
  %401 = %399.1;
  (%400, %401, meta[relay.Constant][25] /* ty=Tensor[(504), float32] */)
}

def @func_4065() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 7), bool], Tensor[(455, 1), float32]) {
  %402 = cast(meta[relay.Constant][26] /* ty=Tensor[(455, 1), float32] */, dtype="float32") /* ty=Tensor[(455, 1), float32] */;
  %403 = reshape(%402, newshape=[13, 5, 7]) /* ty=Tensor[(13, 5, 7), float32] */;
  %404 = @func_2791(%403) /* ty=(Tensor[(13, 5, 7), bool],) */;
  %405 = @func_2577() /* ty=Tensor[(13, 5, 1), float32] */;
  %406 = %404.0;
  (%405, %406, meta[relay.Constant][26] /* ty=Tensor[(455, 1), float32] */)
}

def @func_1584() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) {
  %407 = @func_1526() /* ty=Tensor[(13, 5, ?), bool] */;
  %408 = @func_1526() /* ty=Tensor[(13, 5, ?), bool] */;
  (%407, %408)
}

def @func_2308(%var_2279: Tensor[(13, 8, 15), float64]) -> (Tensor[(13, 8, 15), float32],) {
  %409 = cast(%var_2279, dtype="float64") /* ty=Tensor[(13, 8, 15), float64] */;
  %410 = sigmoid(%409) /* ty=Tensor[(13, 8, 15), float64] */;
  %411 = cast(%var_2279, dtype="float32") /* ty=Tensor[(13, 8, 15), float32] */;
  %412 = shape_of(%410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%410, dtype="float32") /* ty=Tensor[(13, 8, 15), float32] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %415 = divide(%413, %414) /* ty=Tensor[(13, 8, 15), float32] */;
  (%415,)
}

def @func_6724() -> Tensor[(13, 5, ?), bool] {
  @func_4616() /* ty=Tensor[(13, 5, ?), bool] */
}

def @func_3645(%var_3631: Tensor[(13, 5, 1), float32], %var_3637: Tensor[(1560), float64]) -> (Tensor[(13, 5, ?), float64], Tensor[(13, 8, 15), float32], Tensor[(1560), float64], Tensor[(13, 5, ?), float32]) {
  %416 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  %417 = cast(%var_3631, dtype="float64") /* ty=Tensor[(13, 5, 1), float64] */;
  %418 = shape_of(%416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%416, dtype="float64") /* ty=Tensor[(13, 5, 1), float64] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %421 = cast(%var_3637, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %422 = reshape(%421, newshape=[13, 8, 15]) /* ty=Tensor[(13, 8, 15), float64] */;
  %423 = @func_2308(%422) /* ty=(Tensor[(13, 8, 15), float32],) */;
  %424 = @func_2693() /* ty=(Tensor[(13, 5, ?), float32],) */;
  %425 = floor_mod(%419, %420) /* ty=Tensor[(13, 5, ?), float64] */;
  %426 = %423.0;
  %427 = %424.0;
  (%425, %426, %var_3637, %427)
}

def @func_4301() -> (Tensor[(13, 5, ?), float64],) {
  %428 = @func_3957() /* ty=(Tensor[(13, 5, 1), float32],) */;
  %429 = %428.0;
  %430 = cast(%429, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %431 = reshape(%430, newshape=[13, 5, 1]) /* ty=Tensor[(13, 5, 1), bool] */;
  %432 = @func_3573(%431) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), uint64]) */;
  %433 = %432.1;
  %434 = cast(%429, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%433, dtype="bool") /* ty=Tensor[(13, 5, ?), bool] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %438 = greater_equal(%436, %437) /* ty=Tensor[(13, 5, ?), bool] */;
  %439 = cast(%438, dtype="float64") /* ty=Tensor[(13, 5, ?), float64] */;
  %440 = sqrt(%439) /* ty=Tensor[(13, 5, ?), float64] */;
  (%440,)
}

def @func_6229(%var_6201: Tensor[(650), float32]) -> (Tensor[(13, 5, 1), float64], Tensor[(13, 5, 10), bool], Tensor[(13, 5, 1), float32]) {
  %441 = @func_4468() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float64]) */;
  %442 = cast(%var_6201, dtype="float32") /* ty=Tensor[(650), float32] */;
  %443 = reshape(%442, newshape=[13, 5, 10]) /* ty=Tensor[(13, 5, 10), float32] */;
  %444 = @func_4142(%443) /* ty=Tensor[(13, 5, 10), bool] */;
  %445 = cast(%var_6201, dtype="bool") /* ty=Tensor[(650), bool] */;
  %446 = shape_of(%444, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%444, dtype="bool") /* ty=Tensor[(13, 5, 10), bool] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %449 = %441.1;
  %450 = greater_equal(%447, %448) /* ty=Tensor[(13, 5, 10), bool] */;
  %451 = @func_6124() /* ty=Tensor[(13, 5, 1), float32] */;
  (%449, %450, %451)
}

def @func_6544() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) {
  %452 = @func_1626() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %453 = @func_5424() /* ty=Tensor[(13, 5, 1), float32] */;
  %454 = @func_1139() /* ty=Tensor[(13, 5, 1), float32] */;
  %455 = %452.1;
  (%453, %454, %455)
}

def @func_2212() -> (Tensor[(13, 5, 1), float32],) {
  %456 = @func_1697() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, 1), float32]) */;
  %457 = %456.1;
  (%457,)
}

def @func_2714() -> Tensor[(13, 5, 1), float32] {
  %458 = @func_2212() /* ty=(Tensor[(13, 5, 1), float32],) */;
  %458.0
}

def @func_2078() -> (Tensor[(13, 5, ?), bool],) {
  %459 = @func_1763() /* ty=(Tensor[(8, 14, 4), bool], Tensor[(13, 5, ?), bool], Tensor[(11, 8, 9), bool], Tensor[(396, 2), int32]) */;
  %460 = %459.1;
  (%460,)
}

def @func_1474(%var_1449: Tensor[(13, 5, 7), uint16]) -> (Tensor[(13, 5, 7), int8], Tensor[(13, 5, ?), bool]) {
  %461 = @func_1323() /* ty=(Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) */;
  %462 = %461.0;
  %463 = cast(%462, dtype="int8") /* ty=Tensor[(13, 5, ?), int8] */;
  %464 = cast(%var_1449, dtype="int8") /* ty=Tensor[(13, 5, 7), int8] */;
  %465 = @func_1323() /* ty=(Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) */;
  %466 = right_shift(%463, %464) /* ty=Tensor[(13, 5, 7), int8] */;
  %467 = %465.2;
  (%466, %467)
}

def @func_3286(%var_3241: Tensor[(450, 4), int32], %var_3243: Tensor[(504), float32], %var_3276: Tensor[(24), float32]) -> (Tensor[(13, 5, 1), float32], Tensor[(324), float32], Tensor[(975), float32], Tensor[(450, 4), int32], Tensor[(504), float32], Tensor[(9, 36), float64], Tensor[(9, 36), float32], Tensor[(2, 6, 2), float32], Tensor[(24), float32], Tensor[(13, 5, ?), bool]) {
  %468 = @func_2636() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */;
  %469 = cast(meta[relay.Constant][27] /* ty=Tensor[(975), float32] */, dtype="float32") /* ty=Tensor[(975), float32] */;
  %470 = cast(%var_3241, dtype="int32") /* ty=Tensor[(450, 4), int32] */;
  %471 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 36), float32] */, dtype="float32") /* ty=Tensor[(9, 36), float32] */;
  %472 = cast(%var_3243, dtype="float32") /* ty=Tensor[(504), float32] */;
  %473 = reshape(%469, newshape=[13, 5, 15]) /* ty=Tensor[(13, 5, 15), float32] */;
  %474 = reshape(%470, newshape=[90, 20]) /* ty=Tensor[(90, 20), int32] */;
  %475 = reshape(%471, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %476 = reshape(%472, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %477 = @func_2923(%473, %474, %475, %476) /* ty=(Tensor[(13, 5, 15), float64], Tensor[(15, 12, 10), bool], Tensor[(90, 20), int32], Tensor[(324), float32], Tensor[(504), float32]) */;
  %478 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 36), float32] */, dtype="float64") /* ty=Tensor[(9, 36), float64] */;
  %479 = atanh(%478) /* ty=Tensor[(9, 36), float64] */;
  %480 = cast(%479, dtype="float64") /* ty=Tensor[(9, 36), float64] */;
  %481 = acos(%480) /* ty=Tensor[(9, 36), float64] */;
  %482 = cast(%481, dtype="float64") /* ty=Tensor[(9, 36), float64] */;
  %483 = cast(%481, dtype="float32") /* ty=Tensor[(9, 36), float32] */;
  %484 = cast(%var_3276, dtype="float32") /* ty=Tensor[(24), float32] */;
  %485 = reshape(%484, newshape=[2, 6, 2]) /* ty=Tensor[(2, 6, 2), float32] */;
  %486 = cast(%var_3243, dtype="float32") /* ty=Tensor[(504), float32] */;
  %487 = reshape(%486, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %488 = @func_2023(%487) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) */;
  %489 = %468.0;
  %490 = %477.3;
  %491 = acosh(%482) /* ty=Tensor[(9, 36), float64] */;
  %492 = log2(%483) /* ty=Tensor[(9, 36), float32] */;
  %493 = @func_707(%485) /* ty=Tensor[(2, 6, 2), float32] */;
  %494 = %488.0;
  (%489, %490, meta[relay.Constant][27] /* ty=Tensor[(975), float32] */, %var_3241, %var_3243, %491, %492, %493, %var_3276, %494)
}

def @func_7079() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) {
  %495 = @func_3940() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */;
  %496 = @func_3321() /* ty=(Tensor[(13, 5, 1), float32],) */;
  %497 = %495.1;
  %498 = %496.0;
  (%497, %498)
}

def @func_4142(%var_4137: Tensor[(13, 5, 10), float32]) -> Tensor[(13, 5, 10), bool] {
  %499 = @func_3658() /* ty=Tensor[(13, 5, 1), float32] */;
  %500 = cast(%499, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %501 = cast(%var_4137, dtype="bool") /* ty=Tensor[(13, 5, 10), bool] */;
  logical_and(%500, %501) /* ty=Tensor[(13, 5, 10), bool] */
}

def @func_2163(%var_2159: Tensor[(3, 12, 16), float32]) -> (Tensor[(3, 12, 16), float32],) {
  %502 = cast(%var_2159, dtype="float32") /* ty=Tensor[(3, 12, 16), float32] */;
  %503 = sigmoid(%502) /* ty=Tensor[(3, 12, 16), float32] */;
  (%503,)
}

def @func_6266() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), float32], Tensor[(504), float32]) {
  %504 = cast(meta[relay.Constant][29] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %505 = reshape(%504, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %506 = @func_2846(%505) /* ty=(Tensor[(13, 5, ?), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 8, 15), float32], Tensor[(1, 1560), float64], Tensor[(13, 5, 1), float32]) */;
  %507 = @func_1534() /* ty=Tensor[(13, 5, 1), float32] */;
  %508 = %506.0;
  (%507, %508, meta[relay.Constant][29] /* ty=Tensor[(504), float32] */)
}

def @func_3658() -> Tensor[(13, 5, 1), float32] {
  @func_3121() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_3419() -> Tensor[(13, 5, 1), float32] {
  @func_1726() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_5396(%var_5373: Tensor[(1, 3, 9), float32]) -> (Tensor[(1, 3, 9), float32],) {
  %509 = cast(%var_5373, dtype="float32") /* ty=Tensor[(1, 3, 9), float32] */;
  %510 = log(%509) /* ty=Tensor[(1, 3, 9), float32] */;
  (%510,)
}

def @func_58(%var_29: Tensor[(12, 6, 7), float32]) -> (Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) {
  %511 = cast(meta[relay.Constant][30] /* ty=Tensor[(12, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(12, 6, 1), float32] */;
  %512 = cast(%var_29, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
  %513 = cast(%var_29, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
  %514 = mod(%511, %512) /* ty=Tensor[(12, 6, 7), float32] */;
  %515 = atan(%513) /* ty=Tensor[(12, 6, 7), float32] */;
  (%514, %515)
}

def @func_5496() -> (Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(13, 5, 504), float32]) {
  %516 = cast(meta[relay.Constant][31] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %517 = reshape(%516, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %518 = @func_58(%517) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %519 = @func_2524() /* ty=Tensor[(13, 5, 1), float32] */;
  %520 = cast(%519, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %521 = cast(meta[relay.Constant][31] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %522 = @func_5424() /* ty=Tensor[(13, 5, 1), float32] */;
  %523 = %518.0;
  %524 = power(%520, %521) /* ty=Tensor[(13, 5, 504), float32] */;
  (%522, %523, %524)
}

def @func_4972() -> Tensor[(13, 5, ?), uint16] {
  %525 = @func_1323() /* ty=(Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) */;
  %525.0
}

def @func_1697() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, 1), float32]) {
  %526 = @func_1584() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %527 = %526.1;
  %528 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  (%527, %528)
}

def @func_4489() -> Tensor[(13, 5, 1), float32] {
  @func_1726() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_4801() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) {
  %529 = @func_3419() /* ty=Tensor[(13, 5, 1), float32] */;
  %530 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  (%529, %530)
}

def @main(%var_7396: Tensor[(324), float32]) -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), float64], Tensor[(324), float32], Tensor[(13, 5, ?), float32]) {
  %531 = @func_4437() /* ty=Tensor[(13, 5, ?), bool] */;
  %532 = @func_3419() /* ty=Tensor[(13, 5, 1), float32] */;
  %533 = cast(%532, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %534 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %535 = cast(%531, dtype="float32") /* ty=Tensor[(13, 5, ?), float32] */;
  %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %537 = mod(%535, %536) /* ty=Tensor[(13, 5, ?), float32] */;
  %538 = cast(%537, dtype="bool") /* ty=Tensor[(13, 5, ?), bool] */;
  %539 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %540 = cast(%531, dtype="bool") /* ty=Tensor[(13, 5, ?), bool] */;
  %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %542 = cast(%var_7396, dtype="float32") /* ty=Tensor[(324), float32] */;
  %543 = reshape(%542, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %544 = @func_3898(%543) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(11, 8, 9), bool], Tensor[(42), float32], Tensor[(324), float32], Tensor[(13, 5, 504), int8], Tensor[(13, 5, ?), float64]) */;
  %545 = cast(%531, dtype="float32") /* ty=Tensor[(13, 5, ?), float32] */;
  %546 = logical_and(%540, %541) /* ty=Tensor[(13, 5, ?), bool] */;
  %547 = %544.5;
  %548 = exp(%545) /* ty=Tensor[(13, 5, ?), float32] */;
  (%546, %547, %var_7396, %548)
}

def @func_2791(%var_2775: Tensor[(13, 5, 7), float32]) -> (Tensor[(13, 5, 7), bool],) {
  %549 = @func_2714() /* ty=Tensor[(13, 5, 1), float32] */;
  %550 = cast(%549, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %551 = cast(%var_2775, dtype="bool") /* ty=Tensor[(13, 5, 7), bool] */;
  %552 = equal(%550, %551) /* ty=Tensor[(13, 5, 7), bool] */;
  (%552,)
}

def @func_3121() -> Tensor[(13, 5, 1), float32] {
  @func_2524() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_6410(%var_6376: Tensor[(13, 5, 4), float32]) -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(975), bool], Tensor[(13, 5, 4), bool], Tensor[(13, 5, 1), float32]) {
  %553 = @func_4676() /* ty=(Tensor[(13, 5, 1), float32],) */;
  %554 = %553.0;
  %555 = cast(%554, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %556 = cast(%var_6376, dtype="bool") /* ty=Tensor[(13, 5, 4), bool] */;
  %557 = cast(meta[relay.Constant][32] /* ty=Tensor[(975), bool] */, dtype="bool") /* ty=Tensor[(975), bool] */;
  %558 = reshape(%557, newshape=[1, 975]) /* ty=Tensor[(1, 975), bool] */;
  %559 = @func_4042(%558) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 15), float64], Tensor[(1, 975), bool]) */;
  %560 = %559.0;
  %561 = cast(%560, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %562 = @func_5424() /* ty=Tensor[(13, 5, 1), float32] */;
  %563 = @func_1936() /* ty=Tensor[(13, 5, 1), float32] */;
  %564 = greater(%555, %556) /* ty=Tensor[(13, 5, 4), bool] */;
  %565 = erf(%561) /* ty=Tensor[(13, 5, 1), float32] */;
  (%562, %563, meta[relay.Constant][32] /* ty=Tensor[(975), bool] */, %564, %565)
}

def @func_2370(%var_2356: Tensor[(7, 14, 5), bool], %var_2357: Tensor[(7, 14, 5), bool]) -> (Tensor[(7, 14, 5), bool],) {
  %566 = cast(%var_2357, dtype="bool") /* ty=Tensor[(7, 14, 5), bool] */;
  %567 = shape_of(%var_2356, dtype="int32") /* ty=Tensor[(3), int32] */;
  %568 = cast(%var_2356, dtype="bool") /* ty=Tensor[(7, 14, 5), bool] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %570 = logical_and(%568, %569) /* ty=Tensor[(7, 14, 5), bool] */;
  (%570,)
}

def @func_4676() -> (Tensor[(13, 5, 1), float32],) {
  %571 = @func_3443() /* ty=Tensor[(13, 5, 1), float32] */;
  (%571,)
}

def @func_572(%var_550: Tensor[(11, 8, 9), int32]) -> (Tensor[(11, 8, 9), bool],) {
  %572 = cast(%var_550, dtype="bool") /* ty=Tensor[(11, 8, 9), bool] */;
  %573 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(11, 8, 9), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 8, 9), int32] */, dtype="bool") /* ty=Tensor[(11, 8, 9), bool] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %576 = equal(%574, %575) /* ty=Tensor[(11, 8, 9), bool] */;
  (%576,)
}

def @func_2067() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) {
  %577 = @func_1763() /* ty=(Tensor[(8, 14, 4), bool], Tensor[(13, 5, ?), bool], Tensor[(11, 8, 9), bool], Tensor[(396, 2), int32]) */;
  %578 = @func_1626() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %579 = %577.1;
  %580 = %578.0;
  (%579, %580)
}

def @func_4468() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float64]) {
  %581 = @func_2636() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */;
  %582 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  %583 = cast(%582, dtype="float64") /* ty=Tensor[(13, 5, 1), float64] */;
  %584 = %581.0;
  %585 = asinh(%583) /* ty=Tensor[(13, 5, 1), float64] */;
  (%584, %585)
}

def @func_4590() -> (Tensor[(13, 5, 1), float32],) {
  %586 = @func_3419() /* ty=Tensor[(13, 5, 1), float32] */;
  (%586,)
}

def @func_3227(%var_3213: Tensor[(13, 5, 15), bool]) -> (Tensor[(13, 5, 15), float64],) {
  %587 = @func_2078() /* ty=(Tensor[(13, 5, ?), bool],) */;
  %588 = %587.0;
  %589 = cast(%588, dtype="uint32") /* ty=Tensor[(13, 5, ?), uint32] */;
  %590 = cast(%var_3213, dtype="uint32") /* ty=Tensor[(13, 5, 15), uint32] */;
  %591 = bitwise_xor(%589, %590) /* ty=Tensor[(13, 5, 15), uint32] */;
  %592 = cast(%591, dtype="float64") /* ty=Tensor[(13, 5, 15), float64] */;
  %593 = asinh(%592) /* ty=Tensor[(13, 5, 15), float64] */;
  (%593,)
}

def @func_7305() -> (Tensor[(13, 5, 1), float32],) {
  %594 = @func_6141() /* ty=Tensor[(13, 5, 1), float32] */;
  (%594,)
}

def @func_364(%var_310: Tensor[(6, 6, 9), float32], %var_315: Tensor[(504, 1), float32]) -> (Tensor[(6, 6, 9), bool], Tensor[(12, 6, 7), float32], Tensor[(504, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(6, 6, 9), float32]) {
  %595 = cast(%var_310, dtype="bool") /* ty=Tensor[(6, 6, 9), bool] */;
  %596 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(6, 6, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 6, 9), float32] */, dtype="bool") /* ty=Tensor[(6, 6, 9), bool] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %599 = cast(%var_315, dtype="float32") /* ty=Tensor[(504, 1), float32] */;
  %600 = reshape(%599, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %601 = @func_58(%600) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %602 = %601.1;
  %603 = cast(%602, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
  %604 = reshape(%603, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %605 = @func_58(%604) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %606 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 6, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 9), float32] */;
  %607 = not_equal(%597, %598) /* ty=Tensor[(6, 6, 9), bool] */;
  %608 = %605.1;
  %609 = sin(%606) /* ty=Tensor[(6, 6, 9), float32] */;
  (%607, %602, %var_315, %608, %609)
}

def @func_1626() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) {
  %610 = @func_1584() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %611 = %610.0;
  %612 = @func_1526() /* ty=Tensor[(13, 5, ?), bool] */;
  (%611, %612)
}

def @func_3957() -> (Tensor[(13, 5, 1), float32],) {
  %613 = @func_2212() /* ty=(Tensor[(13, 5, 1), float32],) */;
  %614 = %613.0;
  (%614,)
}

def @func_5571() -> (Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) {
  %615 = @func_5496() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(13, 5, 504), float32]) */;
  %616 = %615.0;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %618 = cast(meta[relay.Constant][35] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %619 = reshape(%618, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %620 = @func_2023(%619) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) */;
  %621 = sigmoid(%617) /* ty=Tensor[(13, 5, 1), float32] */;
  %622 = %620.1;
  (%621, %622, meta[relay.Constant][35] /* ty=Tensor[(504), float32] */)
}

def @func_4823() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, 7), bool]) {
  %623 = @func_4065() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 7), bool], Tensor[(455, 1), float32]) */;
  %624 = @func_4437() /* ty=Tensor[(13, 5, ?), bool] */;
  %625 = %623.1;
  (%624, %625)
}

def @func_5736() -> Tensor[(13, 5, 1), float32] {
  @func_3658() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_4924() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) {
  %626 = @func_2078() /* ty=(Tensor[(13, 5, ?), bool],) */;
  %627 = @func_4616() /* ty=Tensor[(13, 5, ?), bool] */;
  %628 = %626.0;
  (%627, %628)
}

def @func_3790(%var_3774: Tensor[(7, 15, 15), int64], %var_3781: Tensor[(504), float32]) -> (Tensor[(7, 15, 15), bool], Tensor[(13, 5, 1), float32], Tensor[(504), float32]) {
  %629 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 15, 15), int64] */, dtype="bool") /* ty=Tensor[(7, 15, 15), bool] */;
  %630 = shape_of(%var_3774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %631 = cast(%var_3774, dtype="bool") /* ty=Tensor[(7, 15, 15), bool] */;
  %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %633 = cast(%var_3781, dtype="float32") /* ty=Tensor[(504), float32] */;
  %634 = reshape(%633, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %635 = @func_2846(%634) /* ty=(Tensor[(13, 5, ?), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 8, 15), float32], Tensor[(1, 1560), float64], Tensor[(13, 5, 1), float32]) */;
  %636 = not_equal(%631, %632) /* ty=Tensor[(7, 15, 15), bool] */;
  %637 = %635.6;
  (%636, %637, %var_3781)
}

def @func_4228(%var_4222: Tensor[(13, 5, 5), float32]) -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 5), float32]) {
  %638 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  %639 = cast(%638, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %640 = cast(%var_4222, dtype="float32") /* ty=Tensor[(13, 5, 5), float32] */;
  %641 = @func_3658() /* ty=Tensor[(13, 5, 1), float32] */;
  %642 = floor_divide(%639, %640) /* ty=Tensor[(13, 5, 5), float32] */;
  (%641, %642)
}

def @func_3898(%var_3861: Tensor[(324), float32]) -> (Tensor[(13, 5, 1), float32], Tensor[(11, 8, 9), bool], Tensor[(42), float32], Tensor[(324), float32], Tensor[(13, 5, 504), int8], Tensor[(13, 5, ?), float64]) {
  %643 = cast(meta[relay.Constant][37] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %644 = cast(%var_3861, dtype="float32") /* ty=Tensor[(324), float32] */;
  %645 = cast(meta[relay.Constant][38] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %646 = reshape(%643, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %647 = reshape(%644, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %648 = reshape(%645, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %649 = @func_1840(%646, %647, %648) /* ty=(Tensor[(504), float32], Tensor[(42), float32], Tensor[(324), float32], Tensor[(13, 5, 504), float64], Tensor[(11, 8, 9), bool], Tensor[(36, 22), int32], Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(13, 5, ?), bool]) */;
  %650 = @func_3464() /* ty=(Tensor[(13, 5, 1), float32],) */;
  %651 = %650.0;
  %652 = cast(meta[relay.Constant][38] /* ty=Tensor[(504), float32] */, dtype="uint8") /* ty=Tensor[(504), uint8] */;
  %653 = cast(%651, dtype="uint8") /* ty=Tensor[(13, 5, 1), uint8] */;
  %654 = maximum(%652, %653) /* ty=Tensor[(13, 5, 504), uint8] */;
  %655 = cast(%654, dtype="int8") /* ty=Tensor[(13, 5, 504), int8] */;
  %656 = cast(%651, dtype="int8") /* ty=Tensor[(13, 5, 1), int8] */;
  %657 = cast(meta[relay.Constant][38] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %658 = reshape(%657, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %659 = @func_2023(%658) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) */;
  %660 = %659.0;
  %661 = cast(%660, dtype="float64") /* ty=Tensor[(13, 5, ?), float64] */;
  %662 = @func_2577() /* ty=Tensor[(13, 5, 1), float32] */;
  %663 = %649.4;
  %664 = bitwise_xor(%655, %656) /* ty=Tensor[(13, 5, 504), int8] */;
  %665 = log(%661) /* ty=Tensor[(13, 5, ?), float64] */;
  (%662, %663, meta[relay.Constant][37] /* ty=Tensor[(42), float32] */, %var_3861, %664, %665)
}

def @func_1763() -> (Tensor[(8, 14, 4), bool], Tensor[(13, 5, ?), bool], Tensor[(11, 8, 9), bool], Tensor[(396, 2), int32]) {
  %666 = cast(meta[relay.Constant][40] /* ty=Tensor[(8, 14, 4), float32] */, dtype="bool") /* ty=Tensor[(8, 14, 4), bool] */;
  %667 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(8, 14, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 14, 4), float32] */, dtype="bool") /* ty=Tensor[(8, 14, 4), bool] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %670 = @func_1697() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, 1), float32]) */;
  %671 = cast(meta[relay.Constant][41] /* ty=Tensor[(396, 2), int32] */, dtype="int32") /* ty=Tensor[(396, 2), int32] */;
  %672 = reshape(%671, newshape=[11, 8, 9]) /* ty=Tensor[(11, 8, 9), int32] */;
  %673 = @func_572(%672) /* ty=(Tensor[(11, 8, 9), bool],) */;
  %674 = not_equal(%668, %669) /* ty=Tensor[(8, 14, 4), bool] */;
  %675 = %670.0;
  %676 = %673.0;
  (%674, %675, %676, meta[relay.Constant][41] /* ty=Tensor[(396, 2), int32] */)
}

def @func_4839() -> (Tensor[(13, 5, 1), float32],) {
  %677 = @func_1906() /* ty=Tensor[(13, 5, 1), float32] */;
  %678 = cast(%677, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %679 = log10(%678) /* ty=Tensor[(13, 5, 1), float32] */;
  (%679,)
}

def @func_653(%var_631: Tensor[(3, 1, 14), float32], %var_650: Tensor[(324), float32], %var_651: Tensor[(504), float32]) -> (Tensor[(3, 1, 14), float64], Tensor[(6, 6, 9), bool], Tensor[(324), float32], Tensor[(504), float32]) {
  %680 = cast(%var_631, dtype="float32") /* ty=Tensor[(3, 1, 14), float32] */;
  %681 = exp(%680) /* ty=Tensor[(3, 1, 14), float32] */;
  %682 = cast(%681, dtype="float64") /* ty=Tensor[(3, 1, 14), float64] */;
  %683 = cast(%var_650, dtype="float32") /* ty=Tensor[(324), float32] */;
  %684 = cast(%var_651, dtype="float32") /* ty=Tensor[(504), float32] */;
  %685 = reshape(%683, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
  %686 = reshape(%684, newshape=[504, 1]) /* ty=Tensor[(504, 1), float32] */;
  %687 = @func_364(%685, %686) /* ty=(Tensor[(6, 6, 9), bool], Tensor[(12, 6, 7), float32], Tensor[(504, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(6, 6, 9), float32]) */;
  %688 = asinh(%682) /* ty=Tensor[(3, 1, 14), float64] */;
  %689 = %687.0;
  (%688, %689, %var_650, %var_651)
}

def @func_6995(%var_6887: Tensor[(16, 9, 13), float64], %var_6926: Tensor[(1274), uint8], %var_6971: Tensor[(1800), int32]) -> (Tensor[(16, 9, 13), float64], Tensor[(16, 9, 13), float32], Tensor[(13, 5, 15), float64], Tensor[(975), bool], Tensor[(3, 9, 12), uint8], Tensor[(1274), uint32], Tensor[(8, 1, 4), bool], Tensor[(15, 12, 10), bool], Tensor[(1800), int32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool], Tensor[(77, 7), float64]) {
  %690 = cast(%var_6887, dtype="float64") /* ty=Tensor[(16, 9, 13), float64] */;
  %691 = cast(%var_6887, dtype="float32") /* ty=Tensor[(16, 9, 13), float32] */;
  %692 = cast(meta[relay.Constant][42] /* ty=Tensor[(975), bool] */, dtype="bool") /* ty=Tensor[(975), bool] */;
  %693 = reshape(%692, newshape=[1, 975]) /* ty=Tensor[(1, 975), bool] */;
  %694 = @func_4042(%693) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 15), float64], Tensor[(1, 975), bool]) */;
  %695 = cast(%var_6926, dtype="uint32") /* ty=Tensor[(1274), uint32] */;
  %696 = cast(meta[relay.Constant][43] /* ty=uint8 */, dtype="uint32") /* ty=uint32 */;
  %697 = cast(meta[relay.Constant][43] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %698 = cast(%var_6926, dtype="uint8") /* ty=Tensor[(1274), uint8] */;
  %699 = cast(%var_6926, dtype="uint8") /* ty=Tensor[(1274), uint8] */;
  %700 = reshape(%697, newshape=[]) /* ty=uint8 */;
  %701 = reshape(%698, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), uint8] */;
  %702 = reshape(%699, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), uint8] */;
  %703 = @func_4702(%700, %701, %702) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(8, 1, 4), float32], Tensor[(14, 13, 7), bool]) */;
  %704 = %703.1;
  %705 = cast(%704, dtype="bool") /* ty=Tensor[(8, 1, 4), bool] */;
  %706 = cast(meta[relay.Constant][43] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %707 = cast(%var_6971, dtype="int32") /* ty=Tensor[(1800), int32] */;
  %708 = @func_6103() /* ty=Tensor[(3, 9, 12), uint8] */;
  %709 = cast(%708, dtype="float32") /* ty=Tensor[(3, 9, 12), float32] */;
  %710 = cast(meta[relay.Constant][44] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %711 = reshape(%707, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), int32] */;
  %712 = reshape(%709, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %713 = reshape(%710, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %714 = @func_1214(%711, %712, %713) /* ty=(Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), float64], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(504), float32], Tensor[(15, 12, 10), float32]) */;
  %715 = @func_4468() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float64]) */;
  %716 = cast(meta[relay.Constant][43] /* ty=uint8 */, dtype="float64") /* ty=float64 */;
  %717 = cast(meta[relay.Constant][45] /* ty=Tensor[(77, 7), float64] */, dtype="float64") /* ty=Tensor[(77, 7), float64] */;
  %718 = reshape(%716, newshape=[]) /* ty=float64 */;
  %719 = reshape(%717, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), float64] */;
  %720 = @func_3399(%718, %719) /* ty=(Tensor[(7, 11, 7), float64], Tensor[(13, 5, ?), bool]) */;
  %721 = cos(%690) /* ty=Tensor[(16, 9, 13), float64] */;
  %722 = sin(%691) /* ty=Tensor[(16, 9, 13), float32] */;
  %723 = %694.1;
  %724 = bitwise_or(%695, %696) /* ty=Tensor[(1274), uint32] */;
  %725 = greater(%705, %706) /* ty=Tensor[(8, 1, 4), bool] */;
  %726 = %714.0;
  %727 = %715.0;
  %728 = %720.1;
  (%721, %722, %723, meta[relay.Constant][42] /* ty=Tensor[(975), bool] */, %708, %724, %725, %726, %var_6971, meta[relay.Constant][44] /* ty=Tensor[(504), float32] */, %727, %728, meta[relay.Constant][45] /* ty=Tensor[(77, 7), float64] */)
}

def @func_4042(%var_4040: Tensor[(1, 975), bool]) -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 15), float64], Tensor[(1, 975), bool]) {
  %729 = cast(%var_4040, dtype="bool") /* ty=Tensor[(1, 975), bool] */;
  %730 = reshape(%729, newshape=[13, 5, 15]) /* ty=Tensor[(13, 5, 15), bool] */;
  %731 = @func_3227(%730) /* ty=(Tensor[(13, 5, 15), float64],) */;
  %732 = @func_3121() /* ty=Tensor[(13, 5, 1), float32] */;
  %733 = %731.0;
  (%732, %733, %var_4040)
}

def @func_6803(%var_6788: Tensor[(576), float32], %var_6794: Tensor[(1575), int64]) -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(3, 12, 16), float32], Tensor[(576), float32], Tensor[(7, 15, 15), bool], Tensor[(1575), int64], Tensor[(504), float32], Tensor[(13, 5, 1), float32]) {
  %734 = @func_6544() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */;
  %735 = @func_2449() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */;
  %736 = cast(%var_6788, dtype="float32") /* ty=Tensor[(576), float32] */;
  %737 = reshape(%736, newshape=[576]) /* ty=Tensor[(576), float32] */;
  %738 = @func_2666(%737) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(3, 12, 16), float32], Tensor[(576), float32], Tensor[(13, 5, ?), bool]) */;
  %739 = cast(%var_6794, dtype="int64") /* ty=Tensor[(1575), int64] */;
  %740 = cast(meta[relay.Constant][46] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %741 = reshape(%739, newshape=[7, 15, 15]) /* ty=Tensor[(7, 15, 15), int64] */;
  %742 = reshape(%740, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %743 = @func_3790(%741, %742) /* ty=(Tensor[(7, 15, 15), bool], Tensor[(13, 5, 1), float32], Tensor[(504), float32]) */;
  %744 = %734.1;
  %745 = %735.0;
  %746 = %738.1;
  %747 = %743.0;
  %748 = @func_5736() /* ty=Tensor[(13, 5, 1), float32] */;
  (%744, %745, %746, %var_6788, %747, %var_6794, meta[relay.Constant][46] /* ty=Tensor[(504), float32] */, %748)
}

def @func_2955() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) {
  %749 = @func_2409() /* ty=(Tensor[(13, 5, ?), bool],) */;
  %750 = @func_2078() /* ty=(Tensor[(13, 5, ?), bool],) */;
  %751 = %749.0;
  %752 = %750.0;
  (%751, %752)
}

def @func_1840(%var_1792: Tensor[(42), float32], %var_1793: Tensor[(324), float32], %var_1794: Tensor[(504), float32]) -> (Tensor[(504), float32], Tensor[(42), float32], Tensor[(324), float32], Tensor[(13, 5, 504), float64], Tensor[(11, 8, 9), bool], Tensor[(36, 22), int32], Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(13, 5, ?), bool]) {
  %753 = cast(%var_1792, dtype="float32") /* ty=Tensor[(42), float32] */;
  %754 = cast(%var_1793, dtype="float32") /* ty=Tensor[(324), float32] */;
  %755 = cast(%var_1794, dtype="float32") /* ty=Tensor[(504), float32] */;
  %756 = reshape(%753, newshape=[3, 1, 14]) /* ty=Tensor[(3, 1, 14), float32] */;
  %757 = reshape(%754, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %758 = reshape(%755, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %759 = @func_653(%756, %757, %758) /* ty=(Tensor[(3, 1, 14), float64], Tensor[(6, 6, 9), bool], Tensor[(324), float32], Tensor[(504), float32]) */;
  %760 = @func_1323() /* ty=(Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) */;
  %761 = %760.2;
  %762 = cast(%761, dtype="float64") /* ty=Tensor[(13, 5, ?), float64] */;
  %763 = cast(%var_1794, dtype="float64") /* ty=Tensor[(504), float64] */;
  %764 = cast(meta[relay.Constant][47] /* ty=Tensor[(36, 22), int32] */, dtype="int32") /* ty=Tensor[(36, 22), int32] */;
  %765 = reshape(%764, newshape=[11, 8, 9]) /* ty=Tensor[(11, 8, 9), int32] */;
  %766 = @func_572(%765) /* ty=(Tensor[(11, 8, 9), bool],) */;
  %767 = %759.3;
  %768 = cast(%767, dtype="float32") /* ty=Tensor[(504), float32] */;
  %769 = reshape(%768, newshape=[252, 2]) /* ty=Tensor[(252, 2), float32] */;
  %770 = @func_1416(%769) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(6, 6, 9), float32], Tensor[(324, 1), float32], Tensor[(252, 2), float32]) */;
  %771 = cast(%767, dtype="float32") /* ty=Tensor[(504), float32] */;
  %772 = reshape(%771, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %773 = @func_58(%772) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %774 = @func_1584() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %775 = divide(%762, %763) /* ty=Tensor[(13, 5, 504), float64] */;
  %776 = %766.0;
  %777 = %770.0;
  %778 = %773.1;
  %779 = %774.1;
  (%767, %var_1792, %var_1793, %775, %776, meta[relay.Constant][47] /* ty=Tensor[(36, 22), int32] */, %777, %778, %779)
}

def @func_2600(%var_2595: Tensor[(792), int32]) -> (Tensor[(13, 5, 1), float32], Tensor[(11, 8, 9), bool], Tensor[(792), int32]) {
  %780 = cast(%var_2595, dtype="int32") /* ty=Tensor[(792), int32] */;
  %781 = reshape(%780, newshape=[11, 8, 9]) /* ty=Tensor[(11, 8, 9), int32] */;
  %782 = @func_572(%781) /* ty=(Tensor[(11, 8, 9), bool],) */;
  %783 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  %784 = %782.0;
  (%783, %784, %var_2595)
}

def @func_4437() -> Tensor[(13, 5, ?), bool] {
  %785 = @func_1584() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %785.1
}

def @func_7253(%var_7235: Tensor[(12, 12, 9), int16]) -> (Tensor[(12, 12, 9), int16], Tensor[(13, 5, 1), float32]) {
  %786 = cast(%var_7235, dtype="int16") /* ty=Tensor[(12, 12, 9), int16] */;
  %787 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(12, 12, 9), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %788 = cast(meta[relay.Constant][48] /* ty=Tensor[(12, 12, 9), int16] */, dtype="int16") /* ty=Tensor[(12, 12, 9), int16] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %790 = @func_2449() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */;
  %791 = maximum(%788, %789) /* ty=Tensor[(12, 12, 9), int16] */;
  %792 = %790.0;
  (%791, %792)
}

def @func_6103() -> Tensor[(3, 9, 12), uint8] {
  %793 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 9, 12), uint8] */, dtype="uint8") /* ty=Tensor[(3, 9, 12), uint8] */;
  %794 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(3, 9, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(meta[relay.Constant][49] /* ty=Tensor[(3, 9, 12), uint8] */, dtype="uint8") /* ty=Tensor[(3, 9, 12), uint8] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_and(%795, %796) /* ty=Tensor[(3, 9, 12), uint8] */
}

def @func_2577() -> Tensor[(13, 5, 1), float32] {
  @func_1139() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_7199() -> (Tensor[(13, 5, 1), float32],) {
  %797 = @func_4468() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float64]) */;
  %798 = %797.0;
  (%798,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2212() -> (Tensor[(13, 5, 1), float32],) {
  %0 = @func_1697() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, 1), float32]) */;
  %1 = %0.1;
  (%1,)
}

def @func_1907() -> Tensor[(13, 5, 1), float32] {
  %2 = fn () -> Tensor[(13, 5, 1), float32] {
    @func_1534() /* ty=Tensor[(13, 5, 1), float32] */
  };
  %2() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_6544() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) {
  %3 = @func_1626() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %4 = @func_5424() /* ty=Tensor[(13, 5, 1), float32] */;
  %5 = @func_1139() /* ty=Tensor[(13, 5, 1), float32] */;
  %6 = %3.1;
  (%4, %5, %6)
}

def @func_710(%var_708: Tensor[(2, 6, 2), float32]) -> Tensor[(2, 6, 2), float32] {
  @func_707(%var_708) /* ty=Tensor[(2, 6, 2), float32] */
}

def @func_4142(%var_4137: Tensor[(13, 5, 10), float32]) -> Tensor[(13, 5, 10), bool] {
  %7 = @func_3658() /* ty=Tensor[(13, 5, 1), float32] */;
  %8 = cast(%7, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %9 = cast(%var_4137, dtype="bool") /* ty=Tensor[(13, 5, 10), bool] */;
  logical_and(%8, %9) /* ty=Tensor[(13, 5, 10), bool] */
}

def @func_3230(%var_3228: Tensor[(13, 5, 15), bool]) -> (Tensor[(13, 5, 15), float64],) {
  @func_3227(%var_3228) /* ty=(Tensor[(13, 5, 15), float64],) */
}

def @func_4839() -> (Tensor[(13, 5, 1), float32],) {
  %10 = @func_1906() /* ty=Tensor[(13, 5, 1), float32] */;
  %11 = cast(%10, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %12 = log10(%11) /* ty=Tensor[(13, 5, 1), float32] */;
  (%12,)
}

def @func_3941() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) {
  %15 = fn () -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) {
    %13 = @func_1726() /* ty=Tensor[(13, 5, 1), float32] */;
    %14 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
    (%13, %14)
  };
  %15() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */
}

def @func_1477(%var_1475: Tensor[(13, 5, 7), uint16]) -> (Tensor[(13, 5, 7), int8], Tensor[(13, 5, ?), bool]) {
  @func_1474(%var_1475) /* ty=(Tensor[(13, 5, 7), int8], Tensor[(13, 5, ?), bool]) */
}

def @func_2577() -> Tensor[(13, 5, 1), float32] {
  @func_1139() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_5306(%var_5286: Tensor[(2, 392), float32]) -> (Tensor[(13, 5, ?), bool], Tensor[(504), float32], Tensor[(504), float32], Tensor[(2, 392), float32], Tensor[(13, 5, 1), float32]) {
  %16 = @func_1626() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 392), float32] */, dtype="float32") /* ty=Tensor[(2, 392), float32] */;
  %19 = reshape(%17, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %20 = reshape(%18, newshape=[784]) /* ty=Tensor[(784), float32] */;
  %21 = @func_5182(%19, %20) /* ty=(Tensor[(504), float32], Tensor[(13, 5, 784), int16], Tensor[(13, 5, 324), bool]) */;
  %22 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 392), float32] */, dtype="int32") /* ty=Tensor[(2, 392), int32] */;
  %23 = shape_of(%var_5286, dtype="int32") /* ty=Tensor[(2), int32] */;
  %24 = cast(%var_5286, dtype="int32") /* ty=Tensor[(2, 392), int32] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %26 = bitwise_xor(%24, %25) /* ty=Tensor[(2, 392), int32] */;
  %27 = cast(%26, dtype="float32") /* ty=Tensor[(2, 392), float32] */;
  %28 = sinh(%27) /* ty=Tensor[(2, 392), float32] */;
  %29 = cast(%var_5286, dtype="bool") /* ty=Tensor[(2, 392), bool] */;
  %30 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(2, 392), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 392), float32] */, dtype="bool") /* ty=Tensor[(2, 392), bool] */;
  %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %33 = greater_equal(%31, %32) /* ty=Tensor[(2, 392), bool] */;
  %34 = cast(%33, dtype="float32") /* ty=Tensor[(2, 392), float32] */;
  %35 = shape_of(%28, dtype="int32") /* ty=Tensor[(2), int32] */;
  %36 = cast(%28, dtype="float32") /* ty=Tensor[(2, 392), float32] */;
  %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %38 = %16.0;
  %39 = %21.0;
  %40 = mod(%36, %37) /* ty=Tensor[(2, 392), float32] */;
  %41 = @func_1906() /* ty=Tensor[(13, 5, 1), float32] */;
  (%38, %39, meta[relay.Constant][0] /* ty=Tensor[(504), float32] */, %40, %41)
}

def @func_7306() -> (Tensor[(13, 5, 1), float32],) {
  %43 = fn () -> (Tensor[(13, 5, 1), float32],) {
    %42 = @func_6141() /* ty=Tensor[(13, 5, 1), float32] */;
    (%42,)
  };
  %43() /* ty=(Tensor[(13, 5, 1), float32],) */
}

def @func_6006(%var_6004: Tensor[(504), float32], %var_6005: Tensor[(650), float32]) -> (Tensor[(16, 7, 7), int8], Tensor[(13, 5, 1), float32], Tensor[(504), float32], Tensor[(13, 5, 784), bool], Tensor[(13, 5, 10), bool], Tensor[(13, 5, 650), float32], Tensor[(13, 5, 784), int32], Tensor[(13, 5, 15), float64], Tensor[(975), bool]) {
  %70 = fn (%var_5955: Tensor[(504), float32], %var_5964: Tensor[(650), float32]) -> (Tensor[(16, 7, 7), int8], Tensor[(13, 5, 1), float32], Tensor[(504), float32], Tensor[(13, 5, 784), bool], Tensor[(13, 5, 10), bool], Tensor[(13, 5, 650), float32], Tensor[(13, 5, 784), int32], Tensor[(13, 5, 15), float64], Tensor[(975), bool]) {
    %44 = cast(meta[relay.Constant][2] /* ty=Tensor[(784), float32] */, dtype="float32") /* ty=Tensor[(784), float32] */;
    %45 = reshape(%44, newshape=[16, 7, 7]) /* ty=Tensor[(16, 7, 7), float32] */;
    %46 = @func_1387(%45) /* ty=(Tensor[(16, 7, 7), int8], Tensor[(16, 7, 7), float64], Tensor[(13, 5, 5), int8]) */;
    %47 = cast(%var_5955, dtype="float32") /* ty=Tensor[(504), float32] */;
    %48 = reshape(%47, newshape=[504]) /* ty=Tensor[(504), float32] */;
    %49 = @func_2846(%48) /* ty=(Tensor[(13, 5, ?), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 8, 15), float32], Tensor[(1, 1560), float64], Tensor[(13, 5, 1), float32]) */;
    %50 = @func_4616() /* ty=Tensor[(13, 5, ?), bool] */;
    %51 = cast(%50, dtype="bool") /* ty=Tensor[(13, 5, ?), bool] */;
    %52 = cast(meta[relay.Constant][2] /* ty=Tensor[(784), float32] */, dtype="bool") /* ty=Tensor[(784), bool] */;
    %53 = cast(%var_5964, dtype="float32") /* ty=Tensor[(650), float32] */;
    %54 = reshape(%53, newshape=[13, 5, 10]) /* ty=Tensor[(13, 5, 10), float32] */;
    %55 = @func_3419() /* ty=Tensor[(13, 5, 1), float32] */;
    %56 = cast(%55, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
    %57 = cast(%var_5964, dtype="float32") /* ty=Tensor[(650), float32] */;
    %58 = cast(%50, dtype="int32") /* ty=Tensor[(13, 5, ?), int32] */;
    %59 = cast(meta[relay.Constant][2] /* ty=Tensor[(784), float32] */, dtype="int32") /* ty=Tensor[(784), int32] */;
    %60 = cast(meta[relay.Constant][3] /* ty=Tensor[(975), bool] */, dtype="bool") /* ty=Tensor[(975), bool] */;
    %61 = reshape(%60, newshape=[1, 975]) /* ty=Tensor[(1, 975), bool] */;
    %62 = @func_4042(%61) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 15), float64], Tensor[(1, 975), bool]) */;
    %63 = %46.0;
    %64 = %49.1;
    %65 = not_equal(%51, %52) /* ty=Tensor[(13, 5, 784), bool] */;
    %66 = @func_4142(%54) /* ty=Tensor[(13, 5, 10), bool] */;
    %67 = power(%56, %57) /* ty=Tensor[(13, 5, 650), float32] */;
    %68 = subtract(%58, %59) /* ty=Tensor[(13, 5, 784), int32] */;
    %69 = %62.1;
    (%63, %64, %var_5955, %65, %66, %67, %68, %69, meta[relay.Constant][3] /* ty=Tensor[(975), bool] */)
  };
  %70(%var_6004, %var_6005) /* ty=(Tensor[(16, 7, 7), int8], Tensor[(13, 5, 1), float32], Tensor[(504), float32], Tensor[(13, 5, 784), bool], Tensor[(13, 5, 10), bool], Tensor[(13, 5, 650), float32], Tensor[(13, 5, 784), int32], Tensor[(13, 5, 15), float64], Tensor[(975), bool]) */
}

def @func_2638() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) {
  @func_2636() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */
}

def @func_1699() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, 1), float32]) {
  @func_1697() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, 1), float32]) */
}

def @main(%var_7396: Tensor[(324), float32]) -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), float64], Tensor[(324), float32], Tensor[(13, 5, ?), float32]) {
  %71 = @func_4437() /* ty=Tensor[(13, 5, ?), bool] */;
  %72 = @func_3419() /* ty=Tensor[(13, 5, 1), float32] */;
  %73 = cast(%72, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %74 = shape_of(%71, dtype="int32") /* ty=Tensor[(3), int32] */;
  %75 = cast(%71, dtype="float32") /* ty=Tensor[(13, 5, ?), float32] */;
  %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %77 = mod(%75, %76) /* ty=Tensor[(13, 5, ?), float32] */;
  %78 = cast(%77, dtype="bool") /* ty=Tensor[(13, 5, ?), bool] */;
  %79 = shape_of(%71, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%71, dtype="bool") /* ty=Tensor[(13, 5, ?), bool] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %82 = cast(%var_7396, dtype="float32") /* ty=Tensor[(324), float32] */;
  %83 = reshape(%82, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %84 = @func_3901(%83) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(11, 8, 9), bool], Tensor[(42), float32], Tensor[(324), float32], Tensor[(13, 5, 504), int8], Tensor[(13, 5, ?), float64]) */;
  %85 = cast(%71, dtype="float32") /* ty=Tensor[(13, 5, ?), float32] */;
  %86 = logical_and(%80, %81) /* ty=Tensor[(13, 5, ?), bool] */;
  %87 = %84.5;
  %88 = exp(%85) /* ty=Tensor[(13, 5, ?), float32] */;
  (%86, %87, %var_7396, %88)
}

def @func_1628() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) {
  @func_1626() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */
}

def @func_5396(%var_5373: Tensor[(1, 3, 9), float32]) -> (Tensor[(1, 3, 9), float32],) {
  %89 = cast(%var_5373, dtype="float32") /* ty=Tensor[(1, 3, 9), float32] */;
  %90 = log(%89) /* ty=Tensor[(1, 3, 9), float32] */;
  (%90,)
}

def @func_1763() -> (Tensor[(8, 14, 4), bool], Tensor[(13, 5, ?), bool], Tensor[(11, 8, 9), bool], Tensor[(396, 2), int32]) {
  %91 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 14, 4), float32] */, dtype="bool") /* ty=Tensor[(8, 14, 4), bool] */;
  %92 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(8, 14, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 14, 4), float32] */, dtype="bool") /* ty=Tensor[(8, 14, 4), bool] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %95 = @func_1697() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, 1), float32]) */;
  %96 = cast(meta[relay.Constant][6] /* ty=Tensor[(396, 2), int32] */, dtype="int32") /* ty=Tensor[(396, 2), int32] */;
  %97 = reshape(%96, newshape=[11, 8, 9]) /* ty=Tensor[(11, 8, 9), int32] */;
  %98 = @func_572(%97) /* ty=(Tensor[(11, 8, 9), bool],) */;
  %99 = not_equal(%93, %94) /* ty=Tensor[(8, 14, 4), bool] */;
  %100 = %95.0;
  %101 = %98.0;
  (%99, %100, %101, meta[relay.Constant][6] /* ty=Tensor[(396, 2), int32] */)
}

def @func_2579() -> Tensor[(13, 5, 1), float32] {
  @func_2577() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_4042(%var_4040: Tensor[(1, 975), bool]) -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 15), float64], Tensor[(1, 975), bool]) {
  %102 = cast(%var_4040, dtype="bool") /* ty=Tensor[(1, 975), bool] */;
  %103 = reshape(%102, newshape=[13, 5, 15]) /* ty=Tensor[(13, 5, 15), bool] */;
  %104 = @func_3227(%103) /* ty=(Tensor[(13, 5, 15), float64],) */;
  %105 = @func_3121() /* ty=Tensor[(13, 5, 1), float32] */;
  %106 = %104.0;
  (%105, %106, %var_4040)
}

def @func_1626() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) {
  %107 = @func_1584() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %108 = %107.0;
  %109 = @func_1526() /* ty=Tensor[(13, 5, ?), bool] */;
  (%108, %109)
}

def @func_3093(%var_3091: Tensor[(1, 96), uint8]) -> (Tensor[(13, 5, 1), float32], Tensor[(6, 16, 1), uint8], Tensor[(1, 96), uint8], Tensor[(13, 5, ?), bool]) {
  @func_3090(%var_3091) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(6, 16, 1), uint8], Tensor[(1, 96), uint8], Tensor[(13, 5, ?), bool]) */
}

def @func_1726() -> Tensor[(13, 5, 1), float32] {
  @func_1139() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_3039() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32]) {
  %124 = fn () -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32]) {
    %110 = @func_2212() /* ty=(Tensor[(13, 5, 1), float32],) */;
    %111 = cast(meta[relay.Constant][7] /* ty=Tensor[(504, 1), float32] */, dtype="float32") /* ty=Tensor[(504, 1), float32] */;
    %112 = reshape(%111, newshape=[504]) /* ty=Tensor[(504), float32] */;
    %113 = @func_2023(%112) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) */;
    %114 = %113.1;
    %115 = cast(%114, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
    %116 = cosh(%115) /* ty=Tensor[(12, 6, 7), float32] */;
    %117 = cast(meta[relay.Constant][7] /* ty=Tensor[(504, 1), float32] */, dtype="float32") /* ty=Tensor[(504, 1), float32] */;
    %118 = shape_of(%116, dtype="int32") /* ty=Tensor[(3), int32] */;
    %119 = cast(%116, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
    %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %121 = %110.0;
    %122 = @func_1139() /* ty=Tensor[(13, 5, 1), float32] */;
    %123 = multiply(%119, %120) /* ty=Tensor[(12, 6, 7), float32] */;
    (%121, %122, %123)
  };
  %124() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32]) */
}

def @func_1387(%var_1335: Tensor[(16, 7, 7), float32]) -> (Tensor[(16, 7, 7), int8], Tensor[(16, 7, 7), float64], Tensor[(13, 5, 5), int8]) {
  %125 = cast(%var_1335, dtype="float32") /* ty=Tensor[(16, 7, 7), float32] */;
  %126 = sinh(%125) /* ty=Tensor[(16, 7, 7), float32] */;
  %127 = cast(%var_1335, dtype="int8") /* ty=Tensor[(16, 7, 7), int8] */;
  %128 = shape_of(%126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(%126, dtype="int8") /* ty=Tensor[(16, 7, 7), int8] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %131 = cast(%var_1335, dtype="float64") /* ty=Tensor[(16, 7, 7), float64] */;
  %132 = @func_1323() /* ty=(Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) */;
  %133 = %132.1;
  %134 = cast(%133, dtype="int8") /* ty=Tensor[(13, 5, ?), int8] */;
  %135 = cast(meta[relay.Constant][8] /* ty=Tensor[(13, 5, 5), uint8] */, dtype="int8") /* ty=Tensor[(13, 5, 5), int8] */;
  %136 = left_shift(%129, %130) /* ty=Tensor[(16, 7, 7), int8] */;
  %137 = log(%131) /* ty=Tensor[(16, 7, 7), float64] */;
  %138 = bitwise_and(%134, %135) /* ty=Tensor[(13, 5, 5), int8] */;
  (%136, %137, %138)
}

def @func_2015(%var_2012: Tensor[(504), float32], %var_2013: Tensor[(54, 6), float32], %var_2014: Tensor[(784), float32]) -> (Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], Tensor[(15, 12, 10), float64], Tensor[(1800), int32], Tensor[(54, 6), float32], Tensor[(16, 7, 7), float64], Tensor[(784), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool], Tensor[(455), uint16], Tensor[(13, 5, ?), float32]) {
  @func_2010(%var_2012, %var_2013, %var_2014) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], Tensor[(15, 12, 10), float64], Tensor[(1800), int32], Tensor[(54, 6), float32], Tensor[(16, 7, 7), float64], Tensor[(784), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool], Tensor[(455), uint16], Tensor[(13, 5, ?), float32]) */
}

def @func_4301() -> (Tensor[(13, 5, ?), float64],) {
  %139 = @func_3957() /* ty=(Tensor[(13, 5, 1), float32],) */;
  %140 = %139.0;
  %141 = cast(%140, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %142 = reshape(%141, newshape=[13, 5, 1]) /* ty=Tensor[(13, 5, 1), bool] */;
  %143 = @func_3573(%142) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), uint64]) */;
  %144 = %143.1;
  %145 = cast(%140, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %146 = shape_of(%144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %147 = cast(%144, dtype="bool") /* ty=Tensor[(13, 5, ?), bool] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %149 = greater_equal(%147, %148) /* ty=Tensor[(13, 5, ?), bool] */;
  %150 = cast(%149, dtype="float64") /* ty=Tensor[(13, 5, ?), float64] */;
  %151 = sqrt(%150) /* ty=Tensor[(13, 5, ?), float64] */;
  (%151,)
}

def @func_4439() -> Tensor[(13, 5, ?), bool] {
  @func_4437() /* ty=Tensor[(13, 5, ?), bool] */
}

def @func_3227(%var_3213: Tensor[(13, 5, 15), bool]) -> (Tensor[(13, 5, 15), float64],) {
  %152 = @func_2078() /* ty=(Tensor[(13, 5, ?), bool],) */;
  %153 = %152.0;
  %154 = cast(%153, dtype="uint32") /* ty=Tensor[(13, 5, ?), uint32] */;
  %155 = cast(%var_3213, dtype="uint32") /* ty=Tensor[(13, 5, 15), uint32] */;
  %156 = bitwise_xor(%154, %155) /* ty=Tensor[(13, 5, 15), uint32] */;
  %157 = cast(%156, dtype="float64") /* ty=Tensor[(13, 5, 15), float64] */;
  %158 = asinh(%157) /* ty=Tensor[(13, 5, 15), float64] */;
  (%158,)
}

def @func_5136() -> Tensor[(13, 5, 1), float32] {
  %159 = fn () -> Tensor[(13, 5, 1), float32] {
    @func_1906() /* ty=Tensor[(13, 5, 1), float32] */
  };
  %159() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_2410() -> (Tensor[(13, 5, ?), bool],) {
  %162 = fn () -> (Tensor[(13, 5, ?), bool],) {
    %160 = @func_2078() /* ty=(Tensor[(13, 5, ?), bool],) */;
    %161 = %160.0;
    (%161,)
  };
  %162() /* ty=(Tensor[(13, 5, ?), bool],) */
}

def @func_5773(%var_5772: Tensor[(15, 6, 14), int32]) -> Tensor[(15, 6, 14), int32] {
  %165 = fn (%var_5759: Tensor[(15, 6, 14), int32]) -> Tensor[(15, 6, 14), int32] {
    %163 = cast(6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %164 = cast(%var_5759, dtype="int32") /* ty=Tensor[(15, 6, 14), int32] */;
    bitwise_or(%163, %164) /* ty=Tensor[(15, 6, 14), int32] */
  };
  %165(%var_5772) /* ty=Tensor[(15, 6, 14), int32] */
}

def @func_3443() -> Tensor[(13, 5, 1), float32] {
  @func_2524() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_4677() -> (Tensor[(13, 5, 1), float32],) {
  %167 = fn () -> (Tensor[(13, 5, 1), float32],) {
    %166 = @func_3443() /* ty=Tensor[(13, 5, 1), float32] */;
    (%166,)
  };
  %167() /* ty=(Tensor[(13, 5, 1), float32],) */
}

def @func_5426() -> Tensor[(13, 5, 1), float32] {
  @func_5424() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_7255(%var_7254: Tensor[(12, 12, 9), int16]) -> (Tensor[(12, 12, 9), int16], Tensor[(13, 5, 1), float32]) {
  %175 = fn (%var_7235: Tensor[(12, 12, 9), int16]) -> (Tensor[(12, 12, 9), int16], Tensor[(13, 5, 1), float32]) {
    %168 = cast(%var_7235, dtype="int16") /* ty=Tensor[(12, 12, 9), int16] */;
    %169 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(12, 12, 9), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %170 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 12, 9), int16] */, dtype="int16") /* ty=Tensor[(12, 12, 9), int16] */;
    %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %172 = @func_2449() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */;
    %173 = maximum(%170, %171) /* ty=Tensor[(12, 12, 9), int16] */;
    %174 = %172.0;
    (%173, %174)
  };
  %175(%var_7254) /* ty=(Tensor[(12, 12, 9), int16], Tensor[(13, 5, 1), float32]) */
}

def @func_7144() -> (Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], uint8, Tensor[(1274), uint8]) {
  @func_7142() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], uint8, Tensor[(1274), uint8]) */
}

def @func_4801() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) {
  %176 = @func_3419() /* ty=Tensor[(13, 5, 1), float32] */;
  %177 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  (%176, %177)
}

def @func_2163(%var_2159: Tensor[(3, 12, 16), float32]) -> (Tensor[(3, 12, 16), float32],) {
  %178 = cast(%var_2159, dtype="float32") /* ty=Tensor[(3, 12, 16), float32] */;
  %179 = sigmoid(%178) /* ty=Tensor[(3, 12, 16), float32] */;
  (%179,)
}

def @func_3290(%var_3287: Tensor[(450, 4), int32], %var_3288: Tensor[(504), float32], %var_3289: Tensor[(24), float32]) -> (Tensor[(13, 5, 1), float32], Tensor[(324), float32], Tensor[(975), float32], Tensor[(450, 4), int32], Tensor[(504), float32], Tensor[(9, 36), float64], Tensor[(9, 36), float32], Tensor[(2, 6, 2), float32], Tensor[(24), float32], Tensor[(13, 5, ?), bool]) {
  %207 = fn (%var_3241: Tensor[(450, 4), int32], %var_3243: Tensor[(504), float32], %var_3276: Tensor[(24), float32]) -> (Tensor[(13, 5, 1), float32], Tensor[(324), float32], Tensor[(975), float32], Tensor[(450, 4), int32], Tensor[(504), float32], Tensor[(9, 36), float64], Tensor[(9, 36), float32], Tensor[(2, 6, 2), float32], Tensor[(24), float32], Tensor[(13, 5, ?), bool]) {
    %180 = @func_2636() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */;
    %181 = cast(meta[relay.Constant][10] /* ty=Tensor[(975), float32] */, dtype="float32") /* ty=Tensor[(975), float32] */;
    %182 = cast(%var_3241, dtype="int32") /* ty=Tensor[(450, 4), int32] */;
    %183 = cast(meta[relay.Constant][11] /* ty=Tensor[(9, 36), float32] */, dtype="float32") /* ty=Tensor[(9, 36), float32] */;
    %184 = cast(%var_3243, dtype="float32") /* ty=Tensor[(504), float32] */;
    %185 = reshape(%181, newshape=[13, 5, 15]) /* ty=Tensor[(13, 5, 15), float32] */;
    %186 = reshape(%182, newshape=[90, 20]) /* ty=Tensor[(90, 20), int32] */;
    %187 = reshape(%183, newshape=[324]) /* ty=Tensor[(324), float32] */;
    %188 = reshape(%184, newshape=[504]) /* ty=Tensor[(504), float32] */;
    %189 = @func_2923(%185, %186, %187, %188) /* ty=(Tensor[(13, 5, 15), float64], Tensor[(15, 12, 10), bool], Tensor[(90, 20), int32], Tensor[(324), float32], Tensor[(504), float32]) */;
    %190 = cast(meta[relay.Constant][11] /* ty=Tensor[(9, 36), float32] */, dtype="float64") /* ty=Tensor[(9, 36), float64] */;
    %191 = atanh(%190) /* ty=Tensor[(9, 36), float64] */;
    %192 = cast(%191, dtype="float64") /* ty=Tensor[(9, 36), float64] */;
    %193 = acos(%192) /* ty=Tensor[(9, 36), float64] */;
    %194 = cast(%193, dtype="float64") /* ty=Tensor[(9, 36), float64] */;
    %195 = cast(%193, dtype="float32") /* ty=Tensor[(9, 36), float32] */;
    %196 = cast(%var_3276, dtype="float32") /* ty=Tensor[(24), float32] */;
    %197 = reshape(%196, newshape=[2, 6, 2]) /* ty=Tensor[(2, 6, 2), float32] */;
    %198 = cast(%var_3243, dtype="float32") /* ty=Tensor[(504), float32] */;
    %199 = reshape(%198, newshape=[504]) /* ty=Tensor[(504), float32] */;
    %200 = @func_2023(%199) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) */;
    %201 = %180.0;
    %202 = %189.3;
    %203 = acosh(%194) /* ty=Tensor[(9, 36), float64] */;
    %204 = log2(%195) /* ty=Tensor[(9, 36), float32] */;
    %205 = @func_707(%197) /* ty=Tensor[(2, 6, 2), float32] */;
    %206 = %200.0;
    (%201, %202, meta[relay.Constant][10] /* ty=Tensor[(975), float32] */, %var_3241, %var_3243, %203, %204, %205, %var_3276, %206)
  };
  %207(%var_3287, %var_3288, %var_3289) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(324), float32], Tensor[(975), float32], Tensor[(450, 4), int32], Tensor[(504), float32], Tensor[(9, 36), float64], Tensor[(9, 36), float32], Tensor[(2, 6, 2), float32], Tensor[(24), float32], Tensor[(13, 5, ?), bool]) */
}

def @func_4707(%var_4704: uint8, %var_4705: Tensor[(14, 13, 7), uint8], %var_4706: Tensor[(14, 13, 7), uint8]) -> (Tensor[(13, 5, 1), float32], Tensor[(8, 1, 4), float32], Tensor[(14, 13, 7), bool]) {
  @func_4702(%var_4704, %var_4705, %var_4706) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(8, 1, 4), float32], Tensor[(14, 13, 7), bool]) */
}

def @func_2956() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) {
  %212 = fn () -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) {
    %208 = @func_2409() /* ty=(Tensor[(13, 5, ?), bool],) */;
    %209 = @func_2078() /* ty=(Tensor[(13, 5, ?), bool],) */;
    %210 = %208.0;
    %211 = %209.0;
    (%210, %211)
  };
  %212() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */
}

def @func_3122() -> Tensor[(13, 5, 1), float32] {
  %213 = fn () -> Tensor[(13, 5, 1), float32] {
    @func_2524() /* ty=Tensor[(13, 5, 1), float32] */
  };
  %213() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_4617() -> Tensor[(13, 5, ?), bool] {
  %214 = fn () -> Tensor[(13, 5, ?), bool] {
    @func_4437() /* ty=Tensor[(13, 5, ?), bool] */
  };
  %214() /* ty=Tensor[(13, 5, ?), bool] */
}

def @func_5797() -> (Tensor[(13, 5, ?), bool],) {
  %217 = fn () -> (Tensor[(13, 5, ?), bool],) {
    %215 = @func_2636() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */;
    %216 = %215.1;
    (%216,)
  };
  %217() /* ty=(Tensor[(13, 5, ?), bool],) */
}

def @func_2109(%var_2090: Tensor[(6, 16, 1), uint8]) -> (Tensor[(6, 16, 1), uint8],) {
  %218 = cast(meta[relay.Constant][12] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %219 = cast(%var_2090, dtype="uint8") /* ty=Tensor[(6, 16, 1), uint8] */;
  %220 = subtract(%218, %219) /* ty=Tensor[(6, 16, 1), uint8] */;
  (%220,)
}

def @func_6807(%var_6805: Tensor[(576), float32], %var_6806: Tensor[(1575), int64]) -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(3, 12, 16), float32], Tensor[(576), float32], Tensor[(7, 15, 15), bool], Tensor[(1575), int64], Tensor[(504), float32], Tensor[(13, 5, 1), float32]) {
  @func_6803(%var_6805, %var_6806) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(3, 12, 16), float32], Tensor[(576), float32], Tensor[(7, 15, 15), bool], Tensor[(1575), int64], Tensor[(504), float32], Tensor[(13, 5, 1), float32]) */
}

def @func_4515(%var_4508: Tensor[(11, 1, 9), int8]) -> (Tensor[(11, 1, 9), int8],) {
  %221 = cast(meta[relay.Constant][13] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %222 = cast(%var_4508, dtype="int8") /* ty=Tensor[(11, 1, 9), int8] */;
  %223 = maximum(%221, %222) /* ty=Tensor[(11, 1, 9), int8] */;
  (%223,)
}

def @func_1418(%var_1417: Tensor[(252, 2), float32]) -> (Tensor[(13, 5, ?), bool], Tensor[(6, 6, 9), float32], Tensor[(324, 1), float32], Tensor[(252, 2), float32]) {
  %232 = fn (%var_1409: Tensor[(252, 2), float32]) -> (Tensor[(13, 5, ?), bool], Tensor[(6, 6, 9), float32], Tensor[(324, 1), float32], Tensor[(252, 2), float32]) {
    %224 = @func_1323() /* ty=(Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) */;
    %225 = cast(meta[relay.Constant][14] /* ty=Tensor[(324, 1), float32] */, dtype="float32") /* ty=Tensor[(324, 1), float32] */;
    %226 = cast(%var_1409, dtype="float32") /* ty=Tensor[(252, 2), float32] */;
    %227 = reshape(%225, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
    %228 = reshape(%226, newshape=[504, 1]) /* ty=Tensor[(504, 1), float32] */;
    %229 = @func_364(%227, %228) /* ty=(Tensor[(6, 6, 9), bool], Tensor[(12, 6, 7), float32], Tensor[(504, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(6, 6, 9), float32]) */;
    %230 = %224.2;
    %231 = %229.4;
    (%230, %231, meta[relay.Constant][14] /* ty=Tensor[(324, 1), float32] */, %var_1409)
  };
  %232(%var_1417) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(6, 6, 9), float32], Tensor[(324, 1), float32], Tensor[(252, 2), float32]) */
}

def @func_3209(%var_3207: Tensor[(10, 9, 11), float32], %var_3208: Tensor[(10, 9, 11), float32]) -> Tensor[(10, 9, 11), float32] {
  @func_3205(%var_3207, %var_3208) /* ty=Tensor[(10, 9, 11), float32] */
}

def @func_4437() -> Tensor[(13, 5, ?), bool] {
  %233 = @func_1584() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %233.1
}

def @func_3421() -> Tensor[(13, 5, 1), float32] {
  @func_3419() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_6691() -> (Tensor[(13, 5, ?), bool],) {
  %242 = fn () -> (Tensor[(13, 5, ?), bool],) {
    %234 = @func_3940() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */;
    %235 = %234.0;
    %236 = @func_2524() /* ty=Tensor[(13, 5, 1), float32] */;
    %237 = cast(%236, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
    %238 = shape_of(%235, dtype="int32") /* ty=Tensor[(3), int32] */;
    %239 = cast(%235, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
    %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %241 = not_equal(%239, %240) /* ty=Tensor[(13, 5, ?), bool] */;
    (%241,)
  };
  %242() /* ty=(Tensor[(13, 5, ?), bool],) */
}

def @func_4228(%var_4222: Tensor[(13, 5, 5), float32]) -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 5), float32]) {
  %243 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  %244 = cast(%243, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %245 = cast(%var_4222, dtype="float32") /* ty=Tensor[(13, 5, 5), float32] */;
  %246 = @func_3658() /* ty=Tensor[(13, 5, 1), float32] */;
  %247 = floor_divide(%244, %245) /* ty=Tensor[(13, 5, 5), float32] */;
  (%246, %247)
}

def @func_6871() -> (Tensor[(4, 15, ?), bool], Tensor[(13, 5, 1), float32], Tensor[(7, 14, 5), bool], Tensor[(490), bool]) {
  %261 = fn () -> (Tensor[(4, 15, ?), bool], Tensor[(13, 5, 1), float32], Tensor[(7, 14, 5), bool], Tensor[(490), bool]) {
    %248 = cast(meta[relay.Constant][16] /* ty=Tensor[(4, 15, 1), uint8] */, dtype="bool") /* ty=Tensor[(4, 15, 1), bool] */;
    %249 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(4, 15, 1), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %250 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 15, 1), uint8] */, dtype="bool") /* ty=Tensor[(4, 15, 1), bool] */;
    %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %252 = @func_3957() /* ty=(Tensor[(13, 5, 1), float32],) */;
    %253 = cast(meta[relay.Constant][17] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
    %254 = cast(meta[relay.Constant][17] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
    %255 = reshape(%253, newshape=[7, 14, 5]) /* ty=Tensor[(7, 14, 5), bool] */;
    %256 = reshape(%254, newshape=[7, 14, 5]) /* ty=Tensor[(7, 14, 5), bool] */;
    %257 = @func_2370(%255, %256) /* ty=(Tensor[(7, 14, 5), bool],) */;
    %258 = greater(%250, %251) /* ty=Tensor[(4, 15, ?), bool] */;
    %259 = %252.0;
    %260 = %257.0;
    (%258, %259, %260, meta[relay.Constant][17] /* ty=Tensor[(490), bool] */)
  };
  %261() /* ty=(Tensor[(4, 15, ?), bool], Tensor[(13, 5, 1), float32], Tensor[(7, 14, 5), bool], Tensor[(490), bool]) */
}

def @func_3573(%var_3562: Tensor[(13, 5, 1), bool]) -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), uint64]) {
  %262 = @func_2409() /* ty=(Tensor[(13, 5, ?), bool],) */;
  %263 = @func_2067() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %264 = %263.1;
  %265 = cast(%var_3562, dtype="uint64") /* ty=Tensor[(13, 5, 1), uint64] */;
  %266 = shape_of(%264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %267 = cast(%264, dtype="uint64") /* ty=Tensor[(13, 5, ?), uint64] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %269 = %262.0;
  %270 = bitwise_or(%267, %268) /* ty=Tensor[(13, 5, ?), uint64] */;
  (%269, %270)
}

def @func_7142() -> (Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], uint8, Tensor[(1274), uint8]) {
  %271 = cast(meta[relay.Constant][18] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %272 = reshape(%271, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %273 = @func_58(%272) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %274 = cast(meta[relay.Constant][19] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %275 = cast(meta[relay.Constant][20] /* ty=Tensor[(1274), uint8] */, dtype="uint8") /* ty=Tensor[(1274), uint8] */;
  %276 = cast(meta[relay.Constant][20] /* ty=Tensor[(1274), uint8] */, dtype="uint8") /* ty=Tensor[(1274), uint8] */;
  %277 = reshape(%274, newshape=[]) /* ty=uint8 */;
  %278 = reshape(%275, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), uint8] */;
  %279 = reshape(%276, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), uint8] */;
  %280 = @func_4702(%277, %278, %279) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(8, 1, 4), float32], Tensor[(14, 13, 7), bool]) */;
  %281 = @func_1526() /* ty=Tensor[(13, 5, ?), bool] */;
  %282 = %273.0;
  %283 = %280.0;
  (%281, %282, meta[relay.Constant][18] /* ty=Tensor[(504), float32] */, %283, meta[relay.Constant][19] /* ty=uint8 */, meta[relay.Constant][20] /* ty=Tensor[(1274), uint8] */)
}

def @func_2923(%var_2871: Tensor[(13, 5, 15), float32], %var_2878: Tensor[(90, 20), int32], %var_2879: Tensor[(324), float32], %var_2880: Tensor[(504), float32]) -> (Tensor[(13, 5, 15), float64], Tensor[(15, 12, 10), bool], Tensor[(90, 20), int32], Tensor[(324), float32], Tensor[(504), float32]) {
  %284 = @func_1906() /* ty=Tensor[(13, 5, 1), float32] */;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(13, 5, 1), float64] */;
  %286 = cast(%var_2871, dtype="float64") /* ty=Tensor[(13, 5, 15), float64] */;
  %287 = cast(%var_2878, dtype="int32") /* ty=Tensor[(90, 20), int32] */;
  %288 = cast(%var_2879, dtype="float32") /* ty=Tensor[(324), float32] */;
  %289 = cast(%var_2880, dtype="float32") /* ty=Tensor[(504), float32] */;
  %290 = reshape(%287, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), int32] */;
  %291 = reshape(%288, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %292 = reshape(%289, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %293 = @func_1214(%290, %291, %292) /* ty=(Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), float64], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(504), float32], Tensor[(15, 12, 10), float32]) */;
  %294 = floor_mod(%285, %286) /* ty=Tensor[(13, 5, 15), float64] */;
  %295 = %293.1;
  (%294, %295, %var_2878, %var_2879, %var_2880)
}

def @func_2693() -> (Tensor[(13, 5, ?), float32],) {
  %296 = @func_2067() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %297 = %296.1;
  %298 = cast(%297, dtype="float32") /* ty=Tensor[(13, 5, ?), float32] */;
  %299 = sinh(%298) /* ty=Tensor[(13, 5, ?), float32] */;
  (%299,)
}

def @func_3658() -> Tensor[(13, 5, 1), float32] {
  @func_3121() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_1029(%var_1027: Tensor[(7, 10, 14), float64]) -> (Tensor[(7, 10, 14), float64], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) {
  @func_1026(%var_1027) /* ty=(Tensor[(7, 10, 14), float64], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) */
}

def @func_4880() -> Tensor[(13, 5, 1), float32] {
  %300 = @func_1697() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, 1), float32]) */;
  %300.1
}

def @func_2636() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) {
  %301 = @func_1626() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %302 = @func_2577() /* ty=Tensor[(13, 5, 1), float32] */;
  %303 = %301.1;
  (%302, %303)
}

def @func_2112(%var_2110: Tensor[(6, 16, 1), uint8]) -> (Tensor[(6, 16, 1), uint8],) {
  @func_2109(%var_2110) /* ty=(Tensor[(6, 16, 1), uint8],) */
}

def @func_2079() -> (Tensor[(13, 5, ?), bool],) {
  %306 = fn () -> (Tensor[(13, 5, ?), bool],) {
    %304 = @func_1763() /* ty=(Tensor[(8, 14, 4), bool], Tensor[(13, 5, ?), bool], Tensor[(11, 8, 9), bool], Tensor[(396, 2), int32]) */;
    %305 = %304.1;
    (%305,)
  };
  %306() /* ty=(Tensor[(13, 5, ?), bool],) */
}

def @func_4469() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float64]) {
  %312 = fn () -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float64]) {
    %307 = @func_2636() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */;
    %308 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
    %309 = cast(%308, dtype="float64") /* ty=Tensor[(13, 5, 1), float64] */;
    %310 = %307.0;
    %311 = asinh(%309) /* ty=Tensor[(13, 5, 1), float64] */;
    (%310, %311)
  };
  %312() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float64]) */
}

def @func_6126() -> Tensor[(13, 5, 1), float32] {
  @func_6124() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_2214() -> (Tensor[(13, 5, 1), float32],) {
  @func_2212() /* ty=(Tensor[(13, 5, 1), float32],) */
}

def @func_4823() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, 7), bool]) {
  %313 = @func_4065() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 7), bool], Tensor[(455, 1), float32]) */;
  %314 = @func_4437() /* ty=Tensor[(13, 5, ?), bool] */;
  %315 = %313.1;
  (%314, %315)
}

def @func_2026(%var_2024: Tensor[(504), float32]) -> (Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) {
  @func_2023(%var_2024) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) */
}

def @func_1026(%var_1003: Tensor[(7, 10, 14), float64]) -> (Tensor[(7, 10, 14), float64], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) {
  %316 = cast(%var_1003, dtype="float64") /* ty=Tensor[(7, 10, 14), float64] */;
  %317 = cast(meta[relay.Constant][21] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %318 = reshape(%317, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %319 = @func_58(%318) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %320 = asinh(%316) /* ty=Tensor[(7, 10, 14), float64] */;
  %321 = %319.1;
  (%320, %321, meta[relay.Constant][21] /* ty=Tensor[(504), float32] */)
}

def @func_3321() -> (Tensor[(13, 5, 1), float32],) {
  %322 = @func_2636() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */;
  %323 = %322.0;
  (%323,)
}

def @func_5866(%var_5826: Tensor[(13, 5, 15), float32], %var_5835: Tensor[(504), float32], %var_5836: Tensor[(324), float32], %var_5837: Tensor[(784, 1), float32]) -> (Tensor[(13, 5, 15), bool], Tensor[(504), float32], Tensor[(504), float32], Tensor[(324), float32], Tensor[(784, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), uint16]) {
  %324 = @func_3121() /* ty=Tensor[(13, 5, 1), float32] */;
  %325 = cast(%324, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %326 = cast(%var_5826, dtype="bool") /* ty=Tensor[(13, 5, 15), bool] */;
  %327 = cast(%var_5835, dtype="float32") /* ty=Tensor[(504), float32] */;
  %328 = cast(%var_5836, dtype="float32") /* ty=Tensor[(324), float32] */;
  %329 = cast(%var_5837, dtype="float32") /* ty=Tensor[(784, 1), float32] */;
  %330 = reshape(%327, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %331 = reshape(%328, newshape=[54, 6]) /* ty=Tensor[(54, 6), float32] */;
  %332 = reshape(%329, newshape=[784]) /* ty=Tensor[(784), float32] */;
  %333 = @func_2010(%330, %331, %332) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], Tensor[(15, 12, 10), float64], Tensor[(1800), int32], Tensor[(54, 6), float32], Tensor[(16, 7, 7), float64], Tensor[(784), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool], Tensor[(455), uint16], Tensor[(13, 5, ?), float32]) */;
  %334 = %333.1;
  %335 = cast(%334, dtype="float32") /* ty=Tensor[(504), float32] */;
  %336 = reshape(%335, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %337 = @func_2846(%336) /* ty=(Tensor[(13, 5, ?), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 8, 15), float32], Tensor[(1, 1560), float64], Tensor[(13, 5, 1), float32]) */;
  %338 = not_equal(%325, %326) /* ty=Tensor[(13, 5, 15), bool] */;
  %339 = %337.1;
  %340 = @func_4972() /* ty=Tensor[(13, 5, ?), uint16] */;
  (%338, %334, %var_5835, %var_5836, %var_5837, %339, %340)
}

def @func_657(%var_654: Tensor[(3, 1, 14), float32], %var_655: Tensor[(324), float32], %var_656: Tensor[(504), float32]) -> (Tensor[(3, 1, 14), float64], Tensor[(6, 6, 9), bool], Tensor[(324), float32], Tensor[(504), float32]) {
  %351 = fn (%var_631: Tensor[(3, 1, 14), float32], %var_650: Tensor[(324), float32], %var_651: Tensor[(504), float32]) -> (Tensor[(3, 1, 14), float64], Tensor[(6, 6, 9), bool], Tensor[(324), float32], Tensor[(504), float32]) {
    %341 = cast(%var_631, dtype="float32") /* ty=Tensor[(3, 1, 14), float32] */;
    %342 = exp(%341) /* ty=Tensor[(3, 1, 14), float32] */;
    %343 = cast(%342, dtype="float64") /* ty=Tensor[(3, 1, 14), float64] */;
    %344 = cast(%var_650, dtype="float32") /* ty=Tensor[(324), float32] */;
    %345 = cast(%var_651, dtype="float32") /* ty=Tensor[(504), float32] */;
    %346 = reshape(%344, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
    %347 = reshape(%345, newshape=[504, 1]) /* ty=Tensor[(504, 1), float32] */;
    %348 = @func_364(%346, %347) /* ty=(Tensor[(6, 6, 9), bool], Tensor[(12, 6, 7), float32], Tensor[(504, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(6, 6, 9), float32]) */;
    %349 = asinh(%343) /* ty=Tensor[(3, 1, 14), float64] */;
    %350 = %348.0;
    (%349, %350, %var_650, %var_651)
  };
  %351(%var_654, %var_655, %var_656) /* ty=(Tensor[(3, 1, 14), float64], Tensor[(6, 6, 9), bool], Tensor[(324), float32], Tensor[(504), float32]) */
}

def @func_1528() -> Tensor[(13, 5, ?), bool] {
  @func_1526() /* ty=Tensor[(13, 5, ?), bool] */
}

def @func_2166(%var_2164: Tensor[(3, 12, 16), float32]) -> (Tensor[(3, 12, 16), float32],) {
  @func_2163(%var_2164) /* ty=(Tensor[(3, 12, 16), float32],) */
}

def @func_364(%var_310: Tensor[(6, 6, 9), float32], %var_315: Tensor[(504, 1), float32]) -> (Tensor[(6, 6, 9), bool], Tensor[(12, 6, 7), float32], Tensor[(504, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(6, 6, 9), float32]) {
  %352 = cast(%var_310, dtype="bool") /* ty=Tensor[(6, 6, 9), bool] */;
  %353 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(6, 6, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %354 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 6, 9), float32] */, dtype="bool") /* ty=Tensor[(6, 6, 9), bool] */;
  %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %356 = cast(%var_315, dtype="float32") /* ty=Tensor[(504, 1), float32] */;
  %357 = reshape(%356, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %358 = @func_58(%357) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %359 = %358.1;
  %360 = cast(%359, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
  %361 = reshape(%360, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %362 = @func_58(%361) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %363 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 6, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 9), float32] */;
  %364 = not_equal(%354, %355) /* ty=Tensor[(6, 6, 9), bool] */;
  %365 = %362.1;
  %366 = sin(%363) /* ty=Tensor[(6, 6, 9), float32] */;
  (%364, %359, %var_315, %365, %366)
}

def @func_4973() -> Tensor[(13, 5, ?), uint16] {
  %368 = fn () -> Tensor[(13, 5, ?), uint16] {
    %367 = @func_1323() /* ty=(Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) */;
    %367.0
  };
  %368() /* ty=Tensor[(13, 5, ?), uint16] */
}

def @func_4490() -> Tensor[(13, 5, 1), float32] {
  %369 = fn () -> Tensor[(13, 5, 1), float32] {
    @func_1726() /* ty=Tensor[(13, 5, 1), float32] */
  };
  %369() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_1728() -> Tensor[(13, 5, 1), float32] {
  @func_1726() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_7080() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) {
  %374 = fn () -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) {
    %370 = @func_3940() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */;
    %371 = @func_3321() /* ty=(Tensor[(13, 5, 1), float32],) */;
    %372 = %370.1;
    %373 = %371.0;
    (%372, %373)
  };
  %374() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */
}

def @func_4882() -> Tensor[(13, 5, 1), float32] {
  @func_4880() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_5736() -> Tensor[(13, 5, 1), float32] {
  @func_3658() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_1323() -> (Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) {
  %375 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  %376 = cast(%375, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %377 = rsqrt(%376) /* ty=Tensor[(13, 5, 1), float32] */;
  %378 = cast(%375, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %379 = cos(%378) /* ty=Tensor[(13, 5, 1), float32] */;
  %380 = cast(%379, dtype="uint16") /* ty=Tensor[(13, 5, 1), uint16] */;
  %381 = shape_of(%377, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%377, dtype="uint16") /* ty=Tensor[(13, 5, 1), uint16] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %384 = cast(%379, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %385 = shape_of(%375, dtype="int32") /* ty=Tensor[(3), int32] */;
  %386 = cast(%375, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %388 = greater(%386, %387) /* ty=Tensor[(13, 5, ?), bool] */;
  %389 = cast(%377, dtype="uint32") /* ty=Tensor[(13, 5, 1), uint32] */;
  %390 = shape_of(%375, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%375, dtype="uint32") /* ty=Tensor[(13, 5, 1), uint32] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %393 = right_shift(%391, %392) /* ty=Tensor[(13, 5, ?), uint32] */;
  %394 = cast(%393, dtype="uint8") /* ty=Tensor[(13, 5, ?), uint8] */;
  %395 = shape_of(%388, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%388, dtype="uint8") /* ty=Tensor[(13, 5, ?), uint8] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %398 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  %399 = cast(%398, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %400 = acosh(%399) /* ty=Tensor[(13, 5, 1), float32] */;
  %401 = cast(%393, dtype="bool") /* ty=Tensor[(13, 5, ?), bool] */;
  %402 = shape_of(%400, dtype="int32") /* ty=Tensor[(3), int32] */;
  %403 = cast(%400, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %405 = logical_xor(%382, %383) /* ty=Tensor[(13, 5, ?), uint16] */;
  %406 = bitwise_and(%396, %397) /* ty=Tensor[(13, 5, ?), uint8] */;
  %407 = equal(%403, %404) /* ty=Tensor[(13, 5, ?), bool] */;
  (%405, %406, %407)
}

def @func_2794(%var_2792: Tensor[(13, 5, 7), float32]) -> (Tensor[(13, 5, 7), bool],) {
  @func_2791(%var_2792) /* ty=(Tensor[(13, 5, 7), bool],) */
}

def @func_6229(%var_6201: Tensor[(650), float32]) -> (Tensor[(13, 5, 1), float64], Tensor[(13, 5, 10), bool], Tensor[(13, 5, 1), float32]) {
  %408 = @func_4468() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float64]) */;
  %409 = cast(%var_6201, dtype="float32") /* ty=Tensor[(650), float32] */;
  %410 = reshape(%409, newshape=[13, 5, 10]) /* ty=Tensor[(13, 5, 10), float32] */;
  %411 = @func_4142(%410) /* ty=Tensor[(13, 5, 10), bool] */;
  %412 = cast(%var_6201, dtype="bool") /* ty=Tensor[(650), bool] */;
  %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%411, dtype="bool") /* ty=Tensor[(13, 5, 10), bool] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %416 = %408.1;
  %417 = greater_equal(%414, %415) /* ty=Tensor[(13, 5, 10), bool] */;
  %418 = @func_6124() /* ty=Tensor[(13, 5, 1), float32] */;
  (%416, %417, %418)
}

def @func_6412(%var_6411: Tensor[(13, 5, 4), float32]) -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(975), bool], Tensor[(13, 5, 4), bool], Tensor[(13, 5, 1), float32]) {
  %432 = fn (%var_6376: Tensor[(13, 5, 4), float32]) -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(975), bool], Tensor[(13, 5, 4), bool], Tensor[(13, 5, 1), float32]) {
    %419 = @func_4676() /* ty=(Tensor[(13, 5, 1), float32],) */;
    %420 = %419.0;
    %421 = cast(%420, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
    %422 = cast(%var_6376, dtype="bool") /* ty=Tensor[(13, 5, 4), bool] */;
    %423 = cast(meta[relay.Constant][23] /* ty=Tensor[(975), bool] */, dtype="bool") /* ty=Tensor[(975), bool] */;
    %424 = reshape(%423, newshape=[1, 975]) /* ty=Tensor[(1, 975), bool] */;
    %425 = @func_4042(%424) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 15), float64], Tensor[(1, 975), bool]) */;
    %426 = %425.0;
    %427 = cast(%426, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
    %428 = @func_5424() /* ty=Tensor[(13, 5, 1), float32] */;
    %429 = @func_1936() /* ty=Tensor[(13, 5, 1), float32] */;
    %430 = greater(%421, %422) /* ty=Tensor[(13, 5, 4), bool] */;
    %431 = erf(%427) /* ty=Tensor[(13, 5, 1), float32] */;
    (%428, %429, meta[relay.Constant][23] /* ty=Tensor[(975), bool] */, %430, %431)
  };
  %432(%var_6411) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(975), bool], Tensor[(13, 5, 4), bool], Tensor[(13, 5, 1), float32]) */
}

def @func_1214(%var_1170: Tensor[(15, 12, 10), int32], %var_1201: Tensor[(324), float32], %var_1202: Tensor[(504), float32]) -> (Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), float64], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(504), float32], Tensor[(15, 12, 10), float32]) {
  %433 = cast(%var_1170, dtype="bool") /* ty=Tensor[(15, 12, 10), bool] */;
  %434 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(15, 12, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 12, 10), int32] */, dtype="bool") /* ty=Tensor[(15, 12, 10), bool] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %437 = cast(%var_1170, dtype="float64") /* ty=Tensor[(15, 12, 10), float64] */;
  %438 = tan(%437) /* ty=Tensor[(15, 12, 10), float64] */;
  %439 = cast(%var_1170, dtype="float32") /* ty=Tensor[(15, 12, 10), float32] */;
  %440 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(15, 12, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 12, 10), int32] */, dtype="float32") /* ty=Tensor[(15, 12, 10), float32] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %443 = divide(%441, %442) /* ty=Tensor[(15, 12, 10), float32] */;
  %444 = cast(%443, dtype="bool") /* ty=Tensor[(15, 12, 10), bool] */;
  %445 = shape_of(%438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %446 = cast(%438, dtype="bool") /* ty=Tensor[(15, 12, 10), bool] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %448 = cast(%var_1170, dtype="float64") /* ty=Tensor[(15, 12, 10), float64] */;
  %449 = cast(%var_1201, dtype="float32") /* ty=Tensor[(324), float32] */;
  %450 = cast(%var_1202, dtype="float32") /* ty=Tensor[(504), float32] */;
  %451 = reshape(%449, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), float32] */;
  %452 = reshape(%450, newshape=[504, 1]) /* ty=Tensor[(504, 1), float32] */;
  %453 = @func_364(%451, %452) /* ty=(Tensor[(6, 6, 9), bool], Tensor[(12, 6, 7), float32], Tensor[(504, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(6, 6, 9), float32]) */;
  %454 = cast(%438, dtype="float32") /* ty=Tensor[(15, 12, 10), float32] */;
  %455 = greater(%435, %436) /* ty=Tensor[(15, 12, 10), bool] */;
  %456 = greater_equal(%446, %447) /* ty=Tensor[(15, 12, 10), bool] */;
  %457 = asin(%448) /* ty=Tensor[(15, 12, 10), float64] */;
  %458 = %453.4;
  %459 = atanh(%454) /* ty=Tensor[(15, 12, 10), float32] */;
  (%455, %456, %457, %458, %var_1201, %var_1202, %459)
}

def @func_60(%var_59: Tensor[(12, 6, 7), float32]) -> (Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) {
  %465 = fn (%var_29: Tensor[(12, 6, 7), float32]) -> (Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) {
    %460 = cast(meta[relay.Constant][25] /* ty=Tensor[(12, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(12, 6, 1), float32] */;
    %461 = cast(%var_29, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
    %462 = cast(%var_29, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
    %463 = mod(%460, %461) /* ty=Tensor[(12, 6, 7), float32] */;
    %464 = atan(%462) /* ty=Tensor[(12, 6, 7), float32] */;
    (%463, %464)
  };
  %465(%var_59) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */
}

def @func_5101() -> (Tensor[(13, 5, ?), bool],) {
  @func_5099() /* ty=(Tensor[(13, 5, ?), bool],) */
}

def @func_4337(%var_4321: Tensor[(13, 5, 14), float32]) -> (Tensor[(1560), float64], Tensor[(13, 5, ?), bool], Tensor[(13, 5, 14), uint32], Tensor[(13, 5, ?), int64]) {
  %466 = @func_2409() /* ty=(Tensor[(13, 5, ?), bool],) */;
  %467 = @func_3658() /* ty=Tensor[(13, 5, 1), float32] */;
  %468 = cast(%467, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %469 = cast(meta[relay.Constant][26] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %470 = reshape(%468, newshape=[13, 5, 1]) /* ty=Tensor[(13, 5, 1), float32] */;
  %471 = reshape(%469, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %472 = @func_3645(%470, %471) /* ty=(Tensor[(13, 5, ?), float64], Tensor[(13, 8, 15), float32], Tensor[(1560), float64], Tensor[(13, 5, ?), float32]) */;
  %473 = %472.3;
  %474 = cast(%473, dtype="uint32") /* ty=Tensor[(13, 5, ?), uint32] */;
  %475 = cast(%var_4321, dtype="uint32") /* ty=Tensor[(13, 5, 14), uint32] */;
  %476 = cast(%467, dtype="int64") /* ty=Tensor[(13, 5, 1), int64] */;
  %477 = shape_of(%473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%473, dtype="int64") /* ty=Tensor[(13, 5, ?), int64] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %480 = %466.0;
  %481 = subtract(%474, %475) /* ty=Tensor[(13, 5, 14), uint32] */;
  %482 = bitwise_xor(%478, %479) /* ty=Tensor[(13, 5, ?), int64] */;
  (meta[relay.Constant][26] /* ty=Tensor[(1560), float64] */, %480, %481, %482)
}

def @func_1845(%var_1842: Tensor[(42), float32], %var_1843: Tensor[(324), float32], %var_1844: Tensor[(504), float32]) -> (Tensor[(504), float32], Tensor[(42), float32], Tensor[(324), float32], Tensor[(13, 5, 504), float64], Tensor[(11, 8, 9), bool], Tensor[(36, 22), int32], Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(13, 5, ?), bool]) {
  @func_1840(%var_1842, %var_1843, %var_1844) /* ty=(Tensor[(504), float32], Tensor[(42), float32], Tensor[(324), float32], Tensor[(13, 5, 504), float64], Tensor[(11, 8, 9), bool], Tensor[(36, 22), int32], Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(13, 5, ?), bool]) */
}

def @func_3660() -> Tensor[(13, 5, 1), float32] {
  @func_3658() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_3898(%var_3861: Tensor[(324), float32]) -> (Tensor[(13, 5, 1), float32], Tensor[(11, 8, 9), bool], Tensor[(42), float32], Tensor[(324), float32], Tensor[(13, 5, 504), int8], Tensor[(13, 5, ?), float64]) {
  %483 = cast(meta[relay.Constant][27] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %484 = cast(%var_3861, dtype="float32") /* ty=Tensor[(324), float32] */;
  %485 = cast(meta[relay.Constant][28] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %486 = reshape(%483, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %487 = reshape(%484, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %488 = reshape(%485, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %489 = @func_1840(%486, %487, %488) /* ty=(Tensor[(504), float32], Tensor[(42), float32], Tensor[(324), float32], Tensor[(13, 5, 504), float64], Tensor[(11, 8, 9), bool], Tensor[(36, 22), int32], Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(13, 5, ?), bool]) */;
  %490 = @func_3464() /* ty=(Tensor[(13, 5, 1), float32],) */;
  %491 = %490.0;
  %492 = cast(meta[relay.Constant][28] /* ty=Tensor[(504), float32] */, dtype="uint8") /* ty=Tensor[(504), uint8] */;
  %493 = cast(%491, dtype="uint8") /* ty=Tensor[(13, 5, 1), uint8] */;
  %494 = maximum(%492, %493) /* ty=Tensor[(13, 5, 504), uint8] */;
  %495 = cast(%494, dtype="int8") /* ty=Tensor[(13, 5, 504), int8] */;
  %496 = cast(%491, dtype="int8") /* ty=Tensor[(13, 5, 1), int8] */;
  %497 = cast(meta[relay.Constant][28] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %498 = reshape(%497, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %499 = @func_2023(%498) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) */;
  %500 = %499.0;
  %501 = cast(%500, dtype="float64") /* ty=Tensor[(13, 5, ?), float64] */;
  %502 = @func_2577() /* ty=Tensor[(13, 5, 1), float32] */;
  %503 = %489.4;
  %504 = bitwise_xor(%495, %496) /* ty=Tensor[(13, 5, 504), int8] */;
  %505 = log(%501) /* ty=Tensor[(13, 5, ?), float64] */;
  (%502, %503, meta[relay.Constant][27] /* ty=Tensor[(42), float32] */, %var_3861, %504, %505)
}

def @func_2602(%var_2601: Tensor[(792), int32]) -> (Tensor[(13, 5, 1), float32], Tensor[(11, 8, 9), bool], Tensor[(792), int32]) {
  %511 = fn (%var_2595: Tensor[(792), int32]) -> (Tensor[(13, 5, 1), float32], Tensor[(11, 8, 9), bool], Tensor[(792), int32]) {
    %506 = cast(%var_2595, dtype="int32") /* ty=Tensor[(792), int32] */;
    %507 = reshape(%506, newshape=[11, 8, 9]) /* ty=Tensor[(11, 8, 9), int32] */;
    %508 = @func_572(%507) /* ty=(Tensor[(11, 8, 9), bool],) */;
    %509 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
    %510 = %508.0;
    (%509, %510, %var_2595)
  };
  %511(%var_2601) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(11, 8, 9), bool], Tensor[(792), int32]) */
}

def @func_3901(%var_3899: Tensor[(324), float32]) -> (Tensor[(13, 5, 1), float32], Tensor[(11, 8, 9), bool], Tensor[(42), float32], Tensor[(324), float32], Tensor[(13, 5, 504), int8], Tensor[(13, 5, ?), float64]) {
  @func_3898(%var_3899) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(11, 8, 9), bool], Tensor[(42), float32], Tensor[(324), float32], Tensor[(13, 5, 504), int8], Tensor[(13, 5, ?), float64]) */
}

def @func_4841() -> (Tensor[(13, 5, 1), float32],) {
  @func_4839() /* ty=(Tensor[(13, 5, 1), float32],) */
}

def @func_4825() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, 7), bool]) {
  @func_4823() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, 7), bool]) */
}

def @func_2791(%var_2775: Tensor[(13, 5, 7), float32]) -> (Tensor[(13, 5, 7), bool],) {
  %512 = @func_2714() /* ty=Tensor[(13, 5, 1), float32] */;
  %513 = cast(%512, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %514 = cast(%var_2775, dtype="bool") /* ty=Tensor[(13, 5, 7), bool] */;
  %515 = equal(%513, %514) /* ty=Tensor[(13, 5, 7), bool] */;
  (%515,)
}

def @func_6995(%var_6887: Tensor[(16, 9, 13), float64], %var_6926: Tensor[(1274), uint8], %var_6971: Tensor[(1800), int32]) -> (Tensor[(16, 9, 13), float64], Tensor[(16, 9, 13), float32], Tensor[(13, 5, 15), float64], Tensor[(975), bool], Tensor[(3, 9, 12), uint8], Tensor[(1274), uint32], Tensor[(8, 1, 4), bool], Tensor[(15, 12, 10), bool], Tensor[(1800), int32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool], Tensor[(77, 7), float64]) {
  %516 = cast(%var_6887, dtype="float64") /* ty=Tensor[(16, 9, 13), float64] */;
  %517 = cast(%var_6887, dtype="float32") /* ty=Tensor[(16, 9, 13), float32] */;
  %518 = cast(meta[relay.Constant][29] /* ty=Tensor[(975), bool] */, dtype="bool") /* ty=Tensor[(975), bool] */;
  %519 = reshape(%518, newshape=[1, 975]) /* ty=Tensor[(1, 975), bool] */;
  %520 = @func_4042(%519) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 15), float64], Tensor[(1, 975), bool]) */;
  %521 = cast(%var_6926, dtype="uint32") /* ty=Tensor[(1274), uint32] */;
  %522 = cast(meta[relay.Constant][30] /* ty=uint8 */, dtype="uint32") /* ty=uint32 */;
  %523 = cast(meta[relay.Constant][30] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %524 = cast(%var_6926, dtype="uint8") /* ty=Tensor[(1274), uint8] */;
  %525 = cast(%var_6926, dtype="uint8") /* ty=Tensor[(1274), uint8] */;
  %526 = reshape(%523, newshape=[]) /* ty=uint8 */;
  %527 = reshape(%524, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), uint8] */;
  %528 = reshape(%525, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), uint8] */;
  %529 = @func_4702(%526, %527, %528) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(8, 1, 4), float32], Tensor[(14, 13, 7), bool]) */;
  %530 = %529.1;
  %531 = cast(%530, dtype="bool") /* ty=Tensor[(8, 1, 4), bool] */;
  %532 = cast(meta[relay.Constant][30] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %533 = cast(%var_6971, dtype="int32") /* ty=Tensor[(1800), int32] */;
  %534 = @func_6103() /* ty=Tensor[(3, 9, 12), uint8] */;
  %535 = cast(%534, dtype="float32") /* ty=Tensor[(3, 9, 12), float32] */;
  %536 = cast(meta[relay.Constant][31] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %537 = reshape(%533, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), int32] */;
  %538 = reshape(%535, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %539 = reshape(%536, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %540 = @func_1214(%537, %538, %539) /* ty=(Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), float64], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(504), float32], Tensor[(15, 12, 10), float32]) */;
  %541 = @func_4468() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float64]) */;
  %542 = cast(meta[relay.Constant][30] /* ty=uint8 */, dtype="float64") /* ty=float64 */;
  %543 = cast(meta[relay.Constant][32] /* ty=Tensor[(77, 7), float64] */, dtype="float64") /* ty=Tensor[(77, 7), float64] */;
  %544 = reshape(%542, newshape=[]) /* ty=float64 */;
  %545 = reshape(%543, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), float64] */;
  %546 = @func_3399(%544, %545) /* ty=(Tensor[(7, 11, 7), float64], Tensor[(13, 5, ?), bool]) */;
  %547 = cos(%516) /* ty=Tensor[(16, 9, 13), float64] */;
  %548 = sin(%517) /* ty=Tensor[(16, 9, 13), float32] */;
  %549 = %520.1;
  %550 = bitwise_or(%521, %522) /* ty=Tensor[(1274), uint32] */;
  %551 = greater(%531, %532) /* ty=Tensor[(8, 1, 4), bool] */;
  %552 = %540.0;
  %553 = %541.0;
  %554 = %546.1;
  (%547, %548, %549, meta[relay.Constant][29] /* ty=Tensor[(975), bool] */, %534, %550, %551, %552, %var_6971, meta[relay.Constant][31] /* ty=Tensor[(504), float32] */, %553, %554, meta[relay.Constant][32] /* ty=Tensor[(77, 7), float64] */)
}

def @func_2526() -> Tensor[(13, 5, 1), float32] {
  @func_2524() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_6142() -> Tensor[(13, 5, 1), float32] {
  %556 = fn () -> Tensor[(13, 5, 1), float32] {
    %555 = @func_3940() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */;
    %555.1
  };
  %556() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_2319() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) {
  @func_2317() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */
}

def @func_1526() -> Tensor[(13, 5, ?), bool] {
  %557 = @func_1323() /* ty=(Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) */;
  %557.2
}

def @func_2450() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) {
  %561 = fn () -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) {
    %558 = @func_2212() /* ty=(Tensor[(13, 5, 1), float32],) */;
    %559 = @func_1139() /* ty=Tensor[(13, 5, 1), float32] */;
    %560 = %558.0;
    (%559, %560)
  };
  %561() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */
}

def @func_4803() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) {
  @func_4801() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */
}

def @func_2023(%var_2020: Tensor[(504), float32]) -> (Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) {
  %562 = @func_1626() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %563 = cast(%var_2020, dtype="float32") /* ty=Tensor[(504), float32] */;
  %564 = reshape(%563, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %565 = @func_58(%564) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %566 = %562.1;
  %567 = %565.0;
  (%566, %567, %var_2020)
}

def @func_4231(%var_4229: Tensor[(13, 5, 5), float32]) -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 5), float32]) {
  @func_4228(%var_4229) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 5), float32]) */
}

def @func_1938() -> Tensor[(13, 5, 1), float32] {
  @func_1936() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_1936() -> Tensor[(13, 5, 1), float32] {
  @func_1534() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_4702(%var_4678: uint8, %var_4679: Tensor[(14, 13, 7), uint8], %var_4692: Tensor[(14, 13, 7), uint8]) -> (Tensor[(13, 5, 1), float32], Tensor[(8, 1, 4), float32], Tensor[(14, 13, 7), bool]) {
  %568 = cast(%var_4678, dtype="float32") /* ty=float32 */;
  %569 = cast(meta[relay.Constant][33] /* ty=Tensor[(8, 1, 4), uint8] */, dtype="float32") /* ty=Tensor[(8, 1, 4), float32] */;
  %570 = cast(%var_4678, dtype="uint8") /* ty=uint8 */;
  %571 = cast(%var_4679, dtype="uint8") /* ty=Tensor[(14, 13, 7), uint8] */;
  %572 = right_shift(%570, %571) /* ty=Tensor[(14, 13, 7), uint8] */;
  %573 = cast(%var_4692, dtype="bool") /* ty=Tensor[(14, 13, 7), bool] */;
  %574 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%572, dtype="bool") /* ty=Tensor[(14, 13, 7), bool] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %577 = @func_1906() /* ty=Tensor[(13, 5, 1), float32] */;
  %578 = power(%568, %569) /* ty=Tensor[(8, 1, 4), float32] */;
  %579 = logical_or(%575, %576) /* ty=Tensor[(14, 13, 7), bool] */;
  (%577, %578, %579)
}

def @func_3445() -> Tensor[(13, 5, 1), float32] {
  @func_3443() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_4303() -> (Tensor[(13, 5, ?), float64],) {
  @func_4301() /* ty=(Tensor[(13, 5, ?), float64],) */
}

def @func_574(%var_573: Tensor[(11, 8, 9), int32]) -> (Tensor[(11, 8, 9), bool],) {
  %585 = fn (%var_550: Tensor[(11, 8, 9), int32]) -> (Tensor[(11, 8, 9), bool],) {
    %580 = cast(%var_550, dtype="bool") /* ty=Tensor[(11, 8, 9), bool] */;
    %581 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(11, 8, 9), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %582 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 8, 9), int32] */, dtype="bool") /* ty=Tensor[(11, 8, 9), bool] */;
    %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %584 = equal(%582, %583) /* ty=Tensor[(11, 8, 9), bool] */;
    (%584,)
  };
  %585(%var_573) /* ty=(Tensor[(11, 8, 9), bool],) */
}

def @func_1584() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) {
  %586 = @func_1526() /* ty=Tensor[(13, 5, ?), bool] */;
  %587 = @func_1526() /* ty=Tensor[(13, 5, ?), bool] */;
  (%586, %587)
}

def @func_3402(%var_3400: float64, %var_3401: Tensor[(7, 11, 7), float64]) -> (Tensor[(7, 11, 7), float64], Tensor[(13, 5, ?), bool]) {
  %593 = fn (%var_3387: float64, %var_3388: Tensor[(7, 11, 7), float64]) -> (Tensor[(7, 11, 7), float64], Tensor[(13, 5, ?), bool]) {
    %588 = cast(%var_3387, dtype="float64") /* ty=float64 */;
    %589 = cast(%var_3388, dtype="float64") /* ty=Tensor[(7, 11, 7), float64] */;
    %590 = @func_2636() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */;
    %591 = mod(%588, %589) /* ty=Tensor[(7, 11, 7), float64] */;
    %592 = %590.1;
    (%591, %592)
  };
  %593(%var_3400, %var_3401) /* ty=(Tensor[(7, 11, 7), float64], Tensor[(13, 5, ?), bool]) */
}

def @func_3793(%var_3791: Tensor[(7, 15, 15), int64], %var_3792: Tensor[(504), float32]) -> (Tensor[(7, 15, 15), bool], Tensor[(13, 5, 1), float32], Tensor[(504), float32]) {
  %603 = fn (%var_3774: Tensor[(7, 15, 15), int64], %var_3781: Tensor[(504), float32]) -> (Tensor[(7, 15, 15), bool], Tensor[(13, 5, 1), float32], Tensor[(504), float32]) {
    %594 = cast(meta[relay.Constant][35] /* ty=Tensor[(7, 15, 15), int64] */, dtype="bool") /* ty=Tensor[(7, 15, 15), bool] */;
    %595 = shape_of(%var_3774, dtype="int32") /* ty=Tensor[(3), int32] */;
    %596 = cast(%var_3774, dtype="bool") /* ty=Tensor[(7, 15, 15), bool] */;
    %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %598 = cast(%var_3781, dtype="float32") /* ty=Tensor[(504), float32] */;
    %599 = reshape(%598, newshape=[504]) /* ty=Tensor[(504), float32] */;
    %600 = @func_2846(%599) /* ty=(Tensor[(13, 5, ?), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 8, 15), float32], Tensor[(1, 1560), float64], Tensor[(13, 5, 1), float32]) */;
    %601 = not_equal(%596, %597) /* ty=Tensor[(7, 15, 15), bool] */;
    %602 = %600.6;
    (%601, %602, %var_3781)
  };
  %603(%var_3791, %var_3792) /* ty=(Tensor[(7, 15, 15), bool], Tensor[(13, 5, 1), float32], Tensor[(504), float32]) */
}

def @func_2010(%var_1963: Tensor[(504), float32], %var_1975: Tensor[(54, 6), float32], %var_1985: Tensor[(784), float32]) -> (Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], Tensor[(15, 12, 10), float64], Tensor[(1800), int32], Tensor[(54, 6), float32], Tensor[(16, 7, 7), float64], Tensor[(784), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool], Tensor[(455), uint16], Tensor[(13, 5, ?), float32]) {
  %604 = cast(%var_1963, dtype="float32") /* ty=Tensor[(504), float32] */;
  %605 = reshape(%604, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %606 = @func_58(%605) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %607 = cast(meta[relay.Constant][36] /* ty=Tensor[(1800), int32] */, dtype="int32") /* ty=Tensor[(1800), int32] */;
  %608 = cast(%var_1975, dtype="float32") /* ty=Tensor[(54, 6), float32] */;
  %609 = %606.1;
  %610 = cast(%609, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
  %611 = reshape(%607, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), int32] */;
  %612 = reshape(%608, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %613 = reshape(%610, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %614 = @func_1214(%611, %612, %613) /* ty=(Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), float64], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(504), float32], Tensor[(15, 12, 10), float32]) */;
  %615 = cast(%var_1985, dtype="float32") /* ty=Tensor[(784), float32] */;
  %616 = reshape(%615, newshape=[16, 7, 7]) /* ty=Tensor[(16, 7, 7), float32] */;
  %617 = @func_1387(%616) /* ty=(Tensor[(16, 7, 7), int8], Tensor[(16, 7, 7), float64], Tensor[(13, 5, 5), int8]) */;
  %618 = cast(meta[relay.Constant][37] /* ty=Tensor[(455), uint16] */, dtype="uint16") /* ty=Tensor[(455), uint16] */;
  %619 = reshape(%618, newshape=[13, 5, 7]) /* ty=Tensor[(13, 5, 7), uint16] */;
  %620 = @func_1474(%619) /* ty=(Tensor[(13, 5, 7), int8], Tensor[(13, 5, ?), bool]) */;
  %621 = @func_1584() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %622 = %621.0;
  %623 = @func_1906() /* ty=Tensor[(13, 5, 1), float32] */;
  %624 = cast(%623, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %625 = shape_of(%622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(%622, dtype="float32") /* ty=Tensor[(13, 5, ?), float32] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %628 = @func_1726() /* ty=Tensor[(13, 5, 1), float32] */;
  %629 = %614.2;
  %630 = %617.1;
  %631 = @func_1534() /* ty=Tensor[(13, 5, 1), float32] */;
  %632 = %620.1;
  %633 = divide(%626, %627) /* ty=Tensor[(13, 5, ?), float32] */;
  (%609, %var_1963, %628, %629, meta[relay.Constant][36] /* ty=Tensor[(1800), int32] */, %var_1975, %630, %var_1985, %631, %632, meta[relay.Constant][37] /* ty=Tensor[(455), uint16] */, %633)
}

def @func_2929(%var_2925: Tensor[(13, 5, 15), float32], %var_2926: Tensor[(90, 20), int32], %var_2927: Tensor[(324), float32], %var_2928: Tensor[(504), float32]) -> (Tensor[(13, 5, 15), float64], Tensor[(15, 12, 10), bool], Tensor[(90, 20), int32], Tensor[(324), float32], Tensor[(504), float32]) {
  @func_2923(%var_2925, %var_2926, %var_2927, %var_2928) /* ty=(Tensor[(13, 5, 15), float64], Tensor[(15, 12, 10), bool], Tensor[(90, 20), int32], Tensor[(324), float32], Tensor[(504), float32]) */
}

def @func_2716() -> Tensor[(13, 5, 1), float32] {
  @func_2714() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_368(%var_366: Tensor[(6, 6, 9), float32], %var_367: Tensor[(504, 1), float32]) -> (Tensor[(6, 6, 9), bool], Tensor[(12, 6, 7), float32], Tensor[(504, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(6, 6, 9), float32]) {
  @func_364(%var_366, %var_367) /* ty=(Tensor[(6, 6, 9), bool], Tensor[(12, 6, 7), float32], Tensor[(504, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(6, 6, 9), float32]) */
}

def @func_5872(%var_5868: Tensor[(13, 5, 15), float32], %var_5869: Tensor[(504), float32], %var_5870: Tensor[(324), float32], %var_5871: Tensor[(784, 1), float32]) -> (Tensor[(13, 5, 15), bool], Tensor[(504), float32], Tensor[(504), float32], Tensor[(324), float32], Tensor[(784, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), uint16]) {
  @func_5866(%var_5868, %var_5869, %var_5870, %var_5871) /* ty=(Tensor[(13, 5, 15), bool], Tensor[(504), float32], Tensor[(504), float32], Tensor[(324), float32], Tensor[(784, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), uint16]) */
}

def @func_1140() -> Tensor[(13, 5, 1), float32] {
  %635 = fn () -> Tensor[(13, 5, 1), float32] {
    %634 = cast(meta[relay.Constant][38] /* ty=Tensor[(13, 5, 1), float32] */, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
    acos(%634) /* ty=Tensor[(13, 5, 1), float32] */
  };
  %635() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_1325() -> (Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) {
  @func_1323() /* ty=(Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) */
}

def @func_5399(%var_5397: Tensor[(1, 3, 9), float32]) -> (Tensor[(1, 3, 9), float32],) {
  @func_5396(%var_5397) /* ty=(Tensor[(1, 3, 9), float32],) */
}

def @func_5424() -> Tensor[(13, 5, 1), float32] {
  @func_3658() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_3811() -> (Tensor[(13, 5, ?), bool],) {
  %636 = @func_2636() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */;
  %637 = %636.1;
  (%637,)
}

def @func_5496() -> (Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(13, 5, 504), float32]) {
  %638 = cast(meta[relay.Constant][39] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %639 = reshape(%638, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %640 = @func_58(%639) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %641 = @func_2524() /* ty=Tensor[(13, 5, 1), float32] */;
  %642 = cast(%641, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  %643 = cast(meta[relay.Constant][39] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %644 = @func_5424() /* ty=Tensor[(13, 5, 1), float32] */;
  %645 = %640.0;
  %646 = power(%642, %643) /* ty=Tensor[(13, 5, 504), float32] */;
  (%644, %645, %646)
}

def @func_5309(%var_5307: Tensor[(2, 392), float32]) -> (Tensor[(13, 5, ?), bool], Tensor[(504), float32], Tensor[(504), float32], Tensor[(2, 392), float32], Tensor[(13, 5, 1), float32]) {
  @func_5306(%var_5307) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(504), float32], Tensor[(504), float32], Tensor[(2, 392), float32], Tensor[(13, 5, 1), float32]) */
}

def @func_2068() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) {
  %651 = fn () -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) {
    %647 = @func_1763() /* ty=(Tensor[(8, 14, 4), bool], Tensor[(13, 5, ?), bool], Tensor[(11, 8, 9), bool], Tensor[(396, 2), int32]) */;
    %648 = @func_1626() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
    %649 = %647.1;
    %650 = %648.0;
    (%649, %650)
  };
  %651() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */
}

def @func_4065() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 7), bool], Tensor[(455, 1), float32]) {
  %652 = cast(meta[relay.Constant][40] /* ty=Tensor[(455, 1), float32] */, dtype="float32") /* ty=Tensor[(455, 1), float32] */;
  %653 = reshape(%652, newshape=[13, 5, 7]) /* ty=Tensor[(13, 5, 7), float32] */;
  %654 = @func_2791(%653) /* ty=(Tensor[(13, 5, 7), bool],) */;
  %655 = @func_2577() /* ty=Tensor[(13, 5, 1), float32] */;
  %656 = %654.0;
  (%655, %656, meta[relay.Constant][40] /* ty=Tensor[(455, 1), float32] */)
}

def @func_5099() -> (Tensor[(13, 5, ?), bool],) {
  %657 = @func_1526() /* ty=Tensor[(13, 5, ?), bool] */;
  (%657,)
}

def @func_6087(%var_6086: Tensor[(11, 8, 9), bool]) -> (Tensor[(11, 8, 9), float32],) {
  %665 = fn (%var_6070: Tensor[(11, 8, 9), bool]) -> (Tensor[(11, 8, 9), float32],) {
    %658 = @func_1763() /* ty=(Tensor[(8, 14, 4), bool], Tensor[(13, 5, ?), bool], Tensor[(11, 8, 9), bool], Tensor[(396, 2), int32]) */;
    %659 = %658.2;
    %660 = cast(%var_6070, dtype="float32") /* ty=Tensor[(11, 8, 9), float32] */;
    %661 = shape_of(%659, dtype="int32") /* ty=Tensor[(3), int32] */;
    %662 = cast(%659, dtype="float32") /* ty=Tensor[(11, 8, 9), float32] */;
    %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %664 = divide(%662, %663) /* ty=Tensor[(11, 8, 9), float32] */;
    (%664,)
  };
  %665(%var_6086) /* ty=(Tensor[(11, 8, 9), float32],) */
}

def @func_3205(%var_3199: Tensor[(10, 9, 11), float32], %var_3200: Tensor[(10, 9, 11), float32]) -> Tensor[(10, 9, 11), float32] {
  %666 = cast(%var_3200, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %667 = shape_of(%var_3199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%var_3199, dtype="float32") /* ty=Tensor[(10, 9, 11), float32] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%668, %669) /* ty=Tensor[(10, 9, 11), float32] */
}

def @func_3465() -> (Tensor[(13, 5, 1), float32],) {
  %671 = fn () -> (Tensor[(13, 5, 1), float32],) {
    %670 = @func_3419() /* ty=Tensor[(13, 5, 1), float32] */;
    (%670,)
  };
  %671() /* ty=(Tensor[(13, 5, 1), float32],) */
}

def @func_7000(%var_6997: Tensor[(16, 9, 13), float64], %var_6998: Tensor[(1274), uint8], %var_6999: Tensor[(1800), int32]) -> (Tensor[(16, 9, 13), float64], Tensor[(16, 9, 13), float32], Tensor[(13, 5, 15), float64], Tensor[(975), bool], Tensor[(3, 9, 12), uint8], Tensor[(1274), uint32], Tensor[(8, 1, 4), bool], Tensor[(15, 12, 10), bool], Tensor[(1800), int32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool], Tensor[(77, 7), float64]) {
  @func_6995(%var_6997, %var_6998, %var_6999) /* ty=(Tensor[(16, 9, 13), float64], Tensor[(16, 9, 13), float32], Tensor[(13, 5, 15), float64], Tensor[(975), bool], Tensor[(3, 9, 12), uint8], Tensor[(1274), uint32], Tensor[(8, 1, 4), bool], Tensor[(15, 12, 10), bool], Tensor[(1800), int32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool], Tensor[(77, 7), float64]) */
}

def @func_7199() -> (Tensor[(13, 5, 1), float32],) {
  %672 = @func_4468() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float64]) */;
  %673 = %672.0;
  (%673,)
}

def @func_2714() -> Tensor[(13, 5, 1), float32] {
  %674 = @func_2212() /* ty=(Tensor[(13, 5, 1), float32],) */;
  %674.0
}

def @func_5738() -> Tensor[(13, 5, 1), float32] {
  @func_5736() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_6803(%var_6788: Tensor[(576), float32], %var_6794: Tensor[(1575), int64]) -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(3, 12, 16), float32], Tensor[(576), float32], Tensor[(7, 15, 15), bool], Tensor[(1575), int64], Tensor[(504), float32], Tensor[(13, 5, 1), float32]) {
  %675 = @func_6544() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */;
  %676 = @func_2449() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */;
  %677 = cast(%var_6788, dtype="float32") /* ty=Tensor[(576), float32] */;
  %678 = reshape(%677, newshape=[576]) /* ty=Tensor[(576), float32] */;
  %679 = @func_2666(%678) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(3, 12, 16), float32], Tensor[(576), float32], Tensor[(13, 5, ?), bool]) */;
  %680 = cast(%var_6794, dtype="int64") /* ty=Tensor[(1575), int64] */;
  %681 = cast(meta[relay.Constant][41] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %682 = reshape(%680, newshape=[7, 15, 15]) /* ty=Tensor[(7, 15, 15), int64] */;
  %683 = reshape(%681, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %684 = @func_3790(%682, %683) /* ty=(Tensor[(7, 15, 15), bool], Tensor[(13, 5, 1), float32], Tensor[(504), float32]) */;
  %685 = %675.1;
  %686 = %676.0;
  %687 = %679.1;
  %688 = %684.0;
  %689 = @func_5736() /* ty=Tensor[(13, 5, 1), float32] */;
  (%685, %686, %687, %var_6788, %688, %var_6794, meta[relay.Constant][41] /* ty=Tensor[(504), float32] */, %689)
}

def @func_4067() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 7), bool], Tensor[(455, 1), float32]) {
  @func_4065() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 7), bool], Tensor[(455, 1), float32]) */
}

def @func_6232(%var_6230: Tensor[(650), float32]) -> (Tensor[(13, 5, 1), float64], Tensor[(13, 5, 10), bool], Tensor[(13, 5, 1), float32]) {
  @func_6229(%var_6230) /* ty=(Tensor[(13, 5, 1), float64], Tensor[(13, 5, 10), bool], Tensor[(13, 5, 1), float32]) */
}

def @func_2317() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) {
  %690 = @func_1534() /* ty=Tensor[(13, 5, 1), float32] */;
  %691 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  (%690, %691)
}

def @func_4518(%var_4516: Tensor[(11, 1, 9), int8]) -> (Tensor[(11, 1, 9), int8],) {
  @func_4515(%var_4516) /* ty=(Tensor[(11, 1, 9), int8],) */
}

def @func_1586() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) {
  @func_1584() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */
}

def @func_1474(%var_1449: Tensor[(13, 5, 7), uint16]) -> (Tensor[(13, 5, 7), int8], Tensor[(13, 5, ?), bool]) {
  %692 = @func_1323() /* ty=(Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) */;
  %693 = %692.0;
  %694 = cast(%693, dtype="int8") /* ty=Tensor[(13, 5, ?), int8] */;
  %695 = cast(%var_1449, dtype="int8") /* ty=Tensor[(13, 5, 7), int8] */;
  %696 = @func_1323() /* ty=(Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) */;
  %697 = right_shift(%694, %695) /* ty=Tensor[(13, 5, 7), int8] */;
  %698 = %696.2;
  (%697, %698)
}

def @func_6104() -> Tensor[(3, 9, 12), uint8] {
  %703 = fn () -> Tensor[(3, 9, 12), uint8] {
    %699 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 9, 12), uint8] */, dtype="uint8") /* ty=Tensor[(3, 9, 12), uint8] */;
    %700 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(3, 9, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %701 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 9, 12), uint8] */, dtype="uint8") /* ty=Tensor[(3, 9, 12), uint8] */;
    %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    bitwise_and(%701, %702) /* ty=Tensor[(3, 9, 12), uint8] */
  };
  %703() /* ty=Tensor[(3, 9, 12), uint8] */
}

def @func_6267() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), float32], Tensor[(504), float32]) {
  %709 = fn () -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), float32], Tensor[(504), float32]) {
    %704 = cast(meta[relay.Constant][44] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %705 = reshape(%704, newshape=[504]) /* ty=Tensor[(504), float32] */;
    %706 = @func_2846(%705) /* ty=(Tensor[(13, 5, ?), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 8, 15), float32], Tensor[(1, 1560), float64], Tensor[(13, 5, 1), float32]) */;
    %707 = @func_1534() /* ty=Tensor[(13, 5, 1), float32] */;
    %708 = %706.0;
    (%707, %708, meta[relay.Constant][44] /* ty=Tensor[(504), float32] */)
  };
  %709() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), float32], Tensor[(504), float32]) */
}

def @func_7288(%var_7287: Tensor[(8, 11, 6), float64]) -> Tensor[(8, 11, 6), float64] {
  %711 = fn (%var_7273: Tensor[(8, 11, 6), float64]) -> Tensor[(8, 11, 6), float64] {
    %710 = cast(%var_7273, dtype="float64") /* ty=Tensor[(8, 11, 6), float64] */;
    log2(%710) /* ty=Tensor[(8, 11, 6), float64] */
  };
  %711(%var_7287) /* ty=Tensor[(8, 11, 6), float64] */
}

def @func_6124() -> Tensor[(13, 5, 1), float32] {
  @func_1936() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_6725() -> Tensor[(13, 5, ?), bool] {
  %712 = fn () -> Tensor[(13, 5, ?), bool] {
    @func_4616() /* ty=Tensor[(13, 5, ?), bool] */
  };
  %712() /* ty=Tensor[(13, 5, ?), bool] */
}

def @func_5498() -> (Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(13, 5, 504), float32]) {
  @func_5496() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(13, 5, 504), float32]) */
}

def @func_1219(%var_1216: Tensor[(15, 12, 10), int32], %var_1217: Tensor[(324), float32], %var_1218: Tensor[(504), float32]) -> (Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), float64], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(504), float32], Tensor[(15, 12, 10), float32]) {
  @func_1214(%var_1216, %var_1217, %var_1218) /* ty=(Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), bool], Tensor[(15, 12, 10), float64], Tensor[(6, 6, 9), float32], Tensor[(324), float32], Tensor[(504), float32], Tensor[(15, 12, 10), float32]) */
}

def @func_2666(%var_2655: Tensor[(576), float32]) -> (Tensor[(13, 5, 1), float32], Tensor[(3, 12, 16), float32], Tensor[(576), float32], Tensor[(13, 5, ?), bool]) {
  %713 = cast(%var_2655, dtype="float32") /* ty=Tensor[(576), float32] */;
  %714 = reshape(%713, newshape=[3, 12, 16]) /* ty=Tensor[(3, 12, 16), float32] */;
  %715 = @func_2163(%714) /* ty=(Tensor[(3, 12, 16), float32],) */;
  %716 = @func_2078() /* ty=(Tensor[(13, 5, ?), bool],) */;
  %717 = @func_1936() /* ty=Tensor[(13, 5, 1), float32] */;
  %718 = %715.0;
  %719 = %716.0;
  (%717, %718, %var_2655, %719)
}

def @func_2373(%var_2371: Tensor[(7, 14, 5), bool], %var_2372: Tensor[(7, 14, 5), bool]) -> (Tensor[(7, 14, 5), bool],) {
  %725 = fn (%var_2356: Tensor[(7, 14, 5), bool], %var_2357: Tensor[(7, 14, 5), bool]) -> (Tensor[(7, 14, 5), bool],) {
    %720 = cast(%var_2357, dtype="bool") /* ty=Tensor[(7, 14, 5), bool] */;
    %721 = shape_of(%var_2356, dtype="int32") /* ty=Tensor[(3), int32] */;
    %722 = cast(%var_2356, dtype="bool") /* ty=Tensor[(7, 14, 5), bool] */;
    %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %724 = logical_and(%722, %723) /* ty=Tensor[(7, 14, 5), bool] */;
    (%724,)
  };
  %725(%var_2371, %var_2372) /* ty=(Tensor[(7, 14, 5), bool],) */
}

def @func_2669(%var_2667: Tensor[(576), float32]) -> (Tensor[(13, 5, 1), float32], Tensor[(3, 12, 16), float32], Tensor[(576), float32], Tensor[(13, 5, ?), bool]) {
  @func_2666(%var_2667) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(3, 12, 16), float32], Tensor[(576), float32], Tensor[(13, 5, ?), bool]) */
}

def @func_3419() -> Tensor[(13, 5, 1), float32] {
  @func_1726() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_4591() -> (Tensor[(13, 5, 1), float32],) {
  %727 = fn () -> (Tensor[(13, 5, 1), float32],) {
    %726 = @func_3419() /* ty=Tensor[(13, 5, 1), float32] */;
    (%726,)
  };
  %727() /* ty=(Tensor[(13, 5, 1), float32],) */
}

def @func_3323() -> (Tensor[(13, 5, 1), float32],) {
  @func_3321() /* ty=(Tensor[(13, 5, 1), float32],) */
}

def @func_3958() -> (Tensor[(13, 5, 1), float32],) {
  %730 = fn () -> (Tensor[(13, 5, 1), float32],) {
    %728 = @func_2212() /* ty=(Tensor[(13, 5, 1), float32],) */;
    %729 = %728.0;
    (%729,)
  };
  %730() /* ty=(Tensor[(13, 5, 1), float32],) */
}

def @func_1535() -> Tensor[(13, 5, 1), float32] {
  %731 = fn () -> Tensor[(13, 5, 1), float32] {
    @func_1139() /* ty=Tensor[(13, 5, 1), float32] */
  };
  %731() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_2524() -> Tensor[(13, 5, 1), float32] {
  %732 = @func_1936() /* ty=Tensor[(13, 5, 1), float32] */;
  %733 = cast(%732, dtype="float64") /* ty=Tensor[(13, 5, 1), float64] */;
  %734 = sin(%733) /* ty=Tensor[(13, 5, 1), float64] */;
  %735 = cast(%734, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
  atanh(%735) /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_3813() -> (Tensor[(13, 5, ?), bool],) {
  @func_3811() /* ty=(Tensor[(13, 5, ?), bool],) */
}

def @func_707(%var_683: Tensor[(2, 6, 2), float32]) -> Tensor[(2, 6, 2), float32] {
  %736 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 6, 2), float32] */, dtype="float32") /* ty=Tensor[(2, 6, 2), float32] */;
  %737 = shape_of(%var_683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%var_683, dtype="float32") /* ty=Tensor[(2, 6, 2), float32] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%738, %739) /* ty=Tensor[(2, 6, 2), float32] */
}

def @func_2695() -> (Tensor[(13, 5, ?), float32],) {
  @func_2693() /* ty=(Tensor[(13, 5, ?), float32],) */
}

def @func_1697() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, 1), float32]) {
  %740 = @func_1584() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %741 = %740.1;
  %742 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
  (%741, %742)
}

def @func_3576(%var_3574: Tensor[(13, 5, 1), bool]) -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), uint64]) {
  @func_3573(%var_3574) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), uint64]) */
}

def @func_4340(%var_4338: Tensor[(13, 5, 14), float32]) -> (Tensor[(1560), float64], Tensor[(13, 5, ?), bool], Tensor[(13, 5, 14), uint32], Tensor[(13, 5, ?), int64]) {
  @func_4337(%var_4338) /* ty=(Tensor[(1560), float64], Tensor[(13, 5, ?), bool], Tensor[(13, 5, 14), uint32], Tensor[(13, 5, ?), int64]) */
}

def @func_6546() -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) {
  @func_6544() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool]) */
}

def @func_1144() -> Tensor[(13, 5, 1), float32] {
  %743 = fn () -> Tensor[(13, 5, 1), float32] {
    @func_1139() /* ty=Tensor[(13, 5, 1), float32] */
  };
  %743() /* ty=Tensor[(13, 5, 1), float32] */
}

def @func_1765() -> (Tensor[(8, 14, 4), bool], Tensor[(13, 5, ?), bool], Tensor[(11, 8, 9), bool], Tensor[(396, 2), int32]) {
  @func_1763() /* ty=(Tensor[(8, 14, 4), bool], Tensor[(13, 5, ?), bool], Tensor[(11, 8, 9), bool], Tensor[(396, 2), int32]) */
}

def @func_3977() -> (Tensor[(13, 5, 1), float32],) {
  %746 = fn () -> (Tensor[(13, 5, 1), float32],) {
    %744 = @func_2212() /* ty=(Tensor[(13, 5, 1), float32],) */;
    %745 = %744.0;
    (%745,)
  };
  %746() /* ty=(Tensor[(13, 5, 1), float32],) */
}

def @func_4145(%var_4143: Tensor[(13, 5, 10), float32]) -> Tensor[(13, 5, 10), bool] {
  @func_4142(%var_4143) /* ty=Tensor[(13, 5, 10), bool] */
}

def @func_2310(%var_2309: Tensor[(13, 8, 15), float64]) -> (Tensor[(13, 8, 15), float32],) {
  %754 = fn (%var_2279: Tensor[(13, 8, 15), float64]) -> (Tensor[(13, 8, 15), float32],) {
    %747 = cast(%var_2279, dtype="float64") /* ty=Tensor[(13, 8, 15), float64] */;
    %748 = sigmoid(%747) /* ty=Tensor[(13, 8, 15), float64] */;
    %749 = cast(%var_2279, dtype="float32") /* ty=Tensor[(13, 8, 15), float32] */;
    %750 = shape_of(%748, dtype="int32") /* ty=Tensor[(3), int32] */;
    %751 = cast(%748, dtype="float32") /* ty=Tensor[(13, 8, 15), float32] */;
    %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %753 = divide(%751, %752) /* ty=Tensor[(13, 8, 15), float32] */;
    (%753,)
  };
  %754(%var_2309) /* ty=(Tensor[(13, 8, 15), float32],) */
}

def @func_1390(%var_1388: Tensor[(16, 7, 7), float32]) -> (Tensor[(16, 7, 7), int8], Tensor[(16, 7, 7), float64], Tensor[(13, 5, 5), int8]) {
  @func_1387(%var_1388) /* ty=(Tensor[(16, 7, 7), int8], Tensor[(16, 7, 7), float64], Tensor[(13, 5, 5), int8]) */
}

def @func_4045(%var_4043: Tensor[(1, 975), bool]) -> (Tensor[(13, 5, 1), float32], Tensor[(13, 5, 15), float64], Tensor[(1, 975), bool]) {
  @func_4042(%var_4043) /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 15), float64], Tensor[(1, 975), bool]) */
}

def @func_4925() -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) {
  %758 = fn () -> (Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) {
    %755 = @func_2078() /* ty=(Tensor[(13, 5, ?), bool],) */;
    %756 = @func_4616() /* ty=Tensor[(13, 5, ?), bool] */;
    %757 = %755.0;
    (%756, %757)
  };
  %758() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */
}

def @func_7201() -> (Tensor[(13, 5, 1), float32],) {
  @func_7199() /* ty=(Tensor[(13, 5, 1), float32],) */
}

def @func_5572() -> (Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) {
  %767 = fn () -> (Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) {
    %759 = @func_5496() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(13, 5, 504), float32]) */;
    %760 = %759.0;
    %761 = cast(%760, dtype="float32") /* ty=Tensor[(13, 5, 1), float32] */;
    %762 = cast(meta[relay.Constant][46] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %763 = reshape(%762, newshape=[504]) /* ty=Tensor[(504), float32] */;
    %764 = @func_2023(%763) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) */;
    %765 = sigmoid(%761) /* ty=Tensor[(13, 5, 1), float32] */;
    %766 = %764.1;
    (%765, %766, meta[relay.Constant][46] /* ty=Tensor[(504), float32] */)
  };
  %767() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) */
}

def @func_3090(%var_3083: Tensor[(1, 96), uint8]) -> (Tensor[(13, 5, 1), float32], Tensor[(6, 16, 1), uint8], Tensor[(1, 96), uint8], Tensor[(13, 5, ?), bool]) {
  %768 = @func_2449() /* ty=(Tensor[(13, 5, 1), float32], Tensor[(13, 5, 1), float32]) */;
  %769 = cast(%var_3083, dtype="uint8") /* ty=Tensor[(1, 96), uint8] */;
  %770 = reshape(%769, newshape=[6, 16, 1]) /* ty=Tensor[(6, 16, 1), uint8] */;
  %771 = @func_2109(%770) /* ty=(Tensor[(6, 16, 1), uint8],) */;
  %772 = @func_2955() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %773 = %768.1;
  %774 = %771.0;
  %775 = %772.1;
  (%773, %774, %var_3083, %775)
}

def @func_2848(%var_2847: Tensor[(504), float32]) -> (Tensor[(13, 5, ?), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 8, 15), float32], Tensor[(1, 1560), float64], Tensor[(13, 5, 1), float32]) {
  %788 = fn (%var_2823: Tensor[(504), float32]) -> (Tensor[(13, 5, ?), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 8, 15), float32], Tensor[(1, 1560), float64], Tensor[(13, 5, 1), float32]) {
    %776 = @func_2693() /* ty=(Tensor[(13, 5, ?), float32],) */;
    %777 = cast(%var_2823, dtype="float32") /* ty=Tensor[(504), float32] */;
    %778 = reshape(%777, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
    %779 = @func_58(%778) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
    %780 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 1560), float64] */, dtype="float64") /* ty=Tensor[(1, 1560), float64] */;
    %781 = reshape(%780, newshape=[13, 8, 15]) /* ty=Tensor[(13, 8, 15), float64] */;
    %782 = @func_2308(%781) /* ty=(Tensor[(13, 8, 15), float32],) */;
    %783 = %776.0;
    %784 = @func_1906() /* ty=Tensor[(13, 5, 1), float32] */;
    %785 = %779.1;
    %786 = %782.0;
    %787 = @func_2714() /* ty=Tensor[(13, 5, 1), float32] */;
    (%783, %784, %785, %var_2823, %786, meta[relay.Constant][47] /* ty=Tensor[(1, 1560), float64] */, %787)
  };
  %788(%var_2847) /* ty=(Tensor[(13, 5, ?), float32], Tensor[(13, 5, 1), float32], Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 8, 15), float32], Tensor[(1, 1560), float64], Tensor[(13, 5, 1), float32]) */
}

def @func_3648(%var_3646: Tensor[(13, 5, 1), float32], %var_3647: Tensor[(1560), float64]) -> (Tensor[(13, 5, ?), float64], Tensor[(13, 8, 15), float32], Tensor[(1560), float64], Tensor[(13, 5, ?), float32]) {
  %801 = fn (%var_3631: Tensor[(13, 5, 1), float32], %var_3637: Tensor[(1560), float64]) -> (Tensor[(13, 5, ?), float64], Tensor[(13, 8, 15), float32], Tensor[(1560), float64], Tensor[(13, 5, ?), float32]) {
    %789 = @func_1143() /* ty=Tensor[(13, 5, 1), float32] */;
    %790 = cast(%var_3631, dtype="float64") /* ty=Tensor[(13, 5, 1), float64] */;
    %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
    %792 = cast(%789, dtype="float64") /* ty=Tensor[(13, 5, 1), float64] */;
    %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %794 = cast(%var_3637, dtype="float64") /* ty=Tensor[(1560), float64] */;
    %795 = reshape(%794, newshape=[13, 8, 15]) /* ty=Tensor[(13, 8, 15), float64] */;
    %796 = @func_2308(%795) /* ty=(Tensor[(13, 8, 15), float32],) */;
    %797 = @func_2693() /* ty=(Tensor[(13, 5, ?), float32],) */;
    %798 = floor_mod(%792, %793) /* ty=Tensor[(13, 5, ?), float64] */;
    %799 = %796.0;
    %800 = %797.0;
    (%798, %799, %var_3637, %800)
  };
  %801(%var_3646, %var_3647) /* ty=(Tensor[(13, 5, ?), float64], Tensor[(13, 8, 15), float32], Tensor[(1560), float64], Tensor[(13, 5, ?), float32]) */
}

def @func_5185(%var_5183: Tensor[(504), float32], %var_5184: Tensor[(784), float32]) -> (Tensor[(504), float32], Tensor[(13, 5, 784), int16], Tensor[(13, 5, 324), bool]) {
  %817 = fn (%var_5144: Tensor[(504), float32], %var_5146: Tensor[(784), float32]) -> (Tensor[(504), float32], Tensor[(13, 5, 784), int16], Tensor[(13, 5, 324), bool]) {
    %802 = cast(%var_5144, dtype="float32") /* ty=Tensor[(504), float32] */;
    %803 = cast(meta[relay.Constant][48] /* ty=Tensor[(324), float32] */, dtype="float32") /* ty=Tensor[(324), float32] */;
    %804 = cast(%var_5146, dtype="float32") /* ty=Tensor[(784), float32] */;
    %805 = reshape(%802, newshape=[504]) /* ty=Tensor[(504), float32] */;
    %806 = reshape(%803, newshape=[54, 6]) /* ty=Tensor[(54, 6), float32] */;
    %807 = reshape(%804, newshape=[784]) /* ty=Tensor[(784), float32] */;
    %808 = @func_2010(%805, %806, %807) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(504), float32], Tensor[(13, 5, 1), float32], Tensor[(15, 12, 10), float64], Tensor[(1800), int32], Tensor[(54, 6), float32], Tensor[(16, 7, 7), float64], Tensor[(784), float32], Tensor[(13, 5, 1), float32], Tensor[(13, 5, ?), bool], Tensor[(455), uint16], Tensor[(13, 5, ?), float32]) */;
    %809 = %808.11;
    %810 = cast(%var_5146, dtype="int16") /* ty=Tensor[(784), int16] */;
    %811 = cast(%809, dtype="int16") /* ty=Tensor[(13, 5, ?), int16] */;
    %812 = @func_3658() /* ty=Tensor[(13, 5, 1), float32] */;
    %813 = cast(meta[relay.Constant][48] /* ty=Tensor[(324), float32] */, dtype="bool") /* ty=Tensor[(324), bool] */;
    %814 = cast(%812, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
    %815 = bitwise_xor(%810, %811) /* ty=Tensor[(13, 5, 784), int16] */;
    %816 = logical_and(%813, %814) /* ty=Tensor[(13, 5, 324), bool] */;
    (%var_5144, %815, %816)
  };
  %817(%var_5183, %var_5184) /* ty=(Tensor[(504), float32], Tensor[(13, 5, 784), int16], Tensor[(13, 5, 324), bool]) */
}

def @func_5699() -> (Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) {
  %824 = fn () -> (Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) {
    %818 = @func_1697() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, 1), float32]) */;
    %819 = cast(meta[relay.Constant][49] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %820 = reshape(%819, newshape=[504]) /* ty=Tensor[(504), float32] */;
    %821 = @func_2023(%820) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) */;
    %822 = %818.0;
    %823 = %821.1;
    (%822, %823, meta[relay.Constant][49] /* ty=Tensor[(504), float32] */)
  };
  %824() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(504), float32]) */
}

def @func_1840(%var_1792: Tensor[(42), float32], %var_1793: Tensor[(324), float32], %var_1794: Tensor[(504), float32]) -> (Tensor[(504), float32], Tensor[(42), float32], Tensor[(324), float32], Tensor[(13, 5, 504), float64], Tensor[(11, 8, 9), bool], Tensor[(36, 22), int32], Tensor[(13, 5, ?), bool], Tensor[(12, 6, 7), float32], Tensor[(13, 5, ?), bool]) {
  %825 = cast(%var_1792, dtype="float32") /* ty=Tensor[(42), float32] */;
  %826 = cast(%var_1793, dtype="float32") /* ty=Tensor[(324), float32] */;
  %827 = cast(%var_1794, dtype="float32") /* ty=Tensor[(504), float32] */;
  %828 = reshape(%825, newshape=[3, 1, 14]) /* ty=Tensor[(3, 1, 14), float32] */;
  %829 = reshape(%826, newshape=[324]) /* ty=Tensor[(324), float32] */;
  %830 = reshape(%827, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %831 = @func_653(%828, %829, %830) /* ty=(Tensor[(3, 1, 14), float64], Tensor[(6, 6, 9), bool], Tensor[(324), float32], Tensor[(504), float32]) */;
  %832 = @func_1323() /* ty=(Tensor[(13, 5, ?), uint16], Tensor[(13, 5, ?), uint8], Tensor[(13, 5, ?), bool]) */;
  %833 = %832.2;
  %834 = cast(%833, dtype="float64") /* ty=Tensor[(13, 5, ?), float64] */;
  %835 = cast(%var_1794, dtype="float64") /* ty=Tensor[(504), float64] */;
  %836 = cast(meta[relay.Constant][50] /* ty=Tensor[(36, 22), int32] */, dtype="int32") /* ty=Tensor[(36, 22), int32] */;
  %837 = reshape(%836, newshape=[11, 8, 9]) /* ty=Tensor[(11, 8, 9), int32] */;
  %838 = @func_572(%837) /* ty=(Tensor[(11, 8, 9), bool],) */;
  %839 = %831.3;
  %840 = cast(%839, dtype="float32") /* ty=Tensor[(504), float32] */;
  %841 = reshape(%840, newshape=[252, 2]) /* ty=Tensor[(252, 2), float32] */;
  %842 = @func_1416(%841) /* ty=(Tensor[(13, 5, ?), bool], Tensor[(6, 6, 9), float32], Tensor[(324, 1), float32], Tensor[(252, 2), float32]) */;
  %843 = cast(%839, dtype="float32") /* ty=Tensor[(504), float32] */;
  %844 = reshape(%843, newshape=[12, 6, 7]) /* ty=Tensor[(12, 6, 7), float32] */;
  %845 = @func_58(%844) /* ty=(Tensor[(12, 6, 7), float32], Tensor[(12, 6, 7), float32]) */;
  %846 = @func_1584() /* ty=(Tensor[(13, 5, ?), bool], Tensor[(13, 5, ?), bool]) */;
  %847 = divide(%834, %835) /* ty=Tensor[(13, 5, 504), float64] */;
  %848 = %838.0;
  %849 = %842.0;
  %850 = %845.1;
  %851 = %846.1;
  (%839, %var_1792, %var_1793, %847, %848, meta[relay.Constant][50] /* ty=Tensor[(36, 22), int32] */, %849, %850, %851)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

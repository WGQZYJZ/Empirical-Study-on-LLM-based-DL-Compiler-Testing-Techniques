import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_279 = relay.var("var_279", dtype = "float64", shape = ())#candidate|279|()|var|float64
var_280 = relay.var("var_280", dtype = "float64", shape = (4, 4, 13))#candidate|280|(4, 4, 13)|var|float64
bop_281 = relay.greater(var_279.astype('bool'), var_280.astype('bool')) # shape=(4, 4, 13)
output = relay.Tuple([bop_281,])
output2 = relay.Tuple([bop_281,])
func_288 = relay.Function([var_279,var_280,], output)
mod['func_288'] = func_288
mod = relay.transform.InferType()(mod)
mutated_mod['func_288'] = func_288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_288_call = mutated_mod.get_global_var('func_288')
var_290 = relay.var("var_290", dtype = "float64", shape = ())#candidate|290|()|var|float64
var_291 = relay.var("var_291", dtype = "float64", shape = (4, 4, 13))#candidate|291|(4, 4, 13)|var|float64
call_289 = func_288_call(var_290,var_291,)
output = call_289
func_292 = relay.Function([var_290,var_291,], output)
mutated_mod['func_292'] = func_292
mutated_mod = relay.transform.InferType()(mutated_mod)
var_461 = relay.var("var_461", dtype = "uint16", shape = ())#candidate|461|()|var|uint16
var_462 = relay.var("var_462", dtype = "uint16", shape = (12, 2, 3))#candidate|462|(12, 2, 3)|var|uint16
bop_463 = relay.less_equal(var_461.astype('bool'), var_462.astype('bool')) # shape=(12, 2, 3)
output = relay.Tuple([bop_463,])
output2 = relay.Tuple([bop_463,])
func_490 = relay.Function([var_461,var_462,], output)
mod['func_490'] = func_490
mod = relay.transform.InferType()(mod)
mutated_mod['func_490'] = func_490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_490_call = mutated_mod.get_global_var('func_490')
var_492 = relay.var("var_492", dtype = "uint16", shape = ())#candidate|492|()|var|uint16
var_493 = relay.var("var_493", dtype = "uint16", shape = (12, 2, 3))#candidate|493|(12, 2, 3)|var|uint16
call_491 = func_490_call(var_492,var_493,)
output = call_491
func_494 = relay.Function([var_492,var_493,], output)
mutated_mod['func_494'] = func_494
mutated_mod = relay.transform.InferType()(mutated_mod)
var_843 = relay.var("var_843", dtype = "int16", shape = (12, 4, 15))#candidate|843|(12, 4, 15)|var|int16
var_844 = relay.var("var_844", dtype = "int16", shape = (12, 4, 15))#candidate|844|(12, 4, 15)|var|int16
bop_845 = relay.bitwise_and(var_843.astype('int16'), relay.reshape(var_844.astype('int16'), relay.shape_of(var_843))) # shape=(12, 4, 15)
func_288_call = mod.get_global_var('func_288')
func_292_call = mutated_mod.get_global_var('func_292')
var_849 = relay.var("var_849", dtype = "float64", shape = ())#candidate|849|()|var|float64
const_850 = relay.const([-5.510360,-1.241186,5.306503,8.203139,3.995333,-1.402678,-0.300472,2.759086,7.651772,6.888500,7.996200,-2.311172,-5.053619,1.463864,1.119949,-2.723326,7.827009,4.790057,0.144272,-1.832115,7.027908,3.926338,-2.265279,5.490744,-0.570198,9.543127,7.261139,0.119239,-9.678467,8.485946,3.994983,2.495786,-4.310685,7.610444,7.878038,-1.041511,-2.679216,7.715329,7.420923,9.844867,8.927837,5.723035,-7.948796,-1.678256,-6.136363,-5.942921,6.075271,-7.824485,4.264674,5.701140,-7.387149,5.360746,0.504210,5.623860,5.011890,6.598261,-2.759062,9.137355,4.023524,3.753340,5.819363,8.321956,-1.788631,-2.181921,5.629677,-5.488734,-4.420737,2.267722,-7.223497,-0.625483,5.902890,6.880754,-7.050378,-3.993782,-4.128474,2.253964,-2.528905,9.808803,4.568846,-0.362115,8.112749,-3.121351,-0.510749,-7.967009,-6.462285,-7.765594,-2.660316,7.397035,-6.751043,-8.389813,-8.672060,-8.850864,3.946601,9.797384,7.758360,8.159785,-5.172883,-1.306872,0.204612,-9.138540,8.129724,5.259244,-0.421986,2.673449,3.234561,3.450125,0.859234,-9.121573,3.372252,4.219418,4.354528,-5.518869,-3.980576,-8.628812,1.062753,-4.788423,1.068924,-2.641625,-5.153642,-8.452285,9.282466,2.825184,5.281193,1.210560,9.952881,1.386056,-8.628259,5.820141,4.926970,-4.444231,-7.804855,2.193763,8.952455,3.446918,2.189193,0.390973,0.633895,-0.837408,-4.899964,-8.328770,-1.868818,-4.756511,5.273309,-8.661709,4.376272,2.338484,0.553970,9.172658,-8.875320,-2.550649,-6.600429,-2.978382,7.063250,-7.708960,3.160141,4.084457,-9.885408,-2.611994,7.107755,-5.021426,1.622510,-2.914902,4.823752,7.600783,-1.895876,2.094032,6.395442,3.303629,-7.538665,-5.405006,-5.737321,-2.536577,4.463911,-9.029287,1.315976,7.052300,-5.850852,7.374940,1.336532,8.537315,-0.217720,-3.431529,-4.675608,-4.312716,9.645089,-6.929385,2.036089,8.511126,2.645480,7.836275,-2.728260,-7.211327,3.179904,-8.366686,-8.524527,-6.151027,2.649032,2.885675,-4.101376,-5.008422,-5.517831,7.373735,0.862406,2.984194,-4.261152,9.022208,9.792686,8.849470], dtype = "float64")#candidate|850|(208,)|const|float64
call_848 = relay.TupleGetItem(func_288_call(relay.reshape(var_849.astype('float64'), []), relay.reshape(const_850.astype('float64'), [4, 4, 13]), ), 0)
call_851 = relay.TupleGetItem(func_292_call(relay.reshape(var_849.astype('float64'), []), relay.reshape(const_850.astype('float64'), [4, 4, 13]), ), 0)
func_490_call = mod.get_global_var('func_490')
func_494_call = mutated_mod.get_global_var('func_494')
const_864 = relay.const([[-7],[7],[6],[7],[-5],[-3],[-2],[6],[-2],[9],[-4],[-5],[-1],[-7],[-6],[-7],[-9],[7],[4],[-7],[6],[7],[8],[-9],[-4],[10],[-7],[8],[-8],[9],[1],[9],[2],[-3],[1],[5],[-4],[5],[-6],[2],[-3],[9],[-1],[-9],[3],[3],[6],[3],[-7],[4],[10],[5],[-2],[6],[3],[9],[4],[9],[6],[-4],[-8],[4],[-6],[-5],[7],[1],[9],[-1],[-4],[-10],[-7],[-6]], dtype = "uint16")#candidate|864|(72, 1)|const|uint16
call_863 = relay.TupleGetItem(func_490_call(relay.reshape(var_849.astype('uint16'), []), relay.reshape(const_864.astype('uint16'), [12, 2, 3]), ), 0)
call_865 = relay.TupleGetItem(func_494_call(relay.reshape(var_849.astype('uint16'), []), relay.reshape(const_864.astype('uint16'), [12, 2, 3]), ), 0)
output = relay.Tuple([bop_845,call_848,var_849,const_850,call_863,const_864,])
output2 = relay.Tuple([bop_845,call_851,var_849,const_850,call_865,const_864,])
func_868 = relay.Function([var_843,var_844,var_849,], output)
mod['func_868'] = func_868
mod = relay.transform.InferType()(mod)
var_869 = relay.var("var_869", dtype = "int16", shape = (12, 4, 15))#candidate|869|(12, 4, 15)|var|int16
var_870 = relay.var("var_870", dtype = "int16", shape = (12, 4, 15))#candidate|870|(12, 4, 15)|var|int16
var_871 = relay.var("var_871", dtype = "float64", shape = ())#candidate|871|()|var|float64
output = func_868(var_869,var_870,var_871,)
func_872 = relay.Function([var_869,var_870,var_871,], output)
mutated_mod['func_872'] = func_872
mutated_mod = relay.transform.InferType()(mutated_mod)
var_891 = relay.var("var_891", dtype = "float32", shape = (7, 14, 15))#candidate|891|(7, 14, 15)|var|float32
uop_892 = relay.log(var_891.astype('float32')) # shape=(7, 14, 15)
func_288_call = mod.get_global_var('func_288')
func_292_call = mutated_mod.get_global_var('func_292')
const_905 = relay.const(5.023611, dtype = "float64")#candidate|905|()|const|float64
const_906 = relay.const([[3.688365,-1.792636],[4.788167,-1.202920],[-3.740646,-0.841276],[1.601229,-6.956654],[5.225813,1.769224],[-0.104821,0.715918],[2.393719,2.715127],[-4.340132,-5.945364],[-6.577908,-9.609135],[-9.978820,6.212344],[1.661965,-4.588824],[-4.836379,-3.163658],[-4.439263,0.349790],[3.464582,-6.382754],[-5.275362,-3.705384],[1.401231,-3.329931],[-0.059461,9.334144],[-9.923134,0.589005],[6.864022,-3.886896],[-5.954033,0.255928],[-8.840354,-9.052877],[4.237787,-2.593879],[-8.382515,3.154102],[1.269633,-9.361707],[-4.743445,5.773899],[-4.926670,8.208550],[-9.320517,4.476759],[-5.392035,9.809740],[-0.821057,-3.184689],[0.777281,8.085358],[-6.328080,4.904366],[-1.306879,5.504364],[4.701404,8.926964],[4.445887,8.453992],[1.295365,5.990507],[1.109740,-8.861232],[-9.160339,-6.677234],[-0.688794,8.860564],[-8.760429,-7.744981],[-1.999929,2.800529],[-0.060352,-0.468255],[0.215455,8.450519],[-8.134156,0.379444],[-7.929770,7.206387],[-2.296516,-7.410379],[2.203529,2.601068],[-5.512258,5.687116],[1.138178,-3.282541],[4.386297,-0.368662],[0.280317,5.821942],[-6.228838,8.068440],[7.797957,5.603489],[-5.154436,-9.785931],[4.326401,5.895719],[4.458349,5.600993],[-1.204436,9.173395],[-8.263109,-0.925416],[2.649095,0.488689],[-1.613462,-6.528006],[-3.492448,-9.014608],[6.659169,-6.438610],[-1.360198,-7.341246],[-1.843637,6.499665],[-5.370606,0.158729],[-9.182785,-2.184578],[3.631293,7.115371],[-5.543071,0.627436],[4.446351,-4.948312],[-3.186894,9.525436],[-1.534105,3.946837],[7.489479,0.208082],[0.445094,-4.766611],[2.855056,5.339530],[0.512623,-4.582699],[8.213163,-2.802156],[1.794348,4.536063],[3.472673,8.197129],[9.480905,4.282315],[3.207737,-1.927958],[3.881342,-9.943592],[3.581425,1.334002],[-9.408214,-8.336970],[-5.819500,-9.452093],[4.920976,3.549103],[-1.909929,7.051664],[8.788610,6.932762],[5.026756,8.819386],[-7.784518,3.386142],[-0.203217,-9.696740],[1.699475,-7.733827],[6.684431,9.610029],[-2.520711,-2.307827],[7.830974,-7.236162],[-4.208744,8.627664],[9.694716,-1.950646],[-5.035422,5.380200],[-3.143260,7.882147],[6.886741,5.128574],[-5.018229,3.722342],[-7.714119,-0.281876],[1.861944,-4.903189],[-2.746624,-0.419063],[2.243717,0.302849],[-7.920868,-7.640170]], dtype = "float64")#candidate|906|(104, 2)|const|float64
call_904 = relay.TupleGetItem(func_288_call(relay.reshape(const_905.astype('float64'), []), relay.reshape(const_906.astype('float64'), [4, 4, 13]), ), 0)
call_907 = relay.TupleGetItem(func_292_call(relay.reshape(const_905.astype('float64'), []), relay.reshape(const_906.astype('float64'), [4, 4, 13]), ), 0)
func_868_call = mod.get_global_var('func_868')
func_872_call = mutated_mod.get_global_var('func_872')
const_909 = relay.const([-4,-5,-5,-4,9,-8,-9,5,-3,4,1,-5,-10,-10,-4,6,-10,-6,-9,-2,10,-1,4,6,1,3,3,10,10,8,7,-3,6,3,-2,4,-8,-8,2,-10,-8,-5,-10,6,5,3,9,10,-7,-3,-10,10,1,-8,6,6,-10,6,-5,7,6,3,-6,-3,6,4,2,-1,6,7,-9,7,-5,-7,-7,2,4,1,10,5,-1,-1,-6,9,4,-5,1,2,7,6,-4,9,6,8,-5,2,-3,-2,-9,-3,7,8,10,-3,7,-2,8,9,-9,-9,-1,2,-8,-4,-5,2,5,-1,-9,-3,-4,7,4,7,4,-10,9,-8,-6,5,-9,5,-6,8,-1,-2,-4,6,-9,-1,-8,-8,3,-7,-10,2,9,5,4,-3,-4,9,-5,8,-5,-7,-10,-2,-10,-3,1,-2,-5,-8,-10,-3,7,4,6,-8,-3,-5,-9,-7,8,-3,-9,1,-2,2,-1,6,-6,10,4,-4,2,-9,8,3,-10,-5,1,-1,-5,5,-8,4,3,10,1,-4,5,7,1,-9,6,8,-10,-8,-1,-10,4,-7,-7,4,-10,2,-2,-9,9,-2,2,10,-10,-8,3,-2,-4,-4,7,-9,-6,2,-10,-3,-9,-1,6,4,4,-6,9,-4,10,-4,-5,4,5,-3,9,3,-10,10,8,3,5,8,1,7,-7,-8,5,8,-10,-5,7,-6,10,5,9,1,9,-7,9,-10,6,-3,-10,1,1,8,3,5,9,3,-9,-9,4,-9,-2,1,8,1,4,9,-9,3,10,-5,-9,-6,-5,-7,3,-1,-6,2,-6,-4,-6,-6,-10,7,7,1,-2,-4,-4,-3,-8,1,-9,-8,10,7,-4,1,4,-4,-1,6,-3,-8,3,3,8,-5,-1,-3,-4,-6,-5,-4,6,9,4,9,-8,-4,8,4,3,2,4,-4,-6,-9,-9,10,-1,-1,4,2,-6,-5,-6,-10,-10,-5,-10,3,1,-8,6,-6,-7,-4,8,7,2,10,-10,-9,5,-5,2,2,3,-6,8,-6,10,9,5,3,5,7,6,-8,-9,5,-2,-7,-8,3,-6,2,8,5,5,-3,1,-8,8,-7,10,10,-2,-8,-3,-6,-10,4,-8,-3,9,3,-10,9,10,6,-10,3,-5,-2,-2,7,7,-1,-2,-7,-10,1,5,7,7,-5,-2,-1,-9,-5,-1,4,6,2,8,1,4,-10,-3,2,10,7,6,-9,10,8,8,1,5,-4,-5,-3,-8,-7,9,8,-9,-1,2,-9,-6,4,-7,10,8,-7,10,3,-4,-8,10,-2,1,-3,5,-5,-9,7,-4,9,2,7,9,-1,-10,6,6,-8,-3,-10,-3,1,6,9,6,3,6,-1,2,8,10,-10,3,-3,-9,7,2,1,8,7,7,-10,-2,10,3,-3,-1,9,-3,10,-9,-1,7,-6,-3,6,5,-5,-9,8,-4,-6,4,-10,-10,-8,-9,8,2,-10,-9,6,-4,-10,9,-6,-8,9,8,10,10,-6,6,5,-2,-4,-3,6,3,-2,-3,-5,-1,-3,-4,8,1,-4,-10,5,-6,-4,1,-6,-5,7,9,6,-6,10,4,-3,3,-9,8,6,5,3,-9,2,-9,1,3,-7,-8,9,6,4,1,4,-9,3,10,4,5,3,-5,10,-2,6,-6,2,9,3,1,-9,-10,8,6,-1,-8,-5,-9,-10,1,-2,1,1,2,-9,-3,-7,9,-5,9,-8,-10,-7,-7,1,3,7,9,-1,3,-8,-8,-3,10,4,4,6,4,-5,2,-10,-1,-8,-6,5,-1,-8,-6,6,9,-7,3,-8,-7,-7,-1,4,4,6,1,9,-2,8,8,-6,-5,1,-6,-2,-2,-2,6,8,-5,9,-4,5,5,-4,9,-1,4,-10], dtype = "int16")#candidate|909|(720,)|const|int16
call_908 = relay.TupleGetItem(func_868_call(relay.reshape(const_909.astype('int16'), [12, 4, 15]), relay.reshape(const_909.astype('int16'), [12, 4, 15]), relay.reshape(const_905.astype('float64'), []), ), 4)
call_910 = relay.TupleGetItem(func_872_call(relay.reshape(const_909.astype('int16'), [12, 4, 15]), relay.reshape(const_909.astype('int16'), [12, 4, 15]), relay.reshape(const_905.astype('float64'), []), ), 4)
func_868_call = mod.get_global_var('func_868')
func_872_call = mutated_mod.get_global_var('func_872')
call_920 = relay.TupleGetItem(func_868_call(relay.reshape(const_909.astype('int16'), [12, 4, 15]), relay.reshape(const_909.astype('int16'), [12, 4, 15]), relay.reshape(const_905.astype('float64'), []), ), 2)
call_921 = relay.TupleGetItem(func_872_call(relay.reshape(const_909.astype('int16'), [12, 4, 15]), relay.reshape(const_909.astype('int16'), [12, 4, 15]), relay.reshape(const_905.astype('float64'), []), ), 2)
var_923 = relay.var("var_923", dtype = "bool", shape = (4, 4, 13))#candidate|923|(4, 4, 13)|var|bool
bop_924 = relay.minimum(call_904.astype('float64'), relay.reshape(var_923.astype('float64'), relay.shape_of(call_904))) # shape=(4, 4, 13)
bop_927 = relay.minimum(call_907.astype('float64'), relay.reshape(var_923.astype('float64'), relay.shape_of(call_907))) # shape=(4, 4, 13)
func_868_call = mod.get_global_var('func_868')
func_872_call = mutated_mod.get_global_var('func_872')
call_930 = relay.TupleGetItem(func_868_call(relay.reshape(const_909.astype('int16'), [12, 4, 15]), relay.reshape(const_909.astype('int16'), [12, 4, 15]), relay.reshape(call_920.astype('float64'), []), ), 3)
call_931 = relay.TupleGetItem(func_872_call(relay.reshape(const_909.astype('int16'), [12, 4, 15]), relay.reshape(const_909.astype('int16'), [12, 4, 15]), relay.reshape(call_920.astype('float64'), []), ), 3)
func_490_call = mod.get_global_var('func_490')
func_494_call = mutated_mod.get_global_var('func_494')
call_939 = relay.TupleGetItem(func_490_call(relay.reshape(call_920.astype('uint16'), []), relay.reshape(call_908.astype('uint16'), [12, 2, 3]), ), 0)
call_940 = relay.TupleGetItem(func_494_call(relay.reshape(call_920.astype('uint16'), []), relay.reshape(call_908.astype('uint16'), [12, 2, 3]), ), 0)
output = relay.Tuple([uop_892,const_905,const_906,call_908,const_909,call_920,bop_924,call_930,call_939,])
output2 = relay.Tuple([uop_892,const_905,const_906,call_910,const_909,call_921,bop_927,call_931,call_940,])
func_941 = relay.Function([var_891,var_923,], output)
mod['func_941'] = func_941
mod = relay.transform.InferType()(mod)
mutated_mod['func_941'] = func_941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_941_call = mutated_mod.get_global_var('func_941')
var_943 = relay.var("var_943", dtype = "float32", shape = (7, 14, 15))#candidate|943|(7, 14, 15)|var|float32
var_944 = relay.var("var_944", dtype = "bool", shape = (4, 4, 13))#candidate|944|(4, 4, 13)|var|bool
call_942 = func_941_call(var_943,var_944,)
output = call_942
func_945 = relay.Function([var_943,var_944,], output)
mutated_mod['func_945'] = func_945
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1135 = relay.var("var_1135", dtype = "float64", shape = (9, 6, 14))#candidate|1135|(9, 6, 14)|var|float64
var_1136 = relay.var("var_1136", dtype = "float64", shape = (9, 6, 14))#candidate|1136|(9, 6, 14)|var|float64
bop_1137 = relay.power(var_1135.astype('float64'), relay.reshape(var_1136.astype('float64'), relay.shape_of(var_1135))) # shape=(9, 6, 14)
output = relay.Tuple([bop_1137,])
output2 = relay.Tuple([bop_1137,])
func_1155 = relay.Function([var_1135,var_1136,], output)
mod['func_1155'] = func_1155
mod = relay.transform.InferType()(mod)
mutated_mod['func_1155'] = func_1155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1155_call = mutated_mod.get_global_var('func_1155')
var_1157 = relay.var("var_1157", dtype = "float64", shape = (9, 6, 14))#candidate|1157|(9, 6, 14)|var|float64
var_1158 = relay.var("var_1158", dtype = "float64", shape = (9, 6, 14))#candidate|1158|(9, 6, 14)|var|float64
call_1156 = func_1155_call(var_1157,var_1158,)
output = call_1156
func_1159 = relay.Function([var_1157,var_1158,], output)
mutated_mod['func_1159'] = func_1159
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1174 = relay.const([[[10,9,-7,-9,8,3,2,-7,-6,10,-6,9,-2],[-6,-7,-4,-2,2,10,4,-9,10,-5,-2,5,1],[1,-9,-4,-8,5,-9,5,-8,5,10,9,7,10],[6,-3,7,6,7,-2,-2,6,-3,7,5,3,7],[-9,5,4,-3,6,-9,5,-4,-4,3,8,-1,7],[-8,-3,-10,9,-10,-9,-8,-4,-9,6,7,8,9],[5,-2,8,-1,-4,3,-10,-6,7,-4,-2,1,6],[7,-7,-1,-8,5,4,-5,8,-4,1,5,-4,1],[4,4,-10,-4,-9,9,2,1,1,6,6,-8,-8],[6,-4,7,-1,-5,-4,-9,-6,10,4,3,9,-5],[-9,-3,5,-8,8,-6,6,1,-2,3,-1,-7,-4],[10,-2,-8,7,-8,3,-3,3,2,-3,-1,3,5]],[[1,-9,-2,8,-6,-5,-10,-9,-2,5,-2,-9,8],[-9,8,-5,6,1,4,6,-10,5,5,-4,-6,6],[-4,2,5,-4,-7,-9,6,-5,-3,-2,-1,4,3],[-6,-7,-9,-5,6,2,2,-1,-4,-1,9,7,7],[-10,-5,1,4,-2,-10,3,7,-5,7,-10,-5,10],[-6,-7,7,6,-2,3,-4,10,4,-7,9,1,-2],[-6,3,2,3,2,9,-1,-4,9,-3,-1,2,-9],[-2,6,-3,-2,6,-6,3,8,8,5,8,-2,-4],[-8,-3,-7,9,-10,6,9,-3,-1,-6,10,-2,10],[8,-9,-6,-9,3,-5,-9,-5,6,7,2,8,8],[-4,3,-10,-5,-5,5,-10,-10,-3,10,6,-3,-5],[-2,2,3,10,-7,10,1,-3,-9,-7,7,-2,7]],[[3,10,4,5,1,10,-5,-4,-1,10,1,8,-2],[7,4,-1,-3,-6,-2,1,-10,-5,-1,2,5,-7],[-3,6,10,1,-7,-2,3,9,9,-9,2,6,4],[-5,-9,-5,7,-8,-5,2,1,-6,10,-2,-5,9],[-6,9,10,8,6,2,5,10,-10,3,6,8,5],[6,10,5,10,-5,-10,2,6,-9,3,-10,4,4],[3,6,1,-5,-9,8,-6,2,6,4,-9,3,-6],[4,-6,-10,2,6,9,-6,-4,10,9,-10,7,9],[8,-7,-4,-4,1,9,9,-7,-9,-9,-9,-4,10],[-3,9,2,-3,2,1,-8,-10,-6,-2,-9,5,-3],[6,3,3,-6,10,-10,8,2,9,-2,5,-10,-8],[-8,-1,-7,10,5,-6,6,1,-8,-9,8,10,-7]],[[-7,-4,9,8,-4,-7,5,-6,6,-6,7,6,8],[-3,4,-5,-10,6,10,-9,10,-9,-1,7,-8,-2],[1,-10,-4,5,-5,-8,9,4,9,6,-1,-6,1],[-8,10,-1,-10,8,-7,1,-7,-7,-5,8,6,5],[10,-10,7,-7,9,-8,2,-2,-2,1,4,-6,10],[-2,7,-6,9,7,3,4,1,-3,-9,1,10,1],[-9,10,10,-8,9,5,9,5,5,5,3,-10,-5],[-6,-1,6,5,-1,-9,-3,4,-6,9,6,3,1],[-1,2,9,10,6,-4,-3,-5,6,1,-5,5,-8],[-7,6,9,-6,3,9,-7,-1,-6,-6,7,9,3],[4,-8,-1,-5,1,-4,7,4,1,2,2,8,-1],[1,-4,-5,-2,-3,8,-8,4,-5,9,8,3,-4]],[[2,-5,9,-4,-2,-3,2,7,-4,10,-7,2,4],[-8,1,-2,-7,7,-4,-1,2,1,10,5,-3,5],[-9,9,-6,-2,2,2,-2,-5,2,5,10,7,5],[7,4,-1,-8,8,-7,2,4,-9,5,-7,10,10],[-9,3,6,2,-9,-4,-3,-2,3,-10,-10,-5,2],[3,-3,3,9,-6,5,6,2,2,2,-6,8,4],[-4,4,-3,8,-1,8,7,4,5,-6,9,2,10],[8,5,-5,-3,5,-7,1,-3,5,-6,-2,8,-6],[5,-8,-8,-4,-10,-4,-7,8,3,1,10,-8,4],[5,-7,7,-3,-9,-3,5,-2,-8,-7,5,8,6],[2,4,3,6,-4,-5,9,-7,-7,-8,9,-1,4],[6,2,8,5,1,-5,9,-1,-4,8,-7,-4,-5]],[[-2,-3,4,6,3,-1,-8,-8,9,-2,-2,3,10],[7,4,10,10,-2,-3,10,4,4,-4,-7,-10,5],[7,-5,7,-4,-6,9,-8,-2,-9,8,-6,7,5],[-4,5,10,-7,-1,-7,-5,7,-2,-5,9,1,-9],[-10,-8,2,-3,-1,-9,7,3,4,8,-2,-8,7],[2,5,-4,10,9,5,-1,4,-5,1,-5,-5,-6],[-3,5,4,-7,-9,-1,4,2,-1,-6,-2,-5,8],[-8,3,4,-10,8,-8,-2,-10,5,4,-1,-10,-1],[-9,-5,-6,-2,7,-7,-6,-1,-1,-1,-6,5,6],[7,5,6,4,-1,-4,-1,10,10,-2,2,5,-6],[-2,3,7,1,7,5,1,-4,-10,8,3,-8,10],[-2,-5,-8,-9,2,2,-7,-3,2,10,-2,3,10]],[[9,-4,-2,-6,5,2,6,10,-1,6,-1,9,6],[-2,1,-8,-4,1,-9,10,2,7,-10,-3,6,-5],[8,10,7,-7,-8,1,7,7,-1,-3,-3,-9,9],[-3,1,-6,6,-5,10,3,6,1,8,-3,-6,-9],[9,3,-2,-3,-6,4,-4,5,2,5,2,5,-3],[6,-7,10,5,-1,10,1,-4,-8,-7,-6,10,1],[7,-1,-6,-2,4,-6,7,-9,5,3,-7,2,3],[-3,9,-5,9,5,-3,-8,-10,7,2,-4,-5,8],[7,6,-6,-3,4,-1,1,10,-4,-2,-1,-2,6],[1,5,5,-9,-2,-1,-2,-10,-10,9,-7,-6,-9],[-8,3,-9,7,-6,-5,-1,-10,3,-9,-4,-6,-9],[-8,-1,-6,-10,-5,3,-4,-2,2,10,-8,-5,-8]],[[8,-4,8,-3,-10,10,-6,-10,6,-8,7,-4,3],[9,-2,6,10,6,1,7,-8,3,3,-5,-9,9],[-4,-10,8,-4,6,-10,-2,-4,-8,4,1,2,-1],[5,1,-4,9,-1,-3,7,6,8,4,1,-5,7],[-4,-10,-7,5,-8,-10,-4,6,-7,1,-10,9,8],[-5,-7,-1,-3,-8,-7,-8,-3,-4,1,-8,-10,-10],[-5,6,1,8,-6,-8,1,1,10,-3,-8,-2,6],[5,-9,8,-6,-9,6,4,8,2,10,7,1,-3],[-6,7,-6,-10,7,-1,2,9,-1,1,9,-1,7],[8,-8,6,-9,6,5,-10,-3,7,-3,5,-1,3],[10,-8,-2,4,9,-3,-4,4,6,2,-7,7,7],[-5,-8,8,-4,4,3,5,-9,2,7,3,-2,-5]],[[5,-2,-3,1,-7,1,5,7,-5,-4,1,8,-4],[1,5,8,7,-4,-6,2,-4,-5,8,9,-4,-8],[10,3,6,-3,-2,-10,-10,-9,-9,-10,-4,2,-6],[-7,-3,-5,10,9,4,6,-1,-4,3,9,-4,5],[-3,2,-9,2,-6,6,-9,-2,7,10,8,-10,5],[3,6,9,-6,-1,-2,8,3,3,-1,4,5,-5],[-6,-4,-4,-4,4,2,-4,8,7,1,-1,2,1],[1,8,9,-1,-8,-1,-7,-6,6,3,4,-9,2],[1,-4,-9,-8,-1,4,-1,8,5,-6,6,8,5],[1,-9,8,6,10,-8,-4,-7,-2,-9,8,-8,6],[6,5,-8,-9,-1,6,-8,-5,-7,5,5,2,-10],[1,-5,-3,-1,-4,9,5,-10,-9,9,5,5,2]],[[7,-6,-4,-6,4,-2,2,-3,1,10,10,2,-5],[9,-6,10,5,-2,-4,8,10,2,-7,-10,4,-2],[1,-6,-10,4,4,-1,9,7,-2,1,4,3,-10],[-10,4,7,-3,-10,7,-8,8,-9,-3,-10,9,8],[-5,-7,-5,-9,8,-6,10,5,-2,6,2,-6,-2],[-1,-10,-6,-1,9,-9,-7,-6,-9,1,-2,7,-2],[5,-6,-8,10,8,-2,9,5,2,5,6,-4,6],[-9,-6,-3,-3,-10,6,7,-5,2,-2,2,-10,-2],[10,3,-2,10,5,10,2,9,7,-3,6,-6,4],[-2,4,-3,10,2,-10,1,-6,5,9,8,-9,10],[-8,-6,6,-9,4,7,-1,7,1,-9,6,-5,-6],[-5,-7,4,3,10,-8,2,-2,-7,7,-4,-1,-5]],[[7,-6,-4,9,5,-7,-3,-10,5,-4,-2,-1,6],[-7,-8,-8,2,-7,-4,-8,-2,-9,-3,4,4,6],[-9,-5,4,-4,2,-7,-3,-3,-5,-7,-7,9,-7],[9,-3,7,3,8,4,10,-1,2,-5,10,5,4],[6,-3,6,-4,6,10,-5,-5,-10,7,-3,-5,4],[-6,-5,-3,4,3,6,9,-1,9,9,5,10,9],[2,2,9,5,8,2,3,-10,-3,9,9,-9,4],[6,-7,7,-8,5,7,-1,7,-5,-1,9,5,9],[10,2,4,-9,-4,-10,5,2,-5,-7,10,-5,10],[-8,-4,10,-7,-7,4,-1,2,1,-7,1,7,6],[-3,-10,-5,-7,5,10,-4,2,2,-6,-7,2,-1],[-7,3,8,4,-9,6,5,-5,-3,3,7,-1,10]]], dtype = "int32")#candidate|1174|(11, 12, 13)|const|int32
var_1175 = relay.var("var_1175", dtype = "int32", shape = (11, 12, 13))#candidate|1175|(11, 12, 13)|var|int32
bop_1176 = relay.greater(const_1174.astype('bool'), relay.reshape(var_1175.astype('bool'), relay.shape_of(const_1174))) # shape=(11, 12, 13)
func_868_call = mod.get_global_var('func_868')
func_872_call = mutated_mod.get_global_var('func_872')
const_1182 = relay.const([-3,2,-1,-6,9,1,1,9,6,-2,1,5,2,4,-1,5,7,5,-4,-7,7,8,-5,-1,-4,-9,7,-5,-9,10,3,7,-5,-10,-3,2,6,-6,-7,-9,2,-6,-3,-9,-1,6,4,-5,-4,-10,3,-7,-1,7,1,-9,-5,-1,7,5,-9,-3,4,4,5,7,3,5,8,-2,-10,-4,-5,7,5,9,3,-8,1,7,3,4,-7,-10,10,5,-4,-7,4,-2,-6,-4,4,-7,4,-1,-7,3,-1,-8,8,5,2,2,5,-6,4,1,-2,10,-2,10,-5,3,9,-9,5,-10,5,5,-3,-5,9,-2,-4,-6,5,-4,-1,8,-8,-9,-2,-4,-1,9,7,9,-9,8,7,-10,2,-5,-2,-4,-10,5,-4,-9,7,-8,-1,4,-2,-5,-8,1,8,-2,-7,-3,3,-6,-9,1,4,-2,-8,7,1,-9,5,-9,-6,-5,9,-9,-8,-9,-4,2,-2,3,3,10,-9,2,-8,1,4,-8,-6,5,-6,8,7,-5,6,-10,5,-2,-10,-10,-7,-6,-9,-4,-3,-6,5,6,5,4,-9,-2,-6,-3,-9,9,-4,-7,-7,-7,-1,-9,8,-10,-9,6,-9,-6,-3,3,2,7,5,10,-4,4,9,-4,1,9,8,-1,4,-4,-8,8,-9,7,-9,-7,5,10,7,10,10,1,5,-7,-1,3,-7,9,-5,1,-5,-1,-2,-4,-7,-8,-4,-4,-10,7,9,-1,2,-4,6,3,4,2,4,-6,2,7,4,4,-10,7,4,10,8,3,9,-7,-9,-8,7,-4,-9,-5,-2,-7,2,6,2,2,-9,-5,-10,-1,1,3,-5,-9,10,5,2,6,8,10,5,-9,6,3,6,6,-3,-7,6,3,9,5,2,5,-3,-7,8,5,1,1,-1,-5,4,3,10,-5,3,-8,3,-4,-2,-5,8,4,7,7,2,2,-7,-5,10,4,10,-8,-9,9,3,2,3,3,3,8,3,1,-5,-5,-8,10,-2,1,3,3,-4,-9,4,7,-3,5,2,-6,-4,-4,1,-10,-4,-6,-3,-3,7,3,4,-1,2,-3,-1,3,-1,10,3,-6,-5,2,-3,-4,-6,2,-7,-7,8,-7,-10,-6,9,2,8,-9,-10,10,7,-6,2,-7,10,2,-5,-6,-9,-3,-8,2,-2,-10,5,8,5,7,1,-10,7,10,1,6,-8,-10,-3,-4,-5,-7,-4,2,-10,-1,-4,-3,-1,4,9,-1,6,-3,6,-4,-4,1,8,9,6,-9,1,3,7,3,5,2,7,-2,5,-6,-9,-6,2,-4,-7,1,9,9,9,-1,-10,-8,10,-2,10,-3,4,-7,-9,7,6,-4,-1,-10,-7,-7,-3,3,-6,8,2,-6,-3,3,4,5,-9,4,4,-10,-4,-7,3,10,-5,-7,10,-1,4,2,-7,7,-8,6,6,2,-5,1,-8,-7,-9,-8,-8,1,-5,2,-2,10,4,3,-1,4,-3,-4,-5,-2,7,-5,-10,-1,-1,-9,-3,-4,-4,-9,-3,1,-7,7,-9,-6,10,3,8,-7,8,2,4,10,-5,2,-3,6,-1,-2,3,-7,9,-2,-4,8,4,5,7,7,6,2,4,9,-10,-4,-1,5,-10,9,-6,8,-6,-10,-8,-9,-6,-6,-8,6,10,-2,-10,10,-3,-4,5,-1,-4,-6,-7,9,-7,-6,3,-4,1,-1,2,-10,10,2,-5,8,3,2,-8,-5,-7,1,-4,-3,2,5,7,7,-1,-5,-1,6,7,-5,-10,-2,-5,8,-10,4,5,4,-7,1,9,4,7,5,7,-8,4,3,3,-7,-2,-4,2,-1,8,-7,-6,-6,-1,6,5,-5,6,-8,-9,3,-8,10,-3,-9,1,-8,8,-9,-7,9,10,2], dtype = "int16")#candidate|1182|(720,)|const|int16
var_1183 = relay.var("var_1183", dtype = "float64", shape = ())#candidate|1183|()|var|float64
call_1181 = relay.TupleGetItem(func_868_call(relay.reshape(const_1182.astype('int16'), [12, 4, 15]), relay.reshape(const_1182.astype('int16'), [12, 4, 15]), relay.reshape(var_1183.astype('float64'), []), ), 2)
call_1184 = relay.TupleGetItem(func_872_call(relay.reshape(const_1182.astype('int16'), [12, 4, 15]), relay.reshape(const_1182.astype('int16'), [12, 4, 15]), relay.reshape(var_1183.astype('float64'), []), ), 2)
func_1155_call = mod.get_global_var('func_1155')
func_1159_call = mutated_mod.get_global_var('func_1159')
var_1187 = relay.var("var_1187", dtype = "float64", shape = (756,))#candidate|1187|(756,)|var|float64
call_1186 = relay.TupleGetItem(func_1155_call(relay.reshape(var_1187.astype('float64'), [9, 6, 14]), relay.reshape(var_1187.astype('float64'), [9, 6, 14]), ), 0)
call_1188 = relay.TupleGetItem(func_1159_call(relay.reshape(var_1187.astype('float64'), [9, 6, 14]), relay.reshape(var_1187.astype('float64'), [9, 6, 14]), ), 0)
func_941_call = mod.get_global_var('func_941')
func_945_call = mutated_mod.get_global_var('func_945')
const_1206 = relay.const([0.472518,1.353558,4.117283,-5.839417,-5.028231,2.704593,-8.243551,4.832845,2.575415,-9.732702,3.821494,-5.417492,1.295600,-7.091925,-2.151573,-4.363344,-5.717355,-0.555545,5.146205,-5.577604,-9.606752,-6.120142,6.458453,7.614395,9.050639,5.647267,-5.762456,-1.717588,-5.417698,-2.485383,2.637595,-0.667801,-1.508322,7.620361,-7.906774,-2.766668,6.954911,7.275512,-2.615149,3.235644,5.472841,-2.589655,7.578563,5.320008,7.179251,-4.596591,-4.832997,0.864706,5.285046,0.658264,-7.072108,-1.895560,-7.168061,-1.557403,-1.221770,-5.682512,-1.402244,0.700544,3.706009,0.912909,-9.349992,6.695766,5.797381,8.768082,6.530016,-1.122845,-2.225662,8.864035,-0.539512,4.107046,-2.416731,-3.041968,3.042196,-0.526684,9.954118,1.660230,8.998263,-4.505268,4.280558,3.257699,-5.469491,-3.650678,-9.003193,4.636729,-9.046459,8.629290,4.016562,2.488224,9.344457,2.018777,-3.427151,-3.227196,-0.185300,-6.746959,-4.403988,-0.713384,0.681434,-4.281580,7.175798,-7.122430,-7.312421,-9.065343,-6.753237,-2.709125,0.324861,-3.861631,7.251599,8.074625,8.996354,4.867452,5.751532,1.900398,8.830104,-9.316951,9.136315,-9.483352,-6.906752,6.232698,-1.885649,-5.129324,-6.594767,3.282054,7.140924,4.326160,-3.873027,-1.243497,-0.237444,-7.696241,6.144388,-8.126668,-3.305315,0.874606,6.857101,9.762333,-2.028380,6.168681,-1.240588,-1.635957,8.648477,-1.186032,7.459387,2.964045,-3.999388,7.891190,-4.749038,0.681213,-9.375110,1.161449,2.680109,5.264185,-4.613850,-5.955486,-2.245139,-4.351452,-9.784679,4.638968,-9.233029,-0.412952,2.406771,-1.811987,2.913556,-6.428711,-4.134792,-0.378111,-1.478115,-5.221797,-7.446302,5.483068,5.924593,3.248049,-8.485176,7.497190,3.479019,-8.249265,7.817280,5.474965,-3.023864,-1.266634,7.673779,-7.030683,2.731343,1.396696,-5.000805,-7.401290,-9.862477,9.280059,-9.876979,6.632702,-7.622540,-1.775892,4.240387,7.359366,9.476116,-9.279887,-0.001316,-3.827779,0.525860,3.291308,-6.504638,-4.381052,8.412463,-4.053495,-9.940453,-4.226575,0.646907,0.486979,-7.349567,-5.339538,-5.446914,-3.735791,4.804432,-4.848982,-5.406786,-4.181722,9.480737,-3.626158,8.706118,0.058008,-2.708395,-4.298640,-8.702775,-3.344693,-5.368442,9.270268,-9.820378,4.269882,-9.393717,-4.931261,-8.791364,-8.533963,6.163507,-3.437656,0.418038,5.165716,2.417426,1.303255,7.941271,-3.674322,-8.218716,-6.496416,-4.471775,-1.049773,-3.026598,6.720930,-2.190422,-3.922960,-0.497822,-7.803846,-7.788365,-0.681666,4.958412,-3.788323,2.411928,5.697568,-6.322224,-8.150895,7.689783,3.318034,-5.753310,-9.511800,-3.269946,-9.260207,-5.592643,-7.683054,-1.040888,-3.586532,-2.769181,-7.178897,-5.624030,1.404347,-0.085926,1.677764,2.755669,2.716813,4.220917,-1.642366,-3.983752,2.344747,4.313635,-7.753024,-7.120333,8.997526,2.557643,-8.869358,2.448780,-3.660542,-0.436224,-4.146431,-3.170014,2.023004,9.928752,-0.039628,-8.325223,-4.768151,2.969439,-9.176401,-8.480605,5.497274,1.221691,7.086784,2.367547,-9.023873,2.355866,5.904280,-1.924486,7.008706,-3.806034,-3.745254,4.502840,-3.236941,7.460025,-3.499369,6.555722,2.118244,-9.422287,6.921671,-1.294840,1.011904,-7.164727,1.432932,9.637773,1.483883,-7.546447,-1.874430,-1.607609,7.167899,0.824070,5.609547,5.052342,-0.579960,8.110987,6.854493,4.290544,3.562347,-9.894982,8.519264,-8.901866,0.449554,-8.611292,-6.601867,1.388929,-4.046370,-8.497788,8.941551,-4.458654,0.851772,7.413547,0.802829,2.428024,7.856210,6.967764,9.172190,7.440829,0.688163,-4.333324,-5.689879,8.859202,3.749826,1.171097,0.220091,-1.828441,4.766798,7.794139,-1.945759,-8.316524,-6.515120,-9.061880,7.702746,6.406114,4.927081,-1.321566,4.489063,-2.024971,1.321090,7.228463,4.773609,7.699471,1.712258,0.924589,7.667235,2.883445,-8.161928,7.341755,8.984635,-9.134309,1.475087,0.705092,-8.393157,6.975309,0.389814,-8.364110,-1.570442,3.072204,-9.912836,9.228954,-5.942933,-7.361936,8.893103,-7.624727,-2.195639,0.178470,-0.306596,-1.042614,1.454295,-5.361028,-2.870179,1.111879,3.956949,-7.101126,-3.209353,0.781464,1.253103,4.177877,-7.902900,2.300003,-3.500906,-2.671123,9.148238,7.525221,-6.969811,5.706594,-9.342241,8.371869,-3.862736,0.555029,9.794464,6.531559,-3.239591,8.291197,9.235004,6.435396,-3.329008,-3.123583,-6.790437,-0.088810,3.321643,6.450334,-3.762713,0.692073,0.499045,2.972713,-4.074046,9.163523,6.062913,9.471568,1.590271,-2.589319,-9.801334,-3.869049,-7.467716,2.672719,-5.002689,9.885674,1.986005,8.960405,-5.338180,2.896259,-7.623935,7.784411,-5.544193,-7.978658,-0.959979,1.340040,8.037238,8.754377,-7.053951,1.911728,-5.870584,2.160089,-8.319256,-7.012093,-5.148976,3.940172,-0.546812,-3.649145,4.461587,-5.755897,-6.990152,-2.682320,2.031710,5.631149,-9.887356,7.931192,-2.404279,-4.353313,3.018308,1.713685,-4.031283,-2.817720,3.161717,3.899627,2.807875,-0.864308,2.907684,2.483413,0.193933,-6.559131,-5.387391,-0.147228,6.224896,3.563532,9.269583,-0.856780,9.526318,-4.773495,6.776235,1.163781,7.551989,-9.099289,-5.640465,-8.361220,2.037738,5.401771,-3.564624,-5.977573,-2.822816,-0.329526,-4.565006,4.635449,-8.829538,-8.284050,-1.675052,-7.115330,-2.810248,-1.995498,3.187978,-2.152188,-5.459572,-4.962710,3.195016,-9.998269,-4.136561,5.797075,4.879239,-4.161654,-1.081570,6.160013,-6.265629,-3.534789,8.233798,4.261673,9.791378,5.392636,8.106022,-9.276201,-6.877867,-3.868847,-2.917949,5.760478,-5.373257,8.061819,-0.037762,0.771361,-2.425782,2.869043,0.700316,-7.512498,-7.157677,-4.846937,4.033109,-7.358165,5.986241,-7.137660,-0.200849,1.137732,2.997474,7.539176,7.437623,-6.875409,0.849421,3.751148,-8.218799,5.264269,3.179555,-6.430066,5.775790,-7.937068,9.599260,-5.747617,-5.853084,1.882970,-7.929224,-8.536945,4.811514,8.737426,-0.935111,9.096780,7.535242,-5.761759,-3.376349,2.101788,0.659162,-4.567852,7.142320,2.522734,-6.556110,2.833968,0.284909,8.749453,7.253165,6.065645,5.727853,-8.301752,-8.373466,-2.020860,-3.571095,-8.807704,0.176184,-5.566644,4.918805,5.415032,-4.236812,-2.958970,-1.838723,9.964186,-0.145142,0.549731,8.357850,-6.034391,-6.644815,9.252650,4.411722,2.544000,-2.881486,4.719848,0.579242,-0.612235,6.762526,3.924588,-1.054913,3.678759,-1.384084,-0.612853,7.826306,5.684675,8.230943,-1.843953,-3.105631,-2.321875,8.363931,-3.243409,-0.655740,7.586343,7.689465,6.930051,2.362252,-6.536379,4.742192,7.302042,-5.383758,7.577615,9.633508,-4.960625,0.960725,6.760436,-2.842293,6.552411,-5.108867,-7.030464,8.036704,1.985447,7.168960,-5.738681,-4.480647,8.520751,-3.241985,0.271979,-7.066333,4.688562,-2.484572,-5.775754,-2.266968,7.112524,-9.864004,-8.492584,9.943234,-4.685133,-8.032721,4.196334,8.000766,8.230461,6.626154,9.380431,-5.894683,5.908224,3.110976,0.286604,1.205410,-6.680358,-9.330685,-1.433049,-5.738705,-2.330776,9.655776,-4.623982,-9.637479,5.969214,-1.279817,6.983553,6.337340,4.367639,4.768058,7.498527,1.156604,-9.555764,-8.805742,3.378716,-5.179493,0.818150,7.287886,-8.508572,5.959411,-5.351838,-1.151900,-3.455579,-2.909925,4.032087,-6.443673,3.295189,-9.031344,-6.012442,-7.223967,-1.082037,7.372131,-6.758245,9.998910,1.465274,-9.202883,-5.157390,1.593177,6.689360,-9.753710,3.644516,4.117023,-6.047245,4.604644,-5.197671,-3.924837,-7.452665,1.476068,-6.876714,2.056368,4.073672,6.331858,-7.378016,9.452793,2.280914,-7.609362,-3.057346,9.784756,-8.146890,3.140083,-9.473502,9.745273,-2.112610,0.103776,1.549781,-7.867505,6.435859,-0.881947,-9.112662,5.865911,3.971157,0.369704,3.677279,-7.093335,3.171504,-9.041512,3.916668,-1.406462,-2.642805,-8.363092,-4.212758,0.530238,2.452510,1.446967,7.774438,8.358735,6.023431,-4.124111,9.085631,-2.855028,8.064995,-1.177083,-7.582157,-0.891707,-2.331044,-4.145062,8.102834,-1.276210,5.626725,-5.013920,-7.533467,7.622842,-2.083063,-4.717790,-0.867103,-2.607625,-5.822929,-0.493334,3.230476,2.429793,2.358779,-9.181596,4.327825,5.004604,5.383765,1.261838,2.254261,3.695178,0.744294,9.896937,-4.164050,9.463954,-4.090442,8.561059,-1.755121,-8.894914,-2.293885,-4.006310,0.444054,-0.251672,4.494137,6.635827,-6.244556,3.165290,-2.771424,2.514609,-6.350081,8.891230,-5.430758,1.591616,-5.515125,-9.690618,-1.983543,-6.637344,9.640849,-0.794743,4.723489,1.078336,-4.719208,2.089344,-8.327125,2.282529,1.149144,6.511506,0.791754,-1.379412,-9.001147,-3.857366,2.867839,6.895369,9.404124,9.146745,2.024233,-1.509238,0.829718,-7.316975,-2.083358,4.034322,0.157153,5.954753,5.969479,-3.120407,2.308513,-9.264048,2.117503,5.433380,-0.846166,9.319706,8.530195,5.976031,8.631787,-6.989209,-1.382796,4.562563,4.806491,-0.044590,-5.141507,-5.611694,-4.528402,-8.690650,-3.190113,-9.245568,7.256140,-0.793640,-5.576423,2.763165,-3.392534,3.540913,1.183355,-5.445043,-3.798530,1.414203,2.875452,-7.528248,6.400790,2.608614,-9.176174,-4.061817,-0.308999,-6.765913,-5.436494,-6.500877,-0.039951,7.238089,0.306735,-8.096337,1.149701,-3.591384,4.446587,-0.101702,-6.746011,5.956646,6.023149,-7.339435,-0.436779,-0.053022,-5.680928,7.871342,8.979206,0.965934,-3.898552,-1.074516,9.174481,-6.364287,7.843540,9.916025,4.439143,-2.386939,-2.008392,-7.671101,4.150252,-5.345074,6.287792,-0.916589,-7.903987,4.480900,4.292519,-5.173571,9.300927,-8.954184,4.675336,-2.333564,-6.103188,-2.446752,5.757075,5.794574,5.016707,-0.926552,-9.542326,3.411516,-0.342177,1.070214,-7.292208,9.811378,4.742499,-8.523247,7.998227,5.804388,1.682217,6.367464,-7.771962,-7.711017,-9.333116,-8.356102,9.281581,8.221825,4.607754,-6.355264,2.839090,4.348982,6.310296,2.030185,-3.979130,-2.721537,-6.042107,-0.789522,-2.120105,4.569671,7.787482,5.592904,0.543873,5.645748,-8.464591,2.155469,9.577230,-2.538429,-3.467666,7.369303,-9.886062,8.122782,8.049296,4.221105,-0.460558,-6.458281,-0.716867,-6.880536,0.167376,-0.697338,8.267848,8.635789,-9.289014,4.358130,2.676993,0.304017,-5.244416,2.617899,-6.462939,-7.539822,6.548146,6.684170,-6.193054,3.088019,5.730336,7.302818,3.213694,1.552234,-4.184575,7.489405,7.130004,5.477425,0.926855,-1.070708,7.011154,-3.392789,8.918609,5.065013,3.355147,2.391161,-3.188859,-3.733003,0.309621,-1.067191,-3.504986,-2.310970,-1.991490,-6.754122,-5.180968,-2.787509,9.850341,-8.064407,-4.192583,-7.276037,-7.367879,-8.200729,7.093192,6.154529,-3.517387,-5.041421,2.188233,-4.059633,6.990714,9.174178,4.928101,1.241077,-4.619098,-4.538492,5.033016,-5.496873,-6.212864,0.344168,0.795403,9.952732,-4.748088,8.866182,-6.775155,0.644796,-2.413787,9.701486,-5.285103,-5.046700,-2.261069,1.302196,5.474276,4.401417,-5.721064,5.958317,8.363242,4.685893,8.514908,9.653452,6.957346,1.109948,1.402170,3.465363,7.048506,-8.540983,-4.274341,-7.370391,-6.320392,-3.314153,-0.636431,-9.018319,-2.914349,0.891210,-7.672110,0.542905,0.059700,4.443049,0.776909,5.944099,-5.619543,-4.744865,3.043686,1.513420,-0.839620,5.927478,3.947256,3.508641,9.544050,0.797778,6.077569,4.469443,0.698846,-1.446085,-5.505739,-1.752117,8.175164,8.900791,3.149393,-3.452418,-2.747711,-8.597352,-4.153103,4.818301,-1.937484,3.088058,0.852418,-9.588559,-4.886951,8.514802,-8.715150,5.726272,-9.230248,4.890541,8.995714,-1.340702,2.306694,-7.736573,-5.647916,8.510177,-1.435163,-3.733344,-1.803007,1.576068,8.980794,2.486767,-8.606694,-1.523228,5.100561,-7.142881,0.021795,0.479786,3.322657,-1.978319,0.894540,-2.362666,8.540341,-8.859425,9.280674,-8.851898,-2.666013,4.580871,-2.563644,-2.567921,1.984437,2.670746,4.083305,3.207269,-4.663565,-2.736959,2.106210,3.098063,3.846334,-5.137874,9.776720,-2.955952,-2.980543,-8.737298,6.880022,6.068198,6.962326,8.571294,0.045668,0.776124,7.296151,0.961429,-1.521165,1.602644,-2.488531,7.253392,-7.496807,-9.196022,5.416313,8.930104,0.819113,1.455840,7.871582,4.806721,2.614797,-7.894254,-1.166781,6.892599,2.765921,-5.320680,5.853500,3.422510,3.140589,-1.361741,5.730612,5.165250,-2.952380,2.952977,-4.590680,-0.314809,-9.461607,-5.591638,1.497541,7.471533,-4.010721,-8.948728,2.538043,9.251971,9.003162,4.943486,0.460126,9.563987,7.598869,-5.621885,6.062395,4.307752,4.278547,-8.045829,-9.311714,9.293766,-6.175773,-6.034705,-9.427810,-8.668227,1.967489,-7.970004,5.996055,7.915603,-5.432289,-5.995833,-2.616902,6.675337,1.113651,-2.061793,-0.996915,-6.040412,-6.241285,-4.542653,-9.251704,-3.930370,5.321166,-5.880970,9.995815,6.021077,1.636964,8.312587,-4.216170,-6.531855,7.496326,0.045770,-0.601804,-5.479064,-0.772016,7.429183,6.696846,-6.728368,-2.469340,1.280533,-2.945068,-5.119718,-1.559665,-2.881981,-7.165090,-3.270155,5.589163,4.482752,9.435854,-3.021275,7.945818,-5.160381,-7.661930,2.167948,-5.272712,-3.517093,8.495556,-3.094397,-9.454718,-3.733427,1.911867,-9.341518,-4.877346,6.953396,4.008916,0.494013,5.827318,-1.101879,3.868494,3.541241,-1.030839,-8.437953,-4.027905,-6.408741,4.112198,3.635221,9.929312,-0.659205,-5.636024,-5.318595,0.936454,-3.841370,5.449411,-9.386568,-9.531331,-8.466540,8.999007,-1.662469,-7.680706,5.844410,-0.469219,-5.279145,-5.686779,4.151805,-6.691639,5.028728,-9.262160,4.471740,-2.648787,-8.332446,2.734921,1.620877,5.074946,-3.794302,-2.437574,-1.517372,-5.625905,3.571531,2.803331,5.379150,-3.044420,5.432479,-1.387229,-8.358147,3.133288,2.962098,-3.042650,6.100943,4.289629,5.019800,7.409518,-1.481342,-0.051858,8.484958,-2.539212,-1.330345,9.998523,3.521764,-4.503535,-1.276651,-0.548333,-3.450206,-0.812841,1.088066,6.141849,-0.495912,-6.534639,-0.370578,-2.744999,-2.356411,1.940199,1.010168,-1.304250,-1.712441,-5.212940,-6.501296,3.325670,2.112683,1.624802,1.149716,6.746240,9.655427,-4.574135,6.210997,0.202311,9.576499,-2.457830,8.720459,-3.496111,8.818650,-5.439377,2.449115,-8.504096,-2.107377,1.570487,-5.369165,9.689927,-3.179816,6.612107,-8.064968,0.748109,5.820606,-0.379976,8.081932,5.900989,3.374180,-1.748766,4.556229,-8.391022,-2.717546,4.225641,-1.597381,3.446747,-8.633977,-2.889675,6.211168,-7.878843,9.963047,-0.902308,4.164098,8.894752,7.235829,-0.875721,-2.093852,-9.531136,-5.908241,8.157721,-5.974571,-1.958929,-2.564757,6.889366,-7.349869,-9.618631,-3.072469,-4.019239,-3.856391,1.103624,-0.587121,-7.519281,-0.918673,5.032685,-1.710236,5.476598,9.035039,1.047271,2.070381,-5.061604,0.725811,0.730553,0.299651,4.000021,-0.776123,7.782240,-1.074909,1.010714,3.481123,-1.819434,-7.346190,-8.255578,2.208577,3.250563,9.131733,-2.392553,-1.710606,-4.363309,-6.556948], dtype = "float32")#candidate|1206|(1470,)|const|float32
var_1207 = relay.var("var_1207", dtype = "bool", shape = (104, 2))#candidate|1207|(104, 2)|var|bool
call_1205 = relay.TupleGetItem(func_941_call(relay.reshape(const_1206.astype('float32'), [7, 14, 15]), relay.reshape(var_1207.astype('bool'), [4, 4, 13]), ), 7)
call_1208 = relay.TupleGetItem(func_945_call(relay.reshape(const_1206.astype('float32'), [7, 14, 15]), relay.reshape(var_1207.astype('bool'), [4, 4, 13]), ), 7)
uop_1213 = relay.asinh(call_1186.astype('float32')) # shape=(9, 6, 14)
uop_1215 = relay.asinh(call_1188.astype('float32')) # shape=(9, 6, 14)
func_941_call = mod.get_global_var('func_941')
func_945_call = mutated_mod.get_global_var('func_945')
call_1218 = relay.TupleGetItem(func_941_call(relay.reshape(const_1206.astype('float32'), [7, 14, 15]), relay.reshape(call_1205.astype('bool'), [4, 4, 13]), ), 6)
call_1219 = relay.TupleGetItem(func_945_call(relay.reshape(const_1206.astype('float32'), [7, 14, 15]), relay.reshape(call_1205.astype('bool'), [4, 4, 13]), ), 6)
func_288_call = mod.get_global_var('func_288')
func_292_call = mutated_mod.get_global_var('func_292')
call_1229 = relay.TupleGetItem(func_288_call(relay.reshape(var_1183.astype('float64'), []), relay.reshape(var_1207.astype('float64'), [4, 4, 13]), ), 0)
call_1230 = relay.TupleGetItem(func_292_call(relay.reshape(var_1183.astype('float64'), []), relay.reshape(var_1207.astype('float64'), [4, 4, 13]), ), 0)
uop_1231 = relay.exp(uop_1213.astype('float64')) # shape=(9, 6, 14)
uop_1233 = relay.exp(uop_1215.astype('float64')) # shape=(9, 6, 14)
func_288_call = mod.get_global_var('func_288')
func_292_call = mutated_mod.get_global_var('func_292')
call_1234 = relay.TupleGetItem(func_288_call(relay.reshape(call_1181.astype('float64'), []), relay.reshape(call_1205.astype('float64'), [4, 4, 13]), ), 0)
call_1235 = relay.TupleGetItem(func_292_call(relay.reshape(call_1181.astype('float64'), []), relay.reshape(call_1205.astype('float64'), [4, 4, 13]), ), 0)
output = relay.Tuple([bop_1176,call_1181,const_1182,var_1183,var_1187,call_1205,const_1206,var_1207,call_1218,call_1229,uop_1231,call_1234,])
output2 = relay.Tuple([bop_1176,call_1184,const_1182,var_1183,var_1187,call_1208,const_1206,var_1207,call_1219,call_1230,uop_1233,call_1235,])
func_1247 = relay.Function([var_1175,var_1183,var_1187,var_1207,], output)
mod['func_1247'] = func_1247
mod = relay.transform.InferType()(mod)
mutated_mod['func_1247'] = func_1247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1247_call = mutated_mod.get_global_var('func_1247')
var_1249 = relay.var("var_1249", dtype = "int32", shape = (11, 12, 13))#candidate|1249|(11, 12, 13)|var|int32
var_1250 = relay.var("var_1250", dtype = "float64", shape = ())#candidate|1250|()|var|float64
var_1251 = relay.var("var_1251", dtype = "float64", shape = (756,))#candidate|1251|(756,)|var|float64
var_1252 = relay.var("var_1252", dtype = "bool", shape = (104, 2))#candidate|1252|(104, 2)|var|bool
call_1248 = func_1247_call(var_1249,var_1250,var_1251,var_1252,)
output = call_1248
func_1253 = relay.Function([var_1249,var_1250,var_1251,var_1252,], output)
mutated_mod['func_1253'] = func_1253
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1350 = relay.var("var_1350", dtype = "bool", shape = (13, 15, 11))#candidate|1350|(13, 15, 11)|var|bool
var_1351 = relay.var("var_1351", dtype = "bool", shape = (13, 15, 11))#candidate|1351|(13, 15, 11)|var|bool
bop_1352 = relay.logical_or(var_1350.astype('bool'), relay.reshape(var_1351.astype('bool'), relay.shape_of(var_1350))) # shape=(13, 15, 11)
output = bop_1352
output2 = bop_1352
func_1358 = relay.Function([var_1350,var_1351,], output)
mod['func_1358'] = func_1358
mod = relay.transform.InferType()(mod)
var_1359 = relay.var("var_1359", dtype = "bool", shape = (13, 15, 11))#candidate|1359|(13, 15, 11)|var|bool
var_1360 = relay.var("var_1360", dtype = "bool", shape = (13, 15, 11))#candidate|1360|(13, 15, 11)|var|bool
output = func_1358(var_1359,var_1360,)
func_1361 = relay.Function([var_1359,var_1360,], output)
mutated_mod['func_1361'] = func_1361
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1387 = relay.var("var_1387", dtype = "float64", shape = (15, 1, 8))#candidate|1387|(15, 1, 8)|var|float64
uop_1388 = relay.asin(var_1387.astype('float64')) # shape=(15, 1, 8)
output = relay.Tuple([uop_1388,])
output2 = relay.Tuple([uop_1388,])
func_1402 = relay.Function([var_1387,], output)
mod['func_1402'] = func_1402
mod = relay.transform.InferType()(mod)
mutated_mod['func_1402'] = func_1402
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1403 = relay.var("var_1403", dtype = "float64", shape = (15, 1, 8))#candidate|1403|(15, 1, 8)|var|float64
func_1402_call = mutated_mod.get_global_var('func_1402')
call_1404 = func_1402_call(var_1403)
output = call_1404
func_1405 = relay.Function([var_1403], output)
mutated_mod['func_1405'] = func_1405
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2012 = relay.var("var_2012", dtype = "uint64", shape = (1, 12, 2))#candidate|2012|(1, 12, 2)|var|uint64
var_2013 = relay.var("var_2013", dtype = "uint64", shape = (3, 12, 2))#candidate|2013|(3, 12, 2)|var|uint64
bop_2014 = relay.greater_equal(var_2012.astype('bool'), var_2013.astype('bool')) # shape=(3, 12, 2)
func_941_call = mod.get_global_var('func_941')
func_945_call = mutated_mod.get_global_var('func_945')
var_2019 = relay.var("var_2019", dtype = "float32", shape = (1470,))#candidate|2019|(1470,)|var|float32
var_2020 = relay.var("var_2020", dtype = "bool", shape = (208,))#candidate|2020|(208,)|var|bool
call_2018 = relay.TupleGetItem(func_941_call(relay.reshape(var_2019.astype('float32'), [7, 14, 15]), relay.reshape(var_2020.astype('bool'), [4, 4, 13]), ), 6)
call_2021 = relay.TupleGetItem(func_945_call(relay.reshape(var_2019.astype('float32'), [7, 14, 15]), relay.reshape(var_2020.astype('bool'), [4, 4, 13]), ), 6)
bop_2032 = relay.add(call_2018.astype('int8'), relay.reshape(var_2020.astype('int8'), relay.shape_of(call_2018))) # shape=(4, 4, 13)
bop_2035 = relay.add(call_2021.astype('int8'), relay.reshape(var_2020.astype('int8'), relay.shape_of(call_2021))) # shape=(4, 4, 13)
func_868_call = mod.get_global_var('func_868')
func_872_call = mutated_mod.get_global_var('func_872')
var_2042 = relay.var("var_2042", dtype = "int16", shape = (720,))#candidate|2042|(720,)|var|int16
var_2043 = relay.var("var_2043", dtype = "float64", shape = ())#candidate|2043|()|var|float64
call_2041 = relay.TupleGetItem(func_868_call(relay.reshape(var_2042.astype('int16'), [12, 4, 15]), relay.reshape(var_2042.astype('int16'), [12, 4, 15]), relay.reshape(var_2043.astype('float64'), []), ), 0)
call_2044 = relay.TupleGetItem(func_872_call(relay.reshape(var_2042.astype('int16'), [12, 4, 15]), relay.reshape(var_2042.astype('int16'), [12, 4, 15]), relay.reshape(var_2043.astype('float64'), []), ), 0)
output = relay.Tuple([bop_2014,var_2019,bop_2032,call_2041,var_2042,var_2043,])
output2 = relay.Tuple([bop_2014,var_2019,bop_2035,call_2044,var_2042,var_2043,])
func_2054 = relay.Function([var_2012,var_2013,var_2019,var_2020,var_2042,var_2043,], output)
mod['func_2054'] = func_2054
mod = relay.transform.InferType()(mod)
var_2055 = relay.var("var_2055", dtype = "uint64", shape = (1, 12, 2))#candidate|2055|(1, 12, 2)|var|uint64
var_2056 = relay.var("var_2056", dtype = "uint64", shape = (3, 12, 2))#candidate|2056|(3, 12, 2)|var|uint64
var_2057 = relay.var("var_2057", dtype = "float32", shape = (1470,))#candidate|2057|(1470,)|var|float32
var_2058 = relay.var("var_2058", dtype = "bool", shape = (208,))#candidate|2058|(208,)|var|bool
var_2059 = relay.var("var_2059", dtype = "int16", shape = (720,))#candidate|2059|(720,)|var|int16
var_2060 = relay.var("var_2060", dtype = "float64", shape = ())#candidate|2060|()|var|float64
output = func_2054(var_2055,var_2056,var_2057,var_2058,var_2059,var_2060,)
func_2061 = relay.Function([var_2055,var_2056,var_2057,var_2058,var_2059,var_2060,], output)
mutated_mod['func_2061'] = func_2061
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2242 = relay.var("var_2242", dtype = "float32", shape = (2, 8, 14))#candidate|2242|(2, 8, 14)|var|float32
uop_2243 = relay.acos(var_2242.astype('float32')) # shape=(2, 8, 14)
func_1402_call = mod.get_global_var('func_1402')
func_1405_call = mutated_mod.get_global_var('func_1405')
var_2246 = relay.var("var_2246", dtype = "float64", shape = (1, 120))#candidate|2246|(1, 120)|var|float64
call_2245 = relay.TupleGetItem(func_1402_call(relay.reshape(var_2246.astype('float64'), [15, 1, 8])), 0)
call_2247 = relay.TupleGetItem(func_1405_call(relay.reshape(var_2246.astype('float64'), [15, 1, 8])), 0)
bop_2248 = relay.left_shift(uop_2243.astype('uint64'), relay.reshape(var_2242.astype('uint64'), relay.shape_of(uop_2243))) # shape=(2, 8, 14)
output = relay.Tuple([call_2245,var_2246,bop_2248,])
output2 = relay.Tuple([call_2247,var_2246,bop_2248,])
func_2254 = relay.Function([var_2242,var_2246,], output)
mod['func_2254'] = func_2254
mod = relay.transform.InferType()(mod)
mutated_mod['func_2254'] = func_2254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2254_call = mutated_mod.get_global_var('func_2254')
var_2256 = relay.var("var_2256", dtype = "float32", shape = (2, 8, 14))#candidate|2256|(2, 8, 14)|var|float32
var_2257 = relay.var("var_2257", dtype = "float64", shape = (1, 120))#candidate|2257|(1, 120)|var|float64
call_2255 = func_2254_call(var_2256,var_2257,)
output = call_2255
func_2258 = relay.Function([var_2256,var_2257,], output)
mutated_mod['func_2258'] = func_2258
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2290 = relay.var("var_2290", dtype = "float64", shape = (14, 16, 10))#candidate|2290|(14, 16, 10)|var|float64
uop_2291 = relay.acos(var_2290.astype('float64')) # shape=(14, 16, 10)
var_2298 = relay.var("var_2298", dtype = "float64", shape = (14, 16, 10))#candidate|2298|(14, 16, 10)|var|float64
bop_2299 = relay.multiply(var_2290.astype('int32'), relay.reshape(var_2298.astype('int32'), relay.shape_of(var_2290))) # shape=(14, 16, 10)
func_1402_call = mod.get_global_var('func_1402')
func_1405_call = mutated_mod.get_global_var('func_1405')
const_2304 = relay.const([1.787005,-8.407991,-9.575436,6.310036,5.668766,-7.973490,5.330326,-3.280351,-8.283040,6.307869,-1.847167,-9.163027,7.735118,-9.403366,4.316160,5.938178,0.555430,4.821270,6.389023,-2.603631,-2.083909,-9.147776,7.371813,5.086836,3.358060,-8.788623,2.304077,-5.064407,1.770280,9.043873,9.447886,8.311411,1.620384,-9.338854,0.488712,1.603092,-9.936162,-2.384732,0.789228,2.667871,-4.872745,-9.251668,1.035556,-4.462865,2.210827,2.282466,-2.153445,4.593628,0.090899,-1.078598,4.624100,-3.805473,-2.240564,8.610625,4.557372,-3.593073,6.297697,5.960447,-7.554175,0.703623,0.472177,-7.349055,-1.974082,6.389794,7.634520,-9.763050,-6.055012,-9.216869,0.696303,-4.797122,2.026751,-3.482837,8.477639,3.103203,-6.564341,-5.589483,6.815303,9.240731,-6.833576,-4.425081,7.307401,-0.118437,1.665078,-0.311620,3.079259,0.783509,3.491914,2.300731,4.286484,-8.016034,9.883327,-7.903910,9.251188,-8.108466,-4.504150,-6.976786,-7.171837,5.958220,3.912150,-2.550044,-6.837462,8.718896,-5.951126,1.294037,1.537840,0.955739,-2.306003,-4.363856,1.560179,4.346189,6.232674,1.211080,6.014974,1.807288,-8.590424,9.995461,-4.081698,2.388041,6.561097,-6.170442], dtype = "float64")#candidate|2304|(120,)|const|float64
call_2303 = relay.TupleGetItem(func_1402_call(relay.reshape(const_2304.astype('float64'), [15, 1, 8])), 0)
call_2305 = relay.TupleGetItem(func_1405_call(relay.reshape(const_2304.astype('float64'), [15, 1, 8])), 0)
output = relay.Tuple([uop_2291,bop_2299,call_2303,const_2304,])
output2 = relay.Tuple([uop_2291,bop_2299,call_2305,const_2304,])
func_2314 = relay.Function([var_2290,var_2298,], output)
mod['func_2314'] = func_2314
mod = relay.transform.InferType()(mod)
var_2315 = relay.var("var_2315", dtype = "float64", shape = (14, 16, 10))#candidate|2315|(14, 16, 10)|var|float64
var_2316 = relay.var("var_2316", dtype = "float64", shape = (14, 16, 10))#candidate|2316|(14, 16, 10)|var|float64
output = func_2314(var_2315,var_2316,)
func_2317 = relay.Function([var_2315,var_2316,], output)
mutated_mod['func_2317'] = func_2317
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2319 = relay.var("var_2319", dtype = "float32", shape = (3, 13, 11))#candidate|2319|(3, 13, 11)|var|float32
uop_2320 = relay.log10(var_2319.astype('float32')) # shape=(3, 13, 11)
output = uop_2320
output2 = uop_2320
func_2329 = relay.Function([var_2319,], output)
mod['func_2329'] = func_2329
mod = relay.transform.InferType()(mod)
var_2330 = relay.var("var_2330", dtype = "float32", shape = (3, 13, 11))#candidate|2330|(3, 13, 11)|var|float32
output = func_2329(var_2330)
func_2331 = relay.Function([var_2330], output)
mutated_mod['func_2331'] = func_2331
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2567 = relay.const([[[-4.158243],[7.192636],[5.333170],[7.224702],[-0.275572],[6.041346],[5.773490],[3.456760],[3.244405],[-5.385532],[9.182616],[-4.248276],[-1.159357],[-0.524799]],[[2.222868],[-4.152889],[3.706040],[-6.563208],[-7.535382],[4.943216],[-0.560376],[-1.895422],[-5.262202],[-6.654684],[-9.024541],[9.864383],[6.384838],[-4.977432]],[[-4.957179],[-3.536979],[-7.546123],[0.308824],[-4.254862],[9.918585],[-8.429079],[5.221562],[1.606626],[-7.021443],[9.251652],[8.434634],[1.193864],[4.514972]],[[-1.561494],[-4.461531],[-4.708655],[9.768653],[8.444732],[-4.626322],[-2.305363],[-9.851219],[6.658163],[9.633530],[7.502657],[-2.973336],[-9.004621],[7.697628]],[[-8.867829],[-0.815355],[-5.531802],[0.990895],[9.138101],[-0.896825],[-9.696523],[-4.983508],[-4.008880],[9.647871],[-8.874499],[-8.082572],[-7.816367],[-4.798649]]], dtype = "float32")#candidate|2567|(5, 14, 1)|const|float32
uop_2568 = relay.exp(const_2567.astype('float32')) # shape=(5, 14, 1)
output = relay.Tuple([uop_2568,])
output2 = relay.Tuple([uop_2568,])
func_2584 = relay.Function([], output)
mod['func_2584'] = func_2584
mod = relay.transform.InferType()(mod)
output = func_2584()
func_2585 = relay.Function([], output)
mutated_mod['func_2585'] = func_2585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2584_call = mod.get_global_var('func_2584')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_2620 = relay.TupleGetItem(func_2584_call(), 0)
call_2621 = relay.TupleGetItem(func_2585_call(), 0)
uop_2643 = relay.tan(call_2620.astype('float64')) # shape=(5, 14, 1)
uop_2645 = relay.tan(call_2621.astype('float64')) # shape=(5, 14, 1)
func_1402_call = mod.get_global_var('func_1402')
func_1405_call = mutated_mod.get_global_var('func_1405')
var_2656 = relay.var("var_2656", dtype = "float64", shape = (120,))#candidate|2656|(120,)|var|float64
call_2655 = relay.TupleGetItem(func_1402_call(relay.reshape(var_2656.astype('float64'), [15, 1, 8])), 0)
call_2657 = relay.TupleGetItem(func_1405_call(relay.reshape(var_2656.astype('float64'), [15, 1, 8])), 0)
func_490_call = mod.get_global_var('func_490')
func_494_call = mutated_mod.get_global_var('func_494')
var_2665 = relay.var("var_2665", dtype = "uint16", shape = ())#candidate|2665|()|var|uint16
var_2666 = relay.var("var_2666", dtype = "uint16", shape = (72,))#candidate|2666|(72,)|var|uint16
call_2664 = relay.TupleGetItem(func_490_call(relay.reshape(var_2665.astype('uint16'), []), relay.reshape(var_2666.astype('uint16'), [12, 2, 3]), ), 0)
call_2667 = relay.TupleGetItem(func_494_call(relay.reshape(var_2665.astype('uint16'), []), relay.reshape(var_2666.astype('uint16'), [12, 2, 3]), ), 0)
func_2329_call = mod.get_global_var('func_2329')
func_2331_call = mutated_mod.get_global_var('func_2331')
var_2686 = relay.var("var_2686", dtype = "float32", shape = (429,))#candidate|2686|(429,)|var|float32
call_2685 = func_2329_call(relay.reshape(var_2686.astype('float32'), [3, 13, 11]))
call_2687 = func_2329_call(relay.reshape(var_2686.astype('float32'), [3, 13, 11]))
func_868_call = mod.get_global_var('func_868')
func_872_call = mutated_mod.get_global_var('func_872')
const_2692 = relay.const([[8,8],[8,-8],[6,-9],[10,-6],[8,2],[3,-4],[7,-8],[-7,6],[10,3],[-9,-2],[-5,-5],[-10,3],[1,4],[3,6],[5,-2],[2,10],[-1,9],[-5,2],[-4,6],[10,-4],[7,4],[5,9],[-3,4],[8,-7],[-10,10],[9,-5],[10,7],[-1,10],[8,-7],[3,-4],[-8,2],[-4,-8],[7,-10],[-1,-7],[6,-3],[-6,4],[-5,6],[-10,4],[9,-7],[-7,7],[-2,-10],[2,6],[-3,5],[-9,5],[4,4],[4,-4],[-6,-5],[-4,8],[-1,-1],[-10,-1],[5,4],[6,10],[1,-4],[1,-7],[8,1],[6,10],[-10,10],[-7,4],[-6,-5],[-6,-2],[8,1],[3,6],[9,3],[-9,-3],[-3,10],[4,1],[-2,2],[-9,4],[-10,7],[-2,7],[2,-9],[5,1],[-4,10],[-5,-8],[7,-5],[-4,-6],[-6,2],[-7,1],[2,-10],[1,7],[-2,-7],[-9,-4],[-5,-3],[-7,-7],[-3,1],[9,9],[4,-8],[-3,-2],[5,-4],[4,-9],[6,-10],[-2,-6],[-8,-4],[2,6],[-5,1],[-3,-4],[2,-1],[7,-7],[-5,-6],[6,3],[-2,10],[-2,-8],[-3,6],[-3,4],[-10,4],[-6,-10],[10,7],[9,-1],[-7,-5],[-7,6],[3,8],[2,-1],[-7,-10],[8,2],[-6,-5],[9,6],[-6,2],[5,5],[-10,3],[-3,6],[1,-2],[4,8],[-3,4],[8,-5],[-10,-10],[-7,-4],[8,-2],[-4,-2],[2,6],[8,-9],[7,-2],[-3,1],[-5,10],[-8,2],[-4,8],[1,-4],[3,-3],[4,-1],[-5,-7],[-9,-4],[1,-8],[-10,4],[5,1],[1,-2],[-7,-5],[-7,3],[-9,-10],[1,5],[-10,1],[-3,2],[-7,7],[2,2],[4,-2],[6,-5],[-8,-3],[1,-10],[-1,8],[6,-6],[-5,-10],[-10,-8],[-2,7],[6,2],[7,2],[5,8],[3,-2],[8,-3],[-10,-1],[7,-7],[10,8],[-4,-1],[-10,-10],[4,-1],[-5,-7],[4,7],[-5,4],[-8,3],[-3,-5],[3,-9],[-8,8],[-6,-1],[5,-2],[-10,-2],[-9,-6],[-9,6],[-2,-10],[-8,2],[7,-10],[-2,-4],[10,7],[-6,4],[-7,-2],[-1,-10],[-1,2],[1,-5],[-3,-3],[-7,1],[4,-9],[6,6],[4,-2],[8,10],[4,7],[5,6],[-9,2],[-8,5],[-2,4],[8,1],[-2,8],[7,-9],[9,6],[10,-3],[-5,-6],[1,-6],[-6,1],[2,5],[-7,4],[-1,4],[-1,-6],[-4,-1],[-8,-1],[10,2],[-10,9],[6,-8],[7,6],[-4,-7],[-3,-7],[6,6],[-5,-4],[6,1],[8,-8],[4,-7],[9,-8],[-6,-10],[-2,3],[-3,3],[-8,4],[-3,-10],[5,-5],[-3,1],[-8,4],[5,-10],[-1,6],[-4,3],[-6,-5],[-10,-1],[-2,-5],[9,-8],[-4,-10],[6,-8],[2,2],[-5,-9],[-2,1],[9,8],[-6,-6],[-8,3],[-7,-10],[10,-2],[4,-10],[1,-9],[4,-6],[9,2],[-8,4],[5,7],[-8,-6],[7,-3],[-6,-7],[2,9],[-5,9],[-2,3],[3,5],[5,-9],[10,-3],[7,-7],[1,-9],[1,9],[4,2],[-10,5],[4,-9],[-3,2],[-6,-2],[1,6],[-5,-4],[-3,-4],[2,-3],[3,-6],[-8,-6],[5,-4],[-2,-6],[8,-4],[-6,-1],[1,6],[-3,6],[6,3],[-8,5],[-6,6],[9,-3],[-5,2],[-5,-2],[8,2],[8,-7],[1,-10],[-8,4],[-8,-4],[-2,4],[5,-1],[-8,-9],[-1,-6],[-2,-5],[3,-3],[10,7],[-8,5],[-9,9],[6,6],[-3,8],[7,-4],[9,3],[-5,-4],[-6,5],[3,3],[-10,8],[2,-7],[9,10],[-3,7],[4,-3],[8,3],[10,5],[-9,-9],[-1,-2],[3,10],[7,9],[6,2],[-6,8],[6,-6],[-1,-2],[-9,7],[10,-7],[-3,4],[-8,-1],[-9,-4],[-10,6],[6,-2],[3,7],[-5,-6],[-6,-5],[-9,-8],[-1,3],[2,2],[-10,9],[2,-4],[5,9],[-6,4],[-7,2],[9,-4],[8,10],[-5,-3],[-5,-2],[4,-4],[-7,-1],[-9,6],[4,-3],[-7,5]], dtype = "int16")#candidate|2692|(360, 2)|const|int16
call_2691 = relay.TupleGetItem(func_868_call(relay.reshape(const_2692.astype('int16'), [12, 4, 15]), relay.reshape(const_2692.astype('int16'), [12, 4, 15]), relay.reshape(var_2665.astype('float64'), []), ), 5)
call_2693 = relay.TupleGetItem(func_872_call(relay.reshape(const_2692.astype('int16'), [12, 4, 15]), relay.reshape(const_2692.astype('int16'), [12, 4, 15]), relay.reshape(var_2665.astype('float64'), []), ), 5)
func_1402_call = mod.get_global_var('func_1402')
func_1405_call = mutated_mod.get_global_var('func_1405')
call_2703 = relay.TupleGetItem(func_1402_call(relay.reshape(call_2655.astype('float64'), [15, 1, 8])), 0)
call_2704 = relay.TupleGetItem(func_1405_call(relay.reshape(call_2655.astype('float64'), [15, 1, 8])), 0)
output = relay.Tuple([uop_2643,call_2655,var_2656,call_2664,var_2665,var_2666,call_2685,var_2686,call_2691,const_2692,call_2703,])
output2 = relay.Tuple([uop_2645,call_2657,var_2656,call_2667,var_2665,var_2666,call_2687,var_2686,call_2693,const_2692,call_2704,])
func_2709 = relay.Function([var_2656,var_2665,var_2666,var_2686,], output)
mod['func_2709'] = func_2709
mod = relay.transform.InferType()(mod)
mutated_mod['func_2709'] = func_2709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2709_call = mutated_mod.get_global_var('func_2709')
var_2711 = relay.var("var_2711", dtype = "float64", shape = (120,))#candidate|2711|(120,)|var|float64
var_2712 = relay.var("var_2712", dtype = "uint16", shape = ())#candidate|2712|()|var|uint16
var_2713 = relay.var("var_2713", dtype = "uint16", shape = (72,))#candidate|2713|(72,)|var|uint16
var_2714 = relay.var("var_2714", dtype = "float32", shape = (429,))#candidate|2714|(429,)|var|float32
call_2710 = func_2709_call(var_2711,var_2712,var_2713,var_2714,)
output = call_2710
func_2715 = relay.Function([var_2711,var_2712,var_2713,var_2714,], output)
mutated_mod['func_2715'] = func_2715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2584_call = mod.get_global_var('func_2584')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_2732 = relay.TupleGetItem(func_2584_call(), 0)
call_2733 = relay.TupleGetItem(func_2585_call(), 0)
output = relay.Tuple([call_2732,])
output2 = relay.Tuple([call_2733,])
func_2758 = relay.Function([], output)
mod['func_2758'] = func_2758
mod = relay.transform.InferType()(mod)
output = func_2758()
func_2759 = relay.Function([], output)
mutated_mod['func_2759'] = func_2759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2584_call = mod.get_global_var('func_2584')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_2784 = relay.TupleGetItem(func_2584_call(), 0)
call_2785 = relay.TupleGetItem(func_2585_call(), 0)
output = relay.Tuple([call_2784,])
output2 = relay.Tuple([call_2785,])
func_2795 = relay.Function([], output)
mod['func_2795'] = func_2795
mod = relay.transform.InferType()(mod)
mutated_mod['func_2795'] = func_2795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2795_call = mutated_mod.get_global_var('func_2795')
call_2796 = func_2795_call()
output = call_2796
func_2797 = relay.Function([], output)
mutated_mod['func_2797'] = func_2797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_2826 = relay.TupleGetItem(func_2758_call(), 0)
call_2827 = relay.TupleGetItem(func_2759_call(), 0)
output = relay.Tuple([call_2826,])
output2 = relay.Tuple([call_2827,])
func_2857 = relay.Function([], output)
mod['func_2857'] = func_2857
mod = relay.transform.InferType()(mod)
output = func_2857()
func_2858 = relay.Function([], output)
mutated_mod['func_2858'] = func_2858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2584_call = mod.get_global_var('func_2584')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_2862 = relay.TupleGetItem(func_2584_call(), 0)
call_2863 = relay.TupleGetItem(func_2585_call(), 0)
func_941_call = mod.get_global_var('func_941')
func_945_call = mutated_mod.get_global_var('func_945')
const_2874 = relay.const([8.308729,-3.736027,9.716245,6.016656,-9.143660,5.222700,-9.219419,-0.474192,4.556135,-1.994747,3.393249,4.246335,6.586042,7.762445,2.192938,-2.139750,-4.029560,-6.311100,1.763239,-3.955466,-9.435388,-2.026041,-2.448123,0.390561,2.747756,2.763533,2.547074,3.938351,-9.986476,-6.618995,-2.159628,-0.574032,5.641028,8.408770,-2.854261,-9.144248,6.199193,8.081731,4.502412,7.204272,-8.250982,9.078643,8.988221,-7.423408,-1.600764,8.648319,-0.528155,9.905776,-6.702679,-3.397589,4.048535,3.586641,4.623266,-6.806571,9.061231,1.238325,7.742948,-9.974677,6.676194,-2.611679,9.193807,8.747161,7.888437,3.752542,8.458833,-9.349987,7.198685,4.795992,-4.839602,0.192264,5.619022,8.005375,-0.746325,1.854928,3.536604,1.221356,-1.269076,-2.162047,5.560405,1.465038,7.671853,8.811239,-2.508656,2.969921,2.763718,-5.518900,2.694087,7.237384,6.380435,-6.522588,-3.249340,7.167139,-8.478180,-2.349209,-9.709020,-3.685050,8.741642,-9.561930,-0.746874,-6.329549,-3.588125,-4.014791,-6.317680,2.209135,-7.308788,-4.929223,0.653714,2.044687,7.907243,-4.998248,-2.483762,9.206683,-3.613397,7.566260,3.017593,-3.961727,-2.960892,-0.972264,-4.392720,7.666252,0.312733,5.300430,4.396276,-2.994890,-0.606922,-4.715465,8.510653,-6.526112,0.731172,-5.467714,2.554643,5.931632,8.793507,2.268369,1.202030,-2.273534,-7.853671,-8.556999,2.535052,8.795706,1.974035,-2.977534,7.302813,-3.351233,-6.784422,-2.319615,-9.516336,8.973570,4.346794,2.653965,7.051047,2.344204,-1.316676,-4.345654,-6.210381,8.652375,8.203973,-4.692909,6.671086,-7.214365,5.987017,7.100951,-8.114562,7.961588,0.525099,-9.885409,-3.912395,0.353270,2.827667,-5.854644,5.351579,4.946640,1.529532,1.467970,2.832856,-4.483755,-1.716653,-7.506821,8.411242,-9.052327,-9.647124,0.509358,-3.972151,3.309806,-0.544353,4.436255,-8.323212,1.418531,-9.687886,-6.420319,-3.047859,-2.620310,-2.993955,5.239312,-2.317342,4.620762,-1.239488,-6.171714,7.496798,2.811209,6.291680,1.981808,6.659406,-4.721698,2.364908,7.789842,4.752303,8.633889,-6.211736,9.030568,-1.795045,-1.259589,-7.105783,-4.502568,-1.326410,4.657053,-8.740489,4.626419,9.628238,-0.507310,-3.575853,-5.649976,9.894438,-2.344833,-1.285708,9.313488,-7.205231,-9.713004,-3.040235,-4.778805,-3.823869,-3.736141,-4.456172,-9.890364,6.931597,-2.382414,3.189510,-6.780304,-0.774842,-6.813605,-0.516608,-6.824738,0.430256,9.031263,6.908145,6.465985,-5.509966,-5.861941,1.878513,-2.253079,9.068901,8.242927,-8.144120,-0.402258,-6.741576,8.986601,-1.480418,6.052397,-8.879068,2.767764,-5.146496,8.900237,-8.620968,7.231682,0.934701,6.256818,-1.422691,1.263169,-6.573791,-6.765919,-2.218820,1.936292,1.523016,2.151084,-3.509025,3.181007,8.537545,0.083437,-8.378938,2.249531,-1.829388,8.350491,8.977618,9.903094,-6.829181,-5.544956,-1.160123,4.028602,-2.895775,9.116591,2.557511,5.846072,-3.242247,-5.093551,8.847438,-9.940680,-0.190064,0.333858,-2.336241,4.923940,-7.816032,2.066609,-7.227351,-6.968956,7.860372,2.564416,-2.490904,1.509278,3.757851,0.703406,-9.717233,-3.107536,3.675519,-3.934782,6.128604,-9.376002,-5.899287,-8.206866,-1.781649,0.187908,-5.115433,-6.919794,-7.216979,7.119780,-9.808082,-0.884528,-7.493409,5.365355,-0.403888,0.763719,-7.210035,1.317411,-5.070970,3.689578,-0.795117,-4.267170,9.086231,8.424632,5.633890,2.501669,-6.650438,-7.323504,-0.551375,-6.353484,0.262313,-2.569036,-8.718705,-8.931618,1.199167,5.923707,7.046684,9.688016,9.321564,-0.073987,8.024500,-2.359957,7.088719,2.160378,-2.389213,8.235514,4.047511,4.144220,3.147248,-1.953268,2.334907,5.853749,-2.160058,3.552121,1.492858,-2.392150,0.789235,-7.504895,4.115081,8.632564,-6.658261,9.523242,-0.909700,5.988679,3.268308,4.695910,7.055850,9.747059,1.504729,2.710289,-2.970448,0.069169,-3.593245,-8.735319,4.276578,-6.591811,-6.139882,-0.253698,-9.399656,9.660986,8.922339,9.353835,6.149732,-7.288835,4.583213,1.086759,2.268635,-1.664055,6.719712,9.873244,-1.939433,-2.294956,-9.866754,8.211092,-3.552864,-8.986826,2.909745,-9.750900,-8.042214,1.534619,1.069733,4.785906,-8.571897,-5.259227,-7.065931,-5.819491,8.028401,-7.150280,4.851067,7.259017,-9.407935,-1.619714,6.217336,-2.035364,0.713868,6.490103,-2.986359,-5.674612,-0.825804,-1.478788,-8.688650,4.710171,9.469948,9.570482,-1.119488,-7.943283,-2.624721,-3.992222,-0.830579,7.287618,2.227371,-1.552285,3.315557,-2.317816,3.906375,7.195062,5.035201,-7.495697,-1.872105,-1.239989,-7.951740,1.209798,5.348192,-3.287148,-4.225221,8.048397,-2.728816,5.888956,-1.464377,-5.763675,9.458199,-2.142630,-3.022762,7.609755,-1.692403,4.701206,4.958897,-3.070294,1.989323,-1.406981,-8.136618,1.811053,1.033251,1.272496,-1.333596,8.850980,5.062063,-0.115750,-2.485946,-2.737969,2.581833,9.290920,-7.189372,5.596715,-8.153294,4.100816,-9.803270,-5.920779,0.258224,1.823318,3.164584,8.326796,-4.753270,-0.864144,-2.973280,-7.769721,2.824219,-0.114195,2.263894,7.984929,3.243001,-0.242749,5.304284,3.005837,-8.066232,-7.099555,9.296528,-9.825446,0.047107,1.753200,5.202786,-3.068006,9.498085,-6.727130,-4.117653,0.144929,-1.942768,6.538795,-3.199244,8.277731,-1.691806,-2.292893,5.471612,5.840672,6.727592,-1.674545,-8.218386,0.002146,9.295993,-5.985365,6.503039,1.230904,-8.621578,9.262027,5.010418,0.495936,-8.381621,-7.416768,4.967418,6.275053,-0.084999,7.054923,-3.549592,-1.624199,4.206466,7.427010,-8.131637,-3.187713,-5.435228,2.383651,-1.793526,5.160430,-8.225647,4.560813,7.444469,6.938970,-4.056522,3.092985,0.663389,9.033520,-4.248746,-5.051292,4.063372,1.175374,-6.700592,-7.291140,-9.746525,-3.303880,8.181233,-8.286707,-1.527866,-6.673782,-7.170228,6.837139,7.596668,-2.009649,3.289007,1.036994,-0.219198,-1.693603,0.454305,8.288208,-0.666070,1.288794,7.196808,9.226741,3.866307,5.153763,8.335855,6.558218,0.333341,-7.859069,-0.917288,6.561976,3.990139,-9.487280,-3.748179,-1.451090,8.711399,-3.771638,6.697087,-1.443368,8.079349,-0.010413,-0.040556,-2.156292,-4.921285,-5.775659,-1.634086,2.699729,-3.985089,-5.078562,2.355781,2.431729,-8.943558,-7.728526,5.330406,-4.875325,-9.730540,3.512327,4.153239,-3.186832,4.027735,-7.841178,-3.854180,0.329085,4.959286,-3.666718,-5.813809,4.897440,0.270650,-2.166711,-2.666297,-2.352558,5.699723,8.945764,0.455599,-2.892153,2.965588,-7.153333,-5.058808,-1.163991,3.528151,5.440760,-1.868964,8.131400,-4.013372,6.471724,-6.935511,8.332638,3.923619,-4.775179,-6.890946,4.089013,-9.962561,5.088210,9.965209,-3.382491,-6.558226,-2.698670,5.536955,7.805241,8.781202,-3.668085,-5.977806,-9.837145,6.050037,-7.051759,7.973031,3.709096,3.615743,7.689042,-3.640549,5.315369,3.329748,4.104091,1.858114,-5.147963,0.531256,2.147179,-1.439170,-6.048508,-1.736483,9.939720,-7.059353,1.317303,4.310689,6.872641,9.429679,3.014903,-8.778226,9.255385,7.725878,1.709727,-9.508058,-5.492552,-1.757171,-9.020947,0.824998,-7.772658,-9.983398,9.133032,-4.844793,4.555320,0.678607,-4.154341,-6.367378,-2.957197,4.153392,-2.298588,-6.975888,-7.906575,5.232156,9.927423,-6.475179,8.803711,-6.644064,8.375968,9.710241,-5.627840,4.138864,-5.802657,-6.657328,0.689124,-1.355877,6.704011,-6.455143,4.592756,9.641237,-4.800293,1.370746,-2.610044,-4.602815,-4.546627,0.776754,-4.217774,-3.796340,-5.540148,9.317387,-2.755909,8.917099,-9.784497,-7.090999,-7.825781,4.274157,2.575987,-4.730642,-4.444283,3.385569,-3.134352,2.968536,9.226635,5.008069,-3.222474,9.403142,9.215242,-2.474484,-1.017327,5.040495,-9.768491,3.323706,1.780398,-3.878716,-1.373204,6.648380,-2.838134,-5.624344,-7.695425,3.830387,-6.993097,9.344721,2.754587,-0.493862,-0.938533,-5.681309,-1.437293,0.413012,5.394806,9.839585,7.822249,-6.103989,8.675617,-5.532444,1.038889,-2.131601,-5.773448,8.171601,3.162304,-1.991365,8.227601,0.586106,-6.916338,-6.267622,-9.769617,-9.065304,-4.126260,6.050736,1.281880,0.510004,4.485257,-1.631133,7.834475,3.897179,2.926441,9.802164,9.147946,-0.147539,4.017896,5.762494,-4.939458,6.171131,8.802529,-3.337176,-3.037883,5.618865,5.402013,-4.939763,7.036890,-3.764677,9.688238,8.801278,-3.328522,-0.164836,-0.814451,6.830936,8.751448,1.576510,4.680837,8.949343,3.281180,8.111364,4.742602,-1.742071,0.870563,7.980764,-9.641092,8.285647,2.625412,-7.054991,-1.741458,-0.986381,-8.400826,-0.865398,-8.012269,-7.205959,-9.818692,-4.001404,8.416042,-2.910149,3.160194,6.907739,-9.693148,-9.158256,-6.532722,-6.798309,-2.315717,7.858307,-8.761151,-1.381391,5.585339,9.499844,-9.905254,7.847084,-6.775882,8.515070,-6.053632,0.347764,4.617626,-7.101756,-1.264976,-9.143883,9.433703,6.648510,0.646477,-8.816399,-2.474498,-1.911380,-5.594219,-9.480878,5.464129,-2.406903,-5.496755,6.942315,-3.512686,-1.995781,-1.011990,1.555312,-4.794961,7.381517,3.630417,-5.189209,6.227269,-9.543853,8.864747,-6.900107,-4.234120,-1.251644,-2.630244,8.790871,5.327409,9.470478,-4.118018,1.321979,-8.984120,6.053974,1.362817,1.237568,-0.214635,-6.607946,7.072368,6.054788,4.186737,-0.254466,9.441981,-6.108000,9.124374,-2.501169,7.260311,-0.900303,-2.822967,5.536024,-3.532857,2.953181,-8.614720,-0.993651,-0.419685,-2.464088,0.375594,-0.416059,-6.760265,3.478515,-7.216109,5.909855,7.483901,6.208450,0.834396,0.656968,-6.409518,4.989223,-0.301720,-3.325327,6.091008,0.001263,4.380565,1.413766,-1.483130,-2.843144,-5.332081,-4.117511,0.968353,2.535035,-7.452195,-2.752283,7.272332,-0.939020,4.410684,4.180758,1.072726,6.079660,-1.548509,-5.071365,8.235094,0.690705,-7.235171,-1.458079,-0.872823,9.044697,-4.713593,1.084566,2.435219,-2.501723,-6.491951,9.200372,-6.941190,-8.662074,9.627611,5.820203,7.313281,-3.798644,1.993047,-3.676187,-9.694160,-5.981630,3.806733,0.729938,2.945157,-8.470811,7.864487,5.130642,-6.807009,-0.743088,-5.103344,4.596600,-9.668138,-3.233720,-1.517592,5.924457,-6.668666,7.671804,3.635066,-8.748285,-1.642896,-2.098555,-0.067165,5.546323,-4.226452,-9.669122,-4.410577,-9.259379,1.107882,-6.623076,6.276564,-6.734244,4.063152,-8.846084,-4.889343,-0.222745,8.966336,-1.923556,-9.321891,-2.584595,4.219397,-5.141742,-3.330504,4.828197,0.815364,4.368571,0.093541,-7.007041,-8.528872,-9.779834,4.968485,6.776305,7.124224,-7.874893,-1.704311,-7.578281,5.876493,6.756666,-8.654949,3.138735,-0.633114,-2.617233,-6.112584,-7.632411,5.780904,-0.453204,7.776016,6.683231,5.594559,0.077631,7.492659,-8.253625,-6.114994,-5.584670,-6.616340,-9.019904,7.340568,-6.427058,1.718250,-1.458233,7.404269,7.146717,-4.302720,-8.575676,-7.134218,3.020959,1.446266,-5.929904,6.842784,-9.969079,-0.874881,-4.879273,-0.452718,2.074814,-4.994512,-0.652056,-8.201726,-4.363641,4.601601,6.504104,-1.175465,5.734816,-3.383903,0.742345,-4.975920,2.596819,-7.761550,-2.217770,-5.273791,-2.861958,2.397947,9.807340,-7.994725,9.209107,-9.767210,7.367836,9.857752,-3.036215,-0.154182,-1.392952,-6.747266,4.935775,3.486861,2.239307,-9.928180,-8.132246,-6.620583,5.235986,-1.988928,-9.459314,3.323598,8.668421,-1.305618,-0.629360,-0.298256,-9.062252,-6.790141,7.189812,2.692440,-1.430921,2.831517,-6.890237,-0.840313,-5.872288,-3.279102,8.650730,0.931212,-9.635175,-4.329512,-8.501485,8.358301,3.429099,7.571220,-7.772701,6.460136,-8.923563,3.204241,5.974594,-1.406623,-7.970952,-6.541989,0.015526,6.120735,-7.851151,-6.174116,-0.794625,0.744469,-9.558827,-0.700904,6.951580,6.607239,-3.645643,-5.027426,-2.910152,-0.934597,9.938199,-5.645682,-4.743214,1.915023,1.504046,7.372635,8.227429,-2.597600,2.543382,-2.804312,-7.752598,-7.314155,1.906200,-3.909707,-1.001507,-7.957677,-3.636156,-4.574887,-4.021098,1.645105,0.079860,2.434250,8.416719,-6.297720,9.213006,5.439018,-5.813849,-7.618819,5.150054,4.114674,0.452211,9.838678,-9.191945,-0.394181,7.204973,2.949622,4.659000,-2.486375,-7.901918,6.226875,5.615719,7.983424,2.334807,2.697735,5.372480,-5.542786,3.154653,-9.412518,0.143384,-8.753242,-0.805996,9.198460,4.448409,-9.652204,4.089488,9.812807,-5.133269,-8.175944,-8.020953,-8.527378,2.170538,6.973294,8.085313,-9.946329,-3.614939,9.907546,-3.535943,-1.027465,-1.745615,3.969402,4.955762,5.149228,-7.745702,1.272581,8.348569,-7.202428,-8.844643,3.161613,9.640825,-1.037903,4.365851,-7.005068,-9.315578,0.689126,2.152120,-2.292658,2.822325,-4.087841,-2.126678,-2.914580,-0.327467,-7.561956,-2.247641,-0.790003,5.412884,-0.899823,-2.156962,0.058521,6.843253,-4.501274,4.215766,2.669508,-3.708872,-3.122220,5.326876,-9.866288,1.895424,-2.397015,2.779980,0.381893,7.856415,9.488125,-3.064223,5.149809,0.181049,-6.868443,-3.717068,8.461797,-1.319852,3.249094,-8.594190,5.163206,-0.840350,-3.562916,-7.307250,4.326931,4.084684,3.854563,5.798534,7.088558,-3.530215,0.960427,-7.326691,0.777825,6.391674,-8.111776,2.665787,0.478136,-5.846876,6.468476,-2.251906,-2.678442,3.477459,4.017245,-1.749178,7.847289,7.264470,-0.423619,2.653440,-8.621462,-6.247098,-9.093250,-0.004289,-1.289307,7.129424,7.101514,-0.504423,4.777519,7.338076,-9.053124,-9.764481,5.349408,-9.615626,9.796486,3.990395,-2.208455,-2.945730,4.503470,2.617964,8.156859,6.979514,-3.903806,0.312964,6.309866,-9.366696,-5.141506,5.120734,-9.321623,4.760687,7.785743,0.906681,4.377372,4.018347,-8.233541,-3.511348,0.454484,-1.111259,3.111994,-1.658411,6.922333,-1.463818,2.118556,1.860760,5.777140,7.265003,5.584978,1.243231,-5.921404,-2.362999,0.449946,1.131050,-5.341978,-6.212209,4.711921,7.739975,2.866946,-8.171921,8.545139,3.426393,2.969330,-0.347473,4.645676,1.063901,-1.292895,0.157280,-0.813639,-5.667476,-5.400075,-4.902571,9.792131,-9.210911,1.747620,9.183155,-2.454729,4.756652,4.174960,2.983802,1.519533,1.651397,-2.631095,9.333416,0.454078,4.443075,-6.723608,6.471392,9.006364,7.998410,-8.649040,-0.977976,4.385594,-5.890367,1.623035,1.764948,-7.757489,-1.512455,3.453333,4.398762,5.249149,9.562660,-2.952858,-4.057090,-5.247030,-7.475718,-8.673850,-6.577633,6.232799,4.559212,-9.357923,9.793520,8.076908,2.084206,-3.547338,5.087118,7.284851,8.360421,8.886909,-1.051108,3.151583,-2.135534,6.053392,7.224588,-2.174844,6.087763,-5.070889,1.369775,-3.959832,-9.814491,-9.967025,-3.788770,-5.267031,5.229569,5.368063,-0.125365,4.126163,2.713287,7.652396,3.188368,8.875398,-1.030565,1.305038,8.648714,-7.378512,-4.955639,2.032446,-4.478646,7.330725,5.308227,8.848264,0.740392,-3.788316,0.445658,-8.607924,1.846365,8.067727,9.103803,-7.869625,-7.485759,-2.608673,7.305226,-8.033248], dtype = "float32")#candidate|2874|(1470,)|const|float32
var_2875 = relay.var("var_2875", dtype = "bool", shape = (208,))#candidate|2875|(208,)|var|bool
call_2873 = relay.TupleGetItem(func_941_call(relay.reshape(const_2874.astype('float32'), [7, 14, 15]), relay.reshape(var_2875.astype('bool'), [4, 4, 13]), ), 8)
call_2876 = relay.TupleGetItem(func_945_call(relay.reshape(const_2874.astype('float32'), [7, 14, 15]), relay.reshape(var_2875.astype('bool'), [4, 4, 13]), ), 8)
func_490_call = mod.get_global_var('func_490')
func_494_call = mutated_mod.get_global_var('func_494')
const_2889 = relay.const(1, dtype = "uint16")#candidate|2889|()|const|uint16
call_2888 = relay.TupleGetItem(func_490_call(relay.reshape(const_2889.astype('uint16'), []), relay.reshape(call_2873.astype('uint16'), [12, 2, 3]), ), 0)
call_2890 = relay.TupleGetItem(func_494_call(relay.reshape(const_2889.astype('uint16'), []), relay.reshape(call_2873.astype('uint16'), [12, 2, 3]), ), 0)
func_2584_call = mod.get_global_var('func_2584')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_2930 = relay.TupleGetItem(func_2584_call(), 0)
call_2931 = relay.TupleGetItem(func_2585_call(), 0)
func_490_call = mod.get_global_var('func_490')
func_494_call = mutated_mod.get_global_var('func_494')
call_2937 = relay.TupleGetItem(func_490_call(relay.reshape(const_2889.astype('uint16'), []), relay.reshape(call_2888.astype('uint16'), [12, 2, 3]), ), 0)
call_2938 = relay.TupleGetItem(func_494_call(relay.reshape(const_2889.astype('uint16'), []), relay.reshape(call_2888.astype('uint16'), [12, 2, 3]), ), 0)
output = relay.Tuple([call_2862,call_2873,const_2874,var_2875,call_2888,const_2889,call_2930,call_2937,])
output2 = relay.Tuple([call_2863,call_2876,const_2874,var_2875,call_2890,const_2889,call_2931,call_2938,])
func_2943 = relay.Function([var_2875,], output)
mod['func_2943'] = func_2943
mod = relay.transform.InferType()(mod)
var_2944 = relay.var("var_2944", dtype = "bool", shape = (208,))#candidate|2944|(208,)|var|bool
output = func_2943(var_2944)
func_2945 = relay.Function([var_2944], output)
mutated_mod['func_2945'] = func_2945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_2959 = relay.TupleGetItem(func_2758_call(), 0)
call_2960 = relay.TupleGetItem(func_2759_call(), 0)
uop_2967 = relay.erf(call_2959.astype('float64')) # shape=(5, 14, 1)
uop_2969 = relay.erf(call_2960.astype('float64')) # shape=(5, 14, 1)
output = uop_2967
output2 = uop_2969
func_2975 = relay.Function([], output)
mod['func_2975'] = func_2975
mod = relay.transform.InferType()(mod)
output = func_2975()
func_2976 = relay.Function([], output)
mutated_mod['func_2976'] = func_2976
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3033 = relay.var("var_3033", dtype = "float32", shape = ())#candidate|3033|()|var|float32
var_3034 = relay.var("var_3034", dtype = "float32", shape = (7, 2, 1))#candidate|3034|(7, 2, 1)|var|float32
bop_3035 = relay.mod(var_3033.astype('float32'), var_3034.astype('float32')) # shape=(7, 2, 1)
output = bop_3035
output2 = bop_3035
func_3047 = relay.Function([var_3033,var_3034,], output)
mod['func_3047'] = func_3047
mod = relay.transform.InferType()(mod)
var_3048 = relay.var("var_3048", dtype = "float32", shape = ())#candidate|3048|()|var|float32
var_3049 = relay.var("var_3049", dtype = "float32", shape = (7, 2, 1))#candidate|3049|(7, 2, 1)|var|float32
output = func_3047(var_3048,var_3049,)
func_3050 = relay.Function([var_3048,var_3049,], output)
mutated_mod['func_3050'] = func_3050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2975_call = mod.get_global_var('func_2975')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_3052 = func_2975_call()
call_3053 = func_2975_call()
func_2857_call = mod.get_global_var('func_2857')
func_2858_call = mutated_mod.get_global_var('func_2858')
call_3087 = relay.TupleGetItem(func_2857_call(), 0)
call_3088 = relay.TupleGetItem(func_2858_call(), 0)
uop_3089 = relay.atan(call_3052.astype('float32')) # shape=(5, 14, 1)
uop_3091 = relay.atan(call_3053.astype('float32')) # shape=(5, 14, 1)
output = relay.Tuple([call_3087,uop_3089,])
output2 = relay.Tuple([call_3088,uop_3091,])
func_3093 = relay.Function([], output)
mod['func_3093'] = func_3093
mod = relay.transform.InferType()(mod)
output = func_3093()
func_3094 = relay.Function([], output)
mutated_mod['func_3094'] = func_3094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2795_call = mod.get_global_var('func_2795')
func_2797_call = mutated_mod.get_global_var('func_2797')
call_3199 = relay.TupleGetItem(func_2795_call(), 0)
call_3200 = relay.TupleGetItem(func_2797_call(), 0)
var_3210 = relay.var("var_3210", dtype = "float32", shape = (5, 14, 6))#candidate|3210|(5, 14, 6)|var|float32
bop_3211 = relay.greater_equal(call_3199.astype('bool'), var_3210.astype('bool')) # shape=(5, 14, 6)
bop_3214 = relay.greater_equal(call_3200.astype('bool'), var_3210.astype('bool')) # shape=(5, 14, 6)
output = relay.Tuple([bop_3211,])
output2 = relay.Tuple([bop_3214,])
func_3215 = relay.Function([var_3210,], output)
mod['func_3215'] = func_3215
mod = relay.transform.InferType()(mod)
mutated_mod['func_3215'] = func_3215
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3216 = relay.var("var_3216", dtype = "float32", shape = (5, 14, 6))#candidate|3216|(5, 14, 6)|var|float32
func_3215_call = mutated_mod.get_global_var('func_3215')
call_3217 = func_3215_call(var_3216)
output = call_3217
func_3218 = relay.Function([var_3216], output)
mutated_mod['func_3218'] = func_3218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2975_call = mod.get_global_var('func_2975')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_3223 = func_2975_call()
call_3224 = func_2975_call()
func_2329_call = mod.get_global_var('func_2329')
func_2331_call = mutated_mod.get_global_var('func_2331')
var_3231 = relay.var("var_3231", dtype = "float32", shape = (429,))#candidate|3231|(429,)|var|float32
call_3230 = func_2329_call(relay.reshape(var_3231.astype('float32'), [3, 13, 11]))
call_3232 = func_2329_call(relay.reshape(var_3231.astype('float32'), [3, 13, 11]))
bop_3237 = relay.logical_and(var_3231.astype('bool'), call_3223.astype('bool')) # shape=(5, 14, 429)
bop_3240 = relay.logical_and(var_3231.astype('bool'), call_3224.astype('bool')) # shape=(5, 14, 429)
output = relay.Tuple([call_3230,bop_3237,])
output2 = relay.Tuple([call_3232,bop_3240,])
func_3243 = relay.Function([var_3231,], output)
mod['func_3243'] = func_3243
mod = relay.transform.InferType()(mod)
var_3244 = relay.var("var_3244", dtype = "float32", shape = (429,))#candidate|3244|(429,)|var|float32
output = func_3243(var_3244)
func_3245 = relay.Function([var_3244], output)
mutated_mod['func_3245'] = func_3245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2795_call = mod.get_global_var('func_2795')
func_2797_call = mutated_mod.get_global_var('func_2797')
call_3268 = relay.TupleGetItem(func_2795_call(), 0)
call_3269 = relay.TupleGetItem(func_2797_call(), 0)
uop_3273 = relay.sigmoid(call_3268.astype('float64')) # shape=(5, 14, 1)
uop_3275 = relay.sigmoid(call_3269.astype('float64')) # shape=(5, 14, 1)
func_2857_call = mod.get_global_var('func_2857')
func_2858_call = mutated_mod.get_global_var('func_2858')
call_3277 = relay.TupleGetItem(func_2857_call(), 0)
call_3278 = relay.TupleGetItem(func_2858_call(), 0)
var_3292 = relay.var("var_3292", dtype = "float64", shape = (5, 14, 5))#candidate|3292|(5, 14, 5)|var|float64
bop_3293 = relay.left_shift(uop_3273.astype('int64'), var_3292.astype('int64')) # shape=(5, 14, 5)
bop_3296 = relay.left_shift(uop_3275.astype('int64'), var_3292.astype('int64')) # shape=(5, 14, 5)
func_941_call = mod.get_global_var('func_941')
func_945_call = mutated_mod.get_global_var('func_945')
var_3305 = relay.var("var_3305", dtype = "float32", shape = (1470,))#candidate|3305|(1470,)|var|float32
var_3306 = relay.var("var_3306", dtype = "bool", shape = (208,))#candidate|3306|(208,)|var|bool
call_3304 = relay.TupleGetItem(func_941_call(relay.reshape(var_3305.astype('float32'), [7, 14, 15]), relay.reshape(var_3306.astype('bool'), [4, 4, 13]), ), 4)
call_3307 = relay.TupleGetItem(func_945_call(relay.reshape(var_3305.astype('float32'), [7, 14, 15]), relay.reshape(var_3306.astype('bool'), [4, 4, 13]), ), 4)
output = relay.Tuple([call_3277,bop_3293,call_3304,var_3305,var_3306,])
output2 = relay.Tuple([call_3278,bop_3296,call_3307,var_3305,var_3306,])
func_3316 = relay.Function([var_3292,var_3305,var_3306,], output)
mod['func_3316'] = func_3316
mod = relay.transform.InferType()(mod)
var_3317 = relay.var("var_3317", dtype = "float64", shape = (5, 14, 5))#candidate|3317|(5, 14, 5)|var|float64
var_3318 = relay.var("var_3318", dtype = "float32", shape = (1470,))#candidate|3318|(1470,)|var|float32
var_3319 = relay.var("var_3319", dtype = "bool", shape = (208,))#candidate|3319|(208,)|var|bool
output = func_3316(var_3317,var_3318,var_3319,)
func_3320 = relay.Function([var_3317,var_3318,var_3319,], output)
mutated_mod['func_3320'] = func_3320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2584_call = mod.get_global_var('func_2584')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_3337 = relay.TupleGetItem(func_2584_call(), 0)
call_3338 = relay.TupleGetItem(func_2585_call(), 0)
func_2584_call = mod.get_global_var('func_2584')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_3355 = relay.TupleGetItem(func_2584_call(), 0)
call_3356 = relay.TupleGetItem(func_2585_call(), 0)
output = relay.Tuple([call_3337,call_3355,])
output2 = relay.Tuple([call_3338,call_3356,])
func_3362 = relay.Function([], output)
mod['func_3362'] = func_3362
mod = relay.transform.InferType()(mod)
mutated_mod['func_3362'] = func_3362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3362_call = mutated_mod.get_global_var('func_3362')
call_3363 = func_3362_call()
output = call_3363
func_3364 = relay.Function([], output)
mutated_mod['func_3364'] = func_3364
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3404 = relay.var("var_3404", dtype = "int16", shape = (8, 13, 3))#candidate|3404|(8, 13, 3)|var|int16
const_3405 = relay.const([[[-7,-9,4],[-2,-5,-10],[-4,-5,8],[-1,5,-6],[7,5,-3],[8,-7,-6],[4,-10,1],[-3,2,10],[-6,-2,8],[-7,4,-6],[8,-1,-2],[8,3,6],[7,-2,9]],[[-8,-10,7],[10,2,-8],[3,4,-3],[-8,-4,-8],[-6,-2,-3],[-10,-6,-3],[8,-7,-7],[1,-10,-3],[1,3,-4],[-6,5,9],[-6,1,9],[7,7,-8],[-8,4,1]],[[-1,1,-8],[5,3,9],[-8,-3,9],[2,7,-9],[-4,3,-6],[-7,9,-3],[1,8,-7],[-10,-5,3],[2,1,5],[-4,8,-10],[4,-3,5],[9,-3,-4],[5,7,-4]],[[4,-6,-7],[5,-3,-1],[-9,-10,9],[8,3,-4],[-4,-10,10],[1,-2,-9],[1,2,-8],[7,-9,8],[2,3,-9],[-4,-7,6],[-10,1,6],[-3,-5,3],[8,-9,-6]],[[-5,4,6],[7,6,6],[-1,-1,-10],[-4,5,10],[1,5,4],[-8,10,7],[3,7,7],[-3,2,3],[-10,9,-8],[-3,-6,10],[2,1,8],[-9,3,4],[1,-10,-3]],[[7,2,1],[4,1,-4],[3,9,-5],[3,1,10],[-6,3,6],[-1,-1,10],[4,-6,5],[8,-4,-10],[-5,5,-9],[-9,7,-10],[-10,-5,-5],[3,-8,-6],[10,9,-10]],[[-5,3,9],[6,-8,-4],[6,-1,-6],[-6,6,9],[7,6,3],[4,-9,7],[-1,-9,-6],[7,-6,-4],[5,-1,-4],[-4,10,-6],[6,-9,10],[-4,-1,-8],[-6,10,3]],[[4,2,8],[-6,8,10],[8,-7,-2],[7,6,9],[-4,10,8],[-5,-9,8],[6,10,1],[-9,8,8],[-3,-6,-2],[4,1,-9],[5,-1,-3],[-4,4,-3],[5,-6,10]]], dtype = "int16")#candidate|3405|(8, 13, 3)|const|int16
bop_3406 = relay.minimum(var_3404.astype('int16'), relay.reshape(const_3405.astype('int16'), relay.shape_of(var_3404))) # shape=(8, 13, 3)
uop_3410 = relay.acosh(bop_3406.astype('float64')) # shape=(8, 13, 3)
func_3215_call = mod.get_global_var('func_3215')
func_3218_call = mutated_mod.get_global_var('func_3218')
const_3416 = relay.const([4.226855,-6.339200,7.141302,-1.617375,-6.300719,4.269303,8.349371,9.447757,-6.074761,4.953757,2.211416,-4.034041,-0.056048,0.171405,-9.484395,-9.531180,0.875141,1.221629,-7.319080,-9.465430,4.353498,8.316979,-9.458369,2.904800,8.379850,-9.180247,-0.878533,4.484300,-7.082992,-6.673927,7.117029,1.205571,-6.840930,0.445553,-7.037549,2.863793,2.418547,8.995784,-2.666477,-0.313588,3.678798,-8.382047,8.068210,8.683936,5.896607,-7.230335,-0.856951,7.398870,4.013172,3.561294,-0.885528,1.182187,2.160690,-5.116568,6.696890,8.886424,6.664167,-0.525410,3.031740,0.869719,-4.449914,9.191135,6.189564,9.194391,-2.849143,-1.991629,0.470741,-0.478087,-3.338217,-9.708317,-1.176417,2.086890,-4.375028,-9.444824,6.628977,-7.396084,-1.411758,-9.589536,-4.810195,-4.036635,-6.727750,-0.767759,-1.039372,-0.556382,8.669569,8.882126,-3.246294,8.037353,-9.699092,-9.023605,6.939736,5.343162,-8.056373,6.184186,8.952431,7.473551,0.598490,-3.134242,2.186635,-0.723961,6.212064,-9.509500,-6.266856,-8.957670,9.384394,-1.925075,6.407129,-3.791409,0.155810,7.816838,6.575721,-1.969117,-0.422904,5.634125,0.894026,-9.557572,8.450662,-1.251688,-2.402769,-7.657652,4.426150,4.896354,5.730514,2.645460,3.021365,6.646220,0.756565,8.590566,-2.901262,5.103832,9.702285,4.139140,-0.365023,-4.764939,-6.297683,7.248244,-4.023061,4.071788,-7.376229,-5.414900,4.706835,8.657108,-5.143047,-9.090940,9.839950,-4.834055,7.128702,5.265434,-2.536413,-3.424349,-7.025993,-0.307480,-4.744643,-3.005540,-4.456955,5.976610,7.472392,5.407770,6.591147,-9.515036,8.482791,8.636905,-2.285729,5.656871,9.182266,-9.902158,9.798847,-3.972232,-1.936491,-5.600698,2.048815,-8.269834,-9.473439,-2.805997,7.816973,-8.051711,-4.685572,4.981547,-8.658674,3.806498,-8.724467,-9.293205,-0.363435,-9.897786,0.235172,-4.766472,-3.889905,5.045701,-8.113863,-2.885205,0.526177,-0.022289,0.562576,-0.477791,-6.108266,3.644781,3.131583,-1.568710,-4.849647,-5.572368,-2.711336,-6.344588,8.752209,2.518511,-5.042893,0.402821,7.345125,5.539535,0.589168,-2.963087,4.746236,7.593883,7.398368,-6.016442,-6.391998,-1.723652,6.685505,6.365380,-0.318637,-5.835423,-1.802982,-5.567325,-9.751522,-2.641439,-5.430829,6.411752,-9.360077,-3.334139,3.741482,0.908411,-8.937934,-4.194837,8.911028,-7.712177,-8.024186,-8.575968,5.230758,-5.007122,-7.646306,0.946652,-0.317972,-5.247558,2.171232,-8.971780,3.655993,-1.254734,0.193762,-0.455862,-1.179955,5.526086,5.611546,-7.517592,-9.701099,-7.327661,2.083800,1.962111,9.945670,7.386267,7.110330,6.244244,4.279155,-6.816015,-8.962609,1.297817,8.705336,1.479512,-8.374767,1.839281,6.107524,2.127329,-5.684460,-3.090794,-8.202232,-4.449882,9.067650,0.370068,-0.973617,-6.423213,-9.461304,0.194118,-6.789331,-1.037945,-4.775509,4.043577,-1.184830,9.415587,-1.229041,-4.188381,9.368487,-6.315534,-7.388885,3.807804,2.336862,0.119371,-2.335505,2.566390,7.685453,7.963250,-6.475092,1.498648,-4.161830,8.147559,-1.542507,5.772633,-8.362866,1.653764,9.111848,0.866952,-9.037171,-1.291101,-0.996785,0.565640,-0.167544,6.051891,2.195780,7.541355,6.992778,-0.427325,-6.577988,0.652700,3.988808,3.874673,-8.453578,4.226882,2.660365,9.732750,-0.776486,6.659062,1.613578,2.925315,-9.187269,-7.445327,1.453382,4.487976,5.245308,-6.654767,0.004534,2.297162,8.887226,-7.510515,1.508171,-9.900980,-5.403196,-1.169437,-5.435243,9.807974,-0.996858,6.807025,-0.874640,2.274582,1.182236,9.495813,2.950041,-5.346677,4.668289,0.920480,-4.922506,-8.935647,1.021210,3.790461,-0.717232,-4.179094,-5.436825,-0.287021,7.436690,-2.187474,-5.293766,0.603856,4.176145,-1.225719,5.825126,4.222735,2.155455,-2.154440,-2.628443,-7.378901,-6.923268,1.780982,-2.775514,-7.793155,9.172798,5.242712,-0.784361,5.034693,-7.103883,-7.332993,7.320793,-5.251372,-8.656117,1.384859,-6.696943,9.648815,3.458943,2.028322,3.157609,5.175871,8.605024,-2.492035,1.040221,4.324221,8.739266,3.989499,3.788807,2.971520,1.161525,-4.995880,-1.671823,-2.131663,-9.144482,-7.876641,2.748824,-1.836569,-0.625311,-7.852191,-0.947097,2.153380,-3.044445,-1.384201,-0.300956,3.594820], dtype = "float32")#candidate|3416|(420,)|const|float32
call_3415 = relay.TupleGetItem(func_3215_call(relay.reshape(const_3416.astype('float32'), [5, 14, 6])), 0)
call_3417 = relay.TupleGetItem(func_3218_call(relay.reshape(const_3416.astype('float32'), [5, 14, 6])), 0)
output = relay.Tuple([uop_3410,call_3415,const_3416,])
output2 = relay.Tuple([uop_3410,call_3417,const_3416,])
func_3424 = relay.Function([var_3404,], output)
mod['func_3424'] = func_3424
mod = relay.transform.InferType()(mod)
var_3425 = relay.var("var_3425", dtype = "int16", shape = (8, 13, 3))#candidate|3425|(8, 13, 3)|var|int16
output = func_3424(var_3425)
func_3426 = relay.Function([var_3425], output)
mutated_mod['func_3426'] = func_3426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2795_call = mod.get_global_var('func_2795')
func_2797_call = mutated_mod.get_global_var('func_2797')
call_3513 = relay.TupleGetItem(func_2795_call(), 0)
call_3514 = relay.TupleGetItem(func_2797_call(), 0)
func_3362_call = mod.get_global_var('func_3362')
func_3364_call = mutated_mod.get_global_var('func_3364')
call_3516 = relay.TupleGetItem(func_3362_call(), 0)
call_3517 = relay.TupleGetItem(func_3364_call(), 0)
func_3243_call = mod.get_global_var('func_3243')
func_3245_call = mutated_mod.get_global_var('func_3245')
var_3523 = relay.var("var_3523", dtype = "float32", shape = (429,))#candidate|3523|(429,)|var|float32
call_3522 = relay.TupleGetItem(func_3243_call(relay.reshape(var_3523.astype('float32'), [429,])), 0)
call_3524 = relay.TupleGetItem(func_3245_call(relay.reshape(var_3523.astype('float32'), [429,])), 0)
output = relay.Tuple([call_3513,call_3516,call_3522,var_3523,])
output2 = relay.Tuple([call_3514,call_3517,call_3524,var_3523,])
func_3535 = relay.Function([var_3523,], output)
mod['func_3535'] = func_3535
mod = relay.transform.InferType()(mod)
var_3536 = relay.var("var_3536", dtype = "float32", shape = (429,))#candidate|3536|(429,)|var|float32
output = func_3535(var_3536)
func_3537 = relay.Function([var_3536], output)
mutated_mod['func_3537'] = func_3537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2857_call = mod.get_global_var('func_2857')
func_2858_call = mutated_mod.get_global_var('func_2858')
call_3650 = relay.TupleGetItem(func_2857_call(), 0)
call_3651 = relay.TupleGetItem(func_2858_call(), 0)
var_3660 = relay.var("var_3660", dtype = "float32", shape = (5, 14, 5))#candidate|3660|(5, 14, 5)|var|float32
bop_3661 = relay.right_shift(call_3650.astype('int32'), var_3660.astype('int32')) # shape=(5, 14, 5)
bop_3664 = relay.right_shift(call_3651.astype('int32'), var_3660.astype('int32')) # shape=(5, 14, 5)
output = relay.Tuple([bop_3661,])
output2 = relay.Tuple([bop_3664,])
func_3673 = relay.Function([var_3660,], output)
mod['func_3673'] = func_3673
mod = relay.transform.InferType()(mod)
var_3674 = relay.var("var_3674", dtype = "float32", shape = (5, 14, 5))#candidate|3674|(5, 14, 5)|var|float32
output = func_3673(var_3674)
func_3675 = relay.Function([var_3674], output)
mutated_mod['func_3675'] = func_3675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2975_call = mod.get_global_var('func_2975')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_3701 = func_2975_call()
call_3702 = func_2975_call()
func_2857_call = mod.get_global_var('func_2857')
func_2858_call = mutated_mod.get_global_var('func_2858')
call_3703 = relay.TupleGetItem(func_2857_call(), 0)
call_3704 = relay.TupleGetItem(func_2858_call(), 0)
output = relay.Tuple([call_3701,call_3703,])
output2 = relay.Tuple([call_3702,call_3704,])
func_3706 = relay.Function([], output)
mod['func_3706'] = func_3706
mod = relay.transform.InferType()(mod)
mutated_mod['func_3706'] = func_3706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3706_call = mutated_mod.get_global_var('func_3706')
call_3707 = func_3706_call()
output = call_3707
func_3708 = relay.Function([], output)
mutated_mod['func_3708'] = func_3708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3362_call = mod.get_global_var('func_3362')
func_3364_call = mutated_mod.get_global_var('func_3364')
call_3709 = relay.TupleGetItem(func_3362_call(), 1)
call_3710 = relay.TupleGetItem(func_3364_call(), 1)
uop_3730 = relay.atanh(call_3709.astype('float64')) # shape=(5, 14, 1)
uop_3732 = relay.atanh(call_3710.astype('float64')) # shape=(5, 14, 1)
func_2795_call = mod.get_global_var('func_2795')
func_2797_call = mutated_mod.get_global_var('func_2797')
call_3738 = relay.TupleGetItem(func_2795_call(), 0)
call_3739 = relay.TupleGetItem(func_2797_call(), 0)
func_2975_call = mod.get_global_var('func_2975')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_3745 = func_2975_call()
call_3746 = func_2975_call()
func_2329_call = mod.get_global_var('func_2329')
func_2331_call = mutated_mod.get_global_var('func_2331')
var_3749 = relay.var("var_3749", dtype = "float32", shape = (429,))#candidate|3749|(429,)|var|float32
call_3748 = func_2329_call(relay.reshape(var_3749.astype('float32'), [3, 13, 11]))
call_3750 = func_2329_call(relay.reshape(var_3749.astype('float32'), [3, 13, 11]))
func_3215_call = mod.get_global_var('func_3215')
func_3218_call = mutated_mod.get_global_var('func_3218')
var_3753 = relay.var("var_3753", dtype = "float32", shape = (420,))#candidate|3753|(420,)|var|float32
call_3752 = relay.TupleGetItem(func_3215_call(relay.reshape(var_3753.astype('float32'), [5, 14, 6])), 0)
call_3754 = relay.TupleGetItem(func_3218_call(relay.reshape(var_3753.astype('float32'), [5, 14, 6])), 0)
output = relay.Tuple([uop_3730,call_3738,call_3745,call_3748,var_3749,call_3752,var_3753,])
output2 = relay.Tuple([uop_3732,call_3739,call_3746,call_3750,var_3749,call_3754,var_3753,])
func_3755 = relay.Function([var_3749,var_3753,], output)
mod['func_3755'] = func_3755
mod = relay.transform.InferType()(mod)
mutated_mod['func_3755'] = func_3755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3755_call = mutated_mod.get_global_var('func_3755')
var_3757 = relay.var("var_3757", dtype = "float32", shape = (429,))#candidate|3757|(429,)|var|float32
var_3758 = relay.var("var_3758", dtype = "float32", shape = (420,))#candidate|3758|(420,)|var|float32
call_3756 = func_3755_call(var_3757,var_3758,)
output = call_3756
func_3759 = relay.Function([var_3757,var_3758,], output)
mutated_mod['func_3759'] = func_3759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3706_call = mod.get_global_var('func_3706')
func_3708_call = mutated_mod.get_global_var('func_3708')
call_3761 = relay.TupleGetItem(func_3706_call(), 0)
call_3762 = relay.TupleGetItem(func_3708_call(), 0)
output = relay.Tuple([call_3761,])
output2 = relay.Tuple([call_3762,])
func_3766 = relay.Function([], output)
mod['func_3766'] = func_3766
mod = relay.transform.InferType()(mod)
mutated_mod['func_3766'] = func_3766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3766_call = mutated_mod.get_global_var('func_3766')
call_3767 = func_3766_call()
output = call_3767
func_3768 = relay.Function([], output)
mutated_mod['func_3768'] = func_3768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3362_call = mod.get_global_var('func_3362')
func_3364_call = mutated_mod.get_global_var('func_3364')
call_3785 = relay.TupleGetItem(func_3362_call(), 1)
call_3786 = relay.TupleGetItem(func_3364_call(), 1)
uop_3839 = relay.sqrt(call_3785.astype('float32')) # shape=(5, 14, 1)
uop_3841 = relay.sqrt(call_3786.astype('float32')) # shape=(5, 14, 1)
func_2329_call = mod.get_global_var('func_2329')
func_2331_call = mutated_mod.get_global_var('func_2331')
var_3863 = relay.var("var_3863", dtype = "float32", shape = (39, 11))#candidate|3863|(39, 11)|var|float32
call_3862 = func_2329_call(relay.reshape(var_3863.astype('float32'), [3, 13, 11]))
call_3864 = func_2329_call(relay.reshape(var_3863.astype('float32'), [3, 13, 11]))
func_2857_call = mod.get_global_var('func_2857')
func_2858_call = mutated_mod.get_global_var('func_2858')
call_3874 = relay.TupleGetItem(func_2857_call(), 0)
call_3875 = relay.TupleGetItem(func_2858_call(), 0)
output = relay.Tuple([uop_3839,call_3862,var_3863,call_3874,])
output2 = relay.Tuple([uop_3841,call_3864,var_3863,call_3875,])
func_3882 = relay.Function([var_3863,], output)
mod['func_3882'] = func_3882
mod = relay.transform.InferType()(mod)
mutated_mod['func_3882'] = func_3882
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3883 = relay.var("var_3883", dtype = "float32", shape = (39, 11))#candidate|3883|(39, 11)|var|float32
func_3882_call = mutated_mod.get_global_var('func_3882')
call_3884 = func_3882_call(var_3883)
output = call_3884
func_3885 = relay.Function([var_3883], output)
mutated_mod['func_3885'] = func_3885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3706_call = mod.get_global_var('func_3706')
func_3708_call = mutated_mod.get_global_var('func_3708')
call_3893 = relay.TupleGetItem(func_3706_call(), 0)
call_3894 = relay.TupleGetItem(func_3708_call(), 0)
output = call_3893
output2 = call_3894
func_3920 = relay.Function([], output)
mod['func_3920'] = func_3920
mod = relay.transform.InferType()(mod)
mutated_mod['func_3920'] = func_3920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3920_call = mutated_mod.get_global_var('func_3920')
call_3921 = func_3920_call()
output = call_3921
func_3922 = relay.Function([], output)
mutated_mod['func_3922'] = func_3922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3766_call = mod.get_global_var('func_3766')
func_3768_call = mutated_mod.get_global_var('func_3768')
call_3945 = relay.TupleGetItem(func_3766_call(), 0)
call_3946 = relay.TupleGetItem(func_3768_call(), 0)
output = call_3945
output2 = call_3946
func_3948 = relay.Function([], output)
mod['func_3948'] = func_3948
mod = relay.transform.InferType()(mod)
output = func_3948()
func_3949 = relay.Function([], output)
mutated_mod['func_3949'] = func_3949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3766_call = mod.get_global_var('func_3766')
func_3768_call = mutated_mod.get_global_var('func_3768')
call_3964 = relay.TupleGetItem(func_3766_call(), 0)
call_3965 = relay.TupleGetItem(func_3768_call(), 0)
output = relay.Tuple([call_3964,])
output2 = relay.Tuple([call_3965,])
func_3969 = relay.Function([], output)
mod['func_3969'] = func_3969
mod = relay.transform.InferType()(mod)
output = func_3969()
func_3970 = relay.Function([], output)
mutated_mod['func_3970'] = func_3970
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4020 = relay.const([[[-5,-4,10,4,1,3,-5,-10,-9,1,7,10,4,7],[-3,4,7,2,9,5,8,-1,4,-1,6,-10,3,-7],[3,5,-10,6,6,-3,8,2,5,-6,-7,-3,-2,-7],[2,-2,-9,3,-7,-5,10,5,-7,3,-2,-2,-9,-3],[-7,-6,4,5,8,-1,8,-5,5,6,8,-5,-8,1],[-1,8,5,-10,-5,-2,-5,-5,2,-1,1,10,-7,-2],[-1,2,-9,1,-8,3,-6,-4,2,3,-1,-1,-2,-2],[6,-3,8,1,8,1,5,-7,1,-3,3,8,-2,8],[2,2,5,6,-1,-1,1,6,8,-8,-7,3,-8,-7],[2,4,-3,-3,-2,-2,-6,-5,-6,2,4,-4,-10,4],[10,8,-7,7,9,-10,8,5,6,-10,10,-8,-1,-9],[1,-1,-7,6,-1,5,2,-2,-7,2,-8,-8,4,5],[10,10,-9,6,-2,-9,-5,5,-10,-6,4,10,10,-2],[-6,4,1,7,7,-6,-6,-1,1,-6,3,-6,10,10],[-8,6,9,9,-6,-2,2,1,4,8,-8,-4,6,9],[-10,8,1,-9,6,2,6,6,-1,5,10,1,-6,10]],[[-9,-10,10,-6,-1,-1,4,-2,7,-6,4,-4,-5,-4],[-1,4,3,-10,1,-4,-10,-3,10,5,-3,4,4,-4],[4,-9,10,7,-9,-8,1,-7,9,-7,5,-6,3,-8],[9,-6,-7,8,-2,5,-1,4,-5,5,10,4,-4,-4],[2,5,-3,4,8,9,8,1,-7,3,3,7,-10,9],[-1,10,-6,-5,-6,10,3,-5,-5,10,9,-3,1,-8],[-1,4,1,-5,1,-9,-9,2,-10,2,-3,-7,-8,-7],[-2,-2,1,5,2,-2,-10,-9,-9,8,7,-3,6,3],[2,-5,-2,-7,2,8,2,6,-10,-10,5,-6,-9,1],[1,-9,3,-5,-10,-1,-6,8,-8,1,-9,-4,-8,7],[3,1,3,7,4,2,-6,-8,-1,-2,1,4,4,-4],[-2,8,-8,-9,10,6,2,10,10,-2,-6,-9,-10,9],[-3,-4,4,10,2,-3,-7,-8,9,-9,-8,10,-7,-3],[2,-9,-4,9,5,-8,-1,9,9,9,7,-7,-8,1],[7,-2,-5,-5,-4,-7,-6,-5,-5,6,-2,-4,-4,-8],[-9,8,4,-7,1,-7,8,1,8,-10,-10,9,-1,5]],[[-3,8,1,-7,5,1,6,10,-4,6,7,-7,2,1],[8,-1,-8,-10,-6,-1,1,-9,-1,-8,10,-9,2,5],[1,-9,3,-7,-10,9,5,9,1,-10,-8,9,4,6],[3,10,-1,-2,-1,-5,-7,-7,2,8,-7,-8,-1,-5],[-7,3,-4,6,3,10,-9,3,9,10,-9,9,-9,10],[-5,4,-8,6,9,-9,-9,4,-6,-6,10,-10,-4,-4],[-5,-2,-1,-6,3,-3,1,-5,-5,-10,8,7,10,7],[-8,7,-5,-6,3,-5,2,-1,4,-5,6,9,1,-4],[-7,5,9,-9,-8,1,4,2,-6,1,8,8,-3,-8],[6,3,2,-7,1,7,8,3,-6,2,-7,-3,-10,8],[9,-6,-7,-6,-9,2,-8,1,9,-2,8,-8,-6,9],[3,7,-3,-8,-4,-1,-9,4,2,-5,-9,5,-8,4],[5,10,-1,1,-2,4,3,-10,8,10,-9,-8,-10,8],[5,2,3,9,10,8,9,7,-9,4,1,5,7,-8],[8,4,8,-5,-1,7,-2,-3,-8,3,-7,3,1,8],[1,4,2,3,6,-10,-2,-8,1,7,2,-5,9,7]],[[-5,-7,-10,8,-8,1,10,-3,-8,9,4,9,6,-5],[3,4,-6,8,1,-8,-10,-5,10,-3,2,-10,-7,-2],[-4,-9,-10,6,-5,4,2,-5,10,-3,9,-9,-7,7],[7,-1,8,-7,-5,8,9,4,-1,2,-10,-10,-2,-7],[-7,4,-4,4,-5,4,-5,-9,-2,6,3,-5,-4,1],[-5,4,5,-7,-3,2,-3,9,7,-2,3,2,-5,-1],[1,2,2,-9,4,-7,8,-6,-6,-9,-2,-1,7,5],[10,1,-9,9,-9,-10,6,-1,-5,-5,9,-3,5,10],[-9,3,10,-3,7,10,-2,-8,-6,-5,5,3,6,-6],[9,-2,-8,8,-7,7,-2,-9,-7,-5,5,5,9,-3],[-3,-5,-5,-3,-10,-3,1,-10,-6,9,7,8,3,-3],[3,-7,-6,-1,7,-8,-6,-5,-10,1,-5,1,6,5],[5,2,-5,4,-1,-4,10,5,-2,4,7,-10,-8,6],[10,-5,-9,-3,-6,-8,4,5,-6,2,3,2,1,-2],[-2,-5,10,-7,7,-5,-7,-9,-9,-6,5,4,4,-7],[9,8,-8,6,-4,-6,3,3,-6,-2,5,9,8,7]],[[1,-8,3,-4,8,-6,-2,-3,-8,6,7,9,10,3],[5,-1,-3,-9,-7,-5,4,9,-6,3,-9,7,1,-9],[8,-8,-9,1,9,6,6,3,5,-8,-4,-4,-1,6],[-9,-2,6,-1,-10,7,-4,-7,4,-8,4,9,-8,9],[-6,-1,2,3,5,1,6,-7,2,-9,-6,7,-5,-5],[1,-2,1,-3,9,8,-2,7,8,-8,-8,7,6,-3],[2,5,4,-10,3,7,-1,-3,-6,1,-4,4,-8,9],[7,-6,-2,2,-10,-2,-8,-2,3,-2,-6,3,-3,-6],[-10,-4,7,-5,1,-8,10,2,8,-6,1,-10,-4,1],[-3,-8,-1,1,-2,-10,4,4,7,-1,-1,-6,9,-1],[2,-10,-8,10,-9,-9,9,-4,5,-6,-3,7,-8,-8],[2,9,1,1,-8,-9,3,-7,-5,-3,8,-5,8,9],[-9,-2,6,5,3,-5,8,-9,1,-1,-9,-7,6,2],[-5,2,5,5,7,7,7,-10,-7,3,-5,2,-1,-2],[2,2,2,3,8,-1,7,7,-1,8,6,-3,6,-8],[8,-3,-4,10,-9,-7,1,1,3,2,7,-1,-9,-5]],[[-2,3,2,2,3,4,-7,8,-9,3,-9,8,-5,8],[-3,-1,5,-7,-4,-5,-3,6,1,7,2,-2,7,6],[8,5,6,-8,-2,8,-8,-2,1,10,-1,-2,8,-8],[3,-6,6,2,-9,-3,-7,-8,3,5,-7,7,-3,5],[-2,-6,-4,4,6,-4,-6,8,7,8,6,-5,10,3],[1,-5,-2,10,5,-8,9,6,8,-1,-9,-4,-4,-10],[-10,-8,-2,6,5,-9,-9,1,-10,5,2,10,9,-8],[2,-9,-10,3,-1,-7,-4,-7,3,3,7,-1,8,-2],[-7,1,-10,-4,-9,-4,8,9,8,-7,5,6,7,-3],[-1,1,-7,9,-5,8,10,6,-3,-9,10,2,5,-7],[5,9,-7,4,-5,1,-6,5,3,3,6,-7,-10,-10],[-8,9,-7,1,-1,7,-10,7,9,1,5,8,-5,-6],[3,-10,-2,-6,9,2,4,7,10,-1,8,-1,-3,-4],[1,3,-7,6,-4,-8,-2,3,2,2,-6,10,-3,8],[-7,6,4,3,6,1,-4,3,1,-3,-7,-6,-10,-6],[-7,-10,-7,-4,8,2,-1,-6,-4,-2,-4,-10,10,4]],[[2,2,4,-6,10,4,1,4,1,-6,8,1,-3,-4],[9,-4,8,10,9,5,-8,-9,-6,-9,-4,1,-3,5],[5,8,7,-5,-7,7,3,-7,-10,9,1,3,7,7],[-8,5,-2,-7,4,-2,-9,8,10,4,-4,-7,5,2],[6,1,2,9,-8,2,10,-4,2,10,9,-5,-9,10],[2,5,3,-4,-1,-8,-1,10,4,-10,-7,-10,8,-3],[-8,2,-7,10,2,-7,-6,1,-7,1,-4,10,5,2],[-7,-10,-10,-5,-9,6,-8,6,8,-3,8,-6,7,6],[8,-5,4,8,-10,-10,-7,-2,-1,-10,6,6,9,6],[10,8,-3,2,10,9,4,-9,-8,-7,1,-8,1,1],[-7,-6,3,6,-8,-1,-8,-6,-2,7,-8,-8,2,-6],[-1,-4,5,5,3,4,-10,8,7,-4,1,-8,-6,5],[-4,10,7,-4,-4,-4,2,8,5,2,2,-3,-5,-9],[9,8,7,9,-4,8,-3,6,-10,-9,-10,9,7,6],[-2,5,-1,5,3,-1,8,-6,4,8,4,-1,8,-10],[-1,-7,1,4,-4,-7,-6,3,-8,7,-1,-7,2,-1]],[[5,5,8,-9,-1,1,6,2,6,6,-4,-7,-9,10],[-10,2,-4,3,7,1,9,-3,9,6,1,-1,-8,2],[3,-9,-4,-2,7,2,-9,6,-6,2,-4,-3,4,-2],[4,-10,-5,-2,9,9,9,-4,8,-6,-8,-2,-9,-9],[-2,-5,-4,-3,-3,10,-9,10,4,-6,-3,-7,-1,3],[-7,-4,3,5,-6,6,5,1,-7,-2,4,-3,2,-6],[-2,-4,-1,-6,-10,10,9,-3,-4,-8,7,3,-2,8],[8,-9,-5,9,-1,-8,8,-5,8,3,4,4,-3,-3],[-7,1,5,8,-10,5,4,4,-5,-2,9,-6,7,4],[-9,9,6,-3,-7,-2,-8,10,-2,7,-3,2,-4,-5],[-8,-5,6,5,1,4,7,-6,-4,-8,-3,6,3,10],[-6,-10,-3,-3,6,-10,6,-6,-9,9,-1,10,3,9],[-3,5,3,-4,-10,-7,5,-5,3,-3,4,-8,10,-6],[-3,2,6,-7,-3,-7,-8,-1,-2,-3,8,9,-9,-6],[4,-3,-8,5,2,-3,3,-10,-4,3,7,-3,3,4],[7,-10,-3,10,-5,3,8,-2,6,3,3,6,-5,5]],[[-8,-7,-1,10,7,-3,-6,2,4,7,10,-10,10,-2],[-4,3,6,-1,-7,10,10,10,2,9,8,6,8,10],[1,-4,-9,-8,-5,3,-7,-7,6,10,9,-2,7,-4],[3,4,-8,-10,3,3,5,1,-8,-9,-4,-10,2,10],[1,4,-10,1,-5,4,-7,6,-4,5,5,-6,-7,-10],[2,6,-5,-9,-9,10,9,1,-2,9,-6,-8,10,-8],[2,-6,9,8,-4,-9,-7,-6,3,-4,6,1,-10,3],[-2,-9,-10,-7,-8,-4,-1,-7,2,-5,-3,-1,4,1],[2,-6,-6,9,1,-6,10,-3,-3,-9,8,-3,5,-1],[8,5,-7,-4,-5,8,8,4,4,-3,2,5,8,-10],[-1,-3,5,7,-8,-5,-4,8,-7,-4,-2,1,8,5],[-3,10,7,1,9,6,-10,10,-3,8,1,-2,-8,10],[-8,-2,1,5,3,-2,5,-2,8,-1,-10,-3,-10,7],[-8,3,-9,9,7,8,9,4,7,-10,-2,7,9,-5],[7,-8,7,2,-6,-8,6,-3,-7,10,-7,-10,-1,-10],[-9,1,7,10,9,-3,-7,-10,-8,-8,1,8,8,8]],[[-7,2,-3,1,-10,-7,-6,-6,1,4,10,-4,-1,1],[-2,-1,-7,-6,-5,2,1,4,10,-10,7,-10,-7,-8],[-7,-2,-9,-2,5,7,-7,5,10,5,1,-3,-1,-7],[-7,9,-5,-5,-3,1,4,-9,-8,-9,4,-10,-1,-5],[-4,-1,9,-5,10,-9,6,2,-7,-3,5,-3,7,-6],[-6,1,5,-1,3,-9,7,-7,-5,6,-9,-6,2,3],[-3,-10,-2,-9,4,-9,7,1,3,8,6,-1,3,-9],[-7,4,3,-10,-4,10,-10,-4,-7,10,2,2,-4,-5],[10,-3,8,8,-1,4,9,3,5,4,-4,-1,-6,4],[-6,8,5,-5,-9,4,-1,-7,-4,-10,8,10,10,-8],[-4,8,-3,6,-10,-1,-3,-10,5,7,-8,8,-10,-9],[10,9,-10,-6,7,-3,4,-7,10,5,7,-5,-8,-2],[-3,-3,6,1,-10,3,10,6,9,-4,5,4,-3,6],[4,-2,-6,-2,-6,2,-1,-5,10,-6,9,6,9,-3],[-9,-6,6,1,-2,6,-7,7,-5,8,6,-2,4,-6],[-10,-7,-9,-3,10,6,-1,1,-3,8,3,-1,10,3]],[[-5,-10,9,5,2,-2,6,-6,10,-4,8,-1,8,9],[7,-5,-10,-9,-4,-8,2,9,-5,4,-4,8,-2,2],[-1,1,10,2,1,-10,4,1,7,-4,7,-8,8,-3],[-3,2,4,1,9,6,3,-7,6,-4,8,-3,-8,5],[7,6,-3,-3,2,-10,5,3,2,6,-7,-10,8,3],[-6,-2,6,-2,-8,3,9,3,1,-4,7,2,-10,-1],[8,6,2,-7,-6,7,-6,-4,-6,-10,4,-10,6,4],[-4,6,-1,-4,-8,1,-1,-10,1,-1,2,3,-5,-4],[5,-9,-5,9,-7,10,7,1,-2,-5,6,9,7,-1],[-5,5,7,10,-9,7,-3,3,-10,8,-7,4,-8,9],[-5,10,-7,3,-7,5,2,-1,-1,-5,-1,3,-7,-9],[-10,-2,9,6,-7,2,-9,-1,1,6,-8,-2,-7,7],[2,10,-4,-6,6,-1,-10,-8,-1,10,5,-3,8,-2],[-2,8,4,-3,-2,-1,10,3,6,9,-2,-9,-6,10],[10,10,10,4,-9,2,6,2,-7,6,-6,-1,7,-5],[-2,8,6,2,9,10,4,9,-7,-6,6,8,-8,-10]],[[10,-7,-10,-2,6,-2,1,2,6,-5,-2,7,-4,10],[5,8,-5,8,1,-2,6,-3,6,4,7,-4,2,-9],[-8,2,-8,9,-5,-1,-8,7,-8,3,-6,-7,8,-3],[5,-1,-8,-8,-3,-2,-3,7,7,-7,2,1,9,-2],[9,9,5,7,-3,2,2,-4,-10,-8,5,-3,5,7],[-2,-3,4,7,4,-5,-8,4,-4,9,-1,2,-2,5],[9,-5,10,-3,2,4,-3,4,7,-5,8,4,1,-5],[8,-4,3,9,-7,-10,2,4,4,-9,8,1,-8,-5],[-8,3,2,5,7,1,-10,-1,-4,10,-5,-8,-4,8],[3,-10,8,8,-1,7,9,-9,8,1,-7,3,-1,4],[9,5,7,-2,-1,7,5,7,4,3,8,-6,-9,4],[10,-3,-1,-3,-6,-5,7,-8,-6,6,-2,1,-7,4],[8,5,-7,-8,-9,-7,10,-3,-4,1,7,-1,10,-1],[-1,-4,7,8,8,-2,-1,-5,3,-9,-8,-8,-10,5],[10,-7,-3,1,-10,5,5,6,-8,-6,-6,7,-7,-10],[1,7,3,4,6,-7,-4,-4,-8,6,1,7,9,3]]], dtype = "int32")#candidate|4020|(12, 16, 14)|const|int32
var_4021 = relay.var("var_4021", dtype = "int32", shape = (12, 16, 14))#candidate|4021|(12, 16, 14)|var|int32
bop_4022 = relay.equal(const_4020.astype('bool'), relay.reshape(var_4021.astype('bool'), relay.shape_of(const_4020))) # shape=(12, 16, 14)
uop_4030 = relay.tan(var_4021.astype('float32')) # shape=(12, 16, 14)
output = relay.Tuple([bop_4022,uop_4030,])
output2 = relay.Tuple([bop_4022,uop_4030,])
func_4033 = relay.Function([var_4021,], output)
mod['func_4033'] = func_4033
mod = relay.transform.InferType()(mod)
var_4034 = relay.var("var_4034", dtype = "int32", shape = (12, 16, 14))#candidate|4034|(12, 16, 14)|var|int32
output = func_4033(var_4034)
func_4035 = relay.Function([var_4034], output)
mutated_mod['func_4035'] = func_4035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3766_call = mod.get_global_var('func_3766')
func_3768_call = mutated_mod.get_global_var('func_3768')
call_4040 = relay.TupleGetItem(func_3766_call(), 0)
call_4041 = relay.TupleGetItem(func_3768_call(), 0)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_4073 = relay.TupleGetItem(func_2758_call(), 0)
call_4074 = relay.TupleGetItem(func_2759_call(), 0)
bop_4075 = relay.divide(call_4073.astype('float64'), relay.reshape(call_4040.astype('float64'), relay.shape_of(call_4073))) # shape=(5, 14, 1)
bop_4078 = relay.divide(call_4074.astype('float64'), relay.reshape(call_4041.astype('float64'), relay.shape_of(call_4074))) # shape=(5, 14, 1)
bop_4092 = relay.equal(bop_4075.astype('bool'), relay.reshape(call_4073.astype('bool'), relay.shape_of(bop_4075))) # shape=(5, 14, 1)
bop_4095 = relay.equal(bop_4078.astype('bool'), relay.reshape(call_4074.astype('bool'), relay.shape_of(bop_4078))) # shape=(5, 14, 1)
output = bop_4092
output2 = bop_4095
func_4104 = relay.Function([], output)
mod['func_4104'] = func_4104
mod = relay.transform.InferType()(mod)
output = func_4104()
func_4105 = relay.Function([], output)
mutated_mod['func_4105'] = func_4105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3094_call = mutated_mod.get_global_var('func_3094')
call_4108 = relay.TupleGetItem(func_3093_call(), 1)
call_4109 = relay.TupleGetItem(func_3094_call(), 1)
uop_4120 = relay.rsqrt(call_4108.astype('float32')) # shape=(5, 14, 1)
uop_4122 = relay.rsqrt(call_4109.astype('float32')) # shape=(5, 14, 1)
bop_4129 = relay.floor_divide(call_4108.astype('float32'), relay.reshape(uop_4120.astype('float32'), relay.shape_of(call_4108))) # shape=(5, 14, 1)
bop_4132 = relay.floor_divide(call_4109.astype('float32'), relay.reshape(uop_4122.astype('float32'), relay.shape_of(call_4109))) # shape=(5, 14, 1)
func_4033_call = mod.get_global_var('func_4033')
func_4035_call = mutated_mod.get_global_var('func_4035')
var_4152 = relay.var("var_4152", dtype = "int32", shape = (2688,))#candidate|4152|(2688,)|var|int32
call_4151 = relay.TupleGetItem(func_4033_call(relay.reshape(var_4152.astype('int32'), [12, 16, 14])), 1)
call_4153 = relay.TupleGetItem(func_4035_call(relay.reshape(var_4152.astype('int32'), [12, 16, 14])), 1)
output = relay.Tuple([bop_4129,call_4151,var_4152,])
output2 = relay.Tuple([bop_4132,call_4153,var_4152,])
func_4155 = relay.Function([var_4152,], output)
mod['func_4155'] = func_4155
mod = relay.transform.InferType()(mod)
mutated_mod['func_4155'] = func_4155
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4156 = relay.var("var_4156", dtype = "int32", shape = (2688,))#candidate|4156|(2688,)|var|int32
func_4155_call = mutated_mod.get_global_var('func_4155')
call_4157 = func_4155_call(var_4156)
output = call_4157
func_4158 = relay.Function([var_4156], output)
mutated_mod['func_4158'] = func_4158
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4168 = relay.var("var_4168", dtype = "uint8", shape = (7, 11, 15))#candidate|4168|(7, 11, 15)|var|uint8
var_4169 = relay.var("var_4169", dtype = "uint8", shape = (7, 11, 15))#candidate|4169|(7, 11, 15)|var|uint8
bop_4170 = relay.greater(var_4168.astype('bool'), relay.reshape(var_4169.astype('bool'), relay.shape_of(var_4168))) # shape=(7, 11, 15)
output = relay.Tuple([bop_4170,])
output2 = relay.Tuple([bop_4170,])
func_4173 = relay.Function([var_4168,var_4169,], output)
mod['func_4173'] = func_4173
mod = relay.transform.InferType()(mod)
mutated_mod['func_4173'] = func_4173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4173_call = mutated_mod.get_global_var('func_4173')
var_4175 = relay.var("var_4175", dtype = "uint8", shape = (7, 11, 15))#candidate|4175|(7, 11, 15)|var|uint8
var_4176 = relay.var("var_4176", dtype = "uint8", shape = (7, 11, 15))#candidate|4176|(7, 11, 15)|var|uint8
call_4174 = func_4173_call(var_4175,var_4176,)
output = call_4174
func_4177 = relay.Function([var_4175,var_4176,], output)
mutated_mod['func_4177'] = func_4177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3766_call = mod.get_global_var('func_3766')
func_3768_call = mutated_mod.get_global_var('func_3768')
call_4193 = relay.TupleGetItem(func_3766_call(), 0)
call_4194 = relay.TupleGetItem(func_3768_call(), 0)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_4231 = relay.TupleGetItem(func_2758_call(), 0)
call_4232 = relay.TupleGetItem(func_2759_call(), 0)
func_2975_call = mod.get_global_var('func_2975')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_4233 = func_2975_call()
call_4234 = func_2975_call()
output = relay.Tuple([call_4193,call_4231,call_4233,])
output2 = relay.Tuple([call_4194,call_4232,call_4234,])
func_4244 = relay.Function([], output)
mod['func_4244'] = func_4244
mod = relay.transform.InferType()(mod)
mutated_mod['func_4244'] = func_4244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4244_call = mutated_mod.get_global_var('func_4244')
call_4245 = func_4244_call()
output = call_4245
func_4246 = relay.Function([], output)
mutated_mod['func_4246'] = func_4246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3766_call = mod.get_global_var('func_3766')
func_3768_call = mutated_mod.get_global_var('func_3768')
call_4306 = relay.TupleGetItem(func_3766_call(), 0)
call_4307 = relay.TupleGetItem(func_3768_call(), 0)
output = relay.Tuple([call_4306,])
output2 = relay.Tuple([call_4307,])
func_4320 = relay.Function([], output)
mod['func_4320'] = func_4320
mod = relay.transform.InferType()(mod)
mutated_mod['func_4320'] = func_4320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4320_call = mutated_mod.get_global_var('func_4320')
call_4321 = func_4320_call()
output = call_4321
func_4322 = relay.Function([], output)
mutated_mod['func_4322'] = func_4322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3766_call = mod.get_global_var('func_3766')
func_3768_call = mutated_mod.get_global_var('func_3768')
call_4369 = relay.TupleGetItem(func_3766_call(), 0)
call_4370 = relay.TupleGetItem(func_3768_call(), 0)
output = relay.Tuple([call_4369,])
output2 = relay.Tuple([call_4370,])
func_4379 = relay.Function([], output)
mod['func_4379'] = func_4379
mod = relay.transform.InferType()(mod)
output = func_4379()
func_4380 = relay.Function([], output)
mutated_mod['func_4380'] = func_4380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3766_call = mod.get_global_var('func_3766')
func_3768_call = mutated_mod.get_global_var('func_3768')
call_4395 = relay.TupleGetItem(func_3766_call(), 0)
call_4396 = relay.TupleGetItem(func_3768_call(), 0)
func_4320_call = mod.get_global_var('func_4320')
func_4322_call = mutated_mod.get_global_var('func_4322')
call_4428 = relay.TupleGetItem(func_4320_call(), 0)
call_4429 = relay.TupleGetItem(func_4322_call(), 0)
output = relay.Tuple([call_4395,call_4428,])
output2 = relay.Tuple([call_4396,call_4429,])
func_4449 = relay.Function([], output)
mod['func_4449'] = func_4449
mod = relay.transform.InferType()(mod)
mutated_mod['func_4449'] = func_4449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4449_call = mutated_mod.get_global_var('func_4449')
call_4450 = func_4449_call()
output = call_4450
func_4451 = relay.Function([], output)
mutated_mod['func_4451'] = func_4451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_4452 = relay.TupleGetItem(func_2758_call(), 0)
call_4453 = relay.TupleGetItem(func_2759_call(), 0)
func_3755_call = mod.get_global_var('func_3755')
func_3759_call = mutated_mod.get_global_var('func_3759')
const_4470 = relay.const([-4.679887,-0.082484,5.803578,-4.359133,9.355562,4.477296,-0.352219,6.392387,-5.383098,-7.131367,0.999727,-3.762782,-4.274349,7.376154,-3.027933,-9.102067,-6.564558,-6.098715,-7.877445,9.192257,1.016287,-5.782706,-2.751240,3.773184,4.674647,-1.969625,2.686393,2.830490,5.680854,8.837042,7.964686,-7.096377,-3.205811,-1.176388,-5.073855,3.375660,-5.947611,0.801474,6.915697,5.060449,-4.761208,-6.763961,5.422253,-2.306037,-9.448884,-8.356494,9.632155,7.478128,8.778915,-8.208597,1.568587,-5.016984,6.560053,3.093997,-1.434998,9.995007,-2.016265,-9.745616,-8.702978,-3.539732,5.443574,-2.702761,-7.650532,-6.218666,8.140848,3.999183,-5.351453,-1.324366,6.618807,4.297595,5.515324,7.363551,-4.491622,8.189382,-3.217120,2.428872,-3.625023,-5.025830,7.863416,-9.647965,1.657406,-4.696071,8.498797,8.394409,-8.624165,-8.279046,0.832616,6.765980,-7.313926,-2.821926,-1.789140,-2.415632,-9.813640,6.523565,1.717777,-1.954923,4.149569,4.605360,-8.498642,-1.732913,4.476793,-6.949948,-4.640661,-1.285619,-8.744065,3.465321,-7.709605,6.987565,-4.998461,-8.494473,-2.933472,-5.858785,1.076767,8.155319,-5.449680,-6.884952,-2.200668,-7.418902,-3.837999,3.360353,-5.479522,-2.805990,-3.492359,4.670095,-9.460031,2.525168,-6.794980,2.874446,2.530641,3.077123,-2.309124,4.557181,-4.329655,8.068180,-1.442679,5.538400,6.601954,2.916580,4.062451,-1.823771,-8.703839,7.226461,6.664071,5.952631,7.667953,-2.045809,-7.821469,-5.254266,2.098614,-6.274478,7.414354,-8.478761,4.790926,-8.795331,-1.838130,-4.850076,-1.288074,-1.776930,-8.119146,-1.141517,-4.982488,9.896491,-6.139996,-1.534606,4.201280,9.800491,-8.333009,0.411591,9.551270,1.463204,-4.878419,4.141881,5.065456,-4.768304,1.953571,3.738239,3.304533,-5.883164,-1.381311,-5.032210,4.672593,-6.953626,9.047414,4.006546,-4.274547,5.774346,9.076613,9.595757,-5.379788,-0.052069,0.220237,2.337388,9.114448,-1.599070,-0.833037,1.402296,6.718548,-1.242586,-8.694157,2.937321,-7.541904,3.479311,5.505499,-4.519715,2.649752,2.253671,-9.399828,8.682534,7.212131,0.979125,-9.553136,4.798431,4.180190,5.429742,-9.212742,-6.287054,2.025352,-7.571143,-7.782930,-1.195563,1.826117,-1.812968,-0.724678,4.458064,-7.506504,-1.921574,-2.978525,-2.388376,9.590309,0.033469,-6.408069,-4.996369,7.099344,4.449442,5.138926,0.170292,9.727572,-7.269797,-8.992637,0.054325,-5.803612,2.801079,-0.443732,-0.598455,4.224532,8.962059,4.471507,7.815821,-1.062877,1.635566,-1.523636,-3.523132,-9.768292,-4.448717,7.423170,6.356755,2.429250,-8.079422,-7.062566,4.319497,-4.797106,-4.865820,-7.601652,-0.825707,-7.882579,-2.069951,2.183231,-1.088490,0.256231,-1.218221,7.959317,-5.954703,-7.841461,-0.515143,-3.756855,5.696396,-6.110796,-1.233026,9.096613,8.954722,-1.243068,4.734971,-2.856799,-4.957125,-4.612787,-3.313383,-6.312847,-3.084216,6.162931,-4.544729,-3.804427,-8.710735,0.869033,9.899651,-3.188469,-9.512003,-4.013104,-2.105065,5.984577,-1.433982,1.952445,8.149042,9.868673,-1.730332,-9.009112,-0.759797,-6.886607,0.862204,-1.116700,5.024376,9.144580,2.470104,6.244412,6.195457,-2.248639,-2.688942,-2.177802,-5.292039,6.123867,6.378741,4.674455,-1.698524,-0.631374,7.692907,-9.765657,4.433443,-5.728307,7.699174,-9.810058,-9.396050,-4.178053,-0.699287,2.529826,-2.859872,-6.286949,-7.949831,-8.995789,9.883598,0.125058,5.838560,4.538979,4.679362,0.471143,1.651376,7.652152,6.555281,-2.757265,7.964184,-7.449299,-8.458067,9.935081,-5.518355,6.513658,-3.458156,-7.587216,-0.121779,8.447566,8.941781,-2.393522,-5.682407,-6.780343,1.276701,-5.756141,-5.085024,5.855822,6.287368,-1.387066,-0.118907,2.155198,-5.734438,-0.964605,-5.847374,-6.708738,-1.891763,-5.313850,6.890845,-2.748792,-1.780123,5.408740,0.104322,1.538974,7.468050,-5.345452,-4.601942,-7.029542,2.050819,4.871009,-3.467900,9.957294,1.118729,-9.958041,2.948095,8.634416,4.033899,-6.723236,7.265657,2.300207,6.494094,-8.548041,6.847283,-8.413482,2.501610,-2.586926,-5.729648,6.017428,-4.871451,-6.208866,-5.351465,2.994263,-1.109174,8.333884,9.764563,-0.340017,-8.972613,-0.838221,0.453376,1.236840,1.341851,4.565687,6.908743,8.821213,-6.101430,2.426416,1.847188,-7.843843,4.447532,-0.758823,-2.807018,4.523811], dtype = "float32")#candidate|4470|(429,)|const|float32
const_4471 = relay.const([[-2.908952,-7.550184],[-9.011999,-3.895674],[0.723489,5.971385],[9.238050,9.471998],[-3.912163,1.964290],[8.937463,1.168972],[7.132534,4.197931],[3.692578,7.874723],[2.232364,7.230842],[5.162079,9.437612],[-7.285808,-4.337246],[7.277362,0.430965],[-2.798440,-0.390131],[-9.846318,-6.358305],[4.320751,-7.821074],[-6.276296,-9.215593],[5.904505,9.929976],[4.808700,6.211545],[7.454627,7.836831],[3.556822,-8.576783],[-2.121071,2.317467],[-7.303590,-6.249192],[8.758273,3.982394],[-3.892408,4.955840],[6.804978,-3.612785],[3.770610,0.470884],[1.087641,-3.197347],[2.660987,-5.111874],[4.771856,2.524965],[-2.337222,5.228033],[-3.472742,7.513978],[-5.048490,-7.718430],[-0.484364,-8.379804],[-6.744703,-7.658972],[2.722174,-4.477057],[-4.376429,-6.977373],[-4.967415,6.573969],[1.898729,5.063352],[6.338809,-1.567087],[0.265924,-6.207407],[1.148954,-8.499530],[-1.060541,-3.712512],[2.190196,-1.570487],[0.130919,8.335892],[-1.337125,-7.324418],[-4.952075,8.730808],[9.554528,8.724935],[-2.755434,-0.837985],[7.342288,4.793194],[6.694978,5.995702],[-3.093333,-2.204520],[-8.498186,-1.573126],[3.650974,-8.699032],[-2.774224,5.257323],[2.723630,-0.288253],[-4.816124,2.287078],[3.264463,9.855098],[-8.887097,0.305117],[4.654645,1.880822],[-4.749058,-3.162066],[-7.222911,7.473081],[8.505778,-3.477277],[9.868402,-8.185870],[6.969926,0.289895],[3.366206,-2.117785],[4.695838,-4.640803],[4.346760,-1.544133],[6.847201,1.996433],[3.865732,-6.341176],[-1.968794,2.060261],[-9.176341,4.094769],[-4.627479,-3.921573],[-8.212118,6.211111],[9.519415,-9.934606],[7.845435,-5.666924],[9.607402,2.291073],[-2.922772,9.205697],[-7.973507,-5.012135],[7.808306,5.945490],[3.526918,3.907082],[-9.320112,8.116881],[-8.179195,-6.985805],[6.098255,8.825270],[0.677363,2.147224],[-0.642627,-4.650351],[-6.537032,8.338553],[-8.561878,3.147841],[9.851171,9.384012],[1.161042,7.050298],[-4.413914,-7.113961],[-3.087111,3.245155],[-1.054353,4.973144],[1.152848,0.378799],[-0.784576,7.587155],[6.828442,-5.621351],[6.484821,-6.618128],[3.930454,6.716103],[-2.627331,3.996564],[7.049910,-2.071832],[7.071261,-5.585728],[0.490866,-7.028312],[4.295518,-5.951215],[-7.498517,2.898961],[3.947829,4.652227],[9.661083,-8.258266],[-1.951718,-4.730502],[-6.605716,2.312280],[-0.230991,5.912456],[1.103597,9.569912],[1.026634,-0.988154],[5.136991,-6.296415],[9.891809,0.539559],[-1.990521,-3.895458],[5.629334,-6.534396],[4.016848,3.979553],[7.061775,9.195685],[7.498708,5.469018],[8.955352,-8.788232],[4.818319,6.129845],[-5.253411,9.522143],[-3.848488,7.264169],[-6.251975,-6.276022],[6.429217,5.942400],[-1.663126,-8.670407],[-8.562511,-8.038624],[2.886701,-9.353508],[9.700690,6.976487],[-8.528381,-5.310148],[7.953746,-0.488340],[5.060805,1.172907],[-9.676998,-8.698660],[-2.819419,-8.293027],[-2.906035,-6.199767],[-7.807019,5.633240],[-2.569243,9.507829],[6.625104,3.722985],[-0.599240,5.992464],[-7.544140,-3.152622],[1.987631,2.134710],[5.877016,-0.024958],[4.099331,5.338672],[6.611452,7.533057],[-6.451040,-6.834874],[8.110367,-4.630598],[1.294952,5.744723],[-3.256166,9.489916],[-2.764672,8.137459],[-8.375906,-4.290140],[-6.245646,4.475235],[-3.967797,8.691512],[-9.254289,-2.095754],[-2.914472,1.935078],[-7.760612,0.795041],[-1.058568,0.613961],[-9.242977,4.671228],[-6.416759,-9.047683],[1.285900,8.993659],[-4.312322,-4.763585],[-8.760828,-5.243600],[6.535230,0.161540],[2.981536,8.052174],[0.172665,-3.768756],[6.844329,-6.527466],[6.574619,9.807996],[9.196688,-7.530458],[0.287973,-8.181337],[-8.742505,-6.409075],[-0.174423,3.162251],[0.604404,7.385622],[4.687985,-3.611419],[5.224697,5.060255],[0.849573,-9.568019],[7.970525,-1.984290],[2.464354,-8.761521],[-9.167278,-5.597016],[-9.280243,-4.102322],[-2.411841,-4.484345],[5.266975,-9.021201],[-9.615017,-8.952795],[-6.593884,-6.904436],[9.517603,0.753132],[5.616061,-9.072995],[-8.441680,-0.831990],[1.696637,-9.826973],[-6.268210,3.945211],[0.811509,3.663108],[6.461052,3.924474],[-2.613147,7.603561],[1.201052,-2.742729],[6.969576,-9.691017],[7.662548,-8.906171],[4.322456,-3.581082],[-5.439176,3.112029],[-2.401041,6.839153],[-2.695499,0.841595],[-6.129816,6.416763],[1.726654,-4.113624],[-3.231552,6.307322],[7.180017,-4.841103],[-0.010266,-2.877792],[5.935876,6.178414],[-3.003235,7.829520],[9.299252,6.234389],[-8.690320,2.984112],[1.859937,-4.796556],[-8.558242,6.930246],[9.400441,-1.512503],[1.327039,-4.759439],[3.987113,-6.073206],[-8.108552,-4.884735]], dtype = "float32")#candidate|4471|(210, 2)|const|float32
call_4469 = relay.TupleGetItem(func_3755_call(relay.reshape(const_4470.astype('float32'), [429,]), relay.reshape(const_4471.astype('float32'), [420,]), ), 1)
call_4472 = relay.TupleGetItem(func_3759_call(relay.reshape(const_4470.astype('float32'), [429,]), relay.reshape(const_4471.astype('float32'), [420,]), ), 1)
func_1155_call = mod.get_global_var('func_1155')
func_1159_call = mutated_mod.get_global_var('func_1159')
var_4476 = relay.var("var_4476", dtype = "float64", shape = (756,))#candidate|4476|(756,)|var|float64
call_4475 = relay.TupleGetItem(func_1155_call(relay.reshape(var_4476.astype('float64'), [9, 6, 14]), relay.reshape(var_4476.astype('float64'), [9, 6, 14]), ), 0)
call_4477 = relay.TupleGetItem(func_1159_call(relay.reshape(var_4476.astype('float64'), [9, 6, 14]), relay.reshape(var_4476.astype('float64'), [9, 6, 14]), ), 0)
func_2857_call = mod.get_global_var('func_2857')
func_2858_call = mutated_mod.get_global_var('func_2858')
call_4484 = relay.TupleGetItem(func_2857_call(), 0)
call_4485 = relay.TupleGetItem(func_2858_call(), 0)
bop_4489 = relay.divide(call_4452.astype('float32'), const_4470.astype('float32')) # shape=(5, 14, 429)
bop_4492 = relay.divide(call_4453.astype('float32'), const_4470.astype('float32')) # shape=(5, 14, 429)
output = relay.Tuple([call_4469,const_4471,call_4475,var_4476,call_4484,bop_4489,])
output2 = relay.Tuple([call_4472,const_4471,call_4477,var_4476,call_4485,bop_4492,])
func_4493 = relay.Function([var_4476,], output)
mod['func_4493'] = func_4493
mod = relay.transform.InferType()(mod)
var_4494 = relay.var("var_4494", dtype = "float64", shape = (756,))#candidate|4494|(756,)|var|float64
output = func_4493(var_4494)
func_4495 = relay.Function([var_4494], output)
mutated_mod['func_4495'] = func_4495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3094_call = mutated_mod.get_global_var('func_3094')
call_4546 = relay.TupleGetItem(func_3093_call(), 1)
call_4547 = relay.TupleGetItem(func_3094_call(), 1)
uop_4557 = relay.sin(call_4546.astype('float64')) # shape=(5, 14, 1)
uop_4559 = relay.sin(call_4547.astype('float64')) # shape=(5, 14, 1)
bop_4570 = relay.mod(uop_4557.astype('float32'), relay.reshape(call_4546.astype('float32'), relay.shape_of(uop_4557))) # shape=(5, 14, 1)
bop_4573 = relay.mod(uop_4559.astype('float32'), relay.reshape(call_4547.astype('float32'), relay.shape_of(uop_4559))) # shape=(5, 14, 1)
func_4104_call = mod.get_global_var('func_4104')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_4574 = func_4104_call()
call_4575 = func_4104_call()
output = relay.Tuple([bop_4570,call_4574,])
output2 = relay.Tuple([bop_4573,call_4575,])
func_4583 = relay.Function([], output)
mod['func_4583'] = func_4583
mod = relay.transform.InferType()(mod)
output = func_4583()
func_4584 = relay.Function([], output)
mutated_mod['func_4584'] = func_4584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mod.get_global_var('func_3969')
func_3970_call = mutated_mod.get_global_var('func_3970')
call_4624 = relay.TupleGetItem(func_3969_call(), 0)
call_4625 = relay.TupleGetItem(func_3970_call(), 0)
uop_4629 = relay.cos(call_4624.astype('float32')) # shape=(5, 14, 1)
uop_4631 = relay.cos(call_4625.astype('float32')) # shape=(5, 14, 1)
func_2943_call = mod.get_global_var('func_2943')
func_2945_call = mutated_mod.get_global_var('func_2945')
const_4639 = relay.const([[False,True,False,True,False,True,False,True,False,False,False,False,True,False,False,True,False,False,False,False,True,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,True,True,True,False,True,False,False,True,False,False,True,False,False,False,True,False,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,True,False,True,False,False,False,False,True,True,False,True,False,True,True,False,False]], dtype = "bool")#candidate|4639|(1, 208)|const|bool
call_4638 = relay.TupleGetItem(func_2943_call(relay.reshape(const_4639.astype('bool'), [208,])), 2)
call_4640 = relay.TupleGetItem(func_2945_call(relay.reshape(const_4639.astype('bool'), [208,])), 2)
output = relay.Tuple([uop_4629,call_4638,const_4639,])
output2 = relay.Tuple([uop_4631,call_4640,const_4639,])
func_4643 = relay.Function([], output)
mod['func_4643'] = func_4643
mod = relay.transform.InferType()(mod)
output = func_4643()
func_4644 = relay.Function([], output)
mutated_mod['func_4644'] = func_4644
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4670 = relay.var("var_4670", dtype = "int8", shape = (1, 1, 8))#candidate|4670|(1, 1, 8)|var|int8
var_4671 = relay.var("var_4671", dtype = "int8", shape = (8, 3, 8))#candidate|4671|(8, 3, 8)|var|int8
bop_4672 = relay.less_equal(var_4670.astype('bool'), var_4671.astype('bool')) # shape=(8, 3, 8)
func_4244_call = mod.get_global_var('func_4244')
func_4246_call = mutated_mod.get_global_var('func_4246')
call_4675 = relay.TupleGetItem(func_4244_call(), 2)
call_4676 = relay.TupleGetItem(func_4246_call(), 2)
func_2975_call = mod.get_global_var('func_2975')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_4680 = func_2975_call()
call_4681 = func_2975_call()
output = relay.Tuple([bop_4672,call_4675,call_4680,])
output2 = relay.Tuple([bop_4672,call_4676,call_4681,])
func_4682 = relay.Function([var_4670,var_4671,], output)
mod['func_4682'] = func_4682
mod = relay.transform.InferType()(mod)
mutated_mod['func_4682'] = func_4682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4682_call = mutated_mod.get_global_var('func_4682')
var_4684 = relay.var("var_4684", dtype = "int8", shape = (1, 1, 8))#candidate|4684|(1, 1, 8)|var|int8
var_4685 = relay.var("var_4685", dtype = "int8", shape = (8, 3, 8))#candidate|4685|(8, 3, 8)|var|int8
call_4683 = func_4682_call(var_4684,var_4685,)
output = call_4683
func_4686 = relay.Function([var_4684,var_4685,], output)
mutated_mod['func_4686'] = func_4686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4643_call = mod.get_global_var('func_4643')
func_4644_call = mutated_mod.get_global_var('func_4644')
call_4705 = relay.TupleGetItem(func_4643_call(), 1)
call_4706 = relay.TupleGetItem(func_4644_call(), 1)
func_3766_call = mod.get_global_var('func_3766')
func_3768_call = mutated_mod.get_global_var('func_3768')
call_4738 = relay.TupleGetItem(func_3766_call(), 0)
call_4739 = relay.TupleGetItem(func_3768_call(), 0)
func_3766_call = mod.get_global_var('func_3766')
func_3768_call = mutated_mod.get_global_var('func_3768')
call_4751 = relay.TupleGetItem(func_3766_call(), 0)
call_4752 = relay.TupleGetItem(func_3768_call(), 0)
output = relay.Tuple([call_4705,call_4738,call_4751,])
output2 = relay.Tuple([call_4706,call_4739,call_4752,])
func_4759 = relay.Function([], output)
mod['func_4759'] = func_4759
mod = relay.transform.InferType()(mod)
mutated_mod['func_4759'] = func_4759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4759_call = mutated_mod.get_global_var('func_4759')
call_4760 = func_4759_call()
output = call_4760
func_4761 = relay.Function([], output)
mutated_mod['func_4761'] = func_4761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3706_call = mod.get_global_var('func_3706')
func_3708_call = mutated_mod.get_global_var('func_3708')
call_4770 = relay.TupleGetItem(func_3706_call(), 1)
call_4771 = relay.TupleGetItem(func_3708_call(), 1)
func_4244_call = mod.get_global_var('func_4244')
func_4246_call = mutated_mod.get_global_var('func_4246')
call_4788 = relay.TupleGetItem(func_4244_call(), 0)
call_4789 = relay.TupleGetItem(func_4246_call(), 0)
output = relay.Tuple([call_4770,call_4788,])
output2 = relay.Tuple([call_4771,call_4789,])
func_4793 = relay.Function([], output)
mod['func_4793'] = func_4793
mod = relay.transform.InferType()(mod)
output = func_4793()
func_4794 = relay.Function([], output)
mutated_mod['func_4794'] = func_4794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3362_call = mod.get_global_var('func_3362')
func_3364_call = mutated_mod.get_global_var('func_3364')
call_4795 = relay.TupleGetItem(func_3362_call(), 1)
call_4796 = relay.TupleGetItem(func_3364_call(), 1)
output = relay.Tuple([call_4795,])
output2 = relay.Tuple([call_4796,])
func_4818 = relay.Function([], output)
mod['func_4818'] = func_4818
mod = relay.transform.InferType()(mod)
output = func_4818()
func_4819 = relay.Function([], output)
mutated_mod['func_4819'] = func_4819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mod.get_global_var('func_3969')
func_3970_call = mutated_mod.get_global_var('func_3970')
call_4820 = relay.TupleGetItem(func_3969_call(), 0)
call_4821 = relay.TupleGetItem(func_3970_call(), 0)
func_4759_call = mod.get_global_var('func_4759')
func_4761_call = mutated_mod.get_global_var('func_4761')
call_4835 = relay.TupleGetItem(func_4759_call(), 2)
call_4836 = relay.TupleGetItem(func_4761_call(), 2)
output = relay.Tuple([call_4820,call_4835,])
output2 = relay.Tuple([call_4821,call_4836,])
func_4837 = relay.Function([], output)
mod['func_4837'] = func_4837
mod = relay.transform.InferType()(mod)
output = func_4837()
func_4838 = relay.Function([], output)
mutated_mod['func_4838'] = func_4838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4449_call = mod.get_global_var('func_4449')
func_4451_call = mutated_mod.get_global_var('func_4451')
call_4884 = relay.TupleGetItem(func_4449_call(), 0)
call_4885 = relay.TupleGetItem(func_4451_call(), 0)
func_2709_call = mod.get_global_var('func_2709')
func_2715_call = mutated_mod.get_global_var('func_2715')
const_4894 = relay.const([3.242092,1.907011,-9.923011,4.954980,-6.156890,-9.836249,-6.056809,-2.409690,1.709646,-2.361552,2.028303,-3.293688,8.392249,0.343376,-5.195069,-7.054066,-4.247948,-2.645068,-2.326977,-6.645727,4.144432,-8.320730,-9.045743,-7.627786,2.457959,-5.356051,-5.732901,1.815309,8.607016,-8.931527,0.355289,6.821675,2.281004,8.744694,6.679728,-1.762601,-7.281549,7.959374,8.005492,-1.702535,-5.846369,3.648119,-2.142118,2.457245,-0.456229,4.996273,-0.678905,6.056643,-5.018444,2.439009,4.299704,-4.912356,-2.531309,-2.899532,5.712883,1.408978,7.415593,-4.559833,8.741005,-1.022960,8.774556,-2.309552,-1.934633,6.750588,-1.687448,6.123633,-8.415001,2.085061,4.262335,2.474581,4.066329,-3.180116,6.113863,-9.643758,-4.027178,-9.432787,-5.098867,3.151098,7.410734,7.990088,-3.871495,6.343699,-9.001159,7.965967,-3.002180,-1.441536,6.757654,0.864644,1.155394,-6.734517,-4.320919,2.934049,9.146123,1.960955,-9.663661,-7.887342,9.392237,8.142354,-6.547870,5.266055,1.735046,-7.349876,3.046914,-8.018914,4.800638,-7.495091,7.941452,-3.812233,8.867494,3.355052,-0.774193,-1.338676,6.025656,2.959000,-9.782211,5.514025,-4.924255,7.465833,0.373462,-4.967126], dtype = "float64")#candidate|4894|(120,)|const|float64
var_4895 = relay.var("var_4895", dtype = "uint16", shape = ())#candidate|4895|()|var|uint16
var_4896 = relay.var("var_4896", dtype = "uint16", shape = (72,))#candidate|4896|(72,)|var|uint16
var_4897 = relay.var("var_4897", dtype = "float32", shape = (429, 1))#candidate|4897|(429, 1)|var|float32
call_4893 = relay.TupleGetItem(func_2709_call(relay.reshape(const_4894.astype('float64'), [120,]), relay.reshape(var_4895.astype('uint16'), []), relay.reshape(var_4896.astype('uint16'), [72,]), relay.reshape(var_4897.astype('float32'), [429,]), ), 7)
call_4898 = relay.TupleGetItem(func_2715_call(relay.reshape(const_4894.astype('float64'), [120,]), relay.reshape(var_4895.astype('uint16'), []), relay.reshape(var_4896.astype('uint16'), [72,]), relay.reshape(var_4897.astype('float32'), [429,]), ), 7)
func_3882_call = mod.get_global_var('func_3882')
func_3885_call = mutated_mod.get_global_var('func_3885')
call_4900 = relay.TupleGetItem(func_3882_call(relay.reshape(var_4897.astype('float32'), [39, 11])), 3)
call_4901 = relay.TupleGetItem(func_3885_call(relay.reshape(var_4897.astype('float32'), [39, 11])), 3)
var_4906 = relay.var("var_4906", dtype = "float32", shape = (429,))#candidate|4906|(429,)|var|float32
bop_4907 = relay.divide(call_4893.astype('float64'), relay.reshape(var_4906.astype('float64'), relay.shape_of(call_4893))) # shape=(429,)
bop_4910 = relay.divide(call_4898.astype('float64'), relay.reshape(var_4906.astype('float64'), relay.shape_of(call_4898))) # shape=(429,)
output = relay.Tuple([call_4884,const_4894,var_4895,var_4896,var_4897,call_4900,bop_4907,])
output2 = relay.Tuple([call_4885,const_4894,var_4895,var_4896,var_4897,call_4901,bop_4910,])
func_4917 = relay.Function([var_4895,var_4896,var_4897,var_4906,], output)
mod['func_4917'] = func_4917
mod = relay.transform.InferType()(mod)
var_4918 = relay.var("var_4918", dtype = "uint16", shape = ())#candidate|4918|()|var|uint16
var_4919 = relay.var("var_4919", dtype = "uint16", shape = (72,))#candidate|4919|(72,)|var|uint16
var_4920 = relay.var("var_4920", dtype = "float32", shape = (429, 1))#candidate|4920|(429, 1)|var|float32
var_4921 = relay.var("var_4921", dtype = "float32", shape = (429,))#candidate|4921|(429,)|var|float32
output = func_4917(var_4918,var_4919,var_4920,var_4921,)
func_4922 = relay.Function([var_4918,var_4919,var_4920,var_4921,], output)
mutated_mod['func_4922'] = func_4922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3706_call = mod.get_global_var('func_3706')
func_3708_call = mutated_mod.get_global_var('func_3708')
call_4930 = relay.TupleGetItem(func_3706_call(), 1)
call_4931 = relay.TupleGetItem(func_3708_call(), 1)
output = relay.Tuple([call_4930,])
output2 = relay.Tuple([call_4931,])
func_4936 = relay.Function([], output)
mod['func_4936'] = func_4936
mod = relay.transform.InferType()(mod)
mutated_mod['func_4936'] = func_4936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4936_call = mutated_mod.get_global_var('func_4936')
call_4937 = func_4936_call()
output = call_4937
func_4938 = relay.Function([], output)
mutated_mod['func_4938'] = func_4938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3094_call = mutated_mod.get_global_var('func_3094')
call_4945 = relay.TupleGetItem(func_3093_call(), 1)
call_4946 = relay.TupleGetItem(func_3094_call(), 1)
output = relay.Tuple([call_4945,])
output2 = relay.Tuple([call_4946,])
func_4949 = relay.Function([], output)
mod['func_4949'] = func_4949
mod = relay.transform.InferType()(mod)
output = func_4949()
func_4950 = relay.Function([], output)
mutated_mod['func_4950'] = func_4950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2584_call = mod.get_global_var('func_2584')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_4967 = relay.TupleGetItem(func_2584_call(), 0)
call_4968 = relay.TupleGetItem(func_2585_call(), 0)
output = call_4967
output2 = call_4968
func_4986 = relay.Function([], output)
mod['func_4986'] = func_4986
mod = relay.transform.InferType()(mod)
mutated_mod['func_4986'] = func_4986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4986_call = mutated_mod.get_global_var('func_4986')
call_4987 = func_4986_call()
output = call_4987
func_4988 = relay.Function([], output)
mutated_mod['func_4988'] = func_4988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4320_call = mod.get_global_var('func_4320')
func_4322_call = mutated_mod.get_global_var('func_4322')
call_5000 = relay.TupleGetItem(func_4320_call(), 0)
call_5001 = relay.TupleGetItem(func_4322_call(), 0)
const_5007 = relay.const([[[-7.107647,0.167647,-9.083449,0.433193,7.249613,-8.306940,2.429124,-3.355406,2.107185,2.158207,4.174390,-4.439230,-0.052653],[-1.082778,-3.141627,-1.840929,-1.089627,-8.699564,-1.474132,4.463373,1.088059,-9.513819,-6.630222,-8.182537,-5.082309,-2.127021],[5.354709,-9.790246,3.376618,7.057606,-5.771654,2.271558,-8.934617,7.590855,6.094866,-1.929513,4.120778,0.555350,-7.248934],[3.098058,4.822906,-2.369147,-1.409773,8.475095,-0.326378,4.478713,-0.524252,6.558766,6.583742,-6.915592,6.111119,7.144880],[3.878039,-1.729866,-2.642094,-8.070534,2.288776,-9.182106,5.630992,-9.620869,-9.630179,-3.257700,-3.670557,7.094712,-1.051115],[-4.069439,9.627753,-2.789687,-1.554923,-2.768889,-7.650731,-2.269511,7.388325,2.687217,-4.278528,-9.633749,-0.888380,-5.044509],[5.533692,-7.271575,8.846928,6.559365,-5.497754,5.302061,6.526049,8.773718,-9.155718,6.337852,-0.922326,-7.234243,-7.552763],[6.179199,3.888784,1.829332,-7.388772,-3.013788,-4.901895,-9.472170,-5.094237,7.105728,5.643951,2.616227,6.173712,6.020401],[-3.127730,-4.414242,2.605387,5.758705,9.764820,0.143714,-4.250680,1.464362,7.407899,7.310399,5.079908,0.848397,0.010208],[-0.385335,-9.841788,-3.934776,0.630913,7.396368,-2.572647,3.898866,-9.480759,0.697351,3.440798,7.075960,-7.889007,-2.711777],[-1.027588,-8.611348,-3.157168,-1.257667,4.043217,3.647503,4.056924,4.980131,6.469037,-5.352849,0.566184,-7.148295,-9.993616],[4.466598,-5.320084,0.089013,-1.460642,-2.745153,-0.891566,6.248054,0.412680,3.309623,9.756511,4.664390,9.593184,-5.627808],[0.205173,0.690853,4.275625,9.201332,-0.156197,-9.791197,-1.139890,-3.795753,3.194340,-9.979436,-2.044820,7.021887,-4.435418],[6.684358,-3.600404,-1.264413,-4.674913,-7.166915,6.896239,-5.857823,-8.589178,-3.696778,0.157942,7.422372,-4.100857,-3.789711]],[[3.532631,-8.431554,-3.493458,-1.713287,-1.587792,-1.745773,-8.479544,-0.879754,-2.229057,-5.147929,3.061065,-6.274007,6.990924],[1.228957,9.620320,-2.614790,5.196939,6.990248,-5.317761,5.852496,-0.560647,-9.900105,-6.872852,-5.630745,6.891599,4.579789],[9.880737,9.179516,0.470896,-3.203286,-5.672039,-9.408355,-7.789790,6.715112,2.363067,2.437828,2.003882,-5.486780,-3.343197],[-2.391117,1.132430,-3.082638,0.364239,5.696377,-3.026908,-6.016929,9.035763,-7.627336,-3.626961,-9.529026,-9.212396,5.200754],[2.843954,3.695669,0.622556,9.314623,5.007131,1.895313,-5.782587,-0.069626,7.877954,0.633537,4.244843,-7.029535,-1.930025],[8.540605,-9.246255,-9.920486,-7.280172,8.249871,1.735304,6.112576,-5.555332,-3.750632,0.413920,6.927192,7.677571,6.949525],[-7.935943,-5.727705,4.184549,-7.367887,-2.069484,2.011152,-0.852882,-0.502662,-8.014060,7.746380,1.780827,5.877764,-6.013017],[0.088758,6.204051,-3.372335,-5.549372,-1.291690,-4.252891,6.532121,5.608282,6.126198,3.083791,-4.368427,4.981612,-0.737536],[0.034249,-3.185387,-0.264055,1.344304,-4.168014,0.070459,-8.942798,-3.589909,-4.829256,5.871066,6.660801,-7.604865,5.763087],[-5.170093,-6.593556,3.746922,-4.985175,2.217426,4.406557,-7.261025,-8.646170,-8.244440,-6.131459,9.925362,-6.774907,-4.594172],[3.369302,-9.917120,9.537971,-2.724126,2.690979,7.229963,6.119215,-2.051548,7.970052,-5.568294,-6.195139,-1.468429,-6.903838],[-3.101761,5.241402,-5.185943,6.265858,5.729232,5.913885,-3.746544,2.200186,-5.085713,-4.426686,0.279553,1.171412,8.339936],[-6.241450,-4.817249,8.458960,2.528201,-1.850874,7.412729,-7.443763,-2.927609,-7.087049,-8.188503,0.065652,-3.278225,7.326864],[8.960815,-0.703594,-8.852836,0.148722,5.361700,2.859453,2.816216,-0.067157,7.408293,1.443910,-1.515271,-4.275861,0.985673]],[[4.686857,6.380341,1.689043,1.938882,0.002833,-4.391899,3.410832,2.857696,-2.650335,-8.602518,-3.982051,7.993997,8.614738],[6.902318,-4.119489,7.402279,5.112991,-5.036958,-0.710031,-1.055345,7.733302,-9.429739,-9.615322,-2.009306,-6.195520,2.186088],[-9.115809,-4.595098,-2.039833,-1.511579,-9.458781,-6.295928,-5.222563,-2.672030,-5.962085,2.854581,4.013528,-6.086239,7.139542],[-3.467697,3.088615,-3.703336,-3.000419,-8.100041,0.959478,1.146504,-6.800355,9.332228,-9.046553,3.547344,-5.507963,-3.751624],[-9.661404,7.599191,1.075330,4.853388,8.035899,5.546237,-3.378381,-4.179808,-0.431595,5.778648,9.922810,0.631402,-8.379861],[-3.875072,9.303283,-5.424202,-5.665540,-1.319879,1.817954,-1.656356,0.799877,-7.833794,4.404597,4.167884,-8.978867,9.541235],[0.579770,1.575384,7.506426,-4.363182,0.465783,2.783626,-9.950155,5.501150,8.569080,-2.648867,7.312073,5.753477,5.723700],[-1.279648,8.909206,9.975486,6.257453,1.197900,9.821419,6.442465,-6.393643,-4.929004,-0.458533,8.608433,8.657163,1.754692],[-4.005989,-1.314667,6.725507,-4.353620,-8.786936,-4.975929,-6.632091,-8.284358,0.418417,-6.326708,-0.639269,4.440051,0.163076],[0.228864,-4.115268,7.528492,3.140593,0.732268,3.213553,6.671579,7.240042,6.408681,4.697762,8.474067,1.158323,7.435404],[-5.384409,0.301235,5.050962,0.206718,5.536413,-2.849498,-5.368172,7.913822,2.478352,5.516409,-0.535774,4.699103,-4.494402],[8.710683,-4.421214,-1.229794,4.384325,-9.382481,-7.150392,-5.376198,8.244358,-5.897608,-4.712787,7.778017,-4.481627,8.380098],[4.131685,9.940585,6.199340,7.119745,6.926566,1.537918,2.947207,3.669386,4.734182,5.490885,-3.917344,-8.683646,-0.922563],[6.623569,-0.459750,1.687792,8.437343,9.031806,8.467105,-5.623582,-2.992708,9.053746,-3.018738,3.848148,4.432103,-5.271139]],[[-6.476934,-3.184913,-0.298412,-9.883618,-0.571726,-4.287875,-8.839803,0.604040,-7.928201,-2.062237,8.804177,1.161514,-1.315005],[4.467458,1.802328,5.413545,-5.830555,-3.117873,3.221237,0.629961,0.022312,2.316005,4.417600,4.544676,2.611649,5.314485],[-8.848810,-4.168168,7.926124,-8.444588,6.697770,2.824060,7.564835,-6.920896,-6.105279,9.321664,7.769354,1.018395,4.003876],[-6.856183,-5.882127,2.165497,-6.188155,8.897589,6.839806,3.303415,7.623749,-8.050037,-8.085538,-2.653652,-9.515641,-3.629056],[-6.446320,-9.763190,3.934233,-3.197838,-9.298431,-8.405605,0.387119,6.424556,2.232484,4.742043,3.606100,3.576661,-1.507586],[-9.272282,0.112182,-2.395087,-0.220772,7.071214,-7.754638,4.792634,5.835066,4.549845,5.701222,5.623420,7.918350,3.012274],[-3.476377,9.462440,-2.366523,1.972001,-0.655997,-0.934757,3.407605,-9.920793,7.530607,-8.700886,0.206757,-6.509333,-8.541230],[5.620240,-2.435617,-3.250910,-3.096358,-9.201465,7.857185,-3.047798,9.472324,-9.842089,4.736713,-7.415457,-4.237539,3.287980],[7.060361,-1.252189,-7.895618,9.676193,9.229203,3.351202,8.319239,-2.493663,-3.762836,2.163919,8.229183,-7.825598,-4.294979],[-9.517086,6.635411,6.956688,4.781453,5.650947,0.045507,-1.626155,-7.001152,-3.095316,6.746264,1.103995,-2.857101,-8.547491],[-1.832638,-7.857663,0.496619,-7.575448,-5.214559,4.073819,4.696116,3.009726,-7.805666,9.096017,-9.394140,-9.651919,9.090778],[0.780937,-1.139502,0.766107,-6.587941,-2.479740,-3.734048,-7.106434,-9.715571,-9.212868,-2.457882,-9.988333,-8.654872,-5.460038],[-7.600879,-1.067468,-4.681474,2.711293,7.718499,1.961123,-9.596725,-6.082451,-0.404560,9.262251,-7.309955,2.154336,-4.423451],[5.418900,3.577262,4.553284,4.240488,0.694878,0.467602,-4.726666,-3.623975,-9.211367,1.207385,5.539513,6.668678,-0.181022]],[[4.021745,5.229819,-7.836215,-2.026605,-6.099583,6.536027,9.395571,7.563730,6.468770,-3.009057,3.562558,-6.024884,6.662609],[9.316288,-8.066212,-1.492476,3.824686,5.364293,3.013648,3.446297,2.172016,2.982165,-0.825108,7.349221,-6.872044,1.142716],[-8.529080,4.525231,7.523370,3.783620,-4.792536,0.485274,5.880379,6.900874,-8.776721,-3.887038,0.853076,0.662463,-0.133990],[6.717558,-8.489419,-4.237046,-2.061766,-2.089056,-8.715647,-5.872680,5.409702,-7.039229,-9.189375,6.013370,2.030003,9.886762],[9.377408,-0.040665,5.683319,2.118486,-5.360424,9.443909,0.838130,-8.177773,3.002034,-4.095368,0.730638,9.665175,3.214764],[-6.699884,-5.334340,1.328925,-2.122372,4.243315,-7.046744,0.762351,-2.900662,1.093617,-3.531629,-2.714914,-4.012836,0.056031],[4.492591,-3.198802,7.217513,9.953530,-6.365860,-0.345970,-5.337358,-8.718831,-4.161591,7.703729,-2.533727,-5.164578,7.831048],[-4.468638,8.618246,0.928644,-4.838185,6.664096,-6.097197,0.804880,-5.944927,-4.334509,0.072297,0.631851,-7.900773,4.443221],[0.216745,-6.832258,-5.743485,7.882801,-5.894824,-9.991657,-4.998285,-4.743502,4.553069,1.390115,5.825498,-8.275500,-8.368387],[-0.239428,4.483041,-7.548825,3.067940,4.272349,2.767893,-5.385500,9.321168,9.095976,-7.749424,-0.106138,1.239123,7.790184],[0.261733,-4.277993,2.776428,4.503176,-6.987097,-2.535456,-6.876948,3.129808,-8.535778,4.867768,-8.852233,0.966129,-9.864504],[-4.317137,8.376214,0.851174,-4.618728,-1.163655,-2.012463,-4.267128,6.251801,4.645678,-1.517385,-5.963037,-3.880645,-6.281885],[-7.925256,8.679632,8.279764,-1.924244,-7.204785,-1.005679,3.855034,-6.953178,-9.468174,-5.894640,8.062498,0.645378,-6.644543],[-9.284131,0.167292,-1.572996,-6.179310,-3.485652,0.396962,-4.261729,-8.130648,-9.214442,-3.875218,-0.289316,8.482558,-9.288447]]], dtype = "float64")#candidate|5007|(5, 14, 13)|const|float64
bop_5008 = relay.floor_divide(call_5000.astype('float64'), const_5007.astype('float64')) # shape=(5, 14, 13)
bop_5011 = relay.floor_divide(call_5001.astype('float64'), const_5007.astype('float64')) # shape=(5, 14, 13)
uop_5012 = relay.sinh(const_5007.astype('float64')) # shape=(5, 14, 13)
func_3948_call = mod.get_global_var('func_3948')
func_3949_call = mutated_mod.get_global_var('func_3949')
call_5019 = func_3948_call()
call_5020 = func_3948_call()
func_3535_call = mod.get_global_var('func_3535')
func_3537_call = mutated_mod.get_global_var('func_3537')
const_5029 = relay.const([7.165327,4.587197,1.543741,7.845667,9.291952,9.545287,-2.820724,2.975290,-2.951191,-2.668572,9.163921,-8.372545,-2.516959,-5.589187,2.957062,-7.568249,4.793911,2.986994,1.736437,9.653894,-7.347129,-2.369942,1.972887,-8.259713,-8.103437,-4.017000,0.658103,5.015700,-6.169455,4.748801,7.269777,-5.526057,5.984624,0.029236,-5.020009,2.319079,-1.362865,7.606794,9.142609,8.019571,-9.124044,-9.554274,-8.528657,-9.809944,2.539596,5.019362,7.668144,4.515524,5.797278,1.290856,-7.508993,0.121226,-5.974243,-7.860288,-5.824503,-7.955701,2.087489,3.258538,-1.387478,-9.848266,7.661745,9.245104,5.949867,-1.191772,6.738955,0.952397,-4.684725,-2.779622,4.454169,0.241552,0.335090,0.322785,-8.048256,-6.416368,-2.638453,-2.329889,-5.129534,-6.980949,-3.998659,5.639222,-9.929690,3.676973,3.455479,-6.417956,-9.169808,-2.422376,5.185768,-1.625432,-6.489253,-5.112355,7.824804,6.158801,-0.007138,-4.699071,-6.980255,3.649741,-1.845806,2.638828,-3.832936,-4.822993,3.548158,-2.824904,-2.934283,-6.362499,-9.316738,3.862606,6.305956,7.956602,-5.901956,1.857400,2.056852,-7.352808,2.936463,5.857804,7.540576,5.671556,3.868344,2.726737,-1.938067,-0.297601,-8.036250,3.819618,-0.471892,-5.380947,-3.563704,6.475648,-2.464554,5.503431,-7.459722,3.669602,-3.380940,-7.470599,0.225782,-2.291858,-3.095154,-6.641891,-4.088248,-6.986164,-4.863237,-8.042726,-0.151980,1.076629,1.915700,9.655468,7.419126,3.907963,4.356500,8.905598,5.418796,-4.769581,9.162247,-1.402589,-8.434860,-8.209914,0.624993,6.413011,4.316456,-1.360178,1.468885,-9.395365,8.138509,3.672524,6.322367,5.517913,-7.839879,-0.073354,-7.542258,2.915725,-3.704096,4.205863,-3.548229,0.969294,0.625975,-2.807769,5.764988,-2.344300,-5.904681,7.679506,-7.452819,-4.864253,9.403048,-2.830845,-9.424988,-3.059854,-5.848446,-3.519545,3.391190,-9.844977,-9.119175,6.007859,0.840680,-7.373932,5.615093,0.410347,-8.214836,-0.823751,1.113610,1.896739,2.864644,-9.115723,6.158411,-5.371292,-6.020163,-4.852542,-4.521872,2.487050,3.640821,0.565679,7.538087,-5.790134,8.710251,4.936896,-2.638045,-7.616264,7.183420,9.222902,5.319789,3.537774,-8.975318,-5.000769,9.261816,-9.728785,3.975013,-1.687676,-8.149392,-7.090211,4.601427,-4.664605,-3.832960,7.757005,9.593516,8.695259,7.464360,5.909243,-6.287570,-2.720508,0.693704,-8.157079,-1.143299,9.297753,0.205676,-6.475162,-8.403990,-2.575341,5.145118,-8.919810,-0.370885,-6.450046,-9.868887,7.327524,1.231260,-5.376770,-7.533811,-8.770594,2.039711,-9.487169,4.746409,-9.644131,8.154102,7.287736,-9.401826,-7.711559,8.145778,-7.135514,-1.181833,-5.387151,3.823326,-1.810407,6.923899,4.335606,-3.660030,8.518292,-1.864294,7.452423,8.111088,6.606283,-2.554314,-7.016534,-8.456150,3.358196,9.288093,-5.996023,9.098365,-3.404339,0.999769,9.020091,1.165182,-5.583241,-1.318306,-3.287283,-0.331255,-5.666205,9.092782,-7.971542,4.077233,-4.854957,9.012830,-6.244379,5.683808,4.260988,-9.793912,-6.092907,3.448094,4.628495,8.365927,0.500289,0.994158,-3.583489,2.013909,-8.484974,5.533246,7.436816,-0.474003,8.535177,-9.370981,-3.138254,9.597543,6.019125,6.322092,9.420708,-1.801346,-1.093748,-7.436654,-2.448240,2.694073,-8.315616,2.689201,3.335382,3.325856,5.339600,7.136207,-2.352566,-1.729495,-5.591046,1.943448,-5.230236,-7.205185,0.210774,-0.149432,-2.125535,7.147126,-6.223411,-5.347777,-0.854314,-1.610061,-4.772192,4.062152,-0.263699,-0.027129,-1.563782,-5.636638,3.414650,3.787020,4.183226,-2.656067,-8.193758,7.560148,-7.669529,-2.011104,9.580769,-6.655581,0.837618,6.582872,8.490660,-4.688073,9.872771,7.496804,1.134655,7.887248,-5.249664,4.768043,8.431599,0.178720,-8.239139,-8.509484,-5.823302,3.499989,4.851880,2.442983,-3.360193,-6.618046,7.934090,-8.001271,-9.913719,3.602784,8.870920,9.714082,3.306029,-3.905220,0.516943,-6.108057,7.651783,5.865967,-2.998643,-8.503313,-6.463457,-5.616552,-0.471968,-9.278878,-4.156219,8.533171,-2.823366,4.361183,9.005037,-9.727260,-3.676541,-1.509175,-7.297828,-2.646856,-0.230563,-0.949733,8.655572,-3.526262,0.843466,9.544144,0.764164,-6.968093,2.490944,3.989730,2.995387,2.708820,-8.745132,-6.595357,6.583788,1.756863,1.146088,-7.571638,-0.332264,-3.766010], dtype = "float32")#candidate|5029|(429,)|const|float32
call_5028 = relay.TupleGetItem(func_3535_call(relay.reshape(const_5029.astype('float32'), [429,])), 2)
call_5030 = relay.TupleGetItem(func_3537_call(relay.reshape(const_5029.astype('float32'), [429,])), 2)
func_4682_call = mod.get_global_var('func_4682')
func_4686_call = mutated_mod.get_global_var('func_4686')
var_5040 = relay.var("var_5040", dtype = "int8", shape = (8,))#candidate|5040|(8,)|var|int8
var_5041 = relay.var("var_5041", dtype = "int8", shape = (192,))#candidate|5041|(192,)|var|int8
call_5039 = relay.TupleGetItem(func_4682_call(relay.reshape(var_5040.astype('int8'), [1, 1, 8]), relay.reshape(var_5041.astype('int8'), [8, 3, 8]), ), 2)
call_5042 = relay.TupleGetItem(func_4686_call(relay.reshape(var_5040.astype('int8'), [1, 1, 8]), relay.reshape(var_5041.astype('int8'), [8, 3, 8]), ), 2)
output = relay.Tuple([bop_5008,uop_5012,call_5019,call_5028,const_5029,call_5039,var_5040,var_5041,])
output2 = relay.Tuple([bop_5011,uop_5012,call_5020,call_5030,const_5029,call_5042,var_5040,var_5041,])
func_5052 = relay.Function([var_5040,var_5041,], output)
mod['func_5052'] = func_5052
mod = relay.transform.InferType()(mod)
mutated_mod['func_5052'] = func_5052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5052_call = mutated_mod.get_global_var('func_5052')
var_5054 = relay.var("var_5054", dtype = "int8", shape = (8,))#candidate|5054|(8,)|var|int8
var_5055 = relay.var("var_5055", dtype = "int8", shape = (192,))#candidate|5055|(192,)|var|int8
call_5053 = func_5052_call(var_5054,var_5055,)
output = call_5053
func_5056 = relay.Function([var_5054,var_5055,], output)
mutated_mod['func_5056'] = func_5056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4244_call = mod.get_global_var('func_4244')
func_4246_call = mutated_mod.get_global_var('func_4246')
call_5093 = relay.TupleGetItem(func_4244_call(), 2)
call_5094 = relay.TupleGetItem(func_4246_call(), 2)
output = call_5093
output2 = call_5094
func_5101 = relay.Function([], output)
mod['func_5101'] = func_5101
mod = relay.transform.InferType()(mod)
output = func_5101()
func_5102 = relay.Function([], output)
mutated_mod['func_5102'] = func_5102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5170 = relay.var("var_5170", dtype = "int16", shape = (1, 5, 5))#candidate|5170|(1, 5, 5)|var|int16
var_5171 = relay.var("var_5171", dtype = "int16", shape = (1, 5, 5))#candidate|5171|(1, 5, 5)|var|int16
bop_5172 = relay.bitwise_xor(var_5170.astype('int16'), relay.reshape(var_5171.astype('int16'), relay.shape_of(var_5170))) # shape=(1, 5, 5)
func_2975_call = mod.get_global_var('func_2975')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_5178 = func_2975_call()
call_5179 = func_2975_call()
bop_5183 = relay.mod(bop_5172.astype('float32'), relay.reshape(var_5171.astype('float32'), relay.shape_of(bop_5172))) # shape=(1, 5, 5)
output = relay.Tuple([call_5178,bop_5183,])
output2 = relay.Tuple([call_5179,bop_5183,])
func_5189 = relay.Function([var_5170,var_5171,], output)
mod['func_5189'] = func_5189
mod = relay.transform.InferType()(mod)
mutated_mod['func_5189'] = func_5189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5189_call = mutated_mod.get_global_var('func_5189')
var_5191 = relay.var("var_5191", dtype = "int16", shape = (1, 5, 5))#candidate|5191|(1, 5, 5)|var|int16
var_5192 = relay.var("var_5192", dtype = "int16", shape = (1, 5, 5))#candidate|5192|(1, 5, 5)|var|int16
call_5190 = func_5189_call(var_5191,var_5192,)
output = call_5190
func_5193 = relay.Function([var_5191,var_5192,], output)
mutated_mod['func_5193'] = func_5193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3706_call = mod.get_global_var('func_3706')
func_3708_call = mutated_mod.get_global_var('func_3708')
call_5206 = relay.TupleGetItem(func_3706_call(), 1)
call_5207 = relay.TupleGetItem(func_3708_call(), 1)
func_4682_call = mod.get_global_var('func_4682')
func_4686_call = mutated_mod.get_global_var('func_4686')
const_5221 = relay.const([-1,-7,3,4,8,-5,6,9], dtype = "int8")#candidate|5221|(8,)|const|int8
var_5222 = relay.var("var_5222", dtype = "int8", shape = (192,))#candidate|5222|(192,)|var|int8
call_5220 = relay.TupleGetItem(func_4682_call(relay.reshape(const_5221.astype('int8'), [1, 1, 8]), relay.reshape(var_5222.astype('int8'), [8, 3, 8]), ), 2)
call_5223 = relay.TupleGetItem(func_4686_call(relay.reshape(const_5221.astype('int8'), [1, 1, 8]), relay.reshape(var_5222.astype('int8'), [8, 3, 8]), ), 2)
func_2254_call = mod.get_global_var('func_2254')
func_2258_call = mutated_mod.get_global_var('func_2258')
const_5230 = relay.const([-4.941722,5.865219,-7.632773,-1.192083,-2.516226,-1.825099,-2.820043,8.654363,4.106194,7.165546,-3.988551,-3.743116,0.480926,-4.062921,3.260084,-0.098134,4.815377,3.194468,-1.398868,-8.216587,4.765006,5.475440,-9.143074,-9.847840,9.568529,4.706193,-1.350491,-3.636939,5.211739,8.662994,-9.827376,-5.468073,8.634565,3.242250,-8.847694,-0.943578,-3.649374,6.828279,2.084711,-4.493854,2.426865,-2.961405,2.914649,5.195866,2.433112,-5.837652,-2.607361,8.343547,-9.467938,4.277618,2.168227,1.187630,-1.160309,-2.796563,-5.014739,-1.671444,-5.046915,-2.057129,-8.821986,2.791455,-8.891193,8.286606,-2.473267,-1.312266,6.495516,6.058053,-6.883339,-1.732929,1.302738,-9.051577,-3.228977,1.542103,9.685992,-9.890638,-8.677484,-4.345802,0.857723,5.521929,-5.060181,9.046542,-8.167447,-3.006077,8.981725,3.730856,9.870142,-0.310441,-6.176712,7.795335,5.051835,0.109252,9.758070,-0.274488,7.238592,-0.746031,-7.690486,4.958945,3.269205,1.508829,0.512308,9.745736,-5.478706,-6.981118,-1.804735,-8.385874,4.185363,0.362245,1.006690,-8.511948,9.365241,5.369534,-4.613200,-3.705336,-5.511134,-8.199351,-5.217805,6.369468,6.532599,-5.819504,3.020427,-9.916652,-6.657030,3.123985,3.944235,0.665829,-0.853054,-8.579496,7.598844,-1.995654,-5.217773,3.095238,2.973857,2.717282,-3.701804,-4.486868,8.404776,3.437068,-6.658239,2.087645,-3.571156,-2.260741,6.673265,7.578677,-6.758832,3.582474,-6.030173,6.444775,1.601153,-0.760728,-0.949536,6.606991,9.807775,-2.620467,9.486939,-6.389173,-7.048071,-6.506781,2.488901,-1.856972,-4.331600,0.157238,4.862019,-6.368719,1.037186,-9.900730,1.670881,7.840121,-9.401389,-4.381738,-4.861778,0.148959,7.336578,-4.254682,7.768070,-1.877549,-5.227358,-4.822079,6.327651,-5.699583,-7.243891,-2.351933,-6.312461,-7.475507,4.104406,-4.927257,8.438939,-8.107894,-1.663151,-0.303726,-3.538397,1.408823,-5.680291,-1.052284,-5.901826,-2.789865,4.670387,-0.297701,4.426585,0.916974,6.054565,-1.346982,8.517143,7.945853,5.005736,-3.204834,7.075878,0.753711,2.682151,5.797259,-5.757779,-9.050331,-3.426941,-1.743756,-2.021655,1.535239,3.858260,-5.571425,-0.573312,-2.882980,3.492737,2.911681,-1.046222,-3.581714,-4.938625,9.531925], dtype = "float32")#candidate|5230|(224,)|const|float32
var_5231 = relay.var("var_5231", dtype = "float64", shape = (120,))#candidate|5231|(120,)|var|float64
call_5229 = relay.TupleGetItem(func_2254_call(relay.reshape(const_5230.astype('float32'), [2, 8, 14]), relay.reshape(var_5231.astype('float64'), [1, 120]), ), 1)
call_5232 = relay.TupleGetItem(func_2258_call(relay.reshape(const_5230.astype('float32'), [2, 8, 14]), relay.reshape(var_5231.astype('float64'), [1, 120]), ), 1)
func_4936_call = mod.get_global_var('func_4936')
func_4938_call = mutated_mod.get_global_var('func_4938')
call_5236 = relay.TupleGetItem(func_4936_call(), 0)
call_5237 = relay.TupleGetItem(func_4938_call(), 0)
func_941_call = mod.get_global_var('func_941')
func_945_call = mutated_mod.get_global_var('func_945')
const_5243 = relay.const([-3.856841,4.222318,5.608368,-3.412038,4.982644,2.826918,-0.798720,5.153791,-1.745495,-5.078290,4.849806,-2.962233,1.368799,-0.576461,1.481752,-1.907187,-6.270217,-4.582302,-9.008037,2.383670,7.228377,-0.363257,-2.628938,-7.600744,-2.260736,4.807209,9.447092,5.677159,-1.467361,2.855606,9.101427,2.175572,7.040870,1.251807,4.561557,7.041987,-2.548597,-9.552328,4.391962,9.873581,3.068227,8.333486,-9.056783,2.209096,3.670382,-9.651993,-4.860754,-9.368252,2.896126,9.065294,-1.624774,-2.228703,4.579429,7.903109,4.107336,-7.369797,-8.653438,9.783706,6.636887,2.801723,0.038054,0.563977,-8.912151,-0.508405,-3.789133,-3.087447,-8.517893,5.642971,8.737768,8.504034,4.728448,5.094670,9.558821,-6.719857,7.056495,2.394356,3.467294,9.850839,-5.541197,8.222871,4.740265,5.511062,-6.544088,8.140023,-6.816591,-0.861285,6.805147,8.711037,-8.639112,3.708238,6.061945,1.916799,8.157606,-3.018666,-9.768913,-5.747248,6.235470,2.689140,-6.935674,6.024812,4.039601,-3.592374,7.364486,-3.683866,8.944500,-0.579167,-9.164237,8.718932,-3.643264,-7.363154,-1.861901,-8.444370,-1.122617,2.991984,2.720428,9.882846,7.210514,1.302274,3.485163,-5.115764,1.959222,-6.539367,-0.581619,3.022075,9.924937,8.291252,8.993285,-2.988284,-8.090195,-5.271073,-6.122310,-2.228406,-1.828276,9.454687,8.752472,-4.201452,-3.512235,8.989378,0.976971,4.469868,-3.030485,-3.881066,-4.703052,9.620851,-0.923076,-5.553714,-2.070646,-2.970207,-4.013787,-6.953761,-1.368935,-4.933769,8.414534,4.094599,4.083086,-9.873273,-5.980293,6.326520,7.795853,1.730937,-2.436926,-8.978758,-8.277779,8.031520,-9.630484,1.646774,4.890141,7.052891,2.467771,6.692114,2.511812,-1.882737,-7.430731,5.025940,-7.803508,1.999703,-2.558392,6.024627,4.561000,-9.255124,8.556453,-4.675314,9.311676,3.658685,-5.824808,3.218789,-6.209153,5.774546,1.829800,-6.126012,9.741939,0.131300,-4.614868,9.563544,9.830201,8.246258,7.415252,7.292167,-9.990909,6.770099,1.384469,-1.606065,-8.850725,-2.434353,-6.662039,4.228925,6.298306,-1.941650,-5.115528,2.356779,7.972379,-5.651606,-8.423071,0.997435,-9.535059,8.426786,-0.399701,-5.527268,-2.612080,-3.379863,7.242807,-9.886421,-6.231175,-7.361312,-5.498015,5.405092,9.146563,-5.340031,9.713887,-8.443846,-0.549391,-4.699673,6.779991,4.414385,5.983757,5.729911,-2.626310,4.062591,-8.927387,6.173347,3.895823,-7.563529,-5.596775,-4.408519,-3.974509,6.624270,5.627448,2.525378,-5.884503,-1.426713,7.464374,2.078561,7.131972,-5.801189,-2.803284,6.603191,-1.203509,-7.830154,-6.429368,6.107681,1.401828,-4.969645,-1.771753,-5.564030,-0.709799,-9.132186,-4.330140,1.500667,2.445132,3.194410,7.689030,9.236444,-6.667555,-8.992547,4.039136,1.352860,5.240050,5.867841,-6.976224,-9.824897,-4.173960,-6.525131,-9.875455,-7.362614,1.835164,-0.057892,-0.903673,1.558816,2.061363,-3.450495,3.617448,-0.039117,1.852922,-1.703593,8.951654,-4.223510,7.591156,-9.673861,7.887596,7.024485,-0.836073,9.142553,-5.275169,5.130647,7.357885,-2.845019,3.153314,2.344433,-9.114296,-0.325007,-8.977963,1.146860,3.810677,-4.627521,-8.946719,-3.478655,4.685903,-0.543344,-1.691538,5.271443,9.254243,-3.386524,-2.165806,2.672472,8.852335,-8.680839,-5.153310,1.681733,9.335997,-5.937614,-4.163390,-5.617795,4.852315,6.320157,-8.524805,1.274049,-5.232376,9.225789,3.400261,3.837250,-7.276415,-6.641111,1.029036,0.112020,5.534670,-1.287238,-4.057179,6.528239,4.279909,2.321061,-6.427302,3.311832,-7.650185,9.859340,4.355874,-3.427503,7.297304,4.306293,-9.816790,5.640942,-6.082081,6.450121,9.723604,-2.330464,6.854228,-8.456649,-7.300817,-8.898151,-9.303449,-9.195068,-6.981437,-6.797793,-2.623640,-5.061443,-0.642369,-4.082010,-7.618328,0.220516,2.241922,-9.561787,9.195762,-3.055632,4.970512,-4.494017,-2.012847,2.205387,5.096969,-4.395471,0.101172,-6.654493,2.300216,1.485756,5.882488,9.606029,-4.147821,4.262774,-8.613244,-7.366610,2.957664,-6.420277,3.311647,-7.827144,0.273252,-4.855155,-9.377432,-5.427238,-0.370573,0.066827,-9.700490,-2.398623,-9.112891,-2.472915,5.460124,-8.075798,0.575981,-9.258000,4.491381,0.082436,-8.752710,9.550846,-5.126069,-5.999584,3.977891,-9.794781,-2.254592,5.124414,6.126140,2.456726,-0.533347,2.508344,-7.941187,-3.765846,-6.949040,-1.259503,-7.221487,0.843728,7.143069,2.026000,7.583817,-5.454009,-3.228150,4.266200,7.343101,-3.305812,-1.297079,4.522343,4.197606,-4.350530,9.754610,-4.152473,5.932877,2.676167,8.921330,3.231481,-8.862228,-1.975161,4.313525,-1.479195,4.159457,-6.776716,-3.660977,-4.438935,-3.883927,-2.726202,-4.194713,9.914510,-1.197452,-3.235808,1.287958,4.819789,-2.799244,-7.526779,4.681049,-8.201396,1.993124,-9.187014,4.734796,9.599837,-5.638576,5.377462,8.728825,-2.408778,3.659154,7.420504,-7.591003,9.964639,1.224402,9.223676,-6.291332,9.798821,-8.814255,-5.588415,-2.274364,5.510828,9.540590,6.496485,0.775272,-1.597969,5.652354,3.068252,-4.219653,-7.985933,-4.229619,-2.605950,9.447074,-8.849640,-4.385568,2.457280,5.328307,4.375610,-1.092539,1.811604,-3.833341,-0.110485,3.567975,3.454053,-4.216239,8.278275,7.990547,-0.858734,8.099116,7.597592,1.466490,9.368651,8.327662,3.126179,2.590207,-1.331235,-3.371931,1.974214,-1.973243,-6.187125,-7.160733,-5.628647,6.533669,8.274590,0.178716,-2.451540,8.140008,5.564897,-8.539831,-6.818019,4.115930,8.834289,-5.751461,-9.730841,-5.334784,5.515481,-5.757243,-2.803875,-3.508941,7.320193,-5.033168,-3.561950,7.273208,3.193049,-1.300727,2.893041,-0.115785,-4.784104,-1.573255,6.457342,9.608015,4.482131,-0.735046,6.522016,5.119036,4.538214,8.666948,-0.234756,9.687799,-9.000260,3.881502,-2.852339,2.643574,-3.147663,3.454833,-5.441171,0.111742,-4.204024,3.979546,-2.357909,-3.175737,9.574732,-6.654230,-6.310930,1.587843,6.256578,8.249488,-2.946596,-3.052581,-9.967252,-9.681601,-2.964873,-4.918926,-3.180034,7.403254,9.045856,-4.137527,7.508258,-6.767908,-3.836932,-6.126473,-0.809485,6.857428,-9.264605,-8.171379,4.568449,5.572093,-6.908730,0.776711,-4.988172,9.473146,-8.485485,-6.988594,-6.451996,-8.930440,-6.202670,7.227267,-4.219167,1.227325,-6.930373,8.681809,-3.819583,-2.221573,-0.683232,5.503703,-8.402925,-6.671531,-3.047804,-5.007714,6.910446,-2.133691,6.975538,2.446117,-4.798979,5.411785,-5.697951,4.177816,9.227125,3.159099,2.614896,-6.128364,7.606514,-5.586082,4.451625,1.074091,3.143193,-6.378041,1.268481,-0.658368,-7.323529,-6.705837,-3.618164,-3.162021,1.373091,-3.009698,-9.426611,-8.369636,0.137909,-5.718042,5.385001,-3.912126,5.587449,-3.899413,-3.743246,-4.049687,-9.236051,5.093074,-4.891405,-0.606865,5.919086,-2.477900,-0.581099,3.179896,-1.363131,-1.859401,4.111410,-3.129510,-2.672909,1.165719,-3.990005,1.910786,2.145081,2.384153,-9.640441,1.700971,-4.055442,-7.019941,6.076014,0.101771,0.928874,6.435538,-7.021660,0.368203,-4.609771,5.864640,-5.543744,4.113813,2.706367,-2.294348,7.301048,4.248272,5.046045,-6.256429,4.140081,-5.677505,9.534332,-6.558597,-4.771869,-1.595349,-5.979440,8.066476,5.282777,-0.600779,1.282891,-1.171347,3.867689,9.367840,9.676861,3.474764,5.353082,5.754552,0.193854,-6.883234,1.761345,3.186345,-2.356459,2.041793,0.346441,-8.318318,-9.704015,2.346505,-1.757269,-8.616292,-0.669643,-5.905912,-3.413164,2.219194,6.949239,2.880217,-7.895112,0.303511,6.909576,-9.203491,-0.582510,7.685368,-9.984432,-4.779536,1.476278,-2.849795,-5.459140,2.597732,7.720084,7.987332,-1.133256,8.588249,1.365687,4.450945,5.272260,2.995099,-1.599951,-5.633965,-6.221556,1.606413,-8.168694,0.824647,2.867376,6.980432,3.524692,5.608090,7.098848,5.533706,1.456828,9.730051,-4.479912,7.062704,8.625882,5.851119,-1.282198,-7.228239,9.431843,-7.105287,-0.909845,8.501462,-6.888981,-7.862505,6.780975,-1.008143,-2.680373,-8.374651,-0.347442,-4.264641,8.228099,3.038081,-1.416505,-5.028401,-7.243454,-1.780617,-7.827746,-5.725178,0.782125,-8.001164,-3.988394,3.964065,-7.140455,-4.317306,3.517361,3.425647,-0.541172,4.756274,-2.552893,-8.592229,-6.847470,2.456090,-6.631507,7.275146,-4.157325,8.519984,-7.908756,-2.121100,-6.626078,0.546072,2.526433,-5.634934,-6.483341,-1.367394,-5.739280,1.260360,-5.039592,6.233180,-9.951108,-9.472806,3.882849,-0.131775,-6.017793,-0.680646,3.514366,8.047450,-5.924749,-6.299249,1.793759,5.983068,-1.963930,-7.371050,-2.696771,3.712709,-2.143433,3.712320,4.178138,1.576982,-7.660623,-1.765817,8.968614,-2.242738,-5.523934,-7.373379,-2.832568,7.863937,-5.075997,3.150182,6.473596,-7.230055,-3.798155,2.160374,3.191230,9.812867,7.089880,3.801942,9.450520,-2.775491,-9.709827,1.799171,8.800933,8.315142,-6.013054,-6.233275,-2.704451,2.249923,-6.176034,-7.121518,9.257704,-2.357547,-9.085548,-5.394712,0.884113,0.811506,5.595508,-0.986486,1.442852,4.587549,-1.485660,7.796622,-9.019284,9.037538,-3.503345,-0.771193,-2.004116,-5.238221,-6.837419,-6.159303,9.634633,9.414304,8.690022,4.876760,-4.477655,-1.518344,-7.564288,1.758088,7.603509,-9.872976,-1.186402,7.758932,5.015595,9.436510,-7.031633,8.014793,0.051706,8.582287,3.085283,9.927402,5.126459,-2.818627,-1.974269,-4.300549,9.170540,2.570417,9.757088,-0.371623,-7.737266,-5.498975,3.070853,-4.321164,-6.333194,5.368460,0.476030,6.041624,2.782779,-6.967192,4.270994,0.030831,0.368338,3.309469,2.174796,7.707878,6.250242,5.601175,-8.109903,-0.333972,6.277805,-8.962064,-9.843666,0.758988,8.233320,2.794534,-5.997053,3.687440,1.574947,-0.815865,-0.002905,-7.683328,2.538357,2.267809,-9.260445,-6.771825,0.095740,-8.013763,4.328229,1.130950,3.710457,2.735685,3.555200,-6.351958,8.921969,-0.829424,-5.050053,-3.656335,-5.640165,7.657418,9.959402,-0.213250,-7.731254,-7.631352,-8.284324,9.993413,2.231681,3.703655,2.175219,9.851736,-3.420411,9.501939,8.240142,-8.934598,4.320411,-5.328285,3.558669,4.670972,9.523847,2.218681,-0.491093,6.904059,-2.870615,-1.207044,-1.464390,-7.774770,8.059466,-1.312079,4.705195,-7.598219,-6.154794,4.529345,7.502819,-7.150718,5.459567,-9.114953,-1.448841,7.903220,-1.703502,-4.234684,8.578776,5.735203,-0.357269,4.748284,-1.057480,-3.011286,-9.680985,1.145945,5.209911,-0.807073,8.123078,-6.733502,2.724461,-6.781832,8.069554,-6.059094,-6.724049,-9.737074,2.555503,-1.296730,0.527584,3.736216,4.539639,-9.087001,-4.700156,9.824709,2.683336,9.656547,3.207446,5.731089,-3.729338,7.228408,2.908461,-2.148394,-0.761599,3.753421,1.034811,4.387140,5.132501,0.676338,3.782870,3.767563,-5.584852,1.223616,3.946154,4.401458,-9.259333,-4.273987,-8.148547,8.878411,7.279345,-5.123482,8.560713,2.348200,8.037888,-6.364793,8.532705,-7.780329,-1.934073,4.487280,-2.820604,4.700528,-4.644054,-8.948090,-0.277584,3.008550,-6.777012,3.264552,4.428715,-7.964984,1.010859,0.471697,0.032950,6.765721,9.320227,2.613306,9.600891,0.371289,-4.170352,-0.677571,2.907420,-6.574174,1.956824,4.282715,7.483054,-9.255339,-4.148124,1.858938,3.459135,7.866301,-5.129223,-9.382140,1.775921,2.465612,6.000243,8.143670,3.318080,7.427647,3.983114,5.034067,-1.870248,0.187796,-6.798560,-5.489504,3.405899,-1.007970,-1.642428,4.096050,-5.068227,2.620749,-3.839193,-0.918774,0.819833,4.112042,-7.118332,1.888694,-9.480123,4.485937,3.503523,-6.787484,7.968951,-3.734620,7.367515,-1.131570,-7.248312,9.641563,-2.611122,-1.475565,4.871638,-2.357021,0.879902,6.102953,-1.471223,-7.349950,-8.724837,4.917168,9.074149,-5.984792,4.758572,3.865969,-4.719956,0.466623,-9.980226,-8.737274,0.102474,-8.302511,-7.320516,-6.053695,-8.898465,9.601732,1.460556,4.836306,-6.002969,4.413236,-2.033093,-1.089935,2.721274,2.846130,9.313397,-3.981023,-3.214428,4.221368,-6.917859,1.735356,-5.029787,0.607050,0.811089,0.404843,-7.200307,-9.596692,2.319941,-2.854470,-9.902856,-2.709595,4.104938,-3.261821,8.196452,5.613901,2.064142,1.604848,7.150422,2.263712,3.556910,-7.912468,3.493887,-5.286272,6.706285,7.920358,-8.715493,-1.585148,-3.643411,1.414356,-5.271173,3.497133,1.592014,-9.610800,-3.422600,-7.650621,-8.462569,0.951105,6.339944,-5.020454,-7.296337,-5.288248,7.709200,0.087912,7.143912,-3.668981,6.084696,3.092403,-0.744525,4.615795,6.604900,-4.873155,-8.729689,1.088554,7.427271,3.010138,6.469935,-0.752964,-9.941015,4.679335,-9.068555,4.057361,0.081718,-6.009562,-5.165866,-2.888929,2.966540,6.282680,0.939372,2.524171,-1.198022,-8.468780,-7.797238,7.447391,-6.145767,-7.618150,-5.950946,-0.030893,-3.966924,6.352379,-0.200788,-1.957652,-2.526693,-4.525282,-2.900709,-6.684703,-2.164034,1.026021,3.411600,7.052159,7.203687,-5.215921,7.823636,8.577657,7.102951,7.084650,5.206385,-6.391133,6.525861,6.495614,-9.598925,8.030280,-3.033434,-5.094245,8.173755,-9.880647,2.659120,-5.349667,8.099295,4.965467,-8.139439,5.100146,-3.195133,8.707169,-7.594894,-4.095125,-9.504391,7.461546,-9.783462,-8.630227,8.755007,-2.120000,1.657037,0.897655,-3.896445,3.849591,0.555641,-9.622761,-4.348280,-9.607678,-0.112767,-8.351405,-0.736343,-9.076063,2.235113,-1.194988,4.814618,9.853240,8.136990,3.363423,1.004894,-1.835057,0.578771,0.122650,-3.745518,-6.188867,-6.003287,9.674855,-6.071721,6.227492,-6.778629,-6.974012,-6.332897,-9.210508,5.631084,8.999011,-2.615184,6.144710,6.457366,-2.307851,-0.621347,-3.161058,4.739534,6.941191,9.747693,6.006476,-0.482407,7.491946,0.364987,-5.079762,-1.940164,-6.678262,4.091547,-5.603117,-7.278947,-9.335470,-6.556237,9.946619,-3.494296,3.274538,9.316953,5.517531,2.147731,-2.145496,-5.384876,7.799095,-6.177726,-7.566287,2.202285,-5.239380,8.570850,9.639329,-9.242730,8.816852,9.739724,-7.462955,6.693352,9.059321,2.833725,4.147938,-0.773583,-2.062904,-8.862042,3.240480,0.929747,3.291305,-9.493643,-7.336300,9.852517,-2.114958,5.443941,5.001595,-3.481803,0.919843,-2.405338,-7.772119,0.464889,-5.330718,8.557548,3.703688,6.046428,1.578738,9.114047,-1.544223,7.365770,-5.394238,-5.016585,1.461211,-6.502813,-5.903568,1.862914,5.925774,5.554447,9.206701,3.038744,9.711236,8.181656,7.046831,6.760351,-1.196974,-9.143160,3.358465,-6.324864,7.680656,1.696526,-3.683388,-5.625999,9.776608,9.334165,-2.672559,8.896870,3.530726,-1.394581,-0.801082,9.558608,-0.664279,8.285144,-7.070253,-7.618544,-9.982279,5.463345,7.457941,-5.390698,6.172926,3.040145,5.595965,6.906841,4.640747,0.673797,5.163279,-9.690518,-5.995399,6.265455,-6.507248,-9.343706,8.190377,8.146364,-7.789390,2.341038,3.551812,8.354098,-2.177263,0.662581,5.108680,4.695639,3.056927,-8.237404,0.469235,-5.897376], dtype = "float32")#candidate|5243|(1470,)|const|float32
var_5244 = relay.var("var_5244", dtype = "bool", shape = (208,))#candidate|5244|(208,)|var|bool
call_5242 = relay.TupleGetItem(func_941_call(relay.reshape(const_5243.astype('float32'), [7, 14, 15]), relay.reshape(var_5244.astype('bool'), [4, 4, 13]), ), 1)
call_5245 = relay.TupleGetItem(func_945_call(relay.reshape(const_5243.astype('float32'), [7, 14, 15]), relay.reshape(var_5244.astype('bool'), [4, 4, 13]), ), 1)
output = relay.Tuple([call_5206,call_5220,const_5221,var_5222,call_5229,const_5230,var_5231,call_5236,call_5242,const_5243,var_5244,])
output2 = relay.Tuple([call_5207,call_5223,const_5221,var_5222,call_5232,const_5230,var_5231,call_5237,call_5245,const_5243,var_5244,])
func_5251 = relay.Function([var_5222,var_5231,var_5244,], output)
mod['func_5251'] = func_5251
mod = relay.transform.InferType()(mod)
mutated_mod['func_5251'] = func_5251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5251_call = mutated_mod.get_global_var('func_5251')
var_5253 = relay.var("var_5253", dtype = "int8", shape = (192,))#candidate|5253|(192,)|var|int8
var_5254 = relay.var("var_5254", dtype = "float64", shape = (120,))#candidate|5254|(120,)|var|float64
var_5255 = relay.var("var_5255", dtype = "bool", shape = (208,))#candidate|5255|(208,)|var|bool
call_5252 = func_5251_call(var_5253,var_5254,var_5255,)
output = call_5252
func_5256 = relay.Function([var_5253,var_5254,var_5255,], output)
mutated_mod['func_5256'] = func_5256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3766_call = mod.get_global_var('func_3766')
func_3768_call = mutated_mod.get_global_var('func_3768')
call_5311 = relay.TupleGetItem(func_3766_call(), 0)
call_5312 = relay.TupleGetItem(func_3768_call(), 0)
output = relay.Tuple([call_5311,])
output2 = relay.Tuple([call_5312,])
func_5316 = relay.Function([], output)
mod['func_5316'] = func_5316
mod = relay.transform.InferType()(mod)
mutated_mod['func_5316'] = func_5316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5316_call = mutated_mod.get_global_var('func_5316')
call_5317 = func_5316_call()
output = call_5317
func_5318 = relay.Function([], output)
mutated_mod['func_5318'] = func_5318
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5319 = relay.var("var_5319", dtype = "int64", shape = ())#candidate|5319|()|var|int64
var_5320 = relay.var("var_5320", dtype = "int64", shape = (4, 10, 10))#candidate|5320|(4, 10, 10)|var|int64
bop_5321 = relay.bitwise_and(var_5319.astype('int64'), var_5320.astype('int64')) # shape=(4, 10, 10)
bop_5324 = relay.greater_equal(var_5319.astype('bool'), var_5320.astype('bool')) # shape=(4, 10, 10)
func_4155_call = mod.get_global_var('func_4155')
func_4158_call = mutated_mod.get_global_var('func_4158')
const_5359 = relay.const([5,3,-2,2,8,10,7,-2,3,4,6,7,-3,-3,10,-5,3,-4,-9,-3,-8,-8,1,6,3,7,6,-3,4,-2,-5,-1,5,3,2,10,-1,6,10,5,6,3,5,2,2,-6,-1,7,-2,9,-8,-5,9,2,-7,-3,6,6,-1,-3,-2,-4,-5,8,-1,3,-8,-8,-2,-6,-5,4,6,7,8,-2,8,-5,7,2,2,7,4,5,-6,-6,2,6,-10,5,10,10,5,5,-1,-8,-2,1,10,3,10,9,-1,-10,-6,1,-4,8,-6,-1,-9,8,-6,7,-8,2,-10,-10,5,-4,-6,-9,-5,2,-9,6,2,9,-6,3,-5,-4,5,-7,-3,-3,5,-1,-10,-2,4,9,4,5,2,-6,3,3,-5,10,3,-8,5,9,-10,6,-8,1,1,-6,4,-4,-3,8,-9,-5,-2,-1,10,-2,-10,8,3,2,7,-1,-9,9,1,-9,6,3,6,-6,-5,-1,-9,4,8,8,-5,6,1,7,5,-2,-1,10,10,-6,-4,-1,5,5,-1,-9,-9,10,2,-1,3,-9,-8,-2,5,-5,-6,-4,-2,-4,-1,9,10,9,7,1,1,6,1,10,-9,-6,1,-6,10,-6,-5,-8,-6,-6,-7,5,-7,1,-1,5,-6,-5,-3,-2,2,-4,4,-1,1,3,6,-7,-1,2,-9,-3,10,-4,8,-5,-5,-9,-3,9,-10,1,10,-9,-6,2,8,2,5,10,-3,6,-6,-9,7,-2,-8,-3,2,-9,4,6,9,1,-6,-7,-8,9,10,-4,3,4,-8,2,-10,10,4,-8,-4,7,10,8,-9,-3,-4,3,-10,3,-3,-9,5,7,-3,-2,-3,-6,-5,10,-1,2,-7,-7,4,-8,2,-2,-7,4,-5,9,-7,9,-9,-5,-2,-10,-2,10,4,4,7,2,-4,-4,-5,7,9,-2,-6,1,-4,9,-5,-5,-8,4,3,-7,-4,-8,-7,-1,-10,3,1,-4,-4,-2,-3,-9,-6,-6,8,-7,-6,1,9,-8,-6,5,-8,2,-1,2,-3,-6,-3,-7,-6,5,-9,-7,-10,-7,9,-4,2,-8,2,8,-2,-2,7,-8,-6,-8,3,5,-2,2,6,-8,-3,1,8,-1,-4,-7,-6,5,-10,-7,8,-8,4,-2,7,-9,8,-8,-1,-9,3,7,1,-1,7,-5,10,5,-7,-6,-7,-7,-9,1,3,7,6,-7,-8,-9,6,9,-9,-2,3,1,5,5,2,-3,6,2,4,8,-8,6,-10,10,3,-6,-9,6,-4,9,-9,-10,2,6,1,-9,-10,5,-2,-1,-8,-1,3,-5,10,-2,8,-3,-6,-8,2,8,-2,4,-9,-1,2,-7,1,6,6,10,2,6,-2,-4,2,8,4,-8,-7,-3,-2,5,-2,5,-9,-2,8,-8,2,5,-4,8,5,5,6,10,-8,-3,6,-8,3,-7,-10,3,6,8,1,2,-3,-7,-4,-8,1,-1,-9,3,1,-5,4,-4,4,-4,7,2,-10,-10,-7,7,10,-7,8,-1,10,9,1,-8,-5,-1,-6,-2,-3,3,1,-8,-7,-7,4,4,-3,-10,8,1,-10,-6,5,-5,2,-8,9,1,-8,-2,10,6,1,-8,-4,2,1,-10,-8,5,-4,-1,7,-10,-4,-9,8,-8,1,-8,6,1,-8,4,-6,5,3,3,-2,7,5,10,1,-2,7,9,8,1,-1,-1,3,6,-4,6,-4,-1,8,2,-1,-2,-4,2,-1,9,7,8,8,5,-5,-7,5,9,9,-5,-10,1,-7,8,-5,9,-9,-3,1,10,-1,8,-2,3,2,4,-4,6,7,9,-2,-5,5,1,-5,5,-7,4,-2,3,-5,-6,9,10,7,-9,10,-2,-1,5,2,-4,3,-10,-4,-6,9,8,3,5,9,-9,-9,6,-1,-6,10,-4,7,-5,9,2,5,-8,-7,-10,-9,7,-7,-6,5,3,-1,8,3,8,9,9,-9,-4,-10,-5,3,-4,7,1,3,7,3,9,1,9,7,-3,3,-3,10,-1,-9,3,7,10,-10,-4,-2,-10,-10,2,4,-4,-1,-1,6,-5,-9,3,-2,7,-9,6,4,4,-2,-3,-4,-7,-5,-7,2,-6,-10,-10,1,6,-6,1,8,-4,-6,9,4,-4,-6,-10,2,-3,6,-7,-9,-6,7,5,-7,-8,-5,-2,4,-10,6,1,5,-10,-5,9,-2,-9,6,-4,2,-5,-8,-6,10,5,5,4,7,-2,-5,-6,-7,5,8,6,1,5,-6,-6,-8,-4,4,-4,4,-5,8,-5,6,-10,-9,-4,-8,4,3,-10,-8,3,-2,4,4,6,-1,-1,-1,3,7,-2,8,9,-3,-2,5,4,-4,-5,10,-2,-2,-9,-6,-3,-4,8,-9,3,5,-3,-3,-8,-7,-5,6,-7,-10,1,1,-1,-7,8,5,9,9,10,1,6,3,-5,9,-7,-8,-7,2,-7,4,-8,7,8,-9,5,-8,-10,-2,-2,-6,-2,-7,7,-4,2,-8,-8,8,-10,-8,-9,-9,9,-3,-4,8,-5,-4,8,-5,-7,-1,-9,-5,-7,7,9,-6,-7,7,-8,-5,4,5,7,-4,-4,-3,5,-3,1,10,-6,-10,5,-2,4,8,-9,2,5,-4,3,4,-5,10,-9,-10,7,7,7,7,-9,3,-7,5,3,1,-7,3,5,10,6,-8,1,-6,-5,2,-9,-1,2,-8,-5,2,-5,-4,2,4,-7,2,-8,-6,5,-6,-5,-9,-4,3,-8,-1,-1,5,2,-3,2,5,-6,-2,9,3,6,2,-1,-9,-9,3,-9,3,-10,8,-2,3,-6,-10,4,8,7,1,-4,-10,3,4,2,1,4,5,4,7,-2,4,2,7,1,-1,8,-9,5,-3,1,-10,-5,2,-10,1,5,9,7,-9,5,7,-9,4,-8,-10,1,3,-2,7,-5,7,4,-9,3,-1,-8,-10,5,-3,-3,1,3,-1,-10,-1,7,-4,4,-3,-3,-3,-3,10,-9,10,-5,5,6,5,6,-10,1,-5,-9,-2,-3,5,-10,-5,-5,-10,-7,-8,-2,-8,8,1,-3,-6,7,7,3,-7,7,1,-8,-4,-7,-9,-7,7,-4,-9,-7,9,3,5,8,-10,-5,-8,-1,9,7,8,4,1,6,-4,5,8,-1,-7,-4,-5,7,1,8,-7,-7,-8,10,10,9,8,9,-3,8,3,-4,-8,-4,10,-10,-6,2,9,-5,-8,3,8,2,6,9,2,8,6,-9,-5,-3,-6,-6,7,-4,-6,10,2,-3,-4,6,8,7,7,8,7,-2,8,-9,-9,-9,1,9,5,-10,6,6,1,6,9,9,-5,8,10,8,8,6,-9,3,-7,-5,-2,-7,-2,10,-6,5,9,-5,-9,-8,-2,-10,-7,9,9,-9,2,-1,-6,8,-9,3,6,-5,-5,-6,7,-10,-9,2,-2,7,6,10,1,6,-9,-10,-9,2,9,-2,3,3,-10,2,-4,6,8,-4,2,-3,-8,-9,-7,2,-10,2,-6,-7,-10,8,7,5,-10,8,-8,-4,-3,5,6,6,4,9,-3,-8,-5,-8,-2,10,10,7,-9,4,6,2,9,-5,-7,4,-1,4,3,-8,3,-1,6,-2,-9,-8,10,-4,-7,-3,-3,4,-1,10,10,-1,6,7,7,8,8,8,6,-6,-1,9,7,-8,2,4,-5,-5,6,2,3,-1,6,8,1,6,2,8,1,-10,3,6,-9,-7,-5,10,9,-7,-1,8,9,-6,1,2,9,6,-6,-9,5,1,5,6,-3,8,9,9,-3,-3,-8,-8,-7,-10,9,7,3,4,9,1,-4,-7,-8,3,1,6,10,-8,-8,-9,8,-1,-4,-1,4,5,3,-2,-8,2,2,-1,-2,1,-9,-9,8,10,-4,5,4,-5,-3,10,2,3,10,6,4,1,8,10,9,-8,-4,-10,-4,-7,-2,2,-1,-7,10,-4,-3,-8,5,6,2,7,-8,4,2,1,-2,-7,10,5,-1,4,4,-4,-2,4,-4,-7,10,4,-5,-5,10,10,-9,-9,4,2,-7,-10,7,-2,7,-5,1,8,-6,2,6,-7,-7,-3,2,-10,4,-8,1,5,-9,6,10,5,6,4,-9,5,7,-6,5,-10,3,-9,-9,-4,-5,-10,4,-10,3,10,-5,8,3,3,-10,-7,2,-9,2,-1,4,1,7,8,-7,3,-5,4,-7,-8,-1,-9,-2,-5,-2,1,-6,-3,6,-2,-10,-5,-6,-5,-7,9,5,-2,-4,1,-1,-1,-5,-9,-6,3,6,10,-8,-6,-7,4,10,-1,3,2,4,-3,8,9,-5,-1,-8,-4,8,-3,2,7,5,10,-1,4,-6,4,2,-1,4,7,-2,10,10,7,3,6,3,8,8,9,10,9,5,-9,1,10,-7,-5,6,-1,-5,6,4,-2,-5,-6,2,-9,7,-5,3,4,-8,9,1,10,8,6,10,-2,-8,-2,-8,-9,-8,-3,-2,5,6,-3,-5,-2,10,2,-7,5,-7,-8,-9,-9,-3,-9,9,-4,-7,1,9,4,-3,-9,5,6,2,-6,-2,7,-9,-2,-2,5,-5,-1,10,-4,-6,-1,-7,-2,2,-10,-6,2,5,6,-2,7,7,-2,7,-8,-8,-3,-10,6,6,-8,4,8,6,9,6,7,-7,-8,4,-7,-9,-9,-7,10,-10,-6,8,4,-1,-4,-10,-8,-10,3,-6,-10,3,3,2,-5,-10,7,-8,-10,5,-6,4,3,-4,-2,7,3,-1,1,-10,6,-1,5,-3,8,10,-2,-10,10,1,4,6,-9,-4,10,9,3,6,-9,3,-6,3,-7,5,7,-3,-6,-8,6,7,7,10,6,-6,-7,-2,3,-1,8,-2,-3,-8,4,6,-10,-7,-9,-7,-5,9,3,4,-7,-8,2,2,5,-6,5,-10,-3,2,-6,-6,-1,4,6,-1,3,-10,9,2,-1,4,8,-1,-5,-4,1,1,-7,-7,2,-8,9,-2,1,4,-2,-7,6,-5,10,-1,1,2,-8,-3,-9,7,-2,-10,-3,-4,-5,-7,-9,-2,-2,-2,5,-3,5,3,-10,3,9,2,8,-1,8,-3,-10,8,8,-7,3,5,-5,-1,-9,6,8,4,-5,-10,-2,-10,10,4,-9,10,-10,-10,-5,1,-9,-6,4,-4,4,10,7,-8,-9,4,5,9,-10,10,4,-3,-8,-10,10,9,-8,-10,8,-1,-2,6,10,1,-6,9,-4,-3,-1,5,8,5,-3,-10,-5,-10,7,-4,-1,7,10,9,8,6,-6,-3,5,10,-5,10,3,-6,-6,-5,7,-8,10,1,-9,9,8,-2,2,-2,4,6,2,6,-2,8,-5,-6,-2,-4,4,10,7,-8,4,5,-1,-5,-3,-2,-4,-6,-5,-7,-1,-1,6,8,3,-4,5,-7,10,-9,5,-2,2,-9,2,5,6,-10,-7,-8,4,9,3,6,-10,-10,8,3,10,6,-7,-7,1,7,-6,10,9,9,-7,-5,2,1,7,-10,5,1,1,3,3,-9,5,9,9,5,-5,-5,6,-8,8,-10,-6,-5,8,6,-9,2,-4,-7,-1,1,5,-6,1,-5,-2,2,-5,4,6,-7,-6,-9,2,-3,10,-2,9,-5,-3,-9,-5,-4,9,-6,-9,8,-5,-4,-2,-1,-3,7,-2,4,3,10,-6,8,2,10,8,7,-6,-10,1,3,6,-8,2,-4,7,3,-10,-1,-5,-6,-1,-8,-7,7,4,2,2,10,3,-9,10,4,-2,-4,5,2,4,-5,2,9,-6,6,2,-1,10,3,-1,1,1,-10,7,4,-6,4,-3,-2,3,-6,-3,-10,-7,4,2,-9,3,1,3,-3,6,-5,-10,9,-6,-10,10,-4,7,-4,3,3,-3,8,-2,5,8,-9,8,4,1,-4,8,-9,-6,-3,4,-7,-10,5,3,2,-1,-10,8,-6,9,-3,8,9,3,-2,-8,8,-1,-2,4,-6,6,7,-1,7,2,7,2,-1,10,3,-2,5,-5,-8,2,7,1,4,-6,-3,10,6,8,6,1,-3,10,6,7,-6,9,7,-7,5,-1,-2,8,1,-7,1,6,-1,-4,-4,5,9,5,-6,-6,-8,9,6,-9,-1,-5,6,-8,8,6,-4,3,-4,9,1,-3,2,10,-9,-6,7,5,-3,-2,7,-4,-8,-6,5,6,-3,-8,3,3,-1,2,-10,-3,10,-3,-5,7,6,-8,9,1,-7,6,-9,1,8,7,-8,9,8,-2,9,-6,5,7,10,-7,-5,6,-10,3,8,-5,2,4,-6,-1,-8,-1,3,-8,-6,-1,-5,-6,-3,4,10,-10,3,-2,-2,7,2,-4,8,7,6,4,4,-8,-10,8,6,-2,-4,10,-9,-6,5,-5,2,6,9,-9,3,-8,2,2,-6,6,9,5,-5,9,1,-4,6,-10,1,8,7,-6,3,-8,2,-10,2,-1,8,-8,5,-3,1,6,1,7,-9,6,2,-3,-7,-5,10,-7,-5,-9,-6,-1,-6,-10,-10,-4,3,3,5,8,-10,-3,9,3,3,-6,4,6,6,-8,7,7,3,3,-5,2,-6,-10,-4,-2,-4,-8,6,10,-3,8,10,10,-5,-3,-6,8,9,8,2,2,8,6,-3,-6,7,-8,9,-2,3,-5,-10,2,4,3,-1,1,5,5,-6,-6,-5,9,2,-10,-7,-3,-1,-6,-6,8,4,-7,7,-6,-3,5,7,-5,7,4,-2,3,-2,6,-8,5,6,-10,6,-7,2,-10,-7,-10,2,-2,-8,6,4,8,-10,5,-7,-10,-4,-5,-10,5,-9,6,8,-6,3,-8,5,2,-1,3,3,-2,-2,-3,-1,2,5,1,-5,2,10,6,8,-3,4,-6,9,6,-6,-2,9,-6,1,8,6,-4,1,-2,-8,5,-10,9,-2,9,-3,-4,-6,-7,-2,2,6,-4,6,6,-10,-5,6,8,-8,8,9,-6,-4,3,-9,-4,3,-3,-4,4,-2,2,5,-5,-8,-6,5,-1,4,-7,-1,7,-8,4,9,-6,8,-8,10,8,6,-5,8,2,-2,-3,9,-6,2,1,-1,-2,-6,4], dtype = "int32")#candidate|5359|(2688,)|const|int32
call_5358 = relay.TupleGetItem(func_4155_call(relay.reshape(const_5359.astype('int32'), [2688,])), 2)
call_5360 = relay.TupleGetItem(func_4158_call(relay.reshape(const_5359.astype('int32'), [2688,])), 2)
output = relay.Tuple([bop_5321,bop_5324,call_5358,const_5359,])
output2 = relay.Tuple([bop_5321,bop_5324,call_5360,const_5359,])
func_5368 = relay.Function([var_5319,var_5320,], output)
mod['func_5368'] = func_5368
mod = relay.transform.InferType()(mod)
var_5369 = relay.var("var_5369", dtype = "int64", shape = ())#candidate|5369|()|var|int64
var_5370 = relay.var("var_5370", dtype = "int64", shape = (4, 10, 10))#candidate|5370|(4, 10, 10)|var|int64
output = func_5368(var_5369,var_5370,)
func_5371 = relay.Function([var_5369,var_5370,], output)
mutated_mod['func_5371'] = func_5371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2795_call = mod.get_global_var('func_2795')
func_2797_call = mutated_mod.get_global_var('func_2797')
call_5411 = relay.TupleGetItem(func_2795_call(), 0)
call_5412 = relay.TupleGetItem(func_2797_call(), 0)
output = call_5411
output2 = call_5412
func_5413 = relay.Function([], output)
mod['func_5413'] = func_5413
mod = relay.transform.InferType()(mod)
mutated_mod['func_5413'] = func_5413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5413_call = mutated_mod.get_global_var('func_5413')
call_5414 = func_5413_call()
output = call_5414
func_5415 = relay.Function([], output)
mutated_mod['func_5415'] = func_5415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2795_call = mod.get_global_var('func_2795')
func_2797_call = mutated_mod.get_global_var('func_2797')
call_5425 = relay.TupleGetItem(func_2795_call(), 0)
call_5426 = relay.TupleGetItem(func_2797_call(), 0)
func_4449_call = mod.get_global_var('func_4449')
func_4451_call = mutated_mod.get_global_var('func_4451')
call_5429 = relay.TupleGetItem(func_4449_call(), 1)
call_5430 = relay.TupleGetItem(func_4451_call(), 1)
func_2857_call = mod.get_global_var('func_2857')
func_2858_call = mutated_mod.get_global_var('func_2858')
call_5433 = relay.TupleGetItem(func_2857_call(), 0)
call_5434 = relay.TupleGetItem(func_2858_call(), 0)
bop_5445 = relay.maximum(call_5433.astype('uint8'), relay.reshape(call_5425.astype('uint8'), relay.shape_of(call_5433))) # shape=(5, 14, 1)
bop_5448 = relay.maximum(call_5434.astype('uint8'), relay.reshape(call_5426.astype('uint8'), relay.shape_of(call_5434))) # shape=(5, 14, 1)
func_4104_call = mod.get_global_var('func_4104')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_5453 = func_4104_call()
call_5454 = func_4104_call()
bop_5465 = relay.power(bop_5445.astype('float32'), relay.reshape(call_5429.astype('float32'), relay.shape_of(bop_5445))) # shape=(5, 14, 1)
bop_5468 = relay.power(bop_5448.astype('float32'), relay.reshape(call_5430.astype('float32'), relay.shape_of(bop_5448))) # shape=(5, 14, 1)
func_2584_call = mod.get_global_var('func_2584')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_5479 = relay.TupleGetItem(func_2584_call(), 0)
call_5480 = relay.TupleGetItem(func_2585_call(), 0)
output = relay.Tuple([call_5453,bop_5465,call_5479,])
output2 = relay.Tuple([call_5454,bop_5468,call_5480,])
func_5488 = relay.Function([], output)
mod['func_5488'] = func_5488
mod = relay.transform.InferType()(mod)
mutated_mod['func_5488'] = func_5488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5488_call = mutated_mod.get_global_var('func_5488')
call_5489 = func_5488_call()
output = call_5489
func_5490 = relay.Function([], output)
mutated_mod['func_5490'] = func_5490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5316_call = mod.get_global_var('func_5316')
func_5318_call = mutated_mod.get_global_var('func_5318')
call_5533 = relay.TupleGetItem(func_5316_call(), 0)
call_5534 = relay.TupleGetItem(func_5318_call(), 0)
func_3948_call = mod.get_global_var('func_3948')
func_3949_call = mutated_mod.get_global_var('func_3949')
call_5536 = func_3948_call()
call_5537 = func_3948_call()
output = relay.Tuple([call_5533,call_5536,])
output2 = relay.Tuple([call_5534,call_5537,])
func_5544 = relay.Function([], output)
mod['func_5544'] = func_5544
mod = relay.transform.InferType()(mod)
output = func_5544()
func_5545 = relay.Function([], output)
mutated_mod['func_5545'] = func_5545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4949_call = mod.get_global_var('func_4949')
func_4950_call = mutated_mod.get_global_var('func_4950')
call_5554 = relay.TupleGetItem(func_4949_call(), 0)
call_5555 = relay.TupleGetItem(func_4950_call(), 0)
func_4104_call = mod.get_global_var('func_4104')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_5560 = func_4104_call()
call_5561 = func_4104_call()
bop_5564 = relay.add(call_5554.astype('int32'), relay.reshape(call_5560.astype('int32'), relay.shape_of(call_5554))) # shape=(5, 14, 1)
bop_5567 = relay.add(call_5555.astype('int32'), relay.reshape(call_5561.astype('int32'), relay.shape_of(call_5555))) # shape=(5, 14, 1)
output = bop_5564
output2 = bop_5567
func_5568 = relay.Function([], output)
mod['func_5568'] = func_5568
mod = relay.transform.InferType()(mod)
output = func_5568()
func_5569 = relay.Function([], output)
mutated_mod['func_5569'] = func_5569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4449_call = mod.get_global_var('func_4449')
func_4451_call = mutated_mod.get_global_var('func_4451')
call_5590 = relay.TupleGetItem(func_4449_call(), 0)
call_5591 = relay.TupleGetItem(func_4451_call(), 0)
func_3316_call = mod.get_global_var('func_3316')
func_3320_call = mutated_mod.get_global_var('func_3320')
const_5597 = relay.const([0.856993,-2.440623,3.708838,8.242440,3.266906,-6.098063,-0.254421,-6.354807,-8.872504,0.046324,-5.853801,-5.183959,8.058639,0.936020,5.077220,1.891234,-9.462653,2.764951,-7.470325,2.742663,8.036140,-9.770931,-7.430391,-6.002615,-8.254856,-9.268651,-9.304843,0.690085,5.087514,-9.228357,2.875601,6.159934,2.421773,4.439849,2.326131,-4.802907,-6.016699,8.247631,2.134528,8.239797,6.610286,3.772204,-2.526052,9.844167,0.663863,-9.942703,3.639673,-2.842074,-6.640105,-8.826555,-7.119455,-8.984398,8.071847,8.990615,2.635151,9.822971,-7.309409,1.816798,5.137310,-9.351789,-6.734189,5.935947,5.886900,3.205515,3.676814,3.317848,-0.935079,-7.214455,8.787174,-0.734775,-1.442886,8.118147,-5.565589,1.016691,0.353171,-3.257195,2.042725,1.721754,9.337296,-0.907510,2.122968,-2.181383,-6.664857,1.849892,6.090818,-3.835586,2.057179,-8.743002,-3.437184,-5.931917,-8.894667,-9.732157,-9.045954,-2.171962,-4.342214,6.397047,-9.601732,1.599265,-5.294522,6.659744,-4.888241,-4.058188,0.362513,-8.480356,-8.391307,-5.325175,8.689679,-3.094005,-1.139157,-5.747265,-8.954405,-6.145921,6.224697,8.180227,5.146278,9.955787,-2.789114,1.702081,5.508046,-1.844382,-9.981262,-6.263325,6.038255,-1.361393,0.613622,-0.200890,-1.067794,-9.585550,-3.054054,7.427407,-7.400464,1.296326,-4.633740,5.810438,-2.508674,-0.285694,-4.496001,8.386188,9.043871,9.356227,-8.020417,-4.955205,9.997539,-2.518069,-8.973877,1.495191,6.172499,-9.140577,4.221618,9.670419,9.975670,4.892067,-9.301253,1.672818,-5.751117,-2.146784,-2.808832,2.000958,4.736715,8.479984,0.797167,5.795293,1.554819,8.594685,0.815457,7.154986,-3.223236,-8.698141,8.769888,-9.101152,-5.174077,-3.856510,-2.059781,-9.896064,5.678664,3.274407,-2.422200,9.679553,-9.802515,4.949552,6.308759,-6.623101,5.801096,-3.776930,-4.660005,-7.945334,0.696910,5.155258,-3.477408,-5.157114,4.540728,-0.846665,-7.784643,-1.803405,-1.589553,-7.881080,-5.042416,7.624520,5.165067,-4.102224,4.232673,-3.395931,9.955993,-1.730772,-6.959736,9.782417,-8.880074,6.817775,-0.988392,-3.822913,9.320184,-3.188173,9.704905,4.050313,-9.346442,6.832927,-3.644938,-3.859313,9.365114,4.247181,2.885858,-8.547361,9.367340,-9.397041,6.540771,-5.026127,1.281666,-8.315567,4.561104,9.842810,3.938174,9.403887,5.443814,8.362453,-9.410460,-7.412893,7.911746,8.067907,-4.117302,-9.261112,-6.624082,4.344547,-2.938751,6.423824,5.661965,6.883774,0.553335,1.262343,-4.185084,5.707374,1.825632,2.870186,-4.406065,2.881424,-7.256781,-9.343183,9.753482,5.700495,6.440538,7.303040,5.952698,0.473460,8.998395,3.500916,7.149978,-5.591702,-8.172183,-7.159737,-6.492594,-5.389369,3.965906,-1.048660,-5.779877,-4.278436,-4.448046,-4.774129,-4.243078,-0.160808,-7.327493,-0.011519,-0.317091,6.004129,-4.559434,-8.130418,7.995539,4.854799,8.054226,8.650067,9.389372,-4.362548,4.327009,-9.149140,-7.320489,5.061794,-8.115950,9.640306,-5.740464,-5.083051,-5.805167,-5.276074,5.942693,-4.294132,1.099053,-6.799616,-4.573897,-6.286614,4.487108,0.344555,2.460336,8.720840,-4.096654,-0.764255,8.564400,1.006853,2.918492,8.728649,-2.443479,-5.114434,-8.615609,-6.870999,4.945202,-5.656241,7.419628,-2.251617,4.221181,5.851970,-1.207662,-3.853719,-7.038889,0.717888,0.123940,-0.019144,5.086767,0.155845,5.064713,-7.884859,-0.028155,1.577118,-6.188209,-5.895319,5.012751,-7.311898,-4.140671,2.445697,-7.858581,-0.679958,-9.423683,8.103512,9.469765,0.529100], dtype = "float64")#candidate|5597|(350,)|const|float64
const_5598 = relay.const([-3.740224,2.663150,8.084189,-7.260430,1.436032,-0.299462,-9.488894,-4.293983,8.657220,-2.931803,5.677962,9.244072,1.542827,6.857252,-9.773166,-2.648129,-9.104028,1.764084,-4.686136,-4.216657,-2.558010,5.822347,8.625346,-4.119374,-0.685597,-0.777507,-4.715549,5.499849,-3.321962,-6.851533,4.276914,7.620070,2.590133,9.467405,3.213523,2.827123,5.234135,-6.175487,2.762408,1.796191,5.439345,0.450416,1.677570,6.648379,-1.198509,-9.552755,2.100592,7.674769,-4.878861,-2.036195,-2.505422,-1.284103,-3.590418,-5.824039,7.691156,3.582232,5.262705,-8.164834,9.203795,-8.091045,-6.819516,-1.736577,6.489918,-8.985633,-1.205723,3.043156,-6.107091,-6.766917,-5.725584,-5.714211,-0.878911,-2.051450,0.455156,-6.506198,1.939780,-4.380450,9.469908,0.249755,-5.079898,4.408104,-6.227195,4.698662,-3.262767,1.154475,9.298156,-1.582955,9.742720,5.158898,3.040606,-4.715535,8.508560,-0.183904,6.460192,3.946258,9.614805,-2.494422,9.420779,8.768727,-4.159755,-6.524153,-9.398562,0.322147,5.204926,-6.129761,4.222116,6.111577,9.376524,7.110535,4.788290,-4.884263,9.343930,-4.966164,7.100937,-2.672155,-6.644078,6.798908,1.072082,7.971718,2.093977,-4.383544,-6.560294,8.481770,7.638886,-0.010679,2.615015,-0.843268,6.121596,8.490880,-0.507257,-0.850880,-4.241759,0.846478,4.855668,6.861368,9.814803,1.704502,4.561989,0.119781,2.684950,-9.614056,2.010754,-7.685825,8.159398,6.603253,2.746735,5.691374,0.400210,-7.301419,5.754287,0.279343,8.111039,-8.248973,-0.030149,2.930353,2.509960,-5.974502,-8.078032,4.809347,7.902497,8.971832,3.677162,-4.476518,-3.736581,1.066401,-3.484103,-7.964036,1.638397,7.314981,-0.959572,7.486777,-4.657013,-3.117555,-5.795499,-0.919293,-2.804569,7.219279,-1.105681,-3.909198,-6.464751,-5.955307,9.011139,-4.638522,2.916031,-3.333824,-3.291743,4.610677,6.315996,-5.189667,-0.109629,2.788896,-6.571127,-3.124419,7.179332,8.067002,-6.353519,-2.233727,-6.279284,-1.158991,-0.359994,-3.984033,-4.514336,9.254084,8.508474,-0.250173,3.051917,0.623872,-4.473795,-7.375328,-9.990902,4.788107,-7.629472,-8.209520,-8.155405,-5.511149,3.982252,7.565434,3.688762,-4.377599,-5.909858,-9.656846,-6.628314,-1.950926,5.454954,-8.889696,-6.375100,-3.007079,-2.094792,-4.628626,3.920798,2.574181,4.959365,-5.905016,-7.857748,9.063967,3.119472,-1.868583,5.045708,-8.777017,1.009128,4.768479,-6.047216,-5.294089,-0.433430,5.345608,-0.865787,6.363411,-4.210064,-0.652803,-2.961266,3.645636,6.764193,3.329922,-6.683793,5.786271,6.210925,-7.663497,-7.044201,-3.002390,6.633223,-6.510073,-1.564869,3.196620,8.612540,3.163317,2.815633,-7.888289,-8.039834,-6.599957,7.731956,7.835573,-0.311055,0.281450,-7.115883,4.421776,6.526978,5.141301,8.701221,-0.254739,-8.924933,-8.892973,3.139687,-5.161210,3.037141,-2.548831,-5.349404,7.342689,6.782355,5.894815,-3.707319,8.443009,-2.190126,4.871171,6.346500,6.491792,-1.908414,-7.561383,-6.846636,7.892694,6.784582,-8.309581,3.660395,-8.706166,-9.622779,2.700335,-6.013086,5.643546,0.040945,2.847369,-7.020164,8.982804,-4.088546,-1.604187,-0.616040,-4.613044,-3.205598,-2.014339,-5.139818,-2.857198,-4.054569,2.888077,1.415548,-6.658307,-4.254377,7.033306,-1.422539,8.362058,-2.492447,1.261520,3.586906,-2.518135,-0.524936,-6.201948,1.653755,-3.051056,-3.387605,8.316220,-2.023369,-4.265381,9.890829,2.824862,-0.249200,-3.725621,1.829858,-4.885947,-8.873177,-4.370367,4.820109,5.105457,9.281817,-9.459146,-1.484386,9.439856,0.285392,9.478458,-9.499770,-7.196197,1.550594,2.004877,-0.926320,4.786596,6.592164,-1.261558,-5.427898,6.864735,2.602889,9.181207,6.438248,-5.295803,0.208136,9.842589,-9.229009,-1.826989,2.269065,-0.653186,7.670047,-1.009887,0.963389,5.685910,-1.330676,-3.769387,2.543353,9.847230,-7.815159,3.670780,6.527234,0.603755,7.292114,9.011902,-4.901495,-7.440184,-4.373141,-4.877722,6.555980,7.856378,-7.428939,7.595679,-9.250184,1.221094,-0.175731,-5.175318,2.486748,-8.426520,1.823583,2.104585,9.181874,-4.994046,-2.960440,-6.656915,-4.944139,-1.899701,3.802188,-1.660294,-0.936507,-6.058735,4.665225,4.922080,2.108287,5.637799,4.255036,-3.041410,-3.969937,-9.687392,3.964608,9.789274,4.165867,-8.090361,7.349053,-4.037422,-7.513037,6.887930,1.766322,3.285974,-1.314499,9.611927,9.751645,-4.392276,-6.645495,4.291486,8.552220,-5.171825,-9.701529,2.147215,4.781676,5.911369,5.665552,1.832453,9.494034,1.671122,8.210649,-2.475705,-5.039489,5.410580,4.365240,-2.983798,1.862956,1.818103,6.316324,6.859140,-2.597149,8.253276,0.302922,-7.261112,0.137496,-8.482092,3.109698,5.175685,-0.500606,-4.941702,9.716614,-1.663420,4.293990,-7.120677,7.831577,-0.093057,1.069426,0.873519,-0.023954,4.651566,7.582095,2.766566,-0.693205,-8.131346,9.625360,3.092692,8.165427,5.516100,5.480271,6.198119,1.787891,4.201878,3.081904,-4.853986,-3.962404,6.351210,5.657489,-6.171518,-1.583871,-6.931165,-4.511656,-4.017335,-2.894118,-9.187294,-6.133566,-5.197544,5.933804,-7.257090,-1.007063,4.807403,-3.853462,-8.299166,8.558033,-2.047813,1.263154,2.246088,-8.828588,7.271177,8.161428,-8.898773,2.920368,3.563669,-1.755649,-3.684311,-9.361440,-4.467110,-5.555198,4.984687,2.123509,0.874278,-0.251627,-8.360992,7.398846,7.947395,-1.461812,-9.837570,-8.948551,-9.428812,1.321584,5.196413,-7.952315,-9.074527,-4.355235,-1.079644,1.882700,-3.160213,-9.902286,-0.674416,-6.336395,-7.284307,-7.792727,6.050064,0.464571,5.212202,-5.447257,-7.276354,-5.908651,2.280436,-2.390680,0.914057,-9.070979,-3.232998,-0.664675,-3.933935,-9.737768,7.012339,1.756028,-6.911194,9.747179,9.324911,-3.519212,-3.647411,-8.478001,-2.645031,-5.864763,9.137050,9.830207,0.116856,-0.121819,4.232506,2.008313,8.864662,2.186770,9.387970,-2.542600,-8.341633,-2.452492,3.231056,-9.417397,-8.911855,3.046798,9.904036,9.826061,4.075816,-8.474158,-9.159845,2.191029,-9.302913,4.003993,6.734628,-8.406959,2.437373,4.276999,-7.783948,-7.619807,-8.921532,-0.886315,-5.002049,-5.693795,0.196075,-2.434401,-4.599439,-5.073582,-4.290370,-4.805906,1.884930,3.208167,-9.288151,3.035175,2.008002,9.476267,-1.158251,2.803921,2.613187,-9.623527,4.022448,-1.108042,-5.566025,-3.263394,2.834760,0.582872,-7.112805,5.119735,5.617022,2.664065,-8.113509,-1.124067,-3.307667,3.813866,5.279973,-4.835572,1.893534,8.593446,2.206055,-1.389308,-2.599709,3.028635,7.902991,0.816892,-0.793014,2.363212,8.151612,5.088257,1.753840,4.154574,-5.468211,7.318458,2.468320,0.217861,9.152466,3.082359,7.722961,-7.860572,8.864106,2.248827,-9.574360,-8.586784,-5.215577,8.403924,-1.883543,8.258929,-6.073008,-2.442068,3.185278,4.801340,-1.589950,-0.340475,0.362161,-0.928253,6.977572,-7.939388,-4.857693,1.987230,-5.720329,-9.919736,-8.379403,7.821061,9.797949,-0.862100,-2.650343,3.185248,-6.265981,-9.304094,-2.230004,-7.453963,2.329654,9.047375,1.174487,-8.573006,5.067232,-2.592082,-3.870974,-5.411569,-7.039273,-6.567640,-0.562480,5.642989,-7.469583,4.938327,-4.327595,-2.538866,-4.146414,2.100181,-9.540374,-2.081548,-4.873660,3.340060,-9.108231,-6.533369,-4.849909,6.428583,-0.336479,3.708359,1.308240,9.721908,-5.948158,5.675539,4.742992,-3.133862,-3.567705,5.646813,-4.998143,-9.531862,3.797339,7.437758,6.331639,-4.448111,0.895173,-4.356355,-0.311116,-5.594725,1.610909,-2.842617,-4.006881,2.069476,7.564156,6.661968,9.702396,-0.252844,7.591047,4.260480,9.863135,-3.917972,6.818568,3.500062,8.761476,0.788673,0.102218,1.419126,-3.258044,-3.184594,-0.176922,0.217541,3.944019,-3.045529,9.541872,-9.444661,8.585550,0.573184,1.909039,6.862276,-3.652180,-0.970902,-7.822378,6.035680,-4.849233,-8.015797,-7.724453,-5.734611,5.484323,-5.100304,-8.526313,4.039445,6.242784,1.472015,5.740470,6.254246,6.157436,0.935518,-3.170150,-8.971242,1.366069,5.813010,5.510563,1.157381,-4.379872,1.811885,-2.076993,-1.708934,-6.973232,9.356792,-2.337281,8.065083,-7.580488,9.897038,-3.112760,4.037075,-9.913441,2.001893,-7.471507,5.349698,-1.737249,-8.532868,9.983245,-7.439399,-0.958622,-3.642047,1.241756,-5.853966,-8.756312,-8.502660,1.749006,-7.888317,-4.331339,9.274533,7.790146,9.505209,-6.364326,-2.264778,-7.766639,7.480389,-2.620585,-1.348954,0.086488,4.811344,-0.542811,-7.245425,4.678358,-0.888886,-9.335699,1.517157,-0.967009,8.036334,-4.026075,-5.021113,7.023772,4.573097,0.584887,3.039091,-8.331122,7.443172,-2.403652,-7.747045,-7.836694,9.304443,8.190996,-7.325338,3.091278,-5.231974,-0.982157,-7.296705,-9.305739,8.347709,5.722951,-8.838050,-5.188010,4.601848,-9.062720,-0.419240,-3.323460,8.200980,-1.703122,7.827086,-2.029950,8.553636,-2.368363,-5.362677,6.861959,1.289612,-2.439131,-5.209533,3.969554,1.894684,-9.514838,-8.424767,4.085360,-5.115009,-1.634618,5.421722,4.808338,5.927341,-5.924827,-7.583517,0.723183,8.698076,5.864050,-5.853515,8.947807,-9.445576,-2.910694,-3.248755,3.349709,1.772243,-2.595988,-2.320378,-6.271634,4.735244,2.922207,-7.349034,3.074861,-1.745627,-3.735390,4.675712,-3.357179,2.497571,2.255169,-1.681087,-4.546910,-4.660848,-8.683433,-1.145356,-4.567418,8.494965,9.028177,-0.890454,1.327229,9.976969,-3.319617,0.083086,4.269933,0.424826,-6.194495,9.063105,7.978746,6.339942,-0.780071,-2.739246,-5.234427,-0.543080,-6.653993,-2.195930,9.407774,2.122769,4.496359,-1.724326,7.387812,4.583668,9.721350,-9.647877,-1.737481,-5.580615,6.434407,6.191465,-5.043980,5.162512,-9.493016,2.586083,2.103558,1.918058,4.652951,0.642068,2.554015,5.210372,7.311946,-5.411557,5.048211,-6.734568,7.193053,-6.219472,6.842957,-2.080022,-3.466034,9.593126,-1.096369,-1.794095,-8.197145,-8.910520,-5.852316,-4.413798,6.813198,1.647000,3.426942,6.423101,0.708129,8.040229,0.674838,-3.947109,2.587208,-7.733233,0.309966,4.976305,-0.436052,2.627356,6.609223,0.090811,-4.788613,-4.578020,-8.044706,8.892784,4.674722,9.956655,-8.235350,-1.672916,3.107484,-6.265374,5.332014,3.338415,3.143868,-2.905312,-9.665810,-5.167198,-8.146633,8.498360,-6.401338,-6.274429,7.689000,6.336534,-0.821994,1.523223,-6.486192,-7.342734,7.101698,7.228334,-2.678390,-6.107642,5.383342,-2.441949,3.637133,1.917872,-6.139865,4.942321,0.028789,8.278186,1.101557,3.697855,-1.843121,0.899582,1.908264,5.252394,4.910099,4.860321,-5.840548,-7.558733,2.492346,6.140282,-2.178072,7.553269,1.623692,7.274588,8.070454,-4.458344,-3.726298,9.940785,1.048502,0.236756,-5.017106,7.545476,-1.439342,-1.333188,8.088927,4.148434,5.822884,8.629976,-9.085797,5.534322,-2.071580,2.972695,7.087085,-6.726595,6.431010,7.383124,-2.526144,-9.887018,1.727673,-6.465727,8.295777,-0.925465,-1.378858,2.595178,-0.597372,-2.231969,2.235152,7.938437,4.643212,1.216289,7.376706,-7.802337,3.707639,4.313897,-7.790126,-3.073536,3.765239,-0.668062,-9.120532,-8.108139,-6.868808,5.254730,4.782488,-1.550014,4.699120,3.300849,7.699994,-2.429394,0.007423,1.272969,-7.744055,5.780389,-6.932183,4.557379,3.773508,3.964462,8.137487,5.479664,6.522135,3.962971,1.570924,4.168715,-5.961896,-4.606949,0.700725,5.590910,1.848475,-4.214937,-9.549956,-4.782169,9.348190,3.977795,7.045303,0.559927,0.006914,5.059721,-1.607845,6.380150,-6.891171,-0.646697,3.562668,2.140905,-5.059457,-8.028498,-0.932832,-8.266174,-3.106257,-6.990066,0.471621,-2.343518,-2.696574,8.271085,-2.229508,2.634625,-3.906638,3.978187,-3.298141,-4.286182,-2.550656,8.464221,-1.502973,-4.973572,-5.114882,-0.572829,9.341793,-0.622207,-4.620796,-4.872519,-4.933024,6.540344,0.725654,-6.432307,-2.925583,-2.594076,4.239353,7.118757,9.317882,-8.370207,-4.752818,8.990533,7.778226,1.549089,-2.285676,-8.202615,3.462188,1.391237,-8.636307,-2.787471,1.261384,2.817202,3.814969,-0.192829,6.679980,-9.020153,2.697758,7.963035,4.254772,-2.078793,-5.845098,-7.819562,-0.818042,-4.988216,7.470589,7.107817,2.685386,3.417260,1.521886,2.371646,-2.168876,-4.250933,-9.338523,-8.778492,-6.930080,1.283476,1.417690,8.364683,9.140786,0.999009,-4.747678,5.057000,1.677536,-9.349106,-1.505959,2.350314,0.021073,-0.269770,0.512420,7.002335,6.889199,-1.634778,-8.391041,9.773515,3.051392,-1.871070,8.169556,8.843502,-1.252686,-1.469529,-0.844403,0.924894,7.407610,4.607175,-9.922969,2.952970,1.898083,8.257374,7.266704,1.264146,7.968745,-4.999046,-0.344004,5.404577,-4.545035,2.537530,-5.176434,-6.719851,7.446639,-3.826748,5.219214,2.663172,-8.451163,-1.801738,3.138456,-0.432872,-9.017574,-0.636576,9.525158,0.051794,3.696270,-0.291652,-3.615819,5.163083,-5.435864,7.077490,7.369323,-6.801484,8.746561,9.160844,-0.569321,2.050405,2.608791,6.757495,-7.386243,-6.443910,-7.552187,1.623584,6.225666,-8.583151,-4.493901,1.820557,-3.177871,6.592131,8.331789,0.348295,0.325167,-4.665567,-0.389711,2.370188,-9.319096,-1.162970,-1.145902,1.226390,-5.343012,4.288063,-6.781163,0.164838,-7.423792,-0.166319,5.188232,1.135069,4.168198,4.214326,-5.251880,-2.469976,-4.242995,5.518883,-3.583615,3.052575,-3.583515,0.174117,9.734799,2.020116,-1.782750,7.207280,5.308282,-4.843084,-5.894860,-3.634483,-8.137457,-4.996849,7.223304,6.560038,-5.339602,0.486287,8.017891,6.951765,8.324168,-5.300920,9.149592,8.245845,-4.670188,8.788790,-7.975657,4.079427,-8.896818,3.711475,2.444698,4.609417,3.264247,-5.078192,5.653260,-6.696204,7.903043,-0.159955,-5.727723,8.533306,3.576221,-2.115026,7.081529,-0.707057,0.265581,2.354127,-8.744685,-4.701384,2.830102,-4.352746,3.455966,3.900070,2.999609,4.717666,-5.211473,7.317954,8.390552,1.178310,1.614982,-0.433492,7.683156,-8.313112,-7.558591,-5.667357,4.165167,-4.100562,0.371778,2.393491,-1.891661,-1.338875,-5.835663,-7.903467,1.726745,-9.846356,-0.087918,8.695212,-3.921518,7.151891,6.104605,4.745835,4.830848,9.458233,0.366977,7.947594,1.075101,-8.057076,1.871647,0.503285,-9.221082,-4.529134,-5.341758,5.066502,0.765950,2.496439,-1.594878,7.879381,-9.236794,-8.078454,-7.741624,9.745139,0.107504,2.561741,2.014010,-8.010557,-6.307581,-0.878639,-0.526003,2.744743,-2.430029,-1.734121,3.720869,-4.779179,-9.453655,-4.569685,1.793173,-3.045180,6.304136,6.452064,-4.196793,0.214278,-2.693832,4.762712,5.553695,-8.512525,4.440230,-8.185350,5.131020,2.288144,1.758782,-7.217620,5.482553,5.258613,-6.732820,6.287312,-3.478735,5.556756,-2.527208,-5.448031,9.789413,-0.771216,4.748246,-7.633948,5.133228,8.891886,3.748586,2.924789,-3.536642,8.991145,-5.937501,-1.549136,9.251710,8.633159,-8.334526,2.166103,5.636357,5.064351,-2.344746,2.684731,0.055466,-2.842634,-3.435402], dtype = "float32")#candidate|5598|(1470,)|const|float32
const_5599 = relay.const([False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,True,False,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,False,True,False,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,False,False,False,True,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,True,False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,False,True,False,True], dtype = "bool")#candidate|5599|(208,)|const|bool
call_5596 = relay.TupleGetItem(func_3316_call(relay.reshape(const_5597.astype('float64'), [5, 14, 5]), relay.reshape(const_5598.astype('float32'), [1470,]), relay.reshape(const_5599.astype('bool'), [208,]), ), 1)
call_5600 = relay.TupleGetItem(func_3320_call(relay.reshape(const_5597.astype('float64'), [5, 14, 5]), relay.reshape(const_5598.astype('float32'), [1470,]), relay.reshape(const_5599.astype('bool'), [208,]), ), 1)
output = relay.Tuple([call_5590,call_5596,const_5597,const_5598,const_5599,])
output2 = relay.Tuple([call_5591,call_5600,const_5597,const_5598,const_5599,])
func_5601 = relay.Function([], output)
mod['func_5601'] = func_5601
mod = relay.transform.InferType()(mod)
mutated_mod['func_5601'] = func_5601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5601_call = mutated_mod.get_global_var('func_5601')
call_5602 = func_5601_call()
output = call_5602
func_5603 = relay.Function([], output)
mutated_mod['func_5603'] = func_5603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3362_call = mod.get_global_var('func_3362')
func_3364_call = mutated_mod.get_global_var('func_3364')
call_5612 = relay.TupleGetItem(func_3362_call(), 0)
call_5613 = relay.TupleGetItem(func_3364_call(), 0)
output = relay.Tuple([call_5612,])
output2 = relay.Tuple([call_5613,])
func_5616 = relay.Function([], output)
mod['func_5616'] = func_5616
mod = relay.transform.InferType()(mod)
mutated_mod['func_5616'] = func_5616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5616_call = mutated_mod.get_global_var('func_5616')
call_5617 = func_5616_call()
output = call_5617
func_5618 = relay.Function([], output)
mutated_mod['func_5618'] = func_5618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2857_call = mod.get_global_var('func_2857')
func_2858_call = mutated_mod.get_global_var('func_2858')
call_5825 = relay.TupleGetItem(func_2857_call(), 0)
call_5826 = relay.TupleGetItem(func_2858_call(), 0)
var_5845 = relay.var("var_5845", dtype = "float32", shape = (5, 14, 11))#candidate|5845|(5, 14, 11)|var|float32
bop_5846 = relay.minimum(call_5825.astype('float32'), var_5845.astype('float32')) # shape=(5, 14, 11)
bop_5849 = relay.minimum(call_5826.astype('float32'), var_5845.astype('float32')) # shape=(5, 14, 11)
output = bop_5846
output2 = bop_5849
func_5851 = relay.Function([var_5845,], output)
mod['func_5851'] = func_5851
mod = relay.transform.InferType()(mod)
mutated_mod['func_5851'] = func_5851
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5852 = relay.var("var_5852", dtype = "float32", shape = (5, 14, 11))#candidate|5852|(5, 14, 11)|var|float32
func_5851_call = mutated_mod.get_global_var('func_5851')
call_5853 = func_5851_call(var_5852)
output = call_5853
func_5854 = relay.Function([var_5852], output)
mutated_mod['func_5854'] = func_5854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4837_call = mod.get_global_var('func_4837')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_5896 = relay.TupleGetItem(func_4837_call(), 0)
call_5897 = relay.TupleGetItem(func_4838_call(), 0)
func_4949_call = mod.get_global_var('func_4949')
func_4950_call = mutated_mod.get_global_var('func_4950')
call_5898 = relay.TupleGetItem(func_4949_call(), 0)
call_5899 = relay.TupleGetItem(func_4950_call(), 0)
output = relay.Tuple([call_5896,call_5898,])
output2 = relay.Tuple([call_5897,call_5899,])
func_5907 = relay.Function([], output)
mod['func_5907'] = func_5907
mod = relay.transform.InferType()(mod)
output = func_5907()
func_5908 = relay.Function([], output)
mutated_mod['func_5908'] = func_5908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4379_call = mod.get_global_var('func_4379')
func_4380_call = mutated_mod.get_global_var('func_4380')
call_5943 = relay.TupleGetItem(func_4379_call(), 0)
call_5944 = relay.TupleGetItem(func_4380_call(), 0)
output = relay.Tuple([call_5943,])
output2 = relay.Tuple([call_5944,])
func_5945 = relay.Function([], output)
mod['func_5945'] = func_5945
mod = relay.transform.InferType()(mod)
output = func_5945()
func_5946 = relay.Function([], output)
mutated_mod['func_5946'] = func_5946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5907_call = mod.get_global_var('func_5907')
func_5908_call = mutated_mod.get_global_var('func_5908')
call_5986 = relay.TupleGetItem(func_5907_call(), 0)
call_5987 = relay.TupleGetItem(func_5908_call(), 0)
func_4244_call = mod.get_global_var('func_4244')
func_4246_call = mutated_mod.get_global_var('func_4246')
call_5988 = relay.TupleGetItem(func_4244_call(), 2)
call_5989 = relay.TupleGetItem(func_4246_call(), 2)
output = relay.Tuple([call_5986,call_5988,])
output2 = relay.Tuple([call_5987,call_5989,])
func_5997 = relay.Function([], output)
mod['func_5997'] = func_5997
mod = relay.transform.InferType()(mod)
output = func_5997()
func_5998 = relay.Function([], output)
mutated_mod['func_5998'] = func_5998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4244_call = mod.get_global_var('func_4244')
func_4246_call = mutated_mod.get_global_var('func_4246')
call_6021 = relay.TupleGetItem(func_4244_call(), 2)
call_6022 = relay.TupleGetItem(func_4246_call(), 2)
var_6023 = relay.var("var_6023", dtype = "float64", shape = (5, 14, 16))#candidate|6023|(5, 14, 16)|var|float64
bop_6024 = relay.bitwise_xor(call_6021.astype('uint32'), var_6023.astype('uint32')) # shape=(5, 14, 16)
bop_6027 = relay.bitwise_xor(call_6022.astype('uint32'), var_6023.astype('uint32')) # shape=(5, 14, 16)
func_4493_call = mod.get_global_var('func_4493')
func_4495_call = mutated_mod.get_global_var('func_4495')
var_6033 = relay.var("var_6033", dtype = "float64", shape = (756, 1))#candidate|6033|(756, 1)|var|float64
call_6032 = relay.TupleGetItem(func_4493_call(relay.reshape(var_6033.astype('float64'), [756,])), 2)
call_6034 = relay.TupleGetItem(func_4495_call(relay.reshape(var_6033.astype('float64'), [756,])), 2)
func_2584_call = mod.get_global_var('func_2584')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_6037 = relay.TupleGetItem(func_2584_call(), 0)
call_6038 = relay.TupleGetItem(func_2585_call(), 0)
func_2054_call = mod.get_global_var('func_2054')
func_2061_call = mutated_mod.get_global_var('func_2061')
const_6040 = relay.const([2,10,-1,6,-10,8,-5,2,2,-7,-9,2,-10,9,2,-9,-7,10,-5,1,-9,3,-4,5], dtype = "uint64")#candidate|6040|(24,)|const|uint64
var_6041 = relay.var("var_6041", dtype = "uint64", shape = (72,))#candidate|6041|(72,)|var|uint64
const_6042 = relay.const([5.703393,-6.390799,-7.433543,-6.238971,-2.512210,-6.565415,-8.239005,8.122996,7.733711,-7.459311,-8.798920,7.005116,-3.816257,-5.122835,-1.190926,-1.700476,6.439798,-0.792108,-0.876001,9.697776,-6.721382,-2.767487,2.650274,4.361246,9.708538,3.188253,1.947437,-0.613746,-9.210861,5.953780,5.758993,-0.118282,4.308233,8.263204,9.670415,-6.782095,-3.413772,3.192391,-7.879082,-6.871672,-5.301845,-1.653848,0.338305,3.931068,9.201228,-0.263332,4.004662,0.609663,4.431332,-8.277417,3.697575,-9.321000,-2.281063,1.633725,-5.930529,-7.879541,1.931361,7.926778,-1.149230,-1.434762,0.527473,-5.672363,2.359169,9.791338,-7.421471,-0.243366,-9.426603,-6.170422,-0.165622,-5.681356,1.762536,2.905815,1.440676,3.855672,-8.793323,9.210651,-2.646801,-4.825117,2.593699,0.377676,3.199015,2.424160,-0.395315,-6.881274,0.710929,-8.625461,-8.371471,9.295702,-4.423484,5.228597,3.353878,-7.440732,-9.388436,2.412448,1.323151,-7.113467,-0.781235,-3.098214,6.576268,5.378133,4.817236,0.261061,-4.598349,4.103816,-5.950537,0.539929,5.624206,7.374385,-8.303486,1.586616,8.637786,-3.614763,1.196011,4.637409,-8.233403,7.618404,-6.387927,5.835243,-5.737550,2.602651,9.520608,-0.955213,-2.742701,-4.228292,-1.214836,-8.602218,5.343894,-8.086226,-9.054663,2.574545,-0.226778,-4.732999,-6.549050,5.763798,7.711667,8.418650,8.383017,8.282540,3.669605,-5.604492,-0.426756,-4.026567,-1.190938,-8.515115,-1.754615,0.949268,4.712263,9.378550,3.013668,-5.437441,1.636782,8.504762,4.227861,-3.143755,-4.178822,-0.656214,-0.436651,8.920843,1.215268,1.343799,9.288720,0.766749,-4.579279,-6.134057,4.925312,-1.874699,-4.818422,-1.420022,1.045412,0.869512,5.819051,-1.325844,-9.932534,-3.342640,2.295525,2.896573,-4.834997,5.667918,0.388255,-6.796445,-9.951507,8.875974,-7.322806,-8.925316,-8.565451,-9.931664,-8.305106,2.313303,-7.813040,-9.715952,3.665637,-8.580763,-5.808838,7.349103,-9.671810,5.903186,-7.608131,0.522238,-7.521262,-8.303597,8.105588,-2.710013,3.398865,-2.904582,-5.776543,-3.024861,-6.904608,8.874129,-4.152174,-8.350739,9.673524,-9.857479,-9.783025,-0.035145,1.570103,-1.932296,5.795853,-4.392251,-3.345526,-7.750320,-9.620075,8.007657,-4.221350,9.971068,9.817527,5.408645,0.638222,-3.426574,5.647861,-9.829682,-8.716112,-2.189784,-7.763276,-9.356588,4.976205,3.142445,9.730779,0.547703,3.168086,4.108488,-8.916080,7.193746,-5.345380,-0.970771,4.655243,-7.823029,6.535398,2.039827,-5.558111,-1.870028,3.603703,3.552901,-3.847656,-5.360331,4.323319,-7.299778,-7.135493,-5.085632,-1.183539,-1.664552,4.816495,1.628705,7.320505,-4.578182,-3.585123,-7.344422,-5.135890,6.211054,-1.765626,0.904230,4.282373,9.415976,1.884993,-2.298710,-3.468588,1.803946,6.294905,-5.009804,-0.823416,-4.719940,-1.736858,-4.194620,-7.486363,0.270119,1.645928,1.673133,6.851297,-7.567717,-2.120859,-0.176929,0.717629,-4.193064,-9.031495,-1.291518,-0.925150,5.667842,9.559923,3.375347,1.363598,-2.398089,2.096902,0.037903,-2.353243,-6.491141,-7.271639,-5.278367,-0.233398,8.132966,9.461512,1.251988,-9.464510,-3.816507,-5.065802,-9.643748,1.521705,-2.572851,-9.033980,0.412812,7.486299,3.379269,-4.336748,-1.890298,-4.610258,7.321211,6.454720,4.279917,1.775073,6.606266,-0.317924,-3.536279,-5.607875,-0.762345,-0.326576,2.691958,6.665046,-0.921243,-9.172872,5.399732,-3.618204,9.481579,5.018487,3.641726,-5.359665,8.327886,-6.482695,-3.435355,-8.899847,0.204284,-2.328585,7.371047,2.383868,9.773613,-1.327430,3.915139,3.432233,-8.934313,4.567424,-8.486460,-8.063828,-4.583882,7.626426,3.317635,-1.534808,-2.047523,0.154199,-8.184209,4.705439,2.731411,-4.389192,-4.108244,0.636259,7.905945,3.369888,-8.784541,6.931238,-9.114152,-7.798300,-9.547877,8.415369,5.233536,-2.144374,6.714539,-8.211197,3.767762,2.835608,-4.961310,-8.127495,-3.343743,2.470873,6.847638,4.324950,3.968708,2.194912,-8.289360,3.886441,-3.874288,-3.301218,1.376294,-5.839897,7.429162,2.922803,-8.026523,0.580128,8.578660,1.379336,9.026460,-4.111964,-2.696691,2.005567,-5.433051,8.811192,-7.123561,1.758598,-8.192796,8.260597,9.784163,8.608073,-3.326977,-4.636780,-7.848603,0.825191,5.076249,-9.600639,8.727553,-2.191155,-5.399870,-4.587438,8.438020,2.954118,7.625011,-6.603896,6.211305,-6.455546,-4.748599,0.261498,3.078989,4.234086,-0.647985,-4.956198,5.223901,-9.345150,-4.456681,-4.699837,-4.029467,3.458654,-2.598160,-2.656725,-2.418644,-2.911563,-0.249842,0.776837,-6.498617,-9.287015,-8.583281,-5.661404,8.142323,-3.665809,-7.627291,-0.260967,-8.329828,-2.076284,9.484612,-3.645172,-2.737663,-9.369578,-6.528586,-1.568401,-3.726102,5.923438,4.272217,-4.138953,-4.826557,3.780009,-7.715511,6.215724,2.417892,3.603537,9.235429,-3.439559,-2.113483,-1.037794,-5.882640,3.473074,0.736270,-8.462753,2.172834,4.655935,5.832104,-6.745714,-6.047814,-8.887378,1.761155,-5.527325,9.744802,-6.461670,-5.459503,-5.204107,4.352291,8.953711,-4.373222,-8.044331,7.939810,-2.838896,-2.495438,-5.742370,-2.921038,-2.023712,-9.729284,-0.649151,-7.375548,-7.884324,1.592834,3.180523,-0.866992,9.458997,-7.335178,-4.385479,-6.389870,-3.630503,1.084618,7.882891,4.661592,-9.397902,0.834557,7.136844,9.889856,-4.789988,-0.361962,-5.625672,-1.248259,-1.312855,3.237431,-1.045855,7.693320,-3.203610,9.116905,-1.151583,3.628505,8.992356,-5.398961,-0.493314,-4.899051,-0.531011,4.545440,0.377259,0.211078,-6.478805,9.593161,-3.594489,-8.438143,5.933095,-7.430121,-7.858659,-0.298659,-8.936168,5.443322,2.464822,8.121400,-0.703116,-4.957344,0.695620,0.999078,-3.667907,-8.105527,3.553278,3.777374,2.314098,1.808568,6.983407,6.668218,-9.965389,2.576448,-4.059123,2.702594,5.197317,-8.452549,0.293130,-5.941193,-4.843997,-3.185380,0.606367,5.831614,-6.674109,1.815414,-5.318730,2.548532,1.487925,-8.926044,-3.167456,-7.131664,3.316467,-4.411513,6.541916,-0.487639,2.979290,5.334271,-4.059726,3.656071,2.093629,4.466787,9.952742,-9.386700,2.629921,-3.367411,8.395604,9.031888,-5.626834,2.156461,-5.549787,2.347614,6.333731,9.479518,1.131101,-9.655427,5.686511,7.040298,-6.548876,0.249273,-3.850054,9.988468,-5.928516,0.543553,-2.332059,-4.513235,-2.036194,3.444204,5.696347,-9.378702,1.366707,7.665807,-8.368956,-1.931049,0.305784,-7.010293,0.560861,8.150026,-0.246522,-7.870793,0.132144,5.603222,9.303707,9.468610,0.554472,0.060752,-2.034059,6.270299,4.014661,-9.053353,1.834956,7.160467,-8.808096,7.986369,6.543675,-4.578259,-0.451786,-6.945935,-7.687403,-3.954809,8.113289,-9.041769,4.256000,-3.867934,6.263360,5.255627,9.916180,-1.802880,7.697987,-6.219903,2.569394,0.096325,3.547904,4.665124,-2.272953,9.374733,-4.269694,6.370729,-3.451009,-0.396250,-4.364773,-7.500287,-1.257186,-4.756213,-7.189737,-9.986590,1.278646,-0.813318,-4.121038,-2.212484,3.700385,-5.022794,3.414743,2.511395,-9.778355,-2.712854,9.477407,-1.246241,2.231855,6.267408,-9.918474,2.515598,-5.961593,-1.795159,-1.911237,3.224890,-0.305091,5.524053,6.098527,0.131923,-6.153281,2.821217,8.884234,-5.731967,-9.960108,-8.191940,2.688982,-9.698633,4.063194,-0.148915,3.161053,-0.689248,-4.508865,5.764374,-4.126551,2.227402,-5.697362,2.865330,-8.476176,-7.716214,1.102721,8.431555,7.745642,-1.757992,-3.632021,-0.120145,-0.262718,-7.832835,-9.848868,3.053560,-7.590445,3.922823,6.604795,-7.657166,-8.655650,-3.366033,-9.614590,8.365094,1.979510,-4.200066,-0.990794,0.451671,2.151006,8.339260,3.029908,5.170370,9.860204,0.791637,1.238485,7.921738,-6.237045,1.278848,1.727865,-1.560176,8.720178,1.508612,7.574935,-2.238974,-0.201341,-0.460855,-6.863903,8.586152,2.716003,-3.017126,7.863738,-9.470247,9.376404,-0.790877,-6.923808,3.845780,2.073779,-2.238801,5.376767,-9.935002,-2.221273,-7.593610,-2.820831,4.651939,-3.774531,-3.032460,9.613690,4.649236,-9.987802,5.862725,5.408455,-1.565642,4.831575,9.473506,-1.416888,-2.048749,5.889659,5.922558,9.956989,9.918596,2.229550,0.856777,-9.101029,8.271003,-8.301897,-8.127389,-5.428688,-7.841982,8.775952,-3.131426,5.806361,-9.503360,6.370612,-2.528401,-5.725419,-8.182516,9.673401,-3.256684,4.842682,7.181968,5.712135,5.187026,-1.148782,2.480370,1.110002,2.388023,9.619585,5.260399,-8.010977,8.722943,9.918123,-7.940428,6.167600,9.815202,-7.729935,-8.848275,-5.447988,6.837240,4.331255,-2.853412,8.481526,-0.186211,8.860883,5.568873,3.516209,6.585201,0.316737,-3.267804,-9.556052,8.502363,-8.429780,-0.853345,7.689777,2.643487,9.150097,4.756572,-6.814366,9.903592,-8.715423,5.279181,7.858257,-9.433529,-2.130803,3.872040,-1.448191,6.540036,-3.462294,9.447113,-5.947438,-4.383957,-5.845230,-1.272881,2.087844,2.877894,-3.428007,-3.996701,5.799980,-1.729232,3.506190,-5.291871,-4.447576,-4.819552,-1.888039,-3.222611,-3.919102,-8.269952,1.243293,8.664388,-2.366241,-0.428574,9.827814,-4.851674,5.305936,-2.207500,-4.555285,5.165722,6.609450,8.306063,1.617214,-7.245173,-0.268601,8.154825,4.556815,4.084607,5.357095,-7.845388,-2.639298,6.117390,-8.254161,-4.640248,-6.707312,8.305460,5.283751,9.661778,7.083865,-0.640043,-1.476113,3.823410,8.171654,8.358052,-6.213020,0.331201,-5.277766,-2.643953,1.814995,7.235107,-3.214024,8.334942,7.475645,7.366360,-3.315331,2.738377,7.716827,-3.351829,6.059347,3.821713,2.758705,-8.271088,2.636655,-1.270569,1.083702,-8.643810,0.397681,1.484530,9.407313,0.750256,-2.854617,-5.292010,0.889030,-6.840134,1.989501,-6.892052,2.604041,-9.690049,7.952229,0.292639,5.842314,2.105980,4.026711,9.374927,1.583017,-0.655105,4.329304,3.518131,6.392076,4.514802,1.507338,5.059825,-5.374538,2.970098,0.769516,-9.530401,-4.689150,2.343085,-3.206842,-0.044182,1.420400,-1.314966,-0.584354,3.097572,4.191658,-3.800533,-5.776811,3.891770,9.785393,-4.775833,5.060325,3.601342,-8.360061,3.755007,-0.317877,-3.628710,-6.722142,-3.360126,-8.082929,-8.829446,7.314304,-6.590029,3.367396,-5.469425,-8.984526,5.153700,-8.483046,-6.771587,9.724153,8.834398,1.633437,4.970269,-1.921050,-2.022850,3.844670,7.031423,9.428389,-8.678086,1.933142,-0.987082,7.550018,-1.197151,-0.640843,4.504953,-5.543329,8.788729,-3.460582,-1.342334,5.158107,-7.891053,9.085219,4.373157,5.058859,2.738749,-3.257743,7.305474,3.866409,6.166186,-4.158305,0.441690,-4.990086,-6.144568,6.377248,8.619421,-3.059746,9.108186,2.852199,-4.726703,-3.427205,-6.563668,4.022421,4.684243,8.245781,1.124135,3.934755,-5.794797,7.598266,-0.374335,0.533210,3.135229,0.198167,-0.323275,0.224418,-4.450077,-2.576405,1.558028,-3.734598,0.837161,2.829461,9.396299,9.442907,-3.188420,-4.795310,-0.736174,5.626821,8.872875,-4.189902,3.672715,2.405222,-2.701606,-9.762026,0.878837,-8.411499,-3.075572,2.395049,-1.996492,-0.893679,-1.635284,2.100278,-1.566904,-5.499218,-6.479596,0.639202,4.518108,6.755638,1.435938,1.854856,-8.571659,5.374815,0.815188,-9.224905,3.233964,8.432737,0.232492,-9.374590,1.581587,-7.780545,-6.281099,3.313929,-7.749370,7.435905,5.388286,-7.723499,-6.248312,-1.604125,2.293175,7.648153,3.076826,-9.345976,9.628962,4.905939,8.093198,-5.697523,6.859441,6.769127,-1.433548,9.751631,6.309240,5.620116,6.733376,-0.514995,-2.223391,-8.626233,-9.495743,1.563805,5.721500,-0.689132,-0.968017,-7.408466,-0.156844,8.686484,-3.084983,-7.850651,-8.629795,4.184278,-3.562925,-2.066526,8.364154,-2.745483,2.963743,-9.906598,-2.305174,-5.766076,1.129618,2.027896,-4.174496,9.355368,9.582456,8.041892,8.605389,-5.266231,-8.721392,4.142424,1.186718,3.911485,5.219182,6.936761,-3.574778,-8.563545,9.578429,4.655413,-9.451129,-0.732363,2.476820,1.882599,1.398720,-4.506632,5.547861,1.523925,6.881503,5.371541,-0.652586,3.234086,-6.434686,8.669284,1.352322,-3.588260,1.893915,1.005626,-9.031973,6.214917,-1.091048,0.266257,2.837352,-7.654109,7.858783,9.060031,3.508524,-8.118586,-3.278721,2.573795,-2.564765,1.686328,-5.064061,-9.186603,-7.355715,-2.103088,9.916803,-7.460246,9.419262,-8.709893,-4.337279,-6.322550,-2.969681,-1.295906,-8.866829,-5.930876,4.278246,-3.673787,-9.049310,-0.772281,6.999712,-0.891603,-3.135186,2.803069,1.318444,-1.120319,-3.905989,5.708127,9.275844,8.370804,7.664668,-9.057990,-0.827423,2.232819,-8.948679,4.553213,-1.476680,-8.776717,-7.192698,-0.677501,4.512727,8.624290,-0.891297,-2.932234,-0.374023,3.609470,0.068336,-1.856200,4.575633,6.617903,6.698496,3.395285,-9.605616,-4.399781,4.866223,-8.292254,8.886900,-8.299281,7.707141,4.054090,1.199730,7.633306,7.171085,-9.928731,1.576932,-4.834617,-4.731952,9.604787,1.853056,1.442510,-5.312439,-5.820564,2.478744,0.298944,5.547985,6.569233,-6.645239,-8.699975,-1.860841,-0.083930,-1.864463,6.811761,-0.604316,1.605800,-7.546741,-0.011603,-4.220180,1.991727,-6.777680,-3.303920,1.361494,-3.160787,6.572669,6.077299,0.896812,4.974027,-1.747571,-7.097550,3.777336,3.746425,-8.454727,3.668247,-5.667597,-9.546798,6.543410,-1.644066,-3.965354,-3.779629,1.705919,-6.030481,8.406560,-2.327450,-0.527452,-4.161171,-8.936165,1.336850,-0.795542,-9.207445,9.109051,1.345791,2.206112,-3.525087,-4.519402,1.495247,-2.628199,-8.999282,-0.671221,-3.041501,5.720307,-7.010167,-9.001375,-6.150210,-3.812924,9.958123,0.903459,8.420698,-6.007616,7.192820,-7.374601,6.997282,-2.015965,7.874060,-3.774476,7.037396,-3.274298,-3.810346,8.640443,0.997526,6.834874,-7.241600,8.861770,4.416573,9.384145,-5.820771,-3.522435,-3.428003,0.641661,8.219923,0.050916,9.993002,-4.760194,-0.171329,-3.499001,-2.367426,-7.595701,4.388942,-7.627923,-2.128054,2.892030,2.626831,-9.048923,-6.979621,3.040418,4.494775,-7.497413,8.517339,-4.775348,-8.375109,9.293640,-5.234300,0.783001,-9.782130,1.611835,0.246427,4.131433,-5.442377,3.155684,-0.510743,-9.169332,2.059401,-1.304267,4.993221,7.084192,-8.952227,-4.334398,-3.540810,-8.669515,6.227193,7.957364,-1.507527,-8.775228,-1.856092,2.186563,-7.347402,0.734291,-5.865793,-9.997880,-8.834260,4.911790,1.360610,-6.012060,-4.385436,-8.680343,-3.771907,-3.366766,-9.588915,9.226906,-1.777686,5.197309,-3.941100,1.133640,5.014040,-2.723354,6.645187,-5.494134,-0.078690,-3.029418,6.538195,-0.178936,2.821817,-0.245793,5.438428,-9.669120,-6.298318,3.151295,-3.813380,9.058185,-7.431217,-4.919294,3.135712,-4.625771,9.146358,-8.895948,0.276066,-2.919637,-5.909343,9.373135,-3.847023,0.864051,9.365249,5.205129,9.258438,4.230862,-1.328622,6.124254,-9.661501,7.066653,5.572426,-1.213764,7.386589,1.582345,8.756536,9.374270,-3.437592,-9.787168,6.515203,-6.826003,-7.932175,7.768997,4.174886,2.333456], dtype = "float32")#candidate|6042|(1470,)|const|float32
var_6043 = relay.var("var_6043", dtype = "bool", shape = (208,))#candidate|6043|(208,)|var|bool
var_6044 = relay.var("var_6044", dtype = "int16", shape = (720,))#candidate|6044|(720,)|var|int16
var_6045 = relay.var("var_6045", dtype = "float64", shape = ())#candidate|6045|()|var|float64
call_6039 = relay.TupleGetItem(func_2054_call(relay.reshape(const_6040.astype('uint64'), [1, 12, 2]), relay.reshape(var_6041.astype('uint64'), [3, 12, 2]), relay.reshape(const_6042.astype('float32'), [1470,]), relay.reshape(var_6043.astype('bool'), [208,]), relay.reshape(var_6044.astype('int16'), [720,]), relay.reshape(var_6045.astype('float64'), []), ), 4)
call_6046 = relay.TupleGetItem(func_2061_call(relay.reshape(const_6040.astype('uint64'), [1, 12, 2]), relay.reshape(var_6041.astype('uint64'), [3, 12, 2]), relay.reshape(const_6042.astype('float32'), [1470,]), relay.reshape(var_6043.astype('bool'), [208,]), relay.reshape(var_6044.astype('int16'), [720,]), relay.reshape(var_6045.astype('float64'), []), ), 4)
bop_6047 = relay.greater_equal(call_6032.astype('bool'), relay.reshape(var_6033.astype('bool'), relay.shape_of(call_6032))) # shape=(9, 6, 14)
bop_6050 = relay.greater_equal(call_6034.astype('bool'), relay.reshape(var_6033.astype('bool'), relay.shape_of(call_6034))) # shape=(9, 6, 14)
func_3215_call = mod.get_global_var('func_3215')
func_3218_call = mutated_mod.get_global_var('func_3218')
var_6069 = relay.var("var_6069", dtype = "float32", shape = (420,))#candidate|6069|(420,)|var|float32
call_6068 = relay.TupleGetItem(func_3215_call(relay.reshape(var_6069.astype('float32'), [5, 14, 6])), 0)
call_6070 = relay.TupleGetItem(func_3218_call(relay.reshape(var_6069.astype('float32'), [5, 14, 6])), 0)
func_3882_call = mod.get_global_var('func_3882')
func_3885_call = mutated_mod.get_global_var('func_3885')
var_6080 = relay.var("var_6080", dtype = "float32", shape = (429,))#candidate|6080|(429,)|var|float32
call_6079 = relay.TupleGetItem(func_3882_call(relay.reshape(var_6080.astype('float32'), [39, 11])), 3)
call_6081 = relay.TupleGetItem(func_3885_call(relay.reshape(var_6080.astype('float32'), [39, 11])), 3)
output = relay.Tuple([bop_6024,call_6037,call_6039,const_6040,var_6041,const_6042,var_6043,var_6044,var_6045,bop_6047,call_6068,var_6069,call_6079,var_6080,])
output2 = relay.Tuple([bop_6027,call_6038,call_6046,const_6040,var_6041,const_6042,var_6043,var_6044,var_6045,bop_6050,call_6070,var_6069,call_6081,var_6080,])
func_6087 = relay.Function([var_6023,var_6033,var_6041,var_6043,var_6044,var_6045,var_6069,var_6080,], output)
mod['func_6087'] = func_6087
mod = relay.transform.InferType()(mod)
mutated_mod['func_6087'] = func_6087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6087_call = mutated_mod.get_global_var('func_6087')
var_6089 = relay.var("var_6089", dtype = "float64", shape = (5, 14, 16))#candidate|6089|(5, 14, 16)|var|float64
var_6090 = relay.var("var_6090", dtype = "float64", shape = (756, 1))#candidate|6090|(756, 1)|var|float64
var_6091 = relay.var("var_6091", dtype = "uint64", shape = (72,))#candidate|6091|(72,)|var|uint64
var_6092 = relay.var("var_6092", dtype = "bool", shape = (208,))#candidate|6092|(208,)|var|bool
var_6093 = relay.var("var_6093", dtype = "int16", shape = (720,))#candidate|6093|(720,)|var|int16
var_6094 = relay.var("var_6094", dtype = "float64", shape = ())#candidate|6094|()|var|float64
var_6095 = relay.var("var_6095", dtype = "float32", shape = (420,))#candidate|6095|(420,)|var|float32
var_6096 = relay.var("var_6096", dtype = "float32", shape = (429,))#candidate|6096|(429,)|var|float32
call_6088 = func_6087_call(var_6089,var_6090,var_6091,var_6092,var_6093,var_6094,var_6095,var_6096,)
output = call_6088
func_6097 = relay.Function([var_6089,var_6090,var_6091,var_6092,var_6093,var_6094,var_6095,var_6096,], output)
mutated_mod['func_6097'] = func_6097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mod.get_global_var('func_3948')
func_3949_call = mutated_mod.get_global_var('func_3949')
call_6105 = func_3948_call()
call_6106 = func_3948_call()
var_6113 = relay.var("var_6113", dtype = "float64", shape = (5, 14, 12))#candidate|6113|(5, 14, 12)|var|float64
bop_6114 = relay.subtract(call_6105.astype('int8'), var_6113.astype('int8')) # shape=(5, 14, 12)
bop_6117 = relay.subtract(call_6106.astype('int8'), var_6113.astype('int8')) # shape=(5, 14, 12)
func_4320_call = mod.get_global_var('func_4320')
func_4322_call = mutated_mod.get_global_var('func_4322')
call_6125 = relay.TupleGetItem(func_4320_call(), 0)
call_6126 = relay.TupleGetItem(func_4322_call(), 0)
func_1358_call = mod.get_global_var('func_1358')
func_1361_call = mutated_mod.get_global_var('func_1361')
const_6131 = relay.const([True,True,True,True,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True,False,False,True,False,False,False,True,False,True,False,True,False,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,True,False,True,True,False,False,False,False,False,True,True,False,True,True,True,True,False,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,True,False,False,False,True,False,True,False,True,False,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,True,False,False,False,False,False,False,True,True,False,True,False,True,True,False,False,False,False,True,True,False,False,True,False,False,True,False,False,True,True,True,True,True,True,True,True,True,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,False,True,False,True,True,False,False,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,False,True,True,False,False,True,False,True,False,False,False,False,False,False,False,False,True,True,True,True,False,True,True,False,True,False,True,True,True,True,True,True,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False,False,False,True,True,True,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,True,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,False,True,True,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,False,False,True,False,True,False,False,False,True,False,False,False,True,True,True,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,True,False,True,True,True,True,False,True,False,False,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,False,False,False,True,False,False,True,False,False,False,False,True,True,False,True,False,False,False,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,False,True,False,False,True,True,False,False,True,False,False,True,True,False,False,False,False,True,True,True,True,False,False,True,True,False,True,False,True,True,False,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,False,False,False,False,False,False,False,True,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,True,True,False,True,False,True,True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,False,True,True,True,False,True,False,True,False,False,False,True,False,True,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,True,False,True,False,False,True,True,True,True,True,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,True,False,False,True,False,False,False,False,True,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,False,True,False,True,False,True,False,False,False,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,True,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True,True,True,True,False,False,True,False,False,True,True,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,False,True,False,True,True,True,True,False,False,True,False,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,False,True,False,True,False,True,True,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,False,False,True,True,False,False,True,True,False,False,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,False,True,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,True,True,False,True,False,False,False,False,True,False,True,False,False,True,False,True,True,False,False,True,True,True,True,False,True,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,True,True,True,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,False,True,True,False,True,True,True,True,False,True,False,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True], dtype = "bool")#candidate|6131|(2145,)|const|bool
call_6130 = func_1358_call(relay.reshape(const_6131.astype('bool'), [13, 15, 11]), relay.reshape(const_6131.astype('bool'), [13, 15, 11]), )
call_6132 = func_1358_call(relay.reshape(const_6131.astype('bool'), [13, 15, 11]), relay.reshape(const_6131.astype('bool'), [13, 15, 11]), )
func_4033_call = mod.get_global_var('func_4033')
func_4035_call = mutated_mod.get_global_var('func_4035')
var_6140 = relay.var("var_6140", dtype = "int32", shape = (96, 28))#candidate|6140|(96, 28)|var|int32
call_6139 = relay.TupleGetItem(func_4033_call(relay.reshape(var_6140.astype('int32'), [12, 16, 14])), 1)
call_6141 = relay.TupleGetItem(func_4035_call(relay.reshape(var_6140.astype('int32'), [12, 16, 14])), 1)
bop_6169 = relay.floor_mod(const_6131.astype('float32'), call_6105.astype('float32')) # shape=(5, 14, 2145)
bop_6172 = relay.floor_mod(const_6131.astype('float32'), call_6106.astype('float32')) # shape=(5, 14, 2145)
output = relay.Tuple([bop_6114,call_6125,call_6130,call_6139,var_6140,bop_6169,])
output2 = relay.Tuple([bop_6117,call_6126,call_6132,call_6141,var_6140,bop_6172,])
func_6173 = relay.Function([var_6113,var_6140,], output)
mod['func_6173'] = func_6173
mod = relay.transform.InferType()(mod)
mutated_mod['func_6173'] = func_6173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6173_call = mutated_mod.get_global_var('func_6173')
var_6175 = relay.var("var_6175", dtype = "float64", shape = (5, 14, 12))#candidate|6175|(5, 14, 12)|var|float64
var_6176 = relay.var("var_6176", dtype = "int32", shape = (96, 28))#candidate|6176|(96, 28)|var|int32
call_6174 = func_6173_call(var_6175,var_6176,)
output = call_6174
func_6177 = relay.Function([var_6175,var_6176,], output)
mutated_mod['func_6177'] = func_6177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3094_call = mutated_mod.get_global_var('func_3094')
call_6182 = relay.TupleGetItem(func_3093_call(), 0)
call_6183 = relay.TupleGetItem(func_3094_call(), 0)
var_6184 = relay.var("var_6184", dtype = "float32", shape = (5, 14, 16))#candidate|6184|(5, 14, 16)|var|float32
bop_6185 = relay.add(call_6182.astype('int32'), var_6184.astype('int32')) # shape=(5, 14, 16)
bop_6188 = relay.add(call_6183.astype('int32'), var_6184.astype('int32')) # shape=(5, 14, 16)
output = relay.Tuple([bop_6185,])
output2 = relay.Tuple([bop_6188,])
func_6197 = relay.Function([var_6184,], output)
mod['func_6197'] = func_6197
mod = relay.transform.InferType()(mod)
mutated_mod['func_6197'] = func_6197
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6198 = relay.var("var_6198", dtype = "float32", shape = (5, 14, 16))#candidate|6198|(5, 14, 16)|var|float32
func_6197_call = mutated_mod.get_global_var('func_6197')
call_6199 = func_6197_call(var_6198)
output = call_6199
func_6200 = relay.Function([var_6198], output)
mutated_mod['func_6200'] = func_6200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4643_call = mod.get_global_var('func_4643')
func_4644_call = mutated_mod.get_global_var('func_4644')
call_6213 = relay.TupleGetItem(func_4643_call(), 0)
call_6214 = relay.TupleGetItem(func_4644_call(), 0)
var_6221 = relay.var("var_6221", dtype = "float32", shape = (5, 14, 11))#candidate|6221|(5, 14, 11)|var|float32
bop_6222 = relay.logical_and(call_6213.astype('bool'), var_6221.astype('bool')) # shape=(5, 14, 11)
bop_6225 = relay.logical_and(call_6214.astype('bool'), var_6221.astype('bool')) # shape=(5, 14, 11)
output = relay.Tuple([bop_6222,])
output2 = relay.Tuple([bop_6225,])
func_6226 = relay.Function([var_6221,], output)
mod['func_6226'] = func_6226
mod = relay.transform.InferType()(mod)
var_6227 = relay.var("var_6227", dtype = "float32", shape = (5, 14, 11))#candidate|6227|(5, 14, 11)|var|float32
output = func_6226(var_6227)
func_6228 = relay.Function([var_6227], output)
mutated_mod['func_6228'] = func_6228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5101_call = mod.get_global_var('func_5101')
func_5102_call = mutated_mod.get_global_var('func_5102')
call_6235 = func_5101_call()
call_6236 = func_5101_call()
func_2584_call = mod.get_global_var('func_2584')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_6246 = relay.TupleGetItem(func_2584_call(), 0)
call_6247 = relay.TupleGetItem(func_2585_call(), 0)
func_868_call = mod.get_global_var('func_868')
func_872_call = mutated_mod.get_global_var('func_872')
var_6249 = relay.var("var_6249", dtype = "int16", shape = (720,))#candidate|6249|(720,)|var|int16
var_6250 = relay.var("var_6250", dtype = "float64", shape = ())#candidate|6250|()|var|float64
call_6248 = relay.TupleGetItem(func_868_call(relay.reshape(var_6249.astype('int16'), [12, 4, 15]), relay.reshape(var_6249.astype('int16'), [12, 4, 15]), relay.reshape(var_6250.astype('float64'), []), ), 3)
call_6251 = relay.TupleGetItem(func_872_call(relay.reshape(var_6249.astype('int16'), [12, 4, 15]), relay.reshape(var_6249.astype('int16'), [12, 4, 15]), relay.reshape(var_6250.astype('float64'), []), ), 3)
func_4583_call = mod.get_global_var('func_4583')
func_4584_call = mutated_mod.get_global_var('func_4584')
call_6253 = relay.TupleGetItem(func_4583_call(), 1)
call_6254 = relay.TupleGetItem(func_4584_call(), 1)
func_3755_call = mod.get_global_var('func_3755')
func_3759_call = mutated_mod.get_global_var('func_3759')
const_6269 = relay.const([4.500659,9.979015,1.403429,5.691550,5.149637,0.674288,-0.768251,-3.985745,6.946627,-2.708364,4.272082,3.461744,3.385652,0.458662,-3.007802,-8.562533,2.997487,-5.532755,-4.745438,4.072435,-4.707621,1.231449,2.296504,0.489780,-5.965828,-4.349273,7.362368,-4.833000,6.710755,8.228920,3.378606,1.786614,8.707209,0.233854,7.614000,1.911781,-3.981088,-0.524737,9.755048,-8.706412,7.659295,5.215901,-0.120059,4.545156,9.852408,5.464876,7.256031,8.862193,5.372808,-2.849272,1.671606,-7.590862,-8.485299,9.203816,2.634802,-1.573002,2.898067,0.871933,1.806503,1.090493,-6.188375,-8.161799,4.403521,-6.314907,-0.640435,3.554507,6.950215,7.606331,-7.389407,2.687212,-0.963712,-3.390584,8.904068,3.546589,6.595612,3.220117,-3.435002,1.976021,9.093057,-0.563617,-3.603351,-0.295328,2.527059,3.740805,-1.317629,3.419081,-4.758142,-7.151240,-9.210294,8.306648,-7.353400,7.529767,-4.908376,-0.529431,-7.913594,4.903759,-0.172353,-3.794784,-4.575274,4.783502,-8.209974,5.828955,2.032289,-2.041415,-5.537530,4.672928,-6.397345,1.483319,7.847238,3.145770,-7.549935,-0.403604,-0.946778,-0.017775,-8.539399,6.262097,7.207302,-0.101613,5.340167,-9.050201,-3.809112,-7.598249,-2.010245,7.177739,-6.563722,0.095104,0.523363,4.357785,6.038376,-1.539890,-2.604088,-6.857697,5.132530,-9.291145,-5.740915,-9.816794,-5.325427,9.072917,-0.703190,-3.852035,0.938406,3.154802,9.101918,-4.478616,-3.001927,-2.944954,5.027750,-3.267233,7.950748,1.927606,0.865809,-5.750453,-9.317087,-0.463328,-2.565542,9.069344,5.734562,6.784458,-2.291042,1.338741,-3.866514,1.375200,-6.590044,-5.422341,-7.023279,2.106592,4.277190,9.564074,-5.029319,-6.463099,-7.345236,-5.973653,-6.452530,-4.994967,-9.212640,-6.843222,6.209601,-0.842637,5.754353,-0.057067,-6.854866,-6.647894,5.880215,1.047724,0.596129,3.265473,-2.365890,6.926868,2.333180,7.461791,8.511456,-5.762039,3.745870,0.121062,-1.310518,-4.168051,1.305812,-0.070962,-7.557012,-7.662508,-4.144337,4.702033,-4.631958,0.571008,-9.118443,7.080457,-5.340596,-8.189308,-0.711699,6.359814,1.072185,5.631661,-1.445904,-9.310441,1.463334,-3.941310,-1.966634,-3.931625,3.580892,-3.465656,-7.885504,7.955042,2.563953,-0.731946,3.884590,-0.404668,4.864036,-5.309058,-0.143406,-8.852702,7.380340,5.096466,-7.837718,-2.283172,0.569680,9.243281,-1.945175,6.314960,5.811748,2.883407,5.239928,4.065213,7.067831,-9.681455,-3.365547,-3.698063,2.503709,5.851137,8.060889,8.735872,-0.789322,5.318621,-4.188579,8.135894,-4.988936,-2.490688,-5.055863,0.082419,4.180968,8.991204,-9.053227,-9.206754,1.543588,-8.817726,6.998431,-9.429347,-4.630975,5.943122,-8.156551,-4.817411,7.524960,-0.238586,2.612165,-9.174549,4.884400,-0.811743,5.255895,4.081622,8.899801,7.061994,-1.506068,-6.335211,9.761135,5.027067,-9.775712,6.730475,-9.187524,-3.461491,1.599159,8.667473,-8.257003,-0.147467,-9.867500,5.922550,1.727223,-0.631927,-6.534128,2.995610,-0.703894,7.975963,-8.219857,8.566302,-3.094349,-7.438554,-0.282213,-4.936715,-3.231403,-5.303535,-0.048807,-9.368115,-8.510610,8.172772,8.862226,3.588573,6.659628,9.508494,3.576335,0.268683,-6.966817,5.328524,9.347507,0.595204,-7.040152,-5.716679,5.967407,7.226265,3.514732,-7.437127,3.043495,3.582548,-3.900379,-7.128756,5.772318,2.313942,-2.525576,-2.660564,-0.173080,1.844052,8.789511,-7.721786,-9.185756,-7.479648,-2.356577,-7.090192,-8.401136,2.163152,-6.429554,-8.084246,6.399368,2.667254,-1.383081,5.338306,-9.967965,-4.300609,-8.532017,-0.483668,-5.197649,-0.896283,-3.667028,-8.220410,-4.105031,6.835466,9.637834,-5.241828,-5.387317,-4.475536,4.132935,9.842621,-8.529717,5.360464,-7.026280,8.921059,6.923872,-4.376834,6.354964,-7.582843,-6.694419,-0.258660,-4.001501,-4.519599,7.346585,3.399468,-4.742988,-0.849338,-2.449097,2.703282,1.586028,5.309536,-1.768186,-3.657492,-3.730261,-1.269673,4.895280,2.565070,6.844776,-6.447609,-2.149788,-2.979388,-6.217561,-9.331480,-8.910539,-0.654992,-3.989327,-4.090589,4.909582,-5.623446,-6.225709,-1.204106,-0.870979,6.196624,7.766872,-8.604870,8.314378,-8.238296,3.850955,1.431685,-0.887327,7.203778,4.739602,6.135656,4.596906,9.410311,-6.493257,8.583557,6.406331,4.985337,-1.990384,-4.265707,-5.701534], dtype = "float32")#candidate|6269|(429,)|const|float32
const_6270 = relay.const([5.601691,-2.548476,4.506239,5.309414,-2.366818,-0.281108,-1.991781,6.247070,7.815305,-5.024044,2.421903,-2.251095,-8.185119,-4.604586,-4.589236,-4.376877,3.674871,6.814337,5.851130,-0.420660,7.348390,1.686945,6.823358,9.301479,1.761712,9.382341,-6.666768,-4.762709,-8.725290,-1.425299,2.434393,9.534789,-8.296895,6.456360,2.696497,5.309568,-0.170411,-2.256893,-5.507207,9.367892,5.398486,-2.409271,-9.414726,-9.481294,-1.267834,-7.006902,-0.253609,-5.597664,-1.424663,-7.382611,8.103291,-2.930857,-4.024162,-3.457119,-4.150232,-4.088329,-9.351246,8.886883,1.609482,-1.274639,-7.729685,0.360601,-5.711777,4.099838,6.935902,-7.240588,-2.139648,1.560587,1.203770,9.976092,7.004833,3.411180,-4.290254,-2.232241,-1.502905,4.419573,0.439102,5.005174,7.708974,-1.455966,-1.522507,3.230910,3.198671,6.462264,-8.372271,-7.471710,-4.035827,-0.397886,-1.717910,7.077681,8.527092,-0.060590,1.279985,-7.438012,-7.167565,-6.296012,3.265241,5.929085,-6.644595,1.227492,5.951508,-4.500223,5.843970,7.755348,3.611123,-8.344062,2.166813,-2.529702,0.382094,1.437445,3.381210,-7.616996,-8.241771,-5.026238,5.735736,6.244554,3.966164,-4.493865,-9.033986,9.467668,-7.494238,-1.789885,-5.787089,7.823770,2.747023,2.899959,-1.978335,3.074725,-9.815440,9.444831,6.682611,-3.658295,-5.422045,0.229719,-5.632381,-8.350880,2.461524,9.017201,4.449656,5.895689,7.801505,-2.034954,-2.725909,-7.546957,2.533500,-4.455956,6.595408,8.420231,-7.855620,-7.640724,7.275860,4.835789,-6.785502,-0.265007,3.242168,-0.551233,2.192218,-1.913102,0.434865,-5.239422,-4.156113,5.662465,8.745818,2.927305,-1.154341,6.181116,7.153176,-0.091528,7.998617,4.759370,-4.661764,6.977325,-6.957563,6.122044,9.530719,-2.429413,8.403246,2.767061,8.457925,-1.511872,-0.108325,8.355311,-3.696978,7.895890,2.923433,1.917664,8.601731,1.442770,-3.248519,6.852874,-0.088270,-9.055020,7.763863,-3.922716,-8.550486,-3.906611,-4.605382,-3.431633,9.605344,-1.793865,4.973232,-7.347229,9.275402,-9.924035,3.745836,7.004849,-2.801019,8.645657,1.902929,-4.067011,-9.242460,-6.762059,-0.081157,6.392495,4.262441,-8.780797,1.172966,6.141901,-0.693232,7.149505,7.350299,7.816939,-9.211091,4.869711,7.713977,6.108529,6.201032,-5.360728,4.094360,9.086887,-7.761817,9.788870,6.114357,-3.275741,-5.979449,2.122620,-3.547045,0.515107,4.974461,-2.639156,-5.204825,-1.932275,2.649303,-6.100742,-0.501911,7.386089,3.989909,2.708537,7.412066,7.248738,9.533712,6.142864,7.419886,-6.591566,-6.571424,8.863842,-3.806955,-8.652860,6.978908,-6.939713,-5.508248,-0.208788,-4.180797,-5.719533,2.952658,-6.756329,-9.518227,-2.692951,-5.243452,-5.445344,3.998529,-4.983821,5.892155,0.829042,9.276642,8.322005,-1.772028,2.663922,4.505242,-1.986254,7.543492,4.147802,4.411455,-3.401278,-2.783335,-2.544989,-5.789174,8.206023,6.645605,-8.281646,4.716883,-2.599635,8.490334,-8.890905,-1.393145,0.805308,5.064241,3.220950,-3.042961,2.186010,7.736984,-6.982420,-6.370737,6.705144,8.180549,-9.661201,2.181462,-0.487090,-8.753359,1.204283,6.159631,9.740099,3.045693,0.202748,-7.702133,-4.556708,-7.390555,4.395205,6.575511,-2.651751,9.603590,4.138347,-6.778622,4.335842,-5.858661,7.902242,-5.948327,8.395539,1.404803,4.999156,6.555099,1.048521,1.747361,-8.780008,-6.741300,8.826223,9.294908,-6.708285,-0.971995,-4.067843,9.564065,-6.512392,-0.226582,6.570463,5.109244,2.878417,6.342724,-3.829264,-0.291296,1.543015,-8.731648,-3.026892,8.994171,0.318721,-1.560860,-0.390455,1.997987,1.337759,-9.374820,8.441653,-8.574971,-7.219399,-1.430409,-1.556896,3.873456,0.878850,-6.916916,8.519187,-7.296217,8.166349,9.060431,-3.172206,-4.283051,-8.514294,6.423465,-2.900817,4.917813,7.328787,-1.703491,-3.338589,4.157950,8.799174,3.362144,8.959739,4.365877,-9.832264,-9.413606,1.172730,8.421795,-9.041070,6.714765,-0.079960,6.714535,-6.587273,5.421865,-4.972108,-2.899761,-9.209956,-4.940652,-9.890189,-1.332468,-9.531528,4.102366,0.742255,-0.100676,4.145822,5.875978,-4.829319,1.623540,-4.960887,2.853984,3.348510,-4.298078,6.973633,7.451556,-8.064020,-8.282432,7.822900,-1.741803,-7.875051], dtype = "float32")#candidate|6270|(420,)|const|float32
call_6268 = relay.TupleGetItem(func_3755_call(relay.reshape(const_6269.astype('float32'), [429,]), relay.reshape(const_6270.astype('float32'), [420,]), ), 5)
call_6271 = relay.TupleGetItem(func_3759_call(relay.reshape(const_6269.astype('float32'), [429,]), relay.reshape(const_6270.astype('float32'), [420,]), ), 5)
func_4818_call = mod.get_global_var('func_4818')
func_4819_call = mutated_mod.get_global_var('func_4819')
call_6294 = relay.TupleGetItem(func_4818_call(), 0)
call_6295 = relay.TupleGetItem(func_4819_call(), 0)
var_6310 = relay.var("var_6310", dtype = "float32", shape = (5, 14, 7))#candidate|6310|(5, 14, 7)|var|float32
bop_6311 = relay.less(call_6294.astype('bool'), var_6310.astype('bool')) # shape=(5, 14, 7)
bop_6314 = relay.less(call_6295.astype('bool'), var_6310.astype('bool')) # shape=(5, 14, 7)
func_4173_call = mod.get_global_var('func_4173')
func_4177_call = mutated_mod.get_global_var('func_4177')
var_6326 = relay.var("var_6326", dtype = "uint8", shape = (1155,))#candidate|6326|(1155,)|var|uint8
call_6325 = relay.TupleGetItem(func_4173_call(relay.reshape(var_6326.astype('uint8'), [7, 11, 15]), relay.reshape(var_6326.astype('uint8'), [7, 11, 15]), ), 0)
call_6327 = relay.TupleGetItem(func_4177_call(relay.reshape(var_6326.astype('uint8'), [7, 11, 15]), relay.reshape(var_6326.astype('uint8'), [7, 11, 15]), ), 0)
output = relay.Tuple([call_6235,call_6246,call_6248,var_6249,var_6250,call_6253,call_6268,const_6269,const_6270,bop_6311,call_6325,var_6326,])
output2 = relay.Tuple([call_6236,call_6247,call_6251,var_6249,var_6250,call_6254,call_6271,const_6269,const_6270,bop_6314,call_6327,var_6326,])
func_6333 = relay.Function([var_6249,var_6250,var_6310,var_6326,], output)
mod['func_6333'] = func_6333
mod = relay.transform.InferType()(mod)
mutated_mod['func_6333'] = func_6333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6333_call = mutated_mod.get_global_var('func_6333')
var_6335 = relay.var("var_6335", dtype = "int16", shape = (720,))#candidate|6335|(720,)|var|int16
var_6336 = relay.var("var_6336", dtype = "float64", shape = ())#candidate|6336|()|var|float64
var_6337 = relay.var("var_6337", dtype = "float32", shape = (5, 14, 7))#candidate|6337|(5, 14, 7)|var|float32
var_6338 = relay.var("var_6338", dtype = "uint8", shape = (1155,))#candidate|6338|(1155,)|var|uint8
call_6334 = func_6333_call(var_6335,var_6336,var_6337,var_6338,)
output = call_6334
func_6339 = relay.Function([var_6335,var_6336,var_6337,var_6338,], output)
mutated_mod['func_6339'] = func_6339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4949_call = mod.get_global_var('func_4949')
func_4950_call = mutated_mod.get_global_var('func_4950')
call_6341 = relay.TupleGetItem(func_4949_call(), 0)
call_6342 = relay.TupleGetItem(func_4950_call(), 0)
var_6344 = relay.var("var_6344", dtype = "float32", shape = (5, 14, 7))#candidate|6344|(5, 14, 7)|var|float32
bop_6345 = relay.less_equal(call_6341.astype('bool'), var_6344.astype('bool')) # shape=(5, 14, 7)
bop_6348 = relay.less_equal(call_6342.astype('bool'), var_6344.astype('bool')) # shape=(5, 14, 7)
uop_6354 = relay.sqrt(bop_6345.astype('float32')) # shape=(5, 14, 7)
uop_6356 = relay.sqrt(bop_6348.astype('float32')) # shape=(5, 14, 7)
output = uop_6354
output2 = uop_6356
func_6372 = relay.Function([var_6344,], output)
mod['func_6372'] = func_6372
mod = relay.transform.InferType()(mod)
mutated_mod['func_6372'] = func_6372
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6373 = relay.var("var_6373", dtype = "float32", shape = (5, 14, 7))#candidate|6373|(5, 14, 7)|var|float32
func_6372_call = mutated_mod.get_global_var('func_6372')
call_6374 = func_6372_call(var_6373)
output = call_6374
func_6375 = relay.Function([var_6373], output)
mutated_mod['func_6375'] = func_6375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4837_call = mod.get_global_var('func_4837')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_6377 = relay.TupleGetItem(func_4837_call(), 0)
call_6378 = relay.TupleGetItem(func_4838_call(), 0)
output = relay.Tuple([call_6377,])
output2 = relay.Tuple([call_6378,])
func_6396 = relay.Function([], output)
mod['func_6396'] = func_6396
mod = relay.transform.InferType()(mod)
mutated_mod['func_6396'] = func_6396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6396_call = mutated_mod.get_global_var('func_6396')
call_6397 = func_6396_call()
output = call_6397
func_6398 = relay.Function([], output)
mutated_mod['func_6398'] = func_6398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3362_call = mod.get_global_var('func_3362')
func_3364_call = mutated_mod.get_global_var('func_3364')
call_6474 = relay.TupleGetItem(func_3362_call(), 0)
call_6475 = relay.TupleGetItem(func_3364_call(), 0)
func_2857_call = mod.get_global_var('func_2857')
func_2858_call = mutated_mod.get_global_var('func_2858')
call_6481 = relay.TupleGetItem(func_2857_call(), 0)
call_6482 = relay.TupleGetItem(func_2858_call(), 0)
output = relay.Tuple([call_6474,call_6481,])
output2 = relay.Tuple([call_6475,call_6482,])
func_6483 = relay.Function([], output)
mod['func_6483'] = func_6483
mod = relay.transform.InferType()(mod)
mutated_mod['func_6483'] = func_6483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6483_call = mutated_mod.get_global_var('func_6483')
call_6484 = func_6483_call()
output = call_6484
func_6485 = relay.Function([], output)
mutated_mod['func_6485'] = func_6485
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6532 = relay.var("var_6532", dtype = "int8", shape = (1, 13, 10))#candidate|6532|(1, 13, 10)|var|int8
var_6533 = relay.var("var_6533", dtype = "int8", shape = (14, 13, 10))#candidate|6533|(14, 13, 10)|var|int8
bop_6534 = relay.left_shift(var_6532.astype('int8'), var_6533.astype('int8')) # shape=(14, 13, 10)
func_5945_call = mod.get_global_var('func_5945')
func_5946_call = mutated_mod.get_global_var('func_5946')
call_6546 = relay.TupleGetItem(func_5945_call(), 0)
call_6547 = relay.TupleGetItem(func_5946_call(), 0)
output = relay.Tuple([bop_6534,call_6546,])
output2 = relay.Tuple([bop_6534,call_6547,])
func_6559 = relay.Function([var_6532,var_6533,], output)
mod['func_6559'] = func_6559
mod = relay.transform.InferType()(mod)
mutated_mod['func_6559'] = func_6559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6559_call = mutated_mod.get_global_var('func_6559')
var_6561 = relay.var("var_6561", dtype = "int8", shape = (1, 13, 10))#candidate|6561|(1, 13, 10)|var|int8
var_6562 = relay.var("var_6562", dtype = "int8", shape = (14, 13, 10))#candidate|6562|(14, 13, 10)|var|int8
call_6560 = func_6559_call(var_6561,var_6562,)
output = call_6560
func_6563 = relay.Function([var_6561,var_6562,], output)
mutated_mod['func_6563'] = func_6563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4104_call = mod.get_global_var('func_4104')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_6631 = func_4104_call()
call_6632 = func_4104_call()
output = call_6631
output2 = call_6632
func_6633 = relay.Function([], output)
mod['func_6633'] = func_6633
mod = relay.transform.InferType()(mod)
output = func_6633()
func_6634 = relay.Function([], output)
mutated_mod['func_6634'] = func_6634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5316_call = mod.get_global_var('func_5316')
func_5318_call = mutated_mod.get_global_var('func_5318')
call_6635 = relay.TupleGetItem(func_5316_call(), 0)
call_6636 = relay.TupleGetItem(func_5318_call(), 0)
func_941_call = mod.get_global_var('func_941')
func_945_call = mutated_mod.get_global_var('func_945')
var_6641 = relay.var("var_6641", dtype = "float32", shape = (1470,))#candidate|6641|(1470,)|var|float32
var_6642 = relay.var("var_6642", dtype = "bool", shape = (208,))#candidate|6642|(208,)|var|bool
call_6640 = relay.TupleGetItem(func_941_call(relay.reshape(var_6641.astype('float32'), [7, 14, 15]), relay.reshape(var_6642.astype('bool'), [4, 4, 13]), ), 4)
call_6643 = relay.TupleGetItem(func_945_call(relay.reshape(var_6641.astype('float32'), [7, 14, 15]), relay.reshape(var_6642.astype('bool'), [4, 4, 13]), ), 4)
func_4793_call = mod.get_global_var('func_4793')
func_4794_call = mutated_mod.get_global_var('func_4794')
call_6645 = relay.TupleGetItem(func_4793_call(), 0)
call_6646 = relay.TupleGetItem(func_4794_call(), 0)
output = relay.Tuple([call_6635,call_6640,var_6641,var_6642,call_6645,])
output2 = relay.Tuple([call_6636,call_6643,var_6641,var_6642,call_6646,])
func_6648 = relay.Function([var_6641,var_6642,], output)
mod['func_6648'] = func_6648
mod = relay.transform.InferType()(mod)
mutated_mod['func_6648'] = func_6648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6648_call = mutated_mod.get_global_var('func_6648')
var_6650 = relay.var("var_6650", dtype = "float32", shape = (1470,))#candidate|6650|(1470,)|var|float32
var_6651 = relay.var("var_6651", dtype = "bool", shape = (208,))#candidate|6651|(208,)|var|bool
call_6649 = func_6648_call(var_6650,var_6651,)
output = call_6649
func_6652 = relay.Function([var_6650,var_6651,], output)
mutated_mod['func_6652'] = func_6652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4837_call = mod.get_global_var('func_4837')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_6677 = relay.TupleGetItem(func_4837_call(), 1)
call_6678 = relay.TupleGetItem(func_4838_call(), 1)
output = call_6677
output2 = call_6678
func_6692 = relay.Function([], output)
mod['func_6692'] = func_6692
mod = relay.transform.InferType()(mod)
mutated_mod['func_6692'] = func_6692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6692_call = mutated_mod.get_global_var('func_6692')
call_6693 = func_6692_call()
output = call_6693
func_6694 = relay.Function([], output)
mutated_mod['func_6694'] = func_6694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4986_call = mod.get_global_var('func_4986')
func_4988_call = mutated_mod.get_global_var('func_4988')
call_6702 = func_4986_call()
call_6703 = func_4986_call()
output = call_6702
output2 = call_6703
func_6741 = relay.Function([], output)
mod['func_6741'] = func_6741
mod = relay.transform.InferType()(mod)
output = func_6741()
func_6742 = relay.Function([], output)
mutated_mod['func_6742'] = func_6742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4759_call = mod.get_global_var('func_4759')
func_4761_call = mutated_mod.get_global_var('func_4761')
call_6761 = relay.TupleGetItem(func_4759_call(), 2)
call_6762 = relay.TupleGetItem(func_4761_call(), 2)
var_6765 = relay.var("var_6765", dtype = "float64", shape = (5, 14, 10))#candidate|6765|(5, 14, 10)|var|float64
bop_6766 = relay.not_equal(call_6761.astype('bool'), var_6765.astype('bool')) # shape=(5, 14, 10)
bop_6769 = relay.not_equal(call_6762.astype('bool'), var_6765.astype('bool')) # shape=(5, 14, 10)
func_5052_call = mod.get_global_var('func_5052')
func_5056_call = mutated_mod.get_global_var('func_5056')
const_6771 = relay.const([3,5,1,9,-2,3,-5,5], dtype = "int8")#candidate|6771|(8,)|const|int8
const_6772 = relay.const([-7,-5,6,3,-7,10,-3,3,-10,-5,4,-3,1,7,-3,-7,-5,-1,2,-5,-6,-10,7,-7,8,6,-9,10,-1,8,-9,6,-7,-5,4,-1,4,-9,5,-9,-10,-6,8,-9,-10,2,-1,-3,9,9,-7,-4,-10,-3,-9,-7,-9,-7,6,5,4,5,-8,-4,-8,10,1,-6,7,5,2,-6,-2,8,-1,-6,-2,10,1,9,-7,5,-5,9,10,1,-4,5,-1,8,7,9,-4,1,5,5,1,1,10,-9,4,4,-6,-5,-3,-1,6,-2,-2,-6,-5,10,10,3,9,-2,-9,-10,7,-3,10,-3,-7,5,-9,6,-1,-1,6,-10,-3,10,1,8,7,10,-9,-4,-9,-4,1,4,4,2,7,-7,-6,-4,-6,7,-6,-3,-2,-9,-7,1,3,-9,-9,7,4,-6,-10,9,3,-1,5,-3,-10,-7,-5,4,-4,-5,7,10,-7,-4,-9,2,1,2,-7,10,-7,-4,-7,-10,-5,-7,8,-4], dtype = "int8")#candidate|6772|(192,)|const|int8
call_6770 = relay.TupleGetItem(func_5052_call(relay.reshape(const_6771.astype('int8'), [8,]), relay.reshape(const_6772.astype('int8'), [192,]), ), 0)
call_6773 = relay.TupleGetItem(func_5056_call(relay.reshape(const_6771.astype('int8'), [8,]), relay.reshape(const_6772.astype('int8'), [192,]), ), 0)
bop_6786 = relay.logical_xor(bop_6766.astype('int16'), relay.reshape(var_6765.astype('int16'), relay.shape_of(bop_6766))) # shape=(5, 14, 10)
bop_6789 = relay.logical_xor(bop_6769.astype('int16'), relay.reshape(var_6765.astype('int16'), relay.shape_of(bop_6769))) # shape=(5, 14, 10)
bop_6790 = relay.bitwise_or(const_6772.astype('uint32'), call_6761.astype('uint32')) # shape=(5, 14, 192)
bop_6793 = relay.bitwise_or(const_6772.astype('uint32'), call_6762.astype('uint32')) # shape=(5, 14, 192)
output = relay.Tuple([call_6770,const_6771,bop_6786,bop_6790,])
output2 = relay.Tuple([call_6773,const_6771,bop_6789,bop_6793,])
func_6797 = relay.Function([var_6765,], output)
mod['func_6797'] = func_6797
mod = relay.transform.InferType()(mod)
var_6798 = relay.var("var_6798", dtype = "float64", shape = (5, 14, 10))#candidate|6798|(5, 14, 10)|var|float64
output = func_6797(var_6798)
func_6799 = relay.Function([var_6798], output)
mutated_mod['func_6799'] = func_6799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5488_call = mod.get_global_var('func_5488')
func_5490_call = mutated_mod.get_global_var('func_5490')
call_6842 = relay.TupleGetItem(func_5488_call(), 1)
call_6843 = relay.TupleGetItem(func_5490_call(), 1)
output = call_6842
output2 = call_6843
func_6844 = relay.Function([], output)
mod['func_6844'] = func_6844
mod = relay.transform.InferType()(mod)
mutated_mod['func_6844'] = func_6844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6844_call = mutated_mod.get_global_var('func_6844')
call_6845 = func_6844_call()
output = call_6845
func_6846 = relay.Function([], output)
mutated_mod['func_6846'] = func_6846
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6890 = relay.var("var_6890", dtype = "float64", shape = (10, 6, 10))#candidate|6890|(10, 6, 10)|var|float64
uop_6891 = relay.exp(var_6890.astype('float64')) # shape=(10, 6, 10)
var_6901 = relay.var("var_6901", dtype = "float64", shape = (10, 6, 10))#candidate|6901|(10, 6, 10)|var|float64
bop_6902 = relay.greater(uop_6891.astype('bool'), relay.reshape(var_6901.astype('bool'), relay.shape_of(uop_6891))) # shape=(10, 6, 10)
bop_6906 = relay.equal(uop_6891.astype('bool'), relay.reshape(var_6890.astype('bool'), relay.shape_of(uop_6891))) # shape=(10, 6, 10)
func_2329_call = mod.get_global_var('func_2329')
func_2331_call = mutated_mod.get_global_var('func_2331')
var_6946 = relay.var("var_6946", dtype = "float32", shape = (429,))#candidate|6946|(429,)|var|float32
call_6945 = func_2329_call(relay.reshape(var_6946.astype('float32'), [3, 13, 11]))
call_6947 = func_2329_call(relay.reshape(var_6946.astype('float32'), [3, 13, 11]))
output = relay.Tuple([bop_6902,bop_6906,call_6945,var_6946,])
output2 = relay.Tuple([bop_6902,bop_6906,call_6947,var_6946,])
func_6954 = relay.Function([var_6890,var_6901,var_6946,], output)
mod['func_6954'] = func_6954
mod = relay.transform.InferType()(mod)
var_6955 = relay.var("var_6955", dtype = "float64", shape = (10, 6, 10))#candidate|6955|(10, 6, 10)|var|float64
var_6956 = relay.var("var_6956", dtype = "float64", shape = (10, 6, 10))#candidate|6956|(10, 6, 10)|var|float64
var_6957 = relay.var("var_6957", dtype = "float32", shape = (429,))#candidate|6957|(429,)|var|float32
output = func_6954(var_6955,var_6956,var_6957,)
func_6958 = relay.Function([var_6955,var_6956,var_6957,], output)
mutated_mod['func_6958'] = func_6958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2975_call = mod.get_global_var('func_2975')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_7057 = func_2975_call()
call_7058 = func_2975_call()
func_1247_call = mod.get_global_var('func_1247')
func_1253_call = mutated_mod.get_global_var('func_1253')
var_7071 = relay.var("var_7071", dtype = "int32", shape = (286, 6))#candidate|7071|(286, 6)|var|int32
var_7072 = relay.var("var_7072", dtype = "float64", shape = ())#candidate|7072|()|var|float64
const_7073 = relay.const([0.984720,5.460924,3.342340,8.409262,1.450559,-7.618501,-3.040688,1.890451,-3.674941,-4.855822,3.170718,4.906384,9.044601,0.107268,-5.795389,-2.390951,8.704827,-1.995153,7.948256,-7.370855,-0.829070,-6.878538,-9.597601,-9.245388,4.659329,7.567574,4.266905,-9.103855,8.768983,2.461438,0.928243,0.965828,6.839342,5.090617,0.138123,-7.125694,-7.759608,1.992967,-7.107720,2.946771,-4.765453,-6.018212,-1.239240,9.841568,0.042723,7.426453,-5.684662,9.177394,7.999318,0.492389,-7.123043,-2.270476,-3.296183,3.275204,3.653831,-7.829972,-5.589805,2.585721,-1.558673,-0.229512,4.369575,-0.678571,-0.214802,-1.359284,-9.891634,-8.617426,6.829275,9.427467,-8.575955,-7.203547,2.851880,-6.346868,-5.967536,-2.414395,-5.296495,-5.397903,9.243711,4.679798,-3.692191,6.757665,8.359365,3.022024,-1.432086,4.212909,-2.619373,2.610207,-1.854587,4.199395,0.016509,2.575285,-6.909521,-5.175911,-6.590658,4.310505,0.075740,7.096765,-2.384697,2.472336,8.155513,-4.680151,-2.656273,-0.253515,9.221878,4.913899,4.381067,-1.391943,-0.348741,2.937578,-1.268468,8.188112,9.148796,2.131514,-5.076469,9.773084,6.081374,4.626859,4.917585,-5.898819,3.031760,9.961591,7.155573,-9.209619,-1.948227,-1.546810,-4.478769,-6.315542,0.038704,3.450928,-8.822784,3.756598,-4.616328,-6.843794,-0.750702,-0.395878,-5.190217,4.298749,2.325607,-4.956662,5.097770,5.114334,-3.208702,-8.409609,2.340249,2.167762,-8.465546,1.111203,7.154641,-5.036284,-6.244929,9.211271,-8.613146,-5.101418,-1.473700,-6.128968,-3.485789,7.107188,6.445600,-0.786232,-5.222307,7.035767,-8.215395,4.732124,-7.621668,-5.830925,5.825353,9.973066,-1.880133,7.617265,-0.518368,-7.434271,5.942925,-0.944887,5.952521,5.584541,-8.270956,-2.773758,0.855714,2.837410,9.407322,3.810473,4.425094,2.158094,-6.456165,4.129126,-2.946493,6.202589,8.741085,-4.740140,-6.325176,-6.269402,-5.262877,-9.889563,6.894482,2.927243,8.954623,5.449545,-5.641501,-0.734282,5.490630,3.949401,0.192045,-2.126237,-8.087551,-2.369140,-2.810236,-8.838177,7.072221,4.791519,-5.140250,-1.774937,1.321288,-1.592196,-8.238883,-4.746852,-9.782075,8.423783,5.317343,3.328393,-2.937086,-6.846328,-8.398010,-8.366672,9.196018,-5.305926,-5.361350,4.579393,-2.078237,0.109665,-2.053979,8.338763,-8.802810,4.693367,-7.226680,4.540045,-8.198817,5.957228,-3.865470,-1.211398,6.406433,2.676090,2.761695,8.565526,5.710459,-8.641559,3.113050,-2.473323,-8.754047,7.033828,-9.630183,-6.178277,-8.235372,-9.405933,0.921601,6.933442,7.643822,-5.888903,3.553211,1.993862,9.762175,2.804124,6.228083,-8.288793,1.192265,-1.684707,-7.469007,-9.540761,-2.613013,-7.428561,1.393325,2.863360,-4.118853,-9.931237,2.361727,-3.523564,2.872785,1.948091,-2.104949,7.684477,3.434153,2.571789,-3.472576,3.036173,-4.101201,-4.793165,8.317640,1.341331,0.120070,8.858021,0.028716,6.123938,1.481672,5.201313,-1.184860,6.063722,-7.695322,-8.062688,-7.378600,2.559340,8.820031,3.744805,9.412412,-9.470402,-0.112117,-3.199951,-7.914238,-0.278688,-6.601554,0.057729,-9.198135,6.715673,3.502681,8.901345,2.821962,4.064736,-0.063159,3.916836,0.510691,0.439327,2.338576,2.174126,8.040598,-6.280801,0.942696,8.456372,-8.371513,-9.206883,-5.633925,-5.628086,-4.687958,-2.379373,-4.067322,0.975159,5.908256,1.590293,-6.240339,-8.055480,-3.060145,6.082642,-7.041746,-9.090625,0.506702,7.509167,-8.137914,6.896468,7.190155,-6.520122,0.968384,9.543331,-6.709196,-3.519710,2.773680,-2.941163,4.344778,4.999597,-7.531871,-8.596818,-8.479617,2.130452,3.647066,3.674544,-3.980767,-7.429659,1.124102,1.599023,-7.048588,-0.185158,-2.318051,-3.581972,6.451892,-5.016305,3.953463,0.182166,-6.187399,-3.735586,-1.944045,-6.467382,9.516316,-3.767987,-3.584352,-5.874375,4.951888,-3.304456,-3.331220,6.101396,-0.056537,9.110251,7.802596,5.392913,-9.482820,0.516138,2.196134,2.040103,2.627614,-1.102436,0.584384,-8.213233,1.911802,4.762848,5.452609,1.776731,-6.947288,7.395514,-6.862016,8.519851,8.096574,8.425225,-1.743616,3.867208,-3.916832,8.235150,6.872757,6.381698,-7.698398,-9.233783,3.202926,9.522750,-9.812054,4.931290,6.951501,1.213313,-5.215499,0.367008,-5.118476,-7.389436,-3.934296,-3.164183,9.817527,3.510244,-6.096778,-4.943005,2.956648,5.534498,-5.810879,-3.970340,8.913717,-1.031091,-6.639591,-8.934919,0.144286,-1.440427,-4.684828,9.319955,-3.671175,4.358590,-0.162135,-8.965085,7.855502,5.090366,2.250341,3.363933,-2.030353,-9.754086,-1.564179,8.240085,0.891915,3.307161,-9.908195,6.229555,7.312144,-6.974429,-4.557340,-2.906239,-4.507971,-7.390676,8.002093,0.003532,0.259684,1.531271,-3.895691,1.996451,-9.251599,-8.329132,8.743775,0.012596,-0.858440,-3.580103,-5.807690,9.987268,8.697262,-5.766685,9.449093,-8.225299,6.457616,-6.930308,-3.205611,4.836591,5.436797,5.398809,-5.162699,7.209402,-2.941211,5.713488,-7.872037,-6.868912,-0.421321,1.790318,-5.009836,4.415948,8.117552,6.620522,2.228835,-7.115530,-7.999135,-3.499622,-7.612284,-8.931957,4.714004,1.370540,-3.654759,8.100425,9.538638,-9.598871,-0.594240,3.134245,-6.173871,2.895553,-8.515693,-3.148072,-4.381639,0.910311,-9.988576,4.382597,4.877218,-0.346394,-1.639772,5.768295,-6.955227,8.875250,2.644242,-1.399005,-9.160229,1.693695,2.561620,2.394902,-3.935975,-6.084278,-8.557302,6.670219,-9.933858,9.762154,3.057858,-4.058222,2.197556,8.044764,1.823053,-1.797245,0.063134,-4.654488,4.518207,-4.732078,-1.408174,-3.184609,8.006648,-4.959976,6.824094,-8.982850,-2.469561,-1.185101,5.153604,-9.195543,7.134071,-2.647515,2.463244,4.485627,-1.867073,-2.670588,-5.458867,-7.339467,-3.498407,-3.991902,-3.289742,9.947531,3.413407,-3.118242,9.076343,3.164709,4.282110,4.832679,-3.586264,4.064118,2.123353,5.714753,6.952354,5.803976,3.429701,4.993637,-2.132013,-3.213948,2.460347,-5.113613,-9.472374,3.809454,0.116383,-8.993554,-7.391431,9.611545,5.710686,4.270776,-1.564283,4.429349,-5.045521,8.221281,8.739157,7.227582,8.961250,7.644850,7.463102,3.939569,4.615397,6.781803,-0.724688,6.464557,0.490738,-0.264487,2.218173,0.786283,-8.182031,0.428976,3.314823,-6.594958,-8.175723,-9.506169,3.741137,6.847769,4.678982,-2.712624,0.388532,4.641588,-5.558539,-4.122356,3.611358,-0.309223,-3.433112,3.690756,-8.345514,-2.744180,8.827219,-8.615939,2.134459,-5.007875,-1.920228,-3.935690,-0.192734,8.114771,2.460226,3.631834,8.155780,-7.388717,7.769468,1.191045,-7.721129,-1.925685,-8.459844,-2.234487,-6.844191,-1.489851,9.553712,-6.691843,5.196297,-3.424200,3.384511,1.799533,6.838142,9.682478,-9.355539,-5.130125,-7.474211,-6.589125,-5.945910,-2.695829,3.160222,9.637431,1.821460,1.489828,5.384934,0.974721,2.917655,-3.080865,6.940840,6.707013,-1.934499,-5.445115,-5.696156,-8.712096,2.046051,-0.735173,4.327078,4.659294,5.614848,3.120240,-7.246414,-2.408071,-8.636723,8.824398,-2.695413,1.698348,-7.533440,2.254891,-4.105727,0.098746,7.982129,7.030573,-6.511380,0.546036,5.856480,-5.806050,-0.803424,5.474418,5.344997,-0.880218,1.427159,5.259410,5.548611,-6.737059,-6.357925,0.316084,8.024196,-5.151482,2.078846,-3.091918,8.658009,-3.676516,3.367725,-4.618140,-3.684226,-3.699543,-8.894004,-9.875686,-9.067345,9.737276,-3.537763,-1.508058,9.692834,3.266111,1.464022,7.282960,6.835329,-4.425664,5.656308,2.462387,2.064283,9.893575,6.947950,8.570816,7.054198,-9.231378,5.857544,2.400710,-1.063427,5.198695,-2.883149,-0.853601,-5.229930,-5.207004,7.307283,-4.129052], dtype = "float64")#candidate|7073|(756,)|const|float64
const_7074 = relay.const([[False,True,True,True,False,False,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,True,False,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,False,False,False,True,False,True,False,False,True,True,True,True,True,True,True,False,False,True,True,True,False,False,False,True,True,False,False,False,True,True,False,True]], dtype = "bool")#candidate|7074|(1, 208)|const|bool
call_7070 = relay.TupleGetItem(func_1247_call(relay.reshape(var_7071.astype('int32'), [11, 12, 13]), relay.reshape(var_7072.astype('float64'), []), relay.reshape(const_7073.astype('float64'), [756,]), relay.reshape(const_7074.astype('bool'), [104, 2]), ), 8)
call_7075 = relay.TupleGetItem(func_1253_call(relay.reshape(var_7071.astype('int32'), [11, 12, 13]), relay.reshape(var_7072.astype('float64'), []), relay.reshape(const_7073.astype('float64'), [756,]), relay.reshape(const_7074.astype('bool'), [104, 2]), ), 8)
func_4643_call = mod.get_global_var('func_4643')
func_4644_call = mutated_mod.get_global_var('func_4644')
call_7086 = relay.TupleGetItem(func_4643_call(), 1)
call_7087 = relay.TupleGetItem(func_4644_call(), 1)
output = relay.Tuple([call_7057,call_7070,var_7071,var_7072,const_7073,const_7074,call_7086,])
output2 = relay.Tuple([call_7058,call_7075,var_7071,var_7072,const_7073,const_7074,call_7087,])
func_7088 = relay.Function([var_7071,var_7072,], output)
mod['func_7088'] = func_7088
mod = relay.transform.InferType()(mod)
mutated_mod['func_7088'] = func_7088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7088_call = mutated_mod.get_global_var('func_7088')
var_7090 = relay.var("var_7090", dtype = "int32", shape = (286, 6))#candidate|7090|(286, 6)|var|int32
var_7091 = relay.var("var_7091", dtype = "float64", shape = ())#candidate|7091|()|var|float64
call_7089 = func_7088_call(var_7090,var_7091,)
output = call_7089
func_7092 = relay.Function([var_7090,var_7091,], output)
mutated_mod['func_7092'] = func_7092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4936_call = mod.get_global_var('func_4936')
func_4938_call = mutated_mod.get_global_var('func_4938')
call_7107 = relay.TupleGetItem(func_4936_call(), 0)
call_7108 = relay.TupleGetItem(func_4938_call(), 0)
func_5907_call = mod.get_global_var('func_5907')
func_5908_call = mutated_mod.get_global_var('func_5908')
call_7115 = relay.TupleGetItem(func_5907_call(), 0)
call_7116 = relay.TupleGetItem(func_5908_call(), 0)
bop_7128 = relay.subtract(call_7107.astype('int8'), relay.reshape(call_7115.astype('int8'), relay.shape_of(call_7107))) # shape=(5, 14, 1)
bop_7131 = relay.subtract(call_7108.astype('int8'), relay.reshape(call_7116.astype('int8'), relay.shape_of(call_7108))) # shape=(5, 14, 1)
func_2943_call = mod.get_global_var('func_2943')
func_2945_call = mutated_mod.get_global_var('func_2945')
const_7139 = relay.const([False,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,True,True,True,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,True,True,False,False,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,False,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,True,False,False,False,False,True,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,True,False,False,False,True,False,False,False,True,False,False,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True], dtype = "bool")#candidate|7139|(208,)|const|bool
call_7138 = relay.TupleGetItem(func_2943_call(relay.reshape(const_7139.astype('bool'), [208,])), 5)
call_7140 = relay.TupleGetItem(func_2945_call(relay.reshape(const_7139.astype('bool'), [208,])), 5)
func_6396_call = mod.get_global_var('func_6396')
func_6398_call = mutated_mod.get_global_var('func_6398')
call_7144 = relay.TupleGetItem(func_6396_call(), 0)
call_7145 = relay.TupleGetItem(func_6398_call(), 0)
output = relay.Tuple([bop_7128,call_7138,const_7139,call_7144,])
output2 = relay.Tuple([bop_7131,call_7140,const_7139,call_7145,])
func_7146 = relay.Function([], output)
mod['func_7146'] = func_7146
mod = relay.transform.InferType()(mod)
output = func_7146()
func_7147 = relay.Function([], output)
mutated_mod['func_7147'] = func_7147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4818_call = mod.get_global_var('func_4818')
func_4819_call = mutated_mod.get_global_var('func_4819')
call_7222 = relay.TupleGetItem(func_4818_call(), 0)
call_7223 = relay.TupleGetItem(func_4819_call(), 0)
const_7230 = relay.const([[[8.752548,3.414677,1.545729,5.181193,-6.805125,-9.975843,3.453806,6.440545],[-9.248766,-4.731001,-2.892500,-1.282846,9.727607,-2.950302,-1.299091,-3.154770],[2.456633,9.126923,1.577456,4.374817,2.175926,-2.096945,5.516014,-8.062099],[3.133574,3.406836,5.647126,-8.617338,0.944061,-8.072789,-6.299741,2.179287],[-5.493590,-5.365316,9.403468,1.133127,-5.840375,-7.601168,-5.803026,2.926632],[0.997285,4.540768,1.808279,6.707737,-8.717520,-5.039453,6.493803,-7.582045],[-5.909992,1.002213,0.242264,-8.424944,-2.933891,3.340564,9.987198,8.097524],[7.814168,-2.371269,-3.502061,6.667143,2.954617,-8.321357,-4.395695,4.059355],[8.203384,-7.741073,3.249610,-5.982806,8.293402,-6.356581,0.334078,1.213086],[7.961035,5.974100,-4.412295,-5.057287,-2.434485,-1.593292,-9.535447,2.495295],[-8.968624,-8.780351,7.305046,8.313696,-9.795859,2.455121,0.020829,-6.654910],[-1.678196,9.453312,-7.421464,1.260722,-2.323298,2.804326,0.995908,-1.674531],[6.950353,4.454857,-0.397574,0.089746,8.770601,-3.869119,-8.801186,3.976727],[-7.126277,4.639999,-7.792410,1.402802,-5.759610,2.445327,4.707124,4.516628]],[[-5.339117,6.278657,5.239151,5.464112,-2.731532,-5.184249,-1.028056,0.760680],[-4.721852,-5.211683,1.562225,0.582070,-1.440737,7.470779,-8.741167,-2.014258],[-6.915923,8.460066,6.222525,-4.084593,-2.913455,-9.725720,-9.943262,2.122733],[-1.195255,4.904026,6.877223,6.182321,-7.948490,-9.256778,1.148340,7.666359],[-4.183557,0.272504,-2.850414,1.915439,-0.144592,9.276286,-1.479512,5.541095],[-9.694984,-5.760309,6.153887,-7.244640,1.454161,0.269437,8.249469,-6.594973],[4.238348,8.569027,5.228562,9.836344,-0.025486,-8.615486,8.012092,7.760566],[-9.161265,-2.051308,6.429346,0.305592,3.890256,4.394937,-4.914670,-7.194377],[-8.411496,4.644958,3.613303,1.525734,9.434849,-1.482077,-3.696744,3.383402],[3.249303,-2.312791,-9.494141,9.051586,-9.175703,-3.634927,-2.565352,0.477112],[2.796690,-6.532325,5.859326,-8.794102,4.481460,6.127994,6.030187,4.075824],[-1.970778,8.024281,4.289493,-0.088045,-0.688566,-0.565133,-1.654479,4.679793],[-1.311092,-1.597365,6.057465,5.107227,4.053187,-6.876796,9.583057,6.976136],[-2.143867,-9.707770,-0.079868,0.537915,6.352221,2.393657,9.960072,9.306013]],[[1.568645,6.016742,5.199088,7.266595,-2.000472,9.252092,0.244113,5.232000],[5.335700,-0.904594,0.063940,-7.848045,6.997739,-0.881207,-6.956473,2.328821],[4.508068,3.769412,9.680763,6.339716,-1.146206,5.937865,2.932652,7.469673],[-2.777042,-5.231577,-6.292962,-1.782987,6.475793,-4.993747,8.852183,6.013367],[1.651030,4.612076,5.146980,-9.266423,2.978507,-3.512840,-5.639245,1.456885],[4.768015,-8.769502,7.232759,6.111226,5.025228,-1.375655,8.269684,3.703297],[-8.710115,5.745472,5.270104,-0.357626,8.798469,-0.688538,-1.165213,-3.821018],[2.256282,8.256550,-4.882397,1.495647,7.379014,-8.400137,7.258902,4.575248],[-1.763851,-8.058759,-5.255474,-1.841456,2.990880,8.939540,-6.217660,2.210752],[3.440063,-5.215967,2.553845,0.914379,-9.114174,-0.783888,-7.986077,8.468257],[-1.341981,-6.914830,-6.048318,3.056955,3.441801,-3.139613,-1.480103,-9.607712],[-0.587191,9.481625,-9.688160,-9.300207,-0.264565,2.753158,-3.327640,2.397218],[-0.721498,9.608467,-1.181240,-2.208928,-6.514719,-3.559453,-5.843126,-9.039441],[6.526668,-8.720722,-4.930612,-4.421735,1.419467,9.794643,2.593185,0.815733]],[[7.316275,-6.334596,3.990599,2.326267,4.988517,-4.062112,-4.183563,2.764658],[3.599822,-0.901506,-3.161368,-6.571996,-0.780403,-3.647578,6.955201,5.603087],[-4.586397,-6.169871,-9.921552,6.993999,5.304021,7.015759,-4.190077,-7.309152],[-3.301614,-9.874976,3.866446,4.207487,-1.101601,7.825867,8.053151,-1.341572],[5.580382,6.077880,9.735770,9.202491,-5.569354,-6.312116,5.731534,-1.957605],[0.013815,2.111341,-2.453923,-2.909333,-5.470171,-8.019800,-5.405064,2.098722],[0.682129,4.618704,-8.970393,-8.094944,7.099853,4.076122,7.575555,1.724393],[-7.998518,4.986822,8.459849,-7.079120,-1.445346,9.953793,9.917701,-6.185595],[0.596694,7.671396,-3.965270,-0.963707,1.640154,7.270944,-6.737712,1.577880],[4.611412,0.474967,4.627683,-3.659430,-9.849015,-0.751900,-9.479959,-3.936200],[4.824134,2.217701,9.280606,2.436482,-2.753123,2.640622,8.410432,7.433182],[-2.267938,8.628952,-1.961846,4.309081,8.518737,2.679590,-5.026304,2.637861],[0.490812,0.357528,0.449212,2.796445,0.927783,-0.671606,-4.874309,4.370306],[-4.251011,-9.997824,-3.849281,7.505841,3.565310,-9.019667,-3.588377,8.758730]],[[-1.996635,9.869344,-1.119252,1.786617,7.181869,-0.377548,-6.537691,-1.176031],[7.786347,5.144926,-5.565004,3.820524,1.119221,1.649326,-3.921038,-1.456171],[-9.635572,-5.373168,-0.453610,-4.156090,3.544852,4.167230,4.001599,-7.297128],[-6.174506,-2.173718,-2.675961,8.899017,7.876116,7.268030,1.921366,8.114247],[7.398083,-6.939369,9.073907,-8.430012,-2.227991,-8.474502,9.866799,-1.283891],[1.496039,9.778749,-7.703459,2.055882,9.863134,7.901405,-2.490364,-2.491541],[-0.765076,-8.211967,-5.621448,-4.626354,-3.886093,-9.926268,7.051976,-1.373958],[4.780631,-3.902829,-4.450954,-9.596269,3.483306,-4.591187,-2.279419,3.245772],[-4.246440,-3.664998,-3.716670,5.616818,-4.787135,1.198909,-8.665257,-7.890904],[2.599601,2.446915,-6.339857,0.948147,-6.465085,-4.815218,7.627453,8.921876],[3.679012,-8.283988,4.812644,-3.026174,3.709775,1.298827,7.152284,8.589674],[3.477216,-1.104393,-0.872564,6.482502,-7.620593,3.644801,3.882212,2.325665],[0.106577,0.656894,4.954514,-5.200275,2.621037,-0.101274,2.221628,3.063944],[-9.356858,-9.342805,1.831675,1.500249,7.800164,5.301478,-1.806055,8.067104]]], dtype = "float32")#candidate|7230|(5, 14, 8)|const|float32
bop_7231 = relay.bitwise_xor(call_7222.astype('int64'), const_7230.astype('int64')) # shape=(5, 14, 8)
bop_7234 = relay.bitwise_xor(call_7223.astype('int64'), const_7230.astype('int64')) # shape=(5, 14, 8)
func_5851_call = mod.get_global_var('func_5851')
func_5854_call = mutated_mod.get_global_var('func_5854')
const_7253 = relay.const([8.426691,4.947512,7.638647,-4.308028,0.095015,2.475395,6.572430,-1.035827,3.546769,-9.518203,-1.277018,-2.744661,-3.809545,-8.545778,6.631511,9.606401,-7.947065,-1.297830,-5.001013,-7.373773,0.326012,4.692394,-0.527220,5.816125,-0.420070,-2.469780,4.586645,1.327752,3.086146,2.054982,-4.950146,-7.521669,5.955705,-3.226720,1.080596,9.714778,6.739855,-1.776330,9.257403,9.799073,1.609075,-1.913293,-8.738739,-9.473317,-7.173923,-9.724383,-0.804102,6.001806,0.776193,-1.429299,5.009383,9.637018,-5.802558,-9.132128,3.905501,3.486754,-5.764776,0.402287,-3.461209,-4.057678,3.244484,3.584083,6.170909,6.116801,2.810733,-1.105344,-0.154817,7.693373,0.363407,-4.085149,1.716825,4.080455,0.784976,-9.047098,6.365804,-8.189351,9.010034,-5.426272,1.993477,3.914031,8.559794,0.895762,1.553963,-0.459301,-7.307453,-7.180276,2.108314,0.328998,-8.599614,-8.120894,8.478839,9.998241,-8.034215,1.611614,8.285899,-3.911431,-0.958341,-1.830565,-7.751832,-2.300265,7.811788,-5.219521,8.125514,-3.072749,1.826367,8.397005,5.155998,6.118153,-4.259088,3.929160,5.763739,8.975197,7.365935,-2.812352,-9.644221,8.269770,0.260521,-2.898367,4.970024,-9.279412,4.064978,3.109336,-9.769927,5.601519,-9.611582,1.294509,-4.231653,9.855859,-4.109144,-9.933963,3.626154,3.869488,3.721358,3.536226,-7.601250,-7.885037,1.227759,-4.182305,-7.332336,-6.915870,0.031381,7.813445,-4.610789,8.198472,-7.509738,-8.056665,6.430043,-0.828714,9.295961,-1.857530,8.573629,-9.387234,-3.760437,4.589616,-3.941636,5.166302,3.849373,1.660089,-8.622886,-0.208221,-8.287628,-9.542435,-9.902782,8.379948,-2.904074,6.486400,-9.627860,-1.866908,0.168751,8.668646,2.619494,6.944670,6.191503,0.121660,1.931020,-0.136288,-5.976081,-9.466370,6.494715,-6.815620,1.435259,-1.051760,5.417035,-1.748052,-4.081282,-5.526752,5.452987,-0.929561,5.525631,-8.486547,7.327443,-0.080278,2.207942,6.242116,-7.557270,-3.031086,3.677964,5.671075,7.258153,2.071367,-6.720840,5.413653,7.081410,-2.586423,7.243174,-2.998667,-8.825143,-3.950161,9.974033,-4.682789,-2.338778,0.749456,9.621991,-2.752745,-0.667664,-6.184761,-1.663650,-2.992386,8.402932,-2.326458,8.986381,-6.776313,8.155694,6.843529,-0.253661,3.492894,-4.141415,-0.145345,3.383204,-2.893655,2.636516,-2.561396,4.690840,3.459334,-8.965021,2.137793,-3.876088,1.719827,0.565515,-7.427866,-8.845644,-4.637431,-9.728682,7.319597,1.696950,-2.673428,-8.034145,-6.744388,9.303517,5.789341,7.936278,-4.341471,-1.989528,-2.508659,-7.237537,6.997157,-7.907027,-5.739605,-1.878969,-0.301349,2.942176,-5.276156,-6.281842,2.939670,7.494488,5.750378,-4.983141,-2.315116,1.329622,-7.951096,-6.355290,-1.931274,0.439515,0.287340,-9.140537,6.559086,-3.138692,-7.585771,3.419525,9.783054,-1.452625,8.446067,-6.266510,2.066889,-6.553431,3.778002,7.216357,0.035162,-4.583622,-2.774068,7.077965,1.497419,-1.371700,-5.128534,9.696579,-9.775711,-5.018173,-4.129975,8.600150,-9.311160,9.087642,-0.995839,4.154200,1.072757,9.556081,3.459572,-8.375159,-7.742785,-3.168432,-3.644353,-7.843622,9.427209,-9.278224,9.022478,7.131264,-9.412514,-7.882766,2.082199,-2.674710,9.971981,-3.849578,-8.988943,8.872339,8.896651,9.363701,-6.277509,-1.592461,-3.606069,6.901269,4.282304,5.590257,-9.206622,-6.508914,-6.457468,-3.045053,-8.637137,-1.145327,7.942345,-8.864053,8.260559,-5.438660,8.171300,4.005625,-0.346308,-8.926077,3.675009,2.787641,5.603814,8.310838,-3.019566,6.066896,-0.247913,-1.541140,-7.595436,9.904696,-8.720116,0.109228,-4.693592,-4.341497,2.016783,-7.799061,-2.538544,-2.691115,-1.561853,0.142155,-6.803948,6.675099,-9.407110,-3.109472,-8.945405,-1.263310,-1.874034,6.082340,-2.534871,9.153124,-6.430472,-4.845509,5.833342,-8.736913,-2.435080,-5.000321,-2.725786,-3.483735,2.182078,6.027429,-8.894542,6.945096,3.155761,3.235158,-1.544129,-7.794270,4.106825,6.484703,5.488529,-7.253083,-2.186171,-4.788392,-7.887387,5.986477,-6.142969,-0.923821,0.086050,1.343418,-1.784368,-8.191705,5.160165,4.573324,-6.789388,7.606939,-9.941424,8.674518,-4.321847,9.635327,-4.707505,8.886159,-6.530507,6.108422,5.329152,-5.742814,-6.193896,-7.284672,9.044774,-7.685717,-9.731614,-0.970449,9.402702,3.405484,7.459448,-8.850294,-5.898522,-5.677897,8.472069,-7.601322,-9.937434,-5.449691,3.265651,-2.717399,-1.960496,-8.062287,-7.447964,3.434532,1.570971,-0.137215,-6.515314,-2.026554,-4.122717,5.538394,4.334768,-6.526612,-2.718297,-7.045311,3.943993,5.323200,0.466510,-4.010186,-3.723885,8.576393,9.820801,-1.365652,-8.979768,-3.305165,-5.483172,3.746300,1.496140,6.276540,-8.877497,1.196458,8.720527,-3.187326,5.239450,-6.543724,-7.499104,4.829338,5.650312,2.036520,-6.577509,-8.770575,0.746338,-9.722547,7.307622,3.687763,4.562695,2.102787,1.987352,4.204214,8.470520,-4.893158,9.665957,3.203361,6.818404,3.967439,-2.752462,-8.279794,7.594147,-8.359126,1.697179,-7.545944,-9.215726,6.235133,1.891860,-6.773908,-3.654224,1.321644,-5.052176,6.423994,5.040966,-4.520908,-0.510555,-9.026958,2.048194,7.382341,-6.606635,-8.251288,2.706362,-8.875275,-9.151016,5.672569,9.322742,5.080208,7.776553,8.345923,9.620358,-9.905485,4.305668,6.429513,4.253202,7.488248,-7.356658,7.699265,0.471234,8.575211,-2.361617,-5.869637,3.008630,-1.920176,-8.979329,0.896823,5.236274,-4.542923,-5.298549,6.777535,-6.845785,4.201175,-7.275262,-7.456718,-9.062182,-1.227049,7.957881,-8.009565,-7.815436,0.079537,2.909218,-9.632702,0.711307,3.083084,-2.468900,0.223591,6.262574,6.545314,5.014376,1.566157,7.652977,8.841017,-9.586456,5.431292,-3.986856,-6.526679,-7.454566,-6.256160,6.864214,1.265252,-7.320975,-9.492889,-8.456188,-1.917828,4.584824,2.782662,4.461501,1.979581,6.140879,-8.107886,-9.434497,3.275329,1.069075,-7.277039,8.642111,-0.372499,-6.956878,8.837039,-6.708212,2.626039,0.280409,7.597730,2.328862,-9.804539,5.837396,-8.389112,5.368507,-3.227285,4.522125,4.593603,6.286409,-6.022183,-2.168986,-7.256204,9.775113,7.403906,-9.626470,9.976771,1.963594,-3.597673,-2.678221,-9.310368,-1.244602,-2.036157,9.236390,-9.277479,1.219719,1.994296,-5.761263,9.875749,7.946351,-2.715598,5.510052,6.415024,-5.680805,6.546655,-5.219337,-3.499742,9.101930,-4.260652,7.562793,7.590024,2.033138,-2.636055,-8.080063,-5.681526,-1.384130,9.217483,-3.267365,9.388853,7.310752,-2.392802,-1.006072,-5.541620,3.524701,8.339316,-1.236438,-4.385120,0.480437,0.695928,-7.514238,9.720647,3.322843,-9.251722,6.738254,-7.133715,-2.482752,-1.544452,4.311316,-1.919226,0.020784,8.516058,-2.617761,9.639824,1.266280,7.941282,-0.742810,-5.130013,-5.117892,-2.299424,-1.063622,-0.793045,6.371023,-1.593706,2.259713,1.080996,-4.663287,-4.553290,-6.723991,-6.409308,7.006638,5.011453,-7.374111,7.237595,-8.096474,-6.306068,-0.555300,-3.241474,7.627134,-2.111584,3.206988,3.594983,8.916418,3.917869,6.002112,9.016822,7.075365,1.801875,-9.724211,-4.270042,-7.353792,-2.382904,7.217501,-9.156191,6.671480,-9.578552,-2.921975,-8.249971,8.827306,-9.851729,7.633624,2.673999,-7.361175,-4.562755,7.258409,-1.587990,0.620317,-1.847691,7.246809,9.787053,-1.519320,2.851588,6.140357,-7.663458,5.093780,0.178220,-7.729212,-9.073690,9.239738,0.660872,2.714892,-1.296788,-3.878976,-0.875667,0.497228,-6.114294,5.341200,5.389273,3.618216,9.191138,-1.399511,5.405897,-4.409816,0.019911,-2.618371,-0.439375,-7.992303,-9.394354,-6.285141,-7.832573,-5.247398,1.532385,8.544298,-6.410643,-5.767685,1.891011,4.779454,2.055278,-9.316368,9.811449,0.983163,1.154232,6.321571,2.741038,-4.398476,9.631950,-6.438017,-6.210613,7.589778], dtype = "float32")#candidate|7253|(770,)|const|float32
call_7252 = func_5851_call(relay.reshape(const_7253.astype('float32'), [5, 14, 11]))
call_7254 = func_5851_call(relay.reshape(const_7253.astype('float32'), [5, 14, 11]))
output = relay.Tuple([bop_7231,call_7252,const_7253,])
output2 = relay.Tuple([bop_7234,call_7254,const_7253,])
func_7265 = relay.Function([], output)
mod['func_7265'] = func_7265
mod = relay.transform.InferType()(mod)
mutated_mod['func_7265'] = func_7265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7265_call = mutated_mod.get_global_var('func_7265')
call_7266 = func_7265_call()
output = call_7266
func_7267 = relay.Function([], output)
mutated_mod['func_7267'] = func_7267
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7290 = relay.var("var_7290", dtype = "int64", shape = (9, 1, 2))#candidate|7290|(9, 1, 2)|var|int64
var_7291 = relay.var("var_7291", dtype = "int64", shape = (9, 11, 2))#candidate|7291|(9, 11, 2)|var|int64
bop_7292 = relay.left_shift(var_7290.astype('int64'), var_7291.astype('int64')) # shape=(9, 11, 2)
func_5413_call = mod.get_global_var('func_5413')
func_5415_call = mutated_mod.get_global_var('func_5415')
call_7300 = func_5413_call()
call_7301 = func_5413_call()
bop_7309 = relay.maximum(var_7290.astype('float64'), bop_7292.astype('float64')) # shape=(9, 11, 2)
func_6173_call = mod.get_global_var('func_6173')
func_6177_call = mutated_mod.get_global_var('func_6177')
var_7342 = relay.var("var_7342", dtype = "float64", shape = (840,))#candidate|7342|(840,)|var|float64
const_7343 = relay.const([1,-4,-2,-6,-2,-3,9,-3,8,7,-7,4,8,10,-3,2,2,2,9,-2,-6,-1,6,8,-10,-2,5,-8,-7,10,1,6,9,9,6,9,6,-5,-6,8,5,2,-10,-4,1,7,-7,5,-10,4,-6,6,-2,6,-3,3,6,9,-8,-1,6,-10,10,8,10,6,4,-9,4,-4,2,4,-5,-4,-5,-1,-4,3,-6,5,-3,-3,-6,5,10,6,9,1,-4,-6,-3,-9,7,10,5,1,-8,-6,9,-4,-1,2,-4,-5,-10,-7,-9,10,10,-9,-7,2,-7,10,10,-8,6,-4,-6,9,9,9,-6,-3,-10,1,5,3,-4,1,-8,-8,10,7,8,-2,-3,4,-1,-6,-1,6,-4,9,1,3,-10,6,-2,8,8,-8,2,-2,1,1,7,-8,-8,9,9,-1,-5,-9,-7,-9,-6,7,9,10,-7,1,-10,-7,6,-10,-9,3,7,1,8,2,-6,-3,-8,4,6,1,2,6,3,-2,8,-6,-7,2,6,-1,-1,-5,9,-4,5,-3,-3,-5,-5,-9,-10,10,2,5,4,-8,2,5,5,8,-7,6,-8,-6,-8,7,-8,7,7,-7,8,7,1,3,1,7,-2,6,4,4,7,-9,-8,-4,-8,5,6,-8,-4,-6,-2,-3,-6,4,-2,-3,2,3,-10,-5,8,4,2,5,-3,-10,-2,7,1,9,4,2,3,3,4,2,8,10,-10,-5,-3,-7,-8,-4,-10,4,-4,7,2,1,-8,2,2,5,4,-4,8,2,8,7,-9,-9,5,-10,-5,-7,-5,10,-8,9,8,-10,5,-10,-10,-10,-8,-1,4,-4,-4,4,9,-9,9,-10,1,1,4,8,10,2,-6,3,-6,-9,-7,4,-4,-2,10,2,-3,-7,8,-10,5,6,-7,-1,5,7,-10,-5,-3,1,-10,5,8,2,-1,-2,-6,-8,-9,-8,-7,-6,6,-5,-10,-2,-7,-6,1,1,-2,-8,3,-1,-5,7,-4,2,6,-8,-2,-9,-7,6,-4,-10,9,-7,4,-5,7,-2,6,-10,9,-9,8,2,2,1,-4,-2,-9,-7,7,1,-5,6,4,4,-5,4,10,9,5,-5,3,2,-8,-4,-1,10,7,-9,-3,-6,-5,-2,-8,6,2,-2,1,-6,3,6,4,-1,-4,-4,3,-5,-10,-5,9,4,5,6,-10,-6,2,-8,-10,7,-9,-10,1,-3,4,1,-1,7,-1,-1,5,3,-1,-4,-9,-4,-4,-1,10,7,-1,-7,3,8,7,4,-9,9,-9,-1,-6,5,9,-4,-1,3,9,-6,-6,-8,-4,-4,1,-2,-8,9,2,-1,-1,10,-6,-3,4,9,4,4,-10,-2,4,1,1,-6,-5,1,-4,7,-5,6,2,1,3,-3,-4,5,-10,-9,-8,1,-2,9,-7,-7,-7,-2,-8,-4,-8,7,-3,-9,-1,-4,-5,-2,1,-2,-8,-1,-2,3,-7,5,3,7,-4,-8,9,4,7,1,-9,-6,-4,9,9,-9,8,-4,-6,6,-1,5,-6,-4,-8,3,-7,-2,6,-8,5,3,-1,-4,-10,-9,5,-1,-6,6,-7,9,9,-9,-5,2,-6,3,2,6,-8,-2,-8,5,-5,6,-3,-10,-8,-7,-5,3,4,1,-1,-7,-10,3,-2,-2,3,-1,-6,-7,1,5,3,-9,4,-2,-5,-6,-9,-4,9,-10,-7,9,3,6,-1,9,-1,-10,6,-9,-10,7,6,-10,9,-9,10,-8,5,-6,6,-2,-4,1,-2,-3,7,-2,3,-10,-4,7,-9,9,-10,2,-10,3,5,-8,-4,1,-2,4,9,-8,-5,6,-1,-9,10,4,-6,-6,1,-1,-6,6,-7,3,-6,-8,-5,6,7,-6,-9,-9,-9,9,10,5,-2,1,-3,7,5,-2,-10,-8,-6,-6,-7,1,1,-6,-1,4,-3,-5,1,-8,9,-9,-8,6,1,10,-8,-6,2,7,-4,-7,9,-3,-5,-9,1,-3,-4,5,-2,5,-10,6,-2,5,7,-3,5,-7,7,7,3,-8,-1,-4,10,3,-10,-1,-6,-8,-10,9,7,10,-1,3,-8,-3,-2,4,-8,-3,7,-1,-10,-6,-2,-10,1,4,-8,8,-5,-7,-7,2,-7,4,-7,-9,-7,-1,-9,7,-8,4,7,-2,-2,-3,9,6,8,-3,8,6,-6,2,6,7,-2,2,10,4,-4,-3,-2,-10,-9,-7,-5,-2,-8,6,4,9,-2,-5,-6,6,-8,2,8,-10,5,5,8,10,-10,9,-10,1,-9,6,-7,-5,1,-5,-9,5,-10,-5,6,4,2,1,4,-3,10,10,2,-4,-3,2,-6,8,-5,-6,-8,8,-6,1,-1,-4,-4,10,-2,-10,5,-8,7,7,-9,-5,-3,-5,10,-8,-10,3,9,-3,2,-7,-5,8,-9,6,-7,-4,-3,-9,5,-7,-4,-1,6,5,7,-4,4,-8,6,2,-6,6,-5,4,6,7,2,4,-1,-5,-10,-5,-1,-1,7,-2,10,-4,-5,-7,8,1,-9,9,4,10,-4,-2,8,-4,9,-9,6,-5,10,3,5,7,9,-6,9,-10,-3,-8,8,-5,1,-7,5,-9,-6,-2,-6,-3,-6,-1,6,-10,6,7,1,2,-6,-9,2,6,10,-9,1,-3,-2,4,6,5,3,7,-6,7,1,-2,6,1,8,-6,3,-5,-6,10,-4,-5,1,-4,2,-8,9,-5,8,5,-7,4,-10,2,-10,7,1,3,-5,-8,10,1,-6,6,-4,9,-10,1,3,-6,-8,-9,7,1,-10,-1,3,-10,8,-2,-5,-4,-7,6,8,7,7,7,9,-7,8,-9,-10,1,-5,8,7,6,7,-6,-4,-5,8,-4,-1,-7,-7,-2,-7,4,-6,-1,-6,-7,-9,-2,-3,-1,-10,-9,3,1,-2,8,-6,1,-7,-4,-1,10,3,2,-8,8,-7,-2,-3,-4,-8,4,9,5,-10,-10,10,-3,-1,-1,-10,-10,6,-1,5,-3,2,-8,-3,-6,1,-7,6,-8,-9,-8,7,-7,-10,-3,-6,1,-4,-6,1,3,7,-7,-2,-4,3,9,1,-5,4,9,4,7,-6,-4,-4,9,7,-8,10,-9,3,-2,-1,5,-3,-7,-4,-5,-7,7,8,-5,-3,-5,5,5,9,10,2,-9,-10,4,-1,4,9,-1,9,-3,1,7,-1,1,8,2,-9,-7,-7,4,-9,8,-2,-5,7,5,-6,-5,5,-7,-9,4,-9,-8,-1,6,1,-10,-5,3,-4,1,3,5,1,-10,2,-8,-7,9,9,10,9,10,-6,5,3,8,-1,-3,-6,3,-9,8,7,3,-3,5,-2,8,-10,-6,1,9,10,4,-5,5,-6,-7,2,-1,3,-9,-3,-3,-1,7,4,2,8,-9,3,-6,-8,-3,2,-5,10,-10,-2,7,1,-3,-2,8,-3,4,2,4,-4,10,1,-1,-1,5,5,5,9,-8,5,10,4,3,-5,-5,1,5,1,2,-8,-5,10,8,10,-10,-3,-2,-6,10,-9,10,-10,-2,10,5,3,-2,2,4,-5,8,5,-2,6,-4,-9,-6,9,10,-4,-9,6,3,1,-3,-10,-4,-10,7,10,-10,-6,-8,6,6,4,8,7,10,-7,-4,-2,5,7,-10,5,-6,8,-8,3,-4,-9,6,6,-6,9,-3,10,-4,9,-6,6,5,-7,8,-5,6,9,-2,10,-9,9,9,-7,8,9,-8,7,10,-4,-3,-5,5,-5,-8,-6,-1,6,-6,-4,-8,-8,7,10,9,-8,-5,5,4,8,4,-8,8,-6,-8,1,-3,-4,6,10,10,-10,-8,6,7,-7,-7,-8,10,1,6,7,1,-10,5,-2,7,-1,-9,8,-10,-6,1,-4,-8,10,-5,5,-8,2,-6,-10,6,-7,-10,-10,-1,9,-10,4,8,-4,-3,-10,4,6,-6,-3,10,7,9,10,4,4,4,4,2,-6,8,3,8,4,-8,6,6,-7,3,-5,-1,-2,4,9,-7,10,3,-7,-5,-4,-7,10,-6,-10,-6,-7,-3,2,-9,7,7,1,-1,2,-1,-10,9,-4,8,-3,1,3,-2,-5,-9,-7,8,-8,-8,6,9,10,9,-2,-9,3,-6,4,-5,-9,9,-1,-3,7,-9,3,-2,-5,-8,-8,-1,-5,-1,-7,9,-9,1,7,-10,7,9,7,-2,2,9,-7,3,9,2,-10,-3,9,-2,-10,-1,2,-7,-1,3,-1,5,5,1,-2,2,-5,-5,-9,-1,7,-5,1,-10,-3,8,-7,3,1,-6,8,-6,-2,-7,6,-1,-9,-4,8,-3,-6,6,-3,5,-4,6,-8,-5,3,-5,-8,-4,3,-7,3,-4,2,2,1,-9,8,-9,10,-1,3,-4,2,-10,-7,6,9,-8,-9,8,8,7,7,-6,-9,9,-3,-3,-10,-10,9,6,-3,1,-5,-4,-10,-2,-8,-1,-5,8,-3,3,-3,-2,-8,-2,-5,2,4,4,10,9,2,6,-2,5,5,-1,-2,3,-3,10,-8,7,-2,-5,5,-10,-8,4,1,7,1,4,-3,3,2,6,-8,1,6,-2,-4,7,1,1,-5,7,8,-7,-8,9,-6,9,1,-3,8,5,-8,-5,8,-10,-4,-6,8,-5,8,6,10,7,5,-8,5,-6,-8,3,-7,-8,10,5,-1,-4,-6,-2,-6,-10,9,6,1,-9,3,4,5,-2,10,-2,-10,10,7,-2,3,3,-8,-7,1,8,6,-3,-8,5,-2,8,5,8,2,-6,2,8,-8,-10,1,-2,-2,7,10,7,-10,4,3,-9,1,-3,-5,-4,-5,4,2,2,-3,-5,2,-4,7,10,-9,-6,-4,-3,1,6,10,2,7,10,-5,-10,-5,9,-2,3,-8,2,-9,3,-10,5,-10,-4,3,7,-8,-4,1,6,-4,7,-7,6,-1,5,-9,-1,-7,3,10,-7,7,3,7,-5,6,5,-8,1,-1,1,5,6,-1,-2,-1,9,-10,-7,-2,8,-4,-3,-5,4,-9,3,-8,-7,-1,8,-8,9,-1,-5,-1,-3,7,9,-10,-7,7,4,10,-2,10,3,1,4,-10,-5,5,8,-3,5,10,-2,-1,-2,-8,1,8,-6,6,1,10,-9,-5,6,-5,-1,2,-4,2,5,2,-7,-10,7,2,3,3,8,10,6,-6,10,2,2,-10,3,-5,-10,5,2,-7,-3,9,-10,7,2,-5,-3,6,1,4,-8,8,3,-9,-3,4,-9,-9,-9,5,10,-4,6,-10,-8,3,-1,-5,-4,-3,-1,7,7,-6,-2,10,2,-7,-5,-5,9,-8,1,-9,8,-6,-9,8,6,-4,7,-2,-9,-9,-4,-7,4,-5,1,-10,6,-9,-8,10,-2,-4,-10,10,-5,-4,-3,4,-6,-2,1,-7,9,-1,-4,-3,-7,7,-3,-7,-4,-9,-1,4,-10,-6,2,9,3,8,-10,4,-8,-7,8,1,-4,-8,-5,-4,-3,-7,8,-6,-5,8,7,-5,5,-8,-5,-4,1,-5,6,-3,-4,4,6,2,-8,9,4,-10,5,1,-9,10,-7,-8,6,4,2,1,1,3,4,3,-5,5,3,9,-1,3,6,2,5,-4,-5,-6,8,4,-9,-10,-1,4,2,-7,-2,10,-2,-2,6,3,-10,-8,8,10,10,-4,6,-7,3,1,4,3,-2,4,-10,-1,-6,9,-2,5,-1,-7,9,7,-9,7,-8,1,7,9,-2,8,-1,6,-9,7,10,-9,9,-10,4,2,-10,-3,-10,-4,5,2,2,1,-1,-1,4,1,-8,2,10,4,-10,-7,-9,5,-5,-2,-7,8,3,8,-1,-1,-1,1,-8,3,1,-10,-3,8,2,-6,-3,6,4,-3,4,-4,-8,8,1,6,1,4,-1,-3,2,-3,-4,1,4,6,8,4,-6,-4,4,-9,-5,9,7,8,-3,-6,-9,-8,-1,-2,-4,-6,1,-7,9,-9,3,10,-4,-1,9,-6,4,-3,6,-5,4,-1,1,-9,6,-5,-8,8,5,-8,7,-5,8,8,-5,-6,-4,3,7,-8,-10,1,-9,-1,-10,-1,5,-10,5,-8,-10,-9,-1,10,4,10,-2,-5,10,5,7,7,-9,-6,4,5,8,8,6,-9,7,-8,10,8,-9,2,-7,9,-5,-2,-7,-2,-3,-6,8,1,5,-4,3,7,-5,8,-7,9,2,-2,8,-5,4,-10,-7,10,2,-8,-6,-7,-5,2,-3,-3,-2,-3,-1,-3,-10,-9,-6,8,5,-3,5,1,-6,-10,-5,2,-2,-2,-3,-7,-10,9,-7,5,5,2,-9,-9,-7,-4,4,4,2,8,-10,8,3,-7,-6,-4,-10,2,9,-4,10,3,-3,1,-10,1,-6,-2,-8,-1,9,7,2,-9,-9,-1,1,5,8,1,5,-10,3,-9,-10,7,-6,1,2,-10,4,-1,3,1,10,-3,-6,-5,6,-3,-6,6,-5,-1,6,7,1,7,4,9,-1,-8,-5,9,-8,-8,3,6,10,4,-9,9,10,7,-5,-7,-9,5,-7,5,-7,10,8,7,-5,7,-1,-7,-2,3,1,6,-7,3,-5,1,-3,1,9,1,-8,-2,-5,-8,-1,4,4,-1,-1,5,5,10,-7,9,-1,-1,-9,8,2,-2,-8,7,6,-3,4,-3,-1,5,5,5,-6,-7,-1,-2,-10,6,-9,-1,2,-2,-9,-5,1,8,6,4,-10,-1,-3,-4,5,10,-4,9,-3,4,9,2,-1,-5,-6,1,7,8,2,2,1,-1,5,5,-2,-1,10,8,8,8,-2,9,-8,-1,9,6,-7,9,7,-1,-4,-10,8,4,1,9,9,-3,4,-7,-9,-5,2,-10,9,-7,-6,5,-7,9,3,3,5,-10,2,-6,-2,7,6,-2,9,-5,-8,-8,-1,5,4,-7,6,1,-5,-8,7,-1,-5,5,-2,-10,3,7,4,10,-2,8,-4,-9,-6,-6,-4,-6,-9,2,1,2,-9,-8,1,-2,2,-4,-1,-7,-9,1,-1,-2,-8,-10,8,3,-10,-2,-6,5,-6,-6,9,-5,-8,2,3,-8,10,-10,-1,-6,3,-2,-2,-8,-6,-7,-10,3,-9,7,-1,-1,-4,-1,-3], dtype = "int32")#candidate|7343|(2688,)|const|int32
call_7341 = relay.TupleGetItem(func_6173_call(relay.reshape(var_7342.astype('float64'), [5, 14, 12]), relay.reshape(const_7343.astype('int32'), [96, 28]), ), 3)
call_7344 = relay.TupleGetItem(func_6177_call(relay.reshape(var_7342.astype('float64'), [5, 14, 12]), relay.reshape(const_7343.astype('int32'), [96, 28]), ), 3)
uop_7383 = relay.exp(const_7343.astype('float32')) # shape=(2688,)
bop_7388 = relay.not_equal(uop_7383.astype('bool'), relay.reshape(const_7343.astype('bool'), relay.shape_of(uop_7383))) # shape=(2688,)
func_4379_call = mod.get_global_var('func_4379')
func_4380_call = mutated_mod.get_global_var('func_4380')
call_7412 = relay.TupleGetItem(func_4379_call(), 0)
call_7413 = relay.TupleGetItem(func_4380_call(), 0)
func_4155_call = mod.get_global_var('func_4155')
func_4158_call = mutated_mod.get_global_var('func_4158')
call_7418 = relay.TupleGetItem(func_4155_call(relay.reshape(uop_7383.astype('int32'), [2688,])), 2)
call_7419 = relay.TupleGetItem(func_4158_call(relay.reshape(uop_7383.astype('int32'), [2688,])), 2)
const_7420 = relay.const([[[-7.091487,0.090083,1.321022,7.793137,-4.756984,-9.631436,2.547888,-1.749549,-5.947265,4.837703,2.059092],[9.872833,-0.127609,8.019513,5.586599,-5.174634,9.176022,5.641407,7.889218,-0.768161,-0.697157,-5.528477],[-1.658695,-6.687881,1.770843,0.604102,8.503875,-6.489346,1.219834,1.683637,3.632886,-2.264032,2.279455],[8.870942,-3.053606,6.832482,-9.770764,4.375781,-7.603079,-5.772423,3.435261,-5.702958,-6.442562,-9.382849],[7.227774,-7.005219,6.611887,8.630589,-3.393279,9.008620,-4.561309,2.040547,-1.425833,8.105534,-2.134769],[-4.183401,-4.627100,-0.648521,-6.517795,-4.388252,0.482490,-1.875490,-5.377492,5.336834,-8.436782,0.712439],[8.985042,8.765672,3.187381,9.249532,-3.706057,7.822468,-0.294753,9.527746,-4.480436,-7.191025,-4.024077],[7.340412,-0.676041,2.426099,1.281567,6.689052,4.672207,2.452531,-3.810109,-0.209741,-3.914486,0.872753],[-7.654383,6.636764,-8.064313,-7.546146,-9.200389,7.622341,-5.654354,0.616424,-3.168284,7.160801,-5.279320],[-4.451571,4.964322,7.847017,5.862361,-5.171006,-4.279107,-6.640255,-3.700381,4.242818,-9.562751,0.527170],[-2.401889,3.998689,-5.617305,-0.902999,4.926760,2.035273,-4.484862,-3.034586,0.213725,4.551090,0.814191],[-4.906261,-1.862880,-7.091840,3.196516,7.583525,4.510861,-3.375936,7.378419,-8.666047,3.411571,6.129968],[-9.768047,6.328472,8.034042,0.950706,4.755418,-7.283964,-9.811835,-0.206008,-1.144295,0.186556,-0.356122],[6.368955,-3.617673,-6.595358,7.431527,1.103705,-5.245402,5.185978,8.930909,-4.296323,5.162814,-9.054277]],[[0.351272,2.511625,3.866765,6.160182,-4.948119,4.657113,-6.243749,-1.373681,-2.659604,-7.715730,2.623560],[-6.148018,-1.506668,5.116263,6.476203,0.320590,-3.210205,-3.592531,1.692639,-3.316212,7.018680,1.216898],[3.295767,6.627430,4.964324,-2.637180,-4.117314,-8.753486,7.210940,-1.820721,6.512895,-5.827297,-6.910149],[0.691213,-7.605444,6.731810,-0.189694,-8.910664,-3.867652,5.665206,7.474678,-3.898304,-2.938629,-4.225350],[-0.608030,-9.299517,0.196765,-9.668660,3.644438,2.161596,8.815801,3.648083,0.909629,0.362921,-0.587113],[-8.567240,4.769253,5.641531,9.374033,6.716885,-7.656089,0.131083,-7.961936,1.289418,-5.187206,-0.177646],[4.443241,6.400878,2.906232,-0.975527,8.596143,4.404930,-6.487239,-3.933162,-9.174489,6.989322,9.780238],[-7.375895,-8.159597,8.204776,0.532319,-3.988104,-9.097449,3.082851,8.725455,2.465263,-9.551495,6.228118],[0.989959,-3.997994,8.627730,-5.831075,0.615651,4.472421,-1.976274,-5.998668,-3.214982,-6.758736,-5.850644],[-6.564448,6.899277,-6.373421,-1.859954,-9.469070,7.040666,4.536154,1.750201,5.069769,0.671272,-4.078470],[6.837483,7.980535,-8.134873,-5.555229,0.571302,-3.651586,-3.684412,3.162358,-5.830672,-3.360248,-0.376757],[-3.404968,5.285129,-7.027175,-0.957068,-2.307899,2.950470,4.104179,6.921492,-3.572455,-9.042895,-1.384235],[4.451065,4.229194,9.778241,3.949508,-1.486752,4.164692,9.452315,-3.674865,2.342461,-3.228521,-9.439061],[-1.540755,6.775847,-2.668263,1.369702,9.297723,-8.988168,-3.627493,-7.725644,-6.067597,0.022797,8.933147]],[[5.747326,8.971213,-8.220053,-4.525913,0.784703,8.652487,1.468742,0.027634,-4.821887,-5.603666,7.154132],[-7.398803,-9.605491,-9.053335,9.811750,0.937624,7.505734,8.577637,-0.569739,-0.364963,-0.999911,-6.353694],[-2.665907,-4.816773,-7.674676,1.259660,7.770007,-5.793930,-9.489870,7.699480,-8.124616,3.845071,9.021684],[7.648006,-2.650071,-8.640033,0.847315,-0.018816,-8.557881,-3.138010,2.324466,-3.278706,-1.686260,8.904437],[-2.513884,-3.305873,0.903236,-1.876342,-0.691932,-1.126495,-2.139171,4.212635,3.251220,5.957372,-4.666888],[5.229964,4.831093,-8.771305,-7.578046,1.717213,-4.748857,7.127616,5.695866,5.795057,8.091748,-1.678957],[-7.628819,-2.492383,4.576176,0.648355,3.351556,-2.875045,-2.868157,-9.845168,-7.053910,8.952997,9.739541],[-6.394215,4.610514,-2.380236,1.197793,-3.316924,-3.901378,2.442341,-7.388276,5.174139,6.777670,-9.193267],[-0.484873,-1.835567,-8.394158,-7.865908,-2.649711,-5.034983,-2.267475,9.226766,9.728748,5.985661,-1.123834],[-3.579514,8.089716,-8.546168,9.018200,-9.710001,-6.632229,-8.243419,7.942645,-3.100279,8.234744,3.846991],[-0.866469,7.786018,-2.943280,9.603991,9.623377,0.388733,-4.378568,-3.848801,-0.604504,8.647978,9.592137],[-9.138621,-3.805666,5.335119,7.878645,3.634593,1.140348,-7.356879,8.942796,-3.269441,8.654617,5.495629],[5.923429,7.853008,5.966647,-6.642193,-6.439153,9.408498,-1.804840,-6.716709,3.720804,7.069511,-9.404015],[-4.012142,2.413464,-7.002298,-6.183520,-2.020159,6.256548,8.430266,2.173691,-6.508413,-0.822134,-8.541885]],[[-6.311305,1.416359,6.496502,-6.611987,-8.630589,1.847796,2.890544,-0.029914,-0.560948,7.764372,-7.214466],[-3.366026,4.599576,4.735835,-2.134482,-9.404985,-5.419799,-6.008699,-0.252607,8.750669,1.234946,-4.977916],[-6.552305,-8.936239,-4.168014,6.298115,-9.401722,-4.200501,-9.200489,-9.767203,3.733893,9.851011,-2.105936],[3.009755,-6.678348,8.870841,-5.898597,-9.641712,-5.454727,4.354760,-5.800839,5.890074,-1.508114,-7.084867],[0.847511,9.512374,0.793252,-7.480172,-6.788141,-5.713460,-9.096584,-9.802072,-3.995338,1.439724,8.581913],[5.595680,1.246297,-7.850651,-4.575665,-6.862513,1.101717,-2.123039,-5.087618,-1.500081,7.378551,6.938390],[-2.188801,-8.192219,-0.409651,5.685531,-7.680750,-4.036937,3.651455,7.352425,2.407187,1.650044,3.481755],[-2.467446,-7.219714,-3.698913,0.528353,4.319672,5.432595,-0.814616,-6.616689,8.804707,-6.420428,-8.358459],[-4.834107,3.714122,-1.002334,9.350834,8.541635,4.863500,-3.304399,5.854481,-0.338748,-4.827807,-2.111929],[0.378418,-9.770633,8.013746,-8.168727,5.851879,5.619222,4.578544,0.755768,9.695809,-6.248687,6.724266],[-7.315029,-0.667956,1.761534,-8.689739,-6.178639,-3.653360,-6.683479,4.407211,-3.970636,3.807384,-1.255216],[3.296691,4.462928,-2.362616,5.751558,5.954981,-7.736875,-0.744773,-5.843561,3.136029,5.874436,9.058083],[5.529235,-5.531863,2.454802,4.547694,-8.486525,-0.243479,2.986750,4.076394,-5.953463,-2.946299,4.490654],[-3.530188,4.306004,-1.279759,-3.969319,-2.845829,-9.420623,5.858479,-7.787220,7.803120,5.788035,0.271905]],[[-2.825811,2.547742,6.555669,4.437423,4.262527,-4.764773,8.654585,3.337720,-1.142349,8.889635,-4.722135],[1.795919,4.754427,-2.608634,-2.187236,0.412320,-5.234296,2.365743,-5.564697,-7.715948,-7.976815,-9.583229],[9.251275,1.367198,7.969288,9.451089,3.291129,6.098245,9.632412,1.610293,5.369252,7.395741,-7.575216],[2.073972,5.280707,-1.451794,-4.692381,-3.888372,-3.376254,1.281222,-3.356699,3.401865,2.586949,6.721870],[-3.389911,-2.551711,4.657500,-5.608961,-2.465596,6.426267,2.388972,-6.877784,-8.169672,-5.460204,-0.329640],[9.105047,-4.170172,3.579006,4.863270,-9.278755,0.280102,3.136775,-2.474979,-7.604998,1.898229,0.123520],[0.813841,-4.915780,-5.941070,-0.175068,-2.286119,0.361652,1.127838,1.409491,4.428168,-5.446752,-0.617165],[-3.068491,6.918335,-7.757683,-8.936333,-7.663248,7.217504,1.919446,3.076392,-0.630803,4.135104,-3.624901],[-5.323230,6.201422,6.308338,5.745950,3.761327,8.534619,-7.233544,8.667166,5.385979,7.309825,-0.292139],[-9.634069,-1.151977,-3.268423,-5.506988,-1.038515,-9.375114,6.094056,-9.150896,9.796058,-8.701929,-2.813022],[-6.349955,3.496296,7.694255,-5.047638,2.350160,7.788942,-0.008392,-5.472381,-9.653918,0.078550,-3.225918],[9.902172,7.991845,0.388138,7.712055,0.316306,0.633871,1.960694,6.675101,7.514483,-0.130058,-5.004090],[-0.962573,8.841193,-1.551229,9.939140,5.772228,9.328611,4.521460,-7.887926,-4.112073,2.736427,-9.009365],[1.119050,-6.978926,2.895203,2.020223,0.414985,-4.262200,7.925416,-1.957935,4.620742,4.796433,-6.090419]]], dtype = "float32")#candidate|7420|(5, 14, 11)|const|float32
bop_7421 = relay.maximum(call_7300.astype('uint64'), const_7420.astype('uint64')) # shape=(5, 14, 11)
bop_7424 = relay.maximum(call_7301.astype('uint64'), const_7420.astype('uint64')) # shape=(5, 14, 11)
func_3424_call = mod.get_global_var('func_3424')
func_3426_call = mutated_mod.get_global_var('func_3426')
const_7431 = relay.const([7,-3,-6,8,-6,-1,10,5,4,3,5,1,1,-9,6,-4,-5,-5,-3,-8,3,7,-9,-7,8,-2,-5,2,-10,-10,-2,-9,-5,-5,-7,-7,-2,-8,-9,-3,-6,-1,-5,7,-5,-2,-3,-1,7,-7,10,-7,-10,-5,-1,-7,1,-7,10,-4,1,1,8,2,-7,2,-5,-10,-5,4,-3,-2,-9,-1,-1,4,-4,7,7,9,-10,-1,-9,8,8,-9,-2,-5,10,-2,2,4,-10,-8,-2,-1,8,-7,-7,-1,8,-7,-3,-3,-8,-3,-10,-6,9,7,3,-4,-2,-7,8,5,10,-6,4,-5,4,-3,-6,-5,5,8,2,8,-5,-4,-3,-8,-10,-5,6,7,7,-6,-10,-1,5,-4,1,2,9,8,-6,6,-3,-10,-10,-10,-8,-3,9,5,1,-2,1,2,-1,-3,-7,5,-9,-8,4,7,6,10,2,-9,5,9,7,-10,-2,-7,10,-10,7,-8,-7,4,-5,-9,2,-1,-9,-6,2,7,7,-6,4,-7,-5,3,-10,-7,3,-1,4,-5,2,1,7,1,-10,2,2,-8,-4,9,9,-8,-2,9,-9,-8,6,-9,7,-9,-5,-2,2,-4,-10,2,-8,4,-7,5,7,-1,3,10,-9,7,-1,3,-9,-2,1,-8,4,9,5,1,7,9,-1,-8,-7,6,-5,1,-5,3,-9,-5,5,6,9,-3,9,-6,10,-3,-10,7,8,-9,3,1,3,6,-3,7,10,-10,-4,1,2,-3,3,-8,-9,7,9,5,7,1,4,4,1,-4,10,-1,9,5,-5,6,1,8,-3,-5,2,2,7,-9], dtype = "int16")#candidate|7431|(312,)|const|int16
call_7430 = relay.TupleGetItem(func_3424_call(relay.reshape(const_7431.astype('int16'), [8, 13, 3])), 1)
call_7432 = relay.TupleGetItem(func_3426_call(relay.reshape(const_7431.astype('int16'), [8, 13, 3])), 1)
func_4583_call = mod.get_global_var('func_4583')
func_4584_call = mutated_mod.get_global_var('func_4584')
call_7433 = relay.TupleGetItem(func_4583_call(), 0)
call_7434 = relay.TupleGetItem(func_4584_call(), 0)
bop_7439 = relay.logical_xor(uop_7383.astype('uint16'), relay.reshape(call_7341.astype('uint16'), relay.shape_of(uop_7383))) # shape=(2688,)
bop_7442 = relay.logical_xor(uop_7383.astype('uint16'), relay.reshape(call_7344.astype('uint16'), relay.shape_of(uop_7383))) # shape=(2688,)
func_1155_call = mod.get_global_var('func_1155')
func_1159_call = mutated_mod.get_global_var('func_1159')
var_7446 = relay.var("var_7446", dtype = "float64", shape = (756,))#candidate|7446|(756,)|var|float64
call_7445 = relay.TupleGetItem(func_1155_call(relay.reshape(var_7446.astype('float64'), [9, 6, 14]), relay.reshape(var_7446.astype('float64'), [9, 6, 14]), ), 0)
call_7447 = relay.TupleGetItem(func_1159_call(relay.reshape(var_7446.astype('float64'), [9, 6, 14]), relay.reshape(var_7446.astype('float64'), [9, 6, 14]), ), 0)
func_5189_call = mod.get_global_var('func_5189')
func_5193_call = mutated_mod.get_global_var('func_5193')
var_7454 = relay.var("var_7454", dtype = "int16", shape = (25,))#candidate|7454|(25,)|var|int16
call_7453 = relay.TupleGetItem(func_5189_call(relay.reshape(var_7454.astype('int16'), [1, 5, 5]), relay.reshape(var_7454.astype('int16'), [1, 5, 5]), ), 1)
call_7455 = relay.TupleGetItem(func_5193_call(relay.reshape(var_7454.astype('int16'), [1, 5, 5]), relay.reshape(var_7454.astype('int16'), [1, 5, 5]), ), 1)
output = relay.Tuple([bop_7309,var_7342,bop_7388,call_7412,call_7418,bop_7421,call_7430,const_7431,call_7433,bop_7439,call_7445,var_7446,call_7453,var_7454,])
output2 = relay.Tuple([bop_7309,var_7342,bop_7388,call_7413,call_7419,bop_7424,call_7432,const_7431,call_7434,bop_7442,call_7447,var_7446,call_7455,var_7454,])
func_7457 = relay.Function([var_7290,var_7291,var_7342,var_7446,var_7454,], output)
mod['func_7457'] = func_7457
mod = relay.transform.InferType()(mod)
mutated_mod['func_7457'] = func_7457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7457_call = mutated_mod.get_global_var('func_7457')
var_7459 = relay.var("var_7459", dtype = "int64", shape = (9, 1, 2))#candidate|7459|(9, 1, 2)|var|int64
var_7460 = relay.var("var_7460", dtype = "int64", shape = (9, 11, 2))#candidate|7460|(9, 11, 2)|var|int64
var_7461 = relay.var("var_7461", dtype = "float64", shape = (840,))#candidate|7461|(840,)|var|float64
var_7462 = relay.var("var_7462", dtype = "float64", shape = (756,))#candidate|7462|(756,)|var|float64
var_7463 = relay.var("var_7463", dtype = "int16", shape = (25,))#candidate|7463|(25,)|var|int16
call_7458 = func_7457_call(var_7459,var_7460,var_7461,var_7462,var_7463,)
output = call_7458
func_7464 = relay.Function([var_7459,var_7460,var_7461,var_7462,var_7463,], output)
mutated_mod['func_7464'] = func_7464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5316_call = mod.get_global_var('func_5316')
func_5318_call = mutated_mod.get_global_var('func_5318')
call_7473 = relay.TupleGetItem(func_5316_call(), 0)
call_7474 = relay.TupleGetItem(func_5318_call(), 0)
output = relay.Tuple([call_7473,])
output2 = relay.Tuple([call_7474,])
func_7478 = relay.Function([], output)
mod['func_7478'] = func_7478
mod = relay.transform.InferType()(mod)
mutated_mod['func_7478'] = func_7478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7478_call = mutated_mod.get_global_var('func_7478')
call_7479 = func_7478_call()
output = call_7479
func_7480 = relay.Function([], output)
mutated_mod['func_7480'] = func_7480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4818_call = mod.get_global_var('func_4818')
func_4819_call = mutated_mod.get_global_var('func_4819')
call_7504 = relay.TupleGetItem(func_4818_call(), 0)
call_7505 = relay.TupleGetItem(func_4819_call(), 0)
func_1402_call = mod.get_global_var('func_1402')
func_1405_call = mutated_mod.get_global_var('func_1405')
const_7515 = relay.const([-6.337484,7.321896,0.566571,-7.963487,1.647031,-9.392760,-3.967637,-6.928237,-9.066943,-2.904559,-7.189633,0.794937,-8.494669,-5.916525,1.901121,5.497457,-7.933780,2.524116,6.654082,-7.166745,7.718825,-2.365665,9.185327,-2.301020,7.189200,3.095620,9.759823,-6.840570,1.040699,0.732020,-8.004015,-9.857665,8.382264,1.563979,4.460347,1.045722,-3.089609,-9.238822,-8.196307,-2.056836,9.771057,6.335801,-3.751301,-8.087233,-3.931190,-0.956920,7.617208,-4.719753,-4.216964,3.456165,1.530960,-4.035780,-5.837889,6.179094,-4.782343,-6.689174,6.056079,-3.697147,9.252167,5.678680,-5.967763,6.261631,2.466766,-7.976832,0.743630,0.109467,3.506102,-2.913607,1.013178,-0.964611,1.203086,4.238192,3.966301,-5.469059,6.409857,-9.401540,-2.827729,4.071565,3.902758,0.238136,7.576780,-5.960737,1.222619,-6.021162,-5.672811,-2.653490,-3.908543,9.776130,8.274067,-1.324225,0.907406,-5.256020,-7.850864,5.155328,2.787251,-2.958971,-0.810718,5.561646,-6.556917,-4.216844,4.355736,-9.746611,-2.887725,8.215203,-0.452509,-2.192176,-1.079075,6.116643,-8.382642,2.810039,0.598136,-6.876233,-8.655216,5.864677,-9.119745,9.721198,-9.919514,8.488691,5.990525,-1.686541], dtype = "float64")#candidate|7515|(120,)|const|float64
call_7514 = relay.TupleGetItem(func_1402_call(relay.reshape(const_7515.astype('float64'), [15, 1, 8])), 0)
call_7516 = relay.TupleGetItem(func_1405_call(relay.reshape(const_7515.astype('float64'), [15, 1, 8])), 0)
func_4793_call = mod.get_global_var('func_4793')
func_4794_call = mutated_mod.get_global_var('func_4794')
call_7547 = relay.TupleGetItem(func_4793_call(), 0)
call_7548 = relay.TupleGetItem(func_4794_call(), 0)
func_2584_call = mod.get_global_var('func_2584')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_7553 = relay.TupleGetItem(func_2584_call(), 0)
call_7554 = relay.TupleGetItem(func_2585_call(), 0)
output = relay.Tuple([call_7504,call_7514,const_7515,call_7547,call_7553,])
output2 = relay.Tuple([call_7505,call_7516,const_7515,call_7548,call_7554,])
func_7555 = relay.Function([], output)
mod['func_7555'] = func_7555
mod = relay.transform.InferType()(mod)
output = func_7555()
func_7556 = relay.Function([], output)
mutated_mod['func_7556'] = func_7556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5616_call = mod.get_global_var('func_5616')
func_5618_call = mutated_mod.get_global_var('func_5618')
call_7595 = relay.TupleGetItem(func_5616_call(), 0)
call_7596 = relay.TupleGetItem(func_5618_call(), 0)
output = relay.Tuple([call_7595,])
output2 = relay.Tuple([call_7596,])
func_7601 = relay.Function([], output)
mod['func_7601'] = func_7601
mod = relay.transform.InferType()(mod)
output = func_7601()
func_7602 = relay.Function([], output)
mutated_mod['func_7602'] = func_7602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5544_call = mod.get_global_var('func_5544')
func_5545_call = mutated_mod.get_global_var('func_5545')
call_7606 = relay.TupleGetItem(func_5544_call(), 1)
call_7607 = relay.TupleGetItem(func_5545_call(), 1)
func_7601_call = mod.get_global_var('func_7601')
func_7602_call = mutated_mod.get_global_var('func_7602')
call_7618 = relay.TupleGetItem(func_7601_call(), 0)
call_7619 = relay.TupleGetItem(func_7602_call(), 0)
bop_7657 = relay.less(call_7606.astype('bool'), relay.reshape(call_7618.astype('bool'), relay.shape_of(call_7606))) # shape=(5, 14, 1)
bop_7660 = relay.less(call_7607.astype('bool'), relay.reshape(call_7619.astype('bool'), relay.shape_of(call_7607))) # shape=(5, 14, 1)
output = relay.Tuple([bop_7657,])
output2 = relay.Tuple([bop_7660,])
func_7663 = relay.Function([], output)
mod['func_7663'] = func_7663
mod = relay.transform.InferType()(mod)
output = func_7663()
func_7664 = relay.Function([], output)
mutated_mod['func_7664'] = func_7664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7555_call = mod.get_global_var('func_7555')
func_7556_call = mutated_mod.get_global_var('func_7556')
call_7717 = relay.TupleGetItem(func_7555_call(), 2)
call_7718 = relay.TupleGetItem(func_7556_call(), 2)
func_2857_call = mod.get_global_var('func_2857')
func_2858_call = mutated_mod.get_global_var('func_2858')
call_7761 = relay.TupleGetItem(func_2857_call(), 0)
call_7762 = relay.TupleGetItem(func_2858_call(), 0)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_7763 = relay.TupleGetItem(func_2758_call(), 0)
call_7764 = relay.TupleGetItem(func_2759_call(), 0)
func_7555_call = mod.get_global_var('func_7555')
func_7556_call = mutated_mod.get_global_var('func_7556')
call_7770 = relay.TupleGetItem(func_7555_call(), 3)
call_7771 = relay.TupleGetItem(func_7556_call(), 3)
output = relay.Tuple([call_7717,call_7761,call_7763,call_7770,])
output2 = relay.Tuple([call_7718,call_7762,call_7764,call_7771,])
func_7781 = relay.Function([], output)
mod['func_7781'] = func_7781
mod = relay.transform.InferType()(mod)
mutated_mod['func_7781'] = func_7781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7781_call = mutated_mod.get_global_var('func_7781')
call_7782 = func_7781_call()
output = call_7782
func_7783 = relay.Function([], output)
mutated_mod['func_7783'] = func_7783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7601_call = mod.get_global_var('func_7601')
func_7602_call = mutated_mod.get_global_var('func_7602')
call_7795 = relay.TupleGetItem(func_7601_call(), 0)
call_7796 = relay.TupleGetItem(func_7602_call(), 0)
output = call_7795
output2 = call_7796
func_7799 = relay.Function([], output)
mod['func_7799'] = func_7799
mod = relay.transform.InferType()(mod)
mutated_mod['func_7799'] = func_7799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7799_call = mutated_mod.get_global_var('func_7799')
call_7800 = func_7799_call()
output = call_7800
func_7801 = relay.Function([], output)
mutated_mod['func_7801'] = func_7801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6741_call = mod.get_global_var('func_6741')
func_6742_call = mutated_mod.get_global_var('func_6742')
call_7985 = func_6741_call()
call_7986 = func_6741_call()
func_4837_call = mod.get_global_var('func_4837')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_7987 = relay.TupleGetItem(func_4837_call(), 1)
call_7988 = relay.TupleGetItem(func_4838_call(), 1)
func_7265_call = mod.get_global_var('func_7265')
func_7267_call = mutated_mod.get_global_var('func_7267')
call_7996 = relay.TupleGetItem(func_7265_call(), 1)
call_7997 = relay.TupleGetItem(func_7267_call(), 1)
func_6396_call = mod.get_global_var('func_6396')
func_6398_call = mutated_mod.get_global_var('func_6398')
call_8001 = relay.TupleGetItem(func_6396_call(), 0)
call_8002 = relay.TupleGetItem(func_6398_call(), 0)
func_4033_call = mod.get_global_var('func_4033')
func_4035_call = mutated_mod.get_global_var('func_4035')
var_8005 = relay.var("var_8005", dtype = "int32", shape = (2688,))#candidate|8005|(2688,)|var|int32
call_8004 = relay.TupleGetItem(func_4033_call(relay.reshape(var_8005.astype('int32'), [12, 16, 14])), 0)
call_8006 = relay.TupleGetItem(func_4035_call(relay.reshape(var_8005.astype('int32'), [12, 16, 14])), 0)
bop_8013 = relay.floor_divide(call_8004.astype('float32'), relay.reshape(var_8005.astype('float32'), relay.shape_of(call_8004))) # shape=(12, 16, 14)
bop_8016 = relay.floor_divide(call_8006.astype('float32'), relay.reshape(var_8005.astype('float32'), relay.shape_of(call_8006))) # shape=(12, 16, 14)
func_6333_call = mod.get_global_var('func_6333')
func_6339_call = mutated_mod.get_global_var('func_6339')
const_8026 = relay.const([[-4,-8,-10,8,-8,-5,-2,-5,5,-1,-3,-4,-9,7,6,6,6,9,-8,3,3,-2,-1,5,2,10,7,2,4,3,-7,-1,4,10,6,10,1,8,7,-9,-1,6,-10,1,-8,-3,-3,9,-6,-1,-4,2,1,9,-5,-10,-5,4,5,-1,-10,-9,1,-2,8,-7,-4,-8,-1,4,-3,-2,-1,8,-2,10,-3,6,-8,1,2,8,1,1,-1,9,9,6,8,7,-3,3,-5,-10,-7,-9,-10,-3,1,2,8,7,5,-9,-7,4,-1,-6,5,-9,8,1,3,7,-5,5,2,-1,7,-9,-6,6,1,-4,-9,-1,1,5,4,-7,2,-4,-7,-1,-7,-3,-5,-10,3,5,9,1,5,-3,7,-2,5,7,-5,8,-1,4,-10,-4,-10,-8,-4,8,-4,-2,4,-2,-2,-1,-9,8,10,8,10,-4,3,-1,1,-8,-2,-6,2,7,8,2,9,-7,-6,10,7,6,7,8,-7,-3,-5,-9,-8,3,-6,-3,-5,-7,-5,6,-2,3,10,-9,6,-9,-2,9,5,-8,-7,10,-3,-4,2,2,10,7,-7,-8,10,-5,6,-6,6,-3,-7,6,8,8,-7,7,-4,-1,1,-5,7,-3,3,-3,3,5,-9,-10,10,8,-6,9,7,2,-9,9,6,8,-3,-2,9,8,8,-4,6,8,-6,4,6,1,3,-3,4,-2,-4,-5,10,10,3,-6,7,5,-2,-7,6,-4,-10,2,10,-4,6,9,5,4,5,-1,6,6,-6,4,4,3,-9,-9,6,-3,-5,8,4,-9,4,1,-7,-7,3,5,1,1,-2,9,6,-2,-8,10,-6,1,1,9,-1,3,8,-1,-7,-1,3,-8,-5,9,-5,-5,7,1,8,-8,-6,4,10,-5,8,-7,-9,1,9,9,-8,-3,8,5,-5,6,-7,-5,6,5,9,8,-8,4,-8,1,5,2,-9,-9,1,6,-6,4,-3,9,-10,-2,5,-6,-6,10,1,5,9,4,9,-10,1,8,-3,-7,-1,1,-2,-2,4,-2,-4,-6,-2,6,2,-6,-2,-8,1,-7,-4,-10,-7,-7,-6,7,5,-6,-6,8,-8,3,-9,4,8,-4,-2,-9,9,-10,-4,-7,-10,5,3,8,-10,-3,3,10,-9,-6,-1,9,-2,4,-6,6,-2,-4,6,10,2,-4,-1,8,9,2,-8,9,-10,7,-4,1,-6,4,-6,8,6,-3,-8,-6,3,-6,-8,1,8,5,-1,-1,-3,8,7,-7,10,9,-1,5,-4,-6,-8,2,5,1,8,-2,4,10,6,4,9,5,8,-5,5,-5,-8,-10,-8,8,2,7,-2,7,6,5,3,-7,-2,-5,4,9,-9,-5,-9,-3,5,-6,6,-6,-3,2,-2,8,1,-10,-5,5,9,1,2,-8,-3,-5,-6,-5,-1,6,6,-9,9,-2,-10,8,-6,7,2,-7,10,6,-3,6,8,9,-7,-10,10,3,-8,1,-10,4,-4,9,-6,-1,-7,-5,10,-8,-6,7,10,-8,-1,-4,7,-4,-2,-6,-9,-7,5,-3,8,4,-2,10,1,10,-4,2,4,-2,-1,3,7,-8,2,7,-5,-1,-4,-6,-8,-6,3,-6,3,3,8,6,6,6,-7,7,8,6,-1,-6,1,1,-9,10,5,-8,9,-8,7,-2,-9,-6,-9,10,5,8,9,1,-8,-1,-6,8,2,10,-10,-6,3,9,-2,-3,4,-6,-3,-2,-10,6,4,1,9,-7,-4,-1,5,-9,6,8,3,6,1,-7,-3,-6,6,-4,9,-8,-6,-9,7,-2,2,-7,-3,1,9,6,-2,10,10,-4,7,3,1,6,2,2,-7,-6,-10,-6,-6,2,5,-7,5,-5,5,8,9,-3,4,-2]], dtype = "int16")#candidate|8026|(1, 720)|const|int16
var_8027 = relay.var("var_8027", dtype = "float64", shape = ())#candidate|8027|()|var|float64
var_8028 = relay.var("var_8028", dtype = "float32", shape = (490,))#candidate|8028|(490,)|var|float32
const_8029 = relay.const([-1,-5,3,8,2,-10,9,10,2,-5,9,3,8,7,9,6,-3,2,6,2,3,2,-7,-9,-8,-7,-10,1,4,-6,9,3,-4,10,5,6,3,2,-10,10,-3,-5,5,-1,-7,6,-8,10,5,9,-1,10,3,-5,-2,1,1,-10,-3,7,-7,-5,-1,-6,2,-6,2,-6,-9,8,-5,-9,-6,-5,2,-6,-7,4,4,4,-5,1,-10,2,2,-1,2,3,10,4,10,-1,-1,-4,-6,4,-3,-9,-6,2,-3,-2,6,-3,-5,-10,-7,3,7,4,8,-3,5,-3,4,-6,10,-4,-7,-3,-1,9,-6,-7,-10,4,-1,8,-2,-6,10,-5,-1,-7,3,-1,4,4,10,3,-6,-9,-8,4,10,6,3,-10,-8,3,10,-8,3,6,-7,7,-8,10,-3,-3,4,3,-9,-2,-4,8,10,-10,-10,-10,5,-10,-2,-8,5,-8,-1,6,5,-8,-4,5,-4,7,-1,-1,-4,9,1,1,-1,7,-1,1,-3,-7,7,1,6,7,4,-4,-1,4,-2,-10,-5,4,-9,4,-6,-9,2,4,7,-3,-1,1,10,4,2,5,-10,-3,-4,3,7,-2,-1,7,10,-8,9,-5,-7,-2,-2,6,6,2,-6,1,-4,-2,-1,-2,-1,6,-2,-10,9,-5,9,-2,1,-6,-9,-10,-9,-8,3,5,-2,3,-9,2,5,8,1,10,6,-10,-4,-7,-3,5,-9,-10,-1,-7,-6,-8,-10,-4,10,4,-1,-10,5,7,-6,-3,-3,8,-8,4,-5,6,1,-8,-5,7,-5,8,-8,-9,7,9,-7,-4,3,-10,4,-6,5,8,-4,-5,-3,10,-7,-6,-1,4,4,-4,8,5,-1,7,-5,-5,1,2,2,-5,-3,1,6,3,-5,-6,2,-7,4,-8,-10,-8,2,4,3,10,10,9,9,7,10,1,7,-4,3,-10,4,5,-9,9,6,-6,-3,2,7,-7,5,7,-7,2,5,-4,-1,5,6,10,3,10,-10,-9,-4,-4,-6,10,3,3,6,-5,4,7,-5,-2,4,6,6,3,-4,6,7,1,-10,8,-2,2,-6,-6,7,-1,1,9,3,-5,8,-6,1,-8,4,6,-10,1,-9,-7,6,1,5,5,3,-6,-5,-9,2,7,3,1,4,-9,9,-3,-6,-4,-6,3,-1,10,3,-2,5,10,-3,-1,-3,9,-10,6,-9,-1,9,2,-4,8,10,-2,-7,4,1,6,8,5,10,-6,-2,-1,2,5,-6,3,10,2,6,-9,1,-1,5,-9,-7,-3,3,-4,-1,-10,9,-4,9,-8,2,-1,7,4,-10,-6,-7,8,6,4,10,-4,-7,9,4,10,9,9,-5,-7,-5,4,3,-1,-5,-6,-8,5,7,-9,1,9,1,5,10,-3,-6,-6,-8,-8,3,-9,4,-6,5,-4,-7,8,10,5,9,6,4,4,10,-4,-6,1,6,3,-5,10,9,-9,5,-10,2,8,7,-8,4,7,7,-1,7,2,10,-3,2,-7,-6,1,-10,-1,-3,-3,3,8,-2,-10,-3,-1,6,2,-6,9,8,7,3,7,9,4,10,1,-2,-10,-5,10,7,-3,2,4,-2,-8,-2,-10,4,4,-7,-7,6,-6,10,-2,9,-9,-7,-1,-5,3,-5,-10,-8,-3,7,-6,7,4,9,4,1,-8,-10,7,-7,5,-5,1,7,-10,3,-7,-9,8,9,5,7,8,2,5,8,-1,2,8,-5,-6,-6,9,-6,-5,-10,2,-4,7,8,5,-1,-10,-10,2,9,-6,-1,-10,3,-9,-6,2,-3,-5,-2,-10,-1,-6,1,6,6,-2,-8,-5,10,4,6,5,9,-4,-2,-2,5,4,5,-3,-4,9,1,-1,-9,6,-2,-7,-3,-2,5,8,3,5,3,-1,7,7,6,-9,-4,10,-8,-9,-10,-5,-4,-7,6,4,-2,-4,-7,-6,-10,9,10,4,-6,8,-1,-3,8,3,-9,-1,4,-9,10,-5,10,6,3,9,-2,-7,10,9,7,-9,-9,-9,-8,5,6,8,-3,-10,-6,-8,-6,1,-5,1,10,-10,2,3,10,10,7,-3,-6,-7,-2,1,9,1,2,-8,3,3,-7,-9,-4,4,7,-10,-10,5,3,9,8,10,3,-6,5,-4,-6,9,10,-1,-1,-1,-1,5,4,8,2,-4,5,1,-9,-2,8,7,7,6,-1,10,-5,6,9,-1,-3,5,-7,7,3,-3,3,8,7,9,-3,10,6,-7,-1,5,7,1,10,10,-9,4,-10,-1,6,-7,-3,-9,10,-3,8,4,-1,7,-4,5,-9,-5,-9,8,-8,-6,-9,-1,1,-1,-3,-4,1,-6,-10,6,9,-8,10,6,10,-1,7,9,6,-8,-6,-5,-6,10,3,-5,9,-3,-1,9,10,-10,1,-8,-9,8,-1,-2,8,-4,10,-5,5,8,-6,-7,6,-7,7,4,4,-3,8,3,-7,-9,10,-6,4,3,10,6,7,2,1,-4,-9,9,2,3,10,-8,8,7,7,-1,10,-4,-3,3,-2,6,-5,9,8,9,-4,10,1,3,7,-7,-3,4,-7,7,-5,1,1,-7,1,-9,-3,8,-8,3,7,2,3,6,-6,-9,8,-1,9,-8,-6,-5,9,4,-6,-5,-1,5,-7,-5,-3,-6,-6,2,6,6,-10,-10,6,-8,-3,9,4,-7,4,3,-6,-10,5,6,3,-3,4,-4,7,5,7,-3,8,1,10,1,5,6,5,-3,-5,3,-10,-2,-9,1,10,8,-2,2,-4,-7,4,9,7,-8,-10,4,10,-9,2,6,3,-4,10,6,8,-3,1,2,5,2,2,5,3,-10,5,-7,-7,-3,6,3,5,6,9,5,1,9,-5,-5,10,1,3,-4,-10,9,8,-2,9,10,10,-4,-3,4,9,6,7,7,-9,10,7,9,-3,-10,-1,-10,4,-1,9,6,-5,9,2,-9,6,2,9,1,-2,-4,-9,-5,-8,-1,4,-5,2,10,-10,6,-10,-1,10,3,-1], dtype = "uint8")#candidate|8029|(1155,)|const|uint8
call_8025 = relay.TupleGetItem(func_6333_call(relay.reshape(const_8026.astype('int16'), [720,]), relay.reshape(var_8027.astype('float64'), []), relay.reshape(var_8028.astype('float32'), [5, 14, 7]), relay.reshape(const_8029.astype('uint8'), [1155,]), ), 10)
call_8030 = relay.TupleGetItem(func_6339_call(relay.reshape(const_8026.astype('int16'), [720,]), relay.reshape(var_8027.astype('float64'), []), relay.reshape(var_8028.astype('float32'), [5, 14, 7]), relay.reshape(const_8029.astype('uint8'), [1155,]), ), 10)
func_1247_call = mod.get_global_var('func_1247')
func_1253_call = mutated_mod.get_global_var('func_1253')
const_8058 = relay.const([[-10,2,8,-8,2,-2,-6,-9,1,-1,-6,-5,1,-4,3,5,-9,-9,-2,1,-2,2,1,-10,-7,-5,7,6,8,-1,9,6,4,6,6,-9,-10,6,-4,6,-7,-4,3,-4,-7,-3,2,6,-7,-3,2,1,5,-5,-4,-10,-4,-7,6,9,6,-2,3,4,4,5,1,10,-3,-7,-10,8,-5,2,-6,-5,-6,1],[-6,-1,6,6,4,-5,5,-6,3,8,8,-7,4,9,10,-9,-8,-7,-10,10,-1,3,-9,10,2,7,-1,-6,-8,-4,6,-5,8,9,-4,-2,-5,2,3,-5,-1,6,-9,-6,-9,7,6,2,-3,1,-1,2,-7,2,-6,4,-1,9,3,9,8,1,-10,-7,5,8,-1,4,5,-8,4,10,4,-7,7,-1,4,10],[-5,6,-6,-6,7,7,-9,-4,-8,-10,6,-9,5,-9,-4,-4,-5,-8,7,10,-5,5,-3,-9,-5,-5,-8,3,6,4,-10,-8,-1,8,10,1,6,-1,8,1,-1,-4,1,-2,-9,9,-9,6,3,9,3,-1,7,-7,-4,-8,-7,1,10,-6,-2,-2,-4,-10,-2,2,-8,-4,5,-7,2,-3,8,8,7,-10,-1,-7],[-1,-3,5,-6,-8,-5,-4,3,10,6,8,-7,-7,4,-9,4,10,-3,-3,-6,-1,-4,-3,-2,1,-2,-1,-5,-6,-6,-10,7,8,-4,10,9,-1,6,-10,-9,-6,1,10,6,5,-2,-2,6,8,-2,10,-10,6,4,-6,-8,-4,10,7,9,-7,8,10,3,3,-8,7,-3,6,1,-10,4,10,-7,9,-8,9,-10],[-1,8,-8,-9,6,8,-9,4,7,-5,-2,-3,-10,-1,-10,-7,4,5,4,9,-7,-4,5,8,-3,-9,5,10,-7,-4,2,8,-9,-9,8,-4,4,-1,-3,-1,10,-5,-5,2,-4,9,-8,-3,9,-1,-10,1,-3,3,9,-4,5,6,4,2,-4,5,5,10,-2,10,-6,-3,3,-4,-9,1,-2,6,7,-6,-8,-7],[-3,-8,8,4,-8,2,5,4,-8,10,6,-6,5,-5,6,-5,-7,-3,-2,8,6,-3,-9,8,4,7,-5,10,-8,-10,-7,3,-1,-10,5,-3,1,3,3,-5,-9,-4,7,4,-2,-10,-1,-4,1,-5,3,9,-6,-4,-4,-5,-3,-9,6,6,8,-7,-2,3,-5,2,-6,4,5,-10,-8,4,-5,-2,6,9,7,-5],[8,-4,6,-3,-9,4,-6,3,-1,-5,-9,7,6,-9,3,4,2,4,-6,-10,-5,-8,-9,5,7,-6,7,-2,-1,-8,5,-6,9,-4,-9,9,9,7,10,9,3,6,3,5,-10,-8,4,-3,6,-10,-2,-10,-8,-2,-10,6,10,-3,9,-5,-2,4,-1,-1,-4,3,-1,10,4,6,5,-9,-3,6,-2,-10,7,10],[-1,-4,-3,-3,-4,4,3,1,-3,2,3,-9,-2,7,5,7,10,10,-2,8,6,-1,-3,8,3,3,2,8,2,-3,-5,-2,-6,10,7,-4,-1,1,-7,1,1,-3,7,6,9,8,-4,10,-5,7,-8,5,6,-5,-9,3,10,4,9,1,-1,-3,9,6,4,8,-4,1,-10,-3,3,-8,1,-2,-2,-8,2,-10],[5,-7,-9,10,5,-5,8,-4,3,-5,6,5,-2,2,4,-5,10,-7,4,-4,1,-5,-5,-1,3,-3,3,6,10,-9,2,5,-5,-2,-2,-7,-6,-5,3,1,1,-4,1,2,-10,8,-5,5,-7,-7,3,-3,10,10,-3,-9,5,1,-5,-9,-1,8,-10,-6,-2,-6,-8,-4,9,2,-6,-8,-6,7,3,-8,-3,-2],[1,-9,-10,-8,8,-7,-7,-10,-9,4,-9,-7,-8,-7,-1,-5,-5,-3,-1,-3,2,-5,10,2,4,-5,8,5,6,9,1,10,-8,2,6,10,7,9,-1,-9,8,7,-5,-3,4,-10,4,2,-5,-3,2,-10,-7,8,-1,-2,-10,-6,3,8,9,-4,-8,-7,1,-5,-1,3,4,-7,-8,-4,2,-3,-9,-2,-9,-1],[3,1,8,-10,-8,1,4,-7,-1,-1,2,5,5,10,-6,-2,-1,-4,8,7,6,-10,-8,-5,9,-9,1,2,3,-9,-3,9,-3,-2,-8,-7,-1,-5,3,7,5,2,-1,-2,-6,-7,-4,-4,9,8,-7,2,-1,6,-8,-5,-8,-10,1,7,-5,-6,-9,3,-8,-7,-5,2,7,-9,10,9,3,1,1,9,10,-2],[8,1,8,1,-7,9,-3,-1,6,-3,7,-1,9,2,-9,-2,-2,3,1,3,-8,-3,3,-4,-4,-8,-8,-9,10,10,-8,8,-3,9,-4,-3,-7,1,-2,10,1,-5,8,-8,7,-10,8,6,7,-9,-10,-3,-9,-6,1,-7,4,1,-7,-10,5,-1,8,-8,3,-5,-8,-9,-5,9,10,8,9,-8,8,-1,10,10],[9,10,-3,-4,-7,1,-7,10,8,3,-7,4,-1,-10,8,8,6,-1,4,4,-8,3,-7,3,1,3,-1,5,5,-2,5,-2,9,-2,9,-6,10,2,-4,-3,3,3,4,-5,-3,-3,8,-9,-9,1,6,-4,-9,-4,-3,6,-2,9,8,4,-4,8,-2,-10,8,8,-1,10,1,10,10,2,-6,-7,-7,-6,8,5],[-2,1,-8,-6,3,8,-10,10,6,-10,-4,-9,-8,2,-8,3,3,2,3,10,-1,-2,7,-1,-5,-5,9,-10,8,10,10,-8,7,4,-5,8,1,9,5,2,2,-10,1,8,3,-7,-3,-8,2,-4,4,-5,3,6,-3,-1,6,-7,-1,-6,5,1,-8,-10,-9,-7,8,2,7,1,-6,6,4,-9,-8,-3,-8,-3],[-1,7,9,7,-10,-9,8,-7,-2,4,-8,-1,8,1,8,4,-7,1,9,-3,10,-5,2,1,-5,-2,-8,1,-8,-3,4,-6,-10,-9,9,-5,-4,5,2,-3,-3,-2,-7,8,-5,2,8,-2,-6,-7,-5,-2,-3,-6,-5,6,4,-8,10,6,6,-5,-5,5,10,-6,4,-5,-5,4,9,-7,-7,-6,2,2,-2,-4],[-6,10,-1,-2,-4,-4,7,10,-9,1,-3,-2,-10,3,-3,-9,-8,-6,5,3,-6,-10,-6,-9,9,-8,-6,5,7,8,-7,-9,-5,-3,7,-2,3,-4,-2,2,4,4,-4,-7,-9,1,3,-2,-6,-1,-10,-6,4,-2,4,8,7,9,10,-2,-3,6,2,-4,-2,-3,-7,5,-8,8,4,9,9,-3,-6,-10,8,4],[-6,10,3,-8,4,-4,4,-4,9,10,-5,-6,7,-9,4,5,-2,-7,2,-9,-1,-9,-4,-3,-8,2,-3,-4,6,5,9,-1,-9,-7,-6,-5,9,3,-9,-8,-7,-10,-1,-3,10,-1,2,-9,2,1,-4,6,2,-7,-4,-6,9,3,2,9,8,10,-3,10,-7,-5,9,4,-1,-10,8,-7,-4,7,10,10,7,7],[-1,5,-10,-10,-4,-10,-5,-1,6,2,-10,-8,4,-8,9,10,6,9,8,7,-4,-8,-7,2,8,-7,-2,1,-2,8,8,-3,-5,-10,-2,6,6,-4,4,-10,9,-5,2,-8,6,-8,-4,-7,-3,-2,6,2,-4,6,-2,2,-2,2,-2,-10,6,1,9,7,-6,9,-6,5,9,10,8,3,-9,-5,7,7,3,3],[7,4,-10,-7,-5,-8,8,6,-10,-7,5,-7,-9,-8,-4,4,1,-7,2,9,10,2,5,-3,6,-1,-6,-5,-5,-7,4,-2,-9,7,-5,-9,-4,-1,6,2,-6,4,3,6,4,1,-5,4,2,-3,10,1,2,10,8,1,7,5,-7,-10,-4,-9,-3,-3,8,3,-8,9,8,8,-5,1,6,-4,9,-4,-6,-4],[-9,6,-2,3,-5,10,6,-1,-6,-5,-10,-7,-2,4,5,-6,6,4,-3,8,1,-3,-5,-10,-9,-5,-3,-10,3,-2,5,-7,-4,-6,7,-4,3,7,-4,-9,3,3,-8,10,10,-2,-4,5,9,2,7,-4,5,-8,-2,1,-3,-1,1,2,5,-6,2,-4,5,7,-4,-2,-4,-8,-7,4,-7,-1,-4,10,7,-8],[-9,10,-8,6,7,3,-6,2,3,-1,8,-9,-5,4,6,2,4,-7,-8,6,-9,-1,-1,-8,6,5,3,8,2,1,4,3,-7,10,-5,5,7,-1,-8,1,10,7,9,-3,-9,-8,10,-1,-2,-4,-9,-3,2,3,10,-3,-1,6,-8,-10,3,-2,-1,-10,5,-2,-1,-3,6,3,1,8,8,3,-1,5,-2,9],[-3,6,2,-4,-2,6,-2,-4,6,-6,-8,-2,-3,4,-7,9,-1,8,5,-6,9,-5,-4,-6,4,7,-1,10,-8,-9,7,-5,-7,2,4,-8,-2,4,5,8,-1,9,4,6,-4,-6,-7,1,-3,5,-3,-2,8,-2,-7,-10,3,-2,1,-8,-5,7,-7,-5,3,2,2,2,-2,-3,-3,7,4,-5,-9,1,-9,-5]], dtype = "int32")#candidate|8058|(22, 78)|const|int32
const_8059 = relay.const([2.988929,3.709123,-2.205725,-1.402869,4.288796,-4.890009,5.207943,0.695282,8.167633,-3.860249,1.553354,7.901533,-6.837313,7.858854,8.559506,6.695080,-5.240367,2.369487,0.342533,-0.566475,-7.641913,-4.155873,-2.547431,-5.953330,7.600593,0.017516,7.802630,-9.016296,6.757424,7.098634,-0.044028,-1.311891,-0.381875,7.312138,8.976974,-7.461636,-3.919569,6.614653,-8.133297,1.123315,5.572735,5.815067,6.317908,-0.864579,3.755722,7.757006,-8.145284,-4.480499,-8.805864,-3.418034,0.392033,3.711964,-3.850371,6.561476,-5.816515,-9.394948,2.107591,-4.236861,0.084540,-5.340620,6.750084,-7.086556,5.065596,-4.127275,-2.668584,3.479669,2.909615,0.002387,9.172791,-2.658772,4.155424,6.443260,-6.723322,6.742151,7.427358,-1.556044,-0.542516,-6.412558,-1.322022,4.923643,-5.424444,-5.832087,7.928297,1.652481,-9.613019,-6.025242,-9.771194,9.902184,-5.826685,-6.093154,-8.434760,-1.789923,9.177656,-6.546670,4.083415,-1.537116,-7.942287,4.174213,-1.704271,-1.128633,-6.219572,6.506556,6.544980,-5.146929,0.866010,7.112374,4.726616,-9.241123,-8.306610,-7.712993,-5.676299,5.218553,-9.324895,-3.466397,1.985562,0.215060,-6.465911,-0.438202,9.089692,5.954448,3.468323,-1.596272,-3.770874,4.136725,0.636970,-6.077889,-9.217548,-7.142197,-4.514843,-8.706782,-4.559872,3.493238,-8.265240,-7.891441,-6.693140,-5.840273,-0.865228,6.421424,-3.101886,3.021391,-7.066444,2.287011,-0.345190,6.167573,6.879437,-9.320279,-0.374343,-3.354874,-9.337456,-9.366278,-0.243911,-4.118173,-5.156867,1.389824,6.445463,-6.418684,-0.177886,-2.160538,-7.145113,9.689717,0.971829,5.545918,2.552356,-5.474631,-4.726383,5.778395,-7.340285,9.973384,1.779671,4.399225,2.064905,-2.131314,4.650562,-4.664200,0.108127,4.603444,-7.243893,-8.483476,-6.676414,7.939452,7.280957,5.544656,-0.561079,-7.445269,7.442859,-9.953130,-9.027542,-2.232811,-0.793457,8.086525,-2.630800,-9.827719,5.161036,0.273830,-9.631569,-4.267810,8.432227,9.036962,-7.673750,0.564953,4.814814,-3.780847,-6.217708,8.936301,-9.306488,-6.698120,-8.948400,4.881210,6.429235,5.173455,7.895466,-3.348209,-9.938223,-7.249257,6.856302,-7.757957,-9.567193,-4.794930,-4.173512,8.128358,-8.660013,2.038943,-8.898704,-0.147250,2.511184,4.852929,5.462085,2.412684,9.903943,-8.238065,4.417069,9.667001,-8.401948,6.082025,-7.062805,6.602471,-0.439590,6.020243,7.299151,4.085367,0.290130,0.469251,-0.004556,-3.271618,-6.726930,-5.846484,-3.779965,6.953583,-0.902379,7.188189,1.509314,3.533762,3.272221,0.172153,7.953946,-4.664095,1.927559,9.183930,-2.734449,-4.471856,9.758074,4.057221,-7.333042,-1.700584,2.357151,5.609130,-8.542990,-0.005181,0.905509,-4.863796,-1.715450,-0.918770,-5.246295,1.099175,2.503931,5.124790,3.800251,-9.889498,-7.986236,-2.595872,-6.351941,-1.888367,-3.825321,6.606002,-7.287515,-4.626546,-7.581117,4.431728,8.175958,5.815065,-2.052240,2.401682,4.266889,3.318583,-2.821703,7.994592,-3.359128,6.075658,4.339497,-0.082028,-3.399285,-6.246454,3.411034,2.983616,1.422432,-0.188826,2.898493,2.682490,7.788714,-0.206690,-3.078902,5.945592,-8.614805,8.492734,6.882042,8.048958,6.200443,-5.628349,1.668117,7.697556,-4.109995,-4.925219,7.523942,4.739598,1.310145,-1.243552,3.314422,-3.553677,-5.537795,9.876321,6.727166,7.500860,3.853504,-4.581729,9.296161,7.998394,6.874110,1.686168,3.296869,5.872258,7.038616,-4.697097,8.954289,-4.231883,-4.632218,6.087918,-5.941717,-8.590083,-5.319035,7.060496,-0.988976,-5.086589,-3.738416,-2.779605,-7.642370,-0.614580,1.208923,-4.983090,6.201227,-3.496304,1.221165,-0.993679,-8.664742,3.302792,1.946556,-2.462062,4.536641,6.041589,0.232941,3.658481,4.575252,1.903489,-7.290098,-0.853111,-6.498457,9.625416,-0.929492,6.291459,2.945927,-3.227111,7.108604,-6.113078,7.183742,5.076173,-6.664771,-1.691331,-8.099302,-8.144127,6.231872,8.444243,-1.185454,6.074586,-5.346572,9.386975,1.597219,-3.621313,3.027851,5.452420,-0.055580,3.525282,6.488865,-7.729832,7.782398,-4.498867,9.477852,-2.665685,4.229897,9.509203,-6.457864,4.260850,-0.147257,9.773951,-0.560612,-3.383219,4.611650,1.706963,6.434521,-6.797213,5.743803,4.186421,-9.030473,-7.401988,-9.498584,2.702372,-3.447982,-9.109219,-3.198670,-9.058581,1.962965,6.871902,-8.516803,4.266200,8.311899,-3.374303,1.511094,9.389257,4.090067,5.878383,5.223959,8.288326,3.434570,-5.850815,6.145552,-5.691053,6.426805,4.576120,8.376687,2.647805,-4.026094,5.536568,-1.547135,-6.563336,-6.564870,0.928187,-7.665369,8.625093,-4.892836,-5.947992,9.421210,-2.437107,-7.687275,-5.145020,1.875740,-9.041294,-6.248228,6.599462,9.362770,-7.211215,8.190122,4.522059,-1.228406,5.066001,4.338872,-5.986430,-9.711203,9.518320,-3.219692,-5.377599,-6.297574,-5.584359,-1.611125,2.948507,9.767455,2.316285,9.394241,-8.446424,-0.413277,-0.395530,3.307260,-4.753598,-0.916980,7.582904,3.125753,-8.235043,-6.782947,-0.080570,-9.084099,-5.209586,-7.361585,-7.845901,0.203987,9.759250,-5.585404,9.391147,7.308482,3.189945,7.217983,-8.481324,8.870062,-1.059489,5.975542,-6.802986,-2.473576,2.777355,8.835036,-9.596586,2.481169,-5.459077,-6.462606,4.486271,8.494247,8.985545,1.245380,6.825645,-2.221544,0.280275,2.109951,2.077362,-8.681339,-4.388843,-0.258445,-6.592287,-9.497970,6.917372,-3.245234,-7.225130,5.270945,6.421623,-9.331511,1.476530,-1.708534,-5.792922,2.553108,-9.844129,5.655409,4.270892,2.145457,0.089512,-7.727362,-6.407776,8.872821,-6.743569,-3.817866,-4.766374,-5.591905,4.237102,-0.295209,-4.616671,1.057824,0.477887,0.309864,-3.122367,2.022682,6.518417,-5.935904,-3.599480,-5.661693,9.552146,-4.232943,9.717619,9.432289,-5.706529,5.751234,7.820277,5.496726,8.780419,5.438901,9.420930,2.268748,-3.834565,7.582047,5.500791,1.437403,-0.239589,-7.934216,3.386330,4.484098,2.966097,-4.334302,8.230369,-3.175634,2.752204,6.561697,-0.206512,5.332456,-6.497125,4.851578,-0.792450,-0.538319,4.278907,3.409303,8.501519,-3.471309,7.381048,8.897293,-7.981694,4.029673,-6.109036,-3.742305,0.258468,4.791131,-8.640501,3.835420,-6.206653,-8.046482,4.810782,-0.241734,-0.365582,0.457114,7.281647,-9.843201,-2.048781,3.956702,-5.606674,3.422858,9.143544,-8.434254,-6.255191,4.221699,5.256401,-1.416135,2.481099,3.405632,1.764025,9.799059,-0.352971,-5.858709,5.659201,4.463732,5.668850,1.362828,2.884527,8.937421,9.203895,-1.213461,-5.956542,9.044698,4.038889,4.490582,-8.537901,-9.460272,-7.911769,9.109074,-1.534269,-0.058225,-2.676121,7.973844,9.433289,7.755507,4.523149,3.720845,-1.625559,7.948247,-4.326208,-2.302218,4.529052,8.660081,7.906426,6.238350,2.927011,5.782525,6.240766,1.839028,0.633041,7.194196,5.246142,-0.775075,-7.017297,0.965563,-2.740191,1.072536,-9.858678,-2.764561,4.395864,-5.977025,2.756169,-5.569017,-6.581061,7.665875,-8.784652,-4.073869,6.189879,1.095692,-7.919919,-7.142782,-3.421177,-4.921519,-6.959199,-8.990137,-2.127431,-5.781323,7.769737,-5.406032,4.188747,4.272580,-7.301122,8.598138,7.846431,2.768755,3.914771,-3.285693,2.588367,4.471407,5.850912,-7.651616,-6.513957,1.956627,4.562537,3.363904,5.738117,2.062815,-5.303573,-3.961291,0.546200,3.001440,5.054394,3.929793,-1.845456,9.570075,-9.374050,8.810061,-4.756689,-7.291192,-4.662447,-0.659737,8.997397,0.235904,-9.441997,1.352695,-4.708943,4.457886,-1.979561,-1.367134,2.565444,2.549395,8.587113,-1.719081,3.053437,-2.231919,-3.700121,-6.704092,-3.067179,2.206023,1.615702,-5.369678,8.085552], dtype = "float64")#candidate|8059|(756,)|const|float64
const_8060 = relay.const([[False,True,True,False],[False,False,True,False],[False,True,False,True],[True,False,True,True],[False,True,False,False],[False,True,True,True],[True,True,True,True],[False,False,False,False],[True,True,False,False],[True,False,False,True],[True,True,True,False],[True,False,True,True],[True,True,True,False],[False,True,True,True],[False,False,False,False],[True,False,True,False],[True,True,False,False],[True,True,True,False],[False,False,False,True],[False,True,False,False],[False,True,False,False],[False,True,True,True],[False,True,True,True],[True,False,True,False],[False,False,False,True],[True,False,False,True],[False,False,False,True],[False,False,True,False],[True,True,True,False],[False,False,True,False],[False,False,True,True],[True,True,False,True],[True,False,False,False],[False,False,True,True],[True,True,False,True],[True,True,True,False],[False,False,False,False],[True,True,True,True],[False,False,False,True],[True,False,False,False],[True,False,False,True],[True,True,False,False],[False,False,True,True],[True,False,False,True],[True,False,False,False],[False,True,True,False],[True,True,True,True],[False,True,True,True],[True,False,False,False],[True,True,False,False],[True,True,True,True],[False,True,False,True]], dtype = "bool")#candidate|8060|(52, 4)|const|bool
call_8057 = relay.TupleGetItem(func_1247_call(relay.reshape(const_8058.astype('int32'), [11, 12, 13]), relay.reshape(var_8027.astype('float64'), []), relay.reshape(const_8059.astype('float64'), [756,]), relay.reshape(const_8060.astype('bool'), [104, 2]), ), 1)
call_8061 = relay.TupleGetItem(func_1253_call(relay.reshape(const_8058.astype('int32'), [11, 12, 13]), relay.reshape(var_8027.astype('float64'), []), relay.reshape(const_8059.astype('float64'), [756,]), relay.reshape(const_8060.astype('bool'), [104, 2]), ), 1)
func_1358_call = mod.get_global_var('func_1358')
func_1361_call = mutated_mod.get_global_var('func_1361')
var_8063 = relay.var("var_8063", dtype = "bool", shape = (2145,))#candidate|8063|(2145,)|var|bool
call_8062 = func_1358_call(relay.reshape(var_8063.astype('bool'), [13, 15, 11]), relay.reshape(var_8063.astype('bool'), [13, 15, 11]), )
call_8064 = func_1358_call(relay.reshape(var_8063.astype('bool'), [13, 15, 11]), relay.reshape(var_8063.astype('bool'), [13, 15, 11]), )
output = relay.Tuple([call_7985,call_7987,call_7996,call_8001,bop_8013,call_8025,const_8026,var_8027,var_8028,const_8029,call_8057,const_8058,const_8059,const_8060,call_8062,var_8063,])
output2 = relay.Tuple([call_7986,call_7988,call_7997,call_8002,bop_8016,call_8030,const_8026,var_8027,var_8028,const_8029,call_8061,const_8058,const_8059,const_8060,call_8064,var_8063,])
func_8066 = relay.Function([var_8005,var_8027,var_8028,var_8063,], output)
mod['func_8066'] = func_8066
mod = relay.transform.InferType()(mod)
var_8067 = relay.var("var_8067", dtype = "int32", shape = (2688,))#candidate|8067|(2688,)|var|int32
var_8068 = relay.var("var_8068", dtype = "float64", shape = ())#candidate|8068|()|var|float64
var_8069 = relay.var("var_8069", dtype = "float32", shape = (490,))#candidate|8069|(490,)|var|float32
var_8070 = relay.var("var_8070", dtype = "bool", shape = (2145,))#candidate|8070|(2145,)|var|bool
output = func_8066(var_8067,var_8068,var_8069,var_8070,)
func_8071 = relay.Function([var_8067,var_8068,var_8069,var_8070,], output)
mutated_mod['func_8071'] = func_8071
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8096 = relay.var("var_8096", dtype = "float64", shape = (15, 13, 11))#candidate|8096|(15, 13, 11)|var|float64
uop_8097 = relay.sqrt(var_8096.astype('float64')) # shape=(15, 13, 11)
output = uop_8097
output2 = uop_8097
func_8126 = relay.Function([var_8096,], output)
mod['func_8126'] = func_8126
mod = relay.transform.InferType()(mod)
mutated_mod['func_8126'] = func_8126
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8127 = relay.var("var_8127", dtype = "float64", shape = (15, 13, 11))#candidate|8127|(15, 13, 11)|var|float64
func_8126_call = mutated_mod.get_global_var('func_8126')
call_8128 = func_8126_call(var_8127)
output = call_8128
func_8129 = relay.Function([var_8127], output)
mutated_mod['func_8129'] = func_8129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2584_call = mod.get_global_var('func_2584')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_8152 = relay.TupleGetItem(func_2584_call(), 0)
call_8153 = relay.TupleGetItem(func_2585_call(), 0)
var_8182 = relay.var("var_8182", dtype = "float32", shape = (5, 14, 11))#candidate|8182|(5, 14, 11)|var|float32
bop_8183 = relay.bitwise_or(call_8152.astype('uint64'), var_8182.astype('uint64')) # shape=(5, 14, 11)
bop_8186 = relay.bitwise_or(call_8153.astype('uint64'), var_8182.astype('uint64')) # shape=(5, 14, 11)
func_5568_call = mod.get_global_var('func_5568')
func_5569_call = mutated_mod.get_global_var('func_5569')
call_8188 = func_5568_call()
call_8189 = func_5568_call()
func_4759_call = mod.get_global_var('func_4759')
func_4761_call = mutated_mod.get_global_var('func_4761')
call_8195 = relay.TupleGetItem(func_4759_call(), 2)
call_8196 = relay.TupleGetItem(func_4761_call(), 2)
output = relay.Tuple([bop_8183,call_8188,call_8195,])
output2 = relay.Tuple([bop_8186,call_8189,call_8196,])
func_8198 = relay.Function([var_8182,], output)
mod['func_8198'] = func_8198
mod = relay.transform.InferType()(mod)
var_8199 = relay.var("var_8199", dtype = "float32", shape = (5, 14, 11))#candidate|8199|(5, 14, 11)|var|float32
output = func_8198(var_8199)
func_8200 = relay.Function([var_8199], output)
mutated_mod['func_8200'] = func_8200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4104_call = mod.get_global_var('func_4104')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_8254 = func_4104_call()
call_8255 = func_4104_call()
output = relay.Tuple([call_8254,])
output2 = relay.Tuple([call_8255,])
func_8264 = relay.Function([], output)
mod['func_8264'] = func_8264
mod = relay.transform.InferType()(mod)
output = func_8264()
func_8265 = relay.Function([], output)
mutated_mod['func_8265'] = func_8265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6633_call = mod.get_global_var('func_6633')
func_6634_call = mutated_mod.get_global_var('func_6634')
call_8268 = func_6633_call()
call_8269 = func_6633_call()
func_3243_call = mod.get_global_var('func_3243')
func_3245_call = mutated_mod.get_global_var('func_3245')
var_8283 = relay.var("var_8283", dtype = "float32", shape = (429,))#candidate|8283|(429,)|var|float32
call_8282 = relay.TupleGetItem(func_3243_call(relay.reshape(var_8283.astype('float32'), [429,])), 0)
call_8284 = relay.TupleGetItem(func_3245_call(relay.reshape(var_8283.astype('float32'), [429,])), 0)
uop_8295 = relay.atanh(var_8283.astype('float64')) # shape=(429,)
var_8302 = relay.var("var_8302", dtype = "float32", shape = (3, 13, 11))#candidate|8302|(3, 13, 11)|var|float32
bop_8303 = relay.left_shift(call_8282.astype('int16'), relay.reshape(var_8302.astype('int16'), relay.shape_of(call_8282))) # shape=(3, 13, 11)
bop_8306 = relay.left_shift(call_8284.astype('int16'), relay.reshape(var_8302.astype('int16'), relay.shape_of(call_8284))) # shape=(3, 13, 11)
var_8309 = relay.var("var_8309", dtype = "float64", shape = (429,))#candidate|8309|(429,)|var|float64
bop_8310 = relay.mod(uop_8295.astype('float64'), relay.reshape(var_8309.astype('float64'), relay.shape_of(uop_8295))) # shape=(429,)
output = relay.Tuple([call_8268,bop_8303,bop_8310,])
output2 = relay.Tuple([call_8269,bop_8306,bop_8310,])
func_8321 = relay.Function([var_8283,var_8302,var_8309,], output)
mod['func_8321'] = func_8321
mod = relay.transform.InferType()(mod)
mutated_mod['func_8321'] = func_8321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8321_call = mutated_mod.get_global_var('func_8321')
var_8323 = relay.var("var_8323", dtype = "float32", shape = (429,))#candidate|8323|(429,)|var|float32
var_8324 = relay.var("var_8324", dtype = "float32", shape = (3, 13, 11))#candidate|8324|(3, 13, 11)|var|float32
var_8325 = relay.var("var_8325", dtype = "float64", shape = (429,))#candidate|8325|(429,)|var|float64
call_8322 = func_8321_call(var_8323,var_8324,var_8325,)
output = call_8322
func_8326 = relay.Function([var_8323,var_8324,var_8325,], output)
mutated_mod['func_8326'] = func_8326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4793_call = mod.get_global_var('func_4793')
func_4794_call = mutated_mod.get_global_var('func_4794')
call_8343 = relay.TupleGetItem(func_4793_call(), 1)
call_8344 = relay.TupleGetItem(func_4794_call(), 1)
func_3215_call = mod.get_global_var('func_3215')
func_3218_call = mutated_mod.get_global_var('func_3218')
const_8348 = relay.const([-6.448533,1.281569,-1.949430,-0.828948,5.591725,4.091805,7.407657,3.480815,-7.941589,-4.113662,-1.243890,-6.575618,-9.380597,9.406650,-9.607891,0.038921,7.469124,-1.981986,2.076668,-6.069483,0.505572,-5.192581,6.336692,-7.617951,-2.375645,5.850759,7.337557,3.911143,-4.339738,-5.166238,-2.759588,7.454203,-7.613473,8.452883,5.090863,-1.244659,7.587703,2.628573,-5.113793,8.885394,6.800122,6.226634,-4.294282,-8.635239,4.935975,2.522569,-8.569818,8.967062,-7.143340,7.163467,-4.270701,-0.061623,-9.343872,-4.180272,1.608563,1.996860,-1.738885,-0.731038,6.849330,-9.548448,3.717473,-8.284866,-8.603808,-7.002496,-9.433518,-8.694301,-7.067347,8.182466,6.721365,8.660182,3.771336,5.388219,-5.618459,-8.269941,-4.101400,-9.884329,-2.196475,0.578290,3.845214,2.199806,2.795511,-0.513131,9.607161,8.162219,-1.458664,0.628165,1.479821,3.222342,-2.494323,-7.480312,-2.915537,-9.330757,8.065280,-8.728753,-9.590584,7.806096,8.344663,1.150065,8.031839,8.150384,5.602803,4.424647,6.744847,-5.846688,-5.207548,-8.415408,-1.724275,3.476951,2.060758,-6.803193,2.850921,5.271928,8.001561,5.389769,9.103973,-3.284857,-0.627179,-9.634834,0.776324,7.467654,2.416891,-2.619227,5.048071,8.397619,2.926258,-1.999072,3.198442,-4.231190,-4.344933,9.342185,-2.921575,-6.682476,7.005977,4.938048,-4.608544,-3.332932,-5.101342,6.754716,-7.466162,-1.730478,-1.011331,7.311615,9.293550,-7.932517,4.667969,4.435077,-3.482275,-0.531883,-1.463260,-4.426457,1.200985,-6.957275,8.883772,8.398707,5.368490,-2.729249,-2.573172,6.466132,3.985958,7.251478,-8.852237,-0.892524,-5.550362,-4.091356,-3.109061,1.832696,-5.833560,-4.124226,2.812986,0.629823,6.131303,-8.649049,1.397693,5.911848,-8.996581,-9.971691,-9.067763,9.397923,0.610668,9.175200,-4.885350,5.957667,6.794508,-4.796067,2.169606,2.750924,3.418021,-1.525237,2.560476,2.939094,-8.886118,-3.379562,0.247428,-4.521591,-6.117861,-4.212046,-0.849032,2.662473,8.394216,7.004343,3.681453,-7.633740,-9.174133,-6.785862,-4.611318,4.231958,7.903561,3.878439,0.435553,9.700333,-4.754040,-2.952915,-1.087246,-5.895170,-2.538680,-5.007177,-2.837639,-7.436987,-9.308115,-7.272156,9.722000,8.272506,-0.964038,1.733137,-3.746169,7.076718,-9.882309,-3.739947,6.407223,5.087220,-1.022605,0.394655,-3.154397,1.859515,-9.231396,9.227424,-7.162215,-9.036107,-0.364379,-4.058198,8.598219,2.267724,-6.265968,-8.518180,-5.110025,7.789823,6.375578,6.906683,-5.390444,-8.509659,-3.285565,-4.659642,8.449658,3.739939,-1.571945,-8.574506,1.279477,-9.473763,7.124225,4.863105,-4.949384,-1.936610,-3.184650,8.539351,7.855269,0.272666,9.089776,-9.236199,3.779670,-3.036485,4.126997,2.097840,-0.574218,-8.241734,-5.634283,3.683616,-7.560499,-0.296669,7.943045,-9.586937,-5.448898,4.657892,5.260587,-8.698033,9.510362,1.634072,1.220301,-7.027605,-2.763229,-2.682078,-1.099293,6.797294,5.995715,5.754870,9.489793,0.209460,-2.370255,1.327632,-0.790099,-5.632459,1.178497,7.300316,-9.605370,-0.146335,-0.092361,0.846365,3.733483,-4.696080,-7.211526,1.729000,8.898453,4.864495,0.971846,3.368020,-2.257951,-0.429757,0.852489,0.234918,5.359255,-3.849011,-4.721158,-2.557508,-4.739134,-1.283701,9.006901,-3.845739,0.699513,-3.532041,2.985853,-7.572066,7.159896,4.179944,-3.411055,-3.051184,-2.790725,-3.553023,-1.692163,-0.996398,2.218386,0.427728,6.453476,5.946082,-7.674822,3.723105,4.442478,7.657561,-0.734047,-4.826923,7.770164,-4.685363,1.628746,-7.230831,-2.551321,2.541478,-3.429884,-3.849114,-6.270074,-1.539687,5.585373,-8.155322,3.386077,0.868046,-0.077544,7.759827,-9.349007,-0.145247,-1.547665,0.013738,6.189540,-2.665647,2.170322,0.589708,-0.087486,-2.433607,-5.224501,-2.831387,1.656207,8.068000,1.050539,0.406553,1.840005,-5.024551,8.844481,-7.146071,-8.322569,-2.269219,0.714862,1.762853,8.141431,6.180585,8.792383,3.538141,3.270653,-1.109671,1.085739,-7.756768,7.574925,-7.602313,-3.448493,-6.011447,9.436644,-5.808772,-7.026394,-9.684060,-6.503937,8.524184,-1.810639,-5.128661,-2.712550,-3.151217,-9.498557,-3.485512,4.200912,-1.215718,5.057979,-7.518965,4.252131,1.134923,1.232121,3.561415], dtype = "float32")#candidate|8348|(420,)|const|float32
call_8347 = relay.TupleGetItem(func_3215_call(relay.reshape(const_8348.astype('float32'), [5, 14, 6])), 0)
call_8349 = relay.TupleGetItem(func_3218_call(relay.reshape(const_8348.astype('float32'), [5, 14, 6])), 0)
var_8364 = relay.var("var_8364", dtype = "bool", shape = (5, 14, 6))#candidate|8364|(5, 14, 6)|var|bool
bop_8365 = relay.logical_or(call_8347.astype('bool'), relay.reshape(var_8364.astype('bool'), relay.shape_of(call_8347))) # shape=(5, 14, 6)
bop_8368 = relay.logical_or(call_8349.astype('bool'), relay.reshape(var_8364.astype('bool'), relay.shape_of(call_8349))) # shape=(5, 14, 6)
output = relay.Tuple([call_8343,const_8348,bop_8365,])
output2 = relay.Tuple([call_8344,const_8348,bop_8368,])
func_8397 = relay.Function([var_8364,], output)
mod['func_8397'] = func_8397
mod = relay.transform.InferType()(mod)
mutated_mod['func_8397'] = func_8397
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8398 = relay.var("var_8398", dtype = "bool", shape = (5, 14, 6))#candidate|8398|(5, 14, 6)|var|bool
func_8397_call = mutated_mod.get_global_var('func_8397')
call_8399 = func_8397_call(var_8398)
output = call_8399
func_8400 = relay.Function([var_8398], output)
mutated_mod['func_8400'] = func_8400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5413_call = mod.get_global_var('func_5413')
func_5415_call = mutated_mod.get_global_var('func_5415')
call_8410 = func_5413_call()
call_8411 = func_5413_call()
func_4837_call = mod.get_global_var('func_4837')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_8412 = relay.TupleGetItem(func_4837_call(), 0)
call_8413 = relay.TupleGetItem(func_4838_call(), 0)
func_1155_call = mod.get_global_var('func_1155')
func_1159_call = mutated_mod.get_global_var('func_1159')
const_8421 = relay.const([-8.832421,-2.236663,-6.336961,-4.999438,5.182223,-9.415271,-7.771602,0.167843,6.534287,-9.502643,1.265902,7.972301,-3.380088,-5.659633,-8.304295,6.318007,7.840498,5.905121,-0.534605,5.941205,4.984962,7.358829,5.177200,8.800757,-7.205285,-0.164113,-1.022704,5.249840,1.898135,-8.607005,-9.756577,0.364934,-0.037150,3.404598,-9.598357,-1.796951,6.313307,9.342404,-8.279353,2.857105,-6.463240,-0.385784,2.485984,1.402503,-4.780507,-3.576708,4.347786,-7.590668,-9.652738,0.584686,-9.669431,-3.875149,5.189822,-8.598094,1.945892,-7.411472,-9.982962,-9.845849,2.826527,-9.366469,-6.292570,-7.616677,-9.414516,8.610680,-0.558318,4.689524,-1.116682,-5.419029,-5.341711,6.052414,-7.166453,9.906278,3.960307,2.698740,-8.188106,-3.753363,-6.023264,-6.981594,9.418837,-0.703599,-2.841752,-1.281735,7.613940,-0.039471,-0.936728,5.514617,-5.615117,5.077506,5.436747,-5.607059,-7.339315,-6.003204,8.809295,-6.227402,-9.117932,-9.280428,-3.390486,3.959596,-0.481654,7.817823,1.865094,0.807423,-4.793740,2.275685,7.306774,5.449823,-6.929640,0.085447,-8.173276,-7.967446,-9.112768,-3.251871,-1.886372,-7.366750,6.146790,8.192404,0.225049,-0.500483,6.270849,3.540117,0.839839,-6.290574,-8.208950,6.379950,2.188840,7.421517,5.740909,6.726493,0.326040,-0.541086,7.880440,2.732686,-8.343089,-4.644944,-0.636073,4.851050,-6.942249,2.326483,1.631087,-3.454630,5.870470,-8.194360,9.052811,-7.729431,0.431419,7.093589,-6.645211,0.587428,0.332049,-9.948288,3.884811,2.306178,6.445334,-5.603832,-8.957449,-7.780199,-4.330634,-3.029163,-1.023754,-8.112164,8.555294,-6.066290,9.036527,-6.862809,-5.936432,-3.445776,-0.987587,0.077375,-5.010634,-9.996465,-7.737616,-0.079662,0.127457,-0.126915,2.995989,-6.086938,5.320109,-1.968155,-8.031936,0.031361,2.394113,3.308967,5.960036,-3.097683,-5.698636,-4.818193,8.600488,-3.901047,0.101395,-1.714037,7.295397,8.349480,7.674951,9.336292,1.169687,-3.672932,-2.435810,-0.054174,2.159524,-1.656276,-5.407765,-3.624161,4.086179,-9.018451,-4.982825,-7.646981,8.129817,-6.024719,1.364822,2.052774,-5.492970,-8.870906,8.806655,-1.572286,2.878772,-5.975577,-6.067531,6.964284,7.034468,-1.027192,-6.791333,-2.147038,4.082246,-6.001093,-2.648036,6.195923,-5.413598,-3.137168,-5.535578,-0.341570,3.964560,3.388918,3.047289,7.767649,3.185059,-7.875694,-9.436699,4.009580,2.494399,6.489595,7.557013,-4.395900,-3.230157,4.519482,-9.571177,-2.386365,8.252376,9.074833,-4.755869,8.422746,-7.697379,1.518399,-5.845795,-4.761986,-5.640274,-3.671497,-7.181350,1.407938,4.506034,-2.685809,-3.299547,8.693459,-6.817701,4.568334,3.853759,-1.321291,-1.610130,8.391876,3.770944,7.098512,4.368490,3.258110,-4.320929,-7.046506,-0.871928,3.960056,6.355489,-1.687403,9.499322,-2.822874,-6.272467,5.693110,-6.629954,-8.283973,-2.953106,6.576467,8.941105,-2.102209,-4.723404,6.225634,1.404212,0.976905,3.547575,-2.542820,5.188202,1.633365,-0.245993,3.390516,8.823250,-8.626394,7.655261,4.685583,-5.350793,-2.113776,-8.035397,8.868781,6.474073,-5.580025,-6.553706,8.321937,5.730257,-1.292561,0.289083,-8.032194,7.728652,2.400902,1.053973,6.157757,-8.897678,-6.258272,4.623809,-7.826602,-6.501112,6.331043,3.506335,9.158862,8.000346,-5.979400,6.715917,-8.006317,9.979105,0.344838,-6.576120,4.420737,-6.008539,-6.501833,3.643768,-4.758513,6.520271,0.116371,0.924661,-6.768021,-0.699044,9.263461,7.726526,-3.734748,4.873700,3.837040,-7.445478,-5.690890,-6.888878,-3.013031,9.143577,-3.427867,-5.432994,-6.690341,-4.073619,-4.973202,3.189261,-2.508909,7.789419,-0.968744,-9.727412,2.084120,-8.873942,2.706462,-4.403287,-9.757561,8.406429,-2.577224,-9.499996,8.219899,8.839654,7.502363,9.954399,-6.283240,-3.102989,-6.925657,-6.366600,3.055911,9.002345,-4.285968,-6.008833,-7.494052,6.851396,6.546762,3.151173,-9.757135,2.594183,0.808076,9.876867,8.588694,-7.850031,-9.392731,0.183442,9.847318,-0.138388,-5.338714,4.065586,-2.048427,-0.270192,-6.811236,-5.456441,-7.234012,1.065264,9.345207,5.723499,-4.764613,-8.615265,0.200924,8.908487,-0.512188,-2.462962,-9.965824,2.491604,-8.364498,0.862629,4.097937,0.176086,6.701047,-2.510614,6.376447,5.893961,9.957538,-7.853367,-9.419831,-7.259167,8.186621,9.057338,-7.433744,6.486176,-0.842237,5.844262,-8.596951,-4.165205,5.062937,-1.123452,-6.032477,8.823068,9.182895,-2.853290,6.943137,2.059002,5.454806,-2.116559,9.447506,-2.940212,-7.791952,-9.702229,-6.444013,-3.897802,0.803528,-9.135094,8.856978,6.618747,8.149778,-7.907818,-4.673630,-9.736726,-1.348640,1.578565,-8.641555,-1.721824,-9.745685,8.827353,8.618939,-8.120405,6.140852,-0.643347,-6.141918,1.500621,-7.000662,-5.737285,7.129829,-5.405705,-2.854745,-4.775708,-0.237661,9.793694,2.953682,5.330319,3.361562,7.839117,3.592314,8.883389,5.929341,8.921364,-6.257137,1.448404,-7.162167,9.240333,9.154383,5.354768,-9.510619,-0.254422,-7.914540,-3.074366,-1.075952,-0.317119,-2.390646,3.693582,-4.252823,9.281728,6.896362,9.942396,-5.627026,-7.950191,-5.928536,9.804044,-9.780221,-3.356460,-9.172235,-7.778578,-6.049068,-6.387196,-7.282227,-6.747823,-4.776812,8.079879,-5.169190,-3.214589,-5.871915,0.624752,-5.353634,0.368640,-7.586249,7.317191,3.359334,9.954626,-6.783576,-5.241942,-2.363245,-9.437893,-9.188528,-1.304852,-6.116046,4.354739,4.064212,8.630430,-9.315965,-0.790042,-6.515004,5.618390,-8.343669,3.349461,-3.072391,9.571993,-0.807535,8.405198,-2.911814,-2.287830,-0.280658,3.860459,-0.391724,-8.444964,1.283231,0.023260,-6.065686,2.101547,-1.416289,-0.023994,-9.708461,6.008467,6.128047,5.001065,-5.569466,-6.930686,-8.511686,-5.921790,-7.120251,5.491580,9.229833,9.522593,8.556097,-2.145357,8.095437,-6.457340,7.294798,-4.360778,-1.244902,-0.802350,3.135324,-6.907610,-4.225152,-4.685077,3.038137,-3.548474,0.934645,-5.480253,7.282793,-1.637198,2.387687,-0.205284,-2.871118,7.456968,9.711391,3.902234,-5.774338,-9.997132,-7.468226,8.321679,-6.950183,-7.617425,4.267593,-1.442895,-6.950493,4.323241,7.094678,-2.506797,9.337519,-2.848362,1.054144,4.517143,0.595640,-5.238481,4.556773,4.369713,1.760678,1.719558,2.362532,5.646564,-0.375715,9.168792,3.273190,3.209355,-0.274056,8.764970,8.835599,1.214620,-4.496026,-2.818292,-2.038506,7.027959,4.142411,-5.310427,-5.612252,-3.739002,5.061998,-9.609693,4.636647,2.956631,6.607219,0.410557,4.547697,-2.863590,-6.966765,2.849213,-3.748946,2.609251,0.485316,-9.602913,4.482699,-5.845108,9.823034,9.270907,-4.592508,-8.965423,2.868192,-0.010449,-6.334260,-0.870580,0.477955,6.642048,-6.110472,-9.459638,5.349928,1.299048,1.220880,2.084494,-3.711453,-6.338560,2.081615,3.309681,-3.443452,1.061922,-2.348532,-2.675112,-0.028212,6.435891,-6.328052,-7.345295,3.166710,-5.349295,-9.536462,2.443858,4.828500,4.065047,-0.066998,6.033688,5.693562,8.870184,1.687445,1.229078,-2.889382,-0.325844,-3.562479,-3.118249,4.933602,1.784716,-8.480421,-6.640407,-6.297516,-4.223341,-4.671400,4.652482,-7.400187,4.176698,-8.393269,5.908880,-2.796528,3.196209,4.515189,-6.538197,4.343903,-4.536875,-3.267979,9.022685,-9.671714,1.422632,5.956984,-4.559321,5.996662,9.726307,4.721659,-2.813832,1.453589,-2.468292,1.135231,6.689632,-3.105979,-0.853892,-3.608909,2.069367,2.677889,-4.520439,-3.717642,0.921452,-6.012791,6.695556,2.334901,3.020815,-0.783142,7.253735,-7.980754,-8.548949,-0.573825,3.945294,-8.743601,-7.307840,2.108010,-9.377108,3.196481,-9.204048,5.401362,3.236303,0.317772], dtype = "float64")#candidate|8421|(756,)|const|float64
call_8420 = relay.TupleGetItem(func_1155_call(relay.reshape(const_8421.astype('float64'), [9, 6, 14]), relay.reshape(const_8421.astype('float64'), [9, 6, 14]), ), 0)
call_8422 = relay.TupleGetItem(func_1159_call(relay.reshape(const_8421.astype('float64'), [9, 6, 14]), relay.reshape(const_8421.astype('float64'), [9, 6, 14]), ), 0)
var_8431 = relay.var("var_8431", dtype = "float64", shape = (756,))#candidate|8431|(756,)|var|float64
bop_8432 = relay.logical_and(const_8421.astype('bool'), relay.reshape(var_8431.astype('bool'), relay.shape_of(const_8421))) # shape=(756,)
output = relay.Tuple([call_8410,call_8412,call_8420,bop_8432,])
output2 = relay.Tuple([call_8411,call_8413,call_8422,bop_8432,])
func_8436 = relay.Function([var_8431,], output)
mod['func_8436'] = func_8436
mod = relay.transform.InferType()(mod)
mutated_mod['func_8436'] = func_8436
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8437 = relay.var("var_8437", dtype = "float64", shape = (756,))#candidate|8437|(756,)|var|float64
func_8436_call = mutated_mod.get_global_var('func_8436')
call_8438 = func_8436_call(var_8437)
output = call_8438
func_8439 = relay.Function([var_8437], output)
mutated_mod['func_8439'] = func_8439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3094_call = mutated_mod.get_global_var('func_3094')
call_8463 = relay.TupleGetItem(func_3093_call(), 0)
call_8464 = relay.TupleGetItem(func_3094_call(), 0)
output = call_8463
output2 = call_8464
func_8483 = relay.Function([], output)
mod['func_8483'] = func_8483
mod = relay.transform.InferType()(mod)
mutated_mod['func_8483'] = func_8483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8483_call = mutated_mod.get_global_var('func_8483')
call_8484 = func_8483_call()
output = call_8484
func_8485 = relay.Function([], output)
mutated_mod['func_8485'] = func_8485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2584_call = mod.get_global_var('func_2584')
func_2585_call = mutated_mod.get_global_var('func_2585')
call_8500 = relay.TupleGetItem(func_2584_call(), 0)
call_8501 = relay.TupleGetItem(func_2585_call(), 0)
func_6648_call = mod.get_global_var('func_6648')
func_6652_call = mutated_mod.get_global_var('func_6652')
var_8505 = relay.var("var_8505", dtype = "float32", shape = (1470,))#candidate|8505|(1470,)|var|float32
const_8506 = relay.const([True,False,True,False,True,True,False,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,True,False,False,False,False,True,True,True,True,True,False,False], dtype = "bool")#candidate|8506|(208,)|const|bool
call_8504 = relay.TupleGetItem(func_6648_call(relay.reshape(var_8505.astype('float32'), [1470,]), relay.reshape(const_8506.astype('bool'), [208,]), ), 2)
call_8507 = relay.TupleGetItem(func_6652_call(relay.reshape(var_8505.astype('float32'), [1470,]), relay.reshape(const_8506.astype('bool'), [208,]), ), 2)
output = relay.Tuple([call_8500,call_8504,var_8505,const_8506,])
output2 = relay.Tuple([call_8501,call_8507,var_8505,const_8506,])
func_8508 = relay.Function([var_8505,], output)
mod['func_8508'] = func_8508
mod = relay.transform.InferType()(mod)
var_8509 = relay.var("var_8509", dtype = "float32", shape = (1470,))#candidate|8509|(1470,)|var|float32
output = func_8508(var_8509)
func_8510 = relay.Function([var_8509], output)
mutated_mod['func_8510'] = func_8510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4986_call = mod.get_global_var('func_4986')
func_4988_call = mutated_mod.get_global_var('func_4988')
call_8542 = func_4986_call()
call_8543 = func_4986_call()
var_8559 = relay.var("var_8559", dtype = "float32", shape = (5, 14, 7))#candidate|8559|(5, 14, 7)|var|float32
bop_8560 = relay.subtract(call_8542.astype('uint64'), var_8559.astype('uint64')) # shape=(5, 14, 7)
bop_8563 = relay.subtract(call_8543.astype('uint64'), var_8559.astype('uint64')) # shape=(5, 14, 7)
uop_8567 = relay.asinh(var_8559.astype('float64')) # shape=(5, 14, 7)
output = relay.Tuple([bop_8560,uop_8567,])
output2 = relay.Tuple([bop_8563,uop_8567,])
func_8571 = relay.Function([var_8559,], output)
mod['func_8571'] = func_8571
mod = relay.transform.InferType()(mod)
var_8572 = relay.var("var_8572", dtype = "float32", shape = (5, 14, 7))#candidate|8572|(5, 14, 7)|var|float32
output = func_8571(var_8572)
func_8573 = relay.Function([var_8572], output)
mutated_mod['func_8573'] = func_8573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4759_call = mod.get_global_var('func_4759')
func_4761_call = mutated_mod.get_global_var('func_4761')
call_8575 = relay.TupleGetItem(func_4759_call(), 2)
call_8576 = relay.TupleGetItem(func_4761_call(), 2)
const_8577 = relay.const([[[7.618424,7.058368,6.675895,5.259318,-0.807228,-7.383515,-9.545191],[-1.256111,-5.758268,-7.955383,-2.186219,3.093865,-1.361088,0.055965],[-9.368394,-3.274702,-1.701019,8.155688,2.471555,3.768595,3.392419],[-8.186330,-9.117746,-0.378639,-0.555959,-3.021664,1.277016,3.298065],[6.627260,9.836778,0.274251,3.093005,6.802434,1.522637,-4.706141],[-9.600986,-0.880764,5.206325,-5.802781,-6.950945,-0.916016,0.803903],[-0.842668,7.827964,-4.301620,-2.148231,2.595413,6.185130,-3.358001],[8.955660,0.218213,-3.377066,-0.953922,-4.270097,7.668866,2.894779],[5.307562,2.660029,5.522457,9.127982,6.651354,7.961954,-2.081060],[3.396238,1.908539,6.559066,6.481880,9.593313,7.544532,-7.851605],[-9.709984,-0.521060,-1.657052,1.686347,-4.699805,4.941955,-1.053861],[-5.369317,3.580208,-0.459754,5.430572,6.125072,5.294878,-5.908414],[-3.984548,-1.614147,8.252007,-7.927909,-6.414499,0.297199,4.068697],[3.040535,-8.096417,-9.608535,7.877626,-1.843747,-2.860712,0.664713]],[[-4.724171,-0.313773,-6.219572,1.584228,2.412681,-9.261250,-6.420326],[-8.372759,-8.935393,3.563968,-0.603146,8.714666,-7.759669,-9.477881],[2.904547,8.210893,3.542563,4.760344,-6.745741,6.303174,-5.256625],[4.748207,-2.686787,-3.365146,4.081331,5.449510,8.518156,-1.594228],[-3.119940,-3.883645,-9.577520,-6.518462,3.644905,-1.023296,-4.873996],[4.873158,6.800788,5.514958,0.701809,-8.278622,-0.329588,-8.278573],[-1.562181,6.715392,5.429040,1.602966,6.790119,0.131513,0.534440],[-9.218750,-4.811900,-6.784169,2.188021,6.493383,-2.364670,7.606329],[9.472872,-9.387446,-1.011459,-7.360558,-5.481974,-2.335094,4.913104],[-3.084027,6.823850,7.982087,3.827299,1.083418,3.734419,0.888837],[-5.529415,-0.691730,-0.470356,-3.489516,4.810610,-6.047581,-2.368156],[2.722728,-8.591653,-5.339775,5.446295,9.573562,4.483200,3.928038],[1.475303,-7.109128,5.225155,5.643171,-2.717138,1.411640,6.477516],[6.676895,-7.017720,9.056197,-1.150231,-4.971621,0.067571,-3.171225]],[[-3.307738,-7.004247,-7.448365,7.816569,7.141766,8.761682,-8.644120],[4.294438,-0.759236,0.033637,-8.740935,-2.705938,-0.250790,-9.021659],[-8.945361,8.869382,-5.521442,9.823497,-6.166556,-3.397212,3.522783],[0.166065,-2.218584,9.597264,9.137843,9.705795,-1.646688,9.832133],[-7.659241,-1.444049,-1.359768,4.132212,7.374430,-7.532486,-2.436225],[-3.532066,-3.317087,2.242327,-5.303176,-0.362747,-2.941632,6.988089],[8.890211,3.856630,-9.939073,-4.203473,2.031624,1.143420,-4.235897],[4.127843,9.843172,2.579298,0.714253,-6.563166,0.809494,-2.627596],[2.568606,-3.828387,-6.295954,-4.196922,-9.188562,8.447526,1.288245],[-3.962165,-5.534675,-2.783868,3.243262,-8.917259,-2.807681,5.911342],[3.736664,0.882698,2.436501,8.328893,-2.144975,6.908809,-0.486835],[-6.611242,7.101834,-9.986426,-7.258111,9.495173,-2.108013,4.087684],[6.069136,-9.921254,-0.160629,3.031064,-4.710265,9.574641,-7.410646],[9.765983,3.743364,-2.234978,-4.047053,3.475803,1.734720,7.329761]],[[-8.052606,0.670970,8.938860,-9.935077,3.039778,3.140892,-9.311878],[-6.875028,2.491148,3.843848,-6.017644,-0.844766,-7.120388,3.130425],[-9.381965,8.427054,3.358035,-3.675441,9.704126,-2.694712,-6.826771],[-4.742469,-5.656116,-2.626618,-5.305639,4.589658,0.025676,4.277181],[4.921242,-1.570652,6.337615,-4.541568,-1.383224,1.811915,0.697435],[-3.557333,-7.314434,-5.651719,-7.296409,-6.901049,-7.608971,0.797728],[0.179341,-0.040106,1.397024,0.467587,-7.733447,-9.518936,-0.413878],[-2.493143,3.788273,-1.835412,0.463475,0.620940,0.212581,-2.128166],[6.420461,5.126339,8.403175,5.425674,-8.203323,3.928853,-2.787647],[5.540638,-8.651823,-6.704474,6.486276,4.337955,5.959689,-8.227342],[-6.514836,-3.301878,-7.304310,6.764148,1.349679,-0.248389,4.586056],[7.290590,5.924919,-5.097769,-1.221650,-5.197897,3.793767,4.921491],[-5.785450,2.393076,-8.876831,-0.633311,-6.758832,-3.317188,-0.620147],[5.999710,3.331614,1.212936,-4.520968,-4.315633,-6.873810,-0.833917]],[[-9.695872,-1.552454,4.877210,0.081754,6.025711,-6.086040,4.157406],[-1.697646,7.093090,5.117452,-2.061886,-8.492134,8.288498,3.459595],[3.128669,4.859195,4.169758,-9.623703,-2.246870,5.433721,8.085498],[6.772534,-5.386405,-5.007918,5.935028,-8.927562,-8.836255,-5.936480],[1.391842,8.467857,7.819655,-7.434963,-8.335113,6.292043,1.021853],[-2.363034,-0.290230,5.779260,1.556914,8.995874,-8.231528,-6.503127],[-9.263296,-0.910008,3.829392,-2.272764,-0.319973,9.499113,2.301852],[5.628181,1.056264,4.277862,7.797325,3.662644,-8.989045,-2.322317],[-4.583896,8.811190,9.114206,6.634425,2.591304,-3.348715,-7.577708],[-5.136342,-2.685605,-1.112313,9.391559,-4.131058,4.381143,-5.108778],[-1.189040,-4.453256,8.428682,8.522697,0.489956,8.238161,-1.386606],[-0.665251,-7.574274,-9.829395,7.931750,-5.243253,-6.448316,2.969343],[-7.992485,2.163390,-9.351841,-2.257903,7.260731,5.399725,-8.509414],[3.735786,-8.762261,5.215597,-4.429756,4.401734,6.162114,-3.757713]]], dtype = "float64")#candidate|8577|(5, 14, 7)|const|float64
bop_8578 = relay.left_shift(call_8575.astype('int16'), const_8577.astype('int16')) # shape=(5, 14, 7)
bop_8581 = relay.left_shift(call_8576.astype('int16'), const_8577.astype('int16')) # shape=(5, 14, 7)
func_3215_call = mod.get_global_var('func_3215')
func_3218_call = mutated_mod.get_global_var('func_3218')
const_8587 = relay.const([-0.169814,0.248667,5.145369,-1.147158,-1.608186,8.896202,4.197321,3.779381,3.743338,6.570935,-7.404713,-5.717549,-0.842078,3.335324,7.327440,4.135511,7.723358,-4.198737,-6.434035,-3.623867,-8.187568,9.629255,1.473080,2.652742,8.833861,-7.925027,-5.787990,1.041148,3.539999,4.283940,4.355258,-7.803515,1.384062,0.761932,7.970104,-1.314652,-9.389987,0.376362,2.110502,-1.382837,9.656099,-2.904103,5.141304,-0.463814,1.668043,6.531542,7.487795,2.497163,2.292987,-0.906374,-0.415241,-4.315668,-9.663383,5.713207,-5.792105,-7.873270,-8.445749,5.144933,-3.289656,-1.912171,9.373486,-4.044505,-4.476166,-9.335971,4.400509,-6.938242,0.865434,-5.764768,9.417519,7.401418,4.014815,6.130737,3.814746,-1.829179,7.869017,6.235589,-4.494985,3.141932,1.030902,-3.268904,-9.061320,-5.009969,5.700916,1.621889,-7.361949,-5.293263,9.862797,-5.934266,9.987162,-9.679645,0.838322,9.330568,-2.884145,-1.849002,-7.544109,-8.290753,-2.096262,3.199918,6.370902,-4.682402,4.706858,7.180505,-4.716966,4.293606,-6.679044,-0.959587,9.202648,-8.954243,-0.142146,8.857014,7.376905,4.169101,2.290786,-3.002196,-5.901782,-1.728404,2.016306,-8.376394,7.612921,8.819167,8.176199,-9.350942,-0.487002,-7.503456,6.849390,3.389487,0.143630,-4.703365,4.411454,3.598854,5.732080,-8.575106,-7.243780,1.660223,-4.390868,9.903693,-8.215976,0.162049,-4.838975,-6.069239,1.642631,8.248490,-0.702405,8.290220,-3.213238,0.252463,0.081287,-3.260797,-0.266928,5.832693,8.742091,6.238684,-1.403915,-2.343602,-1.941978,1.281876,-7.189109,2.089846,-8.035301,3.709940,7.822948,0.978183,-7.538223,-7.261772,2.762358,8.515222,6.151237,-6.725689,8.514738,-2.303697,5.543501,-5.136933,-4.549103,4.102968,-1.298949,8.222969,1.732695,-6.343246,5.880620,5.085683,8.729445,1.932096,3.871160,-4.028719,-4.690852,-6.692992,-8.581805,1.093954,-7.696886,-7.720847,6.132896,5.053089,-6.413150,-7.550739,-9.921462,-0.092311,7.870399,-4.108347,0.739694,0.458956,-0.247514,-8.027793,-7.513049,8.879407,-9.581514,-4.816540,-8.490414,-8.269966,6.444517,-0.314478,-6.010723,1.777078,-7.401328,-8.946153,8.056776,1.024537,-4.327969,-7.183114,6.774357,5.496053,1.338394,-8.195905,0.079643,-4.367080,1.814522,3.174767,6.665524,3.601978,-8.979227,-6.309957,-3.750280,4.984807,0.291497,6.416167,-4.248365,-7.320488,-2.831140,9.746298,1.993661,7.021351,-8.014088,0.514701,4.242227,5.643014,-1.994081,5.628852,0.613646,6.194970,1.307242,5.084768,-2.674102,9.246847,-5.573955,-0.893609,3.865667,9.702620,-7.049089,6.970168,3.276126,-3.554587,-0.153475,-1.597821,-0.249336,-3.824151,5.548131,1.346719,6.972185,-3.359896,5.982891,-4.268829,-3.343474,-0.514315,-4.458569,2.867924,-5.559290,9.932566,1.689920,-9.495998,-3.937516,5.680977,4.929337,8.853818,-4.244118,-4.332507,-2.233265,-5.221332,-7.379814,-6.799465,-4.810693,9.294514,8.763273,-4.704732,-8.482937,-1.018379,3.691531,-0.872781,8.547772,-3.060022,-3.897595,5.880991,3.919980,2.781636,5.714113,-8.083449,8.413625,-3.557028,-9.800062,-5.258981,-9.107467,3.388269,-1.024241,-3.731673,2.501553,5.701162,3.137185,3.035865,-2.646405,2.252134,-6.789137,-8.780660,6.092915,-2.654978,7.164121,-4.946166,4.806752,3.371904,-8.807984,4.263862,-4.568151,8.557522,-5.796531,-5.229352,0.396023,-2.551310,8.431109,-0.608239,5.196346,2.164164,7.480699,-9.465177,9.099370,-7.558116,1.968948,-0.547226,4.289119,-6.767695,-8.965054,-5.854305,-5.665702,0.609078,4.474476,-5.567990,-2.460923,1.529009,8.049216,-2.200981,-5.795613,-3.200131,3.208025,5.205788,-4.374662,-3.450125,9.805387,0.956220,2.427659,4.018533,-1.207317,5.780246,3.590624,-2.729704,9.078112,-4.712417,0.465924,9.129639,2.619322,7.195774,-9.879223,-5.730745,7.780512,6.742389,-2.549530,2.898629,-9.805476,2.256065,-0.707497,9.921698,-1.348111,6.035552,-0.370967,-7.700142,1.254409,-9.491954,7.633419,8.579096,-6.967523,5.182482,-6.106003,4.145042,-2.371290,-3.990421,-8.838613,-8.669841,1.785338,-0.631750,-0.877256,6.212670,9.183580,-0.263323,-9.968579,8.417939,-5.414406,1.042232,5.393830,-6.682976,1.538140,-2.631054,-6.157217,8.327567,-3.276235,3.352326], dtype = "float32")#candidate|8587|(420,)|const|float32
call_8586 = relay.TupleGetItem(func_3215_call(relay.reshape(const_8587.astype('float32'), [5, 14, 6])), 0)
call_8588 = relay.TupleGetItem(func_3218_call(relay.reshape(const_8587.astype('float32'), [5, 14, 6])), 0)
bop_8592 = relay.multiply(const_8587.astype('uint64'), call_8575.astype('uint64')) # shape=(5, 14, 420)
bop_8595 = relay.multiply(const_8587.astype('uint64'), call_8576.astype('uint64')) # shape=(5, 14, 420)
func_4155_call = mod.get_global_var('func_4155')
func_4158_call = mutated_mod.get_global_var('func_4158')
const_8604 = relay.const([-6,8,7,-9,-8,9,-8,-2,-8,6,3,2,7,2,-8,8,3,2,-9,10,5,9,-10,6,-3,-6,6,-4,1,4,6,-5,-8,-2,8,-4,-1,-6,-3,-9,-5,-5,-4,-5,-8,6,1,-4,6,5,7,-7,-4,9,5,6,-4,2,-1,-3,-6,-4,10,-7,3,2,-3,8,2,-3,-5,1,-1,7,2,10,1,-6,-1,7,4,3,8,3,9,9,6,-5,-2,8,4,-1,-1,4,-9,7,8,-1,1,6,-1,-4,-2,-1,-3,8,6,-10,8,2,-7,-3,8,1,7,7,-4,-4,-2,-1,-5,-2,-10,-9,-8,-8,-9,-10,-4,-6,10,-10,6,1,10,-5,-2,-7,1,3,-8,-6,9,-3,9,-5,-3,-3,10,1,7,6,-4,4,-8,5,-7,2,-7,10,-4,-6,9,-8,-5,-10,4,4,8,3,6,-9,-1,8,5,3,-2,-6,10,1,-4,8,8,8,-3,-1,1,1,-10,-9,8,4,-2,-2,-8,-6,7,-2,9,10,-3,10,-10,3,1,-6,-3,-10,3,-7,-6,-3,8,-5,-7,8,7,-1,10,-8,7,1,-6,-7,2,10,-7,-8,-2,4,9,9,-10,4,6,1,6,3,3,-1,-2,-3,-5,7,-4,-7,3,-1,-6,-4,-7,-6,-9,6,-7,-8,-9,-1,2,4,-9,2,-6,-8,8,-5,-9,1,-7,3,-4,-6,-4,7,-5,1,-1,9,-6,10,-10,-2,-5,10,-9,-10,4,6,-3,3,6,-5,8,6,2,9,-2,-3,-3,-1,-6,5,-6,-9,6,8,-7,-10,-6,1,4,-10,-3,5,5,-8,8,-2,-6,5,4,-3,4,-6,-10,8,6,-2,10,5,-7,8,-8,-2,-3,6,10,-8,3,-7,-10,-8,-3,-3,10,-8,-1,-4,9,3,3,-9,9,1,3,4,3,8,-4,6,-9,1,-3,8,1,3,-1,10,4,-9,-7,8,6,-5,9,4,-8,-7,-10,-2,-8,-4,1,-8,-5,-10,1,4,6,-8,3,-2,-7,-5,-5,7,-3,-2,-6,7,-7,-6,7,-8,9,5,-9,6,-5,4,-7,-3,5,5,6,-3,-9,3,-8,6,-8,1,9,5,10,3,-2,8,-4,7,4,-4,8,8,10,-5,-6,-6,-6,8,8,-3,-10,8,-5,5,-6,2,-10,-1,-6,-9,-5,-9,3,8,1,-4,4,4,-6,9,-1,7,1,2,-6,-10,-3,1,6,-1,-1,-7,-6,4,-3,-7,4,-6,4,2,6,-9,1,-8,7,6,-4,-5,-6,-6,2,3,-5,-10,-6,9,4,-4,-7,-6,2,4,-6,8,-8,3,6,-5,-7,-2,-9,7,-6,-10,3,-7,9,1,-10,9,3,-7,8,-10,9,7,10,3,7,8,1,-7,9,-8,-6,9,7,-8,10,-1,1,-8,4,-8,-5,2,-6,-6,6,-3,1,4,8,6,-2,-8,6,6,7,2,-2,8,1,2,2,-2,7,-10,7,-4,2,4,10,-8,3,9,-4,3,4,5,-1,6,2,-7,-3,-8,5,-5,-1,9,4,-1,-8,-6,-10,-8,-7,-10,-4,7,-8,-4,-8,-5,3,5,4,6,2,4,-10,-2,-7,-5,7,-8,-9,-7,3,-8,-8,4,10,-5,1,-4,-2,-9,9,1,5,1,4,-1,-2,3,-3,-1,6,-5,5,-9,6,-5,-1,-10,-6,2,-3,-6,3,2,-8,-1,8,3,-7,-10,10,9,4,8,2,-1,-5,9,-10,-6,-3,5,4,7,-2,-6,4,2,5,-9,1,4,-9,-6,2,-9,10,8,-4,5,2,8,5,4,-1,-8,5,10,3,-4,9,-3,7,-3,6,7,-9,4,7,3,4,-10,-3,4,-10,10,2,-10,-5,-2,-1,1,-5,4,-6,10,10,9,-4,-7,3,-4,3,6,7,10,-8,-9,-7,-7,-2,1,8,-3,-2,5,-10,-10,2,-2,3,-6,5,6,-8,5,9,-2,-5,-7,5,-4,-2,-9,-2,3,7,8,7,-3,6,-5,-3,2,-1,-9,-1,-3,-1,7,-7,1,-10,-5,-5,-1,8,8,4,3,8,-4,-7,4,-1,-1,1,-4,3,9,-10,8,8,-3,-7,8,10,-6,8,7,1,2,2,-5,5,-10,4,-7,8,-3,-6,-10,-2,5,4,-3,-2,9,9,8,7,1,9,-4,-5,10,9,-10,-4,-2,1,-5,8,-8,7,-3,5,8,1,9,-8,-9,-8,-5,-8,-5,2,-3,-6,-9,6,-9,-5,4,-8,4,-3,10,-6,8,-4,2,-2,8,5,-1,1,-3,-9,-4,10,-1,-3,-4,8,4,4,-9,2,-4,-7,9,9,6,-8,4,-10,-1,-6,5,-7,-7,4,7,3,4,-8,-8,6,-4,-6,-10,-3,-1,-8,-4,-5,7,-7,7,8,10,6,-5,-1,7,-5,-4,-10,7,3,-2,-2,-8,-5,-7,-8,-1,4,-9,2,2,2,6,-5,9,-6,-6,10,-5,1,-8,-10,5,4,1,-9,3,-3,3,-4,3,3,-8,5,10,9,5,8,5,6,-7,-9,4,1,-9,10,-7,-3,-10,10,2,-1,-1,9,-10,-2,-7,9,-2,-1,-7,2,7,-1,-4,8,-2,-5,7,-9,-10,-6,-1,-10,-5,-3,-3,-6,-2,9,10,4,-6,5,2,10,4,-10,-1,7,3,-6,-8,-9,1,-8,5,5,8,5,-7,-3,3,3,6,-7,1,-5,10,-9,4,-4,-7,10,-2,-9,-2,-9,8,8,-1,10,10,10,1,-1,-5,4,7,-9,-1,-7,1,-7,-7,2,9,1,-9,-7,8,-7,-4,-7,7,9,6,-2,-1,5,-3,7,1,1,-7,-10,8,-2,-8,-3,-6,-2,10,9,-4,-9,-3,1,2,-2,2,-8,9,5,8,4,-2,-6,2,-4,-10,-3,9,7,-6,2,2,8,-1,-1,-5,-5,-1,1,-6,8,-8,-1,5,-8,-8,6,-2,1,1,2,-5,5,8,9,-1,-4,-10,-5,4,3,-8,1,-5,-3,6,-2,-4,9,3,8,7,-4,-8,9,6,5,2,4,-10,-6,4,-7,7,10,4,-5,-1,-7,7,2,-9,-5,-5,-10,6,1,-4,-8,-6,2,-6,10,-3,8,-2,-3,-9,4,9,-1,8,7,-4,-4,3,10,-2,-1,-7,6,1,-2,10,-6,-10,6,-3,-1,-9,-5,2,4,-6,-8,5,-4,-3,-7,-4,4,4,-1,4,-3,-8,5,-6,5,-5,-6,-7,7,9,-5,-8,5,8,10,10,4,6,8,-8,3,-8,-4,-9,6,-4,1,1,-8,3,-10,-3,-9,-4,8,-1,-7,-10,-5,9,-9,4,7,-5,6,-2,9,3,-4,-6,-8,5,-8,-4,6,-4,-10,-4,-6,3,6,-8,-1,-4,7,9,-9,-9,-9,-9,10,-1,-2,7,-3,9,6,-4,-8,3,-6,-1,7,1,-4,-5,4,7,9,3,6,9,9,10,2,5,8,-5,5,-2,-8,7,1,7,8,3,-4,-6,8,2,-1,-7,2,-3,8,10,-10,-8,-9,-2,5,-2,10,1,6,-5,10,-4,-4,1,-2,-7,-8,-5,2,-5,-5,-7,7,-2,-3,9,-8,8,-10,5,-2,4,9,-6,-1,7,9,10,2,-8,8,10,10,10,-9,-2,7,-10,7,7,-8,-3,-8,3,-4,7,-10,-10,7,10,2,6,8,-6,-1,-5,7,5,1,-7,1,-1,-3,1,10,5,-3,-1,-8,-8,-10,-9,2,-2,2,-10,-3,3,-1,-5,6,-2,2,10,2,10,-2,9,-3,-7,-10,9,9,9,-6,2,4,-1,-9,10,-2,5,9,9,7,-6,-4,-10,7,-4,4,9,2,-6,-2,4,9,9,7,10,4,1,-3,1,-10,6,-3,-4,4,5,8,-1,1,5,-6,2,-4,-7,5,8,-7,3,-7,2,-9,-9,-6,-4,-8,7,-3,-5,-5,4,4,-9,-6,8,9,5,9,-3,-4,-4,-5,8,3,4,10,7,-10,5,-9,9,7,4,-10,8,3,6,-4,-5,-2,4,9,-5,10,-4,7,6,9,-7,-8,-3,-1,-10,-5,-4,6,-8,1,-1,-7,1,10,7,7,10,-1,6,-4,-8,1,-8,10,-9,1,-2,-9,-4,10,8,-5,5,-1,-9,7,-8,9,-7,-3,-8,10,-5,-4,-6,10,4,-4,5,-9,-2,2,-9,5,-10,4,-5,9,-3,-8,-7,-5,-6,-9,-4,-5,-7,8,10,1,6,-7,8,-10,8,10,-10,8,5,7,6,-10,3,-8,-3,-4,-2,9,-6,3,-9,-3,9,5,1,-5,-7,1,-3,4,7,7,8,1,5,2,-8,-4,-6,-3,2,5,5,9,4,5,1,3,8,-5,-8,8,10,5,3,-7,7,4,8,1,-9,5,10,1,-2,10,1,-7,2,-1,1,-7,9,-2,9,1,2,9,-6,10,7,9,10,1,10,-4,-9,1,6,-5,9,-10,1,-4,10,-4,-6,4,-3,-9,-8,-5,-7,5,10,-6,-3,1,-8,1,-1,-6,2,-4,-9,-7,7,4,-10,7,8,-10,-2,6,-6,-9,-4,3,-6,-2,-1,2,10,-3,-4,10,-6,2,1,-9,5,-3,4,6,4,-7,-6,4,4,8,-2,9,-1,7,8,-1,5,-3,-2,10,-8,3,-5,-4,6,8,-2,-7,7,7,7,10,3,-10,-2,-3,7,-6,4,-5,2,10,10,7,1,-5,-3,2,-8,-5,3,3,-5,-6,9,-3,3,-6,-1,2,-8,-2,-2,9,7,2,-3,3,6,-8,9,7,-5,8,-6,9,9,-5,4,-3,-9,10,-2,9,-2,-2,-8,-6,-1,-10,5,1,9,-7,1,3,-6,1,5,3,-8,-8,-5,-1,9,3,9,9,1,10,-7,1,5,1,-3,7,1,-10,-2,-3,10,-4,-10,-6,9,3,8,-9,-8,-3,9,4,7,-6,-5,-9,-7,-6,6,-7,10,2,6,1,4,-6,-3,-2,-4,-1,-9,4,3,-2,5,-5,1,-3,9,-2,-9,5,-1,-4,5,-4,4,-10,-9,8,-2,-9,10,-4,5,3,6,-5,5,10,5,-6,-1,7,-9,-3,10,5,-3,1,5,-3,-2,-8,8,-6,-3,3,9,5,7,-8,-2,-8,-2,-5,5,-7,-6,1,-4,-8,-9,2,-1,5,-9,-6,6,7,5,4,-2,6,-8,4,5,-1,-3,4,4,-3,-2,5,2,-3,-8,8,8,9,-2,9,7,6,5,-5,1,3,8,9,-3,-9,-1,-2,3,-6,4,-6,5,2,-4,-8,-8,8,10,6,-2,-4,-3,4,8,5,-3,-5,-3,-8,-6,1,7,8,7,-1,-10,-3,-1,-3,7,1,8,-8,-2,7,-3,4,8,-7,7,-5,5,1,7,3,1,1,1,-8,8,-3,-6,10,8,-2,-7,3,6,-8,-10,-4,6,-8,-7,-1,6,5,-10,7,-4,4,-7,-3,-3,-4,1,-1,5,3,-8,8,-8,-5,8,8,-2,-3,-1,1,-7,-4,5,7,-5,-4,7,-6,-5,-5,4,6,6,-4,-8,-1,-10,-3,-10,-4,1,9,-10,-2,5,-9,-1,-4,6,5,1,-9,9,-5,-4,-6,-7,-4,-8,-3,6,-2,8,-5,2,-8,-6,-5,3,-3,-10,-4,2,5,4,2,9,8,-10,2,5,-6,-9,3,2,8,7,-1,10,10,2,-6,8,8,9,9,-10,-2,-5,-2,4,-10,-2,9,-5,-7,-3,-7,9,8,-5,-1,-9,5,-1,-2,9,-6,-3,4,-6,-6,-4,-1,-8,10,-3,10,5,9,-4,-8,2,-5,-9,-2,2,5,1,-8,4,-4,-10,-10,-10,8,9,-9,10,-6,5,-7,8,-2,7,-9,9,-7,-8,1,-7,3,6,8,6,-6,-4,9,-4,-10,-10,-9,4,7,4,-1,-8,8,-8,10,10,6,-9,-7,-5,-4,-8,5,1,-6,-3,-8,3,5,-2,-7,10,-8,10,2,4,4,8,-4,3,-6,8,7,9,5,8,-4,9,9,-9,7,-6,-5,-2,5,-10,-2,-6,2,-3,-7,-10,9,-4,9,9,7,8,-2,-3,-6,10,3,-8,-1,1,2,-8,-1,9,-4,-7,-6,4,-7,-6,2,-10,-2,-2,-1,-1,-6,-8,-1,-8,-7,-7,2,-10,-8,2,2,7,-2,9,1,8,10,4,-3,10,7,-3,-1,-8,9,1,1,7,4,-9,-7,2,-3,1,-1,7,8,-9,-5,8,-8,-7,-4,4,-2,4,-10,-9,5,2,-10,-3,3,9,-10,3,-5,-9,-9,-10,-6,2,-3,10,2,-5,2,-3,2,2,9,10,-10,-5,-1,-7,9,2,10,-9,3,5,4,2,-1,7,-2,4,-5,-8,-3,-3,6,-4,7,-9,9,-8,3,6,6,4,10,9,-8,-4,-4,3,4,6,-1,4,2,-3,-5,9,-4,-7,-2,2,3,-10,4,-7,-1,10,2,5,9,9,9,-3,-2,5,-9,5,-2,-1,10,-5,-2,6,10,-8,-9,4,4,1,10,-3,3,-10,-4,-3,8,-9,2,4,7,2,-8,4,-4,1,10,-4,1,2,-5,-2,-3,-5,6,-7,-3,9,-7,-5,-9,-8,10,6,6,-1,-2,-5,-3,10,-2,-4,-9,-8,7,9,2,5,-7,-5,8,5,-8,5,-3,-5,-3,1,2,-8,3,-3,5,6,10,7,9,7,4,-3,8,-1,-6,1,-10,-5,6,-7,-7,-5,6,4,-3,5,3,-4,3,-2,-6,7,3,10,-1,10,-1,6,6,3,10,-9,-5,6,8,8,-2,-1,-8,-4,-9,-8,1,10,-3,9,2,-6,10,-6,1,-4,9,-8,8,8,10,10,10,-1,2,4,-9,-10,4,9,1,8,9,-9,-10,6,10,1,5,-3,-3,2,9,3,9,-1,-5,10,-7,-3,-5,6,7,7,1,-3,-7,8,-9,1,3,10,-1,4,-1,-4,7,2,-9,-10,-9,5,-7,1,-4,-6,4,-8,6,2,10,6,6,-3,-8,-5,5,-2,5,-6,8,9,-8,7,-9,-5], dtype = "int32")#candidate|8604|(2688,)|const|int32
call_8603 = relay.TupleGetItem(func_4155_call(relay.reshape(const_8604.astype('int32'), [2688,])), 2)
call_8605 = relay.TupleGetItem(func_4158_call(relay.reshape(const_8604.astype('int32'), [2688,])), 2)
func_5052_call = mod.get_global_var('func_5052')
func_5056_call = mutated_mod.get_global_var('func_5056')
var_8612 = relay.var("var_8612", dtype = "int8", shape = (8,))#candidate|8612|(8,)|var|int8
var_8613 = relay.var("var_8613", dtype = "int8", shape = (2, 96))#candidate|8613|(2, 96)|var|int8
call_8611 = relay.TupleGetItem(func_5052_call(relay.reshape(var_8612.astype('int8'), [8,]), relay.reshape(var_8613.astype('int8'), [192,]), ), 2)
call_8614 = relay.TupleGetItem(func_5056_call(relay.reshape(var_8612.astype('int8'), [8,]), relay.reshape(var_8613.astype('int8'), [192,]), ), 2)
bop_8616 = relay.equal(bop_8578.astype('bool'), call_8611.astype('bool')) # shape=(5, 14, 7)
bop_8619 = relay.equal(bop_8581.astype('bool'), call_8614.astype('bool')) # shape=(5, 14, 7)
uop_8622 = relay.log10(const_8604.astype('float32')) # shape=(2688,)
uop_8633 = relay.log2(uop_8622.astype('float64')) # shape=(2688,)
uop_8647 = relay.asin(bop_8578.astype('float64')) # shape=(5, 14, 7)
uop_8649 = relay.asin(bop_8581.astype('float64')) # shape=(5, 14, 7)
func_4682_call = mod.get_global_var('func_4682')
func_4686_call = mutated_mod.get_global_var('func_4686')
call_8650 = relay.TupleGetItem(func_4682_call(relay.reshape(var_8612.astype('int8'), [1, 1, 8]), relay.reshape(var_8613.astype('int8'), [8, 3, 8]), ), 1)
call_8651 = relay.TupleGetItem(func_4686_call(relay.reshape(var_8612.astype('int8'), [1, 1, 8]), relay.reshape(var_8613.astype('int8'), [8, 3, 8]), ), 1)
bop_8667 = relay.left_shift(uop_8633.astype('uint64'), call_8650.astype('uint64')) # shape=(5, 14, 2688)
bop_8670 = relay.left_shift(uop_8633.astype('uint64'), call_8651.astype('uint64')) # shape=(5, 14, 2688)
output = relay.Tuple([call_8586,bop_8592,call_8603,var_8612,var_8613,bop_8616,uop_8647,bop_8667,])
output2 = relay.Tuple([call_8588,bop_8595,call_8605,var_8612,var_8613,bop_8619,uop_8649,bop_8670,])
func_8671 = relay.Function([var_8612,var_8613,], output)
mod['func_8671'] = func_8671
mod = relay.transform.InferType()(mod)
mutated_mod['func_8671'] = func_8671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8671_call = mutated_mod.get_global_var('func_8671')
var_8673 = relay.var("var_8673", dtype = "int8", shape = (8,))#candidate|8673|(8,)|var|int8
var_8674 = relay.var("var_8674", dtype = "int8", shape = (2, 96))#candidate|8674|(2, 96)|var|int8
call_8672 = func_8671_call(var_8673,var_8674,)
output = call_8672
func_8675 = relay.Function([var_8673,var_8674,], output)
mutated_mod['func_8675'] = func_8675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3094_call = mutated_mod.get_global_var('func_3094')
call_8712 = relay.TupleGetItem(func_3093_call(), 0)
call_8713 = relay.TupleGetItem(func_3094_call(), 0)
output = call_8712
output2 = call_8713
func_8716 = relay.Function([], output)
mod['func_8716'] = func_8716
mod = relay.transform.InferType()(mod)
output = func_8716()
func_8717 = relay.Function([], output)
mutated_mod['func_8717'] = func_8717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5568_call = mod.get_global_var('func_5568')
func_5569_call = mutated_mod.get_global_var('func_5569')
call_8775 = func_5568_call()
call_8776 = func_5568_call()
func_6173_call = mod.get_global_var('func_6173')
func_6177_call = mutated_mod.get_global_var('func_6177')
var_8787 = relay.var("var_8787", dtype = "float64", shape = (840,))#candidate|8787|(840,)|var|float64
var_8788 = relay.var("var_8788", dtype = "int32", shape = (1, 2688))#candidate|8788|(1, 2688)|var|int32
call_8786 = relay.TupleGetItem(func_6173_call(relay.reshape(var_8787.astype('float64'), [5, 14, 12]), relay.reshape(var_8788.astype('int32'), [96, 28]), ), 2)
call_8789 = relay.TupleGetItem(func_6177_call(relay.reshape(var_8787.astype('float64'), [5, 14, 12]), relay.reshape(var_8788.astype('int32'), [96, 28]), ), 2)
output = relay.Tuple([call_8775,call_8786,var_8787,var_8788,])
output2 = relay.Tuple([call_8776,call_8789,var_8787,var_8788,])
func_8805 = relay.Function([var_8787,var_8788,], output)
mod['func_8805'] = func_8805
mod = relay.transform.InferType()(mod)
var_8806 = relay.var("var_8806", dtype = "float64", shape = (840,))#candidate|8806|(840,)|var|float64
var_8807 = relay.var("var_8807", dtype = "int32", shape = (1, 2688))#candidate|8807|(1, 2688)|var|int32
output = func_8805(var_8806,var_8807,)
func_8808 = relay.Function([var_8806,var_8807,], output)
mutated_mod['func_8808'] = func_8808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7781_call = mod.get_global_var('func_7781')
func_7783_call = mutated_mod.get_global_var('func_7783')
call_8810 = relay.TupleGetItem(func_7781_call(), 0)
call_8811 = relay.TupleGetItem(func_7783_call(), 0)
func_3243_call = mod.get_global_var('func_3243')
func_3245_call = mutated_mod.get_global_var('func_3245')
const_8815 = relay.const([[-5.093528,-4.428433,-4.372218,0.347131,-2.390727,3.374316,-3.294406,-6.290750,2.069896,8.716266,8.620286,3.745077,-7.799603,-4.135452,9.863836,6.163409,-2.206581,-6.110549,-8.669637,6.865435,-7.110811,3.627040,-1.717845,0.878366,-1.315609,4.625558,8.369176,-9.944704,9.253194,-6.286918,9.924065,-6.149249,4.133256],[8.015286,-5.160143,-3.831848,5.092623,-6.338045,8.327366,-6.714286,-4.136338,8.378889,-1.820679,0.049616,-8.693077,1.228209,2.572489,-0.116842,-5.069891,-9.234011,-3.571883,9.362142,-3.672083,7.730738,0.759838,-2.908777,-0.333013,5.723641,7.242958,-0.879930,-4.365293,-6.939942,-9.595334,-2.604781,-3.172718,3.666670],[5.370261,-1.609303,-4.386996,5.981550,3.325546,7.836956,0.955471,6.176844,8.247398,-1.474621,5.245983,6.666874,3.681781,-4.802591,-4.377839,0.630629,-8.609126,-9.714444,0.589617,-8.192183,0.262134,-7.349391,-8.869848,9.130393,-7.821669,1.076287,-2.588959,6.474698,-9.235322,9.601343,5.756097,-6.364031,3.546437],[2.797291,-9.211934,2.437294,0.748094,-0.258495,6.969695,-8.966464,6.377152,5.298503,-0.011220,-0.620843,-5.539549,-9.244993,-6.116022,2.216843,4.436566,-9.899808,-1.891675,0.559371,-6.285967,1.595981,3.855765,6.525727,5.814891,7.449738,0.934456,-9.229461,1.682619,4.828290,3.953304,2.726102,4.098545,-2.089851],[-2.403811,-5.009926,6.770871,-5.502452,0.520930,-1.784963,8.622726,-8.607904,2.474754,-2.715677,6.236740,-1.924297,6.707897,3.234232,0.610668,-9.497310,6.748987,-3.443800,2.167856,-6.464051,-5.872418,5.666872,-0.505691,-3.211695,4.642893,-8.793707,2.365431,5.935352,2.903411,0.242218,9.164306,-8.486064,-5.412071],[5.121398,1.762598,-3.654885,-5.248817,8.485424,-0.622682,-5.267235,1.600787,-0.305903,9.249752,3.932820,3.126517,-1.628888,-8.829237,4.223760,8.367531,-9.390544,-2.475817,9.704250,6.762453,0.916834,-9.355516,2.998781,8.040682,-2.186070,5.302587,3.404820,8.839263,6.776553,-9.558572,-9.350000,-7.817583,-6.289858],[-7.937913,8.989653,1.790393,2.566901,5.168718,5.297190,-3.471255,1.490832,4.070885,-2.594559,-0.058338,-5.601608,0.667518,9.304329,-6.317602,-1.694915,8.070583,-9.435310,9.461779,-8.822503,-4.072287,4.764812,-4.048834,-7.584611,0.898715,-8.189702,5.101161,-0.249369,3.684381,-9.682233,8.138461,-0.701138,-4.304387],[7.004824,-1.078528,-5.299261,2.965772,-2.161935,2.035024,2.019500,7.967222,-7.823310,0.836909,5.969474,-9.441816,-6.230631,6.369529,-2.297072,6.960561,2.393840,-6.042931,-1.185148,4.214022,3.259560,5.412231,8.268129,-3.666831,4.375915,-6.730292,-1.433468,-8.290266,-4.374650,-3.871891,-5.488585,2.877733,0.561772],[5.074705,0.669690,-0.117567,6.476702,-4.043780,8.679498,4.809303,-1.739889,5.066708,-8.394688,9.933257,1.165357,-7.211435,7.665895,1.143062,9.467002,-9.753341,5.523627,1.946551,-1.538334,5.795004,-6.814178,6.843682,-7.587076,5.186770,-4.696430,-1.371065,-2.593374,0.716406,-0.815941,2.724686,-5.189540,-2.846044],[-9.238525,-0.228165,6.096700,-8.438022,-2.527872,-6.099305,7.132399,-7.568774,-9.120533,9.777188,2.672520,-7.214859,-2.400254,5.265116,4.622231,-4.302373,3.687363,0.064726,0.520402,-1.033977,6.379187,-7.939634,-2.257977,-9.460277,8.220752,-8.402618,3.222199,-9.833167,-1.792585,-3.199080,-4.145730,6.695276,0.990598],[-0.547229,9.258896,2.860329,-0.604414,8.782540,-8.001740,6.970854,2.492963,-6.125849,2.179131,-4.179576,-9.319042,4.489049,-4.924018,-0.301597,0.273539,-9.251533,8.957508,5.271461,3.378673,-2.156732,3.656065,-6.425737,5.198911,7.632767,4.130565,-6.202665,-0.987671,-9.131394,5.541701,-6.702116,-4.471975,1.655930],[-0.912277,7.250162,6.239011,9.089198,2.309211,0.011630,-7.145086,4.551434,1.777391,9.945727,-9.439455,-3.087764,-2.820271,-6.777822,6.621451,-9.154176,0.013728,2.288996,-0.719717,7.174822,-5.366556,-7.382216,6.453497,0.991366,-2.911250,-3.047993,-2.031647,-1.038048,7.758328,1.562490,-8.270011,7.246660,8.142670],[-0.197890,2.040203,-1.171454,-5.506857,4.319305,-2.375004,-9.036145,4.755437,6.451192,1.920421,0.320500,5.229955,9.550237,-1.049921,7.064942,-6.602749,8.589801,1.956753,6.801091,2.253744,6.534384,0.759906,-5.672659,-5.770713,3.401663,2.577378,-0.289399,9.174653,-4.960827,-0.068107,-2.744039,9.918873,6.862651]], dtype = "float32")#candidate|8815|(13, 33)|const|float32
call_8814 = relay.TupleGetItem(func_3243_call(relay.reshape(const_8815.astype('float32'), [429,])), 0)
call_8816 = relay.TupleGetItem(func_3245_call(relay.reshape(const_8815.astype('float32'), [429,])), 0)
func_6797_call = mod.get_global_var('func_6797')
func_6799_call = mutated_mod.get_global_var('func_6799')
var_8819 = relay.var("var_8819", dtype = "float64", shape = (700,))#candidate|8819|(700,)|var|float64
call_8818 = relay.TupleGetItem(func_6797_call(relay.reshape(var_8819.astype('float64'), [5, 14, 10])), 0)
call_8820 = relay.TupleGetItem(func_6799_call(relay.reshape(var_8819.astype('float64'), [5, 14, 10])), 0)
bop_8834 = relay.floor_divide(const_8815.astype('float32'), relay.reshape(call_8814.astype('float32'), relay.shape_of(const_8815))) # shape=(13, 33)
bop_8837 = relay.floor_divide(const_8815.astype('float32'), relay.reshape(call_8816.astype('float32'), relay.shape_of(const_8815))) # shape=(13, 33)
func_8508_call = mod.get_global_var('func_8508')
func_8510_call = mutated_mod.get_global_var('func_8510')
var_8841 = relay.var("var_8841", dtype = "float32", shape = (1, 1470))#candidate|8841|(1, 1470)|var|float32
call_8840 = relay.TupleGetItem(func_8508_call(relay.reshape(var_8841.astype('float32'), [1470,])), 1)
call_8842 = relay.TupleGetItem(func_8510_call(relay.reshape(var_8841.astype('float32'), [1470,])), 1)
output = relay.Tuple([call_8810,call_8818,var_8819,bop_8834,call_8840,var_8841,])
output2 = relay.Tuple([call_8811,call_8820,var_8819,bop_8837,call_8842,var_8841,])
func_8843 = relay.Function([var_8819,var_8841,], output)
mod['func_8843'] = func_8843
mod = relay.transform.InferType()(mod)
mutated_mod['func_8843'] = func_8843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8843_call = mutated_mod.get_global_var('func_8843')
var_8845 = relay.var("var_8845", dtype = "float64", shape = (700,))#candidate|8845|(700,)|var|float64
var_8846 = relay.var("var_8846", dtype = "float32", shape = (1, 1470))#candidate|8846|(1, 1470)|var|float32
call_8844 = func_8843_call(var_8845,var_8846,)
output = call_8844
func_8847 = relay.Function([var_8845,var_8846,], output)
mutated_mod['func_8847'] = func_8847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7663_call = mod.get_global_var('func_7663')
func_7664_call = mutated_mod.get_global_var('func_7664')
call_8879 = relay.TupleGetItem(func_7663_call(), 0)
call_8880 = relay.TupleGetItem(func_7664_call(), 0)
func_5251_call = mod.get_global_var('func_5251')
func_5256_call = mutated_mod.get_global_var('func_5256')
const_8884 = relay.const([2,-3,-7,-3,1,-5,-1,7,6,5,-9,-2,-1,-2,-6,-2,-4,3,5,-6,6,-1,2,9,1,1,-4,-8,-5,7,-5,10,-7,-9,-9,-3,8,3,10,-7,5,-5,-10,3,3,-9,-10,8,-3,2,-3,6,8,1,-9,-1,6,-3,-8,4,-8,-2,3,8,6,-8,4,10,3,-10,-8,7,8,2,8,-9,-10,-5,-10,1,-2,5,-2,7,-4,8,-7,-8,8,-1,8,3,3,-5,10,9,4,9,8,-1,-1,6,5,3,8,10,-7,5,2,3,5,-5,5,-5,9,7,7,8,-9,-7,-6,-2,1,-3,7,-4,-9,1,2,8,2,-1,-9,2,1,-7,-8,2,-8,10,-2,-8,-5,4,5,-9,7,7,-1,6,-10,-9,-1,6,5,-5,-4,7,-1,7,2,4,-7,5,-10,10,-3,-6,9,6,-2,2,-5,3,7,-2,5,-8,5,-10,4,4,-8,-4,4,4,2,-2,-2,-2,7,8], dtype = "int8")#candidate|8884|(192,)|const|int8
var_8885 = relay.var("var_8885", dtype = "float64", shape = (120,))#candidate|8885|(120,)|var|float64
var_8886 = relay.var("var_8886", dtype = "bool", shape = (208,))#candidate|8886|(208,)|var|bool
call_8883 = relay.TupleGetItem(func_5251_call(relay.reshape(const_8884.astype('int8'), [192,]), relay.reshape(var_8885.astype('float64'), [120,]), relay.reshape(var_8886.astype('bool'), [208,]), ), 0)
call_8887 = relay.TupleGetItem(func_5256_call(relay.reshape(const_8884.astype('int8'), [192,]), relay.reshape(var_8885.astype('float64'), [120,]), relay.reshape(var_8886.astype('bool'), [208,]), ), 0)
bop_8888 = relay.greater(var_8885.astype('bool'), call_8883.astype('bool')) # shape=(5, 14, 120)
bop_8891 = relay.greater(var_8885.astype('bool'), call_8887.astype('bool')) # shape=(5, 14, 120)
func_3882_call = mod.get_global_var('func_3882')
func_3885_call = mutated_mod.get_global_var('func_3885')
var_8897 = relay.var("var_8897", dtype = "float32", shape = (429,))#candidate|8897|(429,)|var|float32
call_8896 = relay.TupleGetItem(func_3882_call(relay.reshape(var_8897.astype('float32'), [39, 11])), 1)
call_8898 = relay.TupleGetItem(func_3885_call(relay.reshape(var_8897.astype('float32'), [39, 11])), 1)
func_288_call = mod.get_global_var('func_288')
func_292_call = mutated_mod.get_global_var('func_292')
const_8903 = relay.const(-6.635075, dtype = "float64")#candidate|8903|()|const|float64
call_8902 = relay.TupleGetItem(func_288_call(relay.reshape(const_8903.astype('float64'), []), relay.reshape(var_8886.astype('float64'), [4, 4, 13]), ), 0)
call_8904 = relay.TupleGetItem(func_292_call(relay.reshape(const_8903.astype('float64'), []), relay.reshape(var_8886.astype('float64'), [4, 4, 13]), ), 0)
bop_8907 = relay.maximum(call_8902.astype('int32'), const_8903.astype('int32')) # shape=(4, 4, 13)
bop_8910 = relay.maximum(call_8904.astype('int32'), const_8903.astype('int32')) # shape=(4, 4, 13)
output = relay.Tuple([call_8879,const_8884,var_8886,bop_8888,call_8896,var_8897,bop_8907,])
output2 = relay.Tuple([call_8880,const_8884,var_8886,bop_8891,call_8898,var_8897,bop_8910,])
F = relay.Function([var_8885,var_8886,var_8897,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8885,var_8886,var_8897,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

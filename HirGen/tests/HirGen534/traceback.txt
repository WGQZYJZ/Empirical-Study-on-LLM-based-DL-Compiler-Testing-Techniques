==========mod==========
#[version = "0.0.5"]
def @func_490(%var_461: uint16, %var_462: Tensor[(12, 2, 3), uint16]) -> (Tensor[(12, 2, 3), bool],) {
  %0 = cast(%var_461, dtype="bool") /* ty=bool */;
  %1 = cast(%var_462, dtype="bool") /* ty=Tensor[(12, 2, 3), bool] */;
  %2 = less_equal(%0, %1) /* ty=Tensor[(12, 2, 3), bool] */;
  (%2,)
}

def @func_6483() -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) {
  %3 = @func_3362() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %4 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %5 = %3.0;
  %6 = %4.0;
  (%5, %6)
}

def @func_8321(%var_8283: Tensor[(429), float32], %var_8302: Tensor[(3, 13, 11), float32], %var_8309: Tensor[(429), float64]) -> (Tensor[(5, 14, ?), bool], Tensor[(3, 13, 11), int16], Tensor[(429), float64]) {
  %7 = cast(%var_8283, dtype="float32") /* ty=Tensor[(429), float32] */;
  %8 = reshape(%7, newshape=[429]) /* ty=Tensor[(429), float32] */;
  %9 = @func_3243(%8) /* ty=(Tensor[(3, 13, 11), float32], Tensor[(5, 14, 429), bool]) */;
  %10 = %9.0;
  %11 = cast(%var_8302, dtype="int16") /* ty=Tensor[(3, 13, 11), int16] */;
  %12 = shape_of(%10, dtype="int32") /* ty=Tensor[(3), int32] */;
  %13 = cast(%10, dtype="int16") /* ty=Tensor[(3, 13, 11), int16] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %15 = cast(%var_8283, dtype="float64") /* ty=Tensor[(429), float64] */;
  %16 = atanh(%15) /* ty=Tensor[(429), float64] */;
  %17 = cast(%var_8309, dtype="float64") /* ty=Tensor[(429), float64] */;
  %18 = shape_of(%16, dtype="int32") /* ty=Tensor[(1), int32] */;
  %19 = cast(%16, dtype="float64") /* ty=Tensor[(429), float64] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?), float64] */;
  %21 = @func_6633() /* ty=Tensor[(5, 14, ?), bool] */;
  %22 = left_shift(%13, %14) /* ty=Tensor[(3, 13, 11), int16] */;
  %23 = mod(%19, %20) /* ty=Tensor[(429), float64] */;
  (%21, %22, %23)
}

def @func_8805(%var_8787: Tensor[(840), float64], %var_8788: Tensor[(1, 2688), int32]) -> (Tensor[(5, 14, ?), int32], Tensor[(13, 15, 11), bool], Tensor[(840), float64], Tensor[(1, 2688), int32]) {
  %24 = cast(%var_8787, dtype="float64") /* ty=Tensor[(840), float64] */;
  %25 = cast(%var_8788, dtype="int32") /* ty=Tensor[(1, 2688), int32] */;
  %26 = reshape(%24, newshape=[5, 14, 12]) /* ty=Tensor[(5, 14, 12), float64] */;
  %27 = reshape(%25, newshape=[96, 28]) /* ty=Tensor[(96, 28), int32] */;
  %28 = @func_6173(%26, %27) /* ty=(Tensor[(5, 14, 12), int8], Tensor[(5, 14, 1), float64], Tensor[(13, 15, 11), bool], Tensor[(12, 16, 14), float32], Tensor[(96, 28), int32], Tensor[(5, 14, 2145), float32]) */;
  %29 = @func_5568() /* ty=Tensor[(5, 14, ?), int32] */;
  %30 = %28.2;
  (%29, %30, %var_8787, %var_8788)
}

def @func_6173(%var_6113: Tensor[(5, 14, 12), float64], %var_6140: Tensor[(96, 28), int32]) -> (Tensor[(5, 14, 12), int8], Tensor[(5, 14, 1), float64], Tensor[(13, 15, 11), bool], Tensor[(12, 16, 14), float32], Tensor[(96, 28), int32], Tensor[(5, 14, 2145), float32]) {
  %31 = @func_3948() /* ty=Tensor[(5, 14, 1), float64] */;
  %32 = cast(%31, dtype="int8") /* ty=Tensor[(5, 14, 1), int8] */;
  %33 = cast(%var_6113, dtype="int8") /* ty=Tensor[(5, 14, 12), int8] */;
  %34 = @func_4320() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %35 = cast(meta[relay.Constant][0] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %36 = cast(meta[relay.Constant][0] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %37 = reshape(%35, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), bool] */;
  %38 = reshape(%36, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), bool] */;
  %39 = cast(%var_6140, dtype="int32") /* ty=Tensor[(96, 28), int32] */;
  %40 = reshape(%39, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), int32] */;
  %41 = @func_4033(%40) /* ty=(Tensor[(12, 16, 14), bool], Tensor[(12, 16, 14), float32]) */;
  %42 = cast(meta[relay.Constant][0] /* ty=Tensor[(2145), bool] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %43 = cast(%31, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %44 = subtract(%32, %33) /* ty=Tensor[(5, 14, 12), int8] */;
  %45 = %34.0;
  %46 = @func_1358(%37, %38) /* ty=Tensor[(13, 15, 11), bool] */;
  %47 = %41.1;
  %48 = floor_mod(%42, %43) /* ty=Tensor[(5, 14, 2145), float32] */;
  (%44, %45, %46, %47, %var_6140, %48)
}

def @func_6648(%var_6641: Tensor[(1470), float32], %var_6642: Tensor[(208), bool]) -> (Tensor[(5, 14, 1), float64], Tensor[(720), int16], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(5, 14, 1), float32]) {
  %49 = @func_5316() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %50 = cast(%var_6641, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %51 = cast(%var_6642, dtype="bool") /* ty=Tensor[(208), bool] */;
  %52 = reshape(%50, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %53 = reshape(%51, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), bool] */;
  %54 = @func_941(%52, %53) /* ty=(Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) */;
  %55 = @func_4793() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
  %56 = %49.0;
  %57 = %54.4;
  %58 = %55.0;
  (%56, %57, %var_6641, %var_6642, %58)
}

def @func_5316() -> (Tensor[(5, 14, 1), float64],) {
  %59 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %60 = %59.0;
  (%60,)
}

def @func_2254(%var_2242: Tensor[(2, 8, 14), float32], %var_2246: Tensor[(1, 120), float64]) -> (Tensor[(15, 1, 8), float64], Tensor[(1, 120), float64], Tensor[(2, 8, 14), uint64]) {
  %61 = cast(%var_2246, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
  %62 = reshape(%61, newshape=[15, 1, 8]) /* ty=Tensor[(15, 1, 8), float64] */;
  %63 = @func_1402(%62) /* ty=(Tensor[(15, 1, 8), float64],) */;
  %64 = cast(%var_2242, dtype="float32") /* ty=Tensor[(2, 8, 14), float32] */;
  %65 = acos(%64) /* ty=Tensor[(2, 8, 14), float32] */;
  %66 = cast(%var_2242, dtype="uint64") /* ty=Tensor[(2, 8, 14), uint64] */;
  %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(3), int32] */;
  %68 = cast(%65, dtype="uint64") /* ty=Tensor[(2, 8, 14), uint64] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %70 = %63.0;
  %71 = left_shift(%68, %69) /* ty=Tensor[(2, 8, 14), uint64] */;
  (%70, %var_2246, %71)
}

def @func_3706() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) {
  %72 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %73 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
  %74 = %72.0;
  (%73, %74)
}

def @func_8264() -> (Tensor[(5, 14, ?), bool],) {
  %75 = @func_4104() /* ty=Tensor[(5, 14, ?), bool] */;
  (%75,)
}

def @func_5568() -> Tensor[(5, 14, ?), int32] {
  %76 = @func_4949() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %77 = %76.0;
  %78 = @func_4104() /* ty=Tensor[(5, 14, ?), bool] */;
  %79 = cast(%78, dtype="int32") /* ty=Tensor[(5, 14, ?), int32] */;
  %80 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%77, dtype="int32") /* ty=Tensor[(5, 14, 1), int32] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  add(%81, %82) /* ty=Tensor[(5, 14, ?), int32] */
}

def @func_3424(%var_3404: Tensor[(8, 13, 3), int16]) -> (Tensor[(8, 13, 3), float64], Tensor[(5, 14, 6), bool], Tensor[(420), float32]) {
  %83 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 13, 3), int16] */, dtype="int16") /* ty=Tensor[(8, 13, 3), int16] */;
  %84 = shape_of(%var_3404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%var_3404, dtype="int16") /* ty=Tensor[(8, 13, 3), int16] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %87 = minimum(%85, %86) /* ty=Tensor[(8, 13, 3), int16] */;
  %88 = cast(%87, dtype="float64") /* ty=Tensor[(8, 13, 3), float64] */;
  %89 = cast(meta[relay.Constant][2] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %90 = reshape(%89, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), float32] */;
  %91 = @func_3215(%90) /* ty=(Tensor[(5, 14, 6), bool],) */;
  %92 = acosh(%88) /* ty=Tensor[(8, 13, 3), float64] */;
  %93 = %91.0;
  (%92, %93, meta[relay.Constant][2] /* ty=Tensor[(420), float32] */)
}

def @func_6692() -> Tensor[(5, 14, 1), float64] {
  %94 = @func_4837() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %94.1
}

def @func_4643() -> (Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1, 208), bool]) {
  %95 = @func_3969() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %96 = %95.0;
  %97 = cast(%96, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %98 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 208), bool] */, dtype="bool") /* ty=Tensor[(1, 208), bool] */;
  %99 = reshape(%98, newshape=[208]) /* ty=Tensor[(208), bool] */;
  %100 = @func_2943(%99) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(12, 2, 3), bool], uint16, Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool]) */;
  %101 = cos(%97) /* ty=Tensor[(5, 14, 1), float32] */;
  %102 = %100.2;
  (%101, %102, meta[relay.Constant][3] /* ty=Tensor[(1, 208), bool] */)
}

def @func_7146() -> (Tensor[(5, 14, ?), int8], uint16, Tensor[(208), bool], Tensor[(5, 14, 1), float64]) {
  %103 = @func_4936() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %104 = %103.0;
  %105 = @func_5907() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */;
  %106 = %105.0;
  %107 = cast(%106, dtype="int8") /* ty=Tensor[(5, 14, 1), int8] */;
  %108 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%104, dtype="int8") /* ty=Tensor[(5, 14, 1), int8] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %111 = cast(meta[relay.Constant][4] /* ty=Tensor[(208), bool] */, dtype="bool") /* ty=Tensor[(208), bool] */;
  %112 = reshape(%111, newshape=[208]) /* ty=Tensor[(208), bool] */;
  %113 = @func_2943(%112) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(12, 2, 3), bool], uint16, Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool]) */;
  %114 = @func_6396() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %115 = subtract(%109, %110) /* ty=Tensor[(5, 14, ?), int8] */;
  %116 = %113.5;
  %117 = %114.0;
  (%115, %116, meta[relay.Constant][4] /* ty=Tensor[(208), bool] */, %117)
}

def @func_3215(%var_3210: Tensor[(5, 14, 6), float32]) -> (Tensor[(5, 14, 6), bool],) {
  %118 = @func_2795() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %119 = %118.0;
  %120 = cast(%119, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %121 = cast(%var_3210, dtype="bool") /* ty=Tensor[(5, 14, 6), bool] */;
  %122 = greater_equal(%120, %121) /* ty=Tensor[(5, 14, 6), bool] */;
  (%122,)
}

def @func_4682(%var_4670: Tensor[(1, 1, 8), int8], %var_4671: Tensor[(8, 3, 8), int8]) -> (Tensor[(8, 3, 8), bool], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
  %123 = cast(%var_4670, dtype="bool") /* ty=Tensor[(1, 1, 8), bool] */;
  %124 = cast(%var_4671, dtype="bool") /* ty=Tensor[(8, 3, 8), bool] */;
  %125 = @func_4244() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
  %126 = less_equal(%123, %124) /* ty=Tensor[(8, 3, 8), bool] */;
  %127 = %125.2;
  %128 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
  (%126, %127, %128)
}

def @func_8198(%var_8182: Tensor[(5, 14, 11), float32]) -> (Tensor[(5, 14, 11), uint64], Tensor[(5, 14, ?), int32], Tensor[(5, 14, 1), float64]) {
  %129 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %130 = %129.0;
  %131 = cast(%130, dtype="uint64") /* ty=Tensor[(5, 14, 1), uint64] */;
  %132 = cast(%var_8182, dtype="uint64") /* ty=Tensor[(5, 14, 11), uint64] */;
  %133 = @func_4759() /* ty=(Tensor[(1470), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %134 = bitwise_or(%131, %132) /* ty=Tensor[(5, 14, 11), uint64] */;
  %135 = @func_5568() /* ty=Tensor[(5, 14, ?), int32] */;
  %136 = %133.2;
  (%134, %135, %136)
}

def @func_6797(%var_6765: Tensor[(5, 14, 10), float64]) -> (Tensor[(5, 14, 13), float64], Tensor[(8), int8], Tensor[(5, 14, 10), int16], Tensor[(5, 14, 192), uint32]) {
  %137 = cast(meta[relay.Constant][5] /* ty=Tensor[(8), int8] */, dtype="int8") /* ty=Tensor[(8), int8] */;
  %138 = cast(meta[relay.Constant][6] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
  %139 = reshape(%137, newshape=[8]) /* ty=Tensor[(8), int8] */;
  %140 = reshape(%138, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %141 = @func_5052(%139, %140) /* ty=(Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 1), float64], Tensor[(8), int8], Tensor[(192), int8]) */;
  %142 = @func_4759() /* ty=(Tensor[(1470), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %143 = %142.2;
  %144 = cast(%143, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %145 = cast(%var_6765, dtype="bool") /* ty=Tensor[(5, 14, 10), bool] */;
  %146 = not_equal(%144, %145) /* ty=Tensor[(5, 14, 10), bool] */;
  %147 = cast(%var_6765, dtype="int16") /* ty=Tensor[(5, 14, 10), int16] */;
  %148 = shape_of(%146, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%146, dtype="int16") /* ty=Tensor[(5, 14, 10), int16] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %151 = cast(meta[relay.Constant][6] /* ty=Tensor[(192), int8] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %152 = cast(%143, dtype="uint32") /* ty=Tensor[(5, 14, 1), uint32] */;
  %153 = %141.0;
  %154 = logical_xor(%149, %150) /* ty=Tensor[(5, 14, 10), int16] */;
  %155 = bitwise_or(%151, %152) /* ty=Tensor[(5, 14, 192), uint32] */;
  (%153, meta[relay.Constant][5] /* ty=Tensor[(8), int8] */, %154, %155)
}

def @func_3882(%var_3863: Tensor[(39, 11), float32]) -> (Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(39, 11), float32], Tensor[(5, 14, 1), float32]) {
  %156 = @func_3362() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %157 = %156.1;
  %158 = cast(%157, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %159 = cast(%var_3863, dtype="float32") /* ty=Tensor[(39, 11), float32] */;
  %160 = reshape(%159, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), float32] */;
  %161 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %162 = sqrt(%158) /* ty=Tensor[(5, 14, 1), float32] */;
  %163 = @func_2329(%160) /* ty=Tensor[(3, 13, 11), float32] */;
  %164 = %161.0;
  (%162, %163, %var_3863, %164)
}

def @func_2857() -> (Tensor[(5, 14, 1), float32],) {
  %165 = @func_2758() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %166 = %165.0;
  (%166,)
}

def @func_8716() -> Tensor[(5, 14, 1), float32] {
  %167 = @func_3093() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %167.0
}

def @func_4986() -> Tensor[(5, 14, 1), float32] {
  %168 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %168.0
}

def @func_8843(%var_8819: Tensor[(700), float64], %var_8841: Tensor[(1, 1470), float32]) -> (Tensor[(120), float64], Tensor[(5, 14, 13), float64], Tensor[(700), float64], Tensor[(13, 33), float32], Tensor[(1470), float32], Tensor[(1, 1470), float32]) {
  %169 = @func_7781() /* ty=(Tensor[(120), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %170 = cast(%var_8819, dtype="float64") /* ty=Tensor[(700), float64] */;
  %171 = reshape(%170, newshape=[5, 14, 10]) /* ty=Tensor[(5, 14, 10), float64] */;
  %172 = @func_6797(%171) /* ty=(Tensor[(5, 14, 13), float64], Tensor[(8), int8], Tensor[(5, 14, 10), int16], Tensor[(5, 14, 192), uint32]) */;
  %173 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 33), float32] */, dtype="float32") /* ty=Tensor[(13, 33), float32] */;
  %174 = reshape(%173, newshape=[429]) /* ty=Tensor[(429), float32] */;
  %175 = @func_3243(%174) /* ty=(Tensor[(3, 13, 11), float32], Tensor[(5, 14, 429), bool]) */;
  %176 = %175.0;
  %177 = cast(%176, dtype="float32") /* ty=Tensor[(3, 13, 11), float32] */;
  %178 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(13, 33), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %179 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 33), float32] */, dtype="float32") /* ty=Tensor[(13, 33), float32] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %181 = cast(%var_8841, dtype="float32") /* ty=Tensor[(1, 1470), float32] */;
  %182 = reshape(%181, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %183 = @func_8508(%182) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(208), bool]) */;
  %184 = %169.0;
  %185 = %172.0;
  %186 = floor_divide(%179, %180) /* ty=Tensor[(13, 33), float32] */;
  %187 = %183.1;
  (%184, %185, %var_8819, %186, %187, %var_8841)
}

def @func_4793() -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) {
  %188 = @func_3706() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */;
  %189 = @func_4244() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
  %190 = %188.1;
  %191 = %189.0;
  (%190, %191)
}

def @func_7265() -> (Tensor[(5, 14, 8), int64], Tensor[(5, 14, 11), float32], Tensor[(770), float32]) {
  %192 = @func_4818() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %193 = %192.0;
  %194 = cast(%193, dtype="int64") /* ty=Tensor[(5, 14, 1), int64] */;
  %195 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 14, 8), float32] */, dtype="int64") /* ty=Tensor[(5, 14, 8), int64] */;
  %196 = cast(meta[relay.Constant][9] /* ty=Tensor[(770), float32] */, dtype="float32") /* ty=Tensor[(770), float32] */;
  %197 = reshape(%196, newshape=[5, 14, 11]) /* ty=Tensor[(5, 14, 11), float32] */;
  %198 = bitwise_xor(%194, %195) /* ty=Tensor[(5, 14, 8), int64] */;
  %199 = @func_5851(%197) /* ty=Tensor[(5, 14, 11), float32] */;
  (%198, %199, meta[relay.Constant][9] /* ty=Tensor[(770), float32] */)
}

def @func_5601() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 5), int64], Tensor[(350), float64], Tensor[(1470), float32], Tensor[(208), bool]) {
  %200 = @func_4449() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %201 = cast(meta[relay.Constant][10] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %202 = cast(meta[relay.Constant][11] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %203 = cast(meta[relay.Constant][12] /* ty=Tensor[(208), bool] */, dtype="bool") /* ty=Tensor[(208), bool] */;
  %204 = reshape(%201, newshape=[5, 14, 5]) /* ty=Tensor[(5, 14, 5), float64] */;
  %205 = reshape(%202, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %206 = reshape(%203, newshape=[208]) /* ty=Tensor[(208), bool] */;
  %207 = @func_3316(%204, %205, %206) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 5), int64], Tensor[(720), int16], Tensor[(1470), float32], Tensor[(208), bool]) */;
  %208 = %200.0;
  %209 = %207.1;
  (%208, %209, meta[relay.Constant][10] /* ty=Tensor[(350), float64] */, meta[relay.Constant][11] /* ty=Tensor[(1470), float32] */, meta[relay.Constant][12] /* ty=Tensor[(208), bool] */)
}

def @func_5997() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
  %210 = @func_5907() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */;
  %211 = @func_4244() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
  %212 = %210.0;
  %213 = %211.2;
  (%212, %213)
}

def @func_8126(%var_8096: Tensor[(15, 13, 11), float64]) -> Tensor[(15, 13, 11), float64] {
  %214 = cast(%var_8096, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
  sqrt(%214) /* ty=Tensor[(15, 13, 11), float64] */
}

def @func_4104() -> Tensor[(5, 14, ?), bool] {
  %215 = @func_2758() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %216 = %215.0;
  %217 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %218 = %217.0;
  %219 = cast(%218, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
  %220 = shape_of(%216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %221 = cast(%216, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
  %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %223 = divide(%221, %222) /* ty=Tensor[(5, 14, ?), float64] */;
  %224 = cast(%216, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %225 = shape_of(%223, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%223, dtype="bool") /* ty=Tensor[(5, 14, ?), bool] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%226, %227) /* ty=Tensor[(5, 14, ?), bool] */
}

def @func_1402(%var_1387: Tensor[(15, 1, 8), float64]) -> (Tensor[(15, 1, 8), float64],) {
  %228 = cast(%var_1387, dtype="float64") /* ty=Tensor[(15, 1, 8), float64] */;
  %229 = asin(%228) /* ty=Tensor[(15, 1, 8), float64] */;
  (%229,)
}

def @main(%var_8885: Tensor[(120), float64], %var_8886: Tensor[(208), bool], %var_8897: Tensor[(429), float32]) -> (Tensor[(5, 14, ?), bool], Tensor[(192), int8], Tensor[(208), bool], Tensor[(5, 14, 120), bool], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(4, 4, 13), int32]) {
  %230 = @func_7663() /* ty=(Tensor[(5, 14, ?), bool],) */;
  %231 = cast(meta[relay.Constant][13] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
  %232 = cast(%var_8885, dtype="float64") /* ty=Tensor[(120), float64] */;
  %233 = cast(%var_8886, dtype="bool") /* ty=Tensor[(208), bool] */;
  %234 = reshape(%231, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %235 = reshape(%232, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %236 = reshape(%233, newshape=[208]) /* ty=Tensor[(208), bool] */;
  %237 = @func_5251(%234, %235, %236) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(8), int8], Tensor[(192), int8], Tensor[(1, 120), float64], Tensor[(224), float32], Tensor[(120), float64], Tensor[(5, 14, 1), float32], float64, Tensor[(1470), float32], Tensor[(208), bool]) */;
  %238 = %237.0;
  %239 = cast(%var_8885, dtype="bool") /* ty=Tensor[(120), bool] */;
  %240 = cast(%238, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %241 = cast(%var_8897, dtype="float32") /* ty=Tensor[(429), float32] */;
  %242 = reshape(%241, newshape=[39, 11]) /* ty=Tensor[(39, 11), float32] */;
  %243 = @func_3882(%242) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(39, 11), float32], Tensor[(5, 14, 1), float32]) */;
  %244 = cast(-6.63507f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %245 = cast(%var_8886, dtype="float64") /* ty=Tensor[(208), float64] */;
  %246 = reshape(%244, newshape=[]) /* ty=float64 */;
  %247 = reshape(%245, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), float64] */;
  %248 = @func_288(%246, %247) /* ty=(Tensor[(4, 4, 13), bool],) */;
  %249 = %248.0;
  %250 = cast(%249, dtype="int32") /* ty=Tensor[(4, 4, 13), int32] */;
  %251 = cast(-6.63507f64 /* ty=float64 */, dtype="int32") /* ty=int32 */;
  %252 = %230.0;
  %253 = greater(%239, %240) /* ty=Tensor[(5, 14, 120), bool] */;
  %254 = %243.1;
  %255 = maximum(%250, %251) /* ty=Tensor[(4, 4, 13), int32] */;
  (%252, meta[relay.Constant][13] /* ty=Tensor[(192), int8] */, %var_8886, %253, %254, %var_8897, %255)
}

def @func_2758() -> (Tensor[(5, 14, 1), float32],) {
  %256 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %257 = %256.0;
  (%257,)
}

def @func_3535(%var_3523: Tensor[(429), float32]) -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(429), float32]) {
  %258 = @func_2795() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %259 = @func_3362() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %260 = cast(%var_3523, dtype="float32") /* ty=Tensor[(429), float32] */;
  %261 = reshape(%260, newshape=[429]) /* ty=Tensor[(429), float32] */;
  %262 = @func_3243(%261) /* ty=(Tensor[(3, 13, 11), float32], Tensor[(5, 14, 429), bool]) */;
  %263 = %258.0;
  %264 = %259.0;
  %265 = %262.0;
  (%263, %264, %265, %var_3523)
}

def @func_3093() -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) {
  %266 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %267 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
  %268 = cast(%267, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %269 = %266.0;
  %270 = atan(%268) /* ty=Tensor[(5, 14, 1), float32] */;
  (%269, %270)
}

def @func_7601() -> (Tensor[(5, 14, 1), float32],) {
  %271 = @func_5616() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %272 = %271.0;
  (%272,)
}

def @func_7555() -> (Tensor[(5, 14, 1), float32], Tensor[(15, 1, 8), float64], Tensor[(120), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) {
  %273 = @func_4818() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %274 = cast(meta[relay.Constant][14] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %275 = reshape(%274, newshape=[15, 1, 8]) /* ty=Tensor[(15, 1, 8), float64] */;
  %276 = @func_1402(%275) /* ty=(Tensor[(15, 1, 8), float64],) */;
  %277 = @func_4793() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
  %278 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %279 = %273.0;
  %280 = %276.0;
  %281 = %277.0;
  %282 = %278.0;
  (%279, %280, meta[relay.Constant][14] /* ty=Tensor[(120), float64] */, %281, %282)
}

def @func_7663() -> (Tensor[(5, 14, ?), bool],) {
  %283 = @func_5544() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %284 = %283.1;
  %285 = @func_7601() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %286 = %285.0;
  %287 = cast(%286, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %288 = shape_of(%284, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%284, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %291 = less(%289, %290) /* ty=Tensor[(5, 14, ?), bool] */;
  (%291,)
}

def @func_5851(%var_5845: Tensor[(5, 14, 11), float32]) -> Tensor[(5, 14, 11), float32] {
  %292 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %293 = %292.0;
  %294 = cast(%293, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %295 = cast(%var_5845, dtype="float32") /* ty=Tensor[(5, 14, 11), float32] */;
  minimum(%294, %295) /* ty=Tensor[(5, 14, 11), float32] */
}

def @func_3673(%var_3660: Tensor[(5, 14, 5), float32]) -> (Tensor[(5, 14, 5), int32],) {
  %296 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %297 = %296.0;
  %298 = cast(%297, dtype="int32") /* ty=Tensor[(5, 14, 1), int32] */;
  %299 = cast(%var_3660, dtype="int32") /* ty=Tensor[(5, 14, 5), int32] */;
  %300 = right_shift(%298, %299) /* ty=Tensor[(5, 14, 5), int32] */;
  (%300,)
}

def @func_3755(%var_3749: Tensor[(429), float32], %var_3753: Tensor[(420), float32]) -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 6), bool], Tensor[(420), float32]) {
  %301 = @func_3362() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %302 = %301.1;
  %303 = cast(%302, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
  %304 = @func_2795() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %305 = cast(%var_3749, dtype="float32") /* ty=Tensor[(429), float32] */;
  %306 = reshape(%305, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), float32] */;
  %307 = cast(%var_3753, dtype="float32") /* ty=Tensor[(420), float32] */;
  %308 = reshape(%307, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), float32] */;
  %309 = @func_3215(%308) /* ty=(Tensor[(5, 14, 6), bool],) */;
  %310 = atanh(%303) /* ty=Tensor[(5, 14, 1), float64] */;
  %311 = %304.0;
  %312 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
  %313 = @func_2329(%306) /* ty=Tensor[(3, 13, 11), float32] */;
  %314 = %309.0;
  (%310, %311, %312, %313, %var_3749, %314, %var_3753)
}

def @func_8436(%var_8431: Tensor[(756), float64]) -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(9, 6, 14), float64], Tensor[(756), bool]) {
  %315 = @func_4837() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %316 = cast(meta[relay.Constant][15] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %317 = cast(meta[relay.Constant][15] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %318 = reshape(%316, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %319 = reshape(%317, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %320 = @func_1155(%318, %319) /* ty=(Tensor[(9, 6, 14), float64],) */;
  %321 = cast(%var_8431, dtype="bool") /* ty=Tensor[(756), bool] */;
  %322 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(756), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %323 = cast(meta[relay.Constant][15] /* ty=Tensor[(756), float64] */, dtype="bool") /* ty=Tensor[(756), bool] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?), bool] */;
  %325 = @func_5413() /* ty=Tensor[(5, 14, 1), float32] */;
  %326 = %315.0;
  %327 = %320.0;
  %328 = logical_and(%323, %324) /* ty=Tensor[(756), bool] */;
  (%325, %326, %327, %328)
}

def @func_2329(%var_2319: Tensor[(3, 13, 11), float32]) -> Tensor[(3, 13, 11), float32] {
  %329 = cast(%var_2319, dtype="float32") /* ty=Tensor[(3, 13, 11), float32] */;
  log10(%329) /* ty=Tensor[(3, 13, 11), float32] */
}

def @func_6954(%var_6890: Tensor[(10, 6, 10), float64], %var_6901: Tensor[(10, 6, 10), float64], %var_6946: Tensor[(429), float32]) -> (Tensor[(10, 6, 10), bool], Tensor[(10, 6, 10), bool], Tensor[(3, 13, 11), float32], Tensor[(429), float32]) {
  %330 = cast(%var_6890, dtype="float64") /* ty=Tensor[(10, 6, 10), float64] */;
  %331 = exp(%330) /* ty=Tensor[(10, 6, 10), float64] */;
  %332 = cast(%var_6901, dtype="bool") /* ty=Tensor[(10, 6, 10), bool] */;
  %333 = shape_of(%331, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%331, dtype="bool") /* ty=Tensor[(10, 6, 10), bool] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %336 = cast(%var_6890, dtype="bool") /* ty=Tensor[(10, 6, 10), bool] */;
  %337 = shape_of(%331, dtype="int32") /* ty=Tensor[(3), int32] */;
  %338 = cast(%331, dtype="bool") /* ty=Tensor[(10, 6, 10), bool] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %340 = cast(%var_6946, dtype="float32") /* ty=Tensor[(429), float32] */;
  %341 = reshape(%340, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), float32] */;
  %342 = greater(%334, %335) /* ty=Tensor[(10, 6, 10), bool] */;
  %343 = equal(%338, %339) /* ty=Tensor[(10, 6, 10), bool] */;
  %344 = @func_2329(%341) /* ty=Tensor[(3, 13, 11), float32] */;
  (%342, %343, %344, %var_6946)
}

def @func_8508(%var_8505: Tensor[(1470), float32]) -> (Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(208), bool]) {
  %345 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %346 = cast(%var_8505, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %347 = cast(meta[relay.Constant][16] /* ty=Tensor[(208), bool] */, dtype="bool") /* ty=Tensor[(208), bool] */;
  %348 = reshape(%346, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %349 = reshape(%347, newshape=[208]) /* ty=Tensor[(208), bool] */;
  %350 = @func_6648(%348, %349) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(720), int16], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(5, 14, 1), float32]) */;
  %351 = %345.0;
  %352 = %350.2;
  (%351, %352, %var_8505, meta[relay.Constant][16] /* ty=Tensor[(208), bool] */)
}

def @func_6559(%var_6532: Tensor[(1, 13, 10), int8], %var_6533: Tensor[(14, 13, 10), int8]) -> (Tensor[(14, 13, 10), int8], Tensor[(5, 14, 1), float64]) {
  %353 = cast(%var_6532, dtype="int8") /* ty=Tensor[(1, 13, 10), int8] */;
  %354 = cast(%var_6533, dtype="int8") /* ty=Tensor[(14, 13, 10), int8] */;
  %355 = @func_5945() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %356 = left_shift(%353, %354) /* ty=Tensor[(14, 13, 10), int8] */;
  %357 = %355.0;
  (%356, %357)
}

def @func_6197(%var_6184: Tensor[(5, 14, 16), float32]) -> (Tensor[(5, 14, 16), int32],) {
  %358 = @func_3093() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %359 = %358.0;
  %360 = cast(%359, dtype="int32") /* ty=Tensor[(5, 14, 1), int32] */;
  %361 = cast(%var_6184, dtype="int32") /* ty=Tensor[(5, 14, 16), int32] */;
  %362 = add(%360, %361) /* ty=Tensor[(5, 14, 16), int32] */;
  (%362,)
}

def @func_4173(%var_4168: Tensor[(7, 11, 15), uint8], %var_4169: Tensor[(7, 11, 15), uint8]) -> (Tensor[(7, 11, 15), bool],) {
  %363 = cast(%var_4169, dtype="bool") /* ty=Tensor[(7, 11, 15), bool] */;
  %364 = shape_of(%var_4168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%var_4168, dtype="bool") /* ty=Tensor[(7, 11, 15), bool] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %367 = greater(%365, %366) /* ty=Tensor[(7, 11, 15), bool] */;
  (%367,)
}

def @func_288(%var_279: float64, %var_280: Tensor[(4, 4, 13), float64]) -> (Tensor[(4, 4, 13), bool],) {
  %368 = cast(%var_279, dtype="bool") /* ty=bool */;
  %369 = cast(%var_280, dtype="bool") /* ty=Tensor[(4, 4, 13), bool] */;
  %370 = greater(%368, %369) /* ty=Tensor[(4, 4, 13), bool] */;
  (%370,)
}

def @func_941(%var_891: Tensor[(7, 14, 15), float32], %var_923: Tensor[(4, 4, 13), bool]) -> (Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) {
  %371 = cast(%var_891, dtype="float32") /* ty=Tensor[(7, 14, 15), float32] */;
  %372 = cast(meta[relay.Constant][18] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %373 = cast(meta[relay.Constant][18] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %374 = cast(5.02361f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %375 = reshape(%372, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %376 = reshape(%373, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %377 = reshape(%374, newshape=[]) /* ty=float64 */;
  %378 = @func_868(%375, %376, %377) /* ty=(Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) */;
  %379 = cast(meta[relay.Constant][18] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %380 = cast(meta[relay.Constant][18] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %381 = cast(5.02361f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %382 = reshape(%379, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %383 = reshape(%380, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %384 = reshape(%381, newshape=[]) /* ty=float64 */;
  %385 = @func_868(%382, %383, %384) /* ty=(Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) */;
  %386 = cast(5.02361f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %387 = cast(meta[relay.Constant][17] /* ty=Tensor[(104, 2), float64] */, dtype="float64") /* ty=Tensor[(104, 2), float64] */;
  %388 = reshape(%386, newshape=[]) /* ty=float64 */;
  %389 = reshape(%387, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), float64] */;
  %390 = @func_288(%388, %389) /* ty=(Tensor[(4, 4, 13), bool],) */;
  %391 = %390.0;
  %392 = cast(%var_923, dtype="float64") /* ty=Tensor[(4, 4, 13), float64] */;
  %393 = shape_of(%391, dtype="int32") /* ty=Tensor[(3), int32] */;
  %394 = cast(%391, dtype="float64") /* ty=Tensor[(4, 4, 13), float64] */;
  %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %396 = cast(meta[relay.Constant][18] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %397 = cast(meta[relay.Constant][18] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %398 = %385.2;
  %399 = cast(%398, dtype="float64") /* ty=float64 */;
  %400 = reshape(%396, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %401 = reshape(%397, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %402 = reshape(%399, newshape=[]) /* ty=float64 */;
  %403 = @func_868(%400, %401, %402) /* ty=(Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) */;
  %404 = cast(%398, dtype="uint16") /* ty=uint16 */;
  %405 = %378.4;
  %406 = cast(%405, dtype="uint16") /* ty=Tensor[(12, 2, 3), uint16] */;
  %407 = reshape(%404, newshape=[]) /* ty=uint16 */;
  %408 = reshape(%406, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), uint16] */;
  %409 = @func_490(%407, %408) /* ty=(Tensor[(12, 2, 3), bool],) */;
  %410 = log(%371) /* ty=Tensor[(7, 14, 15), float32] */;
  %411 = minimum(%394, %395) /* ty=Tensor[(4, 4, 13), float64] */;
  %412 = %403.3;
  %413 = %409.0;
  (%410, 5.02361f64 /* ty=float64 */, meta[relay.Constant][17] /* ty=Tensor[(104, 2), float64] */, %405, meta[relay.Constant][18] /* ty=Tensor[(720), int16] */, %398, %411, %412, %413)
}

def @func_7457(%var_7290: Tensor[(9, 1, 2), int64], %var_7291: Tensor[(9, 11, 2), int64], %var_7342: Tensor[(840), float64], %var_7446: Tensor[(756), float64], %var_7454: Tensor[(25), int16]) -> (Tensor[(9, 11, 2), float64], Tensor[(840), float64], Tensor[(2688), bool], Tensor[(5, 14, 1), float64], Tensor[(2688), int32], Tensor[(5, 14, 11), uint64], Tensor[(5, 14, 6), bool], Tensor[(312), int16], Tensor[(5, 14, ?), float32], Tensor[(2688), uint16], Tensor[(9, 6, 14), float64], Tensor[(756), float64], Tensor[(?, 5, 5), float32], Tensor[(25), int16]) {
  %414 = cast(%var_7290, dtype="int64") /* ty=Tensor[(9, 1, 2), int64] */;
  %415 = cast(%var_7291, dtype="int64") /* ty=Tensor[(9, 11, 2), int64] */;
  %416 = left_shift(%414, %415) /* ty=Tensor[(9, 11, 2), int64] */;
  %417 = cast(%var_7290, dtype="float64") /* ty=Tensor[(9, 1, 2), float64] */;
  %418 = cast(%416, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %419 = cast(meta[relay.Constant][19] /* ty=Tensor[(2688), int32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %420 = exp(%419) /* ty=Tensor[(2688), float32] */;
  %421 = cast(meta[relay.Constant][19] /* ty=Tensor[(2688), int32] */, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %422 = shape_of(%420, dtype="int32") /* ty=Tensor[(1), int32] */;
  %423 = cast(%420, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?), bool] */;
  %425 = @func_4379() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %426 = cast(%420, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %427 = reshape(%426, newshape=[2688]) /* ty=Tensor[(2688), int32] */;
  %428 = @func_4155(%427) /* ty=(Tensor[(5, 14, ?), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), int32]) */;
  %429 = @func_5413() /* ty=Tensor[(5, 14, 1), float32] */;
  %430 = cast(%429, dtype="uint64") /* ty=Tensor[(5, 14, 1), uint64] */;
  %431 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 14, 11), float32] */, dtype="uint64") /* ty=Tensor[(5, 14, 11), uint64] */;
  %432 = cast(meta[relay.Constant][21] /* ty=Tensor[(312), int16] */, dtype="int16") /* ty=Tensor[(312), int16] */;
  %433 = reshape(%432, newshape=[8, 13, 3]) /* ty=Tensor[(8, 13, 3), int16] */;
  %434 = @func_3424(%433) /* ty=(Tensor[(8, 13, 3), float64], Tensor[(5, 14, 6), bool], Tensor[(420), float32]) */;
  %435 = @func_4583() /* ty=(Tensor[(5, 14, ?), float32], Tensor[(5, 14, ?), bool]) */;
  %436 = cast(%var_7342, dtype="float64") /* ty=Tensor[(840), float64] */;
  %437 = cast(meta[relay.Constant][19] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %438 = reshape(%436, newshape=[5, 14, 12]) /* ty=Tensor[(5, 14, 12), float64] */;
  %439 = reshape(%437, newshape=[96, 28]) /* ty=Tensor[(96, 28), int32] */;
  %440 = @func_6173(%438, %439) /* ty=(Tensor[(5, 14, 12), int8], Tensor[(5, 14, 1), float64], Tensor[(13, 15, 11), bool], Tensor[(12, 16, 14), float32], Tensor[(96, 28), int32], Tensor[(5, 14, 2145), float32]) */;
  %441 = %440.3;
  %442 = cast(%441, dtype="uint16") /* ty=Tensor[(12, 16, 14), uint16] */;
  %443 = shape_of(%420, dtype="int32") /* ty=Tensor[(1), int32] */;
  %444 = cast(%420, dtype="uint16") /* ty=Tensor[(2688), uint16] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %446 = cast(%var_7446, dtype="float64") /* ty=Tensor[(756), float64] */;
  %447 = cast(%var_7446, dtype="float64") /* ty=Tensor[(756), float64] */;
  %448 = reshape(%446, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %449 = reshape(%447, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %450 = @func_1155(%448, %449) /* ty=(Tensor[(9, 6, 14), float64],) */;
  %451 = cast(%var_7454, dtype="int16") /* ty=Tensor[(25), int16] */;
  %452 = cast(%var_7454, dtype="int16") /* ty=Tensor[(25), int16] */;
  %453 = reshape(%451, newshape=[1, 5, 5]) /* ty=Tensor[(1, 5, 5), int16] */;
  %454 = reshape(%452, newshape=[1, 5, 5]) /* ty=Tensor[(1, 5, 5), int16] */;
  %455 = @func_5189(%453, %454) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(?, 5, 5), float32]) */;
  %456 = maximum(%417, %418) /* ty=Tensor[(9, 11, 2), float64] */;
  %457 = not_equal(%423, %424) /* ty=Tensor[(2688), bool] */;
  %458 = %425.0;
  %459 = %428.2;
  %460 = maximum(%430, %431) /* ty=Tensor[(5, 14, 11), uint64] */;
  %461 = %434.1;
  %462 = %435.0;
  %463 = logical_xor(%444, %445) /* ty=Tensor[(2688), uint16] */;
  %464 = %450.0;
  %465 = %455.1;
  (%456, %var_7342, %457, %458, %459, %460, %461, meta[relay.Constant][21] /* ty=Tensor[(312), int16] */, %462, %463, %464, %var_7446, %465, %var_7454)
}

def @func_7478() -> (Tensor[(5, 14, 1), float64],) {
  %466 = @func_5316() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %467 = %466.0;
  (%467,)
}

def @func_3243(%var_3231: Tensor[(429), float32]) -> (Tensor[(3, 13, 11), float32], Tensor[(5, 14, 429), bool]) {
  %468 = cast(%var_3231, dtype="float32") /* ty=Tensor[(429), float32] */;
  %469 = reshape(%468, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), float32] */;
  %470 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
  %471 = cast(%var_3231, dtype="bool") /* ty=Tensor[(429), bool] */;
  %472 = cast(%470, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %473 = @func_2329(%469) /* ty=Tensor[(3, 13, 11), float32] */;
  %474 = logical_and(%471, %472) /* ty=Tensor[(5, 14, 429), bool] */;
  (%473, %474)
}

def @func_6844() -> Tensor[(5, 14, ?), float32] {
  %475 = @func_5488() /* ty=(Tensor[(5, 14, ?), bool], Tensor[(5, 14, ?), float32], Tensor[(5, 14, 1), float32]) */;
  %475.1
}

def @func_4818() -> (Tensor[(5, 14, 1), float32],) {
  %476 = @func_3362() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %477 = %476.1;
  (%477,)
}

def @func_6333(%var_6249: Tensor[(720), int16], %var_6250: float64, %var_6310: Tensor[(5, 14, 7), float32], %var_6326: Tensor[(1155), uint8]) -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(208), float64], Tensor[(720), int16], float64, Tensor[(5, 14, ?), bool], Tensor[(5, 14, 6), bool], Tensor[(429), float32], Tensor[(420), float32], Tensor[(5, 14, 7), bool], Tensor[(7, 11, 15), bool], Tensor[(1155), uint8]) {
  %478 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %479 = cast(%var_6249, dtype="int16") /* ty=Tensor[(720), int16] */;
  %480 = cast(%var_6249, dtype="int16") /* ty=Tensor[(720), int16] */;
  %481 = cast(%var_6250, dtype="float64") /* ty=float64 */;
  %482 = reshape(%479, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %483 = reshape(%480, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %484 = reshape(%481, newshape=[]) /* ty=float64 */;
  %485 = @func_868(%482, %483, %484) /* ty=(Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) */;
  %486 = @func_4583() /* ty=(Tensor[(5, 14, ?), float32], Tensor[(5, 14, ?), bool]) */;
  %487 = cast(meta[relay.Constant][22] /* ty=Tensor[(429), float32] */, dtype="float32") /* ty=Tensor[(429), float32] */;
  %488 = cast(meta[relay.Constant][23] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %489 = reshape(%487, newshape=[429]) /* ty=Tensor[(429), float32] */;
  %490 = reshape(%488, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %491 = @func_3755(%489, %490) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 6), bool], Tensor[(420), float32]) */;
  %492 = @func_4818() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %493 = %492.0;
  %494 = cast(%493, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %495 = cast(%var_6310, dtype="bool") /* ty=Tensor[(5, 14, 7), bool] */;
  %496 = cast(%var_6326, dtype="uint8") /* ty=Tensor[(1155), uint8] */;
  %497 = cast(%var_6326, dtype="uint8") /* ty=Tensor[(1155), uint8] */;
  %498 = reshape(%496, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), uint8] */;
  %499 = reshape(%497, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), uint8] */;
  %500 = @func_4173(%498, %499) /* ty=(Tensor[(7, 11, 15), bool],) */;
  %501 = @func_5101() /* ty=Tensor[(5, 14, 1), float64] */;
  %502 = %478.0;
  %503 = %485.3;
  %504 = %486.1;
  %505 = %491.5;
  %506 = less(%494, %495) /* ty=Tensor[(5, 14, 7), bool] */;
  %507 = %500.0;
  (%501, %502, %503, %var_6249, %var_6250, %504, %505, meta[relay.Constant][22] /* ty=Tensor[(429), float32] */, meta[relay.Constant][23] /* ty=Tensor[(420), float32] */, %506, %507, %var_6326)
}

def @func_8571(%var_8559: Tensor[(5, 14, 7), float32]) -> (Tensor[(5, 14, 7), uint64], Tensor[(5, 14, 7), float64]) {
  %508 = @func_4986() /* ty=Tensor[(5, 14, 1), float32] */;
  %509 = cast(%508, dtype="uint64") /* ty=Tensor[(5, 14, 1), uint64] */;
  %510 = cast(%var_8559, dtype="uint64") /* ty=Tensor[(5, 14, 7), uint64] */;
  %511 = cast(%var_8559, dtype="float64") /* ty=Tensor[(5, 14, 7), float64] */;
  %512 = subtract(%509, %510) /* ty=Tensor[(5, 14, 7), uint64] */;
  %513 = asinh(%511) /* ty=Tensor[(5, 14, 7), float64] */;
  (%512, %513)
}

def @func_4033(%var_4021: Tensor[(12, 16, 14), int32]) -> (Tensor[(12, 16, 14), bool], Tensor[(12, 16, 14), float32]) {
  %514 = cast(%var_4021, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
  %515 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(12, 16, 14), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(meta[relay.Constant][24] /* ty=Tensor[(12, 16, 14), int32] */, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %518 = cast(%var_4021, dtype="float32") /* ty=Tensor[(12, 16, 14), float32] */;
  %519 = equal(%516, %517) /* ty=Tensor[(12, 16, 14), bool] */;
  %520 = tan(%518) /* ty=Tensor[(12, 16, 14), float32] */;
  (%519, %520)
}

def @func_5189(%var_5170: Tensor[(1, 5, 5), int16], %var_5171: Tensor[(1, 5, 5), int16]) -> (Tensor[(5, 14, 1), float64], Tensor[(?, 5, 5), float32]) {
  %521 = cast(%var_5171, dtype="int16") /* ty=Tensor[(1, 5, 5), int16] */;
  %522 = shape_of(%var_5170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(%var_5170, dtype="int16") /* ty=Tensor[(1, 5, 5), int16] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %525 = bitwise_xor(%523, %524) /* ty=Tensor[(?, 5, 5), int16] */;
  %526 = cast(%var_5171, dtype="float32") /* ty=Tensor[(1, 5, 5), float32] */;
  %527 = shape_of(%525, dtype="int32") /* ty=Tensor[(3), int32] */;
  %528 = cast(%525, dtype="float32") /* ty=Tensor[(?, 5, 5), float32] */;
  %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %530 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
  %531 = mod(%528, %529) /* ty=Tensor[(?, 5, 5), float32] */;
  (%530, %531)
}

def @func_4379() -> (Tensor[(5, 14, 1), float64],) {
  %532 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %533 = %532.0;
  (%533,)
}

def @func_3362() -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) {
  %534 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %535 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %536 = %534.0;
  %537 = %535.0;
  (%536, %537)
}

def @func_4583() -> (Tensor[(5, 14, ?), float32], Tensor[(5, 14, ?), bool]) {
  %538 = @func_3093() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %539 = %538.1;
  %540 = cast(%539, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
  %541 = sin(%540) /* ty=Tensor[(5, 14, 1), float64] */;
  %542 = cast(%539, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%541, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %546 = mod(%544, %545) /* ty=Tensor[(5, 14, ?), float32] */;
  %547 = @func_4104() /* ty=Tensor[(5, 14, ?), bool] */;
  (%546, %547)
}

def @func_5101() -> Tensor[(5, 14, 1), float64] {
  %548 = @func_4244() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
  %548.2
}

def @func_2709(%var_2656: Tensor[(120), float64], %var_2665: uint16, %var_2666: Tensor[(72), uint16], %var_2686: Tensor[(429), float32]) -> (Tensor[(5, 14, 1), float64], Tensor[(15, 1, 8), float64], Tensor[(120), float64], Tensor[(12, 2, 3), bool], uint16, Tensor[(72), uint16], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(72, 1), uint16], Tensor[(360, 2), int16], Tensor[(15, 1, 8), float64]) {
  %549 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %550 = %549.0;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
  %552 = cast(%var_2656, dtype="float64") /* ty=Tensor[(120), float64] */;
  %553 = reshape(%552, newshape=[15, 1, 8]) /* ty=Tensor[(15, 1, 8), float64] */;
  %554 = @func_1402(%553) /* ty=(Tensor[(15, 1, 8), float64],) */;
  %555 = cast(%var_2665, dtype="uint16") /* ty=uint16 */;
  %556 = cast(%var_2666, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %557 = reshape(%555, newshape=[]) /* ty=uint16 */;
  %558 = reshape(%556, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), uint16] */;
  %559 = @func_490(%557, %558) /* ty=(Tensor[(12, 2, 3), bool],) */;
  %560 = cast(%var_2686, dtype="float32") /* ty=Tensor[(429), float32] */;
  %561 = reshape(%560, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), float32] */;
  %562 = cast(meta[relay.Constant][25] /* ty=Tensor[(360, 2), int16] */, dtype="int16") /* ty=Tensor[(360, 2), int16] */;
  %563 = cast(meta[relay.Constant][25] /* ty=Tensor[(360, 2), int16] */, dtype="int16") /* ty=Tensor[(360, 2), int16] */;
  %564 = cast(%var_2665, dtype="float64") /* ty=float64 */;
  %565 = reshape(%562, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %566 = reshape(%563, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %567 = reshape(%564, newshape=[]) /* ty=float64 */;
  %568 = @func_868(%565, %566, %567) /* ty=(Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) */;
  %569 = %554.0;
  %570 = cast(%569, dtype="float64") /* ty=Tensor[(15, 1, 8), float64] */;
  %571 = reshape(%570, newshape=[15, 1, 8]) /* ty=Tensor[(15, 1, 8), float64] */;
  %572 = @func_1402(%571) /* ty=(Tensor[(15, 1, 8), float64],) */;
  %573 = tan(%551) /* ty=Tensor[(5, 14, 1), float64] */;
  %574 = %559.0;
  %575 = @func_2329(%561) /* ty=Tensor[(3, 13, 11), float32] */;
  %576 = %568.5;
  %577 = %572.0;
  (%573, %569, %var_2656, %574, %var_2665, %var_2666, %575, %var_2686, %576, meta[relay.Constant][25] /* ty=Tensor[(360, 2), int16] */, %577)
}

def @func_8483() -> Tensor[(5, 14, 1), float32] {
  %578 = @func_3093() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %578.0
}

def @func_3766() -> (Tensor[(5, 14, 1), float64],) {
  %579 = @func_3706() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */;
  %580 = %579.0;
  (%580,)
}

def @func_1247(%var_1175: Tensor[(11, 12, 13), int32], %var_1183: float64, %var_1187: Tensor[(756), float64], %var_1207: Tensor[(104, 2), bool]) -> (Tensor[(11, 12, 13), bool], float64, Tensor[(720), int16], float64, Tensor[(756), float64], Tensor[(208), float64], Tensor[(1470), float32], Tensor[(104, 2), bool], Tensor[(4, 4, 13), float64], Tensor[(4, 4, 13), bool], Tensor[(9, 6, 14), float64], Tensor[(4, 4, 13), bool]) {
  %581 = cast(%var_1175, dtype="bool") /* ty=Tensor[(11, 12, 13), bool] */;
  %582 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(11, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 12, 13), int32] */, dtype="bool") /* ty=Tensor[(11, 12, 13), bool] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %585 = cast(meta[relay.Constant][27] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %586 = cast(meta[relay.Constant][27] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %587 = cast(%var_1183, dtype="float64") /* ty=float64 */;
  %588 = reshape(%585, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %589 = reshape(%586, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %590 = reshape(%587, newshape=[]) /* ty=float64 */;
  %591 = @func_868(%588, %589, %590) /* ty=(Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) */;
  %592 = cast(meta[relay.Constant][28] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %593 = cast(%var_1207, dtype="bool") /* ty=Tensor[(104, 2), bool] */;
  %594 = reshape(%592, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %595 = reshape(%593, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), bool] */;
  %596 = @func_941(%594, %595) /* ty=(Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) */;
  %597 = cast(meta[relay.Constant][28] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %598 = %596.7;
  %599 = cast(%598, dtype="bool") /* ty=Tensor[(208), bool] */;
  %600 = reshape(%597, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %601 = reshape(%599, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), bool] */;
  %602 = @func_941(%600, %601) /* ty=(Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) */;
  %603 = cast(%var_1183, dtype="float64") /* ty=float64 */;
  %604 = cast(%var_1207, dtype="float64") /* ty=Tensor[(104, 2), float64] */;
  %605 = reshape(%603, newshape=[]) /* ty=float64 */;
  %606 = reshape(%604, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), float64] */;
  %607 = @func_288(%605, %606) /* ty=(Tensor[(4, 4, 13), bool],) */;
  %608 = cast(%var_1187, dtype="float64") /* ty=Tensor[(756), float64] */;
  %609 = cast(%var_1187, dtype="float64") /* ty=Tensor[(756), float64] */;
  %610 = reshape(%608, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %611 = reshape(%609, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %612 = @func_1155(%610, %611) /* ty=(Tensor[(9, 6, 14), float64],) */;
  %613 = %612.0;
  %614 = cast(%613, dtype="float32") /* ty=Tensor[(9, 6, 14), float32] */;
  %615 = asinh(%614) /* ty=Tensor[(9, 6, 14), float32] */;
  %616 = cast(%615, dtype="float64") /* ty=Tensor[(9, 6, 14), float64] */;
  %617 = %591.2;
  %618 = cast(%617, dtype="float64") /* ty=float64 */;
  %619 = cast(%598, dtype="float64") /* ty=Tensor[(208), float64] */;
  %620 = reshape(%618, newshape=[]) /* ty=float64 */;
  %621 = reshape(%619, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), float64] */;
  %622 = @func_288(%620, %621) /* ty=(Tensor[(4, 4, 13), bool],) */;
  %623 = greater(%583, %584) /* ty=Tensor[(11, 12, 13), bool] */;
  %624 = %602.6;
  %625 = %607.0;
  %626 = exp(%616) /* ty=Tensor[(9, 6, 14), float64] */;
  %627 = %622.0;
  (%623, %617, meta[relay.Constant][27] /* ty=Tensor[(720), int16] */, %var_1183, %var_1187, %598, meta[relay.Constant][28] /* ty=Tensor[(1470), float32] */, %var_1207, %624, %625, %626, %627)
}

def @func_6741() -> Tensor[(5, 14, 1), float32] {
  @func_4986() /* ty=Tensor[(5, 14, 1), float32] */
}

def @func_8671(%var_8612: Tensor[(8), int8], %var_8613: Tensor[(2, 96), int8]) -> (Tensor[(5, 14, 6), bool], Tensor[(5, 14, 420), uint64], Tensor[(2688), int32], Tensor[(8), int8], Tensor[(2, 96), int8], Tensor[(5, 14, 7), bool], Tensor[(5, 14, 7), float64], Tensor[(5, 14, 2688), uint64]) {
  %628 = cast(meta[relay.Constant][29] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %629 = reshape(%628, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), float32] */;
  %630 = @func_3215(%629) /* ty=(Tensor[(5, 14, 6), bool],) */;
  %631 = @func_4759() /* ty=(Tensor[(1470), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %632 = %631.2;
  %633 = cast(meta[relay.Constant][29] /* ty=Tensor[(420), float32] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %634 = cast(%632, dtype="uint64") /* ty=Tensor[(5, 14, 1), uint64] */;
  %635 = cast(meta[relay.Constant][30] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %636 = reshape(%635, newshape=[2688]) /* ty=Tensor[(2688), int32] */;
  %637 = @func_4155(%636) /* ty=(Tensor[(5, 14, ?), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), int32]) */;
  %638 = cast(%632, dtype="int16") /* ty=Tensor[(5, 14, 1), int16] */;
  %639 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 14, 7), float64] */, dtype="int16") /* ty=Tensor[(5, 14, 7), int16] */;
  %640 = left_shift(%638, %639) /* ty=Tensor[(5, 14, 7), int16] */;
  %641 = cast(%var_8612, dtype="int8") /* ty=Tensor[(8), int8] */;
  %642 = cast(%var_8613, dtype="int8") /* ty=Tensor[(2, 96), int8] */;
  %643 = reshape(%641, newshape=[8]) /* ty=Tensor[(8), int8] */;
  %644 = reshape(%642, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %645 = @func_5052(%643, %644) /* ty=(Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 1), float64], Tensor[(8), int8], Tensor[(192), int8]) */;
  %646 = %645.2;
  %647 = cast(%640, dtype="bool") /* ty=Tensor[(5, 14, 7), bool] */;
  %648 = cast(%646, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %649 = cast(%640, dtype="float64") /* ty=Tensor[(5, 14, 7), float64] */;
  %650 = cast(meta[relay.Constant][30] /* ty=Tensor[(2688), int32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %651 = log10(%650) /* ty=Tensor[(2688), float32] */;
  %652 = cast(%651, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %653 = log2(%652) /* ty=Tensor[(2688), float64] */;
  %654 = cast(%var_8612, dtype="int8") /* ty=Tensor[(8), int8] */;
  %655 = cast(%var_8613, dtype="int8") /* ty=Tensor[(2, 96), int8] */;
  %656 = reshape(%654, newshape=[1, 1, 8]) /* ty=Tensor[(1, 1, 8), int8] */;
  %657 = reshape(%655, newshape=[8, 3, 8]) /* ty=Tensor[(8, 3, 8), int8] */;
  %658 = @func_4682(%656, %657) /* ty=(Tensor[(8, 3, 8), bool], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %659 = %658.1;
  %660 = cast(%653, dtype="uint64") /* ty=Tensor[(2688), uint64] */;
  %661 = cast(%659, dtype="uint64") /* ty=Tensor[(5, 14, 1), uint64] */;
  %662 = %630.0;
  %663 = multiply(%633, %634) /* ty=Tensor[(5, 14, 420), uint64] */;
  %664 = %637.2;
  %665 = equal(%647, %648) /* ty=Tensor[(5, 14, 7), bool] */;
  %666 = asin(%649) /* ty=Tensor[(5, 14, 7), float64] */;
  %667 = left_shift(%660, %661) /* ty=Tensor[(5, 14, 2688), uint64] */;
  (%662, %663, %664, %var_8612, %var_8613, %665, %666, %667)
}

def @func_5616() -> (Tensor[(5, 14, 1), float32],) {
  %668 = @func_3362() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %669 = %668.0;
  (%669,)
}

def @func_7088(%var_7071: Tensor[(286, 6), int32], %var_7072: float64) -> (Tensor[(5, 14, 1), float64], Tensor[(4, 4, 13), float64], Tensor[(286, 6), int32], float64, Tensor[(756), float64], Tensor[(1, 208), bool], Tensor[(1470), float32]) {
  %670 = cast(%var_7071, dtype="int32") /* ty=Tensor[(286, 6), int32] */;
  %671 = cast(%var_7072, dtype="float64") /* ty=float64 */;
  %672 = cast(meta[relay.Constant][32] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %673 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 208), bool] */, dtype="bool") /* ty=Tensor[(1, 208), bool] */;
  %674 = reshape(%670, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), int32] */;
  %675 = reshape(%671, newshape=[]) /* ty=float64 */;
  %676 = reshape(%672, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %677 = reshape(%673, newshape=[104, 2]) /* ty=Tensor[(104, 2), bool] */;
  %678 = @func_1247(%674, %675, %676, %677) /* ty=(Tensor[(11, 12, 13), bool], float64, Tensor[(720), int16], float64, Tensor[(756), float64], Tensor[(208), float64], Tensor[(1470), float32], Tensor[(104, 2), bool], Tensor[(4, 4, 13), float64], Tensor[(4, 4, 13), bool], Tensor[(9, 6, 14), float64], Tensor[(4, 4, 13), bool]) */;
  %679 = @func_4643() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1, 208), bool]) */;
  %680 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
  %681 = %678.8;
  %682 = %679.1;
  (%680, %681, %var_7071, %var_7072, meta[relay.Constant][32] /* ty=Tensor[(756), float64] */, meta[relay.Constant][33] /* ty=Tensor[(1, 208), bool] */, %682)
}

def @func_5488() -> (Tensor[(5, 14, ?), bool], Tensor[(5, 14, ?), float32], Tensor[(5, 14, 1), float32]) {
  %683 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %684 = %683.0;
  %685 = @func_2795() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %686 = %685.0;
  %687 = cast(%686, dtype="uint8") /* ty=Tensor[(5, 14, 1), uint8] */;
  %688 = shape_of(%684, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%684, dtype="uint8") /* ty=Tensor[(5, 14, 1), uint8] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %691 = maximum(%689, %690) /* ty=Tensor[(5, 14, ?), uint8] */;
  %692 = @func_4449() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %693 = %692.1;
  %694 = cast(%693, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %695 = shape_of(%691, dtype="int32") /* ty=Tensor[(3), int32] */;
  %696 = cast(%691, dtype="float32") /* ty=Tensor[(5, 14, ?), float32] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %698 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %699 = @func_4104() /* ty=Tensor[(5, 14, ?), bool] */;
  %700 = power(%696, %697) /* ty=Tensor[(5, 14, ?), float32] */;
  %701 = %698.0;
  (%699, %700, %701)
}

def @func_2943(%var_2875: Tensor[(208), bool]) -> (Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(12, 2, 3), bool], uint16, Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool]) {
  %702 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %703 = cast(meta[relay.Constant][34] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %704 = cast(%var_2875, dtype="bool") /* ty=Tensor[(208), bool] */;
  %705 = reshape(%703, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %706 = reshape(%704, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), bool] */;
  %707 = @func_941(%705, %706) /* ty=(Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) */;
  %708 = cast(meta[relay.Constant][35] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %709 = %707.8;
  %710 = cast(%709, dtype="uint16") /* ty=Tensor[(12, 2, 3), uint16] */;
  %711 = reshape(%708, newshape=[]) /* ty=uint16 */;
  %712 = reshape(%710, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), uint16] */;
  %713 = @func_490(%711, %712) /* ty=(Tensor[(12, 2, 3), bool],) */;
  %714 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %715 = cast(meta[relay.Constant][35] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %716 = %713.0;
  %717 = cast(%716, dtype="uint16") /* ty=Tensor[(12, 2, 3), uint16] */;
  %718 = reshape(%715, newshape=[]) /* ty=uint16 */;
  %719 = reshape(%717, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), uint16] */;
  %720 = @func_490(%718, %719) /* ty=(Tensor[(12, 2, 3), bool],) */;
  %721 = %702.0;
  %722 = %714.0;
  %723 = %720.0;
  (%721, %709, meta[relay.Constant][34] /* ty=Tensor[(1470), float32] */, %var_2875, %716, meta[relay.Constant][35] /* ty=uint16 */, %722, %723)
}

def @func_2795() -> (Tensor[(5, 14, 1), float32],) {
  %724 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %725 = %724.0;
  (%725,)
}

def @func_2975() -> Tensor[(5, 14, 1), float64] {
  %726 = @func_2758() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %727 = %726.0;
  %728 = cast(%727, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
  erf(%728) /* ty=Tensor[(5, 14, 1), float64] */
}

def @func_5413() -> Tensor[(5, 14, 1), float32] {
  %729 = @func_2795() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %729.0
}

def @func_4244() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) {
  %730 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %731 = @func_2758() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %732 = %730.0;
  %733 = %731.0;
  %734 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
  (%732, %733, %734)
}

def @func_5544() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
  %735 = @func_5316() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %736 = %735.0;
  %737 = @func_3948() /* ty=Tensor[(5, 14, 1), float64] */;
  (%736, %737)
}

def @func_2584() -> (Tensor[(5, 14, 1), float32],) {
  %738 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 14, 1), float32] */, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %739 = exp(%738) /* ty=Tensor[(5, 14, 1), float32] */;
  (%739,)
}

def @func_3047(%var_3033: float32, %var_3034: Tensor[(7, 2, 1), float32]) -> Tensor[(7, 2, 1), float32] {
  %740 = cast(%var_3033, dtype="float32") /* ty=float32 */;
  %741 = cast(%var_3034, dtype="float32") /* ty=Tensor[(7, 2, 1), float32] */;
  mod(%740, %741) /* ty=Tensor[(7, 2, 1), float32] */
}

def @func_1155(%var_1135: Tensor[(9, 6, 14), float64], %var_1136: Tensor[(9, 6, 14), float64]) -> (Tensor[(9, 6, 14), float64],) {
  %742 = cast(%var_1136, dtype="float64") /* ty=Tensor[(9, 6, 14), float64] */;
  %743 = shape_of(%var_1135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%var_1135, dtype="float64") /* ty=Tensor[(9, 6, 14), float64] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %746 = power(%744, %745) /* ty=Tensor[(9, 6, 14), float64] */;
  (%746,)
}

def @func_1358(%var_1350: Tensor[(13, 15, 11), bool], %var_1351: Tensor[(13, 15, 11), bool]) -> Tensor[(13, 15, 11), bool] {
  %747 = cast(%var_1351, dtype="bool") /* ty=Tensor[(13, 15, 11), bool] */;
  %748 = shape_of(%var_1350, dtype="int32") /* ty=Tensor[(3), int32] */;
  %749 = cast(%var_1350, dtype="bool") /* ty=Tensor[(13, 15, 11), bool] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%749, %750) /* ty=Tensor[(13, 15, 11), bool] */
}

def @func_5052(%var_5040: Tensor[(8), int8], %var_5041: Tensor[(192), int8]) -> (Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 1), float64], Tensor[(8), int8], Tensor[(192), int8]) {
  %751 = @func_4320() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %752 = %751.0;
  %753 = cast(%752, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
  %754 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 14, 13), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 13), float64] */;
  %755 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 14, 13), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 13), float64] */;
  %756 = cast(meta[relay.Constant][38] /* ty=Tensor[(429), float32] */, dtype="float32") /* ty=Tensor[(429), float32] */;
  %757 = reshape(%756, newshape=[429]) /* ty=Tensor[(429), float32] */;
  %758 = @func_3535(%757) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(429), float32]) */;
  %759 = cast(%var_5040, dtype="int8") /* ty=Tensor[(8), int8] */;
  %760 = cast(%var_5041, dtype="int8") /* ty=Tensor[(192), int8] */;
  %761 = reshape(%759, newshape=[1, 1, 8]) /* ty=Tensor[(1, 1, 8), int8] */;
  %762 = reshape(%760, newshape=[8, 3, 8]) /* ty=Tensor[(8, 3, 8), int8] */;
  %763 = @func_4682(%761, %762) /* ty=(Tensor[(8, 3, 8), bool], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %764 = floor_divide(%753, %754) /* ty=Tensor[(5, 14, 13), float64] */;
  %765 = sinh(%755) /* ty=Tensor[(5, 14, 13), float64] */;
  %766 = @func_3948() /* ty=Tensor[(5, 14, 1), float64] */;
  %767 = %758.2;
  %768 = %763.2;
  (%764, %765, %766, %767, meta[relay.Constant][38] /* ty=Tensor[(429), float32] */, %768, %var_5040, %var_5041)
}

def @func_5251(%var_5222: Tensor[(192), int8], %var_5231: Tensor[(120), float64], %var_5244: Tensor[(208), bool]) -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(8), int8], Tensor[(192), int8], Tensor[(1, 120), float64], Tensor[(224), float32], Tensor[(120), float64], Tensor[(5, 14, 1), float32], float64, Tensor[(1470), float32], Tensor[(208), bool]) {
  %769 = @func_3706() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */;
  %770 = cast(meta[relay.Constant][39] /* ty=Tensor[(8), int8] */, dtype="int8") /* ty=Tensor[(8), int8] */;
  %771 = cast(%var_5222, dtype="int8") /* ty=Tensor[(192), int8] */;
  %772 = reshape(%770, newshape=[1, 1, 8]) /* ty=Tensor[(1, 1, 8), int8] */;
  %773 = reshape(%771, newshape=[8, 3, 8]) /* ty=Tensor[(8, 3, 8), int8] */;
  %774 = @func_4682(%772, %773) /* ty=(Tensor[(8, 3, 8), bool], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %775 = cast(meta[relay.Constant][40] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %776 = cast(%var_5231, dtype="float64") /* ty=Tensor[(120), float64] */;
  %777 = reshape(%775, newshape=[2, 8, 14]) /* ty=Tensor[(2, 8, 14), float32] */;
  %778 = reshape(%776, newshape=[1, 120]) /* ty=Tensor[(1, 120), float64] */;
  %779 = @func_2254(%777, %778) /* ty=(Tensor[(15, 1, 8), float64], Tensor[(1, 120), float64], Tensor[(2, 8, 14), uint64]) */;
  %780 = @func_4936() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %781 = cast(meta[relay.Constant][41] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %782 = cast(%var_5244, dtype="bool") /* ty=Tensor[(208), bool] */;
  %783 = reshape(%781, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %784 = reshape(%782, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), bool] */;
  %785 = @func_941(%783, %784) /* ty=(Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) */;
  %786 = %769.1;
  %787 = %774.2;
  %788 = %779.1;
  %789 = %780.0;
  %790 = %785.1;
  (%786, %787, meta[relay.Constant][39] /* ty=Tensor[(8), int8] */, %var_5222, %788, meta[relay.Constant][40] /* ty=Tensor[(224), float32] */, %var_5231, %789, %790, meta[relay.Constant][41] /* ty=Tensor[(1470), float32] */, %var_5244)
}

def @func_4449() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
  %791 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %792 = @func_4320() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %793 = %791.0;
  %794 = %792.0;
  (%793, %794)
}

def @func_3948() -> Tensor[(5, 14, 1), float64] {
  %795 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %795.0
}

def @func_4949() -> (Tensor[(5, 14, 1), float32],) {
  %796 = @func_3093() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %797 = %796.1;
  (%797,)
}

def @func_6226(%var_6221: Tensor[(5, 14, 11), float32]) -> (Tensor[(5, 14, 11), bool],) {
  %798 = @func_4643() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1, 208), bool]) */;
  %799 = %798.0;
  %800 = cast(%799, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %801 = cast(%var_6221, dtype="bool") /* ty=Tensor[(5, 14, 11), bool] */;
  %802 = logical_and(%800, %801) /* ty=Tensor[(5, 14, 11), bool] */;
  (%802,)
}

def @func_6372(%var_6344: Tensor[(5, 14, 7), float32]) -> Tensor[(5, 14, 7), float32] {
  %803 = @func_4949() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %804 = %803.0;
  %805 = cast(%804, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %806 = cast(%var_6344, dtype="bool") /* ty=Tensor[(5, 14, 7), bool] */;
  %807 = less_equal(%805, %806) /* ty=Tensor[(5, 14, 7), bool] */;
  %808 = cast(%807, dtype="float32") /* ty=Tensor[(5, 14, 7), float32] */;
  sqrt(%808) /* ty=Tensor[(5, 14, 7), float32] */
}

def @func_5945() -> (Tensor[(5, 14, 1), float64],) {
  %809 = @func_4379() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %810 = %809.0;
  (%810,)
}

def @func_3920() -> Tensor[(5, 14, 1), float64] {
  %811 = @func_3706() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */;
  %811.0
}

def @func_4493(%var_4476: Tensor[(756), float64]) -> (Tensor[(5, 14, 1), float32], Tensor[(210, 2), float32], Tensor[(9, 6, 14), float64], Tensor[(756), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 429), float32]) {
  %812 = cast(meta[relay.Constant][42] /* ty=Tensor[(429), float32] */, dtype="float32") /* ty=Tensor[(429), float32] */;
  %813 = cast(meta[relay.Constant][43] /* ty=Tensor[(210, 2), float32] */, dtype="float32") /* ty=Tensor[(210, 2), float32] */;
  %814 = reshape(%812, newshape=[429]) /* ty=Tensor[(429), float32] */;
  %815 = reshape(%813, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %816 = @func_3755(%814, %815) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 6), bool], Tensor[(420), float32]) */;
  %817 = cast(%var_4476, dtype="float64") /* ty=Tensor[(756), float64] */;
  %818 = cast(%var_4476, dtype="float64") /* ty=Tensor[(756), float64] */;
  %819 = reshape(%817, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %820 = reshape(%818, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %821 = @func_1155(%819, %820) /* ty=(Tensor[(9, 6, 14), float64],) */;
  %822 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %823 = @func_2758() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %824 = %823.0;
  %825 = cast(%824, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %826 = cast(meta[relay.Constant][42] /* ty=Tensor[(429), float32] */, dtype="float32") /* ty=Tensor[(429), float32] */;
  %827 = %816.1;
  %828 = %821.0;
  %829 = %822.0;
  %830 = divide(%825, %826) /* ty=Tensor[(5, 14, 429), float32] */;
  (%827, meta[relay.Constant][43] /* ty=Tensor[(210, 2), float32] */, %828, %var_4476, %829, %830)
}

def @func_5368(%var_5319: int64, %var_5320: Tensor[(4, 10, 10), int64]) -> (Tensor[(4, 10, 10), int64], Tensor[(4, 10, 10), bool], Tensor[(2688), int32], Tensor[(2688), int32]) {
  %831 = cast(%var_5319, dtype="int64") /* ty=int64 */;
  %832 = cast(%var_5320, dtype="int64") /* ty=Tensor[(4, 10, 10), int64] */;
  %833 = cast(%var_5319, dtype="bool") /* ty=bool */;
  %834 = cast(%var_5320, dtype="bool") /* ty=Tensor[(4, 10, 10), bool] */;
  %835 = cast(meta[relay.Constant][44] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %836 = reshape(%835, newshape=[2688]) /* ty=Tensor[(2688), int32] */;
  %837 = @func_4155(%836) /* ty=(Tensor[(5, 14, ?), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), int32]) */;
  %838 = bitwise_and(%831, %832) /* ty=Tensor[(4, 10, 10), int64] */;
  %839 = greater_equal(%833, %834) /* ty=Tensor[(4, 10, 10), bool] */;
  %840 = %837.2;
  (%838, %839, %840, meta[relay.Constant][44] /* ty=Tensor[(2688), int32] */)
}

def @func_3969() -> (Tensor[(5, 14, 1), float64],) {
  %841 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %842 = %841.0;
  (%842,)
}

def @func_6633() -> Tensor[(5, 14, ?), bool] {
  @func_4104() /* ty=Tensor[(5, 14, ?), bool] */
}

def @func_4917(%var_4895: uint16, %var_4896: Tensor[(72), uint16], %var_4897: Tensor[(429, 1), float32], %var_4906: Tensor[(429), float32]) -> (Tensor[(5, 14, 1), float64], Tensor[(120), float64], uint16, Tensor[(72), uint16], Tensor[(429, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(429), float64]) {
  %843 = @func_4449() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %844 = cast(%var_4897, dtype="float32") /* ty=Tensor[(429, 1), float32] */;
  %845 = reshape(%844, newshape=[39, 11]) /* ty=Tensor[(39, 11), float32] */;
  %846 = @func_3882(%845) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(39, 11), float32], Tensor[(5, 14, 1), float32]) */;
  %847 = cast(meta[relay.Constant][45] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %848 = cast(%var_4895, dtype="uint16") /* ty=uint16 */;
  %849 = cast(%var_4896, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %850 = cast(%var_4897, dtype="float32") /* ty=Tensor[(429, 1), float32] */;
  %851 = reshape(%847, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %852 = reshape(%848, newshape=[]) /* ty=uint16 */;
  %853 = reshape(%849, newshape=[72]) /* ty=Tensor[(72), uint16] */;
  %854 = reshape(%850, newshape=[429]) /* ty=Tensor[(429), float32] */;
  %855 = @func_2709(%851, %852, %853, %854) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(15, 1, 8), float64], Tensor[(120), float64], Tensor[(12, 2, 3), bool], uint16, Tensor[(72), uint16], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(72, 1), uint16], Tensor[(360, 2), int16], Tensor[(15, 1, 8), float64]) */;
  %856 = %855.7;
  %857 = cast(%var_4906, dtype="float64") /* ty=Tensor[(429), float64] */;
  %858 = shape_of(%856, dtype="int32") /* ty=Tensor[(1), int32] */;
  %859 = cast(%856, dtype="float64") /* ty=Tensor[(429), float64] */;
  %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?), float64] */;
  %861 = %843.0;
  %862 = %846.3;
  %863 = divide(%859, %860) /* ty=Tensor[(429), float64] */;
  (%861, meta[relay.Constant][45] /* ty=Tensor[(120), float64] */, %var_4895, %var_4896, %var_4897, %862, %863)
}

def @func_2054(%var_2012: Tensor[(1, 12, 2), uint64], %var_2013: Tensor[(3, 12, 2), uint64], %var_2019: Tensor[(1470), float32], %var_2020: Tensor[(208), bool], %var_2042: Tensor[(720), int16], %var_2043: float64) -> (Tensor[(3, 12, 2), bool], Tensor[(1470), float32], Tensor[(4, 4, 13), int8], Tensor[(12, 4, 15), int16], Tensor[(720), int16], float64) {
  %864 = cast(%var_2012, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
  %865 = cast(%var_2013, dtype="bool") /* ty=Tensor[(3, 12, 2), bool] */;
  %866 = cast(%var_2019, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %867 = cast(%var_2020, dtype="bool") /* ty=Tensor[(208), bool] */;
  %868 = reshape(%866, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %869 = reshape(%867, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), bool] */;
  %870 = @func_941(%868, %869) /* ty=(Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) */;
  %871 = %870.6;
  %872 = cast(%var_2020, dtype="int8") /* ty=Tensor[(208), int8] */;
  %873 = shape_of(%871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(%871, dtype="int8") /* ty=Tensor[(4, 4, 13), int8] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %876 = cast(%var_2042, dtype="int16") /* ty=Tensor[(720), int16] */;
  %877 = cast(%var_2042, dtype="int16") /* ty=Tensor[(720), int16] */;
  %878 = cast(%var_2043, dtype="float64") /* ty=float64 */;
  %879 = reshape(%876, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %880 = reshape(%877, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %881 = reshape(%878, newshape=[]) /* ty=float64 */;
  %882 = @func_868(%879, %880, %881) /* ty=(Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) */;
  %883 = greater_equal(%864, %865) /* ty=Tensor[(3, 12, 2), bool] */;
  %884 = add(%874, %875) /* ty=Tensor[(4, 4, 13), int8] */;
  %885 = %882.0;
  (%883, %var_2019, %884, %885, %var_2042, %var_2043)
}

def @func_7781() -> (Tensor[(120), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) {
  %886 = @func_7555() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(15, 1, 8), float64], Tensor[(120), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %887 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %888 = @func_2758() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %889 = @func_7555() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(15, 1, 8), float64], Tensor[(120), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %890 = %886.2;
  %891 = %887.0;
  %892 = %888.0;
  %893 = %889.3;
  (%890, %891, %892, %893)
}

def @func_868(%var_843: Tensor[(12, 4, 15), int16], %var_844: Tensor[(12, 4, 15), int16], %var_849: float64) -> (Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) {
  %894 = cast(%var_844, dtype="int16") /* ty=Tensor[(12, 4, 15), int16] */;
  %895 = shape_of(%var_843, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(%var_843, dtype="int16") /* ty=Tensor[(12, 4, 15), int16] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %898 = cast(%var_849, dtype="float64") /* ty=float64 */;
  %899 = cast(meta[relay.Constant][46] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %900 = reshape(%898, newshape=[]) /* ty=float64 */;
  %901 = reshape(%899, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), float64] */;
  %902 = @func_288(%900, %901) /* ty=(Tensor[(4, 4, 13), bool],) */;
  %903 = cast(%var_849, dtype="uint16") /* ty=uint16 */;
  %904 = cast(meta[relay.Constant][47] /* ty=Tensor[(72, 1), uint16] */, dtype="uint16") /* ty=Tensor[(72, 1), uint16] */;
  %905 = reshape(%903, newshape=[]) /* ty=uint16 */;
  %906 = reshape(%904, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), uint16] */;
  %907 = @func_490(%905, %906) /* ty=(Tensor[(12, 2, 3), bool],) */;
  %908 = bitwise_and(%896, %897) /* ty=Tensor[(12, 4, 15), int16] */;
  %909 = %902.0;
  %910 = %907.0;
  (%908, %909, %var_849, meta[relay.Constant][46] /* ty=Tensor[(208), float64] */, %910, meta[relay.Constant][47] /* ty=Tensor[(72, 1), uint16] */)
}

def @func_4155(%var_4152: Tensor[(2688), int32]) -> (Tensor[(5, 14, ?), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), int32]) {
  %911 = @func_3093() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %912 = %911.1;
  %913 = cast(%912, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %914 = rsqrt(%913) /* ty=Tensor[(5, 14, 1), float32] */;
  %915 = cast(%914, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %916 = shape_of(%912, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(%912, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %919 = cast(%var_4152, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %920 = reshape(%919, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), int32] */;
  %921 = @func_4033(%920) /* ty=(Tensor[(12, 16, 14), bool], Tensor[(12, 16, 14), float32]) */;
  %922 = floor_divide(%917, %918) /* ty=Tensor[(5, 14, ?), float32] */;
  %923 = %921.1;
  (%922, %923, %var_4152)
}

def @func_3316(%var_3292: Tensor[(5, 14, 5), float64], %var_3305: Tensor[(1470), float32], %var_3306: Tensor[(208), bool]) -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 5), int64], Tensor[(720), int16], Tensor[(1470), float32], Tensor[(208), bool]) {
  %924 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %925 = @func_2795() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %926 = %925.0;
  %927 = cast(%926, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
  %928 = sigmoid(%927) /* ty=Tensor[(5, 14, 1), float64] */;
  %929 = cast(%928, dtype="int64") /* ty=Tensor[(5, 14, 1), int64] */;
  %930 = cast(%var_3292, dtype="int64") /* ty=Tensor[(5, 14, 5), int64] */;
  %931 = cast(%var_3305, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %932 = cast(%var_3306, dtype="bool") /* ty=Tensor[(208), bool] */;
  %933 = reshape(%931, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %934 = reshape(%932, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), bool] */;
  %935 = @func_941(%933, %934) /* ty=(Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) */;
  %936 = %924.0;
  %937 = left_shift(%929, %930) /* ty=Tensor[(5, 14, 5), int64] */;
  %938 = %935.4;
  (%936, %937, %938, %var_3305, %var_3306)
}

def @func_2314(%var_2290: Tensor[(14, 16, 10), float64], %var_2298: Tensor[(14, 16, 10), float64]) -> (Tensor[(14, 16, 10), float64], Tensor[(14, 16, 10), int32], Tensor[(15, 1, 8), float64], Tensor[(120), float64]) {
  %939 = cast(%var_2290, dtype="float64") /* ty=Tensor[(14, 16, 10), float64] */;
  %940 = cast(%var_2298, dtype="int32") /* ty=Tensor[(14, 16, 10), int32] */;
  %941 = shape_of(%var_2290, dtype="int32") /* ty=Tensor[(3), int32] */;
  %942 = cast(%var_2290, dtype="int32") /* ty=Tensor[(14, 16, 10), int32] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %944 = cast(meta[relay.Constant][48] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %945 = reshape(%944, newshape=[15, 1, 8]) /* ty=Tensor[(15, 1, 8), float64] */;
  %946 = @func_1402(%945) /* ty=(Tensor[(15, 1, 8), float64],) */;
  %947 = acos(%939) /* ty=Tensor[(14, 16, 10), float64] */;
  %948 = multiply(%942, %943) /* ty=Tensor[(14, 16, 10), int32] */;
  %949 = %946.0;
  (%947, %948, %949, meta[relay.Constant][48] /* ty=Tensor[(120), float64] */)
}

def @func_6396() -> (Tensor[(5, 14, 1), float64],) {
  %950 = @func_4837() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %951 = %950.0;
  (%951,)
}

def @func_4320() -> (Tensor[(5, 14, 1), float64],) {
  %952 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %953 = %952.0;
  (%953,)
}

def @func_7799() -> Tensor[(5, 14, 1), float32] {
  %954 = @func_7601() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %954.0
}

def @func_5907() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) {
  %955 = @func_4837() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %956 = @func_4949() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %957 = %955.0;
  %958 = %956.0;
  (%957, %958)
}

def @func_4837() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
  %959 = @func_3969() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %960 = @func_4759() /* ty=(Tensor[(1470), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %961 = %959.0;
  %962 = %960.2;
  (%961, %962)
}

def @func_4936() -> (Tensor[(5, 14, 1), float32],) {
  %963 = @func_3706() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */;
  %964 = %963.1;
  (%964,)
}

def @func_8066(%var_8005: Tensor[(2688), int32], %var_8027: float64, %var_8028: Tensor[(490), float32], %var_8063: Tensor[(2145), bool]) -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 11), float32], Tensor[(5, 14, 1), float64], Tensor[(12, 16, 14), float32], Tensor[(7, 11, 15), bool], Tensor[(1, 720), int16], float64, Tensor[(490), float32], Tensor[(1155), uint8], float64, Tensor[(22, 78), int32], Tensor[(756), float64], Tensor[(52, 4), bool], Tensor[(13, 15, 11), bool], Tensor[(2145), bool]) {
  %965 = @func_4837() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %966 = @func_7265() /* ty=(Tensor[(5, 14, 8), int64], Tensor[(5, 14, 11), float32], Tensor[(770), float32]) */;
  %967 = @func_6396() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %968 = cast(%var_8005, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %969 = reshape(%968, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), int32] */;
  %970 = @func_4033(%969) /* ty=(Tensor[(12, 16, 14), bool], Tensor[(12, 16, 14), float32]) */;
  %971 = %970.0;
  %972 = cast(%var_8005, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %973 = shape_of(%971, dtype="int32") /* ty=Tensor[(3), int32] */;
  %974 = cast(%971, dtype="float32") /* ty=Tensor[(12, 16, 14), float32] */;
  %975 = dyn.reshape(%972, %973, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %976 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 720), int16] */, dtype="int16") /* ty=Tensor[(1, 720), int16] */;
  %977 = cast(%var_8027, dtype="float64") /* ty=float64 */;
  %978 = cast(%var_8028, dtype="float32") /* ty=Tensor[(490), float32] */;
  %979 = cast(meta[relay.Constant][50] /* ty=Tensor[(1155), uint8] */, dtype="uint8") /* ty=Tensor[(1155), uint8] */;
  %980 = reshape(%976, newshape=[720]) /* ty=Tensor[(720), int16] */;
  %981 = reshape(%977, newshape=[]) /* ty=float64 */;
  %982 = reshape(%978, newshape=[5, 14, 7]) /* ty=Tensor[(5, 14, 7), float32] */;
  %983 = reshape(%979, newshape=[1155]) /* ty=Tensor[(1155), uint8] */;
  %984 = @func_6333(%980, %981, %982, %983) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(208), float64], Tensor[(720), int16], float64, Tensor[(5, 14, ?), bool], Tensor[(5, 14, 6), bool], Tensor[(429), float32], Tensor[(420), float32], Tensor[(5, 14, 7), bool], Tensor[(7, 11, 15), bool], Tensor[(1155), uint8]) */;
  %985 = cast(meta[relay.Constant][51] /* ty=Tensor[(22, 78), int32] */, dtype="int32") /* ty=Tensor[(22, 78), int32] */;
  %986 = cast(%var_8027, dtype="float64") /* ty=float64 */;
  %987 = cast(meta[relay.Constant][52] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %988 = cast(meta[relay.Constant][53] /* ty=Tensor[(52, 4), bool] */, dtype="bool") /* ty=Tensor[(52, 4), bool] */;
  %989 = reshape(%985, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), int32] */;
  %990 = reshape(%986, newshape=[]) /* ty=float64 */;
  %991 = reshape(%987, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %992 = reshape(%988, newshape=[104, 2]) /* ty=Tensor[(104, 2), bool] */;
  %993 = @func_1247(%989, %990, %991, %992) /* ty=(Tensor[(11, 12, 13), bool], float64, Tensor[(720), int16], float64, Tensor[(756), float64], Tensor[(208), float64], Tensor[(1470), float32], Tensor[(104, 2), bool], Tensor[(4, 4, 13), float64], Tensor[(4, 4, 13), bool], Tensor[(9, 6, 14), float64], Tensor[(4, 4, 13), bool]) */;
  %994 = cast(%var_8063, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %995 = cast(%var_8063, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %996 = reshape(%994, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), bool] */;
  %997 = reshape(%995, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), bool] */;
  %998 = @func_6741() /* ty=Tensor[(5, 14, 1), float32] */;
  %999 = %965.1;
  %1000 = %966.1;
  %1001 = %967.0;
  %1002 = floor_divide(%974, %975) /* ty=Tensor[(12, 16, 14), float32] */;
  %1003 = %984.10;
  %1004 = %993.1;
  %1005 = @func_1358(%996, %997) /* ty=Tensor[(13, 15, 11), bool] */;
  (%998, %999, %1000, %1001, %1002, %1003, meta[relay.Constant][49] /* ty=Tensor[(1, 720), int16] */, %var_8027, %var_8028, meta[relay.Constant][50] /* ty=Tensor[(1155), uint8] */, %1004, meta[relay.Constant][51] /* ty=Tensor[(22, 78), int32] */, meta[relay.Constant][52] /* ty=Tensor[(756), float64] */, meta[relay.Constant][53] /* ty=Tensor[(52, 4), bool] */, %1005, %var_8063)
}

def @func_8397(%var_8364: Tensor[(5, 14, 6), bool]) -> (Tensor[(5, 14, 1), float64], Tensor[(420), float32], Tensor[(5, 14, 6), bool]) {
  %1006 = @func_4793() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
  %1007 = cast(meta[relay.Constant][54] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1008 = reshape(%1007, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), float32] */;
  %1009 = @func_3215(%1008) /* ty=(Tensor[(5, 14, 6), bool],) */;
  %1010 = %1009.0;
  %1011 = cast(%var_8364, dtype="bool") /* ty=Tensor[(5, 14, 6), bool] */;
  %1012 = shape_of(%1010, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1013 = cast(%1010, dtype="bool") /* ty=Tensor[(5, 14, 6), bool] */;
  %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1015 = %1006.1;
  %1016 = logical_or(%1013, %1014) /* ty=Tensor[(5, 14, 6), bool] */;
  (%1015, meta[relay.Constant][54] /* ty=Tensor[(420), float32] */, %1016)
}

def @func_4759() -> (Tensor[(1470), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
  %1017 = @func_4643() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1, 208), bool]) */;
  %1018 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %1019 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %1020 = %1017.1;
  %1021 = %1018.0;
  %1022 = %1019.0;
  (%1020, %1021, %1022)
}

def @func_6087(%var_6023: Tensor[(5, 14, 16), float64], %var_6033: Tensor[(756, 1), float64], %var_6041: Tensor[(72), uint64], %var_6043: Tensor[(208), bool], %var_6044: Tensor[(720), int16], %var_6045: float64, %var_6069: Tensor[(420), float32], %var_6080: Tensor[(429), float32]) -> (Tensor[(5, 14, 16), uint32], Tensor[(5, 14, 1), float32], Tensor[(720), int16], Tensor[(24), uint64], Tensor[(72), uint64], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(720), int16], float64, Tensor[(9, 6, 14), bool], Tensor[(5, 14, 6), bool], Tensor[(420), float32], Tensor[(5, 14, 1), float32], Tensor[(429), float32]) {
  %1023 = @func_4244() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
  %1024 = %1023.2;
  %1025 = cast(%1024, dtype="uint32") /* ty=Tensor[(5, 14, 1), uint32] */;
  %1026 = cast(%var_6023, dtype="uint32") /* ty=Tensor[(5, 14, 16), uint32] */;
  %1027 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %1028 = cast(meta[relay.Constant][55] /* ty=Tensor[(24), uint64] */, dtype="uint64") /* ty=Tensor[(24), uint64] */;
  %1029 = cast(%var_6041, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %1030 = cast(meta[relay.Constant][56] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1031 = cast(%var_6043, dtype="bool") /* ty=Tensor[(208), bool] */;
  %1032 = cast(%var_6044, dtype="int16") /* ty=Tensor[(720), int16] */;
  %1033 = cast(%var_6045, dtype="float64") /* ty=float64 */;
  %1034 = reshape(%1028, newshape=[1, 12, 2]) /* ty=Tensor[(1, 12, 2), uint64] */;
  %1035 = reshape(%1029, newshape=[3, 12, 2]) /* ty=Tensor[(3, 12, 2), uint64] */;
  %1036 = reshape(%1030, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %1037 = reshape(%1031, newshape=[208]) /* ty=Tensor[(208), bool] */;
  %1038 = reshape(%1032, newshape=[720]) /* ty=Tensor[(720), int16] */;
  %1039 = reshape(%1033, newshape=[]) /* ty=float64 */;
  %1040 = @func_2054(%1034, %1035, %1036, %1037, %1038, %1039) /* ty=(Tensor[(3, 12, 2), bool], Tensor[(1470), float32], Tensor[(4, 4, 13), int8], Tensor[(12, 4, 15), int16], Tensor[(720), int16], float64) */;
  %1041 = cast(%var_6033, dtype="float64") /* ty=Tensor[(756, 1), float64] */;
  %1042 = reshape(%1041, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %1043 = @func_4493(%1042) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(210, 2), float32], Tensor[(9, 6, 14), float64], Tensor[(756), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 429), float32]) */;
  %1044 = %1043.2;
  %1045 = cast(%var_6033, dtype="bool") /* ty=Tensor[(756, 1), bool] */;
  %1046 = shape_of(%1044, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1047 = cast(%1044, dtype="bool") /* ty=Tensor[(9, 6, 14), bool] */;
  %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1049 = cast(%var_6069, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1050 = reshape(%1049, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), float32] */;
  %1051 = @func_3215(%1050) /* ty=(Tensor[(5, 14, 6), bool],) */;
  %1052 = cast(%var_6080, dtype="float32") /* ty=Tensor[(429), float32] */;
  %1053 = reshape(%1052, newshape=[39, 11]) /* ty=Tensor[(39, 11), float32] */;
  %1054 = @func_3882(%1053) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(39, 11), float32], Tensor[(5, 14, 1), float32]) */;
  %1055 = bitwise_xor(%1025, %1026) /* ty=Tensor[(5, 14, 16), uint32] */;
  %1056 = %1027.0;
  %1057 = %1040.4;
  %1058 = greater_equal(%1047, %1048) /* ty=Tensor[(9, 6, 14), bool] */;
  %1059 = %1051.0;
  %1060 = %1054.3;
  (%1055, %1056, %1057, meta[relay.Constant][55] /* ty=Tensor[(24), uint64] */, %var_6041, meta[relay.Constant][56] /* ty=Tensor[(1470), float32] */, %var_6043, %var_6044, %var_6045, %1058, %1059, %var_6069, %1060, %var_6080)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5189(%var_5170: Tensor[(1, 5, 5), int16], %var_5171: Tensor[(1, 5, 5), int16]) -> (Tensor[(5, 14, 1), float64], Tensor[(?, 5, 5), float32]) {
  %0 = cast(%var_5171, dtype="int16") /* ty=Tensor[(1, 5, 5), int16] */;
  %1 = shape_of(%var_5170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_5170, dtype="int16") /* ty=Tensor[(1, 5, 5), int16] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %4 = bitwise_xor(%2, %3) /* ty=Tensor[(?, 5, 5), int16] */;
  %5 = cast(%var_5171, dtype="float32") /* ty=Tensor[(1, 5, 5), float32] */;
  %6 = shape_of(%4, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%4, dtype="float32") /* ty=Tensor[(?, 5, 5), float32] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %9 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
  %10 = mod(%7, %8) /* ty=Tensor[(?, 5, 5), float32] */;
  (%9, %10)
}

def @func_3708() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) {
  @func_3706() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */
}

def @func_3766() -> (Tensor[(5, 14, 1), float64],) {
  %11 = @func_3706() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */;
  %12 = %11.0;
  (%12,)
}

def @func_490(%var_461: uint16, %var_462: Tensor[(12, 2, 3), uint16]) -> (Tensor[(12, 2, 3), bool],) {
  %13 = cast(%var_461, dtype="bool") /* ty=bool */;
  %14 = cast(%var_462, dtype="bool") /* ty=Tensor[(12, 2, 3), bool] */;
  %15 = less_equal(%13, %14) /* ty=Tensor[(12, 2, 3), bool] */;
  (%15,)
}

def @func_5616() -> (Tensor[(5, 14, 1), float32],) {
  %16 = @func_3362() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %17 = %16.0;
  (%17,)
}

def @func_7781() -> (Tensor[(120), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) {
  %18 = @func_7555() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(15, 1, 8), float64], Tensor[(120), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %19 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %20 = @func_2758() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %21 = @func_7555() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(15, 1, 8), float64], Tensor[(120), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %22 = %18.2;
  %23 = %19.0;
  %24 = %20.0;
  %25 = %21.3;
  (%22, %23, %24, %25)
}

def @func_8510(%var_8509: Tensor[(1470), float32]) -> (Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(208), bool]) {
  %34 = fn (%var_8505: Tensor[(1470), float32]) -> (Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(208), bool]) {
    %26 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %27 = cast(%var_8505, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %28 = cast(meta[relay.Constant][0] /* ty=Tensor[(208), bool] */, dtype="bool") /* ty=Tensor[(208), bool] */;
    %29 = reshape(%27, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %30 = reshape(%28, newshape=[208]) /* ty=Tensor[(208), bool] */;
    %31 = @func_6648(%29, %30) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(720), int16], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(5, 14, 1), float32]) */;
    %32 = %26.0;
    %33 = %31.2;
    (%32, %33, %var_8505, meta[relay.Constant][0] /* ty=Tensor[(208), bool] */)
  };
  %34(%var_8509) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(208), bool]) */
}

def @func_4644() -> (Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1, 208), bool]) {
  %43 = fn () -> (Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1, 208), bool]) {
    %35 = @func_3969() /* ty=(Tensor[(5, 14, 1), float64],) */;
    %36 = %35.0;
    %37 = cast(%36, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
    %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 208), bool] */, dtype="bool") /* ty=Tensor[(1, 208), bool] */;
    %39 = reshape(%38, newshape=[208]) /* ty=Tensor[(208), bool] */;
    %40 = @func_2943(%39) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(12, 2, 3), bool], uint16, Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool]) */;
    %41 = cos(%37) /* ty=Tensor[(5, 14, 1), float32] */;
    %42 = %40.2;
    (%41, %42, meta[relay.Constant][1] /* ty=Tensor[(1, 208), bool] */)
  };
  %43() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1, 208), bool]) */
}

def @func_3364() -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) {
  @func_3362() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */
}

def @func_7092(%var_7090: Tensor[(286, 6), int32], %var_7091: float64) -> (Tensor[(5, 14, 1), float64], Tensor[(4, 4, 13), float64], Tensor[(286, 6), int32], float64, Tensor[(756), float64], Tensor[(1, 208), bool], Tensor[(1470), float32]) {
  @func_7088(%var_7090, %var_7091) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(4, 4, 13), float64], Tensor[(286, 6), int32], float64, Tensor[(756), float64], Tensor[(1, 208), bool], Tensor[(1470), float32]) */
}

def @func_8483() -> Tensor[(5, 14, 1), float32] {
  %44 = @func_3093() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %44.0
}

def @func_6333(%var_6249: Tensor[(720), int16], %var_6250: float64, %var_6310: Tensor[(5, 14, 7), float32], %var_6326: Tensor[(1155), uint8]) -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(208), float64], Tensor[(720), int16], float64, Tensor[(5, 14, ?), bool], Tensor[(5, 14, 6), bool], Tensor[(429), float32], Tensor[(420), float32], Tensor[(5, 14, 7), bool], Tensor[(7, 11, 15), bool], Tensor[(1155), uint8]) {
  %45 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %46 = cast(%var_6249, dtype="int16") /* ty=Tensor[(720), int16] */;
  %47 = cast(%var_6249, dtype="int16") /* ty=Tensor[(720), int16] */;
  %48 = cast(%var_6250, dtype="float64") /* ty=float64 */;
  %49 = reshape(%46, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %50 = reshape(%47, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %51 = reshape(%48, newshape=[]) /* ty=float64 */;
  %52 = @func_868(%49, %50, %51) /* ty=(Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) */;
  %53 = @func_4583() /* ty=(Tensor[(5, 14, ?), float32], Tensor[(5, 14, ?), bool]) */;
  %54 = cast(meta[relay.Constant][2] /* ty=Tensor[(429), float32] */, dtype="float32") /* ty=Tensor[(429), float32] */;
  %55 = cast(meta[relay.Constant][3] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %56 = reshape(%54, newshape=[429]) /* ty=Tensor[(429), float32] */;
  %57 = reshape(%55, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %58 = @func_3755(%56, %57) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 6), bool], Tensor[(420), float32]) */;
  %59 = @func_4818() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %60 = %59.0;
  %61 = cast(%60, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %62 = cast(%var_6310, dtype="bool") /* ty=Tensor[(5, 14, 7), bool] */;
  %63 = cast(%var_6326, dtype="uint8") /* ty=Tensor[(1155), uint8] */;
  %64 = cast(%var_6326, dtype="uint8") /* ty=Tensor[(1155), uint8] */;
  %65 = reshape(%63, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), uint8] */;
  %66 = reshape(%64, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), uint8] */;
  %67 = @func_4173(%65, %66) /* ty=(Tensor[(7, 11, 15), bool],) */;
  %68 = @func_5101() /* ty=Tensor[(5, 14, 1), float64] */;
  %69 = %45.0;
  %70 = %52.3;
  %71 = %53.1;
  %72 = %58.5;
  %73 = less(%61, %62) /* ty=Tensor[(5, 14, 7), bool] */;
  %74 = %67.0;
  (%68, %69, %70, %var_6249, %var_6250, %71, %72, meta[relay.Constant][2] /* ty=Tensor[(429), float32] */, meta[relay.Constant][3] /* ty=Tensor[(420), float32] */, %73, %74, %var_6326)
}

def @func_3426(%var_3425: Tensor[(8, 13, 3), int16]) -> (Tensor[(8, 13, 3), float64], Tensor[(5, 14, 6), bool], Tensor[(420), float32]) {
  %86 = fn (%var_3404: Tensor[(8, 13, 3), int16]) -> (Tensor[(8, 13, 3), float64], Tensor[(5, 14, 6), bool], Tensor[(420), float32]) {
    %75 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 13, 3), int16] */, dtype="int16") /* ty=Tensor[(8, 13, 3), int16] */;
    %76 = shape_of(%var_3404, dtype="int32") /* ty=Tensor[(3), int32] */;
    %77 = cast(%var_3404, dtype="int16") /* ty=Tensor[(8, 13, 3), int16] */;
    %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %79 = minimum(%77, %78) /* ty=Tensor[(8, 13, 3), int16] */;
    %80 = cast(%79, dtype="float64") /* ty=Tensor[(8, 13, 3), float64] */;
    %81 = cast(meta[relay.Constant][5] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
    %82 = reshape(%81, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), float32] */;
    %83 = @func_3215(%82) /* ty=(Tensor[(5, 14, 6), bool],) */;
    %84 = acosh(%80) /* ty=Tensor[(8, 13, 3), float64] */;
    %85 = %83.0;
    (%84, %85, meta[relay.Constant][5] /* ty=Tensor[(420), float32] */)
  };
  %86(%var_3425) /* ty=(Tensor[(8, 13, 3), float64], Tensor[(5, 14, 6), bool], Tensor[(420), float32]) */
}

def @func_6372(%var_6344: Tensor[(5, 14, 7), float32]) -> Tensor[(5, 14, 7), float32] {
  %87 = @func_4949() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %88 = %87.0;
  %89 = cast(%88, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %90 = cast(%var_6344, dtype="bool") /* ty=Tensor[(5, 14, 7), bool] */;
  %91 = less_equal(%89, %90) /* ty=Tensor[(5, 14, 7), bool] */;
  %92 = cast(%91, dtype="float32") /* ty=Tensor[(5, 14, 7), float32] */;
  sqrt(%92) /* ty=Tensor[(5, 14, 7), float32] */
}

def @func_8485() -> Tensor[(5, 14, 1), float32] {
  @func_8483() /* ty=Tensor[(5, 14, 1), float32] */
}

def @func_4035(%var_4034: Tensor[(12, 16, 14), int32]) -> (Tensor[(12, 16, 14), bool], Tensor[(12, 16, 14), float32]) {
  %100 = fn (%var_4021: Tensor[(12, 16, 14), int32]) -> (Tensor[(12, 16, 14), bool], Tensor[(12, 16, 14), float32]) {
    %93 = cast(%var_4021, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
    %94 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(12, 16, 14), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %95 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 16, 14), int32] */, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
    %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %97 = cast(%var_4021, dtype="float32") /* ty=Tensor[(12, 16, 14), float32] */;
    %98 = equal(%95, %96) /* ty=Tensor[(12, 16, 14), bool] */;
    %99 = tan(%97) /* ty=Tensor[(12, 16, 14), float32] */;
    (%98, %99)
  };
  %100(%var_4034) /* ty=(Tensor[(12, 16, 14), bool], Tensor[(12, 16, 14), float32]) */
}

def @main(%var_8885: Tensor[(120), float64], %var_8886: Tensor[(208), bool], %var_8897: Tensor[(429), float32]) -> (Tensor[(5, 14, ?), bool], Tensor[(192), int8], Tensor[(208), bool], Tensor[(5, 14, 120), bool], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(4, 4, 13), int32]) {
  %101 = @func_7664() /* ty=(Tensor[(5, 14, ?), bool],) */;
  %102 = cast(meta[relay.Constant][7] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
  %103 = cast(%var_8885, dtype="float64") /* ty=Tensor[(120), float64] */;
  %104 = cast(%var_8886, dtype="bool") /* ty=Tensor[(208), bool] */;
  %105 = reshape(%102, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %106 = reshape(%103, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %107 = reshape(%104, newshape=[208]) /* ty=Tensor[(208), bool] */;
  %108 = @func_5256(%105, %106, %107) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(8), int8], Tensor[(192), int8], Tensor[(1, 120), float64], Tensor[(224), float32], Tensor[(120), float64], Tensor[(5, 14, 1), float32], float64, Tensor[(1470), float32], Tensor[(208), bool]) */;
  %109 = %108.0;
  %110 = cast(%var_8885, dtype="bool") /* ty=Tensor[(120), bool] */;
  %111 = cast(%109, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %112 = cast(%var_8897, dtype="float32") /* ty=Tensor[(429), float32] */;
  %113 = reshape(%112, newshape=[39, 11]) /* ty=Tensor[(39, 11), float32] */;
  %114 = @func_3885(%113) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(39, 11), float32], Tensor[(5, 14, 1), float32]) */;
  %115 = cast(-6.63507f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %116 = cast(%var_8886, dtype="float64") /* ty=Tensor[(208), float64] */;
  %117 = reshape(%115, newshape=[]) /* ty=float64 */;
  %118 = reshape(%116, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), float64] */;
  %119 = @func_292(%117, %118) /* ty=(Tensor[(4, 4, 13), bool],) */;
  %120 = %119.0;
  %121 = cast(%120, dtype="int32") /* ty=Tensor[(4, 4, 13), int32] */;
  %122 = cast(-6.63507f64 /* ty=float64 */, dtype="int32") /* ty=int32 */;
  %123 = %101.0;
  %124 = greater(%110, %111) /* ty=Tensor[(5, 14, 120), bool] */;
  %125 = %114.1;
  %126 = maximum(%121, %122) /* ty=Tensor[(4, 4, 13), int32] */;
  (%123, meta[relay.Constant][7] /* ty=Tensor[(192), int8] */, %var_8886, %124, %125, %var_8897, %126)
}

def @func_872(%var_869: Tensor[(12, 4, 15), int16], %var_870: Tensor[(12, 4, 15), int16], %var_871: float64) -> (Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) {
  %144 = fn (%var_843: Tensor[(12, 4, 15), int16], %var_844: Tensor[(12, 4, 15), int16], %var_849: float64) -> (Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) {
    %127 = cast(%var_844, dtype="int16") /* ty=Tensor[(12, 4, 15), int16] */;
    %128 = shape_of(%var_843, dtype="int32") /* ty=Tensor[(3), int32] */;
    %129 = cast(%var_843, dtype="int16") /* ty=Tensor[(12, 4, 15), int16] */;
    %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %131 = cast(%var_849, dtype="float64") /* ty=float64 */;
    %132 = cast(meta[relay.Constant][8] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
    %133 = reshape(%131, newshape=[]) /* ty=float64 */;
    %134 = reshape(%132, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), float64] */;
    %135 = @func_288(%133, %134) /* ty=(Tensor[(4, 4, 13), bool],) */;
    %136 = cast(%var_849, dtype="uint16") /* ty=uint16 */;
    %137 = cast(meta[relay.Constant][9] /* ty=Tensor[(72, 1), uint16] */, dtype="uint16") /* ty=Tensor[(72, 1), uint16] */;
    %138 = reshape(%136, newshape=[]) /* ty=uint16 */;
    %139 = reshape(%137, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), uint16] */;
    %140 = @func_490(%138, %139) /* ty=(Tensor[(12, 2, 3), bool],) */;
    %141 = bitwise_and(%129, %130) /* ty=Tensor[(12, 4, 15), int16] */;
    %142 = %135.0;
    %143 = %140.0;
    (%141, %142, %var_849, meta[relay.Constant][8] /* ty=Tensor[(208), float64] */, %143, meta[relay.Constant][9] /* ty=Tensor[(72, 1), uint16] */)
  };
  %144(%var_869, %var_870, %var_871) /* ty=(Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) */
}

def @func_3755(%var_3749: Tensor[(429), float32], %var_3753: Tensor[(420), float32]) -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 6), bool], Tensor[(420), float32]) {
  %145 = @func_3362() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %146 = %145.1;
  %147 = cast(%146, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
  %148 = @func_2795() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %149 = cast(%var_3749, dtype="float32") /* ty=Tensor[(429), float32] */;
  %150 = reshape(%149, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), float32] */;
  %151 = cast(%var_3753, dtype="float32") /* ty=Tensor[(420), float32] */;
  %152 = reshape(%151, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), float32] */;
  %153 = @func_3215(%152) /* ty=(Tensor[(5, 14, 6), bool],) */;
  %154 = atanh(%147) /* ty=Tensor[(5, 14, 1), float64] */;
  %155 = %148.0;
  %156 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
  %157 = @func_2329(%150) /* ty=Tensor[(3, 13, 11), float32] */;
  %158 = %153.0;
  (%154, %155, %156, %157, %var_3749, %158, %var_3753)
}

def @func_4682(%var_4670: Tensor[(1, 1, 8), int8], %var_4671: Tensor[(8, 3, 8), int8]) -> (Tensor[(8, 3, 8), bool], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
  %159 = cast(%var_4670, dtype="bool") /* ty=Tensor[(1, 1, 8), bool] */;
  %160 = cast(%var_4671, dtype="bool") /* ty=Tensor[(8, 3, 8), bool] */;
  %161 = @func_4244() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
  %162 = less_equal(%159, %160) /* ty=Tensor[(8, 3, 8), bool] */;
  %163 = %161.2;
  %164 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
  (%162, %163, %164)
}

def @func_3215(%var_3210: Tensor[(5, 14, 6), float32]) -> (Tensor[(5, 14, 6), bool],) {
  %165 = @func_2795() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %166 = %165.0;
  %167 = cast(%166, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %168 = cast(%var_3210, dtype="bool") /* ty=Tensor[(5, 14, 6), bool] */;
  %169 = greater_equal(%167, %168) /* ty=Tensor[(5, 14, 6), bool] */;
  (%169,)
}

def @func_4686(%var_4684: Tensor[(1, 1, 8), int8], %var_4685: Tensor[(8, 3, 8), int8]) -> (Tensor[(8, 3, 8), bool], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
  @func_4682(%var_4684, %var_4685) /* ty=(Tensor[(8, 3, 8), bool], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */
}

def @func_3094() -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) {
  %175 = fn () -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) {
    %170 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %171 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
    %172 = cast(%171, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
    %173 = %170.0;
    %174 = atan(%172) /* ty=Tensor[(5, 14, 1), float32] */;
    (%173, %174)
  };
  %175() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */
}

def @func_8265() -> (Tensor[(5, 14, ?), bool],) {
  %177 = fn () -> (Tensor[(5, 14, ?), bool],) {
    %176 = @func_4104() /* ty=Tensor[(5, 14, ?), bool] */;
    (%176,)
  };
  %177() /* ty=(Tensor[(5, 14, ?), bool],) */
}

def @func_7267() -> (Tensor[(5, 14, 8), int64], Tensor[(5, 14, 11), float32], Tensor[(770), float32]) {
  @func_7265() /* ty=(Tensor[(5, 14, 8), int64], Tensor[(5, 14, 11), float32], Tensor[(770), float32]) */
}

def @func_3882(%var_3863: Tensor[(39, 11), float32]) -> (Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(39, 11), float32], Tensor[(5, 14, 1), float32]) {
  %178 = @func_3362() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %179 = %178.1;
  %180 = cast(%179, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %181 = cast(%var_3863, dtype="float32") /* ty=Tensor[(39, 11), float32] */;
  %182 = reshape(%181, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), float32] */;
  %183 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %184 = sqrt(%180) /* ty=Tensor[(5, 14, 1), float32] */;
  %185 = @func_2329(%182) /* ty=Tensor[(3, 13, 11), float32] */;
  %186 = %183.0;
  (%184, %185, %var_3863, %186)
}

def @func_8717() -> Tensor[(5, 14, 1), float32] {
  %188 = fn () -> Tensor[(5, 14, 1), float32] {
    %187 = @func_3093() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
    %187.0
  };
  %188() /* ty=Tensor[(5, 14, 1), float32] */
}

def @func_6958(%var_6955: Tensor[(10, 6, 10), float64], %var_6956: Tensor[(10, 6, 10), float64], %var_6957: Tensor[(429), float32]) -> (Tensor[(10, 6, 10), bool], Tensor[(10, 6, 10), bool], Tensor[(3, 13, 11), float32], Tensor[(429), float32]) {
  %204 = fn (%var_6890: Tensor[(10, 6, 10), float64], %var_6901: Tensor[(10, 6, 10), float64], %var_6946: Tensor[(429), float32]) -> (Tensor[(10, 6, 10), bool], Tensor[(10, 6, 10), bool], Tensor[(3, 13, 11), float32], Tensor[(429), float32]) {
    %189 = cast(%var_6890, dtype="float64") /* ty=Tensor[(10, 6, 10), float64] */;
    %190 = exp(%189) /* ty=Tensor[(10, 6, 10), float64] */;
    %191 = cast(%var_6901, dtype="bool") /* ty=Tensor[(10, 6, 10), bool] */;
    %192 = shape_of(%190, dtype="int32") /* ty=Tensor[(3), int32] */;
    %193 = cast(%190, dtype="bool") /* ty=Tensor[(10, 6, 10), bool] */;
    %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %195 = cast(%var_6890, dtype="bool") /* ty=Tensor[(10, 6, 10), bool] */;
    %196 = shape_of(%190, dtype="int32") /* ty=Tensor[(3), int32] */;
    %197 = cast(%190, dtype="bool") /* ty=Tensor[(10, 6, 10), bool] */;
    %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %199 = cast(%var_6946, dtype="float32") /* ty=Tensor[(429), float32] */;
    %200 = reshape(%199, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), float32] */;
    %201 = greater(%193, %194) /* ty=Tensor[(10, 6, 10), bool] */;
    %202 = equal(%197, %198) /* ty=Tensor[(10, 6, 10), bool] */;
    %203 = @func_2329(%200) /* ty=Tensor[(3, 13, 11), float32] */;
    (%201, %202, %203, %var_6946)
  };
  %204(%var_6955, %var_6956, %var_6957) /* ty=(Tensor[(10, 6, 10), bool], Tensor[(10, 6, 10), bool], Tensor[(3, 13, 11), float32], Tensor[(429), float32]) */
}

def @func_4177(%var_4175: Tensor[(7, 11, 15), uint8], %var_4176: Tensor[(7, 11, 15), uint8]) -> (Tensor[(7, 11, 15), bool],) {
  @func_4173(%var_4175, %var_4176) /* ty=(Tensor[(7, 11, 15), bool],) */
}

def @func_3320(%var_3317: Tensor[(5, 14, 5), float64], %var_3318: Tensor[(1470), float32], %var_3319: Tensor[(208), bool]) -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 5), int64], Tensor[(720), int16], Tensor[(1470), float32], Tensor[(208), bool]) {
  %220 = fn (%var_3292: Tensor[(5, 14, 5), float64], %var_3305: Tensor[(1470), float32], %var_3306: Tensor[(208), bool]) -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 5), int64], Tensor[(720), int16], Tensor[(1470), float32], Tensor[(208), bool]) {
    %205 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %206 = @func_2795() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %207 = %206.0;
    %208 = cast(%207, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
    %209 = sigmoid(%208) /* ty=Tensor[(5, 14, 1), float64] */;
    %210 = cast(%209, dtype="int64") /* ty=Tensor[(5, 14, 1), int64] */;
    %211 = cast(%var_3292, dtype="int64") /* ty=Tensor[(5, 14, 5), int64] */;
    %212 = cast(%var_3305, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %213 = cast(%var_3306, dtype="bool") /* ty=Tensor[(208), bool] */;
    %214 = reshape(%212, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
    %215 = reshape(%213, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), bool] */;
    %216 = @func_941(%214, %215) /* ty=(Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) */;
    %217 = %205.0;
    %218 = left_shift(%210, %211) /* ty=Tensor[(5, 14, 5), int64] */;
    %219 = %216.4;
    (%217, %218, %219, %var_3305, %var_3306)
  };
  %220(%var_3317, %var_3318, %var_3319) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 5), int64], Tensor[(720), int16], Tensor[(1470), float32], Tensor[(208), bool]) */
}

def @func_4950() -> (Tensor[(5, 14, 1), float32],) {
  %223 = fn () -> (Tensor[(5, 14, 1), float32],) {
    %221 = @func_3093() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
    %222 = %221.1;
    (%222,)
  };
  %223() /* ty=(Tensor[(5, 14, 1), float32],) */
}

def @func_4936() -> (Tensor[(5, 14, 1), float32],) {
  %224 = @func_3706() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */;
  %225 = %224.1;
  (%225,)
}

def @func_6742() -> Tensor[(5, 14, 1), float32] {
  %226 = fn () -> Tensor[(5, 14, 1), float32] {
    @func_4986() /* ty=Tensor[(5, 14, 1), float32] */
  };
  %226() /* ty=Tensor[(5, 14, 1), float32] */
}

def @func_2317(%var_2315: Tensor[(14, 16, 10), float64], %var_2316: Tensor[(14, 16, 10), float64]) -> (Tensor[(14, 16, 10), float64], Tensor[(14, 16, 10), int32], Tensor[(15, 1, 8), float64], Tensor[(120), float64]) {
  %238 = fn (%var_2290: Tensor[(14, 16, 10), float64], %var_2298: Tensor[(14, 16, 10), float64]) -> (Tensor[(14, 16, 10), float64], Tensor[(14, 16, 10), int32], Tensor[(15, 1, 8), float64], Tensor[(120), float64]) {
    %227 = cast(%var_2290, dtype="float64") /* ty=Tensor[(14, 16, 10), float64] */;
    %228 = cast(%var_2298, dtype="int32") /* ty=Tensor[(14, 16, 10), int32] */;
    %229 = shape_of(%var_2290, dtype="int32") /* ty=Tensor[(3), int32] */;
    %230 = cast(%var_2290, dtype="int32") /* ty=Tensor[(14, 16, 10), int32] */;
    %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %232 = cast(meta[relay.Constant][10] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %233 = reshape(%232, newshape=[15, 1, 8]) /* ty=Tensor[(15, 1, 8), float64] */;
    %234 = @func_1402(%233) /* ty=(Tensor[(15, 1, 8), float64],) */;
    %235 = acos(%227) /* ty=Tensor[(14, 16, 10), float64] */;
    %236 = multiply(%230, %231) /* ty=Tensor[(14, 16, 10), int32] */;
    %237 = %234.0;
    (%235, %236, %237, meta[relay.Constant][10] /* ty=Tensor[(120), float64] */)
  };
  %238(%var_2315, %var_2316) /* ty=(Tensor[(14, 16, 10), float64], Tensor[(14, 16, 10), int32], Tensor[(15, 1, 8), float64], Tensor[(120), float64]) */
}

def @func_7147() -> (Tensor[(5, 14, ?), int8], uint16, Tensor[(208), bool], Tensor[(5, 14, 1), float64]) {
  %254 = fn () -> (Tensor[(5, 14, ?), int8], uint16, Tensor[(208), bool], Tensor[(5, 14, 1), float64]) {
    %239 = @func_4936() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %240 = %239.0;
    %241 = @func_5907() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */;
    %242 = %241.0;
    %243 = cast(%242, dtype="int8") /* ty=Tensor[(5, 14, 1), int8] */;
    %244 = shape_of(%240, dtype="int32") /* ty=Tensor[(3), int32] */;
    %245 = cast(%240, dtype="int8") /* ty=Tensor[(5, 14, 1), int8] */;
    %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %247 = cast(meta[relay.Constant][11] /* ty=Tensor[(208), bool] */, dtype="bool") /* ty=Tensor[(208), bool] */;
    %248 = reshape(%247, newshape=[208]) /* ty=Tensor[(208), bool] */;
    %249 = @func_2943(%248) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(12, 2, 3), bool], uint16, Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool]) */;
    %250 = @func_6396() /* ty=(Tensor[(5, 14, 1), float64],) */;
    %251 = subtract(%245, %246) /* ty=Tensor[(5, 14, ?), int8] */;
    %252 = %249.5;
    %253 = %250.0;
    (%251, %252, meta[relay.Constant][11] /* ty=Tensor[(208), bool] */, %253)
  };
  %254() /* ty=(Tensor[(5, 14, ?), int8], uint16, Tensor[(208), bool], Tensor[(5, 14, 1), float64]) */
}

def @func_5946() -> (Tensor[(5, 14, 1), float64],) {
  %257 = fn () -> (Tensor[(5, 14, 1), float64],) {
    %255 = @func_4379() /* ty=(Tensor[(5, 14, 1), float64],) */;
    %256 = %255.0;
    (%256,)
  };
  %257() /* ty=(Tensor[(5, 14, 1), float64],) */
}

def @func_6694() -> Tensor[(5, 14, 1), float64] {
  @func_6692() /* ty=Tensor[(5, 14, 1), float64] */
}

def @func_4155(%var_4152: Tensor[(2688), int32]) -> (Tensor[(5, 14, ?), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), int32]) {
  %258 = @func_3093() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %259 = %258.1;
  %260 = cast(%259, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %261 = rsqrt(%260) /* ty=Tensor[(5, 14, 1), float32] */;
  %262 = cast(%261, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %263 = shape_of(%259, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%259, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %266 = cast(%var_4152, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %267 = reshape(%266, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), int32] */;
  %268 = @func_4033(%267) /* ty=(Tensor[(12, 16, 14), bool], Tensor[(12, 16, 14), float32]) */;
  %269 = floor_divide(%264, %265) /* ty=Tensor[(5, 14, ?), float32] */;
  %270 = %268.1;
  (%269, %270, %var_4152)
}

def @func_5545() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
  %274 = fn () -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
    %271 = @func_5316() /* ty=(Tensor[(5, 14, 1), float64],) */;
    %272 = %271.0;
    %273 = @func_3948() /* ty=Tensor[(5, 14, 1), float64] */;
    (%272, %273)
  };
  %274() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */
}

def @func_8671(%var_8612: Tensor[(8), int8], %var_8613: Tensor[(2, 96), int8]) -> (Tensor[(5, 14, 6), bool], Tensor[(5, 14, 420), uint64], Tensor[(2688), int32], Tensor[(8), int8], Tensor[(2, 96), int8], Tensor[(5, 14, 7), bool], Tensor[(5, 14, 7), float64], Tensor[(5, 14, 2688), uint64]) {
  %275 = cast(meta[relay.Constant][12] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %276 = reshape(%275, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), float32] */;
  %277 = @func_3215(%276) /* ty=(Tensor[(5, 14, 6), bool],) */;
  %278 = @func_4759() /* ty=(Tensor[(1470), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %279 = %278.2;
  %280 = cast(meta[relay.Constant][12] /* ty=Tensor[(420), float32] */, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %281 = cast(%279, dtype="uint64") /* ty=Tensor[(5, 14, 1), uint64] */;
  %282 = cast(meta[relay.Constant][13] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %283 = reshape(%282, newshape=[2688]) /* ty=Tensor[(2688), int32] */;
  %284 = @func_4155(%283) /* ty=(Tensor[(5, 14, ?), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), int32]) */;
  %285 = cast(%279, dtype="int16") /* ty=Tensor[(5, 14, 1), int16] */;
  %286 = cast(meta[relay.Constant][14] /* ty=Tensor[(5, 14, 7), float64] */, dtype="int16") /* ty=Tensor[(5, 14, 7), int16] */;
  %287 = left_shift(%285, %286) /* ty=Tensor[(5, 14, 7), int16] */;
  %288 = cast(%var_8612, dtype="int8") /* ty=Tensor[(8), int8] */;
  %289 = cast(%var_8613, dtype="int8") /* ty=Tensor[(2, 96), int8] */;
  %290 = reshape(%288, newshape=[8]) /* ty=Tensor[(8), int8] */;
  %291 = reshape(%289, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %292 = @func_5052(%290, %291) /* ty=(Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 1), float64], Tensor[(8), int8], Tensor[(192), int8]) */;
  %293 = %292.2;
  %294 = cast(%287, dtype="bool") /* ty=Tensor[(5, 14, 7), bool] */;
  %295 = cast(%293, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
  %296 = cast(%287, dtype="float64") /* ty=Tensor[(5, 14, 7), float64] */;
  %297 = cast(meta[relay.Constant][13] /* ty=Tensor[(2688), int32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %298 = log10(%297) /* ty=Tensor[(2688), float32] */;
  %299 = cast(%298, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %300 = log2(%299) /* ty=Tensor[(2688), float64] */;
  %301 = cast(%var_8612, dtype="int8") /* ty=Tensor[(8), int8] */;
  %302 = cast(%var_8613, dtype="int8") /* ty=Tensor[(2, 96), int8] */;
  %303 = reshape(%301, newshape=[1, 1, 8]) /* ty=Tensor[(1, 1, 8), int8] */;
  %304 = reshape(%302, newshape=[8, 3, 8]) /* ty=Tensor[(8, 3, 8), int8] */;
  %305 = @func_4682(%303, %304) /* ty=(Tensor[(8, 3, 8), bool], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %306 = %305.1;
  %307 = cast(%300, dtype="uint64") /* ty=Tensor[(2688), uint64] */;
  %308 = cast(%306, dtype="uint64") /* ty=Tensor[(5, 14, 1), uint64] */;
  %309 = %277.0;
  %310 = multiply(%280, %281) /* ty=Tensor[(5, 14, 420), uint64] */;
  %311 = %284.2;
  %312 = equal(%294, %295) /* ty=Tensor[(5, 14, 7), bool] */;
  %313 = asin(%296) /* ty=Tensor[(5, 14, 7), float64] */;
  %314 = left_shift(%307, %308) /* ty=Tensor[(5, 14, 2688), uint64] */;
  (%309, %310, %311, %var_8612, %var_8613, %312, %313, %314)
}

def @func_8200(%var_8199: Tensor[(5, 14, 11), float32]) -> (Tensor[(5, 14, 11), uint64], Tensor[(5, 14, ?), int32], Tensor[(5, 14, 1), float64]) {
  %323 = fn (%var_8182: Tensor[(5, 14, 11), float32]) -> (Tensor[(5, 14, 11), uint64], Tensor[(5, 14, ?), int32], Tensor[(5, 14, 1), float64]) {
    %315 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %316 = %315.0;
    %317 = cast(%316, dtype="uint64") /* ty=Tensor[(5, 14, 1), uint64] */;
    %318 = cast(%var_8182, dtype="uint64") /* ty=Tensor[(5, 14, 11), uint64] */;
    %319 = @func_4759() /* ty=(Tensor[(1470), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
    %320 = bitwise_or(%317, %318) /* ty=Tensor[(5, 14, 11), uint64] */;
    %321 = @func_5568() /* ty=Tensor[(5, 14, ?), int32] */;
    %322 = %319.2;
    (%320, %321, %322)
  };
  %323(%var_8199) /* ty=(Tensor[(5, 14, 11), uint64], Tensor[(5, 14, ?), int32], Tensor[(5, 14, 1), float64]) */
}

def @func_7480() -> (Tensor[(5, 14, 1), float64],) {
  @func_7478() /* ty=(Tensor[(5, 14, 1), float64],) */
}

def @func_1405(%var_1403: Tensor[(15, 1, 8), float64]) -> (Tensor[(15, 1, 8), float64],) {
  @func_1402(%var_1403) /* ty=(Tensor[(15, 1, 8), float64],) */
}

def @func_3050(%var_3048: float32, %var_3049: Tensor[(7, 2, 1), float32]) -> Tensor[(7, 2, 1), float32] {
  %326 = fn (%var_3033: float32, %var_3034: Tensor[(7, 2, 1), float32]) -> Tensor[(7, 2, 1), float32] {
    %324 = cast(%var_3033, dtype="float32") /* ty=float32 */;
    %325 = cast(%var_3034, dtype="float32") /* ty=Tensor[(7, 2, 1), float32] */;
    mod(%324, %325) /* ty=Tensor[(7, 2, 1), float32] */
  };
  %326(%var_3048, %var_3049) /* ty=Tensor[(7, 2, 1), float32] */
}

def @func_5569() -> Tensor[(5, 14, ?), int32] {
  %334 = fn () -> Tensor[(5, 14, ?), int32] {
    %327 = @func_4949() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %328 = %327.0;
    %329 = @func_4104() /* ty=Tensor[(5, 14, ?), bool] */;
    %330 = cast(%329, dtype="int32") /* ty=Tensor[(5, 14, ?), int32] */;
    %331 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
    %332 = cast(%328, dtype="int32") /* ty=Tensor[(5, 14, 1), int32] */;
    %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    add(%332, %333) /* ty=Tensor[(5, 14, ?), int32] */
  };
  %334() /* ty=Tensor[(5, 14, ?), int32] */
}

def @func_5490() -> (Tensor[(5, 14, ?), bool], Tensor[(5, 14, ?), float32], Tensor[(5, 14, 1), float32]) {
  @func_5488() /* ty=(Tensor[(5, 14, ?), bool], Tensor[(5, 14, ?), float32], Tensor[(5, 14, 1), float32]) */
}

def @func_4173(%var_4168: Tensor[(7, 11, 15), uint8], %var_4169: Tensor[(7, 11, 15), uint8]) -> (Tensor[(7, 11, 15), bool],) {
  %335 = cast(%var_4169, dtype="bool") /* ty=Tensor[(7, 11, 15), bool] */;
  %336 = shape_of(%var_4168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %337 = cast(%var_4168, dtype="bool") /* ty=Tensor[(7, 11, 15), bool] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %339 = greater(%337, %338) /* ty=Tensor[(7, 11, 15), bool] */;
  (%339,)
}

def @func_4380() -> (Tensor[(5, 14, 1), float64],) {
  %342 = fn () -> (Tensor[(5, 14, 1), float64],) {
    %340 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
    %341 = %340.0;
    (%341,)
  };
  %342() /* ty=(Tensor[(5, 14, 1), float64],) */
}

def @func_6799(%var_6798: Tensor[(5, 14, 10), float64]) -> (Tensor[(5, 14, 13), float64], Tensor[(8), int8], Tensor[(5, 14, 10), int16], Tensor[(5, 14, 192), uint32]) {
  %362 = fn (%var_6765: Tensor[(5, 14, 10), float64]) -> (Tensor[(5, 14, 13), float64], Tensor[(8), int8], Tensor[(5, 14, 10), int16], Tensor[(5, 14, 192), uint32]) {
    %343 = cast(meta[relay.Constant][15] /* ty=Tensor[(8), int8] */, dtype="int8") /* ty=Tensor[(8), int8] */;
    %344 = cast(meta[relay.Constant][16] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
    %345 = reshape(%343, newshape=[8]) /* ty=Tensor[(8), int8] */;
    %346 = reshape(%344, newshape=[192]) /* ty=Tensor[(192), int8] */;
    %347 = @func_5052(%345, %346) /* ty=(Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 1), float64], Tensor[(8), int8], Tensor[(192), int8]) */;
    %348 = @func_4759() /* ty=(Tensor[(1470), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
    %349 = %348.2;
    %350 = cast(%349, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
    %351 = cast(%var_6765, dtype="bool") /* ty=Tensor[(5, 14, 10), bool] */;
    %352 = not_equal(%350, %351) /* ty=Tensor[(5, 14, 10), bool] */;
    %353 = cast(%var_6765, dtype="int16") /* ty=Tensor[(5, 14, 10), int16] */;
    %354 = shape_of(%352, dtype="int32") /* ty=Tensor[(3), int32] */;
    %355 = cast(%352, dtype="int16") /* ty=Tensor[(5, 14, 10), int16] */;
    %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %357 = cast(meta[relay.Constant][16] /* ty=Tensor[(192), int8] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
    %358 = cast(%349, dtype="uint32") /* ty=Tensor[(5, 14, 1), uint32] */;
    %359 = %347.0;
    %360 = logical_xor(%355, %356) /* ty=Tensor[(5, 14, 10), int16] */;
    %361 = bitwise_or(%357, %358) /* ty=Tensor[(5, 14, 192), uint32] */;
    (%359, meta[relay.Constant][15] /* ty=Tensor[(8), int8] */, %360, %361)
  };
  %362(%var_6798) /* ty=(Tensor[(5, 14, 13), float64], Tensor[(8), int8], Tensor[(5, 14, 10), int16], Tensor[(5, 14, 192), uint32]) */
}

def @func_6177(%var_6175: Tensor[(5, 14, 12), float64], %var_6176: Tensor[(96, 28), int32]) -> (Tensor[(5, 14, 12), int8], Tensor[(5, 14, 1), float64], Tensor[(13, 15, 11), bool], Tensor[(12, 16, 14), float32], Tensor[(96, 28), int32], Tensor[(5, 14, 2145), float32]) {
  @func_6173(%var_6175, %var_6176) /* ty=(Tensor[(5, 14, 12), int8], Tensor[(5, 14, 1), float64], Tensor[(13, 15, 11), bool], Tensor[(12, 16, 14), float32], Tensor[(96, 28), int32], Tensor[(5, 14, 2145), float32]) */
}

def @func_5851(%var_5845: Tensor[(5, 14, 11), float32]) -> Tensor[(5, 14, 11), float32] {
  %363 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %364 = %363.0;
  %365 = cast(%364, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %366 = cast(%var_5845, dtype="float32") /* ty=Tensor[(5, 14, 11), float32] */;
  minimum(%365, %366) /* ty=Tensor[(5, 14, 11), float32] */
}

def @func_8675(%var_8673: Tensor[(8), int8], %var_8674: Tensor[(2, 96), int8]) -> (Tensor[(5, 14, 6), bool], Tensor[(5, 14, 420), uint64], Tensor[(2688), int32], Tensor[(8), int8], Tensor[(2, 96), int8], Tensor[(5, 14, 7), bool], Tensor[(5, 14, 7), float64], Tensor[(5, 14, 2688), uint64]) {
  @func_8671(%var_8673, %var_8674) /* ty=(Tensor[(5, 14, 6), bool], Tensor[(5, 14, 420), uint64], Tensor[(2688), int32], Tensor[(8), int8], Tensor[(2, 96), int8], Tensor[(5, 14, 7), bool], Tensor[(5, 14, 7), float64], Tensor[(5, 14, 2688), uint64]) */
}

def @func_7799() -> Tensor[(5, 14, 1), float32] {
  %367 = @func_7601() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %367.0
}

def @func_5102() -> Tensor[(5, 14, 1), float64] {
  %369 = fn () -> Tensor[(5, 14, 1), float64] {
    %368 = @func_4244() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
    %368.2
  };
  %369() /* ty=Tensor[(5, 14, 1), float64] */
}

def @func_1253(%var_1249: Tensor[(11, 12, 13), int32], %var_1250: float64, %var_1251: Tensor[(756), float64], %var_1252: Tensor[(104, 2), bool]) -> (Tensor[(11, 12, 13), bool], float64, Tensor[(720), int16], float64, Tensor[(756), float64], Tensor[(208), float64], Tensor[(1470), float32], Tensor[(104, 2), bool], Tensor[(4, 4, 13), float64], Tensor[(4, 4, 13), bool], Tensor[(9, 6, 14), float64], Tensor[(4, 4, 13), bool]) {
  @func_1247(%var_1249, %var_1250, %var_1251, %var_1252) /* ty=(Tensor[(11, 12, 13), bool], float64, Tensor[(720), int16], float64, Tensor[(756), float64], Tensor[(208), float64], Tensor[(1470), float32], Tensor[(104, 2), bool], Tensor[(4, 4, 13), float64], Tensor[(4, 4, 13), bool], Tensor[(9, 6, 14), float64], Tensor[(4, 4, 13), bool]) */
}

def @func_1402(%var_1387: Tensor[(15, 1, 8), float64]) -> (Tensor[(15, 1, 8), float64],) {
  %370 = cast(%var_1387, dtype="float64") /* ty=Tensor[(15, 1, 8), float64] */;
  %371 = asin(%370) /* ty=Tensor[(15, 1, 8), float64] */;
  (%371,)
}

def @func_5488() -> (Tensor[(5, 14, ?), bool], Tensor[(5, 14, ?), float32], Tensor[(5, 14, 1), float32]) {
  %372 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %373 = %372.0;
  %374 = @func_2795() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %375 = %374.0;
  %376 = cast(%375, dtype="uint8") /* ty=Tensor[(5, 14, 1), uint8] */;
  %377 = shape_of(%373, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%373, dtype="uint8") /* ty=Tensor[(5, 14, 1), uint8] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %380 = maximum(%378, %379) /* ty=Tensor[(5, 14, ?), uint8] */;
  %381 = @func_4449() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %382 = %381.1;
  %383 = cast(%382, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %384 = shape_of(%380, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%380, dtype="float32") /* ty=Tensor[(5, 14, ?), float32] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %387 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %388 = @func_4104() /* ty=Tensor[(5, 14, ?), bool] */;
  %389 = power(%385, %386) /* ty=Tensor[(5, 14, ?), float32] */;
  %390 = %387.0;
  (%388, %389, %390)
}

def @func_6563(%var_6561: Tensor[(1, 13, 10), int8], %var_6562: Tensor[(14, 13, 10), int8]) -> (Tensor[(14, 13, 10), int8], Tensor[(5, 14, 1), float64]) {
  @func_6559(%var_6561, %var_6562) /* ty=(Tensor[(14, 13, 10), int8], Tensor[(5, 14, 1), float64]) */
}

def @func_7464(%var_7459: Tensor[(9, 1, 2), int64], %var_7460: Tensor[(9, 11, 2), int64], %var_7461: Tensor[(840), float64], %var_7462: Tensor[(756), float64], %var_7463: Tensor[(25), int16]) -> (Tensor[(9, 11, 2), float64], Tensor[(840), float64], Tensor[(2688), bool], Tensor[(5, 14, 1), float64], Tensor[(2688), int32], Tensor[(5, 14, 11), uint64], Tensor[(5, 14, 6), bool], Tensor[(312), int16], Tensor[(5, 14, ?), float32], Tensor[(2688), uint16], Tensor[(9, 6, 14), float64], Tensor[(756), float64], Tensor[(?, 5, 5), float32], Tensor[(25), int16]) {
  @func_7457(%var_7459, %var_7460, %var_7461, %var_7462, %var_7463) /* ty=(Tensor[(9, 11, 2), float64], Tensor[(840), float64], Tensor[(2688), bool], Tensor[(5, 14, 1), float64], Tensor[(2688), int32], Tensor[(5, 14, 11), uint64], Tensor[(5, 14, 6), bool], Tensor[(312), int16], Tensor[(5, 14, ?), float32], Tensor[(2688), uint16], Tensor[(9, 6, 14), float64], Tensor[(756), float64], Tensor[(?, 5, 5), float32], Tensor[(25), int16]) */
}

def @func_8843(%var_8819: Tensor[(700), float64], %var_8841: Tensor[(1, 1470), float32]) -> (Tensor[(120), float64], Tensor[(5, 14, 13), float64], Tensor[(700), float64], Tensor[(13, 33), float32], Tensor[(1470), float32], Tensor[(1, 1470), float32]) {
  %391 = @func_7781() /* ty=(Tensor[(120), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %392 = cast(%var_8819, dtype="float64") /* ty=Tensor[(700), float64] */;
  %393 = reshape(%392, newshape=[5, 14, 10]) /* ty=Tensor[(5, 14, 10), float64] */;
  %394 = @func_6797(%393) /* ty=(Tensor[(5, 14, 13), float64], Tensor[(8), int8], Tensor[(5, 14, 10), int16], Tensor[(5, 14, 192), uint32]) */;
  %395 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 33), float32] */, dtype="float32") /* ty=Tensor[(13, 33), float32] */;
  %396 = reshape(%395, newshape=[429]) /* ty=Tensor[(429), float32] */;
  %397 = @func_3243(%396) /* ty=(Tensor[(3, 13, 11), float32], Tensor[(5, 14, 429), bool]) */;
  %398 = %397.0;
  %399 = cast(%398, dtype="float32") /* ty=Tensor[(3, 13, 11), float32] */;
  %400 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(13, 33), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %401 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 33), float32] */, dtype="float32") /* ty=Tensor[(13, 33), float32] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %403 = cast(%var_8841, dtype="float32") /* ty=Tensor[(1, 1470), float32] */;
  %404 = reshape(%403, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %405 = @func_8508(%404) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(208), bool]) */;
  %406 = %391.0;
  %407 = %394.0;
  %408 = floor_divide(%401, %402) /* ty=Tensor[(13, 33), float32] */;
  %409 = %405.1;
  (%406, %407, %var_8819, %408, %409, %var_8841)
}

def @func_1361(%var_1359: Tensor[(13, 15, 11), bool], %var_1360: Tensor[(13, 15, 11), bool]) -> Tensor[(13, 15, 11), bool] {
  %414 = fn (%var_1350: Tensor[(13, 15, 11), bool], %var_1351: Tensor[(13, 15, 11), bool]) -> Tensor[(13, 15, 11), bool] {
    %410 = cast(%var_1351, dtype="bool") /* ty=Tensor[(13, 15, 11), bool] */;
    %411 = shape_of(%var_1350, dtype="int32") /* ty=Tensor[(3), int32] */;
    %412 = cast(%var_1350, dtype="bool") /* ty=Tensor[(13, 15, 11), bool] */;
    %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%412, %413) /* ty=Tensor[(13, 15, 11), bool] */
  };
  %414(%var_1359, %var_1360) /* ty=Tensor[(13, 15, 11), bool] */
}

def @func_3922() -> Tensor[(5, 14, 1), float64] {
  @func_3920() /* ty=Tensor[(5, 14, 1), float64] */
}

def @func_6339(%var_6335: Tensor[(720), int16], %var_6336: float64, %var_6337: Tensor[(5, 14, 7), float32], %var_6338: Tensor[(1155), uint8]) -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(208), float64], Tensor[(720), int16], float64, Tensor[(5, 14, ?), bool], Tensor[(5, 14, 6), bool], Tensor[(429), float32], Tensor[(420), float32], Tensor[(5, 14, 7), bool], Tensor[(7, 11, 15), bool], Tensor[(1155), uint8]) {
  @func_6333(%var_6335, %var_6336, %var_6337, %var_6338) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(208), float64], Tensor[(720), int16], float64, Tensor[(5, 14, ?), bool], Tensor[(5, 14, 6), bool], Tensor[(429), float32], Tensor[(420), float32], Tensor[(5, 14, 7), bool], Tensor[(7, 11, 15), bool], Tensor[(1155), uint8]) */
}

def @func_2797() -> (Tensor[(5, 14, 1), float32],) {
  @func_2795() /* ty=(Tensor[(5, 14, 1), float32],) */
}

def @func_7602() -> (Tensor[(5, 14, 1), float32],) {
  %417 = fn () -> (Tensor[(5, 14, 1), float32],) {
    %415 = @func_5616() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %416 = %415.0;
    (%416,)
  };
  %417() /* ty=(Tensor[(5, 14, 1), float32],) */
}

def @func_2061(%var_2055: Tensor[(1, 12, 2), uint64], %var_2056: Tensor[(3, 12, 2), uint64], %var_2057: Tensor[(1470), float32], %var_2058: Tensor[(208), bool], %var_2059: Tensor[(720), int16], %var_2060: float64) -> (Tensor[(3, 12, 2), bool], Tensor[(1470), float32], Tensor[(4, 4, 13), int8], Tensor[(12, 4, 15), int16], Tensor[(720), int16], float64) {
  %440 = fn (%var_2012: Tensor[(1, 12, 2), uint64], %var_2013: Tensor[(3, 12, 2), uint64], %var_2019: Tensor[(1470), float32], %var_2020: Tensor[(208), bool], %var_2042: Tensor[(720), int16], %var_2043: float64) -> (Tensor[(3, 12, 2), bool], Tensor[(1470), float32], Tensor[(4, 4, 13), int8], Tensor[(12, 4, 15), int16], Tensor[(720), int16], float64) {
    %418 = cast(%var_2012, dtype="bool") /* ty=Tensor[(1, 12, 2), bool] */;
    %419 = cast(%var_2013, dtype="bool") /* ty=Tensor[(3, 12, 2), bool] */;
    %420 = cast(%var_2019, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %421 = cast(%var_2020, dtype="bool") /* ty=Tensor[(208), bool] */;
    %422 = reshape(%420, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
    %423 = reshape(%421, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), bool] */;
    %424 = @func_941(%422, %423) /* ty=(Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) */;
    %425 = %424.6;
    %426 = cast(%var_2020, dtype="int8") /* ty=Tensor[(208), int8] */;
    %427 = shape_of(%425, dtype="int32") /* ty=Tensor[(3), int32] */;
    %428 = cast(%425, dtype="int8") /* ty=Tensor[(4, 4, 13), int8] */;
    %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %430 = cast(%var_2042, dtype="int16") /* ty=Tensor[(720), int16] */;
    %431 = cast(%var_2042, dtype="int16") /* ty=Tensor[(720), int16] */;
    %432 = cast(%var_2043, dtype="float64") /* ty=float64 */;
    %433 = reshape(%430, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
    %434 = reshape(%431, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
    %435 = reshape(%432, newshape=[]) /* ty=float64 */;
    %436 = @func_868(%433, %434, %435) /* ty=(Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) */;
    %437 = greater_equal(%418, %419) /* ty=Tensor[(3, 12, 2), bool] */;
    %438 = add(%428, %429) /* ty=Tensor[(4, 4, 13), int8] */;
    %439 = %436.0;
    (%437, %var_2019, %438, %439, %var_2042, %var_2043)
  };
  %440(%var_2055, %var_2056, %var_2057, %var_2058, %var_2059, %var_2060) /* ty=(Tensor[(3, 12, 2), bool], Tensor[(1470), float32], Tensor[(4, 4, 13), int8], Tensor[(12, 4, 15), int16], Tensor[(720), int16], float64) */
}

def @func_6485() -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) {
  @func_6483() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */
}

def @func_5413() -> Tensor[(5, 14, 1), float32] {
  %441 = @func_2795() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %441.0
}

def @func_5603() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 5), int64], Tensor[(350), float64], Tensor[(1470), float32], Tensor[(208), bool]) {
  @func_5601() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 5), int64], Tensor[(350), float64], Tensor[(1470), float32], Tensor[(208), bool]) */
}

def @func_5618() -> (Tensor[(5, 14, 1), float32],) {
  @func_5616() /* ty=(Tensor[(5, 14, 1), float32],) */
}

def @func_2759() -> (Tensor[(5, 14, 1), float32],) {
  %444 = fn () -> (Tensor[(5, 14, 1), float32],) {
    %442 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %443 = %442.0;
    (%443,)
  };
  %444() /* ty=(Tensor[(5, 14, 1), float32],) */
}

def @func_4794() -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) {
  %449 = fn () -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) {
    %445 = @func_3706() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */;
    %446 = @func_4244() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
    %447 = %445.1;
    %448 = %446.0;
    (%447, %448)
  };
  %449() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */
}

def @func_8808(%var_8806: Tensor[(840), float64], %var_8807: Tensor[(1, 2688), int32]) -> (Tensor[(5, 14, ?), int32], Tensor[(13, 15, 11), bool], Tensor[(840), float64], Tensor[(1, 2688), int32]) {
  %457 = fn (%var_8787: Tensor[(840), float64], %var_8788: Tensor[(1, 2688), int32]) -> (Tensor[(5, 14, ?), int32], Tensor[(13, 15, 11), bool], Tensor[(840), float64], Tensor[(1, 2688), int32]) {
    %450 = cast(%var_8787, dtype="float64") /* ty=Tensor[(840), float64] */;
    %451 = cast(%var_8788, dtype="int32") /* ty=Tensor[(1, 2688), int32] */;
    %452 = reshape(%450, newshape=[5, 14, 12]) /* ty=Tensor[(5, 14, 12), float64] */;
    %453 = reshape(%451, newshape=[96, 28]) /* ty=Tensor[(96, 28), int32] */;
    %454 = @func_6173(%452, %453) /* ty=(Tensor[(5, 14, 12), int8], Tensor[(5, 14, 1), float64], Tensor[(13, 15, 11), bool], Tensor[(12, 16, 14), float32], Tensor[(96, 28), int32], Tensor[(5, 14, 2145), float32]) */;
    %455 = @func_5568() /* ty=Tensor[(5, 14, ?), int32] */;
    %456 = %454.2;
    (%455, %456, %var_8787, %var_8788)
  };
  %457(%var_8806, %var_8807) /* ty=(Tensor[(5, 14, ?), int32], Tensor[(13, 15, 11), bool], Tensor[(840), float64], Tensor[(1, 2688), int32]) */
}

def @func_8326(%var_8323: Tensor[(429), float32], %var_8324: Tensor[(3, 13, 11), float32], %var_8325: Tensor[(429), float64]) -> (Tensor[(5, 14, ?), bool], Tensor[(3, 13, 11), int16], Tensor[(429), float64]) {
  @func_8321(%var_8323, %var_8324, %var_8325) /* ty=(Tensor[(5, 14, ?), bool], Tensor[(3, 13, 11), int16], Tensor[(429), float64]) */
}

def @func_494(%var_492: uint16, %var_493: Tensor[(12, 2, 3), uint16]) -> (Tensor[(12, 2, 3), bool],) {
  @func_490(%var_492, %var_493) /* ty=(Tensor[(12, 2, 3), bool],) */
}

def @func_7801() -> Tensor[(5, 14, 1), float32] {
  @func_7799() /* ty=Tensor[(5, 14, 1), float32] */
}

def @func_5854(%var_5852: Tensor[(5, 14, 11), float32]) -> Tensor[(5, 14, 11), float32] {
  @func_5851(%var_5852) /* ty=Tensor[(5, 14, 11), float32] */
}

def @func_8400(%var_8398: Tensor[(5, 14, 6), bool]) -> (Tensor[(5, 14, 1), float64], Tensor[(420), float32], Tensor[(5, 14, 6), bool]) {
  @func_8397(%var_8398) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(420), float32], Tensor[(5, 14, 6), bool]) */
}

def @func_3362() -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) {
  %458 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %459 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %460 = %458.0;
  %461 = %459.0;
  (%460, %461)
}

def @func_6200(%var_6198: Tensor[(5, 14, 16), float32]) -> (Tensor[(5, 14, 16), int32],) {
  @func_6197(%var_6198) /* ty=(Tensor[(5, 14, 16), int32],) */
}

def @func_2331(%var_2330: Tensor[(3, 13, 11), float32]) -> Tensor[(3, 13, 11), float32] {
  %463 = fn (%var_2319: Tensor[(3, 13, 11), float32]) -> Tensor[(3, 13, 11), float32] {
    %462 = cast(%var_2319, dtype="float32") /* ty=Tensor[(3, 13, 11), float32] */;
    log10(%462) /* ty=Tensor[(3, 13, 11), float32] */
  };
  %463(%var_2330) /* ty=Tensor[(3, 13, 11), float32] */
}

def @func_4320() -> (Tensor[(5, 14, 1), float64],) {
  %464 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %465 = %464.0;
  (%465,)
}

def @func_3245(%var_3244: Tensor[(429), float32]) -> (Tensor[(3, 13, 11), float32], Tensor[(5, 14, 429), bool]) {
  %473 = fn (%var_3231: Tensor[(429), float32]) -> (Tensor[(3, 13, 11), float32], Tensor[(5, 14, 429), bool]) {
    %466 = cast(%var_3231, dtype="float32") /* ty=Tensor[(429), float32] */;
    %467 = reshape(%466, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), float32] */;
    %468 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
    %469 = cast(%var_3231, dtype="bool") /* ty=Tensor[(429), bool] */;
    %470 = cast(%468, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
    %471 = @func_2329(%467) /* ty=Tensor[(3, 13, 11), float32] */;
    %472 = logical_and(%469, %470) /* ty=Tensor[(5, 14, 429), bool] */;
    (%471, %472)
  };
  %473(%var_3244) /* ty=(Tensor[(3, 13, 11), float32], Tensor[(5, 14, 429), bool]) */
}

def @func_5193(%var_5191: Tensor[(1, 5, 5), int16], %var_5192: Tensor[(1, 5, 5), int16]) -> (Tensor[(5, 14, 1), float64], Tensor[(?, 5, 5), float32]) {
  @func_5189(%var_5191, %var_5192) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(?, 5, 5), float32]) */
}

def @func_4584() -> (Tensor[(5, 14, ?), float32], Tensor[(5, 14, ?), bool]) {
  %484 = fn () -> (Tensor[(5, 14, ?), float32], Tensor[(5, 14, ?), bool]) {
    %474 = @func_3093() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
    %475 = %474.1;
    %476 = cast(%475, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
    %477 = sin(%476) /* ty=Tensor[(5, 14, 1), float64] */;
    %478 = cast(%475, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
    %479 = shape_of(%477, dtype="int32") /* ty=Tensor[(3), int32] */;
    %480 = cast(%477, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
    %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %482 = mod(%480, %481) /* ty=Tensor[(5, 14, ?), float32] */;
    %483 = @func_4104() /* ty=Tensor[(5, 14, ?), bool] */;
    (%482, %483)
  };
  %484() /* ty=(Tensor[(5, 14, ?), float32], Tensor[(5, 14, ?), bool]) */
}

def @func_5256(%var_5253: Tensor[(192), int8], %var_5254: Tensor[(120), float64], %var_5255: Tensor[(208), bool]) -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(8), int8], Tensor[(192), int8], Tensor[(1, 120), float64], Tensor[(224), float32], Tensor[(120), float64], Tensor[(5, 14, 1), float32], float64, Tensor[(1470), float32], Tensor[(208), bool]) {
  @func_5251(%var_5253, %var_5254, %var_5255) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(8), int8], Tensor[(192), int8], Tensor[(1, 120), float64], Tensor[(224), float32], Tensor[(120), float64], Tensor[(5, 14, 1), float32], float64, Tensor[(1470), float32], Tensor[(208), bool]) */
}

def @func_3949() -> Tensor[(5, 14, 1), float64] {
  %486 = fn () -> Tensor[(5, 14, 1), float64] {
    %485 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
    %485.0
  };
  %486() /* ty=Tensor[(5, 14, 1), float64] */
}

def @func_1159(%var_1157: Tensor[(9, 6, 14), float64], %var_1158: Tensor[(9, 6, 14), float64]) -> (Tensor[(9, 6, 14), float64],) {
  @func_1155(%var_1157, %var_1158) /* ty=(Tensor[(9, 6, 14), float64],) */
}

def @func_1155(%var_1135: Tensor[(9, 6, 14), float64], %var_1136: Tensor[(9, 6, 14), float64]) -> (Tensor[(9, 6, 14), float64],) {
  %487 = cast(%var_1136, dtype="float64") /* ty=Tensor[(9, 6, 14), float64] */;
  %488 = shape_of(%var_1135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(%var_1135, dtype="float64") /* ty=Tensor[(9, 6, 14), float64] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %491 = power(%489, %490) /* ty=Tensor[(9, 6, 14), float64] */;
  (%491,)
}

def @func_6396() -> (Tensor[(5, 14, 1), float64],) {
  %492 = @func_4837() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %493 = %492.0;
  (%493,)
}

def @func_2709(%var_2656: Tensor[(120), float64], %var_2665: uint16, %var_2666: Tensor[(72), uint16], %var_2686: Tensor[(429), float32]) -> (Tensor[(5, 14, 1), float64], Tensor[(15, 1, 8), float64], Tensor[(120), float64], Tensor[(12, 2, 3), bool], uint16, Tensor[(72), uint16], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(72, 1), uint16], Tensor[(360, 2), int16], Tensor[(15, 1, 8), float64]) {
  %494 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %495 = %494.0;
  %496 = cast(%495, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
  %497 = cast(%var_2656, dtype="float64") /* ty=Tensor[(120), float64] */;
  %498 = reshape(%497, newshape=[15, 1, 8]) /* ty=Tensor[(15, 1, 8), float64] */;
  %499 = @func_1402(%498) /* ty=(Tensor[(15, 1, 8), float64],) */;
  %500 = cast(%var_2665, dtype="uint16") /* ty=uint16 */;
  %501 = cast(%var_2666, dtype="uint16") /* ty=Tensor[(72), uint16] */;
  %502 = reshape(%500, newshape=[]) /* ty=uint16 */;
  %503 = reshape(%501, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), uint16] */;
  %504 = @func_490(%502, %503) /* ty=(Tensor[(12, 2, 3), bool],) */;
  %505 = cast(%var_2686, dtype="float32") /* ty=Tensor[(429), float32] */;
  %506 = reshape(%505, newshape=[3, 13, 11]) /* ty=Tensor[(3, 13, 11), float32] */;
  %507 = cast(meta[relay.Constant][18] /* ty=Tensor[(360, 2), int16] */, dtype="int16") /* ty=Tensor[(360, 2), int16] */;
  %508 = cast(meta[relay.Constant][18] /* ty=Tensor[(360, 2), int16] */, dtype="int16") /* ty=Tensor[(360, 2), int16] */;
  %509 = cast(%var_2665, dtype="float64") /* ty=float64 */;
  %510 = reshape(%507, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %511 = reshape(%508, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %512 = reshape(%509, newshape=[]) /* ty=float64 */;
  %513 = @func_868(%510, %511, %512) /* ty=(Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) */;
  %514 = %499.0;
  %515 = cast(%514, dtype="float64") /* ty=Tensor[(15, 1, 8), float64] */;
  %516 = reshape(%515, newshape=[15, 1, 8]) /* ty=Tensor[(15, 1, 8), float64] */;
  %517 = @func_1402(%516) /* ty=(Tensor[(15, 1, 8), float64],) */;
  %518 = tan(%496) /* ty=Tensor[(5, 14, 1), float64] */;
  %519 = %504.0;
  %520 = @func_2329(%506) /* ty=Tensor[(3, 13, 11), float32] */;
  %521 = %513.5;
  %522 = %517.0;
  (%518, %514, %var_2656, %519, %var_2665, %var_2666, %520, %var_2686, %521, meta[relay.Constant][18] /* ty=Tensor[(360, 2), int16] */, %522)
}

def @func_3920() -> Tensor[(5, 14, 1), float64] {
  %523 = @func_3706() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */;
  %523.0
}

def @func_6097(%var_6089: Tensor[(5, 14, 16), float64], %var_6090: Tensor[(756, 1), float64], %var_6091: Tensor[(72), uint64], %var_6092: Tensor[(208), bool], %var_6093: Tensor[(720), int16], %var_6094: float64, %var_6095: Tensor[(420), float32], %var_6096: Tensor[(429), float32]) -> (Tensor[(5, 14, 16), uint32], Tensor[(5, 14, 1), float32], Tensor[(720), int16], Tensor[(24), uint64], Tensor[(72), uint64], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(720), int16], float64, Tensor[(9, 6, 14), bool], Tensor[(5, 14, 6), bool], Tensor[(420), float32], Tensor[(5, 14, 1), float32], Tensor[(429), float32]) {
  @func_6087(%var_6089, %var_6090, %var_6091, %var_6092, %var_6093, %var_6094, %var_6095, %var_6096) /* ty=(Tensor[(5, 14, 16), uint32], Tensor[(5, 14, 1), float32], Tensor[(720), int16], Tensor[(24), uint64], Tensor[(72), uint64], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(720), int16], float64, Tensor[(9, 6, 14), bool], Tensor[(5, 14, 6), bool], Tensor[(420), float32], Tensor[(5, 14, 1), float32], Tensor[(429), float32]) */
}

def @func_4449() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
  %524 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %525 = @func_4320() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %526 = %524.0;
  %527 = %525.0;
  (%526, %527)
}

def @func_4451() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
  @func_4449() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */
}

def @func_4761() -> (Tensor[(1470), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
  @func_4759() /* ty=(Tensor[(1470), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */
}

def @func_7265() -> (Tensor[(5, 14, 8), int64], Tensor[(5, 14, 11), float32], Tensor[(770), float32]) {
  %528 = @func_4818() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %529 = %528.0;
  %530 = cast(%529, dtype="int64") /* ty=Tensor[(5, 14, 1), int64] */;
  %531 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 14, 8), float32] */, dtype="int64") /* ty=Tensor[(5, 14, 8), int64] */;
  %532 = cast(meta[relay.Constant][20] /* ty=Tensor[(770), float32] */, dtype="float32") /* ty=Tensor[(770), float32] */;
  %533 = reshape(%532, newshape=[5, 14, 11]) /* ty=Tensor[(5, 14, 11), float32] */;
  %534 = bitwise_xor(%530, %531) /* ty=Tensor[(5, 14, 8), int64] */;
  %535 = @func_5851(%533) /* ty=Tensor[(5, 14, 11), float32] */;
  (%534, %535, meta[relay.Constant][20] /* ty=Tensor[(770), float32] */)
}

def @func_6173(%var_6113: Tensor[(5, 14, 12), float64], %var_6140: Tensor[(96, 28), int32]) -> (Tensor[(5, 14, 12), int8], Tensor[(5, 14, 1), float64], Tensor[(13, 15, 11), bool], Tensor[(12, 16, 14), float32], Tensor[(96, 28), int32], Tensor[(5, 14, 2145), float32]) {
  %536 = @func_3948() /* ty=Tensor[(5, 14, 1), float64] */;
  %537 = cast(%536, dtype="int8") /* ty=Tensor[(5, 14, 1), int8] */;
  %538 = cast(%var_6113, dtype="int8") /* ty=Tensor[(5, 14, 12), int8] */;
  %539 = @func_4320() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %540 = cast(meta[relay.Constant][21] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %541 = cast(meta[relay.Constant][21] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %542 = reshape(%540, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), bool] */;
  %543 = reshape(%541, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), bool] */;
  %544 = cast(%var_6140, dtype="int32") /* ty=Tensor[(96, 28), int32] */;
  %545 = reshape(%544, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), int32] */;
  %546 = @func_4033(%545) /* ty=(Tensor[(12, 16, 14), bool], Tensor[(12, 16, 14), float32]) */;
  %547 = cast(meta[relay.Constant][21] /* ty=Tensor[(2145), bool] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %548 = cast(%536, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
  %549 = subtract(%537, %538) /* ty=Tensor[(5, 14, 12), int8] */;
  %550 = %539.0;
  %551 = @func_1358(%542, %543) /* ty=Tensor[(13, 15, 11), bool] */;
  %552 = %546.1;
  %553 = floor_mod(%547, %548) /* ty=Tensor[(5, 14, 2145), float32] */;
  (%549, %550, %551, %552, %var_6140, %553)
}

def @func_6398() -> (Tensor[(5, 14, 1), float64],) {
  @func_6396() /* ty=(Tensor[(5, 14, 1), float64],) */
}

def @func_7664() -> (Tensor[(5, 14, ?), bool],) {
  %563 = fn () -> (Tensor[(5, 14, ?), bool],) {
    %554 = @func_5544() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
    %555 = %554.1;
    %556 = @func_7601() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %557 = %556.0;
    %558 = cast(%557, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
    %559 = shape_of(%555, dtype="int32") /* ty=Tensor[(3), int32] */;
    %560 = cast(%555, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
    %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %562 = less(%560, %561) /* ty=Tensor[(5, 14, ?), bool] */;
    (%562,)
  };
  %563() /* ty=(Tensor[(5, 14, ?), bool],) */
}

def @func_3675(%var_3674: Tensor[(5, 14, 5), float32]) -> (Tensor[(5, 14, 5), int32],) {
  %569 = fn (%var_3660: Tensor[(5, 14, 5), float32]) -> (Tensor[(5, 14, 5), int32],) {
    %564 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %565 = %564.0;
    %566 = cast(%565, dtype="int32") /* ty=Tensor[(5, 14, 1), int32] */;
    %567 = cast(%var_3660, dtype="int32") /* ty=Tensor[(5, 14, 5), int32] */;
    %568 = right_shift(%566, %567) /* ty=Tensor[(5, 14, 5), int32] */;
    (%568,)
  };
  %569(%var_3674) /* ty=(Tensor[(5, 14, 5), int32],) */
}

def @func_2858() -> (Tensor[(5, 14, 1), float32],) {
  %572 = fn () -> (Tensor[(5, 14, 1), float32],) {
    %570 = @func_2758() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %571 = %570.0;
    (%571,)
  };
  %572() /* ty=(Tensor[(5, 14, 1), float32],) */
}

def @func_4759() -> (Tensor[(1470), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
  %573 = @func_4643() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1, 208), bool]) */;
  %574 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %575 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %576 = %573.1;
  %577 = %574.0;
  %578 = %575.0;
  (%576, %577, %578)
}

def @func_7783() -> (Tensor[(120), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) {
  @func_7781() /* ty=(Tensor[(120), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */
}

def @func_4246() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) {
  @func_4244() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */
}

def @func_5998() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
  %583 = fn () -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
    %579 = @func_5907() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */;
    %580 = @func_4244() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
    %581 = %579.0;
    %582 = %580.2;
    (%581, %582)
  };
  %583() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */
}

def @func_2976() -> Tensor[(5, 14, 1), float64] {
  %587 = fn () -> Tensor[(5, 14, 1), float64] {
    %584 = @func_2758() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %585 = %584.0;
    %586 = cast(%585, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
    erf(%586) /* ty=Tensor[(5, 14, 1), float64] */
  };
  %587() /* ty=Tensor[(5, 14, 1), float64] */
}

def @func_3759(%var_3757: Tensor[(429), float32], %var_3758: Tensor[(420), float32]) -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 6), bool], Tensor[(420), float32]) {
  @func_3755(%var_3757, %var_3758) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 6), bool], Tensor[(420), float32]) */
}

def @func_8847(%var_8845: Tensor[(700), float64], %var_8846: Tensor[(1, 1470), float32]) -> (Tensor[(120), float64], Tensor[(5, 14, 13), float64], Tensor[(700), float64], Tensor[(13, 33), float32], Tensor[(1470), float32], Tensor[(1, 1470), float32]) {
  @func_8843(%var_8845, %var_8846) /* ty=(Tensor[(120), float64], Tensor[(5, 14, 13), float64], Tensor[(700), float64], Tensor[(13, 33), float32], Tensor[(1470), float32], Tensor[(1, 1470), float32]) */
}

def @func_6648(%var_6641: Tensor[(1470), float32], %var_6642: Tensor[(208), bool]) -> (Tensor[(5, 14, 1), float64], Tensor[(720), int16], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(5, 14, 1), float32]) {
  %588 = @func_5316() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %589 = cast(%var_6641, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %590 = cast(%var_6642, dtype="bool") /* ty=Tensor[(208), bool] */;
  %591 = reshape(%589, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %592 = reshape(%590, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), bool] */;
  %593 = @func_941(%591, %592) /* ty=(Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) */;
  %594 = @func_4793() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
  %595 = %588.0;
  %596 = %593.4;
  %597 = %594.0;
  (%595, %596, %var_6641, %var_6642, %597)
}

def @func_8321(%var_8283: Tensor[(429), float32], %var_8302: Tensor[(3, 13, 11), float32], %var_8309: Tensor[(429), float64]) -> (Tensor[(5, 14, ?), bool], Tensor[(3, 13, 11), int16], Tensor[(429), float64]) {
  %598 = cast(%var_8283, dtype="float32") /* ty=Tensor[(429), float32] */;
  %599 = reshape(%598, newshape=[429]) /* ty=Tensor[(429), float32] */;
  %600 = @func_3243(%599) /* ty=(Tensor[(3, 13, 11), float32], Tensor[(5, 14, 429), bool]) */;
  %601 = %600.0;
  %602 = cast(%var_8302, dtype="int16") /* ty=Tensor[(3, 13, 11), int16] */;
  %603 = shape_of(%601, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(%601, dtype="int16") /* ty=Tensor[(3, 13, 11), int16] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %606 = cast(%var_8283, dtype="float64") /* ty=Tensor[(429), float64] */;
  %607 = atanh(%606) /* ty=Tensor[(429), float64] */;
  %608 = cast(%var_8309, dtype="float64") /* ty=Tensor[(429), float64] */;
  %609 = shape_of(%607, dtype="int32") /* ty=Tensor[(1), int32] */;
  %610 = cast(%607, dtype="float64") /* ty=Tensor[(429), float64] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?), float64] */;
  %612 = @func_6633() /* ty=Tensor[(5, 14, ?), bool] */;
  %613 = left_shift(%604, %605) /* ty=Tensor[(3, 13, 11), int16] */;
  %614 = mod(%610, %611) /* ty=Tensor[(429), float64] */;
  (%612, %613, %614)
}

def @func_8439(%var_8437: Tensor[(756), float64]) -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(9, 6, 14), float64], Tensor[(756), bool]) {
  @func_8436(%var_8437) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(9, 6, 14), float64], Tensor[(756), bool]) */
}

def @func_3768() -> (Tensor[(5, 14, 1), float64],) {
  @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */
}

def @func_6652(%var_6650: Tensor[(1470), float32], %var_6651: Tensor[(208), bool]) -> (Tensor[(5, 14, 1), float64], Tensor[(720), int16], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(5, 14, 1), float32]) {
  @func_6648(%var_6650, %var_6651) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(720), int16], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(5, 14, 1), float32]) */
}

def @func_2254(%var_2242: Tensor[(2, 8, 14), float32], %var_2246: Tensor[(1, 120), float64]) -> (Tensor[(15, 1, 8), float64], Tensor[(1, 120), float64], Tensor[(2, 8, 14), uint64]) {
  %615 = cast(%var_2246, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
  %616 = reshape(%615, newshape=[15, 1, 8]) /* ty=Tensor[(15, 1, 8), float64] */;
  %617 = @func_1402(%616) /* ty=(Tensor[(15, 1, 8), float64],) */;
  %618 = cast(%var_2242, dtype="float32") /* ty=Tensor[(2, 8, 14), float32] */;
  %619 = acos(%618) /* ty=Tensor[(2, 8, 14), float32] */;
  %620 = cast(%var_2242, dtype="uint64") /* ty=Tensor[(2, 8, 14), uint64] */;
  %621 = shape_of(%619, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%619, dtype="uint64") /* ty=Tensor[(2, 8, 14), uint64] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %624 = %617.0;
  %625 = left_shift(%622, %623) /* ty=Tensor[(2, 8, 14), uint64] */;
  (%624, %var_2246, %625)
}

def @func_6692() -> Tensor[(5, 14, 1), float64] {
  %626 = @func_4837() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %626.1
}

def @func_2715(%var_2711: Tensor[(120), float64], %var_2712: uint16, %var_2713: Tensor[(72), uint16], %var_2714: Tensor[(429), float32]) -> (Tensor[(5, 14, 1), float64], Tensor[(15, 1, 8), float64], Tensor[(120), float64], Tensor[(12, 2, 3), bool], uint16, Tensor[(72), uint16], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(72, 1), uint16], Tensor[(360, 2), int16], Tensor[(15, 1, 8), float64]) {
  @func_2709(%var_2711, %var_2712, %var_2713, %var_2714) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(15, 1, 8), float64], Tensor[(120), float64], Tensor[(12, 2, 3), bool], uint16, Tensor[(72), uint16], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(72, 1), uint16], Tensor[(360, 2), int16], Tensor[(15, 1, 8), float64]) */
}

def @func_288(%var_279: float64, %var_280: Tensor[(4, 4, 13), float64]) -> (Tensor[(4, 4, 13), bool],) {
  %627 = cast(%var_279, dtype="bool") /* ty=bool */;
  %628 = cast(%var_280, dtype="bool") /* ty=Tensor[(4, 4, 13), bool] */;
  %629 = greater(%627, %628) /* ty=Tensor[(4, 4, 13), bool] */;
  (%629,)
}

def @func_2585() -> (Tensor[(5, 14, 1), float32],) {
  %632 = fn () -> (Tensor[(5, 14, 1), float32],) {
    %630 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 14, 1), float32] */, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
    %631 = exp(%630) /* ty=Tensor[(5, 14, 1), float32] */;
    (%631,)
  };
  %632() /* ty=(Tensor[(5, 14, 1), float32],) */
}

def @func_3885(%var_3883: Tensor[(39, 11), float32]) -> (Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(39, 11), float32], Tensor[(5, 14, 1), float32]) {
  @func_3882(%var_3883) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(39, 11), float32], Tensor[(5, 14, 1), float32]) */
}

def @func_6634() -> Tensor[(5, 14, ?), bool] {
  %633 = fn () -> Tensor[(5, 14, ?), bool] {
    @func_4104() /* ty=Tensor[(5, 14, ?), bool] */
  };
  %633() /* ty=Tensor[(5, 14, ?), bool] */
}

def @func_6846() -> Tensor[(5, 14, ?), float32] {
  @func_6844() /* ty=Tensor[(5, 14, ?), float32] */
}

def @func_8397(%var_8364: Tensor[(5, 14, 6), bool]) -> (Tensor[(5, 14, 1), float64], Tensor[(420), float32], Tensor[(5, 14, 6), bool]) {
  %634 = @func_4793() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
  %635 = cast(meta[relay.Constant][23] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %636 = reshape(%635, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), float32] */;
  %637 = @func_3215(%636) /* ty=(Tensor[(5, 14, 6), bool],) */;
  %638 = %637.0;
  %639 = cast(%var_8364, dtype="bool") /* ty=Tensor[(5, 14, 6), bool] */;
  %640 = shape_of(%638, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(%638, dtype="bool") /* ty=Tensor[(5, 14, 6), bool] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %643 = %634.1;
  %644 = logical_or(%641, %642) /* ty=Tensor[(5, 14, 6), bool] */;
  (%643, meta[relay.Constant][23] /* ty=Tensor[(420), float32] */, %644)
}

def @func_4922(%var_4918: uint16, %var_4919: Tensor[(72), uint16], %var_4920: Tensor[(429, 1), float32], %var_4921: Tensor[(429), float32]) -> (Tensor[(5, 14, 1), float64], Tensor[(120), float64], uint16, Tensor[(72), uint16], Tensor[(429, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(429), float64]) {
  %666 = fn (%var_4895: uint16, %var_4896: Tensor[(72), uint16], %var_4897: Tensor[(429, 1), float32], %var_4906: Tensor[(429), float32]) -> (Tensor[(5, 14, 1), float64], Tensor[(120), float64], uint16, Tensor[(72), uint16], Tensor[(429, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(429), float64]) {
    %645 = @func_4449() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
    %646 = cast(%var_4897, dtype="float32") /* ty=Tensor[(429, 1), float32] */;
    %647 = reshape(%646, newshape=[39, 11]) /* ty=Tensor[(39, 11), float32] */;
    %648 = @func_3882(%647) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(39, 11), float32], Tensor[(5, 14, 1), float32]) */;
    %649 = cast(meta[relay.Constant][24] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %650 = cast(%var_4895, dtype="uint16") /* ty=uint16 */;
    %651 = cast(%var_4896, dtype="uint16") /* ty=Tensor[(72), uint16] */;
    %652 = cast(%var_4897, dtype="float32") /* ty=Tensor[(429, 1), float32] */;
    %653 = reshape(%649, newshape=[120]) /* ty=Tensor[(120), float64] */;
    %654 = reshape(%650, newshape=[]) /* ty=uint16 */;
    %655 = reshape(%651, newshape=[72]) /* ty=Tensor[(72), uint16] */;
    %656 = reshape(%652, newshape=[429]) /* ty=Tensor[(429), float32] */;
    %657 = @func_2709(%653, %654, %655, %656) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(15, 1, 8), float64], Tensor[(120), float64], Tensor[(12, 2, 3), bool], uint16, Tensor[(72), uint16], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(72, 1), uint16], Tensor[(360, 2), int16], Tensor[(15, 1, 8), float64]) */;
    %658 = %657.7;
    %659 = cast(%var_4906, dtype="float64") /* ty=Tensor[(429), float64] */;
    %660 = shape_of(%658, dtype="int32") /* ty=Tensor[(1), int32] */;
    %661 = cast(%658, dtype="float64") /* ty=Tensor[(429), float64] */;
    %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?), float64] */;
    %663 = %645.0;
    %664 = %648.3;
    %665 = divide(%661, %662) /* ty=Tensor[(429), float64] */;
    (%663, meta[relay.Constant][24] /* ty=Tensor[(120), float64] */, %var_4895, %var_4896, %var_4897, %664, %665)
  };
  %666(%var_4918, %var_4919, %var_4920, %var_4921) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(120), float64], uint16, Tensor[(72), uint16], Tensor[(429, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(429), float64]) */
}

def @func_5601() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 5), int64], Tensor[(350), float64], Tensor[(1470), float32], Tensor[(208), bool]) {
  %667 = @func_4449() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %668 = cast(meta[relay.Constant][25] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %669 = cast(meta[relay.Constant][26] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %670 = cast(meta[relay.Constant][27] /* ty=Tensor[(208), bool] */, dtype="bool") /* ty=Tensor[(208), bool] */;
  %671 = reshape(%668, newshape=[5, 14, 5]) /* ty=Tensor[(5, 14, 5), float64] */;
  %672 = reshape(%669, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %673 = reshape(%670, newshape=[208]) /* ty=Tensor[(208), bool] */;
  %674 = @func_3316(%671, %672, %673) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 5), int64], Tensor[(720), int16], Tensor[(1470), float32], Tensor[(208), bool]) */;
  %675 = %667.0;
  %676 = %674.1;
  (%675, %676, meta[relay.Constant][25] /* ty=Tensor[(350), float64] */, meta[relay.Constant][26] /* ty=Tensor[(1470), float32] */, meta[relay.Constant][27] /* ty=Tensor[(208), bool] */)
}

def @func_8071(%var_8067: Tensor[(2688), int32], %var_8068: float64, %var_8069: Tensor[(490), float32], %var_8070: Tensor[(2145), bool]) -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 11), float32], Tensor[(5, 14, 1), float64], Tensor[(12, 16, 14), float32], Tensor[(7, 11, 15), bool], Tensor[(1, 720), int16], float64, Tensor[(490), float32], Tensor[(1155), uint8], float64, Tensor[(22, 78), int32], Tensor[(756), float64], Tensor[(52, 4), bool], Tensor[(13, 15, 11), bool], Tensor[(2145), bool]) {
  %718 = fn (%var_8005: Tensor[(2688), int32], %var_8027: float64, %var_8028: Tensor[(490), float32], %var_8063: Tensor[(2145), bool]) -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 11), float32], Tensor[(5, 14, 1), float64], Tensor[(12, 16, 14), float32], Tensor[(7, 11, 15), bool], Tensor[(1, 720), int16], float64, Tensor[(490), float32], Tensor[(1155), uint8], float64, Tensor[(22, 78), int32], Tensor[(756), float64], Tensor[(52, 4), bool], Tensor[(13, 15, 11), bool], Tensor[(2145), bool]) {
    %677 = @func_4837() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
    %678 = @func_7265() /* ty=(Tensor[(5, 14, 8), int64], Tensor[(5, 14, 11), float32], Tensor[(770), float32]) */;
    %679 = @func_6396() /* ty=(Tensor[(5, 14, 1), float64],) */;
    %680 = cast(%var_8005, dtype="int32") /* ty=Tensor[(2688), int32] */;
    %681 = reshape(%680, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), int32] */;
    %682 = @func_4033(%681) /* ty=(Tensor[(12, 16, 14), bool], Tensor[(12, 16, 14), float32]) */;
    %683 = %682.0;
    %684 = cast(%var_8005, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %685 = shape_of(%683, dtype="int32") /* ty=Tensor[(3), int32] */;
    %686 = cast(%683, dtype="float32") /* ty=Tensor[(12, 16, 14), float32] */;
    %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %688 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 720), int16] */, dtype="int16") /* ty=Tensor[(1, 720), int16] */;
    %689 = cast(%var_8027, dtype="float64") /* ty=float64 */;
    %690 = cast(%var_8028, dtype="float32") /* ty=Tensor[(490), float32] */;
    %691 = cast(meta[relay.Constant][29] /* ty=Tensor[(1155), uint8] */, dtype="uint8") /* ty=Tensor[(1155), uint8] */;
    %692 = reshape(%688, newshape=[720]) /* ty=Tensor[(720), int16] */;
    %693 = reshape(%689, newshape=[]) /* ty=float64 */;
    %694 = reshape(%690, newshape=[5, 14, 7]) /* ty=Tensor[(5, 14, 7), float32] */;
    %695 = reshape(%691, newshape=[1155]) /* ty=Tensor[(1155), uint8] */;
    %696 = @func_6333(%692, %693, %694, %695) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(208), float64], Tensor[(720), int16], float64, Tensor[(5, 14, ?), bool], Tensor[(5, 14, 6), bool], Tensor[(429), float32], Tensor[(420), float32], Tensor[(5, 14, 7), bool], Tensor[(7, 11, 15), bool], Tensor[(1155), uint8]) */;
    %697 = cast(meta[relay.Constant][30] /* ty=Tensor[(22, 78), int32] */, dtype="int32") /* ty=Tensor[(22, 78), int32] */;
    %698 = cast(%var_8027, dtype="float64") /* ty=float64 */;
    %699 = cast(meta[relay.Constant][31] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
    %700 = cast(meta[relay.Constant][32] /* ty=Tensor[(52, 4), bool] */, dtype="bool") /* ty=Tensor[(52, 4), bool] */;
    %701 = reshape(%697, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), int32] */;
    %702 = reshape(%698, newshape=[]) /* ty=float64 */;
    %703 = reshape(%699, newshape=[756]) /* ty=Tensor[(756), float64] */;
    %704 = reshape(%700, newshape=[104, 2]) /* ty=Tensor[(104, 2), bool] */;
    %705 = @func_1247(%701, %702, %703, %704) /* ty=(Tensor[(11, 12, 13), bool], float64, Tensor[(720), int16], float64, Tensor[(756), float64], Tensor[(208), float64], Tensor[(1470), float32], Tensor[(104, 2), bool], Tensor[(4, 4, 13), float64], Tensor[(4, 4, 13), bool], Tensor[(9, 6, 14), float64], Tensor[(4, 4, 13), bool]) */;
    %706 = cast(%var_8063, dtype="bool") /* ty=Tensor[(2145), bool] */;
    %707 = cast(%var_8063, dtype="bool") /* ty=Tensor[(2145), bool] */;
    %708 = reshape(%706, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), bool] */;
    %709 = reshape(%707, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), bool] */;
    %710 = @func_6741() /* ty=Tensor[(5, 14, 1), float32] */;
    %711 = %677.1;
    %712 = %678.1;
    %713 = %679.0;
    %714 = floor_divide(%686, %687) /* ty=Tensor[(12, 16, 14), float32] */;
    %715 = %696.10;
    %716 = %705.1;
    %717 = @func_1358(%708, %709) /* ty=Tensor[(13, 15, 11), bool] */;
    (%710, %711, %712, %713, %714, %715, meta[relay.Constant][28] /* ty=Tensor[(1, 720), int16] */, %var_8027, %var_8028, meta[relay.Constant][29] /* ty=Tensor[(1155), uint8] */, %716, meta[relay.Constant][30] /* ty=Tensor[(22, 78), int32] */, meta[relay.Constant][31] /* ty=Tensor[(756), float64] */, meta[relay.Constant][32] /* ty=Tensor[(52, 4), bool] */, %717, %var_8063)
  };
  %718(%var_8067, %var_8068, %var_8069, %var_8070) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 11), float32], Tensor[(5, 14, 1), float64], Tensor[(12, 16, 14), float32], Tensor[(7, 11, 15), bool], Tensor[(1, 720), int16], float64, Tensor[(490), float32], Tensor[(1155), uint8], float64, Tensor[(22, 78), int32], Tensor[(756), float64], Tensor[(52, 4), bool], Tensor[(13, 15, 11), bool], Tensor[(2145), bool]) */
}

def @func_4495(%var_4494: Tensor[(756), float64]) -> (Tensor[(5, 14, 1), float32], Tensor[(210, 2), float32], Tensor[(9, 6, 14), float64], Tensor[(756), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 429), float32]) {
  %738 = fn (%var_4476: Tensor[(756), float64]) -> (Tensor[(5, 14, 1), float32], Tensor[(210, 2), float32], Tensor[(9, 6, 14), float64], Tensor[(756), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 429), float32]) {
    %719 = cast(meta[relay.Constant][33] /* ty=Tensor[(429), float32] */, dtype="float32") /* ty=Tensor[(429), float32] */;
    %720 = cast(meta[relay.Constant][34] /* ty=Tensor[(210, 2), float32] */, dtype="float32") /* ty=Tensor[(210, 2), float32] */;
    %721 = reshape(%719, newshape=[429]) /* ty=Tensor[(429), float32] */;
    %722 = reshape(%720, newshape=[420]) /* ty=Tensor[(420), float32] */;
    %723 = @func_3755(%721, %722) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 6), bool], Tensor[(420), float32]) */;
    %724 = cast(%var_4476, dtype="float64") /* ty=Tensor[(756), float64] */;
    %725 = cast(%var_4476, dtype="float64") /* ty=Tensor[(756), float64] */;
    %726 = reshape(%724, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
    %727 = reshape(%725, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
    %728 = @func_1155(%726, %727) /* ty=(Tensor[(9, 6, 14), float64],) */;
    %729 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %730 = @func_2758() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %731 = %730.0;
    %732 = cast(%731, dtype="float32") /* ty=Tensor[(5, 14, 1), float32] */;
    %733 = cast(meta[relay.Constant][33] /* ty=Tensor[(429), float32] */, dtype="float32") /* ty=Tensor[(429), float32] */;
    %734 = %723.1;
    %735 = %728.0;
    %736 = %729.0;
    %737 = divide(%732, %733) /* ty=Tensor[(5, 14, 429), float32] */;
    (%734, meta[relay.Constant][34] /* ty=Tensor[(210, 2), float32] */, %735, %var_4476, %736, %737)
  };
  %738(%var_4494) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(210, 2), float32], Tensor[(9, 6, 14), float64], Tensor[(756), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 429), float32]) */
}

def @func_5318() -> (Tensor[(5, 14, 1), float64],) {
  @func_5316() /* ty=(Tensor[(5, 14, 1), float64],) */
}

def @func_5251(%var_5222: Tensor[(192), int8], %var_5231: Tensor[(120), float64], %var_5244: Tensor[(208), bool]) -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(8), int8], Tensor[(192), int8], Tensor[(1, 120), float64], Tensor[(224), float32], Tensor[(120), float64], Tensor[(5, 14, 1), float32], float64, Tensor[(1470), float32], Tensor[(208), bool]) {
  %739 = @func_3706() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */;
  %740 = cast(meta[relay.Constant][35] /* ty=Tensor[(8), int8] */, dtype="int8") /* ty=Tensor[(8), int8] */;
  %741 = cast(%var_5222, dtype="int8") /* ty=Tensor[(192), int8] */;
  %742 = reshape(%740, newshape=[1, 1, 8]) /* ty=Tensor[(1, 1, 8), int8] */;
  %743 = reshape(%741, newshape=[8, 3, 8]) /* ty=Tensor[(8, 3, 8), int8] */;
  %744 = @func_4682(%742, %743) /* ty=(Tensor[(8, 3, 8), bool], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %745 = cast(meta[relay.Constant][36] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %746 = cast(%var_5231, dtype="float64") /* ty=Tensor[(120), float64] */;
  %747 = reshape(%745, newshape=[2, 8, 14]) /* ty=Tensor[(2, 8, 14), float32] */;
  %748 = reshape(%746, newshape=[1, 120]) /* ty=Tensor[(1, 120), float64] */;
  %749 = @func_2254(%747, %748) /* ty=(Tensor[(15, 1, 8), float64], Tensor[(1, 120), float64], Tensor[(2, 8, 14), uint64]) */;
  %750 = @func_4936() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %751 = cast(meta[relay.Constant][37] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %752 = cast(%var_5244, dtype="bool") /* ty=Tensor[(208), bool] */;
  %753 = reshape(%751, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %754 = reshape(%752, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), bool] */;
  %755 = @func_941(%753, %754) /* ty=(Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) */;
  %756 = %739.1;
  %757 = %744.2;
  %758 = %749.1;
  %759 = %750.0;
  %760 = %755.1;
  (%756, %757, meta[relay.Constant][35] /* ty=Tensor[(8), int8] */, %var_5222, %758, meta[relay.Constant][36] /* ty=Tensor[(224), float32] */, %var_5231, %759, %760, meta[relay.Constant][37] /* ty=Tensor[(1470), float32] */, %var_5244)
}

def @func_5371(%var_5369: int64, %var_5370: Tensor[(4, 10, 10), int64]) -> (Tensor[(4, 10, 10), int64], Tensor[(4, 10, 10), bool], Tensor[(2688), int32], Tensor[(2688), int32]) {
  %771 = fn (%var_5319: int64, %var_5320: Tensor[(4, 10, 10), int64]) -> (Tensor[(4, 10, 10), int64], Tensor[(4, 10, 10), bool], Tensor[(2688), int32], Tensor[(2688), int32]) {
    %761 = cast(%var_5319, dtype="int64") /* ty=int64 */;
    %762 = cast(%var_5320, dtype="int64") /* ty=Tensor[(4, 10, 10), int64] */;
    %763 = cast(%var_5319, dtype="bool") /* ty=bool */;
    %764 = cast(%var_5320, dtype="bool") /* ty=Tensor[(4, 10, 10), bool] */;
    %765 = cast(meta[relay.Constant][38] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
    %766 = reshape(%765, newshape=[2688]) /* ty=Tensor[(2688), int32] */;
    %767 = @func_4155(%766) /* ty=(Tensor[(5, 14, ?), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), int32]) */;
    %768 = bitwise_and(%761, %762) /* ty=Tensor[(4, 10, 10), int64] */;
    %769 = greater_equal(%763, %764) /* ty=Tensor[(4, 10, 10), bool] */;
    %770 = %767.2;
    (%768, %769, %770, meta[relay.Constant][38] /* ty=Tensor[(2688), int32] */)
  };
  %771(%var_5369, %var_5370) /* ty=(Tensor[(4, 10, 10), int64], Tensor[(4, 10, 10), bool], Tensor[(2688), int32], Tensor[(2688), int32]) */
}

def @func_5908() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) {
  %776 = fn () -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) {
    %772 = @func_4837() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
    %773 = @func_4949() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %774 = %772.0;
    %775 = %773.0;
    (%774, %775)
  };
  %776() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) */
}

def @func_6087(%var_6023: Tensor[(5, 14, 16), float64], %var_6033: Tensor[(756, 1), float64], %var_6041: Tensor[(72), uint64], %var_6043: Tensor[(208), bool], %var_6044: Tensor[(720), int16], %var_6045: float64, %var_6069: Tensor[(420), float32], %var_6080: Tensor[(429), float32]) -> (Tensor[(5, 14, 16), uint32], Tensor[(5, 14, 1), float32], Tensor[(720), int16], Tensor[(24), uint64], Tensor[(72), uint64], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(720), int16], float64, Tensor[(9, 6, 14), bool], Tensor[(5, 14, 6), bool], Tensor[(420), float32], Tensor[(5, 14, 1), float32], Tensor[(429), float32]) {
  %777 = @func_4244() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
  %778 = %777.2;
  %779 = cast(%778, dtype="uint32") /* ty=Tensor[(5, 14, 1), uint32] */;
  %780 = cast(%var_6023, dtype="uint32") /* ty=Tensor[(5, 14, 16), uint32] */;
  %781 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %782 = cast(meta[relay.Constant][39] /* ty=Tensor[(24), uint64] */, dtype="uint64") /* ty=Tensor[(24), uint64] */;
  %783 = cast(%var_6041, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %784 = cast(meta[relay.Constant][40] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %785 = cast(%var_6043, dtype="bool") /* ty=Tensor[(208), bool] */;
  %786 = cast(%var_6044, dtype="int16") /* ty=Tensor[(720), int16] */;
  %787 = cast(%var_6045, dtype="float64") /* ty=float64 */;
  %788 = reshape(%782, newshape=[1, 12, 2]) /* ty=Tensor[(1, 12, 2), uint64] */;
  %789 = reshape(%783, newshape=[3, 12, 2]) /* ty=Tensor[(3, 12, 2), uint64] */;
  %790 = reshape(%784, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %791 = reshape(%785, newshape=[208]) /* ty=Tensor[(208), bool] */;
  %792 = reshape(%786, newshape=[720]) /* ty=Tensor[(720), int16] */;
  %793 = reshape(%787, newshape=[]) /* ty=float64 */;
  %794 = @func_2054(%788, %789, %790, %791, %792, %793) /* ty=(Tensor[(3, 12, 2), bool], Tensor[(1470), float32], Tensor[(4, 4, 13), int8], Tensor[(12, 4, 15), int16], Tensor[(720), int16], float64) */;
  %795 = cast(%var_6033, dtype="float64") /* ty=Tensor[(756, 1), float64] */;
  %796 = reshape(%795, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %797 = @func_4493(%796) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(210, 2), float32], Tensor[(9, 6, 14), float64], Tensor[(756), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 429), float32]) */;
  %798 = %797.2;
  %799 = cast(%var_6033, dtype="bool") /* ty=Tensor[(756, 1), bool] */;
  %800 = shape_of(%798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %801 = cast(%798, dtype="bool") /* ty=Tensor[(9, 6, 14), bool] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %803 = cast(%var_6069, dtype="float32") /* ty=Tensor[(420), float32] */;
  %804 = reshape(%803, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), float32] */;
  %805 = @func_3215(%804) /* ty=(Tensor[(5, 14, 6), bool],) */;
  %806 = cast(%var_6080, dtype="float32") /* ty=Tensor[(429), float32] */;
  %807 = reshape(%806, newshape=[39, 11]) /* ty=Tensor[(39, 11), float32] */;
  %808 = @func_3882(%807) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(39, 11), float32], Tensor[(5, 14, 1), float32]) */;
  %809 = bitwise_xor(%779, %780) /* ty=Tensor[(5, 14, 16), uint32] */;
  %810 = %781.0;
  %811 = %794.4;
  %812 = greater_equal(%801, %802) /* ty=Tensor[(9, 6, 14), bool] */;
  %813 = %805.0;
  %814 = %808.3;
  (%809, %810, %811, meta[relay.Constant][39] /* ty=Tensor[(24), uint64] */, %var_6041, meta[relay.Constant][40] /* ty=Tensor[(1470), float32] */, %var_6043, %var_6044, %var_6045, %812, %813, %var_6069, %814, %var_6080)
}

def @func_6844() -> Tensor[(5, 14, ?), float32] {
  %815 = @func_5488() /* ty=(Tensor[(5, 14, ?), bool], Tensor[(5, 14, ?), float32], Tensor[(5, 14, 1), float32]) */;
  %815.1
}

def @func_3706() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32]) {
  %816 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %817 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
  %818 = %816.0;
  (%817, %818)
}

def @func_8573(%var_8572: Tensor[(5, 14, 7), float32]) -> (Tensor[(5, 14, 7), uint64], Tensor[(5, 14, 7), float64]) {
  %825 = fn (%var_8559: Tensor[(5, 14, 7), float32]) -> (Tensor[(5, 14, 7), uint64], Tensor[(5, 14, 7), float64]) {
    %819 = @func_4986() /* ty=Tensor[(5, 14, 1), float32] */;
    %820 = cast(%819, dtype="uint64") /* ty=Tensor[(5, 14, 1), uint64] */;
    %821 = cast(%var_8559, dtype="uint64") /* ty=Tensor[(5, 14, 7), uint64] */;
    %822 = cast(%var_8559, dtype="float64") /* ty=Tensor[(5, 14, 7), float64] */;
    %823 = subtract(%820, %821) /* ty=Tensor[(5, 14, 7), uint64] */;
    %824 = asinh(%822) /* ty=Tensor[(5, 14, 7), float64] */;
    (%823, %824)
  };
  %825(%var_8572) /* ty=(Tensor[(5, 14, 7), uint64], Tensor[(5, 14, 7), float64]) */
}

def @func_5056(%var_5054: Tensor[(8), int8], %var_5055: Tensor[(192), int8]) -> (Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 1), float64], Tensor[(8), int8], Tensor[(192), int8]) {
  @func_5052(%var_5054, %var_5055) /* ty=(Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 1), float64], Tensor[(8), int8], Tensor[(192), int8]) */
}

def @func_4105() -> Tensor[(5, 14, ?), bool] {
  %839 = fn () -> Tensor[(5, 14, ?), bool] {
    %826 = @func_2758() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %827 = %826.0;
    %828 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
    %829 = %828.0;
    %830 = cast(%829, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
    %831 = shape_of(%827, dtype="int32") /* ty=Tensor[(3), int32] */;
    %832 = cast(%827, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
    %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %834 = divide(%832, %833) /* ty=Tensor[(5, 14, ?), float64] */;
    %835 = cast(%827, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
    %836 = shape_of(%834, dtype="int32") /* ty=Tensor[(3), int32] */;
    %837 = cast(%834, dtype="bool") /* ty=Tensor[(5, 14, ?), bool] */;
    %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%837, %838) /* ty=Tensor[(5, 14, ?), bool] */
  };
  %839() /* ty=Tensor[(5, 14, ?), bool] */
}

def @func_945(%var_943: Tensor[(7, 14, 15), float32], %var_944: Tensor[(4, 4, 13), bool]) -> (Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) {
  @func_941(%var_943, %var_944) /* ty=(Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) */
}

def @func_4988() -> Tensor[(5, 14, 1), float32] {
  @func_4986() /* ty=Tensor[(5, 14, 1), float32] */
}

def @func_7088(%var_7071: Tensor[(286, 6), int32], %var_7072: float64) -> (Tensor[(5, 14, 1), float64], Tensor[(4, 4, 13), float64], Tensor[(286, 6), int32], float64, Tensor[(756), float64], Tensor[(1, 208), bool], Tensor[(1470), float32]) {
  %840 = cast(%var_7071, dtype="int32") /* ty=Tensor[(286, 6), int32] */;
  %841 = cast(%var_7072, dtype="float64") /* ty=float64 */;
  %842 = cast(meta[relay.Constant][41] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %843 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 208), bool] */, dtype="bool") /* ty=Tensor[(1, 208), bool] */;
  %844 = reshape(%840, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), int32] */;
  %845 = reshape(%841, newshape=[]) /* ty=float64 */;
  %846 = reshape(%842, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %847 = reshape(%843, newshape=[104, 2]) /* ty=Tensor[(104, 2), bool] */;
  %848 = @func_1247(%844, %845, %846, %847) /* ty=(Tensor[(11, 12, 13), bool], float64, Tensor[(720), int16], float64, Tensor[(756), float64], Tensor[(208), float64], Tensor[(1470), float32], Tensor[(104, 2), bool], Tensor[(4, 4, 13), float64], Tensor[(4, 4, 13), bool], Tensor[(9, 6, 14), float64], Tensor[(4, 4, 13), bool]) */;
  %849 = @func_4643() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1, 208), bool]) */;
  %850 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
  %851 = %848.8;
  %852 = %849.1;
  (%850, %851, %var_7071, %var_7072, meta[relay.Constant][41] /* ty=Tensor[(756), float64] */, meta[relay.Constant][42] /* ty=Tensor[(1, 208), bool] */, %852)
}

def @func_8436(%var_8431: Tensor[(756), float64]) -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64], Tensor[(9, 6, 14), float64], Tensor[(756), bool]) {
  %853 = @func_4837() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %854 = cast(meta[relay.Constant][43] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %855 = cast(meta[relay.Constant][43] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %856 = reshape(%854, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %857 = reshape(%855, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %858 = @func_1155(%856, %857) /* ty=(Tensor[(9, 6, 14), float64],) */;
  %859 = cast(%var_8431, dtype="bool") /* ty=Tensor[(756), bool] */;
  %860 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(756), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %861 = cast(meta[relay.Constant][43] /* ty=Tensor[(756), float64] */, dtype="bool") /* ty=Tensor[(756), bool] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?), bool] */;
  %863 = @func_5413() /* ty=Tensor[(5, 14, 1), float32] */;
  %864 = %853.0;
  %865 = %858.0;
  %866 = logical_and(%861, %862) /* ty=Tensor[(756), bool] */;
  (%863, %864, %865, %866)
}

def @func_6197(%var_6184: Tensor[(5, 14, 16), float32]) -> (Tensor[(5, 14, 16), int32],) {
  %867 = @func_3093() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %868 = %867.0;
  %869 = cast(%868, dtype="int32") /* ty=Tensor[(5, 14, 1), int32] */;
  %870 = cast(%var_6184, dtype="int32") /* ty=Tensor[(5, 14, 16), int32] */;
  %871 = add(%869, %870) /* ty=Tensor[(5, 14, 16), int32] */;
  (%871,)
}

def @func_3218(%var_3216: Tensor[(5, 14, 6), float32]) -> (Tensor[(5, 14, 6), bool],) {
  @func_3215(%var_3216) /* ty=(Tensor[(5, 14, 6), bool],) */
}

def @func_8129(%var_8127: Tensor[(15, 13, 11), float64]) -> Tensor[(15, 13, 11), float64] {
  @func_8126(%var_8127) /* ty=Tensor[(15, 13, 11), float64] */
}

def @func_5316() -> (Tensor[(5, 14, 1), float64],) {
  %872 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %873 = %872.0;
  (%873,)
}

def @func_4938() -> (Tensor[(5, 14, 1), float32],) {
  @func_4936() /* ty=(Tensor[(5, 14, 1), float32],) */
}

def @func_2795() -> (Tensor[(5, 14, 1), float32],) {
  %874 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %875 = %874.0;
  (%875,)
}

def @func_941(%var_891: Tensor[(7, 14, 15), float32], %var_923: Tensor[(4, 4, 13), bool]) -> (Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) {
  %876 = cast(%var_891, dtype="float32") /* ty=Tensor[(7, 14, 15), float32] */;
  %877 = cast(meta[relay.Constant][45] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %878 = cast(meta[relay.Constant][45] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %879 = cast(5.02361f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %880 = reshape(%877, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %881 = reshape(%878, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %882 = reshape(%879, newshape=[]) /* ty=float64 */;
  %883 = @func_868(%880, %881, %882) /* ty=(Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) */;
  %884 = cast(meta[relay.Constant][45] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %885 = cast(meta[relay.Constant][45] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %886 = cast(5.02361f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %887 = reshape(%884, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %888 = reshape(%885, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %889 = reshape(%886, newshape=[]) /* ty=float64 */;
  %890 = @func_868(%887, %888, %889) /* ty=(Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) */;
  %891 = cast(5.02361f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %892 = cast(meta[relay.Constant][44] /* ty=Tensor[(104, 2), float64] */, dtype="float64") /* ty=Tensor[(104, 2), float64] */;
  %893 = reshape(%891, newshape=[]) /* ty=float64 */;
  %894 = reshape(%892, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), float64] */;
  %895 = @func_288(%893, %894) /* ty=(Tensor[(4, 4, 13), bool],) */;
  %896 = %895.0;
  %897 = cast(%var_923, dtype="float64") /* ty=Tensor[(4, 4, 13), float64] */;
  %898 = shape_of(%896, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(%896, dtype="float64") /* ty=Tensor[(4, 4, 13), float64] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %901 = cast(meta[relay.Constant][45] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %902 = cast(meta[relay.Constant][45] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %903 = %890.2;
  %904 = cast(%903, dtype="float64") /* ty=float64 */;
  %905 = reshape(%901, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %906 = reshape(%902, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %907 = reshape(%904, newshape=[]) /* ty=float64 */;
  %908 = @func_868(%905, %906, %907) /* ty=(Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) */;
  %909 = cast(%903, dtype="uint16") /* ty=uint16 */;
  %910 = %883.4;
  %911 = cast(%910, dtype="uint16") /* ty=Tensor[(12, 2, 3), uint16] */;
  %912 = reshape(%909, newshape=[]) /* ty=uint16 */;
  %913 = reshape(%911, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), uint16] */;
  %914 = @func_490(%912, %913) /* ty=(Tensor[(12, 2, 3), bool],) */;
  %915 = log(%876) /* ty=Tensor[(7, 14, 15), float32] */;
  %916 = minimum(%899, %900) /* ty=Tensor[(4, 4, 13), float64] */;
  %917 = %908.3;
  %918 = %914.0;
  (%915, 5.02361f64 /* ty=float64 */, meta[relay.Constant][44] /* ty=Tensor[(104, 2), float64] */, %910, meta[relay.Constant][45] /* ty=Tensor[(720), int16] */, %903, %916, %917, %918)
}

def @func_3970() -> (Tensor[(5, 14, 1), float64],) {
  %921 = fn () -> (Tensor[(5, 14, 1), float64],) {
    %919 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
    %920 = %919.0;
    (%920,)
  };
  %921() /* ty=(Tensor[(5, 14, 1), float64],) */
}

def @func_5415() -> Tensor[(5, 14, 1), float32] {
  @func_5413() /* ty=Tensor[(5, 14, 1), float32] */
}

def @func_6483() -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) {
  %922 = @func_3362() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
  %923 = @func_2857() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %924 = %922.0;
  %925 = %923.0;
  (%924, %925)
}

def @func_6228(%var_6227: Tensor[(5, 14, 11), float32]) -> (Tensor[(5, 14, 11), bool],) {
  %931 = fn (%var_6221: Tensor[(5, 14, 11), float32]) -> (Tensor[(5, 14, 11), bool],) {
    %926 = @func_4643() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(1470), float32], Tensor[(1, 208), bool]) */;
    %927 = %926.0;
    %928 = cast(%927, dtype="bool") /* ty=Tensor[(5, 14, 1), bool] */;
    %929 = cast(%var_6221, dtype="bool") /* ty=Tensor[(5, 14, 11), bool] */;
    %930 = logical_and(%928, %929) /* ty=Tensor[(5, 14, 11), bool] */;
    (%930,)
  };
  %931(%var_6227) /* ty=(Tensor[(5, 14, 11), bool],) */
}

def @func_4244() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) {
  %932 = @func_3766() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %933 = @func_2758() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %934 = %932.0;
  %935 = %933.0;
  %936 = @func_2975() /* ty=Tensor[(5, 14, 1), float64] */;
  (%934, %935, %936)
}

def @func_4322() -> (Tensor[(5, 14, 1), float64],) {
  @func_4320() /* ty=(Tensor[(5, 14, 1), float64],) */
}

def @func_6559(%var_6532: Tensor[(1, 13, 10), int8], %var_6533: Tensor[(14, 13, 10), int8]) -> (Tensor[(14, 13, 10), int8], Tensor[(5, 14, 1), float64]) {
  %937 = cast(%var_6532, dtype="int8") /* ty=Tensor[(1, 13, 10), int8] */;
  %938 = cast(%var_6533, dtype="int8") /* ty=Tensor[(14, 13, 10), int8] */;
  %939 = @func_5945() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %940 = left_shift(%937, %938) /* ty=Tensor[(14, 13, 10), int8] */;
  %941 = %939.0;
  (%940, %941)
}

def @func_7556() -> (Tensor[(5, 14, 1), float32], Tensor[(15, 1, 8), float64], Tensor[(120), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) {
  %952 = fn () -> (Tensor[(5, 14, 1), float32], Tensor[(15, 1, 8), float64], Tensor[(120), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) {
    %942 = @func_4818() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %943 = cast(meta[relay.Constant][46] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %944 = reshape(%943, newshape=[15, 1, 8]) /* ty=Tensor[(15, 1, 8), float64] */;
    %945 = @func_1402(%944) /* ty=(Tensor[(15, 1, 8), float64],) */;
    %946 = @func_4793() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float64]) */;
    %947 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %948 = %942.0;
    %949 = %945.0;
    %950 = %946.0;
    %951 = %947.0;
    (%948, %949, meta[relay.Constant][46] /* ty=Tensor[(120), float64] */, %950, %951)
  };
  %952() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(15, 1, 8), float64], Tensor[(120), float64], Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */
}

def @func_4819() -> (Tensor[(5, 14, 1), float32],) {
  %955 = fn () -> (Tensor[(5, 14, 1), float32],) {
    %953 = @func_3362() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
    %954 = %953.1;
    (%954,)
  };
  %955() /* ty=(Tensor[(5, 14, 1), float32],) */
}

def @func_7478() -> (Tensor[(5, 14, 1), float64],) {
  %956 = @func_5316() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %957 = %956.0;
  (%957,)
}

def @func_292(%var_290: float64, %var_291: Tensor[(4, 4, 13), float64]) -> (Tensor[(4, 4, 13), bool],) {
  @func_288(%var_290, %var_291) /* ty=(Tensor[(4, 4, 13), bool],) */
}

def @func_6375(%var_6373: Tensor[(5, 14, 7), float32]) -> Tensor[(5, 14, 7), float32] {
  @func_6372(%var_6373) /* ty=Tensor[(5, 14, 7), float32] */
}

def @func_3537(%var_3536: Tensor[(429), float32]) -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(429), float32]) {
  %966 = fn (%var_3523: Tensor[(429), float32]) -> (Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(429), float32]) {
    %958 = @func_2795() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %959 = @func_3362() /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32]) */;
    %960 = cast(%var_3523, dtype="float32") /* ty=Tensor[(429), float32] */;
    %961 = reshape(%960, newshape=[429]) /* ty=Tensor[(429), float32] */;
    %962 = @func_3243(%961) /* ty=(Tensor[(3, 13, 11), float32], Tensor[(5, 14, 429), bool]) */;
    %963 = %958.0;
    %964 = %959.0;
    %965 = %962.0;
    (%963, %964, %965, %var_3523)
  };
  %966(%var_3536) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(429), float32]) */
}

def @func_7457(%var_7290: Tensor[(9, 1, 2), int64], %var_7291: Tensor[(9, 11, 2), int64], %var_7342: Tensor[(840), float64], %var_7446: Tensor[(756), float64], %var_7454: Tensor[(25), int16]) -> (Tensor[(9, 11, 2), float64], Tensor[(840), float64], Tensor[(2688), bool], Tensor[(5, 14, 1), float64], Tensor[(2688), int32], Tensor[(5, 14, 11), uint64], Tensor[(5, 14, 6), bool], Tensor[(312), int16], Tensor[(5, 14, ?), float32], Tensor[(2688), uint16], Tensor[(9, 6, 14), float64], Tensor[(756), float64], Tensor[(?, 5, 5), float32], Tensor[(25), int16]) {
  %967 = cast(%var_7290, dtype="int64") /* ty=Tensor[(9, 1, 2), int64] */;
  %968 = cast(%var_7291, dtype="int64") /* ty=Tensor[(9, 11, 2), int64] */;
  %969 = left_shift(%967, %968) /* ty=Tensor[(9, 11, 2), int64] */;
  %970 = cast(%var_7290, dtype="float64") /* ty=Tensor[(9, 1, 2), float64] */;
  %971 = cast(%969, dtype="float64") /* ty=Tensor[(9, 11, 2), float64] */;
  %972 = cast(meta[relay.Constant][47] /* ty=Tensor[(2688), int32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %973 = exp(%972) /* ty=Tensor[(2688), float32] */;
  %974 = cast(meta[relay.Constant][47] /* ty=Tensor[(2688), int32] */, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %975 = shape_of(%973, dtype="int32") /* ty=Tensor[(1), int32] */;
  %976 = cast(%973, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?), bool] */;
  %978 = @func_4379() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %979 = cast(%973, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %980 = reshape(%979, newshape=[2688]) /* ty=Tensor[(2688), int32] */;
  %981 = @func_4155(%980) /* ty=(Tensor[(5, 14, ?), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), int32]) */;
  %982 = @func_5413() /* ty=Tensor[(5, 14, 1), float32] */;
  %983 = cast(%982, dtype="uint64") /* ty=Tensor[(5, 14, 1), uint64] */;
  %984 = cast(meta[relay.Constant][48] /* ty=Tensor[(5, 14, 11), float32] */, dtype="uint64") /* ty=Tensor[(5, 14, 11), uint64] */;
  %985 = cast(meta[relay.Constant][49] /* ty=Tensor[(312), int16] */, dtype="int16") /* ty=Tensor[(312), int16] */;
  %986 = reshape(%985, newshape=[8, 13, 3]) /* ty=Tensor[(8, 13, 3), int16] */;
  %987 = @func_3424(%986) /* ty=(Tensor[(8, 13, 3), float64], Tensor[(5, 14, 6), bool], Tensor[(420), float32]) */;
  %988 = @func_4583() /* ty=(Tensor[(5, 14, ?), float32], Tensor[(5, 14, ?), bool]) */;
  %989 = cast(%var_7342, dtype="float64") /* ty=Tensor[(840), float64] */;
  %990 = cast(meta[relay.Constant][47] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %991 = reshape(%989, newshape=[5, 14, 12]) /* ty=Tensor[(5, 14, 12), float64] */;
  %992 = reshape(%990, newshape=[96, 28]) /* ty=Tensor[(96, 28), int32] */;
  %993 = @func_6173(%991, %992) /* ty=(Tensor[(5, 14, 12), int8], Tensor[(5, 14, 1), float64], Tensor[(13, 15, 11), bool], Tensor[(12, 16, 14), float32], Tensor[(96, 28), int32], Tensor[(5, 14, 2145), float32]) */;
  %994 = %993.3;
  %995 = cast(%994, dtype="uint16") /* ty=Tensor[(12, 16, 14), uint16] */;
  %996 = shape_of(%973, dtype="int32") /* ty=Tensor[(1), int32] */;
  %997 = cast(%973, dtype="uint16") /* ty=Tensor[(2688), uint16] */;
  %998 = dyn.reshape(%995, %996, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %999 = cast(%var_7446, dtype="float64") /* ty=Tensor[(756), float64] */;
  %1000 = cast(%var_7446, dtype="float64") /* ty=Tensor[(756), float64] */;
  %1001 = reshape(%999, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %1002 = reshape(%1000, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %1003 = @func_1155(%1001, %1002) /* ty=(Tensor[(9, 6, 14), float64],) */;
  %1004 = cast(%var_7454, dtype="int16") /* ty=Tensor[(25), int16] */;
  %1005 = cast(%var_7454, dtype="int16") /* ty=Tensor[(25), int16] */;
  %1006 = reshape(%1004, newshape=[1, 5, 5]) /* ty=Tensor[(1, 5, 5), int16] */;
  %1007 = reshape(%1005, newshape=[1, 5, 5]) /* ty=Tensor[(1, 5, 5), int16] */;
  %1008 = @func_5189(%1006, %1007) /* ty=(Tensor[(5, 14, 1), float64], Tensor[(?, 5, 5), float32]) */;
  %1009 = maximum(%970, %971) /* ty=Tensor[(9, 11, 2), float64] */;
  %1010 = not_equal(%976, %977) /* ty=Tensor[(2688), bool] */;
  %1011 = %978.0;
  %1012 = %981.2;
  %1013 = maximum(%983, %984) /* ty=Tensor[(5, 14, 11), uint64] */;
  %1014 = %987.1;
  %1015 = %988.0;
  %1016 = logical_xor(%997, %998) /* ty=Tensor[(2688), uint16] */;
  %1017 = %1003.0;
  %1018 = %1008.1;
  (%1009, %var_7342, %1010, %1011, %1012, %1013, %1014, meta[relay.Constant][49] /* ty=Tensor[(312), int16] */, %1015, %1016, %1017, %var_7446, %1018, %var_7454)
}

def @func_8126(%var_8096: Tensor[(15, 13, 11), float64]) -> Tensor[(15, 13, 11), float64] {
  %1019 = cast(%var_8096, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
  sqrt(%1019) /* ty=Tensor[(15, 13, 11), float64] */
}

def @func_2258(%var_2256: Tensor[(2, 8, 14), float32], %var_2257: Tensor[(1, 120), float64]) -> (Tensor[(15, 1, 8), float64], Tensor[(1, 120), float64], Tensor[(2, 8, 14), uint64]) {
  @func_2254(%var_2256, %var_2257) /* ty=(Tensor[(15, 1, 8), float64], Tensor[(1, 120), float64], Tensor[(2, 8, 14), uint64]) */
}

def @func_4158(%var_4156: Tensor[(2688), int32]) -> (Tensor[(5, 14, ?), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), int32]) {
  @func_4155(%var_4156) /* ty=(Tensor[(5, 14, ?), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), int32]) */
}

def @func_1247(%var_1175: Tensor[(11, 12, 13), int32], %var_1183: float64, %var_1187: Tensor[(756), float64], %var_1207: Tensor[(104, 2), bool]) -> (Tensor[(11, 12, 13), bool], float64, Tensor[(720), int16], float64, Tensor[(756), float64], Tensor[(208), float64], Tensor[(1470), float32], Tensor[(104, 2), bool], Tensor[(4, 4, 13), float64], Tensor[(4, 4, 13), bool], Tensor[(9, 6, 14), float64], Tensor[(4, 4, 13), bool]) {
  %1020 = cast(%var_1175, dtype="bool") /* ty=Tensor[(11, 12, 13), bool] */;
  %1021 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(11, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1022 = cast(meta[relay.Constant][50] /* ty=Tensor[(11, 12, 13), int32] */, dtype="bool") /* ty=Tensor[(11, 12, 13), bool] */;
  %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1024 = cast(meta[relay.Constant][51] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %1025 = cast(meta[relay.Constant][51] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %1026 = cast(%var_1183, dtype="float64") /* ty=float64 */;
  %1027 = reshape(%1024, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %1028 = reshape(%1025, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), int16] */;
  %1029 = reshape(%1026, newshape=[]) /* ty=float64 */;
  %1030 = @func_868(%1027, %1028, %1029) /* ty=(Tensor[(12, 4, 15), int16], Tensor[(4, 4, 13), bool], float64, Tensor[(208), float64], Tensor[(12, 2, 3), bool], Tensor[(72, 1), uint16]) */;
  %1031 = cast(meta[relay.Constant][52] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1032 = cast(%var_1207, dtype="bool") /* ty=Tensor[(104, 2), bool] */;
  %1033 = reshape(%1031, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %1034 = reshape(%1032, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), bool] */;
  %1035 = @func_941(%1033, %1034) /* ty=(Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) */;
  %1036 = cast(meta[relay.Constant][52] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1037 = %1035.7;
  %1038 = cast(%1037, dtype="bool") /* ty=Tensor[(208), bool] */;
  %1039 = reshape(%1036, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %1040 = reshape(%1038, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), bool] */;
  %1041 = @func_941(%1039, %1040) /* ty=(Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) */;
  %1042 = cast(%var_1183, dtype="float64") /* ty=float64 */;
  %1043 = cast(%var_1207, dtype="float64") /* ty=Tensor[(104, 2), float64] */;
  %1044 = reshape(%1042, newshape=[]) /* ty=float64 */;
  %1045 = reshape(%1043, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), float64] */;
  %1046 = @func_288(%1044, %1045) /* ty=(Tensor[(4, 4, 13), bool],) */;
  %1047 = cast(%var_1187, dtype="float64") /* ty=Tensor[(756), float64] */;
  %1048 = cast(%var_1187, dtype="float64") /* ty=Tensor[(756), float64] */;
  %1049 = reshape(%1047, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %1050 = reshape(%1048, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %1051 = @func_1155(%1049, %1050) /* ty=(Tensor[(9, 6, 14), float64],) */;
  %1052 = %1051.0;
  %1053 = cast(%1052, dtype="float32") /* ty=Tensor[(9, 6, 14), float32] */;
  %1054 = asinh(%1053) /* ty=Tensor[(9, 6, 14), float32] */;
  %1055 = cast(%1054, dtype="float64") /* ty=Tensor[(9, 6, 14), float64] */;
  %1056 = %1030.2;
  %1057 = cast(%1056, dtype="float64") /* ty=float64 */;
  %1058 = cast(%1037, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1059 = reshape(%1057, newshape=[]) /* ty=float64 */;
  %1060 = reshape(%1058, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), float64] */;
  %1061 = @func_288(%1059, %1060) /* ty=(Tensor[(4, 4, 13), bool],) */;
  %1062 = greater(%1022, %1023) /* ty=Tensor[(11, 12, 13), bool] */;
  %1063 = %1041.6;
  %1064 = %1046.0;
  %1065 = exp(%1055) /* ty=Tensor[(9, 6, 14), float64] */;
  %1066 = %1061.0;
  (%1062, %1056, meta[relay.Constant][51] /* ty=Tensor[(720), int16] */, %var_1183, %var_1187, %1037, meta[relay.Constant][52] /* ty=Tensor[(1470), float32] */, %var_1207, %1063, %1064, %1065, %1066)
}

def @func_5052(%var_5040: Tensor[(8), int8], %var_5041: Tensor[(192), int8]) -> (Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 1), float64], Tensor[(3, 13, 11), float32], Tensor[(429), float32], Tensor[(5, 14, 1), float64], Tensor[(8), int8], Tensor[(192), int8]) {
  %1067 = @func_4320() /* ty=(Tensor[(5, 14, 1), float64],) */;
  %1068 = %1067.0;
  %1069 = cast(%1068, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
  %1070 = cast(meta[relay.Constant][53] /* ty=Tensor[(5, 14, 13), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 13), float64] */;
  %1071 = cast(meta[relay.Constant][53] /* ty=Tensor[(5, 14, 13), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 13), float64] */;
  %1072 = cast(meta[relay.Constant][54] /* ty=Tensor[(429), float32] */, dtype="float32") /* ty=Tensor[(429), float32] */;
  %1073 = reshape(%1072, newshape=[429]) /* ty=Tensor[(429), float32] */;
  %1074 = @func_3535(%1073) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(5, 14, 1), float32], Tensor[(3, 13, 11), float32], Tensor[(429), float32]) */;
  %1075 = cast(%var_5040, dtype="int8") /* ty=Tensor[(8), int8] */;
  %1076 = cast(%var_5041, dtype="int8") /* ty=Tensor[(192), int8] */;
  %1077 = reshape(%1075, newshape=[1, 1, 8]) /* ty=Tensor[(1, 1, 8), int8] */;
  %1078 = reshape(%1076, newshape=[8, 3, 8]) /* ty=Tensor[(8, 3, 8), int8] */;
  %1079 = @func_4682(%1077, %1078) /* ty=(Tensor[(8, 3, 8), bool], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
  %1080 = floor_divide(%1069, %1070) /* ty=Tensor[(5, 14, 13), float64] */;
  %1081 = sinh(%1071) /* ty=Tensor[(5, 14, 13), float64] */;
  %1082 = @func_3948() /* ty=Tensor[(5, 14, 1), float64] */;
  %1083 = %1074.2;
  %1084 = %1079.2;
  (%1080, %1081, %1082, %1083, meta[relay.Constant][54] /* ty=Tensor[(429), float32] */, %1084, %var_5040, %var_5041)
}

def @func_2945(%var_2944: Tensor[(208), bool]) -> (Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(12, 2, 3), bool], uint16, Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool]) {
  %1107 = fn (%var_2875: Tensor[(208), bool]) -> (Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(12, 2, 3), bool], uint16, Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool]) {
    %1085 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %1086 = cast(meta[relay.Constant][55] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %1087 = cast(%var_2875, dtype="bool") /* ty=Tensor[(208), bool] */;
    %1088 = reshape(%1086, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
    %1089 = reshape(%1087, newshape=[4, 4, 13]) /* ty=Tensor[(4, 4, 13), bool] */;
    %1090 = @func_941(%1088, %1089) /* ty=(Tensor[(7, 14, 15), float32], float64, Tensor[(104, 2), float64], Tensor[(12, 2, 3), bool], Tensor[(720), int16], float64, Tensor[(4, 4, 13), float64], Tensor[(208), float64], Tensor[(12, 2, 3), bool]) */;
    %1091 = cast(meta[relay.Constant][56] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %1092 = %1090.8;
    %1093 = cast(%1092, dtype="uint16") /* ty=Tensor[(12, 2, 3), uint16] */;
    %1094 = reshape(%1091, newshape=[]) /* ty=uint16 */;
    %1095 = reshape(%1093, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), uint16] */;
    %1096 = @func_490(%1094, %1095) /* ty=(Tensor[(12, 2, 3), bool],) */;
    %1097 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
    %1098 = cast(meta[relay.Constant][56] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %1099 = %1096.0;
    %1100 = cast(%1099, dtype="uint16") /* ty=Tensor[(12, 2, 3), uint16] */;
    %1101 = reshape(%1098, newshape=[]) /* ty=uint16 */;
    %1102 = reshape(%1100, newshape=[12, 2, 3]) /* ty=Tensor[(12, 2, 3), uint16] */;
    %1103 = @func_490(%1101, %1102) /* ty=(Tensor[(12, 2, 3), bool],) */;
    %1104 = %1085.0;
    %1105 = %1097.0;
    %1106 = %1103.0;
    (%1104, %1092, meta[relay.Constant][55] /* ty=Tensor[(1470), float32] */, %var_2875, %1099, meta[relay.Constant][56] /* ty=uint16 */, %1105, %1106)
  };
  %1107(%var_2944) /* ty=(Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool], Tensor[(1470), float32], Tensor[(208), bool], Tensor[(12, 2, 3), bool], uint16, Tensor[(5, 14, 1), float32], Tensor[(12, 2, 3), bool]) */
}

def @func_4838() -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
  %1112 = fn () -> (Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) {
    %1108 = @func_3969() /* ty=(Tensor[(5, 14, 1), float64],) */;
    %1109 = @func_4759() /* ty=(Tensor[(1470), float32], Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */;
    %1110 = %1108.0;
    %1111 = %1109.2;
    (%1110, %1111)
  };
  %1112() /* ty=(Tensor[(5, 14, 1), float64], Tensor[(5, 14, 1), float64]) */
}

def @func_4986() -> Tensor[(5, 14, 1), float32] {
  %1113 = @func_2584() /* ty=(Tensor[(5, 14, 1), float32],) */;
  %1113.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

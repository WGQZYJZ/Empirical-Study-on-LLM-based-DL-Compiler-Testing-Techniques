==========mod==========
#[version = "0.0.5"]
def @func_482(%var_465: Tensor[(60), int8], %var_466: int32) -> (Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], Tensor[(60), int8], int32) {
  %0 = cast(%var_465, dtype="int8") /* ty=Tensor[(60), int8] */;
  %1 = cast(%var_465, dtype="int8") /* ty=Tensor[(60), int8] */;
  %2 = cast(%var_466, dtype="int32") /* ty=int32 */;
  %3 = reshape(%0, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), int8] */;
  %4 = reshape(%1, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), int8] */;
  %5 = reshape(%2, newshape=[]) /* ty=int32 */;
  %6 = @func_392(%3, %4, %5) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32], Tensor[(15, 2, 4), bool]) */;
  %7 = @func_347() /* ty=Tensor[(15, 2, 4), float64] */;
  %8 = %6.2;
  (%7, %8, %var_465, %var_466)
}

def @func_3373() -> Tensor[(15, 2, 4), float64] {
  @func_3304() /* ty=Tensor[(15, 2, 4), float64] */
}

def @main() -> (Tensor[(12, 15, 4), float64],) {
  %9 = @func_9656() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %10 = %9.0;
  %11 = cast(%10, dtype="float64") /* ty=Tensor[(12, 15, 4), float64] */;
  %12 = sinh(%11) /* ty=Tensor[(12, 15, 4), float64] */;
  (%12,)
}

def @func_3849() -> (Tensor[(9, 11, 5), float64], Tensor[(15, 2, 4), float64]) {
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(9, 11, 5), float64] */;
  %14 = @func_2808() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %15 = exp(%13) /* ty=Tensor[(9, 11, 5), float64] */;
  %16 = %14.0;
  (%15, %16)
}

def @func_9355() -> (Tensor[(15, 2, 4), float64],) {
  %17 = @func_8226() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %18 = %17.0;
  (%18,)
}

def @func_4288() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  %19 = @func_1690() /* ty=Tensor[(15, 2, 4), float64] */;
  %20 = cast(%19, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %21 = reshape(%20, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %22 = @func_2458(%21) /* ty=(Tensor[(15, 2, 4), uint32], Tensor[(15, 2, 4), float32]) */;
  %23 = %22.1;
  (%19, %23)
}

def @func_3503() -> (Tensor[(15, 2, 4), float64],) {
  %24 = @func_1690() /* ty=Tensor[(15, 2, 4), float64] */;
  (%24,)
}

def @func_7409() -> (Tensor[(15, 2, 4), float64], Tensor[(12, 5, ?), float32]) {
  %25 = @func_6150() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %26 = cast(meta[relay.Constant][1] /* ty=Tensor[(12, 5, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 1), float64] */;
  %27 = atanh(%26) /* ty=Tensor[(12, 5, 1), float64] */;
  %28 = cast(meta[relay.Constant][1] /* ty=Tensor[(12, 5, 1), float64] */, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
  %29 = shape_of(%27, dtype="int32") /* ty=Tensor[(3), int32] */;
  %30 = cast(%27, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %32 = %25.1;
  %33 = floor_mod(%30, %31) /* ty=Tensor[(12, 5, ?), float32] */;
  (%32, %33)
}

def @func_2970() -> Tensor[(15, 2, 4), float64] {
  %34 = @func_1162() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %34.0
}

def @func_9533() -> Tensor[(15, 2, 4), float64] {
  %35 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %35.1
}

def @func_4112() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %36 = @func_420() /* ty=Tensor[(15, 2, 4), float64] */;
  %37 = @func_3373() /* ty=Tensor[(15, 2, 4), float64] */;
  %38 = @func_3736() /* ty=Tensor[(15, 2, 4), bool] */;
  (%36, %37, %38)
}

def @func_8945() -> (Tensor[(15, 2, 4), float64],) {
  %39 = @func_5389() /* ty=Tensor[(15, 2, 4), float64] */;
  (%39,)
}

def @func_6870(%var_6861: Tensor[(11, 4, 14), float32]) -> (Tensor[(11, 4, 14), float64], Tensor[(15, 2, 4), bool]) {
  %40 = cast(%var_6861, dtype="float32") /* ty=Tensor[(11, 4, 14), float32] */;
  %41 = acos(%40) /* ty=Tensor[(11, 4, 14), float32] */;
  %42 = cast(%41, dtype="float64") /* ty=Tensor[(11, 4, 14), float64] */;
  %43 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %44 = sigmoid(%42) /* ty=Tensor[(11, 4, 14), float64] */;
  %45 = %43.1;
  (%44, %45)
}

def @func_2458(%var_2426: Tensor[(15, 2, 4), float64]) -> (Tensor[(15, 2, 4), uint32], Tensor[(15, 2, 4), float32]) {
  %46 = @func_1146() /* ty=Tensor[(15, 2, 4), float64] */;
  %47 = cast(%var_2426, dtype="uint32") /* ty=Tensor[(15, 2, 4), uint32] */;
  %48 = shape_of(%46, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%46, dtype="uint32") /* ty=Tensor[(15, 2, 4), uint32] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %51 = cast(%var_2426, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %52 = reshape(%51, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %53 = @func_920(%52) /* ty=(Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float32]) */;
  %54 = bitwise_or(%49, %50) /* ty=Tensor[(15, 2, 4), uint32] */;
  %55 = %53.1;
  (%54, %55)
}

def @func_10693() -> (Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float64], Tensor[(15, 2, 4), float64]) {
  %56 = @func_4857() /* ty=(Tensor[(15, 2, 4), float32],) */;
  %57 = @func_8929() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %58 = %57.0;
  %59 = cast(%58, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %60 = reshape(%59, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %61 = @func_920(%60) /* ty=(Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float32]) */;
  %62 = @func_8589() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %63 = @func_2601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) */;
  %64 = %63.2;
  %65 = cast(%64, dtype="float64") /* ty=Tensor[(3, 20), float64] */;
  %66 = @func_10597() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %67 = %56.0;
  %68 = %61.0;
  %69 = %62.0;
  %70 = acos(%65) /* ty=Tensor[(3, 20), float64] */;
  %71 = %66.0;
  (%67, %58, %68, %69, %70, %71)
}

def @func_5758() -> Tensor[(15, 2, 4), float64] {
  %72 = @func_1676() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %72.1
}

def @func_9732() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %73 = @func_1927() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %74 = @func_3747() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %75 = @func_5389() /* ty=Tensor[(15, 2, 4), float64] */;
  %76 = %73.0;
  %77 = %74.0;
  (%75, %76, %77)
}

def @func_6031() -> (Tensor[(15, 2, 4), float64],) {
  %78 = @func_1927() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %79 = %78.0;
  (%79,)
}

def @func_8733() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %80 = @func_8165() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %81 = %80.2;
  %82 = cast(%81, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %83 = reshape(%82, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %84 = @func_1893(%83) /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %85 = %84.0;
  (%81, %85)
}

def @func_2411(%var_2340: Tensor[(6, 5, 9), float32], %var_2341: Tensor[(6, 5, 9), float32], %var_2390: Tensor[(6, 5, 9), float32]) -> (Tensor[(15, 2, 4), float64], Tensor[(6, 5, 9), bool], Tensor[(15, 2, 4), float64], Tensor[(6, 5, 9), uint16]) {
  %86 = @func_1676() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %87 = cast(%var_2341, dtype="float32") /* ty=Tensor[(6, 5, 9), float32] */;
  %88 = shape_of(%var_2340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%var_2340, dtype="float32") /* ty=Tensor[(6, 5, 9), float32] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %91 = power(%89, %90) /* ty=Tensor[(6, 5, 9), float32] */;
  %92 = cast(%var_2340, dtype="uint64") /* ty=Tensor[(6, 5, 9), uint64] */;
  %93 = shape_of(%91, dtype="int32") /* ty=Tensor[(3), int32] */;
  %94 = cast(%91, dtype="uint64") /* ty=Tensor[(6, 5, 9), uint64] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %96 = right_shift(%94, %95) /* ty=Tensor[(6, 5, 9), uint64] */;
  %97 = cast(%96, dtype="bool") /* ty=Tensor[(6, 5, 9), bool] */;
  %98 = shape_of(%var_2340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%var_2340, dtype="bool") /* ty=Tensor[(6, 5, 9), bool] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %101 = cast(%var_2390, dtype="uint16") /* ty=Tensor[(6, 5, 9), uint16] */;
  %102 = shape_of(%var_2340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %103 = cast(%var_2340, dtype="uint16") /* ty=Tensor[(6, 5, 9), uint16] */;
  %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %105 = %86.1;
  %106 = greater(%99, %100) /* ty=Tensor[(6, 5, 9), bool] */;
  %107 = @func_1146() /* ty=Tensor[(15, 2, 4), float64] */;
  %108 = bitwise_or(%103, %104) /* ty=Tensor[(6, 5, 9), uint16] */;
  (%105, %106, %107, %108)
}

def @func_5244() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %109 = @func_4066() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %110 = @func_3903() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %111 = %109.1;
  %112 = %110.0;
  (%111, %112)
}

def @func_8463(%var_8418: Tensor[(1, 3, 7), float32], %var_8433: Tensor[(1, 120), float64]) -> (Tensor[(132), int32], Tensor[(60), int8], int32, Tensor[(15, 2, 4), float64], Tensor[(1, 120), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(?, 3, 7), float32], Tensor[(?, 3, 7), uint32], Tensor[(?, 3, 7), float32]) {
  %113 = cast(meta[relay.Constant][2] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
  %114 = cast(meta[relay.Constant][2] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
  %115 = cast(-2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %116 = reshape(%113, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), int8] */;
  %117 = reshape(%114, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), int8] */;
  %118 = reshape(%115, newshape=[]) /* ty=int32 */;
  %119 = @func_392(%116, %117, %118) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32], Tensor[(15, 2, 4), bool]) */;
  %120 = cast(%var_8433, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
  %121 = reshape(%120, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %122 = @func_1893(%121) /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %123 = @func_2881() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %124 = @func_6216() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
  %125 = cast(%var_8418, dtype="float32") /* ty=Tensor[(1, 3, 7), float32] */;
  %126 = erf(%125) /* ty=Tensor[(1, 3, 7), float32] */;
  %127 = cast(%126, dtype="float32") /* ty=Tensor[(1, 3, 7), float32] */;
  %128 = atan(%127) /* ty=Tensor[(1, 3, 7), float32] */;
  %129 = cast(%126, dtype="int16") /* ty=Tensor[(1, 3, 7), int16] */;
  %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %131 = cast(%128, dtype="int16") /* ty=Tensor[(1, 3, 7), int16] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %133 = subtract(%131, %132) /* ty=Tensor[(?, 3, 7), int16] */;
  %134 = cast(%133, dtype="float32") /* ty=Tensor[(?, 3, 7), float32] */;
  %135 = shape_of(%126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %136 = cast(%126, dtype="float32") /* ty=Tensor[(1, 3, 7), float32] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %138 = cast(%133, dtype="uint32") /* ty=Tensor[(?, 3, 7), uint32] */;
  %139 = shape_of(%126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %140 = cast(%126, dtype="uint32") /* ty=Tensor[(1, 3, 7), uint32] */;
  %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %142 = cast(%133, dtype="float32") /* ty=Tensor[(?, 3, 7), float32] */;
  %143 = %119.4;
  %144 = %122.1;
  %145 = %123.0;
  %146 = %124.1;
  %147 = floor_divide(%136, %137) /* ty=Tensor[(?, 3, 7), float32] */;
  %148 = bitwise_and(%140, %141) /* ty=Tensor[(?, 3, 7), uint32] */;
  %149 = cosh(%142) /* ty=Tensor[(?, 3, 7), float32] */;
  (%143, meta[relay.Constant][2] /* ty=Tensor[(60), int8] */, -2 /* ty=int32 */, %144, %var_8433, %145, %146, %147, %148, %149)
}

def @func_2206() -> Tensor[(15, 2, 4), float64] {
  @func_347() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_3040() -> (Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float32]) {
  %150 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %151 = @func_1097() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
  %152 = %150.0;
  %153 = %151.2;
  (%152, %153)
}

def @func_1812() -> Tensor[(15, 2, 4), float64] {
  %154 = @func_1162() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %154.0
}

def @func_2900(%var_2887: Tensor[(13, 14, 5), float32]) -> (Tensor[(13, 14, 5), float32],) {
  %155 = cast(%var_2887, dtype="float32") /* ty=Tensor[(13, 14, 5), float32] */;
  %156 = acosh(%155) /* ty=Tensor[(13, 14, 5), float32] */;
  (%156,)
}

def @func_5536(%var_5517: Tensor[(15, 9, 1), uint64]) -> (Tensor[(15, 9, ?), bool],) {
  %157 = cast(meta[relay.Constant][3] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %158 = cast(%var_5517, dtype="uint64") /* ty=Tensor[(15, 9, 1), uint64] */;
  %159 = bitwise_and(%157, %158) /* ty=Tensor[(15, 9, 1), uint64] */;
  %160 = cast(%159, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %161 = shape_of(%var_5517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %162 = cast(%var_5517, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %164 = logical_and(%162, %163) /* ty=Tensor[(15, 9, ?), bool] */;
  (%164,)
}

def @func_73() -> (Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) {
  %165 = cast(meta[relay.Constant][5] /* ty=Tensor[(15, 2, 4), int32] */, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %166 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(15, 2, 4), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 2, 4), int32] */, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %169 = cast(meta[relay.Constant][5] /* ty=Tensor[(15, 2, 4), int32] */, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %170 = less(%167, %168) /* ty=Tensor[(15, 2, 4), bool] */;
  %171 = atan(%169) /* ty=Tensor[(15, 2, 4), float64] */;
  (%170, %171)
}

def @func_3522() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  %172 = @func_2881() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %173 = %172.0;
  %174 = cast(%173, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %175 = reshape(%174, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %176 = @func_920(%175) /* ty=(Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float32]) */;
  %177 = %176.0;
  (%173, %177)
}

def @func_679(%var_671: Tensor[(60, 1), int8], %var_672: int32) -> (Tensor[(15, 2, 4), float64], int32, Tensor[(60, 1), int8], int32, Tensor[(15, 2, 4), float64]) {
  %178 = cast(%var_671, dtype="int8") /* ty=Tensor[(60, 1), int8] */;
  %179 = cast(%var_672, dtype="int32") /* ty=int32 */;
  %180 = reshape(%178, newshape=[60]) /* ty=Tensor[(60), int8] */;
  %181 = reshape(%179, newshape=[]) /* ty=int32 */;
  %182 = @func_482(%180, %181) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], Tensor[(60), int8], int32) */;
  %183 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %184 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  %185 = %182.3;
  %186 = %183.0;
  (%184, %185, %var_671, %var_672, %186)
}

def @func_6231() -> Tensor[(15, 2, 4), float64] {
  %187 = @func_4112() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %187.0
}

def @func_6061() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %188 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %189 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %190 = %188.1;
  %191 = %189.1;
  (%190, %191)
}

def @func_10249() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %192 = @func_1601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %193 = %192.2;
  %194 = @func_3304() /* ty=Tensor[(15, 2, 4), float64] */;
  (%193, %194)
}

def @func_642() -> Tensor[(15, 2, 4), float64] {
  %195 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %196 = %195.0;
  %197 = cast(%196, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  asin(%197) /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_8667() -> (Tensor[(15, 2, 4), float64],) {
  %198 = @func_7681() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %199 = %198.0;
  (%199,)
}

def @func_2836(%var_2823: Tensor[(15, 2, 4), bool]) -> (Tensor[(15, 2, 4), int8], Tensor[(15, 2, 4), int16]) {
  %200 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %201 = %200.1;
  %202 = cast(%var_2823, dtype="int8") /* ty=Tensor[(15, 2, 4), int8] */;
  %203 = shape_of(%201, dtype="int32") /* ty=Tensor[(3), int32] */;
  %204 = cast(%201, dtype="int8") /* ty=Tensor[(15, 2, 4), int8] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %206 = cast(%201, dtype="int16") /* ty=Tensor[(15, 2, 4), int16] */;
  %207 = shape_of(%var_2823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(%var_2823, dtype="int16") /* ty=Tensor[(15, 2, 4), int16] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %210 = left_shift(%204, %205) /* ty=Tensor[(15, 2, 4), int8] */;
  %211 = add(%208, %209) /* ty=Tensor[(15, 2, 4), int16] */;
  (%210, %211)
}

def @func_8165() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %212 = @func_7042() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %213 = @func_3979() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %214 = @func_1601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %215 = %212.0;
  %216 = %213.0;
  %217 = %214.2;
  (%215, %216, %217)
}

def @func_8529(%var_8512: uint16, %var_8513: Tensor[(8, 16, 8), uint16]) -> (Tensor[(8, 16, 8), uint16], Tensor[(8, 16, 8), bool], Tensor[(8, 16, 8), float64]) {
  %218 = cast(%var_8512, dtype="uint16") /* ty=uint16 */;
  %219 = cast(%var_8513, dtype="uint16") /* ty=Tensor[(8, 16, 8), uint16] */;
  %220 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 16, 8), uint16] */, dtype="bool") /* ty=Tensor[(8, 16, 8), bool] */;
  %221 = shape_of(%var_8513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(%var_8513, dtype="bool") /* ty=Tensor[(8, 16, 8), bool] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %224 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 16, 8), uint16] */, dtype="float64") /* ty=Tensor[(8, 16, 8), float64] */;
  %225 = logical_xor(%218, %219) /* ty=Tensor[(8, 16, 8), uint16] */;
  %226 = greater(%222, %223) /* ty=Tensor[(8, 16, 8), bool] */;
  %227 = log10(%224) /* ty=Tensor[(8, 16, 8), float64] */;
  (%225, %226, %227)
}

def @func_10404() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %228 = @func_7681() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %229 = @func_7573() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %230 = @func_9248() /* ty=(Tensor[(15, 2, 4), bool],) */;
  %231 = %228.1;
  %232 = %229.0;
  %233 = %230.0;
  (%231, %232, %233)
}

def @func_5936(%var_5898: Tensor[(132, 1), int32]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint16], Tensor[(11, 6, 2), int16], int32, Tensor[(132, 1), int32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), bool]) {
  %234 = @func_1230() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %235 = @func_1230() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %236 = %235.0;
  %237 = cast(%236, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %238 = reshape(%237, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %239 = @func_2713(%238) /* ty=(Tensor[(15, 2, 4), uint16], Tensor[(15, 2, 4), bool]) */;
  %240 = cast(-4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %241 = cast(%var_5898, dtype="int32") /* ty=Tensor[(132, 1), int32] */;
  %242 = reshape(%240, newshape=[]) /* ty=int32 */;
  %243 = reshape(%241, newshape=[132]) /* ty=Tensor[(132), int32] */;
  %244 = @func_1181(%242, %243) /* ty=(Tensor[(2, 13, 8), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32]) */;
  %245 = cast(%236, dtype="float32") /* ty=Tensor[(15, 2, 4), float32] */;
  %246 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %247 = %234.0;
  %248 = %239.0;
  %249 = %244.1;
  %250 = exp(%245) /* ty=Tensor[(15, 2, 4), float32] */;
  %251 = %246.1;
  (%247, %248, %249, -4 /* ty=int32 */, %var_5898, %250, %251)
}

def @func_8271(%var_8255: Tensor[(3, 15, 1), float32]) -> Tensor[(3, 15, ?), float32] {
  %252 = cast(%var_8255, dtype="float32") /* ty=Tensor[(3, 15, 1), float32] */;
  %253 = sqrt(%252) /* ty=Tensor[(3, 15, 1), float32] */;
  %254 = cast(%253, dtype="float32") /* ty=Tensor[(3, 15, 1), float32] */;
  %255 = shape_of(%var_8255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(%var_8255, dtype="float32") /* ty=Tensor[(3, 15, 1), float32] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%256, %257) /* ty=Tensor[(3, 15, ?), float32] */
}

def @func_7254() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %258 = @func_4533() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %259 = @func_5482() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %260 = @func_7042() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %261 = %258.3;
  %262 = %259.0;
  %263 = %260.0;
  (%261, %262, %263)
}

def @func_7936() -> (Tensor[(15, 2, 4), float64],) {
  %264 = @func_2881() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %265 = %264.1;
  (%265,)
}

def @func_392(%var_353: Tensor[(5, 3, 4), int8], %var_354: Tensor[(5, 3, 4), int8], %var_379: int32) -> (Tensor[(5, 3, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32], Tensor[(15, 2, 4), bool]) {
  %266 = cast(%var_354, dtype="int8") /* ty=Tensor[(5, 3, 4), int8] */;
  %267 = shape_of(%var_353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(%var_353, dtype="int8") /* ty=Tensor[(5, 3, 4), int8] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %270 = multiply(%268, %269) /* ty=Tensor[(5, 3, 4), int8] */;
  %271 = cast(%270, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
  %272 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %273 = cast(%var_379, dtype="int32") /* ty=int32 */;
  %274 = cast(meta[relay.Constant][7] /* ty=Tensor[(132), int32] */, dtype="int32") /* ty=Tensor[(132), int32] */;
  %275 = reshape(%273, newshape=[]) /* ty=int32 */;
  %276 = reshape(%274, newshape=[11, 6, 2]) /* ty=Tensor[(11, 6, 2), int32] */;
  %277 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %278 = sin(%271) /* ty=Tensor[(5, 3, 4), float64] */;
  %279 = %272.1;
  %280 = @func_211(%275, %276) /* ty=Tensor[(11, 6, 2), int16] */;
  %281 = %277.1;
  (%278, %279, %280, %var_379, meta[relay.Constant][7] /* ty=Tensor[(132), int32] */, %281)
}

def @func_420() -> Tensor[(15, 2, 4), float64] {
  @func_320() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_1162() -> (Tensor[(15, 2, 4), float64],) {
  %282 = @func_347() /* ty=Tensor[(15, 2, 4), float64] */;
  (%282,)
}

def @func_1120() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %283 = @func_454() /* ty=Tensor[(15, 2, 4), float64] */;
  %284 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  %285 = @func_454() /* ty=Tensor[(15, 2, 4), float64] */;
  (%283, %284, %285)
}

def @func_2538(%var_2516: Tensor[(5, 5, 15), float64]) -> (Tensor[(5, 5, 15), float64],) {
  %286 = cast(%var_2516, dtype="float64") /* ty=Tensor[(5, 5, 15), float64] */;
  %287 = acos(%286) /* ty=Tensor[(5, 5, 15), float64] */;
  (%287,)
}

def @func_7573() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %288 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  %289 = @func_2970() /* ty=Tensor[(15, 2, 4), float64] */;
  (%288, %289)
}

def @func_6216() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  %290 = @func_4288() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
  %291 = @func_4479() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %292 = @func_4857() /* ty=(Tensor[(15, 2, 4), float32],) */;
  %293 = %290.0;
  %294 = %291.3;
  %295 = %292.0;
  (%293, %294, %295)
}

def @func_454() -> Tensor[(15, 2, 4), float64] {
  %296 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %296.0
}

def @func_8084() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %297 = @func_4066() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %298 = %297.0;
  %299 = @func_6124() /* ty=Tensor[(15, 2, 4), float64] */;
  (%298, %299)
}

def @func_10529() -> Tensor[(15, 2, 4), float64] {
  %300 = @func_2881() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %300.0
}

def @func_1097() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  %301 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %302 = @func_642() /* ty=Tensor[(15, 2, 4), float64] */;
  %303 = cast(%302, dtype="float32") /* ty=Tensor[(15, 2, 4), float32] */;
  %304 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  %305 = %301.1;
  %306 = cosh(%303) /* ty=Tensor[(15, 2, 4), float32] */;
  (%304, %305, %306)
}

def @func_2693() -> (Tensor[(15, 2, 4), bool],) {
  %307 = @func_2135() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %308 = %307.1;
  (%308,)
}

def @func_2881() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %309 = @func_1120() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %310 = %309.1;
  %311 = @func_347() /* ty=Tensor[(15, 2, 4), float64] */;
  (%310, %311)
}

def @func_6854() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %312 = @func_6031() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %313 = %312.0;
  %314 = cast(%313, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %315 = reshape(%314, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %316 = @func_1893(%315) /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %317 = @func_4533() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %318 = %316.1;
  %319 = %317.3;
  (%313, %318, %319)
}

def @func_3736() -> Tensor[(15, 2, 4), bool] {
  %320 = @func_3347() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %320.1
}

def @func_7042() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %321 = @func_1927() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %322 = @func_4066() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %323 = %321.1;
  %324 = @func_6672() /* ty=Tensor[(15, 2, 4), float64] */;
  %325 = %322.1;
  %326 = @func_1690() /* ty=Tensor[(15, 2, 4), float64] */;
  (%323, %324, %325, %326)
}

def @func_3409() -> Tensor[(15, 2, 4), float64] {
  %327 = @func_3126() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %327.0
}

def @func_8628() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %328 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %329 = @func_1812() /* ty=Tensor[(15, 2, 4), float64] */;
  %330 = @func_5994() /* ty=Tensor[(15, 2, 4), float64] */;
  %331 = %328.1;
  (%329, %330, %331)
}

def @func_4503(%var_4482: Tensor[(1, 14, 9), int64], %var_4483: Tensor[(1, 14, 9), int64]) -> (Tensor[(?, 14, 9), int64], Tensor[(1, 14, 9), float64]) {
  %332 = cast(%var_4483, dtype="int64") /* ty=Tensor[(1, 14, 9), int64] */;
  %333 = shape_of(%var_4482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%var_4482, dtype="int64") /* ty=Tensor[(1, 14, 9), int64] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %336 = cast(%var_4483, dtype="float64") /* ty=Tensor[(1, 14, 9), float64] */;
  %337 = left_shift(%334, %335) /* ty=Tensor[(?, 14, 9), int64] */;
  %338 = cosh(%336) /* ty=Tensor[(1, 14, 9), float64] */;
  (%337, %338)
}

def @func_6649(%var_6638: Tensor[(66, 6), uint8], %var_6641: Tensor[(60), int8]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 12, 3), uint8], Tensor[(66, 6), uint8], Tensor[(5, 3, 4), float64], Tensor[(60), int8], int32) {
  %339 = @func_5116() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %340 = @func_3849() /* ty=(Tensor[(9, 11, 5), float64], Tensor[(15, 2, 4), float64]) */;
  %341 = cast(%var_6638, dtype="uint8") /* ty=Tensor[(66, 6), uint8] */;
  %342 = cast(%var_6638, dtype="uint8") /* ty=Tensor[(66, 6), uint8] */;
  %343 = reshape(%341, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), uint8] */;
  %344 = reshape(%342, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), uint8] */;
  %345 = cast(%var_6641, dtype="int8") /* ty=Tensor[(60), int8] */;
  %346 = cast(%var_6641, dtype="int8") /* ty=Tensor[(60), int8] */;
  %347 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %348 = reshape(%345, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), int8] */;
  %349 = reshape(%346, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), int8] */;
  %350 = reshape(%347, newshape=[]) /* ty=int32 */;
  %351 = @func_392(%348, %349, %350) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32], Tensor[(15, 2, 4), bool]) */;
  %352 = %339.0;
  %353 = %340.1;
  %354 = @func_6444(%343, %344) /* ty=Tensor[(11, 12, 3), uint8] */;
  %355 = %351.0;
  (%352, %353, %354, %var_6638, %355, %var_6641, -5 /* ty=int32 */)
}

def @func_6444(%var_6439: Tensor[(11, 12, 3), uint8], %var_6440: Tensor[(11, 12, 3), uint8]) -> Tensor[(11, 12, 3), uint8] {
  %356 = cast(%var_6440, dtype="uint8") /* ty=Tensor[(11, 12, 3), uint8] */;
  %357 = shape_of(%var_6439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %358 = cast(%var_6439, dtype="uint8") /* ty=Tensor[(11, 12, 3), uint8] */;
  %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  add(%358, %359) /* ty=Tensor[(11, 12, 3), uint8] */
}

def @func_3304() -> Tensor[(15, 2, 4), float64] {
  %360 = @func_1097() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
  %360.1
}

def @func_5455() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %361 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %362 = @func_347() /* ty=Tensor[(15, 2, 4), float64] */;
  %363 = %361.1;
  (%362, %363)
}

def @func_7730() -> (Tensor[(15, 2, 4), uint32], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  %364 = @func_5419() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint32]) */;
  %365 = @func_5482() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %366 = @func_4479() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %367 = @func_7409() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(12, 5, ?), float32]) */;
  %368 = @func_4857() /* ty=(Tensor[(15, 2, 4), float32],) */;
  %369 = %364.1;
  %370 = %365.0;
  %371 = %366.1;
  %372 = %367.0;
  %373 = %368.0;
  (%369, %370, %371, %372, %373)
}

def @func_9817() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32]) {
  %374 = @func_1230() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %375 = @func_2808() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %376 = %374.0;
  %377 = %375.0;
  %378 = @func_9035() /* ty=Tensor[(3, 20), float32] */;
  (%376, %377, %378)
}

def @func_4712(%var_4680: Tensor[(14, 11, 2), float32], %var_4702: Tensor[(14, 11, 2), float32]) -> (Tensor[(15, 2, 4), int16], Tensor[(120), bool], Tensor[(14, 11, 2), float32], Tensor[(14, 11, 2), bool]) {
  %379 = cast(meta[relay.Constant][8] /* ty=Tensor[(120), bool] */, dtype="bool") /* ty=Tensor[(120), bool] */;
  %380 = reshape(%379, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), bool] */;
  %381 = @func_2836(%380) /* ty=(Tensor[(15, 2, 4), int8], Tensor[(15, 2, 4), int16]) */;
  %382 = cast(%var_4680, dtype="float32") /* ty=Tensor[(14, 11, 2), float32] */;
  %383 = acosh(%382) /* ty=Tensor[(14, 11, 2), float32] */;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(14, 11, 2), float32] */;
  %385 = cast(%var_4702, dtype="bool") /* ty=Tensor[(14, 11, 2), bool] */;
  %386 = shape_of(%383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%383, dtype="bool") /* ty=Tensor[(14, 11, 2), bool] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %389 = %381.1;
  %390 = cos(%384) /* ty=Tensor[(14, 11, 2), float32] */;
  %391 = less(%387, %388) /* ty=Tensor[(14, 11, 2), bool] */;
  (%389, meta[relay.Constant][8] /* ty=Tensor[(120), bool] */, %390, %391)
}

def @func_10473() -> Tensor[(15, 2, 4), bool] {
  %392 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %392.0
}

def @func_10161(%var_10156: Tensor[(15, 11, 7), int32], %var_10157: Tensor[(15, 11, 7), int32]) -> Tensor[(15, 11, 7), int32] {
  %393 = cast(%var_10157, dtype="int32") /* ty=Tensor[(15, 11, 7), int32] */;
  %394 = shape_of(%var_10156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%var_10156, dtype="int32") /* ty=Tensor[(15, 11, 7), int32] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  multiply(%395, %396) /* ty=Tensor[(15, 11, 7), int32] */
}

def @func_6124() -> Tensor[(15, 2, 4), float64] {
  %397 = @func_6061() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %398 = %397.0;
  %399 = @func_1146() /* ty=Tensor[(15, 2, 4), float64] */;
  %400 = cast(%399, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %401 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%398, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  maximum(%402, %403) /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_6614() -> Tensor[(15, 2, 4), float64] {
  @func_5389() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_9166() -> Tensor[(15, 2, 4), float64] {
  %404 = @func_2652() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %404.0
}

def @func_320() -> Tensor[(15, 2, 4), float64] {
  %405 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %405.1
}

def @func_1516(%var_1496: Tensor[(8, 1, 14), int64], %var_1497: Tensor[(8, 8, 14), int64]) -> (Tensor[(8, 8, 14), bool], Tensor[(15, 2, 4), float64]) {
  %406 = cast(%var_1496, dtype="bool") /* ty=Tensor[(8, 1, 14), bool] */;
  %407 = cast(%var_1497, dtype="bool") /* ty=Tensor[(8, 8, 14), bool] */;
  %408 = equal(%406, %407) /* ty=Tensor[(8, 8, 14), bool] */;
  %409 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  (%408, %409)
}

def @func_4479() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %410 = @func_2808() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %411 = %410.0;
  %412 = @func_1812() /* ty=Tensor[(15, 2, 4), float64] */;
  %413 = @func_3304() /* ty=Tensor[(15, 2, 4), float64] */;
  %414 = @func_642() /* ty=Tensor[(15, 2, 4), float64] */;
  (%411, %412, %413, %414)
}

def @func_5389() -> Tensor[(15, 2, 4), float64] {
  %415 = @func_1927() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %415.1
}

def @func_8226() -> (Tensor[(15, 2, 4), float64],) {
  %416 = @func_8084() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %417 = %416.0;
  (%417,)
}

def @func_10113(%var_10108: Tensor[(9, 13, 6), float32]) -> (Tensor[(9, 13, 6), float32],) {
  %418 = cast(%var_10108, dtype="float32") /* ty=Tensor[(9, 13, 6), float32] */;
  %419 = sin(%418) /* ty=Tensor[(9, 13, 6), float32] */;
  (%419,)
}

def @func_9124() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %420 = @func_8589() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %421 = @func_3979() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %422 = @func_8401() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %423 = %420.0;
  %424 = %421.0;
  %425 = %422.0;
  (%423, %424, %425)
}

def @func_3747() -> (Tensor[(15, 2, 4), float64],) {
  %426 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  (%426,)
}

def @func_9295() -> (Tensor[(15, 2, 4), float64], Tensor[(3, 20), uint64], Tensor[(15, 2, 4), float64]) {
  %427 = @func_6216() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
  %428 = @func_2601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) */;
  %429 = %428.2;
  %430 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 20), float32] */, dtype="uint64") /* ty=Tensor[(3, 20), uint64] */;
  %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(2), int32] */;
  %432 = cast(%429, dtype="uint64") /* ty=Tensor[(3, 20), uint64] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %434 = %427.0;
  %435 = add(%432, %433) /* ty=Tensor[(3, 20), uint64] */;
  %436 = @func_7113() /* ty=Tensor[(15, 2, 4), float64] */;
  (%434, %435, %436)
}

def @func_4916(%var_4900: Tensor[(16, 5, 7), int64]) -> (Tensor[(16, 5, 7), bool], Tensor[(16, 5, 7), float32]) {
  %437 = cast(%var_4900, dtype="bool") /* ty=Tensor[(16, 5, 7), bool] */;
  %438 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(16, 5, 7), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 5, 7), int64] */, dtype="bool") /* ty=Tensor[(16, 5, 7), bool] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %441 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 5, 7), int64] */, dtype="float32") /* ty=Tensor[(16, 5, 7), float32] */;
  %442 = less(%439, %440) /* ty=Tensor[(16, 5, 7), bool] */;
  %443 = log10(%441) /* ty=Tensor[(16, 5, 7), float32] */;
  (%442, %443)
}

def @func_3787() -> (Tensor[(15, 2, 4), float64],) {
  %444 = @func_3747() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %445 = %444.0;
  (%445,)
}

def @func_9223() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %446 = @func_3282() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %447 = @func_3979() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %448 = @func_8165() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %449 = %446.0;
  %450 = %447.0;
  %451 = %448.1;
  (%449, %450, %451)
}

def @func_5482() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %452 = @func_1414() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %453 = @func_3409() /* ty=Tensor[(15, 2, 4), float64] */;
  %454 = %452.0;
  (%453, %454)
}

def @func_2601() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) {
  %455 = @func_2135() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %456 = @func_1601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %457 = cast(meta[relay.Constant][11] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
  %458 = reshape(%457, newshape=[3, 20]) /* ty=Tensor[(3, 20), int8] */;
  %459 = @func_2330(%458) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(60), int8], Tensor[(3, 20), int8], int32) */;
  %460 = %459.2;
  %461 = cast(meta[relay.Constant][11] /* ty=Tensor[(60), int8] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(2), int32] */;
  %463 = cast(%460, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %465 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %466 = %455.0;
  %467 = %456.1;
  %468 = floor_divide(%463, %464) /* ty=Tensor[(3, 20), float32] */;
  %469 = %465.1;
  (%466, %467, %468, %469)
}

def @func_9888() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %470 = @func_5200() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %471 = @func_3282() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %472 = %470.1;
  %473 = %471.0;
  (%472, %473)
}

def @func_6756() -> (Tensor[(15, 2, 4), float64], uint8, Tensor[(15, 2, 4), float64], Tensor[(112, 8), bool]) {
  %474 = @func_6031() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %475 = cast(meta[relay.Constant][12] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %476 = cast(meta[relay.Constant][13] /* ty=Tensor[(112, 8), uint8] */, dtype="uint8") /* ty=Tensor[(112, 8), uint8] */;
  %477 = reshape(%475, newshape=[]) /* ty=uint8 */;
  %478 = reshape(%476, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), uint8] */;
  %479 = @func_2239(%477, %478) /* ty=Tensor[(8, 14, 8), uint8] */;
  %480 = cast(%479, dtype="bool") /* ty=Tensor[(8, 14, 8), bool] */;
  %481 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(112, 8), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %482 = cast(meta[relay.Constant][13] /* ty=Tensor[(112, 8), uint8] */, dtype="bool") /* ty=Tensor[(112, 8), bool] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %484 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  %485 = %474.0;
  %486 = less_equal(%482, %483) /* ty=Tensor[(112, 8), bool] */;
  (%484, meta[relay.Constant][12] /* ty=uint8 */, %485, %486)
}

def @func_2567() -> Tensor[(15, 2, 4), float64] {
  %487 = @func_2206() /* ty=Tensor[(15, 2, 4), float64] */;
  %488 = cast(%487, dtype="float32") /* ty=Tensor[(15, 2, 4), float32] */;
  %489 = sqrt(%488) /* ty=Tensor[(15, 2, 4), float32] */;
  %490 = cast(%489, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  sinh(%490) /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_10340() -> (Tensor[(15, 2, 4), float64],) {
  %491 = @func_7681() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %492 = %491.0;
  (%492,)
}

def @func_1146() -> Tensor[(15, 2, 4), float64] {
  @func_454() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_1414() -> (Tensor[(15, 2, 4), float64],) {
  %493 = @func_1146() /* ty=Tensor[(15, 2, 4), float64] */;
  (%493,)
}

def @func_3097() -> (Tensor[(3, 20), float32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64]) {
  %494 = @func_2601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) */;
  %495 = @func_2881() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %496 = %495.1;
  %497 = cast(%496, dtype="float32") /* ty=Tensor[(15, 2, 4), float32] */;
  %498 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %499 = %494.2;
  %500 = sin(%497) /* ty=Tensor[(15, 2, 4), float32] */;
  %501 = %498.0;
  (%499, %500, %501)
}

def @func_8765(%var_8749: Tensor[(132), int32]) -> (Tensor[(15, 2, 4), float32], Tensor[(11, 6, 2), int16], Tensor[(132), int32]) {
  %502 = @func_3522() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
  %503 = cast(%var_8749, dtype="int32") /* ty=Tensor[(132), int32] */;
  %504 = reshape(%503, newshape=[132, 1]) /* ty=Tensor[(132, 1), int32] */;
  %505 = @func_5936(%504) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint16], Tensor[(11, 6, 2), int16], int32, Tensor[(132, 1), int32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), bool]) */;
  %506 = %502.1;
  %507 = %505.2;
  (%506, %507, %var_8749)
}

def @func_7066() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  %508 = @func_4479() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %509 = @func_3040() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float32]) */;
  %510 = %508.0;
  %511 = %509.1;
  (%510, %511)
}

def @func_2239(%var_2214: uint8, %var_2215: Tensor[(8, 14, 8), uint8]) -> Tensor[(8, 14, 8), uint8] {
  %512 = cast(%var_2214, dtype="uint8") /* ty=uint8 */;
  %513 = cast(%var_2215, dtype="uint8") /* ty=Tensor[(8, 14, 8), uint8] */;
  minimum(%512, %513) /* ty=Tensor[(8, 14, 8), uint8] */
}

def @func_2135() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %514 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %515 = %514.1;
  %516 = cast(%515, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %517 = reshape(%516, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %518 = @func_1893(%517) /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %519 = %518.4;
  (%515, %519)
}

def @func_5200() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %520 = @func_2601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) */;
  %521 = @func_2616() /* ty=Tensor[(15, 2, 4), float64] */;
  %522 = %520.0;
  (%521, %522)
}

def @func_5419() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint32]) {
  %523 = @func_420() /* ty=Tensor[(15, 2, 4), float64] */;
  %524 = @func_1765() /* ty=Tensor[(15, 2, 4), uint32] */;
  (%523, %524)
}

def @func_4857() -> (Tensor[(15, 2, 4), float32],) {
  %525 = @func_3522() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
  %526 = %525.1;
  (%526,)
}

def @func_3282() -> (Tensor[(15, 2, 4), float64],) {
  %527 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  (%527,)
}

def @func_8929() -> (Tensor[(15, 2, 4), float64],) {
  %528 = @func_3126() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %529 = %528.0;
  (%529,)
}

def @func_7113() -> Tensor[(15, 2, 4), float64] {
  %530 = @func_4288() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
  %530.0
}

def @func_1181(%var_1178: int32, %var_1179: Tensor[(132), int32]) -> (Tensor[(2, 13, 8), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32]) {
  %531 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 13, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 13, 8), float64] */;
  %532 = cast(%var_1178, dtype="int32") /* ty=int32 */;
  %533 = cast(%var_1179, dtype="int32") /* ty=Tensor[(132), int32] */;
  %534 = reshape(%532, newshape=[]) /* ty=int32 */;
  %535 = reshape(%533, newshape=[11, 6, 2]) /* ty=Tensor[(11, 6, 2), int32] */;
  %536 = log10(%531) /* ty=Tensor[(2, 13, 8), float64] */;
  %537 = @func_211(%534, %535) /* ty=Tensor[(11, 6, 2), int16] */;
  (%536, %537, %var_1178, %var_1179)
}

def @func_9015() -> (Tensor[(15, 2, 4), float64],) {
  %538 = @func_2970() /* ty=Tensor[(15, 2, 4), float64] */;
  (%538,)
}

def @func_7859(%var_7798: Tensor[(3, 20), float32]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], int32, int32) {
  %539 = @func_1120() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %540 = @func_3097() /* ty=(Tensor[(3, 20), float32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64]) */;
  %541 = %540.0;
  %542 = cast(%var_7798, dtype="bool") /* ty=Tensor[(3, 20), bool] */;
  %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(2), int32] */;
  %544 = cast(%541, dtype="bool") /* ty=Tensor[(3, 20), bool] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %546 = not_equal(%544, %545) /* ty=Tensor[(3, 20), bool] */;
  %547 = cast(%546, dtype="float64") /* ty=Tensor[(3, 20), float64] */;
  %548 = cos(%547) /* ty=Tensor[(3, 20), float64] */;
  %549 = cast(%548, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
  %550 = atanh(%549) /* ty=Tensor[(3, 20), float32] */;
  %551 = cast(%550, dtype="int8") /* ty=Tensor[(3, 20), int8] */;
  %552 = cast(1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %553 = reshape(%551, newshape=[60, 1]) /* ty=Tensor[(60, 1), int8] */;
  %554 = reshape(%552, newshape=[]) /* ty=int32 */;
  %555 = @func_679(%553, %554) /* ty=(Tensor[(15, 2, 4), float64], int32, Tensor[(60, 1), int8], int32, Tensor[(15, 2, 4), float64]) */;
  %556 = @func_5780() /* ty=Tensor[(15, 2, 4), float64] */;
  %557 = %539.0;
  %558 = %555.1;
  (%556, %557, %550, %558, 1 /* ty=int32 */)
}

def @func_10011(%var_9986: Tensor[(4, 12, 15), float32]) -> (Tensor[(4, 12, 15), float32], Tensor[(15, 2, 4), float64]) {
  %559 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 12, 15), float32] */, dtype="float32") /* ty=Tensor[(4, 12, 15), float32] */;
  %560 = shape_of(%var_9986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%var_9986, dtype="float32") /* ty=Tensor[(4, 12, 15), float32] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %563 = @func_7681() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %564 = mod(%561, %562) /* ty=Tensor[(4, 12, 15), float32] */;
  %565 = %563.1;
  (%564, %565)
}

def @func_7218(%var_7211: Tensor[(224), float32]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint32], Tensor[(11, 6, 2), int16], int32, Tensor[(15, 2, 4), float64], Tensor[(224), float32], Tensor[(16, 14, 132), uint32]) {
  %566 = @func_2601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) */;
  %567 = cast(-2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %568 = cast(meta[relay.Constant][16] /* ty=Tensor[(132), int32] */, dtype="int32") /* ty=Tensor[(132), int32] */;
  %569 = reshape(%567, newshape=[]) /* ty=int32 */;
  %570 = reshape(%568, newshape=[11, 6, 2]) /* ty=Tensor[(11, 6, 2), int32] */;
  %571 = cast(meta[relay.Constant][16] /* ty=Tensor[(132), int32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %572 = asinh(%571) /* ty=Tensor[(132), float32] */;
  %573 = cast(%var_7211, dtype="float32") /* ty=Tensor[(224), float32] */;
  %574 = reshape(%573, newshape=[16, 14, 1]) /* ty=Tensor[(16, 14, 1), float32] */;
  %575 = @func_4237(%574) /* ty=Tensor[(16, 14, 1), float32] */;
  %576 = cast(%572, dtype="uint32") /* ty=Tensor[(132), uint32] */;
  %577 = cast(%575, dtype="uint32") /* ty=Tensor[(16, 14, 1), uint32] */;
  %578 = %566.3;
  %579 = @func_1765() /* ty=Tensor[(15, 2, 4), uint32] */;
  %580 = @func_211(%569, %570) /* ty=Tensor[(11, 6, 2), int16] */;
  %581 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  %582 = subtract(%576, %577) /* ty=Tensor[(16, 14, 132), uint32] */;
  (%578, %579, %580, -2 /* ty=int32 */, %581, %var_7211, %582)
}

def @func_347() -> Tensor[(15, 2, 4), float64] {
  %583 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %583.1
}

def @func_1690() -> Tensor[(15, 2, 4), float64] {
  %584 = @func_1097() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
  %584.0
}

def @func_4874() -> Tensor[(15, 2, 4), bool] {
  %585 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %585.0
}

def @func_3001() -> (Tensor[(15, 2, 4), float64],) {
  %586 = @func_1162() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %587 = %586.0;
  (%587,)
}

def @func_10083() -> Tensor[(2, 6, ?), int32] {
  %588 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 6, 1), float64] */, dtype="float64") /* ty=Tensor[(2, 6, 1), float64] */;
  %589 = asin(%588) /* ty=Tensor[(2, 6, 1), float64] */;
  %590 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 6, 1), float64] */, dtype="int32") /* ty=Tensor[(2, 6, 1), int32] */;
  %591 = shape_of(%589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%589, dtype="int32") /* ty=Tensor[(2, 6, 1), int32] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  multiply(%592, %593) /* ty=Tensor[(2, 6, ?), int32] */
}

def @func_4627(%var_4600: Tensor[(224), float32]) -> (Tensor[(16, 14, 1), float32], Tensor[(224), float32], Tensor[(15, 2, 4), float64], Tensor[(6, 15, 2), float32], Tensor[(15, 2, 4), float64]) {
  %594 = cast(%var_4600, dtype="float32") /* ty=Tensor[(224), float32] */;
  %595 = reshape(%594, newshape=[16, 14, 1]) /* ty=Tensor[(16, 14, 1), float32] */;
  %596 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %597 = cast(meta[relay.Constant][19] /* ty=Tensor[(6, 15, 2), uint16] */, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
  %598 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(6, 15, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 15, 2), uint16] */, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %601 = less_equal(%599, %600) /* ty=Tensor[(6, 15, 2), bool] */;
  %602 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 15, 2), uint16] */, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
  %603 = shape_of(%601, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(%601, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %606 = logical_and(%604, %605) /* ty=Tensor[(6, 15, 2), bool] */;
  %607 = cast(%606, dtype="float32") /* ty=Tensor[(6, 15, 2), float32] */;
  %608 = @func_2661() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %609 = @func_4237(%595) /* ty=Tensor[(16, 14, 1), float32] */;
  %610 = %596.1;
  %611 = log(%607) /* ty=Tensor[(6, 15, 2), float32] */;
  %612 = %608.0;
  (%609, %var_4600, %610, %611, %612)
}

def @func_10578() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %613 = @func_9732() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %614 = %613.0;
  %615 = @func_5613() /* ty=Tensor[(15, 2, 4), float64] */;
  %616 = @func_6124() /* ty=Tensor[(15, 2, 4), float64] */;
  (%614, %615, %616)
}

def @func_3979() -> (Tensor[(15, 2, 4), float64],) {
  %617 = @func_2601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) */;
  %618 = %617.1;
  (%618,)
}

def @func_1765() -> Tensor[(15, 2, 4), uint32] {
  %619 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %620 = %619.1;
  %621 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 2, 4), float64] */, dtype="uint32") /* ty=Tensor[(15, 2, 4), uint32] */;
  %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %623 = cast(%620, dtype="uint32") /* ty=Tensor[(15, 2, 4), uint32] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%623, %624) /* ty=Tensor[(15, 2, 4), uint32] */
}

def @func_5081() -> (Tensor[(15, 2, 4), float64],) {
  %625 = @func_4533() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %626 = %625.0;
  (%626,)
}

def @func_7681() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %627 = @func_7518() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %628 = @func_6519() /* ty=Tensor[(15, 2, 4), float64] */;
  %629 = %627.1;
  (%628, %629)
}

def @func_9656() -> (Tensor[(12, 15, 4), float32],) {
  %630 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 4), float32] */;
  %631 = log(%630) /* ty=Tensor[(12, 15, 4), float32] */;
  (%631,)
}

def @func_3903() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %632 = @func_2881() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %633 = %632.1;
  %634 = @func_347() /* ty=Tensor[(15, 2, 4), float64] */;
  (%633, %634)
}

def @func_5681() -> Tensor[(15, 2, 4), float64] {
  %635 = @func_3126() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %635.0
}

def @func_8113() -> (Tensor[(15, 2, 4), float64],) {
  %636 = @func_7936() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %637 = %636.0;
  (%637,)
}

def @func_2616() -> Tensor[(15, 2, 4), float64] {
  @func_1812() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_4237(%var_4225: Tensor[(16, 14, 1), float32]) -> Tensor[(16, 14, 1), float32] {
  %638 = cast(%var_4225, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
  log2(%638) /* ty=Tensor[(16, 14, 1), float32] */
}

def @func_9438(%var_9409: Tensor[(15, 8, 6), float64]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 8, 6), float64]) {
  %639 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %640 = cast(%var_9409, dtype="float64") /* ty=Tensor[(15, 8, 6), float64] */;
  %641 = sqrt(%640) /* ty=Tensor[(15, 8, 6), float64] */;
  %642 = cast(%641, dtype="float64") /* ty=Tensor[(15, 8, 6), float64] */;
  %643 = %639.0;
  %644 = cos(%642) /* ty=Tensor[(15, 8, 6), float64] */;
  (%643, %644)
}

def @func_4533() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %645 = @func_2808() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %646 = @func_3001() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %647 = @func_4066() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %648 = %645.0;
  %649 = %646.0;
  %650 = @func_2567() /* ty=Tensor[(15, 2, 4), float64] */;
  %651 = %647.1;
  (%648, %649, %650, %651)
}

def @func_5368() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %652 = @func_2808() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %653 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %654 = @func_1414() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %655 = %652.0;
  %656 = %653.1;
  %657 = %654.0;
  (%655, %656, %657)
}

def @func_115() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %658 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %659 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %660 = %659.1;
  %661 = cast(%660, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %662 = %658.1;
  %663 = acosh(%661) /* ty=Tensor[(15, 2, 4), float64] */;
  (%662, %663)
}

def @func_2148(%var_2141: Tensor[(16, 15, 7), uint32], %var_2142: Tensor[(16, 15, 7), uint32]) -> (Tensor[(16, 15, 7), uint32],) {
  %664 = cast(%var_2142, dtype="uint32") /* ty=Tensor[(16, 15, 7), uint32] */;
  %665 = shape_of(%var_2141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %666 = cast(%var_2141, dtype="uint32") /* ty=Tensor[(16, 15, 7), uint32] */;
  %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %668 = multiply(%666, %667) /* ty=Tensor[(16, 15, 7), uint32] */;
  (%668,)
}

def @func_1893(%var_1886: Tensor[(15, 2, 4), float64]) -> (Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %669 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %670 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %671 = @func_1414() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %672 = @func_1676() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %673 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  %674 = cast(%var_1886, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %675 = shape_of(%673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%673, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %678 = %669.0;
  %679 = %670.0;
  %680 = %671.0;
  %681 = %672.1;
  %682 = less_equal(%676, %677) /* ty=Tensor[(15, 2, 4), bool] */;
  (%678, %679, %680, %681, %682)
}

def @func_5994() -> Tensor[(15, 2, 4), float64] {
  %683 = @func_1927() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %683.0
}

def @func_9855() -> Tensor[(15, 2, 4), float64] {
  %684 = @func_8589() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %684.0
}

def @func_6672() -> Tensor[(15, 2, 4), float64] {
  %685 = @func_4066() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %685.1
}

def @func_8902(%var_8799: Tensor[(2, 1, 11), float32], %var_8834: Tensor[(1, 132), int32], %var_8849: Tensor[(12, 132), int32], %var_8861: Tensor[(15), float32], %var_8886: Tensor[(396), uint8], %var_8887: Tensor[(60), int8]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(2, 13, 11), uint8], Tensor[(12, 132), int8], Tensor[(15), float32], Tensor[(90, 2), float32], Tensor[(15, 2, 4), float64], Tensor[(12, 5, 3), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(396), uint8], Tensor[(60), int8], Tensor[(2, 1, 11), float32]) {
  %686 = cast(%var_8834, dtype="int32") /* ty=Tensor[(1, 132), int32] */;
  %687 = reshape(%686, newshape=[132, 1]) /* ty=Tensor[(132, 1), int32] */;
  %688 = @func_5936(%687) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint16], Tensor[(11, 6, 2), int16], int32, Tensor[(132, 1), int32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), bool]) */;
  %689 = @func_3040() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float32]) */;
  %690 = @func_8667() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %691 = cast(%var_8799, dtype="float32") /* ty=Tensor[(2, 1, 11), float32] */;
  %692 = exp(%691) /* ty=Tensor[(2, 1, 11), float32] */;
  %693 = cast(%692, dtype="float32") /* ty=Tensor[(2, 1, 11), float32] */;
  %694 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 13, 11), float32] */, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
  %695 = minimum(%693, %694) /* ty=Tensor[(2, 13, 11), float32] */;
  %696 = cast(%692, dtype="uint8") /* ty=Tensor[(2, 1, 11), uint8] */;
  %697 = cast(%695, dtype="uint8") /* ty=Tensor[(2, 13, 11), uint8] */;
  %698 = cast(%var_8834, dtype="int8") /* ty=Tensor[(1, 132), int8] */;
  %699 = cast(%var_8849, dtype="int8") /* ty=Tensor[(12, 132), int8] */;
  %700 = @func_1097() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
  %701 = cast(%var_8861, dtype="float32") /* ty=Tensor[(15), float32] */;
  %702 = cast(meta[relay.Constant][23] /* ty=Tensor[(90, 2), float32] */, dtype="float32") /* ty=Tensor[(90, 2), float32] */;
  %703 = reshape(%701, newshape=[1, 5, 3]) /* ty=Tensor[(1, 5, 3), float32] */;
  %704 = reshape(%702, newshape=[12, 5, 3]) /* ty=Tensor[(12, 5, 3), float32] */;
  %705 = @func_8696(%703, %704) /* ty=(Tensor[(12, 5, 3), float32], Tensor[(12, 5, 3), float32]) */;
  %706 = %705.1;
  %707 = cast(%706, dtype="float64") /* ty=Tensor[(12, 5, 3), float64] */;
  %708 = cast(%var_8886, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %709 = cast(%var_8887, dtype="int8") /* ty=Tensor[(60), int8] */;
  %710 = reshape(%708, newshape=[66, 6]) /* ty=Tensor[(66, 6), uint8] */;
  %711 = reshape(%709, newshape=[60]) /* ty=Tensor[(60), int8] */;
  %712 = @func_6649(%710, %711) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 12, 3), uint8], Tensor[(66, 6), uint8], Tensor[(5, 3, 4), float64], Tensor[(60), int8], int32) */;
  %713 = cast(%692, dtype="float32") /* ty=Tensor[(2, 1, 11), float32] */;
  %714 = %688.0;
  %715 = %689.0;
  %716 = %690.0;
  %717 = bitwise_xor(%696, %697) /* ty=Tensor[(2, 13, 11), uint8] */;
  %718 = left_shift(%698, %699) /* ty=Tensor[(12, 132), int8] */;
  %719 = %700.1;
  %720 = atanh(%707) /* ty=Tensor[(12, 5, 3), float64] */;
  %721 = @func_347() /* ty=Tensor[(15, 2, 4), float64] */;
  %722 = %712.1;
  %723 = acosh(%713) /* ty=Tensor[(2, 1, 11), float32] */;
  (%714, %715, %716, %717, %718, %var_8861, meta[relay.Constant][23] /* ty=Tensor[(90, 2), float32] */, %719, %720, %721, %722, %var_8886, %var_8887, %723)
}

def @func_10039() -> Tensor[(15, 2, 4), float64] {
  %724 = @func_5419() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint32]) */;
  %724.0
}

def @func_9248() -> (Tensor[(15, 2, 4), bool],) {
  %725 = @func_4874() /* ty=Tensor[(15, 2, 4), bool] */;
  (%725,)
}

def @func_2330(%var_2327: Tensor[(3, 20), int8]) -> (Tensor[(15, 2, 4), float64], Tensor[(60), int8], Tensor[(3, 20), int8], int32) {
  %726 = cast(%var_2327, dtype="int8") /* ty=Tensor[(3, 20), int8] */;
  %727 = cast(1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %728 = reshape(%726, newshape=[60]) /* ty=Tensor[(60), int8] */;
  %729 = reshape(%727, newshape=[]) /* ty=int32 */;
  %730 = @func_1998(%728, %729) /* ty=(Tensor[(15, 2, 4), float64], int32, Tensor[(60), int8], int32) */;
  %731 = @func_1146() /* ty=Tensor[(15, 2, 4), float64] */;
  %732 = %730.2;
  (%731, %732, %var_2327, 1 /* ty=int32 */)
}

def @func_9975() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %733 = @func_5994() /* ty=Tensor[(15, 2, 4), float64] */;
  %734 = cast(%733, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %735 = reshape(%734, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %736 = @func_845(%735) /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), bool]) */;
  %737 = %736.0;
  (%733, %737)
}

def @func_8696(%var_8685: Tensor[(1, 5, 3), float32], %var_8686: Tensor[(12, 5, 3), float32]) -> (Tensor[(12, 5, 3), float32], Tensor[(12, 5, 3), float32]) {
  %738 = cast(%var_8685, dtype="float32") /* ty=Tensor[(1, 5, 3), float32] */;
  %739 = cast(%var_8686, dtype="float32") /* ty=Tensor[(12, 5, 3), float32] */;
  %740 = cast(%var_8686, dtype="float32") /* ty=Tensor[(12, 5, 3), float32] */;
  %741 = floor_divide(%738, %739) /* ty=Tensor[(12, 5, 3), float32] */;
  %742 = log(%740) /* ty=Tensor[(12, 5, 3), float32] */;
  (%741, %742)
}

def @func_1927() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %743 = @func_1120() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %744 = @func_642() /* ty=Tensor[(15, 2, 4), float64] */;
  %745 = %743.1;
  (%744, %745)
}

def @func_10305() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %746 = @func_9355() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %747 = %746.0;
  %748 = @func_5389() /* ty=Tensor[(15, 2, 4), float64] */;
  (%747, %748)
}

def @func_3181(%var_3130: Tensor[(16, 13, 13), float64]) -> (Tensor[(16, 13, 13), bool], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) {
  %749 = cast(%var_3130, dtype="float64") /* ty=Tensor[(16, 13, 13), float64] */;
  %750 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(16, 13, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %751 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 13, 13), float64] */, dtype="float64") /* ty=Tensor[(16, 13, 13), float64] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %753 = floor_divide(%751, %752) /* ty=Tensor[(16, 13, 13), float64] */;
  %754 = cast(%753, dtype="bool") /* ty=Tensor[(16, 13, 13), bool] */;
  %755 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(16, 13, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %756 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 13, 13), float64] */, dtype="bool") /* ty=Tensor[(16, 13, 13), bool] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %758 = @func_2693() /* ty=(Tensor[(15, 2, 4), bool],) */;
  %759 = logical_or(%756, %757) /* ty=Tensor[(16, 13, 13), bool] */;
  %760 = %758.0;
  %761 = @func_420() /* ty=Tensor[(15, 2, 4), float64] */;
  (%759, %760, %761)
}

def @func_5021(%var_5014: Tensor[(15, 2, 4), float64]) -> (Tensor[(3, 20), float32], Tensor[(15, 2, 4), bool]) {
  %762 = @func_3097() /* ty=(Tensor[(3, 20), float32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64]) */;
  %763 = @func_3979() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %764 = %763.0;
  %765 = cast(%var_5014, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %766 = shape_of(%764, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(%764, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %769 = %762.0;
  %770 = greater(%767, %768) /* ty=Tensor[(15, 2, 4), bool] */;
  (%769, %770)
}

def @func_2632() -> Tensor[(15, 2, 4), float64] {
  %771 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %771.0
}

def @func_5654() -> Tensor[(15, 2, 4), float64] {
  @func_3373() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_3126() -> (Tensor[(15, 2, 4), float64],) {
  %772 = @func_1690() /* ty=Tensor[(15, 2, 4), float64] */;
  (%772,)
}

def @func_5613() -> Tensor[(15, 2, 4), float64] {
  %773 = @func_3979() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %773.0
}

def @func_6519() -> Tensor[(15, 2, 4), float64] {
  %774 = @func_5200() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %774.1
}

def @func_4570(%var_4562: uint8, %var_4563: Tensor[(896), uint8]) -> (Tensor[(15, 2, 4), float64], Tensor[(896), uint8], Tensor[(8, 14, 8), bool]) {
  %775 = @func_1120() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %776 = cast(%var_4562, dtype="uint8") /* ty=uint8 */;
  %777 = cast(%var_4563, dtype="uint8") /* ty=Tensor[(896), uint8] */;
  %778 = reshape(%776, newshape=[]) /* ty=uint8 */;
  %779 = reshape(%777, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), uint8] */;
  %780 = @func_2239(%778, %779) /* ty=Tensor[(8, 14, 8), uint8] */;
  %781 = cast(%780, dtype="bool") /* ty=Tensor[(8, 14, 8), bool] */;
  %782 = cast(%var_4562, dtype="bool") /* ty=bool */;
  %783 = %775.2;
  %784 = logical_and(%781, %782) /* ty=Tensor[(8, 14, 8), bool] */;
  (%783, %var_4563, %784)
}

def @func_845(%var_830: Tensor[(15, 2, 4), float64]) -> (Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), bool]) {
  %785 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %786 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %787 = %786.0;
  %788 = cast(%787, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %789 = acos(%788) /* ty=Tensor[(15, 2, 4), float64] */;
  %790 = cast(%var_830, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%789, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %794 = %785.1;
  %795 = logical_or(%792, %793) /* ty=Tensor[(15, 2, 4), bool] */;
  (%794, %795)
}

def @func_5116() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %796 = @func_3347() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %797 = @func_3001() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %798 = @func_1566() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %799 = %796.3;
  %800 = %797.0;
  %801 = %798.0;
  (%799, %800, %801)
}

def @func_578() -> Tensor[(15, 2, 4), float64] {
  %802 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %803 = %802.1;
  %804 = cast(%803, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  log10(%804) /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_920(%var_890: Tensor[(15, 2, 4), float64]) -> (Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float32]) {
  %805 = @func_454() /* ty=Tensor[(15, 2, 4), float64] */;
  %806 = cast(%var_890, dtype="float32") /* ty=Tensor[(15, 2, 4), float32] */;
  %807 = shape_of(%805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(%805, dtype="float32") /* ty=Tensor[(15, 2, 4), float32] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %810 = cast(%805, dtype="float32") /* ty=Tensor[(15, 2, 4), float32] */;
  %811 = minimum(%808, %809) /* ty=Tensor[(15, 2, 4), float32] */;
  %812 = log2(%810) /* ty=Tensor[(15, 2, 4), float32] */;
  (%811, %812)
}

def @func_2808() -> (Tensor[(15, 2, 4), float64],) {
  %813 = @func_2652() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %814 = %813.0;
  (%814,)
}

def @func_7752() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %815 = @func_1566() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %816 = %815.0;
  %817 = @func_5758() /* ty=Tensor[(15, 2, 4), float64] */;
  %818 = @func_6231() /* ty=Tensor[(15, 2, 4), float64] */;
  (%816, %817, %818)
}

def @func_937() -> (Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) {
  %819 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %820 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %821 = %819.1;
  %822 = %820.1;
  (%821, %822)
}

def @func_2713(%var_2697: Tensor[(15, 2, 4), float64]) -> (Tensor[(15, 2, 4), uint16], Tensor[(15, 2, 4), bool]) {
  %823 = @func_2616() /* ty=Tensor[(15, 2, 4), float64] */;
  %824 = cast(%var_2697, dtype="uint16") /* ty=Tensor[(15, 2, 4), uint16] */;
  %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%823, dtype="uint16") /* ty=Tensor[(15, 2, 4), uint16] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %828 = @func_2693() /* ty=(Tensor[(15, 2, 4), bool],) */;
  %829 = multiply(%826, %827) /* ty=Tensor[(15, 2, 4), uint16] */;
  %830 = %828.0;
  (%829, %830)
}

def @func_3347() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %831 = @func_3126() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %832 = %831.0;
  %833 = cast(%832, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %834 = reshape(%833, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %835 = @func_2713(%834) /* ty=(Tensor[(15, 2, 4), uint16], Tensor[(15, 2, 4), bool]) */;
  %836 = %835.1;
  %837 = @func_2616() /* ty=Tensor[(15, 2, 4), float64] */;
  %838 = @func_642() /* ty=Tensor[(15, 2, 4), float64] */;
  (%832, %836, %837, %838)
}

def @func_7354() -> Tensor[(15, 2, 4), bool] {
  @func_3736() /* ty=Tensor[(15, 2, 4), bool] */
}

def @func_1230() -> (Tensor[(15, 2, 4), float64],) {
  %839 = @func_347() /* ty=Tensor[(15, 2, 4), float64] */;
  (%839,)
}

def @func_169() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %840 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %841 = %840.0;
  %842 = cast(%841, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %843 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 2, 4), float64] */, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %844 = shape_of(%841, dtype="int32") /* ty=Tensor[(3), int32] */;
  %845 = cast(%841, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %847 = log(%842) /* ty=Tensor[(15, 2, 4), float64] */;
  %848 = not_equal(%845, %846) /* ty=Tensor[(15, 2, 4), bool] */;
  (%847, %848)
}

def @func_1676() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %849 = @func_642() /* ty=Tensor[(15, 2, 4), float64] */;
  %850 = @func_420() /* ty=Tensor[(15, 2, 4), float64] */;
  (%849, %850)
}

def @func_10597() -> (Tensor[(15, 2, 4), float64],) {
  %851 = @func_7573() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %852 = %851.0;
  (%852,)
}

def @func_4066() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %853 = @func_3903() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %854 = @func_2632() /* ty=Tensor[(15, 2, 4), float64] */;
  %855 = %853.0;
  (%854, %855)
}

def @func_9926() -> (Tensor[(15, 2, 4), float64],) {
  %856 = @func_1601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %857 = %856.0;
  (%857,)
}

def @func_2652() -> (Tensor[(15, 2, 4), float64],) {
  %858 = @func_1566() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %859 = %858.0;
  (%859,)
}

def @func_7464(%var_7433: Tensor[(1, 13, 2), int32]) -> (Tensor[(12, 13, 2), bool], Tensor[(15, 2, 4), float64]) {
  %860 = cast(%var_7433, dtype="bool") /* ty=Tensor[(1, 13, 2), bool] */;
  %861 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 13, 2), int32] */, dtype="bool") /* ty=Tensor[(12, 13, 2), bool] */;
  %862 = @func_5419() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint32]) */;
  %863 = greater(%860, %861) /* ty=Tensor[(12, 13, 2), bool] */;
  %864 = %862.0;
  (%863, %864)
}

def @func_2661() -> (Tensor[(15, 2, 4), float64],) {
  %865 = @func_1566() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %866 = %865.0;
  (%866,)
}

def @func_8401() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %867 = @func_5116() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %868 = %867.0;
  %869 = cast(%868, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %870 = reshape(%869, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %871 = @func_5021(%870) /* ty=(Tensor[(3, 20), float32], Tensor[(15, 2, 4), bool]) */;
  %872 = %871.1;
  (%868, %872)
}

def @func_4442(%var_4397: Tensor[(7, 5, 7), float32], %var_4398: Tensor[(7, 5, 7), float32]) -> (Tensor[(7, 5, 7), bool], Tensor[(15, 2, 4), float32], Tensor[(120), float64], Tensor[(15, 2, 4), uint32]) {
  %873 = cast(%var_4398, dtype="bool") /* ty=Tensor[(7, 5, 7), bool] */;
  %874 = shape_of(%var_4397, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(%var_4397, dtype="bool") /* ty=Tensor[(7, 5, 7), bool] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %877 = cast(meta[relay.Constant][27] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %878 = reshape(%877, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %879 = @func_920(%878) /* ty=(Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float32]) */;
  %880 = equal(%875, %876) /* ty=Tensor[(7, 5, 7), bool] */;
  %881 = %879.1;
  %882 = @func_1765() /* ty=Tensor[(15, 2, 4), uint32] */;
  (%880, %881, meta[relay.Constant][27] /* ty=Tensor[(120), float64] */, %882)
}

def @func_1395(%var_1387: Tensor[(60), int8], %var_1388: int32) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64], Tensor[(60), int8], int32, Tensor[(15, 2, 4), float64]) {
  %883 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %884 = %883.0;
  %885 = cast(%884, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %886 = reshape(%885, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %887 = @func_920(%886) /* ty=(Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float32]) */;
  %888 = cast(%var_1387, dtype="int8") /* ty=Tensor[(60), int8] */;
  %889 = cast(%var_1388, dtype="int32") /* ty=int32 */;
  %890 = reshape(%888, newshape=[60, 1]) /* ty=Tensor[(60, 1), int8] */;
  %891 = reshape(%889, newshape=[]) /* ty=int32 */;
  %892 = @func_679(%890, %891) /* ty=(Tensor[(15, 2, 4), float64], int32, Tensor[(60, 1), int8], int32, Tensor[(15, 2, 4), float64]) */;
  %893 = cast(%var_1387, dtype="int8") /* ty=Tensor[(60), int8] */;
  %894 = cast(%var_1388, dtype="int32") /* ty=int32 */;
  %895 = reshape(%893, newshape=[60]) /* ty=Tensor[(60), int8] */;
  %896 = reshape(%894, newshape=[]) /* ty=int32 */;
  %897 = @func_482(%895, %896) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], Tensor[(60), int8], int32) */;
  %898 = %887.1;
  %899 = %892.0;
  %900 = %897.0;
  (%884, %898, %899, %var_1387, %var_1388, %900)
}

def @func_5780() -> Tensor[(15, 2, 4), float64] {
  %901 = @func_3282() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %901.0
}

def @func_7518() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %902 = @func_6150() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %903 = @func_2632() /* ty=Tensor[(15, 2, 4), float64] */;
  %904 = %902.1;
  (%903, %904)
}

def @func_9035() -> Tensor[(3, 20), float32] {
  %905 = @func_3097() /* ty=(Tensor[(3, 20), float32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64]) */;
  %905.0
}

def @func_8589() -> (Tensor[(15, 2, 4), float64],) {
  %906 = @func_7752() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %907 = %906.2;
  (%907,)
}

def @func_211(%var_178: int32, %var_179: Tensor[(11, 6, 2), int32]) -> Tensor[(11, 6, 2), int16] {
  %908 = cast(%var_178, dtype="int32") /* ty=int32 */;
  %909 = cast(%var_179, dtype="int32") /* ty=Tensor[(11, 6, 2), int32] */;
  %910 = bitwise_and(%908, %909) /* ty=Tensor[(11, 6, 2), int32] */;
  %911 = cast(%910, dtype="int16") /* ty=Tensor[(11, 6, 2), int16] */;
  %912 = cast(%var_178, dtype="int16") /* ty=int16 */;
  right_shift(%911, %912) /* ty=Tensor[(11, 6, 2), int16] */
}

def @func_6356(%var_6304: Tensor[(132), int32]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(132), int32], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %913 = cast(%var_6304, dtype="int32") /* ty=Tensor[(132), int32] */;
  %914 = reshape(%913, newshape=[132, 1]) /* ty=Tensor[(132, 1), int32] */;
  %915 = @func_5936(%914) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint16], Tensor[(11, 6, 2), int16], int32, Tensor[(132, 1), int32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), bool]) */;
  %916 = @func_6061() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %917 = @func_2135() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %918 = @func_5200() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %919 = @func_454() /* ty=Tensor[(15, 2, 4), float64] */;
  %920 = %915.6;
  %921 = %916.0;
  %922 = %917.1;
  %923 = @func_1146() /* ty=Tensor[(15, 2, 4), float64] */;
  %924 = %918.1;
  (%919, %920, %var_6304, %921, %922, %923, %924)
}

def @func_6150() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %925 = @func_1690() /* ty=Tensor[(15, 2, 4), float64] */;
  %926 = @func_642() /* ty=Tensor[(15, 2, 4), float64] */;
  (%925, %926)
}

def @func_1566() -> (Tensor[(15, 2, 4), float64],) {
  %927 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %928 = %927.1;
  (%928,)
}

def @func_1601() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %929 = @func_642() /* ty=Tensor[(15, 2, 4), float64] */;
  %930 = cast(%929, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %931 = @func_1230() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %932 = atanh(%930) /* ty=Tensor[(15, 2, 4), float64] */;
  %933 = @func_578() /* ty=Tensor[(15, 2, 4), float64] */;
  %934 = %931.0;
  (%932, %933, %934)
}

def @func_1998(%var_1983: Tensor[(60), int8], %var_1984: int32) -> (Tensor[(15, 2, 4), float64], int32, Tensor[(60), int8], int32) {
  %935 = cast(%var_1983, dtype="int8") /* ty=Tensor[(60), int8] */;
  %936 = cast(%var_1984, dtype="int32") /* ty=int32 */;
  %937 = reshape(%935, newshape=[60]) /* ty=Tensor[(60), int8] */;
  %938 = reshape(%936, newshape=[]) /* ty=int32 */;
  %939 = @func_482(%937, %938) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], Tensor[(60), int8], int32) */;
  %940 = @func_1690() /* ty=Tensor[(15, 2, 4), float64] */;
  %941 = %939.3;
  (%940, %941, %var_1983, %var_1984)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10113(%var_10108: Tensor[(9, 13, 6), float32]) -> (Tensor[(9, 13, 6), float32],) {
  %0 = cast(%var_10108, dtype="float32") /* ty=Tensor[(9, 13, 6), float32] */;
  %1 = sin(%0) /* ty=Tensor[(9, 13, 6), float32] */;
  (%1,)
}

def @func_5391() -> Tensor[(15, 2, 4), float64] {
  @func_5389() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_8735() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  @func_8733() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */
}

def @func_456() -> Tensor[(15, 2, 4), float64] {
  @func_454() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_3749() -> (Tensor[(15, 2, 4), float64],) {
  @func_3747() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_9125() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %8 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %2 = @func_8589() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %3 = @func_3979() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %4 = @func_8401() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
    %5 = %2.0;
    %6 = %3.0;
    %7 = %4.0;
    (%5, %6, %7)
  };
  %8() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_4068() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_4066() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_8929() -> (Tensor[(15, 2, 4), float64],) {
  %9 = @func_3126() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %10 = %9.0;
  (%10,)
}

def @func_10531() -> Tensor[(15, 2, 4), float64] {
  @func_10529() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_3003() -> (Tensor[(15, 2, 4), float64],) {
  @func_3001() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_10013(%var_10012: Tensor[(4, 12, 15), float32]) -> (Tensor[(4, 12, 15), float32], Tensor[(15, 2, 4), float64]) {
  %18 = fn (%var_9986: Tensor[(4, 12, 15), float32]) -> (Tensor[(4, 12, 15), float32], Tensor[(15, 2, 4), float64]) {
    %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 12, 15), float32] */, dtype="float32") /* ty=Tensor[(4, 12, 15), float32] */;
    %12 = shape_of(%var_9986, dtype="int32") /* ty=Tensor[(3), int32] */;
    %13 = cast(%var_9986, dtype="float32") /* ty=Tensor[(4, 12, 15), float32] */;
    %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %15 = @func_7681() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %16 = mod(%13, %14) /* ty=Tensor[(4, 12, 15), float32] */;
    %17 = %15.1;
    (%16, %17)
  };
  %18(%var_10012) /* ty=(Tensor[(4, 12, 15), float32], Tensor[(15, 2, 4), float64]) */
}

def @func_9733() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %24 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %19 = @func_1927() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %20 = @func_3747() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %21 = @func_5389() /* ty=Tensor[(15, 2, 4), float64] */;
    %22 = %19.0;
    %23 = %20.0;
    (%21, %22, %23)
  };
  %24() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_8768(%var_8766: Tensor[(132), int32]) -> (Tensor[(15, 2, 4), float32], Tensor[(11, 6, 2), int16], Tensor[(132), int32]) {
  @func_8765(%var_8766) /* ty=(Tensor[(15, 2, 4), float32], Tensor[(11, 6, 2), int16], Tensor[(132), int32]) */
}

def @func_2137() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  @func_2135() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */
}

def @func_4712(%var_4680: Tensor[(14, 11, 2), float32], %var_4702: Tensor[(14, 11, 2), float32]) -> (Tensor[(15, 2, 4), int16], Tensor[(120), bool], Tensor[(14, 11, 2), float32], Tensor[(14, 11, 2), bool]) {
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(120), bool] */, dtype="bool") /* ty=Tensor[(120), bool] */;
  %26 = reshape(%25, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), bool] */;
  %27 = @func_2836(%26) /* ty=(Tensor[(15, 2, 4), int8], Tensor[(15, 2, 4), int16]) */;
  %28 = cast(%var_4680, dtype="float32") /* ty=Tensor[(14, 11, 2), float32] */;
  %29 = acosh(%28) /* ty=Tensor[(14, 11, 2), float32] */;
  %30 = cast(%29, dtype="float32") /* ty=Tensor[(14, 11, 2), float32] */;
  %31 = cast(%var_4702, dtype="bool") /* ty=Tensor[(14, 11, 2), bool] */;
  %32 = shape_of(%29, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%29, dtype="bool") /* ty=Tensor[(14, 11, 2), bool] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %35 = %27.1;
  %36 = cos(%30) /* ty=Tensor[(14, 11, 2), float32] */;
  %37 = less(%33, %34) /* ty=Tensor[(14, 11, 2), bool] */;
  (%35, meta[relay.Constant][1] /* ty=Tensor[(120), bool] */, %36, %37)
}

def @func_5456() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %41 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %38 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
    %39 = @func_347() /* ty=Tensor[(15, 2, 4), float64] */;
    %40 = %38.1;
    (%39, %40)
  };
  %41() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_7042() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %42 = @func_1927() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %43 = @func_4066() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %44 = %42.1;
  %45 = @func_6672() /* ty=Tensor[(15, 2, 4), float64] */;
  %46 = %43.1;
  %47 = @func_1690() /* ty=Tensor[(15, 2, 4), float64] */;
  (%44, %45, %46, %47)
}

def @func_7732() -> (Tensor[(15, 2, 4), uint32], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  @func_7730() /* ty=(Tensor[(15, 2, 4), uint32], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */
}

def @func_6872(%var_6871: Tensor[(11, 4, 14), float32]) -> (Tensor[(11, 4, 14), float64], Tensor[(15, 2, 4), bool]) {
  %54 = fn (%var_6861: Tensor[(11, 4, 14), float32]) -> (Tensor[(11, 4, 14), float64], Tensor[(15, 2, 4), bool]) {
    %48 = cast(%var_6861, dtype="float32") /* ty=Tensor[(11, 4, 14), float32] */;
    %49 = acos(%48) /* ty=Tensor[(11, 4, 14), float32] */;
    %50 = cast(%49, dtype="float64") /* ty=Tensor[(11, 4, 14), float64] */;
    %51 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
    %52 = sigmoid(%50) /* ty=Tensor[(11, 4, 14), float64] */;
    %53 = %51.1;
    (%52, %53)
  };
  %54(%var_6871) /* ty=(Tensor[(11, 4, 14), float64], Tensor[(15, 2, 4), bool]) */
}

def @func_2602() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) {
  %70 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) {
    %55 = @func_2135() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
    %56 = @func_1601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %57 = cast(meta[relay.Constant][2] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
    %58 = reshape(%57, newshape=[3, 20]) /* ty=Tensor[(3, 20), int8] */;
    %59 = @func_2330(%58) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(60), int8], Tensor[(3, 20), int8], int32) */;
    %60 = %59.2;
    %61 = cast(meta[relay.Constant][2] /* ty=Tensor[(60), int8] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %62 = shape_of(%60, dtype="int32") /* ty=Tensor[(2), int32] */;
    %63 = cast(%60, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
    %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %65 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
    %66 = %55.0;
    %67 = %56.1;
    %68 = floor_divide(%63, %64) /* ty=Tensor[(3, 20), float32] */;
    %69 = %65.1;
    (%66, %67, %68, %69)
  };
  %70() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) */
}

def @func_2616() -> Tensor[(15, 2, 4), float64] {
  @func_1812() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_9535() -> Tensor[(15, 2, 4), float64] {
  @func_9533() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_3747() -> (Tensor[(15, 2, 4), float64],) {
  %71 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  (%71,)
}

def @func_4919(%var_4917: Tensor[(16, 5, 7), int64]) -> (Tensor[(16, 5, 7), bool], Tensor[(16, 5, 7), float32]) {
  @func_4916(%var_4917) /* ty=(Tensor[(16, 5, 7), bool], Tensor[(16, 5, 7), float32]) */
}

def @func_9818() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32]) {
  %77 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32]) {
    %72 = @func_1230() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %73 = @func_2808() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %74 = %72.0;
    %75 = %73.0;
    %76 = @func_9035() /* ty=Tensor[(3, 20), float32] */;
    (%74, %75, %76)
  };
  %77() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32]) */
}

def @func_7254() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %78 = @func_4533() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %79 = @func_5482() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %80 = @func_7042() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %81 = %78.3;
  %82 = %79.0;
  %83 = %80.0;
  (%81, %82, %83)
}

def @func_9533() -> Tensor[(15, 2, 4), float64] {
  %84 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %84.1
}

def @func_4533() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %85 = @func_2808() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %86 = @func_3001() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %87 = @func_4066() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %88 = %85.0;
  %89 = %86.0;
  %90 = @func_2567() /* ty=Tensor[(15, 2, 4), float64] */;
  %91 = %87.1;
  (%88, %89, %90, %91)
}

def @func_4630(%var_4628: Tensor[(224), float32]) -> (Tensor[(16, 14, 1), float32], Tensor[(224), float32], Tensor[(15, 2, 4), float64], Tensor[(6, 15, 2), float32], Tensor[(15, 2, 4), float64]) {
  @func_4627(%var_4628) /* ty=(Tensor[(16, 14, 1), float32], Tensor[(224), float32], Tensor[(15, 2, 4), float64], Tensor[(6, 15, 2), float32], Tensor[(15, 2, 4), float64]) */
}

def @func_10599() -> (Tensor[(15, 2, 4), float64],) {
  @func_10597() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_9249() -> (Tensor[(15, 2, 4), bool],) {
  %93 = fn () -> (Tensor[(15, 2, 4), bool],) {
    %92 = @func_4874() /* ty=Tensor[(15, 2, 4), bool] */;
    (%92,)
  };
  %93() /* ty=(Tensor[(15, 2, 4), bool],) */
}

def @func_3375() -> Tensor[(15, 2, 4), float64] {
  @func_3373() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_1398(%var_1396: Tensor[(60), int8], %var_1397: int32) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64], Tensor[(60), int8], int32, Tensor[(15, 2, 4), float64]) {
  %112 = fn (%var_1387: Tensor[(60), int8], %var_1388: int32) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64], Tensor[(60), int8], int32, Tensor[(15, 2, 4), float64]) {
    %94 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %95 = %94.0;
    %96 = cast(%95, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
    %97 = reshape(%96, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
    %98 = @func_920(%97) /* ty=(Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float32]) */;
    %99 = cast(%var_1387, dtype="int8") /* ty=Tensor[(60), int8] */;
    %100 = cast(%var_1388, dtype="int32") /* ty=int32 */;
    %101 = reshape(%99, newshape=[60, 1]) /* ty=Tensor[(60, 1), int8] */;
    %102 = reshape(%100, newshape=[]) /* ty=int32 */;
    %103 = @func_679(%101, %102) /* ty=(Tensor[(15, 2, 4), float64], int32, Tensor[(60, 1), int8], int32, Tensor[(15, 2, 4), float64]) */;
    %104 = cast(%var_1387, dtype="int8") /* ty=Tensor[(60), int8] */;
    %105 = cast(%var_1388, dtype="int32") /* ty=int32 */;
    %106 = reshape(%104, newshape=[60]) /* ty=Tensor[(60), int8] */;
    %107 = reshape(%105, newshape=[]) /* ty=int32 */;
    %108 = @func_482(%106, %107) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], Tensor[(60), int8], int32) */;
    %109 = %98.1;
    %110 = %103.0;
    %111 = %108.0;
    (%95, %109, %110, %var_1387, %var_1388, %111)
  };
  %112(%var_1396, %var_1397) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64], Tensor[(60), int8], int32, Tensor[(15, 2, 4), float64]) */
}

def @func_4627(%var_4600: Tensor[(224), float32]) -> (Tensor[(16, 14, 1), float32], Tensor[(224), float32], Tensor[(15, 2, 4), float64], Tensor[(6, 15, 2), float32], Tensor[(15, 2, 4), float64]) {
  %113 = cast(%var_4600, dtype="float32") /* ty=Tensor[(224), float32] */;
  %114 = reshape(%113, newshape=[16, 14, 1]) /* ty=Tensor[(16, 14, 1), float32] */;
  %115 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %116 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 15, 2), uint16] */, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
  %117 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(6, 15, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 15, 2), uint16] */, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %120 = less_equal(%118, %119) /* ty=Tensor[(6, 15, 2), bool] */;
  %121 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 15, 2), uint16] */, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
  %122 = shape_of(%120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%120, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %125 = logical_and(%123, %124) /* ty=Tensor[(6, 15, 2), bool] */;
  %126 = cast(%125, dtype="float32") /* ty=Tensor[(6, 15, 2), float32] */;
  %127 = @func_2661() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %128 = @func_4237(%114) /* ty=Tensor[(16, 14, 1), float32] */;
  %129 = %115.1;
  %130 = log(%126) /* ty=Tensor[(6, 15, 2), float32] */;
  %131 = %127.0;
  (%128, %var_4600, %129, %130, %131)
}

def @func_5758() -> Tensor[(15, 2, 4), float64] {
  %132 = @func_1676() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %132.1
}

def @func_5539(%var_5537: Tensor[(15, 9, 1), uint64]) -> (Tensor[(15, 9, ?), bool],) {
  @func_5536(%var_5537) /* ty=(Tensor[(15, 9, ?), bool],) */
}

def @func_5936(%var_5898: Tensor[(132, 1), int32]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint16], Tensor[(11, 6, 2), int16], int32, Tensor[(132, 1), int32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), bool]) {
  %133 = @func_1230() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %134 = @func_1230() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %135 = %134.0;
  %136 = cast(%135, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %137 = reshape(%136, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %138 = @func_2713(%137) /* ty=(Tensor[(15, 2, 4), uint16], Tensor[(15, 2, 4), bool]) */;
  %139 = cast(-4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %140 = cast(%var_5898, dtype="int32") /* ty=Tensor[(132, 1), int32] */;
  %141 = reshape(%139, newshape=[]) /* ty=int32 */;
  %142 = reshape(%140, newshape=[132]) /* ty=Tensor[(132), int32] */;
  %143 = @func_1181(%141, %142) /* ty=(Tensor[(2, 13, 8), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32]) */;
  %144 = cast(%135, dtype="float32") /* ty=Tensor[(15, 2, 4), float32] */;
  %145 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %146 = %133.0;
  %147 = %138.0;
  %148 = %143.1;
  %149 = exp(%144) /* ty=Tensor[(15, 2, 4), float32] */;
  %150 = %145.1;
  (%146, %147, %148, -4 /* ty=int32 */, %var_5898, %149, %150)
}

def @func_7518() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %151 = @func_6150() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %152 = @func_2632() /* ty=Tensor[(15, 2, 4), float64] */;
  %153 = %151.1;
  (%152, %153)
}

def @func_2332(%var_2331: Tensor[(3, 20), int8]) -> (Tensor[(15, 2, 4), float64], Tensor[(60), int8], Tensor[(3, 20), int8], int32) {
  %161 = fn (%var_2327: Tensor[(3, 20), int8]) -> (Tensor[(15, 2, 4), float64], Tensor[(60), int8], Tensor[(3, 20), int8], int32) {
    %154 = cast(%var_2327, dtype="int8") /* ty=Tensor[(3, 20), int8] */;
    %155 = cast(1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %156 = reshape(%154, newshape=[60]) /* ty=Tensor[(60), int8] */;
    %157 = reshape(%155, newshape=[]) /* ty=int32 */;
    %158 = @func_1998(%156, %157) /* ty=(Tensor[(15, 2, 4), float64], int32, Tensor[(60), int8], int32) */;
    %159 = @func_1146() /* ty=Tensor[(15, 2, 4), float64] */;
    %160 = %158.2;
    (%159, %160, %var_2327, 1 /* ty=int32 */)
  };
  %161(%var_2331) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(60), int8], Tensor[(3, 20), int8], int32) */
}

def @func_3284() -> (Tensor[(15, 2, 4), float64],) {
  @func_3282() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_9166() -> Tensor[(15, 2, 4), float64] {
  %162 = @func_2652() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %162.0
}

def @func_9015() -> (Tensor[(15, 2, 4), float64],) {
  %163 = @func_2970() /* ty=Tensor[(15, 2, 4), float64] */;
  (%163,)
}

def @func_5760() -> Tensor[(15, 2, 4), float64] {
  @func_5758() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_8227() -> (Tensor[(15, 2, 4), float64],) {
  %166 = fn () -> (Tensor[(15, 2, 4), float64],) {
    %164 = @func_8084() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %165 = %164.0;
    (%165,)
  };
  %166() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_4506(%var_4504: Tensor[(1, 14, 9), int64], %var_4505: Tensor[(1, 14, 9), int64]) -> (Tensor[(?, 14, 9), int64], Tensor[(1, 14, 9), float64]) {
  %174 = fn (%var_4482: Tensor[(1, 14, 9), int64], %var_4483: Tensor[(1, 14, 9), int64]) -> (Tensor[(?, 14, 9), int64], Tensor[(1, 14, 9), float64]) {
    %167 = cast(%var_4483, dtype="int64") /* ty=Tensor[(1, 14, 9), int64] */;
    %168 = shape_of(%var_4482, dtype="int32") /* ty=Tensor[(3), int32] */;
    %169 = cast(%var_4482, dtype="int64") /* ty=Tensor[(1, 14, 9), int64] */;
    %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %171 = cast(%var_4483, dtype="float64") /* ty=Tensor[(1, 14, 9), float64] */;
    %172 = left_shift(%169, %170) /* ty=Tensor[(?, 14, 9), int64] */;
    %173 = cosh(%171) /* ty=Tensor[(1, 14, 9), float64] */;
    (%172, %173)
  };
  %174(%var_4504, %var_4505) /* ty=(Tensor[(?, 14, 9), int64], Tensor[(1, 14, 9), float64]) */
}

def @func_4479() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %175 = @func_2808() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %176 = %175.0;
  %177 = @func_1812() /* ty=Tensor[(15, 2, 4), float64] */;
  %178 = @func_3304() /* ty=Tensor[(15, 2, 4), float64] */;
  %179 = @func_642() /* ty=Tensor[(15, 2, 4), float64] */;
  (%176, %177, %178, %179)
}

def @func_2694() -> (Tensor[(15, 2, 4), bool],) {
  %182 = fn () -> (Tensor[(15, 2, 4), bool],) {
    %180 = @func_2135() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
    %181 = %180.1;
    (%181,)
  };
  %182() /* ty=(Tensor[(15, 2, 4), bool],) */
}

def @func_1678() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_1676() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_8910(%var_8904: Tensor[(2, 1, 11), float32], %var_8905: Tensor[(1, 132), int32], %var_8906: Tensor[(12, 132), int32], %var_8907: Tensor[(15), float32], %var_8908: Tensor[(396), uint8], %var_8909: Tensor[(60), int8]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(2, 13, 11), uint8], Tensor[(12, 132), int8], Tensor[(15), float32], Tensor[(90, 2), float32], Tensor[(15, 2, 4), float64], Tensor[(12, 5, 3), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(396), uint8], Tensor[(60), int8], Tensor[(2, 1, 11), float32]) {
  @func_8902(%var_8904, %var_8905, %var_8906, %var_8907, %var_8908, %var_8909) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(2, 13, 11), uint8], Tensor[(12, 132), int8], Tensor[(15), float32], Tensor[(90, 2), float32], Tensor[(15, 2, 4), float64], Tensor[(12, 5, 3), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(396), uint8], Tensor[(60), int8], Tensor[(2, 1, 11), float32]) */
}

def @func_6217() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  %189 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
    %183 = @func_4288() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
    %184 = @func_4479() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %185 = @func_4857() /* ty=(Tensor[(15, 2, 4), float32],) */;
    %186 = %183.0;
    %187 = %184.3;
    %188 = %185.0;
    (%186, %187, %188)
  };
  %189() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */
}

def @func_9441(%var_9439: Tensor[(15, 8, 6), float64]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 8, 6), float64]) {
  @func_9438(%var_9439) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 8, 6), float64]) */
}

def @func_9168() -> Tensor[(15, 2, 4), float64] {
  @func_9166() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_8167() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_8165() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_8274(%var_8272: Tensor[(3, 15, 1), float32]) -> Tensor[(3, 15, ?), float32] {
  @func_8271(%var_8272) /* ty=Tensor[(3, 15, ?), float32] */
}

def @func_5536(%var_5517: Tensor[(15, 9, 1), uint64]) -> (Tensor[(15, 9, ?), bool],) {
  %190 = cast(meta[relay.Constant][5] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %191 = cast(%var_5517, dtype="uint64") /* ty=Tensor[(15, 9, 1), uint64] */;
  %192 = bitwise_and(%190, %191) /* ty=Tensor[(15, 9, 1), uint64] */;
  %193 = cast(%192, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %194 = shape_of(%var_5517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(%var_5517, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %197 = logical_and(%195, %196) /* ty=Tensor[(15, 9, ?), bool] */;
  (%197,)
}

def @func_10165(%var_10163: Tensor[(15, 11, 7), int32], %var_10164: Tensor[(15, 11, 7), int32]) -> Tensor[(15, 11, 7), int32] {
  @func_10161(%var_10163, %var_10164) /* ty=Tensor[(15, 11, 7), int32] */
}

def @func_10161(%var_10156: Tensor[(15, 11, 7), int32], %var_10157: Tensor[(15, 11, 7), int32]) -> Tensor[(15, 11, 7), int32] {
  %198 = cast(%var_10157, dtype="int32") /* ty=Tensor[(15, 11, 7), int32] */;
  %199 = shape_of(%var_10156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %200 = cast(%var_10156, dtype="int32") /* ty=Tensor[(15, 11, 7), int32] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  multiply(%200, %201) /* ty=Tensor[(15, 11, 7), int32] */
}

def @func_422() -> Tensor[(15, 2, 4), float64] {
  @func_420() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_4570(%var_4562: uint8, %var_4563: Tensor[(896), uint8]) -> (Tensor[(15, 2, 4), float64], Tensor[(896), uint8], Tensor[(8, 14, 8), bool]) {
  %202 = @func_1120() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %203 = cast(%var_4562, dtype="uint8") /* ty=uint8 */;
  %204 = cast(%var_4563, dtype="uint8") /* ty=Tensor[(896), uint8] */;
  %205 = reshape(%203, newshape=[]) /* ty=uint8 */;
  %206 = reshape(%204, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), uint8] */;
  %207 = @func_2239(%205, %206) /* ty=Tensor[(8, 14, 8), uint8] */;
  %208 = cast(%207, dtype="bool") /* ty=Tensor[(8, 14, 8), bool] */;
  %209 = cast(%var_4562, dtype="bool") /* ty=bool */;
  %210 = %202.2;
  %211 = logical_and(%208, %209) /* ty=Tensor[(8, 14, 8), bool] */;
  (%210, %var_4563, %211)
}

def @func_6125() -> Tensor[(15, 2, 4), float64] {
  %219 = fn () -> Tensor[(15, 2, 4), float64] {
    %212 = @func_6061() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %213 = %212.0;
    %214 = @func_1146() /* ty=Tensor[(15, 2, 4), float64] */;
    %215 = cast(%214, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
    %216 = shape_of(%213, dtype="int32") /* ty=Tensor[(3), int32] */;
    %217 = cast(%213, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
    %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    maximum(%217, %218) /* ty=Tensor[(15, 2, 4), float64] */
  };
  %219() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_4716(%var_4714: Tensor[(14, 11, 2), float32], %var_4715: Tensor[(14, 11, 2), float32]) -> (Tensor[(15, 2, 4), int16], Tensor[(120), bool], Tensor[(14, 11, 2), float32], Tensor[(14, 11, 2), bool]) {
  @func_4712(%var_4714, %var_4715) /* ty=(Tensor[(15, 2, 4), int16], Tensor[(120), bool], Tensor[(14, 11, 2), float32], Tensor[(14, 11, 2), bool]) */
}

def @func_9889() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %224 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %220 = @func_5200() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %221 = @func_3282() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %222 = %220.1;
    %223 = %221.0;
    (%222, %223)
  };
  %224() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_3304() -> Tensor[(15, 2, 4), float64] {
  %225 = @func_1097() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
  %225.1
}

def @func_2001(%var_1999: Tensor[(60), int8], %var_2000: int32) -> (Tensor[(15, 2, 4), float64], int32, Tensor[(60), int8], int32) {
  %233 = fn (%var_1983: Tensor[(60), int8], %var_1984: int32) -> (Tensor[(15, 2, 4), float64], int32, Tensor[(60), int8], int32) {
    %226 = cast(%var_1983, dtype="int8") /* ty=Tensor[(60), int8] */;
    %227 = cast(%var_1984, dtype="int32") /* ty=int32 */;
    %228 = reshape(%226, newshape=[60]) /* ty=Tensor[(60), int8] */;
    %229 = reshape(%227, newshape=[]) /* ty=int32 */;
    %230 = @func_482(%228, %229) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], Tensor[(60), int8], int32) */;
    %231 = @func_1690() /* ty=Tensor[(15, 2, 4), float64] */;
    %232 = %230.3;
    (%231, %232, %var_1983, %var_1984)
  };
  %233(%var_1999, %var_2000) /* ty=(Tensor[(15, 2, 4), float64], int32, Tensor[(60), int8], int32) */
}

def @func_9975() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %234 = @func_5994() /* ty=Tensor[(15, 2, 4), float64] */;
  %235 = cast(%234, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %236 = reshape(%235, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %237 = @func_845(%236) /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), bool]) */;
  %238 = %237.0;
  (%234, %238)
}

def @func_8529(%var_8512: uint16, %var_8513: Tensor[(8, 16, 8), uint16]) -> (Tensor[(8, 16, 8), uint16], Tensor[(8, 16, 8), bool], Tensor[(8, 16, 8), float64]) {
  %239 = cast(%var_8512, dtype="uint16") /* ty=uint16 */;
  %240 = cast(%var_8513, dtype="uint16") /* ty=Tensor[(8, 16, 8), uint16] */;
  %241 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 16, 8), uint16] */, dtype="bool") /* ty=Tensor[(8, 16, 8), bool] */;
  %242 = shape_of(%var_8513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%var_8513, dtype="bool") /* ty=Tensor[(8, 16, 8), bool] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %245 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 16, 8), uint16] */, dtype="float64") /* ty=Tensor[(8, 16, 8), float64] */;
  %246 = logical_xor(%239, %240) /* ty=Tensor[(8, 16, 8), uint16] */;
  %247 = greater(%243, %244) /* ty=Tensor[(8, 16, 8), bool] */;
  %248 = log10(%245) /* ty=Tensor[(8, 16, 8), float64] */;
  (%246, %247, %248)
}

def @func_2242(%var_2240: uint8, %var_2241: Tensor[(8, 14, 8), uint8]) -> Tensor[(8, 14, 8), uint8] {
  %251 = fn (%var_2214: uint8, %var_2215: Tensor[(8, 14, 8), uint8]) -> Tensor[(8, 14, 8), uint8] {
    %249 = cast(%var_2214, dtype="uint8") /* ty=uint8 */;
    %250 = cast(%var_2215, dtype="uint8") /* ty=Tensor[(8, 14, 8), uint8] */;
    minimum(%249, %250) /* ty=Tensor[(8, 14, 8), uint8] */
  };
  %251(%var_2240, %var_2241) /* ty=Tensor[(8, 14, 8), uint8] */
}

def @func_9224() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %258 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %252 = @func_3282() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %253 = @func_3979() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %254 = @func_8165() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %255 = %252.0;
    %256 = %253.0;
    %257 = %254.1;
    (%255, %256, %257)
  };
  %258() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_2653() -> (Tensor[(15, 2, 4), float64],) {
  %261 = fn () -> (Tensor[(15, 2, 4), float64],) {
    %259 = @func_1566() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %260 = %259.0;
    (%260,)
  };
  %261() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_2809() -> (Tensor[(15, 2, 4), float64],) {
  %264 = fn () -> (Tensor[(15, 2, 4), float64],) {
    %262 = @func_2652() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %263 = %262.0;
    (%263,)
  };
  %264() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_3523() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  %271 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
    %265 = @func_2881() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %266 = %265.0;
    %267 = cast(%266, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
    %268 = reshape(%267, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
    %269 = @func_920(%268) /* ty=(Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float32]) */;
    %270 = %269.0;
    (%266, %270)
  };
  %271() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */
}

def @func_8931() -> (Tensor[(15, 2, 4), float64],) {
  @func_8929() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_347() -> Tensor[(15, 2, 4), float64] {
  %272 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %272.1
}

def @func_6855() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %281 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %273 = @func_6031() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %274 = %273.0;
    %275 = cast(%274, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
    %276 = reshape(%275, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
    %277 = @func_1893(%276) /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
    %278 = @func_4533() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %279 = %277.1;
    %280 = %278.3;
    (%274, %279, %280)
  };
  %281() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_7520() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_7518() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_3373() -> Tensor[(15, 2, 4), float64] {
  @func_3304() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_4066() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %282 = @func_3903() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %283 = @func_2632() /* ty=Tensor[(15, 2, 4), float64] */;
  %284 = %282.0;
  (%283, %284)
}

def @func_6358(%var_6357: Tensor[(132), int32]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(132), int32], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %297 = fn (%var_6304: Tensor[(132), int32]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(132), int32], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %285 = cast(%var_6304, dtype="int32") /* ty=Tensor[(132), int32] */;
    %286 = reshape(%285, newshape=[132, 1]) /* ty=Tensor[(132, 1), int32] */;
    %287 = @func_5936(%286) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint16], Tensor[(11, 6, 2), int16], int32, Tensor[(132, 1), int32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), bool]) */;
    %288 = @func_6061() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %289 = @func_2135() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
    %290 = @func_5200() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %291 = @func_454() /* ty=Tensor[(15, 2, 4), float64] */;
    %292 = %287.6;
    %293 = %288.0;
    %294 = %289.1;
    %295 = @func_1146() /* ty=Tensor[(15, 2, 4), float64] */;
    %296 = %290.1;
    (%291, %292, %var_6304, %293, %294, %295, %296)
  };
  %297(%var_6357) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(132), int32], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_7256() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_7254() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_4239(%var_4238: Tensor[(16, 14, 1), float32]) -> Tensor[(16, 14, 1), float32] {
  %299 = fn (%var_4225: Tensor[(16, 14, 1), float32]) -> Tensor[(16, 14, 1), float32] {
    %298 = cast(%var_4225, dtype="float32") /* ty=Tensor[(16, 14, 1), float32] */;
    log2(%298) /* ty=Tensor[(16, 14, 1), float32] */
  };
  %299(%var_4238) /* ty=Tensor[(16, 14, 1), float32] */
}

def @func_8699(%var_8697: Tensor[(1, 5, 3), float32], %var_8698: Tensor[(12, 5, 3), float32]) -> (Tensor[(12, 5, 3), float32], Tensor[(12, 5, 3), float32]) {
  %305 = fn (%var_8685: Tensor[(1, 5, 3), float32], %var_8686: Tensor[(12, 5, 3), float32]) -> (Tensor[(12, 5, 3), float32], Tensor[(12, 5, 3), float32]) {
    %300 = cast(%var_8685, dtype="float32") /* ty=Tensor[(1, 5, 3), float32] */;
    %301 = cast(%var_8686, dtype="float32") /* ty=Tensor[(12, 5, 3), float32] */;
    %302 = cast(%var_8686, dtype="float32") /* ty=Tensor[(12, 5, 3), float32] */;
    %303 = floor_divide(%300, %301) /* ty=Tensor[(12, 5, 3), float32] */;
    %304 = log(%302) /* ty=Tensor[(12, 5, 3), float32] */;
    (%303, %304)
  };
  %305(%var_8697, %var_8698) /* ty=(Tensor[(12, 5, 3), float32], Tensor[(12, 5, 3), float32]) */
}

def @func_2135() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %306 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %307 = %306.1;
  %308 = cast(%307, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %309 = reshape(%308, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %310 = @func_1893(%309) /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %311 = %310.4;
  (%307, %311)
}

def @func_8113() -> (Tensor[(15, 2, 4), float64],) {
  %312 = @func_7936() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %313 = %312.0;
  (%313,)
}

def @func_1813() -> Tensor[(15, 2, 4), float64] {
  %315 = fn () -> Tensor[(15, 2, 4), float64] {
    %314 = @func_1162() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %314.0
  };
  %315() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_7068() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  @func_7066() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */
}

def @func_2716(%var_2714: Tensor[(15, 2, 4), float64]) -> (Tensor[(15, 2, 4), uint16], Tensor[(15, 2, 4), bool]) {
  @func_2713(%var_2714) /* ty=(Tensor[(15, 2, 4), uint16], Tensor[(15, 2, 4), bool]) */
}

def @func_10306() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %319 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %316 = @func_9355() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %317 = %316.0;
    %318 = @func_5389() /* ty=Tensor[(15, 2, 4), float64] */;
    (%317, %318)
  };
  %319() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_3738() -> Tensor[(15, 2, 4), bool] {
  @func_3736() /* ty=Tensor[(15, 2, 4), bool] */
}

def @func_6061() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %320 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %321 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %322 = %320.1;
  %323 = %321.1;
  (%322, %323)
}

def @func_1121() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %327 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %324 = @func_454() /* ty=Tensor[(15, 2, 4), float64] */;
    %325 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
    %326 = @func_454() /* ty=Tensor[(15, 2, 4), float64] */;
    (%324, %325, %326)
  };
  %327() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_8765(%var_8749: Tensor[(132), int32]) -> (Tensor[(15, 2, 4), float32], Tensor[(11, 6, 2), int16], Tensor[(132), int32]) {
  %328 = @func_3522() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
  %329 = cast(%var_8749, dtype="int32") /* ty=Tensor[(132), int32] */;
  %330 = reshape(%329, newshape=[132, 1]) /* ty=Tensor[(132, 1), int32] */;
  %331 = @func_5936(%330) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint16], Tensor[(11, 6, 2), int16], int32, Tensor[(132, 1), int32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), bool]) */;
  %332 = %328.1;
  %333 = %331.2;
  (%332, %333, %var_8749)
}

def @func_579() -> Tensor[(15, 2, 4), float64] {
  %337 = fn () -> Tensor[(15, 2, 4), float64] {
    %334 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %335 = %334.1;
    %336 = cast(%335, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
    log10(%336) /* ty=Tensor[(15, 2, 4), float64] */
  };
  %337() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_9657() -> (Tensor[(12, 15, 4), float32],) {
  %340 = fn () -> (Tensor[(12, 15, 4), float32],) {
    %338 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 4), float32] */;
    %339 = log(%338) /* ty=Tensor[(12, 15, 4), float32] */;
    (%339,)
  };
  %340() /* ty=(Tensor[(12, 15, 4), float32],) */
}

def @main() -> (Tensor[(12, 15, 4), float64],) {
  %341 = @func_9657() /* ty=(Tensor[(12, 15, 4), float32],) */;
  %342 = %341.0;
  %343 = cast(%342, dtype="float64") /* ty=Tensor[(12, 15, 4), float64] */;
  %344 = sinh(%343) /* ty=Tensor[(12, 15, 4), float64] */;
  (%344,)
}

def @func_5021(%var_5014: Tensor[(15, 2, 4), float64]) -> (Tensor[(3, 20), float32], Tensor[(15, 2, 4), bool]) {
  %345 = @func_3097() /* ty=(Tensor[(3, 20), float32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64]) */;
  %346 = @func_3979() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %347 = %346.0;
  %348 = cast(%var_5014, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%347, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %352 = %345.0;
  %353 = greater(%350, %351) /* ty=Tensor[(15, 2, 4), bool] */;
  (%352, %353)
}

def @func_6063() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_6061() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_3904() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %357 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %354 = @func_2881() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %355 = %354.1;
    %356 = @func_347() /* ty=Tensor[(15, 2, 4), float64] */;
    (%355, %356)
  };
  %357() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_322() -> Tensor[(15, 2, 4), float64] {
  @func_320() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_8271(%var_8255: Tensor[(3, 15, 1), float32]) -> Tensor[(3, 15, ?), float32] {
  %358 = cast(%var_8255, dtype="float32") /* ty=Tensor[(3, 15, 1), float32] */;
  %359 = sqrt(%358) /* ty=Tensor[(3, 15, 1), float32] */;
  %360 = cast(%359, dtype="float32") /* ty=Tensor[(3, 15, 1), float32] */;
  %361 = shape_of(%var_8255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%var_8255, dtype="float32") /* ty=Tensor[(3, 15, 1), float32] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%362, %363) /* ty=Tensor[(3, 15, ?), float32] */
}

def @func_9926() -> (Tensor[(15, 2, 4), float64],) {
  %364 = @func_1601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %365 = %364.0;
  (%365,)
}

def @func_1146() -> Tensor[(15, 2, 4), float64] {
  @func_454() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_7355() -> Tensor[(15, 2, 4), bool] {
  %366 = fn () -> Tensor[(15, 2, 4), bool] {
    @func_3736() /* ty=Tensor[(15, 2, 4), bool] */
  };
  %366() /* ty=Tensor[(15, 2, 4), bool] */
}

def @func_211(%var_178: int32, %var_179: Tensor[(11, 6, 2), int32]) -> Tensor[(11, 6, 2), int16] {
  %367 = cast(%var_178, dtype="int32") /* ty=int32 */;
  %368 = cast(%var_179, dtype="int32") /* ty=Tensor[(11, 6, 2), int32] */;
  %369 = bitwise_and(%367, %368) /* ty=Tensor[(11, 6, 2), int32] */;
  %370 = cast(%369, dtype="int16") /* ty=Tensor[(11, 6, 2), int16] */;
  %371 = cast(%var_178, dtype="int16") /* ty=int16 */;
  right_shift(%370, %371) /* ty=Tensor[(11, 6, 2), int16] */
}

def @func_6653(%var_6651: Tensor[(66, 6), uint8], %var_6652: Tensor[(60), int8]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 12, 3), uint8], Tensor[(66, 6), uint8], Tensor[(5, 3, 4), float64], Tensor[(60), int8], int32) {
  @func_6649(%var_6651, %var_6652) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 12, 3), uint8], Tensor[(66, 6), uint8], Tensor[(5, 3, 4), float64], Tensor[(60), int8], int32) */
}

def @func_1765() -> Tensor[(15, 2, 4), uint32] {
  %372 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %373 = %372.1;
  %374 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 2, 4), float64] */, dtype="uint32") /* ty=Tensor[(15, 2, 4), uint32] */;
  %375 = shape_of(%373, dtype="int32") /* ty=Tensor[(3), int32] */;
  %376 = cast(%373, dtype="uint32") /* ty=Tensor[(15, 2, 4), uint32] */;
  %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%376, %377) /* ty=Tensor[(15, 2, 4), uint32] */
}

def @func_349() -> Tensor[(15, 2, 4), float64] {
  @func_347() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_5024(%var_5022: Tensor[(15, 2, 4), float64]) -> (Tensor[(3, 20), float32], Tensor[(15, 2, 4), bool]) {
  @func_5021(%var_5022) /* ty=(Tensor[(3, 20), float32], Tensor[(15, 2, 4), bool]) */
}

def @func_8733() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %378 = @func_8165() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %379 = %378.2;
  %380 = cast(%379, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %381 = reshape(%380, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %382 = @func_1893(%381) /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %383 = %382.0;
  (%379, %383)
}

def @func_3099() -> (Tensor[(3, 20), float32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64]) {
  @func_3097() /* ty=(Tensor[(3, 20), float32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64]) */
}

def @func_9856() -> Tensor[(15, 2, 4), float64] {
  %385 = fn () -> Tensor[(15, 2, 4), float64] {
    %384 = @func_8589() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %384.0
  };
  %385() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_397(%var_394: Tensor[(5, 3, 4), int8], %var_395: Tensor[(5, 3, 4), int8], %var_396: int32) -> (Tensor[(5, 3, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32], Tensor[(15, 2, 4), bool]) {
  @func_392(%var_394, %var_395, %var_396) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32], Tensor[(15, 2, 4), bool]) */
}

def @func_3183(%var_3182: Tensor[(16, 13, 13), float64]) -> (Tensor[(16, 13, 13), bool], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) {
  %399 = fn (%var_3130: Tensor[(16, 13, 13), float64]) -> (Tensor[(16, 13, 13), bool], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) {
    %386 = cast(%var_3130, dtype="float64") /* ty=Tensor[(16, 13, 13), float64] */;
    %387 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(16, 13, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %388 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 13, 13), float64] */, dtype="float64") /* ty=Tensor[(16, 13, 13), float64] */;
    %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %390 = floor_divide(%388, %389) /* ty=Tensor[(16, 13, 13), float64] */;
    %391 = cast(%390, dtype="bool") /* ty=Tensor[(16, 13, 13), bool] */;
    %392 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(16, 13, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %393 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 13, 13), float64] */, dtype="bool") /* ty=Tensor[(16, 13, 13), bool] */;
    %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %395 = @func_2693() /* ty=(Tensor[(15, 2, 4), bool],) */;
    %396 = logical_or(%393, %394) /* ty=Tensor[(16, 13, 13), bool] */;
    %397 = %395.0;
    %398 = @func_420() /* ty=Tensor[(15, 2, 4), float64] */;
    (%396, %397, %398)
  };
  %399(%var_3182) /* ty=(Tensor[(16, 13, 13), bool], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */
}

def @func_454() -> Tensor[(15, 2, 4), float64] {
  %400 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %400.0
}

def @func_3736() -> Tensor[(15, 2, 4), bool] {
  %401 = @func_3347() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %401.1
}

def @func_8902(%var_8799: Tensor[(2, 1, 11), float32], %var_8834: Tensor[(1, 132), int32], %var_8849: Tensor[(12, 132), int32], %var_8861: Tensor[(15), float32], %var_8886: Tensor[(396), uint8], %var_8887: Tensor[(60), int8]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(2, 13, 11), uint8], Tensor[(12, 132), int8], Tensor[(15), float32], Tensor[(90, 2), float32], Tensor[(15, 2, 4), float64], Tensor[(12, 5, 3), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(396), uint8], Tensor[(60), int8], Tensor[(2, 1, 11), float32]) {
  %402 = cast(%var_8834, dtype="int32") /* ty=Tensor[(1, 132), int32] */;
  %403 = reshape(%402, newshape=[132, 1]) /* ty=Tensor[(132, 1), int32] */;
  %404 = @func_5936(%403) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint16], Tensor[(11, 6, 2), int16], int32, Tensor[(132, 1), int32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), bool]) */;
  %405 = @func_3040() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float32]) */;
  %406 = @func_8667() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %407 = cast(%var_8799, dtype="float32") /* ty=Tensor[(2, 1, 11), float32] */;
  %408 = exp(%407) /* ty=Tensor[(2, 1, 11), float32] */;
  %409 = cast(%408, dtype="float32") /* ty=Tensor[(2, 1, 11), float32] */;
  %410 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 13, 11), float32] */, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
  %411 = minimum(%409, %410) /* ty=Tensor[(2, 13, 11), float32] */;
  %412 = cast(%408, dtype="uint8") /* ty=Tensor[(2, 1, 11), uint8] */;
  %413 = cast(%411, dtype="uint8") /* ty=Tensor[(2, 13, 11), uint8] */;
  %414 = cast(%var_8834, dtype="int8") /* ty=Tensor[(1, 132), int8] */;
  %415 = cast(%var_8849, dtype="int8") /* ty=Tensor[(12, 132), int8] */;
  %416 = @func_1097() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
  %417 = cast(%var_8861, dtype="float32") /* ty=Tensor[(15), float32] */;
  %418 = cast(meta[relay.Constant][11] /* ty=Tensor[(90, 2), float32] */, dtype="float32") /* ty=Tensor[(90, 2), float32] */;
  %419 = reshape(%417, newshape=[1, 5, 3]) /* ty=Tensor[(1, 5, 3), float32] */;
  %420 = reshape(%418, newshape=[12, 5, 3]) /* ty=Tensor[(12, 5, 3), float32] */;
  %421 = @func_8696(%419, %420) /* ty=(Tensor[(12, 5, 3), float32], Tensor[(12, 5, 3), float32]) */;
  %422 = %421.1;
  %423 = cast(%422, dtype="float64") /* ty=Tensor[(12, 5, 3), float64] */;
  %424 = cast(%var_8886, dtype="uint8") /* ty=Tensor[(396), uint8] */;
  %425 = cast(%var_8887, dtype="int8") /* ty=Tensor[(60), int8] */;
  %426 = reshape(%424, newshape=[66, 6]) /* ty=Tensor[(66, 6), uint8] */;
  %427 = reshape(%425, newshape=[60]) /* ty=Tensor[(60), int8] */;
  %428 = @func_6649(%426, %427) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 12, 3), uint8], Tensor[(66, 6), uint8], Tensor[(5, 3, 4), float64], Tensor[(60), int8], int32) */;
  %429 = cast(%408, dtype="float32") /* ty=Tensor[(2, 1, 11), float32] */;
  %430 = %404.0;
  %431 = %405.0;
  %432 = %406.0;
  %433 = bitwise_xor(%412, %413) /* ty=Tensor[(2, 13, 11), uint8] */;
  %434 = left_shift(%414, %415) /* ty=Tensor[(12, 132), int8] */;
  %435 = %416.1;
  %436 = atanh(%423) /* ty=Tensor[(12, 5, 3), float64] */;
  %437 = @func_347() /* ty=Tensor[(15, 2, 4), float64] */;
  %438 = %428.1;
  %439 = acosh(%429) /* ty=Tensor[(2, 1, 11), float32] */;
  (%430, %431, %432, %433, %434, %var_8861, meta[relay.Constant][11] /* ty=Tensor[(90, 2), float32] */, %435, %436, %437, %438, %var_8886, %var_8887, %439)
}

def @func_9928() -> (Tensor[(15, 2, 4), float64],) {
  @func_9926() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_2416(%var_2413: Tensor[(6, 5, 9), float32], %var_2414: Tensor[(6, 5, 9), float32], %var_2415: Tensor[(6, 5, 9), float32]) -> (Tensor[(15, 2, 4), float64], Tensor[(6, 5, 9), bool], Tensor[(15, 2, 4), float64], Tensor[(6, 5, 9), uint16]) {
  @func_2411(%var_2413, %var_2414, %var_2415) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(6, 5, 9), bool], Tensor[(15, 2, 4), float64], Tensor[(6, 5, 9), uint16]) */
}

def @func_6031() -> (Tensor[(15, 2, 4), float64],) {
  %440 = @func_1927() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %441 = %440.0;
  (%441,)
}

def @func_3001() -> (Tensor[(15, 2, 4), float64],) {
  %442 = @func_1162() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %443 = %442.0;
  (%443,)
}

def @func_8589() -> (Tensor[(15, 2, 4), float64],) {
  %444 = @func_7752() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %445 = %444.2;
  (%445,)
}

def @func_9296() -> (Tensor[(15, 2, 4), float64], Tensor[(3, 20), uint64], Tensor[(15, 2, 4), float64]) {
  %456 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(3, 20), uint64], Tensor[(15, 2, 4), float64]) {
    %446 = @func_6216() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
    %447 = @func_2601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) */;
    %448 = %447.2;
    %449 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 20), float32] */, dtype="uint64") /* ty=Tensor[(3, 20), uint64] */;
    %450 = shape_of(%448, dtype="int32") /* ty=Tensor[(2), int32] */;
    %451 = cast(%448, dtype="uint64") /* ty=Tensor[(3, 20), uint64] */;
    %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %453 = %446.0;
    %454 = add(%451, %452) /* ty=Tensor[(3, 20), uint64] */;
    %455 = @func_7113() /* ty=Tensor[(15, 2, 4), float64] */;
    (%453, %454, %455)
  };
  %456() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(3, 20), uint64], Tensor[(15, 2, 4), float64]) */
}

def @func_4876() -> Tensor[(15, 2, 4), bool] {
  @func_4874() /* ty=Tensor[(15, 2, 4), bool] */
}

def @func_5683() -> Tensor[(15, 2, 4), float64] {
  @func_5681() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_4916(%var_4900: Tensor[(16, 5, 7), int64]) -> (Tensor[(16, 5, 7), bool], Tensor[(16, 5, 7), float32]) {
  %457 = cast(%var_4900, dtype="bool") /* ty=Tensor[(16, 5, 7), bool] */;
  %458 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(16, 5, 7), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 5, 7), int64] */, dtype="bool") /* ty=Tensor[(16, 5, 7), bool] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %461 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 5, 7), int64] */, dtype="float32") /* ty=Tensor[(16, 5, 7), float32] */;
  %462 = less(%459, %460) /* ty=Tensor[(16, 5, 7), bool] */;
  %463 = log10(%461) /* ty=Tensor[(16, 5, 7), float32] */;
  (%462, %463)
}

def @func_643() -> Tensor[(15, 2, 4), float64] {
  %467 = fn () -> Tensor[(15, 2, 4), float64] {
    %464 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
    %465 = %464.0;
    %466 = cast(%465, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
    asin(%466) /* ty=Tensor[(15, 2, 4), float64] */
  };
  %467() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_6444(%var_6439: Tensor[(11, 12, 3), uint8], %var_6440: Tensor[(11, 12, 3), uint8]) -> Tensor[(11, 12, 3), uint8] {
  %468 = cast(%var_6440, dtype="uint8") /* ty=Tensor[(11, 12, 3), uint8] */;
  %469 = shape_of(%var_6439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%var_6439, dtype="uint8") /* ty=Tensor[(11, 12, 3), uint8] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  add(%470, %471) /* ty=Tensor[(11, 12, 3), uint8] */
}

def @func_4113() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %475 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
    %472 = @func_420() /* ty=Tensor[(15, 2, 4), float64] */;
    %473 = @func_3373() /* ty=Tensor[(15, 2, 4), float64] */;
    %474 = @func_3736() /* ty=Tensor[(15, 2, 4), bool] */;
    (%472, %473, %474)
  };
  %475() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */
}

def @func_5995() -> Tensor[(15, 2, 4), float64] {
  %477 = fn () -> Tensor[(15, 2, 4), float64] {
    %476 = @func_1927() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %476.0
  };
  %477() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_5370() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_5368() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_2713(%var_2697: Tensor[(15, 2, 4), float64]) -> (Tensor[(15, 2, 4), uint16], Tensor[(15, 2, 4), bool]) {
  %478 = @func_2616() /* ty=Tensor[(15, 2, 4), float64] */;
  %479 = cast(%var_2697, dtype="uint16") /* ty=Tensor[(15, 2, 4), uint16] */;
  %480 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%478, dtype="uint16") /* ty=Tensor[(15, 2, 4), uint16] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %483 = @func_2693() /* ty=(Tensor[(15, 2, 4), bool],) */;
  %484 = multiply(%481, %482) /* ty=Tensor[(15, 2, 4), uint16] */;
  %485 = %483.0;
  (%484, %485)
}

def @func_6649(%var_6638: Tensor[(66, 6), uint8], %var_6641: Tensor[(60), int8]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 12, 3), uint8], Tensor[(66, 6), uint8], Tensor[(5, 3, 4), float64], Tensor[(60), int8], int32) {
  %486 = @func_5116() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %487 = @func_3849() /* ty=(Tensor[(9, 11, 5), float64], Tensor[(15, 2, 4), float64]) */;
  %488 = cast(%var_6638, dtype="uint8") /* ty=Tensor[(66, 6), uint8] */;
  %489 = cast(%var_6638, dtype="uint8") /* ty=Tensor[(66, 6), uint8] */;
  %490 = reshape(%488, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), uint8] */;
  %491 = reshape(%489, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), uint8] */;
  %492 = cast(%var_6641, dtype="int8") /* ty=Tensor[(60), int8] */;
  %493 = cast(%var_6641, dtype="int8") /* ty=Tensor[(60), int8] */;
  %494 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %495 = reshape(%492, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), int8] */;
  %496 = reshape(%493, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), int8] */;
  %497 = reshape(%494, newshape=[]) /* ty=int32 */;
  %498 = @func_392(%495, %496, %497) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32], Tensor[(15, 2, 4), bool]) */;
  %499 = %486.0;
  %500 = %487.1;
  %501 = @func_6444(%490, %491) /* ty=Tensor[(11, 12, 3), uint8] */;
  %502 = %498.0;
  (%499, %500, %501, %var_6638, %502, %var_6641, -5 /* ty=int32 */)
}

def @func_7114() -> Tensor[(15, 2, 4), float64] {
  %504 = fn () -> Tensor[(15, 2, 4), float64] {
    %503 = @func_4288() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
    %503.0
  };
  %504() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_10040() -> Tensor[(15, 2, 4), float64] {
  %506 = fn () -> Tensor[(15, 2, 4), float64] {
    %505 = @func_5419() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint32]) */;
    %505.0
  };
  %506() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_6672() -> Tensor[(15, 2, 4), float64] {
  %507 = @func_4066() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %507.1
}

def @func_1516(%var_1496: Tensor[(8, 1, 14), int64], %var_1497: Tensor[(8, 8, 14), int64]) -> (Tensor[(8, 8, 14), bool], Tensor[(15, 2, 4), float64]) {
  %508 = cast(%var_1496, dtype="bool") /* ty=Tensor[(8, 1, 14), bool] */;
  %509 = cast(%var_1497, dtype="bool") /* ty=Tensor[(8, 8, 14), bool] */;
  %510 = equal(%508, %509) /* ty=Tensor[(8, 8, 14), bool] */;
  %511 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  (%510, %511)
}

def @func_2540(%var_2539: Tensor[(5, 5, 15), float64]) -> (Tensor[(5, 5, 15), float64],) {
  %514 = fn (%var_2516: Tensor[(5, 5, 15), float64]) -> (Tensor[(5, 5, 15), float64],) {
    %512 = cast(%var_2516, dtype="float64") /* ty=Tensor[(5, 5, 15), float64] */;
    %513 = acos(%512) /* ty=Tensor[(5, 5, 15), float64] */;
    (%513,)
  };
  %514(%var_2539) /* ty=(Tensor[(5, 5, 15), float64],) */
}

def @func_392(%var_353: Tensor[(5, 3, 4), int8], %var_354: Tensor[(5, 3, 4), int8], %var_379: int32) -> (Tensor[(5, 3, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32], Tensor[(15, 2, 4), bool]) {
  %515 = cast(%var_354, dtype="int8") /* ty=Tensor[(5, 3, 4), int8] */;
  %516 = shape_of(%var_353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(%var_353, dtype="int8") /* ty=Tensor[(5, 3, 4), int8] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %519 = multiply(%517, %518) /* ty=Tensor[(5, 3, 4), int8] */;
  %520 = cast(%519, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
  %521 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %522 = cast(%var_379, dtype="int32") /* ty=int32 */;
  %523 = cast(meta[relay.Constant][14] /* ty=Tensor[(132), int32] */, dtype="int32") /* ty=Tensor[(132), int32] */;
  %524 = reshape(%522, newshape=[]) /* ty=int32 */;
  %525 = reshape(%523, newshape=[11, 6, 2]) /* ty=Tensor[(11, 6, 2), int32] */;
  %526 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %527 = sin(%520) /* ty=Tensor[(5, 3, 4), float64] */;
  %528 = %521.1;
  %529 = @func_211(%524, %525) /* ty=Tensor[(11, 6, 2), int16] */;
  %530 = %526.1;
  (%527, %528, %529, %var_379, meta[relay.Constant][14] /* ty=Tensor[(132), int32] */, %530)
}

def @func_9357() -> (Tensor[(15, 2, 4), float64],) {
  @func_9355() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_482(%var_465: Tensor[(60), int8], %var_466: int32) -> (Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], Tensor[(60), int8], int32) {
  %531 = cast(%var_465, dtype="int8") /* ty=Tensor[(60), int8] */;
  %532 = cast(%var_465, dtype="int8") /* ty=Tensor[(60), int8] */;
  %533 = cast(%var_466, dtype="int32") /* ty=int32 */;
  %534 = reshape(%531, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), int8] */;
  %535 = reshape(%532, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), int8] */;
  %536 = reshape(%533, newshape=[]) /* ty=int32 */;
  %537 = @func_392(%534, %535, %536) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32], Tensor[(15, 2, 4), bool]) */;
  %538 = @func_347() /* ty=Tensor[(15, 2, 4), float64] */;
  %539 = %537.2;
  (%538, %539, %var_465, %var_466)
}

def @func_10695() -> (Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float64], Tensor[(15, 2, 4), float64]) {
  @func_10693() /* ty=(Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_5655() -> Tensor[(15, 2, 4), float64] {
  %540 = fn () -> Tensor[(15, 2, 4), float64] {
    @func_3373() /* ty=Tensor[(15, 2, 4), float64] */
  };
  %540() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_7410() -> (Tensor[(15, 2, 4), float64], Tensor[(12, 5, ?), float32]) {
  %550 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(12, 5, ?), float32]) {
    %541 = @func_6150() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %542 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 5, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 1), float64] */;
    %543 = atanh(%542) /* ty=Tensor[(12, 5, 1), float64] */;
    %544 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 5, 1), float64] */, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
    %545 = shape_of(%543, dtype="int32") /* ty=Tensor[(3), int32] */;
    %546 = cast(%543, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
    %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %548 = %541.1;
    %549 = floor_mod(%546, %547) /* ty=Tensor[(12, 5, ?), float32] */;
    (%548, %549)
  };
  %550() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(12, 5, ?), float32]) */
}

def @func_9017() -> (Tensor[(15, 2, 4), float64],) {
  @func_9015() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_3787() -> (Tensor[(15, 2, 4), float64],) {
  %551 = @func_3747() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %552 = %551.0;
  (%552,)
}

def @func_8591() -> (Tensor[(15, 2, 4), float64],) {
  @func_8589() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_4859() -> (Tensor[(15, 2, 4), float32],) {
  @func_4857() /* ty=(Tensor[(15, 2, 4), float32],) */
}

def @func_6520() -> Tensor[(15, 2, 4), float64] {
  %554 = fn () -> Tensor[(15, 2, 4), float64] {
    %553 = @func_5200() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %553.1
  };
  %554() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_7574() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %557 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %555 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
    %556 = @func_2970() /* ty=Tensor[(15, 2, 4), float64] */;
    (%555, %556)
  };
  %557() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_4574(%var_4572: uint8, %var_4573: Tensor[(896), uint8]) -> (Tensor[(15, 2, 4), float64], Tensor[(896), uint8], Tensor[(8, 14, 8), bool]) {
  @func_4570(%var_4572, %var_4573) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(896), uint8], Tensor[(8, 14, 8), bool]) */
}

def @func_3126() -> (Tensor[(15, 2, 4), float64],) {
  %558 = @func_1690() /* ty=Tensor[(15, 2, 4), float64] */;
  (%558,)
}

def @func_848(%var_846: Tensor[(15, 2, 4), float64]) -> (Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), bool]) {
  @func_845(%var_846) /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), bool]) */
}

def @func_10693() -> (Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float64], Tensor[(15, 2, 4), float64]) {
  %559 = @func_4857() /* ty=(Tensor[(15, 2, 4), float32],) */;
  %560 = @func_8929() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %561 = %560.0;
  %562 = cast(%561, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %563 = reshape(%562, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %564 = @func_920(%563) /* ty=(Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float32]) */;
  %565 = @func_8589() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %566 = @func_2601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) */;
  %567 = %566.2;
  %568 = cast(%567, dtype="float64") /* ty=Tensor[(3, 20), float64] */;
  %569 = @func_10597() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %570 = %559.0;
  %571 = %564.0;
  %572 = %565.0;
  %573 = acos(%568) /* ty=Tensor[(3, 20), float64] */;
  %574 = %569.0;
  (%570, %561, %571, %572, %573, %574)
}

def @func_5202() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_5200() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_9036() -> Tensor[(3, 20), float32] {
  %576 = fn () -> Tensor[(3, 20), float32] {
    %575 = @func_3097() /* ty=(Tensor[(3, 20), float32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64]) */;
    %575.0
  };
  %576() /* ty=Tensor[(3, 20), float32] */
}

def @func_8165() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %577 = @func_7042() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %578 = @func_3979() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %579 = @func_1601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %580 = %577.0;
  %581 = %578.0;
  %582 = %579.2;
  (%580, %581, %582)
}

def @func_2633() -> Tensor[(15, 2, 4), float64] {
  %584 = fn () -> Tensor[(15, 2, 4), float64] {
    %583 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
    %583.0
  };
  %584() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_10342() -> (Tensor[(15, 2, 4), float64],) {
  @func_10340() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_4481() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_4479() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_7044() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_7042() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_4535() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_4533() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_10529() -> Tensor[(15, 2, 4), float64] {
  %585 = @func_2881() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %585.0
}

def @func_1896(%var_1894: Tensor[(15, 2, 4), float64]) -> (Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  @func_1893(%var_1894) /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */
}

def @func_6674() -> Tensor[(15, 2, 4), float64] {
  @func_6672() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_5420() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint32]) {
  %588 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint32]) {
    %586 = @func_420() /* ty=Tensor[(15, 2, 4), float64] */;
    %587 = @func_1765() /* ty=Tensor[(15, 2, 4), uint32] */;
    (%586, %587)
  };
  %588() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint32]) */
}

def @func_420() -> Tensor[(15, 2, 4), float64] {
  @func_320() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_1520(%var_1518: Tensor[(8, 1, 14), int64], %var_1519: Tensor[(8, 8, 14), int64]) -> (Tensor[(8, 8, 14), bool], Tensor[(15, 2, 4), float64]) {
  @func_1516(%var_1518, %var_1519) /* ty=(Tensor[(8, 8, 14), bool], Tensor[(15, 2, 4), float64]) */
}

def @func_1162() -> (Tensor[(15, 2, 4), float64],) {
  %589 = @func_347() /* ty=Tensor[(15, 2, 4), float64] */;
  (%589,)
}

def @func_683(%var_681: Tensor[(60, 1), int8], %var_682: int32) -> (Tensor[(15, 2, 4), float64], int32, Tensor[(60, 1), int8], int32, Tensor[(15, 2, 4), float64]) {
  @func_679(%var_681, %var_682) /* ty=(Tensor[(15, 2, 4), float64], int32, Tensor[(60, 1), int8], int32, Tensor[(15, 2, 4), float64]) */
}

def @func_7683() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_7681() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_3789() -> (Tensor[(15, 2, 4), float64],) {
  @func_3787() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_7681() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %590 = @func_7518() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %591 = @func_6519() /* ty=Tensor[(15, 2, 4), float64] */;
  %592 = %590.1;
  (%591, %592)
}

def @func_922(%var_921: Tensor[(15, 2, 4), float64]) -> (Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float32]) {
  %601 = fn (%var_890: Tensor[(15, 2, 4), float64]) -> (Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float32]) {
    %593 = @func_454() /* ty=Tensor[(15, 2, 4), float64] */;
    %594 = cast(%var_890, dtype="float32") /* ty=Tensor[(15, 2, 4), float32] */;
    %595 = shape_of(%593, dtype="int32") /* ty=Tensor[(3), int32] */;
    %596 = cast(%593, dtype="float32") /* ty=Tensor[(15, 2, 4), float32] */;
    %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %598 = cast(%593, dtype="float32") /* ty=Tensor[(15, 2, 4), float32] */;
    %599 = minimum(%596, %597) /* ty=Tensor[(15, 2, 4), float32] */;
    %600 = log2(%598) /* ty=Tensor[(15, 2, 4), float32] */;
    (%599, %600)
  };
  %601(%var_921) /* ty=(Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float32]) */
}

def @func_2662() -> (Tensor[(15, 2, 4), float64],) {
  %604 = fn () -> (Tensor[(15, 2, 4), float64],) {
    %602 = @func_1566() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %603 = %602.0;
    (%603,)
  };
  %604() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_1231() -> (Tensor[(15, 2, 4), float64],) {
  %606 = fn () -> (Tensor[(15, 2, 4), float64],) {
    %605 = @func_347() /* ty=Tensor[(15, 2, 4), float64] */;
    (%605,)
  };
  %606() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_8402() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %613 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
    %607 = @func_5116() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %608 = %607.0;
    %609 = cast(%608, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
    %610 = reshape(%609, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
    %611 = @func_5021(%610) /* ty=(Tensor[(3, 20), float32], Tensor[(15, 2, 4), bool]) */;
    %612 = %611.1;
    (%608, %612)
  };
  %613() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */
}

def @func_8628() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %614 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %615 = @func_1812() /* ty=Tensor[(15, 2, 4), float64] */;
  %616 = @func_5994() /* ty=Tensor[(15, 2, 4), float64] */;
  %617 = %614.1;
  (%615, %616, %617)
}

def @func_8630() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  @func_8628() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */
}

def @func_679(%var_671: Tensor[(60, 1), int8], %var_672: int32) -> (Tensor[(15, 2, 4), float64], int32, Tensor[(60, 1), int8], int32, Tensor[(15, 2, 4), float64]) {
  %618 = cast(%var_671, dtype="int8") /* ty=Tensor[(60, 1), int8] */;
  %619 = cast(%var_672, dtype="int32") /* ty=int32 */;
  %620 = reshape(%618, newshape=[60]) /* ty=Tensor[(60), int8] */;
  %621 = reshape(%619, newshape=[]) /* ty=int32 */;
  %622 = @func_482(%620, %621) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], Tensor[(60), int8], int32) */;
  %623 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %624 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  %625 = %622.3;
  %626 = %623.0;
  (%624, %625, %var_671, %var_672, %626)
}

def @func_3097() -> (Tensor[(3, 20), float32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64]) {
  %627 = @func_2601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) */;
  %628 = @func_2881() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %629 = %628.1;
  %630 = cast(%629, dtype="float32") /* ty=Tensor[(15, 2, 4), float32] */;
  %631 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %632 = %627.2;
  %633 = sin(%630) /* ty=Tensor[(15, 2, 4), float32] */;
  %634 = %631.0;
  (%632, %633, %634)
}

def @func_2208() -> Tensor[(15, 2, 4), float64] {
  @func_2206() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_3410() -> Tensor[(15, 2, 4), float64] {
  %636 = fn () -> Tensor[(15, 2, 4), float64] {
    %635 = @func_3126() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %635.0
  };
  %636() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_8115() -> (Tensor[(15, 2, 4), float64],) {
  @func_8113() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_2151(%var_2149: Tensor[(16, 15, 7), uint32], %var_2150: Tensor[(16, 15, 7), uint32]) -> (Tensor[(16, 15, 7), uint32],) {
  %642 = fn (%var_2141: Tensor[(16, 15, 7), uint32], %var_2142: Tensor[(16, 15, 7), uint32]) -> (Tensor[(16, 15, 7), uint32],) {
    %637 = cast(%var_2142, dtype="uint32") /* ty=Tensor[(16, 15, 7), uint32] */;
    %638 = shape_of(%var_2141, dtype="int32") /* ty=Tensor[(3), int32] */;
    %639 = cast(%var_2141, dtype="uint32") /* ty=Tensor[(16, 15, 7), uint32] */;
    %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %641 = multiply(%639, %640) /* ty=Tensor[(16, 15, 7), uint32] */;
    (%641,)
  };
  %642(%var_2149, %var_2150) /* ty=(Tensor[(16, 15, 7), uint32],) */
}

def @func_5246() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_5244() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_1767() -> Tensor[(15, 2, 4), uint32] {
  @func_1765() /* ty=Tensor[(15, 2, 4), uint32] */
}

def @func_3980() -> (Tensor[(15, 2, 4), float64],) {
  %645 = fn () -> (Tensor[(15, 2, 4), float64],) {
    %643 = @func_2601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) */;
    %644 = %643.1;
    (%644,)
  };
  %645() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_9977() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  @func_9975() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */
}

def @func_6756() -> (Tensor[(15, 2, 4), float64], uint8, Tensor[(15, 2, 4), float64], Tensor[(112, 8), bool]) {
  %646 = @func_6031() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %647 = cast(meta[relay.Constant][16] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %648 = cast(meta[relay.Constant][17] /* ty=Tensor[(112, 8), uint8] */, dtype="uint8") /* ty=Tensor[(112, 8), uint8] */;
  %649 = reshape(%647, newshape=[]) /* ty=uint8 */;
  %650 = reshape(%648, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), uint8] */;
  %651 = @func_2239(%649, %650) /* ty=Tensor[(8, 14, 8), uint8] */;
  %652 = cast(%651, dtype="bool") /* ty=Tensor[(8, 14, 8), bool] */;
  %653 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(112, 8), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %654 = cast(meta[relay.Constant][17] /* ty=Tensor[(112, 8), uint8] */, dtype="bool") /* ty=Tensor[(112, 8), bool] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %656 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  %657 = %646.0;
  %658 = less_equal(%654, %655) /* ty=Tensor[(112, 8), bool] */;
  (%656, meta[relay.Constant][16] /* ty=uint8 */, %657, %658)
}

def @func_10116(%var_10114: Tensor[(9, 13, 6), float32]) -> (Tensor[(9, 13, 6), float32],) {
  @func_10113(%var_10114) /* ty=(Tensor[(9, 13, 6), float32],) */
}

def @func_1415() -> (Tensor[(15, 2, 4), float64],) {
  %660 = fn () -> (Tensor[(15, 2, 4), float64],) {
    %659 = @func_1146() /* ty=Tensor[(15, 2, 4), float64] */;
    (%659,)
  };
  %660() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_1567() -> (Tensor[(15, 2, 4), float64],) {
  %663 = fn () -> (Tensor[(15, 2, 4), float64],) {
    %661 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
    %662 = %661.1;
    (%662,)
  };
  %663() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_4290() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  @func_4288() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */
}

def @func_5244() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %664 = @func_4066() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %665 = @func_3903() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %666 = %664.1;
  %667 = %665.0;
  (%666, %667)
}

def @func_6614() -> Tensor[(15, 2, 4), float64] {
  @func_5389() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_5389() -> Tensor[(15, 2, 4), float64] {
  %668 = @func_1927() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %668.1
}

def @func_4874() -> Tensor[(15, 2, 4), bool] {
  %669 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %669.0
}

def @func_170() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %679 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
    %670 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %671 = %670.0;
    %672 = cast(%671, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
    %673 = cast(meta[relay.Constant][18] /* ty=Tensor[(15, 2, 4), float64] */, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
    %674 = shape_of(%671, dtype="int32") /* ty=Tensor[(3), int32] */;
    %675 = cast(%671, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
    %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %677 = log(%672) /* ty=Tensor[(15, 2, 4), float64] */;
    %678 = not_equal(%675, %676) /* ty=Tensor[(15, 2, 4), bool] */;
    (%677, %678)
  };
  %679() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */
}

def @func_5081() -> (Tensor[(15, 2, 4), float64],) {
  %680 = @func_4533() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %681 = %680.0;
  (%681,)
}

def @func_10340() -> (Tensor[(15, 2, 4), float64],) {
  %682 = @func_7681() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %683 = %682.0;
  (%683,)
}

def @func_1676() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %684 = @func_642() /* ty=Tensor[(15, 2, 4), float64] */;
  %685 = @func_420() /* ty=Tensor[(15, 2, 4), float64] */;
  (%684, %685)
}

def @func_10579() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %690 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %686 = @func_9732() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %687 = %686.0;
    %688 = @func_5613() /* ty=Tensor[(15, 2, 4), float64] */;
    %689 = @func_6124() /* ty=Tensor[(15, 2, 4), float64] */;
    (%687, %688, %689)
  };
  %690() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_10597() -> (Tensor[(15, 2, 4), float64],) {
  %691 = @func_7573() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %692 = %691.0;
  (%692,)
}

def @func_2206() -> Tensor[(15, 2, 4), float64] {
  @func_347() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_4442(%var_4397: Tensor[(7, 5, 7), float32], %var_4398: Tensor[(7, 5, 7), float32]) -> (Tensor[(7, 5, 7), bool], Tensor[(15, 2, 4), float32], Tensor[(120), float64], Tensor[(15, 2, 4), uint32]) {
  %693 = cast(%var_4398, dtype="bool") /* ty=Tensor[(7, 5, 7), bool] */;
  %694 = shape_of(%var_4397, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%var_4397, dtype="bool") /* ty=Tensor[(7, 5, 7), bool] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %697 = cast(meta[relay.Constant][19] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %698 = reshape(%697, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %699 = @func_920(%698) /* ty=(Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float32]) */;
  %700 = equal(%695, %696) /* ty=Tensor[(7, 5, 7), bool] */;
  %701 = %699.1;
  %702 = @func_1765() /* ty=Tensor[(15, 2, 4), uint32] */;
  (%700, %701, meta[relay.Constant][19] /* ty=Tensor[(120), float64] */, %702)
}

def @func_5368() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %703 = @func_2808() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %704 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %705 = @func_1414() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %706 = %703.0;
  %707 = %704.1;
  %708 = %705.0;
  (%706, %707, %708)
}

def @func_2618() -> Tensor[(15, 2, 4), float64] {
  @func_2616() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_1164() -> (Tensor[(15, 2, 4), float64],) {
  @func_1162() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_486(%var_484: Tensor[(60), int8], %var_485: int32) -> (Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], Tensor[(60), int8], int32) {
  @func_482(%var_484, %var_485) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], Tensor[(60), int8], int32) */
}

def @func_7221(%var_7219: Tensor[(224), float32]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint32], Tensor[(11, 6, 2), int16], int32, Tensor[(15, 2, 4), float64], Tensor[(224), float32], Tensor[(16, 14, 132), uint32]) {
  @func_7218(%var_7219) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint32], Tensor[(11, 6, 2), int16], int32, Tensor[(15, 2, 4), float64], Tensor[(224), float32], Tensor[(16, 14, 132), uint32]) */
}

def @func_117() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_5482() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %709 = @func_1414() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %710 = @func_3409() /* ty=Tensor[(15, 2, 4), float64] */;
  %711 = %709.0;
  (%710, %711)
}

def @func_2568() -> Tensor[(15, 2, 4), float64] {
  %716 = fn () -> Tensor[(15, 2, 4), float64] {
    %712 = @func_2206() /* ty=Tensor[(15, 2, 4), float64] */;
    %713 = cast(%712, dtype="float32") /* ty=Tensor[(15, 2, 4), float32] */;
    %714 = sqrt(%713) /* ty=Tensor[(15, 2, 4), float32] */;
    %715 = cast(%714, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
    sinh(%715) /* ty=Tensor[(15, 2, 4), float64] */
  };
  %716() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_10084() -> Tensor[(2, 6, ?), int32] {
  %723 = fn () -> Tensor[(2, 6, ?), int32] {
    %717 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 6, 1), float64] */, dtype="float64") /* ty=Tensor[(2, 6, 1), float64] */;
    %718 = asin(%717) /* ty=Tensor[(2, 6, 1), float64] */;
    %719 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 6, 1), float64] */, dtype="int32") /* ty=Tensor[(2, 6, 1), int32] */;
    %720 = shape_of(%718, dtype="int32") /* ty=Tensor[(3), int32] */;
    %721 = cast(%718, dtype="int32") /* ty=Tensor[(2, 6, 1), int32] */;
    %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    multiply(%721, %722) /* ty=Tensor[(2, 6, ?), int32] */
  };
  %723() /* ty=Tensor[(2, 6, ?), int32] */
}

def @func_5781() -> Tensor[(15, 2, 4), float64] {
  %725 = fn () -> Tensor[(15, 2, 4), float64] {
    %724 = @func_3282() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %724.0
  };
  %725() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_7218(%var_7211: Tensor[(224), float32]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint32], Tensor[(11, 6, 2), int16], int32, Tensor[(15, 2, 4), float64], Tensor[(224), float32], Tensor[(16, 14, 132), uint32]) {
  %726 = @func_2601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) */;
  %727 = cast(-2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %728 = cast(meta[relay.Constant][21] /* ty=Tensor[(132), int32] */, dtype="int32") /* ty=Tensor[(132), int32] */;
  %729 = reshape(%727, newshape=[]) /* ty=int32 */;
  %730 = reshape(%728, newshape=[11, 6, 2]) /* ty=Tensor[(11, 6, 2), int32] */;
  %731 = cast(meta[relay.Constant][21] /* ty=Tensor[(132), int32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %732 = asinh(%731) /* ty=Tensor[(132), float32] */;
  %733 = cast(%var_7211, dtype="float32") /* ty=Tensor[(224), float32] */;
  %734 = reshape(%733, newshape=[16, 14, 1]) /* ty=Tensor[(16, 14, 1), float32] */;
  %735 = @func_4237(%734) /* ty=Tensor[(16, 14, 1), float32] */;
  %736 = cast(%732, dtype="uint32") /* ty=Tensor[(132), uint32] */;
  %737 = cast(%735, dtype="uint32") /* ty=Tensor[(16, 14, 1), uint32] */;
  %738 = %726.3;
  %739 = @func_1765() /* ty=Tensor[(15, 2, 4), uint32] */;
  %740 = @func_211(%729, %730) /* ty=Tensor[(11, 6, 2), int16] */;
  %741 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  %742 = subtract(%736, %737) /* ty=Tensor[(16, 14, 132), uint32] */;
  (%738, %739, %740, -2 /* ty=int32 */, %741, %var_7211, %742)
}

def @func_7466(%var_7465: Tensor[(1, 13, 2), int32]) -> (Tensor[(12, 13, 2), bool], Tensor[(15, 2, 4), float64]) {
  %748 = fn (%var_7433: Tensor[(1, 13, 2), int32]) -> (Tensor[(12, 13, 2), bool], Tensor[(15, 2, 4), float64]) {
    %743 = cast(%var_7433, dtype="bool") /* ty=Tensor[(1, 13, 2), bool] */;
    %744 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 13, 2), int32] */, dtype="bool") /* ty=Tensor[(12, 13, 2), bool] */;
    %745 = @func_5419() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint32]) */;
    %746 = greater(%743, %744) /* ty=Tensor[(12, 13, 2), bool] */;
    %747 = %745.0;
    (%746, %747)
  };
  %748(%var_7465) /* ty=(Tensor[(12, 13, 2), bool], Tensor[(15, 2, 4), float64]) */
}

def @func_5939(%var_5937: Tensor[(132, 1), int32]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint16], Tensor[(11, 6, 2), int16], int32, Tensor[(132, 1), int32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), bool]) {
  @func_5936(%var_5937) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint16], Tensor[(11, 6, 2), int16], int32, Tensor[(132, 1), int32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), bool]) */
}

def @func_2883() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_2881() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_5484() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_5482() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_8466(%var_8464: Tensor[(1, 3, 7), float32], %var_8465: Tensor[(1, 120), float64]) -> (Tensor[(132), int32], Tensor[(60), int8], int32, Tensor[(15, 2, 4), float64], Tensor[(1, 120), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(?, 3, 7), float32], Tensor[(?, 3, 7), uint32], Tensor[(?, 3, 7), float32]) {
  %786 = fn (%var_8418: Tensor[(1, 3, 7), float32], %var_8433: Tensor[(1, 120), float64]) -> (Tensor[(132), int32], Tensor[(60), int8], int32, Tensor[(15, 2, 4), float64], Tensor[(1, 120), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(?, 3, 7), float32], Tensor[(?, 3, 7), uint32], Tensor[(?, 3, 7), float32]) {
    %749 = cast(meta[relay.Constant][23] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
    %750 = cast(meta[relay.Constant][23] /* ty=Tensor[(60), int8] */, dtype="int8") /* ty=Tensor[(60), int8] */;
    %751 = cast(-2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %752 = reshape(%749, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), int8] */;
    %753 = reshape(%750, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), int8] */;
    %754 = reshape(%751, newshape=[]) /* ty=int32 */;
    %755 = @func_392(%752, %753, %754) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32], Tensor[(15, 2, 4), bool]) */;
    %756 = cast(%var_8433, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
    %757 = reshape(%756, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
    %758 = @func_1893(%757) /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
    %759 = @func_2881() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %760 = @func_6216() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
    %761 = cast(%var_8418, dtype="float32") /* ty=Tensor[(1, 3, 7), float32] */;
    %762 = erf(%761) /* ty=Tensor[(1, 3, 7), float32] */;
    %763 = cast(%762, dtype="float32") /* ty=Tensor[(1, 3, 7), float32] */;
    %764 = atan(%763) /* ty=Tensor[(1, 3, 7), float32] */;
    %765 = cast(%762, dtype="int16") /* ty=Tensor[(1, 3, 7), int16] */;
    %766 = shape_of(%764, dtype="int32") /* ty=Tensor[(3), int32] */;
    %767 = cast(%764, dtype="int16") /* ty=Tensor[(1, 3, 7), int16] */;
    %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %769 = subtract(%767, %768) /* ty=Tensor[(?, 3, 7), int16] */;
    %770 = cast(%769, dtype="float32") /* ty=Tensor[(?, 3, 7), float32] */;
    %771 = shape_of(%762, dtype="int32") /* ty=Tensor[(3), int32] */;
    %772 = cast(%762, dtype="float32") /* ty=Tensor[(1, 3, 7), float32] */;
    %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %774 = cast(%769, dtype="uint32") /* ty=Tensor[(?, 3, 7), uint32] */;
    %775 = shape_of(%762, dtype="int32") /* ty=Tensor[(3), int32] */;
    %776 = cast(%762, dtype="uint32") /* ty=Tensor[(1, 3, 7), uint32] */;
    %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %778 = cast(%769, dtype="float32") /* ty=Tensor[(?, 3, 7), float32] */;
    %779 = %755.4;
    %780 = %758.1;
    %781 = %759.0;
    %782 = %760.1;
    %783 = floor_divide(%772, %773) /* ty=Tensor[(?, 3, 7), float32] */;
    %784 = bitwise_and(%776, %777) /* ty=Tensor[(?, 3, 7), uint32] */;
    %785 = cosh(%778) /* ty=Tensor[(?, 3, 7), float32] */;
    (%779, meta[relay.Constant][23] /* ty=Tensor[(60), int8] */, -2 /* ty=int32 */, %780, %var_8433, %781, %782, %783, %784, %785)
  };
  %786(%var_8464, %var_8465) /* ty=(Tensor[(132), int32], Tensor[(60), int8], int32, Tensor[(15, 2, 4), float64], Tensor[(1, 120), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(?, 3, 7), float32], Tensor[(?, 3, 7), uint32], Tensor[(?, 3, 7), float32]) */
}

def @func_2838(%var_2837: Tensor[(15, 2, 4), bool]) -> (Tensor[(15, 2, 4), int8], Tensor[(15, 2, 4), int16]) {
  %799 = fn (%var_2823: Tensor[(15, 2, 4), bool]) -> (Tensor[(15, 2, 4), int8], Tensor[(15, 2, 4), int16]) {
    %787 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
    %788 = %787.1;
    %789 = cast(%var_2823, dtype="int8") /* ty=Tensor[(15, 2, 4), int8] */;
    %790 = shape_of(%788, dtype="int32") /* ty=Tensor[(3), int32] */;
    %791 = cast(%788, dtype="int8") /* ty=Tensor[(15, 2, 4), int8] */;
    %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %793 = cast(%788, dtype="int16") /* ty=Tensor[(15, 2, 4), int16] */;
    %794 = shape_of(%var_2823, dtype="int32") /* ty=Tensor[(3), int32] */;
    %795 = cast(%var_2823, dtype="int16") /* ty=Tensor[(15, 2, 4), int16] */;
    %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %797 = left_shift(%791, %792) /* ty=Tensor[(15, 2, 4), int8] */;
    %798 = add(%795, %796) /* ty=Tensor[(15, 2, 4), int16] */;
    (%797, %798)
  };
  %799(%var_2837) /* ty=(Tensor[(15, 2, 4), int8], Tensor[(15, 2, 4), int16]) */
}

def @func_6232() -> Tensor[(15, 2, 4), float64] {
  %801 = fn () -> Tensor[(15, 2, 4), float64] {
    %800 = @func_4112() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
    %800.0
  };
  %801() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_6616() -> Tensor[(15, 2, 4), float64] {
  @func_6614() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_4288() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  %802 = @func_1690() /* ty=Tensor[(15, 2, 4), float64] */;
  %803 = cast(%802, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %804 = reshape(%803, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %805 = @func_2458(%804) /* ty=(Tensor[(15, 2, 4), uint32], Tensor[(15, 2, 4), float32]) */;
  %806 = %805.1;
  (%802, %806)
}

def @func_1099() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  @func_1097() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */
}

def @func_2881() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %807 = @func_1120() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %808 = %807.1;
  %809 = @func_347() /* ty=Tensor[(15, 2, 4), float64] */;
  (%808, %809)
}

def @func_8946() -> (Tensor[(15, 2, 4), float64],) {
  %811 = fn () -> (Tensor[(15, 2, 4), float64],) {
    %810 = @func_5389() /* ty=Tensor[(15, 2, 4), float64] */;
    (%810,)
  };
  %811() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_8669() -> (Tensor[(15, 2, 4), float64],) {
  @func_8667() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_10405() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %818 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
    %812 = @func_7681() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %813 = @func_7573() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %814 = @func_9248() /* ty=(Tensor[(15, 2, 4), bool],) */;
    %815 = %812.1;
    %816 = %813.0;
    %817 = %814.0;
    (%815, %816, %817)
  };
  %818() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */
}

def @func_5117() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %825 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %819 = @func_3347() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %820 = @func_3001() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %821 = @func_1566() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %822 = %819.3;
    %823 = %820.0;
    %824 = %821.0;
    (%822, %823, %824)
  };
  %825() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_8667() -> (Tensor[(15, 2, 4), float64],) {
  %826 = @func_7681() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %827 = %826.0;
  (%827,)
}

def @func_3504() -> (Tensor[(15, 2, 4), float64],) {
  %829 = fn () -> (Tensor[(15, 2, 4), float64],) {
    %828 = @func_1690() /* ty=Tensor[(15, 2, 4), float64] */;
    (%828,)
  };
  %829() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_1602() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %836 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %830 = @func_642() /* ty=Tensor[(15, 2, 4), float64] */;
    %831 = cast(%830, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
    %832 = @func_1230() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %833 = atanh(%831) /* ty=Tensor[(15, 2, 4), float64] */;
    %834 = @func_578() /* ty=Tensor[(15, 2, 4), float64] */;
    %835 = %832.0;
    (%833, %834, %835)
  };
  %836() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_215(%var_213: int32, %var_214: Tensor[(11, 6, 2), int32]) -> Tensor[(11, 6, 2), int16] {
  @func_211(%var_213, %var_214) /* ty=Tensor[(11, 6, 2), int16] */
}

def @func_6033() -> (Tensor[(15, 2, 4), float64],) {
  @func_6031() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_1691() -> Tensor[(15, 2, 4), float64] {
  %838 = fn () -> Tensor[(15, 2, 4), float64] {
    %837 = @func_1097() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
    %837.0
  };
  %838() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_6151() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %841 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %839 = @func_1690() /* ty=Tensor[(15, 2, 4), float64] */;
    %840 = @func_642() /* ty=Tensor[(15, 2, 4), float64] */;
    (%839, %840)
  };
  %841() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_7861(%var_7860: Tensor[(3, 20), float32]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], int32, int32) {
  %862 = fn (%var_7798: Tensor[(3, 20), float32]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], int32, int32) {
    %842 = @func_1120() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %843 = @func_3097() /* ty=(Tensor[(3, 20), float32], Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float64]) */;
    %844 = %843.0;
    %845 = cast(%var_7798, dtype="bool") /* ty=Tensor[(3, 20), bool] */;
    %846 = shape_of(%844, dtype="int32") /* ty=Tensor[(2), int32] */;
    %847 = cast(%844, dtype="bool") /* ty=Tensor[(3, 20), bool] */;
    %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %849 = not_equal(%847, %848) /* ty=Tensor[(3, 20), bool] */;
    %850 = cast(%849, dtype="float64") /* ty=Tensor[(3, 20), float64] */;
    %851 = cos(%850) /* ty=Tensor[(3, 20), float64] */;
    %852 = cast(%851, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
    %853 = atanh(%852) /* ty=Tensor[(3, 20), float32] */;
    %854 = cast(%853, dtype="int8") /* ty=Tensor[(3, 20), int8] */;
    %855 = cast(1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %856 = reshape(%854, newshape=[60, 1]) /* ty=Tensor[(60, 1), int8] */;
    %857 = reshape(%855, newshape=[]) /* ty=int32 */;
    %858 = @func_679(%856, %857) /* ty=(Tensor[(15, 2, 4), float64], int32, Tensor[(60, 1), int8], int32, Tensor[(15, 2, 4), float64]) */;
    %859 = @func_5780() /* ty=Tensor[(15, 2, 4), float64] */;
    %860 = %842.0;
    %861 = %858.1;
    (%859, %860, %853, %861, 1 /* ty=int32 */)
  };
  %862(%var_7860) /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], int32, int32) */
}

def @func_2900(%var_2887: Tensor[(13, 14, 5), float32]) -> (Tensor[(13, 14, 5), float32],) {
  %863 = cast(%var_2887, dtype="float32") /* ty=Tensor[(13, 14, 5), float32] */;
  %864 = acosh(%863) /* ty=Tensor[(13, 14, 5), float32] */;
  (%864,)
}

def @func_3282() -> (Tensor[(15, 2, 4), float64],) {
  %865 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  (%865,)
}

def @func_7937() -> (Tensor[(15, 2, 4), float64],) {
  %868 = fn () -> (Tensor[(15, 2, 4), float64],) {
    %866 = @func_2881() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %867 = %866.1;
    (%867,)
  };
  %868() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_1148() -> Tensor[(15, 2, 4), float64] {
  @func_1146() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_5200() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %869 = @func_2601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(3, 20), float32], Tensor[(15, 2, 4), float64]) */;
  %870 = @func_2616() /* ty=Tensor[(15, 2, 4), float64] */;
  %871 = %869.0;
  (%870, %871)
}

def @func_10474() -> Tensor[(15, 2, 4), bool] {
  %873 = fn () -> Tensor[(15, 2, 4), bool] {
    %872 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
    %872.0
  };
  %873() /* ty=Tensor[(15, 2, 4), bool] */
}

def @func_7753() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %878 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %874 = @func_1566() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %875 = %874.0;
    %876 = @func_5758() /* ty=Tensor[(15, 2, 4), float64] */;
    %877 = @func_6231() /* ty=Tensor[(15, 2, 4), float64] */;
    (%875, %876, %877)
  };
  %878() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_75() -> (Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) {
  @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */
}

def @func_73() -> (Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) {
  %879 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 2, 4), int32] */, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %880 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(15, 2, 4), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %881 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 2, 4), int32] */, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %883 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 2, 4), int32] */, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %884 = less(%881, %882) /* ty=Tensor[(15, 2, 4), bool] */;
  %885 = atan(%883) /* ty=Tensor[(15, 2, 4), float64] */;
  (%884, %885)
}

def @func_9355() -> (Tensor[(15, 2, 4), float64],) {
  %886 = @func_8226() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %887 = %886.0;
  (%887,)
}

def @func_3041() -> (Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float32]) {
  %892 = fn () -> (Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float32]) {
    %888 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
    %889 = @func_1097() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
    %890 = %888.0;
    %891 = %889.2;
    (%890, %891)
  };
  %892() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float32]) */
}

def @func_4446(%var_4444: Tensor[(7, 5, 7), float32], %var_4445: Tensor[(7, 5, 7), float32]) -> (Tensor[(7, 5, 7), bool], Tensor[(15, 2, 4), float32], Tensor[(120), float64], Tensor[(15, 2, 4), uint32]) {
  @func_4442(%var_4444, %var_4445) /* ty=(Tensor[(7, 5, 7), bool], Tensor[(15, 2, 4), float32], Tensor[(120), float64], Tensor[(15, 2, 4), uint32]) */
}

def @func_2903(%var_2901: Tensor[(13, 14, 5), float32]) -> (Tensor[(13, 14, 5), float32],) {
  @func_2900(%var_2901) /* ty=(Tensor[(13, 14, 5), float32],) */
}

def @func_1097() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  %893 = @func_937() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %894 = @func_642() /* ty=Tensor[(15, 2, 4), float64] */;
  %895 = cast(%894, dtype="float32") /* ty=Tensor[(15, 2, 4), float32] */;
  %896 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  %897 = %893.1;
  %898 = cosh(%895) /* ty=Tensor[(15, 2, 4), float32] */;
  (%896, %897, %898)
}

def @func_3306() -> Tensor[(15, 2, 4), float64] {
  @func_3304() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_9438(%var_9409: Tensor[(15, 8, 6), float64]) -> (Tensor[(15, 2, 4), float64], Tensor[(15, 8, 6), float64]) {
  %899 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %900 = cast(%var_9409, dtype="float64") /* ty=Tensor[(15, 8, 6), float64] */;
  %901 = sqrt(%900) /* ty=Tensor[(15, 8, 6), float64] */;
  %902 = cast(%901, dtype="float64") /* ty=Tensor[(15, 8, 6), float64] */;
  %903 = %899.0;
  %904 = cos(%902) /* ty=Tensor[(15, 8, 6), float64] */;
  (%903, %904)
}

def @func_8085() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %908 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %905 = @func_4066() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %906 = %905.0;
    %907 = @func_6124() /* ty=Tensor[(15, 2, 4), float64] */;
    (%906, %907)
  };
  %908() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_5681() -> Tensor[(15, 2, 4), float64] {
  %909 = @func_3126() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %909.0
}

def @func_115() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %910 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %911 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %912 = %911.1;
  %913 = cast(%912, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %914 = %910.1;
  %915 = acosh(%913) /* ty=Tensor[(15, 2, 4), float64] */;
  (%914, %915)
}

def @func_320() -> Tensor[(15, 2, 4), float64] {
  %916 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %916.1
}

def @func_3128() -> (Tensor[(15, 2, 4), float64],) {
  @func_3126() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_6758() -> (Tensor[(15, 2, 4), float64], uint8, Tensor[(15, 2, 4), float64], Tensor[(112, 8), bool]) {
  @func_6756() /* ty=(Tensor[(15, 2, 4), float64], uint8, Tensor[(15, 2, 4), float64], Tensor[(112, 8), bool]) */
}

def @func_7730() -> (Tensor[(15, 2, 4), uint32], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  %917 = @func_5419() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), uint32]) */;
  %918 = @func_5482() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %919 = @func_4479() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %920 = @func_7409() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(12, 5, ?), float32]) */;
  %921 = @func_4857() /* ty=(Tensor[(15, 2, 4), float32],) */;
  %922 = %917.1;
  %923 = %918.0;
  %924 = %919.1;
  %925 = %920.0;
  %926 = %921.0;
  (%922, %923, %924, %925, %926)
}

def @func_4857() -> (Tensor[(15, 2, 4), float32],) {
  %927 = @func_3522() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) */;
  %928 = %927.1;
  (%928,)
}

def @func_2971() -> Tensor[(15, 2, 4), float64] {
  %930 = fn () -> Tensor[(15, 2, 4), float64] {
    %929 = @func_1162() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %929.0
  };
  %930() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_2460(%var_2459: Tensor[(15, 2, 4), float64]) -> (Tensor[(15, 2, 4), uint32], Tensor[(15, 2, 4), float32]) {
  %941 = fn (%var_2426: Tensor[(15, 2, 4), float64]) -> (Tensor[(15, 2, 4), uint32], Tensor[(15, 2, 4), float32]) {
    %931 = @func_1146() /* ty=Tensor[(15, 2, 4), float64] */;
    %932 = cast(%var_2426, dtype="uint32") /* ty=Tensor[(15, 2, 4), uint32] */;
    %933 = shape_of(%931, dtype="int32") /* ty=Tensor[(3), int32] */;
    %934 = cast(%931, dtype="uint32") /* ty=Tensor[(15, 2, 4), uint32] */;
    %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %936 = cast(%var_2426, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
    %937 = reshape(%936, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
    %938 = @func_920(%937) /* ty=(Tensor[(15, 2, 4), float32], Tensor[(15, 2, 4), float32]) */;
    %939 = bitwise_or(%934, %935) /* ty=Tensor[(15, 2, 4), uint32] */;
    %940 = %938.1;
    (%939, %940)
  };
  %941(%var_2459) /* ty=(Tensor[(15, 2, 4), uint32], Tensor[(15, 2, 4), float32]) */
}

def @func_3347() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %942 = @func_3126() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %943 = %942.0;
  %944 = cast(%943, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %945 = reshape(%944, newshape=[15, 2, 4]) /* ty=Tensor[(15, 2, 4), float64] */;
  %946 = @func_2713(%945) /* ty=(Tensor[(15, 2, 4), uint16], Tensor[(15, 2, 4), bool]) */;
  %947 = %946.1;
  %948 = @func_2616() /* ty=Tensor[(15, 2, 4), float64] */;
  %949 = @func_642() /* ty=Tensor[(15, 2, 4), float64] */;
  (%943, %947, %948, %949)
}

def @func_10250() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %953 = fn () -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
    %950 = @func_1601() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %951 = %950.2;
    %952 = @func_3304() /* ty=Tensor[(15, 2, 4), float64] */;
    (%951, %952)
  };
  %953() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_7066() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float32]) {
  %954 = @func_4479() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %955 = @func_3040() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float32]) */;
  %956 = %954.0;
  %957 = %955.1;
  (%956, %957)
}

def @func_1185(%var_1183: int32, %var_1184: Tensor[(132), int32]) -> (Tensor[(2, 13, 8), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32]) {
  @func_1181(%var_1183, %var_1184) /* ty=(Tensor[(2, 13, 8), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32]) */
}

def @func_1929() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_1927() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_938() -> (Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) {
  %962 = fn () -> (Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) {
    %958 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
    %959 = @func_115() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
    %960 = %958.1;
    %961 = %959.1;
    (%960, %961)
  };
  %962() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */
}

def @func_3850() -> (Tensor[(9, 11, 5), float64], Tensor[(15, 2, 4), float64]) {
  %967 = fn () -> (Tensor[(9, 11, 5), float64], Tensor[(15, 2, 4), float64]) {
    %963 = cast(meta[relay.Constant][26] /* ty=Tensor[(9, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(9, 11, 5), float64] */;
    %964 = @func_2808() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %965 = exp(%963) /* ty=Tensor[(9, 11, 5), float64] */;
    %966 = %964.0;
    (%965, %966)
  };
  %967() /* ty=(Tensor[(9, 11, 5), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_5083() -> (Tensor[(15, 2, 4), float64],) {
  @func_5081() /* ty=(Tensor[(15, 2, 4), float64],) */
}

def @func_8533(%var_8531: uint16, %var_8532: Tensor[(8, 16, 8), uint16]) -> (Tensor[(8, 16, 8), uint16], Tensor[(8, 16, 8), bool], Tensor[(8, 16, 8), float64]) {
  @func_8529(%var_8531, %var_8532) /* ty=(Tensor[(8, 16, 8), uint16], Tensor[(8, 16, 8), bool], Tensor[(8, 16, 8), float64]) */
}

def @func_1893(%var_1886: Tensor[(15, 2, 4), float64]) -> (Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) {
  %968 = @func_73() /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64]) */;
  %969 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %970 = @func_1414() /* ty=(Tensor[(15, 2, 4), float64],) */;
  %971 = @func_1676() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %972 = @func_320() /* ty=Tensor[(15, 2, 4), float64] */;
  %973 = cast(%var_1886, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %974 = shape_of(%972, dtype="int32") /* ty=Tensor[(3), int32] */;
  %975 = cast(%972, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %977 = %968.0;
  %978 = %969.0;
  %979 = %970.0;
  %980 = %971.1;
  %981 = less_equal(%975, %976) /* ty=Tensor[(15, 2, 4), bool] */;
  (%977, %978, %979, %980, %981)
}

def @func_5614() -> Tensor[(15, 2, 4), float64] {
  %983 = fn () -> Tensor[(15, 2, 4), float64] {
    %982 = @func_3979() /* ty=(Tensor[(15, 2, 4), float64],) */;
    %982.0
  };
  %983() /* ty=Tensor[(15, 2, 4), float64] */
}

def @func_6448(%var_6446: Tensor[(11, 12, 3), uint8], %var_6447: Tensor[(11, 12, 3), uint8]) -> Tensor[(11, 12, 3), uint8] {
  @func_6444(%var_6446, %var_6447) /* ty=Tensor[(11, 12, 3), uint8] */
}

def @func_845(%var_830: Tensor[(15, 2, 4), float64]) -> (Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), bool]) {
  %984 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %985 = @func_169() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool]) */;
  %986 = %985.0;
  %987 = cast(%986, dtype="float64") /* ty=Tensor[(15, 2, 4), float64] */;
  %988 = acos(%987) /* ty=Tensor[(15, 2, 4), float64] */;
  %989 = cast(%var_830, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %990 = shape_of(%988, dtype="int32") /* ty=Tensor[(3), int32] */;
  %991 = cast(%988, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %992 = dyn.reshape(%989, %990, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %993 = %984.1;
  %994 = logical_or(%991, %992) /* ty=Tensor[(15, 2, 4), bool] */;
  (%993, %994)
}

def @func_3349() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  @func_3347() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), bool], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */
}

def @func_1181(%var_1178: int32, %var_1179: Tensor[(132), int32]) -> (Tensor[(2, 13, 8), float64], Tensor[(11, 6, 2), int16], int32, Tensor[(132), int32]) {
  %995 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 13, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 13, 8), float64] */;
  %996 = cast(%var_1178, dtype="int32") /* ty=int32 */;
  %997 = cast(%var_1179, dtype="int32") /* ty=Tensor[(132), int32] */;
  %998 = reshape(%996, newshape=[]) /* ty=int32 */;
  %999 = reshape(%997, newshape=[11, 6, 2]) /* ty=Tensor[(11, 6, 2), int32] */;
  %1000 = log10(%995) /* ty=Tensor[(2, 13, 8), float64] */;
  %1001 = @func_211(%998, %999) /* ty=Tensor[(11, 6, 2), int16] */;
  (%1000, %1001, %var_1178, %var_1179)
}

def @func_2411(%var_2340: Tensor[(6, 5, 9), float32], %var_2341: Tensor[(6, 5, 9), float32], %var_2390: Tensor[(6, 5, 9), float32]) -> (Tensor[(15, 2, 4), float64], Tensor[(6, 5, 9), bool], Tensor[(15, 2, 4), float64], Tensor[(6, 5, 9), uint16]) {
  %1002 = @func_1676() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %1003 = cast(%var_2341, dtype="float32") /* ty=Tensor[(6, 5, 9), float32] */;
  %1004 = shape_of(%var_2340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1005 = cast(%var_2340, dtype="float32") /* ty=Tensor[(6, 5, 9), float32] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1007 = power(%1005, %1006) /* ty=Tensor[(6, 5, 9), float32] */;
  %1008 = cast(%var_2340, dtype="uint64") /* ty=Tensor[(6, 5, 9), uint64] */;
  %1009 = shape_of(%1007, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1010 = cast(%1007, dtype="uint64") /* ty=Tensor[(6, 5, 9), uint64] */;
  %1011 = dyn.reshape(%1008, %1009, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1012 = right_shift(%1010, %1011) /* ty=Tensor[(6, 5, 9), uint64] */;
  %1013 = cast(%1012, dtype="bool") /* ty=Tensor[(6, 5, 9), bool] */;
  %1014 = shape_of(%var_2340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1015 = cast(%var_2340, dtype="bool") /* ty=Tensor[(6, 5, 9), bool] */;
  %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1017 = cast(%var_2390, dtype="uint16") /* ty=Tensor[(6, 5, 9), uint16] */;
  %1018 = shape_of(%var_2340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1019 = cast(%var_2340, dtype="uint16") /* ty=Tensor[(6, 5, 9), uint16] */;
  %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1021 = %1002.1;
  %1022 = greater(%1015, %1016) /* ty=Tensor[(6, 5, 9), bool] */;
  %1023 = @func_1146() /* ty=Tensor[(15, 2, 4), float64] */;
  %1024 = bitwise_or(%1019, %1020) /* ty=Tensor[(6, 5, 9), uint16] */;
  (%1021, %1022, %1023, %1024)
}

def @func_1927() -> (Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) {
  %1025 = @func_1120() /* ty=(Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64], Tensor[(15, 2, 4), float64]) */;
  %1026 = @func_642() /* ty=Tensor[(15, 2, 4), float64] */;
  %1027 = %1025.1;
  (%1026, %1027)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_11280(%var_11226: Tensor[(462), float64]) -> (Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(462), float64], Tensor[(12, 5, 4), float32], Tensor[(224), float32], Tensor[(4, 168), float32], Tensor[(6, 16, 7), float32]) {
  %0 = cast(%var_11226, dtype="float64") /* ty=Tensor[(462), float64] */;
  %1 = reshape(%0, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %2 = @func_8170(%1) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64], Tensor[(462), float64], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 168), float32] */, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %5 = reshape(%3, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %6 = reshape(%4, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %7 = @func_8387(%5, %6) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(16, 1, 14), float32], Tensor[(224), float32], Tensor[(180), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32]) */;
  %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 168), float32] */, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %9 = reshape(%8, newshape=[336, 2]) /* ty=Tensor[(336, 2), float32] */;
  %10 = @func_6502(%9) /* ty=(Tensor[(6, 16, 7), float32], Tensor[(336, 2), float32], Tensor[(12, 5, 4), float32], Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32]) */;
  %11 = @func_11066() /* ty=Tensor[(12, 5, 4), float64] */;
  %12 = %2.3;
  %13 = %7.0;
  %14 = %10.0;
  (%11, %12, %var_11226, %13, meta[relay.Constant][0] /* ty=Tensor[(224), float32] */, meta[relay.Constant][1] /* ty=Tensor[(4, 168), float32] */, %14)
}

def @func_1031(%var_1028: Tensor[(6, 16, 7), float32]) -> Tensor[(6, 16, 7), float32] {
  %15 = cast(%var_1028, dtype="float32") /* ty=Tensor[(6, 16, 7), float32] */;
  atan(%15) /* ty=Tensor[(6, 16, 7), float32] */
}

def @func_13074() -> Tensor[(12, 5, 4), float64] {
  @func_6761() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_7120() -> (Tensor[(12, 5, 4), float32],) {
  %16 = @func_5672() /* ty=Tensor[(12, 5, 4), float32] */;
  (%16,)
}

def @func_10472() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32]) {
  %17 = @func_5430() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %18 = @func_8445() /* ty=Tensor[(2, 20), float32] */;
  %19 = %17.0;
  (%18, %19)
}

def @func_4115(%var_4028: Tensor[(5, 10, 14), float64], %var_4067: Tensor[(231, 2), float64], %var_4073: Tensor[(180), float32]) -> (Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(5, 10, 14), int64], Tensor[(6, 16, 7), float32], Tensor[(2912), bool], float64, Tensor[(48), float32], Tensor[(192), float64]) {
  %20 = cast(meta[relay.Constant][2] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %21 = reshape(%20, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
  %22 = cast(%var_4067, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
  %23 = reshape(%22, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
  %24 = cast(%var_4067, dtype="float32") /* ty=Tensor[(231, 2), float32] */;
  %25 = cast(%var_4073, dtype="float32") /* ty=Tensor[(180), float32] */;
  %26 = reshape(%25, newshape=[12, 3, 5]) /* ty=Tensor[(12, 3, 5), float32] */;
  %27 = @func_528(%26) /* ty=(Tensor[(12, 3, 5), float32],) */;
  %28 = cast(%var_4028, dtype="float64") /* ty=Tensor[(5, 10, 14), float64] */;
  %29 = sqrt(%28) /* ty=Tensor[(5, 10, 14), float64] */;
  %30 = cast(%var_4028, dtype="int64") /* ty=Tensor[(5, 10, 14), int64] */;
  %31 = shape_of(%29, dtype="int32") /* ty=Tensor[(3), int32] */;
  %32 = cast(%29, dtype="int64") /* ty=Tensor[(5, 10, 14), int64] */;
  %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %34 = cast(meta[relay.Constant][3] /* ty=Tensor[(2912), bool] */, dtype="bool") /* ty=Tensor[(2912), bool] */;
  %35 = cast(meta[relay.Constant][3] /* ty=Tensor[(2912), bool] */, dtype="bool") /* ty=Tensor[(2912), bool] */;
  %36 = cast(%var_4073, dtype="float32") /* ty=Tensor[(180), float32] */;
  %37 = reshape(%34, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), bool] */;
  %38 = reshape(%35, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), bool] */;
  %39 = reshape(%36, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %40 = @func_2073(%37, %38, %39) /* ty=(Tensor[(16, 14, 13), bool], Tensor[(6, 16, 7), float32], Tensor[(672), float32], Tensor[(6, 16, 7), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) */;
  %41 = cast(meta[relay.Constant][4] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %42 = cast(meta[relay.Constant][5] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %43 = reshape(%41, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float32] */;
  %44 = reshape(%42, newshape=[2, 96]) /* ty=Tensor[(2, 96), float64] */;
  %45 = @func_3955(%43, %44) /* ty=(Tensor[(10, 2, 2), float32], Tensor[(40), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(1, 16, 12), float64], float64, Tensor[(2, 96), float64], Tensor[(672), float32], Tensor[(12, 3, 5), float32], Tensor[(12, 2, 2), int32]) */;
  %46 = @func_2114(%21) /* ty=Tensor[(12, 6, 16), float64] */;
  %47 = @func_3266(%23) /* ty=Tensor[(11, 3, 14), float64] */;
  %48 = acos(%24) /* ty=Tensor[(231, 2), float32] */;
  %49 = %27.0;
  %50 = bitwise_or(%32, %33) /* ty=Tensor[(5, 10, 14), int64] */;
  %51 = %40.3;
  %52 = %45.5;
  (%46, meta[relay.Constant][2] /* ty=Tensor[(1152), float64] */, %47, %48, %49, %var_4073, %50, %51, meta[relay.Constant][3] /* ty=Tensor[(2912), bool] */, %52, meta[relay.Constant][4] /* ty=Tensor[(48), float32] */, meta[relay.Constant][5] /* ty=Tensor[(192), float64] */)
}

def @func_4992(%var_4968: Tensor[(15, 2, 13), int32], %var_4969: Tensor[(15, 2, 13), int32], %var_4982: Tensor[(180), float32]) -> (Tensor[(15, 2, 13), int32], Tensor[(12, 5, 4), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) {
  %53 = cast(%var_4969, dtype="int32") /* ty=Tensor[(15, 2, 13), int32] */;
  %54 = shape_of(%var_4968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %55 = cast(%var_4968, dtype="int32") /* ty=Tensor[(15, 2, 13), int32] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %57 = cast(%var_4982, dtype="float32") /* ty=Tensor[(180), float32] */;
  %58 = reshape(%57, newshape=[12, 3, 5]) /* ty=Tensor[(12, 3, 5), float32] */;
  %59 = @func_528(%58) /* ty=(Tensor[(12, 3, 5), float32],) */;
  %60 = right_shift(%55, %56) /* ty=Tensor[(15, 2, 13), int32] */;
  %61 = @func_4900() /* ty=Tensor[(12, 5, 4), float32] */;
  %62 = %59.0;
  (%60, %61, %62, %var_4982)
}

def @func_6528() -> Tensor[(2, 20), float32] {
  %63 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %63.0
}

def @func_8546() -> (Tensor[(12, 5, 4), float64],) {
  %64 = @func_6158() /* ty=Tensor[(12, 5, 4), float64] */;
  %65 = cast(%64, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %66 = tan(%65) /* ty=Tensor[(12, 5, 4), float64] */;
  (%66,)
}

def @func_6158() -> Tensor[(12, 5, 4), float64] {
  @func_5211() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_6794() -> (Tensor[(12, 5, 4), float32],) {
  %67 = @func_5672() /* ty=Tensor[(12, 5, 4), float32] */;
  (%67,)
}

def @func_13447() -> Tensor[(12, 5, 4), float64] {
  %68 = @func_5558() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %68.0
}

def @func_11336() -> Tensor[(11, 3, 14), float64] {
  %69 = @func_8417() /* ty=(Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), float64]) */;
  %69.1
}

def @func_12633() -> (Tensor[(12, 5, 4), float32],) {
  %70 = @func_10228() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %71 = %70.0;
  (%71,)
}

def @func_11093() -> (Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) {
  %72 = @func_8892() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %73 = %72.0;
  %74 = cast(%73, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %75 = @func_8869() /* ty=Tensor[(12, 5, 4), float32] */;
  %76 = exp(%74) /* ty=Tensor[(12, 5, 4), float64] */;
  (%75, %76)
}

def @func_12041() -> (Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) {
  %77 = @func_7769() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) */;
  %78 = @func_11621() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %79 = %77.1;
  %80 = %78.0;
  (%79, %80)
}

def @func_13225() -> (Tensor[(11, 3, 14), float64],) {
  %81 = @func_9757() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64]) */;
  %82 = %81.4;
  (%82,)
}

def @func_10811(%var_10807: Tensor[(462), float64]) -> (Tensor[(2, 20), bool], Tensor[(48), float32], Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32]) {
  %83 = @func_6692() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 3, 5), float32], Tensor[(78), float64], Tensor[(2, 20), float32]) */;
  %84 = %83.0;
  %85 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 20), float32] */, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %86 = shape_of(%84, dtype="int32") /* ty=Tensor[(2), int32] */;
  %87 = cast(%84, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %89 = cast(meta[relay.Constant][7] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
  %90 = cast(%var_10807, dtype="float64") /* ty=Tensor[(462), float64] */;
  %91 = cast(meta[relay.Constant][8] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %92 = reshape(%89, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float64] */;
  %93 = reshape(%90, newshape=[231, 2]) /* ty=Tensor[(231, 2), float64] */;
  %94 = reshape(%91, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %95 = @func_4115(%92, %93, %94) /* ty=(Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(5, 10, 14), int64], Tensor[(6, 16, 7), float32], Tensor[(2912), bool], float64, Tensor[(48), float32], Tensor[(192), float64]) */;
  %96 = logical_and(%87, %88) /* ty=Tensor[(2, 20), bool] */;
  %97 = %95.10;
  (%96, %97, meta[relay.Constant][7] /* ty=Tensor[(700), float64] */, %var_10807, meta[relay.Constant][8] /* ty=Tensor[(180), float32] */)
}

def @func_12309() -> (Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32]) {
  %98 = @func_12041() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) */;
  %99 = @func_5430() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %100 = %98.0;
  %101 = %99.0;
  (%100, %101)
}

def @main(%var_13461: Tensor[(13, 6, 6), float32]) -> Tensor[(13, 6, 6), float64] {
  %102 = cast(%var_13461, dtype="float32") /* ty=Tensor[(13, 6, 6), float32] */;
  %103 = erf(%102) /* ty=Tensor[(13, 6, 6), float32] */;
  %104 = cast(%103, dtype="float64") /* ty=Tensor[(13, 6, 6), float64] */;
  atan(%104) /* ty=Tensor[(13, 6, 6), float64] */
}

def @func_6937() -> Tensor[(12, 5, 4), float64] {
  @func_6158() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_5528() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32]) {
  %105 = @func_5430() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %106 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %107 = %105.1;
  %108 = %106.0;
  (%107, %108)
}

def @func_11181(%var_11153: Tensor[(390), int32]) -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(390), int32], Tensor[(180), float32]) {
  %109 = @func_5558() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %110 = cast(%var_11153, dtype="int32") /* ty=Tensor[(390), int32] */;
  %111 = cast(%var_11153, dtype="int32") /* ty=Tensor[(390), int32] */;
  %112 = cast(meta[relay.Constant][9] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %113 = reshape(%110, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int32] */;
  %114 = reshape(%111, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int32] */;
  %115 = reshape(%112, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %116 = @func_4992(%113, %114, %115) /* ty=(Tensor[(15, 2, 13), int32], Tensor[(12, 5, 4), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) */;
  %117 = %109.0;
  %118 = %116.1;
  (%117, %118, %var_11153, meta[relay.Constant][9] /* ty=Tensor[(180), float32] */)
}

def @func_8445() -> Tensor[(2, 20), float32] {
  %119 = @func_6692() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 3, 5), float32], Tensor[(78), float64], Tensor[(2, 20), float32]) */;
  %119.0
}

def @func_8663() -> (Tensor[(12, 5, 4), float64],) {
  %120 = @func_5379() /* ty=Tensor[(12, 5, 4), float64] */;
  (%120,)
}

def @func_10453() -> (Tensor[(12, 5, 4), bool], Tensor[(12, 5, 4), bool], Tensor[(11, 3, 14), float64]) {
  %121 = @func_6794() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %122 = %121.0;
  %123 = cast(meta[relay.Constant][10] /* ty=Tensor[(12, 5, 4), float32] */, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
  %124 = shape_of(%122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %125 = cast(%122, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
  %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %127 = cast(meta[relay.Constant][10] /* ty=Tensor[(12, 5, 4), float32] */, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %128 = reshape(%127, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %129 = @func_6984() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64]) */;
  %130 = greater(%125, %126) /* ty=Tensor[(12, 5, 4), bool] */;
  %131 = @func_9609(%128) /* ty=Tensor[(12, 5, 4), bool] */;
  %132 = %129.1;
  (%130, %131, %132)
}

def @func_9408() -> (Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) {
  %133 = @func_6707() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %134 = @func_8511() /* ty=(Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), bool], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) */;
  %135 = %133.0;
  %136 = %134.2;
  (%135, %136)
}

def @func_10933() -> (Tensor[(11, 3, 14), float64],) {
  %137 = @func_6984() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64]) */;
  %138 = %137.1;
  (%138,)
}

def @func_9896(%var_9881: Tensor[(2, 20), float32]) -> Tensor[(2, 20), int32] {
  %139 = @func_9503() /* ty=(Tensor[(2, 20), float32],) */;
  %140 = %139.0;
  %141 = cast(%var_9881, dtype="int32") /* ty=Tensor[(2, 20), int32] */;
  %142 = shape_of(%140, dtype="int32") /* ty=Tensor[(2), int32] */;
  %143 = cast(%140, dtype="int32") /* ty=Tensor[(2, 20), int32] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  add(%143, %144) /* ty=Tensor[(2, 20), int32] */
}

def @func_8712() -> Tensor[(12, 5, 4), float64] {
  %145 = @func_8511() /* ty=(Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), bool], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) */;
  %145.2
}

def @func_7103(%var_7082: Tensor[(180), float32]) -> (Tensor[(78), float32], Tensor[(12, 5, 4), float64], Tensor[(78), float32], Tensor[(12, 5, 4), float64], Tensor[(2912), float64], Tensor[(180), float32]) {
  %146 = @func_6692() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 3, 5), float32], Tensor[(78), float64], Tensor[(2, 20), float32]) */;
  %147 = %146.2;
  %148 = cast(%147, dtype="float32") /* ty=Tensor[(78), float32] */;
  %149 = cast(%147, dtype="float32") /* ty=Tensor[(78), float32] */;
  %150 = @func_6984() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64]) */;
  %151 = cast(%var_7082, dtype="float32") /* ty=Tensor[(180), float32] */;
  %152 = %150.0;
  %153 = cast(%152, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %154 = reshape(%151, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %155 = reshape(%153, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %156 = @func_5964(%154, %155) /* ty=(Tensor[(6, 16, 7), float32], Tensor[(180), float32], Tensor[(12, 5, 4), bool], Tensor[(2912), float64]) */;
  %157 = cosh(%148) /* ty=Tensor[(78), float32] */;
  %158 = @func_6937() /* ty=Tensor[(12, 5, 4), float64] */;
  %159 = tan(%149) /* ty=Tensor[(78), float32] */;
  %160 = %156.3;
  (%157, %158, %159, %152, %160, %var_7082)
}

def @func_9565() -> (Tensor[(2, 20), float32],) {
  %161 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %162 = %161.3;
  (%162,)
}

def @func_12853() -> Tensor[(2, 20), float32] {
  %163 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %163.0
}

def @func_6707() -> (Tensor[(12, 5, 4), float32],) {
  %164 = @func_5185() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %165 = %164.0;
  (%165,)
}

def @func_10748() -> (Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) {
  %166 = @func_9474() /* ty=(Tensor[(2, 20), float32],) */;
  %167 = %166.0;
  %168 = @func_7326() /* ty=Tensor[(11, 3, 14), float64] */;
  (%167, %168)
}

def @func_9387() -> Tensor[(2, 20), float32] {
  %169 = @func_9009() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) */;
  %169.1
}

def @func_7227() -> (Tensor[(2, 20), float32],) {
  %170 = @func_6781() /* ty=Tensor[(2, 20), float32] */;
  (%170,)
}

def @func_3266(%var_3259: Tensor[(11, 3, 14), float64]) -> Tensor[(11, 3, 14), float64] {
  %171 = cast(%var_3259, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
  asin(%171) /* ty=Tensor[(11, 3, 14), float64] */
}

def @func_6438() -> (Tensor[(12, 5, 4), float64],) {
  %172 = @func_6158() /* ty=Tensor[(12, 5, 4), float64] */;
  (%172,)
}

def @func_10907(%var_10866: Tensor[(11, 6, 9), int8], %var_10867: Tensor[(11, 6, 9), int8]) -> (Tensor[(11, 6, 9), int8], Tensor[(1120), float64], Tensor[(240), float64]) {
  %173 = cast(%var_10867, dtype="int8") /* ty=Tensor[(11, 6, 9), int8] */;
  %174 = shape_of(%var_10866, dtype="int32") /* ty=Tensor[(3), int32] */;
  %175 = cast(%var_10866, dtype="int8") /* ty=Tensor[(11, 6, 9), int8] */;
  %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %177 = cast(meta[relay.Constant][11] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %178 = reshape(%177, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %179 = @func_10177(%178) /* ty=(Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), bool], Tensor[(180), float32], Tensor[(1120), float64], Tensor[(1120), float64]) */;
  %180 = right_shift(%175, %176) /* ty=Tensor[(11, 6, 9), int8] */;
  %181 = %179.4;
  (%180, %181, meta[relay.Constant][11] /* ty=Tensor[(240), float64] */)
}

def @func_5649() -> Tensor[(12, 5, 4), float64] {
  @func_5379() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_7376() -> (Tensor[(2, 20), float32],) {
  %182 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %183 = %182.0;
  (%183,)
}

def @func_6761() -> Tensor[(12, 5, 4), float64] {
  @func_6299() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_10177(%var_10112: Tensor[(12, 5, 4), float64]) -> (Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), bool], Tensor[(180), float32], Tensor[(1120), float64], Tensor[(1120), float64]) {
  %184 = @func_5430() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %185 = @func_8712() /* ty=Tensor[(12, 5, 4), float64] */;
  %186 = cast(%var_10112, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %187 = shape_of(%185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%185, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %190 = cast(%185, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
  %191 = shape_of(%var_10112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%var_10112, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %194 = cast(meta[relay.Constant][12] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %195 = reshape(%194, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %196 = @func_9171(%195) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(180), float32], Tensor[(672), float32], Tensor[(1120), float64], Tensor[(10, 14, 8), float32]) */;
  %197 = cast(meta[relay.Constant][12] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %198 = reshape(%197, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %199 = @func_9171(%198) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(180), float32], Tensor[(672), float32], Tensor[(1120), float64], Tensor[(10, 14, 8), float32]) */;
  %200 = %184.1;
  %201 = multiply(%188, %189) /* ty=Tensor[(12, 5, 4), float64] */;
  %202 = less_equal(%192, %193) /* ty=Tensor[(12, 5, 4), bool] */;
  %203 = %196.1;
  %204 = %199.3;
  (%200, %201, %202, %203, meta[relay.Constant][12] /* ty=Tensor[(1120), float64] */, %204)
}

def @func_13180() -> (Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32]) {
  %205 = @func_9216() /* ty=(Tensor[(12, 3, 5), float32], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) */;
  %206 = @func_5649() /* ty=Tensor[(12, 5, 4), float64] */;
  %207 = %205.0;
  (%206, %207)
}

def @func_5159() -> (Tensor[(2, 20), float32],) {
  %208 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %209 = %208.3;
  (%209,)
}

def @func_11531() -> Tensor[(2, 20), float32] {
  %210 = @func_7227() /* ty=(Tensor[(2, 20), float32],) */;
  %210.0
}

def @func_9503() -> (Tensor[(2, 20), float32],) {
  %211 = @func_8445() /* ty=Tensor[(2, 20), float32] */;
  (%211,)
}

def @func_10332(%var_10294: Tensor[(224), float32]) -> (Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32], Tensor[(224), float32]) {
  %212 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %213 = cast(%var_10294, dtype="float32") /* ty=Tensor[(224), float32] */;
  %214 = reshape(%213, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %215 = @func_6074(%214) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(2, 20), float32], Tensor[(16, 1, 14), float32], Tensor[(224), float32]) */;
  %216 = %212.0;
  %217 = %215.2;
  (%216, %217, %var_10294)
}

def @func_9609(%var_9600: Tensor[(12, 5, 4), float64]) -> Tensor[(12, 5, 4), bool] {
  %218 = @func_7176() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) */;
  %219 = %218.1;
  %220 = cast(%var_9600, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
  %221 = shape_of(%219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(%219, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%222, %223) /* ty=Tensor[(12, 5, 4), bool] */
}

def @func_5379() -> Tensor[(12, 5, 4), float64] {
  %224 = @func_4900() /* ty=Tensor[(12, 5, 4), float32] */;
  %225 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 5, 4), float32] */, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %226 = shape_of(%224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%224, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%227, %228) /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_9082(%var_9052: Tensor[(700), float64]) -> (float64, Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32], Tensor[(12, 5, 4), float32]) {
  %229 = cast(%var_9052, dtype="float64") /* ty=Tensor[(700), float64] */;
  %230 = cast(meta[relay.Constant][14] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %231 = cast(meta[relay.Constant][15] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %232 = reshape(%229, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float64] */;
  %233 = reshape(%230, newshape=[231, 2]) /* ty=Tensor[(231, 2), float64] */;
  %234 = reshape(%231, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %235 = @func_4115(%232, %233, %234) /* ty=(Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(5, 10, 14), int64], Tensor[(6, 16, 7), float32], Tensor[(2912), bool], float64, Tensor[(48), float32], Tensor[(192), float64]) */;
  %236 = @func_5185() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %237 = %236.0;
  %238 = cast(%237, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  %239 = %235.9;
  %240 = acosh(%238) /* ty=Tensor[(12, 5, 4), float32] */;
  (%239, %var_9052, meta[relay.Constant][14] /* ty=Tensor[(462), float64] */, meta[relay.Constant][15] /* ty=Tensor[(180), float32] */, %240)
}

def @func_13318(%var_13304: Tensor[(16, 12, 8), float64]) -> (Tensor[(16, 12, 8), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float64]) {
  %241 = cast(%var_13304, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %242 = cast(meta[relay.Constant][16] /* ty=Tensor[(231, 2), float64] */, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
  %243 = reshape(%242, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %244 = @func_8170(%243) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64], Tensor[(462), float64], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %245 = atan(%241) /* ty=Tensor[(16, 12, 8), float64] */;
  %246 = %244.1;
  (%245, %246, meta[relay.Constant][16] /* ty=Tensor[(231, 2), float64] */)
}

def @func_9291() -> Tensor[(12, 5, 4), float64] {
  %247 = @func_6438() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %247.0
}

def @func_5735() -> (Tensor[(2, 20), float32],) {
  %248 = @func_5430() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %249 = %248.0;
  (%249,)
}

def @func_8975(%var_8937: Tensor[(12, 5, 4), float64]) -> (Tensor[(12, 5, 4), uint64], Tensor[(12, 5, 4), float64]) {
  %250 = @func_8712() /* ty=Tensor[(12, 5, 4), float64] */;
  %251 = cast(%var_8937, dtype="uint64") /* ty=Tensor[(12, 5, 4), uint64] */;
  %252 = shape_of(%250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %253 = cast(%250, dtype="uint64") /* ty=Tensor[(12, 5, 4), uint64] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %255 = minimum(%253, %254) /* ty=Tensor[(12, 5, 4), uint64] */;
  %256 = @func_5379() /* ty=Tensor[(12, 5, 4), float64] */;
  (%255, %256)
}

def @func_1666(%var_1637: float64, %var_1638: Tensor[(1, 16, 12), float64], %var_1651: Tensor[(180), float32], %var_1659: Tensor[(672), float32]) -> (Tensor[(1, 16, 12), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(6, 16, 7), float32], Tensor[(672), float32]) {
  %257 = cast(%var_1637, dtype="float64") /* ty=float64 */;
  %258 = cast(%var_1638, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
  %259 = cast(%var_1651, dtype="float32") /* ty=Tensor[(180), float32] */;
  %260 = reshape(%259, newshape=[12, 3, 5]) /* ty=Tensor[(12, 3, 5), float32] */;
  %261 = @func_528(%260) /* ty=(Tensor[(12, 3, 5), float32],) */;
  %262 = cast(%var_1659, dtype="float32") /* ty=Tensor[(672), float32] */;
  %263 = reshape(%262, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float32] */;
  %264 = mod(%257, %258) /* ty=Tensor[(1, 16, 12), float64] */;
  %265 = %261.0;
  %266 = @func_1031(%263) /* ty=Tensor[(6, 16, 7), float32] */;
  (%264, %265, %var_1651, %266, %var_1659)
}

def @func_7677() -> (Tensor[(2, 20), float32], Tensor[(168, 4), int64], Tensor[(12, 5, 4), float32], Tensor[(168, 4), float32]) {
  %267 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %268 = @func_6872() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32], Tensor[(78), float64], float64, Tensor[(288, 4), float64], Tensor[(168, 4), float32]) */;
  %269 = %268.6;
  %270 = cast(%269, dtype="float32") /* ty=Tensor[(168, 4), float32] */;
  %271 = atan(%270) /* ty=Tensor[(168, 4), float32] */;
  %272 = cast(%271, dtype="float64") /* ty=Tensor[(168, 4), float64] */;
  %273 = sinh(%272) /* ty=Tensor[(168, 4), float64] */;
  %274 = cast(%271, dtype="int64") /* ty=Tensor[(168, 4), int64] */;
  %275 = shape_of(%273, dtype="int32") /* ty=Tensor[(2), int32] */;
  %276 = cast(%273, dtype="int64") /* ty=Tensor[(168, 4), int64] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %278 = %267.0;
  %279 = cast(%278, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %280 = reshape(%279, newshape=[2, 20]) /* ty=Tensor[(2, 20), float32] */;
  %281 = @func_7563(%280) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(2, 20), bool], Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32], Tensor[(2, 20), float64]) */;
  %282 = cast(%273, dtype="float32") /* ty=Tensor[(168, 4), float32] */;
  %283 = subtract(%276, %277) /* ty=Tensor[(168, 4), int64] */;
  %284 = %281.1;
  %285 = atanh(%282) /* ty=Tensor[(168, 4), float32] */;
  (%278, %283, %284, %285)
}

def @func_5185() -> (Tensor[(12, 5, 4), float32],) {
  %286 = @func_4900() /* ty=Tensor[(12, 5, 4), float32] */;
  (%286,)
}

def @func_11875() -> Tensor[(2, 20), float32] {
  %287 = @func_9503() /* ty=(Tensor[(2, 20), float32],) */;
  %287.0
}

def @func_11596(%var_11564: Tensor[(240), float32]) -> (Tensor[(2, 20), float32], float64, Tensor[(700), float64], Tensor[(12, 5, 4), float32], Tensor[(240), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64]) {
  %288 = cast(meta[relay.Constant][17] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
  %289 = reshape(%288, newshape=[700]) /* ty=Tensor[(700), float64] */;
  %290 = @func_9082(%289) /* ty=(float64, Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32], Tensor[(12, 5, 4), float32]) */;
  %291 = cast(%var_11564, dtype="float32") /* ty=Tensor[(240), float32] */;
  %292 = reshape(%291, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float32] */;
  %293 = @func_6997(%292) /* ty=(Tensor[(12, 5, 4), float32],) */;
  %294 = @func_11093() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) */;
  %295 = @func_6438() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %296 = @func_8445() /* ty=Tensor[(2, 20), float32] */;
  %297 = %290.0;
  %298 = %293.0;
  %299 = %294.1;
  %300 = %295.0;
  (%296, %297, meta[relay.Constant][17] /* ty=Tensor[(700), float64] */, %298, %var_11564, %299, %300)
}

def @func_12209() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32]) {
  %301 = @func_9503() /* ty=(Tensor[(2, 20), float32],) */;
  %302 = @func_8445() /* ty=Tensor[(2, 20), float32] */;
  %303 = %301.0;
  (%302, %303)
}

def @func_12122() -> (Tensor[(2, 20), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64]) {
  %304 = @func_7376() /* ty=(Tensor[(2, 20), float32],) */;
  %305 = %304.0;
  %306 = cast(%305, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %307 = acos(%306) /* ty=Tensor[(2, 20), float64] */;
  %308 = @func_5649() /* ty=Tensor[(12, 5, 4), float64] */;
  %309 = @func_6158() /* ty=Tensor[(12, 5, 4), float64] */;
  (%307, %308, %309)
}

def @func_9416(%var_9410: float32) -> Tensor[(7, 6, 11), float32] {
  %310 = cast(%var_9410, dtype="float32") /* ty=float32 */;
  %311 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 6, 11), float32] */, dtype="float32") /* ty=Tensor[(7, 6, 11), float32] */;
  floor_mod(%310, %311) /* ty=Tensor[(7, 6, 11), float32] */
}

def @func_9171(%var_9157: Tensor[(10, 14, 8), float64]) -> (Tensor[(12, 5, 4), float32], Tensor[(180), float32], Tensor[(672), float32], Tensor[(1120), float64], Tensor[(10, 14, 8), float32]) {
  %312 = @func_7176() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) */;
  %313 = cast(meta[relay.Constant][19] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %314 = reshape(%313, newshape=[336, 2]) /* ty=Tensor[(336, 2), float32] */;
  %315 = @func_6502(%314) /* ty=(Tensor[(6, 16, 7), float32], Tensor[(336, 2), float32], Tensor[(12, 5, 4), float32], Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32]) */;
  %316 = cast(meta[relay.Constant][20] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %317 = cast(meta[relay.Constant][20] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %318 = reshape(%316, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %319 = reshape(%317, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %320 = @func_2735(%318, %319) /* ty=(Tensor[(10, 14, 8), float64],) */;
  %321 = %320.0;
  %322 = cast(%var_9157, dtype="float32") /* ty=Tensor[(10, 14, 8), float32] */;
  %323 = shape_of(%321, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%321, dtype="float32") /* ty=Tensor[(10, 14, 8), float32] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %326 = %312.2;
  %327 = %315.5;
  %328 = multiply(%324, %325) /* ty=Tensor[(10, 14, 8), float32] */;
  (%326, %327, meta[relay.Constant][19] /* ty=Tensor[(672), float32] */, meta[relay.Constant][20] /* ty=Tensor[(1120), float64] */, %328)
}

def @func_8331() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float64]) {
  %329 = @func_6528() /* ty=Tensor[(2, 20), float32] */;
  %330 = cast(%329, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %331 = reshape(%330, newshape=[2, 20]) /* ty=Tensor[(2, 20), float32] */;
  %332 = @func_7563(%331) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(2, 20), bool], Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32], Tensor[(2, 20), float64]) */;
  %333 = %332.5;
  (%329, %333)
}

def @func_6185(%var_6178: uint16, %var_6179: Tensor[(7, 11, 7), uint16]) -> (Tensor[(7, 11, 7), uint16],) {
  %334 = cast(%var_6178, dtype="uint16") /* ty=uint16 */;
  %335 = cast(%var_6179, dtype="uint16") /* ty=Tensor[(7, 11, 7), uint16] */;
  %336 = maximum(%334, %335) /* ty=Tensor[(7, 11, 7), uint16] */;
  (%336,)
}

def @func_6804() -> Tensor[(12, 5, 4), float64] {
  %337 = @func_6438() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %337.0
}

def @func_9865() -> Tensor[(10, 7, 16), float64] {
  %338 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 7, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 7, 16), float64] */;
  cosh(%338) /* ty=Tensor[(10, 7, 16), float64] */
}

def @func_8801() -> (Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) {
  %339 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %340 = %339.0;
  %341 = @func_7326() /* ty=Tensor[(11, 3, 14), float64] */;
  (%340, %341)
}

def @func_12560(%var_12535: Tensor[(462), float64], %var_12536: Tensor[(3, 60), float32]) -> (Tensor[(12, 5, 4), float64], float64, Tensor[(700), float64], Tensor[(462), float64], Tensor[(3, 60), float32], Tensor[(2, 20), float32]) {
  %342 = @func_9993() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), uint8], Tensor[(12, 5, 4), float64]) */;
  %343 = cast(meta[relay.Constant][22] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
  %344 = cast(%var_12535, dtype="float64") /* ty=Tensor[(462), float64] */;
  %345 = cast(%var_12536, dtype="float32") /* ty=Tensor[(3, 60), float32] */;
  %346 = reshape(%343, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float64] */;
  %347 = reshape(%344, newshape=[231, 2]) /* ty=Tensor[(231, 2), float64] */;
  %348 = reshape(%345, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %349 = @func_4115(%346, %347, %348) /* ty=(Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(5, 10, 14), int64], Tensor[(6, 16, 7), float32], Tensor[(2912), bool], float64, Tensor[(48), float32], Tensor[(192), float64]) */;
  %350 = @func_7227() /* ty=(Tensor[(2, 20), float32],) */;
  %351 = %342.0;
  %352 = %349.9;
  %353 = %350.0;
  (%351, %352, meta[relay.Constant][22] /* ty=Tensor[(700), float64] */, %var_12535, %var_12536, %353)
}

def @func_4875(%var_4862: Tensor[(4, 10, 8), uint64], %var_4863: Tensor[(4, 10, 8), uint64]) -> (Tensor[(4, 10, 8), bool],) {
  %354 = cast(%var_4863, dtype="bool") /* ty=Tensor[(4, 10, 8), bool] */;
  %355 = shape_of(%var_4862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%var_4862, dtype="bool") /* ty=Tensor[(4, 10, 8), bool] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %358 = equal(%356, %357) /* ty=Tensor[(4, 10, 8), bool] */;
  (%358,)
}

def @func_7176() -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) {
  %359 = @func_5185() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %360 = @func_6761() /* ty=Tensor[(12, 5, 4), float64] */;
  %361 = @func_6633() /* ty=Tensor[(12, 5, 4), float64] */;
  %362 = %359.0;
  (%360, %361, %362)
}

def @func_12486() -> (Tensor[(12, 5, 4), float64],) {
  %363 = @func_6438() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %364 = %363.0;
  (%364,)
}

def @func_6074(%var_6046: Tensor[(224), float32]) -> (Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(2, 20), float32], Tensor[(16, 1, 14), float32], Tensor[(224), float32]) {
  %365 = @func_5528() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %366 = @func_5528() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %367 = cast(%var_6046, dtype="float32") /* ty=Tensor[(224), float32] */;
  %368 = reshape(%367, newshape=[16, 1, 14]) /* ty=Tensor[(16, 1, 14), float32] */;
  %369 = @func_5649() /* ty=Tensor[(12, 5, 4), float64] */;
  %370 = %365.1;
  %371 = %366.1;
  %372 = @func_4688(%368) /* ty=Tensor[(16, 1, 14), float32] */;
  (%369, %370, %371, %372, %var_6046)
}

def @func_2073(%var_2036: Tensor[(16, 14, 13), bool], %var_2037: Tensor[(16, 14, 13), bool], %var_2065: Tensor[(180), float32]) -> (Tensor[(16, 14, 13), bool], Tensor[(6, 16, 7), float32], Tensor[(672), float32], Tensor[(6, 16, 7), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) {
  %373 = cast(%var_2037, dtype="bool") /* ty=Tensor[(16, 14, 13), bool] */;
  %374 = shape_of(%var_2036, dtype="int32") /* ty=Tensor[(3), int32] */;
  %375 = cast(%var_2036, dtype="bool") /* ty=Tensor[(16, 14, 13), bool] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %377 = cast(meta[relay.Constant][23] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %378 = reshape(%377, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float32] */;
  %379 = cast(meta[relay.Constant][23] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %380 = reshape(%379, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float32] */;
  %381 = cast(%var_2065, dtype="float32") /* ty=Tensor[(180), float32] */;
  %382 = reshape(%381, newshape=[12, 3, 5]) /* ty=Tensor[(12, 3, 5), float32] */;
  %383 = @func_528(%382) /* ty=(Tensor[(12, 3, 5), float32],) */;
  %384 = logical_and(%375, %376) /* ty=Tensor[(16, 14, 13), bool] */;
  %385 = @func_1031(%378) /* ty=Tensor[(6, 16, 7), float32] */;
  %386 = @func_1031(%380) /* ty=Tensor[(6, 16, 7), float32] */;
  %387 = %383.0;
  (%384, %385, meta[relay.Constant][23] /* ty=Tensor[(672), float32] */, %386, %387, %var_2065)
}

def @func_5137() -> (Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) {
  %388 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 20), float32] */, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %389 = reshape(%388, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float32] */;
  %390 = @func_3673(%389) /* ty=(Tensor[(10, 2, 2), float32], Tensor[(11, 3, 14), float64], Tensor[(462), float64]) */;
  %391 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 20), float32] */, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %392 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(2, 20), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %393 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 20), float32] */, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %395 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 20), float32] */, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %396 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 20), float32] */, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %397 = reshape(%396, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float32] */;
  %398 = @func_3673(%397) /* ty=(Tensor[(10, 2, 2), float32], Tensor[(11, 3, 14), float64], Tensor[(462), float64]) */;
  %399 = %398.1;
  %400 = cast(%399, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
  %401 = @func_4900() /* ty=Tensor[(12, 5, 4), float32] */;
  %402 = %390.1;
  %403 = not_equal(%393, %394) /* ty=Tensor[(2, 20), bool] */;
  %404 = sinh(%395) /* ty=Tensor[(2, 20), float32] */;
  %405 = sin(%400) /* ty=Tensor[(11, 3, 14), float64] */;
  (%401, %402, %403, %404, %405)
}

def @func_3955(%var_3888: Tensor[(12, 2, 2), float32], %var_3924: Tensor[(2, 96), float64]) -> (Tensor[(10, 2, 2), float32], Tensor[(40), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(1, 16, 12), float64], float64, Tensor[(2, 96), float64], Tensor[(672), float32], Tensor[(12, 3, 5), float32], Tensor[(12, 2, 2), int32]) {
  %406 = cast(meta[relay.Constant][26] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %407 = reshape(%406, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float32] */;
  %408 = @func_3673(%407) /* ty=(Tensor[(10, 2, 2), float32], Tensor[(11, 3, 14), float64], Tensor[(462), float64]) */;
  %409 = cast(meta[relay.Constant][27] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %410 = reshape(%409, newshape=[12, 3, 5]) /* ty=Tensor[(12, 3, 5), float32] */;
  %411 = @func_528(%410) /* ty=(Tensor[(12, 3, 5), float32],) */;
  %412 = cast(7.816f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %413 = cast(%var_3924, dtype="float64") /* ty=Tensor[(2, 96), float64] */;
  %414 = %411.0;
  %415 = cast(%414, dtype="float32") /* ty=Tensor[(12, 3, 5), float32] */;
  %416 = cast(meta[relay.Constant][28] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %417 = reshape(%412, newshape=[]) /* ty=float64 */;
  %418 = reshape(%413, newshape=[1, 16, 12]) /* ty=Tensor[(1, 16, 12), float64] */;
  %419 = reshape(%415, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %420 = reshape(%416, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %421 = @func_1666(%417, %418, %419, %420) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(6, 16, 7), float32], Tensor[(672), float32]) */;
  %422 = cast(7.816f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %423 = %421.0;
  %424 = cast(%423, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
  %425 = cast(meta[relay.Constant][27] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %426 = cast(meta[relay.Constant][28] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %427 = reshape(%422, newshape=[]) /* ty=float64 */;
  %428 = reshape(%424, newshape=[1, 16, 12]) /* ty=Tensor[(1, 16, 12), float64] */;
  %429 = reshape(%425, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %430 = reshape(%426, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %431 = @func_1666(%427, %428, %429, %430) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(6, 16, 7), float32], Tensor[(672), float32]) */;
  %432 = cast(%var_3888, dtype="float32") /* ty=Tensor[(12, 2, 2), float32] */;
  %433 = atanh(%432) /* ty=Tensor[(12, 2, 2), float32] */;
  %434 = cast(%433, dtype="float32") /* ty=Tensor[(12, 2, 2), float32] */;
  %435 = sin(%434) /* ty=Tensor[(12, 2, 2), float32] */;
  %436 = cast(%var_3888, dtype="int32") /* ty=Tensor[(12, 2, 2), int32] */;
  %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%435, dtype="int32") /* ty=Tensor[(12, 2, 2), int32] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %440 = %408.0;
  %441 = %431.1;
  %442 = subtract(%438, %439) /* ty=Tensor[(12, 2, 2), int32] */;
  (%440, meta[relay.Constant][26] /* ty=Tensor[(40), float32] */, %414, meta[relay.Constant][27] /* ty=Tensor[(180), float32] */, %423, 7.816f64 /* ty=float64 */, %var_3924, meta[relay.Constant][28] /* ty=Tensor[(672), float32] */, %441, %442)
}

def @func_6299() -> Tensor[(12, 5, 4), float64] {
  @func_6158() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_8170(%var_8142: Tensor[(462), float64]) -> (Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64], Tensor[(462), float64], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) {
  %443 = cast(%var_8142, dtype="float64") /* ty=Tensor[(462), float64] */;
  %444 = reshape(%443, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
  %445 = @func_5735() /* ty=(Tensor[(2, 20), float32],) */;
  %446 = cast(%var_8142, dtype="float64") /* ty=Tensor[(462), float64] */;
  %447 = reshape(%446, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
  %448 = @func_6158() /* ty=Tensor[(12, 5, 4), float64] */;
  %449 = @func_3266(%444) /* ty=Tensor[(11, 3, 14), float64] */;
  %450 = %445.0;
  %451 = @func_3266(%447) /* ty=Tensor[(11, 3, 14), float64] */;
  (%448, %449, %var_8142, %450, %451)
}

def @func_8511() -> (Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), bool], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) {
  %452 = @func_8417() /* ty=(Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), float64]) */;
  %453 = %452.0;
  %454 = cast(%453, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
  %455 = reshape(%454, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
  %456 = @func_6403(%455) /* ty=(Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32]) */;
  %457 = %456.0;
  %458 = @func_5649() /* ty=Tensor[(12, 5, 4), float64] */;
  %459 = @func_6528() /* ty=Tensor[(2, 20), float32] */;
  (%453, %457, %458, %459)
}

def @func_7612(%var_7604: Tensor[(560, 2), float64]) -> (Tensor[(12, 5, 4), float32], Tensor[(10, 14, 8), float64], Tensor[(560, 2), float32]) {
  %460 = @func_6633() /* ty=Tensor[(12, 5, 4), float64] */;
  %461 = cast(%460, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  %462 = cast(%var_7604, dtype="float64") /* ty=Tensor[(560, 2), float64] */;
  %463 = cast(%var_7604, dtype="float64") /* ty=Tensor[(560, 2), float64] */;
  %464 = reshape(%462, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %465 = reshape(%463, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %466 = @func_2735(%464, %465) /* ty=(Tensor[(10, 14, 8), float64],) */;
  %467 = cast(%var_7604, dtype="float32") /* ty=Tensor[(560, 2), float32] */;
  %468 = sin(%461) /* ty=Tensor[(12, 5, 4), float32] */;
  %469 = %466.0;
  %470 = rsqrt(%467) /* ty=Tensor[(560, 2), float32] */;
  (%468, %469, %470)
}

def @func_13118() -> (Tensor[(12, 5, 4), float32],) {
  %471 = @func_12041() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) */;
  %472 = %471.0;
  (%472,)
}

def @func_11066() -> Tensor[(12, 5, 4), float64] {
  @func_9291() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_11034() -> (Tensor[(2, 20), float32], Tensor[(168, 4), int64]) {
  %473 = @func_7677() /* ty=(Tensor[(2, 20), float32], Tensor[(168, 4), int64], Tensor[(12, 5, 4), float32], Tensor[(168, 4), float32]) */;
  %474 = @func_6528() /* ty=Tensor[(2, 20), float32] */;
  %475 = %473.1;
  (%474, %475)
}

def @func_11422() -> Tensor[(2, 20), float32] {
  %476 = @func_8801() /* ty=(Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %476.0
}

def @func_12910(%var_12905: Tensor[(240), float32]) -> (Tensor[(2, 20), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], float64, Tensor[(240), float32]) {
  %477 = @func_11034() /* ty=(Tensor[(2, 20), float32], Tensor[(168, 4), int64]) */;
  %478 = cast(meta[relay.Constant][29] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %479 = reshape(%478, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
  %480 = cast(%var_12905, dtype="float32") /* ty=Tensor[(240), float32] */;
  %481 = reshape(%480, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %482 = @func_11596(%481) /* ty=(Tensor[(2, 20), float32], float64, Tensor[(700), float64], Tensor[(12, 5, 4), float32], Tensor[(240), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64]) */;
  %483 = %477.0;
  %484 = @func_2114(%479) /* ty=Tensor[(12, 6, 16), float64] */;
  %485 = %482.1;
  (%483, %484, meta[relay.Constant][29] /* ty=Tensor[(1152), float64] */, %485, %var_12905)
}

def @func_3673(%var_3637: Tensor[(10, 2, 2), float32]) -> (Tensor[(10, 2, 2), float32], Tensor[(11, 3, 14), float64], Tensor[(462), float64]) {
  %486 = cast(%var_3637, dtype="float32") /* ty=Tensor[(10, 2, 2), float32] */;
  %487 = cast(meta[relay.Constant][30] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %488 = reshape(%487, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
  %489 = log2(%486) /* ty=Tensor[(10, 2, 2), float32] */;
  %490 = @func_3266(%488) /* ty=Tensor[(11, 3, 14), float64] */;
  (%489, %490, meta[relay.Constant][30] /* ty=Tensor[(462), float64] */)
}

def @func_11205(%var_11192: Tensor[(12, 5, 4), float64]) -> (Tensor[(12, 5, 4), float32],) {
  %491 = @func_6158() /* ty=Tensor[(12, 5, 4), float64] */;
  %492 = cast(%var_11192, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  %493 = shape_of(%491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%491, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %496 = power(%494, %495) /* ty=Tensor[(12, 5, 4), float32] */;
  (%496,)
}

def @func_5856() -> (Tensor[(11, 3, 14), float64],) {
  %497 = @func_5791() /* ty=Tensor[(11, 3, 14), float64] */;
  (%497,)
}

def @func_6403(%var_6369: Tensor[(11, 3, 14), float64]) -> (Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32]) {
  %498 = @func_5791() /* ty=Tensor[(11, 3, 14), float64] */;
  %499 = cast(%var_6369, dtype="bool") /* ty=Tensor[(11, 3, 14), bool] */;
  %500 = shape_of(%498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%498, dtype="bool") /* ty=Tensor[(11, 3, 14), bool] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %503 = cast(%var_6369, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
  %504 = logical_or(%501, %502) /* ty=Tensor[(11, 3, 14), bool] */;
  %505 = acos(%503) /* ty=Tensor[(11, 3, 14), float32] */;
  (%504, %505)
}

def @func_6502(%var_6478: Tensor[(336, 2), float32]) -> (Tensor[(6, 16, 7), float32], Tensor[(336, 2), float32], Tensor[(12, 5, 4), float32], Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32]) {
  %506 = cast(%var_6478, dtype="float32") /* ty=Tensor[(336, 2), float32] */;
  %507 = reshape(%506, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float32] */;
  %508 = @func_5672() /* ty=Tensor[(12, 5, 4), float32] */;
  %509 = cast(%508, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  %510 = cast(meta[relay.Constant][31] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %511 = cast(meta[relay.Constant][32] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %512 = reshape(%510, newshape=[1, 462]) /* ty=Tensor[(1, 462), float64] */;
  %513 = reshape(%511, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %514 = @func_5487(%512, %513) /* ty=(Tensor[(2, 20), float32], Tensor[(48), float32], Tensor[(700), float64], Tensor[(1, 462), float64], Tensor[(180), float32]) */;
  %515 = @func_1031(%507) /* ty=Tensor[(6, 16, 7), float32] */;
  %516 = erf(%509) /* ty=Tensor[(12, 5, 4), float32] */;
  %517 = %514.2;
  (%515, %var_6478, %516, %517, meta[relay.Constant][31] /* ty=Tensor[(462), float64] */, meta[relay.Constant][32] /* ty=Tensor[(180), float32] */)
}

def @func_9352() -> Tensor[(12, 5, 4), uint8] {
  %518 = @func_6299() /* ty=Tensor[(12, 5, 4), float64] */;
  %519 = cast(%518, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  %520 = reshape(%519, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float32] */;
  %521 = @func_6997(%520) /* ty=(Tensor[(12, 5, 4), float32],) */;
  %522 = %521.0;
  %523 = cast(%518, dtype="uint8") /* ty=Tensor[(12, 5, 4), uint8] */;
  %524 = shape_of(%522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %525 = cast(%522, dtype="uint8") /* ty=Tensor[(12, 5, 4), uint8] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_and(%525, %526) /* ty=Tensor[(12, 5, 4), uint8] */
}

def @func_2525(%var_2507: Tensor[(1, 6, 13), float64]) -> (Tensor[(1, 6, 13), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) {
  %527 = cast(3.91668f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %528 = cast(%var_2507, dtype="float64") /* ty=Tensor[(1, 6, 13), float64] */;
  %529 = cast(meta[relay.Constant][33] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %530 = reshape(%529, newshape=[12, 3, 5]) /* ty=Tensor[(12, 3, 5), float32] */;
  %531 = @func_528(%530) /* ty=(Tensor[(12, 3, 5), float32],) */;
  %532 = power(%527, %528) /* ty=Tensor[(1, 6, 13), float64] */;
  %533 = %531.0;
  (%532, %533, meta[relay.Constant][33] /* ty=Tensor[(180), float32] */)
}

def @func_6997(%var_6990: Tensor[(12, 5, 4), float32]) -> (Tensor[(12, 5, 4), float32],) {
  %534 = @func_5672() /* ty=Tensor[(12, 5, 4), float32] */;
  %535 = cast(%var_6990, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  %536 = shape_of(%534, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(%534, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %539 = mod(%537, %538) /* ty=Tensor[(12, 5, 4), float32] */;
  (%539,)
}

def @func_7722() -> (Tensor[(12, 5, 4), float64],) {
  %540 = @func_7176() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) */;
  %541 = %540.1;
  (%541,)
}

def @func_11805(%var_11793: Tensor[(390), int32]) -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(390), int32], Tensor[(12, 5, 4), float64]) {
  %542 = cast(%var_11793, dtype="int32") /* ty=Tensor[(390), int32] */;
  %543 = reshape(%542, newshape=[390]) /* ty=Tensor[(390), int32] */;
  %544 = @func_11181(%543) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(390), int32], Tensor[(180), float32]) */;
  %545 = @func_6761() /* ty=Tensor[(12, 5, 4), float64] */;
  %546 = @func_10386() /* ty=Tensor[(12, 5, 4), float64] */;
  %547 = %544.0;
  %548 = @func_6633() /* ty=Tensor[(12, 5, 4), float64] */;
  (%545, %546, %547, %var_11793, %548)
}

def @func_12193() -> (Tensor[(12, 5, 4), float64], Tensor[(180), float32], Tensor[(1, 192), float64], Tensor[(180), float32], Tensor[(672), float32]) {
  %549 = @func_6872() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32], Tensor[(78), float64], float64, Tensor[(288, 4), float64], Tensor[(168, 4), float32]) */;
  %550 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 192), float64] */, dtype="float64") /* ty=Tensor[(1, 192), float64] */;
  %551 = cast(meta[relay.Constant][35] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %552 = cast(meta[relay.Constant][36] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %553 = reshape(%550, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %554 = reshape(%551, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %555 = reshape(%552, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %556 = @func_5997(%553, %554, %555) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(6, 16, 7), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32], Tensor[(2, 20), float32]) */;
  %557 = %549.1;
  %558 = %556.4;
  (%557, %558, meta[relay.Constant][34] /* ty=Tensor[(1, 192), float64] */, meta[relay.Constant][35] /* ty=Tensor[(180), float32] */, meta[relay.Constant][36] /* ty=Tensor[(672), float32] */)
}

def @func_11678() -> (Tensor[(2, 20), float32],) {
  %559 = @func_9474() /* ty=(Tensor[(2, 20), float32],) */;
  %560 = %559.0;
  (%560,)
}

def @func_8257(%var_8227: Tensor[(4, 8, 3), float64]) -> (Tensor[(4, 8, 3), float64], Tensor[(12, 5, 4), float32]) {
  %561 = cast(%var_8227, dtype="float64") /* ty=Tensor[(4, 8, 3), float64] */;
  %562 = @func_7769() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) */;
  %563 = acos(%561) /* ty=Tensor[(4, 8, 3), float64] */;
  %564 = %562.1;
  (%563, %564)
}

def @func_10076(%var_10016: Tensor[(2, 20), float32], %var_10041: Tensor[(672), float32], %var_10048: Tensor[(2, 20), float32]) -> (Tensor[(2, 20), uint16], Tensor[(2, 20), int32], Tensor[(6, 16, 7), bool], Tensor[(2, 20), bool]) {
  %565 = @func_9323() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %566 = %565.0;
  %567 = cast(%var_10016, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
  %568 = shape_of(%566, dtype="int32") /* ty=Tensor[(2), int32] */;
  %569 = cast(%566, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %571 = cast(%var_10048, dtype="int32") /* ty=Tensor[(2, 20), int32] */;
  %572 = shape_of(%var_10016, dtype="int32") /* ty=Tensor[(2), int32] */;
  %573 = cast(%var_10016, dtype="int32") /* ty=Tensor[(2, 20), int32] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %575 = cast(%var_10041, dtype="float32") /* ty=Tensor[(672), float32] */;
  %576 = reshape(%575, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float32] */;
  %577 = @func_1031(%576) /* ty=Tensor[(6, 16, 7), float32] */;
  %578 = cast(%var_10041, dtype="bool") /* ty=Tensor[(672), bool] */;
  %579 = shape_of(%577, dtype="int32") /* ty=Tensor[(3), int32] */;
  %580 = cast(%577, dtype="bool") /* ty=Tensor[(6, 16, 7), bool] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %582 = cast(%var_10016, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %583 = shape_of(%566, dtype="int32") /* ty=Tensor[(2), int32] */;
  %584 = cast(%566, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %586 = subtract(%569, %570) /* ty=Tensor[(2, 20), uint16] */;
  %587 = multiply(%573, %574) /* ty=Tensor[(2, 20), int32] */;
  %588 = greater(%580, %581) /* ty=Tensor[(6, 16, 7), bool] */;
  %589 = logical_or(%584, %585) /* ty=Tensor[(2, 20), bool] */;
  (%586, %587, %588, %589)
}

def @func_9993() -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), uint8], Tensor[(12, 5, 4), float64]) {
  %590 = @func_9352() /* ty=Tensor[(12, 5, 4), uint8] */;
  %591 = cast(%590, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %592 = reshape(%591, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %593 = @func_8975(%592) /* ty=(Tensor[(12, 5, 4), uint64], Tensor[(12, 5, 4), float64]) */;
  %594 = %593.1;
  %595 = cast(%594, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %596 = @func_8911() /* ty=Tensor[(12, 5, 4), float64] */;
  %597 = atanh(%595) /* ty=Tensor[(12, 5, 4), float64] */;
  (%596, %590, %597)
}

def @func_2114(%var_2089: Tensor[(12, 6, 16), float64]) -> Tensor[(12, 6, 16), float64] {
  %598 = cast(%var_2089, dtype="float64") /* ty=Tensor[(12, 6, 16), float64] */;
  log10(%598) /* ty=Tensor[(12, 6, 16), float64] */
}

def @func_8911() -> Tensor[(12, 5, 4), float64] {
  @func_6937() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_5430() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32]) {
  %599 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %600 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %601 = %599.0;
  %602 = %600.0;
  (%601, %602)
}

def @func_9323() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32]) {
  %603 = @func_5528() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %604 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %605 = %603.1;
  %606 = %604.0;
  (%605, %606)
}

def @func_9216() -> (Tensor[(12, 3, 5), float32], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) {
  %607 = @func_6872() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32], Tensor[(78), float64], float64, Tensor[(288, 4), float64], Tensor[(168, 4), float32]) */;
  %608 = @func_7722() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %609 = %607.2;
  %610 = %608.0;
  %611 = @func_8445() /* ty=Tensor[(2, 20), float32] */;
  (%609, %610, %611)
}

def @func_9952() -> (Tensor[(2, 20), int64], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), float64], Tensor[(11, 3, 14), float64]) {
  %612 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %613 = %612.0;
  %614 = cast(%613, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %615 = sin(%614) /* ty=Tensor[(2, 20), float32] */;
  %616 = cast(%615, dtype="int64") /* ty=Tensor[(2, 20), int64] */;
  %617 = shape_of(%613, dtype="int32") /* ty=Tensor[(2), int32] */;
  %618 = cast(%613, dtype="int64") /* ty=Tensor[(2, 20), int64] */;
  %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %620 = @func_8331() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float64]) */;
  %621 = @func_5856() /* ty=(Tensor[(11, 3, 14), float64],) */;
  %622 = %620.0;
  %623 = cast(%622, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %624 = reshape(%623, newshape=[2, 20]) /* ty=Tensor[(2, 20), float32] */;
  %625 = @func_7949(%624) /* ty=Tensor[(2, 20), float32] */;
  %626 = cast(%625, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %627 = %621.0;
  %628 = cast(%627, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
  %629 = reshape(%628, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
  %630 = logical_xor(%618, %619) /* ty=Tensor[(2, 20), int64] */;
  %631 = asinh(%626) /* ty=Tensor[(2, 20), float64] */;
  %632 = @func_3266(%629) /* ty=Tensor[(11, 3, 14), float64] */;
  (%630, %622, %627, %631, %632)
}

def @func_6633() -> Tensor[(12, 5, 4), float64] {
  %633 = @func_6438() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %633.0
}

def @func_9474() -> (Tensor[(2, 20), float32],) {
  %634 = @func_7227() /* ty=(Tensor[(2, 20), float32],) */;
  %635 = %634.0;
  (%635,)
}

def @func_9649(%var_9626: Tensor[(4, 6, 2), float32]) -> Tensor[(4, 6, 2), float32] {
  %636 = cast(%var_9626, dtype="float32") /* ty=Tensor[(4, 6, 2), float32] */;
  cosh(%636) /* ty=Tensor[(4, 6, 2), float32] */
}

def @func_12256() -> (Tensor[(2, 20), float32],) {
  %637 = @func_8445() /* ty=Tensor[(2, 20), float32] */;
  (%637,)
}

def @func_12771(%var_12751: Tensor[(15, 4, 2), float32]) -> Tensor[(15, 4, 2), float32] {
  %638 = cast(%var_12751, dtype="float32") /* ty=Tensor[(15, 4, 2), float32] */;
  log(%638) /* ty=Tensor[(15, 4, 2), float32] */
}

def @func_8085(%var_8080: Tensor[(672), float32]) -> (Tensor[(12, 5, 4), float32], Tensor[(180), float32], Tensor[(192, 1), float64], Tensor[(180), float32], Tensor[(672), float32]) {
  %639 = @func_7120() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %640 = %639.0;
  %641 = cast(%640, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  %642 = cast(meta[relay.Constant][37] /* ty=Tensor[(192, 1), float64] */, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
  %643 = cast(meta[relay.Constant][38] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %644 = cast(%var_8080, dtype="float32") /* ty=Tensor[(672), float32] */;
  %645 = reshape(%642, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %646 = reshape(%643, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %647 = reshape(%644, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %648 = @func_5997(%645, %646, %647) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(6, 16, 7), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32], Tensor[(2, 20), float32]) */;
  %649 = sigmoid(%641) /* ty=Tensor[(12, 5, 4), float32] */;
  %650 = %648.4;
  (%649, %650, meta[relay.Constant][37] /* ty=Tensor[(192, 1), float64] */, meta[relay.Constant][38] /* ty=Tensor[(180), float32] */, %var_8080)
}

def @func_7769() -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) {
  %651 = @func_6707() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %652 = @func_6299() /* ty=Tensor[(12, 5, 4), float64] */;
  %653 = %651.0;
  (%652, %653)
}

def @func_6872() -> (Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32], Tensor[(78), float64], float64, Tensor[(288, 4), float64], Tensor[(168, 4), float32]) {
  %654 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %655 = cast(meta[relay.Constant][39] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %656 = reshape(%655, newshape=[1, 6, 13]) /* ty=Tensor[(1, 6, 13), float64] */;
  %657 = @func_2525(%656) /* ty=(Tensor[(1, 6, 13), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) */;
  %658 = %657.1;
  %659 = cast(%658, dtype="float32") /* ty=Tensor[(12, 3, 5), float32] */;
  %660 = cast(meta[relay.Constant][40] /* ty=Tensor[(288, 4), float64] */, dtype="float64") /* ty=Tensor[(288, 4), float64] */;
  %661 = cast(meta[relay.Constant][41] /* ty=Tensor[(168, 4), float32] */, dtype="float32") /* ty=Tensor[(168, 4), float32] */;
  %662 = reshape(%659, newshape=[6, 30]) /* ty=Tensor[(6, 30), float32] */;
  %663 = reshape(%660, newshape=[1152]) /* ty=Tensor[(1152), float64] */;
  %664 = reshape(%661, newshape=[56, 12]) /* ty=Tensor[(56, 12), float32] */;
  %665 = @func_5353(%662, %663, %664) /* ty=(Tensor[(2, 20), bool], Tensor[(1, 16, 12), float64], float64, Tensor[(192), float64], Tensor[(6, 30), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(56, 12), bool], Tensor[(56, 12), bool], Tensor[(12, 5, 4), float32]) */;
  %666 = %654.0;
  %667 = @func_5379() /* ty=Tensor[(12, 5, 4), float64] */;
  %668 = %665.2;
  (%666, %667, %658, meta[relay.Constant][39] /* ty=Tensor[(78), float64] */, %668, meta[relay.Constant][40] /* ty=Tensor[(288, 4), float64] */, meta[relay.Constant][41] /* ty=Tensor[(168, 4), float32] */)
}

def @func_9523(%var_9518: Tensor[(15, 13, 16), uint32], %var_9519: Tensor[(15, 13, 16), uint32]) -> Tensor[(15, 13, 16), uint32] {
  %669 = cast(%var_9519, dtype="uint32") /* ty=Tensor[(15, 13, 16), uint32] */;
  %670 = shape_of(%var_9518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%var_9518, dtype="uint32") /* ty=Tensor[(15, 13, 16), uint32] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%671, %672) /* ty=Tensor[(15, 13, 16), uint32] */
}

def @func_9552() -> (Tensor[(12, 5, 4), float32],) {
  %673 = @func_8869() /* ty=Tensor[(12, 5, 4), float32] */;
  (%673,)
}

def @func_7949(%var_7940: Tensor[(2, 20), float32]) -> Tensor[(2, 20), float32] {
  %674 = @func_7227() /* ty=(Tensor[(2, 20), float32],) */;
  %675 = %674.0;
  %676 = cast(%var_7940, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %677 = shape_of(%675, dtype="int32") /* ty=Tensor[(2), int32] */;
  %678 = cast(%675, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  divide(%678, %679) /* ty=Tensor[(2, 20), float32] */
}

def @func_5211() -> Tensor[(12, 5, 4), float64] {
  %680 = @func_4900() /* ty=Tensor[(12, 5, 4), float32] */;
  %681 = cast(%680, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  rsqrt(%681) /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_5353(%var_5294: Tensor[(6, 30), float32], %var_5302: Tensor[(1152), float64], %var_5334: Tensor[(56, 12), float32]) -> (Tensor[(2, 20), bool], Tensor[(1, 16, 12), float64], float64, Tensor[(192), float64], Tensor[(6, 30), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(56, 12), bool], Tensor[(56, 12), bool], Tensor[(12, 5, 4), float32]) {
  %682 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %683 = cast(-4.44864f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %684 = cast(meta[relay.Constant][42] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %685 = cast(%var_5294, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
  %686 = cast(meta[relay.Constant][43] /* ty=Tensor[(56, 12), float32] */, dtype="float32") /* ty=Tensor[(56, 12), float32] */;
  %687 = reshape(%683, newshape=[]) /* ty=float64 */;
  %688 = reshape(%684, newshape=[1, 16, 12]) /* ty=Tensor[(1, 16, 12), float64] */;
  %689 = reshape(%685, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %690 = reshape(%686, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %691 = @func_1666(%687, %688, %689, %690) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(6, 16, 7), float32], Tensor[(672), float32]) */;
  %692 = cast(%var_5302, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %693 = reshape(%692, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
  %694 = cast(%var_5334, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
  %695 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(56, 12), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %696 = cast(meta[relay.Constant][43] /* ty=Tensor[(56, 12), float32] */, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %698 = cast(meta[relay.Constant][44] /* ty=Tensor[(56, 12), float32] */, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
  %699 = shape_of(%var_5334, dtype="int32") /* ty=Tensor[(2), int32] */;
  %700 = cast(%var_5334, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %702 = @func_5211() /* ty=Tensor[(12, 5, 4), float64] */;
  %703 = cast(%702, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  %704 = %682.2;
  %705 = %691.0;
  %706 = @func_2114(%693) /* ty=Tensor[(12, 6, 16), float64] */;
  %707 = logical_or(%696, %697) /* ty=Tensor[(56, 12), bool] */;
  %708 = logical_and(%700, %701) /* ty=Tensor[(56, 12), bool] */;
  %709 = asinh(%703) /* ty=Tensor[(12, 5, 4), float32] */;
  (%704, %705, -4.44864f64 /* ty=float64 */, meta[relay.Constant][42] /* ty=Tensor[(192), float64] */, %var_5294, %706, %var_5302, %707, %708, %709)
}

def @func_11621() -> (Tensor[(12, 5, 4), float64],) {
  %710 = @func_8712() /* ty=Tensor[(12, 5, 4), float64] */;
  (%710,)
}

def @func_5997(%var_5989: Tensor[(192), float64], %var_5990: Tensor[(180), float32], %var_5991: Tensor[(672), float32]) -> (Tensor[(12, 5, 4), float32], Tensor[(6, 16, 7), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32], Tensor[(2, 20), float32]) {
  %711 = cast(3.47976f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %712 = cast(%var_5989, dtype="float64") /* ty=Tensor[(192), float64] */;
  %713 = cast(%var_5990, dtype="float32") /* ty=Tensor[(180), float32] */;
  %714 = cast(%var_5991, dtype="float32") /* ty=Tensor[(672), float32] */;
  %715 = reshape(%711, newshape=[]) /* ty=float64 */;
  %716 = reshape(%712, newshape=[1, 16, 12]) /* ty=Tensor[(1, 16, 12), float64] */;
  %717 = reshape(%713, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %718 = reshape(%714, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %719 = @func_1666(%715, %716, %717, %718) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(6, 16, 7), float32], Tensor[(672), float32]) */;
  %720 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %721 = @func_4900() /* ty=Tensor[(12, 5, 4), float32] */;
  %722 = %719.3;
  %723 = %720.0;
  (%721, %722, 3.47976f64 /* ty=float64 */, %var_5989, %var_5990, %var_5991, %723)
}

def @func_6984() -> (Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64]) {
  %724 = @func_5379() /* ty=Tensor[(12, 5, 4), float64] */;
  %725 = @func_5791() /* ty=Tensor[(11, 3, 14), float64] */;
  (%724, %725)
}

def @func_10228() -> (Tensor[(12, 5, 4), float32],) {
  %726 = @func_6707() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %727 = %726.0;
  (%727,)
}

def @func_11295(%var_11288: Tensor[(16, 15, 1), float32]) -> Tensor[(16, 15, 1), float32] {
  %728 = cast(%var_11288, dtype="float32") /* ty=Tensor[(16, 15, 1), float32] */;
  asin(%728) /* ty=Tensor[(16, 15, 1), float32] */
}

def @func_7563(%var_7543: Tensor[(2, 20), float32]) -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(2, 20), bool], Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32], Tensor[(2, 20), float64]) {
  %729 = @func_6438() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %730 = @func_7120() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %731 = @func_5735() /* ty=(Tensor[(2, 20), float32],) */;
  %732 = %731.0;
  %733 = cast(%732, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %734 = cosh(%733) /* ty=Tensor[(2, 20), float64] */;
  %735 = cast(%734, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %736 = log10(%735) /* ty=Tensor[(2, 20), float32] */;
  %737 = cast(%736, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %738 = log(%737) /* ty=Tensor[(2, 20), float64] */;
  %739 = cast(%736, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %740 = shape_of(%738, dtype="int32") /* ty=Tensor[(2), int32] */;
  %741 = cast(%738, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %743 = cast(%738, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %744 = cast(%738, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %745 = atanh(%744) /* ty=Tensor[(2, 20), float32] */;
  %746 = cast(%var_7543, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
  %747 = shape_of(%745, dtype="int32") /* ty=Tensor[(2), int32] */;
  %748 = cast(%745, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %750 = minimum(%748, %749) /* ty=Tensor[(2, 20), uint16] */;
  %751 = cast(%750, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %752 = %729.0;
  %753 = %730.0;
  %754 = greater_equal(%741, %742) /* ty=Tensor[(2, 20), bool] */;
  %755 = @func_5672() /* ty=Tensor[(12, 5, 4), float32] */;
  %756 = sqrt(%743) /* ty=Tensor[(2, 20), float32] */;
  %757 = exp(%751) /* ty=Tensor[(2, 20), float64] */;
  (%752, %753, %754, %755, %756, %757)
}

def @func_5791() -> Tensor[(11, 3, 14), float64] {
  %758 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %758.1
}

def @func_8869() -> Tensor[(12, 5, 4), float32] {
  %759 = @func_6707() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %760 = %759.0;
  %761 = cast(%760, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  acos(%761) /* ty=Tensor[(12, 5, 4), float32] */
}

def @func_8387(%var_8367: Tensor[(224), float32], %var_8373: Tensor[(672), float32]) -> (Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(16, 1, 14), float32], Tensor[(224), float32], Tensor[(180), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32]) {
  %762 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %763 = @func_7722() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %764 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %765 = cast(%var_8367, dtype="float32") /* ty=Tensor[(224), float32] */;
  %766 = reshape(%765, newshape=[16, 1, 14]) /* ty=Tensor[(16, 1, 14), float32] */;
  %767 = cast(-8.34294f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %768 = cast(meta[relay.Constant][45] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %769 = cast(meta[relay.Constant][46] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %770 = cast(%var_8373, dtype="float32") /* ty=Tensor[(672), float32] */;
  %771 = reshape(%767, newshape=[]) /* ty=float64 */;
  %772 = reshape(%768, newshape=[1, 16, 12]) /* ty=Tensor[(1, 16, 12), float64] */;
  %773 = reshape(%769, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %774 = reshape(%770, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %775 = @func_1666(%771, %772, %773, %774) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(6, 16, 7), float32], Tensor[(672), float32]) */;
  %776 = %762.0;
  %777 = @func_5791() /* ty=Tensor[(11, 3, 14), float64] */;
  %778 = %763.0;
  %779 = %764.0;
  %780 = @func_4688(%766) /* ty=Tensor[(16, 1, 14), float32] */;
  %781 = %775.2;
  (%776, %777, %778, %779, %780, %var_8367, %781, -8.34294f64 /* ty=float64 */, meta[relay.Constant][45] /* ty=Tensor[(192), float64] */, meta[relay.Constant][46] /* ty=Tensor[(180), float32] */, %var_8373)
}

def @func_11931() -> (Tensor[(12, 5, 4), float64], Tensor[(462), float64], Tensor[(40), float32], Tensor[(2, 20), float32]) {
  %782 = @func_8663() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %783 = cast(meta[relay.Constant][47] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %784 = reshape(%783, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float32] */;
  %785 = @func_3673(%784) /* ty=(Tensor[(10, 2, 2), float32], Tensor[(11, 3, 14), float64], Tensor[(462), float64]) */;
  %786 = %782.0;
  %787 = cast(%786, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %788 = reshape(%787, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %789 = @func_10177(%788) /* ty=(Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), bool], Tensor[(180), float32], Tensor[(1120), float64], Tensor[(1120), float64]) */;
  %790 = %785.2;
  %791 = %789.0;
  (%786, %790, meta[relay.Constant][47] /* ty=Tensor[(40), float32] */, %791)
}

def @func_5487(%var_5482: Tensor[(1, 462), float64], %var_5483: Tensor[(180), float32]) -> (Tensor[(2, 20), float32], Tensor[(48), float32], Tensor[(700), float64], Tensor[(1, 462), float64], Tensor[(180), float32]) {
  %792 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %793 = cast(meta[relay.Constant][48] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
  %794 = cast(%var_5482, dtype="float64") /* ty=Tensor[(1, 462), float64] */;
  %795 = cast(%var_5483, dtype="float32") /* ty=Tensor[(180), float32] */;
  %796 = reshape(%793, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float64] */;
  %797 = reshape(%794, newshape=[231, 2]) /* ty=Tensor[(231, 2), float64] */;
  %798 = reshape(%795, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %799 = @func_4115(%796, %797, %798) /* ty=(Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(5, 10, 14), int64], Tensor[(6, 16, 7), float32], Tensor[(2912), bool], float64, Tensor[(48), float32], Tensor[(192), float64]) */;
  %800 = %792.3;
  %801 = %799.10;
  (%800, %801, meta[relay.Constant][48] /* ty=Tensor[(700), float64] */, %var_5482, %var_5483)
}

def @func_11726(%var_11695: uint8, %var_11696: Tensor[(14, 16, 2), uint8]) -> (Tensor[(14, 16, 2), bool], Tensor[(2, 20), float32]) {
  %802 = cast(%var_11695, dtype="bool") /* ty=bool */;
  %803 = cast(%var_11696, dtype="bool") /* ty=Tensor[(14, 16, 2), bool] */;
  %804 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %805 = greater(%802, %803) /* ty=Tensor[(14, 16, 2), bool] */;
  %806 = %804.0;
  (%805, %806)
}

def @func_10565() -> (Tensor[(2, 20), float32],) {
  %807 = @func_5735() /* ty=(Tensor[(2, 20), float32],) */;
  %808 = %807.0;
  (%808,)
}

def @func_9822(%var_9817: Tensor[(2, 20), float32]) -> Tensor[(2, 20), bool] {
  %809 = @func_6528() /* ty=Tensor[(2, 20), float32] */;
  %810 = cast(%var_9817, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %811 = shape_of(%809, dtype="int32") /* ty=Tensor[(2), int32] */;
  %812 = cast(%809, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  less_equal(%812, %813) /* ty=Tensor[(2, 20), bool] */
}

def @func_8892() -> (Tensor[(12, 5, 4), float64],) {
  %814 = @func_6761() /* ty=Tensor[(12, 5, 4), float64] */;
  (%814,)
}

def @func_8734() -> Tensor[(12, 3, 5), float32] {
  %815 = @func_6872() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32], Tensor[(78), float64], float64, Tensor[(288, 4), float64], Tensor[(168, 4), float32]) */;
  %815.2
}

def @func_9445(%var_9434: Tensor[(16, 14), float32]) -> (Tensor[(2, 20), float32], Tensor[(180), float32], Tensor[(16, 14), float32], Tensor[(672), float32]) {
  %816 = @func_9323() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %817 = cast(%var_9434, dtype="float32") /* ty=Tensor[(16, 14), float32] */;
  %818 = cast(meta[relay.Constant][49] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %819 = reshape(%817, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %820 = reshape(%818, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %821 = @func_8387(%819, %820) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(16, 1, 14), float32], Tensor[(224), float32], Tensor[(180), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32]) */;
  %822 = %816.1;
  %823 = %821.9;
  (%822, %823, %var_9434, meta[relay.Constant][49] /* ty=Tensor[(672), float32] */)
}

def @func_6781() -> Tensor[(2, 20), float32] {
  %824 = @func_5430() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %824.1
}

def @func_5607(%var_5587: Tensor[(2, 20), float32]) -> Tensor[(2, 20), int8] {
  %825 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %826 = %825.2;
  %827 = cast(%826, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %828 = erf(%827) /* ty=Tensor[(2, 20), float32] */;
  %829 = cast(%var_5587, dtype="int8") /* ty=Tensor[(2, 20), int8] */;
  %830 = shape_of(%828, dtype="int32") /* ty=Tensor[(2), int32] */;
  %831 = cast(%828, dtype="int8") /* ty=Tensor[(2, 20), int8] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  bitwise_and(%831, %832) /* ty=Tensor[(2, 20), int8] */
}

def @func_5466(%var_5447: Tensor[(11, 4, 14), float32]) -> Tensor[(11, 4, 14), bool] {
  %833 = cast(%var_5447, dtype="float32") /* ty=Tensor[(11, 4, 14), float32] */;
  %834 = asinh(%833) /* ty=Tensor[(11, 4, 14), float32] */;
  %835 = cast(%834, dtype="float32") /* ty=Tensor[(11, 4, 14), float32] */;
  %836 = atan(%835) /* ty=Tensor[(11, 4, 14), float32] */;
  %837 = cast(%834, dtype="bool") /* ty=Tensor[(11, 4, 14), bool] */;
  %838 = shape_of(%836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%836, dtype="bool") /* ty=Tensor[(11, 4, 14), bool] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%839, %840) /* ty=Tensor[(11, 4, 14), bool] */
}

def @func_12338() -> Tensor[(2, 20), float32] {
  %841 = @func_11678() /* ty=(Tensor[(2, 20), float32],) */;
  %841.0
}

def @func_8467() -> (Tensor[(2, 20), float32],) {
  %842 = @func_8331() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float64]) */;
  %843 = %842.0;
  (%843,)
}

def @func_5672() -> Tensor[(12, 5, 4), float32] {
  %844 = @func_4900() /* ty=Tensor[(12, 5, 4), float32] */;
  %845 = cast(%844, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  sinh(%845) /* ty=Tensor[(12, 5, 4), float32] */
}

def @func_4900() -> Tensor[(12, 5, 4), float32] {
  %846 = cast(meta[relay.Constant][50] /* ty=Tensor[(12, 5, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  asin(%846) /* ty=Tensor[(12, 5, 4), float32] */
}

def @func_10386() -> Tensor[(12, 5, 4), float64] {
  @func_6633() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_528(%var_519: Tensor[(12, 3, 5), float32]) -> (Tensor[(12, 3, 5), float32],) {
  %847 = cast(%var_519, dtype="float32") /* ty=Tensor[(12, 3, 5), float32] */;
  %848 = cosh(%847) /* ty=Tensor[(12, 3, 5), float32] */;
  (%848,)
}

def @func_7326() -> Tensor[(11, 3, 14), float64] {
  @func_5791() /* ty=Tensor[(11, 3, 14), float64] */
}

def @func_13238() -> (Tensor[(12, 3, 5), float32],) {
  %849 = @func_8734() /* ty=Tensor[(12, 3, 5), float32] */;
  %850 = cast(%849, dtype="float64") /* ty=Tensor[(12, 3, 5), float64] */;
  %851 = log(%850) /* ty=Tensor[(12, 3, 5), float64] */;
  %852 = cast(%851, dtype="float32") /* ty=Tensor[(12, 3, 5), float32] */;
  %853 = acos(%852) /* ty=Tensor[(12, 3, 5), float32] */;
  (%853,)
}

def @func_10955() -> (Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), float64]) {
  %854 = @func_10933() /* ty=(Tensor[(11, 3, 14), float64],) */;
  %855 = @func_9952() /* ty=(Tensor[(2, 20), int64], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), float64], Tensor[(11, 3, 14), float64]) */;
  %856 = %854.0;
  %857 = %855.2;
  (%856, %857)
}

def @func_4688(%var_4685: Tensor[(16, 1, 14), float32]) -> Tensor[(16, 1, 14), float32] {
  %858 = cast(%var_4685, dtype="float32") /* ty=Tensor[(16, 1, 14), float32] */;
  cos(%858) /* ty=Tensor[(16, 1, 14), float32] */
}

def @func_5964(%var_5942: Tensor[(180), float32], %var_5950: Tensor[(12, 5, 4), float64]) -> (Tensor[(6, 16, 7), float32], Tensor[(180), float32], Tensor[(12, 5, 4), bool], Tensor[(2912), float64]) {
  %859 = cast(meta[relay.Constant][51] /* ty=Tensor[(2912), bool] */, dtype="bool") /* ty=Tensor[(2912), bool] */;
  %860 = cast(meta[relay.Constant][51] /* ty=Tensor[(2912), bool] */, dtype="bool") /* ty=Tensor[(2912), bool] */;
  %861 = cast(%var_5942, dtype="float32") /* ty=Tensor[(180), float32] */;
  %862 = reshape(%859, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), bool] */;
  %863 = reshape(%860, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), bool] */;
  %864 = reshape(%861, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %865 = @func_2073(%862, %863, %864) /* ty=(Tensor[(16, 14, 13), bool], Tensor[(6, 16, 7), float32], Tensor[(672), float32], Tensor[(6, 16, 7), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) */;
  %866 = @func_5379() /* ty=Tensor[(12, 5, 4), float64] */;
  %867 = cast(%var_5950, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
  %868 = shape_of(%866, dtype="int32") /* ty=Tensor[(3), int32] */;
  %869 = cast(%866, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
  %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %871 = cast(meta[relay.Constant][51] /* ty=Tensor[(2912), bool] */, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %872 = %865.1;
  %873 = logical_or(%869, %870) /* ty=Tensor[(12, 5, 4), bool] */;
  %874 = rsqrt(%871) /* ty=Tensor[(2912), float64] */;
  (%872, %var_5942, %873, %874)
}

def @func_13000() -> (Tensor[(2, 20), float32],) {
  %875 = @func_7227() /* ty=(Tensor[(2, 20), float32],) */;
  %876 = %875.0;
  (%876,)
}

def @func_11144(%var_11125: Tensor[(12, 5, 4), float64]) -> (Tensor[(12, 5, 4), uint64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64]) {
  %877 = @func_5558() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %878 = %877.0;
  %879 = cast(%var_11125, dtype="uint64") /* ty=Tensor[(12, 5, 4), uint64] */;
  %880 = shape_of(%878, dtype="int32") /* ty=Tensor[(3), int32] */;
  %881 = cast(%878, dtype="uint64") /* ty=Tensor[(12, 5, 4), uint64] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %883 = @func_5558() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %884 = subtract(%881, %882) /* ty=Tensor[(12, 5, 4), uint64] */;
  %885 = %883.0;
  %886 = @func_6761() /* ty=Tensor[(12, 5, 4), float64] */;
  (%884, %885, %886)
}

def @func_6692() -> (Tensor[(2, 20), float32], Tensor[(12, 3, 5), float32], Tensor[(78), float64], Tensor[(2, 20), float32]) {
  %887 = cast(meta[relay.Constant][52] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %888 = reshape(%887, newshape=[1, 6, 13]) /* ty=Tensor[(1, 6, 13), float64] */;
  %889 = @func_2525(%888) /* ty=(Tensor[(1, 6, 13), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) */;
  %890 = @func_5735() /* ty=(Tensor[(2, 20), float32],) */;
  %891 = %890.0;
  %892 = cast(%891, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %893 = @func_6528() /* ty=Tensor[(2, 20), float32] */;
  %894 = %889.1;
  %895 = asin(%892) /* ty=Tensor[(2, 20), float32] */;
  (%893, %894, meta[relay.Constant][52] /* ty=Tensor[(78), float64] */, %895)
}

def @func_10695(%var_10678: uint16, %var_10687: Tensor[(180), float32], %var_10688: Tensor[(2, 336), float32]) -> (Tensor[(12, 5, 4), float64], Tensor[(7, 11, 7), uint16], uint16, Tensor[(11, 49), uint16], Tensor[(2, 20), float32], Tensor[(192), float64], Tensor[(180), float32], Tensor[(2, 336), float32]) {
  %896 = @func_9216() /* ty=(Tensor[(12, 3, 5), float32], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) */;
  %897 = cast(%var_10678, dtype="uint16") /* ty=uint16 */;
  %898 = cast(meta[relay.Constant][53] /* ty=Tensor[(11, 49), uint16] */, dtype="uint16") /* ty=Tensor[(11, 49), uint16] */;
  %899 = reshape(%897, newshape=[]) /* ty=uint16 */;
  %900 = reshape(%898, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), uint16] */;
  %901 = @func_6185(%899, %900) /* ty=(Tensor[(7, 11, 7), uint16],) */;
  %902 = cast(meta[relay.Constant][54] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %903 = cast(%var_10687, dtype="float32") /* ty=Tensor[(180), float32] */;
  %904 = cast(%var_10688, dtype="float32") /* ty=Tensor[(2, 336), float32] */;
  %905 = reshape(%902, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %906 = reshape(%903, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %907 = reshape(%904, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %908 = @func_5997(%905, %906, %907) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(6, 16, 7), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32], Tensor[(2, 20), float32]) */;
  %909 = %896.1;
  %910 = %901.0;
  %911 = %908.6;
  (%909, %910, %var_10678, meta[relay.Constant][53] /* ty=Tensor[(11, 49), uint16] */, %911, meta[relay.Constant][54] /* ty=Tensor[(192), float64] */, %var_10687, %var_10688)
}

def @func_8605() -> Tensor[(2, 20), float32] {
  @func_6781() /* ty=Tensor[(2, 20), float32] */
}

def @func_5558() -> (Tensor[(12, 5, 4), float64],) {
  %912 = @func_5379() /* ty=Tensor[(12, 5, 4), float64] */;
  (%912,)
}

def @func_2735(%var_2730: Tensor[(10, 14, 8), float64], %var_2731: Tensor[(10, 14, 8), float64]) -> (Tensor[(10, 14, 8), float64],) {
  %913 = cast(%var_2731, dtype="float64") /* ty=Tensor[(10, 14, 8), float64] */;
  %914 = shape_of(%var_2730, dtype="int32") /* ty=Tensor[(3), int32] */;
  %915 = cast(%var_2730, dtype="float64") /* ty=Tensor[(10, 14, 8), float64] */;
  %916 = dyn.reshape(%913, %914, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %917 = floor_divide(%915, %916) /* ty=Tensor[(10, 14, 8), float64] */;
  (%917,)
}

def @func_9757() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64]) {
  %918 = @func_8467() /* ty=(Tensor[(2, 20), float32],) */;
  %919 = @func_7176() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) */;
  %920 = @func_8511() /* ty=(Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), bool], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) */;
  %921 = %918.0;
  %922 = @func_8605() /* ty=Tensor[(2, 20), float32] */;
  %923 = @func_5649() /* ty=Tensor[(12, 5, 4), float64] */;
  %924 = %919.2;
  %925 = %920.0;
  (%921, %922, %923, %924, %925)
}

def @func_8417() -> (Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), float64]) {
  %926 = @func_5856() /* ty=(Tensor[(11, 3, 14), float64],) */;
  %927 = %926.0;
  %928 = @func_7326() /* ty=Tensor[(11, 3, 14), float64] */;
  (%927, %928)
}

def @func_11816(%var_11809: Tensor[(15, 3, 11), float64], %var_11810: Tensor[(15, 3, 11), float64]) -> Tensor[(15, 3, 11), float64] {
  %929 = cast(%var_11810, dtype="float64") /* ty=Tensor[(15, 3, 11), float64] */;
  %930 = shape_of(%var_11809, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(%var_11809, dtype="float64") /* ty=Tensor[(15, 3, 11), float64] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%931, %932) /* ty=Tensor[(15, 3, 11), float64] */
}

def @func_9009() -> (Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) {
  %933 = @func_6299() /* ty=Tensor[(12, 5, 4), float64] */;
  %934 = cast(%933, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %935 = log10(%934) /* ty=Tensor[(12, 5, 4), float64] */;
  %936 = @func_6528() /* ty=Tensor[(2, 20), float32] */;
  (%935, %936)
}

def @func_12439(%var_12427: Tensor[(594), int8]) -> (Tensor[(12, 5, 4), float64], Tensor[(2, 20), int8], Tensor[(40), float32], Tensor[(11, 3, 14), float64], Tensor[(4, 6, 2), float32], Tensor[(48), float32], Tensor[(12, 5, 4), float32], Tensor[(11, 6, 9), int8], Tensor[(594), int8]) {
  %937 = @func_9757() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64]) */;
  %938 = cast(meta[relay.Constant][55] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %939 = reshape(%938, newshape=[2, 20]) /* ty=Tensor[(2, 20), float32] */;
  %940 = cast(meta[relay.Constant][56] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %941 = reshape(%940, newshape=[4, 6, 2]) /* ty=Tensor[(4, 6, 2), float32] */;
  %942 = @func_7677() /* ty=(Tensor[(2, 20), float32], Tensor[(168, 4), int64], Tensor[(12, 5, 4), float32], Tensor[(168, 4), float32]) */;
  %943 = cast(%var_12427, dtype="int8") /* ty=Tensor[(594), int8] */;
  %944 = cast(%var_12427, dtype="int8") /* ty=Tensor[(594), int8] */;
  %945 = reshape(%943, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), int8] */;
  %946 = reshape(%944, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), int8] */;
  %947 = @func_10907(%945, %946) /* ty=(Tensor[(11, 6, 9), int8], Tensor[(1120), float64], Tensor[(240), float64]) */;
  %948 = %937.2;
  %949 = @func_5607(%939) /* ty=Tensor[(2, 20), int8] */;
  %950 = @func_11336() /* ty=Tensor[(11, 3, 14), float64] */;
  %951 = @func_9649(%941) /* ty=Tensor[(4, 6, 2), float32] */;
  %952 = %942.2;
  %953 = %947.0;
  (%948, %949, meta[relay.Constant][55] /* ty=Tensor[(40), float32] */, %950, %951, meta[relay.Constant][56] /* ty=Tensor[(48), float32] */, %952, %953, %var_12427)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6872() -> (Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32], Tensor[(78), float64], float64, Tensor[(288, 4), float64], Tensor[(168, 4), float32]) {
  %0 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %2 = reshape(%1, newshape=[1, 6, 13]) /* ty=Tensor[(1, 6, 13), float64] */;
  %3 = @func_2525(%2) /* ty=(Tensor[(1, 6, 13), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) */;
  %4 = %3.1;
  %5 = cast(%4, dtype="float32") /* ty=Tensor[(12, 3, 5), float32] */;
  %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(288, 4), float64] */, dtype="float64") /* ty=Tensor[(288, 4), float64] */;
  %7 = cast(meta[relay.Constant][2] /* ty=Tensor[(168, 4), float32] */, dtype="float32") /* ty=Tensor[(168, 4), float32] */;
  %8 = reshape(%5, newshape=[6, 30]) /* ty=Tensor[(6, 30), float32] */;
  %9 = reshape(%6, newshape=[1152]) /* ty=Tensor[(1152), float64] */;
  %10 = reshape(%7, newshape=[56, 12]) /* ty=Tensor[(56, 12), float32] */;
  %11 = @func_5353(%8, %9, %10) /* ty=(Tensor[(2, 20), bool], Tensor[(1, 16, 12), float64], float64, Tensor[(192), float64], Tensor[(6, 30), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(56, 12), bool], Tensor[(56, 12), bool], Tensor[(12, 5, 4), float32]) */;
  %12 = %0.0;
  %13 = @func_5379() /* ty=Tensor[(12, 5, 4), float64] */;
  %14 = %11.2;
  (%12, %13, %4, meta[relay.Constant][0] /* ty=Tensor[(78), float64] */, %14, meta[relay.Constant][1] /* ty=Tensor[(288, 4), float64] */, meta[relay.Constant][2] /* ty=Tensor[(168, 4), float32] */)
}

def @func_8713() -> Tensor[(12, 5, 4), float64] {
  %16 = fn () -> Tensor[(12, 5, 4), float64] {
    %15 = @func_8511() /* ty=(Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), bool], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) */;
    %15.2
  };
  %16() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_4878(%var_4876: Tensor[(4, 10, 8), uint64], %var_4877: Tensor[(4, 10, 8), uint64]) -> (Tensor[(4, 10, 8), bool],) {
  %22 = fn (%var_4862: Tensor[(4, 10, 8), uint64], %var_4863: Tensor[(4, 10, 8), uint64]) -> (Tensor[(4, 10, 8), bool],) {
    %17 = cast(%var_4863, dtype="bool") /* ty=Tensor[(4, 10, 8), bool] */;
    %18 = shape_of(%var_4862, dtype="int32") /* ty=Tensor[(3), int32] */;
    %19 = cast(%var_4862, dtype="bool") /* ty=Tensor[(4, 10, 8), bool] */;
    %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %21 = equal(%19, %20) /* ty=Tensor[(4, 10, 8), bool] */;
    (%21,)
  };
  %22(%var_4876, %var_4877) /* ty=(Tensor[(4, 10, 8), bool],) */
}

def @func_10749() -> (Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) {
  %26 = fn () -> (Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) {
    %23 = @func_9474() /* ty=(Tensor[(2, 20), float32],) */;
    %24 = %23.0;
    %25 = @func_7326() /* ty=Tensor[(11, 3, 14), float64] */;
    (%24, %25)
  };
  %26() /* ty=(Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */
}

def @func_9324() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32]) {
  %31 = fn () -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32]) {
    %27 = @func_5528() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
    %28 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
    %29 = %27.1;
    %30 = %28.0;
    (%29, %30)
  };
  %31() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */
}

def @func_12258() -> (Tensor[(2, 20), float32],) {
  @func_12256() /* ty=(Tensor[(2, 20), float32],) */
}

def @func_8892() -> (Tensor[(12, 5, 4), float64],) {
  %32 = @func_6761() /* ty=Tensor[(12, 5, 4), float64] */;
  (%32,)
}

def @func_5793() -> Tensor[(11, 3, 14), float64] {
  @func_5791() /* ty=Tensor[(11, 3, 14), float64] */
}

def @func_3675(%var_3674: Tensor[(10, 2, 2), float32]) -> (Tensor[(10, 2, 2), float32], Tensor[(11, 3, 14), float64], Tensor[(462), float64]) {
  %38 = fn (%var_3637: Tensor[(10, 2, 2), float32]) -> (Tensor[(10, 2, 2), float32], Tensor[(11, 3, 14), float64], Tensor[(462), float64]) {
    %33 = cast(%var_3637, dtype="float32") /* ty=Tensor[(10, 2, 2), float32] */;
    %34 = cast(meta[relay.Constant][3] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
    %35 = reshape(%34, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
    %36 = log2(%33) /* ty=Tensor[(10, 2, 2), float32] */;
    %37 = @func_3266(%35) /* ty=Tensor[(11, 3, 14), float64] */;
    (%36, %37, meta[relay.Constant][3] /* ty=Tensor[(462), float64] */)
  };
  %38(%var_3674) /* ty=(Tensor[(10, 2, 2), float32], Tensor[(11, 3, 14), float64], Tensor[(462), float64]) */
}

def @func_8977(%var_8976: Tensor[(12, 5, 4), float64]) -> (Tensor[(12, 5, 4), uint64], Tensor[(12, 5, 4), float64]) {
  %46 = fn (%var_8937: Tensor[(12, 5, 4), float64]) -> (Tensor[(12, 5, 4), uint64], Tensor[(12, 5, 4), float64]) {
    %39 = @func_8712() /* ty=Tensor[(12, 5, 4), float64] */;
    %40 = cast(%var_8937, dtype="uint64") /* ty=Tensor[(12, 5, 4), uint64] */;
    %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
    %42 = cast(%39, dtype="uint64") /* ty=Tensor[(12, 5, 4), uint64] */;
    %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %44 = minimum(%42, %43) /* ty=Tensor[(12, 5, 4), uint64] */;
    %45 = @func_5379() /* ty=Tensor[(12, 5, 4), float64] */;
    (%44, %45)
  };
  %46(%var_8976) /* ty=(Tensor[(12, 5, 4), uint64], Tensor[(12, 5, 4), float64]) */
}

def @func_9353() -> Tensor[(12, 5, 4), uint8] {
  %56 = fn () -> Tensor[(12, 5, 4), uint8] {
    %47 = @func_6299() /* ty=Tensor[(12, 5, 4), float64] */;
    %48 = cast(%47, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
    %49 = reshape(%48, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float32] */;
    %50 = @func_6997(%49) /* ty=(Tensor[(12, 5, 4), float32],) */;
    %51 = %50.0;
    %52 = cast(%47, dtype="uint8") /* ty=Tensor[(12, 5, 4), uint8] */;
    %53 = shape_of(%51, dtype="int32") /* ty=Tensor[(3), int32] */;
    %54 = cast(%51, dtype="uint8") /* ty=Tensor[(12, 5, 4), uint8] */;
    %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    bitwise_and(%54, %55) /* ty=Tensor[(12, 5, 4), uint8] */
  };
  %56() /* ty=Tensor[(12, 5, 4), uint8] */
}

def @func_8469() -> (Tensor[(2, 20), float32],) {
  @func_8467() /* ty=(Tensor[(2, 20), float32],) */
}

def @func_5735() -> (Tensor[(2, 20), float32],) {
  %57 = @func_5430() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %58 = %57.0;
  (%58,)
}

def @func_9085(%var_9083: Tensor[(700), float64]) -> (float64, Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32], Tensor[(12, 5, 4), float32]) {
  @func_9082(%var_9083) /* ty=(float64, Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32], Tensor[(12, 5, 4), float32]) */
}

def @func_5139() -> (Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) {
  @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */
}

def @func_9994() -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), uint8], Tensor[(12, 5, 4), float64]) {
  %67 = fn () -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), uint8], Tensor[(12, 5, 4), float64]) {
    %59 = @func_9352() /* ty=Tensor[(12, 5, 4), uint8] */;
    %60 = cast(%59, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
    %61 = reshape(%60, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
    %62 = @func_8975(%61) /* ty=(Tensor[(12, 5, 4), uint64], Tensor[(12, 5, 4), float64]) */;
    %63 = %62.1;
    %64 = cast(%63, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
    %65 = @func_8911() /* ty=Tensor[(12, 5, 4), float64] */;
    %66 = atanh(%64) /* ty=Tensor[(12, 5, 4), float64] */;
    (%65, %59, %66)
  };
  %67() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), uint8], Tensor[(12, 5, 4), float64]) */
}

def @func_12913(%var_12911: Tensor[(240), float32]) -> (Tensor[(2, 20), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], float64, Tensor[(240), float32]) {
  @func_12910(%var_12911) /* ty=(Tensor[(2, 20), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], float64, Tensor[(240), float32]) */
}

def @func_10935() -> (Tensor[(11, 3, 14), float64],) {
  @func_10933() /* ty=(Tensor[(11, 3, 14), float64],) */
}

def @func_10454() -> (Tensor[(12, 5, 4), bool], Tensor[(12, 5, 4), bool], Tensor[(11, 3, 14), float64]) {
  %80 = fn () -> (Tensor[(12, 5, 4), bool], Tensor[(12, 5, 4), bool], Tensor[(11, 3, 14), float64]) {
    %68 = @func_6794() /* ty=(Tensor[(12, 5, 4), float32],) */;
    %69 = %68.0;
    %70 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 5, 4), float32] */, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
    %71 = shape_of(%69, dtype="int32") /* ty=Tensor[(3), int32] */;
    %72 = cast(%69, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
    %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %74 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 5, 4), float32] */, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
    %75 = reshape(%74, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
    %76 = @func_6984() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64]) */;
    %77 = greater(%72, %73) /* ty=Tensor[(12, 5, 4), bool] */;
    %78 = @func_9609(%75) /* ty=Tensor[(12, 5, 4), bool] */;
    %79 = %76.1;
    (%77, %78, %79)
  };
  %80() /* ty=(Tensor[(12, 5, 4), bool], Tensor[(12, 5, 4), bool], Tensor[(11, 3, 14), float64]) */
}

def @func_11036() -> (Tensor[(2, 20), float32], Tensor[(168, 4), int64]) {
  @func_11034() /* ty=(Tensor[(2, 20), float32], Tensor[(168, 4), int64]) */
}

def @func_11680() -> (Tensor[(2, 20), float32],) {
  @func_11678() /* ty=(Tensor[(2, 20), float32],) */
}

def @func_9896(%var_9881: Tensor[(2, 20), float32]) -> Tensor[(2, 20), int32] {
  %81 = @func_9503() /* ty=(Tensor[(2, 20), float32],) */;
  %82 = %81.0;
  %83 = cast(%var_9881, dtype="int32") /* ty=Tensor[(2, 20), int32] */;
  %84 = shape_of(%82, dtype="int32") /* ty=Tensor[(2), int32] */;
  %85 = cast(%82, dtype="int32") /* ty=Tensor[(2, 20), int32] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  add(%85, %86) /* ty=Tensor[(2, 20), int32] */
}

def @func_9476() -> (Tensor[(2, 20), float32],) {
  @func_9474() /* ty=(Tensor[(2, 20), float32],) */
}

def @func_6160() -> Tensor[(12, 5, 4), float64] {
  @func_6158() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_5737() -> (Tensor[(2, 20), float32],) {
  @func_5735() /* ty=(Tensor[(2, 20), float32],) */
}

def @func_5559() -> (Tensor[(12, 5, 4), float64],) {
  %88 = fn () -> (Tensor[(12, 5, 4), float64],) {
    %87 = @func_5379() /* ty=Tensor[(12, 5, 4), float64] */;
    (%87,)
  };
  %88() /* ty=(Tensor[(12, 5, 4), float64],) */
}

def @func_10911(%var_10909: Tensor[(11, 6, 9), int8], %var_10910: Tensor[(11, 6, 9), int8]) -> (Tensor[(11, 6, 9), int8], Tensor[(1120), float64], Tensor[(240), float64]) {
  @func_10907(%var_10909, %var_10910) /* ty=(Tensor[(11, 6, 9), int8], Tensor[(1120), float64], Tensor[(240), float64]) */
}

def @func_9419(%var_9417: float32) -> Tensor[(7, 6, 11), float32] {
  @func_9416(%var_9417) /* ty=Tensor[(7, 6, 11), float32] */
}

def @func_6783() -> Tensor[(2, 20), float32] {
  @func_6781() /* ty=Tensor[(2, 20), float32] */
}

def @func_6781() -> Tensor[(2, 20), float32] {
  %89 = @func_5430() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %89.1
}

def @func_5672() -> Tensor[(12, 5, 4), float32] {
  %90 = @func_4900() /* ty=Tensor[(12, 5, 4), float32] */;
  %91 = cast(%90, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  sinh(%91) /* ty=Tensor[(12, 5, 4), float32] */
}

def @func_4901() -> Tensor[(12, 5, 4), float32] {
  %93 = fn () -> Tensor[(12, 5, 4), float32] {
    %92 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 5, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
    asin(%92) /* ty=Tensor[(12, 5, 4), float32] */
  };
  %93() /* ty=Tensor[(12, 5, 4), float32] */
}

def @func_9866() -> Tensor[(10, 7, 16), float64] {
  %95 = fn () -> Tensor[(10, 7, 16), float64] {
    %94 = cast(meta[relay.Constant][6] /* ty=Tensor[(10, 7, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 7, 16), float64] */;
    cosh(%94) /* ty=Tensor[(10, 7, 16), float64] */
  };
  %95() /* ty=Tensor[(10, 7, 16), float64] */
}

def @func_6794() -> (Tensor[(12, 5, 4), float32],) {
  %96 = @func_5672() /* ty=Tensor[(12, 5, 4), float32] */;
  (%96,)
}

def @func_7227() -> (Tensor[(2, 20), float32],) {
  %97 = @func_6781() /* ty=Tensor[(2, 20), float32] */;
  (%97,)
}

def @func_2077(%var_2074: Tensor[(16, 14, 13), bool], %var_2075: Tensor[(16, 14, 13), bool], %var_2076: Tensor[(180), float32]) -> (Tensor[(16, 14, 13), bool], Tensor[(6, 16, 7), float32], Tensor[(672), float32], Tensor[(6, 16, 7), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) {
  %113 = fn (%var_2036: Tensor[(16, 14, 13), bool], %var_2037: Tensor[(16, 14, 13), bool], %var_2065: Tensor[(180), float32]) -> (Tensor[(16, 14, 13), bool], Tensor[(6, 16, 7), float32], Tensor[(672), float32], Tensor[(6, 16, 7), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) {
    %98 = cast(%var_2037, dtype="bool") /* ty=Tensor[(16, 14, 13), bool] */;
    %99 = shape_of(%var_2036, dtype="int32") /* ty=Tensor[(3), int32] */;
    %100 = cast(%var_2036, dtype="bool") /* ty=Tensor[(16, 14, 13), bool] */;
    %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %102 = cast(meta[relay.Constant][7] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
    %103 = reshape(%102, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float32] */;
    %104 = cast(meta[relay.Constant][7] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
    %105 = reshape(%104, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float32] */;
    %106 = cast(%var_2065, dtype="float32") /* ty=Tensor[(180), float32] */;
    %107 = reshape(%106, newshape=[12, 3, 5]) /* ty=Tensor[(12, 3, 5), float32] */;
    %108 = @func_528(%107) /* ty=(Tensor[(12, 3, 5), float32],) */;
    %109 = logical_and(%100, %101) /* ty=Tensor[(16, 14, 13), bool] */;
    %110 = @func_1031(%103) /* ty=Tensor[(6, 16, 7), float32] */;
    %111 = @func_1031(%105) /* ty=Tensor[(6, 16, 7), float32] */;
    %112 = %108.0;
    (%109, %110, meta[relay.Constant][7] /* ty=Tensor[(672), float32] */, %111, %112, %var_2065)
  };
  %113(%var_2074, %var_2075, %var_2076) /* ty=(Tensor[(16, 14, 13), bool], Tensor[(6, 16, 7), float32], Tensor[(672), float32], Tensor[(6, 16, 7), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) */
}

def @func_12042() -> (Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) {
  %118 = fn () -> (Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) {
    %114 = @func_7769() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) */;
    %115 = @func_11621() /* ty=(Tensor[(12, 5, 4), float64],) */;
    %116 = %114.1;
    %117 = %115.0;
    (%116, %117)
  };
  %118() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) */
}

def @func_8332() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float64]) {
  %124 = fn () -> (Tensor[(2, 20), float32], Tensor[(2, 20), float64]) {
    %119 = @func_6528() /* ty=Tensor[(2, 20), float32] */;
    %120 = cast(%119, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
    %121 = reshape(%120, newshape=[2, 20]) /* ty=Tensor[(2, 20), float32] */;
    %122 = @func_7563(%121) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(2, 20), bool], Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32], Tensor[(2, 20), float64]) */;
    %123 = %122.5;
    (%119, %123)
  };
  %124() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float64]) */
}

def @func_9954() -> (Tensor[(2, 20), int64], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), float64], Tensor[(11, 3, 14), float64]) {
  @func_9952() /* ty=(Tensor[(2, 20), int64], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), float64], Tensor[(11, 3, 14), float64]) */
}

def @func_8548() -> (Tensor[(12, 5, 4), float64],) {
  @func_8546() /* ty=(Tensor[(12, 5, 4), float64],) */
}

def @func_3269(%var_3267: Tensor[(11, 3, 14), float64]) -> Tensor[(11, 3, 14), float64] {
  @func_3266(%var_3267) /* ty=Tensor[(11, 3, 14), float64] */
}

def @func_11295(%var_11288: Tensor[(16, 15, 1), float32]) -> Tensor[(16, 15, 1), float32] {
  %125 = cast(%var_11288, dtype="float32") /* ty=Tensor[(16, 15, 1), float32] */;
  asin(%125) /* ty=Tensor[(16, 15, 1), float32] */
}

def @func_11532() -> Tensor[(2, 20), float32] {
  %127 = fn () -> Tensor[(2, 20), float32] {
    %126 = @func_7227() /* ty=(Tensor[(2, 20), float32],) */;
    %126.0
  };
  %127() /* ty=Tensor[(2, 20), float32] */
}

def @func_7771() -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) {
  @func_7769() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) */
}

def @func_9082(%var_9052: Tensor[(700), float64]) -> (float64, Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32], Tensor[(12, 5, 4), float32]) {
  %128 = cast(%var_9052, dtype="float64") /* ty=Tensor[(700), float64] */;
  %129 = cast(meta[relay.Constant][8] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %130 = cast(meta[relay.Constant][9] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %131 = reshape(%128, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float64] */;
  %132 = reshape(%129, newshape=[231, 2]) /* ty=Tensor[(231, 2), float64] */;
  %133 = reshape(%130, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %134 = @func_4115(%131, %132, %133) /* ty=(Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(5, 10, 14), int64], Tensor[(6, 16, 7), float32], Tensor[(2912), bool], float64, Tensor[(48), float32], Tensor[(192), float64]) */;
  %135 = @func_5185() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %136 = %135.0;
  %137 = cast(%136, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  %138 = %134.9;
  %139 = acosh(%137) /* ty=Tensor[(12, 5, 4), float32] */;
  (%138, %var_9052, meta[relay.Constant][8] /* ty=Tensor[(462), float64] */, meta[relay.Constant][9] /* ty=Tensor[(180), float32] */, %139)
}

def @func_11623() -> (Tensor[(12, 5, 4), float64],) {
  @func_11621() /* ty=(Tensor[(12, 5, 4), float64],) */
}

def @func_4997(%var_4994: Tensor[(15, 2, 13), int32], %var_4995: Tensor[(15, 2, 13), int32], %var_4996: Tensor[(180), float32]) -> (Tensor[(15, 2, 13), int32], Tensor[(12, 5, 4), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) {
  @func_4992(%var_4994, %var_4995, %var_4996) /* ty=(Tensor[(15, 2, 13), int32], Tensor[(12, 5, 4), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) */
}

def @func_5964(%var_5942: Tensor[(180), float32], %var_5950: Tensor[(12, 5, 4), float64]) -> (Tensor[(6, 16, 7), float32], Tensor[(180), float32], Tensor[(12, 5, 4), bool], Tensor[(2912), float64]) {
  %140 = cast(meta[relay.Constant][10] /* ty=Tensor[(2912), bool] */, dtype="bool") /* ty=Tensor[(2912), bool] */;
  %141 = cast(meta[relay.Constant][10] /* ty=Tensor[(2912), bool] */, dtype="bool") /* ty=Tensor[(2912), bool] */;
  %142 = cast(%var_5942, dtype="float32") /* ty=Tensor[(180), float32] */;
  %143 = reshape(%140, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), bool] */;
  %144 = reshape(%141, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), bool] */;
  %145 = reshape(%142, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %146 = @func_2073(%143, %144, %145) /* ty=(Tensor[(16, 14, 13), bool], Tensor[(6, 16, 7), float32], Tensor[(672), float32], Tensor[(6, 16, 7), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) */;
  %147 = @func_5379() /* ty=Tensor[(12, 5, 4), float64] */;
  %148 = cast(%var_5950, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
  %149 = shape_of(%147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%147, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %152 = cast(meta[relay.Constant][10] /* ty=Tensor[(2912), bool] */, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %153 = %146.1;
  %154 = logical_or(%150, %151) /* ty=Tensor[(12, 5, 4), bool] */;
  %155 = rsqrt(%152) /* ty=Tensor[(2912), float64] */;
  (%153, %var_5942, %154, %155)
}

def @func_6708() -> (Tensor[(12, 5, 4), float32],) {
  %158 = fn () -> (Tensor[(12, 5, 4), float32],) {
    %156 = @func_5185() /* ty=(Tensor[(12, 5, 4), float32],) */;
    %157 = %156.0;
    (%157,)
  };
  %158() /* ty=(Tensor[(12, 5, 4), float32],) */
}

def @func_7106(%var_7104: Tensor[(180), float32]) -> (Tensor[(78), float32], Tensor[(12, 5, 4), float64], Tensor[(78), float32], Tensor[(12, 5, 4), float64], Tensor[(2912), float64], Tensor[(180), float32]) {
  @func_7103(%var_7104) /* ty=(Tensor[(78), float32], Tensor[(12, 5, 4), float64], Tensor[(78), float32], Tensor[(12, 5, 4), float64], Tensor[(2912), float64], Tensor[(180), float32]) */
}

def @func_12211() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32]) {
  @func_12209() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */
}

def @func_12488() -> (Tensor[(12, 5, 4), float64],) {
  @func_12486() /* ty=(Tensor[(12, 5, 4), float64],) */
}

def @func_6805() -> Tensor[(12, 5, 4), float64] {
  %160 = fn () -> Tensor[(12, 5, 4), float64] {
    %159 = @func_6438() /* ty=(Tensor[(12, 5, 4), float64],) */;
    %159.0
  };
  %160() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_7724() -> (Tensor[(12, 5, 4), float64],) {
  @func_7722() /* ty=(Tensor[(12, 5, 4), float64],) */
}

def @func_2735(%var_2730: Tensor[(10, 14, 8), float64], %var_2731: Tensor[(10, 14, 8), float64]) -> (Tensor[(10, 14, 8), float64],) {
  %161 = cast(%var_2731, dtype="float64") /* ty=Tensor[(10, 14, 8), float64] */;
  %162 = shape_of(%var_2730, dtype="int32") /* ty=Tensor[(3), int32] */;
  %163 = cast(%var_2730, dtype="float64") /* ty=Tensor[(10, 14, 8), float64] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %165 = floor_divide(%163, %164) /* ty=Tensor[(10, 14, 8), float64] */;
  (%165,)
}

def @func_5674() -> Tensor[(12, 5, 4), float32] {
  @func_5672() /* ty=Tensor[(12, 5, 4), float32] */
}

def @func_6635() -> Tensor[(12, 5, 4), float64] {
  @func_6633() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_11730(%var_11728: uint8, %var_11729: Tensor[(14, 16, 2), uint8]) -> (Tensor[(14, 16, 2), bool], Tensor[(2, 20), float32]) {
  @func_11726(%var_11728, %var_11729) /* ty=(Tensor[(14, 16, 2), bool], Tensor[(2, 20), float32]) */
}

def @func_9217() -> (Tensor[(12, 3, 5), float32], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) {
  %171 = fn () -> (Tensor[(12, 3, 5), float32], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) {
    %166 = @func_6872() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32], Tensor[(78), float64], float64, Tensor[(288, 4), float64], Tensor[(168, 4), float32]) */;
    %167 = @func_7722() /* ty=(Tensor[(12, 5, 4), float64],) */;
    %168 = %166.2;
    %169 = %167.0;
    %170 = @func_8445() /* ty=Tensor[(2, 20), float32] */;
    (%168, %169, %170)
  };
  %171() /* ty=(Tensor[(12, 3, 5), float32], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) */
}

def @func_13182() -> (Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32]) {
  @func_13180() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32]) */
}

def @func_12441(%var_12440: Tensor[(594), int8]) -> (Tensor[(12, 5, 4), float64], Tensor[(2, 20), int8], Tensor[(40), float32], Tensor[(11, 3, 14), float64], Tensor[(4, 6, 2), float32], Tensor[(48), float32], Tensor[(12, 5, 4), float32], Tensor[(11, 6, 9), int8], Tensor[(594), int8]) {
  %189 = fn (%var_12427: Tensor[(594), int8]) -> (Tensor[(12, 5, 4), float64], Tensor[(2, 20), int8], Tensor[(40), float32], Tensor[(11, 3, 14), float64], Tensor[(4, 6, 2), float32], Tensor[(48), float32], Tensor[(12, 5, 4), float32], Tensor[(11, 6, 9), int8], Tensor[(594), int8]) {
    %172 = @func_9757() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64]) */;
    %173 = cast(meta[relay.Constant][11] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
    %174 = reshape(%173, newshape=[2, 20]) /* ty=Tensor[(2, 20), float32] */;
    %175 = cast(meta[relay.Constant][12] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %176 = reshape(%175, newshape=[4, 6, 2]) /* ty=Tensor[(4, 6, 2), float32] */;
    %177 = @func_7677() /* ty=(Tensor[(2, 20), float32], Tensor[(168, 4), int64], Tensor[(12, 5, 4), float32], Tensor[(168, 4), float32]) */;
    %178 = cast(%var_12427, dtype="int8") /* ty=Tensor[(594), int8] */;
    %179 = cast(%var_12427, dtype="int8") /* ty=Tensor[(594), int8] */;
    %180 = reshape(%178, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), int8] */;
    %181 = reshape(%179, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), int8] */;
    %182 = @func_10907(%180, %181) /* ty=(Tensor[(11, 6, 9), int8], Tensor[(1120), float64], Tensor[(240), float64]) */;
    %183 = %172.2;
    %184 = @func_5607(%174) /* ty=Tensor[(2, 20), int8] */;
    %185 = @func_11336() /* ty=Tensor[(11, 3, 14), float64] */;
    %186 = @func_9649(%176) /* ty=Tensor[(4, 6, 2), float32] */;
    %187 = %177.2;
    %188 = %182.0;
    (%183, %184, meta[relay.Constant][11] /* ty=Tensor[(40), float32] */, %185, %186, meta[relay.Constant][12] /* ty=Tensor[(48), float32] */, %187, %188, %var_12427)
  };
  %189(%var_12440) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(2, 20), int8], Tensor[(40), float32], Tensor[(11, 3, 14), float64], Tensor[(4, 6, 2), float32], Tensor[(48), float32], Tensor[(12, 5, 4), float32], Tensor[(11, 6, 9), int8], Tensor[(594), int8]) */
}

def @func_10955() -> (Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), float64]) {
  %190 = @func_10933() /* ty=(Tensor[(11, 3, 14), float64],) */;
  %191 = @func_9952() /* ty=(Tensor[(2, 20), int64], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), float64], Tensor[(11, 3, 14), float64]) */;
  %192 = %190.0;
  %193 = %191.2;
  (%192, %193)
}

def @func_12309() -> (Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32]) {
  %194 = @func_12041() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) */;
  %195 = @func_5430() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %196 = %194.0;
  %197 = %195.0;
  (%196, %197)
}

def @func_6985() -> (Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64]) {
  %200 = fn () -> (Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64]) {
    %198 = @func_5379() /* ty=Tensor[(12, 5, 4), float64] */;
    %199 = @func_5791() /* ty=Tensor[(11, 3, 14), float64] */;
    (%198, %199)
  };
  %200() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64]) */
}

def @func_11932() -> (Tensor[(12, 5, 4), float64], Tensor[(462), float64], Tensor[(40), float32], Tensor[(2, 20), float32]) {
  %211 = fn () -> (Tensor[(12, 5, 4), float64], Tensor[(462), float64], Tensor[(40), float32], Tensor[(2, 20), float32]) {
    %201 = @func_8663() /* ty=(Tensor[(12, 5, 4), float64],) */;
    %202 = cast(meta[relay.Constant][13] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
    %203 = reshape(%202, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float32] */;
    %204 = @func_3673(%203) /* ty=(Tensor[(10, 2, 2), float32], Tensor[(11, 3, 14), float64], Tensor[(462), float64]) */;
    %205 = %201.0;
    %206 = cast(%205, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
    %207 = reshape(%206, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
    %208 = @func_10177(%207) /* ty=(Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), bool], Tensor[(180), float32], Tensor[(1120), float64], Tensor[(1120), float64]) */;
    %209 = %204.2;
    %210 = %208.0;
    (%205, %209, meta[relay.Constant][13] /* ty=Tensor[(40), float32] */, %210)
  };
  %211() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(462), float64], Tensor[(40), float32], Tensor[(2, 20), float32]) */
}

def @func_12854() -> Tensor[(2, 20), float32] {
  %213 = fn () -> Tensor[(2, 20), float32] {
    %212 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
    %212.0
  };
  %213() /* ty=Tensor[(2, 20), float32] */
}

def @func_11034() -> (Tensor[(2, 20), float32], Tensor[(168, 4), int64]) {
  %214 = @func_7677() /* ty=(Tensor[(2, 20), float32], Tensor[(168, 4), int64], Tensor[(12, 5, 4), float32], Tensor[(168, 4), float32]) */;
  %215 = @func_6528() /* ty=Tensor[(2, 20), float32] */;
  %216 = %214.1;
  (%215, %216)
}

def @func_5856() -> (Tensor[(11, 3, 14), float64],) {
  %217 = @func_5791() /* ty=Tensor[(11, 3, 14), float64] */;
  (%217,)
}

def @func_10907(%var_10866: Tensor[(11, 6, 9), int8], %var_10867: Tensor[(11, 6, 9), int8]) -> (Tensor[(11, 6, 9), int8], Tensor[(1120), float64], Tensor[(240), float64]) {
  %218 = cast(%var_10867, dtype="int8") /* ty=Tensor[(11, 6, 9), int8] */;
  %219 = shape_of(%var_10866, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(%var_10866, dtype="int8") /* ty=Tensor[(11, 6, 9), int8] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %222 = cast(meta[relay.Constant][14] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %223 = reshape(%222, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %224 = @func_10177(%223) /* ty=(Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), bool], Tensor[(180), float32], Tensor[(1120), float64], Tensor[(1120), float64]) */;
  %225 = right_shift(%220, %221) /* ty=Tensor[(11, 6, 9), int8] */;
  %226 = %224.4;
  (%225, %226, meta[relay.Constant][14] /* ty=Tensor[(240), float64] */)
}

def @func_6529() -> Tensor[(2, 20), float32] {
  %228 = fn () -> Tensor[(2, 20), float32] {
    %227 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
    %227.0
  };
  %228() /* ty=Tensor[(2, 20), float32] */
}

def @func_7229() -> (Tensor[(2, 20), float32],) {
  @func_7227() /* ty=(Tensor[(2, 20), float32],) */
}

def @func_5468(%var_5467: Tensor[(11, 4, 14), float32]) -> Tensor[(11, 4, 14), bool] {
  %237 = fn (%var_5447: Tensor[(11, 4, 14), float32]) -> Tensor[(11, 4, 14), bool] {
    %229 = cast(%var_5447, dtype="float32") /* ty=Tensor[(11, 4, 14), float32] */;
    %230 = asinh(%229) /* ty=Tensor[(11, 4, 14), float32] */;
    %231 = cast(%230, dtype="float32") /* ty=Tensor[(11, 4, 14), float32] */;
    %232 = atan(%231) /* ty=Tensor[(11, 4, 14), float32] */;
    %233 = cast(%230, dtype="bool") /* ty=Tensor[(11, 4, 14), bool] */;
    %234 = shape_of(%232, dtype="int32") /* ty=Tensor[(3), int32] */;
    %235 = cast(%232, dtype="bool") /* ty=Tensor[(11, 4, 14), bool] */;
    %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%235, %236) /* ty=Tensor[(11, 4, 14), bool] */
  };
  %237(%var_5467) /* ty=Tensor[(11, 4, 14), bool] */
}

def @func_7377() -> (Tensor[(2, 20), float32],) {
  %240 = fn () -> (Tensor[(2, 20), float32],) {
    %238 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
    %239 = %238.0;
    (%239,)
  };
  %240() /* ty=(Tensor[(2, 20), float32],) */
}

def @func_10387() -> Tensor[(12, 5, 4), float64] {
  %241 = fn () -> Tensor[(12, 5, 4), float64] {
    @func_6633() /* ty=Tensor[(12, 5, 4), float64] */
  };
  %241() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_10565() -> (Tensor[(2, 20), float32],) {
  %242 = @func_5735() /* ty=(Tensor[(2, 20), float32],) */;
  %243 = %242.0;
  (%243,)
}

def @func_6504(%var_6503: Tensor[(336, 2), float32]) -> (Tensor[(6, 16, 7), float32], Tensor[(336, 2), float32], Tensor[(12, 5, 4), float32], Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32]) {
  %256 = fn (%var_6478: Tensor[(336, 2), float32]) -> (Tensor[(6, 16, 7), float32], Tensor[(336, 2), float32], Tensor[(12, 5, 4), float32], Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32]) {
    %244 = cast(%var_6478, dtype="float32") /* ty=Tensor[(336, 2), float32] */;
    %245 = reshape(%244, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float32] */;
    %246 = @func_5672() /* ty=Tensor[(12, 5, 4), float32] */;
    %247 = cast(%246, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
    %248 = cast(meta[relay.Constant][15] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
    %249 = cast(meta[relay.Constant][16] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %250 = reshape(%248, newshape=[1, 462]) /* ty=Tensor[(1, 462), float64] */;
    %251 = reshape(%249, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %252 = @func_5487(%250, %251) /* ty=(Tensor[(2, 20), float32], Tensor[(48), float32], Tensor[(700), float64], Tensor[(1, 462), float64], Tensor[(180), float32]) */;
    %253 = @func_1031(%245) /* ty=Tensor[(6, 16, 7), float32] */;
    %254 = erf(%247) /* ty=Tensor[(12, 5, 4), float32] */;
    %255 = %252.2;
    (%253, %var_6478, %254, %255, meta[relay.Constant][15] /* ty=Tensor[(462), float64] */, meta[relay.Constant][16] /* ty=Tensor[(180), float32] */)
  };
  %256(%var_6503) /* ty=(Tensor[(6, 16, 7), float32], Tensor[(336, 2), float32], Tensor[(12, 5, 4), float32], Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32]) */
}

def @func_9554() -> (Tensor[(12, 5, 4), float32],) {
  @func_9552() /* ty=(Tensor[(12, 5, 4), float32],) */
}

def @func_6076(%var_6075: Tensor[(224), float32]) -> (Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(2, 20), float32], Tensor[(16, 1, 14), float32], Tensor[(224), float32]) {
  %265 = fn (%var_6046: Tensor[(224), float32]) -> (Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(2, 20), float32], Tensor[(16, 1, 14), float32], Tensor[(224), float32]) {
    %257 = @func_5528() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
    %258 = @func_5528() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
    %259 = cast(%var_6046, dtype="float32") /* ty=Tensor[(224), float32] */;
    %260 = reshape(%259, newshape=[16, 1, 14]) /* ty=Tensor[(16, 1, 14), float32] */;
    %261 = @func_5649() /* ty=Tensor[(12, 5, 4), float64] */;
    %262 = %257.1;
    %263 = %258.1;
    %264 = @func_4688(%260) /* ty=Tensor[(16, 1, 14), float32] */;
    (%261, %262, %263, %264, %var_6046)
  };
  %265(%var_6075) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(2, 20), float32], Tensor[(16, 1, 14), float32], Tensor[(224), float32]) */
}

def @func_8734() -> Tensor[(12, 3, 5), float32] {
  %266 = @func_6872() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32], Tensor[(78), float64], float64, Tensor[(288, 4), float64], Tensor[(168, 4), float32]) */;
  %266.2
}

def @func_6405(%var_6404: Tensor[(11, 3, 14), float64]) -> (Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32]) {
  %275 = fn (%var_6369: Tensor[(11, 3, 14), float64]) -> (Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32]) {
    %267 = @func_5791() /* ty=Tensor[(11, 3, 14), float64] */;
    %268 = cast(%var_6369, dtype="bool") /* ty=Tensor[(11, 3, 14), bool] */;
    %269 = shape_of(%267, dtype="int32") /* ty=Tensor[(3), int32] */;
    %270 = cast(%267, dtype="bool") /* ty=Tensor[(11, 3, 14), bool] */;
    %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %272 = cast(%var_6369, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
    %273 = logical_or(%270, %271) /* ty=Tensor[(11, 3, 14), bool] */;
    %274 = acos(%272) /* ty=Tensor[(11, 3, 14), float32] */;
    (%273, %274)
  };
  %275(%var_6404) /* ty=(Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32]) */
}

def @func_1672(%var_1668: float64, %var_1669: Tensor[(1, 16, 12), float64], %var_1670: Tensor[(180), float32], %var_1671: Tensor[(672), float32]) -> (Tensor[(1, 16, 12), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(6, 16, 7), float32], Tensor[(672), float32]) {
  @func_1666(%var_1668, %var_1669, %var_1670, %var_1671) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(6, 16, 7), float32], Tensor[(672), float32]) */
}

def @func_9527(%var_9525: Tensor[(15, 13, 16), uint32], %var_9526: Tensor[(15, 13, 16), uint32]) -> Tensor[(15, 13, 16), uint32] {
  @func_9523(%var_9525, %var_9526) /* ty=Tensor[(15, 13, 16), uint32] */
}

def @func_10335(%var_10333: Tensor[(224), float32]) -> (Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32], Tensor[(224), float32]) {
  @func_10332(%var_10333) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32], Tensor[(224), float32]) */
}

def @func_8418() -> (Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), float64]) {
  %279 = fn () -> (Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), float64]) {
    %276 = @func_5856() /* ty=(Tensor[(11, 3, 14), float64],) */;
    %277 = %276.0;
    %278 = @func_7326() /* ty=Tensor[(11, 3, 14), float64] */;
    (%277, %278)
  };
  %279() /* ty=(Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), float64]) */
}

def @func_5607(%var_5587: Tensor[(2, 20), float32]) -> Tensor[(2, 20), int8] {
  %280 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %281 = %280.2;
  %282 = cast(%281, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %283 = erf(%282) /* ty=Tensor[(2, 20), float32] */;
  %284 = cast(%var_5587, dtype="int8") /* ty=Tensor[(2, 20), int8] */;
  %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(2), int32] */;
  %286 = cast(%283, dtype="int8") /* ty=Tensor[(2, 20), int8] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  bitwise_and(%286, %287) /* ty=Tensor[(2, 20), int8] */
}

def @func_8257(%var_8227: Tensor[(4, 8, 3), float64]) -> (Tensor[(4, 8, 3), float64], Tensor[(12, 5, 4), float32]) {
  %288 = cast(%var_8227, dtype="float64") /* ty=Tensor[(4, 8, 3), float64] */;
  %289 = @func_7769() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) */;
  %290 = acos(%288) /* ty=Tensor[(4, 8, 3), float64] */;
  %291 = %289.1;
  (%290, %291)
}

def @func_12194() -> (Tensor[(12, 5, 4), float64], Tensor[(180), float32], Tensor[(1, 192), float64], Tensor[(180), float32], Tensor[(672), float32]) {
  %302 = fn () -> (Tensor[(12, 5, 4), float64], Tensor[(180), float32], Tensor[(1, 192), float64], Tensor[(180), float32], Tensor[(672), float32]) {
    %292 = @func_6872() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32], Tensor[(78), float64], float64, Tensor[(288, 4), float64], Tensor[(168, 4), float32]) */;
    %293 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 192), float64] */, dtype="float64") /* ty=Tensor[(1, 192), float64] */;
    %294 = cast(meta[relay.Constant][18] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %295 = cast(meta[relay.Constant][19] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
    %296 = reshape(%293, newshape=[192]) /* ty=Tensor[(192), float64] */;
    %297 = reshape(%294, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %298 = reshape(%295, newshape=[672]) /* ty=Tensor[(672), float32] */;
    %299 = @func_5997(%296, %297, %298) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(6, 16, 7), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32], Tensor[(2, 20), float32]) */;
    %300 = %292.1;
    %301 = %299.4;
    (%300, %301, meta[relay.Constant][17] /* ty=Tensor[(1, 192), float64] */, meta[relay.Constant][18] /* ty=Tensor[(180), float32] */, meta[relay.Constant][19] /* ty=Tensor[(672), float32] */)
  };
  %302() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(180), float32], Tensor[(1, 192), float64], Tensor[(180), float32], Tensor[(672), float32]) */
}

def @func_12339() -> Tensor[(2, 20), float32] {
  %304 = fn () -> Tensor[(2, 20), float32] {
    %303 = @func_11678() /* ty=(Tensor[(2, 20), float32],) */;
    %303.0
  };
  %304() /* ty=Tensor[(2, 20), float32] */
}

def @func_5211() -> Tensor[(12, 5, 4), float64] {
  %305 = @func_4900() /* ty=Tensor[(12, 5, 4), float32] */;
  %306 = cast(%305, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  rsqrt(%306) /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_6762() -> Tensor[(12, 5, 4), float64] {
  %307 = fn () -> Tensor[(12, 5, 4), float64] {
    @func_6299() /* ty=Tensor[(12, 5, 4), float64] */
  };
  %307() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_8260(%var_8258: Tensor[(4, 8, 3), float64]) -> (Tensor[(4, 8, 3), float64], Tensor[(12, 5, 4), float32]) {
  @func_8257(%var_8258) /* ty=(Tensor[(4, 8, 3), float64], Tensor[(12, 5, 4), float32]) */
}

def @func_5357(%var_5354: Tensor[(6, 30), float32], %var_5355: Tensor[(1152), float64], %var_5356: Tensor[(56, 12), float32]) -> (Tensor[(2, 20), bool], Tensor[(1, 16, 12), float64], float64, Tensor[(192), float64], Tensor[(6, 30), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(56, 12), bool], Tensor[(56, 12), bool], Tensor[(12, 5, 4), float32]) {
  %336 = fn (%var_5294: Tensor[(6, 30), float32], %var_5302: Tensor[(1152), float64], %var_5334: Tensor[(56, 12), float32]) -> (Tensor[(2, 20), bool], Tensor[(1, 16, 12), float64], float64, Tensor[(192), float64], Tensor[(6, 30), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(56, 12), bool], Tensor[(56, 12), bool], Tensor[(12, 5, 4), float32]) {
    %308 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
    %309 = cast(-4.44864f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %310 = cast(meta[relay.Constant][20] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
    %311 = cast(%var_5294, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
    %312 = cast(meta[relay.Constant][21] /* ty=Tensor[(56, 12), float32] */, dtype="float32") /* ty=Tensor[(56, 12), float32] */;
    %313 = reshape(%309, newshape=[]) /* ty=float64 */;
    %314 = reshape(%310, newshape=[1, 16, 12]) /* ty=Tensor[(1, 16, 12), float64] */;
    %315 = reshape(%311, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %316 = reshape(%312, newshape=[672]) /* ty=Tensor[(672), float32] */;
    %317 = @func_1666(%313, %314, %315, %316) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(6, 16, 7), float32], Tensor[(672), float32]) */;
    %318 = cast(%var_5302, dtype="float64") /* ty=Tensor[(1152), float64] */;
    %319 = reshape(%318, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
    %320 = cast(%var_5334, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
    %321 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(56, 12), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %322 = cast(meta[relay.Constant][21] /* ty=Tensor[(56, 12), float32] */, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
    %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %324 = cast(meta[relay.Constant][22] /* ty=Tensor[(56, 12), float32] */, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
    %325 = shape_of(%var_5334, dtype="int32") /* ty=Tensor[(2), int32] */;
    %326 = cast(%var_5334, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
    %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %328 = @func_5211() /* ty=Tensor[(12, 5, 4), float64] */;
    %329 = cast(%328, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
    %330 = %308.2;
    %331 = %317.0;
    %332 = @func_2114(%319) /* ty=Tensor[(12, 6, 16), float64] */;
    %333 = logical_or(%322, %323) /* ty=Tensor[(56, 12), bool] */;
    %334 = logical_and(%326, %327) /* ty=Tensor[(56, 12), bool] */;
    %335 = asinh(%329) /* ty=Tensor[(12, 5, 4), float32] */;
    (%330, %331, -4.44864f64 /* ty=float64 */, meta[relay.Constant][20] /* ty=Tensor[(192), float64] */, %var_5294, %332, %var_5302, %333, %334, %335)
  };
  %336(%var_5354, %var_5355, %var_5356) /* ty=(Tensor[(2, 20), bool], Tensor[(1, 16, 12), float64], float64, Tensor[(192), float64], Tensor[(6, 30), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(56, 12), bool], Tensor[(56, 12), bool], Tensor[(12, 5, 4), float32]) */
}

def @func_528(%var_519: Tensor[(12, 3, 5), float32]) -> (Tensor[(12, 3, 5), float32],) {
  %337 = cast(%var_519, dtype="float32") /* ty=Tensor[(12, 3, 5), float32] */;
  %338 = cosh(%337) /* ty=Tensor[(12, 3, 5), float32] */;
  (%338,)
}

def @func_9505() -> (Tensor[(2, 20), float32],) {
  @func_9503() /* ty=(Tensor[(2, 20), float32],) */
}

def @func_10080(%var_10077: Tensor[(2, 20), float32], %var_10078: Tensor[(672), float32], %var_10079: Tensor[(2, 20), float32]) -> (Tensor[(2, 20), uint16], Tensor[(2, 20), int32], Tensor[(6, 16, 7), bool], Tensor[(2, 20), bool]) {
  %364 = fn (%var_10016: Tensor[(2, 20), float32], %var_10041: Tensor[(672), float32], %var_10048: Tensor[(2, 20), float32]) -> (Tensor[(2, 20), uint16], Tensor[(2, 20), int32], Tensor[(6, 16, 7), bool], Tensor[(2, 20), bool]) {
    %339 = @func_9323() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
    %340 = %339.0;
    %341 = cast(%var_10016, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
    %342 = shape_of(%340, dtype="int32") /* ty=Tensor[(2), int32] */;
    %343 = cast(%340, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
    %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %345 = cast(%var_10048, dtype="int32") /* ty=Tensor[(2, 20), int32] */;
    %346 = shape_of(%var_10016, dtype="int32") /* ty=Tensor[(2), int32] */;
    %347 = cast(%var_10016, dtype="int32") /* ty=Tensor[(2, 20), int32] */;
    %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %349 = cast(%var_10041, dtype="float32") /* ty=Tensor[(672), float32] */;
    %350 = reshape(%349, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float32] */;
    %351 = @func_1031(%350) /* ty=Tensor[(6, 16, 7), float32] */;
    %352 = cast(%var_10041, dtype="bool") /* ty=Tensor[(672), bool] */;
    %353 = shape_of(%351, dtype="int32") /* ty=Tensor[(3), int32] */;
    %354 = cast(%351, dtype="bool") /* ty=Tensor[(6, 16, 7), bool] */;
    %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %356 = cast(%var_10016, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
    %357 = shape_of(%340, dtype="int32") /* ty=Tensor[(2), int32] */;
    %358 = cast(%340, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
    %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %360 = subtract(%343, %344) /* ty=Tensor[(2, 20), uint16] */;
    %361 = multiply(%347, %348) /* ty=Tensor[(2, 20), int32] */;
    %362 = greater(%354, %355) /* ty=Tensor[(6, 16, 7), bool] */;
    %363 = logical_or(%358, %359) /* ty=Tensor[(2, 20), bool] */;
    (%360, %361, %362, %363)
  };
  %364(%var_10077, %var_10078, %var_10079) /* ty=(Tensor[(2, 20), uint16], Tensor[(2, 20), int32], Tensor[(6, 16, 7), bool], Tensor[(2, 20), bool]) */
}

def @func_9173(%var_9172: Tensor[(10, 14, 8), float64]) -> (Tensor[(12, 5, 4), float32], Tensor[(180), float32], Tensor[(672), float32], Tensor[(1120), float64], Tensor[(10, 14, 8), float32]) {
  %382 = fn (%var_9157: Tensor[(10, 14, 8), float64]) -> (Tensor[(12, 5, 4), float32], Tensor[(180), float32], Tensor[(672), float32], Tensor[(1120), float64], Tensor[(10, 14, 8), float32]) {
    %365 = @func_7176() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) */;
    %366 = cast(meta[relay.Constant][23] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
    %367 = reshape(%366, newshape=[336, 2]) /* ty=Tensor[(336, 2), float32] */;
    %368 = @func_6502(%367) /* ty=(Tensor[(6, 16, 7), float32], Tensor[(336, 2), float32], Tensor[(12, 5, 4), float32], Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32]) */;
    %369 = cast(meta[relay.Constant][24] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %370 = cast(meta[relay.Constant][24] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %371 = reshape(%369, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
    %372 = reshape(%370, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
    %373 = @func_2735(%371, %372) /* ty=(Tensor[(10, 14, 8), float64],) */;
    %374 = %373.0;
    %375 = cast(%var_9157, dtype="float32") /* ty=Tensor[(10, 14, 8), float32] */;
    %376 = shape_of(%374, dtype="int32") /* ty=Tensor[(3), int32] */;
    %377 = cast(%374, dtype="float32") /* ty=Tensor[(10, 14, 8), float32] */;
    %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %379 = %365.2;
    %380 = %368.5;
    %381 = multiply(%377, %378) /* ty=Tensor[(10, 14, 8), float32] */;
    (%379, %380, meta[relay.Constant][23] /* ty=Tensor[(672), float32] */, meta[relay.Constant][24] /* ty=Tensor[(1120), float64] */, %381)
  };
  %382(%var_9172) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(180), float32], Tensor[(672), float32], Tensor[(1120), float64], Tensor[(10, 14, 8), float32]) */
}

def @func_9552() -> (Tensor[(12, 5, 4), float32],) {
  %383 = @func_8869() /* ty=Tensor[(12, 5, 4), float32] */;
  (%383,)
}

def @func_5858() -> (Tensor[(11, 3, 14), float64],) {
  @func_5856() /* ty=(Tensor[(11, 3, 14), float64],) */
}

def @func_9388() -> Tensor[(2, 20), float32] {
  %385 = fn () -> Tensor[(2, 20), float32] {
    %384 = @func_9009() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) */;
    %384.1
  };
  %385() /* ty=Tensor[(2, 20), float32] */
}

def @func_7769() -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) {
  %386 = @func_6707() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %387 = @func_6299() /* ty=Tensor[(12, 5, 4), float64] */;
  %388 = %386.0;
  (%387, %388)
}

def @func_11094() -> (Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) {
  %394 = fn () -> (Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) {
    %389 = @func_8892() /* ty=(Tensor[(12, 5, 4), float64],) */;
    %390 = %389.0;
    %391 = cast(%390, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
    %392 = @func_8869() /* ty=Tensor[(12, 5, 4), float32] */;
    %393 = exp(%391) /* ty=Tensor[(12, 5, 4), float64] */;
    (%392, %393)
  };
  %394() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) */
}

def @func_9758() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64]) {
  %403 = fn () -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64]) {
    %395 = @func_8467() /* ty=(Tensor[(2, 20), float32],) */;
    %396 = @func_7176() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) */;
    %397 = @func_8511() /* ty=(Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), bool], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) */;
    %398 = %395.0;
    %399 = @func_8605() /* ty=Tensor[(2, 20), float32] */;
    %400 = @func_5649() /* ty=Tensor[(12, 5, 4), float64] */;
    %401 = %396.2;
    %402 = %397.0;
    (%398, %399, %400, %401, %402)
  };
  %403() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64]) */
}

def @func_10567() -> (Tensor[(2, 20), float32],) {
  @func_10565() /* ty=(Tensor[(2, 20), float32],) */
}

def @func_9611(%var_9610: Tensor[(12, 5, 4), float64]) -> Tensor[(12, 5, 4), bool] {
  %410 = fn (%var_9600: Tensor[(12, 5, 4), float64]) -> Tensor[(12, 5, 4), bool] {
    %404 = @func_7176() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) */;
    %405 = %404.1;
    %406 = cast(%var_9600, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
    %407 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
    %408 = cast(%405, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
    %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%408, %409) /* ty=Tensor[(12, 5, 4), bool] */
  };
  %410(%var_9610) /* ty=Tensor[(12, 5, 4), bool] */
}

def @func_8512() -> (Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), bool], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) {
  %419 = fn () -> (Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), bool], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) {
    %411 = @func_8417() /* ty=(Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), float64]) */;
    %412 = %411.0;
    %413 = cast(%412, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
    %414 = reshape(%413, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
    %415 = @func_6403(%414) /* ty=(Tensor[(11, 3, 14), bool], Tensor[(11, 3, 14), float32]) */;
    %416 = %415.0;
    %417 = @func_5649() /* ty=Tensor[(12, 5, 4), float64] */;
    %418 = @func_6528() /* ty=Tensor[(2, 20), float32] */;
    (%412, %416, %417, %418)
  };
  %419() /* ty=(Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), bool], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) */
}

def @func_8894() -> (Tensor[(12, 5, 4), float64],) {
  @func_8892() /* ty=(Tensor[(12, 5, 4), float64],) */
}

def @func_10933() -> (Tensor[(11, 3, 14), float64],) {
  %420 = @func_6984() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64]) */;
  %421 = %420.1;
  (%421,)
}

def @func_5161() -> (Tensor[(2, 20), float32],) {
  @func_5159() /* ty=(Tensor[(2, 20), float32],) */
}

def @func_3955(%var_3888: Tensor[(12, 2, 2), float32], %var_3924: Tensor[(2, 96), float64]) -> (Tensor[(10, 2, 2), float32], Tensor[(40), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(1, 16, 12), float64], float64, Tensor[(2, 96), float64], Tensor[(672), float32], Tensor[(12, 3, 5), float32], Tensor[(12, 2, 2), int32]) {
  %422 = cast(meta[relay.Constant][25] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %423 = reshape(%422, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float32] */;
  %424 = @func_3673(%423) /* ty=(Tensor[(10, 2, 2), float32], Tensor[(11, 3, 14), float64], Tensor[(462), float64]) */;
  %425 = cast(meta[relay.Constant][26] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %426 = reshape(%425, newshape=[12, 3, 5]) /* ty=Tensor[(12, 3, 5), float32] */;
  %427 = @func_528(%426) /* ty=(Tensor[(12, 3, 5), float32],) */;
  %428 = cast(7.816f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %429 = cast(%var_3924, dtype="float64") /* ty=Tensor[(2, 96), float64] */;
  %430 = %427.0;
  %431 = cast(%430, dtype="float32") /* ty=Tensor[(12, 3, 5), float32] */;
  %432 = cast(meta[relay.Constant][27] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %433 = reshape(%428, newshape=[]) /* ty=float64 */;
  %434 = reshape(%429, newshape=[1, 16, 12]) /* ty=Tensor[(1, 16, 12), float64] */;
  %435 = reshape(%431, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %436 = reshape(%432, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %437 = @func_1666(%433, %434, %435, %436) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(6, 16, 7), float32], Tensor[(672), float32]) */;
  %438 = cast(7.816f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %439 = %437.0;
  %440 = cast(%439, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
  %441 = cast(meta[relay.Constant][26] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %442 = cast(meta[relay.Constant][27] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %443 = reshape(%438, newshape=[]) /* ty=float64 */;
  %444 = reshape(%440, newshape=[1, 16, 12]) /* ty=Tensor[(1, 16, 12), float64] */;
  %445 = reshape(%441, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %446 = reshape(%442, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %447 = @func_1666(%443, %444, %445, %446) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(6, 16, 7), float32], Tensor[(672), float32]) */;
  %448 = cast(%var_3888, dtype="float32") /* ty=Tensor[(12, 2, 2), float32] */;
  %449 = atanh(%448) /* ty=Tensor[(12, 2, 2), float32] */;
  %450 = cast(%449, dtype="float32") /* ty=Tensor[(12, 2, 2), float32] */;
  %451 = sin(%450) /* ty=Tensor[(12, 2, 2), float32] */;
  %452 = cast(%var_3888, dtype="int32") /* ty=Tensor[(12, 2, 2), int32] */;
  %453 = shape_of(%451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(%451, dtype="int32") /* ty=Tensor[(12, 2, 2), int32] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %456 = %424.0;
  %457 = %447.1;
  %458 = subtract(%454, %455) /* ty=Tensor[(12, 2, 2), int32] */;
  (%456, meta[relay.Constant][25] /* ty=Tensor[(40), float32] */, %430, meta[relay.Constant][26] /* ty=Tensor[(180), float32] */, %439, 7.816f64 /* ty=float64 */, %var_3924, meta[relay.Constant][27] /* ty=Tensor[(672), float32] */, %457, %458)
}

def @func_6185(%var_6178: uint16, %var_6179: Tensor[(7, 11, 7), uint16]) -> (Tensor[(7, 11, 7), uint16],) {
  %459 = cast(%var_6178, dtype="uint16") /* ty=uint16 */;
  %460 = cast(%var_6179, dtype="uint16") /* ty=Tensor[(7, 11, 7), uint16] */;
  %461 = maximum(%459, %460) /* ty=Tensor[(7, 11, 7), uint16] */;
  (%461,)
}

def @main(%var_13461: Tensor[(13, 6, 6), float32]) -> Tensor[(13, 6, 6), float64] {
  %462 = cast(%var_13461, dtype="float32") /* ty=Tensor[(13, 6, 6), float32] */;
  %463 = erf(%462) /* ty=Tensor[(13, 6, 6), float32] */;
  %464 = cast(%463, dtype="float64") /* ty=Tensor[(13, 6, 6), float64] */;
  atan(%464) /* ty=Tensor[(13, 6, 6), float64] */
}

def @func_7678() -> (Tensor[(2, 20), float32], Tensor[(168, 4), int64], Tensor[(12, 5, 4), float32], Tensor[(168, 4), float32]) {
  %484 = fn () -> (Tensor[(2, 20), float32], Tensor[(168, 4), int64], Tensor[(12, 5, 4), float32], Tensor[(168, 4), float32]) {
    %465 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
    %466 = @func_6872() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32], Tensor[(78), float64], float64, Tensor[(288, 4), float64], Tensor[(168, 4), float32]) */;
    %467 = %466.6;
    %468 = cast(%467, dtype="float32") /* ty=Tensor[(168, 4), float32] */;
    %469 = atan(%468) /* ty=Tensor[(168, 4), float32] */;
    %470 = cast(%469, dtype="float64") /* ty=Tensor[(168, 4), float64] */;
    %471 = sinh(%470) /* ty=Tensor[(168, 4), float64] */;
    %472 = cast(%469, dtype="int64") /* ty=Tensor[(168, 4), int64] */;
    %473 = shape_of(%471, dtype="int32") /* ty=Tensor[(2), int32] */;
    %474 = cast(%471, dtype="int64") /* ty=Tensor[(168, 4), int64] */;
    %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %476 = %465.0;
    %477 = cast(%476, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
    %478 = reshape(%477, newshape=[2, 20]) /* ty=Tensor[(2, 20), float32] */;
    %479 = @func_7563(%478) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(2, 20), bool], Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32], Tensor[(2, 20), float64]) */;
    %480 = cast(%471, dtype="float32") /* ty=Tensor[(168, 4), float32] */;
    %481 = subtract(%474, %475) /* ty=Tensor[(168, 4), int64] */;
    %482 = %479.1;
    %483 = atanh(%480) /* ty=Tensor[(168, 4), float32] */;
    (%476, %481, %482, %483)
  };
  %484() /* ty=(Tensor[(2, 20), float32], Tensor[(168, 4), int64], Tensor[(12, 5, 4), float32], Tensor[(168, 4), float32]) */
}

def @func_12563(%var_12561: Tensor[(462), float64], %var_12562: Tensor[(3, 60), float32]) -> (Tensor[(12, 5, 4), float64], float64, Tensor[(700), float64], Tensor[(462), float64], Tensor[(3, 60), float32], Tensor[(2, 20), float32]) {
  %497 = fn (%var_12535: Tensor[(462), float64], %var_12536: Tensor[(3, 60), float32]) -> (Tensor[(12, 5, 4), float64], float64, Tensor[(700), float64], Tensor[(462), float64], Tensor[(3, 60), float32], Tensor[(2, 20), float32]) {
    %485 = @func_9993() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), uint8], Tensor[(12, 5, 4), float64]) */;
    %486 = cast(meta[relay.Constant][28] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
    %487 = cast(%var_12535, dtype="float64") /* ty=Tensor[(462), float64] */;
    %488 = cast(%var_12536, dtype="float32") /* ty=Tensor[(3, 60), float32] */;
    %489 = reshape(%486, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float64] */;
    %490 = reshape(%487, newshape=[231, 2]) /* ty=Tensor[(231, 2), float64] */;
    %491 = reshape(%488, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %492 = @func_4115(%489, %490, %491) /* ty=(Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(5, 10, 14), int64], Tensor[(6, 16, 7), float32], Tensor[(2912), bool], float64, Tensor[(48), float32], Tensor[(192), float64]) */;
    %493 = @func_7227() /* ty=(Tensor[(2, 20), float32],) */;
    %494 = %485.0;
    %495 = %492.9;
    %496 = %493.0;
    (%494, %495, meta[relay.Constant][28] /* ty=Tensor[(700), float64] */, %var_12535, %var_12536, %496)
  };
  %497(%var_12561, %var_12562) /* ty=(Tensor[(12, 5, 4), float64], float64, Tensor[(700), float64], Tensor[(462), float64], Tensor[(3, 60), float32], Tensor[(2, 20), float32]) */
}

def @func_11422() -> Tensor[(2, 20), float32] {
  %498 = @func_8801() /* ty=(Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %498.0
}

def @func_6937() -> Tensor[(12, 5, 4), float64] {
  @func_6158() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_2527(%var_2526: Tensor[(1, 6, 13), float64]) -> (Tensor[(1, 6, 13), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) {
  %506 = fn (%var_2507: Tensor[(1, 6, 13), float64]) -> (Tensor[(1, 6, 13), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) {
    %499 = cast(3.91668f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %500 = cast(%var_2507, dtype="float64") /* ty=Tensor[(1, 6, 13), float64] */;
    %501 = cast(meta[relay.Constant][29] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %502 = reshape(%501, newshape=[12, 3, 5]) /* ty=Tensor[(12, 3, 5), float32] */;
    %503 = @func_528(%502) /* ty=(Tensor[(12, 3, 5), float32],) */;
    %504 = power(%499, %500) /* ty=Tensor[(1, 6, 13), float64] */;
    %505 = %503.0;
    (%504, %505, meta[relay.Constant][29] /* ty=Tensor[(180), float32] */)
  };
  %506(%var_2526) /* ty=(Tensor[(1, 6, 13), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) */
}

def @func_10180(%var_10178: Tensor[(12, 5, 4), float64]) -> (Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), bool], Tensor[(180), float32], Tensor[(1120), float64], Tensor[(1120), float64]) {
  @func_10177(%var_10178) /* ty=(Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), bool], Tensor[(180), float32], Tensor[(1120), float64], Tensor[(1120), float64]) */
}

def @func_4688(%var_4685: Tensor[(16, 1, 14), float32]) -> Tensor[(16, 1, 14), float32] {
  %507 = cast(%var_4685, dtype="float32") /* ty=Tensor[(16, 1, 14), float32] */;
  cos(%507) /* ty=Tensor[(16, 1, 14), float32] */
}

def @func_6189(%var_6187: uint16, %var_6188: Tensor[(7, 11, 7), uint16]) -> (Tensor[(7, 11, 7), uint16],) {
  @func_6185(%var_6187, %var_6188) /* ty=(Tensor[(7, 11, 7), uint16],) */
}

def @func_9523(%var_9518: Tensor[(15, 13, 16), uint32], %var_9519: Tensor[(15, 13, 16), uint32]) -> Tensor[(15, 13, 16), uint32] {
  %508 = cast(%var_9519, dtype="uint32") /* ty=Tensor[(15, 13, 16), uint32] */;
  %509 = shape_of(%var_9518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%var_9518, dtype="uint32") /* ty=Tensor[(15, 13, 16), uint32] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%510, %511) /* ty=Tensor[(15, 13, 16), uint32] */
}

def @func_4120(%var_4117: Tensor[(5, 10, 14), float64], %var_4118: Tensor[(231, 2), float64], %var_4119: Tensor[(180), float32]) -> (Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(5, 10, 14), int64], Tensor[(6, 16, 7), float32], Tensor[(2912), bool], float64, Tensor[(48), float32], Tensor[(192), float64]) {
  @func_4115(%var_4117, %var_4118, %var_4119) /* ty=(Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(5, 10, 14), int64], Tensor[(6, 16, 7), float32], Tensor[(2912), bool], float64, Tensor[(48), float32], Tensor[(192), float64]) */
}

def @func_11283(%var_11281: Tensor[(462), float64]) -> (Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(462), float64], Tensor[(12, 5, 4), float32], Tensor[(224), float32], Tensor[(4, 168), float32], Tensor[(6, 16, 7), float32]) {
  @func_11280(%var_11281) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(462), float64], Tensor[(12, 5, 4), float32], Tensor[(224), float32], Tensor[(4, 168), float32], Tensor[(6, 16, 7), float32]) */
}

def @func_10813(%var_10812: Tensor[(462), float64]) -> (Tensor[(2, 20), bool], Tensor[(48), float32], Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32]) {
  %527 = fn (%var_10807: Tensor[(462), float64]) -> (Tensor[(2, 20), bool], Tensor[(48), float32], Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32]) {
    %512 = @func_6692() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 3, 5), float32], Tensor[(78), float64], Tensor[(2, 20), float32]) */;
    %513 = %512.0;
    %514 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 20), float32] */, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
    %515 = shape_of(%513, dtype="int32") /* ty=Tensor[(2), int32] */;
    %516 = cast(%513, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
    %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %518 = cast(meta[relay.Constant][31] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
    %519 = cast(%var_10807, dtype="float64") /* ty=Tensor[(462), float64] */;
    %520 = cast(meta[relay.Constant][32] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %521 = reshape(%518, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float64] */;
    %522 = reshape(%519, newshape=[231, 2]) /* ty=Tensor[(231, 2), float64] */;
    %523 = reshape(%520, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %524 = @func_4115(%521, %522, %523) /* ty=(Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(5, 10, 14), int64], Tensor[(6, 16, 7), float32], Tensor[(2912), bool], float64, Tensor[(48), float32], Tensor[(192), float64]) */;
    %525 = logical_and(%516, %517) /* ty=Tensor[(2, 20), bool] */;
    %526 = %524.10;
    (%525, %526, meta[relay.Constant][31] /* ty=Tensor[(700), float64] */, %var_10807, meta[relay.Constant][32] /* ty=Tensor[(180), float32] */)
  };
  %527(%var_10812) /* ty=(Tensor[(2, 20), bool], Tensor[(48), float32], Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32]) */
}

def @func_11146(%var_11145: Tensor[(12, 5, 4), float64]) -> (Tensor[(12, 5, 4), uint64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64]) {
  %538 = fn (%var_11125: Tensor[(12, 5, 4), float64]) -> (Tensor[(12, 5, 4), uint64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64]) {
    %528 = @func_5558() /* ty=(Tensor[(12, 5, 4), float64],) */;
    %529 = %528.0;
    %530 = cast(%var_11125, dtype="uint64") /* ty=Tensor[(12, 5, 4), uint64] */;
    %531 = shape_of(%529, dtype="int32") /* ty=Tensor[(3), int32] */;
    %532 = cast(%529, dtype="uint64") /* ty=Tensor[(12, 5, 4), uint64] */;
    %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %534 = @func_5558() /* ty=(Tensor[(12, 5, 4), float64],) */;
    %535 = subtract(%532, %533) /* ty=Tensor[(12, 5, 4), uint64] */;
    %536 = %534.0;
    %537 = @func_6761() /* ty=Tensor[(12, 5, 4), float64] */;
    (%535, %536, %537)
  };
  %538(%var_11145) /* ty=(Tensor[(12, 5, 4), uint64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64]) */
}

def @func_6633() -> Tensor[(12, 5, 4), float64] {
  %539 = @func_6438() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %539.0
}

def @func_10472() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32]) {
  %540 = @func_5430() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %541 = @func_8445() /* ty=Tensor[(2, 20), float32] */;
  %542 = %540.0;
  (%541, %542)
}

def @func_3959(%var_3957: Tensor[(12, 2, 2), float32], %var_3958: Tensor[(2, 96), float64]) -> (Tensor[(10, 2, 2), float32], Tensor[(40), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(1, 16, 12), float64], float64, Tensor[(2, 96), float64], Tensor[(672), float32], Tensor[(12, 3, 5), float32], Tensor[(12, 2, 2), int32]) {
  @func_3955(%var_3957, %var_3958) /* ty=(Tensor[(10, 2, 2), float32], Tensor[(40), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(1, 16, 12), float64], float64, Tensor[(2, 96), float64], Tensor[(672), float32], Tensor[(12, 3, 5), float32], Tensor[(12, 2, 2), int32]) */
}

def @func_9825(%var_9823: Tensor[(2, 20), float32]) -> Tensor[(2, 20), bool] {
  @func_9822(%var_9823) /* ty=Tensor[(2, 20), bool] */
}

def @func_9952() -> (Tensor[(2, 20), int64], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), float64], Tensor[(11, 3, 14), float64]) {
  %543 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %544 = %543.0;
  %545 = cast(%544, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %546 = sin(%545) /* ty=Tensor[(2, 20), float32] */;
  %547 = cast(%546, dtype="int64") /* ty=Tensor[(2, 20), int64] */;
  %548 = shape_of(%544, dtype="int32") /* ty=Tensor[(2), int32] */;
  %549 = cast(%544, dtype="int64") /* ty=Tensor[(2, 20), int64] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %551 = @func_8331() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float64]) */;
  %552 = @func_5856() /* ty=(Tensor[(11, 3, 14), float64],) */;
  %553 = %551.0;
  %554 = cast(%553, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %555 = reshape(%554, newshape=[2, 20]) /* ty=Tensor[(2, 20), float32] */;
  %556 = @func_7949(%555) /* ty=Tensor[(2, 20), float32] */;
  %557 = cast(%556, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %558 = %552.0;
  %559 = cast(%558, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
  %560 = reshape(%559, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
  %561 = logical_xor(%549, %550) /* ty=Tensor[(2, 20), int64] */;
  %562 = asinh(%557) /* ty=Tensor[(2, 20), float64] */;
  %563 = @func_3266(%560) /* ty=Tensor[(11, 3, 14), float64] */;
  (%561, %553, %558, %562, %563)
}

def @func_2739(%var_2737: Tensor[(10, 14, 8), float64], %var_2738: Tensor[(10, 14, 8), float64]) -> (Tensor[(10, 14, 8), float64],) {
  @func_2735(%var_2737, %var_2738) /* ty=(Tensor[(10, 14, 8), float64],) */
}

def @func_12635() -> (Tensor[(12, 5, 4), float32],) {
  @func_12633() /* ty=(Tensor[(12, 5, 4), float32],) */
}

def @func_1034(%var_1032: Tensor[(6, 16, 7), float32]) -> Tensor[(6, 16, 7), float32] {
  @func_1031(%var_1032) /* ty=Tensor[(6, 16, 7), float32] */
}

def @func_13180() -> (Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32]) {
  %564 = @func_9216() /* ty=(Tensor[(12, 3, 5), float32], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) */;
  %565 = @func_5649() /* ty=Tensor[(12, 5, 4), float64] */;
  %566 = %564.0;
  (%565, %566)
}

def @func_11207(%var_11206: Tensor[(12, 5, 4), float64]) -> (Tensor[(12, 5, 4), float32],) {
  %573 = fn (%var_11192: Tensor[(12, 5, 4), float64]) -> (Tensor[(12, 5, 4), float32],) {
    %567 = @func_6158() /* ty=Tensor[(12, 5, 4), float64] */;
    %568 = cast(%var_11192, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
    %569 = shape_of(%567, dtype="int32") /* ty=Tensor[(3), int32] */;
    %570 = cast(%567, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
    %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %572 = power(%570, %571) /* ty=Tensor[(12, 5, 4), float32] */;
    (%572,)
  };
  %573(%var_11206) /* ty=(Tensor[(12, 5, 4), float32],) */
}

def @func_7327() -> Tensor[(11, 3, 14), float64] {
  %574 = fn () -> Tensor[(11, 3, 14), float64] {
    @func_5791() /* ty=Tensor[(11, 3, 14), float64] */
  };
  %574() /* ty=Tensor[(11, 3, 14), float64] */
}

def @func_4115(%var_4028: Tensor[(5, 10, 14), float64], %var_4067: Tensor[(231, 2), float64], %var_4073: Tensor[(180), float32]) -> (Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(5, 10, 14), int64], Tensor[(6, 16, 7), float32], Tensor[(2912), bool], float64, Tensor[(48), float32], Tensor[(192), float64]) {
  %575 = cast(meta[relay.Constant][33] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %576 = reshape(%575, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
  %577 = cast(%var_4067, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
  %578 = reshape(%577, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
  %579 = cast(%var_4067, dtype="float32") /* ty=Tensor[(231, 2), float32] */;
  %580 = cast(%var_4073, dtype="float32") /* ty=Tensor[(180), float32] */;
  %581 = reshape(%580, newshape=[12, 3, 5]) /* ty=Tensor[(12, 3, 5), float32] */;
  %582 = @func_528(%581) /* ty=(Tensor[(12, 3, 5), float32],) */;
  %583 = cast(%var_4028, dtype="float64") /* ty=Tensor[(5, 10, 14), float64] */;
  %584 = sqrt(%583) /* ty=Tensor[(5, 10, 14), float64] */;
  %585 = cast(%var_4028, dtype="int64") /* ty=Tensor[(5, 10, 14), int64] */;
  %586 = shape_of(%584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(%584, dtype="int64") /* ty=Tensor[(5, 10, 14), int64] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %589 = cast(meta[relay.Constant][34] /* ty=Tensor[(2912), bool] */, dtype="bool") /* ty=Tensor[(2912), bool] */;
  %590 = cast(meta[relay.Constant][34] /* ty=Tensor[(2912), bool] */, dtype="bool") /* ty=Tensor[(2912), bool] */;
  %591 = cast(%var_4073, dtype="float32") /* ty=Tensor[(180), float32] */;
  %592 = reshape(%589, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), bool] */;
  %593 = reshape(%590, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), bool] */;
  %594 = reshape(%591, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %595 = @func_2073(%592, %593, %594) /* ty=(Tensor[(16, 14, 13), bool], Tensor[(6, 16, 7), float32], Tensor[(672), float32], Tensor[(6, 16, 7), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) */;
  %596 = cast(meta[relay.Constant][35] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %597 = cast(meta[relay.Constant][36] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %598 = reshape(%596, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float32] */;
  %599 = reshape(%597, newshape=[2, 96]) /* ty=Tensor[(2, 96), float64] */;
  %600 = @func_3955(%598, %599) /* ty=(Tensor[(10, 2, 2), float32], Tensor[(40), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(1, 16, 12), float64], float64, Tensor[(2, 96), float64], Tensor[(672), float32], Tensor[(12, 3, 5), float32], Tensor[(12, 2, 2), int32]) */;
  %601 = @func_2114(%576) /* ty=Tensor[(12, 6, 16), float64] */;
  %602 = @func_3266(%578) /* ty=Tensor[(11, 3, 14), float64] */;
  %603 = acos(%579) /* ty=Tensor[(231, 2), float32] */;
  %604 = %582.0;
  %605 = bitwise_or(%587, %588) /* ty=Tensor[(5, 10, 14), int64] */;
  %606 = %595.3;
  %607 = %600.5;
  (%601, meta[relay.Constant][33] /* ty=Tensor[(1152), float64] */, %602, %603, %604, %var_4073, %605, %606, meta[relay.Constant][34] /* ty=Tensor[(2912), bool] */, %607, meta[relay.Constant][35] /* ty=Tensor[(48), float32] */, meta[relay.Constant][36] /* ty=Tensor[(192), float64] */)
}

def @func_9416(%var_9410: float32) -> Tensor[(7, 6, 11), float32] {
  %608 = cast(%var_9410, dtype="float32") /* ty=float32 */;
  %609 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 6, 11), float32] */, dtype="float32") /* ty=Tensor[(7, 6, 11), float32] */;
  floor_mod(%608, %609) /* ty=Tensor[(7, 6, 11), float32] */
}

def @func_11280(%var_11226: Tensor[(462), float64]) -> (Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(462), float64], Tensor[(12, 5, 4), float32], Tensor[(224), float32], Tensor[(4, 168), float32], Tensor[(6, 16, 7), float32]) {
  %610 = cast(%var_11226, dtype="float64") /* ty=Tensor[(462), float64] */;
  %611 = reshape(%610, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %612 = @func_8170(%611) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64], Tensor[(462), float64], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %613 = cast(meta[relay.Constant][38] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %614 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 168), float32] */, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %615 = reshape(%613, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %616 = reshape(%614, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %617 = @func_8387(%615, %616) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(16, 1, 14), float32], Tensor[(224), float32], Tensor[(180), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32]) */;
  %618 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 168), float32] */, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %619 = reshape(%618, newshape=[336, 2]) /* ty=Tensor[(336, 2), float32] */;
  %620 = @func_6502(%619) /* ty=(Tensor[(6, 16, 7), float32], Tensor[(336, 2), float32], Tensor[(12, 5, 4), float32], Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32]) */;
  %621 = @func_11066() /* ty=Tensor[(12, 5, 4), float64] */;
  %622 = %612.3;
  %623 = %617.0;
  %624 = %620.0;
  (%621, %622, %var_11226, %623, meta[relay.Constant][38] /* ty=Tensor[(224), float32] */, meta[relay.Constant][39] /* ty=Tensor[(4, 168), float32] */, %624)
}

def @func_6874() -> (Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32], Tensor[(78), float64], float64, Tensor[(288, 4), float64], Tensor[(168, 4), float32]) {
  @func_6872() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 3, 5), float32], Tensor[(78), float64], float64, Tensor[(288, 4), float64], Tensor[(168, 4), float32]) */
}

def @func_7566(%var_7564: Tensor[(2, 20), float32]) -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(2, 20), bool], Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32], Tensor[(2, 20), float64]) {
  @func_7563(%var_7564) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(2, 20), bool], Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32], Tensor[(2, 20), float64]) */
}

def @func_9822(%var_9817: Tensor[(2, 20), float32]) -> Tensor[(2, 20), bool] {
  %625 = @func_6528() /* ty=Tensor[(2, 20), float32] */;
  %626 = cast(%var_9817, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %627 = shape_of(%625, dtype="int32") /* ty=Tensor[(2), int32] */;
  %628 = cast(%625, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  less_equal(%628, %629) /* ty=Tensor[(2, 20), bool] */
}

def @func_8911() -> Tensor[(12, 5, 4), float64] {
  @func_6937() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_12122() -> (Tensor[(2, 20), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64]) {
  %630 = @func_7376() /* ty=(Tensor[(2, 20), float32],) */;
  %631 = %630.0;
  %632 = cast(%631, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %633 = acos(%632) /* ty=Tensor[(2, 20), float64] */;
  %634 = @func_5649() /* ty=Tensor[(12, 5, 4), float64] */;
  %635 = @func_6158() /* ty=Tensor[(12, 5, 4), float64] */;
  (%633, %634, %635)
}

def @func_6693() -> (Tensor[(2, 20), float32], Tensor[(12, 3, 5), float32], Tensor[(78), float64], Tensor[(2, 20), float32]) {
  %645 = fn () -> (Tensor[(2, 20), float32], Tensor[(12, 3, 5), float32], Tensor[(78), float64], Tensor[(2, 20), float32]) {
    %636 = cast(meta[relay.Constant][40] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
    %637 = reshape(%636, newshape=[1, 6, 13]) /* ty=Tensor[(1, 6, 13), float64] */;
    %638 = @func_2525(%637) /* ty=(Tensor[(1, 6, 13), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) */;
    %639 = @func_5735() /* ty=(Tensor[(2, 20), float32],) */;
    %640 = %639.0;
    %641 = cast(%640, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
    %642 = @func_6528() /* ty=Tensor[(2, 20), float32] */;
    %643 = %638.1;
    %644 = asin(%641) /* ty=Tensor[(2, 20), float32] */;
    (%642, %643, meta[relay.Constant][40] /* ty=Tensor[(78), float64] */, %644)
  };
  %645() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 3, 5), float32], Tensor[(78), float64], Tensor[(2, 20), float32]) */
}

def @func_6939() -> Tensor[(12, 5, 4), float64] {
  @func_6937() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_11726(%var_11695: uint8, %var_11696: Tensor[(14, 16, 2), uint8]) -> (Tensor[(14, 16, 2), bool], Tensor[(2, 20), float32]) {
  %646 = cast(%var_11695, dtype="bool") /* ty=bool */;
  %647 = cast(%var_11696, dtype="bool") /* ty=Tensor[(14, 16, 2), bool] */;
  %648 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %649 = greater(%646, %647) /* ty=Tensor[(14, 16, 2), bool] */;
  %650 = %648.0;
  (%649, %650)
}

def @func_6158() -> Tensor[(12, 5, 4), float64] {
  @func_5211() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_11598(%var_11597: Tensor[(240), float32]) -> (Tensor[(2, 20), float32], float64, Tensor[(700), float64], Tensor[(12, 5, 4), float32], Tensor[(240), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64]) {
  %664 = fn (%var_11564: Tensor[(240), float32]) -> (Tensor[(2, 20), float32], float64, Tensor[(700), float64], Tensor[(12, 5, 4), float32], Tensor[(240), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64]) {
    %651 = cast(meta[relay.Constant][41] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
    %652 = reshape(%651, newshape=[700]) /* ty=Tensor[(700), float64] */;
    %653 = @func_9082(%652) /* ty=(float64, Tensor[(700), float64], Tensor[(462), float64], Tensor[(180), float32], Tensor[(12, 5, 4), float32]) */;
    %654 = cast(%var_11564, dtype="float32") /* ty=Tensor[(240), float32] */;
    %655 = reshape(%654, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float32] */;
    %656 = @func_6997(%655) /* ty=(Tensor[(12, 5, 4), float32],) */;
    %657 = @func_11093() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) */;
    %658 = @func_6438() /* ty=(Tensor[(12, 5, 4), float64],) */;
    %659 = @func_8445() /* ty=Tensor[(2, 20), float32] */;
    %660 = %653.0;
    %661 = %656.0;
    %662 = %657.1;
    %663 = %658.0;
    (%659, %660, meta[relay.Constant][41] /* ty=Tensor[(700), float64] */, %661, %var_11564, %662, %663)
  };
  %664(%var_11597) /* ty=(Tensor[(2, 20), float32], float64, Tensor[(700), float64], Tensor[(12, 5, 4), float32], Tensor[(240), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64]) */
}

def @func_12486() -> (Tensor[(12, 5, 4), float64],) {
  %665 = @func_6438() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %666 = %665.0;
  (%666,)
}

def @func_6002(%var_5999: Tensor[(192), float64], %var_6000: Tensor[(180), float32], %var_6001: Tensor[(672), float32]) -> (Tensor[(12, 5, 4), float32], Tensor[(6, 16, 7), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32], Tensor[(2, 20), float32]) {
  @func_5997(%var_5999, %var_6000, %var_6001) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(6, 16, 7), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32], Tensor[(2, 20), float32]) */
}

def @func_9503() -> (Tensor[(2, 20), float32],) {
  %667 = @func_8445() /* ty=Tensor[(2, 20), float32] */;
  (%667,)
}

def @func_7615(%var_7613: Tensor[(560, 2), float64]) -> (Tensor[(12, 5, 4), float32], Tensor[(10, 14, 8), float64], Tensor[(560, 2), float32]) {
  @func_7612(%var_7613) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(10, 14, 8), float64], Tensor[(560, 2), float32]) */
}

def @func_12771(%var_12751: Tensor[(15, 4, 2), float32]) -> Tensor[(15, 4, 2), float32] {
  %668 = cast(%var_12751, dtype="float32") /* ty=Tensor[(15, 4, 2), float32] */;
  log(%668) /* ty=Tensor[(15, 4, 2), float32] */
}

def @func_10474() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32]) {
  @func_10472() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */
}

def @func_8869() -> Tensor[(12, 5, 4), float32] {
  %669 = @func_6707() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %670 = %669.0;
  %671 = cast(%670, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  acos(%671) /* ty=Tensor[(12, 5, 4), float32] */
}

def @func_2117(%var_2115: Tensor[(12, 6, 16), float64]) -> Tensor[(12, 6, 16), float64] {
  @func_2114(%var_2115) /* ty=Tensor[(12, 6, 16), float64] */
}

def @func_9566() -> (Tensor[(2, 20), float32],) {
  %674 = fn () -> (Tensor[(2, 20), float32],) {
    %672 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
    %673 = %672.3;
    (%673,)
  };
  %674() /* ty=(Tensor[(2, 20), float32],) */
}

def @func_9409() -> (Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) {
  %679 = fn () -> (Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) {
    %675 = @func_6707() /* ty=(Tensor[(12, 5, 4), float32],) */;
    %676 = @func_8511() /* ty=(Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), bool], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) */;
    %677 = %675.0;
    %678 = %676.2;
    (%677, %678)
  };
  %679() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) */
}

def @func_7177() -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) {
  %684 = fn () -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) {
    %680 = @func_5185() /* ty=(Tensor[(12, 5, 4), float32],) */;
    %681 = @func_6761() /* ty=Tensor[(12, 5, 4), float64] */;
    %682 = @func_6633() /* ty=Tensor[(12, 5, 4), float64] */;
    %683 = %680.0;
    (%681, %682, %683)
  };
  %684() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) */
}

def @func_9445(%var_9434: Tensor[(16, 14), float32]) -> (Tensor[(2, 20), float32], Tensor[(180), float32], Tensor[(16, 14), float32], Tensor[(672), float32]) {
  %685 = @func_9323() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %686 = cast(%var_9434, dtype="float32") /* ty=Tensor[(16, 14), float32] */;
  %687 = cast(meta[relay.Constant][42] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %688 = reshape(%686, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %689 = reshape(%687, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %690 = @func_8387(%688, %689) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(16, 1, 14), float32], Tensor[(224), float32], Tensor[(180), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32]) */;
  %691 = %685.1;
  %692 = %690.9;
  (%691, %692, %var_9434, meta[relay.Constant][42] /* ty=Tensor[(672), float32] */)
}

def @func_11424() -> Tensor[(2, 20), float32] {
  @func_11422() /* ty=Tensor[(2, 20), float32] */
}

def @func_13002() -> (Tensor[(2, 20), float32],) {
  @func_13000() /* ty=(Tensor[(2, 20), float32],) */
}

def @func_13320(%var_13319: Tensor[(16, 12, 8), float64]) -> (Tensor[(16, 12, 8), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float64]) {
  %699 = fn (%var_13304: Tensor[(16, 12, 8), float64]) -> (Tensor[(16, 12, 8), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float64]) {
    %693 = cast(%var_13304, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
    %694 = cast(meta[relay.Constant][43] /* ty=Tensor[(231, 2), float64] */, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
    %695 = reshape(%694, newshape=[462]) /* ty=Tensor[(462), float64] */;
    %696 = @func_8170(%695) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64], Tensor[(462), float64], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
    %697 = atan(%693) /* ty=Tensor[(16, 12, 8), float64] */;
    %698 = %696.1;
    (%697, %698, meta[relay.Constant][43] /* ty=Tensor[(231, 2), float64] */)
  };
  %699(%var_13319) /* ty=(Tensor[(16, 12, 8), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float64]) */
}

def @func_9291() -> Tensor[(12, 5, 4), float64] {
  %700 = @func_6438() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %700.0
}

def @func_11678() -> (Tensor[(2, 20), float32],) {
  %701 = @func_9474() /* ty=(Tensor[(2, 20), float32],) */;
  %702 = %701.0;
  (%702,)
}

def @func_12633() -> (Tensor[(12, 5, 4), float32],) {
  %703 = @func_10228() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %704 = %703.0;
  (%704,)
}

def @func_5997(%var_5989: Tensor[(192), float64], %var_5990: Tensor[(180), float32], %var_5991: Tensor[(672), float32]) -> (Tensor[(12, 5, 4), float32], Tensor[(6, 16, 7), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32], Tensor[(2, 20), float32]) {
  %705 = cast(3.47976f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %706 = cast(%var_5989, dtype="float64") /* ty=Tensor[(192), float64] */;
  %707 = cast(%var_5990, dtype="float32") /* ty=Tensor[(180), float32] */;
  %708 = cast(%var_5991, dtype="float32") /* ty=Tensor[(672), float32] */;
  %709 = reshape(%705, newshape=[]) /* ty=float64 */;
  %710 = reshape(%706, newshape=[1, 16, 12]) /* ty=Tensor[(1, 16, 12), float64] */;
  %711 = reshape(%707, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %712 = reshape(%708, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %713 = @func_1666(%709, %710, %711, %712) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(6, 16, 7), float32], Tensor[(672), float32]) */;
  %714 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %715 = @func_4900() /* ty=Tensor[(12, 5, 4), float32] */;
  %716 = %713.3;
  %717 = %714.0;
  (%715, %716, 3.47976f64 /* ty=float64 */, %var_5989, %var_5990, %var_5991, %717)
}

def @func_11876() -> Tensor[(2, 20), float32] {
  %719 = fn () -> Tensor[(2, 20), float32] {
    %718 = @func_9503() /* ty=(Tensor[(2, 20), float32],) */;
    %718.0
  };
  %719() /* ty=Tensor[(2, 20), float32] */
}

def @func_8913() -> Tensor[(12, 5, 4), float64] {
  @func_8911() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_13238() -> (Tensor[(12, 3, 5), float32],) {
  %720 = @func_8734() /* ty=Tensor[(12, 3, 5), float32] */;
  %721 = cast(%720, dtype="float64") /* ty=Tensor[(12, 3, 5), float64] */;
  %722 = log(%721) /* ty=Tensor[(12, 3, 5), float64] */;
  %723 = cast(%722, dtype="float32") /* ty=Tensor[(12, 3, 5), float32] */;
  %724 = acos(%723) /* ty=Tensor[(12, 3, 5), float32] */;
  (%724,)
}

def @func_5529() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32]) {
  %729 = fn () -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32]) {
    %725 = @func_5430() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
    %726 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
    %727 = %725.1;
    %728 = %726.0;
    (%727, %728)
  };
  %729() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */
}

def @func_8664() -> (Tensor[(12, 5, 4), float64],) {
  %731 = fn () -> (Tensor[(12, 5, 4), float64],) {
    %730 = @func_5379() /* ty=Tensor[(12, 5, 4), float64] */;
    (%730,)
  };
  %731() /* ty=(Tensor[(12, 5, 4), float64],) */
}

def @func_11298(%var_11296: Tensor[(16, 15, 1), float32]) -> Tensor[(16, 15, 1), float32] {
  @func_11295(%var_11296) /* ty=Tensor[(16, 15, 1), float32] */
}

def @func_9899(%var_9897: Tensor[(2, 20), float32]) -> Tensor[(2, 20), int32] {
  @func_9896(%var_9897) /* ty=Tensor[(2, 20), int32] */
}

def @func_7563(%var_7543: Tensor[(2, 20), float32]) -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(2, 20), bool], Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32], Tensor[(2, 20), float64]) {
  %732 = @func_6438() /* ty=(Tensor[(12, 5, 4), float64],) */;
  %733 = @func_7120() /* ty=(Tensor[(12, 5, 4), float32],) */;
  %734 = @func_5735() /* ty=(Tensor[(2, 20), float32],) */;
  %735 = %734.0;
  %736 = cast(%735, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %737 = cosh(%736) /* ty=Tensor[(2, 20), float64] */;
  %738 = cast(%737, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %739 = log10(%738) /* ty=Tensor[(2, 20), float32] */;
  %740 = cast(%739, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %741 = log(%740) /* ty=Tensor[(2, 20), float64] */;
  %742 = cast(%739, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %743 = shape_of(%741, dtype="int32") /* ty=Tensor[(2), int32] */;
  %744 = cast(%741, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %746 = cast(%741, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %747 = cast(%741, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %748 = atanh(%747) /* ty=Tensor[(2, 20), float32] */;
  %749 = cast(%var_7543, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
  %750 = shape_of(%748, dtype="int32") /* ty=Tensor[(2), int32] */;
  %751 = cast(%748, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %753 = minimum(%751, %752) /* ty=Tensor[(2, 20), uint16] */;
  %754 = cast(%753, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %755 = %732.0;
  %756 = %733.0;
  %757 = greater_equal(%744, %745) /* ty=Tensor[(2, 20), bool] */;
  %758 = @func_5672() /* ty=Tensor[(12, 5, 4), float32] */;
  %759 = sqrt(%746) /* ty=Tensor[(2, 20), float32] */;
  %760 = exp(%754) /* ty=Tensor[(2, 20), float64] */;
  (%755, %756, %757, %758, %759, %760)
}

def @func_8736() -> Tensor[(12, 3, 5), float32] {
  @func_8734() /* ty=Tensor[(12, 3, 5), float32] */
}

def @func_13240() -> (Tensor[(12, 3, 5), float32],) {
  @func_13238() /* ty=(Tensor[(12, 3, 5), float32],) */
}

def @func_13000() -> (Tensor[(2, 20), float32],) {
  %761 = @func_7227() /* ty=(Tensor[(2, 20), float32],) */;
  %762 = %761.0;
  (%762,)
}

def @func_6796() -> (Tensor[(12, 5, 4), float32],) {
  @func_6794() /* ty=(Tensor[(12, 5, 4), float32],) */
}

def @func_4691(%var_4689: Tensor[(16, 1, 14), float32]) -> Tensor[(16, 1, 14), float32] {
  @func_4688(%var_4689) /* ty=Tensor[(16, 1, 14), float32] */
}

def @func_6439() -> (Tensor[(12, 5, 4), float64],) {
  %764 = fn () -> (Tensor[(12, 5, 4), float64],) {
    %763 = @func_6158() /* ty=Tensor[(12, 5, 4), float64] */;
    (%763,)
  };
  %764() /* ty=(Tensor[(12, 5, 4), float64],) */
}

def @func_8173(%var_8171: Tensor[(462), float64]) -> (Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64], Tensor[(462), float64], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) {
  @func_8170(%var_8171) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64], Tensor[(462), float64], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */
}

def @func_12311() -> (Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32]) {
  @func_12309() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32]) */
}

def @func_13226() -> (Tensor[(11, 3, 14), float64],) {
  %767 = fn () -> (Tensor[(11, 3, 14), float64],) {
    %765 = @func_9757() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64]) */;
    %766 = %765.4;
    (%766,)
  };
  %767() /* ty=(Tensor[(11, 3, 14), float64],) */
}

def @func_12124() -> (Tensor[(2, 20), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64]) {
  @func_12122() /* ty=(Tensor[(2, 20), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64]) */
}

def @func_11819(%var_11817: Tensor[(15, 3, 11), float64], %var_11818: Tensor[(15, 3, 11), float64]) -> Tensor[(15, 3, 11), float64] {
  %772 = fn (%var_11809: Tensor[(15, 3, 11), float64], %var_11810: Tensor[(15, 3, 11), float64]) -> Tensor[(15, 3, 11), float64] {
    %768 = cast(%var_11810, dtype="float64") /* ty=Tensor[(15, 3, 11), float64] */;
    %769 = shape_of(%var_11809, dtype="int32") /* ty=Tensor[(3), int32] */;
    %770 = cast(%var_11809, dtype="float64") /* ty=Tensor[(15, 3, 11), float64] */;
    %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%770, %771) /* ty=Tensor[(15, 3, 11), float64] */
  };
  %772(%var_11817, %var_11818) /* ty=Tensor[(15, 3, 11), float64] */
}

def @func_5213() -> Tensor[(12, 5, 4), float64] {
  @func_5211() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_12774(%var_12772: Tensor[(15, 4, 2), float32]) -> Tensor[(15, 4, 2), float32] {
  @func_12771(%var_12772) /* ty=Tensor[(15, 4, 2), float32] */
}

def @func_10332(%var_10294: Tensor[(224), float32]) -> (Tensor[(12, 5, 4), float32], Tensor[(2, 20), float32], Tensor[(224), float32]) {
  %773 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %774 = cast(%var_10294, dtype="float32") /* ty=Tensor[(224), float32] */;
  %775 = reshape(%774, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %776 = @func_6074(%775) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(2, 20), float32], Tensor[(16, 1, 14), float32], Tensor[(224), float32]) */;
  %777 = %773.0;
  %778 = %776.2;
  (%777, %778, %var_10294)
}

def @func_11067() -> Tensor[(12, 5, 4), float64] {
  %779 = fn () -> Tensor[(12, 5, 4), float64] {
    @func_9291() /* ty=Tensor[(12, 5, 4), float64] */
  };
  %779() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_5791() -> Tensor[(11, 3, 14), float64] {
  %780 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %780.1
}

def @func_12209() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32]) {
  %781 = @func_9503() /* ty=(Tensor[(2, 20), float32],) */;
  %782 = @func_8445() /* ty=Tensor[(2, 20), float32] */;
  %783 = %781.0;
  (%782, %783)
}

def @func_8606() -> Tensor[(2, 20), float32] {
  %784 = fn () -> Tensor[(2, 20), float32] {
    @func_6781() /* ty=Tensor[(2, 20), float32] */
  };
  %784() /* ty=Tensor[(2, 20), float32] */
}

def @func_1031(%var_1028: Tensor[(6, 16, 7), float32]) -> Tensor[(6, 16, 7), float32] {
  %785 = cast(%var_1028, dtype="float32") /* ty=Tensor[(6, 16, 7), float32] */;
  atan(%785) /* ty=Tensor[(6, 16, 7), float32] */
}

def @func_5137() -> (Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) {
  %786 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 20), float32] */, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %787 = reshape(%786, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float32] */;
  %788 = @func_3673(%787) /* ty=(Tensor[(10, 2, 2), float32], Tensor[(11, 3, 14), float64], Tensor[(462), float64]) */;
  %789 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 20), float32] */, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %790 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(2, 20), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %791 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 20), float32] */, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %793 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 20), float32] */, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %794 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 20), float32] */, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %795 = reshape(%794, newshape=[10, 2, 2]) /* ty=Tensor[(10, 2, 2), float32] */;
  %796 = @func_3673(%795) /* ty=(Tensor[(10, 2, 2), float32], Tensor[(11, 3, 14), float64], Tensor[(462), float64]) */;
  %797 = %796.1;
  %798 = cast(%797, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
  %799 = @func_4900() /* ty=Tensor[(12, 5, 4), float32] */;
  %800 = %788.1;
  %801 = not_equal(%791, %792) /* ty=Tensor[(2, 20), bool] */;
  %802 = sinh(%793) /* ty=Tensor[(2, 20), float32] */;
  %803 = sin(%798) /* ty=Tensor[(11, 3, 14), float64] */;
  (%799, %800, %801, %802, %803)
}

def @func_7103(%var_7082: Tensor[(180), float32]) -> (Tensor[(78), float32], Tensor[(12, 5, 4), float64], Tensor[(78), float32], Tensor[(12, 5, 4), float64], Tensor[(2912), float64], Tensor[(180), float32]) {
  %804 = @func_6692() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 3, 5), float32], Tensor[(78), float64], Tensor[(2, 20), float32]) */;
  %805 = %804.2;
  %806 = cast(%805, dtype="float32") /* ty=Tensor[(78), float32] */;
  %807 = cast(%805, dtype="float32") /* ty=Tensor[(78), float32] */;
  %808 = @func_6984() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64]) */;
  %809 = cast(%var_7082, dtype="float32") /* ty=Tensor[(180), float32] */;
  %810 = %808.0;
  %811 = cast(%810, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %812 = reshape(%809, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %813 = reshape(%811, newshape=[12, 5, 4]) /* ty=Tensor[(12, 5, 4), float64] */;
  %814 = @func_5964(%812, %813) /* ty=(Tensor[(6, 16, 7), float32], Tensor[(180), float32], Tensor[(12, 5, 4), bool], Tensor[(2912), float64]) */;
  %815 = cosh(%806) /* ty=Tensor[(78), float32] */;
  %816 = @func_6937() /* ty=Tensor[(12, 5, 4), float64] */;
  %817 = tan(%807) /* ty=Tensor[(78), float32] */;
  %818 = %814.3;
  (%815, %816, %817, %810, %818, %var_7082)
}

def @func_11621() -> (Tensor[(12, 5, 4), float64],) {
  %819 = @func_8712() /* ty=Tensor[(12, 5, 4), float64] */;
  (%819,)
}

def @func_5432() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32]) {
  @func_5430() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */
}

def @func_9448(%var_9446: Tensor[(16, 14), float32]) -> (Tensor[(2, 20), float32], Tensor[(180), float32], Tensor[(16, 14), float32], Tensor[(672), float32]) {
  @func_9445(%var_9446) /* ty=(Tensor[(2, 20), float32], Tensor[(180), float32], Tensor[(16, 14), float32], Tensor[(672), float32]) */
}

def @func_8802() -> (Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) {
  %823 = fn () -> (Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) {
    %820 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
    %821 = %820.0;
    %822 = @func_7326() /* ty=Tensor[(11, 3, 14), float64] */;
    (%821, %822)
  };
  %823() /* ty=(Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */
}

def @func_8871() -> Tensor[(12, 5, 4), float32] {
  @func_8869() /* ty=Tensor[(12, 5, 4), float32] */
}

def @func_7722() -> (Tensor[(12, 5, 4), float64],) {
  %824 = @func_7176() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32]) */;
  %825 = %824.1;
  (%825,)
}

def @func_9651(%var_9650: Tensor[(4, 6, 2), float32]) -> Tensor[(4, 6, 2), float32] {
  %827 = fn (%var_9626: Tensor[(4, 6, 2), float32]) -> Tensor[(4, 6, 2), float32] {
    %826 = cast(%var_9626, dtype="float32") /* ty=Tensor[(4, 6, 2), float32] */;
    cosh(%826) /* ty=Tensor[(4, 6, 2), float32] */
  };
  %827(%var_9650) /* ty=Tensor[(4, 6, 2), float32] */
}

def @func_4992(%var_4968: Tensor[(15, 2, 13), int32], %var_4969: Tensor[(15, 2, 13), int32], %var_4982: Tensor[(180), float32]) -> (Tensor[(15, 2, 13), int32], Tensor[(12, 5, 4), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) {
  %828 = cast(%var_4969, dtype="int32") /* ty=Tensor[(15, 2, 13), int32] */;
  %829 = shape_of(%var_4968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(%var_4968, dtype="int32") /* ty=Tensor[(15, 2, 13), int32] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %832 = cast(%var_4982, dtype="float32") /* ty=Tensor[(180), float32] */;
  %833 = reshape(%832, newshape=[12, 3, 5]) /* ty=Tensor[(12, 3, 5), float32] */;
  %834 = @func_528(%833) /* ty=(Tensor[(12, 3, 5), float32],) */;
  %835 = right_shift(%830, %831) /* ty=Tensor[(15, 2, 13), int32] */;
  %836 = @func_4900() /* ty=Tensor[(12, 5, 4), float32] */;
  %837 = %834.0;
  (%835, %836, %837, %var_4982)
}

def @func_13075() -> Tensor[(12, 5, 4), float64] {
  %838 = fn () -> Tensor[(12, 5, 4), float64] {
    @func_6761() /* ty=Tensor[(12, 5, 4), float64] */
  };
  %838() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_7612(%var_7604: Tensor[(560, 2), float64]) -> (Tensor[(12, 5, 4), float32], Tensor[(10, 14, 8), float64], Tensor[(560, 2), float32]) {
  %839 = @func_6633() /* ty=Tensor[(12, 5, 4), float64] */;
  %840 = cast(%839, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
  %841 = cast(%var_7604, dtype="float64") /* ty=Tensor[(560, 2), float64] */;
  %842 = cast(%var_7604, dtype="float64") /* ty=Tensor[(560, 2), float64] */;
  %843 = reshape(%841, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %844 = reshape(%842, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %845 = @func_2735(%843, %844) /* ty=(Tensor[(10, 14, 8), float64],) */;
  %846 = cast(%var_7604, dtype="float32") /* ty=Tensor[(560, 2), float32] */;
  %847 = sin(%840) /* ty=Tensor[(12, 5, 4), float32] */;
  %848 = %845.0;
  %849 = rsqrt(%846) /* ty=Tensor[(560, 2), float32] */;
  (%847, %848, %849)
}

def @func_10177(%var_10112: Tensor[(12, 5, 4), float64]) -> (Tensor[(2, 20), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), bool], Tensor[(180), float32], Tensor[(1120), float64], Tensor[(1120), float64]) {
  %850 = @func_5430() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float32]) */;
  %851 = @func_8712() /* ty=Tensor[(12, 5, 4), float64] */;
  %852 = cast(%var_10112, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %853 = shape_of(%851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %854 = cast(%851, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %856 = cast(%851, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
  %857 = shape_of(%var_10112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %858 = cast(%var_10112, dtype="bool") /* ty=Tensor[(12, 5, 4), bool] */;
  %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %860 = cast(meta[relay.Constant][46] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %861 = reshape(%860, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %862 = @func_9171(%861) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(180), float32], Tensor[(672), float32], Tensor[(1120), float64], Tensor[(10, 14, 8), float32]) */;
  %863 = cast(meta[relay.Constant][46] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %864 = reshape(%863, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %865 = @func_9171(%864) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(180), float32], Tensor[(672), float32], Tensor[(1120), float64], Tensor[(10, 14, 8), float32]) */;
  %866 = %850.1;
  %867 = multiply(%854, %855) /* ty=Tensor[(12, 5, 4), float64] */;
  %868 = less_equal(%858, %859) /* ty=Tensor[(12, 5, 4), bool] */;
  %869 = %862.1;
  %870 = %865.3;
  (%866, %867, %868, %869, meta[relay.Constant][46] /* ty=Tensor[(1120), float64] */, %870)
}

def @func_11807(%var_11806: Tensor[(390), int32]) -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(390), int32], Tensor[(12, 5, 4), float64]) {
  %878 = fn (%var_11793: Tensor[(390), int32]) -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(390), int32], Tensor[(12, 5, 4), float64]) {
    %871 = cast(%var_11793, dtype="int32") /* ty=Tensor[(390), int32] */;
    %872 = reshape(%871, newshape=[390]) /* ty=Tensor[(390), int32] */;
    %873 = @func_11181(%872) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(390), int32], Tensor[(180), float32]) */;
    %874 = @func_6761() /* ty=Tensor[(12, 5, 4), float64] */;
    %875 = @func_10386() /* ty=Tensor[(12, 5, 4), float64] */;
    %876 = %873.0;
    %877 = @func_6633() /* ty=Tensor[(12, 5, 4), float64] */;
    (%874, %875, %876, %var_11793, %877)
  };
  %878(%var_11806) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64], Tensor[(390), int32], Tensor[(12, 5, 4), float64]) */
}

def @func_13448() -> Tensor[(12, 5, 4), float64] {
  %880 = fn () -> Tensor[(12, 5, 4), float64] {
    %879 = @func_5558() /* ty=(Tensor[(12, 5, 4), float64],) */;
    %879.0
  };
  %880() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_6300() -> Tensor[(12, 5, 4), float64] {
  %881 = fn () -> Tensor[(12, 5, 4), float64] {
    @func_6158() /* ty=Tensor[(12, 5, 4), float64] */
  };
  %881() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_9010() -> (Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) {
  %886 = fn () -> (Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) {
    %882 = @func_6299() /* ty=Tensor[(12, 5, 4), float64] */;
    %883 = cast(%882, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
    %884 = log10(%883) /* ty=Tensor[(12, 5, 4), float64] */;
    %885 = @func_6528() /* ty=Tensor[(2, 20), float32] */;
    (%884, %885)
  };
  %886() /* ty=(Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) */
}

def @func_7952(%var_7950: Tensor[(2, 20), float32]) -> Tensor[(2, 20), float32] {
  @func_7949(%var_7950) /* ty=Tensor[(2, 20), float32] */
}

def @func_8390(%var_8388: Tensor[(224), float32], %var_8389: Tensor[(672), float32]) -> (Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(16, 1, 14), float32], Tensor[(224), float32], Tensor[(180), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32]) {
  %907 = fn (%var_8367: Tensor[(224), float32], %var_8373: Tensor[(672), float32]) -> (Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(16, 1, 14), float32], Tensor[(224), float32], Tensor[(180), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32]) {
    %887 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
    %888 = @func_7722() /* ty=(Tensor[(12, 5, 4), float64],) */;
    %889 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
    %890 = cast(%var_8367, dtype="float32") /* ty=Tensor[(224), float32] */;
    %891 = reshape(%890, newshape=[16, 1, 14]) /* ty=Tensor[(16, 1, 14), float32] */;
    %892 = cast(-8.34294f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %893 = cast(meta[relay.Constant][47] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
    %894 = cast(meta[relay.Constant][48] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %895 = cast(%var_8373, dtype="float32") /* ty=Tensor[(672), float32] */;
    %896 = reshape(%892, newshape=[]) /* ty=float64 */;
    %897 = reshape(%893, newshape=[1, 16, 12]) /* ty=Tensor[(1, 16, 12), float64] */;
    %898 = reshape(%894, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %899 = reshape(%895, newshape=[672]) /* ty=Tensor[(672), float32] */;
    %900 = @func_1666(%896, %897, %898, %899) /* ty=(Tensor[(1, 16, 12), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(6, 16, 7), float32], Tensor[(672), float32]) */;
    %901 = %887.0;
    %902 = @func_5791() /* ty=Tensor[(11, 3, 14), float64] */;
    %903 = %888.0;
    %904 = %889.0;
    %905 = @func_4688(%891) /* ty=Tensor[(16, 1, 14), float32] */;
    %906 = %900.2;
    (%901, %902, %903, %904, %905, %var_8367, %906, -8.34294f64 /* ty=float64 */, meta[relay.Constant][47] /* ty=Tensor[(192), float64] */, meta[relay.Constant][48] /* ty=Tensor[(180), float32] */, %var_8373)
  };
  %907(%var_8388, %var_8389) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32], Tensor[(16, 1, 14), float32], Tensor[(224), float32], Tensor[(180), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32]) */
}

def @func_5159() -> (Tensor[(2, 20), float32],) {
  %908 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
  %909 = %908.3;
  (%909,)
}

def @func_5490(%var_5488: Tensor[(1, 462), float64], %var_5489: Tensor[(180), float32]) -> (Tensor[(2, 20), float32], Tensor[(48), float32], Tensor[(700), float64], Tensor[(1, 462), float64], Tensor[(180), float32]) {
  %920 = fn (%var_5482: Tensor[(1, 462), float64], %var_5483: Tensor[(180), float32]) -> (Tensor[(2, 20), float32], Tensor[(48), float32], Tensor[(700), float64], Tensor[(1, 462), float64], Tensor[(180), float32]) {
    %910 = @func_5137() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(11, 3, 14), float64], Tensor[(2, 20), bool], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) */;
    %911 = cast(meta[relay.Constant][49] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
    %912 = cast(%var_5482, dtype="float64") /* ty=Tensor[(1, 462), float64] */;
    %913 = cast(%var_5483, dtype="float32") /* ty=Tensor[(180), float32] */;
    %914 = reshape(%911, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float64] */;
    %915 = reshape(%912, newshape=[231, 2]) /* ty=Tensor[(231, 2), float64] */;
    %916 = reshape(%913, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %917 = @func_4115(%914, %915, %916) /* ty=(Tensor[(12, 6, 16), float64], Tensor[(1152), float64], Tensor[(11, 3, 14), float64], Tensor[(231, 2), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(5, 10, 14), int64], Tensor[(6, 16, 7), float32], Tensor[(2912), bool], float64, Tensor[(48), float32], Tensor[(192), float64]) */;
    %918 = %910.3;
    %919 = %917.10;
    (%918, %919, meta[relay.Constant][49] /* ty=Tensor[(700), float64] */, %var_5482, %var_5483)
  };
  %920(%var_5488, %var_5489) /* ty=(Tensor[(2, 20), float32], Tensor[(48), float32], Tensor[(700), float64], Tensor[(1, 462), float64], Tensor[(180), float32]) */
}

def @func_8546() -> (Tensor[(12, 5, 4), float64],) {
  %921 = @func_6158() /* ty=Tensor[(12, 5, 4), float64] */;
  %922 = cast(%921, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
  %923 = tan(%922) /* ty=Tensor[(12, 5, 4), float64] */;
  (%923,)
}

def @func_12256() -> (Tensor[(2, 20), float32],) {
  %924 = @func_8445() /* ty=Tensor[(2, 20), float32] */;
  (%924,)
}

def @func_9293() -> Tensor[(12, 5, 4), float64] {
  @func_9291() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_2114(%var_2089: Tensor[(12, 6, 16), float64]) -> Tensor[(12, 6, 16), float64] {
  %925 = cast(%var_2089, dtype="float64") /* ty=Tensor[(12, 6, 16), float64] */;
  log10(%925) /* ty=Tensor[(12, 6, 16), float64] */
}

def @func_8087(%var_8086: Tensor[(672), float32]) -> (Tensor[(12, 5, 4), float32], Tensor[(180), float32], Tensor[(192, 1), float64], Tensor[(180), float32], Tensor[(672), float32]) {
  %938 = fn (%var_8080: Tensor[(672), float32]) -> (Tensor[(12, 5, 4), float32], Tensor[(180), float32], Tensor[(192, 1), float64], Tensor[(180), float32], Tensor[(672), float32]) {
    %926 = @func_7120() /* ty=(Tensor[(12, 5, 4), float32],) */;
    %927 = %926.0;
    %928 = cast(%927, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
    %929 = cast(meta[relay.Constant][50] /* ty=Tensor[(192, 1), float64] */, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
    %930 = cast(meta[relay.Constant][51] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %931 = cast(%var_8080, dtype="float32") /* ty=Tensor[(672), float32] */;
    %932 = reshape(%929, newshape=[192]) /* ty=Tensor[(192), float64] */;
    %933 = reshape(%930, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %934 = reshape(%931, newshape=[672]) /* ty=Tensor[(672), float32] */;
    %935 = @func_5997(%932, %933, %934) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(6, 16, 7), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32], Tensor[(2, 20), float32]) */;
    %936 = sigmoid(%928) /* ty=Tensor[(12, 5, 4), float32] */;
    %937 = %935.4;
    (%936, %937, meta[relay.Constant][50] /* ty=Tensor[(192, 1), float64] */, meta[relay.Constant][51] /* ty=Tensor[(180), float32] */, %var_8080)
  };
  %938(%var_8086) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(180), float32], Tensor[(192, 1), float64], Tensor[(180), float32], Tensor[(672), float32]) */
}

def @func_10957() -> (Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), float64]) {
  @func_10955() /* ty=(Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), float64]) */
}

def @func_8467() -> (Tensor[(2, 20), float32],) {
  %939 = @func_8331() /* ty=(Tensor[(2, 20), float32], Tensor[(2, 20), float64]) */;
  %940 = %939.0;
  (%940,)
}

def @func_3266(%var_3259: Tensor[(11, 3, 14), float64]) -> Tensor[(11, 3, 14), float64] {
  %941 = cast(%var_3259, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
  asin(%941) /* ty=Tensor[(11, 3, 14), float64] */
}

def @func_8446() -> Tensor[(2, 20), float32] {
  %943 = fn () -> Tensor[(2, 20), float32] {
    %942 = @func_6692() /* ty=(Tensor[(2, 20), float32], Tensor[(12, 3, 5), float32], Tensor[(78), float64], Tensor[(2, 20), float32]) */;
    %942.0
  };
  %943() /* ty=Tensor[(2, 20), float32] */
}

def @func_10229() -> (Tensor[(12, 5, 4), float32],) {
  %946 = fn () -> (Tensor[(12, 5, 4), float32],) {
    %944 = @func_6707() /* ty=(Tensor[(12, 5, 4), float32],) */;
    %945 = %944.0;
    (%945,)
  };
  %946() /* ty=(Tensor[(12, 5, 4), float32],) */
}

def @func_9474() -> (Tensor[(2, 20), float32],) {
  %947 = @func_7227() /* ty=(Tensor[(2, 20), float32],) */;
  %948 = %947.0;
  (%948,)
}

def @func_5650() -> Tensor[(12, 5, 4), float64] {
  %949 = fn () -> Tensor[(12, 5, 4), float64] {
    @func_5379() /* ty=Tensor[(12, 5, 4), float64] */
  };
  %949() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_13119() -> (Tensor[(12, 5, 4), float32],) {
  %952 = fn () -> (Tensor[(12, 5, 4), float32],) {
    %950 = @func_12041() /* ty=(Tensor[(12, 5, 4), float32], Tensor[(12, 5, 4), float64]) */;
    %951 = %950.0;
    (%951,)
  };
  %952() /* ty=(Tensor[(12, 5, 4), float32],) */
}

def @func_5430() -> (Tensor[(2, 20), float32], Tensor[(2, 20), float32]) {
  %953 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %954 = @func_5159() /* ty=(Tensor[(2, 20), float32],) */;
  %955 = %953.0;
  %956 = %954.0;
  (%955, %956)
}

def @func_12910(%var_12905: Tensor[(240), float32]) -> (Tensor[(2, 20), float32], Tensor[(12, 6, 16), float64], Tensor[(1152), float64], float64, Tensor[(240), float32]) {
  %957 = @func_11034() /* ty=(Tensor[(2, 20), float32], Tensor[(168, 4), int64]) */;
  %958 = cast(meta[relay.Constant][52] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %959 = reshape(%958, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float64] */;
  %960 = cast(%var_12905, dtype="float32") /* ty=Tensor[(240), float32] */;
  %961 = reshape(%960, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %962 = @func_11596(%961) /* ty=(Tensor[(2, 20), float32], float64, Tensor[(700), float64], Tensor[(12, 5, 4), float32], Tensor[(240), float32], Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float64]) */;
  %963 = %957.0;
  %964 = @func_2114(%959) /* ty=Tensor[(12, 6, 16), float64] */;
  %965 = %962.1;
  (%963, %964, meta[relay.Constant][52] /* ty=Tensor[(1152), float64] */, %965, %var_12905)
}

def @func_5968(%var_5966: Tensor[(180), float32], %var_5967: Tensor[(12, 5, 4), float64]) -> (Tensor[(6, 16, 7), float32], Tensor[(180), float32], Tensor[(12, 5, 4), bool], Tensor[(2912), float64]) {
  @func_5964(%var_5966, %var_5967) /* ty=(Tensor[(6, 16, 7), float32], Tensor[(180), float32], Tensor[(12, 5, 4), bool], Tensor[(2912), float64]) */
}

def @func_10699(%var_10696: uint16, %var_10697: Tensor[(180), float32], %var_10698: Tensor[(2, 336), float32]) -> (Tensor[(12, 5, 4), float64], Tensor[(7, 11, 7), uint16], uint16, Tensor[(11, 49), uint16], Tensor[(2, 20), float32], Tensor[(192), float64], Tensor[(180), float32], Tensor[(2, 336), float32]) {
  %982 = fn (%var_10678: uint16, %var_10687: Tensor[(180), float32], %var_10688: Tensor[(2, 336), float32]) -> (Tensor[(12, 5, 4), float64], Tensor[(7, 11, 7), uint16], uint16, Tensor[(11, 49), uint16], Tensor[(2, 20), float32], Tensor[(192), float64], Tensor[(180), float32], Tensor[(2, 336), float32]) {
    %966 = @func_9216() /* ty=(Tensor[(12, 3, 5), float32], Tensor[(12, 5, 4), float64], Tensor[(2, 20), float32]) */;
    %967 = cast(%var_10678, dtype="uint16") /* ty=uint16 */;
    %968 = cast(meta[relay.Constant][53] /* ty=Tensor[(11, 49), uint16] */, dtype="uint16") /* ty=Tensor[(11, 49), uint16] */;
    %969 = reshape(%967, newshape=[]) /* ty=uint16 */;
    %970 = reshape(%968, newshape=[7, 11, 7]) /* ty=Tensor[(7, 11, 7), uint16] */;
    %971 = @func_6185(%969, %970) /* ty=(Tensor[(7, 11, 7), uint16],) */;
    %972 = cast(meta[relay.Constant][54] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
    %973 = cast(%var_10687, dtype="float32") /* ty=Tensor[(180), float32] */;
    %974 = cast(%var_10688, dtype="float32") /* ty=Tensor[(2, 336), float32] */;
    %975 = reshape(%972, newshape=[192]) /* ty=Tensor[(192), float64] */;
    %976 = reshape(%973, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %977 = reshape(%974, newshape=[672]) /* ty=Tensor[(672), float32] */;
    %978 = @func_5997(%975, %976, %977) /* ty=(Tensor[(12, 5, 4), float32], Tensor[(6, 16, 7), float32], float64, Tensor[(192), float64], Tensor[(180), float32], Tensor[(672), float32], Tensor[(2, 20), float32]) */;
    %979 = %966.1;
    %980 = %971.0;
    %981 = %978.6;
    (%979, %980, %var_10678, meta[relay.Constant][53] /* ty=Tensor[(11, 49), uint16] */, %981, meta[relay.Constant][54] /* ty=Tensor[(192), float64] */, %var_10687, %var_10688)
  };
  %982(%var_10696, %var_10697, %var_10698) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(7, 11, 7), uint16], uint16, Tensor[(11, 49), uint16], Tensor[(2, 20), float32], Tensor[(192), float64], Tensor[(180), float32], Tensor[(2, 336), float32]) */
}

def @func_11183(%var_11182: Tensor[(390), int32]) -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(390), int32], Tensor[(180), float32]) {
  %993 = fn (%var_11153: Tensor[(390), int32]) -> (Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(390), int32], Tensor[(180), float32]) {
    %983 = @func_5558() /* ty=(Tensor[(12, 5, 4), float64],) */;
    %984 = cast(%var_11153, dtype="int32") /* ty=Tensor[(390), int32] */;
    %985 = cast(%var_11153, dtype="int32") /* ty=Tensor[(390), int32] */;
    %986 = cast(meta[relay.Constant][55] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %987 = reshape(%984, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int32] */;
    %988 = reshape(%985, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int32] */;
    %989 = reshape(%986, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %990 = @func_4992(%987, %988, %989) /* ty=(Tensor[(15, 2, 13), int32], Tensor[(12, 5, 4), float32], Tensor[(12, 3, 5), float32], Tensor[(180), float32]) */;
    %991 = %983.0;
    %992 = %990.1;
    (%991, %992, %var_11153, meta[relay.Constant][55] /* ty=Tensor[(180), float32] */)
  };
  %993(%var_11182) /* ty=(Tensor[(12, 5, 4), float64], Tensor[(12, 5, 4), float32], Tensor[(390), int32], Tensor[(180), float32]) */
}

def @func_6999(%var_6998: Tensor[(12, 5, 4), float32]) -> (Tensor[(12, 5, 4), float32],) {
  %1000 = fn (%var_6990: Tensor[(12, 5, 4), float32]) -> (Tensor[(12, 5, 4), float32],) {
    %994 = @func_5672() /* ty=Tensor[(12, 5, 4), float32] */;
    %995 = cast(%var_6990, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
    %996 = shape_of(%994, dtype="int32") /* ty=Tensor[(3), int32] */;
    %997 = cast(%994, dtype="float32") /* ty=Tensor[(12, 5, 4), float32] */;
    %998 = dyn.reshape(%995, %996, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %999 = mod(%997, %998) /* ty=Tensor[(12, 5, 4), float32] */;
    (%999,)
  };
  %1000(%var_6998) /* ty=(Tensor[(12, 5, 4), float32],) */
}

def @func_5380() -> Tensor[(12, 5, 4), float64] {
  %1006 = fn () -> Tensor[(12, 5, 4), float64] {
    %1001 = @func_4900() /* ty=Tensor[(12, 5, 4), float32] */;
    %1002 = cast(meta[relay.Constant][56] /* ty=Tensor[(12, 5, 4), float32] */, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
    %1003 = shape_of(%1001, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1004 = cast(%1001, dtype="float64") /* ty=Tensor[(12, 5, 4), float64] */;
    %1005 = dyn.reshape(%1002, %1003, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%1004, %1005) /* ty=Tensor[(12, 5, 4), float64] */
  };
  %1006() /* ty=Tensor[(12, 5, 4), float64] */
}

def @func_11337() -> Tensor[(11, 3, 14), float64] {
  %1008 = fn () -> Tensor[(11, 3, 14), float64] {
    %1007 = @func_8417() /* ty=(Tensor[(11, 3, 14), float64], Tensor[(11, 3, 14), float64]) */;
    %1007.1
  };
  %1008() /* ty=Tensor[(11, 3, 14), float64] */
}

def @func_7949(%var_7940: Tensor[(2, 20), float32]) -> Tensor[(2, 20), float32] {
  %1009 = @func_7227() /* ty=(Tensor[(2, 20), float32],) */;
  %1010 = %1009.0;
  %1011 = cast(%var_7940, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %1012 = shape_of(%1010, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1013 = cast(%1010, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  divide(%1013, %1014) /* ty=Tensor[(2, 20), float32] */
}

def @func_531(%var_529: Tensor[(12, 3, 5), float32]) -> (Tensor[(12, 3, 5), float32],) {
  @func_528(%var_529) /* ty=(Tensor[(12, 3, 5), float32],) */
}

def @func_5610(%var_5608: Tensor[(2, 20), float32]) -> Tensor[(2, 20), int8] {
  @func_5607(%var_5608) /* ty=Tensor[(2, 20), int8] */
}

def @func_7121() -> (Tensor[(12, 5, 4), float32],) {
  %1016 = fn () -> (Tensor[(12, 5, 4), float32],) {
    %1015 = @func_5672() /* ty=Tensor[(12, 5, 4), float32] */;
    (%1015,)
  };
  %1016() /* ty=(Tensor[(12, 5, 4), float32],) */
}

def @func_1666(%var_1637: float64, %var_1638: Tensor[(1, 16, 12), float64], %var_1651: Tensor[(180), float32], %var_1659: Tensor[(672), float32]) -> (Tensor[(1, 16, 12), float64], Tensor[(12, 3, 5), float32], Tensor[(180), float32], Tensor[(6, 16, 7), float32], Tensor[(672), float32]) {
  %1017 = cast(%var_1637, dtype="float64") /* ty=float64 */;
  %1018 = cast(%var_1638, dtype="float64") /* ty=Tensor[(1, 16, 12), float64] */;
  %1019 = cast(%var_1651, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1020 = reshape(%1019, newshape=[12, 3, 5]) /* ty=Tensor[(12, 3, 5), float32] */;
  %1021 = @func_528(%1020) /* ty=(Tensor[(12, 3, 5), float32],) */;
  %1022 = cast(%var_1659, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1023 = reshape(%1022, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float32] */;
  %1024 = mod(%1017, %1018) /* ty=Tensor[(1, 16, 12), float64] */;
  %1025 = %1021.0;
  %1026 = @func_1031(%1023) /* ty=Tensor[(6, 16, 7), float32] */;
  (%1024, %1025, %var_1651, %1026, %var_1659)
}

def @func_8170(%var_8142: Tensor[(462), float64]) -> (Tensor[(12, 5, 4), float64], Tensor[(11, 3, 14), float64], Tensor[(462), float64], Tensor[(2, 20), float32], Tensor[(11, 3, 14), float64]) {
  %1027 = cast(%var_8142, dtype="float64") /* ty=Tensor[(462), float64] */;
  %1028 = reshape(%1027, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
  %1029 = @func_5735() /* ty=(Tensor[(2, 20), float32],) */;
  %1030 = cast(%var_8142, dtype="float64") /* ty=Tensor[(462), float64] */;
  %1031 = reshape(%1030, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float64] */;
  %1032 = @func_6158() /* ty=Tensor[(12, 5, 4), float64] */;
  %1033 = @func_3266(%1028) /* ty=Tensor[(11, 3, 14), float64] */;
  %1034 = %1029.0;
  %1035 = @func_3266(%1031) /* ty=Tensor[(11, 3, 14), float64] */;
  (%1032, %1033, %var_8142, %1034, %1035)
}

def @func_5186() -> (Tensor[(12, 5, 4), float32],) {
  %1037 = fn () -> (Tensor[(12, 5, 4), float32],) {
    %1036 = @func_4900() /* ty=Tensor[(12, 5, 4), float32] */;
    (%1036,)
  };
  %1037() /* ty=(Tensor[(12, 5, 4), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen712/build/output.py:3300: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen712/build/output.py", line 3305, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(468) tvmgen_default_fused_erf_cast_atan_kernel0(double* __restrict__ T_atan, float* __restrict__ placeholder) {
  T_atan[(((int)threadIdx.x))] = atan(((double)erff(placeholder[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_519 = relay.var("var_519", dtype = "float32", shape = (12, 3, 5))#candidate|519|(12, 3, 5)|var|float32
uop_520 = relay.cosh(var_519.astype('float32')) # shape=(12, 3, 5)
output = relay.Tuple([uop_520,])
output2 = relay.Tuple([uop_520,])
func_528 = relay.Function([var_519,], output)
mod['func_528'] = func_528
mod = relay.transform.InferType()(mod)
mutated_mod['func_528'] = func_528
mutated_mod = relay.transform.InferType()(mutated_mod)
var_529 = relay.var("var_529", dtype = "float32", shape = (12, 3, 5))#candidate|529|(12, 3, 5)|var|float32
func_528_call = mutated_mod.get_global_var('func_528')
call_530 = func_528_call(var_529)
output = call_530
func_531 = relay.Function([var_529], output)
mutated_mod['func_531'] = func_531
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1028 = relay.var("var_1028", dtype = "float32", shape = (6, 16, 7))#candidate|1028|(6, 16, 7)|var|float32
uop_1029 = relay.atan(var_1028.astype('float32')) # shape=(6, 16, 7)
output = uop_1029
output2 = uop_1029
func_1031 = relay.Function([var_1028,], output)
mod['func_1031'] = func_1031
mod = relay.transform.InferType()(mod)
mutated_mod['func_1031'] = func_1031
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1032 = relay.var("var_1032", dtype = "float32", shape = (6, 16, 7))#candidate|1032|(6, 16, 7)|var|float32
func_1031_call = mutated_mod.get_global_var('func_1031')
call_1033 = func_1031_call(var_1032)
output = call_1033
func_1034 = relay.Function([var_1032], output)
mutated_mod['func_1034'] = func_1034
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1637 = relay.var("var_1637", dtype = "float64", shape = ())#candidate|1637|()|var|float64
var_1638 = relay.var("var_1638", dtype = "float64", shape = (1, 16, 12))#candidate|1638|(1, 16, 12)|var|float64
bop_1639 = relay.mod(var_1637.astype('float64'), var_1638.astype('float64')) # shape=(1, 16, 12)
func_528_call = mod.get_global_var('func_528')
func_531_call = mutated_mod.get_global_var('func_531')
var_1651 = relay.var("var_1651", dtype = "float32", shape = (180,))#candidate|1651|(180,)|var|float32
call_1650 = relay.TupleGetItem(func_528_call(relay.reshape(var_1651.astype('float32'), [12, 3, 5])), 0)
call_1652 = relay.TupleGetItem(func_531_call(relay.reshape(var_1651.astype('float32'), [12, 3, 5])), 0)
func_1031_call = mod.get_global_var('func_1031')
func_1034_call = mutated_mod.get_global_var('func_1034')
var_1659 = relay.var("var_1659", dtype = "float32", shape = (672,))#candidate|1659|(672,)|var|float32
call_1658 = func_1031_call(relay.reshape(var_1659.astype('float32'), [6, 16, 7]))
call_1660 = func_1031_call(relay.reshape(var_1659.astype('float32'), [6, 16, 7]))
output = relay.Tuple([bop_1639,call_1650,var_1651,call_1658,var_1659,])
output2 = relay.Tuple([bop_1639,call_1652,var_1651,call_1660,var_1659,])
func_1666 = relay.Function([var_1637,var_1638,var_1651,var_1659,], output)
mod['func_1666'] = func_1666
mod = relay.transform.InferType()(mod)
mutated_mod['func_1666'] = func_1666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1666_call = mutated_mod.get_global_var('func_1666')
var_1668 = relay.var("var_1668", dtype = "float64", shape = ())#candidate|1668|()|var|float64
var_1669 = relay.var("var_1669", dtype = "float64", shape = (1, 16, 12))#candidate|1669|(1, 16, 12)|var|float64
var_1670 = relay.var("var_1670", dtype = "float32", shape = (180,))#candidate|1670|(180,)|var|float32
var_1671 = relay.var("var_1671", dtype = "float32", shape = (672,))#candidate|1671|(672,)|var|float32
call_1667 = func_1666_call(var_1668,var_1669,var_1670,var_1671,)
output = call_1667
func_1672 = relay.Function([var_1668,var_1669,var_1670,var_1671,], output)
mutated_mod['func_1672'] = func_1672
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2036 = relay.var("var_2036", dtype = "bool", shape = (16, 14, 13))#candidate|2036|(16, 14, 13)|var|bool
var_2037 = relay.var("var_2037", dtype = "bool", shape = (16, 14, 13))#candidate|2037|(16, 14, 13)|var|bool
bop_2038 = relay.logical_and(var_2036.astype('bool'), relay.reshape(var_2037.astype('bool'), relay.shape_of(var_2036))) # shape=(16, 14, 13)
func_1031_call = mod.get_global_var('func_1031')
func_1034_call = mutated_mod.get_global_var('func_1034')
const_2048 = relay.const([-8.140432,9.981396,-6.022502,-0.438119,5.405491,1.437407,-8.107991,-9.462503,-1.599888,5.501962,-4.758529,5.730301,-2.286982,2.053983,6.897996,-0.727064,-2.920239,-5.134043,-7.178452,8.332028,3.365342,1.955968,-2.406966,-4.815824,7.746621,-4.904572,-1.825250,-3.237308,-4.324941,-3.667872,8.934487,0.192389,6.608260,-5.465685,-4.255888,9.772347,-2.345852,-5.498338,4.599490,2.181559,-3.913892,-8.700310,-5.195817,7.726814,-4.022800,-2.004171,0.069008,-7.251370,-9.874738,-8.827062,-8.994855,-4.319324,6.572277,9.851004,6.154043,5.791202,-9.083752,4.226119,-9.738426,0.135033,-3.218230,-7.579256,9.015381,-8.739817,6.828974,4.864191,9.153096,2.747082,-7.443692,6.838364,7.664142,7.798118,-4.565903,-1.332939,-0.509013,3.103577,-8.885827,-9.189468,-8.828053,5.918217,5.974989,0.515158,-9.288734,6.289359,8.031249,-3.421275,7.310080,-0.564991,-3.598015,-1.105837,-5.322594,-2.303255,1.402021,0.682163,3.198887,-3.467286,5.058075,3.562890,-0.423554,-9.633166,5.851682,-9.074565,-9.264859,-1.801925,-5.989481,1.575955,4.807825,4.745111,-4.612637,-9.993591,3.230479,4.119176,8.070525,-3.821067,3.151140,8.600600,9.610998,-9.741233,8.048859,2.359426,9.543719,-7.222827,-0.838934,-8.097804,-6.929722,-1.295965,6.887195,-6.246721,2.563817,-0.309576,9.569803,9.273804,1.262105,3.522839,1.411626,-9.858507,4.935431,1.899587,-4.290037,5.855150,-2.590260,-0.530188,0.966326,-9.812975,3.675545,9.127223,5.229166,-0.723970,-5.519277,2.276875,-2.129092,5.210170,-5.635757,6.423549,-1.213503,-4.542575,-0.795424,-7.048144,7.059966,-6.887716,3.805715,-9.453304,0.412108,3.500058,-2.934090,8.711489,3.349127,-1.548975,8.529360,-1.849437,-2.978257,-1.058046,-7.553678,-7.388104,-2.570418,-2.724579,7.106815,-9.390389,9.546361,-0.750483,-5.863231,-5.858166,-3.690664,6.140515,-8.475509,8.710962,-2.967684,-4.436009,-2.824409,8.766823,7.840540,-7.177492,-9.030967,0.931019,7.178484,9.621639,6.192012,5.936235,-7.023574,3.253751,-2.963317,-6.467173,6.306796,8.813173,1.097443,-8.433495,3.857139,9.568752,6.500621,9.048626,8.249230,-9.901358,1.501621,-1.765057,-6.469380,-2.981449,9.590287,-8.271535,6.551305,-5.496754,-1.410947,-1.800469,-6.892375,4.686232,-1.473385,-2.605981,3.091770,3.930472,-2.386800,-6.433608,6.377767,3.087042,8.439936,8.786541,-5.345547,-2.508678,-3.554386,-6.149121,-9.397235,-6.428974,-7.270460,-3.786236,1.965391,-8.798909,-4.375063,2.015733,-6.221278,-2.389056,-5.249424,-2.676100,4.068787,1.501233,5.050113,-5.662733,4.318986,8.807163,9.979534,8.777491,4.415940,-1.285567,-1.526286,4.324142,2.865661,9.793327,-0.796642,-4.755985,-5.950537,3.142582,2.253947,8.221784,2.179689,-2.905850,5.131778,3.716621,-0.449903,-4.368894,2.073185,5.343235,6.257560,-8.784403,-8.030782,3.453960,-5.263044,0.669090,9.939732,-3.479035,4.950851,1.326801,-0.346767,8.345263,9.749843,-2.151320,5.152677,8.744154,-3.693506,-1.960339,-9.247210,6.910233,4.290683,-6.032049,4.380320,8.800530,7.434660,0.198553,9.501509,-3.696931,-8.894808,-7.790741,-9.243106,-3.157730,9.626569,-2.630220,3.692308,0.772010,-9.798032,6.489650,-4.296944,-6.090604,2.253560,-5.371782,-4.428629,3.989322,6.095746,-2.538434,6.514123,-5.245160,-4.408256,-4.809178,-0.826483,-5.765434,2.808171,-6.726555,-5.684207,-0.826999,1.625332,-4.694527,7.593117,-1.846834,1.250519,1.347918,-2.514019,-8.412392,-8.263468,-7.864547,-7.110532,1.379492,-2.382783,5.027230,-1.628399,-0.014020,-0.561395,0.817837,2.943800,-1.271611,-4.693967,2.813254,4.067751,7.122466,1.924685,-5.779844,-6.947492,5.708925,-5.468779,6.887061,-8.052689,-5.181561,8.604272,1.627827,1.683327,5.459150,7.394389,-9.835119,-6.009968,-4.235902,3.726064,9.746421,-5.118845,-5.028068,-9.764946,9.044611,-4.675080,0.451222,6.310771,-9.706265,4.004731,-7.904411,-6.325729,7.612757,6.703588,-7.328473,9.173849,-2.485799,9.193761,-0.969508,5.810561,-8.277083,6.929004,6.332477,-9.554229,4.723547,6.609438,-1.273502,0.611070,1.379100,9.634338,7.688248,7.384997,-0.151491,8.927778,-3.171106,-7.881565,-2.718145,4.046667,-9.515018,5.597284,9.520798,-4.512345,-6.216460,2.882647,-6.172503,-1.337086,5.548407,6.702144,-7.836004,-9.957746,1.135151,7.805244,-1.808637,3.098985,2.751299,6.255256,-8.817748,-9.264072,5.484769,-8.510765,1.117091,6.720909,-8.317822,-1.964273,3.461123,-7.636204,-7.070837,-2.176013,-7.936885,8.219591,-2.362768,-4.745995,-4.171493,-2.871417,-0.704029,0.461211,1.223475,2.809217,-0.637577,-1.081102,-1.685380,-1.489318,-8.724073,-7.633920,7.951811,-2.597157,-4.050834,-1.936609,-4.565752,-9.345968,4.437401,-3.455707,-8.917153,-3.696787,8.835706,0.692479,1.231509,-9.370236,-0.338401,-5.906248,1.204392,-0.025149,0.217273,-8.766554,6.353988,8.892807,5.827872,8.344095,3.499044,-7.245929,-2.288810,-7.989792,1.764502,8.659201,5.573121,9.491806,2.839817,-1.855956,-3.420424,-2.485256,2.471182,-7.443607,7.923552,3.764152,-7.225021,7.773445,3.777027,-5.056567,2.046102,-9.461440,-3.896820,0.499026,6.155201,-6.717071,-0.857091,4.909240,-4.326773,-3.259169,4.719811,-5.866836,2.348653,-3.026867,-7.988504,-3.542942,2.088343,-8.912025,-0.446622,6.607736,-5.906056,-1.473184,-9.029647,-5.126322,9.767711,-1.375696,-4.377651,-2.784188,-7.007542,-6.190150,-0.200493,-5.171551,-9.559400,1.949033,-0.581041,-6.207762,-6.678900,-5.962678,1.471064,-3.316714,7.451245,2.375175,9.780714,-6.553101,4.416175,-3.048701,0.485870,8.673178,-4.668822,-7.112567,3.588912,5.114572,4.552658,-0.255358,-6.883958,-2.175024,8.940204,-2.809861,5.501888,-0.555838,8.833452,-9.362542,-4.949903,-4.421629,-9.293900,3.158777,-7.458802,-9.281067,-9.972946,-3.174987,5.581866,3.942435,-4.685576,5.472225,-4.106631,-7.796420,7.236236,-8.641962,-1.272547,-3.694572,9.996733,-7.445666,-1.124543,-4.887122,5.624848,6.357815,4.630134,6.126310,-0.149847,3.980937,0.808542,9.768315,2.424235,-8.602035,-3.188205,-8.590855,-8.965920,7.985215,9.460677,-1.128294,-5.235578,5.061373,-4.715067,-5.530612,-1.037956,8.529463,7.682730,-7.897667,-4.395561,3.510460,9.133861,-2.603906,-4.025999,-0.694738,6.566512,0.747039,-5.304092,6.747115,3.232664,-8.306634,-1.420316,1.469819,-7.548613,-5.164030,-7.466677,6.895933,8.683177,-1.566379,-7.134097,-3.810477,0.578890,9.612968,-9.209284,-1.029552,-5.519830,4.314586,-5.416537,6.155977,-6.623728,5.814008,8.983521,-7.818276,-6.636917,-1.666032,4.965955,9.374660,-9.576228,1.300160,6.778563,2.894798,-3.221692,-0.183687,6.965282,0.464098,6.421277,7.774432,3.426729,-2.854870,-2.020206,-6.246951,9.739306,-1.333109,6.996305,-3.065995,6.079166,-1.089598,0.628970,-8.488072,-4.936773], dtype = "float32")#candidate|2048|(672,)|const|float32
call_2047 = func_1031_call(relay.reshape(const_2048.astype('float32'), [6, 16, 7]))
call_2049 = func_1031_call(relay.reshape(const_2048.astype('float32'), [6, 16, 7]))
func_1031_call = mod.get_global_var('func_1031')
func_1034_call = mutated_mod.get_global_var('func_1034')
call_2055 = func_1031_call(relay.reshape(const_2048.astype('float32'), [6, 16, 7]))
call_2056 = func_1031_call(relay.reshape(const_2048.astype('float32'), [6, 16, 7]))
func_528_call = mod.get_global_var('func_528')
func_531_call = mutated_mod.get_global_var('func_531')
var_2065 = relay.var("var_2065", dtype = "float32", shape = (180,))#candidate|2065|(180,)|var|float32
call_2064 = relay.TupleGetItem(func_528_call(relay.reshape(var_2065.astype('float32'), [12, 3, 5])), 0)
call_2066 = relay.TupleGetItem(func_531_call(relay.reshape(var_2065.astype('float32'), [12, 3, 5])), 0)
output = relay.Tuple([bop_2038,call_2047,const_2048,call_2055,call_2064,var_2065,])
output2 = relay.Tuple([bop_2038,call_2049,const_2048,call_2056,call_2066,var_2065,])
func_2073 = relay.Function([var_2036,var_2037,var_2065,], output)
mod['func_2073'] = func_2073
mod = relay.transform.InferType()(mod)
var_2074 = relay.var("var_2074", dtype = "bool", shape = (16, 14, 13))#candidate|2074|(16, 14, 13)|var|bool
var_2075 = relay.var("var_2075", dtype = "bool", shape = (16, 14, 13))#candidate|2075|(16, 14, 13)|var|bool
var_2076 = relay.var("var_2076", dtype = "float32", shape = (180,))#candidate|2076|(180,)|var|float32
output = func_2073(var_2074,var_2075,var_2076,)
func_2077 = relay.Function([var_2074,var_2075,var_2076,], output)
mutated_mod['func_2077'] = func_2077
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2089 = relay.var("var_2089", dtype = "float64", shape = (12, 6, 16))#candidate|2089|(12, 6, 16)|var|float64
uop_2090 = relay.log10(var_2089.astype('float64')) # shape=(12, 6, 16)
output = uop_2090
output2 = uop_2090
func_2114 = relay.Function([var_2089,], output)
mod['func_2114'] = func_2114
mod = relay.transform.InferType()(mod)
mutated_mod['func_2114'] = func_2114
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2115 = relay.var("var_2115", dtype = "float64", shape = (12, 6, 16))#candidate|2115|(12, 6, 16)|var|float64
func_2114_call = mutated_mod.get_global_var('func_2114')
call_2116 = func_2114_call(var_2115)
output = call_2116
func_2117 = relay.Function([var_2115], output)
mutated_mod['func_2117'] = func_2117
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2506 = relay.const(3.916678, dtype = "float64")#candidate|2506|()|const|float64
var_2507 = relay.var("var_2507", dtype = "float64", shape = (1, 6, 13))#candidate|2507|(1, 6, 13)|var|float64
bop_2508 = relay.power(const_2506.astype('float64'), var_2507.astype('float64')) # shape=(1, 6, 13)
func_528_call = mod.get_global_var('func_528')
func_531_call = mutated_mod.get_global_var('func_531')
const_2520 = relay.const([-4.487434,6.017737,-0.812118,-6.396986,-3.438318,-9.784394,1.885851,6.055150,-2.685666,-2.020254,-3.332558,-0.707638,-4.606803,-6.651445,-9.282601,7.157270,-2.064168,-9.783835,8.464400,5.670145,8.999817,-1.724575,4.848201,-3.557449,-8.843976,6.897566,-5.148001,-7.817677,-9.780009,2.243368,-1.234299,9.552620,2.600604,2.428245,-8.072004,-5.788338,-0.780329,-4.872157,-2.017398,9.755089,8.407488,-7.723390,6.530042,-4.922881,7.530244,-2.400008,-4.280672,-5.244462,2.255805,-5.304790,-1.168643,4.522780,4.133061,-5.240615,4.333854,0.707028,6.329695,-7.875803,-1.654041,-8.543533,-6.642693,9.357245,-5.972561,-5.108769,4.437828,1.918665,0.763711,6.197717,0.199947,2.748723,9.489513,1.337284,-9.184854,2.511919,1.519854,-9.649019,5.791783,-7.604552,3.057329,6.004556,-4.573438,-2.220431,-8.270306,-4.558472,-9.976721,-1.828550,-6.606449,-7.452699,5.587033,9.311302,0.576948,7.286390,8.768776,-6.779148,-2.638231,-7.990827,-8.369633,2.206077,-6.014635,-5.374364,8.457976,-6.432200,9.091838,-7.904274,9.492745,0.350077,7.785163,6.732810,-2.781538,8.326980,6.175930,2.687044,-7.403396,-4.034960,8.635741,6.759209,8.710006,-4.590400,-8.141765,-9.447393,6.038620,-6.981907,-5.544835,2.095660,6.430430,3.695968,-2.577505,7.599989,0.060064,4.797869,-5.497816,1.908599,9.829750,-4.662743,-0.738908,1.346088,-7.574378,-8.437124,5.229319,-8.337402,-1.473424,6.120650,-6.812520,-5.277337,1.508277,-0.750365,-3.425812,6.358397,-0.077539,-3.121121,-8.152730,-1.351996,8.101813,6.216780,-4.287869,-3.524160,-6.333916,-1.718487,-8.644528,-5.846577,-6.704887,3.400985,8.207817,-4.162958,1.693502,-0.903233,-6.802619,-1.579884,-3.687548,-3.013369,1.559338,2.202723,3.607929,9.664725,-4.394944,1.964603,-4.785697,-1.884907,8.001909,1.490753], dtype = "float32")#candidate|2520|(180,)|const|float32
call_2519 = relay.TupleGetItem(func_528_call(relay.reshape(const_2520.astype('float32'), [12, 3, 5])), 0)
call_2521 = relay.TupleGetItem(func_531_call(relay.reshape(const_2520.astype('float32'), [12, 3, 5])), 0)
output = relay.Tuple([bop_2508,call_2519,const_2520,])
output2 = relay.Tuple([bop_2508,call_2521,const_2520,])
func_2525 = relay.Function([var_2507,], output)
mod['func_2525'] = func_2525
mod = relay.transform.InferType()(mod)
var_2526 = relay.var("var_2526", dtype = "float64", shape = (1, 6, 13))#candidate|2526|(1, 6, 13)|var|float64
output = func_2525(var_2526)
func_2527 = relay.Function([var_2526], output)
mutated_mod['func_2527'] = func_2527
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2730 = relay.var("var_2730", dtype = "float64", shape = (10, 14, 8))#candidate|2730|(10, 14, 8)|var|float64
var_2731 = relay.var("var_2731", dtype = "float64", shape = (10, 14, 8))#candidate|2731|(10, 14, 8)|var|float64
bop_2732 = relay.floor_divide(var_2730.astype('float64'), relay.reshape(var_2731.astype('float64'), relay.shape_of(var_2730))) # shape=(10, 14, 8)
output = relay.Tuple([bop_2732,])
output2 = relay.Tuple([bop_2732,])
func_2735 = relay.Function([var_2730,var_2731,], output)
mod['func_2735'] = func_2735
mod = relay.transform.InferType()(mod)
mutated_mod['func_2735'] = func_2735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2735_call = mutated_mod.get_global_var('func_2735')
var_2737 = relay.var("var_2737", dtype = "float64", shape = (10, 14, 8))#candidate|2737|(10, 14, 8)|var|float64
var_2738 = relay.var("var_2738", dtype = "float64", shape = (10, 14, 8))#candidate|2738|(10, 14, 8)|var|float64
call_2736 = func_2735_call(var_2737,var_2738,)
output = call_2736
func_2739 = relay.Function([var_2737,var_2738,], output)
mutated_mod['func_2739'] = func_2739
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3259 = relay.var("var_3259", dtype = "float64", shape = (11, 3, 14))#candidate|3259|(11, 3, 14)|var|float64
uop_3260 = relay.asin(var_3259.astype('float64')) # shape=(11, 3, 14)
output = uop_3260
output2 = uop_3260
func_3266 = relay.Function([var_3259,], output)
mod['func_3266'] = func_3266
mod = relay.transform.InferType()(mod)
mutated_mod['func_3266'] = func_3266
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3267 = relay.var("var_3267", dtype = "float64", shape = (11, 3, 14))#candidate|3267|(11, 3, 14)|var|float64
func_3266_call = mutated_mod.get_global_var('func_3266')
call_3268 = func_3266_call(var_3267)
output = call_3268
func_3269 = relay.Function([var_3267], output)
mutated_mod['func_3269'] = func_3269
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3637 = relay.var("var_3637", dtype = "float32", shape = (10, 2, 2))#candidate|3637|(10, 2, 2)|var|float32
uop_3638 = relay.log2(var_3637.astype('float32')) # shape=(10, 2, 2)
func_3266_call = mod.get_global_var('func_3266')
func_3269_call = mutated_mod.get_global_var('func_3269')
const_3659 = relay.const([9.313498,9.572518,-6.998556,0.444972,-6.220018,-9.180940,-6.481825,8.158730,0.799979,2.251536,5.222319,-2.882904,2.414852,-0.703356,9.412698,-0.801690,2.689999,-0.030471,5.682953,-3.677672,-6.637381,3.960775,-1.236804,5.455481,3.637187,3.063434,9.421460,9.844145,-0.760948,7.680823,3.019473,5.798579,-9.574041,-0.493791,8.990608,7.278849,0.743105,-7.153718,-1.142509,-0.108157,6.861534,-4.038650,3.965122,8.100804,4.783238,9.111002,-1.686684,0.476304,-4.346825,-8.541140,-5.651442,-1.145449,2.756354,-9.285196,-6.343908,0.596094,-4.247577,0.509436,-5.274687,0.576730,4.254233,-0.647522,3.406924,-9.726308,7.294968,4.341799,3.354098,-5.468388,4.350242,-3.790039,8.859073,7.540709,9.653319,1.077170,1.181700,-3.188426,1.178590,-7.053110,-3.927167,-4.716427,6.041096,-6.122723,8.151093,9.137767,8.450295,2.992874,-9.274260,-6.890704,4.593350,1.605905,-8.876456,4.004416,-6.491212,3.797335,1.080112,-1.231375,9.107057,3.506093,2.788631,0.232969,-3.749729,6.378058,5.612463,-7.508441,1.529878,3.056820,7.160858,9.671008,-6.859842,4.695553,7.891999,6.880288,-6.480447,7.078617,7.086050,-3.615222,4.143063,-7.722553,1.493635,5.260954,-8.915051,-6.748700,-1.862508,7.271473,-1.122953,-4.050881,0.111262,0.836398,-4.530247,6.385339,8.645107,3.533998,-3.964743,-4.596783,-6.744450,-8.150098,-9.940231,0.643276,6.248385,-0.208458,3.038749,0.649653,-7.522113,-8.876245,7.382794,-2.782501,2.451544,-3.275359,-2.776627,2.297017,-5.608758,0.213343,-2.370264,9.467168,-5.197250,-7.011307,-7.958327,-2.934327,-0.027005,6.928567,-9.799016,-3.626311,4.566613,3.116556,9.865448,3.439841,1.501993,8.553668,7.318428,7.009034,-0.847930,9.193516,0.674059,6.685435,-9.702614,2.252170,-9.087517,-7.311865,-5.140041,9.006544,-3.286431,-7.750502,-9.684648,5.868559,-8.596077,6.888169,-4.498265,-9.004387,-8.450552,3.742991,-0.682682,3.078033,5.975539,0.022314,-3.964985,1.232653,3.348279,-4.878994,7.880084,1.566421,-8.554977,-3.833932,7.729925,-8.322057,-5.510380,-1.536038,-9.254795,-8.488086,6.495151,-5.172303,-6.387947,-9.106537,9.800554,7.773248,-3.577111,-8.914617,5.128937,-0.915744,5.172823,-3.928801,-7.205478,0.615142,7.263324,-7.369180,2.426571,-0.841344,7.349938,6.818503,1.767260,3.358646,1.891491,-6.026387,3.313252,0.244376,1.333403,-7.355686,-9.758137,-6.379293,4.727052,-9.907366,9.012388,6.621433,1.060662,4.970402,0.335008,-1.979087,8.805848,-0.362505,1.988243,4.884756,7.507297,0.332872,5.722590,1.968238,-7.102279,7.553669,-4.815157,-7.912685,6.024860,-4.641416,4.865282,0.953724,4.767522,5.676226,1.492737,1.150575,-9.836037,-0.454475,3.668317,4.108957,2.050441,0.303899,6.177016,1.202306,-1.863737,2.784892,1.042748,-4.483769,-0.332481,7.488880,-4.819653,4.124566,9.015685,4.815053,7.592514,8.538035,4.003083,8.366856,-0.298444,-7.424314,-8.176338,-9.932932,-3.185995,8.874894,-3.184653,3.369761,8.016202,-3.805117,-3.967106,8.979528,-6.643781,1.848883,-4.493649,-2.655306,5.836199,9.005157,-4.073394,4.017461,-9.197173,-5.810482,-3.233222,6.435803,-9.960567,-5.895911,8.528172,-4.300673,-9.012939,-3.227062,-9.006359,-1.890711,5.287844,-8.784163,3.638783,-7.348362,-3.533796,2.660142,-4.580060,-2.800853,-4.107333,-2.228860,2.520338,9.574052,-9.024211,-5.069074,-0.204566,-8.109298,-1.842868,0.274685,5.728813,4.786521,-0.806342,-1.325224,2.922284,3.520918,3.955188,-2.620382,4.219734,7.483364,2.817443,-0.942323,-0.120687,5.347871,8.027141,-7.590785,-7.930940,-5.243198,-9.415789,-6.750050,-9.217056,1.396540,4.477920,-9.287748,4.033689,-9.088367,9.578532,-7.781923,3.418734,-7.716610,6.311923,3.357783,-4.392208,-5.460497,-6.494261,-5.871951,4.929187,0.840418,3.780795,2.510143,3.299318,5.118672,-8.791432,-6.009355,7.011643,7.817175,4.732692,2.189218,-2.335743,2.230258,-8.287351,6.352420,9.180709,-5.386396,-7.553610,-3.339616,0.296838,-7.644241,1.896818,3.655390,3.541558,3.054038,-3.757765,-3.386203,0.488682,9.174368,-4.973232,9.759596,2.740237,-6.309716,2.055070,4.567663,6.949274,-5.959103,-3.268250,6.449362,-2.635884,2.396086,4.151411,-6.610426,9.667584,-3.956743,-4.886277,1.086991,4.857683,-3.661871,-5.358010,1.369317,9.917423,0.828278,-6.654913,-8.129072,1.840865,9.611541,1.486399,4.347985,7.221070,-7.072435,1.896725,-6.348745,-7.136131,5.127739,-8.034584,-3.295763,2.789769,-4.858047,-4.110880,-7.002237,-2.501397,8.961824,8.447180,-7.521120,-6.193615,7.501812,-1.584954,7.930808,-5.848772,-6.206240,8.441894,-3.119458,-3.949594,-4.060814,1.757200,-2.061273], dtype = "float64")#candidate|3659|(462,)|const|float64
call_3658 = func_3266_call(relay.reshape(const_3659.astype('float64'), [11, 3, 14]))
call_3660 = func_3266_call(relay.reshape(const_3659.astype('float64'), [11, 3, 14]))
output = relay.Tuple([uop_3638,call_3658,const_3659,])
output2 = relay.Tuple([uop_3638,call_3660,const_3659,])
func_3673 = relay.Function([var_3637,], output)
mod['func_3673'] = func_3673
mod = relay.transform.InferType()(mod)
var_3674 = relay.var("var_3674", dtype = "float32", shape = (10, 2, 2))#candidate|3674|(10, 2, 2)|var|float32
output = func_3673(var_3674)
func_3675 = relay.Function([var_3674], output)
mutated_mod['func_3675'] = func_3675
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3888 = relay.var("var_3888", dtype = "float32", shape = (12, 2, 2))#candidate|3888|(12, 2, 2)|var|float32
uop_3889 = relay.atanh(var_3888.astype('float32')) # shape=(12, 2, 2)
func_3673_call = mod.get_global_var('func_3673')
func_3675_call = mutated_mod.get_global_var('func_3675')
const_3911 = relay.const([-4.450580,3.028534,7.651293,9.206226,7.958289,4.582578,7.670560,-0.302443,-6.029623,5.118775,6.530863,-4.624949,-9.772321,-7.476543,4.783281,-1.393175,2.041692,4.714243,-4.157239,3.805857,-7.766537,6.460637,-0.143538,2.961690,9.789903,-7.350992,-5.842287,3.736816,8.139753,-7.285573,-0.774013,-2.749133,-4.231324,-8.507513,1.575403,-9.254258,3.755693,2.967909,8.699002,-9.594161], dtype = "float32")#candidate|3911|(40,)|const|float32
call_3910 = relay.TupleGetItem(func_3673_call(relay.reshape(const_3911.astype('float32'), [10, 2, 2])), 0)
call_3912 = relay.TupleGetItem(func_3675_call(relay.reshape(const_3911.astype('float32'), [10, 2, 2])), 0)
func_528_call = mod.get_global_var('func_528')
func_531_call = mutated_mod.get_global_var('func_531')
const_3916 = relay.const([-5.168028,-9.624573,5.479915,-7.271887,3.321146,6.381941,2.432375,1.203803,-9.116514,6.758426,-2.045867,-0.665923,2.953493,4.312760,1.545315,5.633011,-8.200180,2.205342,1.880647,-2.121301,8.364511,-5.082273,-5.699678,8.580294,-2.925386,-6.873920,7.046969,8.781184,-3.631940,8.661513,0.726411,9.797980,-2.468757,-8.086828,-4.175643,-3.367548,-0.328686,8.851605,-6.177488,2.731898,5.572595,-8.169247,5.958526,-7.906049,-4.763892,1.606933,-6.311461,3.225044,-3.787397,-9.069457,-9.917251,-5.860063,0.247613,7.691342,6.739723,6.883601,-4.835410,7.935671,3.482336,-0.356374,0.968162,7.792849,-0.518532,-0.191089,-9.630688,-3.825816,4.105775,6.218055,-0.973124,0.285784,-4.595191,-6.963190,-4.680516,-7.890992,3.010453,7.299874,-4.365432,4.028860,4.163257,7.883066,-6.285116,-0.395172,8.366957,4.056744,-0.817349,7.720596,7.973766,2.560785,0.964959,3.192439,-1.949139,3.439964,9.167788,-7.348092,-5.965609,1.248683,9.989002,-6.691470,8.140405,-8.753958,-2.332603,-0.441125,7.482267,2.366279,7.328973,-3.957738,7.055427,9.760911,-0.099848,7.285987,8.982179,7.638169,-4.705859,6.698742,3.573927,1.729841,0.392294,7.891927,-4.572577,9.430347,2.863573,5.268903,7.217675,-3.650659,-7.772789,-8.032545,-5.809180,-8.495148,-2.922846,-7.610537,0.511848,6.389931,-9.032564,-2.848599,-2.794430,-1.338508,9.358522,-9.531380,-3.783428,-6.930504,6.489557,3.628626,-5.893545,-2.836345,1.841448,7.473475,3.124649,-3.406504,5.660650,-8.243925,-2.667194,-4.794528,-6.904404,0.151861,2.318503,-5.875509,-0.787451,-7.620869,7.221902,7.295022,5.034954,-7.467651,-9.418608,-3.564971,3.063632,3.377203,-2.249959,4.283133,-7.596253,4.933274,-2.856689,-2.486325,8.064236,4.644635,-8.226908,-8.439171,7.800494,-3.044873,4.952137,-2.796608], dtype = "float32")#candidate|3916|(180,)|const|float32
call_3915 = relay.TupleGetItem(func_528_call(relay.reshape(const_3916.astype('float32'), [12, 3, 5])), 0)
call_3917 = relay.TupleGetItem(func_531_call(relay.reshape(const_3916.astype('float32'), [12, 3, 5])), 0)
func_1666_call = mod.get_global_var('func_1666')
func_1672_call = mutated_mod.get_global_var('func_1672')
const_3923 = relay.const(7.815996, dtype = "float64")#candidate|3923|()|const|float64
var_3924 = relay.var("var_3924", dtype = "float64", shape = (2, 96))#candidate|3924|(2, 96)|var|float64
const_3925 = relay.const([5.934893,-2.334392,1.050820,-6.163304,-6.403127,-9.058466,-9.084283,-2.162532,-2.330070,-1.586580,-6.085665,3.302610,8.018838,1.961396,-1.623151,-1.588690,2.112150,6.559024,1.329935,7.364353,6.597926,0.922006,0.526442,1.943708,-2.907463,-3.101945,3.633664,5.907889,-6.832073,8.849906,5.796739,-8.937759,2.177793,4.459275,0.958799,-5.069644,-6.306801,-9.897924,8.069133,5.800093,5.532088,6.266118,7.961981,4.914821,1.378096,2.260323,-3.616551,-6.176705,1.503714,4.825602,-4.308321,1.951238,5.201591,7.824919,-4.176036,-3.493130,-5.311391,-8.814366,-0.394921,7.871569,-7.753377,-9.779055,-6.610823,-5.979346,-2.668635,-6.689220,-0.810693,-2.266696,4.764508,-5.015574,-0.722355,9.156832,-1.713722,4.231984,1.765265,8.839164,3.962785,8.070465,-2.104909,8.881008,2.397749,0.872663,8.419976,2.597932,6.884421,-1.839041,8.448153,8.393918,4.650260,-0.063159,1.291105,7.878176,-5.256750,8.304752,-6.716806,4.919271,-8.861756,4.291953,-1.133052,2.666418,8.325505,-4.413204,2.808032,-7.780135,-3.304596,-1.785456,-2.390768,-2.386517,-0.378975,1.016593,-8.623121,-1.335113,-0.176679,-0.603187,-6.847813,-8.963347,-5.916708,-4.356931,-8.758564,-5.404553,-0.729534,4.019453,-4.327042,0.469896,0.560978,-4.479796,2.461579,-2.104379,-7.819067,7.967645,-8.797527,-6.494956,-9.046782,0.832820,-9.904175,4.342462,-6.506166,7.217754,-8.599173,2.046267,-0.310431,2.238159,-1.959062,9.120570,-6.538607,8.025992,-2.505742,7.995688,3.051362,-3.256791,7.814460,-9.689411,-4.842117,-4.242638,-9.454361,-2.406832,8.027745,-3.747569,7.225717,7.299948,-3.538061,0.464487,-6.717942,9.483982,1.750070,2.676802,2.905875,-5.295663,-5.524137,-9.242083,-6.096813,0.457369,-6.611874,6.377963,7.263819,-7.434871,6.207137,-1.296154,-5.183865,8.960612,5.607133,-1.998655,-4.939359,-1.714268,-8.258366,0.013734,9.063773,-2.381169,8.441397,-3.485282,-4.905126,-7.547755,-3.184816,-7.848287,9.897683,-4.861835,-6.172758,8.521937,6.774985,8.318334,2.804033,-2.847859,5.443385,-5.261511,-1.822870,2.618352,5.862817,-5.006323,5.091917,8.977626,1.070969,7.034429,-5.820812,-1.543298,8.254578,6.656971,3.371136,6.462646,0.563274,5.912990,-7.735332,-7.878530,-2.892719,2.374069,0.892346,-4.286199,-0.822005,6.159583,0.013881,-5.072466,6.923435,3.021169,6.499985,-4.724371,-7.910698,-3.738090,-7.386891,5.273491,-8.316595,-5.221577,5.029121,-8.512552,1.604532,-6.669011,2.652724,9.880086,4.051225,2.709804,5.792130,5.812938,0.467616,0.026447,-5.316096,3.097480,6.300736,2.139452,-6.761765,9.949107,1.984614,-2.048471,-3.676846,1.932710,-6.661127,0.123394,-1.237647,-4.592202,-5.762589,-0.303291,-5.916473,3.924779,6.206768,-4.644265,-5.012473,0.739423,9.455516,4.862414,0.299764,5.174060,8.871281,-5.281297,5.654151,-6.529325,-1.936585,2.200920,-8.533477,-0.725347,6.382375,4.427270,-3.301197,7.446622,0.343212,-6.174246,2.590017,-9.047887,-8.721931,1.506253,5.130843,7.846244,-2.957527,-5.026420,-2.239352,-3.744737,6.902488,9.844209,3.349105,-8.590365,3.741117,8.973928,-6.629160,-4.251295,-8.730012,6.246087,2.221745,0.772021,2.728076,-3.415543,2.930301,8.242861,-4.547276,-0.823806,1.967161,-3.376323,9.658189,8.746625,-6.755266,-2.795217,1.966928,-5.458718,7.601825,-8.990512,-0.365037,-0.563321,-3.125466,-9.550538,-4.415069,-3.298170,5.372750,8.438730,-8.699400,2.674324,-6.757720,-4.310907,1.487982,-8.312366,-8.651700,1.434326,7.023786,-1.702409,8.205052,-2.845801,-1.174227,3.181850,-8.429655,-2.406088,3.796518,9.547461,-2.639119,-0.793584,-6.435946,-5.203896,6.687472,5.580770,7.794821,-9.592871,4.404277,-0.756612,9.866199,7.192799,-2.218394,5.976271,7.592604,9.408004,-8.215770,1.150065,-8.452730,9.324959,4.180415,-1.209116,7.577221,2.850270,-7.439341,-9.723264,6.046935,7.139876,4.597694,-1.101503,0.071624,-2.824937,8.853317,-2.199838,1.257801,1.325812,2.581225,4.783110,8.822009,1.333504,7.838999,8.821942,5.490612,-0.826991,8.755942,-7.851194,7.206522,-8.640904,-7.709169,-7.298799,5.517275,4.699615,-1.765385,8.723887,7.151312,9.846504,-9.883601,-9.882423,8.715360,-2.872658,9.168847,8.474212,-3.685426,8.540123,-6.218595,-9.949177,5.144204,-9.504753,4.089714,4.654186,-8.900191,0.617340,-6.380966,2.725969,-9.120180,-6.837076,-3.798597,-4.613677,-3.383090,8.811630,-5.287179,-7.530600,0.527950,4.664695,-0.850324,-7.006443,1.460227,0.842262,5.756237,7.642836,-0.666316,9.495209,3.453583,6.654110,2.671407,-3.421019,2.910963,1.280927,-3.117031,8.069633,-1.042385,2.539417,3.307725,7.124993,1.539687,-8.256277,-9.607013,-9.099460,-4.717549,2.068884,8.758947,9.080324,-4.154074,0.873013,3.452473,6.569649,-7.176994,2.821272,7.804743,-1.075084,1.312161,4.654830,-4.077006,1.629012,1.894997,-8.066479,-2.311803,4.034061,6.916390,7.552354,2.810089,-2.041271,-5.574796,8.274358,-6.086942,-4.856739,5.492517,3.117069,-2.595067,-3.069833,-4.686155,-3.366174,-3.678040,2.183892,-9.390666,-4.149166,-3.183185,-6.242812,-6.758697,-5.707787,4.010662,-9.734742,-7.387763,1.181953,-8.461444,2.807393,-2.593068,8.134092,9.554857,-3.887840,-1.884993,-1.790130,3.209170,1.366860,-2.888731,-4.571819,-0.284577,-6.186201,0.087551,9.655968,4.978417,-2.898198,-8.421426,-9.295572,-4.878857,-1.401892,8.205950,3.725728,7.982014,-4.396078,5.662843,1.037415,7.808090,-5.472316,5.417316,-7.436675,-5.456229,3.099811,7.274142,1.664851,-0.768429,-2.430050,-0.429467,8.064911,-4.655398,0.459416,-7.885595,8.441335,6.217831,-6.538322,-7.486098,3.273600,2.404103,6.185392,0.021805,1.864529,-0.653728,9.102115,7.133064,-8.546835,5.515710,2.349941,3.218683,2.559604,4.870035,3.889385,8.947765,-5.567088,6.293748,1.467254,-9.052995,3.981172,-0.719730,7.726708,5.142548,2.478244,-7.562144,-1.389331,3.871686,-4.846739,-3.959148,-7.380738,-0.231087,-2.988973,3.165922,-4.797735,-0.655362,-6.156730,9.264067,1.069202,-6.320335,2.712882,0.803036,-3.639641,2.575508,1.004730,-9.559853,7.242048,3.127666,5.199250,7.061539,-9.611887,5.738427,-2.791459,8.844145,7.671877,-2.960650,-2.245225,-9.333353,0.498641,6.198511,3.838219,-6.862884,-3.359140,6.379935,-4.514709,-2.523496,-9.187113,-2.636703,-8.193023,-9.758547,6.123837,-9.000861,5.921199,-5.795104,-9.134350,2.348379,4.369929,5.717250,1.729688,7.705445,0.047978,5.007288,7.301580,0.561520,0.443216,9.512597,-4.675973,-1.707136,2.720906,-4.826166,-3.298574,8.402093,-1.816724,7.630787,8.964981,5.762509,-2.657883,9.591216,-4.187683,1.712902,-0.301730,-3.932329,-2.255141,-9.131007,7.093741,-8.228276,3.964618,-2.881573,-6.436096,6.642220,-0.418256,-1.697352,8.745977,8.908512,-6.159155], dtype = "float32")#candidate|3925|(672,)|const|float32
call_3922 = relay.TupleGetItem(func_1666_call(relay.reshape(const_3923.astype('float64'), []), relay.reshape(var_3924.astype('float64'), [1, 16, 12]), relay.reshape(call_3915.astype('float32'), [180,]), relay.reshape(const_3925.astype('float32'), [672,]), ), 0)
call_3926 = relay.TupleGetItem(func_1672_call(relay.reshape(const_3923.astype('float64'), []), relay.reshape(var_3924.astype('float64'), [1, 16, 12]), relay.reshape(call_3915.astype('float32'), [180,]), relay.reshape(const_3925.astype('float32'), [672,]), ), 0)
func_1666_call = mod.get_global_var('func_1666')
func_1672_call = mutated_mod.get_global_var('func_1672')
call_3930 = relay.TupleGetItem(func_1666_call(relay.reshape(const_3923.astype('float64'), []), relay.reshape(call_3922.astype('float64'), [1, 16, 12]), relay.reshape(const_3916.astype('float32'), [180,]), relay.reshape(const_3925.astype('float32'), [672,]), ), 1)
call_3931 = relay.TupleGetItem(func_1672_call(relay.reshape(const_3923.astype('float64'), []), relay.reshape(call_3922.astype('float64'), [1, 16, 12]), relay.reshape(const_3916.astype('float32'), [180,]), relay.reshape(const_3925.astype('float32'), [672,]), ), 1)
uop_3940 = relay.sin(uop_3889.astype('float32')) # shape=(12, 2, 2)
bop_3950 = relay.subtract(uop_3940.astype('int32'), relay.reshape(var_3888.astype('int32'), relay.shape_of(uop_3940))) # shape=(12, 2, 2)
output = relay.Tuple([call_3910,const_3911,call_3915,const_3916,call_3922,const_3923,var_3924,const_3925,call_3930,bop_3950,])
output2 = relay.Tuple([call_3912,const_3911,call_3917,const_3916,call_3926,const_3923,var_3924,const_3925,call_3931,bop_3950,])
func_3955 = relay.Function([var_3888,var_3924,], output)
mod['func_3955'] = func_3955
mod = relay.transform.InferType()(mod)
mutated_mod['func_3955'] = func_3955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3955_call = mutated_mod.get_global_var('func_3955')
var_3957 = relay.var("var_3957", dtype = "float32", shape = (12, 2, 2))#candidate|3957|(12, 2, 2)|var|float32
var_3958 = relay.var("var_3958", dtype = "float64", shape = (2, 96))#candidate|3958|(2, 96)|var|float64
call_3956 = func_3955_call(var_3957,var_3958,)
output = call_3956
func_3959 = relay.Function([var_3957,var_3958,], output)
mutated_mod['func_3959'] = func_3959
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4028 = relay.var("var_4028", dtype = "float64", shape = (5, 10, 14))#candidate|4028|(5, 10, 14)|var|float64
uop_4029 = relay.sqrt(var_4028.astype('float64')) # shape=(5, 10, 14)
func_2114_call = mod.get_global_var('func_2114')
func_2117_call = mutated_mod.get_global_var('func_2117')
const_4064 = relay.const([-4.548988,2.879878,-6.862530,0.579885,6.227180,9.593515,2.883077,-8.595061,6.671763,0.274549,-2.198911,1.615380,-8.209067,6.936130,4.114641,9.363528,1.274866,-3.728183,3.252009,6.384724,8.534110,-3.844856,3.190527,8.524583,-5.460507,0.581581,-5.368326,4.924694,-3.620163,-7.121674,3.241257,4.076761,-3.089598,0.995620,7.705459,-3.848055,4.819511,-9.259170,-0.062613,5.016276,-8.938319,3.481896,5.559449,-9.129815,6.002294,8.517356,-5.299120,6.516745,-8.509284,-2.572024,6.278433,-1.241676,8.391602,-6.142226,3.124121,3.237014,-5.887339,-6.948374,0.260398,8.349927,-9.950072,2.957032,-4.177342,2.944697,1.838328,-1.136823,6.082787,3.706058,5.786244,-0.021417,-8.360272,7.635855,-5.325596,-1.690147,-4.764756,8.218607,0.172356,6.749577,5.165618,-4.449732,8.580618,-3.061395,-7.423271,2.652466,8.092740,-1.575660,7.732159,-7.320914,4.910224,4.796242,6.456863,-0.940988,-7.833916,-0.391021,1.508727,-6.142666,7.724639,7.379206,7.316354,-6.076847,-5.639887,-5.435117,-2.614436,9.543880,0.876452,5.529924,8.687072,9.354128,8.108392,-3.334093,1.452935,2.874108,2.859499,-3.659698,-6.918712,7.441435,5.295487,-1.098225,-1.569926,0.462483,4.302521,-1.593658,6.656460,-3.466137,1.484909,8.527612,1.668375,-9.290036,5.745936,6.733952,3.205038,-6.888900,-7.916880,-3.037766,-0.250791,4.211771,-4.490606,6.505699,2.556090,-6.160113,-7.435203,0.275725,4.375480,-4.869672,-8.282565,-0.464164,-4.253112,-3.116739,9.494372,7.068150,3.971527,1.306134,9.277067,9.261322,-2.339294,4.068282,5.462581,8.282613,-0.220474,3.064036,9.523860,-7.971709,-3.562097,3.198854,5.055582,4.063437,0.038572,-1.200153,4.122192,2.066148,-0.195964,-9.980859,-5.956534,-9.441212,4.866693,6.611705,9.350798,-7.430314,2.760895,6.908175,9.513948,2.776654,-8.781874,4.672326,8.634024,9.443923,0.499338,9.343673,5.205785,8.454706,5.882646,-1.708592,-6.782980,-2.203343,-4.107347,2.532889,-9.925432,-5.384165,-6.350329,4.028436,-1.070708,2.038956,-4.129351,3.395516,-0.286642,7.049903,-7.382161,-3.003481,-3.161267,-0.252816,9.926951,-0.264151,-8.078282,-5.143305,-4.834320,-9.273645,-3.797615,2.375122,-0.495243,6.332582,6.173402,-8.716453,-2.974017,-7.586274,6.729700,7.438688,-2.834730,-9.327010,-7.190909,-0.200770,-5.822446,0.200342,-7.839186,-4.411390,-3.497034,-9.291096,-7.613817,7.167906,4.729284,6.398713,-1.686091,6.707960,4.190387,1.644090,-5.832237,-7.269693,-6.743914,-1.348919,-4.997223,8.348285,-9.057479,-2.452441,-3.004144,9.297594,-9.970031,-8.791496,4.473746,9.501396,9.721777,-1.753740,-8.919675,3.252228,-2.691802,-8.247128,-5.006503,2.838393,7.951499,7.120308,1.329183,1.255104,8.836437,-4.163254,-3.849677,0.718713,-0.835227,4.864919,1.446232,5.440546,-0.505351,-3.812911,2.962233,2.156140,-8.150384,-2.485314,9.742108,6.271882,2.994219,3.121394,1.657849,-7.358276,-7.369334,3.389781,-7.457416,-1.600662,-4.849647,7.155314,-7.052400,-4.723297,9.237238,1.235890,-3.721482,4.959378,-3.257112,8.584123,-6.429265,-8.924669,-8.147076,-4.033552,-6.108780,1.637482,2.600925,5.377259,-7.418618,-7.180417,-1.200282,-2.414067,-2.454005,5.328640,5.777101,2.457239,-5.665731,-5.540258,3.539543,8.633632,8.882289,-4.504235,3.569129,0.010720,0.920085,8.993953,9.924180,-6.697655,6.501526,-3.426559,5.897360,-3.973659,1.304761,-2.004008,8.594918,5.070120,-3.603080,-6.177149,6.068352,2.821624,5.032152,-9.994409,5.087891,5.391254,-6.620129,9.511878,5.514064,2.824655,-1.091758,4.536619,6.041325,7.079769,-2.730455,7.461116,5.947231,-5.634787,2.329564,0.289992,4.166857,-1.976110,-0.487821,0.076372,8.315171,5.108729,-5.425357,-1.090294,2.202434,-0.546917,6.462161,8.590261,-1.223110,3.500854,-6.756250,-4.059222,3.555563,-0.705825,-4.068705,2.984019,-1.001623,-3.288609,2.992918,6.213429,-6.522979,-9.634439,7.793102,-0.259106,6.038821,-7.048304,-4.298276,-3.470771,0.473787,5.272131,-9.998586,2.810727,3.407184,-7.340559,-2.201741,2.208356,4.773213,-9.878674,5.614653,-6.369343,5.070931,6.296391,-3.539489,6.658111,-9.370001,5.632916,-5.664977,8.087338,-1.049531,-5.672488,8.722072,7.295628,-2.220635,-8.344027,-4.800483,-2.874577,6.828648,9.368841,1.744647,5.714971,-0.849612,3.294592,9.395789,-7.985111,-8.876893,8.741930,2.622676,-9.647425,-3.190389,6.215381,1.963198,-2.275972,0.252991,-1.402196,4.665321,-4.565157,1.731557,-6.347161,7.216433,-1.035576,7.006628,4.515402,5.793397,-9.423561,-0.480271,-2.145649,-0.167129,-4.117566,4.874466,-5.397487,-5.107604,-0.803781,-7.688064,6.707551,6.696789,1.784433,3.092386,0.479211,-6.429834,-0.481247,-2.612062,6.883866,-9.297580,-7.296412,-6.964331,-8.943842,-9.295455,-8.594856,9.096586,-2.692313,-5.697640,3.618609,-9.853824,-0.986325,0.045485,-2.608219,8.844979,-7.870632,5.738676,0.708646,0.084241,4.592532,-2.136651,8.921425,8.034089,9.157077,5.285166,1.554544,4.053470,3.666336,-1.842205,-1.972198,1.266891,6.289898,-8.777919,-4.066751,-5.947711,0.210552,-6.358827,-1.061076,-0.186698,3.698693,3.877923,7.322464,-8.374682,2.802688,-8.058522,-7.176840,-4.519298,7.046257,8.063448,-8.243130,5.636542,-4.903424,-2.059560,8.557567,-1.176228,7.386375,8.719119,3.379762,9.136720,-9.747706,-1.366462,0.535108,3.419755,3.399204,-5.160889,-0.093688,9.400811,0.850010,-2.519011,-6.341658,8.702405,-4.677014,6.683912,-4.005762,-2.407630,-4.732231,-6.665072,7.218321,-9.467255,-3.801456,-3.805454,-3.123600,1.684213,-2.329510,-5.067488,9.457770,-4.541415,-6.104116,5.864735,-5.566314,-9.412508,-0.686548,-1.405748,-5.074335,8.466648,8.226131,9.839774,4.730837,-9.294899,-9.427632,3.707087,-9.547363,8.779185,0.180843,-8.831984,-6.519184,-8.236674,2.501923,-6.588243,-6.704840,-2.527852,-2.213930,4.296472,-4.779704,6.353194,9.587988,-2.410578,-4.048282,-8.392312,-8.544497,0.776711,8.403446,-7.438288,-4.619027,-4.626616,-1.439768,-0.899229,5.423207,-5.364327,0.012786,-4.603379,-6.537059,3.079780,6.557530,-4.081993,-9.545310,-7.838464,-5.424314,-5.072819,-9.415590,2.550496,2.648886,2.034920,0.378072,-4.541015,7.610322,8.075760,-7.613924,-2.870476,2.481484,6.340114,-5.366508,2.922781,-2.047420,6.963209,4.873159,0.352139,-7.178350,1.801968,9.920710,6.088859,-9.388118,-5.100693,9.848358,-3.468861,-1.273380,-8.562089,-7.182501,9.193926,5.984256,0.074974,9.138604,5.976076,1.267722,1.690447,-3.034872,4.743151,-2.841802,7.267768,-5.745710,-0.675765,-3.183110,6.224880,-9.502444,2.763944,4.820687,-8.498772,-4.442382,-1.969711,-2.373321,-3.967403,-4.924780,-2.330144,7.346473,-5.385659,7.658218,-4.699700,9.916117,-7.563287,-2.210930,1.657169,-5.847913,-2.131039,7.654523,-4.732864,6.515389,3.687649,-9.107997,-3.787290,8.952077,8.983535,0.288905,-0.725590,0.621711,-2.094331,0.306708,9.354844,-2.333635,-3.289263,6.018554,8.575154,1.416309,-1.008008,-9.342159,6.740624,-4.507868,1.893414,3.447794,-9.708837,-5.854845,-5.401555,3.649164,-5.068401,-9.197954,1.577047,8.508989,-0.370147,6.955281,6.800997,7.512561,-7.499487,7.967369,7.971097,4.410438,-2.780362,-6.765439,6.001621,-8.780591,0.903675,-6.566268,-6.967271,-5.226018,-3.253085,-7.254869,5.728030,0.462538,1.529580,4.798632,7.165365,-6.076862,6.831412,-1.926965,-2.043011,-4.135001,7.055731,0.116397,-1.076273,-2.351247,2.569942,-5.385331,-9.599587,-2.033918,8.944082,-3.033309,7.934560,-2.446531,-5.490354,0.649933,2.473295,-9.093571,1.035655,4.459738,0.547114,-4.368430,-4.055333,-4.579074,-5.292204,-3.430905,-9.897491,-4.925292,8.013754,-3.333291,-4.866032,7.779288,0.565025,-7.155530,1.340682,4.078933,-8.074206,1.425364,-9.002299,2.068047,3.377035,-2.849013,3.599397,4.736406,6.203920,-5.056156,5.599289,-2.850292,8.884379,0.258468,-2.353244,-0.407503,3.858262,7.974242,8.579991,-7.915989,-6.307520,-7.286863,-9.447828,-6.017540,-2.360870,3.495121,-0.018797,-7.834495,-8.550066,-9.315192,-5.979595,4.695515,9.338621,-6.767362,-1.466230,1.065333,4.207765,-5.529851,9.628030,-7.449313,0.927330,9.629890,2.035874,5.054971,-5.946425,-1.022177,-4.361906,-8.347487,-9.999541,-9.501929,1.630899,3.008913,-6.732799,-3.334644,-8.365601,6.335195,-8.277420,-0.150769,-2.793550,-7.103014,7.585789,-1.121435,-3.997775,4.816497,7.776162,3.211916,2.596272,0.224313,-4.954367,3.985245,-6.879384,-3.760123,-1.541806,-2.360256,7.206672,9.915987,2.580189,-4.475773,-6.359283,-6.279928,-2.912624,-9.312558,-7.313422,0.671251,-4.838523,-9.573804,5.517040,5.974985,0.592994,-2.152983,-7.119036,9.914558,8.446821,-4.968443,-8.135602,8.373509,-2.843841,-2.284392,-0.118880,-0.786534,7.332180,9.354609,6.470329,-4.240277,3.274977,8.380416,-8.774633,8.293790,8.145842,1.803028,3.651420,-6.526612,-3.245482,-3.118806,-6.735274,5.880976,8.771783,-0.077410,-7.113292,1.744015,6.914995,2.360173,-1.704700,-1.712653,-0.285682,0.938237,-2.766420,-5.096082,-3.997647,8.378117,7.822897,-3.862342,-6.383220,0.421630,0.386721,-6.341375,-2.778754,-8.389606,-3.590673,-6.581804,-2.978203,-7.901596,8.947791,-4.123767,-2.041432,-6.283557,-4.297286,-5.640103,1.575955,7.448563,0.600853,8.123056,-1.250042,-6.249769,-4.637635,7.730736,-6.619807,-1.685454,-6.310322,5.168884,-6.377348,-9.495386,9.939385,1.723713,5.686330,0.580693,-9.070614,-3.006544,7.724269,-9.007848,3.427120,-0.892555,4.544880,4.307577,6.324000,-4.526527,-7.181796,8.398158,-6.048346,-0.838801,7.574142,-1.729845,-9.444950,-7.020795,2.141122,-4.726121,3.417434,-6.821997,1.776718,-1.629626,-0.162211,-4.809007,-5.542551,-5.283826,8.842007,-2.699524,4.540681,-8.802052,1.495031,2.674773,8.848852,6.253662,-8.157541,-8.937560,8.838860,8.299845,5.676117,-7.961998,3.994102,-1.285181,6.895891,7.901424,0.352290,-9.635404,2.665455,7.930575,2.712377,2.028816,-1.225504,2.206316,-9.398357,-9.212717,1.353982,7.043856,5.161704,2.445827,-5.116970,8.087022,-0.870026,-1.135379,7.945273,2.344311,-5.898753,2.661690,-7.584460,-9.833771,8.304180,-7.172274,4.502839,5.194407,-2.281311,3.896249,9.650391,-0.042692,5.660346,5.967139,6.923834,1.892804,1.188891,-4.080346,-4.356295,5.902243,5.925014,-9.951311,4.202351,-8.474845,-3.216456,9.746085,-1.486029,5.581652,-6.748332,9.952783,6.298504,-0.332049,4.771783,-2.462416,1.491924,1.327544,-9.556192,-0.724385,1.396581,0.647916,-4.236252,4.250631,-6.252885,-6.558987,-1.509812,-6.293416,8.600624,-5.555069,-8.530609,-3.422516,-8.538324,-9.134529,1.476461,0.304031,5.385625,-8.158696,0.477550,1.119232,-8.452689,-8.639056,1.914739,8.473524,6.935629,7.758517,-9.838492,-5.500702,1.711485,7.947764,5.860386,5.203146,5.799097,-2.328424,4.445640,9.828215,-7.455976,-4.688761,-0.345979,-2.336099,-5.376283,8.853476,1.053514,2.042118,9.700300,8.264555,2.151614,8.241687,-4.496945,1.818087,4.347185,3.915678,4.709900,9.654070,4.271699,8.401922,9.043781,0.894060,-5.074730,3.850118,9.830462,-6.948527,8.214706,-9.411047,-7.341909,-8.070500,-5.389210,8.902894,0.780864,0.439949,-3.450071,-4.040591,-9.530144,-1.848079,6.862588,-2.893682,-8.840555,6.876864,-9.374431,8.802687,-3.095530,7.106912,0.691015,-1.895658,3.426283,-5.113690,-1.971414,-5.928447,-6.781313,-8.072729,-5.721247,-2.252709,3.102523,0.708463,9.346510,-4.884834,-6.944436,-1.102000,-5.624483,-5.106179,2.576356,3.546771,-8.039241,-5.536857,-6.100142,-2.613975,5.723280,5.339362,-7.171998,-1.735135,0.013101,9.424640,-4.912808,-8.067084,-1.906235,8.392173], dtype = "float64")#candidate|4064|(1152,)|const|float64
call_4063 = func_2114_call(relay.reshape(const_4064.astype('float64'), [12, 6, 16]))
call_4065 = func_2114_call(relay.reshape(const_4064.astype('float64'), [12, 6, 16]))
func_3266_call = mod.get_global_var('func_3266')
func_3269_call = mutated_mod.get_global_var('func_3269')
var_4067 = relay.var("var_4067", dtype = "float64", shape = (231, 2))#candidate|4067|(231, 2)|var|float64
call_4066 = func_3266_call(relay.reshape(var_4067.astype('float64'), [11, 3, 14]))
call_4068 = func_3266_call(relay.reshape(var_4067.astype('float64'), [11, 3, 14]))
uop_4070 = relay.acos(var_4067.astype('float32')) # shape=(231, 2)
func_528_call = mod.get_global_var('func_528')
func_531_call = mutated_mod.get_global_var('func_531')
var_4073 = relay.var("var_4073", dtype = "float32", shape = (180,))#candidate|4073|(180,)|var|float32
call_4072 = relay.TupleGetItem(func_528_call(relay.reshape(var_4073.astype('float32'), [12, 3, 5])), 0)
call_4074 = relay.TupleGetItem(func_531_call(relay.reshape(var_4073.astype('float32'), [12, 3, 5])), 0)
bop_4079 = relay.bitwise_or(uop_4029.astype('int64'), relay.reshape(var_4028.astype('int64'), relay.shape_of(uop_4029))) # shape=(5, 10, 14)
func_2073_call = mod.get_global_var('func_2073')
func_2077_call = mutated_mod.get_global_var('func_2077')
const_4083 = relay.const([False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,False,False,True,False,False,False,True,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,False,True,True,True,True,False,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,False,True,False,False,False,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,False,True,False,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,True,True,True,True,True,True,False,True,True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,False,True,False,True,True,True,True,False,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,True,True,False,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,True,True,True,False,False,False,False,True,False,True,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,True,True,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,False,False,True,True,False,False,False,False,True,True,False,False,True,True,True,False,False,True,False,False,False,False,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,True,False,True,False,False,False,False,False,True,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,True,True,True,True,False,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,False,True,True,False,False,True,True,True,False,True,False,True,False,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,True,True,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,True,True,False,False,True,True,False,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,True,True,False,True,False,True,False,True,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,False,True,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,False,False,True,True,False,True,False,True,True,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,True,False,True,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,False,True,True,True,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,False,True,True,True,False,True,False,False,False,False,False,True,True,True,True,True,False,True,True,True,True,True,False,False,True,False,False,True,True,False,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,True,False,True,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,True,False,False,False,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,False,False,False,False,True,False,True,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,False,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,True,False,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,False,True,False,True,False,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,True,False,False,True,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,False,False,False,False,True,True,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,False,False,False,False,False,False,False,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,True,False,False,False,False,False,False,False,False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False,False,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,True,False,True,True,False,True,False,True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,False,False,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,False,True,False,True,True,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,False,True,True,False,False,False,True,True,False,False,False,False,True,False,False,False,True,True,True,True,True,False,False,True,True,True,False,False,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,True,False,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,True,True,False,False,False,False,False,False,True,False,True,False,False,False,True,True,False,False,True,True,True,True,False,True,True,True,False,False,True,True,False,False,False,False,False,False,False,True,True,False,True,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,False,True,True,False,True,False,False,False,False,True,True,True,True,False,True,True,False,False,False,False,True,False,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,False,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,False,False,False,False,False,True,False,True,True,False,False,False,False,False,True,True,False,False,False,False,True,True,True,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,False,False,True,True,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,False,True,True,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,False,False,True,False,False,False,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,False,True,False,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,True,False,False,False,False,True,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,True,False,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,True,False,True,False,True,False,True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,False,True,False,False,False,False,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,False,False,True,False,True], dtype = "bool")#candidate|4083|(2912,)|const|bool
call_4082 = relay.TupleGetItem(func_2073_call(relay.reshape(const_4083.astype('bool'), [16, 14, 13]), relay.reshape(const_4083.astype('bool'), [16, 14, 13]), relay.reshape(var_4073.astype('float32'), [180,]), ), 3)
call_4084 = relay.TupleGetItem(func_2077_call(relay.reshape(const_4083.astype('bool'), [16, 14, 13]), relay.reshape(const_4083.astype('bool'), [16, 14, 13]), relay.reshape(var_4073.astype('float32'), [180,]), ), 3)
func_3955_call = mod.get_global_var('func_3955')
func_3959_call = mutated_mod.get_global_var('func_3959')
const_4104 = relay.const([9.853656,9.299510,3.030739,8.955190,4.677830,-6.038393,-8.343911,0.109286,-1.558156,-9.884743,2.279930,9.208549,4.336397,-7.320718,7.125775,7.338046,3.516185,5.014937,-2.297102,-4.383716,-6.405457,-1.220221,8.013096,7.661914,7.755336,5.010402,3.708030,-4.737857,-2.315525,7.332618,1.170155,5.742026,-0.542218,9.573927,9.227716,-6.433221,-4.745805,-6.363050,-8.503159,-5.630863,-0.780015,-1.791501,-8.862670,-3.040267,-3.522422,5.153177,-5.133889,-9.317995], dtype = "float32")#candidate|4104|(48,)|const|float32
const_4105 = relay.const([9.921715,-3.315422,-4.206762,3.408123,8.564258,7.284034,-9.220780,8.846931,-9.514342,7.676891,-2.404960,-9.723792,9.199800,3.040889,-7.466943,1.484582,-9.985748,-0.808275,2.764893,-7.140453,4.683798,-5.806402,2.517651,-7.532624,7.469068,-8.503343,-2.548387,9.740810,-2.007318,-8.603554,5.813752,-6.767836,-7.393370,6.872950,5.342666,-5.420183,9.404229,-2.665087,-6.882958,-1.472024,-9.655236,2.396657,-4.198081,5.075248,8.112896,4.068873,5.047727,4.527227,-6.304546,5.298915,-3.377005,-8.566705,-4.358919,-1.653367,-2.151206,5.829649,-8.513827,9.212973,5.983467,0.386210,1.175371,0.192276,-6.210783,-6.548507,0.641594,-1.707540,6.144170,9.199477,0.881662,-8.486340,5.341330,0.027285,7.071392,-4.503858,6.293376,3.072111,-3.483348,2.881480,9.902560,-6.924632,-6.368527,-6.475852,0.866179,1.084613,-6.270018,-9.614388,7.852392,5.219085,1.224331,4.269425,9.010575,5.331177,-9.680014,-5.859818,-0.052750,-8.972773,-0.530562,-1.311516,8.138898,-0.106047,7.792028,3.520528,-9.568754,7.055471,-0.847979,-4.911430,-8.998630,9.194197,4.820455,-4.362463,-9.718552,-5.761561,-8.844211,9.706592,-7.420932,9.095884,-7.146406,5.316447,3.504828,-9.333368,9.281136,7.420745,-1.946742,-6.785933,-1.247824,5.660866,-4.474468,5.145658,-5.596675,-6.048084,5.934019,3.510349,-9.659065,-7.645319,9.347194,6.000018,-8.965761,-1.999435,2.099470,-2.567415,-8.069112,0.986411,3.367169,1.486251,5.678700,-4.281226,6.118367,-8.268710,-3.348806,8.325439,-5.553225,3.184184,0.546508,0.480561,-5.637497,-0.139388,-9.549301,5.423005,5.499638,6.950476,-3.137150,2.728773,4.139578,7.294117,-9.280940,-9.796852,7.378574,2.934151,5.666650,-8.435235,-3.254582,-9.046913,-3.956760,-6.379982,-9.267794,-3.305370,-6.831851,-0.065312,1.871631,1.818524,-3.072494,-8.004173,2.062249,-0.944095,3.206289,7.610357,-0.200627,-7.778493,9.856520,-7.074595,-3.167977,7.143584], dtype = "float64")#candidate|4105|(192,)|const|float64
call_4103 = relay.TupleGetItem(func_3955_call(relay.reshape(const_4104.astype('float32'), [12, 2, 2]), relay.reshape(const_4105.astype('float64'), [2, 96]), ), 5)
call_4106 = relay.TupleGetItem(func_3959_call(relay.reshape(const_4104.astype('float32'), [12, 2, 2]), relay.reshape(const_4105.astype('float64'), [2, 96]), ), 5)
output = relay.Tuple([call_4063,const_4064,call_4066,uop_4070,call_4072,var_4073,bop_4079,call_4082,const_4083,call_4103,const_4104,const_4105,])
output2 = relay.Tuple([call_4065,const_4064,call_4068,uop_4070,call_4074,var_4073,bop_4079,call_4084,const_4083,call_4106,const_4104,const_4105,])
func_4115 = relay.Function([var_4028,var_4067,var_4073,], output)
mod['func_4115'] = func_4115
mod = relay.transform.InferType()(mod)
mutated_mod['func_4115'] = func_4115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4115_call = mutated_mod.get_global_var('func_4115')
var_4117 = relay.var("var_4117", dtype = "float64", shape = (5, 10, 14))#candidate|4117|(5, 10, 14)|var|float64
var_4118 = relay.var("var_4118", dtype = "float64", shape = (231, 2))#candidate|4118|(231, 2)|var|float64
var_4119 = relay.var("var_4119", dtype = "float32", shape = (180,))#candidate|4119|(180,)|var|float32
call_4116 = func_4115_call(var_4117,var_4118,var_4119,)
output = call_4116
func_4120 = relay.Function([var_4117,var_4118,var_4119,], output)
mutated_mod['func_4120'] = func_4120
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4685 = relay.var("var_4685", dtype = "float32", shape = (16, 1, 14))#candidate|4685|(16, 1, 14)|var|float32
uop_4686 = relay.cos(var_4685.astype('float32')) # shape=(16, 1, 14)
output = uop_4686
output2 = uop_4686
func_4688 = relay.Function([var_4685,], output)
mod['func_4688'] = func_4688
mod = relay.transform.InferType()(mod)
mutated_mod['func_4688'] = func_4688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4689 = relay.var("var_4689", dtype = "float32", shape = (16, 1, 14))#candidate|4689|(16, 1, 14)|var|float32
func_4688_call = mutated_mod.get_global_var('func_4688')
call_4690 = func_4688_call(var_4689)
output = call_4690
func_4691 = relay.Function([var_4689], output)
mutated_mod['func_4691'] = func_4691
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4862 = relay.var("var_4862", dtype = "uint64", shape = (4, 10, 8))#candidate|4862|(4, 10, 8)|var|uint64
var_4863 = relay.var("var_4863", dtype = "uint64", shape = (4, 10, 8))#candidate|4863|(4, 10, 8)|var|uint64
bop_4864 = relay.equal(var_4862.astype('bool'), relay.reshape(var_4863.astype('bool'), relay.shape_of(var_4862))) # shape=(4, 10, 8)
output = relay.Tuple([bop_4864,])
output2 = relay.Tuple([bop_4864,])
func_4875 = relay.Function([var_4862,var_4863,], output)
mod['func_4875'] = func_4875
mod = relay.transform.InferType()(mod)
var_4876 = relay.var("var_4876", dtype = "uint64", shape = (4, 10, 8))#candidate|4876|(4, 10, 8)|var|uint64
var_4877 = relay.var("var_4877", dtype = "uint64", shape = (4, 10, 8))#candidate|4877|(4, 10, 8)|var|uint64
output = func_4875(var_4876,var_4877,)
func_4878 = relay.Function([var_4876,var_4877,], output)
mutated_mod['func_4878'] = func_4878
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4882 = relay.const([[[-4.095037,8.608222,8.487542,-0.391373],[-0.976089,-7.697664,-9.087172,3.502928],[-1.180987,-9.073497,-6.126953,3.920106],[-0.991810,-4.703067,2.054401,5.440744],[-0.627724,3.834185,1.693918,1.872268]],[[-9.674733,-3.124344,3.608438,-6.551240],[4.150410,3.410679,2.860859,-8.830143],[9.785405,-2.954941,-2.478547,-7.827833],[-1.197675,-7.473777,5.673153,-0.125227],[7.739844,6.382231,-6.189358,-8.607493]],[[-3.034918,8.786465,-0.264198,0.553965],[8.090526,-4.690629,-7.675207,-0.889225],[-7.380386,-7.515530,-7.099063,9.860992],[2.414333,-4.664003,-7.146344,3.707732],[-0.427992,0.046966,-4.433712,-0.286381]],[[-6.223875,3.463835,-8.530076,-1.459128],[-5.279364,-7.106480,0.741912,-4.205513],[-8.676984,-5.371559,7.249609,4.748345],[2.320938,-1.358050,-3.822232,3.387051],[3.803813,4.720526,-3.003917,7.375768]],[[-9.610114,0.955235,3.024353,-9.701040],[-7.199749,1.459549,-8.788070,-4.834127],[7.585837,4.212050,6.301997,-0.075353],[4.375135,-0.058806,1.899303,-5.441911],[-3.634942,7.782805,4.453049,5.294107]],[[4.904350,7.114654,-1.780992,7.493765],[-9.678714,8.273240,2.571232,-2.752220],[2.126348,-5.625591,-0.368770,-3.593826],[-3.971155,0.276971,5.814845,0.787914],[5.113874,-1.217715,-1.318797,8.926380]],[[-0.064178,8.856995,-0.928526,-1.178538],[-9.205161,6.492597,4.686803,8.758677],[0.016281,8.782373,-8.202062,9.780264],[2.104780,0.240904,4.293079,-8.249287],[2.153744,5.538383,8.460664,4.572875]],[[-5.140349,6.920387,-3.369831,2.132811],[0.085294,-5.353391,-6.620045,8.580062],[0.843547,3.393329,7.758024,-2.767887],[7.632586,-3.006793,6.185711,8.968426],[-5.493156,5.309806,7.825498,8.017073]],[[4.862074,-3.701774,4.751787,1.633900],[-0.846386,-2.066863,-0.477841,-5.953021],[-0.928615,-9.130076,-7.062987,-3.761657],[-2.653747,2.303681,-2.858120,-8.733322],[-0.339782,7.429942,-8.151421,-0.587051]],[[-3.297504,-8.846337,6.027334,-2.174278],[-0.161672,8.792752,-3.299416,1.721473],[1.787144,0.125625,1.294895,9.407335],[-9.236421,-1.856979,3.755345,-0.148497],[5.814218,-1.865306,8.639585,-9.921206]],[[-2.429271,3.452897,0.396095,7.634064],[0.152677,2.313349,0.766000,9.235752],[1.776365,-7.567201,-9.961661,-9.861831],[-3.057936,8.288435,-7.057859,0.823493],[5.149279,5.916178,9.055364,-7.626284]],[[0.605831,-1.017190,-3.211998,1.188396],[9.560706,0.513472,-8.526250,3.241918],[-2.612906,-0.136312,-0.081381,9.273874],[-9.356354,6.781301,-8.028102,9.760684],[9.348329,-2.586357,9.308265,4.407348]]], dtype = "float32")#candidate|4882|(12, 5, 4)|const|float32
uop_4883 = relay.asin(const_4882.astype('float32')) # shape=(12, 5, 4)
output = uop_4883
output2 = uop_4883
func_4900 = relay.Function([], output)
mod['func_4900'] = func_4900
mod = relay.transform.InferType()(mod)
output = func_4900()
func_4901 = relay.Function([], output)
mutated_mod['func_4901'] = func_4901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4968 = relay.var("var_4968", dtype = "int32", shape = (15, 2, 13))#candidate|4968|(15, 2, 13)|var|int32
var_4969 = relay.var("var_4969", dtype = "int32", shape = (15, 2, 13))#candidate|4969|(15, 2, 13)|var|int32
bop_4970 = relay.right_shift(var_4968.astype('int32'), relay.reshape(var_4969.astype('int32'), relay.shape_of(var_4968))) # shape=(15, 2, 13)
func_4900_call = mod.get_global_var('func_4900')
func_4901_call = mutated_mod.get_global_var('func_4901')
call_4975 = func_4900_call()
call_4976 = func_4900_call()
func_528_call = mod.get_global_var('func_528')
func_531_call = mutated_mod.get_global_var('func_531')
var_4982 = relay.var("var_4982", dtype = "float32", shape = (180,))#candidate|4982|(180,)|var|float32
call_4981 = relay.TupleGetItem(func_528_call(relay.reshape(var_4982.astype('float32'), [12, 3, 5])), 0)
call_4983 = relay.TupleGetItem(func_531_call(relay.reshape(var_4982.astype('float32'), [12, 3, 5])), 0)
output = relay.Tuple([bop_4970,call_4975,call_4981,var_4982,])
output2 = relay.Tuple([bop_4970,call_4976,call_4983,var_4982,])
func_4992 = relay.Function([var_4968,var_4969,var_4982,], output)
mod['func_4992'] = func_4992
mod = relay.transform.InferType()(mod)
mutated_mod['func_4992'] = func_4992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4992_call = mutated_mod.get_global_var('func_4992')
var_4994 = relay.var("var_4994", dtype = "int32", shape = (15, 2, 13))#candidate|4994|(15, 2, 13)|var|int32
var_4995 = relay.var("var_4995", dtype = "int32", shape = (15, 2, 13))#candidate|4995|(15, 2, 13)|var|int32
var_4996 = relay.var("var_4996", dtype = "float32", shape = (180,))#candidate|4996|(180,)|var|float32
call_4993 = func_4992_call(var_4994,var_4995,var_4996,)
output = call_4993
func_4997 = relay.Function([var_4994,var_4995,var_4996,], output)
mutated_mod['func_4997'] = func_4997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4900_call = mod.get_global_var('func_4900')
func_4901_call = mutated_mod.get_global_var('func_4901')
call_5083 = func_4900_call()
call_5084 = func_4900_call()
func_3673_call = mod.get_global_var('func_3673')
func_3675_call = mutated_mod.get_global_var('func_3675')
const_5100 = relay.const([[-4.608044,-0.999313,-2.657486,6.887607,7.516846,-9.216325,1.519555,-2.369264,-1.799921,-7.083591,-8.153385,2.873114,0.177519,-8.249663,-5.576633,-7.279182,-3.587780,-0.033070,1.241502,-9.594258],[6.750628,4.209860,-6.848099,9.142593,-9.517291,-1.403171,2.012607,4.053741,6.658087,-4.111000,5.331046,-9.532442,5.445422,-8.148100,2.157850,3.718695,-1.035393,0.864147,7.760989,8.970092]], dtype = "float32")#candidate|5100|(2, 20)|const|float32
call_5099 = relay.TupleGetItem(func_3673_call(relay.reshape(const_5100.astype('float32'), [10, 2, 2])), 1)
call_5101 = relay.TupleGetItem(func_3675_call(relay.reshape(const_5100.astype('float32'), [10, 2, 2])), 1)
func_3673_call = mod.get_global_var('func_3673')
func_3675_call = mutated_mod.get_global_var('func_3675')
call_5112 = relay.TupleGetItem(func_3673_call(relay.reshape(const_5100.astype('float32'), [10, 2, 2])), 1)
call_5113 = relay.TupleGetItem(func_3675_call(relay.reshape(const_5100.astype('float32'), [10, 2, 2])), 1)
const_5116 = relay.const([[-9.550041,6.944927,7.642713,-7.655955,7.043941,-1.369121,7.007326,-6.867867,8.642907,5.315766,1.520472,1.090483,9.917613,7.575358,-3.472997,3.194830,8.965408,-7.087473,9.990375,2.479477],[1.702715,4.174869,3.422846,-0.845093,6.028364,3.330785,-5.442938,-9.810122,-7.073942,1.054137,-0.510337,0.962391,-0.044911,-9.378821,-8.214911,-9.661517,3.854716,-1.707568,1.488997,8.544584]], dtype = "float32")#candidate|5116|(2, 20)|const|float32
bop_5117 = relay.not_equal(const_5100.astype('bool'), relay.reshape(const_5116.astype('bool'), relay.shape_of(const_5100))) # shape=(2, 20)
uop_5120 = relay.sinh(const_5100.astype('float32')) # shape=(2, 20)
uop_5130 = relay.sin(call_5099.astype('float64')) # shape=(11, 3, 14)
uop_5132 = relay.sin(call_5101.astype('float64')) # shape=(11, 3, 14)
output = relay.Tuple([call_5083,call_5112,bop_5117,uop_5120,uop_5130,])
output2 = relay.Tuple([call_5084,call_5113,bop_5117,uop_5120,uop_5132,])
func_5137 = relay.Function([], output)
mod['func_5137'] = func_5137
mod = relay.transform.InferType()(mod)
mutated_mod['func_5137'] = func_5137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5137_call = mutated_mod.get_global_var('func_5137')
call_5138 = func_5137_call()
output = call_5138
func_5139 = relay.Function([], output)
mutated_mod['func_5139'] = func_5139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5137_call = mod.get_global_var('func_5137')
func_5139_call = mutated_mod.get_global_var('func_5139')
call_5143 = relay.TupleGetItem(func_5137_call(), 3)
call_5144 = relay.TupleGetItem(func_5139_call(), 3)
output = relay.Tuple([call_5143,])
output2 = relay.Tuple([call_5144,])
func_5159 = relay.Function([], output)
mod['func_5159'] = func_5159
mod = relay.transform.InferType()(mod)
mutated_mod['func_5159'] = func_5159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5159_call = mutated_mod.get_global_var('func_5159')
call_5160 = func_5159_call()
output = call_5160
func_5161 = relay.Function([], output)
mutated_mod['func_5161'] = func_5161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4900_call = mod.get_global_var('func_4900')
func_4901_call = mutated_mod.get_global_var('func_4901')
call_5183 = func_4900_call()
call_5184 = func_4900_call()
output = relay.Tuple([call_5183,])
output2 = relay.Tuple([call_5184,])
func_5185 = relay.Function([], output)
mod['func_5185'] = func_5185
mod = relay.transform.InferType()(mod)
output = func_5185()
func_5186 = relay.Function([], output)
mutated_mod['func_5186'] = func_5186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4900_call = mod.get_global_var('func_4900')
func_4901_call = mutated_mod.get_global_var('func_4901')
call_5199 = func_4900_call()
call_5200 = func_4900_call()
uop_5206 = relay.rsqrt(call_5199.astype('float64')) # shape=(12, 5, 4)
uop_5208 = relay.rsqrt(call_5200.astype('float64')) # shape=(12, 5, 4)
output = uop_5206
output2 = uop_5208
func_5211 = relay.Function([], output)
mod['func_5211'] = func_5211
mod = relay.transform.InferType()(mod)
mutated_mod['func_5211'] = func_5211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5211_call = mutated_mod.get_global_var('func_5211')
call_5212 = func_5211_call()
output = call_5212
func_5213 = relay.Function([], output)
mutated_mod['func_5213'] = func_5213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5211_call = mod.get_global_var('func_5211')
func_5213_call = mutated_mod.get_global_var('func_5213')
call_5270 = func_5211_call()
call_5271 = func_5211_call()
func_5137_call = mod.get_global_var('func_5137')
func_5139_call = mutated_mod.get_global_var('func_5139')
call_5285 = relay.TupleGetItem(func_5137_call(), 2)
call_5286 = relay.TupleGetItem(func_5139_call(), 2)
func_1666_call = mod.get_global_var('func_1666')
func_1672_call = mutated_mod.get_global_var('func_1672')
const_5292 = relay.const(-4.448638, dtype = "float64")#candidate|5292|()|const|float64
const_5293 = relay.const([7.886941,-0.886592,-2.634511,9.376014,-6.571675,4.298744,4.167530,4.062187,5.842233,-2.976464,1.814312,1.392628,4.476284,1.561495,3.877042,6.953038,-9.595484,-7.540444,9.768161,-4.223521,6.795808,-8.172571,-1.836615,4.546822,2.342926,0.483124,8.162655,4.960007,-1.111597,-6.452793,9.921317,4.406556,2.041761,-2.734352,6.071405,3.033771,8.114476,2.601880,0.375352,2.864764,-4.342204,9.369243,3.009632,-0.585159,1.105907,-7.439650,9.780810,3.658668,8.602735,1.417949,-1.662177,8.716154,-1.211765,6.996661,5.446741,-3.670782,-4.705818,-1.850563,-9.802828,0.355920,2.627799,-4.908075,6.510905,8.462091,-0.064022,-0.393852,2.348646,-0.400955,-0.358063,1.856991,-0.001938,-6.211485,-3.640691,-2.884997,8.819407,-6.072770,5.163397,6.143330,-9.673545,6.231216,-2.207074,5.286562,-9.016036,7.847937,-8.221769,-0.379119,8.170685,7.524579,4.989202,-5.492832,8.799900,9.684015,-5.181287,-4.082227,-8.346468,8.068519,1.879093,-1.531212,-7.337991,-8.422073,5.999880,7.827666,4.839085,-4.819343,-2.534256,-9.207299,0.211330,7.471029,-2.100045,0.929500,3.500762,9.528137,0.207206,-6.224474,-7.486397,-5.479585,-4.030003,-2.805636,-5.499389,-3.121678,5.991871,1.584540,4.628416,-1.468662,-1.889866,-7.663859,-1.503264,-6.235609,5.345623,7.778818,2.059945,0.244020,6.559553,-3.249691,-3.953860,8.431316,4.527534,1.715110,2.814559,-0.003920,0.153701,1.032120,3.383081,4.670076,2.638760,-4.473009,7.665447,-9.060168,7.502158,-6.147221,5.182331,5.639999,-0.392098,0.423405,3.784923,2.348865,-0.607266,-1.863713,-3.082711,1.128845,3.804879,8.682369,6.896644,5.857728,-9.167363,7.825345,5.027992,-3.705887,5.544122,9.295140,0.639283,7.188153,-4.418113,0.953873,9.075910,-7.161736,-3.849734,5.443451,9.627107,-7.927566,5.122512,5.004263,3.831339,-3.982217,-2.949861,9.862739,5.080342,3.354515,-6.775304,-3.643894,9.625685,-6.548203], dtype = "float64")#candidate|5293|(192,)|const|float64
var_5294 = relay.var("var_5294", dtype = "float32", shape = (6, 30))#candidate|5294|(6, 30)|var|float32
const_5295 = relay.const([[-8.817047,-1.791894,-5.239109,1.803473,-1.275798,0.406910,7.939195,-5.017930,-5.941066,5.695302,5.505614,-5.028488],[-7.547607,1.428484,-2.812055,-7.673332,-6.868750,0.914027,-5.060404,-8.806506,-3.686656,-6.060839,-7.012452,-2.491231],[3.954402,9.472408,7.155190,2.950717,-4.551957,-1.005614,-9.343810,2.931898,9.911309,1.809935,5.480653,-4.423505],[4.845767,-1.483965,-4.268356,-4.759458,-2.043990,-8.144436,0.014909,2.077909,-0.913024,-5.182429,5.558110,0.330003],[9.499879,-8.512265,5.257776,-1.800993,3.844619,-1.826221,9.923771,-1.399448,-3.188694,-7.085024,-3.199452,1.648126],[6.389984,2.935861,-2.358786,-8.089456,5.744017,-8.661391,0.713098,1.993313,5.482045,-9.308658,-1.868766,-3.975088],[4.004511,-8.775777,0.119377,-7.087511,-3.934768,9.036323,3.232944,-0.312564,-3.153017,7.692283,0.636191,3.700956],[-2.836135,5.177701,-2.172132,1.771911,-1.384913,2.729099,-9.144575,5.303015,-2.181091,2.005706,-6.094778,-0.025219],[-2.692842,-5.099627,5.391308,3.440059,-6.034373,-2.270635,-4.722031,-3.380842,-6.840399,-3.294612,-3.543725,9.127973],[-9.290685,-5.576759,-1.144803,-6.239212,-0.147874,-0.032744,-4.014901,2.728529,-3.299441,7.655874,4.580639,-3.286329],[5.265326,-1.599798,-8.250332,-0.707531,-5.607389,6.336586,-8.807644,-6.776632,-5.495059,-2.971421,-7.214722,1.915994],[9.931830,4.750354,9.068017,-7.465271,9.562679,-8.824149,-7.473134,-1.192395,4.548838,7.480243,1.154825,-2.583223],[-5.683240,-6.413479,-1.815686,-9.857096,-8.759257,-4.386173,0.287932,8.549442,-1.704865,-9.321319,-7.896164,8.271294],[-3.376171,8.953457,-3.944836,6.871891,-6.702002,7.610102,-7.138073,8.206903,-9.523334,-2.501044,-6.572786,-1.352799],[9.639046,-0.624151,8.048812,5.718783,-9.693894,-7.083919,-4.432447,-0.280259,7.472437,3.813356,8.555694,0.054557],[-3.228116,8.969126,0.233429,3.616314,-5.258750,-1.281514,-3.474900,0.492537,1.163613,5.130008,7.357076,-0.721516],[-3.951185,-4.831239,-3.135571,4.800986,8.229334,-2.052571,-5.896478,0.188096,5.726549,-6.344958,6.494322,-0.950924],[4.519795,-8.916927,0.578111,-1.994682,-7.782309,3.132335,-2.084459,-0.161848,9.061461,-7.854776,-0.059686,-3.775382],[6.623513,9.074126,-4.919405,5.893648,-6.427050,0.789614,3.780760,1.893186,-7.465617,-4.313119,6.054331,5.238154],[6.298371,-6.395415,6.090055,8.834027,1.133350,-3.423611,3.975866,-6.054831,9.354886,8.902363,2.648422,5.418946],[-5.109227,-7.807075,-0.468215,-6.654104,4.827086,4.279665,-8.448730,7.776528,-2.640502,0.660503,-9.369783,9.106262],[4.443811,-6.351880,6.938017,3.824984,4.288386,5.634574,9.384704,-2.689643,-1.001924,0.988370,-9.500895,-7.410401],[-3.121619,-9.079366,7.461979,3.153187,1.129756,2.361599,7.294795,-9.731729,-0.684027,-6.682793,7.394425,-1.192106],[-0.189124,-6.625359,6.001349,9.242215,1.745111,-1.116127,4.965548,2.241162,9.264883,8.303378,7.097419,2.923722],[2.937055,0.146065,-7.778022,-9.432897,-8.532032,-5.382970,-6.088397,9.417135,3.264363,-3.753786,1.852668,2.940498],[8.327103,6.287468,-8.896918,-2.610962,-0.873982,5.955905,-1.056661,-5.867671,-9.178567,-4.631560,-4.711363,-3.582428],[3.079385,3.240700,3.190604,4.418708,8.515769,6.474473,5.154128,-8.974627,-7.503227,4.365199,3.023903,2.096668],[-6.749976,-3.899079,6.819359,-4.775688,-8.608894,-0.479032,4.929785,-2.822987,-3.150329,-7.678269,6.567256,-2.410056],[-3.604045,-0.224089,0.384189,-2.412748,8.055391,-2.205407,1.486551,9.722101,-0.772782,0.650691,8.015734,2.107666],[-0.189949,-2.540600,-3.362531,1.339161,-8.650123,-3.977751,9.061064,5.221702,-9.762517,1.165668,-6.104910,6.632038],[-7.861008,-0.122992,-1.224156,-0.724818,-2.064596,-1.214030,5.188462,0.096199,-1.074310,0.590985,-2.115494,-5.757205],[-4.666274,7.589120,3.952166,-9.966648,2.671478,9.160456,-4.528813,-2.699271,-5.156993,6.229721,-7.774559,8.465657],[-2.468212,-6.569787,9.104441,7.835349,4.119693,7.661048,3.153841,-3.821040,-9.616147,-9.192876,6.294278,1.654566],[-5.968891,4.175573,-3.484933,5.495334,8.426920,3.531468,-2.179472,7.810266,2.820218,-1.827848,-1.234766,-7.458834],[8.024254,3.674222,3.121997,-3.995240,5.376854,4.632436,4.865331,-5.993896,-4.981931,8.049614,9.381760,-3.782040],[3.961924,4.714726,-5.753161,0.832125,1.735091,-1.396890,5.381301,-6.715799,1.670381,-4.307672,-3.589685,0.582227],[6.763088,2.988988,6.636636,9.531969,6.991024,-6.274741,-4.324176,1.841162,-8.971282,4.531779,-3.519788,-3.552114],[7.443133,-0.980548,-2.056272,-7.612465,5.752472,-8.916027,-0.141834,0.846922,-4.224541,1.675066,0.482522,-8.865135],[-3.153260,-5.847021,3.496534,-7.614662,2.565283,-5.954009,2.034863,9.314380,1.063271,3.331514,-5.662639,6.073775],[3.845162,1.643506,9.805313,-6.369003,7.344022,-9.266672,-5.528968,9.292691,-4.307822,5.496588,2.758571,-7.617212],[-7.982979,-6.705389,-1.050059,6.811597,-2.788923,4.268847,3.847568,0.171108,-1.735431,5.110301,2.322516,-6.727620],[4.648428,3.563082,1.814311,6.403948,9.311061,-5.098141,0.275653,1.038416,-0.334145,3.536194,7.147606,4.174669],[-0.791114,-3.363382,9.597105,5.820976,-1.266987,1.843370,-0.971987,6.841423,-3.996216,-7.940991,1.145449,4.315819],[-0.196310,6.166127,-0.611261,1.375228,-6.543921,-8.684478,-0.334894,-2.385668,-6.726753,-9.325918,-7.094341,-5.242857],[7.520241,-4.271412,5.965325,9.124416,-9.716446,8.689783,0.030602,9.217344,-0.395686,5.382220,-2.328615,4.305440],[-3.953893,5.402361,4.027220,6.980097,-0.892284,4.564485,-8.953947,5.583932,-4.031719,0.276708,4.433891,2.230901],[-5.455522,4.715556,-7.286090,2.038599,-2.336322,0.778260,-9.024550,2.443520,-3.932975,-6.068780,7.568278,7.298957],[-0.223567,5.374438,2.934197,4.097506,8.993424,-4.823109,1.324126,-2.112568,0.758129,7.396381,6.130551,-9.329493],[-0.525014,-1.473347,2.971678,0.278259,-1.503459,0.521410,4.081147,9.481925,8.470353,-4.286441,6.025690,2.718582],[-5.210826,-6.678762,4.394062,1.005357,-2.456163,1.047834,1.776612,1.537805,2.281992,7.832655,-1.804337,7.657988],[4.091665,-7.783744,2.366310,9.469991,1.562847,4.888257,-5.802893,-4.410252,-4.520215,-2.607913,-2.090719,3.881837],[3.199615,-3.098167,9.717932,6.141025,5.624671,6.320747,7.518750,-0.394337,-1.692717,3.362254,-0.784244,1.320870],[4.823072,-9.213066,-9.718129,1.803284,-4.666181,8.536471,-1.774725,-3.951484,-0.114631,-1.521351,-9.065407,-5.544700],[-6.587762,-9.957908,7.435099,6.059534,5.968456,-0.251852,3.962554,2.083097,9.019848,4.342727,-8.930490,7.039915],[6.175361,-2.412165,-7.116136,-4.414937,9.820442,0.110448,9.546196,0.788227,-5.156840,-0.951463,-2.989319,-4.347085],[-2.244836,6.333332,1.896790,3.869442,-7.895895,5.807853,3.836818,3.829439,-9.715057,0.940408,8.669513,-4.019214]], dtype = "float32")#candidate|5295|(56, 12)|const|float32
call_5291 = relay.TupleGetItem(func_1666_call(relay.reshape(const_5292.astype('float64'), []), relay.reshape(const_5293.astype('float64'), [1, 16, 12]), relay.reshape(var_5294.astype('float32'), [180,]), relay.reshape(const_5295.astype('float32'), [672,]), ), 0)
call_5296 = relay.TupleGetItem(func_1672_call(relay.reshape(const_5292.astype('float64'), []), relay.reshape(const_5293.astype('float64'), [1, 16, 12]), relay.reshape(var_5294.astype('float32'), [180,]), relay.reshape(const_5295.astype('float32'), [672,]), ), 0)
func_2114_call = mod.get_global_var('func_2114')
func_2117_call = mutated_mod.get_global_var('func_2117')
var_5302 = relay.var("var_5302", dtype = "float64", shape = (1152,))#candidate|5302|(1152,)|var|float64
call_5301 = func_2114_call(relay.reshape(var_5302.astype('float64'), [12, 6, 16]))
call_5303 = func_2114_call(relay.reshape(var_5302.astype('float64'), [12, 6, 16]))
var_5334 = relay.var("var_5334", dtype = "float32", shape = (56, 12))#candidate|5334|(56, 12)|var|float32
bop_5335 = relay.logical_or(const_5295.astype('bool'), relay.reshape(var_5334.astype('bool'), relay.shape_of(const_5295))) # shape=(56, 12)
const_5344 = relay.const([[1.948162,-9.099265,7.671362,-7.263198,-3.855709,7.794868,8.348022,3.197961,-8.040836,-4.722210,5.463947,5.967778],[-6.350231,-9.666471,-1.221386,7.002667,-1.106870,-8.035958,-8.591141,-1.137283,-5.239614,7.748696,-5.875829,-4.875206],[-6.344950,-7.078504,-4.912044,-5.682879,7.015326,6.370506,-4.742255,-3.549671,-3.604658,-9.301358,6.690641,-6.639996],[-7.263620,0.152399,-3.508094,4.639765,-9.059904,-3.712019,-5.088169,1.879412,7.176990,4.439408,-3.486789,1.242896],[-3.196027,3.432039,-5.795805,4.011601,-5.409308,2.539864,-1.539293,4.840472,9.812831,4.603904,-2.822340,2.266203],[-7.744127,9.346810,-9.417239,0.327406,3.717542,-1.057434,-0.125045,-4.177603,8.132153,8.075668,0.552388,-8.928702],[-2.514573,-5.566680,6.113289,9.033589,-8.806197,-8.386575,9.281312,-7.221191,-1.820164,-8.507929,-1.494978,3.630821],[0.363057,-7.851178,-5.876306,3.638190,-1.718731,6.547655,8.091198,8.928364,-8.266653,9.442488,-4.529867,-5.723903],[-4.354110,4.204842,8.190482,-4.912003,-3.832400,8.772361,-7.018187,6.188915,-8.596239,-9.344916,7.198329,-2.005193],[5.331486,4.336099,3.536575,-7.366437,2.666261,-8.169530,0.459962,1.869599,1.418813,-2.234426,2.943890,8.541115],[-2.126048,7.776962,0.602986,7.377440,3.288508,-2.370201,-1.763782,0.093459,0.135304,0.691188,-5.040210,-9.340832],[8.045922,6.434477,-9.194406,9.798060,-2.242159,4.982910,-9.980636,-0.407316,5.552172,-2.130977,-3.710267,0.088529],[5.080211,-0.609999,0.891810,-6.152891,3.635876,0.744334,-7.642982,-3.883022,-1.954428,-9.694222,3.619632,-5.035854],[-9.231695,-0.247291,-7.735442,-1.832442,-8.567938,-7.646609,2.240648,2.463212,-2.789563,-7.768659,7.248544,-8.071938],[-8.389564,-0.533729,2.951521,9.371036,9.970360,-6.864699,0.687208,6.444897,5.180014,-2.389942,-2.904766,0.992019],[-3.893624,3.802825,3.777749,8.405182,8.902438,6.998682,7.558338,-6.707807,-0.432893,-5.792852,0.039993,-2.782577],[5.716017,4.726079,-5.114866,2.072151,-7.711166,-4.612477,-4.027854,-9.843134,6.870083,-0.454543,-1.930785,6.520781],[-7.889235,-5.995662,7.335791,-6.090716,0.554185,2.975432,9.849557,0.201285,8.698995,5.661761,9.413673,9.153449],[6.137560,0.256955,-9.285774,-6.709232,0.604635,-8.066875,8.791342,7.604752,-7.182519,-2.150181,8.910279,-5.770302],[7.546964,-7.891348,9.403426,8.247426,-2.026017,-3.012006,1.252741,1.821158,4.583285,-5.553178,-1.754728,-4.031725],[-8.199985,-8.187487,-2.161925,-7.349726,-7.634251,-6.410149,9.210969,-2.620763,8.345164,-3.130594,-7.512648,8.566820],[-2.538256,-6.344042,5.060317,8.972465,-2.268860,-1.522844,-7.173050,-9.525946,0.901698,-8.711027,4.876381,-9.618660],[2.968025,8.883938,-4.448122,-3.515728,-0.320056,-5.802468,5.990876,8.400871,7.488454,-6.854578,1.745166,0.592048],[2.793116,4.475422,-9.050619,9.110487,-9.393216,7.529354,7.131028,8.020651,3.379654,-2.314323,-3.762667,-6.930443],[0.178863,6.327453,4.081614,8.066768,0.722822,9.247190,8.519151,5.676656,-1.424214,-0.748651,-3.935577,2.038126],[9.010130,-2.180579,-7.219762,-7.440754,3.705586,-0.524413,-2.590170,-6.383787,-8.781796,7.539037,-5.245563,3.114256],[-2.087803,1.596077,-3.576705,-3.015742,-3.227306,0.546286,7.555145,-3.286241,5.943965,2.949175,-3.846445,0.298874],[-2.632710,-5.725989,-4.792572,9.014604,-8.504822,4.804597,9.243023,-0.565906,6.522961,-7.757613,4.814324,2.612754],[7.008090,-7.070763,-3.435948,-2.674972,2.798025,-7.879693,4.940595,-6.675410,-5.563329,-5.657910,8.038452,3.198062],[-0.671921,8.976735,-4.073158,-1.884867,8.690045,8.148401,1.580085,-2.931715,1.996521,-2.019431,-5.640514,-3.633995],[-6.370847,1.694406,6.207290,-9.662049,-4.151704,-0.377827,9.944465,2.652376,2.808818,-7.030760,-2.490719,3.328777],[9.736728,-4.346074,-2.295555,-2.398021,1.449892,-5.231030,-2.847535,-9.119155,-0.948273,8.234129,-0.224707,5.056069],[-3.244893,-2.361215,-0.637352,-3.747711,6.349497,-2.150909,0.328056,-3.702385,-9.786226,6.130273,-9.380629,1.435950],[-9.357661,-5.552354,3.987052,5.952622,7.111185,8.386495,5.622377,-6.117101,-9.214114,3.800140,4.531078,5.403858],[-1.762739,3.620958,-3.644323,-5.597646,0.337798,3.843214,-7.679910,-2.405518,-5.809718,1.724833,3.234365,-4.355480],[-6.079159,0.069217,-7.473671,2.225403,-0.760379,1.354324,-6.040409,7.776060,-7.572268,-3.203510,8.829540,-9.708148],[-2.436161,-2.882512,9.137571,-9.233121,-1.448035,-9.963357,-4.530880,6.062577,-9.482801,7.801397,-2.061524,-1.401005],[-8.456663,7.972908,-7.577614,3.795127,-1.135729,-3.899378,0.510264,3.977376,8.812297,-4.480204,-5.374294,-1.344615],[-1.522592,6.521783,-5.745170,3.152088,-6.353226,6.368416,-1.957960,-6.486548,-4.285486,3.970900,8.757561,2.611136],[-9.175796,-8.055226,6.491008,9.072575,-1.839571,9.493332,-7.761746,3.377124,3.590838,4.982112,-1.729810,-4.882761],[4.303600,-7.025345,6.204657,3.535757,0.182705,-9.339305,-7.148631,-7.111731,-2.370747,0.643738,-2.521093,5.970614],[2.143973,0.822213,-6.587010,-5.497422,6.503034,-3.467394,-5.493379,-8.178835,1.480162,7.091470,-5.034452,1.724021],[5.332745,-7.970572,5.988286,4.067940,-5.190008,-7.069638,7.437863,-4.239540,8.764084,5.758894,-4.789408,7.978115],[-5.018301,0.346815,-3.232954,2.444225,-3.764254,4.288029,0.023293,-7.631175,-0.090591,1.601177,-3.921948,-4.676117],[-0.841883,4.739921,-3.157647,4.766689,4.356008,8.374324,0.886862,3.890664,-6.195447,2.998505,-9.916769,-4.177901],[2.473449,-6.734864,6.168882,6.889236,-3.930502,1.444063,-8.195270,1.253815,8.214606,6.248876,5.901673,-3.211538],[-3.729363,6.493776,-6.375748,3.402292,9.081074,3.560854,-2.997504,5.789244,5.209640,0.526195,1.490403,-1.464802],[-3.150951,5.843831,-1.675624,9.446421,2.992463,9.227198,-5.524057,8.828218,-1.310598,7.018248,-7.019774,9.031219],[7.810919,7.457783,0.325372,4.241805,7.921561,1.530097,6.369093,-0.932857,-2.147601,-9.305391,-3.826465,-0.605418],[-4.941285,-6.544830,-2.697395,-8.585591,-3.125616,-8.801304,1.350281,7.077057,-0.086878,6.634283,-6.397567,2.158684],[7.777429,6.163684,4.426758,6.832809,7.408664,-8.635769,9.996329,1.749397,-2.082033,-4.616271,-1.562637,8.268904],[-1.448998,-1.178015,-3.404539,9.128242,8.460863,-0.908243,6.860716,-2.410384,1.361866,-1.337955,7.479033,-0.576514],[-0.004013,-1.106913,5.728975,7.939021,-0.409646,-4.184550,1.277042,-8.103486,-8.071277,-3.620506,-2.022437,3.034052],[9.234717,6.920484,6.654342,9.270054,-1.446757,-7.889223,0.252877,8.847419,6.254144,-0.048230,-2.515263,9.807441],[4.670074,-2.259307,-8.108505,6.431942,1.904026,9.993128,0.592360,-1.072831,-9.079062,1.892364,9.554410,2.654079],[-8.137561,5.927099,-8.042808,7.755031,-9.093798,-7.927470,6.231236,7.603333,-8.637754,-0.298393,7.403793,1.081791]], dtype = "float32")#candidate|5344|(56, 12)|const|float32
bop_5345 = relay.logical_and(var_5334.astype('bool'), relay.reshape(const_5344.astype('bool'), relay.shape_of(var_5334))) # shape=(56, 12)
uop_5349 = relay.asinh(call_5270.astype('float32')) # shape=(12, 5, 4)
uop_5351 = relay.asinh(call_5271.astype('float32')) # shape=(12, 5, 4)
output = relay.Tuple([call_5285,call_5291,const_5292,const_5293,var_5294,call_5301,var_5302,bop_5335,bop_5345,uop_5349,])
output2 = relay.Tuple([call_5286,call_5296,const_5292,const_5293,var_5294,call_5303,var_5302,bop_5335,bop_5345,uop_5351,])
func_5353 = relay.Function([var_5294,var_5302,var_5334,], output)
mod['func_5353'] = func_5353
mod = relay.transform.InferType()(mod)
var_5354 = relay.var("var_5354", dtype = "float32", shape = (6, 30))#candidate|5354|(6, 30)|var|float32
var_5355 = relay.var("var_5355", dtype = "float64", shape = (1152,))#candidate|5355|(1152,)|var|float64
var_5356 = relay.var("var_5356", dtype = "float32", shape = (56, 12))#candidate|5356|(56, 12)|var|float32
output = func_5353(var_5354,var_5355,var_5356,)
func_5357 = relay.Function([var_5354,var_5355,var_5356,], output)
mutated_mod['func_5357'] = func_5357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4900_call = mod.get_global_var('func_4900')
func_4901_call = mutated_mod.get_global_var('func_4901')
call_5359 = func_4900_call()
call_5360 = func_4900_call()
const_5365 = relay.const([[[-6.349577,2.575997,-7.297243,-9.200525],[5.243177,-6.766781,2.695665,2.852404],[-7.605037,-3.958501,8.008398,-7.934676],[-4.857704,5.882619,-5.091096,4.213819],[6.157192,-1.300307,9.243662,-4.699304]],[[-5.650432,-0.673935,-8.571291,2.423113],[-8.503457,-9.931992,6.712081,-4.688617],[-0.597088,6.329321,-1.401391,6.601689],[6.110451,7.152194,-7.303937,-9.708717],[8.425786,-4.490005,-5.219782,-4.001887]],[[7.126845,-0.145695,9.858606,9.132447],[2.705067,-8.494135,1.432468,2.640444],[5.074514,3.186850,-4.398059,-6.010731],[-2.700869,-2.927512,-8.954217,8.838241],[4.829180,9.809078,-0.943597,-4.575478]],[[1.658562,-5.031133,-1.775177,9.766012],[-1.329747,3.099722,-1.623926,-0.284640],[6.278639,-0.168608,8.551781,6.410954],[6.471516,9.802185,5.613359,9.456986],[1.763924,0.349995,4.363189,6.756259]],[[-7.584457,6.221201,9.617953,1.933421],[-5.757519,-2.309245,-6.143995,-8.005236],[-9.079670,4.633042,6.007069,-5.136268],[-4.362241,-6.595764,2.665278,-2.455933],[-1.772278,-8.829330,9.592071,-7.039239]],[[2.559905,-7.311690,4.292866,-7.082779],[-5.947777,0.786257,-2.079870,-0.627246],[-2.737098,1.787495,3.819538,1.564740],[2.116124,3.125782,5.302626,-8.056102],[-3.060110,-8.872222,2.426530,-5.758678]],[[4.022940,6.859097,2.123146,-7.486280],[-1.612100,2.560169,5.267045,6.896247],[9.977926,-0.919399,6.785058,6.769300],[2.690078,4.546452,-1.244544,-2.906325],[9.256834,-1.545952,-2.436565,-1.506355]],[[-9.908608,-8.469540,-4.398603,-4.979855],[-2.486759,4.106124,0.327317,0.414012],[-2.288853,9.533810,-3.927185,-3.578249],[1.429915,4.135756,-8.207031,-3.415576],[1.824539,-3.418622,-8.492466,7.594434]],[[5.216331,-0.628606,-1.884599,7.665075],[-8.641881,9.178201,1.694724,5.863866],[-8.431624,-5.748552,-3.077952,9.138815],[2.647239,-7.339286,-8.614397,-9.178241],[-2.819668,-8.259611,-6.500884,9.576120]],[[-8.112005,-1.049723,5.095851,-3.129322],[-9.768631,-3.587630,6.121169,-2.469211],[6.238856,6.107728,3.230006,-0.712182],[-7.840326,-7.172404,-4.839485,-2.227960],[-2.493141,-2.338224,-6.632162,-5.891983]],[[9.636388,3.151167,-1.189829,3.749808],[-0.209266,-1.435079,-0.619801,2.017253],[8.407680,-5.757803,-7.533474,5.719992],[7.421709,-3.112560,-3.510201,-9.739285],[9.073424,3.934382,3.370228,5.967249]],[[0.239110,1.560696,-2.285144,-7.592358],[-7.793551,-2.789848,6.229642,-3.156665],[1.777926,-2.478613,3.785298,-0.631534],[1.205849,-9.519872,-0.189604,-5.669352],[5.854001,-9.477983,4.237704,-0.340988]]], dtype = "float32")#candidate|5365|(12, 5, 4)|const|float32
bop_5366 = relay.divide(call_5359.astype('float64'), relay.reshape(const_5365.astype('float64'), relay.shape_of(call_5359))) # shape=(12, 5, 4)
bop_5369 = relay.divide(call_5360.astype('float64'), relay.reshape(const_5365.astype('float64'), relay.shape_of(call_5360))) # shape=(12, 5, 4)
output = bop_5366
output2 = bop_5369
func_5379 = relay.Function([], output)
mod['func_5379'] = func_5379
mod = relay.transform.InferType()(mod)
output = func_5379()
func_5380 = relay.Function([], output)
mutated_mod['func_5380'] = func_5380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5159_call = mod.get_global_var('func_5159')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_5413 = relay.TupleGetItem(func_5159_call(), 0)
call_5414 = relay.TupleGetItem(func_5161_call(), 0)
func_5159_call = mod.get_global_var('func_5159')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_5423 = relay.TupleGetItem(func_5159_call(), 0)
call_5424 = relay.TupleGetItem(func_5161_call(), 0)
output = relay.Tuple([call_5413,call_5423,])
output2 = relay.Tuple([call_5414,call_5424,])
func_5430 = relay.Function([], output)
mod['func_5430'] = func_5430
mod = relay.transform.InferType()(mod)
mutated_mod['func_5430'] = func_5430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5430_call = mutated_mod.get_global_var('func_5430')
call_5431 = func_5430_call()
output = call_5431
func_5432 = relay.Function([], output)
mutated_mod['func_5432'] = func_5432
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5447 = relay.var("var_5447", dtype = "float32", shape = (11, 4, 14))#candidate|5447|(11, 4, 14)|var|float32
uop_5448 = relay.asinh(var_5447.astype('float32')) # shape=(11, 4, 14)
uop_5456 = relay.atan(uop_5448.astype('float32')) # shape=(11, 4, 14)
bop_5463 = relay.logical_and(uop_5456.astype('bool'), relay.reshape(uop_5448.astype('bool'), relay.shape_of(uop_5456))) # shape=(11, 4, 14)
output = bop_5463
output2 = bop_5463
func_5466 = relay.Function([var_5447,], output)
mod['func_5466'] = func_5466
mod = relay.transform.InferType()(mod)
var_5467 = relay.var("var_5467", dtype = "float32", shape = (11, 4, 14))#candidate|5467|(11, 4, 14)|var|float32
output = func_5466(var_5467)
func_5468 = relay.Function([var_5467], output)
mutated_mod['func_5468'] = func_5468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5137_call = mod.get_global_var('func_5137')
func_5139_call = mutated_mod.get_global_var('func_5139')
call_5476 = relay.TupleGetItem(func_5137_call(), 3)
call_5477 = relay.TupleGetItem(func_5139_call(), 3)
func_4115_call = mod.get_global_var('func_4115')
func_4120_call = mutated_mod.get_global_var('func_4120')
const_5481 = relay.const([6.657447,-8.702256,3.006900,8.623175,-3.572229,-4.117402,-4.708942,9.594430,9.713915,1.708612,-0.322771,6.964601,-3.837750,7.796524,9.019670,6.817134,6.649092,3.936743,-2.061557,-9.672256,-7.370311,-0.878935,4.500354,9.010816,9.220910,9.486205,-4.996498,-3.338282,-9.040373,-3.882968,2.422378,-0.611316,2.046602,5.657305,-6.097354,8.516563,-9.924545,1.334323,1.223379,9.837558,4.157336,-9.770995,2.540194,6.499854,-9.472128,3.419423,4.070531,7.253504,3.012855,-8.977537,-2.853823,-2.127732,-2.380106,-7.834157,-6.215801,-8.144817,7.328436,3.186225,-9.660088,-9.228456,-1.271946,-4.011453,3.110834,0.573949,-7.682289,-1.708137,6.442361,3.256061,-5.653413,9.074244,5.568038,-2.953995,-5.789047,-3.981343,-3.284816,-7.345555,-5.832258,5.652251,-3.346536,3.518885,-1.103874,0.977863,-8.496340,0.755063,-3.821823,-8.687250,5.665798,-2.792147,-5.253089,-6.930272,5.976397,-0.699974,9.757911,9.725020,-8.650896,-7.946090,-4.415961,-2.003980,-0.176708,0.088615,-0.205820,8.972306,0.149342,6.422297,-8.770829,-5.681577,-3.742719,7.731644,-0.469618,5.758515,1.775795,-4.933701,6.889127,9.636235,-4.944663,7.299230,-7.294760,-2.532637,-3.671967,5.090869,3.019892,7.349255,-7.118781,4.193909,8.321898,8.341115,-5.046148,3.594279,-2.094267,-8.080306,9.761155,9.193356,-1.041092,2.612705,-6.431235,3.451226,8.430531,1.114822,2.734923,-4.645004,-4.873692,-3.510171,1.188388,-5.294233,-7.391499,1.276272,-1.918203,6.248351,-6.813473,-8.238826,7.075451,1.731021,-4.550375,6.975500,6.247901,-9.913259,5.765294,6.003904,-7.607352,9.141371,-9.356185,0.651503,2.387109,3.785183,9.986862,-6.153469,6.725656,9.692855,7.616150,8.232408,1.176433,-5.944283,-7.034186,7.819379,2.641750,9.477501,3.614162,5.939984,1.199104,3.093246,-4.222215,-9.953687,3.620189,4.116695,-9.479739,9.149438,-1.063531,-1.430573,3.818227,-3.656528,-8.871815,-3.105486,-6.074421,9.980376,-1.662782,-5.854456,-9.409259,-4.450541,6.336096,-9.704694,7.629516,0.942470,8.794514,-7.751485,2.483767,-2.266312,0.042360,-6.024365,-9.088737,3.182130,-4.747275,6.775762,-0.813534,-9.336980,5.554826,3.462114,-7.085352,-8.487752,4.745826,7.884641,6.806004,-1.647496,-3.399612,-8.177411,-1.385808,-2.836424,-8.333422,-4.834954,9.379982,-4.961377,0.155715,4.830686,-5.278169,-8.473122,1.010114,-4.633570,7.662226,4.137198,9.389715,-9.362051,5.144430,-3.204584,-4.984701,9.931603,4.251300,-8.665503,9.039568,7.464429,4.756497,6.199878,1.820129,-4.084021,7.933170,-0.066410,0.681767,-4.429242,2.864020,-5.346131,4.646404,-5.251804,3.550746,-7.118047,-2.670377,-7.456977,7.828047,-5.477290,-7.249278,8.413817,-5.460044,-6.023263,-1.885071,1.880505,-2.423956,5.473680,4.875147,-1.478979,-5.805323,0.441295,-5.173810,-4.492415,-2.387246,-5.440443,7.029266,-7.351881,-0.061409,-2.946879,6.784282,-4.764318,5.111590,-0.171612,6.384757,-7.857841,6.402812,5.847549,1.466804,5.379434,-7.473957,-0.582890,4.182656,-0.734960,-2.802245,-2.089484,-5.099977,2.449101,-1.004265,-1.344654,-6.627975,3.541118,-6.610840,-1.515600,-3.910005,2.376642,7.622568,5.816681,-2.645097,-0.693963,-1.534742,3.300889,-3.617993,-2.195813,-8.774280,-1.780819,0.684099,-7.176625,-9.775723,-0.979767,-2.817976,-4.186558,3.050152,-3.404935,2.952882,-7.402592,8.255516,-7.998565,-9.114362,-2.172026,5.855607,-6.260455,-5.362712,-5.330126,6.586268,3.295479,5.439640,9.821613,4.039121,-4.559899,7.700569,-9.158550,-9.619602,-9.330031,-6.844953,6.373008,8.060258,-9.370086,-1.781266,7.780130,2.059721,2.646605,-3.273802,-8.534503,-4.383106,-1.330245,1.855576,-2.178124,6.271491,9.729963,2.384755,3.723305,-8.215922,-8.927820,-2.921241,-2.572215,8.703677,-9.092122,-0.553389,4.080178,-6.158134,-4.304699,1.445328,3.293460,9.449183,-0.233096,-3.668700,-8.626157,1.703780,4.245276,-4.818474,-6.101870,-8.970147,1.119867,2.640422,2.647938,-8.003979,9.881767,6.610761,-7.701873,3.580890,2.163177,-4.447615,-9.619499,4.855884,9.039254,6.390252,4.031942,7.031934,9.425101,9.042396,-8.978023,-7.411575,8.230535,-7.488259,4.051970,-1.207174,4.636899,-4.924731,3.267073,-9.194283,8.502734,-4.338030,8.873927,0.191388,-3.413430,6.025262,-0.924423,-4.410874,2.992596,9.977656,0.274065,-1.437986,-1.200146,-0.881615,-8.225228,-4.126705,7.834514,-3.565672,-2.623018,6.490993,-4.300558,6.593108,-0.868218,9.599495,2.873079,-4.933454,-9.615432,0.264823,8.243067,-6.875637,-7.202656,6.351775,8.380379,-4.422953,5.571667,-5.892991,9.586126,-7.514299,-6.188088,6.038209,-3.468349,-2.110946,-7.239416,6.430386,2.349354,4.839795,9.535892,1.417874,-6.512141,-3.386343,9.681092,-6.741993,1.141644,3.560247,-3.924980,6.162867,-4.791891,8.507391,4.497872,4.599733,9.059753,8.036951,6.537920,2.076097,-9.479573,-5.494245,8.148553,-2.818053,1.401270,-8.656343,2.891996,6.035647,5.342781,-7.359665,5.602452,9.372521,3.566220,0.862782,-3.269083,-6.747404,3.800853,-1.209353,8.333538,3.901943,-0.038779,-0.837552,0.313508,-0.474246,6.450787,6.396766,-9.506780,7.353003,5.316077,-2.535779,0.871216,6.475206,2.090991,2.717435,-0.287104,-5.695254,-5.841026,-6.121162,-3.528316,-6.888952,-0.108548,-3.787149,4.005972,-6.675220,6.518954,-6.780712,9.163506,5.475850,7.549758,-3.847061,6.742866,0.130815,5.410761,8.809553,-2.639198,5.270199,3.660354,0.208449,3.892872,-7.660143,-3.035820,-6.545435,-8.694160,0.406242,-7.356904,9.783975,-3.226753,-3.868170,5.742170,1.123133,5.677122,-2.923669,-5.193800,9.960608,2.842757,-0.640820,-5.479538,1.037996,-7.271184,0.418159,-7.660357,-6.032526,3.249972,4.720129,-3.843019,-8.065718,4.516467,0.579030,-0.771761,-6.124126,-1.073584,0.752837,7.650915,1.789023,6.682149,-9.681887,6.767307,-3.662839,5.476614,2.444069,-8.289894,-5.428923,-1.831972,-2.619208,-1.422920,-7.774549,2.576864,-5.135553,7.655206,9.558700,-7.903164,-0.781162,-8.590668,-2.089358,-4.602421,-0.415994,0.419233,2.668675,-3.744991,-6.858506,-3.387818,3.725873,-3.581254,-0.728098,0.111725,0.781916,7.066373,2.394646,-2.911127,-0.633602,-0.420012,-3.313517,0.206120,3.433479,9.366794,-8.261566,8.407418,4.046650,8.068040,4.588994,2.881126,-9.618151,-6.010044,6.602586,7.287256,-7.743757,-9.441719,7.644874,-1.126731,6.226212,-9.128659,3.965281,5.291320,-0.149648,-7.647954,3.219110,-5.045275,-4.803747,8.103568,4.424029,4.517247,-1.462268,-1.121898,3.057807,7.273186,-0.694640,6.923650,1.841337,7.655710,5.811307,3.203992,6.350787,6.004633,-7.668782,4.347243,7.653800,7.351332,-1.070047,-2.670148,-6.636348,-2.313178,2.238096,-5.717780,-1.569982,-9.030433,9.998050,-7.764899,3.947128,2.696932,4.057307,-9.064609,8.923875,-4.808580,4.598375,-6.767773,-3.638209,2.961484,-5.076434,-7.907511,4.949564,-2.308879,-5.135493,6.981645,-1.491967,-3.136084,-1.529062,8.898788,-3.136403,1.852186,-7.957426,-4.889837,8.112348,-9.260208,2.618462,-8.804917,-5.458658,-4.335439,-0.869715,-2.868874], dtype = "float64")#candidate|5481|(700,)|const|float64
var_5482 = relay.var("var_5482", dtype = "float64", shape = (1, 462))#candidate|5482|(1, 462)|var|float64
var_5483 = relay.var("var_5483", dtype = "float32", shape = (180,))#candidate|5483|(180,)|var|float32
call_5480 = relay.TupleGetItem(func_4115_call(relay.reshape(const_5481.astype('float64'), [5, 10, 14]), relay.reshape(var_5482.astype('float64'), [231, 2]), relay.reshape(var_5483.astype('float32'), [180,]), ), 10)
call_5484 = relay.TupleGetItem(func_4120_call(relay.reshape(const_5481.astype('float64'), [5, 10, 14]), relay.reshape(var_5482.astype('float64'), [231, 2]), relay.reshape(var_5483.astype('float32'), [180,]), ), 10)
output = relay.Tuple([call_5476,call_5480,const_5481,var_5482,var_5483,])
output2 = relay.Tuple([call_5477,call_5484,const_5481,var_5482,var_5483,])
func_5487 = relay.Function([var_5482,var_5483,], output)
mod['func_5487'] = func_5487
mod = relay.transform.InferType()(mod)
var_5488 = relay.var("var_5488", dtype = "float64", shape = (1, 462))#candidate|5488|(1, 462)|var|float64
var_5489 = relay.var("var_5489", dtype = "float32", shape = (180,))#candidate|5489|(180,)|var|float32
output = func_5487(var_5488,var_5489,)
func_5490 = relay.Function([var_5488,var_5489,], output)
mutated_mod['func_5490'] = func_5490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5430_call = mod.get_global_var('func_5430')
func_5432_call = mutated_mod.get_global_var('func_5432')
call_5512 = relay.TupleGetItem(func_5430_call(), 1)
call_5513 = relay.TupleGetItem(func_5432_call(), 1)
func_5159_call = mod.get_global_var('func_5159')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_5520 = relay.TupleGetItem(func_5159_call(), 0)
call_5521 = relay.TupleGetItem(func_5161_call(), 0)
output = relay.Tuple([call_5512,call_5520,])
output2 = relay.Tuple([call_5513,call_5521,])
func_5528 = relay.Function([], output)
mod['func_5528'] = func_5528
mod = relay.transform.InferType()(mod)
output = func_5528()
func_5529 = relay.Function([], output)
mutated_mod['func_5529'] = func_5529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5379_call = mod.get_global_var('func_5379')
func_5380_call = mutated_mod.get_global_var('func_5380')
call_5556 = func_5379_call()
call_5557 = func_5379_call()
output = relay.Tuple([call_5556,])
output2 = relay.Tuple([call_5557,])
func_5558 = relay.Function([], output)
mod['func_5558'] = func_5558
mod = relay.transform.InferType()(mod)
output = func_5558()
func_5559 = relay.Function([], output)
mutated_mod['func_5559'] = func_5559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5137_call = mod.get_global_var('func_5137')
func_5139_call = mutated_mod.get_global_var('func_5139')
call_5567 = relay.TupleGetItem(func_5137_call(), 2)
call_5568 = relay.TupleGetItem(func_5139_call(), 2)
uop_5582 = relay.erf(call_5567.astype('float32')) # shape=(2, 20)
uop_5584 = relay.erf(call_5568.astype('float32')) # shape=(2, 20)
var_5587 = relay.var("var_5587", dtype = "float32", shape = (2, 20))#candidate|5587|(2, 20)|var|float32
bop_5588 = relay.bitwise_and(uop_5582.astype('int8'), relay.reshape(var_5587.astype('int8'), relay.shape_of(uop_5582))) # shape=(2, 20)
bop_5591 = relay.bitwise_and(uop_5584.astype('int8'), relay.reshape(var_5587.astype('int8'), relay.shape_of(uop_5584))) # shape=(2, 20)
output = bop_5588
output2 = bop_5591
func_5607 = relay.Function([var_5587,], output)
mod['func_5607'] = func_5607
mod = relay.transform.InferType()(mod)
mutated_mod['func_5607'] = func_5607
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5608 = relay.var("var_5608", dtype = "float32", shape = (2, 20))#candidate|5608|(2, 20)|var|float32
func_5607_call = mutated_mod.get_global_var('func_5607')
call_5609 = func_5607_call(var_5608)
output = call_5609
func_5610 = relay.Function([var_5608], output)
mutated_mod['func_5610'] = func_5610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5379_call = mod.get_global_var('func_5379')
func_5380_call = mutated_mod.get_global_var('func_5380')
call_5615 = func_5379_call()
call_5616 = func_5379_call()
output = call_5615
output2 = call_5616
func_5649 = relay.Function([], output)
mod['func_5649'] = func_5649
mod = relay.transform.InferType()(mod)
output = func_5649()
func_5650 = relay.Function([], output)
mutated_mod['func_5650'] = func_5650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4900_call = mod.get_global_var('func_4900')
func_4901_call = mutated_mod.get_global_var('func_4901')
call_5661 = func_4900_call()
call_5662 = func_4900_call()
uop_5665 = relay.sinh(call_5661.astype('float32')) # shape=(12, 5, 4)
uop_5667 = relay.sinh(call_5662.astype('float32')) # shape=(12, 5, 4)
output = uop_5665
output2 = uop_5667
func_5672 = relay.Function([], output)
mod['func_5672'] = func_5672
mod = relay.transform.InferType()(mod)
mutated_mod['func_5672'] = func_5672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5672_call = mutated_mod.get_global_var('func_5672')
call_5673 = func_5672_call()
output = call_5673
func_5674 = relay.Function([], output)
mutated_mod['func_5674'] = func_5674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5430_call = mod.get_global_var('func_5430')
func_5432_call = mutated_mod.get_global_var('func_5432')
call_5716 = relay.TupleGetItem(func_5430_call(), 0)
call_5717 = relay.TupleGetItem(func_5432_call(), 0)
output = relay.Tuple([call_5716,])
output2 = relay.Tuple([call_5717,])
func_5735 = relay.Function([], output)
mod['func_5735'] = func_5735
mod = relay.transform.InferType()(mod)
mutated_mod['func_5735'] = func_5735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5735_call = mutated_mod.get_global_var('func_5735')
call_5736 = func_5735_call()
output = call_5736
func_5737 = relay.Function([], output)
mutated_mod['func_5737'] = func_5737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5137_call = mod.get_global_var('func_5137')
func_5139_call = mutated_mod.get_global_var('func_5139')
call_5767 = relay.TupleGetItem(func_5137_call(), 1)
call_5768 = relay.TupleGetItem(func_5139_call(), 1)
output = call_5767
output2 = call_5768
func_5791 = relay.Function([], output)
mod['func_5791'] = func_5791
mod = relay.transform.InferType()(mod)
mutated_mod['func_5791'] = func_5791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5791_call = mutated_mod.get_global_var('func_5791')
call_5792 = func_5791_call()
output = call_5792
func_5793 = relay.Function([], output)
mutated_mod['func_5793'] = func_5793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5791_call = mod.get_global_var('func_5791')
func_5793_call = mutated_mod.get_global_var('func_5793')
call_5844 = func_5791_call()
call_5845 = func_5791_call()
output = relay.Tuple([call_5844,])
output2 = relay.Tuple([call_5845,])
func_5856 = relay.Function([], output)
mod['func_5856'] = func_5856
mod = relay.transform.InferType()(mod)
mutated_mod['func_5856'] = func_5856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5856_call = mutated_mod.get_global_var('func_5856')
call_5857 = func_5856_call()
output = call_5857
func_5858 = relay.Function([], output)
mutated_mod['func_5858'] = func_5858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5379_call = mod.get_global_var('func_5379')
func_5380_call = mutated_mod.get_global_var('func_5380')
call_5932 = func_5379_call()
call_5933 = func_5379_call()
func_2073_call = mod.get_global_var('func_2073')
func_2077_call = mutated_mod.get_global_var('func_2077')
const_5941 = relay.const([True,True,False,False,True,False,True,False,True,False,False,True,True,True,False,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,False,False,True,False,False,False,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True,True,False,True,False,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,False,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,True,True,True,False,True,False,False,False,True,True,False,False,False,True,False,False,True,False,False,True,False,False,True,True,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,False,True,False,True,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,False,False,True,False,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,True,True,False,True,True,True,True,False,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,False,True,True,False,False,True,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,False,True,False,True,False,True,True,True,True,True,True,True,False,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,False,True,True,False,True,True,False,True,True,False,False,True,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,False,False,False,True,False,True,False,False,False,True,False,False,False,True,False,True,False,False,False,False,False,True,False,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,False,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True,False,True,False,False,False,True,True,True,False,True,True,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,False,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,False,False,False,False,False,True,True,True,False,True,False,False,False,True,False,True,True,False,False,False,False,True,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,True,True,True,False,False,True,False,False,True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,True,False,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,False,False,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,True,False,False,True,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,False,False,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,False,True,False,True,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,True,False,True,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,True,True,False,False,False,False,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,False,False,True,True,True,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,True,False,False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,False,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,False,False,False,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,False,False,True,False,True,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,False,True,False,True,False,True,False,False,False,False,True,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,False,True,True,True,False,False,True,False,True,False,False,False,False,False,True,False,True,False,True,False,False,True,True,True,True,False,True,False,False,True,True,False,False,False,True,True,False,False,True,False,True,True,False,True,False,False,True,True,False,False,True,False,True,True,False,True,True,True,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,False,False,False,True,False,False,True,False,True,True,True,False,True,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,False,False,True,True,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,False,True,False,False,False,False,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,False,True,False,False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False,False,True,True,False,True,False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,False,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,True,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,True,True,False,False,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,False,True,False,True,False], dtype = "bool")#candidate|5941|(2912,)|const|bool
var_5942 = relay.var("var_5942", dtype = "float32", shape = (180,))#candidate|5942|(180,)|var|float32
call_5940 = relay.TupleGetItem(func_2073_call(relay.reshape(const_5941.astype('bool'), [16, 14, 13]), relay.reshape(const_5941.astype('bool'), [16, 14, 13]), relay.reshape(var_5942.astype('float32'), [180,]), ), 1)
call_5943 = relay.TupleGetItem(func_2077_call(relay.reshape(const_5941.astype('bool'), [16, 14, 13]), relay.reshape(const_5941.astype('bool'), [16, 14, 13]), relay.reshape(var_5942.astype('float32'), [180,]), ), 1)
var_5950 = relay.var("var_5950", dtype = "float64", shape = (12, 5, 4))#candidate|5950|(12, 5, 4)|var|float64
bop_5951 = relay.logical_or(call_5932.astype('bool'), relay.reshape(var_5950.astype('bool'), relay.shape_of(call_5932))) # shape=(12, 5, 4)
bop_5954 = relay.logical_or(call_5933.astype('bool'), relay.reshape(var_5950.astype('bool'), relay.shape_of(call_5933))) # shape=(12, 5, 4)
uop_5956 = relay.rsqrt(const_5941.astype('float64')) # shape=(2912,)
output = relay.Tuple([call_5940,var_5942,bop_5951,uop_5956,])
output2 = relay.Tuple([call_5943,var_5942,bop_5954,uop_5956,])
func_5964 = relay.Function([var_5942,var_5950,], output)
mod['func_5964'] = func_5964
mod = relay.transform.InferType()(mod)
mutated_mod['func_5964'] = func_5964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5964_call = mutated_mod.get_global_var('func_5964')
var_5966 = relay.var("var_5966", dtype = "float32", shape = (180,))#candidate|5966|(180,)|var|float32
var_5967 = relay.var("var_5967", dtype = "float64", shape = (12, 5, 4))#candidate|5967|(12, 5, 4)|var|float64
call_5965 = func_5964_call(var_5966,var_5967,)
output = call_5965
func_5968 = relay.Function([var_5966,var_5967,], output)
mutated_mod['func_5968'] = func_5968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4900_call = mod.get_global_var('func_4900')
func_4901_call = mutated_mod.get_global_var('func_4901')
call_5977 = func_4900_call()
call_5978 = func_4900_call()
func_1666_call = mod.get_global_var('func_1666')
func_1672_call = mutated_mod.get_global_var('func_1672')
const_5988 = relay.const(3.479765, dtype = "float64")#candidate|5988|()|const|float64
var_5989 = relay.var("var_5989", dtype = "float64", shape = (192,))#candidate|5989|(192,)|var|float64
var_5990 = relay.var("var_5990", dtype = "float32", shape = (180,))#candidate|5990|(180,)|var|float32
var_5991 = relay.var("var_5991", dtype = "float32", shape = (672,))#candidate|5991|(672,)|var|float32
call_5987 = relay.TupleGetItem(func_1666_call(relay.reshape(const_5988.astype('float64'), []), relay.reshape(var_5989.astype('float64'), [1, 16, 12]), relay.reshape(var_5990.astype('float32'), [180,]), relay.reshape(var_5991.astype('float32'), [672,]), ), 3)
call_5992 = relay.TupleGetItem(func_1672_call(relay.reshape(const_5988.astype('float64'), []), relay.reshape(var_5989.astype('float64'), [1, 16, 12]), relay.reshape(var_5990.astype('float32'), [180,]), relay.reshape(var_5991.astype('float32'), [672,]), ), 3)
func_5159_call = mod.get_global_var('func_5159')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_5994 = relay.TupleGetItem(func_5159_call(), 0)
call_5995 = relay.TupleGetItem(func_5161_call(), 0)
output = relay.Tuple([call_5977,call_5987,const_5988,var_5989,var_5990,var_5991,call_5994,])
output2 = relay.Tuple([call_5978,call_5992,const_5988,var_5989,var_5990,var_5991,call_5995,])
func_5997 = relay.Function([var_5989,var_5990,var_5991,], output)
mod['func_5997'] = func_5997
mod = relay.transform.InferType()(mod)
mutated_mod['func_5997'] = func_5997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5997_call = mutated_mod.get_global_var('func_5997')
var_5999 = relay.var("var_5999", dtype = "float64", shape = (192,))#candidate|5999|(192,)|var|float64
var_6000 = relay.var("var_6000", dtype = "float32", shape = (180,))#candidate|6000|(180,)|var|float32
var_6001 = relay.var("var_6001", dtype = "float32", shape = (672,))#candidate|6001|(672,)|var|float32
call_5998 = func_5997_call(var_5999,var_6000,var_6001,)
output = call_5998
func_6002 = relay.Function([var_5999,var_6000,var_6001,], output)
mutated_mod['func_6002'] = func_6002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5649_call = mod.get_global_var('func_5649')
func_5650_call = mutated_mod.get_global_var('func_5650')
call_6037 = func_5649_call()
call_6038 = func_5649_call()
func_5528_call = mod.get_global_var('func_5528')
func_5529_call = mutated_mod.get_global_var('func_5529')
call_6039 = relay.TupleGetItem(func_5528_call(), 1)
call_6040 = relay.TupleGetItem(func_5529_call(), 1)
func_5528_call = mod.get_global_var('func_5528')
func_5529_call = mutated_mod.get_global_var('func_5529')
call_6043 = relay.TupleGetItem(func_5528_call(), 1)
call_6044 = relay.TupleGetItem(func_5529_call(), 1)
func_4688_call = mod.get_global_var('func_4688')
func_4691_call = mutated_mod.get_global_var('func_4691')
var_6046 = relay.var("var_6046", dtype = "float32", shape = (224,))#candidate|6046|(224,)|var|float32
call_6045 = func_4688_call(relay.reshape(var_6046.astype('float32'), [16, 1, 14]))
call_6047 = func_4688_call(relay.reshape(var_6046.astype('float32'), [16, 1, 14]))
output = relay.Tuple([call_6037,call_6039,call_6043,call_6045,var_6046,])
output2 = relay.Tuple([call_6038,call_6040,call_6044,call_6047,var_6046,])
func_6074 = relay.Function([var_6046,], output)
mod['func_6074'] = func_6074
mod = relay.transform.InferType()(mod)
var_6075 = relay.var("var_6075", dtype = "float32", shape = (224,))#candidate|6075|(224,)|var|float32
output = func_6074(var_6075)
func_6076 = relay.Function([var_6075], output)
mutated_mod['func_6076'] = func_6076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5211_call = mod.get_global_var('func_5211')
func_5213_call = mutated_mod.get_global_var('func_5213')
call_6152 = func_5211_call()
call_6153 = func_5211_call()
output = call_6152
output2 = call_6153
func_6158 = relay.Function([], output)
mod['func_6158'] = func_6158
mod = relay.transform.InferType()(mod)
mutated_mod['func_6158'] = func_6158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6158_call = mutated_mod.get_global_var('func_6158')
call_6159 = func_6158_call()
output = call_6159
func_6160 = relay.Function([], output)
mutated_mod['func_6160'] = func_6160
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6178 = relay.var("var_6178", dtype = "uint16", shape = ())#candidate|6178|()|var|uint16
var_6179 = relay.var("var_6179", dtype = "uint16", shape = (7, 11, 7))#candidate|6179|(7, 11, 7)|var|uint16
bop_6180 = relay.maximum(var_6178.astype('uint16'), var_6179.astype('uint16')) # shape=(7, 11, 7)
output = relay.Tuple([bop_6180,])
output2 = relay.Tuple([bop_6180,])
func_6185 = relay.Function([var_6178,var_6179,], output)
mod['func_6185'] = func_6185
mod = relay.transform.InferType()(mod)
mutated_mod['func_6185'] = func_6185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6185_call = mutated_mod.get_global_var('func_6185')
var_6187 = relay.var("var_6187", dtype = "uint16", shape = ())#candidate|6187|()|var|uint16
var_6188 = relay.var("var_6188", dtype = "uint16", shape = (7, 11, 7))#candidate|6188|(7, 11, 7)|var|uint16
call_6186 = func_6185_call(var_6187,var_6188,)
output = call_6186
func_6189 = relay.Function([var_6187,var_6188,], output)
mutated_mod['func_6189'] = func_6189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6158_call = mod.get_global_var('func_6158')
func_6160_call = mutated_mod.get_global_var('func_6160')
call_6295 = func_6158_call()
call_6296 = func_6158_call()
output = call_6295
output2 = call_6296
func_6299 = relay.Function([], output)
mod['func_6299'] = func_6299
mod = relay.transform.InferType()(mod)
output = func_6299()
func_6300 = relay.Function([], output)
mutated_mod['func_6300'] = func_6300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5791_call = mod.get_global_var('func_5791')
func_5793_call = mutated_mod.get_global_var('func_5793')
call_6352 = func_5791_call()
call_6353 = func_5791_call()
var_6369 = relay.var("var_6369", dtype = "float64", shape = (11, 3, 14))#candidate|6369|(11, 3, 14)|var|float64
bop_6370 = relay.logical_or(call_6352.astype('bool'), relay.reshape(var_6369.astype('bool'), relay.shape_of(call_6352))) # shape=(11, 3, 14)
bop_6373 = relay.logical_or(call_6353.astype('bool'), relay.reshape(var_6369.astype('bool'), relay.shape_of(call_6353))) # shape=(11, 3, 14)
uop_6398 = relay.acos(var_6369.astype('float32')) # shape=(11, 3, 14)
output = relay.Tuple([bop_6370,uop_6398,])
output2 = relay.Tuple([bop_6373,uop_6398,])
func_6403 = relay.Function([var_6369,], output)
mod['func_6403'] = func_6403
mod = relay.transform.InferType()(mod)
var_6404 = relay.var("var_6404", dtype = "float64", shape = (11, 3, 14))#candidate|6404|(11, 3, 14)|var|float64
output = func_6403(var_6404)
func_6405 = relay.Function([var_6404], output)
mutated_mod['func_6405'] = func_6405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6158_call = mod.get_global_var('func_6158')
func_6160_call = mutated_mod.get_global_var('func_6160')
call_6430 = func_6158_call()
call_6431 = func_6158_call()
output = relay.Tuple([call_6430,])
output2 = relay.Tuple([call_6431,])
func_6438 = relay.Function([], output)
mod['func_6438'] = func_6438
mod = relay.transform.InferType()(mod)
output = func_6438()
func_6439 = relay.Function([], output)
mutated_mod['func_6439'] = func_6439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5672_call = mod.get_global_var('func_5672')
func_5674_call = mutated_mod.get_global_var('func_5674')
call_6475 = func_5672_call()
call_6476 = func_5672_call()
func_1031_call = mod.get_global_var('func_1031')
func_1034_call = mutated_mod.get_global_var('func_1034')
var_6478 = relay.var("var_6478", dtype = "float32", shape = (336, 2))#candidate|6478|(336, 2)|var|float32
call_6477 = func_1031_call(relay.reshape(var_6478.astype('float32'), [6, 16, 7]))
call_6479 = func_1031_call(relay.reshape(var_6478.astype('float32'), [6, 16, 7]))
uop_6493 = relay.erf(call_6475.astype('float32')) # shape=(12, 5, 4)
uop_6495 = relay.erf(call_6476.astype('float32')) # shape=(12, 5, 4)
func_5487_call = mod.get_global_var('func_5487')
func_5490_call = mutated_mod.get_global_var('func_5490')
const_6499 = relay.const([-7.175813,-8.972398,-1.218979,8.912383,6.488175,-8.960773,6.207960,-2.944528,7.046355,-5.838618,-6.417743,8.680321,-4.469739,0.762736,5.517530,1.488770,8.154382,-6.082599,-0.199315,4.158488,-6.628050,4.175540,8.952921,-4.537539,9.716488,-0.176365,6.183213,-6.379996,-6.410983,4.106061,-9.838452,-6.244604,7.813296,5.344545,-0.960203,0.978709,5.924722,-9.743074,-1.531671,7.066539,0.241706,-6.000118,2.789344,4.805773,-6.356286,1.503491,8.449563,2.139930,4.984727,-6.826096,5.564093,-8.956026,0.650697,7.238230,-5.690446,9.358074,3.368281,-1.663453,-9.743287,-9.821881,0.128530,-0.239145,8.488786,1.518234,-0.131008,-8.386174,0.059142,-0.078278,-4.782453,-7.324542,0.928007,-5.907522,6.405084,4.884735,-0.965409,3.434200,-3.643406,0.447196,6.026992,-6.404018,-7.225170,5.631550,9.301328,-6.698276,2.740430,-1.088341,-8.350398,6.226638,-3.058363,-1.829391,3.019424,-7.888051,4.019353,1.195108,-6.144617,-1.395943,3.291846,-4.176196,-4.025955,-2.943092,3.360334,-2.515587,3.683400,-7.148361,-3.717958,1.507838,-3.397909,5.123830,6.984512,-4.944358,-2.171836,-1.944082,-4.636390,8.408959,-9.589955,-9.707102,-3.592424,1.605998,5.105800,2.262340,-8.611211,5.439017,-7.476462,-0.887118,0.227538,0.961412,-4.088104,8.326694,-1.069236,4.187186,-7.367427,1.296313,-9.541543,6.698779,-8.122438,0.088038,9.436094,6.740396,-5.874205,6.860620,-8.317696,4.983540,-1.099728,7.137778,5.569249,7.731269,-5.561039,0.749793,-6.943122,-0.291839,8.260238,9.828603,-8.176154,0.562102,4.526577,6.645352,4.794992,-6.252303,6.796844,1.767541,-0.765416,1.610129,4.845532,7.690998,9.875827,-8.897054,7.699867,5.377755,-2.322801,-7.407515,6.746860,5.716797,3.458802,-6.568078,3.671391,5.828794,8.870875,-9.343749,6.107070,-1.741706,-0.039314,-9.250512,-9.181894,8.371575,-2.938648,-9.881490,6.444280,-3.524858,0.380013,-3.854852,-7.971430,-6.517229,-2.972663,-5.004138,-0.372677,-7.089922,2.538366,2.229009,-2.880418,-9.784033,-8.510427,-9.286253,-2.229515,-3.484945,4.144392,-7.388253,1.762390,1.745891,-6.786916,0.111569,-1.239318,2.466643,-3.456769,-7.794751,3.698284,7.129334,9.465420,-0.397334,0.061963,-5.664537,3.036797,-1.790828,0.706769,-3.128907,-8.280448,6.079964,8.203532,-8.469386,2.706189,-0.270918,-6.734727,-9.290000,2.737307,8.603507,-8.464230,7.696846,9.447711,-2.947341,-2.252971,-4.834129,-5.451872,0.389826,-7.438292,-8.327417,-6.197793,-3.730513,-3.765739,8.044865,7.102825,-1.674506,-4.228948,6.836832,-4.038708,-4.271315,-4.453024,1.189336,-3.002921,-7.475662,-6.416964,-4.769869,8.609823,2.561004,-7.920824,4.294823,-4.961039,1.074935,-5.207206,-6.672012,-4.109759,6.380645,3.656330,6.457874,7.570678,-5.281148,-1.091388,4.343724,2.374876,-9.846867,3.062314,-5.468595,7.748889,-1.008154,-0.062596,-4.981412,1.048027,-0.443459,-8.012748,9.993896,9.473680,-4.960547,-0.177670,-5.393720,-0.294010,9.721951,-3.005913,7.667402,3.121694,3.100855,-4.921554,-4.484423,6.023825,-7.435716,9.887865,-5.036894,3.252251,-3.338727,-6.733057,-7.148124,1.274833,-2.792202,8.857182,-5.377098,7.362378,-6.731680,8.870760,9.476508,6.220690,5.182580,8.021199,-9.135137,-9.203921,6.928716,0.254056,7.550365,3.950275,-2.287878,-3.465481,-4.113141,7.543776,5.146627,9.350164,2.226115,1.135119,5.621828,-6.931359,0.743863,8.739009,4.914171,-1.131080,7.959776,-5.980264,-2.531901,-6.378679,-0.973454,-0.244659,9.340824,2.233591,-6.337460,4.014755,7.564254,5.679855,-2.425831,3.521372,0.787294,-9.427727,-0.038274,3.662426,1.994087,7.547058,0.006835,-8.035454,9.943550,3.700901,-6.702929,-6.382339,9.628239,-2.456769,-9.316642,9.835916,-5.859052,-5.544458,5.994262,9.083801,-1.865559,-2.458974,-6.822957,-8.743972,-1.749496,-3.989709,-0.079231,0.352255,-3.895970,7.440404,1.089077,4.100247,-8.693532,-8.754084,3.578729,1.886176,-0.439487,4.159231,-4.226512,7.100783,1.160530,9.680897,-6.524274,2.482386,-4.471871,7.877120,-0.943113,8.760505,-7.849036,-3.068095,-6.884458,7.793866,1.565828,8.279804,-8.628176,3.148371,-5.199291,8.547153,9.262363,-1.619182,2.809971,1.758840,-0.738483,4.755394,4.779891,-9.905457,7.645174,-5.731526,-9.573899,-1.000561,-4.107070,-0.991600,-7.830609,8.236180,3.062955,4.058933,7.370687,-5.696492,-3.083544,6.608557,3.117590,7.401021,0.774090,1.832513,5.257837,3.071848,8.488878,7.435591,8.440853,3.923593,-4.239482,-5.979115,-2.931994,7.028527,-1.522809,-3.654156,-5.121825,-3.036543,6.763410,2.390284,3.080587,1.916973,-0.443622,-1.213324,7.246243,-5.767916,-6.882551,-9.361177,5.171098], dtype = "float64")#candidate|6499|(462,)|const|float64
const_6500 = relay.const([0.265472,5.841373,-2.476094,-3.460778,-8.745598,-4.029992,-9.208533,-8.276734,4.065002,6.420465,2.121197,-8.141522,-3.961542,7.106312,2.898766,8.347748,-9.473640,-6.739696,9.627804,-5.192207,-8.371591,7.278316,3.088022,2.437114,-0.070483,5.527110,-5.434686,7.939427,2.940615,1.098507,-5.275945,-5.530584,9.929612,1.449971,7.353221,-1.939240,6.388198,-5.852165,3.102687,3.267427,-0.538967,1.444017,-8.697952,8.922192,6.507046,-8.536650,9.256578,-4.185513,0.944043,-2.257695,0.054292,-3.618069,-8.034371,-9.832221,-6.729127,1.907189,-8.189987,4.247238,5.848416,-7.729438,9.455285,-7.761545,3.747980,-2.122082,8.266802,4.735997,8.627933,0.222629,5.395295,-0.857366,8.469696,-0.242728,-2.550890,-9.114397,6.677476,7.984098,9.933452,0.533585,-9.081590,9.509534,-2.532065,3.206398,-2.547294,-8.173137,-7.698631,2.628182,-5.364937,1.130415,9.224445,4.069489,-3.287383,-0.767898,-7.634777,4.877136,7.794935,-8.234670,2.279038,1.505588,-5.620470,6.773684,-9.105721,-2.232817,6.225937,-4.450970,6.835588,3.460667,-2.975328,7.828517,2.941926,3.126698,6.384830,6.733985,6.284267,-1.515088,-3.845734,-5.034562,-4.782735,0.624865,-0.322047,4.797328,6.488344,-5.502880,-3.929381,7.672451,-1.606844,-2.850421,-3.573118,-7.249331,-5.604811,-9.885111,7.887507,-0.132041,6.122231,9.802830,9.534388,-7.003010,2.205082,-6.415067,-9.442956,0.741855,-4.705255,8.969255,3.068702,3.842658,-3.973081,-4.771337,-9.369323,-2.278148,8.783852,-4.285201,-1.250978,7.944659,2.301359,1.586451,2.556612,-2.792467,-1.912732,7.663128,4.115449,1.584280,-0.710607,0.002238,-8.222573,-7.238543,2.939687,-6.633947,8.787487,7.840744,4.855535,3.526944,-1.443150,2.447521,1.606376,-6.465754,6.956853,-7.161136,-5.165903,-9.909950,7.197028,-1.337524], dtype = "float32")#candidate|6500|(180,)|const|float32
call_6498 = relay.TupleGetItem(func_5487_call(relay.reshape(const_6499.astype('float64'), [1, 462]), relay.reshape(const_6500.astype('float32'), [180,]), ), 2)
call_6501 = relay.TupleGetItem(func_5490_call(relay.reshape(const_6499.astype('float64'), [1, 462]), relay.reshape(const_6500.astype('float32'), [180,]), ), 2)
output = relay.Tuple([call_6477,var_6478,uop_6493,call_6498,const_6499,const_6500,])
output2 = relay.Tuple([call_6479,var_6478,uop_6495,call_6501,const_6499,const_6500,])
func_6502 = relay.Function([var_6478,], output)
mod['func_6502'] = func_6502
mod = relay.transform.InferType()(mod)
var_6503 = relay.var("var_6503", dtype = "float32", shape = (336, 2))#candidate|6503|(336, 2)|var|float32
output = func_6502(var_6503)
func_6504 = relay.Function([var_6503], output)
mutated_mod['func_6504'] = func_6504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5159_call = mod.get_global_var('func_5159')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_6514 = relay.TupleGetItem(func_5159_call(), 0)
call_6515 = relay.TupleGetItem(func_5161_call(), 0)
output = call_6514
output2 = call_6515
func_6528 = relay.Function([], output)
mod['func_6528'] = func_6528
mod = relay.transform.InferType()(mod)
output = func_6528()
func_6529 = relay.Function([], output)
mutated_mod['func_6529'] = func_6529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6438_call = mod.get_global_var('func_6438')
func_6439_call = mutated_mod.get_global_var('func_6439')
call_6628 = relay.TupleGetItem(func_6438_call(), 0)
call_6629 = relay.TupleGetItem(func_6439_call(), 0)
output = call_6628
output2 = call_6629
func_6633 = relay.Function([], output)
mod['func_6633'] = func_6633
mod = relay.transform.InferType()(mod)
mutated_mod['func_6633'] = func_6633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6633_call = mutated_mod.get_global_var('func_6633')
call_6634 = func_6633_call()
output = call_6634
func_6635 = relay.Function([], output)
mutated_mod['func_6635'] = func_6635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6528_call = mod.get_global_var('func_6528')
func_6529_call = mutated_mod.get_global_var('func_6529')
call_6645 = func_6528_call()
call_6646 = func_6528_call()
func_5735_call = mod.get_global_var('func_5735')
func_5737_call = mutated_mod.get_global_var('func_5737')
call_6647 = relay.TupleGetItem(func_5735_call(), 0)
call_6648 = relay.TupleGetItem(func_5737_call(), 0)
func_2525_call = mod.get_global_var('func_2525')
func_2527_call = mutated_mod.get_global_var('func_2527')
const_6669 = relay.const([-3.600450,4.965127,5.978238,4.099109,2.384555,1.357903,1.971626,3.863570,3.068225,0.993616,1.058154,1.913887,2.520245,6.187043,-3.763067,-1.737386,-3.821061,6.904966,-4.810893,9.487607,6.354424,8.141899,1.518473,-4.463824,0.662003,-8.531767,5.547722,-4.186623,-2.830869,9.969041,-2.006026,4.183168,-6.443893,-2.143698,1.708880,-9.609151,9.422218,6.630496,-9.525237,5.231063,0.776287,-0.292949,4.291555,-9.355240,9.919489,-0.895024,3.299098,-6.123813,-6.824212,8.419137,-4.267250,-4.784354,3.137752,-9.924796,-6.132494,8.494966,6.347793,-8.726594,-2.312750,-3.923733,6.567813,5.832354,2.081744,-4.314111,-6.659869,8.753271,4.994429,-8.503657,-9.110696,-1.144703,-5.412719,-7.903836,1.891375,4.848114,3.746965,5.620886,-5.829110,-2.572332], dtype = "float64")#candidate|6669|(78,)|const|float64
call_6668 = relay.TupleGetItem(func_2525_call(relay.reshape(const_6669.astype('float64'), [1, 6, 13])), 1)
call_6670 = relay.TupleGetItem(func_2527_call(relay.reshape(const_6669.astype('float64'), [1, 6, 13])), 1)
uop_6688 = relay.asin(call_6647.astype('float32')) # shape=(2, 20)
uop_6690 = relay.asin(call_6648.astype('float32')) # shape=(2, 20)
output = relay.Tuple([call_6645,call_6668,const_6669,uop_6688,])
output2 = relay.Tuple([call_6646,call_6670,const_6669,uop_6690,])
func_6692 = relay.Function([], output)
mod['func_6692'] = func_6692
mod = relay.transform.InferType()(mod)
output = func_6692()
func_6693 = relay.Function([], output)
mutated_mod['func_6693'] = func_6693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5185_call = mod.get_global_var('func_5185')
func_5186_call = mutated_mod.get_global_var('func_5186')
call_6694 = relay.TupleGetItem(func_5185_call(), 0)
call_6695 = relay.TupleGetItem(func_5186_call(), 0)
output = relay.Tuple([call_6694,])
output2 = relay.Tuple([call_6695,])
func_6707 = relay.Function([], output)
mod['func_6707'] = func_6707
mod = relay.transform.InferType()(mod)
output = func_6707()
func_6708 = relay.Function([], output)
mutated_mod['func_6708'] = func_6708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6299_call = mod.get_global_var('func_6299')
func_6300_call = mutated_mod.get_global_var('func_6300')
call_6758 = func_6299_call()
call_6759 = func_6299_call()
output = call_6758
output2 = call_6759
func_6761 = relay.Function([], output)
mod['func_6761'] = func_6761
mod = relay.transform.InferType()(mod)
output = func_6761()
func_6762 = relay.Function([], output)
mutated_mod['func_6762'] = func_6762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5430_call = mod.get_global_var('func_5430')
func_5432_call = mutated_mod.get_global_var('func_5432')
call_6767 = relay.TupleGetItem(func_5430_call(), 1)
call_6768 = relay.TupleGetItem(func_5432_call(), 1)
output = call_6767
output2 = call_6768
func_6781 = relay.Function([], output)
mod['func_6781'] = func_6781
mod = relay.transform.InferType()(mod)
mutated_mod['func_6781'] = func_6781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6781_call = mutated_mod.get_global_var('func_6781')
call_6782 = func_6781_call()
output = call_6782
func_6783 = relay.Function([], output)
mutated_mod['func_6783'] = func_6783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5672_call = mod.get_global_var('func_5672')
func_5674_call = mutated_mod.get_global_var('func_5674')
call_6784 = func_5672_call()
call_6785 = func_5672_call()
output = relay.Tuple([call_6784,])
output2 = relay.Tuple([call_6785,])
func_6794 = relay.Function([], output)
mod['func_6794'] = func_6794
mod = relay.transform.InferType()(mod)
mutated_mod['func_6794'] = func_6794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6794_call = mutated_mod.get_global_var('func_6794')
call_6795 = func_6794_call()
output = call_6795
func_6796 = relay.Function([], output)
mutated_mod['func_6796'] = func_6796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6438_call = mod.get_global_var('func_6438')
func_6439_call = mutated_mod.get_global_var('func_6439')
call_6802 = relay.TupleGetItem(func_6438_call(), 0)
call_6803 = relay.TupleGetItem(func_6439_call(), 0)
output = call_6802
output2 = call_6803
func_6804 = relay.Function([], output)
mod['func_6804'] = func_6804
mod = relay.transform.InferType()(mod)
output = func_6804()
func_6805 = relay.Function([], output)
mutated_mod['func_6805'] = func_6805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5159_call = mod.get_global_var('func_5159')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_6839 = relay.TupleGetItem(func_5159_call(), 0)
call_6840 = relay.TupleGetItem(func_5161_call(), 0)
func_5379_call = mod.get_global_var('func_5379')
func_5380_call = mutated_mod.get_global_var('func_5380')
call_6841 = func_5379_call()
call_6842 = func_5379_call()
func_2525_call = mod.get_global_var('func_2525')
func_2527_call = mutated_mod.get_global_var('func_2527')
const_6850 = relay.const([-7.571616,2.971500,-8.631142,0.745356,-6.833842,7.316746,6.657801,5.465461,4.111233,9.897800,-4.499327,-9.161477,7.721450,1.712723,0.323997,3.774907,-3.210437,3.482696,-5.983409,-1.799204,8.022276,9.215496,1.283719,-3.017847,-4.647920,-6.064258,-2.994663,-2.914736,-1.023072,4.730668,-7.764686,5.920620,5.160366,2.923568,3.496509,9.515255,-7.831601,6.479731,7.896732,-9.181273,2.959204,-6.200913,8.845327,-7.027693,-0.062741,-7.546046,-6.948963,0.094267,-4.431163,0.794785,-8.992975,-8.846722,-5.443296,-4.796532,3.819415,9.234210,-5.247468,-3.281129,-1.597841,6.105021,-4.032332,2.141942,-6.254515,4.628231,-8.545763,-2.923005,9.402711,3.960714,7.842056,8.581815,-4.151400,8.544326,-0.016990,6.966030,-5.920505,2.212824,-9.017765,3.892790], dtype = "float64")#candidate|6850|(78,)|const|float64
call_6849 = relay.TupleGetItem(func_2525_call(relay.reshape(const_6850.astype('float64'), [1, 6, 13])), 1)
call_6851 = relay.TupleGetItem(func_2527_call(relay.reshape(const_6850.astype('float64'), [1, 6, 13])), 1)
func_5353_call = mod.get_global_var('func_5353')
func_5357_call = mutated_mod.get_global_var('func_5357')
const_6867 = relay.const([[-6.654222,3.132495,-2.813919,9.051545],[5.138328,-0.817515,2.020055,1.903928],[-2.793905,-7.424713,-1.248206,-5.387440],[-8.557460,-6.267457,1.869782,1.052233],[3.336083,0.528818,-8.085150,7.129436],[-2.668523,7.102952,-9.053114,-9.461075],[-9.276824,-6.237383,8.964957,8.246993],[-6.097729,-1.203522,8.643165,-5.843524],[-1.032911,-6.517565,-0.517524,-0.788127],[0.273411,-8.126818,-1.352607,0.591564],[9.619856,1.791876,-9.193130,-4.849913],[-4.021285,-3.247300,-3.424739,5.102654],[-2.429592,-1.533073,4.444753,-8.390759],[-9.709342,-1.113405,0.061214,7.475693],[7.767185,9.694508,7.462801,6.492683],[-8.217848,0.452571,-7.635017,7.994677],[-6.955904,7.915803,-2.792344,5.109813],[-8.889682,6.478997,4.661324,7.372713],[4.913302,-7.813504,-6.127728,6.687081],[-4.458562,-3.039084,7.902170,0.861662],[3.795769,7.522615,-3.180560,-5.787990],[1.329551,5.257450,-1.940239,6.601880],[6.469269,-4.062773,6.467736,8.850505],[0.806274,-5.325363,2.963841,-7.420063],[-1.848268,7.972290,-6.962302,-0.773403],[5.529164,-4.019338,-1.315455,-7.391819],[-8.272120,3.213664,-8.612859,2.202466],[-2.277567,-9.541430,1.920678,-4.785477],[-7.913465,2.518086,0.154949,-2.272635],[3.302483,-6.865673,6.828211,2.235354],[-1.563678,6.263526,1.483914,-1.964267],[7.176252,-2.256977,1.756145,-2.311866],[-8.058133,8.145706,1.863021,-5.606572],[-0.762613,-7.350832,8.811790,8.146182],[7.887871,-1.007618,0.666928,-6.808244],[0.596273,-9.025040,-7.958737,7.698397],[-6.675450,-6.662616,-6.080916,-2.284554],[-2.402572,-7.986649,-4.728324,1.327535],[4.907456,6.177674,-7.418076,9.538591],[-5.926807,-5.783342,-6.165347,2.553547],[-1.179458,3.124865,-0.478549,-3.591615],[-5.396854,0.974388,-1.475499,-0.707052],[-6.746914,1.264216,-8.375939,7.958689],[-9.952958,8.106317,9.595949,2.338240],[-5.971386,-9.173370,-6.151727,5.099949],[-0.696593,7.580938,1.926154,-9.116048],[0.566411,-8.574031,-1.188543,-9.676598],[-5.023405,3.368653,-7.537107,0.121075],[1.586218,-3.306568,-5.546323,9.973153],[-1.700061,-3.558444,-4.196327,1.816218],[-0.268969,1.398378,8.995514,9.571591],[5.355396,2.031902,3.583549,6.087361],[7.830821,-1.882252,3.713381,-8.200344],[-1.594106,-4.836104,1.373664,1.721143],[8.868038,-2.826158,-4.327979,-3.805341],[-0.502312,-0.287460,2.125611,3.841902],[1.533363,-6.898363,9.960788,-1.023219],[2.979203,-4.131102,-3.453593,-2.302923],[5.110548,2.839284,-1.574383,5.681622],[6.918211,-5.735170,1.321190,1.832381],[7.308707,-0.158720,-9.386838,4.116931],[9.573755,-1.082501,6.313064,4.567365],[8.917209,-3.391947,5.051818,2.343459],[6.934597,7.469062,8.675142,8.002158],[-0.630997,7.661459,-7.768209,1.152640],[-1.550945,-9.852932,-4.163664,-9.492982],[-7.538326,-6.052643,2.200695,-0.955513],[3.440460,9.863268,8.577100,-6.626019],[-9.412936,-1.912876,-2.444237,-6.216571],[-7.055423,-6.564100,1.858492,-7.238694],[6.197548,7.768510,-2.882194,-2.861207],[4.442767,-8.521812,-1.122997,-1.944527],[-3.576638,-8.144602,-2.130334,-1.991644],[0.135619,-6.020242,5.900179,-3.068010],[6.683541,3.335898,8.008833,7.681129],[-0.356379,0.100503,-7.890656,9.093118],[5.876443,5.563833,6.113199,-7.502070],[-4.793976,2.436021,0.251212,4.774299],[5.783169,4.685248,-9.073037,9.836827],[-3.767683,1.851570,-7.519760,-0.126128],[-5.381386,-4.662908,2.031170,-3.505477],[2.751299,7.974754,9.678440,9.973357],[-6.399573,-1.813326,6.488161,8.360570],[-8.202533,1.729804,7.180528,-3.117514],[6.126680,4.542789,4.116688,5.241962],[6.036942,-8.809766,7.733900,8.391285],[-5.806553,-4.058543,5.711843,7.689423],[-2.151860,4.302125,-4.881729,-7.263967],[-7.587909,-2.243054,2.279022,-0.757995],[3.447366,-2.032174,-5.634747,-6.611088],[5.097389,-9.439359,-1.664917,-2.650192],[-5.672809,-8.268190,-9.189751,2.739445],[2.199490,-6.804455,3.611937,7.009382],[9.586661,0.060132,-8.428088,-3.995842],[-9.950816,-2.842895,9.831184,8.801240],[-5.555767,-9.640997,-2.527206,9.655552],[-1.576889,3.831499,-6.825878,-7.385195],[-5.814032,6.868982,4.081578,-3.330484],[0.420477,-6.115281,5.506625,-1.834602],[6.081455,-5.073289,-5.782412,3.783113],[-9.361452,-3.668932,-9.645742,-0.384446],[-9.941992,3.812745,-3.606732,7.612293],[-1.695032,-5.362688,-2.012611,-3.381473],[4.677949,5.829947,-9.855593,-1.773596],[2.289882,-1.387714,9.070283,-9.702791],[-2.438289,9.453596,9.127016,-5.926823],[-9.974616,-8.272217,-1.398593,3.048691],[3.525599,9.931242,2.986020,-3.779667],[1.637734,-0.718664,-2.146056,-0.007330],[-1.973456,9.826496,9.157773,-4.721005],[-4.351678,-6.526973,1.345629,-7.519403],[-5.136235,-7.648010,-9.783632,3.045393],[0.542664,-0.720626,-1.161805,0.788608],[9.937402,0.961171,-2.461145,-7.950235],[-8.154815,2.765486,-7.444005,-9.831672],[-7.028545,1.363796,-9.099485,-1.385649],[-5.099793,3.812185,6.078905,-2.489786],[8.992798,4.431687,5.121036,-2.936015],[-9.827455,6.871683,4.900969,-2.940355],[-1.521732,-3.463944,-2.559073,1.637557],[-4.460736,8.306762,5.378902,-4.752367],[3.702358,-0.972442,3.032193,-9.993788],[5.707590,5.035105,-3.141382,-1.641871],[4.713646,0.978597,6.678647,-5.891471],[6.004269,2.199994,4.228053,5.299774],[-0.399918,8.699356,-4.302744,9.977821],[6.842124,-6.654908,-3.390230,6.696251],[-1.820125,8.982114,4.668645,0.089149],[-3.282793,9.291753,-2.428580,-6.709174],[-3.006304,-8.050907,-8.457900,-1.154709],[-1.124138,0.189951,2.727701,-9.146408],[2.737112,6.495745,-0.533436,4.004321],[-4.513702,-5.120813,9.126444,9.621135],[2.462151,-0.278405,1.858015,9.672371],[8.012572,2.278241,8.059836,-0.987341],[5.283949,0.583925,-5.080389,-4.879543],[4.398947,4.209612,-8.450756,0.224882],[6.892088,1.513180,-7.883155,-3.649038],[4.111973,9.995083,-6.805223,1.471510],[1.744637,9.436125,5.852480,-6.018525],[-3.636450,4.703113,-9.961269,-8.866772],[-9.903759,1.152633,9.003882,-3.830747],[0.243987,2.998217,-7.238165,8.068336],[-4.261187,0.567626,4.526168,-3.475859],[-7.949603,-0.391892,-0.443190,-8.552178],[-4.304832,-1.005271,4.568891,-6.967964],[-7.975940,-7.424705,-9.479361,-9.612404],[-2.806318,-8.976340,-3.282819,-2.630689],[-5.172681,1.286478,3.908088,1.688461],[5.618937,4.904093,-0.892301,5.181409],[-4.666780,5.739883,-9.489282,1.312536],[-5.350420,-6.284458,-2.042667,6.234888],[0.108302,-8.374699,-0.119484,-0.123586],[8.902379,-5.854549,9.377466,-5.897597],[-6.231255,-4.819113,3.692057,2.663863],[7.178584,-6.677681,-3.217708,-1.224439],[0.223129,4.883492,-3.841665,6.829171],[9.661057,4.854398,-8.082538,-1.761077],[-2.231852,2.595313,-4.679775,8.806933],[-9.985846,-7.236677,3.948822,-1.187594],[0.381263,-7.051441,5.026964,4.205364],[8.606980,9.426749,-5.314821,-3.751604],[-8.282932,-2.998388,7.124860,-0.493549],[-3.478365,-8.921184,3.290011,-4.907080],[-8.475576,-1.729253,-8.875406,5.588612],[-1.848687,9.815650,-1.418656,0.574209],[6.521286,-5.034483,9.867149,-5.841091],[9.264640,2.261652,0.794957,6.900244],[-0.628069,0.759568,4.392677,6.858743],[8.713902,-8.951695,-7.127399,-5.732380],[3.488098,-6.389505,5.047335,-7.129353],[-6.023270,7.676799,8.834993,8.297169],[-5.696416,8.387998,4.917403,-5.558881],[1.598260,7.728851,-6.409615,-0.472643],[-8.062498,8.466054,0.807116,-0.174070],[9.483711,-3.867896,-8.690510,0.765347],[-0.236902,-7.515346,0.230543,2.752123],[1.691442,-3.331703,-7.416380,2.380030],[-0.065697,1.939595,5.826262,4.682219],[0.829369,5.624188,4.801698,3.395393],[8.978470,-0.462300,-7.174719,-7.395816],[-5.583117,6.139483,1.649281,9.016176],[4.786652,0.058508,-4.158272,-1.726359],[-9.215037,7.083258,-4.945588,-3.805483],[-4.086225,-7.999713,-9.240589,-8.590041],[2.079014,0.355400,-1.112583,-7.636455],[1.507239,-4.102238,-7.363356,-7.558091],[5.785444,1.531297,-6.872268,6.449146],[-6.891844,2.928632,-1.234231,6.811146],[7.342242,-1.047106,6.820943,-1.447984],[7.355999,-2.070184,4.124250,-7.465159],[-3.689921,-7.155028,0.824182,1.345906],[7.899546,-1.852979,-2.360390,7.545651],[3.676740,5.867831,8.133219,6.875829],[6.343307,-4.710130,-0.378585,6.181174],[-3.562479,0.589250,6.871341,4.399024],[5.390144,9.064293,7.883714,-3.423746],[-7.743541,4.031755,0.541321,-3.882759],[-0.692688,1.495612,-9.971688,0.681877],[-8.626925,-8.426144,7.220055,-2.983509],[-8.590843,-7.544756,-1.023775,-2.389709],[2.979021,-6.487964,-0.808477,6.141098],[-0.660486,-0.508594,9.038151,0.478905],[-9.824487,7.510532,-7.278284,6.460558],[7.379899,-7.581316,-9.634827,2.361739],[1.127158,-0.575501,-1.772105,-4.080244],[-9.399306,6.619631,4.577460,5.135852],[7.164671,3.190022,-4.089398,-7.936173],[4.224487,0.763087,1.672992,4.088275],[6.807247,-2.948724,0.822064,-4.128170],[0.889273,4.587539,-5.389247,9.972106],[9.364884,2.275259,5.375357,-6.786285],[7.220405,-6.236584,-7.194677,4.540073],[1.104294,4.254778,-7.336315,-4.299516],[-0.924238,-5.369352,-8.683792,-5.369070],[0.618367,7.760309,4.945441,4.777580],[5.091276,3.327319,2.390296,4.819138],[-7.950126,6.906936,-1.456232,8.020639],[3.780601,-3.484633,6.147138,5.804322],[-5.900208,0.610009,-0.974341,-8.774718],[-3.531902,0.518541,-5.671043,-4.609439],[-8.997792,-0.835660,0.545455,8.493563],[5.065754,-9.634004,-2.188884,0.344069],[-9.974254,-4.943816,6.595420,-1.186613],[-7.184642,8.186549,7.394884,9.980331],[1.903104,-2.915769,6.185092,7.757839],[7.909978,1.414534,-4.620910,3.963491],[2.645037,7.441996,-1.526293,-2.200994],[-7.746048,-4.170339,7.182878,9.042148],[5.645023,1.228827,1.403142,6.087927],[-7.398316,-4.004764,-2.612463,6.427095],[4.007706,-8.173662,3.973043,-1.087276],[4.143913,9.281636,-6.406807,2.602280],[-6.414249,3.882848,-1.143055,1.161481],[4.956584,2.059045,8.851869,-2.556665],[6.585340,-8.495532,9.919475,-0.702323],[4.508618,-1.613821,-5.972287,8.057961],[-6.814445,-6.498110,-3.390248,-6.197788],[1.142459,0.732303,-0.263843,1.086789],[-3.914975,-7.801194,-4.737539,-3.589404],[-4.699535,-4.917115,8.417522,-6.906271],[-7.789904,-0.979006,-5.526812,-0.517577],[-6.391156,-2.258551,8.865079,-2.568436],[6.567583,-8.916884,-9.531164,-3.698217],[3.497980,1.422157,-8.042244,-4.528127],[2.339155,1.678882,5.996547,1.445060],[5.119521,3.624650,-1.513677,7.786486],[-2.219989,9.456587,-3.097756,-6.415859],[-5.983405,-3.518865,8.645764,7.312422],[6.503250,-4.457904,3.444944,-2.418209],[9.705816,6.942087,-6.761337,2.321261],[-0.510187,1.925876,-5.833013,-3.618427],[4.231906,-0.011546,-8.537866,6.462222],[-2.923532,-7.790641,-1.879431,2.912387],[-9.300188,5.228996,1.201567,-6.902168],[0.398336,-9.651977,8.771828,0.039320],[-1.906247,1.389448,1.571381,-3.056734],[-7.121916,3.010766,-0.559607,-7.191787],[-3.101353,8.256102,-4.298214,9.236958],[9.498900,-0.537411,2.291376,5.155938],[6.644060,-1.264286,-8.637138,-2.912224],[2.247223,3.680447,-7.242577,1.248801],[1.889801,-2.315111,-3.754608,4.793258],[-5.111395,-3.118832,5.403673,2.268469],[-1.503512,-5.688330,-5.464795,7.711489],[-2.408764,0.080971,-6.364977,8.478977],[3.976397,8.410846,-3.267555,2.448787],[-6.286171,-5.528642,-6.399663,-0.650701],[6.688876,8.726528,-8.379595,7.011381],[0.041085,0.050145,0.120145,1.793772],[1.232686,-8.068371,7.056538,-1.720913],[5.164284,-5.149284,-7.192503,-8.425429],[2.666768,1.553606,-6.909971,-8.771240],[-7.092661,9.612836,1.383779,-2.621755],[-1.118135,-8.263271,9.088140,4.573075],[6.525329,-1.223936,3.723999,6.029535],[-1.017519,-1.385986,6.676683,-0.184835],[-5.587289,-9.157203,-1.582336,-6.425670],[7.601911,-6.367112,2.426373,-6.008584],[1.986652,-7.320852,2.827272,5.878303],[0.290035,7.520977,3.566507,-2.649942],[7.360596,3.272551,2.070330,-5.021227],[-9.035589,9.832794,7.935408,-5.321387],[-9.271074,4.147407,-9.486678,8.619716],[-6.127031,-2.084177,-6.019558,2.774337],[1.696392,8.723447,8.830538,-7.479854],[3.801090,9.394557,5.124139,6.932843],[6.462581,9.526132,-8.135494,5.410480]], dtype = "float64")#candidate|6867|(288, 4)|const|float64
const_6868 = relay.const([[-7.581030,-2.544467,-8.140964,1.630769],[7.479063,4.566583,1.509916,-9.682743],[-1.052058,4.079072,5.485414,1.803537],[-8.706662,-0.129065,-9.170192,3.290513],[1.372748,7.407339,0.249983,-6.231090],[5.695132,1.617175,-0.827831,8.419922],[5.698017,-9.105137,-0.013401,0.824291],[1.701657,3.061606,-3.001637,-1.467641],[-2.681589,-5.172004,-5.330212,-5.388083],[-9.829934,5.340628,2.113602,8.720683],[8.925401,2.489807,3.893301,1.255060],[2.362344,7.799160,7.501370,5.053201],[0.870425,8.404834,-5.820898,2.429281],[0.490389,9.609219,3.120734,-9.673591],[-3.248886,3.239148,-6.713999,-4.724730],[2.325829,-0.003100,2.041445,9.770079],[4.777935,3.262423,-6.639971,-7.099095],[4.758820,9.525700,-7.488546,0.256109],[8.404443,8.052689,9.452653,9.338748],[9.007387,4.268981,3.827710,3.271286],[2.731791,-1.497407,3.991844,-3.396646],[-3.511654,1.533303,0.512497,-7.266405],[4.353878,-9.004713,6.062511,-0.524473],[7.786562,-4.204432,-2.166923,9.942665],[-3.911286,7.317361,-2.296178,-1.374168],[8.431288,-9.273937,-6.411109,-4.670018],[-9.854964,6.197260,-4.450108,-9.768898],[0.034502,1.956913,-9.934341,-6.299577],[-2.763155,-6.017582,6.547638,-1.860704],[-2.948361,4.031326,5.185236,6.002674],[-4.512564,0.336083,-3.748556,0.902556],[-7.081745,2.562363,0.461367,1.301716],[6.163047,2.369249,-6.103173,-2.957925],[-9.963856,-3.065406,0.438288,7.588580],[-8.436758,-4.461352,-2.462027,-1.354227],[-1.285246,7.862856,2.739186,-9.291432],[-3.234766,3.130411,0.843911,5.775676],[1.287504,7.285331,2.347844,0.045815],[3.591070,-4.985104,8.167541,4.784808],[-8.198347,0.918061,4.625935,6.964642],[4.725647,8.182813,-4.744330,-9.719227],[-0.223467,-1.591124,-0.813215,1.826441],[4.881650,7.135113,-6.427511,0.928202],[8.503584,2.640076,-7.513009,-1.893481],[6.419761,-4.327565,0.329593,-8.587573],[-6.320996,9.478606,-8.759792,-6.675859],[7.075069,-1.219428,-2.931990,-9.248218],[-6.619686,3.525357,-9.261311,1.456128],[4.982973,0.701175,-3.978052,-5.908876],[-8.318963,-5.910580,-5.458958,6.938821],[-1.557393,5.652311,9.499012,9.614095],[3.706899,-1.319067,-0.587789,-6.171341],[2.412188,-2.144215,0.458752,-1.090080],[2.282971,-2.413550,3.848301,6.557201],[8.518622,2.209725,-2.249325,-7.405207],[6.924926,-9.540425,-8.767489,1.450150],[-1.579974,-1.612984,-7.468975,-6.994548],[7.980137,2.451688,-0.391417,-3.225538],[9.768822,-0.861952,-3.631019,-1.726018],[5.465903,-6.262738,9.105074,4.481277],[0.878725,0.894437,-4.694143,5.492335],[-4.327152,-8.317018,6.588920,-0.367501],[-0.808150,8.101056,2.115801,-4.861459],[-9.473062,0.575752,-4.024619,2.602448],[-8.822090,7.882015,-7.724350,-0.422387],[2.801381,5.059428,9.978539,-2.658639],[-7.654604,9.662393,1.079525,-0.468948],[-9.721303,7.337797,-8.227445,-0.814383],[1.271221,7.752516,1.261264,-2.637385],[8.511618,3.753985,2.606205,-0.967130],[4.915756,3.650632,-3.068015,-4.942937],[4.153153,5.649535,4.636906,-6.656439],[-7.485542,-9.653315,8.365342,-7.101716],[3.049241,-2.403752,7.662377,-6.723982],[-6.529822,1.783715,-6.332943,3.143049],[7.006909,8.036624,-2.986086,8.836523],[-9.211375,-5.471063,-9.967769,-4.618560],[6.863255,-9.151620,7.148291,5.764859],[9.792316,-5.916273,5.408701,0.254459],[5.273367,7.823868,6.845127,-9.156912],[-3.337926,7.945653,5.883250,-1.670702],[-7.689888,-6.069941,-0.205354,7.605826],[-1.977069,3.593244,9.427749,6.122471],[6.642054,3.206381,9.260501,-3.481428],[-4.075518,9.089007,9.478189,-6.228685],[-5.252774,-0.960093,2.703382,-2.043099],[5.150690,8.708082,3.287562,6.665300],[4.847576,2.584454,-6.758742,-4.148350],[7.074623,0.076378,-1.276676,3.923892],[-8.097368,2.346783,3.908416,6.588655],[1.605776,-3.586885,8.632657,1.837359],[-3.761155,-9.723408,9.795701,4.548124],[-8.569738,9.419243,5.516056,6.162437],[-8.528774,0.702800,5.913361,2.503708],[1.751268,8.804067,3.041684,4.623241],[9.153285,7.238558,-3.364617,8.495642],[8.857451,3.361715,1.016837,-7.695571],[2.243660,-4.623404,-0.645082,8.099871],[7.431805,1.562812,-7.113995,-1.046045],[-3.980651,-0.842568,-4.466555,9.580754],[-0.085501,-4.878855,7.635294,-5.298065],[-0.020663,4.585864,-8.891475,-8.123894],[0.669383,-0.255336,-6.331928,2.259125],[-7.017393,-0.385384,-0.852038,-4.297226],[-3.221555,-3.109191,5.385723,7.823016],[2.301026,4.766901,4.102645,1.024766],[4.283366,-1.670191,-1.603690,-1.079997],[9.026280,-4.325151,-9.375240,7.241686],[6.189605,-4.493038,-2.835315,8.918695],[3.095001,4.142234,-6.500196,3.099667],[-9.392324,-3.020230,-1.342743,-0.744389],[1.576492,1.434268,3.103924,-9.379979],[-2.419467,-6.965966,-6.027811,1.609039],[-4.548972,1.420483,9.529387,-1.859207],[-7.383799,2.843235,9.937599,5.907401],[-4.250558,-9.347350,2.447696,-4.795616],[6.749636,-9.054189,-1.288086,3.602308],[-5.062216,-8.078085,-6.333185,3.473808],[9.984976,6.628378,-1.791213,2.819931],[0.329019,7.030366,-9.722996,-1.341484],[-6.813995,-4.897005,-4.224276,5.976406],[-0.296320,6.970909,-1.792627,2.539081],[9.526512,-0.308652,7.933246,-3.560665],[2.479735,6.886708,5.519912,2.663191],[-1.863243,9.298562,-2.106340,4.065484],[-4.545471,8.371168,-8.995617,-7.524323],[1.012256,8.526813,-9.798352,6.991188],[0.810555,2.783185,-4.769895,-8.362267],[-2.808318,-8.954480,-2.737206,7.411944],[-6.456977,7.698310,-9.857897,-9.262845],[-0.106681,-9.103261,8.992834,-3.913800],[0.490593,3.328552,7.452931,-9.675730],[5.834403,-1.684630,9.670562,-8.386029],[-9.227246,-4.257749,9.626969,-4.661546],[-6.038067,-4.917457,-0.686597,6.318776],[3.874636,2.183417,-1.919598,-1.658457],[-7.945808,-4.259675,7.943214,3.678375],[-2.479500,-3.515831,-8.790464,-6.466541],[3.744311,-2.932956,4.128078,9.263308],[6.761144,5.093120,2.257467,6.928760],[-2.426301,0.568404,0.496453,5.382183],[-3.288489,8.337724,-9.284695,0.051075],[1.654489,2.651178,9.958080,6.447412],[-7.694813,8.956879,-2.625294,2.844443],[-6.431479,-1.330740,-9.277900,2.651578],[7.598128,5.500926,-2.769015,-3.387182],[6.625377,4.416759,-5.974776,0.968560],[2.678173,-5.616147,8.248867,0.821161],[-0.819383,7.268285,5.784955,3.685720],[-8.039317,7.297503,-4.261071,-3.619689],[0.072461,-8.109281,-4.264162,-6.665995],[-7.388246,0.866903,5.775518,0.169654],[0.885298,-0.758615,-0.240543,5.487195],[-7.639948,8.526219,-6.838052,-0.931454],[3.640013,-3.502330,-5.819066,-8.353638],[5.980466,4.073732,-9.591817,7.646482],[3.618649,-2.209171,4.947013,-2.682154],[-2.247078,-3.039509,5.781828,7.757077],[-4.788842,-4.725289,-2.779315,1.908121],[8.418520,-8.879647,-0.946762,7.715398],[7.398662,4.380136,6.145753,7.353064],[0.507749,6.740786,-0.525282,-0.932668],[-8.788075,-3.650585,2.990408,-7.885123],[-3.279178,-4.374281,-5.910135,-4.701951],[0.992134,1.704666,-3.995705,2.353935],[-6.607398,-0.578760,1.825058,5.827227],[-4.657021,-6.029128,-4.114675,-8.400648],[-3.191411,0.908485,-1.993177,-3.588864]], dtype = "float32")#candidate|6868|(168, 4)|const|float32
call_6866 = relay.TupleGetItem(func_5353_call(relay.reshape(call_6849.astype('float32'), [6, 30]), relay.reshape(const_6867.astype('float64'), [1152,]), relay.reshape(const_6868.astype('float32'), [56, 12]), ), 2)
call_6869 = relay.TupleGetItem(func_5357_call(relay.reshape(call_6849.astype('float32'), [6, 30]), relay.reshape(const_6867.astype('float64'), [1152,]), relay.reshape(const_6868.astype('float32'), [56, 12]), ), 2)
output = relay.Tuple([call_6839,call_6841,call_6849,const_6850,call_6866,const_6867,const_6868,])
output2 = relay.Tuple([call_6840,call_6842,call_6851,const_6850,call_6869,const_6867,const_6868,])
func_6872 = relay.Function([], output)
mod['func_6872'] = func_6872
mod = relay.transform.InferType()(mod)
mutated_mod['func_6872'] = func_6872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6872_call = mutated_mod.get_global_var('func_6872')
call_6873 = func_6872_call()
output = call_6873
func_6874 = relay.Function([], output)
mutated_mod['func_6874'] = func_6874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6158_call = mod.get_global_var('func_6158')
func_6160_call = mutated_mod.get_global_var('func_6160')
call_6935 = func_6158_call()
call_6936 = func_6158_call()
output = call_6935
output2 = call_6936
func_6937 = relay.Function([], output)
mod['func_6937'] = func_6937
mod = relay.transform.InferType()(mod)
mutated_mod['func_6937'] = func_6937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6937_call = mutated_mod.get_global_var('func_6937')
call_6938 = func_6937_call()
output = call_6938
func_6939 = relay.Function([], output)
mutated_mod['func_6939'] = func_6939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5379_call = mod.get_global_var('func_5379')
func_5380_call = mutated_mod.get_global_var('func_5380')
call_6953 = func_5379_call()
call_6954 = func_5379_call()
func_5791_call = mod.get_global_var('func_5791')
func_5793_call = mutated_mod.get_global_var('func_5793')
call_6973 = func_5791_call()
call_6974 = func_5791_call()
output = relay.Tuple([call_6953,call_6973,])
output2 = relay.Tuple([call_6954,call_6974,])
func_6984 = relay.Function([], output)
mod['func_6984'] = func_6984
mod = relay.transform.InferType()(mod)
output = func_6984()
func_6985 = relay.Function([], output)
mutated_mod['func_6985'] = func_6985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5672_call = mod.get_global_var('func_5672')
func_5674_call = mutated_mod.get_global_var('func_5674')
call_6988 = func_5672_call()
call_6989 = func_5672_call()
var_6990 = relay.var("var_6990", dtype = "float32", shape = (12, 5, 4))#candidate|6990|(12, 5, 4)|var|float32
bop_6991 = relay.mod(call_6988.astype('float32'), relay.reshape(var_6990.astype('float32'), relay.shape_of(call_6988))) # shape=(12, 5, 4)
bop_6994 = relay.mod(call_6989.astype('float32'), relay.reshape(var_6990.astype('float32'), relay.shape_of(call_6989))) # shape=(12, 5, 4)
output = relay.Tuple([bop_6991,])
output2 = relay.Tuple([bop_6994,])
func_6997 = relay.Function([var_6990,], output)
mod['func_6997'] = func_6997
mod = relay.transform.InferType()(mod)
var_6998 = relay.var("var_6998", dtype = "float32", shape = (12, 5, 4))#candidate|6998|(12, 5, 4)|var|float32
output = func_6997(var_6998)
func_6999 = relay.Function([var_6998], output)
mutated_mod['func_6999'] = func_6999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6692_call = mod.get_global_var('func_6692')
func_6693_call = mutated_mod.get_global_var('func_6693')
call_7040 = relay.TupleGetItem(func_6692_call(), 2)
call_7041 = relay.TupleGetItem(func_6693_call(), 2)
uop_7050 = relay.cosh(call_7040.astype('float32')) # shape=(78,)
uop_7052 = relay.cosh(call_7041.astype('float32')) # shape=(78,)
func_6937_call = mod.get_global_var('func_6937')
func_6939_call = mutated_mod.get_global_var('func_6939')
call_7054 = func_6937_call()
call_7055 = func_6937_call()
uop_7074 = relay.tan(call_7040.astype('float32')) # shape=(78,)
uop_7076 = relay.tan(call_7041.astype('float32')) # shape=(78,)
func_6984_call = mod.get_global_var('func_6984')
func_6985_call = mutated_mod.get_global_var('func_6985')
call_7077 = relay.TupleGetItem(func_6984_call(), 0)
call_7078 = relay.TupleGetItem(func_6985_call(), 0)
func_5964_call = mod.get_global_var('func_5964')
func_5968_call = mutated_mod.get_global_var('func_5968')
var_7082 = relay.var("var_7082", dtype = "float32", shape = (180,))#candidate|7082|(180,)|var|float32
call_7081 = relay.TupleGetItem(func_5964_call(relay.reshape(var_7082.astype('float32'), [180,]), relay.reshape(call_7077.astype('float64'), [12, 5, 4]), ), 3)
call_7083 = relay.TupleGetItem(func_5968_call(relay.reshape(var_7082.astype('float32'), [180,]), relay.reshape(call_7077.astype('float64'), [12, 5, 4]), ), 3)
output = relay.Tuple([uop_7050,call_7054,uop_7074,call_7077,call_7081,var_7082,])
output2 = relay.Tuple([uop_7052,call_7055,uop_7076,call_7078,call_7083,var_7082,])
func_7103 = relay.Function([var_7082,], output)
mod['func_7103'] = func_7103
mod = relay.transform.InferType()(mod)
mutated_mod['func_7103'] = func_7103
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7104 = relay.var("var_7104", dtype = "float32", shape = (180,))#candidate|7104|(180,)|var|float32
func_7103_call = mutated_mod.get_global_var('func_7103')
call_7105 = func_7103_call(var_7104)
output = call_7105
func_7106 = relay.Function([var_7104], output)
mutated_mod['func_7106'] = func_7106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5672_call = mod.get_global_var('func_5672')
func_5674_call = mutated_mod.get_global_var('func_5674')
call_7108 = func_5672_call()
call_7109 = func_5672_call()
output = relay.Tuple([call_7108,])
output2 = relay.Tuple([call_7109,])
func_7120 = relay.Function([], output)
mod['func_7120'] = func_7120
mod = relay.transform.InferType()(mod)
output = func_7120()
func_7121 = relay.Function([], output)
mutated_mod['func_7121'] = func_7121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6761_call = mod.get_global_var('func_6761')
func_6762_call = mutated_mod.get_global_var('func_6762')
call_7129 = func_6761_call()
call_7130 = func_6761_call()
func_6633_call = mod.get_global_var('func_6633')
func_6635_call = mutated_mod.get_global_var('func_6635')
call_7144 = func_6633_call()
call_7145 = func_6633_call()
func_5185_call = mod.get_global_var('func_5185')
func_5186_call = mutated_mod.get_global_var('func_5186')
call_7164 = relay.TupleGetItem(func_5185_call(), 0)
call_7165 = relay.TupleGetItem(func_5186_call(), 0)
output = relay.Tuple([call_7129,call_7144,call_7164,])
output2 = relay.Tuple([call_7130,call_7145,call_7165,])
func_7176 = relay.Function([], output)
mod['func_7176'] = func_7176
mod = relay.transform.InferType()(mod)
output = func_7176()
func_7177 = relay.Function([], output)
mutated_mod['func_7177'] = func_7177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6781_call = mod.get_global_var('func_6781')
func_6783_call = mutated_mod.get_global_var('func_6783')
call_7217 = func_6781_call()
call_7218 = func_6781_call()
output = relay.Tuple([call_7217,])
output2 = relay.Tuple([call_7218,])
func_7227 = relay.Function([], output)
mod['func_7227'] = func_7227
mod = relay.transform.InferType()(mod)
mutated_mod['func_7227'] = func_7227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7227_call = mutated_mod.get_global_var('func_7227')
call_7228 = func_7227_call()
output = call_7228
func_7229 = relay.Function([], output)
mutated_mod['func_7229'] = func_7229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5791_call = mod.get_global_var('func_5791')
func_5793_call = mutated_mod.get_global_var('func_5793')
call_7324 = func_5791_call()
call_7325 = func_5791_call()
output = call_7324
output2 = call_7325
func_7326 = relay.Function([], output)
mod['func_7326'] = func_7326
mod = relay.transform.InferType()(mod)
output = func_7326()
func_7327 = relay.Function([], output)
mutated_mod['func_7327'] = func_7327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5159_call = mod.get_global_var('func_5159')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_7356 = relay.TupleGetItem(func_5159_call(), 0)
call_7357 = relay.TupleGetItem(func_5161_call(), 0)
output = relay.Tuple([call_7356,])
output2 = relay.Tuple([call_7357,])
func_7376 = relay.Function([], output)
mod['func_7376'] = func_7376
mod = relay.transform.InferType()(mod)
output = func_7376()
func_7377 = relay.Function([], output)
mutated_mod['func_7377'] = func_7377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5735_call = mod.get_global_var('func_5735')
func_5737_call = mutated_mod.get_global_var('func_5737')
call_7442 = relay.TupleGetItem(func_5735_call(), 0)
call_7443 = relay.TupleGetItem(func_5737_call(), 0)
func_6438_call = mod.get_global_var('func_6438')
func_6439_call = mutated_mod.get_global_var('func_6439')
call_7454 = relay.TupleGetItem(func_6438_call(), 0)
call_7455 = relay.TupleGetItem(func_6439_call(), 0)
uop_7477 = relay.cosh(call_7442.astype('float64')) # shape=(2, 20)
uop_7479 = relay.cosh(call_7443.astype('float64')) # shape=(2, 20)
func_7120_call = mod.get_global_var('func_7120')
func_7121_call = mutated_mod.get_global_var('func_7121')
call_7486 = relay.TupleGetItem(func_7120_call(), 0)
call_7487 = relay.TupleGetItem(func_7121_call(), 0)
uop_7498 = relay.log10(uop_7477.astype('float32')) # shape=(2, 20)
uop_7500 = relay.log10(uop_7479.astype('float32')) # shape=(2, 20)
uop_7502 = relay.log(uop_7498.astype('float64')) # shape=(2, 20)
uop_7504 = relay.log(uop_7500.astype('float64')) # shape=(2, 20)
bop_7514 = relay.greater_equal(uop_7502.astype('bool'), relay.reshape(uop_7498.astype('bool'), relay.shape_of(uop_7502))) # shape=(2, 20)
bop_7517 = relay.greater_equal(uop_7504.astype('bool'), relay.reshape(uop_7500.astype('bool'), relay.shape_of(uop_7504))) # shape=(2, 20)
uop_7526 = relay.atanh(uop_7502.astype('float32')) # shape=(2, 20)
uop_7528 = relay.atanh(uop_7504.astype('float32')) # shape=(2, 20)
func_5672_call = mod.get_global_var('func_5672')
func_5674_call = mutated_mod.get_global_var('func_5674')
call_7537 = func_5672_call()
call_7538 = func_5672_call()
var_7543 = relay.var("var_7543", dtype = "float32", shape = (2, 20))#candidate|7543|(2, 20)|var|float32
bop_7544 = relay.minimum(uop_7526.astype('uint16'), relay.reshape(var_7543.astype('uint16'), relay.shape_of(uop_7526))) # shape=(2, 20)
bop_7547 = relay.minimum(uop_7528.astype('uint16'), relay.reshape(var_7543.astype('uint16'), relay.shape_of(uop_7528))) # shape=(2, 20)
uop_7548 = relay.sqrt(uop_7502.astype('float32')) # shape=(2, 20)
uop_7550 = relay.sqrt(uop_7504.astype('float32')) # shape=(2, 20)
uop_7553 = relay.exp(bop_7544.astype('float64')) # shape=(2, 20)
uop_7555 = relay.exp(bop_7547.astype('float64')) # shape=(2, 20)
output = relay.Tuple([call_7454,call_7486,bop_7514,call_7537,uop_7548,uop_7553,])
output2 = relay.Tuple([call_7455,call_7487,bop_7517,call_7538,uop_7550,uop_7555,])
func_7563 = relay.Function([var_7543,], output)
mod['func_7563'] = func_7563
mod = relay.transform.InferType()(mod)
mutated_mod['func_7563'] = func_7563
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7564 = relay.var("var_7564", dtype = "float32", shape = (2, 20))#candidate|7564|(2, 20)|var|float32
func_7563_call = mutated_mod.get_global_var('func_7563')
call_7565 = func_7563_call(var_7564)
output = call_7565
func_7566 = relay.Function([var_7564], output)
mutated_mod['func_7566'] = func_7566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6633_call = mod.get_global_var('func_6633')
func_6635_call = mutated_mod.get_global_var('func_6635')
call_7571 = func_6633_call()
call_7572 = func_6633_call()
uop_7597 = relay.sin(call_7571.astype('float32')) # shape=(12, 5, 4)
uop_7599 = relay.sin(call_7572.astype('float32')) # shape=(12, 5, 4)
func_2735_call = mod.get_global_var('func_2735')
func_2739_call = mutated_mod.get_global_var('func_2739')
var_7604 = relay.var("var_7604", dtype = "float64", shape = (560, 2))#candidate|7604|(560, 2)|var|float64
call_7603 = relay.TupleGetItem(func_2735_call(relay.reshape(var_7604.astype('float64'), [10, 14, 8]), relay.reshape(var_7604.astype('float64'), [10, 14, 8]), ), 0)
call_7605 = relay.TupleGetItem(func_2739_call(relay.reshape(var_7604.astype('float64'), [10, 14, 8]), relay.reshape(var_7604.astype('float64'), [10, 14, 8]), ), 0)
uop_7609 = relay.rsqrt(var_7604.astype('float32')) # shape=(560, 2)
output = relay.Tuple([uop_7597,call_7603,uop_7609,])
output2 = relay.Tuple([uop_7599,call_7605,uop_7609,])
func_7612 = relay.Function([var_7604,], output)
mod['func_7612'] = func_7612
mod = relay.transform.InferType()(mod)
mutated_mod['func_7612'] = func_7612
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7613 = relay.var("var_7613", dtype = "float64", shape = (560, 2))#candidate|7613|(560, 2)|var|float64
func_7612_call = mutated_mod.get_global_var('func_7612')
call_7614 = func_7612_call(var_7613)
output = call_7614
func_7615 = relay.Function([var_7613], output)
mutated_mod['func_7615'] = func_7615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5159_call = mod.get_global_var('func_5159')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_7621 = relay.TupleGetItem(func_5159_call(), 0)
call_7622 = relay.TupleGetItem(func_5161_call(), 0)
func_6872_call = mod.get_global_var('func_6872')
func_6874_call = mutated_mod.get_global_var('func_6874')
call_7625 = relay.TupleGetItem(func_6872_call(), 6)
call_7626 = relay.TupleGetItem(func_6874_call(), 6)
uop_7637 = relay.atan(call_7625.astype('float32')) # shape=(168, 4)
uop_7639 = relay.atan(call_7626.astype('float32')) # shape=(168, 4)
uop_7645 = relay.sinh(uop_7637.astype('float64')) # shape=(168, 4)
uop_7647 = relay.sinh(uop_7639.astype('float64')) # shape=(168, 4)
bop_7651 = relay.subtract(uop_7645.astype('int64'), relay.reshape(uop_7637.astype('int64'), relay.shape_of(uop_7645))) # shape=(168, 4)
bop_7654 = relay.subtract(uop_7647.astype('int64'), relay.reshape(uop_7639.astype('int64'), relay.shape_of(uop_7647))) # shape=(168, 4)
func_7563_call = mod.get_global_var('func_7563')
func_7566_call = mutated_mod.get_global_var('func_7566')
call_7666 = relay.TupleGetItem(func_7563_call(relay.reshape(call_7621.astype('float32'), [2, 20])), 1)
call_7667 = relay.TupleGetItem(func_7566_call(relay.reshape(call_7621.astype('float32'), [2, 20])), 1)
uop_7670 = relay.atanh(uop_7645.astype('float32')) # shape=(168, 4)
uop_7672 = relay.atanh(uop_7647.astype('float32')) # shape=(168, 4)
output = relay.Tuple([call_7621,bop_7651,call_7666,uop_7670,])
output2 = relay.Tuple([call_7622,bop_7654,call_7667,uop_7672,])
func_7677 = relay.Function([], output)
mod['func_7677'] = func_7677
mod = relay.transform.InferType()(mod)
output = func_7677()
func_7678 = relay.Function([], output)
mutated_mod['func_7678'] = func_7678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7176_call = mod.get_global_var('func_7176')
func_7177_call = mutated_mod.get_global_var('func_7177')
call_7692 = relay.TupleGetItem(func_7176_call(), 1)
call_7693 = relay.TupleGetItem(func_7177_call(), 1)
output = relay.Tuple([call_7692,])
output2 = relay.Tuple([call_7693,])
func_7722 = relay.Function([], output)
mod['func_7722'] = func_7722
mod = relay.transform.InferType()(mod)
mutated_mod['func_7722'] = func_7722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7722_call = mutated_mod.get_global_var('func_7722')
call_7723 = func_7722_call()
output = call_7723
func_7724 = relay.Function([], output)
mutated_mod['func_7724'] = func_7724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6299_call = mod.get_global_var('func_6299')
func_6300_call = mutated_mod.get_global_var('func_6300')
call_7762 = func_6299_call()
call_7763 = func_6299_call()
func_6707_call = mod.get_global_var('func_6707')
func_6708_call = mutated_mod.get_global_var('func_6708')
call_7766 = relay.TupleGetItem(func_6707_call(), 0)
call_7767 = relay.TupleGetItem(func_6708_call(), 0)
output = relay.Tuple([call_7762,call_7766,])
output2 = relay.Tuple([call_7763,call_7767,])
func_7769 = relay.Function([], output)
mod['func_7769'] = func_7769
mod = relay.transform.InferType()(mod)
mutated_mod['func_7769'] = func_7769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7769_call = mutated_mod.get_global_var('func_7769')
call_7770 = func_7769_call()
output = call_7770
func_7771 = relay.Function([], output)
mutated_mod['func_7771'] = func_7771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7227_call = mod.get_global_var('func_7227')
func_7229_call = mutated_mod.get_global_var('func_7229')
call_7922 = relay.TupleGetItem(func_7227_call(), 0)
call_7923 = relay.TupleGetItem(func_7229_call(), 0)
var_7940 = relay.var("var_7940", dtype = "float32", shape = (2, 20))#candidate|7940|(2, 20)|var|float32
bop_7941 = relay.divide(call_7922.astype('float32'), relay.reshape(var_7940.astype('float32'), relay.shape_of(call_7922))) # shape=(2, 20)
bop_7944 = relay.divide(call_7923.astype('float32'), relay.reshape(var_7940.astype('float32'), relay.shape_of(call_7923))) # shape=(2, 20)
output = bop_7941
output2 = bop_7944
func_7949 = relay.Function([var_7940,], output)
mod['func_7949'] = func_7949
mod = relay.transform.InferType()(mod)
mutated_mod['func_7949'] = func_7949
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7950 = relay.var("var_7950", dtype = "float32", shape = (2, 20))#candidate|7950|(2, 20)|var|float32
func_7949_call = mutated_mod.get_global_var('func_7949')
call_7951 = func_7949_call(var_7950)
output = call_7951
func_7952 = relay.Function([var_7950], output)
mutated_mod['func_7952'] = func_7952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7120_call = mod.get_global_var('func_7120')
func_7121_call = mutated_mod.get_global_var('func_7121')
call_8045 = relay.TupleGetItem(func_7120_call(), 0)
call_8046 = relay.TupleGetItem(func_7121_call(), 0)
uop_8067 = relay.sigmoid(call_8045.astype('float32')) # shape=(12, 5, 4)
uop_8069 = relay.sigmoid(call_8046.astype('float32')) # shape=(12, 5, 4)
func_5997_call = mod.get_global_var('func_5997')
func_6002_call = mutated_mod.get_global_var('func_6002')
const_8078 = relay.const([[6.822793],[-5.826985],[-7.704482],[1.236597],[1.379249],[2.959206],[-9.310475],[-2.169673],[3.760878],[4.072152],[9.079549],[-7.255867],[-2.547642],[-1.850957],[6.716763],[-9.096959],[-9.087499],[-8.460282],[6.919284],[-3.133941],[-2.087434],[-7.995718],[7.424785],[-4.912996],[-7.201926],[-6.286891],[7.872921],[-6.914418],[-8.296630],[-1.548140],[1.316065],[-9.820125],[4.033750],[-7.751916],[-0.205439],[-1.377835],[-7.631954],[6.680998],[8.781596],[6.796547],[-4.724677],[8.326866],[-4.925084],[0.286139],[-6.904324],[-2.076834],[-7.509384],[-9.388466],[6.070976],[0.961594],[5.910318],[-8.949312],[-5.895175],[3.478385],[4.677737],[9.398538],[-5.022397],[7.828785],[-0.814395],[1.959288],[0.523520],[-8.207391],[-5.027660],[7.161661],[-1.152433],[-8.977937],[-7.797868],[3.717718],[-8.129920],[0.325176],[0.527190],[7.645836],[4.114114],[-8.550170],[-6.226349],[3.828100],[7.997385],[5.383318],[-6.701008],[8.824543],[2.460962],[-1.998933],[-3.479041],[-7.205606],[-4.167515],[9.254882],[7.627249],[-3.345486],[6.639117],[-9.593199],[-5.425817],[1.185804],[-2.517691],[-5.976631],[-7.789409],[7.025728],[5.194468],[6.856993],[3.508530],[-5.846608],[8.092932],[-3.476877],[2.999912],[-0.398614],[0.639154],[-7.780654],[-2.124563],[-9.812373],[-2.777052],[5.787341],[-4.496176],[0.441859],[-7.564295],[-1.363111],[-4.598311],[2.598767],[-1.240461],[-0.285365],[-5.467632],[-8.566215],[-5.955612],[-3.123030],[7.689543],[9.402080],[0.561814],[-5.236521],[7.709296],[4.670397],[-9.868691],[8.985559],[-1.447022],[6.305584],[-6.022515],[-4.758234],[-6.348357],[4.907219],[6.288547],[3.655052],[-4.882924],[9.043891],[2.562336],[0.103275],[0.414160],[-2.432411],[-8.105506],[-0.443808],[-1.082844],[3.023634],[-4.614599],[-6.482579],[9.648369],[7.103103],[6.152079],[7.101958],[8.298278],[3.606814],[-2.413946],[4.106653],[5.939830],[1.214435],[1.422606],[-6.319504],[2.272172],[4.510999],[-5.209600],[-4.619669],[0.919360],[-8.900117],[-7.753044],[-1.177496],[-8.490004],[-8.866830],[-1.197256],[-4.772248],[9.433538],[-8.584312],[-7.311275],[7.120399],[-2.844714],[2.593397],[-4.363122],[-2.344967],[7.855528],[-6.409304],[-4.423130],[6.105153],[-5.826975],[1.451645],[2.991568],[-4.396775],[-6.084239],[5.908510]], dtype = "float64")#candidate|8078|(192, 1)|const|float64
const_8079 = relay.const([9.642951,-6.492923,-6.910293,2.287760,-6.335412,5.217494,-7.116033,0.322361,1.899908,-4.384905,8.051510,8.093651,1.537910,-6.326704,2.595608,-0.550929,-5.187329,-6.428008,-2.095204,-2.663371,8.573960,2.509595,-5.040826,-2.711157,-4.839815,-9.434498,0.440429,3.650832,-5.756640,-8.001483,-1.346837,8.423954,7.912223,7.552233,1.870476,-1.554343,-6.978633,3.150677,8.445644,-7.704255,-3.696370,4.149968,-8.190919,-3.557490,-0.307773,7.520446,2.136838,5.131680,-0.144089,-4.381594,-5.157749,2.763134,7.559355,7.956195,-3.911240,-8.000140,-5.704853,3.099515,-4.125251,1.867626,-7.790898,2.859109,0.965169,-6.113766,-6.339959,-3.240156,-5.522060,4.698963,-2.091712,-8.957583,-0.761361,7.730763,-5.909640,3.899312,-0.912080,2.755912,9.863587,-1.989118,1.279265,0.879220,-7.362716,-7.911005,9.113721,-4.729064,-3.130639,-9.629284,0.605170,8.443322,-6.901219,-4.695731,6.557669,4.102928,-6.136435,-5.423184,9.769743,2.278617,1.963369,-1.030807,2.240208,-3.002292,0.492312,-2.970445,-6.027092,-8.466912,4.948202,8.871699,-2.451804,9.296118,-7.075420,-8.023883,4.123148,6.777776,1.408330,3.639480,-2.215191,-4.012293,4.957770,-0.076504,-3.786787,-4.992514,9.804438,-6.910705,9.656706,9.125474,8.076976,3.370306,9.908726,4.668963,-6.166070,-4.922224,-4.071899,-0.677100,6.985001,3.157496,2.852254,7.716304,8.949115,-7.769374,-8.970682,4.937735,1.422716,-5.450951,9.523051,1.121389,2.716911,2.937010,-8.457400,3.905286,-1.922120,3.945401,-4.892171,6.302389,-0.677686,-0.816896,7.711692,6.730025,-0.924272,1.622316,9.062083,3.059279,-4.776761,4.120068,-4.176161,9.937437,6.998350,-6.676404,6.358884,-2.270716,8.179092,-2.682897,-4.599451,1.032157,-1.106714,-2.589760,8.910183,-5.818918,-0.268909,-3.150626,-9.524438,-0.931919], dtype = "float32")#candidate|8079|(180,)|const|float32
var_8080 = relay.var("var_8080", dtype = "float32", shape = (672,))#candidate|8080|(672,)|var|float32
call_8077 = relay.TupleGetItem(func_5997_call(relay.reshape(const_8078.astype('float64'), [192,]), relay.reshape(const_8079.astype('float32'), [180,]), relay.reshape(var_8080.astype('float32'), [672,]), ), 4)
call_8081 = relay.TupleGetItem(func_6002_call(relay.reshape(const_8078.astype('float64'), [192,]), relay.reshape(const_8079.astype('float32'), [180,]), relay.reshape(var_8080.astype('float32'), [672,]), ), 4)
output = relay.Tuple([uop_8067,call_8077,const_8078,const_8079,var_8080,])
output2 = relay.Tuple([uop_8069,call_8081,const_8078,const_8079,var_8080,])
func_8085 = relay.Function([var_8080,], output)
mod['func_8085'] = func_8085
mod = relay.transform.InferType()(mod)
var_8086 = relay.var("var_8086", dtype = "float32", shape = (672,))#candidate|8086|(672,)|var|float32
output = func_8085(var_8086)
func_8087 = relay.Function([var_8086], output)
mutated_mod['func_8087'] = func_8087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6158_call = mod.get_global_var('func_6158')
func_6160_call = mutated_mod.get_global_var('func_6160')
call_8127 = func_6158_call()
call_8128 = func_6158_call()
func_3266_call = mod.get_global_var('func_3266')
func_3269_call = mutated_mod.get_global_var('func_3269')
var_8142 = relay.var("var_8142", dtype = "float64", shape = (462,))#candidate|8142|(462,)|var|float64
call_8141 = func_3266_call(relay.reshape(var_8142.astype('float64'), [11, 3, 14]))
call_8143 = func_3266_call(relay.reshape(var_8142.astype('float64'), [11, 3, 14]))
func_5735_call = mod.get_global_var('func_5735')
func_5737_call = mutated_mod.get_global_var('func_5737')
call_8147 = relay.TupleGetItem(func_5735_call(), 0)
call_8148 = relay.TupleGetItem(func_5737_call(), 0)
func_3266_call = mod.get_global_var('func_3266')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_8152 = func_3266_call(relay.reshape(var_8142.astype('float64'), [11, 3, 14]))
call_8153 = func_3266_call(relay.reshape(var_8142.astype('float64'), [11, 3, 14]))
output = relay.Tuple([call_8127,call_8141,var_8142,call_8147,call_8152,])
output2 = relay.Tuple([call_8128,call_8143,var_8142,call_8148,call_8153,])
func_8170 = relay.Function([var_8142,], output)
mod['func_8170'] = func_8170
mod = relay.transform.InferType()(mod)
mutated_mod['func_8170'] = func_8170
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8171 = relay.var("var_8171", dtype = "float64", shape = (462,))#candidate|8171|(462,)|var|float64
func_8170_call = mutated_mod.get_global_var('func_8170')
call_8172 = func_8170_call(var_8171)
output = call_8172
func_8173 = relay.Function([var_8171], output)
mutated_mod['func_8173'] = func_8173
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8227 = relay.var("var_8227", dtype = "float64", shape = (4, 8, 3))#candidate|8227|(4, 8, 3)|var|float64
uop_8228 = relay.acos(var_8227.astype('float64')) # shape=(4, 8, 3)
func_7769_call = mod.get_global_var('func_7769')
func_7771_call = mutated_mod.get_global_var('func_7771')
call_8236 = relay.TupleGetItem(func_7769_call(), 1)
call_8237 = relay.TupleGetItem(func_7771_call(), 1)
output = relay.Tuple([uop_8228,call_8236,])
output2 = relay.Tuple([uop_8228,call_8237,])
func_8257 = relay.Function([var_8227,], output)
mod['func_8257'] = func_8257
mod = relay.transform.InferType()(mod)
mutated_mod['func_8257'] = func_8257
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8258 = relay.var("var_8258", dtype = "float64", shape = (4, 8, 3))#candidate|8258|(4, 8, 3)|var|float64
func_8257_call = mutated_mod.get_global_var('func_8257')
call_8259 = func_8257_call(var_8258)
output = call_8259
func_8260 = relay.Function([var_8258], output)
mutated_mod['func_8260'] = func_8260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6528_call = mod.get_global_var('func_6528')
func_6529_call = mutated_mod.get_global_var('func_6529')
call_8297 = func_6528_call()
call_8298 = func_6528_call()
func_7563_call = mod.get_global_var('func_7563')
func_7566_call = mutated_mod.get_global_var('func_7566')
call_8329 = relay.TupleGetItem(func_7563_call(relay.reshape(call_8297.astype('float32'), [2, 20])), 5)
call_8330 = relay.TupleGetItem(func_7566_call(relay.reshape(call_8297.astype('float32'), [2, 20])), 5)
output = relay.Tuple([call_8297,call_8329,])
output2 = relay.Tuple([call_8298,call_8330,])
func_8331 = relay.Function([], output)
mod['func_8331'] = func_8331
mod = relay.transform.InferType()(mod)
output = func_8331()
func_8332 = relay.Function([], output)
mutated_mod['func_8332'] = func_8332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5137_call = mod.get_global_var('func_5137')
func_5139_call = mutated_mod.get_global_var('func_5139')
call_8338 = relay.TupleGetItem(func_5137_call(), 0)
call_8339 = relay.TupleGetItem(func_5139_call(), 0)
func_5791_call = mod.get_global_var('func_5791')
func_5793_call = mutated_mod.get_global_var('func_5793')
call_8341 = func_5791_call()
call_8342 = func_5791_call()
func_7722_call = mod.get_global_var('func_7722')
func_7724_call = mutated_mod.get_global_var('func_7724')
call_8357 = relay.TupleGetItem(func_7722_call(), 0)
call_8358 = relay.TupleGetItem(func_7724_call(), 0)
func_5159_call = mod.get_global_var('func_5159')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_8364 = relay.TupleGetItem(func_5159_call(), 0)
call_8365 = relay.TupleGetItem(func_5161_call(), 0)
func_4688_call = mod.get_global_var('func_4688')
func_4691_call = mutated_mod.get_global_var('func_4691')
var_8367 = relay.var("var_8367", dtype = "float32", shape = (224,))#candidate|8367|(224,)|var|float32
call_8366 = func_4688_call(relay.reshape(var_8367.astype('float32'), [16, 1, 14]))
call_8368 = func_4688_call(relay.reshape(var_8367.astype('float32'), [16, 1, 14]))
func_1666_call = mod.get_global_var('func_1666')
func_1672_call = mutated_mod.get_global_var('func_1672')
const_8370 = relay.const(-8.342942, dtype = "float64")#candidate|8370|()|const|float64
const_8371 = relay.const([9.455150,-9.506320,-6.607558,2.563206,7.520678,4.048658,-9.475561,-8.318122,2.419447,-1.879911,-8.439250,6.716306,7.525485,7.395639,-2.411475,5.249565,8.135570,-8.548048,6.650873,7.611211,-4.882986,-1.106364,-9.725218,-0.554234,-0.887370,-0.240551,5.642700,-4.646115,-8.862498,2.441530,-1.636381,-2.792636,-8.779032,5.407759,-0.159740,-9.494042,-4.990453,3.506060,-9.957633,-6.245636,-6.752657,5.855593,-2.722791,8.534250,2.391879,1.664503,6.657815,7.328432,8.270165,0.297490,0.092388,-9.044835,-0.069275,-5.622479,3.726620,-6.883782,-9.333538,1.952115,7.333010,2.060298,1.741638,1.063609,-6.758677,2.725453,7.266028,-2.068995,-4.037635,-2.649191,-8.599665,5.538444,4.492580,-3.812029,-4.801759,9.245666,-3.870783,-3.065460,6.154165,-2.389427,3.192802,3.958866,-5.142649,4.938845,-7.567558,9.660826,2.621966,2.622098,-7.854191,-2.297833,9.988887,1.552643,-3.928177,-9.095988,1.009718,3.274083,-8.181286,3.082239,-4.937631,8.856761,8.369068,-2.001583,-5.711941,3.404855,4.620548,1.694043,2.518536,-9.158974,-0.271616,-7.447572,4.595801,-6.662221,-3.262742,-1.793543,4.592821,-1.001409,-8.227526,5.967315,-5.922705,-7.359328,-2.362026,-1.537823,-5.092512,7.397824,8.335494,-2.960355,1.269113,-0.954745,-5.006793,1.729344,8.377080,-9.630140,-5.051103,-7.291872,0.822963,-2.977968,-8.192974,9.038699,0.026715,5.773868,-8.366691,4.728861,0.468619,-2.878665,-5.796561,0.175521,8.494293,7.185928,9.362407,-3.397461,-4.505874,-3.879583,1.662364,0.669842,-6.317879,-0.018859,-6.265598,-3.629728,3.079819,-3.786926,-2.837999,0.170635,8.371581,7.087152,-4.710293,5.305048,-8.351671,5.326239,-5.211004,-5.418006,-2.651928,4.564916,-3.105106,-6.101282,-7.215235,7.002811,-5.755807,-7.769048,-1.263452,-6.162007,6.385049,8.971682,5.942050,-5.567248,-8.090519,-9.510684,7.823920,3.415589,8.473194,6.725372,-0.361780,7.871091,-6.864820,1.858824], dtype = "float64")#candidate|8371|(192,)|const|float64
const_8372 = relay.const([6.996831,0.318805,-1.205755,-1.846864,-5.538249,7.703220,8.124048,-0.692520,-3.357347,-7.929759,-0.345027,8.553262,-6.649889,9.679014,-5.904998,-7.227439,-9.780361,-4.408878,8.414946,0.718063,0.006948,5.783870,2.892177,1.572491,-4.585198,9.114918,3.670445,8.514049,2.099010,-8.371645,5.670883,1.109336,-3.962443,-0.671620,0.131281,8.051895,-9.366863,8.194602,-3.652360,0.134798,-6.064831,-2.415987,5.415208,2.915400,-1.948986,-0.418545,6.457426,7.512274,6.838651,2.917598,4.590415,0.961555,-7.481966,-8.648206,-0.762294,9.121322,-5.588475,-3.280127,0.498639,-8.451464,3.345682,5.919330,-5.692770,-6.212666,5.246501,-9.139919,7.971874,-2.342823,-3.353801,-4.722841,8.260072,-9.095908,7.435236,5.173053,-3.565194,3.249844,4.998446,-3.961763,2.397546,6.096033,1.978243,-3.983356,-5.542484,-4.995352,5.950791,4.161287,-3.009165,-1.205260,-5.470430,-1.936920,7.264319,8.104711,-2.006533,-5.386702,-1.167859,-9.069414,-0.744195,-0.888436,-4.776428,3.224173,-4.828613,-3.951511,-9.343666,-6.905158,-4.872864,-8.125487,-8.685668,-2.812864,1.390097,2.581306,3.294991,4.135065,-1.889591,-8.158586,-5.538540,-1.913257,-8.248408,4.072948,3.029875,5.969754,-2.332925,4.352995,1.240472,-2.816169,-9.006540,2.026172,7.329317,6.381696,-9.702880,-1.640784,-3.297906,3.942694,6.091996,4.032234,3.460068,0.034760,-1.612323,-5.128052,-4.356977,3.140222,-9.753160,-5.401973,1.391953,8.502303,8.389814,0.500896,-8.334087,-2.468637,9.967183,-4.616702,5.322358,4.615570,-8.430830,2.263511,-0.895056,-1.852592,4.714732,-6.517362,-2.717494,6.239816,-9.769376,4.917784,7.616736,-3.505629,-1.025793,8.093009,-0.005774,8.086427,6.378758,-1.041304,8.462927,-8.494982,7.721148,-4.032475,4.829207,-9.295974,-5.124727,-5.897086,5.007216,-9.076727], dtype = "float32")#candidate|8372|(180,)|const|float32
var_8373 = relay.var("var_8373", dtype = "float32", shape = (672,))#candidate|8373|(672,)|var|float32
call_8369 = relay.TupleGetItem(func_1666_call(relay.reshape(const_8370.astype('float64'), []), relay.reshape(const_8371.astype('float64'), [1, 16, 12]), relay.reshape(const_8372.astype('float32'), [180,]), relay.reshape(var_8373.astype('float32'), [672,]), ), 2)
call_8374 = relay.TupleGetItem(func_1672_call(relay.reshape(const_8370.astype('float64'), []), relay.reshape(const_8371.astype('float64'), [1, 16, 12]), relay.reshape(const_8372.astype('float32'), [180,]), relay.reshape(var_8373.astype('float32'), [672,]), ), 2)
output = relay.Tuple([call_8338,call_8341,call_8357,call_8364,call_8366,var_8367,call_8369,const_8370,const_8371,const_8372,var_8373,])
output2 = relay.Tuple([call_8339,call_8342,call_8358,call_8365,call_8368,var_8367,call_8374,const_8370,const_8371,const_8372,var_8373,])
func_8387 = relay.Function([var_8367,var_8373,], output)
mod['func_8387'] = func_8387
mod = relay.transform.InferType()(mod)
var_8388 = relay.var("var_8388", dtype = "float32", shape = (224,))#candidate|8388|(224,)|var|float32
var_8389 = relay.var("var_8389", dtype = "float32", shape = (672,))#candidate|8389|(672,)|var|float32
output = func_8387(var_8388,var_8389,)
func_8390 = relay.Function([var_8388,var_8389,], output)
mutated_mod['func_8390'] = func_8390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5856_call = mod.get_global_var('func_5856')
func_5858_call = mutated_mod.get_global_var('func_5858')
call_8407 = relay.TupleGetItem(func_5856_call(), 0)
call_8408 = relay.TupleGetItem(func_5858_call(), 0)
func_7326_call = mod.get_global_var('func_7326')
func_7327_call = mutated_mod.get_global_var('func_7327')
call_8411 = func_7326_call()
call_8412 = func_7326_call()
output = relay.Tuple([call_8407,call_8411,])
output2 = relay.Tuple([call_8408,call_8412,])
func_8417 = relay.Function([], output)
mod['func_8417'] = func_8417
mod = relay.transform.InferType()(mod)
output = func_8417()
func_8418 = relay.Function([], output)
mutated_mod['func_8418'] = func_8418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6692_call = mod.get_global_var('func_6692')
func_6693_call = mutated_mod.get_global_var('func_6693')
call_8441 = relay.TupleGetItem(func_6692_call(), 0)
call_8442 = relay.TupleGetItem(func_6693_call(), 0)
output = call_8441
output2 = call_8442
func_8445 = relay.Function([], output)
mod['func_8445'] = func_8445
mod = relay.transform.InferType()(mod)
output = func_8445()
func_8446 = relay.Function([], output)
mutated_mod['func_8446'] = func_8446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8331_call = mod.get_global_var('func_8331')
func_8332_call = mutated_mod.get_global_var('func_8332')
call_8458 = relay.TupleGetItem(func_8331_call(), 0)
call_8459 = relay.TupleGetItem(func_8332_call(), 0)
output = relay.Tuple([call_8458,])
output2 = relay.Tuple([call_8459,])
func_8467 = relay.Function([], output)
mod['func_8467'] = func_8467
mod = relay.transform.InferType()(mod)
mutated_mod['func_8467'] = func_8467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8467_call = mutated_mod.get_global_var('func_8467')
call_8468 = func_8467_call()
output = call_8468
func_8469 = relay.Function([], output)
mutated_mod['func_8469'] = func_8469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8417_call = mod.get_global_var('func_8417')
func_8418_call = mutated_mod.get_global_var('func_8418')
call_8476 = relay.TupleGetItem(func_8417_call(), 0)
call_8477 = relay.TupleGetItem(func_8418_call(), 0)
func_6403_call = mod.get_global_var('func_6403')
func_6405_call = mutated_mod.get_global_var('func_6405')
call_8490 = relay.TupleGetItem(func_6403_call(relay.reshape(call_8476.astype('float64'), [11, 3, 14])), 0)
call_8491 = relay.TupleGetItem(func_6405_call(relay.reshape(call_8476.astype('float64'), [11, 3, 14])), 0)
func_5649_call = mod.get_global_var('func_5649')
func_5650_call = mutated_mod.get_global_var('func_5650')
call_8494 = func_5649_call()
call_8495 = func_5649_call()
func_6528_call = mod.get_global_var('func_6528')
func_6529_call = mutated_mod.get_global_var('func_6529')
call_8496 = func_6528_call()
call_8497 = func_6528_call()
output = relay.Tuple([call_8476,call_8490,call_8494,call_8496,])
output2 = relay.Tuple([call_8477,call_8491,call_8495,call_8497,])
func_8511 = relay.Function([], output)
mod['func_8511'] = func_8511
mod = relay.transform.InferType()(mod)
output = func_8511()
func_8512 = relay.Function([], output)
mutated_mod['func_8512'] = func_8512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6158_call = mod.get_global_var('func_6158')
func_6160_call = mutated_mod.get_global_var('func_6160')
call_8540 = func_6158_call()
call_8541 = func_6158_call()
uop_8543 = relay.tan(call_8540.astype('float64')) # shape=(12, 5, 4)
uop_8545 = relay.tan(call_8541.astype('float64')) # shape=(12, 5, 4)
output = relay.Tuple([uop_8543,])
output2 = relay.Tuple([uop_8545,])
func_8546 = relay.Function([], output)
mod['func_8546'] = func_8546
mod = relay.transform.InferType()(mod)
mutated_mod['func_8546'] = func_8546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8546_call = mutated_mod.get_global_var('func_8546')
call_8547 = func_8546_call()
output = call_8547
func_8548 = relay.Function([], output)
mutated_mod['func_8548'] = func_8548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6781_call = mod.get_global_var('func_6781')
func_6783_call = mutated_mod.get_global_var('func_6783')
call_8598 = func_6781_call()
call_8599 = func_6781_call()
output = call_8598
output2 = call_8599
func_8605 = relay.Function([], output)
mod['func_8605'] = func_8605
mod = relay.transform.InferType()(mod)
output = func_8605()
func_8606 = relay.Function([], output)
mutated_mod['func_8606'] = func_8606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5379_call = mod.get_global_var('func_5379')
func_5380_call = mutated_mod.get_global_var('func_5380')
call_8654 = func_5379_call()
call_8655 = func_5379_call()
output = relay.Tuple([call_8654,])
output2 = relay.Tuple([call_8655,])
func_8663 = relay.Function([], output)
mod['func_8663'] = func_8663
mod = relay.transform.InferType()(mod)
output = func_8663()
func_8664 = relay.Function([], output)
mutated_mod['func_8664'] = func_8664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8511_call = mod.get_global_var('func_8511')
func_8512_call = mutated_mod.get_global_var('func_8512')
call_8710 = relay.TupleGetItem(func_8511_call(), 2)
call_8711 = relay.TupleGetItem(func_8512_call(), 2)
output = call_8710
output2 = call_8711
func_8712 = relay.Function([], output)
mod['func_8712'] = func_8712
mod = relay.transform.InferType()(mod)
output = func_8712()
func_8713 = relay.Function([], output)
mutated_mod['func_8713'] = func_8713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6872_call = mod.get_global_var('func_6872')
func_6874_call = mutated_mod.get_global_var('func_6874')
call_8727 = relay.TupleGetItem(func_6872_call(), 2)
call_8728 = relay.TupleGetItem(func_6874_call(), 2)
output = call_8727
output2 = call_8728
func_8734 = relay.Function([], output)
mod['func_8734'] = func_8734
mod = relay.transform.InferType()(mod)
mutated_mod['func_8734'] = func_8734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8734_call = mutated_mod.get_global_var('func_8734')
call_8735 = func_8734_call()
output = call_8735
func_8736 = relay.Function([], output)
mutated_mod['func_8736'] = func_8736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5159_call = mod.get_global_var('func_5159')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_8750 = relay.TupleGetItem(func_5159_call(), 0)
call_8751 = relay.TupleGetItem(func_5161_call(), 0)
func_7326_call = mod.get_global_var('func_7326')
func_7327_call = mutated_mod.get_global_var('func_7327')
call_8790 = func_7326_call()
call_8791 = func_7326_call()
output = relay.Tuple([call_8750,call_8790,])
output2 = relay.Tuple([call_8751,call_8791,])
func_8801 = relay.Function([], output)
mod['func_8801'] = func_8801
mod = relay.transform.InferType()(mod)
output = func_8801()
func_8802 = relay.Function([], output)
mutated_mod['func_8802'] = func_8802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6707_call = mod.get_global_var('func_6707')
func_6708_call = mutated_mod.get_global_var('func_6708')
call_8850 = relay.TupleGetItem(func_6707_call(), 0)
call_8851 = relay.TupleGetItem(func_6708_call(), 0)
uop_8852 = relay.acos(call_8850.astype('float32')) # shape=(12, 5, 4)
uop_8854 = relay.acos(call_8851.astype('float32')) # shape=(12, 5, 4)
output = uop_8852
output2 = uop_8854
func_8869 = relay.Function([], output)
mod['func_8869'] = func_8869
mod = relay.transform.InferType()(mod)
mutated_mod['func_8869'] = func_8869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8869_call = mutated_mod.get_global_var('func_8869')
call_8870 = func_8869_call()
output = call_8870
func_8871 = relay.Function([], output)
mutated_mod['func_8871'] = func_8871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6761_call = mod.get_global_var('func_6761')
func_6762_call = mutated_mod.get_global_var('func_6762')
call_8890 = func_6761_call()
call_8891 = func_6761_call()
output = relay.Tuple([call_8890,])
output2 = relay.Tuple([call_8891,])
func_8892 = relay.Function([], output)
mod['func_8892'] = func_8892
mod = relay.transform.InferType()(mod)
mutated_mod['func_8892'] = func_8892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8892_call = mutated_mod.get_global_var('func_8892')
call_8893 = func_8892_call()
output = call_8893
func_8894 = relay.Function([], output)
mutated_mod['func_8894'] = func_8894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6937_call = mod.get_global_var('func_6937')
func_6939_call = mutated_mod.get_global_var('func_6939')
call_8903 = func_6937_call()
call_8904 = func_6937_call()
output = call_8903
output2 = call_8904
func_8911 = relay.Function([], output)
mod['func_8911'] = func_8911
mod = relay.transform.InferType()(mod)
mutated_mod['func_8911'] = func_8911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8911_call = mutated_mod.get_global_var('func_8911')
call_8912 = func_8911_call()
output = call_8912
func_8913 = relay.Function([], output)
mutated_mod['func_8913'] = func_8913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8712_call = mod.get_global_var('func_8712')
func_8713_call = mutated_mod.get_global_var('func_8713')
call_8927 = func_8712_call()
call_8928 = func_8712_call()
var_8937 = relay.var("var_8937", dtype = "float64", shape = (12, 5, 4))#candidate|8937|(12, 5, 4)|var|float64
bop_8938 = relay.minimum(call_8927.astype('uint64'), relay.reshape(var_8937.astype('uint64'), relay.shape_of(call_8927))) # shape=(12, 5, 4)
bop_8941 = relay.minimum(call_8928.astype('uint64'), relay.reshape(var_8937.astype('uint64'), relay.shape_of(call_8928))) # shape=(12, 5, 4)
func_5379_call = mod.get_global_var('func_5379')
func_5380_call = mutated_mod.get_global_var('func_5380')
call_8956 = func_5379_call()
call_8957 = func_5379_call()
output = relay.Tuple([bop_8938,call_8956,])
output2 = relay.Tuple([bop_8941,call_8957,])
func_8975 = relay.Function([var_8937,], output)
mod['func_8975'] = func_8975
mod = relay.transform.InferType()(mod)
var_8976 = relay.var("var_8976", dtype = "float64", shape = (12, 5, 4))#candidate|8976|(12, 5, 4)|var|float64
output = func_8975(var_8976)
func_8977 = relay.Function([var_8976], output)
mutated_mod['func_8977'] = func_8977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6299_call = mod.get_global_var('func_6299')
func_6300_call = mutated_mod.get_global_var('func_6300')
call_8979 = func_6299_call()
call_8980 = func_6299_call()
uop_8987 = relay.log10(call_8979.astype('float64')) # shape=(12, 5, 4)
uop_8989 = relay.log10(call_8980.astype('float64')) # shape=(12, 5, 4)
func_6528_call = mod.get_global_var('func_6528')
func_6529_call = mutated_mod.get_global_var('func_6529')
call_9001 = func_6528_call()
call_9002 = func_6528_call()
output = relay.Tuple([uop_8987,call_9001,])
output2 = relay.Tuple([uop_8989,call_9002,])
func_9009 = relay.Function([], output)
mod['func_9009'] = func_9009
mod = relay.transform.InferType()(mod)
output = func_9009()
func_9010 = relay.Function([], output)
mutated_mod['func_9010'] = func_9010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5185_call = mod.get_global_var('func_5185')
func_5186_call = mutated_mod.get_global_var('func_5186')
call_9035 = relay.TupleGetItem(func_5185_call(), 0)
call_9036 = relay.TupleGetItem(func_5186_call(), 0)
func_4115_call = mod.get_global_var('func_4115')
func_4120_call = mutated_mod.get_global_var('func_4120')
var_9052 = relay.var("var_9052", dtype = "float64", shape = (700,))#candidate|9052|(700,)|var|float64
const_9053 = relay.const([6.005156,-4.658727,5.480244,-1.475698,6.275708,9.224014,2.585260,4.665343,3.596723,2.156374,8.171396,3.976759,1.602241,-7.481835,-4.327162,9.198874,-7.084072,-6.843250,-2.764597,-9.454726,-8.516079,-2.179091,8.355117,2.338207,0.587565,-0.453608,5.812645,-2.304436,-3.335689,6.141520,4.409991,-6.170094,7.447987,5.673888,7.700750,2.477744,-0.348565,-0.909719,4.225425,-4.091872,-1.608772,5.559980,8.405522,-9.766186,7.395944,-8.388203,-5.238538,-2.240581,8.197435,5.946455,-7.857810,-4.283783,9.907303,-7.850423,5.831001,4.044720,-4.737593,5.884566,-8.830637,0.736675,5.969833,-4.366853,-0.847471,0.081550,6.714545,2.387490,3.037463,-8.311128,-9.120560,9.158104,7.214873,7.444805,-8.008027,6.979940,0.272334,-8.509227,-1.411508,-8.033740,2.220400,8.644663,2.346269,-9.492311,-8.474315,6.077395,-2.597078,-7.000210,3.712553,0.332580,-5.225125,-2.021877,6.678719,3.590255,-3.763131,-6.245885,1.300495,-9.623430,-6.533933,-2.914806,6.125969,3.413439,-3.003662,5.758961,-5.538924,0.013820,-9.750663,-9.529233,-2.389923,1.146300,4.582111,0.632137,3.359838,4.928116,-9.429776,2.744233,4.089094,5.422619,-8.509594,6.920274,5.731645,-7.271381,6.224021,6.153825,-0.397695,-6.406770,0.012932,-7.389261,6.936123,-5.633910,9.628632,8.132939,8.199356,5.888460,6.554261,-8.753170,4.822760,-9.147772,7.198877,0.803618,3.395990,0.923058,3.344441,2.095199,-2.648301,-1.201762,5.072171,-4.655434,7.311253,3.045762,2.780623,2.831265,-9.133436,8.714856,-2.942185,8.338662,-4.111029,-2.966259,-2.086556,-7.149182,4.912705,9.294590,-4.683948,4.504613,9.325109,-5.740535,-0.799177,9.931328,-2.690090,-3.605118,5.871171,-9.503717,6.098494,5.687741,-0.388318,-6.802364,7.317348,1.447880,4.118161,6.994930,3.878253,0.785595,1.767404,-5.402484,1.560186,-7.514972,-4.303548,-5.860974,3.100102,1.271300,7.420127,-4.972812,7.030294,-3.087811,-0.757889,4.986015,-1.931403,-5.642951,-2.977115,2.021709,9.583232,-9.011101,-0.183233,8.199534,6.767898,5.022213,-4.774380,1.825365,5.591866,7.725336,7.989267,5.292130,5.645822,8.893392,-3.560804,-2.163955,4.847529,7.673837,0.812559,9.029093,-0.976317,-5.037966,-2.405310,-2.517794,0.051570,-0.067373,5.003676,-3.934513,9.141305,-5.226305,-3.859419,8.582492,4.831951,5.849105,-3.898878,2.227868,-8.058158,4.751434,1.915251,-6.398802,7.194671,7.966365,0.430885,-4.367232,-8.757300,-8.354864,7.853035,-6.392460,1.868367,8.199970,-2.697124,-4.332730,-6.146424,-4.775059,1.151701,4.715437,3.155183,0.207518,-9.358103,1.002635,-0.213901,-9.982727,8.472594,7.703945,-0.849015,-4.699114,6.837956,6.779757,2.299795,-2.154891,3.282294,5.204411,-9.957269,1.308929,-4.983817,1.667463,-5.933099,-5.931690,-0.053905,-1.050413,4.717844,-8.836675,1.323160,-4.813834,8.178802,-6.905110,-5.196441,0.938985,-1.769432,-2.080273,4.759952,-8.878469,2.936071,6.092449,-7.218639,-4.030544,3.148097,-2.783139,5.677685,1.604911,9.075101,3.076308,4.004539,1.686732,9.410480,8.787597,5.107394,-5.295059,-5.045537,0.981368,-0.990917,-6.753824,-6.297754,-0.693937,-9.635293,-7.875946,2.467188,1.293296,-2.642826,6.527216,-4.868420,-4.276860,-1.906221,-1.072463,-8.852960,4.593110,-3.668244,-7.282711,-2.047471,-0.787661,-0.049625,3.522027,-3.874510,0.655375,9.634613,-0.828709,5.111830,3.754707,5.059330,-1.020036,6.902240,-3.680854,-1.302790,-9.161773,-2.143850,9.783593,3.492445,-2.657064,4.195842,-0.535422,-8.680765,0.747401,5.678104,4.323586,-5.824953,3.176088,8.626454,1.256058,-3.801127,5.097520,-1.162253,-3.618718,0.860308,7.960717,-7.157231,8.369433,-5.013547,-3.099681,3.377916,8.447227,0.625931,-8.570855,-7.153310,-8.544586,2.056068,7.277057,-7.645375,-7.875513,7.540692,8.653369,2.113987,-5.545539,3.343421,-4.475683,4.617564,-8.933426,-1.219714,1.848531,7.078559,9.351226,9.703363,-3.388049,-0.511977,4.307528,2.012827,8.827156,7.712435,-5.182327,-7.747129,-6.164884,-5.206147,3.004523,4.738133,-8.960288,-1.535922,7.012679,-8.377356,-6.228211,-8.494156,-5.315984,-2.515164,0.007735,-1.545028,-8.666563,-6.956255,-3.850570,6.720541,4.958436,-6.313080,7.529604,7.007319,6.189234,0.516027,7.202771,1.689459,5.650685,9.453960,-8.028117,-9.011360,4.584587,0.899067,-7.386067,8.608101,1.348508,3.492466,-5.742409,4.154870,-4.030435,9.068042,7.837505,-3.206143,-3.712908,8.135605,6.847634,2.943704,-8.053746,-4.370545,-5.415453,-7.049182,3.120639,-9.868665,-6.138794,2.571130,-3.065830,-8.124263,-6.853290,-8.411080,6.467939,3.908413,-3.087937,2.860573,7.524437,1.994458,8.637559], dtype = "float64")#candidate|9053|(462,)|const|float64
const_9054 = relay.const([-4.631615,2.733270,-8.569201,1.293452,6.060759,5.742203,-6.072090,1.814341,1.128271,3.093137,-4.592873,-2.192625,-3.638037,8.100090,0.390445,3.625117,9.997189,6.048303,7.438185,-7.997315,-5.407446,-0.801422,-7.350584,-8.628320,8.183023,-7.937220,-7.614763,2.812497,-4.660632,-2.731006,4.408668,-5.409036,4.650241,9.149123,-2.334533,2.722520,3.410489,5.812553,-1.348123,-9.597740,2.372275,4.454978,4.736468,-0.168160,-0.130953,0.878970,3.481672,-1.116427,-7.565501,4.127445,3.180441,0.144992,-1.116499,6.131638,4.702634,5.395155,-6.715008,-5.858764,2.889912,-7.547621,-2.024044,-2.804122,6.778632,-0.599138,-2.980837,-9.858247,-4.974183,-1.702312,-6.274886,6.037350,8.658673,5.350415,-5.859533,-7.042836,-1.354037,6.321742,-9.352490,-7.011543,-9.433379,4.078681,-8.949219,-0.766417,-8.848631,-7.017528,-2.167027,-7.652765,-1.730401,-8.719152,0.693536,-9.097865,3.599425,-8.110115,4.207344,1.387388,5.150356,-8.426223,-2.712075,9.139124,-4.157603,6.618808,8.407705,-5.409364,6.196304,-9.351513,4.951535,0.213250,-4.022878,0.383242,-4.796961,4.104406,2.907592,-2.970617,4.204756,-7.160348,8.344500,-4.899124,6.433493,-7.535080,8.153446,-4.040526,0.052582,2.236406,1.465678,-4.814778,5.511664,-3.808921,6.623539,-0.354300,-0.478482,-9.219331,4.204126,-4.968648,-8.785794,8.781943,-1.739921,-0.880054,3.292900,7.119984,-7.154745,4.017548,-8.118304,4.819303,-0.746207,-4.569778,-5.828927,-9.658183,3.981593,6.673634,3.342613,-9.535722,-8.005396,4.062878,-9.036100,-5.536293,-9.424365,4.375631,3.040993,5.822502,-4.007108,-3.173095,-0.378892,-7.698844,-0.605283,6.139296,6.945149,6.881919,2.478113,8.432425,3.704837,-2.847196,2.383030,-1.888771,-7.608994,-7.808631,9.944799,-3.807494,2.872023,-4.027658,-4.156517,5.846546], dtype = "float32")#candidate|9054|(180,)|const|float32
call_9051 = relay.TupleGetItem(func_4115_call(relay.reshape(var_9052.astype('float64'), [5, 10, 14]), relay.reshape(const_9053.astype('float64'), [231, 2]), relay.reshape(const_9054.astype('float32'), [180,]), ), 9)
call_9055 = relay.TupleGetItem(func_4120_call(relay.reshape(var_9052.astype('float64'), [5, 10, 14]), relay.reshape(const_9053.astype('float64'), [231, 2]), relay.reshape(const_9054.astype('float32'), [180,]), ), 9)
uop_9066 = relay.acosh(call_9035.astype('float32')) # shape=(12, 5, 4)
uop_9068 = relay.acosh(call_9036.astype('float32')) # shape=(12, 5, 4)
output = relay.Tuple([call_9051,var_9052,const_9053,const_9054,uop_9066,])
output2 = relay.Tuple([call_9055,var_9052,const_9053,const_9054,uop_9068,])
func_9082 = relay.Function([var_9052,], output)
mod['func_9082'] = func_9082
mod = relay.transform.InferType()(mod)
mutated_mod['func_9082'] = func_9082
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9083 = relay.var("var_9083", dtype = "float64", shape = (700,))#candidate|9083|(700,)|var|float64
func_9082_call = mutated_mod.get_global_var('func_9082')
call_9084 = func_9082_call(var_9083)
output = call_9084
func_9085 = relay.Function([var_9083], output)
mutated_mod['func_9085'] = func_9085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7176_call = mod.get_global_var('func_7176')
func_7177_call = mutated_mod.get_global_var('func_7177')
call_9127 = relay.TupleGetItem(func_7176_call(), 2)
call_9128 = relay.TupleGetItem(func_7177_call(), 2)
func_6502_call = mod.get_global_var('func_6502')
func_6504_call = mutated_mod.get_global_var('func_6504')
const_9131 = relay.const([6.413284,-3.525975,-4.008312,-2.929913,1.688629,-5.911947,3.001850,-0.501911,8.332773,6.596038,6.514383,-5.446335,-2.554077,-6.743023,2.662886,2.081625,-0.313607,-5.754837,6.356187,-1.751520,-1.026855,3.022331,2.618976,-8.452678,-9.357920,7.723208,-7.513588,-2.447889,5.889064,-6.933153,8.775273,0.845857,-2.476068,-5.794637,5.634272,-8.984644,0.858203,2.053311,9.238889,7.640946,-7.761003,4.031735,2.151991,0.018391,5.395818,7.438054,6.128752,-5.427859,-2.752164,1.487758,4.946365,-8.785974,6.272112,-3.830809,2.723961,-0.121394,-2.544199,-0.263706,6.860095,-2.020831,9.401846,8.445077,3.824368,-0.933375,-1.555260,4.243123,0.883033,-9.954574,8.988621,7.406821,-9.308941,-1.401355,-8.147321,-9.528696,-8.846852,-2.901262,1.867178,-5.988091,9.793495,-0.691981,-7.882701,1.411998,0.808333,-0.476955,-3.047131,5.092638,2.648678,-4.399638,-6.624950,8.454014,2.544876,0.908173,3.142747,4.694470,-7.434530,-2.963926,5.389081,2.180508,0.466341,-6.280659,3.182403,6.345236,3.602105,-5.876698,-9.173831,4.699854,8.625199,-8.370580,-1.438494,0.152309,-1.867788,-8.069654,-9.447623,-9.794426,8.340412,3.842275,4.853166,-3.590798,-0.255284,-5.753765,-5.217315,5.408563,-1.382822,2.803162,6.160234,-9.828911,-0.236094,-4.616251,-2.866861,5.632539,2.484251,-9.884718,1.960230,0.565536,-4.885244,-7.761800,9.461199,-4.146519,-7.612389,9.620562,5.409659,7.508548,-4.978199,-5.912770,-4.783635,-4.255224,-4.124835,-3.855738,1.565125,-3.949773,-5.403329,9.317386,-9.306061,2.023732,0.141080,-4.261061,-2.104145,-9.765014,1.986468,5.220152,-8.310455,3.042123,5.955441,-6.819293,-4.098117,-9.390639,-1.375171,-7.392163,1.493006,8.278344,-1.225730,3.524543,8.111104,4.412383,-3.172429,-5.155748,1.242602,-9.570396,-5.682975,2.655840,1.171983,8.953591,1.462776,-7.129721,0.007392,9.445581,1.031164,9.378518,6.362729,-2.137617,5.460940,-2.333047,-3.174656,0.664506,-9.218755,1.255453,-8.604023,2.710276,2.472154,9.707774,3.808531,-4.840885,9.847626,9.785080,3.897005,8.452737,-6.515301,7.155253,-3.172527,4.134805,7.176768,-9.190322,6.987954,-1.668202,6.491091,-8.157758,-7.776983,3.089147,-9.148599,-9.348394,-1.733848,-8.111761,-6.043401,-6.833262,0.825078,0.912291,-4.189654,-6.166951,8.160508,-7.505856,-9.652455,9.959165,-3.324960,2.782095,2.584179,-5.800871,4.557069,-9.549502,-8.828637,-0.293918,1.021199,-8.194185,5.822297,2.848804,0.092496,1.649207,-4.558894,2.650623,5.078725,5.389683,-8.532592,1.231154,3.186085,9.849304,-5.232374,7.932940,8.302106,9.676313,-6.059216,3.996369,5.022632,-8.468506,8.395578,-2.572308,-7.063306,5.492127,0.147164,-2.632021,6.141330,-2.339477,0.429282,1.993934,6.613954,8.205399,6.992882,-4.820438,9.780362,6.685568,-7.857447,0.985144,2.918412,5.145791,4.800666,8.653352,-7.773058,-4.169285,5.604627,-0.211507,8.563706,3.224589,1.042124,4.047383,-2.293133,2.136882,-4.892846,4.208082,-2.214026,-4.161810,-2.750351,-6.365512,6.585604,-9.041574,-5.478744,3.581017,-0.507104,-7.981810,-4.975828,-3.823484,-2.733426,4.548876,-5.176905,4.297524,-1.008677,6.822272,2.241465,3.312110,-6.750901,-5.889393,-9.671771,-0.362698,-2.264588,-1.644402,-4.089523,8.353280,7.402084,5.968833,5.562356,-4.317520,-3.523427,-6.641943,9.988713,-0.322440,4.518323,-5.398204,1.170694,-6.865235,8.960661,-7.905929,7.130600,4.543116,4.840639,-8.042538,0.130024,-6.760776,-5.649128,1.760937,-7.995536,-0.405859,-0.725471,5.005635,7.808391,2.872242,0.697718,1.277657,3.872522,1.996205,0.907907,5.327667,-9.206099,6.932983,-4.278026,-8.532634,-6.011875,-2.444647,6.161029,-8.006027,8.872174,6.170821,-2.519246,1.501111,0.848683,-7.353812,0.794569,0.483184,3.256774,-7.494568,-6.355553,-7.809773,9.791511,8.969941,-8.266462,-1.372706,-6.190293,-8.246616,-9.637592,-1.157925,-4.137818,-0.862329,0.079824,2.454556,-5.698115,-2.756092,-1.532902,-8.737860,-2.029718,-7.204808,4.577585,-6.521384,0.901196,-4.896096,0.764207,5.220799,4.147971,7.231550,-5.602996,8.794186,-7.649976,1.002600,-5.347938,8.159326,0.518206,-7.056488,-0.424908,-1.360897,0.143469,2.883489,-4.655874,6.832139,-0.721770,-6.283704,8.858305,-4.442267,5.938574,8.097885,5.146932,-3.566288,-0.087621,3.310700,-8.482124,-6.457054,1.869872,-7.895542,9.273427,3.511726,-1.318754,-5.829088,-1.786005,2.104289,-6.333540,6.935217,8.544155,-7.971307,-5.280410,-2.716353,-2.926940,9.005373,-3.122098,7.756555,8.839716,-3.222458,-4.103631,5.049396,3.081557,-1.098670,1.203963,6.413962,-5.333150,6.483168,3.739808,0.324473,-0.624634,0.331721,-3.293788,-3.610431,-0.078948,7.948287,3.891356,3.791136,0.469992,-5.273957,7.435525,-8.705391,-4.571363,6.977846,5.289871,4.152020,5.167127,2.246665,0.481202,8.458642,-4.333660,-7.292413,9.579988,-3.535720,8.675050,-1.451680,-2.572368,-6.845138,-9.261107,-1.254271,-9.617904,9.344236,6.212566,6.159717,6.942889,-9.176802,4.680411,3.200679,-6.259986,-3.638656,3.964447,-0.264593,9.081451,-7.973961,-0.164373,8.513705,-4.152894,-7.892956,2.705426,-6.294695,-5.532034,-7.367004,7.934574,1.582693,5.286732,6.297484,-9.152700,-9.842339,4.904804,2.772938,-8.943949,-6.858309,5.859143,-8.202815,7.272911,0.572665,2.711487,1.499567,-8.496722,-7.795811,-2.153367,-4.785095,7.908231,-2.945265,0.514776,2.539226,7.536128,-1.406792,-6.027228,0.753235,4.343209,-0.338177,3.223153,5.640201,-3.402520,1.520395,6.772082,5.231081,0.513764,8.854316,3.023480,-9.452130,9.743000,4.316385,7.092594,9.054563,-7.712594,9.777825,6.845685,8.506355,-4.452542,8.372293,-9.558918,-2.008236,-1.054585,-9.996211,-9.070291,-9.225190,4.945038,-1.046354,5.866951,5.340226,5.849958,5.468967,1.037354,-8.311600,9.569564,0.913384,-0.555062,5.456182,-7.863488,-4.069396,-2.281313,-7.381685,-5.014733,-7.884950,-8.684983,0.924158,-4.708151,-7.873308,0.827199,1.045964,-0.441134,-9.796671,0.237623,-5.426604,8.628141,-9.553754,1.217701,0.789814,1.731393,3.671001,4.279855,1.502052,7.009683,4.407970,-1.561150,-0.443043,-7.622486,2.729998,-6.012086,9.177851,-2.430329,-9.424600,-6.946269,-2.467564,2.894823,0.080521,-6.526063,4.529312,-3.843679,0.374367,6.601309,-4.932482,-9.480214,4.845546,3.492847,3.712064,1.870302,6.280888,1.217307,4.926451,-0.655393,-7.504194,-3.302928,-5.806781,-4.800824,1.732439,3.160477,1.725724,-5.004001,7.063943,7.840142,6.302053,-0.722084,-9.917215,-9.715181,-9.002063,-3.761096,-1.270726,-9.958979,-6.561398,-8.773955,9.623517,7.273614,0.465278,8.433382,4.682292,2.405816,2.944036,5.878947,-7.498608,-5.306962,-9.747833,7.667944,6.260161,-6.181102,-6.859565,7.786007,-6.912139,9.257677,-3.252334], dtype = "float32")#candidate|9131|(672,)|const|float32
call_9130 = relay.TupleGetItem(func_6502_call(relay.reshape(const_9131.astype('float32'), [336, 2])), 5)
call_9132 = relay.TupleGetItem(func_6504_call(relay.reshape(const_9131.astype('float32'), [336, 2])), 5)
func_2735_call = mod.get_global_var('func_2735')
func_2739_call = mutated_mod.get_global_var('func_2739')
const_9137 = relay.const([0.956225,5.050387,-0.375356,-1.036265,-3.331743,3.083050,-2.587259,-7.551584,-8.695846,-1.294512,4.416354,-3.761526,-4.597012,-3.720388,4.171749,-5.121989,-6.168527,-7.830009,-7.922447,-5.501375,-7.950575,-9.680599,-4.113121,1.430817,-2.078596,-2.752893,0.436995,2.634813,-3.169053,5.023162,5.678004,-7.200389,1.731228,-6.397744,-3.897989,0.942452,9.374676,1.615965,-3.385415,-1.808334,-2.258421,-0.403411,3.890652,9.425106,-5.190452,-3.562659,7.122657,8.279782,7.546698,-5.815780,-0.169266,-5.763820,7.560099,-9.662148,-7.228373,7.313428,3.594583,-1.831239,9.155554,-3.123327,-9.539181,7.116987,1.846059,3.915655,1.099116,-6.063814,7.338150,7.377807,8.046101,-8.752505,-2.537851,-3.760215,-6.089009,4.846551,7.953085,9.049893,-1.975034,6.512092,9.370101,-8.281084,-3.699532,4.052847,6.901385,8.458996,-1.128406,-0.229985,8.911131,-5.123968,-7.080711,4.378803,4.909829,6.662274,9.402851,7.943872,7.123660,3.334714,7.053926,1.614035,0.703625,7.681022,3.002808,1.856081,-0.619640,-7.799033,0.561852,-5.832042,-8.859852,-6.887824,-4.012389,-2.191485,3.622944,-3.286656,-0.827259,6.119780,-6.002339,3.963293,-8.456931,-7.060998,-6.518574,5.732810,-9.196721,-2.326115,-3.359270,-5.856610,4.695429,-6.107788,1.648298,3.498057,4.510613,6.106052,0.962581,9.488332,5.632213,-7.580113,-2.638532,7.460281,-4.341399,3.107012,-5.574684,1.962068,-5.112424,-8.354674,-0.679163,-0.021029,-0.662693,2.064137,-8.826008,-7.953272,-8.337704,-0.226319,-4.402748,6.207005,6.514629,2.985261,0.307827,5.381127,1.725941,1.907295,1.479602,6.263727,6.847961,3.031575,0.820808,-7.274952,8.538826,-5.413205,-1.280648,-7.838608,-5.693141,-3.461601,-4.581881,7.102249,4.185810,-1.935629,-6.914100,5.149877,-8.700604,-9.141719,-1.418147,-2.326663,7.933295,7.121641,-3.391894,8.167489,-2.267953,-3.316955,-2.807678,-2.473235,-3.591601,-9.724218,-9.727958,7.014039,2.408797,-1.054430,-9.835695,8.227907,2.773445,8.693414,-3.492606,-1.985805,-9.108129,5.988710,-1.725855,8.015694,-8.410552,-4.800061,2.670257,-0.580338,6.069188,-4.593586,4.581180,1.928572,-7.447702,-1.452013,0.796125,1.231511,-2.805440,-5.809844,-2.577433,7.570367,-6.751735,1.873932,8.394803,-0.126001,-8.055341,-9.850631,-8.434259,-7.037672,3.084408,1.724936,6.932826,-5.206224,6.230505,5.838433,-2.337849,1.773884,-7.726188,-2.965806,-9.419157,-6.064939,4.582246,-2.210224,-3.867664,3.800543,6.291740,-1.437228,9.753228,-3.386332,-0.672221,1.682916,5.100992,7.848040,3.025351,5.407283,-3.235183,6.060164,5.664415,0.856916,-7.812609,6.513003,7.436368,9.064601,-0.472418,8.946141,3.636372,-8.625683,1.648490,-2.542543,3.901428,-1.072872,8.735786,-2.992714,0.221735,-2.332565,-6.291731,-8.455250,0.076921,-5.090586,4.051151,-5.286894,-5.925399,9.889761,-4.440439,9.848712,-1.552829,4.837153,7.009116,-4.991966,0.037325,-5.970615,-9.403724,6.934089,-0.972481,1.746498,-9.191017,-2.224164,-5.055270,-1.939076,1.943951,5.524454,-6.393455,6.678679,-5.398509,-5.633329,-0.173462,5.767475,9.092043,6.214785,-2.798345,-6.658978,-0.794794,-7.684068,-2.757386,-6.649388,-1.683732,7.578744,-2.727965,-2.628621,-4.080078,9.137269,0.808270,1.743227,7.753691,7.498074,-6.187713,-3.913123,-6.991045,8.332552,-4.625710,9.184271,4.681150,6.706755,5.383610,-6.591341,-4.420496,0.976185,-9.833287,5.252321,7.316638,-0.613951,-3.557973,-2.653809,8.636090,8.738057,1.680999,-1.981029,-2.181632,1.863607,8.952796,9.449238,4.270216,9.994042,-4.119059,2.191236,4.476985,9.737360,5.915701,2.409258,0.893641,-8.947808,2.726742,-7.064490,-3.889531,9.647083,9.455739,1.719146,2.400167,1.196719,8.941825,0.333437,-8.483278,-9.724478,0.683674,-1.603945,3.910273,0.751231,7.988995,-5.999717,4.469613,8.506485,-8.408425,0.485730,3.511715,6.629215,-7.912760,-7.970527,1.419624,-6.625431,-9.316652,-0.976749,1.071545,-4.774039,5.550007,-5.544104,-9.377369,4.334070,-8.493853,0.218258,2.869262,8.097284,4.290085,-5.644273,-2.671027,4.041936,3.261081,-2.692852,-3.015516,0.270731,3.419403,-8.118465,2.951978,4.060174,3.904978,-6.071292,4.605527,-0.315671,8.793470,-4.555871,8.080020,-0.630069,8.594696,9.089681,6.620355,0.958650,-0.938272,-4.415048,2.111347,8.287851,-8.758972,-0.223356,8.275548,5.876570,3.917459,0.302036,1.843647,-1.076384,-2.156528,-9.499049,-4.798938,0.321494,-4.278479,9.118437,7.130783,-7.956386,-5.916205,7.095975,7.598838,-2.846502,-0.650591,8.357994,3.029212,-7.380320,3.724278,2.326557,-3.375348,-4.644286,-6.248744,7.424277,-8.260327,-2.776324,-1.079630,7.789148,-8.792175,-2.291346,1.580469,-3.214934,3.920873,-4.114823,-9.084139,8.399396,-0.509060,6.759853,8.239304,-2.597854,-2.898530,-7.518316,5.923784,-2.022126,0.299378,-2.643623,-2.605409,7.282454,-6.797942,-7.722974,1.368790,2.884563,4.871730,-2.049104,3.586327,-8.830873,9.521975,-5.449607,-1.081251,-6.178261,-1.739272,-6.623241,-5.651156,-3.999926,-6.660917,6.326474,-1.644954,1.151498,3.618089,-2.363616,4.514186,-9.089012,4.657408,4.307915,0.867613,7.963874,-5.734701,-4.509929,4.393455,8.842629,4.671103,7.658313,-2.903581,0.931151,6.585527,-4.599303,-7.109166,2.837764,-4.471614,-8.219906,9.625360,0.594404,5.346300,-2.641909,-1.011654,-5.937611,-9.796832,-3.572789,6.129740,-6.223982,9.298298,9.281214,4.350538,-2.360974,3.359075,3.479790,-9.372272,-8.770592,-0.079654,7.838602,4.581806,-6.975671,7.041564,-1.670446,-4.571303,3.637909,3.446370,4.250934,-4.316703,-0.394368,-0.076510,-9.431515,-3.284340,6.223850,5.847530,-5.778347,-4.103511,-2.085347,8.957934,-4.477587,7.198128,9.147064,-9.467433,8.006334,-4.409092,-6.447523,9.798160,-5.204109,-3.375703,-4.725961,-3.886256,-9.458671,3.072942,-2.277172,1.649295,-1.411165,0.346369,4.589072,-5.007498,-4.666565,1.100690,-2.849858,4.170394,-0.574041,-8.042521,1.108193,1.585679,7.229575,-2.856270,7.557822,5.083865,-6.718409,-1.836023,-4.770852,-9.084178,8.465374,-3.606878,-1.314734,-7.914399,9.530480,7.674458,0.169585,-9.387909,9.670161,3.691692,-9.823020,-4.828748,9.624329,-7.735733,3.463358,-7.296012,-1.616296,-9.833810,-9.500544,-2.271202,6.688572,-7.502749,-9.259052,-4.516651,3.352151,5.830866,-0.884033,-4.932573,-4.348273,5.933285,8.921291,-0.764989,-6.127806,-9.627805,-3.506234,-4.376399,-9.025132,-3.319284,2.939229,-3.128911,-0.424316,-1.828697,5.584840,-5.296737,-7.455286,5.306553,9.390206,6.442270,6.528885,-1.302401,-1.938379,2.002391,1.330089,-5.075152,-9.024818,1.905496,-2.641106,0.511333,-8.583578,9.511736,-5.334098,-9.838238,-3.638575,1.276805,2.125786,4.475000,2.852013,-5.229205,5.509853,5.226481,8.086942,-2.893840,9.811798,4.291423,-0.955328,-6.614151,-3.329392,-5.387501,-3.258950,-0.727202,-7.770920,-8.077337,-4.135017,-2.885566,2.847093,-2.625050,1.434089,-7.872821,-4.831202,-7.593954,-4.276140,9.991141,-1.593997,4.652819,-2.749105,-8.636557,-9.308743,-0.996202,-3.351777,-4.706521,-5.475420,-5.141753,6.273608,-1.045225,5.499432,-5.358141,9.972932,-3.748210,-6.340024,2.849348,4.270390,6.335188,-1.898629,-3.838056,-9.766843,-8.812408,7.096836,-2.553096,0.625892,5.944898,-7.145670,-5.352584,4.215019,2.707931,-4.019599,-4.372751,-3.610903,5.245116,7.455841,0.035124,-6.222966,7.061238,4.030073,7.030392,-4.166391,7.297308,-8.368846,3.482725,-8.336224,2.923934,1.870914,-1.584468,1.796292,-4.010953,9.305628,5.798588,3.876799,-7.886090,-2.833839,2.302326,-4.350809,1.109111,-6.967575,-2.791534,2.841738,5.627791,-2.349308,0.308477,-7.833842,-7.514092,5.175835,0.165375,-5.762911,6.749551,9.043232,-0.066349,6.764119,3.396130,-8.463504,-4.804361,5.012504,-3.749485,8.991654,-1.422980,9.501520,-5.099054,-5.646849,1.603950,4.164664,2.637727,0.689756,-3.276887,-9.819421,-2.282459,7.872055,-9.459710,-8.467906,-3.095350,-7.536214,3.475611,-4.645548,2.379257,-2.944463,0.854539,5.979764,-3.540599,-3.532501,-5.540759,-5.502924,4.738847,5.920659,4.780455,-9.978348,-9.391421,-9.520785,-5.449135,5.324174,4.388657,-0.538233,7.238352,0.558231,-1.698430,-7.160346,-8.697070,1.784791,-3.937027,-5.099806,1.044432,-3.949300,1.992097,6.620370,1.506829,5.196182,-5.027792,0.031443,-0.714765,-8.236429,1.595859,9.949138,8.962419,6.114868,4.855185,2.805236,0.522071,-5.914359,-7.847402,-0.703778,-4.847064,-7.069956,-1.905116,-0.555166,6.462699,9.776063,9.089048,-9.677275,-3.026905,9.538459,4.379879,-5.444870,-7.263828,-6.237835,-5.299965,-6.755672,-2.960363,-7.943984,-5.384608,2.848627,4.817376,-4.218293,2.912750,9.482553,8.821242,-1.163879,-4.772291,6.835712,8.490365,7.170203,-4.329259,2.999152,9.374617,6.252906,-3.132899,7.881677,-5.433356,7.826426,-5.187423,3.959685,8.295853,8.027428,-8.067563,-0.968376,-0.819967,7.045863,3.805316,2.059217,-7.911819,-2.498057,-2.146836,-0.636268,-4.985601,-5.388407,6.455502,-1.961180,8.401556,-1.592406,-0.988475,-3.690034,-8.389463,3.286472,-3.203355,-9.001590,-4.789132,5.761016,-2.998202,2.545819,9.310414,-0.261007,4.463941,3.338926,-4.419279,-8.854856,-9.568075,6.847517,-3.579226,-4.262012,7.444271,-6.892637,-1.657189,-4.168121,5.613912,7.645501,-8.581368,8.910785,-8.213962,-9.157365,-3.957943,0.647514,1.483228,-4.289304,8.103290,-8.391440,2.629741,-9.607252,1.753518,8.775568,-5.854253,3.620598,-7.673583,-6.717882,-8.888539,1.627542,6.090191,9.111123,1.961423,9.713240,0.397709,0.565748,-7.828759,-3.726031,5.491234,-9.737368,-6.623206,-4.833199,9.540908,0.090038,1.382182,-7.247084,6.838548,-7.484448,7.012738,5.163431,0.032169,-2.505788,0.872538,5.985277,-6.279635,-9.694056,-1.939512,6.762607,-7.741777,7.380949,9.661306,-3.504426,9.636340,7.685398,-0.273943,7.054132,9.236088,2.426647,-6.257215,2.770271,6.699323,5.333368,-7.717620,2.115473,8.702117,0.375044,-8.003863,5.189159,-5.476403,5.286468,-6.770464,-1.657251,-6.159668,-5.419882,1.454923,3.703575,4.079308,-9.326601,8.122403,-0.520126,-0.751514,8.305871,-8.694022,-1.160167,2.647677,8.348235,0.951469,7.086516,-9.756917,-8.456039,-2.553521,-1.064811,8.816895,7.629484,-0.570703,9.980732,2.324746,1.244292,-4.346688,-5.942607,5.358019,0.577608,-2.135712,-7.559674,-1.773461,-8.421006,-7.200762,-7.001297,0.847566,-7.021894,-8.862842,-5.775293,-0.046314,2.601893,7.937783,-3.787966,7.015741,3.569812,8.441620,-3.260278,4.043154,-9.748106,2.731153,1.710522,-6.649202,-9.731730,7.878270,5.420811,0.494650,-0.929599,-4.968687,7.086676,-8.471404,6.152268,5.587706,4.663753,-6.725862,-6.919630,4.456052,-9.715676,-5.676354,-8.511094,1.998850,6.033712,-8.038765,-7.057998,2.713763,-4.279122,-6.297622,3.154312,-0.532111,-7.848493,-1.647475,-3.602727,-6.440866,5.849778,-7.303851,0.517761,9.877800,-8.560567,-0.385645,2.947078,-9.059899,-6.006102,3.199532,-9.685832,-6.171529,5.381152,-8.953317,-3.286996,-2.356770,0.162240,6.665768,4.402081,6.707354,-4.528953,-4.291044,7.766196,-3.458365,0.837879,1.775489,3.519732,8.468919,-4.626499,-7.106854,-9.532335,6.045809,3.818657,-5.852949,8.235074,-6.288503,-0.237929,1.437985,-3.521612,0.985233,-6.193154,6.832903,-4.796860,-9.882185,-4.789606], dtype = "float64")#candidate|9137|(1120,)|const|float64
call_9136 = relay.TupleGetItem(func_2735_call(relay.reshape(const_9137.astype('float64'), [10, 14, 8]), relay.reshape(const_9137.astype('float64'), [10, 14, 8]), ), 0)
call_9138 = relay.TupleGetItem(func_2739_call(relay.reshape(const_9137.astype('float64'), [10, 14, 8]), relay.reshape(const_9137.astype('float64'), [10, 14, 8]), ), 0)
var_9157 = relay.var("var_9157", dtype = "float64", shape = (10, 14, 8))#candidate|9157|(10, 14, 8)|var|float64
bop_9158 = relay.multiply(call_9136.astype('float32'), relay.reshape(var_9157.astype('float32'), relay.shape_of(call_9136))) # shape=(10, 14, 8)
bop_9161 = relay.multiply(call_9138.astype('float32'), relay.reshape(var_9157.astype('float32'), relay.shape_of(call_9138))) # shape=(10, 14, 8)
output = relay.Tuple([call_9127,call_9130,const_9131,const_9137,bop_9158,])
output2 = relay.Tuple([call_9128,call_9132,const_9131,const_9137,bop_9161,])
func_9171 = relay.Function([var_9157,], output)
mod['func_9171'] = func_9171
mod = relay.transform.InferType()(mod)
var_9172 = relay.var("var_9172", dtype = "float64", shape = (10, 14, 8))#candidate|9172|(10, 14, 8)|var|float64
output = func_9171(var_9172)
func_9173 = relay.Function([var_9172], output)
mutated_mod['func_9173'] = func_9173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6872_call = mod.get_global_var('func_6872')
func_6874_call = mutated_mod.get_global_var('func_6874')
call_9175 = relay.TupleGetItem(func_6872_call(), 2)
call_9176 = relay.TupleGetItem(func_6874_call(), 2)
func_7722_call = mod.get_global_var('func_7722')
func_7724_call = mutated_mod.get_global_var('func_7724')
call_9199 = relay.TupleGetItem(func_7722_call(), 0)
call_9200 = relay.TupleGetItem(func_7724_call(), 0)
func_8445_call = mod.get_global_var('func_8445')
func_8446_call = mutated_mod.get_global_var('func_8446')
call_9201 = func_8445_call()
call_9202 = func_8445_call()
output = relay.Tuple([call_9175,call_9199,call_9201,])
output2 = relay.Tuple([call_9176,call_9200,call_9202,])
func_9216 = relay.Function([], output)
mod['func_9216'] = func_9216
mod = relay.transform.InferType()(mod)
output = func_9216()
func_9217 = relay.Function([], output)
mutated_mod['func_9217'] = func_9217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6438_call = mod.get_global_var('func_6438')
func_6439_call = mutated_mod.get_global_var('func_6439')
call_9260 = relay.TupleGetItem(func_6438_call(), 0)
call_9261 = relay.TupleGetItem(func_6439_call(), 0)
output = call_9260
output2 = call_9261
func_9291 = relay.Function([], output)
mod['func_9291'] = func_9291
mod = relay.transform.InferType()(mod)
mutated_mod['func_9291'] = func_9291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9291_call = mutated_mod.get_global_var('func_9291')
call_9292 = func_9291_call()
output = call_9292
func_9293 = relay.Function([], output)
mutated_mod['func_9293'] = func_9293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5528_call = mod.get_global_var('func_5528')
func_5529_call = mutated_mod.get_global_var('func_5529')
call_9317 = relay.TupleGetItem(func_5528_call(), 1)
call_9318 = relay.TupleGetItem(func_5529_call(), 1)
func_5159_call = mod.get_global_var('func_5159')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_9319 = relay.TupleGetItem(func_5159_call(), 0)
call_9320 = relay.TupleGetItem(func_5161_call(), 0)
output = relay.Tuple([call_9317,call_9319,])
output2 = relay.Tuple([call_9318,call_9320,])
func_9323 = relay.Function([], output)
mod['func_9323'] = func_9323
mod = relay.transform.InferType()(mod)
output = func_9323()
func_9324 = relay.Function([], output)
mutated_mod['func_9324'] = func_9324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6299_call = mod.get_global_var('func_6299')
func_6300_call = mutated_mod.get_global_var('func_6300')
call_9325 = func_6299_call()
call_9326 = func_6299_call()
func_6997_call = mod.get_global_var('func_6997')
func_6999_call = mutated_mod.get_global_var('func_6999')
call_9337 = relay.TupleGetItem(func_6997_call(relay.reshape(call_9325.astype('float32'), [12, 5, 4])), 0)
call_9338 = relay.TupleGetItem(func_6999_call(relay.reshape(call_9325.astype('float32'), [12, 5, 4])), 0)
bop_9346 = relay.bitwise_and(call_9337.astype('uint8'), relay.reshape(call_9325.astype('uint8'), relay.shape_of(call_9337))) # shape=(12, 5, 4)
bop_9349 = relay.bitwise_and(call_9338.astype('uint8'), relay.reshape(call_9326.astype('uint8'), relay.shape_of(call_9338))) # shape=(12, 5, 4)
output = bop_9346
output2 = bop_9349
func_9352 = relay.Function([], output)
mod['func_9352'] = func_9352
mod = relay.transform.InferType()(mod)
output = func_9352()
func_9353 = relay.Function([], output)
mutated_mod['func_9353'] = func_9353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9009_call = mod.get_global_var('func_9009')
func_9010_call = mutated_mod.get_global_var('func_9010')
call_9383 = relay.TupleGetItem(func_9009_call(), 1)
call_9384 = relay.TupleGetItem(func_9010_call(), 1)
output = call_9383
output2 = call_9384
func_9387 = relay.Function([], output)
mod['func_9387'] = func_9387
mod = relay.transform.InferType()(mod)
output = func_9387()
func_9388 = relay.Function([], output)
mutated_mod['func_9388'] = func_9388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6707_call = mod.get_global_var('func_6707')
func_6708_call = mutated_mod.get_global_var('func_6708')
call_9401 = relay.TupleGetItem(func_6707_call(), 0)
call_9402 = relay.TupleGetItem(func_6708_call(), 0)
func_8511_call = mod.get_global_var('func_8511')
func_8512_call = mutated_mod.get_global_var('func_8512')
call_9403 = relay.TupleGetItem(func_8511_call(), 2)
call_9404 = relay.TupleGetItem(func_8512_call(), 2)
output = relay.Tuple([call_9401,call_9403,])
output2 = relay.Tuple([call_9402,call_9404,])
func_9408 = relay.Function([], output)
mod['func_9408'] = func_9408
mod = relay.transform.InferType()(mod)
output = func_9408()
func_9409 = relay.Function([], output)
mutated_mod['func_9409'] = func_9409
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9410 = relay.var("var_9410", dtype = "float32", shape = ())#candidate|9410|()|var|float32
const_9411 = relay.const([[[-2.566154,-1.247653,6.028892,-6.015509,-7.469707,-3.489904,-6.239346,5.470999,-2.246521,0.601209,7.028807],[-8.226549,9.841773,-8.637414,-4.199285,-2.084119,-8.899940,6.517271,8.416622,5.418663,9.515816,-7.139445],[5.659823,-7.943600,6.450461,0.051292,6.217388,7.790758,-7.624470,0.950717,0.244215,0.717063,-2.743162],[6.218259,2.475807,-2.577258,-2.989043,-0.532046,-6.187151,2.501334,-3.589292,-3.022262,8.232225,7.422992],[2.095542,-3.617630,-9.567954,-7.452813,-0.540039,8.052701,-3.913130,-7.022305,-3.649600,-2.133226,6.696675],[-3.986822,-5.222354,-2.019378,-6.688448,8.647952,-0.763086,-2.708881,-3.370701,-1.253585,-5.131920,-7.933690]],[[8.270730,4.932365,6.242573,-8.628751,-2.860876,-8.790344,9.319866,-6.572784,-6.259141,-5.939788,1.748530],[-2.895416,5.936962,-4.226425,-3.000386,7.604900,-2.335855,7.491534,-1.765346,-0.328333,9.356638,-1.504104],[0.340293,-7.526308,-8.532826,2.928676,-7.973415,3.260664,-0.707229,8.965165,-5.746704,-5.982366,-2.429668],[-1.417793,5.761578,1.600057,-1.436907,6.085240,-3.202064,1.644457,-8.460974,-3.254107,-7.235334,1.978592],[1.776845,8.022219,2.831044,-4.213520,-5.232471,-0.981515,-3.166730,-8.592073,4.654659,-9.499006,9.828700],[4.308148,-4.156877,-2.649336,7.577826,5.883870,6.212131,4.463692,-3.376845,-4.289553,-4.909465,-5.519664]],[[-1.916860,2.676123,6.518161,2.373250,-0.097752,-6.745582,-8.721133,8.757481,-8.576189,-3.326193,-3.152782],[-0.417178,-1.525618,8.580273,-5.934614,0.274111,-0.804529,-8.725076,-1.177894,-0.325754,-1.326401,-3.611269],[-7.613785,5.431141,-2.090950,-1.030714,4.275113,-2.553581,7.450507,-1.944065,5.745499,-9.860675,6.713349],[4.684065,-5.634049,-9.169710,6.045805,4.937852,-5.280288,-4.932985,-4.318530,8.274891,-3.122087,7.594309],[4.512551,7.536708,8.353682,-3.969347,-1.743519,1.928370,-8.180945,-3.029815,-9.881280,0.659559,-4.463412],[6.206222,-1.804071,-9.393127,-9.845344,-5.358084,9.349163,1.954858,6.344540,6.401770,2.033354,-0.935593]],[[-9.032782,1.426309,-1.039167,-0.206233,6.292553,2.321550,-6.199151,-8.343007,-4.133069,0.671638,-9.159711],[-0.195881,-2.997092,7.455047,-5.403662,4.193282,-8.000956,7.857456,2.893653,7.332799,-6.771162,-4.869226],[-4.559977,2.377934,2.835353,5.975446,2.017294,0.735127,2.456640,-2.529747,-7.201430,8.541711,-6.275836],[3.387440,-2.074381,-6.053109,-8.985345,8.408624,7.451711,3.144529,0.212891,-0.387138,-2.517792,5.827862],[3.393948,-3.271580,7.650002,-8.158873,-6.647233,-5.739833,7.309580,5.060613,7.055385,-7.628869,-4.432962],[-1.678985,-5.209996,-1.854499,-3.879645,9.616373,9.598886,-7.891669,0.629096,1.891787,-0.990725,-5.007569]],[[-2.459513,8.500269,-8.556766,5.174415,8.187230,8.868906,-8.662416,5.938767,5.406837,-8.303377,-9.221145],[6.285167,-7.981167,2.008585,-2.247262,-6.363823,-5.168219,1.826600,4.458730,0.722006,-4.438106,3.025074],[-8.547765,6.523560,0.021244,2.473366,-3.539787,6.492991,8.956450,-3.514719,-4.989266,-0.210379,-5.507492],[7.606013,-8.298298,6.416070,8.023714,-5.458939,6.635409,0.250508,6.040585,-6.341157,-5.120474,-0.009087],[-4.347289,4.031824,9.424214,9.183897,8.532870,-0.297349,1.527802,-8.736106,-6.273380,1.738252,6.478071],[-3.151902,7.433798,-8.337184,-7.556615,4.538521,5.495844,6.122884,-3.716476,9.486030,8.355644,-1.055394]],[[1.886922,-1.475761,9.822708,3.624170,-4.717284,3.728791,-1.464623,0.877390,4.604401,6.161923,-7.352860],[2.729010,-8.409183,-9.999600,-8.022726,-4.049407,-7.726594,9.291517,-8.705977,-5.000120,-3.259178,-6.414858],[5.612685,5.676783,-1.625716,-0.182200,2.006364,-1.168866,-5.089238,-1.277805,3.402904,-7.488176,7.591209],[6.009871,-6.050501,-2.832178,9.733284,7.336203,9.163932,4.629409,7.053329,-0.379069,-0.370351,-3.187736],[7.360022,5.621075,-4.095832,-7.349866,-2.696894,3.373527,3.125417,1.187046,9.311840,-5.936054,-0.538809],[-7.486756,5.438550,-7.907749,3.142237,-8.727597,1.583048,4.623568,0.033262,9.525130,0.546309,-4.622717]],[[5.458023,-0.571300,-4.576287,8.947616,-6.637962,-9.489701,-2.496363,2.091540,-5.156320,-8.153272,-1.052076],[4.759818,-3.846783,1.392652,2.610998,-2.878055,2.910274,4.668790,3.666791,-9.172192,2.481980,6.154625],[-9.648722,8.583231,-4.807448,-9.395079,-7.407098,-0.532699,7.871845,-6.332634,3.655236,3.877932,2.700212],[-8.696163,8.290250,6.243530,-2.538906,-6.502650,9.998096,3.845133,9.769019,-0.256234,1.576102,-0.403066],[-1.466649,4.841364,-9.001898,2.989588,-5.485103,-5.123774,-8.260906,-1.979060,4.948564,7.980952,-8.490353],[-8.085608,1.188716,2.198637,-4.139191,3.887893,5.914281,-1.098171,5.751902,8.828613,-0.065130,7.632274]]], dtype = "float32")#candidate|9411|(7, 6, 11)|const|float32
bop_9412 = relay.floor_mod(var_9410.astype('float32'), const_9411.astype('float32')) # shape=(7, 6, 11)
output = bop_9412
output2 = bop_9412
func_9416 = relay.Function([var_9410,], output)
mod['func_9416'] = func_9416
mod = relay.transform.InferType()(mod)
mutated_mod['func_9416'] = func_9416
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9417 = relay.var("var_9417", dtype = "float32", shape = ())#candidate|9417|()|var|float32
func_9416_call = mutated_mod.get_global_var('func_9416')
call_9418 = func_9416_call(var_9417)
output = call_9418
func_9419 = relay.Function([var_9417], output)
mutated_mod['func_9419'] = func_9419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9323_call = mod.get_global_var('func_9323')
func_9324_call = mutated_mod.get_global_var('func_9324')
call_9430 = relay.TupleGetItem(func_9323_call(), 1)
call_9431 = relay.TupleGetItem(func_9324_call(), 1)
func_8387_call = mod.get_global_var('func_8387')
func_8390_call = mutated_mod.get_global_var('func_8390')
var_9434 = relay.var("var_9434", dtype = "float32", shape = (16, 14))#candidate|9434|(16, 14)|var|float32
const_9435 = relay.const([2.251913,-4.965904,3.697571,1.059415,-9.730498,-3.735408,1.576506,-1.197037,-6.206117,5.485463,6.005381,-3.231071,2.170136,-5.985692,-7.618101,3.711011,9.466689,8.020757,-4.810367,-8.409138,0.053709,1.469907,5.920968,-5.523358,-0.766559,-8.672725,9.529749,-0.546269,1.635566,7.234258,8.942968,1.248828,-3.007472,9.085182,-8.708935,1.735549,5.527851,-4.584055,4.138507,-3.152463,8.649135,3.226942,3.562780,0.108640,-9.735241,3.929196,-1.075424,-3.347971,6.397636,6.599025,8.651657,3.018422,3.183688,5.920775,-8.257551,4.457650,-6.503868,-6.412741,-0.704658,-7.273209,5.370411,-2.823350,0.887487,-4.884410,-0.192877,-2.707104,4.278255,-0.891741,4.109783,8.565432,-4.220419,0.753866,8.777729,-1.238405,-9.972875,-8.408604,-9.051102,0.060275,2.564234,-0.026459,7.967230,-2.605594,8.809100,-0.216142,-1.335960,-4.881974,-3.805412,-9.222137,-2.482895,7.663965,7.835305,-7.912443,-5.902547,2.086804,8.140016,3.168623,-2.651089,9.328973,7.130686,7.381115,6.896928,-5.678649,7.336557,3.408156,4.422209,-3.997585,-3.282590,8.263717,-3.253644,2.360046,-4.033085,9.584771,-8.327308,-4.718574,-9.043516,5.973468,-8.522817,1.771171,-6.522776,4.373977,2.928702,6.705781,-2.246407,-8.387813,8.397369,-5.044314,-1.817490,1.246863,8.911375,-8.003224,4.713625,2.000761,3.517202,4.663413,-9.726194,-8.725162,6.098819,5.630514,-5.641267,-3.805060,3.026058,3.724596,-8.602758,-9.889079,7.064008,3.072969,0.190680,-6.005348,6.552801,-9.668707,-9.568542,1.658197,-0.807621,6.921477,-5.042476,5.202055,-4.226109,-9.299943,5.637748,-1.241628,6.658963,9.491467,5.509626,-3.271890,0.320474,-3.799944,1.309068,2.277153,-0.297421,-2.514515,3.807482,9.640774,-6.229519,-7.027345,-1.842007,-5.053726,5.769958,-2.842449,8.965318,6.694292,-3.259328,-5.909956,-6.613554,7.142983,-2.028949,3.054959,5.169533,-9.696110,-1.787577,7.937938,2.214186,1.933952,8.212855,0.369524,-2.408132,-2.840482,-3.835095,-0.808827,-9.517740,-0.535876,6.742869,-6.393959,-0.141848,-6.342530,-5.033549,3.745006,-8.595813,-3.771332,9.211050,-5.653699,-0.624841,-9.880538,-3.159095,6.723500,-8.008650,6.259283,-2.890267,8.172021,-7.233218,2.019589,0.983072,0.577106,7.831964,-4.794254,5.904012,-8.649396,5.566420,6.694043,5.582659,-8.560206,-3.634401,2.794039,-3.117511,0.081503,3.739923,3.252746,2.676666,-6.683591,-7.526714,7.488683,9.516944,3.423057,-4.131010,-3.494616,-4.857850,-4.563028,1.006765,7.148092,-6.659033,-6.676543,4.681761,-3.777859,-6.308285,-8.911376,0.402368,6.367117,7.342349,6.310673,0.063851,-7.911248,0.449567,-8.904247,-3.129234,-2.595935,-1.867504,-1.475370,-2.472269,-2.224658,3.231193,6.273307,8.405544,-5.920332,9.405693,-5.959885,8.841197,-1.078979,1.480741,4.528060,-6.626103,-1.048859,6.061771,9.030786,-3.440980,-3.817115,-4.898204,-3.779479,-6.274855,-7.431119,7.576217,-7.152035,6.225552,5.613744,8.102960,2.063326,-2.858847,-1.266579,-6.834034,1.360093,-8.677695,6.873063,9.636272,-5.309930,-2.395415,8.732334,8.097681,-0.101462,0.522797,-9.109579,0.486066,-3.696830,8.768150,8.203932,-8.213352,-5.517027,-9.757020,9.079350,-9.847159,-8.389534,7.937160,-3.945624,9.049853,4.226302,-1.723488,-5.545237,7.416600,5.358400,4.338170,4.229732,8.316162,-1.211482,7.324739,5.204973,8.165574,-3.299610,1.171498,-8.545217,6.411077,1.259070,2.230929,1.071119,3.837990,5.361898,7.107492,-4.582938,6.848964,1.301321,7.684239,-1.313176,-2.722261,1.662439,1.475477,-1.613072,2.998200,-2.588879,7.502159,-0.483567,-8.772169,-4.235910,-0.910196,-9.975381,0.595576,-3.383015,-5.067908,-1.548512,3.273434,-6.556455,9.214276,9.046923,5.893272,4.099914,-0.788209,3.066066,9.525534,-6.415585,-9.399786,3.577840,-9.643431,-8.900145,-4.650678,3.420355,-0.109720,-0.832872,6.269822,5.645962,3.906517,2.385985,-5.435309,-0.246918,-1.189054,6.753705,3.913771,6.581934,-9.298765,-4.910174,-4.203547,-6.559044,-9.425210,-6.642320,-8.939858,-8.217821,-9.371191,9.985346,-2.144668,-8.968690,7.552322,3.892656,3.114562,-4.560964,1.688357,-5.787560,2.246421,-3.013890,-2.265531,7.486849,-6.641731,-3.220491,3.940834,0.146488,-1.382528,6.340150,6.400794,-9.607976,4.231728,-3.596642,-6.423154,-1.533336,6.247168,0.528622,4.455365,9.795121,-4.405920,-5.057993,6.289919,7.101389,6.746079,2.711265,0.492945,4.164946,1.718780,2.410890,3.369678,6.093276,1.783991,-2.933255,1.248525,-8.208682,2.228786,3.066232,3.825377,-6.217117,6.911809,7.026516,-9.284290,5.827908,0.297066,4.606434,-4.979626,6.964463,5.453756,-3.055951,4.906089,-2.945635,3.696805,-2.229813,-5.469764,-4.854701,-8.167883,-1.152316,-5.774594,-5.149734,2.020449,-9.866067,-5.825602,7.113568,2.530813,-4.867877,-5.498342,-2.708280,1.710145,-3.572487,5.754322,9.332082,5.477845,-4.278097,-6.431523,7.714996,-2.601978,5.004756,0.942714,-8.046675,1.749143,-1.623950,4.003919,9.629913,7.016797,-3.814464,-9.904528,-7.659346,-6.582988,-1.392822,-0.662823,-5.227345,7.123876,9.767497,-4.749297,-8.768611,5.097409,2.612382,7.009106,9.719368,4.195207,0.679303,5.866538,9.919906,4.829622,-5.736125,3.368956,-8.469510,9.443027,7.022298,-9.698946,9.639659,-5.620637,-4.720140,7.542923,-7.101227,-9.733152,8.818876,-5.434685,3.090338,-6.952967,1.571911,-3.794154,-9.621757,7.789820,4.394364,3.270814,8.463283,7.490683,1.450223,7.618940,2.909243,-4.098523,-7.094874,9.245144,-8.873025,0.020421,3.308410,3.534872,6.027439,-5.183856,-3.777030,9.335667,8.805690,-8.772317,-0.410187,0.548227,5.871443,-5.630151,-0.053043,4.249777,7.022542,-8.184207,-2.387287,-8.886947,-7.470754,-5.055033,8.407764,2.770609,-7.144203,5.572773,6.443789,9.314731,-0.367659,-7.138608,5.506305,1.260474,9.351852,-8.035819,-0.704900,9.334030,3.075112,9.918287,-8.648064,6.574849,-6.482875,2.648049,1.198235,-0.778899,-5.449733,-0.275059,-0.693087,-6.388583,9.660936,2.024948,7.927514,2.903228,-7.477066,2.815613,9.134200,-5.866145,-3.742170,6.648426,-9.383965,4.335669,6.635345,-9.229494,-1.622215,4.148840,8.041467,5.098112,9.862672,5.185152,0.421739,-2.915526,-3.765856,9.896046,-1.449013,-6.569493,-2.209196,5.493869,-0.450951,-2.631264,-8.786081,-7.774405,-3.513035,6.146781,-7.542618,-6.471291,3.005265,-8.483079,4.033512,-1.962225,7.991988,-2.401278,8.626992,9.416019,7.601915,-9.559527,6.666566,-0.287474,-0.783801,2.607080,-1.588097,-7.152468,4.074336,9.388970,-0.821071,-7.591884,0.611038,-2.376188,3.455756,-2.542879,1.447010,-9.926785,1.979278,-3.038530,-9.959403,6.993852,5.606805,2.694329,-4.917610,8.436849,-3.275925,-3.116113,-4.596764,-0.624050,-1.297923,2.275373,5.583913,-3.056862,-9.014394], dtype = "float32")#candidate|9435|(672,)|const|float32
call_9433 = relay.TupleGetItem(func_8387_call(relay.reshape(var_9434.astype('float32'), [224,]), relay.reshape(const_9435.astype('float32'), [672,]), ), 9)
call_9436 = relay.TupleGetItem(func_8390_call(relay.reshape(var_9434.astype('float32'), [224,]), relay.reshape(const_9435.astype('float32'), [672,]), ), 9)
output = relay.Tuple([call_9430,call_9433,var_9434,const_9435,])
output2 = relay.Tuple([call_9431,call_9436,var_9434,const_9435,])
func_9445 = relay.Function([var_9434,], output)
mod['func_9445'] = func_9445
mod = relay.transform.InferType()(mod)
mutated_mod['func_9445'] = func_9445
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9446 = relay.var("var_9446", dtype = "float32", shape = (16, 14))#candidate|9446|(16, 14)|var|float32
func_9445_call = mutated_mod.get_global_var('func_9445')
call_9447 = func_9445_call(var_9446)
output = call_9447
func_9448 = relay.Function([var_9446], output)
mutated_mod['func_9448'] = func_9448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7227_call = mod.get_global_var('func_7227')
func_7229_call = mutated_mod.get_global_var('func_7229')
call_9458 = relay.TupleGetItem(func_7227_call(), 0)
call_9459 = relay.TupleGetItem(func_7229_call(), 0)
output = relay.Tuple([call_9458,])
output2 = relay.Tuple([call_9459,])
func_9474 = relay.Function([], output)
mod['func_9474'] = func_9474
mod = relay.transform.InferType()(mod)
mutated_mod['func_9474'] = func_9474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9474_call = mutated_mod.get_global_var('func_9474')
call_9475 = func_9474_call()
output = call_9475
func_9476 = relay.Function([], output)
mutated_mod['func_9476'] = func_9476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8445_call = mod.get_global_var('func_8445')
func_8446_call = mutated_mod.get_global_var('func_8446')
call_9499 = func_8445_call()
call_9500 = func_8445_call()
output = relay.Tuple([call_9499,])
output2 = relay.Tuple([call_9500,])
func_9503 = relay.Function([], output)
mod['func_9503'] = func_9503
mod = relay.transform.InferType()(mod)
mutated_mod['func_9503'] = func_9503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9503_call = mutated_mod.get_global_var('func_9503')
call_9504 = func_9503_call()
output = call_9504
func_9505 = relay.Function([], output)
mutated_mod['func_9505'] = func_9505
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9518 = relay.var("var_9518", dtype = "uint32", shape = (15, 13, 16))#candidate|9518|(15, 13, 16)|var|uint32
var_9519 = relay.var("var_9519", dtype = "uint32", shape = (15, 13, 16))#candidate|9519|(15, 13, 16)|var|uint32
bop_9520 = relay.logical_xor(var_9518.astype('uint32'), relay.reshape(var_9519.astype('uint32'), relay.shape_of(var_9518))) # shape=(15, 13, 16)
output = bop_9520
output2 = bop_9520
func_9523 = relay.Function([var_9518,var_9519,], output)
mod['func_9523'] = func_9523
mod = relay.transform.InferType()(mod)
mutated_mod['func_9523'] = func_9523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9523_call = mutated_mod.get_global_var('func_9523')
var_9525 = relay.var("var_9525", dtype = "uint32", shape = (15, 13, 16))#candidate|9525|(15, 13, 16)|var|uint32
var_9526 = relay.var("var_9526", dtype = "uint32", shape = (15, 13, 16))#candidate|9526|(15, 13, 16)|var|uint32
call_9524 = func_9523_call(var_9525,var_9526,)
output = call_9524
func_9527 = relay.Function([var_9525,var_9526,], output)
mutated_mod['func_9527'] = func_9527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8869_call = mod.get_global_var('func_8869')
func_8871_call = mutated_mod.get_global_var('func_8871')
call_9544 = func_8869_call()
call_9545 = func_8869_call()
output = relay.Tuple([call_9544,])
output2 = relay.Tuple([call_9545,])
func_9552 = relay.Function([], output)
mod['func_9552'] = func_9552
mod = relay.transform.InferType()(mod)
mutated_mod['func_9552'] = func_9552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9552_call = mutated_mod.get_global_var('func_9552')
call_9553 = func_9552_call()
output = call_9553
func_9554 = relay.Function([], output)
mutated_mod['func_9554'] = func_9554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5137_call = mod.get_global_var('func_5137')
func_5139_call = mutated_mod.get_global_var('func_5139')
call_9560 = relay.TupleGetItem(func_5137_call(), 3)
call_9561 = relay.TupleGetItem(func_5139_call(), 3)
output = relay.Tuple([call_9560,])
output2 = relay.Tuple([call_9561,])
func_9565 = relay.Function([], output)
mod['func_9565'] = func_9565
mod = relay.transform.InferType()(mod)
output = func_9565()
func_9566 = relay.Function([], output)
mutated_mod['func_9566'] = func_9566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7176_call = mod.get_global_var('func_7176')
func_7177_call = mutated_mod.get_global_var('func_7177')
call_9598 = relay.TupleGetItem(func_7176_call(), 1)
call_9599 = relay.TupleGetItem(func_7177_call(), 1)
var_9600 = relay.var("var_9600", dtype = "float64", shape = (12, 5, 4))#candidate|9600|(12, 5, 4)|var|float64
bop_9601 = relay.equal(call_9598.astype('bool'), relay.reshape(var_9600.astype('bool'), relay.shape_of(call_9598))) # shape=(12, 5, 4)
bop_9604 = relay.equal(call_9599.astype('bool'), relay.reshape(var_9600.astype('bool'), relay.shape_of(call_9599))) # shape=(12, 5, 4)
output = bop_9601
output2 = bop_9604
func_9609 = relay.Function([var_9600,], output)
mod['func_9609'] = func_9609
mod = relay.transform.InferType()(mod)
var_9610 = relay.var("var_9610", dtype = "float64", shape = (12, 5, 4))#candidate|9610|(12, 5, 4)|var|float64
output = func_9609(var_9610)
func_9611 = relay.Function([var_9610], output)
mutated_mod['func_9611'] = func_9611
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9626 = relay.var("var_9626", dtype = "float32", shape = (4, 6, 2))#candidate|9626|(4, 6, 2)|var|float32
uop_9627 = relay.cosh(var_9626.astype('float32')) # shape=(4, 6, 2)
output = uop_9627
output2 = uop_9627
func_9649 = relay.Function([var_9626,], output)
mod['func_9649'] = func_9649
mod = relay.transform.InferType()(mod)
var_9650 = relay.var("var_9650", dtype = "float32", shape = (4, 6, 2))#candidate|9650|(4, 6, 2)|var|float32
output = func_9649(var_9650)
func_9651 = relay.Function([var_9650], output)
mutated_mod['func_9651'] = func_9651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8467_call = mod.get_global_var('func_8467')
func_8469_call = mutated_mod.get_global_var('func_8469')
call_9676 = relay.TupleGetItem(func_8467_call(), 0)
call_9677 = relay.TupleGetItem(func_8469_call(), 0)
func_8605_call = mod.get_global_var('func_8605')
func_8606_call = mutated_mod.get_global_var('func_8606')
call_9690 = func_8605_call()
call_9691 = func_8605_call()
func_5649_call = mod.get_global_var('func_5649')
func_5650_call = mutated_mod.get_global_var('func_5650')
call_9695 = func_5649_call()
call_9696 = func_5649_call()
func_7176_call = mod.get_global_var('func_7176')
func_7177_call = mutated_mod.get_global_var('func_7177')
call_9731 = relay.TupleGetItem(func_7176_call(), 2)
call_9732 = relay.TupleGetItem(func_7177_call(), 2)
func_8511_call = mod.get_global_var('func_8511')
func_8512_call = mutated_mod.get_global_var('func_8512')
call_9753 = relay.TupleGetItem(func_8511_call(), 0)
call_9754 = relay.TupleGetItem(func_8512_call(), 0)
output = relay.Tuple([call_9676,call_9690,call_9695,call_9731,call_9753,])
output2 = relay.Tuple([call_9677,call_9691,call_9696,call_9732,call_9754,])
func_9757 = relay.Function([], output)
mod['func_9757'] = func_9757
mod = relay.transform.InferType()(mod)
output = func_9757()
func_9758 = relay.Function([], output)
mutated_mod['func_9758'] = func_9758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6528_call = mod.get_global_var('func_6528')
func_6529_call = mutated_mod.get_global_var('func_6529')
call_9808 = func_6528_call()
call_9809 = func_6528_call()
var_9817 = relay.var("var_9817", dtype = "float32", shape = (2, 20))#candidate|9817|(2, 20)|var|float32
bop_9818 = relay.less_equal(call_9808.astype('bool'), relay.reshape(var_9817.astype('bool'), relay.shape_of(call_9808))) # shape=(2, 20)
bop_9821 = relay.less_equal(call_9809.astype('bool'), relay.reshape(var_9817.astype('bool'), relay.shape_of(call_9809))) # shape=(2, 20)
output = bop_9818
output2 = bop_9821
func_9822 = relay.Function([var_9817,], output)
mod['func_9822'] = func_9822
mod = relay.transform.InferType()(mod)
mutated_mod['func_9822'] = func_9822
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9823 = relay.var("var_9823", dtype = "float32", shape = (2, 20))#candidate|9823|(2, 20)|var|float32
func_9822_call = mutated_mod.get_global_var('func_9822')
call_9824 = func_9822_call(var_9823)
output = call_9824
func_9825 = relay.Function([var_9823], output)
mutated_mod['func_9825'] = func_9825
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9862 = relay.const([[[-8.535102,0.407888,-8.701617,-6.823533,9.217712,-9.009112,-5.867556,9.506692,9.805684,8.490436,-6.194161,-9.000912,-1.622319,-7.619602,7.676762,-3.776527],[5.548967,-4.896985,4.207318,-9.500629,3.939744,3.285358,1.999579,4.942665,9.307902,3.653862,7.286449,-9.319618,-9.128013,-7.648938,-1.299109,2.261322],[-5.391840,0.817715,-1.178525,-2.282867,-4.570478,7.755168,-4.121777,-5.748826,-2.983760,-1.951370,7.293465,5.035575,5.508200,4.576334,-9.578321,-4.312464],[-3.763293,-7.682803,5.324361,1.497944,-8.080523,-6.732250,9.103284,-8.413283,-0.449203,6.065169,0.997354,1.715126,-6.320946,-9.977804,-8.016549,5.232263],[8.501558,7.999536,-9.199354,-6.009045,-4.471965,-2.252154,-1.980405,8.960064,2.611589,-8.300229,3.652813,6.328819,4.949753,7.330071,-0.061184,-6.329734],[-2.186525,2.207492,-0.200457,-4.859736,-3.731570,4.557214,4.978454,8.902553,2.942728,-9.470194,-6.497507,8.673015,4.990397,0.669275,9.768435,1.838439],[9.175862,9.513512,8.121250,-8.693588,-6.856089,-3.354171,-9.024261,-1.016954,0.004367,3.436807,-6.870067,0.720460,6.742880,-4.413434,3.316438,-0.163167]],[[-9.690298,-7.320756,8.933503,6.927143,-1.421837,-4.982711,4.275513,5.908379,6.940640,-2.162998,3.552802,9.464009,-9.104467,7.581524,-4.718920,0.371013],[9.671577,-7.739739,-3.597844,-3.753961,1.039252,-6.046866,2.636740,1.575015,-6.380720,9.243883,-7.654518,-5.118516,-5.110408,-9.275145,3.961593,7.804790],[3.318258,-4.946036,1.038715,1.991494,4.967404,3.904153,1.557631,4.065144,6.996492,5.994270,4.898204,-3.380844,2.206737,-7.883725,-2.555930,-2.386503],[8.768919,-1.461572,0.544294,4.208441,0.135498,-7.855292,-8.173847,-2.628216,-9.439293,7.971528,7.925866,6.105218,-6.715240,8.234700,0.218148,-0.093682],[-8.085667,8.222505,-5.577729,-8.162885,3.191860,-1.628742,-6.523638,1.064110,-8.755866,8.158455,8.748545,6.213210,-8.497016,-9.335389,-6.152218,9.645651],[5.341756,-1.202799,8.893807,4.794858,7.764171,-3.972204,-5.334789,-7.002285,-8.038614,-3.292322,-9.293132,7.577023,0.363789,-7.751396,9.637447,-5.430511],[-8.029081,-1.925197,-4.998419,4.837022,-5.168993,0.113302,7.974141,8.685074,2.711846,9.977477,8.324811,1.868449,5.373051,-1.016046,5.669610,5.771058]],[[-3.350583,6.693252,-0.845004,-6.312605,5.777786,1.928114,-1.137355,-6.001147,3.487995,4.108254,1.057233,3.676224,6.347311,1.773214,-4.530433,-3.297337],[-5.711555,6.164054,-3.016435,0.598764,-1.432325,2.765685,-1.960003,-8.314541,8.460171,-1.095172,-8.962744,9.090312,-6.844204,-9.585040,-3.265497,9.303765],[5.721248,2.033896,-9.180744,2.385159,4.674786,7.194981,-4.673795,4.002565,-5.253710,-1.643546,6.666809,-3.350167,-4.714146,7.409000,2.961429,-9.453518],[2.687924,2.304885,-8.626130,-9.055632,3.225023,6.790381,-1.810353,9.567510,0.755466,6.029179,-1.089978,-3.260733,4.375377,2.509411,-9.919223,2.376065],[1.285877,9.063385,5.783465,6.326926,-0.137913,-2.037776,-4.238636,4.152865,-1.733003,-9.443314,-4.341925,6.347743,-1.856309,-2.089560,-9.145286,2.322341],[-2.042287,-6.881582,-4.818240,-7.522676,-7.202633,5.244398,9.870541,-0.328542,-4.117897,-7.658314,9.327423,-2.441404,-7.678844,-9.721143,-5.949735,-9.225158],[1.806463,-7.836417,-2.476944,-7.473417,2.131698,9.820316,-8.579721,-1.876304,1.702857,3.922262,7.059433,-7.839435,-1.209019,-1.412373,-3.276233,-1.051017]],[[3.695155,-5.234830,5.668619,0.454336,-0.390675,1.733768,-2.011662,3.807916,-8.702574,3.518354,-9.773667,3.336337,-8.356724,9.593193,-4.919457,-4.739650],[-3.141382,-2.463331,0.659255,9.846314,-9.429295,-8.159920,-8.984351,-9.389427,-0.229318,-7.748883,-5.768453,-4.165776,-0.832209,4.951691,5.081170,-1.824223],[-1.740287,3.098530,-6.657741,-1.093358,-6.883371,-7.918973,-0.273156,2.410270,-7.822875,-8.351060,-0.223068,4.082031,-6.686486,4.540927,1.341759,-6.490876],[-3.223976,3.049600,-7.265863,-5.944711,2.492275,3.720788,3.085911,-2.334470,4.184220,-3.270092,9.108848,-7.043804,4.854558,5.489144,0.369025,-8.290022],[-7.304845,6.485964,1.424258,6.008293,-3.317017,3.952421,1.076548,2.921348,-2.632805,-7.696750,0.332943,4.411369,6.757044,1.732939,-0.220356,-5.142396],[-9.823461,0.439882,2.032498,-7.000825,-2.698248,-5.668370,9.220904,-2.335178,8.619443,-7.710134,0.900612,0.324836,-3.758653,4.586860,0.183935,7.300893],[0.477399,2.515283,7.101972,-4.896888,7.019951,-8.549827,-1.019137,-6.574857,0.952296,1.768826,3.551869,8.649116,0.373944,-2.867607,1.269525,-3.401963]],[[4.017309,2.316377,1.418897,-4.065676,-8.637486,-2.337119,6.677753,8.005795,4.707355,2.906417,0.242000,-1.793483,7.745485,5.763464,7.211080,-9.121982],[-0.620147,9.150447,7.962588,-8.734916,-6.245120,5.960335,-2.181110,3.068471,3.753165,-4.388302,7.579169,6.838551,5.046611,5.874929,3.798194,1.594553],[-5.694580,2.864238,-3.818374,0.484199,-8.758782,-7.217516,7.842338,-0.638009,-6.750585,-7.635710,-4.048098,3.267303,-4.559344,-6.472811,-6.740559,3.227914],[-3.022679,-9.604952,3.722525,-1.494599,-1.224364,-0.159487,-6.694143,-0.868823,0.829133,-5.627876,8.369272,4.470347,1.397563,3.359933,-7.965132,-9.605769],[9.741148,8.721832,-3.492010,5.076752,4.297489,7.025282,-9.527779,-7.368211,-3.224866,4.153332,-9.983689,8.918228,-4.288939,8.150094,-2.527836,-5.849158],[1.926255,-2.175427,7.642292,-4.792785,0.667679,-6.913600,-9.921033,9.662560,0.339907,-4.023234,8.423757,6.998914,-8.887130,-9.706324,-5.801328,-9.365524],[9.412113,-9.763556,-3.015740,5.445985,-4.252838,-0.033140,-7.800160,5.134426,-3.387214,-8.865391,6.294085,-9.913644,-0.313187,-0.834981,7.851879,-1.959411]],[[2.445446,5.817728,-2.871105,4.408364,-8.284799,8.767009,1.821313,-2.523793,-7.866655,-2.267041,4.025558,7.099973,6.593755,-6.765638,-9.854118,4.058551],[2.012962,-1.729218,7.230688,-9.502458,2.269555,1.038632,-1.976270,-4.235401,-8.909120,6.935812,6.893955,1.295816,-4.524163,6.107759,9.199682,4.550281],[3.339997,-9.090267,2.865078,-3.502476,-3.923376,-2.477762,-5.761113,3.654408,8.034072,-8.752100,9.566271,1.233359,2.112572,-1.279948,-4.948446,-7.058980],[0.625061,-3.076740,4.973501,4.886358,-7.752517,0.671440,1.440814,9.783073,8.550805,8.037521,-7.472336,-7.223358,-3.814920,-6.031310,-4.727379,-4.364117],[7.827703,7.452391,-6.562676,-7.425004,-8.290834,1.444594,-5.328293,-8.973422,-5.399144,-1.217599,-2.794745,-7.455862,7.655011,8.607925,0.615229,-2.711327],[8.588959,-0.248631,-5.078323,-0.510129,-7.457747,-7.918452,1.612013,-2.918486,6.390938,-3.523030,0.285059,-9.546880,0.162244,1.751188,9.025149,5.933697],[4.764233,-7.805246,-3.427981,-5.238203,-7.827479,4.685711,5.250701,0.373771,-8.980720,-9.612534,5.375102,-2.372667,7.535223,3.793383,3.825385,1.469182]],[[-7.889558,3.578476,-7.402713,6.744692,-3.159561,-7.594836,-1.819405,-7.651981,3.768958,3.045691,7.180773,6.933807,3.050544,-7.159474,8.346137,2.398340],[9.041831,-5.870996,-8.123482,3.586414,-1.605108,-3.145870,5.988719,6.224427,2.888958,0.814433,3.425971,5.762941,-6.554795,7.232197,1.080271,2.222452],[2.282258,3.900081,-8.573290,6.516820,-1.970895,2.466438,-9.041748,4.772082,9.237059,2.229497,6.028631,3.229893,-6.516273,-5.562122,1.470633,-2.642934],[8.936512,-9.216834,-5.033481,6.907452,6.243466,3.675432,3.027399,-3.323810,3.778415,4.194698,-8.114026,-9.910561,-2.363086,0.995296,7.936177,-5.203658],[0.458150,-3.691218,-3.915915,-5.290274,-7.626896,-3.904160,-1.093591,4.653958,-2.644902,8.107699,4.156718,8.260608,-5.199193,-5.464066,-7.067257,-7.441801],[1.854018,-6.198238,-8.820364,-7.581681,-2.788147,0.437987,4.602693,-2.262660,3.823072,-7.637781,-5.259603,-3.897223,-9.895772,-4.192690,-3.549246,-5.127106],[7.328957,1.573666,-6.742397,-7.077140,-7.587036,4.560702,-8.666892,7.524798,8.100805,9.319180,8.789514,-9.874872,-0.208262,7.360765,-8.902678,-7.350294]],[[-1.408064,7.031794,9.401874,5.762956,6.413271,7.358128,-0.038588,-1.108064,0.875515,9.522012,3.587675,-0.172225,-1.647970,-7.289156,-6.103889,-7.762381],[7.456725,4.024206,-0.014599,-8.733816,7.403507,2.554865,9.907873,-2.742834,7.310383,7.504728,7.318949,-3.531157,0.544553,-4.257990,-5.312762,-5.212546],[8.192101,-9.232934,-8.186858,6.117548,4.933815,-2.479141,-3.881032,7.272122,-7.721720,5.234698,-8.278138,-6.566899,-3.508217,3.450819,0.174766,-9.317123],[6.361452,-2.853941,-8.859444,-9.212459,0.077933,-1.362336,9.131823,3.015869,-1.440813,8.145135,8.336969,7.727512,9.157831,-3.609700,-3.980649,8.502099],[8.587997,-3.143143,2.212367,2.503383,4.613409,5.185238,0.161350,-7.090218,4.240132,5.839846,9.385206,-2.051470,6.556034,-4.554579,-1.030149,-6.994662],[2.398318,2.439894,9.999285,3.931859,-0.502973,5.089932,-7.952493,5.510344,4.887780,-2.467028,2.271052,2.056809,9.313410,7.506157,8.889171,5.593989],[-5.565331,-1.924396,-6.663752,-4.096990,-4.385815,-5.545863,3.483554,-8.889197,-4.483483,-7.443158,1.824233,9.463875,2.258090,-9.931309,-2.210336,6.986342]],[[-3.639230,-8.394257,-7.215833,0.987176,-3.067599,3.528059,-7.605500,-3.337848,-3.468973,-3.202335,6.469360,-6.166471,-5.742580,0.371969,-6.170947,8.091188],[-1.783440,7.572185,-8.282570,7.084292,8.627850,9.457756,-4.159486,-2.528901,-2.744780,4.925742,-3.390292,-4.075293,-1.387476,3.571500,-1.702517,-4.561166],[-2.691949,3.714987,-3.107388,6.398040,4.372141,2.112561,9.254086,-5.956583,0.212956,4.532468,5.806304,-0.025755,7.369536,9.928969,4.153305,3.101933],[9.025522,-7.771936,4.127509,1.052155,-6.069275,4.692814,2.733648,1.903373,5.009624,-6.802352,-9.282188,-1.607128,2.785499,-2.254388,0.122554,-3.189643],[-9.396463,2.540333,5.307057,0.178166,0.785854,2.174545,-4.346557,9.667040,3.548985,8.893840,2.025585,9.879004,2.498680,0.885632,9.529869,7.415062],[-8.626169,-7.201955,-4.435801,-0.393356,-0.124424,-3.936409,-8.889827,-9.987123,4.818500,-7.700758,2.811125,1.468546,4.877119,-1.467312,4.814760,-6.745981],[-0.221800,8.995748,-0.029470,-2.663086,0.534927,-9.829392,3.202256,5.199492,-6.686148,7.611181,5.632567,-7.467647,0.208377,-6.640052,-1.421918,-2.277620]],[[2.375939,0.437497,2.495962,-4.115642,-1.020398,5.292602,3.834466,3.187307,-5.837261,3.191787,6.579740,-0.533718,-4.172642,3.245655,0.081934,5.884874],[3.898651,4.024602,4.959076,2.191851,-5.203464,3.450921,2.854213,0.432964,7.806001,-2.087279,-6.532227,8.651355,2.742765,0.483233,-5.308825,0.077294],[-0.952335,6.600843,-1.922351,9.310262,4.583623,-0.734888,7.099033,-0.237754,-1.370562,-2.749560,9.836876,-8.785407,-4.316065,5.713878,-7.270447,3.187492],[6.395292,-6.596321,0.579306,-5.568552,-8.943067,-6.154147,-0.120850,-4.308813,0.530081,5.235775,-4.526994,7.842122,-5.841301,-9.308946,3.511491,4.516796],[-6.851849,-5.735549,7.753667,-7.056666,6.367431,-1.883579,9.781069,-1.050790,1.968056,6.650449,7.241552,-0.861120,4.266509,8.478248,-6.049242,-2.636071],[-3.033946,9.111155,9.382643,-7.992511,-1.230572,8.966777,0.729987,-0.922485,0.862696,6.108242,-7.117043,-2.607260,-8.364700,-9.952276,-4.326849,1.319429],[6.082537,3.524192,-9.193148,3.462701,-1.868601,-2.503326,-7.455385,-2.104160,-4.723988,2.884964,7.955058,-8.791546,1.237008,7.584756,4.256498,-9.340592]]], dtype = "float64")#candidate|9862|(10, 7, 16)|const|float64
uop_9863 = relay.cosh(const_9862.astype('float64')) # shape=(10, 7, 16)
output = uop_9863
output2 = uop_9863
func_9865 = relay.Function([], output)
mod['func_9865'] = func_9865
mod = relay.transform.InferType()(mod)
output = func_9865()
func_9866 = relay.Function([], output)
mutated_mod['func_9866'] = func_9866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9503_call = mod.get_global_var('func_9503')
func_9505_call = mutated_mod.get_global_var('func_9505')
call_9869 = relay.TupleGetItem(func_9503_call(), 0)
call_9870 = relay.TupleGetItem(func_9505_call(), 0)
var_9881 = relay.var("var_9881", dtype = "float32", shape = (2, 20))#candidate|9881|(2, 20)|var|float32
bop_9882 = relay.add(call_9869.astype('int32'), relay.reshape(var_9881.astype('int32'), relay.shape_of(call_9869))) # shape=(2, 20)
bop_9885 = relay.add(call_9870.astype('int32'), relay.reshape(var_9881.astype('int32'), relay.shape_of(call_9870))) # shape=(2, 20)
output = bop_9882
output2 = bop_9885
func_9896 = relay.Function([var_9881,], output)
mod['func_9896'] = func_9896
mod = relay.transform.InferType()(mod)
mutated_mod['func_9896'] = func_9896
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9897 = relay.var("var_9897", dtype = "float32", shape = (2, 20))#candidate|9897|(2, 20)|var|float32
func_9896_call = mutated_mod.get_global_var('func_9896')
call_9898 = func_9896_call(var_9897)
output = call_9898
func_9899 = relay.Function([var_9897], output)
mutated_mod['func_9899'] = func_9899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5159_call = mod.get_global_var('func_5159')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_9901 = relay.TupleGetItem(func_5159_call(), 0)
call_9902 = relay.TupleGetItem(func_5161_call(), 0)
uop_9911 = relay.sin(call_9901.astype('float32')) # shape=(2, 20)
uop_9913 = relay.sin(call_9902.astype('float32')) # shape=(2, 20)
bop_9931 = relay.logical_xor(call_9901.astype('int64'), relay.reshape(uop_9911.astype('int64'), relay.shape_of(call_9901))) # shape=(2, 20)
bop_9934 = relay.logical_xor(call_9902.astype('int64'), relay.reshape(uop_9913.astype('int64'), relay.shape_of(call_9902))) # shape=(2, 20)
func_8331_call = mod.get_global_var('func_8331')
func_8332_call = mutated_mod.get_global_var('func_8332')
call_9935 = relay.TupleGetItem(func_8331_call(), 0)
call_9936 = relay.TupleGetItem(func_8332_call(), 0)
func_5856_call = mod.get_global_var('func_5856')
func_5858_call = mutated_mod.get_global_var('func_5858')
call_9940 = relay.TupleGetItem(func_5856_call(), 0)
call_9941 = relay.TupleGetItem(func_5858_call(), 0)
func_7949_call = mod.get_global_var('func_7949')
func_7952_call = mutated_mod.get_global_var('func_7952')
call_9943 = func_7949_call(relay.reshape(call_9935.astype('float32'), [2, 20]))
call_9944 = func_7949_call(relay.reshape(call_9935.astype('float32'), [2, 20]))
uop_9945 = relay.asinh(call_9943.astype('float64')) # shape=(2, 20)
uop_9947 = relay.asinh(call_9944.astype('float64')) # shape=(2, 20)
func_3266_call = mod.get_global_var('func_3266')
func_3269_call = mutated_mod.get_global_var('func_3269')
call_9948 = func_3266_call(relay.reshape(call_9940.astype('float64'), [11, 3, 14]))
call_9949 = func_3266_call(relay.reshape(call_9940.astype('float64'), [11, 3, 14]))
output = relay.Tuple([bop_9931,call_9935,call_9940,uop_9945,call_9948,])
output2 = relay.Tuple([bop_9934,call_9936,call_9941,uop_9947,call_9949,])
func_9952 = relay.Function([], output)
mod['func_9952'] = func_9952
mod = relay.transform.InferType()(mod)
mutated_mod['func_9952'] = func_9952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9952_call = mutated_mod.get_global_var('func_9952')
call_9953 = func_9952_call()
output = call_9953
func_9954 = relay.Function([], output)
mutated_mod['func_9954'] = func_9954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8911_call = mod.get_global_var('func_8911')
func_8913_call = mutated_mod.get_global_var('func_8913')
call_9958 = func_8911_call()
call_9959 = func_8911_call()
func_9352_call = mod.get_global_var('func_9352')
func_9353_call = mutated_mod.get_global_var('func_9353')
call_9967 = func_9352_call()
call_9968 = func_9352_call()
func_8975_call = mod.get_global_var('func_8975')
func_8977_call = mutated_mod.get_global_var('func_8977')
call_9984 = relay.TupleGetItem(func_8975_call(relay.reshape(call_9967.astype('float64'), [12, 5, 4])), 1)
call_9985 = relay.TupleGetItem(func_8977_call(relay.reshape(call_9967.astype('float64'), [12, 5, 4])), 1)
uop_9989 = relay.atanh(call_9984.astype('float64')) # shape=(12, 5, 4)
uop_9991 = relay.atanh(call_9985.astype('float64')) # shape=(12, 5, 4)
output = relay.Tuple([call_9958,call_9967,uop_9989,])
output2 = relay.Tuple([call_9959,call_9968,uop_9991,])
func_9993 = relay.Function([], output)
mod['func_9993'] = func_9993
mod = relay.transform.InferType()(mod)
output = func_9993()
func_9994 = relay.Function([], output)
mutated_mod['func_9994'] = func_9994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9323_call = mod.get_global_var('func_9323')
func_9324_call = mutated_mod.get_global_var('func_9324')
call_10007 = relay.TupleGetItem(func_9323_call(), 0)
call_10008 = relay.TupleGetItem(func_9324_call(), 0)
var_10016 = relay.var("var_10016", dtype = "float32", shape = (2, 20))#candidate|10016|(2, 20)|var|float32
bop_10017 = relay.subtract(call_10007.astype('uint16'), relay.reshape(var_10016.astype('uint16'), relay.shape_of(call_10007))) # shape=(2, 20)
bop_10020 = relay.subtract(call_10008.astype('uint16'), relay.reshape(var_10016.astype('uint16'), relay.shape_of(call_10008))) # shape=(2, 20)
func_1031_call = mod.get_global_var('func_1031')
func_1034_call = mutated_mod.get_global_var('func_1034')
var_10041 = relay.var("var_10041", dtype = "float32", shape = (672,))#candidate|10041|(672,)|var|float32
call_10040 = func_1031_call(relay.reshape(var_10041.astype('float32'), [6, 16, 7]))
call_10042 = func_1031_call(relay.reshape(var_10041.astype('float32'), [6, 16, 7]))
var_10048 = relay.var("var_10048", dtype = "float32", shape = (2, 20))#candidate|10048|(2, 20)|var|float32
bop_10049 = relay.multiply(var_10016.astype('int32'), relay.reshape(var_10048.astype('int32'), relay.shape_of(var_10016))) # shape=(2, 20)
bop_10054 = relay.greater(call_10040.astype('bool'), relay.reshape(var_10041.astype('bool'), relay.shape_of(call_10040))) # shape=(6, 16, 7)
bop_10057 = relay.greater(call_10042.astype('bool'), relay.reshape(var_10041.astype('bool'), relay.shape_of(call_10042))) # shape=(6, 16, 7)
bop_10062 = relay.logical_or(call_10007.astype('bool'), relay.reshape(var_10016.astype('bool'), relay.shape_of(call_10007))) # shape=(2, 20)
bop_10065 = relay.logical_or(call_10008.astype('bool'), relay.reshape(var_10016.astype('bool'), relay.shape_of(call_10008))) # shape=(2, 20)
output = relay.Tuple([bop_10017,bop_10049,bop_10054,bop_10062,])
output2 = relay.Tuple([bop_10020,bop_10049,bop_10057,bop_10065,])
func_10076 = relay.Function([var_10016,var_10041,var_10048,], output)
mod['func_10076'] = func_10076
mod = relay.transform.InferType()(mod)
var_10077 = relay.var("var_10077", dtype = "float32", shape = (2, 20))#candidate|10077|(2, 20)|var|float32
var_10078 = relay.var("var_10078", dtype = "float32", shape = (672,))#candidate|10078|(672,)|var|float32
var_10079 = relay.var("var_10079", dtype = "float32", shape = (2, 20))#candidate|10079|(2, 20)|var|float32
output = func_10076(var_10077,var_10078,var_10079,)
func_10080 = relay.Function([var_10077,var_10078,var_10079,], output)
mutated_mod['func_10080'] = func_10080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5430_call = mod.get_global_var('func_5430')
func_5432_call = mutated_mod.get_global_var('func_5432')
call_10099 = relay.TupleGetItem(func_5430_call(), 1)
call_10100 = relay.TupleGetItem(func_5432_call(), 1)
func_8712_call = mod.get_global_var('func_8712')
func_8713_call = mutated_mod.get_global_var('func_8713')
call_10106 = func_8712_call()
call_10107 = func_8712_call()
var_10112 = relay.var("var_10112", dtype = "float64", shape = (12, 5, 4))#candidate|10112|(12, 5, 4)|var|float64
bop_10113 = relay.multiply(call_10106.astype('float64'), relay.reshape(var_10112.astype('float64'), relay.shape_of(call_10106))) # shape=(12, 5, 4)
bop_10116 = relay.multiply(call_10107.astype('float64'), relay.reshape(var_10112.astype('float64'), relay.shape_of(call_10107))) # shape=(12, 5, 4)
bop_10120 = relay.less_equal(var_10112.astype('bool'), relay.reshape(call_10106.astype('bool'), relay.shape_of(var_10112))) # shape=(12, 5, 4)
bop_10123 = relay.less_equal(var_10112.astype('bool'), relay.reshape(call_10107.astype('bool'), relay.shape_of(var_10112))) # shape=(12, 5, 4)
func_9171_call = mod.get_global_var('func_9171')
func_9173_call = mutated_mod.get_global_var('func_9173')
const_10159 = relay.const([4.528933,-2.628446,7.000230,-4.847703,-9.353024,-8.323988,-9.096987,-1.764409,-3.233511,4.642797,-5.917425,8.023920,-9.919129,4.209617,-4.299826,-0.644577,0.963891,-3.550138,-6.562119,-1.083483,-0.554475,-1.217763,0.634441,8.605779,0.729248,-1.601477,-3.159987,-6.922430,0.969318,-0.207308,6.744925,3.511575,-3.947467,-2.346755,-3.699659,1.879735,1.015743,-1.560470,-3.652916,-9.153438,-9.904458,5.591413,-8.813362,-1.528401,1.251112,2.935719,7.052381,-8.408647,-8.133458,-7.022343,1.174222,-3.768738,-9.783710,6.111394,-2.449615,-2.550207,8.386018,-2.880695,9.549822,8.613381,8.750367,-4.577108,-4.583615,-0.682668,7.643954,9.642765,-2.295182,7.954997,-7.884968,4.883458,-4.258142,-2.416451,6.051120,7.458848,5.351251,-6.722591,-5.986429,7.131401,4.345036,7.602809,-9.089939,8.011807,-4.163988,8.361734,9.391110,-9.524436,1.887631,0.128594,3.114603,4.670357,-5.208487,6.448190,-5.515509,0.540423,6.788242,-9.058935,0.157757,-5.743764,-5.593417,3.827856,1.025044,0.692685,-8.459298,4.395996,-1.442062,-1.169785,-3.937849,5.351909,-1.310076,-4.584253,8.139332,4.534505,-9.301889,8.788360,-5.666224,7.612263,-5.977532,-4.757079,3.532552,-0.961247,-9.293314,-2.148990,-5.715497,-9.943539,-7.958490,-7.994608,4.404574,0.405065,-5.863257,8.817965,8.802038,-8.974480,6.903273,-2.896261,-0.624313,-0.323487,6.037016,-7.907988,-4.037014,-1.890040,8.847079,1.394590,-8.645778,3.086896,1.248170,7.304815,7.805290,-7.284871,-0.660388,7.012242,1.671198,-3.471832,7.466045,-8.696091,3.072054,-1.498282,-0.267689,9.086636,-2.605167,6.540900,5.027420,-4.128086,-4.771779,-6.980865,6.600154,4.891199,5.506808,2.875678,-9.417398,2.121318,-6.155146,2.983712,2.282260,-5.515399,8.586676,4.865256,-2.638447,3.560426,-2.825535,-8.183484,9.247718,-4.980848,9.945048,6.526427,3.485892,3.015770,9.249840,-5.217640,3.599922,-9.413016,-8.705205,-9.946688,-6.845518,1.505250,0.730048,-9.296075,-6.404151,6.045264,6.763455,4.334318,0.062903,-5.550150,8.656783,0.912417,9.015356,4.432927,3.814483,0.793503,2.861094,-2.035500,-9.218167,-5.125980,1.061788,-6.996697,-7.613538,-0.132103,-0.711792,-7.534235,3.417286,-7.321451,-8.683692,1.648411,1.329790,8.429173,4.262788,4.413231,-3.017838,-2.082846,-0.087250,-1.337163,7.268271,-7.957271,-5.200548,2.336203,5.397373,-6.010764,-4.408373,6.442674,-3.493928,-9.826600,1.161699,7.980874,0.058297,8.285288,-3.448326,3.420489,-1.636748,7.889121,-3.307459,0.826051,7.821421,8.688971,2.647716,3.968673,1.667171,4.994333,-4.424952,1.646389,0.593921,6.768719,-7.600754,0.209595,-0.379236,9.939092,0.284273,-3.003553,6.630824,-7.540926,0.959019,-2.552859,-2.556945,5.834490,9.718331,-5.023324,1.391962,-7.575774,-1.683033,1.383365,8.986234,-6.573340,2.422625,1.306181,-5.232130,1.601768,8.859869,6.615701,9.289514,-5.589985,0.935042,0.108853,-0.627334,-7.021356,5.982099,-4.637012,7.116040,-3.092559,8.427431,0.088659,0.762822,6.633762,-5.846844,-1.129312,1.472652,-4.141960,-7.415872,-3.486745,-7.357956,6.399975,-5.876481,-2.566870,-7.624737,-5.342715,-3.229568,-3.450302,-4.564928,-2.074094,-9.965445,-4.548059,-5.455790,-2.925991,9.960061,4.168765,5.899407,8.831407,-2.663037,5.124218,-0.508669,4.644267,7.075329,0.805847,6.501871,1.800601,-0.980353,-7.747418,-8.911770,3.152460,0.908907,2.409561,-6.654360,-7.544843,-1.412176,1.328559,2.498947,7.900437,-1.571535,-9.628921,6.976510,7.061235,6.060607,-7.208091,-9.573524,2.524797,-8.478385,8.629167,-5.246614,-0.398760,7.850514,9.206365,-0.484917,-5.287065,1.767999,-7.265540,-7.703130,0.099509,5.521012,5.661282,6.520041,9.576551,-5.649626,-9.360034,-8.975166,2.859986,7.375224,-0.608072,-6.612932,-9.440413,4.309619,-3.678969,6.079113,-1.817940,1.160536,-7.088680,-2.696642,-1.148066,-7.942559,7.416447,2.211296,3.841001,-1.929369,-0.090615,-3.117262,-2.538791,-2.873106,1.089848,-4.310590,-1.205079,5.907667,1.458862,1.951656,-2.853612,-2.734391,-3.905725,3.468414,-1.695115,-9.996253,-5.453374,-1.367519,-2.226848,4.660513,-0.178959,7.226709,6.160832,0.688976,7.779620,-6.134287,7.282798,8.628149,8.758617,9.286948,-5.589589,-2.487113,-3.124108,-4.236745,1.719726,-8.190578,1.825520,8.977289,-3.354998,5.363862,2.360446,-9.525622,6.770678,-6.855748,-3.810308,-0.458122,5.316950,5.151784,1.936560,4.762840,6.150326,-4.841227,0.290358,9.238088,9.813515,9.185909,-5.704899,3.113938,-1.018179,-6.396706,7.570072,2.636181,-1.385055,-6.271488,-5.702382,-6.354256,3.519535,1.476151,-9.076590,-3.440846,8.656358,-2.791569,1.361984,6.126125,-8.546983,-6.799261,2.956674,-4.536190,-8.566028,1.727944,-5.395860,-2.131919,8.940018,4.562416,-2.347875,2.976722,4.650099,-8.665868,3.666572,-6.000778,3.321216,6.131034,0.807493,-9.658003,-4.712972,-7.959398,-2.529378,-7.601973,-9.858255,3.448602,8.287972,0.745453,0.068894,-7.729841,3.561049,-2.544849,7.373124,2.229057,2.461691,3.262824,-4.780173,2.971289,-9.205550,-4.074125,4.267536,-5.280704,-0.427446,2.763602,6.527462,-6.713665,7.300877,9.705169,-8.568868,0.457906,1.789487,6.427689,-9.805196,-3.723749,-5.314965,-8.738077,-8.707070,-9.509452,-3.186671,-1.061397,2.135661,-5.077146,5.162554,-7.525785,1.850018,-3.614457,-3.823857,-2.961980,-1.499677,0.597319,8.072654,-5.436767,-0.811250,-4.835565,-3.995781,-0.310517,6.957381,-1.971468,3.683160,-6.094166,-7.198872,4.453726,-8.377494,-4.196128,-7.183491,1.953999,1.201711,9.854541,-7.652729,-3.282382,0.824245,5.408876,6.372531,3.882698,-9.383657,3.811715,-5.521231,5.858046,-6.325840,5.295442,6.130022,-6.960947,-6.140537,5.095907,5.536755,-4.559433,-5.651869,8.075323,9.112908,-2.417116,-6.529586,6.739218,-6.823405,2.484705,-7.986316,8.917014,4.562602,-4.368526,-4.957661,7.511914,2.480312,-6.827708,8.554813,4.523062,-9.138949,-0.987563,-2.710978,-0.467419,-3.903363,1.977847,-4.861420,-5.892872,2.088796,-1.695606,-7.931305,4.650403,1.198890,-4.898361,-6.305409,3.626084,6.404116,2.930273,0.503586,7.317320,-5.683397,-0.005538,9.153902,-3.374645,7.338874,-3.827312,-0.187102,6.619112,8.364609,-7.384727,-8.562406,4.203429,2.994485,2.906178,-5.374340,-1.426958,4.544123,6.418395,-8.533201,2.631817,-3.669549,5.202851,-8.682241,-2.410528,-1.921473,1.825784,8.021756,3.737519,1.416806,1.702715,7.141514,-3.410070,9.022406,5.320359,-5.912749,9.049354,8.424975,5.890500,-1.485788,6.024911,0.154523,2.225207,6.978943,8.713964,5.401310,-4.122540,7.021786,8.029399,4.505328,-5.687386,-9.220623,-6.622696,-2.105909,4.898478,-1.455594,-8.984201,7.082510,-3.052198,-6.233086,5.919959,-6.335438,-5.235012,9.675898,-1.140806,-9.663147,-6.648188,0.792083,-5.756712,-2.026813,-6.528160,5.910147,-4.491768,-0.895496,5.268270,7.878797,-4.703859,8.341796,0.170785,-1.682385,2.889025,-2.767403,1.568885,-5.959429,1.973291,6.447647,1.734382,-6.834081,6.235970,-0.891830,2.965293,-5.835650,-3.378305,-9.812678,-8.971101,9.421755,-8.258221,9.806649,9.387715,6.438767,-0.475488,-3.158550,2.120282,-3.600718,1.766353,-2.554950,-3.822420,-9.165789,-5.500781,-1.408903,-0.207638,-8.746721,2.312342,-1.594294,9.028178,7.530024,4.038542,-4.861572,9.857566,4.879250,2.897697,1.426061,-4.172706,-5.238399,0.230493,8.314672,0.122245,-4.172749,6.893542,2.863119,-7.423472,8.489007,4.853348,6.140286,-6.514419,4.441725,-7.214934,2.601210,2.725065,1.795388,-3.993804,-1.247910,-6.043413,-7.464928,9.536829,-2.384609,-8.540355,9.478939,7.739909,-3.208813,-2.752417,-5.900275,2.080246,1.873118,8.879419,1.764685,-5.531186,7.111802,-4.784738,-8.801193,-1.071706,5.451786,-9.901974,-4.376978,7.430737,3.547820,-6.995360,-9.952253,1.146516,-3.761789,-1.480521,-1.493511,9.763179,5.736585,6.792426,-4.930210,4.674437,1.381553,-4.268661,8.548558,-4.689030,8.279642,-5.192900,-3.426210,-3.725047,0.382841,-6.362270,1.344594,4.236940,9.146829,-6.092558,-5.792736,-5.395909,-0.370529,6.792869,-6.094068,-0.390385,3.036214,-9.084111,1.066832,-1.023558,5.897865,-7.689587,5.856235,-9.471268,2.959049,-6.258138,-2.889974,7.662702,0.588681,-4.831311,-8.862325,-6.707845,-4.209812,-4.131965,9.200900,-5.959348,2.567031,0.187758,-7.517700,-4.278204,-1.909949,-2.790142,8.945316,5.646965,-0.217479,-8.671347,5.437307,-3.430737,4.394738,4.634293,-1.227146,-9.585812,-3.011425,-0.944015,2.606988,-3.833220,7.488726,-3.350632,-9.467076,3.144684,1.491221,-9.296946,-3.909499,-9.993475,8.295101,-5.179609,3.806635,5.724559,-7.165998,4.617013,-3.714572,-7.159385,-3.720014,-5.127005,-5.812693,0.505588,-1.907602,-6.856574,9.033574,-4.021839,-8.853002,-1.104924,5.773897,-9.151481,8.552359,2.905486,1.280945,8.172969,-3.299900,0.006762,0.904299,3.685890,-6.043068,8.812155,-3.169347,-2.679831,-3.778983,7.947433,-3.858583,-8.838451,5.758199,-0.640257,9.474477,-1.293217,7.193672,-9.581598,-1.320958,-6.292596,-6.038477,-3.125146,-8.144856,0.639885,9.493453,-7.893948,-7.221403,7.926997,8.030097,4.888667,6.886130,-9.677337,4.208766,-3.140392,-6.474858,-0.654579,-2.273469,-7.284356,8.415086,1.036516,-9.045900,-0.892004,-9.193594,-3.719939,0.003981,-4.103518,7.417147,-4.436824,-3.100836,-0.633208,0.789502,5.840009,-7.732304,-7.607132,4.962094,-2.331016,-8.356887,0.781757,1.785998,-0.213047,7.835620,9.859494,9.684245,2.533860,-8.860932,0.759550,-5.052248,5.176357,-8.865960,-5.159809,-3.297544,8.131365,0.929939,9.759655,-2.624004,-7.388031,2.506289,-5.894449,0.507800,-2.330676,1.687244,0.186843,-2.581489,-6.042597,4.170440,-3.957437,-6.303355,-9.440298,-3.196603,-2.970406,3.980131,-0.192685,-1.404871,5.197501,-7.466498,-8.110901,0.761572,6.142742,-5.176902,-4.332706,-9.124163,9.937551,-3.812156,0.392490,-9.150391,1.689873,-7.782203,-9.936965,-9.050570,-9.863765,3.147913,7.847948,-9.257574,-9.487949,-3.167208,-6.978626,9.594138,6.451198,5.398987,8.779353,-4.236106,9.189359,-3.957900,-2.872607,-0.580526,-6.511811,6.071071,-6.093592,-7.825587,-2.159684,-0.153080,-1.076906,4.928059,4.555842,-6.167370,-9.439256,-9.885596,1.580708,7.889318,2.807658,-9.816042,0.579515,9.089782,2.199845,-3.906768,4.545356,7.965051,-4.604922,9.910434,2.481876,-2.590409,0.833895,-5.692952,-1.968097,-1.537013,8.842325,7.584987,-7.155461,-5.101658,-6.055170,1.646888,1.057290,5.610373,1.477436,-2.794244,-1.963519,-4.945089,9.970337,-6.057318,-4.700699,2.909509,9.738744,-6.240120,-8.695418,-2.970046,8.393152,-8.744671,-5.174696,1.605515,-8.770822,-9.862341,-4.445026,-2.627688,3.253836,8.966140,0.463918,5.859366,4.843820,-4.402681,5.647443,4.230809,6.186286,3.266738,2.378912,5.983859,-6.353814,0.559192,4.661062,-5.394534,-2.416881,-6.012497,7.318386,4.247369,-4.907571,-5.650244,-3.492066,-0.158475,1.174641,5.564723,-9.722021,-1.239541,-7.266225,-9.388052,-5.905965,0.363760,-1.437809,-8.690060,4.270943,4.903879,-8.356202,3.588605,0.940115,-0.474405,-1.927449,2.913561,-1.523713,5.662932,7.610628,-0.990642,9.234445,3.927554,-2.270825,5.470157,6.133978,7.752378,-4.193903,-2.037370,-4.996074,-9.447029,-9.605613,-2.895928,5.228861,3.967595,2.687973,-1.273974], dtype = "float64")#candidate|10159|(1120,)|const|float64
call_10158 = relay.TupleGetItem(func_9171_call(relay.reshape(const_10159.astype('float64'), [10, 14, 8])), 1)
call_10160 = relay.TupleGetItem(func_9173_call(relay.reshape(const_10159.astype('float64'), [10, 14, 8])), 1)
func_9171_call = mod.get_global_var('func_9171')
func_9173_call = mutated_mod.get_global_var('func_9173')
call_10174 = relay.TupleGetItem(func_9171_call(relay.reshape(const_10159.astype('float64'), [10, 14, 8])), 3)
call_10175 = relay.TupleGetItem(func_9173_call(relay.reshape(const_10159.astype('float64'), [10, 14, 8])), 3)
output = relay.Tuple([call_10099,bop_10113,bop_10120,call_10158,const_10159,call_10174,])
output2 = relay.Tuple([call_10100,bop_10116,bop_10123,call_10160,const_10159,call_10175,])
func_10177 = relay.Function([var_10112,], output)
mod['func_10177'] = func_10177
mod = relay.transform.InferType()(mod)
mutated_mod['func_10177'] = func_10177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10178 = relay.var("var_10178", dtype = "float64", shape = (12, 5, 4))#candidate|10178|(12, 5, 4)|var|float64
func_10177_call = mutated_mod.get_global_var('func_10177')
call_10179 = func_10177_call(var_10178)
output = call_10179
func_10180 = relay.Function([var_10178], output)
mutated_mod['func_10180'] = func_10180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6707_call = mod.get_global_var('func_6707')
func_6708_call = mutated_mod.get_global_var('func_6708')
call_10200 = relay.TupleGetItem(func_6707_call(), 0)
call_10201 = relay.TupleGetItem(func_6708_call(), 0)
output = relay.Tuple([call_10200,])
output2 = relay.Tuple([call_10201,])
func_10228 = relay.Function([], output)
mod['func_10228'] = func_10228
mod = relay.transform.InferType()(mod)
output = func_10228()
func_10229 = relay.Function([], output)
mutated_mod['func_10229'] = func_10229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5137_call = mod.get_global_var('func_5137')
func_5139_call = mutated_mod.get_global_var('func_5139')
call_10281 = relay.TupleGetItem(func_5137_call(), 0)
call_10282 = relay.TupleGetItem(func_5139_call(), 0)
func_6074_call = mod.get_global_var('func_6074')
func_6076_call = mutated_mod.get_global_var('func_6076')
var_10294 = relay.var("var_10294", dtype = "float32", shape = (224,))#candidate|10294|(224,)|var|float32
call_10293 = relay.TupleGetItem(func_6074_call(relay.reshape(var_10294.astype('float32'), [224,])), 2)
call_10295 = relay.TupleGetItem(func_6076_call(relay.reshape(var_10294.astype('float32'), [224,])), 2)
output = relay.Tuple([call_10281,call_10293,var_10294,])
output2 = relay.Tuple([call_10282,call_10295,var_10294,])
func_10332 = relay.Function([var_10294,], output)
mod['func_10332'] = func_10332
mod = relay.transform.InferType()(mod)
mutated_mod['func_10332'] = func_10332
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10333 = relay.var("var_10333", dtype = "float32", shape = (224,))#candidate|10333|(224,)|var|float32
func_10332_call = mutated_mod.get_global_var('func_10332')
call_10334 = func_10332_call(var_10333)
output = call_10334
func_10335 = relay.Function([var_10333], output)
mutated_mod['func_10335'] = func_10335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6633_call = mod.get_global_var('func_6633')
func_6635_call = mutated_mod.get_global_var('func_6635')
call_10384 = func_6633_call()
call_10385 = func_6633_call()
output = call_10384
output2 = call_10385
func_10386 = relay.Function([], output)
mod['func_10386'] = func_10386
mod = relay.transform.InferType()(mod)
output = func_10386()
func_10387 = relay.Function([], output)
mutated_mod['func_10387'] = func_10387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6794_call = mod.get_global_var('func_6794')
func_6796_call = mutated_mod.get_global_var('func_6796')
call_10429 = relay.TupleGetItem(func_6794_call(), 0)
call_10430 = relay.TupleGetItem(func_6796_call(), 0)
const_10438 = relay.const([[[8.777344,-4.997410,-3.331597,-1.237270],[6.493152,-7.145001,-7.024444,-0.806774],[9.169499,-6.340148,-3.775614,-8.963607],[1.517590,2.050007,-0.010499,4.042128],[-7.523687,-6.069421,5.463563,-4.800386]],[[4.736750,-2.870595,-5.670213,-0.567152],[1.429695,5.144113,5.784256,0.296374],[2.973790,-0.198793,5.436635,6.008439],[4.739552,4.826530,-0.861890,9.739702],[-7.170842,1.483946,-1.888695,-9.580382]],[[0.831475,-2.454192,2.407738,5.577255],[-3.541654,-3.024820,6.459075,5.590887],[-3.109926,8.915503,5.968396,-0.932500],[4.461135,-4.958129,0.720993,4.206519],[-9.898705,0.470497,3.313937,-8.235436]],[[-6.468214,3.958158,-2.535516,-3.441656],[4.268389,-4.932021,5.575112,-2.555586],[-5.934929,-2.659351,-2.872896,-0.283975],[0.137251,-9.012670,-4.821627,1.121969],[-6.910553,-5.518292,0.139540,6.590686]],[[5.755056,7.983480,-9.390844,8.999504],[4.099281,9.581948,1.342652,-8.975524],[6.540219,1.517674,-9.460168,5.115779],[1.072139,7.750977,-2.372885,-8.371107],[-0.789769,-9.395956,0.823275,-2.570628]],[[-1.472988,-2.839599,9.179129,-4.019684],[-4.077335,7.228691,-6.563709,8.913029],[-6.106828,9.201479,1.415739,-6.143969],[4.393067,-6.657637,-6.924924,0.656886],[-9.710160,-7.890754,8.575175,5.999584]],[[-8.297265,-0.718292,4.511029,8.431737],[-5.345465,-6.467699,-0.704065,-0.269123],[-7.592023,-4.735633,8.894647,6.548854],[-9.865135,6.452127,-8.230237,3.498370],[8.200875,-9.748972,2.552237,9.971672]],[[-9.002346,6.557194,-6.308193,-5.079664],[-4.845369,-6.731128,7.228539,-3.893207],[6.872723,2.446428,-9.562049,0.263237],[-3.104624,-4.926569,1.589681,3.960926],[4.493626,-2.573373,-9.323876,-7.319974]],[[2.467435,-8.954671,-4.542223,-2.343652],[8.160791,-5.119829,-4.789912,4.174388],[4.446476,-9.460800,5.325432,-3.265581],[-2.938641,5.547593,7.141219,-1.965564],[-6.991058,8.045960,8.761185,-6.132041]],[[7.338591,-6.628716,-7.198050,-9.865292],[8.420449,-5.861667,7.467017,9.117700],[6.319355,-6.520229,3.362018,-4.162224],[-6.096602,-8.817886,6.424210,-2.501677],[7.934325,4.652948,-4.162391,7.635212]],[[-5.568974,2.150168,-0.271470,-1.634114],[8.138020,3.834033,4.780909,-0.585548],[7.707109,5.468109,9.007026,-6.836791],[-8.892039,7.530119,4.491895,-9.816171],[-2.128312,3.393994,-2.689420,7.614774]],[[1.267779,-2.360089,-5.216350,-9.733695],[-6.873536,-7.432410,5.192991,-8.437338],[-6.494139,-5.330024,0.013373,-9.347492],[-5.252786,-4.817852,8.187587,-0.684270],[-9.831023,7.104190,4.574210,9.929454]]], dtype = "float32")#candidate|10438|(12, 5, 4)|const|float32
bop_10439 = relay.greater(call_10429.astype('bool'), relay.reshape(const_10438.astype('bool'), relay.shape_of(call_10429))) # shape=(12, 5, 4)
bop_10442 = relay.greater(call_10430.astype('bool'), relay.reshape(const_10438.astype('bool'), relay.shape_of(call_10430))) # shape=(12, 5, 4)
func_9609_call = mod.get_global_var('func_9609')
func_9611_call = mutated_mod.get_global_var('func_9611')
call_10444 = func_9609_call(relay.reshape(const_10438.astype('float64'), [12, 5, 4]))
call_10445 = func_9609_call(relay.reshape(const_10438.astype('float64'), [12, 5, 4]))
func_6984_call = mod.get_global_var('func_6984')
func_6985_call = mutated_mod.get_global_var('func_6985')
call_10449 = relay.TupleGetItem(func_6984_call(), 1)
call_10450 = relay.TupleGetItem(func_6985_call(), 1)
output = relay.Tuple([bop_10439,call_10444,call_10449,])
output2 = relay.Tuple([bop_10442,call_10445,call_10450,])
func_10453 = relay.Function([], output)
mod['func_10453'] = func_10453
mod = relay.transform.InferType()(mod)
output = func_10453()
func_10454 = relay.Function([], output)
mutated_mod['func_10454'] = func_10454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8445_call = mod.get_global_var('func_8445')
func_8446_call = mutated_mod.get_global_var('func_8446')
call_10458 = func_8445_call()
call_10459 = func_8445_call()
func_5430_call = mod.get_global_var('func_5430')
func_5432_call = mutated_mod.get_global_var('func_5432')
call_10464 = relay.TupleGetItem(func_5430_call(), 0)
call_10465 = relay.TupleGetItem(func_5432_call(), 0)
output = relay.Tuple([call_10458,call_10464,])
output2 = relay.Tuple([call_10459,call_10465,])
func_10472 = relay.Function([], output)
mod['func_10472'] = func_10472
mod = relay.transform.InferType()(mod)
mutated_mod['func_10472'] = func_10472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10472_call = mutated_mod.get_global_var('func_10472')
call_10473 = func_10472_call()
output = call_10473
func_10474 = relay.Function([], output)
mutated_mod['func_10474'] = func_10474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5735_call = mod.get_global_var('func_5735')
func_5737_call = mutated_mod.get_global_var('func_5737')
call_10555 = relay.TupleGetItem(func_5735_call(), 0)
call_10556 = relay.TupleGetItem(func_5737_call(), 0)
output = relay.Tuple([call_10555,])
output2 = relay.Tuple([call_10556,])
func_10565 = relay.Function([], output)
mod['func_10565'] = func_10565
mod = relay.transform.InferType()(mod)
mutated_mod['func_10565'] = func_10565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10565_call = mutated_mod.get_global_var('func_10565')
call_10566 = func_10565_call()
output = call_10566
func_10567 = relay.Function([], output)
mutated_mod['func_10567'] = func_10567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9216_call = mod.get_global_var('func_9216')
func_9217_call = mutated_mod.get_global_var('func_9217')
call_10658 = relay.TupleGetItem(func_9216_call(), 1)
call_10659 = relay.TupleGetItem(func_9217_call(), 1)
func_6185_call = mod.get_global_var('func_6185')
func_6189_call = mutated_mod.get_global_var('func_6189')
var_10678 = relay.var("var_10678", dtype = "uint16", shape = ())#candidate|10678|()|var|uint16
const_10679 = relay.const([[-2,-10,6,-3,2,-4,-10,1,6,2,1,-4,-9,-6,10,-10,6,-3,-7,7,-2,2,-5,-4,8,-1,-4,-6,8,7,-1,-2,9,3,2,9,10,7,-6,-10,-9,-3,-8,7,10,-3,3,2,-1],[-9,-5,-6,-10,4,-6,-10,7,-1,4,-10,1,9,-9,5,-6,-2,3,-7,4,8,-6,-8,-6,8,4,4,1,9,-4,1,-9,2,4,-4,3,-8,-2,3,-3,8,1,5,7,4,-8,-3,10,6],[7,10,-2,8,-5,2,2,-9,1,-6,8,2,-5,-3,-10,-6,-9,-4,7,6,3,-3,-9,-9,-6,1,-5,2,-5,4,3,2,-8,-6,-2,-8,2,1,4,4,-9,4,5,5,-8,-9,10,-7,-10],[5,5,9,5,-9,-4,-6,5,6,-5,-3,-9,-6,-4,9,-3,-7,8,-6,-6,1,-5,2,9,3,6,-7,-8,5,-5,7,-9,-8,10,1,8,-7,-2,-4,-6,5,5,-8,6,-5,8,-2,-8,-3],[4,-8,7,-7,6,-10,-10,-6,-10,8,-8,8,6,-2,-10,-5,-10,-7,10,-7,-7,1,-3,-2,3,-10,2,-8,6,5,4,10,-6,-2,3,5,6,9,4,6,-3,10,-2,6,-6,-4,4,6,-3],[6,-8,9,-8,-5,2,-10,6,10,8,-8,10,7,-5,2,1,-7,-1,-3,5,-1,-9,-1,1,-5,-9,5,4,-3,-5,1,5,5,2,-4,5,-3,-6,-3,6,-8,-10,6,5,5,6,-5,3,8],[-7,-2,6,9,8,1,-10,10,-1,8,-8,5,-10,-7,-2,8,-7,-2,-4,7,4,7,-6,-6,7,-3,8,1,2,-10,-2,4,7,-4,-8,4,-8,6,1,-1,7,-3,5,4,1,10,4,-3,-1],[-3,-8,10,1,-10,-9,3,8,-4,2,-8,4,6,-3,9,6,10,-1,9,-6,6,-1,-3,5,-2,5,-9,10,-7,6,7,-7,5,-9,2,3,-3,7,3,-3,-10,-7,-9,6,-9,9,-4,5,6],[4,-1,8,-3,-2,-6,3,5,-4,-6,8,5,-3,8,10,6,-4,3,3,-4,2,9,-7,-5,9,-3,9,8,7,-2,10,1,4,-5,-9,1,-10,-9,3,9,-7,10,-2,-8,2,6,-9,-5,2],[-2,-10,4,-1,8,9,7,2,4,4,5,-3,8,-9,-4,7,-3,7,7,-2,-4,-4,9,-6,2,-4,-6,7,8,10,-8,-8,-4,-8,-4,7,1,9,-9,-4,7,-7,4,10,1,-4,7,-10,8],[1,6,10,-1,-1,7,3,-3,8,6,9,-6,-8,4,3,6,2,1,-1,-4,-5,8,-7,-10,-8,1,-8,10,-1,6,4,7,3,-1,-4,-7,-6,-9,-3,7,7,-9,-6,-3,-3,2,-8,-3,-9]], dtype = "uint16")#candidate|10679|(11, 49)|const|uint16
call_10677 = relay.TupleGetItem(func_6185_call(relay.reshape(var_10678.astype('uint16'), []), relay.reshape(const_10679.astype('uint16'), [7, 11, 7]), ), 0)
call_10680 = relay.TupleGetItem(func_6189_call(relay.reshape(var_10678.astype('uint16'), []), relay.reshape(const_10679.astype('uint16'), [7, 11, 7]), ), 0)
func_5997_call = mod.get_global_var('func_5997')
func_6002_call = mutated_mod.get_global_var('func_6002')
const_10686 = relay.const([4.836258,-3.547680,7.560261,1.302420,4.034575,-0.504058,8.332004,4.419371,-1.439086,-6.448171,4.780385,-2.558808,5.913280,-8.949942,8.574731,-5.816275,0.408845,-9.742458,1.479393,7.525767,-0.513209,-2.236775,3.698167,8.828455,9.774919,8.839359,-7.873014,-1.797451,3.270545,-7.488535,3.175997,5.506821,-9.908053,8.766745,3.237103,-7.287622,-2.004017,8.312499,-3.746218,-3.881249,9.723005,7.406759,2.252829,7.246865,-3.201776,9.564979,-0.770435,-9.712784,-7.420979,-2.604262,6.716336,2.246751,6.777309,8.309332,-3.995386,-4.529459,-7.035277,7.915669,2.935225,-5.603467,-6.535961,9.316072,-8.542519,6.539318,5.929071,-8.412183,1.008532,6.586606,-3.282878,-9.127693,-0.187699,-3.150919,-6.672618,-6.173423,-2.029356,1.772206,-6.531532,-0.583053,5.756904,5.621021,7.011028,9.208972,2.390107,-8.429722,6.330584,-1.710242,7.458328,-4.844788,-2.204658,2.612770,1.645953,-3.182770,-7.809947,-9.474816,-5.471305,-2.360152,6.160096,-3.723036,-4.515370,8.970108,-5.294239,9.000981,-3.182183,4.780523,-2.529897,-8.353432,-2.189799,2.806020,9.721466,-5.032382,6.367439,4.228130,-2.406442,-1.521099,-3.502693,-8.662381,2.683505,-8.452463,-8.020952,8.475134,0.524028,-9.284670,-8.524411,-8.198924,-6.062485,7.882528,5.419993,-2.110945,6.730323,0.173910,-8.412851,-6.578950,5.304532,-3.243942,-9.248058,0.586863,0.644373,1.950763,1.406621,0.048468,-0.420133,-2.714383,0.904799,2.131788,3.825119,7.346567,7.681570,0.764211,-2.580790,-3.570057,3.543555,-0.305627,7.003486,-7.182458,9.701693,-7.949098,7.551886,-2.295239,-0.123770,0.213073,-0.675805,9.182334,-3.776986,-8.514559,-6.568010,7.596010,-6.061964,-5.780023,-7.444313,2.759790,-5.726289,2.109778,-8.819475,2.060537,-3.437522,-9.476522,1.869196,-3.026520,-1.653383,-8.000001,5.610028,1.070654,-1.265150,5.967602,-3.341833,-4.224368,3.543420,-8.671841,5.434185,-6.791783,-5.481884,-4.890680], dtype = "float64")#candidate|10686|(192,)|const|float64
var_10687 = relay.var("var_10687", dtype = "float32", shape = (180,))#candidate|10687|(180,)|var|float32
var_10688 = relay.var("var_10688", dtype = "float32", shape = (2, 336))#candidate|10688|(2, 336)|var|float32
call_10685 = relay.TupleGetItem(func_5997_call(relay.reshape(const_10686.astype('float64'), [192,]), relay.reshape(var_10687.astype('float32'), [180,]), relay.reshape(var_10688.astype('float32'), [672,]), ), 6)
call_10689 = relay.TupleGetItem(func_6002_call(relay.reshape(const_10686.astype('float64'), [192,]), relay.reshape(var_10687.astype('float32'), [180,]), relay.reshape(var_10688.astype('float32'), [672,]), ), 6)
output = relay.Tuple([call_10658,call_10677,var_10678,const_10679,call_10685,const_10686,var_10687,var_10688,])
output2 = relay.Tuple([call_10659,call_10680,var_10678,const_10679,call_10689,const_10686,var_10687,var_10688,])
func_10695 = relay.Function([var_10678,var_10687,var_10688,], output)
mod['func_10695'] = func_10695
mod = relay.transform.InferType()(mod)
var_10696 = relay.var("var_10696", dtype = "uint16", shape = ())#candidate|10696|()|var|uint16
var_10697 = relay.var("var_10697", dtype = "float32", shape = (180,))#candidate|10697|(180,)|var|float32
var_10698 = relay.var("var_10698", dtype = "float32", shape = (2, 336))#candidate|10698|(2, 336)|var|float32
output = func_10695(var_10696,var_10697,var_10698,)
func_10699 = relay.Function([var_10696,var_10697,var_10698,], output)
mutated_mod['func_10699'] = func_10699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9474_call = mod.get_global_var('func_9474')
func_9476_call = mutated_mod.get_global_var('func_9476')
call_10727 = relay.TupleGetItem(func_9474_call(), 0)
call_10728 = relay.TupleGetItem(func_9476_call(), 0)
func_7326_call = mod.get_global_var('func_7326')
func_7327_call = mutated_mod.get_global_var('func_7327')
call_10746 = func_7326_call()
call_10747 = func_7326_call()
output = relay.Tuple([call_10727,call_10746,])
output2 = relay.Tuple([call_10728,call_10747,])
func_10748 = relay.Function([], output)
mod['func_10748'] = func_10748
mod = relay.transform.InferType()(mod)
output = func_10748()
func_10749 = relay.Function([], output)
mutated_mod['func_10749'] = func_10749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6692_call = mod.get_global_var('func_6692')
func_6693_call = mutated_mod.get_global_var('func_6693')
call_10788 = relay.TupleGetItem(func_6692_call(), 0)
call_10789 = relay.TupleGetItem(func_6693_call(), 0)
const_10790 = relay.const([[3.790492,3.589804,0.257049,-8.026891,1.396364,-8.471905,-2.044231,-7.770728,8.837250,6.940845,-5.887376,-5.227998,2.438039,-3.550172,7.465835,0.369971,7.111643,7.118331,7.910486,-3.042530],[-0.229270,6.148584,-5.211234,-6.536185,-4.154061,0.587953,2.550648,7.238443,6.487290,9.319585,-5.856506,8.560017,5.863448,-4.096109,-0.717585,9.570526,2.781237,5.480556,0.325068,8.293174]], dtype = "float32")#candidate|10790|(2, 20)|const|float32
bop_10791 = relay.logical_and(call_10788.astype('bool'), relay.reshape(const_10790.astype('bool'), relay.shape_of(call_10788))) # shape=(2, 20)
bop_10794 = relay.logical_and(call_10789.astype('bool'), relay.reshape(const_10790.astype('bool'), relay.shape_of(call_10789))) # shape=(2, 20)
func_4115_call = mod.get_global_var('func_4115')
func_4120_call = mutated_mod.get_global_var('func_4120')
const_10806 = relay.const([4.677750,3.783209,-4.348741,1.279826,-5.787320,0.237542,0.564716,1.472826,6.619289,-5.152511,-5.995701,2.280963,4.207433,5.668571,-9.325376,-7.271410,8.719189,-1.610662,1.442562,4.409672,-9.622254,-0.032183,7.813777,8.337046,-5.423304,-5.123758,-8.772461,-0.301131,-6.718442,-1.085537,1.670752,-3.352537,-8.603852,-5.635564,3.542038,3.026740,1.709687,9.227610,0.943070,7.989850,-4.782610,0.487527,-7.102296,-5.315923,9.792501,5.883507,-9.328509,1.773135,-5.923267,-9.552521,7.987269,6.362922,-7.052911,2.288582,7.230916,8.008964,-2.138829,9.977137,-9.084679,-0.631715,-2.931482,-9.799457,4.614262,-5.257350,-2.881687,6.017944,-0.503313,-4.392868,-7.660708,8.548710,-0.585388,3.435245,8.021347,7.988175,2.483937,7.393552,9.452519,-2.639482,3.103973,1.529815,4.085410,-5.973558,3.006930,-2.458835,-2.736714,-3.701018,-3.867176,-6.566869,-5.373779,2.036264,7.660392,6.406820,7.273167,4.317504,-4.527149,-2.106022,-6.603481,-4.961971,2.269373,9.822079,-8.740829,-8.789172,5.772525,-4.720782,9.425081,0.598952,-2.397786,9.324621,-4.114744,-1.178352,7.207170,6.132652,2.727021,-7.928963,-9.314776,1.705599,4.592190,-1.812957,-0.628696,-4.733027,-0.785772,-8.926816,-1.081331,-1.593382,-3.479591,-9.874926,6.514300,6.472261,7.900317,9.040599,3.200500,-5.602164,7.970949,-6.524314,4.813460,9.133014,-7.541466,-6.302163,8.163540,-5.307177,8.089101,-0.351205,-8.031741,-9.834534,0.638525,2.124518,-7.563048,3.010035,-4.193520,9.390780,-7.186365,-9.912204,-3.324337,5.212745,8.388590,9.062262,-5.096539,-8.911493,-9.532080,-2.969759,-3.389301,-6.229153,5.254196,-4.842220,9.297432,6.827434,-9.715386,6.060441,-8.415652,6.837406,-8.708661,4.619604,-6.415930,8.179826,-7.659254,-2.008396,4.355763,2.473825,-7.408005,6.906150,5.981620,8.614422,-9.527571,-8.394674,8.769285,-3.630249,-0.435179,5.167082,8.126583,9.227789,-1.809354,8.822589,2.818111,2.008595,-5.573978,7.143317,3.783938,-4.095993,3.828926,7.458117,-8.036534,-2.640671,3.723112,4.400848,-3.947810,-5.360267,-9.001837,8.703390,-9.403320,4.860773,0.398266,-5.184080,4.468014,-9.536244,7.545517,9.434819,4.032254,-2.382908,6.995427,-1.986491,5.597757,4.448055,-8.721614,0.903260,8.151351,7.960631,7.591924,7.721646,-1.710589,-0.016589,6.070240,5.893356,9.856611,6.908558,3.039740,9.392130,-3.239610,-4.658372,4.552203,5.306500,-5.941364,7.793969,-9.689476,-9.410336,-1.573808,-2.623342,6.843032,-5.693387,-6.970237,7.810697,8.519387,-1.420184,2.505863,-1.666199,-2.036268,8.436483,5.612127,-6.780025,-7.129722,-9.736762,3.956888,-7.816252,8.806516,-0.417376,9.134498,7.621580,-4.071594,-8.282102,2.626191,-4.129246,8.813375,-6.707179,-7.641410,-3.841774,-0.644551,3.382135,-6.936889,-8.865833,-9.395693,0.118581,-8.455251,0.456932,-4.736461,5.681291,-8.291522,2.658915,0.505807,-7.415291,-8.628189,-1.368878,-2.203152,8.667640,-8.383084,-0.484161,-1.491724,-6.404428,-6.617546,6.221279,9.832537,-4.376275,-6.272015,3.000781,-5.642567,2.467611,1.751587,4.823794,4.490425,-6.936984,-7.240890,-3.322049,-5.986197,9.492642,-4.674981,3.857931,0.689134,-7.762987,6.842004,-8.754891,3.788182,-8.099616,7.216652,-9.848956,-3.544502,-3.455949,5.964533,9.036052,1.463322,2.698208,4.749484,-8.252825,-6.606995,-3.004871,-7.277295,7.833190,-6.631802,-7.717869,3.883454,-8.658874,0.485730,-8.084434,-1.573094,-8.249120,0.489807,3.518304,-3.890062,5.279651,-3.361500,-4.246397,-2.646676,6.163923,-5.985955,7.650484,-5.382081,2.212368,-1.061883,4.503654,-8.920373,8.253913,2.013939,-6.454586,-8.166671,-1.374285,-2.427500,2.994991,6.993601,2.329381,1.147056,2.349416,9.219591,4.551409,9.471383,-9.435650,8.958532,9.088913,-0.801728,-1.350221,5.858510,-2.671605,-0.958632,2.209517,-6.149101,4.690091,1.451453,8.393527,5.845041,-4.535191,5.426541,-8.270567,-2.370404,6.579577,-7.331270,6.005161,3.252665,2.235559,-2.674219,4.771329,8.243964,-6.300149,9.482157,0.766660,-7.087882,9.883514,-2.903281,-8.880819,3.315282,-1.682684,-2.669974,-9.615527,7.574926,8.915534,-1.120171,-2.342535,1.090878,-2.071544,-6.803930,2.473392,1.080976,2.308052,9.331836,7.563583,5.914048,-4.900908,4.345836,8.166170,-7.878367,-5.456403,2.794324,-9.581666,2.785227,-0.457230,7.496734,2.858073,-4.343197,-2.279838,-7.027137,8.769871,8.314759,6.399672,-0.654871,2.954349,1.471365,5.828558,-7.048408,3.651173,-9.425668,-0.504043,-8.814330,-8.980923,-2.463443,-3.021494,-8.066714,-5.113023,2.582269,1.055926,3.388858,-2.458869,-7.560496,6.217109,0.805055,2.416563,-0.144101,1.140145,4.487260,-3.485398,2.818738,-7.907487,-5.005268,0.829412,6.571696,7.554227,-4.521999,2.469463,5.531815,7.395862,-1.445816,-6.585063,-1.966086,6.799491,6.307146,3.307250,-4.719512,8.019280,3.924828,-6.609484,4.164809,8.529519,9.235490,-4.753754,8.953999,9.016164,-9.839988,8.185321,-1.258776,-4.907482,-2.525236,-3.922047,-7.809676,0.534715,-9.810309,-5.734894,1.949289,8.574229,-1.869929,4.904967,-5.842634,5.071283,-2.684047,0.009642,4.581399,-5.949650,-7.507503,-3.168229,-5.174658,-8.076054,1.121125,-0.282341,-2.342535,5.730389,-8.003240,-0.418901,-4.837891,2.807309,-7.551441,2.920460,6.980841,6.051693,-8.697738,-6.616671,4.073341,4.982264,4.588514,3.712231,-8.934198,-8.032920,3.698455,0.001671,8.815979,-6.466773,8.054872,7.042321,-3.856720,-4.403555,8.010465,6.379325,8.665959,5.591942,5.194551,-5.773922,-6.890154,-1.049894,-0.190811,9.091900,-0.372269,4.878706,9.170360,-4.687327,-1.081684,-6.661359,7.919412,-5.946462,-8.206266,0.419236,9.425561,0.365805,3.053374,2.363907,6.451604,1.448368,0.084204,-2.557310,6.185749,-7.776061,5.847572,5.698068,-6.407607,-6.077962,-4.039982,-9.036023,3.934863,4.855833,3.584912,-9.369082,9.022560,3.801107,8.140256,0.261973,-3.365829,-6.872613,-4.684571,8.581866,8.436977,2.802477,1.167546,2.869006,-7.193488,0.868440,-2.562073,-5.070364,8.142712,-3.710669,0.533359,-2.041528,9.929483,-6.119395,-3.283642,-6.190764,9.300107,7.790283,-5.010945,8.077157,6.448763,-9.277136,5.684158,0.782888,-2.402397,2.752914,3.493186,-8.194354,-1.627537,-6.831937,-1.191990,-7.532164,6.470421,-3.137349,6.560614,-0.528987,4.999132,-5.302054,0.732064,3.125934,6.145467,-6.807355,-1.199307,7.998710,7.052253,-8.442348,-2.304005,7.390103,-9.329883,5.160658,0.706556,9.329967,1.015562,3.712550,2.167464,-8.658333,0.126569,-6.726280,6.684104,-7.520835,4.669830,-6.900735,-7.922582,6.680511,-0.457350,-3.848935,-0.319714,-1.148927,7.722636,7.646602,-2.701945,1.771627,-6.360588,-9.790963,6.397730,-7.617138,5.992651,-4.127998,-4.006517,-4.083172,8.973074,-0.485969,-7.533111,8.985688,6.022970,4.293689,-5.725800,8.670536,-3.703130,5.558433,9.422119,-5.729801,-5.000318,-2.305628,9.128623,8.454787,4.529711,-8.247401,-6.128697,7.880517,-8.914167,-3.008489,6.393821,7.977800,7.417992,8.204880,-5.181370,4.909626,-6.595640,6.990822], dtype = "float64")#candidate|10806|(700,)|const|float64
var_10807 = relay.var("var_10807", dtype = "float64", shape = (462,))#candidate|10807|(462,)|var|float64
const_10808 = relay.const([-5.426293,5.201712,-1.589570,-7.851689,9.992303,4.684422,-6.023689,7.027913,-1.492723,4.246397,-8.056354,-5.120118,-1.406419,-8.236655,-8.151558,3.907736,-0.447004,8.873924,-6.499138,-1.640210,-7.908472,-1.921632,-6.534171,0.464323,-3.485384,-2.079727,-5.571555,-5.016719,2.775600,-8.721564,8.416971,3.665749,-6.456245,-1.677701,-8.413576,-7.881573,-9.370541,2.412666,9.038930,9.815730,1.788628,-0.582888,5.971595,-2.642643,-2.829932,-6.193831,9.633877,2.980400,-6.082802,-6.256735,0.052806,8.836766,-6.664784,-9.647404,-3.512169,3.180433,1.883752,0.666864,-7.983779,-6.726936,-4.798612,-6.933924,-3.938952,8.521306,2.985828,2.253807,-9.028530,-5.392290,4.441863,-9.771874,8.389548,3.057582,-0.667573,2.158205,4.530348,9.504287,-0.731886,8.242559,5.462119,3.368852,-8.900943,5.967228,-2.125719,7.575704,5.534399,6.719676,-4.486024,1.878678,3.461710,3.788334,-9.334602,-7.034739,3.699335,1.134534,-6.473668,1.164669,0.758880,4.940623,5.367848,8.912733,5.638594,9.315973,-4.749219,-5.380218,9.972766,-4.716452,-0.705824,-4.172184,-4.342367,-0.650659,-9.703316,5.212956,7.055533,8.141061,-7.756700,8.622719,0.227720,3.291641,2.235746,9.250450,0.471565,0.433105,-5.941269,4.387872,7.845025,8.523135,-6.136661,-0.431843,-1.001378,-3.291699,-0.206412,-3.296661,-6.993723,3.256988,0.494132,-7.926292,-6.634408,-9.216501,7.383439,6.934849,2.068470,-2.979998,-8.871193,1.081195,0.651011,5.068662,6.647658,0.154942,6.212724,-1.825842,-8.423530,2.583037,-0.515388,2.630677,-0.135172,-7.432253,-6.465496,5.671437,4.990739,3.665437,-5.291562,7.603720,-4.935520,4.443914,3.924976,-3.096243,-7.329671,9.055333,0.916338,-4.334056,9.183513,5.162250,9.308343,-9.379165,-5.315079,0.253234,-3.457040,-4.758812,-6.188603,-0.095503], dtype = "float32")#candidate|10808|(180,)|const|float32
call_10805 = relay.TupleGetItem(func_4115_call(relay.reshape(const_10806.astype('float64'), [5, 10, 14]), relay.reshape(var_10807.astype('float64'), [231, 2]), relay.reshape(const_10808.astype('float32'), [180,]), ), 10)
call_10809 = relay.TupleGetItem(func_4120_call(relay.reshape(const_10806.astype('float64'), [5, 10, 14]), relay.reshape(var_10807.astype('float64'), [231, 2]), relay.reshape(const_10808.astype('float32'), [180,]), ), 10)
output = relay.Tuple([bop_10791,call_10805,const_10806,var_10807,const_10808,])
output2 = relay.Tuple([bop_10794,call_10809,const_10806,var_10807,const_10808,])
func_10811 = relay.Function([var_10807,], output)
mod['func_10811'] = func_10811
mod = relay.transform.InferType()(mod)
var_10812 = relay.var("var_10812", dtype = "float64", shape = (462,))#candidate|10812|(462,)|var|float64
output = func_10811(var_10812)
func_10813 = relay.Function([var_10812], output)
mutated_mod['func_10813'] = func_10813
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10866 = relay.var("var_10866", dtype = "int8", shape = (11, 6, 9))#candidate|10866|(11, 6, 9)|var|int8
var_10867 = relay.var("var_10867", dtype = "int8", shape = (11, 6, 9))#candidate|10867|(11, 6, 9)|var|int8
bop_10868 = relay.right_shift(var_10866.astype('int8'), relay.reshape(var_10867.astype('int8'), relay.shape_of(var_10866))) # shape=(11, 6, 9)
func_10177_call = mod.get_global_var('func_10177')
func_10180_call = mutated_mod.get_global_var('func_10180')
const_10885 = relay.const([-9.427917,2.251071,8.208299,-6.347860,2.530681,-1.927670,3.467784,-5.926900,-6.717836,-6.798509,5.635469,9.953126,-1.238553,-2.472028,-8.482079,-2.693677,-0.535073,-2.890965,-4.348052,-5.499815,-5.676663,-3.293665,9.468274,-0.863049,5.439884,3.285094,-4.749103,1.545675,3.743269,-3.405111,-4.682291,0.028367,6.038106,-6.396003,-3.618508,2.943436,8.297201,2.349389,-1.002447,3.969485,-8.566072,-3.057445,5.835808,8.232355,-7.711556,-4.016862,-8.779490,7.586049,-6.146527,8.267108,9.333582,7.604256,-8.214779,0.147589,-3.236876,1.550372,8.556205,-5.774548,7.143741,-1.171690,7.346621,-5.082496,-8.707948,2.163112,-4.848640,5.783370,6.871416,-3.696729,3.619481,-2.041831,-2.630870,-7.874709,-7.434601,8.496319,-5.116903,1.762948,-1.671108,5.677742,9.320186,2.396998,-8.338991,3.756872,-3.376514,3.727941,6.728141,4.069295,0.217137,-0.180348,-9.502806,-1.661014,1.581717,5.708771,1.830183,-9.107113,8.310394,-5.760677,-5.853404,-0.248347,-4.407344,6.054003,0.545314,4.640124,-7.860805,-8.957989,4.435083,-9.378251,-3.137951,7.320929,-9.985039,1.667661,4.531367,1.521831,8.732200,-3.373710,-1.724820,-4.715914,7.276755,-1.453366,9.317285,-3.929650,7.095104,1.713817,-8.121408,-4.450145,-5.389753,1.600080,0.820008,5.553740,-3.205662,-3.044868,6.930908,-7.498178,3.741335,4.024176,-0.654730,7.195676,-4.242735,4.417939,6.712006,5.961442,7.071089,-0.514278,-1.710410,-3.356086,4.415694,2.772602,4.060220,7.298169,-0.322534,4.375218,8.893195,6.015488,9.408016,-3.410036,-2.488552,-6.096776,-6.164530,-3.785711,-1.198940,2.839082,-2.074777,4.803506,8.581081,-5.483199,9.066929,-8.861492,-3.891589,-5.209714,-1.923756,0.944623,-8.025436,3.433998,-0.851091,8.447493,-0.965641,-4.842223,3.997283,-4.208682,7.912854,1.039378,-2.289778,8.556404,5.487983,-6.709260,-0.071256,-3.663919,1.023568,-6.101073,9.034609,-2.315201,-2.806268,-6.038596,-8.346255,-3.168888,3.148673,-7.324530,9.192506,3.037486,9.097868,1.776717,5.794156,8.783363,8.800231,-7.829256,9.782430,-1.582482,1.873302,-1.097967,3.213436,9.140555,-9.792692,-1.842021,3.519329,-0.025035,4.131001,5.298059,1.875173,4.799292,-0.743042,3.782615,-4.496361,7.209403,1.401248,-7.530893,0.670917,2.762202,2.377008,0.489533,0.008531,-9.464714,6.732666,3.592484,-1.043468,7.567441,-8.894083,-1.134050,-0.915839,2.799114,0.784324,-9.468807], dtype = "float64")#candidate|10885|(240,)|const|float64
call_10884 = relay.TupleGetItem(func_10177_call(relay.reshape(const_10885.astype('float64'), [12, 5, 4])), 4)
call_10886 = relay.TupleGetItem(func_10180_call(relay.reshape(const_10885.astype('float64'), [12, 5, 4])), 4)
output = relay.Tuple([bop_10868,call_10884,const_10885,])
output2 = relay.Tuple([bop_10868,call_10886,const_10885,])
func_10907 = relay.Function([var_10866,var_10867,], output)
mod['func_10907'] = func_10907
mod = relay.transform.InferType()(mod)
mutated_mod['func_10907'] = func_10907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10907_call = mutated_mod.get_global_var('func_10907')
var_10909 = relay.var("var_10909", dtype = "int8", shape = (11, 6, 9))#candidate|10909|(11, 6, 9)|var|int8
var_10910 = relay.var("var_10910", dtype = "int8", shape = (11, 6, 9))#candidate|10910|(11, 6, 9)|var|int8
call_10908 = func_10907_call(var_10909,var_10910,)
output = call_10908
func_10911 = relay.Function([var_10909,var_10910,], output)
mutated_mod['func_10911'] = func_10911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6984_call = mod.get_global_var('func_6984')
func_6985_call = mutated_mod.get_global_var('func_6985')
call_10929 = relay.TupleGetItem(func_6984_call(), 1)
call_10930 = relay.TupleGetItem(func_6985_call(), 1)
output = relay.Tuple([call_10929,])
output2 = relay.Tuple([call_10930,])
func_10933 = relay.Function([], output)
mod['func_10933'] = func_10933
mod = relay.transform.InferType()(mod)
mutated_mod['func_10933'] = func_10933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10933_call = mutated_mod.get_global_var('func_10933')
call_10934 = func_10933_call()
output = call_10934
func_10935 = relay.Function([], output)
mutated_mod['func_10935'] = func_10935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10933_call = mod.get_global_var('func_10933')
func_10935_call = mutated_mod.get_global_var('func_10935')
call_10936 = relay.TupleGetItem(func_10933_call(), 0)
call_10937 = relay.TupleGetItem(func_10935_call(), 0)
func_9952_call = mod.get_global_var('func_9952')
func_9954_call = mutated_mod.get_global_var('func_9954')
call_10951 = relay.TupleGetItem(func_9952_call(), 2)
call_10952 = relay.TupleGetItem(func_9954_call(), 2)
output = relay.Tuple([call_10936,call_10951,])
output2 = relay.Tuple([call_10937,call_10952,])
func_10955 = relay.Function([], output)
mod['func_10955'] = func_10955
mod = relay.transform.InferType()(mod)
mutated_mod['func_10955'] = func_10955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10955_call = mutated_mod.get_global_var('func_10955')
call_10956 = func_10955_call()
output = call_10956
func_10957 = relay.Function([], output)
mutated_mod['func_10957'] = func_10957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6528_call = mod.get_global_var('func_6528')
func_6529_call = mutated_mod.get_global_var('func_6529')
call_11008 = func_6528_call()
call_11009 = func_6528_call()
func_7677_call = mod.get_global_var('func_7677')
func_7678_call = mutated_mod.get_global_var('func_7678')
call_11012 = relay.TupleGetItem(func_7677_call(), 1)
call_11013 = relay.TupleGetItem(func_7678_call(), 1)
output = relay.Tuple([call_11008,call_11012,])
output2 = relay.Tuple([call_11009,call_11013,])
func_11034 = relay.Function([], output)
mod['func_11034'] = func_11034
mod = relay.transform.InferType()(mod)
mutated_mod['func_11034'] = func_11034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11034_call = mutated_mod.get_global_var('func_11034')
call_11035 = func_11034_call()
output = call_11035
func_11036 = relay.Function([], output)
mutated_mod['func_11036'] = func_11036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9291_call = mod.get_global_var('func_9291')
func_9293_call = mutated_mod.get_global_var('func_9293')
call_11049 = func_9291_call()
call_11050 = func_9291_call()
output = call_11049
output2 = call_11050
func_11066 = relay.Function([], output)
mod['func_11066'] = func_11066
mod = relay.transform.InferType()(mod)
output = func_11066()
func_11067 = relay.Function([], output)
mutated_mod['func_11067'] = func_11067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8869_call = mod.get_global_var('func_8869')
func_8871_call = mutated_mod.get_global_var('func_8871')
call_11074 = func_8869_call()
call_11075 = func_8869_call()
func_8892_call = mod.get_global_var('func_8892')
func_8894_call = mutated_mod.get_global_var('func_8894')
call_11077 = relay.TupleGetItem(func_8892_call(), 0)
call_11078 = relay.TupleGetItem(func_8894_call(), 0)
uop_11088 = relay.exp(call_11077.astype('float64')) # shape=(12, 5, 4)
uop_11090 = relay.exp(call_11078.astype('float64')) # shape=(12, 5, 4)
output = relay.Tuple([call_11074,uop_11088,])
output2 = relay.Tuple([call_11075,uop_11090,])
func_11093 = relay.Function([], output)
mod['func_11093'] = func_11093
mod = relay.transform.InferType()(mod)
output = func_11093()
func_11094 = relay.Function([], output)
mutated_mod['func_11094'] = func_11094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5558_call = mod.get_global_var('func_5558')
func_5559_call = mutated_mod.get_global_var('func_5559')
call_11108 = relay.TupleGetItem(func_5558_call(), 0)
call_11109 = relay.TupleGetItem(func_5559_call(), 0)
var_11125 = relay.var("var_11125", dtype = "float64", shape = (12, 5, 4))#candidate|11125|(12, 5, 4)|var|float64
bop_11126 = relay.subtract(call_11108.astype('uint64'), relay.reshape(var_11125.astype('uint64'), relay.shape_of(call_11108))) # shape=(12, 5, 4)
bop_11129 = relay.subtract(call_11109.astype('uint64'), relay.reshape(var_11125.astype('uint64'), relay.shape_of(call_11109))) # shape=(12, 5, 4)
func_5558_call = mod.get_global_var('func_5558')
func_5559_call = mutated_mod.get_global_var('func_5559')
call_11131 = relay.TupleGetItem(func_5558_call(), 0)
call_11132 = relay.TupleGetItem(func_5559_call(), 0)
func_6761_call = mod.get_global_var('func_6761')
func_6762_call = mutated_mod.get_global_var('func_6762')
call_11137 = func_6761_call()
call_11138 = func_6761_call()
output = relay.Tuple([bop_11126,call_11131,call_11137,])
output2 = relay.Tuple([bop_11129,call_11132,call_11138,])
func_11144 = relay.Function([var_11125,], output)
mod['func_11144'] = func_11144
mod = relay.transform.InferType()(mod)
var_11145 = relay.var("var_11145", dtype = "float64", shape = (12, 5, 4))#candidate|11145|(12, 5, 4)|var|float64
output = func_11144(var_11145)
func_11146 = relay.Function([var_11145], output)
mutated_mod['func_11146'] = func_11146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5558_call = mod.get_global_var('func_5558')
func_5559_call = mutated_mod.get_global_var('func_5559')
call_11150 = relay.TupleGetItem(func_5558_call(), 0)
call_11151 = relay.TupleGetItem(func_5559_call(), 0)
func_4992_call = mod.get_global_var('func_4992')
func_4997_call = mutated_mod.get_global_var('func_4997')
var_11153 = relay.var("var_11153", dtype = "int32", shape = (390,))#candidate|11153|(390,)|var|int32
const_11154 = relay.const([-9.077181,-8.200496,-4.227778,8.251498,-5.762815,-3.834529,-7.688682,-5.027429,-2.069029,4.785384,-3.415576,-8.553440,0.335127,5.272395,7.530014,8.408243,-7.353075,3.878182,5.842942,1.526626,5.323185,9.008809,4.803188,9.816400,4.527599,-7.528600,-7.986131,9.944206,8.647458,-0.522135,8.948656,-7.197965,0.855980,2.862074,7.206018,-0.520809,-7.167870,-3.679746,8.446880,6.761903,-4.962066,-2.482930,6.740766,-2.643680,0.285629,7.817543,-9.863163,-3.247633,-7.420430,8.990761,-0.063571,-3.733875,2.174663,-2.536993,-1.915788,-3.717964,5.716448,-1.323217,-9.637575,5.724736,3.607776,3.388477,-4.033564,-7.444079,3.407885,-5.442049,8.571485,-6.772415,6.122386,-8.135049,-0.558550,6.040080,4.513812,-9.368995,-6.268115,8.885840,0.711432,-3.927386,-0.170924,-8.181826,-2.328007,3.918865,2.878703,-4.693834,-0.528565,6.450723,8.149740,-4.030677,-6.652871,7.691363,-1.487714,-5.621750,8.167406,-0.354182,7.857453,7.918172,8.957713,-8.955769,-0.269008,-6.061317,8.859353,8.117383,-5.171371,1.740513,9.686798,6.100623,-8.877062,3.021204,-2.489068,0.394973,-4.358121,0.723949,-2.607012,-5.834663,5.319519,2.178823,-7.152676,0.939266,6.391381,5.771431,7.813106,-2.675519,1.728310,6.940555,6.327477,3.114501,4.056975,-7.761766,-7.797829,-3.250259,9.181517,-1.452335,1.383485,-9.048538,5.523898,1.440958,-2.876988,-7.753677,8.913507,-9.829946,-7.984968,-8.498879,-0.704115,3.551456,3.730439,-5.269064,-6.464276,6.956972,6.016988,-2.010584,7.962642,3.550138,6.899209,6.009683,-7.261458,-9.838442,-4.342125,-0.509010,8.697263,0.169241,-9.194235,8.687289,5.369737,-1.921959,-0.812139,0.198417,-9.827736,9.012381,-7.123270,-5.446262,-5.598292,2.458160,4.359999,-1.823380,-6.136085,2.671916,0.899366,7.139184,5.887392,4.601499], dtype = "float32")#candidate|11154|(180,)|const|float32
call_11152 = relay.TupleGetItem(func_4992_call(relay.reshape(var_11153.astype('int32'), [15, 2, 13]), relay.reshape(var_11153.astype('int32'), [15, 2, 13]), relay.reshape(const_11154.astype('float32'), [180,]), ), 1)
call_11155 = relay.TupleGetItem(func_4997_call(relay.reshape(var_11153.astype('int32'), [15, 2, 13]), relay.reshape(var_11153.astype('int32'), [15, 2, 13]), relay.reshape(const_11154.astype('float32'), [180,]), ), 1)
output = relay.Tuple([call_11150,call_11152,var_11153,const_11154,])
output2 = relay.Tuple([call_11151,call_11155,var_11153,const_11154,])
func_11181 = relay.Function([var_11153,], output)
mod['func_11181'] = func_11181
mod = relay.transform.InferType()(mod)
var_11182 = relay.var("var_11182", dtype = "int32", shape = (390,))#candidate|11182|(390,)|var|int32
output = func_11181(var_11182)
func_11183 = relay.Function([var_11182], output)
mutated_mod['func_11183'] = func_11183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6158_call = mod.get_global_var('func_6158')
func_6160_call = mutated_mod.get_global_var('func_6160')
call_11190 = func_6158_call()
call_11191 = func_6158_call()
var_11192 = relay.var("var_11192", dtype = "float64", shape = (12, 5, 4))#candidate|11192|(12, 5, 4)|var|float64
bop_11193 = relay.power(call_11190.astype('float32'), relay.reshape(var_11192.astype('float32'), relay.shape_of(call_11190))) # shape=(12, 5, 4)
bop_11196 = relay.power(call_11191.astype('float32'), relay.reshape(var_11192.astype('float32'), relay.shape_of(call_11191))) # shape=(12, 5, 4)
output = relay.Tuple([bop_11193,])
output2 = relay.Tuple([bop_11196,])
func_11205 = relay.Function([var_11192,], output)
mod['func_11205'] = func_11205
mod = relay.transform.InferType()(mod)
var_11206 = relay.var("var_11206", dtype = "float64", shape = (12, 5, 4))#candidate|11206|(12, 5, 4)|var|float64
output = func_11205(var_11206)
func_11207 = relay.Function([var_11206], output)
mutated_mod['func_11207'] = func_11207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11066_call = mod.get_global_var('func_11066')
func_11067_call = mutated_mod.get_global_var('func_11067')
call_11218 = func_11066_call()
call_11219 = func_11066_call()
func_8170_call = mod.get_global_var('func_8170')
func_8173_call = mutated_mod.get_global_var('func_8173')
var_11226 = relay.var("var_11226", dtype = "float64", shape = (462,))#candidate|11226|(462,)|var|float64
call_11225 = relay.TupleGetItem(func_8170_call(relay.reshape(var_11226.astype('float64'), [462,])), 3)
call_11227 = relay.TupleGetItem(func_8173_call(relay.reshape(var_11226.astype('float64'), [462,])), 3)
func_8387_call = mod.get_global_var('func_8387')
func_8390_call = mutated_mod.get_global_var('func_8390')
const_11231 = relay.const([0.605150,-3.553080,4.645009,9.474676,2.272139,9.017735,-4.692810,-9.552669,-4.504199,3.526806,-4.425413,-4.010903,-4.538061,5.624978,-8.421265,0.388838,7.421392,-6.855109,-8.461368,3.059256,7.691261,-8.048708,4.424737,-8.179805,1.164228,6.911082,1.993987,-5.640457,4.316312,-3.012878,0.226357,8.243737,1.450075,6.140293,9.463673,2.152539,9.607195,7.919151,-9.910715,6.026855,1.145003,8.234430,-4.501215,-6.265948,3.032688,-9.066857,-6.081827,5.699373,0.493837,8.801649,-9.795793,0.818719,-5.493130,-3.900721,-3.472445,1.566307,-0.078918,-1.013496,-3.107771,-6.055988,2.912259,-3.230541,6.057523,5.313776,-4.164508,2.760405,0.641621,4.754186,7.592401,-4.423158,5.965003,2.436727,-0.523402,-5.474746,-7.580935,5.405780,4.235491,-0.500017,6.790479,2.152831,-0.723775,-9.981621,7.472427,-8.055377,4.228841,-6.855176,-1.735751,-2.473243,-6.381333,1.621109,-1.799826,-9.843400,3.083503,-6.491295,2.948507,-2.956860,-7.776887,8.158151,-4.482156,2.814322,5.229136,-4.908916,6.166615,-7.640929,-4.875073,6.893458,-1.871796,-6.009078,-6.144072,4.932389,8.908242,1.589745,-0.392052,4.457186,-0.804926,5.554272,6.448738,2.113846,-5.597649,-1.611260,-4.109570,5.664014,2.520600,-2.203625,-8.580982,8.935869,1.763023,-9.180680,-3.473089,3.176872,-9.666718,-0.962039,-5.278120,-6.280466,1.785920,4.579010,-9.490180,0.116797,6.511175,3.812883,6.413840,7.749651,-2.579920,-9.259393,3.548843,7.105977,-1.709914,3.988848,-1.727423,-7.160958,-6.207414,3.877448,-5.492823,2.929688,-3.060532,-0.250173,6.316831,-5.442817,7.774540,-6.644427,-6.770845,-8.114859,9.934440,-1.529480,9.651305,-2.018261,-2.036955,2.294154,-8.107787,-7.760345,9.123230,-4.272822,-3.264273,-4.781399,0.568929,2.954813,6.175245,5.800035,5.413673,-3.067934,-9.567258,3.898084,-3.006035,5.913161,3.163404,6.253497,-9.939307,4.119611,-6.851579,-3.004290,6.543685,-4.127685,1.296400,3.639814,1.179399,-4.721282,-1.870874,-9.602931,-2.412367,4.671901,-8.751503,-2.253299,-9.545728,8.469770,-7.203548,9.541062,2.885091,-9.907121,0.821250,-5.917331,6.001215,-6.487023,-1.855190,-1.017371,-3.885130,-2.197250,-8.202121,-3.056608,-8.824144,8.372432,2.152808,-3.057333,-5.551813,-7.060774], dtype = "float32")#candidate|11231|(224,)|const|float32
const_11232 = relay.const([[-9.446005,-9.364481,-1.524726,7.117952,8.357818,1.025743,-4.717808,7.115070,-5.791528,-0.417121,-6.062154,9.091208,-5.295645,3.349426,6.402082,6.302512,-4.948712,-8.730727,3.101599,8.952874,5.159604,-7.134320,-0.239921,-4.539507,-9.688211,-3.832708,9.177348,5.835232,-4.434642,7.755005,2.669697,2.345046,-1.557989,-7.856311,9.972598,-1.045869,6.258926,6.710866,-6.225669,-0.034071,-2.437452,6.841832,3.207522,-9.808000,1.579019,2.689049,-4.539263,-0.705015,2.246129,-1.272447,-9.677675,2.660239,8.188778,-3.424518,-5.819327,8.732006,6.044698,2.693403,1.759525,-9.555709,9.589764,-7.956353,-1.483789,-2.715697,4.875935,2.121594,1.250645,5.484002,2.441059,-1.391181,0.913989,-4.413290,3.207639,3.261311,1.705915,4.834698,5.098290,5.757697,4.039990,9.287044,-2.378801,-5.855304,-2.112826,4.196457,1.618977,5.681436,1.942026,4.683518,8.265925,7.651898,-4.993137,7.800940,-8.878329,-9.567089,-6.919431,5.752239,-7.227388,-4.010853,6.683302,-6.752653,-4.425478,3.250284,4.171518,-1.478185,5.253322,-3.659973,-2.169415,-9.519619,-3.540820,-6.815372,-7.692848,9.017855,-1.211579,2.120770,7.079455,-3.595976,-7.093131,9.196635,6.479550,-4.031036,-4.117016,-4.521716,7.601301,1.042446,2.912112,-8.875445,0.441417,-8.898645,-4.337331,-6.202406,5.163774,5.990404,-8.018481,-1.808177,-9.606685,4.089282,6.823284,1.412391,-2.887520,-0.462407,6.303665,2.347294,-9.007921,-0.564172,-9.269835,4.089791,4.243831,9.011051,2.858072,2.917548,-9.931903,-8.057826,9.788472,-7.819562,0.069514,7.395451,-2.358135,9.514477,9.841034,4.841581,-0.639071,0.873020,2.861038,-5.010229,-6.616944,-2.951858,-2.185449,-3.481755],[-0.109390,9.097611,4.236130,-0.485725,7.514670,1.786954,1.783990,-0.735984,1.244677,-5.709671,-2.654800,8.215758,-0.726404,-7.975977,7.061633,-4.453799,4.235825,0.716072,1.771296,-7.896803,8.224554,2.563006,-1.521945,0.021255,2.971639,-4.068705,-1.552101,2.065009,4.710124,8.111264,-7.174628,6.679409,0.425043,9.922487,-5.929574,0.399299,7.292564,2.105017,3.836603,6.559458,-5.833526,-7.135988,1.270285,0.686067,5.566174,2.904061,3.213945,-7.221134,0.163822,2.291593,5.917246,-7.027146,0.022366,4.658975,-4.627505,1.247022,-9.348569,7.979862,1.233781,9.069274,6.566741,1.044774,3.455448,8.142259,2.813669,-5.886497,1.509650,5.741504,-4.882430,8.180306,0.101244,7.900623,3.630223,4.154775,-5.027399,7.059237,-0.396445,-3.386085,-6.098771,-5.748746,-3.745243,4.298133,6.856934,-2.701478,9.815889,-5.160156,-9.949673,-1.633915,-6.457795,7.593675,-1.763258,-0.326992,9.366124,-6.405508,-6.684635,4.766119,-0.497405,7.017188,3.154118,1.599608,4.512396,8.615086,-2.249058,8.559986,2.858210,9.546067,-9.987838,-7.804068,-6.998411,5.599786,-5.990623,4.695219,0.847636,-7.253653,-6.793436,9.191179,-4.465799,6.512404,5.478161,3.171535,0.149960,-2.480356,9.885068,9.106297,-7.102353,-9.622795,1.341744,3.139758,-1.400554,8.574774,0.894528,7.001021,8.490189,-3.850358,1.658964,-4.740287,-6.014553,-8.009863,3.145260,4.182184,2.517335,-2.118733,5.749099,0.521044,-9.353267,-4.520193,-1.750163,9.203477,1.539407,-2.311982,7.448325,7.233986,9.532741,6.188466,-8.893253,-9.736450,4.704911,-9.137708,-7.517991,-1.767068,8.864337,6.163195,-2.306619,6.171322,-3.428495,6.787572,-8.515340,-2.480756],[-5.177956,5.943200,-7.765761,-7.763866,-1.141535,6.971559,3.169425,8.232185,-7.893847,-7.584996,8.978431,-4.832337,5.452050,-7.010266,9.552438,4.279419,-1.234456,-3.281719,6.101650,-8.916601,0.770439,-1.340934,-2.862393,5.630780,-0.541607,6.730713,-9.154943,-2.587363,5.041492,4.330068,3.369235,7.826302,7.427924,-2.808372,-0.641187,7.337066,-2.453338,-8.096796,4.899555,-9.500580,8.597279,-8.245566,5.908125,7.834825,0.463356,2.209935,-8.146091,-7.832220,-8.435779,-2.840229,-6.250323,8.029596,5.041325,7.722556,1.685342,1.369225,6.366885,-8.928882,-2.987104,-5.343698,2.688417,-9.509087,-7.248469,2.027272,6.718652,6.501573,9.292608,3.464904,3.419293,-6.964820,-1.222860,1.681160,9.944034,-8.591635,-5.920170,7.627453,5.964096,9.863824,-2.197376,-8.334897,-6.154225,2.672756,-3.176995,-0.123296,8.149764,1.585571,-2.116105,-2.025345,-5.784100,1.981236,2.034333,-0.853101,-3.491070,-9.689809,8.858005,6.671170,-5.589173,1.616530,5.056296,-4.212827,-7.394426,-9.963298,5.572724,-5.689320,5.509702,-9.659973,-1.776405,9.051221,-0.545159,-2.873849,6.159551,9.807501,-6.089218,-1.445142,-4.750864,2.437102,-8.745661,-4.196502,-5.982688,-9.163319,-2.169896,-0.830641,9.078273,-5.523468,2.333101,0.777621,-6.890815,-4.311674,-5.046202,-6.226417,-3.891519,8.304197,8.182280,-0.965140,5.359702,5.623751,0.795659,-9.213349,-4.438326,-6.312694,1.987908,-8.372173,-5.843585,0.774250,5.534078,7.586915,5.446449,5.305255,-9.971498,-5.961386,-4.346602,-1.981171,0.858223,-0.745048,5.693342,9.865289,7.194535,-6.744451,-9.141250,-7.067184,5.711769,0.297349,-3.483461,9.077660,-5.095195,-7.487950,5.187755,-9.471412],[-4.490483,-9.099464,3.743577,-5.205913,8.612557,-7.483134,-1.419130,-4.431761,5.314787,-7.465640,-2.993064,-4.217800,9.163329,3.737703,4.132522,4.871315,-1.987775,7.625933,4.022181,-9.366795,-8.814137,4.697822,4.637229,-0.019251,6.444198,0.951143,-3.981412,2.834262,-9.658600,1.616528,-8.674095,5.686323,-5.742850,7.611634,8.465872,2.723653,-3.614762,-7.457818,-3.595826,-2.128022,-8.134912,1.152806,-2.577618,-1.544821,9.916534,-8.937897,3.989201,-9.980649,2.403768,0.241481,-8.384722,-8.215249,6.652362,-6.350238,-9.777923,-1.296480,-6.890039,6.152142,-9.256921,-1.527667,7.990683,4.191606,-6.291125,4.602080,5.258643,-0.135622,1.723707,7.755254,-1.196589,-2.797893,-5.932807,6.423737,-7.151485,3.467018,-8.444513,-2.789440,4.464329,-0.442468,4.489128,6.249083,2.835811,-4.016866,-3.665393,7.140611,-4.354617,6.708560,-8.288420,8.548249,-5.532787,5.889856,-3.309612,-7.177738,-5.255897,-1.894253,-5.783096,-4.698045,5.917672,-5.711456,-4.658850,-6.815067,7.368280,-1.138468,-4.706546,-2.040919,-2.080644,-7.496393,4.309169,-5.096261,3.538729,-8.007994,-9.910677,3.086286,6.767660,-7.364804,-5.314120,-1.652659,-8.491104,7.477781,9.898568,2.408257,-2.554653,-2.020726,5.223555,9.659829,3.478860,-4.632788,-4.325215,-4.178344,-3.921479,-9.797148,9.464669,-0.949550,8.578647,3.890607,-7.240381,-2.329776,-2.038983,-0.225791,-0.505112,-1.419945,1.530181,7.078720,6.617094,-4.403574,-7.742114,-8.185800,0.805638,-8.236222,-5.960613,7.647436,-7.784160,3.814202,2.836829,-8.018327,4.172871,4.396080,-7.746948,8.246314,-7.239429,6.727277,-1.317298,0.997501,-4.049315,-4.105718,2.497819,3.518260,1.741097,-4.984809]], dtype = "float32")#candidate|11232|(4, 168)|const|float32
call_11230 = relay.TupleGetItem(func_8387_call(relay.reshape(const_11231.astype('float32'), [224,]), relay.reshape(const_11232.astype('float32'), [672,]), ), 0)
call_11233 = relay.TupleGetItem(func_8390_call(relay.reshape(const_11231.astype('float32'), [224,]), relay.reshape(const_11232.astype('float32'), [672,]), ), 0)
func_6502_call = mod.get_global_var('func_6502')
func_6504_call = mutated_mod.get_global_var('func_6504')
call_11268 = relay.TupleGetItem(func_6502_call(relay.reshape(const_11232.astype('float32'), [336, 2])), 0)
call_11269 = relay.TupleGetItem(func_6504_call(relay.reshape(const_11232.astype('float32'), [336, 2])), 0)
output = relay.Tuple([call_11218,call_11225,var_11226,call_11230,const_11231,const_11232,call_11268,])
output2 = relay.Tuple([call_11219,call_11227,var_11226,call_11233,const_11231,const_11232,call_11269,])
func_11280 = relay.Function([var_11226,], output)
mod['func_11280'] = func_11280
mod = relay.transform.InferType()(mod)
mutated_mod['func_11280'] = func_11280
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11281 = relay.var("var_11281", dtype = "float64", shape = (462,))#candidate|11281|(462,)|var|float64
func_11280_call = mutated_mod.get_global_var('func_11280')
call_11282 = func_11280_call(var_11281)
output = call_11282
func_11283 = relay.Function([var_11281], output)
mutated_mod['func_11283'] = func_11283
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11288 = relay.var("var_11288", dtype = "float32", shape = (16, 15, 1))#candidate|11288|(16, 15, 1)|var|float32
uop_11289 = relay.asin(var_11288.astype('float32')) # shape=(16, 15, 1)
output = uop_11289
output2 = uop_11289
func_11295 = relay.Function([var_11288,], output)
mod['func_11295'] = func_11295
mod = relay.transform.InferType()(mod)
mutated_mod['func_11295'] = func_11295
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11296 = relay.var("var_11296", dtype = "float32", shape = (16, 15, 1))#candidate|11296|(16, 15, 1)|var|float32
func_11295_call = mutated_mod.get_global_var('func_11295')
call_11297 = func_11295_call(var_11296)
output = call_11297
func_11298 = relay.Function([var_11296], output)
mutated_mod['func_11298'] = func_11298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8417_call = mod.get_global_var('func_8417')
func_8418_call = mutated_mod.get_global_var('func_8418')
call_11328 = relay.TupleGetItem(func_8417_call(), 1)
call_11329 = relay.TupleGetItem(func_8418_call(), 1)
output = call_11328
output2 = call_11329
func_11336 = relay.Function([], output)
mod['func_11336'] = func_11336
mod = relay.transform.InferType()(mod)
output = func_11336()
func_11337 = relay.Function([], output)
mutated_mod['func_11337'] = func_11337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8801_call = mod.get_global_var('func_8801')
func_8802_call = mutated_mod.get_global_var('func_8802')
call_11400 = relay.TupleGetItem(func_8801_call(), 0)
call_11401 = relay.TupleGetItem(func_8802_call(), 0)
output = call_11400
output2 = call_11401
func_11422 = relay.Function([], output)
mod['func_11422'] = func_11422
mod = relay.transform.InferType()(mod)
mutated_mod['func_11422'] = func_11422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11422_call = mutated_mod.get_global_var('func_11422')
call_11423 = func_11422_call()
output = call_11423
func_11424 = relay.Function([], output)
mutated_mod['func_11424'] = func_11424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7227_call = mod.get_global_var('func_7227')
func_7229_call = mutated_mod.get_global_var('func_7229')
call_11515 = relay.TupleGetItem(func_7227_call(), 0)
call_11516 = relay.TupleGetItem(func_7229_call(), 0)
output = call_11515
output2 = call_11516
func_11531 = relay.Function([], output)
mod['func_11531'] = func_11531
mod = relay.transform.InferType()(mod)
output = func_11531()
func_11532 = relay.Function([], output)
mutated_mod['func_11532'] = func_11532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8445_call = mod.get_global_var('func_8445')
func_8446_call = mutated_mod.get_global_var('func_8446')
call_11538 = func_8445_call()
call_11539 = func_8445_call()
func_9082_call = mod.get_global_var('func_9082')
func_9085_call = mutated_mod.get_global_var('func_9085')
const_11549 = relay.const([8.479021,-0.493200,4.784610,3.872122,8.912460,5.074443,6.248061,-0.601115,3.249289,-0.628592,-0.973333,5.103857,4.206580,9.247667,-5.505257,8.077570,2.915357,3.265186,-9.062090,-4.419359,-0.927376,-7.559813,-2.985024,-2.625830,-2.595879,-2.466683,7.668210,7.900890,-9.675022,-2.250819,9.282433,-6.933788,5.928703,-7.392183,2.789154,5.507168,-7.981528,3.319989,0.278380,-0.559117,-4.702020,-3.688906,-7.939074,-8.466834,-5.122104,8.642153,2.239885,2.871577,-0.438927,-6.861815,-1.022210,1.952139,-3.196446,-5.798815,-7.522802,1.348605,8.257020,-8.679143,-9.144272,5.910109,1.666188,-4.589521,-7.149341,9.455849,1.459068,-4.437065,-0.959065,-3.708298,7.756136,-7.880781,8.707911,-0.420667,2.060796,-9.188281,-2.175442,-2.599148,2.950104,-7.155731,-8.162614,-8.696005,5.444412,-5.011358,-9.180926,-0.005516,0.161206,7.322955,7.055006,9.823282,-3.242822,-7.326287,9.871808,4.968374,9.879808,1.711414,6.487463,-4.675585,-5.432027,-9.826137,8.214285,-6.455788,3.745086,-3.567447,-1.180379,4.728879,1.712290,5.899655,6.816382,7.393396,-4.728259,-2.878884,-8.910951,-1.711589,9.185426,0.517040,-9.828016,9.562678,9.660338,-9.862573,-8.665773,7.275398,8.879703,-3.703240,2.189646,6.392703,-8.564570,2.227836,-8.372305,-1.129203,0.340707,8.747001,1.443631,4.352316,-2.502592,-9.431603,-8.354207,-9.930301,-4.869391,-2.140082,5.169001,2.226293,2.565245,-4.870239,8.346087,-4.012077,6.180689,-3.065089,-1.202252,3.160812,7.363431,3.855288,5.675675,4.435309,3.630145,6.774343,0.247334,-6.127573,-3.754933,9.285399,7.069433,-0.997247,5.009301,-8.095456,-6.282416,-6.662734,2.097303,9.414722,1.222492,4.030096,-9.948340,3.572824,5.342847,3.687013,3.631849,3.205008,-7.607396,5.660359,-6.186024,6.675102,5.967866,-1.210036,-7.099467,-4.835093,-8.804490,-6.822439,-9.786200,8.977723,0.705276,1.333438,9.592609,-1.438492,-4.276122,8.584588,8.701936,-2.110534,-5.942740,0.114166,-4.387305,-4.602856,4.631146,-0.709259,6.574670,-0.875885,-1.626438,5.598207,-2.838652,3.057752,4.785145,-6.965466,2.957941,1.434797,1.782579,-5.399322,-2.907252,6.614974,5.695068,-8.020458,5.913952,-6.579544,-4.485348,9.498054,5.746195,-5.285697,4.730766,5.543371,5.387765,-7.890078,4.755829,-3.305759,7.234138,-5.750765,9.339501,5.868185,4.405320,-6.305812,5.627984,-9.134869,-6.191982,4.698706,4.558218,8.045581,-0.875778,-3.565374,-0.165050,5.689087,-6.161241,4.519213,-9.210750,-8.578372,-1.983784,-4.284283,-0.356201,-0.375576,9.509219,-3.098451,-8.668007,0.010111,8.168507,-2.193181,-2.900905,2.302883,1.964942,4.015770,-5.304149,9.705915,-0.263141,-7.335388,2.934144,-6.887752,7.799869,1.391831,-7.392942,-6.239447,-3.790631,6.031195,-3.747350,2.708951,0.508015,-9.828698,-8.935963,-3.453329,3.165874,2.047045,4.980447,1.002411,-8.153408,-9.446960,0.127571,-1.768625,-2.031222,-6.927609,6.267686,-4.252137,-9.850663,-5.379859,3.770103,-9.239688,4.235464,2.400382,6.253796,9.594774,1.006213,-6.034398,-9.100929,9.556804,-9.302378,-4.028074,1.518269,6.718234,2.818752,7.221689,-8.930288,9.806732,9.816388,9.483526,0.056986,7.804391,-8.269670,9.601595,-3.999366,3.181204,-0.409504,-0.433571,2.233802,-1.754240,5.392480,2.208921,7.714750,-6.356597,8.537558,6.142813,-4.730905,3.522287,-3.025358,-8.303912,9.980288,4.075499,8.356225,-3.051471,0.430566,6.435370,-6.685376,1.439206,2.507663,-3.111713,0.129671,6.359531,-8.228579,-3.707271,1.623831,-7.049551,1.651949,-4.900541,7.908786,7.329069,8.549633,-5.919343,3.992781,0.862252,2.571106,5.404101,7.704577,-3.224635,1.571093,-1.606729,8.768000,-9.305579,9.842289,8.903256,2.989705,1.809067,8.679639,-9.334933,3.477472,2.207072,3.618451,6.398991,5.983893,2.346866,6.669314,4.748248,-8.307669,6.918425,2.513617,-6.839313,2.420065,5.142897,7.691127,2.772874,-1.917992,3.074307,8.662073,-3.702603,2.098395,3.414581,-9.126234,3.619655,-2.244380,-6.442646,-5.725303,-0.172282,-4.203809,-0.206458,4.132697,4.295391,8.681262,-0.497428,1.375168,7.884043,-1.494070,3.591973,-6.098460,4.091026,2.732490,-8.640929,-0.140550,7.283047,-0.166481,8.107382,1.124461,2.923966,6.512101,2.194109,1.348224,8.825507,-7.668101,-9.502839,-9.574783,7.259370,0.933072,2.312994,7.736593,-1.303909,-0.525055,9.823911,-9.996999,-0.737947,-4.450916,7.353476,1.047512,5.863802,7.176037,-8.270333,1.969380,-8.390284,1.269540,8.670452,-2.139296,-2.580178,2.091477,0.349396,7.751323,8.871051,2.363264,5.963052,-0.694177,-3.018282,-4.420506,0.857823,8.641176,-3.008013,0.159561,6.725078,0.470313,-1.921339,5.518927,6.829748,-3.819704,7.565360,9.627393,-1.002558,3.302415,8.484391,6.246866,-6.240530,-5.119160,2.737195,-6.377949,-8.449238,-2.066202,-7.732077,-5.641901,-6.405773,-6.675745,-4.716414,-9.232005,5.453554,-9.779774,2.336908,1.754871,-4.981424,-1.977980,1.404386,-1.330727,5.229991,9.416930,-2.524573,2.539503,-3.897114,-8.797305,0.816931,3.833540,9.843255,7.132997,9.036485,-2.554177,4.143485,9.458814,4.345197,-9.018826,-7.057899,-4.423236,7.132982,-4.348409,8.938090,-2.789567,3.355909,-7.178415,9.705883,-4.069353,-3.532281,-6.343784,4.427976,8.372596,5.754004,8.840161,2.886866,4.146978,1.534582,-2.022478,-6.704380,4.815061,-5.100272,-7.108255,-2.846570,-6.241661,5.580365,-0.206928,-7.942312,1.916967,5.237127,5.748596,-6.554127,2.883047,-5.620726,9.798745,-1.494537,2.183513,-5.676888,3.064722,-6.653095,9.157268,-8.651971,-2.095766,5.880857,7.119691,5.599536,4.764249,1.761314,1.766194,-2.833344,-3.778503,-3.094927,1.477883,-1.617542,0.905122,-8.255696,-5.191423,-9.166174,0.061467,0.280442,-3.707459,-5.400375,-5.643855,-6.743007,5.492308,-4.648814,4.380446,2.891603,5.589157,2.407298,-1.567283,-3.500546,5.577809,-5.451876,-0.118951,6.797009,-9.376998,6.643155,5.194514,-6.845099,-8.489576,-7.479375,9.083670,4.149815,4.227981,7.545506,-7.723179,0.898851,-0.958682,5.701513,0.963525,8.729944,-4.996887,-2.661768,-5.701485,-7.997203,-2.196662,5.377071,7.364439,-8.927772,6.769436,-0.519347,4.686712,1.195541,3.758698,2.361567,0.535377,-4.408256,9.321481,8.026313,-9.920477,-1.865330,7.190913,-4.234515,-1.728492,0.913647,1.606823,-1.629400,8.241530,-5.475653,-5.256162,1.273196,5.243359,9.201375,4.198234,-4.004510,-3.915669,-3.187881,-1.192762,-7.400886,5.143366,6.855879,-8.388820,-7.932938,8.157785,-2.704268,-4.601179,-9.664379,-0.636442,-4.531602,-0.862043,2.991884,6.572887,-3.138801,-7.239483,2.335290,4.908605,-5.634950,-7.354706,4.619688,-5.280156,4.995146,-8.991724,-3.908941,1.366829,-2.754760,1.578602,-9.912282,2.201146,6.632237,-8.428623,7.738298,9.890973,3.130233,-4.675857,6.100506,-9.721158,6.179873,-3.604900,8.166052,-2.747611,-0.848287,3.395523,9.834616,4.713782,8.219889,5.326362,2.393032,-7.315613,-1.569771,-5.432670,6.896264,-4.316850,9.833874,-5.177712,-2.204140,-0.380188,9.392404,4.398540,-0.887152], dtype = "float64")#candidate|11549|(700,)|const|float64
call_11548 = relay.TupleGetItem(func_9082_call(relay.reshape(const_11549.astype('float64'), [700,])), 0)
call_11550 = relay.TupleGetItem(func_9085_call(relay.reshape(const_11549.astype('float64'), [700,])), 0)
func_6997_call = mod.get_global_var('func_6997')
func_6999_call = mutated_mod.get_global_var('func_6999')
var_11564 = relay.var("var_11564", dtype = "float32", shape = (240,))#candidate|11564|(240,)|var|float32
call_11563 = relay.TupleGetItem(func_6997_call(relay.reshape(var_11564.astype('float32'), [12, 5, 4])), 0)
call_11565 = relay.TupleGetItem(func_6999_call(relay.reshape(var_11564.astype('float32'), [12, 5, 4])), 0)
func_11093_call = mod.get_global_var('func_11093')
func_11094_call = mutated_mod.get_global_var('func_11094')
call_11572 = relay.TupleGetItem(func_11093_call(), 1)
call_11573 = relay.TupleGetItem(func_11094_call(), 1)
func_6438_call = mod.get_global_var('func_6438')
func_6439_call = mutated_mod.get_global_var('func_6439')
call_11585 = relay.TupleGetItem(func_6438_call(), 0)
call_11586 = relay.TupleGetItem(func_6439_call(), 0)
output = relay.Tuple([call_11538,call_11548,const_11549,call_11563,var_11564,call_11572,call_11585,])
output2 = relay.Tuple([call_11539,call_11550,const_11549,call_11565,var_11564,call_11573,call_11586,])
func_11596 = relay.Function([var_11564,], output)
mod['func_11596'] = func_11596
mod = relay.transform.InferType()(mod)
var_11597 = relay.var("var_11597", dtype = "float32", shape = (240,))#candidate|11597|(240,)|var|float32
output = func_11596(var_11597)
func_11598 = relay.Function([var_11597], output)
mutated_mod['func_11598'] = func_11598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8712_call = mod.get_global_var('func_8712')
func_8713_call = mutated_mod.get_global_var('func_8713')
call_11600 = func_8712_call()
call_11601 = func_8712_call()
output = relay.Tuple([call_11600,])
output2 = relay.Tuple([call_11601,])
func_11621 = relay.Function([], output)
mod['func_11621'] = func_11621
mod = relay.transform.InferType()(mod)
mutated_mod['func_11621'] = func_11621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11621_call = mutated_mod.get_global_var('func_11621')
call_11622 = func_11621_call()
output = call_11622
func_11623 = relay.Function([], output)
mutated_mod['func_11623'] = func_11623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9474_call = mod.get_global_var('func_9474')
func_9476_call = mutated_mod.get_global_var('func_9476')
call_11667 = relay.TupleGetItem(func_9474_call(), 0)
call_11668 = relay.TupleGetItem(func_9476_call(), 0)
output = relay.Tuple([call_11667,])
output2 = relay.Tuple([call_11668,])
func_11678 = relay.Function([], output)
mod['func_11678'] = func_11678
mod = relay.transform.InferType()(mod)
mutated_mod['func_11678'] = func_11678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11678_call = mutated_mod.get_global_var('func_11678')
call_11679 = func_11678_call()
output = call_11679
func_11680 = relay.Function([], output)
mutated_mod['func_11680'] = func_11680
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11695 = relay.var("var_11695", dtype = "uint8", shape = ())#candidate|11695|()|var|uint8
var_11696 = relay.var("var_11696", dtype = "uint8", shape = (14, 16, 2))#candidate|11696|(14, 16, 2)|var|uint8
bop_11697 = relay.greater(var_11695.astype('bool'), var_11696.astype('bool')) # shape=(14, 16, 2)
func_5159_call = mod.get_global_var('func_5159')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_11717 = relay.TupleGetItem(func_5159_call(), 0)
call_11718 = relay.TupleGetItem(func_5161_call(), 0)
output = relay.Tuple([bop_11697,call_11717,])
output2 = relay.Tuple([bop_11697,call_11718,])
func_11726 = relay.Function([var_11695,var_11696,], output)
mod['func_11726'] = func_11726
mod = relay.transform.InferType()(mod)
mutated_mod['func_11726'] = func_11726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11726_call = mutated_mod.get_global_var('func_11726')
var_11728 = relay.var("var_11728", dtype = "uint8", shape = ())#candidate|11728|()|var|uint8
var_11729 = relay.var("var_11729", dtype = "uint8", shape = (14, 16, 2))#candidate|11729|(14, 16, 2)|var|uint8
call_11727 = func_11726_call(var_11728,var_11729,)
output = call_11727
func_11730 = relay.Function([var_11728,var_11729,], output)
mutated_mod['func_11730'] = func_11730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6761_call = mod.get_global_var('func_6761')
func_6762_call = mutated_mod.get_global_var('func_6762')
call_11769 = func_6761_call()
call_11770 = func_6761_call()
func_10386_call = mod.get_global_var('func_10386')
func_10387_call = mutated_mod.get_global_var('func_10387')
call_11788 = func_10386_call()
call_11789 = func_10386_call()
func_11181_call = mod.get_global_var('func_11181')
func_11183_call = mutated_mod.get_global_var('func_11183')
var_11793 = relay.var("var_11793", dtype = "int32", shape = (390,))#candidate|11793|(390,)|var|int32
call_11792 = relay.TupleGetItem(func_11181_call(relay.reshape(var_11793.astype('int32'), [390,])), 0)
call_11794 = relay.TupleGetItem(func_11183_call(relay.reshape(var_11793.astype('int32'), [390,])), 0)
func_6633_call = mod.get_global_var('func_6633')
func_6635_call = mutated_mod.get_global_var('func_6635')
call_11802 = func_6633_call()
call_11803 = func_6633_call()
output = relay.Tuple([call_11769,call_11788,call_11792,var_11793,call_11802,])
output2 = relay.Tuple([call_11770,call_11789,call_11794,var_11793,call_11803,])
func_11805 = relay.Function([var_11793,], output)
mod['func_11805'] = func_11805
mod = relay.transform.InferType()(mod)
var_11806 = relay.var("var_11806", dtype = "int32", shape = (390,))#candidate|11806|(390,)|var|int32
output = func_11805(var_11806)
func_11807 = relay.Function([var_11806], output)
mutated_mod['func_11807'] = func_11807
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11809 = relay.var("var_11809", dtype = "float64", shape = (15, 3, 11))#candidate|11809|(15, 3, 11)|var|float64
var_11810 = relay.var("var_11810", dtype = "float64", shape = (15, 3, 11))#candidate|11810|(15, 3, 11)|var|float64
bop_11811 = relay.divide(var_11809.astype('float64'), relay.reshape(var_11810.astype('float64'), relay.shape_of(var_11809))) # shape=(15, 3, 11)
output = bop_11811
output2 = bop_11811
func_11816 = relay.Function([var_11809,var_11810,], output)
mod['func_11816'] = func_11816
mod = relay.transform.InferType()(mod)
var_11817 = relay.var("var_11817", dtype = "float64", shape = (15, 3, 11))#candidate|11817|(15, 3, 11)|var|float64
var_11818 = relay.var("var_11818", dtype = "float64", shape = (15, 3, 11))#candidate|11818|(15, 3, 11)|var|float64
output = func_11816(var_11817,var_11818,)
func_11819 = relay.Function([var_11817,var_11818,], output)
mutated_mod['func_11819'] = func_11819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9503_call = mod.get_global_var('func_9503')
func_9505_call = mutated_mod.get_global_var('func_9505')
call_11873 = relay.TupleGetItem(func_9503_call(), 0)
call_11874 = relay.TupleGetItem(func_9505_call(), 0)
output = call_11873
output2 = call_11874
func_11875 = relay.Function([], output)
mod['func_11875'] = func_11875
mod = relay.transform.InferType()(mod)
output = func_11875()
func_11876 = relay.Function([], output)
mutated_mod['func_11876'] = func_11876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8663_call = mod.get_global_var('func_8663')
func_8664_call = mutated_mod.get_global_var('func_8664')
call_11907 = relay.TupleGetItem(func_8663_call(), 0)
call_11908 = relay.TupleGetItem(func_8664_call(), 0)
func_3673_call = mod.get_global_var('func_3673')
func_3675_call = mutated_mod.get_global_var('func_3675')
const_11919 = relay.const([4.735529,2.484971,-8.959361,2.178665,-8.854098,-1.053242,2.892991,-1.904990,-3.133058,8.569719,-9.753445,-7.165692,-3.460562,7.038187,-0.010888,6.928238,-2.372532,2.697712,-1.701511,-6.167653,5.466701,-3.340659,2.764306,8.384969,0.264609,-8.367641,6.897105,3.087030,8.611769,1.853250,4.920782,-5.365047,8.916849,0.320215,-3.224995,-7.644807,-8.217148,-4.730357,1.303333,8.849191], dtype = "float32")#candidate|11919|(40,)|const|float32
call_11918 = relay.TupleGetItem(func_3673_call(relay.reshape(const_11919.astype('float32'), [10, 2, 2])), 2)
call_11920 = relay.TupleGetItem(func_3675_call(relay.reshape(const_11919.astype('float32'), [10, 2, 2])), 2)
func_10177_call = mod.get_global_var('func_10177')
func_10180_call = mutated_mod.get_global_var('func_10180')
call_11925 = relay.TupleGetItem(func_10177_call(relay.reshape(call_11907.astype('float64'), [12, 5, 4])), 0)
call_11926 = relay.TupleGetItem(func_10180_call(relay.reshape(call_11907.astype('float64'), [12, 5, 4])), 0)
output = relay.Tuple([call_11907,call_11918,const_11919,call_11925,])
output2 = relay.Tuple([call_11908,call_11920,const_11919,call_11926,])
func_11931 = relay.Function([], output)
mod['func_11931'] = func_11931
mod = relay.transform.InferType()(mod)
output = func_11931()
func_11932 = relay.Function([], output)
mutated_mod['func_11932'] = func_11932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7769_call = mod.get_global_var('func_7769')
func_7771_call = mutated_mod.get_global_var('func_7771')
call_12006 = relay.TupleGetItem(func_7769_call(), 1)
call_12007 = relay.TupleGetItem(func_7771_call(), 1)
func_11621_call = mod.get_global_var('func_11621')
func_11623_call = mutated_mod.get_global_var('func_11623')
call_12039 = relay.TupleGetItem(func_11621_call(), 0)
call_12040 = relay.TupleGetItem(func_11623_call(), 0)
output = relay.Tuple([call_12006,call_12039,])
output2 = relay.Tuple([call_12007,call_12040,])
func_12041 = relay.Function([], output)
mod['func_12041'] = func_12041
mod = relay.transform.InferType()(mod)
output = func_12041()
func_12042 = relay.Function([], output)
mutated_mod['func_12042'] = func_12042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7376_call = mod.get_global_var('func_7376')
func_7377_call = mutated_mod.get_global_var('func_7377')
call_12078 = relay.TupleGetItem(func_7376_call(), 0)
call_12079 = relay.TupleGetItem(func_7377_call(), 0)
uop_12080 = relay.acos(call_12078.astype('float64')) # shape=(2, 20)
uop_12082 = relay.acos(call_12079.astype('float64')) # shape=(2, 20)
func_5649_call = mod.get_global_var('func_5649')
func_5650_call = mutated_mod.get_global_var('func_5650')
call_12084 = func_5649_call()
call_12085 = func_5649_call()
func_6158_call = mod.get_global_var('func_6158')
func_6160_call = mutated_mod.get_global_var('func_6160')
call_12093 = func_6158_call()
call_12094 = func_6158_call()
output = relay.Tuple([uop_12080,call_12084,call_12093,])
output2 = relay.Tuple([uop_12082,call_12085,call_12094,])
func_12122 = relay.Function([], output)
mod['func_12122'] = func_12122
mod = relay.transform.InferType()(mod)
mutated_mod['func_12122'] = func_12122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12122_call = mutated_mod.get_global_var('func_12122')
call_12123 = func_12122_call()
output = call_12123
func_12124 = relay.Function([], output)
mutated_mod['func_12124'] = func_12124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6872_call = mod.get_global_var('func_6872')
func_6874_call = mutated_mod.get_global_var('func_6874')
call_12176 = relay.TupleGetItem(func_6872_call(), 1)
call_12177 = relay.TupleGetItem(func_6874_call(), 1)
func_5997_call = mod.get_global_var('func_5997')
func_6002_call = mutated_mod.get_global_var('func_6002')
const_12181 = relay.const([[1.094731,-6.813157,-3.497762,-8.680434,8.927090,3.152523,7.370846,-8.204708,1.869700,2.417948,-0.603588,-9.513360,8.346743,-0.369536,3.932742,-9.073046,-7.774523,-4.584924,7.245880,-0.161219,-2.438989,-8.917732,-6.451128,-8.421112,7.134957,-6.519205,-7.781798,2.075645,-8.550346,4.003646,6.939618,-3.743056,-9.019909,-5.137656,4.376488,2.068522,0.590684,7.353638,-8.416716,7.302415,7.315242,7.062009,-9.474294,-6.621070,-0.650617,-8.731174,2.651058,5.639181,9.781631,4.615604,4.448492,-6.037442,-0.232871,-7.881069,7.609012,7.620079,5.778036,-1.931933,0.904024,1.181136,-9.359355,5.298750,-1.727195,-0.819959,4.060610,9.265433,-9.754435,2.607168,5.127912,9.175043,1.671212,-6.167980,5.668024,-0.706324,0.745310,-9.368952,0.494531,1.616134,-7.314853,6.341084,2.175391,-6.111791,0.118580,8.769194,7.842317,8.412648,7.516177,-4.741006,8.573830,3.537020,-9.860465,-2.729708,7.051589,6.402236,0.821256,2.207396,0.732892,-8.671107,3.570773,-3.630622,-4.929164,6.373473,8.136690,-1.547494,-2.130496,6.094990,9.321886,-2.977868,7.490398,5.406976,3.194633,4.632042,-8.039143,6.928858,9.775739,4.676166,0.793674,2.046118,-1.743024,0.477266,9.820799,3.395028,6.979830,-3.357601,0.691492,8.615536,-9.970015,-9.029068,6.072950,7.962266,4.765287,-6.091305,5.608598,6.058870,-0.339615,1.829571,9.633296,-4.381482,-8.030966,2.991168,-4.953338,-1.988371,6.642879,-8.599642,-3.638041,-8.164342,-3.309383,6.655980,-7.472381,4.384042,2.531676,5.341876,6.404420,1.244689,-7.298644,5.278953,-5.457512,7.486373,-6.128067,-3.833219,7.682424,-1.927407,6.901647,-3.461477,-4.727614,-5.541858,-2.692342,-2.383088,-1.863660,7.673504,-7.880079,5.219310,2.691371,1.403091,-9.151762,-4.715490,-6.100959,3.323389,-7.559994,7.011072,1.609495,7.116912,1.970738,9.367425,2.333094,-9.284380,-8.381912,-7.246523,5.985383,3.922334,5.644968,0.330654]], dtype = "float64")#candidate|12181|(1, 192)|const|float64
const_12182 = relay.const([-5.388860,-3.529435,3.376507,8.510182,-8.907898,-5.538413,-7.638408,8.669054,4.044469,-2.042578,3.582011,-2.614231,6.228163,-5.435763,2.321579,3.895432,3.813425,7.922839,9.488762,0.802105,-3.364709,9.126142,3.755221,1.290586,3.767551,7.150645,7.764312,0.310782,2.716938,6.439621,-6.202211,8.771191,6.359946,0.326439,5.805630,-7.958196,-1.411713,-4.772227,-2.575234,-2.443706,7.668472,8.379549,-6.399901,-8.026845,-0.057090,-7.049708,-3.481715,-5.894960,-3.755177,-3.494208,7.793760,2.326365,-9.506789,2.911250,5.593317,-5.926144,1.043449,-3.463818,5.803504,0.026062,-5.395083,-5.667122,2.543042,-8.907341,-5.892547,-9.534921,5.075560,-0.312609,1.613231,3.250289,0.300575,-5.696996,3.077715,-7.248731,1.598342,-1.699744,1.306712,-8.392891,-9.314645,9.302131,4.625802,-9.041194,3.059976,-9.456550,-0.387095,-8.511016,-7.643758,-4.057442,9.380632,-7.817355,-7.288841,-7.875757,9.661266,1.437761,-1.839973,8.828080,-7.075219,-5.431362,-5.162921,-7.489886,-2.977264,-2.706351,7.830628,-9.161383,-8.127623,5.494342,-9.633091,-7.299174,-0.357489,0.683722,-7.884552,-4.033668,-1.170066,2.509865,-0.937933,3.821937,-2.812315,9.196393,-3.690798,-4.436544,-5.128652,9.158896,9.513732,-1.957774,7.583509,-7.410596,-9.434531,-2.656800,-4.639358,9.484931,-6.540307,8.024033,9.472132,-9.041220,4.996907,-7.732518,8.610759,-2.289548,5.272765,-1.805447,-0.863442,1.891946,-8.410182,5.509525,7.810405,8.770930,2.455219,-1.397433,6.937855,-7.623918,3.344787,-2.027271,-9.253906,0.484496,9.913314,2.219563,1.838644,3.953288,-8.231305,-6.964149,2.858916,1.545399,-3.664821,6.804494,3.964873,-6.828631,-9.766156,8.480019,5.499096,5.184395,-4.394044,-2.703079,8.697607,8.921433,-8.140401,2.215623,5.787144,-4.824789,-4.615274,2.446744], dtype = "float32")#candidate|12182|(180,)|const|float32
const_12183 = relay.const([-6.780059,7.556014,-4.757735,1.806593,3.843129,-0.312605,7.274993,-5.215311,2.998274,5.787423,9.849963,8.138337,-4.508216,3.806700,-1.270049,4.980077,5.491136,6.114612,5.688957,-7.857315,-4.875430,0.352305,7.277594,-9.705804,5.562041,4.131986,7.737730,-3.697794,-2.634814,-2.924953,0.690350,4.450646,-8.532517,7.960946,4.993138,-8.147616,-9.766860,8.605746,9.848312,9.508183,-6.264936,3.456505,0.080151,9.054595,1.662816,-2.247223,3.932012,9.230980,-2.239995,-1.727869,5.212813,-6.274660,-9.944863,9.648590,5.378021,5.313134,8.538054,5.308417,-4.091957,-2.883665,-7.628045,7.963028,5.202311,1.793564,6.581790,5.423590,-6.153596,-6.549199,-5.729673,1.794453,-6.095496,4.563807,0.656972,-7.754582,1.143877,-3.774890,-3.480611,6.491961,-3.746563,5.094763,-7.044333,-6.630289,-5.610178,-4.862175,-7.006239,-3.152930,-5.423427,0.143795,5.431165,2.235954,-9.578754,-4.438397,7.395989,-8.543098,9.859362,6.939349,0.080454,-1.126687,0.254835,-4.732298,-5.918811,-1.898518,-7.924914,7.649488,-2.418590,-0.964985,-0.345080,3.855502,-0.570034,8.964949,5.833523,-6.146268,5.702046,7.794540,7.309821,-7.867121,-4.711832,-8.694870,-4.238673,-2.590263,-7.682298,-9.108077,-7.147214,2.808096,7.586816,-6.533971,0.159160,8.356640,9.938775,0.572294,-4.553923,6.205037,7.097332,5.470201,5.172566,-8.219378,-3.275845,-6.702004,-0.968692,-8.546556,-3.783588,-2.762409,5.001437,-0.782087,-8.543223,5.442559,-7.413718,-5.294219,-2.446683,9.716718,3.480483,3.424448,-0.600834,-9.976135,9.858900,5.318654,8.466535,-9.776792,2.494189,-6.920047,-6.060560,1.085844,-4.358029,-3.133142,6.121216,-3.211654,3.394112,9.358355,9.801424,-7.566570,-3.651084,-8.964692,-5.077172,-9.469889,-4.928313,1.477722,-4.484216,5.131772,-8.894210,6.358392,4.565263,0.204845,0.048337,4.171915,-9.503712,-9.097846,1.956785,2.300926,9.336669,0.606721,-3.651723,-4.979775,7.868949,7.566986,-7.120462,-6.214749,-9.933718,-0.961556,-3.768813,-1.315044,-6.160776,1.569511,8.159521,7.231535,-3.751781,-9.193897,0.320099,9.039950,-4.410625,4.403533,8.275739,5.166878,2.369809,8.535729,9.251436,-4.730241,-2.885904,8.722328,-8.582192,-3.422510,8.534983,1.665490,-9.652355,-0.039371,2.417153,2.474054,1.863110,-2.017038,-6.083595,-6.078765,1.838117,5.552159,-0.656946,-9.401559,7.938756,6.412290,0.666779,-4.707615,7.799906,1.015604,-6.070370,1.532499,8.786707,-7.563093,0.151185,3.940356,1.559369,9.959358,4.787638,1.112629,-5.810330,8.997979,3.776560,7.124743,-9.281645,-2.312941,3.381889,-9.175716,2.457726,3.156483,7.142245,-8.453638,8.987030,-9.517163,1.662110,-7.364649,-2.852156,1.319283,8.136587,-9.861691,8.968893,-7.370230,-0.511245,6.160493,4.399726,6.561678,5.329429,8.550122,5.826815,5.737984,4.378257,-7.675551,-9.874817,-3.691289,7.899144,2.474502,0.212031,8.735926,3.851914,4.350376,3.615165,5.706064,-8.726571,-8.616957,6.773533,-2.513438,2.199645,-6.699267,0.785245,2.051287,-0.507278,0.434530,-6.684194,0.190647,-7.609512,-7.324027,0.171980,-7.617588,-9.450011,4.158697,0.227365,7.361700,0.059369,-3.404054,-6.351973,0.031604,-0.790506,-2.678136,1.332060,-4.622121,-6.401467,-2.011517,3.991936,-1.428434,8.652191,0.548006,4.261562,2.195659,-2.262822,3.065069,7.905913,0.167250,-8.749204,-7.375632,-4.630647,7.299481,8.248778,-7.244586,-7.462415,-2.722208,1.180658,-6.263309,-6.803488,5.149341,6.625815,5.060508,6.865000,2.216957,-7.558230,9.946895,-9.680501,-2.355447,-6.431587,-2.137389,3.093058,-5.998773,-9.774221,0.023848,-9.356783,-0.455333,-5.282578,-8.633903,-7.602331,4.836822,5.323597,0.684054,7.446251,1.111119,3.384438,-2.500286,0.952850,5.955221,-8.626570,-5.730460,2.236495,-1.314282,8.570342,8.486232,-9.119768,-7.988763,8.962573,-5.798075,7.372430,7.638277,5.301280,7.145896,-2.273031,6.683159,-1.427038,-5.525874,-8.723550,2.254460,5.899129,1.455033,2.109843,-2.805716,-6.403304,7.930069,-5.312249,-0.675774,-9.235190,-3.143697,-0.766290,4.382232,-0.264303,-3.782114,8.165034,-3.985595,-0.496617,-5.940337,5.146618,-9.072194,5.469805,-1.372770,-3.133231,-2.642319,-5.515451,-3.305166,-8.280826,1.515694,0.398416,8.140909,2.133002,5.924898,9.836806,3.814596,-2.101273,-7.239530,7.963776,-0.097921,3.316975,5.111723,0.582464,-6.691851,0.128590,-8.740581,4.025757,0.629170,0.024776,-8.675280,0.653342,-3.473608,-4.701915,2.043745,2.362224,3.907571,-5.128992,-7.517264,-0.199732,1.345348,6.985767,-7.921869,4.645343,4.107160,3.716036,-1.307067,-7.821678,-2.196286,5.970366,-0.369359,7.355463,-9.461889,-9.468447,-8.465337,7.406792,8.510825,9.128375,-1.731399,4.182071,-4.975268,7.959313,6.345947,0.537590,-4.612092,-2.679847,1.832566,0.170601,7.614648,-4.691090,-0.805989,-4.518215,-3.726834,-6.340941,-9.392168,7.771492,-9.179630,9.580152,-5.401243,1.161152,-4.580173,5.910928,-2.963223,4.556251,7.075152,5.423699,1.309369,4.439253,9.606799,-1.173996,7.286032,-2.215563,2.759427,-1.976924,-7.572933,-8.144206,6.503981,-2.178799,-5.290758,9.925579,-9.763662,-3.906950,-6.972365,1.426695,4.765543,-1.595262,1.316049,-8.720416,-3.303962,-6.053899,-1.210197,2.756748,9.683538,8.001319,4.102644,8.068088,9.536042,-1.051901,3.717090,-1.428838,3.965693,3.255675,8.199866,3.950857,-3.936563,4.800381,4.035478,-0.378886,-0.766654,-8.992449,3.381659,0.228656,2.210465,-2.564886,-5.918978,4.326968,2.611234,-9.687875,-5.636553,1.044589,-0.535274,-9.832461,4.283693,-2.146450,-7.250858,-4.718620,-1.008034,4.973086,8.775827,-9.980339,-0.480222,3.052856,-2.410867,-8.217316,-7.421558,-9.726035,-4.020051,-7.172743,3.613074,-2.201077,5.915524,8.302654,-4.395890,-0.268257,1.247483,3.101163,-2.422309,8.331837,9.497742,-5.009269,7.696525,-0.129551,0.519142,-0.268020,3.474141,-0.544422,0.877555,-2.214798,-5.325634,7.025213,2.383126,0.518130,0.993734,-8.352976,7.297709,-2.163331,4.984766,-9.605452,3.230339,-2.282180,9.781212,-0.838113,-3.671203,0.074169,2.467839,-1.159956,9.564418,-5.153093,7.990900,4.311600,2.298591,6.220102,-4.229455,1.302754,-4.212050,-4.130172,9.649413,-4.855233,8.654808,-6.110962,-6.261272,1.957676,2.450108,5.803016,6.286520,7.574665,-8.631560,9.707091,-5.103181,0.079057,-8.595221,4.220106,-3.209645,-9.876335,6.888297,-9.962622,9.894084,0.567755,5.767511,7.649795,-8.834268,-1.457195,-2.653271,2.672308,-8.558865,2.003569,5.992357,-8.431002,6.441698,7.624957,-6.794951,-3.526072,-8.562359,-6.608317,-9.897177,-0.799761,-2.307964,-9.855355,-1.040921,0.953826,-4.759501,-6.766780,8.932569,3.244690,7.369894,7.729159,-5.709212,7.354995,-5.058568,-3.053309,-1.342454,0.031073,6.265105], dtype = "float32")#candidate|12183|(672,)|const|float32
call_12180 = relay.TupleGetItem(func_5997_call(relay.reshape(const_12181.astype('float64'), [192,]), relay.reshape(const_12182.astype('float32'), [180,]), relay.reshape(const_12183.astype('float32'), [672,]), ), 4)
call_12184 = relay.TupleGetItem(func_6002_call(relay.reshape(const_12181.astype('float64'), [192,]), relay.reshape(const_12182.astype('float32'), [180,]), relay.reshape(const_12183.astype('float32'), [672,]), ), 4)
output = relay.Tuple([call_12176,call_12180,const_12181,const_12182,const_12183,])
output2 = relay.Tuple([call_12177,call_12184,const_12181,const_12182,const_12183,])
func_12193 = relay.Function([], output)
mod['func_12193'] = func_12193
mod = relay.transform.InferType()(mod)
output = func_12193()
func_12194 = relay.Function([], output)
mutated_mod['func_12194'] = func_12194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8445_call = mod.get_global_var('func_8445')
func_8446_call = mutated_mod.get_global_var('func_8446')
call_12195 = func_8445_call()
call_12196 = func_8445_call()
func_9503_call = mod.get_global_var('func_9503')
func_9505_call = mutated_mod.get_global_var('func_9505')
call_12197 = relay.TupleGetItem(func_9503_call(), 0)
call_12198 = relay.TupleGetItem(func_9505_call(), 0)
output = relay.Tuple([call_12195,call_12197,])
output2 = relay.Tuple([call_12196,call_12198,])
func_12209 = relay.Function([], output)
mod['func_12209'] = func_12209
mod = relay.transform.InferType()(mod)
mutated_mod['func_12209'] = func_12209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12209_call = mutated_mod.get_global_var('func_12209')
call_12210 = func_12209_call()
output = call_12210
func_12211 = relay.Function([], output)
mutated_mod['func_12211'] = func_12211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8445_call = mod.get_global_var('func_8445')
func_8446_call = mutated_mod.get_global_var('func_8446')
call_12212 = func_8445_call()
call_12213 = func_8445_call()
output = relay.Tuple([call_12212,])
output2 = relay.Tuple([call_12213,])
func_12256 = relay.Function([], output)
mod['func_12256'] = func_12256
mod = relay.transform.InferType()(mod)
mutated_mod['func_12256'] = func_12256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12256_call = mutated_mod.get_global_var('func_12256')
call_12257 = func_12256_call()
output = call_12257
func_12258 = relay.Function([], output)
mutated_mod['func_12258'] = func_12258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12041_call = mod.get_global_var('func_12041')
func_12042_call = mutated_mod.get_global_var('func_12042')
call_12268 = relay.TupleGetItem(func_12041_call(), 0)
call_12269 = relay.TupleGetItem(func_12042_call(), 0)
func_5430_call = mod.get_global_var('func_5430')
func_5432_call = mutated_mod.get_global_var('func_5432')
call_12272 = relay.TupleGetItem(func_5430_call(), 0)
call_12273 = relay.TupleGetItem(func_5432_call(), 0)
output = relay.Tuple([call_12268,call_12272,])
output2 = relay.Tuple([call_12269,call_12273,])
func_12309 = relay.Function([], output)
mod['func_12309'] = func_12309
mod = relay.transform.InferType()(mod)
mutated_mod['func_12309'] = func_12309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12309_call = mutated_mod.get_global_var('func_12309')
call_12310 = func_12309_call()
output = call_12310
func_12311 = relay.Function([], output)
mutated_mod['func_12311'] = func_12311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11678_call = mod.get_global_var('func_11678')
func_11680_call = mutated_mod.get_global_var('func_11680')
call_12336 = relay.TupleGetItem(func_11678_call(), 0)
call_12337 = relay.TupleGetItem(func_11680_call(), 0)
output = call_12336
output2 = call_12337
func_12338 = relay.Function([], output)
mod['func_12338'] = func_12338
mod = relay.transform.InferType()(mod)
output = func_12338()
func_12339 = relay.Function([], output)
mutated_mod['func_12339'] = func_12339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9757_call = mod.get_global_var('func_9757')
func_9758_call = mutated_mod.get_global_var('func_9758')
call_12363 = relay.TupleGetItem(func_9757_call(), 2)
call_12364 = relay.TupleGetItem(func_9758_call(), 2)
func_5607_call = mod.get_global_var('func_5607')
func_5610_call = mutated_mod.get_global_var('func_5610')
const_12391 = relay.const([9.126251,4.456730,6.593225,2.753726,-9.249327,2.718095,7.680858,-6.731725,-3.655241,6.032987,-4.206590,6.186356,2.669485,4.761469,-9.879924,-1.866831,-8.006218,8.783447,9.491607,1.724570,-7.775467,-3.525562,6.126844,5.497969,2.925511,-7.711105,-1.428372,4.438134,-5.640351,-8.817511,6.863131,3.161235,0.711666,3.712417,2.760808,-0.253711,-0.143278,0.769859,1.296425,7.248994], dtype = "float32")#candidate|12391|(40,)|const|float32
call_12390 = func_5607_call(relay.reshape(const_12391.astype('float32'), [2, 20]))
call_12392 = func_5607_call(relay.reshape(const_12391.astype('float32'), [2, 20]))
func_11336_call = mod.get_global_var('func_11336')
func_11337_call = mutated_mod.get_global_var('func_11337')
call_12410 = func_11336_call()
call_12411 = func_11336_call()
func_9649_call = mod.get_global_var('func_9649')
func_9651_call = mutated_mod.get_global_var('func_9651')
const_12414 = relay.const([7.317299,-4.655838,-8.859141,7.513453,3.903732,-1.065648,-2.702319,8.684679,-2.528736,-0.424468,-5.393798,3.890109,-6.517740,-1.602093,-6.141023,0.072610,2.589881,-5.027429,-3.903180,5.715166,1.624476,7.959011,9.690862,6.070272,5.714422,-2.289526,-6.326952,-6.824624,2.875226,-6.861836,8.085461,-8.103385,-3.322441,2.857182,-8.944184,-1.632541,-0.289913,5.967633,9.305250,-1.260458,-0.975014,-5.028744,-3.652421,8.409783,-3.423429,0.266921,3.572100,-5.214190], dtype = "float32")#candidate|12414|(48,)|const|float32
call_12413 = func_9649_call(relay.reshape(const_12414.astype('float32'), [4, 6, 2]))
call_12415 = func_9649_call(relay.reshape(const_12414.astype('float32'), [4, 6, 2]))
func_7677_call = mod.get_global_var('func_7677')
func_7678_call = mutated_mod.get_global_var('func_7678')
call_12422 = relay.TupleGetItem(func_7677_call(), 2)
call_12423 = relay.TupleGetItem(func_7678_call(), 2)
func_10907_call = mod.get_global_var('func_10907')
func_10911_call = mutated_mod.get_global_var('func_10911')
var_12427 = relay.var("var_12427", dtype = "int8", shape = (594,))#candidate|12427|(594,)|var|int8
call_12426 = relay.TupleGetItem(func_10907_call(relay.reshape(var_12427.astype('int8'), [11, 6, 9]), relay.reshape(var_12427.astype('int8'), [11, 6, 9]), ), 0)
call_12428 = relay.TupleGetItem(func_10911_call(relay.reshape(var_12427.astype('int8'), [11, 6, 9]), relay.reshape(var_12427.astype('int8'), [11, 6, 9]), ), 0)
output = relay.Tuple([call_12363,call_12390,const_12391,call_12410,call_12413,const_12414,call_12422,call_12426,var_12427,])
output2 = relay.Tuple([call_12364,call_12392,const_12391,call_12411,call_12415,const_12414,call_12423,call_12428,var_12427,])
func_12439 = relay.Function([var_12427,], output)
mod['func_12439'] = func_12439
mod = relay.transform.InferType()(mod)
var_12440 = relay.var("var_12440", dtype = "int8", shape = (594,))#candidate|12440|(594,)|var|int8
output = func_12439(var_12440)
func_12441 = relay.Function([var_12440], output)
mutated_mod['func_12441'] = func_12441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6438_call = mod.get_global_var('func_6438')
func_6439_call = mutated_mod.get_global_var('func_6439')
call_12482 = relay.TupleGetItem(func_6438_call(), 0)
call_12483 = relay.TupleGetItem(func_6439_call(), 0)
output = relay.Tuple([call_12482,])
output2 = relay.Tuple([call_12483,])
func_12486 = relay.Function([], output)
mod['func_12486'] = func_12486
mod = relay.transform.InferType()(mod)
mutated_mod['func_12486'] = func_12486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12486_call = mutated_mod.get_global_var('func_12486')
call_12487 = func_12486_call()
output = call_12487
func_12488 = relay.Function([], output)
mutated_mod['func_12488'] = func_12488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9993_call = mod.get_global_var('func_9993')
func_9994_call = mutated_mod.get_global_var('func_9994')
call_12526 = relay.TupleGetItem(func_9993_call(), 0)
call_12527 = relay.TupleGetItem(func_9994_call(), 0)
func_4115_call = mod.get_global_var('func_4115')
func_4120_call = mutated_mod.get_global_var('func_4120')
const_12534 = relay.const([-0.688394,2.511046,-2.643747,9.639024,-0.754399,9.091050,9.647035,-0.862973,-5.504503,9.037467,8.864588,-0.102135,-1.845899,-5.606667,-4.818337,1.330172,-3.701749,-4.686112,-5.079951,-1.173226,-0.703719,-5.340421,-5.953869,-8.703960,-9.863456,0.426808,-6.668547,2.103027,5.322510,-4.477065,4.565735,-6.185953,4.500939,7.528872,-4.489020,-0.112052,9.350373,2.394386,9.398612,-4.046051,2.579260,9.042711,-8.579026,-6.195107,2.294506,9.237517,-6.995452,-5.305493,4.029202,4.620874,9.861091,-1.981355,-1.330357,3.452497,7.382886,-4.134275,9.963718,-6.483428,-7.939552,3.463424,-9.593832,-5.136944,2.333135,-6.617724,-7.469877,-2.206186,7.547449,8.525412,-5.500200,-6.028051,-2.693034,8.769873,-3.452599,3.746290,-4.847147,-9.505964,-7.635913,-2.587034,-3.810397,-9.477978,-1.491759,-9.939842,3.379943,-0.026937,-8.861444,-7.901968,6.694488,0.538443,1.630574,-8.901690,8.312387,-7.276029,8.944945,4.352986,1.350183,9.078249,9.376951,-2.447352,9.015382,-0.185035,0.376562,-6.637630,-8.318592,-4.598729,0.482482,-6.537006,-9.574939,-9.059904,6.574404,4.598955,3.101453,-0.452478,-3.992083,4.742216,3.528982,-0.885005,-0.975814,3.196330,-1.693446,1.187423,-5.802352,-3.267313,-8.788793,2.487278,3.330710,2.604184,9.684434,3.088514,-6.642911,2.848086,-4.464739,-5.351654,-9.456135,-3.402557,2.873174,-5.177227,2.988021,-7.843917,7.379548,2.035442,-6.142386,1.532370,-0.583008,-6.753187,-7.842425,1.455485,0.081195,5.647736,8.808260,-6.372810,0.101902,8.755541,2.196520,8.398094,6.695223,4.671726,9.964786,6.078367,9.263728,-0.051565,6.877397,3.741721,3.533165,-1.757622,-5.401775,8.577269,-8.208407,-4.651617,8.434554,-4.900979,-4.518840,-6.367278,0.100165,3.294994,0.646717,-0.836735,4.772140,8.679930,-4.548245,-0.611283,-7.894554,3.185783,-2.701819,4.301219,1.973175,-8.202975,5.202516,4.186860,-7.886737,-4.080416,-7.056088,-2.176802,-6.747735,-8.660143,5.970919,8.397100,-3.724043,-4.962554,-7.682448,-9.323071,-6.879614,1.413671,-0.243286,-2.127800,4.553542,-9.247546,7.387451,-9.198453,6.204721,-4.429822,8.656806,-3.827881,-8.563486,-8.233811,-7.682298,-8.122916,7.650642,9.797696,-9.348069,-7.455451,-9.094596,7.648363,5.209050,1.083869,-3.132362,8.582461,7.617654,-0.323382,2.387106,-8.892665,1.187129,-6.156021,-0.388419,-5.754556,6.127966,-4.090129,-7.222492,0.460611,4.261116,-8.548479,-0.778619,3.688891,7.667623,-8.254817,-9.133322,4.427181,8.626378,-0.606590,1.305004,5.710111,6.190057,-9.843384,3.485363,4.455292,-4.039523,5.749783,-6.596795,-9.049257,-9.495335,-3.044236,0.378644,-7.710770,1.345372,-4.044946,-3.170904,9.495818,8.265772,4.443517,3.478429,-1.006475,-3.573310,-8.947336,-3.881297,-4.203045,9.675674,-4.940881,-9.324258,-2.651032,5.296780,-7.048840,-4.734914,-8.276461,8.198083,-6.868247,-1.784064,-5.652561,-9.676517,2.525701,2.702238,1.811561,-4.339842,1.573578,4.597620,-2.323217,-6.680788,-1.111471,-7.473696,0.887535,-6.654330,-9.235675,-3.183102,7.637585,-5.761120,6.185630,-4.437470,-4.715094,-0.439963,-8.298445,8.036723,1.992620,2.384169,-7.717208,-8.877786,-4.749084,-6.494186,5.089119,1.926971,5.369365,-0.178482,-7.482749,-9.909492,5.999109,-2.429446,-1.271752,3.762570,-8.642471,8.620903,-2.756040,-9.085813,-6.956197,-4.693324,8.789428,-4.607862,6.772791,9.988884,2.248828,-0.341479,0.423529,-9.278103,6.054384,6.319280,9.047637,-2.810118,-6.000117,-5.372902,4.446369,-3.290050,-1.548139,-2.203310,7.376374,2.922266,9.669362,-3.722150,4.700195,-3.854938,-6.430326,-1.513963,-1.434538,3.582147,9.313758,0.079479,-9.950996,4.949921,-1.778158,-7.574801,8.674276,-2.021973,-7.672075,4.004395,-0.062164,-6.719423,5.224736,-5.013680,5.696442,-5.491633,3.105359,-0.552170,-3.435496,-5.796045,9.615323,-1.999983,4.159257,6.782453,5.236512,4.624004,-9.279898,-0.685204,-1.988258,5.986419,5.235670,-9.661157,4.124806,-8.904366,-1.300832,-3.223807,-2.392948,-3.866743,6.987265,9.062942,0.690057,-0.425527,-0.059649,9.336411,8.290960,-1.531530,0.640749,9.429074,0.956652,-0.954091,9.374322,3.911364,1.692167,3.256608,3.944279,-2.656881,5.845799,-9.414653,9.914473,-2.577279,-5.536149,9.855409,0.945486,-1.301171,7.119137,-6.429161,3.370966,-0.973766,4.177473,-4.065733,-6.688715,1.785942,6.245423,4.306390,-4.741040,-3.586685,-4.216251,-6.932501,-9.315504,4.400624,9.318745,-0.318863,7.026580,6.498498,-6.024091,-0.984144,-5.231305,-6.429039,2.187837,2.202117,2.003082,4.927424,1.161420,5.774828,-8.000743,0.838494,-4.229331,8.799416,-6.805414,0.153174,-5.438025,6.188382,0.224642,-0.310333,6.838254,-8.636621,8.655271,3.137347,3.061126,7.015561,5.635607,7.564429,-9.731329,2.713094,-2.076065,-9.544923,-3.191072,2.958540,2.375554,3.954367,6.621864,-6.407919,7.540988,-3.188669,-7.531970,-0.846633,-6.563629,-2.427962,-3.165532,-6.258244,-1.492256,2.799223,-3.081490,-4.788037,3.825077,2.877796,-2.390010,5.444065,0.810225,-1.968350,7.773250,8.051885,4.633808,4.631342,0.081754,-0.470028,-0.172483,5.019415,-4.718631,-0.359131,7.675033,6.401681,8.811245,1.890112,-0.782179,4.789076,-0.860883,1.741954,-2.094993,-4.982594,-5.599162,9.163052,-8.999797,-4.037752,-3.366120,-7.183725,-7.498294,6.654868,9.341416,-0.968767,9.991110,7.670061,-5.633093,1.170977,9.569716,-2.423305,-3.850111,-5.929522,-2.980168,7.177442,-5.707004,-5.277190,4.956468,-7.915894,-8.949292,-9.805645,-0.493795,-8.638115,9.454213,2.693772,4.873083,-8.815074,5.924981,-9.476395,9.623508,4.556549,-9.555656,-1.191654,5.115670,-0.862429,7.203203,6.690621,-0.741055,-6.173694,2.319440,2.324421,-6.116794,-8.147639,-6.313865,8.651343,2.160302,1.313442,3.723554,6.937317,9.820434,-9.487448,7.953884,-8.526371,1.060305,9.666615,3.772952,3.258568,-9.910085,1.104409,5.629329,5.471997,3.667145,-5.772003,-0.506309,-4.702441,1.687868,1.962949,-8.859851,-3.641457,-8.916693,7.065497,-3.706722,9.818901,-9.021937,-9.204176,-4.222911,-8.645326,-6.161377,-3.291348,5.648902,-5.825249,9.355993,1.510373,-8.620972,-9.348571,5.300571,-3.627650,-4.787147,-0.669888,-8.700971,-7.522115,-1.160182,0.807330,4.898921,-4.833316,-9.316613,3.749083,-9.378284,4.167368,4.014611,2.599735,5.538881,-0.713771,-9.847663,6.376676,5.828878,3.179440,-4.931525,8.210137,-0.476120,-7.799270,-5.070404,-4.607823,-6.525786,8.731835,9.965147,-1.247234,-2.740107,7.342990,-5.188307,-5.830838,-2.493336,9.173170,-4.698318,3.346186,-7.081732,3.747759,1.375573,2.127191,4.754210,2.829722,-8.916153,-9.228610,6.568764,5.843019,-1.847368,4.438061,4.086951,6.038692,2.852930,-3.867104,5.940469,4.434896,6.765737,-7.316326,2.459072,-5.343805,-7.240719,0.730463,-0.735454,2.680531,-0.924261,4.870762,9.936313,7.057707,7.525249,3.969515,5.524034,-0.411752,3.740883,1.344977,-5.556482,-0.189436,-3.808885,-1.970634,-1.161099,6.770055,9.799443,-0.206145,-1.376377,7.893649,4.197922,-7.260657,2.483219,-9.316370,1.775175], dtype = "float64")#candidate|12534|(700,)|const|float64
var_12535 = relay.var("var_12535", dtype = "float64", shape = (462,))#candidate|12535|(462,)|var|float64
var_12536 = relay.var("var_12536", dtype = "float32", shape = (3, 60))#candidate|12536|(3, 60)|var|float32
call_12533 = relay.TupleGetItem(func_4115_call(relay.reshape(const_12534.astype('float64'), [5, 10, 14]), relay.reshape(var_12535.astype('float64'), [231, 2]), relay.reshape(var_12536.astype('float32'), [180,]), ), 9)
call_12537 = relay.TupleGetItem(func_4120_call(relay.reshape(const_12534.astype('float64'), [5, 10, 14]), relay.reshape(var_12535.astype('float64'), [231, 2]), relay.reshape(var_12536.astype('float32'), [180,]), ), 9)
func_7227_call = mod.get_global_var('func_7227')
func_7229_call = mutated_mod.get_global_var('func_7229')
call_12557 = relay.TupleGetItem(func_7227_call(), 0)
call_12558 = relay.TupleGetItem(func_7229_call(), 0)
output = relay.Tuple([call_12526,call_12533,const_12534,var_12535,var_12536,call_12557,])
output2 = relay.Tuple([call_12527,call_12537,const_12534,var_12535,var_12536,call_12558,])
func_12560 = relay.Function([var_12535,var_12536,], output)
mod['func_12560'] = func_12560
mod = relay.transform.InferType()(mod)
var_12561 = relay.var("var_12561", dtype = "float64", shape = (462,))#candidate|12561|(462,)|var|float64
var_12562 = relay.var("var_12562", dtype = "float32", shape = (3, 60))#candidate|12562|(3, 60)|var|float32
output = func_12560(var_12561,var_12562,)
func_12563 = relay.Function([var_12561,var_12562,], output)
mutated_mod['func_12563'] = func_12563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10228_call = mod.get_global_var('func_10228')
func_10229_call = mutated_mod.get_global_var('func_10229')
call_12630 = relay.TupleGetItem(func_10228_call(), 0)
call_12631 = relay.TupleGetItem(func_10229_call(), 0)
output = relay.Tuple([call_12630,])
output2 = relay.Tuple([call_12631,])
func_12633 = relay.Function([], output)
mod['func_12633'] = func_12633
mod = relay.transform.InferType()(mod)
mutated_mod['func_12633'] = func_12633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12633_call = mutated_mod.get_global_var('func_12633')
call_12634 = func_12633_call()
output = call_12634
func_12635 = relay.Function([], output)
mutated_mod['func_12635'] = func_12635
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12751 = relay.var("var_12751", dtype = "float32", shape = (15, 4, 2))#candidate|12751|(15, 4, 2)|var|float32
uop_12752 = relay.log(var_12751.astype('float32')) # shape=(15, 4, 2)
output = uop_12752
output2 = uop_12752
func_12771 = relay.Function([var_12751,], output)
mod['func_12771'] = func_12771
mod = relay.transform.InferType()(mod)
mutated_mod['func_12771'] = func_12771
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12772 = relay.var("var_12772", dtype = "float32", shape = (15, 4, 2))#candidate|12772|(15, 4, 2)|var|float32
func_12771_call = mutated_mod.get_global_var('func_12771')
call_12773 = func_12771_call(var_12772)
output = call_12773
func_12774 = relay.Function([var_12772], output)
mutated_mod['func_12774'] = func_12774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5159_call = mod.get_global_var('func_5159')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_12814 = relay.TupleGetItem(func_5159_call(), 0)
call_12815 = relay.TupleGetItem(func_5161_call(), 0)
output = call_12814
output2 = call_12815
func_12853 = relay.Function([], output)
mod['func_12853'] = func_12853
mod = relay.transform.InferType()(mod)
output = func_12853()
func_12854 = relay.Function([], output)
mutated_mod['func_12854'] = func_12854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11034_call = mod.get_global_var('func_11034')
func_11036_call = mutated_mod.get_global_var('func_11036')
call_12873 = relay.TupleGetItem(func_11034_call(), 0)
call_12874 = relay.TupleGetItem(func_11036_call(), 0)
func_2114_call = mod.get_global_var('func_2114')
func_2117_call = mutated_mod.get_global_var('func_2117')
const_12902 = relay.const([2.542449,-8.298062,0.979035,7.068129,-4.738011,-8.580752,6.660134,-0.094402,-3.114261,7.135413,-0.385387,-4.454653,0.390155,-4.122960,-0.297937,-6.599298,4.573832,5.984335,-6.992946,-7.530700,5.838184,7.361588,-7.733466,9.946489,8.881603,0.059300,3.665515,-5.937843,6.089891,-2.536171,-2.399387,7.292583,4.341749,8.832392,-7.502955,-5.828612,-9.278482,-6.536756,0.314122,6.085446,-9.961021,0.067142,-2.778984,-3.729045,-6.160530,0.642691,-5.198359,-1.874424,7.205552,9.646497,4.409171,-1.806063,-0.519268,-5.054231,-5.166591,-8.650176,-4.578941,-5.013400,1.428015,1.032655,7.041757,2.166767,9.013629,4.356585,2.680318,-1.993597,0.665407,-1.044946,0.328799,1.204329,-6.444529,-5.970646,9.815837,3.623016,-1.264843,-3.309627,-8.671215,5.760443,9.312839,-2.226754,7.734022,6.866858,4.126582,-7.232537,9.770361,-5.633538,0.648094,-0.092769,-2.977605,-9.627484,-4.702048,-7.966702,-3.756181,8.761860,5.657130,-6.518309,-0.341020,8.306858,7.849943,7.061422,2.831010,-2.077991,-0.239459,-4.779382,-8.997761,7.492693,8.998915,1.580218,8.260342,-2.318917,9.219383,-1.336358,-4.805530,8.558450,1.669481,-5.806472,5.098067,-9.851433,-9.581121,-4.026950,8.847917,1.122607,7.539326,-1.428851,6.195119,2.222586,3.821509,9.791512,7.304042,3.179521,3.268064,-7.244872,-3.610079,-9.442992,0.219267,7.372765,8.405021,2.727202,-7.877335,5.072469,-0.480319,-4.321434,-3.827803,-6.398810,-2.036694,9.009345,8.801375,-8.291733,-0.325610,-0.473345,9.476869,-8.385766,3.746525,-2.200352,4.192665,4.662647,-0.980021,2.164835,9.953346,9.370097,4.612802,2.008929,-6.997011,-3.995086,9.493750,-1.700124,-2.687972,7.887540,-2.854332,8.857297,5.223385,-1.903780,-5.336667,7.515451,3.019279,-8.560884,5.328850,5.173767,0.343539,-3.969624,0.654742,-7.209482,2.785491,7.449120,6.295750,4.504212,4.534578,-8.925191,3.743407,-6.179953,-4.561455,7.605848,-7.139090,6.328982,-2.605090,-5.098216,-1.433189,0.452210,-4.051455,-5.176848,-1.691578,5.005007,9.504542,9.909679,2.464421,4.327834,-2.741619,6.011954,9.220187,2.029646,-3.478777,1.421607,-2.808440,-5.668179,8.767620,-0.830914,-1.442641,-8.936218,8.558845,-9.613808,1.128751,6.974795,-0.887352,-5.502549,0.708126,0.140428,-1.873187,3.165641,4.509942,1.671007,-1.498067,-0.218758,9.024251,-6.542524,9.747465,0.853616,-5.229242,-6.991313,4.379480,-2.072247,-9.251875,-9.518837,4.254066,0.151064,0.870752,2.094917,-9.758358,-4.513195,-8.898408,8.948820,6.368129,-8.080198,8.789922,-3.642525,-3.165329,5.486172,-5.439102,3.529135,2.919792,4.388990,4.706218,-9.529517,-6.573239,-2.571053,8.046517,-5.649462,-7.022397,-3.523716,-9.106024,5.273442,-9.568942,4.675914,-2.337771,-0.408566,-5.522325,4.324129,-7.025341,9.656272,-2.757254,-9.821164,9.506372,5.173059,8.890501,7.895605,-0.511204,-2.864539,-0.183563,-5.394171,-0.093387,-5.329868,-7.485133,5.299419,-2.899929,7.430970,-0.894712,-5.967935,8.649874,0.732488,-9.139017,-1.132522,8.004357,6.980828,-2.581468,2.657079,-6.755580,3.577331,2.858967,4.287210,-1.858941,-0.766115,-8.211194,-1.405586,-1.380523,0.258227,5.994491,-8.725197,-5.537874,-7.093608,4.280826,-2.897113,4.663115,-9.129787,-0.863633,-2.539440,-1.128504,8.631308,-2.430253,-8.304167,8.529273,3.967684,4.399019,-0.634560,2.248298,3.710815,-0.119197,-7.028247,1.119129,-3.216240,-5.042117,-1.347432,4.743089,-3.889880,-3.604275,9.398945,-4.285523,-1.853724,-8.237594,4.616464,0.904333,-6.218755,-1.475352,3.615426,7.838283,8.506259,6.908798,-2.201975,8.047741,-0.486803,-4.787944,-0.025293,-4.605782,-2.057445,0.007540,-8.808320,-4.162753,-1.362890,6.714523,1.193066,4.337211,-9.637566,-1.736916,5.176255,1.850570,0.428549,7.230799,-7.659776,-8.438417,-5.764332,4.942348,-5.684340,4.636407,-5.008182,8.774743,5.221058,9.894589,1.975531,5.633102,7.436953,-7.683467,-7.162333,-8.682478,9.966653,8.288083,-2.461957,-5.119385,1.786163,7.906926,-2.952394,3.381038,7.005060,2.291021,-0.941666,-4.089164,-3.441508,7.151045,-0.333886,4.283576,-2.530641,-1.669402,0.100132,-4.661837,-0.269908,1.878021,-1.553667,0.153396,3.092959,-0.721377,9.089538,2.402126,8.761075,-2.447280,7.121999,5.227521,-8.645162,-7.107502,-6.510031,-0.908994,3.514618,7.846083,-6.937052,2.437132,2.200317,-7.036742,-5.524847,-1.630474,-4.243071,-9.360387,7.840556,8.559993,1.918151,4.573155,-1.660453,-4.707151,1.952164,5.702056,-5.543792,4.334390,-4.083072,-1.675353,-7.698504,-1.071805,3.274220,-3.811142,-6.382183,8.874547,4.243368,6.668102,-6.293083,9.915775,2.535572,-6.632272,-8.958426,-4.853985,5.871478,3.950788,7.666366,-7.742955,-7.204376,7.320941,-2.693091,-0.489647,-0.780557,-5.260994,-7.803880,-9.840968,-3.213102,9.190174,8.304284,-8.627669,3.182832,-1.653643,1.146335,7.328348,2.018753,2.169164,9.421107,4.098802,1.051824,0.292668,-3.123884,-8.519206,-7.685805,3.499776,2.771376,-3.199750,6.288122,1.830758,6.808803,2.529553,-1.088973,-5.959519,-4.653862,9.626959,7.807092,6.296804,-1.411210,6.444714,-7.506533,-8.470790,-4.468541,-1.486474,7.604621,-3.147990,-3.196999,2.368451,-6.655507,2.298507,-1.010845,8.837244,3.449815,6.472480,-9.898284,-2.249847,9.818054,-0.266015,0.255031,9.369817,-4.100008,4.614245,4.184255,7.791461,-6.328054,4.498155,4.405059,4.969444,0.067501,3.626994,3.150564,-4.731302,-5.578857,-3.978976,7.244077,5.224445,0.674994,2.411921,6.924984,1.570103,6.577555,-7.249398,8.065740,9.116446,-7.336234,-3.189274,-1.681802,-9.392233,7.385074,-3.562755,2.565191,-6.107087,-0.202077,4.456418,4.100540,2.788734,8.474625,7.968021,7.714332,-6.027775,4.933203,6.929137,5.372047,7.711889,-1.900306,-3.522125,2.423399,7.740944,-2.876419,7.736230,1.603581,-3.809539,1.248870,5.228998,-8.677963,-4.640511,-9.532594,5.897712,-9.013311,-8.967564,-7.093539,-2.157746,5.070972,9.649171,-1.351364,3.107427,7.001135,2.304632,-7.133239,-2.199593,-5.229205,-7.652992,-9.400843,-9.566377,-3.209353,-9.679712,3.610290,-7.171487,-7.266103,-5.188867,5.645528,-3.742883,2.929118,8.180194,-3.799678,-0.535962,-2.747434,3.363712,-8.455961,8.351510,-2.252232,5.200763,-3.943768,-1.992274,7.149964,-8.829111,5.550992,-2.902312,-1.856537,-2.860569,4.955575,3.407626,1.991042,-7.972821,-3.303557,6.561964,9.718477,2.814118,-6.237318,-0.874857,-4.940399,-5.630582,6.144405,3.888483,-8.869899,-0.667610,-7.191599,-3.107003,-6.033570,-8.439733,-2.032662,7.741487,-5.903946,-5.422284,7.995202,0.125040,4.241862,4.479834,-7.783730,-4.822535,-4.132517,-7.180766,-2.498724,-8.589742,0.059005,5.333601,-8.223004,-0.391508,5.362955,-9.681296,0.418101,1.973909,4.580425,-6.868746,9.326968,3.293384,1.652518,-9.317160,-4.193704,4.053359,7.578883,3.658814,0.401386,7.051975,-7.892728,2.256733,6.179175,-2.645002,6.329200,-3.207540,9.371245,-5.803940,1.572361,-4.120740,-0.856921,8.470325,4.740641,3.062811,-4.239605,5.019487,-3.527710,5.661838,6.618182,0.644535,-0.582739,3.643334,2.292787,-8.420517,9.699940,-9.352438,-5.957783,0.979587,-3.313462,3.585280,4.319578,-5.578652,4.938685,0.934604,0.627322,-9.183578,-2.821143,-9.096949,0.300981,-7.611093,0.124589,-5.811267,4.777278,8.541280,5.974754,-4.741622,-1.558116,-1.694750,-4.827808,-0.056947,-7.673981,2.889533,3.328437,-9.829454,1.218667,8.473197,4.209560,-0.236155,6.655077,9.039283,-2.495007,-8.326966,-3.507306,5.811059,-2.280636,-8.663742,-9.233737,-8.440229,0.260758,-6.690684,8.534186,-7.899005,-4.601991,4.943801,-2.850724,-6.604187,3.366626,5.394498,7.063621,-4.496836,1.687347,9.969831,5.649164,1.376291,-2.683623,0.862454,1.627007,5.634018,-6.873606,9.787200,6.526363,-7.645853,-4.455248,-0.591838,-9.904539,-8.952348,3.278723,6.017192,9.553869,-8.890499,-8.645702,6.878626,2.012165,7.502831,-1.254725,-6.292098,-7.325466,-2.338297,5.865607,6.450975,6.746764,4.499811,8.466567,4.271049,5.344771,-5.462878,5.277506,8.379561,-9.944554,3.464084,4.468791,-5.351788,-1.326919,9.395916,8.000623,9.441481,-8.855563,-2.555509,1.729385,-3.506606,1.496236,-2.778639,-9.869560,3.754149,0.403012,2.320991,-9.368317,-3.500765,-9.748801,-6.750084,-3.875869,5.025220,-2.586576,-4.042169,8.043160,-3.108458,-6.163705,-4.921149,-1.966850,0.750233,-1.342667,9.185685,6.087052,7.367147,2.632002,9.474527,1.791400,-1.130792,-7.018339,5.613259,4.590918,-0.659008,-0.885632,-5.325544,-7.169949,-4.905163,9.865768,-6.473734,-2.925559,-9.714851,6.894431,1.846522,-2.054063,2.384142,7.030047,7.194094,-8.625769,-5.002220,-7.329593,-3.228610,-4.185782,7.037647,-7.033380,-3.422293,0.877312,-5.228955,6.179556,3.485985,2.321827,-2.893243,0.149935,0.801903,-7.823833,-3.385948,-1.197247,7.136862,-9.657790,-6.486773,-1.997821,9.003124,-5.792659,1.163853,1.598099,7.577995,0.876404,3.229159,6.155294,-0.721296,-0.069490,-6.178924,4.582439,-0.845227,-3.077950,-7.325814,2.775789,-2.850791,4.374087,2.086504,-3.859174,2.361124,6.532130,-0.772625,0.644341,-1.547171,-9.716575,6.020144,-9.486365,8.023603,-3.846647,-0.276391,4.328353,1.952796,-5.921392,7.047139,-7.153304,-6.873515,-4.283755,-2.902102,2.139578,5.839422,-1.684868,-2.891818,-4.390194,9.344000,9.049465,5.755366,8.293364,-4.778344,4.641372,-7.098218,-2.448156,1.668569,-1.324556,1.387413,-4.905619,6.055447,3.718092,-1.279815,5.484003,-0.277252,1.872838,1.256998,5.586562,-7.767726,8.498959,-4.411603,1.431393,-0.281556,1.543868,5.046810,9.345242,-5.921744,-8.704324,-1.634194,8.968963,5.852954,-9.100975,6.371078,-0.162690,0.380236,-7.454046,3.283803,4.646288,8.751427,2.431157,3.646525,3.884888,6.796691,-7.191930,1.745740,7.338292,-0.625776,7.074458,4.696440,7.279739,-6.800465,-7.538296,2.984089,7.939485,-3.003460,1.187617,0.835363,-3.594914,1.932827,1.860159,-6.565044,0.550067,-6.431717,-8.863386,-0.894421,-8.877767,8.620924,-3.498400,0.559647,-0.132235,0.142964,0.295178,-9.145490,6.046025,-6.141510,0.766772,7.091089,6.323868,0.492742,1.834342,7.487642,-9.550695,-6.224082,7.930189,0.227182,-3.437291,5.738822,2.073556,4.497553,4.486852,9.941988,-9.807867,8.297825,4.257186,4.935524,-6.944966,-9.592498,2.662693,-9.386129,-2.840089,-2.008603,-7.643501,-5.544219,-4.206884,-8.707467,2.033417,-2.860785,8.659030,5.836362,-4.940630,2.457443,3.319108,-7.492773,0.549661,8.885361,-4.443772,-3.269053,-8.849777,-3.004183,-6.388950,-3.977217,4.888170,2.055579,2.898216,5.357551,5.342196,-3.644254,-9.937638,6.189306,6.658003,-7.736199,2.081970,-3.757442,1.718979,-7.104412,-1.197763,-8.751563,0.334446,-9.712487,-8.279458,-4.293837,-9.230478,7.975288,7.665151,-6.123263,8.056288,-8.760317,5.278496,-5.957643,-7.435087,-6.723722,-3.709695,-8.545966,-5.832346,-7.644798,-6.435405,-3.643537,7.347539,2.898878,1.750951,-7.131667,-5.182157,2.891737,6.842368,8.669081,-8.139016,-1.930723,-4.079865,-1.745892,3.498763,8.191689,7.188018,3.858287,0.685596,-2.304684,-1.218122,-6.379983,7.043897,5.939877,3.148899,-3.515430,-8.504547,-2.953469,8.069142,-3.896564,5.529308,-0.898510,5.755909,-9.681211,0.617113,0.150371,1.201768,-1.589791,2.759554,4.246258,-0.663008,-4.245065,2.459553,2.229003,2.944882,4.892095,-9.426887,-6.433353,5.934102,-3.214009,2.985804,3.908878,0.802605,6.097823,9.690389,-7.648779,7.868924,-6.247745,8.873131,2.702044,2.359021,-7.501339,2.662189,-5.676882,4.128867,2.980976,-9.603412,2.626772,-0.440336,1.397293,7.413831], dtype = "float64")#candidate|12902|(1152,)|const|float64
call_12901 = func_2114_call(relay.reshape(const_12902.astype('float64'), [12, 6, 16]))
call_12903 = func_2114_call(relay.reshape(const_12902.astype('float64'), [12, 6, 16]))
func_11596_call = mod.get_global_var('func_11596')
func_11598_call = mutated_mod.get_global_var('func_11598')
var_12905 = relay.var("var_12905", dtype = "float32", shape = (240,))#candidate|12905|(240,)|var|float32
call_12904 = relay.TupleGetItem(func_11596_call(relay.reshape(var_12905.astype('float32'), [240,])), 1)
call_12906 = relay.TupleGetItem(func_11598_call(relay.reshape(var_12905.astype('float32'), [240,])), 1)
output = relay.Tuple([call_12873,call_12901,const_12902,call_12904,var_12905,])
output2 = relay.Tuple([call_12874,call_12903,const_12902,call_12906,var_12905,])
func_12910 = relay.Function([var_12905,], output)
mod['func_12910'] = func_12910
mod = relay.transform.InferType()(mod)
mutated_mod['func_12910'] = func_12910
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12911 = relay.var("var_12911", dtype = "float32", shape = (240,))#candidate|12911|(240,)|var|float32
func_12910_call = mutated_mod.get_global_var('func_12910')
call_12912 = func_12910_call(var_12911)
output = call_12912
func_12913 = relay.Function([var_12911], output)
mutated_mod['func_12913'] = func_12913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7227_call = mod.get_global_var('func_7227')
func_7229_call = mutated_mod.get_global_var('func_7229')
call_12952 = relay.TupleGetItem(func_7227_call(), 0)
call_12953 = relay.TupleGetItem(func_7229_call(), 0)
output = relay.Tuple([call_12952,])
output2 = relay.Tuple([call_12953,])
func_13000 = relay.Function([], output)
mod['func_13000'] = func_13000
mod = relay.transform.InferType()(mod)
mutated_mod['func_13000'] = func_13000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13000_call = mutated_mod.get_global_var('func_13000')
call_13001 = func_13000_call()
output = call_13001
func_13002 = relay.Function([], output)
mutated_mod['func_13002'] = func_13002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6761_call = mod.get_global_var('func_6761')
func_6762_call = mutated_mod.get_global_var('func_6762')
call_13070 = func_6761_call()
call_13071 = func_6761_call()
output = call_13070
output2 = call_13071
func_13074 = relay.Function([], output)
mod['func_13074'] = func_13074
mod = relay.transform.InferType()(mod)
output = func_13074()
func_13075 = relay.Function([], output)
mutated_mod['func_13075'] = func_13075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12041_call = mod.get_global_var('func_12041')
func_12042_call = mutated_mod.get_global_var('func_12042')
call_13114 = relay.TupleGetItem(func_12041_call(), 0)
call_13115 = relay.TupleGetItem(func_12042_call(), 0)
output = relay.Tuple([call_13114,])
output2 = relay.Tuple([call_13115,])
func_13118 = relay.Function([], output)
mod['func_13118'] = func_13118
mod = relay.transform.InferType()(mod)
output = func_13118()
func_13119 = relay.Function([], output)
mutated_mod['func_13119'] = func_13119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5649_call = mod.get_global_var('func_5649')
func_5650_call = mutated_mod.get_global_var('func_5650')
call_13156 = func_5649_call()
call_13157 = func_5649_call()
func_9216_call = mod.get_global_var('func_9216')
func_9217_call = mutated_mod.get_global_var('func_9217')
call_13167 = relay.TupleGetItem(func_9216_call(), 0)
call_13168 = relay.TupleGetItem(func_9217_call(), 0)
output = relay.Tuple([call_13156,call_13167,])
output2 = relay.Tuple([call_13157,call_13168,])
func_13180 = relay.Function([], output)
mod['func_13180'] = func_13180
mod = relay.transform.InferType()(mod)
mutated_mod['func_13180'] = func_13180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13180_call = mutated_mod.get_global_var('func_13180')
call_13181 = func_13180_call()
output = call_13181
func_13182 = relay.Function([], output)
mutated_mod['func_13182'] = func_13182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9757_call = mod.get_global_var('func_9757')
func_9758_call = mutated_mod.get_global_var('func_9758')
call_13213 = relay.TupleGetItem(func_9757_call(), 4)
call_13214 = relay.TupleGetItem(func_9758_call(), 4)
output = relay.Tuple([call_13213,])
output2 = relay.Tuple([call_13214,])
func_13225 = relay.Function([], output)
mod['func_13225'] = func_13225
mod = relay.transform.InferType()(mod)
output = func_13225()
func_13226 = relay.Function([], output)
mutated_mod['func_13226'] = func_13226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8734_call = mod.get_global_var('func_8734')
func_8736_call = mutated_mod.get_global_var('func_8736')
call_13229 = func_8734_call()
call_13230 = func_8734_call()
uop_13231 = relay.log(call_13229.astype('float64')) # shape=(12, 3, 5)
uop_13233 = relay.log(call_13230.astype('float64')) # shape=(12, 3, 5)
uop_13235 = relay.acos(uop_13231.astype('float32')) # shape=(12, 3, 5)
uop_13237 = relay.acos(uop_13233.astype('float32')) # shape=(12, 3, 5)
output = relay.Tuple([uop_13235,])
output2 = relay.Tuple([uop_13237,])
func_13238 = relay.Function([], output)
mod['func_13238'] = func_13238
mod = relay.transform.InferType()(mod)
mutated_mod['func_13238'] = func_13238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13238_call = mutated_mod.get_global_var('func_13238')
call_13239 = func_13238_call()
output = call_13239
func_13240 = relay.Function([], output)
mutated_mod['func_13240'] = func_13240
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13304 = relay.var("var_13304", dtype = "float64", shape = (16, 12, 8))#candidate|13304|(16, 12, 8)|var|float64
uop_13305 = relay.atan(var_13304.astype('float64')) # shape=(16, 12, 8)
func_8170_call = mod.get_global_var('func_8170')
func_8173_call = mutated_mod.get_global_var('func_8173')
const_13310 = relay.const([[2.742226,-6.984400],[7.876264,7.342991],[0.188060,-3.564233],[-7.435747,7.655233],[3.343373,2.039038],[-6.712589,-3.411143],[1.413872,9.587917],[9.195393,-4.757894],[0.616182,9.283872],[-0.904234,-5.447622],[6.721679,-3.916761],[1.789854,9.561250],[-8.022802,3.889060],[2.110069,-3.648084],[-8.777266,-4.523966],[7.899260,-0.649502],[-8.873222,5.158937],[6.900453,-8.829713],[6.261515,-3.389693],[-1.185740,8.367032],[9.762763,1.264046],[6.546120,7.750737],[5.023880,4.109491],[-3.004768,-7.479373],[-2.485008,-3.118041],[3.830855,-0.830875],[2.649602,0.280530],[2.523585,-5.371549],[9.703551,4.935846],[8.514731,-2.347521],[3.482984,2.479062],[-5.028264,-6.070229],[7.157081,-4.727511],[9.263595,8.399259],[5.115723,-4.560118],[-4.221958,5.083184],[-3.429994,-4.733902],[-1.732163,7.824704],[-2.587825,1.739341],[-4.645877,2.765792],[-4.301562,-9.848470],[5.077607,-1.942582],[-7.823173,0.169017],[9.937212,-2.586516],[4.424653,6.628157],[-7.452978,5.787407],[6.651604,4.461100],[-7.206306,-3.562747],[-6.466001,-0.909271],[-7.381820,-9.423958],[2.351644,9.573913],[5.874644,0.262110],[-8.114810,-7.727420],[8.751718,-6.707739],[-6.139836,-6.561276],[-5.572576,-1.807479],[1.115964,-3.074096],[0.359302,-2.751980],[-1.248570,-1.066022],[1.890430,2.048748],[-1.671371,-9.367099],[4.192153,8.785234],[-8.403246,4.511610],[-7.016609,0.406895],[-2.956259,7.954855],[5.877004,1.081001],[-6.885404,4.630711],[4.689107,4.480151],[-3.255361,9.935984],[-9.540818,9.707066],[-1.802549,-3.149546],[-6.913481,-4.033382],[8.665239,9.221938],[4.027864,4.354076],[-4.310396,2.594717],[3.327481,2.378037],[8.652357,6.244335],[2.488851,-1.435660],[4.557777,-1.400086],[0.730983,7.029175],[4.380851,8.163294],[9.840222,-9.959853],[3.150555,7.646783],[-6.271210,-4.948910],[3.839496,-1.907404],[-3.452115,-4.024069],[6.237743,-6.212985],[4.275906,3.992450],[-1.491884,2.484932],[2.823836,0.685511],[8.083427,3.795100],[1.905763,6.931659],[-7.746271,-2.188460],[3.359738,-9.902092],[7.485608,9.148085],[-2.919811,8.708617],[1.217862,-9.987962],[-3.391700,4.132172],[-5.598826,-3.248697],[-1.600995,-2.655507],[9.056067,2.470492],[5.833711,3.340313],[-9.378885,2.103609],[1.600947,4.458883],[8.790113,-0.978320],[5.235040,-2.931269],[-4.880342,-6.692591],[-7.159349,8.867615],[2.046337,-6.781651],[7.879357,0.454971],[-2.367739,-7.659179],[-7.371682,-1.168012],[-0.105932,8.166779],[-1.660373,6.166473],[-7.901177,7.751123],[0.341662,-8.891908],[-9.055344,3.517856],[-7.236088,1.750959],[-7.327257,1.272347],[-5.798552,-1.937586],[-2.607215,-8.442557],[9.980492,7.397859],[9.404987,3.637323],[-2.395611,0.365925],[-0.512513,-9.831188],[-6.774233,-5.206411],[6.689248,0.706069],[5.765449,-0.689544],[9.024708,9.282319],[0.110264,9.322640],[4.932791,5.048831],[-3.223101,-7.900737],[5.323049,-1.930204],[1.992067,-9.483878],[-2.267254,-1.858862],[-6.203334,0.240706],[4.875105,-1.338304],[2.870466,-2.538953],[-4.933766,-1.395318],[-3.673533,-3.089449],[1.702343,0.185699],[3.341626,-0.356920],[6.658183,9.543890],[9.475054,-7.844027],[9.908792,1.899635],[-6.877791,-8.763623],[8.551429,2.599922],[8.364335,-9.714515],[-9.714621,9.240413],[1.010092,0.584261],[-6.442741,-4.420999],[5.201434,1.137098],[-4.999850,-8.842466],[-6.224652,9.639903],[4.381503,3.759041],[-0.560982,-8.481159],[-4.361217,-6.671303],[6.843430,-3.190704],[5.551187,1.862794],[9.502804,7.775641],[-5.696055,-0.178416],[-2.332318,-8.913188],[9.686545,7.712640],[0.504814,-5.524635],[4.933167,-4.932491],[5.387929,3.560147],[5.632831,0.094153],[4.406635,-1.760108],[-8.065281,-3.548151],[1.760907,3.529390],[-1.706554,-9.152902],[-1.255728,1.662328],[-8.620276,-9.720676],[4.874474,-5.537476],[-0.748744,6.072860],[-1.987566,0.115734],[4.521156,-7.896379],[0.055902,6.565482],[-6.513382,1.839379],[-6.422339,-4.833350],[-6.960967,-3.013908],[-6.050610,9.571343],[5.457754,-2.489045],[-6.481511,-3.847153],[3.492215,-3.041998],[-4.602793,4.648528],[-7.747035,5.214449],[9.148170,8.569286],[-3.467746,1.254290],[-5.607512,-6.376385],[-3.053053,3.482836],[-1.244086,-6.320120],[-6.983747,-3.482908],[-1.471984,1.604117],[8.192888,8.927548],[4.030310,-9.818439],[9.398610,-8.641022],[-8.998828,8.824335],[-0.145361,-7.735922],[-9.170112,-8.298669],[5.793151,-7.666383],[-5.820776,-6.069362],[-2.435680,5.208696],[-6.845570,-2.636215],[7.881651,0.341013],[5.029082,-4.482287],[-6.522378,-8.671310],[7.990081,4.532169],[-3.704577,-2.146692],[-6.657237,-6.992357],[6.835947,-3.857966],[2.298516,8.300107],[5.699926,3.840147],[2.690380,-3.230137],[-8.469951,-7.732384],[-8.657155,-3.221769],[2.521553,1.285756],[-8.314404,9.336644],[1.268580,9.186904],[-1.234921,-1.893057],[-4.720588,-8.314891],[7.133543,9.160057],[1.153943,-0.787208],[1.994909,-2.425197],[6.744924,-6.814514],[3.287404,6.777742],[2.198881,-4.260461],[1.372703,-8.276977],[-3.212729,5.262063],[8.189204,8.456937],[4.197261,-5.065238]], dtype = "float64")#candidate|13310|(231, 2)|const|float64
call_13309 = relay.TupleGetItem(func_8170_call(relay.reshape(const_13310.astype('float64'), [462,])), 1)
call_13311 = relay.TupleGetItem(func_8173_call(relay.reshape(const_13310.astype('float64'), [462,])), 1)
output = relay.Tuple([uop_13305,call_13309,const_13310,])
output2 = relay.Tuple([uop_13305,call_13311,const_13310,])
func_13318 = relay.Function([var_13304,], output)
mod['func_13318'] = func_13318
mod = relay.transform.InferType()(mod)
var_13319 = relay.var("var_13319", dtype = "float64", shape = (16, 12, 8))#candidate|13319|(16, 12, 8)|var|float64
output = func_13318(var_13319)
func_13320 = relay.Function([var_13319], output)
mutated_mod['func_13320'] = func_13320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5558_call = mod.get_global_var('func_5558')
func_5559_call = mutated_mod.get_global_var('func_5559')
call_13424 = relay.TupleGetItem(func_5558_call(), 0)
call_13425 = relay.TupleGetItem(func_5559_call(), 0)
output = call_13424
output2 = call_13425
func_13447 = relay.Function([], output)
mod['func_13447'] = func_13447
mod = relay.transform.InferType()(mod)
output = func_13447()
func_13448 = relay.Function([], output)
mutated_mod['func_13448'] = func_13448
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13461 = relay.var("var_13461", dtype = "float32", shape = (13, 6, 6))#candidate|13461|(13, 6, 6)|var|float32
uop_13462 = relay.erf(var_13461.astype('float32')) # shape=(13, 6, 6)
uop_13467 = relay.atan(uop_13462.astype('float64')) # shape=(13, 6, 6)
output = uop_13467
output2 = uop_13467
F = relay.Function([var_13461,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_13461,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

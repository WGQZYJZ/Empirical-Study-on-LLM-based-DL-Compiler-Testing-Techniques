==========mod==========
#[version = "0.0.5"]
def @func_3952() -> (Tensor[(14, 2, 8), float64],) {
  %0 = @func_2741() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_3457() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) {
  %2 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %3 = %2.0;
  %4 = @func_543() /* ty=Tensor[(14, 2, 8), float32] */;
  (%3, %4)
}

def @func_1009(%var_959: Tensor[(14, 2, 8), float32]) -> (Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64]) {
  %5 = @func_543() /* ty=Tensor[(14, 2, 8), float32] */;
  %6 = cast(%var_959, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %7 = shape_of(%5, dtype="int32") /* ty=Tensor[(3), int32] */;
  %8 = cast(%5, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %10 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %11 = logical_and(%8, %9) /* ty=Tensor[(14, 2, 8), bool] */;
  %12 = %10.0;
  (%11, %12)
}

def @func_2342() -> (Tensor[(14, 2, 8), float64],) {
  %13 = @func_1085() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %14 = %13.0;
  (%14,)
}

def @func_6237() -> (Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), float64]) {
  %15 = @func_1196() /* ty=(Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), int8], Tensor[(224), float64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %16 = @func_3457() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) */;
  %17 = %15.1;
  %18 = %16.0;
  (%17, %18)
}

def @func_5611() -> (Tensor[(14, 2, 8), float64],) {
  %19 = @func_1037() /* ty=Tensor[(14, 2, 8), float64] */;
  (%19,)
}

def @func_5406() -> (Tensor[(14, 2, 8), float64],) {
  %20 = @func_1816() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16]) */;
  %21 = %20.0;
  (%21,)
}

def @func_329(%var_327: Tensor[(1408, 2), uint64]) -> (Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(1408, 2), uint64]) {
  %22 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %23 = %22.1;
  %24 = cast(%23, dtype="int16") /* ty=Tensor[(2, 11, 7), int16] */;
  %25 = cast(%var_327, dtype="uint64") /* ty=Tensor[(1408, 2), uint64] */;
  %26 = reshape(%24, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
  %27 = reshape(%25, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), uint64] */;
  %28 = @func_128(%26, %27) /* ty=(Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), bool]) */;
  %29 = %28.2;
  (%23, %29, %var_327)
}

def @func_813() -> (Tensor[(154), int16], Tensor[(14, 2, 8), float32]) {
  %30 = @func_721() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), int16]) */;
  %31 = %30.0;
  %32 = @func_543() /* ty=Tensor[(14, 2, 8), float32] */;
  (%31, %32)
}

def @func_5255(%var_5221: Tensor[(14, 1, 7), float32]) -> (Tensor[(14, 2, 8), float64], Tensor[(14, 1, 7), float64], Tensor[(14, 2, 8), float64]) {
  %33 = cast(%var_5221, dtype="float32") /* ty=Tensor[(14, 1, 7), float32] */;
  %34 = atanh(%33) /* ty=Tensor[(14, 1, 7), float32] */;
  %35 = cast(%34, dtype="float64") /* ty=Tensor[(14, 1, 7), float64] */;
  %36 = @func_5205() /* ty=Tensor[(14, 2, 8), float64] */;
  %37 = acos(%35) /* ty=Tensor[(14, 1, 7), float64] */;
  %38 = @func_918() /* ty=Tensor[(14, 2, 8), float64] */;
  (%36, %37, %38)
}

def @func_4859(%var_4844: Tensor[(11, 11, 5), float64]) -> (Tensor[(11, 11, 5), float32],) {
  %39 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
  %40 = shape_of(%var_4844, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(%var_4844, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %43 = floor_divide(%41, %42) /* ty=Tensor[(11, 11, 5), float64] */;
  %44 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 11, 5), float64] */, dtype="bool") /* ty=Tensor[(11, 11, 5), bool] */;
  %45 = shape_of(%43, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(%43, dtype="bool") /* ty=Tensor[(11, 11, 5), bool] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %48 = less_equal(%46, %47) /* ty=Tensor[(11, 11, 5), bool] */;
  %49 = cast(%48, dtype="float32") /* ty=Tensor[(11, 11, 5), float32] */;
  %50 = sin(%49) /* ty=Tensor[(11, 11, 5), float32] */;
  (%50,)
}

def @func_6044(%var_6005: Tensor[(154), int16], %var_6006: Tensor[(2816), uint64], %var_6025: Tensor[(560), bool], %var_6037: Tensor[(2816), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), float32], Tensor[(14, 2, 8), float32], Tensor[(560), bool], Tensor[(2816), bool]) {
  %51 = cast(%var_6005, dtype="int16") /* ty=Tensor[(154), int16] */;
  %52 = cast(%var_6006, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %53 = reshape(%51, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %54 = reshape(%52, newshape=[1, 2816]) /* ty=Tensor[(1, 2816), uint64] */;
  %55 = @func_2528(%53, %54) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32]) */;
  %56 = %55.1;
  %57 = cast(%56, dtype="float32") /* ty=Tensor[(154), float32] */;
  %58 = cast(%var_6025, dtype="bool") /* ty=Tensor[(560), bool] */;
  %59 = @func_4916() /* ty=Tensor[(14, 2, 8), float64] */;
  %60 = cast(%59, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %61 = reshape(%58, newshape=[5, 7, 16]) /* ty=Tensor[(5, 7, 16), bool] */;
  %62 = reshape(%60, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %63 = @func_5522(%61, %62) /* ty=(Tensor[(14, 2, 8), float32], Tensor[(224), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(154), int16], Tensor[(5, 7, 16), bool]) */;
  %64 = cast(%var_6037, dtype="bool") /* ty=Tensor[(2816), bool] */;
  %65 = shape_of(%var_6006, dtype="int32") /* ty=Tensor[(1), int32] */;
  %66 = cast(%var_6006, dtype="bool") /* ty=Tensor[(2816), bool] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?), bool] */;
  %68 = atan(%57) /* ty=Tensor[(154), float32] */;
  %69 = %63.0;
  %70 = logical_and(%66, %67) /* ty=Tensor[(2816), bool] */;
  (%59, %var_6005, %68, %69, %var_6025, %70)
}

def @func_6469() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), uint32], Tensor[(14, 2, 8), float64]) {
  %71 = @func_5428() /* ty=(Tensor[(14, 2, 8), uint32], Tensor[(2816), uint64], Tensor[(154), int16], Tensor[(2816), uint64]) */;
  %72 = @func_1037() /* ty=Tensor[(14, 2, 8), float64] */;
  %73 = %71.0;
  %74 = @func_4981() /* ty=Tensor[(14, 2, 8), float64] */;
  (%72, %73, %74)
}

def @func_5910() -> Tensor[(2816), uint64] {
  %75 = @func_5428() /* ty=(Tensor[(14, 2, 8), uint32], Tensor[(2816), uint64], Tensor[(154), int16], Tensor[(2816), uint64]) */;
  %75.3
}

def @func_5560() -> (Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), float32]) {
  %76 = @func_2342() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %77 = @func_2854() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), float32]) */;
  %78 = %76.0;
  %79 = %77.1;
  (%78, %79)
}

def @func_918() -> Tensor[(14, 2, 8), float64] {
  @func_590() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_1816() -> (Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16]) {
  %80 = @func_918() /* ty=Tensor[(14, 2, 8), float64] */;
  %81 = cast(%80, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %82 = acos(%81) /* ty=Tensor[(14, 2, 8), float64] */;
  %83 = @func_657() /* ty=Tensor[(2, 11, 7), int16] */;
  (%82, %83)
}

def @func_6393(%var_6367: uint64, %var_6374: Tensor[(154), int16], %var_6375: Tensor[(2816), uint64]) -> (Tensor[(14, 13, 13), uint64], Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(560), bool], Tensor[(14, 13, 13), float64], Tensor[(14, 2, 8), float64], Tensor[(154), int16]) {
  %84 = cast(%var_6367, dtype="uint64") /* ty=uint64 */;
  %85 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 13, 13), uint64] */, dtype="uint64") /* ty=Tensor[(14, 13, 13), uint64] */;
  %86 = cast(%var_6374, dtype="int16") /* ty=Tensor[(154), int16] */;
  %87 = cast(%var_6375, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %88 = cast(meta[relay.Constant][2] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %89 = cast(%var_6375, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %90 = reshape(%86, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %91 = reshape(%87, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %92 = reshape(%88, newshape=[560]) /* ty=Tensor[(560), bool] */;
  %93 = reshape(%89, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %94 = @func_6044(%90, %91, %92, %93) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), float32], Tensor[(14, 2, 8), float32], Tensor[(560), bool], Tensor[(2816), bool]) */;
  %95 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 13, 13), uint64] */, dtype="float64") /* ty=Tensor[(14, 13, 13), float64] */;
  %96 = cast(%var_6374, dtype="int16") /* ty=Tensor[(154), int16] */;
  %97 = cast(%var_6375, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %98 = reshape(%96, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
  %99 = reshape(%97, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), uint64] */;
  %100 = @func_128(%98, %99) /* ty=(Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), bool]) */;
  %101 = bitwise_and(%84, %85) /* ty=Tensor[(14, 13, 13), uint64] */;
  %102 = %94.0;
  %103 = acosh(%95) /* ty=Tensor[(14, 13, 13), float64] */;
  %104 = @func_4966() /* ty=Tensor[(14, 2, 8), float64] */;
  %105 = %100.0;
  (%101, %102, %var_6374, %var_6375, meta[relay.Constant][2] /* ty=Tensor[(560), bool] */, %103, %104, %105)
}

def @func_5115() -> (Tensor[(14, 2, 8), int8],) {
  %106 = @func_4724() /* ty=Tensor[(14, 2, 8), int8] */;
  (%106,)
}

def @func_2592() -> (Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float32]) {
  %107 = @func_657() /* ty=Tensor[(2, 11, 7), int16] */;
  %108 = @func_543() /* ty=Tensor[(14, 2, 8), float32] */;
  (%107, %108)
}

def @func_5970(%var_5965: Tensor[(1200), float64]) -> (Tensor[(14, 2, 8), float64], Tensor[(8, 10, 15), bool], Tensor[(1200), float64]) {
  %109 = @func_3000() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) */;
  %110 = cast(%var_5965, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %111 = reshape(%110, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), float64] */;
  %112 = %109.0;
  %113 = @func_3993(%111) /* ty=Tensor[(8, 10, 15), bool] */;
  (%112, %113, %var_5965)
}

def @func_5428() -> (Tensor[(14, 2, 8), uint32], Tensor[(2816), uint64], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %114 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %115 = %114.0;
  %116 = cast(meta[relay.Constant][3] /* ty=Tensor[(14, 2, 8), float64] */, dtype="uint32") /* ty=Tensor[(14, 2, 8), uint32] */;
  %117 = shape_of(%115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(%115, dtype="uint32") /* ty=Tensor[(14, 2, 8), uint32] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %120 = cast(meta[relay.Constant][4] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
  %121 = cast(meta[relay.Constant][5] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %122 = reshape(%120, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %123 = reshape(%121, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %124 = @func_2154(%122, %123) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %125 = bitwise_xor(%118, %119) /* ty=Tensor[(14, 2, 8), uint32] */;
  %126 = %124.3;
  (%125, %126, meta[relay.Constant][4] /* ty=Tensor[(154), int16] */, meta[relay.Constant][5] /* ty=Tensor[(2816), uint64] */)
}

def @func_61(%var_53: Tensor[(2, 11, 7), int16]) -> Tensor[(2, 11, 7), int16] {
  %127 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 11, 7), int16] */, dtype="int16") /* ty=Tensor[(2, 11, 7), int16] */;
  %128 = shape_of(%var_53, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(%var_53, dtype="int16") /* ty=Tensor[(2, 11, 7), int16] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%129, %130) /* ty=Tensor[(2, 11, 7), int16] */
}

def @func_5893() -> (Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), int8]) {
  %131 = @func_3617() /* ty=Tensor[(154), int16] */;
  %132 = cast(%131, dtype="int16") /* ty=Tensor[(154), int16] */;
  %133 = cast(meta[relay.Constant][7] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %134 = reshape(%132, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
  %135 = reshape(%133, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), uint64] */;
  %136 = @func_128(%134, %135) /* ty=(Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), bool]) */;
  %137 = @func_5115() /* ty=(Tensor[(14, 2, 8), int8],) */;
  %138 = %136.1;
  %139 = %137.0;
  (%131, %138, meta[relay.Constant][7] /* ty=Tensor[(2816), uint64] */, %139)
}

def @func_1385() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8]) {
  %140 = @func_721() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), int16]) */;
  %141 = %140.4;
  %142 = cast(%141, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %143 = reshape(%142, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %144 = @func_264(%143) /* ty=(Tensor[(14, 2, 8), int8],) */;
  %145 = %144.0;
  (%141, %145)
}

def @func_4724() -> Tensor[(14, 2, 8), int8] {
  @func_4395() /* ty=Tensor[(14, 2, 8), int8] */
}

def @func_264(%var_241: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), int8],) {
  %146 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %147 = %146.0;
  %148 = cast(%var_241, dtype="int8") /* ty=Tensor[(14, 2, 8), int8] */;
  %149 = shape_of(%147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%147, dtype="int8") /* ty=Tensor[(14, 2, 8), int8] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %152 = logical_xor(%150, %151) /* ty=Tensor[(14, 2, 8), int8] */;
  (%152,)
}

def @func_2079(%var_2050: Tensor[(4, 7, 5), float64]) -> (Tensor[(4, 7, 5), float64], Tensor[(14, 2, 8), float64], Tensor[(4, 7, 5), bool], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(2, 11, 7), int16], Tensor[(4, 7, 5), float32]) {
  %153 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 7, 5), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 5), float64] */;
  %154 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(4, 7, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 7, 5), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 5), float64] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %157 = @func_1385() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8]) */;
  %158 = cast(%var_2050, dtype="bool") /* ty=Tensor[(4, 7, 5), bool] */;
  %159 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(4, 7, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %160 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 7, 5), float64] */, dtype="bool") /* ty=Tensor[(4, 7, 5), bool] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %162 = %157.0;
  %163 = cast(%162, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %164 = reshape(%163, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %165 = @func_264(%164) /* ty=(Tensor[(14, 2, 8), int8],) */;
  %166 = @func_1816() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16]) */;
  %167 = cast(%var_2050, dtype="int16") /* ty=Tensor[(4, 7, 5), int16] */;
  %168 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(4, 7, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 7, 5), float64] */, dtype="int16") /* ty=Tensor[(4, 7, 5), int16] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %171 = bitwise_and(%169, %170) /* ty=Tensor[(4, 7, 5), int16] */;
  %172 = cast(%171, dtype="float32") /* ty=Tensor[(4, 7, 5), float32] */;
  %173 = maximum(%155, %156) /* ty=Tensor[(4, 7, 5), float64] */;
  %174 = greater(%160, %161) /* ty=Tensor[(4, 7, 5), bool] */;
  %175 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
  %176 = %165.0;
  %177 = %166.1;
  %178 = cosh(%172) /* ty=Tensor[(4, 7, 5), float32] */;
  (%173, %162, %174, %175, %176, %177, %178)
}

def @func_2769() -> (Tensor[(14, 2, 8), float64],) {
  %179 = @func_1431() /* ty=Tensor[(14, 2, 8), float64] */;
  (%179,)
}

def @func_3718() -> Tensor[(224), float64] {
  @func_2000() /* ty=Tensor[(224), float64] */
}

def @func_414(%var_397: Tensor[(16, 8, 8), float64]) -> Tensor[(16, 8, 8), float32] {
  %180 = cast(%var_397, dtype="float64") /* ty=Tensor[(16, 8, 8), float64] */;
  %181 = sigmoid(%180) /* ty=Tensor[(16, 8, 8), float64] */;
  %182 = cast(%181, dtype="float32") /* ty=Tensor[(16, 8, 8), float32] */;
  log2(%182) /* ty=Tensor[(16, 8, 8), float32] */
}

def @func_171() -> (Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) {
  %183 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 2, 8), float64] */, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %184 = cast(meta[relay.Constant][11] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
  %185 = reshape(%184, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
  %186 = log(%183) /* ty=Tensor[(14, 2, 8), float64] */;
  %187 = @func_61(%185) /* ty=Tensor[(2, 11, 7), int16] */;
  (%186, %187, meta[relay.Constant][11] /* ty=Tensor[(154), int16] */)
}

def @func_2854() -> (Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), float32]) {
  %188 = @func_2592() /* ty=(Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float32]) */;
  %189 = %188.0;
  %190 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %191 = %190.2;
  %192 = cast(%191, dtype="float32") /* ty=Tensor[(154), float32] */;
  %193 = shape_of(%189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%189, dtype="float32") /* ty=Tensor[(2, 11, 7), float32] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %196 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
  %197 = divide(%194, %195) /* ty=Tensor[(2, 11, 7), float32] */;
  (%196, %197)
}

def @func_2528(%var_2487: Tensor[(154), int16], %var_2488: Tensor[(1, 2816), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32]) {
  %198 = @func_1816() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16]) */;
  %199 = cast(%var_2487, dtype="int16") /* ty=Tensor[(154), int16] */;
  %200 = cast(%var_2488, dtype="uint64") /* ty=Tensor[(1, 2816), uint64] */;
  %201 = reshape(%199, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %202 = reshape(%200, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %203 = @func_2154(%201, %202) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %204 = cast(%var_2488, dtype="float32") /* ty=Tensor[(1, 2816), float32] */;
  %205 = sinh(%204) /* ty=Tensor[(1, 2816), float32] */;
  %206 = cast(%205, dtype="float32") /* ty=Tensor[(1, 2816), float32] */;
  %207 = %198.0;
  %208 = %203.1;
  %209 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
  %210 = sqrt(%206) /* ty=Tensor[(1, 2816), float32] */;
  (%207, %208, %var_2487, %209, %210)
}

def @func_721() -> (Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), int16]) {
  %211 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %212 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %213 = %212.0;
  %214 = cast(%213, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %215 = reshape(%214, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %216 = @func_264(%215) /* ty=(Tensor[(14, 2, 8), int8],) */;
  %217 = cast(%213, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %218 = reshape(%217, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %219 = @func_201(%218) /* ty=(Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float32]) */;
  %220 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %221 = %211.2;
  %222 = %216.0;
  %223 = %219.0;
  %224 = %220.0;
  %225 = @func_657() /* ty=Tensor[(2, 11, 7), int16] */;
  %226 = @func_657() /* ty=Tensor[(2, 11, 7), int16] */;
  (%221, %213, %222, %223, %224, %225, %226)
}

def @main(%var_6493: Tensor[(6, 8, 5), float32]) -> Tensor[(6, 8, 5), float32] {
  %227 = cast(%var_6493, dtype="float32") /* ty=Tensor[(6, 8, 5), float32] */;
  %228 = erf(%227) /* ty=Tensor[(6, 8, 5), float32] */;
  %229 = cast(%228, dtype="float32") /* ty=Tensor[(6, 8, 5), float32] */;
  exp(%229) /* ty=Tensor[(6, 8, 5), float32] */
}

def @func_4981() -> Tensor[(14, 2, 8), float64] {
  %230 = @func_1385() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8]) */;
  %230.0
}

def @func_4541() -> (Tensor[(14, 2, 8), float64],) {
  %231 = @func_1196() /* ty=(Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), int8], Tensor[(224), float64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %232 = %231.3;
  (%232,)
}

def @func_6198() -> (Tensor[(14, 2, 8), int8],) {
  %233 = @func_4724() /* ty=Tensor[(14, 2, 8), int8] */;
  (%233,)
}

def @func_6440() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32], Tensor[(560), bool]) {
  %234 = @func_2741() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %235 = cast(meta[relay.Constant][12] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %236 = %234.0;
  %237 = cast(%236, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %238 = reshape(%235, newshape=[5, 7, 16]) /* ty=Tensor[(5, 7, 16), bool] */;
  %239 = reshape(%237, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %240 = @func_5522(%238, %239) /* ty=(Tensor[(14, 2, 8), float32], Tensor[(224), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(154), int16], Tensor[(5, 7, 16), bool]) */;
  %241 = %240.0;
  (%236, %241, meta[relay.Constant][12] /* ty=Tensor[(560), bool] */)
}

def @func_5833() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %242 = @func_3065() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %243 = cast(meta[relay.Constant][13] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
  %244 = cast(meta[relay.Constant][14] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %245 = reshape(%243, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %246 = reshape(%244, newshape=[1, 2816]) /* ty=Tensor[(1, 2816), uint64] */;
  %247 = @func_2528(%245, %246) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32]) */;
  %248 = %242.1;
  %249 = %247.0;
  (%248, %249, meta[relay.Constant][13] /* ty=Tensor[(154), int16] */, meta[relay.Constant][14] /* ty=Tensor[(2816), uint64] */)
}

def @func_4395() -> Tensor[(14, 2, 8), int8] {
  %250 = @func_1385() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8]) */;
  %250.1
}

def @func_1059(%var_1046: Tensor[(14, 1, 8), float64], %var_1051: Tensor[(224), float64], %var_1054: Tensor[(1024), float64]) -> (Tensor[(14, 1, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(224), float64], Tensor[(16, 8, 8), float32], Tensor[(1024), float64]) {
  %251 = cast(%var_1046, dtype="float64") /* ty=Tensor[(14, 1, 8), float64] */;
  %252 = cast(%var_1051, dtype="float64") /* ty=Tensor[(224), float64] */;
  %253 = reshape(%252, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %254 = @func_264(%253) /* ty=(Tensor[(14, 2, 8), int8],) */;
  %255 = cast(%var_1054, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %256 = reshape(%255, newshape=[16, 8, 8]) /* ty=Tensor[(16, 8, 8), float64] */;
  %257 = rsqrt(%251) /* ty=Tensor[(14, 1, 8), float64] */;
  %258 = %254.0;
  %259 = @func_414(%256) /* ty=Tensor[(16, 8, 8), float32] */;
  (%257, %258, %var_1051, %259, %var_1054)
}

def @func_4218(%var_4200: Tensor[(14, 5, 11), float32], %var_4207: Tensor[(4, 9, 13), float32]) -> (Tensor[(14, 5, 11), float32], Tensor[(4, 9, 13), bool]) {
  %260 = cast(5.72692f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %261 = cast(%var_4200, dtype="float32") /* ty=Tensor[(14, 5, 11), float32] */;
  %262 = cast(5.72692f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %263 = cast(%var_4207, dtype="bool") /* ty=Tensor[(4, 9, 13), bool] */;
  %264 = greater_equal(%262, %263) /* ty=Tensor[(4, 9, 13), bool] */;
  %265 = cast(%var_4207, dtype="bool") /* ty=Tensor[(4, 9, 13), bool] */;
  %266 = shape_of(%264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %267 = cast(%264, dtype="bool") /* ty=Tensor[(4, 9, 13), bool] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %269 = floor_divide(%260, %261) /* ty=Tensor[(14, 5, 11), float32] */;
  %270 = logical_and(%267, %268) /* ty=Tensor[(4, 9, 13), bool] */;
  (%269, %270)
}

def @func_5158(%var_5151: Tensor[(112), float64], %var_5152: Tensor[(224), float64], %var_5153: Tensor[(4, 256), float64]) -> (Tensor[(154), int16], Tensor[(14, 2, 8), int8], Tensor[(112), float64], Tensor[(224), float64], Tensor[(4, 256), float64]) {
  %271 = @func_721() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), int16]) */;
  %272 = cast(%var_5151, dtype="float64") /* ty=Tensor[(112), float64] */;
  %273 = cast(%var_5152, dtype="float64") /* ty=Tensor[(224), float64] */;
  %274 = cast(%var_5153, dtype="float64") /* ty=Tensor[(4, 256), float64] */;
  %275 = reshape(%272, newshape=[14, 1, 8]) /* ty=Tensor[(14, 1, 8), float64] */;
  %276 = reshape(%273, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %277 = reshape(%274, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %278 = @func_1059(%275, %276, %277) /* ty=(Tensor[(14, 1, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(224), float64], Tensor[(16, 8, 8), float32], Tensor[(1024), float64]) */;
  %279 = %271.0;
  %280 = %278.1;
  (%279, %280, %var_5151, %var_5152, %var_5153)
}

def @func_3335(%var_3315: Tensor[(6, 3, 14), bool]) -> (Tensor[(6, 3, 14), bool], Tensor[(224), float64]) {
  %281 = cast(%var_3315, dtype="bool") /* ty=Tensor[(6, 3, 14), bool] */;
  %282 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(6, 3, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %283 = cast(meta[relay.Constant][15] /* ty=Tensor[(6, 3, 14), bool] */, dtype="bool") /* ty=Tensor[(6, 3, 14), bool] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %285 = logical_and(%283, %284) /* ty=Tensor[(6, 3, 14), bool] */;
  %286 = @func_2000() /* ty=Tensor[(224), float64] */;
  (%285, %286)
}

def @func_4650(%var_4639: Tensor[(11, 1), float64]) -> (Tensor[(11, 1), float64],) {
  %287 = cast(%var_4639, dtype="float64") /* ty=Tensor[(11, 1), float64] */;
  %288 = sigmoid(%287) /* ty=Tensor[(11, 1), float64] */;
  (%288,)
}

def @func_1613(%var_1600: Tensor[(16, 14, 1), float64]) -> Tensor[(16, 14, 1), float64] {
  %289 = cast(%var_1600, dtype="float64") /* ty=Tensor[(16, 14, 1), float64] */;
  sin(%289) /* ty=Tensor[(16, 14, 1), float64] */
}

def @func_1946() -> (Tensor[(14, 2, 8), float64], Tensor[(224), float64]) {
  %290 = @func_590() /* ty=Tensor[(14, 2, 8), float64] */;
  %291 = cast(%290, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %292 = @func_895() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
  %293 = cosh(%291) /* ty=Tensor[(14, 2, 8), float64] */;
  %294 = %292.2;
  (%293, %294)
}

def @func_5105(%var_5089: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), uint32], Tensor[(14, 2, 8), float32]) {
  %295 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
  %296 = cast(%var_5089, dtype="uint32") /* ty=Tensor[(14, 2, 8), uint32] */;
  %297 = shape_of(%295, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%295, dtype="uint32") /* ty=Tensor[(14, 2, 8), uint32] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %300 = @func_2729() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) */;
  %301 = left_shift(%298, %299) /* ty=Tensor[(14, 2, 8), uint32] */;
  %302 = %300.2;
  (%301, %302)
}

def @func_2241() -> Tensor[(224), float64] {
  %303 = @func_1946() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
  %303.1
}

def @func_128(%var_102: Tensor[(2, 11, 7), int16], %var_116: Tensor[(16, 16, 11), uint64]) -> (Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), bool]) {
  %304 = cast(meta[relay.Constant][16] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
  %305 = reshape(%304, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
  %306 = @func_61(%305) /* ty=Tensor[(2, 11, 7), int16] */;
  %307 = cast(%306, dtype="int16") /* ty=Tensor[(2, 11, 7), int16] */;
  %308 = reshape(%307, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
  %309 = cast(meta[relay.Constant][18] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %310 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 16, 11), int8] */, dtype="int8") /* ty=Tensor[(16, 16, 11), int8] */;
  %311 = minimum(%309, %310) /* ty=Tensor[(16, 16, 11), int8] */;
  %312 = cast(%311, dtype="uint64") /* ty=Tensor[(16, 16, 11), uint64] */;
  %313 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(16, 16, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 16, 11), int8] */, dtype="uint64") /* ty=Tensor[(16, 16, 11), uint64] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %316 = maximum(%314, %315) /* ty=Tensor[(16, 16, 11), uint64] */;
  %317 = cast(%var_116, dtype="uint64") /* ty=Tensor[(16, 16, 11), uint64] */;
  %318 = shape_of(%316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(%316, dtype="uint64") /* ty=Tensor[(16, 16, 11), uint64] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %321 = cast(%var_102, dtype="int16") /* ty=Tensor[(2, 11, 7), int16] */;
  %322 = reshape(%321, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
  %323 = cast(%var_102, dtype="bool") /* ty=Tensor[(2, 11, 7), bool] */;
  %324 = shape_of(%306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %325 = cast(%306, dtype="bool") /* ty=Tensor[(2, 11, 7), bool] */;
  %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %327 = less_equal(%325, %326) /* ty=Tensor[(2, 11, 7), bool] */;
  %328 = cast(%327, dtype="bool") /* ty=Tensor[(2, 11, 7), bool] */;
  %329 = shape_of(%var_102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%var_102, dtype="bool") /* ty=Tensor[(2, 11, 7), bool] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %332 = @func_61(%308) /* ty=Tensor[(2, 11, 7), int16] */;
  %333 = logical_xor(%319, %320) /* ty=Tensor[(16, 16, 11), uint64] */;
  %334 = @func_61(%322) /* ty=Tensor[(2, 11, 7), int16] */;
  %335 = logical_and(%330, %331) /* ty=Tensor[(2, 11, 7), bool] */;
  (meta[relay.Constant][16] /* ty=Tensor[(154), int16] */, %332, %333, %334, %335)
}

def @func_3144() -> Tensor[(14, 2, 8), float64] {
  %336 = @func_3065() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %336.1
}

def @func_4081(%var_4052: Tensor[(224), float64], %var_4077: Tensor[(2816), uint64]) -> (Tensor[(224), int64], Tensor[(2, 11, 7), int16], Tensor[(224), float64], Tensor[(2, 11, 7), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), float64]) {
  %337 = @func_3486() /* ty=(Tensor[(224), float64],) */;
  %338 = %337.0;
  %339 = cast(%var_4052, dtype="int64") /* ty=Tensor[(224), int64] */;
  %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(1), int32] */;
  %341 = cast(%338, dtype="int64") /* ty=Tensor[(224), int64] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?), int64] */;
  %343 = @func_1816() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16]) */;
  %344 = @func_3486() /* ty=(Tensor[(224), float64],) */;
  %345 = cast(%var_4077, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %346 = reshape(%345, newshape=[1408, 2]) /* ty=Tensor[(1408, 2), uint64] */;
  %347 = @func_329(%346) /* ty=(Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(1408, 2), uint64]) */;
  %348 = bitwise_and(%341, %342) /* ty=Tensor[(224), int64] */;
  %349 = %343.1;
  %350 = %344.0;
  %351 = %347.0;
  %352 = @func_590() /* ty=Tensor[(14, 2, 8), float64] */;
  (%348, %349, %350, %351, %var_4077, %352)
}

def @func_5522(%var_5443: Tensor[(5, 7, 16), bool], %var_5456: Tensor[(224), float64]) -> (Tensor[(14, 2, 8), float32], Tensor[(224), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(154), int16], Tensor[(5, 7, 16), bool]) {
  %353 = cast(%var_5456, dtype="float64") /* ty=Tensor[(224), float64] */;
  %354 = reshape(%353, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %355 = @func_627(%354) /* ty=(Tensor[(14, 2, 8), float32],) */;
  %356 = @func_721() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), int16]) */;
  %357 = @func_4527() /* ty=(Tensor[(224), float64], Tensor[(14, 2, 8), float32], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), bool]) */;
  %358 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %359 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 7, 16), bool] */, dtype="float32") /* ty=Tensor[(5, 7, 16), float32] */;
  %360 = cosh(%359) /* ty=Tensor[(5, 7, 16), float32] */;
  %361 = cast(%360, dtype="float32") /* ty=Tensor[(5, 7, 16), float32] */;
  %362 = log(%361) /* ty=Tensor[(5, 7, 16), float32] */;
  %363 = cast(%var_5443, dtype="bool") /* ty=Tensor[(5, 7, 16), bool] */;
  %364 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(5, 7, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 7, 16), bool] */, dtype="bool") /* ty=Tensor[(5, 7, 16), bool] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %367 = logical_and(%365, %366) /* ty=Tensor[(5, 7, 16), bool] */;
  %368 = cast(%367, dtype="bool") /* ty=Tensor[(5, 7, 16), bool] */;
  %369 = shape_of(%362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%362, dtype="bool") /* ty=Tensor[(5, 7, 16), bool] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %372 = %355.0;
  %373 = %356.2;
  %374 = %357.3;
  %375 = %358.2;
  %376 = less(%370, %371) /* ty=Tensor[(5, 7, 16), bool] */;
  (%372, %var_5456, %373, %374, %375, %376)
}

def @func_201(%var_179: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float32]) {
  %377 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %378 = %377.0;
  %379 = cast(%var_179, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %380 = shape_of(%378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %381 = cast(%378, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %383 = cast(%var_179, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %384 = less_equal(%381, %382) /* ty=Tensor[(14, 2, 8), bool] */;
  %385 = log10(%383) /* ty=Tensor[(14, 2, 8), float32] */;
  (%384, %385)
}

def @func_4966() -> Tensor[(14, 2, 8), float64] {
  @func_3144() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_1085() -> (Tensor[(14, 2, 8), float64],) {
  %386 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %387 = %386.0;
  (%387,)
}

def @func_4618(%var_4591: Tensor[(154), int16], %var_4592: Tensor[(2816), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(4, 60), float32], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(2816), uint64], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(2816), uint64]) {
  %388 = @func_918() /* ty=Tensor[(14, 2, 8), float64] */;
  %389 = cast(%388, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %390 = asin(%389) /* ty=Tensor[(14, 2, 8), float64] */;
  %391 = cast(%390, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %392 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 60), float32] */, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %393 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 60), float32] */, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %394 = reshape(%392, newshape=[4, 15, 4]) /* ty=Tensor[(4, 15, 4), float32] */;
  %395 = reshape(%393, newshape=[4, 15, 4]) /* ty=Tensor[(4, 15, 4), float32] */;
  %396 = @func_4187(%394, %395) /* ty=(Tensor[(4, 15, 4), float32], Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float64]) */;
  %397 = cast(%390, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %398 = reshape(%397, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %399 = @func_264(%398) /* ty=(Tensor[(14, 2, 8), int8],) */;
  %400 = cast(%var_4591, dtype="int16") /* ty=Tensor[(154), int16] */;
  %401 = cast(%var_4592, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %402 = reshape(%400, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %403 = reshape(%401, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %404 = @func_1112(%402, %403) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(60, 2), float32], Tensor[(154), int16], Tensor[(2816), uint64]) */;
  %405 = cast(%390, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %406 = reshape(%405, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %407 = @func_3109(%406) /* ty=(Tensor[(14, 2, 8), float32], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64]) */;
  %408 = sin(%391) /* ty=Tensor[(14, 2, 8), float64] */;
  %409 = %396.2;
  %410 = @func_2205() /* ty=Tensor[(14, 2, 8), float64] */;
  %411 = %399.0;
  %412 = %404.4;
  %413 = %407.3;
  (%408, %409, meta[relay.Constant][20] /* ty=Tensor[(4, 60), float32] */, %410, %411, %412, %var_4591, %var_4592, %413)
}

def @func_1259() -> (Tensor[(14, 2, 8), float64], Tensor[(154), int16]) {
  %414 = @func_721() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), int16]) */;
  %415 = @func_1037() /* ty=Tensor[(14, 2, 8), float64] */;
  %416 = %414.0;
  (%415, %416)
}

def @func_1723(%var_1698: Tensor[(9, 2, 4), float32]) -> Tensor[(9, 2, 4), bool] {
  %417 = cast(%var_1698, dtype="float32") /* ty=Tensor[(9, 2, 4), float32] */;
  %418 = cosh(%417) /* ty=Tensor[(9, 2, 4), float32] */;
  %419 = cast(%var_1698, dtype="bool") /* ty=Tensor[(9, 2, 4), bool] */;
  %420 = shape_of(%418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%418, dtype="bool") /* ty=Tensor[(9, 2, 4), bool] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%421, %422) /* ty=Tensor[(9, 2, 4), bool] */
}

def @func_2741() -> (Tensor[(14, 2, 8), float64],) {
  %423 = @func_1946() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
  %424 = %423.0;
  (%424,)
}

def @func_657() -> Tensor[(2, 11, 7), int16] {
  %425 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %425.1
}

def @func_627(%var_620: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), float32],) {
  %426 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
  %427 = cast(%var_620, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %428 = shape_of(%426, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%426, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %431 = floor_mod(%429, %430) /* ty=Tensor[(14, 2, 8), float32] */;
  (%431,)
}

def @func_6295() -> (Tensor[(14, 2, 8), float32], Tensor[(224), float64], Tensor[(14, 2, 8), float64]) {
  %432 = @func_3952() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %433 = %432.0;
  %434 = cast(%433, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %435 = @func_1946() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
  %436 = @func_3065() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %437 = sigmoid(%434) /* ty=Tensor[(14, 2, 8), float32] */;
  %438 = %435.1;
  %439 = %436.1;
  (%437, %438, %439)
}

def @func_561() -> Tensor[(14, 2, 8), float64] {
  %440 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %440.0
}

def @func_3587(%var_3563: Tensor[(11, 13, 8), uint8], %var_3564: Tensor[(11, 13, 8), uint8], %var_3585: Tensor[(42, 6), bool]) -> (Tensor[(11, 13, 8), float32], Tensor[(14, 2, 8), float64], Tensor[(224), float64], Tensor[(6, 3, 14), bool], Tensor[(42, 6), bool]) {
  %441 = cast(%var_3564, dtype="uint8") /* ty=Tensor[(11, 13, 8), uint8] */;
  %442 = shape_of(%var_3563, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%var_3563, dtype="uint8") /* ty=Tensor[(11, 13, 8), uint8] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %445 = add(%443, %444) /* ty=Tensor[(11, 13, 8), uint8] */;
  %446 = cast(%445, dtype="float32") /* ty=Tensor[(11, 13, 8), float32] */;
  %447 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %448 = @func_937() /* ty=(Tensor[(224), float64],) */;
  %449 = cast(%var_3585, dtype="bool") /* ty=Tensor[(42, 6), bool] */;
  %450 = reshape(%449, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), bool] */;
  %451 = @func_3335(%450) /* ty=(Tensor[(6, 3, 14), bool], Tensor[(224), float64]) */;
  %452 = cos(%446) /* ty=Tensor[(11, 13, 8), float32] */;
  %453 = %447.0;
  %454 = %448.0;
  %455 = %451.0;
  (%452, %453, %454, %455, %var_3585)
}

def @func_3486() -> (Tensor[(224), float64],) {
  %456 = @func_895() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
  %457 = %456.2;
  (%457,)
}

def @func_5176() -> (Tensor[(14, 2, 8), float64],) {
  %458 = @func_918() /* ty=Tensor[(14, 2, 8), float64] */;
  (%458,)
}

def @func_1406(%var_1399: Tensor[(12, 1, 5), float32]) -> (Tensor[(12, 1, 5), float32], Tensor[(14, 2, 8), float64]) {
  %459 = cast(%var_1399, dtype="float32") /* ty=Tensor[(12, 1, 5), float32] */;
  %460 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %461 = acos(%459) /* ty=Tensor[(12, 1, 5), float32] */;
  %462 = %460.0;
  (%461, %462)
}

def @func_4916() -> Tensor[(14, 2, 8), float64] {
  %463 = @func_3791() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %463.0
}

def @func_3617() -> Tensor[(154), int16] {
  %464 = @func_813() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float32]) */;
  %464.0
}

def @func_2374() -> (Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64]) {
  %465 = @func_2314() /* ty=Tensor[(14, 2, 8), bool] */;
  %466 = @func_2314() /* ty=Tensor[(14, 2, 8), bool] */;
  %467 = @func_590() /* ty=Tensor[(14, 2, 8), float64] */;
  (%465, %466, %467)
}

def @func_3109(%var_3080: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), float32], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %468 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
  %469 = cast(%var_3080, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %470 = shape_of(%468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %471 = cast(%468, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %473 = cast(meta[relay.Constant][21] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
  %474 = cast(meta[relay.Constant][22] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %475 = reshape(%473, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %476 = reshape(%474, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %477 = @func_2154(%475, %476) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %478 = mod(%471, %472) /* ty=Tensor[(14, 2, 8), float32] */;
  %479 = %477.1;
  (%478, %479, meta[relay.Constant][21] /* ty=Tensor[(154), int16] */, meta[relay.Constant][22] /* ty=Tensor[(2816), uint64] */)
}

def @func_2729() -> (Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) {
  %480 = @func_813() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float32]) */;
  %481 = %480.0;
  %482 = @func_1431() /* ty=Tensor[(14, 2, 8), float64] */;
  %483 = @func_543() /* ty=Tensor[(14, 2, 8), float32] */;
  (%481, %482, %483)
}

def @func_3657() -> Tensor[(14, 2, 8), float64] {
  %484 = @func_2342() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %484.0
}

def @func_3993(%var_3966: Tensor[(8, 10, 15), float64]) -> Tensor[(8, 10, 15), bool] {
  %485 = cast(%var_3966, dtype="float64") /* ty=Tensor[(8, 10, 15), float64] */;
  %486 = atanh(%485) /* ty=Tensor[(8, 10, 15), float64] */;
  %487 = cast(%var_3966, dtype="bool") /* ty=Tensor[(8, 10, 15), bool] */;
  %488 = shape_of(%486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(%486, dtype="bool") /* ty=Tensor[(8, 10, 15), bool] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%489, %490) /* ty=Tensor[(8, 10, 15), bool] */
}

def @func_2290(%var_2284: Tensor[(2, 11, 7), int16]) -> Tensor[(2, 11, 7), int16] {
  %491 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %492 = %491.1;
  %493 = cast(%var_2284, dtype="int16") /* ty=Tensor[(2, 11, 7), int16] */;
  %494 = shape_of(%492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%492, dtype="int16") /* ty=Tensor[(2, 11, 7), int16] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  left_shift(%495, %496) /* ty=Tensor[(2, 11, 7), int16] */
}

def @func_4300() -> Tensor[(14, 2, 8), float64] {
  @func_1431() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_3065() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) {
  %497 = @func_895() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
  %498 = %497.0;
  %499 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
  (%498, %499)
}

def @func_1689(%var_1649: Tensor[(14, 2, 8), float64], %var_1663: Tensor[(2816), uint64]) -> (Tensor[(120), float32], Tensor[(154), int16], Tensor[(2816), float64], Tensor[(1408, 2), bool], Tensor[(14, 2, 8), bool]) {
  %500 = cast(meta[relay.Constant][23] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %501 = cast(meta[relay.Constant][24] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
  %502 = cast(meta[relay.Constant][25] /* ty=Tensor[(1408, 2), uint64] */, dtype="uint64") /* ty=Tensor[(1408, 2), uint64] */;
  %503 = reshape(%500, newshape=[15, 1, 8]) /* ty=Tensor[(15, 1, 8), float32] */;
  %504 = reshape(%501, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %505 = reshape(%502, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %506 = @func_464(%503, %504, %505) /* ty=(Tensor[(2, 11, 7), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(15, ?, 8), bool]) */;
  %507 = %506.2;
  %508 = cast(%var_1663, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %509 = shape_of(%507, dtype="int32") /* ty=Tensor[(1), int32] */;
  %510 = cast(%507, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?), float64] */;
  %512 = cast(%var_1663, dtype="bool") /* ty=Tensor[(2816), bool] */;
  %513 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(1408, 2), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %514 = cast(meta[relay.Constant][25] /* ty=Tensor[(1408, 2), uint64] */, dtype="bool") /* ty=Tensor[(1408, 2), bool] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %516 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %517 = %516.0;
  %518 = cast(%var_1649, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %519 = shape_of(%517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%517, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %522 = greater(%520, %521) /* ty=Tensor[(14, 2, 8), bool] */;
  %523 = cast(%var_1649, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %524 = shape_of(%522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %525 = cast(%522, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %527 = power(%510, %511) /* ty=Tensor[(2816), float64] */;
  %528 = greater(%514, %515) /* ty=Tensor[(1408, 2), bool] */;
  %529 = greater_equal(%525, %526) /* ty=Tensor[(14, 2, 8), bool] */;
  (meta[relay.Constant][23] /* ty=Tensor[(120), float32] */, meta[relay.Constant][24] /* ty=Tensor[(154), int16] */, %527, %528, %529)
}

def @func_366(%var_363: Tensor[(224), float64]) -> (Tensor[(154), int16], Tensor[(14, 2, 8), bool], Tensor[(224), float64]) {
  %530 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %531 = cast(%var_363, dtype="float64") /* ty=Tensor[(224), float64] */;
  %532 = reshape(%531, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %533 = @func_201(%532) /* ty=(Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float32]) */;
  %534 = %530.2;
  %535 = %533.0;
  (%534, %535, %var_363)
}

def @func_1112(%var_1108: Tensor[(154), int16], %var_1109: Tensor[(2816), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(60, 2), float32], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %536 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
  %537 = cast(%536, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %538 = cast(meta[relay.Constant][26] /* ty=Tensor[(60, 2), float32] */, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %539 = cast(%var_1108, dtype="int16") /* ty=Tensor[(154), int16] */;
  %540 = cast(%var_1109, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %541 = reshape(%538, newshape=[15, 1, 8]) /* ty=Tensor[(15, 1, 8), float32] */;
  %542 = reshape(%539, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %543 = reshape(%540, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %544 = @func_464(%541, %542, %543) /* ty=(Tensor[(2, 11, 7), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(15, ?, 8), bool]) */;
  %545 = atan(%537) /* ty=Tensor[(14, 2, 8), float64] */;
  %546 = %544.0;
  (%545, %546, meta[relay.Constant][26] /* ty=Tensor[(60, 2), float32] */, %var_1108, %var_1109)
}

def @func_5333() -> (Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %547 = cast(meta[relay.Constant][27] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
  %548 = cast(meta[relay.Constant][28] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %549 = reshape(%547, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %550 = reshape(%548, newshape=[1, 2816]) /* ty=Tensor[(1, 2816), uint64] */;
  %551 = @func_2528(%549, %550) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32]) */;
  %552 = @func_918() /* ty=Tensor[(14, 2, 8), float64] */;
  %553 = %551.2;
  (%552, %553, meta[relay.Constant][27] /* ty=Tensor[(154), int16] */, meta[relay.Constant][28] /* ty=Tensor[(2816), uint64] */)
}

def @func_6162(%var_6138: Tensor[(15, 1, 1), uint16]) -> (Tensor[(15, 2, 4), bool], Tensor[(15, 1, 1), float32]) {
  %554 = cast(%var_6138, dtype="bool") /* ty=Tensor[(15, 1, 1), bool] */;
  %555 = cast(meta[relay.Constant][29] /* ty=Tensor[(15, 2, 4), uint16] */, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
  %556 = cast(%var_6138, dtype="float32") /* ty=Tensor[(15, 1, 1), float32] */;
  %557 = equal(%554, %555) /* ty=Tensor[(15, 2, 4), bool] */;
  %558 = asinh(%556) /* ty=Tensor[(15, 1, 1), float32] */;
  (%557, %558)
}

def @func_6098() -> (Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), bool]) {
  %559 = @func_5893() /* ty=(Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), int8]) */;
  %560 = @func_1259() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16]) */;
  %561 = %559.3;
  %562 = cast(%561, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %563 = reshape(%562, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %564 = @func_201(%563) /* ty=(Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float32]) */;
  %565 = %560.0;
  %566 = %564.0;
  (%561, %565, %566)
}

def @func_4993(%var_4989: Tensor[(11, 12, 12), float32]) -> (Tensor[(11, 12, 12), float32],) {
  %567 = cast(%var_4989, dtype="float32") /* ty=Tensor[(11, 12, 12), float32] */;
  %568 = log(%567) /* ty=Tensor[(11, 12, 12), float32] */;
  (%568,)
}

def @func_464(%var_424: Tensor[(15, 1, 8), float32], %var_440: Tensor[(154), int16], %var_441: Tensor[(2816), uint64]) -> (Tensor[(2, 11, 7), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(15, ?, 8), bool]) {
  %569 = cast(%var_440, dtype="int16") /* ty=Tensor[(154), int16] */;
  %570 = cast(%var_441, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %571 = reshape(%569, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
  %572 = reshape(%570, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), uint64] */;
  %573 = @func_128(%571, %572) /* ty=(Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), bool]) */;
  %574 = cast(%var_424, dtype="float32") /* ty=Tensor[(15, 1, 8), float32] */;
  %575 = sin(%574) /* ty=Tensor[(15, 1, 8), float32] */;
  %576 = cast(%575, dtype="float32") /* ty=Tensor[(15, 1, 8), float32] */;
  %577 = atanh(%576) /* ty=Tensor[(15, 1, 8), float32] */;
  %578 = cast(%575, dtype="int64") /* ty=Tensor[(15, 1, 8), int64] */;
  %579 = shape_of(%var_424, dtype="int32") /* ty=Tensor[(3), int32] */;
  %580 = cast(%var_424, dtype="int64") /* ty=Tensor[(15, 1, 8), int64] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %582 = bitwise_and(%580, %581) /* ty=Tensor[(15, ?, 8), int64] */;
  %583 = cast(%582, dtype="bool") /* ty=Tensor[(15, ?, 8), bool] */;
  %584 = shape_of(%577, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%577, dtype="bool") /* ty=Tensor[(15, 1, 8), bool] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %587 = less_equal(%585, %586) /* ty=Tensor[(15, ?, 8), bool] */;
  %588 = cast(%587, dtype="bool") /* ty=Tensor[(15, ?, 8), bool] */;
  %589 = shape_of(%575, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%575, dtype="bool") /* ty=Tensor[(15, 1, 8), bool] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %592 = %573.3;
  %593 = equal(%590, %591) /* ty=Tensor[(15, ?, 8), bool] */;
  (%592, %var_440, %var_441, %593)
}

def @func_5759() -> (Tensor[(14, 2, 8), float32],) {
  %594 = @func_2092() /* ty=Tensor[(14, 2, 8), float64] */;
  %595 = cast(meta[relay.Constant][30] /* ty=Tensor[(14, 2, 8), float64] */, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %596 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%594, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %599 = power(%597, %598) /* ty=Tensor[(14, 2, 8), float32] */;
  (%599,)
}

def @func_4527() -> (Tensor[(224), float64], Tensor[(14, 2, 8), float32], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), bool]) {
  %600 = @func_2241() /* ty=Tensor[(224), float64] */;
  %601 = cast(%600, dtype="float64") /* ty=Tensor[(224), float64] */;
  %602 = reshape(%601, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %603 = @func_201(%602) /* ty=(Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float32]) */;
  %604 = @func_3457() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) */;
  %605 = %603.1;
  %606 = %604.0;
  %607 = @func_2314() /* ty=Tensor[(14, 2, 8), bool] */;
  (%600, %605, %606, %607)
}

def @func_1853(%var_1834: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), int32], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %608 = @func_1385() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8]) */;
  %609 = %608.0;
  %610 = cast(%var_1834, dtype="int32") /* ty=Tensor[(14, 2, 8), int32] */;
  %611 = shape_of(%609, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%609, dtype="int32") /* ty=Tensor[(14, 2, 8), int32] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %614 = cast(%var_1834, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %615 = cast(meta[relay.Constant][31] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %616 = reshape(%614, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %617 = reshape(%615, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %618 = @func_1689(%616, %617) /* ty=(Tensor[(120), float32], Tensor[(154), int16], Tensor[(2816), float64], Tensor[(1408, 2), bool], Tensor[(14, 2, 8), bool]) */;
  %619 = bitwise_and(%612, %613) /* ty=Tensor[(14, 2, 8), int32] */;
  %620 = %618.1;
  (%619, %620, meta[relay.Constant][31] /* ty=Tensor[(2816), uint64] */)
}

def @func_590() -> Tensor[(14, 2, 8), float64] {
  %621 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %621.0
}

def @func_4187(%var_4165: Tensor[(4, 15, 4), float32], %var_4166: Tensor[(4, 15, 4), float32]) -> (Tensor[(4, 15, 4), float32], Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float64]) {
  %622 = cast(%var_4166, dtype="float32") /* ty=Tensor[(4, 15, 4), float32] */;
  %623 = shape_of(%var_4165, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%var_4165, dtype="float32") /* ty=Tensor[(4, 15, 4), float32] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %626 = @func_2592() /* ty=(Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float32]) */;
  %627 = @func_3065() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %628 = floor_divide(%624, %625) /* ty=Tensor[(4, 15, 4), float32] */;
  %629 = %626.0;
  %630 = %627.0;
  (%628, %629, %630)
}

def @func_3872(%var_3835: uint32) -> (Tensor[(16, 10, 7), uint32], Tensor[(224), float64], Tensor[(14, 2, 8), float32], Tensor[(14, 2, 8), float64]) {
  %631 = cast(%var_3835, dtype="uint32") /* ty=uint32 */;
  %632 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 10, 7), uint32] */, dtype="uint32") /* ty=Tensor[(16, 10, 7), uint32] */;
  %633 = @func_3486() /* ty=(Tensor[(224), float64],) */;
  %634 = %633.0;
  %635 = cast(%634, dtype="float64") /* ty=Tensor[(224), float64] */;
  %636 = reshape(%635, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %637 = @func_201(%636) /* ty=(Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float32]) */;
  %638 = logical_xor(%631, %632) /* ty=Tensor[(16, 10, 7), uint32] */;
  %639 = %637.1;
  %640 = @func_2205() /* ty=Tensor[(14, 2, 8), float64] */;
  (%638, %634, %639, %640)
}

def @func_5667(%var_5659: Tensor[(1, 280), bool]) -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), uint16], Tensor[(1, 280), bool]) {
  %641 = @func_3065() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %642 = cast(%var_5659, dtype="bool") /* ty=Tensor[(1, 280), bool] */;
  %643 = cast(%var_5659, dtype="bool") /* ty=Tensor[(1, 280), bool] */;
  %644 = reshape(%642, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), bool] */;
  %645 = reshape(%643, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), bool] */;
  %646 = @func_4832(%644, %645) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(224), float64], Tensor[(7, 10, 4), float64], Tensor[(14, 2, 8), uint16], Tensor[(4, 7, 5), bool], Tensor[(35, 4), float64]) */;
  %647 = %641.0;
  %648 = %646.3;
  (%647, %648, %var_5659)
}

def @func_895() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(224), float64]) {
  %649 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %650 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %651 = %650.0;
  %652 = cast(%651, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %653 = reshape(%652, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %654 = @func_366(%653) /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), bool], Tensor[(224), float64]) */;
  %655 = %649.0;
  %656 = %654.2;
  (%655, %651, %656)
}

def @func_2439(%var_2415: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), uint16],) {
  %657 = @func_1085() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %658 = %657.0;
  %659 = cast(%var_2415, dtype="uint16") /* ty=Tensor[(14, 2, 8), uint16] */;
  %660 = shape_of(%658, dtype="int32") /* ty=Tensor[(3), int32] */;
  %661 = cast(%658, dtype="uint16") /* ty=Tensor[(14, 2, 8), uint16] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %663 = bitwise_or(%661, %662) /* ty=Tensor[(14, 2, 8), uint16] */;
  (%663,)
}

def @func_3000() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) {
  %664 = @func_2651() /* ty=(Tensor[(14, 2, 8), float32],) */;
  %665 = @func_1037() /* ty=Tensor[(14, 2, 8), float64] */;
  %666 = %664.0;
  (%665, %666)
}

def @func_3240(%var_3178: Tensor[(14, 2, 8), bool], %var_3190: Tensor[(2816), uint64], %var_3232: Tensor[(14, 2, 8), float32]) -> (Tensor[(224), float64], Tensor[(2816), float64], Tensor[(224), float64], Tensor[(14, 2, 8), float32]) {
  %667 = @func_937() /* ty=(Tensor[(224), float64],) */;
  %668 = %667.0;
  %669 = cast(%668, dtype="float64") /* ty=Tensor[(224), float64] */;
  %670 = cast(%var_3190, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %671 = reshape(%669, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %672 = reshape(%670, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %673 = @func_1689(%671, %672) /* ty=(Tensor[(120), float32], Tensor[(154), int16], Tensor[(2816), float64], Tensor[(1408, 2), bool], Tensor[(14, 2, 8), bool]) */;
  %674 = %673.2;
  %675 = cast(%var_3190, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %676 = shape_of(%674, dtype="int32") /* ty=Tensor[(1), int32] */;
  %677 = cast(%674, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?), float64] */;
  %679 = @func_2374() /* ty=(Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64]) */;
  %680 = %679.0;
  %681 = cast(%var_3178, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %682 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %683 = cast(%680, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %685 = subtract(%683, %684) /* ty=Tensor[(14, 2, 8), float32] */;
  %686 = cast(%685, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %687 = reshape(%686, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %688 = @func_366(%687) /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), bool], Tensor[(224), float64]) */;
  %689 = cast(%var_3232, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %690 = shape_of(%685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%685, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %693 = maximum(%677, %678) /* ty=Tensor[(2816), float64] */;
  %694 = %688.2;
  %695 = floor_divide(%691, %692) /* ty=Tensor[(14, 2, 8), float32] */;
  (%668, %693, %694, %695)
}

def @func_5205() -> Tensor[(14, 2, 8), float64] {
  %696 = @func_3952() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %696.0
}

def @func_2651() -> (Tensor[(14, 2, 8), float32],) {
  %697 = @func_2592() /* ty=(Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float32]) */;
  %698 = %697.1;
  (%698,)
}

def @func_1431() -> Tensor[(14, 2, 8), float64] {
  %699 = @func_590() /* ty=Tensor[(14, 2, 8), float64] */;
  %700 = cast(%699, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  cos(%700) /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_2916(%var_2887: Tensor[(7, 1, 6), float64], %var_2895: Tensor[(72, 1), float32]) -> (Tensor[(7, 1, 6), float64], Tensor[(9, 2, 4), bool], Tensor[(72, 1), float32], Tensor[(7, 1, 6), float64]) {
  %701 = cast(%var_2887, dtype="float64") /* ty=Tensor[(7, 1, 6), float64] */;
  %702 = cast(%var_2895, dtype="float32") /* ty=Tensor[(72, 1), float32] */;
  %703 = reshape(%702, newshape=[9, 2, 4]) /* ty=Tensor[(9, 2, 4), float32] */;
  %704 = cast(%var_2887, dtype="float64") /* ty=Tensor[(7, 1, 6), float64] */;
  %705 = log10(%704) /* ty=Tensor[(7, 1, 6), float64] */;
  %706 = cast(%705, dtype="float32") /* ty=Tensor[(7, 1, 6), float32] */;
  %707 = atan(%706) /* ty=Tensor[(7, 1, 6), float32] */;
  %708 = cast(%707, dtype="float64") /* ty=Tensor[(7, 1, 6), float64] */;
  %709 = cos(%701) /* ty=Tensor[(7, 1, 6), float64] */;
  %710 = @func_1723(%703) /* ty=Tensor[(9, 2, 4), bool] */;
  %711 = acosh(%708) /* ty=Tensor[(7, 1, 6), float64] */;
  (%709, %710, %var_2895, %711)
}

def @func_1196() -> (Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), int8], Tensor[(224), float64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) {
  %712 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %713 = cast(meta[relay.Constant][33] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %714 = reshape(%713, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %715 = @func_264(%714) /* ty=(Tensor[(14, 2, 8), int8],) */;
  %716 = @func_1085() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %717 = %712.1;
  %718 = %715.0;
  %719 = %716.0;
  %720 = @func_918() /* ty=Tensor[(14, 2, 8), float64] */;
  (%717, %718, meta[relay.Constant][33] /* ty=Tensor[(224), float64] */, %719, %720)
}

def @func_4629() -> (Tensor[(2, 11, 7), int16],) {
  %721 = @func_657() /* ty=Tensor[(2, 11, 7), int16] */;
  (%721,)
}

def @func_4832(%var_4775: Tensor[(7, 10, 4), bool], %var_4776: Tensor[(7, 10, 4), bool]) -> (Tensor[(14, 2, 8), float64], Tensor[(224), float64], Tensor[(7, 10, 4), float64], Tensor[(14, 2, 8), uint16], Tensor[(4, 7, 5), bool], Tensor[(35, 4), float64]) {
  %722 = @func_895() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
  %723 = cast(%var_4776, dtype="bool") /* ty=Tensor[(7, 10, 4), bool] */;
  %724 = shape_of(%var_4775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %725 = cast(%var_4775, dtype="bool") /* ty=Tensor[(7, 10, 4), bool] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %727 = logical_and(%725, %726) /* ty=Tensor[(7, 10, 4), bool] */;
  %728 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 10, 4), bool] */, dtype="uint16") /* ty=Tensor[(7, 10, 4), uint16] */;
  %729 = shape_of(%727, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%727, dtype="uint16") /* ty=Tensor[(7, 10, 4), uint16] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %732 = left_shift(%730, %731) /* ty=Tensor[(7, 10, 4), uint16] */;
  %733 = cast(%732, dtype="float64") /* ty=Tensor[(7, 10, 4), float64] */;
  %734 = @func_2000() /* ty=Tensor[(224), float64] */;
  %735 = cast(%734, dtype="float64") /* ty=Tensor[(224), float64] */;
  %736 = reshape(%735, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %737 = @func_2439(%736) /* ty=(Tensor[(14, 2, 8), uint16],) */;
  %738 = cast(meta[relay.Constant][35] /* ty=Tensor[(35, 4), float64] */, dtype="float64") /* ty=Tensor[(35, 4), float64] */;
  %739 = reshape(%738, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), float64] */;
  %740 = @func_2079(%739) /* ty=(Tensor[(4, 7, 5), float64], Tensor[(14, 2, 8), float64], Tensor[(4, 7, 5), bool], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(2, 11, 7), int16], Tensor[(4, 7, 5), float32]) */;
  %741 = %722.0;
  %742 = asinh(%733) /* ty=Tensor[(7, 10, 4), float64] */;
  %743 = %737.0;
  %744 = %740.2;
  (%741, %734, %742, %743, %744, meta[relay.Constant][35] /* ty=Tensor[(35, 4), float64] */)
}

def @func_3791() -> (Tensor[(14, 2, 8), float64],) {
  %745 = @func_1431() /* ty=Tensor[(14, 2, 8), float64] */;
  %746 = cast(meta[relay.Constant][36] /* ty=Tensor[(14, 2, 8), float64] */, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %747 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%745, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %750 = equal(%748, %749) /* ty=Tensor[(14, 2, 8), bool] */;
  %751 = cast(%750, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %752 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%745, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %755 = divide(%753, %754) /* ty=Tensor[(14, 2, 8), float64] */;
  (%755,)
}

def @func_5034() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(140), float64]) {
  %756 = cast(meta[relay.Constant][37] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %757 = reshape(%756, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), float64] */;
  %758 = @func_2079(%757) /* ty=(Tensor[(4, 7, 5), float64], Tensor[(14, 2, 8), float64], Tensor[(4, 7, 5), bool], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(2, 11, 7), int16], Tensor[(4, 7, 5), float32]) */;
  %759 = @func_3144() /* ty=Tensor[(14, 2, 8), float64] */;
  %760 = %758.3;
  (%759, %760, meta[relay.Constant][37] /* ty=Tensor[(140), float64] */)
}

def @func_6354(%var_6337: Tensor[(10, 16, 7), bool], %var_6338: Tensor[(10, 16, 7), bool]) -> (Tensor[(10, 16, 7), bool], Tensor[(10, 16, 7), float64]) {
  %761 = cast(%var_6338, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
  %762 = shape_of(%var_6337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(%var_6337, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %765 = cast(%var_6338, dtype="float64") /* ty=Tensor[(10, 16, 7), float64] */;
  %766 = logical_and(%763, %764) /* ty=Tensor[(10, 16, 7), bool] */;
  %767 = asin(%765) /* ty=Tensor[(10, 16, 7), float64] */;
  (%766, %767)
}

def @func_2314() -> Tensor[(14, 2, 8), bool] {
  %768 = @func_543() /* ty=Tensor[(14, 2, 8), float32] */;
  %769 = cast(%768, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %770 = exp(%769) /* ty=Tensor[(14, 2, 8), float64] */;
  %771 = cast(%768, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %772 = shape_of(%770, dtype="int32") /* ty=Tensor[(3), int32] */;
  %773 = cast(%770, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%773, %774) /* ty=Tensor[(14, 2, 8), bool] */
}

def @func_2205() -> Tensor[(14, 2, 8), float64] {
  %775 = @func_1085() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %775.0
}

def @func_479() -> (Tensor[(14, 2, 8), float64],) {
  %776 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %777 = %776.0;
  (%777,)
}

def @func_3431(%var_3422: Tensor[(154), int16]) -> (Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %778 = @func_3065() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %779 = cast(%var_3422, dtype="int16") /* ty=Tensor[(154), int16] */;
  %780 = cast(meta[relay.Constant][38] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %781 = reshape(%779, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %782 = reshape(%780, newshape=[1, 2816]) /* ty=Tensor[(1, 2816), uint64] */;
  %783 = @func_2528(%781, %782) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32]) */;
  %784 = %778.0;
  %785 = %783.4;
  (%784, %785, %var_3422, meta[relay.Constant][38] /* ty=Tensor[(2816), uint64] */)
}

def @func_2092() -> Tensor[(14, 2, 8), float64] {
  %786 = @func_1385() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8]) */;
  %786.0
}

def @func_2253(%var_2250: Tensor[(14, 1, 14), float64]) -> (Tensor[(14, 1, 14), float64],) {
  %787 = cast(%var_2250, dtype="float64") /* ty=Tensor[(14, 1, 14), float64] */;
  %788 = log10(%787) /* ty=Tensor[(14, 1, 14), float64] */;
  (%788,)
}

def @func_1037() -> Tensor[(14, 2, 8), float64] {
  @func_561() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_543() -> Tensor[(14, 2, 8), float32] {
  %789 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %790 = %789.0;
  %791 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %792 = %791.0;
  %793 = cast(%792, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %794 = sqrt(%793) /* ty=Tensor[(14, 2, 8), float32] */;
  %795 = cast(%794, dtype="uint32") /* ty=Tensor[(14, 2, 8), uint32] */;
  %796 = shape_of(%790, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(%790, dtype="uint32") /* ty=Tensor[(14, 2, 8), uint32] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %799 = multiply(%797, %798) /* ty=Tensor[(14, 2, 8), uint32] */;
  %800 = cast(%799, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  sinh(%800) /* ty=Tensor[(14, 2, 8), float32] */
}

def @func_3364(%var_3347: Tensor[(6, 7), int32]) -> (Tensor[(6, 7), int32],) {
  %801 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 7), int32] */, dtype="int32") /* ty=Tensor[(6, 7), int32] */;
  %802 = shape_of(%var_3347, dtype="int32") /* ty=Tensor[(2), int32] */;
  %803 = cast(%var_3347, dtype="int32") /* ty=Tensor[(6, 7), int32] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %805 = bitwise_or(%803, %804) /* ty=Tensor[(6, 7), int32] */;
  (%805,)
}

def @func_2000() -> Tensor[(224), float64] {
  %806 = @func_937() /* ty=(Tensor[(224), float64],) */;
  %806.0
}

def @func_1592(%var_1588: Tensor[(154), int16]) -> (Tensor[(14, 2, 8), float64], Tensor[(16, 16, 11), uint64], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %807 = cast(%var_1588, dtype="int16") /* ty=Tensor[(154), int16] */;
  %808 = cast(meta[relay.Constant][40] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %809 = reshape(%807, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
  %810 = reshape(%808, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), uint64] */;
  %811 = @func_128(%809, %810) /* ty=(Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), bool]) */;
  %812 = @func_918() /* ty=Tensor[(14, 2, 8), float64] */;
  %813 = %811.2;
  (%812, %813, %var_1588, meta[relay.Constant][40] /* ty=Tensor[(2816), uint64] */)
}

def @func_937() -> (Tensor[(224), float64],) {
  %814 = @func_895() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
  %815 = %814.2;
  (%815,)
}

def @func_2154(%var_2138: Tensor[(154), int16], %var_2139: Tensor[(2816), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) {
  %816 = @func_1259() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16]) */;
  %817 = cast(%var_2138, dtype="int16") /* ty=Tensor[(154), int16] */;
  %818 = cast(%var_2139, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %819 = reshape(%817, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %820 = reshape(%818, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %821 = @func_1112(%819, %820) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(60, 2), float32], Tensor[(154), int16], Tensor[(2816), uint64]) */;
  %822 = %816.0;
  %823 = %821.3;
  %824 = @func_1431() /* ty=Tensor[(14, 2, 8), float64] */;
  %825 = @func_1431() /* ty=Tensor[(14, 2, 8), float64] */;
  (%822, %823, %var_2138, %var_2139, %824, %825)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2002() -> Tensor[(224), float64] {
  @func_2000() /* ty=Tensor[(224), float64] */
}

def @main(%var_6493: Tensor[(6, 8, 5), float32]) -> Tensor[(6, 8, 5), float32] {
  %0 = cast(%var_6493, dtype="float32") /* ty=Tensor[(6, 8, 5), float32] */;
  %1 = erf(%0) /* ty=Tensor[(6, 8, 5), float32] */;
  %2 = cast(%1, dtype="float32") /* ty=Tensor[(6, 8, 5), float32] */;
  exp(%2) /* ty=Tensor[(6, 8, 5), float32] */
}

def @func_2442(%var_2440: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), uint16],) {
  @func_2439(%var_2440) /* ty=(Tensor[(14, 2, 8), uint16],) */
}

def @func_2916(%var_2887: Tensor[(7, 1, 6), float64], %var_2895: Tensor[(72, 1), float32]) -> (Tensor[(7, 1, 6), float64], Tensor[(9, 2, 4), bool], Tensor[(72, 1), float32], Tensor[(7, 1, 6), float64]) {
  %3 = cast(%var_2887, dtype="float64") /* ty=Tensor[(7, 1, 6), float64] */;
  %4 = cast(%var_2895, dtype="float32") /* ty=Tensor[(72, 1), float32] */;
  %5 = reshape(%4, newshape=[9, 2, 4]) /* ty=Tensor[(9, 2, 4), float32] */;
  %6 = cast(%var_2887, dtype="float64") /* ty=Tensor[(7, 1, 6), float64] */;
  %7 = log10(%6) /* ty=Tensor[(7, 1, 6), float64] */;
  %8 = cast(%7, dtype="float32") /* ty=Tensor[(7, 1, 6), float32] */;
  %9 = atan(%8) /* ty=Tensor[(7, 1, 6), float32] */;
  %10 = cast(%9, dtype="float64") /* ty=Tensor[(7, 1, 6), float64] */;
  %11 = cos(%3) /* ty=Tensor[(7, 1, 6), float64] */;
  %12 = @func_1723(%5) /* ty=Tensor[(9, 2, 4), bool] */;
  %13 = acosh(%10) /* ty=Tensor[(7, 1, 6), float64] */;
  (%11, %12, %var_2895, %13)
}

def @func_2093() -> Tensor[(14, 2, 8), float64] {
  %15 = fn () -> Tensor[(14, 2, 8), float64] {
    %14 = @func_1385() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8]) */;
    %14.0
  };
  %15() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_5257(%var_5256: Tensor[(14, 1, 7), float32]) -> (Tensor[(14, 2, 8), float64], Tensor[(14, 1, 7), float64], Tensor[(14, 2, 8), float64]) {
  %22 = fn (%var_5221: Tensor[(14, 1, 7), float32]) -> (Tensor[(14, 2, 8), float64], Tensor[(14, 1, 7), float64], Tensor[(14, 2, 8), float64]) {
    %16 = cast(%var_5221, dtype="float32") /* ty=Tensor[(14, 1, 7), float32] */;
    %17 = atanh(%16) /* ty=Tensor[(14, 1, 7), float32] */;
    %18 = cast(%17, dtype="float64") /* ty=Tensor[(14, 1, 7), float64] */;
    %19 = @func_5205() /* ty=Tensor[(14, 2, 8), float64] */;
    %20 = acos(%18) /* ty=Tensor[(14, 1, 7), float64] */;
    %21 = @func_918() /* ty=Tensor[(14, 2, 8), float64] */;
    (%19, %20, %21)
  };
  %22(%var_5256) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 1, 7), float64], Tensor[(14, 2, 8), float64]) */
}

def @func_173() -> (Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) {
  @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */
}

def @func_3146() -> Tensor[(14, 2, 8), float64] {
  @func_3144() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_2532(%var_2530: Tensor[(154), int16], %var_2531: Tensor[(1, 2816), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32]) {
  @func_2528(%var_2530, %var_2531) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32]) */
}

def @func_4629() -> (Tensor[(2, 11, 7), int16],) {
  %23 = @func_657() /* ty=Tensor[(2, 11, 7), int16] */;
  (%23,)
}

def @func_2771() -> (Tensor[(14, 2, 8), float64],) {
  @func_2769() /* ty=(Tensor[(14, 2, 8), float64],) */
}

def @func_5408() -> (Tensor[(14, 2, 8), float64],) {
  @func_5406() /* ty=(Tensor[(14, 2, 8), float64],) */
}

def @func_1197() -> (Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), int8], Tensor[(224), float64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) {
  %33 = fn () -> (Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), int8], Tensor[(224), float64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) {
    %24 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
    %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
    %26 = reshape(%25, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
    %27 = @func_264(%26) /* ty=(Tensor[(14, 2, 8), int8],) */;
    %28 = @func_1085() /* ty=(Tensor[(14, 2, 8), float64],) */;
    %29 = %24.1;
    %30 = %27.0;
    %31 = %28.0;
    %32 = @func_918() /* ty=Tensor[(14, 2, 8), float64] */;
    (%29, %30, meta[relay.Constant][0] /* ty=Tensor[(224), float64] */, %31, %32)
  };
  %33() /* ty=(Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), int8], Tensor[(224), float64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */
}

def @func_5108(%var_5106: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), uint32], Tensor[(14, 2, 8), float32]) {
  @func_5105(%var_5106) /* ty=(Tensor[(14, 2, 8), uint32], Tensor[(14, 2, 8), float32]) */
}

def @func_4835(%var_4833: Tensor[(7, 10, 4), bool], %var_4834: Tensor[(7, 10, 4), bool]) -> (Tensor[(14, 2, 8), float64], Tensor[(224), float64], Tensor[(7, 10, 4), float64], Tensor[(14, 2, 8), uint16], Tensor[(4, 7, 5), bool], Tensor[(35, 4), float64]) {
  %57 = fn (%var_4775: Tensor[(7, 10, 4), bool], %var_4776: Tensor[(7, 10, 4), bool]) -> (Tensor[(14, 2, 8), float64], Tensor[(224), float64], Tensor[(7, 10, 4), float64], Tensor[(14, 2, 8), uint16], Tensor[(4, 7, 5), bool], Tensor[(35, 4), float64]) {
    %34 = @func_895() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
    %35 = cast(%var_4776, dtype="bool") /* ty=Tensor[(7, 10, 4), bool] */;
    %36 = shape_of(%var_4775, dtype="int32") /* ty=Tensor[(3), int32] */;
    %37 = cast(%var_4775, dtype="bool") /* ty=Tensor[(7, 10, 4), bool] */;
    %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %39 = logical_and(%37, %38) /* ty=Tensor[(7, 10, 4), bool] */;
    %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 10, 4), bool] */, dtype="uint16") /* ty=Tensor[(7, 10, 4), uint16] */;
    %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
    %42 = cast(%39, dtype="uint16") /* ty=Tensor[(7, 10, 4), uint16] */;
    %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %44 = left_shift(%42, %43) /* ty=Tensor[(7, 10, 4), uint16] */;
    %45 = cast(%44, dtype="float64") /* ty=Tensor[(7, 10, 4), float64] */;
    %46 = @func_2000() /* ty=Tensor[(224), float64] */;
    %47 = cast(%46, dtype="float64") /* ty=Tensor[(224), float64] */;
    %48 = reshape(%47, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
    %49 = @func_2439(%48) /* ty=(Tensor[(14, 2, 8), uint16],) */;
    %50 = cast(meta[relay.Constant][2] /* ty=Tensor[(35, 4), float64] */, dtype="float64") /* ty=Tensor[(35, 4), float64] */;
    %51 = reshape(%50, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), float64] */;
    %52 = @func_2079(%51) /* ty=(Tensor[(4, 7, 5), float64], Tensor[(14, 2, 8), float64], Tensor[(4, 7, 5), bool], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(2, 11, 7), int16], Tensor[(4, 7, 5), float32]) */;
    %53 = %34.0;
    %54 = asinh(%45) /* ty=Tensor[(7, 10, 4), float64] */;
    %55 = %49.0;
    %56 = %52.2;
    (%53, %46, %54, %55, %56, meta[relay.Constant][2] /* ty=Tensor[(35, 4), float64] */)
  };
  %57(%var_4833, %var_4834) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(224), float64], Tensor[(7, 10, 4), float64], Tensor[(14, 2, 8), uint16], Tensor[(4, 7, 5), bool], Tensor[(35, 4), float64]) */
}

def @func_5158(%var_5151: Tensor[(112), float64], %var_5152: Tensor[(224), float64], %var_5153: Tensor[(4, 256), float64]) -> (Tensor[(154), int16], Tensor[(14, 2, 8), int8], Tensor[(112), float64], Tensor[(224), float64], Tensor[(4, 256), float64]) {
  %58 = @func_721() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), int16]) */;
  %59 = cast(%var_5151, dtype="float64") /* ty=Tensor[(112), float64] */;
  %60 = cast(%var_5152, dtype="float64") /* ty=Tensor[(224), float64] */;
  %61 = cast(%var_5153, dtype="float64") /* ty=Tensor[(4, 256), float64] */;
  %62 = reshape(%59, newshape=[14, 1, 8]) /* ty=Tensor[(14, 1, 8), float64] */;
  %63 = reshape(%60, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %64 = reshape(%61, newshape=[1024]) /* ty=Tensor[(1024), float64] */;
  %65 = @func_1059(%62, %63, %64) /* ty=(Tensor[(14, 1, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(224), float64], Tensor[(16, 8, 8), float32], Tensor[(1024), float64]) */;
  %66 = %58.0;
  %67 = %65.1;
  (%66, %67, %var_5151, %var_5152, %var_5153)
}

def @func_3458() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) {
  %71 = fn () -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) {
    %68 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
    %69 = %68.0;
    %70 = @func_543() /* ty=Tensor[(14, 2, 8), float32] */;
    (%69, %70)
  };
  %71() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) */
}

def @func_1856(%var_1854: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), int32], Tensor[(154), int16], Tensor[(2816), uint64]) {
  @func_1853(%var_1854) /* ty=(Tensor[(14, 2, 8), int32], Tensor[(154), int16], Tensor[(2816), uint64]) */
}

def @func_6442() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32], Tensor[(560), bool]) {
  @func_6440() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32], Tensor[(560), bool]) */
}

def @func_4725() -> Tensor[(14, 2, 8), int8] {
  %72 = fn () -> Tensor[(14, 2, 8), int8] {
    @func_4395() /* ty=Tensor[(14, 2, 8), int8] */
  };
  %72() /* ty=Tensor[(14, 2, 8), int8] */
}

def @func_5560() -> (Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), float32]) {
  %73 = @func_2342() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %74 = @func_2854() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), float32]) */;
  %75 = %73.0;
  %76 = %74.1;
  (%75, %76)
}

def @func_3719() -> Tensor[(224), float64] {
  %77 = fn () -> Tensor[(224), float64] {
    @func_2000() /* ty=Tensor[(224), float64] */
  };
  %77() /* ty=Tensor[(224), float64] */
}

def @func_4543() -> (Tensor[(14, 2, 8), float64],) {
  @func_4541() /* ty=(Tensor[(14, 2, 8), float64],) */
}

def @func_1408(%var_1407: Tensor[(12, 1, 5), float32]) -> (Tensor[(12, 1, 5), float32], Tensor[(14, 2, 8), float64]) {
  %82 = fn (%var_1399: Tensor[(12, 1, 5), float32]) -> (Tensor[(12, 1, 5), float32], Tensor[(14, 2, 8), float64]) {
    %78 = cast(%var_1399, dtype="float32") /* ty=Tensor[(12, 1, 5), float32] */;
    %79 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
    %80 = acos(%78) /* ty=Tensor[(12, 1, 5), float32] */;
    %81 = %79.0;
    (%80, %81)
  };
  %82(%var_1407) /* ty=(Tensor[(12, 1, 5), float32], Tensor[(14, 2, 8), float64]) */
}

def @func_3065() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) {
  %83 = @func_895() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
  %84 = %83.0;
  %85 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
  (%84, %85)
}

def @func_1011(%var_1010: Tensor[(14, 2, 8), float32]) -> (Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64]) {
  %94 = fn (%var_959: Tensor[(14, 2, 8), float32]) -> (Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64]) {
    %86 = @func_543() /* ty=Tensor[(14, 2, 8), float32] */;
    %87 = cast(%var_959, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
    %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
    %89 = cast(%86, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
    %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %91 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
    %92 = logical_and(%89, %90) /* ty=Tensor[(14, 2, 8), bool] */;
    %93 = %91.0;
    (%92, %93)
  };
  %94(%var_1010) /* ty=(Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64]) */
}

def @func_563() -> Tensor[(14, 2, 8), float64] {
  @func_561() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_1387() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8]) {
  @func_1385() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8]) */
}

def @func_5105(%var_5089: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), uint32], Tensor[(14, 2, 8), float32]) {
  %95 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
  %96 = cast(%var_5089, dtype="uint32") /* ty=Tensor[(14, 2, 8), uint32] */;
  %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%95, dtype="uint32") /* ty=Tensor[(14, 2, 8), uint32] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %100 = @func_2729() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) */;
  %101 = left_shift(%98, %99) /* ty=Tensor[(14, 2, 8), uint32] */;
  %102 = %100.2;
  (%101, %102)
}

def @func_6296() -> (Tensor[(14, 2, 8), float32], Tensor[(224), float64], Tensor[(14, 2, 8), float64]) {
  %111 = fn () -> (Tensor[(14, 2, 8), float32], Tensor[(224), float64], Tensor[(14, 2, 8), float64]) {
    %103 = @func_3952() /* ty=(Tensor[(14, 2, 8), float64],) */;
    %104 = %103.0;
    %105 = cast(%104, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
    %106 = @func_1946() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
    %107 = @func_3065() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
    %108 = sigmoid(%105) /* ty=Tensor[(14, 2, 8), float32] */;
    %109 = %106.1;
    %110 = %107.1;
    (%108, %109, %110)
  };
  %111() /* ty=(Tensor[(14, 2, 8), float32], Tensor[(224), float64], Tensor[(14, 2, 8), float64]) */
}

def @func_658() -> Tensor[(2, 11, 7), int16] {
  %113 = fn () -> Tensor[(2, 11, 7), int16] {
    %112 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
    %112.1
  };
  %113() /* ty=Tensor[(2, 11, 7), int16] */
}

def @func_1948() -> (Tensor[(14, 2, 8), float64], Tensor[(224), float64]) {
  @func_1946() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */
}

def @func_2000() -> Tensor[(224), float64] {
  %114 = @func_937() /* ty=(Tensor[(224), float64],) */;
  %114.0
}

def @func_2079(%var_2050: Tensor[(4, 7, 5), float64]) -> (Tensor[(4, 7, 5), float64], Tensor[(14, 2, 8), float64], Tensor[(4, 7, 5), bool], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(2, 11, 7), int16], Tensor[(4, 7, 5), float32]) {
  %115 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 7, 5), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 5), float64] */;
  %116 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(4, 7, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %117 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 7, 5), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 5), float64] */;
  %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %119 = @func_1385() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8]) */;
  %120 = cast(%var_2050, dtype="bool") /* ty=Tensor[(4, 7, 5), bool] */;
  %121 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(4, 7, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 7, 5), float64] */, dtype="bool") /* ty=Tensor[(4, 7, 5), bool] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %124 = %119.0;
  %125 = cast(%124, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %126 = reshape(%125, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %127 = @func_264(%126) /* ty=(Tensor[(14, 2, 8), int8],) */;
  %128 = @func_1816() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16]) */;
  %129 = cast(%var_2050, dtype="int16") /* ty=Tensor[(4, 7, 5), int16] */;
  %130 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(4, 7, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %131 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 7, 5), float64] */, dtype="int16") /* ty=Tensor[(4, 7, 5), int16] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %133 = bitwise_and(%131, %132) /* ty=Tensor[(4, 7, 5), int16] */;
  %134 = cast(%133, dtype="float32") /* ty=Tensor[(4, 7, 5), float32] */;
  %135 = maximum(%117, %118) /* ty=Tensor[(4, 7, 5), float64] */;
  %136 = greater(%122, %123) /* ty=Tensor[(4, 7, 5), bool] */;
  %137 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
  %138 = %127.0;
  %139 = %128.1;
  %140 = cosh(%134) /* ty=Tensor[(4, 7, 5), float32] */;
  (%135, %124, %136, %137, %138, %139, %140)
}

def @func_896() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(224), float64]) {
  %149 = fn () -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(224), float64]) {
    %141 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
    %142 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
    %143 = %142.0;
    %144 = cast(%143, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
    %145 = reshape(%144, newshape=[224]) /* ty=Tensor[(224), float64] */;
    %146 = @func_366(%145) /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), bool], Tensor[(224), float64]) */;
    %147 = %141.0;
    %148 = %146.2;
    (%147, %143, %148)
  };
  %149() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */
}

def @func_1063(%var_1060: Tensor[(14, 1, 8), float64], %var_1061: Tensor[(224), float64], %var_1062: Tensor[(1024), float64]) -> (Tensor[(14, 1, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(224), float64], Tensor[(16, 8, 8), float32], Tensor[(1024), float64]) {
  %159 = fn (%var_1046: Tensor[(14, 1, 8), float64], %var_1051: Tensor[(224), float64], %var_1054: Tensor[(1024), float64]) -> (Tensor[(14, 1, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(224), float64], Tensor[(16, 8, 8), float32], Tensor[(1024), float64]) {
    %150 = cast(%var_1046, dtype="float64") /* ty=Tensor[(14, 1, 8), float64] */;
    %151 = cast(%var_1051, dtype="float64") /* ty=Tensor[(224), float64] */;
    %152 = reshape(%151, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
    %153 = @func_264(%152) /* ty=(Tensor[(14, 2, 8), int8],) */;
    %154 = cast(%var_1054, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %155 = reshape(%154, newshape=[16, 8, 8]) /* ty=Tensor[(16, 8, 8), float64] */;
    %156 = rsqrt(%150) /* ty=Tensor[(14, 1, 8), float64] */;
    %157 = %153.0;
    %158 = @func_414(%155) /* ty=Tensor[(16, 8, 8), float32] */;
    (%156, %157, %var_1051, %158, %var_1054)
  };
  %159(%var_1060, %var_1061, %var_1062) /* ty=(Tensor[(14, 1, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(224), float64], Tensor[(16, 8, 8), float32], Tensor[(1024), float64]) */
}

def @func_1853(%var_1834: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), int32], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %160 = @func_1385() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8]) */;
  %161 = %160.0;
  %162 = cast(%var_1834, dtype="int32") /* ty=Tensor[(14, 2, 8), int32] */;
  %163 = shape_of(%161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(%161, dtype="int32") /* ty=Tensor[(14, 2, 8), int32] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %166 = cast(%var_1834, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %167 = cast(meta[relay.Constant][5] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %168 = reshape(%166, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %169 = reshape(%167, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %170 = @func_1689(%168, %169) /* ty=(Tensor[(120), float32], Tensor[(154), int16], Tensor[(2816), float64], Tensor[(1408, 2), bool], Tensor[(14, 2, 8), bool]) */;
  %171 = bitwise_and(%164, %165) /* ty=Tensor[(14, 2, 8), int32] */;
  %172 = %170.1;
  (%171, %172, meta[relay.Constant][5] /* ty=Tensor[(2816), uint64] */)
}

def @func_2742() -> (Tensor[(14, 2, 8), float64],) {
  %175 = fn () -> (Tensor[(14, 2, 8), float64],) {
    %173 = @func_1946() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
    %174 = %173.0;
    (%174,)
  };
  %175() /* ty=(Tensor[(14, 2, 8), float64],) */
}

def @func_3245(%var_3242: Tensor[(14, 2, 8), bool], %var_3243: Tensor[(2816), uint64], %var_3244: Tensor[(14, 2, 8), float32]) -> (Tensor[(224), float64], Tensor[(2816), float64], Tensor[(224), float64], Tensor[(14, 2, 8), float32]) {
  @func_3240(%var_3242, %var_3243, %var_3244) /* ty=(Tensor[(224), float64], Tensor[(2816), float64], Tensor[(224), float64], Tensor[(14, 2, 8), float32]) */
}

def @func_2343() -> (Tensor[(14, 2, 8), float64],) {
  %178 = fn () -> (Tensor[(14, 2, 8), float64],) {
    %176 = @func_1085() /* ty=(Tensor[(14, 2, 8), float64],) */;
    %177 = %176.0;
    (%177,)
  };
  %178() /* ty=(Tensor[(14, 2, 8), float64],) */
}

def @func_6357(%var_6355: Tensor[(10, 16, 7), bool], %var_6356: Tensor[(10, 16, 7), bool]) -> (Tensor[(10, 16, 7), bool], Tensor[(10, 16, 7), float64]) {
  %186 = fn (%var_6337: Tensor[(10, 16, 7), bool], %var_6338: Tensor[(10, 16, 7), bool]) -> (Tensor[(10, 16, 7), bool], Tensor[(10, 16, 7), float64]) {
    %179 = cast(%var_6338, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
    %180 = shape_of(%var_6337, dtype="int32") /* ty=Tensor[(3), int32] */;
    %181 = cast(%var_6337, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
    %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %183 = cast(%var_6338, dtype="float64") /* ty=Tensor[(10, 16, 7), float64] */;
    %184 = logical_and(%181, %182) /* ty=Tensor[(10, 16, 7), bool] */;
    %185 = asin(%183) /* ty=Tensor[(10, 16, 7), float64] */;
    (%184, %185)
  };
  %186(%var_6355, %var_6356) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(10, 16, 7), float64]) */
}

def @func_416(%var_415: Tensor[(16, 8, 8), float64]) -> Tensor[(16, 8, 8), float32] {
  %190 = fn (%var_397: Tensor[(16, 8, 8), float64]) -> Tensor[(16, 8, 8), float32] {
    %187 = cast(%var_397, dtype="float64") /* ty=Tensor[(16, 8, 8), float64] */;
    %188 = sigmoid(%187) /* ty=Tensor[(16, 8, 8), float64] */;
    %189 = cast(%188, dtype="float32") /* ty=Tensor[(16, 8, 8), float32] */;
    log2(%189) /* ty=Tensor[(16, 8, 8), float32] */
  };
  %190(%var_415) /* ty=Tensor[(16, 8, 8), float32] */
}

def @func_3111(%var_3110: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), float32], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %203 = fn (%var_3080: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), float32], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64]) {
    %191 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
    %192 = cast(%var_3080, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
    %193 = shape_of(%191, dtype="int32") /* ty=Tensor[(3), int32] */;
    %194 = cast(%191, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
    %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %196 = cast(meta[relay.Constant][6] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
    %197 = cast(meta[relay.Constant][7] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
    %198 = reshape(%196, newshape=[154]) /* ty=Tensor[(154), int16] */;
    %199 = reshape(%197, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
    %200 = @func_2154(%198, %199) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
    %201 = mod(%194, %195) /* ty=Tensor[(14, 2, 8), float32] */;
    %202 = %200.1;
    (%201, %202, meta[relay.Constant][6] /* ty=Tensor[(154), int16] */, meta[relay.Constant][7] /* ty=Tensor[(2816), uint64] */)
  };
  %203(%var_3110) /* ty=(Tensor[(14, 2, 8), float32], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64]) */
}

def @func_6470() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), uint32], Tensor[(14, 2, 8), float64]) {
  %208 = fn () -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), uint32], Tensor[(14, 2, 8), float64]) {
    %204 = @func_5428() /* ty=(Tensor[(14, 2, 8), uint32], Tensor[(2816), uint64], Tensor[(154), int16], Tensor[(2816), uint64]) */;
    %205 = @func_1037() /* ty=Tensor[(14, 2, 8), float64] */;
    %206 = %204.0;
    %207 = @func_4981() /* ty=Tensor[(14, 2, 8), float64] */;
    (%205, %206, %207)
  };
  %208() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), uint32], Tensor[(14, 2, 8), float64]) */
}

def @func_3487() -> (Tensor[(224), float64],) {
  %211 = fn () -> (Tensor[(224), float64],) {
    %209 = @func_895() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
    %210 = %209.2;
    (%210,)
  };
  %211() /* ty=(Tensor[(224), float64],) */
}

def @func_63(%var_62: Tensor[(2, 11, 7), int16]) -> Tensor[(2, 11, 7), int16] {
  %216 = fn (%var_53: Tensor[(2, 11, 7), int16]) -> Tensor[(2, 11, 7), int16] {
    %212 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 11, 7), int16] */, dtype="int16") /* ty=Tensor[(2, 11, 7), int16] */;
    %213 = shape_of(%var_53, dtype="int32") /* ty=Tensor[(3), int32] */;
    %214 = cast(%var_53, dtype="int16") /* ty=Tensor[(2, 11, 7), int16] */;
    %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    logical_xor(%214, %215) /* ty=Tensor[(2, 11, 7), int16] */
  };
  %216(%var_62) /* ty=Tensor[(2, 11, 7), int16] */
}

def @func_4993(%var_4989: Tensor[(11, 12, 12), float32]) -> (Tensor[(11, 12, 12), float32],) {
  %217 = cast(%var_4989, dtype="float32") /* ty=Tensor[(11, 12, 12), float32] */;
  %218 = log(%217) /* ty=Tensor[(11, 12, 12), float32] */;
  (%218,)
}

def @func_5612() -> (Tensor[(14, 2, 8), float64],) {
  %220 = fn () -> (Tensor[(14, 2, 8), float64],) {
    %219 = @func_1037() /* ty=Tensor[(14, 2, 8), float64] */;
    (%219,)
  };
  %220() /* ty=(Tensor[(14, 2, 8), float64],) */
}

def @func_3793() -> (Tensor[(14, 2, 8), float64],) {
  @func_3791() /* ty=(Tensor[(14, 2, 8), float64],) */
}

def @func_4862(%var_4860: Tensor[(11, 11, 5), float64]) -> (Tensor[(11, 11, 5), float32],) {
  @func_4859(%var_4860) /* ty=(Tensor[(11, 11, 5), float32],) */
}

def @func_3995(%var_3994: Tensor[(8, 10, 15), float64]) -> Tensor[(8, 10, 15), bool] {
  %227 = fn (%var_3966: Tensor[(8, 10, 15), float64]) -> Tensor[(8, 10, 15), bool] {
    %221 = cast(%var_3966, dtype="float64") /* ty=Tensor[(8, 10, 15), float64] */;
    %222 = atanh(%221) /* ty=Tensor[(8, 10, 15), float64] */;
    %223 = cast(%var_3966, dtype="bool") /* ty=Tensor[(8, 10, 15), bool] */;
    %224 = shape_of(%222, dtype="int32") /* ty=Tensor[(3), int32] */;
    %225 = cast(%222, dtype="bool") /* ty=Tensor[(8, 10, 15), bool] */;
    %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%225, %226) /* ty=Tensor[(8, 10, 15), bool] */
  };
  %227(%var_3994) /* ty=Tensor[(8, 10, 15), bool] */
}

def @func_591() -> Tensor[(14, 2, 8), float64] {
  %229 = fn () -> Tensor[(14, 2, 8), float64] {
    %228 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
    %228.0
  };
  %229() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_919() -> Tensor[(14, 2, 8), float64] {
  %230 = fn () -> Tensor[(14, 2, 8), float64] {
    @func_590() /* ty=Tensor[(14, 2, 8), float64] */
  };
  %230() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_2374() -> (Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64]) {
  %231 = @func_2314() /* ty=Tensor[(14, 2, 8), bool] */;
  %232 = @func_2314() /* ty=Tensor[(14, 2, 8), bool] */;
  %233 = @func_590() /* ty=Tensor[(14, 2, 8), float64] */;
  (%231, %232, %233)
}

def @func_3002() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) {
  @func_3000() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) */
}

def @func_5428() -> (Tensor[(14, 2, 8), uint32], Tensor[(2816), uint64], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %234 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %235 = %234.0;
  %236 = cast(meta[relay.Constant][9] /* ty=Tensor[(14, 2, 8), float64] */, dtype="uint32") /* ty=Tensor[(14, 2, 8), uint32] */;
  %237 = shape_of(%235, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%235, dtype="uint32") /* ty=Tensor[(14, 2, 8), uint32] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %240 = cast(meta[relay.Constant][10] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
  %241 = cast(meta[relay.Constant][11] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %242 = reshape(%240, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %243 = reshape(%241, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %244 = @func_2154(%242, %243) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %245 = bitwise_xor(%238, %239) /* ty=Tensor[(14, 2, 8), uint32] */;
  %246 = %244.3;
  (%245, %246, meta[relay.Constant][10] /* ty=Tensor[(154), int16] */, meta[relay.Constant][11] /* ty=Tensor[(2816), uint64] */)
}

def @func_561() -> Tensor[(14, 2, 8), float64] {
  %247 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %247.0
}

def @func_2082(%var_2080: Tensor[(4, 7, 5), float64]) -> (Tensor[(4, 7, 5), float64], Tensor[(14, 2, 8), float64], Tensor[(4, 7, 5), bool], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(2, 11, 7), int16], Tensor[(4, 7, 5), float32]) {
  @func_2079(%var_2080) /* ty=(Tensor[(4, 7, 5), float64], Tensor[(14, 2, 8), float64], Tensor[(4, 7, 5), bool], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(2, 11, 7), int16], Tensor[(4, 7, 5), float32]) */
}

def @func_2242() -> Tensor[(224), float64] {
  %249 = fn () -> Tensor[(224), float64] {
    %248 = @func_1946() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
    %248.1
  };
  %249() /* ty=Tensor[(224), float64] */
}

def @func_3144() -> Tensor[(14, 2, 8), float64] {
  %250 = @func_3065() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %250.1
}

def @func_1616(%var_1614: Tensor[(16, 14, 1), float64]) -> Tensor[(16, 14, 1), float64] {
  @func_1613(%var_1614) /* ty=Tensor[(16, 14, 1), float64] */
}

def @func_2439(%var_2415: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), uint16],) {
  %251 = @func_1085() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %252 = %251.0;
  %253 = cast(%var_2415, dtype="uint16") /* ty=Tensor[(14, 2, 8), uint16] */;
  %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%252, dtype="uint16") /* ty=Tensor[(14, 2, 8), uint16] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %257 = bitwise_or(%255, %256) /* ty=Tensor[(14, 2, 8), uint16] */;
  (%257,)
}

def @func_3791() -> (Tensor[(14, 2, 8), float64],) {
  %258 = @func_1431() /* ty=Tensor[(14, 2, 8), float64] */;
  %259 = cast(meta[relay.Constant][12] /* ty=Tensor[(14, 2, 8), float64] */, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %260 = shape_of(%258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %261 = cast(%258, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %263 = equal(%261, %262) /* ty=Tensor[(14, 2, 8), bool] */;
  %264 = cast(%263, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %265 = shape_of(%258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%258, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %268 = divide(%266, %267) /* ty=Tensor[(14, 2, 8), float64] */;
  (%268,)
}

def @func_5177() -> (Tensor[(14, 2, 8), float64],) {
  %270 = fn () -> (Tensor[(14, 2, 8), float64],) {
    %269 = @func_918() /* ty=Tensor[(14, 2, 8), float64] */;
    (%269,)
  };
  %270() /* ty=(Tensor[(14, 2, 8), float64],) */
}

def @func_939() -> (Tensor[(224), float64],) {
  @func_937() /* ty=(Tensor[(224), float64],) */
}

def @func_2206() -> Tensor[(14, 2, 8), float64] {
  %272 = fn () -> Tensor[(14, 2, 8), float64] {
    %271 = @func_1085() /* ty=(Tensor[(14, 2, 8), float64],) */;
    %271.0
  };
  %272() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_937() -> (Tensor[(224), float64],) {
  %273 = @func_895() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
  %274 = %273.2;
  (%274,)
}

def @func_5334() -> (Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %282 = fn () -> (Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64]) {
    %275 = cast(meta[relay.Constant][13] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
    %276 = cast(meta[relay.Constant][14] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
    %277 = reshape(%275, newshape=[154]) /* ty=Tensor[(154), int16] */;
    %278 = reshape(%276, newshape=[1, 2816]) /* ty=Tensor[(1, 2816), uint64] */;
    %279 = @func_2528(%277, %278) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32]) */;
    %280 = @func_918() /* ty=Tensor[(14, 2, 8), float64] */;
    %281 = %279.2;
    (%280, %281, meta[relay.Constant][13] /* ty=Tensor[(154), int16] */, meta[relay.Constant][14] /* ty=Tensor[(2816), uint64] */)
  };
  %282() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64]) */
}

def @func_1592(%var_1588: Tensor[(154), int16]) -> (Tensor[(14, 2, 8), float64], Tensor[(16, 16, 11), uint64], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %283 = cast(%var_1588, dtype="int16") /* ty=Tensor[(154), int16] */;
  %284 = cast(meta[relay.Constant][15] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %285 = reshape(%283, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
  %286 = reshape(%284, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), uint64] */;
  %287 = @func_128(%285, %286) /* ty=(Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), bool]) */;
  %288 = @func_918() /* ty=Tensor[(14, 2, 8), float64] */;
  %289 = %287.2;
  (%288, %289, %var_1588, meta[relay.Constant][15] /* ty=Tensor[(2816), uint64] */)
}

def @func_1433() -> Tensor[(14, 2, 8), float64] {
  @func_1431() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_3335(%var_3315: Tensor[(6, 3, 14), bool]) -> (Tensor[(6, 3, 14), bool], Tensor[(224), float64]) {
  %290 = cast(%var_3315, dtype="bool") /* ty=Tensor[(6, 3, 14), bool] */;
  %291 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(6, 3, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 3, 14), bool] */, dtype="bool") /* ty=Tensor[(6, 3, 14), bool] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %294 = logical_and(%292, %293) /* ty=Tensor[(6, 3, 14), bool] */;
  %295 = @func_2000() /* ty=Tensor[(224), float64] */;
  (%294, %295)
}

def @func_6099() -> (Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), bool]) {
  %304 = fn () -> (Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), bool]) {
    %296 = @func_5893() /* ty=(Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), int8]) */;
    %297 = @func_1259() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16]) */;
    %298 = %296.3;
    %299 = cast(%298, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
    %300 = reshape(%299, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
    %301 = @func_201(%300) /* ty=(Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float32]) */;
    %302 = %297.0;
    %303 = %301.0;
    (%298, %302, %303)
  };
  %304() /* ty=(Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), bool]) */
}

def @func_4222(%var_4220: Tensor[(14, 5, 11), float32], %var_4221: Tensor[(4, 9, 13), float32]) -> (Tensor[(14, 5, 11), float32], Tensor[(4, 9, 13), bool]) {
  @func_4218(%var_4220, %var_4221) /* ty=(Tensor[(14, 5, 11), float32], Tensor[(4, 9, 13), bool]) */
}

def @func_1037() -> Tensor[(14, 2, 8), float64] {
  @func_561() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_131(%var_129: Tensor[(2, 11, 7), int16], %var_130: Tensor[(16, 16, 11), uint64]) -> (Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), bool]) {
  %337 = fn (%var_102: Tensor[(2, 11, 7), int16], %var_116: Tensor[(16, 16, 11), uint64]) -> (Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), bool]) {
    %305 = cast(meta[relay.Constant][17] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
    %306 = reshape(%305, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
    %307 = @func_61(%306) /* ty=Tensor[(2, 11, 7), int16] */;
    %308 = cast(%307, dtype="int16") /* ty=Tensor[(2, 11, 7), int16] */;
    %309 = reshape(%308, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
    %310 = cast(meta[relay.Constant][19] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %311 = cast(meta[relay.Constant][18] /* ty=Tensor[(16, 16, 11), int8] */, dtype="int8") /* ty=Tensor[(16, 16, 11), int8] */;
    %312 = minimum(%310, %311) /* ty=Tensor[(16, 16, 11), int8] */;
    %313 = cast(%312, dtype="uint64") /* ty=Tensor[(16, 16, 11), uint64] */;
    %314 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(16, 16, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %315 = cast(meta[relay.Constant][18] /* ty=Tensor[(16, 16, 11), int8] */, dtype="uint64") /* ty=Tensor[(16, 16, 11), uint64] */;
    %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %317 = maximum(%315, %316) /* ty=Tensor[(16, 16, 11), uint64] */;
    %318 = cast(%var_116, dtype="uint64") /* ty=Tensor[(16, 16, 11), uint64] */;
    %319 = shape_of(%317, dtype="int32") /* ty=Tensor[(3), int32] */;
    %320 = cast(%317, dtype="uint64") /* ty=Tensor[(16, 16, 11), uint64] */;
    %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %322 = cast(%var_102, dtype="int16") /* ty=Tensor[(2, 11, 7), int16] */;
    %323 = reshape(%322, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
    %324 = cast(%var_102, dtype="bool") /* ty=Tensor[(2, 11, 7), bool] */;
    %325 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %326 = cast(%307, dtype="bool") /* ty=Tensor[(2, 11, 7), bool] */;
    %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %328 = less_equal(%326, %327) /* ty=Tensor[(2, 11, 7), bool] */;
    %329 = cast(%328, dtype="bool") /* ty=Tensor[(2, 11, 7), bool] */;
    %330 = shape_of(%var_102, dtype="int32") /* ty=Tensor[(3), int32] */;
    %331 = cast(%var_102, dtype="bool") /* ty=Tensor[(2, 11, 7), bool] */;
    %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %333 = @func_61(%309) /* ty=Tensor[(2, 11, 7), int16] */;
    %334 = logical_xor(%320, %321) /* ty=Tensor[(16, 16, 11), uint64] */;
    %335 = @func_61(%323) /* ty=Tensor[(2, 11, 7), int16] */;
    %336 = logical_and(%331, %332) /* ty=Tensor[(2, 11, 7), bool] */;
    (meta[relay.Constant][17] /* ty=Tensor[(154), int16] */, %333, %334, %335, %336)
  };
  %337(%var_129, %var_130) /* ty=(Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), bool]) */
}

def @func_2154(%var_2138: Tensor[(154), int16], %var_2139: Tensor[(2816), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) {
  %338 = @func_1259() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16]) */;
  %339 = cast(%var_2138, dtype="int16") /* ty=Tensor[(154), int16] */;
  %340 = cast(%var_2139, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %341 = reshape(%339, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %342 = reshape(%340, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %343 = @func_1112(%341, %342) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(60, 2), float32], Tensor[(154), int16], Tensor[(2816), uint64]) */;
  %344 = %338.0;
  %345 = %343.3;
  %346 = @func_1431() /* ty=Tensor[(14, 2, 8), float64] */;
  %347 = @func_1431() /* ty=Tensor[(14, 2, 8), float64] */;
  (%344, %345, %var_2138, %var_2139, %346, %347)
}

def @func_2314() -> Tensor[(14, 2, 8), bool] {
  %348 = @func_543() /* ty=Tensor[(14, 2, 8), float32] */;
  %349 = cast(%348, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %350 = exp(%349) /* ty=Tensor[(14, 2, 8), float64] */;
  %351 = cast(%348, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %352 = shape_of(%350, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(%350, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%353, %354) /* ty=Tensor[(14, 2, 8), bool] */
}

def @func_3338(%var_3336: Tensor[(6, 3, 14), bool]) -> (Tensor[(6, 3, 14), bool], Tensor[(224), float64]) {
  @func_3335(%var_3336) /* ty=(Tensor[(6, 3, 14), bool], Tensor[(224), float64]) */
}

def @func_627(%var_620: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), float32],) {
  %355 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
  %356 = cast(%var_620, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %357 = shape_of(%355, dtype="int32") /* ty=Tensor[(3), int32] */;
  %358 = cast(%355, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %360 = floor_mod(%358, %359) /* ty=Tensor[(14, 2, 8), float32] */;
  (%360,)
}

def @func_479() -> (Tensor[(14, 2, 8), float64],) {
  %361 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %362 = %361.0;
  (%362,)
}

def @func_4966() -> Tensor[(14, 2, 8), float64] {
  @func_3144() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_331(%var_330: Tensor[(1408, 2), uint64]) -> (Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(1408, 2), uint64]) {
  %371 = fn (%var_327: Tensor[(1408, 2), uint64]) -> (Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(1408, 2), uint64]) {
    %363 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
    %364 = %363.1;
    %365 = cast(%364, dtype="int16") /* ty=Tensor[(2, 11, 7), int16] */;
    %366 = cast(%var_327, dtype="uint64") /* ty=Tensor[(1408, 2), uint64] */;
    %367 = reshape(%365, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
    %368 = reshape(%366, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), uint64] */;
    %369 = @func_128(%367, %368) /* ty=(Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), bool]) */;
    %370 = %369.2;
    (%364, %370, %var_327)
  };
  %371(%var_330) /* ty=(Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(1408, 2), uint64]) */
}

def @func_2376() -> (Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64]) {
  @func_2374() /* ty=(Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64]) */
}

def @func_6238() -> (Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), float64]) {
  %376 = fn () -> (Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), float64]) {
    %372 = @func_1196() /* ty=(Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), int8], Tensor[(224), float64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
    %373 = @func_3457() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) */;
    %374 = %372.1;
    %375 = %373.0;
    (%374, %375)
  };
  %376() /* ty=(Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), float64]) */
}

def @func_5207() -> Tensor[(14, 2, 8), float64] {
  @func_5205() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_5525(%var_5523: Tensor[(5, 7, 16), bool], %var_5524: Tensor[(224), float64]) -> (Tensor[(14, 2, 8), float32], Tensor[(224), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(154), int16], Tensor[(5, 7, 16), bool]) {
  %401 = fn (%var_5443: Tensor[(5, 7, 16), bool], %var_5456: Tensor[(224), float64]) -> (Tensor[(14, 2, 8), float32], Tensor[(224), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(154), int16], Tensor[(5, 7, 16), bool]) {
    %377 = cast(%var_5456, dtype="float64") /* ty=Tensor[(224), float64] */;
    %378 = reshape(%377, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
    %379 = @func_627(%378) /* ty=(Tensor[(14, 2, 8), float32],) */;
    %380 = @func_721() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), int16]) */;
    %381 = @func_4527() /* ty=(Tensor[(224), float64], Tensor[(14, 2, 8), float32], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), bool]) */;
    %382 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
    %383 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 7, 16), bool] */, dtype="float32") /* ty=Tensor[(5, 7, 16), float32] */;
    %384 = cosh(%383) /* ty=Tensor[(5, 7, 16), float32] */;
    %385 = cast(%384, dtype="float32") /* ty=Tensor[(5, 7, 16), float32] */;
    %386 = log(%385) /* ty=Tensor[(5, 7, 16), float32] */;
    %387 = cast(%var_5443, dtype="bool") /* ty=Tensor[(5, 7, 16), bool] */;
    %388 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(5, 7, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %389 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 7, 16), bool] */, dtype="bool") /* ty=Tensor[(5, 7, 16), bool] */;
    %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %391 = logical_and(%389, %390) /* ty=Tensor[(5, 7, 16), bool] */;
    %392 = cast(%391, dtype="bool") /* ty=Tensor[(5, 7, 16), bool] */;
    %393 = shape_of(%386, dtype="int32") /* ty=Tensor[(3), int32] */;
    %394 = cast(%386, dtype="bool") /* ty=Tensor[(5, 7, 16), bool] */;
    %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %396 = %379.0;
    %397 = %380.2;
    %398 = %381.3;
    %399 = %382.2;
    %400 = less(%394, %395) /* ty=Tensor[(5, 7, 16), bool] */;
    (%396, %var_5456, %397, %398, %399, %400)
  };
  %401(%var_5523, %var_5524) /* ty=(Tensor[(14, 2, 8), float32], Tensor[(224), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(154), int16], Tensor[(5, 7, 16), bool]) */
}

def @func_266(%var_265: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), int8],) {
  %409 = fn (%var_241: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), int8],) {
    %402 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
    %403 = %402.0;
    %404 = cast(%var_241, dtype="int8") /* ty=Tensor[(14, 2, 8), int8] */;
    %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
    %406 = cast(%403, dtype="int8") /* ty=Tensor[(14, 2, 8), int8] */;
    %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %408 = logical_xor(%406, %407) /* ty=Tensor[(14, 2, 8), int8] */;
    (%408,)
  };
  %409(%var_265) /* ty=(Tensor[(14, 2, 8), int8],) */
}

def @func_1723(%var_1698: Tensor[(9, 2, 4), float32]) -> Tensor[(9, 2, 4), bool] {
  %410 = cast(%var_1698, dtype="float32") /* ty=Tensor[(9, 2, 4), float32] */;
  %411 = cosh(%410) /* ty=Tensor[(9, 2, 4), float32] */;
  %412 = cast(%var_1698, dtype="bool") /* ty=Tensor[(9, 2, 4), bool] */;
  %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%411, dtype="bool") /* ty=Tensor[(9, 2, 4), bool] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%414, %415) /* ty=Tensor[(9, 2, 4), bool] */
}

def @func_1260() -> (Tensor[(14, 2, 8), float64], Tensor[(154), int16]) {
  %419 = fn () -> (Tensor[(14, 2, 8), float64], Tensor[(154), int16]) {
    %416 = @func_721() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), int16]) */;
    %417 = @func_1037() /* ty=Tensor[(14, 2, 8), float64] */;
    %418 = %416.0;
    (%417, %418)
  };
  %419() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16]) */
}

def @func_1087() -> (Tensor[(14, 2, 8), float64],) {
  @func_1085() /* ty=(Tensor[(14, 2, 8), float64],) */
}

def @func_3000() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) {
  %420 = @func_2651() /* ty=(Tensor[(14, 2, 8), float32],) */;
  %421 = @func_1037() /* ty=Tensor[(14, 2, 8), float64] */;
  %422 = %420.0;
  (%421, %422)
}

def @func_4084(%var_4082: Tensor[(224), float64], %var_4083: Tensor[(2816), uint64]) -> (Tensor[(224), int64], Tensor[(2, 11, 7), int16], Tensor[(224), float64], Tensor[(2, 11, 7), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), float64]) {
  %439 = fn (%var_4052: Tensor[(224), float64], %var_4077: Tensor[(2816), uint64]) -> (Tensor[(224), int64], Tensor[(2, 11, 7), int16], Tensor[(224), float64], Tensor[(2, 11, 7), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), float64]) {
    %423 = @func_3486() /* ty=(Tensor[(224), float64],) */;
    %424 = %423.0;
    %425 = cast(%var_4052, dtype="int64") /* ty=Tensor[(224), int64] */;
    %426 = shape_of(%424, dtype="int32") /* ty=Tensor[(1), int32] */;
    %427 = cast(%424, dtype="int64") /* ty=Tensor[(224), int64] */;
    %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?), int64] */;
    %429 = @func_1816() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16]) */;
    %430 = @func_3486() /* ty=(Tensor[(224), float64],) */;
    %431 = cast(%var_4077, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
    %432 = reshape(%431, newshape=[1408, 2]) /* ty=Tensor[(1408, 2), uint64] */;
    %433 = @func_329(%432) /* ty=(Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(1408, 2), uint64]) */;
    %434 = bitwise_and(%427, %428) /* ty=Tensor[(224), int64] */;
    %435 = %429.1;
    %436 = %430.0;
    %437 = %433.0;
    %438 = @func_590() /* ty=Tensor[(14, 2, 8), float64] */;
    (%434, %435, %436, %437, %var_4077, %438)
  };
  %439(%var_4082, %var_4083) /* ty=(Tensor[(224), int64], Tensor[(2, 11, 7), int16], Tensor[(224), float64], Tensor[(2, 11, 7), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), float64]) */
}

def @func_6164(%var_6163: Tensor[(15, 1, 1), uint16]) -> (Tensor[(15, 2, 4), bool], Tensor[(15, 1, 1), float32]) {
  %445 = fn (%var_6138: Tensor[(15, 1, 1), uint16]) -> (Tensor[(15, 2, 4), bool], Tensor[(15, 1, 1), float32]) {
    %440 = cast(%var_6138, dtype="bool") /* ty=Tensor[(15, 1, 1), bool] */;
    %441 = cast(meta[relay.Constant][21] /* ty=Tensor[(15, 2, 4), uint16] */, dtype="bool") /* ty=Tensor[(15, 2, 4), bool] */;
    %442 = cast(%var_6138, dtype="float32") /* ty=Tensor[(15, 1, 1), float32] */;
    %443 = equal(%440, %441) /* ty=Tensor[(15, 2, 4), bool] */;
    %444 = asinh(%442) /* ty=Tensor[(15, 1, 1), float32] */;
    (%443, %444)
  };
  %445(%var_6163) /* ty=(Tensor[(15, 2, 4), bool], Tensor[(15, 1, 1), float32]) */
}

def @func_2158(%var_2156: Tensor[(154), int16], %var_2157: Tensor[(2816), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) {
  @func_2154(%var_2156, %var_2157) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */
}

def @func_3591(%var_3588: Tensor[(11, 13, 8), uint8], %var_3589: Tensor[(11, 13, 8), uint8], %var_3590: Tensor[(42, 6), bool]) -> (Tensor[(11, 13, 8), float32], Tensor[(14, 2, 8), float64], Tensor[(224), float64], Tensor[(6, 3, 14), bool], Tensor[(42, 6), bool]) {
  %461 = fn (%var_3563: Tensor[(11, 13, 8), uint8], %var_3564: Tensor[(11, 13, 8), uint8], %var_3585: Tensor[(42, 6), bool]) -> (Tensor[(11, 13, 8), float32], Tensor[(14, 2, 8), float64], Tensor[(224), float64], Tensor[(6, 3, 14), bool], Tensor[(42, 6), bool]) {
    %446 = cast(%var_3564, dtype="uint8") /* ty=Tensor[(11, 13, 8), uint8] */;
    %447 = shape_of(%var_3563, dtype="int32") /* ty=Tensor[(3), int32] */;
    %448 = cast(%var_3563, dtype="uint8") /* ty=Tensor[(11, 13, 8), uint8] */;
    %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %450 = add(%448, %449) /* ty=Tensor[(11, 13, 8), uint8] */;
    %451 = cast(%450, dtype="float32") /* ty=Tensor[(11, 13, 8), float32] */;
    %452 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
    %453 = @func_937() /* ty=(Tensor[(224), float64],) */;
    %454 = cast(%var_3585, dtype="bool") /* ty=Tensor[(42, 6), bool] */;
    %455 = reshape(%454, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), bool] */;
    %456 = @func_3335(%455) /* ty=(Tensor[(6, 3, 14), bool], Tensor[(224), float64]) */;
    %457 = cos(%451) /* ty=Tensor[(11, 13, 8), float32] */;
    %458 = %452.0;
    %459 = %453.0;
    %460 = %456.0;
    (%457, %458, %459, %460, %var_3585)
  };
  %461(%var_3588, %var_3589, %var_3590) /* ty=(Tensor[(11, 13, 8), float32], Tensor[(14, 2, 8), float64], Tensor[(224), float64], Tensor[(6, 3, 14), bool], Tensor[(42, 6), bool]) */
}

def @func_4653(%var_4651: Tensor[(11, 1), float64]) -> (Tensor[(11, 1), float64],) {
  @func_4650(%var_4651) /* ty=(Tensor[(11, 1), float64],) */
}

def @func_1595(%var_1593: Tensor[(154), int16]) -> (Tensor[(14, 2, 8), float64], Tensor[(16, 16, 11), uint64], Tensor[(154), int16], Tensor[(2816), uint64]) {
  @func_1592(%var_1593) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(16, 16, 11), uint64], Tensor[(154), int16], Tensor[(2816), uint64]) */
}

def @func_1431() -> Tensor[(14, 2, 8), float64] {
  %462 = @func_590() /* ty=Tensor[(14, 2, 8), float64] */;
  %463 = cast(%462, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  cos(%463) /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_6199() -> (Tensor[(14, 2, 8), int8],) {
  %465 = fn () -> (Tensor[(14, 2, 8), int8],) {
    %464 = @func_4724() /* ty=Tensor[(14, 2, 8), int8] */;
    (%464,)
  };
  %465() /* ty=(Tensor[(14, 2, 8), int8],) */
}

def @func_3618() -> Tensor[(154), int16] {
  %467 = fn () -> Tensor[(154), int16] {
    %466 = @func_813() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float32]) */;
    %466.0
  };
  %467() /* ty=Tensor[(154), int16] */
}

def @func_3364(%var_3347: Tensor[(6, 7), int32]) -> (Tensor[(6, 7), int32],) {
  %468 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 7), int32] */, dtype="int32") /* ty=Tensor[(6, 7), int32] */;
  %469 = shape_of(%var_3347, dtype="int32") /* ty=Tensor[(2), int32] */;
  %470 = cast(%var_3347, dtype="int32") /* ty=Tensor[(6, 7), int32] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %472 = bitwise_or(%470, %471) /* ty=Tensor[(6, 7), int32] */;
  (%472,)
}

def @func_3872(%var_3835: uint32) -> (Tensor[(16, 10, 7), uint32], Tensor[(224), float64], Tensor[(14, 2, 8), float32], Tensor[(14, 2, 8), float64]) {
  %473 = cast(%var_3835, dtype="uint32") /* ty=uint32 */;
  %474 = cast(meta[relay.Constant][23] /* ty=Tensor[(16, 10, 7), uint32] */, dtype="uint32") /* ty=Tensor[(16, 10, 7), uint32] */;
  %475 = @func_3486() /* ty=(Tensor[(224), float64],) */;
  %476 = %475.0;
  %477 = cast(%476, dtype="float64") /* ty=Tensor[(224), float64] */;
  %478 = reshape(%477, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %479 = @func_201(%478) /* ty=(Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float32]) */;
  %480 = logical_xor(%473, %474) /* ty=Tensor[(16, 10, 7), uint32] */;
  %481 = %479.1;
  %482 = @func_2205() /* ty=Tensor[(14, 2, 8), float64] */;
  (%480, %476, %481, %482)
}

def @func_5205() -> Tensor[(14, 2, 8), float64] {
  %483 = @func_3952() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %483.0
}

def @func_6440() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32], Tensor[(560), bool]) {
  %484 = @func_2741() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %485 = cast(meta[relay.Constant][24] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %486 = %484.0;
  %487 = cast(%486, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %488 = reshape(%485, newshape=[5, 7, 16]) /* ty=Tensor[(5, 7, 16), bool] */;
  %489 = reshape(%487, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %490 = @func_5522(%488, %489) /* ty=(Tensor[(14, 2, 8), float32], Tensor[(224), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(154), int16], Tensor[(5, 7, 16), bool]) */;
  %491 = %490.0;
  (%486, %491, meta[relay.Constant][24] /* ty=Tensor[(560), bool] */)
}

def @func_5116() -> (Tensor[(14, 2, 8), int8],) {
  %493 = fn () -> (Tensor[(14, 2, 8), int8],) {
    %492 = @func_4724() /* ty=Tensor[(14, 2, 8), int8] */;
    (%492,)
  };
  %493() /* ty=(Tensor[(14, 2, 8), int8],) */
}

def @func_1115(%var_1113: Tensor[(154), int16], %var_1114: Tensor[(2816), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(60, 2), float32], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %505 = fn (%var_1108: Tensor[(154), int16], %var_1109: Tensor[(2816), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(60, 2), float32], Tensor[(154), int16], Tensor[(2816), uint64]) {
    %494 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
    %495 = cast(%494, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
    %496 = cast(meta[relay.Constant][25] /* ty=Tensor[(60, 2), float32] */, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
    %497 = cast(%var_1108, dtype="int16") /* ty=Tensor[(154), int16] */;
    %498 = cast(%var_1109, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
    %499 = reshape(%496, newshape=[15, 1, 8]) /* ty=Tensor[(15, 1, 8), float32] */;
    %500 = reshape(%497, newshape=[154]) /* ty=Tensor[(154), int16] */;
    %501 = reshape(%498, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
    %502 = @func_464(%499, %500, %501) /* ty=(Tensor[(2, 11, 7), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(15, ?, 8), bool]) */;
    %503 = atan(%495) /* ty=Tensor[(14, 2, 8), float64] */;
    %504 = %502.0;
    (%503, %504, meta[relay.Constant][25] /* ty=Tensor[(60, 2), float32] */, %var_1108, %var_1109)
  };
  %505(%var_1113, %var_1114) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(60, 2), float32], Tensor[(154), int16], Tensor[(2816), uint64]) */
}

def @func_1689(%var_1649: Tensor[(14, 2, 8), float64], %var_1663: Tensor[(2816), uint64]) -> (Tensor[(120), float32], Tensor[(154), int16], Tensor[(2816), float64], Tensor[(1408, 2), bool], Tensor[(14, 2, 8), bool]) {
  %506 = cast(meta[relay.Constant][26] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %507 = cast(meta[relay.Constant][27] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
  %508 = cast(meta[relay.Constant][28] /* ty=Tensor[(1408, 2), uint64] */, dtype="uint64") /* ty=Tensor[(1408, 2), uint64] */;
  %509 = reshape(%506, newshape=[15, 1, 8]) /* ty=Tensor[(15, 1, 8), float32] */;
  %510 = reshape(%507, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %511 = reshape(%508, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %512 = @func_464(%509, %510, %511) /* ty=(Tensor[(2, 11, 7), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(15, ?, 8), bool]) */;
  %513 = %512.2;
  %514 = cast(%var_1663, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %515 = shape_of(%513, dtype="int32") /* ty=Tensor[(1), int32] */;
  %516 = cast(%513, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?), float64] */;
  %518 = cast(%var_1663, dtype="bool") /* ty=Tensor[(2816), bool] */;
  %519 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(1408, 2), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %520 = cast(meta[relay.Constant][28] /* ty=Tensor[(1408, 2), uint64] */, dtype="bool") /* ty=Tensor[(1408, 2), bool] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %522 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %523 = %522.0;
  %524 = cast(%var_1649, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %525 = shape_of(%523, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(%523, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %528 = greater(%526, %527) /* ty=Tensor[(14, 2, 8), bool] */;
  %529 = cast(%var_1649, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %530 = shape_of(%528, dtype="int32") /* ty=Tensor[(3), int32] */;
  %531 = cast(%528, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %533 = power(%516, %517) /* ty=Tensor[(2816), float64] */;
  %534 = greater(%520, %521) /* ty=Tensor[(1408, 2), bool] */;
  %535 = greater_equal(%531, %532) /* ty=Tensor[(14, 2, 8), bool] */;
  (meta[relay.Constant][26] /* ty=Tensor[(120), float32] */, meta[relay.Constant][27] /* ty=Tensor[(154), int16] */, %533, %534, %535)
}

def @func_4916() -> Tensor[(14, 2, 8), float64] {
  %536 = @func_3791() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %536.0
}

def @func_5669(%var_5668: Tensor[(1, 280), bool]) -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), uint16], Tensor[(1, 280), bool]) {
  %545 = fn (%var_5659: Tensor[(1, 280), bool]) -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), uint16], Tensor[(1, 280), bool]) {
    %537 = @func_3065() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
    %538 = cast(%var_5659, dtype="bool") /* ty=Tensor[(1, 280), bool] */;
    %539 = cast(%var_5659, dtype="bool") /* ty=Tensor[(1, 280), bool] */;
    %540 = reshape(%538, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), bool] */;
    %541 = reshape(%539, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), bool] */;
    %542 = @func_4832(%540, %541) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(224), float64], Tensor[(7, 10, 4), float64], Tensor[(14, 2, 8), uint16], Tensor[(4, 7, 5), bool], Tensor[(35, 4), float64]) */;
    %543 = %537.0;
    %544 = %542.3;
    (%543, %544, %var_5659)
  };
  %545(%var_5668) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), uint16], Tensor[(1, 280), bool]) */
}

def @func_2855() -> (Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), float32]) {
  %556 = fn () -> (Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), float32]) {
    %546 = @func_2592() /* ty=(Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float32]) */;
    %547 = %546.0;
    %548 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
    %549 = %548.2;
    %550 = cast(%549, dtype="float32") /* ty=Tensor[(154), float32] */;
    %551 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
    %552 = cast(%547, dtype="float32") /* ty=Tensor[(2, 11, 7), float32] */;
    %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %554 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
    %555 = divide(%552, %553) /* ty=Tensor[(2, 11, 7), float32] */;
    (%554, %555)
  };
  %556() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), float32]) */
}

def @func_3067() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) {
  @func_3065() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */
}

def @func_1613(%var_1600: Tensor[(16, 14, 1), float64]) -> Tensor[(16, 14, 1), float64] {
  %557 = cast(%var_1600, dtype="float64") /* ty=Tensor[(16, 14, 1), float64] */;
  sin(%557) /* ty=Tensor[(16, 14, 1), float64] */
}

def @func_5406() -> (Tensor[(14, 2, 8), float64],) {
  %558 = @func_1816() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16]) */;
  %559 = %558.0;
  (%559,)
}

def @func_5430() -> (Tensor[(14, 2, 8), uint32], Tensor[(2816), uint64], Tensor[(154), int16], Tensor[(2816), uint64]) {
  @func_5428() /* ty=(Tensor[(14, 2, 8), uint32], Tensor[(2816), uint64], Tensor[(154), int16], Tensor[(2816), uint64]) */
}

def @func_814() -> (Tensor[(154), int16], Tensor[(14, 2, 8), float32]) {
  %563 = fn () -> (Tensor[(154), int16], Tensor[(14, 2, 8), float32]) {
    %560 = @func_721() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), int16]) */;
    %561 = %560.0;
    %562 = @func_543() /* ty=Tensor[(14, 2, 8), float32] */;
    (%561, %562)
  };
  %563() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float32]) */
}

def @func_481() -> (Tensor[(14, 2, 8), float64],) {
  @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */
}

def @func_6049(%var_6045: Tensor[(154), int16], %var_6046: Tensor[(2816), uint64], %var_6047: Tensor[(560), bool], %var_6048: Tensor[(2816), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), float32], Tensor[(14, 2, 8), float32], Tensor[(560), bool], Tensor[(2816), bool]) {
  %584 = fn (%var_6005: Tensor[(154), int16], %var_6006: Tensor[(2816), uint64], %var_6025: Tensor[(560), bool], %var_6037: Tensor[(2816), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), float32], Tensor[(14, 2, 8), float32], Tensor[(560), bool], Tensor[(2816), bool]) {
    %564 = cast(%var_6005, dtype="int16") /* ty=Tensor[(154), int16] */;
    %565 = cast(%var_6006, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
    %566 = reshape(%564, newshape=[154]) /* ty=Tensor[(154), int16] */;
    %567 = reshape(%565, newshape=[1, 2816]) /* ty=Tensor[(1, 2816), uint64] */;
    %568 = @func_2528(%566, %567) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32]) */;
    %569 = %568.1;
    %570 = cast(%569, dtype="float32") /* ty=Tensor[(154), float32] */;
    %571 = cast(%var_6025, dtype="bool") /* ty=Tensor[(560), bool] */;
    %572 = @func_4916() /* ty=Tensor[(14, 2, 8), float64] */;
    %573 = cast(%572, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
    %574 = reshape(%571, newshape=[5, 7, 16]) /* ty=Tensor[(5, 7, 16), bool] */;
    %575 = reshape(%573, newshape=[224]) /* ty=Tensor[(224), float64] */;
    %576 = @func_5522(%574, %575) /* ty=(Tensor[(14, 2, 8), float32], Tensor[(224), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(154), int16], Tensor[(5, 7, 16), bool]) */;
    %577 = cast(%var_6037, dtype="bool") /* ty=Tensor[(2816), bool] */;
    %578 = shape_of(%var_6006, dtype="int32") /* ty=Tensor[(1), int32] */;
    %579 = cast(%var_6006, dtype="bool") /* ty=Tensor[(2816), bool] */;
    %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?), bool] */;
    %581 = atan(%570) /* ty=Tensor[(154), float32] */;
    %582 = %576.0;
    %583 = logical_and(%579, %580) /* ty=Tensor[(2816), bool] */;
    (%572, %var_6005, %581, %582, %var_6025, %583)
  };
  %584(%var_6045, %var_6046, %var_6047, %var_6048) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), float32], Tensor[(14, 2, 8), float32], Tensor[(560), bool], Tensor[(2816), bool]) */
}

def @func_543() -> Tensor[(14, 2, 8), float32] {
  %585 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
  %586 = %585.0;
  %587 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %588 = %587.0;
  %589 = cast(%588, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %590 = sqrt(%589) /* ty=Tensor[(14, 2, 8), float32] */;
  %591 = cast(%590, dtype="uint32") /* ty=Tensor[(14, 2, 8), uint32] */;
  %592 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %593 = cast(%586, dtype="uint32") /* ty=Tensor[(14, 2, 8), uint32] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %595 = multiply(%593, %594) /* ty=Tensor[(14, 2, 8), uint32] */;
  %596 = cast(%595, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  sinh(%596) /* ty=Tensor[(14, 2, 8), float32] */
}

def @func_2593() -> (Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float32]) {
  %599 = fn () -> (Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float32]) {
    %597 = @func_657() /* ty=Tensor[(2, 11, 7), int16] */;
    %598 = @func_543() /* ty=Tensor[(14, 2, 8), float32] */;
    (%597, %598)
  };
  %599() /* ty=(Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float32]) */
}

def @func_464(%var_424: Tensor[(15, 1, 8), float32], %var_440: Tensor[(154), int16], %var_441: Tensor[(2816), uint64]) -> (Tensor[(2, 11, 7), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(15, ?, 8), bool]) {
  %600 = cast(%var_440, dtype="int16") /* ty=Tensor[(154), int16] */;
  %601 = cast(%var_441, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %602 = reshape(%600, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
  %603 = reshape(%601, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), uint64] */;
  %604 = @func_128(%602, %603) /* ty=(Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), bool]) */;
  %605 = cast(%var_424, dtype="float32") /* ty=Tensor[(15, 1, 8), float32] */;
  %606 = sin(%605) /* ty=Tensor[(15, 1, 8), float32] */;
  %607 = cast(%606, dtype="float32") /* ty=Tensor[(15, 1, 8), float32] */;
  %608 = atanh(%607) /* ty=Tensor[(15, 1, 8), float32] */;
  %609 = cast(%606, dtype="int64") /* ty=Tensor[(15, 1, 8), int64] */;
  %610 = shape_of(%var_424, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%var_424, dtype="int64") /* ty=Tensor[(15, 1, 8), int64] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %613 = bitwise_and(%611, %612) /* ty=Tensor[(15, ?, 8), int64] */;
  %614 = cast(%613, dtype="bool") /* ty=Tensor[(15, ?, 8), bool] */;
  %615 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%608, dtype="bool") /* ty=Tensor[(15, 1, 8), bool] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %618 = less_equal(%616, %617) /* ty=Tensor[(15, ?, 8), bool] */;
  %619 = cast(%618, dtype="bool") /* ty=Tensor[(15, ?, 8), bool] */;
  %620 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %621 = cast(%606, dtype="bool") /* ty=Tensor[(15, 1, 8), bool] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %623 = %604.3;
  %624 = equal(%621, %622) /* ty=Tensor[(15, ?, 8), bool] */;
  (%623, %var_440, %var_441, %624)
}

def @func_171() -> (Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) {
  %625 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 2, 8), float64] */, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %626 = cast(meta[relay.Constant][30] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
  %627 = reshape(%626, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
  %628 = log(%625) /* ty=Tensor[(14, 2, 8), float64] */;
  %629 = @func_61(%627) /* ty=Tensor[(2, 11, 7), int16] */;
  (%628, %629, meta[relay.Constant][30] /* ty=Tensor[(154), int16] */)
}

def @func_4650(%var_4639: Tensor[(11, 1), float64]) -> (Tensor[(11, 1), float64],) {
  %630 = cast(%var_4639, dtype="float64") /* ty=Tensor[(11, 1), float64] */;
  %631 = sigmoid(%630) /* ty=Tensor[(11, 1), float64] */;
  (%631,)
}

def @func_5163(%var_5160: Tensor[(112), float64], %var_5161: Tensor[(224), float64], %var_5162: Tensor[(4, 256), float64]) -> (Tensor[(154), int16], Tensor[(14, 2, 8), int8], Tensor[(112), float64], Tensor[(224), float64], Tensor[(4, 256), float64]) {
  @func_5158(%var_5160, %var_5161, %var_5162) /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), int8], Tensor[(112), float64], Tensor[(224), float64], Tensor[(4, 256), float64]) */
}

def @func_1946() -> (Tensor[(14, 2, 8), float64], Tensor[(224), float64]) {
  %632 = @func_590() /* ty=Tensor[(14, 2, 8), float64] */;
  %633 = cast(%632, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %634 = @func_895() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(224), float64]) */;
  %635 = cosh(%633) /* ty=Tensor[(14, 2, 8), float64] */;
  %636 = %634.2;
  (%635, %636)
}

def @func_368(%var_367: Tensor[(224), float64]) -> (Tensor[(154), int16], Tensor[(14, 2, 8), bool], Tensor[(224), float64]) {
  %643 = fn (%var_363: Tensor[(224), float64]) -> (Tensor[(154), int16], Tensor[(14, 2, 8), bool], Tensor[(224), float64]) {
    %637 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
    %638 = cast(%var_363, dtype="float64") /* ty=Tensor[(224), float64] */;
    %639 = reshape(%638, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
    %640 = @func_201(%639) /* ty=(Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float32]) */;
    %641 = %637.2;
    %642 = %640.0;
    (%641, %642, %var_363)
  };
  %643(%var_367) /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), bool], Tensor[(224), float64]) */
}

def @func_2253(%var_2250: Tensor[(14, 1, 14), float64]) -> (Tensor[(14, 1, 14), float64],) {
  %644 = cast(%var_2250, dtype="float64") /* ty=Tensor[(14, 1, 14), float64] */;
  %645 = log10(%644) /* ty=Tensor[(14, 1, 14), float64] */;
  (%645,)
}

def @func_5562() -> (Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), float32]) {
  @func_5560() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), float32]) */
}

def @func_2292(%var_2291: Tensor[(2, 11, 7), int16]) -> Tensor[(2, 11, 7), int16] {
  %652 = fn (%var_2284: Tensor[(2, 11, 7), int16]) -> Tensor[(2, 11, 7), int16] {
    %646 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
    %647 = %646.1;
    %648 = cast(%var_2284, dtype="int16") /* ty=Tensor[(2, 11, 7), int16] */;
    %649 = shape_of(%647, dtype="int32") /* ty=Tensor[(3), int32] */;
    %650 = cast(%647, dtype="int16") /* ty=Tensor[(2, 11, 7), int16] */;
    %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    left_shift(%650, %651) /* ty=Tensor[(2, 11, 7), int16] */
  };
  %652(%var_2291) /* ty=Tensor[(2, 11, 7), int16] */
}

def @func_3431(%var_3422: Tensor[(154), int16]) -> (Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %653 = @func_3065() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %654 = cast(%var_3422, dtype="int16") /* ty=Tensor[(154), int16] */;
  %655 = cast(meta[relay.Constant][31] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %656 = reshape(%654, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %657 = reshape(%655, newshape=[1, 2816]) /* ty=Tensor[(1, 2816), uint64] */;
  %658 = @func_2528(%656, %657) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32]) */;
  %659 = %653.0;
  %660 = %658.4;
  (%659, %660, %var_3422, meta[relay.Constant][31] /* ty=Tensor[(2816), uint64] */)
}

def @func_5834() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(2816), uint64]) {
  %669 = fn () -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(2816), uint64]) {
    %661 = @func_3065() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
    %662 = cast(meta[relay.Constant][32] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
    %663 = cast(meta[relay.Constant][33] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
    %664 = reshape(%662, newshape=[154]) /* ty=Tensor[(154), int16] */;
    %665 = reshape(%663, newshape=[1, 2816]) /* ty=Tensor[(1, 2816), uint64] */;
    %666 = @func_2528(%664, %665) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32]) */;
    %667 = %661.1;
    %668 = %666.0;
    (%667, %668, meta[relay.Constant][32] /* ty=Tensor[(154), int16] */, meta[relay.Constant][33] /* ty=Tensor[(2816), uint64] */)
  };
  %669() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(2816), uint64]) */
}

def @func_4918() -> Tensor[(14, 2, 8), float64] {
  @func_4916() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_2731() -> (Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) {
  @func_2729() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) */
}

def @func_630(%var_628: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), float32],) {
  @func_627(%var_628) /* ty=(Tensor[(14, 2, 8), float32],) */
}

def @func_1693(%var_1691: Tensor[(14, 2, 8), float64], %var_1692: Tensor[(2816), uint64]) -> (Tensor[(120), float32], Tensor[(154), int16], Tensor[(2816), float64], Tensor[(1408, 2), bool], Tensor[(14, 2, 8), bool]) {
  @func_1689(%var_1691, %var_1692) /* ty=(Tensor[(120), float32], Tensor[(154), int16], Tensor[(2816), float64], Tensor[(1408, 2), bool], Tensor[(14, 2, 8), bool]) */
}

def @func_1039() -> Tensor[(14, 2, 8), float64] {
  @func_1037() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_4396() -> Tensor[(14, 2, 8), int8] {
  %671 = fn () -> Tensor[(14, 2, 8), int8] {
    %670 = @func_1385() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8]) */;
    %670.1
  };
  %671() /* ty=Tensor[(14, 2, 8), int8] */
}

def @func_2920(%var_2918: Tensor[(7, 1, 6), float64], %var_2919: Tensor[(72, 1), float32]) -> (Tensor[(7, 1, 6), float64], Tensor[(9, 2, 4), bool], Tensor[(72, 1), float32], Tensor[(7, 1, 6), float64]) {
  @func_2916(%var_2918, %var_2919) /* ty=(Tensor[(7, 1, 6), float64], Tensor[(9, 2, 4), bool], Tensor[(72, 1), float32], Tensor[(7, 1, 6), float64]) */
}

def @func_5760() -> (Tensor[(14, 2, 8), float32],) {
  %678 = fn () -> (Tensor[(14, 2, 8), float32],) {
    %672 = @func_2092() /* ty=Tensor[(14, 2, 8), float64] */;
    %673 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 2, 8), float64] */, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
    %674 = shape_of(%672, dtype="int32") /* ty=Tensor[(3), int32] */;
    %675 = cast(%672, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
    %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %677 = power(%675, %676) /* ty=Tensor[(14, 2, 8), float32] */;
    (%677,)
  };
  %678() /* ty=(Tensor[(14, 2, 8), float32],) */
}

def @func_5970(%var_5965: Tensor[(1200), float64]) -> (Tensor[(14, 2, 8), float64], Tensor[(8, 10, 15), bool], Tensor[(1200), float64]) {
  %679 = @func_3000() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) */;
  %680 = cast(%var_5965, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %681 = reshape(%680, newshape=[8, 10, 15]) /* ty=Tensor[(8, 10, 15), float64] */;
  %682 = %679.0;
  %683 = @func_3993(%681) /* ty=Tensor[(8, 10, 15), bool] */;
  (%682, %683, %var_5965)
}

def @func_2316() -> Tensor[(14, 2, 8), bool] {
  @func_2314() /* ty=Tensor[(14, 2, 8), bool] */
}

def @func_4218(%var_4200: Tensor[(14, 5, 11), float32], %var_4207: Tensor[(4, 9, 13), float32]) -> (Tensor[(14, 5, 11), float32], Tensor[(4, 9, 13), bool]) {
  %684 = cast(5.72692f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %685 = cast(%var_4200, dtype="float32") /* ty=Tensor[(14, 5, 11), float32] */;
  %686 = cast(5.72692f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %687 = cast(%var_4207, dtype="bool") /* ty=Tensor[(4, 9, 13), bool] */;
  %688 = greater_equal(%686, %687) /* ty=Tensor[(4, 9, 13), bool] */;
  %689 = cast(%var_4207, dtype="bool") /* ty=Tensor[(4, 9, 13), bool] */;
  %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%688, dtype="bool") /* ty=Tensor[(4, 9, 13), bool] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %693 = floor_divide(%684, %685) /* ty=Tensor[(14, 5, 11), float32] */;
  %694 = logical_and(%691, %692) /* ty=Tensor[(4, 9, 13), bool] */;
  (%693, %694)
}

def @func_2729() -> (Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) {
  %695 = @func_813() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float32]) */;
  %696 = %695.0;
  %697 = @func_1431() /* ty=Tensor[(14, 2, 8), float64] */;
  %698 = @func_543() /* ty=Tensor[(14, 2, 8), float32] */;
  (%696, %697, %698)
}

def @func_5036() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(140), float64]) {
  @func_5034() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(140), float64]) */
}

def @func_469(%var_466: Tensor[(15, 1, 8), float32], %var_467: Tensor[(154), int16], %var_468: Tensor[(2816), uint64]) -> (Tensor[(2, 11, 7), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(15, ?, 8), bool]) {
  @func_464(%var_466, %var_467, %var_468) /* ty=(Tensor[(2, 11, 7), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(15, ?, 8), bool]) */
}

def @func_4541() -> (Tensor[(14, 2, 8), float64],) {
  %699 = @func_1196() /* ty=(Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), int8], Tensor[(224), float64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %700 = %699.3;
  (%700,)
}

def @func_3240(%var_3178: Tensor[(14, 2, 8), bool], %var_3190: Tensor[(2816), uint64], %var_3232: Tensor[(14, 2, 8), float32]) -> (Tensor[(224), float64], Tensor[(2816), float64], Tensor[(224), float64], Tensor[(14, 2, 8), float32]) {
  %701 = @func_937() /* ty=(Tensor[(224), float64],) */;
  %702 = %701.0;
  %703 = cast(%702, dtype="float64") /* ty=Tensor[(224), float64] */;
  %704 = cast(%var_3190, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
  %705 = reshape(%703, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %706 = reshape(%704, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %707 = @func_1689(%705, %706) /* ty=(Tensor[(120), float32], Tensor[(154), int16], Tensor[(2816), float64], Tensor[(1408, 2), bool], Tensor[(14, 2, 8), bool]) */;
  %708 = %707.2;
  %709 = cast(%var_3190, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %710 = shape_of(%708, dtype="int32") /* ty=Tensor[(1), int32] */;
  %711 = cast(%708, dtype="float64") /* ty=Tensor[(2816), float64] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?), float64] */;
  %713 = @func_2374() /* ty=(Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64]) */;
  %714 = %713.0;
  %715 = cast(%var_3178, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %716 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %717 = cast(%714, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %719 = subtract(%717, %718) /* ty=Tensor[(14, 2, 8), float32] */;
  %720 = cast(%719, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %721 = reshape(%720, newshape=[224]) /* ty=Tensor[(224), float64] */;
  %722 = @func_366(%721) /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), bool], Tensor[(224), float64]) */;
  %723 = cast(%var_3232, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %724 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %725 = cast(%719, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %727 = maximum(%711, %712) /* ty=Tensor[(2816), float64] */;
  %728 = %722.2;
  %729 = floor_divide(%725, %726) /* ty=Tensor[(14, 2, 8), float32] */;
  (%702, %727, %728, %729)
}

def @func_1726(%var_1724: Tensor[(9, 2, 4), float32]) -> Tensor[(9, 2, 4), bool] {
  @func_1723(%var_1724) /* ty=Tensor[(9, 2, 4), bool] */
}

def @func_3658() -> Tensor[(14, 2, 8), float64] {
  %731 = fn () -> Tensor[(14, 2, 8), float64] {
    %730 = @func_2342() /* ty=(Tensor[(14, 2, 8), float64],) */;
    %730.0
  };
  %731() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_4859(%var_4844: Tensor[(11, 11, 5), float64]) -> (Tensor[(11, 11, 5), float32],) {
  %732 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
  %733 = shape_of(%var_4844, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%var_4844, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %736 = floor_divide(%734, %735) /* ty=Tensor[(11, 11, 5), float64] */;
  %737 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 11, 5), float64] */, dtype="bool") /* ty=Tensor[(11, 11, 5), bool] */;
  %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(%736, dtype="bool") /* ty=Tensor[(11, 11, 5), bool] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %741 = less_equal(%739, %740) /* ty=Tensor[(11, 11, 5), bool] */;
  %742 = cast(%741, dtype="float32") /* ty=Tensor[(11, 11, 5), float32] */;
  %743 = sin(%742) /* ty=Tensor[(11, 11, 5), float32] */;
  (%743,)
}

def @func_3953() -> (Tensor[(14, 2, 8), float64],) {
  %746 = fn () -> (Tensor[(14, 2, 8), float64],) {
    %744 = @func_2741() /* ty=(Tensor[(14, 2, 8), float64],) */;
    %745 = %744.0;
    (%745,)
  };
  %746() /* ty=(Tensor[(14, 2, 8), float64],) */
}

def @func_2652() -> (Tensor[(14, 2, 8), float32],) {
  %749 = fn () -> (Tensor[(14, 2, 8), float32],) {
    %747 = @func_2592() /* ty=(Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float32]) */;
    %748 = %747.1;
    (%748,)
  };
  %749() /* ty=(Tensor[(14, 2, 8), float32],) */
}

def @func_5034() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(140), float64]) {
  %750 = cast(meta[relay.Constant][36] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %751 = reshape(%750, newshape=[4, 7, 5]) /* ty=Tensor[(4, 7, 5), float64] */;
  %752 = @func_2079(%751) /* ty=(Tensor[(4, 7, 5), float64], Tensor[(14, 2, 8), float64], Tensor[(4, 7, 5), bool], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(2, 11, 7), int16], Tensor[(4, 7, 5), float32]) */;
  %753 = @func_3144() /* ty=Tensor[(14, 2, 8), float64] */;
  %754 = %752.3;
  (%753, %754, meta[relay.Constant][36] /* ty=Tensor[(140), float64] */)
}

def @func_545() -> Tensor[(14, 2, 8), float32] {
  @func_543() /* ty=Tensor[(14, 2, 8), float32] */
}

def @func_4190(%var_4188: Tensor[(4, 15, 4), float32], %var_4189: Tensor[(4, 15, 4), float32]) -> (Tensor[(4, 15, 4), float32], Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float64]) {
  %764 = fn (%var_4165: Tensor[(4, 15, 4), float32], %var_4166: Tensor[(4, 15, 4), float32]) -> (Tensor[(4, 15, 4), float32], Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float64]) {
    %755 = cast(%var_4166, dtype="float32") /* ty=Tensor[(4, 15, 4), float32] */;
    %756 = shape_of(%var_4165, dtype="int32") /* ty=Tensor[(3), int32] */;
    %757 = cast(%var_4165, dtype="float32") /* ty=Tensor[(4, 15, 4), float32] */;
    %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %759 = @func_2592() /* ty=(Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float32]) */;
    %760 = @func_3065() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
    %761 = floor_divide(%757, %758) /* ty=Tensor[(4, 15, 4), float32] */;
    %762 = %759.0;
    %763 = %760.0;
    (%761, %762, %763)
  };
  %764(%var_4188, %var_4189) /* ty=(Tensor[(4, 15, 4), float32], Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float64]) */
}

def @func_1817() -> (Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16]) {
  %769 = fn () -> (Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16]) {
    %765 = @func_918() /* ty=Tensor[(14, 2, 8), float64] */;
    %766 = cast(%765, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
    %767 = acos(%766) /* ty=Tensor[(14, 2, 8), float64] */;
    %768 = @func_657() /* ty=Tensor[(2, 11, 7), int16] */;
    (%767, %768)
  };
  %769() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16]) */
}

def @func_1085() -> (Tensor[(14, 2, 8), float64],) {
  %770 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
  %771 = %770.0;
  (%771,)
}

def @func_4631() -> (Tensor[(2, 11, 7), int16],) {
  @func_4629() /* ty=(Tensor[(2, 11, 7), int16],) */
}

def @func_4528() -> (Tensor[(224), float64], Tensor[(14, 2, 8), float32], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), bool]) {
  %780 = fn () -> (Tensor[(224), float64], Tensor[(14, 2, 8), float32], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), bool]) {
    %772 = @func_2241() /* ty=Tensor[(224), float64] */;
    %773 = cast(%772, dtype="float64") /* ty=Tensor[(224), float64] */;
    %774 = reshape(%773, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
    %775 = @func_201(%774) /* ty=(Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float32]) */;
    %776 = @func_3457() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float32]) */;
    %777 = %775.1;
    %778 = %776.0;
    %779 = @func_2314() /* ty=Tensor[(14, 2, 8), bool] */;
    (%772, %777, %778, %779)
  };
  %780() /* ty=(Tensor[(224), float64], Tensor[(14, 2, 8), float32], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), bool]) */
}

def @func_4968() -> Tensor[(14, 2, 8), float64] {
  @func_4966() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_2256(%var_2254: Tensor[(14, 1, 14), float64]) -> (Tensor[(14, 1, 14), float64],) {
  @func_2253(%var_2254) /* ty=(Tensor[(14, 1, 14), float64],) */
}

def @func_3434(%var_3432: Tensor[(154), int16]) -> (Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32], Tensor[(154), int16], Tensor[(2816), uint64]) {
  @func_3431(%var_3432) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32], Tensor[(154), int16], Tensor[(2816), uint64]) */
}

def @func_5973(%var_5971: Tensor[(1200), float64]) -> (Tensor[(14, 2, 8), float64], Tensor[(8, 10, 15), bool], Tensor[(1200), float64]) {
  @func_5970(%var_5971) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(8, 10, 15), bool], Tensor[(1200), float64]) */
}

def @func_3367(%var_3365: Tensor[(6, 7), int32]) -> (Tensor[(6, 7), int32],) {
  @func_3364(%var_3365) /* ty=(Tensor[(6, 7), int32],) */
}

def @func_4982() -> Tensor[(14, 2, 8), float64] {
  %782 = fn () -> Tensor[(14, 2, 8), float64] {
    %781 = @func_1385() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8]) */;
    %781.0
  };
  %782() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_4621(%var_4619: Tensor[(154), int16], %var_4620: Tensor[(2816), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(4, 60), float32], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(2816), uint64], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(2816), uint64]) {
  %809 = fn (%var_4591: Tensor[(154), int16], %var_4592: Tensor[(2816), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(4, 60), float32], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(2816), uint64], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(2816), uint64]) {
    %783 = @func_918() /* ty=Tensor[(14, 2, 8), float64] */;
    %784 = cast(%783, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
    %785 = asin(%784) /* ty=Tensor[(14, 2, 8), float64] */;
    %786 = cast(%785, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
    %787 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 60), float32] */, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
    %788 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 60), float32] */, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
    %789 = reshape(%787, newshape=[4, 15, 4]) /* ty=Tensor[(4, 15, 4), float32] */;
    %790 = reshape(%788, newshape=[4, 15, 4]) /* ty=Tensor[(4, 15, 4), float32] */;
    %791 = @func_4187(%789, %790) /* ty=(Tensor[(4, 15, 4), float32], Tensor[(2, 11, 7), int16], Tensor[(14, 2, 8), float64]) */;
    %792 = cast(%785, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
    %793 = reshape(%792, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
    %794 = @func_264(%793) /* ty=(Tensor[(14, 2, 8), int8],) */;
    %795 = cast(%var_4591, dtype="int16") /* ty=Tensor[(154), int16] */;
    %796 = cast(%var_4592, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
    %797 = reshape(%795, newshape=[154]) /* ty=Tensor[(154), int16] */;
    %798 = reshape(%796, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
    %799 = @func_1112(%797, %798) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(60, 2), float32], Tensor[(154), int16], Tensor[(2816), uint64]) */;
    %800 = cast(%785, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
    %801 = reshape(%800, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
    %802 = @func_3109(%801) /* ty=(Tensor[(14, 2, 8), float32], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64]) */;
    %803 = sin(%786) /* ty=Tensor[(14, 2, 8), float64] */;
    %804 = %791.2;
    %805 = @func_2205() /* ty=Tensor[(14, 2, 8), float64] */;
    %806 = %794.0;
    %807 = %799.4;
    %808 = %802.3;
    (%803, %804, meta[relay.Constant][37] /* ty=Tensor[(4, 60), float32] */, %805, %806, %807, %var_4591, %var_4592, %808)
  };
  %809(%var_4619, %var_4620) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64], Tensor[(4, 60), float32], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(2816), uint64], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(2816), uint64]) */
}

def @func_4996(%var_4994: Tensor[(11, 12, 12), float32]) -> (Tensor[(11, 12, 12), float32],) {
  @func_4993(%var_4994) /* ty=(Tensor[(11, 12, 12), float32],) */
}

def @func_5911() -> Tensor[(2816), uint64] {
  %811 = fn () -> Tensor[(2816), uint64] {
    %810 = @func_5428() /* ty=(Tensor[(14, 2, 8), uint32], Tensor[(2816), uint64], Tensor[(154), int16], Tensor[(2816), uint64]) */;
    %810.3
  };
  %811() /* ty=Tensor[(2816), uint64] */
}

def @func_2528(%var_2487: Tensor[(154), int16], %var_2488: Tensor[(1, 2816), uint64]) -> (Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(1, 2816), float32]) {
  %812 = @func_1816() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16]) */;
  %813 = cast(%var_2487, dtype="int16") /* ty=Tensor[(154), int16] */;
  %814 = cast(%var_2488, dtype="uint64") /* ty=Tensor[(1, 2816), uint64] */;
  %815 = reshape(%813, newshape=[154]) /* ty=Tensor[(154), int16] */;
  %816 = reshape(%814, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
  %817 = @func_2154(%815, %816) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), float64]) */;
  %818 = cast(%var_2488, dtype="float32") /* ty=Tensor[(1, 2816), float32] */;
  %819 = sinh(%818) /* ty=Tensor[(1, 2816), float32] */;
  %820 = cast(%819, dtype="float32") /* ty=Tensor[(1, 2816), float32] */;
  %821 = %812.0;
  %822 = %817.1;
  %823 = @func_561() /* ty=Tensor[(14, 2, 8), float64] */;
  %824 = sqrt(%820) /* ty=Tensor[(1, 2816), float32] */;
  (%821, %822, %var_2487, %823, %824)
}

def @func_2769() -> (Tensor[(14, 2, 8), float64],) {
  %825 = @func_1431() /* ty=Tensor[(14, 2, 8), float64] */;
  (%825,)
}

def @func_4301() -> Tensor[(14, 2, 8), float64] {
  %826 = fn () -> Tensor[(14, 2, 8), float64] {
    @func_1431() /* ty=Tensor[(14, 2, 8), float64] */
  };
  %826() /* ty=Tensor[(14, 2, 8), float64] */
}

def @func_1385() -> (Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8]) {
  %827 = @func_721() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), int16]) */;
  %828 = %827.4;
  %829 = cast(%828, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
  %830 = reshape(%829, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
  %831 = @func_264(%830) /* ty=(Tensor[(14, 2, 8), int8],) */;
  %832 = %831.0;
  (%828, %832)
}

def @func_722() -> (Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), int16]) {
  %849 = fn () -> (Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), int16]) {
    %833 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
    %834 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
    %835 = %834.0;
    %836 = cast(%835, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
    %837 = reshape(%836, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
    %838 = @func_264(%837) /* ty=(Tensor[(14, 2, 8), int8],) */;
    %839 = cast(%835, dtype="float64") /* ty=Tensor[(14, 2, 8), float64] */;
    %840 = reshape(%839, newshape=[14, 2, 8]) /* ty=Tensor[(14, 2, 8), float64] */;
    %841 = @func_201(%840) /* ty=(Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float32]) */;
    %842 = @func_479() /* ty=(Tensor[(14, 2, 8), float64],) */;
    %843 = %833.2;
    %844 = %838.0;
    %845 = %841.0;
    %846 = %842.0;
    %847 = @func_657() /* ty=Tensor[(2, 11, 7), int16] */;
    %848 = @func_657() /* ty=Tensor[(2, 11, 7), int16] */;
    (%843, %835, %844, %845, %846, %847, %848)
  };
  %849() /* ty=(Tensor[(154), int16], Tensor[(14, 2, 8), float64], Tensor[(14, 2, 8), int8], Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), int16]) */
}

def @func_6397(%var_6394: uint64, %var_6395: Tensor[(154), int16], %var_6396: Tensor[(2816), uint64]) -> (Tensor[(14, 13, 13), uint64], Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(560), bool], Tensor[(14, 13, 13), float64], Tensor[(14, 2, 8), float64], Tensor[(154), int16]) {
  %872 = fn (%var_6367: uint64, %var_6374: Tensor[(154), int16], %var_6375: Tensor[(2816), uint64]) -> (Tensor[(14, 13, 13), uint64], Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(560), bool], Tensor[(14, 13, 13), float64], Tensor[(14, 2, 8), float64], Tensor[(154), int16]) {
    %850 = cast(%var_6367, dtype="uint64") /* ty=uint64 */;
    %851 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 13, 13), uint64] */, dtype="uint64") /* ty=Tensor[(14, 13, 13), uint64] */;
    %852 = cast(%var_6374, dtype="int16") /* ty=Tensor[(154), int16] */;
    %853 = cast(%var_6375, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
    %854 = cast(meta[relay.Constant][39] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
    %855 = cast(%var_6375, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
    %856 = reshape(%852, newshape=[154]) /* ty=Tensor[(154), int16] */;
    %857 = reshape(%853, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
    %858 = reshape(%854, newshape=[560]) /* ty=Tensor[(560), bool] */;
    %859 = reshape(%855, newshape=[2816]) /* ty=Tensor[(2816), uint64] */;
    %860 = @func_6044(%856, %857, %858, %859) /* ty=(Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(154), float32], Tensor[(14, 2, 8), float32], Tensor[(560), bool], Tensor[(2816), bool]) */;
    %861 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 13, 13), uint64] */, dtype="float64") /* ty=Tensor[(14, 13, 13), float64] */;
    %862 = cast(%var_6374, dtype="int16") /* ty=Tensor[(154), int16] */;
    %863 = cast(%var_6375, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
    %864 = reshape(%862, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
    %865 = reshape(%863, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), uint64] */;
    %866 = @func_128(%864, %865) /* ty=(Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), bool]) */;
    %867 = bitwise_and(%850, %851) /* ty=Tensor[(14, 13, 13), uint64] */;
    %868 = %860.0;
    %869 = acosh(%861) /* ty=Tensor[(14, 13, 13), float64] */;
    %870 = @func_4966() /* ty=Tensor[(14, 2, 8), float64] */;
    %871 = %866.0;
    (%867, %868, %var_6374, %var_6375, meta[relay.Constant][39] /* ty=Tensor[(560), bool] */, %869, %870, %871)
  };
  %872(%var_6394, %var_6395, %var_6396) /* ty=(Tensor[(14, 13, 13), uint64], Tensor[(14, 2, 8), float64], Tensor[(154), int16], Tensor[(2816), uint64], Tensor[(560), bool], Tensor[(14, 13, 13), float64], Tensor[(14, 2, 8), float64], Tensor[(154), int16]) */
}

def @func_3875(%var_3873: uint32) -> (Tensor[(16, 10, 7), uint32], Tensor[(224), float64], Tensor[(14, 2, 8), float32], Tensor[(14, 2, 8), float64]) {
  @func_3872(%var_3873) /* ty=(Tensor[(16, 10, 7), uint32], Tensor[(224), float64], Tensor[(14, 2, 8), float32], Tensor[(14, 2, 8), float64]) */
}

def @func_5894() -> (Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), int8]) {
  %882 = fn () -> (Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), int8]) {
    %873 = @func_3617() /* ty=Tensor[(154), int16] */;
    %874 = cast(%873, dtype="int16") /* ty=Tensor[(154), int16] */;
    %875 = cast(meta[relay.Constant][40] /* ty=Tensor[(2816), uint64] */, dtype="uint64") /* ty=Tensor[(2816), uint64] */;
    %876 = reshape(%874, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int16] */;
    %877 = reshape(%875, newshape=[16, 16, 11]) /* ty=Tensor[(16, 16, 11), uint64] */;
    %878 = @func_128(%876, %877) /* ty=(Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(16, 16, 11), uint64], Tensor[(2, 11, 7), int16], Tensor[(2, 11, 7), bool]) */;
    %879 = @func_5115() /* ty=(Tensor[(14, 2, 8), int8],) */;
    %880 = %878.1;
    %881 = %879.0;
    (%873, %880, meta[relay.Constant][40] /* ty=Tensor[(2816), uint64] */, %881)
  };
  %882() /* ty=(Tensor[(154), int16], Tensor[(2, 11, 7), int16], Tensor[(2816), uint64], Tensor[(14, 2, 8), int8]) */
}

def @func_203(%var_202: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float32]) {
  %892 = fn (%var_179: Tensor[(14, 2, 8), float64]) -> (Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float32]) {
    %883 = @func_171() /* ty=(Tensor[(14, 2, 8), float64], Tensor[(2, 11, 7), int16], Tensor[(154), int16]) */;
    %884 = %883.0;
    %885 = cast(%var_179, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
    %886 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
    %887 = cast(%884, dtype="bool") /* ty=Tensor[(14, 2, 8), bool] */;
    %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %889 = cast(%var_179, dtype="float32") /* ty=Tensor[(14, 2, 8), float32] */;
    %890 = less_equal(%887, %888) /* ty=Tensor[(14, 2, 8), bool] */;
    %891 = log10(%889) /* ty=Tensor[(14, 2, 8), float32] */;
    (%890, %891)
  };
  %892(%var_202) /* ty=(Tensor[(14, 2, 8), bool], Tensor[(14, 2, 8), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen3/build/output.py:2484: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen3/build/output.py", line 2489, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(240) tvmgen_default_fused_erf_exp_kernel0(float* __restrict__ T_exp, float* __restrict__ placeholder) {
  T_exp[(((int)threadIdx.x))] = __expf(erff(placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


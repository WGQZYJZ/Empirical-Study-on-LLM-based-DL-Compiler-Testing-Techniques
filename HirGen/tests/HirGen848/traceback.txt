==========mod==========
#[version = "0.0.5"]
def @func_3577() -> Tensor[(3, 6, 5), float64] {
  %0 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %0.0
}

def @func_10683() -> Tensor[(3, 6, 5), float64] {
  %1 = @func_9855() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %1.0
}

def @func_9393(%var_9363: Tensor[(3, 14, 12), int64], %var_9364: Tensor[(3, 14, 12), int64]) -> (Tensor[(3, 14, 12), bool], Tensor[(2, 1040), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %2 = cast(%var_9364, dtype="bool") /* ty=Tensor[(3, 14, 12), bool] */;
  %3 = shape_of(%var_9363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%var_9363, dtype="bool") /* ty=Tensor[(3, 14, 12), bool] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %6 = @func_8602() /* ty=(Tensor[(2, 1040), bool], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32]) */;
  %7 = @func_7764() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %8 = less_equal(%4, %5) /* ty=Tensor[(3, 14, 12), bool] */;
  %9 = %6.0;
  %10 = %7.0;
  %11 = @func_9156() /* ty=Tensor[(3, 6, 5), float64] */;
  (%8, %9, %10, %11)
}

def @func_5161() -> Tensor[(3, 6, 5), float64] {
  %12 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %12.0
}

def @func_3836(%var_3831: Tensor[(3, 6, 5), float64]) -> Tensor[(3, 6, 5), bool] {
  %13 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %14 = %13.0;
  %15 = cast(%var_3831, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
  %16 = shape_of(%14, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%14, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%17, %18) /* ty=Tensor[(3, 6, 5), bool] */
}

def @func_4287() -> (Tensor[(3, 6, 5), float64], Tensor[(15, 15, 14), float32], Tensor[(2080), int64], Tensor[(3, 6, 5), float64]) {
  %19 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %20 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 15, 14), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 14), float64] */;
  %21 = cos(%20) /* ty=Tensor[(15, 15, 14), float64] */;
  %22 = cast(%21, dtype="float32") /* ty=Tensor[(15, 15, 14), float32] */;
  %23 = @func_3182() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */;
  %24 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %25 = %19.0;
  %26 = sinh(%22) /* ty=Tensor[(15, 15, 14), float32] */;
  %27 = %23.2;
  %28 = %24.0;
  (%25, %26, %27, %28)
}

def @func_9275() -> (Tensor[(3, 6, 5), float64],) {
  %29 = @func_7507() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8]) */;
  %30 = %29.1;
  (%30,)
}

def @func_3276(%var_3264: Tensor[(2080), int64]) -> (Tensor[(2080), bool],) {
  %31 = @func_3182() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */;
  %32 = %31.2;
  %33 = cast(%var_3264, dtype="bool") /* ty=Tensor[(2080), bool] */;
  %34 = shape_of(%32, dtype="int32") /* ty=Tensor[(1), int32] */;
  %35 = cast(%32, dtype="bool") /* ty=Tensor[(2080), bool] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?), bool] */;
  %37 = greater(%35, %36) /* ty=Tensor[(2080), bool] */;
  (%37,)
}

def @func_5597() -> (Tensor[(792), int64], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
  %38 = @func_4789() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) */;
  %39 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
  %40 = @func_4570() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %41 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
  %42 = %38.1;
  %43 = %39.2;
  %44 = %40.4;
  %45 = %41.2;
  %46 = @func_2735() /* ty=Tensor[(3, 6, 5), float64] */;
  (%42, %43, %44, %45, %46)
}

def @func_4192() -> Tensor[(3, 6, 5), float64] {
  %47 = @func_4175() /* ty=(Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %47.2
}

def @func_2976() -> Tensor[(5, 9, 7), float64] {
  %48 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 9, 7), float64] */, dtype="float64") /* ty=Tensor[(5, 9, 7), float64] */;
  %49 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(5, 9, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %50 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 9, 7), float64] */, dtype="float64") /* ty=Tensor[(5, 9, 7), float64] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %52 = divide(%50, %51) /* ty=Tensor[(5, 9, 7), float64] */;
  %53 = cast(%52, dtype="float64") /* ty=Tensor[(5, 9, 7), float64] */;
  atanh(%53) /* ty=Tensor[(5, 9, 7), float64] */
}

def @func_8832() -> Tensor[(3, 6, 5), bool] {
  %54 = @func_7651() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float64]) */;
  %54.1
}

def @func_15244() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %55 = @func_12493() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %56 = @func_7310() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %57 = %55.1;
  %58 = %56.1;
  (%57, %58)
}

def @func_4570() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) {
  %59 = @func_4075() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) */;
  %60 = %59.0;
  %61 = cast(%60, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
  %62 = @func_2699() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %63 = cast(meta[relay.Constant][3] /* ty=Tensor[(792), int64] */, dtype="int64") /* ty=Tensor[(792), int64] */;
  %64 = reshape(%63, newshape=[11, 8, 9]) /* ty=Tensor[(11, 8, 9), int64] */;
  %65 = @func_4075() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) */;
  %66 = @func_4364() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %67 = sqrt(%61) /* ty=Tensor[(3, 6, 5), float32] */;
  %68 = %62.0;
  %69 = @func_1663(%64) /* ty=Tensor[(11, 8, 9), uint8] */;
  %70 = %65.1;
  %71 = %66.0;
  (%67, %68, %69, meta[relay.Constant][3] /* ty=Tensor[(792), int64] */, %70, %71)
}

def @func_7310() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %72 = @func_5931() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %73 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
  %74 = %72.0;
  %75 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  %76 = %73.0;
  (%74, %75, %76)
}

def @func_5931() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %77 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %78 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  %79 = %77.0;
  (%78, %79)
}

def @func_4627() -> (Tensor[(792), int64], Tensor[(792), int64]) {
  %80 = @func_4227() /* ty=(Tensor[(792), int64],) */;
  %81 = @func_2860() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %82 = %80.0;
  %83 = %81.0;
  (%82, %83)
}

def @func_10833(%var_10755: Tensor[(2, 1040), bool]) -> (Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(2080), int64], Tensor[(448), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), int16], Tensor[(3, 6, 5), float64]) {
  %84 = @func_8602() /* ty=(Tensor[(2, 1040), bool], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32]) */;
  %85 = %84.0;
  %86 = cast(%var_10755, dtype="float64") /* ty=Tensor[(2, 1040), float64] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(2), int32] */;
  %88 = cast(%85, dtype="float64") /* ty=Tensor[(2, 1040), float64] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %90 = cast(meta[relay.Constant][4] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %91 = mod(%88, %89) /* ty=Tensor[(2, 1040), float64] */;
  %92 = cast(%91, dtype="int64") /* ty=Tensor[(2, 1040), int64] */;
  %93 = reshape(%90, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %94 = reshape(%92, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %95 = @func_9670(%93, %94) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(448), float64], Tensor[(2080), int64]) */;
  %96 = @func_8515() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %97 = @func_2735() /* ty=Tensor[(3, 6, 5), float64] */;
  %98 = cast(%97, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %99 = reshape(%98, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
  %100 = @func_4972(%99) /* ty=(Tensor[(3, 6, 5), int16],) */;
  %101 = cast(%var_10755, dtype="int64") /* ty=Tensor[(2, 1040), int64] */;
  %102 = reshape(%101, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %103 = @func_6082(%102) /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64], Tensor[(792), int64]) */;
  %104 = %95.3;
  %105 = %96.0;
  %106 = %100.0;
  %107 = %103.4;
  (%97, %91, %104, meta[relay.Constant][4] /* ty=Tensor[(448), float64] */, %105, %106, %107)
}

def @func_9360() -> (Tensor[(2080), int64],) {
  %108 = @func_3182() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */;
  %109 = %108.2;
  (%109,)
}

def @func_10014() -> Tensor[(3, 6, 5), float32] {
  %110 = @func_5252() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) */;
  %110.1
}

def @func_9464() -> (Tensor[(3, 6, 5), float32],) {
  %111 = @func_2735() /* ty=Tensor[(3, 6, 5), float64] */;
  %112 = cast(%111, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
  %113 = erf(%112) /* ty=Tensor[(3, 6, 5), float32] */;
  (%113,)
}

def @func_5636() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %114 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %115 = %114.0;
  %116 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  (%115, %116)
}

def @func_4972(%var_4946: Tensor[(3, 6, 5), float64]) -> (Tensor[(3, 6, 5), int16],) {
  %117 = @func_4364() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %118 = %117.0;
  %119 = cast(%var_4946, dtype="int16") /* ty=Tensor[(3, 6, 5), int16] */;
  %120 = shape_of(%118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %121 = cast(%118, dtype="int16") /* ty=Tensor[(3, 6, 5), int16] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %123 = multiply(%121, %122) /* ty=Tensor[(3, 6, 5), int16] */;
  (%123,)
}

def @func_7573() -> (Tensor[(3, 6, 5), float32],) {
  %124 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %125 = %124.0;
  (%125,)
}

def @func_14998() -> (Tensor[(3, 6, 5), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(3, 6, 5), float64]) {
  %126 = @func_4012() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %127 = cast(meta[relay.Constant][5] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %128 = reshape(%127, newshape=[7, 1, 12]) /* ty=Tensor[(7, 1, 12), float32] */;
  %129 = @func_5529() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(5, 12, 7), float32], Tensor[(420), float32]) */;
  %130 = %126.0;
  %131 = @func_13062(%128) /* ty=Tensor[(7, 1, 12), float32] */;
  %132 = %129.0;
  (%130, %131, meta[relay.Constant][5] /* ty=Tensor[(84), float32] */, %132)
}

def @func_12740() -> (Tensor[(420), float32],) {
  %133 = @func_11547() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(420), float32], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %134 = %133.4;
  (%134,)
}

def @func_13715() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32]) {
  %135 = @func_10217() /* ty=(Tensor[(420), float32], Tensor[(3, 6, 5), float32], Tensor[(792), int64]) */;
  %136 = @func_10014() /* ty=Tensor[(3, 6, 5), float32] */;
  %137 = %135.1;
  (%136, %137)
}

def @func_7672() -> Tensor[(3, 6, 5), float64] {
  %138 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %138.0
}

def @func_9885() -> (Tensor[(3, 6, 5), float64],) {
  %139 = @func_4192() /* ty=Tensor[(3, 6, 5), float64] */;
  (%139,)
}

def @func_10630() -> (Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64]) {
  %140 = @func_2860() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %141 = @func_7507() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8]) */;
  %142 = @func_4075() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) */;
  %143 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %144 = @func_3595() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(2, 1040), int64]) */;
  %145 = %144.2;
  %146 = cast(%145, dtype="float64") /* ty=Tensor[(2, 1040), float64] */;
  %147 = %140.1;
  %148 = %141.5;
  %149 = %142.0;
  %150 = %143.0;
  %151 = tan(%146) /* ty=Tensor[(2, 1040), float64] */;
  (%147, %148, %149, %150, %151)
}

def @func_14592() -> (Tensor[(3, 6, 5), bool], Tensor[(5, 9, 7), float64], Tensor[(420), float32]) {
  %152 = @func_10544() /* ty=(Tensor[(15, 15, 14), float32], Tensor[(5, 9, 7), float64]) */;
  %153 = @func_5529() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(5, 12, 7), float32], Tensor[(420), float32]) */;
  %154 = @func_8832() /* ty=Tensor[(3, 6, 5), bool] */;
  %155 = %152.1;
  %156 = %153.2;
  (%154, %155, %156)
}

def @func_8007() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %157 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %158 = @func_5771() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %159 = %157.1;
  %160 = %158.0;
  (%159, %160)
}

def @func_8777() -> (Tensor[(3, 6, 5), float64],) {
  %161 = @func_7742() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %162 = %161.1;
  (%162,)
}

def @func_10966() -> (Tensor[(5, 234), bool], Tensor[(1040, 2), float64]) {
  %163 = @func_7173() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(5, 234), bool]) */;
  %164 = @func_4695() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(1040, 2), int64]) */;
  %165 = %164.3;
  %166 = cast(%165, dtype="float64") /* ty=Tensor[(1040, 2), float64] */;
  %167 = %163.3;
  %168 = sqrt(%166) /* ty=Tensor[(1040, 2), float64] */;
  (%167, %168)
}

def @func_7434() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
  %169 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
  %170 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %171 = %169.2;
  %172 = %170.0;
  (%171, %172)
}

def @func_15369(%var_15344: Tensor[(2, 6, 1), float64]) -> (Tensor[(2, 6, 1), float64], Tensor[(5, 234), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %173 = cast(%var_15344, dtype="float64") /* ty=Tensor[(2, 6, 1), float64] */;
  %174 = @func_10966() /* ty=(Tensor[(5, 234), bool], Tensor[(1040, 2), float64]) */;
  %175 = @func_13019() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %176 = @func_7507() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8]) */;
  %177 = sin(%173) /* ty=Tensor[(2, 6, 1), float64] */;
  %178 = %174.0;
  %179 = %175.0;
  %180 = %176.1;
  (%177, %178, %179, %180)
}

def @func_7092() -> (Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  %181 = @func_2699() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %182 = @func_3863() /* ty=(Tensor[(792), int64],) */;
  %183 = %181.0;
  %184 = %182.0;
  (%183, %184)
}

def @func_4227() -> (Tensor[(792), int64],) {
  %185 = @func_2354() /* ty=Tensor[(792), int64] */;
  (%185,)
}

def @func_12995() -> Tensor[(3, 6, 5), float64] {
  @func_10683() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_7712(%var_7707: Tensor[(4, 9, 8), uint64], %var_7708: Tensor[(4, 9, 8), uint64]) -> Tensor[(4, 9, 8), bool] {
  %186 = cast(%var_7708, dtype="bool") /* ty=Tensor[(4, 9, 8), bool] */;
  %187 = shape_of(%var_7707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%var_7707, dtype="bool") /* ty=Tensor[(4, 9, 8), bool] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%188, %189) /* ty=Tensor[(4, 9, 8), bool] */
}

def @func_9351() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %190 = @func_5705() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %191 = %190.1;
  %192 = @func_8450() /* ty=Tensor[(3, 6, 5), float64] */;
  (%191, %192)
}

def @func_2330() -> (Tensor[(3, 6, 5), float64],) {
  %193 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %194 = %193.0;
  (%194,)
}

def @func_12493() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %195 = @func_11811() /* ty=Tensor[(3, 6, 5), float64] */;
  %196 = @func_11811() /* ty=Tensor[(3, 6, 5), float64] */;
  (%195, %196)
}

def @func_16115() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %197 = @func_8777() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %198 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %199 = %197.0;
  %200 = @func_14452() /* ty=Tensor[(3, 6, 5), float64] */;
  %201 = %198.0;
  (%199, %200, %201)
}

def @func_11767() -> (Tensor[(3, 6, 5), float32],) {
  %202 = @func_9464() /* ty=(Tensor[(3, 6, 5), float32],) */;
  %203 = %202.0;
  (%203,)
}

def @func_3134(%var_3113: Tensor[(3, 6, 5), float64], %var_3119: Tensor[(2080, 1), int64]) -> (Tensor[(3, 6, 5), bool], Tensor[(13, 10, 16), int64], Tensor[(2080, 1), int64], Tensor[(2080), int64]) {
  %204 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  %205 = cast(%var_3113, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
  %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%204, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %209 = cast(%var_3119, dtype="int64") /* ty=Tensor[(2080, 1), int64] */;
  %210 = reshape(%209, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %211 = @func_642(%210) /* ty=(Tensor[(10, 5, 9), float64], Tensor[(770), uint64], Tensor[(13, 10, 16), int16], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64]) */;
  %212 = @func_2876() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) */;
  %213 = not_equal(%207, %208) /* ty=Tensor[(3, 6, 5), bool] */;
  %214 = %211.4;
  %215 = %212.2;
  (%213, %214, %var_3119, %215)
}

def @func_15791(%var_15769: Tensor[(2080), int64], %var_15780: Tensor[(5, 4), float64]) -> (Tensor[(6, 16, 5), int8], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(1, 10, 2), float64], Tensor[(5, 4), float64], Tensor[(3, 6, 5), int16]) {
  %216 = cast(%var_15769, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %217 = reshape(%216, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %218 = @func_8989(%217) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float32]) */;
  %219 = cast(%var_15780, dtype="float64") /* ty=Tensor[(5, 4), float64] */;
  %220 = reshape(%219, newshape=[1, 10, 2]) /* ty=Tensor[(1, 10, 2), float64] */;
  %221 = @func_7871(%220) /* ty=(Tensor[(1, 10, 2), float64],) */;
  %222 = @func_3015() /* ty=Tensor[(6, 16, 5), int8] */;
  %223 = %218.3;
  %224 = %221.0;
  %225 = @func_12354() /* ty=Tensor[(3, 6, 5), int16] */;
  (%222, %223, %var_15769, %224, %var_15780, %225)
}

def @func_5705() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  %226 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %227 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %228 = @func_4227() /* ty=(Tensor[(792), int64],) */;
  %229 = %226.0;
  %230 = %227.0;
  %231 = %228.0;
  (%229, %230, %231)
}

def @func_2876() -> (Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) {
  %232 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %233 = cast(meta[relay.Constant][6] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %234 = reshape(%233, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %235 = @func_642(%234) /* ty=(Tensor[(10, 5, 9), float64], Tensor[(770), uint64], Tensor[(13, 10, 16), int16], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64]) */;
  %236 = %232.0;
  %237 = %235.3;
  (%236, %237, meta[relay.Constant][6] /* ty=Tensor[(2080), int64] */)
}

def @func_13623() -> Tensor[(792), int64] {
  %238 = @func_4227() /* ty=(Tensor[(792), int64],) */;
  %238.0
}

def @func_8431() -> (Tensor[(3, 6, 5), float64],) {
  %239 = @func_7138() /* ty=Tensor[(3, 6, 5), float64] */;
  (%239,)
}

def @func_2699() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %240 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %241 = %240.0;
  %242 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  (%241, %242)
}

def @func_10527() -> (Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %243 = @func_7203() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) */;
  %244 = @func_9885() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %245 = @func_7434() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %246 = %243.2;
  %247 = %244.0;
  %248 = %245.1;
  (%246, %247, %248)
}

def @func_13062(%var_13059: Tensor[(7, 1, 12), float32]) -> Tensor[(7, 1, 12), float32] {
  %249 = cast(%var_13059, dtype="float32") /* ty=Tensor[(7, 1, 12), float32] */;
  atanh(%249) /* ty=Tensor[(7, 1, 12), float32] */
}

def @func_13201() -> (Tensor[(3, 6, 5), float64],) {
  %250 = @func_5636() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %251 = %250.0;
  (%251,)
}

def @func_6082(%var_6066: Tensor[(2080), int64]) -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64], Tensor[(792), int64]) {
  %252 = @func_5771() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %253 = @func_2735() /* ty=Tensor[(3, 6, 5), float64] */;
  %254 = cast(%253, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %255 = reshape(%254, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
  %256 = @func_3430(%255) /* ty=(Tensor[(3, 6, 5), bool],) */;
  %257 = @func_4012() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %258 = cast(%var_6066, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %259 = reshape(%258, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %260 = @func_3276(%259) /* ty=(Tensor[(2080), bool],) */;
  %261 = @func_4227() /* ty=(Tensor[(792), int64],) */;
  %262 = @func_5043() /* ty=Tensor[(792), int64] */;
  %263 = %252.1;
  %264 = %256.0;
  %265 = %257.0;
  %266 = %260.0;
  %267 = %261.0;
  (%262, %263, %253, %264, %265, %266, %var_6066, %267)
}

def @func_6117() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) {
  %268 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %269 = @func_5038() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(6, 16, 5), int8]) */;
  %270 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  %271 = %268.0;
  %272 = %269.2;
  (%270, %271, %272)
}

def @func_2685() -> Tensor[(6, 16, 5), int8] {
  %273 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 16, 5), float32] */, dtype="float32") /* ty=Tensor[(6, 16, 5), float32] */;
  %274 = tan(%273) /* ty=Tensor[(6, 16, 5), float32] */;
  %275 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 16, 5), float32] */, dtype="int8") /* ty=Tensor[(6, 16, 5), int8] */;
  %276 = shape_of(%274, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%274, dtype="int8") /* ty=Tensor[(6, 16, 5), int8] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%277, %278) /* ty=Tensor[(6, 16, 5), int8] */
}

def @func_6356() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
  %279 = cast(meta[relay.Constant][8] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %280 = reshape(%279, newshape=[6, 16, 5]) /* ty=Tensor[(6, 16, 5), int8] */;
  %281 = @func_4214(%280) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int32]) */;
  %282 = @func_5043() /* ty=Tensor[(792), int64] */;
  %283 = %281.0;
  %284 = @func_2354() /* ty=Tensor[(792), int64] */;
  %285 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  (%282, %283, meta[relay.Constant][8] /* ty=Tensor[(480), int8] */, %284, %285)
}

def @func_10217() -> (Tensor[(420), float32], Tensor[(3, 6, 5), float32], Tensor[(792), int64]) {
  %286 = @func_9252() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(70, 6), float32], Tensor[(420), float32]) */;
  %287 = @func_9464() /* ty=(Tensor[(3, 6, 5), float32],) */;
  %288 = @func_7092() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %289 = %286.5;
  %290 = %287.0;
  %291 = %288.1;
  (%289, %290, %291)
}

def @func_3015() -> Tensor[(6, 16, 5), int8] {
  @func_2685() /* ty=Tensor[(6, 16, 5), int8] */
}

def @func_13681() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(1, 13, 8), int64], Tensor[(104), uint32], Tensor[(792), int64]) {
  %292 = @func_5481() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %293 = cast(meta[relay.Constant][9] /* ty=Tensor[(104), uint32] */, dtype="uint32") /* ty=Tensor[(104), uint32] */;
  %294 = reshape(%293, newshape=[1, 13, 8]) /* ty=Tensor[(1, 13, 8), uint32] */;
  %295 = @func_6149() /* ty=(Tensor[(792), int64],) */;
  %296 = @func_6825() /* ty=Tensor[(3, 6, 5), float64] */;
  %297 = %292.0;
  %298 = @func_10857(%294) /* ty=Tensor[(1, 13, 8), int64] */;
  %299 = %295.0;
  (%296, %297, %298, meta[relay.Constant][9] /* ty=Tensor[(104), uint32] */, %299)
}

def @func_7243(%var_7229: Tensor[(2, 15, 16), int64], %var_7230: Tensor[(2, 15, 16), int64], %var_7237: Tensor[(2, 15, 16), int64]) -> (Tensor[(2, 15, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 15, 16), bool]) {
  %300 = cast(%var_7230, dtype="int64") /* ty=Tensor[(2, 15, 16), int64] */;
  %301 = shape_of(%var_7229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(%var_7229, dtype="int64") /* ty=Tensor[(2, 15, 16), int64] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %304 = @func_4447() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %305 = cast(%var_7237, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
  %306 = shape_of(%var_7230, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%var_7230, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %309 = multiply(%302, %303) /* ty=Tensor[(2, 15, 16), int64] */;
  %310 = %304.0;
  %311 = greater(%307, %308) /* ty=Tensor[(2, 15, 16), bool] */;
  (%309, %310, %311)
}

def @func_9156() -> Tensor[(3, 6, 5), float64] {
  %312 = @func_7310() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %312.0
}

def @func_11338() -> (Tensor[(2080), int64],) {
  %313 = @func_3182() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */;
  %314 = %313.2;
  (%314,)
}

def @func_8602() -> (Tensor[(2, 1040), bool], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32]) {
  %315 = @func_4789() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) */;
  %316 = %315.2;
  %317 = cast(%316, dtype="float64") /* ty=Tensor[(2, 1040), float64] */;
  %318 = sigmoid(%317) /* ty=Tensor[(2, 1040), float64] */;
  %319 = cast(%316, dtype="bool") /* ty=Tensor[(2, 1040), bool] */;
  %320 = shape_of(%318, dtype="int32") /* ty=Tensor[(2), int32] */;
  %321 = cast(%318, dtype="bool") /* ty=Tensor[(2, 1040), bool] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %323 = @func_5252() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) */;
  %324 = greater_equal(%321, %322) /* ty=Tensor[(2, 1040), bool] */;
  %325 = @func_8520() /* ty=Tensor[(3, 6, 5), float32] */;
  %326 = %323.1;
  (%324, %325, %326)
}

def @func_16068() -> Tensor[(3, 6, 5), float64] {
  @func_13805() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_14242() -> (Tensor[(3, 6, 5), float64],) {
  %327 = @func_9351() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %328 = %327.1;
  (%328,)
}

def @func_13181() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) {
  %329 = @func_4364() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %330 = %329.0;
  %331 = @func_12896() /* ty=Tensor[(3, 6, 5), float64] */;
  %332 = @func_10014() /* ty=Tensor[(3, 6, 5), float32] */;
  (%330, %331, %332)
}

def @func_16036() -> Tensor[(3, 6, 5), float64] {
  %333 = @func_5286() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %333.1
}

def @func_13946(%var_13941: Tensor[(3, 6, 5), float64]) -> (Tensor[(3, 6, 5), uint64],) {
  %334 = @func_12995() /* ty=Tensor[(3, 6, 5), float64] */;
  %335 = cast(%var_13941, dtype="uint64") /* ty=Tensor[(3, 6, 5), uint64] */;
  %336 = shape_of(%334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %337 = cast(%334, dtype="uint64") /* ty=Tensor[(3, 6, 5), uint64] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %339 = right_shift(%337, %338) /* ty=Tensor[(3, 6, 5), uint64] */;
  (%339,)
}

def @main(%var_16542: Tensor[(8, 16, 3), int32]) -> (Tensor[(3, 6, 5), bool], Tensor[(8, 16, 3), uint32], Tensor[(8, 16, 3), float32]) {
  %340 = @func_14891() /* ty=(Tensor[(3, 6, 5), bool],) */;
  %341 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 16, 3), int32] */, dtype="float64") /* ty=Tensor[(1, 16, 3), float64] */;
  %342 = asinh(%341) /* ty=Tensor[(1, 16, 3), float64] */;
  %343 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 16, 3), int32] */, dtype="int32") /* ty=Tensor[(1, 16, 3), int32] */;
  %344 = cast(%var_16542, dtype="int32") /* ty=Tensor[(8, 16, 3), int32] */;
  %345 = add(%343, %344) /* ty=Tensor[(8, 16, 3), int32] */;
  %346 = cast(%342, dtype="uint32") /* ty=Tensor[(1, 16, 3), uint32] */;
  %347 = cast(%345, dtype="uint32") /* ty=Tensor[(8, 16, 3), uint32] */;
  %348 = cast(%345, dtype="int32") /* ty=Tensor[(8, 16, 3), int32] */;
  %349 = cast(%342, dtype="int32") /* ty=Tensor[(1, 16, 3), int32] */;
  %350 = right_shift(%348, %349) /* ty=Tensor[(8, 16, 3), int32] */;
  %351 = cast(%350, dtype="float32") /* ty=Tensor[(8, 16, 3), float32] */;
  %352 = %340.0;
  %353 = logical_xor(%346, %347) /* ty=Tensor[(8, 16, 3), uint32] */;
  %354 = acosh(%351) /* ty=Tensor[(8, 16, 3), float32] */;
  (%352, %353, %354)
}

def @func_11717() -> Tensor[(792), float32] {
  %355 = @func_11175() /* ty=(Tensor[(792), float64],) */;
  %356 = %355.0;
  %357 = cast(%356, dtype="float32") /* ty=Tensor[(792), float32] */;
  asin(%357) /* ty=Tensor[(792), float32] */
}

def @func_6770(%var_6698: Tensor[(6, 16, 5), float32]) -> (Tensor[(6, 16, 5), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) {
  %358 = @func_6196() /* ty=(Tensor[(792), int64], Tensor[(6, 16, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %359 = %358.1;
  %360 = cast(%var_6698, dtype="bool") /* ty=Tensor[(6, 16, 5), bool] */;
  %361 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%359, dtype="bool") /* ty=Tensor[(6, 16, 5), bool] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %364 = @func_4012() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %365 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %366 = %365.0;
  %367 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  %368 = cast(%367, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
  %369 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%366, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %372 = equal(%362, %363) /* ty=Tensor[(6, 16, 5), bool] */;
  %373 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  %374 = %364.0;
  %375 = less_equal(%370, %371) /* ty=Tensor[(3, 6, 5), bool] */;
  (%372, %373, %374, %375)
}

def @func_7507() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8]) {
  %376 = @func_4447() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %377 = @func_6117() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */;
  %378 = cast(meta[relay.Constant][11] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %379 = reshape(%378, newshape=[6, 16, 5]) /* ty=Tensor[(6, 16, 5), int8] */;
  %380 = @func_4214(%379) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int32]) */;
  %381 = @func_2349() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %382 = %376.1;
  %383 = cast(%382, dtype="int64") /* ty=Tensor[(792), int64] */;
  %384 = reshape(%383, newshape=[11, 8, 9]) /* ty=Tensor[(11, 8, 9), int64] */;
  %385 = %377.1;
  %386 = %380.0;
  %387 = %381.0;
  %388 = @func_1663(%384) /* ty=Tensor[(11, 8, 9), uint8] */;
  (%382, %385, %386, meta[relay.Constant][11] /* ty=Tensor[(480), int8] */, %387, %388)
}

def @func_11635() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  %389 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %390 = @func_7507() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8]) */;
  %391 = %389.0;
  %392 = %390.2;
  %393 = @func_7128() /* ty=Tensor[(792), int64] */;
  (%391, %392, %393)
}

def @func_4175() -> (Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) {
  %394 = @func_3595() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(2, 1040), int64]) */;
  %395 = %394.1;
  %396 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 10, 16), int64] */, dtype="bool") /* ty=Tensor[(13, 10, 16), bool] */;
  %397 = shape_of(%395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%395, dtype="bool") /* ty=Tensor[(13, 10, 16), bool] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %400 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %401 = equal(%398, %399) /* ty=Tensor[(13, 10, 16), bool] */;
  %402 = @func_3015() /* ty=Tensor[(6, 16, 5), int8] */;
  %403 = %400.0;
  (%401, %402, %403)
}

def @func_5481() -> (Tensor[(3, 6, 5), float64],) {
  %404 = @func_5263() /* ty=Tensor[(3, 6, 5), float64] */;
  (%404,)
}

def @func_6551(%var_6529: Tensor[(448), float64], %var_6533: Tensor[(1040, 2), int64]) -> (Tensor[(6, 16, 5), float32], Tensor[(7, 8, 8), bool], Tensor[(448), float64], Tensor[(2, 1040), float64], Tensor[(1040, 2), int64], Tensor[(792), int64]) {
  %405 = @func_4789() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) */;
  %406 = %405.0;
  %407 = cast(%406, dtype="float32") /* ty=Tensor[(6, 16, 5), float32] */;
  %408 = cast(%var_6529, dtype="float64") /* ty=Tensor[(448), float64] */;
  %409 = reshape(%408, newshape=[7, 8, 8]) /* ty=Tensor[(7, 8, 8), float64] */;
  %410 = @func_3547(%409) /* ty=(Tensor[(7, 8, 8), bool], Tensor[(7, 8, 8), int32]) */;
  %411 = cast(%var_6533, dtype="int64") /* ty=Tensor[(1040, 2), int64] */;
  %412 = reshape(%411, newshape=[2, 1040]) /* ty=Tensor[(2, 1040), int64] */;
  %413 = @func_3095(%412) /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(3, 6, 5), float64]) */;
  %414 = @func_6149() /* ty=(Tensor[(792), int64],) */;
  %415 = acos(%407) /* ty=Tensor[(6, 16, 5), float32] */;
  %416 = %410.0;
  %417 = %413.3;
  %418 = %414.0;
  (%415, %416, %var_6529, %417, %var_6533, %418)
}

def @func_8925() -> Tensor[(3, 6, 5), float64] {
  %419 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %419.0
}

def @func_16241() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  %420 = @func_5481() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %421 = @func_4447() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %422 = @func_4925() /* ty=Tensor[(3, 6, 5), float64] */;
  %423 = %420.0;
  %424 = %421.1;
  (%422, %423, %424)
}

def @func_12365() -> (Tensor[(792), int64],) {
  %425 = @func_7434() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %426 = %425.0;
  (%426,)
}

def @func_20(%var_12: Tensor[(13, 10, 16), int64], %var_13: Tensor[(13, 10, 16), int64]) -> Tensor[(13, 10, 16), int64] {
  %427 = cast(%var_13, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %428 = shape_of(%var_12, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%var_12, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  maximum(%429, %430) /* ty=Tensor[(13, 10, 16), int64] */
}

def @func_4364() -> (Tensor[(3, 6, 5), float64],) {
  %431 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %432 = %431.1;
  (%432,)
}

def @func_4214(%var_4208: Tensor[(6, 16, 5), int8]) -> (Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int32]) {
  %433 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %434 = @func_4175() /* ty=(Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %435 = %434.1;
  %436 = cast(%var_4208, dtype="int32") /* ty=Tensor[(6, 16, 5), int32] */;
  %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%435, dtype="int32") /* ty=Tensor[(6, 16, 5), int32] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %440 = %433.0;
  %441 = bitwise_or(%438, %439) /* ty=Tensor[(6, 16, 5), int32] */;
  (%440, %441)
}

def @func_642(%var_582: Tensor[(13, 10, 16), int64]) -> (Tensor[(10, 5, 9), float64], Tensor[(770), uint64], Tensor[(13, 10, 16), int16], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64]) {
  %442 = cast(8.60294f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %443 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 5, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 5, 9), float64] */;
  %444 = cast(meta[relay.Constant][14] /* ty=Tensor[(770), uint64] */, dtype="uint64") /* ty=Tensor[(770), uint64] */;
  %445 = reshape(%444, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), uint64] */;
  %446 = @func_72(%445) /* ty=(Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) */;
  %447 = %446.1;
  %448 = cast(%var_582, dtype="int16") /* ty=Tensor[(13, 10, 16), int16] */;
  %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%447, dtype="int16") /* ty=Tensor[(13, 10, 16), int16] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %452 = cast(meta[relay.Constant][14] /* ty=Tensor[(770), uint64] */, dtype="uint64") /* ty=Tensor[(770), uint64] */;
  %453 = reshape(%452, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), uint64] */;
  %454 = @func_72(%453) /* ty=(Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) */;
  %455 = cast(%var_582, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %456 = %454.3;
  %457 = cast(%456, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %458 = reshape(%455, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %459 = reshape(%457, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %460 = cast(%447, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %461 = cast(%447, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %462 = reshape(%460, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %463 = reshape(%461, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %464 = cast(%var_582, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %465 = bitwise_and(%450, %451) /* ty=Tensor[(13, 10, 16), int16] */;
  %466 = cast(%465, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %467 = reshape(%464, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %468 = reshape(%466, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %469 = cast(meta[relay.Constant][14] /* ty=Tensor[(770), uint64] */, dtype="uint64") /* ty=Tensor[(770), uint64] */;
  %470 = reshape(%469, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), uint64] */;
  %471 = @func_72(%470) /* ty=(Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) */;
  %472 = divide(%442, %443) /* ty=Tensor[(10, 5, 9), float64] */;
  %473 = @func_20(%458, %459) /* ty=Tensor[(13, 10, 16), int64] */;
  %474 = @func_20(%462, %463) /* ty=Tensor[(13, 10, 16), int64] */;
  %475 = @func_20(%467, %468) /* ty=Tensor[(13, 10, 16), int64] */;
  %476 = %471.1;
  (%472, meta[relay.Constant][14] /* ty=Tensor[(770), uint64] */, %465, %456, %473, %474, %475, %476)
}

def @func_3863() -> (Tensor[(792), int64],) {
  %477 = @func_2860() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %478 = %477.0;
  (%478,)
}

def @func_15156() -> Tensor[(792), int64] {
  %479 = @func_9531() /* ty=(Tensor[(792), int64],) */;
  %479.0
}

def @func_14724() -> (Tensor[(3, 6, 5), float64],) {
  %480 = @func_4075() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) */;
  %481 = %480.0;
  (%481,)
}

def @func_8036() -> (Tensor[(3, 6, 5), float64],) {
  %482 = @func_2876() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) */;
  %483 = %482.0;
  (%483,)
}

def @func_10666(%var_10660: Tensor[(792), int64]) -> (Tensor[(792), uint8],) {
  %484 = @func_2354() /* ty=Tensor[(792), int64] */;
  %485 = cast(%var_10660, dtype="uint8") /* ty=Tensor[(792), uint8] */;
  %486 = shape_of(%484, dtype="int32") /* ty=Tensor[(1), int32] */;
  %487 = cast(%484, dtype="uint8") /* ty=Tensor[(792), uint8] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %489 = left_shift(%487, %488) /* ty=Tensor[(792), uint8] */;
  (%489,)
}

def @func_5387(%var_5325: Tensor[(1, 1170), bool]) -> (Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), int32], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), bool], Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float32]) {
  %490 = @func_4287() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(15, 15, 14), float32], Tensor[(2080), int64], Tensor[(3, 6, 5), float64]) */;
  %491 = @func_2860() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %492 = cast(%var_5325, dtype="bool") /* ty=Tensor[(1, 1170), bool] */;
  %493 = reshape(%492, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), bool] */;
  %494 = @func_2928(%493) /* ty=(Tensor[(15, 6, 13), bool], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(792), int32], Tensor[(420), float32]) */;
  %495 = %494.0;
  %496 = cast(%495, dtype="int32") /* ty=Tensor[(15, 6, 13), int32] */;
  %497 = shape_of(%var_5325, dtype="int32") /* ty=Tensor[(2), int32] */;
  %498 = cast(%var_5325, dtype="int32") /* ty=Tensor[(1, 1170), int32] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %500 = @func_5115() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(770), uint64]) */;
  %501 = cast(%495, dtype="bool") /* ty=Tensor[(15, 6, 13), bool] */;
  %502 = shape_of(%var_5325, dtype="int32") /* ty=Tensor[(2), int32] */;
  %503 = cast(%var_5325, dtype="bool") /* ty=Tensor[(1, 1170), bool] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %505 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %506 = %490.2;
  %507 = cast(%506, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %508 = cast(%506, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %509 = reshape(%507, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %510 = reshape(%508, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %511 = %505.0;
  %512 = cast(%511, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %513 = reshape(%512, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
  %514 = @func_3430(%513) /* ty=(Tensor[(3, 6, 5), bool],) */;
  %515 = @func_5252() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) */;
  %516 = %491.1;
  %517 = minimum(%498, %499) /* ty=Tensor[(?, 1170), int32] */;
  %518 = %500.0;
  %519 = not_equal(%503, %504) /* ty=Tensor[(?, 1170), bool] */;
  %520 = @func_20(%509, %510) /* ty=Tensor[(13, 10, 16), int64] */;
  %521 = %514.0;
  %522 = %515.1;
  (%506, %516, %517, %518, %519, %511, %520, %521, %522)
}

def @func_5286() -> (Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) {
  %523 = @func_4175() /* ty=(Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %524 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %525 = %523.1;
  %526 = %524.0;
  (%525, %526)
}

def @func_8989(%var_8961: Tensor[(2080), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float32]) {
  %527 = @func_7764() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %528 = cast(%var_8961, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %529 = cast(%var_8961, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %530 = reshape(%528, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %531 = reshape(%529, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %532 = cast(%var_8961, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %533 = cast(%var_8961, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %534 = reshape(%532, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %535 = reshape(%533, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %536 = @func_7573() /* ty=(Tensor[(3, 6, 5), float32],) */;
  %537 = %527.0;
  %538 = @func_20(%530, %531) /* ty=Tensor[(13, 10, 16), int64] */;
  %539 = @func_20(%534, %535) /* ty=Tensor[(13, 10, 16), int64] */;
  %540 = %536.0;
  (%537, %538, %var_8961, %539, %540)
}

def @func_6893() -> Tensor[(3, 6, 5), float64] {
  @func_2582() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_14661() -> (Tensor[(5, 9, 7), float64], Tensor[(1, 10, 2), float64], Tensor[(20), float64], Tensor[(3, 6, 5), float64]) {
  %541 = @func_14592() /* ty=(Tensor[(3, 6, 5), bool], Tensor[(5, 9, 7), float64], Tensor[(420), float32]) */;
  %542 = cast(meta[relay.Constant][15] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %543 = reshape(%542, newshape=[1, 10, 2]) /* ty=Tensor[(1, 10, 2), float64] */;
  %544 = @func_7871(%543) /* ty=(Tensor[(1, 10, 2), float64],) */;
  %545 = @func_8515() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %546 = %541.1;
  %547 = %544.0;
  %548 = %545.0;
  (%546, %547, meta[relay.Constant][15] /* ty=Tensor[(20), float64] */, %548)
}

def @func_2209() -> (Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) {
  %549 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %550 = cast(meta[relay.Constant][16] /* ty=Tensor[(792), int64] */, dtype="int64") /* ty=Tensor[(792), int64] */;
  %551 = reshape(%550, newshape=[11, 8, 9]) /* ty=Tensor[(11, 8, 9), int64] */;
  %552 = %549.0;
  %553 = @func_1663(%551) /* ty=Tensor[(11, 8, 9), uint8] */;
  (%552, %553, meta[relay.Constant][16] /* ty=Tensor[(792), int64] */)
}

def @func_5854() -> (Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) {
  %554 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %555 = cast(meta[relay.Constant][17] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %556 = reshape(%555, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %557 = @func_3276(%556) /* ty=(Tensor[(2080), bool],) */;
  %558 = %554.0;
  %559 = %557.0;
  (%558, %559, meta[relay.Constant][17] /* ty=Tensor[(2080), int64] */)
}

def @func_2349() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %560 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %561 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %562 = %560.0;
  %563 = %561.0;
  (%562, %563)
}

def @func_15210(%var_15192: bool, %var_15193: Tensor[(12, 4), bool]) -> (Tensor[(3, 6, 5), float64], Tensor[(1, 4, 12), bool], bool, Tensor[(12, 4), bool], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
  %564 = @func_5286() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %565 = cast(%var_15192, dtype="bool") /* ty=bool */;
  %566 = cast(%var_15193, dtype="bool") /* ty=Tensor[(12, 4), bool] */;
  %567 = reshape(%565, newshape=[]) /* ty=bool */;
  %568 = reshape(%566, newshape=[1, 4, 12]) /* ty=Tensor[(1, 4, 12), bool] */;
  %569 = @func_14606(%567, %568) /* ty=(Tensor[(1, 4, 12), bool],) */;
  %570 = %564.1;
  %571 = %569.0;
  %572 = @func_15156() /* ty=Tensor[(792), int64] */;
  %573 = @func_8450() /* ty=Tensor[(3, 6, 5), float64] */;
  (%570, %571, %var_15192, %var_15193, %572, %573)
}

def @func_10260() -> (Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(2080), float64]) {
  %574 = @func_4789() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) */;
  %575 = @func_4227() /* ty=(Tensor[(792), int64],) */;
  %576 = @func_9360() /* ty=(Tensor[(2080), int64],) */;
  %577 = %576.0;
  %578 = cast(%577, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %579 = %574.3;
  %580 = %575.0;
  %581 = rsqrt(%578) /* ty=Tensor[(2080), float64] */;
  (%579, %580, %581)
}

def @func_12984(%var_12976: Tensor[(13, 16, 13), float32], %var_12977: Tensor[(13, 16, 13), float32]) -> Tensor[(13, 16, 13), float32] {
  %582 = cast(%var_12977, dtype="float32") /* ty=Tensor[(13, 16, 13), float32] */;
  %583 = shape_of(%var_12976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%var_12976, dtype="float32") /* ty=Tensor[(13, 16, 13), float32] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%584, %585) /* ty=Tensor[(13, 16, 13), float32] */
}

def @func_16073() -> (Tensor[(3, 6, 5), float64],) {
  %586 = @func_13019() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %587 = %586.0;
  (%587,)
}

def @func_9749() -> (Tensor[(3, 6, 5), float64],) {
  %588 = @func_6893() /* ty=Tensor[(3, 6, 5), float64] */;
  (%588,)
}

def @func_15436(%var_15431: Tensor[(792), float32]) -> Tensor[(792), float64] {
  %589 = @func_11717() /* ty=Tensor[(792), float32] */;
  %590 = cast(%var_15431, dtype="float64") /* ty=Tensor[(792), float64] */;
  %591 = shape_of(%589, dtype="int32") /* ty=Tensor[(1), int32] */;
  %592 = cast(%589, dtype="float64") /* ty=Tensor[(792), float64] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?), float64] */;
  divide(%592, %593) /* ty=Tensor[(792), float64] */
}

def @func_8515() -> (Tensor[(3, 6, 5), float64],) {
  %594 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %595 = %594.1;
  (%595,)
}

def @func_11547() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(420), float32], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) {
  %596 = @func_5481() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %597 = @func_9885() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %598 = @func_8431() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %599 = cast(meta[relay.Constant][18] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %600 = reshape(%599, newshape=[70, 6]) /* ty=Tensor[(70, 6), float32] */;
  %601 = @func_6431(%600) /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(70, 6), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %602 = @func_5808() /* ty=(Tensor[(6, 16, 5), int8],) */;
  %603 = %596.0;
  %604 = %597.0;
  %605 = %598.0;
  %606 = %601.4;
  %607 = %602.0;
  %608 = @func_4925() /* ty=Tensor[(3, 6, 5), float64] */;
  (%603, %604, %605, %606, meta[relay.Constant][18] /* ty=Tensor[(420), float32] */, %607, %608)
}

def @func_4789() -> (Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) {
  %609 = @func_4175() /* ty=(Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %610 = @func_3595() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(2, 1040), int64]) */;
  %611 = @func_2699() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %612 = %609.1;
  %613 = @func_2354() /* ty=Tensor[(792), int64] */;
  %614 = %610.2;
  %615 = %611.0;
  (%612, %613, %614, %615)
}

def @func_9058() -> (Tensor[(792), int64],) {
  %616 = @func_4447() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %617 = %616.1;
  (%617,)
}

def @func_14574() -> (Tensor[(792), int64], Tensor[(792), int64]) {
  %618 = @func_12365() /* ty=(Tensor[(792), int64],) */;
  %619 = @func_6356() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %620 = %618.0;
  %621 = %619.3;
  (%620, %621)
}

def @func_8285(%var_8097: Tensor[(16, 7, 10), float64], %var_8098: Tensor[(16, 7, 10), float64], %var_8195: Tensor[(2, 1040), int64], %var_8264: Tensor[(480), int64]) -> (Tensor[(16, 7, 10), float32], Tensor[(16, 7, 10), bool], Tensor[(16, 7, 10), float32], Tensor[(2, 1040), bool], Tensor[(16, 7, 10), float64], Tensor[(2, 15, 16), int64], Tensor[(480), int64], Tensor[(3, 6, 5), float64], Tensor[(16, 7, 10), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %622 = cast(%var_8098, dtype="float64") /* ty=Tensor[(16, 7, 10), float64] */;
  %623 = shape_of(%var_8097, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%var_8097, dtype="float64") /* ty=Tensor[(16, 7, 10), float64] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %626 = power(%624, %625) /* ty=Tensor[(16, 7, 10), float64] */;
  %627 = cast(%626, dtype="float32") /* ty=Tensor[(16, 7, 10), float32] */;
  %628 = cast(%var_8098, dtype="float32") /* ty=Tensor[(16, 7, 10), float32] */;
  %629 = tan(%628) /* ty=Tensor[(16, 7, 10), float32] */;
  %630 = cast(%626, dtype="bool") /* ty=Tensor[(16, 7, 10), bool] */;
  %631 = shape_of(%629, dtype="int32") /* ty=Tensor[(3), int32] */;
  %632 = cast(%629, dtype="bool") /* ty=Tensor[(16, 7, 10), bool] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %634 = cast(%var_8097, dtype="float32") /* ty=Tensor[(16, 7, 10), float32] */;
  %635 = @func_4789() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) */;
  %636 = %635.2;
  %637 = cast(%var_8195, dtype="bool") /* ty=Tensor[(2, 1040), bool] */;
  %638 = shape_of(%636, dtype="int32") /* ty=Tensor[(2), int32] */;
  %639 = cast(%636, dtype="bool") /* ty=Tensor[(2, 1040), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %641 = cast(%629, dtype="float32") /* ty=Tensor[(16, 7, 10), float32] */;
  %642 = rsqrt(%641) /* ty=Tensor[(16, 7, 10), float32] */;
  %643 = cast(%642, dtype="float64") /* ty=Tensor[(16, 7, 10), float64] */;
  %644 = cast(%var_8264, dtype="int64") /* ty=Tensor[(480), int64] */;
  %645 = cast(%var_8264, dtype="int64") /* ty=Tensor[(480), int64] */;
  %646 = cast(%var_8264, dtype="int64") /* ty=Tensor[(480), int64] */;
  %647 = reshape(%644, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), int64] */;
  %648 = reshape(%645, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), int64] */;
  %649 = reshape(%646, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), int64] */;
  %650 = @func_7243(%647, %648, %649) /* ty=(Tensor[(2, 15, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 15, 16), bool]) */;
  %651 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %652 = cast(%var_8097, dtype="bool") /* ty=Tensor[(16, 7, 10), bool] */;
  %653 = shape_of(%642, dtype="int32") /* ty=Tensor[(3), int32] */;
  %654 = cast(%642, dtype="bool") /* ty=Tensor[(16, 7, 10), bool] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %656 = %651.0;
  %657 = cast(%656, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %658 = reshape(%657, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %659 = @func_6226(%658) /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(90), float64], Tensor[(2080), int64]) */;
  %660 = @func_2699() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %661 = acosh(%627) /* ty=Tensor[(16, 7, 10), float32] */;
  %662 = less(%632, %633) /* ty=Tensor[(16, 7, 10), bool] */;
  %663 = acos(%634) /* ty=Tensor[(16, 7, 10), float32] */;
  %664 = equal(%639, %640) /* ty=Tensor[(2, 1040), bool] */;
  %665 = sinh(%643) /* ty=Tensor[(16, 7, 10), float64] */;
  %666 = %650.0;
  %667 = logical_and(%654, %655) /* ty=Tensor[(16, 7, 10), bool] */;
  %668 = %659.1;
  %669 = %660.0;
  (%661, %662, %663, %664, %665, %666, %var_8264, %656, %667, %668, %669)
}

def @func_10857(%var_10839: Tensor[(1, 13, 8), uint32]) -> Tensor[(1, 13, 8), int64] {
  %670 = cast(meta[relay.Constant][19] /* ty=uint32 */, dtype="bool") /* ty=bool */;
  %671 = cast(%var_10839, dtype="bool") /* ty=Tensor[(1, 13, 8), bool] */;
  %672 = less(%670, %671) /* ty=Tensor[(1, 13, 8), bool] */;
  %673 = cast(%672, dtype="int64") /* ty=Tensor[(1, 13, 8), int64] */;
  %674 = cast(meta[relay.Constant][19] /* ty=uint32 */, dtype="int64") /* ty=int64 */;
  logical_xor(%673, %674) /* ty=Tensor[(1, 13, 8), int64] */
}

def @func_4668() -> Tensor[(3, 6, 5), float64] {
  %675 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %675.0
}

def @func_9496() -> Tensor[(3, 6, 5), float64] {
  %676 = @func_7203() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) */;
  %676.0
}

def @func_14452() -> Tensor[(3, 6, 5), float64] {
  %677 = @func_5286() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %677.1
}

def @func_13358() -> (Tensor[(3, 6, 5), float64],) {
  %678 = @func_4925() /* ty=Tensor[(3, 6, 5), float64] */;
  (%678,)
}

def @func_8450() -> Tensor[(3, 6, 5), float64] {
  @func_4925() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_10392(%var_10348: Tensor[(770), uint64], %var_10354: Tensor[(2080), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(770), uint64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64], Tensor[(792), int64]) {
  %679 = cast(%var_10348, dtype="uint64") /* ty=Tensor[(770), uint64] */;
  %680 = reshape(%679, newshape=[770]) /* ty=Tensor[(770), uint64] */;
  %681 = @func_7851(%680) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(770), uint64], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64]) */;
  %682 = cast(%var_10354, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %683 = reshape(%682, newshape=[2, 1040]) /* ty=Tensor[(2, 1040), int64] */;
  %684 = @func_3095(%683) /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(3, 6, 5), float64]) */;
  %685 = @func_9058() /* ty=(Tensor[(792), int64],) */;
  %686 = @func_6598() /* ty=Tensor[(3, 6, 5), float64] */;
  %687 = %681.1;
  %688 = %684.2;
  %689 = %685.0;
  (%686, %687, %var_10348, %688, %var_10354, %689)
}

def @func_11811() -> Tensor[(3, 6, 5), float64] {
  %690 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %690.0
}

def @func_14606(%var_14600: bool, %var_14601: Tensor[(1, 4, 12), bool]) -> (Tensor[(1, 4, 12), bool],) {
  %691 = cast(%var_14600, dtype="bool") /* ty=bool */;
  %692 = cast(%var_14601, dtype="bool") /* ty=Tensor[(1, 4, 12), bool] */;
  %693 = logical_or(%691, %692) /* ty=Tensor[(1, 4, 12), bool] */;
  (%693,)
}

def @func_13890(%var_13816: Tensor[(5, 9, 7), float64]) -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 14, 12), bool], Tensor[(504), int64], Tensor[(3, 6, 5), float64], Tensor[(5, 9, 7), bool]) {
  %694 = @func_12122() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) */;
  %695 = @func_12550() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %696 = @func_11635() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %697 = cast(meta[relay.Constant][20] /* ty=Tensor[(504), int64] */, dtype="int64") /* ty=Tensor[(504), int64] */;
  %698 = cast(meta[relay.Constant][20] /* ty=Tensor[(504), int64] */, dtype="int64") /* ty=Tensor[(504), int64] */;
  %699 = reshape(%697, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), int64] */;
  %700 = reshape(%698, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), int64] */;
  %701 = @func_9393(%699, %700) /* ty=(Tensor[(3, 14, 12), bool], Tensor[(2, 1040), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %702 = @func_2976() /* ty=Tensor[(5, 9, 7), float64] */;
  %703 = cast(%702, dtype="float64") /* ty=Tensor[(5, 9, 7), float64] */;
  %704 = atan(%703) /* ty=Tensor[(5, 9, 7), float64] */;
  %705 = cast(%var_13816, dtype="bool") /* ty=Tensor[(5, 9, 7), bool] */;
  %706 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%702, dtype="bool") /* ty=Tensor[(5, 9, 7), bool] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %709 = greater_equal(%707, %708) /* ty=Tensor[(5, 9, 7), bool] */;
  %710 = cast(%709, dtype="bool") /* ty=Tensor[(5, 9, 7), bool] */;
  %711 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%704, dtype="bool") /* ty=Tensor[(5, 9, 7), bool] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %714 = @func_8520() /* ty=Tensor[(3, 6, 5), float32] */;
  %715 = %694.0;
  %716 = %695.1;
  %717 = %696.1;
  %718 = %701.0;
  %719 = @func_10683() /* ty=Tensor[(3, 6, 5), float64] */;
  %720 = not_equal(%712, %713) /* ty=Tensor[(5, 9, 7), bool] */;
  (%714, %715, %716, %717, %718, meta[relay.Constant][20] /* ty=Tensor[(504), int64] */, %719, %720)
}

def @func_16465() -> (Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(420), float32]) {
  %721 = @func_14724() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %722 = @func_4695() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(1040, 2), int64]) */;
  %723 = @func_5529() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(5, 12, 7), float32], Tensor[(420), float32]) */;
  %724 = %721.0;
  %725 = %722.0;
  %726 = @func_2735() /* ty=Tensor[(3, 6, 5), float64] */;
  %727 = %723.2;
  (%724, %725, %726, %727)
}

def @func_13428() -> (Tensor[(3, 6, 5), float64],) {
  %728 = @func_9496() /* ty=Tensor[(3, 6, 5), float64] */;
  (%728,)
}

def @func_15714(%var_15677: Tensor[(2080), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64], Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8], Tensor[(15, 15, 14), float32]) {
  %729 = @func_9351() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %730 = @func_7507() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8]) */;
  %731 = %729.0;
  %732 = cast(%731, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %733 = cast(%var_15677, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %734 = reshape(%732, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
  %735 = reshape(%733, newshape=[2080, 1]) /* ty=Tensor[(2080, 1), int64] */;
  %736 = @func_3134(%734, %735) /* ty=(Tensor[(3, 6, 5), bool], Tensor[(13, 10, 16), int64], Tensor[(2080, 1), int64], Tensor[(2080), int64]) */;
  %737 = @func_5808() /* ty=(Tensor[(6, 16, 5), int8],) */;
  %738 = @func_10544() /* ty=(Tensor[(15, 15, 14), float32], Tensor[(5, 9, 7), float64]) */;
  %739 = @func_10683() /* ty=Tensor[(3, 6, 5), float64] */;
  %740 = %730.0;
  %741 = @func_13472() /* ty=Tensor[(3, 6, 5), float64] */;
  %742 = %736.3;
  %743 = @func_11811() /* ty=Tensor[(3, 6, 5), float64] */;
  %744 = %737.0;
  %745 = %738.0;
  (%739, %731, %740, %741, %742, %var_15677, %743, %744, %745)
}

def @func_2136() -> (Tensor[(3, 6, 5), float64],) {
  %746 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 6, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %747 = atan(%746) /* ty=Tensor[(3, 6, 5), float64] */;
  (%747,)
}

def @func_2516(%var_2452: Tensor[(5, 12, 7), float32], %var_2453: Tensor[(5, 12, 7), float32]) -> (Tensor[(5, 12, 7), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(3, 6, 5), float32]) {
  %748 = cast(%var_2453, dtype="float32") /* ty=Tensor[(5, 12, 7), float32] */;
  %749 = shape_of(%var_2452, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%var_2452, dtype="float32") /* ty=Tensor[(5, 12, 7), float32] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %752 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %753 = @func_2354() /* ty=Tensor[(792), int64] */;
  %754 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
  %755 = %754.2;
  %756 = cast(%755, dtype="int32") /* ty=Tensor[(792), int32] */;
  %757 = shape_of(%753, dtype="int32") /* ty=Tensor[(1), int32] */;
  %758 = cast(%753, dtype="int32") /* ty=Tensor[(792), int32] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?), int32] */;
  %760 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %761 = %760.0;
  %762 = cast(%761, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
  %763 = divide(%750, %751) /* ty=Tensor[(5, 12, 7), float32] */;
  %764 = %752.0;
  %765 = bitwise_or(%758, %759) /* ty=Tensor[(792), int32] */;
  %766 = log10(%762) /* ty=Tensor[(3, 6, 5), float32] */;
  (%763, %764, %765, %766)
}

def @func_6825() -> Tensor[(3, 6, 5), float64] {
  %767 = @func_5931() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %767.1
}

def @func_10146() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) {
  %768 = @func_9572() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %769 = @func_9572() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %770 = @func_5705() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %771 = @func_5115() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(770), uint64]) */;
  %772 = %771.0;
  %773 = cast(%772, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
  %774 = %768.1;
  %775 = %769.1;
  %776 = %770.1;
  %777 = cosh(%773) /* ty=Tensor[(3, 6, 5), float32] */;
  (%774, %775, %776, %777)
}

def @func_3398() -> (Tensor[(3, 6, 5), float64],) {
  %778 = @func_2860() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %779 = %778.1;
  (%779,)
}

def @func_14503() -> Tensor[(3, 6, 5), float64] {
  @func_6598() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_12450(%var_12445: Tensor[(8, 15, 8), int16]) -> Tensor[(8, 15, 8), int16] {
  %780 = cast(%var_12445, dtype="int16") /* ty=Tensor[(8, 15, 8), int16] */;
  %781 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(8, 15, 8), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 15, 8), int16] */, dtype="int16") /* ty=Tensor[(8, 15, 8), int16] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  add(%782, %783) /* ty=Tensor[(8, 15, 8), int16] */
}

def @func_7128() -> Tensor[(792), int64] {
  %784 = @func_4627() /* ty=(Tensor[(792), int64], Tensor[(792), int64]) */;
  %784.0
}

def @func_12830(%var_12805: Tensor[(3, 12, 16), int8], %var_12806: Tensor[(3, 12, 16), int8]) -> (Tensor[(3, 12, 16), int8], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 12, 16), float64]) {
  %785 = cast(%var_12806, dtype="int8") /* ty=Tensor[(3, 12, 16), int8] */;
  %786 = shape_of(%var_12805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %787 = cast(%var_12805, dtype="int8") /* ty=Tensor[(3, 12, 16), int8] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %789 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %790 = cast(meta[relay.Constant][23] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %791 = reshape(%790, newshape=[6, 16, 5]) /* ty=Tensor[(6, 16, 5), int8] */;
  %792 = @func_4214(%791) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int32]) */;
  %793 = cast(%var_12806, dtype="float64") /* ty=Tensor[(3, 12, 16), float64] */;
  %794 = logical_xor(%787, %788) /* ty=Tensor[(3, 12, 16), int8] */;
  %795 = %789.0;
  %796 = %792.0;
  %797 = atanh(%793) /* ty=Tensor[(3, 12, 16), float64] */;
  (%794, %795, %796, meta[relay.Constant][23] /* ty=Tensor[(480), int8] */, %797)
}

def @func_15951() -> (Tensor[(3, 6, 5), bool], Tensor[(5, 9, 7), float64]) {
  %798 = @func_8832() /* ty=Tensor[(3, 6, 5), bool] */;
  %799 = @func_15611() /* ty=Tensor[(5, 9, 7), float64] */;
  (%798, %799)
}

def @func_4012() -> (Tensor[(3, 6, 5), float64],) {
  %800 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  (%800,)
}

def @func_5994() -> Tensor[(3, 6, 5), float64] {
  %801 = @func_2349() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %801.1
}

def @func_9550() -> Tensor[(3, 6, 5), float64] {
  %802 = @func_4452() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %802.0
}

def @func_13472() -> Tensor[(3, 6, 5), float64] {
  @func_9550() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_5840(%var_5830: Tensor[(16, 12, 16), float64], %var_5831: Tensor[(16, 12, 16), float64]) -> (Tensor[(16, 12, 16), bool],) {
  %803 = cast(%var_5831, dtype="bool") /* ty=Tensor[(16, 12, 16), bool] */;
  %804 = shape_of(%var_5830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %805 = cast(%var_5830, dtype="bool") /* ty=Tensor[(16, 12, 16), bool] */;
  %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %807 = equal(%805, %806) /* ty=Tensor[(16, 12, 16), bool] */;
  (%807,)
}

def @func_5038() -> (Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(6, 16, 5), int8]) {
  %808 = @func_3182() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */;
  %809 = cast(meta[relay.Constant][24] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %810 = cast(meta[relay.Constant][24] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %811 = reshape(%809, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %812 = reshape(%810, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %813 = %808.1;
  %814 = @func_20(%811, %812) /* ty=Tensor[(13, 10, 16), int64] */;
  %815 = @func_2685() /* ty=Tensor[(6, 16, 5), int8] */;
  (%813, %814, meta[relay.Constant][24] /* ty=Tensor[(2080), int64] */, %815)
}

def @func_3595() -> (Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(2, 1040), int64]) {
  %816 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %817 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 1040), int64] */, dtype="int64") /* ty=Tensor[(2, 1040), int64] */;
  %818 = reshape(%817, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %819 = @func_642(%818) /* ty=(Tensor[(10, 5, 9), float64], Tensor[(770), uint64], Tensor[(13, 10, 16), int16], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64]) */;
  %820 = %816.0;
  %821 = %819.7;
  (%820, %821, meta[relay.Constant][25] /* ty=Tensor[(2, 1040), int64] */)
}

def @func_13552() -> Tensor[(792), float32] {
  %822 = @func_6356() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %823 = %822.0;
  %824 = cast(%823, dtype="float32") /* ty=Tensor[(792), float32] */;
  atanh(%824) /* ty=Tensor[(792), float32] */
}

def @func_12510() -> Tensor[(3, 6, 5), float64] {
  %825 = @func_3398() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %825.0
}

def @func_4075() -> (Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) {
  %826 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %827 = %826.0;
  %828 = @func_3015() /* ty=Tensor[(6, 16, 5), int8] */;
  (%827, %828)
}

def @func_7173() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(5, 234), bool]) {
  %829 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 234), bool] */, dtype="bool") /* ty=Tensor[(5, 234), bool] */;
  %830 = reshape(%829, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), bool] */;
  %831 = @func_5387(%830) /* ty=(Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), int32], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), bool], Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float32]) */;
  %832 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  %833 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  %834 = %831.8;
  (%832, %833, %834, meta[relay.Constant][26] /* ty=Tensor[(5, 234), bool] */)
}

def @func_14379() -> (Tensor[(3, 6, 5), float64], Tensor[(2080), int64], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) {
  %835 = @func_2699() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %836 = @func_9360() /* ty=(Tensor[(2080), int64],) */;
  %837 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %838 = %835.0;
  %839 = %836.0;
  %840 = %837.0;
  %841 = @func_8520() /* ty=Tensor[(3, 6, 5), float32] */;
  %842 = @func_7672() /* ty=Tensor[(3, 6, 5), float64] */;
  (%838, %839, %840, %841, %842)
}

def @func_16495() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(1040, 2), int64]) {
  %843 = @func_9464() /* ty=(Tensor[(3, 6, 5), float32],) */;
  %844 = cast(meta[relay.Constant][27] /* ty=Tensor[(1040, 2), int64] */, dtype="int64") /* ty=Tensor[(1040, 2), int64] */;
  %845 = reshape(%844, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %846 = @func_6082(%845) /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64], Tensor[(792), int64]) */;
  %847 = %843.0;
  %848 = %846.1;
  (%847, %848, meta[relay.Constant][27] /* ty=Tensor[(1040, 2), int64] */)
}

def @func_3351() -> (Tensor[(3, 6, 5), float64],) {
  %849 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %850 = %849.0;
  (%850,)
}

def @func_7138() -> Tensor[(3, 6, 5), float64] {
  %851 = @func_4447() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %851.0
}

def @func_9572() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) {
  %852 = @func_4287() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(15, 15, 14), float32], Tensor[(2080), int64], Tensor[(3, 6, 5), float64]) */;
  %853 = @func_8520() /* ty=Tensor[(3, 6, 5), float32] */;
  %854 = %852.0;
  (%853, %854)
}

def @func_12232() -> (Tensor[(792), int64], Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(480), float32], Tensor[(3, 6, 5), float64]) {
  %855 = @func_4227() /* ty=(Tensor[(792), int64],) */;
  %856 = @func_9360() /* ty=(Tensor[(2080), int64],) */;
  %857 = cast(meta[relay.Constant][28] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %858 = reshape(%857, newshape=[6, 16, 5]) /* ty=Tensor[(6, 16, 5), float32] */;
  %859 = @func_6770(%858) /* ty=(Tensor[(6, 16, 5), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) */;
  %860 = @func_7203() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) */;
  %861 = %855.0;
  %862 = %856.0;
  %863 = %859.2;
  %864 = %860.0;
  (%861, %862, %863, meta[relay.Constant][28] /* ty=Tensor[(480), float32] */, %864)
}

def @func_16329() -> Tensor[(3, 6, 5), float32] {
  %865 = @func_13715() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32]) */;
  %865.1
}

def @func_16009() -> Tensor[(3, 6, 5), float64] {
  %866 = @func_12006() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %866.0
}

def @func_5529() -> (Tensor[(3, 6, 5), float64], Tensor[(5, 12, 7), float32], Tensor[(420), float32]) {
  %867 = @func_5286() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %868 = cast(meta[relay.Constant][29] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %869 = cast(meta[relay.Constant][29] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %870 = reshape(%868, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
  %871 = reshape(%869, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
  %872 = @func_2516(%870, %871) /* ty=(Tensor[(5, 12, 7), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(3, 6, 5), float32]) */;
  %873 = %867.1;
  %874 = %872.0;
  (%873, %874, meta[relay.Constant][29] /* ty=Tensor[(420), float32] */)
}

def @func_4447() -> (Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  %875 = @func_4227() /* ty=(Tensor[(792), int64],) */;
  %876 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  %877 = %875.0;
  (%876, %877)
}

def @func_14064(%var_14033: Tensor[(10, 5, 7), float64], %var_14048: Tensor[(315), float64], %var_14056: Tensor[(104, 1), uint32], %var_14062: Tensor[(2080), int64]) -> (Tensor[(10, 5, 7), float64], Tensor[(3, 6, 5), float32], Tensor[(315), float64], Tensor[(1, 13, 8), int64], Tensor[(104, 1), uint32], Tensor[(1040, 2), int64], Tensor[(448), float64], Tensor[(2080), int64]) {
  %878 = cast(%var_14033, dtype="float64") /* ty=Tensor[(10, 5, 7), float64] */;
  %879 = cast(%var_14048, dtype="float64") /* ty=Tensor[(315), float64] */;
  %880 = reshape(%879, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float64] */;
  %881 = @func_13890(%880) /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 14, 12), bool], Tensor[(504), int64], Tensor[(3, 6, 5), float64], Tensor[(5, 9, 7), bool]) */;
  %882 = cast(%var_14056, dtype="uint32") /* ty=Tensor[(104, 1), uint32] */;
  %883 = reshape(%882, newshape=[1, 13, 8]) /* ty=Tensor[(1, 13, 8), uint32] */;
  %884 = cast(meta[relay.Constant][30] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %885 = cast(%var_14062, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %886 = reshape(%884, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %887 = reshape(%885, newshape=[1040, 2]) /* ty=Tensor[(1040, 2), int64] */;
  %888 = @func_6551(%886, %887) /* ty=(Tensor[(6, 16, 5), float32], Tensor[(7, 8, 8), bool], Tensor[(448), float64], Tensor[(2, 1040), float64], Tensor[(1040, 2), int64], Tensor[(792), int64]) */;
  %889 = atan(%878) /* ty=Tensor[(10, 5, 7), float64] */;
  %890 = %881.0;
  %891 = @func_10857(%883) /* ty=Tensor[(1, 13, 8), int64] */;
  %892 = %888.4;
  (%889, %890, %var_14048, %891, %var_14056, %892, meta[relay.Constant][30] /* ty=Tensor[(448), float64] */, %var_14062)
}

def @func_4723() -> Tensor[(3, 6, 5), float64] {
  %893 = @func_3398() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %893.0
}

def @func_11124() -> Tensor[(3, 6, 5), float64] {
  @func_5263() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_14440() -> Tensor[(3, 6, 5), float64] {
  %894 = @func_7310() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %894.1
}

def @func_15506() -> Tensor[(3, 6, 5), float64] {
  %895 = @func_10527() /* ty=(Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %895.2
}

def @func_14000() -> (Tensor[(792), int64],) {
  %896 = @func_10260() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(2080), float64]) */;
  %897 = %896.1;
  (%897,)
}

def @func_6196() -> (Tensor[(792), int64], Tensor[(6, 16, 5), float32], Tensor[(3, 6, 5), float64]) {
  %898 = @func_6149() /* ty=(Tensor[(792), int64],) */;
  %899 = @func_4075() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) */;
  %900 = %899.1;
  %901 = cast(%900, dtype="float32") /* ty=Tensor[(6, 16, 5), float32] */;
  %902 = %898.0;
  %903 = cos(%901) /* ty=Tensor[(6, 16, 5), float32] */;
  %904 = @func_5994() /* ty=Tensor[(3, 6, 5), float64] */;
  (%902, %903, %904)
}

def @func_14125() -> (Tensor[(6, 16, 5), float32],) {
  %905 = @func_6787() /* ty=(Tensor[(6, 16, 5), float32],) */;
  %906 = %905.0;
  (%906,)
}

def @func_12122() -> (Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) {
  %907 = @func_5725() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), int16]) */;
  %908 = %907.1;
  %909 = cast(%908, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
  %910 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  %911 = cast(%910, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %912 = reshape(%911, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
  %913 = @func_3430(%912) /* ty=(Tensor[(3, 6, 5), bool],) */;
  %914 = @func_3015() /* ty=Tensor[(6, 16, 5), int8] */;
  %915 = asin(%909) /* ty=Tensor[(3, 6, 5), float32] */;
  %916 = @func_7138() /* ty=Tensor[(3, 6, 5), float64] */;
  %917 = @func_11124() /* ty=Tensor[(3, 6, 5), float64] */;
  %918 = %913.0;
  (%910, %914, %915, %916, %917, %918)
}

def @func_15320(%var_15293: Tensor[(1040, 2), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(1040, 2), int64], Tensor[(792), int64]) {
  %919 = @func_6356() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %920 = cast(%var_15293, dtype="int64") /* ty=Tensor[(1040, 2), int64] */;
  %921 = reshape(%920, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %922 = @func_642(%921) /* ty=(Tensor[(10, 5, 9), float64], Tensor[(770), uint64], Tensor[(13, 10, 16), int16], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64]) */;
  %923 = @func_7742() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %924 = %919.4;
  %925 = %922.7;
  %926 = %923.0;
  (%924, %925, %var_15293, %926)
}

def @func_16528() -> Tensor[(3, 6, 5), float32] {
  %927 = @func_11767() /* ty=(Tensor[(3, 6, 5), float32],) */;
  %927.0
}

def @func_4452() -> (Tensor[(3, 6, 5), float64],) {
  %928 = @func_2876() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) */;
  %929 = %928.0;
  (%929,)
}

def @func_13805() -> Tensor[(3, 6, 5), float64] {
  %930 = @func_9885() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %930.0
}

def @func_3430(%var_3422: Tensor[(3, 6, 5), float64]) -> (Tensor[(3, 6, 5), bool],) {
  %931 = @func_2876() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) */;
  %932 = %931.0;
  %933 = cast(%var_3422, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
  %934 = shape_of(%932, dtype="int32") /* ty=Tensor[(3), int32] */;
  %935 = cast(%932, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
  %936 = dyn.reshape(%933, %934, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %937 = logical_and(%935, %936) /* ty=Tensor[(3, 6, 5), bool] */;
  (%937,)
}

def @func_13235() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  %938 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %939 = @func_10217() /* ty=(Tensor[(420), float32], Tensor[(3, 6, 5), float32], Tensor[(792), int64]) */;
  %940 = @func_5263() /* ty=Tensor[(3, 6, 5), float64] */;
  %941 = %938.0;
  %942 = %939.2;
  (%940, %941, %942)
}

def @func_13019() -> (Tensor[(3, 6, 5), float64],) {
  %943 = @func_4175() /* ty=(Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %944 = %943.2;
  (%944,)
}

def @func_16416() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %945 = @func_2699() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %946 = @func_4175() /* ty=(Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %947 = %945.0;
  %948 = %946.2;
  (%947, %948)
}

def @func_8757() -> Tensor[(3, 6, 5), float64] {
  %949 = @func_8375() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %949.0
}

def @func_11073(%var_11039: Tensor[(1170), bool]) -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64], Tensor[(4, 9, 8), bool], Tensor[(288), uint64], Tensor[(3, 6, 5), float32], Tensor[(1170), bool], Tensor[(2, 1040), int64]) {
  %950 = @func_7434() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %951 = @func_4075() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) */;
  %952 = @func_7092() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %953 = cast(meta[relay.Constant][31] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %954 = cast(meta[relay.Constant][31] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %955 = reshape(%953, newshape=[4, 9, 8]) /* ty=Tensor[(4, 9, 8), uint64] */;
  %956 = reshape(%954, newshape=[4, 9, 8]) /* ty=Tensor[(4, 9, 8), uint64] */;
  %957 = cast(%var_11039, dtype="bool") /* ty=Tensor[(1170), bool] */;
  %958 = reshape(%957, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), bool] */;
  %959 = @func_5387(%958) /* ty=(Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), int32], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), bool], Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float32]) */;
  %960 = @func_4789() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) */;
  %961 = %950.1;
  %962 = @func_4723() /* ty=Tensor[(3, 6, 5), float64] */;
  %963 = %951.1;
  %964 = %952.0;
  %965 = @func_7712(%955, %956) /* ty=Tensor[(4, 9, 8), bool] */;
  %966 = %959.5;
  %967 = %960.2;
  (%961, %962, %963, %964, %965, meta[relay.Constant][31] /* ty=Tensor[(288), uint64] */, %966, %var_11039, %967)
}

def @func_13607() -> (Tensor[(792), float64],) {
  %968 = @func_11175() /* ty=(Tensor[(792), float64],) */;
  %969 = %968.0;
  (%969,)
}

def @func_5808() -> (Tensor[(6, 16, 5), int8],) {
  %970 = @func_4570() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %971 = %970.4;
  (%971,)
}

def @func_3182() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) {
  %972 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %973 = cast(meta[relay.Constant][32] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %974 = reshape(%973, newshape=[2, 1040]) /* ty=Tensor[(2, 1040), int64] */;
  %975 = @func_3095(%974) /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(3, 6, 5), float64]) */;
  %976 = cast(meta[relay.Constant][33] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %977 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(2080), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %978 = cast(meta[relay.Constant][32] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?), int64] */;
  %980 = %972.0;
  %981 = %975.2;
  %982 = add(%978, %979) /* ty=Tensor[(2080), int64] */;
  (%980, %981, %982)
}

def @func_7203() -> (Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) {
  %983 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %984 = cast(meta[relay.Constant][34] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %985 = reshape(%984, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %986 = @func_3276(%985) /* ty=(Tensor[(2080), bool],) */;
  %987 = %983.0;
  %988 = %986.0;
  (%987, %988, meta[relay.Constant][34] /* ty=Tensor[(2080), int64] */)
}

def @func_6431(%var_6409: Tensor[(70, 6), float32]) -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(70, 6), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %989 = cast(%var_6409, dtype="float32") /* ty=Tensor[(70, 6), float32] */;
  %990 = cast(%var_6409, dtype="float32") /* ty=Tensor[(70, 6), float32] */;
  %991 = reshape(%989, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
  %992 = reshape(%990, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
  %993 = @func_2516(%991, %992) /* ty=(Tensor[(5, 12, 7), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(3, 6, 5), float32]) */;
  %994 = @func_2860() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %995 = @func_5043() /* ty=Tensor[(792), int64] */;
  %996 = @func_5994() /* ty=Tensor[(3, 6, 5), float64] */;
  %997 = %993.2;
  %998 = @func_4668() /* ty=Tensor[(3, 6, 5), float64] */;
  %999 = %994.1;
  (%995, %996, %997, %var_6409, %998, %999)
}

def @func_16155(%var_16137: Tensor[(7, 9, 12), float64]) -> (Tensor[(7, 9, 12), float64],) {
  %1000 = cast(%var_16137, dtype="float64") /* ty=Tensor[(7, 9, 12), float64] */;
  %1001 = rsqrt(%1000) /* ty=Tensor[(7, 9, 12), float64] */;
  (%1001,)
}

def @func_12006() -> (Tensor[(3, 6, 5), float64],) {
  %1002 = @func_9855() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %1003 = %1002.0;
  (%1003,)
}

def @func_7742() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
  %1004 = @func_7434() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %1005 = %1004.0;
  %1006 = @func_4668() /* ty=Tensor[(3, 6, 5), float64] */;
  (%1005, %1006)
}

def @func_12354() -> Tensor[(3, 6, 5), int16] {
  %1007 = @func_5725() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), int16]) */;
  %1007.1
}

def @func_2238() -> (Tensor[(3, 6, 5), float64],) {
  %1008 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1009 = %1008.0;
  (%1009,)
}

def @func_10544() -> (Tensor[(15, 15, 14), float32], Tensor[(5, 9, 7), float64]) {
  %1010 = @func_4287() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(15, 15, 14), float32], Tensor[(2080), int64], Tensor[(3, 6, 5), float64]) */;
  %1011 = %1010.1;
  %1012 = @func_2976() /* ty=Tensor[(5, 9, 7), float64] */;
  (%1011, %1012)
}

def @func_5115() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(770), uint64]) {
  %1013 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1014 = %1013.0;
  %1015 = cast(%1014, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
  %1016 = cast(meta[relay.Constant][35] /* ty=Tensor[(770), uint64] */, dtype="uint64") /* ty=Tensor[(770), uint64] */;
  %1017 = reshape(%1016, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), uint64] */;
  %1018 = @func_72(%1017) /* ty=(Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) */;
  %1019 = @func_4723() /* ty=Tensor[(3, 6, 5), float64] */;
  %1020 = log2(%1015) /* ty=Tensor[(3, 6, 5), float32] */;
  %1021 = %1018.2;
  (%1019, %1020, %1021, meta[relay.Constant][35] /* ty=Tensor[(770), uint64] */)
}

def @func_9670(%var_9662: Tensor[(448), float64], %var_9663: Tensor[(2080), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(448), float64], Tensor[(2080), int64]) {
  %1022 = cast(%var_9662, dtype="float64") /* ty=Tensor[(448), float64] */;
  %1023 = cast(%var_9663, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %1024 = reshape(%1022, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %1025 = reshape(%1023, newshape=[1040, 2]) /* ty=Tensor[(1040, 2), int64] */;
  %1026 = @func_6551(%1024, %1025) /* ty=(Tensor[(6, 16, 5), float32], Tensor[(7, 8, 8), bool], Tensor[(448), float64], Tensor[(2, 1040), float64], Tensor[(1040, 2), int64], Tensor[(792), int64]) */;
  %1027 = @func_7138() /* ty=Tensor[(3, 6, 5), float64] */;
  %1028 = %1026.5;
  (%1027, %1028, %var_9662, %var_9663)
}

def @func_11382() -> Tensor[(3, 6, 5), float64] {
  %1029 = @func_8036() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1029.0
}

def @func_12550() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %1030 = @func_9885() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1031 = %1030.0;
  %1032 = @func_5994() /* ty=Tensor[(3, 6, 5), float64] */;
  (%1031, %1032)
}

def @func_9531() -> (Tensor[(792), int64],) {
  %1033 = @func_6196() /* ty=(Tensor[(792), int64], Tensor[(6, 16, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %1034 = %1033.0;
  (%1034,)
}

def @func_13115(%var_13107: Tensor[(770), uint64], %var_13108: Tensor[(1040, 2), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(770), uint64], Tensor[(1040, 2), float32]) {
  %1035 = cast(%var_13107, dtype="uint64") /* ty=Tensor[(770), uint64] */;
  %1036 = cast(%var_13108, dtype="int64") /* ty=Tensor[(1040, 2), int64] */;
  %1037 = reshape(%1035, newshape=[770]) /* ty=Tensor[(770), uint64] */;
  %1038 = reshape(%1036, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %1039 = @func_10392(%1037, %1038) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(770), uint64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64], Tensor[(792), int64]) */;
  %1040 = cast(%var_13108, dtype="float32") /* ty=Tensor[(1040, 2), float32] */;
  %1041 = @func_6893() /* ty=Tensor[(3, 6, 5), float64] */;
  %1042 = %1039.0;
  %1043 = log2(%1040) /* ty=Tensor[(1040, 2), float32] */;
  (%1041, %1042, %var_13107, %1043)
}

def @func_8375() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %1044 = @func_2349() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %1045 = @func_5115() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(770), uint64]) */;
  %1046 = %1044.0;
  %1047 = @func_5263() /* ty=Tensor[(3, 6, 5), float64] */;
  %1048 = %1045.0;
  (%1046, %1047, %1048)
}

def @func_12677() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) {
  %1049 = @func_7573() /* ty=(Tensor[(3, 6, 5), float32],) */;
  %1050 = @func_5286() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %1051 = %1049.0;
  %1052 = %1050.1;
  (%1051, %1052)
}

def @func_13501(%var_13484: Tensor[(13, 10, 16), int64], %var_13490: Tensor[(13, 10, 16), int64]) -> (Tensor[(13, 10, 16), float64], Tensor[(13, 10, 16), float32], Tensor[(3, 6, 5), int16]) {
  %1053 = @func_3595() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(2, 1040), int64]) */;
  %1054 = %1053.1;
  %1055 = cast(%var_13484, dtype="float64") /* ty=Tensor[(13, 10, 16), float64] */;
  %1056 = shape_of(%1054, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1057 = cast(%1054, dtype="float64") /* ty=Tensor[(13, 10, 16), float64] */;
  %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1059 = cast(%var_13490, dtype="float32") /* ty=Tensor[(13, 10, 16), float32] */;
  %1060 = shape_of(%var_13484, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1061 = cast(%var_13484, dtype="float32") /* ty=Tensor[(13, 10, 16), float32] */;
  %1062 = dyn.reshape(%1059, %1060, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1063 = @func_5725() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), int16]) */;
  %1064 = subtract(%1057, %1058) /* ty=Tensor[(13, 10, 16), float64] */;
  %1065 = divide(%1061, %1062) /* ty=Tensor[(13, 10, 16), float32] */;
  %1066 = %1063.1;
  (%1064, %1065, %1066)
}

def @func_14419() -> Tensor[(792), int64] {
  %1067 = @func_10463() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(420), float32]) */;
  %1067.0
}

def @func_7651() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float64]) {
  %1068 = @func_4452() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1069 = %1068.0;
  %1070 = cast(%1069, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %1071 = reshape(%1070, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
  %1072 = @func_5597() /* ty=(Tensor[(792), int64], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %1073 = %1072.4;
  %1074 = cast(%1073, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
  %1075 = log(%1074) /* ty=Tensor[(3, 6, 5), float32] */;
  %1076 = cast(%1075, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %1077 = @func_3836(%1071) /* ty=Tensor[(3, 6, 5), bool] */;
  %1078 = cos(%1076) /* ty=Tensor[(3, 6, 5), float64] */;
  (%1069, %1077, %1078)
}

def @func_6226(%var_6218: Tensor[(90), float64]) -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(90), float64], Tensor[(2080), int64]) {
  %1079 = @func_5597() /* ty=(Tensor[(792), int64], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %1080 = cast(%var_6218, dtype="float64") /* ty=Tensor[(90), float64] */;
  %1081 = cast(meta[relay.Constant][36] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %1082 = reshape(%1080, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
  %1083 = reshape(%1081, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %1084 = @func_3804(%1082, %1083) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(10, 7, 11), uint64], Tensor[(770), uint64]) */;
  %1085 = %1079.1;
  %1086 = %1084.3;
  (%1085, %1086, %var_6218, meta[relay.Constant][36] /* ty=Tensor[(2080), int64] */)
}

def @func_15059() -> Tensor[(3, 6, 5), float64] {
  %1087 = @func_13201() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1087.0
}

def @func_15619() -> Tensor[(3, 6, 5), float64] {
  @func_9156() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_11175() -> (Tensor[(792), float64],) {
  %1088 = @func_5043() /* ty=Tensor[(792), int64] */;
  %1089 = cast(%1088, dtype="float64") /* ty=Tensor[(792), float64] */;
  %1090 = sinh(%1089) /* ty=Tensor[(792), float64] */;
  (%1090,)
}

def @func_15611() -> Tensor[(5, 9, 7), float64] {
  %1091 = @func_10544() /* ty=(Tensor[(15, 15, 14), float32], Tensor[(5, 9, 7), float64]) */;
  %1091.1
}

def @func_8520() -> Tensor[(3, 6, 5), float32] {
  %1092 = @func_3595() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(2, 1040), int64]) */;
  %1092.0
}

def @func_2582() -> Tensor[(3, 6, 5), float64] {
  %1093 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1093.0
}

def @func_6598() -> Tensor[(3, 6, 5), float64] {
  %1094 = @func_5705() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %1094.1
}

def @func_12896() -> Tensor[(3, 6, 5), float64] {
  @func_2735() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_2283() -> (Tensor[(3, 6, 5), float64],) {
  %1095 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
  %1096 = %1095.0;
  (%1096,)
}

def @func_2928(%var_2907: Tensor[(15, 6, 13), bool]) -> (Tensor[(15, 6, 13), bool], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(792), int32], Tensor[(420), float32]) {
  %1097 = cast(%var_2907, dtype="bool") /* ty=Tensor[(15, 6, 13), bool] */;
  %1098 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(15, 6, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1099 = cast(meta[relay.Constant][37] /* ty=Tensor[(15, 6, 13), bool] */, dtype="bool") /* ty=Tensor[(15, 6, 13), bool] */;
  %1100 = dyn.reshape(%1097, %1098, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1101 = cast(meta[relay.Constant][38] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %1102 = cast(meta[relay.Constant][38] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %1103 = reshape(%1101, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %1104 = reshape(%1102, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %1105 = cast(meta[relay.Constant][39] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1106 = cast(meta[relay.Constant][39] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1107 = reshape(%1105, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
  %1108 = reshape(%1106, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
  %1109 = @func_2516(%1107, %1108) /* ty=(Tensor[(5, 12, 7), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(3, 6, 5), float32]) */;
  %1110 = logical_and(%1099, %1100) /* ty=Tensor[(15, 6, 13), bool] */;
  %1111 = @func_20(%1103, %1104) /* ty=Tensor[(13, 10, 16), int64] */;
  %1112 = %1109.2;
  (%1110, %1111, meta[relay.Constant][38] /* ty=Tensor[(2080), int64] */, %1112, meta[relay.Constant][39] /* ty=Tensor[(420), float32] */)
}

def @func_11642() -> Tensor[(3, 6, 5), float64] {
  %1113 = @func_2349() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %1113.1
}

def @func_11918(%var_11898: Tensor[(420), float32]) -> (Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(420), float32]) {
  %1114 = @func_5705() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %1115 = cast(%var_11898, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1116 = cast(%var_11898, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1117 = reshape(%1115, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
  %1118 = reshape(%1116, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
  %1119 = @func_2516(%1117, %1118) /* ty=(Tensor[(5, 12, 7), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(3, 6, 5), float32]) */;
  %1120 = %1114.0;
  %1121 = %1119.2;
  (%1120, %1121, %var_11898)
}

def @func_15983() -> (Tensor[(5, 9, 7), float64], Tensor[(2080), bool]) {
  %1122 = @func_15951() /* ty=(Tensor[(3, 6, 5), bool], Tensor[(5, 9, 7), float64]) */;
  %1123 = @func_7203() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) */;
  %1124 = %1122.1;
  %1125 = %1123.1;
  (%1124, %1125)
}

def @func_1663(%var_1634: Tensor[(11, 8, 9), int64]) -> Tensor[(11, 8, 9), uint8] {
  %1126 = cast(%var_1634, dtype="int64") /* ty=Tensor[(11, 8, 9), int64] */;
  %1127 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(11, 8, 9), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1128 = cast(meta[relay.Constant][40] /* ty=Tensor[(11, 8, 9), int64] */, dtype="int64") /* ty=Tensor[(11, 8, 9), int64] */;
  %1129 = dyn.reshape(%1126, %1127, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1130 = multiply(%1128, %1129) /* ty=Tensor[(11, 8, 9), int64] */;
  %1131 = cast(%1130, dtype="uint8") /* ty=Tensor[(11, 8, 9), uint8] */;
  %1132 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(11, 8, 9), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1133 = cast(meta[relay.Constant][40] /* ty=Tensor[(11, 8, 9), int64] */, dtype="uint8") /* ty=Tensor[(11, 8, 9), uint8] */;
  %1134 = dyn.reshape(%1131, %1132, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%1133, %1134) /* ty=Tensor[(11, 8, 9), uint8] */
}

def @func_16130() -> (Tensor[(3, 6, 5), float64],) {
  %1135 = @func_9885() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1136 = %1135.0;
  (%1136,)
}

def @func_72(%var_43: Tensor[(10, 7, 11), uint64]) -> (Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) {
  %1137 = cast(meta[relay.Constant][41] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1138 = cast(%var_43, dtype="uint64") /* ty=Tensor[(10, 7, 11), uint64] */;
  %1139 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 2080), int64] */, dtype="int64") /* ty=Tensor[(1, 2080), int64] */;
  %1140 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 2080), int64] */, dtype="int64") /* ty=Tensor[(1, 2080), int64] */;
  %1141 = reshape(%1139, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %1142 = reshape(%1140, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %1143 = @func_20(%1141, %1142) /* ty=Tensor[(13, 10, 16), int64] */;
  %1144 = cast(%1143, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %1145 = cast(%1143, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %1146 = reshape(%1144, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %1147 = reshape(%1145, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %1148 = subtract(%1137, %1138) /* ty=Tensor[(10, 7, 11), uint64] */;
  %1149 = @func_20(%1146, %1147) /* ty=Tensor[(13, 10, 16), int64] */;
  (%1148, %1143, meta[relay.Constant][42] /* ty=Tensor[(1, 2080), int64] */, %1149)
}

def @func_3804(%var_3748: Tensor[(3, 6, 5), float64], %var_3759: Tensor[(2080), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(10, 7, 11), uint64], Tensor[(770), uint64]) {
  %1150 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  %1151 = cast(%var_3748, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %1152 = shape_of(%1150, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1153 = cast(%1150, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %1154 = dyn.reshape(%1151, %1152, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1155 = cast(%var_3759, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %1156 = reshape(%1155, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %1157 = @func_3276(%1156) /* ty=(Tensor[(2080), bool],) */;
  %1158 = cast(meta[relay.Constant][43] /* ty=Tensor[(770), uint64] */, dtype="uint64") /* ty=Tensor[(770), uint64] */;
  %1159 = reshape(%1158, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), uint64] */;
  %1160 = @func_72(%1159) /* ty=(Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) */;
  %1161 = mod(%1153, %1154) /* ty=Tensor[(3, 6, 5), float64] */;
  %1162 = %1157.0;
  %1163 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  %1164 = %1160.0;
  (%1161, %1162, %var_3759, %1163, %1164, meta[relay.Constant][43] /* ty=Tensor[(770), uint64] */)
}

def @func_10463() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(420), float32]) {
  %1165 = @func_7092() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %1166 = cast(meta[relay.Constant][44] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1167 = reshape(%1166, newshape=[70, 6]) /* ty=Tensor[(70, 6), float32] */;
  %1168 = @func_6431(%1167) /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(70, 6), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %1169 = %1165.1;
  %1170 = %1168.5;
  (%1169, %1170, meta[relay.Constant][44] /* ty=Tensor[(420), float32] */)
}

def @func_14535() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) {
  %1171 = @func_8431() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1172 = %1171.0;
  %1173 = @func_8832() /* ty=Tensor[(3, 6, 5), bool] */;
  (%1172, %1173)
}

def @func_5043() -> Tensor[(792), int64] {
  %1174 = @func_2860() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %1174.0
}

def @func_14859() -> (Tensor[(3, 6, 5), bool],) {
  %1175 = @func_14535() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) */;
  %1176 = %1175.1;
  (%1176,)
}

def @func_14891() -> (Tensor[(3, 6, 5), bool],) {
  %1177 = @func_8832() /* ty=Tensor[(3, 6, 5), bool] */;
  (%1177,)
}

def @func_12283(%var_12253: Tensor[(1170), bool]) -> (Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(1170), bool], Tensor[(3, 6, 5), float64]) {
  %1178 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1179 = cast(%var_12253, dtype="bool") /* ty=Tensor[(1170), bool] */;
  %1180 = reshape(%1179, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), bool] */;
  %1181 = @func_2928(%1180) /* ty=(Tensor[(15, 6, 13), bool], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(792), int32], Tensor[(420), float32]) */;
  %1182 = @func_7742() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %1183 = %1178.0;
  %1184 = %1181.1;
  %1185 = %1182.1;
  (%1183, %1184, %var_12253, %1185)
}

def @func_5771() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %1186 = @func_2349() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %1187 = @func_5481() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1188 = %1186.1;
  %1189 = %1187.0;
  (%1188, %1189)
}

def @func_3547(%var_3530: Tensor[(7, 8, 8), float64]) -> (Tensor[(7, 8, 8), bool], Tensor[(7, 8, 8), int32]) {
  %1190 = cast(%var_3530, dtype="float64") /* ty=Tensor[(7, 8, 8), float64] */;
  %1191 = sigmoid(%1190) /* ty=Tensor[(7, 8, 8), float64] */;
  %1192 = cast(%1191, dtype="bool") /* ty=Tensor[(7, 8, 8), bool] */;
  %1193 = shape_of(%var_3530, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1194 = cast(%var_3530, dtype="bool") /* ty=Tensor[(7, 8, 8), bool] */;
  %1195 = dyn.reshape(%1192, %1193, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1196 = cast(%var_3530, dtype="int32") /* ty=Tensor[(7, 8, 8), int32] */;
  %1197 = shape_of(%1191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1198 = cast(%1191, dtype="int32") /* ty=Tensor[(7, 8, 8), int32] */;
  %1199 = dyn.reshape(%1196, %1197, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1200 = not_equal(%1194, %1195) /* ty=Tensor[(7, 8, 8), bool] */;
  %1201 = subtract(%1198, %1199) /* ty=Tensor[(7, 8, 8), int32] */;
  (%1200, %1201)
}

def @func_2860() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
  %1202 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
  %1203 = @func_2354() /* ty=Tensor[(792), int64] */;
  %1204 = %1202.0;
  (%1203, %1204)
}

def @func_11232(%var_11224: float64, %var_11225: Tensor[(14, 5, 12), float64]) -> Tensor[(14, 5, 12), float64] {
  %1205 = cast(%var_11224, dtype="float64") /* ty=float64 */;
  %1206 = cast(%var_11225, dtype="float64") /* ty=Tensor[(14, 5, 12), float64] */;
  mod(%1205, %1206) /* ty=Tensor[(14, 5, 12), float64] */
}

def @func_7764() -> (Tensor[(3, 6, 5), float64],) {
  %1207 = @func_4287() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(15, 15, 14), float32], Tensor[(2080), int64], Tensor[(3, 6, 5), float64]) */;
  %1208 = %1207.0;
  (%1208,)
}

def @func_6787() -> (Tensor[(6, 16, 5), float32],) {
  %1209 = @func_6196() /* ty=(Tensor[(792), int64], Tensor[(6, 16, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %1210 = %1209.1;
  (%1210,)
}

def @func_5252() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) {
  %1211 = @func_4447() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %1212 = %1211.0;
  %1213 = cast(%1212, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
  %1214 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  %1215 = sigmoid(%1213) /* ty=Tensor[(3, 6, 5), float32] */;
  (%1214, %1215)
}

def @func_7871(%var_7855: Tensor[(1, 10, 2), float64]) -> (Tensor[(1, 10, 2), float64],) {
  %1216 = cast(%var_7855, dtype="float64") /* ty=Tensor[(1, 10, 2), float64] */;
  %1217 = log2(%1216) /* ty=Tensor[(1, 10, 2), float64] */;
  (%1217,)
}

def @func_7401(%var_7376: Tensor[(1170), bool]) -> (Tensor[(3, 6, 5), float32], Tensor[(7, 8, 8), int32], Tensor[(448), float64], Tensor[(792), int64], Tensor[(792), int32], Tensor[(1170), bool], Tensor[(1040, 2), float32]) {
  %1218 = @func_7173() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(5, 234), bool]) */;
  %1219 = cast(meta[relay.Constant][45] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %1220 = reshape(%1219, newshape=[7, 8, 8]) /* ty=Tensor[(7, 8, 8), float64] */;
  %1221 = @func_3547(%1220) /* ty=(Tensor[(7, 8, 8), bool], Tensor[(7, 8, 8), int32]) */;
  %1222 = @func_5705() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %1223 = cast(%var_7376, dtype="bool") /* ty=Tensor[(1170), bool] */;
  %1224 = reshape(%1223, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), bool] */;
  %1225 = @func_2928(%1224) /* ty=(Tensor[(15, 6, 13), bool], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(792), int32], Tensor[(420), float32]) */;
  %1226 = @func_4695() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(1040, 2), int64]) */;
  %1227 = %1226.3;
  %1228 = cast(%1227, dtype="float32") /* ty=Tensor[(1040, 2), float32] */;
  %1229 = log10(%1228) /* ty=Tensor[(1040, 2), float32] */;
  %1230 = cast(%1229, dtype="float32") /* ty=Tensor[(1040, 2), float32] */;
  %1231 = %1218.2;
  %1232 = %1221.1;
  %1233 = %1222.2;
  %1234 = %1225.3;
  %1235 = cos(%1230) /* ty=Tensor[(1040, 2), float32] */;
  (%1231, %1232, meta[relay.Constant][45] /* ty=Tensor[(448), float64] */, %1233, %1234, %var_7376, %1235)
}

def @func_10419() -> (Tensor[(3, 6, 5), float64],) {
  %1236 = @func_4452() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1237 = %1236.0;
  (%1237,)
}

def @func_9252() -> (Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(70, 6), float32], Tensor[(420), float32]) {
  %1238 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1239 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 2080), int64] */, dtype="int64") /* ty=Tensor[(1, 2080), int64] */;
  %1240 = reshape(%1239, newshape=[2, 1040]) /* ty=Tensor[(2, 1040), int64] */;
  %1241 = @func_3095(%1240) /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(3, 6, 5), float64]) */;
  %1242 = cast(meta[relay.Constant][47] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1243 = reshape(%1242, newshape=[70, 6]) /* ty=Tensor[(70, 6), float32] */;
  %1244 = @func_6431(%1243) /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(70, 6), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %1245 = @func_2685() /* ty=Tensor[(6, 16, 5), int8] */;
  %1246 = %1238.0;
  %1247 = %1241.0;
  %1248 = %1244.3;
  (%1245, %1246, %1247, meta[relay.Constant][46] /* ty=Tensor[(1, 2080), int64] */, %1248, meta[relay.Constant][47] /* ty=Tensor[(420), float32] */)
}

def @func_2354() -> Tensor[(792), int64] {
  %1249 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
  %1249.2
}

def @func_7692() -> (Tensor[(792), int64],) {
  %1250 = @func_7434() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %1251 = %1250.0;
  (%1251,)
}

def @func_15864() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) {
  %1252 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1253 = @func_8520() /* ty=Tensor[(3, 6, 5), float32] */;
  %1254 = %1252.0;
  (%1253, %1254)
}

def @func_4695() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(1040, 2), int64]) {
  %1255 = @func_4227() /* ty=(Tensor[(792), int64],) */;
  %1256 = cast(meta[relay.Constant][48] /* ty=Tensor[(1040, 2), int64] */, dtype="int64") /* ty=Tensor[(1040, 2), int64] */;
  %1257 = reshape(%1256, newshape=[2, 1040]) /* ty=Tensor[(2, 1040), int64] */;
  %1258 = @func_3095(%1257) /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(3, 6, 5), float64]) */;
  %1259 = %1255.0;
  %1260 = @func_2735() /* ty=Tensor[(3, 6, 5), float64] */;
  %1261 = %1258.4;
  (%1259, %1260, %1261, meta[relay.Constant][48] /* ty=Tensor[(1040, 2), int64] */)
}

def @func_5263() -> Tensor[(3, 6, 5), float64] {
  %1262 = @func_3182() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */;
  %1262.1
}

def @func_9855() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  %1263 = @func_9275() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1264 = @func_4364() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1265 = @func_3863() /* ty=(Tensor[(792), int64],) */;
  %1266 = %1263.0;
  %1267 = %1264.0;
  %1268 = %1265.0;
  (%1266, %1267, %1268)
}

def @func_15478() -> (Tensor[(3, 6, 5), float64],) {
  %1269 = @func_10527() /* ty=(Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %1270 = %1269.1;
  (%1270,)
}

def @func_7851(%var_7837: Tensor[(770), uint64]) -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(770), uint64], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64]) {
  %1271 = @func_7434() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %1272 = cast(%var_7837, dtype="uint64") /* ty=Tensor[(770), uint64] */;
  %1273 = reshape(%1272, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), uint64] */;
  %1274 = @func_72(%1273) /* ty=(Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) */;
  %1275 = cast(%var_7837, dtype="uint64") /* ty=Tensor[(770), uint64] */;
  %1276 = reshape(%1275, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), uint64] */;
  %1277 = @func_72(%1276) /* ty=(Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) */;
  %1278 = @func_4452() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1279 = @func_4925() /* ty=Tensor[(3, 6, 5), float64] */;
  %1280 = %1271.1;
  %1281 = %1274.3;
  %1282 = %1277.3;
  %1283 = %1278.0;
  (%1279, %1280, %1281, %var_7837, %1282, %1283)
}

def @func_6149() -> (Tensor[(792), int64],) {
  %1284 = @func_3863() /* ty=(Tensor[(792), int64],) */;
  %1285 = %1284.0;
  (%1285,)
}

def @func_2735() -> Tensor[(3, 6, 5), float64] {
  %1286 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1286.0
}

def @func_2811() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) {
  %1287 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1288 = %1287.0;
  %1289 = cast(%1288, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
  %1290 = acos(%1289) /* ty=Tensor[(3, 6, 5), float32] */;
  %1291 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  (%1290, %1291)
}

def @func_4925() -> Tensor[(3, 6, 5), float64] {
  %1292 = @func_2876() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) */;
  %1292.0
}

def @func_5725() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), int16]) {
  %1293 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  %1294 = cast(%1293, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %1295 = reshape(%1294, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
  %1296 = @func_4972(%1295) /* ty=(Tensor[(3, 6, 5), int16],) */;
  %1297 = %1296.0;
  (%1293, %1297)
}

def @func_3095(%var_3053: Tensor[(2, 1040), int64]) -> (Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(3, 6, 5), float64]) {
  %1298 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %1299 = cast(%var_3053, dtype="int64") /* ty=Tensor[(2, 1040), int64] */;
  %1300 = reshape(%1299, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %1301 = @func_642(%1300) /* ty=(Tensor[(10, 5, 9), float64], Tensor[(770), uint64], Tensor[(13, 10, 16), int16], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64]) */;
  %1302 = @func_2876() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) */;
  %1303 = cast(%var_3053, dtype="float64") /* ty=Tensor[(2, 1040), float64] */;
  %1304 = log10(%1303) /* ty=Tensor[(2, 1040), float64] */;
  %1305 = cast(%1304, dtype="float32") /* ty=Tensor[(2, 1040), float32] */;
  %1306 = asinh(%1305) /* ty=Tensor[(2, 1040), float32] */;
  %1307 = cast(%1306, dtype="float32") /* ty=Tensor[(2, 1040), float32] */;
  %1308 = acosh(%1307) /* ty=Tensor[(2, 1040), float32] */;
  %1309 = cast(%1308, dtype="float64") /* ty=Tensor[(2, 1040), float64] */;
  %1310 = @func_2349() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %1311 = %1298.0;
  %1312 = %1301.5;
  %1313 = %1302.0;
  %1314 = sqrt(%1309) /* ty=Tensor[(2, 1040), float64] */;
  %1315 = %1310.1;
  (%1311, %1312, %1313, %1314, %1315)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_13553() -> Tensor[(792), float32] {
  %3 = fn () -> Tensor[(792), float32] {
    %0 = @func_6356() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
    %1 = %0.0;
    %2 = cast(%1, dtype="float32") /* ty=Tensor[(792), float32] */;
    atanh(%2) /* ty=Tensor[(792), float32] */
  };
  %3() /* ty=Tensor[(792), float32] */
}

def @func_13946(%var_13941: Tensor[(3, 6, 5), float64]) -> (Tensor[(3, 6, 5), uint64],) {
  %4 = @func_12995() /* ty=Tensor[(3, 6, 5), float64] */;
  %5 = cast(%var_13941, dtype="uint64") /* ty=Tensor[(3, 6, 5), uint64] */;
  %6 = shape_of(%4, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%4, dtype="uint64") /* ty=Tensor[(3, 6, 5), uint64] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %9 = right_shift(%7, %8) /* ty=Tensor[(3, 6, 5), uint64] */;
  (%9,)
}

def @func_14574() -> (Tensor[(792), int64], Tensor[(792), int64]) {
  %10 = @func_12365() /* ty=(Tensor[(792), int64],) */;
  %11 = @func_6356() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %12 = %10.0;
  %13 = %11.3;
  (%12, %13)
}

def @func_15479() -> (Tensor[(3, 6, 5), float64],) {
  %16 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %14 = @func_10527() /* ty=(Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %15 = %14.1;
    (%15,)
  };
  %16() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_4669() -> Tensor[(3, 6, 5), float64] {
  %18 = fn () -> Tensor[(3, 6, 5), float64] {
    %17 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %17.0
  };
  %18() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_13623() -> Tensor[(792), int64] {
  %19 = @func_4227() /* ty=(Tensor[(792), int64],) */;
  %19.0
}

def @func_7712(%var_7707: Tensor[(4, 9, 8), uint64], %var_7708: Tensor[(4, 9, 8), uint64]) -> Tensor[(4, 9, 8), bool] {
  %20 = cast(%var_7708, dtype="bool") /* ty=Tensor[(4, 9, 8), bool] */;
  %21 = shape_of(%var_7707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %22 = cast(%var_7707, dtype="bool") /* ty=Tensor[(4, 9, 8), bool] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%22, %23) /* ty=Tensor[(4, 9, 8), bool] */
}

def @func_3399() -> (Tensor[(3, 6, 5), float64],) {
  %26 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %24 = @func_2860() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
    %25 = %24.1;
    (%25,)
  };
  %26() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_8757() -> Tensor[(3, 6, 5), float64] {
  %27 = @func_8375() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %27.0
}

def @func_7871(%var_7855: Tensor[(1, 10, 2), float64]) -> (Tensor[(1, 10, 2), float64],) {
  %28 = cast(%var_7855, dtype="float64") /* ty=Tensor[(1, 10, 2), float64] */;
  %29 = log2(%28) /* ty=Tensor[(1, 10, 2), float64] */;
  (%29,)
}

def @func_4449() -> (Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  @func_4447() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */
}

def @func_11635() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  %30 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %31 = @func_7507() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8]) */;
  %32 = %30.0;
  %33 = %31.2;
  %34 = @func_7128() /* ty=Tensor[(792), int64] */;
  (%32, %33, %34)
}

def @func_2878() -> (Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) {
  @func_2876() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) */
}

def @func_2687() -> Tensor[(6, 16, 5), int8] {
  @func_2685() /* ty=Tensor[(6, 16, 5), int8] */
}

def @func_14537() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) {
  @func_14535() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) */
}

def @func_13235() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  %35 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %36 = @func_10217() /* ty=(Tensor[(420), float32], Tensor[(3, 6, 5), float32], Tensor[(792), int64]) */;
  %37 = @func_5263() /* ty=Tensor[(3, 6, 5), float64] */;
  %38 = %35.0;
  %39 = %36.2;
  (%37, %38, %39)
}

def @func_9885() -> (Tensor[(3, 6, 5), float64],) {
  %40 = @func_4192() /* ty=Tensor[(3, 6, 5), float64] */;
  (%40,)
}

def @func_13683() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(1, 13, 8), int64], Tensor[(104), uint32], Tensor[(792), int64]) {
  @func_13681() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(1, 13, 8), int64], Tensor[(104), uint32], Tensor[(792), int64]) */
}

def @func_6770(%var_6698: Tensor[(6, 16, 5), float32]) -> (Tensor[(6, 16, 5), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) {
  %41 = @func_6196() /* ty=(Tensor[(792), int64], Tensor[(6, 16, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %42 = %41.1;
  %43 = cast(%var_6698, dtype="bool") /* ty=Tensor[(6, 16, 5), bool] */;
  %44 = shape_of(%42, dtype="int32") /* ty=Tensor[(3), int32] */;
  %45 = cast(%42, dtype="bool") /* ty=Tensor[(6, 16, 5), bool] */;
  %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %47 = @func_4012() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %48 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %49 = %48.0;
  %50 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  %51 = cast(%50, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
  %52 = shape_of(%49, dtype="int32") /* ty=Tensor[(3), int32] */;
  %53 = cast(%49, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
  %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %55 = equal(%45, %46) /* ty=Tensor[(6, 16, 5), bool] */;
  %56 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  %57 = %47.0;
  %58 = less_equal(%53, %54) /* ty=Tensor[(3, 6, 5), bool] */;
  (%55, %56, %57, %58)
}

def @func_4571() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) {
  %72 = fn () -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) {
    %59 = @func_4075() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) */;
    %60 = %59.0;
    %61 = cast(%60, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
    %62 = @func_2699() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %63 = cast(meta[relay.Constant][0] /* ty=Tensor[(792), int64] */, dtype="int64") /* ty=Tensor[(792), int64] */;
    %64 = reshape(%63, newshape=[11, 8, 9]) /* ty=Tensor[(11, 8, 9), int64] */;
    %65 = @func_4075() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) */;
    %66 = @func_4364() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %67 = sqrt(%61) /* ty=Tensor[(3, 6, 5), float32] */;
    %68 = %62.0;
    %69 = @func_1663(%64) /* ty=Tensor[(11, 8, 9), uint8] */;
    %70 = %65.1;
    %71 = %66.0;
    (%67, %68, %69, meta[relay.Constant][0] /* ty=Tensor[(792), int64] */, %70, %71)
  };
  %72() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */
}

def @func_75(%var_73: Tensor[(10, 7, 11), uint64]) -> (Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) {
  @func_72(%var_73) /* ty=(Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) */
}

def @func_14441() -> Tensor[(3, 6, 5), float64] {
  %74 = fn () -> Tensor[(3, 6, 5), float64] {
    %73 = @func_7310() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %73.1
  };
  %74() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_12356() -> Tensor[(3, 6, 5), int16] {
  @func_12354() /* ty=Tensor[(3, 6, 5), int16] */
}

def @func_14592() -> (Tensor[(3, 6, 5), bool], Tensor[(5, 9, 7), float64], Tensor[(420), float32]) {
  %75 = @func_10544() /* ty=(Tensor[(15, 15, 14), float32], Tensor[(5, 9, 7), float64]) */;
  %76 = @func_5529() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(5, 12, 7), float32], Tensor[(420), float32]) */;
  %77 = @func_8832() /* ty=Tensor[(3, 6, 5), bool] */;
  %78 = %75.1;
  %79 = %76.2;
  (%77, %78, %79)
}

def @func_16130() -> (Tensor[(3, 6, 5), float64],) {
  %80 = @func_9885() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %81 = %80.0;
  (%81,)
}

def @func_5265() -> Tensor[(3, 6, 5), float64] {
  @func_5263() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_2813() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) {
  @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */
}

def @func_1663(%var_1634: Tensor[(11, 8, 9), int64]) -> Tensor[(11, 8, 9), uint8] {
  %82 = cast(%var_1634, dtype="int64") /* ty=Tensor[(11, 8, 9), int64] */;
  %83 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(11, 8, 9), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 8, 9), int64] */, dtype="int64") /* ty=Tensor[(11, 8, 9), int64] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %86 = multiply(%84, %85) /* ty=Tensor[(11, 8, 9), int64] */;
  %87 = cast(%86, dtype="uint8") /* ty=Tensor[(11, 8, 9), uint8] */;
  %88 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(11, 8, 9), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 8, 9), int64] */, dtype="uint8") /* ty=Tensor[(11, 8, 9), uint8] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%89, %90) /* ty=Tensor[(11, 8, 9), uint8] */
}

def @func_12283(%var_12253: Tensor[(1170), bool]) -> (Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(1170), bool], Tensor[(3, 6, 5), float64]) {
  %91 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %92 = cast(%var_12253, dtype="bool") /* ty=Tensor[(1170), bool] */;
  %93 = reshape(%92, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), bool] */;
  %94 = @func_2928(%93) /* ty=(Tensor[(15, 6, 13), bool], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(792), int32], Tensor[(420), float32]) */;
  %95 = @func_7742() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %96 = %91.0;
  %97 = %94.1;
  %98 = %95.1;
  (%96, %97, %var_12253, %98)
}

def @func_5038() -> (Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(6, 16, 5), int8]) {
  %99 = @func_3182() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */;
  %100 = cast(meta[relay.Constant][2] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %101 = cast(meta[relay.Constant][2] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %102 = reshape(%100, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %103 = reshape(%101, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %104 = %99.1;
  %105 = @func_20(%102, %103) /* ty=Tensor[(13, 10, 16), int64] */;
  %106 = @func_2685() /* ty=Tensor[(6, 16, 5), int8] */;
  (%104, %105, meta[relay.Constant][2] /* ty=Tensor[(2080), int64] */, %106)
}

def @func_7573() -> (Tensor[(3, 6, 5), float32],) {
  %107 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %108 = %107.0;
  (%108,)
}

def @func_645(%var_643: Tensor[(13, 10, 16), int64]) -> (Tensor[(10, 5, 9), float64], Tensor[(770), uint64], Tensor[(13, 10, 16), int16], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64]) {
  @func_642(%var_643) /* ty=(Tensor[(10, 5, 9), float64], Tensor[(770), uint64], Tensor[(13, 10, 16), int16], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64]) */
}

def @func_11812() -> Tensor[(3, 6, 5), float64] {
  %110 = fn () -> Tensor[(3, 6, 5), float64] {
    %109 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %109.0
  };
  %110() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_7575() -> (Tensor[(3, 6, 5), float32],) {
  @func_7573() /* ty=(Tensor[(3, 6, 5), float32],) */
}

def @func_2211() -> (Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) {
  @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */
}

def @func_9352() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %114 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
    %111 = @func_5705() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
    %112 = %111.1;
    %113 = @func_8450() /* ty=Tensor[(3, 6, 5), float64] */;
    (%112, %113)
  };
  %114() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_7312() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  @func_7310() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_6825() -> Tensor[(3, 6, 5), float64] {
  %115 = @func_5931() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %115.1
}

def @func_13505(%var_13503: Tensor[(13, 10, 16), int64], %var_13504: Tensor[(13, 10, 16), int64]) -> (Tensor[(13, 10, 16), float64], Tensor[(13, 10, 16), float32], Tensor[(3, 6, 5), int16]) {
  @func_13501(%var_13503, %var_13504) /* ty=(Tensor[(13, 10, 16), float64], Tensor[(13, 10, 16), float32], Tensor[(3, 6, 5), int16]) */
}

def @func_7766() -> (Tensor[(3, 6, 5), float64],) {
  @func_7764() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_15506() -> Tensor[(3, 6, 5), float64] {
  %116 = @func_10527() /* ty=(Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %116.2
}

def @func_8291(%var_8287: Tensor[(16, 7, 10), float64], %var_8288: Tensor[(16, 7, 10), float64], %var_8289: Tensor[(2, 1040), int64], %var_8290: Tensor[(480), int64]) -> (Tensor[(16, 7, 10), float32], Tensor[(16, 7, 10), bool], Tensor[(16, 7, 10), float32], Tensor[(2, 1040), bool], Tensor[(16, 7, 10), float64], Tensor[(2, 15, 16), int64], Tensor[(480), int64], Tensor[(3, 6, 5), float64], Tensor[(16, 7, 10), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  @func_8285(%var_8287, %var_8288, %var_8289, %var_8290) /* ty=(Tensor[(16, 7, 10), float32], Tensor[(16, 7, 10), bool], Tensor[(16, 7, 10), float32], Tensor[(2, 1040), bool], Tensor[(16, 7, 10), float64], Tensor[(2, 15, 16), int64], Tensor[(480), int64], Tensor[(3, 6, 5), float64], Tensor[(16, 7, 10), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_2685() -> Tensor[(6, 16, 5), int8] {
  %117 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 16, 5), float32] */, dtype="float32") /* ty=Tensor[(6, 16, 5), float32] */;
  %118 = tan(%117) /* ty=Tensor[(6, 16, 5), float32] */;
  %119 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 16, 5), float32] */, dtype="int8") /* ty=Tensor[(6, 16, 5), int8] */;
  %120 = shape_of(%118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %121 = cast(%118, dtype="int8") /* ty=Tensor[(6, 16, 5), int8] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%121, %122) /* ty=Tensor[(6, 16, 5), int8] */
}

def @func_7509() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8]) {
  @func_7507() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8]) */
}

def @func_8602() -> (Tensor[(2, 1040), bool], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32]) {
  %123 = @func_4789() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) */;
  %124 = %123.2;
  %125 = cast(%124, dtype="float64") /* ty=Tensor[(2, 1040), float64] */;
  %126 = sigmoid(%125) /* ty=Tensor[(2, 1040), float64] */;
  %127 = cast(%124, dtype="bool") /* ty=Tensor[(2, 1040), bool] */;
  %128 = shape_of(%126, dtype="int32") /* ty=Tensor[(2), int32] */;
  %129 = cast(%126, dtype="bool") /* ty=Tensor[(2, 1040), bool] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %131 = @func_5252() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) */;
  %132 = greater_equal(%129, %130) /* ty=Tensor[(2, 1040), bool] */;
  %133 = @func_8520() /* ty=Tensor[(3, 6, 5), float32] */;
  %134 = %131.1;
  (%132, %133, %134)
}

def @func_11637() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  @func_11635() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */
}

def @func_11549() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(420), float32], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) {
  @func_11547() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(420), float32], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */
}

def @func_14503() -> Tensor[(3, 6, 5), float64] {
  @func_6598() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_9673(%var_9671: Tensor[(448), float64], %var_9672: Tensor[(2080), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(448), float64], Tensor[(2080), int64]) {
  %142 = fn (%var_9662: Tensor[(448), float64], %var_9663: Tensor[(2080), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(448), float64], Tensor[(2080), int64]) {
    %135 = cast(%var_9662, dtype="float64") /* ty=Tensor[(448), float64] */;
    %136 = cast(%var_9663, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %137 = reshape(%135, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %138 = reshape(%136, newshape=[1040, 2]) /* ty=Tensor[(1040, 2), int64] */;
    %139 = @func_6551(%137, %138) /* ty=(Tensor[(6, 16, 5), float32], Tensor[(7, 8, 8), bool], Tensor[(448), float64], Tensor[(2, 1040), float64], Tensor[(1040, 2), int64], Tensor[(792), int64]) */;
    %140 = @func_7138() /* ty=Tensor[(3, 6, 5), float64] */;
    %141 = %139.5;
    (%140, %141, %var_9662, %var_9663)
  };
  %142(%var_9671, %var_9672) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(448), float64], Tensor[(2080), int64]) */
}

def @func_13625() -> Tensor[(792), int64] {
  @func_13623() /* ty=Tensor[(792), int64] */
}

def @func_12367() -> (Tensor[(792), int64],) {
  @func_12365() /* ty=(Tensor[(792), int64],) */
}

def @func_12511() -> Tensor[(3, 6, 5), float64] {
  %144 = fn () -> Tensor[(3, 6, 5), float64] {
    %143 = @func_3398() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %143.0
  };
  %144() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_15372(%var_15370: Tensor[(2, 6, 1), float64]) -> (Tensor[(2, 6, 1), float64], Tensor[(5, 234), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  @func_15369(%var_15370) /* ty=(Tensor[(2, 6, 1), float64], Tensor[(5, 234), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_5707() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  @func_5705() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */
}

def @func_16330() -> Tensor[(3, 6, 5), float32] {
  %146 = fn () -> Tensor[(3, 6, 5), float32] {
    %145 = @func_13715() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32]) */;
    %145.1
  };
  %146() /* ty=Tensor[(3, 6, 5), float32] */
}

def @func_8926() -> Tensor[(3, 6, 5), float64] {
  %148 = fn () -> Tensor[(3, 6, 5), float64] {
    %147 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %147.0
  };
  %148() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_10968() -> (Tensor[(5, 234), bool], Tensor[(1040, 2), float64]) {
  @func_10966() /* ty=(Tensor[(5, 234), bool], Tensor[(1040, 2), float64]) */
}

def @func_10146() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) {
  %149 = @func_9572() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %150 = @func_9572() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %151 = @func_5705() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %152 = @func_5115() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(770), uint64]) */;
  %153 = %152.0;
  %154 = cast(%153, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
  %155 = %149.1;
  %156 = %150.1;
  %157 = %151.1;
  %158 = cosh(%154) /* ty=Tensor[(3, 6, 5), float32] */;
  (%155, %156, %157, %158)
}

def @func_7128() -> Tensor[(792), int64] {
  %159 = @func_4627() /* ty=(Tensor[(792), int64], Tensor[(792), int64]) */;
  %159.0
}

def @func_10668(%var_10667: Tensor[(792), int64]) -> (Tensor[(792), uint8],) {
  %166 = fn (%var_10660: Tensor[(792), int64]) -> (Tensor[(792), uint8],) {
    %160 = @func_2354() /* ty=Tensor[(792), int64] */;
    %161 = cast(%var_10660, dtype="uint8") /* ty=Tensor[(792), uint8] */;
    %162 = shape_of(%160, dtype="int32") /* ty=Tensor[(1), int32] */;
    %163 = cast(%160, dtype="uint8") /* ty=Tensor[(792), uint8] */;
    %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %165 = left_shift(%163, %164) /* ty=Tensor[(792), uint8] */;
    (%165,)
  };
  %166(%var_10667) /* ty=(Tensor[(792), uint8],) */
}

def @func_11338() -> (Tensor[(2080), int64],) {
  %167 = @func_3182() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */;
  %168 = %167.2;
  (%168,)
}

def @func_11920(%var_11919: Tensor[(420), float32]) -> (Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(420), float32]) {
  %177 = fn (%var_11898: Tensor[(420), float32]) -> (Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(420), float32]) {
    %169 = @func_5705() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
    %170 = cast(%var_11898, dtype="float32") /* ty=Tensor[(420), float32] */;
    %171 = cast(%var_11898, dtype="float32") /* ty=Tensor[(420), float32] */;
    %172 = reshape(%170, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
    %173 = reshape(%171, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
    %174 = @func_2516(%172, %173) /* ty=(Tensor[(5, 12, 7), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(3, 6, 5), float32]) */;
    %175 = %169.0;
    %176 = %174.2;
    (%175, %176, %var_11898)
  };
  %177(%var_11919) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(420), float32]) */
}

def @func_7203() -> (Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) {
  %178 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %179 = cast(meta[relay.Constant][4] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %180 = reshape(%179, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %181 = @func_3276(%180) /* ty=(Tensor[(2080), bool],) */;
  %182 = %178.0;
  %183 = %181.0;
  (%182, %183, meta[relay.Constant][4] /* ty=Tensor[(2080), int64] */)
}

def @func_13359() -> (Tensor[(3, 6, 5), float64],) {
  %185 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %184 = @func_4925() /* ty=Tensor[(3, 6, 5), float64] */;
    (%184,)
  };
  %185() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_2239() -> (Tensor[(3, 6, 5), float64],) {
  %188 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %186 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %187 = %186.0;
    (%187,)
  };
  %188() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_14662() -> (Tensor[(5, 9, 7), float64], Tensor[(1, 10, 2), float64], Tensor[(20), float64], Tensor[(3, 6, 5), float64]) {
  %197 = fn () -> (Tensor[(5, 9, 7), float64], Tensor[(1, 10, 2), float64], Tensor[(20), float64], Tensor[(3, 6, 5), float64]) {
    %189 = @func_14592() /* ty=(Tensor[(3, 6, 5), bool], Tensor[(5, 9, 7), float64], Tensor[(420), float32]) */;
    %190 = cast(meta[relay.Constant][5] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
    %191 = reshape(%190, newshape=[1, 10, 2]) /* ty=Tensor[(1, 10, 2), float64] */;
    %192 = @func_7871(%191) /* ty=(Tensor[(1, 10, 2), float64],) */;
    %193 = @func_8515() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %194 = %189.1;
    %195 = %192.0;
    %196 = %193.0;
    (%194, %195, meta[relay.Constant][5] /* ty=Tensor[(20), float64] */, %196)
  };
  %197() /* ty=(Tensor[(5, 9, 7), float64], Tensor[(1, 10, 2), float64], Tensor[(20), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_6149() -> (Tensor[(792), int64],) {
  %198 = @func_3863() /* ty=(Tensor[(792), int64],) */;
  %199 = %198.0;
  (%199,)
}

def @func_5389(%var_5388: Tensor[(1, 1170), bool]) -> (Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), int32], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), bool], Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float32]) {
  %233 = fn (%var_5325: Tensor[(1, 1170), bool]) -> (Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), int32], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), bool], Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float32]) {
    %200 = @func_4287() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(15, 15, 14), float32], Tensor[(2080), int64], Tensor[(3, 6, 5), float64]) */;
    %201 = @func_2860() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
    %202 = cast(%var_5325, dtype="bool") /* ty=Tensor[(1, 1170), bool] */;
    %203 = reshape(%202, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), bool] */;
    %204 = @func_2928(%203) /* ty=(Tensor[(15, 6, 13), bool], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(792), int32], Tensor[(420), float32]) */;
    %205 = %204.0;
    %206 = cast(%205, dtype="int32") /* ty=Tensor[(15, 6, 13), int32] */;
    %207 = shape_of(%var_5325, dtype="int32") /* ty=Tensor[(2), int32] */;
    %208 = cast(%var_5325, dtype="int32") /* ty=Tensor[(1, 1170), int32] */;
    %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %210 = @func_5115() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(770), uint64]) */;
    %211 = cast(%205, dtype="bool") /* ty=Tensor[(15, 6, 13), bool] */;
    %212 = shape_of(%var_5325, dtype="int32") /* ty=Tensor[(2), int32] */;
    %213 = cast(%var_5325, dtype="bool") /* ty=Tensor[(1, 1170), bool] */;
    %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %215 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
    %216 = %200.2;
    %217 = cast(%216, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %218 = cast(%216, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %219 = reshape(%217, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
    %220 = reshape(%218, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
    %221 = %215.0;
    %222 = cast(%221, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
    %223 = reshape(%222, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
    %224 = @func_3430(%223) /* ty=(Tensor[(3, 6, 5), bool],) */;
    %225 = @func_5252() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) */;
    %226 = %201.1;
    %227 = minimum(%208, %209) /* ty=Tensor[(?, 1170), int32] */;
    %228 = %210.0;
    %229 = not_equal(%213, %214) /* ty=Tensor[(?, 1170), bool] */;
    %230 = @func_20(%219, %220) /* ty=Tensor[(13, 10, 16), int64] */;
    %231 = %224.0;
    %232 = %225.1;
    (%216, %226, %227, %228, %229, %221, %230, %231, %232)
  };
  %233(%var_5388) /* ty=(Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), int32], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), bool], Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float32]) */
}

def @func_8008() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %238 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
    %234 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
    %235 = @func_5771() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %236 = %234.1;
    %237 = %235.0;
    (%236, %237)
  };
  %238() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_14859() -> (Tensor[(3, 6, 5), bool],) {
  %239 = @func_14535() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) */;
  %240 = %239.1;
  (%240,)
}

def @func_15865() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) {
  %244 = fn () -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) {
    %241 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %242 = @func_8520() /* ty=Tensor[(3, 6, 5), float32] */;
    %243 = %241.0;
    (%242, %243)
  };
  %244() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */
}

def @func_9533() -> (Tensor[(792), int64],) {
  @func_9531() /* ty=(Tensor[(792), int64],) */
}

def @func_11643() -> Tensor[(3, 6, 5), float64] {
  %246 = fn () -> Tensor[(3, 6, 5), float64] {
    %245 = @func_2349() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %245.1
  };
  %246() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_8522() -> Tensor[(3, 6, 5), float32] {
  @func_8520() /* ty=Tensor[(3, 6, 5), float32] */
}

def @func_12550() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %247 = @func_9885() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %248 = %247.0;
  %249 = @func_5994() /* ty=Tensor[(3, 6, 5), float64] */;
  (%248, %249)
}

def @func_14380() -> (Tensor[(3, 6, 5), float64], Tensor[(2080), int64], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) {
  %258 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(2080), int64], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) {
    %250 = @func_2699() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %251 = @func_9360() /* ty=(Tensor[(2080), int64],) */;
    %252 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
    %253 = %250.0;
    %254 = %251.0;
    %255 = %252.0;
    %256 = @func_8520() /* ty=Tensor[(3, 6, 5), float32] */;
    %257 = @func_7672() /* ty=Tensor[(3, 6, 5), float64] */;
    (%253, %254, %255, %256, %257)
  };
  %258() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(2080), int64], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */
}

def @func_4696() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(1040, 2), int64]) {
  %266 = fn () -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(1040, 2), int64]) {
    %259 = @func_4227() /* ty=(Tensor[(792), int64],) */;
    %260 = cast(meta[relay.Constant][6] /* ty=Tensor[(1040, 2), int64] */, dtype="int64") /* ty=Tensor[(1040, 2), int64] */;
    %261 = reshape(%260, newshape=[2, 1040]) /* ty=Tensor[(2, 1040), int64] */;
    %262 = @func_3095(%261) /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(3, 6, 5), float64]) */;
    %263 = %259.0;
    %264 = @func_2735() /* ty=Tensor[(3, 6, 5), float64] */;
    %265 = %262.4;
    (%263, %264, %265, meta[relay.Constant][6] /* ty=Tensor[(1040, 2), int64] */)
  };
  %266() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(1040, 2), int64]) */
}

def @func_4366() -> (Tensor[(3, 6, 5), float64],) {
  @func_4364() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_6789() -> (Tensor[(6, 16, 5), float32],) {
  @func_6787() /* ty=(Tensor[(6, 16, 5), float32],) */
}

def @func_4926() -> Tensor[(3, 6, 5), float64] {
  %268 = fn () -> Tensor[(3, 6, 5), float64] {
    %267 = @func_2876() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) */;
    %267.0
  };
  %268() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_13608() -> (Tensor[(792), float64],) {
  %271 = fn () -> (Tensor[(792), float64],) {
    %269 = @func_11175() /* ty=(Tensor[(792), float64],) */;
    %270 = %269.0;
    (%270,)
  };
  %271() /* ty=(Tensor[(792), float64],) */
}

def @func_11125() -> Tensor[(3, 6, 5), float64] {
  %272 = fn () -> Tensor[(3, 6, 5), float64] {
    @func_5263() /* ty=Tensor[(3, 6, 5), float64] */
  };
  %272() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_2354() -> Tensor[(792), int64] {
  %273 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
  %273.2
}

def @func_10630() -> (Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64]) {
  %274 = @func_2860() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %275 = @func_7507() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8]) */;
  %276 = @func_4075() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) */;
  %277 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %278 = @func_3595() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(2, 1040), int64]) */;
  %279 = %278.2;
  %280 = cast(%279, dtype="float64") /* ty=Tensor[(2, 1040), float64] */;
  %281 = %274.1;
  %282 = %275.5;
  %283 = %276.0;
  %284 = %277.0;
  %285 = tan(%280) /* ty=Tensor[(2, 1040), float64] */;
  (%281, %282, %283, %284, %285)
}

def @func_5931() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %286 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %287 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  %288 = %286.0;
  (%287, %288)
}

def @func_15061() -> Tensor[(3, 6, 5), float64] {
  @func_15059() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_15369(%var_15344: Tensor[(2, 6, 1), float64]) -> (Tensor[(2, 6, 1), float64], Tensor[(5, 234), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %289 = cast(%var_15344, dtype="float64") /* ty=Tensor[(2, 6, 1), float64] */;
  %290 = @func_10966() /* ty=(Tensor[(5, 234), bool], Tensor[(1040, 2), float64]) */;
  %291 = @func_13019() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %292 = @func_7507() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8]) */;
  %293 = sin(%289) /* ty=Tensor[(2, 6, 1), float64] */;
  %294 = %290.0;
  %295 = %291.0;
  %296 = %292.1;
  (%293, %294, %295, %296)
}

def @func_16010() -> Tensor[(3, 6, 5), float64] {
  %298 = fn () -> Tensor[(3, 6, 5), float64] {
    %297 = @func_12006() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %297.0
  };
  %298() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_13065(%var_13063: Tensor[(7, 1, 12), float32]) -> Tensor[(7, 1, 12), float32] {
  @func_13062(%var_13063) /* ty=Tensor[(7, 1, 12), float32] */
}

def @func_14535() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) {
  %299 = @func_8431() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %300 = %299.0;
  %301 = @func_8832() /* ty=Tensor[(3, 6, 5), bool] */;
  (%300, %301)
}

def @func_7742() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
  %302 = @func_7434() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %303 = %302.0;
  %304 = @func_4668() /* ty=Tensor[(3, 6, 5), float64] */;
  (%303, %304)
}

def @func_5482() -> (Tensor[(3, 6, 5), float64],) {
  %306 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %305 = @func_5263() /* ty=Tensor[(3, 6, 5), float64] */;
    (%305,)
  };
  %306() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_2862() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
  @func_2860() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */
}

def @func_13429() -> (Tensor[(3, 6, 5), float64],) {
  %308 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %307 = @func_9496() /* ty=Tensor[(3, 6, 5), float64] */;
    (%307,)
  };
  %308() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_13949(%var_13947: Tensor[(3, 6, 5), float64]) -> (Tensor[(3, 6, 5), uint64],) {
  @func_13946(%var_13947) /* ty=(Tensor[(3, 6, 5), uint64],) */
}

def @func_3863() -> (Tensor[(792), int64],) {
  %309 = @func_2860() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %310 = %309.0;
  (%310,)
}

def @func_6787() -> (Tensor[(6, 16, 5), float32],) {
  %311 = @func_6196() /* ty=(Tensor[(792), int64], Tensor[(6, 16, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %312 = %311.1;
  (%312,)
}

def @func_2136() -> (Tensor[(3, 6, 5), float64],) {
  %313 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 6, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %314 = atan(%313) /* ty=Tensor[(3, 6, 5), float64] */;
  (%314,)
}

def @func_6196() -> (Tensor[(792), int64], Tensor[(6, 16, 5), float32], Tensor[(3, 6, 5), float64]) {
  %315 = @func_6149() /* ty=(Tensor[(792), int64],) */;
  %316 = @func_4075() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) */;
  %317 = %316.1;
  %318 = cast(%317, dtype="float32") /* ty=Tensor[(6, 16, 5), float32] */;
  %319 = %315.0;
  %320 = cos(%318) /* ty=Tensor[(6, 16, 5), float32] */;
  %321 = @func_5994() /* ty=Tensor[(3, 6, 5), float64] */;
  (%319, %320, %321)
}

def @func_16036() -> Tensor[(3, 6, 5), float64] {
  %322 = @func_5286() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %322.1
}

def @func_16115() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %323 = @func_8777() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %324 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %325 = %323.0;
  %326 = @func_14452() /* ty=Tensor[(3, 6, 5), float64] */;
  %327 = %324.0;
  (%325, %326, %327)
}

def @func_12452(%var_12451: Tensor[(8, 15, 8), int16]) -> Tensor[(8, 15, 8), int16] {
  %332 = fn (%var_12445: Tensor[(8, 15, 8), int16]) -> Tensor[(8, 15, 8), int16] {
    %328 = cast(%var_12445, dtype="int16") /* ty=Tensor[(8, 15, 8), int16] */;
    %329 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(8, 15, 8), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %330 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 15, 8), int16] */, dtype="int16") /* ty=Tensor[(8, 15, 8), int16] */;
    %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    add(%330, %331) /* ty=Tensor[(8, 15, 8), int16] */
  };
  %332(%var_12451) /* ty=Tensor[(8, 15, 8), int16] */
}

def @func_15438(%var_15437: Tensor[(792), float32]) -> Tensor[(792), float64] {
  %338 = fn (%var_15431: Tensor[(792), float32]) -> Tensor[(792), float64] {
    %333 = @func_11717() /* ty=Tensor[(792), float32] */;
    %334 = cast(%var_15431, dtype="float64") /* ty=Tensor[(792), float64] */;
    %335 = shape_of(%333, dtype="int32") /* ty=Tensor[(1), int32] */;
    %336 = cast(%333, dtype="float64") /* ty=Tensor[(792), float64] */;
    %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?), float64] */;
    divide(%336, %337) /* ty=Tensor[(792), float64] */
  };
  %338(%var_15437) /* ty=Tensor[(792), float64] */
}

def @func_2977() -> Tensor[(5, 9, 7), float64] {
  %345 = fn () -> Tensor[(5, 9, 7), float64] {
    %339 = cast(meta[relay.Constant][10] /* ty=Tensor[(5, 9, 7), float64] */, dtype="float64") /* ty=Tensor[(5, 9, 7), float64] */;
    %340 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(5, 9, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %341 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 9, 7), float64] */, dtype="float64") /* ty=Tensor[(5, 9, 7), float64] */;
    %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %343 = divide(%341, %342) /* ty=Tensor[(5, 9, 7), float64] */;
    %344 = cast(%343, dtype="float64") /* ty=Tensor[(5, 9, 7), float64] */;
    atanh(%344) /* ty=Tensor[(5, 9, 7), float64] */
  };
  %345() /* ty=Tensor[(5, 9, 7), float64] */
}

def @func_2700() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %349 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
    %346 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %347 = %346.0;
    %348 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
    (%347, %348)
  };
  %349() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_9360() -> (Tensor[(2080), int64],) {
  %350 = @func_3182() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */;
  %351 = %350.2;
  (%351,)
}

def @func_5116() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(770), uint64]) {
  %361 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(770), uint64]) {
    %352 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %353 = %352.0;
    %354 = cast(%353, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
    %355 = cast(meta[relay.Constant][11] /* ty=Tensor[(770), uint64] */, dtype="uint64") /* ty=Tensor[(770), uint64] */;
    %356 = reshape(%355, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), uint64] */;
    %357 = @func_72(%356) /* ty=(Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) */;
    %358 = @func_4723() /* ty=Tensor[(3, 6, 5), float64] */;
    %359 = log2(%354) /* ty=Tensor[(3, 6, 5), float32] */;
    %360 = %357.2;
    (%358, %359, %360, meta[relay.Constant][11] /* ty=Tensor[(770), uint64] */)
  };
  %361() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(770), uint64]) */
}

def @func_10860(%var_10858: Tensor[(1, 13, 8), uint32]) -> Tensor[(1, 13, 8), int64] {
  @func_10857(%var_10858) /* ty=Tensor[(1, 13, 8), int64] */
}

def @func_12833(%var_12831: Tensor[(3, 12, 16), int8], %var_12832: Tensor[(3, 12, 16), int8]) -> (Tensor[(3, 12, 16), int8], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 12, 16), float64]) {
  %375 = fn (%var_12805: Tensor[(3, 12, 16), int8], %var_12806: Tensor[(3, 12, 16), int8]) -> (Tensor[(3, 12, 16), int8], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 12, 16), float64]) {
    %362 = cast(%var_12806, dtype="int8") /* ty=Tensor[(3, 12, 16), int8] */;
    %363 = shape_of(%var_12805, dtype="int32") /* ty=Tensor[(3), int32] */;
    %364 = cast(%var_12805, dtype="int8") /* ty=Tensor[(3, 12, 16), int8] */;
    %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %366 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %367 = cast(meta[relay.Constant][12] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
    %368 = reshape(%367, newshape=[6, 16, 5]) /* ty=Tensor[(6, 16, 5), int8] */;
    %369 = @func_4214(%368) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int32]) */;
    %370 = cast(%var_12806, dtype="float64") /* ty=Tensor[(3, 12, 16), float64] */;
    %371 = logical_xor(%364, %365) /* ty=Tensor[(3, 12, 16), int8] */;
    %372 = %366.0;
    %373 = %369.0;
    %374 = atanh(%370) /* ty=Tensor[(3, 12, 16), float64] */;
    (%371, %372, %373, meta[relay.Constant][12] /* ty=Tensor[(480), int8] */, %374)
  };
  %375(%var_12831, %var_12832) /* ty=(Tensor[(3, 12, 16), int8], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 12, 16), float64]) */
}

def @func_4975(%var_4973: Tensor[(3, 6, 5), float64]) -> (Tensor[(3, 6, 5), int16],) {
  @func_4972(%var_4973) /* ty=(Tensor[(3, 6, 5), int16],) */
}

def @func_8520() -> Tensor[(3, 6, 5), float32] {
  %376 = @func_3595() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(2, 1040), int64]) */;
  %376.0
}

def @func_8433() -> (Tensor[(3, 6, 5), float64],) {
  @func_8431() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_2138() -> (Tensor[(3, 6, 5), float64],) {
  @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_12007() -> (Tensor[(3, 6, 5), float64],) {
  %379 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %377 = @func_9855() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
    %378 = %377.0;
    (%378,)
  };
  %379() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_4629() -> (Tensor[(792), int64], Tensor[(792), int64]) {
  @func_4627() /* ty=(Tensor[(792), int64], Tensor[(792), int64]) */
}

def @func_6894() -> Tensor[(3, 6, 5), float64] {
  %380 = fn () -> Tensor[(3, 6, 5), float64] {
    @func_2582() /* ty=Tensor[(3, 6, 5), float64] */
  };
  %380() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_16417() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %385 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
    %381 = @func_2699() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %382 = @func_4175() /* ty=(Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
    %383 = %381.0;
    %384 = %382.2;
    (%383, %384)
  };
  %385() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_7435() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
  %390 = fn () -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
    %386 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
    %387 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %388 = %386.2;
    %389 = %387.0;
    (%388, %389)
  };
  %390() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */
}

def @main(%var_16542: Tensor[(8, 16, 3), int32]) -> (Tensor[(3, 6, 5), bool], Tensor[(8, 16, 3), uint32], Tensor[(8, 16, 3), float32]) {
  %391 = @func_14892() /* ty=(Tensor[(3, 6, 5), bool],) */;
  %392 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 16, 3), int32] */, dtype="float64") /* ty=Tensor[(1, 16, 3), float64] */;
  %393 = asinh(%392) /* ty=Tensor[(1, 16, 3), float64] */;
  %394 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 16, 3), int32] */, dtype="int32") /* ty=Tensor[(1, 16, 3), int32] */;
  %395 = cast(%var_16542, dtype="int32") /* ty=Tensor[(8, 16, 3), int32] */;
  %396 = add(%394, %395) /* ty=Tensor[(8, 16, 3), int32] */;
  %397 = cast(%393, dtype="uint32") /* ty=Tensor[(1, 16, 3), uint32] */;
  %398 = cast(%396, dtype="uint32") /* ty=Tensor[(8, 16, 3), uint32] */;
  %399 = cast(%396, dtype="int32") /* ty=Tensor[(8, 16, 3), int32] */;
  %400 = cast(%393, dtype="int32") /* ty=Tensor[(1, 16, 3), int32] */;
  %401 = right_shift(%399, %400) /* ty=Tensor[(8, 16, 3), int32] */;
  %402 = cast(%401, dtype="float32") /* ty=Tensor[(8, 16, 3), float32] */;
  %403 = %391.0;
  %404 = logical_xor(%397, %398) /* ty=Tensor[(8, 16, 3), uint32] */;
  %405 = acosh(%402) /* ty=Tensor[(8, 16, 3), float32] */;
  (%403, %404, %405)
}

def @func_5162() -> Tensor[(3, 6, 5), float64] {
  %407 = fn () -> Tensor[(3, 6, 5), float64] {
    %406 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %406.0
  };
  %407() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_5810() -> (Tensor[(6, 16, 5), int8],) {
  @func_5808() /* ty=(Tensor[(6, 16, 5), int8],) */
}

def @func_14861() -> (Tensor[(3, 6, 5), bool],) {
  @func_14859() /* ty=(Tensor[(3, 6, 5), bool],) */
}

def @func_16466() -> (Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(420), float32]) {
  %415 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(420), float32]) {
    %408 = @func_14724() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %409 = @func_4695() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(1040, 2), int64]) */;
    %410 = @func_5529() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(5, 12, 7), float32], Tensor[(420), float32]) */;
    %411 = %408.0;
    %412 = %409.0;
    %413 = @func_2735() /* ty=Tensor[(3, 6, 5), float64] */;
    %414 = %410.2;
    (%411, %412, %413, %414)
  };
  %415() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(420), float32]) */
}

def @func_4192() -> Tensor[(3, 6, 5), float64] {
  %416 = @func_4175() /* ty=(Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %416.2
}

def @func_6229(%var_6227: Tensor[(90), float64]) -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(90), float64], Tensor[(2080), int64]) {
  @func_6226(%var_6227) /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(90), float64], Tensor[(2080), int64]) */
}

def @func_2331() -> (Tensor[(3, 6, 5), float64],) {
  %419 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %417 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %418 = %417.0;
    (%418,)
  };
  %419() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_14609(%var_14607: bool, %var_14608: Tensor[(1, 4, 12), bool]) -> (Tensor[(1, 4, 12), bool],) {
  %423 = fn (%var_14600: bool, %var_14601: Tensor[(1, 4, 12), bool]) -> (Tensor[(1, 4, 12), bool],) {
    %420 = cast(%var_14600, dtype="bool") /* ty=bool */;
    %421 = cast(%var_14601, dtype="bool") /* ty=Tensor[(1, 4, 12), bool] */;
    %422 = logical_or(%420, %421) /* ty=Tensor[(1, 4, 12), bool] */;
    (%422,)
  };
  %423(%var_14607, %var_14608) /* ty=(Tensor[(1, 4, 12), bool],) */
}

def @func_6433(%var_6432: Tensor[(70, 6), float32]) -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(70, 6), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %435 = fn (%var_6409: Tensor[(70, 6), float32]) -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(70, 6), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
    %424 = cast(%var_6409, dtype="float32") /* ty=Tensor[(70, 6), float32] */;
    %425 = cast(%var_6409, dtype="float32") /* ty=Tensor[(70, 6), float32] */;
    %426 = reshape(%424, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
    %427 = reshape(%425, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
    %428 = @func_2516(%426, %427) /* ty=(Tensor[(5, 12, 7), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(3, 6, 5), float32]) */;
    %429 = @func_2860() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
    %430 = @func_5043() /* ty=Tensor[(792), int64] */;
    %431 = @func_5994() /* ty=Tensor[(3, 6, 5), float64] */;
    %432 = %428.2;
    %433 = @func_4668() /* ty=Tensor[(3, 6, 5), float64] */;
    %434 = %429.1;
    (%430, %431, %432, %var_6409, %433, %434)
  };
  %435(%var_6432) /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(70, 6), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_4217(%var_4215: Tensor[(6, 16, 5), int8]) -> (Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int32]) {
  @func_4214(%var_4215) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int32]) */
}

def @func_3097(%var_3096: Tensor[(2, 1040), int64]) -> (Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(3, 6, 5), float64]) {
  %454 = fn (%var_3053: Tensor[(2, 1040), int64]) -> (Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(3, 6, 5), float64]) {
    %436 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
    %437 = cast(%var_3053, dtype="int64") /* ty=Tensor[(2, 1040), int64] */;
    %438 = reshape(%437, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
    %439 = @func_642(%438) /* ty=(Tensor[(10, 5, 9), float64], Tensor[(770), uint64], Tensor[(13, 10, 16), int16], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64]) */;
    %440 = @func_2876() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) */;
    %441 = cast(%var_3053, dtype="float64") /* ty=Tensor[(2, 1040), float64] */;
    %442 = log10(%441) /* ty=Tensor[(2, 1040), float64] */;
    %443 = cast(%442, dtype="float32") /* ty=Tensor[(2, 1040), float32] */;
    %444 = asinh(%443) /* ty=Tensor[(2, 1040), float32] */;
    %445 = cast(%444, dtype="float32") /* ty=Tensor[(2, 1040), float32] */;
    %446 = acosh(%445) /* ty=Tensor[(2, 1040), float32] */;
    %447 = cast(%446, dtype="float64") /* ty=Tensor[(2, 1040), float64] */;
    %448 = @func_2349() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %449 = %436.0;
    %450 = %439.5;
    %451 = %440.0;
    %452 = sqrt(%447) /* ty=Tensor[(2, 1040), float64] */;
    %453 = %448.1;
    (%449, %450, %451, %452, %453)
  };
  %454(%var_3096) /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_5933() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  @func_5931() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_3596() -> (Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(2, 1040), int64]) {
  %461 = fn () -> (Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(2, 1040), int64]) {
    %455 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
    %456 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 1040), int64] */, dtype="int64") /* ty=Tensor[(2, 1040), int64] */;
    %457 = reshape(%456, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
    %458 = @func_642(%457) /* ty=(Tensor[(10, 5, 9), float64], Tensor[(770), uint64], Tensor[(13, 10, 16), int16], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64]) */;
    %459 = %455.0;
    %460 = %458.7;
    (%459, %460, meta[relay.Constant][14] /* ty=Tensor[(2, 1040), int64] */)
  };
  %461() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(2, 1040), int64]) */
}

def @func_15508() -> Tensor[(3, 6, 5), float64] {
  @func_15506() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_7243(%var_7229: Tensor[(2, 15, 16), int64], %var_7230: Tensor[(2, 15, 16), int64], %var_7237: Tensor[(2, 15, 16), int64]) -> (Tensor[(2, 15, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 15, 16), bool]) {
  %462 = cast(%var_7230, dtype="int64") /* ty=Tensor[(2, 15, 16), int64] */;
  %463 = shape_of(%var_7229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%var_7229, dtype="int64") /* ty=Tensor[(2, 15, 16), int64] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %466 = @func_4447() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %467 = cast(%var_7237, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
  %468 = shape_of(%var_7230, dtype="int32") /* ty=Tensor[(3), int32] */;
  %469 = cast(%var_7230, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
  %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %471 = multiply(%464, %465) /* ty=Tensor[(2, 15, 16), int64] */;
  %472 = %466.0;
  %473 = greater(%469, %470) /* ty=Tensor[(2, 15, 16), bool] */;
  (%471, %472, %473)
}

def @func_10395(%var_10393: Tensor[(770), uint64], %var_10394: Tensor[(2080), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(770), uint64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64], Tensor[(792), int64]) {
  %485 = fn (%var_10348: Tensor[(770), uint64], %var_10354: Tensor[(2080), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(770), uint64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64], Tensor[(792), int64]) {
    %474 = cast(%var_10348, dtype="uint64") /* ty=Tensor[(770), uint64] */;
    %475 = reshape(%474, newshape=[770]) /* ty=Tensor[(770), uint64] */;
    %476 = @func_7851(%475) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(770), uint64], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64]) */;
    %477 = cast(%var_10354, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %478 = reshape(%477, newshape=[2, 1040]) /* ty=Tensor[(2, 1040), int64] */;
    %479 = @func_3095(%478) /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(3, 6, 5), float64]) */;
    %480 = @func_9058() /* ty=(Tensor[(792), int64],) */;
    %481 = @func_6598() /* ty=Tensor[(3, 6, 5), float64] */;
    %482 = %476.1;
    %483 = %479.2;
    %484 = %480.0;
    (%481, %482, %var_10348, %483, %var_10354, %484)
  };
  %485(%var_10393, %var_10394) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(770), uint64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64], Tensor[(792), int64]) */
}

def @func_10262() -> (Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(2080), float64]) {
  @func_10260() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(2080), float64]) */
}

def @func_2930(%var_2929: Tensor[(15, 6, 13), bool]) -> (Tensor[(15, 6, 13), bool], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(792), int32], Tensor[(420), float32]) {
  %502 = fn (%var_2907: Tensor[(15, 6, 13), bool]) -> (Tensor[(15, 6, 13), bool], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(792), int32], Tensor[(420), float32]) {
    %486 = cast(%var_2907, dtype="bool") /* ty=Tensor[(15, 6, 13), bool] */;
    %487 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(15, 6, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %488 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 6, 13), bool] */, dtype="bool") /* ty=Tensor[(15, 6, 13), bool] */;
    %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %490 = cast(meta[relay.Constant][16] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %491 = cast(meta[relay.Constant][16] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %492 = reshape(%490, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
    %493 = reshape(%491, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
    %494 = cast(meta[relay.Constant][17] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
    %495 = cast(meta[relay.Constant][17] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
    %496 = reshape(%494, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
    %497 = reshape(%495, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
    %498 = @func_2516(%496, %497) /* ty=(Tensor[(5, 12, 7), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(3, 6, 5), float32]) */;
    %499 = logical_and(%488, %489) /* ty=Tensor[(15, 6, 13), bool] */;
    %500 = @func_20(%492, %493) /* ty=Tensor[(13, 10, 16), int64] */;
    %501 = %498.2;
    (%499, %500, meta[relay.Constant][16] /* ty=Tensor[(2080), int64] */, %501, meta[relay.Constant][17] /* ty=Tensor[(420), float32] */)
  };
  %502(%var_2929) /* ty=(Tensor[(15, 6, 13), bool], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(792), int32], Tensor[(420), float32]) */
}

def @func_9857() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  @func_9855() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */
}

def @func_8036() -> (Tensor[(3, 6, 5), float64],) {
  %503 = @func_2876() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) */;
  %504 = %503.0;
  (%504,)
}

def @func_8759() -> Tensor[(3, 6, 5), float64] {
  @func_8757() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_7401(%var_7376: Tensor[(1170), bool]) -> (Tensor[(3, 6, 5), float32], Tensor[(7, 8, 8), int32], Tensor[(448), float64], Tensor[(792), int64], Tensor[(792), int32], Tensor[(1170), bool], Tensor[(1040, 2), float32]) {
  %505 = @func_7173() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(5, 234), bool]) */;
  %506 = cast(meta[relay.Constant][18] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %507 = reshape(%506, newshape=[7, 8, 8]) /* ty=Tensor[(7, 8, 8), float64] */;
  %508 = @func_3547(%507) /* ty=(Tensor[(7, 8, 8), bool], Tensor[(7, 8, 8), int32]) */;
  %509 = @func_5705() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %510 = cast(%var_7376, dtype="bool") /* ty=Tensor[(1170), bool] */;
  %511 = reshape(%510, newshape=[15, 6, 13]) /* ty=Tensor[(15, 6, 13), bool] */;
  %512 = @func_2928(%511) /* ty=(Tensor[(15, 6, 13), bool], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(792), int32], Tensor[(420), float32]) */;
  %513 = @func_4695() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(1040, 2), int64]) */;
  %514 = %513.3;
  %515 = cast(%514, dtype="float32") /* ty=Tensor[(1040, 2), float32] */;
  %516 = log10(%515) /* ty=Tensor[(1040, 2), float32] */;
  %517 = cast(%516, dtype="float32") /* ty=Tensor[(1040, 2), float32] */;
  %518 = %505.2;
  %519 = %508.1;
  %520 = %509.2;
  %521 = %512.3;
  %522 = cos(%517) /* ty=Tensor[(1040, 2), float32] */;
  (%518, %519, meta[relay.Constant][18] /* ty=Tensor[(448), float64] */, %520, %521, %var_7376, %522)
}

def @func_4177() -> (Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) {
  @func_4175() /* ty=(Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */
}

def @func_2876() -> (Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) {
  %523 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %524 = cast(meta[relay.Constant][19] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %525 = reshape(%524, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %526 = @func_642(%525) /* ty=(Tensor[(10, 5, 9), float64], Tensor[(770), uint64], Tensor[(13, 10, 16), int16], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64]) */;
  %527 = %523.0;
  %528 = %526.3;
  (%527, %528, meta[relay.Constant][19] /* ty=Tensor[(2080), int64] */)
}

def @func_2520(%var_2518: Tensor[(5, 12, 7), float32], %var_2519: Tensor[(5, 12, 7), float32]) -> (Tensor[(5, 12, 7), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(3, 6, 5), float32]) {
  @func_2516(%var_2518, %var_2519) /* ty=(Tensor[(5, 12, 7), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(3, 6, 5), float32]) */
}

def @func_14125() -> (Tensor[(6, 16, 5), float32],) {
  %529 = @func_6787() /* ty=(Tensor[(6, 16, 5), float32],) */;
  %530 = %529.0;
  (%530,)
}

def @func_2737() -> Tensor[(3, 6, 5), float64] {
  @func_2735() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_4076() -> (Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) {
  %534 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) {
    %531 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %532 = %531.0;
    %533 = @func_3015() /* ty=Tensor[(6, 16, 5), int8] */;
    (%532, %533)
  };
  %534() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) */
}

def @func_1666(%var_1664: Tensor[(11, 8, 9), int64]) -> Tensor[(11, 8, 9), uint8] {
  @func_1663(%var_1664) /* ty=Tensor[(11, 8, 9), uint8] */
}

def @func_10260() -> (Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(2080), float64]) {
  %535 = @func_4789() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) */;
  %536 = @func_4227() /* ty=(Tensor[(792), int64],) */;
  %537 = @func_9360() /* ty=(Tensor[(2080), int64],) */;
  %538 = %537.0;
  %539 = cast(%538, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %540 = %535.3;
  %541 = %536.0;
  %542 = rsqrt(%539) /* ty=Tensor[(2080), float64] */;
  (%540, %541, %542)
}

def @func_10217() -> (Tensor[(420), float32], Tensor[(3, 6, 5), float32], Tensor[(792), int64]) {
  %543 = @func_9252() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(70, 6), float32], Tensor[(420), float32]) */;
  %544 = @func_9464() /* ty=(Tensor[(3, 6, 5), float32],) */;
  %545 = @func_7092() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %546 = %543.5;
  %547 = %544.0;
  %548 = %545.1;
  (%546, %547, %548)
}

def @func_8991(%var_8990: Tensor[(2080), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float32]) {
  %563 = fn (%var_8961: Tensor[(2080), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float32]) {
    %549 = @func_7764() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %550 = cast(%var_8961, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %551 = cast(%var_8961, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %552 = reshape(%550, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
    %553 = reshape(%551, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
    %554 = cast(%var_8961, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %555 = cast(%var_8961, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %556 = reshape(%554, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
    %557 = reshape(%555, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
    %558 = @func_7573() /* ty=(Tensor[(3, 6, 5), float32],) */;
    %559 = %549.0;
    %560 = @func_20(%552, %553) /* ty=Tensor[(13, 10, 16), int64] */;
    %561 = @func_20(%556, %557) /* ty=Tensor[(13, 10, 16), int64] */;
    %562 = %558.0;
    (%559, %560, %var_8961, %561, %562)
  };
  %563(%var_8990) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float32]) */
}

def @func_11340() -> (Tensor[(2080), int64],) {
  @func_11338() /* ty=(Tensor[(2080), int64],) */
}

def @func_6198() -> (Tensor[(792), int64], Tensor[(6, 16, 5), float32], Tensor[(3, 6, 5), float64]) {
  @func_6196() /* ty=(Tensor[(792), int64], Tensor[(6, 16, 5), float32], Tensor[(3, 6, 5), float64]) */
}

def @func_6226(%var_6218: Tensor[(90), float64]) -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(90), float64], Tensor[(2080), int64]) {
  %564 = @func_5597() /* ty=(Tensor[(792), int64], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %565 = cast(%var_6218, dtype="float64") /* ty=Tensor[(90), float64] */;
  %566 = cast(meta[relay.Constant][20] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %567 = reshape(%565, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
  %568 = reshape(%566, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %569 = @func_3804(%567, %568) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(10, 7, 11), uint64], Tensor[(770), uint64]) */;
  %570 = %564.1;
  %571 = %569.3;
  (%570, %571, %var_6218, meta[relay.Constant][20] /* ty=Tensor[(2080), int64] */)
}

def @func_3804(%var_3748: Tensor[(3, 6, 5), float64], %var_3759: Tensor[(2080), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(10, 7, 11), uint64], Tensor[(770), uint64]) {
  %572 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  %573 = cast(%var_3748, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %574 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%572, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %577 = cast(%var_3759, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %578 = reshape(%577, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %579 = @func_3276(%578) /* ty=(Tensor[(2080), bool],) */;
  %580 = cast(meta[relay.Constant][21] /* ty=Tensor[(770), uint64] */, dtype="uint64") /* ty=Tensor[(770), uint64] */;
  %581 = reshape(%580, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), uint64] */;
  %582 = @func_72(%581) /* ty=(Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) */;
  %583 = mod(%575, %576) /* ty=Tensor[(3, 6, 5), float64] */;
  %584 = %579.0;
  %585 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  %586 = %582.0;
  (%583, %584, %var_3759, %585, %586, meta[relay.Constant][21] /* ty=Tensor[(770), uint64] */)
}

def @func_12493() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %587 = @func_11811() /* ty=Tensor[(3, 6, 5), float64] */;
  %588 = @func_11811() /* ty=Tensor[(3, 6, 5), float64] */;
  (%587, %588)
}

def @func_4014() -> (Tensor[(3, 6, 5), float64],) {
  @func_4012() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_13118(%var_13116: Tensor[(770), uint64], %var_13117: Tensor[(1040, 2), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(770), uint64], Tensor[(1040, 2), float32]) {
  %598 = fn (%var_13107: Tensor[(770), uint64], %var_13108: Tensor[(1040, 2), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(770), uint64], Tensor[(1040, 2), float32]) {
    %589 = cast(%var_13107, dtype="uint64") /* ty=Tensor[(770), uint64] */;
    %590 = cast(%var_13108, dtype="int64") /* ty=Tensor[(1040, 2), int64] */;
    %591 = reshape(%589, newshape=[770]) /* ty=Tensor[(770), uint64] */;
    %592 = reshape(%590, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
    %593 = @func_10392(%591, %592) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(770), uint64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64], Tensor[(792), int64]) */;
    %594 = cast(%var_13108, dtype="float32") /* ty=Tensor[(1040, 2), float32] */;
    %595 = @func_6893() /* ty=Tensor[(3, 6, 5), float64] */;
    %596 = %593.0;
    %597 = log2(%594) /* ty=Tensor[(1040, 2), float32] */;
    (%595, %596, %var_13107, %597)
  };
  %598(%var_13116, %var_13117) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(770), uint64], Tensor[(1040, 2), float32]) */
}

def @func_7651() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float64]) {
  %599 = @func_4452() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %600 = %599.0;
  %601 = cast(%600, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %602 = reshape(%601, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
  %603 = @func_5597() /* ty=(Tensor[(792), int64], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %604 = %603.4;
  %605 = cast(%604, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
  %606 = log(%605) /* ty=Tensor[(3, 6, 5), float32] */;
  %607 = cast(%606, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %608 = @func_3836(%602) /* ty=Tensor[(3, 6, 5), bool] */;
  %609 = cos(%607) /* ty=Tensor[(3, 6, 5), float64] */;
  (%600, %608, %609)
}

def @func_14243() -> (Tensor[(3, 6, 5), float64],) {
  %612 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %610 = @func_9351() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %611 = %610.1;
    (%611,)
  };
  %612() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_14576() -> (Tensor[(792), int64], Tensor[(792), int64]) {
  @func_14574() /* ty=(Tensor[(792), int64], Tensor[(792), int64]) */
}

def @func_5995() -> Tensor[(3, 6, 5), float64] {
  %614 = fn () -> Tensor[(3, 6, 5), float64] {
    %613 = @func_2349() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %613.1
  };
  %614() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_12124() -> (Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) {
  @func_12122() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) */
}

def @func_5843(%var_5841: Tensor[(16, 12, 16), float64], %var_5842: Tensor[(16, 12, 16), float64]) -> (Tensor[(16, 12, 16), bool],) {
  %620 = fn (%var_5830: Tensor[(16, 12, 16), float64], %var_5831: Tensor[(16, 12, 16), float64]) -> (Tensor[(16, 12, 16), bool],) {
    %615 = cast(%var_5831, dtype="bool") /* ty=Tensor[(16, 12, 16), bool] */;
    %616 = shape_of(%var_5830, dtype="int32") /* ty=Tensor[(3), int32] */;
    %617 = cast(%var_5830, dtype="bool") /* ty=Tensor[(16, 12, 16), bool] */;
    %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %619 = equal(%617, %618) /* ty=Tensor[(16, 12, 16), bool] */;
    (%619,)
  };
  %620(%var_5841, %var_5842) /* ty=(Tensor[(16, 12, 16), bool],) */
}

def @func_7248(%var_7245: Tensor[(2, 15, 16), int64], %var_7246: Tensor[(2, 15, 16), int64], %var_7247: Tensor[(2, 15, 16), int64]) -> (Tensor[(2, 15, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 15, 16), bool]) {
  @func_7243(%var_7245, %var_7246, %var_7247) /* ty=(Tensor[(2, 15, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 15, 16), bool]) */
}

def @func_5040() -> (Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(6, 16, 5), int8]) {
  @func_5038() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(6, 16, 5), int8]) */
}

def @func_8451() -> Tensor[(3, 6, 5), float64] {
  %621 = fn () -> Tensor[(3, 6, 5), float64] {
    @func_4925() /* ty=Tensor[(3, 6, 5), float64] */
  };
  %621() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_16070() -> Tensor[(3, 6, 5), float64] {
  @func_16068() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_16132() -> (Tensor[(3, 6, 5), float64],) {
  @func_16130() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_10857(%var_10839: Tensor[(1, 13, 8), uint32]) -> Tensor[(1, 13, 8), int64] {
  %622 = cast(meta[relay.Constant][22] /* ty=uint32 */, dtype="bool") /* ty=bool */;
  %623 = cast(%var_10839, dtype="bool") /* ty=Tensor[(1, 13, 8), bool] */;
  %624 = less(%622, %623) /* ty=Tensor[(1, 13, 8), bool] */;
  %625 = cast(%624, dtype="int64") /* ty=Tensor[(1, 13, 8), int64] */;
  %626 = cast(meta[relay.Constant][22] /* ty=uint32 */, dtype="int64") /* ty=int64 */;
  logical_xor(%625, %626) /* ty=Tensor[(1, 13, 8), int64] */
}

def @func_7764() -> (Tensor[(3, 6, 5), float64],) {
  %627 = @func_4287() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(15, 15, 14), float32], Tensor[(2080), int64], Tensor[(3, 6, 5), float64]) */;
  %628 = %627.0;
  (%628,)
}

def @func_6151() -> (Tensor[(792), int64],) {
  @func_6149() /* ty=(Tensor[(792), int64],) */
}

def @func_8375() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %629 = @func_2349() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %630 = @func_5115() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(770), uint64]) */;
  %631 = %629.0;
  %632 = @func_5263() /* ty=Tensor[(3, 6, 5), float64] */;
  %633 = %630.0;
  (%631, %632, %633)
}

def @func_6827() -> Tensor[(3, 6, 5), float64] {
  @func_6825() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_10833(%var_10755: Tensor[(2, 1040), bool]) -> (Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(2080), int64], Tensor[(448), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), int16], Tensor[(3, 6, 5), float64]) {
  %634 = @func_8602() /* ty=(Tensor[(2, 1040), bool], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32]) */;
  %635 = %634.0;
  %636 = cast(%var_10755, dtype="float64") /* ty=Tensor[(2, 1040), float64] */;
  %637 = shape_of(%635, dtype="int32") /* ty=Tensor[(2), int32] */;
  %638 = cast(%635, dtype="float64") /* ty=Tensor[(2, 1040), float64] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %640 = cast(meta[relay.Constant][23] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %641 = mod(%638, %639) /* ty=Tensor[(2, 1040), float64] */;
  %642 = cast(%641, dtype="int64") /* ty=Tensor[(2, 1040), int64] */;
  %643 = reshape(%640, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %644 = reshape(%642, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %645 = @func_9670(%643, %644) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(448), float64], Tensor[(2080), int64]) */;
  %646 = @func_8515() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %647 = @func_2735() /* ty=Tensor[(3, 6, 5), float64] */;
  %648 = cast(%647, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %649 = reshape(%648, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
  %650 = @func_4972(%649) /* ty=(Tensor[(3, 6, 5), int16],) */;
  %651 = cast(%var_10755, dtype="int64") /* ty=Tensor[(2, 1040), int64] */;
  %652 = reshape(%651, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %653 = @func_6082(%652) /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64], Tensor[(792), int64]) */;
  %654 = %645.3;
  %655 = %646.0;
  %656 = %650.0;
  %657 = %653.4;
  (%647, %641, %654, meta[relay.Constant][23] /* ty=Tensor[(448), float64] */, %655, %656, %657)
}

def @func_14998() -> (Tensor[(3, 6, 5), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(3, 6, 5), float64]) {
  %658 = @func_4012() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %659 = cast(meta[relay.Constant][24] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %660 = reshape(%659, newshape=[7, 1, 12]) /* ty=Tensor[(7, 1, 12), float32] */;
  %661 = @func_5529() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(5, 12, 7), float32], Tensor[(420), float32]) */;
  %662 = %658.0;
  %663 = @func_13062(%660) /* ty=Tensor[(7, 1, 12), float32] */;
  %664 = %661.0;
  (%662, %663, meta[relay.Constant][24] /* ty=Tensor[(84), float32] */, %664)
}

def @func_14594() -> (Tensor[(3, 6, 5), bool], Tensor[(5, 9, 7), float64], Tensor[(420), float32]) {
  @func_14592() /* ty=(Tensor[(3, 6, 5), bool], Tensor[(5, 9, 7), float64], Tensor[(420), float32]) */
}

def @func_15716(%var_15715: Tensor[(2080), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64], Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8], Tensor[(15, 15, 14), float32]) {
  %682 = fn (%var_15677: Tensor[(2080), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64], Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8], Tensor[(15, 15, 14), float32]) {
    %665 = @func_9351() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %666 = @func_7507() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8]) */;
    %667 = %665.0;
    %668 = cast(%667, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
    %669 = cast(%var_15677, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %670 = reshape(%668, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
    %671 = reshape(%669, newshape=[2080, 1]) /* ty=Tensor[(2080, 1), int64] */;
    %672 = @func_3134(%670, %671) /* ty=(Tensor[(3, 6, 5), bool], Tensor[(13, 10, 16), int64], Tensor[(2080, 1), int64], Tensor[(2080), int64]) */;
    %673 = @func_5808() /* ty=(Tensor[(6, 16, 5), int8],) */;
    %674 = @func_10544() /* ty=(Tensor[(15, 15, 14), float32], Tensor[(5, 9, 7), float64]) */;
    %675 = @func_10683() /* ty=Tensor[(3, 6, 5), float64] */;
    %676 = %666.0;
    %677 = @func_13472() /* ty=Tensor[(3, 6, 5), float64] */;
    %678 = %672.3;
    %679 = @func_11811() /* ty=Tensor[(3, 6, 5), float64] */;
    %680 = %673.0;
    %681 = %674.0;
    (%675, %667, %676, %677, %678, %var_15677, %679, %680, %681)
  };
  %682(%var_15715) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64], Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8], Tensor[(15, 15, 14), float32]) */
}

def @func_9750() -> (Tensor[(3, 6, 5), float64],) {
  %684 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %683 = @func_6893() /* ty=Tensor[(3, 6, 5), float64] */;
    (%683,)
  };
  %684() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_10529() -> (Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  @func_10527() /* ty=(Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_13474() -> Tensor[(3, 6, 5), float64] {
  @func_13472() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_6082(%var_6066: Tensor[(2080), int64]) -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64], Tensor[(792), int64]) {
  %685 = @func_5771() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %686 = @func_2735() /* ty=Tensor[(3, 6, 5), float64] */;
  %687 = cast(%686, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %688 = reshape(%687, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
  %689 = @func_3430(%688) /* ty=(Tensor[(3, 6, 5), bool],) */;
  %690 = @func_4012() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %691 = cast(%var_6066, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %692 = reshape(%691, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
  %693 = @func_3276(%692) /* ty=(Tensor[(2080), bool],) */;
  %694 = @func_4227() /* ty=(Tensor[(792), int64],) */;
  %695 = @func_5043() /* ty=Tensor[(792), int64] */;
  %696 = %685.1;
  %697 = %689.0;
  %698 = %690.0;
  %699 = %693.0;
  %700 = %694.0;
  (%695, %696, %686, %697, %698, %699, %var_6066, %700)
}

def @func_14454() -> Tensor[(3, 6, 5), float64] {
  @func_14452() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_10685() -> Tensor[(3, 6, 5), float64] {
  @func_10683() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_13183() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) {
  @func_13181() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) */
}

def @func_2209() -> (Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) {
  %701 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %702 = cast(meta[relay.Constant][25] /* ty=Tensor[(792), int64] */, dtype="int64") /* ty=Tensor[(792), int64] */;
  %703 = reshape(%702, newshape=[11, 8, 9]) /* ty=Tensor[(11, 8, 9), int64] */;
  %704 = %701.0;
  %705 = @func_1663(%703) /* ty=Tensor[(11, 8, 9), uint8] */;
  (%704, %705, meta[relay.Constant][25] /* ty=Tensor[(792), int64] */)
}

def @func_7139() -> Tensor[(3, 6, 5), float64] {
  %707 = fn () -> Tensor[(3, 6, 5), float64] {
    %706 = @func_4447() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
    %706.0
  };
  %707() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_3808(%var_3806: Tensor[(3, 6, 5), float64], %var_3807: Tensor[(2080), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(10, 7, 11), uint64], Tensor[(770), uint64]) {
  @func_3804(%var_3806, %var_3807) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(10, 7, 11), uint64], Tensor[(770), uint64]) */
}

def @func_2285() -> (Tensor[(3, 6, 5), float64],) {
  @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_4790() -> (Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) {
  %715 = fn () -> (Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) {
    %708 = @func_4175() /* ty=(Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
    %709 = @func_3595() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(2, 1040), int64]) */;
    %710 = @func_2699() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %711 = %708.1;
    %712 = @func_2354() /* ty=Tensor[(792), int64] */;
    %713 = %709.2;
    %714 = %710.0;
    (%711, %712, %713, %714)
  };
  %715() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) */
}

def @func_6085(%var_6083: Tensor[(2080), int64]) -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64], Tensor[(792), int64]) {
  @func_6082(%var_6083) /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64], Tensor[(792), int64]) */
}

def @func_9497() -> Tensor[(3, 6, 5), float64] {
  %717 = fn () -> Tensor[(3, 6, 5), float64] {
    %716 = @func_7203() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) */;
    %716.0
  };
  %717() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_7507() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8]) {
  %718 = @func_4447() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %719 = @func_6117() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */;
  %720 = cast(meta[relay.Constant][26] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %721 = reshape(%720, newshape=[6, 16, 5]) /* ty=Tensor[(6, 16, 5), int8] */;
  %722 = @func_4214(%721) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int32]) */;
  %723 = @func_2349() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %724 = %718.1;
  %725 = cast(%724, dtype="int64") /* ty=Tensor[(792), int64] */;
  %726 = reshape(%725, newshape=[11, 8, 9]) /* ty=Tensor[(11, 8, 9), int64] */;
  %727 = %719.1;
  %728 = %722.0;
  %729 = %723.0;
  %730 = @func_1663(%726) /* ty=Tensor[(11, 8, 9), uint8] */;
  (%724, %727, %728, meta[relay.Constant][26] /* ty=Tensor[(480), int8] */, %729, %730)
}

def @func_3432(%var_3431: Tensor[(3, 6, 5), float64]) -> (Tensor[(3, 6, 5), bool],) {
  %738 = fn (%var_3422: Tensor[(3, 6, 5), float64]) -> (Tensor[(3, 6, 5), bool],) {
    %731 = @func_2876() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) */;
    %732 = %731.0;
    %733 = cast(%var_3422, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
    %734 = shape_of(%732, dtype="int32") /* ty=Tensor[(3), int32] */;
    %735 = cast(%732, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
    %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %737 = logical_and(%735, %736) /* ty=Tensor[(3, 6, 5), bool] */;
    (%737,)
  };
  %738(%var_3431) /* ty=(Tensor[(3, 6, 5), bool],) */
}

def @func_15059() -> Tensor[(3, 6, 5), float64] {
  %739 = @func_13201() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %739.0
}

def @func_3017() -> Tensor[(6, 16, 5), int8] {
  @func_3015() /* ty=Tensor[(6, 16, 5), int8] */
}

def @func_12897() -> Tensor[(3, 6, 5), float64] {
  %740 = fn () -> Tensor[(3, 6, 5), float64] {
    @func_2735() /* ty=Tensor[(3, 6, 5), float64] */
  };
  %740() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_12354() -> Tensor[(3, 6, 5), int16] {
  %741 = @func_5725() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), int16]) */;
  %741.1
}

def @func_13181() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) {
  %742 = @func_4364() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %743 = %742.0;
  %744 = @func_12896() /* ty=Tensor[(3, 6, 5), float64] */;
  %745 = @func_10014() /* ty=Tensor[(3, 6, 5), float32] */;
  (%743, %744, %745)
}

def @func_72(%var_43: Tensor[(10, 7, 11), uint64]) -> (Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) {
  %746 = cast(meta[relay.Constant][27] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %747 = cast(%var_43, dtype="uint64") /* ty=Tensor[(10, 7, 11), uint64] */;
  %748 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 2080), int64] */, dtype="int64") /* ty=Tensor[(1, 2080), int64] */;
  %749 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 2080), int64] */, dtype="int64") /* ty=Tensor[(1, 2080), int64] */;
  %750 = reshape(%748, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %751 = reshape(%749, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %752 = @func_20(%750, %751) /* ty=Tensor[(13, 10, 16), int64] */;
  %753 = cast(%752, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %754 = cast(%752, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %755 = reshape(%753, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %756 = reshape(%754, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %757 = subtract(%746, %747) /* ty=Tensor[(10, 7, 11), uint64] */;
  %758 = @func_20(%755, %756) /* ty=Tensor[(13, 10, 16), int64] */;
  (%757, %752, meta[relay.Constant][28] /* ty=Tensor[(1, 2080), int64] */, %758)
}

def @func_2584() -> Tensor[(3, 6, 5), float64] {
  @func_2582() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_3839(%var_3837: Tensor[(3, 6, 5), float64]) -> Tensor[(3, 6, 5), bool] {
  @func_3836(%var_3837) /* ty=Tensor[(3, 6, 5), bool] */
}

def @func_4453() -> (Tensor[(3, 6, 5), float64],) {
  %761 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %759 = @func_2876() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) */;
    %760 = %759.0;
    (%760,)
  };
  %761() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_7130() -> Tensor[(792), int64] {
  @func_7128() /* ty=Tensor[(792), int64] */
}

def @func_7310() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %762 = @func_5931() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %763 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
  %764 = %762.0;
  %765 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  %766 = %763.0;
  (%764, %765, %766)
}

def @func_10527() -> (Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %767 = @func_7203() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) */;
  %768 = @func_9885() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %769 = @func_7434() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %770 = %767.2;
  %771 = %768.0;
  %772 = %769.1;
  (%770, %771, %772)
}

def @func_8517() -> (Tensor[(3, 6, 5), float64],) {
  @func_8515() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_9887() -> (Tensor[(3, 6, 5), float64],) {
  @func_9885() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_9158() -> Tensor[(3, 6, 5), float64] {
  @func_9156() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_8604() -> (Tensor[(2, 1040), bool], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32]) {
  @func_8602() /* ty=(Tensor[(2, 1040), bool], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32]) */
}

def @func_9059() -> (Tensor[(792), int64],) {
  %775 = fn () -> (Tensor[(792), int64],) {
    %773 = @func_4447() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
    %774 = %773.1;
    (%774,)
  };
  %775() /* ty=(Tensor[(792), int64],) */
}

def @func_8431() -> (Tensor[(3, 6, 5), float64],) {
  %776 = @func_7138() /* ty=Tensor[(3, 6, 5), float64] */;
  (%776,)
}

def @func_13062(%var_13059: Tensor[(7, 1, 12), float32]) -> Tensor[(7, 1, 12), float32] {
  %777 = cast(%var_13059, dtype="float32") /* ty=Tensor[(7, 1, 12), float32] */;
  atanh(%777) /* ty=Tensor[(7, 1, 12), float32] */
}

def @func_14726() -> (Tensor[(3, 6, 5), float64],) {
  @func_14724() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_2516(%var_2452: Tensor[(5, 12, 7), float32], %var_2453: Tensor[(5, 12, 7), float32]) -> (Tensor[(5, 12, 7), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(3, 6, 5), float32]) {
  %778 = cast(%var_2453, dtype="float32") /* ty=Tensor[(5, 12, 7), float32] */;
  %779 = shape_of(%var_2452, dtype="int32") /* ty=Tensor[(3), int32] */;
  %780 = cast(%var_2452, dtype="float32") /* ty=Tensor[(5, 12, 7), float32] */;
  %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %782 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %783 = @func_2354() /* ty=Tensor[(792), int64] */;
  %784 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
  %785 = %784.2;
  %786 = cast(%785, dtype="int32") /* ty=Tensor[(792), int32] */;
  %787 = shape_of(%783, dtype="int32") /* ty=Tensor[(1), int32] */;
  %788 = cast(%783, dtype="int32") /* ty=Tensor[(792), int32] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?), int32] */;
  %790 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %791 = %790.0;
  %792 = cast(%791, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
  %793 = divide(%780, %781) /* ty=Tensor[(5, 12, 7), float32] */;
  %794 = %782.0;
  %795 = bitwise_or(%788, %789) /* ty=Tensor[(792), int32] */;
  %796 = log10(%792) /* ty=Tensor[(3, 6, 5), float32] */;
  (%793, %794, %795, %796)
}

def @func_11235(%var_11233: float64, %var_11234: Tensor[(14, 5, 12), float64]) -> Tensor[(14, 5, 12), float64] {
  %799 = fn (%var_11224: float64, %var_11225: Tensor[(14, 5, 12), float64]) -> Tensor[(14, 5, 12), float64] {
    %797 = cast(%var_11224, dtype="float64") /* ty=float64 */;
    %798 = cast(%var_11225, dtype="float64") /* ty=Tensor[(14, 5, 12), float64] */;
    mod(%797, %798) /* ty=Tensor[(14, 5, 12), float64] */
  };
  %799(%var_11233, %var_11234) /* ty=Tensor[(14, 5, 12), float64] */
}

def @func_7744() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
  @func_7742() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */
}

def @func_3865() -> (Tensor[(792), int64],) {
  @func_3863() /* ty=(Tensor[(792), int64],) */
}

def @func_2582() -> Tensor[(3, 6, 5), float64] {
  %800 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %800.0
}

def @func_5727() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), int16]) {
  @func_5725() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), int16]) */
}

def @func_13020() -> (Tensor[(3, 6, 5), float64],) {
  %803 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %801 = @func_4175() /* ty=(Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
    %802 = %801.2;
    (%802,)
  };
  %803() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_15322(%var_15321: Tensor[(1040, 2), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(1040, 2), int64], Tensor[(792), int64]) {
  %812 = fn (%var_15293: Tensor[(1040, 2), int64]) -> (Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(1040, 2), int64], Tensor[(792), int64]) {
    %804 = @func_6356() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
    %805 = cast(%var_15293, dtype="int64") /* ty=Tensor[(1040, 2), int64] */;
    %806 = reshape(%805, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
    %807 = @func_642(%806) /* ty=(Tensor[(10, 5, 9), float64], Tensor[(770), uint64], Tensor[(13, 10, 16), int16], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64]) */;
    %808 = @func_7742() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
    %809 = %804.4;
    %810 = %807.7;
    %811 = %808.0;
    (%809, %810, %var_15293, %811)
  };
  %812(%var_15321) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(1040, 2), int64], Tensor[(792), int64]) */
}

def @func_15156() -> Tensor[(792), int64] {
  %813 = @func_9531() /* ty=(Tensor[(792), int64],) */;
  %813.0
}

def @func_2283() -> (Tensor[(3, 6, 5), float64],) {
  %814 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
  %815 = %814.0;
  (%815,)
}

def @func_13892(%var_13891: Tensor[(5, 9, 7), float64]) -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 14, 12), bool], Tensor[(504), int64], Tensor[(3, 6, 5), float64], Tensor[(5, 9, 7), bool]) {
  %843 = fn (%var_13816: Tensor[(5, 9, 7), float64]) -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 14, 12), bool], Tensor[(504), int64], Tensor[(3, 6, 5), float64], Tensor[(5, 9, 7), bool]) {
    %816 = @func_12122() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) */;
    %817 = @func_12550() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %818 = @func_11635() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
    %819 = cast(meta[relay.Constant][29] /* ty=Tensor[(504), int64] */, dtype="int64") /* ty=Tensor[(504), int64] */;
    %820 = cast(meta[relay.Constant][29] /* ty=Tensor[(504), int64] */, dtype="int64") /* ty=Tensor[(504), int64] */;
    %821 = reshape(%819, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), int64] */;
    %822 = reshape(%820, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), int64] */;
    %823 = @func_9393(%821, %822) /* ty=(Tensor[(3, 14, 12), bool], Tensor[(2, 1040), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %824 = @func_2976() /* ty=Tensor[(5, 9, 7), float64] */;
    %825 = cast(%824, dtype="float64") /* ty=Tensor[(5, 9, 7), float64] */;
    %826 = atan(%825) /* ty=Tensor[(5, 9, 7), float64] */;
    %827 = cast(%var_13816, dtype="bool") /* ty=Tensor[(5, 9, 7), bool] */;
    %828 = shape_of(%824, dtype="int32") /* ty=Tensor[(3), int32] */;
    %829 = cast(%824, dtype="bool") /* ty=Tensor[(5, 9, 7), bool] */;
    %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %831 = greater_equal(%829, %830) /* ty=Tensor[(5, 9, 7), bool] */;
    %832 = cast(%831, dtype="bool") /* ty=Tensor[(5, 9, 7), bool] */;
    %833 = shape_of(%826, dtype="int32") /* ty=Tensor[(3), int32] */;
    %834 = cast(%826, dtype="bool") /* ty=Tensor[(5, 9, 7), bool] */;
    %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %836 = @func_8520() /* ty=Tensor[(3, 6, 5), float32] */;
    %837 = %816.0;
    %838 = %817.1;
    %839 = %818.1;
    %840 = %823.0;
    %841 = @func_10683() /* ty=Tensor[(3, 6, 5), float64] */;
    %842 = not_equal(%834, %835) /* ty=Tensor[(5, 9, 7), bool] */;
    (%836, %837, %838, %839, %840, meta[relay.Constant][29] /* ty=Tensor[(504), int64] */, %841, %842)
  };
  %843(%var_13891) /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 14, 12), bool], Tensor[(504), int64], Tensor[(3, 6, 5), float64], Tensor[(5, 9, 7), bool]) */
}

def @func_11718() -> Tensor[(792), float32] {
  %847 = fn () -> Tensor[(792), float32] {
    %844 = @func_11175() /* ty=(Tensor[(792), float64],) */;
    %845 = %844.0;
    %846 = cast(%845, dtype="float32") /* ty=Tensor[(792), float32] */;
    asin(%846) /* ty=Tensor[(792), float32] */
  };
  %847() /* ty=Tensor[(792), float32] */
}

def @func_10836(%var_10834: Tensor[(2, 1040), bool]) -> (Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(2080), int64], Tensor[(448), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), int16], Tensor[(3, 6, 5), float64]) {
  @func_10833(%var_10834) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(2080), int64], Tensor[(448), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), int16], Tensor[(3, 6, 5), float64]) */
}

def @func_13717() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32]) {
  @func_13715() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32]) */
}

def @func_4972(%var_4946: Tensor[(3, 6, 5), float64]) -> (Tensor[(3, 6, 5), int16],) {
  %848 = @func_4364() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %849 = %848.0;
  %850 = cast(%var_4946, dtype="int16") /* ty=Tensor[(3, 6, 5), int16] */;
  %851 = shape_of(%849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %852 = cast(%849, dtype="int16") /* ty=Tensor[(3, 6, 5), int16] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %854 = multiply(%852, %853) /* ty=Tensor[(3, 6, 5), int16] */;
  (%854,)
}

def @func_8377() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  @func_8375() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_12552() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  @func_12550() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_15794(%var_15792: Tensor[(2080), int64], %var_15793: Tensor[(5, 4), float64]) -> (Tensor[(6, 16, 5), int8], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(1, 10, 2), float64], Tensor[(5, 4), float64], Tensor[(3, 6, 5), int16]) {
  %865 = fn (%var_15769: Tensor[(2080), int64], %var_15780: Tensor[(5, 4), float64]) -> (Tensor[(6, 16, 5), int8], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(1, 10, 2), float64], Tensor[(5, 4), float64], Tensor[(3, 6, 5), int16]) {
    %855 = cast(%var_15769, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %856 = reshape(%855, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
    %857 = @func_8989(%856) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float32]) */;
    %858 = cast(%var_15780, dtype="float64") /* ty=Tensor[(5, 4), float64] */;
    %859 = reshape(%858, newshape=[1, 10, 2]) /* ty=Tensor[(1, 10, 2), float64] */;
    %860 = @func_7871(%859) /* ty=(Tensor[(1, 10, 2), float64],) */;
    %861 = @func_3015() /* ty=Tensor[(6, 16, 5), int8] */;
    %862 = %857.3;
    %863 = %860.0;
    %864 = @func_12354() /* ty=Tensor[(3, 6, 5), int16] */;
    (%861, %862, %var_15769, %863, %var_15780, %864)
  };
  %865(%var_15792, %var_15793) /* ty=(Tensor[(6, 16, 5), int8], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(1, 10, 2), float64], Tensor[(5, 4), float64], Tensor[(3, 6, 5), int16]) */
}

def @func_15984() -> (Tensor[(5, 9, 7), float64], Tensor[(2080), bool]) {
  %870 = fn () -> (Tensor[(5, 9, 7), float64], Tensor[(2080), bool]) {
    %866 = @func_15951() /* ty=(Tensor[(3, 6, 5), bool], Tensor[(5, 9, 7), float64]) */;
    %867 = @func_7203() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) */;
    %868 = %866.1;
    %869 = %867.1;
    (%868, %869)
  };
  %870() /* ty=(Tensor[(5, 9, 7), float64], Tensor[(2080), bool]) */
}

def @func_7673() -> Tensor[(3, 6, 5), float64] {
  %872 = fn () -> Tensor[(3, 6, 5), float64] {
    %871 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %871.0
  };
  %872() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_13681() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(1, 13, 8), int64], Tensor[(104), uint32], Tensor[(792), int64]) {
  %873 = @func_5481() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %874 = cast(meta[relay.Constant][30] /* ty=Tensor[(104), uint32] */, dtype="uint32") /* ty=Tensor[(104), uint32] */;
  %875 = reshape(%874, newshape=[1, 13, 8]) /* ty=Tensor[(1, 13, 8), uint32] */;
  %876 = @func_6149() /* ty=(Tensor[(792), int64],) */;
  %877 = @func_6825() /* ty=Tensor[(3, 6, 5), float64] */;
  %878 = %873.0;
  %879 = @func_10857(%875) /* ty=Tensor[(1, 13, 8), int64] */;
  %880 = %876.0;
  (%877, %878, %879, meta[relay.Constant][30] /* ty=Tensor[(104), uint32] */, %880)
}

def @func_12988(%var_12986: Tensor[(13, 16, 13), float32], %var_12987: Tensor[(13, 16, 13), float32]) -> Tensor[(13, 16, 13), float32] {
  @func_12984(%var_12986, %var_12987) /* ty=Tensor[(13, 16, 13), float32] */
}

def @func_16155(%var_16137: Tensor[(7, 9, 12), float64]) -> (Tensor[(7, 9, 12), float64],) {
  %881 = cast(%var_16137, dtype="float64") /* ty=Tensor[(7, 9, 12), float64] */;
  %882 = rsqrt(%881) /* ty=Tensor[(7, 9, 12), float64] */;
  (%882,)
}

def @func_14070(%var_14066: Tensor[(10, 5, 7), float64], %var_14067: Tensor[(315), float64], %var_14068: Tensor[(104, 1), uint32], %var_14069: Tensor[(2080), int64]) -> (Tensor[(10, 5, 7), float64], Tensor[(3, 6, 5), float32], Tensor[(315), float64], Tensor[(1, 13, 8), int64], Tensor[(104, 1), uint32], Tensor[(1040, 2), int64], Tensor[(448), float64], Tensor[(2080), int64]) {
  @func_14064(%var_14066, %var_14067, %var_14068, %var_14069) /* ty=(Tensor[(10, 5, 7), float64], Tensor[(3, 6, 5), float32], Tensor[(315), float64], Tensor[(1, 13, 8), int64], Tensor[(104, 1), uint32], Tensor[(1040, 2), int64], Tensor[(448), float64], Tensor[(2080), int64]) */
}

def @func_2356() -> Tensor[(792), int64] {
  @func_2354() /* ty=Tensor[(792), int64] */
}

def @func_642(%var_582: Tensor[(13, 10, 16), int64]) -> (Tensor[(10, 5, 9), float64], Tensor[(770), uint64], Tensor[(13, 10, 16), int16], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64]) {
  %883 = cast(8.60294f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %884 = cast(meta[relay.Constant][31] /* ty=Tensor[(10, 5, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 5, 9), float64] */;
  %885 = cast(meta[relay.Constant][32] /* ty=Tensor[(770), uint64] */, dtype="uint64") /* ty=Tensor[(770), uint64] */;
  %886 = reshape(%885, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), uint64] */;
  %887 = @func_72(%886) /* ty=(Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) */;
  %888 = %887.1;
  %889 = cast(%var_582, dtype="int16") /* ty=Tensor[(13, 10, 16), int16] */;
  %890 = shape_of(%888, dtype="int32") /* ty=Tensor[(3), int32] */;
  %891 = cast(%888, dtype="int16") /* ty=Tensor[(13, 10, 16), int16] */;
  %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %893 = cast(meta[relay.Constant][32] /* ty=Tensor[(770), uint64] */, dtype="uint64") /* ty=Tensor[(770), uint64] */;
  %894 = reshape(%893, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), uint64] */;
  %895 = @func_72(%894) /* ty=(Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) */;
  %896 = cast(%var_582, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %897 = %895.3;
  %898 = cast(%897, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %899 = reshape(%896, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %900 = reshape(%898, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %901 = cast(%888, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %902 = cast(%888, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %903 = reshape(%901, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %904 = reshape(%902, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %905 = cast(%var_582, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %906 = bitwise_and(%891, %892) /* ty=Tensor[(13, 10, 16), int16] */;
  %907 = cast(%906, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %908 = reshape(%905, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %909 = reshape(%907, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
  %910 = cast(meta[relay.Constant][32] /* ty=Tensor[(770), uint64] */, dtype="uint64") /* ty=Tensor[(770), uint64] */;
  %911 = reshape(%910, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), uint64] */;
  %912 = @func_72(%911) /* ty=(Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) */;
  %913 = divide(%883, %884) /* ty=Tensor[(10, 5, 9), float64] */;
  %914 = @func_20(%899, %900) /* ty=Tensor[(13, 10, 16), int64] */;
  %915 = @func_20(%903, %904) /* ty=Tensor[(13, 10, 16), int64] */;
  %916 = @func_20(%908, %909) /* ty=Tensor[(13, 10, 16), int64] */;
  %917 = %912.1;
  (%913, meta[relay.Constant][32] /* ty=Tensor[(770), uint64] */, %906, %897, %914, %915, %916, %917)
}

def @func_4725() -> Tensor[(3, 6, 5), float64] {
  @func_4723() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_3578() -> Tensor[(3, 6, 5), float64] {
  %919 = fn () -> Tensor[(3, 6, 5), float64] {
    %918 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %918.0
  };
  %919() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_5705() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  %920 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %921 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %922 = @func_4227() /* ty=(Tensor[(792), int64],) */;
  %923 = %920.0;
  %924 = %921.0;
  %925 = %922.0;
  (%923, %924, %925)
}

def @func_15612() -> Tensor[(5, 9, 7), float64] {
  %927 = fn () -> Tensor[(5, 9, 7), float64] {
    %926 = @func_10544() /* ty=(Tensor[(15, 15, 14), float32], Tensor[(5, 9, 7), float64]) */;
    %926.1
  };
  %927() /* ty=Tensor[(5, 9, 7), float64] */
}

def @func_14064(%var_14033: Tensor[(10, 5, 7), float64], %var_14048: Tensor[(315), float64], %var_14056: Tensor[(104, 1), uint32], %var_14062: Tensor[(2080), int64]) -> (Tensor[(10, 5, 7), float64], Tensor[(3, 6, 5), float32], Tensor[(315), float64], Tensor[(1, 13, 8), int64], Tensor[(104, 1), uint32], Tensor[(1040, 2), int64], Tensor[(448), float64], Tensor[(2080), int64]) {
  %928 = cast(%var_14033, dtype="float64") /* ty=Tensor[(10, 5, 7), float64] */;
  %929 = cast(%var_14048, dtype="float64") /* ty=Tensor[(315), float64] */;
  %930 = reshape(%929, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float64] */;
  %931 = @func_13890(%930) /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 14, 12), bool], Tensor[(504), int64], Tensor[(3, 6, 5), float64], Tensor[(5, 9, 7), bool]) */;
  %932 = cast(%var_14056, dtype="uint32") /* ty=Tensor[(104, 1), uint32] */;
  %933 = reshape(%932, newshape=[1, 13, 8]) /* ty=Tensor[(1, 13, 8), uint32] */;
  %934 = cast(meta[relay.Constant][33] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %935 = cast(%var_14062, dtype="int64") /* ty=Tensor[(2080), int64] */;
  %936 = reshape(%934, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %937 = reshape(%935, newshape=[1040, 2]) /* ty=Tensor[(1040, 2), int64] */;
  %938 = @func_6551(%936, %937) /* ty=(Tensor[(6, 16, 5), float32], Tensor[(7, 8, 8), bool], Tensor[(448), float64], Tensor[(2, 1040), float64], Tensor[(1040, 2), int64], Tensor[(792), int64]) */;
  %939 = atan(%928) /* ty=Tensor[(10, 5, 7), float64] */;
  %940 = %931.0;
  %941 = @func_10857(%933) /* ty=Tensor[(1, 13, 8), int64] */;
  %942 = %938.4;
  (%939, %940, %var_14048, %941, %var_14056, %942, meta[relay.Constant][33] /* ty=Tensor[(448), float64] */, %var_14062)
}

def @func_24(%var_22: Tensor[(13, 10, 16), int64], %var_23: Tensor[(13, 10, 16), int64]) -> Tensor[(13, 10, 16), int64] {
  @func_20(%var_22, %var_23) /* ty=Tensor[(13, 10, 16), int64] */
}

def @func_15952() -> (Tensor[(3, 6, 5), bool], Tensor[(5, 9, 7), float64]) {
  %945 = fn () -> (Tensor[(3, 6, 5), bool], Tensor[(5, 9, 7), float64]) {
    %943 = @func_8832() /* ty=Tensor[(3, 6, 5), bool] */;
    %944 = @func_15611() /* ty=Tensor[(5, 9, 7), float64] */;
    (%943, %944)
  };
  %945() /* ty=(Tensor[(3, 6, 5), bool], Tensor[(5, 9, 7), float64]) */
}

def @func_2735() -> Tensor[(3, 6, 5), float64] {
  %946 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %946.0
}

def @func_5287() -> (Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) {
  %951 = fn () -> (Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) {
    %947 = @func_4175() /* ty=(Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
    %948 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %949 = %947.1;
    %950 = %948.0;
    (%949, %950)
  };
  %951() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */
}

def @func_16068() -> Tensor[(3, 6, 5), float64] {
  @func_13805() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_9465() -> (Tensor[(3, 6, 5), float32],) {
  %955 = fn () -> (Tensor[(3, 6, 5), float32],) {
    %952 = @func_2735() /* ty=Tensor[(3, 6, 5), float64] */;
    %953 = cast(%952, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
    %954 = erf(%953) /* ty=Tensor[(3, 6, 5), float32] */;
    (%954,)
  };
  %955() /* ty=(Tensor[(3, 6, 5), float32],) */
}

def @func_10545() -> (Tensor[(15, 15, 14), float32], Tensor[(5, 9, 7), float64]) {
  %959 = fn () -> (Tensor[(15, 15, 14), float32], Tensor[(5, 9, 7), float64]) {
    %956 = @func_4287() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(15, 15, 14), float32], Tensor[(2080), int64], Tensor[(3, 6, 5), float64]) */;
    %957 = %956.1;
    %958 = @func_2976() /* ty=Tensor[(5, 9, 7), float64] */;
    (%957, %958)
  };
  %959() /* ty=(Tensor[(15, 15, 14), float32], Tensor[(5, 9, 7), float64]) */
}

def @func_13501(%var_13484: Tensor[(13, 10, 16), int64], %var_13490: Tensor[(13, 10, 16), int64]) -> (Tensor[(13, 10, 16), float64], Tensor[(13, 10, 16), float32], Tensor[(3, 6, 5), int16]) {
  %960 = @func_3595() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(2, 1040), int64]) */;
  %961 = %960.1;
  %962 = cast(%var_13484, dtype="float64") /* ty=Tensor[(13, 10, 16), float64] */;
  %963 = shape_of(%961, dtype="int32") /* ty=Tensor[(3), int32] */;
  %964 = cast(%961, dtype="float64") /* ty=Tensor[(13, 10, 16), float64] */;
  %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %966 = cast(%var_13490, dtype="float32") /* ty=Tensor[(13, 10, 16), float32] */;
  %967 = shape_of(%var_13484, dtype="int32") /* ty=Tensor[(3), int32] */;
  %968 = cast(%var_13484, dtype="float32") /* ty=Tensor[(13, 10, 16), float32] */;
  %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %970 = @func_5725() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), int16]) */;
  %971 = subtract(%964, %965) /* ty=Tensor[(13, 10, 16), float64] */;
  %972 = divide(%968, %969) /* ty=Tensor[(13, 10, 16), float32] */;
  %973 = %970.1;
  (%971, %972, %973)
}

def @func_12984(%var_12976: Tensor[(13, 16, 13), float32], %var_12977: Tensor[(13, 16, 13), float32]) -> Tensor[(13, 16, 13), float32] {
  %974 = cast(%var_12977, dtype="float32") /* ty=Tensor[(13, 16, 13), float32] */;
  %975 = shape_of(%var_12976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(%var_12976, dtype="float32") /* ty=Tensor[(13, 16, 13), float32] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%976, %977) /* ty=Tensor[(13, 16, 13), float32] */
}

def @func_3352() -> (Tensor[(3, 6, 5), float64],) {
  %980 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %978 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %979 = %978.0;
    (%979,)
  };
  %980() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_4447() -> (Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  %981 = @func_4227() /* ty=(Tensor[(792), int64],) */;
  %982 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  %983 = %981.0;
  (%982, %983)
}

def @func_11384() -> Tensor[(3, 6, 5), float64] {
  @func_11382() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_4627() -> (Tensor[(792), int64], Tensor[(792), int64]) {
  %984 = @func_4227() /* ty=(Tensor[(792), int64],) */;
  %985 = @func_2860() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %986 = %984.0;
  %987 = %985.0;
  (%986, %987)
}

def @func_8515() -> (Tensor[(3, 6, 5), float64],) {
  %988 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %989 = %988.1;
  (%989,)
}

def @func_3278(%var_3277: Tensor[(2080), int64]) -> (Tensor[(2080), bool],) {
  %997 = fn (%var_3264: Tensor[(2080), int64]) -> (Tensor[(2080), bool],) {
    %990 = @func_3182() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */;
    %991 = %990.2;
    %992 = cast(%var_3264, dtype="bool") /* ty=Tensor[(2080), bool] */;
    %993 = shape_of(%991, dtype="int32") /* ty=Tensor[(1), int32] */;
    %994 = cast(%991, dtype="bool") /* ty=Tensor[(2080), bool] */;
    %995 = dyn.reshape(%992, %993, newshape=[]) /* ty=Tensor[(?), bool] */;
    %996 = greater(%994, %995) /* ty=Tensor[(2080), bool] */;
    (%996,)
  };
  %997(%var_3277) /* ty=(Tensor[(2080), bool],) */
}

def @func_7205() -> (Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) {
  @func_7203() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) */
}

def @func_9253() -> (Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(70, 6), float32], Tensor[(420), float32]) {
  %1009 = fn () -> (Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(70, 6), float32], Tensor[(420), float32]) {
    %998 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %999 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 2080), int64] */, dtype="int64") /* ty=Tensor[(1, 2080), int64] */;
    %1000 = reshape(%999, newshape=[2, 1040]) /* ty=Tensor[(2, 1040), int64] */;
    %1001 = @func_3095(%1000) /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(3, 6, 5), float64]) */;
    %1002 = cast(meta[relay.Constant][35] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
    %1003 = reshape(%1002, newshape=[70, 6]) /* ty=Tensor[(70, 6), float32] */;
    %1004 = @func_6431(%1003) /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(70, 6), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %1005 = @func_2685() /* ty=Tensor[(6, 16, 5), int8] */;
    %1006 = %998.0;
    %1007 = %1001.0;
    %1008 = %1004.3;
    (%1005, %1006, %1007, meta[relay.Constant][34] /* ty=Tensor[(1, 2080), int64] */, %1008, meta[relay.Constant][35] /* ty=Tensor[(420), float32] */)
  };
  %1009() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(1, 2080), int64], Tensor[(70, 6), float32], Tensor[(420), float32]) */
}

def @func_3015() -> Tensor[(6, 16, 5), int8] {
  @func_2685() /* ty=Tensor[(6, 16, 5), int8] */
}

def @func_13202() -> (Tensor[(3, 6, 5), float64],) {
  %1012 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %1010 = @func_5636() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %1011 = %1010.0;
    (%1011,)
  };
  %1012() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_4012() -> (Tensor[(3, 6, 5), float64],) {
  %1013 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  (%1013,)
}

def @func_14420() -> Tensor[(792), int64] {
  %1015 = fn () -> Tensor[(792), int64] {
    %1014 = @func_10463() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(420), float32]) */;
    %1014.0
  };
  %1015() /* ty=Tensor[(792), int64] */
}

def @func_12122() -> (Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) {
  %1016 = @func_5725() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), int16]) */;
  %1017 = %1016.1;
  %1018 = cast(%1017, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
  %1019 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  %1020 = cast(%1019, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %1021 = reshape(%1020, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
  %1022 = @func_3430(%1021) /* ty=(Tensor[(3, 6, 5), bool],) */;
  %1023 = @func_3015() /* ty=Tensor[(6, 16, 5), int8] */;
  %1024 = asin(%1018) /* ty=Tensor[(3, 6, 5), float32] */;
  %1025 = @func_7138() /* ty=Tensor[(3, 6, 5), float64] */;
  %1026 = @func_11124() /* ty=Tensor[(3, 6, 5), float64] */;
  %1027 = %1022.0;
  (%1019, %1023, %1024, %1025, %1026, %1027)
}

def @func_10683() -> Tensor[(3, 6, 5), float64] {
  %1028 = @func_9855() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
  %1028.0
}

def @func_15158() -> Tensor[(792), int64] {
  @func_15156() /* ty=Tensor[(792), int64] */
}

def @func_12495() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  @func_12493() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_20(%var_12: Tensor[(13, 10, 16), int64], %var_13: Tensor[(13, 10, 16), int64]) -> Tensor[(13, 10, 16), int64] {
  %1029 = cast(%var_13, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %1030 = shape_of(%var_12, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1031 = cast(%var_12, dtype="int64") /* ty=Tensor[(13, 10, 16), int64] */;
  %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  maximum(%1031, %1032) /* ty=Tensor[(13, 10, 16), int64] */
}

def @func_4194() -> Tensor[(3, 6, 5), float64] {
  @func_4192() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_5044() -> Tensor[(792), int64] {
  %1034 = fn () -> Tensor[(792), int64] {
    %1033 = @func_2860() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
    %1033.0
  };
  %1034() /* ty=Tensor[(792), int64] */
}

def @func_13806() -> Tensor[(3, 6, 5), float64] {
  %1036 = fn () -> Tensor[(3, 6, 5), float64] {
    %1035 = @func_9885() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %1035.0
  };
  %1036() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_11768() -> (Tensor[(3, 6, 5), float32],) {
  %1039 = fn () -> (Tensor[(3, 6, 5), float32],) {
    %1037 = @func_9464() /* ty=(Tensor[(3, 6, 5), float32],) */;
    %1038 = %1037.0;
    (%1038,)
  };
  %1039() /* ty=(Tensor[(3, 6, 5), float32],) */
}

def @func_9396(%var_9394: Tensor[(3, 14, 12), int64], %var_9395: Tensor[(3, 14, 12), int64]) -> (Tensor[(3, 14, 12), bool], Tensor[(2, 1040), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %1050 = fn (%var_9363: Tensor[(3, 14, 12), int64], %var_9364: Tensor[(3, 14, 12), int64]) -> (Tensor[(3, 14, 12), bool], Tensor[(2, 1040), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
    %1040 = cast(%var_9364, dtype="bool") /* ty=Tensor[(3, 14, 12), bool] */;
    %1041 = shape_of(%var_9363, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1042 = cast(%var_9363, dtype="bool") /* ty=Tensor[(3, 14, 12), bool] */;
    %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1044 = @func_8602() /* ty=(Tensor[(2, 1040), bool], Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32]) */;
    %1045 = @func_7764() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %1046 = less_equal(%1042, %1043) /* ty=Tensor[(3, 14, 12), bool] */;
    %1047 = %1044.0;
    %1048 = %1045.0;
    %1049 = @func_9156() /* ty=Tensor[(3, 6, 5), float64] */;
    (%1046, %1047, %1048, %1049)
  };
  %1050(%var_9394, %var_9395) /* ty=(Tensor[(3, 14, 12), bool], Tensor[(2, 1040), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_4228() -> (Tensor[(792), int64],) {
  %1052 = fn () -> (Tensor[(792), int64],) {
    %1051 = @func_2354() /* ty=Tensor[(792), int64] */;
    (%1051,)
  };
  %1052() /* ty=(Tensor[(792), int64],) */
}

def @func_4289() -> (Tensor[(3, 6, 5), float64], Tensor[(15, 15, 14), float32], Tensor[(2080), int64], Tensor[(3, 6, 5), float64]) {
  @func_4287() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(15, 15, 14), float32], Tensor[(2080), int64], Tensor[(3, 6, 5), float64]) */
}

def @func_5637() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %1056 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
    %1053 = @func_2283() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %1054 = %1053.0;
    %1055 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
    (%1054, %1055)
  };
  %1056() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_4214(%var_4208: Tensor[(6, 16, 5), int8]) -> (Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int32]) {
  %1057 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1058 = @func_4175() /* ty=(Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %1059 = %1058.1;
  %1060 = cast(%var_4208, dtype="int32") /* ty=Tensor[(6, 16, 5), int32] */;
  %1061 = shape_of(%1059, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1062 = cast(%1059, dtype="int32") /* ty=Tensor[(6, 16, 5), int32] */;
  %1063 = dyn.reshape(%1060, %1061, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1064 = %1057.0;
  %1065 = bitwise_or(%1062, %1063) /* ty=Tensor[(6, 16, 5), int32] */;
  (%1064, %1065)
}

def @func_15620() -> Tensor[(3, 6, 5), float64] {
  %1066 = fn () -> Tensor[(3, 6, 5), float64] {
    @func_9156() /* ty=Tensor[(3, 6, 5), float64] */
  };
  %1066() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_11075(%var_11074: Tensor[(1170), bool]) -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64], Tensor[(4, 9, 8), bool], Tensor[(288), uint64], Tensor[(3, 6, 5), float32], Tensor[(1170), bool], Tensor[(2, 1040), int64]) {
  %1085 = fn (%var_11039: Tensor[(1170), bool]) -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64], Tensor[(4, 9, 8), bool], Tensor[(288), uint64], Tensor[(3, 6, 5), float32], Tensor[(1170), bool], Tensor[(2, 1040), int64]) {
    %1067 = @func_7434() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
    %1068 = @func_4075() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) */;
    %1069 = @func_7092() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
    %1070 = cast(meta[relay.Constant][36] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %1071 = cast(meta[relay.Constant][36] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %1072 = reshape(%1070, newshape=[4, 9, 8]) /* ty=Tensor[(4, 9, 8), uint64] */;
    %1073 = reshape(%1071, newshape=[4, 9, 8]) /* ty=Tensor[(4, 9, 8), uint64] */;
    %1074 = cast(%var_11039, dtype="bool") /* ty=Tensor[(1170), bool] */;
    %1075 = reshape(%1074, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), bool] */;
    %1076 = @func_5387(%1075) /* ty=(Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), int32], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), bool], Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float32]) */;
    %1077 = @func_4789() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) */;
    %1078 = %1067.1;
    %1079 = @func_4723() /* ty=Tensor[(3, 6, 5), float64] */;
    %1080 = %1068.1;
    %1081 = %1069.0;
    %1082 = @func_7712(%1072, %1073) /* ty=Tensor[(4, 9, 8), bool] */;
    %1083 = %1076.5;
    %1084 = %1077.2;
    (%1078, %1079, %1080, %1081, %1082, meta[relay.Constant][36] /* ty=Tensor[(288), uint64] */, %1083, %var_11039, %1084)
  };
  %1085(%var_11074) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64], Tensor[(4, 9, 8), bool], Tensor[(288), uint64], Tensor[(3, 6, 5), float32], Tensor[(1170), bool], Tensor[(2, 1040), int64]) */
}

def @func_16117() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  @func_16115() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_3549(%var_3548: Tensor[(7, 8, 8), float64]) -> (Tensor[(7, 8, 8), bool], Tensor[(7, 8, 8), int32]) {
  %1098 = fn (%var_3530: Tensor[(7, 8, 8), float64]) -> (Tensor[(7, 8, 8), bool], Tensor[(7, 8, 8), int32]) {
    %1086 = cast(%var_3530, dtype="float64") /* ty=Tensor[(7, 8, 8), float64] */;
    %1087 = sigmoid(%1086) /* ty=Tensor[(7, 8, 8), float64] */;
    %1088 = cast(%1087, dtype="bool") /* ty=Tensor[(7, 8, 8), bool] */;
    %1089 = shape_of(%var_3530, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1090 = cast(%var_3530, dtype="bool") /* ty=Tensor[(7, 8, 8), bool] */;
    %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1092 = cast(%var_3530, dtype="int32") /* ty=Tensor[(7, 8, 8), int32] */;
    %1093 = shape_of(%1087, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1094 = cast(%1087, dtype="int32") /* ty=Tensor[(7, 8, 8), int32] */;
    %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1096 = not_equal(%1090, %1091) /* ty=Tensor[(7, 8, 8), bool] */;
    %1097 = subtract(%1094, %1095) /* ty=Tensor[(7, 8, 8), int32] */;
    (%1096, %1097)
  };
  %1098(%var_3548) /* ty=(Tensor[(7, 8, 8), bool], Tensor[(7, 8, 8), int32]) */
}

def @func_9531() -> (Tensor[(792), int64],) {
  %1099 = @func_6196() /* ty=(Tensor[(792), int64], Tensor[(6, 16, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %1100 = %1099.0;
  (%1100,)
}

def @func_5855() -> (Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) {
  %1107 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) {
    %1101 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %1102 = cast(meta[relay.Constant][37] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %1103 = reshape(%1102, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
    %1104 = @func_3276(%1103) /* ty=(Tensor[(2080), bool],) */;
    %1105 = %1101.0;
    %1106 = %1104.0;
    (%1105, %1106, meta[relay.Constant][37] /* ty=Tensor[(2080), int64] */)
  };
  %1107() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) */
}

def @func_7692() -> (Tensor[(792), int64],) {
  %1108 = @func_7434() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %1109 = %1108.0;
  (%1109,)
}

def @func_12996() -> Tensor[(3, 6, 5), float64] {
  %1110 = fn () -> Tensor[(3, 6, 5), float64] {
    @func_10683() /* ty=Tensor[(3, 6, 5), float64] */
  };
  %1110() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_16496() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(1040, 2), int64]) {
  %1117 = fn () -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(1040, 2), int64]) {
    %1111 = @func_9464() /* ty=(Tensor[(3, 6, 5), float32],) */;
    %1112 = cast(meta[relay.Constant][38] /* ty=Tensor[(1040, 2), int64] */, dtype="int64") /* ty=Tensor[(1040, 2), int64] */;
    %1113 = reshape(%1112, newshape=[2080]) /* ty=Tensor[(2080), int64] */;
    %1114 = @func_6082(%1113) /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64], Tensor[(792), int64]) */;
    %1115 = %1111.0;
    %1116 = %1114.1;
    (%1115, %1116, meta[relay.Constant][38] /* ty=Tensor[(1040, 2), int64] */)
  };
  %1117() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(1040, 2), int64]) */
}

def @func_15213(%var_15211: bool, %var_15212: Tensor[(12, 4), bool]) -> (Tensor[(3, 6, 5), float64], Tensor[(1, 4, 12), bool], bool, Tensor[(12, 4), bool], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
  %1128 = fn (%var_15192: bool, %var_15193: Tensor[(12, 4), bool]) -> (Tensor[(3, 6, 5), float64], Tensor[(1, 4, 12), bool], bool, Tensor[(12, 4), bool], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
    %1118 = @func_5286() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
    %1119 = cast(%var_15192, dtype="bool") /* ty=bool */;
    %1120 = cast(%var_15193, dtype="bool") /* ty=Tensor[(12, 4), bool] */;
    %1121 = reshape(%1119, newshape=[]) /* ty=bool */;
    %1122 = reshape(%1120, newshape=[1, 4, 12]) /* ty=Tensor[(1, 4, 12), bool] */;
    %1123 = @func_14606(%1121, %1122) /* ty=(Tensor[(1, 4, 12), bool],) */;
    %1124 = %1118.1;
    %1125 = %1123.0;
    %1126 = @func_15156() /* ty=Tensor[(792), int64] */;
    %1127 = @func_8450() /* ty=Tensor[(3, 6, 5), float64] */;
    (%1124, %1125, %var_15192, %var_15193, %1126, %1127)
  };
  %1128(%var_15211, %var_15212) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(1, 4, 12), bool], bool, Tensor[(12, 4), bool], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */
}

def @func_9276() -> (Tensor[(3, 6, 5), float64],) {
  %1131 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %1129 = @func_7507() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8]) */;
    %1130 = %1129.1;
    (%1130,)
  };
  %1131() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_4287() -> (Tensor[(3, 6, 5), float64], Tensor[(15, 15, 14), float32], Tensor[(2080), int64], Tensor[(3, 6, 5), float64]) {
  %1132 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1133 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 15, 14), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 14), float64] */;
  %1134 = cos(%1133) /* ty=Tensor[(15, 15, 14), float64] */;
  %1135 = cast(%1134, dtype="float32") /* ty=Tensor[(15, 15, 14), float32] */;
  %1136 = @func_3182() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */;
  %1137 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1138 = %1132.0;
  %1139 = sinh(%1135) /* ty=Tensor[(15, 15, 14), float32] */;
  %1140 = %1136.2;
  %1141 = %1137.0;
  (%1138, %1139, %1140, %1141)
}

def @func_11547() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(420), float32], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) {
  %1142 = @func_5481() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1143 = @func_9885() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1144 = @func_8431() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1145 = cast(meta[relay.Constant][40] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1146 = reshape(%1145, newshape=[70, 6]) /* ty=Tensor[(70, 6), float32] */;
  %1147 = @func_6431(%1146) /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(70, 6), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %1148 = @func_5808() /* ty=(Tensor[(6, 16, 5), int8],) */;
  %1149 = %1142.0;
  %1150 = %1143.0;
  %1151 = %1144.0;
  %1152 = %1147.4;
  %1153 = %1148.0;
  %1154 = @func_4925() /* ty=Tensor[(3, 6, 5), float64] */;
  (%1149, %1150, %1151, %1152, meta[relay.Constant][40] /* ty=Tensor[(420), float32] */, %1153, %1154)
}

def @func_6554(%var_6552: Tensor[(448), float64], %var_6553: Tensor[(1040, 2), int64]) -> (Tensor[(6, 16, 5), float32], Tensor[(7, 8, 8), bool], Tensor[(448), float64], Tensor[(2, 1040), float64], Tensor[(1040, 2), int64], Tensor[(792), int64]) {
  %1169 = fn (%var_6529: Tensor[(448), float64], %var_6533: Tensor[(1040, 2), int64]) -> (Tensor[(6, 16, 5), float32], Tensor[(7, 8, 8), bool], Tensor[(448), float64], Tensor[(2, 1040), float64], Tensor[(1040, 2), int64], Tensor[(792), int64]) {
    %1155 = @func_4789() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) */;
    %1156 = %1155.0;
    %1157 = cast(%1156, dtype="float32") /* ty=Tensor[(6, 16, 5), float32] */;
    %1158 = cast(%var_6529, dtype="float64") /* ty=Tensor[(448), float64] */;
    %1159 = reshape(%1158, newshape=[7, 8, 8]) /* ty=Tensor[(7, 8, 8), float64] */;
    %1160 = @func_3547(%1159) /* ty=(Tensor[(7, 8, 8), bool], Tensor[(7, 8, 8), int32]) */;
    %1161 = cast(%var_6533, dtype="int64") /* ty=Tensor[(1040, 2), int64] */;
    %1162 = reshape(%1161, newshape=[2, 1040]) /* ty=Tensor[(2, 1040), int64] */;
    %1163 = @func_3095(%1162) /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(3, 6, 5), float64]) */;
    %1164 = @func_6149() /* ty=(Tensor[(792), int64],) */;
    %1165 = acos(%1157) /* ty=Tensor[(6, 16, 5), float32] */;
    %1166 = %1160.0;
    %1167 = %1163.3;
    %1168 = %1164.0;
    (%1165, %1166, %var_6529, %1167, %var_6533, %1168)
  };
  %1169(%var_6552, %var_6553) /* ty=(Tensor[(6, 16, 5), float32], Tensor[(7, 8, 8), bool], Tensor[(448), float64], Tensor[(2, 1040), float64], Tensor[(1040, 2), int64], Tensor[(792), int64]) */
}

def @func_8832() -> Tensor[(3, 6, 5), bool] {
  %1170 = @func_7651() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float64]) */;
  %1170.1
}

def @func_6599() -> Tensor[(3, 6, 5), float64] {
  %1172 = fn () -> Tensor[(3, 6, 5), float64] {
    %1171 = @func_5705() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
    %1171.1
  };
  %1172() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_16074() -> (Tensor[(3, 6, 5), float64],) {
  %1175 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %1173 = @func_13019() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %1174 = %1173.0;
    (%1174,)
  };
  %1175() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_11176() -> (Tensor[(792), float64],) {
  %1179 = fn () -> (Tensor[(792), float64],) {
    %1176 = @func_5043() /* ty=Tensor[(792), int64] */;
    %1177 = cast(%1176, dtype="float64") /* ty=Tensor[(792), float64] */;
    %1178 = sinh(%1177) /* ty=Tensor[(792), float64] */;
    (%1178,)
  };
  %1179() /* ty=(Tensor[(792), float64],) */
}

def @func_5771() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %1180 = @func_2349() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %1181 = @func_5481() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1182 = %1180.1;
  %1183 = %1181.0;
  (%1182, %1183)
}

def @func_8038() -> (Tensor[(3, 6, 5), float64],) {
  @func_8036() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_16528() -> Tensor[(3, 6, 5), float32] {
  %1184 = @func_11767() /* ty=(Tensor[(3, 6, 5), float32],) */;
  %1184.0
}

def @func_5598() -> (Tensor[(792), int64], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
  %1194 = fn () -> (Tensor[(792), int64], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
    %1185 = @func_4789() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) */;
    %1186 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
    %1187 = @func_4570() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
    %1188 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
    %1189 = %1185.1;
    %1190 = %1186.2;
    %1191 = %1187.4;
    %1192 = %1188.2;
    %1193 = @func_2735() /* ty=Tensor[(3, 6, 5), float64] */;
    (%1189, %1190, %1191, %1192, %1193)
  };
  %1194() /* ty=(Tensor[(792), int64], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */
}

def @func_10015() -> Tensor[(3, 6, 5), float32] {
  %1196 = fn () -> Tensor[(3, 6, 5), float32] {
    %1195 = @func_5252() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) */;
    %1195.1
  };
  %1196() /* ty=Tensor[(3, 6, 5), float32] */
}

def @func_14127() -> (Tensor[(6, 16, 5), float32],) {
  @func_14125() /* ty=(Tensor[(6, 16, 5), float32],) */
}

def @func_6119() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) {
  @func_6117() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */
}

def @func_15245() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %1201 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
    %1197 = @func_12493() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %1198 = @func_7310() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %1199 = %1197.1;
    %1200 = %1198.1;
    (%1199, %1200)
  };
  %1201() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_5263() -> Tensor[(3, 6, 5), float64] {
  %1202 = @func_3182() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */;
  %1202.1
}

def @func_13715() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float32]) {
  %1203 = @func_10217() /* ty=(Tensor[(420), float32], Tensor[(3, 6, 5), float32], Tensor[(792), int64]) */;
  %1204 = @func_10014() /* ty=Tensor[(3, 6, 5), float32] */;
  %1205 = %1203.1;
  (%1204, %1205)
}

def @func_16038() -> Tensor[(3, 6, 5), float64] {
  @func_16036() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_2860() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
  %1206 = @func_2209() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64]) */;
  %1207 = @func_2354() /* ty=Tensor[(792), int64] */;
  %1208 = %1206.0;
  (%1207, %1208)
}

def @func_16242() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  %1214 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
    %1209 = @func_5481() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %1210 = @func_4447() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
    %1211 = @func_4925() /* ty=Tensor[(3, 6, 5), float64] */;
    %1212 = %1209.0;
    %1213 = %1210.1;
    (%1211, %1212, %1213)
  };
  %1214() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */
}

def @func_16158(%var_16156: Tensor[(7, 9, 12), float64]) -> (Tensor[(7, 9, 12), float64],) {
  @func_16155(%var_16156) /* ty=(Tensor[(7, 9, 12), float64],) */
}

def @func_5253() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) {
  %1220 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) {
    %1215 = @func_4447() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
    %1216 = %1215.0;
    %1217 = cast(%1216, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
    %1218 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
    %1219 = sigmoid(%1217) /* ty=Tensor[(3, 6, 5), float32] */;
    (%1218, %1219)
  };
  %1220() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) */
}

def @func_12678() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) {
  %1225 = fn () -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) {
    %1221 = @func_7573() /* ty=(Tensor[(3, 6, 5), float32],) */;
    %1222 = @func_5286() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
    %1223 = %1221.0;
    %1224 = %1222.1;
    (%1223, %1224)
  };
  %1225() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */
}

def @func_10420() -> (Tensor[(3, 6, 5), float64],) {
  %1228 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %1226 = @func_4452() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %1227 = %1226.0;
    (%1227,)
  };
  %1228() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_10632() -> (Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64]) {
  @func_10630() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64]) */
}

def @func_14724() -> (Tensor[(3, 6, 5), float64],) {
  %1229 = @func_4075() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int8]) */;
  %1230 = %1229.0;
  (%1230,)
}

def @func_14892() -> (Tensor[(3, 6, 5), bool],) {
  %1232 = fn () -> (Tensor[(3, 6, 5), bool],) {
    %1231 = @func_8832() /* ty=Tensor[(3, 6, 5), bool] */;
    (%1231,)
  };
  %1232() /* ty=(Tensor[(3, 6, 5), bool],) */
}

def @func_6356() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
  %1233 = cast(meta[relay.Constant][41] /* ty=Tensor[(480), int8] */, dtype="int8") /* ty=Tensor[(480), int8] */;
  %1234 = reshape(%1233, newshape=[6, 16, 5]) /* ty=Tensor[(6, 16, 5), int8] */;
  %1235 = @func_4214(%1234) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(6, 16, 5), int32]) */;
  %1236 = @func_5043() /* ty=Tensor[(792), int64] */;
  %1237 = %1235.0;
  %1238 = @func_2354() /* ty=Tensor[(792), int64] */;
  %1239 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  (%1236, %1237, meta[relay.Constant][41] /* ty=Tensor[(480), int8] */, %1238, %1239)
}

def @func_5530() -> (Tensor[(3, 6, 5), float64], Tensor[(5, 12, 7), float32], Tensor[(420), float32]) {
  %1248 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(5, 12, 7), float32], Tensor[(420), float32]) {
    %1240 = @func_5286() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
    %1241 = cast(meta[relay.Constant][42] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
    %1242 = cast(meta[relay.Constant][42] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
    %1243 = reshape(%1241, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
    %1244 = reshape(%1242, newshape=[5, 12, 7]) /* ty=Tensor[(5, 12, 7), float32] */;
    %1245 = @func_2516(%1243, %1244) /* ty=(Tensor[(5, 12, 7), float32], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(3, 6, 5), float32]) */;
    %1246 = %1240.1;
    %1247 = %1245.0;
    (%1246, %1247, meta[relay.Constant][42] /* ty=Tensor[(420), float32] */)
  };
  %1248() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(5, 12, 7), float32], Tensor[(420), float32]) */
}

def @func_5773() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  @func_5771() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_7653() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float64]) {
  @func_7651() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float64]) */
}

def @func_15000() -> (Tensor[(3, 6, 5), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(3, 6, 5), float64]) {
  @func_14998() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(7, 1, 12), float32], Tensor[(84), float32], Tensor[(3, 6, 5), float64]) */
}

def @func_7093() -> (Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  %1253 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
    %1249 = @func_2699() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %1250 = @func_3863() /* ty=(Tensor[(792), int64],) */;
    %1251 = %1249.0;
    %1252 = %1250.0;
    (%1251, %1252)
  };
  %1253() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */
}

def @func_6773(%var_6771: Tensor[(6, 16, 5), float32]) -> (Tensor[(6, 16, 5), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) {
  @func_6770(%var_6771) /* ty=(Tensor[(6, 16, 5), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) */
}

def @func_9156() -> Tensor[(3, 6, 5), float64] {
  %1254 = @func_7310() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %1254.0
}

def @func_14505() -> Tensor[(3, 6, 5), float64] {
  @func_14503() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_8834() -> Tensor[(3, 6, 5), bool] {
  @func_8832() /* ty=Tensor[(3, 6, 5), bool] */
}

def @func_13237() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  @func_13235() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */
}

def @func_10464() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(420), float32]) {
  %1261 = fn () -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(420), float32]) {
    %1255 = @func_7092() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64]) */;
    %1256 = cast(meta[relay.Constant][43] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
    %1257 = reshape(%1256, newshape=[70, 6]) /* ty=Tensor[(70, 6), float32] */;
    %1258 = @func_6431(%1257) /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(792), int32], Tensor[(70, 6), float32], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
    %1259 = %1255.1;
    %1260 = %1258.5;
    (%1259, %1260, meta[relay.Constant][43] /* ty=Tensor[(420), float32] */)
  };
  %1261() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(420), float32]) */
}

def @func_3137(%var_3135: Tensor[(3, 6, 5), float64], %var_3136: Tensor[(2080, 1), int64]) -> (Tensor[(3, 6, 5), bool], Tensor[(13, 10, 16), int64], Tensor[(2080, 1), int64], Tensor[(2080), int64]) {
  %1274 = fn (%var_3113: Tensor[(3, 6, 5), float64], %var_3119: Tensor[(2080, 1), int64]) -> (Tensor[(3, 6, 5), bool], Tensor[(13, 10, 16), int64], Tensor[(2080, 1), int64], Tensor[(2080), int64]) {
    %1262 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
    %1263 = cast(%var_3113, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
    %1264 = shape_of(%1262, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1265 = cast(%1262, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
    %1266 = dyn.reshape(%1263, %1264, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1267 = cast(%var_3119, dtype="int64") /* ty=Tensor[(2080, 1), int64] */;
    %1268 = reshape(%1267, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int64] */;
    %1269 = @func_642(%1268) /* ty=(Tensor[(10, 5, 9), float64], Tensor[(770), uint64], Tensor[(13, 10, 16), int16], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64], Tensor[(13, 10, 16), int64]) */;
    %1270 = @func_2876() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64]) */;
    %1271 = not_equal(%1265, %1266) /* ty=Tensor[(3, 6, 5), bool] */;
    %1272 = %1269.4;
    %1273 = %1270.2;
    (%1271, %1272, %var_3119, %1273)
  };
  %1274(%var_3135, %var_3136) /* ty=(Tensor[(3, 6, 5), bool], Tensor[(13, 10, 16), int64], Tensor[(2080, 1), int64], Tensor[(2080), int64]) */
}

def @func_12233() -> (Tensor[(792), int64], Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(480), float32], Tensor[(3, 6, 5), float64]) {
  %1285 = fn () -> (Tensor[(792), int64], Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(480), float32], Tensor[(3, 6, 5), float64]) {
    %1275 = @func_4227() /* ty=(Tensor[(792), int64],) */;
    %1276 = @func_9360() /* ty=(Tensor[(2080), int64],) */;
    %1277 = cast(meta[relay.Constant][44] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %1278 = reshape(%1277, newshape=[6, 16, 5]) /* ty=Tensor[(6, 16, 5), float32] */;
    %1279 = @func_6770(%1278) /* ty=(Tensor[(6, 16, 5), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), bool]) */;
    %1280 = @func_7203() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(2080), bool], Tensor[(2080), int64]) */;
    %1281 = %1275.0;
    %1282 = %1276.0;
    %1283 = %1279.2;
    %1284 = %1280.0;
    (%1281, %1282, %1283, meta[relay.Constant][44] /* ty=Tensor[(480), float32] */, %1284)
  };
  %1285() /* ty=(Tensor[(792), int64], Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(480), float32], Tensor[(3, 6, 5), float64]) */
}

def @func_14002() -> (Tensor[(792), int64],) {
  @func_14000() /* ty=(Tensor[(792), int64],) */
}

def @func_4175() -> (Tensor[(13, 10, 16), bool], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) {
  %1286 = @func_3595() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(2, 1040), int64]) */;
  %1287 = %1286.1;
  %1288 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 10, 16), int64] */, dtype="bool") /* ty=Tensor[(13, 10, 16), bool] */;
  %1289 = shape_of(%1287, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1290 = cast(%1287, dtype="bool") /* ty=Tensor[(13, 10, 16), bool] */;
  %1291 = dyn.reshape(%1288, %1289, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1292 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1293 = equal(%1290, %1291) /* ty=Tensor[(13, 10, 16), bool] */;
  %1294 = @func_3015() /* ty=Tensor[(6, 16, 5), int8] */;
  %1295 = %1292.0;
  (%1293, %1294, %1295)
}

def @func_8285(%var_8097: Tensor[(16, 7, 10), float64], %var_8098: Tensor[(16, 7, 10), float64], %var_8195: Tensor[(2, 1040), int64], %var_8264: Tensor[(480), int64]) -> (Tensor[(16, 7, 10), float32], Tensor[(16, 7, 10), bool], Tensor[(16, 7, 10), float32], Tensor[(2, 1040), bool], Tensor[(16, 7, 10), float64], Tensor[(2, 15, 16), int64], Tensor[(480), int64], Tensor[(3, 6, 5), float64], Tensor[(16, 7, 10), bool], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %1296 = cast(%var_8098, dtype="float64") /* ty=Tensor[(16, 7, 10), float64] */;
  %1297 = shape_of(%var_8097, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1298 = cast(%var_8097, dtype="float64") /* ty=Tensor[(16, 7, 10), float64] */;
  %1299 = dyn.reshape(%1296, %1297, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1300 = power(%1298, %1299) /* ty=Tensor[(16, 7, 10), float64] */;
  %1301 = cast(%1300, dtype="float32") /* ty=Tensor[(16, 7, 10), float32] */;
  %1302 = cast(%var_8098, dtype="float32") /* ty=Tensor[(16, 7, 10), float32] */;
  %1303 = tan(%1302) /* ty=Tensor[(16, 7, 10), float32] */;
  %1304 = cast(%1300, dtype="bool") /* ty=Tensor[(16, 7, 10), bool] */;
  %1305 = shape_of(%1303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1306 = cast(%1303, dtype="bool") /* ty=Tensor[(16, 7, 10), bool] */;
  %1307 = dyn.reshape(%1304, %1305, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1308 = cast(%var_8097, dtype="float32") /* ty=Tensor[(16, 7, 10), float32] */;
  %1309 = @func_4789() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(792), int64], Tensor[(2, 1040), int64], Tensor[(3, 6, 5), float64]) */;
  %1310 = %1309.2;
  %1311 = cast(%var_8195, dtype="bool") /* ty=Tensor[(2, 1040), bool] */;
  %1312 = shape_of(%1310, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1313 = cast(%1310, dtype="bool") /* ty=Tensor[(2, 1040), bool] */;
  %1314 = dyn.reshape(%1311, %1312, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1315 = cast(%1303, dtype="float32") /* ty=Tensor[(16, 7, 10), float32] */;
  %1316 = rsqrt(%1315) /* ty=Tensor[(16, 7, 10), float32] */;
  %1317 = cast(%1316, dtype="float64") /* ty=Tensor[(16, 7, 10), float64] */;
  %1318 = cast(%var_8264, dtype="int64") /* ty=Tensor[(480), int64] */;
  %1319 = cast(%var_8264, dtype="int64") /* ty=Tensor[(480), int64] */;
  %1320 = cast(%var_8264, dtype="int64") /* ty=Tensor[(480), int64] */;
  %1321 = reshape(%1318, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), int64] */;
  %1322 = reshape(%1319, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), int64] */;
  %1323 = reshape(%1320, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), int64] */;
  %1324 = @func_7243(%1321, %1322, %1323) /* ty=(Tensor[(2, 15, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 15, 16), bool]) */;
  %1325 = @func_3351() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1326 = cast(%var_8097, dtype="bool") /* ty=Tensor[(16, 7, 10), bool] */;
  %1327 = shape_of(%1316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1328 = cast(%1316, dtype="bool") /* ty=Tensor[(16, 7, 10), bool] */;
  %1329 = dyn.reshape(%1326, %1327, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1330 = %1325.0;
  %1331 = cast(%1330, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %1332 = reshape(%1331, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %1333 = @func_6226(%1332) /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(90), float64], Tensor[(2080), int64]) */;
  %1334 = @func_2699() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */;
  %1335 = acosh(%1301) /* ty=Tensor[(16, 7, 10), float32] */;
  %1336 = less(%1306, %1307) /* ty=Tensor[(16, 7, 10), bool] */;
  %1337 = acos(%1308) /* ty=Tensor[(16, 7, 10), float32] */;
  %1338 = equal(%1313, %1314) /* ty=Tensor[(2, 1040), bool] */;
  %1339 = sinh(%1317) /* ty=Tensor[(16, 7, 10), float64] */;
  %1340 = %1324.0;
  %1341 = logical_and(%1328, %1329) /* ty=Tensor[(16, 7, 10), bool] */;
  %1342 = %1333.1;
  %1343 = %1334.0;
  (%1335, %1336, %1337, %1338, %1339, %1340, %var_8264, %1330, %1341, %1342, %1343)
}

def @func_7174() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(5, 234), bool]) {
  %1350 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(5, 234), bool]) {
    %1344 = cast(meta[relay.Constant][46] /* ty=Tensor[(5, 234), bool] */, dtype="bool") /* ty=Tensor[(5, 234), bool] */;
    %1345 = reshape(%1344, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), bool] */;
    %1346 = @func_5387(%1345) /* ty=(Tensor[(2080), int64], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), int32], Tensor[(3, 6, 5), float64], Tensor[(?, 1170), bool], Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), bool], Tensor[(3, 6, 5), float32]) */;
    %1347 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
    %1348 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
    %1349 = %1346.8;
    (%1347, %1348, %1349, meta[relay.Constant][46] /* ty=Tensor[(5, 234), bool] */)
  };
  %1350() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(5, 234), bool]) */
}

def @func_11382() -> Tensor[(3, 6, 5), float64] {
  %1351 = @func_8036() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1351.0
}

def @func_10966() -> (Tensor[(5, 234), bool], Tensor[(1040, 2), float64]) {
  %1352 = @func_7173() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32], Tensor[(5, 234), bool]) */;
  %1353 = @func_4695() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(1040, 2), int64]) */;
  %1354 = %1353.3;
  %1355 = cast(%1354, dtype="float64") /* ty=Tensor[(1040, 2), float64] */;
  %1356 = %1352.3;
  %1357 = sqrt(%1355) /* ty=Tensor[(1040, 2), float64] */;
  (%1356, %1357)
}

def @func_9855() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(792), int64]) {
  %1358 = @func_9275() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1359 = @func_4364() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1360 = @func_3863() /* ty=(Tensor[(792), int64],) */;
  %1361 = %1358.0;
  %1362 = %1359.0;
  %1363 = %1360.0;
  (%1361, %1362, %1363)
}

def @func_4723() -> Tensor[(3, 6, 5), float64] {
  %1364 = @func_3398() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1364.0
}

def @func_10148() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) {
  @func_10146() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float32]) */
}

def @func_5808() -> (Tensor[(6, 16, 5), int8],) {
  %1365 = @func_4570() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64], Tensor[(11, 8, 9), uint8], Tensor[(792), int64], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %1366 = %1365.4;
  (%1366,)
}

def @func_6358() -> (Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) {
  @func_6356() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64], Tensor[(480), int8], Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */
}

def @func_2811() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) {
  %1367 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1368 = %1367.0;
  %1369 = cast(%1368, dtype="float32") /* ty=Tensor[(3, 6, 5), float32] */;
  %1370 = acos(%1369) /* ty=Tensor[(3, 6, 5), float32] */;
  %1371 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  (%1370, %1371)
}

def @func_12286(%var_12284: Tensor[(1170), bool]) -> (Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(1170), bool], Tensor[(3, 6, 5), float64]) {
  @func_12283(%var_12284) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(1170), bool], Tensor[(3, 6, 5), float64]) */
}

def @func_12365() -> (Tensor[(792), int64],) {
  %1372 = @func_7434() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
  %1373 = %1372.0;
  (%1373,)
}

def @func_13472() -> Tensor[(3, 6, 5), float64] {
  @func_9550() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_7404(%var_7402: Tensor[(1170), bool]) -> (Tensor[(3, 6, 5), float32], Tensor[(7, 8, 8), int32], Tensor[(448), float64], Tensor[(792), int64], Tensor[(792), int32], Tensor[(1170), bool], Tensor[(1040, 2), float32]) {
  @func_7401(%var_7402) /* ty=(Tensor[(3, 6, 5), float32], Tensor[(7, 8, 8), int32], Tensor[(448), float64], Tensor[(792), int64], Tensor[(792), int32], Tensor[(1170), bool], Tensor[(1040, 2), float32]) */
}

def @func_7716(%var_7714: Tensor[(4, 9, 8), uint64], %var_7715: Tensor[(4, 9, 8), uint64]) -> Tensor[(4, 9, 8), bool] {
  @func_7712(%var_7714, %var_7715) /* ty=Tensor[(4, 9, 8), bool] */
}

def @func_7874(%var_7872: Tensor[(1, 10, 2), float64]) -> (Tensor[(1, 10, 2), float64],) {
  @func_7871(%var_7872) /* ty=(Tensor[(1, 10, 2), float64],) */
}

def @func_9572() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) {
  %1374 = @func_4287() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(15, 15, 14), float32], Tensor[(2080), int64], Tensor[(3, 6, 5), float64]) */;
  %1375 = @func_8520() /* ty=Tensor[(3, 6, 5), float32] */;
  %1376 = %1374.0;
  (%1375, %1376)
}

def @func_10219() -> (Tensor[(420), float32], Tensor[(3, 6, 5), float32], Tensor[(792), int64]) {
  @func_10217() /* ty=(Tensor[(420), float32], Tensor[(3, 6, 5), float32], Tensor[(792), int64]) */
}

def @func_2350() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
  %1381 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) {
    %1377 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %1378 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %1379 = %1377.0;
    %1380 = %1378.0;
    (%1379, %1380)
  };
  %1381() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64]) */
}

def @func_3836(%var_3831: Tensor[(3, 6, 5), float64]) -> Tensor[(3, 6, 5), bool] {
  %1382 = @func_2330() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1383 = %1382.0;
  %1384 = cast(%var_3831, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
  %1385 = shape_of(%1383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1386 = cast(%1383, dtype="bool") /* ty=Tensor[(3, 6, 5), bool] */;
  %1387 = dyn.reshape(%1384, %1385, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%1386, %1387) /* ty=Tensor[(3, 6, 5), bool] */
}

def @func_14000() -> (Tensor[(792), int64],) {
  %1388 = @func_10260() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(792), int64], Tensor[(2080), float64]) */;
  %1389 = %1388.1;
  (%1389,)
}

def @func_8778() -> (Tensor[(3, 6, 5), float64],) {
  %1392 = fn () -> (Tensor[(3, 6, 5), float64],) {
    %1390 = @func_7742() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
    %1391 = %1390.1;
    (%1391,)
  };
  %1392() /* ty=(Tensor[(3, 6, 5), float64],) */
}

def @func_7694() -> (Tensor[(792), int64],) {
  @func_7692() /* ty=(Tensor[(792), int64],) */
}

def @func_3183() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) {
  %1404 = fn () -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) {
    %1393 = @func_2136() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %1394 = cast(meta[relay.Constant][47] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %1395 = reshape(%1394, newshape=[2, 1040]) /* ty=Tensor[(2, 1040), int64] */;
    %1396 = @func_3095(%1395) /* ty=(Tensor[(3, 6, 5), float32], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64], Tensor[(2, 1040), float64], Tensor[(3, 6, 5), float64]) */;
    %1397 = cast(meta[relay.Constant][48] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %1398 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(2080), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1399 = cast(meta[relay.Constant][47] /* ty=Tensor[(2080), int64] */, dtype="int64") /* ty=Tensor[(2080), int64] */;
    %1400 = dyn.reshape(%1397, %1398, newshape=[]) /* ty=Tensor[(?), int64] */;
    %1401 = %1393.0;
    %1402 = %1396.2;
    %1403 = add(%1399, %1400) /* ty=Tensor[(2080), int64] */;
    (%1401, %1402, %1403)
  };
  %1404() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) */
}

def @func_7853(%var_7852: Tensor[(770), uint64]) -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(770), uint64], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64]) {
  %1418 = fn (%var_7837: Tensor[(770), uint64]) -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(770), uint64], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64]) {
    %1405 = @func_7434() /* ty=(Tensor[(792), int64], Tensor[(3, 6, 5), float64]) */;
    %1406 = cast(%var_7837, dtype="uint64") /* ty=Tensor[(770), uint64] */;
    %1407 = reshape(%1406, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), uint64] */;
    %1408 = @func_72(%1407) /* ty=(Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) */;
    %1409 = cast(%var_7837, dtype="uint64") /* ty=Tensor[(770), uint64] */;
    %1410 = reshape(%1409, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), uint64] */;
    %1411 = @func_72(%1410) /* ty=(Tensor[(10, 7, 11), uint64], Tensor[(13, 10, 16), int64], Tensor[(1, 2080), int64], Tensor[(13, 10, 16), int64]) */;
    %1412 = @func_4452() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %1413 = @func_4925() /* ty=Tensor[(3, 6, 5), float64] */;
    %1414 = %1405.1;
    %1415 = %1408.3;
    %1416 = %1411.3;
    %1417 = %1412.0;
    (%1413, %1414, %1415, %var_7837, %1416, %1417)
  };
  %1418(%var_7852) /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(770), uint64], Tensor[(13, 10, 16), int64], Tensor[(3, 6, 5), float64]) */
}

def @func_16530() -> Tensor[(3, 6, 5), float32] {
  @func_16528() /* ty=Tensor[(3, 6, 5), float32] */
}

def @func_14452() -> Tensor[(3, 6, 5), float64] {
  %1419 = @func_5286() /* ty=(Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
  %1419.1
}

def @func_4364() -> (Tensor[(3, 6, 5), float64],) {
  %1420 = @func_2811() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */;
  %1421 = %1420.1;
  (%1421,)
}

def @func_9574() -> (Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) {
  @func_9572() /* ty=(Tensor[(3, 6, 5), float32], Tensor[(3, 6, 5), float64]) */
}

def @func_12741() -> (Tensor[(420), float32],) {
  %1424 = fn () -> (Tensor[(420), float32],) {
    %1422 = @func_11547() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(420), float32], Tensor[(6, 16, 5), int8], Tensor[(3, 6, 5), float64]) */;
    %1423 = %1422.4;
    (%1423,)
  };
  %1424() /* ty=(Tensor[(420), float32],) */
}

def @func_9551() -> Tensor[(3, 6, 5), float64] {
  %1426 = fn () -> Tensor[(3, 6, 5), float64] {
    %1425 = @func_4452() /* ty=(Tensor[(3, 6, 5), float64],) */;
    %1425.0
  };
  %1426() /* ty=Tensor[(3, 6, 5), float64] */
}

def @func_9362() -> (Tensor[(2080), int64],) {
  @func_9360() /* ty=(Tensor[(2080), int64],) */
}

def @func_5725() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), int16]) {
  %1427 = @func_3577() /* ty=Tensor[(3, 6, 5), float64] */;
  %1428 = cast(%1427, dtype="float64") /* ty=Tensor[(3, 6, 5), float64] */;
  %1429 = reshape(%1428, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float64] */;
  %1430 = @func_4972(%1429) /* ty=(Tensor[(3, 6, 5), int16],) */;
  %1431 = %1430.0;
  (%1427, %1431)
}

def @func_6117() -> (Tensor[(3, 6, 5), float64], Tensor[(3, 6, 5), float64], Tensor[(2080), int64]) {
  %1432 = @func_2238() /* ty=(Tensor[(3, 6, 5), float64],) */;
  %1433 = @func_5038() /* ty=(Tensor[(3, 6, 5), float64], Tensor[(13, 10, 16), int64], Tensor[(2080), int64], Tensor[(6, 16, 5), int8]) */;
  %1434 = @func_2582() /* ty=Tensor[(3, 6, 5), float64] */;
  %1435 = %1432.0;
  %1436 = %1433.2;
  (%1434, %1435, %1436)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen848/build/output.py", line 4982, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  98: TVMFuncCall
  97: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  96: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  95: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  94: tvm::transform::Pass::operator()(tvm::IRModule) const
  93: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  92: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  91: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  90: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  89: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  88: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  87: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  86: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  85: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  84: _ZN3tvm5relay1
  83: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  82: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  81: _ZZN3tvm5relay11ExprFunc
  80: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  79: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  78: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  77: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  76: _ZN3tvm5relay1
  75: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  74: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  73: _ZZN3tvm5relay11ExprFunc
  72: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  71: tvm::relay::DynamicToStaticMutator::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  70: std::_Function_handler<tvm::RelayExpr (tvm::relay::CallNode const*), tvm::relay::DynamicToStaticMutator::DynamicToStaticMutator(tvm::IRModule, tvm::relay::Function)::{lambda(tvm::relay::CallNode const*)#1}>::_M_invoke(std::_Any_data const&, tvm::relay::CallNode const*&&)
  69: tvm::relay::DynamicToStaticMutator::PrepareArgs(tvm::relay::CallNode const*)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:28:05] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


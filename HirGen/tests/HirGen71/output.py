import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_249 = relay.var("var_249", dtype = "float64", shape = (8, 3, 11))#candidate|249|(8, 3, 11)|var|float64
uop_250 = relay.tan(var_249.astype('float64')) # shape=(8, 3, 11)
uop_260 = relay.sinh(uop_250.astype('float64')) # shape=(8, 3, 11)
var_270 = relay.var("var_270", dtype = "float64", shape = (8, 3, 11))#candidate|270|(8, 3, 11)|var|float64
bop_271 = relay.less(uop_250.astype('bool'), relay.reshape(var_270.astype('bool'), relay.shape_of(uop_250))) # shape=(8, 3, 11)
output = relay.Tuple([uop_260,bop_271,])
output2 = relay.Tuple([uop_260,bop_271,])
func_274 = relay.Function([var_249,var_270,], output)
mod['func_274'] = func_274
mod = relay.transform.InferType()(mod)
mutated_mod['func_274'] = func_274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_274_call = mutated_mod.get_global_var('func_274')
var_276 = relay.var("var_276", dtype = "float64", shape = (8, 3, 11))#candidate|276|(8, 3, 11)|var|float64
var_277 = relay.var("var_277", dtype = "float64", shape = (8, 3, 11))#candidate|277|(8, 3, 11)|var|float64
call_275 = func_274_call(var_276,var_277,)
output = call_275
func_278 = relay.Function([var_276,var_277,], output)
mutated_mod['func_278'] = func_278
mutated_mod = relay.transform.InferType()(mutated_mod)
var_283 = relay.var("var_283", dtype = "uint32", shape = (5, 12, 4))#candidate|283|(5, 12, 4)|var|uint32
const_284 = relay.const([[[-7,-8,-8,-2],[10,-7,9,3],[-3,-6,-2,-5],[1,-8,-10,-2],[-9,6,3,-4],[2,-1,1,10],[7,-10,-3,10],[10,-9,-5,7],[-1,3,1,-5],[1,5,-2,-7],[-10,-7,-1,7],[7,4,-8,9]],[[-4,-3,2,-1],[6,6,-10,8],[-7,3,4,-1],[-9,-6,-6,6],[7,-8,-9,-3],[-2,4,1,1],[9,-8,-5,5],[-4,1,-3,-1],[-6,9,-5,-10],[-1,-10,-8,-2],[9,9,1,-8],[-4,6,-7,10]],[[-3,9,-3,-8],[5,9,-2,-10],[1,5,-5,6],[3,9,-6,-3],[9,-10,3,9],[5,-3,6,-8],[-3,8,5,9],[3,-7,-8,9],[-4,-2,-6,-7],[8,8,3,1],[-8,-6,-3,2],[-3,-7,1,2]],[[5,-2,-4,4],[7,6,-7,-8],[7,1,-8,-6],[-3,-4,10,-10],[10,8,1,8],[3,9,-2,-6],[-10,-1,-9,1],[-1,-8,3,-6],[4,-8,7,4],[-9,-9,-4,10],[-3,4,7,5],[2,-8,5,-9]],[[9,3,-3,-5],[4,3,-10,-1],[3,4,3,-7],[5,2,-1,-9],[8,8,1,-4],[-9,2,-10,-4],[-8,-3,10,-8],[7,-6,-10,-1],[-9,10,4,4],[10,3,-8,-3],[7,-1,-7,-5],[6,-5,8,-5]]], dtype = "uint32")#candidate|284|(5, 12, 4)|const|uint32
bop_285 = relay.logical_xor(var_283.astype('uint32'), relay.reshape(const_284.astype('uint32'), relay.shape_of(var_283))) # shape=(5, 12, 4)
bop_293 = relay.minimum(bop_285.astype('float32'), relay.reshape(var_283.astype('float32'), relay.shape_of(bop_285))) # shape=(5, 12, 4)
func_274_call = mod.get_global_var('func_274')
func_278_call = mutated_mod.get_global_var('func_278')
var_308 = relay.var("var_308", dtype = "float64", shape = (264,))#candidate|308|(264,)|var|float64
call_307 = relay.TupleGetItem(func_274_call(relay.reshape(var_308.astype('float64'), [8, 3, 11]), relay.reshape(var_308.astype('float64'), [8, 3, 11]), ), 1)
call_309 = relay.TupleGetItem(func_278_call(relay.reshape(var_308.astype('float64'), [8, 3, 11]), relay.reshape(var_308.astype('float64'), [8, 3, 11]), ), 1)
output = relay.Tuple([bop_293,call_307,var_308,])
output2 = relay.Tuple([bop_293,call_309,var_308,])
func_322 = relay.Function([var_283,var_308,], output)
mod['func_322'] = func_322
mod = relay.transform.InferType()(mod)
mutated_mod['func_322'] = func_322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_322_call = mutated_mod.get_global_var('func_322')
var_324 = relay.var("var_324", dtype = "uint32", shape = (5, 12, 4))#candidate|324|(5, 12, 4)|var|uint32
var_325 = relay.var("var_325", dtype = "float64", shape = (264,))#candidate|325|(264,)|var|float64
call_323 = func_322_call(var_324,var_325,)
output = call_323
func_326 = relay.Function([var_324,var_325,], output)
mutated_mod['func_326'] = func_326
mutated_mod = relay.transform.InferType()(mutated_mod)
const_502 = relay.const([[[-8,7,-3,-5,8,-8]],[[1,1,4,3,-10,5]],[[-1,-5,-10,3,9,-10]],[[-10,9,3,2,9,1]],[[-9,-7,1,4,-10,-1]],[[2,-10,1,-3,-9,2]]], dtype = "uint64")#candidate|502|(6, 1, 6)|const|uint64
var_503 = relay.var("var_503", dtype = "uint64", shape = (6, 8, 6))#candidate|503|(6, 8, 6)|var|uint64
bop_504 = relay.greater_equal(const_502.astype('bool'), var_503.astype('bool')) # shape=(6, 8, 6)
uop_510 = relay.sigmoid(bop_504.astype('float64')) # shape=(6, 8, 6)
func_274_call = mod.get_global_var('func_274')
func_278_call = mutated_mod.get_global_var('func_278')
const_513 = relay.const([-2.180653,6.925596,9.403948,9.055864,4.859800,-6.355839,-7.167961,0.731586,-4.047020,6.125827,6.734309,4.763473,0.568143,8.457685,8.639020,-9.434723,6.559129,-4.787461,5.770774,-0.313638,-8.123036,3.339754,-1.002663,7.409455,6.649584,0.804721,8.151711,1.619604,-1.925763,3.782284,-8.442296,1.396754,5.233480,-3.740958,0.294571,7.922435,1.478977,-4.767456,-9.091286,-8.604722,-6.514433,-3.257056,2.324171,-6.558650,-4.364998,9.435873,-1.619859,-5.318528,-4.913056,-5.647048,7.134150,7.990713,7.401086,5.571136,5.616641,1.654499,2.596089,-7.099134,9.035902,-0.908003,-3.050572,-8.939982,0.327969,2.946260,6.411479,3.283595,9.309280,0.251522,4.311907,-7.269719,0.693752,-7.202656,1.078350,2.472889,-5.898119,-5.718464,2.984800,5.624343,-5.473069,-3.794123,-9.077122,-4.151107,-1.738596,-3.968184,-3.323315,-6.666212,-0.935806,-7.261963,5.137181,-9.485903,-6.590700,3.175122,5.986100,-0.463167,9.239762,6.103121,-3.952441,5.238097,-3.004110,-7.321552,4.182616,-3.641810,-9.203951,0.668881,-9.592446,2.117556,6.450632,-7.332598,0.395746,-4.347429,5.922321,-2.465922,1.832682,-4.150132,-3.328780,0.279338,7.472676,7.371308,-1.566607,-5.917849,7.015989,6.192977,-8.547850,8.758032,-4.507740,-3.752215,-4.745363,-3.877638,-0.097056,1.117375,3.548146,-4.997127,-5.817106,-3.138024,5.604096,7.826415,-2.317654,8.979428,-7.844786,-1.229091,-6.898535,-0.799285,-3.044053,-8.705081,1.939526,1.913469,-7.024211,9.613132,9.815427,-6.264769,-1.216733,1.238955,-0.691009,8.759385,-1.977915,-7.148602,-0.933992,7.963191,2.733836,-7.314095,6.856932,2.186656,4.702806,-9.506011,5.448360,6.876219,-8.539000,-5.009298,0.042130,5.913561,-1.819201,-6.159371,-8.339374,9.733015,-3.782446,-5.094272,2.250556,9.273503,-0.996907,2.208658,-0.622787,-3.242782,-0.996888,-1.017002,-6.257355,8.376196,8.420482,-3.242894,8.604185,8.440987,4.205141,1.051612,6.026845,2.062079,-5.183345,8.245507,-1.803019,9.576416,1.976336,-0.805226,3.951092,-1.695761,-1.266208,-0.732802,-0.405743,0.402342,0.949815,-5.110921,7.435314,-8.120544,-2.259084,8.858049,1.014574,0.613688,-3.219784,4.710875,6.933203,-3.965822,-7.270233,7.001955,-9.203540,-7.489708,4.208710,-9.626369,-0.338486,-0.755719,6.597683,6.214526,-9.726810,3.369298,2.783346,-1.558399,-1.351977,-4.213746,2.459847,0.503651,-0.649014,2.371655,-2.229655,-2.183764,0.577765,5.334694,-6.749172,4.689137,-2.846643,2.078977,1.579654,-0.842189,-5.566517,-0.525593,3.022067,9.558307,1.752246,5.364748,7.565864,7.780570,6.069513,0.609837,7.870602,-8.538761,5.465544,2.704445,-8.606010,-7.247210], dtype = "float64")#candidate|513|(264,)|const|float64
call_512 = relay.TupleGetItem(func_274_call(relay.reshape(const_513.astype('float64'), [8, 3, 11]), relay.reshape(const_513.astype('float64'), [8, 3, 11]), ), 1)
call_514 = relay.TupleGetItem(func_278_call(relay.reshape(const_513.astype('float64'), [8, 3, 11]), relay.reshape(const_513.astype('float64'), [8, 3, 11]), ), 1)
func_322_call = mod.get_global_var('func_322')
func_326_call = mutated_mod.get_global_var('func_326')
var_535 = relay.var("var_535", dtype = "uint32", shape = (8, 30))#candidate|535|(8, 30)|var|uint32
call_534 = relay.TupleGetItem(func_322_call(relay.reshape(var_535.astype('uint32'), [5, 12, 4]), relay.reshape(const_513.astype('float64'), [264,]), ), 2)
call_536 = relay.TupleGetItem(func_326_call(relay.reshape(var_535.astype('uint32'), [5, 12, 4]), relay.reshape(const_513.astype('float64'), [264,]), ), 2)
output = relay.Tuple([uop_510,call_512,const_513,call_534,var_535,])
output2 = relay.Tuple([uop_510,call_514,const_513,call_536,var_535,])
func_537 = relay.Function([var_503,var_535,], output)
mod['func_537'] = func_537
mod = relay.transform.InferType()(mod)
var_538 = relay.var("var_538", dtype = "uint64", shape = (6, 8, 6))#candidate|538|(6, 8, 6)|var|uint64
var_539 = relay.var("var_539", dtype = "uint32", shape = (8, 30))#candidate|539|(8, 30)|var|uint32
output = func_537(var_538,var_539,)
func_540 = relay.Function([var_538,var_539,], output)
mutated_mod['func_540'] = func_540
mutated_mod = relay.transform.InferType()(mutated_mod)
var_566 = relay.var("var_566", dtype = "float64", shape = (7, 10, 7))#candidate|566|(7, 10, 7)|var|float64
uop_567 = relay.atanh(var_566.astype('float64')) # shape=(7, 10, 7)
func_274_call = mod.get_global_var('func_274')
func_278_call = mutated_mod.get_global_var('func_278')
const_571 = relay.const([-4.298524,1.947264,1.791518,4.654824,6.280949,-3.474846,-8.102491,-6.415594,8.371785,-5.218279,-9.332742,-2.744629,-5.462507,9.300500,-4.248328,-6.912851,4.793814,3.789258,-9.855013,-7.209958,-5.352590,3.028789,3.521180,-6.030191,-8.675061,-4.443166,-0.344089,-0.655621,3.742232,-0.733235,-9.075275,-9.553860,9.839436,-0.774054,-0.941911,2.309071,3.823638,7.798399,-6.891809,1.994343,-0.374500,3.149721,-3.260476,-0.759452,1.999171,7.490160,3.551279,-4.102433,-1.842031,-4.715154,5.949227,5.802347,-3.856090,3.817750,-4.147147,-6.382870,-7.458399,9.687436,6.505277,-9.847141,2.135421,-4.431245,-7.988336,0.087720,9.139925,0.058240,1.919473,9.571511,-6.113484,-8.805225,-7.275664,8.511281,2.951494,9.130804,-1.626833,1.276696,-6.210335,-6.230205,-2.545050,2.838583,3.880627,-0.280795,7.097450,3.079149,-9.017209,3.765638,-0.078488,4.091437,8.099430,-1.120031,6.533866,2.725574,2.557740,-0.578795,4.725521,9.760247,-4.370497,3.202913,5.573456,0.178940,4.652868,-6.460067,-1.868043,5.474323,8.694935,5.796490,1.191943,-8.062590,0.688548,7.831160,-4.032195,1.159195,-2.328963,-2.042327,2.168184,-5.883216,-5.756453,-8.561070,-9.176735,0.351694,1.358549,-2.128603,1.283556,6.142455,9.532733,-9.418488,9.327491,3.251404,-6.305784,-5.030858,1.305641,-9.925842,2.147986,-0.375761,-6.717275,4.938065,5.053330,3.484068,-3.638666,5.347981,3.797882,8.527079,7.516584,-5.390293,4.564910,-7.474079,5.912952,-9.734607,7.911214,4.968842,-6.571758,-9.717572,-2.639186,5.911600,-5.391510,1.927046,-2.345207,2.493201,4.552200,1.224928,-2.744675,5.382806,0.639931,-5.462983,6.040895,-2.320839,1.342248,4.842357,-5.783620,-0.783066,3.396834,-7.283853,1.494699,3.968743,-5.306215,3.715332,-4.430351,-0.887437,-5.231392,9.141866,-9.382203,-3.242661,-3.804209,-1.609393,-9.689880,4.863009,-3.552867,5.363791,9.148778,-7.699937,0.765981,-7.646790,-4.587833,2.748742,-4.052932,-9.789129,2.637032,-2.655716,-1.100402,-0.188912,9.207783,-5.245742,-3.962685,7.765863,2.321159,7.225289,0.347892,-0.170095,-4.880407,3.904256,-6.476665,-4.443108,-4.608694,9.310236,2.312272,1.405001,-7.579728,-2.533825,9.107222,-5.008254,9.484662,4.031234,-1.912135,-0.466125,-7.972439,9.233027,-2.099789,-6.820327,-3.625920,7.587511,2.503866,-3.557723,3.582841,-6.869528,2.230447,7.402662,-0.074284,3.393301,-4.372307,-6.142426,0.102411,-6.914988,9.814317,-2.565364,-9.358292,4.457842,-3.395604,1.433405,-4.399292,-1.560910,4.487102,-8.869894,7.459334,-1.840783,9.314795,-3.328084,-8.117405,-0.574025,1.149523,7.405603,1.155873,0.764197,-4.937356,9.886049], dtype = "float64")#candidate|571|(264,)|const|float64
call_570 = relay.TupleGetItem(func_274_call(relay.reshape(const_571.astype('float64'), [8, 3, 11]), relay.reshape(const_571.astype('float64'), [8, 3, 11]), ), 1)
call_572 = relay.TupleGetItem(func_278_call(relay.reshape(const_571.astype('float64'), [8, 3, 11]), relay.reshape(const_571.astype('float64'), [8, 3, 11]), ), 1)
bop_577 = relay.right_shift(uop_567.astype('uint32'), relay.reshape(var_566.astype('uint32'), relay.shape_of(uop_567))) # shape=(7, 10, 7)
output = relay.Tuple([call_570,const_571,bop_577,])
output2 = relay.Tuple([call_572,const_571,bop_577,])
func_585 = relay.Function([var_566,], output)
mod['func_585'] = func_585
mod = relay.transform.InferType()(mod)
var_586 = relay.var("var_586", dtype = "float64", shape = (7, 10, 7))#candidate|586|(7, 10, 7)|var|float64
output = func_585(var_586)
func_587 = relay.Function([var_586], output)
mutated_mod['func_587'] = func_587
mutated_mod = relay.transform.InferType()(mutated_mod)
var_604 = relay.var("var_604", dtype = "int32", shape = (10, 7, 8))#candidate|604|(10, 7, 8)|var|int32
var_605 = relay.var("var_605", dtype = "int32", shape = (10, 7, 8))#candidate|605|(10, 7, 8)|var|int32
bop_606 = relay.greater(var_604.astype('bool'), relay.reshape(var_605.astype('bool'), relay.shape_of(var_604))) # shape=(10, 7, 8)
output = relay.Tuple([bop_606,])
output2 = relay.Tuple([bop_606,])
func_610 = relay.Function([var_604,var_605,], output)
mod['func_610'] = func_610
mod = relay.transform.InferType()(mod)
mutated_mod['func_610'] = func_610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_610_call = mutated_mod.get_global_var('func_610')
var_612 = relay.var("var_612", dtype = "int32", shape = (10, 7, 8))#candidate|612|(10, 7, 8)|var|int32
var_613 = relay.var("var_613", dtype = "int32", shape = (10, 7, 8))#candidate|613|(10, 7, 8)|var|int32
call_611 = func_610_call(var_612,var_613,)
output = call_611
func_614 = relay.Function([var_612,var_613,], output)
mutated_mod['func_614'] = func_614
mutated_mod = relay.transform.InferType()(mutated_mod)
var_682 = relay.var("var_682", dtype = "int8", shape = (3, 15, 12))#candidate|682|(3, 15, 12)|var|int8
var_683 = relay.var("var_683", dtype = "int8", shape = (3, 15, 12))#candidate|683|(3, 15, 12)|var|int8
bop_684 = relay.less(var_682.astype('bool'), relay.reshape(var_683.astype('bool'), relay.shape_of(var_682))) # shape=(3, 15, 12)
uop_689 = relay.rsqrt(var_683.astype('float64')) # shape=(3, 15, 12)
func_274_call = mod.get_global_var('func_274')
func_278_call = mutated_mod.get_global_var('func_278')
var_699 = relay.var("var_699", dtype = "float64", shape = (264,))#candidate|699|(264,)|var|float64
call_698 = relay.TupleGetItem(func_274_call(relay.reshape(var_699.astype('float64'), [8, 3, 11]), relay.reshape(var_699.astype('float64'), [8, 3, 11]), ), 0)
call_700 = relay.TupleGetItem(func_278_call(relay.reshape(var_699.astype('float64'), [8, 3, 11]), relay.reshape(var_699.astype('float64'), [8, 3, 11]), ), 0)
output = relay.Tuple([bop_684,uop_689,call_698,var_699,])
output2 = relay.Tuple([bop_684,uop_689,call_700,var_699,])
func_707 = relay.Function([var_682,var_683,var_699,], output)
mod['func_707'] = func_707
mod = relay.transform.InferType()(mod)
mutated_mod['func_707'] = func_707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_707_call = mutated_mod.get_global_var('func_707')
var_709 = relay.var("var_709", dtype = "int8", shape = (3, 15, 12))#candidate|709|(3, 15, 12)|var|int8
var_710 = relay.var("var_710", dtype = "int8", shape = (3, 15, 12))#candidate|710|(3, 15, 12)|var|int8
var_711 = relay.var("var_711", dtype = "float64", shape = (264,))#candidate|711|(264,)|var|float64
call_708 = func_707_call(var_709,var_710,var_711,)
output = call_708
func_712 = relay.Function([var_709,var_710,var_711,], output)
mutated_mod['func_712'] = func_712
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1222 = relay.var("var_1222", dtype = "float32", shape = (10, 16, 15))#candidate|1222|(10, 16, 15)|var|float32
uop_1223 = relay.erf(var_1222.astype('float32')) # shape=(10, 16, 15)
const_1225 = relay.constdtype = "float32")#candidate|1225|(10, 16, 15)|const|float32
bop_1226 = relay.greater_equal(uop_1223.astype('bool'), relay.reshape(const_1225.astype('bool'), relay.shape_of(uop_1223))) # shape=(10, 16, 15)
const_1239 = relay.const([[[False,True,False,True,False,True,False,True,False,True,False,True,False,True,True],[True,False,True,False,True,True,False,True,True,False,True,True,False,False,True],[False,False,False,True,True,False,False,True,False,False,False,False,True,False,True],[False,True,True,True,True,False,False,True,False,True,True,True,False,True,True],[True,False,True,False,True,False,False,True,True,False,True,True,True,False,True],[False,False,False,False,True,True,False,True,False,False,False,True,True,False,False],[False,False,False,True,False,True,True,False,False,False,True,True,True,False,True],[False,False,True,False,False,False,True,True,True,True,True,True,False,True,False],[True,True,False,True,True,False,True,False,False,True,True,True,True,False,True],[False,True,False,False,True,False,False,True,True,False,False,True,True,True,False],[True,False,True,True,True,False,True,False,True,False,False,False,True,True,False],[True,True,True,True,True,True,True,False,False,True,False,False,False,True,True],[False,True,True,True,False,True,False,False,True,True,False,True,True,True,False],[True,False,False,True,True,True,False,True,True,False,False,True,False,False,True],[False,False,False,True,True,False,False,True,False,False,False,False,True,True,False],[False,True,False,False,False,False,True,False,True,True,False,True,False,False,True]],[[True,False,True,True,False,False,False,False,False,False,False,False,True,False,False],[True,False,True,True,False,True,True,True,True,False,False,True,True,True,True],[False,False,False,True,False,False,False,False,False,False,False,True,False,True,True],[False,False,True,True,False,True,False,True,False,True,False,True,False,True,False],[False,False,False,False,True,False,False,True,False,False,True,True,True,False,False],[False,False,True,True,False,True,False,False,False,True,False,False,False,False,False],[False,False,False,False,False,True,True,False,True,True,True,False,False,False,False],[True,True,True,False,False,True,True,True,True,True,False,True,False,False,False],[False,False,False,False,False,True,True,True,True,False,True,False,True,True,True],[True,False,False,False,False,False,True,True,True,True,True,True,False,True,True],[False,True,True,True,True,False,False,False,True,True,True,False,False,False,False],[True,True,False,True,False,True,True,True,False,True,False,True,False,True,False],[False,True,True,True,False,False,True,False,True,True,False,False,True,False,False],[True,True,True,False,False,True,True,True,True,True,False,True,True,True,False],[True,True,False,True,False,False,True,False,True,False,True,True,False,False,True],[False,False,False,False,False,False,True,True,True,False,False,False,False,True,True]],[[False,True,False,False,False,False,True,True,False,False,False,True,True,False,False],[False,True,False,False,True,False,False,False,True,True,True,True,True,True,True],[False,True,False,False,False,False,True,True,True,True,True,True,True,False,False],[True,False,True,True,False,False,True,False,False,False,True,True,True,True,False],[False,True,False,False,False,False,False,True,True,False,False,False,True,True,False],[True,False,False,False,True,False,False,False,False,True,False,True,False,False,False],[True,False,False,True,True,False,True,True,True,False,True,True,False,True,True],[False,False,True,False,True,True,False,True,True,False,False,False,True,True,False],[False,False,False,False,True,True,False,False,True,True,False,False,False,False,True],[True,False,False,True,False,True,False,False,False,True,False,True,True,True,False],[True,True,False,False,True,True,True,True,True,False,False,True,True,True,True],[False,False,True,False,True,True,True,True,True,False,True,True,True,False,False],[True,False,False,True,False,True,False,True,True,True,False,True,False,True,False],[True,True,True,False,False,False,True,True,False,False,True,True,True,False,True],[True,True,True,True,False,True,True,False,True,False,True,True,True,True,False],[False,False,True,True,False,True,True,True,True,True,True,False,False,False,True]],[[False,False,False,True,True,True,True,False,True,False,False,True,True,False,False],[True,False,True,False,True,True,False,False,True,True,False,False,True,False,True],[False,False,True,True,False,False,False,True,True,True,True,True,False,False,True],[True,True,True,False,True,False,True,True,True,False,False,True,True,False,True],[False,False,False,True,True,False,True,True,True,False,True,False,False,True,False],[True,False,True,True,False,False,True,False,False,False,False,False,True,True,False],[True,True,True,True,False,False,True,False,False,False,False,True,False,False,False],[False,False,True,True,True,True,True,False,True,True,True,False,False,False,True],[False,True,True,True,False,True,False,True,True,False,True,False,True,True,False],[True,True,False,False,False,True,False,False,False,True,True,True,True,True,True],[True,False,True,False,True,True,True,True,True,True,True,False,True,False,False],[True,False,True,False,False,False,True,False,False,True,False,True,False,True,True],[False,False,True,True,False,False,False,False,False,True,True,True,False,False,False],[False,True,False,True,True,False,True,True,True,True,False,True,True,True,False],[False,True,True,True,False,True,True,False,True,True,False,False,True,False,False],[True,False,False,True,True,True,True,True,False,False,False,True,True,True,False]],[[False,True,True,True,False,True,False,False,True,False,True,True,False,False,True],[True,True,True,True,False,True,False,False,False,True,False,False,False,False,False],[False,False,True,True,True,False,False,True,False,True,True,True,True,False,False],[False,True,True,False,False,False,True,False,False,True,True,False,True,True,False],[True,True,False,True,False,True,True,False,True,True,False,False,False,True,False],[False,True,True,False,True,True,False,False,False,False,True,True,False,True,True],[True,False,False,True,True,True,True,False,True,False,True,True,False,False,False],[True,False,False,False,False,True,False,False,False,False,False,True,True,True,False],[False,False,True,True,True,False,False,False,True,True,False,False,True,True,False],[True,False,True,True,False,True,True,False,False,True,False,False,False,False,True],[True,False,True,False,True,True,False,True,True,True,True,False,False,False,True],[False,True,True,True,True,True,True,False,False,True,True,False,True,True,False],[True,False,True,False,False,False,True,True,False,True,False,True,True,False,True],[False,True,False,True,False,True,False,True,True,False,False,False,True,False,False],[True,True,False,False,True,True,True,True,False,True,False,False,False,True,True],[True,True,False,True,False,False,True,False,False,False,True,False,True,False,False]],[[True,True,True,True,False,True,False,True,False,False,False,False,True,False,True],[False,True,False,False,False,False,False,True,False,False,False,True,True,True,True],[True,False,True,True,True,True,False,False,False,False,False,False,False,True,False],[True,True,True,True,True,True,True,False,True,True,False,True,True,True,False],[False,True,False,True,False,True,False,False,True,False,False,False,False,False,True],[False,True,True,True,False,False,True,True,False,False,False,True,True,True,False],[True,False,True,True,True,True,False,False,True,False,False,True,False,True,True],[True,True,False,False,True,False,True,False,True,True,False,False,False,True,True],[True,False,True,False,True,True,False,True,True,True,True,True,True,True,False],[False,True,False,True,True,True,True,False,True,True,False,True,True,False,False],[False,True,False,False,False,True,True,False,False,False,True,False,True,False,True],[False,True,False,False,False,False,True,True,False,False,False,False,True,True,True],[True,False,False,True,False,False,False,True,False,False,True,False,False,False,False],[False,False,True,False,False,True,False,True,True,True,True,True,True,False,True],[False,True,True,True,False,True,True,False,False,False,True,True,False,True,True],[False,True,False,False,False,False,True,False,False,False,True,True,False,True,False]],[[True,True,True,False,False,False,True,False,False,True,False,True,False,False,True],[True,False,False,True,False,False,False,False,True,False,False,False,True,False,True],[True,True,True,True,True,True,True,False,True,True,True,True,True,True,True],[False,True,False,False,False,False,True,False,False,False,False,True,False,False,True],[False,True,True,True,False,False,False,True,True,False,True,False,True,False,False],[True,False,True,True,False,True,True,True,False,False,True,False,True,False,False],[False,False,False,True,True,False,False,True,False,True,True,True,True,True,True],[True,False,True,False,True,True,False,False,True,False,False,False,False,True,False],[True,False,False,True,True,True,True,True,True,True,False,False,False,False,True],[True,True,True,False,False,False,False,False,True,True,False,True,True,False,True],[False,True,True,False,False,False,False,False,False,True,True,False,True,False,False],[True,True,False,False,False,False,True,False,False,False,True,False,True,False,False],[False,False,False,True,True,False,False,True,False,False,False,False,False,True,False],[True,False,True,True,True,True,True,False,True,True,False,False,True,True,True],[True,False,True,True,True,False,False,True,True,False,True,True,False,False,True],[False,True,True,False,False,False,True,True,False,True,False,False,True,True,False]],[[False,False,False,False,False,True,False,False,True,False,False,False,True,True,False],[False,True,True,False,True,True,False,True,False,True,False,False,True,True,True],[True,False,False,True,False,False,True,False,False,False,False,False,False,False,True],[True,False,True,False,False,False,False,True,True,False,False,True,True,True,True],[False,True,True,False,False,True,False,True,True,False,True,False,True,False,False],[False,True,False,True,True,True,False,True,False,True,False,False,True,True,True],[False,True,False,True,False,True,False,False,False,True,True,False,True,False,False],[True,False,True,False,False,False,True,False,False,True,True,False,True,False,True],[False,False,False,True,True,False,False,True,True,False,True,False,False,False,False],[False,False,False,True,False,False,False,True,False,False,False,False,False,True,False],[True,True,True,True,False,False,False,False,False,True,True,True,True,True,True],[True,False,True,True,True,True,False,True,False,False,True,False,False,True,True],[True,False,True,False,False,True,False,False,False,False,True,True,True,False,False],[True,True,False,False,False,False,False,False,True,False,True,True,True,True,False],[False,False,True,True,False,True,True,True,True,True,True,False,False,True,False],[False,False,True,True,False,True,True,False,False,False,True,True,True,False,False]],[[False,False,True,True,False,True,False,True,False,True,False,False,True,False,True],[True,False,True,False,True,True,True,False,False,True,True,True,False,False,True],[True,False,True,False,True,True,True,True,False,False,False,False,False,True,False],[True,False,True,False,False,False,True,False,True,True,True,False,False,False,False],[True,True,True,True,True,False,False,False,False,True,False,False,True,False,False],[False,True,False,True,True,True,True,True,True,False,False,False,False,True,False],[True,False,True,False,True,False,False,False,True,False,True,True,True,False,False],[True,False,True,True,True,True,False,True,False,True,True,False,False,False,True],[False,True,False,False,True,True,False,True,True,True,False,False,True,True,True],[True,False,True,False,True,True,True,False,False,True,True,True,False,True,True],[True,False,False,True,False,True,True,False,True,False,False,True,True,True,False],[False,False,False,True,False,True,False,False,True,False,True,True,False,True,False],[True,True,False,False,False,False,True,True,True,False,False,True,True,True,False],[True,True,False,True,False,False,True,True,False,False,True,False,True,True,True],[False,True,False,False,True,True,True,False,False,False,True,False,True,False,True],[True,False,False,True,True,True,True,False,False,False,True,True,False,False,True]],[[True,False,False,False,True,True,True,False,True,True,False,False,False,True,True],[True,False,True,False,True,False,True,False,True,True,False,False,False,False,False],[True,False,True,True,False,False,False,True,False,False,False,False,False,False,True],[True,False,True,False,False,False,True,True,False,False,False,True,False,False,True],[False,False,True,True,True,True,True,False,False,True,False,True,True,False,True],[False,False,True,True,False,True,True,True,False,False,True,False,True,True,True],[False,False,True,False,True,False,True,True,False,False,False,False,True,False,True],[False,False,True,False,False,True,True,True,True,False,True,False,False,False,False],[True,True,False,False,True,True,True,False,False,True,False,True,False,True,True],[True,False,True,False,False,True,True,True,True,False,True,False,True,False,True],[True,True,False,True,False,True,False,True,True,True,False,False,False,False,True],[True,True,True,False,True,True,False,True,True,True,True,False,True,False,False],[False,True,False,False,False,False,True,True,True,True,False,True,True,False,False],[False,True,True,False,True,True,True,True,False,False,False,True,True,False,False],[True,False,True,True,True,False,True,False,True,False,True,True,False,False,True],[False,True,False,True,True,True,False,False,True,False,True,True,False,False,True]]], dtype = "bool")#candidate|1239|(10, 16, 15)|const|bool
bop_1240 = relay.floor_mod(bop_1226.astype('float64'), relay.reshape(const_1239.astype('float64'), relay.shape_of(bop_1226))) # shape=(10, 16, 15)
output = bop_1240
output2 = bop_1240
func_1243 = relay.Function([var_1222,], output)
mod['func_1243'] = func_1243
mod = relay.transform.InferType()(mod)
var_1244 = relay.var("var_1244", dtype = "float32", shape = (10, 16, 15))#candidate|1244|(10, 16, 15)|var|float32
output = func_1243(var_1244)
func_1245 = relay.Function([var_1244], output)
mutated_mod['func_1245'] = func_1245
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1265 = relay.const([[[7.168913,-7.973131,-6.311487,-2.002982,-3.125556,-4.461192,-0.786472,-7.735895,2.720150],[-4.180750,8.647277,1.074709,-6.348655,5.507473,-8.276714,1.590751,3.631875,5.543634],[9.014744,-0.058154,-5.521982,-9.501826,6.468701,1.882274,2.487418,-9.513263,6.625164],[-4.231812,0.988618,2.699362,-5.245514,9.441935,-6.866948,5.428333,-0.892771,4.289057],[-4.695860,-6.640165,-3.760715,-1.382886,3.553803,-8.153785,8.010838,-9.606644,3.475852],[-0.701442,-9.274019,5.817576,-0.854068,-0.463467,-8.379081,9.413845,9.608184,-8.798091],[-3.347947,3.749562,-3.667333,-7.838442,-3.438376,-9.356585,-2.081484,8.492379,7.421067],[-3.910497,-5.037631,-1.978445,-9.738937,9.609181,3.123554,-8.148553,3.116462,9.306177],[6.448471,1.285137,-4.811478,5.171841,-0.129276,0.015216,2.674031,-9.467717,-3.954739],[-3.832760,-6.853808,-0.143127,-7.622005,7.555601,2.452985,6.687962,-4.821958,-9.511394],[-8.527004,-8.798810,9.246315,-0.745862,8.668171,-2.533886,-0.654534,-5.517085,-9.096121],[-2.758941,1.809126,-7.540411,6.060082,-5.045060,-4.283009,-9.499141,-3.895285,-2.634248]],[[9.464902,8.823191,6.372298,-5.619049,-9.123373,-7.226105,-8.679151,0.799958,9.812943],[-4.442966,5.148187,-0.498088,7.941443,3.764486,2.856497,8.302720,-6.159895,7.850664],[-7.781648,6.410730,5.872155,-2.317375,4.739176,7.913279,1.605249,3.016542,-0.310173],[2.529407,-1.514613,-2.666485,-7.709413,-3.850511,-6.065639,-6.187389,-5.941965,2.927221],[3.041585,0.690371,-6.585663,1.197018,-8.734526,-8.842878,2.188366,-7.936224,-2.865773],[5.827216,8.106948,-4.599114,-5.406307,-0.995824,-8.895796,-0.165130,0.450078,-8.940410],[-6.676654,-3.520528,-5.479819,-8.518703,-4.675393,-6.017176,8.661912,8.146937,3.949155],[-0.019465,-4.893092,-7.979650,-7.817828,-6.730700,-6.051045,8.640364,7.117931,8.718906],[6.314365,3.307318,9.887388,-3.349546,2.996495,9.436988,2.415163,-9.277745,-1.113648],[9.086878,8.633090,4.190083,-1.419016,9.894335,-8.646905,-6.002163,-8.201740,6.756477],[1.045332,-4.708862,6.520274,8.297377,4.690651,-8.458158,8.620349,-3.528783,8.124077],[-1.592438,7.667729,0.877784,2.040311,9.418794,8.929496,7.426484,-6.300449,-9.056889]],[[6.011947,5.902358,7.848145,-4.148203,5.610513,-7.783257,-7.615706,-5.999979,-2.694928],[2.554049,8.875274,9.484032,0.979207,8.452581,-3.388804,1.068654,-1.211140,-6.731413],[-2.182503,-7.990920,9.446280,4.983272,1.574698,6.662020,2.857632,2.374603,1.701420],[-7.668620,5.278436,5.100634,5.033305,1.587678,8.009900,0.345997,2.878403,2.332221],[-4.028953,-1.118444,-8.984726,6.525094,7.273024,0.395851,7.482836,0.916836,4.854329],[-7.283309,-9.008480,-4.236716,0.274783,4.378120,6.710016,-6.882442,7.908335,-7.305149],[-4.662439,-4.480918,-4.575276,1.161519,4.552857,6.910756,2.274427,3.916976,4.182262],[9.491729,4.260401,2.019478,4.937428,9.553072,2.866156,-9.672455,0.328149,1.341932],[-9.517697,-9.877790,3.567418,3.545760,6.026946,-6.112462,-2.505478,-4.332203,8.906769],[1.436341,2.087528,9.596390,-3.777777,-4.705775,-8.776323,5.517583,-2.453610,-6.321552],[6.114896,-4.788241,-4.057809,-8.633660,-5.318163,4.172274,-9.581484,-2.735538,0.439101],[-5.210085,-9.237507,3.822728,-1.468734,0.902643,-2.490695,5.594773,9.569102,7.298042]]], dtype = "float32")#candidate|1265|(3, 12, 9)|const|float32
uop_1266 = relay.exp(const_1265.astype('float32')) # shape=(3, 12, 9)
bop_1268 = relay.power(uop_1266.astype('float32'), relay.reshape(const_1265.astype('float32'), relay.shape_of(uop_1266))) # shape=(3, 12, 9)
func_707_call = mod.get_global_var('func_707')
func_712_call = mutated_mod.get_global_var('func_712')
var_1281 = relay.var("var_1281", dtype = "int8", shape = (540,))#candidate|1281|(540,)|var|int8
var_1282 = relay.var("var_1282", dtype = "float64", shape = (264,))#candidate|1282|(264,)|var|float64
call_1280 = relay.TupleGetItem(func_707_call(relay.reshape(var_1281.astype('int8'), [3, 15, 12]), relay.reshape(var_1281.astype('int8'), [3, 15, 12]), relay.reshape(var_1282.astype('float64'), [264,]), ), 2)
call_1283 = relay.TupleGetItem(func_712_call(relay.reshape(var_1281.astype('int8'), [3, 15, 12]), relay.reshape(var_1281.astype('int8'), [3, 15, 12]), relay.reshape(var_1282.astype('float64'), [264,]), ), 2)
output = relay.Tuple([bop_1268,call_1280,var_1281,var_1282,])
output2 = relay.Tuple([bop_1268,call_1283,var_1281,var_1282,])
func_1288 = relay.Function([var_1281,var_1282,], output)
mod['func_1288'] = func_1288
mod = relay.transform.InferType()(mod)
mutated_mod['func_1288'] = func_1288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1288_call = mutated_mod.get_global_var('func_1288')
var_1290 = relay.var("var_1290", dtype = "int8", shape = (540,))#candidate|1290|(540,)|var|int8
var_1291 = relay.var("var_1291", dtype = "float64", shape = (264,))#candidate|1291|(264,)|var|float64
call_1289 = func_1288_call(var_1290,var_1291,)
output = call_1289
func_1292 = relay.Function([var_1290,var_1291,], output)
mutated_mod['func_1292'] = func_1292
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1343 = relay.const([[[-5,-4,2,7,1,9,-4,8,8,-8,-2,-10,9,5,5],[9,-3,-4,-6,8,-9,-5,7,1,-1,2,-5,10,-8,-5],[5,2,-8,4,9,3,-8,-3,2,-8,-2,-6,5,-2,-3],[7,-10,7,-5,-1,-10,2,-3,-10,-8,7,1,4,9,10],[-2,9,5,-1,-4,7,-7,1,4,6,-2,-2,8,10,2],[9,-4,-8,-4,-9,3,4,5,-1,-9,-2,2,5,-10,7],[-4,7,-7,-6,8,-3,3,1,5,10,-9,-6,-6,10,7],[-7,-6,-8,3,-3,-1,-10,-4,-6,-2,-4,9,-3,4,-9],[3,-1,-4,9,2,10,10,10,2,-4,2,-7,-9,-4,-6],[-3,2,-7,2,-6,1,10,6,5,5,4,7,-8,2,1],[-4,-8,-2,-3,-2,-1,-4,4,2,-10,1,6,-5,-6,4]],[[-8,6,7,2,2,-10,9,-3,-4,4,-4,9,-3,-2,-3],[8,7,7,10,5,-3,3,8,5,-3,-7,-2,-4,-1,3],[5,7,-3,-7,4,-5,6,9,5,6,-2,4,-1,10,7],[8,-5,3,9,-1,3,-10,-5,4,2,10,5,10,4,-8],[1,10,-10,4,-4,-2,2,-5,10,10,1,6,6,2,5],[-1,-5,-4,6,4,-4,7,8,-6,-3,-10,8,10,3,-8],[-1,7,-1,-1,-9,-9,1,3,-9,-6,5,7,-2,-9,-7],[3,7,-6,-1,7,1,-4,-3,-10,6,-7,1,-6,8,-10],[-4,7,-5,10,-7,7,-7,8,10,4,-3,-8,-4,-9,-2],[9,4,-7,-6,-6,-6,-1,-7,-2,-9,4,-9,8,7,-6],[-6,4,1,-10,10,4,-10,10,-7,4,-3,8,1,3,-5]],[[8,6,-3,7,7,-9,5,5,-9,-2,-8,3,4,4,-3],[-8,2,5,10,1,9,-6,1,4,6,3,8,2,2,-9],[6,-6,-1,4,-2,7,-4,10,8,5,7,-8,6,6,7],[-2,5,1,-10,-7,1,6,9,-3,7,1,-8,8,10,-3],[-1,1,-3,-2,-9,-7,-3,6,-8,-8,-8,10,7,-1,4],[-3,-9,1,-7,6,3,6,6,-7,2,-1,2,8,9,-6],[5,8,-6,-7,3,8,-9,-2,-8,-1,-4,-3,-4,-8,10],[4,7,-9,-10,-5,4,-10,8,1,-3,-10,-7,-5,-2,1],[-1,7,-6,1,5,-10,-7,-3,2,-5,-6,-2,-6,3,-2],[-1,-9,10,-7,3,5,2,-2,1,8,-9,-10,7,-7,-7],[-5,1,9,9,-2,-9,-6,1,5,-3,7,-7,-4,5,7]],[[2,10,-5,-7,-4,-9,-8,-3,4,-2,-3,1,-7,6,-8],[-4,2,6,-5,-4,-3,-4,-7,-1,-7,7,3,-9,3,-2],[8,-9,-2,-10,9,-7,-8,-7,-10,-5,3,-6,-8,-5,-4],[-1,-5,-5,-7,-3,2,1,1,-2,-6,7,-8,4,-1,8],[5,8,-10,-6,-9,-3,1,8,10,4,-8,5,-5,2,9],[-9,-7,-6,-9,4,-3,8,9,-9,-5,-6,3,9,-4,4],[-8,10,2,-2,8,9,-3,9,-3,2,1,-3,1,4,10],[9,-3,-5,4,-5,5,6,-1,9,-3,-1,9,9,-5,-5],[1,5,2,-8,-9,-9,-7,4,1,-1,2,-9,8,-1,2],[-10,-10,6,6,8,-9,2,5,-5,9,1,1,-2,-9,-4],[7,-4,8,8,-8,-1,-7,-6,-1,7,8,-9,9,10,2]],[[-10,7,-7,8,10,6,-4,4,-3,10,5,9,8,5,9],[3,10,7,-6,-5,-10,8,1,-3,-7,8,2,-7,-7,-10],[2,8,-3,1,10,6,6,6,-5,4,6,5,-9,-10,-5],[-5,-4,-10,7,-6,5,9,-5,-1,-5,-2,6,9,-10,-4],[-9,-1,-1,10,2,7,8,-1,2,-1,6,10,-1,-9,-7],[-5,1,9,-8,-2,-5,-10,-6,5,-4,4,2,-1,-2,5],[5,-8,-7,-10,8,-7,-2,5,9,-5,8,2,3,6,-6],[-7,-2,-9,3,-4,-3,1,10,-3,-10,2,8,-10,7,-8],[-7,-6,-9,-8,4,1,-4,3,2,3,-6,2,8,7,-9],[10,10,-7,-1,-1,-8,10,-7,-8,-9,-3,-7,-9,8,-10],[-10,5,8,-9,6,4,2,-7,-7,10,-5,10,-7,-7,-6]],[[-3,1,6,-7,-8,5,-6,6,-8,8,10,10,-7,1,-3],[5,3,2,-3,6,-4,3,-10,5,3,-5,-9,3,3,2],[-2,1,-10,7,-4,7,6,9,-3,5,10,-9,6,-6,7],[-6,-2,-4,-10,8,-4,3,8,-5,10,5,1,-10,-7,5],[-2,-2,-7,-9,-5,-2,-3,-10,-1,-2,-6,-1,-2,-3,5],[2,10,4,-8,6,-1,6,-5,6,3,7,4,6,8,2],[9,3,-8,7,-1,3,3,-7,-6,-6,-1,-8,-10,-9,-4],[-2,-9,-2,-5,6,4,-9,1,-7,10,-7,6,-8,-10,5],[-9,8,-5,6,-9,-5,4,-2,-1,-1,2,-6,3,-7,10],[-10,-10,-9,-9,6,-9,-3,-6,-5,3,9,-6,-8,-8,4],[6,7,2,-2,2,9,8,2,6,-10,-5,-8,6,10,10]],[[2,-7,3,-8,10,-4,1,10,5,-3,9,-8,1,-3,-9],[-6,-9,3,-4,-7,-9,1,3,5,1,5,-10,-7,10,-3],[-4,-2,-3,5,4,-10,-2,-4,6,5,9,-5,4,9,5],[2,10,2,-7,-9,-8,-3,-3,5,8,5,9,-4,4,-6],[-5,8,-2,-9,5,9,8,-4,-1,-10,-7,6,-7,-1,-6],[-9,5,6,-8,-8,2,6,1,3,-7,3,-8,-1,1,-5],[9,8,3,-3,9,-4,9,3,10,-4,-8,4,-7,-2,-7],[3,-5,3,-5,9,-8,-6,-4,8,4,-4,10,2,-5,6],[-1,9,2,-4,-10,2,9,-6,-5,-9,-8,-5,3,8,2],[-9,4,1,-1,4,9,9,2,-10,-2,9,-4,-10,2,2],[-5,6,-2,-7,1,4,7,-5,1,-9,-4,2,-3,-2,2]]], dtype = "int16")#candidate|1343|(7, 11, 15)|const|int16
var_1344 = relay.var("var_1344", dtype = "int16", shape = (7, 11, 15))#candidate|1344|(7, 11, 15)|var|int16
bop_1345 = relay.bitwise_xor(const_1343.astype('int16'), relay.reshape(var_1344.astype('int16'), relay.shape_of(const_1343))) # shape=(7, 11, 15)
output = bop_1345
output2 = bop_1345
func_1349 = relay.Function([var_1344,], output)
mod['func_1349'] = func_1349
mod = relay.transform.InferType()(mod)
var_1350 = relay.var("var_1350", dtype = "int16", shape = (7, 11, 15))#candidate|1350|(7, 11, 15)|var|int16
output = func_1349(var_1350)
func_1351 = relay.Function([var_1350], output)
mutated_mod['func_1351'] = func_1351
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1388 = relay.var("var_1388", dtype = "float32", shape = (10, 13, 14))#candidate|1388|(10, 13, 14)|var|float32
uop_1389 = relay.atanh(var_1388.astype('float32')) # shape=(10, 13, 14)
bop_1406 = relay.logical_or(uop_1389.astype('bool'), relay.reshape(var_1388.astype('bool'), relay.shape_of(uop_1389))) # shape=(10, 13, 14)
uop_1411 = relay.log(bop_1406.astype('float32')) # shape=(10, 13, 14)
uop_1413 = relay.acos(var_1388.astype('float64')) # shape=(10, 13, 14)
uop_1426 = relay.cosh(uop_1411.astype('float32')) # shape=(10, 13, 14)
var_1428 = relay.var("var_1428", dtype = "float32", shape = (10, 13, 14))#candidate|1428|(10, 13, 14)|var|float32
bop_1429 = relay.bitwise_and(uop_1426.astype('int32'), relay.reshape(var_1428.astype('int32'), relay.shape_of(uop_1426))) # shape=(10, 13, 14)
output = relay.Tuple([uop_1413,bop_1429,])
output2 = relay.Tuple([uop_1413,bop_1429,])
func_1435 = relay.Function([var_1388,var_1428,], output)
mod['func_1435'] = func_1435
mod = relay.transform.InferType()(mod)
var_1436 = relay.var("var_1436", dtype = "float32", shape = (10, 13, 14))#candidate|1436|(10, 13, 14)|var|float32
var_1437 = relay.var("var_1437", dtype = "float32", shape = (10, 13, 14))#candidate|1437|(10, 13, 14)|var|float32
output = func_1435(var_1436,var_1437,)
func_1438 = relay.Function([var_1436,var_1437,], output)
mutated_mod['func_1438'] = func_1438
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1621 = relay.var("var_1621", dtype = "float64", shape = (7, 16, 11))#candidate|1621|(7, 16, 11)|var|float64
uop_1622 = relay.sigmoid(var_1621.astype('float64')) # shape=(7, 16, 11)
output = relay.Tuple([uop_1622,])
output2 = relay.Tuple([uop_1622,])
func_1627 = relay.Function([var_1621,], output)
mod['func_1627'] = func_1627
mod = relay.transform.InferType()(mod)
var_1628 = relay.var("var_1628", dtype = "float64", shape = (7, 16, 11))#candidate|1628|(7, 16, 11)|var|float64
output = func_1627(var_1628)
func_1629 = relay.Function([var_1628], output)
mutated_mod['func_1629'] = func_1629
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1673 = relay.var("var_1673", dtype = "float32", shape = (12, 1, 4))#candidate|1673|(12, 1, 4)|var|float32
uop_1674 = relay.log(var_1673.astype('float32')) # shape=(12, 1, 4)
output = uop_1674
output2 = uop_1674
func_1684 = relay.Function([var_1673,], output)
mod['func_1684'] = func_1684
mod = relay.transform.InferType()(mod)
var_1685 = relay.var("var_1685", dtype = "float32", shape = (12, 1, 4))#candidate|1685|(12, 1, 4)|var|float32
output = func_1684(var_1685)
func_1686 = relay.Function([var_1685], output)
mutated_mod['func_1686'] = func_1686
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1779 = relay.var("var_1779", dtype = "float32", shape = (7, 6, 11))#candidate|1779|(7, 6, 11)|var|float32
uop_1780 = relay.sinh(var_1779.astype('float32')) # shape=(7, 6, 11)
output = relay.Tuple([uop_1780,])
output2 = relay.Tuple([uop_1780,])
func_1789 = relay.Function([var_1779,], output)
mod['func_1789'] = func_1789
mod = relay.transform.InferType()(mod)
var_1790 = relay.var("var_1790", dtype = "float32", shape = (7, 6, 11))#candidate|1790|(7, 6, 11)|var|float32
output = func_1789(var_1790)
func_1791 = relay.Function([var_1790], output)
mutated_mod['func_1791'] = func_1791
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1891 = relay.var("var_1891", dtype = "uint32", shape = (12, 1, 10))#candidate|1891|(12, 1, 10)|var|uint32
var_1892 = relay.var("var_1892", dtype = "uint32", shape = (12, 15, 10))#candidate|1892|(12, 15, 10)|var|uint32
bop_1893 = relay.multiply(var_1891.astype('uint32'), var_1892.astype('uint32')) # shape=(12, 15, 10)
output = bop_1893
output2 = bop_1893
func_1904 = relay.Function([var_1891,var_1892,], output)
mod['func_1904'] = func_1904
mod = relay.transform.InferType()(mod)
var_1905 = relay.var("var_1905", dtype = "uint32", shape = (12, 1, 10))#candidate|1905|(12, 1, 10)|var|uint32
var_1906 = relay.var("var_1906", dtype = "uint32", shape = (12, 15, 10))#candidate|1906|(12, 15, 10)|var|uint32
output = func_1904(var_1905,var_1906,)
func_1907 = relay.Function([var_1905,var_1906,], output)
mutated_mod['func_1907'] = func_1907
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1921 = relay.var("var_1921", dtype = "float64", shape = (7, 9, 16))#candidate|1921|(7, 9, 16)|var|float64
var_1922 = relay.var("var_1922", dtype = "float64", shape = (7, 9, 16))#candidate|1922|(7, 9, 16)|var|float64
bop_1923 = relay.floor_mod(var_1921.astype('float64'), relay.reshape(var_1922.astype('float64'), relay.shape_of(var_1921))) # shape=(7, 9, 16)
func_1904_call = mod.get_global_var('func_1904')
func_1907_call = mutated_mod.get_global_var('func_1907')
var_1942 = relay.var("var_1942", dtype = "uint32", shape = (6, 20))#candidate|1942|(6, 20)|var|uint32
const_1943 = relay.const([[7,-5],[7,-5],[-9,4],[-4,3],[7,-2],[7,6],[4,-3],[-1,-4],[2,-3],[1,7],[3,-8],[-6,-2],[7,7],[-9,2],[-8,-10],[-5,-9],[-2,-7],[2,-4],[7,-1],[-1,7],[6,1],[-6,9],[-9,5],[1,-2],[-6,-7],[3,5],[-3,5],[9,3],[-8,9],[9,-10],[-6,2],[-8,-2],[3,5],[3,8],[-4,2],[-6,9],[9,-8],[5,-7],[-10,8],[-5,-4],[-2,-6],[7,-10],[8,-6],[-5,6],[2,-4],[-9,-10],[2,-9],[-2,5],[2,-8],[-7,9],[8,-10],[2,-9],[-2,-5],[-6,2],[-5,-4],[5,-1],[-3,3],[-5,7],[-10,10],[-3,-8],[4,7],[-8,-7],[-1,-2],[-10,-1],[-9,-5],[9,-2],[9,2],[-1,-8],[-6,4],[-2,-9],[-1,9],[-3,4],[-5,8],[1,4],[10,-1],[-10,5],[-1,-10],[-1,8],[-9,3],[7,3],[6,-7],[-9,-6],[-1,-1],[5,-5],[-8,-3],[-3,9],[10,-1],[9,1],[3,-2],[-1,5],[-5,-2],[-4,-9],[1,1],[5,-5],[4,-1],[10,-8],[-2,-7],[-1,6],[1,-8],[-7,9],[-9,4],[-10,8],[-5,-7],[-3,-7],[-7,1],[-9,4],[6,-6],[9,3],[-4,3],[-5,10],[-9,4],[5,-8],[-6,-10],[5,6],[8,-6],[-5,-6],[-5,-7],[-7,10],[-5,10],[6,4],[-5,8],[10,3],[7,-6],[8,3],[10,-4],[8,-7],[-10,5],[-2,-7],[-3,9],[10,3],[1,10],[-3,3],[-5,-4],[-2,-8],[-7,8],[9,-8],[-4,-8],[-9,4],[2,7],[8,-1],[-8,-8],[6,-7],[-8,-4],[-2,-1],[-9,1],[-2,6],[-8,9],[7,-1],[-5,-7],[6,7],[9,-2],[2,-7],[4,9],[-10,10],[-9,6],[-9,3],[7,-8],[-4,-6],[4,5],[-1,9],[10,-1],[-4,-10],[10,-1],[4,-4],[3,-1],[-6,-3],[-5,8],[-1,-1],[-6,1],[5,-5],[9,5],[-9,4],[10,-1],[2,-7],[-2,-5],[6,4],[-10,2],[-8,2],[2,-1],[-6,-2],[-10,-1],[7,-1],[4,2],[2,2],[10,-9],[2,6],[-1,-2],[9,3],[7,4],[-3,4],[1,-9],[-1,4],[6,10],[7,1],[-10,-6],[7,10],[5,-1],[-1,10],[-1,2],[2,5],[-3,8],[-10,9],[2,-3],[-5,4],[-9,8],[9,9],[-7,-4],[-10,8],[6,3],[-3,-10],[-6,-3],[-5,10],[-1,3],[8,-2],[4,-3],[6,8],[-7,10],[1,-6],[-2,-9],[7,3],[10,8],[10,3],[5,-10],[9,-5],[-9,10],[-4,9],[5,-4],[-9,-10],[3,-7],[7,8],[-7,-3],[8,-7],[-2,5],[3,-3],[-1,-1],[-4,-9],[9,1],[-9,-10],[-9,7],[10,2],[-8,9],[2,10],[-10,6],[-1,2],[-5,8],[4,-10],[-10,2],[-10,-3],[3,10],[5,-1],[-2,-1],[-5,3],[-8,2],[8,6],[-1,-7],[5,9],[-3,5],[10,6],[-4,3],[2,9],[-8,3],[-5,5],[9,6],[3,2],[-4,-5],[-3,-6],[-8,6],[6,9],[6,-3],[2,6],[-1,5],[-8,1],[2,-8],[-7,-1],[3,6],[-5,-5],[-8,4],[6,1],[-4,3],[-3,-6],[10,-9],[-6,5],[-2,-9],[5,-7],[-4,-5],[3,-10],[-4,1],[-7,10],[10,-6],[2,8],[-2,8],[-2,-2],[-10,-9],[-5,-9],[3,-4],[-8,-8],[6,5],[-7,9],[-9,-9],[-3,-9],[8,-5],[-8,1],[6,-10],[4,3],[5,-5],[10,-2],[-2,-9],[-1,-10],[-6,-3],[-1,4],[2,4],[-5,5],[6,2],[5,-2],[-4,5],[-9,4],[2,-10],[2,4],[9,1],[6,1],[5,5],[-7,8],[-2,-7],[-8,8],[8,4],[-9,5],[6,-1],[-9,4],[6,-5],[-10,6],[-8,3],[-2,7],[-7,2],[-1,6],[-3,2],[1,-10],[-7,2],[10,9],[9,-5],[1,2],[6,7],[-1,5],[-10,-7],[-2,8],[2,7],[7,1],[8,-8],[-1,-8],[-6,-4],[-6,2],[5,8],[8,7],[7,-3],[9,-10],[-3,5],[-1,-1],[-6,4],[4,-1],[-7,6],[-5,5],[-6,8],[-4,4],[7,1],[10,2],[9,-9],[2,-1],[9,4],[2,-7],[10,6],[4,-1],[-9,10],[6,-7],[-10,7],[-8,-10],[-8,2],[4,10],[5,-7],[-6,-1],[-5,-6],[2,8],[-2,3],[5,-9],[-8,5],[-2,-7],[1,-7],[4,-3],[8,-2],[3,-2],[4,6],[-1,-6],[-8,2],[-8,-7],[2,-9],[4,5],[-1,2],[-6,-8],[-2,-2],[9,-3],[-1,-7],[3,-1],[9,-3],[-1,-7],[-7,6],[-5,-6],[9,9],[7,7],[8,-8],[-9,8],[-8,3],[3,-10],[8,6],[10,-10],[9,1],[3,6],[1,4],[3,-9],[5,10],[1,10],[8,3],[-7,1],[6,4],[9,3],[-3,1],[1,9],[-2,-5],[1,-2],[-1,-8],[-10,6],[10,-7],[9,-10],[-7,10],[-9,-3],[10,-3],[1,-9],[-8,3],[-6,6],[-1,5],[-1,4],[-6,-5],[5,-5],[5,-5],[1,1],[3,-1],[-4,-6],[-8,-7],[-6,8],[-9,-6],[-10,-1],[-8,1],[2,-3],[7,7],[9,-8],[-4,5],[-10,-1],[-5,-3],[-9,9],[-1,-9],[4,10],[-5,5],[-10,-10],[-2,4],[7,10],[6,6],[8,-3],[8,3],[-5,5],[10,4],[5,-4],[-9,10],[8,8],[5,-9],[3,-1],[-5,3],[7,-2],[10,-9],[-7,5],[-1,-4],[6,3],[7,-4],[6,-1],[2,-3],[-6,8],[-10,-2],[-7,-5],[-1,-1],[2,-6],[-6,1],[-8,4],[-8,8],[3,-9],[-2,10],[-5,2],[-5,-3],[-7,-5],[-1,-6],[9,-10],[-9,9],[6,-3],[-9,10],[9,2],[-4,-10],[-5,-5],[-1,9],[3,7],[8,3],[5,4],[2,-8],[7,6],[4,-4],[3,7],[-2,-6],[-6,8],[8,-9],[1,7],[-9,-6],[-6,10],[10,-10],[5,9],[-6,6],[-5,-7],[8,-7],[9,-6],[-10,7],[-7,-7],[2,2],[-7,-7],[-3,4],[-7,-4],[-6,8],[9,-6],[-8,-5],[1,-4],[9,10],[-6,-8],[10,-10],[10,-6],[6,-4],[7,4],[-4,-10],[10,9],[7,-5],[8,3],[-3,7],[-6,-4],[6,-7],[-9,-8],[-9,9],[10,1],[7,2],[9,-3],[10,-10],[4,9],[1,5],[-7,2],[-9,7],[6,9],[-4,-9],[8,-5],[-4,5],[8,-10],[-1,8],[7,-4],[-10,-8],[-9,-2],[-1,5],[-2,10],[-7,6],[10,-6],[-2,-9],[-6,-5],[-5,5],[-1,-6],[5,-2],[4,-7],[-6,6],[-10,6],[-9,-10],[7,-3],[10,6],[-4,-4],[4,8],[-9,-8],[-7,-2],[9,10],[3,4],[7,2],[-5,1],[-1,-8],[4,-4],[2,-9],[-6,-7],[-10,-6],[-9,5],[-10,-7],[7,4],[-2,6],[2,-10],[-10,3],[-1,5],[-9,6],[-1,-6],[-10,-8],[1,-7],[-6,-1],[-3,-3],[2,-10],[-6,6],[-8,-3],[-5,-2],[4,-4],[-3,7],[5,10],[-9,-2],[-6,-5],[9,-8],[-6,-6],[2,10],[7,8],[-6,-1],[-3,1],[-1,6],[-7,-10],[2,3],[-8,1],[-8,-3],[-4,7],[8,-4],[-7,6],[8,-7],[-10,-1],[-6,-10],[-5,4],[1,-8],[-2,6],[-3,10],[5,-9],[-5,10],[-5,10],[9,-6],[3,6],[1,3],[-9,1],[1,-3],[9,-3],[-10,2],[6,-7],[-3,9],[-2,4],[-1,7],[7,-3],[1,-7],[7,5],[-3,-3],[10,-3],[-10,3],[-9,7],[5,9],[4,-10],[-5,-5],[5,2],[-8,8],[-2,3],[5,-5],[-4,-2],[8,10],[-3,-9],[7,3],[-6,1],[-7,-4],[-10,-2],[-4,9],[1,6],[5,3],[8,6],[-6,9],[-3,5],[-1,-10],[5,-8],[-9,6],[10,-1],[-10,3],[-8,3],[-10,-5],[-5,5],[-7,-7],[-7,3],[1,7],[-5,-4],[-5,-3],[6,7],[8,-8],[-10,7],[8,-4],[-8,-2],[-8,8],[-7,8],[-1,-7],[7,-4],[-3,10],[-7,-5],[-2,9],[-5,8],[-10,-9],[-3,1],[2,-3],[-9,5],[-1,-9],[1,-1],[-2,2],[-3,-3],[9,10],[-2,5],[10,-2],[5,2],[2,4],[3,8],[-8,-3],[3,6],[1,-3],[8,7],[-6,-6],[6,-8],[-9,-6],[10,10],[-6,-10],[10,-10],[-3,-3],[1,-8],[9,-1],[-4,-7],[-3,-7],[-7,-2],[-1,-10],[8,1],[-3,2],[-4,-2],[-4,10],[-1,-3],[10,-7],[9,9],[-2,9],[1,1],[6,-7],[-4,5],[-3,10],[-4,10],[2,-2],[-7,-9],[10,-10],[9,4],[-7,-6],[-1,2],[8,7],[4,-5],[-5,7],[5,-2],[7,-7],[-5,4],[3,6],[-10,7],[-10,-9],[2,-1],[10,8],[8,-2],[3,-3],[-2,2],[-6,-9],[-7,-6],[1,-1],[9,7],[-4,5],[-8,-8],[8,-9],[8,-4],[-2,-3],[-9,5],[-2,10],[-10,1],[5,-5],[4,-4],[-3,-3],[-6,5],[1,-6],[5,-10],[-8,2],[-1,-10],[-8,-9],[-6,-7],[6,2],[-6,-2],[5,7],[9,-10],[-8,-5],[-3,5],[-1,8],[-7,-8],[4,7],[-7,8],[4,1],[-3,-2],[-1,-9],[-3,-10],[9,2],[2,9],[10,-5],[-4,6],[-8,-3],[7,-3],[-2,5],[-7,10],[2,3],[3,-9],[9,-1],[-8,-1],[5,-9],[-9,1],[3,9],[-2,7],[2,-7],[2,-10],[-3,-4],[-8,-7],[-8,5],[9,1],[3,-3],[10,8],[-1,-10],[4,-4],[1,-8],[-4,3],[-3,1],[6,5],[5,-6],[-9,-8],[-3,5],[-8,-4],[8,9],[-9,4],[-1,-6],[-1,10],[-1,9],[-1,2],[5,1],[6,-4],[7,6],[6,-8],[7,5],[2,-1],[2,-5],[-1,6],[2,-1],[3,3],[-7,-6],[9,9],[5,-3],[1,-2],[-6,-7],[1,2],[3,2],[-7,5],[-3,8],[-4,-7],[4,8],[4,8],[6,-6],[9,10],[1,7],[6,5],[-3,-1],[-9,8],[6,9],[-5,-1],[-2,-5],[7,4],[-9,10],[-3,7],[6,-4],[4,-10],[-7,2],[6,10],[10,-3],[-3,7],[-8,-9],[9,-8],[4,2],[6,-10],[-3,-5],[-6,8],[-10,-3],[8,7],[6,-6],[2,10],[7,-3],[7,6],[-6,8],[-5,7],[7,-10],[-9,-2],[5,-10],[1,-4]], dtype = "uint32")#candidate|1943|(900, 2)|const|uint32
call_1941 = func_1904_call(relay.reshape(var_1942.astype('uint32'), [12, 1, 10]), relay.reshape(const_1943.astype('uint32'), [12, 15, 10]), )
call_1944 = func_1904_call(relay.reshape(var_1942.astype('uint32'), [12, 1, 10]), relay.reshape(const_1943.astype('uint32'), [12, 15, 10]), )
output = relay.Tuple([bop_1923,call_1941,var_1942,const_1943,])
output2 = relay.Tuple([bop_1923,call_1944,var_1942,const_1943,])
func_1951 = relay.Function([var_1921,var_1922,var_1942,], output)
mod['func_1951'] = func_1951
mod = relay.transform.InferType()(mod)
mutated_mod['func_1951'] = func_1951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1951_call = mutated_mod.get_global_var('func_1951')
var_1953 = relay.var("var_1953", dtype = "float64", shape = (7, 9, 16))#candidate|1953|(7, 9, 16)|var|float64
var_1954 = relay.var("var_1954", dtype = "float64", shape = (7, 9, 16))#candidate|1954|(7, 9, 16)|var|float64
var_1955 = relay.var("var_1955", dtype = "uint32", shape = (6, 20))#candidate|1955|(6, 20)|var|uint32
call_1952 = func_1951_call(var_1953,var_1954,var_1955,)
output = call_1952
func_1956 = relay.Function([var_1953,var_1954,var_1955,], output)
mutated_mod['func_1956'] = func_1956
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2007 = relay.var("var_2007", dtype = "int16", shape = (9, 4, 3))#candidate|2007|(9, 4, 3)|var|int16
var_2008 = relay.var("var_2008", dtype = "int16", shape = (9, 4, 3))#candidate|2008|(9, 4, 3)|var|int16
bop_2009 = relay.logical_xor(var_2007.astype('int16'), relay.reshape(var_2008.astype('int16'), relay.shape_of(var_2007))) # shape=(9, 4, 3)
output = relay.Tuple([bop_2009,])
output2 = relay.Tuple([bop_2009,])
func_2012 = relay.Function([var_2007,var_2008,], output)
mod['func_2012'] = func_2012
mod = relay.transform.InferType()(mod)
var_2013 = relay.var("var_2013", dtype = "int16", shape = (9, 4, 3))#candidate|2013|(9, 4, 3)|var|int16
var_2014 = relay.var("var_2014", dtype = "int16", shape = (9, 4, 3))#candidate|2014|(9, 4, 3)|var|int16
output = func_2012(var_2013,var_2014,)
func_2015 = relay.Function([var_2013,var_2014,], output)
mutated_mod['func_2015'] = func_2015
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2082 = relay.var("var_2082", dtype = "int64", shape = (4, 8, 2))#candidate|2082|(4, 8, 2)|var|int64
var_2083 = relay.var("var_2083", dtype = "int64", shape = (4, 8, 2))#candidate|2083|(4, 8, 2)|var|int64
bop_2084 = relay.subtract(var_2082.astype('int64'), relay.reshape(var_2083.astype('int64'), relay.shape_of(var_2082))) # shape=(4, 8, 2)
uop_2105 = relay.asin(var_2082.astype('float64')) # shape=(4, 8, 2)
uop_2110 = relay.exp(uop_2105.astype('float64')) # shape=(4, 8, 2)
uop_2114 = relay.log2(uop_2110.astype('float32')) # shape=(4, 8, 2)
const_2122 = relay.const([[[-2.725480,4.532561],[2.053305,-1.155353],[-8.281556,-5.270914],[-1.943090,6.806324],[5.901195,8.865225],[-9.637985,-6.633879],[1.115928,3.591765],[-5.745792,-5.232194]],[[4.614065,2.378078],[-1.429411,9.396413],[4.205778,9.559428],[5.551351,5.738010],[-9.399177,9.696295],[-8.147449,-2.265558],[7.281580,-3.229429],[-1.532406,-1.317318]],[[5.091712,1.197876],[6.477781,-2.273847],[-9.524054,3.017207],[6.577502,-5.891971],[3.624723,-1.072186],[3.416059,-0.101676],[-7.659127,9.404590],[2.138534,8.676059]],[[8.122042,3.897540],[5.373390,1.753069],[7.824092,6.760970],[6.590660,-9.148216],[5.185460,1.219508],[-6.530401,-8.963205],[-1.100173,2.247265],[5.451011,-8.097046]]], dtype = "float64")#candidate|2122|(4, 8, 2)|const|float64
bop_2123 = relay.floor_divide(uop_2110.astype('float32'), relay.reshape(const_2122.astype('float32'), relay.shape_of(uop_2110))) # shape=(4, 8, 2)
func_537_call = mod.get_global_var('func_537')
func_540_call = mutated_mod.get_global_var('func_540')
var_2129 = relay.var("var_2129", dtype = "uint64", shape = (288,))#candidate|2129|(288,)|var|uint64
var_2130 = relay.var("var_2130", dtype = "uint32", shape = (4, 60))#candidate|2130|(4, 60)|var|uint32
call_2128 = relay.TupleGetItem(func_537_call(relay.reshape(var_2129.astype('uint64'), [6, 8, 6]), relay.reshape(var_2130.astype('uint32'), [8, 30]), ), 4)
call_2131 = relay.TupleGetItem(func_540_call(relay.reshape(var_2129.astype('uint64'), [6, 8, 6]), relay.reshape(var_2130.astype('uint32'), [8, 30]), ), 4)
var_2147 = relay.var("var_2147", dtype = "float32", shape = (4, 8, 2))#candidate|2147|(4, 8, 2)|var|float32
bop_2148 = relay.equal(bop_2123.astype('bool'), relay.reshape(var_2147.astype('bool'), relay.shape_of(bop_2123))) # shape=(4, 8, 2)
func_1684_call = mod.get_global_var('func_1684')
func_1686_call = mutated_mod.get_global_var('func_1686')
const_2153 = relay.const([5.461479,-6.123742,-9.796644,6.306765,-9.648235,4.070563,6.692149,3.945417,6.668794,6.196506,-7.916091,0.878167,7.909490,9.846398,-3.344137,9.161093,-5.942226,-5.409010,-9.032361,-8.381518,4.428351,7.314076,0.192520,-1.325499,9.132467,9.629316,-5.271073,-0.769286,1.560561,-3.003935,-8.644334,4.948727,-8.413591,9.832713,-9.879221,8.997236,1.530389,-3.133553,0.417968,1.001214,4.495215,-1.512762,-6.917730,4.538354,7.989765,5.903928,-2.830995,-6.893973], dtype = "float32")#candidate|2153|(48,)|const|float32
call_2152 = func_1684_call(relay.reshape(const_2153.astype('float32'), [12, 1, 4]))
call_2154 = func_1684_call(relay.reshape(const_2153.astype('float32'), [12, 1, 4]))
output = relay.Tuple([bop_2084,uop_2114,call_2128,var_2129,var_2130,bop_2148,call_2152,const_2153,])
output2 = relay.Tuple([bop_2084,uop_2114,call_2131,var_2129,var_2130,bop_2148,call_2154,const_2153,])
func_2159 = relay.Function([var_2082,var_2083,var_2129,var_2130,var_2147,], output)
mod['func_2159'] = func_2159
mod = relay.transform.InferType()(mod)
mutated_mod['func_2159'] = func_2159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2159_call = mutated_mod.get_global_var('func_2159')
var_2161 = relay.var("var_2161", dtype = "int64", shape = (4, 8, 2))#candidate|2161|(4, 8, 2)|var|int64
var_2162 = relay.var("var_2162", dtype = "int64", shape = (4, 8, 2))#candidate|2162|(4, 8, 2)|var|int64
var_2163 = relay.var("var_2163", dtype = "uint64", shape = (288,))#candidate|2163|(288,)|var|uint64
var_2164 = relay.var("var_2164", dtype = "uint32", shape = (4, 60))#candidate|2164|(4, 60)|var|uint32
var_2165 = relay.var("var_2165", dtype = "float32", shape = (4, 8, 2))#candidate|2165|(4, 8, 2)|var|float32
call_2160 = func_2159_call(var_2161,var_2162,var_2163,var_2164,var_2165,)
output = call_2160
func_2166 = relay.Function([var_2161,var_2162,var_2163,var_2164,var_2165,], output)
mutated_mod['func_2166'] = func_2166
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2194 = relay.const([[[0.508660,4.728847,0.092828,-0.557503,5.215068,3.277363],[-8.458059,-1.086716,-4.297090,-5.382777,-4.687787,9.049765],[8.051318,-0.053845,3.402243,-1.173556,0.669381,-5.100164],[-4.852057,-2.233236,-7.665629,0.841982,8.529302,-9.502444],[-9.416182,-8.710873,2.537354,-7.337971,2.413092,7.215057],[-3.688101,7.804309,0.908666,-8.220834,-7.423173,8.028805],[8.152563,5.469913,3.866486,-3.822104,-2.863192,-6.445552],[-6.843315,-8.179255,8.914377,-2.862335,8.304922,7.042293]],[[8.350370,9.018004,-0.627636,7.823687,4.685857,-8.748330],[-7.923375,-5.276190,3.359041,-2.876247,5.606653,4.964009],[-4.779924,-6.062507,6.652131,9.660875,7.772628,7.383681],[7.154571,9.526614,0.491051,8.969978,2.056854,0.878558],[-8.056132,-3.475134,-2.045577,-7.823201,-4.750412,9.341283],[-6.972349,-6.449824,8.083883,4.650446,-1.259530,5.595953],[-8.188315,0.698828,-1.188994,-6.489862,2.804719,-0.439274],[-7.416174,-0.489635,1.825021,4.714152,-5.633320,4.690433]],[[5.466700,0.355709,-2.318224,1.765405,9.022817,-1.498659],[4.609563,4.157793,5.542288,5.933220,-8.766277,-0.972212],[0.609376,-2.140873,-4.096346,5.781149,-5.780728,6.186792],[1.873185,-1.230127,-2.717853,-7.901656,3.034950,-8.679882],[9.843724,0.038933,9.532428,3.501685,5.662657,1.695894],[8.828094,0.466731,7.453155,-2.973163,3.689460,4.770552],[5.890371,-1.227449,2.842059,-7.290316,-5.294995,8.893153],[2.253858,-8.659201,-5.151859,-4.809155,-4.298962,7.212666]],[[0.414628,-7.573699,-0.858519,-3.018590,3.969330,5.124113],[5.038157,9.838450,2.871796,3.023753,6.845706,3.239044],[5.782274,5.319217,6.664341,0.692916,7.778129,8.541431],[-4.139672,6.496423,-9.272773,-8.572418,-2.703284,9.438876],[-4.344961,6.691006,-8.730059,2.534537,-9.317253,8.914164],[-0.299459,-1.654413,-9.322643,4.863697,6.434545,-1.593159],[0.473036,5.286685,-8.662086,3.662249,-7.698204,-8.121954],[5.126635,-3.422105,7.450784,6.544504,2.803708,0.818730]],[[-2.487468,-7.183656,8.787375,2.344006,4.284740,7.111319],[-7.094619,4.588515,1.158617,6.888880,5.793596,-0.185203],[-5.961278,-2.931786,-6.126097,3.867967,0.548807,-4.732289],[8.985006,9.314551,9.675396,-6.322822,-7.859292,-9.205552],[-2.226695,-3.680179,8.117239,-9.241201,4.431982,6.144760],[-7.361506,-3.920450,-9.766768,-0.762513,-5.407386,1.094388],[-8.641020,4.260248,7.105738,-6.719159,-1.410131,4.568265],[-3.294759,6.004327,4.067985,0.661690,3.252184,5.334547]]], dtype = "float32")#candidate|2194|(5, 8, 6)|const|float32
uop_2195 = relay.log10(const_2194.astype('float32')) # shape=(5, 8, 6)
uop_2201 = relay.exp(const_2194.astype('float64')) # shape=(5, 8, 6)
output = relay.Tuple([uop_2195,uop_2201,])
output2 = relay.Tuple([uop_2195,uop_2201,])
func_2203 = relay.Function([], output)
mod['func_2203'] = func_2203
mod = relay.transform.InferType()(mod)
mutated_mod['func_2203'] = func_2203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2203_call = mutated_mod.get_global_var('func_2203')
call_2204 = func_2203_call()
output = call_2204
func_2205 = relay.Function([], output)
mutated_mod['func_2205'] = func_2205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2203_call = mod.get_global_var('func_2203')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_2230 = relay.TupleGetItem(func_2203_call(), 0)
call_2231 = relay.TupleGetItem(func_2205_call(), 0)
output = relay.Tuple([call_2230,])
output2 = relay.Tuple([call_2231,])
func_2249 = relay.Function([], output)
mod['func_2249'] = func_2249
mod = relay.transform.InferType()(mod)
mutated_mod['func_2249'] = func_2249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2249_call = mutated_mod.get_global_var('func_2249')
call_2250 = func_2249_call()
output = call_2250
func_2251 = relay.Function([], output)
mutated_mod['func_2251'] = func_2251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2203_call = mod.get_global_var('func_2203')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_2321 = relay.TupleGetItem(func_2203_call(), 1)
call_2322 = relay.TupleGetItem(func_2205_call(), 1)
func_1951_call = mod.get_global_var('func_1951')
func_1956_call = mutated_mod.get_global_var('func_1956')
var_2329 = relay.var("var_2329", dtype = "float64", shape = (1008,))#candidate|2329|(1008,)|var|float64
const_2330 = relay.const([2,-1,1,-7,1,9,-2,-9,2,9,4,-1,7,5,-2,-4,-2,-9,2,-9,2,1,9,-4,-9,6,-9,6,-8,-6,7,-5,6,1,-2,10,-2,-9,3,1,-6,-7,-7,3,-4,-8,-10,10,-8,3,-3,3,-6,-6,6,10,6,9,10,1,-2,5,-3,-9,7,-1,6,8,6,10,-1,6,-8,3,8,4,-4,-3,5,9,5,-4,4,3,-6,-4,3,-6,-4,1,-4,3,3,6,7,1,5,-4,-5,-9,-10,-8,2,6,-5,-7,1,9,-5,3,2,5,-7,-6,-6,5,-9,-8,9,6], dtype = "uint32")#candidate|2330|(120,)|const|uint32
call_2328 = relay.TupleGetItem(func_1951_call(relay.reshape(var_2329.astype('float64'), [7, 9, 16]), relay.reshape(var_2329.astype('float64'), [7, 9, 16]), relay.reshape(const_2330.astype('uint32'), [6, 20]), ), 0)
call_2331 = relay.TupleGetItem(func_1956_call(relay.reshape(var_2329.astype('float64'), [7, 9, 16]), relay.reshape(var_2329.astype('float64'), [7, 9, 16]), relay.reshape(const_2330.astype('uint32'), [6, 20]), ), 0)
func_1288_call = mod.get_global_var('func_1288')
func_1292_call = mutated_mod.get_global_var('func_1292')
const_2357 = relay.const([5,3,-4,5,-3,-6,3,3,-2,-4,-2,-8,-4,6,3,2,-5,-2,-7,-2,-5,5,2,7,-1,-8,1,-2,4,-7,-5,7,-5,-9,-5,1,1,-10,-6,-9,-2,-7,-5,-10,-7,8,-7,4,-1,4,-5,-7,-5,-1,6,5,9,10,3,4,8,-5,-4,-9,-1,-2,2,-5,6,7,8,-1,7,2,3,1,-6,10,-5,-9,-6,5,10,-4,-7,-10,4,-1,-5,1,7,-1,10,6,-2,4,-4,5,-10,-2,-1,-2,-6,-6,-6,-10,2,-7,-5,-10,8,5,6,5,9,2,2,3,-7,-8,7,-5,1,3,-6,3,8,5,-5,9,10,4,-5,9,-7,2,-4,4,10,-9,2,-10,9,-6,6,10,9,7,10,-6,2,2,-9,-1,-6,5,4,10,-1,-2,4,-4,-6,8,8,5,-6,-5,-3,-3,-9,-7,-6,-8,5,-7,-2,3,3,-3,5,-10,-3,5,-1,7,7,-5,-2,1,3,-6,10,-2,-1,3,-3,7,7,-3,8,-10,-3,9,8,-3,-9,-5,-8,-1,1,5,6,9,-3,4,2,8,9,-3,9,-9,4,-5,-2,-9,10,-7,5,-10,8,-10,7,10,-5,-4,-6,3,8,2,6,-3,5,-5,-3,9,-8,-6,6,1,-6,6,-10,3,8,-8,-7,3,10,-4,-10,6,1,2,-7,-1,-8,6,7,-5,-7,9,5,-7,9,-8,6,6,-8,-7,3,-10,4,-8,7,5,-8,7,-8,8,8,6,-10,1,3,2,3,-7,-8,-9,-10,-1,3,-4,4,8,-6,6,-9,3,-3,9,5,-5,3,-9,10,-3,-8,4,7,-4,8,-10,-6,-10,5,5,5,6,5,1,7,-10,1,9,-6,2,4,1,-4,-7,10,3,-5,1,6,9,8,-10,-1,-6,3,-3,1,-5,4,-3,7,8,-7,-3,-3,-6,-2,-9,-5,-2,-4,-5,8,9,5,4,10,-5,-3,9,3,-8,-2,-7,-3,-7,-5,-3,6,3,-5,-5,-1,3,-9,3,-8,4,-7,8,2,-8,-10,10,-2,-9,-1,6,-3,9,3,-5,-2,-2,-1,-10,8,2,6,5,-4,-9,-7,9,3,-5,10,7,10,-1,-10,6,7,-5,9,-5,4,-9,6,-4,-8,5,-8,9,2,9,-9,9,2,-2,-5,3,8,4,-2,5,7,9,2,5,8,-7,8,4,1,-2,-3,-8,9,-7,10,2,-3,3,8,1,-2,2,4,4,2,-2,3,5,3,4,5,-1,8,4,-3,-2,3,7,-10,1,-6,-8,-4,-2,7,10,-3,-10,6,9,-1,6,-6,9,5,9,-4,2,-2,-7,-10,10,-10,8,-4,-7,9,9,8,1,-8,5,-9,-2,-1,9,7,-9,-10,5,4,-9,5,6,5,-7], dtype = "int8")#candidate|2357|(540,)|const|int8
var_2358 = relay.var("var_2358", dtype = "float64", shape = (264,))#candidate|2358|(264,)|var|float64
call_2356 = relay.TupleGetItem(func_1288_call(relay.reshape(const_2357.astype('int8'), [540,]), relay.reshape(var_2358.astype('float64'), [264,]), ), 1)
call_2359 = relay.TupleGetItem(func_1292_call(relay.reshape(const_2357.astype('int8'), [540,]), relay.reshape(var_2358.astype('float64'), [264,]), ), 1)
func_707_call = mod.get_global_var('func_707')
func_712_call = mutated_mod.get_global_var('func_712')
call_2371 = relay.TupleGetItem(func_707_call(relay.reshape(const_2357.astype('int8'), [3, 15, 12]), relay.reshape(const_2357.astype('int8'), [3, 15, 12]), relay.reshape(call_2356.astype('float64'), [264,]), ), 1)
call_2372 = relay.TupleGetItem(func_712_call(relay.reshape(const_2357.astype('int8'), [3, 15, 12]), relay.reshape(const_2357.astype('int8'), [3, 15, 12]), relay.reshape(call_2356.astype('float64'), [264,]), ), 1)
func_1789_call = mod.get_global_var('func_1789')
func_1791_call = mutated_mod.get_global_var('func_1791')
const_2376 = relay.const([[-8.982653,-2.686034,-9.356194,-4.148778,2.093318,7.708538],[0.480905,0.003895,-2.582065,-0.079370,-0.557177,-5.251481],[8.048072,-8.883207,0.217119,-7.804672,8.776595,-5.093595],[-1.893250,-3.113486,0.039497,-6.049006,-7.081045,-5.533879],[5.864609,4.251827,6.936312,4.304242,6.021480,-6.154910],[-7.966884,-4.569668,-8.401471,1.101348,-4.906798,-7.951056],[3.393785,-9.517988,-6.362208,5.638764,-8.436016,7.947253],[-2.253882,-3.346448,-1.411374,3.331819,1.596430,8.671647],[-9.310355,-8.449453,-9.802323,-2.979031,-5.449170,1.202891],[-9.301235,-5.566308,-1.135105,-9.268230,-6.466819,-2.952425],[5.064549,6.058621,-4.319140,-0.432655,5.828379,3.918700],[3.846452,-1.578276,-9.908230,-0.903310,-2.262629,0.370149],[9.945539,1.772996,-1.510524,-9.833119,3.640292,-5.573895],[-5.032001,-0.680998,-4.633898,-1.505262,-6.984244,7.339186],[-0.692673,9.590577,-3.652363,7.620918,-8.444277,-2.540710],[4.783261,-2.777691,-3.268930,-7.622088,-4.265478,8.506714],[-9.693270,-6.649052,-9.857865,3.612174,-7.892350,8.502885],[-4.267520,-7.240496,0.455294,7.000390,9.598665,-8.486861],[0.826778,4.188702,6.174794,-3.684231,-1.874550,-0.692503],[-5.977045,6.029669,-0.933357,7.400481,-6.965191,0.160151],[-2.421394,-8.758336,8.449992,-1.703896,6.261451,-9.267182],[-4.842226,-3.553819,1.164504,3.115957,-0.666208,-5.953695],[5.413760,5.637110,9.061120,1.463698,-9.763265,-5.588555],[-7.329276,-8.791562,-4.535317,4.168429,9.225320,9.514807],[-9.470680,-1.473456,9.084738,-1.813593,-4.431025,-1.907819],[-4.736839,-5.417590,0.548176,-0.811987,1.650836,3.101547],[1.186927,-3.052952,-6.271741,-5.652569,-6.745325,-9.366715],[9.133002,-0.096172,-0.441846,-6.905627,-7.693599,6.077978],[9.278877,-9.950254,-8.999407,-9.626099,-0.094903,-1.450733],[-9.833837,5.471549,6.936420,-1.145028,-6.774930,6.008226],[-2.955143,-9.183037,-8.245497,-5.580378,5.864987,-7.604220],[4.083207,-8.159665,6.646896,-6.131711,7.744024,-6.123630],[2.576775,8.563774,3.835975,5.095959,-6.050917,-7.154080],[5.537767,-7.718171,0.870128,4.954868,6.336994,-8.949505],[-6.307166,-4.498051,4.680699,9.144676,-6.743480,-1.451607],[5.121107,4.426291,9.821942,-8.381025,-5.736268,-1.638062],[8.506273,-6.505337,1.092551,2.333103,-6.887539,3.587408],[-2.734584,-4.081550,8.251414,-0.673494,-7.850808,1.222201],[9.866074,4.054074,-2.812253,-9.538434,5.282049,4.835690],[7.635770,-3.170167,-4.460507,3.484040,-3.223273,5.486876],[0.928313,-0.733377,0.514853,6.952344,6.497829,7.836599],[-4.215132,7.083766,-5.413642,-5.773878,9.568488,5.877636],[-2.940924,-9.149869,2.066590,5.609794,8.158979,-5.465809],[7.159512,-3.727647,-9.343149,-4.437115,5.063123,-1.205511],[-6.092204,9.551618,-5.764068,-5.994799,-0.627529,5.741414],[-6.039477,-1.275734,1.102268,2.013261,-5.559986,5.270861],[8.207063,-7.618424,-6.254767,-3.886949,9.697197,-3.861438],[3.098690,4.036693,-1.227432,7.565442,8.015305,-7.211254],[-1.263538,1.734718,9.650398,-1.987537,-2.300914,3.892185],[7.005280,-7.080340,-4.386450,-3.243988,9.963977,1.536669],[9.696863,-4.319489,-1.654556,1.573406,-8.888600,1.227622],[2.185176,-5.462059,-1.110390,-2.889494,-4.513892,0.507358],[-7.077574,-6.262133,9.087791,3.556550,-5.550495,0.284693],[-8.604104,0.646365,4.593401,3.211131,-2.530549,-0.241283],[5.736308,4.802097,3.540623,-3.956973,-2.924973,6.714776],[-8.239278,-7.017997,7.159942,2.702503,-3.155506,-3.581804],[-3.035254,0.976050,-2.019005,7.759405,-8.347362,9.718267],[7.286189,9.867243,-6.888754,5.493806,1.446989,8.095629],[7.172851,5.771809,5.475634,9.669113,5.887671,4.918764],[4.909779,5.740930,3.917936,0.893552,3.638725,-7.866677],[-1.679285,-3.102902,-6.377349,-7.701370,7.111760,5.350967],[0.929065,-7.092263,3.441512,-3.934086,-5.333488,5.175316],[-6.195623,7.045532,4.606395,6.573920,5.152354,-4.457368],[7.492577,-9.927350,-2.484478,-4.910796,-3.838854,-5.647225],[-6.206119,-9.197416,-0.817212,-1.689195,3.409989,-1.771646],[4.341698,-1.899374,-7.813710,-3.580755,5.889146,-3.409177],[2.344868,7.009445,9.545458,8.796500,1.568622,-0.418200],[9.859424,-6.453868,-8.458076,-8.769548,4.146452,0.377888],[9.895099,0.823186,-0.489578,-7.104758,-3.142330,2.157314],[8.716610,7.616116,3.246138,-7.800287,-3.482459,1.383833],[-8.836356,3.981749,-0.044668,6.407350,-6.710915,-0.462103],[-8.479565,-1.723534,-4.081685,-4.927039,1.757465,-8.911781],[4.531788,2.414338,-6.287199,6.884420,-7.673316,-3.894652],[5.412697,-1.386426,-7.748112,-0.797505,5.513049,-5.531351],[-2.360163,9.049556,-4.809991,-0.757063,4.311767,-0.504056],[-3.089064,-3.074367,-9.916671,6.021502,-2.857293,0.787445],[-4.763341,8.514167,7.461283,-0.951382,-1.114383,6.169286]], dtype = "float32")#candidate|2376|(77, 6)|const|float32
call_2375 = relay.TupleGetItem(func_1789_call(relay.reshape(const_2376.astype('float32'), [7, 6, 11])), 0)
call_2377 = relay.TupleGetItem(func_1791_call(relay.reshape(const_2376.astype('float32'), [7, 6, 11])), 0)
func_2249_call = mod.get_global_var('func_2249')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_2378 = relay.TupleGetItem(func_2249_call(), 0)
call_2379 = relay.TupleGetItem(func_2251_call(), 0)
uop_2387 = relay.tan(call_2321.astype('float32')) # shape=(5, 8, 6)
uop_2389 = relay.tan(call_2322.astype('float32')) # shape=(5, 8, 6)
output = relay.Tuple([call_2328,var_2329,const_2330,call_2356,const_2357,var_2358,call_2371,call_2375,const_2376,call_2378,uop_2387,])
output2 = relay.Tuple([call_2331,var_2329,const_2330,call_2359,const_2357,var_2358,call_2372,call_2377,const_2376,call_2379,uop_2389,])
func_2396 = relay.Function([var_2329,var_2358,], output)
mod['func_2396'] = func_2396
mod = relay.transform.InferType()(mod)
var_2397 = relay.var("var_2397", dtype = "float64", shape = (1008,))#candidate|2397|(1008,)|var|float64
var_2398 = relay.var("var_2398", dtype = "float64", shape = (264,))#candidate|2398|(264,)|var|float64
output = func_2396(var_2397,var_2398,)
func_2399 = relay.Function([var_2397,var_2398,], output)
mutated_mod['func_2399'] = func_2399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2249_call = mod.get_global_var('func_2249')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_2475 = relay.TupleGetItem(func_2249_call(), 0)
call_2476 = relay.TupleGetItem(func_2251_call(), 0)
output = call_2475
output2 = call_2476
func_2484 = relay.Function([], output)
mod['func_2484'] = func_2484
mod = relay.transform.InferType()(mod)
mutated_mod['func_2484'] = func_2484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2484_call = mutated_mod.get_global_var('func_2484')
call_2485 = func_2484_call()
output = call_2485
func_2486 = relay.Function([], output)
mutated_mod['func_2486'] = func_2486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2249_call = mod.get_global_var('func_2249')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_2502 = relay.TupleGetItem(func_2249_call(), 0)
call_2503 = relay.TupleGetItem(func_2251_call(), 0)
uop_2504 = relay.acos(call_2502.astype('float64')) # shape=(5, 8, 6)
uop_2506 = relay.acos(call_2503.astype('float64')) # shape=(5, 8, 6)
func_610_call = mod.get_global_var('func_610')
func_614_call = mutated_mod.get_global_var('func_614')
var_2508 = relay.var("var_2508", dtype = "int32", shape = (560,))#candidate|2508|(560,)|var|int32
call_2507 = relay.TupleGetItem(func_610_call(relay.reshape(var_2508.astype('int32'), [10, 7, 8]), relay.reshape(var_2508.astype('int32'), [10, 7, 8]), ), 0)
call_2509 = relay.TupleGetItem(func_614_call(relay.reshape(var_2508.astype('int32'), [10, 7, 8]), relay.reshape(var_2508.astype('int32'), [10, 7, 8]), ), 0)
output = relay.Tuple([uop_2504,call_2507,var_2508,])
output2 = relay.Tuple([uop_2506,call_2509,var_2508,])
func_2510 = relay.Function([var_2508,], output)
mod['func_2510'] = func_2510
mod = relay.transform.InferType()(mod)
var_2511 = relay.var("var_2511", dtype = "int32", shape = (560,))#candidate|2511|(560,)|var|int32
output = func_2510(var_2511)
func_2512 = relay.Function([var_2511], output)
mutated_mod['func_2512'] = func_2512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2484_call = mod.get_global_var('func_2484')
func_2486_call = mutated_mod.get_global_var('func_2486')
call_2603 = func_2484_call()
call_2604 = func_2484_call()
func_1243_call = mod.get_global_var('func_1243')
func_1245_call = mutated_mod.get_global_var('func_1245')
var_2609 = relay.var("var_2609", dtype = "float32", shape = (2400,))#candidate|2609|(2400,)|var|float32
call_2608 = func_1243_call(relay.reshape(var_2609.astype('float32'), [10, 16, 15]))
call_2610 = func_1243_call(relay.reshape(var_2609.astype('float32'), [10, 16, 15]))
output = relay.Tuple([call_2603,call_2608,var_2609,])
output2 = relay.Tuple([call_2604,call_2610,var_2609,])
func_2617 = relay.Function([var_2609,], output)
mod['func_2617'] = func_2617
mod = relay.transform.InferType()(mod)
mutated_mod['func_2617'] = func_2617
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2618 = relay.var("var_2618", dtype = "float32", shape = (2400,))#candidate|2618|(2400,)|var|float32
func_2617_call = mutated_mod.get_global_var('func_2617')
call_2619 = func_2617_call(var_2618)
output = call_2619
func_2620 = relay.Function([var_2618], output)
mutated_mod['func_2620'] = func_2620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2249_call = mod.get_global_var('func_2249')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_2637 = relay.TupleGetItem(func_2249_call(), 0)
call_2638 = relay.TupleGetItem(func_2251_call(), 0)
const_2657 = relay.const([[[-6.566692,-1.325459,5.104609,5.206354,5.478111,-1.586229],[1.566088,-5.462313,-7.946617,9.886328,0.600236,-1.908998],[6.130614,4.021286,-9.346431,-5.663963,-5.433195,9.259510],[4.989748,-3.350704,1.048257,5.301838,1.360716,3.661490],[-8.948162,-8.293106,-6.187606,-0.510361,-7.485451,2.087757],[-8.988699,2.820122,-5.121348,-7.738993,2.282420,-3.189664],[8.813733,-2.607959,-1.671638,9.199220,-1.139008,-1.553084],[-2.791759,-3.936591,-2.067143,9.322855,7.794092,-4.341502]],[[6.561411,2.812631,1.749553,-8.195148,-0.554858,5.076078],[-5.300891,9.089693,7.232883,4.360773,-4.526441,-0.442972],[0.494582,4.916893,-5.390007,7.852160,9.337620,-7.723603],[-5.007852,4.488916,1.922111,1.989431,6.330111,0.474711],[-5.456828,-4.329490,-0.134862,-9.674268,0.530370,1.354863],[5.158194,9.569553,5.478360,4.466402,-6.317032,-5.558651],[7.503178,7.813154,2.267957,6.052217,-8.560343,-6.850610],[-9.921201,-5.353872,9.075886,9.968973,-2.054635,9.746786]],[[5.810796,-0.471919,3.445949,8.886332,-6.297239,-0.341566],[0.335448,-3.110056,6.914529,7.800357,4.383550,4.570333],[2.510049,1.546482,-7.645124,5.439228,8.803046,9.501230],[1.944402,0.759690,-2.515809,5.921100,-4.870423,1.948493],[-7.239735,3.513828,-5.997753,-4.641614,-9.232212,-8.461259],[-9.960756,-3.730121,6.787608,5.737286,-3.844450,-7.273510],[-3.085098,5.675277,8.467132,-4.551367,2.169324,5.243958],[9.550872,1.766908,2.134569,-9.875788,0.709131,2.773145]],[[-0.626539,0.760324,-7.917753,1.469761,8.879881,1.471126],[9.117710,4.698675,2.089761,4.562178,-0.224697,-9.627766],[-6.595233,-9.885228,4.157341,-5.022826,-5.364003,7.559324],[0.455373,6.654821,3.087628,-4.026795,-6.358097,2.870657],[-2.058899,-3.500274,6.937155,3.311112,0.437033,1.077734],[5.254415,3.830495,-9.165802,-3.696619,8.574046,-2.446624],[-8.502390,-4.320686,-5.762094,2.875058,-4.907365,-4.193811],[-5.517954,1.578342,7.478528,9.752280,-5.554226,-2.589018]],[[5.225590,-9.605369,-0.579452,7.924796,5.037242,2.867142],[7.062768,8.629497,2.790943,8.752174,5.727250,3.910990],[8.104366,6.577721,4.626488,-9.993123,1.375113,-2.773241],[-6.574084,-1.804015,0.704725,7.240994,-5.064224,-2.969172],[-1.297407,-7.153801,-8.123307,-8.952211,-9.449377,8.449533],[2.619609,-8.275731,-1.250122,-8.539244,-6.431084,7.705887],[4.528632,-6.170001,9.742366,5.946890,-3.023843,0.352721],[5.165580,-7.970258,6.872460,-3.902024,-3.716225,8.518070]]], dtype = "float32")#candidate|2657|(5, 8, 6)|const|float32
bop_2658 = relay.logical_and(call_2637.astype('bool'), relay.reshape(const_2657.astype('bool'), relay.shape_of(call_2637))) # shape=(5, 8, 6)
bop_2661 = relay.logical_and(call_2638.astype('bool'), relay.reshape(const_2657.astype('bool'), relay.shape_of(call_2638))) # shape=(5, 8, 6)
func_274_call = mod.get_global_var('func_274')
func_278_call = mutated_mod.get_global_var('func_278')
var_2666 = relay.var("var_2666", dtype = "float64", shape = (3, 88))#candidate|2666|(3, 88)|var|float64
call_2665 = relay.TupleGetItem(func_274_call(relay.reshape(var_2666.astype('float64'), [8, 3, 11]), relay.reshape(var_2666.astype('float64'), [8, 3, 11]), ), 0)
call_2667 = relay.TupleGetItem(func_278_call(relay.reshape(var_2666.astype('float64'), [8, 3, 11]), relay.reshape(var_2666.astype('float64'), [8, 3, 11]), ), 0)
output = relay.Tuple([bop_2658,call_2665,var_2666,])
output2 = relay.Tuple([bop_2661,call_2667,var_2666,])
func_2668 = relay.Function([var_2666,], output)
mod['func_2668'] = func_2668
mod = relay.transform.InferType()(mod)
var_2669 = relay.var("var_2669", dtype = "float64", shape = (3, 88))#candidate|2669|(3, 88)|var|float64
output = func_2668(var_2669)
func_2670 = relay.Function([var_2669], output)
mutated_mod['func_2670'] = func_2670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2484_call = mod.get_global_var('func_2484')
func_2486_call = mutated_mod.get_global_var('func_2486')
call_2680 = func_2484_call()
call_2681 = func_2484_call()
const_2698 = relay.const([[[2.676810,6.061192,0.657898,-8.917228,1.480763,-3.227944],[7.149409,3.592335,-2.511708,-5.097399,-6.067923,4.678542],[3.139367,-7.580702,-8.011346,-7.567051,1.342636,2.124064],[-0.234611,2.149114,-7.758645,-5.990301,-3.997693,-6.357075],[-9.727703,-9.278502,-3.315274,-6.810781,-4.374700,6.786941],[-6.738630,1.420437,3.706328,-0.701913,-8.697795,-9.044573],[7.347703,-4.174563,-2.809522,-7.654767,8.342809,-1.773298],[-8.644720,6.511369,3.681639,5.725381,8.206492,5.239995]],[[1.915574,-5.221268,1.448112,-3.529752,9.870415,-8.133051],[-5.828853,-5.694217,-6.097614,5.642765,7.811457,1.681307],[6.714274,-4.419339,1.838644,-7.657274,7.909252,-9.530752],[2.501396,-6.202373,7.301284,-1.465968,7.670065,-6.068565],[9.775533,8.925033,-8.121287,-5.986409,9.426089,-8.681023],[-6.969074,-1.627147,1.980812,1.154068,9.657145,4.981864],[-1.555773,-9.766737,2.527555,3.404578,1.622301,6.782242],[-4.151235,4.913157,5.517388,-7.409503,-9.082603,9.379523]],[[-6.527934,-4.896647,-3.261771,-9.424573,-2.301959,7.296657],[1.255236,-2.509793,4.245856,3.777036,3.591315,3.847926],[-4.252591,9.612258,-1.863389,6.114771,6.110534,5.449155],[6.289775,-2.216199,-3.929992,6.869816,2.882279,-8.452217],[-1.261522,-4.228693,6.629828,-1.594678,0.248114,-1.499015],[-6.970599,-2.892876,-9.738072,-7.486471,-3.904164,9.750070],[-6.033754,-6.161595,-5.106675,-9.031870,-8.432407,8.557884],[-3.237788,-6.426106,9.134211,-3.661698,-3.836802,8.046590]],[[-7.151268,-7.346238,-9.121702,0.580809,9.473538,-1.751287],[1.383137,-5.948618,6.513050,1.066924,1.889474,-8.445475],[-3.146086,-9.152681,0.121032,3.989538,7.129340,-5.152216],[3.671897,-3.189044,-0.301042,2.208256,3.899495,7.514103],[8.098153,4.532660,-0.073244,5.460636,-3.977328,5.112252],[4.215133,6.966434,5.492440,-6.568850,4.643891,3.478371],[-5.885329,8.911374,-3.200250,-6.806545,8.596487,-1.073202],[1.345719,5.368115,8.920117,-6.529468,2.210977,-4.478109]],[[8.693605,-0.619436,5.246595,-2.274024,-8.253949,-9.447995],[9.659378,-4.326702,-2.064907,-7.401309,-1.215338,9.878017],[1.080595,-2.113897,8.033885,9.409997,6.461327,6.828337],[2.822202,-3.414399,-4.373625,-0.404410,-2.475372,-7.894750],[8.133706,-8.635255,-9.462462,2.573227,3.087262,9.260956],[-2.101866,-5.953006,-6.309311,3.131855,1.169063,0.842607],[-7.933196,2.322600,-7.719232,7.449972,3.844360,3.693017],[5.512367,2.564790,-0.007455,3.995415,0.135586,-1.728605]]], dtype = "float32")#candidate|2698|(5, 8, 6)|const|float32
bop_2699 = relay.add(call_2680.astype('int64'), relay.reshape(const_2698.astype('int64'), relay.shape_of(call_2680))) # shape=(5, 8, 6)
bop_2702 = relay.add(call_2681.astype('int64'), relay.reshape(const_2698.astype('int64'), relay.shape_of(call_2681))) # shape=(5, 8, 6)
output = relay.Tuple([bop_2699,])
output2 = relay.Tuple([bop_2702,])
func_2708 = relay.Function([], output)
mod['func_2708'] = func_2708
mod = relay.transform.InferType()(mod)
mutated_mod['func_2708'] = func_2708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2708_call = mutated_mod.get_global_var('func_2708')
call_2709 = func_2708_call()
output = call_2709
func_2710 = relay.Function([], output)
mutated_mod['func_2710'] = func_2710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2484_call = mod.get_global_var('func_2484')
func_2486_call = mutated_mod.get_global_var('func_2486')
call_2719 = func_2484_call()
call_2720 = func_2484_call()
output = call_2719
output2 = call_2720
func_2722 = relay.Function([], output)
mod['func_2722'] = func_2722
mod = relay.transform.InferType()(mod)
mutated_mod['func_2722'] = func_2722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2722_call = mutated_mod.get_global_var('func_2722')
call_2723 = func_2722_call()
output = call_2723
func_2724 = relay.Function([], output)
mutated_mod['func_2724'] = func_2724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2484_call = mod.get_global_var('func_2484')
func_2486_call = mutated_mod.get_global_var('func_2486')
call_2727 = func_2484_call()
call_2728 = func_2484_call()
var_2741 = relay.var("var_2741", dtype = "float32", shape = (5, 8, 6))#candidate|2741|(5, 8, 6)|var|float32
bop_2742 = relay.divide(call_2727.astype('float32'), relay.reshape(var_2741.astype('float32'), relay.shape_of(call_2727))) # shape=(5, 8, 6)
bop_2745 = relay.divide(call_2728.astype('float32'), relay.reshape(var_2741.astype('float32'), relay.shape_of(call_2728))) # shape=(5, 8, 6)
func_1288_call = mod.get_global_var('func_1288')
func_1292_call = mutated_mod.get_global_var('func_1292')
var_2749 = relay.var("var_2749", dtype = "int8", shape = (540,))#candidate|2749|(540,)|var|int8
var_2750 = relay.var("var_2750", dtype = "float64", shape = (264,))#candidate|2750|(264,)|var|float64
call_2748 = relay.TupleGetItem(func_1288_call(relay.reshape(var_2749.astype('int8'), [540,]), relay.reshape(var_2750.astype('float64'), [264,]), ), 0)
call_2751 = relay.TupleGetItem(func_1292_call(relay.reshape(var_2749.astype('int8'), [540,]), relay.reshape(var_2750.astype('float64'), [264,]), ), 0)
bop_2753 = relay.left_shift(call_2727.astype('int32'), relay.reshape(var_2741.astype('int32'), relay.shape_of(call_2727))) # shape=(5, 8, 6)
bop_2756 = relay.left_shift(call_2728.astype('int32'), relay.reshape(var_2741.astype('int32'), relay.shape_of(call_2728))) # shape=(5, 8, 6)
output = relay.Tuple([bop_2742,call_2748,var_2749,var_2750,bop_2753,])
output2 = relay.Tuple([bop_2745,call_2751,var_2749,var_2750,bop_2756,])
func_2760 = relay.Function([var_2741,var_2749,var_2750,], output)
mod['func_2760'] = func_2760
mod = relay.transform.InferType()(mod)
var_2761 = relay.var("var_2761", dtype = "float32", shape = (5, 8, 6))#candidate|2761|(5, 8, 6)|var|float32
var_2762 = relay.var("var_2762", dtype = "int8", shape = (540,))#candidate|2762|(540,)|var|int8
var_2763 = relay.var("var_2763", dtype = "float64", shape = (264,))#candidate|2763|(264,)|var|float64
output = func_2760(var_2761,var_2762,var_2763,)
func_2764 = relay.Function([var_2761,var_2762,var_2763,], output)
mutated_mod['func_2764'] = func_2764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2722_call = mod.get_global_var('func_2722')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_2774 = func_2722_call()
call_2775 = func_2722_call()
func_2396_call = mod.get_global_var('func_2396')
func_2399_call = mutated_mod.get_global_var('func_2399')
var_2778 = relay.var("var_2778", dtype = "float64", shape = (1008,))#candidate|2778|(1008,)|var|float64
var_2779 = relay.var("var_2779", dtype = "float64", shape = (1, 264))#candidate|2779|(1, 264)|var|float64
call_2777 = relay.TupleGetItem(func_2396_call(relay.reshape(var_2778.astype('float64'), [1008,]), relay.reshape(var_2779.astype('float64'), [264,]), ), 10)
call_2780 = relay.TupleGetItem(func_2399_call(relay.reshape(var_2778.astype('float64'), [1008,]), relay.reshape(var_2779.astype('float64'), [264,]), ), 10)
var_2783 = relay.var("var_2783", dtype = "float64", shape = (12, 264))#candidate|2783|(12, 264)|var|float64
bop_2784 = relay.left_shift(var_2779.astype('uint16'), var_2783.astype('uint16')) # shape=(12, 264)
uop_2790 = relay.rsqrt(call_2774.astype('float64')) # shape=(5, 8, 6)
uop_2792 = relay.rsqrt(call_2775.astype('float64')) # shape=(5, 8, 6)
output = relay.Tuple([call_2777,var_2778,bop_2784,uop_2790,])
output2 = relay.Tuple([call_2780,var_2778,bop_2784,uop_2792,])
func_2793 = relay.Function([var_2778,var_2779,var_2783,], output)
mod['func_2793'] = func_2793
mod = relay.transform.InferType()(mod)
mutated_mod['func_2793'] = func_2793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2793_call = mutated_mod.get_global_var('func_2793')
var_2795 = relay.var("var_2795", dtype = "float64", shape = (1008,))#candidate|2795|(1008,)|var|float64
var_2796 = relay.var("var_2796", dtype = "float64", shape = (1, 264))#candidate|2796|(1, 264)|var|float64
var_2797 = relay.var("var_2797", dtype = "float64", shape = (12, 264))#candidate|2797|(12, 264)|var|float64
call_2794 = func_2793_call(var_2795,var_2796,var_2797,)
output = call_2794
func_2798 = relay.Function([var_2795,var_2796,var_2797,], output)
mutated_mod['func_2798'] = func_2798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2722_call = mod.get_global_var('func_2722')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_2916 = func_2722_call()
call_2917 = func_2722_call()
output = call_2916
output2 = call_2917
func_2937 = relay.Function([], output)
mod['func_2937'] = func_2937
mod = relay.transform.InferType()(mod)
output = func_2937()
func_2938 = relay.Function([], output)
mutated_mod['func_2938'] = func_2938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2937_call = mod.get_global_var('func_2937')
func_2938_call = mutated_mod.get_global_var('func_2938')
call_2956 = func_2937_call()
call_2957 = func_2937_call()
func_2760_call = mod.get_global_var('func_2760')
func_2764_call = mutated_mod.get_global_var('func_2764')
const_2965 = relay.const([-1,6,6,4,-8,-7,-9,-2,5,9,-9,-10,1,1,6,-9,-6,4,-7,-4,-1,4,10,-4,-5,-10,6,-9,5,-4,7,7,8,-9,-10,-10,6,2,9,10,10,10,-2,-4,-6,8,-2,1,8,7,-3,-10,10,-4,9,6,-3,-5,3,2,8,5,4,-1,5,10,-4,6,2,6,-3,-1,7,3,-5,-1,2,-4,3,-9,-5,6,-7,5,2,1,2,-4,-7,-10,10,5,9,-10,-5,3,-8,-9,-3,6,-6,1,-8,8,9,-6,-1,-5,-10,-7,6,7,8,2,-2,7,5,5,-2,-9,-3,4,-7,6,-5,-4,-2,-6,-9,-2,-5,7,10,5,7,6,8,3,8,3,-10,-6,-8,-3,-9,7,7,-7,-8,-8,4,-4,-4,8,-6,-7,9,-1,6,-3,-2,-2,-6,5,-9,10,6,8,3,-4,-10,-7,6,6,-3,-8,1,3,9,3,2,-5,-7,2,10,9,9,-9,-6,-9,-5,-4,-9,4,-9,-7,-10,1,5,7,1,7,2,7,8,6,4,-10,1,2,2,-10,4,-2,-7,6,7,-10,-7,8,2,1,-4,-1,-8,4,4,4,9,7,-9,4,6,4,10,1,5,-9,4,5,-5,-1,5,9,5,10,8,-7,-9,-10,-4,2,-2,8,5,9,2,-10,-7,-1,-4,-4,6,-9,-4,-3,-9,-6,9,8,-7,3,6,8,-2,-6,1,-1,1,1,10,-2,2,1,-3,-3,-7,-2,10,6,3,8,-2,-3,10,6,2,8,-7,-3,-9,1,-3,-9,-4,-4,-9,-1,1,3,9,-1,1,-3,10,9,4,-5,2,3,3,3,10,-4,-9,4,10,1,7,-8,-1,6,6,6,9,5,7,-3,-3,7,6,2,-9,7,-8,-2,-3,-6,-2,-6,2,-3,9,-5,5,-6,5,6,2,9,8,9,-2,10,-9,-4,-8,-9,3,1,8,-8,7,7,7,9,7,-7,-3,2,-3,-3,3,10,-8,5,-8,8,-9,3,1,5,10,-5,-9,4,-3,-7,-1,-4,7,4,6,-1,7,3,7,-7,2,-9,1,4,-2,-2,-7,-1,-8,10,-9,1,6,-5,3,-10,-4,-5,4,-8,-2,1,-7,-6,1,10,-8,5,6,4,4,2,3,-4,9,-7,-2,-10,3,7,1,-4,-10,-10,-1,-6,10,-2,7,2,-7,7,-7,2,1,6,9,-1,-8,-5,-7,1,-1,10,10,4,-1,1,-7,10,4,-10,-3,-2,-3,-8,-10,-8,6,8,10,-7,4,8,1,-9,-1,8,9,-5,-8,3,-3,-8,-10,7,2,-2,-2,-8,-8,7,-6,-7,4,-9,4,10,-6,-10,-9,-6,-1,-7,-9,-5,2,10,7,-4,9,5,9,5,-6,-2,2,-3,-8,-5,5,-8], dtype = "int8")#candidate|2965|(540,)|const|int8
const_2966 = relay.const([-8.839616,6.728214,9.635554,-5.264631,3.945658,-9.907717,-7.958479,5.590234,-5.824091,-4.558062,5.293340,-3.311697,-3.761992,-0.592336,5.549022,7.823658,1.634697,-6.517084,-2.814757,-0.975563,1.220967,8.284500,6.144407,9.422567,3.672915,8.932710,9.420932,-1.930775,8.301082,-6.985385,-0.590773,-3.962012,-0.046611,7.414744,6.836258,-5.768450,-0.809167,-5.255381,9.393396,2.426676,-7.469338,0.289842,-4.404301,1.069776,7.644452,-3.784268,-0.997100,7.752081,-7.582287,9.345243,-4.372791,-0.610530,7.579716,-3.109529,6.529016,4.382513,6.456665,7.439779,-1.799837,5.824890,-3.871538,-5.225037,-8.816514,-8.993914,-2.442299,8.588480,4.695873,3.218137,-8.152147,3.006899,2.481494,5.833490,-6.418697,-6.798404,-4.590659,-0.885029,7.970797,1.978605,-9.768702,-2.792809,8.381547,-2.575585,-5.953545,0.890292,1.190342,-4.012030,-0.590451,0.897196,-2.092739,8.428400,2.725783,-7.483271,-9.183074,8.321256,2.623785,8.684372,1.948201,7.263449,0.602629,-3.843868,-9.703241,5.258651,7.498943,5.641389,-4.745292,-3.446308,-2.626069,7.726664,-0.254046,0.241010,-4.956364,-4.412033,-4.888884,6.175276,-3.100563,3.367812,-6.910523,4.530514,3.481883,-2.560215,-8.599905,-6.682091,6.247644,3.005166,-5.575434,0.827966,-6.918715,-4.986890,9.896809,-0.298709,5.553734,-2.445440,2.583996,7.757587,-5.631944,-8.208937,-7.030280,2.465038,-0.084230,7.060029,-2.797851,-0.271301,-8.345957,4.136707,-3.826746,-0.793100,4.337840,-7.515046,-8.333671,-5.943407,4.640823,8.940692,5.532446,0.229885,-9.099347,-5.439574,0.603732,9.443977,3.307184,3.735232,-2.334991,1.595624,2.724340,-5.961988,-1.433691,-8.000557,-1.377913,0.042302,4.072120,4.711858,-1.891676,-2.810390,-2.360379,8.158989,-7.581236,-3.649788,-8.746261,4.068004,2.983485,-1.110181,-1.256474,1.418041,-3.913956,-1.137558,1.803977,4.136245,2.428365,1.052505,5.787115,4.280529,0.609985,9.683340,4.353936,4.716395,-0.388674,-2.769141,3.615297,2.050451,5.436343,9.519291,-3.116532,-0.896100,-9.453154,5.864070,-3.044945,3.432184,-4.775355,-8.297186,8.445591,-2.359398,7.405804,-8.316174,-2.248629,-2.215899,9.229855,-8.335196,5.464558,5.248959,-9.753401,2.256008,3.459458,2.665756,5.271519,-8.328922,9.470562,2.612053,1.982407,3.422043,5.459106,7.291073,4.906761,-0.580072,-9.869206,-4.269122,5.071233,-7.989720,0.686515,-2.247016,4.337601,4.715338,-3.840922,7.396727,5.078619,6.146520,-0.844308,9.692891,1.632300,-1.414504,-3.847250,-0.467080,8.983508,-5.657795,-3.141086,1.488625,8.290965,3.781374,5.189315,-7.615167,1.001365,-2.097678,-0.490755,-5.603139,0.682269,-6.320688], dtype = "float64")#candidate|2966|(264,)|const|float64
call_2964 = relay.TupleGetItem(func_2760_call(relay.reshape(call_2956.astype('float32'), [5, 8, 6]), relay.reshape(const_2965.astype('int8'), [540,]), relay.reshape(const_2966.astype('float64'), [264,]), ), 4)
call_2967 = relay.TupleGetItem(func_2764_call(relay.reshape(call_2956.astype('float32'), [5, 8, 6]), relay.reshape(const_2965.astype('int8'), [540,]), relay.reshape(const_2966.astype('float64'), [264,]), ), 4)
func_2203_call = mod.get_global_var('func_2203')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_2971 = relay.TupleGetItem(func_2203_call(), 1)
call_2972 = relay.TupleGetItem(func_2205_call(), 1)
output = relay.Tuple([call_2956,call_2964,const_2965,const_2966,call_2971,])
output2 = relay.Tuple([call_2957,call_2967,const_2965,const_2966,call_2972,])
func_2980 = relay.Function([], output)
mod['func_2980'] = func_2980
mod = relay.transform.InferType()(mod)
mutated_mod['func_2980'] = func_2980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2980_call = mutated_mod.get_global_var('func_2980')
call_2981 = func_2980_call()
output = call_2981
func_2982 = relay.Function([], output)
mutated_mod['func_2982'] = func_2982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2980_call = mod.get_global_var('func_2980')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_2988 = relay.TupleGetItem(func_2980_call(), 1)
call_2989 = relay.TupleGetItem(func_2982_call(), 1)
func_2722_call = mod.get_global_var('func_2722')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_2992 = func_2722_call()
call_2993 = func_2722_call()
uop_2995 = relay.acosh(call_2988.astype('float32')) # shape=(5, 8, 6)
uop_2997 = relay.acosh(call_2989.astype('float32')) # shape=(5, 8, 6)
output = relay.Tuple([call_2992,uop_2995,])
output2 = relay.Tuple([call_2993,uop_2997,])
func_3003 = relay.Function([], output)
mod['func_3003'] = func_3003
mod = relay.transform.InferType()(mod)
output = func_3003()
func_3004 = relay.Function([], output)
mutated_mod['func_3004'] = func_3004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2249_call = mod.get_global_var('func_2249')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_3012 = relay.TupleGetItem(func_2249_call(), 0)
call_3013 = relay.TupleGetItem(func_2251_call(), 0)
output = relay.Tuple([call_3012,])
output2 = relay.Tuple([call_3013,])
func_3019 = relay.Function([], output)
mod['func_3019'] = func_3019
mod = relay.transform.InferType()(mod)
mutated_mod['func_3019'] = func_3019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3019_call = mutated_mod.get_global_var('func_3019')
call_3020 = func_3019_call()
output = call_3020
func_3021 = relay.Function([], output)
mutated_mod['func_3021'] = func_3021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_3087 = relay.TupleGetItem(func_2708_call(), 0)
call_3088 = relay.TupleGetItem(func_2710_call(), 0)
output = relay.Tuple([call_3087,])
output2 = relay.Tuple([call_3088,])
func_3093 = relay.Function([], output)
mod['func_3093'] = func_3093
mod = relay.transform.InferType()(mod)
mutated_mod['func_3093'] = func_3093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mutated_mod.get_global_var('func_3093')
call_3094 = func_3093_call()
output = call_3094
func_3095 = relay.Function([], output)
mutated_mod['func_3095'] = func_3095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2203_call = mod.get_global_var('func_2203')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_3102 = relay.TupleGetItem(func_2203_call(), 0)
call_3103 = relay.TupleGetItem(func_2205_call(), 0)
uop_3106 = relay.sinh(call_3102.astype('float64')) # shape=(5, 8, 6)
uop_3108 = relay.sinh(call_3103.astype('float64')) # shape=(5, 8, 6)
func_2203_call = mod.get_global_var('func_2203')
func_2205_call = mutated_mod.get_global_var('func_2205')
call_3110 = relay.TupleGetItem(func_2203_call(), 1)
call_3111 = relay.TupleGetItem(func_2205_call(), 1)
func_1349_call = mod.get_global_var('func_1349')
func_1351_call = mutated_mod.get_global_var('func_1351')
var_3114 = relay.var("var_3114", dtype = "int16", shape = (1155,))#candidate|3114|(1155,)|var|int16
call_3113 = func_1349_call(relay.reshape(var_3114.astype('int16'), [7, 11, 15]))
call_3115 = func_1349_call(relay.reshape(var_3114.astype('int16'), [7, 11, 15]))
const_3116 = relay.const([[[-8.990217,-1.567691,7.718053,-3.437133,8.234559,6.653172],[3.332499,-5.232917,-5.488772,-7.638453,-4.735988,6.021911],[-0.957024,2.552040,-3.075528,6.573038,3.324520,-7.621832],[-0.641455,9.061377,9.382181,2.308028,-1.712814,9.624545],[-4.839866,-1.786181,2.502088,1.036144,-0.093612,7.057941],[3.828363,-6.994336,-0.179218,-3.017573,1.266481,-7.254861],[-5.999466,2.772879,-2.748629,1.113869,-1.963832,2.200185],[0.631215,-7.733197,9.656014,-9.116104,-4.417157,-5.722612]],[[3.922641,7.904061,-6.564229,7.261466,8.750462,-0.580256],[8.286847,4.788222,6.751868,7.377484,7.699312,-5.007208],[5.971155,-0.612786,6.132597,-2.234928,2.481052,-6.570912],[-5.620111,-9.056562,-9.909908,4.968204,-3.796287,-1.704915],[7.935181,-9.345247,0.152865,-9.153998,9.405659,-2.910429],[2.922928,2.210607,-8.863784,-9.647622,2.808332,4.105678],[5.361664,-1.800716,3.407751,7.976697,-9.169550,5.149480],[2.818999,2.008918,-7.199669,3.430271,-8.188603,-0.502306]],[[-6.686228,5.009128,7.257224,-0.328679,1.438608,-7.676783],[7.741665,-3.089870,8.562808,0.758927,9.331600,7.791221],[-3.328817,8.996711,0.521086,5.024290,-2.347724,-0.581357],[2.491874,8.044867,6.204745,0.529238,2.289871,-9.982330],[-1.285165,4.895280,-2.698755,7.511007,-1.157686,-4.272313],[3.007347,0.926262,-6.402121,1.239597,-8.171304,6.144055],[1.119310,-1.796254,-8.408932,7.174282,-1.315638,-8.426236],[-3.916033,5.870202,-7.009595,-9.128847,-2.540329,9.226458]],[[2.249274,-0.095169,7.820214,5.745272,3.090993,-6.627622],[2.377257,-8.277172,-0.169394,-6.978542,-0.156459,4.679697],[1.114013,-6.863340,-9.251494,1.851227,4.969277,8.477093],[1.053145,5.620717,6.554977,-9.665408,6.927150,-1.709118],[2.922962,-4.199982,0.323673,-2.993063,-1.299900,-3.497648],[-2.369597,-3.340686,0.631838,2.780877,1.450035,4.829567],[-3.868418,2.887145,-9.237154,7.755701,-7.841176,-8.766807],[-6.909288,0.353145,9.728418,5.310782,8.807197,6.185590]],[[7.450577,9.901559,1.180758,0.112752,-4.448751,-4.036964],[2.691992,-3.267623,8.671616,9.046528,1.376742,-7.728779],[-6.068037,-5.466714,-4.576673,-7.869942,-6.596963,-0.460654],[8.656411,2.532143,-3.853612,-3.043927,-0.147493,4.136885],[3.941475,8.699610,4.196977,-1.661196,4.943813,3.483594],[-8.112329,9.151947,8.458368,3.519140,-8.834163,-6.224930],[-6.686266,-8.680604,3.623868,-1.474717,-9.478356,8.326393],[-3.794403,8.837566,8.026722,6.321213,-8.978872,-3.745180]]], dtype = "float32")#candidate|3116|(5, 8, 6)|const|float32
bop_3117 = relay.subtract(call_3102.astype('int16'), relay.reshape(const_3116.astype('int16'), relay.shape_of(call_3102))) # shape=(5, 8, 6)
bop_3120 = relay.subtract(call_3103.astype('int16'), relay.reshape(const_3116.astype('int16'), relay.shape_of(call_3103))) # shape=(5, 8, 6)
uop_3121 = relay.cos(uop_3106.astype('float64')) # shape=(5, 8, 6)
uop_3123 = relay.cos(uop_3108.astype('float64')) # shape=(5, 8, 6)
output = relay.Tuple([call_3110,call_3113,var_3114,bop_3117,uop_3121,])
output2 = relay.Tuple([call_3111,call_3115,var_3114,bop_3120,uop_3123,])
func_3143 = relay.Function([var_3114,], output)
mod['func_3143'] = func_3143
mod = relay.transform.InferType()(mod)
var_3144 = relay.var("var_3144", dtype = "int16", shape = (1155,))#candidate|3144|(1155,)|var|int16
output = func_3143(var_3144)
func_3145 = relay.Function([var_3144], output)
mutated_mod['func_3145'] = func_3145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_3147 = relay.TupleGetItem(func_2708_call(), 0)
call_3148 = relay.TupleGetItem(func_2710_call(), 0)
var_3151 = relay.var("var_3151", dtype = "int64", shape = (5, 8, 6))#candidate|3151|(5, 8, 6)|var|int64
bop_3152 = relay.less_equal(call_3147.astype('bool'), relay.reshape(var_3151.astype('bool'), relay.shape_of(call_3147))) # shape=(5, 8, 6)
bop_3155 = relay.less_equal(call_3148.astype('bool'), relay.reshape(var_3151.astype('bool'), relay.shape_of(call_3148))) # shape=(5, 8, 6)
bop_3156 = relay.greater(call_3147.astype('bool'), relay.reshape(var_3151.astype('bool'), relay.shape_of(call_3147))) # shape=(5, 8, 6)
bop_3159 = relay.greater(call_3148.astype('bool'), relay.reshape(var_3151.astype('bool'), relay.shape_of(call_3148))) # shape=(5, 8, 6)
func_537_call = mod.get_global_var('func_537')
func_540_call = mutated_mod.get_global_var('func_540')
const_3162 = relay.const([3,3,9,-4,-10,5,2,3,-5,4,4,-10,-6,-2,-2,2,8,1,-5,-10,6,7,9,-1,-8,-2,4,3,-10,-8,-1,10,-6,-9,-5,-8,-2,8,6,-6,4,-7,1,-2,-4,-3,-9,-6,-5,-5,-4,1,9,7,-1,-10,-2,-5,8,4,-6,-6,-2,-9,9,-7,-9,9,8,-5,-9,-3,-3,-4,6,2,-4,6,-3,3,10,-5,8,9,1,4,1,3,-6,5,-6,1,-5,8,-1,-2,-10,-2,-2,-4,-4,-5,4,9,4,1,10,1,-10,-3,-9,3,-1,-6,5,6,-8,6,-10,1,10,-5,5,-4,-3,5,-2,-1,-3,-8,9,-10,6,9,3,-9,4,-3,-9,4,-6,6,-9,-2,4,-3,-3,-7,8,-6,-8,4,-8,10,4,9,-5,9,-2,8,-1,6,-1,7,-1,-10,8,2,1,-3,-8,-8,-9,-6,-7,6,3,-6,-7,6,5,-8,2,-9,3,-1,-6,3,5,6,-4,-2,4,-3,-2,-2,9,-2,-1,-5,2,-5,-4,-2,8,10,10,-8,1,-7,2,-2,1,-1,4,7,3,-2,10,3,4,9,5,-10,1,-1,-9,4,-6,2,-3,4,3,-1,4,3,9,-3,9,1,3,3,-5,-3,1,1,-6,-8,-2,2,-6,3,-6,8,-2,-7,2,-10,-4,10,-10,-9,-5,-5,-9,3,3,9,-4,5,9,-4,2,8,7,-3,-8,-3,-1,-9,7,-4,-8,10,-9,10,8,8], dtype = "uint64")#candidate|3162|(288,)|const|uint64
call_3161 = relay.TupleGetItem(func_537_call(relay.reshape(const_3162.astype('uint64'), [6, 8, 6]), relay.reshape(bop_3156.astype('uint32'), [8, 30]), ), 4)
call_3163 = relay.TupleGetItem(func_540_call(relay.reshape(const_3162.astype('uint64'), [6, 8, 6]), relay.reshape(bop_3156.astype('uint32'), [8, 30]), ), 4)
output = relay.Tuple([bop_3152,bop_3156,call_3161,const_3162,])
output2 = relay.Tuple([bop_3155,bop_3159,call_3163,const_3162,])
func_3168 = relay.Function([var_3151,], output)
mod['func_3168'] = func_3168
mod = relay.transform.InferType()(mod)
mutated_mod['func_3168'] = func_3168
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3169 = relay.var("var_3169", dtype = "int64", shape = (5, 8, 6))#candidate|3169|(5, 8, 6)|var|int64
func_3168_call = mutated_mod.get_global_var('func_3168')
call_3170 = func_3168_call(var_3169)
output = call_3170
func_3171 = relay.Function([var_3169], output)
mutated_mod['func_3171'] = func_3171
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3184 = relay.var("var_3184", dtype = "int16", shape = (1, 6))#candidate|3184|(1, 6)|var|int16
const_3185 = relay.const([[6,9,-10,-2,5,-10],[9,-9,-3,-1,-2,5],[4,6,8,9,-9,-7],[9,7,-3,5,10,-6],[-2,-5,6,10,9,-4],[-7,4,1,-2,-3,4],[-7,-6,3,-9,-9,-1],[4,6,9,-4,-5,10],[-2,-8,-1,-8,3,5],[-6,-1,9,-1,-5,-8],[-9,1,-3,-1,3,-7],[-2,-5,9,-1,2,-1]], dtype = "int16")#candidate|3185|(12, 6)|const|int16
bop_3186 = relay.right_shift(var_3184.astype('int16'), const_3185.astype('int16')) # shape=(12, 6)
func_2668_call = mod.get_global_var('func_2668')
func_2670_call = mutated_mod.get_global_var('func_2670')
const_3203 = relay.const([1.124013,-3.172804,0.607892,-5.082386,0.648993,-3.714015,0.137095,0.043511,-4.293117,-8.584791,5.929146,7.014240,-0.696571,-5.290557,8.275939,-7.173766,5.723700,-5.133246,8.840638,-3.923069,-6.639491,5.975943,-2.103893,0.926151,-5.161433,-6.646626,8.414519,7.603670,-3.581270,1.046925,-7.649055,8.797298,-6.672940,-3.690829,-3.404226,9.307572,5.664366,-6.525136,2.150862,6.734557,-4.288207,-3.705011,7.648531,1.582961,7.508356,5.483000,-1.122368,1.283902,6.050239,-7.064181,9.416287,-4.673808,8.699899,-6.421627,-0.826463,-9.927641,2.663440,9.854870,-1.455184,-3.865188,8.707077,8.150633,-3.920558,5.556394,-7.443496,-3.003901,4.422431,2.201644,4.717266,1.643161,8.456038,-0.835327,-6.615974,8.982045,0.477427,2.840474,-8.403496,-3.177033,3.421806,-6.971831,-1.040168,1.588802,8.954274,-9.587514,-5.841287,1.312506,4.903447,-6.254595,7.286256,-8.496556,-5.713280,5.579149,7.867411,4.619684,4.604112,-4.311707,-4.035748,7.961784,-2.996002,0.163295,-0.587298,-9.429565,-7.552726,7.225327,4.140625,-5.660291,9.046976,-4.393107,-2.374128,-0.162422,8.424211,4.951426,-3.405533,1.416577,-0.087301,-5.681953,2.910987,-8.929697,2.530416,5.983277,5.934036,-2.399400,-7.999529,2.980277,8.228306,-9.011885,6.013067,-6.579198,2.745429,-8.244224,-5.264455,-1.813742,-3.369175,-8.044406,-2.304102,-9.821943,6.295204,8.506424,6.670390,-7.038777,-1.407725,1.582604,-9.844226,8.054892,0.601657,5.111226,-7.424251,-6.459046,-6.446292,2.605635,-3.711121,1.676865,-9.091688,2.257765,9.946985,-4.519864,4.199762,6.843115,-4.429880,3.588985,1.263655,8.318682,-8.129323,-6.564426,-7.584641,8.477555,7.590187,8.288785,3.125491,7.633741,-0.059279,-7.706571,7.431991,-7.045332,0.236666,0.027927,-3.770544,-1.417022,-0.425733,-8.635760,-2.500593,-4.298741,-6.450215,-7.655367,-0.344524,-5.607305,1.274456,-3.438489,5.830695,-5.694767,-0.721958,7.684086,0.312269,4.408475,-4.361804,-1.553807,-7.297582,-7.170052,-1.127074,-6.498942,-6.456076,-8.636493,-9.459769,-9.709857,0.761708,-6.667966,-4.173301,-6.230071,9.510461,-1.541148,4.865872,0.176733,5.550831,-7.637819,-5.811724,-3.074990,-0.187143,-2.331182,-6.633409,-8.942272,-3.059671,2.677623,-8.419858,-5.391013,-1.460535,6.236901,6.259898,6.581000,-5.690439,3.084959,-4.053289,3.729321,-2.632589,8.195813,-5.661913,-9.720257,-9.192152,5.089891,0.607705,3.300958,-3.018733,-6.536032,9.142463,-7.744653,3.994022,-5.044903,-8.862295,-1.781487,8.932016,9.876131,2.195774,-5.712133,1.989291,-4.129123,2.809265,-1.735208,-0.554339,-2.916036,-5.800504,0.845073,-9.061539,-3.155727,3.782218,1.914013], dtype = "float64")#candidate|3203|(264,)|const|float64
call_3202 = relay.TupleGetItem(func_2668_call(relay.reshape(const_3203.astype('float64'), [3, 88])), 2)
call_3204 = relay.TupleGetItem(func_2670_call(relay.reshape(const_3203.astype('float64'), [3, 88])), 2)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_3207 = relay.TupleGetItem(func_2708_call(), 0)
call_3208 = relay.TupleGetItem(func_2710_call(), 0)
output = relay.Tuple([bop_3186,call_3202,const_3203,call_3207,])
output2 = relay.Tuple([bop_3186,call_3204,const_3203,call_3208,])
func_3215 = relay.Function([var_3184,], output)
mod['func_3215'] = func_3215
mod = relay.transform.InferType()(mod)
var_3216 = relay.var("var_3216", dtype = "int16", shape = (1, 6))#candidate|3216|(1, 6)|var|int16
output = func_3215(var_3216)
func_3217 = relay.Function([var_3216], output)
mutated_mod['func_3217'] = func_3217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2980_call = mod.get_global_var('func_2980')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_3282 = relay.TupleGetItem(func_2980_call(), 1)
call_3283 = relay.TupleGetItem(func_2982_call(), 1)
func_1349_call = mod.get_global_var('func_1349')
func_1351_call = mutated_mod.get_global_var('func_1351')
const_3287 = relay.const([[3,9,-5,-8,10,9,4,7,-5,-4,-9,-6,-1,2,2,-1,9,1,-9,-10,-2,-7,9,8,-8,8,7,10,2,7,4,-1,6,-9,-10,-7,8,-9,-8,2,1,5,4,5,7,-2,-8,8,-4,10,-5,-6,-1,-1,-4,-6,5,-3,7,4,10,7,-10,5,-1,8,1,1,1,-2,-7,9,10,-10,2,10,-2,1,1,6,10,-8,-1,7,-10,-6,7,-10,9,-3,4,2,-10,9,-10,3,-10,3,9,3,8,10,-5,2,8,5,-9,-1,-10,10,5,10,-4,7,6,7,-9,9,5,10,-5,7,-1,-2,-1,3,-8,3,9,-7,2,-6,9,7,-7,9,-3,7,-7,7,5,-3,-2,-7,8,3,-8,-1,6,-2,6,-6,-10,-4,-6,-4,-10,4,-3,4,-4,1,10,10,-1,-1,-4,7,4,10,4,-10,2,8,-4,-9,3,-10,-4,-9,3,-4,-8,10,4,-1,7,-3,-5,6,-7,-8,5,-3,6,-3,-3,5,-8,5,-8,-10,-8,-2,6,-10,3,1,-6,6,-8,3,4,5,5,-3,6,6,6,7,-7,3,7,-7,-2,-6,-2,2,-7,9,8,-2,5,10,-9,-3,4,-6,4,3,-8,6,8,-5,6,-4,8,-1,-8,-6,8,3,9,-2,-3,-9,-5,-1,3,-5,-2,5,9,-2,-5,-3,-10,-4,6,-10,-4,-9,3,10,-8,7,6,-9,-8,-1,9,-5,-10,6,6,4,6,-6,5,-7,5,-2,-7,-7,2,-7,1,10,2,7,3,-7,5,7,3,3,-1,-8,-8,5,-2,2,6,-7,9,8,3,10,1,8,-5,-2,7,-5,7,-8,-4,-2,-4,1,-1,5,6,-2,7,3,-10,-8,-8,-4,5,-2,2,-1,5,10,-1,-1,-2,-6,-2,1,-5,-9,-4,-8,4,-9,-5,1,-2,-7,-7,2,3,10,-6,-7,2,5,-10,-6,-2,9,5,7,-2,-10,5,8,-9,-3,-9,-7,-8,-6,5,5,7,5,5,-9,8,-5,9,-1,2,-3,-6,-2,5,5,2,-5,5,10,4,6,-9,7,4,6,3,5,-2,-8,-6,4,4,-6,-1,-6,8,-9,2,-4,-3,2,-2,7,-5,10,7,-7,7,-7,-10,5,6,-4,9,7,-8,10,-6,-3,-4,-10,9,2,-1,-6,6,10,7,-2,-1,10,6,7,-9,-4,-5,5,-4,-10,10,9,-7,-7,2,-1,-6,10,3,7,10,-6,-6,9,-10,6,-4,5,1,-6,-1,5,7,1,-5,-1,-10,9,10,7,-6,-7,5,2,3,-10,-4,-4,-2,-3,3,-1,-3,-10,-8,-10,-9,5,-10,-1,-6,9,-8,2,-8,-7,9,6,8,-2,5,3,10,8,-6,4,2,1,-6,9,6,-7,-2,6,10,-8,-9,-9,-8,10,7,-5,9,8,9,-1,1,-1,-2,-7,-4,-9,6,5,-8,10,-10,4,-3,9,8,-8,-10,6,-7,-6,5,-7,7,7,-8,1,-3,9,5,-7,-10,4,5,1,10,-6,-5,10,-6,7,5,2,-3,2,-1,-1,-6,-10,-6,5,-10,-4,8,9,10,-8,6,-3,-4,-6,-7,-7,-3,-4,-10,6,-1,-9,2,-3,-7,-9,2,1,10,9,4,8,5,-8,-2,6,-3,-2,-6,1,-5,-4,6,-1,3,-4,7,4,-6,6,-7,1,1,8,8,9,-2,10,-8,-4,10,8,2,9,6,-5,-10,-4,-10,8,-4,1,10,3,2,-9,-5,-10,-10,-4,6,9,4,9,-10,1,-4,9,4,1,1,-8,6,-3,9,-3,7,-5,9,-6,-10,2,-1,-7,-5,3,-8,-2,1,3,3,6,-7,-10,4,-5,2,8,8,-8,-4,7,-2,-8,-4,-2,6,6,9,-2,-1,7,4,-7,-3,-5,6,2,-3,-10,3,4,9,5,-8,-1,3,2,-5,10,-4,6,-9,7,-1,8,8,-3,4,7,6,10,-7,-9,-1,-10,-5,4,-7,5,9,-1,-9,-6,-4,-4,-2,-10,-9,1,7,5,-10,-8,-2,-6,-8,10,3,10,-10,8,1,10,6,-1,3,-6,9,-3,-7,-3,-7,-2,-10,8,9,3,3,-1,5,1,-2,-2,-1,1,3,2,-9,-8,7,1,1,5,7,2,-9,-1,-2,-9,5,10,6,-8,6,-3,2,-8,-10,-9,-10,1,6,8,3,10,9,-8,1,1,-1,-10,-10,8,-1,7,9,-1,-9,4,8,2,3,-4,5,10,2,1,-8,2,-7,1,6,-3,-10,-7,-1,8,8,-6,9,-10,-6,3,-9,3,1,-4,-3,1,3,2,6,8,3,-10,-10,3,1,-1,-8,-8,8,7,-10,7,-8,-9,-8,-10,-3,-5,-1,10,-2,-2,-5,1,-4,-5,9,-2,-10,1,10,-10,4,-5,-2,6,-5,-6,1,-2,-8,-3,-8,5,-6,5,-10,8,-8,8,9,6,2,-6,1,-8,-6,7,-6,1,9,-9,-1,-4,3,1,-5,7,10,2,3,2,3,-5,-4,-10,-2,-3,-7,2,-10,-1,1,-4,-3,-2,-6,-8,-6,5,-9,4,-5,4,3,-1,10,-7,4,-10,8,5,-8,1,6,-5,-3,6,-5,2,-8,-10,9,-7,-1,-7,-1,-2,-5,-5,1,8,7,5,-8,-2,2,-5,1,1,1,2,-2,2,-9,2,7,5,-6,7,-7,-8,-1,7,7,6,10,1,-4,1,10,-5,-1,-2,-1,1,-6,-7,4,-8,4,10,-2,5,-5,-1,-8,-1,-5,8,-2,3,9,-2,6,3,-4,3,3,-3,-4,3,-9,5,-9,-3,3,6,6,5,10,1,1,9,3,2,6,-1,2,-2,-8,-2,1,-3,10,8,-3,3,4,-10,3,4,9,-6,-9,4,1,10,-7,-8,8,6,-6,7,-8,7,-1,1,-4,3,-5,-5,-4,-10,-6,8,6,-7,-1,-2,-3,2,-10,6,-2,-9,7,-3,9,-1,-2,10,3,10,-4,-2,-1,-3,-9,-5,1,6,-10]], dtype = "int16")#candidate|3287|(1, 1155)|const|int16
call_3286 = func_1349_call(relay.reshape(const_3287.astype('int16'), [7, 11, 15]))
call_3288 = func_1349_call(relay.reshape(const_3287.astype('int16'), [7, 11, 15]))
func_2722_call = mod.get_global_var('func_2722')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_3292 = func_2722_call()
call_3293 = func_2722_call()
output = relay.Tuple([call_3282,call_3286,const_3287,call_3292,])
output2 = relay.Tuple([call_3283,call_3288,const_3287,call_3293,])
func_3295 = relay.Function([], output)
mod['func_3295'] = func_3295
mod = relay.transform.InferType()(mod)
mutated_mod['func_3295'] = func_3295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3295_call = mutated_mod.get_global_var('func_3295')
call_3296 = func_3295_call()
output = call_3296
func_3297 = relay.Function([], output)
mutated_mod['func_3297'] = func_3297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3019_call = mod.get_global_var('func_3019')
func_3021_call = mutated_mod.get_global_var('func_3021')
call_3303 = relay.TupleGetItem(func_3019_call(), 0)
call_3304 = relay.TupleGetItem(func_3021_call(), 0)
func_707_call = mod.get_global_var('func_707')
func_712_call = mutated_mod.get_global_var('func_712')
var_3310 = relay.var("var_3310", dtype = "int8", shape = (540,))#candidate|3310|(540,)|var|int8
const_3311 = relay.const([-2.777643,-9.952881,5.177113,0.426800,-6.892534,-1.413719,-1.184663,0.092920,-6.783269,-5.466271,4.076695,5.483361,8.337609,-5.121017,4.387553,-6.352142,-0.770828,-1.473410,5.170121,-7.126064,0.260377,-2.986532,-9.649399,-9.282313,-6.029802,1.972591,-1.183096,-0.455225,7.761698,-2.924533,-2.901055,-5.063278,8.221984,-0.045475,-0.776830,8.977355,0.326241,-9.083031,3.639631,5.581102,4.376411,-0.025203,1.924564,5.657892,7.057157,0.055718,-1.452058,-5.584259,-1.922108,-4.960741,-7.673222,-6.315190,-4.933897,9.203992,0.601557,5.459339,-3.102262,-0.813004,-9.388928,-6.357914,-7.297858,0.589422,-5.972910,-1.946260,-2.186185,3.267432,-8.673091,-9.662816,-8.733149,0.369145,-0.133161,-4.536793,-7.207408,-4.037408,-6.456315,-5.905451,-6.838879,-6.282327,7.100996,5.096578,7.874194,-6.042101,-5.365267,-2.200308,5.888785,4.910726,-0.833668,-7.058287,-7.333338,9.247257,9.463539,2.101690,4.247212,-7.066073,1.431355,-6.296481,1.199070,-4.401916,-5.178011,-2.339733,-9.089794,1.087267,-0.301722,7.971999,8.058127,7.745828,-7.682055,-6.809199,-9.399949,3.552115,3.039702,0.251316,-3.882788,-1.494889,-5.514607,-0.812350,-9.823755,-8.513608,6.094844,-0.634911,-1.639995,-7.459062,-0.119166,1.388615,1.872280,-3.125389,-8.404085,7.456402,-4.541189,4.619969,4.484955,4.082369,-0.619858,-5.135593,-4.580495,-6.494658,-7.689711,2.685838,1.984377,-6.765116,8.558514,3.678174,-3.225934,5.496762,6.701813,0.004856,-8.948604,-5.483645,-5.101344,7.495625,5.035241,-6.239190,-9.878198,9.034953,-2.354879,-9.540895,-0.158902,0.072702,4.760459,8.094578,-8.511655,0.392082,-2.686313,1.491751,-7.278304,4.731644,-8.012157,2.856262,5.466956,-2.951866,-4.669296,-2.023313,4.564011,5.513725,-0.456408,1.575731,-8.676720,0.042251,-4.002717,9.601768,9.098096,4.474138,-4.450913,-6.316590,8.819145,8.114036,-8.130810,-6.771750,-9.362193,-4.611112,5.330738,9.558296,-2.562331,-9.023498,6.045021,7.251265,-7.332081,-5.844038,7.441746,-2.251354,1.253054,6.644709,0.528085,0.170402,7.777794,-7.944009,0.597885,-7.790090,5.623101,5.049448,6.717117,3.034270,7.611519,-0.482848,3.919445,3.836399,3.300654,-6.235767,-2.146287,-1.379786,2.149651,-7.380883,-8.405072,-5.872142,6.400413,-1.618244,-6.630500,-7.463806,3.230694,-9.778890,-8.310689,4.057903,-1.146018,-2.012824,-8.373776,2.124080,-7.993853,-2.833298,-4.833268,-5.427689,-1.665836,-8.382042,-5.914541,-6.003456,-8.141324,-8.869247,-1.321923,-9.768546,2.835851,-7.730905,6.990131,2.194013,6.062412,-0.818643,-2.829371,-8.401987,4.746979,4.111242,1.613873,0.074029,3.002317,-3.725037,8.428305,-9.118738], dtype = "float64")#candidate|3311|(264,)|const|float64
call_3309 = relay.TupleGetItem(func_707_call(relay.reshape(var_3310.astype('int8'), [3, 15, 12]), relay.reshape(var_3310.astype('int8'), [3, 15, 12]), relay.reshape(const_3311.astype('float64'), [264,]), ), 3)
call_3312 = relay.TupleGetItem(func_712_call(relay.reshape(var_3310.astype('int8'), [3, 15, 12]), relay.reshape(var_3310.astype('int8'), [3, 15, 12]), relay.reshape(const_3311.astype('float64'), [264,]), ), 3)
output = relay.Tuple([call_3303,call_3309,var_3310,const_3311,])
output2 = relay.Tuple([call_3304,call_3312,var_3310,const_3311,])
func_3318 = relay.Function([var_3310,], output)
mod['func_3318'] = func_3318
mod = relay.transform.InferType()(mod)
mutated_mod['func_3318'] = func_3318
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3319 = relay.var("var_3319", dtype = "int8", shape = (540,))#candidate|3319|(540,)|var|int8
func_3318_call = mutated_mod.get_global_var('func_3318')
call_3320 = func_3318_call(var_3319)
output = call_3320
func_3321 = relay.Function([var_3319], output)
mutated_mod['func_3321'] = func_3321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2980_call = mod.get_global_var('func_2980')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_3358 = relay.TupleGetItem(func_2980_call(), 3)
call_3359 = relay.TupleGetItem(func_2982_call(), 3)
output = call_3358
output2 = call_3359
func_3380 = relay.Function([], output)
mod['func_3380'] = func_3380
mod = relay.transform.InferType()(mod)
mutated_mod['func_3380'] = func_3380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3380_call = mutated_mod.get_global_var('func_3380')
call_3381 = func_3380_call()
output = call_3381
func_3382 = relay.Function([], output)
mutated_mod['func_3382'] = func_3382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3003_call = mod.get_global_var('func_3003')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_3385 = relay.TupleGetItem(func_3003_call(), 0)
call_3386 = relay.TupleGetItem(func_3004_call(), 0)
func_2484_call = mod.get_global_var('func_2484')
func_2486_call = mutated_mod.get_global_var('func_2486')
call_3409 = func_2484_call()
call_3410 = func_2484_call()
uop_3414 = relay.log(call_3409.astype('float64')) # shape=(5, 8, 6)
uop_3416 = relay.log(call_3410.astype('float64')) # shape=(5, 8, 6)
func_3215_call = mod.get_global_var('func_3215')
func_3217_call = mutated_mod.get_global_var('func_3217')
var_3418 = relay.var("var_3418", dtype = "int16", shape = (1, 6))#candidate|3418|(1, 6)|var|int16
call_3417 = relay.TupleGetItem(func_3215_call(relay.reshape(var_3418.astype('int16'), [1, 6])), 1)
call_3419 = relay.TupleGetItem(func_3217_call(relay.reshape(var_3418.astype('int16'), [1, 6])), 1)
output = relay.Tuple([call_3385,uop_3414,call_3417,var_3418,])
output2 = relay.Tuple([call_3386,uop_3416,call_3419,var_3418,])
func_3430 = relay.Function([var_3418,], output)
mod['func_3430'] = func_3430
mod = relay.transform.InferType()(mod)
var_3431 = relay.var("var_3431", dtype = "int16", shape = (1, 6))#candidate|3431|(1, 6)|var|int16
output = func_3430(var_3431)
func_3432 = relay.Function([var_3431], output)
mutated_mod['func_3432'] = func_3432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3380_call = mod.get_global_var('func_3380')
func_3382_call = mutated_mod.get_global_var('func_3382')
call_3486 = func_3380_call()
call_3487 = func_3380_call()
func_3019_call = mod.get_global_var('func_3019')
func_3021_call = mutated_mod.get_global_var('func_3021')
call_3503 = relay.TupleGetItem(func_3019_call(), 0)
call_3504 = relay.TupleGetItem(func_3021_call(), 0)
output = relay.Tuple([call_3486,call_3503,])
output2 = relay.Tuple([call_3487,call_3504,])
func_3515 = relay.Function([], output)
mod['func_3515'] = func_3515
mod = relay.transform.InferType()(mod)
output = func_3515()
func_3516 = relay.Function([], output)
mutated_mod['func_3516'] = func_3516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2980_call = mod.get_global_var('func_2980')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_3520 = relay.TupleGetItem(func_2980_call(), 2)
call_3521 = relay.TupleGetItem(func_2982_call(), 2)
func_3318_call = mod.get_global_var('func_3318')
func_3321_call = mutated_mod.get_global_var('func_3321')
call_3548 = relay.TupleGetItem(func_3318_call(relay.reshape(call_3520.astype('int8'), [540,])), 3)
call_3549 = relay.TupleGetItem(func_3321_call(relay.reshape(call_3520.astype('int8'), [540,])), 3)
func_3318_call = mod.get_global_var('func_3318')
func_3321_call = mutated_mod.get_global_var('func_3321')
call_3561 = relay.TupleGetItem(func_3318_call(relay.reshape(call_3520.astype('int8'), [540,])), 1)
call_3562 = relay.TupleGetItem(func_3321_call(relay.reshape(call_3520.astype('int8'), [540,])), 1)
output = relay.Tuple([call_3520,call_3548,call_3561,])
output2 = relay.Tuple([call_3521,call_3549,call_3562,])
func_3563 = relay.Function([], output)
mod['func_3563'] = func_3563
mod = relay.transform.InferType()(mod)
output = func_3563()
func_3564 = relay.Function([], output)
mutated_mod['func_3564'] = func_3564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_3621 = relay.TupleGetItem(func_2708_call(), 0)
call_3622 = relay.TupleGetItem(func_2710_call(), 0)
output = relay.Tuple([call_3621,])
output2 = relay.Tuple([call_3622,])
func_3631 = relay.Function([], output)
mod['func_3631'] = func_3631
mod = relay.transform.InferType()(mod)
output = func_3631()
func_3632 = relay.Function([], output)
mutated_mod['func_3632'] = func_3632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2937_call = mod.get_global_var('func_2937')
func_2938_call = mutated_mod.get_global_var('func_2938')
call_3647 = func_2937_call()
call_3648 = func_2937_call()
var_3653 = relay.var("var_3653", dtype = "float32", shape = (5, 8, 6))#candidate|3653|(5, 8, 6)|var|float32
bop_3654 = relay.minimum(call_3647.astype('int8'), relay.reshape(var_3653.astype('int8'), relay.shape_of(call_3647))) # shape=(5, 8, 6)
bop_3657 = relay.minimum(call_3648.astype('int8'), relay.reshape(var_3653.astype('int8'), relay.shape_of(call_3648))) # shape=(5, 8, 6)
output = relay.Tuple([bop_3654,])
output2 = relay.Tuple([bop_3657,])
func_3658 = relay.Function([var_3653,], output)
mod['func_3658'] = func_3658
mod = relay.transform.InferType()(mod)
var_3659 = relay.var("var_3659", dtype = "float32", shape = (5, 8, 6))#candidate|3659|(5, 8, 6)|var|float32
output = func_3658(var_3659)
func_3660 = relay.Function([var_3659], output)
mutated_mod['func_3660'] = func_3660
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3693 = relay.var("var_3693", dtype = "float32", shape = (14, 2, 5))#candidate|3693|(14, 2, 5)|var|float32
uop_3694 = relay.sinh(var_3693.astype('float32')) # shape=(14, 2, 5)
uop_3705 = relay.asinh(uop_3694.astype('float64')) # shape=(14, 2, 5)
bop_3710 = relay.add(uop_3705.astype('uint64'), relay.reshape(uop_3694.astype('uint64'), relay.shape_of(uop_3705))) # shape=(14, 2, 5)
func_2484_call = mod.get_global_var('func_2484')
func_2486_call = mutated_mod.get_global_var('func_2486')
call_3714 = func_2484_call()
call_3715 = func_2484_call()
var_3716 = relay.var("var_3716", dtype = "float32", shape = (5, 8, 6))#candidate|3716|(5, 8, 6)|var|float32
bop_3717 = relay.not_equal(call_3714.astype('bool'), relay.reshape(var_3716.astype('bool'), relay.shape_of(call_3714))) # shape=(5, 8, 6)
bop_3720 = relay.not_equal(call_3715.astype('bool'), relay.reshape(var_3716.astype('bool'), relay.shape_of(call_3715))) # shape=(5, 8, 6)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
var_3737 = relay.var("var_3737", dtype = "int32", shape = (560,))#candidate|3737|(560,)|var|int32
call_3736 = relay.TupleGetItem(func_2510_call(relay.reshape(var_3737.astype('int32'), [560,])), 1)
call_3738 = relay.TupleGetItem(func_2512_call(relay.reshape(var_3737.astype('int32'), [560,])), 1)
func_1684_call = mod.get_global_var('func_1684')
func_1686_call = mutated_mod.get_global_var('func_1686')
const_3745 = relay.const([9.603899,7.967437,-2.134113,6.985333,2.626604,5.952812,7.578723,-5.904147,7.503213,1.424510,-0.065048,-1.586289,-1.886744,5.910131,0.714457,-5.643893,8.135562,3.997815,1.545732,6.033598,-8.605720,-0.092417,1.431254,7.488473,8.958819,4.207837,-7.963498,8.557459,-7.892552,5.934694,7.740463,-5.762577,0.407492,-7.516366,-2.270326,-7.194715,5.906699,7.309323,1.412321,3.694584,4.114822,-5.214745,-2.544595,7.759109,-6.936620,7.724297,-2.332544,-9.848895], dtype = "float32")#candidate|3745|(48,)|const|float32
call_3744 = func_1684_call(relay.reshape(const_3745.astype('float32'), [12, 1, 4]))
call_3746 = func_1684_call(relay.reshape(const_3745.astype('float32'), [12, 1, 4]))
output = relay.Tuple([bop_3710,bop_3717,call_3736,var_3737,call_3744,const_3745,])
output2 = relay.Tuple([bop_3710,bop_3720,call_3738,var_3737,call_3746,const_3745,])
func_3759 = relay.Function([var_3693,var_3716,var_3737,], output)
mod['func_3759'] = func_3759
mod = relay.transform.InferType()(mod)
mutated_mod['func_3759'] = func_3759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3759_call = mutated_mod.get_global_var('func_3759')
var_3761 = relay.var("var_3761", dtype = "float32", shape = (14, 2, 5))#candidate|3761|(14, 2, 5)|var|float32
var_3762 = relay.var("var_3762", dtype = "float32", shape = (5, 8, 6))#candidate|3762|(5, 8, 6)|var|float32
var_3763 = relay.var("var_3763", dtype = "int32", shape = (560,))#candidate|3763|(560,)|var|int32
call_3760 = func_3759_call(var_3761,var_3762,var_3763,)
output = call_3760
func_3764 = relay.Function([var_3761,var_3762,var_3763,], output)
mutated_mod['func_3764'] = func_3764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3563_call = mod.get_global_var('func_3563')
func_3564_call = mutated_mod.get_global_var('func_3564')
call_3772 = relay.TupleGetItem(func_3563_call(), 1)
call_3773 = relay.TupleGetItem(func_3564_call(), 1)
func_3631_call = mod.get_global_var('func_3631')
func_3632_call = mutated_mod.get_global_var('func_3632')
call_3778 = relay.TupleGetItem(func_3631_call(), 0)
call_3779 = relay.TupleGetItem(func_3632_call(), 0)
func_2722_call = mod.get_global_var('func_2722')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_3798 = func_2722_call()
call_3799 = func_2722_call()
output = relay.Tuple([call_3772,call_3778,call_3798,])
output2 = relay.Tuple([call_3773,call_3779,call_3799,])
func_3838 = relay.Function([], output)
mod['func_3838'] = func_3838
mod = relay.transform.InferType()(mod)
output = func_3838()
func_3839 = relay.Function([], output)
mutated_mod['func_3839'] = func_3839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3095_call = mutated_mod.get_global_var('func_3095')
call_3923 = relay.TupleGetItem(func_3093_call(), 0)
call_3924 = relay.TupleGetItem(func_3095_call(), 0)
uop_3931 = relay.atanh(call_3923.astype('float32')) # shape=(5, 8, 6)
uop_3933 = relay.atanh(call_3924.astype('float32')) # shape=(5, 8, 6)
func_3295_call = mod.get_global_var('func_3295')
func_3297_call = mutated_mod.get_global_var('func_3297')
call_3936 = relay.TupleGetItem(func_3295_call(), 0)
call_3937 = relay.TupleGetItem(func_3297_call(), 0)
func_3003_call = mod.get_global_var('func_3003')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_3942 = relay.TupleGetItem(func_3003_call(), 1)
call_3943 = relay.TupleGetItem(func_3004_call(), 1)
func_3295_call = mod.get_global_var('func_3295')
func_3297_call = mutated_mod.get_global_var('func_3297')
call_3977 = relay.TupleGetItem(func_3295_call(), 1)
call_3978 = relay.TupleGetItem(func_3297_call(), 1)
output = relay.Tuple([uop_3931,call_3936,call_3942,call_3977,])
output2 = relay.Tuple([uop_3933,call_3937,call_3943,call_3978,])
func_3982 = relay.Function([], output)
mod['func_3982'] = func_3982
mod = relay.transform.InferType()(mod)
output = func_3982()
func_3983 = relay.Function([], output)
mutated_mod['func_3983'] = func_3983
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4011 = relay.var("var_4011", dtype = "int64", shape = (3, 5))#candidate|4011|(3, 5)|var|int64
var_4012 = relay.var("var_4012", dtype = "int64", shape = (3, 5))#candidate|4012|(3, 5)|var|int64
bop_4013 = relay.equal(var_4011.astype('bool'), relay.reshape(var_4012.astype('bool'), relay.shape_of(var_4011))) # shape=(3, 5)
output = relay.Tuple([bop_4013,])
output2 = relay.Tuple([bop_4013,])
func_4024 = relay.Function([var_4011,var_4012,], output)
mod['func_4024'] = func_4024
mod = relay.transform.InferType()(mod)
mutated_mod['func_4024'] = func_4024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4024_call = mutated_mod.get_global_var('func_4024')
var_4026 = relay.var("var_4026", dtype = "int64", shape = (3, 5))#candidate|4026|(3, 5)|var|int64
var_4027 = relay.var("var_4027", dtype = "int64", shape = (3, 5))#candidate|4027|(3, 5)|var|int64
call_4025 = func_4024_call(var_4026,var_4027,)
output = call_4025
func_4028 = relay.Function([var_4026,var_4027,], output)
mutated_mod['func_4028'] = func_4028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3838_call = mod.get_global_var('func_3838')
func_3839_call = mutated_mod.get_global_var('func_3839')
call_4056 = relay.TupleGetItem(func_3838_call(), 1)
call_4057 = relay.TupleGetItem(func_3839_call(), 1)
func_3982_call = mod.get_global_var('func_3982')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_4067 = relay.TupleGetItem(func_3982_call(), 3)
call_4068 = relay.TupleGetItem(func_3983_call(), 3)
func_274_call = mod.get_global_var('func_274')
func_278_call = mutated_mod.get_global_var('func_278')
var_4074 = relay.var("var_4074", dtype = "float64", shape = (264,))#candidate|4074|(264,)|var|float64
call_4073 = relay.TupleGetItem(func_274_call(relay.reshape(var_4074.astype('float64'), [8, 3, 11]), relay.reshape(var_4074.astype('float64'), [8, 3, 11]), ), 0)
call_4075 = relay.TupleGetItem(func_278_call(relay.reshape(var_4074.astype('float64'), [8, 3, 11]), relay.reshape(var_4074.astype('float64'), [8, 3, 11]), ), 0)
uop_4091 = relay.atanh(call_4067.astype('float64')) # shape=(7, 11, 15)
uop_4093 = relay.atanh(call_4068.astype('float64')) # shape=(7, 11, 15)
bop_4104 = relay.logical_and(uop_4091.astype('bool'), relay.reshape(call_4067.astype('bool'), relay.shape_of(uop_4091))) # shape=(7, 11, 15)
bop_4107 = relay.logical_and(uop_4093.astype('bool'), relay.reshape(call_4068.astype('bool'), relay.shape_of(uop_4093))) # shape=(7, 11, 15)
output = relay.Tuple([call_4056,call_4073,var_4074,bop_4104,])
output2 = relay.Tuple([call_4057,call_4075,var_4074,bop_4107,])
func_4114 = relay.Function([var_4074,], output)
mod['func_4114'] = func_4114
mod = relay.transform.InferType()(mod)
var_4115 = relay.var("var_4115", dtype = "float64", shape = (264,))#candidate|4115|(264,)|var|float64
output = func_4114(var_4115)
func_4116 = relay.Function([var_4115], output)
mutated_mod['func_4116'] = func_4116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2980_call = mod.get_global_var('func_2980')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_4127 = relay.TupleGetItem(func_2980_call(), 2)
call_4128 = relay.TupleGetItem(func_2982_call(), 2)
output = relay.Tuple([call_4127,])
output2 = relay.Tuple([call_4128,])
func_4131 = relay.Function([], output)
mod['func_4131'] = func_4131
mod = relay.transform.InferType()(mod)
mutated_mod['func_4131'] = func_4131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4131_call = mutated_mod.get_global_var('func_4131')
call_4132 = func_4131_call()
output = call_4132
func_4133 = relay.Function([], output)
mutated_mod['func_4133'] = func_4133
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4134 = relay.var("var_4134", dtype = "float64", shape = (13, 2, 14))#candidate|4134|(13, 2, 14)|var|float64
uop_4135 = relay.acosh(var_4134.astype('float64')) # shape=(13, 2, 14)
uop_4140 = relay.rsqrt(var_4134.astype('float32')) # shape=(13, 2, 14)
bop_4143 = relay.less(uop_4135.astype('bool'), relay.reshape(uop_4140.astype('bool'), relay.shape_of(uop_4135))) # shape=(13, 2, 14)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
const_4148 = relay.const([-9,2,8,-5,-9,-2,2,-10,8,-9,9,-10,9,-10,8,-2,-10,8,-6,-8,-9,-10,2,9,9,-6,-2,-7,-4,4,8,8,10,-6,8,-3,-8,-7,5,10,-6,2,-3,-10,6,9,-10,2,5,-6,3,10,-4,-2,5,-3,-8,-2,4,10,-6,3,-7,7,2,5,-5,-7,-5,10,-10,-2,7,-9,-6,10,9,-1,6,-8,-3,6,-1,-9,-3,-6,-9,1,-2,9,-1,-3,10,-7,-2,-7,-10,-3,5,5,10,-8,10,6,-4,-2,-4,5,7,-2,-9,-5,9,7,-1,-1,4,1,1,-5,-2,1,-2,-2,10,-9,1,7,-4,-6,-9,-8,-8,-6,-8,-5,-10,8,5,-10,-2,-6,-6,6,9,7,-1,-8,3,2,-7,-4,5,8,10,7,-10,6,5,-6,-6,-10,-7,7,-6,-1,-6,-9,-7,-3,6,8,2,-10,7,-1,8,-1,-4,4,9,-1,2,-6,-9,-5,-8,9,-8,6,4,10,1,-6,2,-2,-7,6,5,6,2,8,-6,-9,-5,-4,2,-2,7,-7,8,-2,6,-2,-1,-6,-2,2,-9,-4,5,5,2,-2,5,-10,3,-8,9,2,10,2,10,2,6,-6,-6,2,-10,10,6,-8,3,9,-8,3,-9,-2,10,10,3,-1,-9,-8,-7,-2,-10,3,-8,5,-5,4,5,3,-1,5,1,3,-7,8,-1,7,3,-3,4,7,-8,3,6,-1,1,10,-10,-3,-6,-8,-1,6,-9,-7,9,-4,2,10,-5,4,5,-9,9,-1,-3,1,8,-10,-10,-9,8,6,3,9,-9,6,-6,-10,-9,1,-1,-5,-4,5,-9,-3,-10,-8,-8,-10,9,2,3,2,4,3,6,6,3,3,8,9,-6,-10,4,-1,10,-8,-5,6,-4,5,-6,-1,4,1,10,1,-8,2,3,-3,-7,7,-1,-1,1,-4,-7,-8,-9,-3,10,6,-5,8,-2,-2,-3,-10,1,1,7,8,2,-5,4,9,1,2,4,3,-2,-6,5,3,-7,-5,10,8,-1,3,2,1,-9,-9,-2,10,9,-3,2,-8,10,3,1,4,-8,-1,-8,4,-5,10,-5,-3,6,9,-2,7,2,-4,5,7,4,4,10,9,8,3,2,10,-4,8,-5,9,-8,4,-10,9,-9,-6,-2,4,-8,5,-7,-10,1,-6,-6,8,8,9,3,10,2,2,-2,-4,-7,10,2,-2,9,-3,-5,-9,3,8,6,7,-5,10,9,-10,2,8,-2,-1,10,-6,-5,7,2,1,7,-6,10,2,1,-4,1,-1,4,-4,5,1,-6,5,6,-8,7,5,-1,7,-8,8,-4,-4,10,5,9,-5,-4,5,-10,3,8,-5,5,-2,2,4,-9,-4,-6,6,5,-2,-4,9,1,-1,9,7,-7,-7,-9,7,-7,8,-2,-1,-8,7,2,-5,-7,-2,-2,10,-8,-10,-8,-6], dtype = "int32")#candidate|4148|(560,)|const|int32
call_4147 = relay.TupleGetItem(func_2510_call(relay.reshape(const_4148.astype('int32'), [560,])), 2)
call_4149 = relay.TupleGetItem(func_2512_call(relay.reshape(const_4148.astype('int32'), [560,])), 2)
output = relay.Tuple([bop_4143,call_4147,const_4148,])
output2 = relay.Tuple([bop_4143,call_4149,const_4148,])
func_4164 = relay.Function([var_4134,], output)
mod['func_4164'] = func_4164
mod = relay.transform.InferType()(mod)
mutated_mod['func_4164'] = func_4164
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4165 = relay.var("var_4165", dtype = "float64", shape = (13, 2, 14))#candidate|4165|(13, 2, 14)|var|float64
func_4164_call = mutated_mod.get_global_var('func_4164')
call_4166 = func_4164_call(var_4165)
output = call_4166
func_4167 = relay.Function([var_4165], output)
mutated_mod['func_4167'] = func_4167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3093_call = mod.get_global_var('func_3093')
func_3095_call = mutated_mod.get_global_var('func_3095')
call_4264 = relay.TupleGetItem(func_3093_call(), 0)
call_4265 = relay.TupleGetItem(func_3095_call(), 0)
func_2484_call = mod.get_global_var('func_2484')
func_2486_call = mutated_mod.get_global_var('func_2486')
call_4270 = func_2484_call()
call_4271 = func_2484_call()
func_1288_call = mod.get_global_var('func_1288')
func_1292_call = mutated_mod.get_global_var('func_1292')
var_4286 = relay.var("var_4286", dtype = "int8", shape = (540,))#candidate|4286|(540,)|var|int8
var_4287 = relay.var("var_4287", dtype = "float64", shape = (264,))#candidate|4287|(264,)|var|float64
call_4285 = relay.TupleGetItem(func_1288_call(relay.reshape(var_4286.astype('int8'), [540,]), relay.reshape(var_4287.astype('float64'), [264,]), ), 1)
call_4288 = relay.TupleGetItem(func_1292_call(relay.reshape(var_4286.astype('int8'), [540,]), relay.reshape(var_4287.astype('float64'), [264,]), ), 1)
var_4289 = relay.var("var_4289", dtype = "float64", shape = (8, 3, 11))#candidate|4289|(8, 3, 11)|var|float64
bop_4290 = relay.logical_xor(call_4285.astype('uint8'), relay.reshape(var_4289.astype('uint8'), relay.shape_of(call_4285))) # shape=(8, 3, 11)
bop_4293 = relay.logical_xor(call_4288.astype('uint8'), relay.reshape(var_4289.astype('uint8'), relay.shape_of(call_4288))) # shape=(8, 3, 11)
func_2012_call = mod.get_global_var('func_2012')
func_2015_call = mutated_mod.get_global_var('func_2015')
const_4311 = relay.const([2,-5,4,1,1,3,3,7,-10,-6,-3,-10,2,3,5,5,-10,10,-8,3,4,-3,1,-8,-3,9,-9,8,7,1,-9,-9,-7,-10,10,4,-1,-3,-7,7,-5,-7,5,6,-7,6,-1,5,-6,5,-10,1,8,-6,-5,6,-9,-4,8,-10,7,1,3,-8,-10,-6,-1,-4,1,3,-4,5,2,2,9,5,8,-4,1,-9,-2,-1,-3,2,-6,-1,-2,6,8,-3,7,-3,-3,5,10,5,8,6,3,-5,-1,-9,-3,-8,-2,7,1,4], dtype = "int16")#candidate|4311|(108,)|const|int16
call_4310 = relay.TupleGetItem(func_2012_call(relay.reshape(const_4311.astype('int16'), [9, 4, 3]), relay.reshape(const_4311.astype('int16'), [9, 4, 3]), ), 0)
call_4312 = relay.TupleGetItem(func_2015_call(relay.reshape(const_4311.astype('int16'), [9, 4, 3]), relay.reshape(const_4311.astype('int16'), [9, 4, 3]), ), 0)
func_2617_call = mod.get_global_var('func_2617')
func_2620_call = mutated_mod.get_global_var('func_2620')
const_4314 = relay.const([8.137190,8.772689,-2.747334,6.661537,9.816117,-2.112499,9.179560,9.099025,-0.463955,6.804539,-3.099402,-0.687029,-7.024136,-6.025226,-1.922420,8.634777,6.461911,5.051551,7.085108,-9.812227,4.419076,4.370886,-1.031225,1.492082,5.554258,-4.832825,1.916952,-1.295706,-7.775303,1.396750,7.870616,2.854758,6.271852,9.900039,4.406762,4.047460,-2.524343,2.930751,-8.675138,4.492448,-1.600674,5.640577,6.068088,1.541528,9.224592,-4.122922,-3.339666,5.759351,-1.589957,-1.322383,-1.611536,6.472949,-8.149777,-3.043575,2.429818,-5.785875,1.287434,0.817922,-2.897676,-9.023806,4.005862,-9.050747,-6.890592,-0.060696,-1.039286,-9.869844,-5.131878,-6.279923,5.677184,1.229182,-1.094261,-0.782830,-3.933489,-9.103393,-9.346124,-0.963410,6.900877,6.574482,-3.394740,0.638931,-7.720776,-3.740575,1.474620,3.061911,4.714938,2.409453,6.604416,1.122582,2.503818,-4.666230,-8.611193,2.416593,0.842367,-9.191400,-2.570032,8.543130,3.442501,-4.621590,-9.959718,9.021227,-4.826779,0.596747,-7.523987,3.534030,4.873245,-5.304048,-9.254949,7.985842,-4.863651,-4.324243,9.638568,-9.450082,7.102160,1.784209,-3.922703,8.144435,3.422403,-8.429766,1.842523,8.638225,6.182533,-9.954478,-5.692651,-9.826548,7.095830,6.091822,-3.080182,-7.698391,-0.507232,4.769137,-3.322782,-2.361633,7.494094,-4.913789,-4.036374,1.749913,1.622493,-8.863392,-5.620839,-5.100682,9.852221,-9.859267,6.386376,3.817555,7.434581,3.192331,6.099615,9.705856,-4.362923,0.503159,-1.349859,1.140286,-1.512074,9.305890,-8.400242,6.765784,3.153294,2.060199,-7.163353,4.906674,5.859484,9.844550,-1.124942,6.433362,-8.383432,6.943662,-4.836169,-1.186143,-0.793793,9.387206,-3.210547,-8.037670,-3.931592,-8.447729,-6.351017,-1.363961,-8.181955,-4.701407,7.525358,-3.400555,-2.718087,-7.677746,-6.019178,-9.723610,-3.533870,0.697980,-9.231993,-5.067381,2.323023,7.645384,-5.817093,0.150710,2.404017,2.447707,9.053114,2.467791,-1.845556,-3.995159,-4.677044,7.212853,-5.046750,5.387719,5.466510,-7.165948,4.642471,-1.464251,0.651490,-8.353612,-5.254324,4.023892,9.248682,4.313442,-6.164826,-2.338631,-3.352123,9.387378,-4.558894,3.841019,3.155450,-4.794597,0.260567,-6.713990,-6.104217,-1.791297,0.345739,9.442320,-6.946583,-0.479520,-1.311371,9.177582,-1.435072,-8.110928,-6.972065,-3.144925,3.278808,-4.946830,-1.225724,2.444654,5.875554,1.701446,-9.023540,-3.342779,4.069614,7.923277,8.612095,1.805320,-8.222737,5.141554,4.598658,-2.054026,-9.273112,-2.130208,6.565016,-3.437195,7.461681,1.300616,-9.598935,-8.380159,-0.484114,1.343818,-0.961745,-9.816166,-0.001740,4.897862,0.075489,-3.295958,-4.850927,-8.816182,5.535411,4.945314,-4.318994,-0.847502,-3.144505,0.249266,-6.856250,-2.377190,2.063419,8.270237,-2.364149,0.162225,-6.830905,-9.428718,-1.682223,1.703379,7.405602,-4.961855,2.078570,-6.194881,6.658421,3.871782,-1.874921,1.910085,-7.860177,-5.464922,3.406174,-2.689838,2.408479,4.916904,-0.385281,0.791757,0.412313,7.669560,-2.978877,-6.292944,1.025345,-7.222944,4.996824,6.710756,-2.125935,4.424655,-4.545132,-1.945783,-5.557528,9.986667,-8.814017,-5.847540,9.958870,-0.384124,3.857475,9.181218,-6.631040,-7.498405,2.232991,7.884230,3.604600,-5.183546,7.901919,-3.108438,-2.773084,-5.271821,-0.132292,-1.708070,-6.851855,-5.043251,1.008175,3.987238,8.192244,2.013913,8.047787,-6.037984,5.576638,-8.950484,7.747473,-3.923662,2.190467,-4.097881,1.089441,0.581690,-2.970469,1.412604,1.554599,8.544673,7.985542,-9.745143,-0.854978,0.334420,0.581638,-5.126207,-8.993594,-0.132964,4.070017,-0.946554,2.319546,-8.334386,3.368049,5.236535,-0.138776,8.883990,6.103453,6.876752,-4.878854,-1.437885,-7.029571,8.634054,2.856861,-3.279906,-2.745485,-0.112991,-5.679724,0.292524,-3.115238,5.750679,-5.743583,-2.393579,-6.963458,1.170454,6.161213,-8.897392,-7.023267,-1.581397,6.301208,-2.583845,6.624327,4.870427,5.348933,4.080384,5.478778,0.351668,1.932298,5.859747,8.150996,0.764690,-2.570796,-0.582630,4.489535,0.737555,-9.617612,-6.897370,-9.392039,1.754006,0.490609,5.875389,9.508034,-1.135041,3.600867,-7.327419,-6.656635,5.213018,0.754109,7.283249,-0.495167,3.634987,-5.818164,7.908728,9.989742,-8.391541,9.981317,5.790256,-2.784154,-1.120456,-0.634198,-9.129294,-3.892943,9.239810,-1.290100,-6.541824,5.432101,9.095066,8.768879,-3.403764,6.737796,4.760430,1.878706,-4.489956,-3.138802,8.432650,3.390933,7.487673,2.896398,-7.475157,0.732470,-4.773726,-1.644097,-1.594393,-3.416954,4.791676,-2.765524,4.141249,4.401252,2.333983,-0.833534,-1.188456,5.792714,2.028795,0.188255,-0.799000,-1.269492,8.552403,-6.576393,-0.369153,9.095525,-6.924659,5.585882,9.741400,6.830424,-2.815941,0.414130,-0.939228,9.356068,3.768835,1.267791,0.659035,-0.214851,-6.567301,7.601976,-7.226916,-1.222301,-2.626626,-3.330977,0.196563,-4.841291,1.271782,-1.005921,-1.761743,4.093574,-7.501889,2.585883,-8.585250,4.533147,-1.125391,0.657854,7.801467,-1.039645,2.257401,5.315584,-9.408105,2.367218,7.768288,2.647487,6.416436,7.126885,8.269190,4.023278,-9.829071,6.101648,4.758401,6.741600,-4.431003,-4.523062,-5.489843,-4.764800,-2.771905,-7.419440,-9.894962,6.823881,-9.179451,4.836158,-4.767223,5.339152,4.810625,4.165963,-4.021662,0.931852,-5.292762,-5.620594,6.451629,-7.468874,-2.825745,0.265876,-7.537478,-0.495385,0.820771,9.416136,6.423846,2.235438,5.629583,1.263873,0.359750,-2.492316,0.965368,5.573609,-5.529611,-4.244580,-7.562715,1.769648,-6.216406,-6.693097,7.922636,4.446929,-3.766092,-1.665976,-9.109629,0.225539,-9.940003,3.628594,8.357793,3.711388,-2.448489,-2.914893,4.500049,-9.474375,-2.192293,-7.048774,-2.683397,-6.952976,-3.545613,-5.276497,-3.367089,-1.076929,5.298826,-8.312176,-5.033741,-4.111961,7.937937,-2.876768,-3.899717,5.684708,2.144358,1.668668,8.249379,-1.544611,-6.451801,-9.592223,9.208047,9.833714,4.688092,0.646403,2.731670,-9.524436,-7.676890,-6.121801,8.079208,0.076525,3.120603,-0.004850,-8.620767,-3.073205,2.705618,-2.383247,8.750067,-7.422837,3.181033,4.249390,5.102679,-6.279381,-1.365109,2.630006,-0.397327,-3.215315,7.365095,-4.373448,2.626710,-9.309284,-9.167264,3.885105,-0.433332,-6.304916,0.221467,2.712506,8.983443,4.709024,-8.170031,-1.460764,8.763016,-6.978893,8.491531,6.786121,5.379474,-2.318594,-2.431522,4.403913,5.938121,-3.300140,4.393158,3.464148,0.995325,-4.375761,9.157035,-1.551416,2.381490,5.299635,-7.767905,-1.631600,-1.763785,8.820611,-6.434157,-2.386883,-9.696208,3.373186,-4.762715,-5.681000,2.765042,9.953749,7.771285,6.268974,-6.791502,-6.256223,6.039226,-1.130291,5.266348,-6.116251,-4.466006,8.076842,-2.071112,5.582633,1.562577,-6.148945,-0.923339,-4.669559,-9.442155,8.297658,-2.412767,7.587321,-6.412300,-7.819789,0.275484,2.870364,4.803988,-1.834647,8.634577,-4.158552,6.278038,8.769941,-7.232311,-8.358158,-9.800445,5.438080,1.605578,-7.397054,-8.072773,2.334073,-6.721582,8.913612,9.407993,2.288980,4.525408,0.831935,-5.804296,9.561755,-0.061425,2.437569,3.542052,-4.858822,0.103326,-9.545984,3.153359,7.947724,-8.010319,0.368558,-9.980485,7.988693,-0.430848,5.459170,3.553476,5.978299,-5.080049,-3.421043,6.910538,-9.056804,-9.314161,-0.267604,-4.938902,5.654021,-9.955830,-8.473970,5.799222,7.942489,-0.634606,-2.053667,9.016273,-1.980678,5.391247,3.951642,2.198448,3.752709,-2.246457,6.428718,-5.236868,2.673364,2.609866,7.332034,2.373656,-5.433870,8.467404,-3.549954,-0.600050,-8.857863,7.513201,-9.493618,4.711393,-3.631166,2.350172,-8.598149,-5.202035,-6.798362,6.659033,-7.697516,-1.846719,9.543508,-8.209215,-4.610420,-6.831010,-6.407288,-0.019832,-7.115713,-4.802089,1.667755,-2.819354,9.213970,-9.766529,-5.482831,-2.379345,-2.633085,0.034739,-3.409520,9.300221,-2.272181,-7.484105,-6.840442,9.448301,-4.046846,3.285356,8.213927,-1.516637,9.055466,-3.089921,-0.406313,-6.768186,-2.730283,-1.366512,0.671696,5.564286,4.935025,-0.888592,9.363373,-3.310475,-6.359840,2.338391,7.976003,-1.759439,-5.904752,-5.291155,6.763709,-7.259397,-8.478624,4.326815,-6.975418,2.988326,-0.811138,6.982104,5.937340,6.447494,-5.121492,9.244795,-0.300980,-8.822109,2.755540,-0.813743,3.612185,-5.058975,3.274406,-8.404401,-6.758936,-0.388442,8.340146,-0.718529,5.643499,-3.648362,2.638231,-1.375306,-1.571930,-3.614737,7.547275,-6.702904,5.515529,0.184128,-4.303283,7.588488,2.749532,3.783741,7.013884,-4.474540,-0.570827,-3.887203,-1.805806,7.733158,7.164653,-2.391882,-6.215531,-8.879091,9.604977,8.242087,0.771298,0.552371,-4.429699,7.013515,-3.310535,-8.800106,7.113635,-8.363505,5.621676,-1.670867,-6.676789,-1.986569,0.826255,-0.727611,-3.307503,8.530647,-2.481135,-9.580373,6.144467,2.585599,4.944379,-1.160576,-1.245497,1.720052,7.583114,2.781388,-3.806718,-8.359910,-3.003192,3.130218,-6.377904,-8.805874,6.788146,4.179626,-1.782776,-2.736790,7.408012,-0.812905,-0.671318,9.083514,1.610443,6.312193,-2.485110,-4.102544,-6.516876,9.259082,-6.663571,-7.285810,5.016445,-7.314424,-5.909506,5.594215,-4.706226,8.113615,2.285717,-9.499359,8.798982,5.793713,7.825449,-9.691341,6.554140,6.791956,8.414179,6.559771,8.296025,1.574733,-2.836958,0.081318,-0.415053,0.054873,-4.773435,0.006769,1.064017,6.863532,-9.818547,0.543575,-1.033299,4.220742,-3.677999,-3.591498,-9.106809,3.491165,-8.563249,4.156806,0.024029,8.357440,-1.359242,-6.226920,5.455426,2.924394,0.337054,1.456817,1.104160,-9.783965,5.516154,4.319509,-7.547704,-1.253180,-6.830521,6.681566,2.771781,2.970046,3.668542,3.341870,7.560702,-2.594178,8.553540,-3.863947,-8.545574,-9.254318,7.500781,-8.093831,-2.119364,4.203109,-6.819068,4.376478,9.723780,-2.685709,-2.175450,1.554386,-5.531420,-4.460420,8.141673,-7.312940,1.623554,9.560934,-7.447310,-8.762212,-6.415566,3.837325,0.119050,-5.856649,3.054924,3.468718,6.722375,-3.003645,7.918738,1.653338,4.061698,-1.009288,1.495175,-2.937453,1.660844,-1.696832,-1.428457,4.013136,-7.487589,-1.706155,-6.381395,5.171333,-3.356622,7.452695,2.819773,-8.023824,-0.022410,0.305177,-0.996843,0.051134,6.659064,6.220164,-9.649483,8.274761,3.028015,-5.734759,9.244250,5.677313,5.536535,1.078735,6.527932,-7.454728,2.930143,0.479589,0.004819,7.905040,7.542566,-1.350161,1.603365,-7.641617,7.881390,-7.254541,8.039664,-4.799322,-5.407638,1.313288,6.133406,5.201731,6.416393,-4.603996,-2.121373,2.887664,-5.633654,5.318264,7.534890,-7.282578,-3.698520,-8.835106,-4.910228,6.267591,-9.733790,9.161779,-2.105334,-6.116855,6.787543,-9.164506,6.686282,9.090308,5.686387,2.797490,5.254114,8.424894,2.052204,4.154432,-2.830734,-0.178662,6.930452,-4.532162,4.332426,5.786647,6.985314,-4.505431,-7.665998,-0.479796,-1.216822,-4.045097,-3.058545,2.921551,6.766410,2.641388,4.856504,4.905614,0.686355,-3.207822,-3.036559,-3.215911,0.432283,-8.686811,-5.139523,1.891269,0.208824,-7.235853,1.434662,7.177057,-4.346029,-5.734207,-2.736165,-3.158511,9.626787,-5.415848,7.309097,6.106729,3.937887,-3.607950,2.772854,-2.344509,8.597007,-1.234444,1.296585,-1.224713,-5.096874,7.356485,-5.090212,8.934419,7.049894,2.052151,-3.785447,4.423633,1.337599,6.386261,-2.869796,3.375200,7.294867,-3.282731,2.193859,-5.365821,-4.555079,-2.729593,-1.769118,-3.139767,-5.235328,-7.512438,8.362878,-3.001405,2.046452,2.808346,-3.391104,0.654535,-6.537134,-3.995294,-1.737973,5.775206,-0.914624,7.965978,2.344015,-3.080827,-4.370383,-8.321071,4.293165,-4.606932,7.701114,-1.450858,-2.794057,2.420113,9.483349,-2.282631,-3.820030,-4.850335,5.606238,6.809954,-0.707922,-5.044492,-2.187813,-2.801868,-8.299154,-3.623265,-2.822960,5.221969,4.997646,7.020892,-0.099560,-9.998284,9.757950,1.617802,5.999161,-8.985086,2.123147,-1.818494,0.623261,9.879083,9.502303,8.427495,-6.296850,-0.474415,1.255867,-7.205635,5.072536,0.464223,-1.560713,3.695744,9.113259,6.382290,2.677641,7.917943,-5.808876,-3.813241,-3.203729,1.257647,-8.506303,-8.053442,7.054556,8.383408,-8.714941,0.511531,9.763360,-7.240000,-5.043053,2.672158,2.461543,3.714997,1.188379,4.494286,6.557552,-5.346117,-8.880187,-3.278302,-9.991719,-8.550678,-8.320062,0.551933,-9.842866,-3.562184,0.023586,-9.286457,-9.905882,-0.940601,0.726843,-3.093221,-8.498316,-3.977883,9.488729,-1.938008,-4.735441,-3.941036,-7.642390,3.255375,5.984567,-2.449669,3.002366,3.758976,-0.667417,-0.674538,6.911555,-0.343038,6.177548,-2.480738,6.335766,-1.105214,2.437123,-8.479048,-4.387327,9.467290,-4.016818,-9.252055,-2.912601,3.897637,6.711300,7.444350,-6.168904,-8.632623,-9.080228,4.362877,5.770486,-8.203377,-0.820153,1.258369,-0.568532,0.529381,-2.659686,-7.029881,1.041115,1.893442,7.848218,-4.405874,-2.306903,-8.683721,8.847120,3.698984,7.736149,-8.206053,-7.344224,6.180340,-4.405376,5.066536,-4.876777,2.644464,-6.027077,4.300395,2.651690,6.662166,-4.907127,8.964006,8.329411,2.039639,-7.653803,7.124221,8.292115,0.586037,7.371538,-2.312501,-0.668783,5.418062,-8.102017,2.363437,-8.070568,0.664251,-7.985036,2.688636,6.452177,-0.924061,-4.565514,1.505995,-4.119965,3.284907,5.721123,-8.531025,2.843788,-6.430602,-9.991529,-0.422779,9.784894,3.606728,-8.220915,8.604277,8.328097,7.602352,3.548556,8.032792,0.771594,9.301089,-8.803143,-3.206387,-6.649916,7.911811,-0.338109,3.222018,-9.946292,1.180060,7.185526,-9.031549,8.252470,-2.158587,-2.710203,-1.908001,-4.492211,0.224542,0.472748,1.529594,-6.336349,-0.610733,-5.508806,-9.138300,1.193667,1.889949,5.533534,3.549391,6.931772,4.291266,-6.369169,5.180821,-9.344068,4.157457,-4.692388,3.001632,-3.009497,-9.336029,9.589213,2.633683,-0.725419,-5.426617,-9.817868,-2.601562,1.730673,-6.215819,-7.884029,7.930677,-7.967385,-8.680169,5.682949,4.872070,-2.561045,-4.172633,6.343940,-5.325494,-5.915583,7.354940,-0.526126,-2.148519,0.298276,0.710672,-3.932410,-3.987170,-8.961067,6.793234,-0.461893,6.122410,-6.820099,6.790912,8.147937,-2.842192,-8.429128,-9.003109,9.600958,-1.520761,9.799288,-3.072236,-7.724363,-2.436053,-6.927203,-7.004965,5.357156,9.506050,4.920453,1.509208,-2.657695,-2.702847,1.496582,7.931731,0.933755,3.999608,-3.874901,-9.072348,9.284605,3.554511,1.945591,-9.998894,0.268177,-0.567496,-1.794940,6.240196,6.258639,5.755702,-3.654284,-0.541275,7.338018,6.763583,9.542275,-2.608542,-4.280060,-1.433545,-6.597498,-0.698546,-0.292505,-4.460256,-1.231487,2.034193,-6.971809,-8.246235,-1.606296,-0.632161,5.475473,3.918533,-5.709708,5.241111,2.387305,-4.112261,-6.874095,6.762978,4.749136,-8.368121,5.253481,-7.810188,-7.267087,-8.007349,5.868532,-0.811553,-0.049119,9.950931,-2.550007,-9.686208,3.964276,0.455008,4.000675,-2.789079,-7.925990,3.931539,9.974446,6.024850,-6.743194,-2.144812,9.300197,-3.661032,-0.585972,-5.538999,-6.641898,-8.722469,4.844832,-2.517748,-4.890068,3.170930,9.376445,-4.205139,-6.798610,-1.184436,3.747155,-7.741082,-6.887292,4.419524,0.875586,9.227566,-2.180021,9.965557,9.475984,-7.456521,-7.824652,-5.505318,-5.147770,-4.784710,0.716074,-8.175377,2.262610,7.714534,0.953870,-5.467954,-2.499243,2.966763,3.044820,-1.377361,-8.150646,-9.134327,-1.913839,-9.289067,3.971313,-7.563223,0.636247,-9.829123,5.812157,-7.212002,-4.553739,8.902397,-0.813852,3.602515,7.086964,-8.311417,-4.668971,4.466278,-3.598845,-3.126777,-5.612026,-0.652823,1.469907,7.873123,-6.642616,3.501886,-1.672065,2.751863,8.814606,5.361030,-1.595933,-9.057346,-7.440798,6.293557,6.506015,4.607273,-3.413635,-7.523094,-2.627184,3.427609,7.554442,5.738706,0.764271,1.288310,6.355594,-9.562966,-2.416318,-4.522062,-4.109749,7.992759,9.110730,2.590510,-8.918832,9.153847,1.385486,1.249397,-1.478349,4.433636,9.333842,-6.244970,2.981945,-5.809123,-0.632570,-6.295095,1.982643,-4.131301,-7.733668,-5.909535,0.352778,5.586282,-2.802005,-2.309482,2.394386,8.319860,-7.021720,8.760626,-6.514693,2.485891,8.561100,3.690341,-2.863057,9.321417,4.702237,1.258605,-0.680241,-2.769985,-3.416632,7.641382,-3.082555,-3.031017,-4.600252,-2.864394,-1.839999,4.556790,0.288579,-1.876056,9.835185,4.102167,5.996540,8.867885,4.404326,2.816331,-6.979887,-7.545076,0.208884,3.546193,-6.319741,-7.047208,-2.235508,-7.878576,-5.451932,3.977485,8.793136,-4.918477,3.611507,-4.587798,9.679720,-0.871285,-3.106809,-2.438908,-0.452913,9.653494,5.944237,8.659896,-0.147587,-5.477689,-6.871307,-2.531453,-3.773787,-4.628318,-5.795444,-4.918942,-7.942207,-6.316585,8.826895,-2.008587,-9.773934,0.832409,6.549100,3.724724,-0.481558,-5.811504,6.585318,-5.467324,-2.659595,-0.448026,7.965801,-1.383114,6.970210,-4.868969,-5.947054,-9.196243,9.145764,-4.344877,-1.213014,-9.246809,1.217482,1.732699,1.709155,-8.921296,9.937541,-2.824001,-9.888975,-5.402533,0.517677,-9.145477,-4.628414,5.865083,-5.807196,-0.146896,1.648299,-2.954917,-0.956083,-6.450180,5.525309,5.485457,9.672522,-6.902174,-7.476396,8.255055,2.607033,7.015278,9.914987,4.931424,2.830272,-2.291391,-2.174633,2.576480,2.585329,-5.319100,3.848244,4.789739,-0.082588,-0.387859,-8.135800,-1.655624,2.467734,1.745497,-9.608230,8.433513,8.489541,7.877476,-6.768126,-0.541754,-0.938897,-3.587429,-1.194745,-0.042115,0.617973,7.968286,-1.209977,-2.368951,-2.429298,-2.125509,-5.324762,-3.429573,-4.711604,-5.971401,-8.151457,-2.120106,2.862718,-1.629541,-8.427445,-6.890807,0.398855,6.258627,-0.415649,-5.745905,-1.644166,9.514324,-8.968517,-0.345730,2.179522,0.304680,7.719439,-1.511698,-5.111747,-9.596084,3.158766,1.998818,-4.955293,1.594313,-7.049190,2.318573,-5.870860,4.494785,-4.452813,6.005280,-6.037132,-9.147102,-7.984258,2.388728,8.404421,6.001508,-9.240543,-8.647128,-0.382343,3.933819,7.512327,8.731341,-3.838038,-3.398962,-7.126698,-0.689944,-3.215773,-5.809043,-3.365713,4.613376,2.206814,-6.497736,9.220789,-8.876250,-6.113789,-5.455915,3.700958,-0.793066,0.003952,-2.223145,-2.858794,-8.955198,7.043454,-6.801947,-2.075569,-8.070346,-4.855941,-0.756205,6.513220,2.119923,-7.623860,4.664417,1.170763,4.766503,-3.211847,-3.451058,6.349313,7.945995,6.844852,-2.147583,9.572910,9.620427,6.908213,-9.060197,0.780343,4.753930,2.024657,1.894188,-3.406422,6.082573,-4.543549,9.416678,8.440375,0.375922,-8.079003,-6.078632,-9.737839,-1.317396,6.228731,-0.007272,-7.448716,7.442645,-4.539557,0.047663,9.864048,2.235882,-7.996959,5.923926,8.830076,6.767371,-6.658402,6.493351,7.953487,7.880656,-3.912823,9.500120,9.117389,3.321160,5.081786,-9.362804,7.918168,1.514155,-3.597226,1.984085,2.391493,-8.797189,9.429128,-9.739038,4.077552,5.902273,1.582765,-0.054656,7.852538,-8.213182,-9.796634,-3.823997,-4.638885,-6.537025,-0.881730,-3.226222,-9.897754,-3.367728,-1.395505,-5.710186,-7.798790,-4.844591,3.050955,-6.544398,-6.394306,4.456316,7.322429,-9.545004,0.183366,-9.063757,7.643274,3.214223,0.427154,1.297367,-7.748158,0.325618,4.169266,-9.639468,4.899445,-1.629978,5.683878,-9.421026,1.053284,-8.390651,7.408150,-7.459399,5.368581,-4.011704,2.229080,2.541896,-2.912971,-8.537846,-1.833991,-1.551838,8.640119,3.396471,-1.230434,2.680247,-2.568371,0.449560,0.336241,-9.368081,0.352582,2.676685,-3.006230,5.764553,-3.139473,7.548353,-2.498075,-9.655764,-0.286397,0.764443,8.018621,-0.773217,-5.056663,-6.098719,2.290034,9.260623,8.363795,-3.709266,0.303087,-6.282072,9.204122,-5.602630,0.575534,-5.317310,-5.718962,2.322939,-7.479497,5.793092,7.693275,-6.690211,1.521635,1.379152,2.673827,-7.069570,9.528887,-9.973237,-1.963044,7.533370,9.341573,0.235378,2.574665,4.165768,-6.608783,-5.330329,-2.995301,5.998480,-8.773005,1.480322,-6.934501,-3.951063,-4.053071,-4.351151,9.055738,3.619077,4.796728,-2.063383,8.522449,4.612626,4.786681,0.932089,-7.170304,1.527734,9.332112,-6.699696,-5.900233,-9.070691,0.275609,-5.693706,-4.553068,1.757643,-4.223353,-8.889024,-9.519128,-2.283296,0.451683,6.424019,-2.193743,7.697686,0.110310,0.194024,-7.595154,9.441178,-6.345072,2.159974,5.666845,5.285136,-9.985227,6.643271,1.032694,-8.133068,0.531692,-2.512426,-4.261535,1.712131,-3.531116,-5.720816,-5.993163,-2.977336,2.039094,4.315910,7.533644,-3.968487,-3.683856,-4.777122,5.709442,9.616434,-2.111809,-3.506651,2.372314,9.858828,-4.469100,-2.480274,6.359926,-8.038163,-3.498328,9.515047,-5.900240,-8.481380,4.871326,-3.835658,6.033431,5.623029,7.201859,0.820386,0.968746,-7.856025,-4.558157,3.815083,-7.460694,-5.200739,5.821759,-5.174007,8.104953,7.490422,5.712944,-1.285149,5.477960,-5.785582,3.825187,4.523045,-2.146839,2.711571,-2.910329,-5.028382,-6.269764,-4.047355,-9.029728,9.190302,5.967564,-0.631964,-4.508853,8.892249,-5.413860,-0.360931,9.968321,7.726527,-3.270955,-3.844599,2.070384,0.669854,7.160820,2.064530,-3.197816,-6.005736,7.425475,-4.553161,7.545326,3.519411,8.545321,7.644817,5.864697,7.551638,8.388587,7.656404,-4.103726,-1.197951,-8.911510,-7.979020,-0.864678,-3.291796,1.484338,2.442603,-3.488228,2.474490,8.788472,1.024801,6.873997,-1.490310,-4.043345,0.268057,-7.111530,4.287630,2.169692,1.087948,-1.657775,-2.004583,-1.060622,-5.043303,-0.016467,-1.769216,-5.615815,2.489863,-8.941060,0.923209,3.916427,-3.970857,-0.643973,-1.458191,5.560734,-9.945900,2.351249,7.442150,-0.847232,-4.653978,4.622453,-6.693438,-0.432292,1.264396,7.684726,-7.632698,2.641784,-7.021650,-5.975921,-4.888139,-4.753434,3.683507,3.454551,8.274635,-6.417634,-5.350543,4.825466,5.787490,-9.251746,-6.293768,5.385971,-7.071081,6.991898,3.213724,4.313404,0.566246,-3.120253,3.997341,-5.570131,1.958338,8.995768,-8.904326,4.202238,-6.886588,2.618692,2.393731,7.097757,5.744165,0.875538,-4.094359,-7.667811,-5.031907,-1.510933,-1.037337,7.440477,8.950883,-9.110081,5.441837,-3.563966,7.828162,-1.991577,-0.446100,5.364505,9.414523,-3.826593,0.100949,6.398122,1.516199,-6.526960,-7.666217,-7.409673,-8.425884,-9.384404,-1.432746,3.871089,-2.357305,-1.154805,-9.931747,-2.127263,-3.223363,9.342462,-7.861371,-5.044986,1.856212,5.471527,-3.249381,0.412694,-8.462478,-8.221644,-7.226230,2.612944,9.928160,-5.533104,8.502245,3.496857,0.207759,6.602862,-8.979137,-7.934269,-6.487774,3.826167,0.375179,7.041442,-0.821975,-0.729662,-3.039705,8.998576,6.326247,5.550456,1.069890,8.383438,3.192561,-7.538375,-4.396787,8.196836,-4.385991,7.920383,-9.913127,-0.550743,-5.603302,0.844255,-6.975850,-2.478064,-0.225819,-7.463789,8.972800,3.591600,-3.329104,-1.308783,-0.795680,-5.915355,-0.102152,-3.658912,-9.278397,-0.880425,5.525360,3.596296,-9.429939,8.473878,2.135505,-9.394149,2.005492,-1.972790,6.470351,-1.952679,-4.123878,2.536552,-3.445879,4.208860,-2.959878,5.850928,-2.979163,6.136112,1.644844,5.518845,-5.670696,3.840206,3.152994,2.297545,-4.492396,-5.879264,-9.146884,7.328237,1.227717,-1.381717,-1.790338,3.310108,-0.779418,-2.851638,-8.382153,9.783426,1.468416,-9.197492,-3.320206,-7.097928,-0.053653,6.210566,-0.079197,4.675688,-2.030754,3.201174,-7.754235,5.479516,7.105937,-0.784097,1.339852,-6.476023,-0.546075,-5.947042,-8.252966,5.085073,0.607054,-8.404737,8.281819,-3.138464,2.943469,2.488085,-2.992531,-1.894889,-7.658436,4.962409,-6.442131,-0.914741,4.723951,3.642688,9.081127,-1.208677,-1.371422,-1.782188,-7.825026,7.373945,-0.873335,8.301167,0.644375,-6.838348,-8.399792,4.675009,6.948462,6.852196,-0.547749,3.161313,2.790926,5.474373,-4.190925,-2.912989,-7.245531,-9.671141,-5.445248,3.170385,5.996451,7.872654,-9.523624,4.577085,-1.056873,-1.460324,9.373875,2.864030,4.096071,-6.458490,-5.675800,-2.287068,-0.922643,-0.950119,5.605295,-3.258410,1.216809,-6.956021,5.626832,-8.216797,7.870288,-0.027875,-2.651952,0.638351,-9.794421,7.074060,-6.212651,0.595521,-9.351806,5.509676,-2.399764,-6.809642,8.699424,8.689049,-6.815277], dtype = "float32")#candidate|4314|(2400,)|const|float32
call_4313 = relay.TupleGetItem(func_2617_call(relay.reshape(const_4314.astype('float32'), [2400,])), 2)
call_4315 = relay.TupleGetItem(func_2620_call(relay.reshape(const_4314.astype('float32'), [2400,])), 2)
func_2980_call = mod.get_global_var('func_2980')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_4329 = relay.TupleGetItem(func_2980_call(), 0)
call_4330 = relay.TupleGetItem(func_2982_call(), 0)
bop_4338 = relay.logical_xor(call_4264.astype('uint64'), relay.reshape(call_4270.astype('uint64'), relay.shape_of(call_4264))) # shape=(5, 8, 6)
bop_4341 = relay.logical_xor(call_4265.astype('uint64'), relay.reshape(call_4271.astype('uint64'), relay.shape_of(call_4265))) # shape=(5, 8, 6)
output = relay.Tuple([var_4286,var_4287,bop_4290,call_4310,const_4311,call_4313,const_4314,call_4329,bop_4338,])
output2 = relay.Tuple([var_4286,var_4287,bop_4293,call_4312,const_4311,call_4315,const_4314,call_4330,bop_4341,])
func_4344 = relay.Function([var_4286,var_4287,var_4289,], output)
mod['func_4344'] = func_4344
mod = relay.transform.InferType()(mod)
var_4345 = relay.var("var_4345", dtype = "int8", shape = (540,))#candidate|4345|(540,)|var|int8
var_4346 = relay.var("var_4346", dtype = "float64", shape = (264,))#candidate|4346|(264,)|var|float64
var_4347 = relay.var("var_4347", dtype = "float64", shape = (8, 3, 11))#candidate|4347|(8, 3, 11)|var|float64
output = func_4344(var_4345,var_4346,var_4347,)
func_4348 = relay.Function([var_4345,var_4346,var_4347,], output)
mutated_mod['func_4348'] = func_4348
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4399 = relay.var("var_4399", dtype = "int32", shape = (8, 5, 4))#candidate|4399|(8, 5, 4)|var|int32
var_4400 = relay.var("var_4400", dtype = "int32", shape = (8, 5, 4))#candidate|4400|(8, 5, 4)|var|int32
bop_4401 = relay.minimum(var_4399.astype('int32'), relay.reshape(var_4400.astype('int32'), relay.shape_of(var_4399))) # shape=(8, 5, 4)
output = bop_4401
output2 = bop_4401
func_4407 = relay.Function([var_4399,var_4400,], output)
mod['func_4407'] = func_4407
mod = relay.transform.InferType()(mod)
var_4408 = relay.var("var_4408", dtype = "int32", shape = (8, 5, 4))#candidate|4408|(8, 5, 4)|var|int32
var_4409 = relay.var("var_4409", dtype = "int32", shape = (8, 5, 4))#candidate|4409|(8, 5, 4)|var|int32
output = func_4407(var_4408,var_4409,)
func_4410 = relay.Function([var_4408,var_4409,], output)
mutated_mod['func_4410'] = func_4410
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4412 = relay.const([[[7.595124,-5.749295,-8.493116,-1.048522,7.435073,6.181578,-2.095444,-0.282429,-3.028966,2.511897,-9.705753,-5.424892,-7.991862,-1.677132,5.799156],[-0.213085,-9.658144,0.505831,5.413865,3.462839,-8.059673,-7.001613,6.054254,3.872079,8.487588,-5.903995,6.984824,3.625077,7.164590,4.372446],[4.769564,-6.413149,-6.605005,-3.511712,9.207168,-8.471175,-5.498831,-5.202518,-9.987630,-2.318489,3.807504,0.527320,8.812962,-7.725608,-1.871569],[-5.158221,-4.354302,1.561046,-6.045590,-7.277385,0.205993,0.941640,2.018562,5.354462,-4.674040,0.394300,5.279340,-2.105570,7.968130,3.094719],[-2.717958,1.285094,-9.760803,-5.547435,-3.413545,-2.583056,9.717247,-9.719913,-6.425163,-5.668580,5.577964,-3.655864,-7.044980,6.835585,1.168011],[-8.141662,-9.528334,-8.900756,-4.406321,-2.446212,4.348431,1.723371,-1.939741,7.792398,0.329024,8.019394,0.807854,8.608070,-7.297432,3.388564],[-2.675924,-4.376613,5.634655,8.823584,1.056665,8.249946,1.201587,3.546024,-1.744925,-6.041996,4.040168,-4.099675,5.191878,-1.406997,-3.960328],[4.337576,3.836325,-9.824482,1.413506,2.109701,9.416971,2.427733,2.595171,-2.189591,-6.612320,2.970735,0.595408,-9.734282,-4.936528,-7.465420],[4.765045,7.482193,5.815559,2.339205,7.177372,6.110330,4.260280,5.002145,-0.468896,-4.396110,-7.906970,-8.287706,6.514921,-9.023032,9.166499],[8.825559,6.189406,-9.536108,-2.975406,4.048790,-1.280417,-1.204065,5.541201,-8.469877,4.882714,-4.700434,-4.890536,9.818500,-3.884492,0.003963]]], dtype = "float32")#candidate|4412|(1, 10, 15)|const|float32
uop_4413 = relay.exp(const_4412.astype('float32')) # shape=(1, 10, 15)
uop_4415 = relay.sigmoid(uop_4413.astype('float64')) # shape=(1, 10, 15)
func_2722_call = mod.get_global_var('func_2722')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_4419 = func_2722_call()
call_4420 = func_2722_call()
output = relay.Tuple([uop_4415,call_4419,])
output2 = relay.Tuple([uop_4415,call_4420,])
func_4426 = relay.Function([], output)
mod['func_4426'] = func_4426
mod = relay.transform.InferType()(mod)
mutated_mod['func_4426'] = func_4426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4426_call = mutated_mod.get_global_var('func_4426')
call_4427 = func_4426_call()
output = call_4427
func_4428 = relay.Function([], output)
mutated_mod['func_4428'] = func_4428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3982_call = mod.get_global_var('func_3982')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_4435 = relay.TupleGetItem(func_3982_call(), 0)
call_4436 = relay.TupleGetItem(func_3983_call(), 0)
output = call_4435
output2 = call_4436
func_4462 = relay.Function([], output)
mod['func_4462'] = func_4462
mod = relay.transform.InferType()(mod)
mutated_mod['func_4462'] = func_4462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4462_call = mutated_mod.get_global_var('func_4462')
call_4463 = func_4462_call()
output = call_4463
func_4464 = relay.Function([], output)
mutated_mod['func_4464'] = func_4464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4426_call = mod.get_global_var('func_4426')
func_4428_call = mutated_mod.get_global_var('func_4428')
call_4503 = relay.TupleGetItem(func_4426_call(), 1)
call_4504 = relay.TupleGetItem(func_4428_call(), 1)
func_2396_call = mod.get_global_var('func_2396')
func_2399_call = mutated_mod.get_global_var('func_2399')
const_4507 = relay.const([0.352024,6.149304,4.879644,-7.872154,0.442641,-8.670608,-4.661784,-0.040781,-9.932665,8.182279,-9.043104,-5.826715,-7.170608,-7.757669,-4.470494,4.684190,-4.589048,-6.420880,2.811591,0.379737,-9.383104,-4.356000,3.834125,-9.414377,-2.380901,-9.206376,-4.459600,0.261176,-8.799878,5.632884,5.425209,-6.792450,5.964048,7.549544,2.588363,-0.746257,-6.975186,-3.300873,3.218637,6.731975,-8.334341,3.899024,-1.178757,6.166558,-5.745513,-3.020005,-6.369063,7.435534,8.824075,-5.696643,8.130481,-9.926699,0.765610,-9.888300,-5.387126,1.816994,3.858135,2.338536,1.658929,-2.947783,7.202512,1.092577,-6.199840,-3.362332,4.810085,-7.621576,6.608841,7.320965,-3.601235,9.791042,8.400394,8.491273,7.131762,8.654021,-1.341681,-3.077962,-3.262326,3.846147,7.314779,-7.076499,-4.653684,8.521997,1.589216,-2.923287,-1.348381,-6.595745,-8.964408,4.171055,8.426314,1.342161,-3.216160,8.450243,4.850848,9.471190,-3.030330,-1.836873,7.011494,-8.150805,-3.914279,-1.550525,7.243722,-5.363282,-7.113119,1.923804,-2.418835,5.330929,0.411186,3.889632,5.262548,3.510120,-9.715485,-5.044186,3.424610,9.239753,-1.341374,4.315910,-4.769089,4.420451,1.037200,-2.484017,6.664023,-7.653257,1.870969,-6.905649,9.041175,-3.787640,6.111358,7.228812,-2.688916,-3.331692,-4.037197,-1.897355,8.035245,8.329915,-5.774716,5.866366,-3.374197,-0.661899,0.024494,-4.839658,-2.009625,6.019869,-6.328039,5.826843,4.587748,4.567894,7.406812,-7.918383,1.941115,0.638836,-8.187482,-4.754513,-7.834985,-2.190815,3.761309,-8.111774,7.002287,9.516863,-3.693866,-8.477687,-8.639531,7.844928,6.924821,-5.846742,-1.626439,0.595565,-6.363180,4.974491,-0.928552,0.725572,-2.458006,-6.869276,9.526676,3.455232,-6.075253,5.360368,0.657118,-9.169536,-3.277985,-1.282978,-4.600149,4.430991,9.689162,1.019072,-1.445628,4.579928,4.206226,6.775444,5.501732,-8.606961,-6.487366,-9.622044,7.733862,6.771393,1.115124,-9.006987,4.812397,4.721267,-3.004416,-3.565604,1.778932,8.067228,7.014034,6.005706,-5.547990,-0.285464,0.032926,-6.612943,2.542066,-3.401239,8.466881,-6.442308,8.656385,8.846072,6.372525,-7.506137,7.994537,8.719619,-5.081053,7.792972,-4.651660,-8.823335,-6.464279,-1.953096,-3.826055,8.761881,1.690097,-9.032017,2.437736,-6.389255,8.846549,3.093216,3.742325,-7.705840,3.724839,-5.218753,0.112499,3.232466,2.061129,-5.169660,-3.761426,-0.936569,0.850589,-0.141258,-5.615372,6.784227,-9.775914,1.099886,8.705005,7.254354,3.634943,9.923236,-8.505380,5.509187,-6.125188,2.924573,3.421755,4.545917,-8.559151,9.623460,-6.345799,7.343312,0.412733,-3.694908,-1.661482,8.020796,0.783360,-6.830265,7.810459,-3.373285,4.358791,-1.193835,7.376731,-8.294018,-6.154875,-2.807591,-5.479346,7.957004,-2.774132,6.302367,3.900803,8.377887,9.610939,6.480130,4.389118,-8.252237,7.479233,0.217832,-2.858817,8.281879,9.972673,-8.539813,5.900834,9.467992,2.406894,-8.119506,9.333626,-9.237430,8.518573,3.980106,2.088994,-5.747588,-1.636378,5.714371,9.399340,6.483842,-6.073364,-1.900617,8.491530,-5.486035,-8.098916,-9.907557,-0.516392,-9.551068,-0.858403,-4.404068,-7.375143,-6.552902,-6.588472,1.161475,-4.551660,-7.695902,-2.731030,-7.146972,-7.901945,7.278500,3.569582,-9.890470,-2.180239,-6.594780,-6.626163,-1.887278,3.253537,8.106680,-7.262306,2.188135,-1.320994,8.964964,-5.742874,-9.110295,-5.062178,-6.594246,8.099342,1.835869,0.354571,-1.784299,-4.439724,-6.700800,-1.748927,6.399484,5.497019,4.509681,-6.046976,-7.345562,8.191126,9.933118,-3.005369,0.026160,-8.298515,7.643030,-5.124740,6.606798,-8.077559,-3.674389,-3.659394,5.732892,-6.465305,4.439541,-6.818848,-4.596796,-2.086648,0.716311,0.451967,0.943039,-2.577282,4.940366,-9.139896,0.095684,6.130611,7.246981,-3.352587,4.453590,-9.529901,0.909900,-2.629458,-2.741391,-1.972106,-1.245369,-5.533535,6.094909,-3.483063,-1.569229,-2.684428,-7.149304,4.842924,5.972439,-9.726599,1.190067,0.008667,7.257549,-4.658770,-5.169798,-2.064555,-7.161641,-0.616748,4.783250,-7.784604,-3.582709,7.707718,-7.965680,-6.119303,-5.497698,-2.058972,4.078301,8.364767,-0.932476,-0.629221,-9.513588,5.441896,-1.416188,-6.128994,-9.004559,7.492979,9.856570,4.494766,1.323771,7.006198,2.084012,4.528828,2.665583,8.259730,-8.853565,8.661881,-8.086856,5.001882,-9.417049,-1.814589,6.607214,6.062849,3.428281,-5.532585,5.920420,-3.850827,-9.760943,5.910821,-2.172717,2.341980,4.814976,6.394088,8.037608,-0.295524,4.209441,-5.027745,-5.861939,4.254769,1.287498,-6.371211,-8.635385,8.804842,5.987228,-5.470884,4.274147,-2.386979,-0.972376,1.231994,8.713574,-5.535231,-3.890287,8.647262,-0.263343,-6.292061,-5.397383,-0.328618,-1.546694,8.444203,2.801638,7.208688,5.437949,1.219178,-1.353688,5.477152,-3.062846,-1.999630,0.509886,5.344083,-0.119542,1.285951,-8.326947,0.576405,7.455865,-8.537614,6.104140,7.848115,-2.282770,-5.550544,3.354264,-8.286545,0.092393,1.456838,-3.745748,0.358134,-0.004236,3.982621,-7.260706,9.697305,-7.246892,-6.225984,-8.705034,-6.463809,-0.053375,7.400758,9.809933,8.999398,-0.193843,9.620998,2.317582,0.337808,9.249130,1.152501,-7.126243,1.700934,-0.139235,-0.333594,1.537845,8.623162,8.635188,-7.242758,-3.830353,-5.158466,-2.121415,9.241155,-4.732447,0.484890,-9.546959,4.984365,-8.261110,4.107567,0.625978,7.509944,-5.513815,-1.123933,8.915623,-6.954095,6.994970,-8.989977,-9.507319,4.125508,-4.457969,-6.315331,0.757669,0.036933,-2.613941,1.565302,-8.861420,7.967684,3.125673,6.248738,-9.161543,5.351526,-9.080404,5.808906,9.496893,6.751708,5.915988,-2.161144,2.415177,-2.649624,-3.469239,7.266040,-7.290633,-1.622827,8.791412,-2.351330,4.717033,3.987501,6.284767,1.207697,4.561479,3.077429,-3.741521,-2.738754,3.218940,-9.649132,-8.811358,7.421953,-7.929083,-5.365749,1.511067,9.497684,-9.769795,-2.736332,9.656524,8.327244,-5.394298,4.103112,-6.708248,-4.721626,6.601832,-8.656171,8.209236,-1.408469,5.762218,6.180158,-5.067698,5.056923,8.739656,-9.985906,9.691790,4.038624,-6.392835,1.787671,-1.866414,8.047144,-6.677326,2.737366,8.642303,6.013667,3.269321,8.845603,9.181505,-5.514096,-1.652453,7.169577,-0.875409,3.639766,4.724958,-5.693797,-2.668907,4.956558,5.101133,-4.758230,2.172223,2.770871,-7.867858,-7.660806,4.996904,-9.331438,3.137227,-3.976264,8.896421,7.916421,-8.935804,-9.194894,1.062530,7.112393,8.622942,3.783513,2.317594,1.173928,2.557919,7.862931,-1.360468,-3.814983,7.059100,-1.147989,-0.922679,7.123143,0.586706,8.301482,-3.564542,9.254349,1.067637,-4.450791,6.656589,-5.759480,1.691254,5.446813,-9.735078,1.381721,-8.129233,-8.297552,0.096235,4.718522,2.193786,8.663497,3.439941,9.211154,5.679238,0.739126,2.192117,9.040178,5.426830,4.083205,-9.247406,5.636805,-3.065327,8.711427,-6.535258,-5.799847,-8.655395,3.754481,-4.418938,-0.841507,-1.449671,-6.098617,7.542658,-8.935523,-6.523177,-4.509845,-2.969783,-2.320944,9.865359,3.770133,-5.575155,-0.689610,1.687365,9.268694,-2.575573,-1.212226,9.164954,0.590745,-0.178617,-4.403808,2.930909,-7.217955,-9.487539,-3.328643,-1.908890,9.593318,0.234070,7.481685,0.760710,-4.470409,-7.976623,-6.825819,7.772899,9.439821,6.852555,-0.847595,-8.364450,1.804661,1.718110,7.255239,5.949384,1.214057,-7.012776,9.915278,1.973229,2.372262,-2.534325,6.536882,5.185099,-0.720482,-0.435732,8.215693,4.275372,-0.069167,-2.250636,-5.858390,-0.664375,-8.098211,0.747901,2.122703,1.278664,-6.175372,-4.230473,9.642035,-0.740941,1.804401,9.299746,-0.749100,2.263703,4.198103,-8.631964,0.495779,0.362365,7.216997,6.744120,0.209597,5.163540,6.668177,-8.760428,-6.069151,-0.668660,8.500730,-3.514932,-6.107029,-8.859065,-6.575566,3.355880,-1.275130,1.744511,4.781810,-4.585520,-5.685207,9.243434,4.029965,-0.905977,-7.359902,3.243268,-8.660203,5.580178,1.476464,8.784357,-1.970683,7.814888,7.754177,-4.358371,-3.112090,-1.027850,3.979227,-4.515395,0.171036,-6.211561,3.197416,8.554648,5.150170,-2.786261,8.278430,-8.423074,-2.788186,-7.160388,3.045937,5.015519,1.502120,-3.302116,1.784445,0.982762,3.803256,-3.122848,-7.812913,1.964441,1.274145,-6.752019,8.020815,-2.496877,6.024759,2.536065,-6.667714,-3.368066,-5.761481,-4.652868,0.741653,-6.917217,8.590978,2.562739,5.387717,3.189882,-8.986797,1.372447,8.032055,5.289867,-7.395176,9.213890,8.163477,-0.552360,-3.915523,3.844103,-2.422246,-2.919373,4.754739,0.590170,-9.575580,9.325408,6.750400,-1.228632,-2.175949,5.468387,8.897442,2.889461,-7.221850,-5.707067,-2.652054,-2.788095,-3.759520,-2.796009,-0.575534,-7.920286,3.623918,3.396311,-9.970280,4.480304,5.735571,6.045423,6.699319,-2.058019,-0.354924,-2.099961,-1.584155,3.022258,3.545967,-3.567889,-8.090561,3.628987,-9.064262,-3.206143,-9.336297,-2.554621,-4.350893,-9.525272,-8.244161,8.489872,-3.662891,-2.613703,-0.086523,3.782517,1.208721,6.332493,-8.880560,0.279092,5.226190,7.904498,5.735877,4.900868,9.679030,1.684784,-0.427355,-8.424632,-8.262764,-7.140661,-2.281101,9.516590,1.487837,3.540623,6.542642,7.679394,-9.541047,-2.147617,-4.272981,5.980166,-8.757108,8.014020,6.020659,6.454987,-8.813352,-7.514854,5.976221,6.949038,-2.970711,-2.225660,4.984965,-9.058367,-0.950346,-7.467255,1.461409,-2.411247,-8.854510,-3.891236,2.350047,-9.662946,8.872667,-8.327896,-5.238868,-6.430237,8.681708,-2.794824,-7.999123,-3.843796,0.381221,7.448508,1.901091,-1.000227,8.206120,4.447130,-0.717984,6.707560,6.092089,-1.015256,5.017047,-3.667137,8.411004,2.366039,-9.527534,-1.918686,-7.578066,-0.629886,2.690793,-8.230359,7.113899,1.037078,2.839054,-5.695545,1.149155,-0.339198,1.608407,8.420743,1.803081,-1.958561,-0.150002,4.350773,-6.557950,-6.372203,1.594708,-6.092642,2.397501,-7.175491,-5.448685,1.193797,-2.949293,-6.920217,-0.952136,-8.143038,6.825693,3.009754,-2.046427,-4.879351,-2.993797,-4.216719,3.401760,6.894425,3.892430,9.917953,-8.901345,9.327038,-4.878682,-4.152680,7.025185,-2.912590], dtype = "float64")#candidate|4507|(1008,)|const|float64
const_4508 = relay.const([[-8.899497,-1.375944,3.380856,7.872918,-7.899930,-6.857889,6.342132,-7.975307,5.247617,-1.788358,3.843017,5.051613,-9.456990,-6.106778,-2.963815,-9.390531,4.696990,2.574809,-8.364117,4.637727,3.149032,0.454855,-6.136640,6.304086,-7.144008,4.218261,7.295377,-0.173541,1.365495,5.531804,-1.843732,-5.282832,-0.323296,-4.280763,0.002636,5.121663,1.465361,6.814148,-2.114022,-0.653881,-5.696285,-6.965401,-1.587597,-6.146849],[2.125663,4.808485,1.743829,-7.729245,6.786124,-8.169474,-2.805589,-7.706900,-4.920215,-7.375497,-3.197730,-8.330516,-3.645024,1.628099,1.693909,6.723085,3.800489,-6.943411,-5.602926,-3.063656,3.392128,-2.617719,-2.716172,6.389643,-4.674823,4.569218,-3.360944,-5.719629,-7.526981,7.282875,0.657384,7.142533,3.703068,4.723348,-3.290265,-9.855421,-2.593677,9.614283,0.002995,-1.561223,-5.173170,-6.805139,9.366658,-1.189007],[-2.572281,2.304194,-3.107363,-6.852079,-6.563922,3.116590,7.903388,-5.218543,8.217154,-7.809836,-4.388717,-8.690885,-5.441658,-9.449456,7.686845,-0.707499,-2.798696,8.737057,-4.788420,9.693942,4.766702,4.421077,-8.369082,8.352926,3.294954,-6.906096,-2.656983,6.408856,1.050167,-4.311851,-0.649399,3.209862,-2.920059,7.578660,-0.916901,4.732951,2.123695,5.698980,-1.232477,4.094309,-5.357561,4.358110,3.957342,-0.643348],[-1.525153,0.956789,8.917165,-6.958264,-7.525558,-8.646438,-4.296713,-9.258711,-4.187877,9.959736,-3.502955,-4.355598,-1.283495,3.176552,-3.944414,-7.451470,-3.104209,6.648117,-5.919868,7.271202,4.858225,-9.287566,5.036423,-5.714486,-9.074857,-1.930893,-0.517779,7.268544,4.655178,-8.898573,-5.751742,-1.492275,0.877140,-0.290685,3.520471,-0.394539,1.854074,-2.388255,2.756451,-1.589751,-8.782112,1.376156,-3.034340,9.107360],[1.139209,9.288537,2.281602,1.014338,-6.581500,-0.449542,7.871895,-7.222575,0.827716,-6.516493,9.147293,-7.195248,0.011780,2.582151,6.590885,4.643848,-8.561393,-3.483684,8.921725,-1.029354,-4.482607,6.767180,7.355250,-1.797733,8.477995,-3.419242,-1.308586,-0.374058,-4.044160,5.956191,8.215211,-4.208058,3.879688,6.476810,-4.724494,-6.928336,-1.414435,8.690944,-2.336540,3.903582,-9.436507,-6.959308,-1.062990,-4.466476],[-2.351964,-3.700070,1.965004,-5.256888,-5.740433,4.675643,7.666830,5.162878,0.755094,-4.380141,-1.661652,5.427075,2.138897,5.589373,4.899849,-8.362833,5.821385,2.173858,8.724385,-2.937177,2.383810,1.324997,6.497391,-7.344321,9.846503,-6.632099,-3.611301,-2.297011,-0.245008,-8.895237,2.849563,1.830723,6.864356,6.693925,-0.112392,-3.393211,3.874706,6.394191,-9.266378,-8.267298,-7.307680,-2.351352,-0.513857,-5.811231]], dtype = "float64")#candidate|4508|(6, 44)|const|float64
call_4506 = relay.TupleGetItem(func_2396_call(relay.reshape(const_4507.astype('float64'), [1008,]), relay.reshape(const_4508.astype('float64'), [264,]), ), 8)
call_4509 = relay.TupleGetItem(func_2399_call(relay.reshape(const_4507.astype('float64'), [1008,]), relay.reshape(const_4508.astype('float64'), [264,]), ), 8)
output = relay.Tuple([call_4503,call_4506,const_4507,const_4508,])
output2 = relay.Tuple([call_4504,call_4509,const_4507,const_4508,])
func_4522 = relay.Function([], output)
mod['func_4522'] = func_4522
mod = relay.transform.InferType()(mod)
mutated_mod['func_4522'] = func_4522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4522_call = mutated_mod.get_global_var('func_4522')
call_4523 = func_4522_call()
output = call_4523
func_4524 = relay.Function([], output)
mutated_mod['func_4524'] = func_4524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3838_call = mod.get_global_var('func_3838')
func_3839_call = mutated_mod.get_global_var('func_3839')
call_4539 = relay.TupleGetItem(func_3838_call(), 0)
call_4540 = relay.TupleGetItem(func_3839_call(), 0)
output = call_4539
output2 = call_4540
func_4564 = relay.Function([], output)
mod['func_4564'] = func_4564
mod = relay.transform.InferType()(mod)
output = func_4564()
func_4565 = relay.Function([], output)
mutated_mod['func_4565'] = func_4565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3838_call = mod.get_global_var('func_3838')
func_3839_call = mutated_mod.get_global_var('func_3839')
call_4610 = relay.TupleGetItem(func_3838_call(), 1)
call_4611 = relay.TupleGetItem(func_3839_call(), 1)
var_4616 = relay.var("var_4616", dtype = "int64", shape = (5, 8, 6))#candidate|4616|(5, 8, 6)|var|int64
bop_4617 = relay.logical_or(call_4610.astype('bool'), relay.reshape(var_4616.astype('bool'), relay.shape_of(call_4610))) # shape=(5, 8, 6)
bop_4620 = relay.logical_or(call_4611.astype('bool'), relay.reshape(var_4616.astype('bool'), relay.shape_of(call_4611))) # shape=(5, 8, 6)
output = bop_4617
output2 = bop_4620
func_4625 = relay.Function([var_4616,], output)
mod['func_4625'] = func_4625
mod = relay.transform.InferType()(mod)
var_4626 = relay.var("var_4626", dtype = "int64", shape = (5, 8, 6))#candidate|4626|(5, 8, 6)|var|int64
output = func_4625(var_4626)
func_4627 = relay.Function([var_4626], output)
mutated_mod['func_4627'] = func_4627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2484_call = mod.get_global_var('func_2484')
func_2486_call = mutated_mod.get_global_var('func_2486')
call_4663 = func_2484_call()
call_4664 = func_2484_call()
uop_4685 = relay.sqrt(call_4663.astype('float64')) # shape=(5, 8, 6)
uop_4687 = relay.sqrt(call_4664.astype('float64')) # shape=(5, 8, 6)
func_1349_call = mod.get_global_var('func_1349')
func_1351_call = mutated_mod.get_global_var('func_1351')
const_4690 = relay.const([-10,8,-7,-7,-5,8,4,-10,5,5,10,10,2,10,-7,-8,3,-1,8,9,4,1,-9,2,-6,-2,8,8,-8,-8,1,-4,-10,5,2,1,-1,-5,-5,8,3,6,10,3,-4,4,5,-2,-2,4,10,9,8,-6,2,4,2,9,8,9,-3,7,-3,-6,5,7,7,-9,-2,8,6,9,4,1,2,-3,-5,6,1,-10,-1,-2,-5,-3,-5,-2,7,-1,1,-2,-2,-1,-9,-2,6,7,-1,8,-1,6,4,-8,-1,-1,-1,-9,-1,-9,-5,3,6,-3,-10,-4,3,-8,10,-9,7,5,-4,2,-5,8,-3,-3,10,8,6,10,4,8,5,6,7,1,-8,-9,-3,2,7,-7,-1,8,6,7,-7,5,2,4,-5,-1,6,-5,-8,-9,10,3,-2,1,8,-10,-2,-4,8,-4,-3,-5,4,9,5,-6,-5,-8,-9,-5,-6,-1,-1,5,-5,2,3,-6,-7,10,5,9,-6,-5,8,1,6,-4,-8,-4,-9,10,4,-10,5,3,7,-7,8,9,3,-10,3,6,5,6,-6,8,4,-1,8,-6,5,-10,-9,-1,-9,3,-6,-3,9,-7,-6,5,10,1,-9,5,-2,8,-3,8,-9,4,-10,-8,-8,1,9,6,-3,9,3,7,10,9,-4,5,-7,-1,-8,3,-6,-8,2,4,10,-9,-1,8,-2,5,3,-9,1,-7,-1,-2,7,-9,5,-6,9,8,4,1,7,1,-8,-2,2,-9,-10,-9,-3,5,4,-5,-7,-2,10,-6,-1,-7,-9,1,8,4,1,2,2,1,9,8,10,-8,5,-7,4,9,-5,-7,-10,-1,-4,2,10,-3,-1,6,3,2,-9,6,5,5,8,4,-4,-7,-8,6,4,9,-2,-7,-7,3,-7,9,8,3,7,2,-2,10,1,10,-5,1,1,2,-6,-6,-6,5,9,10,5,7,-2,-7,-3,8,-3,-5,8,6,4,7,7,6,7,-3,-7,-10,-7,3,4,-8,-2,-5,2,-4,-3,6,10,9,-5,2,5,2,10,4,9,-1,6,-1,7,-5,-4,-2,3,6,6,-2,1,-4,3,5,9,1,3,-4,-7,1,-9,10,6,2,5,4,-1,-6,-8,6,-8,5,-1,2,-9,3,-7,2,10,-7,1,10,-2,6,-9,9,1,9,-2,-2,-1,1,-8,3,-10,-3,-4,2,-1,-7,-1,8,-10,-4,5,7,10,7,-2,8,-3,-2,-5,-4,-3,9,-9,7,-5,4,-8,-9,9,-10,6,-5,-10,5,-1,4,-2,-9,-1,10,9,7,5,8,1,4,-6,8,6,-1,-4,1,7,9,-6,5,3,5,-7,-1,-10,8,6,10,-9,8,-6,-1,9,-3,9,2,-8,-9,1,5,-6,7,-7,3,10,1,-2,-10,-2,-10,9,-10,-1,3,-8,-3,-9,6,7,-4,-3,-2,-5,10,5,6,-3,2,7,6,-4,-8,9,-1,-5,3,7,-7,-10,-2,6,-9,-6,3,-8,9,-9,-7,2,5,2,-7,3,-3,-8,8,-3,-5,9,4,-8,-7,1,5,1,-1,6,-2,-10,4,10,-4,-10,-3,8,6,10,4,9,-5,9,-3,-1,-8,10,1,-5,-4,-5,-3,4,-10,3,6,-3,-2,6,-9,-2,8,-8,-3,-3,7,-2,10,2,-2,3,-8,-8,1,6,1,-5,-2,-9,6,-10,1,-5,-9,10,-3,9,1,2,1,2,-7,-2,-9,-2,4,-10,-7,5,-4,-7,-10,-8,4,-5,-5,-9,-3,1,-4,1,-6,-3,7,-9,3,-10,2,7,6,-3,8,-5,-6,7,9,8,-8,-8,-6,-8,3,-5,-5,-1,4,-2,-9,-5,3,-3,-9,-8,1,-2,3,8,-9,10,-3,5,-6,-2,-5,-10,-1,3,-5,5,-8,-2,10,-6,-3,2,-7,5,-5,-8,6,-1,10,-4,-4,10,-9,-5,-2,-9,7,-3,10,10,7,-8,-8,1,-2,3,-6,-1,7,6,-7,6,-6,-10,7,4,10,8,-10,5,3,-1,5,8,8,-1,6,-8,-4,-1,-10,6,6,9,-4,9,6,-8,3,-1,9,3,9,2,-4,8,-5,-6,-10,-8,-1,2,8,-8,-8,-2,-3,6,8,7,8,-8,10,5,-8,4,9,-9,-8,10,6,-4,-6,-10,8,-8,5,-1,-9,4,-9,-9,6,7,-4,9,8,-8,-4,1,-10,-8,5,7,-8,-3,1,9,-1,1,-5,5,4,8,-6,9,7,8,-7,-8,-7,-3,-5,8,-9,1,-7,-5,-4,8,3,-5,-3,2,9,6,-3,8,9,1,-3,2,-1,-1,-2,-4,-4,-3,3,8,9,1,3,7,-3,10,3,8,-8,10,9,5,4,-2,-7,-10,-6,-6,10,1,-6,-1,-4,4,9,-4,-9,-4,8,9,-10,-10,1,7,1,-5,10,7,-7,8,4,-6,2,5,8,5,-4,6,5,7,1,5,7,7,-1,-2,10,10,-10,4,-9,-7,6,-10,-7,8,-8,1,-3,1,-7,2,1,-9,-5,8,-4,10,-10,-2,9,5,3,5,8,1,-7,3,5,8,5,-5,-2,-10,7,-9,9,4,-2,7,2,-5,3,10,10,-9,5,5,-10,10,-4,-4,3,-7,6,6,4,-9,-1,-6,-7,7,8,1,-6,5,-8,-5,8,7,-5,-2,-6,7,-1,8,7,-2,-7,1,2,3,7,-2,-1,-9,-1,7,-1,5,-9,-10,8,1,4,9,10,-5,-2,-3,5,-1,-2,-4,-5,7,-1,10,10,5,3,-10,-5,-3,-2,-2,-8,-5,-1,5,9,-10,10,10,-3,-4,10,-3,-10,4,1,-1,8,1,-5,5,-10,-6,9,2,2,10,1,7,-8,-3,8,9,-10,-5,-9,-10,-7,9,2,-8,9,-4,-9,-10,-3,-5,-9,-5,7,5,-2,2,9,5,-5,6,1,4,3,7,9,5,10,-8,-1,10,-5,-3,6,-8,3,6,-3,3,4,-10,-6,2,6,-1,-10,8,-5,-2,1,3], dtype = "int16")#candidate|4690|(1155,)|const|int16
call_4689 = func_1349_call(relay.reshape(const_4690.astype('int16'), [7, 11, 15]))
call_4691 = func_1349_call(relay.reshape(const_4690.astype('int16'), [7, 11, 15]))
output = relay.Tuple([uop_4685,call_4689,const_4690,])
output2 = relay.Tuple([uop_4687,call_4691,const_4690,])
func_4700 = relay.Function([], output)
mod['func_4700'] = func_4700
mod = relay.transform.InferType()(mod)
mutated_mod['func_4700'] = func_4700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4700_call = mutated_mod.get_global_var('func_4700')
call_4701 = func_4700_call()
output = call_4701
func_4702 = relay.Function([], output)
mutated_mod['func_4702'] = func_4702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3631_call = mod.get_global_var('func_3631')
func_3632_call = mutated_mod.get_global_var('func_3632')
call_4705 = relay.TupleGetItem(func_3631_call(), 0)
call_4706 = relay.TupleGetItem(func_3632_call(), 0)
func_4407_call = mod.get_global_var('func_4407')
func_4410_call = mutated_mod.get_global_var('func_4410')
var_4737 = relay.var("var_4737", dtype = "int32", shape = (160,))#candidate|4737|(160,)|var|int32
call_4736 = func_4407_call(relay.reshape(var_4737.astype('int32'), [8, 5, 4]), relay.reshape(var_4737.astype('int32'), [8, 5, 4]), )
call_4738 = func_4407_call(relay.reshape(var_4737.astype('int32'), [8, 5, 4]), relay.reshape(var_4737.astype('int32'), [8, 5, 4]), )
output = relay.Tuple([call_4705,call_4736,var_4737,])
output2 = relay.Tuple([call_4706,call_4738,var_4737,])
func_4746 = relay.Function([var_4737,], output)
mod['func_4746'] = func_4746
mod = relay.transform.InferType()(mod)
mutated_mod['func_4746'] = func_4746
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4747 = relay.var("var_4747", dtype = "int32", shape = (160,))#candidate|4747|(160,)|var|int32
func_4746_call = mutated_mod.get_global_var('func_4746')
call_4748 = func_4746_call(var_4747)
output = call_4748
func_4749 = relay.Function([var_4747], output)
mutated_mod['func_4749'] = func_4749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3838_call = mod.get_global_var('func_3838')
func_3839_call = mutated_mod.get_global_var('func_3839')
call_4786 = relay.TupleGetItem(func_3838_call(), 2)
call_4787 = relay.TupleGetItem(func_3839_call(), 2)
func_1243_call = mod.get_global_var('func_1243')
func_1245_call = mutated_mod.get_global_var('func_1245')
const_4789 = relay.const([-2.900225,-6.842339,0.609941,8.894616,-9.133483,-3.623757,4.863264,3.272955,2.616840,-1.176307,-1.766537,6.623128,3.401390,5.891584,7.525710,2.662073,-3.600458,3.760745,3.538768,4.819787,-3.635591,-0.475171,7.523629,-8.837912,8.514545,-0.725463,-4.671315,4.681202,5.763349,0.930024,-6.283388,-3.858178,-2.222241,-2.259676,0.233612,-7.502233,-9.243019,2.085439,-2.341155,-6.804679,-4.867500,8.861744,1.545062,-0.661830,-9.199242,6.966627,2.237457,2.055471,-9.924935,7.883636,-6.646655,7.481950,-4.723900,-6.849789,-6.504205,-1.583056,-0.287125,-7.374381,-1.789396,-6.550256,-0.263383,6.813687,6.002550,3.898126,8.565534,4.787874,-3.355520,-2.957154,7.241810,0.602680,2.615694,5.366008,-1.824329,1.593749,-8.908044,1.798487,-4.147491,-9.748127,7.883455,3.296392,-9.404837,-5.928139,6.824669,5.760695,-9.847550,8.148682,-8.757441,7.344603,-9.393406,-9.730837,-8.374204,8.989170,-7.042541,-9.336148,8.340064,-0.360930,4.054899,8.166687,4.291663,7.104307,6.372671,-7.316140,6.727780,-7.404145,-4.310431,4.238816,-0.930168,3.935466,-3.330294,7.498843,5.960824,-5.242206,-8.709625,-6.984035,-4.093903,1.110334,-0.118545,-2.876410,1.326748,5.066338,6.706294,-7.859639,5.809689,-1.682098,-5.155670,3.739762,-2.767385,-9.443796,1.007444,-8.367418,-5.759676,-5.614677,9.759651,0.046364,4.274845,3.455159,6.459516,4.726609,4.743145,-8.744713,2.181109,-7.296054,2.045264,-2.963505,2.611690,5.144635,3.399898,-6.512343,-8.354981,2.661247,-2.297312,-4.946833,1.778879,-1.472030,3.881529,-5.337249,-8.946697,-3.194026,2.183001,8.209935,-5.502976,-3.212140,-7.722080,-4.833048,-2.703198,-3.431824,-0.877402,-7.759504,-2.164604,1.516533,-9.140393,-5.084837,-1.158549,-1.842957,-3.079484,-8.501925,-7.989536,-1.816844,0.722060,5.622948,-1.415547,-5.063413,-7.300654,-6.841253,4.577679,8.308569,3.240386,-0.221185,-6.154572,5.417788,-1.780296,4.972547,4.002297,4.699067,2.806862,-1.960238,1.140075,-8.279283,-2.913037,-3.650376,-0.303902,8.489982,-4.975765,5.914588,-0.441534,5.610636,-3.782383,-4.211358,-8.700191,-9.667366,-5.118835,2.236392,8.345591,-8.223301,2.097449,8.795864,-0.916959,4.899219,3.730191,8.890214,-2.219234,-2.751751,-8.434575,-6.404057,9.588138,-9.661302,9.359836,1.237180,1.035197,-9.738641,-5.896608,6.088768,-1.034399,0.007564,1.076405,-1.705616,4.559024,3.269348,3.822235,-3.653333,-8.417245,-9.227041,5.718189,2.254911,1.903064,6.777908,8.932649,-1.485274,8.393975,0.710353,4.341264,-4.188887,8.891386,-7.507307,7.768295,2.958754,1.787970,-9.466501,7.102127,7.188383,5.644275,-5.900834,3.060517,1.746410,5.237850,-7.359241,-4.638517,4.106841,-3.247955,-9.267462,7.155521,2.458732,1.034694,2.115734,5.718599,-7.704136,5.659319,-3.570775,0.982259,2.421725,-8.255320,1.882207,2.481778,-9.435942,-0.201713,4.833444,-3.691228,-8.224071,-0.208154,-8.025448,2.693842,2.928147,-6.214926,1.182731,8.552923,-5.577290,-3.898524,-5.971003,-4.015492,4.982961,2.694142,-3.475932,-9.366610,8.621596,-7.264747,-1.119198,-4.235708,-4.401068,6.989111,6.807383,7.641417,5.143418,9.855683,4.388469,-0.277816,0.838070,4.458665,-4.469721,-2.529791,6.995748,7.287935,-6.334669,9.071893,-4.192058,7.090051,5.470592,7.207221,-8.216044,-7.941917,4.786579,1.052560,-5.379932,-1.664723,-5.887006,-4.998089,-1.112836,8.706058,-2.460563,2.087507,-8.455185,-1.547008,5.118652,-9.904465,-7.498110,3.314211,1.312321,-2.839662,-0.311132,-0.475931,-5.765335,-4.460673,7.464425,1.264647,-7.206976,-1.929391,0.390962,-0.700071,9.167188,7.619285,7.473176,9.327635,5.257948,-7.246425,-6.876780,-4.889423,8.026955,2.044067,-6.628300,-5.986202,-9.459033,5.726275,5.655460,-6.910897,-4.406910,4.775978,7.037252,3.694316,-8.463314,-8.320454,-0.549969,8.380874,6.135549,-2.489354,-6.317195,-0.075121,-9.270255,-1.720854,3.823425,-0.269421,-0.313884,0.332180,-8.889352,-9.851943,-3.714795,8.699155,8.007262,-0.763025,-2.145670,5.651331,-2.517860,6.122861,8.397712,-2.908245,-1.586340,7.617774,-0.749822,-8.933188,9.625309,-6.412224,9.887108,-8.449351,-4.336985,6.635113,-8.419892,2.362137,-6.917235,1.979475,2.897192,-7.584914,-3.162525,-4.493101,-7.727320,2.648836,-8.741187,9.072571,5.860427,-3.541729,9.202476,-2.224323,-9.373770,-3.622405,-7.255582,6.083042,4.721909,-1.385040,1.735569,8.516883,0.385955,2.494348,-8.128752,-1.246348,-3.871881,7.774239,-5.729214,5.674168,-8.540033,-6.591303,3.895972,-3.663230,6.500076,-9.332583,9.749005,8.257950,-7.937330,-4.545072,1.142248,0.378805,-9.939354,9.655485,-8.176627,4.775885,-7.918424,-2.051819,5.847195,8.810185,8.946916,2.138659,0.219005,7.848143,2.774731,-0.719896,-2.743828,0.549875,-3.321190,-4.998906,2.369303,4.424309,8.084649,-3.354066,-9.640778,6.096177,4.527302,6.919162,3.900340,0.295327,-4.745102,-3.665444,0.976275,2.524752,-8.153298,-0.572628,-2.965319,-9.697015,9.295421,-0.557308,-7.065983,1.912493,0.167667,-1.787912,-4.478521,3.007775,5.321009,2.867519,9.210464,-4.394968,-3.282561,-4.558762,8.477717,-4.360151,2.554954,-3.805953,2.875364,5.544036,-2.443716,9.358970,0.195198,-0.431777,-1.194022,7.253189,-6.154086,-3.148812,1.283817,1.145159,4.308804,8.736303,2.645165,-3.882505,-0.472763,3.767727,4.511193,2.968384,8.496004,9.233198,2.632806,-3.312328,-1.482965,5.261104,4.279221,-3.971341,-1.769677,6.987807,-6.004453,-5.125171,0.142665,6.108669,3.224800,-6.950335,-4.475843,-5.900165,-9.036984,-5.038130,9.795143,-2.933602,-4.987729,0.332971,8.379657,-8.961069,-0.554923,-8.234050,-2.148386,-6.961742,-1.538301,3.586299,-8.869635,-4.886925,-7.675454,-7.859084,-9.083941,-7.654939,4.469078,-9.770712,-3.265180,-4.083963,8.544679,-6.190143,7.440180,9.040502,3.444203,-5.259584,5.124147,1.584088,8.528205,7.882208,-0.282610,6.682137,-5.563212,-7.699573,-3.339582,6.225479,4.750105,-4.627227,0.144936,-6.564178,-1.928904,-0.843304,-5.673086,1.540598,9.667657,5.459253,-0.760942,-0.043131,-6.030388,6.354337,4.614190,5.618868,-5.246542,9.512840,6.598115,6.331227,0.315227,8.575324,3.362083,8.747011,-3.503817,-8.451790,6.078814,3.650770,-7.463737,1.164676,5.620938,-4.973966,-5.092018,0.777588,-4.488429,8.772946,2.134172,0.227546,1.063364,3.375484,2.387126,-9.724917,-8.070188,3.742391,-7.024847,4.054600,8.084762,4.979878,4.186147,6.519491,4.374684,6.374662,-9.568054,8.796529,-2.584866,6.788452,9.036337,-7.410546,5.339703,-0.146099,-7.870577,2.128020,3.132990,5.074717,-4.225209,-8.121946,8.048532,-9.648953,-2.864860,3.215372,-2.492387,4.982254,-8.278530,-2.016321,2.255412,3.510313,-1.018967,5.272705,-1.240550,-1.443461,5.202004,-0.711998,9.911218,-3.522523,0.241555,-0.450625,-2.276332,4.671786,2.360984,-7.948667,-7.430899,2.555615,2.770617,-3.708520,4.281630,-6.463065,-6.400964,-1.148220,8.951671,7.096647,-9.006089,-5.670427,2.997388,-7.520256,8.517007,0.629003,-9.609479,-2.587714,7.278159,5.898001,-2.619890,-5.873279,2.514720,-6.217462,2.676502,8.272865,4.677817,0.008957,8.868733,9.680856,-6.535836,-0.477521,1.285986,-2.958524,9.921566,-0.100764,1.639402,-5.785795,0.943868,0.346134,6.603613,-3.972814,1.751649,5.798006,2.948804,4.568953,-7.068719,7.257005,7.209122,-7.348037,8.229434,-7.859573,4.338745,1.519752,9.854481,-4.992644,9.655406,5.809185,-3.575231,4.668843,1.373207,0.221407,-9.663864,-9.078256,1.478020,3.136176,6.937268,2.291717,-4.304426,4.133043,-1.478087,-8.877381,-3.951240,-1.230907,6.414161,9.074631,-1.294233,-2.953302,3.255113,-0.016070,2.055368,7.672890,5.239697,-8.552921,-2.221197,5.626207,3.101200,-1.967391,6.476281,-2.940662,4.928447,-0.082037,-3.518020,-1.423487,4.515183,-9.203600,-2.480043,2.764832,9.977276,-8.125957,0.027347,-7.562244,9.526458,-8.079266,3.689694,6.434091,-9.353337,-3.023741,-6.958072,-0.059829,-5.013628,3.883619,2.179771,-8.574604,-7.845076,-8.763641,9.949356,-3.790703,6.757707,0.959270,3.473105,3.830910,-2.457700,-1.830678,3.333869,-4.828934,-0.060768,-2.944512,-8.423169,-4.023332,4.541974,-7.550861,3.034120,-3.877953,-5.713374,9.712469,-2.044584,6.371425,-4.423855,-3.540369,0.529473,0.742037,-8.603409,7.433501,3.161169,0.008333,-6.167832,6.168598,-9.974921,-6.379526,3.776245,-1.937265,5.282081,0.115442,1.657222,5.898104,-5.747943,-5.344681,-8.875678,-1.138122,7.603708,3.828073,8.160506,2.292951,-8.312094,-1.088546,9.744781,8.686577,2.195451,9.263887,-2.548424,9.507021,0.870953,0.434215,2.723548,7.396015,0.177951,-5.949553,2.445691,-0.591221,0.458143,-7.782132,3.986228,2.162670,-8.217287,-7.259222,6.801376,8.693327,3.276291,9.606296,-3.326845,-2.118226,4.023630,5.684352,-5.158121,-9.655912,-6.985196,6.715609,-3.308672,-6.756031,7.765616,-8.833069,-4.069163,1.111375,-3.799214,-1.767365,-1.813947,3.418031,6.574846,-4.614787,-7.384215,-7.358251,1.847426,6.871662,-1.434238,-1.977852,-2.340858,5.198152,5.514853,-6.865878,2.821429,-5.208906,2.912583,4.989427,-7.010185,9.845443,-6.170234,-8.748133,8.478285,2.533961,7.831612,6.158897,-4.019002,5.769755,8.177375,-6.073707,-8.122379,-8.644732,-6.625755,7.013762,-3.540562,2.966932,-7.460786,-7.739767,2.593998,0.581661,-0.426166,-9.104146,5.612446,-2.507888,-3.965518,5.834146,6.149214,-1.383976,8.442367,4.976798,-8.839245,-1.648084,-7.271418,-1.502163,3.303780,-1.412735,-1.175203,-3.256880,-4.883478,0.592800,5.565780,-4.021159,-7.611382,-4.857617,-2.124710,2.620334,0.298388,0.680103,2.634986,7.171619,1.636866,-1.016729,0.360246,-2.812629,4.650971,-8.609385,-7.290636,9.080416,4.425278,7.314135,7.047966,1.493884,-5.579117,-6.457029,-1.588347,-1.471934,-9.400463,-7.110433,-7.728378,3.731907,-2.828858,-9.177407,-3.138516,2.505978,-1.915660,4.472282,-0.616704,-7.438385,5.087048,-7.919535,-3.208099,-4.938788,2.754764,-0.220464,1.774110,0.587135,3.922895,-8.450230,9.556957,-9.661328,-4.542096,-3.765775,-4.937706,-0.460358,9.127066,4.583905,5.638950,-0.835429,-3.482427,-9.285459,6.463973,7.885986,-6.456302,-2.738085,-4.624258,5.855333,5.276203,0.440105,-6.395872,5.618602,-5.484490,3.110007,-3.969246,-4.552127,3.739081,-3.270172,-5.866488,4.245787,-1.063453,-3.591493,-4.325420,9.800181,1.189594,5.356733,-5.346809,-7.053575,-1.249151,3.005499,9.598491,3.253398,-0.921643,6.228097,-3.070434,6.297707,0.125127,9.647592,4.980331,3.728846,9.510789,-4.000539,5.692391,-9.437489,6.888714,5.273847,9.360343,4.304350,-4.392334,-6.210506,8.163547,1.312508,4.909541,8.122980,-6.834815,-9.981550,4.374438,4.622695,3.850134,-3.919650,1.770433,2.561016,8.975488,7.835375,-0.400091,-6.737733,9.582302,-5.268835,-2.412460,-2.935841,-2.537567,-5.005684,1.418574,-4.767812,3.444306,0.069147,-5.389015,5.956116,2.160140,-6.147209,-4.552389,-4.753310,-9.805485,-0.904783,-4.179549,6.926165,4.794227,-8.151499,-2.389507,3.365948,-1.797859,-3.761326,-1.070270,-7.998341,-1.159714,8.662255,3.942665,2.657088,-8.396082,-5.343956,-1.887008,6.247056,1.595907,-5.368566,-9.619840,7.988682,7.219681,-8.172617,8.579590,4.459184,6.874799,-4.505363,-8.046658,-8.996384,9.527864,6.559376,2.991230,-3.670637,1.766549,-6.890123,-6.435607,-9.462162,6.652676,2.654137,0.270328,7.717787,6.209599,8.776736,4.939699,-2.082839,-6.376408,-8.850687,-8.264275,-9.464082,0.428628,-9.333482,-5.542272,0.794832,7.159259,-8.248675,-8.549702,7.515946,2.741118,6.160284,-2.577211,7.022648,-1.825437,-9.846778,-7.105355,-9.984047,3.815870,-3.406870,0.834619,-9.430247,-6.810438,6.589913,-7.387051,4.725221,4.482188,-1.777846,-0.192258,-6.499606,3.828772,-7.201729,1.080683,6.312408,8.754636,-3.784999,-7.201490,2.000751,4.226517,1.753531,7.852903,4.783771,4.221424,-9.631081,9.868070,-5.549187,-0.606176,3.913947,2.362401,-2.316696,-6.092389,4.926856,2.889689,6.758150,0.757867,-2.582437,9.731024,4.101508,8.012077,5.059744,-7.218693,8.457537,-5.930883,-8.206250,-7.149116,-9.662923,5.402316,0.604633,-9.460179,0.130947,0.022104,-4.460624,8.131090,9.223474,4.423898,-4.484751,4.587888,-5.553490,-9.234559,8.851910,-6.419580,2.206558,-1.492126,-7.578796,8.823412,-1.092608,-0.353923,-2.736814,2.965670,-5.559525,-9.966115,-2.948205,6.702663,1.214203,-3.617827,-4.831302,-4.132284,-5.365776,-4.355097,4.604996,4.456193,-4.426427,-2.167056,8.137621,-8.108268,-5.858717,-5.545515,-1.753292,-8.584549,8.964859,6.170619,5.767993,5.971973,-7.508338,-5.360718,-4.688614,7.166054,3.208516,3.963136,8.192488,2.358544,-6.363550,3.832725,2.086196,-2.281251,-2.605777,-7.027533,6.927446,5.059073,3.377611,7.218119,2.515379,-9.068033,-8.695088,-7.977496,6.244662,6.493152,5.157389,1.325718,-2.285319,-1.354949,2.842189,-0.424865,-4.427810,-9.015265,-3.103676,5.279695,-6.645316,-0.738184,1.099215,8.839431,-1.267885,-1.196103,2.937243,-9.858994,3.532051,-0.852029,1.848056,7.764872,-8.174201,5.903592,3.939867,8.423652,-7.065536,-4.713786,-5.517461,3.205600,3.589763,-8.923595,4.172065,-6.012692,5.016008,2.806292,-7.237504,4.992690,-0.549371,8.352399,0.063135,1.207217,-6.780334,-8.709562,5.994636,-7.215700,1.433261,0.955022,5.105196,-1.343729,-7.991650,-1.148958,-3.092132,-1.533747,-7.126670,7.977138,-3.469495,-9.341785,-2.785606,0.509736,-1.533045,-0.359571,-2.486823,-9.433190,-5.646902,4.626818,-9.287934,2.304758,4.930448,9.704190,0.687603,7.229178,3.798002,-4.782519,-4.816960,-1.774083,2.264781,4.004084,-2.983244,-3.847477,-4.238066,-1.290588,3.800882,8.648973,0.867526,-3.820810,5.297734,-3.473126,7.824028,1.093884,-7.327561,-4.044824,-5.081940,6.358346,4.348677,8.331805,2.354972,-1.028841,1.583354,2.265964,-9.829367,9.012875,-0.064068,9.689760,5.205164,4.006226,-6.118464,0.525269,4.608701,3.761807,-8.327048,-9.623915,-6.961493,-5.857798,0.732651,-1.470358,-0.852253,7.634383,1.213618,-5.500560,6.328195,-7.440703,-2.982519,2.876822,8.202277,-8.184165,7.291067,7.486213,-7.836307,-0.973034,-2.966172,5.012361,-1.437988,7.583021,2.478655,-8.530837,8.878721,-5.181060,9.494410,-1.042420,0.588327,-8.565155,5.331778,-3.051566,-0.410493,6.441826,-5.337961,1.409285,-5.406536,-6.118113,-8.727722,-7.816823,-0.783314,4.179266,-0.666506,-4.321020,6.712410,8.727093,-9.465638,-6.643867,-1.649386,3.036181,-9.786353,9.262873,4.301943,8.554900,2.597267,-5.714453,-3.242750,1.126890,7.063904,-0.935860,-2.372050,1.920152,-3.464591,2.874177,-2.246102,7.580879,9.355226,5.868549,-9.425624,5.330557,-9.907839,7.388168,0.857468,-8.105586,-3.623731,2.826871,-1.496359,-3.965205,-1.261142,3.369481,-5.582314,-8.040251,4.259526,9.253413,-8.728606,2.973195,-1.843812,4.900325,1.789147,-9.287017,0.081305,7.824848,-2.372369,-9.990546,4.069471,1.799951,-6.385263,-3.069793,0.656364,6.321329,-5.554869,3.836664,-5.402457,-9.000033,-1.209467,2.749653,5.282946,9.869572,-0.584137,-6.290384,0.219753,-6.140467,9.425158,8.030941,-5.332553,-0.689441,-4.131799,2.289134,4.918529,-0.120320,-9.834404,3.973481,-2.465109,5.389333,-3.066191,9.261372,-8.699895,1.556942,-2.508750,-5.472202,0.123618,5.066663,-8.412298,-4.602939,-9.847281,5.695989,5.407245,-7.080873,8.880358,-0.717007,-1.390653,0.219177,9.981705,-4.409438,-9.164121,-6.774095,-6.393428,9.094795,-7.354425,-5.405482,-2.891555,9.440749,-8.364859,-5.701344,-8.542663,6.433816,-7.340297,1.917832,6.446133,6.598625,-3.200267,2.296514,0.363249,-7.004452,9.594594,-2.917535,-8.365285,6.884006,-9.649096,9.757966,-5.389407,1.078844,4.584005,3.525157,-7.878355,-9.078502,-1.401629,9.498194,-5.926112,-0.487661,-4.111654,-1.731427,-1.743149,6.342118,5.561859,3.489235,2.046303,-4.083428,9.591955,9.230914,-2.971079,4.245021,-8.811012,-1.393420,-8.458699,-3.830800,1.342390,3.267977,-3.678662,-8.088242,9.533275,6.771711,-7.696446,-9.550813,8.781112,-6.731281,6.000878,6.204351,-8.017699,4.929240,-1.572009,-6.767708,-7.547349,4.548868,-5.022732,-2.407104,-8.507313,9.411104,2.903011,-0.602120,4.804097,-9.603516,-2.332445,-8.050139,5.138345,6.820390,1.962399,6.144812,-7.829412,-7.462747,3.627599,-1.789876,5.837959,-8.666331,3.208106,6.906277,8.307421,-8.539038,4.432926,6.607275,-9.397953,-7.729524,-9.506573,7.055103,8.306236,9.014734,-2.310515,-1.895125,3.506579,-3.701088,9.451523,-8.882345,9.366870,6.371070,8.142961,2.546900,5.115217,-5.757891,4.720245,-5.128427,4.425450,9.748839,-3.917862,1.723993,0.556578,-7.826157,-8.365574,9.515295,6.211349,-5.408748,0.982122,-5.745106,-7.386628,-7.010294,-5.729697,-5.827181,8.515712,0.232890,8.406664,0.401229,-4.207618,9.211772,-0.921273,-0.530994,6.915985,2.123371,-1.330649,-4.280884,-8.693976,0.624998,2.085997,-7.405500,0.116086,-5.829926,0.735660,2.073130,-0.494712,-8.138881,-0.573911,-3.751196,4.852252,-5.865919,-0.874016,-2.432466,-0.486831,8.704632,5.124831,-4.595430,-9.546363,5.251384,-4.104639,5.343638,-6.420347,-1.742933,6.483533,-5.934397,-7.467626,-3.407496,8.718330,2.334249,-4.770743,-7.274958,-6.097025,2.463948,4.701174,-9.747886,3.971821,-8.551503,1.389439,-7.035253,-5.086250,-2.099250,-8.201657,0.231914,2.376401,9.659485,4.883222,-8.108839,-3.326274,-5.469400,-5.328996,6.900317,4.895195,1.862750,-8.200258,1.408440,3.428065,2.680977,-7.305082,1.040057,2.776855,-1.643832,-1.748786,0.300840,-6.598698,6.265555,-0.785649,-4.679269,-7.315877,1.945228,-8.670234,4.301284,-4.868438,0.432858,3.229747,-4.650038,4.355671,-0.513267,1.716957,-9.333481,4.926510,5.710778,-8.042862,8.452695,0.332210,-4.988546,6.623570,2.590747,-4.050488,3.495118,-1.279259,9.604511,-9.244432,3.688470,9.028722,5.849969,5.515613,-5.488662,-9.700414,5.350161,-9.689244,8.695561,3.768180,8.348019,9.710480,-3.714182,0.820714,5.975924,5.428133,5.933829,-2.063411,7.372958,9.627567,-1.495255,-3.166408,-4.104611,0.436690,-3.591255,-4.780850,-7.048959,-3.487924,5.505668,-3.640288,8.325387,-0.976270,-0.457076,2.213506,-5.220083,-7.986804,3.673275,-3.849633,9.188880,5.809943,8.783690,-5.949468,-2.684040,-1.237186,-4.678538,-7.040988,-4.639882,-2.374188,-2.878063,-1.073619,4.486631,7.357414,5.689888,-3.487892,6.808083,7.187852,5.237484,-5.002990,-5.860047,-4.455153,-9.427714,1.920561,3.608184,1.335255,7.487704,-8.695910,-3.281182,7.047820,-3.454630,9.404304,-5.601825,-9.295487,-8.962799,8.337499,7.103123,1.877004,-9.171391,-3.867598,-6.460066,0.646592,9.664872,-2.425031,4.362784,-5.381589,9.750889,4.390361,-3.878326,-4.202309,7.312508,6.161511,8.730260,-9.473687,9.303710,1.894520,-9.634818,-1.466557,-1.163388,-5.760078,-8.952650,6.773166,-8.003348,9.101262,-9.116958,4.715097,0.901128,-8.495139,7.550377,6.267268,4.556164,-6.740791,6.679101,-5.617386,-3.907454,-5.500226,7.291214,-6.389549,-4.027229,-7.665803,1.966831,-9.748903,-1.833619,1.069507,8.257809,5.712624,4.275394,0.071882,-7.893490,6.607498,-2.079369,3.836058,2.832782,4.396066,-8.890884,8.828370,6.703246,-1.603682,-1.820522,0.174214,-0.816027,0.612612,-9.499341,6.615000,-1.981925,8.618139,-0.670611,-9.808317,1.099562,0.130134,3.998651,3.535588,4.874559,-3.889500,-3.451274,8.740908,-0.002217,-4.250102,1.415052,6.184083,-9.837909,-6.364217,-2.199979,5.308461,-2.862729,4.489503,6.091065,-5.614174,-3.463969,-6.850338,-3.548398,-4.452942,-7.019749,-8.204301,-2.335198,1.907022,-4.337591,4.561599,-5.560550,-1.146460,1.758599,-6.332510,1.838298,4.448945,-9.323827,-2.216698,-2.734322,8.706630,9.287196,-7.411973,-3.399136,6.953488,-1.060431,1.632426,7.303742,3.329230,2.379539,0.423796,9.985224,-5.864202,-9.130513,-2.485936,4.502831,-3.290624,6.348303,-8.890322,-7.238121,9.572265,-2.425033,-5.713886,-3.641036,8.266392,1.939935,-1.083188,2.472218,-3.949603,8.433050,-6.685233,7.990384,-0.213926,-7.493092,-1.982440,-5.733932,3.237659,-1.215451,-4.784433,2.378737,-6.630943,-2.022647,2.538529,5.870218,7.682331,0.966024,-4.118128,-8.212517,7.060405,4.905278,-6.183650,7.708490,8.743411,3.421453,9.041416,8.658549,4.987763,-3.737328,4.166544,4.682730,2.689646,3.730040,0.589972,-5.749820,-7.221977,-5.229672,8.845437,-6.298382,3.619114,-5.864865,-1.776007,-8.679951,7.915040,2.439127,-9.667105,3.960981,0.325193,8.997850,8.857906,0.331531,-7.298772,-2.852791,-6.135123,-8.549311,-5.662185,-5.664772,-8.817766,-0.817675,2.825813,-7.400860,-2.012374,9.172133,-3.832174,-0.216542,-4.341429,4.578842,3.009885,-5.037256,-5.231320,6.143675,1.591069,-9.470753,-3.040935,2.580878,-8.219202,-2.271789,-4.678389,-7.908013,-2.581616,-7.053990,-6.075410,1.882422,8.683547,7.095565,-9.126880,-6.971997,-5.320219,4.577800,1.013115,0.080607,5.959685,8.131522,0.014880,-0.164083,-5.507919,0.132436,9.075592,0.210709,-1.565726,-1.370351,4.306211,0.299118,5.291751,7.208345,7.043247,-9.992709,-0.053341,-8.564473,6.884753,9.029346,7.634849,2.011745,-1.477822,6.686036,5.792191,0.022649,-7.449155,0.512418,-9.346484,5.994538,5.078977,-7.733598,7.922944,3.390639,1.098309,-6.367387,1.393083,5.444139,-6.053674,4.263446,2.925366,5.672938,9.509246,4.334084,5.684387,9.076549,2.789861,-3.593880,8.421035,9.750978,-9.193473,2.477076,0.337006,3.585442,-1.878808,-8.188767,-2.296598,0.975864,-5.349657,0.211665,6.024931,-8.343557,-2.247547,8.067670,-3.661877,-1.937219,9.274469,8.746002,0.422280,-5.525496,2.614396,5.282447,-6.534654,4.468866,5.765374,-7.671408,5.175528,3.624088,0.234566,3.540020,-0.779197,6.774898,-8.060646,-3.596944,8.100640,1.695899,0.869599,-3.085955,9.744761,-5.070357,-4.688480,-3.960465,7.863535,6.129129,-5.275152,1.784954,2.685161,-4.227137,3.895926,7.525352,-9.693555,3.259022,4.215498,8.503905,1.599430,5.288235,2.647327,9.919561,-6.732444,1.956988,-4.320985,2.788175,6.097441,4.979925,-5.148920,-6.784885,8.537196,1.581594,5.241117,6.017595,-0.586273,1.541497,-7.335890,5.017471,0.206462,-5.242848,2.356159,4.624889,7.310538,6.430796,8.128112,-6.629228,7.236164,1.859729,1.962402,7.075283,-6.450980,3.372451,2.863385,6.179419,3.129543,-4.056445,0.275264,-9.595900,-7.273573,-4.657063,5.505197,-2.027123,-3.977364,3.664557,6.245002,-2.806780,6.105476,-1.990228,-8.003618,-3.387194,7.058622,-5.983686,-6.445255,-0.222562,-6.981567,5.091656,8.980288,-9.809626,1.181121,4.087709,-3.233772,-1.324005,2.156221,-2.945676,-1.474266,-4.431939,-8.157515,-0.146108,0.847096,1.274754,-5.152040,8.553010,7.658753,7.707838,1.651125,6.065956,-9.609391,-0.565981,-6.883111,5.670550,3.236387,3.378492,-7.334603,-1.140501,-2.073025,3.839279,-4.839312,-4.622107,-0.750970,9.399369,7.688934,0.543985,-9.505314,9.252649,7.370853,-3.829520,-2.473960,-9.995410,6.645077,-2.946895,-2.185497,-2.755023,-7.788669,-0.143172,0.202921,5.508367,-6.209535,-6.465566,-4.998576,-3.554241,5.823120,-1.888036,-8.324421,-7.493540,6.936267,2.685225,1.629538,4.414414,-7.403238,-7.220401,3.718491,-0.854481,7.392681,-3.865976,8.486023,5.865271,8.725056,-7.585250,-1.910771,-9.503000,-1.781312,1.082026,2.711961,6.006379,3.449837,0.481783,5.965834,-3.369494,7.176878,-9.934692,7.657740,8.773885,3.015830,-2.098866,-2.889759,-7.634394,-5.450324,-7.864806,-4.937587,-5.221409,-5.916958,-3.239942,1.554051,-6.513153,5.197182,1.890423,-2.803146,-2.846569,1.717806,2.960392,2.613677,-7.224037,5.661089,9.488499,-0.476624,9.272515,-0.056199,8.173559,4.414527,-7.051395,-0.488257,9.918986,-2.939196,9.170402,4.547749,5.598157,-1.001628,-3.824382,9.292449,1.757636,7.847363,-1.871974,-7.432545,-5.064144,4.590541,-3.708247,-7.920392,-7.558283,0.518071,-5.902043,-2.775049,2.519966,3.914989,-1.860938,-9.163799,1.380626,6.472502,5.196439,7.366665,7.835216,-4.471341,-5.530768,8.735532,6.621762,-6.557757,4.258831,9.967711,7.035029,3.990079,4.404296,5.005055,3.220181,-3.826803,-4.231804,-7.026335,-2.362768,-7.448327,-2.783960,0.965066,-2.658891,2.922816,-5.821542], dtype = "float32")#candidate|4789|(2400,)|const|float32
call_4788 = func_1243_call(relay.reshape(const_4789.astype('float32'), [10, 16, 15]))
call_4790 = func_1243_call(relay.reshape(const_4789.astype('float32'), [10, 16, 15]))
uop_4814 = relay.sqrt(const_4789.astype('float64')) # shape=(2400,)
output = relay.Tuple([call_4786,call_4788,uop_4814,])
output2 = relay.Tuple([call_4787,call_4790,uop_4814,])
func_4818 = relay.Function([], output)
mod['func_4818'] = func_4818
mod = relay.transform.InferType()(mod)
output = func_4818()
func_4819 = relay.Function([], output)
mutated_mod['func_4819'] = func_4819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_4834 = relay.TupleGetItem(func_2708_call(), 0)
call_4835 = relay.TupleGetItem(func_2710_call(), 0)
output = call_4834
output2 = call_4835
func_4847 = relay.Function([], output)
mod['func_4847'] = func_4847
mod = relay.transform.InferType()(mod)
output = func_4847()
func_4848 = relay.Function([], output)
mutated_mod['func_4848'] = func_4848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3631_call = mod.get_global_var('func_3631')
func_3632_call = mutated_mod.get_global_var('func_3632')
call_4851 = relay.TupleGetItem(func_3631_call(), 0)
call_4852 = relay.TupleGetItem(func_3632_call(), 0)
output = call_4851
output2 = call_4852
func_4862 = relay.Function([], output)
mod['func_4862'] = func_4862
mod = relay.transform.InferType()(mod)
mutated_mod['func_4862'] = func_4862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4862_call = mutated_mod.get_global_var('func_4862')
call_4863 = func_4862_call()
output = call_4863
func_4864 = relay.Function([], output)
mutated_mod['func_4864'] = func_4864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3295_call = mod.get_global_var('func_3295')
func_3297_call = mutated_mod.get_global_var('func_3297')
call_4894 = relay.TupleGetItem(func_3295_call(), 3)
call_4895 = relay.TupleGetItem(func_3297_call(), 3)
var_4896 = relay.var("var_4896", dtype = "float32", shape = (5, 8, 6))#candidate|4896|(5, 8, 6)|var|float32
bop_4897 = relay.greater_equal(call_4894.astype('bool'), relay.reshape(var_4896.astype('bool'), relay.shape_of(call_4894))) # shape=(5, 8, 6)
bop_4900 = relay.greater_equal(call_4895.astype('bool'), relay.reshape(var_4896.astype('bool'), relay.shape_of(call_4895))) # shape=(5, 8, 6)
uop_4901 = relay.sin(call_4894.astype('float64')) # shape=(5, 8, 6)
uop_4903 = relay.sin(call_4895.astype('float64')) # shape=(5, 8, 6)
func_3003_call = mod.get_global_var('func_3003')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_4912 = relay.TupleGetItem(func_3003_call(), 1)
call_4913 = relay.TupleGetItem(func_3004_call(), 1)
output = relay.Tuple([bop_4897,uop_4901,call_4912,])
output2 = relay.Tuple([bop_4900,uop_4903,call_4913,])
func_4916 = relay.Function([var_4896,], output)
mod['func_4916'] = func_4916
mod = relay.transform.InferType()(mod)
mutated_mod['func_4916'] = func_4916
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4917 = relay.var("var_4917", dtype = "float32", shape = (5, 8, 6))#candidate|4917|(5, 8, 6)|var|float32
func_4916_call = mutated_mod.get_global_var('func_4916')
call_4918 = func_4916_call(var_4917)
output = call_4918
func_4919 = relay.Function([var_4917], output)
mutated_mod['func_4919'] = func_4919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2722_call = mod.get_global_var('func_2722')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_4937 = func_2722_call()
call_4938 = func_2722_call()
func_3380_call = mod.get_global_var('func_3380')
func_3382_call = mutated_mod.get_global_var('func_3382')
call_4944 = func_3380_call()
call_4945 = func_3380_call()
output = relay.Tuple([call_4937,call_4944,])
output2 = relay.Tuple([call_4938,call_4945,])
func_4954 = relay.Function([], output)
mod['func_4954'] = func_4954
mod = relay.transform.InferType()(mod)
mutated_mod['func_4954'] = func_4954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4954_call = mutated_mod.get_global_var('func_4954')
call_4955 = func_4954_call()
output = call_4955
func_4956 = relay.Function([], output)
mutated_mod['func_4956'] = func_4956
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4970 = relay.var("var_4970", dtype = "int16", shape = (10, 13, 6))#candidate|4970|(10, 13, 6)|var|int16
const_4971 = relay.const([[[3,7,-10,-3,9,6],[-5,-2,5,9,-5,6],[8,8,2,-9,1,2],[1,4,-3,7,-1,6],[-9,7,6,7,-1,7],[-2,10,-6,-7,-6,-6],[1,6,4,-9,-8,8],[-2,-10,-9,6,-5,7],[9,-8,-4,5,-10,7],[-4,9,-3,-10,2,-9],[6,4,-2,-5,-6,-5],[7,-4,-2,1,9,1],[-8,8,10,-3,-3,-8]],[[-2,7,5,-6,3,-1],[5,2,-3,6,2,3],[3,8,7,-2,-10,4],[-10,-2,-4,-7,-7,3],[-2,3,-4,7,4,-5],[1,9,6,-9,-8,3],[-3,1,9,-10,-2,6],[1,3,-7,8,8,1],[5,-4,10,4,-8,-3],[-6,10,10,-4,-9,8],[-7,-6,-6,-1,-9,-3],[-2,4,2,1,-2,8],[6,5,-8,3,-9,-4]],[[-8,-7,2,7,9,-6],[-1,-2,7,-7,1,10],[4,9,-4,10,8,10],[9,3,-1,2,-7,6],[-4,1,-4,-7,6,-4],[6,2,-1,-3,-4,-2],[-7,-8,1,-10,-9,-2],[-4,3,-4,-10,-1,6],[9,-6,-6,-7,-5,7],[10,-2,-8,4,-3,4],[6,-8,8,-8,-3,-9],[5,10,-10,-5,-6,-9],[-1,-8,10,2,6,2]],[[5,-1,6,-7,-6,10],[-6,4,4,-6,-6,1],[-6,3,-4,6,-7,-10],[-8,6,4,10,3,-1],[9,3,-2,5,-7,10],[5,3,-4,7,-9,-8],[8,-4,3,-9,-1,-10],[-5,2,3,-5,9,-2],[-2,9,-3,6,-2,-6],[4,-9,-6,-1,-4,-4],[7,7,9,3,10,3],[-6,9,-9,-4,8,9],[10,8,-1,1,4,-5]],[[9,4,-9,-5,8,-2],[-8,-8,-10,2,-7,8],[-5,-7,8,3,10,-7],[6,4,5,-9,-6,9],[5,8,4,-9,4,7],[8,9,7,8,7,5],[10,7,2,2,9,-7],[-7,-1,10,4,8,-7],[1,-6,7,-2,-7,1],[-7,7,4,-9,10,-3],[-8,10,10,8,-3,10],[10,-7,3,8,-2,5],[1,-8,-4,3,5,5]],[[-1,7,-9,-3,10,-6],[7,-2,9,6,1,-2],[4,4,-9,7,4,-5],[2,10,8,-5,-9,6],[4,1,8,10,-7,1],[7,-7,1,-4,9,-7],[9,4,10,-10,-3,-2],[4,-1,10,8,-2,-8],[8,8,-3,4,6,4],[9,-10,6,-3,4,3],[8,1,8,-2,9,-4],[2,8,6,-4,7,7],[-4,4,-4,3,-10,-1]],[[2,-5,-5,5,4,5],[-5,-7,3,-6,4,-6],[-8,-2,1,-7,9,6],[-8,1,-4,6,-7,2],[6,-6,7,-1,-9,5],[8,-5,-1,-1,1,3],[-10,7,-9,-7,6,-7],[5,9,-3,-6,-4,8],[-1,6,-2,-9,5,2],[-2,3,2,10,10,-3],[-4,5,-9,5,3,2],[-10,10,7,-3,10,-7],[-8,2,-8,4,-4,-2]],[[-2,-3,-10,-2,5,10],[-3,1,9,-6,6,-8],[4,6,8,3,7,-7],[-10,-7,-1,7,10,-5],[-5,-7,-10,-5,6,4],[-1,4,-10,3,9,5],[9,-4,-9,7,4,6],[10,10,-5,9,-1,4],[-5,-1,8,-6,7,3],[1,-1,7,-8,-1,4],[3,1,-8,5,-1,8],[2,4,4,-5,-1,-1],[-4,-5,9,2,-5,-6]],[[-10,-6,9,10,-10,1],[4,-10,-4,3,-9,-6],[10,-10,1,-7,9,1],[9,-9,8,2,10,8],[2,6,10,2,8,-4],[-10,-7,6,6,9,-4],[-9,-8,-8,-3,-8,4],[8,9,-9,-4,-5,9],[1,7,-3,7,-7,1],[3,-8,2,8,-9,8],[9,-7,5,8,-1,7],[3,-8,-1,6,10,3],[-7,3,-10,-5,5,5]],[[-10,-7,5,-7,-8,-1],[-1,-2,-2,-4,-8,6],[-10,-6,3,-4,-4,3],[6,2,-6,-4,-1,-9],[-1,-3,-2,8,-9,6],[8,4,2,1,-9,2],[5,4,2,10,-8,6],[-9,-1,-9,-10,-10,6],[4,-10,2,10,-9,5],[8,9,-6,6,-7,6],[6,2,-10,8,8,9],[-3,9,-3,-7,10,7],[-9,5,-9,-2,7,-3]]], dtype = "int16")#candidate|4971|(10, 13, 6)|const|int16
bop_4972 = relay.bitwise_and(var_4970.astype('int16'), relay.reshape(const_4971.astype('int16'), relay.shape_of(var_4970))) # shape=(10, 13, 6)
func_4462_call = mod.get_global_var('func_4462')
func_4464_call = mutated_mod.get_global_var('func_4464')
call_4979 = func_4462_call()
call_4980 = func_4462_call()
bop_4990 = relay.subtract(var_4970.astype('uint16'), relay.reshape(bop_4972.astype('uint16'), relay.shape_of(var_4970))) # shape=(10, 13, 6)
func_1789_call = mod.get_global_var('func_1789')
func_1791_call = mutated_mod.get_global_var('func_1791')
const_4998 = relay.const([3.283497,-3.378001,-4.276652,6.735801,9.538686,-8.787437,-1.838757,-2.503416,-9.750150,-9.079895,4.234022,-6.191572,-9.627741,-9.515542,0.687340,-1.574881,-0.734091,1.362919,3.552031,0.979156,0.043131,-0.528243,-3.181505,1.845321,2.570356,8.403144,6.931045,6.016336,3.822220,2.813011,-1.391726,2.848429,4.841228,8.633212,2.086273,1.548451,-3.550539,-8.199677,-3.742413,6.042308,1.996208,2.487737,-4.088871,8.853248,-9.252274,-9.730029,-4.921471,0.252503,-9.321846,9.873124,1.252350,7.166612,-3.944602,8.523576,5.764889,-7.558150,8.776449,0.014695,1.946290,1.835149,-8.554526,-3.316662,1.970892,-5.263855,-3.465686,9.972681,-7.813239,-6.446285,7.520449,-4.034519,-4.319944,8.507946,-3.750931,-0.313536,8.077680,5.610444,8.296659,3.268402,1.864420,5.605197,7.176821,-3.098944,8.759541,-3.693139,-9.539718,9.406927,3.720900,-7.346252,4.937772,4.897370,-6.080617,-7.521578,-6.602792,-0.183089,4.881829,-2.877025,-3.534393,5.701852,5.345294,-1.984386,-4.852424,-2.665354,6.753168,9.667653,1.094087,9.987828,1.412203,-9.508948,3.774436,9.725420,-1.691741,5.139596,-9.550052,-4.244844,-4.439519,0.431624,-3.635007,8.083781,-0.694198,-3.104106,8.745827,1.482859,-2.547032,5.105615,-9.632549,-4.003434,-8.430661,-6.057942,-5.204009,-0.015307,7.631294,1.619217,7.583384,7.539027,9.181511,-4.199421,-3.859006,3.742008,6.494339,-2.791791,-4.604898,-1.645580,0.230862,1.548782,7.981185,-8.297631,-9.108160,-4.877038,-0.835810,6.632926,7.983395,3.713323,-5.947790,-2.465572,1.132647,6.012404,-7.568600,-2.857126,-4.493562,1.574240,7.285106,1.240046,-7.277429,9.467391,3.204841,-1.763516,-2.110346,-3.685373,6.188311,-8.438553,-5.054453,-5.031018,0.946967,-7.302479,-5.836839,2.355363,1.715445,4.062388,-5.341224,0.773630,-3.275208,3.661360,2.098045,6.612526,-4.537398,6.123519,3.129638,4.233664,-0.318095,6.054250,-7.002067,-0.709442,0.939826,7.009163,-5.709741,5.772910,-2.732943,-3.302976,6.533741,-6.851525,5.891036,-7.547340,5.032897,-0.401198,7.799197,5.107480,-6.263686,6.018165,1.885953,-4.759557,0.528416,-4.372998,-0.292176,5.480224,-0.641328,7.903054,1.957295,2.811075,-0.178577,-4.568356,3.889394,8.022645,7.742441,3.919170,0.910397,8.491194,0.253412,-0.566495,-6.805211,8.671826,-7.347770,-8.015113,-2.963607,-1.981572,5.454165,-8.118649,-4.234803,6.346306,7.418885,2.709129,-5.138913,5.174907,-9.602455,1.617066,-9.350552,-5.069464,2.313892,-3.084882,-6.560278,-8.138637,-9.438803,-6.036523,-0.493877,-7.290988,-0.533791,-0.343712,-9.591634,-6.293798,-1.623763,3.180575,1.950507,3.646158,4.721253,-6.027287,-3.635260,5.387267,-0.229313,-9.060515,6.754409,-8.424116,-6.811884,-3.030145,-9.684049,5.004664,-9.340954,0.573895,-6.489418,9.596673,5.559406,1.391073,-8.358884,-0.348566,-7.893157,-7.160335,2.262364,1.967193,0.750964,5.787324,7.523418,-3.137185,2.800324,4.628082,-8.466815,7.128978,-2.288241,-2.241481,-5.007739,8.116437,0.114518,-2.421951,-9.671962,-4.846602,-8.375769,-4.445986,-5.760877,7.335225,-1.481987,-9.124352,8.581584,-0.125352,-6.333924,7.685798,8.961399,-0.825460,-9.384561,-4.968648,-5.457337,-4.062233,-3.362649,-0.481962,-4.904162,-2.232495,-8.102849,5.986508,4.992834,-3.081047,-7.436375,-6.607574,-4.919040,-4.187230,6.988586,-7.040865,9.538659,-1.308877,5.618584,4.409624,9.815900,-0.544551,-2.193788,7.951377,-4.596078,8.761702,0.848707,-0.272706,-0.473062,-7.181478,0.630166,-4.143544,-9.356262,-4.659872,4.832888,5.067941,-2.918599,1.476826,7.670397,-4.592544,-7.393930,8.282185,8.430279,9.360747,-5.156954,9.104365,-4.398264,5.231905,9.769935,-7.160251,0.609617,0.209638,-5.484585,-1.970988,5.498737,5.107914,-5.594440,-6.784197,-4.408905,-8.193634,2.398018,0.266435,4.605518,-7.506224,-1.832435,8.509525,-3.788797,9.920664,1.256044,4.746804,-9.387893,-4.764264,1.352157,-7.818320,3.782063,-8.015502,7.352387,-8.943740,-5.261612,6.033070,-2.894463,-5.499142,4.913452,2.188373,7.032001,6.420841,6.471270,4.134324,-6.700495,-6.034811,-8.011726,2.521078,-7.755444,-7.905301,-7.856062,-8.353363,-1.953366,-5.829341,-8.336694,5.912123,-1.301010,-3.136400,-7.409226,-3.293916,7.626604,-8.519744,9.394395,7.756918,-8.197734,5.683445,6.198374,2.412037,-8.892728,5.679441,2.487531,2.600770,-6.949126,9.464447,6.116301,4.345723,-9.580877,-1.346592,9.630675,-2.800804,1.979776,8.712098,1.076876,-0.257977,-1.991340,-3.580431,-1.337752,8.721704,0.532962,-8.254528,-6.354575,-7.502587,3.178315,-6.966325,-9.403097,-9.413670,-4.454712,6.076472,-7.698849,-5.138749,2.357870,-7.590975], dtype = "float32")#candidate|4998|(462,)|const|float32
call_4997 = relay.TupleGetItem(func_1789_call(relay.reshape(const_4998.astype('float32'), [7, 6, 11])), 0)
call_4999 = relay.TupleGetItem(func_1791_call(relay.reshape(const_4998.astype('float32'), [7, 6, 11])), 0)
output = relay.Tuple([call_4979,bop_4990,call_4997,const_4998,])
output2 = relay.Tuple([call_4980,bop_4990,call_4999,const_4998,])
func_5005 = relay.Function([var_4970,], output)
mod['func_5005'] = func_5005
mod = relay.transform.InferType()(mod)
mutated_mod['func_5005'] = func_5005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5006 = relay.var("var_5006", dtype = "int16", shape = (10, 13, 6))#candidate|5006|(10, 13, 6)|var|int16
func_5005_call = mutated_mod.get_global_var('func_5005')
call_5007 = func_5005_call(var_5006)
output = call_5007
func_5008 = relay.Function([var_5006], output)
mutated_mod['func_5008'] = func_5008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_5018 = relay.TupleGetItem(func_2708_call(), 0)
call_5019 = relay.TupleGetItem(func_2710_call(), 0)
func_4847_call = mod.get_global_var('func_4847')
func_4848_call = mutated_mod.get_global_var('func_4848')
call_5022 = func_4847_call()
call_5023 = func_4847_call()
output = relay.Tuple([call_5018,call_5022,])
output2 = relay.Tuple([call_5019,call_5023,])
func_5031 = relay.Function([], output)
mod['func_5031'] = func_5031
mod = relay.transform.InferType()(mod)
output = func_5031()
func_5032 = relay.Function([], output)
mutated_mod['func_5032'] = func_5032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4564_call = mod.get_global_var('func_4564')
func_4565_call = mutated_mod.get_global_var('func_4565')
call_5053 = func_4564_call()
call_5054 = func_4564_call()
func_3143_call = mod.get_global_var('func_3143')
func_3145_call = mutated_mod.get_global_var('func_3145')
var_5056 = relay.var("var_5056", dtype = "int16", shape = (1155, 1))#candidate|5056|(1155, 1)|var|int16
call_5055 = relay.TupleGetItem(func_3143_call(relay.reshape(var_5056.astype('int16'), [1155,])), 3)
call_5057 = relay.TupleGetItem(func_3145_call(relay.reshape(var_5056.astype('int16'), [1155,])), 3)
bop_5067 = relay.minimum(var_5056.astype('int64'), call_5053.astype('int64')) # shape=(1155, 264)
bop_5070 = relay.minimum(var_5056.astype('int64'), call_5054.astype('int64')) # shape=(1155, 264)
output = relay.Tuple([call_5055,bop_5067,])
output2 = relay.Tuple([call_5057,bop_5070,])
func_5076 = relay.Function([var_5056,], output)
mod['func_5076'] = func_5076
mod = relay.transform.InferType()(mod)
var_5077 = relay.var("var_5077", dtype = "int16", shape = (1155, 1))#candidate|5077|(1155, 1)|var|int16
output = func_5076(var_5077)
func_5078 = relay.Function([var_5077], output)
mutated_mod['func_5078'] = func_5078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4862_call = mod.get_global_var('func_4862')
func_4864_call = mutated_mod.get_global_var('func_4864')
call_5182 = func_4862_call()
call_5183 = func_4862_call()
func_4024_call = mod.get_global_var('func_4024')
func_4028_call = mutated_mod.get_global_var('func_4028')
var_5185 = relay.var("var_5185", dtype = "int64", shape = (15,))#candidate|5185|(15,)|var|int64
call_5184 = relay.TupleGetItem(func_4024_call(relay.reshape(var_5185.astype('int64'), [3, 5]), relay.reshape(var_5185.astype('int64'), [3, 5]), ), 0)
call_5186 = relay.TupleGetItem(func_4028_call(relay.reshape(var_5185.astype('int64'), [3, 5]), relay.reshape(var_5185.astype('int64'), [3, 5]), ), 0)
output = relay.Tuple([call_5182,call_5184,var_5185,])
output2 = relay.Tuple([call_5183,call_5186,var_5185,])
func_5198 = relay.Function([var_5185,], output)
mod['func_5198'] = func_5198
mod = relay.transform.InferType()(mod)
mutated_mod['func_5198'] = func_5198
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5199 = relay.var("var_5199", dtype = "int64", shape = (15,))#candidate|5199|(15,)|var|int64
func_5198_call = mutated_mod.get_global_var('func_5198')
call_5200 = func_5198_call(var_5199)
output = call_5200
func_5201 = relay.Function([var_5199], output)
mutated_mod['func_5201'] = func_5201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3515_call = mod.get_global_var('func_3515')
func_3516_call = mutated_mod.get_global_var('func_3516')
call_5205 = relay.TupleGetItem(func_3515_call(), 0)
call_5206 = relay.TupleGetItem(func_3516_call(), 0)
func_4862_call = mod.get_global_var('func_4862')
func_4864_call = mutated_mod.get_global_var('func_4864')
call_5210 = func_4862_call()
call_5211 = func_4862_call()
output = relay.Tuple([call_5205,call_5210,])
output2 = relay.Tuple([call_5206,call_5211,])
func_5212 = relay.Function([], output)
mod['func_5212'] = func_5212
mod = relay.transform.InferType()(mod)
mutated_mod['func_5212'] = func_5212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5212_call = mutated_mod.get_global_var('func_5212')
call_5213 = func_5212_call()
output = call_5213
func_5214 = relay.Function([], output)
mutated_mod['func_5214'] = func_5214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3631_call = mod.get_global_var('func_3631')
func_3632_call = mutated_mod.get_global_var('func_3632')
call_5268 = relay.TupleGetItem(func_3631_call(), 0)
call_5269 = relay.TupleGetItem(func_3632_call(), 0)
func_1904_call = mod.get_global_var('func_1904')
func_1907_call = mutated_mod.get_global_var('func_1907')
var_5331 = relay.var("var_5331", dtype = "uint32", shape = (120,))#candidate|5331|(120,)|var|uint32
var_5332 = relay.var("var_5332", dtype = "uint32", shape = (1800,))#candidate|5332|(1800,)|var|uint32
call_5330 = func_1904_call(relay.reshape(var_5331.astype('uint32'), [12, 1, 10]), relay.reshape(var_5332.astype('uint32'), [12, 15, 10]), )
call_5333 = func_1904_call(relay.reshape(var_5331.astype('uint32'), [12, 1, 10]), relay.reshape(var_5332.astype('uint32'), [12, 15, 10]), )
bop_5358 = relay.greater(call_5330.astype('bool'), relay.reshape(var_5332.astype('bool'), relay.shape_of(call_5330))) # shape=(12, 15, 10)
bop_5361 = relay.greater(call_5333.astype('bool'), relay.reshape(var_5332.astype('bool'), relay.shape_of(call_5333))) # shape=(12, 15, 10)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
var_5372 = relay.var("var_5372", dtype = "int32", shape = (560, 1))#candidate|5372|(560, 1)|var|int32
call_5371 = relay.TupleGetItem(func_2510_call(relay.reshape(var_5372.astype('int32'), [560,])), 2)
call_5373 = relay.TupleGetItem(func_2512_call(relay.reshape(var_5372.astype('int32'), [560,])), 2)
func_4114_call = mod.get_global_var('func_4114')
func_4116_call = mutated_mod.get_global_var('func_4116')
var_5381 = relay.var("var_5381", dtype = "float64", shape = (264,))#candidate|5381|(264,)|var|float64
call_5380 = relay.TupleGetItem(func_4114_call(relay.reshape(var_5381.astype('float64'), [264,])), 3)
call_5382 = relay.TupleGetItem(func_4116_call(relay.reshape(var_5381.astype('float64'), [264,])), 3)
output = relay.Tuple([call_5268,var_5331,bop_5358,call_5371,var_5372,call_5380,var_5381,])
output2 = relay.Tuple([call_5269,var_5331,bop_5361,call_5373,var_5372,call_5382,var_5381,])
func_5393 = relay.Function([var_5331,var_5332,var_5372,var_5381,], output)
mod['func_5393'] = func_5393
mod = relay.transform.InferType()(mod)
var_5394 = relay.var("var_5394", dtype = "uint32", shape = (120,))#candidate|5394|(120,)|var|uint32
var_5395 = relay.var("var_5395", dtype = "uint32", shape = (1800,))#candidate|5395|(1800,)|var|uint32
var_5396 = relay.var("var_5396", dtype = "int32", shape = (560, 1))#candidate|5396|(560, 1)|var|int32
var_5397 = relay.var("var_5397", dtype = "float64", shape = (264,))#candidate|5397|(264,)|var|float64
output = func_5393(var_5394,var_5395,var_5396,var_5397,)
func_5398 = relay.Function([var_5394,var_5395,var_5396,var_5397,], output)
mutated_mod['func_5398'] = func_5398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4522_call = mod.get_global_var('func_4522')
func_4524_call = mutated_mod.get_global_var('func_4524')
call_5455 = relay.TupleGetItem(func_4522_call(), 3)
call_5456 = relay.TupleGetItem(func_4524_call(), 3)
output = relay.Tuple([call_5455,])
output2 = relay.Tuple([call_5456,])
func_5478 = relay.Function([], output)
mod['func_5478'] = func_5478
mod = relay.transform.InferType()(mod)
output = func_5478()
func_5479 = relay.Function([], output)
mutated_mod['func_5479'] = func_5479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4131_call = mod.get_global_var('func_4131')
func_4133_call = mutated_mod.get_global_var('func_4133')
call_5506 = relay.TupleGetItem(func_4131_call(), 0)
call_5507 = relay.TupleGetItem(func_4133_call(), 0)
func_2159_call = mod.get_global_var('func_2159')
func_2166_call = mutated_mod.get_global_var('func_2166')
const_5510 = relay.const([-4,9,-3,-4,-8,4,-5,10,2,6,5,-10,-6,-7,10,4,-4,-7,-3,-8,4,-9,-10,6,-7,3,-2,6,-9,-5,-10,5,2,-1,-5,-8,-4,7,5,9,6,3,4,5,4,-6,-1,-8,-5,9,-1,-8,-3,-10,-6,2,10,-1,-7,-2,8,-7,9,1], dtype = "int64")#candidate|5510|(64,)|const|int64
var_5511 = relay.var("var_5511", dtype = "uint64", shape = (288,))#candidate|5511|(288,)|var|uint64
const_5512 = relay.const([-2,4,2,3,6,-3,-8,8,-1,2,-6,-7,2,10,-5,-4,9,-3,3,-3,1,-10,4,-2,-10,-2,5,-1,-1,-1,-5,-5,2,-7,5,-3,-5,-5,5,-5,2,-3,-9,1,3,-10,6,5,5,-4,2,-7,2,-10,-9,-4,-6,-5,-9,-9,-10,-5,6,6,-1,-4,-8,4,2,1,-10,-2,9,-1,6,5,9,-4,-9,6,1,-5,-10,-10,-2,6,5,-6,7,-5,9,9,-9,3,-3,7,1,-2,-8,5,-5,-2,9,7,9,-9,1,6,-2,7,8,-9,4,9,-6,-4,5,3,5,-10,-1,3,-6,1,8,3,-2,6,-4,9,-9,-2,10,8,5,-2,-6,8,3,-10,-9,-6,5,-6,7,8,-10,-2,-8,-6,10,-9,2,-8,1,6,1,1,-6,-3,-2,-10,-3,-1,-7,-4,-6,3,2,-4,9,3,6,6,-8,-4,1,-3,10,-5,-4,6,-4,9,-2,9,5,-3,-3,-2,7,-5,1,3,3,-10,9,-6,-5,-8,-8,-8,8,-3,-8,6,-10,-4,-9,4,-6,-9,-8,-7,2,10,4,-4,-9,5,-9,-3,-2,-1,5,-2,-10,6,-8,3,-10,-7,-10,7,7,7,5,-6,-10,-9], dtype = "uint32")#candidate|5512|(240,)|const|uint32
call_5509 = relay.TupleGetItem(func_2159_call(relay.reshape(const_5510.astype('int64'), [4, 8, 2]), relay.reshape(const_5510.astype('int64'), [4, 8, 2]), relay.reshape(var_5511.astype('uint64'), [288,]), relay.reshape(const_5512.astype('uint32'), [4, 60]), relay.reshape(const_5510.astype('float32'), [4, 8, 2]), ), 4)
call_5513 = relay.TupleGetItem(func_2166_call(relay.reshape(const_5510.astype('int64'), [4, 8, 2]), relay.reshape(const_5510.astype('int64'), [4, 8, 2]), relay.reshape(var_5511.astype('uint64'), [288,]), relay.reshape(const_5512.astype('uint32'), [4, 60]), relay.reshape(const_5510.astype('float32'), [4, 8, 2]), ), 4)
func_3515_call = mod.get_global_var('func_3515')
func_3516_call = mutated_mod.get_global_var('func_3516')
call_5514 = relay.TupleGetItem(func_3515_call(), 0)
call_5515 = relay.TupleGetItem(func_3516_call(), 0)
output = relay.Tuple([call_5506,call_5509,const_5510,var_5511,const_5512,call_5514,])
output2 = relay.Tuple([call_5507,call_5513,const_5510,var_5511,const_5512,call_5515,])
func_5517 = relay.Function([var_5511,], output)
mod['func_5517'] = func_5517
mod = relay.transform.InferType()(mod)
mutated_mod['func_5517'] = func_5517
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5518 = relay.var("var_5518", dtype = "uint64", shape = (288,))#candidate|5518|(288,)|var|uint64
func_5517_call = mutated_mod.get_global_var('func_5517')
call_5519 = func_5517_call(var_5518)
output = call_5519
func_5520 = relay.Function([var_5518], output)
mutated_mod['func_5520'] = func_5520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3838_call = mod.get_global_var('func_3838')
func_3839_call = mutated_mod.get_global_var('func_3839')
call_5561 = relay.TupleGetItem(func_3838_call(), 0)
call_5562 = relay.TupleGetItem(func_3839_call(), 0)
output = relay.Tuple([call_5561,])
output2 = relay.Tuple([call_5562,])
func_5564 = relay.Function([], output)
mod['func_5564'] = func_5564
mod = relay.transform.InferType()(mod)
output = func_5564()
func_5565 = relay.Function([], output)
mutated_mod['func_5565'] = func_5565
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5576 = relay.const([[[3.445249,-6.132718],[-8.272818,-9.302152],[-0.016594,-6.199319],[-5.412819,9.959022],[9.885118,1.407364],[9.639157,-7.227307],[-9.629557,1.954874],[-6.578261,8.898724],[9.442634,5.266237],[8.978884,3.173583],[-4.461633,-9.013023],[-7.082269,-5.634464],[-6.641786,7.475841],[0.132190,-6.903480],[-4.195168,-7.899976]],[[-5.689462,-3.330147],[9.158852,-0.347966],[7.061292,7.787071],[2.308020,8.180816],[5.477695,0.496855],[3.932130,3.053629],[1.019262,-1.017137],[-7.001750,-8.559465],[-8.078235,-3.657555],[3.787669,-0.149804],[-6.279148,-1.048944],[0.922024,9.864923],[4.323388,0.679124],[-1.717476,6.552573],[-0.185757,9.283962]],[[-9.047802,0.358713],[-8.285943,-4.755906],[-7.109445,4.688387],[-9.482191,-6.022002],[0.941021,9.586953],[1.506658,8.583990],[6.812264,0.955785],[-7.817693,-8.345372],[-5.872282,-3.210891],[7.285472,-0.175276],[3.527177,3.876973],[4.104618,-1.380149],[9.096737,2.554085],[-1.499517,-7.926668],[9.045399,5.813394]],[[-0.204795,-5.292160],[2.214030,-8.010930],[-1.562662,5.126310],[-5.610085,4.163322],[-6.802148,-2.684221],[5.868133,-1.778708],[-7.892589,-8.170799],[-4.808676,7.424661],[4.447484,-6.329397],[-3.371226,-5.061317],[3.381788,4.714661],[-1.408024,-2.207155],[-1.278874,-1.094115],[-8.317088,5.354906],[-9.516789,4.891733]],[[2.906616,3.127502],[-3.646060,0.174017],[-2.041614,1.838640],[6.061635,3.740419],[-2.295982,4.284549],[-8.852903,-1.245098],[-1.156845,5.938229],[2.515420,-0.132029],[-4.973992,-7.572337],[3.733163,9.664001],[0.910231,9.503743],[8.419192,-0.740899],[-9.561875,-9.427528],[4.311168,-5.008897],[-2.291134,-2.678765]],[[-9.031664,-5.258076],[0.965477,5.490374],[0.283725,-4.599861],[-4.925772,6.925279],[7.411962,3.052788],[6.468668,-1.988229],[-4.749102,6.198206],[6.882684,4.052631],[-3.316921,-9.099841],[-5.449875,-0.141272],[-6.137855,-9.305907],[-9.316639,9.610102],[5.634847,-0.824624],[-9.090283,9.718274],[8.260628,-6.376502]],[[1.781284,-1.626401],[3.515983,4.462826],[-0.619337,8.564501],[-5.022126,7.266380],[-8.874830,-3.755210],[2.581732,-1.297439],[-9.858932,4.127083],[-2.810502,-1.339623],[5.636332,6.472468],[9.401161,-9.437455],[-9.578968,-2.647585],[1.236069,-5.690597],[-5.231400,5.898767],[3.883438,-9.546163],[5.076816,7.016750]],[[3.530759,9.333478],[-2.952717,5.959307],[8.696733,2.393212],[-0.490369,5.175227],[-0.182123,3.375163],[-7.680497,-5.291867],[-2.238783,4.233511],[-8.677848,-0.465900],[-6.119103,-4.676073],[-2.851972,-0.935556],[5.300983,-2.484610],[-4.804296,8.525969],[2.833519,1.685721],[3.394278,2.125971],[-0.783727,-6.537583]],[[9.389037,-1.715406],[-3.353675,-5.156632],[5.861731,2.759567],[-8.065832,-8.470203],[8.895084,2.197754],[-8.693251,-1.964232],[4.051481,6.022015],[9.810527,-8.504336],[-4.844630,-8.924165],[-5.973545,-6.056203],[-4.103185,-6.922926],[6.015903,5.077432],[0.078095,1.125233],[6.628596,6.646043],[0.921469,7.959123]],[[-2.083671,7.657487],[-3.471610,-4.473614],[-9.828817,-2.960331],[-9.912419,2.005471],[4.419542,-7.391089],[-6.007129,-9.974391],[7.510310,-8.417869],[0.035258,4.424356],[3.195411,-0.251808],[7.487805,-4.588539],[2.273765,-6.133647],[-6.825000,9.444675],[-7.936595,-1.752139],[3.183552,-1.408678],[-8.539419,1.798648]]], dtype = "float32")#candidate|5576|(10, 15, 2)|const|float32
uop_5577 = relay.asin(const_5576.astype('float32')) # shape=(10, 15, 2)
output = uop_5577
output2 = uop_5577
func_5579 = relay.Function([], output)
mod['func_5579'] = func_5579
mod = relay.transform.InferType()(mod)
output = func_5579()
func_5580 = relay.Function([], output)
mutated_mod['func_5580'] = func_5580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3838_call = mod.get_global_var('func_3838')
func_3839_call = mutated_mod.get_global_var('func_3839')
call_5581 = relay.TupleGetItem(func_3838_call(), 1)
call_5582 = relay.TupleGetItem(func_3839_call(), 1)
func_4916_call = mod.get_global_var('func_4916')
func_4919_call = mutated_mod.get_global_var('func_4919')
call_5586 = relay.TupleGetItem(func_4916_call(relay.reshape(call_5581.astype('float32'), [5, 8, 6])), 0)
call_5587 = relay.TupleGetItem(func_4919_call(relay.reshape(call_5581.astype('float32'), [5, 8, 6])), 0)
func_2980_call = mod.get_global_var('func_2980')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_5596 = relay.TupleGetItem(func_2980_call(), 1)
call_5597 = relay.TupleGetItem(func_2982_call(), 1)
func_4564_call = mod.get_global_var('func_4564')
func_4565_call = mutated_mod.get_global_var('func_4565')
call_5623 = func_4564_call()
call_5624 = func_4564_call()
output = relay.Tuple([call_5581,call_5586,call_5596,call_5623,])
output2 = relay.Tuple([call_5582,call_5587,call_5597,call_5624,])
func_5625 = relay.Function([], output)
mod['func_5625'] = func_5625
mod = relay.transform.InferType()(mod)
output = func_5625()
func_5626 = relay.Function([], output)
mutated_mod['func_5626'] = func_5626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5212_call = mod.get_global_var('func_5212')
func_5214_call = mutated_mod.get_global_var('func_5214')
call_5633 = relay.TupleGetItem(func_5212_call(), 1)
call_5634 = relay.TupleGetItem(func_5214_call(), 1)
func_5005_call = mod.get_global_var('func_5005')
func_5008_call = mutated_mod.get_global_var('func_5008')
var_5660 = relay.var("var_5660", dtype = "int16", shape = (130, 6))#candidate|5660|(130, 6)|var|int16
call_5659 = relay.TupleGetItem(func_5005_call(relay.reshape(var_5660.astype('int16'), [10, 13, 6])), 3)
call_5661 = relay.TupleGetItem(func_5008_call(relay.reshape(var_5660.astype('int16'), [10, 13, 6])), 3)
func_4024_call = mod.get_global_var('func_4024')
func_4028_call = mutated_mod.get_global_var('func_4028')
const_5665 = relay.const([9,8,-4,7,-9,10,9,-3,-6,7,2,4,-9,-5,10], dtype = "int64")#candidate|5665|(15,)|const|int64
call_5664 = relay.TupleGetItem(func_4024_call(relay.reshape(const_5665.astype('int64'), [3, 5]), relay.reshape(const_5665.astype('int64'), [3, 5]), ), 0)
call_5666 = relay.TupleGetItem(func_4028_call(relay.reshape(const_5665.astype('int64'), [3, 5]), relay.reshape(const_5665.astype('int64'), [3, 5]), ), 0)
output = relay.Tuple([call_5633,call_5659,var_5660,call_5664,const_5665,])
output2 = relay.Tuple([call_5634,call_5661,var_5660,call_5666,const_5665,])
func_5668 = relay.Function([var_5660,], output)
mod['func_5668'] = func_5668
mod = relay.transform.InferType()(mod)
mutated_mod['func_5668'] = func_5668
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5669 = relay.var("var_5669", dtype = "int16", shape = (130, 6))#candidate|5669|(130, 6)|var|int16
func_5668_call = mutated_mod.get_global_var('func_5668')
call_5670 = func_5668_call(var_5669)
output = call_5670
func_5671 = relay.Function([var_5669], output)
mutated_mod['func_5671'] = func_5671
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5675 = relay.constdtype = "float64")#candidate|5675|(14, 10, 16)|const|float64
var_5676 = relay.var("var_5676", dtype = "float64", shape = (14, 10, 16))#candidate|5676|(14, 10, 16)|var|float64
bop_5677 = relay.less_equal(const_5675.astype('bool'), relay.reshape(var_5676.astype('bool'), relay.shape_of(const_5675))) # shape=(14, 10, 16)
func_5517_call = mod.get_global_var('func_5517')
func_5520_call = mutated_mod.get_global_var('func_5520')
const_5697 = relay.const([6,10,6,9,9,-4,-3,-1,-5,5,4,6,-10,-10,-1,-10,6,-3,3,8,5,6,-10,-7,7,-1,-3,10,2,-6,6,-8,-9,7,-4,-3,-8,8,-7,-3,6,5,2,5,-7,5,-8,-8,-3,-8,-1,-5,-9,8,-8,10,4,-5,3,8,-10,5,-5,4,7,4,-2,-8,-4,7,-7,7,-4,-8,10,-9,9,10,-9,4,6,-8,9,-1,2,8,-7,-3,-5,8,-8,-8,2,-3,-2,-9,-4,-1,2,-9,-10,-6,-10,-5,-9,-2,9,4,-6,4,-3,-10,-1,2,-1,-10,8,7,4,-4,-7,1,-4,9,1,2,8,3,-1,5,-7,-4,-2,4,-4,-10,-3,-7,8,-1,-9,5,2,-9,2,-4,8,4,8,-7,-6,-3,9,-8,-8,-8,-9,-6,-10,4,10,2,6,9,6,8,4,3,-3,-10,9,8,10,8,1,-3,2,1,5,-3,8,3,3,3,6,-7,-3,2,10,-5,-4,4,-8,-7,6,4,-1,4,-2,2,-4,2,1,-1,7,-4,6,8,-4,7,-5,6,5,-4,8,-8,2,-10,-5,5,-8,-3,-10,10,-8,-6,5,10,1,-10,7,-9,-7,3,-9,4,-9,4,9,-3,-1,9,10,-8,5,-8,-6,-3,-8,-7,-5,6,9,3,-6,-7,7,2,7,-8,2,5,7,-2,-4,-3,1,5,1,-2,-8,1,4,3,-7,-6,-1,6,-8,-2,-9,-3,4,2,10,2,2,-3], dtype = "uint64")#candidate|5697|(288,)|const|uint64
call_5696 = relay.TupleGetItem(func_5517_call(relay.reshape(const_5697.astype('uint64'), [288,])), 1)
call_5698 = relay.TupleGetItem(func_5520_call(relay.reshape(const_5697.astype('uint64'), [288,])), 1)
func_3003_call = mod.get_global_var('func_3003')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_5714 = relay.TupleGetItem(func_3003_call(), 1)
call_5715 = relay.TupleGetItem(func_3004_call(), 1)
uop_5724 = relay.rsqrt(const_5675.astype('float32')) # shape=(14, 10, 16)
func_3168_call = mod.get_global_var('func_3168')
func_3171_call = mutated_mod.get_global_var('func_3171')
call_5750 = relay.TupleGetItem(func_3168_call(relay.reshape(call_5696.astype('int64'), [5, 8, 6])), 1)
call_5751 = relay.TupleGetItem(func_3171_call(relay.reshape(call_5696.astype('int64'), [5, 8, 6])), 1)
uop_5760 = relay.log(uop_5724.astype('float32')) # shape=(14, 10, 16)
output = relay.Tuple([bop_5677,call_5696,const_5697,call_5714,call_5750,uop_5760,])
output2 = relay.Tuple([bop_5677,call_5698,const_5697,call_5715,call_5751,uop_5760,])
func_5762 = relay.Function([var_5676,], output)
mod['func_5762'] = func_5762
mod = relay.transform.InferType()(mod)
mutated_mod['func_5762'] = func_5762
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5763 = relay.var("var_5763", dtype = "float64", shape = (14, 10, 16))#candidate|5763|(14, 10, 16)|var|float64
func_5762_call = mutated_mod.get_global_var('func_5762')
call_5764 = func_5762_call(var_5763)
output = call_5764
func_5765 = relay.Function([var_5763], output)
mutated_mod['func_5765'] = func_5765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3982_call = mod.get_global_var('func_3982')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_5782 = relay.TupleGetItem(func_3982_call(), 0)
call_5783 = relay.TupleGetItem(func_3983_call(), 0)
output = call_5782
output2 = call_5783
func_5784 = relay.Function([], output)
mod['func_5784'] = func_5784
mod = relay.transform.InferType()(mod)
mutated_mod['func_5784'] = func_5784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5784_call = mutated_mod.get_global_var('func_5784')
call_5785 = func_5784_call()
output = call_5785
func_5786 = relay.Function([], output)
mutated_mod['func_5786'] = func_5786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5784_call = mod.get_global_var('func_5784')
func_5786_call = mutated_mod.get_global_var('func_5786')
call_5790 = func_5784_call()
call_5791 = func_5784_call()
output = relay.Tuple([call_5790,])
output2 = relay.Tuple([call_5791,])
func_5796 = relay.Function([], output)
mod['func_5796'] = func_5796
mod = relay.transform.InferType()(mod)
output = func_5796()
func_5797 = relay.Function([], output)
mutated_mod['func_5797'] = func_5797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2249_call = mod.get_global_var('func_2249')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_5809 = relay.TupleGetItem(func_2249_call(), 0)
call_5810 = relay.TupleGetItem(func_2251_call(), 0)
output = relay.Tuple([call_5809,])
output2 = relay.Tuple([call_5810,])
func_5812 = relay.Function([], output)
mod['func_5812'] = func_5812
mod = relay.transform.InferType()(mod)
mutated_mod['func_5812'] = func_5812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5812_call = mutated_mod.get_global_var('func_5812')
call_5813 = func_5812_call()
output = call_5813
func_5814 = relay.Function([], output)
mutated_mod['func_5814'] = func_5814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5812_call = mod.get_global_var('func_5812')
func_5814_call = mutated_mod.get_global_var('func_5814')
call_5843 = relay.TupleGetItem(func_5812_call(), 0)
call_5844 = relay.TupleGetItem(func_5814_call(), 0)
output = call_5843
output2 = call_5844
func_5845 = relay.Function([], output)
mod['func_5845'] = func_5845
mod = relay.transform.InferType()(mod)
mutated_mod['func_5845'] = func_5845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5845_call = mutated_mod.get_global_var('func_5845')
call_5846 = func_5845_call()
output = call_5846
func_5847 = relay.Function([], output)
mutated_mod['func_5847'] = func_5847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3515_call = mod.get_global_var('func_3515')
func_3516_call = mutated_mod.get_global_var('func_3516')
call_5860 = relay.TupleGetItem(func_3515_call(), 1)
call_5861 = relay.TupleGetItem(func_3516_call(), 1)
var_5880 = relay.var("var_5880", dtype = "float32", shape = (5, 8, 6))#candidate|5880|(5, 8, 6)|var|float32
bop_5881 = relay.bitwise_xor(call_5860.astype('uint16'), relay.reshape(var_5880.astype('uint16'), relay.shape_of(call_5860))) # shape=(5, 8, 6)
bop_5884 = relay.bitwise_xor(call_5861.astype('uint16'), relay.reshape(var_5880.astype('uint16'), relay.shape_of(call_5861))) # shape=(5, 8, 6)
func_2793_call = mod.get_global_var('func_2793')
func_2798_call = mutated_mod.get_global_var('func_2798')
var_5887 = relay.var("var_5887", dtype = "float64", shape = (1008,))#candidate|5887|(1008,)|var|float64
const_5888 = relay.const([8.096192,3.709710,-6.515662,-2.876856,-6.915241,2.018399,9.248884,2.682388,3.488028,-6.697279,-1.064512,-0.006803,7.837552,6.332126,9.737213,8.935559,1.740824,7.673676,9.197291,-0.647522,-5.072025,8.149460,-6.081019,-0.942267,-9.692760,-9.819290,-8.846296,1.288486,-5.858893,2.934299,-2.839752,-0.706905,6.979321,5.594328,0.478781,-0.713781,-6.055371,-2.520769,-2.877333,-8.559575,0.536517,-9.957810,-6.273156,1.969257,-1.336570,-3.565562,9.290996,-7.541894,-3.466249,9.155203,-5.443006,-2.009476,4.466316,8.567210,0.273244,1.819846,-4.290121,-0.607837,7.335580,7.258431,-4.811945,-4.902907,2.184939,-0.216211,8.873318,7.748773,8.713249,-9.387319,-6.846674,3.645099,4.258567,-4.791563,-9.814007,-6.319281,-0.023330,3.270904,5.498084,-3.350498,-8.680080,9.108972,7.958674,9.999914,-7.265103,5.171920,-0.206325,-1.525491,0.815267,2.119370,0.196944,-9.523241,-8.162936,4.876293,5.232469,-0.358605,-7.785775,5.892293,-3.160076,1.200216,-6.455442,-8.727175,2.662494,7.420785,4.742754,-6.725633,-4.607213,6.956059,-0.044884,7.839421,-2.100946,7.689586,5.585625,-5.004534,-7.318176,-3.634206,8.318481,9.961628,1.604985,9.178108,5.801980,5.407518,-5.191609,-4.771076,9.872364,5.267891,2.786571,2.103794,1.415297,9.870677,0.692575,8.684780,-2.114356,2.135598,3.210195,-9.162005,-5.171342,-0.514049,-3.693579,3.946223,-1.980253,-9.087787,1.715064,-7.519957,0.124576,-0.845211,0.963078,8.738719,-1.321128,3.000402,-7.357245,2.451379,-2.848285,0.818492,-2.975138,-7.117609,5.689646,7.391912,-1.141771,-6.325033,1.708641,-2.985900,-6.499422,-3.271422,-6.411484,-3.789795,2.559512,0.593197,3.115422,4.815202,5.288428,3.782066,-3.601200,-0.283794,-3.643242,-4.666473,0.816361,3.493188,9.792391,9.883295,3.770345,-1.178155,6.922075,-3.779997,-1.532762,-1.639782,-8.819925,0.191166,-7.262184,9.647625,-5.256877,-2.987408,7.432049,9.498491,9.555105,-9.002842,-6.168566,-9.917701,6.837852,-2.379685,-2.761774,2.896235,-5.243971,4.763774,-0.105864,-2.776580,-3.270254,6.643358,-2.044436,-9.327699,7.657806,-3.840058,2.756398,9.286887,-8.617066,4.362870,-2.690608,6.093948,9.090515,-2.176221,6.772381,-3.000132,0.020930,1.547917,-9.283675,-9.548243,4.555405,6.538918,0.099573,2.679485,-5.096189,-3.150065,1.498684,-2.398232,-0.836643,1.089028,1.521007,8.171006,3.796761,-5.789469,7.589887,9.366713,3.423672,3.705044,5.160800,-3.095121,8.925809,-6.496081,-6.189990,1.229962,1.180877,3.927677,-3.541007,-6.646290,0.626945,0.569571,0.457556,1.226893,9.302310,6.954543,8.339889,1.992480,-0.809087,-8.056456,-5.701775,5.010741], dtype = "float64")#candidate|5888|(264,)|const|float64
var_5889 = relay.var("var_5889", dtype = "float64", shape = (132, 24))#candidate|5889|(132, 24)|var|float64
call_5886 = relay.TupleGetItem(func_2793_call(relay.reshape(var_5887.astype('float64'), [1008,]), relay.reshape(const_5888.astype('float64'), [1, 264]), relay.reshape(var_5889.astype('float64'), [12, 264]), ), 0)
call_5890 = relay.TupleGetItem(func_2798_call(relay.reshape(var_5887.astype('float64'), [1008,]), relay.reshape(const_5888.astype('float64'), [1, 264]), relay.reshape(var_5889.astype('float64'), [12, 264]), ), 0)
func_5393_call = mod.get_global_var('func_5393')
func_5398_call = mutated_mod.get_global_var('func_5398')
var_5892 = relay.var("var_5892", dtype = "uint32", shape = (120,))#candidate|5892|(120,)|var|uint32
var_5893 = relay.var("var_5893", dtype = "uint32", shape = (900, 2))#candidate|5893|(900, 2)|var|uint32
var_5894 = relay.var("var_5894", dtype = "int32", shape = (560,))#candidate|5894|(560,)|var|int32
call_5891 = relay.TupleGetItem(func_5393_call(relay.reshape(var_5892.astype('uint32'), [120,]), relay.reshape(var_5893.astype('uint32'), [1800,]), relay.reshape(var_5894.astype('int32'), [560, 1]), relay.reshape(const_5888.astype('float64'), [264,]), ), 3)
call_5895 = relay.TupleGetItem(func_5398_call(relay.reshape(var_5892.astype('uint32'), [120,]), relay.reshape(var_5893.astype('uint32'), [1800,]), relay.reshape(var_5894.astype('int32'), [560, 1]), relay.reshape(const_5888.astype('float64'), [264,]), ), 3)
output = relay.Tuple([bop_5881,call_5886,var_5887,const_5888,var_5889,call_5891,var_5892,var_5893,var_5894,])
output2 = relay.Tuple([bop_5884,call_5890,var_5887,const_5888,var_5889,call_5895,var_5892,var_5893,var_5894,])
func_5898 = relay.Function([var_5880,var_5887,var_5889,var_5892,var_5893,var_5894,], output)
mod['func_5898'] = func_5898
mod = relay.transform.InferType()(mod)
mutated_mod['func_5898'] = func_5898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5898_call = mutated_mod.get_global_var('func_5898')
var_5900 = relay.var("var_5900", dtype = "float32", shape = (5, 8, 6))#candidate|5900|(5, 8, 6)|var|float32
var_5901 = relay.var("var_5901", dtype = "float64", shape = (1008,))#candidate|5901|(1008,)|var|float64
var_5902 = relay.var("var_5902", dtype = "float64", shape = (132, 24))#candidate|5902|(132, 24)|var|float64
var_5903 = relay.var("var_5903", dtype = "uint32", shape = (120,))#candidate|5903|(120,)|var|uint32
var_5904 = relay.var("var_5904", dtype = "uint32", shape = (900, 2))#candidate|5904|(900, 2)|var|uint32
var_5905 = relay.var("var_5905", dtype = "int32", shape = (560,))#candidate|5905|(560,)|var|int32
call_5899 = func_5898_call(var_5900,var_5901,var_5902,var_5903,var_5904,var_5905,)
output = call_5899
func_5906 = relay.Function([var_5900,var_5901,var_5902,var_5903,var_5904,var_5905,], output)
mutated_mod['func_5906'] = func_5906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3631_call = mod.get_global_var('func_3631')
func_3632_call = mutated_mod.get_global_var('func_3632')
call_5914 = relay.TupleGetItem(func_3631_call(), 0)
call_5915 = relay.TupleGetItem(func_3632_call(), 0)
func_5796_call = mod.get_global_var('func_5796')
func_5797_call = mutated_mod.get_global_var('func_5797')
call_5919 = relay.TupleGetItem(func_5796_call(), 0)
call_5920 = relay.TupleGetItem(func_5797_call(), 0)
output = relay.Tuple([call_5914,call_5919,])
output2 = relay.Tuple([call_5915,call_5920,])
func_5931 = relay.Function([], output)
mod['func_5931'] = func_5931
mod = relay.transform.InferType()(mod)
mutated_mod['func_5931'] = func_5931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5931_call = mutated_mod.get_global_var('func_5931')
call_5932 = func_5931_call()
output = call_5932
func_5933 = relay.Function([], output)
mutated_mod['func_5933'] = func_5933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2937_call = mod.get_global_var('func_2937')
func_2938_call = mutated_mod.get_global_var('func_2938')
call_5973 = func_2937_call()
call_5974 = func_2937_call()
output = relay.Tuple([call_5973,])
output2 = relay.Tuple([call_5974,])
func_5979 = relay.Function([], output)
mod['func_5979'] = func_5979
mod = relay.transform.InferType()(mod)
output = func_5979()
func_5980 = relay.Function([], output)
mutated_mod['func_5980'] = func_5980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2937_call = mod.get_global_var('func_2937')
func_2938_call = mutated_mod.get_global_var('func_2938')
call_6014 = func_2937_call()
call_6015 = func_2937_call()
uop_6037 = relay.asinh(call_6014.astype('float32')) # shape=(5, 8, 6)
uop_6039 = relay.asinh(call_6015.astype('float32')) # shape=(5, 8, 6)
func_4407_call = mod.get_global_var('func_4407')
func_4410_call = mutated_mod.get_global_var('func_4410')
var_6043 = relay.var("var_6043", dtype = "int32", shape = (160,))#candidate|6043|(160,)|var|int32
call_6042 = func_4407_call(relay.reshape(var_6043.astype('int32'), [8, 5, 4]), relay.reshape(var_6043.astype('int32'), [8, 5, 4]), )
call_6044 = func_4407_call(relay.reshape(var_6043.astype('int32'), [8, 5, 4]), relay.reshape(var_6043.astype('int32'), [8, 5, 4]), )
output = relay.Tuple([uop_6037,call_6042,var_6043,])
output2 = relay.Tuple([uop_6039,call_6044,var_6043,])
func_6056 = relay.Function([var_6043,], output)
mod['func_6056'] = func_6056
mod = relay.transform.InferType()(mod)
mutated_mod['func_6056'] = func_6056
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6057 = relay.var("var_6057", dtype = "int32", shape = (160,))#candidate|6057|(160,)|var|int32
func_6056_call = mutated_mod.get_global_var('func_6056')
call_6058 = func_6056_call(var_6057)
output = call_6058
func_6059 = relay.Function([var_6057], output)
mutated_mod['func_6059'] = func_6059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3295_call = mod.get_global_var('func_3295')
func_3297_call = mutated_mod.get_global_var('func_3297')
call_6109 = relay.TupleGetItem(func_3295_call(), 0)
call_6110 = relay.TupleGetItem(func_3297_call(), 0)
output = relay.Tuple([call_6109,])
output2 = relay.Tuple([call_6110,])
func_6113 = relay.Function([], output)
mod['func_6113'] = func_6113
mod = relay.transform.InferType()(mod)
output = func_6113()
func_6114 = relay.Function([], output)
mutated_mod['func_6114'] = func_6114
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6209 = relay.const([[[-6.365350,8.446296,7.634279,3.618762,7.704893,6.585789,-2.950201,-5.064095,6.156114,5.254243]],[[7.053759,-1.796154,7.385500,-4.757043,-5.608916,-8.426275,5.963787,-1.368435,-4.753083,-6.548288]],[[-9.544425,-7.130656,-3.641252,-0.472715,1.895408,2.969249,8.056066,2.454410,9.492467,-4.407216]],[[8.893252,0.197010,3.734168,-3.785575,7.405431,4.363234,-1.158422,-7.044098,7.311075,-0.278276]],[[-7.613167,4.309441,-0.025565,5.607976,-6.949390,9.862074,-9.138720,-9.122406,-6.643085,-2.215414]],[[2.372700,7.857483,1.320756,-9.171262,-7.725308,4.218229,9.978896,-5.113823,-4.819961,8.290298]],[[3.227017,-2.920709,5.546977,4.964392,8.575491,-5.087606,-4.342704,-3.051283,3.670086,-2.924349]],[[-4.954933,3.504174,-8.845460,0.916447,4.187091,4.772852,7.037534,-6.903698,-6.190351,-6.530470]],[[9.923133,-6.933294,-7.070620,-1.763421,2.868040,8.889650,-2.671641,5.873397,-3.969959,7.739892]],[[-0.846893,-3.024021,3.429221,-5.021138,3.276192,8.118413,3.650472,-7.224145,7.305485,-1.339088]],[[4.508323,-1.652390,-9.037659,-3.962442,-4.218795,-7.152474,-0.280224,-6.991249,0.955706,2.119790]]], dtype = "float32")#candidate|6209|(11, 1, 10)|const|float32
uop_6210 = relay.acos(const_6209.astype('float32')) # shape=(11, 1, 10)
bop_6213 = relay.maximum(uop_6210.astype('uint8'), relay.reshape(const_6209.astype('uint8'), relay.shape_of(uop_6210))) # shape=(11, 1, 10)
var_6225 = relay.var("var_6225", dtype = "float32", shape = (11, 13, 10))#candidate|6225|(11, 13, 10)|var|float32
bop_6226 = relay.equal(const_6209.astype('bool'), var_6225.astype('bool')) # shape=(11, 13, 10)
func_4564_call = mod.get_global_var('func_4564')
func_4565_call = mutated_mod.get_global_var('func_4565')
call_6239 = func_4564_call()
call_6240 = func_4564_call()
uop_6251 = relay.tan(var_6225.astype('float64')) # shape=(11, 13, 10)
bop_6256 = relay.equal(uop_6210.astype('bool'), relay.reshape(const_6209.astype('bool'), relay.shape_of(uop_6210))) # shape=(11, 1, 10)
uop_6260 = relay.erf(const_6209.astype('float64')) # shape=(11, 1, 10)
bop_6271 = relay.minimum(uop_6251.astype('int32'), bop_6213.astype('int32')) # shape=(11, 13, 10)
uop_6282 = relay.log2(var_6225.astype('float64')) # shape=(11, 13, 10)
var_6286 = relay.var("var_6286", dtype = "float32", shape = (11, 12, 10))#candidate|6286|(11, 12, 10)|var|float32
bop_6287 = relay.power(const_6209.astype('float32'), var_6286.astype('float32')) # shape=(11, 12, 10)
uop_6293 = relay.log2(bop_6213.astype('float32')) # shape=(11, 1, 10)
func_3318_call = mod.get_global_var('func_3318')
func_3321_call = mutated_mod.get_global_var('func_3321')
var_6297 = relay.var("var_6297", dtype = "int8", shape = (540,))#candidate|6297|(540,)|var|int8
call_6296 = relay.TupleGetItem(func_3318_call(relay.reshape(var_6297.astype('int8'), [540,])), 2)
call_6298 = relay.TupleGetItem(func_3321_call(relay.reshape(var_6297.astype('int8'), [540,])), 2)
bop_6300 = relay.logical_and(bop_6287.astype('bool'), uop_6210.astype('bool')) # shape=(11, 12, 10)
func_2617_call = mod.get_global_var('func_2617')
func_2620_call = mutated_mod.get_global_var('func_2620')
const_6308 = relay.const([-1.473541,9.790062,9.322522,4.736105,-2.435193,-2.360173,-6.824546,-9.370369,4.549562,-8.481309,-3.252318,6.691322,-1.628867,-6.385622,7.156919,7.332428,7.655853,-1.530911,2.702624,-5.509968,-8.856161,4.276961,-4.442236,9.623369,-7.683179,6.577655,6.245781,-8.897573,-2.268892,2.743738,-9.816380,7.922424,-3.351049,-7.530232,1.971320,2.458051,1.508056,-3.163255,-2.970587,-8.545423,-4.498279,4.144656,-6.885458,4.440933,-3.249399,-1.656949,1.228963,-5.303746,-3.993703,0.880211,-1.639179,0.637487,5.316079,3.662925,-3.753735,8.170863,7.903232,-3.262111,-2.100213,-3.832400,9.969671,4.470799,-4.831991,-1.442581,7.757681,-8.078663,-3.954211,9.343622,-7.098210,3.748779,-2.975366,5.707013,1.530536,-9.271211,5.373703,9.402573,1.128254,4.218593,-3.207450,-5.149439,3.609800,1.619389,5.198079,-3.810973,7.880259,-9.876223,-4.318657,-3.233787,1.957360,4.001440,9.037187,8.399434,2.595151,2.627286,-7.320239,9.893404,-8.147981,6.928175,-3.112019,2.093703,4.953525,7.520774,1.851927,-4.184058,-9.826287,8.030288,-5.552510,4.749701,9.739282,0.759829,-7.330951,-1.581313,-2.745608,-3.716478,0.347510,-0.415828,9.729710,-5.641807,6.480915,-8.093992,-2.560932,-7.374551,-5.847046,-5.905090,-8.861068,-0.943894,3.966367,0.002147,-4.864132,-5.215524,-1.454277,4.265216,-9.725687,-0.515971,-8.733389,-5.048163,3.102586,0.849673,-1.181199,5.340715,7.688178,5.092199,-6.680150,-2.269729,8.056793,-4.198344,-3.703889,0.839743,2.643357,-0.198682,-7.486999,-9.759577,3.661142,-6.461575,-2.338511,-3.979165,3.329322,-1.102233,9.154479,-0.780629,5.954482,-5.951923,-3.260138,-0.387952,3.437507,4.868497,4.733527,7.875371,2.930147,-4.671473,-2.707608,-6.641463,0.791182,5.096646,9.568397,1.906674,7.884000,-1.678843,0.497434,9.559380,-2.065744,7.277786,3.945267,-8.542990,-9.020580,-4.932108,-5.793016,-5.888729,3.812044,-8.561548,1.417651,3.447550,5.940009,8.270036,-4.744837,3.836750,6.391199,8.091346,-2.946199,-6.775884,-3.157347,5.662888,4.085833,-3.618399,0.055493,9.171227,-5.533487,0.440999,5.484767,4.726174,-8.166927,-6.451942,9.489021,-3.612046,9.988089,-6.420390,4.096424,-0.015782,3.677538,7.137582,8.686484,5.008558,9.891284,4.472806,8.278880,-9.974136,-7.637669,-5.654980,-6.551481,3.182173,7.553807,-3.588083,9.969760,1.123207,3.274871,0.616510,7.446614,8.296221,-2.092578,3.765509,7.908883,9.191251,-5.971496,8.953553,-2.059138,3.681217,-3.702983,-0.460393,-2.483543,-3.326945,-3.945641,8.108152,-6.549145,-3.082996,9.787481,6.693285,7.132752,-6.199376,-0.282928,4.170482,-7.881105,-8.306430,-5.597844,-7.889031,-6.876808,-2.801764,1.620502,-0.958736,-8.641229,-8.093237,5.712635,-6.329130,-7.727665,-5.098199,-9.255156,5.407322,-8.799389,5.449967,-6.674931,-9.207492,-8.167157,1.760024,-2.809092,-8.587506,-5.731109,-5.232071,-6.132251,-5.295727,-1.213235,3.789759,-6.764796,9.963278,-7.375840,3.673611,6.546702,4.343974,4.838447,6.814046,-1.003990,-0.516361,-3.898081,-2.028812,-4.847468,8.849990,-1.507624,2.112024,6.086833,4.571837,-6.589354,-6.715910,-1.076155,1.778326,-1.226130,1.993758,-1.574239,4.506880,0.699765,2.939840,-8.575226,-0.665486,3.966403,-9.119234,-0.235047,-1.657667,-8.446111,-6.767829,-5.726220,-9.233716,-3.120578,-7.075919,-4.522461,7.987780,8.923636,3.162290,9.888537,-7.597941,5.321598,7.690890,4.744169,-2.624066,-6.847789,-3.149107,8.275038,4.819647,0.012511,-8.353853,3.424811,4.974688,5.072978,1.204566,-7.264132,2.102508,-5.657991,9.379969,1.394343,6.061350,8.971979,-5.872300,1.485845,-2.464428,7.537166,-2.646554,5.832830,-7.642984,-4.926118,4.306179,6.366801,-1.209329,-8.920646,8.748438,-8.885917,3.514766,2.718119,-9.483869,-4.371099,5.991589,4.311869,-7.924551,5.263268,8.417492,-3.635882,-2.039142,-5.328494,2.963574,-2.002951,-9.891640,-0.170615,-1.153439,7.278945,-5.648395,-0.415096,-2.850635,0.886782,-9.484292,3.004654,-2.505954,-2.935389,4.924962,0.087140,9.034862,-0.760100,-5.690263,-7.550716,-8.688615,1.676369,3.956261,-1.966880,-3.046461,-1.384078,-3.871454,-4.087624,-9.467210,3.223695,5.160429,-0.940429,-4.457021,-8.085453,5.743141,-0.661183,0.844935,-8.922926,2.664066,-4.044781,-4.826715,-6.469215,-6.480081,3.366962,9.733670,-8.067400,-1.078229,-6.470201,1.838625,6.327761,5.652665,-2.015658,-6.664112,2.445199,3.289670,8.140323,-4.094374,-0.831911,-3.073482,6.280068,-9.925570,8.282431,8.491997,-3.154056,-3.397265,4.678208,5.294157,-7.175037,8.186051,1.190361,2.637302,-3.169807,-6.032689,-0.108958,8.967300,-0.668784,-7.056776,-9.580829,9.847950,-9.496953,-5.023430,5.930681,-6.701519,4.352896,2.797624,-3.121071,9.560305,6.514478,-9.687393,2.289328,6.987282,7.233197,2.278278,2.730543,-9.538840,-2.397288,-1.846173,-2.277755,-2.299065,-8.373638,-2.034521,-3.060344,2.446645,1.290400,-0.922297,9.971304,6.762312,3.465330,-2.700711,9.093742,-3.274778,-3.824998,-5.200237,8.091588,-8.297830,-0.923900,2.532423,5.390670,-6.449535,-5.360400,2.990493,8.672829,-7.598390,1.476743,1.915594,-6.563453,-3.566534,-4.390839,7.411353,7.546226,0.918850,6.855220,1.394479,-7.297187,8.509607,-1.346539,-7.811618,7.156127,-5.980677,-3.891032,-4.105841,5.522360,6.343082,1.749140,-9.206683,-5.485934,-5.943334,-4.256709,-5.788655,-4.680213,5.534115,-9.437775,-5.656569,-4.242862,-9.946883,-9.303493,0.478775,-2.820880,-7.903961,-0.617092,-9.773443,-7.077225,-8.077395,-2.938239,4.818562,-2.569955,6.883703,6.181198,8.358154,-6.451919,-3.743679,-0.978458,7.018900,-1.132826,-6.769356,-8.352202,4.000186,1.963751,0.704522,9.673649,-1.672738,7.494524,-4.847492,6.964854,-8.035571,-2.206607,6.272752,1.149610,6.692297,-8.185605,-9.394447,-2.648256,5.617765,7.086836,-6.074093,-4.605808,-2.162882,-6.622727,-5.616402,-6.982016,-1.509948,6.018312,1.352596,-0.307908,-3.132306,-0.591487,6.878284,-1.984121,9.218376,8.734711,-1.176175,-7.317080,1.430377,-0.468668,3.048872,-3.312735,9.368252,3.237998,-0.645525,9.169915,-4.168544,4.971390,-6.932112,-4.687445,1.185033,4.435086,7.079008,3.370255,2.923600,-5.358182,-8.752539,-8.469042,-4.161292,6.848251,8.147750,1.842041,-8.973762,5.018078,8.767811,-3.884989,7.609835,-7.873486,-1.976168,8.874440,6.326152,-7.907755,-3.149239,6.963797,-8.038833,-9.463086,8.738945,1.924494,-5.282863,5.472845,-8.733151,6.490705,1.645790,1.347018,1.250085,3.479958,-9.321909,-3.098875,-9.529663,-4.063562,-7.496819,-3.893756,-3.116423,-9.100154,-3.301306,-9.588399,6.275269,-9.270590,-1.541216,-2.684896,-1.010857,-8.327255,8.616232,-3.673433,1.976498,-2.324130,9.906417,5.717383,-3.135024,-4.800856,0.767447,-6.194355,-5.536387,-7.643340,-7.793196,-1.293897,-5.891712,9.180529,-3.107992,-0.266320,-6.074852,1.297611,3.275599,-1.129646,-2.261867,6.483014,4.328311,8.250248,-7.011534,-7.603155,-6.644484,-8.616522,-5.692606,0.970452,1.002500,-3.845739,-1.352747,9.843463,-2.081716,-0.001860,-9.123184,7.395755,9.223032,-1.669761,-7.441388,-6.586516,6.576576,8.049742,-7.368783,-5.539087,-9.155819,-3.306111,5.918518,2.536328,9.597713,-8.584182,7.686247,0.950582,-7.301429,-8.470344,0.888674,-7.993489,9.258402,-5.805133,-9.324374,9.289339,5.023557,2.865653,7.212963,-4.116644,-5.022631,0.439009,-0.062829,-0.649839,-0.552510,9.679117,5.905168,-2.505105,-8.926154,7.893302,-5.027769,8.002931,-4.151661,-1.327815,6.772540,-7.748798,5.362469,9.166899,-0.185293,0.415200,4.367989,-9.528541,-8.229100,4.624829,6.002864,0.452811,-4.316348,9.020355,8.528050,-5.338767,2.611056,8.132423,-2.545672,-7.505931,-3.170244,9.073445,2.119395,7.792848,8.182537,-8.503081,3.671950,-7.577930,-4.062860,-3.447038,4.047530,2.145797,8.964516,9.240831,9.981012,-6.048919,1.206360,8.846286,-0.147374,-0.238258,-3.489238,-7.247046,-8.273455,4.725842,8.267582,6.497651,-8.285618,6.518577,1.580986,-9.457794,-3.119654,-8.498697,-8.622540,-2.184330,-5.854470,-1.970484,2.477968,-1.063141,5.682533,6.706299,9.580143,5.957090,8.108156,9.161763,-9.445075,2.697863,3.553603,-7.811580,-8.672132,-1.376290,-9.323414,2.473006,7.286220,6.627046,8.882780,5.332321,2.750288,-0.938206,4.059379,3.195394,2.792334,8.182612,4.463571,9.312317,-8.033413,-6.661337,-2.474682,5.701125,-9.281430,6.073811,8.910383,-4.304023,5.456067,4.292157,3.906987,-5.416811,3.406498,9.707736,-9.200583,-1.793391,-4.587647,2.118698,-2.815661,-6.255443,7.137221,-7.497780,5.707708,-9.170868,-7.229282,0.198861,-9.316627,-0.495889,5.653224,-1.840686,-8.232359,9.234467,-3.631667,-4.438726,3.887271,4.838743,-1.376880,7.255357,-1.277895,-1.303484,9.449428,-7.204971,-8.732063,8.616574,-5.440200,5.296760,1.580764,7.140763,5.729529,-1.481131,2.965682,7.846832,-3.933637,4.292858,-0.692360,1.797681,2.060849,-4.522340,-5.364359,-7.412864,5.430185,-3.278729,-3.835724,-8.494606,9.043549,-3.463558,-9.755702,-3.404176,-9.310065,-0.012067,9.062232,-9.581571,6.322548,-0.245905,-9.838140,2.175722,-1.881119,-8.660653,7.546104,-6.438538,-7.560204,4.371979,3.948726,5.256575,2.718021,-1.295121,7.500833,-0.833967,4.778382,-5.517610,6.286246,-2.049169,5.290557,-0.062028,6.268959,0.717308,2.764344,1.704699,-2.923883,-4.508937,-0.885849,5.099123,0.900461,-8.831772,-4.284830,-1.648483,-6.747150,-2.756637,-6.810733,5.793011,7.631881,3.080851,4.570023,4.448381,0.596952,-8.114024,5.127540,3.553657,3.229292,2.802395,-7.829710,8.239636,-8.962467,2.424675,-8.178843,9.539822,1.849162,-0.802825,0.007719,9.690704,1.868525,-6.864700,9.719098,1.034592,4.611278,-4.606416,-0.187898,7.382340,3.596929,0.390083,4.980192,-3.741754,7.526063,7.908210,-3.456297,5.686773,-4.167202,-3.936075,4.147220,-6.954241,0.117605,3.380795,-1.161008,-3.873991,2.934412,6.405746,-7.588239,2.736729,-4.109896,-1.177203,2.709661,-8.520581,0.843275,3.600889,-2.303567,-7.187282,1.263801,-0.053497,-4.244866,3.792675,-2.718757,-1.544398,-7.154418,9.709204,-4.221969,-4.532597,9.212920,-8.991409,2.994076,-2.040702,9.833837,5.751634,-1.379276,7.044320,1.489806,-6.796104,9.427744,-5.998473,-3.121742,0.465201,-5.990741,5.236761,-9.506501,-2.232834,0.463562,-0.344358,2.107050,8.675068,9.919375,-2.159604,-9.729093,-2.756236,0.126317,2.078232,-4.620495,9.200703,-3.749424,7.503049,-7.377778,0.059001,-0.893925,-6.370028,8.159401,0.923894,-1.649225,5.483098,-2.555709,3.629684,7.869574,3.455467,0.972519,-7.963578,4.529922,-6.788981,6.177180,-6.152065,8.455543,-9.808799,-7.839551,9.354578,4.849615,4.492848,1.383607,-4.639944,-0.821240,-5.819142,-8.281162,6.977155,-1.757347,9.313565,5.370558,5.625304,-9.173119,-9.476670,4.395857,-0.022011,-0.222737,-5.563592,-5.626134,-6.509576,3.746520,-6.541768,5.634507,4.894524,7.465509,-3.220241,-4.525438,-1.731430,8.400283,-7.472008,-2.024119,9.126411,-0.930450,-7.980030,-4.620772,9.498800,-9.089250,7.016666,-9.296022,6.089976,5.667018,-1.950299,-7.687640,4.139671,3.370341,-0.986201,-7.177444,2.604460,-3.420018,8.579479,-1.092879,-0.291531,-7.773959,3.832772,-9.532161,-4.842574,-3.614902,-7.606996,7.425924,-5.002411,5.720201,4.254742,-7.274160,-9.185135,-7.526057,-7.328924,0.503591,5.550546,-5.425154,-5.852094,-5.915381,8.520977,6.302881,5.782766,5.161435,-6.071406,-5.602467,-3.218619,-7.787264,2.307260,-7.401768,8.022209,-7.045305,5.048938,1.502647,-1.005133,-6.417032,-9.652530,8.043276,4.236103,0.402972,8.180627,6.631414,1.005617,-4.085136,-0.316983,-0.977068,-4.705754,4.691737,6.990850,8.640287,-4.185174,1.409834,-3.026513,-3.853408,2.903904,3.813051,3.999046,-9.620272,-8.134311,-7.527642,9.696932,-1.520333,4.769147,5.611055,6.917855,-0.257525,6.174120,-1.456259,-6.940039,5.872484,8.895794,-3.804282,0.112175,0.755392,-7.338392,-9.042084,-7.492087,6.041098,-1.903966,-3.483819,-4.712126,3.703485,7.728971,3.338901,-7.294213,4.859570,7.704559,9.992892,9.518236,-6.424936,-1.955880,7.414524,4.911351,-8.658786,-7.894417,9.184858,-1.543030,-1.739238,4.865642,0.694013,-4.293198,0.942648,5.770989,-7.562836,5.820447,-9.849241,6.782509,-2.418908,-9.109271,6.797750,3.989919,9.404987,4.009065,9.329191,9.938211,3.844537,-2.584627,9.352958,8.900510,-7.846594,-9.183284,-1.099140,-8.755955,1.973309,8.788506,3.247322,7.731119,-0.600545,-3.336115,3.222033,4.166566,3.516610,1.034118,9.636897,-4.316139,6.623591,-9.274800,9.856795,-1.236167,5.582663,1.941596,7.720760,-8.272253,5.813833,4.759560,-3.356070,8.132058,-9.430249,6.055915,9.119365,6.584777,-5.652967,-6.224063,3.051196,-1.914131,1.183227,0.356667,6.550105,-7.776969,4.144152,1.784746,-3.452533,8.562381,-4.389719,-6.684937,0.852813,-1.126104,0.522637,1.828683,-0.806101,-9.153297,0.786218,-4.429094,8.126531,1.399108,-8.040252,-8.082636,-2.450832,-0.031717,-0.257445,-0.947770,-7.155971,-1.760071,-9.712755,-4.223356,6.640617,-5.083057,5.074743,7.698492,5.400979,7.686558,-2.336233,3.267646,3.801000,0.307255,-9.944154,0.242361,-0.476860,2.769020,8.031916,7.249602,-7.992190,3.029632,-8.518081,-0.917374,-5.045580,-4.465046,6.603720,8.691246,0.649815,3.123018,-7.886733,-6.995769,-8.010463,7.956849,-1.366005,-7.848105,-0.666840,-8.910621,1.450014,3.156920,-9.191071,-9.297008,0.458377,-1.694379,-7.436079,-3.365895,2.592079,6.031311,-7.998158,4.488307,-9.812709,5.672239,-8.499196,8.213244,-0.272473,9.910611,-4.684600,6.750633,5.938914,-7.147622,4.916254,-1.976165,-4.441088,-9.042918,7.152065,3.049126,9.402483,-0.083291,-8.681800,3.953131,-0.812560,1.121185,-0.091866,-7.159585,-3.948396,1.112037,-3.664238,-7.407123,-8.956568,8.510902,0.131990,1.104375,-4.492318,-3.456567,9.144484,4.328467,-5.135520,2.755396,2.215942,-0.953187,-4.467956,4.077322,9.780225,6.638447,-1.556047,2.928953,8.903471,9.670853,3.545193,-2.216248,9.484628,-0.380418,-6.487682,2.724404,-8.485007,-3.903153,7.723387,2.235775,7.458523,-4.398773,7.352089,1.549556,-3.907613,-3.198942,-9.942397,5.500950,2.410026,7.694599,0.089201,6.270966,-0.410288,-5.492775,-2.020650,5.548293,9.904534,4.654760,4.806175,8.615294,2.436057,7.874770,4.780798,-9.458867,6.897526,-2.738616,-8.764212,-5.867886,4.942047,-2.778811,-3.095996,-0.195835,-3.499377,-1.006010,-6.075881,7.274594,-9.735661,-5.388874,8.996790,-2.555446,-1.189636,5.255816,-3.900949,-4.206282,0.970442,3.413614,-2.127415,3.180879,-6.221734,-4.822586,7.874540,-7.729881,8.130381,2.917858,8.691078,2.598923,8.604735,-8.355840,-9.490152,2.841811,-7.810733,6.560160,-6.934133,3.001109,-2.428598,-5.995723,2.688610,2.381839,8.711170,-6.563817,-1.004060,-6.540226,-3.449656,-1.275542,1.860425,-5.975113,-8.413454,-1.763240,-5.925627,1.858322,-4.279905,5.886217,0.532641,-4.495438,7.980294,5.456729,-1.803393,8.738307,1.621889,4.724399,-0.081616,-2.574232,5.374020,4.790685,-4.398775,-8.020448,-1.589947,-3.086501,0.173187,-9.235822,8.290106,-0.617694,-9.807646,2.743796,0.359751,-5.658215,-1.019305,4.984445,-4.297008,-6.409047,6.854979,5.816469,-8.845525,0.790651,-0.410239,-4.788567,-0.717924,4.740701,8.906488,-3.378117,2.391106,-0.216357,2.950272,2.339469,-1.151181,-4.513594,-3.563348,-8.015828,5.422218,-7.143912,6.460388,-1.640477,-6.803358,-8.745463,-6.372179,-6.407558,-1.190316,1.289720,-5.627833,5.767081,-7.778683,3.004526,2.518678,9.994150,0.893951,-2.321209,5.783245,-3.860913,-0.983620,9.603219,0.985130,-0.073929,-7.986400,2.312113,-7.352862,2.424096,-2.195377,1.825103,-7.032707,4.533686,9.074161,3.281396,-1.958783,-3.523419,-1.743288,2.779605,7.980610,8.149750,3.361623,9.848428,7.928711,3.350212,9.034129,0.510177,7.866023,1.521105,-7.413268,1.669847,1.169079,7.763095,9.316310,0.926206,-3.327256,-1.475385,-6.549399,7.025172,5.604745,8.186706,-5.643921,-1.519789,2.480967,-3.949186,-6.379178,-3.760610,8.037651,-5.729834,-2.812785,3.097316,-1.206191,4.082524,3.306864,6.940154,7.256717,5.558637,4.386417,3.350121,-5.752324,0.960964,-0.608758,-9.302343,6.247821,-4.673418,-3.568511,5.726685,-8.874466,5.485648,6.330184,-9.785745,-5.739942,-7.847619,6.286270,-2.247196,0.788440,6.409637,-2.311768,1.581723,-5.398489,0.754734,-1.165094,4.157765,7.974303,-5.096335,9.266653,2.060659,1.072560,-3.097496,-7.567801,-0.193588,-6.600545,8.254852,4.532913,-2.711814,-0.195355,-3.616564,-0.131565,1.520576,8.452191,2.412433,-3.251191,-7.524637,-2.331586,4.894403,6.201190,3.982485,7.039109,-3.169404,0.327115,-1.829590,7.166938,-0.163770,-1.544792,7.286453,-1.031613,5.793665,-2.864486,-2.565666,-4.603342,4.692640,8.137135,0.139652,5.749832,0.495205,-8.049908,-1.373962,-3.967334,-4.149429,9.438902,-3.203259,-4.520943,-2.548501,7.204897,0.262084,-9.715293,-8.783812,1.465859,-0.785283,8.836554,-2.270159,8.785993,3.927727,9.527582,0.663990,-1.851508,-8.401394,1.036580,2.499595,9.005167,-7.334166,1.020986,9.887432,-4.002269,2.145100,7.471138,4.250373,-4.676062,3.780008,-9.950250,-3.823265,-6.329487,5.422909,-3.101519,0.068345,-0.083414,8.858245,-5.202080,-4.480973,6.567527,-0.979644,8.890124,6.843226,2.363545,-2.968911,5.959859,-4.537969,0.904987,9.547207,-3.708035,-4.387093,-7.763349,-9.250496,-9.768380,6.308106,-8.397940,0.117167,-1.963725,8.521012,6.253906,8.915054,0.593645,-3.496298,-5.340134,-1.483130,-4.598295,4.232519,-9.539106,8.707154,-8.279945,-6.207231,8.269527,7.604063,9.210332,5.012287,-8.966528,5.329763,-6.359247,-5.431410,-2.480761,9.746463,3.588745,4.456013,-6.376965,2.421875,-5.191531,1.884402,6.451916,2.638202,9.061052,9.035430,6.871718,3.789979,-6.053654,-3.256373,-2.454267,-8.859226,-8.301802,-8.279473,-7.658421,-7.760684,0.946279,-5.538069,-0.061892,0.240699,-9.071513,6.376612,-6.915802,9.123851,-6.806523,7.898791,8.170801,7.960530,5.985325,-6.801773,7.381238,-1.114621,-3.349329,7.193507,-5.056710,2.910333,8.415750,7.908923,0.612573,-1.307449,-2.032448,9.304073,4.402429,-9.873140,-7.579388,5.398756,5.816466,-0.362100,-3.811887,-1.392997,9.533450,-2.127287,-6.740994,-6.644958,-0.194240,5.667871,-0.744779,2.910237,0.629052,-3.004249,-1.777952,1.847205,-9.453000,-7.634190,2.495734,4.264246,-1.487745,3.678471,9.840582,-3.445919,1.206700,9.231900,-4.514881,3.893175,-2.333044,9.989903,4.480858,-6.745261,7.038441,4.501393,4.459287,9.823084,-3.475674,-4.222618,-6.999436,6.166474,-8.300768,6.287642,2.202107,6.596833,-8.149924,1.994763,4.281514,9.287862,-1.904525,-6.376210,-9.899644,4.568888,-4.352401,-0.229916,-9.939866,-3.195670,-3.100714,-6.384943,3.819613,5.655447,-2.733281,4.881578,-4.959106,-4.525712,9.874976,-9.938500,-2.529794,-0.961276,9.975696,4.790622,6.553419,1.527507,1.331161,1.256928,7.253862,6.115221,8.104565,6.259512,6.169085,-9.515086,-9.270321,-5.904449,-8.454960,-1.611634,-3.561784,-3.526447,7.604206,6.443619,5.731419,5.925981,-5.445665,-4.723638,-6.646846,4.920641,-6.691358,-4.159465,2.302838,2.879584,-2.929815,8.372768,-4.279566,-5.800025,6.094476,-2.261794,-3.207508,7.430976,-5.854584,4.660174,-9.324224,6.276655,-6.139318,6.208227,-4.570026,-5.917454,-4.222168,3.808536,0.821580,6.016671,-9.998965,5.150417,2.340694,5.492270,-8.775215,-0.812384,1.420923,2.398416,-8.594335,5.740207,-2.436442,5.010827,-0.801830,2.501757,-3.867348,-3.602284,-5.245727,7.051272,6.502503,-7.837137,7.295585,-7.785763,-9.833558,6.630320,-0.749246,6.133663,-6.286905,-6.903013,-8.332429,-7.839312,-5.774946,9.013968,-8.311241,-8.679225,2.327742,8.363076,-0.283542,1.316605,-7.558592,7.001693,-6.312987,1.250201,2.881092,6.292789,9.058879,-2.611606,-9.293411,-4.736121,-1.681110,-4.803972,0.111284,5.566304,4.823510,-2.433767,3.366942,7.617874,5.174217,-3.024891,-4.614033,-0.441612,1.331430,1.969750,-9.581694,-4.405316,-1.522082,-3.055014,-5.536981,1.607297,-4.697979,0.184894,5.129526,9.441725,9.254579,6.482141,0.224793,9.480361,-7.791116,5.848732,3.400405,-2.467711,-8.449643,5.220850,-7.018483,4.769180,8.685648,-9.241746,1.462680,8.663300,8.641864,-6.712401,-1.029211,1.050227,-3.758020,5.561360,-4.623013,0.026817,-1.834865,0.781473,-6.677382,3.302822,-9.566818,-1.496448,-7.999635,-4.026363,5.108003,-5.481911,1.916936,-7.603119,-9.135559,3.692150,2.000555,-2.652387,4.536881,-2.532988,-3.397855,3.967662,8.500084,-1.587339,1.662975,4.028231,7.762574,-3.935925,1.930600,-5.029611,-7.385588,-4.336295,-4.990906,2.485856,5.074007,9.362172,-5.933986,-6.331229,5.479949,7.398480,3.432768,0.004287,-7.402772,0.654930,-7.446934,-5.883919,6.858664,5.529291,6.154985,-6.504413,-9.354134,-8.276797,-9.405494,3.542854,4.595903,1.759257,0.007372,1.426377,-7.835815,-9.864146,-2.038968,-3.632468,1.505273,9.767560,-1.713862,2.140434,-4.175486,4.942790,-1.545838,-0.261533,1.927838,2.430041,-3.410510,7.794791,0.413762,1.834003,-4.065830,-2.727457,3.744589,-5.828813,8.107153,4.715054,7.763837,-3.761539,9.014014,2.039036,-7.171870,8.302256,6.393370,-0.955805,-3.479734,-7.185798,8.565942,6.619891,-7.985169,-4.057427,4.280743,3.040701,4.129113,9.757274,-3.665405,7.143971,3.478658,6.656714,8.758926,2.777174,-7.114913,-4.173330,-0.423173,-7.859160,7.651937,-0.681355,-1.323588,4.255279,-2.144602,-7.622118,0.097681,5.352999,3.600023,1.095057,-5.737498,-1.025118,-5.620395,-8.049284,-5.480817,-7.336626,-6.649242,8.452044,-3.221943,-8.544432,9.166615,-8.109081,-3.130208,1.516100,-0.378428,4.088348,4.822037,6.124708,-9.606038,9.665973,5.017801,4.230110,-4.442835,-2.916024,7.945524,9.970790,-1.517546,-9.220779,-0.449788,-8.120755,-7.001023,2.158367,1.413833,-3.194939,7.668077,4.976494,1.153234,-9.512110,2.211399,-6.444185,2.710006,0.534163,5.188496,-1.695963,4.005737,0.628016,-0.738570,4.930819,4.487290,-8.476380,1.084264,8.487820,-4.288967,6.758575,6.695263,-1.607688,6.283384,-4.549034,2.244251,-4.971069,2.919027,5.180173,6.057304,0.876366,-0.612521,5.649823,5.578264,-3.129498,-1.246458,3.844611,1.452871,-0.356149,4.433404,-9.450116,1.484554,6.885509,-0.814524,1.482788,-9.341077,-1.788695,-4.696020,-2.092849,7.937871,3.818937,-6.089459,5.087802,-8.510370,2.451887,-7.321234,8.261532,-7.468480,-5.126157,7.609722,-8.042853,-0.920144,-9.938092,-9.737748,8.215069,2.766416,4.283607,4.168358,0.476515,-7.681139,-2.714815,-9.089096,5.287901,-4.028730,0.936643,6.807317,9.664086,2.925622,-9.389134,8.084840,2.961291,-2.211333,-7.594442,5.851612,6.544283,-9.210649,-6.053672,5.558626,-9.201676,8.007082,2.212528,4.074325,-4.723302,-4.812861,9.007909,-2.574473,-5.902855,9.143832,8.062079,2.249487,1.542552,-8.755541,-6.250407,6.545561,4.588244,2.054557,8.320492,-3.676176,0.536119,-8.994421,-2.324371,9.591169,7.511196,1.235383,6.289394,6.641587,0.006574,-1.278041,-6.319746,-6.115136,-9.728763,-8.080115,-6.631112,7.262972,-1.465691,-1.876292,1.444885,3.339951,3.699079,8.187778,8.268811,4.138534,-7.340573,9.645243,9.546430,-2.557964,5.920890,7.295875,0.065086,4.468841,-3.227256,-2.897078,2.097476,-7.979029,1.436508,6.418529,-4.816095,9.153460,-6.932212,2.335124,-7.051120,2.767832,3.450951,7.261002,4.885476,-7.978080,9.770630,4.534419,-5.694468,1.510635,0.561021,9.553579,0.185008,-7.896595,2.637417,4.514571,-1.813253,0.764804,6.560061,-4.034422,5.764195,-8.676225,-4.238672,7.380360,9.869409,-9.674829,5.588955,-1.902247,-7.535859,-1.776744,7.725022,1.352833,-7.502920,1.991164,3.134776,-4.446897,-9.577039,1.627216,1.664323,4.536699,8.081243,6.380835,9.907952,9.685218,1.588843,1.577974,8.934061,-7.364740,7.656747,0.654444,1.636597,8.864204,-3.629479,-5.027513,7.136673,-7.707107,8.697353,7.817387,-7.253593,-0.427253,-5.751181,-6.271076,-1.986104,6.067803,-0.824869,5.511192,3.531566,0.675696,0.796906,6.583563,8.507126,-2.357788,0.704703,-9.117423,-5.248661,2.138044,-1.651480,2.238725,-6.410421,5.067472,0.911540,0.947575], dtype = "float32")#candidate|6308|(2400,)|const|float32
call_6307 = relay.TupleGetItem(func_2617_call(relay.reshape(const_6308.astype('float32'), [2400,])), 1)
call_6309 = relay.TupleGetItem(func_2620_call(relay.reshape(const_6308.astype('float32'), [2400,])), 1)
func_4462_call = mod.get_global_var('func_4462')
func_4464_call = mutated_mod.get_global_var('func_4464')
call_6311 = func_4462_call()
call_6312 = func_4462_call()
func_3838_call = mod.get_global_var('func_3838')
func_3839_call = mutated_mod.get_global_var('func_3839')
call_6313 = relay.TupleGetItem(func_3838_call(), 0)
call_6314 = relay.TupleGetItem(func_3839_call(), 0)
output = relay.Tuple([bop_6226,call_6239,bop_6256,uop_6260,bop_6271,uop_6282,uop_6293,call_6296,var_6297,bop_6300,call_6307,const_6308,call_6311,call_6313,])
output2 = relay.Tuple([bop_6226,call_6240,bop_6256,uop_6260,bop_6271,uop_6282,uop_6293,call_6298,var_6297,bop_6300,call_6309,const_6308,call_6312,call_6314,])
func_6318 = relay.Function([var_6225,var_6286,var_6297,], output)
mod['func_6318'] = func_6318
mod = relay.transform.InferType()(mod)
mutated_mod['func_6318'] = func_6318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6318_call = mutated_mod.get_global_var('func_6318')
var_6320 = relay.var("var_6320", dtype = "float32", shape = (11, 13, 10))#candidate|6320|(11, 13, 10)|var|float32
var_6321 = relay.var("var_6321", dtype = "float32", shape = (11, 12, 10))#candidate|6321|(11, 12, 10)|var|float32
var_6322 = relay.var("var_6322", dtype = "int8", shape = (540,))#candidate|6322|(540,)|var|int8
call_6319 = func_6318_call(var_6320,var_6321,var_6322,)
output = call_6319
func_6323 = relay.Function([var_6320,var_6321,var_6322,], output)
mutated_mod['func_6323'] = func_6323
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6325 = relay.const([[[-8.988008,-9.102791,7.529551,8.877236,-5.128288,6.089600,-5.622606,5.296652,-2.496708],[2.109974,8.829503,3.277265,-8.572896,8.261295,7.760534,-0.972172,7.470980,-6.560021],[-1.626844,5.267451,-4.585561,-9.212086,7.938101,-1.035805,9.127547,9.748561,5.279615],[1.999430,-6.445443,0.954817,6.068969,9.904285,0.384118,9.365135,2.855001,-9.555230],[-2.705112,-1.181907,-4.138671,8.989850,6.652345,-3.158836,4.361701,-7.025848,-9.002933],[7.780358,4.711269,8.644553,-6.512137,-7.610193,7.497860,3.787699,6.605192,-8.237286],[-8.862828,0.330069,-8.999483,-9.255925,5.971908,5.319187,5.585100,-2.398653,-6.374549],[9.202360,-2.278154,-5.671244,-1.802886,0.454573,-3.628110,1.115472,4.653540,-4.961994],[4.296161,7.497456,4.406488,-1.252191,4.706539,4.796733,-0.870385,1.751824,-3.709375],[8.647274,3.551556,-5.537460,-7.241003,7.279222,0.975379,3.194546,-4.930488,8.865994],[5.594843,-1.119588,-8.288289,-6.921622,-5.749690,-0.478168,-7.529087,0.670251,-9.281640],[5.986512,-8.926595,0.936538,-4.090838,-3.625175,4.420878,-4.116187,3.505429,-2.730461],[-5.400280,9.824097,-7.096820,0.869959,7.636864,-4.276122,-9.992535,-1.692058,-6.686623],[-4.361017,-2.375848,-8.968580,2.248728,-2.677973,4.152191,-2.321204,-2.083004,5.099689]]], dtype = "float32")#candidate|6325|(1, 14, 9)|const|float32
uop_6326 = relay.acosh(const_6325.astype('float32')) # shape=(1, 14, 9)
func_5005_call = mod.get_global_var('func_5005')
func_5008_call = mutated_mod.get_global_var('func_5008')
var_6339 = relay.var("var_6339", dtype = "int16", shape = (780,))#candidate|6339|(780,)|var|int16
call_6338 = relay.TupleGetItem(func_5005_call(relay.reshape(var_6339.astype('int16'), [10, 13, 6])), 3)
call_6340 = relay.TupleGetItem(func_5008_call(relay.reshape(var_6339.astype('int16'), [10, 13, 6])), 3)
var_6345 = relay.var("var_6345", dtype = "float32", shape = (8, 14, 9))#candidate|6345|(8, 14, 9)|var|float32
bop_6346 = relay.bitwise_xor(const_6325.astype('int32'), var_6345.astype('int32')) # shape=(8, 14, 9)
output = relay.Tuple([uop_6326,call_6338,var_6339,bop_6346,])
output2 = relay.Tuple([uop_6326,call_6340,var_6339,bop_6346,])
func_6351 = relay.Function([var_6339,var_6345,], output)
mod['func_6351'] = func_6351
mod = relay.transform.InferType()(mod)
var_6352 = relay.var("var_6352", dtype = "int16", shape = (780,))#candidate|6352|(780,)|var|int16
var_6353 = relay.var("var_6353", dtype = "float32", shape = (8, 14, 9))#candidate|6353|(8, 14, 9)|var|float32
output = func_6351(var_6352,var_6353,)
func_6354 = relay.Function([var_6352,var_6353,], output)
mutated_mod['func_6354'] = func_6354
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6371 = relay.const([[[3.880121,9.010649,-5.271228,7.253047,5.120258,-4.322892,8.191744,-3.959813,-2.063990,4.017066],[5.145492,-3.493496,8.436554,3.314066,-1.463565,9.827019,2.647804,8.026078,-2.313700,7.523770],[5.270759,4.981267,1.754178,-6.129800,5.887993,7.007520,0.039651,-4.620350,-1.394083,2.222393],[2.387468,2.027012,6.787005,-3.169163,4.605364,7.656151,7.911926,3.079439,-1.395656,-5.907177],[-5.595475,4.572881,4.182046,-3.895434,2.843557,9.939038,-3.599046,-0.540735,3.968191,5.416684],[-5.685995,8.448132,7.369920,2.381772,8.808254,-0.001199,9.235170,7.922545,1.154306,-1.912610],[1.260126,4.892077,-3.628089,9.992520,6.778071,7.627776,-5.416708,2.912290,3.305361,1.332881],[3.545950,-7.533866,8.878363,0.502107,9.606182,-7.793916,1.319846,4.208838,9.941452,7.216917],[0.588554,-5.537238,-5.029432,-1.096614,-5.595571,-7.716982,7.888753,-1.669805,-2.649889,2.656521],[-0.553010,5.105486,-0.732117,5.624649,9.125608,-6.352661,6.975570,-1.043383,-4.691411,-9.250973],[1.204762,-6.988158,8.605612,2.033543,1.187163,-2.271070,-6.466688,2.637498,-8.507390,-5.191252],[-0.452470,-5.228514,-2.980943,3.448720,6.329522,6.605136,-0.397197,1.790381,0.295854,1.200548],[-8.913248,-3.414104,8.028975,8.570421,-8.702117,-7.790145,-3.873380,9.028755,2.245277,8.348560],[-5.266705,7.726834,7.583516,-9.763675,-7.184017,1.569064,2.118496,3.587460,1.526203,-0.290150]],[[4.555117,-9.859265,-3.197222,-1.556739,-2.772275,-6.416897,-7.959587,9.806904,2.495967,-1.247464],[-4.037019,-7.042842,9.111667,-3.236199,-1.641573,3.694912,9.680685,4.149587,0.497734,-3.225380],[7.922384,-4.733839,-9.874360,6.568711,9.590797,0.169303,7.609055,-6.225109,-5.524595,-5.265652],[7.314417,-5.214959,6.719292,-4.669178,0.999311,7.715550,-6.094954,-4.637890,6.717412,-4.449097],[-5.797922,-1.981953,1.140906,-0.424073,-0.316403,-6.144547,-6.501765,-6.032379,-0.843561,-4.565787],[2.528910,-4.888224,9.491640,0.519395,1.601197,-7.850333,3.471917,7.700046,9.701497,-9.330342],[-1.112083,5.297177,4.218543,6.038694,8.145275,4.940886,2.563419,-4.157860,1.280587,6.919216],[6.172793,-4.033783,1.158115,3.220580,9.330403,-0.519092,-6.853395,2.307272,9.274198,6.079815],[-7.698815,-6.063843,-0.538544,6.275146,-0.491072,-4.674992,-2.866202,-4.499236,4.207492,-3.804347],[-3.136017,-1.325257,-0.866821,-0.324519,-4.537095,-7.291253,8.411087,-1.287803,3.349794,2.502591],[6.487490,0.056512,-4.860546,2.707054,0.121848,-2.610333,-4.613134,-5.777353,-9.379105,-9.331637],[-9.280669,-7.158395,8.300298,-1.935677,-4.202578,-6.437315,3.859551,6.493820,-6.052989,2.694519],[-7.413094,9.425062,3.365727,0.535465,-6.437022,-0.081187,7.528919,-2.341047,-5.745228,8.299672],[-8.022497,-0.381456,-6.386617,7.014018,-8.971670,-5.351752,2.784668,5.059191,-2.650833,-3.308587]],[[-6.893508,6.262913,7.534531,6.541333,-7.363240,-3.454475,-0.146614,5.628742,-4.540721,1.037960],[5.356495,5.798570,5.451754,6.657695,-5.625087,5.834564,4.863261,-1.471794,-7.346892,-9.120068],[-6.316804,-3.380744,1.740725,1.251366,-6.883605,-5.222617,1.151381,-3.048766,-1.673805,-7.471784],[-9.675816,0.244737,-2.906309,-8.473765,4.789351,-8.340634,-1.836779,9.348880,-5.392423,6.006310],[4.451103,-2.254413,-2.508867,-5.673018,2.131205,5.137408,-8.359992,9.587725,-4.699362,7.326276],[-3.871467,2.027085,-3.222372,-3.779731,-4.279184,-6.531314,6.185069,-1.896986,2.459775,-0.445948],[6.226474,-5.603507,-0.644484,-2.082144,-9.176819,9.691589,5.102895,2.284537,8.968919,-0.919293],[2.229004,9.313958,-4.767602,-6.732815,-0.634966,-3.448912,-3.988776,4.277146,-5.231469,9.853148],[-2.150636,6.101249,-8.812612,6.640586,-4.049279,6.692556,-5.805559,-9.912169,-8.179216,1.295326],[9.006128,-8.989157,-0.898861,-0.126834,6.664542,8.899793,-4.864608,-5.038418,5.518354,-2.265019],[6.943894,-8.937898,6.436097,-9.671972,3.608311,-2.670961,1.947946,9.896873,2.467283,-6.609299],[8.242135,-9.755600,-7.025501,-5.691757,-2.289066,0.385808,-5.889596,-8.683150,-8.682462,9.283474],[-3.445955,-5.971728,-1.789147,3.530246,-9.126986,9.200912,-0.307723,5.801745,-6.820579,-4.134245],[9.409398,-1.230524,3.687621,0.640389,-7.989762,-6.210831,-5.209983,-9.822635,-8.224973,-5.243675]],[[-3.579191,-2.032021,8.164098,5.143434,-5.601905,7.745058,-7.572522,8.818250,-2.412542,0.211111],[-4.491268,6.670474,1.873995,0.772549,4.966773,-9.782553,6.978729,-8.377951,-1.386271,-8.904174],[-1.703519,-0.059711,-8.957751,-0.324771,-8.736922,3.564263,6.457399,-1.968476,-2.440625,-6.809012],[0.477363,2.211380,-2.599315,-0.307253,-6.138258,8.043909,-8.446265,9.569750,7.580186,5.439479],[0.008945,-3.181367,1.302989,8.346021,1.079253,5.157325,-9.146005,5.666690,2.096419,-1.192469],[0.212220,-1.342797,5.645299,-3.967332,2.571278,4.277357,-6.785045,-8.399291,-5.711580,4.178363],[4.476090,-1.322857,-1.307311,-2.639186,6.828007,1.912401,-7.134246,-5.794327,4.987251,8.574744],[-0.287076,7.404859,-3.799259,-7.020080,-6.529608,-4.213950,0.135566,7.359212,6.173570,4.680448],[-1.080108,2.287264,-4.891771,9.549309,-6.614402,-3.836773,1.290879,8.809980,9.466370,-7.034141],[3.831109,-5.344499,8.707383,-8.513670,4.737227,-2.762750,-5.340967,6.055828,1.637563,-5.463436],[6.724968,3.866036,9.955961,-8.837890,-8.258355,-2.566290,-4.224543,-3.456809,-3.691008,-7.619404],[-5.191250,-4.454587,-8.787575,1.167290,-4.834041,6.497136,7.526133,-4.887125,3.807305,3.560335],[4.347756,5.975299,-2.311462,1.258256,5.408131,8.328404,-6.651752,-0.003497,7.986857,9.219703],[-6.775271,5.966971,9.157188,-8.394799,-6.246847,-0.068339,4.234028,5.425735,-6.777754,-7.084624]],[[-4.573760,8.703671,9.122154,7.321826,-4.835072,-2.242262,5.989230,-6.885294,6.593437,9.437436],[-3.084661,2.385801,-0.901055,-0.774570,-7.518420,-3.592298,-7.407676,9.062945,4.456566,-0.026115],[9.040271,-5.781155,-5.296599,6.423837,6.649485,7.482113,5.822779,4.268393,-6.758173,-2.829882],[3.193168,7.410749,-9.013271,5.982014,-5.145654,0.699788,6.529230,-7.138848,-7.497489,2.488949],[4.206115,-5.610605,-4.564767,-8.218769,1.911055,6.647313,3.231697,-6.503273,3.421871,5.659367],[0.767884,-4.496668,6.434562,-8.042893,-5.132330,7.708592,-7.629556,-9.207785,-2.900443,0.181310],[2.298715,-3.905592,-6.158106,9.878189,-4.494795,1.808717,1.134750,-4.632123,-7.155111,6.795663],[6.750827,-7.538083,-4.085448,-2.399564,7.809623,-5.295256,-5.190658,1.965754,5.970221,-8.468981],[-9.656552,6.656605,1.953881,-1.083029,-5.824630,0.503596,-0.904505,2.475607,-4.904544,3.099824],[-3.525829,8.008684,-6.413536,4.123170,7.492732,-3.679545,1.308442,4.811760,4.774106,-6.359320],[3.382705,9.480346,-6.206559,-6.698077,-5.823926,-8.765182,8.864952,5.045522,4.053188,2.100617],[1.587189,-0.122044,9.070595,5.949052,2.255222,-5.110898,2.433723,-6.539235,2.684095,7.314667],[0.681722,-3.238162,6.979792,-3.260673,-8.496375,6.516266,2.338542,-1.298709,5.148925,-9.334158],[8.050798,-6.949854,-5.393113,-1.189820,2.718459,-9.841591,-5.264086,-0.301601,-9.771124,-2.785717]],[[-3.036731,-4.793058,6.565971,6.905193,6.278971,2.002148,-1.682864,0.690603,-1.119778,-1.185368],[5.554526,-1.793949,3.409044,3.414840,-0.692742,-4.286305,4.995524,-9.918159,6.208081,-8.920543],[9.135298,-9.812951,2.568397,4.381072,3.081750,0.903744,-9.916056,-8.905716,-4.232181,3.234735],[2.644526,-9.953216,7.142260,9.851856,-1.015044,1.657918,1.744832,9.127155,7.191091,9.693020],[4.733187,-0.595850,-6.338547,9.430406,-3.629768,4.769931,0.588399,6.677679,2.744873,7.468474],[-4.559246,0.817163,-2.477129,-5.821025,9.660473,7.237252,-7.377138,-9.477882,-3.403434,-4.010399],[7.087513,7.339537,9.121398,7.708048,8.255174,-4.907173,5.495335,-7.489480,-2.829623,5.942992],[-5.561954,-0.669910,-6.719320,5.317043,3.417365,-8.754954,-5.962114,4.589965,-4.890302,-5.790672],[9.404751,3.222255,-1.010153,7.802009,-6.859044,7.211142,2.731831,9.833461,-5.005657,-4.020183],[-7.220386,-9.488025,-3.870830,-7.573909,-1.363623,0.227098,5.621680,-4.282205,-0.930891,0.241447],[9.319050,7.778278,-7.574854,-1.458178,9.332526,-7.060965,8.072393,-7.967215,-3.806502,-3.214378],[6.954082,6.540378,-4.212670,3.905076,6.001415,3.739303,4.755365,7.818038,-2.345911,-5.837907],[-5.765314,8.896359,-3.982707,-9.359998,9.494487,7.367100,-3.266963,1.398027,3.365383,4.792067],[2.724502,4.655926,5.719937,3.658363,-0.364362,7.179626,-1.258704,8.487103,3.785452,-2.355370]],[[-2.132928,4.808101,-6.677541,-5.435009,8.920673,-8.989694,-4.689887,0.970563,-2.797330,4.281395],[4.267835,6.226933,-0.918042,-7.749299,-4.062153,-4.170799,-4.150206,8.223024,-2.672757,-2.152653],[4.728449,9.854738,-9.629881,7.079010,0.458614,-3.378843,-4.913661,-3.330396,-0.879168,-4.718027],[2.144684,6.672542,-1.080159,-8.618468,-7.640717,4.331391,4.578639,-7.803727,7.556134,-6.621154],[-0.234462,2.847283,3.847839,2.780018,-7.897160,-2.752155,-9.312416,-8.783179,7.736744,-0.409581],[8.533387,4.538005,-3.412435,4.017049,-0.424106,-8.043876,-6.831368,1.610341,8.335217,1.426482],[-9.724002,-5.183604,8.893167,3.035519,5.818066,9.780654,9.656134,-3.310899,-9.005294,-8.925569],[3.307656,2.407604,-2.732758,9.346558,-1.804126,-8.752989,1.399182,6.105591,6.544070,1.182733],[-7.910307,7.375522,1.443179,9.511641,7.528768,-4.412796,-7.245734,-2.719151,-3.870371,6.920894],[-7.474874,4.919422,-3.398508,7.451951,-8.188720,-8.838014,2.719268,-6.879436,3.810199,-1.085717],[8.285332,-4.411449,-5.179085,9.863856,-8.433208,5.654236,-4.793103,-2.075922,-2.030563,-4.588974],[-9.656887,2.724595,-7.267537,4.512594,-0.151616,8.529465,-9.160305,8.606246,-7.846725,-7.528576],[6.244537,-0.111687,-1.407290,-6.791094,-4.394415,3.609171,-6.055114,-5.881125,6.375120,-0.869237],[3.326009,4.269887,0.450156,-7.709997,4.379666,7.251133,4.519621,-8.432790,-1.846086,-5.889982]],[[0.413196,-5.307233,-7.072617,1.674813,-5.497349,8.316428,2.188439,6.126094,-6.655129,-5.922615],[-0.613258,-8.781532,0.803327,-5.010297,-4.948074,-6.511831,-5.732051,1.593074,1.806599,-7.833439],[-7.679569,6.102147,1.528102,4.682631,7.752195,7.411410,8.342956,4.565201,4.180377,-6.627895],[-9.295122,4.940449,6.697803,1.337067,9.956352,-0.599975,-5.389006,8.088668,8.455481,0.611380],[1.686773,-7.479576,-4.485523,4.867927,8.691191,3.125435,7.820448,9.334159,7.512582,7.009955],[-8.667666,6.606523,-1.665321,-8.101430,9.455795,-6.309668,3.719981,6.507206,-9.062342,0.661280],[-0.283773,3.508916,9.432082,2.210913,3.828169,-4.563255,-8.478002,-3.955101,-8.483400,-9.387367],[-4.703177,-6.918800,-7.999706,-9.982190,7.070712,-3.994510,-6.071610,5.741374,-0.313632,6.131490],[1.793549,-6.181967,3.787398,-5.248932,1.666516,1.923148,1.366450,6.440065,3.728944,-8.437047],[4.417075,-7.735944,-6.572302,-9.544452,-0.041589,5.997850,6.316911,-7.737980,-5.463984,-4.059820],[6.308467,-1.838500,-2.775772,-7.800760,7.188705,-5.859163,-5.633752,-0.901255,-6.980881,8.517781],[-5.812066,-0.495965,-9.099438,-3.501836,-3.066269,3.684036,-2.682993,-5.321918,0.594681,-5.027611],[-5.047694,-3.314373,-6.232922,8.966819,4.406216,2.647913,5.620068,6.110443,-5.095552,6.917702],[-2.566291,0.865603,-1.182883,9.498426,-2.491648,-1.204964,-2.597986,9.222617,2.049144,4.471137]],[[-4.817413,7.323661,3.726092,2.546971,-9.837267,-9.130478,5.841284,-6.457868,0.587662,-3.001903],[6.036778,-6.161684,2.534491,-2.835565,1.622129,2.414358,2.286820,6.903497,0.823591,-6.828391],[8.353088,-9.311231,-3.999876,-9.705443,8.235628,-4.145765,2.049775,-3.852037,-3.482710,-6.934674],[5.748437,0.829039,-4.325535,1.195680,-7.976716,3.199467,-1.879753,-9.572511,-4.125860,-6.327586],[9.204862,4.162266,-3.727077,9.557537,-0.090417,-8.454986,9.034545,-0.807644,-9.267629,5.382668],[-9.667774,4.225769,5.285953,8.683448,-5.906688,8.718365,-5.843414,7.256190,-3.246460,-1.476361],[-6.698226,-8.062316,-7.606358,2.129461,-0.817461,4.655051,7.302077,8.490359,7.185187,7.532419],[2.209851,6.254882,6.367775,-8.542188,-1.644218,-7.016885,6.883163,-8.720956,-5.236667,-4.177081],[9.133187,1.925438,-8.227290,7.108684,2.865193,-6.421539,7.032640,8.209827,-5.548269,-3.107435],[-6.963548,4.817322,-9.245550,3.506160,7.749066,9.648452,-7.142923,2.613946,-7.336313,-7.327340],[3.772184,-7.412829,-3.501101,4.020486,2.061025,6.199219,3.855118,2.464488,4.526988,-3.333864],[-3.430674,9.666904,-6.243012,-9.240901,7.497730,-7.919795,0.588956,0.082838,-6.157947,-7.842164],[-4.765339,9.225719,-3.989682,9.507775,-1.633237,-1.826991,-5.512044,4.794866,-0.417566,3.398393],[-4.693046,1.694168,-3.080966,3.833470,7.135014,-8.421275,-7.433407,7.865033,-6.197438,-2.244829]],[[-1.519113,3.027650,-2.383724,7.081458,-6.202550,-5.190707,4.382783,-7.577596,-1.127627,-9.360294],[5.787204,4.817499,7.726987,-4.472338,-5.485086,-3.390267,9.754633,9.855571,-3.903863,0.797768],[5.576240,9.605432,7.895788,-1.694475,9.490380,4.818914,1.871141,-2.758572,-2.926568,-4.587696],[2.028336,9.295255,-8.998522,-8.372885,-7.360154,-5.580411,2.061555,-1.853267,9.664593,-2.685221],[5.621861,-7.300047,3.329966,0.388771,5.796412,-9.270589,-1.442244,-5.236590,-5.484740,6.564214],[-7.407141,-6.420706,1.178885,-1.950237,5.714467,-9.852050,-4.486205,6.442850,1.262769,4.074117],[-7.545149,-7.566952,-2.504095,3.017357,1.383347,7.906658,-0.740383,-1.412649,-7.922695,1.279944],[7.471085,-4.379600,-1.139825,3.901218,1.636318,-1.828816,-5.943814,-9.763190,3.615189,4.802208],[6.545555,-3.624462,-0.663284,1.841754,3.137776,-8.604614,-3.369172,2.864898,-6.866692,3.403476],[5.021858,8.334270,-5.494474,-9.792974,-9.052688,-0.111170,-7.446173,5.119052,2.330964,2.456995],[5.192172,-4.054006,9.706656,-5.639861,-3.871459,6.543484,-3.096206,-4.708883,-5.629881,-1.534833],[-2.955875,-8.402678,-9.291133,-2.796356,2.270717,-6.490738,4.679733,-6.838562,-2.413071,8.966190],[-1.929934,6.384003,7.813532,0.659900,-9.684828,-4.296776,5.237515,-7.030226,8.093796,8.094362],[-2.215056,0.710419,-4.187115,-1.674818,3.538758,-0.419810,-8.039503,-9.794081,7.275918,-2.214932]],[[1.197889,-7.840850,5.799364,-5.625528,1.608056,9.195166,-7.188981,-9.293579,0.821475,3.906011],[-7.944665,-5.848657,4.469925,-8.361444,2.536942,3.288913,-2.730623,3.751357,-9.298045,-0.932083],[9.847498,5.990261,-6.888438,6.384072,6.571569,-6.555449,-3.548023,-5.153181,2.423371,-5.298550],[5.921368,-9.382224,2.099826,-7.392150,4.026026,-0.425187,-4.383167,-7.810047,6.837808,-9.046774],[7.687714,-2.441212,-1.553784,9.234938,2.919196,-3.556997,1.911384,-0.733575,-4.464776,-0.783612],[9.638702,-9.704714,1.138683,7.306007,-6.921408,4.434952,-8.559527,0.050120,-8.019373,6.215029],[-8.386406,5.859023,-6.037377,8.238994,-5.484280,-2.185558,-9.260196,8.004932,-9.482848,-8.014294],[3.893737,-3.390000,3.338687,-5.621527,-2.760190,8.799957,6.756934,7.400670,1.865450,-7.051770],[-5.850035,9.453137,3.437246,-2.671119,1.458453,6.166680,-9.211677,1.541815,0.024101,-9.173317],[3.607035,7.124494,-9.754910,-1.144057,8.819422,5.446978,9.551822,-1.439538,5.676845,-8.265406],[6.570640,5.309608,4.876020,0.936033,-4.363968,8.676852,4.035542,-2.139045,7.984385,7.399857],[4.292766,-5.955824,-5.262479,-6.722008,-3.676490,-8.283814,-7.376734,6.442118,-0.138855,-1.494984],[-3.928415,-5.974673,-7.896955,6.085760,6.017692,-0.299261,0.402052,-9.592691,5.020076,-4.381911],[5.001546,3.828499,-0.434768,-6.991098,8.019126,-9.331865,-8.495841,-2.453649,5.314626,-4.941416]],[[-7.732095,-6.925889,7.512544,4.775726,5.251226,-5.432546,2.540446,-2.292783,7.471841,-4.697548],[3.978959,-1.386922,-1.176581,7.124173,1.724570,-4.680149,-2.040074,4.706421,1.926200,9.452093],[-5.006884,-5.716179,3.501070,-1.057388,8.390800,-0.934755,7.827692,-5.015301,7.675837,9.007616],[5.884509,-1.557389,-6.531545,9.137860,7.023251,-5.362713,4.242068,9.213395,7.952682,7.514224],[-6.492468,-0.068534,-1.913881,9.277999,-6.809735,-3.923212,5.212279,3.537571,0.245240,1.176231],[0.471355,-7.825766,-4.828411,-9.092725,3.038800,-2.074559,5.573919,9.734931,9.190892,5.844112],[-3.024480,7.287142,-7.064530,0.982346,-3.855216,-1.865204,1.671706,-4.043069,-1.217343,4.907693],[-0.560738,-4.514051,-9.145070,3.514990,-4.781964,6.177444,9.320159,-4.515144,-5.813013,0.486422],[1.234729,-4.346213,-8.503354,-9.641081,2.633658,9.695928,-7.379718,2.006947,6.447701,-0.701169],[0.143966,-6.204434,6.109376,6.108241,9.710332,-8.809128,-0.024215,7.983173,7.688581,-5.921438],[7.887854,-6.003731,4.281754,9.379989,-9.229858,-4.736797,1.661804,-4.937835,-1.811932,-6.249034],[-3.852261,-0.337450,-5.341916,-3.873956,9.226274,-4.102892,-7.436357,-5.617621,7.397214,-2.868395],[-9.309329,2.648073,-6.602477,-5.299874,8.250211,-9.020464,1.303244,4.139315,-2.407673,6.348257],[-1.232709,-1.202258,-2.210294,-9.376305,-0.225306,9.837685,0.806637,6.499297,5.591852,-5.150410]]], dtype = "float32")#candidate|6371|(12, 14, 10)|const|float32
uop_6372 = relay.atanh(const_6371.astype('float32')) # shape=(12, 14, 10)
output = relay.Tuple([uop_6372,])
output2 = relay.Tuple([uop_6372,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_89 = relay.var("var_89", dtype = "float64", shape = (6, 9, 13))#candidate|89|(6, 9, 13)|var|float64
uop_90 = relay.acos(var_89.astype('float64')) # shape=(6, 9, 13)
uop_94 = relay.sigmoid(var_89.astype('float64')) # shape=(6, 9, 13)
output = relay.Tuple([uop_90,uop_94,])
output2 = relay.Tuple([uop_90,uop_94,])
func_115 = relay.Function([var_89,], output)
mod['func_115'] = func_115
mod = relay.transform.InferType()(mod)
mutated_mod['func_115'] = func_115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_116 = relay.var("var_116", dtype = "float64", shape = (6, 9, 13))#candidate|116|(6, 9, 13)|var|float64
func_115_call = mutated_mod.get_global_var('func_115')
call_117 = func_115_call(var_116)
output = call_117
func_118 = relay.Function([var_116], output)
mutated_mod['func_118'] = func_118
mutated_mod = relay.transform.InferType()(mutated_mod)
var_613 = relay.var("var_613", dtype = "float32", shape = (12, 9, 8))#candidate|613|(12, 9, 8)|var|float32
var_614 = relay.var("var_614", dtype = "float32", shape = (12, 9, 8))#candidate|614|(12, 9, 8)|var|float32
bop_615 = relay.floor_divide(var_613.astype('float32'), relay.reshape(var_614.astype('float32'), relay.shape_of(var_613))) # shape=(12, 9, 8)
bop_621 = relay.bitwise_xor(bop_615.astype('int8'), relay.reshape(var_613.astype('int8'), relay.shape_of(bop_615))) # shape=(12, 9, 8)
func_115_call = mod.get_global_var('func_115')
func_118_call = mutated_mod.get_global_var('func_118')
const_647 = relay.const([-4.401062,-1.348060,-2.917957,-8.299859,0.050812,8.840076,5.211957,-7.197896,-5.092163,-3.668690,4.456992,7.228885,-0.571425,-3.137363,-6.247184,-5.486940,-0.925719,2.470926,-0.896829,0.147682,-3.607662,8.791245,8.028584,-4.840470,-5.351570,-4.388417,-6.393744,-3.464791,9.323168,-9.370239,-2.874520,-8.533262,-3.906082,5.138355,1.778152,-2.284350,-9.065867,1.578242,-0.239560,2.746877,5.071893,-2.772113,4.478393,-0.464067,0.410084,-9.282936,-5.794327,-4.363950,4.050643,8.547190,4.792842,-2.045947,6.739378,8.768420,5.871907,-7.140284,4.301757,3.654252,0.760156,1.222396,-0.692853,-7.820917,-7.773509,6.104459,6.408467,5.400910,0.072220,-8.461198,9.080633,-3.631190,-2.126281,0.815880,2.657861,3.102906,0.535952,2.751844,-7.977678,-0.818014,-9.598864,-0.123918,-6.366969,-5.858869,3.951629,-6.702798,7.746962,-8.448739,-4.759623,8.092009,-9.685558,-1.555583,4.268978,9.389450,-9.634495,-5.184916,-3.397193,-0.029935,-5.822171,-8.094202,1.943988,5.010428,0.691168,-5.408054,2.844870,2.215985,-0.080583,6.192796,8.924345,-6.846689,-6.659648,-6.524273,5.906359,3.512668,-8.030555,-3.625139,9.086133,-5.615628,0.879944,-7.900967,-0.719883,-2.989371,7.313098,-6.426542,-5.780846,-4.515269,0.733711,3.810446,0.176144,5.839617,-5.372995,4.504511,4.446351,-9.909654,1.776082,0.462985,-9.779568,-4.112233,-8.335361,-8.889437,5.441629,6.067408,-8.838245,-7.104710,-0.900192,1.977785,8.244777,-2.637104,-7.707997,1.400936,9.005501,4.211983,-5.786583,2.826475,-0.028092,8.004770,7.058909,-7.527279,-2.589392,5.778818,-8.681184,0.258203,-8.135978,-2.196690,3.509047,-9.535342,8.093602,-0.188930,1.601233,-4.026135,-8.242496,-0.244691,-6.787414,8.396682,0.334120,8.145964,0.833322,1.123697,-9.943575,-0.938843,3.520883,-9.738944,-2.048722,-9.062873,0.945216,7.857452,-6.174611,4.116810,-8.640002,3.349864,6.391550,-8.430471,-7.521276,-4.572639,0.401623,-0.073929,7.149054,2.516857,3.661636,-7.147523,-0.281166,-3.226325,9.531790,-3.863748,-5.320927,5.039716,-1.529954,-0.537001,4.239889,-8.640552,6.691261,4.049441,8.301651,-4.018494,-5.696282,1.448386,-6.325114,8.523334,7.525491,-9.693659,-6.472191,-3.073391,5.825706,5.267415,6.489990,0.900071,-1.278820,-4.302988,-8.824482,-6.517957,6.154396,2.391529,-6.465282,0.713547,-9.278349,4.314883,0.799319,-1.181268,1.622221,2.947570,6.153446,2.832916,1.381428,1.152321,9.086393,-3.519582,-9.862956,-1.808570,-2.228245,-6.962194,8.162140,8.899851,5.338720,4.337942,7.003050,-6.893149,-9.344781,-7.327141,7.948254,4.082341,-3.312777,9.626543,0.056603,9.597250,6.369071,0.757224,1.176243,8.123006,-6.634201,1.620321,6.252181,-2.849946,-8.422249,1.875897,-2.556059,-1.398396,-5.410779,3.248462,7.936471,1.884701,7.757400,-4.937166,-1.302268,5.434504,-3.738839,-7.170115,-3.886579,7.743635,-1.570761,-6.777158,0.514626,2.834454,-0.009412,-3.490798,5.165550,-5.833534,-1.344893,7.081950,-5.100554,2.409129,-5.851287,-0.881416,-5.557399,4.142068,-6.319042,8.717631,-2.429152,3.574226,-6.155465,-9.866910,-7.478663,-5.673572,8.696266,2.841505,-5.021859,4.750389,-9.007441,-9.050256,9.695472,2.396133,7.508950,-5.031689,0.996796,0.647003,2.026838,1.805827,-4.561767,-5.758927,-6.227243,-9.237131,-7.978969,6.873512,4.806455,6.416954,7.678951,2.211276,1.474807,-5.716056,1.685172,-1.669999,9.261243,-1.763994,7.622393,-7.612390,-9.000855,5.243341,-1.027731,-2.204781,-3.752373,-5.015386,-8.918634,-5.251774,0.601202,5.416726,-1.530476,1.085718,8.443697,-6.754961,-6.337240,-3.330005,5.254796,8.224965,-2.520130,1.147805,3.339791,-4.547990,7.871217,-2.277847,8.625210,-6.732251,4.967474,-1.523810,8.789469,-9.813039,9.037553,7.216088,-8.239717,-1.591764,-3.464038,6.678644,6.191870,9.368166,-4.869389,-2.610651,0.031765,-4.690907,-4.863627,-4.890039,8.016281,-2.210644,0.265151,3.880121,-5.387425,6.883895,5.301757,0.562309,-2.382127,-2.270875,-0.468311,2.945612,0.300811,-2.247235,-2.124266,8.615572,6.221636,-5.451959,4.600075,-9.582546,9.169316,-4.748806,-9.139239,4.835999,5.063715,-2.072051,-3.402284,4.889886,8.793375,-4.234802,-1.133234,4.562323,5.409358,6.408330,1.494020,-4.520407,4.010707,8.324874,-0.961121,-9.192715,-8.884701,6.287250,-7.668392,-9.683824,2.877532,9.197733,1.192898,0.438962,-1.139919,7.952534,8.349632,-0.719230,2.960155,-9.672285,4.380719,1.202148,0.977716,-3.353356,2.651245,8.046540,3.997544,6.131237,9.591228,0.257732,1.679808,7.550180,6.310102,1.505918,-4.510060,-0.961660,-5.212525,3.533725,6.847647,-0.383434,1.258489,9.592574,-4.174536,9.724687,3.415353,-8.054523,0.402829,6.881801,8.631437,3.007361,6.675187,1.950766,8.358770,5.412698,2.568024,-5.230351,-9.321618,1.934843,-2.108460,-9.919645,-2.045072,-0.705467,8.865295,-8.840534,-2.878034,-2.921660,0.700798,6.562965,-9.169299,4.237527,-2.443424,-5.953138,2.562390,-5.271625,-9.708777,-4.480261,2.389545,7.795773,-4.621664,0.832909,9.119177,-2.687389,-0.414435,-8.972203,5.854742,-1.632779,6.635396,-1.720931,-1.067106,-2.982974,0.626537,1.935287,3.306880,8.969786,-7.527826,-0.164066,-4.788440,3.053425,-5.784492,-5.225929,3.723745,-5.571294,5.608484,-7.557481,9.738126,5.869296,8.947245,8.727010,7.367116,-1.859877,9.093301,2.894224,-0.767470,-9.648147,-0.948483,-2.509151,1.480818,-6.833668,2.739992,7.184253,3.877926,2.698805,9.868437,1.399152,-9.575499,1.363869,-8.503666,4.919845,1.953249,-7.537099,-7.895873,6.927375,7.797669,2.843163,-4.086847,8.942560,4.447234,-8.090700,5.587523,6.541381,-4.534428,4.826373,1.092069,2.231037,8.293941,6.404660,-1.516766,7.150910,-2.632819,-1.391278,2.639011,3.773628,-3.577967,-1.191256,3.486587,6.494703,-6.678837,6.327361,-6.851134,-0.842482,-6.018546,5.688683,-5.703338,-3.650994,7.154324,-8.145249,-9.473942,5.259633,3.447671,-8.316520,5.947673,-6.181929,-2.606478,-2.299044,-1.671307,-8.072808,-8.659145,8.267569,4.143576,0.576339,-1.869348,2.781686,4.902037,-8.148100,-2.337220,-9.747239,-9.807237,3.118010,-4.585979,8.008367,-1.532722,5.996135,-7.170962,-9.922937,-2.526065,-4.086999,0.940990,4.730965,8.189495,0.319962,-4.898894,1.649716,5.783497,4.840013,-4.407093,-9.957437,8.076386,9.077408,2.960550,1.683836,-4.845216,-7.072846,1.907898,-4.084782,8.334719,3.917923,5.860488,4.048739,1.642621,-1.685989,9.515265,0.509036,-6.503625,-6.875223,-0.881158,7.448598,-2.227472,-5.266204,9.089907,-1.759648,-7.395547,-8.372825,-4.384074,-9.922180,6.883218,-9.751353,-9.827166,8.288849,-1.254674,-4.273135,4.635505,8.223283,5.546493,7.910690,7.516435,-1.814843,7.296582,8.170712,-1.545426,-6.939639,2.456992,-4.351831,-2.550665,-3.095731,-4.602508,3.401450,8.244345,3.885662,-5.836759,9.236059,-6.925427,6.062266,5.229346,1.450469,2.841104,5.865671,-8.964807,-4.131426,8.919334,-6.619771,5.642327,2.129635,-9.470243,1.273338,1.742509,-7.896226,-6.880675,-9.994440,8.508264,6.369437,7.849630,4.498998], dtype = "float64")#candidate|647|(702,)|const|float64
call_646 = relay.TupleGetItem(func_115_call(relay.reshape(const_647.astype('float64'), [6, 9, 13])), 0)
call_648 = relay.TupleGetItem(func_118_call(relay.reshape(const_647.astype('float64'), [6, 9, 13])), 0)
output = relay.Tuple([bop_621,call_646,const_647,])
output2 = relay.Tuple([bop_621,call_648,const_647,])
func_658 = relay.Function([var_613,var_614,], output)
mod['func_658'] = func_658
mod = relay.transform.InferType()(mod)
mutated_mod['func_658'] = func_658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_658_call = mutated_mod.get_global_var('func_658')
var_660 = relay.var("var_660", dtype = "float32", shape = (12, 9, 8))#candidate|660|(12, 9, 8)|var|float32
var_661 = relay.var("var_661", dtype = "float32", shape = (12, 9, 8))#candidate|661|(12, 9, 8)|var|float32
call_659 = func_658_call(var_660,var_661,)
output = call_659
func_662 = relay.Function([var_660,var_661,], output)
mutated_mod['func_662'] = func_662
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1072 = relay.var("var_1072", dtype = "float32", shape = (5, 16, 14))#candidate|1072|(5, 16, 14)|var|float32
uop_1073 = relay.sqrt(var_1072.astype('float32')) # shape=(5, 16, 14)
output = uop_1073
output2 = uop_1073
func_1076 = relay.Function([var_1072,], output)
mod['func_1076'] = func_1076
mod = relay.transform.InferType()(mod)
var_1077 = relay.var("var_1077", dtype = "float32", shape = (5, 16, 14))#candidate|1077|(5, 16, 14)|var|float32
output = func_1076(var_1077)
func_1078 = relay.Function([var_1077], output)
mutated_mod['func_1078'] = func_1078
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1264 = relay.var("var_1264", dtype = "int16", shape = (1, 13, 6))#candidate|1264|(1, 13, 6)|var|int16
var_1265 = relay.var("var_1265", dtype = "int16", shape = (14, 13, 6))#candidate|1265|(14, 13, 6)|var|int16
bop_1266 = relay.bitwise_or(var_1264.astype('int16'), var_1265.astype('int16')) # shape=(14, 13, 6)
output = bop_1266
output2 = bop_1266
func_1276 = relay.Function([var_1264,var_1265,], output)
mod['func_1276'] = func_1276
mod = relay.transform.InferType()(mod)
mutated_mod['func_1276'] = func_1276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1276_call = mutated_mod.get_global_var('func_1276')
var_1278 = relay.var("var_1278", dtype = "int16", shape = (1, 13, 6))#candidate|1278|(1, 13, 6)|var|int16
var_1279 = relay.var("var_1279", dtype = "int16", shape = (14, 13, 6))#candidate|1279|(14, 13, 6)|var|int16
call_1277 = func_1276_call(var_1278,var_1279,)
output = call_1277
func_1280 = relay.Function([var_1278,var_1279,], output)
mutated_mod['func_1280'] = func_1280
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1409 = relay.var("var_1409", dtype = "int32", shape = ())#candidate|1409|()|var|int32
var_1410 = relay.var("var_1410", dtype = "int32", shape = (1, 13, 9))#candidate|1410|(1, 13, 9)|var|int32
bop_1411 = relay.subtract(var_1409.astype('int32'), var_1410.astype('int32')) # shape=(1, 13, 9)
bop_1416 = relay.less_equal(bop_1411.astype('bool'), var_1409.astype('bool')) # shape=(1, 13, 9)
output = relay.Tuple([bop_1416,])
output2 = relay.Tuple([bop_1416,])
func_1419 = relay.Function([var_1409,var_1410,], output)
mod['func_1419'] = func_1419
mod = relay.transform.InferType()(mod)
var_1420 = relay.var("var_1420", dtype = "int32", shape = ())#candidate|1420|()|var|int32
var_1421 = relay.var("var_1421", dtype = "int32", shape = (1, 13, 9))#candidate|1421|(1, 13, 9)|var|int32
output = func_1419(var_1420,var_1421,)
func_1422 = relay.Function([var_1420,var_1421,], output)
mutated_mod['func_1422'] = func_1422
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1501 = relay.var("var_1501", dtype = "int64", shape = ())#candidate|1501|()|var|int64
var_1502 = relay.var("var_1502", dtype = "int64", shape = (10, 4, 5))#candidate|1502|(10, 4, 5)|var|int64
bop_1503 = relay.right_shift(var_1501.astype('int64'), var_1502.astype('int64')) # shape=(10, 4, 5)
output = relay.Tuple([bop_1503,])
output2 = relay.Tuple([bop_1503,])
func_1528 = relay.Function([var_1501,var_1502,], output)
mod['func_1528'] = func_1528
mod = relay.transform.InferType()(mod)
var_1529 = relay.var("var_1529", dtype = "int64", shape = ())#candidate|1529|()|var|int64
var_1530 = relay.var("var_1530", dtype = "int64", shape = (10, 4, 5))#candidate|1530|(10, 4, 5)|var|int64
output = func_1528(var_1529,var_1530,)
func_1531 = relay.Function([var_1529,var_1530,], output)
mutated_mod['func_1531'] = func_1531
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1739 = relay.var("var_1739", dtype = "int64", shape = ())#candidate|1739|()|var|int64
var_1740 = relay.var("var_1740", dtype = "int64", shape = (13, 16, 10))#candidate|1740|(13, 16, 10)|var|int64
bop_1741 = relay.minimum(var_1739.astype('int64'), var_1740.astype('int64')) # shape=(13, 16, 10)
func_115_call = mod.get_global_var('func_115')
func_118_call = mutated_mod.get_global_var('func_118')
var_1760 = relay.var("var_1760", dtype = "float64", shape = (702,))#candidate|1760|(702,)|var|float64
call_1759 = relay.TupleGetItem(func_115_call(relay.reshape(var_1760.astype('float64'), [6, 9, 13])), 1)
call_1761 = relay.TupleGetItem(func_118_call(relay.reshape(var_1760.astype('float64'), [6, 9, 13])), 1)
bop_1763 = relay.logical_and(var_1740.astype('bool'), relay.reshape(bop_1741.astype('bool'), relay.shape_of(var_1740))) # shape=(13, 16, 10)
output = relay.Tuple([call_1759,var_1760,bop_1763,])
output2 = relay.Tuple([call_1761,var_1760,bop_1763,])
func_1774 = relay.Function([var_1739,var_1740,var_1760,], output)
mod['func_1774'] = func_1774
mod = relay.transform.InferType()(mod)
mutated_mod['func_1774'] = func_1774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1774_call = mutated_mod.get_global_var('func_1774')
var_1776 = relay.var("var_1776", dtype = "int64", shape = ())#candidate|1776|()|var|int64
var_1777 = relay.var("var_1777", dtype = "int64", shape = (13, 16, 10))#candidate|1777|(13, 16, 10)|var|int64
var_1778 = relay.var("var_1778", dtype = "float64", shape = (702,))#candidate|1778|(702,)|var|float64
call_1775 = func_1774_call(var_1776,var_1777,var_1778,)
output = call_1775
func_1779 = relay.Function([var_1776,var_1777,var_1778,], output)
mutated_mod['func_1779'] = func_1779
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1857 = relay.var("var_1857", dtype = "float32", shape = (1, 16, 9))#candidate|1857|(1, 16, 9)|var|float32
uop_1858 = relay.acosh(var_1857.astype('float32')) # shape=(1, 16, 9)
var_1862 = relay.var("var_1862", dtype = "float32", shape = (1, 16, 9))#candidate|1862|(1, 16, 9)|var|float32
bop_1863 = relay.less(uop_1858.astype('bool'), relay.reshape(var_1862.astype('bool'), relay.shape_of(uop_1858))) # shape=(1, 16, 9)
output = relay.Tuple([bop_1863,])
output2 = relay.Tuple([bop_1863,])
func_1866 = relay.Function([var_1857,var_1862,], output)
mod['func_1866'] = func_1866
mod = relay.transform.InferType()(mod)
var_1867 = relay.var("var_1867", dtype = "float32", shape = (1, 16, 9))#candidate|1867|(1, 16, 9)|var|float32
var_1868 = relay.var("var_1868", dtype = "float32", shape = (1, 16, 9))#candidate|1868|(1, 16, 9)|var|float32
output = func_1866(var_1867,var_1868,)
func_1869 = relay.Function([var_1867,var_1868,], output)
mutated_mod['func_1869'] = func_1869
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1875 = relay.var("var_1875", dtype = "bool", shape = (4, 12, 3))#candidate|1875|(4, 12, 3)|var|bool
var_1876 = relay.var("var_1876", dtype = "bool", shape = (4, 12, 3))#candidate|1876|(4, 12, 3)|var|bool
bop_1877 = relay.logical_and(var_1875.astype('bool'), relay.reshape(var_1876.astype('bool'), relay.shape_of(var_1875))) # shape=(4, 12, 3)
func_1419_call = mod.get_global_var('func_1419')
func_1422_call = mutated_mod.get_global_var('func_1422')
var_1886 = relay.var("var_1886", dtype = "int32", shape = ())#candidate|1886|()|var|int32
var_1887 = relay.var("var_1887", dtype = "int32", shape = (117,))#candidate|1887|(117,)|var|int32
call_1885 = relay.TupleGetItem(func_1419_call(relay.reshape(var_1886.astype('int32'), []), relay.reshape(var_1887.astype('int32'), [1, 13, 9]), ), 0)
call_1888 = relay.TupleGetItem(func_1422_call(relay.reshape(var_1886.astype('int32'), []), relay.reshape(var_1887.astype('int32'), [1, 13, 9]), ), 0)
output = relay.Tuple([bop_1877,call_1885,var_1886,var_1887,])
output2 = relay.Tuple([bop_1877,call_1888,var_1886,var_1887,])
func_1891 = relay.Function([var_1875,var_1876,var_1886,var_1887,], output)
mod['func_1891'] = func_1891
mod = relay.transform.InferType()(mod)
var_1892 = relay.var("var_1892", dtype = "bool", shape = (4, 12, 3))#candidate|1892|(4, 12, 3)|var|bool
var_1893 = relay.var("var_1893", dtype = "bool", shape = (4, 12, 3))#candidate|1893|(4, 12, 3)|var|bool
var_1894 = relay.var("var_1894", dtype = "int32", shape = ())#candidate|1894|()|var|int32
var_1895 = relay.var("var_1895", dtype = "int32", shape = (117,))#candidate|1895|(117,)|var|int32
output = func_1891(var_1892,var_1893,var_1894,var_1895,)
func_1896 = relay.Function([var_1892,var_1893,var_1894,var_1895,], output)
mutated_mod['func_1896'] = func_1896
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1903 = relay.var("var_1903", dtype = "float32", shape = (5, 13, 6))#candidate|1903|(5, 13, 6)|var|float32
var_1904 = relay.var("var_1904", dtype = "float32", shape = (5, 13, 6))#candidate|1904|(5, 13, 6)|var|float32
bop_1905 = relay.less_equal(var_1903.astype('bool'), relay.reshape(var_1904.astype('bool'), relay.shape_of(var_1903))) # shape=(5, 13, 6)
output = relay.Tuple([bop_1905,])
output2 = relay.Tuple([bop_1905,])
func_1935 = relay.Function([var_1903,var_1904,], output)
mod['func_1935'] = func_1935
mod = relay.transform.InferType()(mod)
mutated_mod['func_1935'] = func_1935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1935_call = mutated_mod.get_global_var('func_1935')
var_1937 = relay.var("var_1937", dtype = "float32", shape = (5, 13, 6))#candidate|1937|(5, 13, 6)|var|float32
var_1938 = relay.var("var_1938", dtype = "float32", shape = (5, 13, 6))#candidate|1938|(5, 13, 6)|var|float32
call_1936 = func_1935_call(var_1937,var_1938,)
output = call_1936
func_1939 = relay.Function([var_1937,var_1938,], output)
mutated_mod['func_1939'] = func_1939
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2089 = relay.var("var_2089", dtype = "float64", shape = (7, 14, 10))#candidate|2089|(7, 14, 10)|var|float64
uop_2090 = relay.exp(var_2089.astype('float64')) # shape=(7, 14, 10)
output = relay.Tuple([uop_2090,])
output2 = relay.Tuple([uop_2090,])
func_2104 = relay.Function([var_2089,], output)
mod['func_2104'] = func_2104
mod = relay.transform.InferType()(mod)
var_2105 = relay.var("var_2105", dtype = "float64", shape = (7, 14, 10))#candidate|2105|(7, 14, 10)|var|float64
output = func_2104(var_2105)
func_2106 = relay.Function([var_2105], output)
mutated_mod['func_2106'] = func_2106
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2255 = relay.var("var_2255", dtype = "float32", shape = (6, 10, 4))#candidate|2255|(6, 10, 4)|var|float32
uop_2256 = relay.cos(var_2255.astype('float32')) # shape=(6, 10, 4)
output = uop_2256
output2 = uop_2256
func_2260 = relay.Function([var_2255,], output)
mod['func_2260'] = func_2260
mod = relay.transform.InferType()(mod)
mutated_mod['func_2260'] = func_2260
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2261 = relay.var("var_2261", dtype = "float32", shape = (6, 10, 4))#candidate|2261|(6, 10, 4)|var|float32
func_2260_call = mutated_mod.get_global_var('func_2260')
call_2262 = func_2260_call(var_2261)
output = call_2262
func_2263 = relay.Function([var_2261], output)
mutated_mod['func_2263'] = func_2263
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2316 = relay.var("var_2316", dtype = "float64", shape = (12, 4, 11))#candidate|2316|(12, 4, 11)|var|float64
uop_2317 = relay.sin(var_2316.astype('float64')) # shape=(12, 4, 11)
var_2329 = relay.var("var_2329", dtype = "float64", shape = (12, 4, 11))#candidate|2329|(12, 4, 11)|var|float64
bop_2330 = relay.floor_mod(uop_2317.astype('float64'), relay.reshape(var_2329.astype('float64'), relay.shape_of(uop_2317))) # shape=(12, 4, 11)
func_1528_call = mod.get_global_var('func_1528')
func_1531_call = mutated_mod.get_global_var('func_1531')
const_2348 = relay.const(3, dtype = "int64")#candidate|2348|()|const|int64
const_2349 = relay.const([8,7,-8,7,-8,1,-5,-3,-9,9,3,10,-4,-1,10,2,-3,5,3,-3,9,3,2,-6,-3,10,8,1,-4,9,-4,2,-1,-9,1,7,7,-3,8,-1,4,-6,-3,2,-9,1,-5,-1,2,-1,5,10,-10,2,-10,-8,6,5,-2,5,2,-5,1,-1,9,3,-2,5,-5,7,-1,10,-2,7,3,-5,9,10,-7,10,-5,-9,5,-8,-2,6,1,-9,10,-6,9,8,1,-6,10,-6,1,3,-1,6,5,5,5,-8,-1,8,6,-5,-5,-7,1,2,-1,7,6,-5,5,-7,-7,7,-1,-7,-10,-4,-5,10,6,-7,-6,7,8,-1,4,-3,-6,9,3,4,10,8,1,-3,-9,2,-3,-5,4,3,-7,1,5,1,-7,3,5,3,1,-2,6,-8,-6,-1,-1,8,-9,3,8,3,-1,1,10,-1,-1,3,-9,-8,4,-3,2,-4,10,-6,-3,4,-5,-9,10,-6,-3,10,-8,6,8,6,3,-2,7,-1,-6,4], dtype = "int64")#candidate|2349|(200,)|const|int64
call_2347 = relay.TupleGetItem(func_1528_call(relay.reshape(const_2348.astype('int64'), []), relay.reshape(const_2349.astype('int64'), [10, 4, 5]), ), 0)
call_2350 = relay.TupleGetItem(func_1531_call(relay.reshape(const_2348.astype('int64'), []), relay.reshape(const_2349.astype('int64'), [10, 4, 5]), ), 0)
output = relay.Tuple([bop_2330,call_2347,const_2348,const_2349,])
output2 = relay.Tuple([bop_2330,call_2350,const_2348,const_2349,])
func_2363 = relay.Function([var_2316,var_2329,], output)
mod['func_2363'] = func_2363
mod = relay.transform.InferType()(mod)
var_2364 = relay.var("var_2364", dtype = "float64", shape = (12, 4, 11))#candidate|2364|(12, 4, 11)|var|float64
var_2365 = relay.var("var_2365", dtype = "float64", shape = (12, 4, 11))#candidate|2365|(12, 4, 11)|var|float64
output = func_2363(var_2364,var_2365,)
func_2366 = relay.Function([var_2364,var_2365,], output)
mutated_mod['func_2366'] = func_2366
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2501 = relay.var("var_2501", dtype = "int8", shape = (12, 14, 2))#candidate|2501|(12, 14, 2)|var|int8
var_2502 = relay.var("var_2502", dtype = "int8", shape = (12, 14, 2))#candidate|2502|(12, 14, 2)|var|int8
bop_2503 = relay.add(var_2501.astype('int8'), relay.reshape(var_2502.astype('int8'), relay.shape_of(var_2501))) # shape=(12, 14, 2)
func_1419_call = mod.get_global_var('func_1419')
func_1422_call = mutated_mod.get_global_var('func_1422')
var_2509 = relay.var("var_2509", dtype = "int32", shape = ())#candidate|2509|()|var|int32
var_2510 = relay.var("var_2510", dtype = "int32", shape = (117,))#candidate|2510|(117,)|var|int32
call_2508 = relay.TupleGetItem(func_1419_call(relay.reshape(var_2509.astype('int32'), []), relay.reshape(var_2510.astype('int32'), [1, 13, 9]), ), 0)
call_2511 = relay.TupleGetItem(func_1422_call(relay.reshape(var_2509.astype('int32'), []), relay.reshape(var_2510.astype('int32'), [1, 13, 9]), ), 0)
output = relay.Tuple([bop_2503,call_2508,var_2509,var_2510,])
output2 = relay.Tuple([bop_2503,call_2511,var_2509,var_2510,])
func_2512 = relay.Function([var_2501,var_2502,var_2509,var_2510,], output)
mod['func_2512'] = func_2512
mod = relay.transform.InferType()(mod)
mutated_mod['func_2512'] = func_2512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2512_call = mutated_mod.get_global_var('func_2512')
var_2514 = relay.var("var_2514", dtype = "int8", shape = (12, 14, 2))#candidate|2514|(12, 14, 2)|var|int8
var_2515 = relay.var("var_2515", dtype = "int8", shape = (12, 14, 2))#candidate|2515|(12, 14, 2)|var|int8
var_2516 = relay.var("var_2516", dtype = "int32", shape = ())#candidate|2516|()|var|int32
var_2517 = relay.var("var_2517", dtype = "int32", shape = (117,))#candidate|2517|(117,)|var|int32
call_2513 = func_2512_call(var_2514,var_2515,var_2516,var_2517,)
output = call_2513
func_2518 = relay.Function([var_2514,var_2515,var_2516,var_2517,], output)
mutated_mod['func_2518'] = func_2518
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2888 = relay.var("var_2888", dtype = "bool", shape = (10, 5, 8))#candidate|2888|(10, 5, 8)|var|bool
const_2889 = relay.const([[[True,False,False,True,True,True,False,True],[False,False,True,True,True,True,False,False],[False,False,False,True,True,True,True,False],[True,False,True,True,False,True,False,True],[True,False,True,False,True,True,False,True]],[[True,True,False,False,False,False,False,False],[False,False,True,False,True,False,False,True],[True,False,False,True,True,False,False,False],[False,True,False,True,False,False,False,False],[True,True,False,False,True,True,False,False]],[[True,False,False,True,False,False,False,True],[False,False,False,True,True,True,True,True],[False,False,True,True,False,True,True,False],[False,True,False,False,False,False,False,False],[False,False,True,True,False,True,False,True]],[[True,True,False,False,False,False,False,False],[False,True,True,False,False,False,False,True],[False,False,True,False,True,True,False,True],[True,True,False,True,False,True,False,False],[False,True,False,False,True,False,False,True]],[[True,False,True,False,False,False,True,False],[False,False,True,True,True,True,True,False],[True,True,True,True,False,False,True,False],[True,False,False,False,False,True,True,False],[True,False,False,True,False,True,False,True]],[[True,True,False,False,False,True,False,True],[True,True,True,True,True,False,False,False],[False,False,False,True,True,True,True,False],[False,True,False,False,False,False,True,True],[True,False,True,True,True,True,True,False]],[[False,False,False,False,False,False,False,True],[False,True,False,False,False,True,False,False],[False,False,True,False,False,False,True,True],[False,False,True,False,True,False,False,True],[False,False,True,False,False,False,True,True]],[[True,True,True,True,False,True,False,False],[False,True,False,False,True,True,False,False],[True,True,False,False,True,False,False,True],[True,True,True,True,True,True,False,False],[False,True,False,True,True,False,True,True]],[[True,False,True,False,True,True,False,True],[False,False,True,True,True,True,False,False],[True,False,True,False,True,False,True,True],[True,True,False,False,True,False,True,False],[False,True,False,True,False,True,False,True]],[[True,False,False,False,True,True,False,False],[True,False,True,False,False,False,True,True],[True,False,False,False,False,True,False,False],[False,False,True,True,True,False,False,True],[False,False,True,True,True,False,False,False]]], dtype = "bool")#candidate|2889|(10, 5, 8)|const|bool
bop_2890 = relay.logical_or(var_2888.astype('bool'), relay.reshape(const_2889.astype('bool'), relay.shape_of(var_2888))) # shape=(10, 5, 8)
bop_2894 = relay.right_shift(const_2889.astype('int16'), relay.reshape(var_2888.astype('int16'), relay.shape_of(const_2889))) # shape=(10, 5, 8)
output = relay.Tuple([bop_2890,bop_2894,])
output2 = relay.Tuple([bop_2890,bop_2894,])
func_2907 = relay.Function([var_2888,], output)
mod['func_2907'] = func_2907
mod = relay.transform.InferType()(mod)
var_2908 = relay.var("var_2908", dtype = "bool", shape = (10, 5, 8))#candidate|2908|(10, 5, 8)|var|bool
output = func_2907(var_2908)
func_2909 = relay.Function([var_2908], output)
mutated_mod['func_2909'] = func_2909
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3245 = relay.var("var_3245", dtype = "float64", shape = ())#candidate|3245|()|var|float64
const_3246 = relay.const([[[-4.736537,-4.466134,-9.422391,1.917547,-6.960150,2.340588,-6.659616,-5.422266,-5.004359,-9.536740],[8.762204,6.360989,-4.902060,6.881378,0.576111,6.346293,1.306801,2.942194,1.736822,-4.205079],[1.598912,3.000439,-2.039354,9.454070,-3.772667,-0.813437,-8.041853,3.627034,0.693293,-4.505339],[8.868282,-9.406784,5.063260,-6.867261,9.763643,-3.206334,-2.588601,-9.263851,8.641231,-0.007961],[2.448029,8.908498,-4.352038,-8.063477,-6.123418,7.538981,-7.009999,-5.716353,5.928914,-0.215083],[3.619639,1.777425,7.305770,-0.313559,7.245348,-0.128810,-1.609143,0.140408,-6.464576,-8.946301],[-6.759376,-1.930751,8.755977,-4.389706,-7.182298,1.196958,2.633743,2.797953,-1.789525,2.342246],[-8.342975,-2.188628,9.391258,-2.594692,9.085391,-7.695671,-3.221222,-6.361259,1.396667,-3.330677],[-2.164837,5.473937,6.080768,-4.528895,1.578747,1.679748,7.029628,-6.595938,8.197159,-4.906614],[3.949103,-6.592781,0.917116,2.161601,7.116821,-9.273739,-5.194062,1.282954,6.990427,7.232383],[7.775361,-0.536984,2.542599,-3.544988,7.088656,7.614712,5.448668,-7.971139,3.701821,-9.751209],[-2.132109,-8.378558,-6.375262,-2.722814,5.172332,-0.096525,-3.387734,5.873449,9.832769,9.972859],[-9.757104,0.661287,-9.723944,-6.853932,-5.849230,3.040982,-3.380893,0.571828,6.650283,-4.255182],[5.415657,-5.624013,5.496526,7.575865,1.479721,-1.945477,-9.364883,7.169597,5.490712,-3.901176],[-2.340412,-4.074938,6.199846,-9.917344,6.875403,6.273159,7.322069,1.583414,9.679956,-3.081496]],[[3.956815,-5.848453,-1.840843,-3.867654,5.921626,8.521652,-6.551691,-1.909011,5.019177,2.172130],[8.510162,-1.524405,-6.444144,-6.483346,-0.034746,-4.885017,2.314569,8.773685,-4.169819,1.786089],[-8.330957,-2.309594,8.250732,-9.853811,2.325702,1.176477,-8.095185,8.503293,7.795916,-7.392704],[-6.913248,1.769048,6.062253,-1.697717,3.028173,-7.719047,-6.675609,-8.731124,1.234547,4.040986],[-2.717330,-4.831934,-4.264348,4.338437,0.823747,8.155609,-0.461549,8.956693,-2.425623,-9.057326],[4.333924,8.606617,8.736338,8.982271,5.832868,5.836543,-5.929775,-1.092498,9.387379,-3.492800],[-0.887394,1.080351,4.226328,-6.203627,-4.899483,9.850720,7.120552,4.469506,-9.664737,-3.942708],[2.497394,-9.101958,5.479916,-0.280247,-3.572520,5.005271,9.858535,-4.842780,7.584908,-8.252930],[6.813141,5.524683,-8.067202,1.709066,-5.246043,-4.961581,1.588365,5.763087,-3.113310,6.777385],[-7.214730,3.217216,7.434447,-4.517205,-4.114254,-6.176446,-4.885167,9.022791,2.003923,-5.720637],[-3.044017,2.972472,8.478193,-6.853932,0.610248,-3.575653,-1.184295,9.380629,0.460431,-7.937423],[-1.669139,7.694737,-8.713481,1.696880,3.213841,3.237485,8.030782,8.053255,6.591451,-0.418222],[-7.413399,1.879453,-8.260141,-8.347873,-2.774778,6.445263,-6.184259,-2.799736,3.286728,-9.260940],[0.332948,-3.673731,-0.186208,4.800984,8.972172,-7.267199,-8.667587,-4.860975,-1.705113,1.503218],[6.504551,2.641437,0.412436,4.620335,-8.827407,-0.991162,6.263275,-8.924151,-4.050914,-9.062846]],[[3.134202,3.723654,-7.303777,-1.674306,3.536027,0.582967,-2.890087,-1.389151,-3.424354,9.259547],[5.529282,-2.350222,-4.412489,-5.850754,-6.572331,0.602223,-0.863306,-2.869873,-5.693436,1.192443],[-5.121033,6.392908,-5.907905,-3.911437,1.976357,4.242882,3.592386,9.993073,-6.529935,3.608328],[-0.776437,-6.293477,5.729609,7.154497,6.601448,6.914330,-1.234059,-5.005774,-5.167385,5.734150],[-1.941008,-6.124912,5.646045,-0.510615,-1.174600,-1.400211,-7.297607,9.108156,9.044344,8.741725],[3.445266,-2.995392,0.323714,-0.325748,-4.723458,1.893255,-8.511260,-1.660868,-0.473028,3.935526],[-7.859147,0.412373,-3.289025,6.422572,-6.169468,-1.683407,7.486569,6.026213,-0.068030,7.180887],[7.065281,7.069933,-8.152061,0.222442,-7.732926,3.913567,2.666606,3.824426,7.917369,9.798378],[-8.765260,-0.982878,5.083280,-7.976120,1.564111,-3.610387,4.157449,2.116744,8.345514,-4.863786],[5.027344,5.377321,-5.315404,7.764955,1.176642,7.469327,-3.732103,7.445601,9.913663,3.482505],[1.910634,-2.598557,-4.295262,3.468326,-7.378609,7.904599,5.325555,-3.290215,-2.657576,-3.577070],[2.679191,9.865076,4.773656,0.163650,-2.759384,9.101066,-9.636643,-7.271536,4.059552,-2.932389],[6.551870,-7.079378,-2.867463,0.835971,-4.469220,-1.896327,3.477914,9.371222,7.574565,-9.916370],[-1.868496,8.466251,2.883947,3.806890,4.696153,-5.509721,0.006337,-2.102401,-0.663422,-9.544995],[5.586217,-2.513321,-3.452932,3.509364,-9.634988,-5.185862,8.350587,5.527999,1.780528,-4.724363]],[[-7.952112,-2.045417,3.458492,-4.689466,-3.505370,-7.747713,9.556061,-0.514813,-3.346772,1.268940],[5.614294,1.490186,-4.012944,9.445570,8.446690,-1.133253,8.846609,-7.223993,6.023964,-7.288867],[6.947019,2.380144,0.042087,5.585425,7.665248,-1.921192,-6.090552,-2.443730,-4.809750,-1.374598],[7.100498,6.435967,1.670405,0.205958,-1.420503,-9.761213,-2.508700,1.104182,-3.958698,4.905075],[6.440372,-6.897054,-7.442370,-5.498373,9.140500,-8.499477,-9.624037,5.204457,2.185252,-6.775834],[-9.460847,-0.969399,4.745959,-1.625535,-6.407473,5.806554,7.729593,2.859198,-3.413553,-3.284960],[-7.200188,-2.206799,-8.717899,3.263464,-9.845884,-2.644037,-2.644673,1.556039,-9.697433,5.207192],[-2.871186,-9.519555,4.989616,9.909009,-1.266240,4.718679,-5.936288,0.004007,0.550011,0.343247],[-8.864925,-4.360079,-7.818407,-0.058944,9.450715,6.422975,1.293107,0.128414,6.620740,-5.041411],[-9.596183,-9.857665,-0.968211,3.479608,-3.797733,7.983120,-4.898825,-8.010344,-9.163579,8.466711],[-9.058398,2.640295,5.653739,-6.407548,5.856318,-6.556874,-4.756621,-2.962365,-4.911768,-5.309652],[-9.730240,3.042263,0.821648,2.258479,6.253493,0.847762,3.956931,4.025996,2.762402,8.002909],[-3.116255,-2.245020,8.300717,2.954874,7.188001,-3.212130,-4.319555,-0.311887,8.674016,6.819892],[0.986147,2.776563,6.095803,0.040622,-0.183255,3.281359,-6.059940,-7.521327,-9.276671,5.320229],[5.148077,-2.839536,8.804364,-2.932156,-0.527467,6.170857,-5.638215,3.587862,8.291269,2.037205]],[[7.240310,5.982214,-6.613223,5.962756,1.618203,-1.722552,5.720594,-5.964826,-8.044096,2.874444],[-0.888634,-7.258143,1.538344,-5.372475,-9.559630,2.846763,-6.586985,2.521899,-2.262598,-3.339674],[3.236666,-8.892098,2.857994,3.524229,2.114668,-6.112272,-6.047592,0.055264,-5.729509,-7.865150],[4.937692,0.957256,-3.096492,-0.983369,4.661135,0.871715,-3.084313,7.840077,-2.109171,5.469221],[-2.714345,-5.045839,-0.771789,-2.453854,8.148365,8.075601,-7.497828,2.462306,7.178592,9.912653],[-9.533123,9.854272,2.849576,-5.049353,1.279540,6.585180,6.074612,-7.619540,0.299979,5.914069],[-8.895061,5.742311,0.770604,2.717702,6.211372,5.525114,9.773749,-7.000957,-3.702600,5.231878],[-1.806563,0.663996,-5.748044,8.904477,-6.252670,-1.964316,0.856638,-5.078715,-9.143919,6.607282],[-5.789809,7.650528,6.679023,-7.080156,-0.269566,8.018658,5.162178,1.835279,3.956606,4.817373],[3.638572,-7.389386,-7.097396,6.789097,-6.833298,-0.851766,3.016656,3.868547,7.518097,-7.635930],[1.781336,-8.662733,-9.675210,-3.714580,-0.314551,-9.849663,0.952715,-1.191097,7.734543,1.307248],[-2.268635,-2.603034,7.210462,-6.881281,-0.048321,0.183048,-6.500574,-1.026528,9.852370,-4.562783],[-6.298339,1.948346,1.324380,4.263741,7.316354,0.884966,-9.354514,8.325183,6.838845,-5.052563],[4.598871,6.058250,7.909869,-8.577273,-1.546538,-0.588409,9.486224,-3.320244,1.024914,0.028085],[-9.106243,-8.362070,5.081513,2.875383,7.179831,-5.706172,8.195588,0.957875,8.819333,7.458891]],[[-1.940727,-2.017433,2.434521,1.016516,0.306771,0.071073,5.634832,-6.691476,6.774668,1.632610],[-6.344638,1.947320,3.708634,-8.980571,7.217529,-3.178694,-0.325977,3.975987,7.000226,-0.037739],[-6.899784,7.481273,-1.033139,-5.802906,8.672125,-3.513602,4.055790,1.792156,-1.591218,5.642196],[0.951632,-4.968348,-7.635279,8.476513,-9.425353,-9.281269,0.941145,-8.213346,-2.639646,7.851772],[-2.378713,7.430964,-0.099133,-8.249883,-8.232569,-7.383891,1.876380,5.671446,-8.727082,1.029566],[9.266715,1.617255,3.146036,-5.705660,-3.324767,3.870726,8.864341,-9.177515,8.593344,7.105883],[-4.439186,3.495952,-2.345749,-6.992634,1.860999,6.204291,2.509979,7.350267,-2.250767,-7.893444],[-9.490859,9.374097,-2.854005,8.097371,-2.841126,-4.975477,-5.359082,-9.915936,-3.286866,9.893278],[-7.480507,-9.974809,-8.815196,0.619956,0.589204,5.370098,6.495731,-1.273312,6.581844,-7.211393],[-7.894735,-1.765928,-1.133048,0.400639,7.031369,8.589964,1.743340,-5.698090,3.895290,-9.637092],[1.835538,-6.418412,-6.794039,9.458719,-4.123814,3.379011,-1.242498,4.531590,-3.857341,5.246690],[-4.155896,8.076108,9.601952,7.758588,7.292941,7.748500,1.133775,-5.813822,-7.139414,5.321814],[3.545019,0.749161,3.656409,-0.888363,7.200909,1.826388,-8.303559,6.249499,-3.861233,2.965551],[-0.104522,2.304395,-0.787218,5.557161,7.085602,-6.016360,8.931261,-3.365593,-2.634211,-5.314088],[-6.672079,7.162894,9.198229,-4.261663,0.837773,0.424803,0.466632,-7.354685,-3.704716,-4.248922]],[[-2.801172,-1.721577,9.980136,-5.096040,-7.800048,5.796673,6.419993,7.124598,-4.488519,-3.641765],[3.263392,6.907764,-7.987901,5.735291,-1.558372,-0.992757,-3.437356,-4.802145,3.056432,2.636715],[-8.015819,1.315640,-9.509042,-8.089718,-7.044637,-5.630679,-4.923897,-9.643922,8.415471,-1.780117],[-6.432736,7.335136,1.941268,-5.978052,-5.847399,-9.274098,-7.747948,-5.402043,0.412870,2.116243],[-9.417612,6.859851,-8.709475,1.170855,9.189938,7.446453,4.377413,-2.313983,-9.713163,7.213117],[7.215411,2.933873,4.463027,-3.682824,-1.982028,7.569121,3.240515,-2.990212,-8.528927,-4.191077],[0.361888,7.815305,-1.110903,5.361914,-9.218948,0.592536,1.516190,-1.400569,2.503898,9.356469],[-4.222440,-7.557665,1.974561,9.511340,-9.269336,-1.755617,0.163932,-4.239001,7.160437,8.247154],[8.019952,1.686258,1.596397,8.378869,-4.244781,7.357218,2.513403,3.049201,-0.749484,5.451561],[-4.915387,-0.017995,2.264666,8.054944,-6.927327,9.143307,0.593195,-4.005665,-9.892181,0.473784],[-8.837107,6.568478,-6.503324,1.352215,-5.928110,-4.953623,-3.174191,-7.978519,6.500575,-4.230758],[-4.891744,8.919332,7.239648,2.831863,-0.093653,-4.266466,1.036800,-2.104140,-8.391917,-5.553574],[-0.240383,3.136226,0.585358,9.304290,1.724072,-0.288024,4.593876,-2.648812,-8.231080,-2.476649],[-8.060660,7.423446,-7.504318,-5.653055,6.973331,1.229074,4.670267,-8.963869,5.126682,4.589999],[-1.946958,-0.312122,-0.900219,-2.526749,-6.944948,1.555272,6.883042,-4.186508,-9.377816,1.917354]],[[2.745062,-5.590902,2.280724,2.589927,-1.680274,-3.827863,6.187278,-7.574303,0.307418,-9.824595],[8.892450,-2.729109,-0.374579,-0.986625,6.953888,6.943438,6.887458,3.910696,-7.015006,2.669553],[-3.323426,3.493034,-2.288509,8.445257,-8.150013,-4.013660,7.448052,1.315043,2.914914,-5.154262],[7.187472,-6.944484,0.980843,8.308874,-9.993411,-3.382951,-4.517090,-5.038242,8.756656,-7.841280],[5.964889,9.246090,-2.461937,4.317239,3.927881,-1.410244,6.084503,8.334142,8.796350,-4.663933],[8.636625,-2.950237,0.432871,-6.555685,-5.870316,-6.017111,4.703142,-3.015024,-7.385969,-5.871440],[7.111162,-2.626028,7.665037,-2.201220,0.001963,-6.697551,9.285424,-1.947684,-2.688900,-9.661752],[-4.978634,-1.082846,-5.668133,4.111286,-2.502381,-0.095178,-3.976156,-8.894163,-2.675929,-0.552297],[-3.738746,-2.004240,8.164661,-5.208787,-7.687248,-1.203771,7.278971,-1.106175,1.736909,8.542384],[7.358263,-7.380364,-7.290632,8.713937,3.584389,-7.676002,5.171504,6.862317,-0.791786,-8.020261],[-2.875553,0.247205,8.584087,-7.872228,2.516510,5.293753,6.564039,-5.394950,-0.186181,7.179133],[-4.028489,6.353500,-3.073479,-8.271242,-6.330245,0.487420,-0.804694,3.516060,0.516881,-0.330310],[4.436865,8.651334,2.114270,-5.419736,-5.453689,2.403902,-1.880511,-3.404782,-9.351171,4.388000],[1.584782,5.503381,9.822054,9.542080,-6.518817,5.379375,7.064391,8.977064,-5.564457,1.484665],[3.989084,9.603766,4.480599,-4.928981,6.059500,8.275016,8.122718,-8.509606,8.972195,9.937100]],[[1.123540,8.782033,6.351801,-7.637972,-9.204561,-5.728241,-4.973541,0.861473,7.435457,2.167534],[8.046537,8.580879,-8.637949,9.154327,-1.481733,2.825356,3.183690,-6.477780,4.635146,5.158899],[-0.304666,0.683807,3.312808,5.167326,1.959598,9.027465,3.841907,8.032368,-6.471251,7.091949],[8.771991,1.244656,5.668026,9.531819,-2.030494,-5.409364,7.089961,4.416343,6.979579,7.079450],[-3.894659,8.922409,-8.839122,1.624155,-0.986220,3.224156,5.113919,-1.289514,-2.181461,-3.529830],[-1.003499,-7.125580,-4.658704,7.184594,-4.984035,-6.100978,3.783235,-6.099546,-0.933642,5.029198],[-1.903637,-4.291072,2.467180,-6.939810,3.409978,-1.769244,7.263913,6.160307,-1.098336,5.243361],[9.182428,9.486833,-4.286978,-1.337682,0.790997,7.921497,-2.118208,-7.342325,-0.235175,-8.422245],[6.087713,-5.626783,7.009833,-0.830828,-5.108584,-1.837940,-9.569531,-7.638206,8.846515,9.758014],[-6.999634,-9.852968,7.583312,-1.339107,2.123693,9.525816,1.041984,8.420933,3.202393,2.612290],[-9.851919,5.800000,0.689628,0.992624,4.313866,-1.412084,7.082210,-9.458246,4.967692,-2.848980],[3.517517,4.660327,5.815897,8.794844,-3.243863,-0.674773,-1.562688,3.909759,-4.017641,-7.693213],[-3.707165,4.753727,2.892689,-5.181415,9.325563,0.120553,-6.378539,2.319065,-4.356438,-0.464825],[9.504818,1.441507,-1.783746,-7.901177,9.932245,-6.958603,0.906649,0.221883,-2.680674,8.494870],[-6.785260,-0.802879,4.748521,9.874778,5.651934,-4.521402,-1.712943,-2.110790,3.703691,5.862446]],[[-9.437789,-6.445931,-2.655356,-0.276961,2.475847,-2.062211,1.132232,-5.888045,-8.419744,-3.529544],[5.774299,6.344863,-8.049256,-7.087583,-2.543523,-8.696977,-5.428745,-1.878415,-2.502658,5.891207],[-1.096395,7.933269,-7.926619,-8.319119,0.682436,-8.813275,2.404750,2.849030,-9.193701,5.815391],[4.909116,4.679581,-6.503865,-6.314685,-3.792333,-1.986665,2.799066,-8.937192,8.570058,1.368441],[3.953806,3.917979,5.842469,-0.604569,8.389358,-4.879996,9.762279,-0.459744,1.843640,-5.458885],[-8.375160,-2.257412,9.811843,2.669253,3.552768,7.319953,0.943302,6.797652,3.863118,-2.153720],[-8.053656,-7.409568,-9.979320,6.415686,0.424307,8.113060,4.983545,-4.120031,0.470466,6.301865],[-4.592986,1.699664,-2.773625,-0.913277,1.183441,-2.584574,8.045905,7.210419,3.262586,2.136713],[6.504767,-1.184471,-7.852350,5.761871,-6.490616,-3.164717,0.920859,-9.264755,-4.595790,-8.444935],[9.337098,1.824638,3.007981,-0.158997,-9.859002,9.589320,9.104729,-8.777693,-0.860570,4.181002],[-3.247189,1.263949,4.043073,9.838016,-4.164274,7.258364,-7.167539,-4.681457,-7.579723,-4.559536],[-1.408040,-9.652568,3.764343,8.769597,-3.566654,2.824639,-0.803963,-6.460275,-4.765612,-2.797747],[3.640254,6.417025,-5.303296,8.075652,-2.031019,7.872156,-8.012064,-3.925062,-5.560541,3.892568],[-1.894501,-2.765691,-9.877949,0.238207,-7.027285,0.065874,6.117179,-4.992447,0.470597,-3.460064],[3.790957,-1.149263,1.811495,-3.052084,4.810473,-9.743749,-8.474036,-8.720633,-3.975816,6.796943]]], dtype = "float64")#candidate|3246|(10, 15, 10)|const|float64
bop_3247 = relay.floor_divide(var_3245.astype('float64'), const_3246.astype('float64')) # shape=(10, 15, 10)
func_1935_call = mod.get_global_var('func_1935')
func_1939_call = mutated_mod.get_global_var('func_1939')
const_3251 = relay.const([4.183576,-0.850686,-5.665833,5.549342,-3.125356,-0.557489,-4.201703,5.169665,-2.626907,3.723379,-4.490301,-6.827596,-4.316202,-1.819287,-2.585017,7.222407,2.854485,-4.466615,-2.188452,7.748073,-9.670421,1.613171,6.139601,2.204714,9.835322,9.769924,-2.158803,-2.504560,6.194366,-6.668073,-9.560966,-7.414345,3.759567,6.486152,-4.637060,2.741806,-3.125762,0.877100,6.995556,8.898447,3.644995,-7.247763,8.596481,8.615580,4.796303,-8.776490,4.329415,-3.650912,6.232897,-3.814970,-3.694093,-3.352080,-3.565951,-7.926313,-3.731918,-6.813264,8.643985,-4.230628,9.594140,1.763187,2.128266,-3.769877,-2.205794,-8.889289,9.684607,9.243196,-5.710378,-9.854138,0.735878,-6.196740,9.453307,-1.223857,-5.456221,3.453644,-7.217544,-7.654670,-4.975558,-9.519917,9.247525,-8.745840,6.008668,3.849160,-9.413621,-7.497687,-5.701469,7.808140,3.407557,-0.654627,-6.832486,-9.514158,9.728498,7.206170,1.198465,-5.583710,-7.765347,4.461419,2.720976,7.657001,6.820339,6.298130,-5.984399,6.994482,-3.911413,0.149839,8.483179,4.008558,6.933940,-1.658236,-3.148559,7.756761,2.576317,-0.397289,5.993290,-4.247814,4.623641,6.758429,5.894692,-7.721194,-7.198439,-5.710546,6.321346,-2.041154,-5.324738,2.971264,-4.142151,9.316742,-5.697886,-1.872260,6.340197,-7.986721,-7.772281,0.092986,-2.132154,-9.069206,8.286679,-6.448253,-5.309790,3.437823,9.671474,-4.034857,-0.979418,8.274182,1.393400,-6.257571,6.651450,-0.767317,-5.247305,8.097467,6.699886,-6.463236,-9.962764,8.616904,0.339614,-1.604484,7.703084,-4.422842,-6.506604,-5.117965,6.241732,2.375438,3.175709,8.351117,4.896610,-8.250660,-4.289442,4.634011,5.013916,9.994711,-3.474911,3.558797,-6.043372,0.695301,-4.459374,6.677532,-5.198156,-7.117423,-5.423482,-2.563525,-6.484008,-2.890619,5.576671,1.827705,-6.010347,5.288515,-2.999365,-4.370336,4.599422,-0.189603,-2.884364,9.068372,-3.004924,-5.367448,2.815028,-5.518917,-2.963115,-8.436112,-5.121905,-4.911942,7.170739,4.151573,1.967529,-8.392901,5.466612,-9.388082,-6.343138,1.942275,6.115701,2.205835,-3.472641,-8.989240,-8.976111,-4.685713,-0.305199,4.574230,-8.822066,-1.914692,7.566029,-5.447533,1.353155,-1.515170,2.538956,-6.477470,3.976567,0.955194,3.206580,-8.905239,0.935444,-2.787587,-1.416273,9.806088,1.502999,-6.159232,-5.885358,4.458648,5.941474,-7.493183,4.962831,8.923513,-2.427501,-6.011928,-8.564257,-3.275345,4.139716,7.873141,-0.034987,2.131831,-0.365816,-9.877403,-1.978258,-3.773770,9.996278,-5.423822,5.721148,-8.450394,5.330675,3.720654,8.543048,9.621111,9.019054,-3.713665,3.473656,8.615544,8.122565,-7.897415,8.953952,3.557308,7.380941,-7.692723,4.085653,6.488161,1.770801,-2.890118,-6.192560,-8.084372,3.101216,5.519484,-1.046349,-4.474302,5.215407,1.180934,-5.944445,2.198331,2.020223,-9.180690,-6.994691,9.918615,3.992481,1.059088,6.420980,9.795876,-5.799838,9.700775,6.060233,9.394274,-7.765433,3.321082,0.986082,5.979932,-9.567478,-7.189503,4.353636,1.153981,5.182684,-3.138794,-5.421611,2.780006,-7.529708,5.064338,3.105923,-0.591484,2.119462,-8.062703,4.848522,2.203140,2.541676,-6.749895,3.349016,1.017063,-6.655075,5.161023,6.652431,-6.080275,2.166501,9.157230,-1.880701,6.819902,-6.714896,-4.412973,9.457396,2.016845,3.893472,3.097755,9.008147,-0.670891,-3.416100,-2.934423,-2.337474,3.861570,-5.237852,-0.904283,4.489236,6.637247,2.278269,1.529077,5.868100,-9.015827,-5.432628,-3.035032,-5.225942,-2.483310,-3.366679,2.700035,6.858342,2.065479,0.899973,-3.350316,3.501262,-5.180887,5.954056,1.525182,9.559976,-8.187191,5.759451,2.870819,3.469901,-3.978083,6.188716,-5.434322,-9.559132,-6.626687,-2.742144,-3.223818,-7.573340,-0.739396,-0.217225,9.108133,3.597903,-7.117243,-9.163099,8.548025,0.945873,1.239962,9.076307,5.257441,8.534189,8.671093,-2.116011,6.144147,8.009807,-2.283468], dtype = "float32")#candidate|3251|(390,)|const|float32
call_3250 = relay.TupleGetItem(func_1935_call(relay.reshape(const_3251.astype('float32'), [5, 13, 6]), relay.reshape(const_3251.astype('float32'), [5, 13, 6]), ), 0)
call_3252 = relay.TupleGetItem(func_1939_call(relay.reshape(const_3251.astype('float32'), [5, 13, 6]), relay.reshape(const_3251.astype('float32'), [5, 13, 6]), ), 0)
output = relay.Tuple([bop_3247,call_3250,const_3251,])
output2 = relay.Tuple([bop_3247,call_3252,const_3251,])
func_3256 = relay.Function([var_3245,], output)
mod['func_3256'] = func_3256
mod = relay.transform.InferType()(mod)
var_3257 = relay.var("var_3257", dtype = "float64", shape = ())#candidate|3257|()|var|float64
output = func_3256(var_3257)
func_3258 = relay.Function([var_3257], output)
mutated_mod['func_3258'] = func_3258
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3398 = relay.var("var_3398", dtype = "float64", shape = (7, 10, 3))#candidate|3398|(7, 10, 3)|var|float64
uop_3399 = relay.atanh(var_3398.astype('float64')) # shape=(7, 10, 3)
bop_3408 = relay.equal(uop_3399.astype('bool'), relay.reshape(var_3398.astype('bool'), relay.shape_of(uop_3399))) # shape=(7, 10, 3)
output = relay.Tuple([bop_3408,])
output2 = relay.Tuple([bop_3408,])
func_3420 = relay.Function([var_3398,], output)
mod['func_3420'] = func_3420
mod = relay.transform.InferType()(mod)
mutated_mod['func_3420'] = func_3420
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3421 = relay.var("var_3421", dtype = "float64", shape = (7, 10, 3))#candidate|3421|(7, 10, 3)|var|float64
func_3420_call = mutated_mod.get_global_var('func_3420')
call_3422 = func_3420_call(var_3421)
output = call_3422
func_3423 = relay.Function([var_3421], output)
mutated_mod['func_3423'] = func_3423
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3787 = relay.var("var_3787", dtype = "float32", shape = (12, 7, 4))#candidate|3787|(12, 7, 4)|var|float32
uop_3788 = relay.atanh(var_3787.astype('float32')) # shape=(12, 7, 4)
output = uop_3788
output2 = uop_3788
func_3792 = relay.Function([var_3787,], output)
mod['func_3792'] = func_3792
mod = relay.transform.InferType()(mod)
mutated_mod['func_3792'] = func_3792
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3793 = relay.var("var_3793", dtype = "float32", shape = (12, 7, 4))#candidate|3793|(12, 7, 4)|var|float32
func_3792_call = mutated_mod.get_global_var('func_3792')
call_3794 = func_3792_call(var_3793)
output = call_3794
func_3795 = relay.Function([var_3793], output)
mutated_mod['func_3795'] = func_3795
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3876 = relay.const(-9, dtype = "int16")#candidate|3876|()|const|int16
var_3877 = relay.var("var_3877", dtype = "int16", shape = (10, 10, 1))#candidate|3877|(10, 10, 1)|var|int16
bop_3878 = relay.left_shift(const_3876.astype('int16'), var_3877.astype('int16')) # shape=(10, 10, 1)
output = bop_3878
output2 = bop_3878
func_3884 = relay.Function([var_3877,], output)
mod['func_3884'] = func_3884
mod = relay.transform.InferType()(mod)
mutated_mod['func_3884'] = func_3884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3885 = relay.var("var_3885", dtype = "int16", shape = (10, 10, 1))#candidate|3885|(10, 10, 1)|var|int16
func_3884_call = mutated_mod.get_global_var('func_3884')
call_3886 = func_3884_call(var_3885)
output = call_3886
func_3887 = relay.Function([var_3885], output)
mutated_mod['func_3887'] = func_3887
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3901 = relay.var("var_3901", dtype = "float32", shape = (6, 2, 7))#candidate|3901|(6, 2, 7)|var|float32
uop_3902 = relay.sigmoid(var_3901.astype('float32')) # shape=(6, 2, 7)
func_3420_call = mod.get_global_var('func_3420')
func_3423_call = mutated_mod.get_global_var('func_3423')
const_3922 = relay.const([-3.972987,7.250420,2.747957,-7.020183,9.333077,-1.471448,0.219346,2.047377,-0.533738,1.120418,-4.131446,7.760918,8.466689,-7.121029,-9.069067,8.489456,8.558473,-3.846526,0.376145,4.371583,-8.127706,7.382165,-5.507660,-6.242039,5.855700,2.099605,-9.709012,-0.367705,-1.912998,0.288946,-9.878171,-4.088383,6.744065,-3.164105,9.680337,7.736147,8.883676,-2.198035,7.568130,3.053169,-2.020653,-3.991867,1.164496,-0.838701,0.437133,-1.880554,3.136837,9.284517,5.646965,9.771896,0.780497,5.459640,-5.328074,6.730503,-0.945128,-3.532956,0.061491,1.044305,4.795614,-0.535215,5.624773,-1.803127,7.237526,7.409958,7.815481,-4.761068,0.369824,-9.905926,8.762615,6.759012,-1.025767,-8.957495,-0.349642,-2.338794,5.856338,-0.459335,6.552507,6.954253,2.680361,5.272530,-0.511796,7.359824,3.501703,2.679920,2.329128,-1.078916,-7.134344,8.659910,7.818470,-6.270103,8.496943,5.966071,-3.211572,7.096109,-0.283057,-7.155693,-6.751899,-0.051199,2.171603,-9.960110,6.713681,-3.313431,3.307156,-0.402620,9.811622,-7.360848,-4.717645,2.821722,-9.637626,-1.924345,-0.499707,4.893915,-2.159503,-8.331087,7.053280,9.330735,-0.981201,-3.571159,3.040797,-1.185116,-6.794727,9.981443,-3.880447,2.327967,-0.423863,3.205295,-7.349709,8.720582,7.844088,3.178940,8.843639,0.677345,-0.290812,5.423191,-7.959384,7.017783,-1.497564,4.453435,5.132225,-3.521010,-7.431575,-3.832426,-4.107997,-5.406909,-1.193862,0.381109,-6.235666,1.723327,-6.950191,-3.601506,-2.704659,0.797690,3.148108,5.432180,9.726631,-9.405950,-0.948805,1.155230,-4.383235,-5.903055,9.335623,-7.306673,-3.171660,-2.195731,7.040007,7.957572,-8.937901,-4.147046,-4.577355,5.267885,3.917215,1.786959,-4.739590,6.188271,-7.531897,3.475651,0.052322,9.361430,9.252790,-3.150689,7.663928,-8.882887,3.664087,1.274528,4.062368,8.211812,-8.093922,-4.369061,5.907919,8.139314,6.076948,9.739468,2.450522,-7.190695,2.725339,1.027403,-5.972008,-8.862621,-7.587230,7.374572,-8.050680,5.858679,-1.559356,-1.052133,2.820571,3.083338,-0.906394,2.490381,-3.517738,3.174313], dtype = "float64")#candidate|3922|(210,)|const|float64
call_3921 = relay.TupleGetItem(func_3420_call(relay.reshape(const_3922.astype('float64'), [7, 10, 3])), 0)
call_3923 = relay.TupleGetItem(func_3423_call(relay.reshape(const_3922.astype('float64'), [7, 10, 3])), 0)
output = relay.Tuple([uop_3902,call_3921,const_3922,])
output2 = relay.Tuple([uop_3902,call_3923,const_3922,])
func_3966 = relay.Function([var_3901,], output)
mod['func_3966'] = func_3966
mod = relay.transform.InferType()(mod)
mutated_mod['func_3966'] = func_3966
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3967 = relay.var("var_3967", dtype = "float32", shape = (6, 2, 7))#candidate|3967|(6, 2, 7)|var|float32
func_3966_call = mutated_mod.get_global_var('func_3966')
call_3968 = func_3966_call(var_3967)
output = call_3968
func_3969 = relay.Function([var_3967], output)
mutated_mod['func_3969'] = func_3969
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4164 = relay.var("var_4164", dtype = "float32", shape = (9, 5, 4))#candidate|4164|(9, 5, 4)|var|float32
uop_4165 = relay.sin(var_4164.astype('float32')) # shape=(9, 5, 4)
func_3792_call = mod.get_global_var('func_3792')
func_3795_call = mutated_mod.get_global_var('func_3795')
var_4180 = relay.var("var_4180", dtype = "float32", shape = (336,))#candidate|4180|(336,)|var|float32
call_4179 = func_3792_call(relay.reshape(var_4180.astype('float32'), [12, 7, 4]))
call_4181 = func_3792_call(relay.reshape(var_4180.astype('float32'), [12, 7, 4]))
uop_4201 = relay.sqrt(uop_4165.astype('float32')) # shape=(9, 5, 4)
func_1528_call = mod.get_global_var('func_1528')
func_1531_call = mutated_mod.get_global_var('func_1531')
var_4221 = relay.var("var_4221", dtype = "int64", shape = ())#candidate|4221|()|var|int64
var_4222 = relay.var("var_4222", dtype = "int64", shape = (200,))#candidate|4222|(200,)|var|int64
call_4220 = relay.TupleGetItem(func_1528_call(relay.reshape(var_4221.astype('int64'), []), relay.reshape(var_4222.astype('int64'), [10, 4, 5]), ), 0)
call_4223 = relay.TupleGetItem(func_1531_call(relay.reshape(var_4221.astype('int64'), []), relay.reshape(var_4222.astype('int64'), [10, 4, 5]), ), 0)
func_2104_call = mod.get_global_var('func_2104')
func_2106_call = mutated_mod.get_global_var('func_2106')
const_4226 = relay.const([-5.341387,-5.514878,-6.668555,-2.940879,-7.413537,-8.715756,1.407918,9.980087,6.878647,-8.176851,0.705963,-3.180488,-2.667400,9.431705,-5.485744,7.093635,6.223521,9.401321,9.330305,-6.887936,-0.290772,4.826418,8.684325,-1.053784,-5.234723,-7.427141,8.281887,-8.361036,-2.116134,3.233242,-6.773712,5.922355,-6.348038,6.981205,8.399195,-9.450015,7.773797,1.000573,-9.262192,9.629882,-2.459100,-1.241315,3.886815,6.536508,7.599449,-3.304623,7.885665,5.410136,-7.168258,7.204255,-8.356243,5.427821,0.443696,-2.364555,-5.360542,-3.537797,8.959284,-1.476782,4.099006,-8.862602,4.235875,-5.103785,9.703411,-5.576990,-1.470149,0.857904,5.077248,-9.179491,2.075081,5.470715,9.444833,-4.286658,-7.591141,4.313181,-0.276873,-4.578839,-9.949718,-1.152999,-0.895077,9.329175,-9.023008,3.933221,6.998698,-7.048686,2.778526,-0.804899,3.655403,5.041359,-2.884530,1.860008,1.486194,-2.880312,-2.233567,9.411443,5.358741,6.668430,7.000764,-5.984847,5.396850,1.184363,-6.515624,7.875384,-7.280832,6.915185,7.767095,2.051522,2.028059,-0.452377,-4.348549,-7.558264,-3.123392,3.421806,3.101495,-2.535240,-0.929297,1.289560,1.540576,-0.697080,0.873425,-5.037552,-8.592857,1.353987,3.011138,6.937990,1.958337,-3.013212,7.089000,1.944499,5.552112,7.864036,7.973445,-0.449278,2.877461,-6.250984,-9.015273,7.531590,-5.184650,-5.164620,-6.571280,0.550000,-5.948358,6.411655,4.184263,-3.529958,-5.504303,-9.843542,-3.739390,0.818440,7.136169,-3.278895,-1.963484,-7.364861,5.402356,9.013666,-9.320536,4.195589,-0.097660,2.860588,-8.043078,-2.258738,5.026656,-9.554307,1.535353,-5.250571,-1.129763,-2.034807,-3.722703,7.670375,-7.509464,-1.106422,-8.504188,9.590696,-5.523573,-6.179698,-7.982609,-2.654952,-1.176655,9.302564,-8.600552,-3.779747,-5.609155,5.276241,-3.741865,-0.370898,3.437642,5.788520,3.622902,-1.305566,9.650173,-7.910688,0.980912,-9.758400,7.702007,6.885329,3.347177,-4.771425,0.820875,-3.071016,9.614944,-1.987044,0.297620,-0.184371,-8.448543,1.614151,4.475773,2.951608,-3.244270,-7.470263,9.847051,3.245678,-3.470532,-7.572531,5.987153,2.828507,-7.933112,-1.469392,7.750904,-3.236474,3.086787,-1.951782,1.493165,-6.275523,3.900991,6.745043,-7.262593,2.014729,5.080712,-3.012420,-3.937189,3.492952,5.325242,4.731753,-2.149350,-6.078652,2.199234,-2.316638,-2.481755,-5.593961,-2.139579,-8.536482,-0.081375,9.426712,-9.413921,-8.098413,9.599368,6.347516,8.096369,5.849290,-7.242391,-9.104728,-2.376118,-1.852993,6.222572,-7.634630,-6.526866,-4.564103,-3.548844,-4.928913,-3.029098,-2.172046,-5.782980,-5.804684,-9.620901,4.219579,-5.862624,-4.400317,1.510752,8.165609,7.801024,-9.808330,4.824975,-5.504167,-5.795135,-9.648511,8.860542,-0.852672,-1.330746,-3.885397,-9.721469,7.145369,3.201095,-0.463912,-2.790108,4.624500,5.802194,1.730258,-5.314843,4.945665,3.502782,1.008946,-3.086109,-1.384412,0.302893,1.465551,0.331698,-5.817495,-3.328934,1.188679,-3.396664,-4.854471,-0.148127,-0.535945,5.359804,3.529925,0.773794,4.611146,-0.872500,-1.265651,-0.020317,2.571989,-6.345011,-5.877918,-7.096899,8.267863,-4.391837,2.607405,-8.221367,-7.318796,1.541263,-1.622520,-7.978479,-8.460662,2.304378,-5.247386,-4.653719,6.592462,1.243825,2.255224,0.495147,7.603767,-9.105497,-9.162064,-6.776337,-0.139250,-1.284097,4.948874,-2.163903,5.163409,-6.342163,-9.222468,-9.872297,-0.329693,5.958144,3.586981,-8.719103,4.189062,0.928659,8.902474,-7.681724,5.209149,-9.387314,4.932263,-2.733169,8.105259,9.402775,0.300894,9.725597,2.976040,8.245537,-6.930761,0.833987,-7.627466,9.502991,7.355628,2.766147,7.632035,0.622048,5.967298,8.885851,-5.516746,-6.177348,-5.536774,4.110264,-1.878497,3.228262,3.505874,-6.414221,3.082624,8.638130,0.344894,-6.315474,0.192409,-3.340042,6.719530,1.957843,-3.516294,-4.929326,2.469726,-3.242346,-8.874303,-3.251344,4.606736,-0.831189,9.488655,2.647810,-3.966278,2.999719,9.781476,-9.768410,0.423501,-4.544898,4.479892,8.010294,4.974224,3.454750,6.470718,8.589668,-6.966697,2.947750,0.080195,7.672890,-6.017957,8.674558,-7.492126,6.572007,2.462068,8.439125,-4.423647,-0.803451,-6.505606,2.884911,7.322473,-4.558441,-3.189621,0.520096,-7.028199,-6.625087,7.686642,-8.107684,2.638982,-2.861572,-6.818978,-9.552352,-3.838196,-0.915169,-0.928544,-1.150016,-8.616612,5.350851,-7.004490,-0.041231,9.713231,-1.082475,0.632953,-0.991527,-0.217207,0.416339,-5.738470,3.187776,-8.608391,-8.842922,5.312268,6.771500,1.902855,7.016398,2.600801,0.367718,-4.620544,-4.877170,-9.437124,-3.179984,2.249073,9.072099,7.218651,-0.846840,-8.809769,-7.288530,8.551071,6.422086,8.421381,-1.995469,3.900786,5.236871,0.812069,4.614657,5.763386,-5.373392,6.012275,-3.192527,-4.795790,8.960155,3.997309,6.248688,6.791254,-0.097652,6.941866,1.571137,-2.311192,-7.893273,-2.870845,7.379836,6.652028,-5.281115,-4.925087,-0.904229,9.069735,9.886770,3.172808,3.646735,-9.406770,5.171131,6.266132,-3.108625,-1.097450,8.088970,-9.030833,-0.898034,9.410973,-8.465276,8.605128,-9.664481,-0.631555,-9.534304,-0.370734,-2.599272,0.473129,-7.308531,8.710513,-6.441429,7.954699,-6.134508,-1.791232,-4.775738,-4.195839,5.227421,6.188928,-9.564031,-0.682540,0.644961,7.389844,9.476861,-3.105162,3.713081,-2.504421,9.340066,4.458074,9.075427,-3.933598,1.904823,-5.735292,-6.564240,7.908686,-9.630569,3.804923,-7.099680,3.627220,7.224910,-5.521317,2.880248,-0.807633,-4.136441,1.424764,-3.445140,7.983568,-9.040045,-9.721383,9.667816,7.451340,1.268177,-8.349283,0.934727,7.449625,7.724820,5.306122,-8.080663,3.997402,-4.098051,-1.270747,-6.489358,-3.919952,-9.650676,2.706247,-2.529476,7.507821,-4.138802,-2.117853,4.488564,-5.284065,7.399765,-8.684508,-6.400756,-4.359942,-8.111434,4.351657,8.678727,0.750276,-7.163235,0.845700,1.227674,2.608052,-7.563021,-0.814484,8.603253,-5.227112,-3.299838,5.277547,-4.921409,1.068740,-6.014201,8.728135,0.757775,3.859798,-6.497304,-3.126147,9.311480,6.222071,4.046865,-5.027690,-9.878885,1.195325,4.587371,5.754261,8.083287,-2.346436,0.049011,3.436659,-8.408214,8.163021,0.218644,-5.255440,8.251922,5.955161,2.064242,4.321955,-1.007021,9.534858,7.917462,-2.634175,9.938460,7.600535,-9.216642,3.612540,7.202898,5.398991,8.044941,-8.305562,5.920325,8.209867,0.397968,0.447007,-4.938243,9.207846,0.867796,-1.684747,-7.147056,-3.693986,-5.714586,5.387496,-4.852874,-8.635394,-8.959110,-9.138775,-6.437248,8.829543,-5.525647,-4.182997,3.365528,6.505922,8.706694,1.944282,5.265005,-0.182125,-9.152388,6.957606,7.524214,-5.690023,-4.862183,3.566584,-5.455205,-7.335407,5.760767,2.292599,-4.835844,-0.759335,-5.533991,1.350286,5.238745,4.104294,2.759596,-6.945158,8.771519,4.969480,8.050100,-9.042171,6.587518,-4.512692,0.352100,6.140107,-7.550984,1.038351,4.093369,-3.367390,7.484044,-0.314052,7.484552,6.552712,5.283458,-4.663809,3.010036,0.171603,-3.365885,-0.294702,4.677515,4.512286,4.024471,9.972748,-5.636573,7.512822,8.718588,-4.423451,-2.392294,5.730593,-5.558515,-9.418276,8.790538,-5.219720,4.268171,2.368719,-3.576892,1.796248,-2.131028,7.108843,-8.659411,-3.206441,-7.045059,-6.158686,-0.888406,2.827253,-7.578854,-4.225545,8.903647,9.763360,3.008436,8.442452,3.794569,5.963088,3.863924,-9.777893,2.112200,-4.681349,-0.269591,-7.099894,-8.228596,3.119931,0.461994,-5.618893,7.090529,-7.237285,1.890800,-6.386645,-7.607378,-1.791226,-9.363236,2.780613,8.644922,-6.405544,3.228362,-9.424744,-0.937269,-7.434565,6.922039,-4.373706,-0.982856,-1.047652,-4.108986,-5.194296,-5.375439,9.246198,-4.528625,9.841759,-0.585764,1.756210,-8.791655,2.080901,7.531733,2.994284,0.416948,9.688998,-6.079305,6.996466,2.932778,3.732483,-3.175644,-4.661412,7.827279,-7.980491,8.829095,1.439086,5.322734,-6.685987,-2.230243,1.682734,0.768652,0.108939,-8.007701,7.529855,4.045521,-8.864318,8.118500,-1.273510,-1.023888,-5.988041,-0.451980,4.539018,-1.980702,-6.934121,9.275717,-5.016415,0.183900,-2.041996,-1.809130,8.708197,-9.440414,5.084138,-4.482825,2.016164,-8.768552,1.131480,1.940139,-7.481158,-7.928335,3.589790,2.950577,5.732488,2.879165,-0.701720,5.075871,0.251998,4.595159,3.732081,-3.078492,-0.971933,-9.311551,3.450224,5.937902,3.714191,9.585165,6.708373,8.955944,4.037717,2.917435,-2.948318,9.511700,-7.186901,8.258608,-1.077295,-7.555981,-3.364691,-9.647114,5.027826,-0.474736,-0.507665,3.881614,-0.360529,-9.653530,6.928615,5.143949,-4.846908,-0.061331,-6.439291,-1.649854,7.708534,9.174154,2.609205,-1.078213,1.421316,0.897303,-1.759624,-6.041164,8.984933,-5.509180,-0.132050,3.866122,-4.541368,1.067586,4.992067,0.302490,6.089830,-5.839931,3.230448,3.922047,3.484616,-7.152332,6.634608,-8.199609,9.784578,6.194266,6.597917,-3.886286,-9.283114,-6.771257,5.878795,2.798175,-2.978096,9.686278,-0.981601,9.988451,8.599977,2.526257,-0.187402,-5.984878,-7.059019,0.922213,-9.399260,9.376081,0.117673,-5.525754,5.805716,5.091616,6.970605,8.834410,8.200393,-8.156254,-7.577976,8.164431,7.841989,-9.942304,-1.071458,0.070944,7.644359,0.067643,-9.790655,8.035802,5.885285,-6.522499,0.042053,-8.426127,-4.534278,-9.244854,-7.611738,6.294099,8.181570,3.974866,0.967101,-3.635205,5.636127,4.491720,8.830684,-5.433458,-1.504006,1.567197,-4.550697,-0.390252,-8.048992,-0.519350,8.023761,6.470482,8.741635,-0.750247,8.307888,-3.220468,-8.968451,8.936459,-6.196348,7.690371,-4.673802,8.035125,-8.969865,1.671319,-4.567364,-4.486239,4.541419,-3.134635,-6.725321,8.551397,6.711127,3.968852,2.803790,7.448686,-2.682456,-8.390962,7.954761,1.956012,-1.519072,3.243490,-9.330021,-7.173362,0.683399,5.347960,5.156016], dtype = "float64")#candidate|4226|(980,)|const|float64
call_4225 = relay.TupleGetItem(func_2104_call(relay.reshape(const_4226.astype('float64'), [7, 14, 10])), 0)
call_4227 = relay.TupleGetItem(func_2106_call(relay.reshape(const_4226.astype('float64'), [7, 14, 10])), 0)
uop_4229 = relay.acosh(uop_4201.astype('float32')) # shape=(9, 5, 4)
output = relay.Tuple([call_4179,var_4180,call_4220,var_4221,var_4222,call_4225,const_4226,uop_4229,])
output2 = relay.Tuple([call_4181,var_4180,call_4223,var_4221,var_4222,call_4227,const_4226,uop_4229,])
func_4243 = relay.Function([var_4164,var_4180,var_4221,var_4222,], output)
mod['func_4243'] = func_4243
mod = relay.transform.InferType()(mod)
mutated_mod['func_4243'] = func_4243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4243_call = mutated_mod.get_global_var('func_4243')
var_4245 = relay.var("var_4245", dtype = "float32", shape = (9, 5, 4))#candidate|4245|(9, 5, 4)|var|float32
var_4246 = relay.var("var_4246", dtype = "float32", shape = (336,))#candidate|4246|(336,)|var|float32
var_4247 = relay.var("var_4247", dtype = "int64", shape = ())#candidate|4247|()|var|int64
var_4248 = relay.var("var_4248", dtype = "int64", shape = (200,))#candidate|4248|(200,)|var|int64
call_4244 = func_4243_call(var_4245,var_4246,var_4247,var_4248,)
output = call_4244
func_4249 = relay.Function([var_4245,var_4246,var_4247,var_4248,], output)
mutated_mod['func_4249'] = func_4249
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4383 = relay.var("var_4383", dtype = "float64", shape = ())#candidate|4383|()|var|float64
const_4384 = relay.const([[[2.758350],[-6.851899],[6.118646],[6.474074],[-7.223013],[2.277583]],[[-7.351504],[8.981132],[9.110358],[-2.855054],[7.935384],[2.424909]],[[5.816765],[-4.947346],[-5.799789],[-2.425743],[6.616691],[-6.959099]],[[6.945936],[-0.343183],[-9.784888],[-7.235400],[-2.922383],[-8.042540]],[[-6.479102],[3.507231],[5.073774],[0.194374],[2.276783],[-2.917275]],[[5.117746],[9.613956],[7.999675],[-0.757719],[-5.297821],[-8.003210]],[[-2.805827],[4.727309],[7.746021],[-0.613732],[5.244146],[2.274062]],[[-1.986620],[0.661811],[6.039117],[4.963248],[-2.325651],[3.340690]],[[-3.936928],[-9.113410],[-8.995397],[0.939038],[-5.978907],[-4.415850]],[[-1.908354],[7.008723],[-7.120843],[-8.952793],[-1.524761],[-0.699295]]], dtype = "float64")#candidate|4384|(10, 6, 1)|const|float64
bop_4385 = relay.divide(var_4383.astype('float64'), const_4384.astype('float64')) # shape=(10, 6, 1)
output = bop_4385
output2 = bop_4385
func_4388 = relay.Function([var_4383,], output)
mod['func_4388'] = func_4388
mod = relay.transform.InferType()(mod)
mutated_mod['func_4388'] = func_4388
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4389 = relay.var("var_4389", dtype = "float64", shape = ())#candidate|4389|()|var|float64
func_4388_call = mutated_mod.get_global_var('func_4388')
call_4390 = func_4388_call(var_4389)
output = call_4390
func_4391 = relay.Function([var_4389], output)
mutated_mod['func_4391'] = func_4391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4445 = relay.var("var_4445", dtype = "bool", shape = (14, 3, 12))#candidate|4445|(14, 3, 12)|var|bool
var_4446 = relay.var("var_4446", dtype = "bool", shape = (14, 3, 12))#candidate|4446|(14, 3, 12)|var|bool
bop_4447 = relay.logical_or(var_4445.astype('bool'), relay.reshape(var_4446.astype('bool'), relay.shape_of(var_4445))) # shape=(14, 3, 12)
func_1891_call = mod.get_global_var('func_1891')
func_1896_call = mutated_mod.get_global_var('func_1896')
const_4457 = relay.const([True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,True,True,True,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,True,False,True,True,False,False,True,True,True,False,True,False,True,False,False,False,True,True], dtype = "bool")#candidate|4457|(144,)|const|bool
const_4458 = relay.const(-5, dtype = "int32")#candidate|4458|()|const|int32
const_4459 = relay.const([[-8,1,-4,-2,1,-8,-4,-3,9],[3,-7,-10,-9,-4,6,7,-1,-3],[5,-7,3,5,6,-4,3,8,4],[-8,4,5,-3,1,1,6,3,-4],[-9,-6,8,-9,-5,-10,6,3,-1],[-7,3,8,-5,-1,8,-5,-6,-9],[8,5,4,6,5,-9,8,-3,-5],[4,-3,-8,-2,-7,1,3,3,-5],[-3,-8,-10,7,4,-10,8,9,-9],[-4,10,-1,7,-2,-4,-1,10,7],[8,-10,3,3,4,-5,-1,-5,-2],[1,2,2,-2,3,4,-2,4,-7],[1,-8,-2,-7,-6,3,9,-7,-9]], dtype = "int32")#candidate|4459|(13, 9)|const|int32
call_4456 = relay.TupleGetItem(func_1891_call(relay.reshape(const_4457.astype('bool'), [4, 12, 3]), relay.reshape(const_4457.astype('bool'), [4, 12, 3]), relay.reshape(const_4458.astype('int32'), []), relay.reshape(const_4459.astype('int32'), [117,]), ), 2)
call_4460 = relay.TupleGetItem(func_1896_call(relay.reshape(const_4457.astype('bool'), [4, 12, 3]), relay.reshape(const_4457.astype('bool'), [4, 12, 3]), relay.reshape(const_4458.astype('int32'), []), relay.reshape(const_4459.astype('int32'), [117,]), ), 2)
output = relay.Tuple([bop_4447,call_4456,const_4457,const_4458,const_4459,])
output2 = relay.Tuple([bop_4447,call_4460,const_4457,const_4458,const_4459,])
func_4461 = relay.Function([var_4445,var_4446,], output)
mod['func_4461'] = func_4461
mod = relay.transform.InferType()(mod)
mutated_mod['func_4461'] = func_4461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4461_call = mutated_mod.get_global_var('func_4461')
var_4463 = relay.var("var_4463", dtype = "bool", shape = (14, 3, 12))#candidate|4463|(14, 3, 12)|var|bool
var_4464 = relay.var("var_4464", dtype = "bool", shape = (14, 3, 12))#candidate|4464|(14, 3, 12)|var|bool
call_4462 = func_4461_call(var_4463,var_4464,)
output = call_4462
func_4465 = relay.Function([var_4463,var_4464,], output)
mutated_mod['func_4465'] = func_4465
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4603 = relay.var("var_4603", dtype = "int8", shape = (15, 13, 12))#candidate|4603|(15, 13, 12)|var|int8
var_4604 = relay.var("var_4604", dtype = "int8", shape = (15, 13, 12))#candidate|4604|(15, 13, 12)|var|int8
bop_4605 = relay.maximum(var_4603.astype('int8'), relay.reshape(var_4604.astype('int8'), relay.shape_of(var_4603))) # shape=(15, 13, 12)
func_4461_call = mod.get_global_var('func_4461')
func_4465_call = mutated_mod.get_global_var('func_4465')
const_4629 = relay.const([False,False,True,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,True,True,False,True,False,False,True,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,False,True,True,False,True,False,False,False,False,True,False,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,True,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,True,False,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,False,True,False,False,False,True,False,True,True,False,False,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,True,False,False,False,False,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,False,True,False,False,True,True,False,False,False,False,True,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,False,True,True,False,False,False,False,False,True,False,True,False,False,False,True,True,False,False,False], dtype = "bool")#candidate|4629|(504,)|const|bool
call_4628 = relay.TupleGetItem(func_4461_call(relay.reshape(const_4629.astype('bool'), [14, 3, 12]), relay.reshape(const_4629.astype('bool'), [14, 3, 12]), ), 1)
call_4630 = relay.TupleGetItem(func_4465_call(relay.reshape(const_4629.astype('bool'), [14, 3, 12]), relay.reshape(const_4629.astype('bool'), [14, 3, 12]), ), 1)
func_1276_call = mod.get_global_var('func_1276')
func_1280_call = mutated_mod.get_global_var('func_1280')
const_4632 = relay.const([-8,10,-7,1,-4,-10,-3,-2,4,8,10,-10,1,6,-10,-9,-7,4,-9,-10,3,3,-6,-9,-5,-2,9,7,-5,4,-1,-4,3,4,10,-5,5,3,7,4,8,-8,-9,-9,-9,10,9,10,-1,-3,8,7,8,-7,-1,6,8,-8,-10,-1,-1,10,-6,-1,-5,-9,-4,8,-6,6,5,-9,-7,-10,-6,-7,4,9], dtype = "int16")#candidate|4632|(78,)|const|int16
var_4633 = relay.var("var_4633", dtype = "int16", shape = (1092,))#candidate|4633|(1092,)|var|int16
call_4631 = func_1276_call(relay.reshape(const_4632.astype('int16'), [1, 13, 6]), relay.reshape(var_4633.astype('int16'), [14, 13, 6]), )
call_4634 = func_1276_call(relay.reshape(const_4632.astype('int16'), [1, 13, 6]), relay.reshape(var_4633.astype('int16'), [14, 13, 6]), )
func_1419_call = mod.get_global_var('func_1419')
func_1422_call = mutated_mod.get_global_var('func_1422')
var_4637 = relay.var("var_4637", dtype = "int32", shape = (117,))#candidate|4637|(117,)|var|int32
call_4636 = relay.TupleGetItem(func_1419_call(relay.reshape(call_4628.astype('int32'), []), relay.reshape(var_4637.astype('int32'), [1, 13, 9]), ), 0)
call_4638 = relay.TupleGetItem(func_1422_call(relay.reshape(call_4628.astype('int32'), []), relay.reshape(var_4637.astype('int32'), [1, 13, 9]), ), 0)
output = relay.Tuple([bop_4605,call_4628,const_4629,call_4631,const_4632,var_4633,call_4636,var_4637,])
output2 = relay.Tuple([bop_4605,call_4630,const_4629,call_4634,const_4632,var_4633,call_4638,var_4637,])
func_4652 = relay.Function([var_4603,var_4604,var_4633,var_4637,], output)
mod['func_4652'] = func_4652
mod = relay.transform.InferType()(mod)
var_4653 = relay.var("var_4653", dtype = "int8", shape = (15, 13, 12))#candidate|4653|(15, 13, 12)|var|int8
var_4654 = relay.var("var_4654", dtype = "int8", shape = (15, 13, 12))#candidate|4654|(15, 13, 12)|var|int8
var_4655 = relay.var("var_4655", dtype = "int16", shape = (1092,))#candidate|4655|(1092,)|var|int16
var_4656 = relay.var("var_4656", dtype = "int32", shape = (117,))#candidate|4656|(117,)|var|int32
output = func_4652(var_4653,var_4654,var_4655,var_4656,)
func_4657 = relay.Function([var_4653,var_4654,var_4655,var_4656,], output)
mutated_mod['func_4657'] = func_4657
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4909 = relay.var("var_4909", dtype = "float64", shape = ())#candidate|4909|()|var|float64
var_4910 = relay.var("var_4910", dtype = "float64", shape = (1, 13))#candidate|4910|(1, 13)|var|float64
bop_4911 = relay.mod(var_4909.astype('float64'), var_4910.astype('float64')) # shape=(1, 13)
output = relay.Tuple([bop_4911,])
output2 = relay.Tuple([bop_4911,])
func_4924 = relay.Function([var_4909,var_4910,], output)
mod['func_4924'] = func_4924
mod = relay.transform.InferType()(mod)
mutated_mod['func_4924'] = func_4924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4924_call = mutated_mod.get_global_var('func_4924')
var_4926 = relay.var("var_4926", dtype = "float64", shape = ())#candidate|4926|()|var|float64
var_4927 = relay.var("var_4927", dtype = "float64", shape = (1, 13))#candidate|4927|(1, 13)|var|float64
call_4925 = func_4924_call(var_4926,var_4927,)
output = call_4925
func_4928 = relay.Function([var_4926,var_4927,], output)
mutated_mod['func_4928'] = func_4928
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5058 = relay.var("var_5058", dtype = "int16", shape = ())#candidate|5058|()|var|int16
var_5059 = relay.var("var_5059", dtype = "int16", shape = (10, 7, 8))#candidate|5059|(10, 7, 8)|var|int16
bop_5060 = relay.logical_xor(var_5058.astype('int16'), var_5059.astype('int16')) # shape=(10, 7, 8)
output = relay.Tuple([bop_5060,])
output2 = relay.Tuple([bop_5060,])
func_5063 = relay.Function([var_5058,var_5059,], output)
mod['func_5063'] = func_5063
mod = relay.transform.InferType()(mod)
var_5064 = relay.var("var_5064", dtype = "int16", shape = ())#candidate|5064|()|var|int16
var_5065 = relay.var("var_5065", dtype = "int16", shape = (10, 7, 8))#candidate|5065|(10, 7, 8)|var|int16
output = func_5063(var_5064,var_5065,)
func_5066 = relay.Function([var_5064,var_5065,], output)
mutated_mod['func_5066'] = func_5066
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5708 = relay.var("var_5708", dtype = "int32", shape = (10, 1, 3))#candidate|5708|(10, 1, 3)|var|int32
var_5709 = relay.var("var_5709", dtype = "int32", shape = (10, 13, 3))#candidate|5709|(10, 13, 3)|var|int32
bop_5710 = relay.bitwise_and(var_5708.astype('int32'), var_5709.astype('int32')) # shape=(10, 13, 3)
var_5713 = relay.var("var_5713", dtype = "int32", shape = (10, 13, 3))#candidate|5713|(10, 13, 3)|var|int32
bop_5714 = relay.right_shift(bop_5710.astype('int8'), relay.reshape(var_5713.astype('int8'), relay.shape_of(bop_5710))) # shape=(10, 13, 3)
uop_5721 = relay.atanh(var_5708.astype('float64')) # shape=(10, 1, 3)
output = relay.Tuple([bop_5714,uop_5721,])
output2 = relay.Tuple([bop_5714,uop_5721,])
func_5728 = relay.Function([var_5708,var_5709,var_5713,], output)
mod['func_5728'] = func_5728
mod = relay.transform.InferType()(mod)
mutated_mod['func_5728'] = func_5728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5728_call = mutated_mod.get_global_var('func_5728')
var_5730 = relay.var("var_5730", dtype = "int32", shape = (10, 1, 3))#candidate|5730|(10, 1, 3)|var|int32
var_5731 = relay.var("var_5731", dtype = "int32", shape = (10, 13, 3))#candidate|5731|(10, 13, 3)|var|int32
var_5732 = relay.var("var_5732", dtype = "int32", shape = (10, 13, 3))#candidate|5732|(10, 13, 3)|var|int32
call_5729 = func_5728_call(var_5730,var_5731,var_5732,)
output = call_5729
func_5733 = relay.Function([var_5730,var_5731,var_5732,], output)
mutated_mod['func_5733'] = func_5733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5966 = relay.var("var_5966", dtype = "float32", shape = ())#candidate|5966|()|var|float32
var_5967 = relay.var("var_5967", dtype = "float32", shape = (7, 7, 14))#candidate|5967|(7, 7, 14)|var|float32
bop_5968 = relay.divide(var_5966.astype('float32'), var_5967.astype('float32')) # shape=(7, 7, 14)
output = relay.Tuple([bop_5968,])
output2 = relay.Tuple([bop_5968,])
func_5972 = relay.Function([var_5966,var_5967,], output)
mod['func_5972'] = func_5972
mod = relay.transform.InferType()(mod)
var_5973 = relay.var("var_5973", dtype = "float32", shape = ())#candidate|5973|()|var|float32
var_5974 = relay.var("var_5974", dtype = "float32", shape = (7, 7, 14))#candidate|5974|(7, 7, 14)|var|float32
output = func_5972(var_5973,var_5974,)
func_5975 = relay.Function([var_5973,var_5974,], output)
mutated_mod['func_5975'] = func_5975
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6481 = relay.var("var_6481", dtype = "float32", shape = (1, 1, 12))#candidate|6481|(1, 1, 12)|var|float32
uop_6482 = relay.log10(var_6481.astype('float32')) # shape=(1, 1, 12)
uop_6492 = relay.atan(var_6481.astype('float32')) # shape=(1, 1, 12)
func_3792_call = mod.get_global_var('func_3792')
func_3795_call = mutated_mod.get_global_var('func_3795')
var_6499 = relay.var("var_6499", dtype = "float32", shape = (336,))#candidate|6499|(336,)|var|float32
call_6498 = func_3792_call(relay.reshape(var_6499.astype('float32'), [12, 7, 4]))
call_6500 = func_3792_call(relay.reshape(var_6499.astype('float32'), [12, 7, 4]))
bop_6504 = relay.logical_and(uop_6492.astype('bool'), relay.reshape(var_6481.astype('bool'), relay.shape_of(uop_6492))) # shape=(1, 1, 12)
func_4243_call = mod.get_global_var('func_4243')
func_4249_call = mutated_mod.get_global_var('func_4249')
var_6511 = relay.var("var_6511", dtype = "float32", shape = (180,))#candidate|6511|(180,)|var|float32
var_6512 = relay.var("var_6512", dtype = "int64", shape = ())#candidate|6512|()|var|int64
const_6513 = relay.const([6,-2,-8,-9,-4,-2,7,-2,-6,-2,-10,1,9,5,10,3,2,4,-10,4,-10,-10,4,3,8,-5,6,6,-7,-3,7,-2,-9,-10,-9,-4,1,-7,-8,7,4,4,9,-5,5,1,4,-2,4,-4,6,-2,-4,4,-9,-7,4,-5,5,9,-10,1,-8,10,7,-2,2,10,3,9,6,5,9,-4,1,-4,4,6,-10,-1,-10,10,7,9,3,-1,4,-2,9,-9,9,-3,1,-4,-6,8,10,-10,-7,10,-7,-2,9,5,-9,-8,8,-1,1,-9,-4,2,4,-2,3,2,5,4,-7,-1,3,-5,1,9,-3,10,9,3,6,-6,-9,2,2,7,-2,6,-10,-6,6,4,6,-9,7,-8,-9,-3,-5,-10,8,-6,8,6,10,-10,7,-8,-9,10,8,7,4,-4,5,-6,3,-1,-2,8,1,10,3,3,-4,-6,-2,-10,4,-7,-1,-10,-5,-7,10,-2,-5,-8,-10,-10,7,7,-10,-8,-4,-3,-10,-9,-6,5,-2,-8], dtype = "int64")#candidate|6513|(200,)|const|int64
call_6510 = relay.TupleGetItem(func_4243_call(relay.reshape(var_6511.astype('float32'), [9, 5, 4]), relay.reshape(call_6498.astype('float32'), [336,]), relay.reshape(var_6512.astype('int64'), []), relay.reshape(const_6513.astype('int64'), [200,]), ), 3)
call_6514 = relay.TupleGetItem(func_4249_call(relay.reshape(var_6511.astype('float32'), [9, 5, 4]), relay.reshape(call_6498.astype('float32'), [336,]), relay.reshape(var_6512.astype('int64'), []), relay.reshape(const_6513.astype('int64'), [200,]), ), 3)
func_5728_call = mod.get_global_var('func_5728')
func_5733_call = mutated_mod.get_global_var('func_5733')
var_6520 = relay.var("var_6520", dtype = "int32", shape = (30,))#candidate|6520|(30,)|var|int32
var_6521 = relay.var("var_6521", dtype = "int32", shape = (390,))#candidate|6521|(390,)|var|int32
call_6519 = relay.TupleGetItem(func_5728_call(relay.reshape(var_6520.astype('int32'), [10, 1, 3]), relay.reshape(var_6521.astype('int32'), [10, 13, 3]), relay.reshape(var_6521.astype('int32'), [10, 13, 3]), ), 0)
call_6522 = relay.TupleGetItem(func_5733_call(relay.reshape(var_6520.astype('int32'), [10, 1, 3]), relay.reshape(var_6521.astype('int32'), [10, 13, 3]), relay.reshape(var_6521.astype('int32'), [10, 13, 3]), ), 0)
func_3792_call = mod.get_global_var('func_3792')
func_3795_call = mutated_mod.get_global_var('func_3795')
call_6538 = func_3792_call(relay.reshape(call_6498.astype('float32'), [12, 7, 4]))
call_6539 = func_3792_call(relay.reshape(call_6498.astype('float32'), [12, 7, 4]))
uop_6546 = relay.cosh(bop_6504.astype('float64')) # shape=(1, 1, 12)
func_658_call = mod.get_global_var('func_658')
func_662_call = mutated_mod.get_global_var('func_662')
const_6557 = relay.const([[-7.858121,6.516682,7.320103,2.354293,1.804480,-2.517195,-9.782752,5.012368,4.848378,6.462888,-4.568842,-9.131700,-5.050298,-7.200084,5.392078,2.562044,-3.546712,9.328547,-5.478558,-0.225065,8.270912,-0.420904,-9.002612,4.130617],[-0.409474,3.614308,-2.431711,-7.229994,3.995152,6.997869,-2.721903,-2.922602,4.351066,-7.761457,2.240047,5.950529,5.784286,-7.880504,5.572524,-4.087656,-9.915315,2.075246,0.682185,5.149659,-6.702351,5.156207,2.201615,1.757923],[2.756035,-8.447080,2.328036,-4.410209,-8.631545,-4.781206,-5.933836,4.737093,-5.199764,8.016655,-0.485090,-4.017749,7.981921,1.468120,2.337829,2.781193,3.766828,2.321794,2.112937,9.508036,7.567588,5.475587,-6.023439,-2.070452],[7.771447,-0.299351,4.045827,-7.004200,6.965898,5.576146,5.197720,0.045518,7.016868,5.051730,-7.426876,-3.457840,-9.640217,5.460796,-1.534674,5.885125,2.554655,3.396479,-8.140774,7.118458,9.962230,-7.312054,6.581535,1.690872],[5.346245,8.366774,-9.870855,9.864333,-2.902096,5.680730,-4.758362,-5.333763,6.147451,-4.293487,-8.254283,7.248655,4.075919,-4.365399,7.940865,5.319735,-3.852275,5.490967,-0.531831,9.713565,2.747475,1.809311,8.599359,-4.390737],[3.736481,-5.570184,-3.517741,8.447136,9.311832,8.842205,-2.329927,9.704679,0.941293,4.033425,3.967602,-4.705997,5.652097,8.272434,-6.459660,2.964387,-6.453070,6.026325,1.199245,-7.137823,-2.950036,-9.935455,-1.924388,4.637394],[-1.386405,6.305423,3.549426,-5.453407,2.688890,2.537274,3.932792,9.338212,-7.145870,2.841416,-2.409581,-1.535040,7.707994,3.889216,7.321608,4.103932,9.328177,9.957023,9.011687,3.167801,7.977148,-9.464724,-9.980025,0.445221],[-2.875776,-6.895342,-6.335171,0.758327,1.632503,-4.883889,9.992126,-1.432187,-4.867208,6.134084,-9.573239,3.613515,9.324170,-8.261588,6.132251,-0.157632,-4.726198,-6.100349,7.415530,-8.909826,-7.968367,4.140429,0.604282,-7.434337],[-0.170897,0.573636,2.861587,-9.116854,-4.365275,-7.644802,-6.820232,9.275709,0.584460,-9.577929,6.167709,-9.459073,0.615373,0.243138,1.664541,-5.280321,7.293407,-8.470481,-5.650361,1.429916,-9.592704,8.019532,-0.393657,5.603298],[-5.183409,-4.811301,2.904865,-6.674429,9.001799,1.747416,0.183026,-7.875242,8.323112,7.319962,0.760807,-6.027873,-9.428773,1.232024,-8.607043,2.513673,-0.872265,-9.259345,-6.215204,-7.965015,-7.736282,-3.671929,3.469310,-2.122398],[-2.329989,7.617325,-2.646376,5.820565,3.902406,9.330023,7.656584,-4.301085,-2.071566,9.607564,7.080355,-1.644212,3.019907,-1.002033,2.742073,3.875090,-3.838203,-6.015988,-8.732356,-5.330423,-2.314706,4.809053,-9.406275,3.947466],[-3.879999,6.867959,-4.488512,8.907855,-0.185499,-3.186363,-3.277397,9.229942,-3.979547,2.556299,8.024887,-3.191981,3.281596,-2.195768,-4.544558,7.988375,-9.314802,-3.547044,-8.176131,3.488657,6.165639,3.103438,0.887641,4.181485],[-5.858273,7.597464,-5.280903,4.849400,6.058465,9.047249,5.727663,6.789124,4.473977,-7.684485,7.928831,-1.211496,8.398563,3.493958,1.350952,5.165210,2.424685,7.847815,-6.131246,-9.227704,-2.802688,9.881789,-1.422111,-6.946202],[6.401710,8.312151,-0.183359,2.033501,0.612123,-6.397307,3.413814,-0.885032,-2.715971,-0.114242,-6.203031,1.332086,-5.231926,-4.450817,1.448409,-7.501091,0.840791,3.832069,-6.843216,-9.846204,0.113774,-2.351775,-1.321381,-3.799603],[-0.453167,1.785878,6.743019,-8.113871,-6.443724,-5.388826,6.758345,-7.652393,-6.332420,-7.764524,-7.882258,9.092726,6.276839,8.127651,-8.855317,2.917958,-9.979023,-4.455421,0.624291,-7.521055,0.251578,3.392326,9.077850,-8.587023],[9.636924,-4.189737,3.663562,-7.937110,2.140688,-8.552754,3.033280,0.853520,-8.475248,2.421587,-0.053950,7.093098,-9.936784,-5.424522,-9.756247,7.450823,2.128962,-2.668538,6.532385,2.245556,-1.533407,0.463612,7.204786,5.292951],[-1.379838,9.461570,-6.160399,-5.477263,6.682525,3.840173,9.857953,-9.908239,-8.759465,2.516164,7.951671,1.075748,-1.688189,8.412276,5.612837,-7.365786,7.033939,-4.462781,-0.213517,-5.652990,2.713405,-9.010411,-4.509246,0.838082],[2.243694,6.274575,0.281515,-9.750984,9.584216,-6.044444,-4.602330,-5.943705,-2.024924,-3.501223,5.734852,2.952375,-1.718279,-4.058150,-5.601385,1.480537,-9.849400,-4.685061,2.308769,-4.294523,-6.659088,0.825732,1.070789,-6.238659],[-5.234451,-4.075471,4.317220,-0.175232,8.172932,-5.951297,-2.851546,8.224251,-3.599881,0.369037,-4.903571,-2.216090,-8.700341,-7.596655,1.294703,0.107119,3.354816,-9.277824,8.413171,-6.492258,9.471756,-5.620766,-8.390541,-1.011928],[0.917018,8.072185,1.367453,-5.299603,8.463655,7.921071,0.728073,6.022521,5.581954,0.133068,-5.756851,3.104821,6.728058,-3.042696,-7.982594,-7.113221,-4.017932,9.070006,-4.529672,1.111199,-7.216623,-0.417303,0.923298,-2.626792],[4.781593,-3.915553,6.149594,0.371520,2.102417,8.368611,1.570871,-6.782836,3.129301,8.623763,4.921691,8.279929,-4.179307,-3.860833,7.683297,-3.705450,-0.835237,5.019114,-8.615323,-9.759543,-6.089249,0.916239,-7.500815,5.093952],[-6.313704,3.815796,2.040811,9.192958,-8.225071,9.630061,9.812117,1.320450,-1.510843,3.625245,6.199853,7.337573,2.003297,6.168710,-8.933968,3.507404,-4.933259,-3.672029,-3.888168,9.600233,7.231837,-8.754851,-5.327123,5.819897],[-5.378708,4.551161,-4.352219,1.106127,-9.003289,7.451703,4.961220,8.897371,1.355659,1.235420,7.764210,0.277226,-9.032513,0.254148,8.037773,3.590710,-1.287248,5.471379,5.200743,-3.832393,-0.503639,-7.395711,4.671287,9.242675],[-4.573142,-2.413160,7.135097,-7.567487,1.281034,-3.060140,-2.571833,3.416867,-9.285909,-7.459057,9.713474,0.169294,-4.344637,-4.374620,3.609627,3.064662,-5.497559,-4.104100,1.478398,8.199614,-1.714127,1.326703,-8.613132,7.269202],[2.303098,-5.667078,6.113242,-6.074803,-2.527194,9.702891,-2.480305,9.996070,-2.916523,-7.758006,-8.029052,-8.114413,1.363344,-4.274851,-8.392129,1.974266,2.749175,6.063860,7.093890,-6.060633,-1.921709,-2.511647,-2.194161,4.021058],[2.646487,-4.216786,-4.883101,-8.023512,-8.850025,3.544177,6.656362,2.696051,-7.097616,5.172459,-8.925752,1.980051,6.699686,-1.475385,2.370698,-2.963172,8.835445,1.407607,0.326239,-0.975650,-2.409749,5.269238,-9.478905,-8.363017],[0.023406,-8.606990,4.849083,-5.044449,5.691529,0.907951,-0.626990,2.578733,-4.349123,6.194490,8.076972,-6.053779,6.730129,1.333293,-5.594937,3.080151,3.665412,4.496262,5.924219,7.430897,-9.658594,-4.335554,-1.437952,1.574334],[-4.203440,-0.918984,-4.494188,6.429997,-0.029205,3.913261,-9.977587,-9.572351,-0.098580,-9.156010,4.651724,0.310779,-4.220880,3.615037,4.435901,-5.545119,1.840411,2.386245,1.014718,-0.956543,5.731307,-2.954354,-7.466036,3.099718],[-6.786887,-1.244407,4.712280,-1.960390,9.326985,-0.119305,-0.730248,-8.914204,-1.962008,9.411606,-1.222541,5.446821,7.076004,6.627518,8.484945,-3.784651,5.282479,2.545149,-8.968120,-0.188048,7.577688,1.585926,3.432747,-2.052805],[7.606951,2.088998,4.561588,-3.238109,-6.583964,-9.433603,-0.459795,-9.790115,4.764522,3.608499,3.611310,-8.668920,-9.959133,-1.678300,4.965567,4.598679,-8.368313,9.701240,-4.403413,-4.721238,9.995006,-3.939618,4.049109,2.253534],[-3.975271,2.183756,8.323996,8.879942,8.299200,6.435297,-5.307497,4.617392,-9.156179,-1.461809,-0.661089,6.447329,4.607061,-3.932778,-6.582056,0.149848,-7.983166,-9.734038,-6.448755,8.184331,0.078822,9.288197,-7.232339,-0.772122],[3.439943,6.196601,1.031027,9.700538,-7.288497,-5.981120,-4.887407,4.545539,-3.544180,-9.620523,1.734592,-3.582254,-0.892184,-6.252546,-3.594873,5.837856,0.021637,-4.523957,-1.971853,9.407722,2.716334,3.732423,-1.277964,-8.600819],[4.771393,6.362729,-8.488936,6.518532,6.337210,8.999238,6.528651,2.952006,9.644581,2.048499,-3.515925,-3.697575,-8.323932,3.630780,1.969803,5.103960,-1.006336,2.883318,-6.275328,4.258602,3.324336,-0.810431,-6.234536,9.432275],[8.518527,6.249877,-4.098197,3.268049,8.289050,9.326571,-7.553632,6.586282,6.535684,3.238369,-5.945910,-3.207098,-6.047637,-9.624430,-0.016225,-8.423059,-8.890379,6.738777,-9.600804,-9.871862,6.330843,-2.913983,-5.011683,-6.155232],[-7.068595,-7.011294,7.054360,-4.357611,2.597634,-8.996906,0.950093,0.962461,-8.965863,-1.331704,7.746773,-5.834486,-9.479858,-7.415964,2.218805,-6.151746,-4.898753,-7.197442,9.946140,6.245976,2.472036,5.906902,7.250969,-7.148076],[0.303674,-0.549329,7.897270,-1.806864,4.037019,7.930972,6.824326,-2.477746,-6.139752,9.973821,-1.262914,-6.015981,-8.823130,-5.997486,-4.000931,4.672855,6.752185,-7.757326,6.185481,-4.789363,4.690396,0.246153,3.013880,-0.562649]], dtype = "float32")#candidate|6557|(36, 24)|const|float32
call_6556 = relay.TupleGetItem(func_658_call(relay.reshape(const_6557.astype('float32'), [12, 9, 8]), relay.reshape(const_6557.astype('float32'), [12, 9, 8]), ), 1)
call_6558 = relay.TupleGetItem(func_662_call(relay.reshape(const_6557.astype('float32'), [12, 9, 8]), relay.reshape(const_6557.astype('float32'), [12, 9, 8]), ), 1)
func_1276_call = mod.get_global_var('func_1276')
func_1280_call = mutated_mod.get_global_var('func_1280')
var_6566 = relay.var("var_6566", dtype = "int16", shape = (78,))#candidate|6566|(78,)|var|int16
const_6567 = relay.const([-4,1,-3,-10,-6,6,-5,2,-6,7,5,1,-9,-3,8,2,-10,8,5,-8,8,2,2,5,10,-1,9,9,1,-6,3,5,-2,-9,-10,-7,-10,-2,-4,-2,8,9,3,5,1,-7,1,8,-4,8,3,-2,6,-5,10,-5,9,8,-2,-10,-6,7,-6,9,-1,3,6,-7,9,3,9,10,9,-4,2,-6,-10,6,-8,-5,3,3,1,-2,-1,-10,10,-2,1,-2,9,-1,-10,4,-3,-9,7,6,3,8,10,6,-9,10,6,3,7,4,-3,7,7,10,9,2,3,-6,8,-6,-2,-7,6,4,3,3,6,10,8,-9,-8,-9,-1,-8,10,-3,10,-1,-9,-10,-2,-8,10,6,-10,5,6,-2,2,3,4,2,-8,-10,7,9,10,-2,5,-10,-2,6,-10,4,-8,2,7,-8,9,3,-6,9,-10,-8,-10,-4,5,2,-6,-5,-5,8,3,8,4,9,-4,7,1,10,6,-6,2,4,4,4,-10,-3,8,6,3,-1,-6,-10,4,10,4,10,-2,3,8,9,-10,3,-6,-10,-6,3,-9,-1,-2,4,-7,-1,-1,-6,4,6,-10,3,-8,2,-6,-8,-9,-10,1,9,10,-8,-6,1,10,7,-6,5,-5,-2,3,6,10,-4,-9,3,-5,-2,5,-3,1,-6,-10,5,-7,6,6,3,7,-10,-2,-8,4,-8,-3,6,2,-3,3,10,4,2,-8,-7,-4,-1,-10,3,-1,2,3,8,-2,-10,10,6,3,-3,5,-6,-6,5,-8,-1,9,-2,3,-10,2,9,7,5,3,3,-7,7,5,-1,-2,9,8,-6,3,6,-3,7,-10,9,10,3,10,3,6,8,10,7,-9,9,-6,-7,-1,8,7,-7,1,6,-2,7,-7,-3,-2,-3,5,5,8,-2,-6,-10,-2,-2,9,-6,-9,10,-6,10,-5,-1,6,6,7,3,-2,8,10,-9,-8,-1,-8,10,3,-3,5,-1,-9,-5,6,-2,10,2,-10,10,-6,4,1,-7,7,5,4,-3,4,1,-7,-10,-5,-9,-5,-6,2,-4,-5,7,1,-4,-9,-9,-4,-3,-7,7,7,-10,7,-3,5,3,-8,-4,4,5,-4,6,-9,8,-4,-10,3,3,-6,-10,-2,3,-5,9,2,1,-10,-5,-6,5,-9,10,4,3,-10,3,8,-1,2,10,-6,1,8,7,8,-5,-6,1,10,4,-1,-1,-2,1,4,9,2,10,-7,-7,6,3,9,-5,-2,-9,5,-1,4,-2,-1,10,2,-5,-4,3,-6,-5,-4,6,-7,-6,-6,-9,7,9,-4,-3,-9,-5,-3,-5,9,-6,10,7,-6,10,-2,-10,-2,-8,8,-5,2,-1,10,-5,-6,2,-2,3,-3,-10,6,3,1,-6,-3,-7,3,-1,6,4,9,-9,-6,-3,-7,-4,-4,-3,-10,-7,10,-1,4,7,-10,-3,6,3,4,1,-8,-4,-5,9,-6,10,2,10,-5,-5,6,5,-10,6,-6,-5,3,9,6,5,6,-7,-9,4,4,9,9,-3,-4,-1,5,5,5,8,-3,3,-10,-8,7,-3,3,-2,7,1,4,2,-8,-7,-2,-4,8,4,8,-7,6,-8,1,3,-5,9,-8,7,1,-9,-9,-8,8,4,-6,1,-2,-2,6,1,2,1,5,4,-3,7,-3,10,-6,7,7,3,4,-2,-1,-4,-5,2,4,-3,8,1,-4,-5,5,-4,10,10,3,8,5,8,8,7,4,1,2,5,10,8,-4,6,10,-9,7,8,1,9,3,-3,8,1,7,5,10,3,-6,9,6,-10,7,-5,1,10,-2,3,9,1,1,-3,9,-4,-4,2,1,3,9,4,3,-6,-9,6,-2,-3,-3,4,4,-9,-9,8,-5,5,2,6,5,2,-10,3,-7,6,5,-4,-6,-7,5,4,-10,-2,10,6,9,-1,-8,2,1,5,-6,4,1,-8,7,-6,2,-7,-5,2,-3,-4,7,6,2,3,8,3,-9,8,4,4,2,-10,8,-3,-5,2,3,-10,-7,6,-2,-9,-9,-8,-10,8,-6,9,2,-5,-10,-9,-4,9,-3,1,3,10,-6,6,-3,-6,-5,-2,-8,4,-5,3,3,3,9,3,3,-8,2,-4,8,-5,-6,10,6,-4,-6,-10,-10,-6,8,-5,-5,-1,6,-3,5,5,-4,9,-8,1,-1,6,-6,4,-4,-7,3,7,1,-2,-9,-2,-4,3,4,-8,4,8,-8,6,-1,-2,-8,4,10,-10,4,2,-2,10,10,3,-3,6,3,-1,4,1,-4,-3,-10,5,-6,-10,3,-4,-9,7,-6,-1,-4,5,8,1,-10,8,9,4,10,2,5,6,-1,-3,-7,-7,-9,-8,2,-10,-4,-4,2,6,3,7,4,-1,-8,5,1,6,-6,-8,6,3,-6,2,-5,10,-10,8,-10,-10,-5,6,7,-7,-8,5,7,-5,5,3,-8,9,-9,2,8,-2,9,1,7,2,7,1,-3,6,-4,7,-1,-1,-5,-4,7,6,-1,3,-6,-5,-2,4,-3,-3,-9,-8,-9,3,-4,-7,-10,-8,-9,-10,5,8,4,-1,4,3,-6,-4,-9,-1,3,-3,-10,-5,-1,-5,-2,2,-7,-2,-8,-4,5,-1,6,-9,-9,-1,5,-9,-9,-3,-1,7,-9,-9,-2,-5,-5,-3,-8,8,-5,6,3,6,-4,-4,-3,1,2,3,6,-2,4,-10,6,-10,6,-10,-5,-4,-5,-2,-3,-2,-6,8,-3,-3,-6,9,-2,4,7,9,-2,1,-5,-8,7,-1,7,6,-10,6,3,-7,-6,-3,6,-5,6,8,8,-10,-9,1,-10,7,8,-3,1,-4,-2,-10,-10,7], dtype = "int16")#candidate|6567|(1092,)|const|int16
call_6565 = func_1276_call(relay.reshape(var_6566.astype('int16'), [1, 13, 6]), relay.reshape(const_6567.astype('int16'), [14, 13, 6]), )
call_6568 = func_1276_call(relay.reshape(var_6566.astype('int16'), [1, 13, 6]), relay.reshape(const_6567.astype('int16'), [14, 13, 6]), )
bop_6576 = relay.greater(uop_6546.astype('bool'), relay.reshape(uop_6492.astype('bool'), relay.shape_of(uop_6546))) # shape=(1, 1, 12)
const_6580 = relay.const([[[True,True,False,True,False,True,True,False,True,True,True,False],[False,False,False,False,False,False,True,False,True,False,True,False],[False,False,True,False,False,False,False,True,True,True,False,True],[False,True,False,True,True,True,True,True,True,True,True,False],[True,True,False,False,True,True,False,True,True,False,True,False],[False,False,True,True,True,False,False,True,True,False,True,False],[False,False,False,True,False,True,True,True,False,False,False,True],[True,False,True,True,False,False,True,False,False,False,True,True],[False,False,True,False,False,False,False,False,False,False,False,False],[False,True,False,False,True,False,False,True,False,True,False,True],[True,True,True,False,True,True,True,False,True,False,False,True],[False,False,False,True,True,False,True,True,True,True,True,True],[True,True,False,False,False,False,True,False,True,False,False,False],[True,True,False,False,False,False,False,False,True,False,True,False],[False,True,True,True,False,False,False,False,False,False,False,False]],[[False,True,False,True,True,False,False,True,False,False,True,False],[True,True,False,False,True,False,False,True,True,True,True,True],[True,True,True,True,False,True,False,False,False,False,False,False],[True,False,True,True,False,False,True,True,False,True,True,True],[True,True,True,False,False,False,False,False,True,True,True,True],[True,True,False,True,False,False,True,True,False,False,False,False],[True,True,False,True,False,True,False,False,True,True,False,True],[True,False,True,True,False,True,False,True,False,False,False,False],[False,False,True,False,False,True,True,True,False,True,False,True],[False,True,True,True,False,True,True,False,False,False,True,False],[True,True,True,False,False,True,False,False,True,False,True,False],[True,False,True,False,True,False,True,True,True,False,True,True],[True,False,True,True,False,False,True,False,False,False,False,False],[False,False,False,True,False,True,True,False,True,True,False,False],[True,True,False,False,True,True,True,False,True,True,False,True]],[[True,True,True,True,False,True,True,False,False,False,True,False],[True,True,False,True,False,False,True,True,True,True,True,False],[False,False,True,True,True,True,True,True,False,False,False,False],[False,False,False,False,False,False,False,True,True,True,False,True],[True,False,False,True,True,True,True,False,True,False,True,True],[True,False,False,False,True,False,False,True,False,True,True,False],[True,True,False,False,False,False,True,False,False,True,True,False],[False,False,False,True,True,True,False,False,False,False,False,True],[True,True,False,True,False,True,False,True,False,False,True,True],[False,False,True,True,True,False,True,True,False,True,False,True],[False,True,False,False,True,False,True,False,True,True,False,True],[False,False,False,True,False,True,False,False,True,True,True,False],[True,False,True,True,True,False,True,False,True,True,False,False],[True,False,True,True,True,True,False,False,True,True,True,True],[False,True,True,False,False,True,False,True,True,False,False,True]],[[False,True,True,True,False,True,True,False,True,False,True,True],[True,True,True,False,False,False,True,True,True,True,True,True],[False,True,False,True,True,False,False,True,False,True,False,False],[True,False,False,False,False,True,True,False,True,False,False,True],[False,False,False,True,True,True,False,True,True,False,False,False],[True,True,False,True,False,False,True,True,False,False,False,True],[True,True,True,False,False,True,False,False,True,False,False,False],[False,False,True,True,True,False,True,False,True,True,True,True],[False,False,True,False,False,True,True,False,False,False,False,False],[False,False,True,True,True,True,False,True,True,True,False,False],[True,True,False,False,True,True,False,True,False,True,True,False],[False,True,False,False,True,True,True,True,True,False,True,False],[True,True,True,False,False,True,True,False,True,True,False,False],[True,False,True,True,True,False,True,True,True,False,False,True],[True,True,False,False,True,True,True,False,False,False,False,True]],[[False,True,True,True,True,True,True,False,False,False,True,True],[False,False,True,False,False,True,True,True,False,True,False,True],[True,True,True,True,True,True,False,True,True,True,False,False],[True,True,False,True,True,True,False,False,True,True,False,False],[False,True,True,False,False,True,True,True,False,False,True,False],[False,True,True,True,True,False,True,False,True,True,True,True],[False,True,True,True,True,True,True,True,False,True,False,False],[False,True,False,True,False,True,True,False,False,False,True,True],[False,False,True,False,True,False,True,True,False,False,False,True],[True,False,False,True,True,False,True,True,False,True,False,False],[False,True,False,True,False,True,False,False,True,False,False,False],[False,True,True,False,True,True,True,False,True,False,True,False],[False,True,False,False,False,False,False,True,False,False,False,False],[True,False,False,False,False,True,False,True,False,True,True,False],[True,True,False,False,True,False,True,True,True,True,False,True]],[[True,False,False,True,True,False,True,False,True,False,True,True],[True,True,False,True,True,False,True,False,True,False,False,False],[False,True,True,True,False,True,False,False,False,True,True,True],[True,True,True,False,True,False,False,False,False,False,True,True],[False,True,True,True,True,True,True,True,True,True,False,True],[False,False,True,False,True,True,True,True,False,True,True,True],[True,True,True,True,False,False,False,False,True,True,False,False],[True,True,True,False,False,True,True,True,False,True,True,True],[False,True,False,False,False,False,True,True,True,False,True,True],[False,True,False,False,True,False,False,False,True,False,False,False],[True,True,True,True,False,False,True,False,True,True,False,True],[True,True,True,True,True,False,False,False,True,False,False,False],[False,False,False,False,False,False,False,False,False,True,True,False],[True,False,True,True,False,True,False,True,True,True,False,False],[True,True,False,True,True,False,True,False,True,False,False,True]],[[False,False,True,False,True,True,True,False,True,False,True,True],[True,False,True,False,True,True,True,True,False,True,False,False],[False,True,False,True,True,False,False,False,False,False,False,True],[True,True,True,False,True,True,False,True,True,True,True,False],[False,False,True,True,False,True,True,False,True,True,True,False],[True,True,False,True,True,True,False,False,False,True,True,False],[False,True,True,True,False,False,False,False,True,True,True,True],[True,False,True,False,True,False,False,False,True,True,True,True],[False,True,True,False,True,False,False,True,True,True,True,True],[False,True,False,True,False,True,False,True,False,True,True,True],[True,False,False,False,True,True,True,True,True,True,True,False],[True,False,True,True,True,False,False,True,True,False,False,False],[False,False,True,False,True,True,True,False,True,True,True,False],[True,False,True,False,True,False,False,True,False,True,False,False],[False,False,True,True,True,False,True,True,False,True,True,False]],[[False,False,False,True,False,True,True,True,False,False,True,True],[False,True,False,True,False,False,True,False,True,False,False,False],[False,True,True,True,False,False,True,False,False,True,True,False],[True,False,True,True,False,False,False,True,True,True,False,False],[True,True,False,False,True,False,False,False,False,True,True,False],[True,False,True,False,True,False,False,False,True,False,True,True],[False,False,False,False,True,False,False,False,True,False,True,True],[True,True,True,True,True,False,True,False,False,False,False,True],[True,True,False,False,True,True,True,True,True,False,True,False],[False,True,True,False,False,False,True,True,True,False,False,False],[False,True,True,False,False,True,True,True,False,True,True,True],[True,False,True,False,False,False,True,True,False,False,True,False],[False,False,True,True,False,True,False,False,False,True,False,False],[False,True,True,True,True,False,False,False,True,True,False,True],[False,True,False,False,True,True,False,True,True,True,True,True]],[[False,True,True,False,False,True,True,False,True,False,True,False],[True,False,False,False,True,False,True,True,False,False,True,True],[True,True,True,True,False,False,False,False,True,False,True,True],[True,False,True,False,False,True,False,True,True,False,True,False],[True,True,False,True,True,True,False,False,True,True,True,True],[True,False,False,False,False,True,True,True,True,True,False,True],[False,False,True,True,True,False,True,False,True,True,True,False],[True,True,True,False,True,False,True,False,False,True,True,False],[False,False,False,True,True,False,True,True,False,False,False,True],[False,False,True,False,True,False,False,False,False,True,False,True],[False,False,True,False,True,False,True,False,True,True,True,False],[True,False,False,True,False,False,True,True,False,False,True,False],[True,True,False,True,True,True,False,True,True,True,True,False],[False,False,False,True,True,False,True,False,False,True,False,True],[False,True,False,False,True,True,False,False,False,True,True,True]],[[False,True,False,True,True,False,True,True,False,False,False,False],[False,True,False,False,True,False,True,True,True,True,True,True],[False,False,True,True,True,True,False,True,False,True,False,True],[True,True,False,True,True,False,True,True,False,False,False,True],[False,True,False,False,True,True,True,True,True,False,False,False],[True,True,True,False,False,True,True,True,True,False,False,False],[False,False,False,False,False,False,True,False,True,True,False,False],[True,True,False,False,False,False,True,True,True,False,True,True],[False,True,False,True,True,True,True,True,True,True,False,True],[True,True,True,True,True,False,True,False,True,True,False,True],[False,True,True,True,False,False,True,False,True,True,True,False],[False,False,False,True,False,False,False,True,True,False,False,False],[False,False,False,True,True,True,True,True,False,False,True,False],[False,False,False,False,True,True,False,False,False,False,True,False],[False,False,True,False,False,False,False,False,False,True,True,True]],[[False,False,True,False,False,False,True,True,False,True,True,True],[True,True,True,True,False,True,True,False,True,False,False,True],[False,True,True,False,False,False,False,False,True,True,False,True],[True,True,False,True,True,True,False,False,True,False,True,True],[True,False,True,False,False,False,True,True,True,False,True,True],[False,True,True,True,False,True,True,True,True,True,False,False],[True,True,False,False,True,True,True,False,True,False,False,True],[False,True,False,True,True,False,False,True,True,True,True,False],[True,False,True,False,True,False,False,False,True,False,False,False],[True,True,False,False,False,False,True,False,True,False,False,False],[False,False,True,True,False,False,True,True,False,True,True,False],[True,True,False,False,True,True,False,False,False,False,False,False],[False,True,True,True,True,True,True,True,True,False,True,True],[True,False,False,True,True,True,True,False,False,False,False,True],[True,False,True,True,False,True,False,False,True,True,True,False]],[[False,False,False,True,True,True,True,False,True,True,True,True],[True,True,True,True,True,False,True,False,False,False,True,True],[False,True,True,True,False,True,True,False,True,True,False,False],[False,True,False,False,False,False,True,True,True,False,True,False],[False,False,False,True,False,True,False,False,True,True,True,True],[False,True,False,False,False,False,False,True,True,True,True,True],[True,False,True,False,False,False,False,True,False,False,False,False],[True,False,True,False,True,False,False,False,True,False,False,False],[False,False,True,True,True,False,False,False,False,True,False,False],[True,False,True,True,False,True,False,False,True,True,False,True],[True,False,True,True,False,True,True,False,True,False,True,True],[False,False,True,False,True,False,False,True,False,False,False,True],[True,False,True,True,True,True,False,True,False,True,False,False],[False,True,True,True,True,False,False,True,False,False,True,False],[False,True,True,False,True,True,True,True,False,False,False,True]],[[False,False,False,False,True,False,False,True,True,True,False,False],[False,True,True,False,True,False,False,True,False,True,True,True],[True,True,False,True,True,False,False,True,False,True,True,True],[True,False,False,True,True,True,True,True,False,True,False,True],[True,False,False,True,False,True,True,True,False,True,False,False],[False,False,True,False,True,True,False,True,True,False,False,False],[True,True,False,True,False,False,False,False,False,False,True,False],[False,False,True,False,False,True,False,False,False,False,False,True],[True,False,False,False,True,False,False,False,False,False,False,False],[False,False,False,True,True,False,True,True,False,True,True,False],[False,False,False,False,False,True,False,True,True,False,True,False],[True,True,True,True,False,True,True,False,True,False,True,False],[False,True,True,False,False,True,True,False,True,True,True,True],[False,True,False,False,True,True,False,False,False,True,True,False],[False,True,True,False,True,False,False,True,True,False,True,True]]], dtype = "bool")#candidate|6580|(13, 15, 12)|const|bool
bop_6581 = relay.bitwise_xor(bop_6576.astype('int8'), const_6580.astype('int8')) # shape=(13, 15, 12)
bop_6593 = relay.logical_or(bop_6576.astype('bool'), relay.reshape(uop_6482.astype('bool'), relay.shape_of(bop_6576))) # shape=(1, 1, 12)
bop_6601 = relay.greater_equal(uop_6492.astype('bool'), const_6580.astype('bool')) # shape=(13, 15, 12)
output = relay.Tuple([call_6498,var_6499,call_6510,var_6511,var_6512,const_6513,call_6519,var_6520,var_6521,call_6538,call_6556,const_6557,call_6565,var_6566,const_6567,bop_6581,bop_6593,bop_6601,])
output2 = relay.Tuple([call_6500,var_6499,call_6514,var_6511,var_6512,const_6513,call_6522,var_6520,var_6521,call_6539,call_6558,const_6557,call_6568,var_6566,const_6567,bop_6581,bop_6593,bop_6601,])
func_6606 = relay.Function([var_6481,var_6499,var_6511,var_6512,var_6520,var_6521,var_6566,], output)
mod['func_6606'] = func_6606
mod = relay.transform.InferType()(mod)
var_6607 = relay.var("var_6607", dtype = "float32", shape = (1, 1, 12))#candidate|6607|(1, 1, 12)|var|float32
var_6608 = relay.var("var_6608", dtype = "float32", shape = (336,))#candidate|6608|(336,)|var|float32
var_6609 = relay.var("var_6609", dtype = "float32", shape = (180,))#candidate|6609|(180,)|var|float32
var_6610 = relay.var("var_6610", dtype = "int64", shape = ())#candidate|6610|()|var|int64
var_6611 = relay.var("var_6611", dtype = "int32", shape = (30,))#candidate|6611|(30,)|var|int32
var_6612 = relay.var("var_6612", dtype = "int32", shape = (390,))#candidate|6612|(390,)|var|int32
var_6613 = relay.var("var_6613", dtype = "int16", shape = (78,))#candidate|6613|(78,)|var|int16
output = func_6606(var_6607,var_6608,var_6609,var_6610,var_6611,var_6612,var_6613,)
func_6614 = relay.Function([var_6607,var_6608,var_6609,var_6610,var_6611,var_6612,var_6613,], output)
mutated_mod['func_6614'] = func_6614
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6810 = relay.const([[[-7.424811,-6.753009],[-3.447389,-6.154575],[5.892352,-8.513839],[4.913715,-7.135200],[-0.109014,-1.261485],[-6.928618,-2.930368],[9.523805,-3.706224],[-1.724149,-3.847596],[-5.239580,6.393210],[1.661552,8.244061],[8.135083,9.914948]],[[5.422954,-2.438715],[-0.981444,-3.648619],[-5.608276,-7.501806],[9.880567,9.749747],[-7.680641,-3.860238],[-6.756335,9.542710],[-7.465437,-4.826379],[0.269842,-0.581324],[-3.517610,-7.663243],[1.940516,4.345481],[4.823014,9.857197]],[[-7.129849,-2.250977],[9.522255,8.829991],[-6.503420,6.675163],[-9.948290,0.137539],[-3.212641,-4.979904],[-0.336124,4.411756],[-0.988255,2.140842],[-7.386216,-1.187242],[2.432848,8.774528],[9.192904,7.757578],[-4.381327,-0.042894]],[[-9.056822,-0.853576],[-0.630915,5.610939],[9.104113,-0.476953],[7.625459,9.229428],[4.040440,6.344083],[-4.201975,0.709222],[9.449147,0.732296],[1.137496,-6.839216],[9.838615,-5.970366],[-9.261851,6.357321],[-3.375143,8.182478]],[[6.208336,2.215168],[-2.772963,-9.521802],[-5.105889,-4.763478],[-9.127523,1.108888],[-4.706325,1.519982],[-5.756082,4.331791],[-3.341405,-5.462919],[-6.045720,-8.078739],[-1.840135,-4.792542],[-1.770819,4.126103],[-7.682056,1.275657]],[[3.650422,9.512334],[-0.880131,-2.276067],[-3.463380,0.756081],[-8.587621,-7.733217],[0.663789,-1.344499],[-4.518118,-0.137631],[1.527310,3.983616],[-8.730532,-9.721771],[8.229979,2.508386],[4.238173,-3.957160],[4.488203,-0.066323]],[[1.630125,-7.589555],[0.969085,-8.281688],[-1.373916,5.940731],[-3.092853,2.999987],[0.689069,3.689754],[0.808506,-0.166879],[-6.800328,4.576968],[1.721905,7.576957],[-3.130321,4.776921],[-1.763679,7.280803],[0.408464,5.537394]],[[-8.667484,-9.782649],[-3.363469,-2.571572],[-3.915430,-4.734533],[-3.449481,-5.211811],[9.519466,-2.346841],[9.055054,-5.182536],[-0.143196,-7.628975],[-0.269065,1.410195],[3.872865,-2.132483],[2.342589,4.693042],[7.094534,-8.617174]],[[1.844237,0.338178],[-3.056362,-1.322788],[-4.921579,-5.510422],[2.010922,-1.150268],[-7.491271,-5.170104],[9.552478,6.130429],[3.651060,-6.249943],[8.299690,-8.575581],[4.275718,2.084614],[-4.745529,8.232853],[-5.431625,5.004336]]], dtype = "float32")#candidate|6810|(9, 11, 2)|const|float32
uop_6811 = relay.cosh(const_6810.astype('float32')) # shape=(9, 11, 2)
func_2260_call = mod.get_global_var('func_2260')
func_2263_call = mutated_mod.get_global_var('func_2263')
const_6818 = relay.const([4.070136,-9.871696,2.530618,-4.597712,-6.681970,-6.910552,0.673495,5.209904,9.758489,4.185552,4.187990,-1.399188,-2.807420,4.922046,6.637381,1.891285,5.592268,0.158577,5.412622,-5.374721,-5.465548,8.094142,0.041575,9.549806,-8.742555,5.909122,-8.158517,-5.379181,0.536105,-1.492660,1.065219,4.330980,-4.722421,3.719265,-9.924042,8.311313,-2.989622,2.913259,4.020127,0.948142,9.693074,0.846888,-2.858212,-9.378658,6.903747,-1.026628,-5.133963,-4.460916,9.960222,4.824143,2.653102,-4.230821,9.928661,2.332881,-5.470252,8.913640,-0.715724,2.664460,-0.581037,-1.052976,2.448615,-3.570393,-5.498439,-5.212564,4.488185,1.382985,-8.848540,-4.202994,3.818561,6.194512,-2.936943,-7.355641,1.577140,9.860558,2.056091,-4.456004,0.904820,3.297005,2.560157,2.781070,0.081370,7.617071,-0.311484,8.243008,-0.976385,8.125919,7.452078,6.340588,-5.676573,2.299196,-8.428902,-3.297790,-1.733558,6.979773,1.670324,-9.143659,1.896751,-1.137349,-9.012663,-3.627386,-6.577288,2.659667,7.673115,7.250384,-1.019930,8.662402,-6.128083,-1.946435,1.423389,-4.771924,-3.363118,3.229581,-1.179035,0.115055,-2.055946,7.503361,8.944588,-7.447563,3.329383,-5.732099,-1.588587,-4.187612,1.014537,-6.542010,-3.046689,8.103617,0.519154,1.912889,3.711421,-1.459327,-9.557452,-9.456785,6.469101,-3.634329,-6.079557,-2.062002,-1.601480,4.459562,2.701009,6.746221,-6.928556,-5.307502,5.573328,-5.745438,-9.398643,-7.420568,-3.396973,-6.733767,-8.449068,7.124656,-6.070223,1.365857,-0.750007,-5.950875,-1.264753,-2.712248,5.067640,2.614816,-5.678083,6.981049,-1.486467,9.059946,-1.766253,-3.650707,-6.792835,-2.145624,2.220010,8.365299,-0.046027,1.938782,4.213706,-9.517039,-5.093664,-4.280451,8.026337,4.793063,2.380235,-0.717749,5.024447,-6.263042,-3.771253,-0.816016,2.874394,-7.439974,8.468349,-3.184451,3.782673,2.387290,-9.081478,-4.217113,2.004327,-2.598349,-9.555053,9.120855,5.887238,2.222775,-3.776438,-2.253071,3.681414,9.246837,-4.845883,-8.697133,-0.444563,-8.598283,1.239818,-7.016536,-7.843047,9.002450,-1.124855,-1.608627,6.648218,9.209299,4.610538,1.630431,-4.597994,-4.213627,-9.681053,-3.120003,-6.849218,-4.205097,2.743469,7.206958,9.040262,-1.556840,7.904749,5.998546,-1.572105,-3.259723,-0.211596,1.334092,-8.000457,-2.521426,-5.418285,-1.591752,6.601391,-4.040086,7.693560,-5.072018,-8.704830,-4.567799], dtype = "float32")#candidate|6818|(240,)|const|float32
call_6817 = func_2260_call(relay.reshape(const_6818.astype('float32'), [6, 10, 4]))
call_6819 = func_2260_call(relay.reshape(const_6818.astype('float32'), [6, 10, 4]))
bop_6823 = relay.bitwise_or(uop_6811.astype('int16'), relay.reshape(const_6810.astype('int16'), relay.shape_of(uop_6811))) # shape=(9, 11, 2)
bop_6845 = relay.equal(const_6810.astype('bool'), relay.reshape(bop_6823.astype('bool'), relay.shape_of(const_6810))) # shape=(9, 11, 2)
func_3420_call = mod.get_global_var('func_3420')
func_3423_call = mutated_mod.get_global_var('func_3423')
const_6850 = relay.const([[-9.327304,7.427173,5.591405,3.275600,-3.414726,7.441348,-6.024752,-8.862520,5.765199,-5.790513,9.754321,-7.733437,-2.884547,-2.090190,-3.913124,-8.567795,-0.047447,4.105130,-9.568450,-4.574473,-7.425851,9.991560,7.366022,-5.214494,-3.420603,8.819341,7.505353,-2.099019,-3.218458,5.021564,-1.942467,4.682984,9.953610,-1.159861,8.295118,-0.090370,-5.063912,8.824724,8.215239,-4.613067,-3.352299,-1.842010],[0.810233,7.098525,1.406883,-2.642066,0.754375,-9.002972,5.548589,-3.625145,-4.906241,-2.259039,-6.771442,-6.230662,-7.476155,4.252597,6.585363,-7.740444,-4.660471,-6.038505,-1.175555,0.704171,-6.530510,-6.783569,-3.513178,-1.893692,-3.577445,4.717244,-4.322513,-4.034690,-3.415403,-5.506018,8.389667,-2.896775,-2.199883,-8.345395,-8.038311,-2.883644,8.754674,-0.887659,9.540172,-6.237684,4.658546,-3.114180],[-4.272581,-0.371755,1.616671,-6.795481,-4.601476,-9.507273,4.762401,7.130832,5.762301,-4.861888,4.144796,-3.299332,8.386455,-6.956131,6.030206,3.167560,2.111095,-8.195360,-7.358176,-1.571284,-4.376782,6.559464,0.225453,2.809334,6.560223,2.115478,-5.723807,2.129746,4.086330,-8.611247,4.596599,-2.395279,-7.916651,0.600215,3.742904,9.355700,-7.165169,6.063391,4.134567,-4.299252,-6.981406,3.114657],[-7.862179,-2.153526,-2.182354,-2.470149,-2.867408,9.219535,1.412348,4.925638,-9.598637,-7.699969,-5.849361,-4.061079,-0.453823,-4.379551,-9.438344,3.482999,-1.161090,-0.413218,3.840559,-0.162188,0.667817,-2.772872,-2.175299,6.299829,-6.384988,-3.201105,4.524784,-4.956337,0.812766,-9.717781,7.483685,-2.949689,-6.653773,-2.728712,3.390767,5.895056,-7.584418,-9.118114,-3.124411,9.750380,2.623217,8.647294],[-4.601204,7.094266,-9.956488,-9.085044,2.746111,2.352852,9.980944,6.422956,3.870603,-9.708095,-5.481737,-1.470699,-9.831122,0.663217,0.198562,7.412627,7.768899,-8.759421,-3.919391,8.268110,8.577636,7.202693,-0.602623,-7.488442,-2.795741,-2.471945,1.440631,7.993551,-8.282853,0.211137,8.468982,-0.406072,8.457956,-3.980418,3.634774,-5.131285,-7.645275,4.002742,-6.342033,-8.499048,-1.867929,-7.244030]], dtype = "float64")#candidate|6850|(5, 42)|const|float64
call_6849 = relay.TupleGetItem(func_3420_call(relay.reshape(const_6850.astype('float64'), [7, 10, 3])), 0)
call_6851 = relay.TupleGetItem(func_3423_call(relay.reshape(const_6850.astype('float64'), [7, 10, 3])), 0)
var_6852 = relay.var("var_6852", dtype = "float64", shape = (5, 42))#candidate|6852|(5, 42)|var|float64
bop_6853 = relay.logical_or(const_6850.astype('bool'), relay.reshape(var_6852.astype('bool'), relay.shape_of(const_6850))) # shape=(5, 42)
output = relay.Tuple([call_6817,const_6818,bop_6845,call_6849,bop_6853,])
output2 = relay.Tuple([call_6819,const_6818,bop_6845,call_6851,bop_6853,])
func_6878 = relay.Function([var_6852,], output)
mod['func_6878'] = func_6878
mod = relay.transform.InferType()(mod)
mutated_mod['func_6878'] = func_6878
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6879 = relay.var("var_6879", dtype = "float64", shape = (5, 42))#candidate|6879|(5, 42)|var|float64
func_6878_call = mutated_mod.get_global_var('func_6878')
call_6880 = func_6878_call(var_6879)
output = call_6880
func_6881 = relay.Function([var_6879], output)
mutated_mod['func_6881'] = func_6881
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7123 = relay.var("var_7123", dtype = "int64", shape = (14, 5, 5))#candidate|7123|(14, 5, 5)|var|int64
var_7124 = relay.var("var_7124", dtype = "int64", shape = (14, 5, 5))#candidate|7124|(14, 5, 5)|var|int64
bop_7125 = relay.bitwise_xor(var_7123.astype('int64'), relay.reshape(var_7124.astype('int64'), relay.shape_of(var_7123))) # shape=(14, 5, 5)
func_6606_call = mod.get_global_var('func_6606')
func_6614_call = mutated_mod.get_global_var('func_6614')
const_7131 = relay.const([-1.165433,0.913930,-3.404823,-6.715990,7.803160,-1.487320,-7.810554,1.270351,-6.883401,5.583487,-8.054865,-2.873846], dtype = "float32")#candidate|7131|(12,)|const|float32
const_7132 = relay.const([9.667527,7.311885,-6.312631,-5.981541,-4.531245,2.797954,-3.346088,-6.895426,4.176356,-1.692081,1.788335,-0.140573,-3.318536,-8.103539,-2.042232,-9.149712,7.156847,7.633718,-5.737509,-8.109563,-3.159183,-9.827418,-4.310886,-0.275075,-9.113047,8.160143,-7.298684,2.151730,1.513121,3.725699,2.933613,1.937735,0.053483,9.347155,-9.761018,-1.573422,9.290617,-4.685162,9.528406,4.205515,5.999157,-3.241902,-7.749367,-3.986659,6.039339,7.344908,-9.306712,2.426317,-2.173204,3.592684,0.425450,1.831973,8.121082,-5.203571,-8.633129,-6.058956,-8.447745,-3.494098,3.988574,-4.802902,-4.852116,5.147591,4.569920,-1.074278,2.243933,-0.588983,-2.375112,1.172883,8.528513,-8.376441,2.333608,-5.578374,6.684021,-5.644385,1.174115,5.638478,6.089179,-2.326862,-1.263687,-1.495701,0.159178,-5.386626,-3.421534,7.790135,8.188095,-5.325135,-6.642071,-7.748605,1.281778,-1.556322,-9.038069,-1.723147,8.129888,-8.411626,4.179850,6.139230,3.583810,-9.070802,-4.421467,-0.587586,-6.914370,-1.646185,5.633713,-8.476696,-0.245520,7.177733,8.721765,-6.358375,8.769301,-5.637765,2.992002,8.846694,4.645974,-2.287565,9.826684,2.736533,7.127064,-2.392429,-9.345693,8.731181,-0.954329,3.606348,-0.721852,-9.852006,-3.302884,3.625629,-8.715554,8.716486,-9.040270,5.469225,-5.112000,7.532042,5.197565,-9.719858,6.475370,-6.580933,-8.569883,0.825331,5.114181,-1.392618,-0.548344,7.700459,-7.639837,-2.177416,-4.917700,-3.045811,-6.732708,8.909098,-7.118663,6.181735,3.180446,8.195620,-9.616017,9.824675,-1.645660,3.901860,6.896917,1.932223,9.954720,-1.592955,-6.925127,-9.815462,6.880035,-9.100926,4.188262,0.692562,0.719630,8.197805,1.486852,8.693980,-5.409747,-2.018669,6.968622,-7.853024,5.377535,-0.044850,0.271471,-7.532809,-9.854318,-5.214197,-2.524752,9.629666,-8.968055,6.030239,2.941831,3.626507,-4.872238,6.467763,-9.870094,-1.220319,-7.430535,2.807050,-0.130552,-8.441110,-2.608031,-8.227953,-4.670459,-0.539008,-4.220111,-6.686196,-9.884302,-0.459492,9.172064,-4.638104,3.880481,1.100359,0.035524,3.216563,-9.063772,8.386384,8.306328,-4.964906,5.935542,-7.249255,-9.843670,4.173508,1.432574,8.677913,3.864319,-4.829701,6.152642,-3.741064,-1.289454,-4.689387,-1.948220,1.449242,9.886607,9.356107,-9.543896,1.129639,1.910739,1.914548,-9.611954,4.788301,-3.780149,-3.362579,-8.228529,-9.124471,-3.726141,8.172006,-1.745969,-1.192548,-9.130850,-0.302395,-7.730964,-8.962524,-6.937014,-2.550591,-5.818721,-5.325189,0.451843,-5.775997,-5.869787,-6.526531,1.574055,0.617349,-0.159947,-5.889146,0.038867,6.621223,-6.343735,5.060599,6.145880,6.442044,-7.052296,-2.288480,-4.577609,6.591435,9.630596,6.151392,9.669175,1.152152,9.617614,2.356191,-4.732073,-8.850164,-4.102049,-3.762644,5.660968,5.164612,0.451511,0.142828,8.026269,-7.528323,-7.315196,9.980806,-1.610526,3.483930,-1.247074,2.894850,4.992817,0.373017,2.651142,4.624155,5.145826,-1.088955,-5.450861,-8.028759,-0.917260,-2.012667,3.373135,7.504639,-5.429695,1.039193,5.831395,-4.692067,-1.184501,-7.031338,2.687226,-6.490695,-9.645506,2.435110,-7.741441,-3.670177,8.082526,8.405613,6.314471,-8.605102,8.342595,-0.840900,-1.695850,5.763778,5.057394,5.304054,8.764117,5.220784,-6.883015,-0.952725,3.191367,-7.334088,5.486053,1.882696,-2.826883,6.047543,8.939542,-3.013715], dtype = "float32")#candidate|7132|(336,)|const|float32
var_7133 = relay.var("var_7133", dtype = "float32", shape = (90, 2))#candidate|7133|(90, 2)|var|float32
var_7134 = relay.var("var_7134", dtype = "int64", shape = ())#candidate|7134|()|var|int64
const_7135 = relay.const([-2,-6,-10,-4,3,8,-3,4,-7,10,4,-9,-6,-1,5,3,-8,6,7,-4,4,-8,8,-4,2,10,7,-4,-6,7], dtype = "int32")#candidate|7135|(30,)|const|int32
var_7136 = relay.var("var_7136", dtype = "int32", shape = (390,))#candidate|7136|(390,)|var|int32
const_7137 = relay.const([-9,-9,-7,-9,-4,1,9,-8,-9,-9,-10,1,-8,9,1,2,-9,8,-4,10,-4,-2,6,3,10,4,-5,-8,-7,4,1,10,7,-7,-5,-10,5,3,4,9,-10,-6,1,-7,-2,-8,7,2,-8,-6,5,-3,2,2,-3,-9,-5,9,10,-4,-9,3,10,1,-4,2,-6,10,4,1,-4,-10,7,2,-7,10,-9,-1], dtype = "int16")#candidate|7137|(78,)|const|int16
call_7130 = relay.TupleGetItem(func_6606_call(relay.reshape(const_7131.astype('float32'), [1, 1, 12]), relay.reshape(const_7132.astype('float32'), [336,]), relay.reshape(var_7133.astype('float32'), [180,]), relay.reshape(var_7134.astype('int64'), []), relay.reshape(const_7135.astype('int32'), [30,]), relay.reshape(var_7136.astype('int32'), [390,]), relay.reshape(const_7137.astype('int16'), [78,]), ), 16)
call_7138 = relay.TupleGetItem(func_6614_call(relay.reshape(const_7131.astype('float32'), [1, 1, 12]), relay.reshape(const_7132.astype('float32'), [336,]), relay.reshape(var_7133.astype('float32'), [180,]), relay.reshape(var_7134.astype('int64'), []), relay.reshape(const_7135.astype('int32'), [30,]), relay.reshape(var_7136.astype('int32'), [390,]), relay.reshape(const_7137.astype('int16'), [78,]), ), 16)
func_115_call = mod.get_global_var('func_115')
func_118_call = mutated_mod.get_global_var('func_118')
var_7140 = relay.var("var_7140", dtype = "float64", shape = (702,))#candidate|7140|(702,)|var|float64
call_7139 = relay.TupleGetItem(func_115_call(relay.reshape(var_7140.astype('float64'), [6, 9, 13])), 0)
call_7141 = relay.TupleGetItem(func_118_call(relay.reshape(var_7140.astype('float64'), [6, 9, 13])), 0)
uop_7142 = relay.sinh(var_7133.astype('float32')) # shape=(90, 2)
uop_7144 = relay.acos(uop_7142.astype('float64')) # shape=(90, 2)
func_4652_call = mod.get_global_var('func_4652')
func_4657_call = mutated_mod.get_global_var('func_4657')
const_7153 = relay.const([3,-10,1,4,-5,3,7,-7,6,-7,-7,-2,6,1,9,3,-3,-6,9,4,-2,9,-8,-10,-2,7,-1,-4,-4,-9,4,5,-5,2,1,-9,-2,-2,5,-9,10,6,-4,-10,-5,9,1,9,-7,1,8,2,-8,-4,-8,-10,8,-2,6,9,1,3,6,-7,6,2,7,5,8,-6,2,-7,-2,3,10,-9,3,-2,-5,-3,-6,4,9,-9,-1,-7,3,-5,10,-4,3,-1,5,-5,-4,-3,5,6,-9,5,1,2,4,10,-7,-8,8,-7,3,-5,-4,7,-4,-5,7,-2,10,4,-5,-1,9,-5,9,9,-7,8,1,-1,10,9,-4,8,8,9,6,-6,-9,9,-4,-9,3,2,-5,-10,-9,-2,1,-6,-2,2,6,3,10,5,-10,-7,-4,-6,4,-3,4,-5,-7,-4,7,-9,6,10,3,2,-10,8,-1,-4,-2,-7,4,3,-4,-2,-5,-4,2,6,1,-1,-10,4,5,6,5,-6,-5,4,-8,-10,9,5,-10,-7,3,-2,8,2,-6,-3,-2,-1,1,-6,-2,-3,10,2,-1,1,-8,-4,-8,2,-7,-4,7,5,1,-7,8,3,10,-8,-4,-4,1,-1,-6,-5,-9,3,-6,-1,2,9,-2,7,-8,4,3,6,-7,3,9,8,8,-1,-2,9,-4,3,1,-7,-5,10,-10,2,-1,-1,-2,8,10,2,6,7,2,-4,-2,-1,-6,4,7,-3,10,1,-1,-2,2,5,9,-6,2,5,4,2,9,6,-2,6,-1,6,8,4,-3,-6,1,-5,-3,-8,6,-7,-5,-1,-9,1,-4,3,6,-1,-8,-3,-10,-3,-9,-10,-2,8,-9,6,-5,-8,-7,-10,10,-2,-10,-7,-3,5,-3,7,-3,3,-3,8,10,-7,-8,-10,10,-7,8,5,4,5,7,5,6,-10,10,9,7,-9,-4,-3,2,7,4,3,-1,9,10,-8,1,7,7,1,5,8,8,6,-3,-10,-4,-9,1,3,-10,-10,-8,-2,7,10,3,1,-1,-1,-1,-3,4,-10,-8,8,3,-8,-5,7,-2,-3,-4,6,3,-10,-6,7,-5,-7,-1,8,5,6,-6,3,1,3,-2,3,-6,-8,-7,4,-6,-2,10,-1,-8,4,-2,-2,-2,-8,-5,8,3,-4,4,10,-3,-7,4,7,-6,4,5,-9,-10,-9,-6,-6,6,-9,10,-10,-2,5,6,-8,2,-10,-7,-3,-6,3,3,2,1,-8,3,-5,7,-2,3,-7,1,1,-8,4,9,9,9,1,-5,1,9,4,8,-2,4,-6,-9,-3,-3,5,6,-6,-7,5,6,-9,-3,-2,9,-4,5,7,6,5,9,-1,-3,-10,-4,4,4,-6,8,-10,3,-9,-1,-4,-10,-6,8,4,8,4,2,1,-3,2,6,8,3,8,8,3,-1,-7,-8,-10,6,8,2,-1,-8,-4,-3,4,2,2,-3,5,3,3,-2,8,7,-5,7,1,1,10,10,1,-5,1,5,-6,-10,10,1,2,-5,-6,5,10,5,-1,3,4,-5,9,-10,10,3,-4,1,-2,-2,-1,-6,-4,-10,-3,-7,2,-3,-3,8,-5,-5,-5,4,5,8,3,-6,4,-10,-10,7,10,-4,4,-8,3,9,-2,-7,-9,10,8,8,1,-8,-6,4,4,-9,-2,-9,-10,4,1,8,6,-1,3,4,-7,6,7,7,10,2,-3,-6,1,-7,-1,2,3,2,1,2,10,1,-10,1,-6,-9,-3,-4,-4,9,-7,3,-4,-8,10,-5,9,-8,-4,-6,-1,9,-1,2,-5,-1,2,4,8,1,1,-8,1,7,6,-4,-10,5,-8,-7,6,7,1,-3,3,-8,-1,-5,6,-8,7,1,6,9,3,-7,3,6,-3,-6,5,1,2,-6,9,-1,5,4,-8,-5,10,-9,-6,-8,5,7,9,6,5,-10,-6,-1,-2,4,9,-10,-3,-3,-5,-8,-6,-2,3,6,10,2,-6,-10,-9,10,-6,-8,-3,-6,1,-1,-8,-2,1,-9,-4,8,4,-10,-2,3,-5,7,-10,-8,-8,10,4,-9,9,-5,-8,3,-8,-9,7,8,-2,2,1,-5,-1,-7,6,-9,3,-6,-4,5,5,-4,-5,-6,9,-9,10,-1,8,3,1,8,5,-7,6,2,-7,4,1,8,-8,2,10,6,-1,-3,2,-6,-7,7,-4,-5,-9,2,-6,2,7,1,-9,-7,-7,-3,-4,-9,2,4,-7,9,-7,6,1,-7,-5,-6,-7,-5,5,-7,-6,10,2,-6,-5,7,-5,-5,-2,-5,-3,1,3,-6,1,7,-8,7,-3,1,9,-9,-2,3,9,10,6,-1,7,-7,-1,-8,-1,2,-8,-3,-10,3,9,5,1,-9,9,10,-9,4,1,-2,-5,-8,7,1,-6,-9,-10,10,-2,-2,10,4,-9,1,10,-4,-8,-9,-6,10,7,-4,6,10,-4,8,6,-5,-2,-5,-10,7,-3,-2,-9,8,4,2,-9,-7,-7,-9,10,-8,-10,5,3,-7,10,-5,2,2,-7,-7,9,1,10,8,2,2,-10,4,-1,-10,-2,8,8,1,4,-4,-1,-8,-3,-1,-4,-8,2,-6,3,-1,-8,-9,1,-4,8,-10,2,-10,-4,-1,5,-3,-3,7,-4,1,9,10,1,-7,-3,8,4,-2,10,-9,5,10,-8,6,-9,-5,8,-10,-1,-10,3,2,9,-8,-9,3,-6,4,2,-9,8,1,9,-6,8,7,-7,1,-4,2,5,-9,-10,8,-4,5,10,7,7,2,-3,-9,9,-6,-2,-8,6,9,-2,-8,-3,-10,8,2,3,1,4,-8,-3,-10,5,-1,7,6,8,-8,8,-5,5,2,-1,6,4,-2,8,-1,10,-5,5,-8,7,5,4,-2,7,-9,-6,8,10,-8,-2,5,-2,-10,-2,-1,6,6,7,-1,3,-5,-6,10,2,8,6,7,2,6,-10,6,-6,6,-2,8,-6,4,-3,-9,10,-9,1,-6,-7,-10,3,1,-8,-1,-1,-6,1,10,-2,-8,-10,-1,-5,7,-3,-9,3,-4,-6,-1,-5,5,-5,-1,-7,3,8,-8,3,6,-2,-2,4,6,-4,-8,-2,-6,-9,-7,-8,4,4,-10,7,5,-3,-4,5,-9,-5,-8,10,-7,3,-7,-4,-8,5,9,7,1,3,7,3,6,10,8,-2,-3,1,-7,-3,5,-4,-7,-10,-9,4,-10,-1,-9,-2,3,6,-8,-5,3,-9,-5,-5,-4,-3,-6,10,-7,4,-3,5,-10,-3,-7,3,-8,8,-7,-6,-8,7,-9,1,9,-2,-10,10,9,8,4,5,6,-5,-8,6,-1,9,-4,-6,4,7,8,-5,5,-2,-7,-10,2,-7,-8,6,8,1,-4,6,8,5,3,2,5,6,5,-4,3,7,6,5,9,-5,5,-2,-5,9,-8,7,-7,5,10,8,3,-7,1,3,7,4,9,5,4,5,6,-5,-4,-6,-2,-10,-4,-1,8,-6,2,-7,5,-9,9,-10,8,10,6,8,2,2,-4,2,7,-5,7,3,5,2,-8,10,10,9,8,5,-5,8,9,9,10,-8,9,1,-5,-9,7,-8,9,-6,-5,9,-7,-9,-8,6,-4,5,6,-9,-8,2,8,-4,-9,6,-1,-4,-3,-7,-1,1,7,-1,1,-2,8,6,-7,-5,-1,10,7,2,-5,2,-2,-1,8,-4,4,10,1,10,-8,-6,-7,3,-8,-3,-6,9,8,8,6,7,-7,1,-6,-10,7,7,10,-7,7,-1,7,-10,4,2,-2,-7,7,9,-1,10,-2,-2,-9,3,9,8,6,10,7,-9,1,8,-5,5,-7,-4,4,-3,4,-8,10,8,3,7,2,-1,-1,4,7,2,4,2,9,-10,1,-8,3,8,-6,8,-10,-2,1,9,-3,3,-4,-5,2,9,-3,-4,-3,-2,9,8,2,-4,-5,-10,-1,-8,-8,1,-10,1,7,10,10,-10,4,2,-9,-7,-7,-3,-10,7,-5,5,-9,7,-4,6,10,4,-4,-10,-3,5,5,-2,10,10,8,-9,2,2,4,9,-4,10,1,10,8,-8,5,8,9,-3,3,-5,1,-10,-5,-10,6,-6,-9,-3,-4,-2,10,6,-7,-10,2,-7,3,7,10,1,-7,-3,5,-5,-6,8,8,9,5,-8,-5,2,-6,-9,6,10,-7,4,-8,9,-8,4,-4,-1,-10,-8,6,4,8,-8,-3,2,1,10,-4,5,-9,-8,-2,2,8,9,-9,-7,6,3,-6,-9,-10,-8,9,6,4,9,-3,-10,-2,-8,-1,1,-10,9,9,3,-7,6,6,-4,-8,-6,5,-3,-4,9,5,7,4,3,5,5,-9,-8,4,7,4,-2,-1,5,7,-5,3,10,-9,5,1,6,2,6,3,-6,9,5,5,7,5,4,3,9,1,6,3,-3,-3,1,-6,-6,-6,-5,2,-3,-6,-4,5,1,-7,-7,8,-5,2,-10,2,-1,6,9,2,2,9,4,-1,-9,3,-9,7,-3,-10,7,-8,10,8,9,-9,5,9,3,6,8,-9,2,3,-7,10,-4,-4,-10,2,-2,2,-3,7,-3,-2,-4,-10,-9,4,5,-1,10,-1,-10,4,6,-7,9,6,9,-6,9,1,-8,-5,7,-10,-5,-1,-6,7,1,2,2,-5,-6,-3,-7,-4,-9,8,6,5,8,8,-1,7,-1,-5,7,-3,10,-7,-10,2,1,-5,5,-10,-6,-9,3,8,-3,6,-2,2,-5,-7,-1,4,8,-8,-9,-7,5,1,-2,-4,3,-6,9,7,10,-10,-4,2,6,-4,-10,-10,-7,-5,-2,-7,-8,-8,-4,2,-8,4,7,-3,-7,7,-7,4,-8,4,-5,2,5,-10,-6,2,5,7,3,-6,-4,8,10,7,1,5,-4,9,1,-10,-2,-1,8,8,8,2,4,5,-1,1,4,8,-5,9,6,2,-2,4,3,-1,-5,6,2,5,-6,7,-2,-9,-4,4,-8,8,1,9,-4,-6,-3,8,6,3,10,3,7,-1,-2,2,1,-1,-2,6,-3,4,-5,-5,6,4,-10,-7,10,-9,-3,4,1,-6,-8,-8,5,6,4,4,9,-5,-6,5,10,-10,-7,7,-10,10,5,8,9,3,-3,-3,-4,1,-1,-6,2,-2,-2,6,3,-1,-3,-10,1,8,-10,-8,9,6,6,1,-10,7,-5,4,-7,6,-2,-4,2,8,-3,8,-6,4,-6,9,1,8,7,1,4,3,6,10,-9,1,7,-6,6,2,-8,-8,7,2,-7,-7,2,9,-9,-7,-9,2,10,8,1,-7,-3,5,-2,-1,2,10,-9,-2,-9,-9,-7,-4,-1,10,2,-9,4,-2,-3,-5,-4,6,3,-4,-9,1,-3,3,-7,6,-2,-4,-8,-3,3,5,1,1,-3,8,-7,6,-4,-4,1,10,-4,10,-3,5,10,-1,5,-7,-6,-8,6,3,-2,10,-8,9,-7,5,1,-5,-4,-4,-10,-5,7,-1,7,2,-2,5,5,3,-2,-3,10,5,-2,-1,9,-9,9,-7,6,6,-2,-8,-4,10,-1,10,-10,-7,4,-7,4,-7,-7,-9,-4,9,-5,-6,9,-4,10,4,-9,-2,-9,-5,-4,7,-9,-2,-3,-2,1,-7,5,-3,-5,4,-9,8,7,4,8,-3,-10,-1,-10,-1,-10,-3,10,-9,-4,1,-1,-3,2,10,-9,-6,-9,-1,-9,-10,-1,-3,9,-7,7,6,7,-6,7,9,-10,4,-10,-8,7,8,-1,10,5,4,-3,9,10,-9,3,2,10,3,-8,1,-1,5,1,3,-3,5,-5,-8,-2,-3,-4,8,-8,-6,-4,-4,-9,6,-6,-4,-3,-5,-5,-5,-9,-6,3,6,7,-10,10,-3,-4,-7,-7,9,1,-10,6,-7,-6,-5,7,10,3,4,-3,2,-7,8,-3,-3,1,-3,9,-10,-3,1,8,3,-1,-7,-3,4,10,-3,6,-7,7,4,10,-10,10,-2,-5,10,-1,2,5,-3,5,8,-1,-8,7,-4,-5,9,-8,-6,7,8,-2,-1,4,2,1,3,-8,-2,-3,1,1,-7,-2,-9,-8,4,-7,5,-2,-3,10,7,-6,-3,5,1,4,4,-1,-5,-2,-7,6,2,-2,5,10], dtype = "int8")#candidate|7153|(2340,)|const|int8
var_7154 = relay.var("var_7154", dtype = "int16", shape = (1092,))#candidate|7154|(1092,)|var|int16
const_7155 = relay.const([-7,7,-1,1,-4,1,7,9,8,-10,-2,-2,-5,-3,8,-9,4,-10,-10,3,6,-8,-5,-2,-9,-2,9,4,-1,-7,4,-3,-3,3,4,9,-2,-4,-6,-2,9,3,-9,3,7,8,-9,-2,-6,6,-3,-9,-4,3,-9,2,-10,7,-6,-9,2,6,6,2,5,1,2,4,-5,3,-2,2,-2,1,-9,10,-6,3,-6,-6,-6,10,9,4,-1,-7,-6,6,8,-7,-8,10,-5,7,-1,-2,-2,-5,-6,-6,-7,-9,2,10,-3,-8,-6,-6,-1,-2,-8,9,9,-2,2,10,-2], dtype = "int32")#candidate|7155|(117,)|const|int32
call_7152 = relay.TupleGetItem(func_4652_call(relay.reshape(const_7153.astype('int8'), [15, 13, 12]), relay.reshape(const_7153.astype('int8'), [15, 13, 12]), relay.reshape(var_7154.astype('int16'), [1092,]), relay.reshape(const_7155.astype('int32'), [117,]), ), 6)
call_7156 = relay.TupleGetItem(func_4657_call(relay.reshape(const_7153.astype('int8'), [15, 13, 12]), relay.reshape(const_7153.astype('int8'), [15, 13, 12]), relay.reshape(var_7154.astype('int16'), [1092,]), relay.reshape(const_7155.astype('int32'), [117,]), ), 6)
func_2363_call = mod.get_global_var('func_2363')
func_2366_call = mutated_mod.get_global_var('func_2366')
var_7158 = relay.var("var_7158", dtype = "float64", shape = (528,))#candidate|7158|(528,)|var|float64
call_7157 = relay.TupleGetItem(func_2363_call(relay.reshape(var_7158.astype('float64'), [12, 4, 11]), relay.reshape(var_7158.astype('float64'), [12, 4, 11]), ), 1)
call_7159 = relay.TupleGetItem(func_2366_call(relay.reshape(var_7158.astype('float64'), [12, 4, 11]), relay.reshape(var_7158.astype('float64'), [12, 4, 11]), ), 1)
output = relay.Tuple([bop_7125,call_7130,const_7131,const_7132,var_7134,const_7135,var_7136,const_7137,call_7139,var_7140,uop_7144,call_7152,const_7153,var_7154,const_7155,call_7157,var_7158,])
output2 = relay.Tuple([bop_7125,call_7138,const_7131,const_7132,var_7134,const_7135,var_7136,const_7137,call_7141,var_7140,uop_7144,call_7156,const_7153,var_7154,const_7155,call_7159,var_7158,])
func_7171 = relay.Function([var_7123,var_7124,var_7133,var_7134,var_7136,var_7140,var_7154,var_7158,], output)
mod['func_7171'] = func_7171
mod = relay.transform.InferType()(mod)
var_7172 = relay.var("var_7172", dtype = "int64", shape = (14, 5, 5))#candidate|7172|(14, 5, 5)|var|int64
var_7173 = relay.var("var_7173", dtype = "int64", shape = (14, 5, 5))#candidate|7173|(14, 5, 5)|var|int64
var_7174 = relay.var("var_7174", dtype = "float32", shape = (90, 2))#candidate|7174|(90, 2)|var|float32
var_7175 = relay.var("var_7175", dtype = "int64", shape = ())#candidate|7175|()|var|int64
var_7176 = relay.var("var_7176", dtype = "int32", shape = (390,))#candidate|7176|(390,)|var|int32
var_7177 = relay.var("var_7177", dtype = "float64", shape = (702,))#candidate|7177|(702,)|var|float64
var_7178 = relay.var("var_7178", dtype = "int16", shape = (1092,))#candidate|7178|(1092,)|var|int16
var_7179 = relay.var("var_7179", dtype = "float64", shape = (528,))#candidate|7179|(528,)|var|float64
output = func_7171(var_7172,var_7173,var_7174,var_7175,var_7176,var_7177,var_7178,var_7179,)
func_7180 = relay.Function([var_7172,var_7173,var_7174,var_7175,var_7176,var_7177,var_7178,var_7179,], output)
mutated_mod['func_7180'] = func_7180
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7456 = relay.var("var_7456", dtype = "int32", shape = (11, 10, 16))#candidate|7456|(11, 10, 16)|var|int32
var_7457 = relay.var("var_7457", dtype = "int32", shape = (11, 10, 16))#candidate|7457|(11, 10, 16)|var|int32
bop_7458 = relay.greater(var_7456.astype('bool'), relay.reshape(var_7457.astype('bool'), relay.shape_of(var_7456))) # shape=(11, 10, 16)
func_115_call = mod.get_global_var('func_115')
func_118_call = mutated_mod.get_global_var('func_118')
const_7473 = relay.const([[-1.011505,2.251583,7.630455,7.929889,0.015068,5.650598,-2.351197,0.605306,-6.255425,-4.131226,5.367482,-6.953660,7.427561,-4.694366,8.783808,4.777478,-8.316158,-6.472707,0.714662,0.383394,6.179564,-7.175554,-7.886123,-4.790000,9.603992,8.221280,-2.321116,0.929928,-5.202368,2.086810,-1.132252,3.363597,4.791933,-5.033586,2.964452,-6.271894,1.445557,-2.498863,-9.011369,-8.085109,3.400975,5.892935,3.012810,0.053076,-3.543873,-4.011431,-1.145724,0.969884,4.886148,-6.828274,-7.231135,-3.508097,9.706159,1.956549,1.470098,3.316114,5.609250,4.247477,6.036679,-1.203074,0.730914,-0.989310,-2.250318,-8.013375,-1.251296,-6.601515,3.336970,-7.724920,-3.714868,-0.461827,9.577273,-6.569829,-0.830547,-8.870994,8.759609,-2.877658,2.701672,-0.590582,-2.757528,2.686786,0.977560,4.971589,-8.801734,-8.356283,3.959534,6.655693,-0.414372,-3.520504,5.470364,1.898487,4.419377,2.764722,-3.035555,3.618282,-0.706783,7.477378,-3.189630,-5.369400,-4.733241,7.121191,-7.631840,4.872985,1.157791,0.271338,-8.194107,6.146750,-8.473941,-2.532612,-4.011106,-5.171652,-2.629109,-2.199544,-7.800326,-1.751036,4.470280,5.797182,-9.415302,1.186743,-5.868381,-3.241852,5.986047,-5.667020,-9.513753,-9.962623,-0.237000,-7.211676,2.659483,-0.920438,3.333866,-6.301258,-5.224512,-6.133493,-6.760602,-4.538977,7.131852,6.576526,-0.990649,-6.402432,-2.911270,8.916899,0.710479,-4.649872,1.557494,6.479841,0.905871,7.371068,3.126312,-8.588226,1.797663,-6.518205,9.993499,1.990452,5.641348,-9.259284,2.724895,8.786071,1.241923,8.417722,-9.573121,-2.360293,-1.841622,3.707607,2.589820,-6.288473,7.184725,7.369767,-3.072109,-9.855351,4.728388,-5.022978,9.359580,4.841453,6.317201,9.819890,1.717530,4.941362,6.840492,8.211566,-5.242883,-6.028843,-7.175286,-1.634273,-0.493721,4.731369,6.354604,-9.907417,9.670246,-9.095854,-8.887693,-2.527459,3.069652,-9.343686,-3.974901,6.138345,6.963745,-7.698259,-2.474621,-0.009424,-3.849029,-5.780082,6.689172,-9.212083,-1.398467,6.176649,-1.546121,1.969553,4.330216,-6.011370,5.606931,-1.137570,6.894242,5.786309,0.182606,6.326610,2.053572,-1.636819,-0.558774,4.379897,4.978331,-2.589600,-8.006250,2.983430,5.758672,9.437111,6.258059,6.473446,0.716229,-2.084135,-4.220355,-4.868395,7.584654,8.532027,3.466129,5.197824],[6.515997,-4.656496,5.049475,-2.148403,9.533125,3.094917,6.993897,-4.720977,8.865840,-0.475317,-4.073995,2.633015,0.248955,6.557371,0.856356,3.239570,-9.444199,-0.161587,1.931931,-7.797805,9.810809,1.472508,-1.235312,5.783873,0.225686,-0.966572,-3.398568,0.770645,-9.875836,-0.485393,5.863794,-9.687612,5.290083,2.496095,0.469590,6.690480,-1.239581,-7.078268,-9.062090,-9.833800,0.088567,2.831521,2.386583,6.516874,-3.114661,2.185829,0.597634,0.575643,4.290087,5.992579,8.329701,9.616556,9.756999,-0.877681,1.747181,9.888752,1.225335,-6.045492,-8.540843,-7.722529,8.923724,-7.006304,-5.076361,8.168635,9.866107,-7.741864,0.016942,-3.382437,5.381907,3.323768,9.908110,8.988140,8.099541,1.040800,4.959060,-3.492077,-1.113165,8.335767,2.258701,-0.451246,5.568454,8.796080,-5.646588,-9.495417,-5.537498,-5.243199,-0.920290,3.500776,0.972387,3.287601,-2.196669,5.640845,8.624341,7.281180,5.204803,5.697892,0.702507,8.420970,-1.022384,6.065595,3.370292,-6.032148,-2.877382,-6.938851,3.978409,-2.288018,3.400100,-8.507285,2.708515,9.555627,6.318336,3.033465,2.105592,-1.146466,-5.800028,6.277304,7.321650,-9.803618,9.592047,1.211408,-3.430376,-6.308575,5.042405,-9.123143,0.069402,2.172793,-2.359732,4.111277,2.727562,6.762724,9.437844,-5.920653,5.650989,-3.491212,8.086308,4.198899,-2.853566,5.028838,-0.446747,-2.064924,-1.282514,-4.375639,-2.507528,-4.895224,6.116726,-9.997927,-7.040722,7.073535,2.360540,-0.790226,5.952746,-2.967989,-1.245296,2.057582,-9.663330,-6.574644,3.890327,2.517453,-2.868561,4.440224,-9.789458,-6.615815,-9.021650,-7.654498,-2.044334,-7.937681,-3.100740,6.131981,6.039055,5.199380,-6.115343,-6.252703,-9.141478,1.481612,4.061899,-8.855896,-5.977907,9.486107,-3.320901,-9.632638,-5.810267,-0.228379,-8.252973,8.725834,-5.027014,5.682193,-6.891297,-9.176069,2.785482,5.367417,-7.467647,-7.521403,8.174095,-0.732256,9.599346,-8.026005,0.341981,-8.435176,-1.394523,9.224731,-6.592650,6.644095,-4.482796,0.849221,7.396628,1.337091,-4.938534,8.554415,7.559633,9.487335,-7.482008,-7.857857,-5.742833,1.504807,6.101566,4.292209,8.131676,-3.199918,-7.303189,-2.144723,5.386337,-6.173292,7.340764,4.680921,1.694406,-8.528972,-8.225955,4.552893,3.824976,9.629252,-8.823767,0.657664,1.939643,8.607614],[6.614242,9.875666,6.955591,1.203181,3.867261,4.928447,6.135889,9.923242,3.304195,0.968011,1.697422,4.721049,0.112741,-5.998603,-5.203028,7.251917,4.204459,-8.099432,-0.048669,2.025218,-8.647818,-8.866526,-3.644791,2.267075,-8.081142,9.390476,8.445897,1.819351,1.385140,6.612100,-5.899015,5.010155,-2.986342,-1.368376,3.182938,-4.751157,6.223317,-0.529234,-8.969496,8.065395,-6.824799,2.462652,4.736597,-8.721660,-5.626786,-6.409419,-1.385481,-8.674309,-7.143927,9.496970,-4.793399,1.731950,-8.192674,-4.623390,-1.859585,-5.158100,-7.945575,-5.973149,-6.312557,-1.191597,9.542586,0.033965,-9.354584,-7.290040,9.419144,9.175557,3.377223,9.744273,-6.516313,4.083687,3.422870,0.755380,8.950471,2.117701,-2.165259,-1.707610,-3.911139,-4.854563,0.728413,5.531296,-5.689762,-3.646232,-1.348513,-9.229540,9.689690,8.525630,2.572736,-2.556922,-0.768307,-3.777569,5.766212,-5.488881,2.011788,7.617585,7.851169,6.892492,8.982714,-1.616466,0.610747,-3.143147,-1.039214,5.876032,-7.507472,-2.185199,5.329630,1.227894,6.290399,-1.641348,-3.755971,5.402306,9.487972,-5.918794,-6.080211,-0.719932,4.565147,4.149390,-8.101428,2.570638,-4.979995,4.105209,-6.472559,3.295915,0.640256,-5.287359,4.472466,4.356737,-2.948841,4.316986,-4.124031,-2.728373,-1.103066,0.983330,-6.680483,9.145838,-6.313891,-2.625247,9.086395,-5.533872,-9.742951,7.083682,-9.241640,-8.133339,-2.414723,-1.603125,7.433111,-4.024320,-7.767648,-7.091377,-2.872359,5.730191,-8.630200,2.241103,8.424884,-1.047568,8.373453,3.713187,8.668331,-3.325790,7.934627,-5.809891,-5.858407,-2.622621,2.627935,5.364982,-5.546472,-6.539586,9.183849,4.446023,-0.188067,-7.652874,3.631932,6.436070,6.849751,-7.110273,-8.383506,1.238082,5.339328,8.739324,-9.241771,-1.155194,-0.209892,9.094642,-7.726604,-1.695350,5.940336,-8.183375,6.070232,3.463838,-7.725420,8.872347,-9.657775,8.343829,6.852718,-4.507877,0.059586,-4.509462,-0.680423,7.272843,-7.636484,9.825674,-5.861278,-4.512196,6.288781,-8.336056,2.432778,5.289980,-8.930742,5.979450,0.966596,2.954231,-7.023209,-5.873254,-0.762097,-8.937564,-3.634561,-5.165762,9.573021,-8.399559,-2.176766,-1.362277,-3.199138,5.176241,-2.890700,-5.104334,0.935528,8.969398,-1.606460,-1.081681,9.230744,0.525157,-8.926356,2.634786,0.652766,-0.236728]], dtype = "float64")#candidate|7473|(3, 234)|const|float64
call_7472 = relay.TupleGetItem(func_115_call(relay.reshape(const_7473.astype('float64'), [6, 9, 13])), 0)
call_7474 = relay.TupleGetItem(func_118_call(relay.reshape(const_7473.astype('float64'), [6, 9, 13])), 0)
uop_7480 = relay.acos(var_7457.astype('float64')) # shape=(11, 10, 16)
uop_7484 = relay.tan(var_7456.astype('float64')) # shape=(11, 10, 16)
bop_7489 = relay.left_shift(call_7472.astype('uint64'), relay.reshape(const_7473.astype('uint64'), relay.shape_of(call_7472))) # shape=(6, 9, 13)
bop_7492 = relay.left_shift(call_7474.astype('uint64'), relay.reshape(const_7473.astype('uint64'), relay.shape_of(call_7474))) # shape=(6, 9, 13)
func_2512_call = mod.get_global_var('func_2512')
func_2518_call = mutated_mod.get_global_var('func_2518')
var_7524 = relay.var("var_7524", dtype = "int8", shape = (336, 1))#candidate|7524|(336, 1)|var|int8
const_7525 = relay.const(7, dtype = "int32")#candidate|7525|()|const|int32
var_7526 = relay.var("var_7526", dtype = "int32", shape = (117,))#candidate|7526|(117,)|var|int32
call_7523 = relay.TupleGetItem(func_2512_call(relay.reshape(var_7524.astype('int8'), [12, 14, 2]), relay.reshape(var_7524.astype('int8'), [12, 14, 2]), relay.reshape(const_7525.astype('int32'), []), relay.reshape(var_7526.astype('int32'), [117,]), ), 2)
call_7527 = relay.TupleGetItem(func_2518_call(relay.reshape(var_7524.astype('int8'), [12, 14, 2]), relay.reshape(var_7524.astype('int8'), [12, 14, 2]), relay.reshape(const_7525.astype('int32'), []), relay.reshape(var_7526.astype('int32'), [117,]), ), 2)
func_1891_call = mod.get_global_var('func_1891')
func_1896_call = mutated_mod.get_global_var('func_1896')
var_7529 = relay.var("var_7529", dtype = "bool", shape = (144,))#candidate|7529|(144,)|var|bool
call_7528 = relay.TupleGetItem(func_1891_call(relay.reshape(var_7529.astype('bool'), [4, 12, 3]), relay.reshape(var_7529.astype('bool'), [4, 12, 3]), relay.reshape(call_7523.astype('int32'), []), relay.reshape(var_7526.astype('int32'), [117,]), ), 3)
call_7530 = relay.TupleGetItem(func_1896_call(relay.reshape(var_7529.astype('bool'), [4, 12, 3]), relay.reshape(var_7529.astype('bool'), [4, 12, 3]), relay.reshape(call_7523.astype('int32'), []), relay.reshape(var_7526.astype('int32'), [117,]), ), 3)
uop_7531 = relay.atan(var_7526.astype('float64')) # shape=(117,)
bop_7534 = relay.greater_equal(uop_7480.astype('bool'), relay.reshape(uop_7484.astype('bool'), relay.shape_of(uop_7480))) # shape=(11, 10, 16)
bop_7542 = relay.logical_and(var_7524.astype('bool'), call_7523.astype('bool')) # shape=(336, 1)
bop_7545 = relay.logical_and(var_7524.astype('bool'), call_7527.astype('bool')) # shape=(336, 1)
func_6606_call = mod.get_global_var('func_6606')
func_6614_call = mutated_mod.get_global_var('func_6614')
const_7559 = relay.const([4.623571,8.999675,-4.970469,-9.513812,1.046050,-6.971131,-0.347570,8.037280,5.363138,9.116912,-7.143532,-7.296709], dtype = "float32")#candidate|7559|(12,)|const|float32
const_7560 = relay.const([4.387224,-9.522964,-4.945062,-9.711951,-3.429357,-1.185526,-2.316074,-5.704975,-4.113098,-6.820585,-7.535896,3.414262,-6.727318,-8.158019,-2.697676,-8.733460,-5.957678,-1.615385,7.040469,9.645583,3.075421,-0.039856,-7.301257,2.353958,-1.085565,-6.366171,-3.031701,3.034993,2.762836,-6.132820,-0.850309,-6.370243,2.938557,4.461359,0.736409,-0.709608,-8.210512,-8.245202,-8.455474,9.761548,7.842902,3.192352,-3.803531,-5.126708,-5.929021,5.421198,-5.190597,6.499548,-8.161198,-0.048455,4.781182,-8.021798,-5.193854,-1.639445,-6.686787,9.010514,3.996847,-9.359928,-8.067195,1.406248,7.018310,6.414258,-7.623143,-5.761612,3.280246,-8.151156,5.337390,1.865891,2.413949,-6.889655,2.834939,7.452873,-0.970667,-1.236716,3.845212,0.765732,-7.952344,-8.474303,4.852807,-1.524584,7.171072,4.850034,2.729485,-6.697687,-0.917493,9.866425,9.401424,-2.507619,-0.543462,-9.805634,8.555252,-8.193334,-0.424845,-5.911484,4.783893,-9.298841,-4.594487,-4.365071,-9.793459,-8.097958,8.229703,9.641589,2.315032,9.779488,-5.020985,3.728137,8.532992,-5.610245,-1.606667,-9.331374,1.097626,-0.193535,-1.059484,5.903587,-6.545568,-9.448602,1.217181,-9.236252,2.322965,-7.798167,1.291196,2.032292,-6.516527,-9.020623,9.004649,-3.313088,2.856748,-1.396252,1.847454,6.113422,3.420127,-7.415158,8.294553,7.649169,-8.331260,-6.281430,1.347529,-8.230100,0.172976,-4.594689,2.474466,7.763584,-1.445684,4.907000,-1.326219,3.680721,-0.758700,-9.602236,-2.805161,-5.958957,-8.366773,-5.643775,7.271125,2.621387,8.590940,9.771883,-9.688331,2.810980,-9.031735,8.766533,9.912304,-8.129853,-0.150004,4.319928,0.482376,8.574414,0.082813,1.000677,-2.626948,4.953713,1.593082,7.598673,-5.507063,-0.179813,8.680520,2.013372,-6.544023,-1.648899,-7.189896,4.611813], dtype = "float32")#candidate|7560|(180,)|const|float32
const_7561 = relay.const([5,4,-5,2,-3,2,-6,-1,-7,6,3,9,-2,-2,3,9,-3,6,8,-9,-2,4,3,-1,-6,-10,3,-6,4,-4], dtype = "int32")#candidate|7561|(30,)|const|int32
const_7562 = relay.const([[-6],[-2],[-7],[-5],[-2],[-9],[9],[-10],[-2],[7],[2],[6],[3],[-10],[-5],[-6],[5],[6],[-7],[-6],[-5],[9],[5],[-2],[2],[7],[-9],[9],[8],[3],[-6],[-6],[9],[2],[4],[6],[-4],[-3],[8],[6],[-7],[3],[-5],[10],[-2],[1],[-5],[6],[9],[-9],[-5],[-2],[4],[10],[3],[2],[-10],[-9],[-5],[-10],[-3],[-4],[8],[-10],[7],[9],[6],[5],[-9],[2],[2],[5],[6],[6],[-3],[10],[-7],[-4],[-4],[1],[-6],[3],[2],[-4],[2],[6],[-7],[-5],[4],[-8],[-8],[-3],[-1],[-10],[-3],[-6],[9],[-3],[-7],[5],[-2],[-5],[-1],[5],[2],[2],[-10],[-4],[4],[-7],[3],[8],[-5],[7],[9],[-3],[-3],[9],[9],[-7],[5],[-10],[4],[9],[-6],[-7],[-2],[-2],[-7],[8],[1],[6],[-2],[-7],[-8],[1],[-6],[2],[4],[10],[-8],[8],[-3],[6],[9],[5],[-7],[-5],[-5],[-1],[7],[-8],[-4],[-4],[2],[10],[-10],[-1],[-1],[4],[-2],[2],[-1],[2],[9],[1],[-7],[10],[-9],[-10],[8],[-2],[-8],[-3],[9],[9],[-8],[5],[-7],[-7],[10],[4],[-7],[9],[-7],[-9],[-10],[-5],[-4],[-9],[8],[8],[-10],[7],[-10],[4],[4],[-7],[2],[-9],[6],[-6],[-10],[5],[9],[-7],[-4],[5],[8],[1],[-10],[-9],[-3],[-5],[4],[-6],[3],[7],[2],[5],[7],[-2],[-9],[-3],[1],[-6],[-1],[3],[-1],[8],[4],[6],[-7],[9],[4],[-3],[-8],[-2],[-2],[-5],[-10],[-3],[-5],[-4],[-7],[-2],[8],[6],[-8],[5],[1],[-4],[2],[5],[2],[-6],[2],[-5],[8],[-3],[-4],[7],[2],[9],[10],[-3],[3],[9],[5],[1],[5],[-2],[-9],[-2],[-8],[5],[2],[6],[-5],[4],[-1],[6],[4],[9],[-1],[-9],[-10],[-3],[-9],[7],[2],[1],[-1],[-5],[-2],[-2],[6],[4],[5],[-1],[6],[3],[2],[2],[-1],[-1],[10],[-6],[-9],[-9],[-2],[3],[-1],[9],[-2],[10],[-2],[-1],[-7],[10],[-3],[-2],[4],[-6],[-10],[3],[8],[-1],[-1],[-2],[-3],[-1],[7],[3],[-7],[3],[-5],[5],[-2],[-10],[7],[-4],[9],[3],[8],[-5],[10],[-9],[-7],[1],[5],[-4],[-9],[-10],[9],[3],[5],[-3],[5],[-4],[-3],[-3],[4],[2],[-4],[5],[-8],[-2],[5],[8],[-3],[-4],[-10],[-1],[-2],[5],[6],[8],[2],[1],[-4],[-7],[-3],[-9],[-10],[6],[10],[2],[-4],[-5]], dtype = "int32")#candidate|7562|(390, 1)|const|int32
const_7563 = relay.const([-2,10,7,2,9,-4,8,5,10,6,1,-4,8,-7,4,2,5,8,7,-9,5,1,3,-1,-3,8,5,-6,-10,5,-3,4,3,9,9,4,-3,7,5,8,-7,2,8,6,-3,4,9,3,9,2,9,-1,-3,6,-6,-5,-1,-4,7,9,-10,7,10,-1,-1,6,-9,10,-3,1,3,2,-5,4,-6,-5,5,-8], dtype = "int16")#candidate|7563|(78,)|const|int16
call_7558 = relay.TupleGetItem(func_6606_call(relay.reshape(const_7559.astype('float32'), [1, 1, 12]), relay.reshape(bop_7542.astype('float32'), [336,]), relay.reshape(const_7560.astype('float32'), [180,]), relay.reshape(const_7525.astype('int64'), []), relay.reshape(const_7561.astype('int32'), [30,]), relay.reshape(const_7562.astype('int32'), [390,]), relay.reshape(const_7563.astype('int16'), [78,]), ), 6)
call_7564 = relay.TupleGetItem(func_6614_call(relay.reshape(const_7559.astype('float32'), [1, 1, 12]), relay.reshape(bop_7542.astype('float32'), [336,]), relay.reshape(const_7560.astype('float32'), [180,]), relay.reshape(const_7525.astype('int64'), []), relay.reshape(const_7561.astype('int32'), [30,]), relay.reshape(const_7562.astype('int32'), [390,]), relay.reshape(const_7563.astype('int16'), [78,]), ), 6)
bop_7567 = relay.bitwise_or(uop_7531.astype('uint16'), const_7525.astype('uint16')) # shape=(117,)
output = relay.Tuple([bop_7458,bop_7489,call_7528,var_7529,bop_7534,bop_7542,call_7558,const_7559,const_7560,const_7561,const_7562,const_7563,bop_7567,])
output2 = relay.Tuple([bop_7458,bop_7492,call_7530,var_7529,bop_7534,bop_7545,call_7564,const_7559,const_7560,const_7561,const_7562,const_7563,bop_7567,])
func_7570 = relay.Function([var_7456,var_7457,var_7524,var_7526,var_7529,], output)
mod['func_7570'] = func_7570
mod = relay.transform.InferType()(mod)
var_7571 = relay.var("var_7571", dtype = "int32", shape = (11, 10, 16))#candidate|7571|(11, 10, 16)|var|int32
var_7572 = relay.var("var_7572", dtype = "int32", shape = (11, 10, 16))#candidate|7572|(11, 10, 16)|var|int32
var_7573 = relay.var("var_7573", dtype = "int8", shape = (336, 1))#candidate|7573|(336, 1)|var|int8
var_7574 = relay.var("var_7574", dtype = "int32", shape = (117,))#candidate|7574|(117,)|var|int32
var_7575 = relay.var("var_7575", dtype = "bool", shape = (144,))#candidate|7575|(144,)|var|bool
output = func_7570(var_7571,var_7572,var_7573,var_7574,var_7575,)
func_7576 = relay.Function([var_7571,var_7572,var_7573,var_7574,var_7575,], output)
mutated_mod['func_7576'] = func_7576
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7641 = relay.const([[[3.992254,7.942079,-1.237576,7.762728],[0.281403,2.753720,2.741550,-3.938404],[-5.988468,5.281455,1.560284,9.693420],[-6.569611,-2.397858,6.631353,2.634439],[7.384503,8.204617,-1.768962,-2.653566]],[[8.858758,3.154276,1.157876,6.285307],[0.749146,-8.953900,-9.239428,5.560915],[-1.798929,9.869272,-7.455014,4.023737],[4.071091,9.363107,6.782551,-3.274353],[8.184703,5.349926,6.807663,0.202969]],[[0.985919,1.959368,8.249147,-7.869272],[-2.200562,3.938409,8.324987,-3.048143],[7.286992,-0.689619,2.428807,6.914313],[-4.947083,-9.965014,6.370386,-0.985621],[6.785759,-2.178529,7.155759,-7.729425]],[[9.578857,-3.556950,-9.941720,3.086479],[-1.488892,-7.414202,-4.238776,6.475957],[-5.051383,-9.875298,0.763985,7.654033],[-0.673681,4.249251,-1.470161,3.879895],[2.030352,-1.914587,3.775364,4.731202]],[[9.590482,6.100587,-1.302875,-8.742420],[-7.278438,-3.612293,-2.502153,-4.215397],[-5.601287,-5.506396,-7.335237,-6.707849],[8.491080,4.387038,-1.904099,-7.553711],[5.876676,-9.246918,-8.405168,-2.254709]],[[8.142948,-1.120921,-1.783198,1.854256],[-7.387642,-3.118274,1.108199,-7.711149],[3.082795,7.087364,7.328047,-1.385545],[-9.482438,-9.681383,5.704600,0.560464],[8.987781,-2.320021,2.630664,-1.175797]],[[8.007412,-7.135350,7.722860,5.399830],[-6.846357,9.771259,8.720988,-1.521318],[-5.445123,-9.978124,-3.156377,-0.707689],[-4.904326,7.483864,-7.479203,4.514829],[-2.823991,7.571115,6.835606,0.002899]],[[1.948499,6.763965,-3.798965,-9.936596],[-7.772350,-4.365669,7.212586,-8.679960],[-1.109461,2.169439,-3.598611,-3.406976],[-4.662738,-4.352519,6.072454,4.861996],[-0.460480,2.346265,5.344687,6.690243]],[[-6.365295,-2.969624,1.164465,2.979852],[-3.020712,-7.114381,-1.425420,-0.048104],[-5.137998,-9.283644,-7.442141,5.003584],[-2.772983,9.607409,-5.060967,0.441898],[-4.692796,-1.907244,-5.459815,0.635231]],[[-0.293153,9.673177,1.366820,7.844587],[5.699148,0.272283,-7.007747,-3.935729],[5.278196,-8.938958,3.869815,-6.462549],[9.003340,7.243966,9.218013,-0.685497],[-6.940292,-9.057570,5.723093,-3.890594]],[[1.351070,-1.984196,-0.907028,-6.760074],[-6.387960,3.158397,-4.864328,-4.789605],[2.591671,5.598168,-7.075206,-9.589912],[-7.883387,-4.758385,9.342435,-9.459686],[-3.755123,-2.083033,2.489588,-9.307196]]], dtype = "float64")#candidate|7641|(11, 5, 4)|const|float64
const_7642 = relay.const([[[1.702055,-5.130798,8.791864,9.202793],[-6.029082,-9.626033,0.157381,8.241156],[9.254123,-9.423395,5.978757,-5.784085],[4.771678,-0.830635,-0.199874,6.323868],[6.227047,1.220477,6.946642,7.598218]],[[-9.799423,3.267396,-8.016611,-3.324011],[7.661842,9.344226,2.062969,-8.712740],[-5.487851,7.982595,-0.210503,-1.065788],[-3.278940,-4.024882,9.571786,3.477253],[5.695307,1.486591,5.146810,6.018780]],[[-7.353389,4.327545,6.511881,-1.005589],[-0.367540,-5.386245,-8.137801,-5.860623],[-0.536911,9.406075,-0.569834,6.982174],[0.027473,-7.534851,-7.625047,0.282680],[-4.278903,1.157009,-0.664087,3.007057]],[[3.577957,5.038420,4.925905,-2.403836],[-1.769101,4.654884,-2.674214,-2.549661],[7.890678,-2.422232,8.350576,-3.705692],[-1.486378,9.861853,8.844118,8.033549],[-9.870799,-0.788052,-5.909516,1.136311]],[[-0.700795,4.908970,8.417426,-8.582988],[-7.155336,6.546126,-6.501950,-6.181053],[4.441809,9.913465,-8.640347,2.293084],[2.082403,-5.138607,-1.531180,-0.676609],[-1.463164,0.404372,-4.509256,-7.569257]],[[-3.159327,-5.409107,6.706727,4.214790],[-4.842133,0.393923,6.816037,5.069347],[8.594401,-3.686585,6.702703,-5.532487],[-1.694892,3.517105,-2.258861,-2.035301],[2.345917,4.848395,0.192349,3.247548]],[[-1.565328,-1.480484,0.094379,-1.557820],[-7.947789,-8.963874,-9.463207,1.309339],[-6.429185,5.612248,8.171815,9.429351],[-1.129571,7.810246,2.970848,7.319315],[-4.668118,6.807339,3.271158,-6.197423]],[[-6.346603,4.932511,9.575005,-9.581464],[7.123550,-7.241544,9.717768,-5.503797],[5.560806,0.090831,-7.431857,-2.023042],[-2.996086,6.550721,9.272173,2.052770],[-8.476856,-5.916723,-1.771000,-1.993382]],[[-8.994251,-6.952162,-6.003998,7.962296],[-0.031219,1.438311,3.548638,8.283796],[5.406561,4.705309,-3.800747,1.613420],[6.869633,8.028643,-0.692102,-0.255501],[-2.123287,-4.340144,0.864359,-8.741025]],[[-2.268793,-4.053478,4.056260,4.268480],[-7.368180,-1.884690,-5.869037,-0.875778],[6.503255,8.839792,6.187242,5.984242],[-6.163652,-5.469996,6.682604,6.267024],[-8.748191,-4.685114,-1.895241,9.807116]],[[-8.102922,9.821920,1.621772,4.878758],[5.259077,-6.480684,-0.467068,7.949790],[1.927679,-2.057749,-4.963878,-8.703510],[4.563045,2.466612,-7.379458,0.894300],[-5.536529,1.818888,-1.420611,-3.423808]]], dtype = "float64")#candidate|7642|(11, 5, 4)|const|float64
bop_7643 = relay.floor_divide(const_7641.astype('float64'), relay.reshape(const_7642.astype('float64'), relay.shape_of(const_7641))) # shape=(11, 5, 4)
output = relay.Tuple([bop_7643,])
output2 = relay.Tuple([bop_7643,])
func_7647 = relay.Function([], output)
mod['func_7647'] = func_7647
mod = relay.transform.InferType()(mod)
mutated_mod['func_7647'] = func_7647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7647_call = mutated_mod.get_global_var('func_7647')
call_7648 = func_7647_call()
output = call_7648
func_7649 = relay.Function([], output)
mutated_mod['func_7649'] = func_7649
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7666 = relay.var("var_7666", dtype = "float32", shape = (14, 4, 11))#candidate|7666|(14, 4, 11)|var|float32
uop_7667 = relay.asin(var_7666.astype('float32')) # shape=(14, 4, 11)
uop_7669 = relay.rsqrt(uop_7667.astype('float64')) # shape=(14, 4, 11)
output = uop_7669
output2 = uop_7669
func_7675 = relay.Function([var_7666,], output)
mod['func_7675'] = func_7675
mod = relay.transform.InferType()(mod)
mutated_mod['func_7675'] = func_7675
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7676 = relay.var("var_7676", dtype = "float32", shape = (14, 4, 11))#candidate|7676|(14, 4, 11)|var|float32
func_7675_call = mutated_mod.get_global_var('func_7675')
call_7677 = func_7675_call(var_7676)
output = call_7677
func_7678 = relay.Function([var_7676], output)
mutated_mod['func_7678'] = func_7678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7647_call = mod.get_global_var('func_7647')
func_7649_call = mutated_mod.get_global_var('func_7649')
call_7734 = relay.TupleGetItem(func_7647_call(), 0)
call_7735 = relay.TupleGetItem(func_7649_call(), 0)
func_2907_call = mod.get_global_var('func_2907')
func_2909_call = mutated_mod.get_global_var('func_2909')
var_7743 = relay.var("var_7743", dtype = "bool", shape = (400,))#candidate|7743|(400,)|var|bool
call_7742 = relay.TupleGetItem(func_2907_call(relay.reshape(var_7743.astype('bool'), [10, 5, 8])), 1)
call_7744 = relay.TupleGetItem(func_2909_call(relay.reshape(var_7743.astype('bool'), [10, 5, 8])), 1)
func_3884_call = mod.get_global_var('func_3884')
func_3887_call = mutated_mod.get_global_var('func_3887')
const_7751 = relay.const([9,4,8,3,9,-4,-1,-8,10,8,-10,7,-9,3,6,-6,5,-9,7,-2,1,5,-2,-9,-4,8,-1,-3,5,8,7,-6,-4,-5,6,9,7,1,6,-2,9,6,7,10,7,-5,2,7,6,-8,1,-2,-1,10,3,10,1,1,7,-10,-9,-9,6,-6,-7,-5,-4,-9,-9,2,8,-3,-8,-7,-6,-9,3,6,3,-10,-8,1,1,7,-8,2,-3,-6,-3,-5,-1,-4,4,4,3,10,-10,-5,2,10], dtype = "int16")#candidate|7751|(100,)|const|int16
call_7750 = func_3884_call(relay.reshape(const_7751.astype('int16'), [10, 10, 1]))
call_7752 = func_3884_call(relay.reshape(const_7751.astype('int16'), [10, 10, 1]))
var_7753 = relay.var("var_7753", dtype = "bool", shape = (400,))#candidate|7753|(400,)|var|bool
bop_7754 = relay.power(var_7743.astype('float64'), relay.reshape(var_7753.astype('float64'), relay.shape_of(var_7743))) # shape=(400,)
output = relay.Tuple([call_7734,call_7742,call_7750,const_7751,bop_7754,])
output2 = relay.Tuple([call_7735,call_7744,call_7752,const_7751,bop_7754,])
func_7762 = relay.Function([var_7743,var_7753,], output)
mod['func_7762'] = func_7762
mod = relay.transform.InferType()(mod)
var_7763 = relay.var("var_7763", dtype = "bool", shape = (400,))#candidate|7763|(400,)|var|bool
var_7764 = relay.var("var_7764", dtype = "bool", shape = (400,))#candidate|7764|(400,)|var|bool
output = func_7762(var_7763,var_7764,)
func_7765 = relay.Function([var_7763,var_7764,], output)
mutated_mod['func_7765'] = func_7765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7647_call = mod.get_global_var('func_7647')
func_7649_call = mutated_mod.get_global_var('func_7649')
call_7771 = relay.TupleGetItem(func_7647_call(), 0)
call_7772 = relay.TupleGetItem(func_7649_call(), 0)
func_4924_call = mod.get_global_var('func_4924')
func_4928_call = mutated_mod.get_global_var('func_4928')
var_7775 = relay.var("var_7775", dtype = "float64", shape = ())#candidate|7775|()|var|float64
var_7776 = relay.var("var_7776", dtype = "float64", shape = (13, 1))#candidate|7776|(13, 1)|var|float64
call_7774 = relay.TupleGetItem(func_4924_call(relay.reshape(var_7775.astype('float64'), []), relay.reshape(var_7776.astype('float64'), [1, 13]), ), 0)
call_7777 = relay.TupleGetItem(func_4928_call(relay.reshape(var_7775.astype('float64'), []), relay.reshape(var_7776.astype('float64'), [1, 13]), ), 0)
output = relay.Tuple([call_7771,call_7774,var_7775,var_7776,])
output2 = relay.Tuple([call_7772,call_7777,var_7775,var_7776,])
func_7782 = relay.Function([var_7775,var_7776,], output)
mod['func_7782'] = func_7782
mod = relay.transform.InferType()(mod)
mutated_mod['func_7782'] = func_7782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7782_call = mutated_mod.get_global_var('func_7782')
var_7784 = relay.var("var_7784", dtype = "float64", shape = ())#candidate|7784|()|var|float64
var_7785 = relay.var("var_7785", dtype = "float64", shape = (13, 1))#candidate|7785|(13, 1)|var|float64
call_7783 = func_7782_call(var_7784,var_7785,)
output = call_7783
func_7786 = relay.Function([var_7784,var_7785,], output)
mutated_mod['func_7786'] = func_7786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7647_call = mod.get_global_var('func_7647')
func_7649_call = mutated_mod.get_global_var('func_7649')
call_7790 = relay.TupleGetItem(func_7647_call(), 0)
call_7791 = relay.TupleGetItem(func_7649_call(), 0)
output = relay.Tuple([call_7790,])
output2 = relay.Tuple([call_7791,])
func_7834 = relay.Function([], output)
mod['func_7834'] = func_7834
mod = relay.transform.InferType()(mod)
output = func_7834()
func_7835 = relay.Function([], output)
mutated_mod['func_7835'] = func_7835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7647_call = mod.get_global_var('func_7647')
func_7649_call = mutated_mod.get_global_var('func_7649')
call_7869 = relay.TupleGetItem(func_7647_call(), 0)
call_7870 = relay.TupleGetItem(func_7649_call(), 0)
output = relay.Tuple([call_7869,])
output2 = relay.Tuple([call_7870,])
func_7888 = relay.Function([], output)
mod['func_7888'] = func_7888
mod = relay.transform.InferType()(mod)
mutated_mod['func_7888'] = func_7888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7888_call = mutated_mod.get_global_var('func_7888')
call_7889 = func_7888_call()
output = call_7889
func_7890 = relay.Function([], output)
mutated_mod['func_7890'] = func_7890
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7891 = relay.var("var_7891", dtype = "float64", shape = (16, 12, 11))#candidate|7891|(16, 12, 11)|var|float64
uop_7892 = relay.exp(var_7891.astype('float64')) # shape=(16, 12, 11)
uop_7901 = relay.sinh(uop_7892.astype('float32')) # shape=(16, 12, 11)
func_4243_call = mod.get_global_var('func_4243')
func_4249_call = mutated_mod.get_global_var('func_4249')
var_7904 = relay.var("var_7904", dtype = "float32", shape = (180,))#candidate|7904|(180,)|var|float32
const_7905 = relay.const([[-6.484970,6.777871,9.620235,-3.678141,-8.820088,-7.326724,-0.924182,-6.720107,-9.697677,-0.109409,-4.873173,-6.645359,2.272705,-5.508929,-0.482251,-5.202829,-3.392072,-7.153201,9.751069,4.581546,1.734725,7.686213,5.447056,-6.412940,8.876523,5.607351,6.007779,-8.652589,2.660744,-7.585768,8.360824,7.499871,8.507951,1.692353,-2.266390,-0.691255,5.417686,9.540394,-0.736775,-4.135239,-3.851142,3.241260],[-9.230084,-4.751906,-2.500657,5.013473,6.969699,4.650161,-6.258713,-8.636802,5.290320,3.803565,-7.441364,-8.485124,-3.542094,2.145570,-1.263309,-9.555424,-8.174178,4.605827,-1.091066,4.304035,4.128039,-4.181282,2.754941,-7.409962,4.099168,2.622512,-1.165147,-2.196990,7.196043,2.035434,-4.007237,-8.046216,-6.541065,2.501099,-7.519365,-1.715538,9.837562,-8.846900,0.917065,-2.023020,-8.454975,7.051066],[8.484324,8.625421,2.469019,-3.715115,-7.469932,-4.476502,-4.039496,2.188312,-9.935216,-8.003219,-5.921828,7.996827,8.996228,5.805116,1.789082,-7.628424,-9.810297,2.125400,-5.980718,-8.055504,-8.791465,8.943642,-5.772707,-9.532855,7.726527,9.231743,5.326559,5.089165,-4.007472,-9.004941,0.732277,-3.450805,-1.470401,6.915190,7.040651,9.163691,4.573510,5.695879,-0.185976,-8.989157,-1.218807,6.010897],[-4.504623,5.363800,9.503444,9.962435,-6.563342,2.188900,2.764908,-2.983291,-2.631344,0.772695,-1.058280,7.111719,-1.674525,-5.643041,7.938228,-4.044818,7.737347,-8.991458,6.095496,0.510711,5.667221,-4.682830,-1.528365,-2.952013,-1.438533,-6.227820,-6.996891,8.461210,7.467665,9.490212,-2.926291,3.816768,2.874213,-2.072357,5.062272,6.486671,-0.536585,1.333062,-4.347874,2.805272,8.843554,5.588902],[-1.834746,-7.646322,9.104762,-8.963320,2.118422,2.024975,-4.318361,6.914390,9.422817,-8.857796,-2.315640,-4.856847,6.360747,-5.461700,5.707823,-6.582538,-5.187502,-7.647419,2.138986,2.738307,-9.100311,5.857254,5.466214,-1.370939,8.380536,-2.847024,-2.613790,-5.742220,1.405184,5.655206,9.623948,-7.837414,-1.662204,9.288904,7.518254,9.273300,0.320990,-7.697993,5.339199,0.254418,-9.483525,4.204387],[6.177634,-7.538030,-3.145099,2.627618,-6.338711,4.239595,-2.647360,-7.125197,-1.012979,8.276134,-7.282412,-8.699262,-5.255339,9.525765,8.940080,-0.242381,-0.661989,8.010971,-5.425754,-9.983507,-1.300903,0.287845,-3.037339,9.596342,8.968538,-8.394761,-7.045466,-6.344219,4.929389,1.614602,-4.682926,6.339358,6.468357,1.515802,1.615647,-0.624601,5.656210,2.500479,2.596818,-7.499069,6.084186,-4.240138],[6.287627,7.614006,-5.108221,-1.612752,-5.019454,-0.688586,-7.955135,9.312910,0.755885,-9.744588,2.330155,8.306477,-2.710150,-9.408426,-5.538070,8.369174,0.840736,-7.770513,-1.120686,-6.830643,-8.219673,-9.861747,-5.502540,0.878226,5.740158,-3.344293,8.082265,9.503078,-7.729855,0.803452,-0.378492,-7.639086,5.782547,-6.162550,1.931798,-3.353095,7.475117,5.446174,-7.440293,2.578363,-2.699966,7.051177],[5.145966,0.367186,-0.004363,1.530731,9.960282,-8.546396,-2.827575,-1.443708,1.696173,-5.452973,3.863988,-3.001675,-2.026296,9.799762,3.717554,-0.907621,1.242446,-1.406985,-3.227992,4.405523,-8.431388,6.938302,-1.943521,-6.468043,-7.957484,-8.541711,-9.887001,-7.017270,-3.730110,1.138313,-4.685612,1.310878,8.254881,2.125554,0.174782,-4.420291,-4.495098,-8.161183,4.953198,-7.132306,0.631377,-6.235464]], dtype = "float32")#candidate|7905|(8, 42)|const|float32
const_7906 = relay.const(-6, dtype = "int64")#candidate|7906|()|const|int64
const_7907 = relay.const([1,5,10,8,2,9,2,-4,-6,10,-3,-9,-6,-6,10,-8,-1,-2,6,-6,-1,-8,-3,-10,9,-4,-6,-3,4,9,-7,6,10,8,5,2,-7,8,5,10,10,8,4,10,-1,3,-4,5,-6,-9,6,-8,-4,-4,6,2,-7,2,4,-9,-9,-2,-1,6,-1,-8,-6,2,5,-8,-10,-7,-3,-8,10,-9,-2,-3,-9,2,-6,6,9,2,4,4,-2,-10,-9,9,10,8,8,-4,-2,6,-7,10,10,1,-5,7,6,-10,10,6,-7,1,-8,2,-3,8,1,-7,3,5,3,-3,3,-5,1,2,-6,3,8,-3,-6,-3,10,-9,8,-9,8,-9,5,4,5,-6,-9,-4,8,7,10,-10,10,3,5,-8,-6,-6,2,1,-7,10,-7,10,4,9,9,-4,1,6,9,-1,-2,-8,-8,-4,5,9,-8,7,-10,4,8,-8,-5,-4,-10,-1,-3,-9,-5,6,-4,-4,-7,4,9,-7,-6,-5,1,5,-6,6,-5,-10,7,-2], dtype = "int64")#candidate|7907|(200,)|const|int64
call_7903 = relay.TupleGetItem(func_4243_call(relay.reshape(var_7904.astype('float32'), [9, 5, 4]), relay.reshape(const_7905.astype('float32'), [336,]), relay.reshape(const_7906.astype('int64'), []), relay.reshape(const_7907.astype('int64'), [200,]), ), 2)
call_7908 = relay.TupleGetItem(func_4249_call(relay.reshape(var_7904.astype('float32'), [9, 5, 4]), relay.reshape(const_7905.astype('float32'), [336,]), relay.reshape(const_7906.astype('int64'), []), relay.reshape(const_7907.astype('int64'), [200,]), ), 2)
uop_7913 = relay.sin(var_7891.astype('float32')) # shape=(16, 12, 11)
output = relay.Tuple([uop_7901,call_7903,var_7904,const_7905,const_7906,const_7907,uop_7913,])
output2 = relay.Tuple([uop_7901,call_7908,var_7904,const_7905,const_7906,const_7907,uop_7913,])
func_7928 = relay.Function([var_7891,var_7904,], output)
mod['func_7928'] = func_7928
mod = relay.transform.InferType()(mod)
mutated_mod['func_7928'] = func_7928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7928_call = mutated_mod.get_global_var('func_7928')
var_7930 = relay.var("var_7930", dtype = "float64", shape = (16, 12, 11))#candidate|7930|(16, 12, 11)|var|float64
var_7931 = relay.var("var_7931", dtype = "float32", shape = (180,))#candidate|7931|(180,)|var|float32
call_7929 = func_7928_call(var_7930,var_7931,)
output = call_7929
func_7932 = relay.Function([var_7930,var_7931,], output)
mutated_mod['func_7932'] = func_7932
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7948 = relay.var("var_7948", dtype = "float64", shape = (15, 12, 16))#candidate|7948|(15, 12, 16)|var|float64
uop_7949 = relay.exp(var_7948.astype('float64')) # shape=(15, 12, 16)
func_3966_call = mod.get_global_var('func_3966')
func_3969_call = mutated_mod.get_global_var('func_3969')
var_7952 = relay.var("var_7952", dtype = "float32", shape = (84,))#candidate|7952|(84,)|var|float32
call_7951 = relay.TupleGetItem(func_3966_call(relay.reshape(var_7952.astype('float32'), [6, 2, 7])), 2)
call_7953 = relay.TupleGetItem(func_3969_call(relay.reshape(var_7952.astype('float32'), [6, 2, 7])), 2)
output = relay.Tuple([uop_7949,call_7951,var_7952,])
output2 = relay.Tuple([uop_7949,call_7953,var_7952,])
func_7957 = relay.Function([var_7948,var_7952,], output)
mod['func_7957'] = func_7957
mod = relay.transform.InferType()(mod)
var_7958 = relay.var("var_7958", dtype = "float64", shape = (15, 12, 16))#candidate|7958|(15, 12, 16)|var|float64
var_7959 = relay.var("var_7959", dtype = "float32", shape = (84,))#candidate|7959|(84,)|var|float32
output = func_7957(var_7958,var_7959,)
func_7960 = relay.Function([var_7958,var_7959,], output)
mutated_mod['func_7960'] = func_7960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7647_call = mod.get_global_var('func_7647')
func_7649_call = mutated_mod.get_global_var('func_7649')
call_7968 = relay.TupleGetItem(func_7647_call(), 0)
call_7969 = relay.TupleGetItem(func_7649_call(), 0)
func_2363_call = mod.get_global_var('func_2363')
func_2366_call = mutated_mod.get_global_var('func_2366')
var_7978 = relay.var("var_7978", dtype = "float64", shape = (528,))#candidate|7978|(528,)|var|float64
call_7977 = relay.TupleGetItem(func_2363_call(relay.reshape(var_7978.astype('float64'), [12, 4, 11]), relay.reshape(var_7978.astype('float64'), [12, 4, 11]), ), 2)
call_7979 = relay.TupleGetItem(func_2366_call(relay.reshape(var_7978.astype('float64'), [12, 4, 11]), relay.reshape(var_7978.astype('float64'), [12, 4, 11]), ), 2)
func_1276_call = mod.get_global_var('func_1276')
func_1280_call = mutated_mod.get_global_var('func_1280')
var_7993 = relay.var("var_7993", dtype = "int16", shape = (78,))#candidate|7993|(78,)|var|int16
const_7994 = relay.const([[9,-1,-9,5,-1,-10,-6,2,2,-1,3,3,-9,-8,10,-9,7,-5,6,4,-8,-2,-5,8,-8,-10,9,8,-2,-6,-6,3,-6,-2,10,-8,4,5,-6,7,-3,7,-10,-10,1,9,1,-1,-2,-7,-2,-5,7,-6,-4,-1,9,9,-4,4,-4,-3,4,-2,-10,3,6,-8,7,-7,6,9,5,7,-6,-5,3,-5,-5,-7,6,6,-5,4,-10,-6,1,4,-3,7,3,8,-3,4,10,2,-1,-7,-5,-2,-5,5,-4,-4,-1,6,5,1,9,-6,9,6,-8,-8,-5,10,-9,-8,4,-9,4,-1,1,9,-9,8,2,-8,6,-3,-6,-5,-10,7,-4,2,-4,-9,5,5,-10,4,9,-2,9,8,-2,2,5,-7,8,8,-2,-8,-2,3],[-8,-6,10,-1,-7,8,-3,1,-10,8,-10,3,-3,9,4,9,-10,6,-5,10,-6,-1,-7,-7,-5,-8,-1,-4,-1,-10,-6,6,4,-5,9,-2,2,-5,10,-9,-7,9,-9,10,6,5,-9,-8,-3,3,-6,8,-10,10,-5,4,-7,9,6,6,-9,5,-1,10,-4,7,-10,10,6,-10,9,4,-9,-2,2,10,-8,-9,8,3,4,3,-5,-4,5,3,-9,1,-9,4,8,5,9,-5,5,10,-9,3,-10,-6,-2,2,-7,-1,6,10,-1,2,-8,8,8,-3,5,-3,-5,-1,-2,-10,5,-7,-9,5,-1,4,5,-3,2,-1,3,1,5,-7,-6,-5,-10,-2,-9,-1,-5,8,-6,2,-8,-6,-7,1,10,6,-6,-7,-3,-5,5,1,-10,-1],[-1,-6,-7,1,7,5,-9,3,4,-2,-8,-1,3,-4,-2,-9,1,-3,-6,-2,6,2,2,3,-7,5,1,8,-8,5,1,-7,9,-9,-6,-2,10,-10,-1,-8,-7,2,1,-10,-6,10,-10,8,-9,-8,9,7,-4,-2,1,3,-7,6,7,-6,2,10,5,3,4,10,1,-3,-6,10,-8,-5,-8,-10,8,9,6,-4,-7,6,10,3,3,6,2,7,9,-5,-5,-3,3,-3,-3,-9,-3,2,-10,5,-2,3,5,3,3,10,-5,1,6,6,-8,-10,1,-4,-6,4,-8,-1,8,6,4,-9,10,6,1,-5,-8,-10,6,9,3,-9,10,-3,-8,10,-4,10,1,9,-7,-3,-1,3,6,-1,-3,9,2,2,10,1,-2,-7,-4,-5,5,5],[10,5,-8,-5,7,-4,6,1,7,10,-3,-10,-5,8,-2,6,-1,-8,-7,1,8,5,1,-2,9,6,10,9,-3,-7,-1,7,-6,-4,9,-9,1,3,-1,10,6,2,-4,-1,-7,1,1,-4,2,-10,-3,8,-4,-6,7,-4,4,8,4,-6,-8,-3,-5,-8,4,10,8,3,-10,-6,7,-7,-4,10,4,3,4,-3,-2,8,10,7,-5,-9,-9,1,4,8,4,-8,-3,2,-4,6,7,-5,-1,6,-3,10,-1,10,10,-5,-6,-3,-1,-8,-2,-4,10,6,2,-7,1,4,10,-9,-2,7,5,-6,-6,3,9,-5,-7,-10,6,-1,-7,-9,1,-1,10,10,9,4,-10,-1,6,-8,10,-1,5,3,1,3,10,4,2,-9,-1,4,2,10],[5,3,8,-4,-8,-7,9,-10,3,-10,1,6,2,3,9,-2,-3,-2,10,6,-2,-8,4,-9,3,2,1,-8,-9,-7,-6,3,-5,-2,10,3,-2,3,1,3,-3,10,6,-7,8,-3,4,-6,10,3,6,2,-9,4,-6,3,-5,-5,2,-5,-3,-5,-4,-5,-6,6,8,-10,4,-6,2,-2,-6,-7,9,7,8,-1,2,9,-6,-2,5,-1,7,-1,-1,-7,2,-3,3,2,-3,-6,-9,-5,-1,9,-10,-7,2,-7,3,-9,-5,3,-4,1,-8,-4,-1,-1,-3,-8,-5,-1,5,9,1,4,-2,-6,-3,-6,4,-7,-9,7,1,7,2,-10,-4,-6,8,-1,-6,9,-3,-10,4,-2,-8,-7,4,-4,9,-7,4,10,-3,2,-9,1,-7,9],[-10,6,-7,6,6,10,-3,-10,10,9,-2,-5,4,-3,8,-4,-10,-6,-3,10,2,5,-7,-4,-7,-2,-8,2,-4,-4,-6,3,-9,2,-1,1,4,-3,-3,10,10,10,3,-9,-8,1,1,9,3,4,-6,1,5,3,-9,-9,-6,-8,-3,-8,-9,-5,5,4,7,-3,-5,3,8,-7,8,7,-6,-7,-1,-10,-5,5,-8,9,-7,8,-9,-1,6,4,-5,-2,-8,-2,3,1,8,8,-5,1,9,3,2,-5,-3,6,1,-10,6,-8,-3,-7,-7,9,3,-3,1,2,-3,4,7,-3,-8,7,-5,3,6,-9,6,-4,-7,-3,6,-4,4,2,-7,-10,-9,9,2,2,-3,-10,8,-9,-4,5,-10,6,6,5,-6,-10,-2,9,-2,-1,-1,-5],[-8,3,-9,-1,-7,2,8,9,-2,8,-8,7,7,9,10,6,8,-1,10,-5,8,2,-5,-9,8,9,6,9,6,3,10,6,-1,-7,9,-9,1,5,10,3,3,5,-9,-5,2,1,-9,2,-5,10,2,3,9,-9,1,-9,5,-8,-8,-1,2,2,10,9,2,-9,9,8,-9,-8,-9,9,-1,-10,9,-9,3,2,5,9,3,6,2,-1,-10,-3,4,-3,-6,-3,-4,8,4,-9,1,10,7,-5,9,10,-5,-8,-5,-5,4,8,10,5,5,-7,-3,-10,5,1,-3,1,6,-6,-10,1,-9,-4,-6,5,3,10,10,-8,9,-9,2,8,-1,8,5,7,-10,-3,8,-10,1,-8,-3,-6,-6,5,-6,8,7,-9,5,6,-5,-2,6,-5]], dtype = "int16")#candidate|7994|(7, 156)|const|int16
call_7992 = func_1276_call(relay.reshape(var_7993.astype('int16'), [1, 13, 6]), relay.reshape(const_7994.astype('int16'), [14, 13, 6]), )
call_7995 = func_1276_call(relay.reshape(var_7993.astype('int16'), [1, 13, 6]), relay.reshape(const_7994.astype('int16'), [14, 13, 6]), )
output = relay.Tuple([call_7968,call_7977,var_7978,call_7992,var_7993,const_7994,])
output2 = relay.Tuple([call_7969,call_7979,var_7978,call_7995,var_7993,const_7994,])
func_8004 = relay.Function([var_7978,var_7993,], output)
mod['func_8004'] = func_8004
mod = relay.transform.InferType()(mod)
var_8005 = relay.var("var_8005", dtype = "float64", shape = (528,))#candidate|8005|(528,)|var|float64
var_8006 = relay.var("var_8006", dtype = "int16", shape = (78,))#candidate|8006|(78,)|var|int16
output = func_8004(var_8005,var_8006,)
func_8007 = relay.Function([var_8005,var_8006,], output)
mutated_mod['func_8007'] = func_8007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7888_call = mod.get_global_var('func_7888')
func_7890_call = mutated_mod.get_global_var('func_7890')
call_8063 = relay.TupleGetItem(func_7888_call(), 0)
call_8064 = relay.TupleGetItem(func_7890_call(), 0)
output = call_8063
output2 = call_8064
func_8071 = relay.Function([], output)
mod['func_8071'] = func_8071
mod = relay.transform.InferType()(mod)
mutated_mod['func_8071'] = func_8071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8071_call = mutated_mod.get_global_var('func_8071')
call_8072 = func_8071_call()
output = call_8072
func_8073 = relay.Function([], output)
mutated_mod['func_8073'] = func_8073
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8087 = relay.var("var_8087", dtype = "int8", shape = (15, 15, 5))#candidate|8087|(15, 15, 5)|var|int8
var_8088 = relay.var("var_8088", dtype = "int8", shape = (15, 15, 5))#candidate|8088|(15, 15, 5)|var|int8
bop_8089 = relay.right_shift(var_8087.astype('int8'), relay.reshape(var_8088.astype('int8'), relay.shape_of(var_8087))) # shape=(15, 15, 5)
func_2260_call = mod.get_global_var('func_2260')
func_2263_call = mutated_mod.get_global_var('func_2263')
const_8100 = relay.const([3.209155,4.895900,7.845996,-9.273573,-6.149766,9.732149,-6.731573,-6.830277,-7.157535,3.757605,8.356647,7.466521,7.655342,1.714273,-7.536855,-3.869784,3.474898,-6.940040,-2.353716,-6.724051,-2.491838,8.955165,3.969353,-4.293218,2.022466,-0.021448,2.215604,2.185442,2.899700,6.018031,4.653665,2.412315,9.011471,-9.440380,-6.212386,-7.186957,-5.796648,-1.608590,-1.834564,9.289778,-7.144148,-3.903340,5.579525,-0.114617,0.434138,2.098120,7.135284,2.656891,-3.901319,7.087817,-9.118285,-1.531266,3.488124,-2.216237,6.074327,0.672798,8.683696,3.553146,4.420034,-5.236689,2.710143,-3.953777,-6.736282,-8.383158,5.093405,-4.406484,1.434132,-6.056452,1.442710,-9.720691,1.609488,-2.404583,-5.633877,9.575699,8.681302,-2.527269,6.382031,4.743629,-7.059186,0.212091,2.252569,1.469160,-1.772442,9.421232,-1.822863,-1.199753,9.425781,9.457015,-1.977562,-0.317444,-6.221341,-2.651074,7.636156,4.596217,3.389011,0.332021,-0.278561,-0.788428,-3.441458,-0.238498,4.381313,-5.509653,5.580643,-8.227204,8.008396,4.281676,7.189732,4.678382,-5.970848,-4.301251,8.442942,-0.591958,-7.833856,-5.171701,8.725173,-1.554149,0.581651,1.155788,-4.023553,-1.430567,-0.538921,7.743582,-3.199800,-7.023723,0.855761,-1.773093,-4.101444,8.408268,0.161246,-9.598539,-5.019150,-6.893124,1.488342,3.795228,5.850234,3.524811,8.425002,-0.048403,-4.406271,-4.532075,5.164225,-8.978397,-6.908703,6.183144,-0.366308,-6.090005,-6.287508,-4.906866,-1.689833,3.168600,-5.083280,-1.057194,6.468624,6.382459,9.198666,5.962722,-2.492476,9.105862,6.996295,3.578646,-7.874011,3.104808,-6.949746,-3.934231,7.313730,-2.953043,4.627822,6.091110,1.637224,-6.776122,3.994165,-9.470842,5.023707,-0.309893,-7.674307,-2.119735,0.468551,8.248627,-9.755186,-9.650462,5.204435,7.634579,4.922010,7.878315,4.156534,-2.737505,9.846081,-3.705239,-6.275411,-4.754935,-6.156473,0.846792,-1.896765,2.370630,-2.708867,-5.080956,4.566872,-3.647986,-0.443524,2.714124,8.497653,-9.331180,-5.786191,-1.451610,8.910377,2.126908,5.785307,4.541413,6.139700,-0.347748,8.002891,9.251909,-9.138047,4.437263,0.262023,-6.008138,-6.419283,-9.604997,-7.400879,3.222735,1.671639,7.783497,8.947598,-2.510010,-5.309431,5.655471,3.495200,-7.700908,-3.293697,-9.956598,-4.708707,4.325138,-5.034341,-5.590859,-9.620381,-9.176486,-4.540086,-7.606538,5.032508,5.051153], dtype = "float32")#candidate|8100|(240,)|const|float32
call_8099 = func_2260_call(relay.reshape(const_8100.astype('float32'), [6, 10, 4]))
call_8101 = func_2260_call(relay.reshape(const_8100.astype('float32'), [6, 10, 4]))
func_2907_call = mod.get_global_var('func_2907')
func_2909_call = mutated_mod.get_global_var('func_2909')
const_8104 = relay.const([[False,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,False,True,False,False,True,True,False,True,True,True,False,True,True,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,False,False,True,True,False,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,True,False,False,True,False,False,True,True,False,False,False,True,True,False,False,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,True,True,True,True,True,False,True,False,False,True,True,False],[True,False,True,True,True,False,False,True,False,True,False,True,False,True,False,True,False,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,True,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,False,True,False,True,True,True,True,False,True,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,False,False,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,False,True,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,False,False,False,False,False,True,True]], dtype = "bool")#candidate|8104|(2, 200)|const|bool
call_8103 = relay.TupleGetItem(func_2907_call(relay.reshape(const_8104.astype('bool'), [10, 5, 8])), 0)
call_8105 = relay.TupleGetItem(func_2909_call(relay.reshape(const_8104.astype('bool'), [10, 5, 8])), 0)
func_4243_call = mod.get_global_var('func_4243')
func_4249_call = mutated_mod.get_global_var('func_4249')
const_8107 = relay.const([3.955805,-0.417057,9.662709,1.594734,-7.759734,-6.844790,-7.392691,4.462838,-9.297206,-3.859241,-4.030783,5.370393,-9.148782,-1.001925,-1.237098,9.546073,5.486396,2.837485,-5.954239,9.349012,5.993353,-0.710407,-6.809018,3.929534,-5.662010,0.944140,-2.634359,-2.194867,-7.562459,-1.736516,8.130814,-3.216173,9.706026,2.462386,0.590459,6.479248,-5.635121,-6.260630,5.422993,-0.687448,3.758710,5.941492,-7.443276,-7.545682,-9.015016,7.573495,4.081338,-9.533956,7.942897,-7.157215,-8.624839,-5.764383,-0.680866,4.094277,-2.017368,7.939809,-7.511498,1.336927,-2.670961,6.942624,6.135130,-2.641006,4.104111,1.288899,5.170428,2.175978,0.588106,-0.354928,-1.076132,-0.531403,3.643238,-3.205732,-2.468080,-7.878410,-1.390864,0.608489,4.055919,-6.824554,-8.860496,4.037070,3.844073,1.787446,-7.724097,-7.396716,-6.081131,-2.472979,-2.250664,1.309033,-1.730006,-3.910459,1.906161,-9.182311,8.105016,6.592950,6.364703,0.445518,0.720929,3.082894,8.278749,-4.188598,-9.067321,8.615079,-0.376493,7.279719,7.276413,1.216059,5.807166,2.122778,-1.612202,-3.898917,7.626991,-1.163987,0.363038,4.981998,-2.414221,-6.413224,-1.215017,1.407578,-3.142659,7.377035,-4.709097,-3.115127,9.958853,6.301110,6.360389,6.230974,8.227575,5.351874,6.319841,6.335154,0.669248,8.460727,-7.309281,-4.564852,0.404033,-0.348736,-4.465344,-6.495138,-9.814018,4.573021,0.874763,-1.461918,-9.540260,2.746237,-5.854477,9.364541,-3.362002,1.621344,-5.809515,5.075015,-8.125350,2.663985,4.979628,-1.110317,0.094767,1.515309,-3.741428,-3.208724,3.247094,-1.213854,-4.278691,6.309695,-9.137971,7.667818,-3.652229,3.165470,-6.613479,6.885374,-0.929133,1.809093,3.549584,-3.657262,6.843717,2.849983,8.674785,-9.122744,2.455174,-5.398851,4.270389,-2.826656], dtype = "float32")#candidate|8107|(180,)|const|float32
const_8108 = relay.const([[5.480069],[4.364492],[7.314779],[3.800028],[-9.039248],[-6.536747],[0.700990],[8.976023],[-1.565163],[-9.074188],[2.759890],[-4.465161],[4.590716],[2.381928],[-1.243649],[-2.451293],[-4.295759],[-3.910397],[-6.179502],[2.470230],[-2.960857],[-3.363429],[8.924029],[-1.063602],[2.992823],[2.104764],[-4.946357],[-1.168121],[6.445663],[4.606439],[-2.467801],[1.609189],[3.033425],[7.872918],[8.499886],[-3.772756],[-3.254259],[3.590475],[-0.790435],[2.387051],[-3.489059],[-1.892013],[4.804600],[0.302571],[-4.240286],[-2.064067],[-7.810231],[4.188966],[0.750034],[1.449411],[-6.641288],[4.415281],[7.199147],[-4.307220],[-1.491742],[6.866797],[-7.246754],[0.394964],[-4.820513],[-6.003027],[9.590785],[-8.545574],[-4.827942],[7.038175],[-2.421304],[-8.351781],[-0.023691],[2.219108],[3.187720],[9.342328],[-3.319061],[-1.048342],[3.890776],[-3.268147],[-0.456541],[-5.262650],[9.160026],[3.483758],[1.405936],[4.027280],[-5.732749],[-2.420967],[8.177846],[-8.401852],[0.362165],[-2.108644],[-2.469687],[5.054496],[-6.916187],[9.829918],[-8.325382],[-4.948319],[-3.138284],[-3.407143],[-9.654046],[5.009439],[4.128474],[8.024529],[-2.544457],[3.779617],[-2.714710],[1.885263],[5.541953],[-7.118806],[-3.028228],[-4.510240],[3.553072],[-8.172306],[6.660022],[5.843434],[-4.776266],[-8.027014],[-9.318145],[3.546835],[2.292011],[6.951638],[-8.282979],[-2.082876],[0.845153],[-8.093516],[-9.717161],[-6.405139],[3.075566],[-5.663786],[5.340963],[8.255196],[-6.846132],[-6.247066],[4.338649],[6.539774],[-5.997681],[-3.617811],[2.725558],[-5.835077],[7.866853],[-7.460129],[-2.998918],[-8.938771],[2.519912],[-7.601770],[-9.555774],[8.057706],[5.882544],[-8.700817],[9.428335],[2.348196],[-7.207863],[-7.804462],[-8.517752],[-8.604898],[1.545596],[4.910934],[1.992562],[-0.852684],[-9.772956],[-0.018870],[-1.248576],[-0.376236],[8.190952],[-7.983698],[-0.307923],[-7.624348],[-7.969569],[8.019974],[-4.759005],[-1.824822],[-7.558967],[8.651875],[5.965608],[0.122639],[-0.707466],[0.331987],[1.417801],[-5.520517],[-6.126646],[6.250317],[-4.116438],[9.799826],[-8.422291],[6.595198],[-9.782877],[9.633377],[9.743654],[-7.369302],[-4.308244],[6.075678],[9.403074],[7.012946],[-7.441083],[1.935887],[-5.773977],[1.576841],[7.969142],[2.041260],[9.958269],[-2.180156],[6.181207],[3.944966],[-5.249132],[6.629257],[4.476440],[5.283214],[9.091551],[9.121498],[-9.120770],[-5.709031],[1.048287],[5.430493],[-9.769599],[-7.018772],[4.798025],[1.585108],[-4.932504],[8.661593],[0.676426],[1.373921],[7.115187],[6.181921],[6.437030],[-3.508523],[-4.397581],[1.445467],[5.430595],[-3.007488],[2.656342],[5.457508],[7.105474],[0.634858],[1.808296],[-3.031180],[-4.257869],[3.361743],[-2.947953],[-6.933242],[3.334501],[6.095085],[-6.596347],[1.172472],[8.453708],[3.460356],[8.916470],[4.397803],[-9.954426],[-7.643404],[6.206146],[-3.815406],[6.516589],[-6.244566],[-7.322982],[4.333655],[9.296890],[4.422632],[7.268918],[8.620849],[-0.479864],[-2.048377],[-1.543214],[-1.594734],[-4.626934],[-2.990203],[9.312362],[7.675321],[3.016244],[-4.351452],[3.907108],[1.937726],[-3.774269],[-2.092381],[-5.900759],[-9.796163],[-0.634135],[-2.021022],[-6.527980],[4.008208],[6.868890],[7.988230],[-5.595077],[3.865597],[-9.539386],[-7.384933],[-7.297097],[-8.843104],[-1.643715],[-2.133687],[0.543414],[-2.385156],[8.818102],[-7.705871],[2.336987],[4.552477],[2.531480],[-7.723566],[7.598018],[9.330135],[7.248308],[5.138999],[-0.542168],[2.813595],[-7.349112],[4.558575],[-7.287089],[-7.386317],[-3.637892],[-4.859525],[-1.352820],[-3.641150],[-9.003587],[-7.960056],[9.583915],[2.563891],[6.520753],[-9.475504],[-8.108053],[-4.242598],[1.999353],[-9.304185],[8.941529],[-4.024936],[8.893387],[-5.150796],[-8.186956],[-6.001361],[4.113258],[-2.972432],[-1.413768],[1.231032],[0.604256],[4.956018],[6.757925],[-7.186102],[1.704430],[3.551954],[0.935244],[-6.348534],[-5.870784],[3.711011]], dtype = "float32")#candidate|8108|(336, 1)|const|float32
var_8109 = relay.var("var_8109", dtype = "int64", shape = ())#candidate|8109|()|var|int64
const_8110 = relay.const([[-1,-5,7,-2,-2,3,1,1,3,-9,-6,10,1,-9,-3,1,3,6,8,2,-7,2,-4,5,-6,4,7,1,9,3,4,-7,-10,7,-3,7,-4,7,-3,-5],[-9,1,4,-5,6,6,-2,7,8,-1,2,10,-7,4,-9,9,2,5,-5,-9,-8,9,8,3,9,-6,10,-7,-2,6,-3,-1,-6,1,7,-10,-4,5,6,-7],[-2,8,-10,-10,9,6,-3,-7,5,10,-7,-7,1,1,1,-6,3,-8,10,-5,-4,-1,2,-5,5,1,8,-10,-1,10,-1,9,-10,-4,5,-9,4,5,9,3],[7,-3,1,6,6,-7,10,-10,-1,1,6,4,-2,-6,-2,5,2,-6,3,8,-8,6,-1,10,-1,-9,-3,-6,3,-5,10,4,-8,-8,2,10,-1,8,3,5],[9,10,6,-8,-10,3,3,-4,10,1,10,-2,8,-4,-7,4,10,9,-9,-4,-10,-9,-6,5,8,10,9,-8,3,7,-8,8,-4,3,-6,4,-4,8,-9,10]], dtype = "int64")#candidate|8110|(5, 40)|const|int64
call_8106 = relay.TupleGetItem(func_4243_call(relay.reshape(const_8107.astype('float32'), [9, 5, 4]), relay.reshape(const_8108.astype('float32'), [336,]), relay.reshape(var_8109.astype('int64'), []), relay.reshape(const_8110.astype('int64'), [200,]), ), 5)
call_8111 = relay.TupleGetItem(func_4249_call(relay.reshape(const_8107.astype('float32'), [9, 5, 4]), relay.reshape(const_8108.astype('float32'), [336,]), relay.reshape(var_8109.astype('int64'), []), relay.reshape(const_8110.astype('int64'), [200,]), ), 5)
func_2104_call = mod.get_global_var('func_2104')
func_2106_call = mutated_mod.get_global_var('func_2106')
call_8116 = relay.TupleGetItem(func_2104_call(relay.reshape(call_8106.astype('float64'), [7, 14, 10])), 0)
call_8117 = relay.TupleGetItem(func_2106_call(relay.reshape(call_8106.astype('float64'), [7, 14, 10])), 0)
func_1891_call = mod.get_global_var('func_1891')
func_1896_call = mutated_mod.get_global_var('func_1896')
var_8120 = relay.var("var_8120", dtype = "bool", shape = (8, 18))#candidate|8120|(8, 18)|var|bool
const_8121 = relay.const([[8,-9,3,-9,-3,-6,-1,-1,-7],[-3,5,-10,-8,7,-6,-7,10,-3],[-3,9,5,-7,6,-9,9,7,-4],[8,-10,10,-2,10,4,-5,4,-5],[1,7,-7,10,8,3,-2,2,8],[10,10,1,1,-10,-10,-6,-4,8],[-9,1,-6,7,-7,-2,4,2,9],[-7,9,-7,-2,-2,6,-10,-10,2],[7,-4,10,-9,9,10,7,8,5],[-7,-8,5,-10,-9,-8,-6,10,-9],[-7,7,-10,-4,4,-4,-9,8,-9],[3,8,2,3,-2,2,-5,10,7],[-1,-6,4,4,1,5,4,1,-10]], dtype = "int32")#candidate|8121|(13, 9)|const|int32
call_8119 = relay.TupleGetItem(func_1891_call(relay.reshape(var_8120.astype('bool'), [4, 12, 3]), relay.reshape(var_8120.astype('bool'), [4, 12, 3]), relay.reshape(var_8109.astype('int32'), []), relay.reshape(const_8121.astype('int32'), [117,]), ), 2)
call_8122 = relay.TupleGetItem(func_1896_call(relay.reshape(var_8120.astype('bool'), [4, 12, 3]), relay.reshape(var_8120.astype('bool'), [4, 12, 3]), relay.reshape(var_8109.astype('int32'), []), relay.reshape(const_8121.astype('int32'), [117,]), ), 2)
output = relay.Tuple([bop_8089,call_8099,const_8100,call_8103,const_8104,call_8106,const_8107,const_8108,var_8109,const_8110,call_8116,call_8119,var_8120,const_8121,])
output2 = relay.Tuple([bop_8089,call_8101,const_8100,call_8105,const_8104,call_8111,const_8107,const_8108,var_8109,const_8110,call_8117,call_8122,var_8120,const_8121,])
func_8126 = relay.Function([var_8087,var_8088,var_8109,var_8120,], output)
mod['func_8126'] = func_8126
mod = relay.transform.InferType()(mod)
var_8127 = relay.var("var_8127", dtype = "int8", shape = (15, 15, 5))#candidate|8127|(15, 15, 5)|var|int8
var_8128 = relay.var("var_8128", dtype = "int8", shape = (15, 15, 5))#candidate|8128|(15, 15, 5)|var|int8
var_8129 = relay.var("var_8129", dtype = "int64", shape = ())#candidate|8129|()|var|int64
var_8130 = relay.var("var_8130", dtype = "bool", shape = (8, 18))#candidate|8130|(8, 18)|var|bool
output = func_8126(var_8127,var_8128,var_8129,var_8130,)
func_8131 = relay.Function([var_8127,var_8128,var_8129,var_8130,], output)
mutated_mod['func_8131'] = func_8131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7888_call = mod.get_global_var('func_7888')
func_7890_call = mutated_mod.get_global_var('func_7890')
call_8157 = relay.TupleGetItem(func_7888_call(), 0)
call_8158 = relay.TupleGetItem(func_7890_call(), 0)
output = call_8157
output2 = call_8158
func_8174 = relay.Function([], output)
mod['func_8174'] = func_8174
mod = relay.transform.InferType()(mod)
mutated_mod['func_8174'] = func_8174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8174_call = mutated_mod.get_global_var('func_8174')
call_8175 = func_8174_call()
output = call_8175
func_8176 = relay.Function([], output)
mutated_mod['func_8176'] = func_8176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7888_call = mod.get_global_var('func_7888')
func_7890_call = mutated_mod.get_global_var('func_7890')
call_8218 = relay.TupleGetItem(func_7888_call(), 0)
call_8219 = relay.TupleGetItem(func_7890_call(), 0)
func_1076_call = mod.get_global_var('func_1076')
func_1078_call = mutated_mod.get_global_var('func_1078')
var_8222 = relay.var("var_8222", dtype = "float32", shape = (4, 280))#candidate|8222|(4, 280)|var|float32
call_8221 = func_1076_call(relay.reshape(var_8222.astype('float32'), [5, 16, 14]))
call_8223 = func_1076_call(relay.reshape(var_8222.astype('float32'), [5, 16, 14]))
uop_8224 = relay.sin(call_8218.astype('float64')) # shape=(11, 5, 4)
uop_8226 = relay.sin(call_8219.astype('float64')) # shape=(11, 5, 4)
output = relay.Tuple([call_8221,var_8222,uop_8224,])
output2 = relay.Tuple([call_8223,var_8222,uop_8226,])
func_8230 = relay.Function([var_8222,], output)
mod['func_8230'] = func_8230
mod = relay.transform.InferType()(mod)
var_8231 = relay.var("var_8231", dtype = "float32", shape = (4, 280))#candidate|8231|(4, 280)|var|float32
output = func_8230(var_8231)
func_8232 = relay.Function([var_8231], output)
mutated_mod['func_8232'] = func_8232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7834_call = mod.get_global_var('func_7834')
func_7835_call = mutated_mod.get_global_var('func_7835')
call_8238 = relay.TupleGetItem(func_7834_call(), 0)
call_8239 = relay.TupleGetItem(func_7835_call(), 0)
output = call_8238
output2 = call_8239
func_8242 = relay.Function([], output)
mod['func_8242'] = func_8242
mod = relay.transform.InferType()(mod)
output = func_8242()
func_8243 = relay.Function([], output)
mutated_mod['func_8243'] = func_8243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8174_call = mod.get_global_var('func_8174')
func_8176_call = mutated_mod.get_global_var('func_8176')
call_8270 = func_8174_call()
call_8271 = func_8174_call()
output = relay.Tuple([call_8270,])
output2 = relay.Tuple([call_8271,])
func_8279 = relay.Function([], output)
mod['func_8279'] = func_8279
mod = relay.transform.InferType()(mod)
mutated_mod['func_8279'] = func_8279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8279_call = mutated_mod.get_global_var('func_8279')
call_8280 = func_8279_call()
output = call_8280
func_8281 = relay.Function([], output)
mutated_mod['func_8281'] = func_8281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8242_call = mod.get_global_var('func_8242')
func_8243_call = mutated_mod.get_global_var('func_8243')
call_8297 = func_8242_call()
call_8298 = func_8242_call()
output = call_8297
output2 = call_8298
func_8301 = relay.Function([], output)
mod['func_8301'] = func_8301
mod = relay.transform.InferType()(mod)
output = func_8301()
func_8302 = relay.Function([], output)
mutated_mod['func_8302'] = func_8302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8071_call = mod.get_global_var('func_8071')
func_8073_call = mutated_mod.get_global_var('func_8073')
call_8331 = func_8071_call()
call_8332 = func_8071_call()
func_1276_call = mod.get_global_var('func_1276')
func_1280_call = mutated_mod.get_global_var('func_1280')
const_8338 = relay.const([-6,-1,-1,-4,-4,-9,7,-7,-5,-10,7,-7,-2,10,3,-2,-8,2,4,2,-2,-10,-8,-7,-3,10,-2,-6,1,4,3,4,1,-3,-3,4,7,6,2,-10,2,-6,8,-9,-7,-2,-10,-4,-4,7,-1,3,-4,5,2,-10,5,9,7,-2,-10,5,-3,-1,7,4,-1,-5,-6,1,-4,-4,-9,2,-8,10,-9,10], dtype = "int16")#candidate|8338|(78,)|const|int16
const_8339 = relay.const([[-1,4,10,-6,8,8],[10,2,-9,-3,-5,-7],[8,-3,-9,-7,-3,2],[5,-10,3,-10,-7,-5],[9,3,8,6,-5,-4],[-3,-7,-4,-2,7,1],[9,7,8,-4,-1,-8],[-9,2,5,-10,-8,9],[-8,-10,2,-6,-7,-8],[-6,-9,-9,5,-5,-2],[4,-3,1,-4,-10,5],[-8,-4,6,9,4,9],[8,1,-3,-6,-7,9],[8,8,-8,1,-3,-2],[-8,-9,10,6,-1,3],[-4,-1,7,-10,1,-4],[-10,-6,1,2,-10,4],[8,-2,-10,5,4,-4],[3,-8,3,-5,9,4],[3,1,-6,7,-8,-4],[-2,2,-4,8,4,4],[-8,-8,4,8,9,-3],[6,-10,-7,-5,-5,8],[7,7,-2,7,-1,8],[9,5,5,1,-5,10],[-7,-4,3,-4,-8,4],[-3,3,-5,1,8,2],[-1,-9,-5,-2,-3,7],[-8,10,1,9,4,7],[-2,-5,-2,6,-9,-4],[3,9,2,-3,6,-8],[7,8,-7,3,3,4],[5,1,-4,-8,-10,-2],[-2,3,-8,2,6,7],[7,7,-7,7,8,6],[2,-8,3,-5,6,-3],[-8,-10,-7,10,-6,-5],[-5,-5,-10,-6,4,-7],[5,-2,-9,-5,-1,1],[-1,-3,-7,2,-3,-4],[7,-9,3,10,9,9],[8,-7,9,9,9,9],[-2,-8,9,2,-10,-10],[7,1,1,-4,-3,8],[-8,-2,-10,-5,-5,9],[-2,1,-10,-7,1,4],[9,3,-8,-4,9,-7],[10,-9,-2,-8,-9,-8],[-9,7,4,-2,-1,7],[-5,8,-8,10,7,-10],[10,-5,6,-10,-10,-5],[-10,9,1,1,-6,9],[-3,9,-10,9,8,9],[-7,1,5,2,-2,-5],[5,-6,-4,-5,3,9],[3,-3,9,-5,10,4],[1,-1,6,-3,-3,-2],[-5,5,10,-3,-1,-4],[-10,-9,-6,-6,-6,7],[4,-3,-10,-5,3,-2],[4,-8,4,7,2,2],[6,2,-8,6,-8,8],[-5,2,3,-2,1,-3],[-1,-7,-4,-8,1,-2],[8,9,-6,-3,-2,-2],[-9,3,4,5,4,-6],[-2,-9,-4,-10,-1,-10],[9,-10,8,-5,6,-9],[4,6,5,-8,-8,-8],[10,-7,-8,-7,-10,-6],[-1,-7,9,-9,-9,2],[-9,-9,-7,-1,4,5],[-5,-6,3,5,-5,3],[8,8,7,1,8,2],[8,10,1,1,2,-1],[1,7,8,-9,-1,8],[-5,-3,1,-8,-1,9],[8,8,-9,-4,-6,-6],[10,5,-2,-9,-1,2],[10,-9,2,2,9,-1],[10,-1,-4,-5,2,-8],[-2,-3,-1,-3,7,-1],[1,1,5,8,-5,4],[-6,8,8,4,4,10],[-2,-8,6,-10,-3,5],[-2,3,-2,7,-7,-5],[10,4,-7,-9,7,10],[7,10,-10,9,-10,9],[1,-9,10,3,3,6],[-2,-9,-2,-4,-10,2],[1,-3,-6,-2,-8,-7],[-5,2,10,8,-3,-2],[-7,-6,3,8,-9,-7],[-1,2,-10,-10,1,-4],[10,-2,-10,-9,-3,5],[-3,1,2,-7,-7,-4],[7,-1,-8,9,7,-10],[-4,-6,-6,-4,-4,10],[-3,10,-7,-4,-10,5],[9,5,-5,-5,-6,7],[-3,-10,6,-4,-9,6],[9,-4,-4,-7,3,1],[9,-9,8,-6,7,-8],[5,9,-6,-2,4,6],[-5,2,-4,-7,10,7],[-10,-1,-6,7,2,-7],[-2,5,-7,3,-3,1],[10,2,2,10,-2,-8],[-3,-4,-4,5,-2,-9],[3,-2,-8,6,8,8],[7,3,-10,-10,7,-9],[-4,6,-5,6,6,-4],[8,-2,8,-8,7,-6],[2,1,-9,2,-5,1],[3,9,3,6,5,-10],[6,-10,9,4,-2,-3],[-7,6,5,-3,-5,10],[6,-9,-1,-6,9,4],[1,-9,4,6,9,3],[-9,2,9,-2,-5,-7],[-2,-5,-8,8,6,-2],[1,2,-10,-6,9,3],[-10,-2,5,-5,-2,-7],[9,10,3,6,10,8],[10,8,-1,-9,3,-10],[-1,-5,-3,-3,-8,-10],[3,-6,3,-2,7,-6],[1,1,-5,2,6,-10],[10,3,-4,-10,8,-1],[-2,-6,3,9,-7,7],[1,-9,7,-6,-1,-4],[2,6,-9,-3,-10,-10],[-2,8,-9,-1,-4,-9],[-10,-5,-4,9,-2,7],[10,2,10,-6,3,2],[-8,-2,5,-1,-6,7],[-7,7,-9,-1,-4,-2],[7,7,-9,1,3,-10],[-7,-3,-9,-5,7,6],[-6,-7,-9,7,7,7],[-4,-5,-4,-3,-6,-5],[7,1,-2,9,1,-2],[-5,10,4,9,-6,5],[7,-10,-6,-8,-3,-6],[6,-6,-3,9,7,1],[-7,-1,3,10,8,5],[-4,-9,-3,-5,2,8],[-8,-3,-6,-10,3,5],[-1,-7,4,-3,6,7],[-8,-10,4,4,-5,-8],[-1,6,-10,-1,-6,10],[-10,-10,6,6,10,4],[4,-7,-7,1,-3,-4],[-8,6,3,3,10,10],[1,-3,3,-6,-7,7],[-7,-4,5,-5,-2,4],[8,9,-1,7,-6,-4],[8,-6,-4,-9,-1,-1],[-10,9,9,9,3,7],[-8,7,-7,-1,-10,9],[1,-4,10,9,4,-4],[-3,2,3,-1,8,-3],[8,7,2,-3,4,5],[5,-6,4,-3,4,-5],[9,-6,-6,9,4,6],[-3,-10,8,-1,-1,-3],[-6,2,-4,-7,-4,9],[1,-6,5,2,10,-7],[9,-1,-4,5,-3,-1],[5,1,10,-1,-9,7],[-8,-3,5,7,7,-4],[4,-4,6,5,3,1],[7,6,7,-9,-4,-3],[4,3,-8,4,-6,-1],[4,-2,-2,-2,-4,-5],[4,8,-8,-7,1,-4],[6,-2,-6,3,-9,-1],[-9,-9,3,-4,8,3],[2,-6,9,-1,8,7],[6,-8,-6,-5,-1,-6],[8,9,3,-10,5,6],[-8,1,2,-1,-8,5]], dtype = "int16")#candidate|8339|(182, 6)|const|int16
call_8337 = func_1276_call(relay.reshape(const_8338.astype('int16'), [1, 13, 6]), relay.reshape(const_8339.astype('int16'), [14, 13, 6]), )
call_8340 = func_1276_call(relay.reshape(const_8338.astype('int16'), [1, 13, 6]), relay.reshape(const_8339.astype('int16'), [14, 13, 6]), )
bop_8346 = relay.bitwise_and(call_8337.astype('int16'), relay.reshape(const_8339.astype('int16'), relay.shape_of(call_8337))) # shape=(14, 13, 6)
bop_8349 = relay.bitwise_and(call_8340.astype('int16'), relay.reshape(const_8339.astype('int16'), relay.shape_of(call_8340))) # shape=(14, 13, 6)
output = relay.Tuple([call_8331,const_8338,bop_8346,])
output2 = relay.Tuple([call_8332,const_8338,bop_8349,])
func_8352 = relay.Function([], output)
mod['func_8352'] = func_8352
mod = relay.transform.InferType()(mod)
mutated_mod['func_8352'] = func_8352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8352_call = mutated_mod.get_global_var('func_8352')
call_8353 = func_8352_call()
output = call_8353
func_8354 = relay.Function([], output)
mutated_mod['func_8354'] = func_8354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7888_call = mod.get_global_var('func_7888')
func_7890_call = mutated_mod.get_global_var('func_7890')
call_8417 = relay.TupleGetItem(func_7888_call(), 0)
call_8418 = relay.TupleGetItem(func_7890_call(), 0)
output = relay.Tuple([call_8417,])
output2 = relay.Tuple([call_8418,])
func_8419 = relay.Function([], output)
mod['func_8419'] = func_8419
mod = relay.transform.InferType()(mod)
output = func_8419()
func_8420 = relay.Function([], output)
mutated_mod['func_8420'] = func_8420
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8514 = relay.const([[[-8,8],[-5,8],[8,-7],[9,-2],[-9,9],[-3,10],[7,4],[3,7],[-1,1],[-9,-3],[10,-5]]], dtype = "int16")#candidate|8514|(1, 11, 2)|const|int16
var_8515 = relay.var("var_8515", dtype = "int16", shape = (15, 11, 2))#candidate|8515|(15, 11, 2)|var|int16
bop_8516 = relay.subtract(const_8514.astype('int16'), var_8515.astype('int16')) # shape=(15, 11, 2)
bop_8534 = relay.add(var_8515.astype('float32'), const_8514.astype('float32')) # shape=(15, 11, 2)
uop_8544 = relay.sqrt(bop_8516.astype('float32')) # shape=(15, 11, 2)
uop_8554 = relay.acosh(bop_8516.astype('float64')) # shape=(15, 11, 2)
bop_8563 = relay.bitwise_and(const_8514.astype('uint16'), bop_8516.astype('uint16')) # shape=(15, 11, 2)
func_7647_call = mod.get_global_var('func_7647')
func_7649_call = mutated_mod.get_global_var('func_7649')
call_8569 = relay.TupleGetItem(func_7647_call(), 0)
call_8570 = relay.TupleGetItem(func_7649_call(), 0)
uop_8573 = relay.atan(uop_8554.astype('float32')) # shape=(15, 11, 2)
bop_8575 = relay.logical_or(uop_8573.astype('bool'), relay.reshape(bop_8563.astype('bool'), relay.shape_of(uop_8573))) # shape=(15, 11, 2)
func_1076_call = mod.get_global_var('func_1076')
func_1078_call = mutated_mod.get_global_var('func_1078')
var_8580 = relay.var("var_8580", dtype = "float32", shape = (560, 2))#candidate|8580|(560, 2)|var|float32
call_8579 = func_1076_call(relay.reshape(var_8580.astype('float32'), [5, 16, 14]))
call_8581 = func_1076_call(relay.reshape(var_8580.astype('float32'), [5, 16, 14]))
uop_8592 = relay.cos(uop_8573.astype('float32')) # shape=(15, 11, 2)
bop_8599 = relay.left_shift(uop_8573.astype('uint32'), relay.reshape(uop_8554.astype('uint32'), relay.shape_of(uop_8573))) # shape=(15, 11, 2)
func_3420_call = mod.get_global_var('func_3420')
func_3423_call = mutated_mod.get_global_var('func_3423')
var_8616 = relay.var("var_8616", dtype = "float64", shape = (210,))#candidate|8616|(210,)|var|float64
call_8615 = relay.TupleGetItem(func_3420_call(relay.reshape(var_8616.astype('float64'), [7, 10, 3])), 0)
call_8617 = relay.TupleGetItem(func_3423_call(relay.reshape(var_8616.astype('float64'), [7, 10, 3])), 0)
func_2907_call = mod.get_global_var('func_2907')
func_2909_call = mutated_mod.get_global_var('func_2909')
const_8645 = relay.const([False,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,True,True,True,True,True,False,False,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,False,False,False,True,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,True,True,True,True,True,True,False,True,True,False,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,False,True,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,False,True,False,True,True,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,True,False,True,False,False,True,False,False,False,False,False,True,False,False,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False], dtype = "bool")#candidate|8645|(400,)|const|bool
call_8644 = relay.TupleGetItem(func_2907_call(relay.reshape(const_8645.astype('bool'), [10, 5, 8])), 0)
call_8646 = relay.TupleGetItem(func_2909_call(relay.reshape(const_8645.astype('bool'), [10, 5, 8])), 0)
func_1528_call = mod.get_global_var('func_1528')
func_1531_call = mutated_mod.get_global_var('func_1531')
const_8650 = relay.const(1, dtype = "int64")#candidate|8650|()|const|int64
var_8651 = relay.var("var_8651", dtype = "int64", shape = (200,))#candidate|8651|(200,)|var|int64
call_8649 = relay.TupleGetItem(func_1528_call(relay.reshape(const_8650.astype('int64'), []), relay.reshape(var_8651.astype('int64'), [10, 4, 5]), ), 0)
call_8652 = relay.TupleGetItem(func_1531_call(relay.reshape(const_8650.astype('int64'), []), relay.reshape(var_8651.astype('int64'), [10, 4, 5]), ), 0)
output = relay.Tuple([bop_8534,uop_8544,call_8569,bop_8575,call_8579,var_8580,uop_8592,bop_8599,call_8615,var_8616,call_8644,const_8645,call_8649,const_8650,var_8651,])
output2 = relay.Tuple([bop_8534,uop_8544,call_8570,bop_8575,call_8581,var_8580,uop_8592,bop_8599,call_8617,var_8616,call_8646,const_8645,call_8652,const_8650,var_8651,])
func_8676 = relay.Function([var_8515,var_8580,var_8616,var_8651,], output)
mod['func_8676'] = func_8676
mod = relay.transform.InferType()(mod)
var_8677 = relay.var("var_8677", dtype = "int16", shape = (15, 11, 2))#candidate|8677|(15, 11, 2)|var|int16
var_8678 = relay.var("var_8678", dtype = "float32", shape = (560, 2))#candidate|8678|(560, 2)|var|float32
var_8679 = relay.var("var_8679", dtype = "float64", shape = (210,))#candidate|8679|(210,)|var|float64
var_8680 = relay.var("var_8680", dtype = "int64", shape = (200,))#candidate|8680|(200,)|var|int64
output = func_8676(var_8677,var_8678,var_8679,var_8680,)
func_8681 = relay.Function([var_8677,var_8678,var_8679,var_8680,], output)
mutated_mod['func_8681'] = func_8681
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8718 = relay.var("var_8718", dtype = "int8", shape = (14, 16, 1))#candidate|8718|(14, 16, 1)|var|int8
var_8719 = relay.var("var_8719", dtype = "int8", shape = (14, 16, 13))#candidate|8719|(14, 16, 13)|var|int8
bop_8720 = relay.subtract(var_8718.astype('int8'), var_8719.astype('int8')) # shape=(14, 16, 13)
bop_8724 = relay.equal(var_8719.astype('bool'), var_8718.astype('bool')) # shape=(14, 16, 13)
var_8744 = relay.var("var_8744", dtype = "int8", shape = (14, 16, 1))#candidate|8744|(14, 16, 1)|var|int8
bop_8745 = relay.greater_equal(var_8718.astype('bool'), relay.reshape(var_8744.astype('bool'), relay.shape_of(var_8718))) # shape=(14, 16, 1)
output = relay.Tuple([bop_8720,bop_8724,bop_8745,])
output2 = relay.Tuple([bop_8720,bop_8724,bop_8745,])
func_8753 = relay.Function([var_8718,var_8719,var_8744,], output)
mod['func_8753'] = func_8753
mod = relay.transform.InferType()(mod)
mutated_mod['func_8753'] = func_8753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8753_call = mutated_mod.get_global_var('func_8753')
var_8755 = relay.var("var_8755", dtype = "int8", shape = (14, 16, 1))#candidate|8755|(14, 16, 1)|var|int8
var_8756 = relay.var("var_8756", dtype = "int8", shape = (14, 16, 13))#candidate|8756|(14, 16, 13)|var|int8
var_8757 = relay.var("var_8757", dtype = "int8", shape = (14, 16, 1))#candidate|8757|(14, 16, 1)|var|int8
call_8754 = func_8753_call(var_8755,var_8756,var_8757,)
output = call_8754
func_8758 = relay.Function([var_8755,var_8756,var_8757,], output)
mutated_mod['func_8758'] = func_8758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8242_call = mod.get_global_var('func_8242')
func_8243_call = mutated_mod.get_global_var('func_8243')
call_8766 = func_8242_call()
call_8767 = func_8242_call()
output = relay.Tuple([call_8766,])
output2 = relay.Tuple([call_8767,])
func_8773 = relay.Function([], output)
mod['func_8773'] = func_8773
mod = relay.transform.InferType()(mod)
mutated_mod['func_8773'] = func_8773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8773_call = mutated_mod.get_global_var('func_8773')
call_8774 = func_8773_call()
output = call_8774
func_8775 = relay.Function([], output)
mutated_mod['func_8775'] = func_8775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8301_call = mod.get_global_var('func_8301')
func_8302_call = mutated_mod.get_global_var('func_8302')
call_8797 = func_8301_call()
call_8798 = func_8301_call()
output = call_8797
output2 = call_8798
func_8803 = relay.Function([], output)
mod['func_8803'] = func_8803
mod = relay.transform.InferType()(mod)
mutated_mod['func_8803'] = func_8803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8803_call = mutated_mod.get_global_var('func_8803')
call_8804 = func_8803_call()
output = call_8804
func_8805 = relay.Function([], output)
mutated_mod['func_8805'] = func_8805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8773_call = mod.get_global_var('func_8773')
func_8775_call = mutated_mod.get_global_var('func_8775')
call_8806 = relay.TupleGetItem(func_8773_call(), 0)
call_8807 = relay.TupleGetItem(func_8775_call(), 0)
output = call_8806
output2 = call_8807
func_8835 = relay.Function([], output)
mod['func_8835'] = func_8835
mod = relay.transform.InferType()(mod)
output = func_8835()
func_8836 = relay.Function([], output)
mutated_mod['func_8836'] = func_8836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7834_call = mod.get_global_var('func_7834')
func_7835_call = mutated_mod.get_global_var('func_7835')
call_8845 = relay.TupleGetItem(func_7834_call(), 0)
call_8846 = relay.TupleGetItem(func_7835_call(), 0)
func_7647_call = mod.get_global_var('func_7647')
func_7649_call = mutated_mod.get_global_var('func_7649')
call_8849 = relay.TupleGetItem(func_7647_call(), 0)
call_8850 = relay.TupleGetItem(func_7649_call(), 0)
var_8859 = relay.var("var_8859", dtype = "float64", shape = (11, 5, 4))#candidate|8859|(11, 5, 4)|var|float64
bop_8860 = relay.logical_or(call_8849.astype('bool'), relay.reshape(var_8859.astype('bool'), relay.shape_of(call_8849))) # shape=(11, 5, 4)
bop_8863 = relay.logical_or(call_8850.astype('bool'), relay.reshape(var_8859.astype('bool'), relay.shape_of(call_8850))) # shape=(11, 5, 4)
output = relay.Tuple([call_8845,bop_8860,])
output2 = relay.Tuple([call_8846,bop_8863,])
func_8868 = relay.Function([var_8859,], output)
mod['func_8868'] = func_8868
mod = relay.transform.InferType()(mod)
var_8869 = relay.var("var_8869", dtype = "float64", shape = (11, 5, 4))#candidate|8869|(11, 5, 4)|var|float64
output = func_8868(var_8869)
func_8870 = relay.Function([var_8869], output)
mutated_mod['func_8870'] = func_8870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7888_call = mod.get_global_var('func_7888')
func_7890_call = mutated_mod.get_global_var('func_7890')
call_8915 = relay.TupleGetItem(func_7888_call(), 0)
call_8916 = relay.TupleGetItem(func_7890_call(), 0)
output = relay.Tuple([call_8915,])
output2 = relay.Tuple([call_8916,])
func_8951 = relay.Function([], output)
mod['func_8951'] = func_8951
mod = relay.transform.InferType()(mod)
mutated_mod['func_8951'] = func_8951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8951_call = mutated_mod.get_global_var('func_8951')
call_8952 = func_8951_call()
output = call_8952
func_8953 = relay.Function([], output)
mutated_mod['func_8953'] = func_8953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8301_call = mod.get_global_var('func_8301')
func_8302_call = mutated_mod.get_global_var('func_8302')
call_8990 = func_8301_call()
call_8991 = func_8301_call()
uop_8996 = relay.log2(call_8990.astype('float64')) # shape=(11, 5, 4)
uop_8998 = relay.log2(call_8991.astype('float64')) # shape=(11, 5, 4)
output = uop_8996
output2 = uop_8998
func_9009 = relay.Function([], output)
mod['func_9009'] = func_9009
mod = relay.transform.InferType()(mod)
output = func_9009()
func_9010 = relay.Function([], output)
mutated_mod['func_9010'] = func_9010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8242_call = mod.get_global_var('func_8242')
func_8243_call = mutated_mod.get_global_var('func_8243')
call_9037 = func_8242_call()
call_9038 = func_8242_call()
output = call_9037
output2 = call_9038
func_9045 = relay.Function([], output)
mod['func_9045'] = func_9045
mod = relay.transform.InferType()(mod)
mutated_mod['func_9045'] = func_9045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9045_call = mutated_mod.get_global_var('func_9045')
call_9046 = func_9045_call()
output = call_9046
func_9047 = relay.Function([], output)
mutated_mod['func_9047'] = func_9047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8279_call = mod.get_global_var('func_8279')
func_8281_call = mutated_mod.get_global_var('func_8281')
call_9110 = relay.TupleGetItem(func_8279_call(), 0)
call_9111 = relay.TupleGetItem(func_8281_call(), 0)
func_658_call = mod.get_global_var('func_658')
func_662_call = mutated_mod.get_global_var('func_662')
const_9116 = relay.const([-0.567439,-1.326189,-5.426145,0.574942,8.951168,7.674394,-0.247544,4.330215,4.162416,4.583928,7.221835,-5.290005,8.452187,5.610453,7.135261,5.473776,-9.789539,3.431518,-9.736638,9.161356,5.242153,6.056411,1.800438,1.758884,-4.307587,8.594527,6.887767,8.554474,-0.511250,9.175789,-3.723734,8.770125,-2.613049,-3.871736,3.601030,-6.502937,-8.160836,-6.112693,-1.916676,1.291945,3.922275,7.737530,-8.640490,7.847191,2.558126,-6.895240,-0.539243,-3.527802,-0.005007,1.458530,-9.272230,-4.938332,8.868073,-3.971034,-2.284291,-3.302771,-7.141786,-7.035682,-7.340137,5.854580,-4.697398,-6.375132,8.807728,-9.594916,3.443881,7.823840,1.596545,-6.211771,9.596384,1.000454,-5.720407,8.446482,1.681622,2.495339,9.661871,9.613687,-2.616956,-9.740525,-5.096622,0.797374,-1.940536,-4.069039,-2.056346,-3.261424,2.531003,-1.746952,8.045997,5.139139,3.657896,2.436504,3.209890,7.721466,-9.385303,-4.666209,-7.615701,-5.613661,-8.070233,-4.324844,3.043487,-3.069123,-8.455775,8.170912,-3.850169,-3.860943,2.560157,6.193294,-7.908550,7.785900,-7.457550,-6.641268,9.360331,-0.615944,9.696459,6.481549,8.678133,9.693412,-9.382315,-0.193523,9.791315,-3.247280,-2.095360,-0.823268,-0.009039,8.220966,1.728031,2.373851,-1.771361,-0.408973,9.830907,-9.538611,-7.114477,-1.074707,-4.012932,2.777274,-4.050845,1.462541,9.183396,7.575543,6.717063,7.247033,-3.066150,3.350950,-8.827026,-7.737828,6.579265,-4.390981,1.292898,-3.700284,6.718254,2.639099,-4.894662,-4.656460,-9.481233,0.236430,-3.398327,-7.210270,-1.924375,2.473706,-6.489946,-8.150980,4.890045,9.952197,8.093427,-6.119308,3.813346,-6.252922,-3.235388,-1.868178,3.099729,-1.583641,-7.368284,-5.772212,2.489955,0.362195,-9.189845,7.942116,-9.791640,-8.910756,6.544522,3.488564,-8.378066,-2.513189,-0.540712,-3.187070,-2.141074,-1.736326,1.972398,5.832818,-5.184260,-4.737583,-5.516598,-8.317610,-0.269428,4.930520,-9.594014,7.143834,-4.483062,6.773982,-7.571462,-5.530848,3.611138,3.512481,-9.751606,6.876136,8.088974,6.422044,3.000130,-3.377759,-8.149963,7.195699,-4.908244,8.989122,-8.045019,-8.628767,-2.774052,-2.707868,9.446676,8.205290,-6.507841,-3.293136,-0.749393,-5.001243,-6.815003,-8.966949,-2.827648,1.585364,-5.472603,5.323838,0.381651,6.209299,7.640851,6.609818,7.191551,-4.127862,6.390793,2.758476,-7.517184,-9.599004,-2.451910,5.926145,-3.520639,-0.747593,6.375654,-6.030428,3.149641,8.129573,4.632268,5.234502,5.547251,-4.076516,-1.367907,-0.292147,6.463233,7.584804,8.905119,-4.399879,0.175317,-5.688962,1.042915,-1.988395,-7.958460,8.557238,-5.988863,-3.498881,-7.470498,5.168995,-7.675554,4.947466,-1.605606,-0.964460,3.155364,7.023030,0.017114,5.705102,-8.779352,7.957599,2.647087,-8.905733,0.801854,2.645187,-5.989296,-7.968828,9.848492,-1.398130,0.303474,3.831931,-7.324353,6.858259,1.881164,-2.515365,-5.091212,-0.768791,-8.180886,-6.730393,-3.571669,0.928679,-3.160343,7.108429,3.979999,4.649497,-8.019351,5.785727,9.840015,-9.699705,8.502559,4.639875,-6.486035,-8.878612,-1.165698,-7.210638,-3.254486,9.910518,-0.400128,-6.219982,8.185838,-8.722580,1.047500,-6.816573,-2.237447,2.809650,3.598766,-8.741217,-5.782175,-7.582787,8.174831,2.318152,-0.485811,-8.123104,-8.947027,-2.502667,-9.439288,1.725852,-5.557833,-9.223476,5.178732,-5.082170,-0.684446,-7.299566,0.658638,-3.476143,-1.060857,7.945125,-5.202932,6.687141,-5.383762,-0.523693,-9.910717,-9.371867,3.940180,6.927680,-6.761076,2.222307,-3.611999,-6.881079,-3.555983,-7.523696,-6.643285,4.564838,3.640897,5.561240,-1.191730,-1.458156,-2.034345,8.397587,-0.989392,-9.540479,7.497357,8.603668,7.136684,4.586405,-6.534041,-5.174421,4.455423,-1.931497,-2.509406,5.183892,9.078389,6.391001,-2.816339,-0.335155,-2.854289,-1.350372,-1.908789,5.930144,6.427212,-7.775546,8.149224,-4.358838,-9.889530,1.323708,0.509308,-1.057996,1.916251,-5.409691,-3.531080,-7.424079,6.227666,-3.681799,-4.039982,4.386528,0.052049,-2.916298,8.870019,9.504181,3.990423,-8.761653,8.400471,8.367187,0.595303,7.240715,-7.233483,-1.504075,-8.332562,-0.445415,-1.289945,-9.284114,8.446741,-4.264292,2.886255,-9.558218,9.219138,7.101120,3.094785,8.090242,-9.951187,6.228773,-7.311367,-8.688236,-9.088693,0.645294,7.550072,-1.002936,-3.964424,0.110072,4.090145,-9.018834,-0.943319,4.566481,2.150224,-4.087336,1.837937,-7.263545,6.896800,-2.802553,6.743905,2.947643,6.228385,1.801547,-9.102738,-6.204762,5.886041,-4.187372,-1.975307,5.740120,-0.843252,-2.808978,0.267574,3.852024,9.292472,4.514104,-6.278867,5.404226,-2.088758,6.912563,6.025715,-9.971025,2.487964,8.325819,0.077878,7.607587,-9.484475,1.601495,-0.124445,8.240748,1.539288,7.256799,5.952474,3.372139,3.930972,-9.928521,-6.691105,6.335207,-9.767417,-0.689485,-5.754389,5.168558,3.443825,-4.911738,-4.157340,5.955819,-1.155987,3.750607,-5.817867,-6.683601,9.637256,-5.117327,6.575772,8.940011,-9.706760,3.308565,3.087476,-9.056339,-4.163603,7.418096,-4.475762,-1.921771,7.623628,-2.861308,-4.320007,4.449405,7.919102,-5.549528,-8.492624,-9.347241,4.272885,5.797197,8.750195,0.175761,-6.730611,-0.975480,9.616508,-4.178450,-1.753671,-7.766673,7.929521,-3.541744,-3.170172,3.850925,5.196231,8.010654,-9.692252,9.219413,-2.613070,1.033390,3.343490,5.371094,-7.987852,4.024250,-5.270953,1.366354,-4.463159,8.950029,-4.866790,3.532440,-7.985808,-0.353914,4.450578,-5.342937,-2.062238,-3.950048,7.828896,6.832742,1.549205,-9.252331,-7.183216,3.629475,-7.962965,9.254596,-3.723859,-2.351495,-6.774559,8.868742,-6.543799,8.998222,8.969621,7.741829,-6.503774,-5.364535,9.742980,2.846186,-6.350857,-0.394801,7.535472,-7.995049,-8.493050,3.381984,7.586554,-9.593297,-4.259167,6.329787,-3.968739,6.044986,6.866806,-6.222298,-2.448747,-8.346699,1.631593,4.933972,1.993559,-8.754712,-2.354092,-8.075916,-1.129557,-4.279423,-7.704934,-3.234917,-7.654439,9.582553,8.649407,-6.613193,-2.557647,-8.620678,-8.719016,-1.502218,1.783444,5.665438,-7.115716,-0.018053,5.547471,-8.509500,-1.393954,-5.355995,-8.766181,-4.847428,6.506987,2.658677,3.039493,1.352545,-2.871497,6.391761,-7.869855,6.509452,-0.839891,1.260944,-9.251291,-6.680844,-2.536983,6.202420,-7.182638,-0.079249,4.846454,0.553381,-3.648690,-4.549890,0.197976,-7.917383,-8.301754,-9.136844,9.205220,-0.639358,7.207093,-4.353913,7.108432,-3.132016,9.219262,-0.923616,1.877439,-1.255048,-8.596979,-8.722817,-6.921217,-1.768903,-9.424092,-9.551548,-4.659088,-4.082152,5.901159,-4.081194,-4.803868,-7.977598,3.007411,-2.568413,9.853138,-4.510669,6.076361,6.732305,-4.957089,9.815681,-9.755872,-2.809091,-5.969581,2.352054,-9.074628,4.306758,-3.253898,-3.214946,-4.395530,-8.411318,7.918724,9.504576,0.091340,1.057036,-0.753942,7.747208,-1.944528,-6.963764,-3.015221,-1.094929,4.502200,1.801382,8.821786,3.545138,2.097531,3.972382,1.750495,3.891224,8.995900,-6.781172,0.653791,1.679546,4.135906,5.394175,5.015543,-8.678630,5.092619,-0.742452,-7.441967,-9.919974,-0.376137,-3.508585,-9.859765,-6.034393,-3.332097,-2.230604,-6.232837,4.474422,3.412315,3.348531,-3.634605,0.158975,-0.468488,7.150932,0.979433,-5.383303,9.811320,9.909672,-2.071753,-9.022692,-8.038611,3.222352,-5.118993,6.312184,2.389870,-3.617260,-8.993159,4.684163,2.866627,5.844868,-1.428425,-5.169002,7.167899,5.610142,-5.705866,-5.520432,-6.903460,3.223037,0.043268,-7.485659,-7.376752,-7.891995,-8.207527,8.376077,-3.145976,3.061580,-9.831032,2.714891,8.179459,1.336064,-2.204986,9.804236,9.685987,9.477913,7.850277,3.174133,-8.004268,-2.160351,4.849195,-9.318786,9.212124,-3.936131,-2.112890,0.579556,8.838859,2.064508,-0.989736,-8.584757,7.654227,-9.319676,-1.685370,-9.979979,-6.688189,8.069842,-1.707135,1.225495,1.773214,5.725595,6.379879,-3.148063,-9.056724,-0.879873,-1.386743,-7.596397,-3.128011,-0.253061,3.784667,2.643123,5.759700,2.416062,0.293541,7.249023,2.916032,-6.399791,4.136926,4.272878,-6.020476,0.417613,-6.224198,-0.591335,-5.508482,8.202871,-6.191955,9.512967,-0.073004,6.994895,-4.583383,-2.065322,-2.580687,-6.162432,6.057238,2.969641,-5.246627,-0.799442,-9.262879,7.519009,8.580808,-7.227510,-6.839954,-9.710935,0.277555,-2.321309,-9.295704,6.630724,0.116530,9.255539,3.959808,-2.724527,7.344407,-3.748075,5.102064,-6.307104,6.704066,-8.125035,4.536253,-0.004853,7.768162,-0.592607,2.352507,-4.722704,2.167285,-7.298218,-6.722592,-6.405041,2.097655,6.659743,8.068742,-5.054563,4.830430,-9.337245,1.419653,8.524719,0.734118,-1.274055,0.994341,4.577573], dtype = "float32")#candidate|9116|(864,)|const|float32
call_9115 = relay.TupleGetItem(func_658_call(relay.reshape(const_9116.astype('float32'), [12, 9, 8]), relay.reshape(const_9116.astype('float32'), [12, 9, 8]), ), 0)
call_9117 = relay.TupleGetItem(func_662_call(relay.reshape(const_9116.astype('float32'), [12, 9, 8]), relay.reshape(const_9116.astype('float32'), [12, 9, 8]), ), 0)
output = relay.Tuple([call_9110,call_9115,const_9116,])
output2 = relay.Tuple([call_9111,call_9117,const_9116,])
func_9121 = relay.Function([], output)
mod['func_9121'] = func_9121
mod = relay.transform.InferType()(mod)
mutated_mod['func_9121'] = func_9121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9121_call = mutated_mod.get_global_var('func_9121')
call_9122 = func_9121_call()
output = call_9122
func_9123 = relay.Function([], output)
mutated_mod['func_9123'] = func_9123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8773_call = mod.get_global_var('func_8773')
func_8775_call = mutated_mod.get_global_var('func_8775')
call_9142 = relay.TupleGetItem(func_8773_call(), 0)
call_9143 = relay.TupleGetItem(func_8775_call(), 0)
output = call_9142
output2 = call_9143
func_9149 = relay.Function([], output)
mod['func_9149'] = func_9149
mod = relay.transform.InferType()(mod)
output = func_9149()
func_9150 = relay.Function([], output)
mutated_mod['func_9150'] = func_9150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7647_call = mod.get_global_var('func_7647')
func_7649_call = mutated_mod.get_global_var('func_7649')
call_9187 = relay.TupleGetItem(func_7647_call(), 0)
call_9188 = relay.TupleGetItem(func_7649_call(), 0)
output = relay.Tuple([call_9187,])
output2 = relay.Tuple([call_9188,])
func_9192 = relay.Function([], output)
mod['func_9192'] = func_9192
mod = relay.transform.InferType()(mod)
output = func_9192()
func_9193 = relay.Function([], output)
mutated_mod['func_9193'] = func_9193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8279_call = mod.get_global_var('func_8279')
func_8281_call = mutated_mod.get_global_var('func_8281')
call_9194 = relay.TupleGetItem(func_8279_call(), 0)
call_9195 = relay.TupleGetItem(func_8281_call(), 0)
func_1866_call = mod.get_global_var('func_1866')
func_1869_call = mutated_mod.get_global_var('func_1869')
const_9197 = relay.const([[4.984107,5.944807,4.426928,-2.518593,2.631206,6.334529,2.895048,4.812351,2.528131,8.183853,2.513981,-4.867167,6.232047,6.854491,-0.521272,0.756212,-2.674403,-5.651337,5.808153,-2.065946,1.411690,-2.244192,-8.558593,8.990126,5.600254,-2.983202,5.539333,-9.093490,-4.456753,-7.447595,-5.007985,-9.421976,-6.718859,-9.252816,7.910651,5.515024,-0.689186,-4.003426,0.078240,0.573638,-0.766841,5.807685,-8.709691,-8.493073,-6.602420,-8.374191,-5.471849,1.013487,3.474049,5.148284,5.059614,1.160106,-6.079006,-7.649640,4.537148,3.418691,-0.798692,0.099219,-2.201490,3.931796,-3.982695,2.156175,9.480500,-7.570612,-6.333353,9.715197,-3.928698,-0.568020,-2.685420,-6.997141,-3.513411,6.505991,3.307612,5.367521,-6.103922,-2.026493,-5.938171,-3.963234,-3.101706,-0.365337,-9.682513,-7.397754,-3.698090,3.949178,-0.824010,4.694368,5.685028,2.921282,0.272335,4.809465,0.833939,3.325516,0.953150,0.541539,-4.635375,7.722964,-6.040569,3.472080,-9.623412,8.978126,-4.964040,8.177136,-6.019864,-6.967800,0.690058,0.708494,5.234188,8.182547,-0.721183,9.336791,-2.049617,7.081078,-6.862241,-0.087528,-6.352518,6.373615,-0.619836,-0.345539,3.935455,-9.160555,-2.621853,-9.362546,-7.241516,6.702023,-1.638837,7.772836,6.517639,4.229534,4.784772,-4.307041,-7.087963,7.896641,-5.226129,7.635318,-3.718817,-5.427022,9.904133,9.037512,-6.726940,8.609039,6.896124,-5.428233,9.169261,-9.599979]], dtype = "float32")#candidate|9197|(1, 144)|const|float32
call_9196 = relay.TupleGetItem(func_1866_call(relay.reshape(const_9197.astype('float32'), [1, 16, 9]), relay.reshape(const_9197.astype('float32'), [1, 16, 9]), ), 0)
call_9198 = relay.TupleGetItem(func_1869_call(relay.reshape(const_9197.astype('float32'), [1, 16, 9]), relay.reshape(const_9197.astype('float32'), [1, 16, 9]), ), 0)
const_9203 = relay.const([[-2.011784,3.706567,-3.061732,-7.292570,4.766059,1.105453,-0.191749,6.239311,9.655758,-2.610179,8.182538,-3.780523,0.457456,1.938745,1.749754,7.374654,2.209304,8.708114,-3.786416,-4.341208,5.409102,-4.690360,5.100692,-1.498763,-1.000350,-7.546534,0.149362,-5.041756,-7.452612,-1.537992,-9.686838,7.715847,-2.949847,-9.540583,-6.321045,0.686785,-9.404365,-7.563295,0.848805,5.260242,0.850821,3.609931,-7.496999,7.605409,1.897327,-3.922602,1.421463,1.610308,-5.024062,-5.037227,-4.828601,6.336980,-4.919689,6.263256,-0.232025,8.826176,-4.861721,5.032953,-9.577851,6.578172,-6.377221,-1.099261,-9.635913,8.871018,6.111297,1.465813,5.276743,-8.299098,-8.540563,5.336374,-8.622616,-6.894915,7.653418,-4.709803,-5.529667,-0.437094,6.205065,5.201983,-7.089629,3.497882,-6.600386,-1.235553,3.648814,1.031040,-2.363606,-1.407306,9.766567,4.975515,-0.497061,0.768916,3.106835,1.405121,-8.758996,-4.701181,-5.999940,-7.266984,6.876726,-8.728366,3.980937,-6.316912,4.036772,5.020091,-1.853287,0.102012,-5.003646,6.138008,-6.214322,-9.896507,1.491664,-4.645283,-4.662875,7.941521,2.858144,-9.871520,8.834071,-2.463557,-1.381164,-8.086156,-3.671886,9.601213,-2.942274,-6.819632,-7.584998,2.388064,-2.635430,3.408657,-7.377699,-6.126820,-7.864917,-7.150863,3.584052,-2.497168,-3.189591,-5.823757,4.993244,9.627419,8.265456,-2.612538,6.994872,5.588728,5.017128,-2.095997,1.481927,6.151138],[-6.679160,-9.129400,-9.030684,1.737210,5.508263,1.045331,4.395847,-5.070890,6.114645,-8.640922,-5.077508,-2.568796,-1.893872,2.044599,5.313617,-4.656060,-2.583230,8.405793,1.726194,-9.198258,6.283294,5.164889,-4.208393,8.290400,7.416999,-9.455089,8.339454,9.162138,-6.094651,-0.663912,-9.420497,1.948322,9.183290,7.029434,5.529854,0.047881,-3.730029,7.756158,-6.199896,-0.275124,4.419841,5.547950,6.178523,-1.755516,4.279255,9.668591,1.314145,-0.905103,6.770113,-4.550570,5.903034,3.125434,-6.916135,1.814186,7.671899,-8.092525,-0.561113,-3.437942,2.301909,3.629544,1.551408,-4.470560,7.245744,9.117075,-9.344402,0.600507,5.034630,4.894644,-5.700786,-1.289636,-3.777619,-6.789670,-0.519686,-3.355618,2.826759,-9.821557,-1.876598,-2.474816,2.670958,6.011343,5.201340,-9.830187,0.842579,-0.945657,-0.290703,-8.621842,-3.153032,0.861633,9.518305,-5.508996,-7.869602,7.582044,6.653031,-4.576174,7.897813,-4.465158,7.656422,2.428594,8.320325,-9.478455,-4.009916,-5.533488,2.569181,1.895296,-4.059013,0.208280,-5.747892,8.622379,-6.265672,-6.163202,4.562970,-8.625864,9.327808,-1.040846,-9.797689,-1.219040,2.178012,8.014376,2.232626,4.751260,-6.476592,-0.393993,2.208305,-5.517609,1.332990,7.830287,8.489282,5.691997,8.173859,2.248229,-5.006101,-2.322829,0.341400,-9.677140,-9.646716,-4.795328,4.345915,9.466993,-9.504843,-7.594574,-8.379159,2.727152,-0.625691,8.051894],[-9.976934,0.163077,-3.183033,-9.944460,3.880949,-8.175065,-6.737036,-1.685091,4.427198,-6.505378,4.216686,-2.505903,-0.859802,9.268512,-0.445135,-6.842899,-5.468727,-6.113284,5.746426,-4.929267,5.670903,-5.360880,7.272452,8.150830,-1.000777,-7.274972,6.910974,6.928019,-5.731312,-7.011540,4.619676,1.498684,-2.059396,2.766115,-4.710828,-0.095629,-3.963096,1.816180,2.172356,3.898852,-2.070486,3.479737,-3.592566,7.116248,7.308788,7.482830,-3.516283,-9.618905,-4.371192,-3.512459,9.473877,8.061629,4.298338,4.335094,8.902715,-3.706593,0.245610,8.471801,2.318452,-7.472615,-7.081103,3.993799,1.701892,8.520327,3.723586,-9.381354,-4.339624,7.579966,0.275820,-4.036315,2.820022,-5.547335,-0.016270,-7.789535,6.229955,3.109702,-2.908851,-9.546280,-1.658714,-3.477266,-3.971992,7.313137,-8.159373,-6.415052,7.666061,-5.050439,-8.731380,8.976068,5.245602,-0.632958,7.020314,-3.394240,-8.556607,0.240372,3.122374,8.416583,-8.686069,-6.878271,8.978495,-7.623014,-8.872108,5.758044,-7.397593,4.019328,-0.443704,-3.674700,2.727286,8.400482,2.172345,5.055568,-1.419133,-8.989446,2.587887,1.859623,-0.921970,3.775927,9.786371,6.352236,-6.299819,4.065295,-5.816237,-4.658294,-6.883806,0.886291,-0.477622,-9.601471,6.846909,2.668229,-0.482119,7.895642,2.812864,7.230599,4.529486,-3.333976,5.866706,-4.750502,4.932146,-1.725692,6.105585,4.440690,-7.505670,-7.136771,5.232722,-8.560716],[3.334332,-6.864815,-0.803172,1.650112,-7.650626,7.460374,5.876647,7.733927,-0.332463,-2.971056,3.164636,3.809295,-3.605692,-7.564748,-5.306874,2.717255,-3.441121,-9.454964,4.503619,6.230314,3.102056,9.417831,-4.604162,3.205880,-0.917207,-1.948377,7.589542,3.802942,-1.280276,7.105698,-6.890376,-1.680119,-2.428173,-3.507513,-4.972335,0.015459,-9.710334,-4.351053,0.200863,-0.569338,9.873741,-1.772898,-4.381099,-8.840869,8.494650,2.735001,-1.510620,-3.212891,-2.834897,-9.194192,-7.262102,-6.334854,5.667334,-0.865565,-9.264044,-8.642320,0.808324,6.061930,6.213894,-6.286694,7.361898,-9.021019,1.757705,4.936790,8.495123,-2.080738,0.428141,9.015298,4.536240,-0.483562,-5.938268,-7.207134,9.984262,8.091328,2.788451,9.102090,-3.643140,5.426984,-5.740034,2.435383,-6.431176,-4.194642,6.424496,-8.376012,8.321212,-0.435183,-0.773799,3.589226,-5.662835,-1.035520,2.917761,1.782024,2.579871,8.306320,5.547064,-1.564513,6.768810,4.359405,-8.252579,4.941205,-0.034400,5.674027,-4.430811,-2.653439,9.207125,0.907777,-9.887029,-5.045665,4.083552,-4.427453,1.924573,-6.028376,1.116311,4.372917,-9.190744,8.170311,-0.550718,5.696872,2.693737,-8.214819,-0.481952,7.911491,-5.660828,-7.574096,-2.365130,-7.420309,1.436279,-1.774058,-1.531757,-8.529499,-8.002717,-0.451074,-2.769601,-2.881752,7.539203,3.888620,-4.792596,6.272365,-9.202519,-4.806958,-6.481914,-5.220451,8.827055,-4.506031],[-4.573725,-6.927356,-3.859599,-0.010718,-5.968099,-3.300606,1.601589,2.612166,4.660753,-0.766174,4.943602,-6.818503,9.789025,3.302579,8.886121,-3.188564,6.812658,-0.274271,8.636241,-5.696810,3.093548,-2.375981,-2.521697,-5.551208,-3.220436,-9.038848,6.512837,6.458971,1.796666,-5.870619,-0.273513,0.234922,2.884752,4.649527,-3.651696,5.311698,-9.646153,-7.351215,2.015470,-6.619179,3.464151,4.941829,2.079364,4.746534,-6.332563,6.662186,-2.699547,-0.910728,0.229095,8.630355,1.141528,5.669481,-5.793048,3.573102,9.537292,0.177466,-8.683460,8.210773,9.337652,-0.446028,-8.249911,-7.565220,-4.616400,0.139672,-0.657788,4.797412,7.159592,1.667789,-9.651462,9.784391,4.511537,-7.320529,-2.152594,1.472150,-5.869481,8.497765,-6.753804,-1.766458,-0.118250,-0.423532,-8.241019,-3.587264,-6.458598,1.654213,-3.187500,-7.391118,0.174051,2.365386,6.198763,6.059819,7.022860,-5.549072,-0.940628,-7.055924,-0.143131,6.890856,2.854574,-9.063264,0.867272,-5.706638,2.229920,6.076683,-7.855005,-8.756139,-6.086758,3.757158,-3.416766,5.328238,-1.921182,0.851911,-9.324639,5.884818,-2.293067,6.799874,3.609306,-0.021941,4.630274,9.320286,-2.652895,8.467660,2.054218,-0.242168,-5.979938,-9.741760,-3.424152,-9.244787,-8.110972,-2.715978,4.470987,1.719854,9.181755,7.290155,2.329208,-8.840261,-4.231078,-6.891048,0.546105,5.887703,-4.359464,-7.407362,6.428463,4.810959,7.086555,4.053919],[-6.628240,3.441536,-7.965545,-8.799151,-6.951556,8.666650,-6.862127,-3.353188,7.140492,6.909801,-0.143320,-6.202774,-2.026790,6.949758,7.192230,6.256867,0.301268,6.532429,1.568569,-1.515998,9.351937,0.091784,8.603589,6.235530,7.491047,5.478315,-6.364522,-6.670191,8.718908,-0.754716,-5.833326,-1.443960,1.977270,8.247497,4.217079,-2.727988,7.827845,-3.348575,7.824705,8.510295,3.927550,-9.068957,-4.595239,-0.841653,3.421506,-0.917441,-7.052631,0.875460,9.995275,2.864375,-5.188209,5.444307,9.118042,8.611409,5.991429,5.947799,7.814707,-8.758420,-8.820130,3.950073,-3.954726,2.637167,9.970355,-4.637431,9.141625,1.105633,8.432136,-0.404334,5.449460,2.707750,-7.228437,2.703455,9.280245,-2.850168,-8.405671,4.042347,8.563058,-5.780562,7.006049,0.411934,-2.183087,3.285765,4.038330,-2.300924,4.102724,5.035986,-7.378448,6.770527,6.067471,-8.931615,4.547345,-2.995893,-8.684275,8.187657,9.058393,3.952254,-5.654582,3.677120,-1.463755,-8.551680,5.227266,1.304002,-4.408138,7.989043,-8.914682,6.482737,6.568411,3.088913,-4.012719,-3.848915,0.608789,1.673048,-5.497756,-6.632922,-1.191710,-1.366574,-2.062332,-0.580806,-9.144330,-6.627505,8.569011,-3.890141,5.130329,-5.478085,3.816725,0.018757,-9.120487,-2.312678,5.089505,9.924412,9.490239,-7.486574,-4.809464,-1.413611,-6.682503,3.872909,-4.975092,5.512099,9.317841,-3.610724,-9.556678,-1.448006,-7.986341,0.178762],[6.251858,-4.368771,-8.548629,-8.079128,9.681939,3.751451,-5.353651,7.163478,-6.563850,-2.614574,-7.625866,-7.569818,2.627085,-5.118525,5.065365,4.038892,-0.126943,5.771155,-3.181105,4.664358,-3.399027,-5.157567,-3.296441,-8.943566,-4.747365,-7.945391,4.651272,1.640042,9.585308,-8.461436,8.394915,0.561473,2.360645,-9.508054,3.815623,7.330767,-5.932319,-0.301717,9.448351,5.624757,7.250259,8.013121,1.990382,7.091937,-2.208119,2.456593,-9.055587,0.656831,-0.086905,4.968332,-4.725791,0.051330,-9.764044,5.934127,-8.591186,4.347981,-7.505203,-2.172587,9.512371,5.948280,-8.559975,0.294313,2.233056,-8.736164,-5.668563,3.995867,2.074954,6.259679,-3.039799,9.135169,-6.175949,0.644976,5.504784,-9.768718,9.620977,-1.798017,-3.275715,-3.054110,3.552566,1.773617,8.973445,-2.468970,-3.819241,-3.022557,-2.515517,3.171113,1.180245,3.778597,2.600023,5.096417,9.132418,-7.256253,-9.023217,-9.342571,6.540579,8.736778,-4.567197,6.868648,-3.015993,-5.524695,-0.480673,2.813928,-1.663534,-8.962765,-9.420186,-8.427433,-4.326618,8.099856,-0.024637,-4.105620,-4.295049,-2.997216,0.911483,4.911453,0.104508,-6.957024,9.357311,8.806674,-7.898327,5.215549,-0.824795,5.074994,-3.650846,4.899970,-2.738112,2.415935,7.567684,7.492811,4.183322,-0.088605,-4.392776,-6.473470,-3.885635,5.602564,-8.307431,5.456561,9.572656,0.329968,-6.471089,-8.738654,-3.702462,2.791997,2.113360,-8.960133],[1.750709,9.119571,0.298608,6.722461,-4.300583,-1.603883,-1.172848,4.936716,-8.130620,9.897811,0.301035,9.473797,4.452072,9.903710,-6.680697,-5.374679,9.168685,8.145135,6.185104,-0.534888,-3.777869,-5.699310,4.047125,-7.885718,-3.165807,-6.791613,1.899036,4.341036,-8.414094,7.547320,-3.607980,-8.601838,0.798881,-5.692345,-9.663543,-5.925833,-7.964771,9.690953,-9.310773,3.442475,-4.619491,-7.573113,-2.777438,-0.642000,2.229856,1.169172,4.217440,7.919106,4.595579,-5.586026,-9.845485,-6.009889,7.149188,-0.875828,1.708219,8.506604,6.077890,7.124341,9.036831,-2.906369,5.835093,5.031860,1.294644,-9.108438,-1.980602,6.572550,3.347061,2.845658,8.070561,3.811909,-2.797138,-7.758814,-0.887233,0.915541,-1.417088,-5.864238,1.275953,-4.220889,-5.071637,3.469394,8.133724,-2.196958,3.364317,-0.498513,5.151566,3.828807,-7.107658,-8.539533,-4.427985,-9.407985,1.921905,-9.018252,-0.016183,-8.542800,8.610811,-5.756970,-5.498339,-1.534600,-9.748710,-0.691966,-8.810580,5.059074,-9.970656,3.387585,3.519953,6.119531,3.174752,2.706499,-2.874129,-1.620678,-8.673349,9.688403,7.354587,-2.582328,-4.155755,-2.446185,-2.459853,9.719025,6.059026,2.613931,-1.282162,5.078244,8.969142,-6.030671,-0.171482,2.320960,7.815073,9.562284,-2.096790,-6.960683,7.498553,4.865587,9.580404,-6.473419,-5.936200,7.826985,-0.187083,-5.426617,-7.598163,1.954898,7.179868,6.452008,9.327085,-1.625446],[-5.731015,-6.228535,4.547250,9.374888,-2.230511,1.355707,-9.270225,-7.548189,1.896887,-7.311583,1.631579,1.485363,-8.383711,7.848416,8.166086,-8.932875,-3.043423,5.981011,-1.677146,-9.031530,-6.510360,6.382615,9.437603,4.138733,-5.946978,-4.794414,-3.830345,1.596025,-3.033761,-9.911454,-7.183868,5.107732,-4.056354,-1.042728,0.830821,8.345202,-3.029059,-1.672147,-2.883946,-2.292780,3.927102,-9.761807,-6.836617,9.235571,-8.658437,3.285501,-5.043869,-6.553463,4.288628,1.494026,6.165899,4.812306,-4.470950,3.531674,8.725044,9.046181,-9.570077,-2.733982,8.853482,3.906038,-3.166867,-2.865532,5.321260,6.218353,2.029414,-4.719475,4.130624,-5.147100,9.204002,8.625858,-9.475438,-2.746399,-8.631656,0.554087,-0.076045,-6.942745,3.374686,8.706706,9.550712,-0.330334,6.928394,4.989056,-6.016899,-7.069991,-8.519802,-1.515705,4.416402,5.674120,-2.800494,1.288331,-6.160458,5.072332,3.628700,-8.202402,8.181311,2.482196,1.696087,7.063777,6.370003,-8.363975,9.858695,-3.202315,5.358387,8.963909,-7.279200,-4.800628,-4.770036,5.668787,-9.553187,-0.989732,-8.977972,-4.266332,-5.651188,7.477457,-8.320274,4.378187,-4.635970,-2.123692,-6.230159,8.093481,-5.145840,2.169092,1.620887,-3.356291,-0.720663,2.255902,5.627595,1.636764,-6.352972,1.949622,-0.327231,-3.386027,-3.630337,-4.982046,-3.289276,2.915003,0.978119,6.510699,1.459781,-6.375348,-1.533636,-6.852875,4.401019,-1.190936],[-3.609748,-2.095385,-8.924947,-4.015705,3.885837,5.247683,-2.392028,8.097681,4.181395,1.444529,-3.864782,3.764873,3.520758,-0.390997,8.092123,-6.902607,-4.276267,-0.814788,-6.021729,3.212989,3.030595,3.832097,-3.004828,5.463467,-6.211900,-1.798388,-9.258556,6.366629,-5.788604,-3.614360,-6.789211,9.787321,-5.132514,-0.465128,-5.696797,-6.595390,-3.723200,-7.324389,-1.869980,6.425292,-1.992438,-2.141557,4.310051,-6.757199,0.914953,9.415394,-0.558473,2.918466,-3.963599,2.049838,5.207061,-7.670146,7.192228,-1.921876,-1.298823,-8.860056,-8.224105,3.129408,2.074033,1.599838,-5.877346,-4.305374,3.799751,2.529419,5.844342,3.151412,7.449568,8.765679,-5.130547,-4.328577,6.859803,2.008832,3.176624,2.650177,-1.836176,-5.297660,9.997422,7.835676,-3.886714,-4.426161,2.265695,-9.606725,7.304141,-4.428159,-7.724136,-3.077780,2.344825,4.115182,-6.744101,1.194661,1.302380,6.928237,8.725000,0.348022,-4.088395,6.325152,8.670579,-5.168226,7.102659,-1.524301,7.435157,5.257327,-8.283174,-7.812761,7.804019,-4.307385,1.043817,2.292223,-8.633468,-3.962270,-8.374086,4.289807,4.402094,-1.942426,-2.121443,-7.998773,2.958591,-1.802459,-6.947545,-4.595727,7.531146,-2.794007,7.452379,3.640897,5.772356,-4.461843,9.546573,0.745847,3.904694,-7.435500,3.778377,7.912744,-2.078179,-1.230873,-7.510416,5.361596,4.701998,-8.284573,1.227780,8.407782,7.771953,8.740596,5.491479,-8.986516],[-6.390693,-3.754443,1.918431,7.768895,4.736206,4.518044,-8.506402,5.344319,-3.785259,-0.302285,8.488069,-5.472125,5.155514,-8.911740,1.853281,0.588275,6.387742,9.915069,-5.463288,-7.126044,-3.066806,0.849280,-4.182566,0.586355,8.589812,9.882129,1.623082,3.523701,4.289160,9.137860,-1.523271,-8.172059,-9.579163,1.558926,-6.596427,-0.244955,9.719654,-0.467890,7.126064,-6.805609,5.243405,9.771215,-2.336512,-4.123519,-0.483635,-3.994549,-3.675127,-0.304546,-9.434748,7.227605,-5.011899,9.001585,-4.341563,3.119714,8.502017,-5.307919,5.636828,8.944503,-8.995470,6.898997,9.485672,-2.817659,7.561490,-8.433508,-4.176106,-0.449710,-2.000448,-6.012048,7.273331,-4.882656,8.157465,-5.652082,-7.519667,-6.077369,5.918838,-1.163065,5.882522,-2.390374,9.406081,-8.153440,4.412989,-9.625819,5.869163,-1.255392,9.769288,7.312565,6.983890,0.265031,-3.380948,-9.540941,-5.210008,-2.635264,4.831786,-1.759455,-5.662327,-8.262751,3.178456,7.909447,2.017354,-7.252909,-4.343832,-4.151203,3.027656,5.147288,6.183005,8.038649,-8.142688,-5.248065,-8.296944,0.861707,2.213386,-5.156113,-8.910043,1.947374,5.635405,-0.059584,-8.879921,9.607924,4.853971,0.160247,2.476023,-3.771454,-9.874862,3.533417,4.772188,2.004038,2.279965,0.113553,2.581276,7.272320,-4.056775,-1.019499,-1.822665,-6.475301,9.466183,9.501130,-0.998545,-7.645009,-9.060864,-1.471907,-9.672912,-1.088297,4.993913,-8.311056],[6.038893,-9.435983,2.586461,-9.822594,-1.363107,8.375136,-3.656927,-0.277293,-7.084551,9.028738,2.830629,-8.346900,-6.752879,0.750295,6.145494,-4.503992,2.570205,-2.798460,-3.091513,6.812087,-8.162945,-5.070242,7.943936,7.724064,6.667129,-1.786420,-2.374007,1.253059,7.910232,1.219437,-0.621221,3.780336,-6.332225,-3.004093,-2.116257,7.150941,7.095560,1.217364,7.252902,-9.180676,-5.302576,3.460825,-4.250291,0.406822,9.534003,-0.598853,-1.027914,2.924439,6.178994,1.813555,0.554422,-7.051666,-9.934307,4.910922,9.070381,3.840099,-1.097108,-2.226996,6.490489,1.854017,-7.680881,-6.798391,7.446785,7.857598,9.785512,1.217429,-2.201126,5.804801,8.640923,-9.660672,3.347381,-0.776984,-9.458415,-0.336404,-8.994728,-8.944189,5.068159,-4.892744,-0.436160,1.081177,-5.654633,2.757410,6.236031,-1.773566,3.298493,9.279976,-0.811048,5.077032,-4.078219,-5.147677,0.001374,-5.533651,2.449838,2.523075,-3.695113,0.497206,2.710226,4.357916,-1.766202,-7.788904,-7.906447,-1.891746,8.898640,2.253290,9.053706,1.747426,-4.229694,1.705119,-7.718387,-1.477401,8.862129,5.521786,-6.112583,2.019424,-9.772815,-9.656165,4.088466,0.784511,-3.266939,6.196315,-2.242267,-5.454314,-1.525407,-6.263191,7.502328,0.766854,6.073399,3.345025,-8.461484,-7.138915,-2.392428,4.636881,4.652637,8.585371,-4.974664,0.073138,4.352208,0.198214,5.302582,-1.519675,-7.136158,3.426885,-0.672632,0.058790],[-3.727270,-3.556531,6.217937,-1.132944,-4.734922,-9.122842,-7.409347,-8.437818,-7.738038,9.659176,3.419163,-0.228382,-3.827874,8.473043,-2.582486,1.340360,-5.875372,-4.640854,6.459781,-0.031010,-3.791923,-1.755939,-1.149216,-3.566314,0.120160,-5.367490,6.696663,-1.240775,4.475057,-0.436615,8.604944,-3.949646,7.547547,9.004301,3.518115,7.876842,-8.354201,0.461385,-4.962942,9.277540,6.392328,-0.998817,-1.278174,-3.716832,8.107919,-4.443025,-2.638318,-8.014121,2.859943,7.016430,-1.189884,-6.956433,-6.150955,5.322048,1.349920,-5.662980,8.738439,0.032950,-7.814769,7.080920,-5.102692,-5.370694,-7.679162,7.632267,-8.974083,-8.799512,7.017858,7.833638,-0.600652,-4.602563,-4.231419,8.154460,0.456843,6.656975,-3.177814,9.842368,-8.347080,-3.378929,4.453752,-5.767025,-3.509484,-9.472497,8.733638,2.743501,-0.339172,6.300176,0.434331,-0.136812,3.871162,-9.110501,-8.465399,6.369427,1.379209,3.153358,8.726321,-7.618558,0.487779,9.115322,-4.283617,-5.023541,-4.201612,0.466039,-1.685230,-4.102656,-4.506695,-6.865594,9.352985,1.516086,9.198072,6.315861,1.745493,-7.336621,-2.384926,3.534942,-8.705027,7.771898,-5.112282,-5.930235,9.592858,-3.693404,5.348944,-0.221727,-5.588093,2.128756,9.730753,-3.141351,-1.999530,9.451416,-7.820361,-6.410981,-0.750837,3.048033,-1.819236,-4.643475,1.942749,8.656550,4.598652,3.613794,-5.071134,2.893853,8.141683,-4.564053,-6.305278,-8.391982]], dtype = "float32")#candidate|9203|(13, 144)|const|float32
bop_9204 = relay.power(const_9197.astype('float64'), const_9203.astype('float64')) # shape=(13, 144)
var_9210 = relay.var("var_9210", dtype = "float64", shape = (11, 5, 4))#candidate|9210|(11, 5, 4)|var|float64
bop_9211 = relay.greater(call_9194.astype('bool'), relay.reshape(var_9210.astype('bool'), relay.shape_of(call_9194))) # shape=(11, 5, 4)
bop_9214 = relay.greater(call_9195.astype('bool'), relay.reshape(var_9210.astype('bool'), relay.shape_of(call_9195))) # shape=(11, 5, 4)
output = relay.Tuple([call_9196,bop_9204,bop_9211,])
output2 = relay.Tuple([call_9198,bop_9204,bop_9214,])
func_9230 = relay.Function([var_9210,], output)
mod['func_9230'] = func_9230
mod = relay.transform.InferType()(mod)
var_9231 = relay.var("var_9231", dtype = "float64", shape = (11, 5, 4))#candidate|9231|(11, 5, 4)|var|float64
output = func_9230(var_9231)
func_9232 = relay.Function([var_9231], output)
mutated_mod['func_9232'] = func_9232
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9234 = relay.const([[[3.622571,-0.555508,-5.905676,8.416433,-8.761763,0.971534,-2.929554,-2.538592,-4.732663,-9.677227,7.233778,-1.107267,-5.928650,-7.715871,5.114002,-4.953129],[-5.406451,9.527368,5.987036,-7.650262,-3.181973,3.358628,-2.727588,9.285889,-8.299385,2.298665,7.762090,-1.670174,7.721938,-3.471408,-9.504478,0.493719],[5.109011,0.468650,4.452478,3.986633,3.148752,-1.540746,-5.723492,5.018207,0.992000,-2.750528,-6.230877,-5.117119,8.109470,-5.853077,8.996417,-3.034677],[1.778728,-1.289858,4.447934,-5.026604,-5.722597,3.840423,0.010505,2.230498,4.253415,5.861126,3.791057,3.641224,-7.757928,-4.076257,7.155286,6.522793],[6.589226,7.017544,7.617766,0.487609,-9.739332,-2.811461,0.366756,-9.026561,1.263022,7.255489,1.617531,6.767604,-8.505788,-4.370267,-6.848839,-2.335039],[7.763040,-0.411338,-2.060358,-1.808964,-7.110523,-4.895413,-8.095258,-3.566552,-7.348122,-5.574169,-2.705585,7.656178,-1.205433,-7.743089,9.740913,-6.137964],[-2.061219,0.578579,-2.004235,8.741596,-2.844838,0.812883,-3.450424,-3.506951,5.539939,8.816083,-8.714588,-8.267307,-7.603857,6.748307,-4.727374,-1.925882],[3.388101,9.803298,6.702390,-3.579598,-4.735240,-3.832522,-0.335443,6.158770,-9.070186,0.755916,6.116590,5.555218,4.945062,-1.166049,-7.774301,-7.482952],[-2.569794,3.636248,1.607198,-8.861631,6.441731,-3.841433,9.456527,2.626475,-0.119332,7.008321,3.907668,1.113796,0.937199,-5.016714,-3.778331,4.396122],[-6.107277,-5.514768,4.511905,2.637388,-6.580804,-5.574089,9.207514,3.653553,-3.277117,6.030031,1.558395,-6.479849,-9.499970,-9.744034,-6.832359,-2.288315],[-8.244752,-2.383737,0.852445,8.308302,2.125302,9.359778,4.703941,6.848576,8.917008,9.439992,4.333239,-7.598011,-1.607713,2.829463,-8.814226,9.447747]]], dtype = "float64")#candidate|9234|(1, 11, 16)|const|float64
uop_9235 = relay.sinh(const_9234.astype('float64')) # shape=(1, 11, 16)
output = uop_9235
output2 = uop_9235
func_9243 = relay.Function([], output)
mod['func_9243'] = func_9243
mod = relay.transform.InferType()(mod)
mutated_mod['func_9243'] = func_9243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9243_call = mutated_mod.get_global_var('func_9243')
call_9244 = func_9243_call()
output = call_9244
func_9245 = relay.Function([], output)
mutated_mod['func_9245'] = func_9245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9149_call = mod.get_global_var('func_9149')
func_9150_call = mutated_mod.get_global_var('func_9150')
call_9255 = func_9149_call()
call_9256 = func_9149_call()
var_9260 = relay.var("var_9260", dtype = "float64", shape = (11, 5, 4))#candidate|9260|(11, 5, 4)|var|float64
bop_9261 = relay.logical_xor(call_9255.astype('uint32'), relay.reshape(var_9260.astype('uint32'), relay.shape_of(call_9255))) # shape=(11, 5, 4)
bop_9264 = relay.logical_xor(call_9256.astype('uint32'), relay.reshape(var_9260.astype('uint32'), relay.shape_of(call_9256))) # shape=(11, 5, 4)
uop_9274 = relay.log(call_9255.astype('float64')) # shape=(11, 5, 4)
uop_9276 = relay.log(call_9256.astype('float64')) # shape=(11, 5, 4)
func_2363_call = mod.get_global_var('func_2363')
func_2366_call = mutated_mod.get_global_var('func_2366')
var_9295 = relay.var("var_9295", dtype = "float64", shape = (528,))#candidate|9295|(528,)|var|float64
call_9294 = relay.TupleGetItem(func_2363_call(relay.reshape(var_9295.astype('float64'), [12, 4, 11]), relay.reshape(var_9295.astype('float64'), [12, 4, 11]), ), 3)
call_9296 = relay.TupleGetItem(func_2366_call(relay.reshape(var_9295.astype('float64'), [12, 4, 11]), relay.reshape(var_9295.astype('float64'), [12, 4, 11]), ), 3)
uop_9304 = relay.asinh(uop_9274.astype('float32')) # shape=(11, 5, 4)
uop_9306 = relay.asinh(uop_9276.astype('float32')) # shape=(11, 5, 4)
func_8230_call = mod.get_global_var('func_8230')
func_8232_call = mutated_mod.get_global_var('func_8232')
const_9309 = relay.const([3.132243,1.877815,6.556347,4.225132,6.528988,-2.645860,-3.089944,-3.570528,8.151315,2.859037,-9.981416,-9.482738,4.441446,-7.333450,1.829001,-2.462341,-2.358583,-5.859103,-6.055861,-4.478605,-4.225984,1.891683,-8.605545,2.946343,9.176351,-8.585568,3.905054,3.818737,-0.083546,-8.732566,-2.211656,-5.858293,-3.948385,-6.872950,-4.344946,-6.781898,2.322468,4.994918,9.289155,-7.524622,4.957066,-8.978275,1.231954,3.204905,-0.158838,7.212184,-8.002335,3.575398,-3.046993,-9.003608,-0.690584,-4.398861,-3.919178,8.641369,-2.098738,-8.188766,-1.177019,7.406432,-4.664641,9.469003,-8.608650,9.023707,1.209561,0.725304,-8.157256,-8.750140,7.389301,7.895843,9.067468,7.903853,-0.770038,9.384585,5.399282,-8.591889,-0.774857,-8.449568,-7.500751,2.506122,-5.538717,1.705068,-7.367539,6.841562,-8.213713,9.616218,-8.558325,-5.399002,-2.782631,0.606828,-7.317379,4.497542,-1.665932,8.914862,3.912064,-9.987236,0.979941,1.653517,6.969540,0.248956,2.922435,5.760896,-4.430061,-0.547013,-7.525460,-6.643463,5.694700,2.449970,3.994895,-1.991176,7.502597,-2.064966,-8.628992,6.403314,-2.195214,-4.331385,5.210458,5.266078,2.849683,9.141594,-0.758558,-8.839643,1.038629,5.909578,-5.216461,-3.622733,-1.612823,-1.603240,-5.178681,-5.820438,2.341710,-4.300551,2.334799,-7.202588,2.558422,-3.495377,0.493877,8.041796,-7.400049,9.949859,-3.286575,-5.135184,-9.292670,5.453552,-1.727314,5.497035,-1.148617,2.688937,-4.597937,-5.697779,5.477072,3.155441,2.870994,1.595514,3.082603,-6.588892,-8.183537,-6.281349,-3.788658,7.213294,7.669568,-9.081407,-4.228178,6.603456,2.182836,-9.401460,-8.893741,8.245121,-4.067284,0.820090,6.145154,8.581055,3.704339,-0.471145,-1.648418,-3.282083,-1.637677,1.207355,-4.571078,0.649830,4.501147,-0.040745,0.875613,0.363782,1.126684,0.754473,5.863029,-1.428950,-4.540055,-8.478235,8.909334,9.650466,0.735764,-1.460230,8.170212,0.003771,-8.134513,3.236801,5.657583,7.082375,3.149999,5.138146,-1.019139,3.692022,-2.572299,2.329876,5.870244,6.167940,0.534299,-8.301697,-4.407510,3.045598,-1.552654,-7.707931,-7.816547,-3.031452,2.340809,-6.396989,4.419074,-9.599784,4.815758,4.363196,-6.259220,6.129705,8.990804,9.009345,0.546919,-7.262782,8.942685,0.887537,-0.090176,0.904635,7.798730,3.226735,-5.063022,-8.968921,8.409921,-5.303887,-6.294707,-1.459734,7.283538,4.586075,-9.509691,-5.619911,4.179801,1.821147,7.334085,6.460954,-5.126194,-2.891870,-0.070290,-4.763002,-7.056816,-6.167598,-5.409793,-2.165607,-9.482795,-9.170881,2.544704,-3.623997,-5.157023,1.500807,-6.891544,-0.888765,3.602365,3.951697,6.195506,-5.279404,-8.467213,3.440940,6.893698,1.875194,6.741146,-8.102470,-8.492182,2.123497,5.986662,5.186273,0.631908,-1.658688,-6.029168,1.228963,-2.974277,8.705947,-2.486091,5.588600,3.259171,9.865362,7.175119,0.114280,-0.414184,-3.490232,1.578858,1.782148,-6.172636,-0.948141,-8.541951,-0.026992,5.893579,4.245816,-5.146119,9.568820,2.293886,3.767981,-7.120039,8.038948,4.163142,-4.964418,9.883666,-2.781419,-2.025597,-3.363039,-7.334289,3.838158,-4.519592,0.424959,8.800941,-7.624505,9.745019,2.549889,8.904069,-2.159631,2.610523,5.774368,-6.189714,-9.394806,-7.136196,5.198131,4.744868,-8.797838,-9.894611,0.808251,-7.983561,-2.509716,4.596394,-6.427594,-0.593142,8.158220,9.449466,-4.947677,-5.194129,-0.121884,5.293731,6.262952,-2.195495,6.965451,0.021440,3.216439,-4.869960,7.916489,5.677008,-1.097217,-9.658439,3.294020,4.368351,-1.452501,-7.433085,-8.360551,-8.664333,0.367320,-9.417925,6.683407,2.005054,8.364791,7.697179,7.137013,-4.927060,-1.585634,3.867481,5.404719,-1.009548,9.849186,-0.862052,-8.414595,7.100679,-6.530787,-0.640487,-4.579941,-4.989898,-4.386043,-0.477459,-9.986035,2.348009,-2.969919,4.600025,5.097856,1.850227,-6.370843,7.903423,-5.140857,-6.493947,-9.967919,9.370635,-3.706958,-3.302963,3.657494,-9.333737,-1.932975,-1.988646,6.494503,-1.661372,8.607264,3.941538,0.119776,5.675518,6.143087,-8.111657,-7.282339,-6.873525,1.517731,2.563812,-0.293034,6.388635,-3.776997,5.286850,7.597149,-8.735056,8.016880,-9.515553,-8.036564,-6.902976,-8.878320,4.543096,-2.627084,5.308264,6.722003,-4.710410,2.349781,-5.584614,-2.871513,9.869026,4.070971,-2.577916,3.653832,3.630585,-8.589259,6.025095,7.803808,-1.193158,0.902011,4.014633,-9.385866,-5.708674,5.377627,6.230830,-9.386515,0.390394,9.192110,-5.255118,1.281807,-4.572430,5.342927,-6.901605,6.116852,7.534368,-2.258124,8.196970,-5.758513,-7.710928,-2.683769,9.112653,-8.513186,-6.788403,5.312510,-5.232674,-9.591452,-0.833351,8.750291,-5.719127,4.452106,8.053965,1.715350,6.771928,-4.619349,5.692075,3.822609,1.601954,-9.397137,8.666604,-3.076891,-2.729903,5.463601,-2.762683,9.019390,2.928557,-2.711643,-6.039627,6.778637,-3.196427,-8.255329,-7.295762,-8.099440,5.207756,3.684694,-4.765150,5.663855,-7.056357,-4.843159,0.094606,-2.164434,-5.978043,4.983510,-3.089360,-6.664499,-8.630744,-9.858455,5.706652,-5.653713,6.487987,2.270254,5.329286,-2.634922,4.330467,-7.990224,-1.686060,7.054570,-2.135207,-6.458727,3.165243,5.448203,1.694428,-5.269718,-0.006529,9.746290,-4.095843,-4.285016,2.241520,-8.637957,8.531108,9.524694,7.939528,-9.989734,1.765902,-6.063284,-6.373392,-7.413900,2.007364,-8.829338,9.004261,-9.836800,-8.532592,7.718271,4.879297,7.968778,6.916005,9.840293,1.121354,-2.338725,-8.725358,-3.916618,-4.637763,-6.768318,2.488985,2.337849,-7.778329,6.082645,-2.200522,3.884686,-9.056977,-0.505494,4.101687,-0.520162,-2.519941,-9.384527,5.054520,0.532293,0.198969,0.666461,-2.171103,-3.456688,-7.006377,3.659550,-9.722494,9.796207,6.127858,-9.306537,2.344930,-3.692951,7.883333,-7.635754,7.373857,-4.394493,1.113437,9.691767,9.884902,-8.078129,8.238591,-6.772416,-8.575016,-3.110296,-0.827765,3.189354,8.639918,8.214423,-3.291755,8.546766,3.635780,-0.900781,-2.836306,-0.408543,4.592029,1.268576,-5.141521,0.901101,6.446619,3.043187,-7.917427,4.127571,-3.292431,4.000966,-1.911570,-3.738654,-9.690592,-3.962896,-3.794084,-2.240929,-6.393921,3.215080,-2.914629,0.632423,-6.268142,5.558366,4.275775,1.416343,1.712396,-7.350235,8.584668,3.065676,-9.266639,-4.073900,-2.674213,-7.843817,3.000691,6.793211,-8.040693,4.959912,2.957591,-4.491342,-8.524540,-9.664847,-7.462726,0.667525,7.035634,9.821018,3.747116,5.505852,3.378576,-8.955037,1.803839,-1.348242,-2.946447,-7.389814,-7.989539,1.788045,-9.472782,-7.581783,-8.477367,0.442656,-8.462000,1.318773,-7.628020,5.087627,1.277152,-0.959095,1.341299,-0.246077,5.316598,-4.493617,9.963043,-4.089874,4.117150,-8.880382,-2.727465,-1.950513,9.819494,-9.240321,-0.720425,0.761322,9.394608,-7.652031,-5.972842,0.604626,3.900923,2.698329,7.502626,5.841528,-3.753683,-0.416694,1.344941,9.807394,0.930573,-4.153425,7.767756,6.649390,-6.556676,0.760633,-5.446386,-6.311931,-4.344149,5.443272,5.857406,5.833187,-4.706784,-2.738842,-1.237457,-4.393066,-2.325588,5.137445,-5.620006,-1.849897,-9.358665,7.888741,-4.198286,-9.406046,1.869820,-6.431558,-4.649518,-0.096287,-2.120061,-7.084552,-7.882384,-6.651413,-5.545340,-5.726457,-2.096070,4.517482,7.409645,4.393289,-2.076012,-7.018867,5.554121,-6.371108,-7.495158,8.893320,9.982727,9.921838,-9.376967,-1.221279,1.703313,-4.967566,-7.176028,-8.242217,-0.625524,4.239978,-7.007188,0.887703,6.416127,1.857365,-0.677242,-7.335188,8.215279,-1.477900,8.298600,-2.217487,2.628919,-6.829966,-8.167472,4.551066,-4.317436,1.011633,6.961448,8.605556,-0.708116,-7.630074,3.700501,-1.630582,2.297954,-9.158757,-9.220350,7.925830,1.415499,6.347753,5.669572,6.773924,8.505019,-1.302435,6.886696,9.608796,-3.037750,-3.973791,-3.287089,-6.281362,7.878909,-7.238638,6.509585,-4.607083,3.088705,-4.294985,-1.628823,9.951684,-3.745074,-6.724392,3.321467,0.176431,-8.398528,5.831664,4.034266,-4.377929,-3.146427,-7.781605,-4.216782,9.980068,-1.700365,-3.096092,1.131765,-1.732417,5.192803,0.972486,8.567674,1.877667,-0.873660,-7.931104,-6.585404,2.541554,-4.709540,4.184896,-2.297146,-7.729731,-2.325699,7.028404,-4.486374,-1.232282,3.441182,-4.354173,-6.456395,-7.332534,-1.890885,-6.209474,4.020822,-2.655854,5.026702,-0.854432,-5.782531,-2.516775,-8.904871,-0.360971,-7.568058,-8.852791,-8.792567,-7.782184,-5.196223,9.875678,3.319899,-6.780759,4.570540,-7.914220,-3.674416,-4.169680,-8.481284,5.717884,0.752711,3.678890,-8.291793,7.470959,6.420324,-7.201539,-8.738813,-1.920817,2.233939,-5.953620,5.403334,-5.599118,4.298478,-7.458586,8.190022,-1.361249,9.023554,-6.127778,-8.755108,-8.494961,1.941967,8.880318,5.411500,-5.928641,-9.999253,3.427990,0.596572,2.664926,3.276788,-7.755189,-4.535728,5.743686,8.797635,5.789266,8.265579,0.420058,-2.752163,-5.789053,-3.082694,9.526735,3.198452,8.188036,-0.867773,8.278605,-4.716828,-4.885228,5.862651,6.434205,-6.980664,-0.540870,-7.435529,-4.221188,-3.834804,-5.005180,9.569054,-0.109102,9.288148,-5.519712,-0.015911,3.574607,7.968158,7.521577,9.591634,9.661524,-3.268781,2.557918,2.063170,0.885018,-4.245253,9.783969,5.557134,-1.414070,2.897745,-9.239861,-1.929973,-9.815912,-8.426765,-0.023606,-1.208605,4.116080,5.352515,-9.159727,-4.163334,2.554476,4.426196,2.450106,-3.860493,0.282489,-8.360901,2.081626,1.996320,-0.500831,-9.166872,9.877734,3.325110,6.858183,6.441947,7.637780,0.661814,-9.406683,2.326240,-6.895446,2.238395,4.838661,8.470107,0.287894,0.218354,-8.425961,-5.850675,-5.745674,-4.366104,2.243359,8.715701,-8.618299,5.608630,-7.786215,-7.362229,-2.735076,-6.580459,2.587774,-3.229831,5.000692,-3.166173,7.907958,9.882426,-0.363414,9.834501,-5.359002,6.809617,-8.935968,5.041680,9.677564,7.905225,-3.318523,-6.472860,2.238984,-5.415367,-9.044258,2.641569,3.513876,9.397079,-6.828267,0.693484,-5.713080,1.222959,8.164716,7.094834,-7.935063,-5.637310,-9.411785,-1.134945,-0.143501,-5.695592,-3.908302,-9.243392,1.120509,0.410670,0.285646,-6.466250,4.759661,-5.707333,-7.095265,-2.777071,-7.198947,8.725054,0.915934,-3.629892,-4.431933,-2.309817,-9.881445,0.003214,-6.096807,-2.819245,3.426411,4.085852,-5.262885,-7.202150,8.947434,-3.438708,8.161252,7.842485,8.772023,-2.576315,-0.559254,-3.762212,-7.232108,-9.981380,9.948588,-3.914245,1.258004,0.125378,7.894589,0.243707,-6.816091,-0.614464,7.537420,-3.526076,4.687324,8.468862,5.714209,0.778654,3.782959,4.427798,-4.560427,6.724598,2.197490,4.251041,-7.394418,-8.748292,-0.740373,7.556098,-8.617536,2.550996,-9.511191,8.486703,-9.046557,6.001798,5.104419,-5.377424,-5.980285,8.831920,4.087105,-1.388913,4.541259,-6.031612,0.530554,-3.223396,-5.357806,-8.344745,-2.062369,-3.818108,-6.657451,-0.196600,-2.520647,2.473202,-5.360286,0.371399,6.661061,-3.900797,-8.475954,5.330761,-9.273788,7.794005,0.208933,4.615417,7.579339,-8.694321,-8.960513,0.895406,-1.103518,8.353220,-7.079069,-1.278612,4.655674,-9.722243,6.000209,4.404292,0.270715,-7.897509,-0.650163,-5.246549,-3.225928,0.900058,0.806243,2.230901,2.754331,4.978432,9.446670,-0.167032,-3.683554,-7.962540,-1.433166], dtype = "float32")#candidate|9309|(1120,)|const|float32
call_9308 = relay.TupleGetItem(func_8230_call(relay.reshape(const_9309.astype('float32'), [4, 280])), 2)
call_9310 = relay.TupleGetItem(func_8232_call(relay.reshape(const_9309.astype('float32'), [4, 280])), 2)
func_3420_call = mod.get_global_var('func_3420')
func_3423_call = mutated_mod.get_global_var('func_3423')
const_9318 = relay.const([-8.867814,9.148538,-7.139081,2.747532,-4.060511,-3.912266,9.099009,1.906066,9.443491,3.595865,3.886655,-6.779740,9.277594,0.875280,7.143727,-7.780160,-6.651930,5.588344,7.760177,-6.212551,-5.020695,-4.506841,-8.281416,2.633851,-3.290895,4.410240,7.402909,9.962430,6.303242,7.543307,9.591338,-5.465909,-9.976491,-9.951722,-5.401556,6.866887,-4.342989,5.926093,9.408954,-9.200338,4.441472,-7.818305,4.417278,0.808722,-1.060129,-7.452766,3.362243,4.988095,-2.925115,0.367086,-3.566200,5.037000,-7.782482,-4.031266,2.832494,-8.414410,-4.143019,0.682318,-4.517800,5.822259,-9.165756,-4.401328,-8.227232,3.335497,2.535288,-4.808315,1.616336,-3.998618,-3.991754,6.031838,8.929537,-6.064624,-8.266111,-4.260225,-3.802419,-2.697580,8.370348,-8.081351,-0.669288,-5.906473,-3.670277,-8.778489,-4.509591,-2.187504,8.104221,-7.676879,7.669506,-4.091678,7.269438,-5.720756,-6.062645,-8.800668,6.821225,-3.951838,-2.186409,1.931641,0.879468,-6.483125,4.071891,-4.664043,-4.392771,0.628441,3.320783,-4.159797,-8.374979,-3.136399,7.303755,-2.469905,-1.307238,-2.076236,0.597250,8.937573,8.238834,-4.495325,-5.928232,5.513463,-1.500940,-3.105135,9.686793,-9.146233,7.644257,-7.032563,3.197278,8.393120,0.708686,-8.291182,-4.089308,6.822536,6.448229,-6.741711,-4.850415,-9.392129,-9.656288,-0.140903,2.870527,-9.374794,-0.806914,1.896170,0.126876,4.850340,0.676905,-6.364723,7.320966,4.124380,7.952364,6.610285,-7.555162,-6.994139,-0.076363,-2.562609,7.835043,6.210945,2.703385,0.103199,9.576919,-4.322598,-2.785480,-1.041972,-4.925936,-8.330224,2.010632,-6.382851,-9.659597,3.668392,9.505885,-2.463671,-9.756028,-6.913185,0.620981,-3.948819,-2.230591,0.061761,0.131401,6.804988,0.819855,-0.618062,8.935221,-2.246376,8.572199,-7.605137,0.126385,-5.408154,-3.260205,-1.596636,-6.928268,8.903015,6.955544,-2.935814,-7.359807,-8.402397,0.463228,6.247555,6.982839,-6.591434,7.742832,-9.716957,-4.525679,-3.550286,8.140307,-0.839048,6.747681,0.875788,-2.262772,-8.861975,9.521550,-9.730714,6.293282,9.433053,-7.402429,3.223117], dtype = "float64")#candidate|9318|(210,)|const|float64
call_9317 = relay.TupleGetItem(func_3420_call(relay.reshape(const_9318.astype('float64'), [7, 10, 3])), 0)
call_9319 = relay.TupleGetItem(func_3423_call(relay.reshape(const_9318.astype('float64'), [7, 10, 3])), 0)
output = relay.Tuple([bop_9261,call_9294,var_9295,uop_9304,call_9308,const_9309,call_9317,const_9318,])
output2 = relay.Tuple([bop_9264,call_9296,var_9295,uop_9306,call_9310,const_9309,call_9319,const_9318,])
func_9323 = relay.Function([var_9260,var_9295,], output)
mod['func_9323'] = func_9323
mod = relay.transform.InferType()(mod)
var_9324 = relay.var("var_9324", dtype = "float64", shape = (11, 5, 4))#candidate|9324|(11, 5, 4)|var|float64
var_9325 = relay.var("var_9325", dtype = "float64", shape = (528,))#candidate|9325|(528,)|var|float64
output = func_9323(var_9324,var_9325,)
func_9326 = relay.Function([var_9324,var_9325,], output)
mutated_mod['func_9326'] = func_9326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8419_call = mod.get_global_var('func_8419')
func_8420_call = mutated_mod.get_global_var('func_8420')
call_9350 = relay.TupleGetItem(func_8419_call(), 0)
call_9351 = relay.TupleGetItem(func_8420_call(), 0)
output = call_9350
output2 = call_9351
func_9365 = relay.Function([], output)
mod['func_9365'] = func_9365
mod = relay.transform.InferType()(mod)
output = func_9365()
func_9366 = relay.Function([], output)
mutated_mod['func_9366'] = func_9366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9149_call = mod.get_global_var('func_9149')
func_9150_call = mutated_mod.get_global_var('func_9150')
call_9394 = func_9149_call()
call_9395 = func_9149_call()
func_8419_call = mod.get_global_var('func_8419')
func_8420_call = mutated_mod.get_global_var('func_8420')
call_9396 = relay.TupleGetItem(func_8419_call(), 0)
call_9397 = relay.TupleGetItem(func_8420_call(), 0)
output = relay.Tuple([call_9394,call_9396,])
output2 = relay.Tuple([call_9395,call_9397,])
func_9400 = relay.Function([], output)
mod['func_9400'] = func_9400
mod = relay.transform.InferType()(mod)
mutated_mod['func_9400'] = func_9400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9400_call = mutated_mod.get_global_var('func_9400')
call_9401 = func_9400_call()
output = call_9401
func_9402 = relay.Function([], output)
mutated_mod['func_9402'] = func_9402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8242_call = mod.get_global_var('func_8242')
func_8243_call = mutated_mod.get_global_var('func_8243')
call_9470 = func_8242_call()
call_9471 = func_8242_call()
output = call_9470
output2 = call_9471
func_9476 = relay.Function([], output)
mod['func_9476'] = func_9476
mod = relay.transform.InferType()(mod)
output = func_9476()
func_9477 = relay.Function([], output)
mutated_mod['func_9477'] = func_9477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9481 = relay.var("var_9481", dtype = "float64", shape = (10, 2, 2))#candidate|9481|(10, 2, 2)|var|float64
uop_9482 = relay.asin(var_9481.astype('float64')) # shape=(10, 2, 2)
output = relay.Tuple([uop_9482,])
output2 = relay.Tuple([uop_9482,])
func_9484 = relay.Function([var_9481,], output)
mod['func_9484'] = func_9484
mod = relay.transform.InferType()(mod)
mutated_mod['func_9484'] = func_9484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9485 = relay.var("var_9485", dtype = "float64", shape = (10, 2, 2))#candidate|9485|(10, 2, 2)|var|float64
func_9484_call = mutated_mod.get_global_var('func_9484')
call_9486 = func_9484_call(var_9485)
output = call_9486
func_9487 = relay.Function([var_9485], output)
mutated_mod['func_9487'] = func_9487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9365_call = mod.get_global_var('func_9365')
func_9366_call = mutated_mod.get_global_var('func_9366')
call_9489 = func_9365_call()
call_9490 = func_9365_call()
func_7888_call = mod.get_global_var('func_7888')
func_7890_call = mutated_mod.get_global_var('func_7890')
call_9501 = relay.TupleGetItem(func_7888_call(), 0)
call_9502 = relay.TupleGetItem(func_7890_call(), 0)
output = relay.Tuple([call_9489,call_9501,])
output2 = relay.Tuple([call_9490,call_9502,])
func_9512 = relay.Function([], output)
mod['func_9512'] = func_9512
mod = relay.transform.InferType()(mod)
mutated_mod['func_9512'] = func_9512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9512_call = mutated_mod.get_global_var('func_9512')
call_9513 = func_9512_call()
output = call_9513
func_9514 = relay.Function([], output)
mutated_mod['func_9514'] = func_9514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9045_call = mod.get_global_var('func_9045')
func_9047_call = mutated_mod.get_global_var('func_9047')
call_9622 = func_9045_call()
call_9623 = func_9045_call()
uop_9626 = relay.log10(call_9622.astype('float64')) # shape=(11, 5, 4)
uop_9628 = relay.log10(call_9623.astype('float64')) # shape=(11, 5, 4)
output = uop_9626
output2 = uop_9628
func_9630 = relay.Function([], output)
mod['func_9630'] = func_9630
mod = relay.transform.InferType()(mod)
mutated_mod['func_9630'] = func_9630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9630_call = mutated_mod.get_global_var('func_9630')
call_9631 = func_9630_call()
output = call_9631
func_9632 = relay.Function([], output)
mutated_mod['func_9632'] = func_9632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7647_call = mod.get_global_var('func_7647')
func_7649_call = mutated_mod.get_global_var('func_7649')
call_9655 = relay.TupleGetItem(func_7647_call(), 0)
call_9656 = relay.TupleGetItem(func_7649_call(), 0)
func_9630_call = mod.get_global_var('func_9630')
func_9632_call = mutated_mod.get_global_var('func_9632')
call_9671 = func_9630_call()
call_9672 = func_9630_call()
output = relay.Tuple([call_9655,call_9671,])
output2 = relay.Tuple([call_9656,call_9672,])
func_9677 = relay.Function([], output)
mod['func_9677'] = func_9677
mod = relay.transform.InferType()(mod)
mutated_mod['func_9677'] = func_9677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9677_call = mutated_mod.get_global_var('func_9677')
call_9678 = func_9677_call()
output = call_9678
func_9679 = relay.Function([], output)
mutated_mod['func_9679'] = func_9679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8419_call = mod.get_global_var('func_8419')
func_8420_call = mutated_mod.get_global_var('func_8420')
call_9739 = relay.TupleGetItem(func_8419_call(), 0)
call_9740 = relay.TupleGetItem(func_8420_call(), 0)
output = call_9739
output2 = call_9740
func_9751 = relay.Function([], output)
mod['func_9751'] = func_9751
mod = relay.transform.InferType()(mod)
output = func_9751()
func_9752 = relay.Function([], output)
mutated_mod['func_9752'] = func_9752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8835_call = mod.get_global_var('func_8835')
func_8836_call = mutated_mod.get_global_var('func_8836')
call_9827 = func_8835_call()
call_9828 = func_8835_call()
output = call_9827
output2 = call_9828
func_9829 = relay.Function([], output)
mod['func_9829'] = func_9829
mod = relay.transform.InferType()(mod)
mutated_mod['func_9829'] = func_9829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9829_call = mutated_mod.get_global_var('func_9829')
call_9830 = func_9829_call()
output = call_9830
func_9831 = relay.Function([], output)
mutated_mod['func_9831'] = func_9831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9400_call = mod.get_global_var('func_9400')
func_9402_call = mutated_mod.get_global_var('func_9402')
call_9848 = relay.TupleGetItem(func_9400_call(), 0)
call_9849 = relay.TupleGetItem(func_9402_call(), 0)
output = relay.Tuple([call_9848,])
output2 = relay.Tuple([call_9849,])
func_9850 = relay.Function([], output)
mod['func_9850'] = func_9850
mod = relay.transform.InferType()(mod)
mutated_mod['func_9850'] = func_9850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9850_call = mutated_mod.get_global_var('func_9850')
call_9851 = func_9850_call()
output = call_9851
func_9852 = relay.Function([], output)
mutated_mod['func_9852'] = func_9852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8242_call = mod.get_global_var('func_8242')
func_8243_call = mutated_mod.get_global_var('func_8243')
call_9853 = func_8242_call()
call_9854 = func_8242_call()
func_9121_call = mod.get_global_var('func_9121')
func_9123_call = mutated_mod.get_global_var('func_9123')
call_9855 = relay.TupleGetItem(func_9121_call(), 2)
call_9856 = relay.TupleGetItem(func_9123_call(), 2)
func_1528_call = mod.get_global_var('func_1528')
func_1531_call = mutated_mod.get_global_var('func_1531')
const_9862 = relay.const(9, dtype = "int64")#candidate|9862|()|const|int64
const_9863 = relay.const([-8,-5,7,8,-10,9,3,10,5,-2,1,10,8,-8,-9,6,-3,8,4,-4,-3,2,2,-4,9,-1,-1,-4,2,6,3,9,-7,-8,5,7,-6,5,-1,6,-4,10,-8,4,8,-3,6,-7,-3,3,-6,7,9,1,-1,-2,3,-10,-6,-3,6,5,10,-4,6,10,-8,-5,10,-9,-4,6,10,-8,-10,-1,7,-8,-8,9,-2,10,-5,-8,-3,-6,7,4,-7,6,-5,6,4,8,-8,8,5,9,4,-7,-6,4,4,-3,-10,10,7,-7,4,5,-4,2,-10,1,10,-1,-2,2,-2,-9,-5,10,-7,-6,-4,-2,3,-10,-7,-7,1,-3,-4,9,1,10,8,-1,7,-7,6,1,-5,2,-2,-7,8,5,7,10,3,6,-8,-8,2,-7,-7,8,7,-4,-1,-3,-2,-3,-4,9,-10,1,-1,4,6,-4,10,-7,-1,8,-1,-3,9,6,-6,3,9,6,2,-3,-3,-1,8,2,8,-3,10,6,9,-5,6,-1,-1,-4], dtype = "int64")#candidate|9863|(200,)|const|int64
call_9861 = relay.TupleGetItem(func_1528_call(relay.reshape(const_9862.astype('int64'), []), relay.reshape(const_9863.astype('int64'), [10, 4, 5]), ), 0)
call_9864 = relay.TupleGetItem(func_1531_call(relay.reshape(const_9862.astype('int64'), []), relay.reshape(const_9863.astype('int64'), [10, 4, 5]), ), 0)
func_3420_call = mod.get_global_var('func_3420')
func_3423_call = mutated_mod.get_global_var('func_3423')
const_9866 = relay.const([[-3.508781,-3.289797,-6.011997,5.965776,-7.627152,-7.907608,8.702573,-5.503607,9.006388,5.718077,1.867080,-9.565480,9.443591,4.665357,-4.668430,6.999598,7.796044,2.732598,8.835440,9.085960,-0.927461,1.467028,-6.894686,-5.830582,-3.864204,0.188187,-3.869246,5.756622,7.001584,8.260474,-9.581391,2.384999,-2.066946,2.276611,1.891409,2.919334,-8.730635,-1.685751,5.729701,2.388786,-7.900109,5.918740],[-5.483906,-0.629231,3.224491,-7.799236,-2.981372,6.786561,-4.440612,-2.992099,1.461564,-8.270529,-8.855007,-3.248694,1.975731,9.670719,3.386396,-1.954790,2.947773,4.693061,-4.180287,-8.885872,8.453135,-0.440049,7.562662,-8.822185,-1.145706,-8.070525,5.700005,-3.071009,-3.656604,-9.474024,-1.195985,-4.570671,2.671416,4.090912,2.108829,-7.920354,7.901563,-4.188048,0.295237,-0.747501,8.458537,-4.478812],[4.661609,9.331903,-1.972903,6.336177,-0.217364,5.875546,-4.288829,-2.971726,-1.754948,-7.844431,2.986097,-1.346263,4.332550,-8.140314,-9.633479,7.497216,-0.903834,3.725059,-8.866365,5.351281,-7.742572,-5.422487,9.672558,-7.313339,6.001868,-2.092238,-5.500986,2.916862,1.100541,-3.492254,-2.036689,0.463515,2.042289,-4.263525,-1.138841,-0.740347,-5.646847,7.971831,8.489586,0.621942,-3.385470,7.885030],[7.601284,6.925373,2.872500,-9.090572,3.171372,-9.132003,-6.429621,4.828780,-5.682569,-6.630033,-3.345871,6.496981,1.092843,9.432892,-1.424000,-2.416736,9.240266,-3.155382,-1.007902,9.742597,-7.792585,-0.718699,-5.627815,7.455513,4.335501,2.934217,3.687327,-2.844386,6.083230,0.491351,-2.989974,7.701752,9.416121,-8.543433,-0.115186,2.046572,3.186211,-1.268082,5.026198,0.386782,2.714879,9.003423],[0.895872,9.382212,2.074807,-7.163191,4.910346,3.623691,5.653526,-4.535929,3.723904,-1.392140,3.458758,-6.241339,0.508139,7.304532,-8.893632,8.938844,-9.749656,2.397302,1.956438,-6.421021,6.319473,3.072623,2.951126,8.178272,-1.476485,-5.024326,-6.115504,-4.347743,-3.956770,-4.065207,-9.610991,-3.996583,-4.364800,-9.315385,6.587212,-0.885591,5.963997,4.395509,5.836142,7.316867,-0.221758,1.666882]], dtype = "float64")#candidate|9866|(5, 42)|const|float64
call_9865 = relay.TupleGetItem(func_3420_call(relay.reshape(const_9866.astype('float64'), [7, 10, 3])), 0)
call_9867 = relay.TupleGetItem(func_3423_call(relay.reshape(const_9866.astype('float64'), [7, 10, 3])), 0)
output = relay.Tuple([call_9853,call_9855,call_9861,const_9862,const_9863,call_9865,const_9866,])
output2 = relay.Tuple([call_9854,call_9856,call_9864,const_9862,const_9863,call_9867,const_9866,])
func_9886 = relay.Function([], output)
mod['func_9886'] = func_9886
mod = relay.transform.InferType()(mod)
output = func_9886()
func_9887 = relay.Function([], output)
mutated_mod['func_9887'] = func_9887
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9939 = relay.var("var_9939", dtype = "int16", shape = (2, 3, 6))#candidate|9939|(2, 3, 6)|var|int16
var_9940 = relay.var("var_9940", dtype = "int16", shape = (2, 3, 6))#candidate|9940|(2, 3, 6)|var|int16
bop_9941 = relay.less(var_9939.astype('bool'), relay.reshape(var_9940.astype('bool'), relay.shape_of(var_9939))) # shape=(2, 3, 6)
func_9230_call = mod.get_global_var('func_9230')
func_9232_call = mutated_mod.get_global_var('func_9232')
var_9947 = relay.var("var_9947", dtype = "float64", shape = (1, 220))#candidate|9947|(1, 220)|var|float64
call_9946 = relay.TupleGetItem(func_9230_call(relay.reshape(var_9947.astype('float64'), [11, 5, 4])), 2)
call_9948 = relay.TupleGetItem(func_9232_call(relay.reshape(var_9947.astype('float64'), [11, 5, 4])), 2)
output = relay.Tuple([bop_9941,call_9946,var_9947,])
output2 = relay.Tuple([bop_9941,call_9948,var_9947,])
func_9956 = relay.Function([var_9939,var_9940,var_9947,], output)
mod['func_9956'] = func_9956
mod = relay.transform.InferType()(mod)
var_9957 = relay.var("var_9957", dtype = "int16", shape = (2, 3, 6))#candidate|9957|(2, 3, 6)|var|int16
var_9958 = relay.var("var_9958", dtype = "int16", shape = (2, 3, 6))#candidate|9958|(2, 3, 6)|var|int16
var_9959 = relay.var("var_9959", dtype = "float64", shape = (1, 220))#candidate|9959|(1, 220)|var|float64
output = func_9956(var_9957,var_9958,var_9959,)
func_9960 = relay.Function([var_9957,var_9958,var_9959,], output)
mutated_mod['func_9960'] = func_9960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8071_call = mod.get_global_var('func_8071')
func_8073_call = mutated_mod.get_global_var('func_8073')
call_9988 = func_8071_call()
call_9989 = func_8071_call()
func_1419_call = mod.get_global_var('func_1419')
func_1422_call = mutated_mod.get_global_var('func_1422')
var_10036 = relay.var("var_10036", dtype = "int32", shape = ())#candidate|10036|()|var|int32
var_10037 = relay.var("var_10037", dtype = "int32", shape = (117,))#candidate|10037|(117,)|var|int32
call_10035 = relay.TupleGetItem(func_1419_call(relay.reshape(var_10036.astype('int32'), []), relay.reshape(var_10037.astype('int32'), [1, 13, 9]), ), 0)
call_10038 = relay.TupleGetItem(func_1422_call(relay.reshape(var_10036.astype('int32'), []), relay.reshape(var_10037.astype('int32'), [1, 13, 9]), ), 0)
output = relay.Tuple([call_9988,call_10035,var_10036,var_10037,])
output2 = relay.Tuple([call_9989,call_10038,var_10036,var_10037,])
func_10048 = relay.Function([var_10036,var_10037,], output)
mod['func_10048'] = func_10048
mod = relay.transform.InferType()(mod)
var_10049 = relay.var("var_10049", dtype = "int32", shape = ())#candidate|10049|()|var|int32
var_10050 = relay.var("var_10050", dtype = "int32", shape = (117,))#candidate|10050|(117,)|var|int32
output = func_10048(var_10049,var_10050,)
func_10051 = relay.Function([var_10049,var_10050,], output)
mutated_mod['func_10051'] = func_10051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7888_call = mod.get_global_var('func_7888')
func_7890_call = mutated_mod.get_global_var('func_7890')
call_10138 = relay.TupleGetItem(func_7888_call(), 0)
call_10139 = relay.TupleGetItem(func_7890_call(), 0)
output = call_10138
output2 = call_10139
func_10145 = relay.Function([], output)
mod['func_10145'] = func_10145
mod = relay.transform.InferType()(mod)
mutated_mod['func_10145'] = func_10145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10145_call = mutated_mod.get_global_var('func_10145')
call_10146 = func_10145_call()
output = call_10146
func_10147 = relay.Function([], output)
mutated_mod['func_10147'] = func_10147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9829_call = mod.get_global_var('func_9829')
func_9831_call = mutated_mod.get_global_var('func_9831')
call_10159 = func_9829_call()
call_10160 = func_9829_call()
const_10163 = relay.const([[[3.350009,-5.929228,4.781215,-0.526181],[0.517642,-5.604512,-1.316889,-5.490768],[7.774790,-3.604785,-3.258967,4.515105],[0.621202,-7.360290,3.761829,2.265547],[5.181083,-1.239278,3.084629,7.590883]],[[5.760474,9.879860,4.372286,0.732641],[1.587919,6.315436,-9.842715,0.621114],[-5.740749,-6.923166,8.858929,-9.373118],[1.931948,3.475742,5.330248,9.728784],[-4.794829,-8.337169,-0.158773,0.597095]],[[1.587171,2.110161,8.288320,-7.830490],[5.888051,4.851691,-3.064633,9.632053],[6.090774,3.448512,-0.148105,2.713815],[2.495371,-4.476756,1.157414,3.052009],[-4.824145,-8.128176,7.721167,4.669869]],[[3.925343,3.247040,-2.622463,3.136112],[-1.310070,-7.781216,9.333102,0.520485],[9.182892,-2.153043,2.304801,-4.242703],[-6.292237,-7.254404,0.288161,-0.221051],[-6.445500,-0.499950,0.804828,-9.039606]],[[-9.481079,-0.186979,-7.566864,7.755253],[2.434244,-6.631858,7.958613,-2.312946],[1.411067,-7.008794,-4.534032,4.421772],[-1.827201,3.433768,6.719466,0.115603],[-7.876754,6.060590,-1.011640,-0.419628]],[[-5.127957,-3.543650,6.892042,-3.727170],[1.523797,5.865612,4.155259,1.884289],[5.010800,5.332741,-3.868155,-0.212850],[-4.060903,-3.730209,-3.296716,-6.372994],[1.074694,9.077911,3.952480,-2.557106]],[[-1.975174,-1.888886,-5.157792,3.168722],[-0.538869,0.007891,-6.023560,1.385984],[2.179410,8.722228,4.573565,3.796696],[-5.104339,8.900931,-0.511822,6.484953],[-9.136355,-1.441358,3.333772,-5.461955]],[[1.925037,-6.818079,9.745420,-8.155753],[4.225856,9.856403,-5.993628,-8.726992],[8.423143,-6.728303,3.332028,-2.523223],[-5.307463,-4.099993,-9.111255,9.407006],[-8.746201,1.528282,-0.029462,4.132397]],[[1.636211,-2.298800,0.234315,2.853981],[-6.013730,-5.400323,3.599265,0.180769],[7.607343,0.425759,-8.343942,8.965950],[-8.190926,0.836319,0.331632,4.028043],[8.635363,-6.993897,-0.524809,0.697694]],[[1.073228,-6.851875,-3.134288,-0.924648],[9.203888,0.271444,4.579250,2.833245],[-9.026313,-0.422969,3.655872,-2.470213],[3.079461,3.520651,-4.124583,-6.975934],[-4.114383,-9.214409,4.331033,-7.580885]],[[-3.231534,-5.815837,5.330887,-1.169394],[-4.297025,5.108199,-0.267645,-2.636643],[-1.304072,5.177956,-0.007578,-4.338827],[-3.476116,5.256944,-4.608736,-6.920392],[-5.862297,-9.533587,-3.796662,2.293482]]], dtype = "float64")#candidate|10163|(11, 5, 4)|const|float64
bop_10164 = relay.bitwise_xor(call_10159.astype('uint32'), relay.reshape(const_10163.astype('uint32'), relay.shape_of(call_10159))) # shape=(11, 5, 4)
bop_10167 = relay.bitwise_xor(call_10160.astype('uint32'), relay.reshape(const_10163.astype('uint32'), relay.shape_of(call_10160))) # shape=(11, 5, 4)
output = relay.Tuple([bop_10164,])
output2 = relay.Tuple([bop_10167,])
func_10173 = relay.Function([], output)
mod['func_10173'] = func_10173
mod = relay.transform.InferType()(mod)
output = func_10173()
func_10174 = relay.Function([], output)
mutated_mod['func_10174'] = func_10174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9829_call = mod.get_global_var('func_9829')
func_9831_call = mutated_mod.get_global_var('func_9831')
call_10199 = func_9829_call()
call_10200 = func_9829_call()
uop_10210 = relay.sigmoid(call_10199.astype('float64')) # shape=(11, 5, 4)
uop_10212 = relay.sigmoid(call_10200.astype('float64')) # shape=(11, 5, 4)
output = uop_10210
output2 = uop_10212
func_10217 = relay.Function([], output)
mod['func_10217'] = func_10217
mod = relay.transform.InferType()(mod)
mutated_mod['func_10217'] = func_10217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10217_call = mutated_mod.get_global_var('func_10217')
call_10218 = func_10217_call()
output = call_10218
func_10219 = relay.Function([], output)
mutated_mod['func_10219'] = func_10219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9886_call = mod.get_global_var('func_9886')
func_9887_call = mutated_mod.get_global_var('func_9887')
call_10245 = relay.TupleGetItem(func_9886_call(), 5)
call_10246 = relay.TupleGetItem(func_9887_call(), 5)
func_1419_call = mod.get_global_var('func_1419')
func_1422_call = mutated_mod.get_global_var('func_1422')
var_10258 = relay.var("var_10258", dtype = "int32", shape = ())#candidate|10258|()|var|int32
var_10259 = relay.var("var_10259", dtype = "int32", shape = (117,))#candidate|10259|(117,)|var|int32
call_10257 = relay.TupleGetItem(func_1419_call(relay.reshape(var_10258.astype('int32'), []), relay.reshape(var_10259.astype('int32'), [1, 13, 9]), ), 0)
call_10260 = relay.TupleGetItem(func_1422_call(relay.reshape(var_10258.astype('int32'), []), relay.reshape(var_10259.astype('int32'), [1, 13, 9]), ), 0)
output = relay.Tuple([call_10245,call_10257,var_10258,var_10259,])
output2 = relay.Tuple([call_10246,call_10260,var_10258,var_10259,])
func_10262 = relay.Function([var_10258,var_10259,], output)
mod['func_10262'] = func_10262
mod = relay.transform.InferType()(mod)
var_10263 = relay.var("var_10263", dtype = "int32", shape = ())#candidate|10263|()|var|int32
var_10264 = relay.var("var_10264", dtype = "int32", shape = (117,))#candidate|10264|(117,)|var|int32
output = func_10262(var_10263,var_10264,)
func_10265 = relay.Function([var_10263,var_10264,], output)
mutated_mod['func_10265'] = func_10265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8773_call = mod.get_global_var('func_8773')
func_8775_call = mutated_mod.get_global_var('func_8775')
call_10384 = relay.TupleGetItem(func_8773_call(), 0)
call_10385 = relay.TupleGetItem(func_8775_call(), 0)
output = relay.Tuple([call_10384,])
output2 = relay.Tuple([call_10385,])
func_10394 = relay.Function([], output)
mod['func_10394'] = func_10394
mod = relay.transform.InferType()(mod)
output = func_10394()
func_10395 = relay.Function([], output)
mutated_mod['func_10395'] = func_10395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8242_call = mod.get_global_var('func_8242')
func_8243_call = mutated_mod.get_global_var('func_8243')
call_10410 = func_8242_call()
call_10411 = func_8242_call()
output = call_10410
output2 = call_10411
func_10413 = relay.Function([], output)
mod['func_10413'] = func_10413
mod = relay.transform.InferType()(mod)
mutated_mod['func_10413'] = func_10413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10413_call = mutated_mod.get_global_var('func_10413')
call_10414 = func_10413_call()
output = call_10414
func_10415 = relay.Function([], output)
mutated_mod['func_10415'] = func_10415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9677_call = mod.get_global_var('func_9677')
func_9679_call = mutated_mod.get_global_var('func_9679')
call_10418 = relay.TupleGetItem(func_9677_call(), 0)
call_10419 = relay.TupleGetItem(func_9679_call(), 0)
output = call_10418
output2 = call_10419
func_10442 = relay.Function([], output)
mod['func_10442'] = func_10442
mod = relay.transform.InferType()(mod)
mutated_mod['func_10442'] = func_10442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10442_call = mutated_mod.get_global_var('func_10442')
call_10443 = func_10442_call()
output = call_10443
func_10444 = relay.Function([], output)
mutated_mod['func_10444'] = func_10444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9512_call = mod.get_global_var('func_9512')
func_9514_call = mutated_mod.get_global_var('func_9514')
call_10458 = relay.TupleGetItem(func_9512_call(), 0)
call_10459 = relay.TupleGetItem(func_9514_call(), 0)
func_2512_call = mod.get_global_var('func_2512')
func_2518_call = mutated_mod.get_global_var('func_2518')
var_10467 = relay.var("var_10467", dtype = "int8", shape = (336,))#candidate|10467|(336,)|var|int8
const_10468 = relay.const(-2, dtype = "int32")#candidate|10468|()|const|int32
const_10469 = relay.const([7,-3,-9,-5,1,6,-2,-3,-7,-8,-2,10,6,6,-8,-5,8,2,-1,4,7,-5,5,1,9,-2,-6,-1,-6,-10,7,9,-5,3,-10,-10,-7,5,3,7,-7,2,-3,8,9,-4,-5,-2,-6,6,3,4,-3,3,4,7,-9,7,-4,-9,-2,1,-8,8,9,-9,-4,-2,1,-2,-3,8,-1,-2,-9,2,-6,1,-8,-7,6,9,10,-6,7,5,10,2,10,8,8,3,5,-7,4,9,-1,-10,10,-1,-6,8,4,9,7,1,9,1,-9,-4,4,5,-2,8,2,10,8], dtype = "int32")#candidate|10469|(117,)|const|int32
call_10466 = relay.TupleGetItem(func_2512_call(relay.reshape(var_10467.astype('int8'), [12, 14, 2]), relay.reshape(var_10467.astype('int8'), [12, 14, 2]), relay.reshape(const_10468.astype('int32'), []), relay.reshape(const_10469.astype('int32'), [117,]), ), 2)
call_10470 = relay.TupleGetItem(func_2518_call(relay.reshape(var_10467.astype('int8'), [12, 14, 2]), relay.reshape(var_10467.astype('int8'), [12, 14, 2]), relay.reshape(const_10468.astype('int32'), []), relay.reshape(const_10469.astype('int32'), [117,]), ), 2)
func_7782_call = mod.get_global_var('func_7782')
func_7786_call = mutated_mod.get_global_var('func_7786')
const_10472 = relay.const([-5.469514,-2.671509,-9.968526,1.242166,-1.113510,2.759676,0.489964,4.475806,-1.604572,7.909348,-9.559219,2.764365,1.835209], dtype = "float64")#candidate|10472|(13,)|const|float64
call_10471 = relay.TupleGetItem(func_7782_call(relay.reshape(call_10466.astype('float64'), []), relay.reshape(const_10472.astype('float64'), [13, 1]), ), 1)
call_10473 = relay.TupleGetItem(func_7786_call(relay.reshape(call_10466.astype('float64'), []), relay.reshape(const_10472.astype('float64'), [13, 1]), ), 1)
output = relay.Tuple([call_10458,call_10466,var_10467,const_10468,const_10469,call_10471,const_10472,])
output2 = relay.Tuple([call_10459,call_10470,var_10467,const_10468,const_10469,call_10473,const_10472,])
func_10492 = relay.Function([var_10467,], output)
mod['func_10492'] = func_10492
mod = relay.transform.InferType()(mod)
var_10493 = relay.var("var_10493", dtype = "int8", shape = (336,))#candidate|10493|(336,)|var|int8
output = func_10492(var_10493)
func_10494 = relay.Function([var_10493], output)
mutated_mod['func_10494'] = func_10494
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10506 = relay.const([[[-5.150575,-3.947316,4.463734,-2.325815,-3.671842,-5.055155,-4.753774,-3.574499],[5.018127,-1.533842,-9.017064,8.889961,7.005875,-7.266237,4.324434,-1.525349],[4.876441,-7.393574,-6.998359,-3.393945,-2.576028,5.055099,4.050129,-8.871016],[2.276382,8.716981,2.821383,-1.030370,-7.623195,-0.266096,-2.523554,-6.550974],[7.902200,-7.061856,0.591857,-9.406621,3.314931,4.750049,7.292661,1.325559],[-1.500674,3.535623,-5.311988,-2.556407,-4.687905,-2.459238,8.336307,-8.405359],[6.730152,-1.138130,8.833135,-5.246917,-0.920155,-5.996480,2.056150,-1.624922],[-2.598601,-8.376304,1.407985,-6.352158,0.328830,-9.609611,7.029477,-3.907374]],[[-3.809811,0.126622,8.940080,-0.680691,1.025135,-8.927882,6.983190,-8.468140],[-0.899939,-7.714898,8.126743,3.872919,1.504758,8.404049,6.713289,8.222533],[2.733921,5.232066,-7.450512,-7.117655,-1.626011,-5.260218,-2.650301,-5.706577],[0.192151,-7.297627,4.001681,-4.558811,-6.467941,4.000962,2.023596,7.398249],[7.978031,2.483676,-4.305367,-0.905708,-1.109230,-1.854164,1.766863,9.384154],[8.852587,-5.456552,-0.634997,4.736997,-8.497565,-6.039606,1.939287,-4.546558],[-7.948899,-8.604311,-8.755951,-3.445375,-9.154078,8.704485,9.222309,-9.679324],[-7.765490,4.390122,6.098276,6.034568,2.763999,2.555379,0.689450,7.417129]],[[-2.512843,9.375935,-5.921934,5.616902,-1.403789,9.201092,-2.539635,3.440203],[-1.209989,0.191412,2.640598,9.544608,-1.130191,-9.231537,0.875979,8.339850],[6.375804,-4.158000,-7.094452,-4.940497,-6.097335,-5.851731,-8.607439,5.557603],[-7.670722,-4.833972,-9.216198,-6.172782,8.640363,-9.951765,0.146150,-0.811786],[-3.634832,-1.608888,-1.418912,-1.823589,-4.546312,6.586005,-5.836729,6.621784],[7.184808,-4.940878,-2.608800,-6.894704,6.021544,-8.120699,1.974460,-9.136527],[1.939231,-1.816238,5.882339,-7.049435,-1.240080,-4.812266,-7.935159,7.268044],[-3.110365,1.233719,7.568713,-2.164680,7.837457,7.890551,2.036548,-1.720243]],[[-2.945299,-8.765647,1.344978,-5.930121,5.346891,-0.388928,-9.730257,6.206149],[-9.906620,9.647832,5.317333,-1.037332,-8.233809,3.743505,6.261744,-6.045894],[-7.085789,-4.117343,4.439764,0.684674,2.970461,5.124922,-8.561036,-9.857564],[9.878773,-0.509302,4.777735,1.410243,-8.222002,3.051660,6.073935,6.325388],[4.331144,1.689092,-7.687719,8.976095,4.030775,-9.748486,1.524445,-3.173921],[-3.349774,2.369291,6.854574,-3.339937,9.073319,-7.921224,3.106553,1.688371],[7.570791,-5.398285,6.525523,7.041417,-6.807138,-2.603432,8.856564,-7.494390],[0.846460,8.249420,8.790045,-6.395126,-7.425546,6.322582,9.368179,-5.687653]],[[7.797989,-8.734799,-4.929962,1.017434,7.015398,-7.803285,-0.837470,7.732828],[5.450541,5.261564,-4.992238,8.403374,-3.379739,-5.682806,0.366374,-2.562525],[5.377621,-7.566758,-5.656062,-4.095099,5.267831,-2.888437,-8.496951,-1.385124],[0.482003,-0.547594,2.251332,-7.756248,-9.122210,6.989456,0.695171,-0.120079],[2.049718,-2.088555,0.661779,8.233310,9.475965,-3.340341,3.920792,4.752935],[-0.359905,-3.317228,-5.855990,5.871704,-7.603252,-1.802380,-7.640495,-3.386977],[1.400736,-3.884271,-4.931632,-2.349456,4.087437,0.980774,1.270174,4.376412],[-2.769872,8.645905,-5.733342,2.214491,-1.247966,-1.119051,-2.663435,-9.412561]],[[5.622399,-9.259428,-6.601366,-3.924964,-1.395313,9.454850,-8.824520,8.066342],[-2.000934,7.808125,-7.533351,2.308633,7.430716,1.340249,9.826178,2.242693],[-6.229203,-9.209750,-2.704203,2.021966,-5.252009,-7.498764,4.435876,1.089154],[0.905076,4.435720,5.759520,-1.034250,-5.537599,-6.529893,7.044239,1.383168],[-4.842557,-2.032799,-5.192714,4.334875,-0.211980,6.530580,0.205536,-7.509099],[-2.604672,-8.445691,-2.220916,-5.836578,4.184477,-7.881151,-7.144442,-0.757037],[4.593423,-9.690598,-7.301043,-6.283126,6.032875,2.592481,-9.432937,0.046831],[5.461909,-5.672400,-7.308673,-6.064367,-6.627265,-0.123081,-6.147410,8.787116]],[[-7.504115,3.801965,7.502635,8.031978,-4.237420,6.068544,-0.777171,0.507862],[5.150232,-3.785810,-7.677229,4.336614,9.641551,0.400098,-0.754718,-8.520229],[-1.115165,-5.929191,6.774218,8.774522,-2.965150,7.422225,2.740128,-3.126252],[-6.856038,2.417476,8.001428,5.330027,-1.123892,9.193776,3.992287,5.905773],[2.012471,1.194415,-6.335896,-9.784863,-9.249148,3.754306,-7.334391,-7.340008],[-5.078869,3.858020,-8.024711,2.621234,-2.880344,8.508741,-0.952438,4.786852],[-4.753643,-9.268061,0.411658,1.035383,-2.343244,-9.272790,-9.870215,-8.490166],[-9.442793,3.955713,-4.128648,5.967063,4.414127,2.201664,-8.160406,9.414511]],[[9.735154,9.818965,1.107381,-9.607208,1.344103,-2.636170,6.060687,1.075777],[1.582026,-6.674654,7.381295,-7.073737,7.473744,-9.094497,-4.840713,-4.186138],[0.578619,2.874520,2.703664,1.337987,-2.408735,-6.498421,-4.331905,8.674133],[-1.534281,2.268722,0.968954,-3.802524,4.438298,-3.003547,0.823280,-2.576065],[-4.765743,8.934437,6.462991,8.631885,-4.381352,-6.674558,2.889857,-8.645449],[5.790195,7.290746,4.951569,7.337364,-1.296887,2.951501,8.686957,-4.536132],[9.795006,2.751058,-6.038530,-6.989595,-1.840848,1.381703,-6.834543,-5.890942],[-5.841632,-1.276382,0.378262,-2.938769,-4.856453,5.407643,4.135652,0.016009]],[[5.442949,-3.859081,4.967018,6.941508,0.957804,8.816162,-4.566813,0.445677],[5.541407,8.845237,-2.489458,-8.027841,1.576012,-8.958870,-7.049748,5.285226],[-0.717499,8.512770,-5.184531,2.066031,-4.813903,6.702519,-8.476479,9.135268],[-4.495400,6.989152,-3.005166,4.961999,2.183721,8.600786,-6.157716,-7.080079],[-3.605848,-1.183794,-4.857239,-7.450050,5.287570,9.412575,-7.837334,7.992089],[1.639533,7.701384,0.920394,3.384355,-5.857803,-1.627620,7.356598,8.867802],[-1.020870,-0.225778,-8.264842,6.503829,-5.191366,6.864828,7.368748,-8.679037],[7.235088,6.766408,-9.750339,-1.993272,2.007791,3.667088,6.871909,-9.425534]],[[7.889445,-5.000994,5.130615,0.018346,-5.718988,-4.407131,4.700053,4.053337],[6.315315,3.288075,1.533380,-2.777569,-1.532862,-1.366854,5.569753,-0.154034],[1.634943,-8.843627,-5.296231,9.595116,-1.727702,2.841780,-2.252276,7.486048],[8.069596,7.861236,-3.402074,1.080542,-1.735885,-0.392329,-3.168867,-3.374717],[7.706555,-2.627349,-1.469961,-7.869057,8.147225,-3.495044,-9.633351,9.830900],[8.288833,1.208325,4.106011,-8.667343,-2.482394,2.001167,4.725444,-6.384520],[-3.559618,9.014173,-8.695824,5.202905,2.965058,0.961541,4.228212,3.215648],[-4.574393,-1.589691,8.192091,7.542081,4.367779,-9.735492,-8.928351,3.377051]],[[7.776314,5.152119,2.590859,3.642331,-9.421504,-5.877442,-1.649387,-8.651971],[-6.803475,-5.714806,-7.714614,8.671632,-3.283446,-5.765805,1.684581,7.318530],[-7.671486,-8.955128,7.671205,-9.508262,1.196854,-2.086618,-9.396553,-0.244478],[0.353209,-8.950211,-5.775644,-8.440925,2.494872,6.870454,-3.480764,6.471301],[6.546599,-4.933258,-4.144927,-7.063869,-8.756311,4.715774,-5.490669,2.431743],[-4.540179,0.347689,-0.220065,7.520039,-6.867387,-1.968284,2.603017,-8.228766],[3.596379,1.072827,5.922415,9.130310,-1.959523,4.678628,-7.200972,5.976503],[-6.983092,5.585989,-2.252271,6.867902,9.674942,0.236873,9.908831,8.008601]],[[8.404150,-5.674215,8.254084,-7.919268,-2.416898,-3.923844,-6.423580,2.043959],[-1.763271,8.322390,6.446806,0.225040,-9.414899,9.152325,-0.895570,9.280650],[-6.713762,2.964247,0.791324,1.677173,5.918641,0.844615,3.273335,-1.962033],[4.661531,-5.273791,-4.269958,-2.888400,6.321472,5.239438,-8.990550,8.847449],[-7.848883,-1.105594,-8.614088,-9.263538,8.135923,0.769443,-0.486747,-5.352356],[-8.672679,0.843622,3.676929,2.404862,9.272928,-0.769556,8.799049,-1.784209],[-3.428193,-2.594333,4.692459,-6.516602,-8.556418,0.112643,-2.833568,-7.077997],[2.876478,9.777296,5.672335,7.861691,7.397454,4.240989,0.634731,8.765907]],[[-4.388229,-7.123348,-4.077186,0.902216,-5.475718,9.852944,-5.055599,6.825751],[5.988918,-1.930524,-7.917666,-5.269784,-5.948368,-8.822974,4.661918,7.558467],[1.635793,8.534914,1.519422,-3.083739,-9.438066,-9.546545,-8.640658,-5.198453],[-3.258085,-0.547459,-0.653356,1.386733,-3.832796,-7.384034,8.511262,-1.956168],[6.571352,-5.046596,-0.554949,-3.930419,-3.277850,5.932507,5.138005,8.586742],[4.074445,-4.812420,-8.188032,-5.147902,6.691789,-1.995575,-0.173799,-4.381761],[4.943020,-0.112651,4.192408,-3.974142,6.712243,-4.195981,9.579409,8.926486],[-9.680444,-1.572165,7.494996,4.169430,2.983498,7.391425,-5.388448,2.155551]],[[-2.760979,7.935240,-3.613805,7.867362,-6.889488,-3.701322,4.766719,-5.371925],[3.459453,-0.742453,4.781657,-0.010230,-7.218331,-1.734081,4.440113,-6.919578],[-8.303839,8.911668,7.437304,-6.589641,9.643656,8.747962,-3.909583,-5.530350],[-9.558859,-3.428732,-3.479827,-7.110743,-1.802326,-2.005815,-8.016788,7.160770],[-6.711469,0.576835,-3.216458,9.696817,9.382951,-3.506457,-4.791735,0.388743],[-4.764459,-5.603193,-6.374129,7.605706,-1.043520,-5.079293,-0.375933,9.099227],[0.290964,-1.779248,-6.856901,7.775244,-0.692158,-5.282780,-8.586985,5.841019],[6.132085,9.028825,-5.973882,0.858197,-6.451137,5.538665,0.650481,-1.432932]]], dtype = "float64")#candidate|10506|(14, 8, 8)|const|float64
uop_10507 = relay.erf(const_10506.astype('float64')) # shape=(14, 8, 8)
output = relay.Tuple([uop_10507,])
output2 = relay.Tuple([uop_10507,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_8876() -> float32 {
  %0 = @func_7114() /* ty=(float32,) */;
  %0.0
}

def @func_10457() -> (Tensor[(14, 8, 15), float64], Tensor[(15, 10, 7), float32]) {
  %1 = @func_8933() /* ty=(Tensor[(14, 8, 15), bool], Tensor[(14, 8, 15), float64]) */;
  %2 = @func_9849() /* ty=(float32, float32, Tensor[(5, 9, 11), uint64]) */;
  %3 = %2.0;
  %4 = cast(%3, dtype="uint64") /* ty=uint64 */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 10, 7), float32] */, dtype="uint64") /* ty=Tensor[(15, 10, 7), uint64] */;
  %6 = subtract(%4, %5) /* ty=Tensor[(15, 10, 7), uint64] */;
  %7 = cast(%6, dtype="float32") /* ty=Tensor[(15, 10, 7), float32] */;
  %8 = %1.1;
  %9 = sigmoid(%7) /* ty=Tensor[(15, 10, 7), float32] */;
  (%8, %9)
}

def @func_8733() -> (float32,) {
  %10 = @func_8012() /* ty=float32 */;
  (%10,)
}

def @func_5400() -> (Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) {
  %11 = cast(meta[relay.Constant][1] /* ty=Tensor[(504, 1), float64] */, dtype="float64") /* ty=Tensor[(504, 1), float64] */;
  %12 = reshape(%11, newshape=[6, 7, 12]) /* ty=Tensor[(6, 7, 12), float64] */;
  %13 = cast(0.563324f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %14 = reshape(%13, newshape=[]) /* ty=float32 */;
  %15 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 1, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 1, 12), float64] */;
  %16 = sqrt(%15) /* ty=Tensor[(8, 1, 12), float64] */;
  %17 = cast(%16, dtype="uint64") /* ty=Tensor[(8, 1, 12), uint64] */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(504, 1), float64] */, dtype="uint64") /* ty=Tensor[(504, 1), uint64] */;
  %19 = logical_xor(%17, %18) /* ty=Tensor[(8, 504, 12), uint64] */;
  %20 = cast(%16, dtype="bool") /* ty=Tensor[(8, 1, 12), bool] */;
  %21 = cast(%19, dtype="bool") /* ty=Tensor[(8, 504, 12), bool] */;
  %22 = @func_180(%12) /* ty=Tensor[(6, 7, 12), float64] */;
  %23 = @func_3740(%14) /* ty=Tensor[(3, 13, 1), bool] */;
  %24 = logical_or(%20, %21) /* ty=Tensor[(8, 504, 12), bool] */;
  (%22, %23, 0.563324f /* ty=float32 */, %24)
}

def @func_11634(%var_11612: Tensor[(98, 1), float32]) -> (float32, float32, Tensor[(5, 9, 11), uint64], Tensor[(98, 1), float32], Tensor[(98, 1), float64]) {
  %25 = @func_8055() /* ty=(float32,) */;
  %26 = cast(%var_11612, dtype="float32") /* ty=Tensor[(98, 1), float32] */;
  %27 = reshape(%26, newshape=[98]) /* ty=Tensor[(98), float32] */;
  %28 = @func_10366(%27) /* ty=(float32, Tensor[(7, 2, 7), uint16], Tensor[(98), float32]) */;
  %29 = @func_9148() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %30 = cast(%var_11612, dtype="float32") /* ty=Tensor[(98, 1), float32] */;
  %31 = log(%30) /* ty=Tensor[(98, 1), float32] */;
  %32 = cast(%31, dtype="float32") /* ty=Tensor[(98, 1), float32] */;
  %33 = cast(%31, dtype="float64") /* ty=Tensor[(98, 1), float64] */;
  %34 = %25.0;
  %35 = %28.0;
  %36 = %29.0;
  %37 = tan(%32) /* ty=Tensor[(98, 1), float32] */;
  %38 = log10(%33) /* ty=Tensor[(98, 1), float64] */;
  (%34, %35, %36, %37, %38)
}

def @func_11845() -> (Tensor[(5, 9, 11), uint64], Tensor[(14, 8, 15), float64]) {
  %39 = @func_9073() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %40 = @func_10457() /* ty=(Tensor[(14, 8, 15), float64], Tensor[(15, 10, 7), float32]) */;
  %41 = %39.0;
  %42 = %40.0;
  (%41, %42)
}

def @func_144(%var_99: Tensor[(9, 15, 1), float64]) -> Tensor[(9, 15, ?), bool] {
  %43 = cast(%var_99, dtype="float64") /* ty=Tensor[(9, 15, 1), float64] */;
  %44 = cosh(%43) /* ty=Tensor[(9, 15, 1), float64] */;
  %45 = cast(meta[relay.Constant][3] /* ty=Tensor[(9, 15, 1), float64] */, dtype="int64") /* ty=Tensor[(9, 15, 1), int64] */;
  %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
  %47 = cast(%44, dtype="int64") /* ty=Tensor[(9, 15, 1), int64] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %49 = bitwise_and(%47, %48) /* ty=Tensor[(9, 15, ?), int64] */;
  %50 = cast(%49, dtype="bool") /* ty=Tensor[(9, 15, ?), bool] */;
  %51 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(%44, dtype="bool") /* ty=Tensor[(9, 15, 1), bool] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%52, %53) /* ty=Tensor[(9, 15, ?), bool] */
}

def @func_8965() -> (Tensor[(495), uint64],) {
  %54 = @func_6658() /* ty=Tensor[(495), uint64] */;
  (%54,)
}

def @func_14879() -> (float32, Tensor[(324), int32], float32) {
  %55 = @func_7499() /* ty=(float32, Tensor[(324), int32], Tensor[(36), int32], Tensor[(324), int32]) */;
  %56 = @func_8876() /* ty=float32 */;
  %57 = %55.1;
  %58 = @func_5606() /* ty=float32 */;
  (%56, %57, %58)
}

def @func_9446(%var_9417: Tensor[(1950), float32]) -> (Tensor[(495), uint64], Tensor[(420), float64], Tensor[(364), float64], Tensor[(16, 112), int32], Tensor[(1950), bool], Tensor[(495), uint64]) {
  %59 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
  %60 = cast(meta[relay.Constant][4] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %61 = cast(meta[relay.Constant][5] /* ty=Tensor[(16, 112), int32] */, dtype="int32") /* ty=Tensor[(16, 112), int32] */;
  %62 = cast(%var_9417, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %63 = reshape(%60, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %64 = reshape(%61, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %65 = reshape(%62, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %66 = @func_9023(%63, %64, %65) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(364), float64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(364), float64], Tensor[(1792), int32], Tensor[(1950), float32]) */;
  %67 = cast(meta[relay.Constant][6] /* ty=Tensor[(1950), float32] */, dtype="bool") /* ty=Tensor[(1950), bool] */;
  %68 = shape_of(%var_9417, dtype="int32") /* ty=Tensor[(1), int32] */;
  %69 = cast(%var_9417, dtype="bool") /* ty=Tensor[(1950), bool] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?), bool] */;
  %71 = %59.2;
  %72 = %66.2;
  %73 = less(%69, %70) /* ty=Tensor[(1950), bool] */;
  %74 = @func_6002() /* ty=Tensor[(495), uint64] */;
  (%71, %72, meta[relay.Constant][4] /* ty=Tensor[(364), float64] */, meta[relay.Constant][5] /* ty=Tensor[(16, 112), int32] */, %73, %74)
}

def @func_6775() -> (float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) {
  %75 = @func_5551() /* ty=(float32,) */;
  %76 = cast(meta[relay.Constant][7] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
  %77 = cast(meta[relay.Constant][8] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %78 = cast(meta[relay.Constant][9] /* ty=Tensor[(448, 4), int32] */, dtype="int32") /* ty=Tensor[(448, 4), int32] */;
  %79 = reshape(%76, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), int16] */;
  %80 = reshape(%77, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %81 = reshape(%78, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %82 = @func_1194(%79, %80, %81) /* ty=(Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) */;
  %83 = %75.0;
  %84 = %82.1;
  (%83, %84, meta[relay.Constant][7] /* ty=Tensor[(350), int16] */, meta[relay.Constant][8] /* ty=Tensor[(1950), float32] */, meta[relay.Constant][9] /* ty=Tensor[(448, 4), int32] */)
}

def @func_5606() -> float32 {
  %85 = @func_5551() /* ty=(float32,) */;
  %85.0
}

def @func_13691() -> float32 {
  @func_6434() /* ty=float32 */
}

def @func_14717() -> Tensor[(495), uint64] {
  %86 = @func_14144() /* ty=(Tensor[(495), uint64],) */;
  %86.0
}

def @func_7585(%var_7537: Tensor[(420), float64], %var_7538: Tensor[(36), int32], %var_7540: Tensor[(16, 112), int32], %var_7547: Tensor[(2002), int64], %var_7548: Tensor[(182), float32], %var_7581: Tensor[(117), bool]) -> (Tensor[(5, 9, 11), uint64], Tensor[(5, 9, 11), uint64], Tensor[(1188), bool], Tensor[(420), float64], Tensor[(36), int32], Tensor[(182, 2), float64], Tensor[(16, 112), int32], Tensor[(1950), float32], float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(3, 3, 13), bool], Tensor[(117), bool]) {
  %87 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
  %88 = @func_7242() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %89 = cast(%var_7537, dtype="float64") /* ty=Tensor[(420), float64] */;
  %90 = cast(%var_7538, dtype="int32") /* ty=Tensor[(36), int32] */;
  %91 = cast(meta[relay.Constant][10] /* ty=Tensor[(182, 2), float64] */, dtype="float64") /* ty=Tensor[(182, 2), float64] */;
  %92 = cast(%var_7540, dtype="int32") /* ty=Tensor[(16, 112), int32] */;
  %93 = cast(meta[relay.Constant][11] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %94 = reshape(%89, newshape=[15, 14, 2]) /* ty=Tensor[(15, 14, 2), float64] */;
  %95 = reshape(%90, newshape=[36]) /* ty=Tensor[(36), int32] */;
  %96 = reshape(%91, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %97 = reshape(%92, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %98 = reshape(%93, newshape=[130, 15]) /* ty=Tensor[(130, 15), float32] */;
  %99 = @func_5492(%94, %95, %96, %97, %98) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(1188), bool], Tensor[(36), int32], Tensor[(3, 108), int32], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(130, 15), float32]) */;
  %100 = cast(meta[relay.Constant][12] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %101 = cast(%var_7547, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %102 = cast(meta[relay.Constant][11] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %103 = cast(%var_7548, dtype="float32") /* ty=Tensor[(182), float32] */;
  %104 = reshape(%100, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %105 = reshape(%101, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %106 = reshape(%102, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %107 = reshape(%103, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %108 = @func_6947(%104, %105, %106, %107) /* ty=(float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32], Tensor[(3, 13, 1), bool], Tensor[(182), float32]) */;
  %109 = cast(%var_7581, dtype="bool") /* ty=Tensor[(117), bool] */;
  %110 = reshape(%109, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), bool] */;
  %111 = %87.1;
  %112 = %88.0;
  %113 = %99.1;
  %114 = %108.0;
  %115 = @func_4255(%110) /* ty=Tensor[(3, 3, 13), bool] */;
  (%111, %112, %113, %var_7537, %var_7538, meta[relay.Constant][10] /* ty=Tensor[(182, 2), float64] */, %var_7540, meta[relay.Constant][11] /* ty=Tensor[(1950), float32] */, %114, meta[relay.Constant][12] /* ty=Tensor[(126), int16] */, %var_7547, %var_7548, %115, %var_7581)
}

def @func_14123() -> (float32, float32, float32) {
  %116 = @func_10227() /* ty=(Tensor[(5, 9, 11), float32], float32, Tensor[(14, 8, 15), float64]) */;
  %117 = @func_11201() /* ty=float32 */;
  %118 = %116.1;
  %119 = @func_10056() /* ty=float32 */;
  (%117, %118, %119)
}

def @func_5551() -> (float32,) {
  %120 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %121 = %120.2;
  (%121,)
}

def @func_8055() -> (float32,) {
  %122 = @func_8012() /* ty=float32 */;
  (%122,)
}

def @func_7974(%var_7923: Tensor[(420), float64], %var_7955: Tensor[(364), float64]) -> (Tensor[(5, 9, 11), uint64], Tensor[(1950), float32], Tensor[(420), float64], Tensor[(18, 2), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool], Tensor[(3, 3, 13), bool], Tensor[(324), int32], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(364), float64], Tensor[(350), int16]) {
  %123 = @func_6374() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %124 = cast(%var_7923, dtype="float64") /* ty=Tensor[(420), float64] */;
  %125 = cast(meta[relay.Constant][13] /* ty=Tensor[(18, 2), int32] */, dtype="int32") /* ty=Tensor[(18, 2), int32] */;
  %126 = cast(meta[relay.Constant][14] /* ty=Tensor[(1792), int32] */, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %127 = cast(meta[relay.Constant][15] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %128 = cast(meta[relay.Constant][16] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %129 = cast(meta[relay.Constant][17] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %130 = reshape(%124, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %131 = reshape(%125, newshape=[36]) /* ty=Tensor[(36), int32] */;
  %132 = reshape(%126, newshape=[16, 112]) /* ty=Tensor[(16, 112), int32] */;
  %133 = reshape(%127, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %134 = reshape(%128, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %135 = reshape(%129, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %136 = @func_7585(%130, %131, %132, %133, %134, %135) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(5, 9, 11), uint64], Tensor[(1188), bool], Tensor[(420), float64], Tensor[(36), int32], Tensor[(182, 2), float64], Tensor[(16, 112), int32], Tensor[(1950), float32], float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(3, 3, 13), bool], Tensor[(117), bool]) */;
  %137 = cast(meta[relay.Constant][13] /* ty=Tensor[(18, 2), int32] */, dtype="int32") /* ty=Tensor[(18, 2), int32] */;
  %138 = cast(meta[relay.Constant][18] /* ty=Tensor[(324), int32] */, dtype="int32") /* ty=Tensor[(324), int32] */;
  %139 = reshape(%137, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), int32] */;
  %140 = reshape(%138, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), int32] */;
  %141 = @func_5261(%139, %140) /* ty=(Tensor[(6, 6, 9), int32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(1188), bool], Tensor[(1188), bool]) */;
  %142 = %136.7;
  %143 = cast(%142, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %144 = reshape(%143, newshape=[10, 15, 13]) /* ty=Tensor[(10, 15, 13), float32] */;
  %145 = @func_372(%144) /* ty=(Tensor[(10, 15, 13), float32],) */;
  %146 = cast(%var_7955, dtype="float64") /* ty=Tensor[(364), float64] */;
  %147 = cast(%var_7955, dtype="float64") /* ty=Tensor[(364), float64] */;
  %148 = cast(meta[relay.Constant][19] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
  %149 = cast(meta[relay.Constant][14] /* ty=Tensor[(1792), int32] */, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %150 = %145.0;
  %151 = cast(%150, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
  %152 = reshape(%146, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
  %153 = reshape(%147, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
  %154 = reshape(%148, newshape=[350]) /* ty=Tensor[(350), int16] */;
  %155 = reshape(%149, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %156 = reshape(%151, newshape=[1, 1950]) /* ty=Tensor[(1, 1950), float32] */;
  %157 = @func_1925(%152, %153, %154, %155, %156) /* ty=(Tensor[(14, 2, 13), float64], Tensor[(1950), float32], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(8, 14, 16), int32], Tensor[(?, 1950), bool]) */;
  %158 = %123.0;
  %159 = %141.1;
  %160 = %157.1;
  (%158, %142, %var_7923, meta[relay.Constant][13] /* ty=Tensor[(18, 2), int32] */, meta[relay.Constant][14] /* ty=Tensor[(1792), int32] */, meta[relay.Constant][15] /* ty=Tensor[(2002), int64] */, meta[relay.Constant][16] /* ty=Tensor[(182), float32] */, meta[relay.Constant][17] /* ty=Tensor[(117), bool] */, %159, meta[relay.Constant][18] /* ty=Tensor[(324), int32] */, %150, %160, %var_7955, meta[relay.Constant][19] /* ty=Tensor[(350), int16] */)
}

def @func_11494() -> (Tensor[(5, 9, 11), float32], Tensor[(5, 9, 11), uint64]) {
  %161 = @func_10123() /* ty=(Tensor[(5, 9, 11), float32], Tensor[(8, 504, 12), bool]) */;
  %162 = @func_10685() /* ty=(float32, Tensor[(5, 9, 11), uint64]) */;
  %163 = %161.0;
  %164 = %162.1;
  (%163, %164)
}

def @func_12313(%var_12306: Tensor[(350), int16]) -> (Tensor[(14, 8, 15), float64], Tensor[(364), float64], Tensor[(2002), int64], Tensor[(350), int16], Tensor[(1950), float32]) {
  %165 = @func_11845() /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(14, 8, 15), float64]) */;
  %166 = cast(meta[relay.Constant][20] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %167 = cast(%var_12306, dtype="int16") /* ty=Tensor[(350), int16] */;
  %168 = cast(meta[relay.Constant][21] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %169 = reshape(%166, newshape=[14, 13, 11]) /* ty=Tensor[(14, 13, 11), int64] */;
  %170 = reshape(%167, newshape=[350]) /* ty=Tensor[(350), int16] */;
  %171 = reshape(%168, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %172 = @func_3440(%169, %170, %171) /* ty=(Tensor[(14, 13, 11), int64], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(2, 896), int32], Tensor[(1950), float32]) */;
  %173 = %165.1;
  %174 = %172.2;
  (%173, %174, meta[relay.Constant][20] /* ty=Tensor[(2002), int64] */, %var_12306, meta[relay.Constant][21] /* ty=Tensor[(1950), float32] */)
}

def @func_6002() -> Tensor[(495), uint64] {
  %175 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
  %175.2
}

def @func_7671() -> (Tensor[(7, 3, 15), float64],) {
  %176 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 3, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 3, 15), float64] */;
  %177 = atanh(%176) /* ty=Tensor[(7, 3, 15), float64] */;
  (%177,)
}

def @func_4660(%var_4652: Tensor[(7, 2, 7), float32]) -> Tensor[(7, 2, 7), uint16] {
  %178 = cast(%var_4652, dtype="float32") /* ty=Tensor[(7, 2, 7), float32] */;
  %179 = sigmoid(%178) /* ty=Tensor[(7, 2, 7), float32] */;
  %180 = cast(%var_4652, dtype="uint16") /* ty=Tensor[(7, 2, 7), uint16] */;
  %181 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %182 = cast(%179, dtype="uint16") /* ty=Tensor[(7, 2, 7), uint16] */;
  %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_or(%182, %183) /* ty=Tensor[(7, 2, 7), uint16] */
}

def @func_11280() -> float32 {
  %184 = @func_7499() /* ty=(float32, Tensor[(324), int32], Tensor[(36), int32], Tensor[(324), int32]) */;
  %184.0
}

def @func_12973() -> (Tensor[(5, 9, 11), uint64],) {
  %185 = @func_9264() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %186 = %185.0;
  (%186,)
}

def @func_14260(%var_14205: Tensor[(1, 1950), float32], %var_14208: Tensor[(9, 6, 13), float32]) -> (Tensor[(1950), bool], Tensor[(1, 1950), float32], Tensor[(9, 6, 13), bool], Tensor[(9, 6, 13), float32], Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64]) {
  %187 = cast(%var_14205, dtype="float32") /* ty=Tensor[(1, 1950), float32] */;
  %188 = reshape(%187, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %189 = @func_9446(%188) /* ty=(Tensor[(495), uint64], Tensor[(420), float64], Tensor[(364), float64], Tensor[(16, 112), int32], Tensor[(1950), bool], Tensor[(495), uint64]) */;
  %190 = @func_11035() /* ty=float32 */;
  %191 = cast(%190, dtype="bool") /* ty=bool */;
  %192 = cast(%var_14208, dtype="bool") /* ty=Tensor[(9, 6, 13), bool] */;
  %193 = cast(%190, dtype="float32") /* ty=float32 */;
  %194 = cast(%var_14208, dtype="float32") /* ty=Tensor[(9, 6, 13), float32] */;
  %195 = cast(meta[relay.Constant][23] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %196 = cast(%var_14205, dtype="float32") /* ty=Tensor[(1, 1950), float32] */;
  %197 = reshape(%195, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %198 = reshape(%196, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %199 = @func_14025(%197, %198) /* ty=(float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32], Tensor[(14, 8, 15), float64]) */;
  %200 = %189.4;
  %201 = logical_or(%191, %192) /* ty=Tensor[(9, 6, 13), bool] */;
  %202 = floor_divide(%193, %194) /* ty=Tensor[(9, 6, 13), float32] */;
  %203 = @func_12536() /* ty=Tensor[(1950), float32] */;
  %204 = %199.2;
  (%200, %var_14205, %201, %202, %203, %204, meta[relay.Constant][23] /* ty=Tensor[(2002), int64] */)
}

def @func_13506(%var_13482: uint8, %var_13483: Tensor[(11, 9, 4), uint8]) -> Tensor[(11, 9, 4), float64] {
  %205 = cast(%var_13482, dtype="uint8") /* ty=uint8 */;
  %206 = cast(%var_13483, dtype="uint8") /* ty=Tensor[(11, 9, 4), uint8] */;
  %207 = subtract(%205, %206) /* ty=Tensor[(11, 9, 4), uint8] */;
  %208 = cast(%207, dtype="float64") /* ty=Tensor[(11, 9, 4), float64] */;
  log(%208) /* ty=Tensor[(11, 9, 4), float64] */
}

def @func_12056(%var_12022: Tensor[(1, 12, 10), float32]) -> (Tensor[(?, 12, 10), float32],) {
  %209 = cast(%var_12022, dtype="float32") /* ty=Tensor[(1, 12, 10), float32] */;
  %210 = erf(%209) /* ty=Tensor[(1, 12, 10), float32] */;
  %211 = cast(%210, dtype="float32") /* ty=Tensor[(1, 12, 10), float32] */;
  %212 = shape_of(%var_12022, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%var_12022, dtype="float32") /* ty=Tensor[(1, 12, 10), float32] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %215 = floor_mod(%213, %214) /* ty=Tensor[(?, 12, 10), float32] */;
  %216 = cast(%215, dtype="float32") /* ty=Tensor[(?, 12, 10), float32] */;
  %217 = sigmoid(%216) /* ty=Tensor[(?, 12, 10), float32] */;
  (%217,)
}

def @func_12626() -> (Tensor[(5, 9, 11), uint64], Tensor[(1, 16, 6), float64], Tensor[(182), float32], float64) {
  %218 = @func_7242() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %219 = cast(meta[relay.Constant][24] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %220 = cast(8.91316f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %221 = reshape(%219, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), float32] */;
  %222 = reshape(%220, newshape=[]) /* ty=float64 */;
  %223 = @func_6354(%221, %222) /* ty=(Tensor[(1, 16, 6), float64], float64, Tensor[(48, 2), float64], Tensor[(3, 13, 1), bool], Tensor[(14, 13, 1), float32]) */;
  %224 = %218.0;
  %225 = %223.0;
  (%224, %225, meta[relay.Constant][24] /* ty=Tensor[(182), float32] */, 8.91316f64 /* ty=float64 */)
}

def @func_6947(%var_6929: Tensor[(126), int16], %var_6930: Tensor[(2002), int64], %var_6931: Tensor[(1950), float32], %var_6940: Tensor[(182), float32]) -> (float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32], Tensor[(3, 13, 1), bool], Tensor[(182), float32]) {
  %226 = @func_5606() /* ty=float32 */;
  %227 = cast(%226, dtype="int16") /* ty=int16 */;
  %228 = cast(%var_6929, dtype="int16") /* ty=Tensor[(126), int16] */;
  %229 = cast(%var_6930, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %230 = cast(%var_6931, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %231 = reshape(%227, newshape=[]) /* ty=int16 */;
  %232 = reshape(%228, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), int16] */;
  %233 = reshape(%229, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %234 = reshape(%230, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %235 = @func_4627(%231, %232, %233, %234) /* ty=(Tensor[(14, 9, 1), int16], Tensor[(1950), float32], Tensor[(2002), int64], Tensor[(350), int16], Tensor[(1950), float32]) */;
  %236 = cast(%var_6940, dtype="float32") /* ty=Tensor[(182), float32] */;
  %237 = cast(%226, dtype="float64") /* ty=float64 */;
  %238 = reshape(%236, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), float32] */;
  %239 = reshape(%237, newshape=[]) /* ty=float64 */;
  %240 = @func_6354(%238, %239) /* ty=(Tensor[(1, 16, 6), float64], float64, Tensor[(48, 2), float64], Tensor[(3, 13, 1), bool], Tensor[(14, 13, 1), float32]) */;
  %241 = %235.2;
  %242 = %240.3;
  (%226, %241, %var_6929, %var_6930, %var_6931, %242, %var_6940)
}

def @func_9283() -> (Tensor[(324), int32], Tensor[(3, 13, 1), bool], float32, Tensor[(495), uint64]) {
  %243 = @func_7499() /* ty=(float32, Tensor[(324), int32], Tensor[(36), int32], Tensor[(324), int32]) */;
  %244 = cast(-0.614525f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %245 = reshape(%244, newshape=[]) /* ty=float32 */;
  %246 = %243.3;
  %247 = @func_3740(%245) /* ty=Tensor[(3, 13, 1), bool] */;
  %248 = @func_6002() /* ty=Tensor[(495), uint64] */;
  (%246, %247, -0.614525f /* ty=float32 */, %248)
}

def @func_10633(%var_10630: Tensor[(1, 6, 10), float32]) -> (Tensor[(1, 6, 10), float32],) {
  %249 = cast(%var_10630, dtype="float32") /* ty=Tensor[(1, 6, 10), float32] */;
  %250 = sqrt(%249) /* ty=Tensor[(1, 6, 10), float32] */;
  (%250,)
}

def @main(%var_15626: Tensor[(16, 80), uint64]) -> (Tensor[(8, 504, 12), bool], float32, Tensor[(16, 80), float32]) {
  %251 = @func_12479() /* ty=(Tensor[(8, 504, 12), bool],) */;
  %252 = cast(%var_15626, dtype="uint64") /* ty=Tensor[(16, 80), uint64] */;
  %253 = reshape(%252, newshape=[1280]) /* ty=Tensor[(1280), uint64] */;
  %254 = @func_14773(%253) /* ty=(Tensor[(1950), float32], float32, Tensor[(6, 7, 12), float64], Tensor[(1280), uint64], Tensor[(504), float64]) */;
  %255 = cast(%var_15626, dtype="float32") /* ty=Tensor[(16, 80), float32] */;
  %256 = %251.0;
  %257 = %254.1;
  %258 = exp(%255) /* ty=Tensor[(16, 80), float32] */;
  (%256, %257, %258)
}

def @func_13885() -> Tensor[(5, 9, 11), uint64] {
  %259 = @func_10685() /* ty=(float32, Tensor[(5, 9, 11), uint64]) */;
  %259.1
}

def @func_10559() -> Tensor[(324), int32] {
  %260 = @func_7499() /* ty=(float32, Tensor[(324), int32], Tensor[(36), int32], Tensor[(324), int32]) */;
  %260.1
}

def @func_2124(%var_2115: Tensor[(5, 9, 11), uint64], %var_2116: Tensor[(5, 9, 11), uint64]) -> (Tensor[(5, 9, 11), uint64],) {
  %261 = cast(%var_2116, dtype="uint64") /* ty=Tensor[(5, 9, 11), uint64] */;
  %262 = shape_of(%var_2115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%var_2115, dtype="uint64") /* ty=Tensor[(5, 9, 11), uint64] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %265 = multiply(%263, %264) /* ty=Tensor[(5, 9, 11), uint64] */;
  (%265,)
}

def @func_12479() -> (Tensor[(8, 504, 12), bool],) {
  %266 = @func_11456() /* ty=(Tensor[(8, 504, 12), bool], Tensor[(495), uint64], Tensor[(1950), float32]) */;
  %267 = %266.0;
  (%267,)
}

def @func_13156() -> (Tensor[(15, 10, 7), float32], float32, Tensor[(420), float64], Tensor[(3, 18), float32], Tensor[(36), int32], Tensor[(1792, 1), int32], Tensor[(182), float32], Tensor[(8, 504, 12), float64], Tensor[(8, 504, 12), bool]) {
  %268 = @func_10457() /* ty=(Tensor[(14, 8, 15), float64], Tensor[(15, 10, 7), float32]) */;
  %269 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 18), float32] */, dtype="float32") /* ty=Tensor[(3, 18), float32] */;
  %270 = cast(meta[relay.Constant][26] /* ty=Tensor[(36), int32] */, dtype="int32") /* ty=Tensor[(36), int32] */;
  %271 = cast(meta[relay.Constant][27] /* ty=Tensor[(1792, 1), int32] */, dtype="int32") /* ty=Tensor[(1792, 1), int32] */;
  %272 = cast(meta[relay.Constant][28] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %273 = reshape(%269, newshape=[6, 1, 9]) /* ty=Tensor[(6, 1, 9), float32] */;
  %274 = reshape(%270, newshape=[36]) /* ty=Tensor[(36), int32] */;
  %275 = reshape(%271, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %276 = reshape(%272, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %277 = @func_12456(%273, %274, %275, %276) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(324), int32], Tensor[(6, 1, 9), bool], Tensor[(3, 13, 1), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool]) */;
  %278 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %279 = %278.3;
  %280 = cast(%279, dtype="float64") /* ty=Tensor[(8, 504, 12), float64] */;
  %281 = atanh(%280) /* ty=Tensor[(8, 504, 12), float64] */;
  %282 = cast(%281, dtype="float64") /* ty=Tensor[(8, 504, 12), float64] */;
  %283 = %268.1;
  %284 = @func_11201() /* ty=float32 */;
  %285 = %277.4;
  %286 = sinh(%282) /* ty=Tensor[(8, 504, 12), float64] */;
  %287 = @func_8938() /* ty=Tensor[(8, 504, 12), bool] */;
  (%283, %284, %285, meta[relay.Constant][25] /* ty=Tensor[(3, 18), float32] */, meta[relay.Constant][26] /* ty=Tensor[(36), int32] */, meta[relay.Constant][27] /* ty=Tensor[(1792, 1), int32] */, meta[relay.Constant][28] /* ty=Tensor[(182), float32] */, %286, %287)
}

def @func_12756() -> (Tensor[(14, 8, 15), float64],) {
  %288 = @func_11845() /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(14, 8, 15), float64]) */;
  %289 = %288.1;
  (%289,)
}

def @func_5261(%var_5213: Tensor[(6, 6, 1), int32], %var_5214: Tensor[(6, 6, 9), int32]) -> (Tensor[(6, 6, 9), int32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(1188), bool], Tensor[(1188), bool]) {
  %290 = cast(%var_5213, dtype="int32") /* ty=Tensor[(6, 6, 1), int32] */;
  %291 = cast(%var_5214, dtype="int32") /* ty=Tensor[(6, 6, 9), int32] */;
  %292 = cast(meta[relay.Constant][29] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %293 = reshape(%292, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), bool] */;
  %294 = cast(meta[relay.Constant][30] /* ty=Tensor[(1188), bool] */, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %295 = reshape(%294, newshape=[1188]) /* ty=Tensor[(1188), bool] */;
  %296 = @func_3267(%295) /* ty=(Tensor[(8, 15, 5), float32], Tensor[(135), float64], Tensor[(1188), bool], Tensor[(1, 135), float64]) */;
  %297 = subtract(%290, %291) /* ty=Tensor[(6, 6, 9), int32] */;
  %298 = @func_4255(%293) /* ty=Tensor[(3, 3, 13), bool] */;
  %299 = %296.2;
  (%297, %298, meta[relay.Constant][29] /* ty=Tensor[(117), bool] */, %299, meta[relay.Constant][30] /* ty=Tensor[(1188), bool] */)
}

def @func_6800(%var_6791: Tensor[(2002), int64]) -> (float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) {
  %300 = cast(meta[relay.Constant][31] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %301 = cast(%var_6791, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %302 = cast(meta[relay.Constant][32] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %303 = reshape(%300, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %304 = reshape(%301, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %305 = reshape(%302, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %306 = @func_6736(%303, %304, %305) /* ty=(float32, Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */;
  %307 = @func_6080() /* ty=float32 */;
  %308 = %306.3;
  (%307, %308, meta[relay.Constant][31] /* ty=Tensor[(126), int16] */, %var_6791, meta[relay.Constant][32] /* ty=Tensor[(1950), float32] */)
}

def @func_6965() -> Tensor[(1950), float32] {
  %309 = @func_6775() /* ty=(float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) */;
  %309.3
}

def @func_12280(%var_12259: Tensor[(1188), bool]) -> (Tensor[(5, 9, 11), uint64], float32, Tensor[(1188), bool], float32, Tensor[(5, 9, 11), uint64]) {
  %310 = @func_10922() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %311 = cast(%var_12259, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %312 = reshape(%311, newshape=[1188]) /* ty=Tensor[(1188), bool] */;
  %313 = @func_5520(%312) /* ty=(float32, Tensor[(1188), bool], Tensor[(1188), bool]) */;
  %314 = @func_9849() /* ty=(float32, float32, Tensor[(5, 9, 11), uint64]) */;
  %315 = @func_11845() /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(14, 8, 15), float64]) */;
  %316 = %310.0;
  %317 = %313.0;
  %318 = %314.1;
  %319 = %315.0;
  (%316, %317, %var_12259, %318, %319)
}

def @func_180(%var_175: Tensor[(6, 7, 12), float64]) -> Tensor[(6, 7, 12), float64] {
  %320 = cast(%var_175, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
  sigmoid(%320) /* ty=Tensor[(6, 7, 12), float64] */
}

def @func_8621() -> Tensor[(495), uint64] {
  @func_6658() /* ty=Tensor[(495), uint64] */
}

def @func_10366(%var_10359: Tensor[(98), float32]) -> (float32, Tensor[(7, 2, 7), uint16], Tensor[(98), float32]) {
  %321 = cast(%var_10359, dtype="float32") /* ty=Tensor[(98), float32] */;
  %322 = reshape(%321, newshape=[7, 2, 7]) /* ty=Tensor[(7, 2, 7), float32] */;
  %323 = @func_6434() /* ty=float32 */;
  %324 = @func_4660(%322) /* ty=Tensor[(7, 2, 7), uint16] */;
  (%323, %324, %var_10359)
}

def @func_6040(%var_6031: Tensor[(36), int32], %var_6032: Tensor[(324), int32]) -> (float32, Tensor[(1188), bool], Tensor[(36), int32], Tensor[(324), int32]) {
  %325 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
  %326 = cast(%var_6031, dtype="int32") /* ty=Tensor[(36), int32] */;
  %327 = cast(%var_6032, dtype="int32") /* ty=Tensor[(324), int32] */;
  %328 = reshape(%326, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), int32] */;
  %329 = reshape(%327, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), int32] */;
  %330 = @func_5261(%328, %329) /* ty=(Tensor[(6, 6, 9), int32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(1188), bool], Tensor[(1188), bool]) */;
  %331 = %325.0;
  %332 = %330.4;
  (%331, %332, %var_6031, %var_6032)
}

def @func_10227() -> (Tensor[(5, 9, 11), float32], float32, Tensor[(14, 8, 15), float64]) {
  %333 = @func_10123() /* ty=(Tensor[(5, 9, 11), float32], Tensor[(8, 504, 12), bool]) */;
  %334 = @func_9283() /* ty=(Tensor[(324), int32], Tensor[(3, 13, 1), bool], float32, Tensor[(495), uint64]) */;
  %335 = @func_8933() /* ty=(Tensor[(14, 8, 15), bool], Tensor[(14, 8, 15), float64]) */;
  %336 = %333.0;
  %337 = %334.2;
  %338 = %335.1;
  (%336, %337, %338)
}

def @func_14006() -> (Tensor[(5, 9, 11), float32], Tensor[(1, 16, 6), float64], float32, Tensor[(5, 9, 11), uint64]) {
  %339 = @func_12248() /* ty=(float32, float32, Tensor[(504), float64], Tensor[(42), float32]) */;
  %340 = %339.0;
  %341 = @func_10227() /* ty=(Tensor[(5, 9, 11), float32], float32, Tensor[(14, 8, 15), float64]) */;
  %342 = %341.0;
  %343 = cast(%340, dtype="float32") /* ty=float32 */;
  %344 = cast(%342, dtype="float32") /* ty=Tensor[(5, 9, 11), float32] */;
  %345 = @func_9118() /* ty=(Tensor[(7, 3, 15), float64], Tensor[(1, 16, 6), float64], float64, Tensor[(96), float64]) */;
  %346 = @func_9164() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %347 = add(%343, %344) /* ty=Tensor[(5, 9, 11), float32] */;
  %348 = %345.1;
  %349 = @func_8012() /* ty=float32 */;
  %350 = %346.0;
  (%347, %348, %349, %350)
}

def @func_15368(%var_15355: Tensor[(5, 5, 6), float32]) -> (Tensor[(5, 5, 6), bool], float32) {
  %351 = @func_11035() /* ty=float32 */;
  %352 = cast(%351, dtype="bool") /* ty=bool */;
  %353 = cast(%var_15355, dtype="bool") /* ty=Tensor[(5, 5, 6), bool] */;
  %354 = @func_8055() /* ty=(float32,) */;
  %355 = greater_equal(%352, %353) /* ty=Tensor[(5, 5, 6), bool] */;
  %356 = %354.0;
  (%355, %356)
}

def @func_11901() -> (Tensor[(448, 4), int32],) {
  %357 = @func_6775() /* ty=(float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) */;
  %358 = %357.4;
  (%358,)
}

def @func_2918(%var_2888: Tensor[(11, 12, 9), bool], %var_2889: Tensor[(11, 12, 9), bool], %var_2894: Tensor[(135), float64], %var_2913: Tensor[(11, 12, 9), float32]) -> (Tensor[(9, 15, ?), bool], Tensor[(135), float64], Tensor[(11, 12, 9), float32]) {
  %359 = cast(%var_2894, dtype="float64") /* ty=Tensor[(135), float64] */;
  %360 = reshape(%359, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float64] */;
  %361 = cast(%var_2889, dtype="bool") /* ty=Tensor[(11, 12, 9), bool] */;
  %362 = shape_of(%var_2888, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(%var_2888, dtype="bool") /* ty=Tensor[(11, 12, 9), bool] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %365 = logical_and(%363, %364) /* ty=Tensor[(11, 12, 9), bool] */;
  %366 = cast(%365, dtype="float32") /* ty=Tensor[(11, 12, 9), float32] */;
  %367 = rsqrt(%366) /* ty=Tensor[(11, 12, 9), float32] */;
  %368 = cast(%var_2913, dtype="float32") /* ty=Tensor[(11, 12, 9), float32] */;
  %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%367, dtype="float32") /* ty=Tensor[(11, 12, 9), float32] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %372 = @func_144(%360) /* ty=Tensor[(9, 15, ?), bool] */;
  %373 = floor_divide(%370, %371) /* ty=Tensor[(11, 12, 9), float32] */;
  (%372, %var_2894, %373)
}

def @func_14572() -> Tensor[(1792), int32] {
  %374 = @func_13872() /* ty=(float32, Tensor[(1792), int32], Tensor[(1, 117), uint16]) */;
  %374.1
}

def @func_4255(%var_4245: Tensor[(3, 3, 13), bool]) -> Tensor[(3, 3, 13), bool] {
  %375 = cast(%var_4245, dtype="bool") /* ty=Tensor[(3, 3, 13), bool] */;
  %376 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(3, 3, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 3, 13), bool] */, dtype="bool") /* ty=Tensor[(3, 3, 13), bool] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%377, %378) /* ty=Tensor[(3, 3, 13), bool] */
}

def @func_3440(%var_3392: Tensor[(14, 13, 11), int64], %var_3418: Tensor[(350), int16], %var_3420: Tensor[(1950), float32]) -> (Tensor[(14, 13, 11), int64], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(2, 896), int32], Tensor[(1950), float32]) {
  %379 = cast(%var_3392, dtype="int64") /* ty=Tensor[(14, 13, 11), int64] */;
  %380 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(14, 13, 11), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %381 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 13, 11), int64] */, dtype="int64") /* ty=Tensor[(14, 13, 11), int64] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %383 = cast(meta[relay.Constant][35] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %384 = cast(meta[relay.Constant][35] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %385 = cast(%var_3418, dtype="int16") /* ty=Tensor[(350), int16] */;
  %386 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 896), int32] */, dtype="int32") /* ty=Tensor[(2, 896), int32] */;
  %387 = cast(%var_3420, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %388 = reshape(%383, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
  %389 = reshape(%384, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
  %390 = reshape(%385, newshape=[350]) /* ty=Tensor[(350), int16] */;
  %391 = reshape(%386, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %392 = reshape(%387, newshape=[1, 1950]) /* ty=Tensor[(1, 1950), float32] */;
  %393 = @func_1925(%388, %389, %390, %391, %392) /* ty=(Tensor[(14, 2, 13), float64], Tensor[(1950), float32], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(8, 14, 16), int32], Tensor[(?, 1950), bool]) */;
  %394 = left_shift(%381, %382) /* ty=Tensor[(14, 13, 11), int64] */;
  %395 = %393.2;
  (%394, %395, meta[relay.Constant][35] /* ty=Tensor[(364), float64] */, %var_3418, meta[relay.Constant][36] /* ty=Tensor[(2, 896), int32] */, %var_3420)
}

def @func_9264() -> (Tensor[(5, 9, 11), uint64],) {
  %396 = @func_7242() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %397 = %396.0;
  (%397,)
}

def @func_8862(%var_8842: Tensor[(182), float32]) -> (Tensor[(495), uint64], Tensor[(14, 13, 1), float32], Tensor[(182), float32], float64) {
  %398 = cast(%var_8842, dtype="float32") /* ty=Tensor[(182), float32] */;
  %399 = cast(-0.244562f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %400 = reshape(%398, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), float32] */;
  %401 = reshape(%399, newshape=[]) /* ty=float64 */;
  %402 = @func_6354(%400, %401) /* ty=(Tensor[(1, 16, 6), float64], float64, Tensor[(48, 2), float64], Tensor[(3, 13, 1), bool], Tensor[(14, 13, 1), float32]) */;
  %403 = @func_6002() /* ty=Tensor[(495), uint64] */;
  %404 = %402.4;
  (%403, %404, %var_8842, -0.244562f64 /* ty=float64 */)
}

def @func_14483(%var_14475: Tensor[(1792), int32], %var_14477: Tensor[(1280), uint64]) -> (Tensor[(5, 9, 11), uint64], Tensor[(16, 10, 8), bool], Tensor[(1792), int32], Tensor[(117), bool], Tensor[(1280), uint64]) {
  %405 = @func_9148() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %406 = cast(%var_14475, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %407 = cast(meta[relay.Constant][37] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %408 = cast(%var_14477, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %409 = reshape(%406, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %410 = reshape(%407, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %411 = reshape(%408, newshape=[1280]) /* ty=Tensor[(1280), uint64] */;
  %412 = @func_11809(%409, %410, %411) /* ty=(float32, float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(182), float32], Tensor[(1792), int32], Tensor[(182), float32], Tensor[(117), bool], Tensor[(1950), float32], Tensor[(16, 10, 8), bool], Tensor[(1280), uint64], Tensor[(504), float64], Tensor[(1950), float32]) */;
  %413 = %405.0;
  %414 = %412.9;
  (%413, %414, %var_14475, meta[relay.Constant][37] /* ty=Tensor[(117), bool] */, %var_14477)
}

def @func_14025(%var_14020: Tensor[(2002), int64], %var_14021: Tensor[(1950), float32]) -> (float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32], Tensor[(14, 8, 15), float64]) {
  %415 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %416 = %415.2;
  %417 = cast(%416, dtype="int16") /* ty=int16 */;
  %418 = cast(meta[relay.Constant][38] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %419 = cast(%var_14020, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %420 = cast(%var_14021, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %421 = reshape(%417, newshape=[]) /* ty=int16 */;
  %422 = reshape(%418, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), int16] */;
  %423 = reshape(%419, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %424 = reshape(%420, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %425 = @func_4627(%421, %422, %423, %424) /* ty=(Tensor[(14, 9, 1), int16], Tensor[(1950), float32], Tensor[(2002), int64], Tensor[(350), int16], Tensor[(1950), float32]) */;
  %426 = @func_11845() /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(14, 8, 15), float64]) */;
  %427 = %425.2;
  %428 = %426.1;
  (%416, %427, meta[relay.Constant][38] /* ty=Tensor[(126), int16] */, %var_14020, %var_14021, %428)
}

def @func_10685() -> (float32, Tensor[(5, 9, 11), uint64]) {
  %429 = @func_5551() /* ty=(float32,) */;
  %430 = @func_9148() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %431 = %429.0;
  %432 = %430.0;
  (%431, %432)
}

def @func_5961() -> (float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) {
  %433 = cast(meta[relay.Constant][39] /* ty=Tensor[(495), uint64] */, dtype="uint64") /* ty=Tensor[(495), uint64] */;
  %434 = cast(meta[relay.Constant][39] /* ty=Tensor[(495), uint64] */, dtype="uint64") /* ty=Tensor[(495), uint64] */;
  %435 = reshape(%433, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), uint64] */;
  %436 = reshape(%434, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), uint64] */;
  %437 = @func_2124(%435, %436) /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %438 = @func_5606() /* ty=float32 */;
  %439 = %437.0;
  (%438, %439, meta[relay.Constant][39] /* ty=Tensor[(495), uint64] */)
}

def @func_10591(%var_10579: Tensor[(8, 504, 12), bool]) -> Tensor[(8, 504, 12), bool] {
  %440 = @func_10020() /* ty=(Tensor[(8, 504, 12), bool],) */;
  %441 = %440.0;
  %442 = cast(%var_10579, dtype="bool") /* ty=Tensor[(8, 504, 12), bool] */;
  %443 = shape_of(%441, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%441, dtype="bool") /* ty=Tensor[(8, 504, 12), bool] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%444, %445) /* ty=Tensor[(8, 504, 12), bool] */
}

def @func_12456(%var_12433: Tensor[(6, 1, 9), float32], %var_12442: Tensor[(36), int32], %var_12443: Tensor[(1792), int32], %var_12445: Tensor[(182), float32]) -> (Tensor[(5, 9, 11), uint64], Tensor[(324), int32], Tensor[(6, 1, 9), bool], Tensor[(3, 13, 1), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool]) {
  %446 = @func_10685() /* ty=(float32, Tensor[(5, 9, 11), uint64]) */;
  %447 = @func_9283() /* ty=(Tensor[(324), int32], Tensor[(3, 13, 1), bool], float32, Tensor[(495), uint64]) */;
  %448 = @func_10056() /* ty=float32 */;
  %449 = cast(%448, dtype="bool") /* ty=bool */;
  %450 = cast(%var_12433, dtype="bool") /* ty=Tensor[(6, 1, 9), bool] */;
  %451 = @func_5789() /* ty=(float32, Tensor[(3, 13, 1), bool]) */;
  %452 = cast(meta[relay.Constant][40] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %453 = cast(%var_12442, dtype="int32") /* ty=Tensor[(36), int32] */;
  %454 = cast(%var_12443, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %455 = cast(meta[relay.Constant][41] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %456 = cast(%var_12445, dtype="float32") /* ty=Tensor[(182), float32] */;
  %457 = cast(meta[relay.Constant][42] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %458 = reshape(%452, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %459 = reshape(%453, newshape=[36]) /* ty=Tensor[(36), int32] */;
  %460 = reshape(%454, newshape=[16, 112]) /* ty=Tensor[(16, 112), int32] */;
  %461 = reshape(%455, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %462 = reshape(%456, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %463 = reshape(%457, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %464 = @func_7585(%458, %459, %460, %461, %462, %463) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(5, 9, 11), uint64], Tensor[(1188), bool], Tensor[(420), float64], Tensor[(36), int32], Tensor[(182, 2), float64], Tensor[(16, 112), int32], Tensor[(1950), float32], float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(3, 3, 13), bool], Tensor[(117), bool]) */;
  %465 = %446.1;
  %466 = %447.0;
  %467 = not_equal(%449, %450) /* ty=Tensor[(6, 1, 9), bool] */;
  %468 = %451.1;
  %469 = %464.3;
  (%465, %466, %467, %468, %469, meta[relay.Constant][40] /* ty=Tensor[(420), float64] */, %var_12442, %var_12443, meta[relay.Constant][41] /* ty=Tensor[(2002), int64] */, %var_12445, meta[relay.Constant][42] /* ty=Tensor[(117), bool] */)
}

def @func_12536() -> Tensor[(1950), float32] {
  %470 = @func_11456() /* ty=(Tensor[(8, 504, 12), bool], Tensor[(495), uint64], Tensor[(1950), float32]) */;
  %470.2
}

def @func_15019() -> (Tensor[(5, 9, 11), float32],) {
  %471 = @func_10227() /* ty=(Tensor[(5, 9, 11), float32], float32, Tensor[(14, 8, 15), float64]) */;
  %472 = %471.0;
  (%472,)
}

def @func_15292() -> (Tensor[(14, 8, 15), float64], Tensor[(1950), float32], Tensor[(2002), int64], Tensor[(1950), float32]) {
  %473 = @func_8933() /* ty=(Tensor[(14, 8, 15), bool], Tensor[(14, 8, 15), float64]) */;
  %474 = cast(meta[relay.Constant][43] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %475 = cast(meta[relay.Constant][44] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %476 = reshape(%474, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %477 = reshape(%475, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %478 = @func_14025(%476, %477) /* ty=(float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32], Tensor[(14, 8, 15), float64]) */;
  %479 = %473.1;
  %480 = %478.4;
  (%479, %480, meta[relay.Constant][43] /* ty=Tensor[(2002), int64] */, meta[relay.Constant][44] /* ty=Tensor[(1950), float32] */)
}

def @func_9544(%var_9508: Tensor[(117), bool], %var_9534: Tensor[(1792), int32]) -> (float32, float32, Tensor[(117), bool], float32, Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) {
  %481 = cast(%var_9508, dtype="bool") /* ty=Tensor[(117), bool] */;
  %482 = @func_8012() /* ty=float32 */;
  %483 = cast(%482, dtype="float32") /* ty=float32 */;
  %484 = reshape(%481, newshape=[39, 3]) /* ty=Tensor[(39, 3), bool] */;
  %485 = reshape(%483, newshape=[]) /* ty=float32 */;
  %486 = @func_5811(%484, %485) /* ty=(Tensor[(3, 3, 13), bool], Tensor[(39, 3), bool], float32, Tensor[(3, 13, 1), bool], Tensor[(3, 13, 1), int32]) */;
  %487 = cast(%var_9534, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %488 = cast(%var_9534, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %489 = reshape(%487, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int32] */;
  %490 = reshape(%488, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int32] */;
  %491 = %486.2;
  %492 = @func_8876() /* ty=float32 */;
  %493 = @func_347(%489, %490) /* ty=Tensor[(8, 14, 16), int32] */;
  (%482, %491, %var_9508, %492, %493, %var_9534)
}

def @func_10542(%var_10516: Tensor[(10, 4, 10), float64]) -> (Tensor[(1950), float32], Tensor[(10, 4, 10), float32]) {
  %494 = @func_6775() /* ty=(float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) */;
  %495 = cast(%var_10516, dtype="float64") /* ty=Tensor[(10, 4, 10), float64] */;
  %496 = atan(%495) /* ty=Tensor[(10, 4, 10), float64] */;
  %497 = cast(%496, dtype="float32") /* ty=Tensor[(10, 4, 10), float32] */;
  %498 = %494.3;
  %499 = acosh(%497) /* ty=Tensor[(10, 4, 10), float32] */;
  (%498, %499)
}

def @func_9164() -> (Tensor[(5, 9, 11), uint64],) {
  %500 = @func_6374() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %501 = %500.0;
  (%501,)
}

def @func_13257() -> (float32, float32, Tensor[(1188), bool], Tensor[(3, 396), bool]) {
  %502 = @func_5551() /* ty=(float32,) */;
  %503 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 396), bool] */, dtype="bool") /* ty=Tensor[(3, 396), bool] */;
  %504 = reshape(%503, newshape=[1188]) /* ty=Tensor[(1188), bool] */;
  %505 = @func_12280(%504) /* ty=(Tensor[(5, 9, 11), uint64], float32, Tensor[(1188), bool], float32, Tensor[(5, 9, 11), uint64]) */;
  %506 = @func_6434() /* ty=float32 */;
  %507 = %502.0;
  %508 = %505.2;
  (%506, %507, %508, meta[relay.Constant][45] /* ty=Tensor[(3, 396), bool] */)
}

def @func_9700(%var_9697: Tensor[(9, 4), int32]) -> (float32, Tensor[(36), int32], Tensor[(9, 4), int32], Tensor[(324), int32]) {
  %509 = @func_5789() /* ty=(float32, Tensor[(3, 13, 1), bool]) */;
  %510 = cast(%var_9697, dtype="int32") /* ty=Tensor[(9, 4), int32] */;
  %511 = cast(meta[relay.Constant][46] /* ty=Tensor[(324), int32] */, dtype="int32") /* ty=Tensor[(324), int32] */;
  %512 = reshape(%510, newshape=[36]) /* ty=Tensor[(36), int32] */;
  %513 = reshape(%511, newshape=[324]) /* ty=Tensor[(324), int32] */;
  %514 = @func_6040(%512, %513) /* ty=(float32, Tensor[(1188), bool], Tensor[(36), int32], Tensor[(324), int32]) */;
  %515 = %509.0;
  %516 = %514.2;
  (%515, %516, %var_9697, meta[relay.Constant][46] /* ty=Tensor[(324), int32] */)
}

def @func_6147(%var_6118: Tensor[(13, 9), bool]) -> (float32, Tensor[(3, 3, 13), bool], Tensor[(13, 9), bool], Tensor[(1792), int32], Tensor[(91, 4), float64], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(1950), float32], Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32]) {
  %517 = cast(%var_6118, dtype="bool") /* ty=Tensor[(13, 9), bool] */;
  %518 = reshape(%517, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), bool] */;
  %519 = cast(meta[relay.Constant][47] /* ty=Tensor[(91, 4), float64] */, dtype="float64") /* ty=Tensor[(91, 4), float64] */;
  %520 = cast(meta[relay.Constant][47] /* ty=Tensor[(91, 4), float64] */, dtype="float64") /* ty=Tensor[(91, 4), float64] */;
  %521 = cast(meta[relay.Constant][48] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
  %522 = cast(meta[relay.Constant][49] /* ty=Tensor[(1792), int32] */, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %523 = cast(meta[relay.Constant][50] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %524 = reshape(%519, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
  %525 = reshape(%520, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
  %526 = reshape(%521, newshape=[350]) /* ty=Tensor[(350), int16] */;
  %527 = reshape(%522, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %528 = reshape(%523, newshape=[1, 1950]) /* ty=Tensor[(1, 1950), float32] */;
  %529 = @func_1925(%524, %525, %526, %527, %528) /* ty=(Tensor[(14, 2, 13), float64], Tensor[(1950), float32], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(8, 14, 16), int32], Tensor[(?, 1950), bool]) */;
  %530 = cast(meta[relay.Constant][48] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
  %531 = cast(meta[relay.Constant][50] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %532 = %529.3;
  %533 = cast(%532, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %534 = reshape(%530, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), int16] */;
  %535 = reshape(%531, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %536 = reshape(%533, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %537 = @func_1194(%534, %535, %536) /* ty=(Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) */;
  %538 = cast(meta[relay.Constant][50] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %539 = reshape(%538, newshape=[10, 15, 13]) /* ty=Tensor[(10, 15, 13), float32] */;
  %540 = @func_372(%539) /* ty=(Tensor[(10, 15, 13), float32],) */;
  %541 = @func_6080() /* ty=float32 */;
  %542 = @func_4255(%518) /* ty=Tensor[(3, 3, 13), bool] */;
  %543 = %537.0;
  %544 = %540.0;
  (%541, %542, %var_6118, %532, meta[relay.Constant][47] /* ty=Tensor[(91, 4), float64] */, meta[relay.Constant][48] /* ty=Tensor[(350), int16] */, meta[relay.Constant][49] /* ty=Tensor[(1792), int32] */, meta[relay.Constant][50] /* ty=Tensor[(1950), float32] */, %543, %544)
}

def @func_10056() -> float32 {
  @func_8012() /* ty=float32 */
}

def @func_10020() -> (Tensor[(8, 504, 12), bool],) {
  %545 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %546 = %545.3;
  (%546,)
}

def @func_14559(%var_14543: Tensor[(8, 4, 6), float32]) -> (Tensor[(98), float32], Tensor[(7, 2, 7), bool], Tensor[(5, 9, 11), float64], Tensor[(8, 4, 6), bool]) {
  %547 = @func_11280() /* ty=float32 */;
  %548 = cast(meta[relay.Constant][51] /* ty=Tensor[(98), float32] */, dtype="float32") /* ty=Tensor[(98), float32] */;
  %549 = reshape(%548, newshape=[7, 2, 7]) /* ty=Tensor[(7, 2, 7), float32] */;
  %550 = @func_4660(%549) /* ty=Tensor[(7, 2, 7), uint16] */;
  %551 = cast(%547, dtype="bool") /* ty=bool */;
  %552 = cast(%550, dtype="bool") /* ty=Tensor[(7, 2, 7), bool] */;
  %553 = @func_7370() /* ty=(float32, float32, Tensor[(5, 9, 11), float64]) */;
  %554 = @func_13388() /* ty=float32 */;
  %555 = cast(%554, dtype="bool") /* ty=bool */;
  %556 = cast(%var_14543, dtype="bool") /* ty=Tensor[(8, 4, 6), bool] */;
  %557 = not_equal(%551, %552) /* ty=Tensor[(7, 2, 7), bool] */;
  %558 = %553.2;
  %559 = logical_and(%555, %556) /* ty=Tensor[(8, 4, 6), bool] */;
  (meta[relay.Constant][51] /* ty=Tensor[(98), float32] */, %557, %558, %559)
}

def @func_15176(%var_15146: uint16, %var_15147: Tensor[(7, 13, 10), uint16]) -> Tensor[(7, 13, 10), uint16] {
  %560 = cast(%var_15146, dtype="uint16") /* ty=uint16 */;
  %561 = cast(%var_15147, dtype="uint16") /* ty=Tensor[(7, 13, 10), uint16] */;
  bitwise_and(%560, %561) /* ty=Tensor[(7, 13, 10), uint16] */
}

def @func_2286(%var_2261: float64, %var_2262: Tensor[(1, 16, 6), float64]) -> (Tensor[(1, 16, 6), float64],) {
  %562 = cast(%var_2261, dtype="float64") /* ty=float64 */;
  %563 = cast(%var_2262, dtype="float64") /* ty=Tensor[(1, 16, 6), float64] */;
  %564 = mod(%562, %563) /* ty=Tensor[(1, 16, 6), float64] */;
  (%564,)
}

def @func_12827(%var_12804: Tensor[(36), int32], %var_12805: Tensor[(324), int32]) -> (float32, Tensor[(6, 6, 9), int32], Tensor[(36), int32], Tensor[(324), int32], Tensor[(8, 504, 12), bool], Tensor[(2, 24192), bool], Tensor[(1, 2002), int64], Tensor[(5, 9, 11), uint64]) {
  %565 = @func_8055() /* ty=(float32,) */;
  %566 = cast(%var_12804, dtype="int32") /* ty=Tensor[(36), int32] */;
  %567 = cast(%var_12805, dtype="int32") /* ty=Tensor[(324), int32] */;
  %568 = reshape(%566, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), int32] */;
  %569 = reshape(%567, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), int32] */;
  %570 = @func_5261(%568, %569) /* ty=(Tensor[(6, 6, 9), int32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(1188), bool], Tensor[(1188), bool]) */;
  %571 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 24192), bool] */, dtype="bool") /* ty=Tensor[(2, 24192), bool] */;
  %572 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 24192), bool] */, dtype="float64") /* ty=Tensor[(2, 24192), float64] */;
  %573 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 2002), int64] */, dtype="int64") /* ty=Tensor[(1, 2002), int64] */;
  %574 = reshape(%571, newshape=[8, 504, 12]) /* ty=Tensor[(8, 504, 12), bool] */;
  %575 = reshape(%572, newshape=[8, 504, 12]) /* ty=Tensor[(8, 504, 12), float64] */;
  %576 = reshape(%573, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %577 = @func_7005(%574, %575, %576) /* ty=(Tensor[(8, 504, 12), bool], Tensor[(8, 504, 12), int8], Tensor[(1950), float32], Tensor[(2002), int64]) */;
  %578 = @func_10922() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %579 = %565.0;
  %580 = %570.0;
  %581 = %577.0;
  %582 = %578.0;
  (%579, %580, %var_12804, %var_12805, %581, meta[relay.Constant][52] /* ty=Tensor[(2, 24192), bool] */, meta[relay.Constant][53] /* ty=Tensor[(1, 2002), int64] */, %582)
}

def @func_11975() -> (Tensor[(5, 9, 11), uint64], Tensor[(5, 9, 11), uint64], Tensor[(792), float64]) {
  %583 = @func_10685() /* ty=(float32, Tensor[(5, 9, 11), uint64]) */;
  %584 = cast(meta[relay.Constant][54] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %585 = reshape(%584, newshape=[6, 11, 12]) /* ty=Tensor[(6, 11, 12), float64] */;
  %586 = @func_10004(%585) /* ty=(Tensor[(6, 11, 12), float64], Tensor[(5, 9, 11), uint64]) */;
  %587 = %583.1;
  %588 = %586.1;
  (%587, %588, meta[relay.Constant][54] /* ty=Tensor[(792), float64] */)
}

def @func_13784(%var_13760: Tensor[(9, 9, 8), float32]) -> (Tensor[(9, 9, 8), float64],) {
  %589 = cast(%var_13760, dtype="float32") /* ty=Tensor[(9, 9, 8), float32] */;
  %590 = acosh(%589) /* ty=Tensor[(9, 9, 8), float32] */;
  %591 = cast(%590, dtype="float64") /* ty=Tensor[(9, 9, 8), float64] */;
  %592 = cosh(%591) /* ty=Tensor[(9, 9, 8), float64] */;
  (%592,)
}

def @func_7370() -> (float32, float32, Tensor[(5, 9, 11), float64]) {
  %593 = @func_5551() /* ty=(float32,) */;
  %594 = @func_6775() /* ty=(float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) */;
  %595 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
  %596 = %595.1;
  %597 = cast(%596, dtype="float64") /* ty=Tensor[(5, 9, 11), float64] */;
  %598 = log(%597) /* ty=Tensor[(5, 9, 11), float64] */;
  %599 = cast(%598, dtype="float64") /* ty=Tensor[(5, 9, 11), float64] */;
  %600 = %593.0;
  %601 = %594.0;
  %602 = tan(%599) /* ty=Tensor[(5, 9, 11), float64] */;
  (%600, %601, %602)
}

def @func_9148() -> (Tensor[(5, 9, 11), uint64],) {
  %603 = @func_9073() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %604 = %603.0;
  (%604,)
}

def @func_13376() -> Tensor[(1950), float32] {
  @func_12536() /* ty=Tensor[(1950), float32] */
}

def @func_5789() -> (float32, Tensor[(3, 13, 1), bool]) {
  %605 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %606 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %607 = %605.2;
  %608 = %606.1;
  (%607, %608)
}

def @func_15592(%var_15546: uint32, %var_15547: Tensor[(16, 11, 4), uint32], %var_15569: Tensor[(16, 11, 4), float32]) -> (Tensor[(16, 11, 4), float32], Tensor[(16, 11, 4), float64]) {
  %609 = cast(%var_15546, dtype="bool") /* ty=bool */;
  %610 = cast(%var_15547, dtype="bool") /* ty=Tensor[(16, 11, 4), bool] */;
  %611 = equal(%609, %610) /* ty=Tensor[(16, 11, 4), bool] */;
  %612 = cast(%611, dtype="float64") /* ty=Tensor[(16, 11, 4), float64] */;
  %613 = log(%612) /* ty=Tensor[(16, 11, 4), float64] */;
  %614 = cast(%613, dtype="float32") /* ty=Tensor[(16, 11, 4), float32] */;
  %615 = asinh(%614) /* ty=Tensor[(16, 11, 4), float32] */;
  %616 = cast(%var_15569, dtype="float32") /* ty=Tensor[(16, 11, 4), float32] */;
  %617 = shape_of(%615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %618 = cast(%615, dtype="float32") /* ty=Tensor[(16, 11, 4), float32] */;
  %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %620 = cast(%615, dtype="float64") /* ty=Tensor[(16, 11, 4), float64] */;
  %621 = floor_divide(%618, %619) /* ty=Tensor[(16, 11, 4), float32] */;
  %622 = cosh(%620) /* ty=Tensor[(16, 11, 4), float64] */;
  (%621, %622)
}

def @func_8933() -> (Tensor[(14, 8, 15), bool], Tensor[(14, 8, 15), float64]) {
  %623 = cast(meta[relay.Constant][56] /* ty=Tensor[(14, 8, 15), bool] */, dtype="bool") /* ty=Tensor[(14, 8, 15), bool] */;
  %624 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(14, 8, 15), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(meta[relay.Constant][55] /* ty=Tensor[(14, 8, 15), bool] */, dtype="bool") /* ty=Tensor[(14, 8, 15), bool] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %627 = cast(meta[relay.Constant][55] /* ty=Tensor[(14, 8, 15), bool] */, dtype="float32") /* ty=Tensor[(14, 8, 15), float32] */;
  %628 = acosh(%627) /* ty=Tensor[(14, 8, 15), float32] */;
  %629 = cast(%628, dtype="float64") /* ty=Tensor[(14, 8, 15), float64] */;
  %630 = logical_and(%625, %626) /* ty=Tensor[(14, 8, 15), bool] */;
  %631 = asinh(%629) /* ty=Tensor[(14, 8, 15), float64] */;
  (%630, %631)
}

def @func_6434() -> float32 {
  @func_6080() /* ty=float32 */
}

def @func_5899(%var_5879: Tensor[(16, 10, 8), uint64], %var_5884: Tensor[(504), float64]) -> (Tensor[(16, 10, 8), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64]) {
  %632 = cast(%var_5879, dtype="bool") /* ty=Tensor[(16, 10, 8), bool] */;
  %633 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(16, 10, 8), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %634 = cast(meta[relay.Constant][57] /* ty=Tensor[(16, 10, 8), uint64] */, dtype="bool") /* ty=Tensor[(16, 10, 8), bool] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %636 = cast(%var_5884, dtype="float64") /* ty=Tensor[(504), float64] */;
  %637 = reshape(%636, newshape=[6, 7, 12]) /* ty=Tensor[(6, 7, 12), float64] */;
  %638 = less_equal(%634, %635) /* ty=Tensor[(16, 10, 8), bool] */;
  %639 = @func_180(%637) /* ty=Tensor[(6, 7, 12), float64] */;
  (%638, %639, %var_5884)
}

def @func_7114() -> (float32,) {
  %640 = @func_6080() /* ty=float32 */;
  (%640,)
}

def @func_6354(%var_6283: Tensor[(14, 13, 1), float32], %var_6297: float64) -> (Tensor[(1, 16, 6), float64], float64, Tensor[(48, 2), float64], Tensor[(3, 13, 1), bool], Tensor[(14, 13, 1), float32]) {
  %641 = cast(%var_6297, dtype="float64") /* ty=float64 */;
  %642 = cast(meta[relay.Constant][58] /* ty=Tensor[(48, 2), float64] */, dtype="float64") /* ty=Tensor[(48, 2), float64] */;
  %643 = reshape(%641, newshape=[]) /* ty=float64 */;
  %644 = reshape(%642, newshape=[1, 16, 6]) /* ty=Tensor[(1, 16, 6), float64] */;
  %645 = @func_2286(%643, %644) /* ty=(Tensor[(1, 16, 6), float64],) */;
  %646 = cast(%var_6297, dtype="float32") /* ty=float32 */;
  %647 = reshape(%646, newshape=[]) /* ty=float32 */;
  %648 = cast(%var_6283, dtype="float32") /* ty=Tensor[(14, 13, 1), float32] */;
  %649 = acos(%648) /* ty=Tensor[(14, 13, 1), float32] */;
  %650 = cast(%649, dtype="float32") /* ty=Tensor[(14, 13, 1), float32] */;
  %651 = %645.0;
  %652 = @func_3740(%647) /* ty=Tensor[(3, 13, 1), bool] */;
  %653 = log2(%650) /* ty=Tensor[(14, 13, 1), float32] */;
  (%651, %var_6297, meta[relay.Constant][58] /* ty=Tensor[(48, 2), float64] */, %652, %653)
}

def @func_4627(%var_4614: int16, %var_4615: Tensor[(14, 9, 1), int16], %var_4620: Tensor[(2002), int64], %var_4622: Tensor[(1950), float32]) -> (Tensor[(14, 9, 1), int16], Tensor[(1950), float32], Tensor[(2002), int64], Tensor[(350), int16], Tensor[(1950), float32]) {
  %654 = cast(%var_4614, dtype="int16") /* ty=int16 */;
  %655 = cast(%var_4615, dtype="int16") /* ty=Tensor[(14, 9, 1), int16] */;
  %656 = cast(%var_4620, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %657 = cast(meta[relay.Constant][59] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
  %658 = cast(%var_4622, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %659 = reshape(%656, newshape=[14, 13, 11]) /* ty=Tensor[(14, 13, 11), int64] */;
  %660 = reshape(%657, newshape=[350]) /* ty=Tensor[(350), int16] */;
  %661 = reshape(%658, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %662 = @func_3440(%659, %660, %661) /* ty=(Tensor[(14, 13, 11), int64], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(2, 896), int32], Tensor[(1950), float32]) */;
  %663 = maximum(%654, %655) /* ty=Tensor[(14, 9, 1), int16] */;
  %664 = %662.5;
  (%663, %664, %var_4620, meta[relay.Constant][59] /* ty=Tensor[(350), int16] */, %var_4622)
}

def @func_7034(%var_7032: Tensor[(1, 504), float64]) -> (float32, Tensor[(16, 10, 8), bool], Tensor[(1280), uint64], Tensor[(1, 504), float64]) {
  %665 = @func_6775() /* ty=(float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) */;
  %666 = cast(meta[relay.Constant][60] /* ty=Tensor[(1280), uint64] */, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %667 = cast(%var_7032, dtype="float64") /* ty=Tensor[(1, 504), float64] */;
  %668 = reshape(%666, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), uint64] */;
  %669 = reshape(%667, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %670 = @func_5899(%668, %669) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64]) */;
  %671 = %665.0;
  %672 = %670.0;
  (%671, %672, meta[relay.Constant][60] /* ty=Tensor[(1280), uint64] */, %var_7032)
}

def @func_3267(%var_3255: Tensor[(1188), bool]) -> (Tensor[(8, 15, 5), float32], Tensor[(135), float64], Tensor[(1188), bool], Tensor[(1, 135), float64]) {
  %673 = cast(4.58021f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %674 = cast(meta[relay.Constant][61] /* ty=Tensor[(8, 15, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 5), float32] */;
  %675 = cast(%var_3255, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %676 = cast(%var_3255, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %677 = cast(meta[relay.Constant][62] /* ty=Tensor[(1, 135), float64] */, dtype="float64") /* ty=Tensor[(1, 135), float64] */;
  %678 = cast(%var_3255, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %679 = reshape(%675, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), bool] */;
  %680 = reshape(%676, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), bool] */;
  %681 = reshape(%677, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %682 = reshape(%678, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float32] */;
  %683 = @func_2918(%679, %680, %681, %682) /* ty=(Tensor[(9, 15, ?), bool], Tensor[(135), float64], Tensor[(11, 12, 9), float32]) */;
  %684 = subtract(%673, %674) /* ty=Tensor[(8, 15, 5), float32] */;
  %685 = %683.1;
  (%684, %685, %var_3255, meta[relay.Constant][62] /* ty=Tensor[(1, 135), float64] */)
}

def @func_6736(%var_6694: Tensor[(126), int16], %var_6695: Tensor[(2002), int64], %var_6696: Tensor[(1950), float32]) -> (float32, Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) {
  %686 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
  %687 = %686.0;
  %688 = cast(%687, dtype="int16") /* ty=int16 */;
  %689 = cast(%var_6694, dtype="int16") /* ty=Tensor[(126), int16] */;
  %690 = cast(%var_6695, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %691 = cast(%var_6696, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %692 = reshape(%688, newshape=[]) /* ty=int16 */;
  %693 = reshape(%689, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), int16] */;
  %694 = reshape(%690, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %695 = reshape(%691, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %696 = @func_4627(%692, %693, %694, %695) /* ty=(Tensor[(14, 9, 1), int16], Tensor[(1950), float32], Tensor[(2002), int64], Tensor[(350), int16], Tensor[(1950), float32]) */;
  %697 = %696.4;
  (%687, %697, %var_6694, %var_6695, %var_6696)
}

def @func_14686() -> (Tensor[(1950), float32],) {
  %698 = @func_13376() /* ty=Tensor[(1950), float32] */;
  (%698,)
}

def @func_6069() -> (float32, float32) {
  %699 = @func_5789() /* ty=(float32, Tensor[(3, 13, 1), bool]) */;
  %700 = %699.0;
  %701 = cast(%700, dtype="float32") /* ty=float32 */;
  %702 = reshape(%701, newshape=[]) /* ty=float32 */;
  %703 = @func_5651(%702) /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32) */;
  %704 = %703.2;
  (%700, %704)
}

def @func_15416() -> (Tensor[(1950), float32], Tensor[(1, 6, 10), float32], Tensor[(60), float32], Tensor[(7, 3, 15), float64]) {
  %705 = @func_7223() /* ty=(Tensor[(1950), float32],) */;
  %706 = cast(meta[relay.Constant][63] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %707 = reshape(%706, newshape=[1, 6, 10]) /* ty=Tensor[(1, 6, 10), float32] */;
  %708 = @func_10633(%707) /* ty=(Tensor[(1, 6, 10), float32],) */;
  %709 = @func_7671() /* ty=(Tensor[(7, 3, 15), float64],) */;
  %710 = %705.0;
  %711 = %708.0;
  %712 = %709.0;
  (%710, %711, meta[relay.Constant][63] /* ty=Tensor[(60), float32] */, %712)
}

def @func_6882(%var_6868: Tensor[(126), int16]) -> (Tensor[(350), int16], float32, Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(126), int16], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(10, 195), float32]) {
  %713 = @func_6775() /* ty=(float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) */;
  %714 = @func_6069() /* ty=(float32, float32) */;
  %715 = cast(meta[relay.Constant][64] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %716 = reshape(%715, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), bool] */;
  %717 = cast(%var_6868, dtype="int16") /* ty=Tensor[(126), int16] */;
  %718 = cast(meta[relay.Constant][65] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %719 = cast(meta[relay.Constant][66] /* ty=Tensor[(10, 195), float32] */, dtype="float32") /* ty=Tensor[(10, 195), float32] */;
  %720 = reshape(%717, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %721 = reshape(%718, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %722 = reshape(%719, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %723 = @func_6736(%720, %721, %722) /* ty=(float32, Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */;
  %724 = %713.2;
  %725 = %714.0;
  %726 = @func_4255(%716) /* ty=Tensor[(3, 3, 13), bool] */;
  %727 = %723.2;
  (%724, %725, %726, meta[relay.Constant][64] /* ty=Tensor[(117), bool] */, %727, %var_6868, meta[relay.Constant][65] /* ty=Tensor[(2002), int64] */, meta[relay.Constant][66] /* ty=Tensor[(10, 195), float32] */)
}

def @func_12208(%var_12198: Tensor[(2, 1, 12), int8]) -> Tensor[(2, 1, 12), int8] {
  %728 = cast(meta[relay.Constant][67] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %729 = cast(%var_12198, dtype="int8") /* ty=Tensor[(2, 1, 12), int8] */;
  logical_xor(%728, %729) /* ty=Tensor[(2, 1, 12), int8] */
}

def @func_14839() -> float32 {
  %730 = @func_13257() /* ty=(float32, float32, Tensor[(1188), bool], Tensor[(3, 396), bool]) */;
  %730.0
}

def @func_10004(%var_9994: Tensor[(6, 11, 12), float64]) -> (Tensor[(6, 11, 12), float64], Tensor[(5, 9, 11), uint64]) {
  %731 = cast(%var_9994, dtype="float64") /* ty=Tensor[(6, 11, 12), float64] */;
  %732 = @func_9073() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %733 = cos(%731) /* ty=Tensor[(6, 11, 12), float64] */;
  %734 = %732.0;
  (%733, %734)
}

def @func_12248() -> (float32, float32, Tensor[(504), float64], Tensor[(42), float32]) {
  %735 = @func_5551() /* ty=(float32,) */;
  %736 = @func_6405() /* ty=(float32,) */;
  %737 = cast(meta[relay.Constant][68] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %738 = reshape(%737, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %739 = @func_9240(%738) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(42), float32], Tensor[(504), float64], float32, Tensor[(5, 9, 11), float32]) */;
  %740 = %735.0;
  %741 = %736.0;
  %742 = %739.2;
  (%740, %741, %742, meta[relay.Constant][68] /* ty=Tensor[(42), float32] */)
}

def @func_14773(%var_14761: Tensor[(1280), uint64]) -> (Tensor[(1950), float32], float32, Tensor[(6, 7, 12), float64], Tensor[(1280), uint64], Tensor[(504), float64]) {
  %743 = @func_11456() /* ty=(Tensor[(8, 504, 12), bool], Tensor[(495), uint64], Tensor[(1950), float32]) */;
  %744 = %743.2;
  %745 = cast(%744, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %746 = cast(%var_14761, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %747 = cast(meta[relay.Constant][69] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %748 = reshape(%746, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), uint64] */;
  %749 = reshape(%747, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %750 = @func_5899(%748, %749) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64]) */;
  %751 = sigmoid(%745) /* ty=Tensor[(1950), float32] */;
  %752 = @func_6080() /* ty=float32 */;
  %753 = %750.1;
  (%751, %752, %753, %var_14761, meta[relay.Constant][69] /* ty=Tensor[(504), float64] */)
}

def @func_11145(%var_11110: Tensor[(10, 9, 5), uint16], %var_11123: Tensor[(36), int32], %var_11125: Tensor[(1792), int32], %var_11126: Tensor[(1950, 1), float32]) -> (Tensor[(350), int16], Tensor[(420), float64], Tensor[(36), int32], Tensor[(364), float64], Tensor[(1792), int32], Tensor[(1950, 1), float32], Tensor[(10, 9, 5), uint8], Tensor[(8, 504, 12), bool]) {
  %754 = cast(meta[relay.Constant][70] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %755 = cast(%var_11123, dtype="int32") /* ty=Tensor[(36), int32] */;
  %756 = cast(meta[relay.Constant][71] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %757 = cast(%var_11125, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %758 = cast(%var_11126, dtype="float32") /* ty=Tensor[(1950, 1), float32] */;
  %759 = reshape(%754, newshape=[15, 14, 2]) /* ty=Tensor[(15, 14, 2), float64] */;
  %760 = reshape(%755, newshape=[36]) /* ty=Tensor[(36), int32] */;
  %761 = reshape(%756, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %762 = reshape(%757, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %763 = reshape(%758, newshape=[130, 15]) /* ty=Tensor[(130, 15), float32] */;
  %764 = @func_5492(%759, %760, %761, %762, %763) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(1188), bool], Tensor[(36), int32], Tensor[(3, 108), int32], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(130, 15), float32]) */;
  %765 = cast(meta[relay.Constant][72] /* ty=Tensor[(10, 9, 5), uint16] */, dtype="float32") /* ty=Tensor[(10, 9, 5), float32] */;
  %766 = cos(%765) /* ty=Tensor[(10, 9, 5), float32] */;
  %767 = cast(meta[relay.Constant][72] /* ty=Tensor[(10, 9, 5), uint16] */, dtype="uint16") /* ty=Tensor[(10, 9, 5), uint16] */;
  %768 = shape_of(%var_11110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%var_11110, dtype="uint16") /* ty=Tensor[(10, 9, 5), uint16] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %771 = bitwise_or(%769, %770) /* ty=Tensor[(10, 9, 5), uint16] */;
  %772 = cast(%771, dtype="uint8") /* ty=Tensor[(10, 9, 5), uint8] */;
  %773 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %774 = cast(%766, dtype="uint8") /* ty=Tensor[(10, 9, 5), uint8] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %776 = @func_10020() /* ty=(Tensor[(8, 504, 12), bool],) */;
  %777 = %764.4;
  %778 = bitwise_and(%774, %775) /* ty=Tensor[(10, 9, 5), uint8] */;
  %779 = %776.0;
  (%777, meta[relay.Constant][70] /* ty=Tensor[(420), float64] */, %var_11123, meta[relay.Constant][71] /* ty=Tensor[(364), float64] */, %var_11125, %var_11126, %778, %779)
}

def @func_5520(%var_5518: Tensor[(1188), bool]) -> (float32, Tensor[(1188), bool], Tensor[(1188), bool]) {
  %780 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %781 = cast(%var_5518, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %782 = reshape(%781, newshape=[1188]) /* ty=Tensor[(1188), bool] */;
  %783 = @func_3267(%782) /* ty=(Tensor[(8, 15, 5), float32], Tensor[(135), float64], Tensor[(1188), bool], Tensor[(1, 135), float64]) */;
  %784 = %780.2;
  %785 = %783.2;
  (%784, %785, %var_5518)
}

def @func_13003() -> (Tensor[(5, 9, 11), uint64], float32) {
  %786 = @func_9073() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %787 = @func_12553() /* ty=(float32,) */;
  %788 = %786.0;
  %789 = %787.0;
  (%788, %789)
}

def @func_15526() -> (Tensor[(8, 504, 12), float64], float32) {
  %790 = @func_10123() /* ty=(Tensor[(5, 9, 11), float32], Tensor[(8, 504, 12), bool]) */;
  %791 = %790.1;
  %792 = cast(%791, dtype="float64") /* ty=Tensor[(8, 504, 12), float64] */;
  %793 = @func_12248() /* ty=(float32, float32, Tensor[(504), float64], Tensor[(42), float32]) */;
  %794 = exp(%792) /* ty=Tensor[(8, 504, 12), float64] */;
  %795 = %793.0;
  (%794, %795)
}

def @func_8416(%var_8404: Tensor[(495), uint64]) -> (float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64], Tensor[(504), float64], Tensor[(1280), uint64], Tensor[(504), float64]) {
  %796 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %797 = cast(%var_8404, dtype="uint64") /* ty=Tensor[(495), uint64] */;
  %798 = cast(%var_8404, dtype="uint64") /* ty=Tensor[(495), uint64] */;
  %799 = reshape(%797, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), uint64] */;
  %800 = reshape(%798, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), uint64] */;
  %801 = @func_2124(%799, %800) /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %802 = cast(meta[relay.Constant][73] /* ty=Tensor[(1280), uint64] */, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %803 = cast(meta[relay.Constant][74] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %804 = reshape(%802, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), uint64] */;
  %805 = reshape(%803, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %806 = @func_5899(%804, %805) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64]) */;
  %807 = %796.2;
  %808 = %801.0;
  %809 = %806.2;
  (%807, %808, %var_8404, %809, meta[relay.Constant][73] /* ty=Tensor[(1280), uint64] */, meta[relay.Constant][74] /* ty=Tensor[(504), float64] */)
}

def @func_12124() -> (Tensor[(5, 9, 11), uint64],) {
  %810 = @func_6374() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %811 = %810.0;
  (%811,)
}

def @func_13328() -> Tensor[(5, 9, 11), uint64] {
  %812 = @func_9264() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %812.0
}

def @func_11090() -> float32 {
  %813 = @func_8055() /* ty=(float32,) */;
  %813.0
}

def @func_13872() -> (float32, Tensor[(1792), int32], Tensor[(1, 117), uint16]) {
  %814 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 117), bool] */, dtype="bool") /* ty=Tensor[(1, 117), bool] */;
  %815 = cast(meta[relay.Constant][76] /* ty=Tensor[(1792), int32] */, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %816 = reshape(%814, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %817 = reshape(%815, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %818 = @func_9544(%816, %817) /* ty=(float32, float32, Tensor[(117), bool], float32, Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) */;
  %819 = @func_11090() /* ty=float32 */;
  %820 = cast(%819, dtype="uint16") /* ty=uint16 */;
  %821 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 117), bool] */, dtype="uint16") /* ty=Tensor[(1, 117), uint16] */;
  %822 = %818.0;
  %823 = logical_xor(%820, %821) /* ty=Tensor[(1, 117), uint16] */;
  (%822, meta[relay.Constant][76] /* ty=Tensor[(1792), int32] */, %823)
}

def @func_9118() -> (Tensor[(7, 3, 15), float64], Tensor[(1, 16, 6), float64], float64, Tensor[(96), float64]) {
  %824 = @func_7671() /* ty=(Tensor[(7, 3, 15), float64],) */;
  %825 = cast(6.88778f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %826 = cast(meta[relay.Constant][77] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %827 = reshape(%825, newshape=[]) /* ty=float64 */;
  %828 = reshape(%826, newshape=[1, 16, 6]) /* ty=Tensor[(1, 16, 6), float64] */;
  %829 = @func_2286(%827, %828) /* ty=(Tensor[(1, 16, 6), float64],) */;
  %830 = %824.0;
  %831 = %829.0;
  (%830, %831, 6.88778f64 /* ty=float64 */, meta[relay.Constant][77] /* ty=Tensor[(96), float64] */)
}

def @func_1194(%var_1180: Tensor[(10, 7, 5), int16], %var_1187: Tensor[(1950), float32], %var_1191: Tensor[(1792), int32]) -> (Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) {
  %832 = cast(meta[relay.Constant][78] /* ty=Tensor[(10, 7, 5), int16] */, dtype="int16") /* ty=Tensor[(10, 7, 5), int16] */;
  %833 = shape_of(%var_1180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %834 = cast(%var_1180, dtype="int16") /* ty=Tensor[(10, 7, 5), int16] */;
  %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %836 = cast(%var_1187, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %837 = reshape(%836, newshape=[10, 15, 13]) /* ty=Tensor[(10, 15, 13), float32] */;
  %838 = @func_372(%837) /* ty=(Tensor[(10, 15, 13), float32],) */;
  %839 = cast(%var_1191, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %840 = cast(%var_1191, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %841 = reshape(%839, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int32] */;
  %842 = reshape(%840, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int32] */;
  %843 = left_shift(%834, %835) /* ty=Tensor[(10, 7, 5), int16] */;
  %844 = %838.0;
  %845 = @func_347(%841, %842) /* ty=Tensor[(8, 14, 16), int32] */;
  (%843, %844, %var_1187, %845, %var_1191)
}

def @func_15329() -> (float32, float32, float32) {
  %846 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %847 = @func_14879() /* ty=(float32, Tensor[(324), int32], float32) */;
  %848 = @func_13388() /* ty=float32 */;
  %849 = %846.2;
  %850 = %847.0;
  (%848, %849, %850)
}

def @func_11358(%var_11320: Tensor[(8, 504, 12), bool], %var_11347: Tensor[(8, 504, 12), bool]) -> (Tensor[(324), int32], Tensor[(8, 504, 12), int64], Tensor[(8, 504, 12), int32], Tensor[(1950), float32]) {
  %851 = @func_8938() /* ty=Tensor[(8, 504, 12), bool] */;
  %852 = cast(%var_11320, dtype="int64") /* ty=Tensor[(8, 504, 12), int64] */;
  %853 = shape_of(%851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %854 = cast(%851, dtype="int64") /* ty=Tensor[(8, 504, 12), int64] */;
  %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %856 = cast(%var_11347, dtype="int32") /* ty=Tensor[(8, 504, 12), int32] */;
  %857 = shape_of(%var_11320, dtype="int32") /* ty=Tensor[(3), int32] */;
  %858 = cast(%var_11320, dtype="int32") /* ty=Tensor[(8, 504, 12), int32] */;
  %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %860 = @func_7223() /* ty=(Tensor[(1950), float32],) */;
  %861 = @func_10559() /* ty=Tensor[(324), int32] */;
  %862 = right_shift(%854, %855) /* ty=Tensor[(8, 504, 12), int64] */;
  %863 = bitwise_and(%858, %859) /* ty=Tensor[(8, 504, 12), int32] */;
  %864 = %860.0;
  (%861, %862, %863, %864)
}

def @func_12868() -> Tensor[(36), int32] {
  %865 = @func_7499() /* ty=(float32, Tensor[(324), int32], Tensor[(36), int32], Tensor[(324), int32]) */;
  %865.2
}

def @func_5492(%var_5448: Tensor[(15, 14, 2), float64], %var_5458: Tensor[(36), int32], %var_5468: Tensor[(364), float64], %var_5470: Tensor[(1792), int32], %var_5471: Tensor[(130, 15), float32]) -> (Tensor[(15, 14, 2), float64], Tensor[(1188), bool], Tensor[(36), int32], Tensor[(3, 108), int32], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(130, 15), float32]) {
  %866 = cast(%var_5448, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
  %867 = cast(%var_5458, dtype="int32") /* ty=Tensor[(36), int32] */;
  %868 = cast(meta[relay.Constant][79] /* ty=Tensor[(3, 108), int32] */, dtype="int32") /* ty=Tensor[(3, 108), int32] */;
  %869 = reshape(%867, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), int32] */;
  %870 = reshape(%868, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), int32] */;
  %871 = @func_5261(%869, %870) /* ty=(Tensor[(6, 6, 9), int32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(1188), bool], Tensor[(1188), bool]) */;
  %872 = cast(%var_5468, dtype="float64") /* ty=Tensor[(364), float64] */;
  %873 = cast(%var_5468, dtype="float64") /* ty=Tensor[(364), float64] */;
  %874 = cast(meta[relay.Constant][80] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
  %875 = cast(%var_5470, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %876 = cast(%var_5471, dtype="float32") /* ty=Tensor[(130, 15), float32] */;
  %877 = reshape(%872, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
  %878 = reshape(%873, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
  %879 = reshape(%874, newshape=[350]) /* ty=Tensor[(350), int16] */;
  %880 = reshape(%875, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %881 = reshape(%876, newshape=[1, 1950]) /* ty=Tensor[(1, 1950), float32] */;
  %882 = @func_1925(%877, %878, %879, %880, %881) /* ty=(Tensor[(14, 2, 13), float64], Tensor[(1950), float32], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(8, 14, 16), int32], Tensor[(?, 1950), bool]) */;
  %883 = asin(%866) /* ty=Tensor[(15, 14, 2), float64] */;
  %884 = %871.3;
  %885 = %882.2;
  (%883, %884, %var_5458, meta[relay.Constant][79] /* ty=Tensor[(3, 108), int32] */, %885, %var_5468, meta[relay.Constant][80] /* ty=Tensor[(350), int16] */, %var_5470, %var_5471)
}

def @func_9240(%var_9223: Tensor[(42), float32]) -> (Tensor[(5, 9, 11), uint64], Tensor[(42), float32], Tensor[(504), float64], float32, Tensor[(5, 9, 11), float32]) {
  %886 = @func_9073() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %887 = cast(%var_9223, dtype="float32") /* ty=Tensor[(42), float32] */;
  %888 = cast(meta[relay.Constant][81] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %889 = cast(-1.65587f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %890 = reshape(%887, newshape=[3, 14, 1]) /* ty=Tensor[(3, 14, 1), float32] */;
  %891 = reshape(%888, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %892 = reshape(%889, newshape=[]) /* ty=float32 */;
  %893 = @func_6252(%890, %891, %892) /* ty=(Tensor[(1188), bool], Tensor[(3, 14, 1188), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64], Tensor[(5, 9, 11), uint64], Tensor[(3, 3, 13), bool], Tensor[(1, 117), bool], float32, Tensor[(3, 14, 1), float64], float32, Tensor[(3, 14, 13), bool], Tensor[(135), float64], Tensor[(1, 135), float64]) */;
  %894 = %893.4;
  %895 = cast(%894, dtype="float32") /* ty=Tensor[(5, 9, 11), float32] */;
  %896 = %886.0;
  %897 = log2(%895) /* ty=Tensor[(5, 9, 11), float32] */;
  (%896, %var_9223, meta[relay.Constant][81] /* ty=Tensor[(504), float64] */, -1.65587f /* ty=float32 */, %897)
}

def @func_13388() -> float32 {
  %898 = @func_13299() /* ty=(float32,) */;
  %898.0
}

def @func_9849() -> (float32, float32, Tensor[(5, 9, 11), uint64]) {
  %899 = @func_5789() /* ty=(float32, Tensor[(3, 13, 1), bool]) */;
  %900 = @func_9264() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %901 = %899.0;
  %902 = @func_8876() /* ty=float32 */;
  %903 = %900.0;
  (%901, %902, %903)
}

def @func_14620() -> (float32,) {
  %904 = @func_13299() /* ty=(float32,) */;
  %905 = %904.0;
  (%905,)
}

def @func_13468() -> (Tensor[(1950), float32], float32, float32) {
  %906 = @func_6775() /* ty=(float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) */;
  %907 = @func_8055() /* ty=(float32,) */;
  %908 = %906.3;
  %909 = %907.0;
  %910 = @func_12717() /* ty=float32 */;
  (%908, %909, %910)
}

def @func_3740(%var_3723: float32) -> Tensor[(3, 13, 1), bool] {
  %911 = cast(%var_3723, dtype="bool") /* ty=bool */;
  %912 = cast(meta[relay.Constant][82] /* ty=Tensor[(3, 13, 1), float32] */, dtype="bool") /* ty=Tensor[(3, 13, 1), bool] */;
  equal(%911, %912) /* ty=Tensor[(3, 13, 1), bool] */
}

def @func_9073() -> (Tensor[(5, 9, 11), uint64],) {
  %913 = @func_7242() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %914 = %913.0;
  (%914,)
}

def @func_6374() -> (Tensor[(5, 9, 11), uint64],) {
  %915 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
  %916 = %915.1;
  (%916,)
}

def @func_5651(%var_5643: float32) -> (Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32) {
  %917 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %918 = cast(%var_5643, dtype="float32") /* ty=float32 */;
  %919 = reshape(%918, newshape=[]) /* ty=float32 */;
  %920 = %917.0;
  %921 = @func_3740(%919) /* ty=Tensor[(3, 13, 1), bool] */;
  (%920, %921, %var_5643)
}

def @func_14144() -> (Tensor[(495), uint64],) {
  %922 = @func_6002() /* ty=Tensor[(495), uint64] */;
  (%922,)
}

def @func_7005(%var_6984: Tensor[(8, 504, 12), bool], %var_6994: Tensor[(8, 504, 12), float64], %var_7003: Tensor[(2002), int64]) -> (Tensor[(8, 504, 12), bool], Tensor[(8, 504, 12), int8], Tensor[(1950), float32], Tensor[(2002), int64]) {
  %923 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %924 = %923.3;
  %925 = cast(%var_6984, dtype="bool") /* ty=Tensor[(8, 504, 12), bool] */;
  %926 = shape_of(%924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %927 = cast(%924, dtype="bool") /* ty=Tensor[(8, 504, 12), bool] */;
  %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %929 = cast(%924, dtype="float64") /* ty=Tensor[(8, 504, 12), float64] */;
  %930 = tan(%929) /* ty=Tensor[(8, 504, 12), float64] */;
  %931 = cast(%var_6994, dtype="int8") /* ty=Tensor[(8, 504, 12), int8] */;
  %932 = shape_of(%930, dtype="int32") /* ty=Tensor[(3), int32] */;
  %933 = cast(%930, dtype="int8") /* ty=Tensor[(8, 504, 12), int8] */;
  %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %935 = cast(%var_7003, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %936 = reshape(%935, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %937 = @func_6800(%936) /* ty=(float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */;
  %938 = not_equal(%927, %928) /* ty=Tensor[(8, 504, 12), bool] */;
  %939 = minimum(%933, %934) /* ty=Tensor[(8, 504, 12), int8] */;
  %940 = %937.4;
  (%938, %939, %940, %var_7003)
}

def @func_10623() -> float32 {
  %941 = @func_8733() /* ty=(float32,) */;
  %941.0
}

def @func_5811(%var_5800: Tensor[(39, 3), bool], %var_5803: float32) -> (Tensor[(3, 3, 13), bool], Tensor[(39, 3), bool], float32, Tensor[(3, 13, 1), bool], Tensor[(3, 13, 1), int32]) {
  %942 = cast(%var_5800, dtype="bool") /* ty=Tensor[(39, 3), bool] */;
  %943 = reshape(%942, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), bool] */;
  %944 = cast(%var_5803, dtype="float32") /* ty=float32 */;
  %945 = reshape(%944, newshape=[]) /* ty=float32 */;
  %946 = @func_5651(%945) /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32) */;
  %947 = cast(%var_5803, dtype="float32") /* ty=float32 */;
  %948 = reshape(%947, newshape=[]) /* ty=float32 */;
  %949 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %950 = %949.1;
  %951 = cast(%var_5803, dtype="int32") /* ty=int32 */;
  %952 = cast(%950, dtype="int32") /* ty=Tensor[(3, 13, 1), int32] */;
  %953 = @func_4255(%943) /* ty=Tensor[(3, 3, 13), bool] */;
  %954 = %946.2;
  %955 = @func_3740(%948) /* ty=Tensor[(3, 13, 1), bool] */;
  %956 = left_shift(%951, %952) /* ty=Tensor[(3, 13, 1), int32] */;
  (%953, %var_5800, %954, %955, %956)
}

def @func_6658() -> Tensor[(495), uint64] {
  @func_6002() /* ty=Tensor[(495), uint64] */
}

def @func_11182() -> (float32,) {
  %957 = @func_9283() /* ty=(Tensor[(324), int32], Tensor[(3, 13, 1), bool], float32, Tensor[(495), uint64]) */;
  %958 = %957.2;
  (%958,)
}

def @func_1925(%var_1865: Tensor[(14, 2, 13), float64], %var_1866: Tensor[(14, 2, 13), float64], %var_1879: Tensor[(350), int16], %var_1881: Tensor[(1792), int32], %var_1887: Tensor[(1, 1950), float32]) -> (Tensor[(14, 2, 13), float64], Tensor[(1950), float32], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(8, 14, 16), int32], Tensor[(?, 1950), bool]) {
  %959 = cast(%var_1866, dtype="float64") /* ty=Tensor[(14, 2, 13), float64] */;
  %960 = shape_of(%var_1865, dtype="int32") /* ty=Tensor[(3), int32] */;
  %961 = cast(%var_1865, dtype="float64") /* ty=Tensor[(14, 2, 13), float64] */;
  %962 = dyn.reshape(%959, %960, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %963 = floor_divide(%961, %962) /* ty=Tensor[(14, 2, 13), float64] */;
  %964 = cast(%963, dtype="float64") /* ty=Tensor[(14, 2, 13), float64] */;
  %965 = shape_of(%var_1865, dtype="int32") /* ty=Tensor[(3), int32] */;
  %966 = cast(%var_1865, dtype="float64") /* ty=Tensor[(14, 2, 13), float64] */;
  %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %968 = cast(%var_1879, dtype="int16") /* ty=Tensor[(350), int16] */;
  %969 = cast(meta[relay.Constant][83] /* ty=Tensor[(1, 1950), float32] */, dtype="float32") /* ty=Tensor[(1, 1950), float32] */;
  %970 = cast(%var_1881, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %971 = reshape(%968, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), int16] */;
  %972 = reshape(%969, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %973 = reshape(%970, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %974 = @func_1194(%971, %972, %973) /* ty=(Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) */;
  %975 = cast(%var_1881, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %976 = cast(%var_1881, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %977 = reshape(%975, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int32] */;
  %978 = reshape(%976, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int32] */;
  %979 = cast(%var_1887, dtype="bool") /* ty=Tensor[(1, 1950), bool] */;
  %980 = shape_of(meta[relay.Constant][83] /* ty=Tensor[(1, 1950), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %981 = cast(meta[relay.Constant][83] /* ty=Tensor[(1, 1950), float32] */, dtype="bool") /* ty=Tensor[(1, 1950), bool] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %983 = divide(%966, %967) /* ty=Tensor[(14, 2, 13), float64] */;
  %984 = %974.2;
  %985 = @func_347(%977, %978) /* ty=Tensor[(8, 14, 16), int32] */;
  %986 = not_equal(%981, %982) /* ty=Tensor[(?, 1950), bool] */;
  (%983, %984, %var_1879, %var_1881, %985, %986)
}

def @func_9193(%var_9188: Tensor[(126), int16]) -> (float32, float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) {
  %987 = cast(%var_9188, dtype="int16") /* ty=Tensor[(126), int16] */;
  %988 = cast(meta[relay.Constant][84] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %989 = cast(meta[relay.Constant][85] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %990 = reshape(%987, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %991 = reshape(%988, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %992 = reshape(%989, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %993 = @func_6736(%990, %991, %992) /* ty=(float32, Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */;
  %994 = @func_8012() /* ty=float32 */;
  %995 = %993.0;
  (%994, %995, %var_9188, meta[relay.Constant][84] /* ty=Tensor[(2002), int64] */, meta[relay.Constant][85] /* ty=Tensor[(1950), float32] */)
}

def @func_10192(%var_10160: Tensor[(4, 11, 8), float32], %var_10179: Tensor[(182, 2), float64]) -> (Tensor[(4, 11, 8), float32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(5, 9, 11), uint64], Tensor[(18, 2), int32], Tensor[(420), float64], Tensor[(182, 2), float64], Tensor[(4, 11, 8), float32], Tensor[(495), uint64]) {
  %996 = cast(%var_10160, dtype="float32") /* ty=Tensor[(4, 11, 8), float32] */;
  %997 = cast(meta[relay.Constant][86] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %998 = reshape(%997, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), bool] */;
  %999 = @func_7242() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %1000 = cast(meta[relay.Constant][87] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1001 = cast(%var_10179, dtype="float64") /* ty=Tensor[(182, 2), float64] */;
  %1002 = reshape(%1000, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %1003 = reshape(%1001, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %1004 = @func_7974(%1002, %1003) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(1950), float32], Tensor[(420), float64], Tensor[(18, 2), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool], Tensor[(3, 3, 13), bool], Tensor[(324), int32], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(364), float64], Tensor[(350), int16]) */;
  %1005 = cast(%var_10160, dtype="float32") /* ty=Tensor[(4, 11, 8), float32] */;
  %1006 = sqrt(%996) /* ty=Tensor[(4, 11, 8), float32] */;
  %1007 = @func_4255(%998) /* ty=Tensor[(3, 3, 13), bool] */;
  %1008 = %999.0;
  %1009 = %1004.3;
  %1010 = atanh(%1005) /* ty=Tensor[(4, 11, 8), float32] */;
  %1011 = @func_8621() /* ty=Tensor[(495), uint64] */;
  (%1006, %1007, meta[relay.Constant][86] /* ty=Tensor[(117), bool] */, %1008, %1009, meta[relay.Constant][87] /* ty=Tensor[(420), float64] */, %var_10179, %1010, %1011)
}

def @func_12553() -> (float32,) {
  %1012 = @func_10623() /* ty=float32 */;
  (%1012,)
}

def @func_372(%var_363: Tensor[(10, 15, 13), float32]) -> (Tensor[(10, 15, 13), float32],) {
  %1013 = cast(%var_363, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
  %1014 = cosh(%1013) /* ty=Tensor[(10, 15, 13), float32] */;
  (%1014,)
}

def @func_6252(%var_6154: Tensor[(3, 14, 1), float32], %var_6173: Tensor[(504), float64], %var_6186: float32) -> (Tensor[(1188), bool], Tensor[(3, 14, 1188), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64], Tensor[(5, 9, 11), uint64], Tensor[(3, 3, 13), bool], Tensor[(1, 117), bool], float32, Tensor[(3, 14, 1), float64], float32, Tensor[(3, 14, 13), bool], Tensor[(135), float64], Tensor[(1, 135), float64]) {
  %1015 = cast(%var_6154, dtype="float32") /* ty=Tensor[(3, 14, 1), float32] */;
  %1016 = erf(%1015) /* ty=Tensor[(3, 14, 1), float32] */;
  %1017 = cast(meta[relay.Constant][88] /* ty=Tensor[(1188), bool] */, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %1018 = reshape(%1017, newshape=[1188]) /* ty=Tensor[(1188), bool] */;
  %1019 = @func_3267(%1018) /* ty=(Tensor[(8, 15, 5), float32], Tensor[(135), float64], Tensor[(1188), bool], Tensor[(1, 135), float64]) */;
  %1020 = %1019.2;
  %1021 = cast(%1016, dtype="bool") /* ty=Tensor[(3, 14, 1), bool] */;
  %1022 = cast(%1020, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %1023 = cast(%var_6173, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1024 = reshape(%1023, newshape=[6, 7, 12]) /* ty=Tensor[(6, 7, 12), float64] */;
  %1025 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
  %1026 = cast(meta[relay.Constant][89] /* ty=Tensor[(1, 117), bool] */, dtype="bool") /* ty=Tensor[(1, 117), bool] */;
  %1027 = cast(%var_6186, dtype="float32") /* ty=float32 */;
  %1028 = reshape(%1026, newshape=[39, 3]) /* ty=Tensor[(39, 3), bool] */;
  %1029 = reshape(%1027, newshape=[]) /* ty=float32 */;
  %1030 = @func_5811(%1028, %1029) /* ty=(Tensor[(3, 3, 13), bool], Tensor[(39, 3), bool], float32, Tensor[(3, 13, 1), bool], Tensor[(3, 13, 1), int32]) */;
  %1031 = cast(%1016, dtype="float64") /* ty=Tensor[(3, 14, 1), float64] */;
  %1032 = cast(%1016, dtype="bool") /* ty=Tensor[(3, 14, 1), bool] */;
  %1033 = cast(meta[relay.Constant][90] /* ty=Tensor[(3, 14, 13), float32] */, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %1034 = cast(%1020, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %1035 = cast(meta[relay.Constant][88] /* ty=Tensor[(1188), bool] */, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %1036 = cast(meta[relay.Constant][91] /* ty=Tensor[(1, 135), float64] */, dtype="float64") /* ty=Tensor[(1, 135), float64] */;
  %1037 = cast(%1020, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %1038 = reshape(%1034, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), bool] */;
  %1039 = reshape(%1035, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), bool] */;
  %1040 = reshape(%1036, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %1041 = reshape(%1037, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float32] */;
  %1042 = @func_2918(%1038, %1039, %1040, %1041) /* ty=(Tensor[(9, 15, ?), bool], Tensor[(135), float64], Tensor[(11, 12, 9), float32]) */;
  %1043 = greater_equal(%1021, %1022) /* ty=Tensor[(3, 14, 1188), bool] */;
  %1044 = @func_180(%1024) /* ty=Tensor[(6, 7, 12), float64] */;
  %1045 = %1025.1;
  %1046 = %1030.0;
  %1047 = acos(%1031) /* ty=Tensor[(3, 14, 1), float64] */;
  %1048 = @func_6080() /* ty=float32 */;
  %1049 = logical_and(%1032, %1033) /* ty=Tensor[(3, 14, 13), bool] */;
  %1050 = %1042.1;
  (meta[relay.Constant][88] /* ty=Tensor[(1188), bool] */, %1043, %1044, %var_6173, %1045, %1046, meta[relay.Constant][89] /* ty=Tensor[(1, 117), bool] */, %var_6186, %1047, %1048, %1049, %1050, meta[relay.Constant][91] /* ty=Tensor[(1, 135), float64] */)
}

def @func_10798(%var_10761: Tensor[(1792), int32], %var_10762: Tensor[(2002), int64], %var_10763: Tensor[(182), float32], %var_10764: Tensor[(117), bool]) -> (float32, Tensor[(5, 9, 11), uint64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool], Tensor[(3, 13, 1), bool]) {
  %1051 = @func_5551() /* ty=(float32,) */;
  %1052 = cast(meta[relay.Constant][92] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1053 = cast(meta[relay.Constant][93] /* ty=Tensor[(36), int32] */, dtype="int32") /* ty=Tensor[(36), int32] */;
  %1054 = cast(%var_10761, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %1055 = cast(%var_10762, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %1056 = cast(%var_10763, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1057 = cast(%var_10764, dtype="bool") /* ty=Tensor[(117), bool] */;
  %1058 = reshape(%1052, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %1059 = reshape(%1053, newshape=[36]) /* ty=Tensor[(36), int32] */;
  %1060 = reshape(%1054, newshape=[16, 112]) /* ty=Tensor[(16, 112), int32] */;
  %1061 = reshape(%1055, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %1062 = reshape(%1056, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1063 = reshape(%1057, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %1064 = @func_7585(%1058, %1059, %1060, %1061, %1062, %1063) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(5, 9, 11), uint64], Tensor[(1188), bool], Tensor[(420), float64], Tensor[(36), int32], Tensor[(182, 2), float64], Tensor[(16, 112), int32], Tensor[(1950), float32], float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(3, 3, 13), bool], Tensor[(117), bool]) */;
  %1065 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %1066 = %1051.0;
  %1067 = %1064.0;
  %1068 = %1065.1;
  (%1066, %1067, meta[relay.Constant][92] /* ty=Tensor[(420), float64] */, meta[relay.Constant][93] /* ty=Tensor[(36), int32] */, %var_10761, %var_10762, %var_10763, %var_10764, %1068)
}

def @func_11201() -> float32 {
  %1069 = @func_5789() /* ty=(float32, Tensor[(3, 13, 1), bool]) */;
  %1069.0
}

def @func_6627(%var_6586: Tensor[(15, 12, 12), uint64], %var_6587: Tensor[(15, 12, 12), uint64], %var_6601: Tensor[(182), float32], %var_6621: Tensor[(1, 1188), bool]) -> (Tensor[(15, 12, 12), bool], Tensor[(3, 13, 1), bool], Tensor[(182), float32], float64, Tensor[(15, 12, 12), float32], Tensor[(1188), bool], Tensor[(1, 1188), bool]) {
  %1070 = cast(%var_6587, dtype="bool") /* ty=Tensor[(15, 12, 12), bool] */;
  %1071 = shape_of(%var_6586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1072 = cast(%var_6586, dtype="bool") /* ty=Tensor[(15, 12, 12), bool] */;
  %1073 = dyn.reshape(%1070, %1071, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1074 = cast(%var_6601, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1075 = cast(0.28058f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1076 = reshape(%1074, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), float32] */;
  %1077 = reshape(%1075, newshape=[]) /* ty=float64 */;
  %1078 = @func_6354(%1076, %1077) /* ty=(Tensor[(1, 16, 6), float64], float64, Tensor[(48, 2), float64], Tensor[(3, 13, 1), bool], Tensor[(14, 13, 1), float32]) */;
  %1079 = cast(%var_6586, dtype="float32") /* ty=Tensor[(15, 12, 12), float32] */;
  %1080 = cast(%var_6621, dtype="bool") /* ty=Tensor[(1, 1188), bool] */;
  %1081 = reshape(%1080, newshape=[1188]) /* ty=Tensor[(1188), bool] */;
  %1082 = @func_3267(%1081) /* ty=(Tensor[(8, 15, 5), float32], Tensor[(135), float64], Tensor[(1188), bool], Tensor[(1, 135), float64]) */;
  %1083 = less(%1072, %1073) /* ty=Tensor[(15, 12, 12), bool] */;
  %1084 = %1078.3;
  %1085 = sin(%1079) /* ty=Tensor[(15, 12, 12), float32] */;
  %1086 = %1082.2;
  (%1083, %1084, %var_6601, 0.28058f64 /* ty=float64 */, %1085, %1086, %var_6621)
}

def @func_13593(%var_13580: Tensor[(21, 6), int16]) -> (Tensor[(5, 9, 11), uint64], Tensor[(126), int16], Tensor[(21, 6), int16], Tensor[(1950), float32], Tensor[(2002), float64]) {
  %1087 = @func_9264() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %1088 = cast(%var_13580, dtype="int16") /* ty=Tensor[(21, 6), int16] */;
  %1089 = cast(meta[relay.Constant][94] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %1090 = cast(meta[relay.Constant][95] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %1091 = reshape(%1088, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %1092 = reshape(%1089, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %1093 = reshape(%1090, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %1094 = @func_6736(%1091, %1092, %1093) /* ty=(float32, Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */;
  %1095 = cast(meta[relay.Constant][94] /* ty=Tensor[(2002), int64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %1096 = %1087.0;
  %1097 = %1094.2;
  %1098 = exp(%1095) /* ty=Tensor[(2002), float64] */;
  (%1096, %1097, %var_13580, meta[relay.Constant][95] /* ty=Tensor[(1950), float32] */, %1098)
}

def @func_8938() -> Tensor[(8, 504, 12), bool] {
  %1099 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %1099.3
}

def @func_8774(%var_8756: Tensor[(126), int16]) -> (Tensor[(6, 7, 12), float64], float32, Tensor[(126), int16]) {
  %1100 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %1101 = cast(%var_8756, dtype="int16") /* ty=Tensor[(126), int16] */;
  %1102 = reshape(%1101, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %1103 = @func_6882(%1102) /* ty=(Tensor[(350), int16], float32, Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(126), int16], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(10, 195), float32]) */;
  %1104 = %1100.0;
  %1105 = %1103.1;
  (%1104, %1105, %var_8756)
}

def @func_13017() -> Tensor[(5, 9, 11), uint64] {
  %1106 = @func_9073() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %1106.0
}

def @func_9919() -> Tensor[(495), uint64] {
  @func_8621() /* ty=Tensor[(495), uint64] */
}

def @func_7223() -> (Tensor[(1950), float32],) {
  %1107 = @func_6965() /* ty=Tensor[(1950), float32] */;
  (%1107,)
}

def @func_15038(%var_15032: Tensor[(1950), float32]) -> (Tensor[(5, 9, 11), uint64], Tensor[(126), int16], Tensor[(1950), float32], Tensor[(702), float32]) {
  %1108 = @func_9164() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %1109 = cast(%var_15032, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %1110 = cast(meta[relay.Constant][96] /* ty=Tensor[(702), float32] */, dtype="float32") /* ty=Tensor[(702), float32] */;
  %1111 = reshape(%1109, newshape=[1, 1950]) /* ty=Tensor[(1, 1950), float32] */;
  %1112 = reshape(%1110, newshape=[9, 6, 13]) /* ty=Tensor[(9, 6, 13), float32] */;
  %1113 = @func_14260(%1111, %1112) /* ty=(Tensor[(1950), bool], Tensor[(1, 1950), float32], Tensor[(9, 6, 13), bool], Tensor[(9, 6, 13), float32], Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64]) */;
  %1114 = %1108.0;
  %1115 = %1113.5;
  (%1114, %1115, %var_15032, meta[relay.Constant][96] /* ty=Tensor[(702), float32] */)
}

def @func_8575(%var_8479: Tensor[(1188), bool], %var_8500: Tensor[(350), int16], %var_8501: Tensor[(1950), float32], %var_8502: Tensor[(4, 448), int32], %var_8506: Tensor[(3, 45), float32], %var_8528: Tensor[(3, 45), float64], %var_8547: Tensor[(3, 45), float32]) -> (float32, Tensor[(135), float64], Tensor[(1188), bool], Tensor[(9, 15, ?), bool], Tensor[(10, 7, 5), int16], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(4, 448), int32], Tensor[(3, 45), int64], Tensor[(3, 45), bool], Tensor[(3, 45), bool]) {
  %1116 = @func_5551() /* ty=(float32,) */;
  %1117 = cast(%var_8479, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %1118 = cast(%var_8479, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %1119 = cast(meta[relay.Constant][97] /* ty=Tensor[(3, 45), float64] */, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
  %1120 = cast(%var_8479, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %1121 = reshape(%1117, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), bool] */;
  %1122 = reshape(%1118, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), bool] */;
  %1123 = reshape(%1119, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %1124 = reshape(%1120, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float32] */;
  %1125 = @func_2918(%1121, %1122, %1123, %1124) /* ty=(Tensor[(9, 15, ?), bool], Tensor[(135), float64], Tensor[(11, 12, 9), float32]) */;
  %1126 = cast(meta[relay.Constant][97] /* ty=Tensor[(3, 45), float64] */, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
  %1127 = reshape(%1126, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float64] */;
  %1128 = cast(%var_8500, dtype="int16") /* ty=Tensor[(350), int16] */;
  %1129 = cast(%var_8501, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %1130 = cast(%var_8502, dtype="int32") /* ty=Tensor[(4, 448), int32] */;
  %1131 = reshape(%1128, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), int16] */;
  %1132 = reshape(%1129, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %1133 = reshape(%1130, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %1134 = @func_1194(%1131, %1132, %1133) /* ty=(Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) */;
  %1135 = cast(meta[relay.Constant][97] /* ty=Tensor[(3, 45), float64] */, dtype="float32") /* ty=Tensor[(3, 45), float32] */;
  %1136 = log10(%1135) /* ty=Tensor[(3, 45), float32] */;
  %1137 = cast(%var_8506, dtype="int64") /* ty=Tensor[(3, 45), int64] */;
  %1138 = shape_of(%1136, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1139 = cast(%1136, dtype="int64") /* ty=Tensor[(3, 45), int64] */;
  %1140 = dyn.reshape(%1137, %1138, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1141 = cast(%1136, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
  %1142 = log2(%1141) /* ty=Tensor[(3, 45), float64] */;
  %1143 = cast(%var_8528, dtype="bool") /* ty=Tensor[(3, 45), bool] */;
  %1144 = shape_of(%1142, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1145 = cast(%1142, dtype="bool") /* ty=Tensor[(3, 45), bool] */;
  %1146 = dyn.reshape(%1143, %1144, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1147 = cast(%1136, dtype="float32") /* ty=Tensor[(3, 45), float32] */;
  %1148 = shape_of(%1142, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1149 = cast(%1142, dtype="float32") /* ty=Tensor[(3, 45), float32] */;
  %1150 = dyn.reshape(%1147, %1148, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1151 = floor_mod(%1149, %1150) /* ty=Tensor[(3, 45), float32] */;
  %1152 = cast(%var_8547, dtype="bool") /* ty=Tensor[(3, 45), bool] */;
  %1153 = shape_of(%1151, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1154 = cast(%1151, dtype="bool") /* ty=Tensor[(3, 45), bool] */;
  %1155 = dyn.reshape(%1152, %1153, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1156 = %1116.0;
  %1157 = %1125.1;
  %1158 = @func_144(%1127) /* ty=Tensor[(9, 15, ?), bool] */;
  %1159 = %1134.0;
  %1160 = multiply(%1139, %1140) /* ty=Tensor[(3, 45), int64] */;
  %1161 = greater(%1145, %1146) /* ty=Tensor[(3, 45), bool] */;
  %1162 = less_equal(%1154, %1155) /* ty=Tensor[(3, 45), bool] */;
  (%1156, %1157, %var_8479, %1158, %1159, %var_8500, %var_8501, %var_8502, %1160, %1161, %1162)
}

def @func_347(%var_336: Tensor[(8, 14, 16), int32], %var_337: Tensor[(8, 14, 16), int32]) -> Tensor[(8, 14, 16), int32] {
  %1163 = cast(%var_337, dtype="int32") /* ty=Tensor[(8, 14, 16), int32] */;
  %1164 = shape_of(%var_336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1165 = cast(%var_336, dtype="int32") /* ty=Tensor[(8, 14, 16), int32] */;
  %1166 = dyn.reshape(%1163, %1164, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%1165, %1166) /* ty=Tensor[(8, 14, 16), int32] */
}

def @func_13051(%var_13044: Tensor[(1, 42), float32]) -> (Tensor[(8, 504, 12), bool], Tensor[(42), float32], Tensor[(1, 42), float32]) {
  %1167 = @func_12479() /* ty=(Tensor[(8, 504, 12), bool],) */;
  %1168 = cast(%var_13044, dtype="float32") /* ty=Tensor[(1, 42), float32] */;
  %1169 = reshape(%1168, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %1170 = @func_9240(%1169) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(42), float32], Tensor[(504), float64], float32, Tensor[(5, 9, 11), float32]) */;
  %1171 = %1167.0;
  %1172 = %1170.1;
  (%1171, %1172, %var_13044)
}

def @func_9023(%var_9009: Tensor[(364), float64], %var_9010: Tensor[(1792), int32], %var_9011: Tensor[(1950), float32]) -> (Tensor[(5, 9, 11), uint64], Tensor[(364), float64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(364), float64], Tensor[(1792), int32], Tensor[(1950), float32]) {
  %1173 = @func_6374() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %1174 = cast(meta[relay.Constant][98] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1175 = cast(meta[relay.Constant][99] /* ty=Tensor[(36), int32] */, dtype="int32") /* ty=Tensor[(36), int32] */;
  %1176 = cast(%var_9009, dtype="float64") /* ty=Tensor[(364), float64] */;
  %1177 = cast(%var_9010, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %1178 = cast(%var_9011, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %1179 = reshape(%1174, newshape=[15, 14, 2]) /* ty=Tensor[(15, 14, 2), float64] */;
  %1180 = reshape(%1175, newshape=[36]) /* ty=Tensor[(36), int32] */;
  %1181 = reshape(%1176, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %1182 = reshape(%1177, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %1183 = reshape(%1178, newshape=[130, 15]) /* ty=Tensor[(130, 15), float32] */;
  %1184 = @func_5492(%1179, %1180, %1181, %1182, %1183) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(1188), bool], Tensor[(36), int32], Tensor[(3, 108), int32], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(130, 15), float32]) */;
  %1185 = %1173.0;
  %1186 = %1184.5;
  (%1185, %1186, meta[relay.Constant][98] /* ty=Tensor[(420), float64] */, meta[relay.Constant][99] /* ty=Tensor[(36), int32] */, %var_9009, %var_9010, %var_9011)
}

def @func_6405() -> (float32,) {
  %1187 = @func_6069() /* ty=(float32, float32) */;
  %1188 = %1187.1;
  (%1188,)
}

def @func_8012() -> float32 {
  %1189 = @func_6069() /* ty=(float32, float32) */;
  %1189.0
}

def @func_7242() -> (Tensor[(5, 9, 11), uint64],) {
  %1190 = @func_6374() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %1191 = %1190.0;
  (%1191,)
}

def @func_12717() -> float32 {
  %1192 = @func_10685() /* ty=(float32, Tensor[(5, 9, 11), uint64]) */;
  %1192.0
}

def @func_11809(%var_11750: Tensor[(1792), int32], %var_11752: Tensor[(117), bool], %var_11759: Tensor[(1280), uint64]) -> (float32, float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(182), float32], Tensor[(1792), int32], Tensor[(182), float32], Tensor[(117), bool], Tensor[(1950), float32], Tensor[(16, 10, 8), bool], Tensor[(1280), uint64], Tensor[(504), float64], Tensor[(1950), float32]) {
  %1193 = @func_8733() /* ty=(float32,) */;
  %1194 = cast(meta[relay.Constant][100] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %1195 = reshape(%1194, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %1196 = @func_9193(%1195) /* ty=(float32, float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */;
  %1197 = cast(%var_11750, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %1198 = %1196.3;
  %1199 = cast(%1198, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %1200 = cast(meta[relay.Constant][101] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1201 = cast(%var_11752, dtype="bool") /* ty=Tensor[(117), bool] */;
  %1202 = reshape(%1197, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %1203 = reshape(%1199, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %1204 = reshape(%1200, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1205 = reshape(%1201, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %1206 = @func_10798(%1202, %1203, %1204, %1205) /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool], Tensor[(3, 13, 1), bool]) */;
  %1207 = @func_11456() /* ty=(Tensor[(8, 504, 12), bool], Tensor[(495), uint64], Tensor[(1950), float32]) */;
  %1208 = cast(%var_11759, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %1209 = cast(meta[relay.Constant][102] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1210 = reshape(%1208, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), uint64] */;
  %1211 = reshape(%1209, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %1212 = @func_5899(%1210, %1211) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64]) */;
  %1213 = cast(meta[relay.Constant][100] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %1214 = cast(%1198, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %1215 = %1207.2;
  %1216 = cast(%1215, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %1217 = reshape(%1213, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %1218 = reshape(%1214, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %1219 = reshape(%1216, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %1220 = @func_6736(%1217, %1218, %1219) /* ty=(float32, Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */;
  %1221 = %1193.0;
  %1222 = @func_5606() /* ty=float32 */;
  %1223 = %1206.6;
  %1224 = %1212.0;
  %1225 = %1220.4;
  (%1221, %1222, %1198, meta[relay.Constant][100] /* ty=Tensor[(126), int16] */, %1223, %var_11750, meta[relay.Constant][101] /* ty=Tensor[(182), float32] */, %var_11752, %1215, %1224, %var_11759, meta[relay.Constant][102] /* ty=Tensor[(504), float64] */, %1225)
}

def @func_11456() -> (Tensor[(8, 504, 12), bool], Tensor[(495), uint64], Tensor[(1950), float32]) {
  %1226 = @func_10020() /* ty=(Tensor[(8, 504, 12), bool],) */;
  %1227 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
  %1228 = @func_7223() /* ty=(Tensor[(1950), float32],) */;
  %1229 = %1226.0;
  %1230 = %1227.2;
  %1231 = %1228.0;
  (%1229, %1230, %1231)
}

def @func_11687() -> float32 {
  @func_10623() /* ty=float32 */
}

def @func_12080() -> (Tensor[(5, 9, 11), uint64],) {
  %1232 = @func_10922() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %1233 = %1232.0;
  (%1233,)
}

def @func_12881() -> Tensor[(1950), float32] {
  @func_6965() /* ty=Tensor[(1950), float32] */
}

def @func_11035() -> float32 {
  @func_6080() /* ty=float32 */
}

def @func_13078() -> (Tensor[(495), uint64],) {
  %1234 = @func_8621() /* ty=Tensor[(495), uint64] */;
  (%1234,)
}

def @func_9332(%var_9297: Tensor[(7, 6), float32]) -> (Tensor[(495), uint64], Tensor[(3, 14, 1188), bool], Tensor[(7, 6), float32], Tensor[(504), float64], float32, Tensor[(1950), float32], Tensor[(9, 15, ?), bool], Tensor[(135), float64]) {
  %1235 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
  %1236 = cast(%var_9297, dtype="float32") /* ty=Tensor[(7, 6), float32] */;
  %1237 = cast(meta[relay.Constant][103] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1238 = cast(-9.00744f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1239 = reshape(%1236, newshape=[3, 14, 1]) /* ty=Tensor[(3, 14, 1), float32] */;
  %1240 = reshape(%1237, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %1241 = reshape(%1238, newshape=[]) /* ty=float32 */;
  %1242 = @func_6252(%1239, %1240, %1241) /* ty=(Tensor[(1188), bool], Tensor[(3, 14, 1188), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64], Tensor[(5, 9, 11), uint64], Tensor[(3, 3, 13), bool], Tensor[(1, 117), bool], float32, Tensor[(3, 14, 1), float64], float32, Tensor[(3, 14, 13), bool], Tensor[(135), float64], Tensor[(1, 135), float64]) */;
  %1243 = cast(meta[relay.Constant][104] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %1244 = reshape(%1243, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float64] */;
  %1245 = %1235.2;
  %1246 = %1242.1;
  %1247 = @func_6965() /* ty=Tensor[(1950), float32] */;
  %1248 = @func_144(%1244) /* ty=Tensor[(9, 15, ?), bool] */;
  (%1245, %1246, %var_9297, meta[relay.Constant][103] /* ty=Tensor[(504), float64] */, -9.00744f /* ty=float32 */, %1247, %1248, meta[relay.Constant][104] /* ty=Tensor[(135), float64] */)
}

def @func_13299() -> (float32,) {
  %1249 = @func_6405() /* ty=(float32,) */;
  %1250 = %1249.0;
  (%1250,)
}

def @func_8290(%var_8282: Tensor[(1188), bool]) -> (float32, Tensor[(1188), bool], Tensor[(1188), bool]) {
  %1251 = cast(%var_8282, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %1252 = reshape(%1251, newshape=[1188]) /* ty=Tensor[(1188), bool] */;
  %1253 = @func_5520(%1252) /* ty=(float32, Tensor[(1188), bool], Tensor[(1188), bool]) */;
  %1254 = @func_5606() /* ty=float32 */;
  %1255 = %1253.2;
  (%1254, %1255, %var_8282)
}

def @func_14409() -> (Tensor[(448, 4), int32], Tensor[(1950), float32], float32) {
  %1256 = @func_11901() /* ty=(Tensor[(448, 4), int32],) */;
  %1257 = @func_12553() /* ty=(float32,) */;
  %1258 = %1256.0;
  %1259 = @func_6965() /* ty=Tensor[(1950), float32] */;
  %1260 = %1257.0;
  (%1258, %1259, %1260)
}

def @func_7499() -> (float32, Tensor[(324), int32], Tensor[(36), int32], Tensor[(324), int32]) {
  %1261 = @func_6069() /* ty=(float32, float32) */;
  %1262 = cast(meta[relay.Constant][105] /* ty=Tensor[(36), int32] */, dtype="int32") /* ty=Tensor[(36), int32] */;
  %1263 = cast(meta[relay.Constant][106] /* ty=Tensor[(324), int32] */, dtype="int32") /* ty=Tensor[(324), int32] */;
  %1264 = reshape(%1262, newshape=[36]) /* ty=Tensor[(36), int32] */;
  %1265 = reshape(%1263, newshape=[324]) /* ty=Tensor[(324), int32] */;
  %1266 = @func_6040(%1264, %1265) /* ty=(float32, Tensor[(1188), bool], Tensor[(36), int32], Tensor[(324), int32]) */;
  %1267 = %1261.1;
  %1268 = %1266.3;
  (%1267, %1268, meta[relay.Constant][105] /* ty=Tensor[(36), int32] */, meta[relay.Constant][106] /* ty=Tensor[(324), int32] */)
}

def @func_10123() -> (Tensor[(5, 9, 11), float32], Tensor[(8, 504, 12), bool]) {
  %1269 = @func_9164() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %1270 = %1269.0;
  %1271 = cast(%1270, dtype="float32") /* ty=Tensor[(5, 9, 11), float32] */;
  %1272 = cos(%1271) /* ty=Tensor[(5, 9, 11), float32] */;
  %1273 = @func_8938() /* ty=Tensor[(8, 504, 12), bool] */;
  (%1272, %1273)
}

def @func_12960(%var_12939: Tensor[(450), uint16], %var_12941: Tensor[(1792), int32]) -> (float32, Tensor[(8, 504, 12), bool], Tensor[(450), uint16], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(1950), float32]) {
  %1274 = @func_5551() /* ty=(float32,) */;
  %1275 = cast(%var_12939, dtype="uint16") /* ty=Tensor[(450), uint16] */;
  %1276 = cast(meta[relay.Constant][107] /* ty=Tensor[(36), int32] */, dtype="int32") /* ty=Tensor[(36), int32] */;
  %1277 = cast(%var_12941, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %1278 = cast(meta[relay.Constant][108] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %1279 = reshape(%1275, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), uint16] */;
  %1280 = reshape(%1276, newshape=[36]) /* ty=Tensor[(36), int32] */;
  %1281 = reshape(%1277, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %1282 = reshape(%1278, newshape=[1950, 1]) /* ty=Tensor[(1950, 1), float32] */;
  %1283 = @func_11145(%1279, %1280, %1281, %1282) /* ty=(Tensor[(350), int16], Tensor[(420), float64], Tensor[(36), int32], Tensor[(364), float64], Tensor[(1792), int32], Tensor[(1950, 1), float32], Tensor[(10, 9, 5), uint8], Tensor[(8, 504, 12), bool]) */;
  %1284 = %1274.0;
  %1285 = %1283.7;
  (%1284, %1285, %var_12939, meta[relay.Constant][107] /* ty=Tensor[(36), int32] */, %var_12941, meta[relay.Constant][108] /* ty=Tensor[(1950), float32] */)
}

def @func_10922() -> (Tensor[(5, 9, 11), uint64],) {
  %1286 = @func_6374() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %1287 = %1286.0;
  (%1287,)
}

def @func_6080() -> float32 {
  @func_5606() /* ty=float32 */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8774(%var_8756: Tensor[(126), int16]) -> (Tensor[(6, 7, 12), float64], float32, Tensor[(126), int16]) {
  %0 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %1 = cast(%var_8756, dtype="int16") /* ty=Tensor[(126), int16] */;
  %2 = reshape(%1, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %3 = @func_6882(%2) /* ty=(Tensor[(350), int16], float32, Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(126), int16], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(10, 195), float32]) */;
  %4 = %0.0;
  %5 = %3.1;
  (%4, %5, %var_8756)
}

def @func_9446(%var_9417: Tensor[(1950), float32]) -> (Tensor[(495), uint64], Tensor[(420), float64], Tensor[(364), float64], Tensor[(16, 112), int32], Tensor[(1950), bool], Tensor[(495), uint64]) {
  %6 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 112), int32] */, dtype="int32") /* ty=Tensor[(16, 112), int32] */;
  %9 = cast(%var_9417, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %10 = reshape(%7, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %11 = reshape(%8, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %12 = reshape(%9, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %13 = @func_9023(%10, %11, %12) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(364), float64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(364), float64], Tensor[(1792), int32], Tensor[(1950), float32]) */;
  %14 = cast(meta[relay.Constant][2] /* ty=Tensor[(1950), float32] */, dtype="bool") /* ty=Tensor[(1950), bool] */;
  %15 = shape_of(%var_9417, dtype="int32") /* ty=Tensor[(1), int32] */;
  %16 = cast(%var_9417, dtype="bool") /* ty=Tensor[(1950), bool] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?), bool] */;
  %18 = %6.2;
  %19 = %13.2;
  %20 = less(%16, %17) /* ty=Tensor[(1950), bool] */;
  %21 = @func_6002() /* ty=Tensor[(495), uint64] */;
  (%18, %19, meta[relay.Constant][0] /* ty=Tensor[(364), float64] */, meta[relay.Constant][1] /* ty=Tensor[(16, 112), int32] */, %20, %21)
}

def @func_5902(%var_5900: Tensor[(16, 10, 8), uint64], %var_5901: Tensor[(504), float64]) -> (Tensor[(16, 10, 8), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64]) {
  %30 = fn (%var_5879: Tensor[(16, 10, 8), uint64], %var_5884: Tensor[(504), float64]) -> (Tensor[(16, 10, 8), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64]) {
    %22 = cast(%var_5879, dtype="bool") /* ty=Tensor[(16, 10, 8), bool] */;
    %23 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(16, 10, 8), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %24 = cast(meta[relay.Constant][3] /* ty=Tensor[(16, 10, 8), uint64] */, dtype="bool") /* ty=Tensor[(16, 10, 8), bool] */;
    %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %26 = cast(%var_5884, dtype="float64") /* ty=Tensor[(504), float64] */;
    %27 = reshape(%26, newshape=[6, 7, 12]) /* ty=Tensor[(6, 7, 12), float64] */;
    %28 = less_equal(%24, %25) /* ty=Tensor[(16, 10, 8), bool] */;
    %29 = @func_180(%27) /* ty=Tensor[(6, 7, 12), float64] */;
    (%28, %29, %var_5884)
  };
  %30(%var_5900, %var_5901) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64]) */
}

def @func_12719() -> float32 {
  @func_12717() /* ty=float32 */
}

def @func_13054(%var_13052: Tensor[(1, 42), float32]) -> (Tensor[(8, 504, 12), bool], Tensor[(42), float32], Tensor[(1, 42), float32]) {
  @func_13051(%var_13052) /* ty=(Tensor[(8, 504, 12), bool], Tensor[(42), float32], Tensor[(1, 42), float32]) */
}

def @func_9164() -> (Tensor[(5, 9, 11), uint64],) {
  %31 = @func_6374() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %32 = %31.0;
  (%32,)
}

def @func_10922() -> (Tensor[(5, 9, 11), uint64],) {
  %33 = @func_6374() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %34 = %33.0;
  (%34,)
}

def @func_12461(%var_12457: Tensor[(6, 1, 9), float32], %var_12458: Tensor[(36), int32], %var_12459: Tensor[(1792), int32], %var_12460: Tensor[(182), float32]) -> (Tensor[(5, 9, 11), uint64], Tensor[(324), int32], Tensor[(6, 1, 9), bool], Tensor[(3, 13, 1), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool]) {
  %59 = fn (%var_12433: Tensor[(6, 1, 9), float32], %var_12442: Tensor[(36), int32], %var_12443: Tensor[(1792), int32], %var_12445: Tensor[(182), float32]) -> (Tensor[(5, 9, 11), uint64], Tensor[(324), int32], Tensor[(6, 1, 9), bool], Tensor[(3, 13, 1), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool]) {
    %35 = @func_10685() /* ty=(float32, Tensor[(5, 9, 11), uint64]) */;
    %36 = @func_9283() /* ty=(Tensor[(324), int32], Tensor[(3, 13, 1), bool], float32, Tensor[(495), uint64]) */;
    %37 = @func_10056() /* ty=float32 */;
    %38 = cast(%37, dtype="bool") /* ty=bool */;
    %39 = cast(%var_12433, dtype="bool") /* ty=Tensor[(6, 1, 9), bool] */;
    %40 = @func_5789() /* ty=(float32, Tensor[(3, 13, 1), bool]) */;
    %41 = cast(meta[relay.Constant][4] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %42 = cast(%var_12442, dtype="int32") /* ty=Tensor[(36), int32] */;
    %43 = cast(%var_12443, dtype="int32") /* ty=Tensor[(1792), int32] */;
    %44 = cast(meta[relay.Constant][5] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
    %45 = cast(%var_12445, dtype="float32") /* ty=Tensor[(182), float32] */;
    %46 = cast(meta[relay.Constant][6] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
    %47 = reshape(%41, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %48 = reshape(%42, newshape=[36]) /* ty=Tensor[(36), int32] */;
    %49 = reshape(%43, newshape=[16, 112]) /* ty=Tensor[(16, 112), int32] */;
    %50 = reshape(%44, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
    %51 = reshape(%45, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %52 = reshape(%46, newshape=[117]) /* ty=Tensor[(117), bool] */;
    %53 = @func_7585(%47, %48, %49, %50, %51, %52) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(5, 9, 11), uint64], Tensor[(1188), bool], Tensor[(420), float64], Tensor[(36), int32], Tensor[(182, 2), float64], Tensor[(16, 112), int32], Tensor[(1950), float32], float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(3, 3, 13), bool], Tensor[(117), bool]) */;
    %54 = %35.1;
    %55 = %36.0;
    %56 = not_equal(%38, %39) /* ty=Tensor[(6, 1, 9), bool] */;
    %57 = %40.1;
    %58 = %53.3;
    (%54, %55, %56, %57, %58, meta[relay.Constant][4] /* ty=Tensor[(420), float64] */, %var_12442, %var_12443, meta[relay.Constant][5] /* ty=Tensor[(2002), int64] */, %var_12445, meta[relay.Constant][6] /* ty=Tensor[(117), bool] */)
  };
  %59(%var_12457, %var_12458, %var_12459, %var_12460) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(324), int32], Tensor[(6, 1, 9), bool], Tensor[(3, 13, 1), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool]) */
}

def @func_10542(%var_10516: Tensor[(10, 4, 10), float64]) -> (Tensor[(1950), float32], Tensor[(10, 4, 10), float32]) {
  %60 = @func_6775() /* ty=(float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) */;
  %61 = cast(%var_10516, dtype="float64") /* ty=Tensor[(10, 4, 10), float64] */;
  %62 = atan(%61) /* ty=Tensor[(10, 4, 10), float64] */;
  %63 = cast(%62, dtype="float32") /* ty=Tensor[(10, 4, 10), float32] */;
  %64 = %60.3;
  %65 = acosh(%63) /* ty=Tensor[(10, 4, 10), float32] */;
  (%64, %65)
}

def @func_6082() -> float32 {
  @func_6080() /* ty=float32 */
}

def @func_8933() -> (Tensor[(14, 8, 15), bool], Tensor[(14, 8, 15), float64]) {
  %66 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 8, 15), bool] */, dtype="bool") /* ty=Tensor[(14, 8, 15), bool] */;
  %67 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(14, 8, 15), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %68 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 8, 15), bool] */, dtype="bool") /* ty=Tensor[(14, 8, 15), bool] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %70 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 8, 15), bool] */, dtype="float32") /* ty=Tensor[(14, 8, 15), float32] */;
  %71 = acosh(%70) /* ty=Tensor[(14, 8, 15), float32] */;
  %72 = cast(%71, dtype="float64") /* ty=Tensor[(14, 8, 15), float64] */;
  %73 = logical_and(%68, %69) /* ty=Tensor[(14, 8, 15), bool] */;
  %74 = asinh(%72) /* ty=Tensor[(14, 8, 15), float64] */;
  (%73, %74)
}

def @func_7224() -> (Tensor[(1950), float32],) {
  %76 = fn () -> (Tensor[(1950), float32],) {
    %75 = @func_6965() /* ty=Tensor[(1950), float32] */;
    (%75,)
  };
  %76() /* ty=(Tensor[(1950), float32],) */
}

def @func_11036() -> float32 {
  %77 = fn () -> float32 {
    @func_6080() /* ty=float32 */
  };
  %77() /* ty=float32 */
}

def @func_13300() -> (float32,) {
  %80 = fn () -> (float32,) {
    %78 = @func_6405() /* ty=(float32,) */;
    %79 = %78.0;
    (%79,)
  };
  %80() /* ty=(float32,) */
}

def @func_4255(%var_4245: Tensor[(3, 3, 13), bool]) -> Tensor[(3, 3, 13), bool] {
  %81 = cast(%var_4245, dtype="bool") /* ty=Tensor[(3, 3, 13), bool] */;
  %82 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(3, 3, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 3, 13), bool] */, dtype="bool") /* ty=Tensor[(3, 3, 13), bool] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%83, %84) /* ty=Tensor[(3, 3, 13), bool] */
}

def @func_13051(%var_13044: Tensor[(1, 42), float32]) -> (Tensor[(8, 504, 12), bool], Tensor[(42), float32], Tensor[(1, 42), float32]) {
  %85 = @func_12479() /* ty=(Tensor[(8, 504, 12), bool],) */;
  %86 = cast(%var_13044, dtype="float32") /* ty=Tensor[(1, 42), float32] */;
  %87 = reshape(%86, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %88 = @func_9240(%87) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(42), float32], Tensor[(504), float64], float32, Tensor[(5, 9, 11), float32]) */;
  %89 = %85.0;
  %90 = %88.1;
  (%89, %90, %var_13044)
}

def @func_10020() -> (Tensor[(8, 504, 12), bool],) {
  %91 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %92 = %91.3;
  (%92,)
}

def @func_9849() -> (float32, float32, Tensor[(5, 9, 11), uint64]) {
  %93 = @func_5789() /* ty=(float32, Tensor[(3, 13, 1), bool]) */;
  %94 = @func_9264() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %95 = %93.0;
  %96 = @func_8876() /* ty=float32 */;
  %97 = %94.0;
  (%95, %96, %97)
}

def @func_8965() -> (Tensor[(495), uint64],) {
  %98 = @func_6658() /* ty=Tensor[(495), uint64] */;
  (%98,)
}

def @func_9335(%var_9333: Tensor[(7, 6), float32]) -> (Tensor[(495), uint64], Tensor[(3, 14, 1188), bool], Tensor[(7, 6), float32], Tensor[(504), float64], float32, Tensor[(1950), float32], Tensor[(9, 15, ?), bool], Tensor[(135), float64]) {
  @func_9332(%var_9333) /* ty=(Tensor[(495), uint64], Tensor[(3, 14, 1188), bool], Tensor[(7, 6), float32], Tensor[(504), float64], float32, Tensor[(1950), float32], Tensor[(9, 15, ?), bool], Tensor[(135), float64]) */
}

def @func_10227() -> (Tensor[(5, 9, 11), float32], float32, Tensor[(14, 8, 15), float64]) {
  %99 = @func_10123() /* ty=(Tensor[(5, 9, 11), float32], Tensor[(8, 504, 12), bool]) */;
  %100 = @func_9283() /* ty=(Tensor[(324), int32], Tensor[(3, 13, 1), bool], float32, Tensor[(495), uint64]) */;
  %101 = @func_8933() /* ty=(Tensor[(14, 8, 15), bool], Tensor[(14, 8, 15), float64]) */;
  %102 = %99.0;
  %103 = %100.2;
  %104 = %101.1;
  (%102, %103, %104)
}

def @func_2127(%var_2125: Tensor[(5, 9, 11), uint64], %var_2126: Tensor[(5, 9, 11), uint64]) -> (Tensor[(5, 9, 11), uint64],) {
  %110 = fn (%var_2115: Tensor[(5, 9, 11), uint64], %var_2116: Tensor[(5, 9, 11), uint64]) -> (Tensor[(5, 9, 11), uint64],) {
    %105 = cast(%var_2116, dtype="uint64") /* ty=Tensor[(5, 9, 11), uint64] */;
    %106 = shape_of(%var_2115, dtype="int32") /* ty=Tensor[(3), int32] */;
    %107 = cast(%var_2115, dtype="uint64") /* ty=Tensor[(5, 9, 11), uint64] */;
    %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %109 = multiply(%107, %108) /* ty=Tensor[(5, 9, 11), uint64] */;
    (%109,)
  };
  %110(%var_2125, %var_2126) /* ty=(Tensor[(5, 9, 11), uint64],) */
}

def @func_3445(%var_3442: Tensor[(14, 13, 11), int64], %var_3443: Tensor[(350), int16], %var_3444: Tensor[(1950), float32]) -> (Tensor[(14, 13, 11), int64], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(2, 896), int32], Tensor[(1950), float32]) {
  @func_3440(%var_3442, %var_3443, %var_3444) /* ty=(Tensor[(14, 13, 11), int64], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(2, 896), int32], Tensor[(1950), float32]) */
}

def @func_7243() -> (Tensor[(5, 9, 11), uint64],) {
  %113 = fn () -> (Tensor[(5, 9, 11), uint64],) {
    %111 = @func_6374() /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %112 = %111.0;
    (%112,)
  };
  %113() /* ty=(Tensor[(5, 9, 11), uint64],) */
}

def @func_11280() -> float32 {
  %114 = @func_7499() /* ty=(float32, Tensor[(324), int32], Tensor[(36), int32], Tensor[(324), int32]) */;
  %114.0
}

def @func_12553() -> (float32,) {
  %115 = @func_10623() /* ty=float32 */;
  (%115,)
}

def @func_5651(%var_5643: float32) -> (Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32) {
  %116 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %117 = cast(%var_5643, dtype="float32") /* ty=float32 */;
  %118 = reshape(%117, newshape=[]) /* ty=float32 */;
  %119 = %116.0;
  %120 = @func_3740(%118) /* ty=Tensor[(3, 13, 1), bool] */;
  (%119, %120, %var_5643)
}

def @func_10058() -> float32 {
  @func_10056() /* ty=float32 */
}

def @func_1194(%var_1180: Tensor[(10, 7, 5), int16], %var_1187: Tensor[(1950), float32], %var_1191: Tensor[(1792), int32]) -> (Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) {
  %121 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 7, 5), int16] */, dtype="int16") /* ty=Tensor[(10, 7, 5), int16] */;
  %122 = shape_of(%var_1180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%var_1180, dtype="int16") /* ty=Tensor[(10, 7, 5), int16] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %125 = cast(%var_1187, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %126 = reshape(%125, newshape=[10, 15, 13]) /* ty=Tensor[(10, 15, 13), float32] */;
  %127 = @func_372(%126) /* ty=(Tensor[(10, 15, 13), float32],) */;
  %128 = cast(%var_1191, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %129 = cast(%var_1191, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %130 = reshape(%128, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int32] */;
  %131 = reshape(%129, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int32] */;
  %132 = left_shift(%123, %124) /* ty=Tensor[(10, 7, 5), int16] */;
  %133 = %127.0;
  %134 = @func_347(%130, %131) /* ty=Tensor[(8, 14, 16), int32] */;
  (%132, %133, %var_1187, %134, %var_1191)
}

def @func_5962() -> (float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) {
  %142 = fn () -> (float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) {
    %135 = cast(meta[relay.Constant][11] /* ty=Tensor[(495), uint64] */, dtype="uint64") /* ty=Tensor[(495), uint64] */;
    %136 = cast(meta[relay.Constant][11] /* ty=Tensor[(495), uint64] */, dtype="uint64") /* ty=Tensor[(495), uint64] */;
    %137 = reshape(%135, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), uint64] */;
    %138 = reshape(%136, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), uint64] */;
    %139 = @func_2124(%137, %138) /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %140 = @func_5606() /* ty=float32 */;
    %141 = %139.0;
    (%140, %141, meta[relay.Constant][11] /* ty=Tensor[(495), uint64] */)
  };
  %142() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */
}

def @func_9193(%var_9188: Tensor[(126), int16]) -> (float32, float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) {
  %143 = cast(%var_9188, dtype="int16") /* ty=Tensor[(126), int16] */;
  %144 = cast(meta[relay.Constant][12] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %145 = cast(meta[relay.Constant][13] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %146 = reshape(%143, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %147 = reshape(%144, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %148 = reshape(%145, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %149 = @func_6736(%146, %147, %148) /* ty=(float32, Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */;
  %150 = @func_8012() /* ty=float32 */;
  %151 = %149.0;
  (%150, %151, %var_9188, meta[relay.Constant][12] /* ty=Tensor[(2002), int64] */, meta[relay.Constant][13] /* ty=Tensor[(1950), float32] */)
}

def @func_11846() -> (Tensor[(5, 9, 11), uint64], Tensor[(14, 8, 15), float64]) {
  %156 = fn () -> (Tensor[(5, 9, 11), uint64], Tensor[(14, 8, 15), float64]) {
    %152 = @func_9073() /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %153 = @func_10457() /* ty=(Tensor[(14, 8, 15), float64], Tensor[(15, 10, 7), float32]) */;
    %154 = %152.0;
    %155 = %153.0;
    (%154, %155)
  };
  %156() /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(14, 8, 15), float64]) */
}

def @func_13258() -> (float32, float32, Tensor[(1188), bool], Tensor[(3, 396), bool]) {
  %164 = fn () -> (float32, float32, Tensor[(1188), bool], Tensor[(3, 396), bool]) {
    %157 = @func_5551() /* ty=(float32,) */;
    %158 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 396), bool] */, dtype="bool") /* ty=Tensor[(3, 396), bool] */;
    %159 = reshape(%158, newshape=[1188]) /* ty=Tensor[(1188), bool] */;
    %160 = @func_12280(%159) /* ty=(Tensor[(5, 9, 11), uint64], float32, Tensor[(1188), bool], float32, Tensor[(5, 9, 11), uint64]) */;
    %161 = @func_6434() /* ty=float32 */;
    %162 = %157.0;
    %163 = %160.2;
    (%161, %162, %163, meta[relay.Constant][14] /* ty=Tensor[(3, 396), bool] */)
  };
  %164() /* ty=(float32, float32, Tensor[(1188), bool], Tensor[(3, 396), bool]) */
}

def @func_6882(%var_6868: Tensor[(126), int16]) -> (Tensor[(350), int16], float32, Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(126), int16], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(10, 195), float32]) {
  %165 = @func_6775() /* ty=(float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) */;
  %166 = @func_6069() /* ty=(float32, float32) */;
  %167 = cast(meta[relay.Constant][15] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %168 = reshape(%167, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), bool] */;
  %169 = cast(%var_6868, dtype="int16") /* ty=Tensor[(126), int16] */;
  %170 = cast(meta[relay.Constant][16] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %171 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 195), float32] */, dtype="float32") /* ty=Tensor[(10, 195), float32] */;
  %172 = reshape(%169, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %173 = reshape(%170, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %174 = reshape(%171, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %175 = @func_6736(%172, %173, %174) /* ty=(float32, Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */;
  %176 = %165.2;
  %177 = %166.0;
  %178 = @func_4255(%168) /* ty=Tensor[(3, 3, 13), bool] */;
  %179 = %175.2;
  (%176, %177, %178, meta[relay.Constant][15] /* ty=Tensor[(117), bool] */, %179, %var_6868, meta[relay.Constant][16] /* ty=Tensor[(2002), int64] */, meta[relay.Constant][17] /* ty=Tensor[(10, 195), float32] */)
}

def @func_9283() -> (Tensor[(324), int32], Tensor[(3, 13, 1), bool], float32, Tensor[(495), uint64]) {
  %180 = @func_7499() /* ty=(float32, Tensor[(324), int32], Tensor[(36), int32], Tensor[(324), int32]) */;
  %181 = cast(-0.614525f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %182 = reshape(%181, newshape=[]) /* ty=float32 */;
  %183 = %180.3;
  %184 = @func_3740(%182) /* ty=Tensor[(3, 13, 1), bool] */;
  %185 = @func_6002() /* ty=Tensor[(495), uint64] */;
  (%183, %184, -0.614525f /* ty=float32 */, %185)
}

def @func_12831(%var_12829: Tensor[(36), int32], %var_12830: Tensor[(324), int32]) -> (float32, Tensor[(6, 6, 9), int32], Tensor[(36), int32], Tensor[(324), int32], Tensor[(8, 504, 12), bool], Tensor[(2, 24192), bool], Tensor[(1, 2002), int64], Tensor[(5, 9, 11), uint64]) {
  @func_12827(%var_12829, %var_12830) /* ty=(float32, Tensor[(6, 6, 9), int32], Tensor[(36), int32], Tensor[(324), int32], Tensor[(8, 504, 12), bool], Tensor[(2, 24192), bool], Tensor[(1, 2002), int64], Tensor[(5, 9, 11), uint64]) */
}

def @func_7115() -> (float32,) {
  %187 = fn () -> (float32,) {
    %186 = @func_6080() /* ty=float32 */;
    (%186,)
  };
  %187() /* ty=(float32,) */
}

def @func_7371() -> (float32, float32, Tensor[(5, 9, 11), float64]) {
  %198 = fn () -> (float32, float32, Tensor[(5, 9, 11), float64]) {
    %188 = @func_5551() /* ty=(float32,) */;
    %189 = @func_6775() /* ty=(float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) */;
    %190 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
    %191 = %190.1;
    %192 = cast(%191, dtype="float64") /* ty=Tensor[(5, 9, 11), float64] */;
    %193 = log(%192) /* ty=Tensor[(5, 9, 11), float64] */;
    %194 = cast(%193, dtype="float64") /* ty=Tensor[(5, 9, 11), float64] */;
    %195 = %188.0;
    %196 = %189.0;
    %197 = tan(%194) /* ty=Tensor[(5, 9, 11), float64] */;
    (%195, %196, %197)
  };
  %198() /* ty=(float32, float32, Tensor[(5, 9, 11), float64]) */
}

def @func_2286(%var_2261: float64, %var_2262: Tensor[(1, 16, 6), float64]) -> (Tensor[(1, 16, 6), float64],) {
  %199 = cast(%var_2261, dtype="float64") /* ty=float64 */;
  %200 = cast(%var_2262, dtype="float64") /* ty=Tensor[(1, 16, 6), float64] */;
  %201 = mod(%199, %200) /* ty=Tensor[(1, 16, 6), float64] */;
  (%201,)
}

def @func_5261(%var_5213: Tensor[(6, 6, 1), int32], %var_5214: Tensor[(6, 6, 9), int32]) -> (Tensor[(6, 6, 9), int32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(1188), bool], Tensor[(1188), bool]) {
  %202 = cast(%var_5213, dtype="int32") /* ty=Tensor[(6, 6, 1), int32] */;
  %203 = cast(%var_5214, dtype="int32") /* ty=Tensor[(6, 6, 9), int32] */;
  %204 = cast(meta[relay.Constant][18] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %205 = reshape(%204, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), bool] */;
  %206 = cast(meta[relay.Constant][19] /* ty=Tensor[(1188), bool] */, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %207 = reshape(%206, newshape=[1188]) /* ty=Tensor[(1188), bool] */;
  %208 = @func_3267(%207) /* ty=(Tensor[(8, 15, 5), float32], Tensor[(135), float64], Tensor[(1188), bool], Tensor[(1, 135), float64]) */;
  %209 = subtract(%202, %203) /* ty=Tensor[(6, 6, 9), int32] */;
  %210 = @func_4255(%205) /* ty=Tensor[(3, 3, 13), bool] */;
  %211 = %208.2;
  (%209, %210, meta[relay.Constant][18] /* ty=Tensor[(117), bool] */, %211, meta[relay.Constant][19] /* ty=Tensor[(1188), bool] */)
}

def @func_15040(%var_15039: Tensor[(1950), float32]) -> (Tensor[(5, 9, 11), uint64], Tensor[(126), int16], Tensor[(1950), float32], Tensor[(702), float32]) {
  %220 = fn (%var_15032: Tensor[(1950), float32]) -> (Tensor[(5, 9, 11), uint64], Tensor[(126), int16], Tensor[(1950), float32], Tensor[(702), float32]) {
    %212 = @func_9164() /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %213 = cast(%var_15032, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %214 = cast(meta[relay.Constant][20] /* ty=Tensor[(702), float32] */, dtype="float32") /* ty=Tensor[(702), float32] */;
    %215 = reshape(%213, newshape=[1, 1950]) /* ty=Tensor[(1, 1950), float32] */;
    %216 = reshape(%214, newshape=[9, 6, 13]) /* ty=Tensor[(9, 6, 13), float32] */;
    %217 = @func_14260(%215, %216) /* ty=(Tensor[(1950), bool], Tensor[(1, 1950), float32], Tensor[(9, 6, 13), bool], Tensor[(9, 6, 13), float32], Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64]) */;
    %218 = %212.0;
    %219 = %217.5;
    (%218, %219, %var_15032, meta[relay.Constant][20] /* ty=Tensor[(702), float32] */)
  };
  %220(%var_15039) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(126), int16], Tensor[(1950), float32], Tensor[(702), float32]) */
}

def @func_6736(%var_6694: Tensor[(126), int16], %var_6695: Tensor[(2002), int64], %var_6696: Tensor[(1950), float32]) -> (float32, Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) {
  %221 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
  %222 = %221.0;
  %223 = cast(%222, dtype="int16") /* ty=int16 */;
  %224 = cast(%var_6694, dtype="int16") /* ty=Tensor[(126), int16] */;
  %225 = cast(%var_6695, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %226 = cast(%var_6696, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %227 = reshape(%223, newshape=[]) /* ty=int16 */;
  %228 = reshape(%224, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), int16] */;
  %229 = reshape(%225, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %230 = reshape(%226, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %231 = @func_4627(%227, %228, %229, %230) /* ty=(Tensor[(14, 9, 1), int16], Tensor[(1950), float32], Tensor[(2002), int64], Tensor[(350), int16], Tensor[(1950), float32]) */;
  %232 = %231.4;
  (%222, %232, %var_6694, %var_6695, %var_6696)
}

def @func_12280(%var_12259: Tensor[(1188), bool]) -> (Tensor[(5, 9, 11), uint64], float32, Tensor[(1188), bool], float32, Tensor[(5, 9, 11), uint64]) {
  %233 = @func_10922() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %234 = cast(%var_12259, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %235 = reshape(%234, newshape=[1188]) /* ty=Tensor[(1188), bool] */;
  %236 = @func_5520(%235) /* ty=(float32, Tensor[(1188), bool], Tensor[(1188), bool]) */;
  %237 = @func_9849() /* ty=(float32, float32, Tensor[(5, 9, 11), uint64]) */;
  %238 = @func_11845() /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(14, 8, 15), float64]) */;
  %239 = %233.0;
  %240 = %236.0;
  %241 = %237.1;
  %242 = %238.0;
  (%239, %240, %var_12259, %241, %242)
}

def @func_11183() -> (float32,) {
  %245 = fn () -> (float32,) {
    %243 = @func_9283() /* ty=(Tensor[(324), int32], Tensor[(3, 13, 1), bool], float32, Tensor[(495), uint64]) */;
    %244 = %243.2;
    (%244,)
  };
  %245() /* ty=(float32,) */
}

def @func_4663(%var_4661: Tensor[(7, 2, 7), float32]) -> Tensor[(7, 2, 7), uint16] {
  @func_4660(%var_4661) /* ty=Tensor[(7, 2, 7), uint16] */
}

def @func_6741(%var_6738: Tensor[(126), int16], %var_6739: Tensor[(2002), int64], %var_6740: Tensor[(1950), float32]) -> (float32, Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) {
  @func_6736(%var_6738, %var_6739, %var_6740) /* ty=(float32, Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */
}

def @func_13158() -> (Tensor[(15, 10, 7), float32], float32, Tensor[(420), float64], Tensor[(3, 18), float32], Tensor[(36), int32], Tensor[(1792, 1), int32], Tensor[(182), float32], Tensor[(8, 504, 12), float64], Tensor[(8, 504, 12), bool]) {
  @func_13156() /* ty=(Tensor[(15, 10, 7), float32], float32, Tensor[(420), float64], Tensor[(3, 18), float32], Tensor[(36), int32], Tensor[(1792, 1), int32], Tensor[(182), float32], Tensor[(8, 504, 12), float64], Tensor[(8, 504, 12), bool]) */
}

def @func_10561() -> Tensor[(324), int32] {
  @func_10559() /* ty=Tensor[(324), int32] */
}

def @func_4632(%var_4628: int16, %var_4629: Tensor[(14, 9, 1), int16], %var_4630: Tensor[(2002), int64], %var_4631: Tensor[(1950), float32]) -> (Tensor[(14, 9, 1), int16], Tensor[(1950), float32], Tensor[(2002), int64], Tensor[(350), int16], Tensor[(1950), float32]) {
  %257 = fn (%var_4614: int16, %var_4615: Tensor[(14, 9, 1), int16], %var_4620: Tensor[(2002), int64], %var_4622: Tensor[(1950), float32]) -> (Tensor[(14, 9, 1), int16], Tensor[(1950), float32], Tensor[(2002), int64], Tensor[(350), int16], Tensor[(1950), float32]) {
    %246 = cast(%var_4614, dtype="int16") /* ty=int16 */;
    %247 = cast(%var_4615, dtype="int16") /* ty=Tensor[(14, 9, 1), int16] */;
    %248 = cast(%var_4620, dtype="int64") /* ty=Tensor[(2002), int64] */;
    %249 = cast(meta[relay.Constant][21] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
    %250 = cast(%var_4622, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %251 = reshape(%248, newshape=[14, 13, 11]) /* ty=Tensor[(14, 13, 11), int64] */;
    %252 = reshape(%249, newshape=[350]) /* ty=Tensor[(350), int16] */;
    %253 = reshape(%250, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
    %254 = @func_3440(%251, %252, %253) /* ty=(Tensor[(14, 13, 11), int64], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(2, 896), int32], Tensor[(1950), float32]) */;
    %255 = maximum(%246, %247) /* ty=Tensor[(14, 9, 1), int16] */;
    %256 = %254.5;
    (%255, %256, %var_4620, meta[relay.Constant][21] /* ty=Tensor[(350), int16] */, %var_4622)
  };
  %257(%var_4628, %var_4629, %var_4630, %var_4631) /* ty=(Tensor[(14, 9, 1), int16], Tensor[(1950), float32], Tensor[(2002), int64], Tensor[(350), int16], Tensor[(1950), float32]) */
}

def @func_9150() -> (Tensor[(5, 9, 11), uint64],) {
  @func_9148() /* ty=(Tensor[(5, 9, 11), uint64],) */
}

def @func_2290(%var_2288: float64, %var_2289: Tensor[(1, 16, 6), float64]) -> (Tensor[(1, 16, 6), float64],) {
  @func_2286(%var_2288, %var_2289) /* ty=(Tensor[(1, 16, 6), float64],) */
}

def @func_11358(%var_11320: Tensor[(8, 504, 12), bool], %var_11347: Tensor[(8, 504, 12), bool]) -> (Tensor[(324), int32], Tensor[(8, 504, 12), int64], Tensor[(8, 504, 12), int32], Tensor[(1950), float32]) {
  %258 = @func_8938() /* ty=Tensor[(8, 504, 12), bool] */;
  %259 = cast(%var_11320, dtype="int64") /* ty=Tensor[(8, 504, 12), int64] */;
  %260 = shape_of(%258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %261 = cast(%258, dtype="int64") /* ty=Tensor[(8, 504, 12), int64] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %263 = cast(%var_11347, dtype="int32") /* ty=Tensor[(8, 504, 12), int32] */;
  %264 = shape_of(%var_11320, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%var_11320, dtype="int32") /* ty=Tensor[(8, 504, 12), int32] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %267 = @func_7223() /* ty=(Tensor[(1950), float32],) */;
  %268 = @func_10559() /* ty=Tensor[(324), int32] */;
  %269 = right_shift(%261, %262) /* ty=Tensor[(8, 504, 12), int64] */;
  %270 = bitwise_and(%265, %266) /* ty=Tensor[(8, 504, 12), int32] */;
  %271 = %267.0;
  (%268, %269, %270, %271)
}

def @func_6149(%var_6148: Tensor[(13, 9), bool]) -> (float32, Tensor[(3, 3, 13), bool], Tensor[(13, 9), bool], Tensor[(1792), int32], Tensor[(91, 4), float64], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(1950), float32], Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32]) {
  %300 = fn (%var_6118: Tensor[(13, 9), bool]) -> (float32, Tensor[(3, 3, 13), bool], Tensor[(13, 9), bool], Tensor[(1792), int32], Tensor[(91, 4), float64], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(1950), float32], Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32]) {
    %272 = cast(%var_6118, dtype="bool") /* ty=Tensor[(13, 9), bool] */;
    %273 = reshape(%272, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), bool] */;
    %274 = cast(meta[relay.Constant][22] /* ty=Tensor[(91, 4), float64] */, dtype="float64") /* ty=Tensor[(91, 4), float64] */;
    %275 = cast(meta[relay.Constant][22] /* ty=Tensor[(91, 4), float64] */, dtype="float64") /* ty=Tensor[(91, 4), float64] */;
    %276 = cast(meta[relay.Constant][23] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
    %277 = cast(meta[relay.Constant][24] /* ty=Tensor[(1792), int32] */, dtype="int32") /* ty=Tensor[(1792), int32] */;
    %278 = cast(meta[relay.Constant][25] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %279 = reshape(%274, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
    %280 = reshape(%275, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
    %281 = reshape(%276, newshape=[350]) /* ty=Tensor[(350), int16] */;
    %282 = reshape(%277, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
    %283 = reshape(%278, newshape=[1, 1950]) /* ty=Tensor[(1, 1950), float32] */;
    %284 = @func_1925(%279, %280, %281, %282, %283) /* ty=(Tensor[(14, 2, 13), float64], Tensor[(1950), float32], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(8, 14, 16), int32], Tensor[(?, 1950), bool]) */;
    %285 = cast(meta[relay.Constant][23] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
    %286 = cast(meta[relay.Constant][25] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %287 = %284.3;
    %288 = cast(%287, dtype="int32") /* ty=Tensor[(1792), int32] */;
    %289 = reshape(%285, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), int16] */;
    %290 = reshape(%286, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
    %291 = reshape(%288, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
    %292 = @func_1194(%289, %290, %291) /* ty=(Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) */;
    %293 = cast(meta[relay.Constant][25] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %294 = reshape(%293, newshape=[10, 15, 13]) /* ty=Tensor[(10, 15, 13), float32] */;
    %295 = @func_372(%294) /* ty=(Tensor[(10, 15, 13), float32],) */;
    %296 = @func_6080() /* ty=float32 */;
    %297 = @func_4255(%273) /* ty=Tensor[(3, 3, 13), bool] */;
    %298 = %292.0;
    %299 = %295.0;
    (%296, %297, %var_6118, %287, meta[relay.Constant][22] /* ty=Tensor[(91, 4), float64] */, meta[relay.Constant][23] /* ty=Tensor[(350), int16] */, meta[relay.Constant][24] /* ty=Tensor[(1792), int32] */, meta[relay.Constant][25] /* ty=Tensor[(1950), float32] */, %298, %299)
  };
  %300(%var_6148) /* ty=(float32, Tensor[(3, 3, 13), bool], Tensor[(13, 9), bool], Tensor[(1792), int32], Tensor[(91, 4), float64], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(1950), float32], Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32]) */
}

def @func_6256(%var_6253: Tensor[(3, 14, 1), float32], %var_6254: Tensor[(504), float64], %var_6255: float32) -> (Tensor[(1188), bool], Tensor[(3, 14, 1188), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64], Tensor[(5, 9, 11), uint64], Tensor[(3, 3, 13), bool], Tensor[(1, 117), bool], float32, Tensor[(3, 14, 1), float64], float32, Tensor[(3, 14, 13), bool], Tensor[(135), float64], Tensor[(1, 135), float64]) {
  %337 = fn (%var_6154: Tensor[(3, 14, 1), float32], %var_6173: Tensor[(504), float64], %var_6186: float32) -> (Tensor[(1188), bool], Tensor[(3, 14, 1188), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64], Tensor[(5, 9, 11), uint64], Tensor[(3, 3, 13), bool], Tensor[(1, 117), bool], float32, Tensor[(3, 14, 1), float64], float32, Tensor[(3, 14, 13), bool], Tensor[(135), float64], Tensor[(1, 135), float64]) {
    %301 = cast(%var_6154, dtype="float32") /* ty=Tensor[(3, 14, 1), float32] */;
    %302 = erf(%301) /* ty=Tensor[(3, 14, 1), float32] */;
    %303 = cast(meta[relay.Constant][26] /* ty=Tensor[(1188), bool] */, dtype="bool") /* ty=Tensor[(1188), bool] */;
    %304 = reshape(%303, newshape=[1188]) /* ty=Tensor[(1188), bool] */;
    %305 = @func_3267(%304) /* ty=(Tensor[(8, 15, 5), float32], Tensor[(135), float64], Tensor[(1188), bool], Tensor[(1, 135), float64]) */;
    %306 = %305.2;
    %307 = cast(%302, dtype="bool") /* ty=Tensor[(3, 14, 1), bool] */;
    %308 = cast(%306, dtype="bool") /* ty=Tensor[(1188), bool] */;
    %309 = cast(%var_6173, dtype="float64") /* ty=Tensor[(504), float64] */;
    %310 = reshape(%309, newshape=[6, 7, 12]) /* ty=Tensor[(6, 7, 12), float64] */;
    %311 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
    %312 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 117), bool] */, dtype="bool") /* ty=Tensor[(1, 117), bool] */;
    %313 = cast(%var_6186, dtype="float32") /* ty=float32 */;
    %314 = reshape(%312, newshape=[39, 3]) /* ty=Tensor[(39, 3), bool] */;
    %315 = reshape(%313, newshape=[]) /* ty=float32 */;
    %316 = @func_5811(%314, %315) /* ty=(Tensor[(3, 3, 13), bool], Tensor[(39, 3), bool], float32, Tensor[(3, 13, 1), bool], Tensor[(3, 13, 1), int32]) */;
    %317 = cast(%302, dtype="float64") /* ty=Tensor[(3, 14, 1), float64] */;
    %318 = cast(%302, dtype="bool") /* ty=Tensor[(3, 14, 1), bool] */;
    %319 = cast(meta[relay.Constant][28] /* ty=Tensor[(3, 14, 13), float32] */, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
    %320 = cast(%306, dtype="bool") /* ty=Tensor[(1188), bool] */;
    %321 = cast(meta[relay.Constant][26] /* ty=Tensor[(1188), bool] */, dtype="bool") /* ty=Tensor[(1188), bool] */;
    %322 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 135), float64] */, dtype="float64") /* ty=Tensor[(1, 135), float64] */;
    %323 = cast(%306, dtype="float32") /* ty=Tensor[(1188), float32] */;
    %324 = reshape(%320, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), bool] */;
    %325 = reshape(%321, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), bool] */;
    %326 = reshape(%322, newshape=[135]) /* ty=Tensor[(135), float64] */;
    %327 = reshape(%323, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float32] */;
    %328 = @func_2918(%324, %325, %326, %327) /* ty=(Tensor[(9, 15, ?), bool], Tensor[(135), float64], Tensor[(11, 12, 9), float32]) */;
    %329 = greater_equal(%307, %308) /* ty=Tensor[(3, 14, 1188), bool] */;
    %330 = @func_180(%310) /* ty=Tensor[(6, 7, 12), float64] */;
    %331 = %311.1;
    %332 = %316.0;
    %333 = acos(%317) /* ty=Tensor[(3, 14, 1), float64] */;
    %334 = @func_6080() /* ty=float32 */;
    %335 = logical_and(%318, %319) /* ty=Tensor[(3, 14, 13), bool] */;
    %336 = %328.1;
    (meta[relay.Constant][26] /* ty=Tensor[(1188), bool] */, %329, %330, %var_6173, %331, %332, meta[relay.Constant][27] /* ty=Tensor[(1, 117), bool] */, %var_6186, %333, %334, %335, %336, meta[relay.Constant][29] /* ty=Tensor[(1, 135), float64] */)
  };
  %337(%var_6253, %var_6254, %var_6255) /* ty=(Tensor[(1188), bool], Tensor[(3, 14, 1188), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64], Tensor[(5, 9, 11), uint64], Tensor[(3, 3, 13), bool], Tensor[(1, 117), bool], float32, Tensor[(3, 14, 1), float64], float32, Tensor[(3, 14, 13), bool], Tensor[(135), float64], Tensor[(1, 135), float64]) */
}

def @func_10559() -> Tensor[(324), int32] {
  %338 = @func_7499() /* ty=(float32, Tensor[(324), int32], Tensor[(36), int32], Tensor[(324), int32]) */;
  %338.1
}

def @func_5789() -> (float32, Tensor[(3, 13, 1), bool]) {
  %339 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %340 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %341 = %339.2;
  %342 = %340.1;
  (%341, %342)
}

def @func_10007(%var_10005: Tensor[(6, 11, 12), float64]) -> (Tensor[(6, 11, 12), float64], Tensor[(5, 9, 11), uint64]) {
  @func_10004(%var_10005) /* ty=(Tensor[(6, 11, 12), float64], Tensor[(5, 9, 11), uint64]) */
}

def @func_13468() -> (Tensor[(1950), float32], float32, float32) {
  %343 = @func_6775() /* ty=(float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) */;
  %344 = @func_8055() /* ty=(float32,) */;
  %345 = %343.3;
  %346 = %344.0;
  %347 = @func_12717() /* ty=float32 */;
  (%345, %346, %347)
}

def @func_12283(%var_12281: Tensor[(1188), bool]) -> (Tensor[(5, 9, 11), uint64], float32, Tensor[(1188), bool], float32, Tensor[(5, 9, 11), uint64]) {
  @func_12280(%var_12281) /* ty=(Tensor[(5, 9, 11), uint64], float32, Tensor[(1188), bool], float32, Tensor[(5, 9, 11), uint64]) */
}

def @func_13784(%var_13760: Tensor[(9, 9, 8), float32]) -> (Tensor[(9, 9, 8), float64],) {
  %348 = cast(%var_13760, dtype="float32") /* ty=Tensor[(9, 9, 8), float32] */;
  %349 = acosh(%348) /* ty=Tensor[(9, 9, 8), float32] */;
  %350 = cast(%349, dtype="float64") /* ty=Tensor[(9, 9, 8), float64] */;
  %351 = cosh(%350) /* ty=Tensor[(9, 9, 8), float64] */;
  (%351,)
}

def @func_8967() -> (Tensor[(495), uint64],) {
  @func_8965() /* ty=(Tensor[(495), uint64],) */
}

def @func_4660(%var_4652: Tensor[(7, 2, 7), float32]) -> Tensor[(7, 2, 7), uint16] {
  %352 = cast(%var_4652, dtype="float32") /* ty=Tensor[(7, 2, 7), float32] */;
  %353 = sigmoid(%352) /* ty=Tensor[(7, 2, 7), float32] */;
  %354 = cast(%var_4652, dtype="uint16") /* ty=Tensor[(7, 2, 7), uint16] */;
  %355 = shape_of(%353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%353, dtype="uint16") /* ty=Tensor[(7, 2, 7), uint16] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_or(%356, %357) /* ty=Tensor[(7, 2, 7), uint16] */
}

def @func_12316(%var_12314: Tensor[(350), int16]) -> (Tensor[(14, 8, 15), float64], Tensor[(364), float64], Tensor[(2002), int64], Tensor[(350), int16], Tensor[(1950), float32]) {
  @func_12313(%var_12314) /* ty=(Tensor[(14, 8, 15), float64], Tensor[(364), float64], Tensor[(2002), int64], Tensor[(350), int16], Tensor[(1950), float32]) */
}

def @func_6405() -> (float32,) {
  %358 = @func_6069() /* ty=(float32, float32) */;
  %359 = %358.1;
  (%359,)
}

def @func_11457() -> (Tensor[(8, 504, 12), bool], Tensor[(495), uint64], Tensor[(1950), float32]) {
  %366 = fn () -> (Tensor[(8, 504, 12), bool], Tensor[(495), uint64], Tensor[(1950), float32]) {
    %360 = @func_10020() /* ty=(Tensor[(8, 504, 12), bool],) */;
    %361 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
    %362 = @func_7223() /* ty=(Tensor[(1950), float32],) */;
    %363 = %360.0;
    %364 = %361.2;
    %365 = %362.0;
    (%363, %364, %365)
  };
  %366() /* ty=(Tensor[(8, 504, 12), bool], Tensor[(495), uint64], Tensor[(1950), float32]) */
}

def @func_13156() -> (Tensor[(15, 10, 7), float32], float32, Tensor[(420), float64], Tensor[(3, 18), float32], Tensor[(36), int32], Tensor[(1792, 1), int32], Tensor[(182), float32], Tensor[(8, 504, 12), float64], Tensor[(8, 504, 12), bool]) {
  %367 = @func_10457() /* ty=(Tensor[(14, 8, 15), float64], Tensor[(15, 10, 7), float32]) */;
  %368 = cast(meta[relay.Constant][30] /* ty=Tensor[(3, 18), float32] */, dtype="float32") /* ty=Tensor[(3, 18), float32] */;
  %369 = cast(meta[relay.Constant][31] /* ty=Tensor[(36), int32] */, dtype="int32") /* ty=Tensor[(36), int32] */;
  %370 = cast(meta[relay.Constant][32] /* ty=Tensor[(1792, 1), int32] */, dtype="int32") /* ty=Tensor[(1792, 1), int32] */;
  %371 = cast(meta[relay.Constant][33] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %372 = reshape(%368, newshape=[6, 1, 9]) /* ty=Tensor[(6, 1, 9), float32] */;
  %373 = reshape(%369, newshape=[36]) /* ty=Tensor[(36), int32] */;
  %374 = reshape(%370, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %375 = reshape(%371, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %376 = @func_12456(%372, %373, %374, %375) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(324), int32], Tensor[(6, 1, 9), bool], Tensor[(3, 13, 1), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool]) */;
  %377 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %378 = %377.3;
  %379 = cast(%378, dtype="float64") /* ty=Tensor[(8, 504, 12), float64] */;
  %380 = atanh(%379) /* ty=Tensor[(8, 504, 12), float64] */;
  %381 = cast(%380, dtype="float64") /* ty=Tensor[(8, 504, 12), float64] */;
  %382 = %367.1;
  %383 = @func_11201() /* ty=float32 */;
  %384 = %376.4;
  %385 = sinh(%381) /* ty=Tensor[(8, 504, 12), float64] */;
  %386 = @func_8938() /* ty=Tensor[(8, 504, 12), bool] */;
  (%382, %383, %384, meta[relay.Constant][30] /* ty=Tensor[(3, 18), float32] */, meta[relay.Constant][31] /* ty=Tensor[(36), int32] */, meta[relay.Constant][32] /* ty=Tensor[(1792, 1), int32] */, meta[relay.Constant][33] /* ty=Tensor[(182), float32] */, %385, %386)
}

def @func_4258(%var_4256: Tensor[(3, 3, 13), bool]) -> Tensor[(3, 3, 13), bool] {
  @func_4255(%var_4256) /* ty=Tensor[(3, 3, 13), bool] */
}

def @func_13506(%var_13482: uint8, %var_13483: Tensor[(11, 9, 4), uint8]) -> Tensor[(11, 9, 4), float64] {
  %387 = cast(%var_13482, dtype="uint8") /* ty=uint8 */;
  %388 = cast(%var_13483, dtype="uint8") /* ty=Tensor[(11, 9, 4), uint8] */;
  %389 = subtract(%387, %388) /* ty=Tensor[(11, 9, 4), uint8] */;
  %390 = cast(%389, dtype="float64") /* ty=Tensor[(11, 9, 4), float64] */;
  log(%390) /* ty=Tensor[(11, 9, 4), float64] */
}

def @func_1925(%var_1865: Tensor[(14, 2, 13), float64], %var_1866: Tensor[(14, 2, 13), float64], %var_1879: Tensor[(350), int16], %var_1881: Tensor[(1792), int32], %var_1887: Tensor[(1, 1950), float32]) -> (Tensor[(14, 2, 13), float64], Tensor[(1950), float32], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(8, 14, 16), int32], Tensor[(?, 1950), bool]) {
  %391 = cast(%var_1866, dtype="float64") /* ty=Tensor[(14, 2, 13), float64] */;
  %392 = shape_of(%var_1865, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%var_1865, dtype="float64") /* ty=Tensor[(14, 2, 13), float64] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %395 = floor_divide(%393, %394) /* ty=Tensor[(14, 2, 13), float64] */;
  %396 = cast(%395, dtype="float64") /* ty=Tensor[(14, 2, 13), float64] */;
  %397 = shape_of(%var_1865, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%var_1865, dtype="float64") /* ty=Tensor[(14, 2, 13), float64] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %400 = cast(%var_1879, dtype="int16") /* ty=Tensor[(350), int16] */;
  %401 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 1950), float32] */, dtype="float32") /* ty=Tensor[(1, 1950), float32] */;
  %402 = cast(%var_1881, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %403 = reshape(%400, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), int16] */;
  %404 = reshape(%401, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %405 = reshape(%402, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %406 = @func_1194(%403, %404, %405) /* ty=(Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) */;
  %407 = cast(%var_1881, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %408 = cast(%var_1881, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %409 = reshape(%407, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int32] */;
  %410 = reshape(%408, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int32] */;
  %411 = cast(%var_1887, dtype="bool") /* ty=Tensor[(1, 1950), bool] */;
  %412 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(1, 1950), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %413 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 1950), float32] */, dtype="bool") /* ty=Tensor[(1, 1950), bool] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %415 = divide(%398, %399) /* ty=Tensor[(14, 2, 13), float64] */;
  %416 = %406.2;
  %417 = @func_347(%409, %410) /* ty=Tensor[(8, 14, 16), int32] */;
  %418 = not_equal(%413, %414) /* ty=Tensor[(?, 1950), bool] */;
  (%415, %416, %var_1879, %var_1881, %417, %418)
}

def @func_5606() -> float32 {
  %419 = @func_5551() /* ty=(float32,) */;
  %419.0
}

def @func_11688() -> float32 {
  %420 = fn () -> float32 {
    @func_10623() /* ty=float32 */
  };
  %420() /* ty=float32 */
}

def @func_15416() -> (Tensor[(1950), float32], Tensor[(1, 6, 10), float32], Tensor[(60), float32], Tensor[(7, 3, 15), float64]) {
  %421 = @func_7223() /* ty=(Tensor[(1950), float32],) */;
  %422 = cast(meta[relay.Constant][35] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %423 = reshape(%422, newshape=[1, 6, 10]) /* ty=Tensor[(1, 6, 10), float32] */;
  %424 = @func_10633(%423) /* ty=(Tensor[(1, 6, 10), float32],) */;
  %425 = @func_7671() /* ty=(Tensor[(7, 3, 15), float64],) */;
  %426 = %421.0;
  %427 = %424.0;
  %428 = %425.0;
  (%426, %427, meta[relay.Constant][35] /* ty=Tensor[(60), float32] */, %428)
}

def @func_6043(%var_6041: Tensor[(36), int32], %var_6042: Tensor[(324), int32]) -> (float32, Tensor[(1188), bool], Tensor[(36), int32], Tensor[(324), int32]) {
  %437 = fn (%var_6031: Tensor[(36), int32], %var_6032: Tensor[(324), int32]) -> (float32, Tensor[(1188), bool], Tensor[(36), int32], Tensor[(324), int32]) {
    %429 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
    %430 = cast(%var_6031, dtype="int32") /* ty=Tensor[(36), int32] */;
    %431 = cast(%var_6032, dtype="int32") /* ty=Tensor[(324), int32] */;
    %432 = reshape(%430, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), int32] */;
    %433 = reshape(%431, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), int32] */;
    %434 = @func_5261(%432, %433) /* ty=(Tensor[(6, 6, 9), int32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(1188), bool], Tensor[(1188), bool]) */;
    %435 = %429.0;
    %436 = %434.4;
    (%435, %436, %var_6031, %var_6032)
  };
  %437(%var_6041, %var_6042) /* ty=(float32, Tensor[(1188), bool], Tensor[(36), int32], Tensor[(324), int32]) */
}

def @func_9332(%var_9297: Tensor[(7, 6), float32]) -> (Tensor[(495), uint64], Tensor[(3, 14, 1188), bool], Tensor[(7, 6), float32], Tensor[(504), float64], float32, Tensor[(1950), float32], Tensor[(9, 15, ?), bool], Tensor[(135), float64]) {
  %438 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
  %439 = cast(%var_9297, dtype="float32") /* ty=Tensor[(7, 6), float32] */;
  %440 = cast(meta[relay.Constant][36] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %441 = cast(-9.00744f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %442 = reshape(%439, newshape=[3, 14, 1]) /* ty=Tensor[(3, 14, 1), float32] */;
  %443 = reshape(%440, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %444 = reshape(%441, newshape=[]) /* ty=float32 */;
  %445 = @func_6252(%442, %443, %444) /* ty=(Tensor[(1188), bool], Tensor[(3, 14, 1188), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64], Tensor[(5, 9, 11), uint64], Tensor[(3, 3, 13), bool], Tensor[(1, 117), bool], float32, Tensor[(3, 14, 1), float64], float32, Tensor[(3, 14, 13), bool], Tensor[(135), float64], Tensor[(1, 135), float64]) */;
  %446 = cast(meta[relay.Constant][37] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %447 = reshape(%446, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float64] */;
  %448 = %438.2;
  %449 = %445.1;
  %450 = @func_6965() /* ty=Tensor[(1950), float32] */;
  %451 = @func_144(%447) /* ty=Tensor[(9, 15, ?), bool] */;
  (%448, %449, %var_9297, meta[relay.Constant][36] /* ty=Tensor[(504), float64] */, -9.00744f /* ty=float32 */, %450, %451, meta[relay.Constant][37] /* ty=Tensor[(135), float64] */)
}

def @func_14263(%var_14261: Tensor[(1, 1950), float32], %var_14262: Tensor[(9, 6, 13), float32]) -> (Tensor[(1950), bool], Tensor[(1, 1950), float32], Tensor[(9, 6, 13), bool], Tensor[(9, 6, 13), float32], Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64]) {
  %470 = fn (%var_14205: Tensor[(1, 1950), float32], %var_14208: Tensor[(9, 6, 13), float32]) -> (Tensor[(1950), bool], Tensor[(1, 1950), float32], Tensor[(9, 6, 13), bool], Tensor[(9, 6, 13), float32], Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64]) {
    %452 = cast(%var_14205, dtype="float32") /* ty=Tensor[(1, 1950), float32] */;
    %453 = reshape(%452, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
    %454 = @func_9446(%453) /* ty=(Tensor[(495), uint64], Tensor[(420), float64], Tensor[(364), float64], Tensor[(16, 112), int32], Tensor[(1950), bool], Tensor[(495), uint64]) */;
    %455 = @func_11035() /* ty=float32 */;
    %456 = cast(%455, dtype="bool") /* ty=bool */;
    %457 = cast(%var_14208, dtype="bool") /* ty=Tensor[(9, 6, 13), bool] */;
    %458 = cast(%455, dtype="float32") /* ty=float32 */;
    %459 = cast(%var_14208, dtype="float32") /* ty=Tensor[(9, 6, 13), float32] */;
    %460 = cast(meta[relay.Constant][38] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
    %461 = cast(%var_14205, dtype="float32") /* ty=Tensor[(1, 1950), float32] */;
    %462 = reshape(%460, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
    %463 = reshape(%461, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
    %464 = @func_14025(%462, %463) /* ty=(float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32], Tensor[(14, 8, 15), float64]) */;
    %465 = %454.4;
    %466 = logical_or(%456, %457) /* ty=Tensor[(9, 6, 13), bool] */;
    %467 = floor_divide(%458, %459) /* ty=Tensor[(9, 6, 13), float32] */;
    %468 = @func_12536() /* ty=Tensor[(1950), float32] */;
    %469 = %464.2;
    (%465, %var_14205, %466, %467, %468, %469, meta[relay.Constant][38] /* ty=Tensor[(2002), int64] */)
  };
  %470(%var_14261, %var_14262) /* ty=(Tensor[(1950), bool], Tensor[(1, 1950), float32], Tensor[(9, 6, 13), bool], Tensor[(9, 6, 13), float32], Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64]) */
}

def @func_9166() -> (Tensor[(5, 9, 11), uint64],) {
  @func_9164() /* ty=(Tensor[(5, 9, 11), uint64],) */
}

def @func_11636(%var_11635: Tensor[(98, 1), float32]) -> (float32, float32, Tensor[(5, 9, 11), uint64], Tensor[(98, 1), float32], Tensor[(98, 1), float64]) {
  %485 = fn (%var_11612: Tensor[(98, 1), float32]) -> (float32, float32, Tensor[(5, 9, 11), uint64], Tensor[(98, 1), float32], Tensor[(98, 1), float64]) {
    %471 = @func_8055() /* ty=(float32,) */;
    %472 = cast(%var_11612, dtype="float32") /* ty=Tensor[(98, 1), float32] */;
    %473 = reshape(%472, newshape=[98]) /* ty=Tensor[(98), float32] */;
    %474 = @func_10366(%473) /* ty=(float32, Tensor[(7, 2, 7), uint16], Tensor[(98), float32]) */;
    %475 = @func_9148() /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %476 = cast(%var_11612, dtype="float32") /* ty=Tensor[(98, 1), float32] */;
    %477 = log(%476) /* ty=Tensor[(98, 1), float32] */;
    %478 = cast(%477, dtype="float32") /* ty=Tensor[(98, 1), float32] */;
    %479 = cast(%477, dtype="float64") /* ty=Tensor[(98, 1), float64] */;
    %480 = %471.0;
    %481 = %474.0;
    %482 = %475.0;
    %483 = tan(%478) /* ty=Tensor[(98, 1), float32] */;
    %484 = log10(%479) /* ty=Tensor[(98, 1), float64] */;
    (%480, %481, %482, %483, %484)
  };
  %485(%var_11635) /* ty=(float32, float32, Tensor[(5, 9, 11), uint64], Tensor[(98, 1), float32], Tensor[(98, 1), float64]) */
}

def @func_13470() -> (Tensor[(1950), float32], float32, float32) {
  @func_13468() /* ty=(Tensor[(1950), float32], float32, float32) */
}

def @func_10798(%var_10761: Tensor[(1792), int32], %var_10762: Tensor[(2002), int64], %var_10763: Tensor[(182), float32], %var_10764: Tensor[(117), bool]) -> (float32, Tensor[(5, 9, 11), uint64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool], Tensor[(3, 13, 1), bool]) {
  %486 = @func_5551() /* ty=(float32,) */;
  %487 = cast(meta[relay.Constant][39] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %488 = cast(meta[relay.Constant][40] /* ty=Tensor[(36), int32] */, dtype="int32") /* ty=Tensor[(36), int32] */;
  %489 = cast(%var_10761, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %490 = cast(%var_10762, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %491 = cast(%var_10763, dtype="float32") /* ty=Tensor[(182), float32] */;
  %492 = cast(%var_10764, dtype="bool") /* ty=Tensor[(117), bool] */;
  %493 = reshape(%487, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %494 = reshape(%488, newshape=[36]) /* ty=Tensor[(36), int32] */;
  %495 = reshape(%489, newshape=[16, 112]) /* ty=Tensor[(16, 112), int32] */;
  %496 = reshape(%490, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %497 = reshape(%491, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %498 = reshape(%492, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %499 = @func_7585(%493, %494, %495, %496, %497, %498) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(5, 9, 11), uint64], Tensor[(1188), bool], Tensor[(420), float64], Tensor[(36), int32], Tensor[(182, 2), float64], Tensor[(16, 112), int32], Tensor[(1950), float32], float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(3, 3, 13), bool], Tensor[(117), bool]) */;
  %500 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %501 = %486.0;
  %502 = %499.0;
  %503 = %500.1;
  (%501, %502, meta[relay.Constant][39] /* ty=Tensor[(420), float64] */, meta[relay.Constant][40] /* ty=Tensor[(36), int32] */, %var_10761, %var_10762, %var_10763, %var_10764, %503)
}

def @func_15528() -> (Tensor[(8, 504, 12), float64], float32) {
  @func_15526() /* ty=(Tensor[(8, 504, 12), float64], float32) */
}

def @func_15021() -> (Tensor[(5, 9, 11), float32],) {
  @func_15019() /* ty=(Tensor[(5, 9, 11), float32],) */
}

def @func_14123() -> (float32, float32, float32) {
  %504 = @func_10227() /* ty=(Tensor[(5, 9, 11), float32], float32, Tensor[(14, 8, 15), float64]) */;
  %505 = @func_11201() /* ty=float32 */;
  %506 = %504.1;
  %507 = @func_10056() /* ty=float32 */;
  (%505, %506, %507)
}

def @func_11362(%var_11360: Tensor[(8, 504, 12), bool], %var_11361: Tensor[(8, 504, 12), bool]) -> (Tensor[(324), int32], Tensor[(8, 504, 12), int64], Tensor[(8, 504, 12), int32], Tensor[(1950), float32]) {
  @func_11358(%var_11360, %var_11361) /* ty=(Tensor[(324), int32], Tensor[(8, 504, 12), int64], Tensor[(8, 504, 12), int32], Tensor[(1950), float32]) */
}

def @func_8057() -> (float32,) {
  @func_8055() /* ty=(float32,) */
}

def @func_11202() -> float32 {
  %509 = fn () -> float32 {
    %508 = @func_5789() /* ty=(float32, Tensor[(3, 13, 1), bool]) */;
    %508.0
  };
  %509() /* ty=float32 */
}

def @func_6376() -> (Tensor[(5, 9, 11), uint64],) {
  @func_6374() /* ty=(Tensor[(5, 9, 11), uint64],) */
}

def @func_6777() -> (float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) {
  @func_6775() /* ty=(float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) */
}

def @func_12250() -> (float32, float32, Tensor[(504), float64], Tensor[(42), float32]) {
  @func_12248() /* ty=(float32, float32, Tensor[(504), float64], Tensor[(42), float32]) */
}

def @func_6002() -> Tensor[(495), uint64] {
  %510 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
  %510.2
}

def @func_351(%var_349: Tensor[(8, 14, 16), int32], %var_350: Tensor[(8, 14, 16), int32]) -> Tensor[(8, 14, 16), int32] {
  @func_347(%var_349, %var_350) /* ty=Tensor[(8, 14, 16), int32] */
}

def @func_8013() -> float32 {
  %512 = fn () -> float32 {
    %511 = @func_6069() /* ty=(float32, float32) */;
    %511.0
  };
  %512() /* ty=float32 */
}

def @func_6435() -> float32 {
  %513 = fn () -> float32 {
    @func_6080() /* ty=float32 */
  };
  %513() /* ty=float32 */
}

def @func_9148() -> (Tensor[(5, 9, 11), uint64],) {
  %514 = @func_9073() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %515 = %514.0;
  (%515,)
}

def @func_6885(%var_6883: Tensor[(126), int16]) -> (Tensor[(350), int16], float32, Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(126), int16], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(10, 195), float32]) {
  @func_6882(%var_6883) /* ty=(Tensor[(350), int16], float32, Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(126), int16], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(10, 195), float32]) */
}

def @func_6407() -> (float32,) {
  @func_6405() /* ty=(float32,) */
}

def @func_12555() -> (float32,) {
  @func_12553() /* ty=(float32,) */
}

def @func_14144() -> (Tensor[(495), uint64],) {
  %516 = @func_6002() /* ty=Tensor[(495), uint64] */;
  (%516,)
}

def @func_11282() -> float32 {
  @func_11280() /* ty=float32 */
}

def @func_9240(%var_9223: Tensor[(42), float32]) -> (Tensor[(5, 9, 11), uint64], Tensor[(42), float32], Tensor[(504), float64], float32, Tensor[(5, 9, 11), float32]) {
  %517 = @func_9073() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %518 = cast(%var_9223, dtype="float32") /* ty=Tensor[(42), float32] */;
  %519 = cast(meta[relay.Constant][41] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %520 = cast(-1.65587f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %521 = reshape(%518, newshape=[3, 14, 1]) /* ty=Tensor[(3, 14, 1), float32] */;
  %522 = reshape(%519, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %523 = reshape(%520, newshape=[]) /* ty=float32 */;
  %524 = @func_6252(%521, %522, %523) /* ty=(Tensor[(1188), bool], Tensor[(3, 14, 1188), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64], Tensor[(5, 9, 11), uint64], Tensor[(3, 3, 13), bool], Tensor[(1, 117), bool], float32, Tensor[(3, 14, 1), float64], float32, Tensor[(3, 14, 13), bool], Tensor[(135), float64], Tensor[(1, 135), float64]) */;
  %525 = %524.4;
  %526 = cast(%525, dtype="float32") /* ty=Tensor[(5, 9, 11), float32] */;
  %527 = %517.0;
  %528 = log2(%526) /* ty=Tensor[(5, 9, 11), float32] */;
  (%527, %var_9223, meta[relay.Constant][41] /* ty=Tensor[(504), float64] */, -1.65587f /* ty=float32 */, %528)
}

def @func_5553() -> (float32,) {
  @func_5551() /* ty=(float32,) */
}

def @func_12059(%var_12057: Tensor[(1, 12, 10), float32]) -> (Tensor[(?, 12, 10), float32],) {
  @func_12056(%var_12057) /* ty=(Tensor[(?, 12, 10), float32],) */
}

def @func_9075() -> (Tensor[(5, 9, 11), uint64],) {
  @func_9073() /* ty=(Tensor[(5, 9, 11), uint64],) */
}

def @func_12248() -> (float32, float32, Tensor[(504), float64], Tensor[(42), float32]) {
  %529 = @func_5551() /* ty=(float32,) */;
  %530 = @func_6405() /* ty=(float32,) */;
  %531 = cast(meta[relay.Constant][42] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %532 = reshape(%531, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %533 = @func_9240(%532) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(42), float32], Tensor[(504), float64], float32, Tensor[(5, 9, 11), float32]) */;
  %534 = %529.0;
  %535 = %530.0;
  %536 = %533.2;
  (%534, %535, %536, meta[relay.Constant][42] /* ty=Tensor[(42), float32] */)
}

def @func_10623() -> float32 {
  %537 = @func_8733() /* ty=(float32,) */;
  %537.0
}

def @main(%var_15626: Tensor[(16, 80), uint64]) -> (Tensor[(8, 504, 12), bool], float32, Tensor[(16, 80), float32]) {
  %538 = @func_12480() /* ty=(Tensor[(8, 504, 12), bool],) */;
  %539 = cast(%var_15626, dtype="uint64") /* ty=Tensor[(16, 80), uint64] */;
  %540 = reshape(%539, newshape=[1280]) /* ty=Tensor[(1280), uint64] */;
  %541 = @func_14776(%540) /* ty=(Tensor[(1950), float32], float32, Tensor[(6, 7, 12), float64], Tensor[(1280), uint64], Tensor[(504), float64]) */;
  %542 = cast(%var_15626, dtype="float32") /* ty=Tensor[(16, 80), float32] */;
  %543 = %538.0;
  %544 = %541.1;
  %545 = exp(%542) /* ty=Tensor[(16, 80), float32] */;
  (%543, %544, %545)
}

def @func_10056() -> float32 {
  @func_8012() /* ty=float32 */
}

def @func_12313(%var_12306: Tensor[(350), int16]) -> (Tensor[(14, 8, 15), float64], Tensor[(364), float64], Tensor[(2002), int64], Tensor[(350), int16], Tensor[(1950), float32]) {
  %546 = @func_11845() /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(14, 8, 15), float64]) */;
  %547 = cast(meta[relay.Constant][43] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %548 = cast(%var_12306, dtype="int16") /* ty=Tensor[(350), int16] */;
  %549 = cast(meta[relay.Constant][44] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %550 = reshape(%547, newshape=[14, 13, 11]) /* ty=Tensor[(14, 13, 11), int64] */;
  %551 = reshape(%548, newshape=[350]) /* ty=Tensor[(350), int16] */;
  %552 = reshape(%549, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %553 = @func_3440(%550, %551, %552) /* ty=(Tensor[(14, 13, 11), int64], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(2, 896), int32], Tensor[(1950), float32]) */;
  %554 = %546.1;
  %555 = %553.2;
  (%554, %555, meta[relay.Constant][43] /* ty=Tensor[(2002), int64] */, %var_12306, meta[relay.Constant][44] /* ty=Tensor[(1950), float32] */)
}

def @func_11809(%var_11750: Tensor[(1792), int32], %var_11752: Tensor[(117), bool], %var_11759: Tensor[(1280), uint64]) -> (float32, float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(182), float32], Tensor[(1792), int32], Tensor[(182), float32], Tensor[(117), bool], Tensor[(1950), float32], Tensor[(16, 10, 8), bool], Tensor[(1280), uint64], Tensor[(504), float64], Tensor[(1950), float32]) {
  %556 = @func_8733() /* ty=(float32,) */;
  %557 = cast(meta[relay.Constant][45] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %558 = reshape(%557, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %559 = @func_9193(%558) /* ty=(float32, float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */;
  %560 = cast(%var_11750, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %561 = %559.3;
  %562 = cast(%561, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %563 = cast(meta[relay.Constant][46] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %564 = cast(%var_11752, dtype="bool") /* ty=Tensor[(117), bool] */;
  %565 = reshape(%560, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %566 = reshape(%562, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %567 = reshape(%563, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %568 = reshape(%564, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %569 = @func_10798(%565, %566, %567, %568) /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool], Tensor[(3, 13, 1), bool]) */;
  %570 = @func_11456() /* ty=(Tensor[(8, 504, 12), bool], Tensor[(495), uint64], Tensor[(1950), float32]) */;
  %571 = cast(%var_11759, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %572 = cast(meta[relay.Constant][47] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %573 = reshape(%571, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), uint64] */;
  %574 = reshape(%572, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %575 = @func_5899(%573, %574) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64]) */;
  %576 = cast(meta[relay.Constant][45] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %577 = cast(%561, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %578 = %570.2;
  %579 = cast(%578, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %580 = reshape(%576, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %581 = reshape(%577, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %582 = reshape(%579, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %583 = @func_6736(%580, %581, %582) /* ty=(float32, Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */;
  %584 = %556.0;
  %585 = @func_5606() /* ty=float32 */;
  %586 = %569.6;
  %587 = %575.0;
  %588 = %583.4;
  (%584, %585, %561, meta[relay.Constant][45] /* ty=Tensor[(126), int16] */, %586, %var_11750, meta[relay.Constant][46] /* ty=Tensor[(182), float32] */, %var_11752, %578, %587, %var_11759, meta[relay.Constant][47] /* ty=Tensor[(504), float64] */, %588)
}

def @func_3440(%var_3392: Tensor[(14, 13, 11), int64], %var_3418: Tensor[(350), int16], %var_3420: Tensor[(1950), float32]) -> (Tensor[(14, 13, 11), int64], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(2, 896), int32], Tensor[(1950), float32]) {
  %589 = cast(%var_3392, dtype="int64") /* ty=Tensor[(14, 13, 11), int64] */;
  %590 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(14, 13, 11), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(meta[relay.Constant][48] /* ty=Tensor[(14, 13, 11), int64] */, dtype="int64") /* ty=Tensor[(14, 13, 11), int64] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %593 = cast(meta[relay.Constant][49] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %594 = cast(meta[relay.Constant][49] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %595 = cast(%var_3418, dtype="int16") /* ty=Tensor[(350), int16] */;
  %596 = cast(meta[relay.Constant][50] /* ty=Tensor[(2, 896), int32] */, dtype="int32") /* ty=Tensor[(2, 896), int32] */;
  %597 = cast(%var_3420, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %598 = reshape(%593, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
  %599 = reshape(%594, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
  %600 = reshape(%595, newshape=[350]) /* ty=Tensor[(350), int16] */;
  %601 = reshape(%596, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %602 = reshape(%597, newshape=[1, 1950]) /* ty=Tensor[(1, 1950), float32] */;
  %603 = @func_1925(%598, %599, %600, %601, %602) /* ty=(Tensor[(14, 2, 13), float64], Tensor[(1950), float32], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(8, 14, 16), int32], Tensor[(?, 1950), bool]) */;
  %604 = left_shift(%591, %592) /* ty=Tensor[(14, 13, 11), int64] */;
  %605 = %603.2;
  (%604, %605, meta[relay.Constant][49] /* ty=Tensor[(364), float64] */, %var_3418, meta[relay.Constant][50] /* ty=Tensor[(2, 896), int32] */, %var_3420)
}

def @func_347(%var_336: Tensor[(8, 14, 16), int32], %var_337: Tensor[(8, 14, 16), int32]) -> Tensor[(8, 14, 16), int32] {
  %606 = cast(%var_337, dtype="int32") /* ty=Tensor[(8, 14, 16), int32] */;
  %607 = shape_of(%var_336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%var_336, dtype="int32") /* ty=Tensor[(8, 14, 16), int32] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%608, %609) /* ty=Tensor[(8, 14, 16), int32] */
}

def @func_9547(%var_9545: Tensor[(117), bool], %var_9546: Tensor[(1792), int32]) -> (float32, float32, Tensor[(117), bool], float32, Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) {
  %623 = fn (%var_9508: Tensor[(117), bool], %var_9534: Tensor[(1792), int32]) -> (float32, float32, Tensor[(117), bool], float32, Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) {
    %610 = cast(%var_9508, dtype="bool") /* ty=Tensor[(117), bool] */;
    %611 = @func_8012() /* ty=float32 */;
    %612 = cast(%611, dtype="float32") /* ty=float32 */;
    %613 = reshape(%610, newshape=[39, 3]) /* ty=Tensor[(39, 3), bool] */;
    %614 = reshape(%612, newshape=[]) /* ty=float32 */;
    %615 = @func_5811(%613, %614) /* ty=(Tensor[(3, 3, 13), bool], Tensor[(39, 3), bool], float32, Tensor[(3, 13, 1), bool], Tensor[(3, 13, 1), int32]) */;
    %616 = cast(%var_9534, dtype="int32") /* ty=Tensor[(1792), int32] */;
    %617 = cast(%var_9534, dtype="int32") /* ty=Tensor[(1792), int32] */;
    %618 = reshape(%616, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int32] */;
    %619 = reshape(%617, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int32] */;
    %620 = %615.2;
    %621 = @func_8876() /* ty=float32 */;
    %622 = @func_347(%618, %619) /* ty=Tensor[(8, 14, 16), int32] */;
    (%611, %620, %var_9508, %621, %622, %var_9534)
  };
  %623(%var_9545, %var_9546) /* ty=(float32, float32, Tensor[(117), bool], float32, Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) */
}

def @func_6966() -> Tensor[(1950), float32] {
  %625 = fn () -> Tensor[(1950), float32] {
    %624 = @func_6775() /* ty=(float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) */;
    %624.3
  };
  %625() /* ty=Tensor[(1950), float32] */
}

def @func_10229() -> (Tensor[(5, 9, 11), float32], float32, Tensor[(14, 8, 15), float64]) {
  @func_10227() /* ty=(Tensor[(5, 9, 11), float32], float32, Tensor[(14, 8, 15), float64]) */
}

def @func_12538() -> Tensor[(1950), float32] {
  @func_12536() /* ty=Tensor[(1950), float32] */
}

def @func_5551() -> (float32,) {
  %626 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %627 = %626.2;
  (%627,)
}

def @func_10124() -> (Tensor[(5, 9, 11), float32], Tensor[(8, 504, 12), bool]) {
  %633 = fn () -> (Tensor[(5, 9, 11), float32], Tensor[(8, 504, 12), bool]) {
    %628 = @func_9164() /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %629 = %628.0;
    %630 = cast(%629, dtype="float32") /* ty=Tensor[(5, 9, 11), float32] */;
    %631 = cos(%630) /* ty=Tensor[(5, 9, 11), float32] */;
    %632 = @func_8938() /* ty=Tensor[(8, 504, 12), bool] */;
    (%631, %632)
  };
  %633() /* ty=(Tensor[(5, 9, 11), float32], Tensor[(8, 504, 12), bool]) */
}

def @func_5815(%var_5813: Tensor[(39, 3), bool], %var_5814: float32) -> (Tensor[(3, 3, 13), bool], Tensor[(39, 3), bool], float32, Tensor[(3, 13, 1), bool], Tensor[(3, 13, 1), int32]) {
  @func_5811(%var_5813, %var_5814) /* ty=(Tensor[(3, 3, 13), bool], Tensor[(39, 3), bool], float32, Tensor[(3, 13, 1), bool], Tensor[(3, 13, 1), int32]) */
}

def @func_5791() -> (float32, Tensor[(3, 13, 1), bool]) {
  @func_5789() /* ty=(float32, Tensor[(3, 13, 1), bool]) */
}

def @func_5265(%var_5263: Tensor[(6, 6, 1), int32], %var_5264: Tensor[(6, 6, 9), int32]) -> (Tensor[(6, 6, 9), int32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(1188), bool], Tensor[(1188), bool]) {
  @func_5261(%var_5263, %var_5264) /* ty=(Tensor[(6, 6, 9), int32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(1188), bool], Tensor[(1188), bool]) */
}

def @func_14686() -> (Tensor[(1950), float32],) {
  %634 = @func_13376() /* ty=Tensor[(1950), float32] */;
  (%634,)
}

def @func_12883() -> Tensor[(1950), float32] {
  @func_12881() /* ty=Tensor[(1950), float32] */
}

def @func_6004() -> Tensor[(495), uint64] {
  @func_6002() /* ty=Tensor[(495), uint64] */
}

def @func_10459() -> (Tensor[(14, 8, 15), float64], Tensor[(15, 10, 7), float32]) {
  @func_10457() /* ty=(Tensor[(14, 8, 15), float64], Tensor[(15, 10, 7), float32]) */
}

def @func_12082() -> (Tensor[(5, 9, 11), uint64],) {
  @func_12080() /* ty=(Tensor[(5, 9, 11), uint64],) */
}

def @func_11902() -> (Tensor[(448, 4), int32],) {
  %637 = fn () -> (Tensor[(448, 4), int32],) {
    %635 = @func_6775() /* ty=(float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) */;
    %636 = %635.4;
    (%636,)
  };
  %637() /* ty=(Tensor[(448, 4), int32],) */
}

def @func_14483(%var_14475: Tensor[(1792), int32], %var_14477: Tensor[(1280), uint64]) -> (Tensor[(5, 9, 11), uint64], Tensor[(16, 10, 8), bool], Tensor[(1792), int32], Tensor[(117), bool], Tensor[(1280), uint64]) {
  %638 = @func_9148() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %639 = cast(%var_14475, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %640 = cast(meta[relay.Constant][51] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %641 = cast(%var_14477, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %642 = reshape(%639, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %643 = reshape(%640, newshape=[117]) /* ty=Tensor[(117), bool] */;
  %644 = reshape(%641, newshape=[1280]) /* ty=Tensor[(1280), uint64] */;
  %645 = @func_11809(%642, %643, %644) /* ty=(float32, float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(182), float32], Tensor[(1792), int32], Tensor[(182), float32], Tensor[(117), bool], Tensor[(1950), float32], Tensor[(16, 10, 8), bool], Tensor[(1280), uint64], Tensor[(504), float64], Tensor[(1950), float32]) */;
  %646 = %638.0;
  %647 = %645.9;
  (%646, %647, %var_14475, meta[relay.Constant][51] /* ty=Tensor[(117), bool] */, %var_14477)
}

def @func_11976() -> (Tensor[(5, 9, 11), uint64], Tensor[(5, 9, 11), uint64], Tensor[(792), float64]) {
  %654 = fn () -> (Tensor[(5, 9, 11), uint64], Tensor[(5, 9, 11), uint64], Tensor[(792), float64]) {
    %648 = @func_10685() /* ty=(float32, Tensor[(5, 9, 11), uint64]) */;
    %649 = cast(meta[relay.Constant][52] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
    %650 = reshape(%649, newshape=[6, 11, 12]) /* ty=Tensor[(6, 11, 12), float64] */;
    %651 = @func_10004(%650) /* ty=(Tensor[(6, 11, 12), float64], Tensor[(5, 9, 11), uint64]) */;
    %652 = %648.1;
    %653 = %651.1;
    (%652, %653, meta[relay.Constant][52] /* ty=Tensor[(792), float64] */)
  };
  %654() /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(5, 9, 11), uint64], Tensor[(792), float64]) */
}

def @func_9920() -> Tensor[(495), uint64] {
  %655 = fn () -> Tensor[(495), uint64] {
    @func_8621() /* ty=Tensor[(495), uint64] */
  };
  %655() /* ty=Tensor[(495), uint64] */
}

def @func_1199(%var_1196: Tensor[(10, 7, 5), int16], %var_1197: Tensor[(1950), float32], %var_1198: Tensor[(1792), int32]) -> (Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) {
  @func_1194(%var_1196, %var_1197, %var_1198) /* ty=(Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) */
}

def @func_8865(%var_8863: Tensor[(182), float32]) -> (Tensor[(495), uint64], Tensor[(14, 13, 1), float32], Tensor[(182), float32], float64) {
  @func_8862(%var_8863) /* ty=(Tensor[(495), uint64], Tensor[(14, 13, 1), float32], Tensor[(182), float32], float64) */
}

def @func_13004() -> (Tensor[(5, 9, 11), uint64], float32) {
  %660 = fn () -> (Tensor[(5, 9, 11), uint64], float32) {
    %656 = @func_9073() /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %657 = @func_12553() /* ty=(float32,) */;
    %658 = %656.0;
    %659 = %657.0;
    (%658, %659)
  };
  %660() /* ty=(Tensor[(5, 9, 11), uint64], float32) */
}

def @func_2918(%var_2888: Tensor[(11, 12, 9), bool], %var_2889: Tensor[(11, 12, 9), bool], %var_2894: Tensor[(135), float64], %var_2913: Tensor[(11, 12, 9), float32]) -> (Tensor[(9, 15, ?), bool], Tensor[(135), float64], Tensor[(11, 12, 9), float32]) {
  %661 = cast(%var_2894, dtype="float64") /* ty=Tensor[(135), float64] */;
  %662 = reshape(%661, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float64] */;
  %663 = cast(%var_2889, dtype="bool") /* ty=Tensor[(11, 12, 9), bool] */;
  %664 = shape_of(%var_2888, dtype="int32") /* ty=Tensor[(3), int32] */;
  %665 = cast(%var_2888, dtype="bool") /* ty=Tensor[(11, 12, 9), bool] */;
  %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %667 = logical_and(%665, %666) /* ty=Tensor[(11, 12, 9), bool] */;
  %668 = cast(%667, dtype="float32") /* ty=Tensor[(11, 12, 9), float32] */;
  %669 = rsqrt(%668) /* ty=Tensor[(11, 12, 9), float32] */;
  %670 = cast(%var_2913, dtype="float32") /* ty=Tensor[(11, 12, 9), float32] */;
  %671 = shape_of(%669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%669, dtype="float32") /* ty=Tensor[(11, 12, 9), float32] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %674 = @func_144(%662) /* ty=Tensor[(9, 15, ?), bool] */;
  %675 = floor_divide(%672, %673) /* ty=Tensor[(11, 12, 9), float32] */;
  (%674, %var_2894, %675)
}

def @func_10593(%var_10592: Tensor[(8, 504, 12), bool]) -> Tensor[(8, 504, 12), bool] {
  %682 = fn (%var_10579: Tensor[(8, 504, 12), bool]) -> Tensor[(8, 504, 12), bool] {
    %676 = @func_10020() /* ty=(Tensor[(8, 504, 12), bool],) */;
    %677 = %676.0;
    %678 = cast(%var_10579, dtype="bool") /* ty=Tensor[(8, 504, 12), bool] */;
    %679 = shape_of(%677, dtype="int32") /* ty=Tensor[(3), int32] */;
    %680 = cast(%677, dtype="bool") /* ty=Tensor[(8, 504, 12), bool] */;
    %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%680, %681) /* ty=Tensor[(8, 504, 12), bool] */
  };
  %682(%var_10592) /* ty=Tensor[(8, 504, 12), bool] */
}

def @func_14487(%var_14485: Tensor[(1792), int32], %var_14486: Tensor[(1280), uint64]) -> (Tensor[(5, 9, 11), uint64], Tensor[(16, 10, 8), bool], Tensor[(1792), int32], Tensor[(117), bool], Tensor[(1280), uint64]) {
  @func_14483(%var_14485, %var_14486) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(16, 10, 8), bool], Tensor[(1792), int32], Tensor[(117), bool], Tensor[(1280), uint64]) */
}

def @func_3269(%var_3268: Tensor[(1188), bool]) -> (Tensor[(8, 15, 5), float32], Tensor[(135), float64], Tensor[(1188), bool], Tensor[(1, 135), float64]) {
  %696 = fn (%var_3255: Tensor[(1188), bool]) -> (Tensor[(8, 15, 5), float32], Tensor[(135), float64], Tensor[(1188), bool], Tensor[(1, 135), float64]) {
    %683 = cast(4.58021f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %684 = cast(meta[relay.Constant][53] /* ty=Tensor[(8, 15, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 5), float32] */;
    %685 = cast(%var_3255, dtype="bool") /* ty=Tensor[(1188), bool] */;
    %686 = cast(%var_3255, dtype="bool") /* ty=Tensor[(1188), bool] */;
    %687 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 135), float64] */, dtype="float64") /* ty=Tensor[(1, 135), float64] */;
    %688 = cast(%var_3255, dtype="float32") /* ty=Tensor[(1188), float32] */;
    %689 = reshape(%685, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), bool] */;
    %690 = reshape(%686, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), bool] */;
    %691 = reshape(%687, newshape=[135]) /* ty=Tensor[(135), float64] */;
    %692 = reshape(%688, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float32] */;
    %693 = @func_2918(%689, %690, %691, %692) /* ty=(Tensor[(9, 15, ?), bool], Tensor[(135), float64], Tensor[(11, 12, 9), float32]) */;
    %694 = subtract(%683, %684) /* ty=Tensor[(8, 15, 5), float32] */;
    %695 = %693.1;
    (%694, %695, %var_3255, meta[relay.Constant][54] /* ty=Tensor[(1, 135), float64] */)
  };
  %696(%var_3268) /* ty=(Tensor[(8, 15, 5), float32], Tensor[(135), float64], Tensor[(1188), bool], Tensor[(1, 135), float64]) */
}

def @func_7037(%var_7035: Tensor[(1, 504), float64]) -> (float32, Tensor[(16, 10, 8), bool], Tensor[(1280), uint64], Tensor[(1, 504), float64]) {
  @func_7034(%var_7035) /* ty=(float32, Tensor[(16, 10, 8), bool], Tensor[(1280), uint64], Tensor[(1, 504), float64]) */
}

def @func_11495() -> (Tensor[(5, 9, 11), float32], Tensor[(5, 9, 11), uint64]) {
  %701 = fn () -> (Tensor[(5, 9, 11), float32], Tensor[(5, 9, 11), uint64]) {
    %697 = @func_10123() /* ty=(Tensor[(5, 9, 11), float32], Tensor[(8, 504, 12), bool]) */;
    %698 = @func_10685() /* ty=(float32, Tensor[(5, 9, 11), uint64]) */;
    %699 = %697.0;
    %700 = %698.1;
    (%699, %700)
  };
  %701() /* ty=(Tensor[(5, 9, 11), float32], Tensor[(5, 9, 11), uint64]) */
}

def @func_13018() -> Tensor[(5, 9, 11), uint64] {
  %703 = fn () -> Tensor[(5, 9, 11), uint64] {
    %702 = @func_9073() /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %702.0
  };
  %703() /* ty=Tensor[(5, 9, 11), uint64] */
}

def @func_14881() -> (float32, Tensor[(324), int32], float32) {
  @func_14879() /* ty=(float32, Tensor[(324), int32], float32) */
}

def @func_6354(%var_6283: Tensor[(14, 13, 1), float32], %var_6297: float64) -> (Tensor[(1, 16, 6), float64], float64, Tensor[(48, 2), float64], Tensor[(3, 13, 1), bool], Tensor[(14, 13, 1), float32]) {
  %704 = cast(%var_6297, dtype="float64") /* ty=float64 */;
  %705 = cast(meta[relay.Constant][55] /* ty=Tensor[(48, 2), float64] */, dtype="float64") /* ty=Tensor[(48, 2), float64] */;
  %706 = reshape(%704, newshape=[]) /* ty=float64 */;
  %707 = reshape(%705, newshape=[1, 16, 6]) /* ty=Tensor[(1, 16, 6), float64] */;
  %708 = @func_2286(%706, %707) /* ty=(Tensor[(1, 16, 6), float64],) */;
  %709 = cast(%var_6297, dtype="float32") /* ty=float32 */;
  %710 = reshape(%709, newshape=[]) /* ty=float32 */;
  %711 = cast(%var_6283, dtype="float32") /* ty=Tensor[(14, 13, 1), float32] */;
  %712 = acos(%711) /* ty=Tensor[(14, 13, 1), float32] */;
  %713 = cast(%712, dtype="float32") /* ty=Tensor[(14, 13, 1), float32] */;
  %714 = %708.0;
  %715 = @func_3740(%710) /* ty=Tensor[(3, 13, 1), bool] */;
  %716 = log2(%713) /* ty=Tensor[(14, 13, 1), float32] */;
  (%714, %var_6297, meta[relay.Constant][55] /* ty=Tensor[(48, 2), float64] */, %715, %716)
}

def @func_14125() -> (float32, float32, float32) {
  @func_14123() /* ty=(float32, float32, float32) */
}

def @func_14621() -> (float32,) {
  %719 = fn () -> (float32,) {
    %717 = @func_13299() /* ty=(float32,) */;
    %718 = %717.0;
    (%718,)
  };
  %719() /* ty=(float32,) */
}

def @func_15292() -> (Tensor[(14, 8, 15), float64], Tensor[(1950), float32], Tensor[(2002), int64], Tensor[(1950), float32]) {
  %720 = @func_8933() /* ty=(Tensor[(14, 8, 15), bool], Tensor[(14, 8, 15), float64]) */;
  %721 = cast(meta[relay.Constant][56] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %722 = cast(meta[relay.Constant][57] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %723 = reshape(%721, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %724 = reshape(%722, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %725 = @func_14025(%723, %724) /* ty=(float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32], Tensor[(14, 8, 15), float64]) */;
  %726 = %720.1;
  %727 = %725.4;
  (%726, %727, meta[relay.Constant][56] /* ty=Tensor[(2002), int64] */, meta[relay.Constant][57] /* ty=Tensor[(1950), float32] */)
}

def @func_9449(%var_9447: Tensor[(1950), float32]) -> (Tensor[(495), uint64], Tensor[(420), float64], Tensor[(364), float64], Tensor[(16, 112), int32], Tensor[(1950), bool], Tensor[(495), uint64]) {
  @func_9446(%var_9447) /* ty=(Tensor[(495), uint64], Tensor[(420), float64], Tensor[(364), float64], Tensor[(16, 112), int32], Tensor[(1950), bool], Tensor[(495), uint64]) */
}

def @func_8055() -> (float32,) {
  %728 = @func_8012() /* ty=float32 */;
  (%728,)
}

def @func_6659() -> Tensor[(495), uint64] {
  %729 = fn () -> Tensor[(495), uint64] {
    @func_6002() /* ty=Tensor[(495), uint64] */
  };
  %729() /* ty=Tensor[(495), uint64] */
}

def @func_15418() -> (Tensor[(1950), float32], Tensor[(1, 6, 10), float32], Tensor[(60), float32], Tensor[(7, 3, 15), float64]) {
  @func_15416() /* ty=(Tensor[(1950), float32], Tensor[(1, 6, 10), float32], Tensor[(60), float32], Tensor[(7, 3, 15), float64]) */
}

def @func_15019() -> (Tensor[(5, 9, 11), float32],) {
  %730 = @func_10227() /* ty=(Tensor[(5, 9, 11), float32], float32, Tensor[(14, 8, 15), float64]) */;
  %731 = %730.0;
  (%731,)
}

def @func_15526() -> (Tensor[(8, 504, 12), float64], float32) {
  %732 = @func_10123() /* ty=(Tensor[(5, 9, 11), float32], Tensor[(8, 504, 12), bool]) */;
  %733 = %732.1;
  %734 = cast(%733, dtype="float64") /* ty=Tensor[(8, 504, 12), float64] */;
  %735 = @func_12248() /* ty=(float32, float32, Tensor[(504), float64], Tensor[(42), float32]) */;
  %736 = exp(%734) /* ty=Tensor[(8, 504, 12), float64] */;
  %737 = %735.0;
  (%736, %737)
}

def @func_1932(%var_1927: Tensor[(14, 2, 13), float64], %var_1928: Tensor[(14, 2, 13), float64], %var_1929: Tensor[(350), int16], %var_1930: Tensor[(1792), int32], %var_1931: Tensor[(1, 1950), float32]) -> (Tensor[(14, 2, 13), float64], Tensor[(1950), float32], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(8, 14, 16), int32], Tensor[(?, 1950), bool]) {
  @func_1925(%var_1927, %var_1928, %var_1929, %var_1930, %var_1931) /* ty=(Tensor[(14, 2, 13), float64], Tensor[(1950), float32], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(8, 14, 16), int32], Tensor[(?, 1950), bool]) */
}

def @func_3742(%var_3741: float32) -> Tensor[(3, 13, 1), bool] {
  %740 = fn (%var_3723: float32) -> Tensor[(3, 13, 1), bool] {
    %738 = cast(%var_3723, dtype="bool") /* ty=bool */;
    %739 = cast(meta[relay.Constant][58] /* ty=Tensor[(3, 13, 1), float32] */, dtype="bool") /* ty=Tensor[(3, 13, 1), bool] */;
    equal(%738, %739) /* ty=Tensor[(3, 13, 1), bool] */
  };
  %740(%var_3741) /* ty=Tensor[(3, 13, 1), bool] */
}

def @func_5498(%var_5493: Tensor[(15, 14, 2), float64], %var_5494: Tensor[(36), int32], %var_5495: Tensor[(364), float64], %var_5496: Tensor[(1792), int32], %var_5497: Tensor[(130, 15), float32]) -> (Tensor[(15, 14, 2), float64], Tensor[(1188), bool], Tensor[(36), int32], Tensor[(3, 108), int32], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(130, 15), float32]) {
  %761 = fn (%var_5448: Tensor[(15, 14, 2), float64], %var_5458: Tensor[(36), int32], %var_5468: Tensor[(364), float64], %var_5470: Tensor[(1792), int32], %var_5471: Tensor[(130, 15), float32]) -> (Tensor[(15, 14, 2), float64], Tensor[(1188), bool], Tensor[(36), int32], Tensor[(3, 108), int32], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(130, 15), float32]) {
    %741 = cast(%var_5448, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
    %742 = cast(%var_5458, dtype="int32") /* ty=Tensor[(36), int32] */;
    %743 = cast(meta[relay.Constant][59] /* ty=Tensor[(3, 108), int32] */, dtype="int32") /* ty=Tensor[(3, 108), int32] */;
    %744 = reshape(%742, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), int32] */;
    %745 = reshape(%743, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), int32] */;
    %746 = @func_5261(%744, %745) /* ty=(Tensor[(6, 6, 9), int32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(1188), bool], Tensor[(1188), bool]) */;
    %747 = cast(%var_5468, dtype="float64") /* ty=Tensor[(364), float64] */;
    %748 = cast(%var_5468, dtype="float64") /* ty=Tensor[(364), float64] */;
    %749 = cast(meta[relay.Constant][60] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
    %750 = cast(%var_5470, dtype="int32") /* ty=Tensor[(1792), int32] */;
    %751 = cast(%var_5471, dtype="float32") /* ty=Tensor[(130, 15), float32] */;
    %752 = reshape(%747, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
    %753 = reshape(%748, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
    %754 = reshape(%749, newshape=[350]) /* ty=Tensor[(350), int16] */;
    %755 = reshape(%750, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
    %756 = reshape(%751, newshape=[1, 1950]) /* ty=Tensor[(1, 1950), float32] */;
    %757 = @func_1925(%752, %753, %754, %755, %756) /* ty=(Tensor[(14, 2, 13), float64], Tensor[(1950), float32], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(8, 14, 16), int32], Tensor[(?, 1950), bool]) */;
    %758 = asin(%741) /* ty=Tensor[(15, 14, 2), float64] */;
    %759 = %746.3;
    %760 = %757.2;
    (%758, %759, %var_5458, meta[relay.Constant][59] /* ty=Tensor[(3, 108), int32] */, %760, %var_5468, meta[relay.Constant][60] /* ty=Tensor[(350), int16] */, %var_5470, %var_5471)
  };
  %761(%var_5493, %var_5494, %var_5495, %var_5496, %var_5497) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(1188), bool], Tensor[(36), int32], Tensor[(3, 108), int32], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(130, 15), float32]) */
}

def @func_12480() -> (Tensor[(8, 504, 12), bool],) {
  %764 = fn () -> (Tensor[(8, 504, 12), bool],) {
    %762 = @func_11456() /* ty=(Tensor[(8, 504, 12), bool], Tensor[(495), uint64], Tensor[(1950), float32]) */;
    %763 = %762.0;
    (%763,)
  };
  %764() /* ty=(Tensor[(8, 504, 12), bool],) */
}

def @func_8878() -> float32 {
  @func_8876() /* ty=float32 */
}

def @func_144(%var_99: Tensor[(9, 15, 1), float64]) -> Tensor[(9, 15, ?), bool] {
  %765 = cast(%var_99, dtype="float64") /* ty=Tensor[(9, 15, 1), float64] */;
  %766 = cosh(%765) /* ty=Tensor[(9, 15, 1), float64] */;
  %767 = cast(meta[relay.Constant][61] /* ty=Tensor[(9, 15, 1), float64] */, dtype="int64") /* ty=Tensor[(9, 15, 1), int64] */;
  %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%766, dtype="int64") /* ty=Tensor[(9, 15, 1), int64] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %771 = bitwise_and(%769, %770) /* ty=Tensor[(9, 15, ?), int64] */;
  %772 = cast(%771, dtype="bool") /* ty=Tensor[(9, 15, ?), bool] */;
  %773 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %774 = cast(%766, dtype="bool") /* ty=Tensor[(9, 15, 1), bool] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%774, %775) /* ty=Tensor[(9, 15, ?), bool] */
}

def @func_10545(%var_10543: Tensor[(10, 4, 10), float64]) -> (Tensor[(1950), float32], Tensor[(10, 4, 10), float32]) {
  @func_10542(%var_10543) /* ty=(Tensor[(1950), float32], Tensor[(10, 4, 10), float32]) */
}

def @func_12536() -> Tensor[(1950), float32] {
  %776 = @func_11456() /* ty=(Tensor[(8, 504, 12), bool], Tensor[(495), uint64], Tensor[(1950), float32]) */;
  %776.2
}

def @func_14839() -> float32 {
  %777 = @func_13257() /* ty=(float32, float32, Tensor[(1188), bool], Tensor[(3, 396), bool]) */;
  %777.0
}

def @func_14718() -> Tensor[(495), uint64] {
  %779 = fn () -> Tensor[(495), uint64] {
    %778 = @func_14144() /* ty=(Tensor[(495), uint64],) */;
    %778.0
  };
  %779() /* ty=Tensor[(495), uint64] */
}

def @func_5811(%var_5800: Tensor[(39, 3), bool], %var_5803: float32) -> (Tensor[(3, 3, 13), bool], Tensor[(39, 3), bool], float32, Tensor[(3, 13, 1), bool], Tensor[(3, 13, 1), int32]) {
  %780 = cast(%var_5800, dtype="bool") /* ty=Tensor[(39, 3), bool] */;
  %781 = reshape(%780, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), bool] */;
  %782 = cast(%var_5803, dtype="float32") /* ty=float32 */;
  %783 = reshape(%782, newshape=[]) /* ty=float32 */;
  %784 = @func_5651(%783) /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32) */;
  %785 = cast(%var_5803, dtype="float32") /* ty=float32 */;
  %786 = reshape(%785, newshape=[]) /* ty=float32 */;
  %787 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %788 = %787.1;
  %789 = cast(%var_5803, dtype="int32") /* ty=int32 */;
  %790 = cast(%788, dtype="int32") /* ty=Tensor[(3, 13, 1), int32] */;
  %791 = @func_4255(%781) /* ty=Tensor[(3, 3, 13), bool] */;
  %792 = %784.2;
  %793 = @func_3740(%786) /* ty=Tensor[(3, 13, 1), bool] */;
  %794 = left_shift(%789, %790) /* ty=Tensor[(3, 13, 1), int32] */;
  (%791, %var_5800, %792, %793, %794)
}

def @func_2924(%var_2920: Tensor[(11, 12, 9), bool], %var_2921: Tensor[(11, 12, 9), bool], %var_2922: Tensor[(135), float64], %var_2923: Tensor[(11, 12, 9), float32]) -> (Tensor[(9, 15, ?), bool], Tensor[(135), float64], Tensor[(11, 12, 9), float32]) {
  @func_2918(%var_2920, %var_2921, %var_2922, %var_2923) /* ty=(Tensor[(9, 15, ?), bool], Tensor[(135), float64], Tensor[(11, 12, 9), float32]) */
}

def @func_7977(%var_7975: Tensor[(420), float64], %var_7976: Tensor[(364), float64]) -> (Tensor[(5, 9, 11), uint64], Tensor[(1950), float32], Tensor[(420), float64], Tensor[(18, 2), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool], Tensor[(3, 3, 13), bool], Tensor[(324), int32], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(364), float64], Tensor[(350), int16]) {
  %833 = fn (%var_7923: Tensor[(420), float64], %var_7955: Tensor[(364), float64]) -> (Tensor[(5, 9, 11), uint64], Tensor[(1950), float32], Tensor[(420), float64], Tensor[(18, 2), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool], Tensor[(3, 3, 13), bool], Tensor[(324), int32], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(364), float64], Tensor[(350), int16]) {
    %795 = @func_6374() /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %796 = cast(%var_7923, dtype="float64") /* ty=Tensor[(420), float64] */;
    %797 = cast(meta[relay.Constant][62] /* ty=Tensor[(18, 2), int32] */, dtype="int32") /* ty=Tensor[(18, 2), int32] */;
    %798 = cast(meta[relay.Constant][63] /* ty=Tensor[(1792), int32] */, dtype="int32") /* ty=Tensor[(1792), int32] */;
    %799 = cast(meta[relay.Constant][64] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
    %800 = cast(meta[relay.Constant][65] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %801 = cast(meta[relay.Constant][66] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
    %802 = reshape(%796, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %803 = reshape(%797, newshape=[36]) /* ty=Tensor[(36), int32] */;
    %804 = reshape(%798, newshape=[16, 112]) /* ty=Tensor[(16, 112), int32] */;
    %805 = reshape(%799, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
    %806 = reshape(%800, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %807 = reshape(%801, newshape=[117]) /* ty=Tensor[(117), bool] */;
    %808 = @func_7585(%802, %803, %804, %805, %806, %807) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(5, 9, 11), uint64], Tensor[(1188), bool], Tensor[(420), float64], Tensor[(36), int32], Tensor[(182, 2), float64], Tensor[(16, 112), int32], Tensor[(1950), float32], float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(3, 3, 13), bool], Tensor[(117), bool]) */;
    %809 = cast(meta[relay.Constant][62] /* ty=Tensor[(18, 2), int32] */, dtype="int32") /* ty=Tensor[(18, 2), int32] */;
    %810 = cast(meta[relay.Constant][67] /* ty=Tensor[(324), int32] */, dtype="int32") /* ty=Tensor[(324), int32] */;
    %811 = reshape(%809, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), int32] */;
    %812 = reshape(%810, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), int32] */;
    %813 = @func_5261(%811, %812) /* ty=(Tensor[(6, 6, 9), int32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(1188), bool], Tensor[(1188), bool]) */;
    %814 = %808.7;
    %815 = cast(%814, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %816 = reshape(%815, newshape=[10, 15, 13]) /* ty=Tensor[(10, 15, 13), float32] */;
    %817 = @func_372(%816) /* ty=(Tensor[(10, 15, 13), float32],) */;
    %818 = cast(%var_7955, dtype="float64") /* ty=Tensor[(364), float64] */;
    %819 = cast(%var_7955, dtype="float64") /* ty=Tensor[(364), float64] */;
    %820 = cast(meta[relay.Constant][68] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
    %821 = cast(meta[relay.Constant][63] /* ty=Tensor[(1792), int32] */, dtype="int32") /* ty=Tensor[(1792), int32] */;
    %822 = %817.0;
    %823 = cast(%822, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
    %824 = reshape(%818, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
    %825 = reshape(%819, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float64] */;
    %826 = reshape(%820, newshape=[350]) /* ty=Tensor[(350), int16] */;
    %827 = reshape(%821, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
    %828 = reshape(%823, newshape=[1, 1950]) /* ty=Tensor[(1, 1950), float32] */;
    %829 = @func_1925(%824, %825, %826, %827, %828) /* ty=(Tensor[(14, 2, 13), float64], Tensor[(1950), float32], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(8, 14, 16), int32], Tensor[(?, 1950), bool]) */;
    %830 = %795.0;
    %831 = %813.1;
    %832 = %829.1;
    (%830, %814, %var_7923, meta[relay.Constant][62] /* ty=Tensor[(18, 2), int32] */, meta[relay.Constant][63] /* ty=Tensor[(1792), int32] */, meta[relay.Constant][64] /* ty=Tensor[(2002), int64] */, meta[relay.Constant][65] /* ty=Tensor[(182), float32] */, meta[relay.Constant][66] /* ty=Tensor[(117), bool] */, %831, meta[relay.Constant][67] /* ty=Tensor[(324), int32] */, %822, %832, %var_7955, meta[relay.Constant][68] /* ty=Tensor[(350), int16] */)
  };
  %833(%var_7975, %var_7976) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(1950), float32], Tensor[(420), float64], Tensor[(18, 2), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool], Tensor[(3, 3, 13), bool], Tensor[(324), int32], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(364), float64], Tensor[(350), int16]) */
}

def @func_13078() -> (Tensor[(495), uint64],) {
  %834 = @func_8621() /* ty=Tensor[(495), uint64] */;
  (%834,)
}

def @func_14841() -> float32 {
  @func_14839() /* ty=float32 */
}

def @func_7500() -> (float32, Tensor[(324), int32], Tensor[(36), int32], Tensor[(324), int32]) {
  %843 = fn () -> (float32, Tensor[(324), int32], Tensor[(36), int32], Tensor[(324), int32]) {
    %835 = @func_6069() /* ty=(float32, float32) */;
    %836 = cast(meta[relay.Constant][69] /* ty=Tensor[(36), int32] */, dtype="int32") /* ty=Tensor[(36), int32] */;
    %837 = cast(meta[relay.Constant][70] /* ty=Tensor[(324), int32] */, dtype="int32") /* ty=Tensor[(324), int32] */;
    %838 = reshape(%836, newshape=[36]) /* ty=Tensor[(36), int32] */;
    %839 = reshape(%837, newshape=[324]) /* ty=Tensor[(324), int32] */;
    %840 = @func_6040(%838, %839) /* ty=(float32, Tensor[(1188), bool], Tensor[(36), int32], Tensor[(324), int32]) */;
    %841 = %835.1;
    %842 = %840.3;
    (%841, %842, meta[relay.Constant][69] /* ty=Tensor[(36), int32] */, meta[relay.Constant][70] /* ty=Tensor[(324), int32] */)
  };
  %843() /* ty=(float32, Tensor[(324), int32], Tensor[(36), int32], Tensor[(324), int32]) */
}

def @func_11091() -> float32 {
  %845 = fn () -> float32 {
    %844 = @func_8055() /* ty=(float32,) */;
    %844.0
  };
  %845() /* ty=float32 */
}

def @func_9027(%var_9024: Tensor[(364), float64], %var_9025: Tensor[(1792), int32], %var_9026: Tensor[(1950), float32]) -> (Tensor[(5, 9, 11), uint64], Tensor[(364), float64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(364), float64], Tensor[(1792), int32], Tensor[(1950), float32]) {
  %860 = fn (%var_9009: Tensor[(364), float64], %var_9010: Tensor[(1792), int32], %var_9011: Tensor[(1950), float32]) -> (Tensor[(5, 9, 11), uint64], Tensor[(364), float64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(364), float64], Tensor[(1792), int32], Tensor[(1950), float32]) {
    %846 = @func_6374() /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %847 = cast(meta[relay.Constant][71] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %848 = cast(meta[relay.Constant][72] /* ty=Tensor[(36), int32] */, dtype="int32") /* ty=Tensor[(36), int32] */;
    %849 = cast(%var_9009, dtype="float64") /* ty=Tensor[(364), float64] */;
    %850 = cast(%var_9010, dtype="int32") /* ty=Tensor[(1792), int32] */;
    %851 = cast(%var_9011, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %852 = reshape(%847, newshape=[15, 14, 2]) /* ty=Tensor[(15, 14, 2), float64] */;
    %853 = reshape(%848, newshape=[36]) /* ty=Tensor[(36), int32] */;
    %854 = reshape(%849, newshape=[364]) /* ty=Tensor[(364), float64] */;
    %855 = reshape(%850, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
    %856 = reshape(%851, newshape=[130, 15]) /* ty=Tensor[(130, 15), float32] */;
    %857 = @func_5492(%852, %853, %854, %855, %856) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(1188), bool], Tensor[(36), int32], Tensor[(3, 108), int32], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(130, 15), float32]) */;
    %858 = %846.0;
    %859 = %857.5;
    (%858, %859, meta[relay.Constant][71] /* ty=Tensor[(420), float64] */, meta[relay.Constant][72] /* ty=Tensor[(36), int32] */, %var_9009, %var_9010, %var_9011)
  };
  %860(%var_9024, %var_9025, %var_9026) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(364), float64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(364), float64], Tensor[(1792), int32], Tensor[(1950), float32]) */
}

def @func_8419(%var_8417: Tensor[(495), uint64]) -> (float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64], Tensor[(504), float64], Tensor[(1280), uint64], Tensor[(504), float64]) {
  @func_8416(%var_8417) /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64], Tensor[(504), float64], Tensor[(1280), uint64], Tensor[(504), float64]) */
}

def @func_182(%var_181: Tensor[(6, 7, 12), float64]) -> Tensor[(6, 7, 12), float64] {
  %862 = fn (%var_175: Tensor[(6, 7, 12), float64]) -> Tensor[(6, 7, 12), float64] {
    %861 = cast(%var_175, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
    sigmoid(%861) /* ty=Tensor[(6, 7, 12), float64] */
  };
  %862(%var_181) /* ty=Tensor[(6, 7, 12), float64] */
}

def @func_8292(%var_8291: Tensor[(1188), bool]) -> (float32, Tensor[(1188), bool], Tensor[(1188), bool]) {
  %868 = fn (%var_8282: Tensor[(1188), bool]) -> (float32, Tensor[(1188), bool], Tensor[(1188), bool]) {
    %863 = cast(%var_8282, dtype="bool") /* ty=Tensor[(1188), bool] */;
    %864 = reshape(%863, newshape=[1188]) /* ty=Tensor[(1188), bool] */;
    %865 = @func_5520(%864) /* ty=(float32, Tensor[(1188), bool], Tensor[(1188), bool]) */;
    %866 = @func_5606() /* ty=float32 */;
    %867 = %865.2;
    (%866, %867, %var_8282)
  };
  %868(%var_8291) /* ty=(float32, Tensor[(1188), bool], Tensor[(1188), bool]) */
}

def @func_10625() -> float32 {
  @func_10623() /* ty=float32 */
}

def @func_10636(%var_10634: Tensor[(1, 6, 10), float32]) -> (Tensor[(1, 6, 10), float32],) {
  @func_10633(%var_10634) /* ty=(Tensor[(1, 6, 10), float32],) */
}

def @func_12056(%var_12022: Tensor[(1, 12, 10), float32]) -> (Tensor[(?, 12, 10), float32],) {
  %869 = cast(%var_12022, dtype="float32") /* ty=Tensor[(1, 12, 10), float32] */;
  %870 = erf(%869) /* ty=Tensor[(1, 12, 10), float32] */;
  %871 = cast(%870, dtype="float32") /* ty=Tensor[(1, 12, 10), float32] */;
  %872 = shape_of(%var_12022, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(%var_12022, dtype="float32") /* ty=Tensor[(1, 12, 10), float32] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %875 = floor_mod(%873, %874) /* ty=Tensor[(?, 12, 10), float32] */;
  %876 = cast(%875, dtype="float32") /* ty=Tensor[(?, 12, 10), float32] */;
  %877 = sigmoid(%876) /* ty=Tensor[(?, 12, 10), float32] */;
  (%877,)
}

def @func_10457() -> (Tensor[(14, 8, 15), float64], Tensor[(15, 10, 7), float32]) {
  %878 = @func_8933() /* ty=(Tensor[(14, 8, 15), bool], Tensor[(14, 8, 15), float64]) */;
  %879 = @func_9849() /* ty=(float32, float32, Tensor[(5, 9, 11), uint64]) */;
  %880 = %879.0;
  %881 = cast(%880, dtype="uint64") /* ty=uint64 */;
  %882 = cast(meta[relay.Constant][73] /* ty=Tensor[(15, 10, 7), float32] */, dtype="uint64") /* ty=Tensor[(15, 10, 7), uint64] */;
  %883 = subtract(%881, %882) /* ty=Tensor[(15, 10, 7), uint64] */;
  %884 = cast(%883, dtype="float32") /* ty=Tensor[(15, 10, 7), float32] */;
  %885 = %878.1;
  %886 = sigmoid(%884) /* ty=Tensor[(15, 10, 7), float32] */;
  (%885, %886)
}

def @func_15294() -> (Tensor[(14, 8, 15), float64], Tensor[(1950), float32], Tensor[(2002), int64], Tensor[(1950), float32]) {
  @func_15292() /* ty=(Tensor[(14, 8, 15), float64], Tensor[(1950), float32], Tensor[(2002), int64], Tensor[(1950), float32]) */
}

def @func_8622() -> Tensor[(495), uint64] {
  %887 = fn () -> Tensor[(495), uint64] {
    @func_6658() /* ty=Tensor[(495), uint64] */
  };
  %887() /* ty=Tensor[(495), uint64] */
}

def @func_10633(%var_10630: Tensor[(1, 6, 10), float32]) -> (Tensor[(1, 6, 10), float32],) {
  %888 = cast(%var_10630, dtype="float32") /* ty=Tensor[(1, 6, 10), float32] */;
  %889 = sqrt(%888) /* ty=Tensor[(1, 6, 10), float32] */;
  (%889,)
}

def @func_5654(%var_5652: float32) -> (Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32) {
  @func_5651(%var_5652) /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32) */
}

def @func_5522(%var_5521: Tensor[(1188), bool]) -> (float32, Tensor[(1188), bool], Tensor[(1188), bool]) {
  %896 = fn (%var_5518: Tensor[(1188), bool]) -> (float32, Tensor[(1188), bool], Tensor[(1188), bool]) {
    %890 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
    %891 = cast(%var_5518, dtype="bool") /* ty=Tensor[(1188), bool] */;
    %892 = reshape(%891, newshape=[1188]) /* ty=Tensor[(1188), bool] */;
    %893 = @func_3267(%892) /* ty=(Tensor[(8, 15, 5), float32], Tensor[(135), float64], Tensor[(1188), bool], Tensor[(1, 135), float64]) */;
    %894 = %890.2;
    %895 = %893.2;
    (%894, %895, %var_5518)
  };
  %896(%var_5521) /* ty=(float32, Tensor[(1188), bool], Tensor[(1188), bool]) */
}

def @func_10004(%var_9994: Tensor[(6, 11, 12), float64]) -> (Tensor[(6, 11, 12), float64], Tensor[(5, 9, 11), uint64]) {
  %897 = cast(%var_9994, dtype="float64") /* ty=Tensor[(6, 11, 12), float64] */;
  %898 = @func_9073() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %899 = cos(%897) /* ty=Tensor[(6, 11, 12), float64] */;
  %900 = %898.0;
  (%899, %900)
}

def @func_13787(%var_13785: Tensor[(9, 9, 8), float32]) -> (Tensor[(9, 9, 8), float64],) {
  @func_13784(%var_13785) /* ty=(Tensor[(9, 9, 8), float64],) */
}

def @func_14688() -> (Tensor[(1950), float32],) {
  @func_14686() /* ty=(Tensor[(1950), float32],) */
}

def @func_9243(%var_9241: Tensor[(42), float32]) -> (Tensor[(5, 9, 11), uint64], Tensor[(42), float32], Tensor[(504), float64], float32, Tensor[(5, 9, 11), float32]) {
  @func_9240(%var_9241) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(42), float32], Tensor[(504), float64], float32, Tensor[(5, 9, 11), float32]) */
}

def @func_13388() -> float32 {
  %901 = @func_13299() /* ty=(float32,) */;
  %901.0
}

def @func_11151(%var_11147: Tensor[(10, 9, 5), uint16], %var_11148: Tensor[(36), int32], %var_11149: Tensor[(1792), int32], %var_11150: Tensor[(1950, 1), float32]) -> (Tensor[(350), int16], Tensor[(420), float64], Tensor[(36), int32], Tensor[(364), float64], Tensor[(1792), int32], Tensor[(1950, 1), float32], Tensor[(10, 9, 5), uint8], Tensor[(8, 504, 12), bool]) {
  @func_11145(%var_11147, %var_11148, %var_11149, %var_11150) /* ty=(Tensor[(350), int16], Tensor[(420), float64], Tensor[(36), int32], Tensor[(364), float64], Tensor[(1792), int32], Tensor[(1950, 1), float32], Tensor[(10, 9, 5), uint8], Tensor[(8, 504, 12), bool]) */
}

def @func_12827(%var_12804: Tensor[(36), int32], %var_12805: Tensor[(324), int32]) -> (float32, Tensor[(6, 6, 9), int32], Tensor[(36), int32], Tensor[(324), int32], Tensor[(8, 504, 12), bool], Tensor[(2, 24192), bool], Tensor[(1, 2002), int64], Tensor[(5, 9, 11), uint64]) {
  %902 = @func_8055() /* ty=(float32,) */;
  %903 = cast(%var_12804, dtype="int32") /* ty=Tensor[(36), int32] */;
  %904 = cast(%var_12805, dtype="int32") /* ty=Tensor[(324), int32] */;
  %905 = reshape(%903, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), int32] */;
  %906 = reshape(%904, newshape=[6, 6, 9]) /* ty=Tensor[(6, 6, 9), int32] */;
  %907 = @func_5261(%905, %906) /* ty=(Tensor[(6, 6, 9), int32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(1188), bool], Tensor[(1188), bool]) */;
  %908 = cast(meta[relay.Constant][74] /* ty=Tensor[(2, 24192), bool] */, dtype="bool") /* ty=Tensor[(2, 24192), bool] */;
  %909 = cast(meta[relay.Constant][74] /* ty=Tensor[(2, 24192), bool] */, dtype="float64") /* ty=Tensor[(2, 24192), float64] */;
  %910 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 2002), int64] */, dtype="int64") /* ty=Tensor[(1, 2002), int64] */;
  %911 = reshape(%908, newshape=[8, 504, 12]) /* ty=Tensor[(8, 504, 12), bool] */;
  %912 = reshape(%909, newshape=[8, 504, 12]) /* ty=Tensor[(8, 504, 12), float64] */;
  %913 = reshape(%910, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %914 = @func_7005(%911, %912, %913) /* ty=(Tensor[(8, 504, 12), bool], Tensor[(8, 504, 12), int8], Tensor[(1950), float32], Tensor[(2002), int64]) */;
  %915 = @func_10922() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %916 = %902.0;
  %917 = %907.0;
  %918 = %914.0;
  %919 = %915.0;
  (%916, %917, %var_12804, %var_12805, %918, meta[relay.Constant][74] /* ty=Tensor[(2, 24192), bool] */, meta[relay.Constant][75] /* ty=Tensor[(1, 2002), int64] */, %919)
}

def @func_14410() -> (Tensor[(448, 4), int32], Tensor[(1950), float32], float32) {
  %925 = fn () -> (Tensor[(448, 4), int32], Tensor[(1950), float32], float32) {
    %920 = @func_11901() /* ty=(Tensor[(448, 4), int32],) */;
    %921 = @func_12553() /* ty=(float32,) */;
    %922 = %920.0;
    %923 = @func_6965() /* ty=Tensor[(1950), float32] */;
    %924 = %921.0;
    (%922, %923, %924)
  };
  %925() /* ty=(Tensor[(448, 4), int32], Tensor[(1950), float32], float32) */
}

def @func_14773(%var_14761: Tensor[(1280), uint64]) -> (Tensor[(1950), float32], float32, Tensor[(6, 7, 12), float64], Tensor[(1280), uint64], Tensor[(504), float64]) {
  %926 = @func_11456() /* ty=(Tensor[(8, 504, 12), bool], Tensor[(495), uint64], Tensor[(1950), float32]) */;
  %927 = %926.2;
  %928 = cast(%927, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %929 = cast(%var_14761, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %930 = cast(meta[relay.Constant][76] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %931 = reshape(%929, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), uint64] */;
  %932 = reshape(%930, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %933 = @func_5899(%931, %932) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64]) */;
  %934 = sigmoid(%928) /* ty=Tensor[(1950), float32] */;
  %935 = @func_6080() /* ty=float32 */;
  %936 = %933.1;
  (%934, %935, %936, %var_14761, meta[relay.Constant][76] /* ty=Tensor[(504), float64] */)
}

def @func_12756() -> (Tensor[(14, 8, 15), float64],) {
  %937 = @func_11845() /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(14, 8, 15), float64]) */;
  %938 = %937.1;
  (%938,)
}

def @func_13593(%var_13580: Tensor[(21, 6), int16]) -> (Tensor[(5, 9, 11), uint64], Tensor[(126), int16], Tensor[(21, 6), int16], Tensor[(1950), float32], Tensor[(2002), float64]) {
  %939 = @func_9264() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %940 = cast(%var_13580, dtype="int16") /* ty=Tensor[(21, 6), int16] */;
  %941 = cast(meta[relay.Constant][77] /* ty=Tensor[(2002), int64] */, dtype="int64") /* ty=Tensor[(2002), int64] */;
  %942 = cast(meta[relay.Constant][78] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %943 = reshape(%940, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %944 = reshape(%941, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
  %945 = reshape(%942, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %946 = @func_6736(%943, %944, %945) /* ty=(float32, Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */;
  %947 = cast(meta[relay.Constant][77] /* ty=Tensor[(2002), int64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %948 = %939.0;
  %949 = %946.2;
  %950 = exp(%947) /* ty=Tensor[(2002), float64] */;
  (%948, %949, %var_13580, meta[relay.Constant][78] /* ty=Tensor[(1950), float32] */, %950)
}

def @func_12210(%var_12209: Tensor[(2, 1, 12), int8]) -> Tensor[(2, 1, 12), int8] {
  %953 = fn (%var_12198: Tensor[(2, 1, 12), int8]) -> Tensor[(2, 1, 12), int8] {
    %951 = cast(meta[relay.Constant][79] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %952 = cast(%var_12198, dtype="int8") /* ty=Tensor[(2, 1, 12), int8] */;
    logical_xor(%951, %952) /* ty=Tensor[(2, 1, 12), int8] */
  };
  %953(%var_12209) /* ty=Tensor[(2, 1, 12), int8] */
}

def @func_12881() -> Tensor[(1950), float32] {
  @func_6965() /* ty=Tensor[(1950), float32] */
}

def @func_12964(%var_12962: Tensor[(450), uint16], %var_12963: Tensor[(1792), int32]) -> (float32, Tensor[(8, 504, 12), bool], Tensor[(450), uint16], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(1950), float32]) {
  @func_12960(%var_12962, %var_12963) /* ty=(float32, Tensor[(8, 504, 12), bool], Tensor[(450), uint16], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(1950), float32]) */
}

def @func_7672() -> (Tensor[(7, 3, 15), float64],) {
  %956 = fn () -> (Tensor[(7, 3, 15), float64],) {
    %954 = cast(meta[relay.Constant][80] /* ty=Tensor[(7, 3, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 3, 15), float64] */;
    %955 = atanh(%954) /* ty=Tensor[(7, 3, 15), float64] */;
    (%955,)
  };
  %956() /* ty=(Tensor[(7, 3, 15), float64],) */
}

def @func_13691() -> float32 {
  @func_6434() /* ty=float32 */
}

def @func_8416(%var_8404: Tensor[(495), uint64]) -> (float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64], Tensor[(504), float64], Tensor[(1280), uint64], Tensor[(504), float64]) {
  %957 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
  %958 = cast(%var_8404, dtype="uint64") /* ty=Tensor[(495), uint64] */;
  %959 = cast(%var_8404, dtype="uint64") /* ty=Tensor[(495), uint64] */;
  %960 = reshape(%958, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), uint64] */;
  %961 = reshape(%959, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), uint64] */;
  %962 = @func_2124(%960, %961) /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %963 = cast(meta[relay.Constant][81] /* ty=Tensor[(1280), uint64] */, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %964 = cast(meta[relay.Constant][82] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %965 = reshape(%963, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), uint64] */;
  %966 = reshape(%964, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %967 = @func_5899(%965, %966) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64]) */;
  %968 = %957.2;
  %969 = %962.0;
  %970 = %967.2;
  (%968, %969, %var_8404, %970, meta[relay.Constant][81] /* ty=Tensor[(1280), uint64] */, meta[relay.Constant][82] /* ty=Tensor[(504), float64] */)
}

def @func_9119() -> (Tensor[(7, 3, 15), float64], Tensor[(1, 16, 6), float64], float64, Tensor[(96), float64]) {
  %979 = fn () -> (Tensor[(7, 3, 15), float64], Tensor[(1, 16, 6), float64], float64, Tensor[(96), float64]) {
    %971 = @func_7671() /* ty=(Tensor[(7, 3, 15), float64],) */;
    %972 = cast(6.88778f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %973 = cast(meta[relay.Constant][83] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
    %974 = reshape(%972, newshape=[]) /* ty=float64 */;
    %975 = reshape(%973, newshape=[1, 16, 6]) /* ty=Tensor[(1, 16, 6), float64] */;
    %976 = @func_2286(%974, %975) /* ty=(Tensor[(1, 16, 6), float64],) */;
    %977 = %971.0;
    %978 = %976.0;
    (%977, %978, 6.88778f64 /* ty=float64 */, meta[relay.Constant][83] /* ty=Tensor[(96), float64] */)
  };
  %979() /* ty=(Tensor[(7, 3, 15), float64], Tensor[(1, 16, 6), float64], float64, Tensor[(96), float64]) */
}

def @func_8935() -> (Tensor[(14, 8, 15), bool], Tensor[(14, 8, 15), float64]) {
  @func_8933() /* ty=(Tensor[(14, 8, 15), bool], Tensor[(14, 8, 15), float64]) */
}

def @func_13390() -> float32 {
  @func_13388() /* ty=float32 */
}

def @func_15371(%var_15369: Tensor[(5, 5, 6), float32]) -> (Tensor[(5, 5, 6), bool], float32) {
  @func_15368(%var_15369) /* ty=(Tensor[(5, 5, 6), bool], float32) */
}

def @func_12974() -> (Tensor[(5, 9, 11), uint64],) {
  %982 = fn () -> (Tensor[(5, 9, 11), uint64],) {
    %980 = @func_9264() /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %981 = %980.0;
    (%981,)
  };
  %982() /* ty=(Tensor[(5, 9, 11), uint64],) */
}

def @func_14028(%var_14026: Tensor[(2002), int64], %var_14027: Tensor[(1950), float32]) -> (float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32], Tensor[(14, 8, 15), float64]) {
  %997 = fn (%var_14020: Tensor[(2002), int64], %var_14021: Tensor[(1950), float32]) -> (float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32], Tensor[(14, 8, 15), float64]) {
    %983 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
    %984 = %983.2;
    %985 = cast(%984, dtype="int16") /* ty=int16 */;
    %986 = cast(meta[relay.Constant][84] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
    %987 = cast(%var_14020, dtype="int64") /* ty=Tensor[(2002), int64] */;
    %988 = cast(%var_14021, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %989 = reshape(%985, newshape=[]) /* ty=int16 */;
    %990 = reshape(%986, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), int16] */;
    %991 = reshape(%987, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
    %992 = reshape(%988, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
    %993 = @func_4627(%989, %990, %991, %992) /* ty=(Tensor[(14, 9, 1), int16], Tensor[(1950), float32], Tensor[(2002), int64], Tensor[(350), int16], Tensor[(1950), float32]) */;
    %994 = @func_11845() /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(14, 8, 15), float64]) */;
    %995 = %993.2;
    %996 = %994.1;
    (%984, %995, meta[relay.Constant][84] /* ty=Tensor[(126), int16] */, %var_14020, %var_14021, %996)
  };
  %997(%var_14026, %var_14027) /* ty=(float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32], Tensor[(14, 8, 15), float64]) */
}

def @func_6952(%var_6948: Tensor[(126), int16], %var_6949: Tensor[(2002), int64], %var_6950: Tensor[(1950), float32], %var_6951: Tensor[(182), float32]) -> (float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32], Tensor[(3, 13, 1), bool], Tensor[(182), float32]) {
  %1015 = fn (%var_6929: Tensor[(126), int16], %var_6930: Tensor[(2002), int64], %var_6931: Tensor[(1950), float32], %var_6940: Tensor[(182), float32]) -> (float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32], Tensor[(3, 13, 1), bool], Tensor[(182), float32]) {
    %998 = @func_5606() /* ty=float32 */;
    %999 = cast(%998, dtype="int16") /* ty=int16 */;
    %1000 = cast(%var_6929, dtype="int16") /* ty=Tensor[(126), int16] */;
    %1001 = cast(%var_6930, dtype="int64") /* ty=Tensor[(2002), int64] */;
    %1002 = cast(%var_6931, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %1003 = reshape(%999, newshape=[]) /* ty=int16 */;
    %1004 = reshape(%1000, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), int16] */;
    %1005 = reshape(%1001, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
    %1006 = reshape(%1002, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
    %1007 = @func_4627(%1003, %1004, %1005, %1006) /* ty=(Tensor[(14, 9, 1), int16], Tensor[(1950), float32], Tensor[(2002), int64], Tensor[(350), int16], Tensor[(1950), float32]) */;
    %1008 = cast(%var_6940, dtype="float32") /* ty=Tensor[(182), float32] */;
    %1009 = cast(%998, dtype="float64") /* ty=float64 */;
    %1010 = reshape(%1008, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), float32] */;
    %1011 = reshape(%1009, newshape=[]) /* ty=float64 */;
    %1012 = @func_6354(%1010, %1011) /* ty=(Tensor[(1, 16, 6), float64], float64, Tensor[(48, 2), float64], Tensor[(3, 13, 1), bool], Tensor[(14, 13, 1), float32]) */;
    %1013 = %1007.2;
    %1014 = %1012.3;
    (%998, %1013, %var_6929, %var_6930, %var_6931, %1014, %var_6940)
  };
  %1015(%var_6948, %var_6949, %var_6950, %var_6951) /* ty=(float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32], Tensor[(3, 13, 1), bool], Tensor[(182), float32]) */
}

def @func_8584(%var_8577: Tensor[(1188), bool], %var_8578: Tensor[(350), int16], %var_8579: Tensor[(1950), float32], %var_8580: Tensor[(4, 448), int32], %var_8581: Tensor[(3, 45), float32], %var_8582: Tensor[(3, 45), float64], %var_8583: Tensor[(3, 45), float32]) -> (float32, Tensor[(135), float64], Tensor[(1188), bool], Tensor[(9, 15, ?), bool], Tensor[(10, 7, 5), int16], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(4, 448), int32], Tensor[(3, 45), int64], Tensor[(3, 45), bool], Tensor[(3, 45), bool]) {
  @func_8575(%var_8577, %var_8578, %var_8579, %var_8580, %var_8581, %var_8582, %var_8583) /* ty=(float32, Tensor[(135), float64], Tensor[(1188), bool], Tensor[(9, 15, ?), bool], Tensor[(10, 7, 5), int16], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(4, 448), int32], Tensor[(3, 45), int64], Tensor[(3, 45), bool], Tensor[(3, 45), bool]) */
}

def @func_5400() -> (Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) {
  %1016 = cast(meta[relay.Constant][85] /* ty=Tensor[(504, 1), float64] */, dtype="float64") /* ty=Tensor[(504, 1), float64] */;
  %1017 = reshape(%1016, newshape=[6, 7, 12]) /* ty=Tensor[(6, 7, 12), float64] */;
  %1018 = cast(0.563324f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1019 = reshape(%1018, newshape=[]) /* ty=float32 */;
  %1020 = cast(meta[relay.Constant][86] /* ty=Tensor[(8, 1, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 1, 12), float64] */;
  %1021 = sqrt(%1020) /* ty=Tensor[(8, 1, 12), float64] */;
  %1022 = cast(%1021, dtype="uint64") /* ty=Tensor[(8, 1, 12), uint64] */;
  %1023 = cast(meta[relay.Constant][85] /* ty=Tensor[(504, 1), float64] */, dtype="uint64") /* ty=Tensor[(504, 1), uint64] */;
  %1024 = logical_xor(%1022, %1023) /* ty=Tensor[(8, 504, 12), uint64] */;
  %1025 = cast(%1021, dtype="bool") /* ty=Tensor[(8, 1, 12), bool] */;
  %1026 = cast(%1024, dtype="bool") /* ty=Tensor[(8, 504, 12), bool] */;
  %1027 = @func_180(%1017) /* ty=Tensor[(6, 7, 12), float64] */;
  %1028 = @func_3740(%1019) /* ty=Tensor[(3, 13, 1), bool] */;
  %1029 = logical_or(%1025, %1026) /* ty=Tensor[(8, 504, 12), bool] */;
  (%1027, %1028, 0.563324f /* ty=float32 */, %1029)
}

def @func_9285() -> (Tensor[(324), int32], Tensor[(3, 13, 1), bool], float32, Tensor[(495), uint64]) {
  @func_9283() /* ty=(Tensor[(324), int32], Tensor[(3, 13, 1), bool], float32, Tensor[(495), uint64]) */
}

def @func_14146() -> (Tensor[(495), uint64],) {
  @func_14144() /* ty=(Tensor[(495), uint64],) */
}

def @func_7034(%var_7032: Tensor[(1, 504), float64]) -> (float32, Tensor[(16, 10, 8), bool], Tensor[(1280), uint64], Tensor[(1, 504), float64]) {
  %1030 = @func_6775() /* ty=(float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) */;
  %1031 = cast(meta[relay.Constant][87] /* ty=Tensor[(1280), uint64] */, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %1032 = cast(%var_7032, dtype="float64") /* ty=Tensor[(1, 504), float64] */;
  %1033 = reshape(%1031, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), uint64] */;
  %1034 = reshape(%1032, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %1035 = @func_5899(%1033, %1034) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 7, 12), float64], Tensor[(504), float64]) */;
  %1036 = %1030.0;
  %1037 = %1035.0;
  (%1036, %1037, meta[relay.Constant][87] /* ty=Tensor[(1280), uint64] */, %var_7032)
}

def @func_6070() -> (float32, float32) {
  %1044 = fn () -> (float32, float32) {
    %1038 = @func_5789() /* ty=(float32, Tensor[(3, 13, 1), bool]) */;
    %1039 = %1038.0;
    %1040 = cast(%1039, dtype="float32") /* ty=float32 */;
    %1041 = reshape(%1040, newshape=[]) /* ty=float32 */;
    %1042 = @func_5651(%1041) /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32) */;
    %1043 = %1042.2;
    (%1039, %1043)
  };
  %1044() /* ty=(float32, float32) */
}

def @func_10368(%var_10367: Tensor[(98), float32]) -> (float32, Tensor[(7, 2, 7), uint16], Tensor[(98), float32]) {
  %1049 = fn (%var_10359: Tensor[(98), float32]) -> (float32, Tensor[(7, 2, 7), uint16], Tensor[(98), float32]) {
    %1045 = cast(%var_10359, dtype="float32") /* ty=Tensor[(98), float32] */;
    %1046 = reshape(%1045, newshape=[7, 2, 7]) /* ty=Tensor[(7, 2, 7), float32] */;
    %1047 = @func_6434() /* ty=float32 */;
    %1048 = @func_4660(%1046) /* ty=Tensor[(7, 2, 7), uint16] */;
    (%1047, %1048, %var_10359)
  };
  %1049(%var_10367) /* ty=(float32, Tensor[(7, 2, 7), uint16], Tensor[(98), float32]) */
}

def @func_6358(%var_6356: Tensor[(14, 13, 1), float32], %var_6357: float64) -> (Tensor[(1, 16, 6), float64], float64, Tensor[(48, 2), float64], Tensor[(3, 13, 1), bool], Tensor[(14, 13, 1), float32]) {
  @func_6354(%var_6356, %var_6357) /* ty=(Tensor[(1, 16, 6), float64], float64, Tensor[(48, 2), float64], Tensor[(3, 13, 1), bool], Tensor[(14, 13, 1), float32]) */
}

def @func_6802(%var_6801: Tensor[(2002), int64]) -> (float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) {
  %1059 = fn (%var_6791: Tensor[(2002), int64]) -> (float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) {
    %1050 = cast(meta[relay.Constant][88] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
    %1051 = cast(%var_6791, dtype="int64") /* ty=Tensor[(2002), int64] */;
    %1052 = cast(meta[relay.Constant][89] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %1053 = reshape(%1050, newshape=[126]) /* ty=Tensor[(126), int16] */;
    %1054 = reshape(%1051, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
    %1055 = reshape(%1052, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
    %1056 = @func_6736(%1053, %1054, %1055) /* ty=(float32, Tensor[(1950), float32], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */;
    %1057 = @func_6080() /* ty=float32 */;
    %1058 = %1056.3;
    (%1057, %1058, meta[relay.Constant][88] /* ty=Tensor[(126), int16] */, %var_6791, meta[relay.Constant][89] /* ty=Tensor[(1950), float32] */)
  };
  %1059(%var_6801) /* ty=(float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */
}

def @func_5608() -> float32 {
  @func_5606() /* ty=float32 */
}

def @func_8777(%var_8775: Tensor[(126), int16]) -> (Tensor[(6, 7, 12), float64], float32, Tensor[(126), int16]) {
  @func_8774(%var_8775) /* ty=(Tensor[(6, 7, 12), float64], float32, Tensor[(126), int16]) */
}

def @func_14572() -> Tensor[(1792), int32] {
  %1060 = @func_13872() /* ty=(float32, Tensor[(1792), int32], Tensor[(1, 117), uint16]) */;
  %1060.1
}

def @func_14776(%var_14774: Tensor[(1280), uint64]) -> (Tensor[(1950), float32], float32, Tensor[(6, 7, 12), float64], Tensor[(1280), uint64], Tensor[(504), float64]) {
  @func_14773(%var_14774) /* ty=(Tensor[(1950), float32], float32, Tensor[(6, 7, 12), float64], Tensor[(1280), uint64], Tensor[(504), float64]) */
}

def @func_15368(%var_15355: Tensor[(5, 5, 6), float32]) -> (Tensor[(5, 5, 6), bool], float32) {
  %1061 = @func_11035() /* ty=float32 */;
  %1062 = cast(%1061, dtype="bool") /* ty=bool */;
  %1063 = cast(%var_15355, dtype="bool") /* ty=Tensor[(5, 5, 6), bool] */;
  %1064 = @func_8055() /* ty=(float32,) */;
  %1065 = greater_equal(%1062, %1063) /* ty=Tensor[(5, 5, 6), bool] */;
  %1066 = %1064.0;
  (%1065, %1066)
}

def @func_15596(%var_15593: uint32, %var_15594: Tensor[(16, 11, 4), uint32], %var_15595: Tensor[(16, 11, 4), float32]) -> (Tensor[(16, 11, 4), float32], Tensor[(16, 11, 4), float64]) {
  %1081 = fn (%var_15546: uint32, %var_15547: Tensor[(16, 11, 4), uint32], %var_15569: Tensor[(16, 11, 4), float32]) -> (Tensor[(16, 11, 4), float32], Tensor[(16, 11, 4), float64]) {
    %1067 = cast(%var_15546, dtype="bool") /* ty=bool */;
    %1068 = cast(%var_15547, dtype="bool") /* ty=Tensor[(16, 11, 4), bool] */;
    %1069 = equal(%1067, %1068) /* ty=Tensor[(16, 11, 4), bool] */;
    %1070 = cast(%1069, dtype="float64") /* ty=Tensor[(16, 11, 4), float64] */;
    %1071 = log(%1070) /* ty=Tensor[(16, 11, 4), float64] */;
    %1072 = cast(%1071, dtype="float32") /* ty=Tensor[(16, 11, 4), float32] */;
    %1073 = asinh(%1072) /* ty=Tensor[(16, 11, 4), float32] */;
    %1074 = cast(%var_15569, dtype="float32") /* ty=Tensor[(16, 11, 4), float32] */;
    %1075 = shape_of(%1073, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1076 = cast(%1073, dtype="float32") /* ty=Tensor[(16, 11, 4), float32] */;
    %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1078 = cast(%1073, dtype="float64") /* ty=Tensor[(16, 11, 4), float64] */;
    %1079 = floor_divide(%1076, %1077) /* ty=Tensor[(16, 11, 4), float32] */;
    %1080 = cosh(%1078) /* ty=Tensor[(16, 11, 4), float64] */;
    (%1079, %1080)
  };
  %1081(%var_15593, %var_15594, %var_15595) /* ty=(Tensor[(16, 11, 4), float32], Tensor[(16, 11, 4), float64]) */
}

def @func_8876() -> float32 {
  %1082 = @func_7114() /* ty=(float32,) */;
  %1082.0
}

def @func_374(%var_373: Tensor[(10, 15, 13), float32]) -> (Tensor[(10, 15, 13), float32],) {
  %1085 = fn (%var_363: Tensor[(10, 15, 13), float32]) -> (Tensor[(10, 15, 13), float32],) {
    %1083 = cast(%var_363, dtype="float32") /* ty=Tensor[(10, 15, 13), float32] */;
    %1084 = cosh(%1083) /* ty=Tensor[(10, 15, 13), float32] */;
    (%1084,)
  };
  %1085(%var_373) /* ty=(Tensor[(10, 15, 13), float32],) */
}

def @func_12628() -> (Tensor[(5, 9, 11), uint64], Tensor[(1, 16, 6), float64], Tensor[(182), float32], float64) {
  @func_12626() /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(1, 16, 6), float64], Tensor[(182), float32], float64) */
}

def @func_13510(%var_13508: uint8, %var_13509: Tensor[(11, 9, 4), uint8]) -> Tensor[(11, 9, 4), float64] {
  @func_13506(%var_13508, %var_13509) /* ty=Tensor[(11, 9, 4), float64] */
}

def @func_9702(%var_9701: Tensor[(9, 4), int32]) -> (float32, Tensor[(36), int32], Tensor[(9, 4), int32], Tensor[(324), int32]) {
  %1094 = fn (%var_9697: Tensor[(9, 4), int32]) -> (float32, Tensor[(36), int32], Tensor[(9, 4), int32], Tensor[(324), int32]) {
    %1086 = @func_5789() /* ty=(float32, Tensor[(3, 13, 1), bool]) */;
    %1087 = cast(%var_9697, dtype="int32") /* ty=Tensor[(9, 4), int32] */;
    %1088 = cast(meta[relay.Constant][90] /* ty=Tensor[(324), int32] */, dtype="int32") /* ty=Tensor[(324), int32] */;
    %1089 = reshape(%1087, newshape=[36]) /* ty=Tensor[(36), int32] */;
    %1090 = reshape(%1088, newshape=[324]) /* ty=Tensor[(324), int32] */;
    %1091 = @func_6040(%1089, %1090) /* ty=(float32, Tensor[(1188), bool], Tensor[(36), int32], Tensor[(324), int32]) */;
    %1092 = %1086.0;
    %1093 = %1091.2;
    (%1092, %1093, %var_9697, meta[relay.Constant][90] /* ty=Tensor[(324), int32] */)
  };
  %1094(%var_9701) /* ty=(float32, Tensor[(36), int32], Tensor[(9, 4), int32], Tensor[(324), int32]) */
}

def @func_13080() -> (Tensor[(495), uint64],) {
  @func_13078() /* ty=(Tensor[(495), uint64],) */
}

def @func_12869() -> Tensor[(36), int32] {
  %1096 = fn () -> Tensor[(36), int32] {
    %1095 = @func_7499() /* ty=(float32, Tensor[(324), int32], Tensor[(36), int32], Tensor[(324), int32]) */;
    %1095.2
  };
  %1096() /* ty=Tensor[(36), int32] */
}

def @func_13596(%var_13594: Tensor[(21, 6), int16]) -> (Tensor[(5, 9, 11), uint64], Tensor[(126), int16], Tensor[(21, 6), int16], Tensor[(1950), float32], Tensor[(2002), float64]) {
  @func_13593(%var_13594) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(126), int16], Tensor[(21, 6), int16], Tensor[(1950), float32], Tensor[(2002), float64]) */
}

def @func_10022() -> (Tensor[(8, 504, 12), bool],) {
  @func_10020() /* ty=(Tensor[(8, 504, 12), bool],) */
}

def @func_9196(%var_9194: Tensor[(126), int16]) -> (float32, float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) {
  @func_9193(%var_9194) /* ty=(float32, float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */
}

def @func_13693() -> float32 {
  @func_13691() /* ty=float32 */
}

def @func_9851() -> (float32, float32, Tensor[(5, 9, 11), uint64]) {
  @func_9849() /* ty=(float32, float32, Tensor[(5, 9, 11), uint64]) */
}

def @func_7592(%var_7586: Tensor[(420), float64], %var_7587: Tensor[(36), int32], %var_7588: Tensor[(16, 112), int32], %var_7589: Tensor[(2002), int64], %var_7590: Tensor[(182), float32], %var_7591: Tensor[(117), bool]) -> (Tensor[(5, 9, 11), uint64], Tensor[(5, 9, 11), uint64], Tensor[(1188), bool], Tensor[(420), float64], Tensor[(36), int32], Tensor[(182, 2), float64], Tensor[(16, 112), int32], Tensor[(1950), float32], float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(3, 3, 13), bool], Tensor[(117), bool]) {
  %1126 = fn (%var_7537: Tensor[(420), float64], %var_7538: Tensor[(36), int32], %var_7540: Tensor[(16, 112), int32], %var_7547: Tensor[(2002), int64], %var_7548: Tensor[(182), float32], %var_7581: Tensor[(117), bool]) -> (Tensor[(5, 9, 11), uint64], Tensor[(5, 9, 11), uint64], Tensor[(1188), bool], Tensor[(420), float64], Tensor[(36), int32], Tensor[(182, 2), float64], Tensor[(16, 112), int32], Tensor[(1950), float32], float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(3, 3, 13), bool], Tensor[(117), bool]) {
    %1097 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
    %1098 = @func_7242() /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %1099 = cast(%var_7537, dtype="float64") /* ty=Tensor[(420), float64] */;
    %1100 = cast(%var_7538, dtype="int32") /* ty=Tensor[(36), int32] */;
    %1101 = cast(meta[relay.Constant][91] /* ty=Tensor[(182, 2), float64] */, dtype="float64") /* ty=Tensor[(182, 2), float64] */;
    %1102 = cast(%var_7540, dtype="int32") /* ty=Tensor[(16, 112), int32] */;
    %1103 = cast(meta[relay.Constant][92] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %1104 = reshape(%1099, newshape=[15, 14, 2]) /* ty=Tensor[(15, 14, 2), float64] */;
    %1105 = reshape(%1100, newshape=[36]) /* ty=Tensor[(36), int32] */;
    %1106 = reshape(%1101, newshape=[364]) /* ty=Tensor[(364), float64] */;
    %1107 = reshape(%1102, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
    %1108 = reshape(%1103, newshape=[130, 15]) /* ty=Tensor[(130, 15), float32] */;
    %1109 = @func_5492(%1104, %1105, %1106, %1107, %1108) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(1188), bool], Tensor[(36), int32], Tensor[(3, 108), int32], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(130, 15), float32]) */;
    %1110 = cast(meta[relay.Constant][93] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
    %1111 = cast(%var_7547, dtype="int64") /* ty=Tensor[(2002), int64] */;
    %1112 = cast(meta[relay.Constant][92] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %1113 = cast(%var_7548, dtype="float32") /* ty=Tensor[(182), float32] */;
    %1114 = reshape(%1110, newshape=[126]) /* ty=Tensor[(126), int16] */;
    %1115 = reshape(%1111, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
    %1116 = reshape(%1112, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
    %1117 = reshape(%1113, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %1118 = @func_6947(%1114, %1115, %1116, %1117) /* ty=(float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32], Tensor[(3, 13, 1), bool], Tensor[(182), float32]) */;
    %1119 = cast(%var_7581, dtype="bool") /* ty=Tensor[(117), bool] */;
    %1120 = reshape(%1119, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), bool] */;
    %1121 = %1097.1;
    %1122 = %1098.0;
    %1123 = %1109.1;
    %1124 = %1118.0;
    %1125 = @func_4255(%1120) /* ty=Tensor[(3, 3, 13), bool] */;
    (%1121, %1122, %1123, %var_7537, %var_7538, meta[relay.Constant][91] /* ty=Tensor[(182, 2), float64] */, %var_7540, meta[relay.Constant][92] /* ty=Tensor[(1950), float32] */, %1124, meta[relay.Constant][93] /* ty=Tensor[(126), int16] */, %var_7547, %var_7548, %1125, %var_7581)
  };
  %1126(%var_7586, %var_7587, %var_7588, %var_7589, %var_7590, %var_7591) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(5, 9, 11), uint64], Tensor[(1188), bool], Tensor[(420), float64], Tensor[(36), int32], Tensor[(182, 2), float64], Tensor[(16, 112), int32], Tensor[(1950), float32], float32, Tensor[(126), int16], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(3, 3, 13), bool], Tensor[(117), bool]) */
}

def @func_6080() -> float32 {
  @func_5606() /* ty=float32 */
}

def @func_14561(%var_14560: Tensor[(8, 4, 6), float32]) -> (Tensor[(98), float32], Tensor[(7, 2, 7), bool], Tensor[(5, 9, 11), float64], Tensor[(8, 4, 6), bool]) {
  %1140 = fn (%var_14543: Tensor[(8, 4, 6), float32]) -> (Tensor[(98), float32], Tensor[(7, 2, 7), bool], Tensor[(5, 9, 11), float64], Tensor[(8, 4, 6), bool]) {
    %1127 = @func_11280() /* ty=float32 */;
    %1128 = cast(meta[relay.Constant][94] /* ty=Tensor[(98), float32] */, dtype="float32") /* ty=Tensor[(98), float32] */;
    %1129 = reshape(%1128, newshape=[7, 2, 7]) /* ty=Tensor[(7, 2, 7), float32] */;
    %1130 = @func_4660(%1129) /* ty=Tensor[(7, 2, 7), uint16] */;
    %1131 = cast(%1127, dtype="bool") /* ty=bool */;
    %1132 = cast(%1130, dtype="bool") /* ty=Tensor[(7, 2, 7), bool] */;
    %1133 = @func_7370() /* ty=(float32, float32, Tensor[(5, 9, 11), float64]) */;
    %1134 = @func_13388() /* ty=float32 */;
    %1135 = cast(%1134, dtype="bool") /* ty=bool */;
    %1136 = cast(%var_14543, dtype="bool") /* ty=Tensor[(8, 4, 6), bool] */;
    %1137 = not_equal(%1131, %1132) /* ty=Tensor[(7, 2, 7), bool] */;
    %1138 = %1133.2;
    %1139 = logical_and(%1135, %1136) /* ty=Tensor[(8, 4, 6), bool] */;
    (meta[relay.Constant][94] /* ty=Tensor[(98), float32] */, %1137, %1138, %1139)
  };
  %1140(%var_14560) /* ty=(Tensor[(98), float32], Tensor[(7, 2, 7), bool], Tensor[(5, 9, 11), float64], Tensor[(8, 4, 6), bool]) */
}

def @func_8734() -> (float32,) {
  %1142 = fn () -> (float32,) {
    %1141 = @func_8012() /* ty=float32 */;
    (%1141,)
  };
  %1142() /* ty=(float32,) */
}

def @func_12125() -> (Tensor[(5, 9, 11), uint64],) {
  %1145 = fn () -> (Tensor[(5, 9, 11), uint64],) {
    %1143 = @func_6374() /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %1144 = %1143.0;
    (%1144,)
  };
  %1145() /* ty=(Tensor[(5, 9, 11), uint64],) */
}

def @func_8939() -> Tensor[(8, 504, 12), bool] {
  %1147 = fn () -> Tensor[(8, 504, 12), bool] {
    %1146 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
    %1146.3
  };
  %1147() /* ty=Tensor[(8, 504, 12), bool] */
}

def @func_10192(%var_10160: Tensor[(4, 11, 8), float32], %var_10179: Tensor[(182, 2), float64]) -> (Tensor[(4, 11, 8), float32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(5, 9, 11), uint64], Tensor[(18, 2), int32], Tensor[(420), float64], Tensor[(182, 2), float64], Tensor[(4, 11, 8), float32], Tensor[(495), uint64]) {
  %1148 = cast(%var_10160, dtype="float32") /* ty=Tensor[(4, 11, 8), float32] */;
  %1149 = cast(meta[relay.Constant][95] /* ty=Tensor[(117), bool] */, dtype="bool") /* ty=Tensor[(117), bool] */;
  %1150 = reshape(%1149, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), bool] */;
  %1151 = @func_7242() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %1152 = cast(meta[relay.Constant][96] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1153 = cast(%var_10179, dtype="float64") /* ty=Tensor[(182, 2), float64] */;
  %1154 = reshape(%1152, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %1155 = reshape(%1153, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %1156 = @func_7974(%1154, %1155) /* ty=(Tensor[(5, 9, 11), uint64], Tensor[(1950), float32], Tensor[(420), float64], Tensor[(18, 2), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool], Tensor[(3, 3, 13), bool], Tensor[(324), int32], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(364), float64], Tensor[(350), int16]) */;
  %1157 = cast(%var_10160, dtype="float32") /* ty=Tensor[(4, 11, 8), float32] */;
  %1158 = sqrt(%1148) /* ty=Tensor[(4, 11, 8), float32] */;
  %1159 = @func_4255(%1150) /* ty=Tensor[(3, 3, 13), bool] */;
  %1160 = %1151.0;
  %1161 = %1156.3;
  %1162 = atanh(%1157) /* ty=Tensor[(4, 11, 8), float32] */;
  %1163 = @func_8621() /* ty=Tensor[(495), uint64] */;
  (%1158, %1159, meta[relay.Constant][95] /* ty=Tensor[(117), bool] */, %1160, %1161, meta[relay.Constant][96] /* ty=Tensor[(420), float64] */, %var_10179, %1162, %1163)
}

def @func_15179(%var_15177: uint16, %var_15178: Tensor[(7, 13, 10), uint16]) -> Tensor[(7, 13, 10), uint16] {
  %1166 = fn (%var_15146: uint16, %var_15147: Tensor[(7, 13, 10), uint16]) -> Tensor[(7, 13, 10), uint16] {
    %1164 = cast(%var_15146, dtype="uint16") /* ty=uint16 */;
    %1165 = cast(%var_15147, dtype="uint16") /* ty=Tensor[(7, 13, 10), uint16] */;
    bitwise_and(%1164, %1165) /* ty=Tensor[(7, 13, 10), uint16] */
  };
  %1166(%var_15177, %var_15178) /* ty=Tensor[(7, 13, 10), uint16] */
}

def @func_7009(%var_7006: Tensor[(8, 504, 12), bool], %var_7007: Tensor[(8, 504, 12), float64], %var_7008: Tensor[(2002), int64]) -> (Tensor[(8, 504, 12), bool], Tensor[(8, 504, 12), int8], Tensor[(1950), float32], Tensor[(2002), int64]) {
  %1185 = fn (%var_6984: Tensor[(8, 504, 12), bool], %var_6994: Tensor[(8, 504, 12), float64], %var_7003: Tensor[(2002), int64]) -> (Tensor[(8, 504, 12), bool], Tensor[(8, 504, 12), int8], Tensor[(1950), float32], Tensor[(2002), int64]) {
    %1167 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
    %1168 = %1167.3;
    %1169 = cast(%var_6984, dtype="bool") /* ty=Tensor[(8, 504, 12), bool] */;
    %1170 = shape_of(%1168, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1171 = cast(%1168, dtype="bool") /* ty=Tensor[(8, 504, 12), bool] */;
    %1172 = dyn.reshape(%1169, %1170, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1173 = cast(%1168, dtype="float64") /* ty=Tensor[(8, 504, 12), float64] */;
    %1174 = tan(%1173) /* ty=Tensor[(8, 504, 12), float64] */;
    %1175 = cast(%var_6994, dtype="int8") /* ty=Tensor[(8, 504, 12), int8] */;
    %1176 = shape_of(%1174, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1177 = cast(%1174, dtype="int8") /* ty=Tensor[(8, 504, 12), int8] */;
    %1178 = dyn.reshape(%1175, %1176, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1179 = cast(%var_7003, dtype="int64") /* ty=Tensor[(2002), int64] */;
    %1180 = reshape(%1179, newshape=[2002]) /* ty=Tensor[(2002), int64] */;
    %1181 = @func_6800(%1180) /* ty=(float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(2002), int64], Tensor[(1950), float32]) */;
    %1182 = not_equal(%1171, %1172) /* ty=Tensor[(8, 504, 12), bool] */;
    %1183 = minimum(%1177, %1178) /* ty=Tensor[(8, 504, 12), int8] */;
    %1184 = %1181.4;
    (%1182, %1183, %1184, %var_7003)
  };
  %1185(%var_7006, %var_7007, %var_7008) /* ty=(Tensor[(8, 504, 12), bool], Tensor[(8, 504, 12), int8], Tensor[(1950), float32], Tensor[(2002), int64]) */
}

def @func_13328() -> Tensor[(5, 9, 11), uint64] {
  %1186 = @func_9264() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %1186.0
}

def @func_6775() -> (float32, Tensor[(10, 15, 13), float32], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(448, 4), int32]) {
  %1187 = @func_5551() /* ty=(float32,) */;
  %1188 = cast(meta[relay.Constant][97] /* ty=Tensor[(350), int16] */, dtype="int16") /* ty=Tensor[(350), int16] */;
  %1189 = cast(meta[relay.Constant][98] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %1190 = cast(meta[relay.Constant][99] /* ty=Tensor[(448, 4), int32] */, dtype="int32") /* ty=Tensor[(448, 4), int32] */;
  %1191 = reshape(%1188, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), int16] */;
  %1192 = reshape(%1189, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %1193 = reshape(%1190, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %1194 = @func_1194(%1191, %1192, %1193) /* ty=(Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) */;
  %1195 = %1187.0;
  %1196 = %1194.1;
  (%1195, %1196, meta[relay.Constant][97] /* ty=Tensor[(350), int16] */, meta[relay.Constant][98] /* ty=Tensor[(1950), float32] */, meta[relay.Constant][99] /* ty=Tensor[(448, 4), int32] */)
}

def @func_15330() -> (float32, float32, float32) {
  %1202 = fn () -> (float32, float32, float32) {
    %1197 = @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */;
    %1198 = @func_14879() /* ty=(float32, Tensor[(324), int32], float32) */;
    %1199 = @func_13388() /* ty=float32 */;
    %1200 = %1197.2;
    %1201 = %1198.0;
    (%1199, %1200, %1201)
  };
  %1202() /* ty=(float32, float32, float32) */
}

def @func_13885() -> Tensor[(5, 9, 11), uint64] {
  %1203 = @func_10685() /* ty=(float32, Tensor[(5, 9, 11), uint64]) */;
  %1203.1
}

def @func_6632(%var_6628: Tensor[(15, 12, 12), uint64], %var_6629: Tensor[(15, 12, 12), uint64], %var_6630: Tensor[(182), float32], %var_6631: Tensor[(1, 1188), bool]) -> (Tensor[(15, 12, 12), bool], Tensor[(3, 13, 1), bool], Tensor[(182), float32], float64, Tensor[(15, 12, 12), float32], Tensor[(1188), bool], Tensor[(1, 1188), bool]) {
  %1221 = fn (%var_6586: Tensor[(15, 12, 12), uint64], %var_6587: Tensor[(15, 12, 12), uint64], %var_6601: Tensor[(182), float32], %var_6621: Tensor[(1, 1188), bool]) -> (Tensor[(15, 12, 12), bool], Tensor[(3, 13, 1), bool], Tensor[(182), float32], float64, Tensor[(15, 12, 12), float32], Tensor[(1188), bool], Tensor[(1, 1188), bool]) {
    %1204 = cast(%var_6587, dtype="bool") /* ty=Tensor[(15, 12, 12), bool] */;
    %1205 = shape_of(%var_6586, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1206 = cast(%var_6586, dtype="bool") /* ty=Tensor[(15, 12, 12), bool] */;
    %1207 = dyn.reshape(%1204, %1205, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1208 = cast(%var_6601, dtype="float32") /* ty=Tensor[(182), float32] */;
    %1209 = cast(0.28058f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1210 = reshape(%1208, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), float32] */;
    %1211 = reshape(%1209, newshape=[]) /* ty=float64 */;
    %1212 = @func_6354(%1210, %1211) /* ty=(Tensor[(1, 16, 6), float64], float64, Tensor[(48, 2), float64], Tensor[(3, 13, 1), bool], Tensor[(14, 13, 1), float32]) */;
    %1213 = cast(%var_6586, dtype="float32") /* ty=Tensor[(15, 12, 12), float32] */;
    %1214 = cast(%var_6621, dtype="bool") /* ty=Tensor[(1, 1188), bool] */;
    %1215 = reshape(%1214, newshape=[1188]) /* ty=Tensor[(1188), bool] */;
    %1216 = @func_3267(%1215) /* ty=(Tensor[(8, 15, 5), float32], Tensor[(135), float64], Tensor[(1188), bool], Tensor[(1, 135), float64]) */;
    %1217 = less(%1206, %1207) /* ty=Tensor[(15, 12, 12), bool] */;
    %1218 = %1212.3;
    %1219 = sin(%1213) /* ty=Tensor[(15, 12, 12), float32] */;
    %1220 = %1216.2;
    (%1217, %1218, %var_6601, 0.28058f64 /* ty=float64 */, %1219, %1220, %var_6621)
  };
  %1221(%var_6628, %var_6629, %var_6630, %var_6631) /* ty=(Tensor[(15, 12, 12), bool], Tensor[(3, 13, 1), bool], Tensor[(182), float32], float64, Tensor[(15, 12, 12), float32], Tensor[(1188), bool], Tensor[(1, 1188), bool]) */
}

def @func_13330() -> Tensor[(5, 9, 11), uint64] {
  @func_13328() /* ty=Tensor[(5, 9, 11), uint64] */
}

def @func_13887() -> Tensor[(5, 9, 11), uint64] {
  @func_13885() /* ty=Tensor[(5, 9, 11), uint64] */
}

def @func_12080() -> (Tensor[(5, 9, 11), uint64],) {
  %1222 = @func_10922() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %1223 = %1222.0;
  (%1223,)
}

def @func_147(%var_145: Tensor[(9, 15, 1), float64]) -> Tensor[(9, 15, ?), bool] {
  @func_144(%var_145) /* ty=Tensor[(9, 15, ?), bool] */
}

def @func_14879() -> (float32, Tensor[(324), int32], float32) {
  %1224 = @func_7499() /* ty=(float32, Tensor[(324), int32], Tensor[(36), int32], Tensor[(324), int32]) */;
  %1225 = @func_8876() /* ty=float32 */;
  %1226 = %1224.1;
  %1227 = @func_5606() /* ty=float32 */;
  (%1225, %1226, %1227)
}

def @func_5402() -> (Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) {
  @func_5400() /* ty=(Tensor[(6, 7, 12), float64], Tensor[(3, 13, 1), bool], float32, Tensor[(8, 504, 12), bool]) */
}

def @func_9073() -> (Tensor[(5, 9, 11), uint64],) {
  %1228 = @func_7242() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %1229 = %1228.0;
  (%1229,)
}

def @func_14574() -> Tensor[(1792), int32] {
  @func_14572() /* ty=Tensor[(1792), int32] */
}

def @func_12717() -> float32 {
  %1230 = @func_10685() /* ty=(float32, Tensor[(5, 9, 11), uint64]) */;
  %1230.0
}

def @func_6374() -> (Tensor[(5, 9, 11), uint64],) {
  %1231 = @func_5961() /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(495), uint64]) */;
  %1232 = %1231.1;
  (%1232,)
}

def @func_14007() -> (Tensor[(5, 9, 11), float32], Tensor[(1, 16, 6), float64], float32, Tensor[(5, 9, 11), uint64]) {
  %1245 = fn () -> (Tensor[(5, 9, 11), float32], Tensor[(1, 16, 6), float64], float32, Tensor[(5, 9, 11), uint64]) {
    %1233 = @func_12248() /* ty=(float32, float32, Tensor[(504), float64], Tensor[(42), float32]) */;
    %1234 = %1233.0;
    %1235 = @func_10227() /* ty=(Tensor[(5, 9, 11), float32], float32, Tensor[(14, 8, 15), float64]) */;
    %1236 = %1235.0;
    %1237 = cast(%1234, dtype="float32") /* ty=float32 */;
    %1238 = cast(%1236, dtype="float32") /* ty=Tensor[(5, 9, 11), float32] */;
    %1239 = @func_9118() /* ty=(Tensor[(7, 3, 15), float64], Tensor[(1, 16, 6), float64], float64, Tensor[(96), float64]) */;
    %1240 = @func_9164() /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %1241 = add(%1237, %1238) /* ty=Tensor[(5, 9, 11), float32] */;
    %1242 = %1239.1;
    %1243 = @func_8012() /* ty=float32 */;
    %1244 = %1240.0;
    (%1241, %1242, %1243, %1244)
  };
  %1245() /* ty=(Tensor[(5, 9, 11), float32], Tensor[(1, 16, 6), float64], float32, Tensor[(5, 9, 11), uint64]) */
}

def @func_8575(%var_8479: Tensor[(1188), bool], %var_8500: Tensor[(350), int16], %var_8501: Tensor[(1950), float32], %var_8502: Tensor[(4, 448), int32], %var_8506: Tensor[(3, 45), float32], %var_8528: Tensor[(3, 45), float64], %var_8547: Tensor[(3, 45), float32]) -> (float32, Tensor[(135), float64], Tensor[(1188), bool], Tensor[(9, 15, ?), bool], Tensor[(10, 7, 5), int16], Tensor[(350), int16], Tensor[(1950), float32], Tensor[(4, 448), int32], Tensor[(3, 45), int64], Tensor[(3, 45), bool], Tensor[(3, 45), bool]) {
  %1246 = @func_5551() /* ty=(float32,) */;
  %1247 = cast(%var_8479, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %1248 = cast(%var_8479, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %1249 = cast(meta[relay.Constant][100] /* ty=Tensor[(3, 45), float64] */, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
  %1250 = cast(%var_8479, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %1251 = reshape(%1247, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), bool] */;
  %1252 = reshape(%1248, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), bool] */;
  %1253 = reshape(%1249, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %1254 = reshape(%1250, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float32] */;
  %1255 = @func_2918(%1251, %1252, %1253, %1254) /* ty=(Tensor[(9, 15, ?), bool], Tensor[(135), float64], Tensor[(11, 12, 9), float32]) */;
  %1256 = cast(meta[relay.Constant][100] /* ty=Tensor[(3, 45), float64] */, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
  %1257 = reshape(%1256, newshape=[9, 15, 1]) /* ty=Tensor[(9, 15, 1), float64] */;
  %1258 = cast(%var_8500, dtype="int16") /* ty=Tensor[(350), int16] */;
  %1259 = cast(%var_8501, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %1260 = cast(%var_8502, dtype="int32") /* ty=Tensor[(4, 448), int32] */;
  %1261 = reshape(%1258, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), int16] */;
  %1262 = reshape(%1259, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %1263 = reshape(%1260, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %1264 = @func_1194(%1261, %1262, %1263) /* ty=(Tensor[(10, 7, 5), int16], Tensor[(10, 15, 13), float32], Tensor[(1950), float32], Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) */;
  %1265 = cast(meta[relay.Constant][100] /* ty=Tensor[(3, 45), float64] */, dtype="float32") /* ty=Tensor[(3, 45), float32] */;
  %1266 = log10(%1265) /* ty=Tensor[(3, 45), float32] */;
  %1267 = cast(%var_8506, dtype="int64") /* ty=Tensor[(3, 45), int64] */;
  %1268 = shape_of(%1266, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1269 = cast(%1266, dtype="int64") /* ty=Tensor[(3, 45), int64] */;
  %1270 = dyn.reshape(%1267, %1268, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1271 = cast(%1266, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
  %1272 = log2(%1271) /* ty=Tensor[(3, 45), float64] */;
  %1273 = cast(%var_8528, dtype="bool") /* ty=Tensor[(3, 45), bool] */;
  %1274 = shape_of(%1272, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1275 = cast(%1272, dtype="bool") /* ty=Tensor[(3, 45), bool] */;
  %1276 = dyn.reshape(%1273, %1274, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1277 = cast(%1266, dtype="float32") /* ty=Tensor[(3, 45), float32] */;
  %1278 = shape_of(%1272, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1279 = cast(%1272, dtype="float32") /* ty=Tensor[(3, 45), float32] */;
  %1280 = dyn.reshape(%1277, %1278, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1281 = floor_mod(%1279, %1280) /* ty=Tensor[(3, 45), float32] */;
  %1282 = cast(%var_8547, dtype="bool") /* ty=Tensor[(3, 45), bool] */;
  %1283 = shape_of(%1281, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1284 = cast(%1281, dtype="bool") /* ty=Tensor[(3, 45), bool] */;
  %1285 = dyn.reshape(%1282, %1283, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1286 = %1246.0;
  %1287 = %1255.1;
  %1288 = @func_144(%1257) /* ty=Tensor[(9, 15, ?), bool] */;
  %1289 = %1264.0;
  %1290 = multiply(%1269, %1270) /* ty=Tensor[(3, 45), int64] */;
  %1291 = greater(%1275, %1276) /* ty=Tensor[(3, 45), bool] */;
  %1292 = less_equal(%1284, %1285) /* ty=Tensor[(3, 45), bool] */;
  (%1286, %1287, %var_8479, %1288, %1289, %var_8500, %var_8501, %var_8502, %1290, %1291, %1292)
}

def @func_10924() -> (Tensor[(5, 9, 11), uint64],) {
  @func_10922() /* ty=(Tensor[(5, 9, 11), uint64],) */
}

def @func_8862(%var_8842: Tensor[(182), float32]) -> (Tensor[(495), uint64], Tensor[(14, 13, 1), float32], Tensor[(182), float32], float64) {
  %1293 = cast(%var_8842, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1294 = cast(-0.244562f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1295 = reshape(%1293, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), float32] */;
  %1296 = reshape(%1294, newshape=[]) /* ty=float64 */;
  %1297 = @func_6354(%1295, %1296) /* ty=(Tensor[(1, 16, 6), float64], float64, Tensor[(48, 2), float64], Tensor[(3, 13, 1), bool], Tensor[(14, 13, 1), float32]) */;
  %1298 = @func_6002() /* ty=Tensor[(495), uint64] */;
  %1299 = %1297.4;
  (%1298, %1299, %var_8842, -0.244562f64 /* ty=float64 */)
}

def @func_10686() -> (float32, Tensor[(5, 9, 11), uint64]) {
  %1304 = fn () -> (float32, Tensor[(5, 9, 11), uint64]) {
    %1300 = @func_5551() /* ty=(float32,) */;
    %1301 = @func_9148() /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %1302 = %1300.0;
    %1303 = %1301.0;
    (%1302, %1303)
  };
  %1304() /* ty=(float32, Tensor[(5, 9, 11), uint64]) */
}

def @func_13377() -> Tensor[(1950), float32] {
  %1305 = fn () -> Tensor[(1950), float32] {
    @func_12536() /* ty=Tensor[(1950), float32] */
  };
  %1305() /* ty=Tensor[(1950), float32] */
}

def @func_12758() -> (Tensor[(14, 8, 15), float64],) {
  @func_12756() /* ty=(Tensor[(14, 8, 15), float64],) */
}

def @func_9265() -> (Tensor[(5, 9, 11), uint64],) {
  %1308 = fn () -> (Tensor[(5, 9, 11), uint64],) {
    %1306 = @func_7242() /* ty=(Tensor[(5, 9, 11), uint64],) */;
    %1307 = %1306.0;
    (%1307,)
  };
  %1308() /* ty=(Tensor[(5, 9, 11), uint64],) */
}

def @func_12626() -> (Tensor[(5, 9, 11), uint64], Tensor[(1, 16, 6), float64], Tensor[(182), float32], float64) {
  %1309 = @func_7242() /* ty=(Tensor[(5, 9, 11), uint64],) */;
  %1310 = cast(meta[relay.Constant][101] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1311 = cast(8.91316f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1312 = reshape(%1310, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), float32] */;
  %1313 = reshape(%1311, newshape=[]) /* ty=float64 */;
  %1314 = @func_6354(%1312, %1313) /* ty=(Tensor[(1, 16, 6), float64], float64, Tensor[(48, 2), float64], Tensor[(3, 13, 1), bool], Tensor[(14, 13, 1), float32]) */;
  %1315 = %1309.0;
  %1316 = %1314.0;
  (%1315, %1316, meta[relay.Constant][101] /* ty=Tensor[(182), float32] */, 8.91316f64 /* ty=float64 */)
}

def @func_13873() -> (float32, Tensor[(1792), int32], Tensor[(1, 117), uint16]) {
  %1327 = fn () -> (float32, Tensor[(1792), int32], Tensor[(1, 117), uint16]) {
    %1317 = cast(meta[relay.Constant][102] /* ty=Tensor[(1, 117), bool] */, dtype="bool") /* ty=Tensor[(1, 117), bool] */;
    %1318 = cast(meta[relay.Constant][103] /* ty=Tensor[(1792), int32] */, dtype="int32") /* ty=Tensor[(1792), int32] */;
    %1319 = reshape(%1317, newshape=[117]) /* ty=Tensor[(117), bool] */;
    %1320 = reshape(%1318, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
    %1321 = @func_9544(%1319, %1320) /* ty=(float32, float32, Tensor[(117), bool], float32, Tensor[(8, 14, 16), int32], Tensor[(1792), int32]) */;
    %1322 = @func_11090() /* ty=float32 */;
    %1323 = cast(%1322, dtype="uint16") /* ty=uint16 */;
    %1324 = cast(meta[relay.Constant][102] /* ty=Tensor[(1, 117), bool] */, dtype="uint16") /* ty=Tensor[(1, 117), uint16] */;
    %1325 = %1321.0;
    %1326 = logical_xor(%1323, %1324) /* ty=Tensor[(1, 117), uint16] */;
    (%1325, meta[relay.Constant][103] /* ty=Tensor[(1792), int32] */, %1326)
  };
  %1327() /* ty=(float32, Tensor[(1792), int32], Tensor[(1, 117), uint16]) */
}

def @func_11145(%var_11110: Tensor[(10, 9, 5), uint16], %var_11123: Tensor[(36), int32], %var_11125: Tensor[(1792), int32], %var_11126: Tensor[(1950, 1), float32]) -> (Tensor[(350), int16], Tensor[(420), float64], Tensor[(36), int32], Tensor[(364), float64], Tensor[(1792), int32], Tensor[(1950, 1), float32], Tensor[(10, 9, 5), uint8], Tensor[(8, 504, 12), bool]) {
  %1328 = cast(meta[relay.Constant][104] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1329 = cast(%var_11123, dtype="int32") /* ty=Tensor[(36), int32] */;
  %1330 = cast(meta[relay.Constant][105] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %1331 = cast(%var_11125, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %1332 = cast(%var_11126, dtype="float32") /* ty=Tensor[(1950, 1), float32] */;
  %1333 = reshape(%1328, newshape=[15, 14, 2]) /* ty=Tensor[(15, 14, 2), float64] */;
  %1334 = reshape(%1329, newshape=[36]) /* ty=Tensor[(36), int32] */;
  %1335 = reshape(%1330, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %1336 = reshape(%1331, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %1337 = reshape(%1332, newshape=[130, 15]) /* ty=Tensor[(130, 15), float32] */;
  %1338 = @func_5492(%1333, %1334, %1335, %1336, %1337) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(1188), bool], Tensor[(36), int32], Tensor[(3, 108), int32], Tensor[(350), int16], Tensor[(364), float64], Tensor[(350), int16], Tensor[(1792), int32], Tensor[(130, 15), float32]) */;
  %1339 = cast(meta[relay.Constant][106] /* ty=Tensor[(10, 9, 5), uint16] */, dtype="float32") /* ty=Tensor[(10, 9, 5), float32] */;
  %1340 = cos(%1339) /* ty=Tensor[(10, 9, 5), float32] */;
  %1341 = cast(meta[relay.Constant][106] /* ty=Tensor[(10, 9, 5), uint16] */, dtype="uint16") /* ty=Tensor[(10, 9, 5), uint16] */;
  %1342 = shape_of(%var_11110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1343 = cast(%var_11110, dtype="uint16") /* ty=Tensor[(10, 9, 5), uint16] */;
  %1344 = dyn.reshape(%1341, %1342, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1345 = bitwise_or(%1343, %1344) /* ty=Tensor[(10, 9, 5), uint16] */;
  %1346 = cast(%1345, dtype="uint8") /* ty=Tensor[(10, 9, 5), uint8] */;
  %1347 = shape_of(%1340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1348 = cast(%1340, dtype="uint8") /* ty=Tensor[(10, 9, 5), uint8] */;
  %1349 = dyn.reshape(%1346, %1347, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1350 = @func_10020() /* ty=(Tensor[(8, 504, 12), bool],) */;
  %1351 = %1338.4;
  %1352 = bitwise_and(%1348, %1349) /* ty=Tensor[(10, 9, 5), uint8] */;
  %1353 = %1350.0;
  (%1351, meta[relay.Constant][104] /* ty=Tensor[(420), float64] */, %var_11123, meta[relay.Constant][105] /* ty=Tensor[(364), float64] */, %var_11125, %var_11126, %1352, %1353)
}

def @func_12960(%var_12939: Tensor[(450), uint16], %var_12941: Tensor[(1792), int32]) -> (float32, Tensor[(8, 504, 12), bool], Tensor[(450), uint16], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(1950), float32]) {
  %1354 = @func_5551() /* ty=(float32,) */;
  %1355 = cast(%var_12939, dtype="uint16") /* ty=Tensor[(450), uint16] */;
  %1356 = cast(meta[relay.Constant][107] /* ty=Tensor[(36), int32] */, dtype="int32") /* ty=Tensor[(36), int32] */;
  %1357 = cast(%var_12941, dtype="int32") /* ty=Tensor[(1792), int32] */;
  %1358 = cast(meta[relay.Constant][108] /* ty=Tensor[(1950), float32] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %1359 = reshape(%1355, newshape=[10, 9, 5]) /* ty=Tensor[(10, 9, 5), uint16] */;
  %1360 = reshape(%1356, newshape=[36]) /* ty=Tensor[(36), int32] */;
  %1361 = reshape(%1357, newshape=[1792]) /* ty=Tensor[(1792), int32] */;
  %1362 = reshape(%1358, newshape=[1950, 1]) /* ty=Tensor[(1950, 1), float32] */;
  %1363 = @func_11145(%1359, %1360, %1361, %1362) /* ty=(Tensor[(350), int16], Tensor[(420), float64], Tensor[(36), int32], Tensor[(364), float64], Tensor[(1792), int32], Tensor[(1950, 1), float32], Tensor[(10, 9, 5), uint8], Tensor[(8, 504, 12), bool]) */;
  %1364 = %1354.0;
  %1365 = %1363.7;
  (%1364, %1365, %var_12939, meta[relay.Constant][107] /* ty=Tensor[(36), int32] */, %var_12941, meta[relay.Constant][108] /* ty=Tensor[(1950), float32] */)
}

def @func_10804(%var_10800: Tensor[(1792), int32], %var_10801: Tensor[(2002), int64], %var_10802: Tensor[(182), float32], %var_10803: Tensor[(117), bool]) -> (float32, Tensor[(5, 9, 11), uint64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool], Tensor[(3, 13, 1), bool]) {
  @func_10798(%var_10800, %var_10801, %var_10802, %var_10803) /* ty=(float32, Tensor[(5, 9, 11), uint64], Tensor[(420), float64], Tensor[(36), int32], Tensor[(1792), int32], Tensor[(2002), int64], Tensor[(182), float32], Tensor[(117), bool], Tensor[(3, 13, 1), bool]) */
}

def @func_11814(%var_11811: Tensor[(1792), int32], %var_11812: Tensor[(117), bool], %var_11813: Tensor[(1280), uint64]) -> (float32, float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(182), float32], Tensor[(1792), int32], Tensor[(182), float32], Tensor[(117), bool], Tensor[(1950), float32], Tensor[(16, 10, 8), bool], Tensor[(1280), uint64], Tensor[(504), float64], Tensor[(1950), float32]) {
  @func_11809(%var_11811, %var_11812, %var_11813) /* ty=(float32, float32, Tensor[(2002), int64], Tensor[(126), int16], Tensor[(182), float32], Tensor[(1792), int32], Tensor[(182), float32], Tensor[(117), bool], Tensor[(1950), float32], Tensor[(16, 10, 8), bool], Tensor[(1280), uint64], Tensor[(504), float64], Tensor[(1950), float32]) */
}

def @func_10196(%var_10194: Tensor[(4, 11, 8), float32], %var_10195: Tensor[(182, 2), float64]) -> (Tensor[(4, 11, 8), float32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(5, 9, 11), uint64], Tensor[(18, 2), int32], Tensor[(420), float64], Tensor[(182, 2), float64], Tensor[(4, 11, 8), float32], Tensor[(495), uint64]) {
  @func_10192(%var_10194, %var_10195) /* ty=(Tensor[(4, 11, 8), float32], Tensor[(3, 3, 13), bool], Tensor[(117), bool], Tensor[(5, 9, 11), uint64], Tensor[(18, 2), int32], Tensor[(420), float64], Tensor[(182, 2), float64], Tensor[(4, 11, 8), float32], Tensor[(495), uint64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen931/build/output.py", line 3751, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:51:47] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


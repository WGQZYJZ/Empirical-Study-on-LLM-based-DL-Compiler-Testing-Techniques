==========mod==========
#[version = "0.0.5"]
def @func_4144() -> Tensor[(13, 9, 4), float32] {
  @func_2387() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_4525() -> Tensor[(13, 9, 4), float32] {
  @func_1973() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_6176() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %0 = @func_5658() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1 = @func_5526() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %2 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %3 = %0.1;
  %4 = %1.2;
  %5 = %2.1;
  (%3, %4, %5)
}

def @func_14888() -> Tensor[(13, 9, 4), float32] {
  %6 = @func_12493() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %6.1
}

def @func_1676() -> Tensor[(13, 9, 4), float32] {
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 9, 4), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  atanh(%7) /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_5804() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %8 = @func_2896() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %9 = @func_1973() /* ty=Tensor[(13, 9, 4), float32] */;
  %10 = %8.0;
  (%9, %10)
}

def @func_14812() -> Tensor[(13, 9, 4), float32] {
  %11 = @func_2790() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %11.0
}

def @func_7517(%var_7497: Tensor[(576), float64], %var_7512: Tensor[(11, 117), float32]) -> (Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(11, 9, 13), float32], Tensor[(11, 117), float32]) {
  %12 = @func_3247() /* ty=(Tensor[(936), uint8],) */;
  %13 = cast(%var_7497, dtype="float64") /* ty=Tensor[(576), float64] */;
  %14 = reshape(%13, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), float64] */;
  %15 = @func_2671(%14) /* ty=(Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(9, 8, 8), float32]) */;
  %16 = @func_4255() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %17 = %16.0;
  %18 = cast(%17, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  %19 = cast(%var_7512, dtype="float32") /* ty=Tensor[(11, 117), float32] */;
  %20 = reshape(%19, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), float32] */;
  %21 = @func_1788(%20) /* ty=(Tensor[(11, 9, 13), float32],) */;
  %22 = @func_3067() /* ty=Tensor[(13, 9, 4), float32] */;
  %23 = %12.0;
  %24 = @func_4391() /* ty=Tensor[(13, 9, 4), float32] */;
  %25 = %15.0;
  %26 = sigmoid(%18) /* ty=Tensor[(13, 9, 4), float32] */;
  %27 = %21.0;
  (%22, %23, %24, %25, %var_7497, %26, %27, %var_7512)
}

def @func_10114() -> Tensor[(13, 9, 4), float32] {
  %28 = @func_4326() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %28.0
}

def @func_16897() -> (Tensor[(13, 9, 4), float32],) {
  %29 = @func_8889() /* ty=Tensor[(13, 9, 4), float32] */;
  (%29,)
}

def @func_16814(%var_16793: Tensor[(6, 10, 10), uint16]) -> (Tensor[(6, 10, 10), bool], Tensor[(6, 10, 10), float64]) {
  %30 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 10, 10), uint16] */, dtype="bool") /* ty=Tensor[(6, 10, 10), bool] */;
  %31 = shape_of(%var_16793, dtype="int32") /* ty=Tensor[(3), int32] */;
  %32 = cast(%var_16793, dtype="bool") /* ty=Tensor[(6, 10, 10), bool] */;
  %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %34 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 10, 10), uint16] */, dtype="float64") /* ty=Tensor[(6, 10, 10), float64] */;
  %35 = greater(%32, %33) /* ty=Tensor[(6, 10, 10), bool] */;
  %36 = cos(%34) /* ty=Tensor[(6, 10, 10), float64] */;
  (%35, %36)
}

def @func_5179() -> (Tensor[(13, 9, 4), float32],) {
  %37 = @func_3067() /* ty=Tensor[(13, 9, 4), float32] */;
  (%37,)
}

def @func_10470() -> (Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) {
  %38 = @func_4586() /* ty=(Tensor[(5, 6, 12), float64],) */;
  %39 = %38.0;
  %40 = cast(%39, dtype="float64") /* ty=Tensor[(5, 6, 12), float64] */;
  %41 = @func_9657() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8]) */;
  %42 = log10(%40) /* ty=Tensor[(5, 6, 12), float64] */;
  %43 = %41.0;
  (%42, %43)
}

def @func_2931() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %44 = @func_2790() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %45 = @func_2827() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %46 = %44.0;
  %47 = %45.1;
  (%46, %47)
}

def @func_1042(%var_1029: Tensor[(5, 8, 4), uint64], %var_1030: Tensor[(5, 8, 4), uint64]) -> Tensor[(5, 8, 4), float32] {
  %48 = cast(%var_1030, dtype="uint64") /* ty=Tensor[(5, 8, 4), uint64] */;
  %49 = shape_of(%var_1029, dtype="int32") /* ty=Tensor[(3), int32] */;
  %50 = cast(%var_1029, dtype="uint64") /* ty=Tensor[(5, 8, 4), uint64] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %52 = left_shift(%50, %51) /* ty=Tensor[(5, 8, 4), uint64] */;
  %53 = cast(%52, dtype="float32") /* ty=Tensor[(5, 8, 4), float32] */;
  log(%53) /* ty=Tensor[(5, 8, 4), float32] */
}

def @func_2790() -> (Tensor[(13, 9, 4), float32],) {
  %54 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  (%54,)
}

def @func_1011(%var_994: uint8, %var_995: Tensor[(2, 6, 1), uint8], %var_1000: Tensor[(288), uint32]) -> (Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) {
  %55 = cast(%var_994, dtype="uint8") /* ty=uint8 */;
  %56 = cast(%var_995, dtype="uint8") /* ty=Tensor[(2, 6, 1), uint8] */;
  %57 = cast(%var_1000, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %58 = reshape(%57, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), uint32] */;
  %59 = logical_xor(%55, %56) /* ty=Tensor[(2, 6, 1), uint8] */;
  %60 = @func_310(%58) /* ty=Tensor[(16, 3, 6), uint32] */;
  (%59, %60, %var_1000)
}

def @func_12305() -> (Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) {
  %61 = @func_3748() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %62 = cast(meta[relay.Constant][2] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %63 = reshape(%62, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), uint32] */;
  %64 = %61.2;
  %65 = @func_310(%63) /* ty=Tensor[(16, 3, 6), uint32] */;
  (%64, %65, meta[relay.Constant][2] /* ty=Tensor[(288), uint32] */)
}

def @func_14897() -> Tensor[(13, 9, 4), float32] {
  %66 = @func_9181() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %66.0
}

def @func_8795() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %67 = @func_6714() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %68 = @func_5024() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %69 = %67.0;
  %70 = %68.0;
  (%69, %70)
}

def @func_3617(%var_3589: Tensor[(36, 16), float64]) -> (Tensor[(13, 12, 2), uint64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(36, 16), int32]) {
  %71 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 12, 2), uint64] */, dtype="uint64") /* ty=Tensor[(13, 12, 2), uint64] */;
  %72 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(13, 12, 2), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %73 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 12, 2), uint64] */, dtype="uint64") /* ty=Tensor[(13, 12, 2), uint64] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %75 = @func_2896() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %76 = cast(%var_3589, dtype="float64") /* ty=Tensor[(36, 16), float64] */;
  %77 = cast(meta[relay.Constant][5] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %78 = reshape(%76, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %79 = reshape(%77, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %80 = @func_2735(%78, %79) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(2, 3, 5), int32], int32, Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) */;
  %81 = %80.6;
  %82 = cast(%var_3589, dtype="float32") /* ty=Tensor[(36, 16), float32] */;
  %83 = cast(%81, dtype="float32") /* ty=float32 */;
  %84 = power(%82, %83) /* ty=Tensor[(36, 16), float32] */;
  %85 = cast(%84, dtype="float32") /* ty=Tensor[(36, 16), float32] */;
  %86 = cos(%85) /* ty=Tensor[(36, 16), float32] */;
  %87 = cast(%86, dtype="float64") /* ty=Tensor[(36, 16), float64] */;
  %88 = sin(%87) /* ty=Tensor[(36, 16), float64] */;
  %89 = cast(%86, dtype="int32") /* ty=Tensor[(36, 16), int32] */;
  %90 = shape_of(%88, dtype="int32") /* ty=Tensor[(2), int32] */;
  %91 = cast(%88, dtype="int32") /* ty=Tensor[(36, 16), int32] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %93 = maximum(%73, %74) /* ty=Tensor[(13, 12, 2), uint64] */;
  %94 = %75.1;
  %95 = subtract(%91, %92) /* ty=Tensor[(36, 16), int32] */;
  (%93, %94, meta[relay.Constant][5] /* ty=Tensor[(12), uint8] */, %95)
}

def @func_11285() -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  %96 = @func_8606() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %97 = %96.0;
  %98 = @func_4518() /* ty=Tensor[(13, 9, 4), float32] */;
  (%97, %98)
}

def @func_5862() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %99 = @func_4255() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %100 = @func_4434() /* ty=Tensor[(13, 9, 4), float32] */;
  %101 = %99.0;
  (%100, %101)
}

def @func_6714() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %102 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %103 = @func_6176() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %104 = %102.0;
  %105 = %103.0;
  (%104, %105)
}

def @func_12246() -> (Tensor[(13, 9, 4), float32],) {
  %106 = @func_9115() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %107 = %106.0;
  (%107,)
}

def @func_8121() -> Tensor[(160), uint64] {
  %108 = @func_7720() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %108.0
}

def @func_14285() -> Tensor[(13, 9, 4), float32] {
  @func_1676() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_6477(%var_6471: Tensor[(288), uint32]) -> (Tensor[(5, 6, 12), float64], uint8, Tensor[(288), uint32]) {
  %109 = @func_4874() /* ty=(Tensor[(5, 6, 12), float64],) */;
  %110 = cast(%var_6471, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %111 = reshape(%110, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %112 = @func_3652(%111) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */;
  %113 = %109.0;
  %114 = %112.2;
  (%113, %114, %var_6471)
}

def @func_12515() -> Tensor[(13, 9, 4), float32] {
  %115 = @func_10286() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
  %115.1
}

def @func_7973() -> Tensor[(13, 9, 4), float32] {
  %116 = @func_2931() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %116.1
}

def @func_12336() -> (Tensor[(13, 9, 4), float32],) {
  %117 = @func_4255() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %118 = %117.0;
  (%118,)
}

def @func_10836(%var_10825: Tensor[(13, 9, 4), float32]) -> (Tensor[(13, 9, 4), uint32], Tensor[(13, 9, 4), float32]) {
  %119 = @func_5775() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) */;
  %120 = %119.1;
  %121 = cast(%var_10825, dtype="uint32") /* ty=Tensor[(13, 9, 4), uint32] */;
  %122 = shape_of(%120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%120, dtype="uint32") /* ty=Tensor[(13, 9, 4), uint32] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %125 = @func_8048() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %126 = right_shift(%123, %124) /* ty=Tensor[(13, 9, 4), uint32] */;
  %127 = %125.1;
  (%126, %127)
}

def @func_15342() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %128 = @func_4075() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %129 = %128.0;
  %130 = @func_7841() /* ty=Tensor[(13, 9, 4), float32] */;
  (%129, %130)
}

def @func_8289() -> (Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(12), uint8]) {
  %131 = @func_7720() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %132 = cast(meta[relay.Constant][6] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %133 = reshape(%132, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %134 = @func_7899(%133) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(12), uint8]) */;
  %135 = %131.1;
  %136 = %134.4;
  (%135, %136, meta[relay.Constant][6] /* ty=Tensor[(12), uint8] */)
}

def @func_5749(%var_5722: Tensor[(7, 14, 13), int8], %var_5723: Tensor[(7, 14, 13), int8], %var_5734: uint8, %var_5736: Tensor[(4, 72), uint32]) -> (Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(4, 72), uint32], Tensor[(7, 14, 13), float32]) {
  %137 = cast(%var_5734, dtype="uint8") /* ty=uint8 */;
  %138 = cast(meta[relay.Constant][7] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %139 = cast(%var_5736, dtype="uint32") /* ty=Tensor[(4, 72), uint32] */;
  %140 = reshape(%137, newshape=[]) /* ty=uint8 */;
  %141 = reshape(%138, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), uint8] */;
  %142 = reshape(%139, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %143 = @func_1011(%140, %141, %142) /* ty=(Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
  %144 = cast(%var_5723, dtype="int8") /* ty=Tensor[(7, 14, 13), int8] */;
  %145 = shape_of(%var_5722, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%var_5722, dtype="int8") /* ty=Tensor[(7, 14, 13), int8] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %148 = add(%146, %147) /* ty=Tensor[(7, 14, 13), int8] */;
  %149 = cast(%148, dtype="float32") /* ty=Tensor[(7, 14, 13), float32] */;
  %150 = %143.1;
  %151 = cos(%149) /* ty=Tensor[(7, 14, 13), float32] */;
  (%150, %var_5734, meta[relay.Constant][7] /* ty=Tensor[(12), uint8] */, %var_5736, %151)
}

def @func_6797(%var_6795: Tensor[(576), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64]) {
  %152 = @func_3547() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %153 = cast(%var_6795, dtype="float64") /* ty=Tensor[(576), float64] */;
  %154 = reshape(%153, newshape=[6, 96]) /* ty=Tensor[(6, 96), float64] */;
  %155 = @func_5631(%154) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(6, 96), bool]) */;
  %156 = %152.0;
  %157 = %155.0;
  (%156, %157, %var_6795)
}

def @func_8194(%var_8151: Tensor[(416), int64], %var_8179: Tensor[(4, 8, 13), float32]) -> (Tensor[(13, 9, 4), float32], Tensor[(416), int64], Tensor[(4, 8, 13), int16]) {
  %158 = @func_7381() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %159 = cast(%var_8151, dtype="int64") /* ty=Tensor[(416), int64] */;
  %160 = cast(%var_8151, dtype="int64") /* ty=Tensor[(416), int64] */;
  %161 = reshape(%159, newshape=[4, 8, 13]) /* ty=Tensor[(4, 8, 13), int64] */;
  %162 = reshape(%160, newshape=[4, 8, 13]) /* ty=Tensor[(4, 8, 13), int64] */;
  %163 = @func_4229(%161, %162) /* ty=(Tensor[(4, 8, 13), float32], Tensor[(7, 8, 2), float32], Tensor[(1, 112), int32], Tensor[(4, 40), uint64], Tensor[(288), uint32], Tensor[(130), bool], Tensor[(1, 12), uint8], Tensor[(4, 8, 13), float32], Tensor[(6, 2), uint8]) */;
  %164 = %163.0;
  %165 = cast(%var_8179, dtype="int16") /* ty=Tensor[(4, 8, 13), int16] */;
  %166 = shape_of(%164, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%164, dtype="int16") /* ty=Tensor[(4, 8, 13), int16] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %169 = %158.1;
  %170 = maximum(%167, %168) /* ty=Tensor[(4, 8, 13), int16] */;
  (%169, %var_8151, %170)
}

def @func_4630() -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  %171 = @func_3547() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %172 = %171.1;
  %173 = @func_4144() /* ty=Tensor[(13, 9, 4), float32] */;
  (%172, %173)
}

def @func_9811() -> Tensor[(13, 9, 4), float32] {
  %174 = @func_9200() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %174.0
}

def @func_6280() -> (Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) {
  %175 = @func_3247() /* ty=(Tensor[(936), uint8],) */;
  %176 = @func_4326() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %177 = @func_4244() /* ty=Tensor[(13, 9, 4), float32] */;
  %178 = %175.0;
  %179 = %176.0;
  (%177, %178, %179)
}

def @func_4017(%var_3999: uint8, %var_4000: Tensor[(3, 4), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 12, 2), uint64], Tensor[(576), float64], uint8, Tensor[(3, 4), uint8], Tensor[(12), uint8], Tensor[(2, 6, 288), int32], Tensor[(16, 3, 6), uint32]) {
  %180 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %181 = cast(meta[relay.Constant][8] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %182 = reshape(%181, newshape=[36, 16]) /* ty=Tensor[(36, 16), float64] */;
  %183 = @func_3617(%182) /* ty=(Tensor[(13, 12, 2), uint64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(36, 16), int32]) */;
  %184 = cast(meta[relay.Constant][8] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %185 = reshape(%184, newshape=[36, 16]) /* ty=Tensor[(36, 16), float64] */;
  %186 = @func_3617(%185) /* ty=(Tensor[(13, 12, 2), uint64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(36, 16), int32]) */;
  %187 = cast(%var_3999, dtype="uint8") /* ty=uint8 */;
  %188 = cast(%var_4000, dtype="uint8") /* ty=Tensor[(3, 4), uint8] */;
  %189 = cast(meta[relay.Constant][9] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %190 = reshape(%187, newshape=[]) /* ty=uint8 */;
  %191 = reshape(%188, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), uint8] */;
  %192 = reshape(%189, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %193 = @func_1011(%190, %191, %192) /* ty=(Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
  %194 = %193.0;
  %195 = cast(meta[relay.Constant][9] /* ty=Tensor[(288), uint32] */, dtype="int32") /* ty=Tensor[(288), int32] */;
  %196 = cast(%194, dtype="int32") /* ty=Tensor[(2, 6, 1), int32] */;
  %197 = cast(%var_3999, dtype="uint8") /* ty=uint8 */;
  %198 = %186.2;
  %199 = cast(%198, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %200 = cast(meta[relay.Constant][9] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %201 = reshape(%197, newshape=[]) /* ty=uint8 */;
  %202 = reshape(%199, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), uint8] */;
  %203 = reshape(%200, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %204 = @func_1011(%201, %202, %203) /* ty=(Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
  %205 = %180.0;
  %206 = %183.0;
  %207 = minimum(%195, %196) /* ty=Tensor[(2, 6, 288), int32] */;
  %208 = %204.1;
  (%205, %206, meta[relay.Constant][8] /* ty=Tensor[(576), float64] */, %var_3999, %var_4000, %198, %207, %208)
}

def @func_10993() -> (Tensor[(13, 9, 4), float32],) {
  %209 = @func_9377() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %210 = %209.0;
  (%210,)
}

def @func_14200(%var_14190: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(12), uint8], Tensor[(5, 6, 12), float64], Tensor[(288), uint32]) {
  %211 = cast(%var_14190, dtype="uint8") /* ty=uint8 */;
  %212 = cast(meta[relay.Constant][10] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %213 = reshape(%211, newshape=[]) /* ty=uint8 */;
  %214 = reshape(%212, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %215 = @func_1748(%213, %214) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) */;
  %216 = cast(meta[relay.Constant][11] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %217 = reshape(%216, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %218 = @func_6477(%217) /* ty=(Tensor[(5, 6, 12), float64], uint8, Tensor[(288), uint32]) */;
  %219 = @func_8081() /* ty=Tensor[(13, 9, 4), float32] */;
  %220 = %215.5;
  %221 = %218.0;
  (%219, %220, %var_14190, meta[relay.Constant][10] /* ty=Tensor[(12), uint8] */, %221, meta[relay.Constant][11] /* ty=Tensor[(288), uint32] */)
}

def @func_14867() -> Tensor[(936), uint8] {
  %222 = @func_10890() /* ty=(Tensor[(936), uint8],) */;
  %222.0
}

def @func_9200() -> (Tensor[(13, 9, 4), float32],) {
  %223 = @func_7253() /* ty=Tensor[(13, 9, 4), float32] */;
  (%223,)
}

def @func_4586() -> (Tensor[(5, 6, 12), float64],) {
  %224 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 6, 12), float64] */, dtype="float64") /* ty=Tensor[(5, 6, 12), float64] */;
  %225 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(5, 6, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 6, 12), float64] */, dtype="float64") /* ty=Tensor[(5, 6, 12), float64] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %228 = power(%226, %227) /* ty=Tensor[(5, 6, 12), float64] */;
  (%228,)
}

def @func_16310() -> Tensor[(13, 9, 4), int16] {
  @func_14276() /* ty=Tensor[(13, 9, 4), int16] */
}

def @func_8692() -> Tensor[(936), uint8] {
  @func_7572() /* ty=Tensor[(936), uint8] */
}

def @func_13458() -> (Tensor[(13, 9, 4), float32],) {
  %229 = @func_3748() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %230 = %229.0;
  (%230,)
}

def @func_13215() -> (Tensor[(6, 11, 9), bool],) {
  %231 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 11, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 9), float32] */;
  %232 = acosh(%231) /* ty=Tensor[(6, 11, 9), float32] */;
  %233 = cast(%232, dtype="bool") /* ty=Tensor[(6, 11, 9), bool] */;
  %234 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(6, 11, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 11, 9), float32] */, dtype="bool") /* ty=Tensor[(6, 11, 9), bool] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %237 = not_equal(%235, %236) /* ty=Tensor[(6, 11, 9), bool] */;
  (%237,)
}

def @func_5658() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %238 = @func_5526() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %239 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  %240 = %238.0;
  (%239, %240)
}

def @func_8618() -> (Tensor[(936), uint8],) {
  %241 = @func_3247() /* ty=(Tensor[(936), uint8],) */;
  %242 = %241.0;
  (%242,)
}

def @func_11938() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(8, 36), uint32], Tensor[(160), uint64]) {
  %243 = @func_2446() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %244 = cast(meta[relay.Constant][15] /* ty=Tensor[(8, 36), uint32] */, dtype="uint32") /* ty=Tensor[(8, 36), uint32] */;
  %245 = reshape(%244, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %246 = @func_6110(%245) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(936), uint8], Tensor[(8, 20), uint64], Tensor[(288), uint32], uint8, uint8) */;
  %247 = @func_8254() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %248 = %243.0;
  %249 = @func_4518() /* ty=Tensor[(13, 9, 4), float32] */;
  %250 = %246.5;
  %251 = %247.0;
  (%248, %249, %250, meta[relay.Constant][15] /* ty=Tensor[(8, 36), uint32] */, %251)
}

def @func_6393(%var_6390: Tensor[(1287), float32]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) {
  %252 = cast(%var_6390, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %253 = reshape(%252, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), float32] */;
  %254 = @func_1788(%253) /* ty=(Tensor[(11, 9, 13), float32],) */;
  %255 = @func_5916() /* ty=Tensor[(13, 9, 4), float32] */;
  %256 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  %257 = %254.0;
  (%255, %256, %257, %var_6390)
}

def @func_10768() -> (Tensor[(13, 9, 4), float32],) {
  %258 = @func_10722() /* ty=Tensor[(13, 9, 4), float32] */;
  (%258,)
}

def @func_2735(%var_2703: Tensor[(576), float64], %var_2708: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(2, 3, 5), int32], int32, Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) {
  %259 = cast(%var_2703, dtype="float64") /* ty=Tensor[(576), float64] */;
  %260 = reshape(%259, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), float64] */;
  %261 = @func_2671(%260) /* ty=(Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(9, 8, 8), float32]) */;
  %262 = cast(%var_2708, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %263 = reshape(%262, newshape=[6, 2]) /* ty=Tensor[(6, 2), uint8] */;
  %264 = @func_2042(%263) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(6, 2), uint8]) */;
  %265 = cast(10 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %266 = reshape(%265, newshape=[]) /* ty=int32 */;
  %267 = @func_1492(%266) /* ty=(Tensor[(2, 3, 5), int32],) */;
  %268 = cast(meta[relay.Constant][16] /* ty=Tensor[(1287), float32] */, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %269 = reshape(%268, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), float32] */;
  %270 = @func_1788(%269) /* ty=(Tensor[(11, 9, 13), float32],) */;
  %271 = @func_1973() /* ty=Tensor[(13, 9, 4), float32] */;
  %272 = %261.2;
  %273 = %264.0;
  %274 = %267.0;
  %275 = %270.0;
  (%271, %272, %var_2703, %273, %var_2708, %274, 10 /* ty=int32 */, %275, meta[relay.Constant][16] /* ty=Tensor[(1287), float32] */)
}

def @func_13198() -> (Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624), float64]) {
  %276 = cast(meta[relay.Constant][17] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %277 = reshape(%276, newshape=[12, 4, 13]) /* ty=Tensor[(12, 4, 13), float64] */;
  %278 = @func_4119(%277) /* ty=(Tensor[(12, 4, 13), float64],) */;
  %279 = @func_13053() /* ty=Tensor[(13, 9, 4), float32] */;
  %280 = %278.0;
  (%279, %280, meta[relay.Constant][17] /* ty=Tensor[(624), float64] */)
}

def @func_14442() -> Tensor[(936), uint8] {
  %281 = @func_10890() /* ty=(Tensor[(936), uint8],) */;
  %281.0
}

def @func_9309() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(576), float64], Tensor[(12), uint8]) {
  %282 = @func_5775() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) */;
  %283 = @func_6176() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %284 = cast(meta[relay.Constant][18] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %285 = cast(meta[relay.Constant][19] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %286 = reshape(%284, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %287 = reshape(%285, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %288 = @func_8969(%286, %287) /* ty=(Tensor[(160), uint64], Tensor[(1287), float32], Tensor[(576), float64], Tensor[(12), uint8]) */;
  %289 = %282.1;
  %290 = @func_7422() /* ty=Tensor[(13, 9, 4), float32] */;
  %291 = %283.1;
  %292 = %288.2;
  (%289, %290, %291, %292, meta[relay.Constant][18] /* ty=Tensor[(576), float64] */, meta[relay.Constant][19] /* ty=Tensor[(12), uint8] */)
}

def @func_8048() -> (Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %293 = @func_3222() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %294 = @func_7295() /* ty=Tensor[(5, 6, 12), float64] */;
  %295 = %293.0;
  %296 = @func_6524() /* ty=Tensor[(13, 9, 4), float32] */;
  (%294, %295, %296)
}

def @func_15182(%var_15172: Tensor[(504), float32]) -> (Tensor[(13, 9, 4), float32], Tensor[(4, 9, 14), float32], Tensor[(504), float32]) {
  %297 = @func_6584() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %298 = cast(%var_15172, dtype="float32") /* ty=Tensor[(504), float32] */;
  %299 = reshape(%298, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float32] */;
  %300 = @func_9616(%299) /* ty=(Tensor[(4, 9, 14), float32], Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %301 = %297.2;
  %302 = %300.0;
  (%301, %302, %var_15172)
}

def @func_13291(%var_13240: Tensor[(576), float64], %var_13276: Tensor[(1344), int32], %var_13277: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(1344), int32], Tensor[(1344), int32], uint8, Tensor[(2, 144), uint32], Tensor[(13, 9, 4), float32]) {
  %303 = @func_8825() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %304 = @func_9334() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %305 = cast(%var_13240, dtype="float64") /* ty=Tensor[(576), float64] */;
  %306 = reshape(%305, newshape=[36, 16]) /* ty=Tensor[(36, 16), float64] */;
  %307 = @func_3617(%306) /* ty=(Tensor[(13, 12, 2), uint64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(36, 16), int32]) */;
  %308 = @func_11938() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(8, 36), uint32], Tensor[(160), uint64]) */;
  %309 = @func_12336() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %310 = cast(%var_13276, dtype="int32") /* ty=Tensor[(1344), int32] */;
  %311 = cast(%var_13277, dtype="uint8") /* ty=uint8 */;
  %312 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 144), uint32] */, dtype="uint32") /* ty=Tensor[(2, 144), uint32] */;
  %313 = reshape(%310, newshape=[1344]) /* ty=Tensor[(1344), int32] */;
  %314 = reshape(%311, newshape=[]) /* ty=uint8 */;
  %315 = reshape(%312, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint32] */;
  %316 = @func_8432(%313, %314, %315) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 7, 12), int32], Tensor[(1344), int32], uint8, Tensor[(4, 72), uint32]) */;
  %317 = @func_2931() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %318 = %303.0;
  %319 = %304.0;
  %320 = %307.2;
  %321 = %308.1;
  %322 = %309.0;
  %323 = %316.2;
  %324 = %317.1;
  (%318, %319, %320, %var_13240, %321, %322, %323, %var_13276, %var_13277, meta[relay.Constant][20] /* ty=Tensor[(2, 144), uint32] */, %324)
}

def @func_7422() -> Tensor[(13, 9, 4), float32] {
  %325 = @func_5393() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float64]) */;
  %325.0
}

def @func_7090() -> Tensor[(13, 9, 4), float32] {
  %326 = @func_3748() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %326.2
}

def @func_9796() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %327 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %328 = @func_5322() /* ty=Tensor[(13, 9, 4), float32] */;
  %329 = %327.1;
  (%328, %329)
}

def @func_13683() -> (Tensor[(13, 9, 4), float32],) {
  %330 = @func_5862() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %331 = %330.0;
  (%331,)
}

def @func_7295() -> Tensor[(5, 6, 12), float64] {
  %332 = @func_4874() /* ty=(Tensor[(5, 6, 12), float64],) */;
  %332.0
}

def @func_8081() -> Tensor[(13, 9, 4), float32] {
  @func_5322() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_4846(%var_4843: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12, 1), uint8]) {
  %333 = @func_4075() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %334 = @func_4630() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %335 = %334.0;
  %336 = cast(%335, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %337 = cast(%335, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %338 = reshape(%336, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %339 = reshape(%337, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %340 = cast(%var_4843, dtype="uint8") /* ty=uint8 */;
  %341 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 1), uint8] */, dtype="uint8") /* ty=Tensor[(12, 1), uint8] */;
  %342 = reshape(%340, newshape=[]) /* ty=uint8 */;
  %343 = reshape(%341, newshape=[3, 4]) /* ty=Tensor[(3, 4), uint8] */;
  %344 = @func_4017(%342, %343) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 12, 2), uint64], Tensor[(576), float64], uint8, Tensor[(3, 4), uint8], Tensor[(12), uint8], Tensor[(2, 6, 288), int32], Tensor[(16, 3, 6), uint32]) */;
  %345 = %333.0;
  %346 = @func_1042(%338, %339) /* ty=Tensor[(5, 8, 4), float32] */;
  %347 = %344.7;
  (%345, %335, %346, %347, %var_4843, meta[relay.Constant][21] /* ty=Tensor[(12, 1), uint8] */)
}

def @func_15484() -> (Tensor[(16, 8, 12), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %348 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 8, 12), float32] */, dtype="float32") /* ty=Tensor[(16, 8, 12), float32] */;
  %349 = exp(%348) /* ty=Tensor[(16, 8, 12), float32] */;
  %350 = @func_3664() /* ty=Tensor[(13, 9, 4), float32] */;
  %351 = @func_2387() /* ty=Tensor[(13, 9, 4), float32] */;
  (%349, %350, %351)
}

def @func_14758(%var_14634: Tensor[(288), uint32], %var_14635: Tensor[(1344), int32], %var_14636: uint8, %var_14666: Tensor[(2, 624), float64], %var_14711: Tensor[(2, 624), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(1344), int32], Tensor[(504), float32], Tensor[(13, 9, 4), float32], Tensor[(2, 624), bool], Tensor[(2, 624), bool], Tensor[(2, 624), float32]) {
  %352 = @func_9309() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(576), float64], Tensor[(12), uint8]) */;
  %353 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 624), float64] */, dtype="float64") /* ty=Tensor[(1, 624), float64] */;
  %354 = cast(%var_14634, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %355 = cast(%var_14635, dtype="int32") /* ty=Tensor[(1344), int32] */;
  %356 = cast(%var_14636, dtype="uint8") /* ty=uint8 */;
  %357 = reshape(%353, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %358 = reshape(%354, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %359 = reshape(%355, newshape=[1344]) /* ty=Tensor[(1344), int32] */;
  %360 = reshape(%356, newshape=[]) /* ty=uint8 */;
  %361 = @func_8752(%357, %358, %359, %360) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624), int8], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(4, 72), uint32], Tensor[(1344), int32], uint8, Tensor[(13, 9, 4), float32]) */;
  %362 = cast(%var_14636, dtype="uint8") /* ty=uint8 */;
  %363 = reshape(%362, newshape=[]) /* ty=uint8 */;
  %364 = @func_11762(%363) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], uint8, Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(504), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %365 = cast(%var_14666, dtype="bool") /* ty=Tensor[(2, 624), bool] */;
  %366 = cast(%var_14636, dtype="bool") /* ty=bool */;
  %367 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 624), float64] */, dtype="float64") /* ty=Tensor[(1, 624), float64] */;
  %368 = tan(%367) /* ty=Tensor[(1, 624), float64] */;
  %369 = cast(%368, dtype="bool") /* ty=Tensor[(1, 624), bool] */;
  %370 = cast(%var_14666, dtype="bool") /* ty=Tensor[(2, 624), bool] */;
  %371 = equal(%369, %370) /* ty=Tensor[(2, 624), bool] */;
  %372 = cast(%371, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
  %373 = log10(%372) /* ty=Tensor[(2, 624), float64] */;
  %374 = cast(%var_14711, dtype="bool") /* ty=Tensor[(2, 624), bool] */;
  %375 = shape_of(%373, dtype="int32") /* ty=Tensor[(2), int32] */;
  %376 = cast(%373, dtype="bool") /* ty=Tensor[(2, 624), bool] */;
  %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %378 = cast(%373, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
  %379 = sin(%378) /* ty=Tensor[(2, 624), float64] */;
  %380 = cast(%379, dtype="float32") /* ty=Tensor[(2, 624), float32] */;
  %381 = erf(%380) /* ty=Tensor[(2, 624), float32] */;
  %382 = cast(%381, dtype="float32") /* ty=Tensor[(2, 624), float32] */;
  %383 = cast(%var_14636, dtype="float32") /* ty=float32 */;
  %384 = %352.1;
  %385 = %361.10;
  %386 = %364.8;
  %387 = @func_10114() /* ty=Tensor[(13, 9, 4), float32] */;
  %388 = greater_equal(%365, %366) /* ty=Tensor[(2, 624), bool] */;
  %389 = less(%376, %377) /* ty=Tensor[(2, 624), bool] */;
  %390 = subtract(%382, %383) /* ty=Tensor[(2, 624), float32] */;
  (%384, %385, %var_14634, %var_14635, %386, %387, %388, %389, %390)
}

def @func_15670() -> (Tensor[(936), uint8],) {
  %391 = @func_14867() /* ty=Tensor[(936), uint8] */;
  (%391,)
}

def @func_2378(%var_2347: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) {
  %392 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %393 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %394 = cast(%var_2347, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %395 = reshape(%394, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), uint32] */;
  %396 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %397 = %392.0;
  %398 = %393.0;
  %399 = @func_310(%395) /* ty=Tensor[(16, 3, 6), uint32] */;
  %400 = %396.0;
  (%397, %398, %399, %var_2347, %400)
}

def @func_3060(%var_3033: Tensor[(6, 2), uint8], %var_3046: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(6, 2), uint8], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(5, 8, 4), float32], Tensor[(2, 56), int32], Tensor[(160), uint64]) {
  %401 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %402 = cast(meta[relay.Constant][24] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %403 = cast(%var_3033, dtype="uint8") /* ty=Tensor[(6, 2), uint8] */;
  %404 = reshape(%402, newshape=[]) /* ty=uint8 */;
  %405 = reshape(%403, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %406 = @func_1748(%404, %405) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) */;
  %407 = cast(%var_3046, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %408 = reshape(%407, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %409 = @func_2378(%408) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */;
  %410 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 56), int32] */, dtype="int32") /* ty=Tensor[(2, 56), int32] */;
  %411 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 56), int32] */, dtype="int32") /* ty=Tensor[(2, 56), int32] */;
  %412 = cast(meta[relay.Constant][26] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %413 = reshape(%410, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), int32] */;
  %414 = reshape(%411, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), int32] */;
  %415 = reshape(%412, newshape=[8, 20]) /* ty=Tensor[(8, 20), uint64] */;
  %416 = @func_1841(%413, %414, %415) /* ty=(Tensor[(7, 8, 2), bool], Tensor[(7, 8, 2), float32], Tensor[(5, 8, 4), float32], Tensor[(8, 20), uint64], uint8, uint8, Tensor[(6, 2), uint8]) */;
  %417 = %401.0;
  %418 = %406.5;
  %419 = @func_2387() /* ty=Tensor[(13, 9, 4), float32] */;
  %420 = %409.1;
  %421 = %416.2;
  (%417, %418, meta[relay.Constant][24] /* ty=uint8 */, %var_3033, %419, %420, %var_3046, %421, meta[relay.Constant][25] /* ty=Tensor[(2, 56), int32] */, meta[relay.Constant][26] /* ty=Tensor[(160), uint64] */)
}

def @func_6006(%var_5987: Tensor[(16, 6, 14), uint16], %var_5988: Tensor[(16, 6, 14), uint16]) -> (Tensor[(16, 6, 14), uint32],) {
  %422 = cast(%var_5988, dtype="bool") /* ty=Tensor[(16, 6, 14), bool] */;
  %423 = shape_of(%var_5987, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(%var_5987, dtype="bool") /* ty=Tensor[(16, 6, 14), bool] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %426 = not_equal(%424, %425) /* ty=Tensor[(16, 6, 14), bool] */;
  %427 = cast(%var_5988, dtype="uint32") /* ty=Tensor[(16, 6, 14), uint32] */;
  %428 = shape_of(%426, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%426, dtype="uint32") /* ty=Tensor[(16, 6, 14), uint32] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %431 = bitwise_or(%429, %430) /* ty=Tensor[(16, 6, 14), uint32] */;
  (%431,)
}

def @func_3836() -> Tensor[(13, 9, 4), float32] {
  @func_3067() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_7675(%var_7648: Tensor[(16, 9, 3), float32]) -> (Tensor[(16, 9, 3), float32], Tensor[(16, 9, 3), float64], Tensor[(13, 9, 4), float32]) {
  %432 = cast(%var_7648, dtype="float32") /* ty=Tensor[(16, 9, 3), float32] */;
  %433 = cast(%var_7648, dtype="float64") /* ty=Tensor[(16, 9, 3), float64] */;
  %434 = sigmoid(%432) /* ty=Tensor[(16, 9, 3), float32] */;
  %435 = sqrt(%433) /* ty=Tensor[(16, 9, 3), float64] */;
  %436 = @func_6055() /* ty=Tensor[(13, 9, 4), float32] */;
  (%434, %435, %436)
}

def @func_9192() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %437 = @func_6949() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %438 = %437.0;
  %439 = @func_4391() /* ty=Tensor[(13, 9, 4), float32] */;
  (%438, %439)
}

def @func_13410(%var_13372: Tensor[(936), uint8]) -> (Tensor[(936), int8], Tensor[(936), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %440 = @func_8692() /* ty=Tensor[(936), uint8] */;
  %441 = cast(%var_13372, dtype="int8") /* ty=Tensor[(936), int8] */;
  %442 = shape_of(%440, dtype="int32") /* ty=Tensor[(1), int32] */;
  %443 = cast(%440, dtype="int8") /* ty=Tensor[(936), int8] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?), int8] */;
  %445 = cast(%var_13372, dtype="float32") /* ty=Tensor[(936), float32] */;
  %446 = cast(meta[relay.Constant][27] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %447 = cast(meta[relay.Constant][27] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %448 = reshape(%446, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %449 = reshape(%447, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %450 = @func_10470() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) */;
  %451 = @func_5526() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %452 = multiply(%443, %444) /* ty=Tensor[(936), int8] */;
  %453 = cos(%445) /* ty=Tensor[(936), float32] */;
  %454 = @func_1042(%448, %449) /* ty=Tensor[(5, 8, 4), float32] */;
  %455 = %450.1;
  %456 = %451.0;
  (%452, %453, %454, meta[relay.Constant][27] /* ty=Tensor[(160), uint64] */, %455, %456)
}

def @func_15649() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %457 = @func_8644() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %458 = @func_5679() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %459 = @func_7253() /* ty=Tensor[(13, 9, 4), float32] */;
  %460 = %457.0;
  %461 = %458.0;
  (%459, %460, %461)
}

def @func_2863(%var_2843: Tensor[(8, 6, 12), int16], %var_2861: Tensor[(288), uint32]) -> (Tensor[(8, 6, 12), int16], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) {
  %462 = cast(meta[relay.Constant][28] /* ty=Tensor[(8, 6, 12), int16] */, dtype="int16") /* ty=Tensor[(8, 6, 12), int16] */;
  %463 = shape_of(%var_2843, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%var_2843, dtype="int16") /* ty=Tensor[(8, 6, 12), int16] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %466 = cast(%var_2861, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %467 = reshape(%466, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %468 = @func_2378(%467) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */;
  %469 = minimum(%464, %465) /* ty=Tensor[(8, 6, 12), int16] */;
  %470 = %468.2;
  (%469, %470, %var_2861)
}

def @func_9844() -> (Tensor[(13, 9, 4), float32],) {
  %471 = @func_7381() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %472 = %471.1;
  (%472,)
}

def @func_4928(%var_4916: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) {
  %473 = @func_4630() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %474 = cast(%var_4916, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %475 = cast(meta[relay.Constant][29] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %476 = reshape(%474, newshape=[6, 2]) /* ty=Tensor[(6, 2), uint8] */;
  %477 = reshape(%475, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %478 = @func_3060(%476, %477) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(6, 2), uint8], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(5, 8, 4), float32], Tensor[(2, 56), int32], Tensor[(160), uint64]) */;
  %479 = @func_2896() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %480 = %473.1;
  %481 = %478.9;
  %482 = %479.0;
  (%480, %481, %var_4916, meta[relay.Constant][29] /* ty=Tensor[(288), uint32] */, %482)
}

def @func_7354() -> (Tensor[(13, 9, 4), float32],) {
  %483 = @func_5179() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %484 = %483.0;
  (%484,)
}

def @main(%var_17086: Tensor[(6, 10, 14), int64], %var_17087: Tensor[(6, 10, 14), int64]) -> (Tensor[(6, 10, 14), bool],) {
  %485 = cast(%var_17087, dtype="bool") /* ty=Tensor[(6, 10, 14), bool] */;
  %486 = shape_of(%var_17086, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(%var_17086, dtype="bool") /* ty=Tensor[(6, 10, 14), bool] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %489 = equal(%487, %488) /* ty=Tensor[(6, 10, 14), bool] */;
  (%489,)
}

def @func_14312() -> (Tensor[(936), uint8],) {
  %490 = @func_3132() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) */;
  %491 = %490.2;
  (%491,)
}

def @func_15149() -> Tensor[(13, 9, 4), float32] {
  %492 = @func_6714() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %492.1
}

def @func_11762(%var_11626: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], uint8, Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(504), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %493 = @func_4815() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %494 = cast(%var_11626, dtype="uint8") /* ty=uint8 */;
  %495 = reshape(%494, newshape=[]) /* ty=uint8 */;
  %496 = @func_4846(%495) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12, 1), uint8]) */;
  %497 = cast(meta[relay.Constant][30] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %498 = reshape(%497, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %499 = @func_6110(%498) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(936), uint8], Tensor[(8, 20), uint64], Tensor[(288), uint32], uint8, uint8) */;
  %500 = cast(meta[relay.Constant][30] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %501 = reshape(%500, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %502 = @func_6477(%501) /* ty=(Tensor[(5, 6, 12), float64], uint8, Tensor[(288), uint32]) */;
  %503 = @func_8606() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %504 = cast(meta[relay.Constant][31] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %505 = reshape(%504, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float32] */;
  %506 = @func_9616(%505) /* ty=(Tensor[(4, 9, 14), float32], Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %507 = %493.1;
  %508 = %496.2;
  %509 = %499.0;
  %510 = %502.1;
  %511 = %503.1;
  %512 = %506.4;
  %513 = @func_10722() /* ty=Tensor[(13, 9, 4), float32] */;
  %514 = @func_10114() /* ty=Tensor[(13, 9, 4), float32] */;
  (%507, %508, %var_11626, %509, meta[relay.Constant][30] /* ty=Tensor[(288), uint32] */, %510, %511, %512, meta[relay.Constant][31] /* ty=Tensor[(504), float32] */, %513, %514)
}

def @func_11460() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %515 = @func_6714() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %516 = @func_6714() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %517 = %515.0;
  %518 = %516.0;
  (%517, %518)
}

def @func_10713() -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %519 = @func_2827() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %520 = @func_8254() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %521 = @func_8874() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
  %522 = %519.0;
  %523 = %520.0;
  %524 = @func_10192() /* ty=Tensor[(13, 9, 4), float32] */;
  %525 = @func_8889() /* ty=Tensor[(13, 9, 4), float32] */;
  %526 = %521.0;
  (%522, %523, %524, %525, %526)
}

def @func_7604() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
  %527 = @func_5526() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %528 = cast(meta[relay.Constant][32] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %529 = reshape(%528, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %530 = @func_2070(%529) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */;
  %531 = %527.1;
  %532 = %530.0;
  (%531, %532, meta[relay.Constant][32] /* ty=Tensor[(160), uint64] */)
}

def @func_7789() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %533 = @func_2790() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %534 = @func_2387() /* ty=Tensor[(13, 9, 4), float32] */;
  %535 = %533.0;
  (%534, %535)
}

def @func_3786() -> (Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), int64], Tensor[(56, 2), int32], Tensor[(936), uint8]) {
  %536 = @func_2827() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %537 = cast(meta[relay.Constant][33] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %538 = reshape(%537, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), uint32] */;
  %539 = @func_310(%538) /* ty=Tensor[(16, 3, 6), uint32] */;
  %540 = cast(meta[relay.Constant][33] /* ty=Tensor[(288), uint32] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %541 = shape_of(%539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%539, dtype="int64") /* ty=Tensor[(16, 3, 6), int64] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %544 = cast(meta[relay.Constant][34] /* ty=Tensor[(936), uint8] */, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %545 = cast(meta[relay.Constant][34] /* ty=Tensor[(936), uint8] */, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %546 = reshape(%544, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), uint8] */;
  %547 = reshape(%545, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), uint8] */;
  %548 = @func_2554(%546, %547) /* ty=(Tensor[(13, 9, 8), uint8], Tensor[(56, 2), int32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32]) */;
  %549 = %536.0;
  %550 = bitwise_or(%542, %543) /* ty=Tensor[(16, 3, 6), int64] */;
  %551 = %548.1;
  (%549, %550, %551, meta[relay.Constant][34] /* ty=Tensor[(936), uint8] */)
}

def @func_5631(%var_5595: Tensor[(6, 96), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(6, 96), bool]) {
  %552 = @func_4326() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %553 = %552.0;
  %554 = cast(%553, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  %555 = reshape(%554, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), float32] */;
  %556 = @func_3452(%555) /* ty=(Tensor[(13, 9, 4), float32],) */;
  %557 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 96), float64] */, dtype="float64") /* ty=Tensor[(6, 96), float64] */;
  %558 = reshape(%557, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), float64] */;
  %559 = @func_2671(%558) /* ty=(Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(9, 8, 8), float32]) */;
  %560 = @func_5179() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %561 = cast(%var_5595, dtype="bool") /* ty=Tensor[(6, 96), bool] */;
  %562 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(6, 96), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %563 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 96), float64] */, dtype="bool") /* ty=Tensor[(6, 96), bool] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %565 = %556.0;
  %566 = %559.1;
  %567 = @func_3836() /* ty=Tensor[(13, 9, 4), float32] */;
  %568 = %560.0;
  %569 = greater(%563, %564) /* ty=Tensor[(6, 96), bool] */;
  (%553, %565, %566, %567, %568, %569)
}

def @func_14050() -> Tensor[(13, 9, 4), float32] {
  %570 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %570.1
}

def @func_16525() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) {
  %571 = @func_7354() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %572 = @func_5893() /* ty=(Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) */;
  %573 = %571.0;
  %574 = %572.0;
  %575 = @func_4244() /* ty=Tensor[(13, 9, 4), float32] */;
  (%573, %574, %575)
}

def @func_12605() -> (Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32]) {
  %576 = @func_9796() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %577 = cast(meta[relay.Constant][36] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %578 = reshape(%577, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %579 = @func_6110(%578) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(936), uint8], Tensor[(8, 20), uint64], Tensor[(288), uint32], uint8, uint8) */;
  %580 = %576.1;
  %581 = %579.1;
  (%580, %581, meta[relay.Constant][36] /* ty=Tensor[(288), uint32] */)
}

def @func_5775() -> (Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) {
  %582 = @func_4718() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32]) */;
  %583 = %582.0;
  %584 = @func_3664() /* ty=Tensor[(13, 9, 4), float32] */;
  (%583, %584)
}

def @func_4874() -> (Tensor[(5, 6, 12), float64],) {
  %585 = @func_4718() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32]) */;
  %586 = %585.0;
  (%586,)
}

def @func_5965(%var_5956: Tensor[(1287), float32]) -> (Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) {
  %587 = @func_2827() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %588 = @func_5893() /* ty=(Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) */;
  %589 = cast(%var_5956, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %590 = reshape(%589, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), float32] */;
  %591 = @func_1788(%590) /* ty=(Tensor[(11, 9, 13), float32],) */;
  %592 = @func_5818() /* ty=Tensor[(13, 9, 4), float64] */;
  %593 = @func_4434() /* ty=Tensor[(13, 9, 4), float32] */;
  %594 = %587.0;
  %595 = %588.1;
  %596 = %591.0;
  (%592, %593, %594, %595, %596, %var_5956)
}

def @func_1492(%var_1485: int32) -> (Tensor[(2, 3, 5), int32],) {
  %597 = cast(%var_1485, dtype="int32") /* ty=int32 */;
  %598 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 3, 5), int32] */, dtype="int32") /* ty=Tensor[(2, 3, 5), int32] */;
  %599 = logical_xor(%597, %598) /* ty=Tensor[(2, 3, 5), int32] */;
  (%599,)
}

def @func_5214(%var_5212: Tensor[(416), int64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(7, 8, 2), float32], Tensor[(416), int64]) {
  %600 = @func_4718() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32]) */;
  %601 = cast(%var_5212, dtype="int64") /* ty=Tensor[(416), int64] */;
  %602 = cast(%var_5212, dtype="int64") /* ty=Tensor[(416), int64] */;
  %603 = reshape(%601, newshape=[4, 8, 13]) /* ty=Tensor[(4, 8, 13), int64] */;
  %604 = reshape(%602, newshape=[4, 8, 13]) /* ty=Tensor[(4, 8, 13), int64] */;
  %605 = @func_4229(%603, %604) /* ty=(Tensor[(4, 8, 13), float32], Tensor[(7, 8, 2), float32], Tensor[(1, 112), int32], Tensor[(4, 40), uint64], Tensor[(288), uint32], Tensor[(130), bool], Tensor[(1, 12), uint8], Tensor[(4, 8, 13), float32], Tensor[(6, 2), uint8]) */;
  %606 = %600.1;
  %607 = @func_4391() /* ty=Tensor[(13, 9, 4), float32] */;
  %608 = %605.1;
  (%606, %607, %608, %var_5212)
}

def @func_16763() -> Tensor[(13, 9, 4), float32] {
  @func_8025() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_3452(%var_3436: Tensor[(13, 9, 4), float32]) -> (Tensor[(13, 9, 4), float32],) {
  %609 = @func_3067() /* ty=Tensor[(13, 9, 4), float32] */;
  %610 = cast(%var_3436, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  %611 = shape_of(%609, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%609, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %614 = mod(%612, %613) /* ty=Tensor[(13, 9, 4), float32] */;
  (%614,)
}

def @func_12169(%var_12136: Tensor[(28, 48), uint16], %var_12142: Tensor[(16, 6, 14), uint32]) -> (Tensor[(13, 9, 4), float64], Tensor[(28, 48), uint16], Tensor[(13, 9, 4), float32], Tensor[(16, 6, 14), float64]) {
  %615 = @func_5393() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float64]) */;
  %616 = @func_5804() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %617 = cast(%var_12136, dtype="uint16") /* ty=Tensor[(28, 48), uint16] */;
  %618 = cast(%var_12136, dtype="uint16") /* ty=Tensor[(28, 48), uint16] */;
  %619 = reshape(%617, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), uint16] */;
  %620 = reshape(%618, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), uint16] */;
  %621 = @func_6006(%619, %620) /* ty=(Tensor[(16, 6, 14), uint32],) */;
  %622 = %621.0;
  %623 = cast(%var_12142, dtype="float64") /* ty=Tensor[(16, 6, 14), float64] */;
  %624 = shape_of(%622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%622, dtype="float64") /* ty=Tensor[(16, 6, 14), float64] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %627 = %615.1;
  %628 = %616.1;
  %629 = power(%625, %626) /* ty=Tensor[(16, 6, 14), float64] */;
  (%627, %var_12136, %628, %629)
}

def @func_4434() -> Tensor[(13, 9, 4), float32] {
  %630 = @func_4326() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %631 = %630.0;
  %632 = cast(%631, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  acos(%632) /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_10890() -> (Tensor[(936), uint8],) {
  %633 = @func_6280() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) */;
  %634 = %633.1;
  (%634,)
}

def @func_7381() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %635 = @func_7090() /* ty=Tensor[(13, 9, 4), float32] */;
  %636 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  (%635, %636)
}

def @func_12427() -> Tensor[(13, 9, 4), float32] {
  %637 = @func_9192() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %637.0
}

def @func_9536() -> Tensor[(13, 9, 4), float32] {
  %638 = @func_4630() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %638.1
}

def @func_10579() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
  %639 = @func_9377() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %640 = @func_7381() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %641 = @func_5024() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %642 = @func_8254() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %643 = @func_9811() /* ty=Tensor[(13, 9, 4), float32] */;
  %644 = %639.0;
  %645 = %640.0;
  %646 = %641.1;
  %647 = %642.0;
  (%643, %644, %645, %646, %647)
}

def @func_12961(%var_12951: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], uint8, Tensor[(12), uint8], Tensor[(13, 9, 4), float32], Tensor[(6, 12, 5), bool], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32]) {
  %648 = @func_9200() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %649 = cast(meta[relay.Constant][38] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %650 = reshape(%649, newshape=[6, 2]) /* ty=Tensor[(6, 2), uint8] */;
  %651 = @func_2042(%650) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(6, 2), uint8]) */;
  %652 = @func_11810() /* ty=(Tensor[(6, 12, 5), float64], Tensor[(6, 12, 5), bool]) */;
  %653 = @func_9940() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %654 = cast(%var_12951, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %655 = reshape(%654, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %656 = @func_6477(%655) /* ty=(Tensor[(5, 6, 12), float64], uint8, Tensor[(288), uint32]) */;
  %657 = %648.0;
  %658 = %651.2;
  %659 = @func_1973() /* ty=Tensor[(13, 9, 4), float32] */;
  %660 = %652.1;
  %661 = @func_3664() /* ty=Tensor[(13, 9, 4), float32] */;
  %662 = %653.0;
  %663 = %656.2;
  (%657, %658, meta[relay.Constant][38] /* ty=Tensor[(12), uint8] */, %659, %660, %661, %662, %663, %var_12951)
}

def @func_9940() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %664 = @func_9200() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %665 = @func_9657() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8]) */;
  %666 = %664.0;
  %667 = %665.0;
  (%666, %667)
}

def @func_5403(%var_5396: Tensor[(3, 3, 2), int8], %var_5397: Tensor[(3, 3, 2), int8]) -> (Tensor[(3, 3, 2), int8],) {
  %668 = cast(%var_5397, dtype="int8") /* ty=Tensor[(3, 3, 2), int8] */;
  %669 = shape_of(%var_5396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%var_5396, dtype="int8") /* ty=Tensor[(3, 3, 2), int8] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %672 = logical_xor(%670, %671) /* ty=Tensor[(3, 3, 2), int8] */;
  (%672,)
}

def @func_12540() -> (Tensor[(13, 9, 4), float32], uint8, Tensor[(1274), int8]) {
  %673 = @func_9200() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %674 = cast(meta[relay.Constant][39] /* ty=Tensor[(1274), int8] */, dtype="int8") /* ty=Tensor[(1274), int8] */;
  %675 = reshape(%674, newshape=[1274]) /* ty=Tensor[(1274), int8] */;
  %676 = @func_11269(%675) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(1274), int8], uint8, Tensor[(288), uint32], Tensor[(4, 72), float32]) */;
  %677 = %673.0;
  %678 = %676.2;
  (%677, %678, meta[relay.Constant][39] /* ty=Tensor[(1274), int8] */)
}

def @func_16226() -> (Tensor[(13, 9, 4), float32], Tensor[(4, 9, 14), float32], Tensor[(504), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %679 = @func_10713() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %680 = cast(meta[relay.Constant][40] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %681 = reshape(%680, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float32] */;
  %682 = @func_9616(%681) /* ty=(Tensor[(4, 9, 14), float32], Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %683 = @func_10960() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %684 = @func_10470() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) */;
  %685 = %679.4;
  %686 = %682.0;
  %687 = %683.1;
  %688 = %684.1;
  (%685, %686, meta[relay.Constant][40] /* ty=Tensor[(504), float32] */, %687, %688)
}

def @func_14125(%var_14073: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(1344), int32], Tensor[(576), float64], Tensor[(1344), int32], uint8, Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %689 = cast(meta[relay.Constant][41] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %690 = cast(meta[relay.Constant][42] /* ty=Tensor[(1344), int32] */, dtype="int32") /* ty=Tensor[(1344), int32] */;
  %691 = cast(%var_14073, dtype="uint8") /* ty=uint8 */;
  %692 = reshape(%689, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %693 = reshape(%690, newshape=[1344]) /* ty=Tensor[(1344), int32] */;
  %694 = reshape(%691, newshape=[]) /* ty=uint8 */;
  %695 = @func_13291(%692, %693, %694) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(1344), int32], Tensor[(1344), int32], uint8, Tensor[(2, 144), uint32], Tensor[(13, 9, 4), float32]) */;
  %696 = @func_8874() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
  %697 = @func_9811() /* ty=Tensor[(13, 9, 4), float32] */;
  %698 = %695.7;
  %699 = %696.0;
  %700 = @func_10114() /* ty=Tensor[(13, 9, 4), float32] */;
  %701 = @func_4518() /* ty=Tensor[(13, 9, 4), float32] */;
  %702 = @func_8025() /* ty=Tensor[(13, 9, 4), float32] */;
  (%697, %698, meta[relay.Constant][41] /* ty=Tensor[(576), float64] */, meta[relay.Constant][42] /* ty=Tensor[(1344), int32] */, %var_14073, %699, %700, %701, %702)
}

def @func_6644(%var_6640: Tensor[(9, 5, 3), float64]) -> (Tensor[(9, 5, 3), float64],) {
  %703 = cast(%var_6640, dtype="float64") /* ty=Tensor[(9, 5, 3), float64] */;
  %704 = atanh(%703) /* ty=Tensor[(9, 5, 3), float64] */;
  (%704,)
}

def @func_8874() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
  %705 = @func_6280() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) */;
  %706 = @func_6949() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %707 = @func_7720() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %708 = %705.2;
  %709 = %706.0;
  %710 = %707.0;
  (%708, %709, %710)
}

def @func_8752(%var_8702: Tensor[(624), float64], %var_8731: Tensor[(288), uint32], %var_8742: Tensor[(1344), int32], %var_8743: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624), int8], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(4, 72), uint32], Tensor[(1344), int32], uint8, Tensor[(13, 9, 4), float32]) {
  %711 = @func_8644() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %712 = cast(%var_8702, dtype="float64") /* ty=Tensor[(624), float64] */;
  %713 = reshape(%712, newshape=[624, 1]) /* ty=Tensor[(624, 1), float64] */;
  %714 = @func_6313(%713) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624, 1), float64], Tensor[(13, 9, 4), float32]) */;
  %715 = cast(meta[relay.Constant][43] /* ty=Tensor[(624), float64] */, dtype="int8") /* ty=Tensor[(624), int8] */;
  %716 = shape_of(%var_8702, dtype="int32") /* ty=Tensor[(1), int32] */;
  %717 = cast(%var_8702, dtype="int8") /* ty=Tensor[(624), int8] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?), int8] */;
  %719 = @func_5024() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %720 = cast(%var_8731, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %721 = reshape(%720, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %722 = @func_2378(%721) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */;
  %723 = @func_5804() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %724 = cast(%var_8742, dtype="int32") /* ty=Tensor[(1344), int32] */;
  %725 = cast(%var_8743, dtype="uint8") /* ty=uint8 */;
  %726 = %722.3;
  %727 = cast(%726, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %728 = reshape(%724, newshape=[1344]) /* ty=Tensor[(1344), int32] */;
  %729 = reshape(%725, newshape=[]) /* ty=uint8 */;
  %730 = reshape(%727, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint32] */;
  %731 = @func_8432(%728, %729, %730) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 7, 12), int32], Tensor[(1344), int32], uint8, Tensor[(4, 72), uint32]) */;
  %732 = @func_4630() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %733 = %711.0;
  %734 = %714.2;
  %735 = add(%717, %718) /* ty=Tensor[(624), int8] */;
  %736 = %719.1;
  %737 = %723.0;
  %738 = %731.4;
  %739 = %732.1;
  (%733, %734, %735, %736, %726, %var_8731, %737, %738, %var_8742, %var_8743, %739)
}

def @func_5679() -> (Tensor[(13, 9, 4), float32],) {
  %740 = @func_5024() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %741 = %740.1;
  (%741,)
}

def @func_15900() -> Tensor[(13, 9, 4), float32] {
  @func_7422() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_15576() -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
  %742 = @func_7604() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
  %743 = %742.0;
  %744 = @func_12388() /* ty=Tensor[(160), uint64] */;
  (%743, %744)
}

def @func_4326() -> (Tensor[(13, 9, 4), float32],) {
  %745 = @func_3748() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %746 = %745.0;
  (%746,)
}

def @func_8254() -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
  %747 = @func_3547() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %748 = @func_8121() /* ty=Tensor[(160), uint64] */;
  %749 = %747.1;
  (%748, %749)
}

def @func_16401() -> (Tensor[(13, 9, 4), float32],) {
  %750 = @func_7253() /* ty=Tensor[(13, 9, 4), float32] */;
  (%750,)
}

def @func_11468() -> Tensor[(13, 9, 4), int16] {
  %751 = @func_4666() /* ty=(Tensor[(13, 9, 4), int16],) */;
  %751.0
}

def @func_3247() -> (Tensor[(936), uint8],) {
  %752 = @func_3132() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) */;
  %753 = %752.2;
  (%753,)
}

def @func_4255() -> (Tensor[(13, 9, 4), float32],) {
  %754 = @func_3067() /* ty=Tensor[(13, 9, 4), float32] */;
  (%754,)
}

def @func_11269(%var_11238: Tensor[(1274), int8]) -> (Tensor[(13, 9, 4), float32], Tensor[(1274), int8], uint8, Tensor[(288), uint32], Tensor[(4, 72), float32]) {
  %755 = @func_10470() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) */;
  %756 = cast(%var_11238, dtype="int8") /* ty=Tensor[(1274), int8] */;
  %757 = cast(%var_11238, dtype="int8") /* ty=Tensor[(1274), int8] */;
  %758 = cast(meta[relay.Constant][44] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %759 = cast(meta[relay.Constant][45] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %760 = reshape(%756, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int8] */;
  %761 = reshape(%757, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int8] */;
  %762 = reshape(%758, newshape=[]) /* ty=uint8 */;
  %763 = reshape(%759, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint32] */;
  %764 = @func_5749(%760, %761, %762, %763) /* ty=(Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(4, 72), uint32], Tensor[(7, 14, 13), float32]) */;
  %765 = %764.3;
  %766 = cast(%765, dtype="float32") /* ty=Tensor[(4, 72), float32] */;
  %767 = %755.1;
  %768 = atan(%766) /* ty=Tensor[(4, 72), float32] */;
  (%767, %var_11238, meta[relay.Constant][44] /* ty=uint8 */, meta[relay.Constant][45] /* ty=Tensor[(288), uint32] */, %768)
}

def @func_2962(%var_2955: Tensor[(160), uint64]) -> (Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) {
  %769 = @func_2931() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %770 = cast(%var_2955, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %771 = cast(%var_2955, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %772 = reshape(%770, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %773 = reshape(%771, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %774 = %769.0;
  %775 = @func_1042(%772, %773) /* ty=Tensor[(5, 8, 4), float32] */;
  (%774, %775, %var_2955)
}

def @func_3222() -> (Tensor[(13, 9, 4), float32],) {
  %776 = @func_1973() /* ty=Tensor[(13, 9, 4), float32] */;
  (%776,)
}

def @func_7720() -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  %777 = @func_3547() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %778 = @func_4326() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %779 = %777.2;
  %780 = %778.0;
  (%779, %780)
}

def @func_16950() -> (Tensor[(13, 9, 4), float32],) {
  %781 = @func_13458() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %782 = %781.0;
  (%782,)
}

def @func_7841() -> Tensor[(13, 9, 4), float32] {
  @func_6524() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_2387() -> Tensor[(13, 9, 4), float32] {
  %783 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %783.0
}

def @func_15412(%var_15409: Tensor[(11, 14, 14), float64]) -> Tensor[(11, 14, 14), float64] {
  %784 = cast(%var_15409, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  erf(%784) /* ty=Tensor[(11, 14, 14), float64] */
}

def @func_9115() -> (Tensor[(13, 9, 4), float32],) {
  %785 = @func_4075() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %786 = %785.0;
  (%786,)
}

def @func_10192() -> Tensor[(13, 9, 4), float32] {
  %787 = @func_8920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %787.0
}

def @func_3067() -> Tensor[(13, 9, 4), float32] {
  %788 = @func_2827() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %788.1
}

def @func_14276() -> Tensor[(13, 9, 4), int16] {
  @func_11468() /* ty=Tensor[(13, 9, 4), int16] */
}

def @func_4718() -> (Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32]) {
  %789 = @func_4586() /* ty=(Tensor[(5, 6, 12), float64],) */;
  %790 = cast(meta[relay.Constant][46] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %791 = reshape(%790, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %792 = @func_3652(%791) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */;
  %793 = %789.0;
  %794 = %792.0;
  (%793, %794, meta[relay.Constant][46] /* ty=Tensor[(288), uint32] */)
}

def @func_4119(%var_4115: Tensor[(12, 4, 13), float64]) -> (Tensor[(12, 4, 13), float64],) {
  %795 = cast(%var_4115, dtype="float64") /* ty=Tensor[(12, 4, 13), float64] */;
  %796 = log(%795) /* ty=Tensor[(12, 4, 13), float64] */;
  (%796,)
}

def @func_5818() -> Tensor[(13, 9, 4), float64] {
  %797 = @func_5658() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %798 = %797.0;
  %799 = cast(%798, dtype="float64") /* ty=Tensor[(13, 9, 4), float64] */;
  log2(%799) /* ty=Tensor[(13, 9, 4), float64] */
}

def @func_13505(%var_13476: Tensor[(3, 16, 8), uint8], %var_13477: Tensor[(3, 16, 8), uint8]) -> (Tensor[(3, 16, 8), uint8], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
  %800 = cast(%var_13477, dtype="uint8") /* ty=Tensor[(3, 16, 8), uint8] */;
  %801 = shape_of(%var_13476, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%var_13476, dtype="uint8") /* ty=Tensor[(3, 16, 8), uint8] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %804 = @func_9334() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %805 = @func_12493() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %806 = multiply(%802, %803) /* ty=Tensor[(3, 16, 8), uint8] */;
  %807 = %804.0;
  %808 = @func_10136() /* ty=Tensor[(13, 9, 4), float32] */;
  %809 = %805.0;
  (%806, %807, %808, %809)
}

def @func_13018() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %810 = @func_9657() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8]) */;
  %811 = @func_4434() /* ty=Tensor[(13, 9, 4), float32] */;
  %812 = %810.0;
  (%811, %812)
}

def @func_16758() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(2, 288), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) {
  %813 = @func_15605() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %814 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 288), float64] */, dtype="float64") /* ty=Tensor[(2, 288), float64] */;
  %815 = reshape(%814, newshape=[12, 48]) /* ty=Tensor[(12, 48), float64] */;
  %816 = @func_15759(%815) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(12, 48), float64]) */;
  %817 = cast(meta[relay.Constant][48] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %818 = reshape(%817, newshape=[24, 12]) /* ty=Tensor[(24, 12), uint32] */;
  %819 = @func_12747(%818) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(24, 12), uint32], Tensor[(13, 9, 4), float32]) */;
  %820 = @func_2446() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %821 = %813.0;
  %822 = %816.0;
  %823 = %819.1;
  %824 = %820.0;
  (%821, %822, meta[relay.Constant][47] /* ty=Tensor[(2, 288), float64] */, %823, meta[relay.Constant][48] /* ty=Tensor[(288), uint32] */, %824)
}

def @func_11843() -> (Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(504), float32]) {
  %825 = cast(meta[relay.Constant][49] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %826 = reshape(%825, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float32] */;
  %827 = @func_9616(%826) /* ty=(Tensor[(4, 9, 14), float32], Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %828 = @func_10192() /* ty=Tensor[(13, 9, 4), float32] */;
  %829 = %827.2;
  (%828, %829, meta[relay.Constant][49] /* ty=Tensor[(504), float32] */)
}

def @func_3652(%var_3647: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) {
  %830 = @func_2931() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %831 = cast(meta[relay.Constant][50] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %832 = cast(meta[relay.Constant][51] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %833 = cast(%var_3647, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %834 = reshape(%831, newshape=[]) /* ty=uint8 */;
  %835 = reshape(%832, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), uint8] */;
  %836 = reshape(%833, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %837 = @func_1011(%834, %835, %836) /* ty=(Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
  %838 = @func_2790() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %839 = %830.0;
  %840 = %837.1;
  %841 = %838.0;
  (%839, %840, meta[relay.Constant][50] /* ty=uint8 */, meta[relay.Constant][51] /* ty=Tensor[(12), uint8] */, %var_3647, %841)
}

def @func_12018() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %842 = @func_9844() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %843 = %842.0;
  %844 = @func_3836() /* ty=Tensor[(13, 9, 4), float32] */;
  (%843, %844)
}

def @func_14346(%var_14344: Tensor[(6, 96), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(6, 96), float64]) {
  %845 = cast(%var_14344, dtype="float64") /* ty=Tensor[(6, 96), float64] */;
  %846 = reshape(%845, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %847 = @func_6797(%846) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64]) */;
  %848 = @func_6524() /* ty=Tensor[(13, 9, 4), float32] */;
  %849 = %847.0;
  (%848, %849, %var_14344)
}

def @func_14827() -> Tensor[(13, 9, 4), int16] {
  %850 = @func_4666() /* ty=(Tensor[(13, 9, 4), int16],) */;
  %850.0
}

def @func_11539() -> Tensor[(936), uint8] {
  %851 = @func_3132() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) */;
  %851.2
}

def @func_16147() -> Tensor[(13, 9, 4), float32] {
  %852 = @func_12336() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %852.0
}

def @func_5526() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %853 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %854 = @func_2896() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %855 = @func_5179() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %856 = %853.1;
  %857 = %854.1;
  %858 = %855.0;
  %859 = @func_5322() /* ty=Tensor[(13, 9, 4), float32] */;
  (%856, %857, %858, %859)
}

def @func_10615() -> (Tensor[(13, 9, 4), float32],) {
  %860 = @func_9796() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %861 = %860.1;
  (%861,)
}

def @func_16706() -> (Tensor[(936), uint8],) {
  %862 = @func_14442() /* ty=Tensor[(936), uint8] */;
  (%862,)
}

def @func_4244() -> Tensor[(13, 9, 4), float32] {
  @func_4144() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_7139(%var_7126: uint8, %var_7127: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(13, 9, 4), float32]) {
  %863 = @func_5862() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %864 = cast(%var_7126, dtype="uint8") /* ty=uint8 */;
  %865 = cast(%var_7127, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %866 = reshape(%864, newshape=[]) /* ty=uint8 */;
  %867 = reshape(%865, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %868 = @func_1748(%866, %867) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) */;
  %869 = @func_2446() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %870 = %863.1;
  %871 = %868.1;
  %872 = %869.0;
  (%870, %871, %var_7126, %var_7127, %872)
}

def @func_2042(%var_2033: Tensor[(6, 2), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(6, 2), uint8]) {
  %873 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %874 = cast(meta[relay.Constant][52] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %875 = cast(%var_2033, dtype="uint8") /* ty=Tensor[(6, 2), uint8] */;
  %876 = reshape(%874, newshape=[]) /* ty=uint8 */;
  %877 = reshape(%875, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %878 = @func_1748(%876, %877) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) */;
  %879 = %873.0;
  %880 = %878.4;
  (%879, %880, meta[relay.Constant][52] /* ty=uint8 */, %var_2033)
}

def @func_2446() -> (Tensor[(13, 9, 4), float32],) {
  %881 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %882 = %881.0;
  %883 = cast(%882, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  %884 = tan(%883) /* ty=Tensor[(13, 9, 4), float32] */;
  (%884,)
}

def @func_6234(%var_6206: Tensor[(16, 7, 12), int32], %var_6207: Tensor[(16, 7, 12), int32], %var_6218: uint8, %var_6220: Tensor[(288), uint32]) -> (Tensor[(16, 7, 12), int32], Tensor[(288), uint32], uint8, Tensor[(1, 12), uint8], Tensor[(288), uint32]) {
  %885 = cast(%var_6207, dtype="int32") /* ty=Tensor[(16, 7, 12), int32] */;
  %886 = shape_of(%var_6206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(%var_6206, dtype="int32") /* ty=Tensor[(16, 7, 12), int32] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %889 = cast(%var_6218, dtype="uint8") /* ty=uint8 */;
  %890 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 12), uint8] */, dtype="uint8") /* ty=Tensor[(1, 12), uint8] */;
  %891 = cast(%var_6220, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %892 = reshape(%889, newshape=[]) /* ty=uint8 */;
  %893 = reshape(%890, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), uint8] */;
  %894 = reshape(%891, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %895 = @func_1011(%892, %893, %894) /* ty=(Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
  %896 = right_shift(%887, %888) /* ty=Tensor[(16, 7, 12), int32] */;
  %897 = %895.2;
  (%896, %897, %var_6218, meta[relay.Constant][53] /* ty=Tensor[(1, 12), uint8] */, %var_6220)
}

def @func_10136() -> Tensor[(13, 9, 4), float32] {
  %898 = @func_5179() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %898.0
}

def @func_2554(%var_2534: Tensor[(13, 9, 8), uint8], %var_2535: Tensor[(13, 9, 8), uint8]) -> (Tensor[(13, 9, 8), uint8], Tensor[(56, 2), int32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32]) {
  %899 = cast(%var_2535, dtype="uint8") /* ty=Tensor[(13, 9, 8), uint8] */;
  %900 = shape_of(%var_2534, dtype="int32") /* ty=Tensor[(3), int32] */;
  %901 = cast(%var_2534, dtype="uint8") /* ty=Tensor[(13, 9, 8), uint8] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %903 = cast(meta[relay.Constant][54] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %904 = reshape(%903, newshape=[80, 2]) /* ty=Tensor[(80, 2), uint64] */;
  %905 = @func_2463(%904) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(8, 20), uint64], Tensor[(56, 2), int32], Tensor[(80, 2), uint64], Tensor[(13, 9, 4), float32]) */;
  %906 = cast(meta[relay.Constant][54] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %907 = cast(meta[relay.Constant][54] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %908 = reshape(%906, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %909 = reshape(%907, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %910 = add(%901, %902) /* ty=Tensor[(13, 9, 8), uint8] */;
  %911 = %905.2;
  %912 = @func_1042(%908, %909) /* ty=Tensor[(5, 8, 4), float32] */;
  (%910, %911, meta[relay.Constant][54] /* ty=Tensor[(160), uint64] */, %912)
}

def @func_4666() -> (Tensor[(13, 9, 4), int16],) {
  %913 = @func_2931() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %914 = %913.0;
  %915 = @func_3222() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %916 = %915.0;
  %917 = cast(%916, dtype="int16") /* ty=Tensor[(13, 9, 4), int16] */;
  %918 = shape_of(%914, dtype="int32") /* ty=Tensor[(3), int32] */;
  %919 = cast(%914, dtype="int16") /* ty=Tensor[(13, 9, 4), int16] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %921 = left_shift(%919, %920) /* ty=Tensor[(13, 9, 4), int16] */;
  (%921,)
}

def @func_6110(%var_6088: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(936), uint8], Tensor[(8, 20), uint64], Tensor[(288), uint32], uint8, uint8) {
  %922 = @func_5893() /* ty=(Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) */;
  %923 = cast(meta[relay.Constant][55] /* ty=Tensor[(936), uint8] */, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %924 = cast(meta[relay.Constant][56] /* ty=Tensor[(8, 20), uint64] */, dtype="uint64") /* ty=Tensor[(8, 20), uint64] */;
  %925 = cast(%var_6088, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %926 = reshape(%923, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), uint8] */;
  %927 = reshape(%924, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %928 = reshape(%925, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %929 = @func_3205(%926, %927, %928) /* ty=(Tensor[(13, 9, 8), uint16], Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(8, 6, 12), int16], Tensor[(576), int16], Tensor[(288), uint32], Tensor[(288), uint32], Tensor[(12), uint8], Tensor[(13, 9, 4), int32]) */;
  %930 = cast(meta[relay.Constant][57] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %931 = reshape(%930, newshape=[]) /* ty=uint8 */;
  %932 = @func_4846(%931) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12, 1), uint8]) */;
  %933 = %922.1;
  %934 = %929.5;
  %935 = %932.4;
  (%933, %934, meta[relay.Constant][55] /* ty=Tensor[(936), uint8] */, meta[relay.Constant][56] /* ty=Tensor[(8, 20), uint64] */, %var_6088, %935, meta[relay.Constant][57] /* ty=uint8 */)
}

def @func_4229(%var_4175: Tensor[(4, 8, 13), int64], %var_4176: Tensor[(4, 8, 13), int64]) -> (Tensor[(4, 8, 13), float32], Tensor[(7, 8, 2), float32], Tensor[(1, 112), int32], Tensor[(4, 40), uint64], Tensor[(288), uint32], Tensor[(130), bool], Tensor[(1, 12), uint8], Tensor[(4, 8, 13), float32], Tensor[(6, 2), uint8]) {
  %936 = cast(%var_4176, dtype="int64") /* ty=Tensor[(4, 8, 13), int64] */;
  %937 = shape_of(%var_4175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %938 = cast(%var_4175, dtype="int64") /* ty=Tensor[(4, 8, 13), int64] */;
  %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %940 = bitwise_and(%938, %939) /* ty=Tensor[(4, 8, 13), int64] */;
  %941 = cast(%940, dtype="float64") /* ty=Tensor[(4, 8, 13), float64] */;
  %942 = shape_of(%var_4175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %943 = cast(%var_4175, dtype="float64") /* ty=Tensor[(4, 8, 13), float64] */;
  %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %945 = mod(%943, %944) /* ty=Tensor[(4, 8, 13), float64] */;
  %946 = cast(%945, dtype="float32") /* ty=Tensor[(4, 8, 13), float32] */;
  %947 = cast(meta[relay.Constant][58] /* ty=Tensor[(1, 112), int32] */, dtype="int32") /* ty=Tensor[(1, 112), int32] */;
  %948 = cast(meta[relay.Constant][58] /* ty=Tensor[(1, 112), int32] */, dtype="int32") /* ty=Tensor[(1, 112), int32] */;
  %949 = cast(meta[relay.Constant][59] /* ty=Tensor[(4, 40), uint64] */, dtype="uint64") /* ty=Tensor[(4, 40), uint64] */;
  %950 = reshape(%947, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), int32] */;
  %951 = reshape(%948, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), int32] */;
  %952 = reshape(%949, newshape=[8, 20]) /* ty=Tensor[(8, 20), uint64] */;
  %953 = @func_1841(%950, %951, %952) /* ty=(Tensor[(7, 8, 2), bool], Tensor[(7, 8, 2), float32], Tensor[(5, 8, 4), float32], Tensor[(8, 20), uint64], uint8, uint8, Tensor[(6, 2), uint8]) */;
  %954 = cast(meta[relay.Constant][60] /* ty=Tensor[(130), bool] */, dtype="bool") /* ty=Tensor[(130), bool] */;
  %955 = cast(meta[relay.Constant][60] /* ty=Tensor[(130), bool] */, dtype="bool") /* ty=Tensor[(130), bool] */;
  %956 = cast(meta[relay.Constant][60] /* ty=Tensor[(130), bool] */, dtype="bool") /* ty=Tensor[(130), bool] */;
  %957 = cast(meta[relay.Constant][61] /* ty=Tensor[(1, 12), uint8] */, dtype="uint8") /* ty=Tensor[(1, 12), uint8] */;
  %958 = cast(meta[relay.Constant][59] /* ty=Tensor[(4, 40), uint64] */, dtype="uint64") /* ty=Tensor[(4, 40), uint64] */;
  %959 = reshape(%954, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), bool] */;
  %960 = reshape(%955, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), bool] */;
  %961 = reshape(%956, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), bool] */;
  %962 = reshape(%957, newshape=[3, 4]) /* ty=Tensor[(3, 4), uint8] */;
  %963 = reshape(%958, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %964 = @func_1204(%959, %960, %961, %962, %963) /* ty=(Tensor[(5, 13, 2), bool], Tensor[(5, 13, 2), float64], Tensor[(288), uint32], uint8, Tensor[(3, 4), uint8], Tensor[(288), uint32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */;
  %965 = cast(%var_4176, dtype="float32") /* ty=Tensor[(4, 8, 13), float32] */;
  %966 = cast(meta[relay.Constant][61] /* ty=Tensor[(1, 12), uint8] */, dtype="uint8") /* ty=Tensor[(1, 12), uint8] */;
  %967 = reshape(%966, newshape=[6, 2]) /* ty=Tensor[(6, 2), uint8] */;
  %968 = @func_2042(%967) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(6, 2), uint8]) */;
  %969 = sqrt(%946) /* ty=Tensor[(4, 8, 13), float32] */;
  %970 = %953.1;
  %971 = %964.5;
  %972 = acos(%965) /* ty=Tensor[(4, 8, 13), float32] */;
  %973 = %968.3;
  (%969, %970, meta[relay.Constant][58] /* ty=Tensor[(1, 112), int32] */, meta[relay.Constant][59] /* ty=Tensor[(4, 40), uint64] */, %971, meta[relay.Constant][60] /* ty=Tensor[(130), bool] */, meta[relay.Constant][61] /* ty=Tensor[(1, 12), uint8] */, %972, %973)
}

def @func_3547() -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) {
  %974 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %975 = cast(meta[relay.Constant][62] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %976 = reshape(%975, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %977 = @func_2070(%976) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */;
  %978 = %974.0;
  %979 = %977.2;
  (%978, %979, meta[relay.Constant][62] /* ty=Tensor[(160), uint64] */)
}

def @func_4518() -> Tensor[(13, 9, 4), float32] {
  %980 = @func_4075() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %980.0
}

def @func_2118() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %981 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  %982 = @func_1973() /* ty=Tensor[(13, 9, 4), float32] */;
  (%981, %982)
}

def @func_8969(%var_8944: Tensor[(576), float64], %var_8945: Tensor[(12), uint8]) -> (Tensor[(160), uint64], Tensor[(1287), float32], Tensor[(576), float64], Tensor[(12), uint8]) {
  %983 = @func_8874() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
  %984 = cast(%var_8944, dtype="float64") /* ty=Tensor[(576), float64] */;
  %985 = cast(%var_8945, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %986 = reshape(%984, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %987 = reshape(%985, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %988 = @func_2735(%986, %987) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(2, 3, 5), int32], int32, Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) */;
  %989 = %983.2;
  %990 = %988.8;
  (%989, %990, %var_8944, %var_8945)
}

def @func_12052() -> (Tensor[(13, 9, 4), float32], Tensor[(6, 12, 5), float64], Tensor[(160), uint64]) {
  %991 = @func_10993() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %992 = @func_11810() /* ty=(Tensor[(6, 12, 5), float64], Tensor[(6, 12, 5), bool]) */;
  %993 = @func_8874() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
  %994 = %991.0;
  %995 = %992.0;
  %996 = %993.2;
  (%994, %995, %996)
}

def @func_16584(%var_16578: Tensor[(9, 7, 14), int64], %var_16579: Tensor[(9, 7, 14), int64]) -> Tensor[(9, 7, 14), int64] {
  %997 = cast(%var_16579, dtype="int64") /* ty=Tensor[(9, 7, 14), int64] */;
  %998 = shape_of(%var_16578, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%var_16578, dtype="int64") /* ty=Tensor[(9, 7, 14), int64] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  minimum(%999, %1000) /* ty=Tensor[(9, 7, 14), int64] */
}

def @func_3748() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1001 = @func_2896() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1002 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  %1003 = @func_3664() /* ty=Tensor[(13, 9, 4), float32] */;
  %1004 = %1001.0;
  (%1002, %1003, %1004)
}

def @func_5303() -> Tensor[(5, 6, 12), float64] {
  %1005 = @func_4874() /* ty=(Tensor[(5, 6, 12), float64],) */;
  %1005.0
}

def @func_13877(%var_13834: uint8, %var_13835: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(5, 6, 12), float64], Tensor[(160), uint64], Tensor[(2, 6, 288), int32], Tensor[(12), uint8], Tensor[(5, 6, 12), float64], Tensor[(5, 8, 4), int16], Tensor[(13, 9, 4), float32]) {
  %1006 = @func_8644() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1007 = @func_5775() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) */;
  %1008 = cast(%var_13834, dtype="uint8") /* ty=uint8 */;
  %1009 = cast(%var_13835, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1010 = reshape(%1008, newshape=[]) /* ty=uint8 */;
  %1011 = reshape(%1009, newshape=[3, 4]) /* ty=Tensor[(3, 4), uint8] */;
  %1012 = @func_4017(%1010, %1011) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 12, 2), uint64], Tensor[(576), float64], uint8, Tensor[(3, 4), uint8], Tensor[(12), uint8], Tensor[(2, 6, 288), int32], Tensor[(16, 3, 6), uint32]) */;
  %1013 = cast(meta[relay.Constant][63] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1014 = cast(meta[relay.Constant][63] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1015 = reshape(%1013, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %1016 = reshape(%1014, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %1017 = @func_1042(%1015, %1016) /* ty=Tensor[(5, 8, 4), float32] */;
  %1018 = cast(%1017, dtype="int16") /* ty=Tensor[(5, 8, 4), int16] */;
  %1019 = cast(%var_13834, dtype="int16") /* ty=int16 */;
  %1020 = %1006.0;
  %1021 = @func_5322() /* ty=Tensor[(13, 9, 4), float32] */;
  %1022 = %1007.0;
  %1023 = %1012.6;
  %1024 = @func_7295() /* ty=Tensor[(5, 6, 12), float64] */;
  %1025 = logical_xor(%1018, %1019) /* ty=Tensor[(5, 8, 4), int16] */;
  %1026 = @func_8081() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1020, %1021, %1022, meta[relay.Constant][63] /* ty=Tensor[(160), uint64] */, %1023, %var_13835, %1024, %1025, %1026)
}

def @func_15261() -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) {
  %1027 = @func_13458() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1028 = @func_8254() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %1029 = @func_3547() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %1030 = %1027.0;
  %1031 = %1028.0;
  %1032 = %1029.1;
  (%1030, %1031, %1032)
}

def @func_15533() -> Tensor[(8, 10, 9), float64] {
  %1033 = cast(meta[relay.Constant][64] /* ty=Tensor[(8, 10, 9), float32] */, dtype="float32") /* ty=Tensor[(8, 10, 9), float32] */;
  %1034 = acosh(%1033) /* ty=Tensor[(8, 10, 9), float32] */;
  %1035 = cast(%1034, dtype="float64") /* ty=Tensor[(8, 10, 9), float64] */;
  rsqrt(%1035) /* ty=Tensor[(8, 10, 9), float64] */
}

def @func_10286() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
  %1036 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1037 = @func_2446() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1038 = @func_8254() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %1039 = %1036.0;
  %1040 = %1037.0;
  %1041 = %1038.1;
  (%1039, %1040, %1041)
}

def @func_4754() -> Tensor[(13, 9, 4), float32] {
  %1042 = @func_2790() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1042.0
}

def @func_15131() -> (uint8, Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) {
  %1043 = @func_11938() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(8, 36), uint32], Tensor[(160), uint64]) */;
  %1044 = @func_10286() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
  %1045 = %1043.2;
  %1046 = @func_14442() /* ty=Tensor[(936), uint8] */;
  %1047 = %1044.0;
  (%1045, %1046, %1047)
}

def @func_15857(%var_15851: Tensor[(432), float32]) -> (Tensor[(13, 9, 4), float32], Tensor[(16, 9, 3), float32], Tensor[(432), float32]) {
  %1048 = @func_6280() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) */;
  %1049 = cast(%var_15851, dtype="float32") /* ty=Tensor[(432), float32] */;
  %1050 = reshape(%1049, newshape=[16, 9, 3]) /* ty=Tensor[(16, 9, 3), float32] */;
  %1051 = @func_7675(%1050) /* ty=(Tensor[(16, 9, 3), float32], Tensor[(16, 9, 3), float64], Tensor[(13, 9, 4), float32]) */;
  %1052 = %1048.0;
  %1053 = %1051.0;
  (%1052, %1053, %var_15851)
}

def @func_310(%var_300: Tensor[(16, 3, 6), uint32]) -> Tensor[(16, 3, 6), uint32] {
  %1054 = cast(%var_300, dtype="uint32") /* ty=Tensor[(16, 3, 6), uint32] */;
  %1055 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(16, 3, 6), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1056 = cast(meta[relay.Constant][65] /* ty=Tensor[(16, 3, 6), uint32] */, dtype="uint32") /* ty=Tensor[(16, 3, 6), uint32] */;
  %1057 = dyn.reshape(%1054, %1055, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_and(%1056, %1057) /* ty=Tensor[(16, 3, 6), uint32] */
}

def @func_2070(%var_2058: Tensor[(160), uint64]) -> (Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) {
  %1058 = cast(%var_2058, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1059 = cast(%var_2058, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1060 = reshape(%1058, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %1061 = reshape(%1059, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %1062 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  %1063 = @func_1042(%1060, %1061) /* ty=Tensor[(5, 8, 4), float32] */;
  (%1062, %1063, %var_2058)
}

def @func_6313(%var_6307: Tensor[(624, 1), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624, 1), float64], Tensor[(13, 9, 4), float32]) {
  %1064 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1065 = cast(%var_6307, dtype="float64") /* ty=Tensor[(624, 1), float64] */;
  %1066 = reshape(%1065, newshape=[12, 4, 13]) /* ty=Tensor[(12, 4, 13), float64] */;
  %1067 = @func_4119(%1066) /* ty=(Tensor[(12, 4, 13), float64],) */;
  %1068 = @func_4075() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1069 = @func_4525() /* ty=Tensor[(13, 9, 4), float32] */;
  %1070 = %1064.0;
  %1071 = %1067.0;
  %1072 = %1068.0;
  (%1069, %1070, %1071, %var_6307, %1072)
}

def @func_10102() -> (Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32], Tensor[(156), int32]) {
  %1073 = @func_9377() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1074 = cast(meta[relay.Constant][66] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
  %1075 = cast(meta[relay.Constant][66] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
  %1076 = reshape(%1074, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int32] */;
  %1077 = reshape(%1075, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int32] */;
  %1078 = @func_6817(%1076, %1077) /* ty=(Tensor[(3, 13, 4), uint16], Tensor[(13, 9, 4), float32]) */;
  %1079 = %1073.1;
  %1080 = @func_8692() /* ty=Tensor[(936), uint8] */;
  %1081 = %1078.1;
  (%1079, %1080, %1081, meta[relay.Constant][66] /* ty=Tensor[(156), int32] */)
}

def @func_10722() -> Tensor[(13, 9, 4), float32] {
  %1082 = @func_7354() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1082.0
}

def @func_14616() -> Tensor[(13, 9, 4), float32] {
  %1083 = @func_3748() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1083.1
}

def @func_8825() -> (Tensor[(13, 9, 4), float32],) {
  %1084 = @func_4244() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1084,)
}

def @func_8025() -> Tensor[(13, 9, 4), float32] {
  @func_6524() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_14484(%var_14478: int32) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], int32, Tensor[(2, 3, 5), float64]) {
  %1085 = @func_9548() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1086 = cast(%var_14478, dtype="int32") /* ty=int32 */;
  %1087 = reshape(%1086, newshape=[]) /* ty=int32 */;
  %1088 = @func_1492(%1087) /* ty=(Tensor[(2, 3, 5), int32],) */;
  %1089 = %1088.0;
  %1090 = cast(%1089, dtype="float64") /* ty=Tensor[(2, 3, 5), float64] */;
  %1091 = %1085.0;
  %1092 = @func_6055() /* ty=Tensor[(13, 9, 4), float32] */;
  %1093 = exp(%1090) /* ty=Tensor[(2, 3, 5), float64] */;
  (%1091, %1092, %var_14478, %1093)
}

def @func_11076() -> Tensor[(13, 9, 4), float32] {
  %1094 = @func_7789() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1094.0
}

def @func_11604() -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  %1095 = @func_10384() /* ty=Tensor[(160), uint64] */;
  %1096 = @func_7253() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1095, %1096)
}

def @func_1841(%var_1810: Tensor[(7, 8, 2), int32], %var_1811: Tensor[(7, 8, 2), int32], %var_1831: Tensor[(8, 20), uint64]) -> (Tensor[(7, 8, 2), bool], Tensor[(7, 8, 2), float32], Tensor[(5, 8, 4), float32], Tensor[(8, 20), uint64], uint8, uint8, Tensor[(6, 2), uint8]) {
  %1097 = cast(%var_1811, dtype="bool") /* ty=Tensor[(7, 8, 2), bool] */;
  %1098 = shape_of(%var_1810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1099 = cast(%var_1810, dtype="bool") /* ty=Tensor[(7, 8, 2), bool] */;
  %1100 = dyn.reshape(%1097, %1098, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1101 = cast(%var_1811, dtype="float32") /* ty=Tensor[(7, 8, 2), float32] */;
  %1102 = cast(%var_1831, dtype="uint64") /* ty=Tensor[(8, 20), uint64] */;
  %1103 = cast(%var_1831, dtype="uint64") /* ty=Tensor[(8, 20), uint64] */;
  %1104 = reshape(%1102, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %1105 = reshape(%1103, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %1106 = cast(meta[relay.Constant][67] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1107 = cast(meta[relay.Constant][68] /* ty=Tensor[(6, 2), uint8] */, dtype="uint8") /* ty=Tensor[(6, 2), uint8] */;
  %1108 = reshape(%1106, newshape=[]) /* ty=uint8 */;
  %1109 = reshape(%1107, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1110 = @func_1748(%1108, %1109) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) */;
  %1111 = equal(%1099, %1100) /* ty=Tensor[(7, 8, 2), bool] */;
  %1112 = sqrt(%1101) /* ty=Tensor[(7, 8, 2), float32] */;
  %1113 = @func_1042(%1104, %1105) /* ty=Tensor[(5, 8, 4), float32] */;
  %1114 = %1110.2;
  (%1111, %1112, %1113, %var_1831, %1114, meta[relay.Constant][67] /* ty=uint8 */, meta[relay.Constant][68] /* ty=Tensor[(6, 2), uint8] */)
}

def @func_12493() -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  %1115 = @func_5179() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1116 = @func_10384() /* ty=Tensor[(160), uint64] */;
  %1117 = %1115.0;
  (%1116, %1117)
}

def @func_7572() -> Tensor[(936), uint8] {
  %1118 = @func_3132() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) */;
  %1118.2
}

def @func_7899(%var_7896: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(12), uint8]) {
  %1119 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1120 = cast(meta[relay.Constant][69] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1121 = cast(%var_7896, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1122 = reshape(%1120, newshape=[]) /* ty=uint8 */;
  %1123 = reshape(%1121, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1124 = @func_1748(%1122, %1123) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) */;
  %1125 = @func_4144() /* ty=Tensor[(13, 9, 4), float32] */;
  %1126 = %1119.0;
  %1127 = %1124.0;
  (%1125, %1126, %1127, meta[relay.Constant][69] /* ty=uint8 */, %var_7896)
}

def @func_9377() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1128 = @func_2931() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1129 = %1128.1;
  %1130 = @func_4434() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1129, %1130)
}

def @func_8889() -> Tensor[(13, 9, 4), float32] {
  @func_4144() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_10333() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1131 = @func_8048() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1132 = @func_8644() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1133 = %1131.1;
  %1134 = %1132.0;
  (%1133, %1134)
}

def @func_6817(%var_6803: Tensor[(3, 13, 4), int32], %var_6804: Tensor[(3, 13, 4), int32]) -> (Tensor[(3, 13, 4), uint16], Tensor[(13, 9, 4), float32]) {
  %1135 = cast(%var_6804, dtype="int32") /* ty=Tensor[(3, 13, 4), int32] */;
  %1136 = shape_of(%var_6803, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1137 = cast(%var_6803, dtype="int32") /* ty=Tensor[(3, 13, 4), int32] */;
  %1138 = dyn.reshape(%1135, %1136, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1139 = subtract(%1137, %1138) /* ty=Tensor[(3, 13, 4), int32] */;
  %1140 = cast(%var_6803, dtype="uint16") /* ty=Tensor[(3, 13, 4), uint16] */;
  %1141 = shape_of(%1139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1142 = cast(%1139, dtype="uint16") /* ty=Tensor[(3, 13, 4), uint16] */;
  %1143 = dyn.reshape(%1140, %1141, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1144 = bitwise_or(%1142, %1143) /* ty=Tensor[(3, 13, 4), uint16] */;
  %1145 = @func_4754() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1144, %1145)
}

def @func_5354(%var_5345: Tensor[(468, 2), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(468, 2), uint8]) {
  %1146 = @func_4630() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %1147 = cast(%var_5345, dtype="uint8") /* ty=Tensor[(468, 2), uint8] */;
  %1148 = cast(%var_5345, dtype="uint8") /* ty=Tensor[(468, 2), uint8] */;
  %1149 = reshape(%1147, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), uint8] */;
  %1150 = reshape(%1148, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), uint8] */;
  %1151 = @func_2554(%1149, %1150) /* ty=(Tensor[(13, 9, 8), uint8], Tensor[(56, 2), int32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32]) */;
  %1152 = %1146.1;
  %1153 = %1151.0;
  (%1152, %1153, %var_5345)
}

def @func_9724() -> (Tensor[(13, 9, 4), float32], Tensor[(936), uint8]) {
  %1154 = @func_6280() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) */;
  %1155 = @func_5916() /* ty=Tensor[(13, 9, 4), float32] */;
  %1156 = %1154.1;
  (%1155, %1156)
}

def @func_15028() -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) {
  %1157 = @func_10102() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32], Tensor[(156), int32]) */;
  %1158 = @func_10713() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1159 = @func_9536() /* ty=Tensor[(13, 9, 4), float32] */;
  %1160 = @func_10384() /* ty=Tensor[(160), uint64] */;
  %1161 = %1157.1;
  %1162 = %1158.0;
  (%1159, %1160, %1161, %1162)
}

def @func_12227() -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1163 = @func_11604() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %1164 = @func_6584() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1165 = @func_8644() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1166 = %1163.0;
  %1167 = %1164.2;
  %1168 = %1165.0;
  (%1166, %1167, %1168)
}

def @func_16553() -> Tensor[(13, 9, 4), float32] {
  %1169 = @func_7354() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1169.0
}

def @func_3132() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) {
  %1170 = cast(meta[relay.Constant][70] /* ty=Tensor[(936), uint8] */, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %1171 = cast(meta[relay.Constant][70] /* ty=Tensor[(936), uint8] */, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %1172 = reshape(%1170, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), uint8] */;
  %1173 = reshape(%1171, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), uint8] */;
  %1174 = @func_2554(%1172, %1173) /* ty=(Tensor[(13, 9, 8), uint8], Tensor[(56, 2), int32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32]) */;
  %1175 = @func_2387() /* ty=Tensor[(13, 9, 4), float32] */;
  %1176 = %1174.0;
  (%1175, %1176, meta[relay.Constant][70] /* ty=Tensor[(936), uint8] */)
}

def @func_3664() -> Tensor[(13, 9, 4), float32] {
  @func_1676() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_9657() -> (Tensor[(13, 9, 4), float32], Tensor[(936), uint8]) {
  %1177 = @func_7381() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1178 = @func_3786() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), int64], Tensor[(56, 2), int32], Tensor[(936), uint8]) */;
  %1179 = %1177.1;
  %1180 = %1178.3;
  (%1179, %1180)
}

def @func_10960() -> (Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1181 = @func_3132() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) */;
  %1182 = @func_5679() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1183 = @func_5303() /* ty=Tensor[(5, 6, 12), float64] */;
  %1184 = %1181.0;
  %1185 = %1182.0;
  (%1183, %1184, %1185)
}

def @func_16878() -> Tensor[(13, 9, 4), float32] {
  %1186 = @func_15649() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1186.1
}

def @func_4391() -> Tensor[(13, 9, 4), float32] {
  %1187 = @func_3222() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1188 = %1187.0;
  %1189 = cast(%1188, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  sinh(%1189) /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_10265() -> (Tensor[(13, 9, 4), float32],) {
  %1190 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1190,)
}

def @func_5024() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1191 = @func_2790() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1192 = %1191.0;
  %1193 = cast(%1192, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  %1194 = sin(%1193) /* ty=Tensor[(13, 9, 4), float32] */;
  %1195 = @func_3836() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1194, %1195)
}

def @func_2463(%var_2455: Tensor[(80, 2), uint64]) -> (Tensor[(13, 9, 4), float32], Tensor[(8, 20), uint64], Tensor[(56, 2), int32], Tensor[(80, 2), uint64], Tensor[(13, 9, 4), float32]) {
  %1196 = cast(meta[relay.Constant][71] /* ty=Tensor[(56, 2), int32] */, dtype="int32") /* ty=Tensor[(56, 2), int32] */;
  %1197 = cast(meta[relay.Constant][71] /* ty=Tensor[(56, 2), int32] */, dtype="int32") /* ty=Tensor[(56, 2), int32] */;
  %1198 = cast(%var_2455, dtype="uint64") /* ty=Tensor[(80, 2), uint64] */;
  %1199 = reshape(%1196, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), int32] */;
  %1200 = reshape(%1197, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), int32] */;
  %1201 = reshape(%1198, newshape=[8, 20]) /* ty=Tensor[(8, 20), uint64] */;
  %1202 = @func_1841(%1199, %1200, %1201) /* ty=(Tensor[(7, 8, 2), bool], Tensor[(7, 8, 2), float32], Tensor[(5, 8, 4), float32], Tensor[(8, 20), uint64], uint8, uint8, Tensor[(6, 2), uint8]) */;
  %1203 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1204 = @func_2387() /* ty=Tensor[(13, 9, 4), float32] */;
  %1205 = %1202.3;
  %1206 = %1203.0;
  (%1204, %1205, meta[relay.Constant][71] /* ty=Tensor[(56, 2), int32] */, %var_2455, %1206)
}

def @func_15374() -> Tensor[(13, 9, 4), float64] {
  %1207 = @func_5893() /* ty=(Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) */;
  %1207.0
}

def @func_3902(%var_3885: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(288), uint32]) {
  %1208 = cast(%var_3885, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1209 = cast(meta[relay.Constant][72] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %1210 = reshape(%1208, newshape=[6, 2]) /* ty=Tensor[(6, 2), uint8] */;
  %1211 = reshape(%1209, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %1212 = @func_3060(%1210, %1211) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(6, 2), uint8], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(5, 8, 4), float32], Tensor[(2, 56), int32], Tensor[(160), uint64]) */;
  %1213 = @func_3836() /* ty=Tensor[(13, 9, 4), float32] */;
  %1214 = %1212.1;
  (%1213, %1214, %var_3885, meta[relay.Constant][72] /* ty=Tensor[(288), uint32] */)
}

def @func_13115() -> (Tensor[(13, 9, 4), float32], Tensor[(5, 6, 12), bool]) {
  %1215 = @func_7604() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
  %1216 = @func_8048() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1217 = %1216.0;
  %1218 = cast(meta[relay.Constant][73] /* ty=Tensor[(5, 6, 12), float64] */, dtype="bool") /* ty=Tensor[(5, 6, 12), bool] */;
  %1219 = shape_of(%1217, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1220 = cast(%1217, dtype="bool") /* ty=Tensor[(5, 6, 12), bool] */;
  %1221 = dyn.reshape(%1218, %1219, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1222 = %1215.0;
  %1223 = not_equal(%1220, %1221) /* ty=Tensor[(5, 6, 12), bool] */;
  (%1222, %1223)
}

def @func_1204(%var_1173: Tensor[(5, 13, 2), bool], %var_1174: Tensor[(5, 13, 2), bool], %var_1178: Tensor[(5, 13, 2), bool], %var_1191: Tensor[(3, 4), uint8], %var_1196: Tensor[(160), uint64]) -> (Tensor[(5, 13, 2), bool], Tensor[(5, 13, 2), float64], Tensor[(288), uint32], uint8, Tensor[(3, 4), uint8], Tensor[(288), uint32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) {
  %1224 = cast(%var_1174, dtype="bool") /* ty=Tensor[(5, 13, 2), bool] */;
  %1225 = shape_of(%var_1173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1226 = cast(%var_1173, dtype="bool") /* ty=Tensor[(5, 13, 2), bool] */;
  %1227 = dyn.reshape(%1224, %1225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1228 = cast(%var_1178, dtype="float64") /* ty=Tensor[(5, 13, 2), float64] */;
  %1229 = shape_of(%var_1173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1230 = cast(%var_1173, dtype="float64") /* ty=Tensor[(5, 13, 2), float64] */;
  %1231 = dyn.reshape(%1228, %1229, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1232 = cast(meta[relay.Constant][74] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1233 = cast(%var_1191, dtype="uint8") /* ty=Tensor[(3, 4), uint8] */;
  %1234 = cast(meta[relay.Constant][75] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %1235 = reshape(%1232, newshape=[]) /* ty=uint8 */;
  %1236 = reshape(%1233, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), uint8] */;
  %1237 = reshape(%1234, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %1238 = @func_1011(%1235, %1236, %1237) /* ty=(Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
  %1239 = cast(%var_1196, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1240 = cast(%var_1196, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1241 = reshape(%1239, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %1242 = reshape(%1240, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %1243 = logical_or(%1226, %1227) /* ty=Tensor[(5, 13, 2), bool] */;
  %1244 = multiply(%1230, %1231) /* ty=Tensor[(5, 13, 2), float64] */;
  %1245 = %1238.2;
  %1246 = @func_1042(%1241, %1242) /* ty=Tensor[(5, 8, 4), float32] */;
  (%1243, %1244, %1245, meta[relay.Constant][74] /* ty=uint8 */, %var_1191, meta[relay.Constant][75] /* ty=Tensor[(288), uint32] */, %1246, %var_1196)
}

def @func_4075() -> (Tensor[(13, 9, 4), float32],) {
  %1247 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1247,)
}

def @func_8606() -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1248 = @func_7720() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %1249 = @func_5024() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1250 = %1248.0;
  %1251 = cast(%1250, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1252 = reshape(%1251, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %1253 = @func_2070(%1252) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */;
  %1254 = %1249.1;
  %1255 = %1253.0;
  (%1250, %1254, %1255)
}

def @func_17075(%var_16980: Tensor[(10, 10, 9), float64]) -> (Tensor[(10, 10, 9), int32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1256 = @func_13628() /* ty=(Tensor[(10, 10, 1), float64], Tensor[(234, 2), bool]) */;
  %1257 = %1256.0;
  %1258 = cast(%1257, dtype="int32") /* ty=Tensor[(10, 10, 1), int32] */;
  %1259 = cast(%var_16980, dtype="int32") /* ty=Tensor[(10, 10, 9), int32] */;
  %1260 = @func_8606() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1261 = @func_8644() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1262 = @func_12493() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %1263 = bitwise_or(%1258, %1259) /* ty=Tensor[(10, 10, 9), int32] */;
  %1264 = %1260.1;
  %1265 = @func_5322() /* ty=Tensor[(13, 9, 4), float32] */;
  %1266 = %1261.0;
  %1267 = %1262.1;
  %1268 = @func_11076() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1263, %1264, %1265, %1266, %1267, %1268)
}

def @func_1748(%var_1706: uint8, %var_1707: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) {
  %1269 = cast(%var_1706, dtype="uint8") /* ty=uint8 */;
  %1270 = cast(%var_1707, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1271 = cast(meta[relay.Constant][76] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %1272 = reshape(%1269, newshape=[]) /* ty=uint8 */;
  %1273 = reshape(%1270, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), uint8] */;
  %1274 = reshape(%1271, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %1275 = @func_1011(%1272, %1273, %1274) /* ty=(Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
  %1276 = cast(meta[relay.Constant][76] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %1277 = reshape(%1276, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), uint32] */;
  %1278 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  %1279 = %1275.0;
  %1280 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  %1281 = @func_310(%1277) /* ty=Tensor[(16, 3, 6), uint32] */;
  (%1278, %1279, %var_1706, %var_1707, meta[relay.Constant][76] /* ty=Tensor[(288), uint32] */, %1280, %1281)
}

def @func_10435() -> (Tensor[(14, 11, 15), float32], Tensor[(13, 9, 4), float32], Tensor[(14, 11, 15), bool], Tensor[(13, 9, 4), float32]) {
  %1282 = cast(meta[relay.Constant][78] /* ty=Tensor[(14, 11, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 11, 15), float32] */;
  %1283 = shape_of(meta[relay.Constant][77] /* ty=Tensor[(14, 11, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1284 = cast(meta[relay.Constant][77] /* ty=Tensor[(14, 11, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 11, 15), float32] */;
  %1285 = dyn.reshape(%1282, %1283, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1286 = @func_10265() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1287 = cast(meta[relay.Constant][77] /* ty=Tensor[(14, 11, 15), float32] */, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
  %1288 = shape_of(meta[relay.Constant][78] /* ty=Tensor[(14, 11, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1289 = cast(meta[relay.Constant][78] /* ty=Tensor[(14, 11, 15), float32] */, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
  %1290 = dyn.reshape(%1287, %1288, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1291 = floor_mod(%1284, %1285) /* ty=Tensor[(14, 11, 15), float32] */;
  %1292 = %1286.0;
  %1293 = greater_equal(%1289, %1290) /* ty=Tensor[(14, 11, 15), bool] */;
  %1294 = @func_8081() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1291, %1292, %1293, %1294)
}

def @func_12747(%var_12702: Tensor[(24, 12), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(24, 12), uint32], Tensor[(13, 9, 4), float32]) {
  %1295 = @func_10768() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1296 = @func_4255() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1297 = cast(%var_12702, dtype="uint32") /* ty=Tensor[(24, 12), uint32] */;
  %1298 = reshape(%1297, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %1299 = @func_3652(%1298) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */;
  %1300 = @func_11938() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(8, 36), uint32], Tensor[(160), uint64]) */;
  %1301 = %1295.0;
  %1302 = %1296.0;
  %1303 = %1299.2;
  %1304 = %1300.0;
  (%1301, %1302, %1303, %var_12702, %1304)
}

def @func_2249(%var_2172: int32) -> (Tensor[(2, 3, 5), int64], Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  %1305 = cast(%var_2172, dtype="int32") /* ty=int32 */;
  %1306 = reshape(%1305, newshape=[]) /* ty=int32 */;
  %1307 = @func_1492(%1306) /* ty=(Tensor[(2, 3, 5), int32],) */;
  %1308 = %1307.0;
  %1309 = cast(%var_2172, dtype="int64") /* ty=int64 */;
  %1310 = cast(%1308, dtype="int64") /* ty=Tensor[(2, 3, 5), int64] */;
  %1311 = cast(meta[relay.Constant][79] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1312 = reshape(%1311, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %1313 = @func_2070(%1312) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */;
  %1314 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  %1315 = cast(%1314, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  %1316 = bitwise_xor(%1309, %1310) /* ty=Tensor[(2, 3, 5), int64] */;
  %1317 = %1313.0;
  %1318 = cos(%1315) /* ty=Tensor[(13, 9, 4), float32] */;
  (%1316, %1317, meta[relay.Constant][79] /* ty=Tensor[(160), uint64] */, %1318)
}

def @func_2671(%var_2617: Tensor[(9, 8, 8), float64]) -> (Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(9, 8, 8), float32]) {
  %1319 = cast(meta[relay.Constant][80] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %1320 = reshape(%1319, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), uint32] */;
  %1321 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1322 = cast(%var_2617, dtype="float64") /* ty=Tensor[(9, 8, 8), float64] */;
  %1323 = sigmoid(%1322) /* ty=Tensor[(9, 8, 8), float64] */;
  %1324 = cast(%1323, dtype="float64") /* ty=Tensor[(9, 8, 8), float64] */;
  %1325 = asin(%1324) /* ty=Tensor[(9, 8, 8), float64] */;
  %1326 = cast(%1323, dtype="bool") /* ty=Tensor[(9, 8, 8), bool] */;
  %1327 = shape_of(%1325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1328 = cast(%1325, dtype="bool") /* ty=Tensor[(9, 8, 8), bool] */;
  %1329 = dyn.reshape(%1326, %1327, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1330 = greater(%1328, %1329) /* ty=Tensor[(9, 8, 8), bool] */;
  %1331 = cast(%1330, dtype="float32") /* ty=Tensor[(9, 8, 8), float32] */;
  %1332 = @func_310(%1320) /* ty=Tensor[(16, 3, 6), uint32] */;
  %1333 = %1321.0;
  %1334 = log(%1331) /* ty=Tensor[(9, 8, 8), float32] */;
  (%1332, meta[relay.Constant][80] /* ty=Tensor[(288), uint32] */, %1333, %1334)
}

def @func_15605() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1335 = @func_12246() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1336 = @func_6859() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1337 = %1335.0;
  %1338 = %1336.0;
  (%1337, %1338)
}

def @func_5393() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float64]) {
  %1339 = @func_4144() /* ty=Tensor[(13, 9, 4), float32] */;
  %1340 = cast(%1339, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  %1341 = cast(%1339, dtype="float64") /* ty=Tensor[(13, 9, 4), float64] */;
  %1342 = asin(%1340) /* ty=Tensor[(13, 9, 4), float32] */;
  %1343 = sqrt(%1341) /* ty=Tensor[(13, 9, 4), float64] */;
  (%1342, %1343)
}

def @func_12897() -> Tensor[(13, 9, 4), float32] {
  @func_7973() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_9181() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1344 = @func_5658() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1345 = %1344.0;
  %1346 = @func_4518() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1345, %1346)
}

def @func_15759(%var_15737: Tensor[(12, 48), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(12, 48), float64]) {
  %1347 = @func_2827() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1348 = cast(%var_15737, dtype="float64") /* ty=Tensor[(12, 48), float64] */;
  %1349 = reshape(%1348, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %1350 = @func_6797(%1349) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64]) */;
  %1351 = %1347.0;
  %1352 = %1350.2;
  (%1351, %1352, %var_15737)
}

def @func_2827() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1353 = @func_2446() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1354 = %1353.0;
  %1355 = @func_1973() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1354, %1355)
}

def @func_13933() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  %1356 = @func_2896() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1357 = cast(meta[relay.Constant][81] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1358 = reshape(%1357, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %1359 = @func_2070(%1358) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */;
  %1360 = @func_9200() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1361 = %1356.0;
  %1362 = %1359.0;
  %1363 = %1360.0;
  (%1361, %1362, meta[relay.Constant][81] /* ty=Tensor[(160), uint64] */, %1363)
}

def @func_1973() -> Tensor[(13, 9, 4), float32] {
  %1364 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1364.0
}

def @func_6949() -> (Tensor[(13, 9, 4), float32],) {
  %1365 = @func_4815() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1366 = %1365.1;
  (%1366,)
}

def @func_15292() -> (Tensor[(13, 9, 4), float32],) {
  %1367 = @func_3836() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1367,)
}

def @func_15986() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1368 = @func_6055() /* ty=Tensor[(13, 9, 4), float32] */;
  %1369 = @func_15149() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1368, %1369)
}

def @func_14546(%var_14530: int32) -> (Tensor[(13, 9, 4), int16], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(2, 3, 5), float32]) {
  %1370 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1371 = @func_10960() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1372 = cast(%var_14530, dtype="int32") /* ty=int32 */;
  %1373 = reshape(%1372, newshape=[]) /* ty=int32 */;
  %1374 = @func_1492(%1373) /* ty=(Tensor[(2, 3, 5), int32],) */;
  %1375 = %1374.0;
  %1376 = cast(%1375, dtype="bool") /* ty=Tensor[(2, 3, 5), bool] */;
  %1377 = cast(%var_14530, dtype="bool") /* ty=bool */;
  %1378 = greater(%1376, %1377) /* ty=Tensor[(2, 3, 5), bool] */;
  %1379 = cast(%1378, dtype="float32") /* ty=Tensor[(2, 3, 5), float32] */;
  %1380 = @func_14276() /* ty=Tensor[(13, 9, 4), int16] */;
  %1381 = %1370.0;
  %1382 = %1371.1;
  %1383 = cos(%1379) /* ty=Tensor[(2, 3, 5), float32] */;
  (%1380, %1381, %1382, %1383)
}

def @func_9075() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1384 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1385 = @func_6055() /* ty=Tensor[(13, 9, 4), float32] */;
  %1386 = @func_7841() /* ty=Tensor[(13, 9, 4), float32] */;
  %1387 = %1384.0;
  (%1385, %1386, %1387)
}

def @func_8920() -> (Tensor[(13, 9, 4), float32],) {
  %1388 = @func_5179() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1389 = %1388.0;
  (%1389,)
}

def @func_9232(%var_9209: Tensor[(10, 7, 15), float64]) -> Tensor[(10, 7, 15), float64] {
  %1390 = cast(%var_9209, dtype="float64") /* ty=Tensor[(10, 7, 15), float64] */;
  %1391 = log10(%1390) /* ty=Tensor[(10, 7, 15), float64] */;
  %1392 = cast(%1391, dtype="float64") /* ty=Tensor[(10, 7, 15), float64] */;
  acosh(%1392) /* ty=Tensor[(10, 7, 15), float64] */
}

def @func_13589(%var_13567: uint8, %var_13571: Tensor[(312, 2), float64], %var_13572: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(1, 12), uint8], Tensor[(12, 4, 13), float64], Tensor[(312, 2), float64], Tensor[(288), uint32], Tensor[(1344), int32], Tensor[(5, 6, 12), float64]) {
  %1393 = @func_8795() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1394 = cast(%var_13567, dtype="uint8") /* ty=uint8 */;
  %1395 = cast(meta[relay.Constant][82] /* ty=Tensor[(1, 12), uint8] */, dtype="uint8") /* ty=Tensor[(1, 12), uint8] */;
  %1396 = reshape(%1394, newshape=[]) /* ty=uint8 */;
  %1397 = reshape(%1395, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1398 = @func_1748(%1396, %1397) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) */;
  %1399 = cast(%var_13571, dtype="float64") /* ty=Tensor[(312, 2), float64] */;
  %1400 = cast(%var_13572, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %1401 = cast(meta[relay.Constant][83] /* ty=Tensor[(1344), int32] */, dtype="int32") /* ty=Tensor[(1344), int32] */;
  %1402 = cast(%var_13567, dtype="uint8") /* ty=uint8 */;
  %1403 = reshape(%1399, newshape=[624]) /* ty=Tensor[(624), float64] */;
  %1404 = reshape(%1400, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %1405 = reshape(%1401, newshape=[1344]) /* ty=Tensor[(1344), int32] */;
  %1406 = reshape(%1402, newshape=[]) /* ty=uint8 */;
  %1407 = @func_8752(%1403, %1404, %1405, %1406) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624), int8], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(4, 72), uint32], Tensor[(1344), int32], uint8, Tensor[(13, 9, 4), float32]) */;
  %1408 = @func_4874() /* ty=(Tensor[(5, 6, 12), float64],) */;
  %1409 = %1393.0;
  %1410 = %1398.1;
  %1411 = %1407.1;
  %1412 = %1408.0;
  (%1409, %1410, %var_13567, meta[relay.Constant][82] /* ty=Tensor[(1, 12), uint8] */, %1411, %var_13571, %var_13572, meta[relay.Constant][83] /* ty=Tensor[(1344), int32] */, %1412)
}

def @func_9616(%var_9563: Tensor[(4, 9, 14), float32]) -> (Tensor[(4, 9, 14), float32], Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1413 = cast(%var_9563, dtype="float32") /* ty=Tensor[(4, 9, 14), float32] */;
  %1414 = cast(meta[relay.Constant][84] /* ty=Tensor[(1287), float32] */, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %1415 = reshape(%1414, newshape=[1287]) /* ty=Tensor[(1287), float32] */;
  %1416 = @func_6393(%1415) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) */;
  %1417 = tan(%1413) /* ty=Tensor[(4, 9, 14), float32] */;
  %1418 = %1416.1;
  %1419 = @func_4244() /* ty=Tensor[(13, 9, 4), float32] */;
  %1420 = @func_9536() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1417, %1418, meta[relay.Constant][84] /* ty=Tensor[(1287), float32] */, %1419, %1420)
}

def @func_16283() -> Tensor[(13, 9, 4), float32] {
  %1421 = @func_15484() /* ty=(Tensor[(16, 8, 12), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1421.2
}

def @func_13053() -> Tensor[(13, 9, 4), float32] {
  %1422 = @func_6584() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1422.0
}

def @func_9334() -> (Tensor[(13, 9, 4), float32],) {
  %1423 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1424 = %1423.0;
  (%1424,)
}

def @func_2896() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1425 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1426 = %1425.0;
  %1427 = @func_2387() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1426, %1427)
}

def @func_15090() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1428 = @func_4326() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1429 = @func_3836() /* ty=Tensor[(13, 9, 4), float32] */;
  %1430 = %1428.0;
  (%1429, %1430)
}

def @func_11810() -> (Tensor[(6, 12, 5), float64], Tensor[(6, 12, 5), bool]) {
  %1431 = cast(meta[relay.Constant][85] /* ty=Tensor[(6, 12, 5), float64] */, dtype="float64") /* ty=Tensor[(6, 12, 5), float64] */;
  %1432 = cast(meta[relay.Constant][85] /* ty=Tensor[(6, 12, 5), float64] */, dtype="float32") /* ty=Tensor[(6, 12, 5), float32] */;
  %1433 = cos(%1432) /* ty=Tensor[(6, 12, 5), float32] */;
  %1434 = cast(%1433, dtype="bool") /* ty=Tensor[(6, 12, 5), bool] */;
  %1435 = shape_of(meta[relay.Constant][85] /* ty=Tensor[(6, 12, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1436 = cast(meta[relay.Constant][85] /* ty=Tensor[(6, 12, 5), float64] */, dtype="bool") /* ty=Tensor[(6, 12, 5), bool] */;
  %1437 = dyn.reshape(%1434, %1435, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1438 = sigmoid(%1431) /* ty=Tensor[(6, 12, 5), float64] */;
  %1439 = not_equal(%1436, %1437) /* ty=Tensor[(6, 12, 5), bool] */;
  (%1438, %1439)
}

def @func_10384() -> Tensor[(160), uint64] {
  %1440 = @func_8254() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %1440.1
}

def @func_13628() -> (Tensor[(10, 10, 1), float64], Tensor[(234, 2), bool]) {
  %1441 = cast(meta[relay.Constant][86] /* ty=Tensor[(10, 10, 1), float64] */, dtype="float64") /* ty=Tensor[(10, 10, 1), float64] */;
  %1442 = cast(meta[relay.Constant][87] /* ty=Tensor[(234, 2), float32] */, dtype="float32") /* ty=Tensor[(234, 2), float32] */;
  %1443 = reshape(%1442, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), float32] */;
  %1444 = @func_3452(%1443) /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1445 = %1444.0;
  %1446 = cast(%1445, dtype="bool") /* ty=Tensor[(13, 9, 4), bool] */;
  %1447 = shape_of(meta[relay.Constant][87] /* ty=Tensor[(234, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1448 = cast(meta[relay.Constant][87] /* ty=Tensor[(234, 2), float32] */, dtype="bool") /* ty=Tensor[(234, 2), bool] */;
  %1449 = dyn.reshape(%1446, %1447, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1450 = sqrt(%1441) /* ty=Tensor[(10, 10, 1), float64] */;
  %1451 = less(%1448, %1449) /* ty=Tensor[(234, 2), bool] */;
  (%1450, %1451)
}

def @func_3205(%var_3157: Tensor[(13, 9, 8), uint8], %var_3163: Tensor[(160), uint64], %var_3181: Tensor[(288), uint32]) -> (Tensor[(13, 9, 8), uint16], Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(8, 6, 12), int16], Tensor[(576), int16], Tensor[(288), uint32], Tensor[(288), uint32], Tensor[(12), uint8], Tensor[(13, 9, 4), int32]) {
  %1452 = @func_3132() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) */;
  %1453 = %1452.1;
  %1454 = cast(%var_3157, dtype="uint16") /* ty=Tensor[(13, 9, 8), uint16] */;
  %1455 = shape_of(%1453, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1456 = cast(%1453, dtype="uint16") /* ty=Tensor[(13, 9, 8), uint16] */;
  %1457 = dyn.reshape(%1454, %1455, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1458 = cast(%var_3163, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1459 = reshape(%1458, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %1460 = @func_2962(%1459) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */;
  %1461 = cast(meta[relay.Constant][88] /* ty=Tensor[(576), int16] */, dtype="int16") /* ty=Tensor[(576), int16] */;
  %1462 = cast(%var_3181, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %1463 = reshape(%1461, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int16] */;
  %1464 = reshape(%1462, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %1465 = @func_2863(%1463, %1464) /* ty=(Tensor[(8, 6, 12), int16], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
  %1466 = cast(meta[relay.Constant][89] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1467 = reshape(%1466, newshape=[6, 2]) /* ty=Tensor[(6, 2), uint8] */;
  %1468 = @func_2042(%1467) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(6, 2), uint8]) */;
  %1469 = @func_2387() /* ty=Tensor[(13, 9, 4), float32] */;
  %1470 = cast(meta[relay.Constant][90] /* ty=Tensor[(13, 9, 4), float32] */, dtype="int32") /* ty=Tensor[(13, 9, 4), int32] */;
  %1471 = shape_of(%1469, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1472 = cast(%1469, dtype="int32") /* ty=Tensor[(13, 9, 4), int32] */;
  %1473 = dyn.reshape(%1470, %1471, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1474 = logical_xor(%1456, %1457) /* ty=Tensor[(13, 9, 8), uint16] */;
  %1475 = %1460.0;
  %1476 = %1465.0;
  %1477 = %1468.1;
  %1478 = multiply(%1472, %1473) /* ty=Tensor[(13, 9, 4), int32] */;
  (%1474, %1475, %var_3163, %1476, meta[relay.Constant][88] /* ty=Tensor[(576), int16] */, %var_3181, %1477, meta[relay.Constant][89] /* ty=Tensor[(12), uint8] */, %1478)
}

def @func_16421() -> (Tensor[(624), float64],) {
  %1479 = @func_13198() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624), float64]) */;
  %1480 = %1479.2;
  (%1480,)
}

def @func_12675() -> Tensor[(5, 6, 12), float64] {
  @func_5303() /* ty=Tensor[(5, 6, 12), float64] */
}

def @func_6524() -> Tensor[(13, 9, 4), float32] {
  %1481 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1481.0
}

def @func_16160() -> Tensor[(13, 9, 4), float32] {
  %1482 = @func_10579() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
  %1482.1
}

def @func_6859() -> (Tensor[(13, 9, 4), float32],) {
  %1483 = @func_6280() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) */;
  %1484 = %1483.2;
  (%1484,)
}

def @func_1788(%var_1780: Tensor[(11, 9, 13), float32]) -> (Tensor[(11, 9, 13), float32],) {
  %1485 = cast(meta[relay.Constant][91] /* ty=Tensor[(11, 9, 13), float32] */, dtype="float32") /* ty=Tensor[(11, 9, 13), float32] */;
  %1486 = shape_of(%var_1780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1487 = cast(%var_1780, dtype="float32") /* ty=Tensor[(11, 9, 13), float32] */;
  %1488 = dyn.reshape(%1485, %1486, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1489 = divide(%1487, %1488) /* ty=Tensor[(11, 9, 13), float32] */;
  (%1489,)
}

def @func_14916() -> Tensor[(6, 15, 2), float64] {
  %1490 = cast(meta[relay.Constant][92] /* ty=Tensor[(6, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 2), float64] */;
  log10(%1490) /* ty=Tensor[(6, 15, 2), float64] */
}

def @func_6055() -> Tensor[(13, 9, 4), float32] {
  %1491 = @func_4075() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1491.0
}

def @func_7253() -> Tensor[(13, 9, 4), float32] {
  %1492 = @func_3786() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), int64], Tensor[(56, 2), int32], Tensor[(936), uint8]) */;
  %1492.0
}

def @func_5893() -> (Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) {
  %1493 = @func_5393() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float64]) */;
  %1494 = %1493.1;
  %1495 = @func_4391() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1494, %1495)
}

def @func_8432(%var_8425: Tensor[(1344), int32], %var_8426: uint8, %var_8427: Tensor[(4, 72), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(16, 7, 12), int32], Tensor[(1344), int32], uint8, Tensor[(4, 72), uint32]) {
  %1496 = @func_6714() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1497 = cast(%var_8425, dtype="int32") /* ty=Tensor[(1344), int32] */;
  %1498 = cast(%var_8425, dtype="int32") /* ty=Tensor[(1344), int32] */;
  %1499 = cast(%var_8426, dtype="uint8") /* ty=uint8 */;
  %1500 = cast(%var_8427, dtype="uint32") /* ty=Tensor[(4, 72), uint32] */;
  %1501 = reshape(%1497, newshape=[16, 7, 12]) /* ty=Tensor[(16, 7, 12), int32] */;
  %1502 = reshape(%1498, newshape=[16, 7, 12]) /* ty=Tensor[(16, 7, 12), int32] */;
  %1503 = reshape(%1499, newshape=[]) /* ty=uint8 */;
  %1504 = reshape(%1500, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %1505 = @func_6234(%1501, %1502, %1503, %1504) /* ty=(Tensor[(16, 7, 12), int32], Tensor[(288), uint32], uint8, Tensor[(1, 12), uint8], Tensor[(288), uint32]) */;
  %1506 = %1496.0;
  %1507 = %1505.0;
  (%1506, %1507, %var_8425, %var_8426, %var_8427)
}

def @func_5322() -> Tensor[(13, 9, 4), float32] {
  %1508 = @func_3748() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1508.2
}

def @func_9548() -> (Tensor[(13, 9, 4), float32],) {
  %1509 = @func_6714() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1510 = %1509.1;
  (%1510,)
}

def @func_6584() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1511 = @func_2790() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1512 = @func_4718() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32]) */;
  %1513 = @func_3222() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1514 = %1511.0;
  %1515 = %1512.1;
  %1516 = %1513.0;
  (%1514, %1515, %1516)
}

def @func_1920() -> (Tensor[(13, 9, 4), float32],) {
  %1517 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1517,)
}

def @func_12388() -> Tensor[(160), uint64] {
  %1518 = @func_3547() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %1518.2
}

def @func_8644() -> (Tensor[(13, 9, 4), float32],) {
  %1519 = @func_4815() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1520 = %1519.0;
  (%1520,)
}

def @func_12859() -> (Tensor[(160), uint64],) {
  %1521 = @func_12388() /* ty=Tensor[(160), uint64] */;
  (%1521,)
}

def @func_4815() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1522 = @func_3786() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), int64], Tensor[(56, 2), int32], Tensor[(936), uint8]) */;
  %1523 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1524 = %1522.0;
  %1525 = %1523.1;
  (%1524, %1525)
}

def @func_5916() -> Tensor[(13, 9, 4), float32] {
  %1526 = @func_2931() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1526.1
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5917() -> Tensor[(13, 9, 4), float32] {
  %1 = fn () -> Tensor[(13, 9, 4), float32] {
    %0 = @func_2931() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %0.1
  };
  %1() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_7675(%var_7648: Tensor[(16, 9, 3), float32]) -> (Tensor[(16, 9, 3), float32], Tensor[(16, 9, 3), float64], Tensor[(13, 9, 4), float32]) {
  %2 = cast(%var_7648, dtype="float32") /* ty=Tensor[(16, 9, 3), float32] */;
  %3 = cast(%var_7648, dtype="float64") /* ty=Tensor[(16, 9, 3), float64] */;
  %4 = sigmoid(%2) /* ty=Tensor[(16, 9, 3), float32] */;
  %5 = sqrt(%3) /* ty=Tensor[(16, 9, 3), float64] */;
  %6 = @func_6055() /* ty=Tensor[(13, 9, 4), float32] */;
  (%4, %5, %6)
}

def @func_15150() -> Tensor[(13, 9, 4), float32] {
  %8 = fn () -> Tensor[(13, 9, 4), float32] {
    %7 = @func_6714() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %7.1
  };
  %8() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_5303() -> Tensor[(5, 6, 12), float64] {
  %9 = @func_4874() /* ty=(Tensor[(5, 6, 12), float64],) */;
  %9.0
}

def @func_2738(%var_2736: Tensor[(576), float64], %var_2737: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(2, 3, 5), int32], int32, Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) {
  %27 = fn (%var_2703: Tensor[(576), float64], %var_2708: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(2, 3, 5), int32], int32, Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) {
    %10 = cast(%var_2703, dtype="float64") /* ty=Tensor[(576), float64] */;
    %11 = reshape(%10, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), float64] */;
    %12 = @func_2671(%11) /* ty=(Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(9, 8, 8), float32]) */;
    %13 = cast(%var_2708, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %14 = reshape(%13, newshape=[6, 2]) /* ty=Tensor[(6, 2), uint8] */;
    %15 = @func_2042(%14) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(6, 2), uint8]) */;
    %16 = cast(10 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %17 = reshape(%16, newshape=[]) /* ty=int32 */;
    %18 = @func_1492(%17) /* ty=(Tensor[(2, 3, 5), int32],) */;
    %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(1287), float32] */, dtype="float32") /* ty=Tensor[(1287), float32] */;
    %20 = reshape(%19, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), float32] */;
    %21 = @func_1788(%20) /* ty=(Tensor[(11, 9, 13), float32],) */;
    %22 = @func_1973() /* ty=Tensor[(13, 9, 4), float32] */;
    %23 = %12.2;
    %24 = %15.0;
    %25 = %18.0;
    %26 = %21.0;
    (%22, %23, %var_2703, %24, %var_2708, %25, 10 /* ty=int32 */, %26, meta[relay.Constant][0] /* ty=Tensor[(1287), float32] */)
  };
  %27(%var_2736, %var_2737) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(2, 3, 5), int32], int32, Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) */
}

def @func_12390() -> Tensor[(160), uint64] {
  @func_12388() /* ty=Tensor[(160), uint64] */
}

def @func_3209(%var_3206: Tensor[(13, 9, 8), uint8], %var_3207: Tensor[(160), uint64], %var_3208: Tensor[(288), uint32]) -> (Tensor[(13, 9, 8), uint16], Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(8, 6, 12), int16], Tensor[(576), int16], Tensor[(288), uint32], Tensor[(288), uint32], Tensor[(12), uint8], Tensor[(13, 9, 4), int32]) {
  %55 = fn (%var_3157: Tensor[(13, 9, 8), uint8], %var_3163: Tensor[(160), uint64], %var_3181: Tensor[(288), uint32]) -> (Tensor[(13, 9, 8), uint16], Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(8, 6, 12), int16], Tensor[(576), int16], Tensor[(288), uint32], Tensor[(288), uint32], Tensor[(12), uint8], Tensor[(13, 9, 4), int32]) {
    %28 = @func_3132() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) */;
    %29 = %28.1;
    %30 = cast(%var_3157, dtype="uint16") /* ty=Tensor[(13, 9, 8), uint16] */;
    %31 = shape_of(%29, dtype="int32") /* ty=Tensor[(3), int32] */;
    %32 = cast(%29, dtype="uint16") /* ty=Tensor[(13, 9, 8), uint16] */;
    %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %34 = cast(%var_3163, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %35 = reshape(%34, newshape=[160]) /* ty=Tensor[(160), uint64] */;
    %36 = @func_2962(%35) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */;
    %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(576), int16] */, dtype="int16") /* ty=Tensor[(576), int16] */;
    %38 = cast(%var_3181, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %39 = reshape(%37, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int16] */;
    %40 = reshape(%38, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %41 = @func_2863(%39, %40) /* ty=(Tensor[(8, 6, 12), int16], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
    %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %43 = reshape(%42, newshape=[6, 2]) /* ty=Tensor[(6, 2), uint8] */;
    %44 = @func_2042(%43) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(6, 2), uint8]) */;
    %45 = @func_2387() /* ty=Tensor[(13, 9, 4), float32] */;
    %46 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 9, 4), float32] */, dtype="int32") /* ty=Tensor[(13, 9, 4), int32] */;
    %47 = shape_of(%45, dtype="int32") /* ty=Tensor[(3), int32] */;
    %48 = cast(%45, dtype="int32") /* ty=Tensor[(13, 9, 4), int32] */;
    %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %50 = logical_xor(%32, %33) /* ty=Tensor[(13, 9, 8), uint16] */;
    %51 = %36.0;
    %52 = %41.0;
    %53 = %44.1;
    %54 = multiply(%48, %49) /* ty=Tensor[(13, 9, 4), int32] */;
    (%50, %51, %var_3163, %52, meta[relay.Constant][1] /* ty=Tensor[(576), int16] */, %var_3181, %53, meta[relay.Constant][2] /* ty=Tensor[(12), uint8] */, %54)
  };
  %55(%var_3206, %var_3207, %var_3208) /* ty=(Tensor[(13, 9, 8), uint16], Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(8, 6, 12), int16], Tensor[(576), int16], Tensor[(288), uint32], Tensor[(288), uint32], Tensor[(12), uint8], Tensor[(13, 9, 4), int32]) */
}

def @func_12427() -> Tensor[(13, 9, 4), float32] {
  %56 = @func_9192() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %56.0
}

def @func_14203(%var_14201: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(12), uint8], Tensor[(5, 6, 12), float64], Tensor[(288), uint32]) {
  @func_14200(%var_14201) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(12), uint8], Tensor[(5, 6, 12), float64], Tensor[(288), uint32]) */
}

def @func_3067() -> Tensor[(13, 9, 4), float32] {
  %57 = @func_2827() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %57.1
}

def @func_13458() -> (Tensor[(13, 9, 4), float32],) {
  %58 = @func_3748() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %59 = %58.0;
  (%59,)
}

def @func_16706() -> (Tensor[(936), uint8],) {
  %60 = @func_14442() /* ty=Tensor[(936), uint8] */;
  (%60,)
}

def @func_4816() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %65 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %61 = @func_3786() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), int64], Tensor[(56, 2), int32], Tensor[(936), uint8]) */;
    %62 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %63 = %61.0;
    %64 = %62.1;
    (%63, %64)
  };
  %65() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_12861() -> (Tensor[(160), uint64],) {
  @func_12859() /* ty=(Tensor[(160), uint64],) */
}

def @func_10386() -> Tensor[(160), uint64] {
  @func_10384() /* ty=Tensor[(160), uint64] */
}

def @func_11539() -> Tensor[(936), uint8] {
  %66 = @func_3132() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) */;
  %66.2
}

def @func_14051() -> Tensor[(13, 9, 4), float32] {
  %68 = fn () -> Tensor[(13, 9, 4), float32] {
    %67 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %67.1
  };
  %68() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_6056() -> Tensor[(13, 9, 4), float32] {
  %70 = fn () -> Tensor[(13, 9, 4), float32] {
    %69 = @func_4075() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %69.0
  };
  %70() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_7091() -> Tensor[(13, 9, 4), float32] {
  %72 = fn () -> Tensor[(13, 9, 4), float32] {
    %71 = @func_3748() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %71.2
  };
  %72() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_6950() -> (Tensor[(13, 9, 4), float32],) {
  %75 = fn () -> (Tensor[(13, 9, 4), float32],) {
    %73 = @func_4815() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %74 = %73.1;
    (%74,)
  };
  %75() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_16422() -> (Tensor[(624), float64],) {
  %78 = fn () -> (Tensor[(624), float64],) {
    %76 = @func_13198() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624), float64]) */;
    %77 = %76.2;
    (%77,)
  };
  %78() /* ty=(Tensor[(624), float64],) */
}

def @func_10265() -> (Tensor[(13, 9, 4), float32],) {
  %79 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  (%79,)
}

def @func_2380(%var_2379: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) {
  %89 = fn (%var_2347: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) {
    %80 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %81 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %82 = cast(%var_2347, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %83 = reshape(%82, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), uint32] */;
    %84 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %85 = %80.0;
    %86 = %81.0;
    %87 = @func_310(%83) /* ty=Tensor[(16, 3, 6), uint32] */;
    %88 = %84.0;
    (%85, %86, %87, %var_2347, %88)
  };
  %89(%var_2379) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */
}

def @func_16899() -> (Tensor[(13, 9, 4), float32],) {
  @func_16897() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_2866(%var_2864: Tensor[(8, 6, 12), int16], %var_2865: Tensor[(288), uint32]) -> (Tensor[(8, 6, 12), int16], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) {
  %99 = fn (%var_2843: Tensor[(8, 6, 12), int16], %var_2861: Tensor[(288), uint32]) -> (Tensor[(8, 6, 12), int16], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) {
    %90 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 6, 12), int16] */, dtype="int16") /* ty=Tensor[(8, 6, 12), int16] */;
    %91 = shape_of(%var_2843, dtype="int32") /* ty=Tensor[(3), int32] */;
    %92 = cast(%var_2843, dtype="int16") /* ty=Tensor[(8, 6, 12), int16] */;
    %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %94 = cast(%var_2861, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %95 = reshape(%94, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %96 = @func_2378(%95) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */;
    %97 = minimum(%92, %93) /* ty=Tensor[(8, 6, 12), int16] */;
    %98 = %96.2;
    (%97, %98, %var_2861)
  };
  %99(%var_2864, %var_2865) /* ty=(Tensor[(8, 6, 12), int16], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */
}

def @func_16951() -> (Tensor[(13, 9, 4), float32],) {
  %102 = fn () -> (Tensor[(13, 9, 4), float32],) {
    %100 = @func_13458() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %101 = %100.0;
    (%101,)
  };
  %102() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_3455(%var_3453: Tensor[(13, 9, 4), float32]) -> (Tensor[(13, 9, 4), float32],) {
  @func_3452(%var_3453) /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_3617(%var_3589: Tensor[(36, 16), float64]) -> (Tensor[(13, 12, 2), uint64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(36, 16), int32]) {
  %103 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 12, 2), uint64] */, dtype="uint64") /* ty=Tensor[(13, 12, 2), uint64] */;
  %104 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(13, 12, 2), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 12, 2), uint64] */, dtype="uint64") /* ty=Tensor[(13, 12, 2), uint64] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %107 = @func_2896() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %108 = cast(%var_3589, dtype="float64") /* ty=Tensor[(36, 16), float64] */;
  %109 = cast(meta[relay.Constant][7] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %110 = reshape(%108, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %111 = reshape(%109, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %112 = @func_2735(%110, %111) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(2, 3, 5), int32], int32, Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) */;
  %113 = %112.6;
  %114 = cast(%var_3589, dtype="float32") /* ty=Tensor[(36, 16), float32] */;
  %115 = cast(%113, dtype="float32") /* ty=float32 */;
  %116 = power(%114, %115) /* ty=Tensor[(36, 16), float32] */;
  %117 = cast(%116, dtype="float32") /* ty=Tensor[(36, 16), float32] */;
  %118 = cos(%117) /* ty=Tensor[(36, 16), float32] */;
  %119 = cast(%118, dtype="float64") /* ty=Tensor[(36, 16), float64] */;
  %120 = sin(%119) /* ty=Tensor[(36, 16), float64] */;
  %121 = cast(%118, dtype="int32") /* ty=Tensor[(36, 16), int32] */;
  %122 = shape_of(%120, dtype="int32") /* ty=Tensor[(2), int32] */;
  %123 = cast(%120, dtype="int32") /* ty=Tensor[(36, 16), int32] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %125 = maximum(%105, %106) /* ty=Tensor[(13, 12, 2), uint64] */;
  %126 = %107.1;
  %127 = subtract(%123, %124) /* ty=Tensor[(36, 16), int32] */;
  (%125, %126, meta[relay.Constant][7] /* ty=Tensor[(12), uint8] */, %127)
}

def @func_1495(%var_1493: int32) -> (Tensor[(2, 3, 5), int32],) {
  @func_1492(%var_1493) /* ty=(Tensor[(2, 3, 5), int32],) */
}

def @func_5634(%var_5632: Tensor[(6, 96), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(6, 96), bool]) {
  @func_5631(%var_5632) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(6, 96), bool]) */
}

def @func_9846() -> (Tensor[(13, 9, 4), float32],) {
  @func_9844() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_6525() -> Tensor[(13, 9, 4), float32] {
  %129 = fn () -> Tensor[(13, 9, 4), float32] {
    %128 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %128.0
  };
  %129() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_313(%var_311: Tensor[(16, 3, 6), uint32]) -> Tensor[(16, 3, 6), uint32] {
  @func_310(%var_311) /* ty=Tensor[(16, 3, 6), uint32] */
}

def @func_4526() -> Tensor[(13, 9, 4), float32] {
  %130 = fn () -> Tensor[(13, 9, 4), float32] {
    @func_1973() /* ty=Tensor[(13, 9, 4), float32] */
  };
  %130() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_4631() -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  %134 = fn () -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
    %131 = @func_3547() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) */;
    %132 = %131.1;
    %133 = @func_4144() /* ty=Tensor[(13, 9, 4), float32] */;
    (%132, %133)
  };
  %134() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */
}

def @func_9940() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %135 = @func_9200() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %136 = @func_9657() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8]) */;
  %137 = %135.0;
  %138 = %136.0;
  (%137, %138)
}

def @func_12516() -> Tensor[(13, 9, 4), float32] {
  %140 = fn () -> Tensor[(13, 9, 4), float32] {
    %139 = @func_10286() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
    %139.1
  };
  %140() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_5631(%var_5595: Tensor[(6, 96), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(6, 96), bool]) {
  %141 = @func_4326() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %142 = %141.0;
  %143 = cast(%142, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  %144 = reshape(%143, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), float32] */;
  %145 = @func_3452(%144) /* ty=(Tensor[(13, 9, 4), float32],) */;
  %146 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 96), float64] */, dtype="float64") /* ty=Tensor[(6, 96), float64] */;
  %147 = reshape(%146, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), float64] */;
  %148 = @func_2671(%147) /* ty=(Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(9, 8, 8), float32]) */;
  %149 = @func_5179() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %150 = cast(%var_5595, dtype="bool") /* ty=Tensor[(6, 96), bool] */;
  %151 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(6, 96), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %152 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 96), float64] */, dtype="bool") /* ty=Tensor[(6, 96), bool] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %154 = %145.0;
  %155 = %148.1;
  %156 = @func_3836() /* ty=Tensor[(13, 9, 4), float32] */;
  %157 = %149.0;
  %158 = greater(%152, %153) /* ty=Tensor[(6, 96), bool] */;
  (%142, %154, %155, %156, %157, %158)
}

def @func_14312() -> (Tensor[(936), uint8],) {
  %159 = @func_3132() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) */;
  %160 = %159.2;
  (%160,)
}

def @func_12054() -> (Tensor[(13, 9, 4), float32], Tensor[(6, 12, 5), float64], Tensor[(160), uint64]) {
  @func_12052() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(6, 12, 5), float64], Tensor[(160), uint64]) */
}

def @func_5893() -> (Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) {
  %161 = @func_5393() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float64]) */;
  %162 = %161.1;
  %163 = @func_4391() /* ty=Tensor[(13, 9, 4), float32] */;
  (%162, %163)
}

def @func_5660() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_5658() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_8291() -> (Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(12), uint8]) {
  @func_8289() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(12), uint8]) */
}

def @func_14869() -> Tensor[(936), uint8] {
  @func_14867() /* ty=Tensor[(936), uint8] */
}

def @func_7843() -> Tensor[(13, 9, 4), float32] {
  @func_7841() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_5895() -> (Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) {
  @func_5893() /* ty=(Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) */
}

def @func_2964(%var_2963: Tensor[(160), uint64]) -> (Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) {
  %171 = fn (%var_2955: Tensor[(160), uint64]) -> (Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) {
    %164 = @func_2931() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %165 = cast(%var_2955, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %166 = cast(%var_2955, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %167 = reshape(%165, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
    %168 = reshape(%166, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
    %169 = %164.0;
    %170 = @func_1042(%167, %168) /* ty=Tensor[(5, 8, 4), float32] */;
    (%169, %170, %var_2955)
  };
  %171(%var_2963) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */
}

def @func_13296(%var_13293: Tensor[(576), float64], %var_13294: Tensor[(1344), int32], %var_13295: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(1344), int32], Tensor[(1344), int32], uint8, Tensor[(2, 144), uint32], Tensor[(13, 9, 4), float32]) {
  @func_13291(%var_13293, %var_13294, %var_13295) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(1344), int32], Tensor[(1344), int32], uint8, Tensor[(2, 144), uint32], Tensor[(13, 9, 4), float32]) */
}

def @func_16555() -> Tensor[(13, 9, 4), float32] {
  @func_16553() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_4587() -> (Tensor[(5, 6, 12), float64],) {
  %177 = fn () -> (Tensor[(5, 6, 12), float64],) {
    %172 = cast(meta[relay.Constant][10] /* ty=Tensor[(5, 6, 12), float64] */, dtype="float64") /* ty=Tensor[(5, 6, 12), float64] */;
    %173 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(5, 6, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %174 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 6, 12), float64] */, dtype="float64") /* ty=Tensor[(5, 6, 12), float64] */;
    %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %176 = power(%174, %175) /* ty=Tensor[(5, 6, 12), float64] */;
    (%176,)
  };
  %177() /* ty=(Tensor[(5, 6, 12), float64],) */
}

def @func_7574() -> Tensor[(936), uint8] {
  @func_7572() /* ty=Tensor[(936), uint8] */
}

def @func_12963(%var_12962: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], uint8, Tensor[(12), uint8], Tensor[(13, 9, 4), float32], Tensor[(6, 12, 5), bool], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32]) {
  %194 = fn (%var_12951: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], uint8, Tensor[(12), uint8], Tensor[(13, 9, 4), float32], Tensor[(6, 12, 5), bool], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32]) {
    %178 = @func_9200() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %179 = cast(meta[relay.Constant][11] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %180 = reshape(%179, newshape=[6, 2]) /* ty=Tensor[(6, 2), uint8] */;
    %181 = @func_2042(%180) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(6, 2), uint8]) */;
    %182 = @func_11810() /* ty=(Tensor[(6, 12, 5), float64], Tensor[(6, 12, 5), bool]) */;
    %183 = @func_9940() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %184 = cast(%var_12951, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %185 = reshape(%184, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %186 = @func_6477(%185) /* ty=(Tensor[(5, 6, 12), float64], uint8, Tensor[(288), uint32]) */;
    %187 = %178.0;
    %188 = %181.2;
    %189 = @func_1973() /* ty=Tensor[(13, 9, 4), float32] */;
    %190 = %182.1;
    %191 = @func_3664() /* ty=Tensor[(13, 9, 4), float32] */;
    %192 = %183.0;
    %193 = %186.2;
    (%187, %188, meta[relay.Constant][11] /* ty=Tensor[(12), uint8] */, %189, %190, %191, %192, %193, %var_12951)
  };
  %194(%var_12962) /* ty=(Tensor[(13, 9, 4), float32], uint8, Tensor[(12), uint8], Tensor[(13, 9, 4), float32], Tensor[(6, 12, 5), bool], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32]) */
}

def @func_15605() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %195 = @func_12246() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %196 = @func_6859() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %197 = %195.0;
  %198 = %196.0;
  (%197, %198)
}

def @func_14444() -> Tensor[(936), uint8] {
  @func_14442() /* ty=Tensor[(936), uint8] */
}

def @func_3134() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) {
  @func_3132() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) */
}

def @func_8619() -> (Tensor[(936), uint8],) {
  %201 = fn () -> (Tensor[(936), uint8],) {
    %199 = @func_3247() /* ty=(Tensor[(936), uint8],) */;
    %200 = %199.0;
    (%200,)
  };
  %201() /* ty=(Tensor[(936), uint8],) */
}

def @func_15857(%var_15851: Tensor[(432), float32]) -> (Tensor[(13, 9, 4), float32], Tensor[(16, 9, 3), float32], Tensor[(432), float32]) {
  %202 = @func_6280() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) */;
  %203 = cast(%var_15851, dtype="float32") /* ty=Tensor[(432), float32] */;
  %204 = reshape(%203, newshape=[16, 9, 3]) /* ty=Tensor[(16, 9, 3), float32] */;
  %205 = @func_7675(%204) /* ty=(Tensor[(16, 9, 3), float32], Tensor[(16, 9, 3), float64], Tensor[(13, 9, 4), float32]) */;
  %206 = %202.0;
  %207 = %205.0;
  (%206, %207, %var_15851)
}

def @func_15577() -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
  %211 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
    %208 = @func_7604() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
    %209 = %208.0;
    %210 = @func_12388() /* ty=Tensor[(160), uint64] */;
    (%209, %210)
  };
  %211() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */
}

def @func_10192() -> Tensor[(13, 9, 4), float32] {
  %212 = @func_8920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %212.0
}

def @func_4668() -> (Tensor[(13, 9, 4), int16],) {
  @func_4666() /* ty=(Tensor[(13, 9, 4), int16],) */
}

def @func_9311() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(576), float64], Tensor[(12), uint8]) {
  @func_9309() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(576), float64], Tensor[(12), uint8]) */
}

def @func_7721() -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  %217 = fn () -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
    %213 = @func_3547() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) */;
    %214 = @func_4326() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %215 = %213.2;
    %216 = %214.0;
    (%215, %216)
  };
  %217() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */
}

def @func_6282() -> (Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) {
  @func_6280() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) */
}

def @func_9183() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_9181() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_7355() -> (Tensor[(13, 9, 4), float32],) {
  %220 = fn () -> (Tensor[(13, 9, 4), float32],) {
    %218 = @func_5179() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %219 = %218.0;
    (%219,)
  };
  %220() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_10384() -> Tensor[(160), uint64] {
  %221 = @func_8254() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %221.1
}

def @func_13593(%var_13590: uint8, %var_13591: Tensor[(312, 2), float64], %var_13592: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(1, 12), uint8], Tensor[(12, 4, 13), float64], Tensor[(312, 2), float64], Tensor[(288), uint32], Tensor[(1344), int32], Tensor[(5, 6, 12), float64]) {
  %242 = fn (%var_13567: uint8, %var_13571: Tensor[(312, 2), float64], %var_13572: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(1, 12), uint8], Tensor[(12, 4, 13), float64], Tensor[(312, 2), float64], Tensor[(288), uint32], Tensor[(1344), int32], Tensor[(5, 6, 12), float64]) {
    %222 = @func_8795() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %223 = cast(%var_13567, dtype="uint8") /* ty=uint8 */;
    %224 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 12), uint8] */, dtype="uint8") /* ty=Tensor[(1, 12), uint8] */;
    %225 = reshape(%223, newshape=[]) /* ty=uint8 */;
    %226 = reshape(%224, newshape=[12]) /* ty=Tensor[(12), uint8] */;
    %227 = @func_1748(%225, %226) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) */;
    %228 = cast(%var_13571, dtype="float64") /* ty=Tensor[(312, 2), float64] */;
    %229 = cast(%var_13572, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %230 = cast(meta[relay.Constant][13] /* ty=Tensor[(1344), int32] */, dtype="int32") /* ty=Tensor[(1344), int32] */;
    %231 = cast(%var_13567, dtype="uint8") /* ty=uint8 */;
    %232 = reshape(%228, newshape=[624]) /* ty=Tensor[(624), float64] */;
    %233 = reshape(%229, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %234 = reshape(%230, newshape=[1344]) /* ty=Tensor[(1344), int32] */;
    %235 = reshape(%231, newshape=[]) /* ty=uint8 */;
    %236 = @func_8752(%232, %233, %234, %235) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624), int8], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(4, 72), uint32], Tensor[(1344), int32], uint8, Tensor[(13, 9, 4), float32]) */;
    %237 = @func_4874() /* ty=(Tensor[(5, 6, 12), float64],) */;
    %238 = %222.0;
    %239 = %227.1;
    %240 = %236.1;
    %241 = %237.0;
    (%238, %239, %var_13567, meta[relay.Constant][12] /* ty=Tensor[(1, 12), uint8] */, %240, %var_13571, %var_13572, meta[relay.Constant][13] /* ty=Tensor[(1344), int32] */, %241)
  };
  %242(%var_13590, %var_13591, %var_13592) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(1, 12), uint8], Tensor[(12, 4, 13), float64], Tensor[(312, 2), float64], Tensor[(288), uint32], Tensor[(1344), int32], Tensor[(5, 6, 12), float64]) */
}

def @func_8254() -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
  %243 = @func_3547() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %244 = @func_8121() /* ty=Tensor[(160), uint64] */;
  %245 = %243.1;
  (%244, %245)
}

def @func_5395() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float64]) {
  @func_5393() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float64]) */
}

def @func_6113(%var_6111: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(936), uint8], Tensor[(8, 20), uint64], Tensor[(288), uint32], uint8, uint8) {
  @func_6110(%var_6111) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(936), uint8], Tensor[(8, 20), uint64], Tensor[(288), uint32], uint8, uint8) */
}

def @func_6644(%var_6640: Tensor[(9, 5, 3), float64]) -> (Tensor[(9, 5, 3), float64],) {
  %246 = cast(%var_6640, dtype="float64") /* ty=Tensor[(9, 5, 3), float64] */;
  %247 = atanh(%246) /* ty=Tensor[(9, 5, 3), float64] */;
  (%247,)
}

def @func_8194(%var_8151: Tensor[(416), int64], %var_8179: Tensor[(4, 8, 13), float32]) -> (Tensor[(13, 9, 4), float32], Tensor[(416), int64], Tensor[(4, 8, 13), int16]) {
  %248 = @func_7381() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %249 = cast(%var_8151, dtype="int64") /* ty=Tensor[(416), int64] */;
  %250 = cast(%var_8151, dtype="int64") /* ty=Tensor[(416), int64] */;
  %251 = reshape(%249, newshape=[4, 8, 13]) /* ty=Tensor[(4, 8, 13), int64] */;
  %252 = reshape(%250, newshape=[4, 8, 13]) /* ty=Tensor[(4, 8, 13), int64] */;
  %253 = @func_4229(%251, %252) /* ty=(Tensor[(4, 8, 13), float32], Tensor[(7, 8, 2), float32], Tensor[(1, 112), int32], Tensor[(4, 40), uint64], Tensor[(288), uint32], Tensor[(130), bool], Tensor[(1, 12), uint8], Tensor[(4, 8, 13), float32], Tensor[(6, 2), uint8]) */;
  %254 = %253.0;
  %255 = cast(%var_8179, dtype="int16") /* ty=Tensor[(4, 8, 13), int16] */;
  %256 = shape_of(%254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(%254, dtype="int16") /* ty=Tensor[(4, 8, 13), int16] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %259 = %248.1;
  %260 = maximum(%257, %258) /* ty=Tensor[(4, 8, 13), int16] */;
  (%259, %var_8151, %260)
}

def @func_2671(%var_2617: Tensor[(9, 8, 8), float64]) -> (Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(9, 8, 8), float32]) {
  %261 = cast(meta[relay.Constant][14] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %262 = reshape(%261, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), uint32] */;
  %263 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %264 = cast(%var_2617, dtype="float64") /* ty=Tensor[(9, 8, 8), float64] */;
  %265 = sigmoid(%264) /* ty=Tensor[(9, 8, 8), float64] */;
  %266 = cast(%265, dtype="float64") /* ty=Tensor[(9, 8, 8), float64] */;
  %267 = asin(%266) /* ty=Tensor[(9, 8, 8), float64] */;
  %268 = cast(%265, dtype="bool") /* ty=Tensor[(9, 8, 8), bool] */;
  %269 = shape_of(%267, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(%267, dtype="bool") /* ty=Tensor[(9, 8, 8), bool] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %272 = greater(%270, %271) /* ty=Tensor[(9, 8, 8), bool] */;
  %273 = cast(%272, dtype="float32") /* ty=Tensor[(9, 8, 8), float32] */;
  %274 = @func_310(%262) /* ty=Tensor[(16, 3, 6), uint32] */;
  %275 = %263.0;
  %276 = log(%273) /* ty=Tensor[(9, 8, 8), float32] */;
  (%274, meta[relay.Constant][14] /* ty=Tensor[(288), uint32] */, %275, %276)
}

def @func_2120() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_15900() -> Tensor[(13, 9, 4), float32] {
  @func_7422() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_14442() -> Tensor[(936), uint8] {
  %277 = @func_10890() /* ty=(Tensor[(936), uint8],) */;
  %277.0
}

def @func_4848(%var_4847: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12, 1), uint8]) {
  %293 = fn (%var_4843: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12, 1), uint8]) {
    %278 = @func_4075() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %279 = @func_4630() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
    %280 = %279.0;
    %281 = cast(%280, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %282 = cast(%280, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %283 = reshape(%281, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
    %284 = reshape(%282, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
    %285 = cast(%var_4843, dtype="uint8") /* ty=uint8 */;
    %286 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 1), uint8] */, dtype="uint8") /* ty=Tensor[(12, 1), uint8] */;
    %287 = reshape(%285, newshape=[]) /* ty=uint8 */;
    %288 = reshape(%286, newshape=[3, 4]) /* ty=Tensor[(3, 4), uint8] */;
    %289 = @func_4017(%287, %288) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 12, 2), uint64], Tensor[(576), float64], uint8, Tensor[(3, 4), uint8], Tensor[(12), uint8], Tensor[(2, 6, 288), int32], Tensor[(16, 3, 6), uint32]) */;
    %290 = %278.0;
    %291 = @func_1042(%283, %284) /* ty=Tensor[(5, 8, 4), float32] */;
    %292 = %289.7;
    (%290, %280, %291, %292, %var_4843, meta[relay.Constant][15] /* ty=Tensor[(12, 1), uint8] */)
  };
  %293(%var_4847) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12, 1), uint8]) */
}

def @func_1845(%var_1842: Tensor[(7, 8, 2), int32], %var_1843: Tensor[(7, 8, 2), int32], %var_1844: Tensor[(8, 20), uint64]) -> (Tensor[(7, 8, 2), bool], Tensor[(7, 8, 2), float32], Tensor[(5, 8, 4), float32], Tensor[(8, 20), uint64], uint8, uint8, Tensor[(6, 2), uint8]) {
  %312 = fn (%var_1810: Tensor[(7, 8, 2), int32], %var_1811: Tensor[(7, 8, 2), int32], %var_1831: Tensor[(8, 20), uint64]) -> (Tensor[(7, 8, 2), bool], Tensor[(7, 8, 2), float32], Tensor[(5, 8, 4), float32], Tensor[(8, 20), uint64], uint8, uint8, Tensor[(6, 2), uint8]) {
    %294 = cast(%var_1811, dtype="bool") /* ty=Tensor[(7, 8, 2), bool] */;
    %295 = shape_of(%var_1810, dtype="int32") /* ty=Tensor[(3), int32] */;
    %296 = cast(%var_1810, dtype="bool") /* ty=Tensor[(7, 8, 2), bool] */;
    %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %298 = cast(%var_1811, dtype="float32") /* ty=Tensor[(7, 8, 2), float32] */;
    %299 = cast(%var_1831, dtype="uint64") /* ty=Tensor[(8, 20), uint64] */;
    %300 = cast(%var_1831, dtype="uint64") /* ty=Tensor[(8, 20), uint64] */;
    %301 = reshape(%299, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
    %302 = reshape(%300, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
    %303 = cast(meta[relay.Constant][16] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %304 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 2), uint8] */, dtype="uint8") /* ty=Tensor[(6, 2), uint8] */;
    %305 = reshape(%303, newshape=[]) /* ty=uint8 */;
    %306 = reshape(%304, newshape=[12]) /* ty=Tensor[(12), uint8] */;
    %307 = @func_1748(%305, %306) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) */;
    %308 = equal(%296, %297) /* ty=Tensor[(7, 8, 2), bool] */;
    %309 = sqrt(%298) /* ty=Tensor[(7, 8, 2), float32] */;
    %310 = @func_1042(%301, %302) /* ty=Tensor[(5, 8, 4), float32] */;
    %311 = %307.2;
    (%308, %309, %310, %var_1831, %311, meta[relay.Constant][16] /* ty=uint8 */, meta[relay.Constant][17] /* ty=Tensor[(6, 2), uint8] */)
  };
  %312(%var_1842, %var_1843, %var_1844) /* ty=(Tensor[(7, 8, 2), bool], Tensor[(7, 8, 2), float32], Tensor[(5, 8, 4), float32], Tensor[(8, 20), uint64], uint8, uint8, Tensor[(6, 2), uint8]) */
}

def @func_2931() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %313 = @func_2790() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %314 = @func_2827() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %315 = %313.0;
  %316 = %314.1;
  (%315, %316)
}

def @func_9844() -> (Tensor[(13, 9, 4), float32],) {
  %317 = @func_7381() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %318 = %317.1;
  (%318,)
}

def @func_5026() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_5024() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_5776() -> (Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) {
  %322 = fn () -> (Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) {
    %319 = @func_4718() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32]) */;
    %320 = %319.0;
    %321 = @func_3664() /* ty=Tensor[(13, 9, 4), float32] */;
    (%320, %321)
  };
  %322() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) */
}

def @func_11844() -> (Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(504), float32]) {
  %328 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(504), float32]) {
    %323 = cast(meta[relay.Constant][18] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %324 = reshape(%323, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float32] */;
    %325 = @func_9616(%324) /* ty=(Tensor[(4, 9, 14), float32], Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %326 = @func_10192() /* ty=Tensor[(13, 9, 4), float32] */;
    %327 = %325.2;
    (%326, %327, meta[relay.Constant][18] /* ty=Tensor[(504), float32] */)
  };
  %328() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(504), float32]) */
}

def @func_2072(%var_2071: Tensor[(160), uint64]) -> (Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) {
  %335 = fn (%var_2058: Tensor[(160), uint64]) -> (Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) {
    %329 = cast(%var_2058, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %330 = cast(%var_2058, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %331 = reshape(%329, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
    %332 = reshape(%330, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
    %333 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
    %334 = @func_1042(%331, %332) /* ty=Tensor[(5, 8, 4), float32] */;
    (%333, %334, %var_2058)
  };
  %335(%var_2071) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */
}

def @func_8646() -> (Tensor[(13, 9, 4), float32],) {
  @func_8644() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_3452(%var_3436: Tensor[(13, 9, 4), float32]) -> (Tensor[(13, 9, 4), float32],) {
  %336 = @func_3067() /* ty=Tensor[(13, 9, 4), float32] */;
  %337 = cast(%var_3436, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  %338 = shape_of(%336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %339 = cast(%336, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %341 = mod(%339, %340) /* ty=Tensor[(13, 9, 4), float32] */;
  (%341,)
}

def @func_12859() -> (Tensor[(160), uint64],) {
  %342 = @func_12388() /* ty=Tensor[(160), uint64] */;
  (%342,)
}

def @func_4930(%var_4929: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) {
  %353 = fn (%var_4916: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) {
    %343 = @func_4630() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
    %344 = cast(%var_4916, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %345 = cast(meta[relay.Constant][19] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %346 = reshape(%344, newshape=[6, 2]) /* ty=Tensor[(6, 2), uint8] */;
    %347 = reshape(%345, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %348 = @func_3060(%346, %347) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(6, 2), uint8], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(5, 8, 4), float32], Tensor[(2, 56), int32], Tensor[(160), uint64]) */;
    %349 = @func_2896() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %350 = %343.1;
    %351 = %348.9;
    %352 = %349.0;
    (%350, %351, %var_4916, meta[relay.Constant][19] /* ty=Tensor[(288), uint32] */, %352)
  };
  %353(%var_4929) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */
}

def @func_14617() -> Tensor[(13, 9, 4), float32] {
  %355 = fn () -> Tensor[(13, 9, 4), float32] {
    %354 = @func_3748() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %354.1
  };
  %355() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_8694() -> Tensor[(936), uint8] {
  @func_8692() /* ty=Tensor[(936), uint8] */
}

def @func_6316(%var_6314: Tensor[(624, 1), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624, 1), float64], Tensor[(13, 9, 4), float32]) {
  @func_6313(%var_6314) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624, 1), float64], Tensor[(13, 9, 4), float32]) */
}

def @func_9942() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_9940() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_10333() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %356 = @func_8048() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %357 = @func_8644() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %358 = %356.1;
  %359 = %357.0;
  (%358, %359)
}

def @func_15342() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %360 = @func_4075() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %361 = %360.0;
  %362 = @func_7841() /* ty=Tensor[(13, 9, 4), float32] */;
  (%361, %362)
}

def @func_9726() -> (Tensor[(13, 9, 4), float32], Tensor[(936), uint8]) {
  @func_9724() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8]) */
}

def @func_12248() -> (Tensor[(13, 9, 4), float32],) {
  @func_12246() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_5217(%var_5215: Tensor[(416), int64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(7, 8, 2), float32], Tensor[(416), int64]) {
  @func_5214(%var_5215) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(7, 8, 2), float32], Tensor[(416), int64]) */
}

def @func_12750(%var_12748: Tensor[(24, 12), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(24, 12), uint32], Tensor[(13, 9, 4), float32]) {
  @func_12747(%var_12748) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(24, 12), uint32], Tensor[(13, 9, 4), float32]) */
}

def @func_15414(%var_15413: Tensor[(11, 14, 14), float64]) -> Tensor[(11, 14, 14), float64] {
  %364 = fn (%var_15409: Tensor[(11, 14, 14), float64]) -> Tensor[(11, 14, 14), float64] {
    %363 = cast(%var_15409, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
    erf(%363) /* ty=Tensor[(11, 14, 14), float64] */
  };
  %364(%var_15413) /* ty=Tensor[(11, 14, 14), float64] */
}

def @func_12897() -> Tensor[(13, 9, 4), float32] {
  @func_7973() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_16526() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) {
  %370 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) {
    %365 = @func_7354() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %366 = @func_5893() /* ty=(Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) */;
    %367 = %365.0;
    %368 = %366.0;
    %369 = @func_4244() /* ty=Tensor[(13, 9, 4), float32] */;
    (%367, %368, %369)
  };
  %370() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) */
}

def @func_13685() -> (Tensor[(13, 9, 4), float32],) {
  @func_13683() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_17077(%var_17076: Tensor[(10, 10, 9), float64]) -> (Tensor[(10, 10, 9), int32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %384 = fn (%var_16980: Tensor[(10, 10, 9), float64]) -> (Tensor[(10, 10, 9), int32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %371 = @func_13628() /* ty=(Tensor[(10, 10, 1), float64], Tensor[(234, 2), bool]) */;
    %372 = %371.0;
    %373 = cast(%372, dtype="int32") /* ty=Tensor[(10, 10, 1), int32] */;
    %374 = cast(%var_16980, dtype="int32") /* ty=Tensor[(10, 10, 9), int32] */;
    %375 = @func_8606() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %376 = @func_8644() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %377 = @func_12493() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
    %378 = bitwise_or(%373, %374) /* ty=Tensor[(10, 10, 9), int32] */;
    %379 = %375.1;
    %380 = @func_5322() /* ty=Tensor[(13, 9, 4), float32] */;
    %381 = %376.0;
    %382 = %377.1;
    %383 = @func_11076() /* ty=Tensor[(13, 9, 4), float32] */;
    (%378, %379, %380, %381, %382, %383)
  };
  %384(%var_17076) /* ty=(Tensor[(10, 10, 9), int32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_9378() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %388 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %385 = @func_2931() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %386 = %385.1;
    %387 = @func_4434() /* ty=Tensor[(13, 9, 4), float32] */;
    (%386, %387)
  };
  %388() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_12020() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_12018() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_8920() -> (Tensor[(13, 9, 4), float32],) {
  %389 = @func_5179() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %390 = %389.0;
  (%390,)
}

def @func_1921() -> (Tensor[(13, 9, 4), float32],) {
  %392 = fn () -> (Tensor[(13, 9, 4), float32],) {
    %391 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
    (%391,)
  };
  %392() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_9796() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %393 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %394 = @func_5322() /* ty=Tensor[(13, 9, 4), float32] */;
  %395 = %393.1;
  (%394, %395)
}

def @func_8081() -> Tensor[(13, 9, 4), float32] {
  @func_5322() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_2388() -> Tensor[(13, 9, 4), float32] {
  %397 = fn () -> Tensor[(13, 9, 4), float32] {
    %396 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %396.0
  };
  %397() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_10194() -> Tensor[(13, 9, 4), float32] {
  @func_10192() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_7901(%var_7900: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(12), uint8]) {
  %407 = fn (%var_7896: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(12), uint8]) {
    %398 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %399 = cast(meta[relay.Constant][20] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %400 = cast(%var_7896, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %401 = reshape(%399, newshape=[]) /* ty=uint8 */;
    %402 = reshape(%400, newshape=[12]) /* ty=Tensor[(12), uint8] */;
    %403 = @func_1748(%401, %402) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) */;
    %404 = @func_4144() /* ty=Tensor[(13, 9, 4), float32] */;
    %405 = %398.0;
    %406 = %403.0;
    (%404, %405, %406, meta[relay.Constant][20] /* ty=uint8 */, %var_7896)
  };
  %407(%var_7900) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(12), uint8]) */
}

def @func_8256() -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
  @func_8254() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */
}

def @func_1974() -> Tensor[(13, 9, 4), float32] {
  %409 = fn () -> Tensor[(13, 9, 4), float32] {
    %408 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %408.0
  };
  %409() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_10769() -> (Tensor[(13, 9, 4), float32],) {
  %411 = fn () -> (Tensor[(13, 9, 4), float32],) {
    %410 = @func_10722() /* ty=Tensor[(13, 9, 4), float32] */;
    (%410,)
  };
  %411() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_13935() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  @func_13933() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */
}

def @func_9336() -> (Tensor[(13, 9, 4), float32],) {
  @func_9334() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_9619(%var_9617: Tensor[(4, 9, 14), float32]) -> (Tensor[(4, 9, 14), float32], Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_9616(%var_9617) /* ty=(Tensor[(4, 9, 14), float32], Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_3132() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) {
  %412 = cast(meta[relay.Constant][21] /* ty=Tensor[(936), uint8] */, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %413 = cast(meta[relay.Constant][21] /* ty=Tensor[(936), uint8] */, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %414 = reshape(%412, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), uint8] */;
  %415 = reshape(%413, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), uint8] */;
  %416 = @func_2554(%414, %415) /* ty=(Tensor[(13, 9, 8), uint8], Tensor[(56, 2), int32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32]) */;
  %417 = @func_2387() /* ty=Tensor[(13, 9, 4), float32] */;
  %418 = %416.0;
  (%417, %418, meta[relay.Constant][21] /* ty=Tensor[(936), uint8] */)
}

def @func_9616(%var_9563: Tensor[(4, 9, 14), float32]) -> (Tensor[(4, 9, 14), float32], Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %419 = cast(%var_9563, dtype="float32") /* ty=Tensor[(4, 9, 14), float32] */;
  %420 = cast(meta[relay.Constant][22] /* ty=Tensor[(1287), float32] */, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %421 = reshape(%420, newshape=[1287]) /* ty=Tensor[(1287), float32] */;
  %422 = @func_6393(%421) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) */;
  %423 = tan(%419) /* ty=Tensor[(4, 9, 14), float32] */;
  %424 = %422.1;
  %425 = @func_4244() /* ty=Tensor[(13, 9, 4), float32] */;
  %426 = @func_9536() /* ty=Tensor[(13, 9, 4), float32] */;
  (%423, %424, meta[relay.Constant][22] /* ty=Tensor[(1287), float32] */, %425, %426)
}

def @func_2898() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_2896() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_10962() -> (Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_10960() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_10115() -> Tensor[(13, 9, 4), float32] {
  %428 = fn () -> Tensor[(13, 9, 4), float32] {
    %427 = @func_4326() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %427.0
  };
  %428() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_9811() -> Tensor[(13, 9, 4), float32] {
  %429 = @func_9200() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %429.0
}

def @func_2933() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_2931() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_9550() -> (Tensor[(13, 9, 4), float32],) {
  @func_9548() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_15263() -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) {
  @func_15261() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) */
}

def @func_15986() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %430 = @func_6055() /* ty=Tensor[(13, 9, 4), float32] */;
  %431 = @func_15149() /* ty=Tensor[(13, 9, 4), float32] */;
  (%430, %431)
}

def @func_1788(%var_1780: Tensor[(11, 9, 13), float32]) -> (Tensor[(11, 9, 13), float32],) {
  %432 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 9, 13), float32] */, dtype="float32") /* ty=Tensor[(11, 9, 13), float32] */;
  %433 = shape_of(%var_1780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %434 = cast(%var_1780, dtype="float32") /* ty=Tensor[(11, 9, 13), float32] */;
  %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %436 = divide(%434, %435) /* ty=Tensor[(11, 9, 13), float32] */;
  (%436,)
}

def @func_5804() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %437 = @func_2896() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %438 = @func_1973() /* ty=Tensor[(13, 9, 4), float32] */;
  %439 = %437.0;
  (%438, %439)
}

def @func_2447() -> (Tensor[(13, 9, 4), float32],) {
  %444 = fn () -> (Tensor[(13, 9, 4), float32],) {
    %440 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %441 = %440.0;
    %442 = cast(%441, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
    %443 = tan(%442) /* ty=Tensor[(13, 9, 4), float32] */;
    (%443,)
  };
  %444() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_10723() -> Tensor[(13, 9, 4), float32] {
  %446 = fn () -> Tensor[(13, 9, 4), float32] {
    %445 = @func_7354() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %445.0
  };
  %446() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_6280() -> (Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) {
  %447 = @func_3247() /* ty=(Tensor[(936), uint8],) */;
  %448 = @func_4326() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %449 = @func_4244() /* ty=Tensor[(13, 9, 4), float32] */;
  %450 = %447.0;
  %451 = %448.0;
  (%449, %450, %451)
}

def @func_1042(%var_1029: Tensor[(5, 8, 4), uint64], %var_1030: Tensor[(5, 8, 4), uint64]) -> Tensor[(5, 8, 4), float32] {
  %452 = cast(%var_1030, dtype="uint64") /* ty=Tensor[(5, 8, 4), uint64] */;
  %453 = shape_of(%var_1029, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(%var_1029, dtype="uint64") /* ty=Tensor[(5, 8, 4), uint64] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %456 = left_shift(%454, %455) /* ty=Tensor[(5, 8, 4), uint64] */;
  %457 = cast(%456, dtype="float32") /* ty=Tensor[(5, 8, 4), float32] */;
  log(%457) /* ty=Tensor[(5, 8, 4), float32] */
}

def @func_5681() -> (Tensor[(13, 9, 4), float32],) {
  @func_5679() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_3837() -> Tensor[(13, 9, 4), float32] {
  %458 = fn () -> Tensor[(13, 9, 4), float32] {
    @func_3067() /* ty=Tensor[(13, 9, 4), float32] */
  };
  %458() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_10836(%var_10825: Tensor[(13, 9, 4), float32]) -> (Tensor[(13, 9, 4), uint32], Tensor[(13, 9, 4), float32]) {
  %459 = @func_5775() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) */;
  %460 = %459.1;
  %461 = cast(%var_10825, dtype="uint32") /* ty=Tensor[(13, 9, 4), uint32] */;
  %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%460, dtype="uint32") /* ty=Tensor[(13, 9, 4), uint32] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %465 = @func_8048() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %466 = right_shift(%463, %464) /* ty=Tensor[(13, 9, 4), uint32] */;
  %467 = %465.1;
  (%466, %467)
}

def @func_10136() -> Tensor[(13, 9, 4), float32] {
  %468 = @func_5179() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %468.0
}

def @func_10993() -> (Tensor[(13, 9, 4), float32],) {
  %469 = @func_9377() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %470 = %469.0;
  (%470,)
}

def @func_1046(%var_1044: Tensor[(5, 8, 4), uint64], %var_1045: Tensor[(5, 8, 4), uint64]) -> Tensor[(5, 8, 4), float32] {
  @func_1042(%var_1044, %var_1045) /* ty=Tensor[(5, 8, 4), float32] */
}

def @func_11470() -> Tensor[(13, 9, 4), int16] {
  @func_11468() /* ty=Tensor[(13, 9, 4), int16] */
}

def @func_3654(%var_3653: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) {
  %483 = fn (%var_3647: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) {
    %471 = @func_2931() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %472 = cast(meta[relay.Constant][24] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %473 = cast(meta[relay.Constant][25] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %474 = cast(%var_3647, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %475 = reshape(%472, newshape=[]) /* ty=uint8 */;
    %476 = reshape(%473, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), uint8] */;
    %477 = reshape(%474, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %478 = @func_1011(%475, %476, %477) /* ty=(Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
    %479 = @func_2790() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %480 = %471.0;
    %481 = %478.1;
    %482 = %479.0;
    (%480, %481, meta[relay.Constant][24] /* ty=uint8 */, meta[relay.Constant][25] /* ty=Tensor[(12), uint8] */, %var_3647, %482)
  };
  %483(%var_3653) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */
}

def @func_9234(%var_9233: Tensor[(10, 7, 15), float64]) -> Tensor[(10, 7, 15), float64] {
  %487 = fn (%var_9209: Tensor[(10, 7, 15), float64]) -> Tensor[(10, 7, 15), float64] {
    %484 = cast(%var_9209, dtype="float64") /* ty=Tensor[(10, 7, 15), float64] */;
    %485 = log10(%484) /* ty=Tensor[(10, 7, 15), float64] */;
    %486 = cast(%485, dtype="float64") /* ty=Tensor[(10, 7, 15), float64] */;
    acosh(%486) /* ty=Tensor[(10, 7, 15), float64] */
  };
  %487(%var_9233) /* ty=Tensor[(10, 7, 15), float64] */
}

def @func_13509(%var_13507: Tensor[(3, 16, 8), uint8], %var_13508: Tensor[(3, 16, 8), uint8]) -> (Tensor[(3, 16, 8), uint8], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
  @func_13505(%var_13507, %var_13508) /* ty=(Tensor[(3, 16, 8), uint8], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */
}

def @func_11541() -> Tensor[(936), uint8] {
  @func_11539() /* ty=Tensor[(936), uint8] */
}

def @func_15902() -> Tensor[(13, 9, 4), float32] {
  @func_15900() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_13630() -> (Tensor[(10, 10, 1), float64], Tensor[(234, 2), bool]) {
  @func_13628() /* ty=(Tensor[(10, 10, 1), float64], Tensor[(234, 2), bool]) */
}

def @func_1011(%var_994: uint8, %var_995: Tensor[(2, 6, 1), uint8], %var_1000: Tensor[(288), uint32]) -> (Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) {
  %488 = cast(%var_994, dtype="uint8") /* ty=uint8 */;
  %489 = cast(%var_995, dtype="uint8") /* ty=Tensor[(2, 6, 1), uint8] */;
  %490 = cast(%var_1000, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %491 = reshape(%490, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), uint32] */;
  %492 = logical_xor(%488, %489) /* ty=Tensor[(2, 6, 1), uint8] */;
  %493 = @func_310(%491) /* ty=Tensor[(16, 3, 6), uint32] */;
  (%492, %493, %var_1000)
}

def @func_13020() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_13018() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_4874() -> (Tensor[(5, 6, 12), float64],) {
  %494 = @func_4718() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32]) */;
  %495 = %494.0;
  (%495,)
}

def @func_3620(%var_3618: Tensor[(36, 16), float64]) -> (Tensor[(13, 12, 2), uint64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(36, 16), int32]) {
  @func_3617(%var_3618) /* ty=(Tensor[(13, 12, 2), uint64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(36, 16), int32]) */
}

def @func_5749(%var_5722: Tensor[(7, 14, 13), int8], %var_5723: Tensor[(7, 14, 13), int8], %var_5734: uint8, %var_5736: Tensor[(4, 72), uint32]) -> (Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(4, 72), uint32], Tensor[(7, 14, 13), float32]) {
  %496 = cast(%var_5734, dtype="uint8") /* ty=uint8 */;
  %497 = cast(meta[relay.Constant][26] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %498 = cast(%var_5736, dtype="uint32") /* ty=Tensor[(4, 72), uint32] */;
  %499 = reshape(%496, newshape=[]) /* ty=uint8 */;
  %500 = reshape(%497, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), uint8] */;
  %501 = reshape(%498, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %502 = @func_1011(%499, %500, %501) /* ty=(Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
  %503 = cast(%var_5723, dtype="int8") /* ty=Tensor[(7, 14, 13), int8] */;
  %504 = shape_of(%var_5722, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%var_5722, dtype="int8") /* ty=Tensor[(7, 14, 13), int8] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %507 = add(%505, %506) /* ty=Tensor[(7, 14, 13), int8] */;
  %508 = cast(%507, dtype="float32") /* ty=Tensor[(7, 14, 13), float32] */;
  %509 = %502.1;
  %510 = cos(%508) /* ty=Tensor[(7, 14, 13), float32] */;
  (%509, %var_5734, meta[relay.Constant][26] /* ty=Tensor[(12), uint8] */, %var_5736, %510)
}

def @func_9798() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_9796() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_11269(%var_11238: Tensor[(1274), int8]) -> (Tensor[(13, 9, 4), float32], Tensor[(1274), int8], uint8, Tensor[(288), uint32], Tensor[(4, 72), float32]) {
  %511 = @func_10470() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) */;
  %512 = cast(%var_11238, dtype="int8") /* ty=Tensor[(1274), int8] */;
  %513 = cast(%var_11238, dtype="int8") /* ty=Tensor[(1274), int8] */;
  %514 = cast(meta[relay.Constant][27] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %515 = cast(meta[relay.Constant][28] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %516 = reshape(%512, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int8] */;
  %517 = reshape(%513, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int8] */;
  %518 = reshape(%514, newshape=[]) /* ty=uint8 */;
  %519 = reshape(%515, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint32] */;
  %520 = @func_5749(%516, %517, %518, %519) /* ty=(Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(4, 72), uint32], Tensor[(7, 14, 13), float32]) */;
  %521 = %520.3;
  %522 = cast(%521, dtype="float32") /* ty=Tensor[(4, 72), float32] */;
  %523 = %511.1;
  %524 = atan(%522) /* ty=Tensor[(4, 72), float32] */;
  (%523, %var_11238, meta[relay.Constant][27] /* ty=uint8 */, meta[relay.Constant][28] /* ty=Tensor[(288), uint32] */, %524)
}

def @func_15860(%var_15858: Tensor[(432), float32]) -> (Tensor[(13, 9, 4), float32], Tensor[(16, 9, 3), float32], Tensor[(432), float32]) {
  @func_15857(%var_15858) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 9, 3), float32], Tensor[(432), float32]) */
}

def @func_7790() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %528 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %525 = @func_2790() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %526 = @func_2387() /* ty=Tensor[(13, 9, 4), float32] */;
    %527 = %525.0;
    (%526, %527)
  };
  %528() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_15650() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %534 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %529 = @func_8644() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %530 = @func_5679() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %531 = @func_7253() /* ty=Tensor[(13, 9, 4), float32] */;
    %532 = %529.0;
    %533 = %530.0;
    (%531, %532, %533)
  };
  %534() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_10714() -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %543 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %535 = @func_2827() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %536 = @func_8254() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
    %537 = @func_8874() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
    %538 = %535.0;
    %539 = %536.0;
    %540 = @func_10192() /* ty=Tensor[(13, 9, 4), float32] */;
    %541 = @func_8889() /* ty=Tensor[(13, 9, 4), float32] */;
    %542 = %537.0;
    (%538, %539, %540, %541, %542)
  };
  %543() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_9548() -> (Tensor[(13, 9, 4), float32],) {
  %544 = @func_6714() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %545 = %544.1;
  (%545,)
}

def @func_10138() -> Tensor[(13, 9, 4), float32] {
  @func_10136() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_10579() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
  %546 = @func_9377() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %547 = @func_7381() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %548 = @func_5024() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %549 = @func_8254() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %550 = @func_9811() /* ty=Tensor[(13, 9, 4), float32] */;
  %551 = %546.0;
  %552 = %547.0;
  %553 = %548.1;
  %554 = %549.0;
  (%550, %551, %552, %553, %554)
}

def @func_1676() -> Tensor[(13, 9, 4), float32] {
  %555 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 9, 4), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  atanh(%555) /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_14200(%var_14190: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(12), uint8], Tensor[(5, 6, 12), float64], Tensor[(288), uint32]) {
  %556 = cast(%var_14190, dtype="uint8") /* ty=uint8 */;
  %557 = cast(meta[relay.Constant][30] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %558 = reshape(%556, newshape=[]) /* ty=uint8 */;
  %559 = reshape(%557, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %560 = @func_1748(%558, %559) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) */;
  %561 = cast(meta[relay.Constant][31] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %562 = reshape(%561, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %563 = @func_6477(%562) /* ty=(Tensor[(5, 6, 12), float64], uint8, Tensor[(288), uint32]) */;
  %564 = @func_8081() /* ty=Tensor[(13, 9, 4), float32] */;
  %565 = %560.5;
  %566 = %563.0;
  (%564, %565, %var_14190, meta[relay.Constant][30] /* ty=Tensor[(12), uint8] */, %566, meta[relay.Constant][31] /* ty=Tensor[(288), uint32] */)
}

def @func_7678(%var_7676: Tensor[(16, 9, 3), float32]) -> (Tensor[(16, 9, 3), float32], Tensor[(16, 9, 3), float64], Tensor[(13, 9, 4), float32]) {
  @func_7675(%var_7676) /* ty=(Tensor[(16, 9, 3), float32], Tensor[(16, 9, 3), float64], Tensor[(13, 9, 4), float32]) */
}

def @func_14889() -> Tensor[(13, 9, 4), float32] {
  %568 = fn () -> Tensor[(13, 9, 4), float32] {
    %567 = @func_12493() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
    %567.1
  };
  %568() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_2896() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %569 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %570 = %569.0;
  %571 = @func_2387() /* ty=Tensor[(13, 9, 4), float32] */;
  (%570, %571)
}

def @func_12540() -> (Tensor[(13, 9, 4), float32], uint8, Tensor[(1274), int8]) {
  %572 = @func_9200() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %573 = cast(meta[relay.Constant][32] /* ty=Tensor[(1274), int8] */, dtype="int8") /* ty=Tensor[(1274), int8] */;
  %574 = reshape(%573, newshape=[1274]) /* ty=Tensor[(1274), int8] */;
  %575 = @func_11269(%574) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(1274), int8], uint8, Tensor[(288), uint32], Tensor[(4, 72), float32]) */;
  %576 = %572.0;
  %577 = %575.2;
  (%576, %577, meta[relay.Constant][32] /* ty=Tensor[(1274), int8] */)
}

def @func_11764(%var_11763: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], uint8, Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(504), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %600 = fn (%var_11626: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], uint8, Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(504), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %578 = @func_4815() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %579 = cast(%var_11626, dtype="uint8") /* ty=uint8 */;
    %580 = reshape(%579, newshape=[]) /* ty=uint8 */;
    %581 = @func_4846(%580) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12, 1), uint8]) */;
    %582 = cast(meta[relay.Constant][33] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %583 = reshape(%582, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %584 = @func_6110(%583) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(936), uint8], Tensor[(8, 20), uint64], Tensor[(288), uint32], uint8, uint8) */;
    %585 = cast(meta[relay.Constant][33] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %586 = reshape(%585, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %587 = @func_6477(%586) /* ty=(Tensor[(5, 6, 12), float64], uint8, Tensor[(288), uint32]) */;
    %588 = @func_8606() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %589 = cast(meta[relay.Constant][34] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %590 = reshape(%589, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float32] */;
    %591 = @func_9616(%590) /* ty=(Tensor[(4, 9, 14), float32], Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %592 = %578.1;
    %593 = %581.2;
    %594 = %584.0;
    %595 = %587.1;
    %596 = %588.1;
    %597 = %591.4;
    %598 = @func_10722() /* ty=Tensor[(13, 9, 4), float32] */;
    %599 = @func_10114() /* ty=Tensor[(13, 9, 4), float32] */;
    (%592, %593, %var_11626, %594, meta[relay.Constant][33] /* ty=Tensor[(288), uint32] */, %595, %596, %597, meta[relay.Constant][34] /* ty=Tensor[(504), float32] */, %598, %599)
  };
  %600(%var_11763) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], uint8, Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(504), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_6006(%var_5987: Tensor[(16, 6, 14), uint16], %var_5988: Tensor[(16, 6, 14), uint16]) -> (Tensor[(16, 6, 14), uint32],) {
  %601 = cast(%var_5988, dtype="bool") /* ty=Tensor[(16, 6, 14), bool] */;
  %602 = shape_of(%var_5987, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%var_5987, dtype="bool") /* ty=Tensor[(16, 6, 14), bool] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %605 = not_equal(%603, %604) /* ty=Tensor[(16, 6, 14), bool] */;
  %606 = cast(%var_5988, dtype="uint32") /* ty=Tensor[(16, 6, 14), uint32] */;
  %607 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%605, dtype="uint32") /* ty=Tensor[(16, 6, 14), uint32] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %610 = bitwise_or(%608, %609) /* ty=Tensor[(16, 6, 14), uint32] */;
  (%610,)
}

def @func_9658() -> (Tensor[(13, 9, 4), float32], Tensor[(936), uint8]) {
  %615 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(936), uint8]) {
    %611 = @func_7381() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %612 = @func_3786() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), int64], Tensor[(56, 2), int32], Tensor[(936), uint8]) */;
    %613 = %611.1;
    %614 = %612.3;
    (%613, %614)
  };
  %615() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8]) */
}

def @func_11811() -> (Tensor[(6, 12, 5), float64], Tensor[(6, 12, 5), bool]) {
  %625 = fn () -> (Tensor[(6, 12, 5), float64], Tensor[(6, 12, 5), bool]) {
    %616 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 12, 5), float64] */, dtype="float64") /* ty=Tensor[(6, 12, 5), float64] */;
    %617 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 12, 5), float64] */, dtype="float32") /* ty=Tensor[(6, 12, 5), float32] */;
    %618 = cos(%617) /* ty=Tensor[(6, 12, 5), float32] */;
    %619 = cast(%618, dtype="bool") /* ty=Tensor[(6, 12, 5), bool] */;
    %620 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(6, 12, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %621 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 12, 5), float64] */, dtype="bool") /* ty=Tensor[(6, 12, 5), bool] */;
    %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %623 = sigmoid(%616) /* ty=Tensor[(6, 12, 5), float64] */;
    %624 = not_equal(%621, %622) /* ty=Tensor[(6, 12, 5), bool] */;
    (%623, %624)
  };
  %625() /* ty=(Tensor[(6, 12, 5), float64], Tensor[(6, 12, 5), bool]) */
}

def @func_12542() -> (Tensor[(13, 9, 4), float32], uint8, Tensor[(1274), int8]) {
  @func_12540() /* ty=(Tensor[(13, 9, 4), float32], uint8, Tensor[(1274), int8]) */
}

def @func_6479(%var_6478: Tensor[(288), uint32]) -> (Tensor[(5, 6, 12), float64], uint8, Tensor[(288), uint32]) {
  %632 = fn (%var_6471: Tensor[(288), uint32]) -> (Tensor[(5, 6, 12), float64], uint8, Tensor[(288), uint32]) {
    %626 = @func_4874() /* ty=(Tensor[(5, 6, 12), float64],) */;
    %627 = cast(%var_6471, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %628 = reshape(%627, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %629 = @func_3652(%628) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */;
    %630 = %626.0;
    %631 = %629.2;
    (%630, %631, %var_6471)
  };
  %632(%var_6478) /* ty=(Tensor[(5, 6, 12), float64], uint8, Tensor[(288), uint32]) */
}

def @func_6799(%var_6798: Tensor[(576), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64]) {
  %639 = fn (%var_6795: Tensor[(576), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64]) {
    %633 = @func_3547() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) */;
    %634 = cast(%var_6795, dtype="float64") /* ty=Tensor[(576), float64] */;
    %635 = reshape(%634, newshape=[6, 96]) /* ty=Tensor[(6, 96), float64] */;
    %636 = @func_5631(%635) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(6, 96), bool]) */;
    %637 = %633.0;
    %638 = %636.0;
    (%637, %638, %var_6795)
  };
  %639(%var_6798) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64]) */
}

def @func_9334() -> (Tensor[(13, 9, 4), float32],) {
  %640 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %641 = %640.0;
  (%641,)
}

def @func_10267() -> (Tensor[(13, 9, 4), float32],) {
  @func_10265() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_8026() -> Tensor[(13, 9, 4), float32] {
  %642 = fn () -> Tensor[(13, 9, 4), float32] {
    @func_6524() /* ty=Tensor[(13, 9, 4), float32] */
  };
  %642() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_5323() -> Tensor[(13, 9, 4), float32] {
  %644 = fn () -> Tensor[(13, 9, 4), float32] {
    %643 = @func_3748() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %643.2
  };
  %644() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_12607() -> (Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32]) {
  @func_12605() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32]) */
}

def @func_6010(%var_6008: Tensor[(16, 6, 14), uint16], %var_6009: Tensor[(16, 6, 14), uint16]) -> (Tensor[(16, 6, 14), uint32],) {
  @func_6006(%var_6008, %var_6009) /* ty=(Tensor[(16, 6, 14), uint32],) */
}

def @func_11605() -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  %647 = fn () -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
    %645 = @func_10384() /* ty=Tensor[(160), uint64] */;
    %646 = @func_7253() /* ty=Tensor[(13, 9, 4), float32] */;
    (%645, %646)
  };
  %647() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */
}

def @func_8437(%var_8434: Tensor[(1344), int32], %var_8435: uint8, %var_8436: Tensor[(4, 72), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(16, 7, 12), int32], Tensor[(1344), int32], uint8, Tensor[(4, 72), uint32]) {
  @func_8432(%var_8434, %var_8435, %var_8436) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 7, 12), int32], Tensor[(1344), int32], uint8, Tensor[(4, 72), uint32]) */
}

def @func_2674(%var_2672: Tensor[(9, 8, 8), float64]) -> (Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(9, 8, 8), float32]) {
  @func_2671(%var_2672) /* ty=(Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(9, 8, 8), float32]) */
}

def @func_6715() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %652 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %648 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %649 = @func_6176() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %650 = %648.0;
    %651 = %649.0;
    (%650, %651)
  };
  %652() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_13291(%var_13240: Tensor[(576), float64], %var_13276: Tensor[(1344), int32], %var_13277: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(1344), int32], Tensor[(1344), int32], uint8, Tensor[(2, 144), uint32], Tensor[(13, 9, 4), float32]) {
  %653 = @func_8825() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %654 = @func_9334() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %655 = cast(%var_13240, dtype="float64") /* ty=Tensor[(576), float64] */;
  %656 = reshape(%655, newshape=[36, 16]) /* ty=Tensor[(36, 16), float64] */;
  %657 = @func_3617(%656) /* ty=(Tensor[(13, 12, 2), uint64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(36, 16), int32]) */;
  %658 = @func_11938() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(8, 36), uint32], Tensor[(160), uint64]) */;
  %659 = @func_12336() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %660 = cast(%var_13276, dtype="int32") /* ty=Tensor[(1344), int32] */;
  %661 = cast(%var_13277, dtype="uint8") /* ty=uint8 */;
  %662 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 144), uint32] */, dtype="uint32") /* ty=Tensor[(2, 144), uint32] */;
  %663 = reshape(%660, newshape=[1344]) /* ty=Tensor[(1344), int32] */;
  %664 = reshape(%661, newshape=[]) /* ty=uint8 */;
  %665 = reshape(%662, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint32] */;
  %666 = @func_8432(%663, %664, %665) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 7, 12), int32], Tensor[(1344), int32], uint8, Tensor[(4, 72), uint32]) */;
  %667 = @func_2931() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %668 = %653.0;
  %669 = %654.0;
  %670 = %657.2;
  %671 = %658.1;
  %672 = %659.0;
  %673 = %666.2;
  %674 = %667.1;
  (%668, %669, %670, %var_13240, %671, %672, %673, %var_13276, %var_13277, meta[relay.Constant][36] /* ty=Tensor[(2, 144), uint32] */, %674)
}

def @func_13505(%var_13476: Tensor[(3, 16, 8), uint8], %var_13477: Tensor[(3, 16, 8), uint8]) -> (Tensor[(3, 16, 8), uint8], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
  %675 = cast(%var_13477, dtype="uint8") /* ty=Tensor[(3, 16, 8), uint8] */;
  %676 = shape_of(%var_13476, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%var_13476, dtype="uint8") /* ty=Tensor[(3, 16, 8), uint8] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %679 = @func_9334() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %680 = @func_12493() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %681 = multiply(%677, %678) /* ty=Tensor[(3, 16, 8), uint8] */;
  %682 = %679.0;
  %683 = @func_10136() /* ty=Tensor[(13, 9, 4), float32] */;
  %684 = %680.0;
  (%681, %682, %683, %684)
}

def @func_15484() -> (Tensor[(16, 8, 12), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %685 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 8, 12), float32] */, dtype="float32") /* ty=Tensor[(16, 8, 12), float32] */;
  %686 = exp(%685) /* ty=Tensor[(16, 8, 12), float32] */;
  %687 = @func_3664() /* ty=Tensor[(13, 9, 4), float32] */;
  %688 = @func_2387() /* ty=Tensor[(13, 9, 4), float32] */;
  (%686, %687, %688)
}

def @func_16226() -> (Tensor[(13, 9, 4), float32], Tensor[(4, 9, 14), float32], Tensor[(504), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %689 = @func_10713() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %690 = cast(meta[relay.Constant][38] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %691 = reshape(%690, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float32] */;
  %692 = @func_9616(%691) /* ty=(Tensor[(4, 9, 14), float32], Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %693 = @func_10960() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %694 = @func_10470() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) */;
  %695 = %689.4;
  %696 = %692.0;
  %697 = %693.1;
  %698 = %694.1;
  (%695, %696, meta[relay.Constant][38] /* ty=Tensor[(504), float32] */, %697, %698)
}

def @func_7520(%var_7518: Tensor[(576), float64], %var_7519: Tensor[(11, 117), float32]) -> (Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(11, 9, 13), float32], Tensor[(11, 117), float32]) {
  %715 = fn (%var_7497: Tensor[(576), float64], %var_7512: Tensor[(11, 117), float32]) -> (Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(11, 9, 13), float32], Tensor[(11, 117), float32]) {
    %699 = @func_3247() /* ty=(Tensor[(936), uint8],) */;
    %700 = cast(%var_7497, dtype="float64") /* ty=Tensor[(576), float64] */;
    %701 = reshape(%700, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), float64] */;
    %702 = @func_2671(%701) /* ty=(Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(9, 8, 8), float32]) */;
    %703 = @func_4255() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %704 = %703.0;
    %705 = cast(%704, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
    %706 = cast(%var_7512, dtype="float32") /* ty=Tensor[(11, 117), float32] */;
    %707 = reshape(%706, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), float32] */;
    %708 = @func_1788(%707) /* ty=(Tensor[(11, 9, 13), float32],) */;
    %709 = @func_3067() /* ty=Tensor[(13, 9, 4), float32] */;
    %710 = %699.0;
    %711 = @func_4391() /* ty=Tensor[(13, 9, 4), float32] */;
    %712 = %702.0;
    %713 = sigmoid(%705) /* ty=Tensor[(13, 9, 4), float32] */;
    %714 = %708.0;
    (%709, %710, %711, %712, %var_7497, %713, %714, %var_7512)
  };
  %715(%var_7518, %var_7519) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(11, 9, 13), float32], Tensor[(11, 117), float32]) */
}

def @func_6585() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %722 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %716 = @func_2790() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %717 = @func_4718() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32]) */;
    %718 = @func_3222() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %719 = %716.0;
    %720 = %717.1;
    %721 = %718.0;
    (%719, %720, %721)
  };
  %722() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_12493() -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  %723 = @func_5179() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %724 = @func_10384() /* ty=Tensor[(160), uint64] */;
  %725 = %723.0;
  (%724, %725)
}

def @func_5819() -> Tensor[(13, 9, 4), float64] {
  %729 = fn () -> Tensor[(13, 9, 4), float64] {
    %726 = @func_5658() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %727 = %726.0;
    %728 = cast(%727, dtype="float64") /* ty=Tensor[(13, 9, 4), float64] */;
    log2(%728) /* ty=Tensor[(13, 9, 4), float64] */
  };
  %729() /* ty=Tensor[(13, 9, 4), float64] */
}

def @func_14899() -> Tensor[(13, 9, 4), float32] {
  @func_14897() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_8122() -> Tensor[(160), uint64] {
  %731 = fn () -> Tensor[(160), uint64] {
    %730 = @func_7720() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
    %730.0
  };
  %731() /* ty=Tensor[(160), uint64] */
}

def @func_2828() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %735 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %732 = @func_2446() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %733 = %732.0;
    %734 = @func_1973() /* ty=Tensor[(13, 9, 4), float32] */;
    (%733, %734)
  };
  %735() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_2045(%var_2043: Tensor[(6, 2), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(6, 2), uint8]) {
  @func_2042(%var_2043) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(6, 2), uint8]) */
}

def @func_3905(%var_3903: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(288), uint32]) {
  @func_3902(%var_3903) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(288), uint32]) */
}

def @func_8972(%var_8970: Tensor[(576), float64], %var_8971: Tensor[(12), uint8]) -> (Tensor[(160), uint64], Tensor[(1287), float32], Tensor[(576), float64], Tensor[(12), uint8]) {
  %744 = fn (%var_8944: Tensor[(576), float64], %var_8945: Tensor[(12), uint8]) -> (Tensor[(160), uint64], Tensor[(1287), float32], Tensor[(576), float64], Tensor[(12), uint8]) {
    %736 = @func_8874() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
    %737 = cast(%var_8944, dtype="float64") /* ty=Tensor[(576), float64] */;
    %738 = cast(%var_8945, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %739 = reshape(%737, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %740 = reshape(%738, newshape=[12]) /* ty=Tensor[(12), uint8] */;
    %741 = @func_2735(%739, %740) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(2, 3, 5), int32], int32, Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) */;
    %742 = %736.2;
    %743 = %741.8;
    (%742, %743, %var_8944, %var_8945)
  };
  %744(%var_8970, %var_8971) /* ty=(Tensor[(160), uint64], Tensor[(1287), float32], Tensor[(576), float64], Tensor[(12), uint8]) */
}

def @func_4436() -> Tensor[(13, 9, 4), float32] {
  @func_4434() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_11468() -> Tensor[(13, 9, 4), int16] {
  %745 = @func_4666() /* ty=(Tensor[(13, 9, 4), int16],) */;
  %745.0
}

def @func_12052() -> (Tensor[(13, 9, 4), float32], Tensor[(6, 12, 5), float64], Tensor[(160), uint64]) {
  %746 = @func_10993() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %747 = @func_11810() /* ty=(Tensor[(6, 12, 5), float64], Tensor[(6, 12, 5), bool]) */;
  %748 = @func_8874() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
  %749 = %746.0;
  %750 = %747.0;
  %751 = %748.2;
  (%749, %750, %751)
}

def @func_4020(%var_4018: uint8, %var_4019: Tensor[(3, 4), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 12, 2), uint64], Tensor[(576), float64], uint8, Tensor[(3, 4), uint8], Tensor[(12), uint8], Tensor[(2, 6, 288), int32], Tensor[(16, 3, 6), uint32]) {
  %781 = fn (%var_3999: uint8, %var_4000: Tensor[(3, 4), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 12, 2), uint64], Tensor[(576), float64], uint8, Tensor[(3, 4), uint8], Tensor[(12), uint8], Tensor[(2, 6, 288), int32], Tensor[(16, 3, 6), uint32]) {
    %752 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %753 = cast(meta[relay.Constant][39] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %754 = reshape(%753, newshape=[36, 16]) /* ty=Tensor[(36, 16), float64] */;
    %755 = @func_3617(%754) /* ty=(Tensor[(13, 12, 2), uint64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(36, 16), int32]) */;
    %756 = cast(meta[relay.Constant][39] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %757 = reshape(%756, newshape=[36, 16]) /* ty=Tensor[(36, 16), float64] */;
    %758 = @func_3617(%757) /* ty=(Tensor[(13, 12, 2), uint64], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(36, 16), int32]) */;
    %759 = cast(%var_3999, dtype="uint8") /* ty=uint8 */;
    %760 = cast(%var_4000, dtype="uint8") /* ty=Tensor[(3, 4), uint8] */;
    %761 = cast(meta[relay.Constant][40] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %762 = reshape(%759, newshape=[]) /* ty=uint8 */;
    %763 = reshape(%760, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), uint8] */;
    %764 = reshape(%761, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %765 = @func_1011(%762, %763, %764) /* ty=(Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
    %766 = %765.0;
    %767 = cast(meta[relay.Constant][40] /* ty=Tensor[(288), uint32] */, dtype="int32") /* ty=Tensor[(288), int32] */;
    %768 = cast(%766, dtype="int32") /* ty=Tensor[(2, 6, 1), int32] */;
    %769 = cast(%var_3999, dtype="uint8") /* ty=uint8 */;
    %770 = %758.2;
    %771 = cast(%770, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %772 = cast(meta[relay.Constant][40] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %773 = reshape(%769, newshape=[]) /* ty=uint8 */;
    %774 = reshape(%771, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), uint8] */;
    %775 = reshape(%772, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %776 = @func_1011(%773, %774, %775) /* ty=(Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
    %777 = %752.0;
    %778 = %755.0;
    %779 = minimum(%767, %768) /* ty=Tensor[(2, 6, 288), int32] */;
    %780 = %776.1;
    (%777, %778, meta[relay.Constant][39] /* ty=Tensor[(576), float64] */, %var_3999, %var_4000, %770, %779, %780)
  };
  %781(%var_4018, %var_4019) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 12, 2), uint64], Tensor[(576), float64], uint8, Tensor[(3, 4), uint8], Tensor[(12), uint8], Tensor[(2, 6, 288), int32], Tensor[(16, 3, 6), uint32]) */
}

def @func_8607() -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %790 = fn () -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %782 = @func_7720() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
    %783 = @func_5024() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %784 = %782.0;
    %785 = cast(%784, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %786 = reshape(%785, newshape=[160]) /* ty=Tensor[(160), uint64] */;
    %787 = @func_2070(%786) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */;
    %788 = %783.1;
    %789 = %787.0;
    (%784, %788, %789)
  };
  %790() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_5356(%var_5355: Tensor[(468, 2), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(468, 2), uint8]) {
  %799 = fn (%var_5345: Tensor[(468, 2), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(468, 2), uint8]) {
    %791 = @func_4630() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
    %792 = cast(%var_5345, dtype="uint8") /* ty=Tensor[(468, 2), uint8] */;
    %793 = cast(%var_5345, dtype="uint8") /* ty=Tensor[(468, 2), uint8] */;
    %794 = reshape(%792, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), uint8] */;
    %795 = reshape(%793, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), uint8] */;
    %796 = @func_2554(%794, %795) /* ty=(Tensor[(13, 9, 8), uint8], Tensor[(56, 2), int32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32]) */;
    %797 = %791.1;
    %798 = %796.0;
    (%797, %798, %var_5345)
  };
  %799(%var_5355) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(468, 2), uint8]) */
}

def @func_10103() -> (Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32], Tensor[(156), int32]) {
  %809 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32], Tensor[(156), int32]) {
    %800 = @func_9377() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %801 = cast(meta[relay.Constant][41] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
    %802 = cast(meta[relay.Constant][41] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
    %803 = reshape(%801, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int32] */;
    %804 = reshape(%802, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int32] */;
    %805 = @func_6817(%803, %804) /* ty=(Tensor[(3, 13, 4), uint16], Tensor[(13, 9, 4), float32]) */;
    %806 = %800.1;
    %807 = @func_8692() /* ty=Tensor[(936), uint8] */;
    %808 = %805.1;
    (%806, %807, %808, meta[relay.Constant][41] /* ty=Tensor[(156), int32] */)
  };
  %809() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32], Tensor[(156), int32]) */
}

def @func_4876() -> (Tensor[(5, 6, 12), float64],) {
  @func_4874() /* ty=(Tensor[(5, 6, 12), float64],) */
}

def @func_8083() -> Tensor[(13, 9, 4), float32] {
  @func_8081() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_16708() -> (Tensor[(936), uint8],) {
  @func_16706() /* ty=(Tensor[(936), uint8],) */
}

def @func_12018() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %810 = @func_9844() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %811 = %810.0;
  %812 = @func_3836() /* ty=Tensor[(13, 9, 4), float32] */;
  (%811, %812)
}

def @func_13116() -> (Tensor[(13, 9, 4), float32], Tensor[(5, 6, 12), bool]) {
  %822 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(5, 6, 12), bool]) {
    %813 = @func_7604() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
    %814 = @func_8048() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %815 = %814.0;
    %816 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 6, 12), float64] */, dtype="bool") /* ty=Tensor[(5, 6, 12), bool] */;
    %817 = shape_of(%815, dtype="int32") /* ty=Tensor[(3), int32] */;
    %818 = cast(%815, dtype="bool") /* ty=Tensor[(5, 6, 12), bool] */;
    %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %820 = %813.0;
    %821 = not_equal(%818, %819) /* ty=Tensor[(5, 6, 12), bool] */;
    (%820, %821)
  };
  %822() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 6, 12), bool]) */
}

def @func_16879() -> Tensor[(13, 9, 4), float32] {
  %824 = fn () -> Tensor[(13, 9, 4), float32] {
    %823 = @func_15649() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %823.1
  };
  %824() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_13413(%var_13411: Tensor[(936), uint8]) -> (Tensor[(936), int8], Tensor[(936), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_13410(%var_13411) /* ty=(Tensor[(936), int8], Tensor[(936), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_15671() -> (Tensor[(936), uint8],) {
  %826 = fn () -> (Tensor[(936), uint8],) {
    %825 = @func_14867() /* ty=Tensor[(936), uint8] */;
    (%825,)
  };
  %826() /* ty=(Tensor[(936), uint8],) */
}

def @func_6396(%var_6394: Tensor[(1287), float32]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) {
  @func_6393(%var_6394) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) */
}

def @func_11939() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(8, 36), uint32], Tensor[(160), uint64]) {
  %836 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(8, 36), uint32], Tensor[(160), uint64]) {
    %827 = @func_2446() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %828 = cast(meta[relay.Constant][43] /* ty=Tensor[(8, 36), uint32] */, dtype="uint32") /* ty=Tensor[(8, 36), uint32] */;
    %829 = reshape(%828, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %830 = @func_6110(%829) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(936), uint8], Tensor[(8, 20), uint64], Tensor[(288), uint32], uint8, uint8) */;
    %831 = @func_8254() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
    %832 = %827.0;
    %833 = @func_4518() /* ty=Tensor[(13, 9, 4), float32] */;
    %834 = %830.5;
    %835 = %831.0;
    (%832, %833, %834, meta[relay.Constant][43] /* ty=Tensor[(8, 36), uint32] */, %835)
  };
  %836() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(8, 36), uint32], Tensor[(160), uint64]) */
}

def @func_4326() -> (Tensor[(13, 9, 4), float32],) {
  %837 = @func_3748() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %838 = %837.0;
  (%838,)
}

def @func_1752(%var_1750: uint8, %var_1751: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) {
  @func_1748(%var_1750, %var_1751) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) */
}

def @func_4256() -> (Tensor[(13, 9, 4), float32],) {
  %840 = fn () -> (Tensor[(13, 9, 4), float32],) {
    %839 = @func_3067() /* ty=Tensor[(13, 9, 4), float32] */;
    (%839,)
  };
  %840() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_4666() -> (Tensor[(13, 9, 4), int16],) {
  %841 = @func_2931() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %842 = %841.0;
  %843 = @func_3222() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %844 = %843.0;
  %845 = cast(%844, dtype="int16") /* ty=Tensor[(13, 9, 4), int16] */;
  %846 = shape_of(%842, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(%842, dtype="int16") /* ty=Tensor[(13, 9, 4), int16] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %849 = left_shift(%847, %848) /* ty=Tensor[(13, 9, 4), int16] */;
  (%849,)
}

def @func_7423() -> Tensor[(13, 9, 4), float32] {
  %851 = fn () -> Tensor[(13, 9, 4), float32] {
    %850 = @func_5393() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float64]) */;
    %850.0
  };
  %851() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_13410(%var_13372: Tensor[(936), uint8]) -> (Tensor[(936), int8], Tensor[(936), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %852 = @func_8692() /* ty=Tensor[(936), uint8] */;
  %853 = cast(%var_13372, dtype="int8") /* ty=Tensor[(936), int8] */;
  %854 = shape_of(%852, dtype="int32") /* ty=Tensor[(1), int32] */;
  %855 = cast(%852, dtype="int8") /* ty=Tensor[(936), int8] */;
  %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?), int8] */;
  %857 = cast(%var_13372, dtype="float32") /* ty=Tensor[(936), float32] */;
  %858 = cast(meta[relay.Constant][44] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %859 = cast(meta[relay.Constant][44] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %860 = reshape(%858, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %861 = reshape(%859, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %862 = @func_10470() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) */;
  %863 = @func_5526() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %864 = multiply(%855, %856) /* ty=Tensor[(936), int8] */;
  %865 = cos(%857) /* ty=Tensor[(936), float32] */;
  %866 = @func_1042(%860, %861) /* ty=Tensor[(5, 8, 4), float32] */;
  %867 = %862.1;
  %868 = %863.0;
  (%864, %865, %866, meta[relay.Constant][44] /* ty=Tensor[(160), uint64] */, %867, %868)
}

def @func_16401() -> (Tensor[(13, 9, 4), float32],) {
  %869 = @func_7253() /* ty=Tensor[(13, 9, 4), float32] */;
  (%869,)
}

def @func_12172(%var_12170: Tensor[(28, 48), uint16], %var_12171: Tensor[(16, 6, 14), uint32]) -> (Tensor[(13, 9, 4), float64], Tensor[(28, 48), uint16], Tensor[(13, 9, 4), float32], Tensor[(16, 6, 14), float64]) {
  %885 = fn (%var_12136: Tensor[(28, 48), uint16], %var_12142: Tensor[(16, 6, 14), uint32]) -> (Tensor[(13, 9, 4), float64], Tensor[(28, 48), uint16], Tensor[(13, 9, 4), float32], Tensor[(16, 6, 14), float64]) {
    %870 = @func_5393() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float64]) */;
    %871 = @func_5804() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %872 = cast(%var_12136, dtype="uint16") /* ty=Tensor[(28, 48), uint16] */;
    %873 = cast(%var_12136, dtype="uint16") /* ty=Tensor[(28, 48), uint16] */;
    %874 = reshape(%872, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), uint16] */;
    %875 = reshape(%873, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), uint16] */;
    %876 = @func_6006(%874, %875) /* ty=(Tensor[(16, 6, 14), uint32],) */;
    %877 = %876.0;
    %878 = cast(%var_12142, dtype="float64") /* ty=Tensor[(16, 6, 14), float64] */;
    %879 = shape_of(%877, dtype="int32") /* ty=Tensor[(3), int32] */;
    %880 = cast(%877, dtype="float64") /* ty=Tensor[(16, 6, 14), float64] */;
    %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %882 = %870.1;
    %883 = %871.1;
    %884 = power(%880, %881) /* ty=Tensor[(16, 6, 14), float64] */;
    (%882, %var_12136, %883, %884)
  };
  %885(%var_12170, %var_12171) /* ty=(Tensor[(13, 9, 4), float64], Tensor[(28, 48), uint16], Tensor[(13, 9, 4), float32], Tensor[(16, 6, 14), float64]) */
}

def @func_2465(%var_2464: Tensor[(80, 2), uint64]) -> (Tensor[(13, 9, 4), float32], Tensor[(8, 20), uint64], Tensor[(56, 2), int32], Tensor[(80, 2), uint64], Tensor[(13, 9, 4), float32]) {
  %897 = fn (%var_2455: Tensor[(80, 2), uint64]) -> (Tensor[(13, 9, 4), float32], Tensor[(8, 20), uint64], Tensor[(56, 2), int32], Tensor[(80, 2), uint64], Tensor[(13, 9, 4), float32]) {
    %886 = cast(meta[relay.Constant][45] /* ty=Tensor[(56, 2), int32] */, dtype="int32") /* ty=Tensor[(56, 2), int32] */;
    %887 = cast(meta[relay.Constant][45] /* ty=Tensor[(56, 2), int32] */, dtype="int32") /* ty=Tensor[(56, 2), int32] */;
    %888 = cast(%var_2455, dtype="uint64") /* ty=Tensor[(80, 2), uint64] */;
    %889 = reshape(%886, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), int32] */;
    %890 = reshape(%887, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), int32] */;
    %891 = reshape(%888, newshape=[8, 20]) /* ty=Tensor[(8, 20), uint64] */;
    %892 = @func_1841(%889, %890, %891) /* ty=(Tensor[(7, 8, 2), bool], Tensor[(7, 8, 2), float32], Tensor[(5, 8, 4), float32], Tensor[(8, 20), uint64], uint8, uint8, Tensor[(6, 2), uint8]) */;
    %893 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %894 = @func_2387() /* ty=Tensor[(13, 9, 4), float32] */;
    %895 = %892.3;
    %896 = %893.0;
    (%894, %895, meta[relay.Constant][45] /* ty=Tensor[(56, 2), int32] */, %var_2455, %896)
  };
  %897(%var_2464) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(8, 20), uint64], Tensor[(56, 2), int32], Tensor[(80, 2), uint64], Tensor[(13, 9, 4), float32]) */
}

def @func_15535() -> Tensor[(8, 10, 9), float64] {
  @func_15533() /* ty=Tensor[(8, 10, 9), float64] */
}

def @func_3788() -> (Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), int64], Tensor[(56, 2), int32], Tensor[(936), uint8]) {
  @func_3786() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), int64], Tensor[(56, 2), int32], Tensor[(936), uint8]) */
}

def @func_16760() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(2, 288), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) {
  @func_16758() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(2, 288), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */
}

def @func_14277() -> Tensor[(13, 9, 4), int16] {
  %898 = fn () -> Tensor[(13, 9, 4), int16] {
    @func_11468() /* ty=Tensor[(13, 9, 4), int16] */
  };
  %898() /* ty=Tensor[(13, 9, 4), int16] */
}

def @func_14814() -> Tensor[(13, 9, 4), float32] {
  @func_14812() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_9202() -> (Tensor[(13, 9, 4), float32],) {
  @func_9200() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_8826() -> (Tensor[(13, 9, 4), float32],) {
  %900 = fn () -> (Tensor[(13, 9, 4), float32],) {
    %899 = @func_4244() /* ty=Tensor[(13, 9, 4), float32] */;
    (%899,)
  };
  %900() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_7297() -> Tensor[(5, 6, 12), float64] {
  @func_7295() /* ty=Tensor[(5, 6, 12), float64] */
}

def @func_4393() -> Tensor[(13, 9, 4), float32] {
  @func_4391() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_16553() -> Tensor[(13, 9, 4), float32] {
  %901 = @func_7354() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %901.0
}

def @func_13215() -> (Tensor[(6, 11, 9), bool],) {
  %902 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 11, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 9), float32] */;
  %903 = acosh(%902) /* ty=Tensor[(6, 11, 9), float32] */;
  %904 = cast(%903, dtype="bool") /* ty=Tensor[(6, 11, 9), bool] */;
  %905 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(6, 11, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %906 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 11, 9), float32] */, dtype="bool") /* ty=Tensor[(6, 11, 9), bool] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %908 = not_equal(%906, %907) /* ty=Tensor[(6, 11, 9), bool] */;
  (%908,)
}

def @func_13683() -> (Tensor[(13, 9, 4), float32],) {
  %909 = @func_5862() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %910 = %909.0;
  (%910,)
}

def @func_3069() -> Tensor[(13, 9, 4), float32] {
  @func_3067() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_8890() -> Tensor[(13, 9, 4), float32] {
  %911 = fn () -> Tensor[(13, 9, 4), float32] {
    @func_4144() /* ty=Tensor[(13, 9, 4), float32] */
  };
  %911() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_5806() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_5804() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_9309() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(576), float64], Tensor[(12), uint8]) {
  %912 = @func_5775() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) */;
  %913 = @func_6176() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %914 = cast(meta[relay.Constant][47] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %915 = cast(meta[relay.Constant][48] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %916 = reshape(%914, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %917 = reshape(%915, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %918 = @func_8969(%916, %917) /* ty=(Tensor[(160), uint64], Tensor[(1287), float32], Tensor[(576), float64], Tensor[(12), uint8]) */;
  %919 = %912.1;
  %920 = @func_7422() /* ty=Tensor[(13, 9, 4), float32] */;
  %921 = %913.1;
  %922 = %918.2;
  (%919, %920, %921, %922, meta[relay.Constant][47] /* ty=Tensor[(576), float64] */, meta[relay.Constant][48] /* ty=Tensor[(12), uint8] */)
}

def @func_3249() -> (Tensor[(936), uint8],) {
  @func_3247() /* ty=(Tensor[(936), uint8],) */
}

def @func_7255() -> Tensor[(13, 9, 4), float32] {
  @func_7253() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_5305() -> Tensor[(5, 6, 12), float64] {
  @func_5303() /* ty=Tensor[(5, 6, 12), float64] */
}

def @func_7841() -> Tensor[(13, 9, 4), float32] {
  @func_6524() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_5863() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %926 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %923 = @func_4255() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %924 = @func_4434() /* ty=Tensor[(13, 9, 4), float32] */;
    %925 = %923.0;
    (%924, %925)
  };
  %926() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_7253() -> Tensor[(13, 9, 4), float32] {
  %927 = @func_3786() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), int64], Tensor[(56, 2), int32], Tensor[(936), uint8]) */;
  %927.0
}

def @func_8757(%var_8753: Tensor[(624), float64], %var_8754: Tensor[(288), uint32], %var_8755: Tensor[(1344), int32], %var_8756: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624), int8], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(4, 72), uint32], Tensor[(1344), int32], uint8, Tensor[(13, 9, 4), float32]) {
  %957 = fn (%var_8702: Tensor[(624), float64], %var_8731: Tensor[(288), uint32], %var_8742: Tensor[(1344), int32], %var_8743: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624), int8], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(4, 72), uint32], Tensor[(1344), int32], uint8, Tensor[(13, 9, 4), float32]) {
    %928 = @func_8644() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %929 = cast(%var_8702, dtype="float64") /* ty=Tensor[(624), float64] */;
    %930 = reshape(%929, newshape=[624, 1]) /* ty=Tensor[(624, 1), float64] */;
    %931 = @func_6313(%930) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624, 1), float64], Tensor[(13, 9, 4), float32]) */;
    %932 = cast(meta[relay.Constant][49] /* ty=Tensor[(624), float64] */, dtype="int8") /* ty=Tensor[(624), int8] */;
    %933 = shape_of(%var_8702, dtype="int32") /* ty=Tensor[(1), int32] */;
    %934 = cast(%var_8702, dtype="int8") /* ty=Tensor[(624), int8] */;
    %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?), int8] */;
    %936 = @func_5024() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %937 = cast(%var_8731, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %938 = reshape(%937, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %939 = @func_2378(%938) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */;
    %940 = @func_5804() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %941 = cast(%var_8742, dtype="int32") /* ty=Tensor[(1344), int32] */;
    %942 = cast(%var_8743, dtype="uint8") /* ty=uint8 */;
    %943 = %939.3;
    %944 = cast(%943, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %945 = reshape(%941, newshape=[1344]) /* ty=Tensor[(1344), int32] */;
    %946 = reshape(%942, newshape=[]) /* ty=uint8 */;
    %947 = reshape(%944, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint32] */;
    %948 = @func_8432(%945, %946, %947) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 7, 12), int32], Tensor[(1344), int32], uint8, Tensor[(4, 72), uint32]) */;
    %949 = @func_4630() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
    %950 = %928.0;
    %951 = %931.2;
    %952 = add(%934, %935) /* ty=Tensor[(624), int8] */;
    %953 = %936.1;
    %954 = %940.0;
    %955 = %948.4;
    %956 = %949.1;
    (%950, %951, %952, %953, %943, %var_8731, %954, %955, %var_8742, %var_8743, %956)
  };
  %957(%var_8753, %var_8754, %var_8755, %var_8756) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624), int8], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(4, 72), uint32], Tensor[(1344), int32], uint8, Tensor[(13, 9, 4), float32]) */
}

def @func_1210(%var_1205: Tensor[(5, 13, 2), bool], %var_1206: Tensor[(5, 13, 2), bool], %var_1207: Tensor[(5, 13, 2), bool], %var_1208: Tensor[(3, 4), uint8], %var_1209: Tensor[(160), uint64]) -> (Tensor[(5, 13, 2), bool], Tensor[(5, 13, 2), float64], Tensor[(288), uint32], uint8, Tensor[(3, 4), uint8], Tensor[(288), uint32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) {
  %981 = fn (%var_1173: Tensor[(5, 13, 2), bool], %var_1174: Tensor[(5, 13, 2), bool], %var_1178: Tensor[(5, 13, 2), bool], %var_1191: Tensor[(3, 4), uint8], %var_1196: Tensor[(160), uint64]) -> (Tensor[(5, 13, 2), bool], Tensor[(5, 13, 2), float64], Tensor[(288), uint32], uint8, Tensor[(3, 4), uint8], Tensor[(288), uint32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) {
    %958 = cast(%var_1174, dtype="bool") /* ty=Tensor[(5, 13, 2), bool] */;
    %959 = shape_of(%var_1173, dtype="int32") /* ty=Tensor[(3), int32] */;
    %960 = cast(%var_1173, dtype="bool") /* ty=Tensor[(5, 13, 2), bool] */;
    %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %962 = cast(%var_1178, dtype="float64") /* ty=Tensor[(5, 13, 2), float64] */;
    %963 = shape_of(%var_1173, dtype="int32") /* ty=Tensor[(3), int32] */;
    %964 = cast(%var_1173, dtype="float64") /* ty=Tensor[(5, 13, 2), float64] */;
    %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %966 = cast(meta[relay.Constant][50] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %967 = cast(%var_1191, dtype="uint8") /* ty=Tensor[(3, 4), uint8] */;
    %968 = cast(meta[relay.Constant][51] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %969 = reshape(%966, newshape=[]) /* ty=uint8 */;
    %970 = reshape(%967, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), uint8] */;
    %971 = reshape(%968, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %972 = @func_1011(%969, %970, %971) /* ty=(Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
    %973 = cast(%var_1196, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %974 = cast(%var_1196, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %975 = reshape(%973, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
    %976 = reshape(%974, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
    %977 = logical_or(%960, %961) /* ty=Tensor[(5, 13, 2), bool] */;
    %978 = multiply(%964, %965) /* ty=Tensor[(5, 13, 2), float64] */;
    %979 = %972.2;
    %980 = @func_1042(%975, %976) /* ty=Tensor[(5, 8, 4), float32] */;
    (%977, %978, %979, meta[relay.Constant][50] /* ty=uint8 */, %var_1191, meta[relay.Constant][51] /* ty=Tensor[(288), uint32] */, %980, %var_1196)
  };
  %981(%var_1205, %var_1206, %var_1207, %var_1208, %var_1209) /* ty=(Tensor[(5, 13, 2), bool], Tensor[(5, 13, 2), float64], Tensor[(288), uint32], uint8, Tensor[(3, 4), uint8], Tensor[(288), uint32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */
}

def @func_9192() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %982 = @func_6949() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %983 = %982.0;
  %984 = @func_4391() /* ty=Tensor[(13, 9, 4), float32] */;
  (%983, %984)
}

def @func_16160() -> Tensor[(13, 9, 4), float32] {
  %985 = @func_10579() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
  %985.1
}

def @func_4233(%var_4231: Tensor[(4, 8, 13), int64], %var_4232: Tensor[(4, 8, 13), int64]) -> (Tensor[(4, 8, 13), float32], Tensor[(7, 8, 2), float32], Tensor[(1, 112), int32], Tensor[(4, 40), uint64], Tensor[(288), uint32], Tensor[(130), bool], Tensor[(1, 12), uint8], Tensor[(4, 8, 13), float32], Tensor[(6, 2), uint8]) {
  @func_4229(%var_4231, %var_4232) /* ty=(Tensor[(4, 8, 13), float32], Tensor[(7, 8, 2), float32], Tensor[(1, 112), int32], Tensor[(4, 40), uint64], Tensor[(288), uint32], Tensor[(130), bool], Tensor[(1, 12), uint8], Tensor[(4, 8, 13), float32], Tensor[(6, 2), uint8]) */
}

def @func_12747(%var_12702: Tensor[(24, 12), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(24, 12), uint32], Tensor[(13, 9, 4), float32]) {
  %986 = @func_10768() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %987 = @func_4255() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %988 = cast(%var_12702, dtype="uint32") /* ty=Tensor[(24, 12), uint32] */;
  %989 = reshape(%988, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %990 = @func_3652(%989) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */;
  %991 = @func_11938() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(8, 36), uint32], Tensor[(160), uint64]) */;
  %992 = %986.0;
  %993 = %987.0;
  %994 = %990.2;
  %995 = %991.0;
  (%992, %993, %994, %var_12702, %995)
}

def @func_15132() -> (uint8, Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) {
  %1001 = fn () -> (uint8, Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) {
    %996 = @func_11938() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(8, 36), uint32], Tensor[(160), uint64]) */;
    %997 = @func_10286() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
    %998 = %996.2;
    %999 = @func_14442() /* ty=Tensor[(936), uint8] */;
    %1000 = %997.0;
    (%998, %999, %1000)
  };
  %1001() /* ty=(uint8, Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) */
}

def @func_7142(%var_7140: uint8, %var_7141: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(13, 9, 4), float32]) {
  %1012 = fn (%var_7126: uint8, %var_7127: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(13, 9, 4), float32]) {
    %1002 = @func_5862() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1003 = cast(%var_7126, dtype="uint8") /* ty=uint8 */;
    %1004 = cast(%var_7127, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %1005 = reshape(%1003, newshape=[]) /* ty=uint8 */;
    %1006 = reshape(%1004, newshape=[12]) /* ty=Tensor[(12), uint8] */;
    %1007 = @func_1748(%1005, %1006) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) */;
    %1008 = @func_2446() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %1009 = %1002.1;
    %1010 = %1007.1;
    %1011 = %1008.0;
    (%1009, %1010, %var_7126, %var_7127, %1011)
  };
  %1012(%var_7140, %var_7141) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(13, 9, 4), float32]) */
}

def @func_2118() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1013 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  %1014 = @func_1973() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1013, %1014)
}

def @func_7295() -> Tensor[(5, 6, 12), float64] {
  %1015 = @func_4874() /* ty=(Tensor[(5, 6, 12), float64],) */;
  %1015.0
}

def @func_9194() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_9192() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_12336() -> (Tensor[(13, 9, 4), float32],) {
  %1016 = @func_4255() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1017 = %1016.0;
  (%1017,)
}

def @func_7974() -> Tensor[(13, 9, 4), float32] {
  %1019 = fn () -> Tensor[(13, 9, 4), float32] {
    %1018 = @func_2931() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1018.1
  };
  %1019() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_5658() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1020 = @func_5526() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1021 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  %1022 = %1020.0;
  (%1021, %1022)
}

def @func_16147() -> Tensor[(13, 9, 4), float32] {
  %1023 = @func_12336() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1023.0
}

def @func_2558(%var_2556: Tensor[(13, 9, 8), uint8], %var_2557: Tensor[(13, 9, 8), uint8]) -> (Tensor[(13, 9, 8), uint8], Tensor[(56, 2), int32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32]) {
  @func_2554(%var_2556, %var_2557) /* ty=(Tensor[(13, 9, 8), uint8], Tensor[(56, 2), int32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32]) */
}

def @func_10436() -> (Tensor[(14, 11, 15), float32], Tensor[(13, 9, 4), float32], Tensor[(14, 11, 15), bool], Tensor[(13, 9, 4), float32]) {
  %1037 = fn () -> (Tensor[(14, 11, 15), float32], Tensor[(13, 9, 4), float32], Tensor[(14, 11, 15), bool], Tensor[(13, 9, 4), float32]) {
    %1024 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 11, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 11, 15), float32] */;
    %1025 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(14, 11, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1026 = cast(meta[relay.Constant][52] /* ty=Tensor[(14, 11, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 11, 15), float32] */;
    %1027 = dyn.reshape(%1024, %1025, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1028 = @func_10265() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %1029 = cast(meta[relay.Constant][52] /* ty=Tensor[(14, 11, 15), float32] */, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
    %1030 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(14, 11, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1031 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 11, 15), float32] */, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
    %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1033 = floor_mod(%1026, %1027) /* ty=Tensor[(14, 11, 15), float32] */;
    %1034 = %1028.0;
    %1035 = greater_equal(%1031, %1032) /* ty=Tensor[(14, 11, 15), bool] */;
    %1036 = @func_8081() /* ty=Tensor[(13, 9, 4), float32] */;
    (%1033, %1034, %1035, %1036)
  };
  %1037() /* ty=(Tensor[(14, 11, 15), float32], Tensor[(13, 9, 4), float32], Tensor[(14, 11, 15), bool], Tensor[(13, 9, 4), float32]) */
}

def @func_11272(%var_11270: Tensor[(1274), int8]) -> (Tensor[(13, 9, 4), float32], Tensor[(1274), int8], uint8, Tensor[(288), uint32], Tensor[(4, 72), float32]) {
  @func_11269(%var_11270) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(1274), int8], uint8, Tensor[(288), uint32], Tensor[(4, 72), float32]) */
}

def @func_13628() -> (Tensor[(10, 10, 1), float64], Tensor[(234, 2), bool]) {
  %1038 = cast(meta[relay.Constant][54] /* ty=Tensor[(10, 10, 1), float64] */, dtype="float64") /* ty=Tensor[(10, 10, 1), float64] */;
  %1039 = cast(meta[relay.Constant][55] /* ty=Tensor[(234, 2), float32] */, dtype="float32") /* ty=Tensor[(234, 2), float32] */;
  %1040 = reshape(%1039, newshape=[13, 9, 4]) /* ty=Tensor[(13, 9, 4), float32] */;
  %1041 = @func_3452(%1040) /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1042 = %1041.0;
  %1043 = cast(%1042, dtype="bool") /* ty=Tensor[(13, 9, 4), bool] */;
  %1044 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(234, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1045 = cast(meta[relay.Constant][55] /* ty=Tensor[(234, 2), float32] */, dtype="bool") /* ty=Tensor[(234, 2), bool] */;
  %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1047 = sqrt(%1038) /* ty=Tensor[(10, 10, 1), float64] */;
  %1048 = less(%1045, %1046) /* ty=Tensor[(234, 2), bool] */;
  (%1047, %1048)
}

def @func_9116() -> (Tensor[(13, 9, 4), float32],) {
  %1051 = fn () -> (Tensor[(13, 9, 4), float32],) {
    %1049 = @func_4075() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %1050 = %1049.0;
    (%1050,)
  };
  %1051() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_15374() -> Tensor[(13, 9, 4), float64] {
  %1052 = @func_5893() /* ty=(Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) */;
  %1052.0
}

def @func_10335() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_10333() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_4246() -> Tensor[(13, 9, 4), float32] {
  @func_4244() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_7381() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1053 = @func_7090() /* ty=Tensor[(13, 9, 4), float32] */;
  %1054 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1053, %1054)
}

def @func_15292() -> (Tensor[(13, 9, 4), float32],) {
  %1055 = @func_3836() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1055,)
}

def @func_15607() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_15605() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_3063(%var_3061: Tensor[(6, 2), uint8], %var_3062: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(6, 2), uint8], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(5, 8, 4), float32], Tensor[(2, 56), int32], Tensor[(160), uint64]) {
  %1077 = fn (%var_3033: Tensor[(6, 2), uint8], %var_3046: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(6, 2), uint8], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(5, 8, 4), float32], Tensor[(2, 56), int32], Tensor[(160), uint64]) {
    %1056 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1057 = cast(meta[relay.Constant][56] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1058 = cast(%var_3033, dtype="uint8") /* ty=Tensor[(6, 2), uint8] */;
    %1059 = reshape(%1057, newshape=[]) /* ty=uint8 */;
    %1060 = reshape(%1058, newshape=[12]) /* ty=Tensor[(12), uint8] */;
    %1061 = @func_1748(%1059, %1060) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) */;
    %1062 = cast(%var_3046, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %1063 = reshape(%1062, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %1064 = @func_2378(%1063) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */;
    %1065 = cast(meta[relay.Constant][57] /* ty=Tensor[(2, 56), int32] */, dtype="int32") /* ty=Tensor[(2, 56), int32] */;
    %1066 = cast(meta[relay.Constant][57] /* ty=Tensor[(2, 56), int32] */, dtype="int32") /* ty=Tensor[(2, 56), int32] */;
    %1067 = cast(meta[relay.Constant][58] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %1068 = reshape(%1065, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), int32] */;
    %1069 = reshape(%1066, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), int32] */;
    %1070 = reshape(%1067, newshape=[8, 20]) /* ty=Tensor[(8, 20), uint64] */;
    %1071 = @func_1841(%1068, %1069, %1070) /* ty=(Tensor[(7, 8, 2), bool], Tensor[(7, 8, 2), float32], Tensor[(5, 8, 4), float32], Tensor[(8, 20), uint64], uint8, uint8, Tensor[(6, 2), uint8]) */;
    %1072 = %1056.0;
    %1073 = %1061.5;
    %1074 = @func_2387() /* ty=Tensor[(13, 9, 4), float32] */;
    %1075 = %1064.1;
    %1076 = %1071.2;
    (%1072, %1073, meta[relay.Constant][56] /* ty=uint8 */, %var_3033, %1074, %1075, %var_3046, %1076, meta[relay.Constant][57] /* ty=Tensor[(2, 56), int32] */, meta[relay.Constant][58] /* ty=Tensor[(160), uint64] */)
  };
  %1077(%var_3061, %var_3062) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(6, 2), uint8], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(5, 8, 4), float32], Tensor[(2, 56), int32], Tensor[(160), uint64]) */
}

def @func_4519() -> Tensor[(13, 9, 4), float32] {
  %1079 = fn () -> Tensor[(13, 9, 4), float32] {
    %1078 = @func_4075() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %1078.0
  };
  %1079() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_4434() -> Tensor[(13, 9, 4), float32] {
  %1080 = @func_4326() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1081 = %1080.0;
  %1082 = cast(%1081, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  acos(%1082) /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_6177() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1089 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %1083 = @func_5658() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1084 = @func_5526() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1085 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1086 = %1083.1;
    %1087 = %1084.2;
    %1088 = %1085.1;
    (%1086, %1087, %1088)
  };
  %1089() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_10470() -> (Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) {
  %1090 = @func_4586() /* ty=(Tensor[(5, 6, 12), float64],) */;
  %1091 = %1090.0;
  %1092 = cast(%1091, dtype="float64") /* ty=Tensor[(5, 6, 12), float64] */;
  %1093 = @func_9657() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8]) */;
  %1094 = log10(%1092) /* ty=Tensor[(5, 6, 12), float64] */;
  %1095 = %1093.0;
  (%1094, %1095)
}

def @func_12305() -> (Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) {
  %1096 = @func_3748() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1097 = cast(meta[relay.Constant][59] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %1098 = reshape(%1097, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), uint32] */;
  %1099 = %1096.2;
  %1100 = @func_310(%1098) /* ty=Tensor[(16, 3, 6), uint32] */;
  (%1099, %1100, meta[relay.Constant][59] /* ty=Tensor[(288), uint32] */)
}

def @func_12495() -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  @func_12493() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */
}

def @func_1748(%var_1706: uint8, %var_1707: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) {
  %1101 = cast(%var_1706, dtype="uint8") /* ty=uint8 */;
  %1102 = cast(%var_1707, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1103 = cast(meta[relay.Constant][60] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %1104 = reshape(%1101, newshape=[]) /* ty=uint8 */;
  %1105 = reshape(%1102, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), uint8] */;
  %1106 = reshape(%1103, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %1107 = @func_1011(%1104, %1105, %1106) /* ty=(Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
  %1108 = cast(meta[relay.Constant][60] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %1109 = reshape(%1108, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), uint32] */;
  %1110 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  %1111 = %1107.0;
  %1112 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  %1113 = @func_310(%1109) /* ty=Tensor[(16, 3, 6), uint32] */;
  (%1110, %1111, %var_1706, %var_1707, meta[relay.Constant][60] /* ty=Tensor[(288), uint32] */, %1112, %1113)
}

def @func_5968(%var_5966: Tensor[(1287), float32]) -> (Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) {
  @func_5965(%var_5966) /* ty=(Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) */
}

def @func_4145() -> Tensor[(13, 9, 4), float32] {
  %1114 = fn () -> Tensor[(13, 9, 4), float32] {
    @func_2387() /* ty=Tensor[(13, 9, 4), float32] */
  };
  %1114() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_11461() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1119 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %1115 = @func_6714() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1116 = @func_6714() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1117 = %1115.0;
    %1118 = %1116.0;
    (%1117, %1118)
  };
  %1119() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_12676() -> Tensor[(5, 6, 12), float64] {
  %1120 = fn () -> Tensor[(5, 6, 12), float64] {
    @func_5303() /* ty=Tensor[(5, 6, 12), float64] */
  };
  %1120() /* ty=Tensor[(5, 6, 12), float64] */
}

def @func_8432(%var_8425: Tensor[(1344), int32], %var_8426: uint8, %var_8427: Tensor[(4, 72), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(16, 7, 12), int32], Tensor[(1344), int32], uint8, Tensor[(4, 72), uint32]) {
  %1121 = @func_6714() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1122 = cast(%var_8425, dtype="int32") /* ty=Tensor[(1344), int32] */;
  %1123 = cast(%var_8425, dtype="int32") /* ty=Tensor[(1344), int32] */;
  %1124 = cast(%var_8426, dtype="uint8") /* ty=uint8 */;
  %1125 = cast(%var_8427, dtype="uint32") /* ty=Tensor[(4, 72), uint32] */;
  %1126 = reshape(%1122, newshape=[16, 7, 12]) /* ty=Tensor[(16, 7, 12), int32] */;
  %1127 = reshape(%1123, newshape=[16, 7, 12]) /* ty=Tensor[(16, 7, 12), int32] */;
  %1128 = reshape(%1124, newshape=[]) /* ty=uint8 */;
  %1129 = reshape(%1125, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %1130 = @func_6234(%1126, %1127, %1128, %1129) /* ty=(Tensor[(16, 7, 12), int32], Tensor[(288), uint32], uint8, Tensor[(1, 12), uint8], Tensor[(288), uint32]) */;
  %1131 = %1121.0;
  %1132 = %1130.0;
  (%1131, %1132, %var_8425, %var_8426, %var_8427)
}

def @func_14548(%var_14547: int32) -> (Tensor[(13, 9, 4), int16], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(2, 3, 5), float32]) {
  %1147 = fn (%var_14530: int32) -> (Tensor[(13, 9, 4), int16], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(2, 3, 5), float32]) {
    %1133 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %1134 = @func_10960() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1135 = cast(%var_14530, dtype="int32") /* ty=int32 */;
    %1136 = reshape(%1135, newshape=[]) /* ty=int32 */;
    %1137 = @func_1492(%1136) /* ty=(Tensor[(2, 3, 5), int32],) */;
    %1138 = %1137.0;
    %1139 = cast(%1138, dtype="bool") /* ty=Tensor[(2, 3, 5), bool] */;
    %1140 = cast(%var_14530, dtype="bool") /* ty=bool */;
    %1141 = greater(%1139, %1140) /* ty=Tensor[(2, 3, 5), bool] */;
    %1142 = cast(%1141, dtype="float32") /* ty=Tensor[(2, 3, 5), float32] */;
    %1143 = @func_14276() /* ty=Tensor[(13, 9, 4), int16] */;
    %1144 = %1133.0;
    %1145 = %1134.1;
    %1146 = cos(%1142) /* ty=Tensor[(2, 3, 5), float32] */;
    (%1143, %1144, %1145, %1146)
  };
  %1147(%var_14547) /* ty=(Tensor[(13, 9, 4), int16], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(2, 3, 5), float32]) */
}

def @func_4328() -> (Tensor[(13, 9, 4), float32],) {
  @func_4326() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_13199() -> (Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624), float64]) {
  %1153 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624), float64]) {
    %1148 = cast(meta[relay.Constant][61] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
    %1149 = reshape(%1148, newshape=[12, 4, 13]) /* ty=Tensor[(12, 4, 13), float64] */;
    %1150 = @func_4119(%1149) /* ty=(Tensor[(12, 4, 13), float64],) */;
    %1151 = @func_13053() /* ty=Tensor[(13, 9, 4), float32] */;
    %1152 = %1150.0;
    (%1151, %1152, meta[relay.Constant][61] /* ty=Tensor[(624), float64] */)
  };
  %1153() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624), float64]) */
}

def @func_3247() -> (Tensor[(936), uint8],) {
  %1154 = @func_3132() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) */;
  %1155 = %1154.2;
  (%1155,)
}

def @func_8289() -> (Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(12), uint8]) {
  %1156 = @func_7720() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %1157 = cast(meta[relay.Constant][62] /* ty=Tensor[(12), uint8] */, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1158 = reshape(%1157, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1159 = @func_7899(%1158) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(12), uint8]) */;
  %1160 = %1156.1;
  %1161 = %1159.4;
  (%1160, %1161, meta[relay.Constant][62] /* ty=Tensor[(12), uint8] */)
}

def @func_5527() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1169 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %1162 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1163 = @func_2896() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1164 = @func_5179() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %1165 = %1162.1;
    %1166 = %1163.1;
    %1167 = %1164.0;
    %1168 = @func_5322() /* ty=Tensor[(13, 9, 4), float32] */;
    (%1165, %1166, %1167, %1168)
  };
  %1169() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_10891() -> (Tensor[(936), uint8],) {
  %1172 = fn () -> (Tensor[(936), uint8],) {
    %1170 = @func_6280() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) */;
    %1171 = %1170.1;
    (%1171,)
  };
  %1172() /* ty=(Tensor[(936), uint8],) */
}

def @func_5755(%var_5751: Tensor[(7, 14, 13), int8], %var_5752: Tensor[(7, 14, 13), int8], %var_5753: uint8, %var_5754: Tensor[(4, 72), uint32]) -> (Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(4, 72), uint32], Tensor[(7, 14, 13), float32]) {
  @func_5749(%var_5751, %var_5752, %var_5753, %var_5754) /* ty=(Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(4, 72), uint32], Tensor[(7, 14, 13), float32]) */
}

def @func_10995() -> (Tensor[(13, 9, 4), float32],) {
  @func_10993() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_4122(%var_4120: Tensor[(12, 4, 13), float64]) -> (Tensor[(12, 4, 13), float64],) {
  @func_4119(%var_4120) /* ty=(Tensor[(12, 4, 13), float64],) */
}

def @func_2791() -> (Tensor[(13, 9, 4), float32],) {
  %1174 = fn () -> (Tensor[(13, 9, 4), float32],) {
    %1173 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
    (%1173,)
  };
  %1174() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_3223() -> (Tensor[(13, 9, 4), float32],) {
  %1176 = fn () -> (Tensor[(13, 9, 4), float32],) {
    %1175 = @func_1973() /* ty=Tensor[(13, 9, 4), float32] */;
    (%1175,)
  };
  %1176() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_9077() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_9075() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_15376() -> Tensor[(13, 9, 4), float64] {
  @func_15374() /* ty=Tensor[(13, 9, 4), float64] */
}

def @func_9538() -> Tensor[(13, 9, 4), float32] {
  @func_9536() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_12338() -> (Tensor[(13, 9, 4), float32],) {
  @func_12336() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_12307() -> (Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) {
  @func_12305() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */
}

def @func_13933() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  %1177 = @func_2896() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1178 = cast(meta[relay.Constant][63] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1179 = reshape(%1178, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %1180 = @func_2070(%1179) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */;
  %1181 = @func_9200() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1182 = %1177.0;
  %1183 = %1180.0;
  %1184 = %1181.0;
  (%1182, %1183, meta[relay.Constant][63] /* ty=Tensor[(160), uint64] */, %1184)
}

def @func_6820(%var_6818: Tensor[(3, 13, 4), int32], %var_6819: Tensor[(3, 13, 4), int32]) -> (Tensor[(3, 13, 4), uint16], Tensor[(13, 9, 4), float32]) {
  %1196 = fn (%var_6803: Tensor[(3, 13, 4), int32], %var_6804: Tensor[(3, 13, 4), int32]) -> (Tensor[(3, 13, 4), uint16], Tensor[(13, 9, 4), float32]) {
    %1185 = cast(%var_6804, dtype="int32") /* ty=Tensor[(3, 13, 4), int32] */;
    %1186 = shape_of(%var_6803, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1187 = cast(%var_6803, dtype="int32") /* ty=Tensor[(3, 13, 4), int32] */;
    %1188 = dyn.reshape(%1185, %1186, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1189 = subtract(%1187, %1188) /* ty=Tensor[(3, 13, 4), int32] */;
    %1190 = cast(%var_6803, dtype="uint16") /* ty=Tensor[(3, 13, 4), uint16] */;
    %1191 = shape_of(%1189, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1192 = cast(%1189, dtype="uint16") /* ty=Tensor[(3, 13, 4), uint16] */;
    %1193 = dyn.reshape(%1190, %1191, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1194 = bitwise_or(%1192, %1193) /* ty=Tensor[(3, 13, 4), uint16] */;
    %1195 = @func_4754() /* ty=Tensor[(13, 9, 4), float32] */;
    (%1194, %1195)
  };
  %1196(%var_6818, %var_6819) /* ty=(Tensor[(3, 13, 4), uint16], Tensor[(13, 9, 4), float32]) */
}

def @func_16149() -> Tensor[(13, 9, 4), float32] {
  @func_16147() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_1791(%var_1789: Tensor[(11, 9, 13), float32]) -> (Tensor[(11, 9, 13), float32],) {
  @func_1788(%var_1789) /* ty=(Tensor[(11, 9, 13), float32],) */
}

def @func_8875() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
  %1203 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
    %1197 = @func_6280() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) */;
    %1198 = @func_6949() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %1199 = @func_7720() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
    %1200 = %1197.2;
    %1201 = %1198.0;
    %1202 = %1199.0;
    (%1200, %1201, %1202)
  };
  %1203() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */
}

def @func_16764() -> Tensor[(13, 9, 4), float32] {
  %1204 = fn () -> Tensor[(13, 9, 4), float32] {
    @func_8025() /* ty=Tensor[(13, 9, 4), float32] */
  };
  %1204() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_8644() -> (Tensor[(13, 9, 4), float32],) {
  %1205 = @func_4815() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1206 = %1205.0;
  (%1206,)
}

def @func_4754() -> Tensor[(13, 9, 4), float32] {
  %1207 = @func_2790() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1207.0
}

def @func_14314() -> (Tensor[(936), uint8],) {
  @func_14312() /* ty=(Tensor[(936), uint8],) */
}

def @func_2554(%var_2534: Tensor[(13, 9, 8), uint8], %var_2535: Tensor[(13, 9, 8), uint8]) -> (Tensor[(13, 9, 8), uint8], Tensor[(56, 2), int32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32]) {
  %1208 = cast(%var_2535, dtype="uint8") /* ty=Tensor[(13, 9, 8), uint8] */;
  %1209 = shape_of(%var_2534, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1210 = cast(%var_2534, dtype="uint8") /* ty=Tensor[(13, 9, 8), uint8] */;
  %1211 = dyn.reshape(%1208, %1209, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1212 = cast(meta[relay.Constant][64] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1213 = reshape(%1212, newshape=[80, 2]) /* ty=Tensor[(80, 2), uint64] */;
  %1214 = @func_2463(%1213) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(8, 20), uint64], Tensor[(56, 2), int32], Tensor[(80, 2), uint64], Tensor[(13, 9, 4), float32]) */;
  %1215 = cast(meta[relay.Constant][64] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1216 = cast(meta[relay.Constant][64] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1217 = reshape(%1215, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %1218 = reshape(%1216, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
  %1219 = add(%1210, %1211) /* ty=Tensor[(13, 9, 8), uint8] */;
  %1220 = %1214.2;
  %1221 = @func_1042(%1217, %1218) /* ty=Tensor[(5, 8, 4), float32] */;
  (%1219, %1220, meta[relay.Constant][64] /* ty=Tensor[(160), uint64] */, %1221)
}

def @func_10287() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
  %1228 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
    %1222 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %1223 = @func_2446() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %1224 = @func_8254() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
    %1225 = %1222.0;
    %1226 = %1223.0;
    %1227 = %1224.1;
    (%1225, %1226, %1227)
  };
  %1228() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */
}

def @func_13054() -> Tensor[(13, 9, 4), float32] {
  %1230 = fn () -> Tensor[(13, 9, 4), float32] {
    %1229 = @func_6584() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1229.0
  };
  %1230() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_10960() -> (Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1231 = @func_3132() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) */;
  %1232 = @func_5679() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1233 = @func_5303() /* ty=Tensor[(5, 6, 12), float64] */;
  %1234 = %1231.0;
  %1235 = %1232.0;
  (%1233, %1234, %1235)
}

def @func_16228() -> (Tensor[(13, 9, 4), float32], Tensor[(4, 9, 14), float32], Tensor[(504), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_16226() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(4, 9, 14), float32], Tensor[(504), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_14828() -> Tensor[(13, 9, 4), int16] {
  %1237 = fn () -> Tensor[(13, 9, 4), int16] {
    %1236 = @func_4666() /* ty=(Tensor[(13, 9, 4), int16],) */;
    %1236.0
  };
  %1237() /* ty=Tensor[(13, 9, 4), int16] */
}

def @func_15988() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_15986() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_16403() -> (Tensor[(13, 9, 4), float32],) {
  @func_16401() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_8796() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1242 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %1238 = @func_6714() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1239 = @func_5024() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1240 = %1238.0;
    %1241 = %1239.0;
    (%1240, %1241)
  };
  %1242() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_15030() -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) {
  @func_15028() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) */
}

def @func_13018() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1243 = @func_9657() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8]) */;
  %1244 = @func_4434() /* ty=Tensor[(13, 9, 4), float32] */;
  %1245 = %1243.0;
  (%1244, %1245)
}

def @func_5406(%var_5404: Tensor[(3, 3, 2), int8], %var_5405: Tensor[(3, 3, 2), int8]) -> (Tensor[(3, 3, 2), int8],) {
  %1251 = fn (%var_5396: Tensor[(3, 3, 2), int8], %var_5397: Tensor[(3, 3, 2), int8]) -> (Tensor[(3, 3, 2), int8],) {
    %1246 = cast(%var_5397, dtype="int8") /* ty=Tensor[(3, 3, 2), int8] */;
    %1247 = shape_of(%var_5396, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1248 = cast(%var_5396, dtype="int8") /* ty=Tensor[(3, 3, 2), int8] */;
    %1249 = dyn.reshape(%1246, %1247, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1250 = logical_xor(%1248, %1249) /* ty=Tensor[(3, 3, 2), int8] */;
    (%1250,)
  };
  %1251(%var_5404, %var_5405) /* ty=(Tensor[(3, 3, 2), int8],) */
}

def @func_6313(%var_6307: Tensor[(624, 1), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624, 1), float64], Tensor[(13, 9, 4), float32]) {
  %1252 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1253 = cast(%var_6307, dtype="float64") /* ty=Tensor[(624, 1), float64] */;
  %1254 = reshape(%1253, newshape=[12, 4, 13]) /* ty=Tensor[(12, 4, 13), float64] */;
  %1255 = @func_4119(%1254) /* ty=(Tensor[(12, 4, 13), float64],) */;
  %1256 = @func_4075() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1257 = @func_4525() /* ty=Tensor[(13, 9, 4), float32] */;
  %1258 = %1252.0;
  %1259 = %1255.0;
  %1260 = %1256.0;
  (%1257, %1258, %1259, %var_6307, %1260)
}

def @func_3749() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1265 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %1261 = @func_2896() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1262 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
    %1263 = @func_3664() /* ty=Tensor[(13, 9, 4), float32] */;
    %1264 = %1261.0;
    (%1262, %1263, %1264)
  };
  %1265() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_12228() -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1272 = fn () -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %1266 = @func_11604() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
    %1267 = @func_6584() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1268 = @func_8644() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %1269 = %1266.0;
    %1270 = %1267.2;
    %1271 = %1268.0;
    (%1269, %1270, %1271)
  };
  %1272() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_4077() -> (Tensor[(13, 9, 4), float32],) {
  @func_4075() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_16897() -> (Tensor[(13, 9, 4), float32],) {
  %1273 = @func_8889() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1273,)
}

def @func_9075() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1274 = @func_2118() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1275 = @func_6055() /* ty=Tensor[(13, 9, 4), float32] */;
  %1276 = @func_7841() /* ty=Tensor[(13, 9, 4), float32] */;
  %1277 = %1274.0;
  (%1275, %1276, %1277)
}

def @func_6861() -> (Tensor[(13, 9, 4), float32],) {
  @func_6859() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_9536() -> Tensor[(13, 9, 4), float32] {
  %1278 = @func_4630() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */;
  %1278.1
}

def @func_3548() -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) {
  %1285 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) {
    %1279 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %1280 = cast(meta[relay.Constant][65] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %1281 = reshape(%1280, newshape=[160]) /* ty=Tensor[(160), uint64] */;
    %1282 = @func_2070(%1281) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */;
    %1283 = %1279.0;
    %1284 = %1282.2;
    (%1283, %1284, meta[relay.Constant][65] /* ty=Tensor[(160), uint64] */)
  };
  %1285() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) */
}

def @func_4719() -> (Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32]) {
  %1292 = fn () -> (Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32]) {
    %1286 = @func_4586() /* ty=(Tensor[(5, 6, 12), float64],) */;
    %1287 = cast(meta[relay.Constant][66] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %1288 = reshape(%1287, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %1289 = @func_3652(%1288) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) */;
    %1290 = %1286.0;
    %1291 = %1289.0;
    (%1290, %1291, meta[relay.Constant][66] /* ty=Tensor[(288), uint32] */)
  };
  %1292() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32]) */
}

def @func_4756() -> Tensor[(13, 9, 4), float32] {
  @func_4754() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_9200() -> (Tensor[(13, 9, 4), float32],) {
  %1293 = @func_7253() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1293,)
}

def @func_10581() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
  @func_10579() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */
}

def @func_5214(%var_5212: Tensor[(416), int64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(7, 8, 2), float32], Tensor[(416), int64]) {
  %1294 = @func_4718() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32]) */;
  %1295 = cast(%var_5212, dtype="int64") /* ty=Tensor[(416), int64] */;
  %1296 = cast(%var_5212, dtype="int64") /* ty=Tensor[(416), int64] */;
  %1297 = reshape(%1295, newshape=[4, 8, 13]) /* ty=Tensor[(4, 8, 13), int64] */;
  %1298 = reshape(%1296, newshape=[4, 8, 13]) /* ty=Tensor[(4, 8, 13), int64] */;
  %1299 = @func_4229(%1297, %1298) /* ty=(Tensor[(4, 8, 13), float32], Tensor[(7, 8, 2), float32], Tensor[(1, 112), int32], Tensor[(4, 40), uint64], Tensor[(288), uint32], Tensor[(130), bool], Tensor[(1, 12), uint8], Tensor[(4, 8, 13), float32], Tensor[(6, 2), uint8]) */;
  %1300 = %1294.1;
  %1301 = @func_4391() /* ty=Tensor[(13, 9, 4), float32] */;
  %1302 = %1299.1;
  (%1300, %1301, %1302, %var_5212)
}

def @func_13217() -> (Tensor[(6, 11, 9), bool],) {
  @func_13215() /* ty=(Tensor[(6, 11, 9), bool],) */
}

def @func_8198(%var_8196: Tensor[(416), int64], %var_8197: Tensor[(4, 8, 13), float32]) -> (Tensor[(13, 9, 4), float32], Tensor[(416), int64], Tensor[(4, 8, 13), int16]) {
  @func_8194(%var_8196, %var_8197) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(416), int64], Tensor[(4, 8, 13), int16]) */
}

def @func_6110(%var_6088: Tensor[(288), uint32]) -> (Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(936), uint8], Tensor[(8, 20), uint64], Tensor[(288), uint32], uint8, uint8) {
  %1303 = @func_5893() /* ty=(Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) */;
  %1304 = cast(meta[relay.Constant][67] /* ty=Tensor[(936), uint8] */, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %1305 = cast(meta[relay.Constant][68] /* ty=Tensor[(8, 20), uint64] */, dtype="uint64") /* ty=Tensor[(8, 20), uint64] */;
  %1306 = cast(%var_6088, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %1307 = reshape(%1304, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), uint8] */;
  %1308 = reshape(%1305, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %1309 = reshape(%1306, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %1310 = @func_3205(%1307, %1308, %1309) /* ty=(Tensor[(13, 9, 8), uint16], Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(8, 6, 12), int16], Tensor[(576), int16], Tensor[(288), uint32], Tensor[(288), uint32], Tensor[(12), uint8], Tensor[(13, 9, 4), int32]) */;
  %1311 = cast(meta[relay.Constant][69] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1312 = reshape(%1311, newshape=[]) /* ty=uint8 */;
  %1313 = @func_4846(%1312) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32], Tensor[(16, 3, 6), uint32], uint8, Tensor[(12, 1), uint8]) */;
  %1314 = %1303.1;
  %1315 = %1310.5;
  %1316 = %1313.4;
  (%1314, %1315, meta[relay.Constant][67] /* ty=Tensor[(936), uint8] */, meta[relay.Constant][68] /* ty=Tensor[(8, 20), uint64] */, %var_6088, %1316, meta[relay.Constant][69] /* ty=uint8 */)
}

def @func_13880(%var_13878: uint8, %var_13879: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(5, 6, 12), float64], Tensor[(160), uint64], Tensor[(2, 6, 288), int32], Tensor[(12), uint8], Tensor[(5, 6, 12), float64], Tensor[(5, 8, 4), int16], Tensor[(13, 9, 4), float32]) {
  %1338 = fn (%var_13834: uint8, %var_13835: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(5, 6, 12), float64], Tensor[(160), uint64], Tensor[(2, 6, 288), int32], Tensor[(12), uint8], Tensor[(5, 6, 12), float64], Tensor[(5, 8, 4), int16], Tensor[(13, 9, 4), float32]) {
    %1317 = @func_8644() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %1318 = @func_5775() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) */;
    %1319 = cast(%var_13834, dtype="uint8") /* ty=uint8 */;
    %1320 = cast(%var_13835, dtype="uint8") /* ty=Tensor[(12), uint8] */;
    %1321 = reshape(%1319, newshape=[]) /* ty=uint8 */;
    %1322 = reshape(%1320, newshape=[3, 4]) /* ty=Tensor[(3, 4), uint8] */;
    %1323 = @func_4017(%1321, %1322) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 12, 2), uint64], Tensor[(576), float64], uint8, Tensor[(3, 4), uint8], Tensor[(12), uint8], Tensor[(2, 6, 288), int32], Tensor[(16, 3, 6), uint32]) */;
    %1324 = cast(meta[relay.Constant][70] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %1325 = cast(meta[relay.Constant][70] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %1326 = reshape(%1324, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
    %1327 = reshape(%1325, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), uint64] */;
    %1328 = @func_1042(%1326, %1327) /* ty=Tensor[(5, 8, 4), float32] */;
    %1329 = cast(%1328, dtype="int16") /* ty=Tensor[(5, 8, 4), int16] */;
    %1330 = cast(%var_13834, dtype="int16") /* ty=int16 */;
    %1331 = %1317.0;
    %1332 = @func_5322() /* ty=Tensor[(13, 9, 4), float32] */;
    %1333 = %1318.0;
    %1334 = %1323.6;
    %1335 = @func_7295() /* ty=Tensor[(5, 6, 12), float64] */;
    %1336 = logical_xor(%1329, %1330) /* ty=Tensor[(5, 8, 4), int16] */;
    %1337 = @func_8081() /* ty=Tensor[(13, 9, 4), float32] */;
    (%1331, %1332, %1333, meta[relay.Constant][70] /* ty=Tensor[(160), uint64] */, %1334, %var_13835, %1335, %1336, %1337)
  };
  %1338(%var_13878, %var_13879) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(5, 6, 12), float64], Tensor[(160), uint64], Tensor[(2, 6, 288), int32], Tensor[(12), uint8], Tensor[(5, 6, 12), float64], Tensor[(5, 8, 4), int16], Tensor[(13, 9, 4), float32]) */
}

def @func_10616() -> (Tensor[(13, 9, 4), float32],) {
  %1341 = fn () -> (Tensor[(13, 9, 4), float32],) {
    %1339 = @func_9796() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1340 = %1339.1;
    (%1340,)
  };
  %1341() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_4244() -> Tensor[(13, 9, 4), float32] {
  @func_4144() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_5393() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float64]) {
  %1342 = @func_4144() /* ty=Tensor[(13, 9, 4), float32] */;
  %1343 = cast(%1342, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  %1344 = cast(%1342, dtype="float64") /* ty=Tensor[(13, 9, 4), float64] */;
  %1345 = asin(%1343) /* ty=Tensor[(13, 9, 4), float32] */;
  %1346 = sqrt(%1344) /* ty=Tensor[(13, 9, 4), float64] */;
  (%1345, %1346)
}

def @func_4075() -> (Tensor[(13, 9, 4), float32],) {
  %1347 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1347,)
}

def @func_16816(%var_16815: Tensor[(6, 10, 10), uint16]) -> (Tensor[(6, 10, 10), bool], Tensor[(6, 10, 10), float64]) {
  %1355 = fn (%var_16793: Tensor[(6, 10, 10), uint16]) -> (Tensor[(6, 10, 10), bool], Tensor[(6, 10, 10), float64]) {
    %1348 = cast(meta[relay.Constant][71] /* ty=Tensor[(6, 10, 10), uint16] */, dtype="bool") /* ty=Tensor[(6, 10, 10), bool] */;
    %1349 = shape_of(%var_16793, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1350 = cast(%var_16793, dtype="bool") /* ty=Tensor[(6, 10, 10), bool] */;
    %1351 = dyn.reshape(%1348, %1349, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1352 = cast(meta[relay.Constant][71] /* ty=Tensor[(6, 10, 10), uint16] */, dtype="float64") /* ty=Tensor[(6, 10, 10), float64] */;
    %1353 = greater(%1350, %1351) /* ty=Tensor[(6, 10, 10), bool] */;
    %1354 = cos(%1352) /* ty=Tensor[(6, 10, 10), float64] */;
    (%1353, %1354)
  };
  %1355(%var_16815) /* ty=(Tensor[(6, 10, 10), bool], Tensor[(6, 10, 10), float64]) */
}

def @func_12388() -> Tensor[(160), uint64] {
  %1356 = @func_3547() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %1356.2
}

def @func_8049() -> (Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1361 = fn () -> (Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %1357 = @func_3222() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %1358 = @func_7295() /* ty=Tensor[(5, 6, 12), float64] */;
    %1359 = %1357.0;
    %1360 = @func_6524() /* ty=Tensor[(13, 9, 4), float32] */;
    (%1358, %1359, %1360)
  };
  %1361() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_16758() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(2, 288), float64], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32]) {
  %1362 = @func_15605() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1363 = cast(meta[relay.Constant][72] /* ty=Tensor[(2, 288), float64] */, dtype="float64") /* ty=Tensor[(2, 288), float64] */;
  %1364 = reshape(%1363, newshape=[12, 48]) /* ty=Tensor[(12, 48), float64] */;
  %1365 = @func_15759(%1364) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(12, 48), float64]) */;
  %1366 = cast(meta[relay.Constant][73] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %1367 = reshape(%1366, newshape=[24, 12]) /* ty=Tensor[(24, 12), uint32] */;
  %1368 = @func_12747(%1367) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(24, 12), uint32], Tensor[(13, 9, 4), float32]) */;
  %1369 = @func_2446() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1370 = %1362.0;
  %1371 = %1365.0;
  %1372 = %1368.1;
  %1373 = %1369.0;
  (%1370, %1371, meta[relay.Constant][72] /* ty=Tensor[(2, 288), float64] */, %1372, meta[relay.Constant][73] /* ty=Tensor[(288), uint32] */, %1373)
}

def @func_14287() -> Tensor[(13, 9, 4), float32] {
  @func_14285() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_16310() -> Tensor[(13, 9, 4), int16] {
  @func_14276() /* ty=Tensor[(13, 9, 4), int16] */
}

def @func_14897() -> Tensor[(13, 9, 4), float32] {
  %1374 = @func_9181() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1374.0
}

def @func_3902(%var_3885: Tensor[(12), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(288), uint32]) {
  %1375 = cast(%var_3885, dtype="uint8") /* ty=Tensor[(12), uint8] */;
  %1376 = cast(meta[relay.Constant][74] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %1377 = reshape(%1375, newshape=[6, 2]) /* ty=Tensor[(6, 2), uint8] */;
  %1378 = reshape(%1376, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %1379 = @func_3060(%1377, %1378) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], uint8, Tensor[(6, 2), uint8], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(5, 8, 4), float32], Tensor[(2, 56), int32], Tensor[(160), uint64]) */;
  %1380 = @func_3836() /* ty=Tensor[(13, 9, 4), float32] */;
  %1381 = %1379.1;
  (%1380, %1381, %var_3885, meta[relay.Constant][74] /* ty=Tensor[(288), uint32] */)
}

def @func_3665() -> Tensor[(13, 9, 4), float32] {
  %1382 = fn () -> Tensor[(13, 9, 4), float32] {
    @func_1676() /* ty=Tensor[(13, 9, 4), float32] */
  };
  %1382() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_15761(%var_15760: Tensor[(12, 48), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(12, 48), float64]) {
  %1389 = fn (%var_15737: Tensor[(12, 48), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(12, 48), float64]) {
    %1383 = @func_2827() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1384 = cast(%var_15737, dtype="float64") /* ty=Tensor[(12, 48), float64] */;
    %1385 = reshape(%1384, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %1386 = @func_6797(%1385) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64]) */;
    %1387 = %1383.0;
    %1388 = %1386.2;
    (%1387, %1388, %var_15737)
  };
  %1389(%var_15760) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(12, 48), float64]) */
}

def @func_6859() -> (Tensor[(13, 9, 4), float32],) {
  %1390 = @func_6280() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) */;
  %1391 = %1390.2;
  (%1391,)
}

def @func_7572() -> Tensor[(936), uint8] {
  %1392 = @func_3132() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 8), uint8], Tensor[(936), uint8]) */;
  %1392.2
}

def @func_4119(%var_4115: Tensor[(12, 4, 13), float64]) -> (Tensor[(12, 4, 13), float64],) {
  %1393 = cast(%var_4115, dtype="float64") /* ty=Tensor[(12, 4, 13), float64] */;
  %1394 = log(%1393) /* ty=Tensor[(12, 4, 13), float64] */;
  (%1394,)
}

def @func_8922() -> (Tensor[(13, 9, 4), float32],) {
  @func_8920() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_10472() -> (Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) {
  @func_10470() /* ty=(Tensor[(5, 6, 12), float64], Tensor[(13, 9, 4), float32]) */
}

def @func_13460() -> (Tensor[(13, 9, 4), float32],) {
  @func_13458() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_7605() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
  %1401 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) {
    %1395 = @func_5526() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1396 = cast(meta[relay.Constant][75] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %1397 = reshape(%1396, newshape=[160]) /* ty=Tensor[(160), uint64] */;
    %1398 = @func_2070(%1397) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */;
    %1399 = %1395.1;
    %1400 = %1398.0;
    (%1399, %1400, meta[relay.Constant][75] /* ty=Tensor[(160), uint64] */)
  };
  %1401() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */
}

def @func_5180() -> (Tensor[(13, 9, 4), float32],) {
  %1403 = fn () -> (Tensor[(13, 9, 4), float32],) {
    %1402 = @func_3067() /* ty=Tensor[(13, 9, 4), float32] */;
    (%1402,)
  };
  %1403() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_5024() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1404 = @func_2790() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1405 = %1404.0;
  %1406 = cast(%1405, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  %1407 = sin(%1406) /* ty=Tensor[(13, 9, 4), float32] */;
  %1408 = @func_3836() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1407, %1408)
}

def @func_14764(%var_14759: Tensor[(288), uint32], %var_14760: Tensor[(1344), int32], %var_14761: uint8, %var_14762: Tensor[(2, 624), float64], %var_14763: Tensor[(2, 624), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(1344), int32], Tensor[(504), float32], Tensor[(13, 9, 4), float32], Tensor[(2, 624), bool], Tensor[(2, 624), bool], Tensor[(2, 624), float32]) {
  %1448 = fn (%var_14634: Tensor[(288), uint32], %var_14635: Tensor[(1344), int32], %var_14636: uint8, %var_14666: Tensor[(2, 624), float64], %var_14711: Tensor[(2, 624), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(1344), int32], Tensor[(504), float32], Tensor[(13, 9, 4), float32], Tensor[(2, 624), bool], Tensor[(2, 624), bool], Tensor[(2, 624), float32]) {
    %1409 = @func_9309() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64], Tensor[(576), float64], Tensor[(12), uint8]) */;
    %1410 = cast(meta[relay.Constant][76] /* ty=Tensor[(1, 624), float64] */, dtype="float64") /* ty=Tensor[(1, 624), float64] */;
    %1411 = cast(%var_14634, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %1412 = cast(%var_14635, dtype="int32") /* ty=Tensor[(1344), int32] */;
    %1413 = cast(%var_14636, dtype="uint8") /* ty=uint8 */;
    %1414 = reshape(%1410, newshape=[624]) /* ty=Tensor[(624), float64] */;
    %1415 = reshape(%1411, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %1416 = reshape(%1412, newshape=[1344]) /* ty=Tensor[(1344), int32] */;
    %1417 = reshape(%1413, newshape=[]) /* ty=uint8 */;
    %1418 = @func_8752(%1414, %1415, %1416, %1417) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(12, 4, 13), float64], Tensor[(624), int8], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(4, 72), uint32], Tensor[(1344), int32], uint8, Tensor[(13, 9, 4), float32]) */;
    %1419 = cast(%var_14636, dtype="uint8") /* ty=uint8 */;
    %1420 = reshape(%1419, newshape=[]) /* ty=uint8 */;
    %1421 = @func_11762(%1420) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], uint8, Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(504), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1422 = cast(%var_14666, dtype="bool") /* ty=Tensor[(2, 624), bool] */;
    %1423 = cast(%var_14636, dtype="bool") /* ty=bool */;
    %1424 = cast(meta[relay.Constant][76] /* ty=Tensor[(1, 624), float64] */, dtype="float64") /* ty=Tensor[(1, 624), float64] */;
    %1425 = tan(%1424) /* ty=Tensor[(1, 624), float64] */;
    %1426 = cast(%1425, dtype="bool") /* ty=Tensor[(1, 624), bool] */;
    %1427 = cast(%var_14666, dtype="bool") /* ty=Tensor[(2, 624), bool] */;
    %1428 = equal(%1426, %1427) /* ty=Tensor[(2, 624), bool] */;
    %1429 = cast(%1428, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
    %1430 = log10(%1429) /* ty=Tensor[(2, 624), float64] */;
    %1431 = cast(%var_14711, dtype="bool") /* ty=Tensor[(2, 624), bool] */;
    %1432 = shape_of(%1430, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1433 = cast(%1430, dtype="bool") /* ty=Tensor[(2, 624), bool] */;
    %1434 = dyn.reshape(%1431, %1432, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1435 = cast(%1430, dtype="float64") /* ty=Tensor[(2, 624), float64] */;
    %1436 = sin(%1435) /* ty=Tensor[(2, 624), float64] */;
    %1437 = cast(%1436, dtype="float32") /* ty=Tensor[(2, 624), float32] */;
    %1438 = erf(%1437) /* ty=Tensor[(2, 624), float32] */;
    %1439 = cast(%1438, dtype="float32") /* ty=Tensor[(2, 624), float32] */;
    %1440 = cast(%var_14636, dtype="float32") /* ty=float32 */;
    %1441 = %1409.1;
    %1442 = %1418.10;
    %1443 = %1421.8;
    %1444 = @func_10114() /* ty=Tensor[(13, 9, 4), float32] */;
    %1445 = greater_equal(%1422, %1423) /* ty=Tensor[(2, 624), bool] */;
    %1446 = less(%1433, %1434) /* ty=Tensor[(2, 624), bool] */;
    %1447 = subtract(%1439, %1440) /* ty=Tensor[(2, 624), float32] */;
    (%1441, %1442, %var_14634, %var_14635, %1443, %1444, %1445, %1446, %1447)
  };
  %1448(%var_14759, %var_14760, %var_14761, %var_14762, %var_14763) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(1344), int32], Tensor[(504), float32], Tensor[(13, 9, 4), float32], Tensor[(2, 624), bool], Tensor[(2, 624), bool], Tensor[(2, 624), float32]) */
}

def @func_15091() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1452 = fn () -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
    %1449 = @func_4326() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %1450 = @func_3836() /* ty=Tensor[(13, 9, 4), float32] */;
    %1451 = %1449.0;
    (%1450, %1451)
  };
  %1452() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_15261() -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) {
  %1453 = @func_13458() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1454 = @func_8254() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %1455 = @func_3547() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %1456 = %1453.0;
  %1457 = %1454.0;
  %1458 = %1455.1;
  (%1456, %1457, %1458)
}

def @func_15294() -> (Tensor[(13, 9, 4), float32],) {
  @func_15292() /* ty=(Tensor[(13, 9, 4), float32],) */
}

def @func_12899() -> Tensor[(13, 9, 4), float32] {
  @func_12897() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_16312() -> Tensor[(13, 9, 4), int16] {
  @func_16310() /* ty=Tensor[(13, 9, 4), int16] */
}

def @func_1492(%var_1485: int32) -> (Tensor[(2, 3, 5), int32],) {
  %1459 = cast(%var_1485, dtype="int32") /* ty=int32 */;
  %1460 = cast(meta[relay.Constant][77] /* ty=Tensor[(2, 3, 5), int32] */, dtype="int32") /* ty=Tensor[(2, 3, 5), int32] */;
  %1461 = logical_xor(%1459, %1460) /* ty=Tensor[(2, 3, 5), int32] */;
  (%1461,)
}

def @func_9724() -> (Tensor[(13, 9, 4), float32], Tensor[(936), uint8]) {
  %1462 = @func_6280() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) */;
  %1463 = @func_5916() /* ty=Tensor[(13, 9, 4), float32] */;
  %1464 = %1462.1;
  (%1463, %1464)
}

def @func_14917() -> Tensor[(6, 15, 2), float64] {
  %1466 = fn () -> Tensor[(6, 15, 2), float64] {
    %1465 = cast(meta[relay.Constant][78] /* ty=Tensor[(6, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 2), float64] */;
    log10(%1465) /* ty=Tensor[(6, 15, 2), float64] */
  };
  %1466() /* ty=Tensor[(6, 15, 2), float64] */
}

def @main(%var_17086: Tensor[(6, 10, 14), int64], %var_17087: Tensor[(6, 10, 14), int64]) -> (Tensor[(6, 10, 14), bool],) {
  %1467 = cast(%var_17087, dtype="bool") /* ty=Tensor[(6, 10, 14), bool] */;
  %1468 = shape_of(%var_17086, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1469 = cast(%var_17086, dtype="bool") /* ty=Tensor[(6, 10, 14), bool] */;
  %1470 = dyn.reshape(%1467, %1468, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1471 = equal(%1469, %1470) /* ty=Tensor[(6, 10, 14), bool] */;
  (%1471,)
}

def @func_4229(%var_4175: Tensor[(4, 8, 13), int64], %var_4176: Tensor[(4, 8, 13), int64]) -> (Tensor[(4, 8, 13), float32], Tensor[(7, 8, 2), float32], Tensor[(1, 112), int32], Tensor[(4, 40), uint64], Tensor[(288), uint32], Tensor[(130), bool], Tensor[(1, 12), uint8], Tensor[(4, 8, 13), float32], Tensor[(6, 2), uint8]) {
  %1472 = cast(%var_4176, dtype="int64") /* ty=Tensor[(4, 8, 13), int64] */;
  %1473 = shape_of(%var_4175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1474 = cast(%var_4175, dtype="int64") /* ty=Tensor[(4, 8, 13), int64] */;
  %1475 = dyn.reshape(%1472, %1473, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1476 = bitwise_and(%1474, %1475) /* ty=Tensor[(4, 8, 13), int64] */;
  %1477 = cast(%1476, dtype="float64") /* ty=Tensor[(4, 8, 13), float64] */;
  %1478 = shape_of(%var_4175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1479 = cast(%var_4175, dtype="float64") /* ty=Tensor[(4, 8, 13), float64] */;
  %1480 = dyn.reshape(%1477, %1478, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1481 = mod(%1479, %1480) /* ty=Tensor[(4, 8, 13), float64] */;
  %1482 = cast(%1481, dtype="float32") /* ty=Tensor[(4, 8, 13), float32] */;
  %1483 = cast(meta[relay.Constant][79] /* ty=Tensor[(1, 112), int32] */, dtype="int32") /* ty=Tensor[(1, 112), int32] */;
  %1484 = cast(meta[relay.Constant][79] /* ty=Tensor[(1, 112), int32] */, dtype="int32") /* ty=Tensor[(1, 112), int32] */;
  %1485 = cast(meta[relay.Constant][80] /* ty=Tensor[(4, 40), uint64] */, dtype="uint64") /* ty=Tensor[(4, 40), uint64] */;
  %1486 = reshape(%1483, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), int32] */;
  %1487 = reshape(%1484, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), int32] */;
  %1488 = reshape(%1485, newshape=[8, 20]) /* ty=Tensor[(8, 20), uint64] */;
  %1489 = @func_1841(%1486, %1487, %1488) /* ty=(Tensor[(7, 8, 2), bool], Tensor[(7, 8, 2), float32], Tensor[(5, 8, 4), float32], Tensor[(8, 20), uint64], uint8, uint8, Tensor[(6, 2), uint8]) */;
  %1490 = cast(meta[relay.Constant][81] /* ty=Tensor[(130), bool] */, dtype="bool") /* ty=Tensor[(130), bool] */;
  %1491 = cast(meta[relay.Constant][81] /* ty=Tensor[(130), bool] */, dtype="bool") /* ty=Tensor[(130), bool] */;
  %1492 = cast(meta[relay.Constant][81] /* ty=Tensor[(130), bool] */, dtype="bool") /* ty=Tensor[(130), bool] */;
  %1493 = cast(meta[relay.Constant][82] /* ty=Tensor[(1, 12), uint8] */, dtype="uint8") /* ty=Tensor[(1, 12), uint8] */;
  %1494 = cast(meta[relay.Constant][80] /* ty=Tensor[(4, 40), uint64] */, dtype="uint64") /* ty=Tensor[(4, 40), uint64] */;
  %1495 = reshape(%1490, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), bool] */;
  %1496 = reshape(%1491, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), bool] */;
  %1497 = reshape(%1492, newshape=[5, 13, 2]) /* ty=Tensor[(5, 13, 2), bool] */;
  %1498 = reshape(%1493, newshape=[3, 4]) /* ty=Tensor[(3, 4), uint8] */;
  %1499 = reshape(%1494, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %1500 = @func_1204(%1495, %1496, %1497, %1498, %1499) /* ty=(Tensor[(5, 13, 2), bool], Tensor[(5, 13, 2), float64], Tensor[(288), uint32], uint8, Tensor[(3, 4), uint8], Tensor[(288), uint32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */;
  %1501 = cast(%var_4176, dtype="float32") /* ty=Tensor[(4, 8, 13), float32] */;
  %1502 = cast(meta[relay.Constant][82] /* ty=Tensor[(1, 12), uint8] */, dtype="uint8") /* ty=Tensor[(1, 12), uint8] */;
  %1503 = reshape(%1502, newshape=[6, 2]) /* ty=Tensor[(6, 2), uint8] */;
  %1504 = @func_2042(%1503) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(6, 2), uint8]) */;
  %1505 = sqrt(%1482) /* ty=Tensor[(4, 8, 13), float32] */;
  %1506 = %1489.1;
  %1507 = %1500.5;
  %1508 = acos(%1501) /* ty=Tensor[(4, 8, 13), float32] */;
  %1509 = %1504.3;
  (%1505, %1506, meta[relay.Constant][79] /* ty=Tensor[(1, 112), int32] */, meta[relay.Constant][80] /* ty=Tensor[(4, 40), uint64] */, %1507, meta[relay.Constant][81] /* ty=Tensor[(130), bool] */, meta[relay.Constant][82] /* ty=Tensor[(1, 12), uint8] */, %1508, %1509)
}

def @func_9181() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1510 = @func_5658() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1511 = %1510.0;
  %1512 = @func_4518() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1511, %1512)
}

def @func_12246() -> (Tensor[(13, 9, 4), float32],) {
  %1513 = @func_9115() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1514 = %1513.0;
  (%1514,)
}

def @func_14125(%var_14073: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(1344), int32], Tensor[(576), float64], Tensor[(1344), int32], uint8, Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  %1515 = cast(meta[relay.Constant][83] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %1516 = cast(meta[relay.Constant][84] /* ty=Tensor[(1344), int32] */, dtype="int32") /* ty=Tensor[(1344), int32] */;
  %1517 = cast(%var_14073, dtype="uint8") /* ty=uint8 */;
  %1518 = reshape(%1515, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %1519 = reshape(%1516, newshape=[1344]) /* ty=Tensor[(1344), int32] */;
  %1520 = reshape(%1517, newshape=[]) /* ty=uint8 */;
  %1521 = @func_13291(%1518, %1519, %1520) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(12), uint8], Tensor[(576), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(1344), int32], Tensor[(1344), int32], uint8, Tensor[(2, 144), uint32], Tensor[(13, 9, 4), float32]) */;
  %1522 = @func_8874() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(160), uint64]) */;
  %1523 = @func_9811() /* ty=Tensor[(13, 9, 4), float32] */;
  %1524 = %1521.7;
  %1525 = %1522.0;
  %1526 = @func_10114() /* ty=Tensor[(13, 9, 4), float32] */;
  %1527 = @func_4518() /* ty=Tensor[(13, 9, 4), float32] */;
  %1528 = @func_8025() /* ty=Tensor[(13, 9, 4), float32] */;
  (%1523, %1524, meta[relay.Constant][83] /* ty=Tensor[(576), float64] */, meta[relay.Constant][84] /* ty=Tensor[(1344), int32] */, %var_14073, %1525, %1526, %1527, %1528)
}

def @func_4391() -> Tensor[(13, 9, 4), float32] {
  %1529 = @func_3222() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1530 = %1529.0;
  %1531 = cast(%1530, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
  sinh(%1531) /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_5679() -> (Tensor[(13, 9, 4), float32],) {
  %1532 = @func_5024() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1533 = %1532.1;
  (%1533,)
}

def @func_6647(%var_6645: Tensor[(9, 5, 3), float64]) -> (Tensor[(9, 5, 3), float64],) {
  @func_6644(%var_6645) /* ty=(Tensor[(9, 5, 3), float64],) */
}

def @func_16587(%var_16585: Tensor[(9, 7, 14), int64], %var_16586: Tensor[(9, 7, 14), int64]) -> Tensor[(9, 7, 14), int64] {
  %1538 = fn (%var_16578: Tensor[(9, 7, 14), int64], %var_16579: Tensor[(9, 7, 14), int64]) -> Tensor[(9, 7, 14), int64] {
    %1534 = cast(%var_16579, dtype="int64") /* ty=Tensor[(9, 7, 14), int64] */;
    %1535 = shape_of(%var_16578, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1536 = cast(%var_16578, dtype="int64") /* ty=Tensor[(9, 7, 14), int64] */;
    %1537 = dyn.reshape(%1534, %1535, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    minimum(%1536, %1537) /* ty=Tensor[(9, 7, 14), int64] */
  };
  %1538(%var_16585, %var_16586) /* ty=Tensor[(9, 7, 14), int64] */
}

def @func_16162() -> Tensor[(13, 9, 4), float32] {
  @func_16160() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_15028() -> (Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(936), uint8], Tensor[(13, 9, 4), float32]) {
  %1539 = @func_10102() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(936), uint8], Tensor[(13, 9, 4), float32], Tensor[(156), int32]) */;
  %1540 = @func_10713() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1541 = @func_9536() /* ty=Tensor[(13, 9, 4), float32] */;
  %1542 = @func_10384() /* ty=Tensor[(160), uint64] */;
  %1543 = %1539.1;
  %1544 = %1540.0;
  (%1541, %1542, %1543, %1544)
}

def @func_16284() -> Tensor[(13, 9, 4), float32] {
  %1546 = fn () -> Tensor[(13, 9, 4), float32] {
    %1545 = @func_15484() /* ty=(Tensor[(16, 8, 12), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1545.2
  };
  %1546() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_14867() -> Tensor[(936), uint8] {
  %1547 = @func_10890() /* ty=(Tensor[(936), uint8],) */;
  %1547.0
}

def @func_15184(%var_15183: Tensor[(504), float32]) -> (Tensor[(13, 9, 4), float32], Tensor[(4, 9, 14), float32], Tensor[(504), float32]) {
  %1554 = fn (%var_15172: Tensor[(504), float32]) -> (Tensor[(13, 9, 4), float32], Tensor[(4, 9, 14), float32], Tensor[(504), float32]) {
    %1548 = @func_6584() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1549 = cast(%var_15172, dtype="float32") /* ty=Tensor[(504), float32] */;
    %1550 = reshape(%1549, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), float32] */;
    %1551 = @func_9616(%1550) /* ty=(Tensor[(4, 9, 14), float32], Tensor[(13, 9, 4), float32], Tensor[(1287), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1552 = %1548.2;
    %1553 = %1551.0;
    (%1552, %1553, %var_15172)
  };
  %1554(%var_15183) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(4, 9, 14), float32], Tensor[(504), float32]) */
}

def @func_11077() -> Tensor[(13, 9, 4), float32] {
  %1556 = fn () -> Tensor[(13, 9, 4), float32] {
    %1555 = @func_7789() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1555.0
  };
  %1556() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_6393(%var_6390: Tensor[(1287), float32]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) {
  %1557 = cast(%var_6390, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %1558 = reshape(%1557, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), float32] */;
  %1559 = @func_1788(%1558) /* ty=(Tensor[(11, 9, 13), float32],) */;
  %1560 = @func_5916() /* ty=Tensor[(13, 9, 4), float32] */;
  %1561 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
  %1562 = %1559.0;
  (%1560, %1561, %1562, %var_6390)
}

def @func_15344() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_15342() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_15486() -> (Tensor[(16, 8, 12), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_15484() /* ty=(Tensor[(16, 8, 12), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_2042(%var_2033: Tensor[(6, 2), uint8]) -> (Tensor[(13, 9, 4), float32], Tensor[(288), uint32], uint8, Tensor[(6, 2), uint8]) {
  %1563 = @func_1920() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1564 = cast(meta[relay.Constant][85] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1565 = cast(%var_2033, dtype="uint8") /* ty=Tensor[(6, 2), uint8] */;
  %1566 = reshape(%1564, newshape=[]) /* ty=uint8 */;
  %1567 = reshape(%1565, newshape=[12]) /* ty=Tensor[(12), uint8] */;
  %1568 = @func_1748(%1566, %1567) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(2, 6, 1), uint8], uint8, Tensor[(12), uint8], Tensor[(288), uint32], Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), uint32]) */;
  %1569 = %1563.0;
  %1570 = %1568.4;
  (%1569, %1570, meta[relay.Constant][85] /* ty=uint8 */, %var_2033)
}

def @func_3786() -> (Tensor[(13, 9, 4), float32], Tensor[(16, 3, 6), int64], Tensor[(56, 2), int32], Tensor[(936), uint8]) {
  %1571 = @func_2827() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1572 = cast(meta[relay.Constant][86] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %1573 = reshape(%1572, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), uint32] */;
  %1574 = @func_310(%1573) /* ty=Tensor[(16, 3, 6), uint32] */;
  %1575 = cast(meta[relay.Constant][86] /* ty=Tensor[(288), uint32] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %1576 = shape_of(%1574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1577 = cast(%1574, dtype="int64") /* ty=Tensor[(16, 3, 6), int64] */;
  %1578 = dyn.reshape(%1575, %1576, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1579 = cast(meta[relay.Constant][87] /* ty=Tensor[(936), uint8] */, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %1580 = cast(meta[relay.Constant][87] /* ty=Tensor[(936), uint8] */, dtype="uint8") /* ty=Tensor[(936), uint8] */;
  %1581 = reshape(%1579, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), uint8] */;
  %1582 = reshape(%1580, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), uint8] */;
  %1583 = @func_2554(%1581, %1582) /* ty=(Tensor[(13, 9, 8), uint8], Tensor[(56, 2), int32], Tensor[(160), uint64], Tensor[(5, 8, 4), float32]) */;
  %1584 = %1571.0;
  %1585 = bitwise_or(%1577, %1578) /* ty=Tensor[(16, 3, 6), int64] */;
  %1586 = %1583.1;
  (%1584, %1585, %1586, meta[relay.Constant][87] /* ty=Tensor[(936), uint8] */)
}

def @func_7383() -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_7381() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_10839(%var_10837: Tensor[(13, 9, 4), float32]) -> (Tensor[(13, 9, 4), uint32], Tensor[(13, 9, 4), float32]) {
  @func_10836(%var_10837) /* ty=(Tensor[(13, 9, 4), uint32], Tensor[(13, 9, 4), float32]) */
}

def @func_14128(%var_14126: uint8) -> (Tensor[(13, 9, 4), float32], Tensor[(1344), int32], Tensor[(576), float64], Tensor[(1344), int32], uint8, Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) {
  @func_14125(%var_14126) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(1344), int32], Tensor[(576), float64], Tensor[(1344), int32], uint8, Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */
}

def @func_11286() -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  %1590 = fn () -> (Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
    %1587 = @func_8606() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
    %1588 = %1587.0;
    %1589 = @func_4518() /* ty=Tensor[(13, 9, 4), float32] */;
    (%1588, %1589)
  };
  %1590() /* ty=(Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */
}

def @func_5965(%var_5956: Tensor[(1287), float32]) -> (Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(11, 9, 13), float32], Tensor[(1287), float32]) {
  %1591 = @func_2827() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1592 = @func_5893() /* ty=(Tensor[(13, 9, 4), float64], Tensor[(13, 9, 4), float32]) */;
  %1593 = cast(%var_5956, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %1594 = reshape(%1593, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), float32] */;
  %1595 = @func_1788(%1594) /* ty=(Tensor[(11, 9, 13), float32],) */;
  %1596 = @func_5818() /* ty=Tensor[(13, 9, 4), float64] */;
  %1597 = @func_4434() /* ty=Tensor[(13, 9, 4), float32] */;
  %1598 = %1591.0;
  %1599 = %1592.1;
  %1600 = %1595.0;
  (%1596, %1597, %1598, %1599, %1600, %var_5956)
}

def @func_6239(%var_6235: Tensor[(16, 7, 12), int32], %var_6236: Tensor[(16, 7, 12), int32], %var_6237: uint8, %var_6238: Tensor[(288), uint32]) -> (Tensor[(16, 7, 12), int32], Tensor[(288), uint32], uint8, Tensor[(1, 12), uint8], Tensor[(288), uint32]) {
  %1614 = fn (%var_6206: Tensor[(16, 7, 12), int32], %var_6207: Tensor[(16, 7, 12), int32], %var_6218: uint8, %var_6220: Tensor[(288), uint32]) -> (Tensor[(16, 7, 12), int32], Tensor[(288), uint32], uint8, Tensor[(1, 12), uint8], Tensor[(288), uint32]) {
    %1601 = cast(%var_6207, dtype="int32") /* ty=Tensor[(16, 7, 12), int32] */;
    %1602 = shape_of(%var_6206, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1603 = cast(%var_6206, dtype="int32") /* ty=Tensor[(16, 7, 12), int32] */;
    %1604 = dyn.reshape(%1601, %1602, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1605 = cast(%var_6218, dtype="uint8") /* ty=uint8 */;
    %1606 = cast(meta[relay.Constant][88] /* ty=Tensor[(1, 12), uint8] */, dtype="uint8") /* ty=Tensor[(1, 12), uint8] */;
    %1607 = cast(%var_6220, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %1608 = reshape(%1605, newshape=[]) /* ty=uint8 */;
    %1609 = reshape(%1606, newshape=[2, 6, 1]) /* ty=Tensor[(2, 6, 1), uint8] */;
    %1610 = reshape(%1607, newshape=[288]) /* ty=Tensor[(288), uint32] */;
    %1611 = @func_1011(%1608, %1609, %1610) /* ty=(Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */;
    %1612 = right_shift(%1603, %1604) /* ty=Tensor[(16, 7, 12), int32] */;
    %1613 = %1611.2;
    (%1612, %1613, %var_6218, meta[relay.Constant][88] /* ty=Tensor[(1, 12), uint8] */, %var_6220)
  };
  %1614(%var_6235, %var_6236, %var_6237, %var_6238) /* ty=(Tensor[(16, 7, 12), int32], Tensor[(288), uint32], uint8, Tensor[(1, 12), uint8], Tensor[(288), uint32]) */
}

def @func_14348(%var_14347: Tensor[(6, 96), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(6, 96), float64]) {
  %1620 = fn (%var_14344: Tensor[(6, 96), float64]) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(6, 96), float64]) {
    %1615 = cast(%var_14344, dtype="float64") /* ty=Tensor[(6, 96), float64] */;
    %1616 = reshape(%1615, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %1617 = @func_6797(%1616) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(576), float64]) */;
    %1618 = @func_6524() /* ty=Tensor[(13, 9, 4), float32] */;
    %1619 = %1617.0;
    (%1618, %1619, %var_14344)
  };
  %1620(%var_14347) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], Tensor[(6, 96), float64]) */
}

def @func_15533() -> Tensor[(8, 10, 9), float64] {
  %1621 = cast(meta[relay.Constant][89] /* ty=Tensor[(8, 10, 9), float32] */, dtype="float32") /* ty=Tensor[(8, 10, 9), float32] */;
  %1622 = acosh(%1621) /* ty=Tensor[(8, 10, 9), float32] */;
  %1623 = cast(%1622, dtype="float64") /* ty=Tensor[(8, 10, 9), float64] */;
  rsqrt(%1623) /* ty=Tensor[(8, 10, 9), float64] */
}

def @func_2251(%var_2250: int32) -> (Tensor[(2, 3, 5), int64], Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
  %1638 = fn (%var_2172: int32) -> (Tensor[(2, 3, 5), int64], Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) {
    %1624 = cast(%var_2172, dtype="int32") /* ty=int32 */;
    %1625 = reshape(%1624, newshape=[]) /* ty=int32 */;
    %1626 = @func_1492(%1625) /* ty=(Tensor[(2, 3, 5), int32],) */;
    %1627 = %1626.0;
    %1628 = cast(%var_2172, dtype="int64") /* ty=int64 */;
    %1629 = cast(%1627, dtype="int64") /* ty=Tensor[(2, 3, 5), int64] */;
    %1630 = cast(meta[relay.Constant][90] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %1631 = reshape(%1630, newshape=[160]) /* ty=Tensor[(160), uint64] */;
    %1632 = @func_2070(%1631) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(5, 8, 4), float32], Tensor[(160), uint64]) */;
    %1633 = @func_1676() /* ty=Tensor[(13, 9, 4), float32] */;
    %1634 = cast(%1633, dtype="float32") /* ty=Tensor[(13, 9, 4), float32] */;
    %1635 = bitwise_xor(%1628, %1629) /* ty=Tensor[(2, 3, 5), int64] */;
    %1636 = %1632.0;
    %1637 = cos(%1634) /* ty=Tensor[(13, 9, 4), float32] */;
    (%1635, %1636, meta[relay.Constant][90] /* ty=Tensor[(160), uint64] */, %1637)
  };
  %1638(%var_2250) /* ty=(Tensor[(2, 3, 5), int64], Tensor[(13, 9, 4), float32], Tensor[(160), uint64], Tensor[(13, 9, 4), float32]) */
}

def @func_12429() -> Tensor[(13, 9, 4), float32] {
  @func_12427() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_1016(%var_1013: uint8, %var_1014: Tensor[(2, 6, 1), uint8], %var_1015: Tensor[(288), uint32]) -> (Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) {
  @func_1011(%var_1013, %var_1014, %var_1015) /* ty=(Tensor[(2, 6, 1), uint8], Tensor[(16, 3, 6), uint32], Tensor[(288), uint32]) */
}

def @func_9813() -> Tensor[(13, 9, 4), float32] {
  @func_9811() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_14486(%var_14485: int32) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], int32, Tensor[(2, 3, 5), float64]) {
  %1648 = fn (%var_14478: int32) -> (Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], int32, Tensor[(2, 3, 5), float64]) {
    %1639 = @func_9548() /* ty=(Tensor[(13, 9, 4), float32],) */;
    %1640 = cast(%var_14478, dtype="int32") /* ty=int32 */;
    %1641 = reshape(%1640, newshape=[]) /* ty=int32 */;
    %1642 = @func_1492(%1641) /* ty=(Tensor[(2, 3, 5), int32],) */;
    %1643 = %1642.0;
    %1644 = cast(%1643, dtype="float64") /* ty=Tensor[(2, 3, 5), float64] */;
    %1645 = %1639.0;
    %1646 = @func_6055() /* ty=Tensor[(13, 9, 4), float32] */;
    %1647 = exp(%1644) /* ty=Tensor[(2, 3, 5), float64] */;
    (%1645, %1646, %var_14478, %1647)
  };
  %1648(%var_14485) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32], int32, Tensor[(2, 3, 5), float64]) */
}

def @func_14812() -> Tensor[(13, 9, 4), float32] {
  %1649 = @func_2790() /* ty=(Tensor[(13, 9, 4), float32],) */;
  %1649.0
}

def @func_310(%var_300: Tensor[(16, 3, 6), uint32]) -> Tensor[(16, 3, 6), uint32] {
  %1650 = cast(%var_300, dtype="uint32") /* ty=Tensor[(16, 3, 6), uint32] */;
  %1651 = shape_of(meta[relay.Constant][91] /* ty=Tensor[(16, 3, 6), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1652 = cast(meta[relay.Constant][91] /* ty=Tensor[(16, 3, 6), uint32] */, dtype="uint32") /* ty=Tensor[(16, 3, 6), uint32] */;
  %1653 = dyn.reshape(%1650, %1651, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_and(%1652, %1653) /* ty=Tensor[(16, 3, 6), uint32] */
}

def @func_1678() -> Tensor[(13, 9, 4), float32] {
  @func_1676() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_14285() -> Tensor[(13, 9, 4), float32] {
  @func_1676() /* ty=Tensor[(13, 9, 4), float32] */
}

def @func_12605() -> (Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(288), uint32]) {
  %1654 = @func_9796() /* ty=(Tensor[(13, 9, 4), float32], Tensor[(13, 9, 4), float32]) */;
  %1655 = cast(meta[relay.Constant][92] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %1656 = reshape(%1655, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %1657 = @func_6110(%1656) /* ty=(Tensor[(13, 9, 4), float32], Tensor[(288), uint32], Tensor[(936), uint8], Tensor[(8, 20), uint64], Tensor[(288), uint32], uint8, uint8) */;
  %1658 = %1654.1;
  %1659 = %1657.1;
  (%1658, %1659, meta[relay.Constant][92] /* ty=Tensor[(288), uint32] */)
}

def @func_8692() -> Tensor[(936), uint8] {
  @func_7572() /* ty=Tensor[(936), uint8] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen601/build/output.py:5579: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen601/build/output.py", line 5584, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(840) tvmgen_default_fused_cast_cast_reshape_equal_kernel0(signed char* __restrict__ T_equal, int64_t* __restrict__ placeholder, int64_t* __restrict__ placeholder1) {
  T_equal[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) == ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


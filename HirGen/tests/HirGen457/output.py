import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_53 = relay.var("var_53", dtype = "float64", shape = ())#candidate|53|()|var|float64
var_54 = relay.var("var_54", dtype = "float64", shape = (2, 1, 7))#candidate|54|(2, 1, 7)|var|float64
bop_55 = relay.greater_equal(var_53.astype('bool'), var_54.astype('bool')) # shape=(2, 1, 7)
bop_62 = relay.multiply(bop_55.astype('float32'), relay.reshape(var_54.astype('float32'), relay.shape_of(bop_55))) # shape=(2, 1, 7)
output = relay.Tuple([bop_62,])
output2 = relay.Tuple([bop_62,])
func_65 = relay.Function([var_53,var_54,], output)
mod['func_65'] = func_65
mod = relay.transform.InferType()(mod)
mutated_mod['func_65'] = func_65
mutated_mod = relay.transform.InferType()(mutated_mod)
func_65_call = mutated_mod.get_global_var('func_65')
var_67 = relay.var("var_67", dtype = "float64", shape = ())#candidate|67|()|var|float64
var_68 = relay.var("var_68", dtype = "float64", shape = (2, 1, 7))#candidate|68|(2, 1, 7)|var|float64
call_66 = func_65_call(var_67,var_68,)
output = call_66
func_69 = relay.Function([var_67,var_68,], output)
mutated_mod['func_69'] = func_69
mutated_mod = relay.transform.InferType()(mutated_mod)
var_407 = relay.var("var_407", dtype = "float64", shape = (1, 2, 12))#candidate|407|(1, 2, 12)|var|float64
uop_408 = relay.atanh(var_407.astype('float64')) # shape=(1, 2, 12)
bop_414 = relay.floor_divide(var_407.astype('float64'), relay.reshape(uop_408.astype('float64'), relay.shape_of(var_407))) # shape=(1, 2, 12)
bop_418 = relay.less_equal(uop_408.astype('bool'), relay.reshape(var_407.astype('bool'), relay.shape_of(uop_408))) # shape=(1, 2, 12)
uop_437 = relay.exp(bop_414.astype('float32')) # shape=(1, 2, 12)
output = relay.Tuple([bop_418,uop_437,])
output2 = relay.Tuple([bop_418,uop_437,])
func_439 = relay.Function([var_407,], output)
mod['func_439'] = func_439
mod = relay.transform.InferType()(mod)
mutated_mod['func_439'] = func_439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_440 = relay.var("var_440", dtype = "float64", shape = (1, 2, 12))#candidate|440|(1, 2, 12)|var|float64
func_439_call = mutated_mod.get_global_var('func_439')
call_441 = func_439_call(var_440)
output = call_441
func_442 = relay.Function([var_440], output)
mutated_mod['func_442'] = func_442
mutated_mod = relay.transform.InferType()(mutated_mod)
var_812 = relay.var("var_812", dtype = "float32", shape = (1, 1, 6))#candidate|812|(1, 1, 6)|var|float32
uop_813 = relay.sqrt(var_812.astype('float32')) # shape=(1, 1, 6)
func_439_call = mod.get_global_var('func_439')
func_442_call = mutated_mod.get_global_var('func_442')
var_831 = relay.var("var_831", dtype = "float64", shape = (24,))#candidate|831|(24,)|var|float64
call_830 = relay.TupleGetItem(func_439_call(relay.reshape(var_831.astype('float64'), [1, 2, 12])), 0)
call_832 = relay.TupleGetItem(func_442_call(relay.reshape(var_831.astype('float64'), [1, 2, 12])), 0)
uop_843 = relay.log(uop_813.astype('float64')) # shape=(1, 1, 6)
bop_852 = relay.logical_or(uop_843.astype('bool'), relay.reshape(uop_813.astype('bool'), relay.shape_of(uop_843))) # shape=(1, 1, 6)
uop_859 = relay.log2(bop_852.astype('float32')) # shape=(1, 1, 6)
bop_869 = relay.power(uop_859.astype('float32'), relay.reshape(bop_852.astype('float32'), relay.shape_of(uop_859))) # shape=(1, 1, 6)
bop_872 = relay.add(uop_859.astype('uint64'), relay.reshape(bop_852.astype('uint64'), relay.shape_of(uop_859))) # shape=(1, 1, 6)
bop_877 = relay.maximum(bop_872.astype('uint64'), relay.reshape(uop_843.astype('uint64'), relay.shape_of(bop_872))) # shape=(1, 1, 6)
func_439_call = mod.get_global_var('func_439')
func_442_call = mutated_mod.get_global_var('func_442')
call_888 = relay.TupleGetItem(func_439_call(relay.reshape(call_830.astype('float64'), [1, 2, 12])), 0)
call_889 = relay.TupleGetItem(func_442_call(relay.reshape(call_830.astype('float64'), [1, 2, 12])), 0)
func_65_call = mod.get_global_var('func_65')
func_69_call = mutated_mod.get_global_var('func_69')
const_891 = relay.const(2.691587, dtype = "float64")#candidate|891|()|const|float64
const_892 = relay.const([1.912633,5.617286,-7.777827,-9.478061,-2.345458,4.321355,-9.936586,-4.490465,3.450071,2.981870,1.488772,-2.466942,-2.530364,5.660182], dtype = "float64")#candidate|892|(14,)|const|float64
call_890 = relay.TupleGetItem(func_65_call(relay.reshape(const_891.astype('float64'), []), relay.reshape(const_892.astype('float64'), [2, 1, 7]), ), 0)
call_893 = relay.TupleGetItem(func_69_call(relay.reshape(const_891.astype('float64'), []), relay.reshape(const_892.astype('float64'), [2, 1, 7]), ), 0)
bop_915 = relay.bitwise_and(bop_869.astype('int8'), relay.reshape(bop_872.astype('int8'), relay.shape_of(bop_869))) # shape=(1, 1, 6)
bop_922 = relay.minimum(uop_843.astype('uint8'), relay.reshape(bop_915.astype('uint8'), relay.shape_of(uop_843))) # shape=(1, 1, 6)
bop_929 = relay.floor_divide(bop_872.astype('float64'), relay.reshape(uop_843.astype('float64'), relay.shape_of(bop_872))) # shape=(1, 1, 6)
func_65_call = mod.get_global_var('func_65')
func_69_call = mutated_mod.get_global_var('func_69')
call_933 = relay.TupleGetItem(func_65_call(relay.reshape(const_891.astype('float64'), []), relay.reshape(call_890.astype('float64'), [2, 1, 7]), ), 0)
call_934 = relay.TupleGetItem(func_69_call(relay.reshape(const_891.astype('float64'), []), relay.reshape(call_890.astype('float64'), [2, 1, 7]), ), 0)
func_439_call = mod.get_global_var('func_439')
func_442_call = mutated_mod.get_global_var('func_442')
call_935 = relay.TupleGetItem(func_439_call(relay.reshape(var_831.astype('float64'), [1, 2, 12])), 0)
call_936 = relay.TupleGetItem(func_442_call(relay.reshape(var_831.astype('float64'), [1, 2, 12])), 0)
output = relay.Tuple([call_830,var_831,bop_877,call_888,call_890,const_891,const_892,bop_922,bop_929,call_933,call_935,])
output2 = relay.Tuple([call_832,var_831,bop_877,call_889,call_893,const_891,const_892,bop_922,bop_929,call_934,call_936,])
func_938 = relay.Function([var_812,var_831,], output)
mod['func_938'] = func_938
mod = relay.transform.InferType()(mod)
var_939 = relay.var("var_939", dtype = "float32", shape = (1, 1, 6))#candidate|939|(1, 1, 6)|var|float32
var_940 = relay.var("var_940", dtype = "float64", shape = (24,))#candidate|940|(24,)|var|float64
output = func_938(var_939,var_940,)
func_941 = relay.Function([var_939,var_940,], output)
mutated_mod['func_941'] = func_941
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1113 = relay.const([[[-9.677207,-8.479300,9.049074,-5.615969,-8.969693,7.161974,9.310642,4.083403,2.299843,-4.368231,9.129092],[-0.677902,1.915355,5.953734,-4.526789,3.927944,9.637220,3.343346,-8.457840,-9.388347,-2.835407,0.671752]],[[1.050824,-0.731161,3.778533,-6.952224,5.269227,3.358407,7.582758,-7.096918,7.151845,1.103375,9.340981],[5.362020,-0.774898,-8.689336,4.379598,0.001161,1.688183,-1.972405,-6.053424,3.674284,9.802882,-5.019450]],[[0.446923,-2.812697,4.524362,7.272643,-6.800284,-5.079974,-9.342461,-5.935743,5.242444,-6.208525,6.959084],[7.849791,7.977317,-4.632474,2.301438,-4.161673,8.987313,9.050379,-2.767315,3.267719,-2.537933,1.743378]],[[6.739563,-2.980249,1.675412,7.763876,8.744147,1.554070,6.712878,5.140267,-6.426257,8.539109,-1.139377],[-5.587866,-1.588767,-4.396432,-8.108585,3.764056,2.893882,-9.271095,8.463915,8.072576,-3.674431,8.107541]],[[-3.842889,5.259116,-1.996723,-5.480856,7.410098,6.983699,8.114907,-9.497209,-3.003207,8.612182,-6.067008],[-5.445664,4.343181,-2.824423,-4.423713,4.525992,3.933367,-4.371419,8.017034,-2.332776,3.774251,-3.836052]],[[4.580816,-1.145138,0.864237,9.627447,0.511780,3.226628,-4.013821,0.908322,7.560947,9.739726,3.722259],[5.760922,4.571837,4.820825,1.175167,2.936698,8.775025,-0.850654,9.017299,-4.106253,-5.997430,3.545883]],[[4.848038,9.802163,0.349833,0.234680,-9.988045,7.631737,4.101852,5.847068,6.685079,0.279619,-0.647275],[9.369451,-1.468262,4.693760,5.442184,5.072837,8.425230,1.275420,2.061362,5.340776,2.720049,1.110338]],[[9.159560,-3.467205,4.394612,9.756876,3.013136,1.765346,-0.941626,-6.318155,3.786204,5.733784,1.691194],[4.722872,2.886933,-1.413657,-0.041708,7.859447,-6.657708,-5.821080,-7.643018,-5.281975,-5.809716,2.246250]],[[-4.349560,-4.909599,2.357581,-6.699571,-2.120403,5.796770,-4.027256,3.080833,-0.303722,-0.398801,-3.853320],[-4.464447,1.761640,-5.255650,4.389816,-7.171871,-1.721601,3.517211,-2.333758,-4.206079,-4.889271,1.207919]],[[8.576952,3.616196,4.485821,1.498290,-0.228440,-4.155097,-5.924912,9.157134,-3.489659,3.046199,-2.740296],[-9.719569,-7.043750,7.251449,8.448544,5.328775,4.607007,-5.251140,-0.545502,-7.773843,2.673760,-1.156571]]], dtype = "float32")#candidate|1113|(10, 2, 11)|const|float32
var_1114 = relay.var("var_1114", dtype = "float32", shape = (10, 2, 11))#candidate|1114|(10, 2, 11)|var|float32
bop_1115 = relay.floor_mod(const_1113.astype('float32'), relay.reshape(var_1114.astype('float32'), relay.shape_of(const_1113))) # shape=(10, 2, 11)
output = relay.Tuple([bop_1115,])
output2 = relay.Tuple([bop_1115,])
func_1123 = relay.Function([var_1114,], output)
mod['func_1123'] = func_1123
mod = relay.transform.InferType()(mod)
var_1124 = relay.var("var_1124", dtype = "float32", shape = (10, 2, 11))#candidate|1124|(10, 2, 11)|var|float32
output = func_1123(var_1124)
func_1125 = relay.Function([var_1124], output)
mutated_mod['func_1125'] = func_1125
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1404 = relay.var("var_1404", dtype = "float64", shape = (1, 6, 11))#candidate|1404|(1, 6, 11)|var|float64
uop_1405 = relay.sqrt(var_1404.astype('float64')) # shape=(1, 6, 11)
bop_1407 = relay.not_equal(uop_1405.astype('bool'), relay.reshape(var_1404.astype('bool'), relay.shape_of(uop_1405))) # shape=(1, 6, 11)
bop_1412 = relay.minimum(uop_1405.astype('uint32'), relay.reshape(bop_1407.astype('uint32'), relay.shape_of(uop_1405))) # shape=(1, 6, 11)
func_65_call = mod.get_global_var('func_65')
func_69_call = mutated_mod.get_global_var('func_69')
var_1417 = relay.var("var_1417", dtype = "float64", shape = ())#candidate|1417|()|var|float64
var_1418 = relay.var("var_1418", dtype = "float64", shape = (14, 1))#candidate|1418|(14, 1)|var|float64
call_1416 = relay.TupleGetItem(func_65_call(relay.reshape(var_1417.astype('float64'), []), relay.reshape(var_1418.astype('float64'), [2, 1, 7]), ), 0)
call_1419 = relay.TupleGetItem(func_69_call(relay.reshape(var_1417.astype('float64'), []), relay.reshape(var_1418.astype('float64'), [2, 1, 7]), ), 0)
func_439_call = mod.get_global_var('func_439')
func_442_call = mutated_mod.get_global_var('func_442')
var_1433 = relay.var("var_1433", dtype = "float64", shape = (6, 4))#candidate|1433|(6, 4)|var|float64
call_1432 = relay.TupleGetItem(func_439_call(relay.reshape(var_1433.astype('float64'), [1, 2, 12])), 1)
call_1434 = relay.TupleGetItem(func_442_call(relay.reshape(var_1433.astype('float64'), [1, 2, 12])), 1)
bop_1442 = relay.left_shift(bop_1412.astype('uint32'), relay.reshape(bop_1407.astype('uint32'), relay.shape_of(bop_1412))) # shape=(1, 6, 11)
var_1448 = relay.var("var_1448", dtype = "float64", shape = (16, 6, 11))#candidate|1448|(16, 6, 11)|var|float64
bop_1449 = relay.greater_equal(uop_1405.astype('bool'), var_1448.astype('bool')) # shape=(16, 6, 11)
func_1123_call = mod.get_global_var('func_1123')
func_1125_call = mutated_mod.get_global_var('func_1125')
var_1454 = relay.var("var_1454", dtype = "float32", shape = (220,))#candidate|1454|(220,)|var|float32
call_1453 = relay.TupleGetItem(func_1123_call(relay.reshape(var_1454.astype('float32'), [10, 2, 11])), 0)
call_1455 = relay.TupleGetItem(func_1125_call(relay.reshape(var_1454.astype('float32'), [10, 2, 11])), 0)
output = relay.Tuple([call_1416,var_1417,var_1418,call_1432,var_1433,bop_1442,bop_1449,call_1453,var_1454,])
output2 = relay.Tuple([call_1419,var_1417,var_1418,call_1434,var_1433,bop_1442,bop_1449,call_1455,var_1454,])
func_1472 = relay.Function([var_1404,var_1417,var_1418,var_1433,var_1448,var_1454,], output)
mod['func_1472'] = func_1472
mod = relay.transform.InferType()(mod)
var_1473 = relay.var("var_1473", dtype = "float64", shape = (1, 6, 11))#candidate|1473|(1, 6, 11)|var|float64
var_1474 = relay.var("var_1474", dtype = "float64", shape = ())#candidate|1474|()|var|float64
var_1475 = relay.var("var_1475", dtype = "float64", shape = (14, 1))#candidate|1475|(14, 1)|var|float64
var_1476 = relay.var("var_1476", dtype = "float64", shape = (6, 4))#candidate|1476|(6, 4)|var|float64
var_1477 = relay.var("var_1477", dtype = "float64", shape = (16, 6, 11))#candidate|1477|(16, 6, 11)|var|float64
var_1478 = relay.var("var_1478", dtype = "float32", shape = (220,))#candidate|1478|(220,)|var|float32
output = func_1472(var_1473,var_1474,var_1475,var_1476,var_1477,var_1478,)
func_1479 = relay.Function([var_1473,var_1474,var_1475,var_1476,var_1477,var_1478,], output)
mutated_mod['func_1479'] = func_1479
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1749 = relay.var("var_1749", dtype = "float32", shape = (8, 11, 7))#candidate|1749|(8, 11, 7)|var|float32
var_1750 = relay.var("var_1750", dtype = "float32", shape = (8, 11, 7))#candidate|1750|(8, 11, 7)|var|float32
bop_1751 = relay.floor_mod(var_1749.astype('float32'), relay.reshape(var_1750.astype('float32'), relay.shape_of(var_1749))) # shape=(8, 11, 7)
output = relay.Tuple([bop_1751,])
output2 = relay.Tuple([bop_1751,])
func_1755 = relay.Function([var_1749,var_1750,], output)
mod['func_1755'] = func_1755
mod = relay.transform.InferType()(mod)
mutated_mod['func_1755'] = func_1755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1755_call = mutated_mod.get_global_var('func_1755')
var_1757 = relay.var("var_1757", dtype = "float32", shape = (8, 11, 7))#candidate|1757|(8, 11, 7)|var|float32
var_1758 = relay.var("var_1758", dtype = "float32", shape = (8, 11, 7))#candidate|1758|(8, 11, 7)|var|float32
call_1756 = func_1755_call(var_1757,var_1758,)
output = call_1756
func_1759 = relay.Function([var_1757,var_1758,], output)
mutated_mod['func_1759'] = func_1759
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1885 = relay.var("var_1885", dtype = "int64", shape = (12, 9, 7))#candidate|1885|(12, 9, 7)|var|int64
var_1886 = relay.var("var_1886", dtype = "int64", shape = (12, 9, 7))#candidate|1886|(12, 9, 7)|var|int64
bop_1887 = relay.less(var_1885.astype('bool'), relay.reshape(var_1886.astype('bool'), relay.shape_of(var_1885))) # shape=(12, 9, 7)
output = relay.Tuple([bop_1887,])
output2 = relay.Tuple([bop_1887,])
func_1902 = relay.Function([var_1885,var_1886,], output)
mod['func_1902'] = func_1902
mod = relay.transform.InferType()(mod)
mutated_mod['func_1902'] = func_1902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1902_call = mutated_mod.get_global_var('func_1902')
var_1904 = relay.var("var_1904", dtype = "int64", shape = (12, 9, 7))#candidate|1904|(12, 9, 7)|var|int64
var_1905 = relay.var("var_1905", dtype = "int64", shape = (12, 9, 7))#candidate|1905|(12, 9, 7)|var|int64
call_1903 = func_1902_call(var_1904,var_1905,)
output = call_1903
func_1906 = relay.Function([var_1904,var_1905,], output)
mutated_mod['func_1906'] = func_1906
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2087 = relay.var("var_2087", dtype = "float32", shape = (7, 11, 14))#candidate|2087|(7, 11, 14)|var|float32
uop_2088 = relay.sin(var_2087.astype('float32')) # shape=(7, 11, 14)
var_2095 = relay.var("var_2095", dtype = "float32", shape = (7, 11, 14))#candidate|2095|(7, 11, 14)|var|float32
bop_2096 = relay.minimum(uop_2088.astype('uint16'), relay.reshape(var_2095.astype('uint16'), relay.shape_of(uop_2088))) # shape=(7, 11, 14)
func_439_call = mod.get_global_var('func_439')
func_442_call = mutated_mod.get_global_var('func_442')
var_2100 = relay.var("var_2100", dtype = "float64", shape = (24,))#candidate|2100|(24,)|var|float64
call_2099 = relay.TupleGetItem(func_439_call(relay.reshape(var_2100.astype('float64'), [1, 2, 12])), 1)
call_2101 = relay.TupleGetItem(func_442_call(relay.reshape(var_2100.astype('float64'), [1, 2, 12])), 1)
func_65_call = mod.get_global_var('func_65')
func_69_call = mutated_mod.get_global_var('func_69')
var_2104 = relay.var("var_2104", dtype = "float64", shape = ())#candidate|2104|()|var|float64
var_2105 = relay.var("var_2105", dtype = "float64", shape = (14,))#candidate|2105|(14,)|var|float64
call_2103 = relay.TupleGetItem(func_65_call(relay.reshape(var_2104.astype('float64'), []), relay.reshape(var_2105.astype('float64'), [2, 1, 7]), ), 0)
call_2106 = relay.TupleGetItem(func_69_call(relay.reshape(var_2104.astype('float64'), []), relay.reshape(var_2105.astype('float64'), [2, 1, 7]), ), 0)
uop_2110 = relay.cos(uop_2088.astype('float32')) # shape=(7, 11, 14)
bop_2132 = relay.right_shift(bop_2096.astype('int64'), relay.reshape(uop_2088.astype('int64'), relay.shape_of(bop_2096))) # shape=(7, 11, 14)
func_1902_call = mod.get_global_var('func_1902')
func_1906_call = mutated_mod.get_global_var('func_1906')
var_2172 = relay.var("var_2172", dtype = "int64", shape = (756,))#candidate|2172|(756,)|var|int64
call_2171 = relay.TupleGetItem(func_1902_call(relay.reshape(var_2172.astype('int64'), [12, 9, 7]), relay.reshape(var_2172.astype('int64'), [12, 9, 7]), ), 0)
call_2173 = relay.TupleGetItem(func_1906_call(relay.reshape(var_2172.astype('int64'), [12, 9, 7]), relay.reshape(var_2172.astype('int64'), [12, 9, 7]), ), 0)
func_1123_call = mod.get_global_var('func_1123')
func_1125_call = mutated_mod.get_global_var('func_1125')
var_2175 = relay.var("var_2175", dtype = "float32", shape = (55, 4))#candidate|2175|(55, 4)|var|float32
call_2174 = relay.TupleGetItem(func_1123_call(relay.reshape(var_2175.astype('float32'), [10, 2, 11])), 0)
call_2176 = relay.TupleGetItem(func_1125_call(relay.reshape(var_2175.astype('float32'), [10, 2, 11])), 0)
func_439_call = mod.get_global_var('func_439')
func_442_call = mutated_mod.get_global_var('func_442')
call_2177 = relay.TupleGetItem(func_439_call(relay.reshape(call_2099.astype('float64'), [1, 2, 12])), 1)
call_2178 = relay.TupleGetItem(func_442_call(relay.reshape(call_2099.astype('float64'), [1, 2, 12])), 1)
func_1123_call = mod.get_global_var('func_1123')
func_1125_call = mutated_mod.get_global_var('func_1125')
call_2198 = relay.TupleGetItem(func_1123_call(relay.reshape(var_2175.astype('float32'), [10, 2, 11])), 0)
call_2199 = relay.TupleGetItem(func_1125_call(relay.reshape(var_2175.astype('float32'), [10, 2, 11])), 0)
func_1755_call = mod.get_global_var('func_1755')
func_1759_call = mutated_mod.get_global_var('func_1759')
const_2202 = relay.const([-3.029531,4.331662,-1.512442,-7.895124,-0.217833,3.268586,-6.181750,0.360458,9.839660,-0.407317,3.790193,-5.384530,-8.449394,0.975451,9.929014,0.271363,-3.034714,-8.392133,-2.845171,3.869431,1.873613,-8.857772,-9.410732,9.988490,-5.216444,7.240942,-2.702498,3.999295,5.499760,-4.470776,-3.268315,-0.174702,1.097015,7.376448,1.836557,-1.403295,1.808452,-0.470862,-9.303229,3.029726,9.930546,-0.064213,-9.987370,-7.325021,-6.879227,-2.659842,-2.817529,-8.868918,7.834895,2.837309,-7.287799,7.556781,-9.160749,3.160012,-3.566025,-1.490677,6.035804,6.183341,-3.043369,1.264268,5.322319,9.467208,-8.680133,7.172935,7.144897,-2.658988,-1.249958,-6.549124,5.800834,6.825300,-1.761701,8.060696,9.327493,-8.987100,-6.205430,-6.305794,3.919370,3.195067,4.942882,-2.275101,4.040955,-4.730887,-1.199484,-3.640895,-5.129453,9.037214,1.529402,-9.231730,-1.692538,0.189175,-0.458866,-9.108058,9.326347,5.261533,-8.581278,-3.467836,-9.216127,8.617522,7.913959,-2.016223,4.001763,-3.552527,-0.469599,8.386979,7.165037,0.069223,6.753129,-9.863175,6.463271,2.540957,4.827235,3.416322,7.008886,-0.370514,9.063578,-4.671000,9.954455,1.141199,-3.833228,-8.795504,6.202237,8.685221,0.906864,-5.620840,-6.425582,-5.397869,3.522948,9.620766,-9.142013,3.348009,5.108365,-0.985906,-4.693224,-7.749944,7.927221,1.229181,8.170277,7.743521,-7.466258,1.460668,0.737180,-7.565756,-7.408438,5.914033,5.327309,-6.625301,6.186847,1.475855,-6.836162,-1.483059,-4.807521,2.395328,-5.023509,-7.706603,-8.732578,0.350716,6.168050,-4.363383,-9.812097,-8.510648,-7.620686,-1.616740,-7.462747,3.941953,4.155241,-8.331516,9.930972,7.010676,-8.736959,-6.901460,-6.735274,-8.707352,5.704771,8.924155,7.568405,-6.539315,-2.523238,8.548703,-2.806688,1.581179,-6.122342,-2.205600,9.289315,4.090282,6.662091,-1.193770,-3.220286,-7.556530,7.066682,0.836281,0.747847,-5.532364,-3.965262,-1.529942,7.586270,-9.140830,3.273496,0.966461,7.981410,-1.457101,8.251805,-0.515426,-2.664949,6.348906,-1.930543,-5.961586,-1.181446,9.265073,-0.520003,-5.562355,7.744896,3.641400,8.172468,-8.365425,3.500647,4.852624,4.745022,-5.942430,-0.334134,-5.473548,-5.633439,7.747621,2.255207,5.791797,-8.632625,4.703692,9.455186,0.421910,-8.838242,2.009152,-6.302128,-3.553990,-6.847428,5.820792,-5.652816,9.292004,-6.891150,-1.432595,0.113807,0.328014,9.101716,2.807989,1.322909,2.779823,-4.700707,-6.525077,6.239263,6.712812,7.449075,6.966429,-0.394302,9.090283,8.625643,-5.803159,2.317275,-6.239470,0.098449,5.517545,-5.056388,-2.815378,2.381923,-5.780409,2.582770,-2.007601,-3.874496,-3.745092,-8.574505,-1.079724,2.383109,-4.693444,-9.909709,4.097131,4.042417,8.192622,7.439758,-9.694813,-0.565097,-9.769673,-4.867296,-6.706989,-5.185868,3.368076,-1.791751,-8.487179,1.538592,5.712789,4.470515,0.464032,9.921972,7.927079,-7.458784,-2.803276,-8.033585,-8.693499,5.244862,2.725982,9.665611,2.573043,-9.250638,-9.229653,-8.181425,-2.975247,-9.098030,-6.630805,-9.247033,7.596343,-4.286145,7.326402,-8.436353,8.142405,-4.694929,9.418481,-3.928782,-4.480440,-7.685668,-9.883153,-7.832351,-0.545382,-4.699308,-0.637261,-1.760322,0.312494,7.671841,2.847476,-7.125074,-4.518674,-7.528289,-0.714186,-7.498809,1.706154,6.801459,4.922297,-7.129825,0.968863,6.291616,2.999354,1.867299,-3.664288,4.487051,-0.614967,-5.447974,2.260080,-2.596960,2.513532,-1.113494,8.094632,-3.236893,5.721134,-4.643402,0.824473,-8.689336,-6.399062,7.601488,4.789537,-2.503723,-8.990101,-8.279003,1.782164,-4.841211,8.336742,-4.169713,-2.520962,8.079544,1.818399,-7.589128,0.768015,-4.946446,-2.428222,-0.374545,-4.516756,6.048950,-2.243753,-4.344519,-1.667974,-2.821201,8.956284,-6.127860,-8.218295,8.488322,-7.895552,-5.239511,0.115333,6.892238,3.259445,7.383663,-4.497985,-4.749296,-5.040743,1.569785,7.670773,-3.069777,-0.591168,2.930794,-3.037780,-3.278620,-1.165559,2.662349,6.869349,-3.003492,-4.783258,3.712816,-8.311086,8.810859,-2.386429,-9.276682,6.578979,9.736314,7.901924,-5.604202,1.952874,-1.499554,3.071412,9.686650,-5.493843,4.985519,1.119202,-5.037051,8.179135,-7.179476,-3.748651,2.941474,1.016150,0.291919,0.251486,6.476201,-4.166400,0.405563,8.652803,0.294516,-4.157710,-8.320037,5.813326,9.380590,8.888249,-9.299419,-2.956117,1.200257,-3.668558,0.233843,-2.534683,5.043406,-6.398727,-3.946892,9.607410,-1.105887,4.556532,-3.537591,5.900273,6.435654,1.118028,-9.611268,4.556502,-3.157969,-6.656300,-1.062485,-9.530860,1.672664,-7.146895,-7.421031,8.570896,8.641729,2.968370,3.001153,0.689734,0.162310,4.267050,6.618583,2.602244,-6.004275,0.764817,-7.957631,-1.753351,-1.586784,-8.550393,6.476956,6.117932,-1.939549,-3.477778,5.663345,-8.432054,-7.487038,-6.557461,-8.507287,5.896364,1.396189,0.923583,-9.755292,-1.432734,-9.086015,9.033052,-1.901379,-0.791076,-0.872046,9.156393,0.374877,-0.940367,1.116458,1.249120,8.082106,-6.543546,7.559666,-7.876759,-5.588934,-7.609280,6.594558,-5.927629,2.402382,-5.275955,4.261581,7.974032,8.054481,-7.319424,2.746056,8.039079,9.481560,0.076349,3.842966,-6.699628,-0.260527,5.190096,4.139909,-1.198741,-2.576719,-2.364450,-7.454068,-9.780964,7.429877,-5.455681,-1.434505,2.168495,3.782141,-9.539488,9.038325,-3.472023,-7.247614,7.943613,9.352081,-1.956593,5.029784,5.037503,-3.426942,3.039352,2.636140,-3.895628,7.613550,4.780967,8.570765,-6.088659,-7.536925,-3.982148,-3.593798,-9.898076,3.591572,9.674381,5.744051,-1.657542,8.443691,-5.637200,8.352846,-7.827201,-7.696730,-2.263816,-0.412947,-9.854806,4.751097,0.723045,1.729773,-0.283975,-3.826606,9.414860,-5.479424,7.583474,6.826086,-6.659771,5.404836,-9.666338,-8.512280,9.579758,0.118596,-6.518154,-1.007953,-1.393773,8.117587,4.426138,-8.808140,-4.301227,-1.158006,-2.294202,9.762876,0.762459,-6.893071,-5.972147,-3.048857,5.151698,-0.085950,-0.173772,9.570306,-8.322910,8.143512,-2.264783,-5.890056,4.493460,-9.559794,-6.176151,-8.196767,-9.895147,6.037147,-6.863518,-5.767363,5.869230,4.125778,-0.855110,-4.602010,8.366115,-3.865127,-9.500939], dtype = "float32")#candidate|2202|(616,)|const|float32
call_2201 = relay.TupleGetItem(func_1755_call(relay.reshape(const_2202.astype('float32'), [8, 11, 7]), relay.reshape(const_2202.astype('float32'), [8, 11, 7]), ), 0)
call_2203 = relay.TupleGetItem(func_1759_call(relay.reshape(const_2202.astype('float32'), [8, 11, 7]), relay.reshape(const_2202.astype('float32'), [8, 11, 7]), ), 0)
func_1472_call = mod.get_global_var('func_1472')
func_1479_call = mutated_mod.get_global_var('func_1479')
const_2205 = relay.const([[-6.670513],[-5.704431],[9.391175],[-8.217831],[-0.250275],[-6.316075],[-7.434042],[2.382209],[7.385867],[-7.463834],[6.547543],[-1.330489],[-8.804104],[-4.398220],[5.616387],[5.314091],[-7.761159],[9.355827],[8.984071],[4.119364],[6.752964],[7.289111],[-4.908045],[-8.732335],[8.037526],[-5.362758],[-2.530381],[-4.364444],[8.633931],[-0.842508],[0.919097],[-4.788292],[3.202415],[4.500485],[3.011894],[7.142786],[-6.037521],[6.262927],[7.470232],[-0.975701],[-2.365547],[4.837904],[-7.136490],[4.396087],[6.815990],[-6.577534],[6.637264],[-6.479586],[-6.022371],[0.757243],[-2.564941],[-7.486705],[-6.656658],[7.095863],[0.896707],[-4.815941],[-8.962076],[2.142216],[9.523118],[-8.443708],[-9.207178],[-7.128911],[-3.447713],[-7.114503],[-8.814032],[-3.955488]], dtype = "float64")#candidate|2205|(66, 1)|const|float64
const_2206 = relay.const([-9.434139,4.058211,-8.812121,-9.048332,2.951050,8.707432,1.170726,-2.846402,9.969229,2.259704,2.244046,-9.512820,-7.814537,5.272191,9.918649,0.779571,5.132029,1.977635,-3.286175,-6.261160,-0.153857,8.233533,8.486782,3.671150,-6.370206,3.323466,5.119745,2.812291,-2.403042,1.601131,-4.350415,5.422152,9.237551,7.885880,1.885271,-2.677829,-8.285186,2.367055,5.707717,-1.188587,9.433666,-6.092396,0.765679,9.407926,-2.018458,4.689495,0.613379,-6.926023,2.282557,-5.979247,-4.676405,-5.737579,-4.740668,-2.214526,8.926722,-3.011175,-9.642655,1.500003,-8.588623,-1.397417,2.455334,6.034829,-5.689873,1.622739,-1.585674,-0.160778,-6.067151,3.179717,-2.634721,4.396625,-6.972333,3.730604,-2.809925,-9.398840,6.421457,3.193882,0.157630,3.533869,0.381975,3.426215,3.099174,-1.685594,2.039316,-0.307503,1.927975,9.984591,0.773946,7.288316,3.588068,9.430182,-5.651224,9.362400,8.246825,3.620221,1.082266,-2.937447,9.384208,4.736117,-3.130515,-0.889776,1.717382,5.024561,-8.988969,-8.047241,6.520225,-0.218405,-8.777865,2.279528,8.185612,-9.575356,6.773225,7.653794,4.332917,9.854704,-3.456888,-2.183925,3.415949,9.324565,-8.880466,3.600737,9.417545,8.855076,8.999773,0.900664,4.926708,-7.501337,6.776284,0.187717,-4.892551,-8.216330,5.299359,-9.578165,2.020213,-3.568932,8.753690,4.720181,-2.833591,-1.291634,2.879128,-6.198436,-1.825648,0.681490,-7.164552,-2.475613,-5.137194,0.226726,9.371050,-7.289557,7.622290,-7.876513,8.933180,0.495011,-6.778404,5.638736,-1.662308,4.643825,-9.653339,-7.537431,0.869537,3.420875,3.182598,7.994878,-9.616041,0.285068,3.006314,-7.263577,7.627080,-0.213982,-1.120438,4.869071,9.860264,0.807583,-8.209371,-3.831647,-8.639760,2.012865,-1.005085,7.572311,-5.459449,6.651228,-3.935168,-7.086870,3.791685,-5.115220,0.516271,-8.258983,-3.100613,-9.161624,4.095946,-7.035720,7.085441,-6.251217,2.322925,-3.014094,-9.407025,4.234660,-9.062603,2.290982,-4.947671,3.722473,6.489087,-1.465989,3.643934,-2.076756,5.739489,-0.598279,-3.134368,-2.617069,-2.295750,-1.183006,-2.209734,-7.127450,7.025819,3.870098,9.079603,2.007604,-2.131203,-6.808446,9.510525,4.946180,3.476910,1.587542,-0.803079,3.016867,-8.705399,9.052930,8.803361,6.584158,7.684213,-8.496568,9.354967,-8.387857,6.935795,3.001761,1.594759,4.321693,3.633746,9.586430,0.172033,-5.225017,-5.337389,-8.895450,2.027790,-8.582898,-5.215042,3.433024,9.402890,-6.790070,-2.167388,6.468248,-9.224106,6.049986,4.652113,4.664413,4.158842,-5.973805,0.540394,-0.164245,4.710946,-5.397754,4.805912,3.758795,0.795529,-1.221731,-2.552822,3.641507,-0.205613,-3.353856,1.357986,-0.052445,1.636775,-2.360741,-8.521260,-9.183285,-9.012430,2.151459,-6.741791,-8.015918,-8.663664,-6.353327,-7.043343,0.192874,-7.024083,-3.646247,8.631299,-5.876096,9.430463,-6.129442,5.978493,8.204932,3.299804,-4.365114,-9.060064,0.443685,6.928491,7.817450,7.898520,-5.861936,-9.744843,-0.546680,-2.458977,-0.667907,2.076268,0.742403,4.586569,-8.040001,6.037976,3.009763,3.588872,6.791530,-4.907816,-8.807245,6.364846,4.571400,0.289983,-5.205315,-3.071336,-4.241145,3.000240,8.770153,-0.451012,8.891909,-2.063125,6.729155,7.051551,-7.790064,4.787091,2.149732,6.901566,-4.156965,-0.878325,-2.191446,-6.831624,6.694854,-0.676880,-1.148177,-0.276659,5.699350,-0.231239,9.428792,6.973293,5.945334,-5.933523,8.129369,9.535016,4.421921,-0.675240,4.797218,-0.378908,-7.197426,3.905145,3.477178,-2.772097,-2.827314,-0.600249,-3.304430,7.569404,-7.331230,4.687447,8.966518,-9.601919,-3.662054,5.412360,2.587595,-1.619606,-0.841994,-4.467991,-6.506459,-3.623594,-2.831536,-4.086169,-4.614491,-7.274994,3.592987,4.202020,0.152931,9.655467,-8.149441,4.789677,-0.117451,-0.510615,4.330655,9.199796,6.054250,-0.356828,-7.009215,6.151296,-0.028232,7.196781,1.470306,-1.226500,-3.856983,-9.920620,-7.442178,-3.205723,-6.483085,-1.865728,-0.779372,9.169994,2.012860,0.047026,-4.622601,9.636358,-3.967231,-7.503718,4.626833,-6.720605,4.594209,-1.946150,-6.417137,-0.168064,1.029921,-2.230549,-9.423532,-7.242624,6.165142,3.162847,-8.140359,-4.809324,-3.475937,-2.804706,-6.651890,1.777291,8.974366,1.364373,7.611365,-0.884249,-5.820901,-9.110527,-1.035162,7.695993,-2.402280,4.301764,5.357435,2.906160,5.193622,3.964524,0.514073,7.007112,-6.647864,-4.055649,-2.657142,9.791643,-2.827786,-1.946874,-5.172815,-6.021859,-9.549407,2.627869,-0.780843,0.832777,-7.558542,1.010668,-0.295061,-8.048997,3.261174,-5.323037,-6.725658,3.988410,2.366988,1.480950,1.246930,-1.807830,-4.457348,6.493079,-4.731506,-1.567382,8.344755,-9.299176,-9.926582,-7.138341,-8.366766,1.568392,-5.237570,9.452294,-5.331534,1.568576,-3.162347,-4.635296,3.801618,3.786894,-9.512823,-4.430776,8.176994,8.110860,-1.019813,-1.668985,-5.140218,8.180349,-1.946887,-2.419335,0.532260,-3.460531,6.941539,-5.756084,-3.885787,0.852038,6.424737,-0.933846,-8.352083,-0.761302,5.193714,8.429675,3.875726,9.399543,9.079664,-5.967784,6.522346,0.197694,9.670298,-2.261131,0.043455,7.218193,9.334792,-3.428468,4.226712,-2.618450,5.211825,6.903062,-6.467945,-9.292367,-4.163761,0.608666,5.724385,9.559961,-6.023013,-5.747547,4.936816,9.469474,6.261440,-8.670735,-2.525833,6.032341,0.232280,-8.412814,5.659414,2.528917,-8.240437,-1.662312,7.951753,-6.425788,8.408221,-7.997378,-6.333097,1.107400,5.360532,4.473544,1.735305,1.108261,3.322262,-9.147085,-2.618147,-3.413965,-2.221021,-5.639144,-7.579932,-9.834619,3.901102,-8.562367,-8.775962,3.552485,-6.387632,0.579668,6.811728,-7.137861,6.034705,-4.568198,-6.274818,-2.850875,3.135366,8.227375,6.077927,5.708295,-5.241839,7.445227,8.706260,-9.104787,3.175540,8.051900,-9.279957,1.856835,5.434651,5.413325,-9.412903,-0.629639,-5.826376,-3.497952,6.507931,-1.169065,4.986948,-5.604247,-0.291059,-9.143869,5.791638,-5.787309,7.672543,6.143707,4.494682,3.158446,-1.236896,5.251609,1.613750,-3.552371,0.428855,-3.394867,-3.530350,-7.067707,6.611411,-0.658961,-6.950046,-1.050197,-6.255616,-5.245027,-9.232049,-4.464430,-0.193878,2.728699,2.303223,-4.737519,-9.478281,0.148429,-8.170543,5.284148,0.258255,-7.061827,-6.946780,5.402147,-9.114802,6.910294,8.195502,7.286813,1.064329,5.968568,-0.685676,-3.059016,-3.434995,-2.849748,8.806868,-0.147380,4.894366,-4.280177,9.072324,3.876351,-1.177981,-5.176942,-6.177063,0.184347,-9.003995,-8.915608,-6.849021,8.452107,-7.554179,0.854326,1.895553,-4.160824,-9.806106,1.871847,6.395245,8.265347,4.515786,9.719294,7.329539,6.479313,-8.677315,4.386383,-6.333466,6.403380,-8.224774,-2.219980,1.868757,-6.310942,-0.389427,8.566494,-3.737996,0.199722,2.818477,9.866909,7.944537,-2.733884,-6.974380,-5.604666,8.822337,-9.291036,9.542215,9.896766,4.470914,-5.373989,3.874204,5.520092,9.409942,5.977596,-1.063833,7.993642,-0.875929,5.796976,1.032765,3.711264,7.179393,-8.409624,8.606662,7.006748,-2.360867,-1.815816,-6.537165,9.768180,-1.997790,-3.517383,-4.357185,-6.355326,8.700720,8.377030,3.875654,4.130820,-7.194612,9.553462,-8.886909,4.355002,6.371734,-5.894076,1.333046,5.799408,7.375621,-3.258202,2.963261,-4.578266,-9.012008,-7.296582,-9.013841,6.229554,4.202296,-2.263570,4.578475,-9.819800,5.246833,-4.836891,7.142198,-7.887345,3.917108,-2.889278,2.835626,-6.757522,-5.303821,-3.961652,-8.705095,-8.150628,-1.838477,7.042040,-6.768307,-4.143089,4.413501,-2.437858,-9.560989,1.956617,-7.152986,8.407323,-9.797529,1.099224,-2.625390,5.708318,3.893161,-4.628760,5.784540,-7.381323,-9.656130,5.953833,0.386423,-5.419981,8.762865,-5.460474,9.931664,6.620285,3.078443,-3.432631,-6.085896,-3.980526,5.082327,-3.836837,1.738512,-8.324763,3.108311,8.028191,-9.240477,3.074758,8.194923,7.246775,0.980705,-9.288683,4.754259,-6.035194,-7.364874,-8.403751,8.436909,-3.547560,1.606048,-6.647824,4.605141,7.782913,0.706934,6.844184,-0.144375,8.647065,3.242636,-9.777827,4.653717,6.379101,-3.763308,7.447780,-4.641773,-9.237063,6.650288,-9.826620,-4.987105,-5.499085,-2.724657,-6.808773,-8.166750,-0.889352,5.259507,-8.330675,7.310388,-3.328395,1.084419,-7.635638,-0.519882,4.442362,1.645289,-4.547298,-5.279105,-1.509257,-4.214364,6.104223,-6.601185,-5.564961,7.811292,-8.244254,-9.017016,-1.837209,6.255215,1.436759,6.750469,9.382815,5.901394,-7.559875,-5.868292,-3.357614,0.926238,6.991215,-1.035633,6.241961,-2.889416,-5.287014,-5.884541,4.936001,5.441168,8.918169,3.587760,-0.468012,-2.062136,-0.739061,5.441265,0.811011,7.819924,-3.328983,7.320344,4.236193,-5.719475,-8.029518,-9.149705,-3.428965,2.235726,-5.824164,-5.537102,2.636779,1.124649,2.146804,-6.585367,8.034399,4.879048,1.944463,7.929951,-6.102994,4.629184,-9.739119,-3.218584,6.826893,5.932458,9.410345,-0.445897,-6.245789,-3.394731,-2.150458,9.450465,-6.496526,-8.838666,5.429871,-6.088640,0.228645,-1.464494,6.890691,-1.978935,-6.717202,-3.269114,0.451719,-8.155043,-0.143724,4.610403,-6.183236,-0.944433,8.488161,-5.640261,-9.481076,-4.993257,-2.633214,-2.684232,-5.854271,8.222722,-9.052401,-4.041369,-3.803221,4.555733,0.022889,-6.410946,8.175727,4.040682,8.789348,8.408989,-0.581916,5.010658,7.001823,9.685265,-3.147529,-7.965969,-0.624850,-0.974426,-1.301536,-2.192539,-1.032328,1.796065,4.594360,-1.152685,-6.245559,3.752924,6.833863,-7.315594,-2.931957,-3.123045,-3.835437,1.494768,1.218907,9.539986,5.945730,-4.056167,-5.808359,-8.436960,-1.838718,-1.821087,-3.825369,5.770922,-3.782483,-8.389546,3.437820,4.303021,-5.988873,6.197984,-0.902572,8.334377,-6.809112,4.736829,6.355527,-1.301324,-2.067271,-2.299371,-5.617983,8.802052,1.112897,5.949471,-2.713962,-7.613294,9.662595,1.978940,1.105507,-9.841245,-2.690276,-1.229120,6.786945,5.909843,-2.670573,-9.591657,7.791031,9.950698,-4.300133,-1.855977,-0.229371,3.136814,-5.672304,2.684528,0.183850,1.508677,-9.198992,9.168770,-2.090873,1.207471,-3.323748,-4.071025,8.301493,4.601060,-7.165458,6.067118,-8.690875,7.432532,4.197748,-9.636322,-8.320954,-2.249294,-3.878233,-3.869247,-6.006867,1.651157,9.960125,-8.858964,8.219931,-6.404810,7.202769,-2.434857,-0.487700,-2.185629,3.738719,-8.865264,-9.226099,-1.664152,-0.340752,-9.893849,-9.385667,-0.828624,1.133572,3.458623,-6.064239,-2.252067,7.218295,7.844423,-8.914258,0.325583,4.238762,7.986347,-2.504160,-5.512702,-0.110695,0.877282,-4.136685,5.467439,-6.022524,-3.014221,-2.906442,4.370934,-2.144399,-3.012091], dtype = "float64")#candidate|2206|(1056,)|const|float64
call_2204 = relay.TupleGetItem(func_1472_call(relay.reshape(const_2205.astype('float64'), [1, 6, 11]), relay.reshape(var_2104.astype('float64'), []), relay.reshape(call_2103.astype('float64'), [14, 1]), relay.reshape(var_2100.astype('float64'), [6, 4]), relay.reshape(const_2206.astype('float64'), [16, 6, 11]), relay.reshape(var_2175.astype('float32'), [220,]), ), 2)
call_2207 = relay.TupleGetItem(func_1479_call(relay.reshape(const_2205.astype('float64'), [1, 6, 11]), relay.reshape(var_2104.astype('float64'), []), relay.reshape(call_2103.astype('float64'), [14, 1]), relay.reshape(var_2100.astype('float64'), [6, 4]), relay.reshape(const_2206.astype('float64'), [16, 6, 11]), relay.reshape(var_2175.astype('float32'), [220,]), ), 2)
output = relay.Tuple([call_2099,var_2100,call_2103,var_2104,var_2105,uop_2110,bop_2132,call_2171,var_2172,call_2174,var_2175,call_2177,call_2198,call_2201,const_2202,call_2204,const_2205,const_2206,])
output2 = relay.Tuple([call_2101,var_2100,call_2106,var_2104,var_2105,uop_2110,bop_2132,call_2173,var_2172,call_2176,var_2175,call_2178,call_2199,call_2203,const_2202,call_2207,const_2205,const_2206,])
func_2210 = relay.Function([var_2087,var_2095,var_2100,var_2104,var_2105,var_2172,var_2175,], output)
mod['func_2210'] = func_2210
mod = relay.transform.InferType()(mod)
var_2211 = relay.var("var_2211", dtype = "float32", shape = (7, 11, 14))#candidate|2211|(7, 11, 14)|var|float32
var_2212 = relay.var("var_2212", dtype = "float32", shape = (7, 11, 14))#candidate|2212|(7, 11, 14)|var|float32
var_2213 = relay.var("var_2213", dtype = "float64", shape = (24,))#candidate|2213|(24,)|var|float64
var_2214 = relay.var("var_2214", dtype = "float64", shape = ())#candidate|2214|()|var|float64
var_2215 = relay.var("var_2215", dtype = "float64", shape = (14,))#candidate|2215|(14,)|var|float64
var_2216 = relay.var("var_2216", dtype = "int64", shape = (756,))#candidate|2216|(756,)|var|int64
var_2217 = relay.var("var_2217", dtype = "float32", shape = (55, 4))#candidate|2217|(55, 4)|var|float32
output = func_2210(var_2211,var_2212,var_2213,var_2214,var_2215,var_2216,var_2217,)
func_2218 = relay.Function([var_2211,var_2212,var_2213,var_2214,var_2215,var_2216,var_2217,], output)
mutated_mod['func_2218'] = func_2218
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2485 = relay.var("var_2485", dtype = "float32", shape = (4, 4, 2))#candidate|2485|(4, 4, 2)|var|float32
uop_2486 = relay.cosh(var_2485.astype('float32')) # shape=(4, 4, 2)
func_2210_call = mod.get_global_var('func_2210')
func_2218_call = mutated_mod.get_global_var('func_2218')
var_2493 = relay.var("var_2493", dtype = "float32", shape = (1078,))#candidate|2493|(1078,)|var|float32
var_2494 = relay.var("var_2494", dtype = "float64", shape = (1, 24))#candidate|2494|(1, 24)|var|float64
const_2495 = relay.const(1.399445, dtype = "float64")#candidate|2495|()|const|float64
var_2496 = relay.var("var_2496", dtype = "float64", shape = (14,))#candidate|2496|(14,)|var|float64
var_2497 = relay.var("var_2497", dtype = "int64", shape = (756,))#candidate|2497|(756,)|var|int64
var_2498 = relay.var("var_2498", dtype = "float32", shape = (220,))#candidate|2498|(220,)|var|float32
call_2492 = relay.TupleGetItem(func_2210_call(relay.reshape(var_2493.astype('float32'), [7, 11, 14]), relay.reshape(var_2493.astype('float32'), [7, 11, 14]), relay.reshape(var_2494.astype('float64'), [24,]), relay.reshape(const_2495.astype('float64'), []), relay.reshape(var_2496.astype('float64'), [14,]), relay.reshape(var_2497.astype('int64'), [756,]), relay.reshape(var_2498.astype('float32'), [55, 4]), ), 17)
call_2499 = relay.TupleGetItem(func_2218_call(relay.reshape(var_2493.astype('float32'), [7, 11, 14]), relay.reshape(var_2493.astype('float32'), [7, 11, 14]), relay.reshape(var_2494.astype('float64'), [24,]), relay.reshape(const_2495.astype('float64'), []), relay.reshape(var_2496.astype('float64'), [14,]), relay.reshape(var_2497.astype('int64'), [756,]), relay.reshape(var_2498.astype('float32'), [55, 4]), ), 17)
bop_2515 = relay.add(uop_2486.astype('float64'), const_2495.astype('float64')) # shape=(4, 4, 2)
func_1123_call = mod.get_global_var('func_1123')
func_1125_call = mutated_mod.get_global_var('func_1125')
call_2520 = relay.TupleGetItem(func_1123_call(relay.reshape(var_2498.astype('float32'), [10, 2, 11])), 0)
call_2521 = relay.TupleGetItem(func_1125_call(relay.reshape(var_2498.astype('float32'), [10, 2, 11])), 0)
func_1123_call = mod.get_global_var('func_1123')
func_1125_call = mutated_mod.get_global_var('func_1125')
call_2540 = relay.TupleGetItem(func_1123_call(relay.reshape(var_2498.astype('float32'), [10, 2, 11])), 0)
call_2541 = relay.TupleGetItem(func_1125_call(relay.reshape(var_2498.astype('float32'), [10, 2, 11])), 0)
output = relay.Tuple([call_2492,var_2493,var_2494,var_2496,var_2497,var_2498,bop_2515,call_2520,call_2540,])
output2 = relay.Tuple([call_2499,var_2493,var_2494,var_2496,var_2497,var_2498,bop_2515,call_2521,call_2541,])
func_2548 = relay.Function([var_2485,var_2493,var_2494,var_2496,var_2497,var_2498,], output)
mod['func_2548'] = func_2548
mod = relay.transform.InferType()(mod)
var_2549 = relay.var("var_2549", dtype = "float32", shape = (4, 4, 2))#candidate|2549|(4, 4, 2)|var|float32
var_2550 = relay.var("var_2550", dtype = "float32", shape = (1078,))#candidate|2550|(1078,)|var|float32
var_2551 = relay.var("var_2551", dtype = "float64", shape = (1, 24))#candidate|2551|(1, 24)|var|float64
var_2552 = relay.var("var_2552", dtype = "float64", shape = (14,))#candidate|2552|(14,)|var|float64
var_2553 = relay.var("var_2553", dtype = "int64", shape = (756,))#candidate|2553|(756,)|var|int64
var_2554 = relay.var("var_2554", dtype = "float32", shape = (220,))#candidate|2554|(220,)|var|float32
output = func_2548(var_2549,var_2550,var_2551,var_2552,var_2553,var_2554,)
func_2555 = relay.Function([var_2549,var_2550,var_2551,var_2552,var_2553,var_2554,], output)
mutated_mod['func_2555'] = func_2555
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2797 = relay.var("var_2797", dtype = "float64", shape = (7, 13, 9))#candidate|2797|(7, 13, 9)|var|float64
uop_2798 = relay.sqrt(var_2797.astype('float64')) # shape=(7, 13, 9)
uop_2800 = relay.cosh(uop_2798.astype('float64')) # shape=(7, 13, 9)
uop_2811 = relay.asin(uop_2800.astype('float32')) # shape=(7, 13, 9)
output = uop_2811
output2 = uop_2811
func_2829 = relay.Function([var_2797,], output)
mod['func_2829'] = func_2829
mod = relay.transform.InferType()(mod)
mutated_mod['func_2829'] = func_2829
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2830 = relay.var("var_2830", dtype = "float64", shape = (7, 13, 9))#candidate|2830|(7, 13, 9)|var|float64
func_2829_call = mutated_mod.get_global_var('func_2829')
call_2831 = func_2829_call(var_2830)
output = call_2831
func_2832 = relay.Function([var_2830], output)
mutated_mod['func_2832'] = func_2832
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3139 = relay.var("var_3139", dtype = "float64", shape = (14, 8, 16))#candidate|3139|(14, 8, 16)|var|float64
uop_3140 = relay.acos(var_3139.astype('float64')) # shape=(14, 8, 16)
bop_3144 = relay.mod(uop_3140.astype('float64'), relay.reshape(var_3139.astype('float64'), relay.shape_of(uop_3140))) # shape=(14, 8, 16)
output = bop_3144
output2 = bop_3144
func_3153 = relay.Function([var_3139,], output)
mod['func_3153'] = func_3153
mod = relay.transform.InferType()(mod)
mutated_mod['func_3153'] = func_3153
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3154 = relay.var("var_3154", dtype = "float64", shape = (14, 8, 16))#candidate|3154|(14, 8, 16)|var|float64
func_3153_call = mutated_mod.get_global_var('func_3153')
call_3155 = func_3153_call(var_3154)
output = call_3155
func_3156 = relay.Function([var_3154], output)
mutated_mod['func_3156'] = func_3156
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3164 = relay.var("var_3164", dtype = "int64", shape = (2, 14, 3))#candidate|3164|(2, 14, 3)|var|int64
var_3165 = relay.var("var_3165", dtype = "int64", shape = (2, 14, 3))#candidate|3165|(2, 14, 3)|var|int64
bop_3166 = relay.left_shift(var_3164.astype('int64'), relay.reshape(var_3165.astype('int64'), relay.shape_of(var_3164))) # shape=(2, 14, 3)
output = bop_3166
output2 = bop_3166
func_3172 = relay.Function([var_3164,var_3165,], output)
mod['func_3172'] = func_3172
mod = relay.transform.InferType()(mod)
var_3173 = relay.var("var_3173", dtype = "int64", shape = (2, 14, 3))#candidate|3173|(2, 14, 3)|var|int64
var_3174 = relay.var("var_3174", dtype = "int64", shape = (2, 14, 3))#candidate|3174|(2, 14, 3)|var|int64
output = func_3172(var_3173,var_3174,)
func_3175 = relay.Function([var_3173,var_3174,], output)
mutated_mod['func_3175'] = func_3175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3389 = relay.var("var_3389", dtype = "float64", shape = (16, 10, 8))#candidate|3389|(16, 10, 8)|var|float64
uop_3390 = relay.cos(var_3389.astype('float64')) # shape=(16, 10, 8)
func_439_call = mod.get_global_var('func_439')
func_442_call = mutated_mod.get_global_var('func_442')
const_3402 = relay.const([[-6.625145,3.773642],[2.691746,-3.516082],[1.323295,-5.006493],[5.598912,-2.527085],[5.546402,4.513643],[5.582344,-2.328313],[-7.997441,3.794885],[3.525619,-4.103400],[8.821863,2.797421],[5.794317,5.663586],[1.728166,-2.277880],[-0.080346,2.441540]], dtype = "float64")#candidate|3402|(12, 2)|const|float64
call_3401 = relay.TupleGetItem(func_439_call(relay.reshape(const_3402.astype('float64'), [1, 2, 12])), 1)
call_3403 = relay.TupleGetItem(func_442_call(relay.reshape(const_3402.astype('float64'), [1, 2, 12])), 1)
func_439_call = mod.get_global_var('func_439')
func_442_call = mutated_mod.get_global_var('func_442')
call_3405 = relay.TupleGetItem(func_439_call(relay.reshape(call_3401.astype('float64'), [1, 2, 12])), 0)
call_3406 = relay.TupleGetItem(func_442_call(relay.reshape(call_3401.astype('float64'), [1, 2, 12])), 0)
bop_3416 = relay.bitwise_xor(uop_3390.astype('int16'), relay.reshape(var_3389.astype('int16'), relay.shape_of(uop_3390))) # shape=(16, 10, 8)
func_1472_call = mod.get_global_var('func_1472')
func_1479_call = mutated_mod.get_global_var('func_1479')
var_3432 = relay.var("var_3432", dtype = "float64", shape = (66,))#candidate|3432|(66,)|var|float64
var_3433 = relay.var("var_3433", dtype = "float64", shape = ())#candidate|3433|()|var|float64
var_3434 = relay.var("var_3434", dtype = "float64", shape = (14,))#candidate|3434|(14,)|var|float64
var_3435 = relay.var("var_3435", dtype = "float64", shape = (1056,))#candidate|3435|(1056,)|var|float64
var_3436 = relay.var("var_3436", dtype = "float32", shape = (1, 220))#candidate|3436|(1, 220)|var|float32
call_3431 = relay.TupleGetItem(func_1472_call(relay.reshape(var_3432.astype('float64'), [1, 6, 11]), relay.reshape(var_3433.astype('float64'), []), relay.reshape(var_3434.astype('float64'), [14, 1]), relay.reshape(call_3401.astype('float64'), [6, 4]), relay.reshape(var_3435.astype('float64'), [16, 6, 11]), relay.reshape(var_3436.astype('float32'), [220,]), ), 6)
call_3437 = relay.TupleGetItem(func_1479_call(relay.reshape(var_3432.astype('float64'), [1, 6, 11]), relay.reshape(var_3433.astype('float64'), []), relay.reshape(var_3434.astype('float64'), [14, 1]), relay.reshape(call_3401.astype('float64'), [6, 4]), relay.reshape(var_3435.astype('float64'), [16, 6, 11]), relay.reshape(var_3436.astype('float32'), [220,]), ), 6)
func_1755_call = mod.get_global_var('func_1755')
func_1759_call = mutated_mod.get_global_var('func_1759')
const_3442 = relay.const([[0.458139,9.838004],[-4.059186,-6.775744],[1.873976,2.376461],[7.299567,-7.673930],[3.427129,-9.653718],[-3.479220,-4.401618],[-1.096023,7.744559],[1.871783,9.917689],[3.797918,5.965791],[-9.857367,2.243284],[-2.249489,6.179664],[-9.228514,0.352475],[9.557655,9.972823],[-6.314353,-2.121595],[-8.321068,0.344535],[-3.402313,-5.713439],[0.307915,6.712030],[0.618302,-4.752205],[3.479992,0.707261],[4.553096,-2.310118],[-9.351273,-6.747967],[4.150043,7.249149],[-4.673913,1.360029],[-7.046404,-6.551748],[9.776591,1.697148],[-6.902769,-7.621487],[3.966912,-6.676573],[-4.159954,7.060177],[-3.561782,3.616190],[-1.690967,2.395818],[-7.867927,9.923983],[-0.814855,-2.155538],[9.303322,-9.428116],[8.021334,-6.413020],[-6.346909,1.948474],[5.919184,-8.653251],[-8.441621,8.994812],[-6.883955,2.776549],[8.639465,9.332595],[-3.939429,-4.812128],[6.901893,-8.154823],[7.403658,-2.383902],[8.616951,1.176628],[-7.613472,-0.738918],[7.876990,-8.730833],[3.038622,-1.705852],[-6.528505,-5.664182],[-6.356855,7.587142],[-9.727709,-2.050790],[-7.387914,8.582371],[0.587820,-9.863146],[-6.438677,-8.809146],[-5.734750,-6.703269],[9.007867,-6.069890],[-4.878197,-3.757953],[5.962245,6.085277],[1.713603,-5.980856],[-6.982563,8.561849],[-5.596825,3.126218],[0.568019,-8.123610],[-7.469013,5.642676],[-5.704096,-1.636936],[-9.161633,9.762194],[-2.959011,2.360491],[-0.121470,3.448835],[-0.350118,-2.121971],[-4.524574,8.063359],[-0.612213,0.728430],[-5.299549,-4.908962],[-5.828403,-1.160630],[1.137983,2.313563],[-2.966647,-9.533601],[-7.433828,4.032842],[-9.277065,9.069017],[3.845326,-1.654533],[-7.192110,0.856919],[-8.223966,5.154395],[-3.403761,-1.352114],[3.765489,0.292377],[-9.883832,0.331794],[2.235672,7.847279],[-1.945536,-5.664011],[-2.050864,9.979972],[-5.842670,5.313369],[-0.957551,8.006608],[-3.141033,0.325526],[1.887821,5.005099],[-2.140237,-4.817313],[1.760012,7.471425],[-3.060555,-0.068675],[3.407960,-1.320685],[-4.934271,-0.584860],[-9.936292,1.806524],[8.362024,6.347069],[4.427013,1.161284],[7.035223,8.591636],[7.148411,-1.616555],[-9.359156,-5.465645],[2.984530,0.695002],[6.877346,-1.698780],[4.199650,-4.687877],[-9.487285,-1.610793],[4.443022,3.820721],[9.124422,7.703763],[-1.397302,3.605126],[-8.620795,-8.512851],[-8.796883,3.210897],[0.736450,5.647096],[0.324899,-3.382728],[8.335713,2.074780],[-6.241960,8.658113],[8.067142,-4.992913],[9.453656,-7.132628],[-1.339222,1.202501],[-5.212934,-7.847705],[-9.966622,5.141851],[4.522918,-1.357475],[-3.336421,3.309537],[-8.676320,-2.494316],[-5.781551,9.079992],[-8.177243,6.698121],[-0.989423,1.510771],[-8.752743,5.294055],[-8.296137,-1.321105],[-5.013750,-8.618354],[2.847310,6.845466],[4.341549,0.647627],[-7.317411,0.282468],[1.086002,1.918135],[1.904767,-5.176308],[-6.088309,-4.908098],[-9.372279,5.611956],[1.658179,7.661532],[9.183410,8.130137],[2.231645,-2.141052],[0.684286,-0.114517],[3.647315,3.482405],[7.358557,-2.343396],[5.990876,-0.668050],[3.170363,-5.760329],[1.494331,6.827555],[-0.335997,6.793144],[-4.753169,9.157929],[5.547292,-8.601581],[-6.243691,7.893122],[0.455632,0.281570],[3.114161,4.095385],[9.002474,6.831760],[8.263054,-3.098404],[6.205895,6.093672],[6.389104,-6.133842],[3.692958,0.293854],[-5.734459,7.401762],[-1.283789,-7.242242],[-7.100738,8.560004],[9.978703,-5.359678],[1.034641,-5.061289],[3.308911,-4.530355],[-1.403404,6.959654],[2.873622,9.365532],[-9.420804,-8.224386],[-3.944238,-2.628730],[-1.597698,-3.168389],[-6.949289,-4.047101],[9.240808,0.840731],[1.284586,-0.064285],[-5.987226,4.813371],[-3.395613,0.111472],[5.290669,-6.632145],[-3.412428,-3.870999],[-8.015944,-6.223425],[1.515000,-9.587753],[1.937501,0.406142],[-6.749900,-9.967291],[-6.949771,-7.926984],[4.749494,7.291469],[8.390621,-1.983242],[-0.314591,-3.709847],[0.058376,3.917857],[-1.753492,-3.383460],[7.378680,-5.186597],[3.608057,-2.394710],[-7.308900,-0.059718],[-1.098032,-5.149079],[8.717808,0.481519],[7.263067,-9.241119],[-7.090775,8.845707],[-9.842268,-4.885808],[-2.175671,7.574331],[-3.686719,4.949995],[-7.020463,-0.418807],[7.262168,2.209539],[5.718210,-0.606271],[-7.695837,0.663394],[-0.581091,7.624937],[-7.968492,0.688809],[-6.813909,-7.684416],[-8.563098,6.428009],[-8.755191,-4.422359],[-3.363284,-2.359810],[-9.312214,-7.662331],[-5.921857,-8.768673],[4.425044,6.563196],[5.557843,-2.006521],[9.524215,-4.191264],[-0.834576,-1.308121],[0.600341,-8.295894],[-3.767432,2.769659],[3.612886,-0.345223],[-6.160044,-9.016067],[-8.351281,9.455094],[-6.355379,-8.032722],[2.384825,-0.822558],[-8.075937,-4.660604],[2.835581,-6.613129],[6.924605,-9.328913],[8.473485,-7.000578],[5.011258,8.906731],[-6.366663,-8.295952],[-9.197659,-5.866819],[9.886110,4.177756],[-1.056604,-5.647870],[-8.587497,7.279913],[-4.003523,-9.504713],[-2.781002,5.401486],[-1.532539,-0.195859],[-0.157092,5.072648],[3.910252,-9.393685],[-7.741191,-2.501675],[5.339902,-8.207495],[7.651643,8.721827],[-7.711073,-5.617246],[5.637562,-5.685062],[-8.073666,-6.214390],[3.634369,-8.077932],[-6.415001,-7.552570],[-6.242874,7.513971],[5.944305,-8.636527],[5.197217,-9.259731],[4.770802,3.798199],[0.514510,-2.442818],[-9.305063,-0.745330],[5.235896,-4.359308],[9.712120,-8.733868],[1.862784,7.844153],[-3.816967,-0.413846],[0.765739,3.070739],[4.581607,8.730509],[-6.181220,-9.450207],[9.272404,5.522695],[2.343490,-6.440035],[-8.557250,3.138556],[-3.651040,-5.946331],[-3.866270,-7.723061],[7.746434,-9.696106],[-8.538644,0.348248],[-6.267292,3.680638],[-8.240523,-9.010995],[-4.351806,-4.912483],[2.346443,0.469549],[-4.570245,-3.898325],[-6.529025,5.081927],[-7.941558,-3.900115],[7.776651,-7.341524],[0.723627,2.015335],[-3.932910,-3.599558],[-4.520527,8.221803],[-4.404636,5.339326],[-8.232371,3.018985],[8.332737,-6.709521],[-1.242375,-3.167572],[5.834340,3.403034],[1.962165,-0.716633],[-9.615004,-6.697233],[-8.702734,5.030567],[-3.681396,6.915282],[-0.739859,3.791070],[0.688530,-6.354770],[-5.201330,-6.505659],[9.633410,4.510689],[-0.928041,-4.216903],[-6.869598,-2.084226],[-3.480888,2.018149],[-8.186871,4.164206],[7.169563,-8.358200],[-1.704685,-3.710820],[-9.573702,-3.944504],[8.496085,-2.251432],[-4.936751,-5.950805],[7.765168,2.403132],[-8.068434,2.440113],[4.706695,-0.393349],[9.434066,-3.382918],[7.921048,2.130413],[5.402397,1.124043],[8.489157,-6.767969],[-7.751208,-9.922007],[2.165973,3.257583],[-2.828296,2.934485],[2.649965,-2.950951],[-9.453342,-3.457303],[2.169625,2.445604],[-8.226241,9.300018],[-7.156485,0.523075],[6.274908,1.118379],[4.280493,-2.374720],[6.377200,5.869039],[3.847612,9.976732]], dtype = "float32")#candidate|3442|(308, 2)|const|float32
call_3441 = relay.TupleGetItem(func_1755_call(relay.reshape(const_3442.astype('float32'), [8, 11, 7]), relay.reshape(const_3442.astype('float32'), [8, 11, 7]), ), 0)
call_3443 = relay.TupleGetItem(func_1759_call(relay.reshape(const_3442.astype('float32'), [8, 11, 7]), relay.reshape(const_3442.astype('float32'), [8, 11, 7]), ), 0)
output = relay.Tuple([call_3401,const_3402,call_3405,bop_3416,call_3431,var_3432,var_3433,var_3434,var_3435,var_3436,call_3441,const_3442,])
output2 = relay.Tuple([call_3403,const_3402,call_3406,bop_3416,call_3437,var_3432,var_3433,var_3434,var_3435,var_3436,call_3443,const_3442,])
func_3445 = relay.Function([var_3389,var_3432,var_3433,var_3434,var_3435,var_3436,], output)
mod['func_3445'] = func_3445
mod = relay.transform.InferType()(mod)
var_3446 = relay.var("var_3446", dtype = "float64", shape = (16, 10, 8))#candidate|3446|(16, 10, 8)|var|float64
var_3447 = relay.var("var_3447", dtype = "float64", shape = (66,))#candidate|3447|(66,)|var|float64
var_3448 = relay.var("var_3448", dtype = "float64", shape = ())#candidate|3448|()|var|float64
var_3449 = relay.var("var_3449", dtype = "float64", shape = (14,))#candidate|3449|(14,)|var|float64
var_3450 = relay.var("var_3450", dtype = "float64", shape = (1056,))#candidate|3450|(1056,)|var|float64
var_3451 = relay.var("var_3451", dtype = "float32", shape = (1, 220))#candidate|3451|(1, 220)|var|float32
output = func_3445(var_3446,var_3447,var_3448,var_3449,var_3450,var_3451,)
func_3452 = relay.Function([var_3446,var_3447,var_3448,var_3449,var_3450,var_3451,], output)
mutated_mod['func_3452'] = func_3452
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3500 = relay.var("var_3500", dtype = "uint8", shape = (11, 13, 5))#candidate|3500|(11, 13, 5)|var|uint8
var_3501 = relay.var("var_3501", dtype = "uint8", shape = (11, 13, 5))#candidate|3501|(11, 13, 5)|var|uint8
bop_3502 = relay.greater(var_3500.astype('bool'), relay.reshape(var_3501.astype('bool'), relay.shape_of(var_3500))) # shape=(11, 13, 5)
output = relay.Tuple([bop_3502,])
output2 = relay.Tuple([bop_3502,])
func_3506 = relay.Function([var_3500,var_3501,], output)
mod['func_3506'] = func_3506
mod = relay.transform.InferType()(mod)
mutated_mod['func_3506'] = func_3506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3506_call = mutated_mod.get_global_var('func_3506')
var_3508 = relay.var("var_3508", dtype = "uint8", shape = (11, 13, 5))#candidate|3508|(11, 13, 5)|var|uint8
var_3509 = relay.var("var_3509", dtype = "uint8", shape = (11, 13, 5))#candidate|3509|(11, 13, 5)|var|uint8
call_3507 = func_3506_call(var_3508,var_3509,)
output = call_3507
func_3510 = relay.Function([var_3508,var_3509,], output)
mutated_mod['func_3510'] = func_3510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3671 = relay.var("var_3671", dtype = "float32", shape = (12, 4, 9))#candidate|3671|(12, 4, 9)|var|float32
uop_3672 = relay.log2(var_3671.astype('float32')) # shape=(12, 4, 9)
func_1472_call = mod.get_global_var('func_1472')
func_1479_call = mutated_mod.get_global_var('func_1479')
var_3692 = relay.var("var_3692", dtype = "float64", shape = (22, 3))#candidate|3692|(22, 3)|var|float64
var_3693 = relay.var("var_3693", dtype = "float64", shape = ())#candidate|3693|()|var|float64
var_3694 = relay.var("var_3694", dtype = "float64", shape = (14, 1))#candidate|3694|(14, 1)|var|float64
var_3695 = relay.var("var_3695", dtype = "float64", shape = (24, 1))#candidate|3695|(24, 1)|var|float64
var_3696 = relay.var("var_3696", dtype = "float64", shape = (88, 12))#candidate|3696|(88, 12)|var|float64
var_3697 = relay.var("var_3697", dtype = "float32", shape = (220,))#candidate|3697|(220,)|var|float32
call_3691 = relay.TupleGetItem(func_1472_call(relay.reshape(var_3692.astype('float64'), [1, 6, 11]), relay.reshape(var_3693.astype('float64'), []), relay.reshape(var_3694.astype('float64'), [14, 1]), relay.reshape(var_3695.astype('float64'), [6, 4]), relay.reshape(var_3696.astype('float64'), [16, 6, 11]), relay.reshape(var_3697.astype('float32'), [220,]), ), 1)
call_3698 = relay.TupleGetItem(func_1479_call(relay.reshape(var_3692.astype('float64'), [1, 6, 11]), relay.reshape(var_3693.astype('float64'), []), relay.reshape(var_3694.astype('float64'), [14, 1]), relay.reshape(var_3695.astype('float64'), [6, 4]), relay.reshape(var_3696.astype('float64'), [16, 6, 11]), relay.reshape(var_3697.astype('float32'), [220,]), ), 1)
output = relay.Tuple([uop_3672,call_3691,var_3692,var_3693,var_3694,var_3695,var_3696,var_3697,])
output2 = relay.Tuple([uop_3672,call_3698,var_3692,var_3693,var_3694,var_3695,var_3696,var_3697,])
func_3705 = relay.Function([var_3671,var_3692,var_3693,var_3694,var_3695,var_3696,var_3697,], output)
mod['func_3705'] = func_3705
mod = relay.transform.InferType()(mod)
var_3706 = relay.var("var_3706", dtype = "float32", shape = (12, 4, 9))#candidate|3706|(12, 4, 9)|var|float32
var_3707 = relay.var("var_3707", dtype = "float64", shape = (22, 3))#candidate|3707|(22, 3)|var|float64
var_3708 = relay.var("var_3708", dtype = "float64", shape = ())#candidate|3708|()|var|float64
var_3709 = relay.var("var_3709", dtype = "float64", shape = (14, 1))#candidate|3709|(14, 1)|var|float64
var_3710 = relay.var("var_3710", dtype = "float64", shape = (24, 1))#candidate|3710|(24, 1)|var|float64
var_3711 = relay.var("var_3711", dtype = "float64", shape = (88, 12))#candidate|3711|(88, 12)|var|float64
var_3712 = relay.var("var_3712", dtype = "float32", shape = (220,))#candidate|3712|(220,)|var|float32
output = func_3705(var_3706,var_3707,var_3708,var_3709,var_3710,var_3711,var_3712,)
func_3713 = relay.Function([var_3706,var_3707,var_3708,var_3709,var_3710,var_3711,var_3712,], output)
mutated_mod['func_3713'] = func_3713
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4155 = relay.var("var_4155", dtype = "float32", shape = (8, 14, 4))#candidate|4155|(8, 14, 4)|var|float32
var_4156 = relay.var("var_4156", dtype = "float32", shape = (8, 14, 4))#candidate|4156|(8, 14, 4)|var|float32
bop_4157 = relay.floor_mod(var_4155.astype('float32'), relay.reshape(var_4156.astype('float32'), relay.shape_of(var_4155))) # shape=(8, 14, 4)
bop_4166 = relay.bitwise_and(var_4155.astype('uint32'), relay.reshape(bop_4157.astype('uint32'), relay.shape_of(var_4155))) # shape=(8, 14, 4)
output = bop_4166
output2 = bop_4166
func_4169 = relay.Function([var_4155,var_4156,], output)
mod['func_4169'] = func_4169
mod = relay.transform.InferType()(mod)
var_4170 = relay.var("var_4170", dtype = "float32", shape = (8, 14, 4))#candidate|4170|(8, 14, 4)|var|float32
var_4171 = relay.var("var_4171", dtype = "float32", shape = (8, 14, 4))#candidate|4171|(8, 14, 4)|var|float32
output = func_4169(var_4170,var_4171,)
func_4172 = relay.Function([var_4170,var_4171,], output)
mutated_mod['func_4172'] = func_4172
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4258 = relay.const([[[4.378322,4.741483,-7.837082,-1.908352,-1.300591,7.521990,9.729672,-9.199418,-7.531842,-5.790684,-8.765919],[1.883166,-5.590652,-5.272836,9.094109,-7.876414,8.355365,-6.965875,-1.333117,4.142455,6.001824,4.817333],[-4.547338,2.193563,-4.836591,0.279832,-6.370907,9.060191,0.383490,-0.184823,1.871566,8.917902,-0.295125],[-8.356928,0.850523,3.753886,2.119233,9.119763,-1.274729,-2.868637,-6.955403,8.700504,-0.883349,-5.147599],[5.830039,-8.153356,7.971894,2.903737,0.808678,-6.044382,1.220367,1.617545,-5.038283,0.093963,5.650553],[8.242626,7.440863,0.211487,3.085815,7.075572,-4.178739,-2.553266,-6.517153,-2.058352,9.963107,-3.568638],[-7.330590,2.348653,-9.048523,-4.165327,-8.722179,-1.362153,-1.806002,9.461030,2.816405,-8.939082,-6.552831],[3.402433,4.788192,-7.186841,-6.407000,7.906986,5.393008,1.718038,7.300975,7.167792,8.166314,2.871844],[5.179575,-3.415953,-6.424089,4.359174,6.906014,3.079109,-2.048104,2.800609,-0.767473,5.148146,-6.865333],[4.628991,-4.985927,4.107634,-3.073360,-4.698634,-3.684061,-4.415043,4.786599,9.556404,-6.359042,1.326534],[9.631618,6.208414,-7.097391,6.198763,7.570797,-3.207062,6.832423,-0.726738,8.073022,-1.605200,2.666584]],[[-2.262446,-9.767462,4.374371,-5.395835,3.864903,2.217376,3.357459,8.825566,-6.768621,2.837170,4.073442],[0.128915,3.070777,-8.827054,-2.235865,-8.705054,-8.633449,-4.279196,-2.305259,9.079402,-4.018248,-2.209947],[-0.280772,-2.504770,5.110376,1.904250,9.999048,-6.761828,0.541221,-4.172884,-9.596708,-4.342050,3.305657],[-8.586381,0.641456,8.211649,-5.276289,7.551970,9.059626,-1.919584,-6.034851,5.139836,-0.131807,-1.331203],[-1.029287,3.742833,3.509793,-4.528014,-3.443610,-0.357306,-5.374627,-4.048589,-1.879885,1.454732,3.709342],[-8.129915,2.359074,0.013279,1.058282,-8.497316,-3.999888,-2.087805,0.639339,-0.050643,2.025948,-8.999805],[-2.582531,-3.216535,-0.380422,1.430424,5.981565,7.102913,8.256889,-0.180497,-7.991251,2.789742,-8.809828],[2.571992,-1.976855,-3.489380,-1.393577,9.946508,0.911849,2.905709,8.101379,1.471151,-1.623568,0.370568],[-8.218733,-7.480145,-3.156213,2.886890,7.071516,6.545553,8.793858,7.596722,-4.023109,-0.100754,9.189091],[5.099619,-1.252658,0.608590,-8.738152,9.032214,8.485302,4.792457,8.031910,-6.358907,3.481924,-6.190760],[6.448775,3.728177,-8.531263,6.036204,1.005735,-9.909428,-8.623304,5.008685,-7.281851,5.720547,-5.522334]],[[-7.092872,2.551549,9.384089,-4.283046,4.517882,7.868756,8.204694,6.213340,0.103594,6.541096,-2.725035],[-2.256383,-2.593447,-1.975043,-6.525892,8.471613,-9.361630,3.621894,6.850782,5.655488,-7.365944,9.890895],[-6.488540,-7.518586,-0.601856,2.439020,9.601672,-0.463981,0.784393,8.972476,2.297481,-4.347463,-1.202177],[2.982745,5.318072,-6.220611,-2.421924,2.264215,-7.173049,-5.367807,2.511303,-8.122192,5.164825,5.284297],[2.270399,-9.625424,6.082812,5.460368,9.805728,4.257487,8.789317,-1.458856,-1.990284,6.952305,3.598169],[7.389345,6.179623,-0.149244,-4.024222,9.579166,-1.159394,-1.827814,-5.451927,1.762656,9.080439,-7.043743],[1.722974,-9.187256,-8.672306,-5.757117,1.797706,6.793740,9.029378,-8.916200,1.985296,-2.390134,1.181246],[0.448883,-4.142417,5.057456,1.124423,-8.711768,-0.427513,-0.775283,-6.140456,4.251245,-9.016115,0.388352],[-3.486265,1.933203,6.383816,6.223268,1.592091,5.094879,-2.008274,8.989651,-2.259869,-9.829827,-8.715170],[-4.517471,7.525906,-7.174075,-4.989104,-5.705414,3.456556,-7.465886,3.530450,-2.919349,-1.750010,-3.171995],[-5.915073,-7.000296,3.480933,-1.831599,-5.154064,2.774106,-9.242172,8.316078,6.581222,4.203910,-1.746275]],[[9.951041,1.199261,-3.706834,8.089949,-6.541809,-5.548423,1.311708,1.955438,5.312447,-5.569676,-4.687355],[-1.071980,3.079654,4.448195,4.538893,-4.087072,4.442162,-5.692804,3.582691,-0.890315,0.416849,-5.662255],[-2.083944,-8.709382,8.870753,-5.581491,9.978402,-7.019332,-6.819410,3.929829,7.183188,5.950933,-7.918123],[-9.930051,8.368392,0.728036,8.353963,5.945879,-4.997993,7.880826,-7.163042,8.110170,-7.394599,-2.639220],[3.113153,-9.936993,6.392949,0.749594,1.390880,8.667047,-7.792916,-6.843744,3.779644,5.587233,9.902245],[3.263294,0.982231,-4.377999,-9.032955,-4.975102,-0.895629,-8.776103,-2.408061,7.303110,3.451112,6.434652],[-2.693394,7.195793,1.159512,3.869875,6.094845,6.147862,0.381682,0.968202,-5.127778,9.603241,-9.094078],[9.035392,8.251810,9.714700,3.420941,-9.422087,-2.316020,1.358897,-1.718717,-1.618837,-7.750505,-7.229730],[2.397285,6.089018,-7.567449,3.721569,9.662030,2.083714,4.939044,5.772272,5.398431,-5.113218,-6.760782],[-6.196105,-3.481681,-6.326633,-1.364229,-5.664832,-2.097427,0.911964,-4.383435,-1.819055,1.841862,-5.825138],[-3.310108,-7.352736,5.274789,0.887128,-4.754808,6.295530,-8.013897,9.227862,-9.857191,7.922218,-4.019931]],[[8.935283,0.705521,-4.810597,-1.925793,4.795957,-9.095493,-4.155202,7.963656,3.522796,3.602981,-5.960171],[1.616243,-3.908828,-5.419448,-5.706889,2.040023,6.577483,9.923056,2.783962,2.769439,-5.737064,-6.366607],[1.124073,-2.701050,-6.708204,6.157571,-6.777727,-9.578463,3.632162,-1.895953,3.553506,1.108548,-7.419301],[-3.662595,-6.805318,-4.769500,-7.955534,-0.552634,-2.164937,-8.481345,-3.612787,-7.590102,-0.497168,-3.977155],[0.835402,-2.042652,-4.840114,0.736491,-6.515613,-5.350336,1.958741,-1.466178,-2.379499,-0.037753,8.661875],[2.598156,-5.007124,-4.050044,-3.660498,-3.724018,9.428293,5.543280,6.975469,-2.102611,-0.695360,-4.169185],[-3.807617,6.993313,3.219165,5.903453,2.958000,8.896804,-1.327750,-9.127513,-9.989723,-3.546227,0.321892],[1.099647,0.787090,4.975687,-0.777441,8.622068,-0.625036,9.763090,-8.026144,-3.972878,0.944426,-7.761215],[-2.701760,0.774789,3.297045,-1.316713,1.135705,2.324667,-9.565698,-0.171348,4.296545,0.134533,2.526128],[0.658110,5.156918,2.776034,2.240990,8.759957,-2.341964,-3.048389,-2.447042,6.025796,-1.915189,-5.132414],[4.082023,-1.816850,3.019759,-8.768806,-1.915190,-9.230039,5.877378,6.536494,2.413691,-7.323978,5.220158]],[[-8.793634,-6.868171,9.641983,-9.076397,2.010203,-0.359734,-0.296451,8.459997,-3.126537,3.299901,2.945328],[-5.376048,6.395308,2.561273,-0.617775,6.600867,9.042838,-2.657407,-2.570220,-2.612191,-5.392718,4.681347],[-9.649019,3.194347,0.067043,-8.518873,4.853229,3.281253,-5.037169,8.693631,0.128135,2.713044,-0.770081],[5.032285,8.333433,-7.503611,-1.244569,-8.688123,-3.045344,-1.621761,-2.453743,-6.879840,2.942510,9.564241],[5.467068,-9.113676,8.960493,2.815565,7.389086,-2.419267,-9.291053,-4.498226,1.560095,-7.553715,-8.292797],[1.971578,7.181096,5.526469,9.609090,-0.980233,9.890910,6.952134,2.446827,-1.567862,9.727633,9.029869],[9.795267,-1.600665,-9.609162,-1.854484,7.615058,-8.751495,3.158332,-5.027657,-2.554652,0.447242,7.502006],[-6.082248,4.334105,-1.019936,3.753962,2.210074,0.065679,7.839659,-7.347943,3.245814,2.891946,-0.958075],[9.763000,5.928664,4.134587,3.966017,9.512216,7.437502,-4.846043,3.798944,1.671517,-1.632965,3.523829],[0.212425,7.026399,4.308938,-8.461707,2.446481,-4.343091,1.971015,-8.510102,2.347846,-9.231059,-1.705966],[-7.029498,-6.095256,-3.031572,-3.360455,5.121639,2.393436,-2.938999,4.953215,-7.673259,-4.455341,-8.162510]],[[4.106880,-1.173860,-6.703167,5.247598,1.941342,3.328777,-4.819970,-7.911120,0.254236,-2.966030,-9.142975],[1.420255,6.073567,5.755635,2.382243,6.229668,-3.052959,6.526659,-8.128438,5.283176,-1.929659,1.860896],[5.993583,2.701546,3.139666,9.924409,8.165481,-3.331440,8.752737,-8.456885,3.769794,4.218774,-7.216793],[-3.573271,2.498673,-2.967200,-8.459480,-5.247522,-7.259116,-7.111995,2.596546,6.944984,6.857915,0.025543],[0.527315,6.640419,5.950717,-9.086436,3.434762,-8.025419,1.416229,-2.068029,5.977040,0.883170,-0.485884],[7.884070,5.300676,-0.003602,-5.675145,3.806222,-5.973116,-0.638847,1.869514,7.998567,-6.044507,-1.181263],[-3.716700,0.888622,2.098032,1.817083,4.332032,-9.110829,-9.470869,3.596726,-2.750319,-1.271260,8.904102],[0.398649,-5.202975,3.428896,-2.696220,-2.847168,-0.993483,-0.587234,-7.295166,6.762804,8.209923,-6.263468],[7.359534,-0.467709,2.918991,-6.046318,-9.027606,7.544233,-3.906295,6.124669,-8.329061,8.771058,2.744618],[5.556012,-6.396790,2.745933,-8.477492,5.847463,9.543813,3.455673,-5.836043,6.723398,5.178707,0.611165],[9.307006,1.796105,-7.032524,-8.407431,-1.292291,9.890649,0.958497,-4.347416,6.921436,2.400331,-3.971090]],[[3.560106,-1.434429,4.431828,0.686951,1.014139,8.134239,3.939970,8.694313,7.256606,0.669366,-4.254458],[-2.831680,-4.141977,-6.421213,-0.475930,-1.894126,-2.245245,5.318515,3.278961,-9.259118,0.749834,2.311454],[-6.011094,0.031685,-7.306476,-0.821674,5.143456,-8.957913,-0.454739,5.758176,5.433100,-4.952926,-5.030788],[0.744226,2.460671,-5.540061,2.327333,5.418306,-2.773780,9.378447,9.576560,-9.686074,-5.466074,-7.923397],[9.191407,-4.157853,2.831486,-6.150265,-1.742540,4.468835,-1.973499,-5.852046,7.343395,3.721597,-0.688230],[1.298095,-4.996668,-7.068437,-6.974099,-5.953086,-0.694661,-9.015238,6.044544,9.662266,-5.889134,7.850054],[-4.904426,-5.870025,3.749949,-7.997402,-3.619923,6.660832,5.934429,-0.928993,-7.154301,7.113245,4.089043],[2.192695,5.906399,-7.032643,5.754642,-6.778726,1.696470,-4.211779,-4.949467,7.135932,-9.221196,1.372263],[-3.649568,1.615001,-4.821427,-1.672306,-5.471455,9.083255,-2.960623,9.357556,7.592611,-0.957031,-2.398015],[-9.043306,0.279873,6.355184,-2.040395,5.674327,-0.769948,-9.847711,4.848549,-2.588924,-5.621809,9.712910],[7.194458,-6.786113,-8.251967,-5.154184,2.426277,3.563162,-5.913571,-0.332338,-7.560203,7.638314,-8.030413]],[[9.179293,-7.345521,1.801941,2.150728,-3.722802,3.595016,-5.734116,9.284571,-6.040653,0.155230,0.205470],[3.521031,-3.385904,5.262483,-7.818762,8.294046,9.696666,-3.502973,-6.234724,-0.656134,-6.904416,-0.187141],[9.073104,2.564886,-5.277738,-5.199482,-4.104264,-8.740047,2.976984,8.088288,2.408875,4.338799,-7.775378],[-8.074966,-4.398328,7.291251,-5.681437,2.209860,2.637575,-9.411610,1.831661,2.196720,-4.176825,-5.756904],[3.783286,2.948485,0.948558,-0.428054,-9.956875,-4.589511,4.842629,-8.053772,7.199117,9.173563,-1.258082],[0.820580,-1.887805,-7.510436,-1.786924,-1.722817,-6.977208,-8.192930,1.050038,9.980554,9.921722,-7.352046],[-2.227959,2.991753,-3.216355,-7.560982,-6.404770,-6.515688,3.343738,6.811781,5.009884,1.694416,8.256603],[2.605277,-3.069661,6.038229,1.220710,-1.340837,-3.341816,9.597367,6.148957,2.286019,9.809467,-3.502647],[-8.323151,-2.406001,-8.148922,7.678280,-3.287459,-5.382426,-7.763466,-9.760630,8.457068,8.941875,-3.904632],[-8.665177,-5.490172,4.824888,9.512622,-7.104389,9.362271,4.706993,1.382423,-0.840206,-7.482084,-6.933712],[-9.942449,-8.756191,-6.165365,5.314784,-9.935749,-7.219422,1.955010,8.047267,6.811339,9.704155,-8.459361]],[[-8.931823,2.800785,4.210724,3.383422,-4.889226,2.044523,9.486023,-7.520089,-4.977504,-0.535157,-9.341685],[0.423022,-1.171050,4.472253,0.567102,8.534470,4.491712,-8.696318,-7.282421,4.407412,1.749961,1.166238],[-8.844167,9.869057,-5.283138,8.272763,-3.411349,-2.140093,6.070379,-8.601808,-2.243098,7.273315,-4.330504],[-0.976159,3.771760,-3.821155,-5.123084,-2.003408,2.986286,-2.391110,9.959019,-1.716499,-7.281759,8.633646],[9.591907,-4.267670,5.199117,2.895042,-3.093810,-4.801259,5.752593,-6.120888,-4.239852,-5.031550,5.333083],[6.102444,-2.595940,-5.359672,0.299157,0.688367,5.468966,-7.609772,6.956691,-2.898530,8.919407,0.645722],[3.490214,5.167939,-4.115677,-2.162774,-7.067134,2.337154,0.674279,4.198213,7.400038,5.264766,-2.165095],[7.268756,-8.466802,7.377756,-7.327642,-5.300000,5.395190,7.713879,-3.115125,3.066318,6.449325,1.451973],[-7.156644,9.962930,0.236043,-3.928879,-0.283610,6.830811,6.087182,8.125840,-5.330765,-1.962170,4.613657],[3.175337,7.396289,-1.282431,9.083346,9.557684,-5.854447,7.151525,-7.003422,6.781931,7.724953,1.900859],[-8.963752,-5.331849,-4.653424,-1.410442,-1.633559,8.170598,-9.228054,6.685573,-5.001491,3.300260,2.863737]],[[-0.528259,-8.810021,7.906695,5.670374,-6.980899,0.613315,-5.099968,2.974498,6.817756,-8.431710,9.598253],[-5.909409,6.397831,-2.243700,6.901077,9.040142,7.913378,9.293006,-2.018214,4.618163,-0.599822,6.546572],[-0.113302,3.524487,3.465938,7.615677,-2.584096,6.607291,-9.863158,-3.554228,4.868720,0.691687,2.613214],[4.082859,2.981698,1.591394,1.328073,-1.035537,3.384690,3.765002,-2.027558,-0.947376,-2.008839,-1.724400],[0.554343,-0.785345,-0.056752,2.687338,6.964833,2.014137,4.880651,-1.220749,-8.884687,-3.796169,6.239131],[-4.824664,-4.340814,-1.442102,-5.141133,2.733391,-0.223336,-0.923994,-7.039932,-8.964175,3.229102,-5.814121],[-1.314832,7.258895,-9.902631,6.023171,-0.508463,1.480164,-9.537194,8.815411,-8.500944,-2.724902,6.363766],[0.860710,-2.600552,1.055777,-5.253069,-0.719248,-7.832724,2.045276,1.440569,-9.191561,-0.868268,3.772632],[-3.936137,3.988953,2.546691,1.537482,-5.536737,-7.554935,-6.882832,-3.018433,-6.870915,-4.254221,6.398648],[0.224659,-9.947477,-3.914474,3.174753,4.194501,-1.663223,-7.979414,-6.436767,-4.982307,-8.636961,4.084435],[-4.435818,7.252999,-7.309828,-6.753746,4.454572,-7.331248,6.389926,-4.194224,-4.126107,-3.395642,-2.913052]]], dtype = "float64")#candidate|4258|(11, 11, 11)|const|float64
uop_4259 = relay.acosh(const_4258.astype('float64')) # shape=(11, 11, 11)
func_1472_call = mod.get_global_var('func_1472')
func_1479_call = mutated_mod.get_global_var('func_1479')
const_4263 = relay.const([[2.354882],[-2.631653],[-1.783315],[-4.214070],[6.280933],[0.540852],[-7.583379],[2.370408],[5.867366],[-5.470343],[-1.187169],[-0.574284],[9.452444],[9.502576],[-3.566292],[-1.421719],[9.027294],[-5.403422],[-2.682598],[2.576488],[5.003412],[5.190870],[-7.200852],[-3.182114],[4.866048],[8.496230],[-9.081320],[-7.265850],[1.466535],[0.293912],[9.993213],[-4.176361],[-1.981135],[-2.164676],[8.360524],[-0.910504],[7.815112],[-8.566801],[-5.669429],[1.394766],[-7.359519],[7.567554],[-7.192873],[-6.729407],[-4.273824],[2.157798],[7.781230],[-5.088685],[-8.947496],[-8.027279],[-4.516738],[1.690551],[-4.304656],[4.013818],[-3.511717],[0.439299],[7.683762],[-6.071432],[-7.259988],[-5.718383],[-8.317726],[-9.070472],[7.305435],[-5.796704],[-9.827069],[9.210107]], dtype = "float64")#candidate|4263|(66, 1)|const|float64
const_4264 = relay.const(-4.312423, dtype = "float64")#candidate|4264|()|const|float64
const_4265 = relay.const([-2.002406,-2.550624,7.883637,2.898449,9.700380,-3.778069,8.654337,8.287737,9.598589,3.615546,4.540790,-8.255585,1.534485,-0.448170], dtype = "float64")#candidate|4265|(14,)|const|float64
const_4266 = relay.const([-4.156800,8.698046,6.262857,9.413225,-8.999082,0.995487,5.430032,-8.155526,-9.324274,-5.141957,5.101588,-7.670203,1.248051,0.172680,-8.068134,-7.796491,-0.918142,6.827231,-7.139379,-0.279836,-2.093938,-9.836132,-1.475104,4.007343], dtype = "float64")#candidate|4266|(24,)|const|float64
var_4267 = relay.var("var_4267", dtype = "float64", shape = (8, 132))#candidate|4267|(8, 132)|var|float64
var_4268 = relay.var("var_4268", dtype = "float32", shape = (220, 1))#candidate|4268|(220, 1)|var|float32
call_4262 = relay.TupleGetItem(func_1472_call(relay.reshape(const_4263.astype('float64'), [1, 6, 11]), relay.reshape(const_4264.astype('float64'), []), relay.reshape(const_4265.astype('float64'), [14, 1]), relay.reshape(const_4266.astype('float64'), [6, 4]), relay.reshape(var_4267.astype('float64'), [16, 6, 11]), relay.reshape(var_4268.astype('float32'), [220,]), ), 3)
call_4269 = relay.TupleGetItem(func_1479_call(relay.reshape(const_4263.astype('float64'), [1, 6, 11]), relay.reshape(const_4264.astype('float64'), []), relay.reshape(const_4265.astype('float64'), [14, 1]), relay.reshape(const_4266.astype('float64'), [6, 4]), relay.reshape(var_4267.astype('float64'), [16, 6, 11]), relay.reshape(var_4268.astype('float32'), [220,]), ), 3)
output = relay.Tuple([uop_4259,call_4262,const_4263,const_4264,const_4265,const_4266,var_4267,var_4268,])
output2 = relay.Tuple([uop_4259,call_4269,const_4263,const_4264,const_4265,const_4266,var_4267,var_4268,])
func_4271 = relay.Function([var_4267,var_4268,], output)
mod['func_4271'] = func_4271
mod = relay.transform.InferType()(mod)
var_4272 = relay.var("var_4272", dtype = "float64", shape = (8, 132))#candidate|4272|(8, 132)|var|float64
var_4273 = relay.var("var_4273", dtype = "float32", shape = (220, 1))#candidate|4273|(220, 1)|var|float32
output = func_4271(var_4272,var_4273,)
func_4274 = relay.Function([var_4272,var_4273,], output)
mutated_mod['func_4274'] = func_4274
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4292 = relay.var("var_4292", dtype = "float32", shape = ())#candidate|4292|()|var|float32
var_4293 = relay.var("var_4293", dtype = "float32", shape = (7, 1, 1))#candidate|4293|(7, 1, 1)|var|float32
bop_4294 = relay.mod(var_4292.astype('float32'), var_4293.astype('float32')) # shape=(7, 1, 1)
output = bop_4294
output2 = bop_4294
func_4297 = relay.Function([var_4292,var_4293,], output)
mod['func_4297'] = func_4297
mod = relay.transform.InferType()(mod)
var_4298 = relay.var("var_4298", dtype = "float32", shape = ())#candidate|4298|()|var|float32
var_4299 = relay.var("var_4299", dtype = "float32", shape = (7, 1, 1))#candidate|4299|(7, 1, 1)|var|float32
output = func_4297(var_4298,var_4299,)
func_4300 = relay.Function([var_4298,var_4299,], output)
mutated_mod['func_4300'] = func_4300
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4304 = relay.var("var_4304", dtype = "float32", shape = ())#candidate|4304|()|var|float32
var_4305 = relay.var("var_4305", dtype = "float32", shape = (14, 1, 3))#candidate|4305|(14, 1, 3)|var|float32
bop_4306 = relay.less(var_4304.astype('bool'), var_4305.astype('bool')) # shape=(14, 1, 3)
func_3506_call = mod.get_global_var('func_3506')
func_3510_call = mutated_mod.get_global_var('func_3510')
const_4322 = relay.const([-2,-3,10,2,-3,9,-10,4,-2,-7,8,10,-2,4,-3,-10,9,-3,3,5,8,4,3,-4,-4,9,10,8,10,5,4,-2,1,1,1,-8,2,-9,-9,9,-5,-5,-10,6,-4,7,6,-10,3,1,-7,-6,-2,-5,-7,4,5,-6,2,-8,3,-6,-3,8,-8,-3,-9,-6,-2,-9,5,1,-5,-6,-9,5,10,-2,8,10,-10,-10,9,-7,-7,2,-2,-2,1,3,-2,3,2,4,7,5,-8,6,1,10,2,7,-6,2,-7,-1,-5,-1,-2,-6,-1,-8,-4,-6,-8,2,-10,-5,-8,-6,-1,-5,1,-5,1,4,10,2,-6,10,5,-5,1,-1,-6,3,4,-8,-4,-10,2,-8,7,10,-8,-1,-2,-10,-6,-1,10,2,2,10,2,-2,5,-9,-1,8,-9,4,5,4,5,-4,9,-8,5,-8,8,-3,1,-5,-1,4,2,-3,2,-6,3,9,-7,3,-4,1,3,5,6,-6,3,-8,10,1,9,8,-9,-5,5,-10,-1,1,5,-5,5,7,-5,-4,8,-6,3,10,10,-10,-3,4,-3,5,-10,-8,-4,-3,-4,4,2,-9,-4,9,-2,9,-9,-7,-9,-10,-3,-3,7,-7,-5,-1,3,-2,-6,-10,-1,-4,-5,3,-3,10,3,-6,1,1,6,-3,-3,5,7,10,8,8,-4,5,6,-7,1,1,-7,-8,-6,2,-7,1,-4,-3,4,4,-4,9,-8,-9,8,-1,-4,-7,-9,2,-4,1,5,-10,5,8,5,-9,2,2,-10,4,-1,6,10,7,2,-1,1,-5,7,8,-1,-5,-7,-6,9,10,-2,9,6,-5,-3,5,-10,-4,6,-9,1,1,-10,-4,8,8,-10,-2,-2,-5,3,-10,-2,8,-8,-4,-2,6,3,-2,4,1,-8,2,-9,-4,9,-5,-10,-9,-1,-7,8,-4,3,-4,-7,-3,-7,4,6,-6,4,5,6,2,7,-10,-3,7,-10,3,5,2,-4,8,4,4,7,2,5,9,-5,8,3,4,-8,3,-4,7,-9,10,9,1,-5,-7,9,6,-7,2,2,5,4,5,-1,7,-7,3,-1,2,-9,8,-7,4,9,-3,-3,-2,4,-4,-10,-7,8,-3,-4,4,-3,5,-7,5,-6,-8,7,-5,-9,-10,-2,8,-6,-10,7,6,-8,-2,-10,2,5,5,2,-7,-1,-2,3,-2,2,-9,-5,8,6,10,-7,1,4,8,-6,-7,-3,9,-10,4,4,-8,8,4,-6,-9,-9,-6,6,9,8,-10,-4,6,-1,-5,-4,4,8,8,-4,-6,-7,6,-6,-5,10,7,4,7,6,10,4,3,-4,6,6,-3,-6,-6,1,-7,9,-4,-7,-8,-4,2,2,9,-6,6,-9,-7,-5,5,6,-8,6,-10,4,6,8,-5,5,8,9,3,2,-2,3,-4,1,-4,5,-2,3,6,-7,-2,5,4,-4,3,-5,3,-4,8,9,4,7,-3,-3,-2,8,-3,-3,-8,-3,5,5,7,4,-5,-7,-9,5,5,-10,10,-10,-2,1,-4,-10,4,6,5,7,7,10,-10,-9,-5,-3,-1,-10,-10,5,-5,2,10,-3,1,6,-5,5,5,2,7,7,-8,10,-9,-1,-10,6,-2,5,-8,-1,-9,-10,-2,-4,-8,4,-9,-4,-1,-7,-10,9,1,-5,-4,5,5,-8,8,4,7,1,-6,6,-2,6,-7,3,-10,-8,7,10,9,-6,3,10,-2,8,8,5,9,1,8,-4,4,-5,-7,2,-6,-2,2,1,-5,-2,-2,-2,-8,-7,-8,-7,4,3,10,9,6,6,-7,2,3,6,10,-8,-2,-7,5,5,9,-3,5,-4,7,-9,-7,8,-2,9,4,-2], dtype = "uint8")#candidate|4322|(715,)|const|uint8
call_4321 = relay.TupleGetItem(func_3506_call(relay.reshape(const_4322.astype('uint8'), [11, 13, 5]), relay.reshape(const_4322.astype('uint8'), [11, 13, 5]), ), 0)
call_4323 = relay.TupleGetItem(func_3510_call(relay.reshape(const_4322.astype('uint8'), [11, 13, 5]), relay.reshape(const_4322.astype('uint8'), [11, 13, 5]), ), 0)
output = relay.Tuple([bop_4306,call_4321,const_4322,])
output2 = relay.Tuple([bop_4306,call_4323,const_4322,])
func_4337 = relay.Function([var_4304,var_4305,], output)
mod['func_4337'] = func_4337
mod = relay.transform.InferType()(mod)
mutated_mod['func_4337'] = func_4337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4337_call = mutated_mod.get_global_var('func_4337')
var_4339 = relay.var("var_4339", dtype = "float32", shape = ())#candidate|4339|()|var|float32
var_4340 = relay.var("var_4340", dtype = "float32", shape = (14, 1, 3))#candidate|4340|(14, 1, 3)|var|float32
call_4338 = func_4337_call(var_4339,var_4340,)
output = call_4338
func_4341 = relay.Function([var_4339,var_4340,], output)
mutated_mod['func_4341'] = func_4341
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4618 = relay.var("var_4618", dtype = "int64", shape = (5, 13, 6))#candidate|4618|(5, 13, 6)|var|int64
var_4619 = relay.var("var_4619", dtype = "int64", shape = (5, 13, 6))#candidate|4619|(5, 13, 6)|var|int64
bop_4620 = relay.equal(var_4618.astype('bool'), relay.reshape(var_4619.astype('bool'), relay.shape_of(var_4618))) # shape=(5, 13, 6)
func_2548_call = mod.get_global_var('func_2548')
func_2555_call = mutated_mod.get_global_var('func_2555')
var_4627 = relay.var("var_4627", dtype = "float32", shape = (32,))#candidate|4627|(32,)|var|float32
const_4628 = relay.const([8.170220,-3.847133,6.543472,8.735512,-5.551652,3.773357,-5.558453,-4.555599,-0.203933,1.731018,6.265486,-0.926000,-6.881010,9.450261,7.235982,3.488783,4.888429,-4.299434,5.098160,0.579855,-6.570410,-7.783071,-1.935323,2.355212,-6.490866,1.564675,-1.934516,1.947948,0.920159,5.428260,5.224781,7.343340,-1.567205,6.661072,2.952280,5.105181,-9.652462,-5.937701,-2.737038,8.110682,-7.138520,-8.715314,-5.555998,3.897880,-4.551261,-2.099280,0.299691,0.635630,-4.698548,-5.816734,5.758098,7.185222,1.954761,-8.970010,7.927876,-5.196436,6.621698,7.817461,-1.017340,4.294687,2.398399,0.512738,6.044537,-7.122665,4.287028,-6.057457,-9.000501,-2.747623,4.586234,3.012814,-7.400181,9.698769,1.044705,-1.799587,7.991560,-7.176312,8.224245,-9.216058,-9.001531,-9.501236,7.786891,5.366516,-3.853686,9.771768,-0.913495,2.114720,-0.698414,-1.205676,8.463497,1.163534,-6.551144,2.097416,5.137988,0.396491,-6.850301,-6.050237,-4.420165,0.917435,3.137605,-0.033416,8.537794,5.538376,-4.120597,3.988560,-6.836122,0.030145,9.292021,-6.556437,-9.398226,-2.231786,-5.482331,-3.434604,-6.937649,3.296591,-4.637377,-4.370867,1.199555,2.688438,4.256266,9.219047,2.525114,0.667463,5.848447,-8.180452,2.573579,-8.573357,0.422284,-1.112047,-0.897593,3.674472,5.438932,3.124007,2.311983,2.472790,7.491904,-0.420587,1.805956,0.966925,-8.244485,-8.554090,7.134381,9.941672,9.527473,-7.770163,3.244137,-3.742933,9.882074,-7.638598,-0.597607,-6.471770,-9.502981,-5.679453,-7.933396,4.400541,8.821048,-1.282833,-0.452115,5.837629,4.994566,-1.230100,-3.466041,3.069205,-5.185357,-8.398403,3.436360,-7.925774,-2.786923,3.443154,6.249645,2.329188,-0.141591,0.674444,1.363916,-4.047930,-1.141465,4.175038,2.591180,8.177873,-1.952052,-9.811093,-7.023589,-2.687661,-9.091149,1.914320,-6.187703,-2.907682,-2.481689,9.570154,8.651282,-6.059845,-2.286368,-4.011732,-2.915138,5.142638,0.383748,5.566108,0.937210,-5.492531,7.125391,1.889229,-5.470345,3.150216,8.400157,-5.410842,-9.697233,-0.578765,6.587454,1.748514,-8.604612,-7.438426,-7.086995,2.251443,0.689682,1.941556,0.720950,-1.658056,3.689458,-7.458120,3.240813,9.383549,1.566161,-6.087039,-6.117357,9.593597,4.720742,-7.776946,3.595740,0.270113,-9.031021,5.168701,5.812750,4.816980,9.304571,7.252690,3.899157,9.416893,-7.047515,9.307688,8.582458,-7.448353,-6.269325,-3.106765,-1.395390,3.010654,2.890715,1.464332,-1.475827,3.985622,-8.964641,-7.806102,0.748398,4.260216,-2.157729,-2.134449,6.699281,-6.684708,8.366113,2.067083,-5.932187,-2.488666,1.486082,-1.855555,3.419677,-1.671639,-1.566471,3.000326,-6.389543,7.698017,2.877968,-6.356061,-3.735753,-9.136915,5.472110,-3.582528,-0.358614,3.294300,-2.708827,-9.701393,2.472260,5.809938,7.983546,6.679728,1.148392,-3.714808,-6.976584,2.579776,6.447175,0.380784,8.151017,-3.546055,-2.559613,-7.539963,1.249117,-9.748218,9.661639,-9.446333,-8.391803,-9.519185,3.310642,-3.455680,3.415980,-8.299231,-3.093048,3.802698,3.467643,6.883998,-3.732501,-1.936264,-1.623102,-5.961296,8.499533,4.326045,8.099216,2.991724,-1.680124,-4.437776,-1.622908,1.672400,-4.534703,-2.628455,-4.440536,-7.779741,0.094940,5.191897,4.368572,1.314393,-8.631977,7.258525,-2.399999,-4.167648,-1.085780,-8.766139,-6.607509,8.525203,8.861465,-6.930456,-9.663430,-4.673972,-4.719688,7.415736,6.598463,-9.997259,6.782387,9.527160,-8.582208,7.584458,5.856864,2.859879,2.876793,-4.538795,3.403770,-8.287432,8.580390,9.316107,-7.469878,-0.566144,-6.830164,-9.418217,-9.518976,2.590382,9.624748,5.125196,2.589259,-0.940786,-2.937330,7.310198,-0.045090,0.906165,-7.159384,0.137986,7.661111,-1.226351,-2.213186,-3.073076,6.185333,5.639578,-2.609622,3.491850,-3.290740,-9.315025,-0.428063,-9.871916,2.504774,4.774177,-0.681792,9.754500,-4.636897,2.311824,-2.144596,2.934699,-6.926100,-9.708205,2.612646,-1.336854,-9.102637,-2.411235,-6.616117,7.120476,-1.816100,0.352111,6.138702,3.128562,-0.565015,-1.390625,-8.912065,-7.142575,-5.503921,7.837668,-4.992882,1.583152,-3.398802,-4.393157,-7.208834,-4.626907,-8.700032,-7.413626,-7.454811,3.950784,-9.295444,0.035781,1.699185,5.655099,1.959358,5.018667,-8.923674,-5.197033,1.530355,7.078391,-5.906902,-5.966495,7.315247,-7.625477,-1.952620,7.279861,3.801203,6.366300,-8.258418,-2.231028,7.466328,-5.409499,9.297742,-5.788990,1.352951,-3.791365,-4.817222,-0.901250,6.911309,2.963747,-4.456295,9.798750,-8.904380,-9.746381,0.920860,-4.295352,-7.697591,6.834534,9.023953,-6.436220,1.711611,-9.302421,-1.697374,-7.206543,9.533481,1.675984,-9.984869,8.030753,-7.188939,2.651729,-7.672533,-2.083096,-8.183366,-3.553945,-6.631625,-0.515556,-6.786851,2.832128,0.525211,-6.986256,3.225093,-5.123211,-8.038956,-2.581804,5.681081,2.073600,8.423939,6.892724,8.109423,5.900208,-9.338138,1.270485,-1.327836,1.533390,-4.844349,-5.292630,-7.793824,0.605736,-1.002837,1.730015,-4.895805,-0.215773,-5.389740,8.816572,6.682014,8.373737,3.574347,-9.079076,6.995658,0.737445,-8.110642,-8.423363,4.433917,5.229635,4.593757,6.540325,4.764227,-8.648686,9.372273,0.509282,-1.315756,6.743381,-8.036435,-0.669706,7.457624,2.731599,5.279842,-3.358657,-9.053423,2.799518,-5.914413,5.292577,-5.140078,-1.380719,7.595474,-4.828738,-3.405025,2.239337,-8.983298,7.647469,-9.494470,7.044573,-9.361887,-6.298615,9.256125,-1.136872,-4.576074,-9.375038,8.185585,6.468846,-3.203817,3.725285,9.083628,2.778219,-0.553153,1.977688,-0.740406,-5.941853,1.168540,7.645620,-3.864601,-9.592994,0.486184,0.848510,2.094544,9.009091,4.054747,0.069946,-2.536403,-8.235686,9.258446,3.797290,-7.720337,-0.243890,-1.289696,-3.079485,2.568694,8.595704,5.147196,-7.441955,4.965946,6.315268,-6.704902,0.056171,3.328909,2.706151,-5.759842,-1.669414,-6.350835,-4.171895,-3.496422,-3.549504,9.333297,-6.522495,-8.484355,-3.770031,2.377765,-2.752035,-4.259150,-3.022276,0.520437,-5.988831,-4.479054,-2.479415,7.589563,8.990870,-3.729030,6.322778,3.625180,-9.131318,-7.729185,-8.548534,-4.345711,0.914458,-8.984335,5.935218,9.942507,9.863720,-2.674070,2.987168,-8.426001,-3.076662,-1.540600,0.636402,4.752948,6.848285,-6.026350,7.359312,5.694646,6.744671,-2.715429,6.812460,-8.709046,2.207823,5.792227,-1.848531,5.080300,-3.610960,-3.203975,-6.994063,0.863183,-1.230564,4.805539,7.553531,-3.627478,-0.362258,8.793105,4.164124,8.199077,-9.054040,3.535780,-6.047911,3.272624,-9.411663,-8.120650,-8.365596,-1.757747,7.397558,-0.341669,-6.943254,5.647315,-2.694751,6.031162,-6.218590,-3.507752,1.091672,6.499516,2.095976,-8.402385,6.829224,-3.392434,-5.437099,-8.155358,-1.988079,-3.444619,9.320107,1.628152,-7.858959,6.738122,6.482299,-6.375019,4.879568,4.021155,-9.977007,-6.022363,-6.033154,1.985504,-9.199289,2.170033,1.217991,4.081964,9.451892,-1.678257,9.101201,2.834286,1.352884,1.432080,8.300453,8.809706,-1.682424,4.423584,-2.381051,-2.656735,-7.903791,3.691271,1.319017,2.248681,-3.725047,6.559643,7.017215,-7.915454,-0.573457,-5.233157,-1.537673,9.470370,0.468130,-8.719880,-9.599021,-6.163439,-3.133509,-4.570981,5.606457,-7.813853,0.828671,6.373584,-2.185104,7.514432,-1.913818,0.802488,-7.384614,3.679222,4.802893,0.255538,-1.610162,7.346570,-7.724982,6.597101,6.317368,6.191472,2.414340,9.245904,-9.839660,-9.576328,-8.388340,-3.261506,-5.362001,4.359775,5.291020,2.647526,-6.440682,-1.842717,-3.246855,-4.579485,3.716405,-9.389310,8.821761,4.257984,5.691178,-3.461670,4.387966,-3.949485,-0.929519,9.895519,-5.968702,-3.577315,1.389205,0.907193,-2.169523,6.504195,6.052187,-8.632424,-1.735358,4.241475,4.808325,4.021083,-1.975506,-9.417458,9.427819,-3.793676,6.872172,6.701132,8.979352,-4.703644,-4.885554,2.958677,-1.419991,-6.547568,9.769485,-6.850339,9.885042,8.679723,3.404248,6.781088,-8.326687,-1.172599,-3.036372,-6.305277,4.103526,9.490391,3.847480,0.811814,-5.608718,-7.648279,3.405762,-3.790717,-0.903646,-5.086890,9.681918,9.553474,9.794838,9.336646,9.506239,8.857988,2.570295,-6.393684,-0.147396,-3.792275,-0.276315,-4.108208,8.515786,-8.049533,9.084733,3.990978,-0.158226,-4.255227,-9.887906,4.636702,7.817578,-8.607214,8.657180,2.167815,9.567301,-1.925522,-4.714753,4.616116,7.485811,-4.974444,1.475809,-8.813096,-1.088026,8.373313,-7.201963,-5.968552,-3.403825,-0.633908,0.800017,4.318001,4.490582,-7.411276,-3.180590,5.520229,-9.304444,-7.097522,8.352161,1.225904,6.525364,9.725125,-5.641365,-3.225819,-2.006572,-1.098715,-0.877572,-1.903264,-3.318996,-4.404809,2.752670,-4.733576,2.300305,5.588528,9.703241,-4.173993,5.702715,7.938522,0.900848,-1.509693,-2.496932,6.054342,-0.902709,3.430181,9.829414,-6.566543,0.227458,-7.396145,9.403447,-8.546077,-8.298503,-5.326775,-2.071045,4.394551,0.262633,4.990509,9.363953,-5.255729,7.839714,-0.689169,0.452623,5.117389,1.846563,7.374390,7.880605,-7.087317,-1.157897,8.299564,-4.141915,-5.140861,6.507398,3.857664,0.574278,-4.341290,1.043753,5.183824,0.235237,-8.326605,-5.403064,-1.564527,3.464802,6.011912,9.725043,-4.958858,-5.921941,1.211334,-2.225190,-9.792698,-5.442385,-9.296311,0.207026,7.533882,-4.777152,6.110096,9.338178,-8.429724,-2.983804,1.352556,1.042594,8.830572,-7.507349,5.824121,-7.851300,-1.147948,-6.289579,-2.976255,-6.481078,4.363705,7.810537,3.692601,-1.870053,7.823105,-4.951507,-3.242066,-2.051346,0.348128,-0.375108,-4.263704,-0.781422,2.702850,0.968245,-0.145223,0.373227,5.163683,-6.173635,-6.182544,-8.766709,-4.880464,-6.648736,-9.758819,-8.854408,9.490946,-0.207259,0.662651,1.099608,-2.883750,5.650434,-4.797101,-7.103009,4.932998,1.003748,0.812373,-8.023732,-4.554713,-5.844545,1.620842,-0.377819,7.170422,-1.481668,5.384398,9.410779,5.976056,-4.176047,-2.067998,6.355516,5.123341,0.246288,-9.807635,-1.861001,-5.848204,-9.576681,-4.043815,-9.157793,7.616849,-4.855918,-6.178733,-7.700595,-0.324469,-0.808598,7.195448,4.492255,-2.317526,2.849462,-7.705784,7.956120,-8.518385,-3.183421,-5.669370,-9.953037,-6.185226,-1.608505,5.761295,-8.389518,3.368181,-9.115706,-5.202343,4.454467,-3.321746,9.005020,1.293052,1.234492,-8.022180,-9.793646,-5.278102,8.764707,8.906706,-9.666519,-2.652758,3.808348,9.631923,1.318843,5.759344,-4.260295,4.965945,-3.824298,-2.913368,9.416767,9.034322,4.796768,-7.375370,-9.732352,-9.433872,-4.868870,0.131325,-4.992879,2.953040,-9.761234,-1.059229,-0.057418,6.554176,-0.696147,-3.536190,-3.139760,2.601644,-2.712279,-8.505156,-6.347924,3.747797,-3.611265,-4.329276,9.550202,-4.627915,-1.195482,-5.999070,-6.914546,3.004261,4.132687,-3.056512,8.378227,2.263432,-8.095693,7.292813,-4.366351,9.918268,7.902251], dtype = "float32")#candidate|4628|(1078,)|const|float32
const_4629 = relay.const([9.079495,-7.872777,4.091500,4.030997,-9.321026,1.623368,-2.388291,-1.005108,-9.071210,-0.032597,6.074554,-5.969188,9.382583,-8.707692,-9.154405,-6.953494,5.557620,8.106883,4.522668,7.085118,6.593997,3.202816,-7.489181,4.019396], dtype = "float64")#candidate|4629|(24,)|const|float64
var_4630 = relay.var("var_4630", dtype = "float64", shape = (1, 14))#candidate|4630|(1, 14)|var|float64
var_4631 = relay.var("var_4631", dtype = "int64", shape = (756,))#candidate|4631|(756,)|var|int64
var_4632 = relay.var("var_4632", dtype = "float32", shape = (220,))#candidate|4632|(220,)|var|float32
call_4626 = relay.TupleGetItem(func_2548_call(relay.reshape(var_4627.astype('float32'), [4, 4, 2]), relay.reshape(const_4628.astype('float32'), [1078,]), relay.reshape(const_4629.astype('float64'), [1, 24]), relay.reshape(var_4630.astype('float64'), [14,]), relay.reshape(var_4631.astype('int64'), [756,]), relay.reshape(var_4632.astype('float32'), [220,]), ), 5)
call_4633 = relay.TupleGetItem(func_2555_call(relay.reshape(var_4627.astype('float32'), [4, 4, 2]), relay.reshape(const_4628.astype('float32'), [1078,]), relay.reshape(const_4629.astype('float64'), [1, 24]), relay.reshape(var_4630.astype('float64'), [14,]), relay.reshape(var_4631.astype('int64'), [756,]), relay.reshape(var_4632.astype('float32'), [220,]), ), 5)
bop_4658 = relay.minimum(bop_4620.astype('uint8'), relay.reshape(var_4619.astype('uint8'), relay.shape_of(bop_4620))) # shape=(5, 13, 6)
func_1755_call = mod.get_global_var('func_1755')
func_1759_call = mutated_mod.get_global_var('func_1759')
var_4662 = relay.var("var_4662", dtype = "float32", shape = (616,))#candidate|4662|(616,)|var|float32
call_4661 = relay.TupleGetItem(func_1755_call(relay.reshape(var_4662.astype('float32'), [8, 11, 7]), relay.reshape(var_4662.astype('float32'), [8, 11, 7]), ), 0)
call_4663 = relay.TupleGetItem(func_1759_call(relay.reshape(var_4662.astype('float32'), [8, 11, 7]), relay.reshape(var_4662.astype('float32'), [8, 11, 7]), ), 0)
uop_4670 = relay.cosh(var_4618.astype('float64')) # shape=(5, 13, 6)
var_4685 = relay.var("var_4685", dtype = "float64", shape = (5, 13, 6))#candidate|4685|(5, 13, 6)|var|float64
bop_4686 = relay.floor_mod(uop_4670.astype('float64'), relay.reshape(var_4685.astype('float64'), relay.shape_of(uop_4670))) # shape=(5, 13, 6)
func_3705_call = mod.get_global_var('func_3705')
func_3713_call = mutated_mod.get_global_var('func_3713')
var_4709 = relay.var("var_4709", dtype = "float32", shape = (432,))#candidate|4709|(432,)|var|float32
var_4710 = relay.var("var_4710", dtype = "float64", shape = (66,))#candidate|4710|(66,)|var|float64
const_4711 = relay.const(5.481990, dtype = "float64")#candidate|4711|()|const|float64
var_4712 = relay.var("var_4712", dtype = "float64", shape = (1056,))#candidate|4712|(1056,)|var|float64
call_4708 = relay.TupleGetItem(func_3705_call(relay.reshape(var_4709.astype('float32'), [12, 4, 9]), relay.reshape(var_4710.astype('float64'), [22, 3]), relay.reshape(const_4711.astype('float64'), []), relay.reshape(var_4630.astype('float64'), [14, 1]), relay.reshape(const_4629.astype('float64'), [24, 1]), relay.reshape(var_4712.astype('float64'), [88, 12]), relay.reshape(call_4626.astype('float32'), [220,]), ), 0)
call_4713 = relay.TupleGetItem(func_3713_call(relay.reshape(var_4709.astype('float32'), [12, 4, 9]), relay.reshape(var_4710.astype('float64'), [22, 3]), relay.reshape(const_4711.astype('float64'), []), relay.reshape(var_4630.astype('float64'), [14, 1]), relay.reshape(const_4629.astype('float64'), [24, 1]), relay.reshape(var_4712.astype('float64'), [88, 12]), relay.reshape(call_4626.astype('float32'), [220,]), ), 0)
func_3506_call = mod.get_global_var('func_3506')
func_3510_call = mutated_mod.get_global_var('func_3510')
const_4721 = relay.const([8,-4,3,1,-1,-1,4,-1,-7,2,1,7,-2,2,-3,-9,-8,-8,-4,-2,9,2,-7,-4,5,4,-8,5,-5,-3,7,9,-6,8,-6,-5,-6,-10,3,-7,2,4,2,1,-10,8,-8,-5,-4,4,-5,-6,-7,-4,-2,9,-2,-3,-4,-4,9,-4,-8,1,3,-3,4,1,-8,4,-8,4,-7,6,3,8,1,1,10,-3,-7,1,-6,7,-7,-5,-7,5,-8,-7,-1,5,4,1,-9,-5,1,-10,-8,2,-9,10,-8,9,-6,-8,-9,8,10,7,6,-6,8,5,-6,-3,5,-10,-10,8,-7,-2,-9,10,-2,9,-1,-4,-2,6,5,2,3,-3,-2,9,-5,-6,1,-6,-6,-10,9,-5,4,-8,1,1,3,-6,-2,6,6,-4,9,2,2,-2,8,1,-9,1,10,-3,-3,-1,4,4,9,-6,5,-6,2,7,7,1,10,5,5,6,7,-5,-3,10,5,2,6,9,8,-7,8,1,2,-10,4,-5,1,3,-8,-8,8,5,10,9,1,-4,-4,7,-1,-2,-10,9,8,-7,-2,1,7,-4,-1,-6,9,-9,7,10,2,-6,-1,-4,-4,9,-6,-5,-8,9,-4,-10,-8,-9,-7,-4,2,-1,-2,6,-8,3,-3,8,-9,-1,-5,-7,1,8,2,-7,2,9,-5,-2,-10,-8,5,-4,-2,-7,-7,-9,-8,-10,-7,-9,7,4,3,-4,1,5,5,-10,8,5,2,6,9,2,-3,6,9,1,-6,-6,-6,-2,-4,-9,10,8,7,3,1,3,-6,-5,9,-10,10,1,-9,-8,-5,-5,-10,8,8,3,-7,-5,-3,10,8,-8,-4,-6,-2,-5,-1,4,3,7,1,1,4,1,-10,-3,10,9,-8,8,9,-9,-4,-10,-2,8,-6,-3,7,-2,-4,-5,4,-10,-9,4,-2,6,5,10,-4,-3,7,5,-10,3,1,10,-4,-2,9,-10,-9,4,4,-1,2,1,8,5,2,-3,6,10,2,-4,8,-9,-2,-2,6,-5,5,-8,-1,-2,1,-5,9,-8,7,-1,5,3,6,4,-9,2,6,-9,-5,9,8,-2,9,-9,1,3,-1,-3,-4,-1,-7,-6,-3,9,10,3,-2,-7,6,-9,-6,-4,3,-6,-4,9,-9,4,2,9,1,-1,8,4,-4,2,-7,8,4,4,-10,1,10,1,-1,5,4,-5,-4,8,-3,-9,-9,-10,-1,-2,9,-10,1,10,-4,3,3,-2,-8,6,-1,2,1,2,6,3,-9,4,-6,3,-9,2,6,-8,4,-6,8,4,9,1,10,-1,-9,-1,7,-9,-2,-10,-2,-3,-2,-1,8,-2,-9,-2,-7,2,-8,-2,-8,-3,9,9,2,8,-4,6,4,8,-1,6,5,-5,-10,-8,-8,-7,4,10,9,-2,9,-4,8,-8,-4,8,-2,-2,9,-1,1,-6,5,1,-4,-8,10,5,5,4,10,9,-6,4,-9,4,2,-4,-4,2,5,2,-1,-1,2,6,-1,4,3,3,-1,-3,7,-10,2,10,2,-3,8,-9,-1,-2,7,-10,-4,-6,1,7,-9,-8,9,-8,-9,5,-5,10,9,-10,10,1,-2,8,-8,-1,2,-6,1,-5,5,10,4,7,3,-2,-9,8,9,7,1,-4,1,-5,4,-3,-9,10,-2,-9,-6,2,3,9,6,-1,3,-1,5,-5,7,1,-10,1,10,8,2,-3,10,9,7,-6,-5,-7,6,-1,-1,-10,5,-2,5,3,2,2,-10,-1,-1,7,5,-6,7,5,-4,-6,8,4,-10,9,-2,5,2,-9,2,-8,-2,-9,6,5,-8,-6,1,-10,-4,-4,-1,-10,-4,7,7,-4,-10,7,6,5,-3,10,9], dtype = "uint8")#candidate|4721|(715,)|const|uint8
call_4720 = relay.TupleGetItem(func_3506_call(relay.reshape(const_4721.astype('uint8'), [11, 13, 5]), relay.reshape(const_4721.astype('uint8'), [11, 13, 5]), ), 0)
call_4722 = relay.TupleGetItem(func_3510_call(relay.reshape(const_4721.astype('uint8'), [11, 13, 5]), relay.reshape(const_4721.astype('uint8'), [11, 13, 5]), ), 0)
output = relay.Tuple([call_4626,var_4627,const_4628,const_4629,var_4630,var_4631,var_4632,bop_4658,call_4661,var_4662,bop_4686,call_4708,var_4709,var_4710,const_4711,var_4712,call_4720,const_4721,])
output2 = relay.Tuple([call_4633,var_4627,const_4628,const_4629,var_4630,var_4631,var_4632,bop_4658,call_4663,var_4662,bop_4686,call_4713,var_4709,var_4710,const_4711,var_4712,call_4722,const_4721,])
func_4723 = relay.Function([var_4618,var_4619,var_4627,var_4630,var_4631,var_4632,var_4662,var_4685,var_4709,var_4710,var_4712,], output)
mod['func_4723'] = func_4723
mod = relay.transform.InferType()(mod)
var_4724 = relay.var("var_4724", dtype = "int64", shape = (5, 13, 6))#candidate|4724|(5, 13, 6)|var|int64
var_4725 = relay.var("var_4725", dtype = "int64", shape = (5, 13, 6))#candidate|4725|(5, 13, 6)|var|int64
var_4726 = relay.var("var_4726", dtype = "float32", shape = (32,))#candidate|4726|(32,)|var|float32
var_4727 = relay.var("var_4727", dtype = "float64", shape = (1, 14))#candidate|4727|(1, 14)|var|float64
var_4728 = relay.var("var_4728", dtype = "int64", shape = (756,))#candidate|4728|(756,)|var|int64
var_4729 = relay.var("var_4729", dtype = "float32", shape = (220,))#candidate|4729|(220,)|var|float32
var_4730 = relay.var("var_4730", dtype = "float32", shape = (616,))#candidate|4730|(616,)|var|float32
var_4731 = relay.var("var_4731", dtype = "float64", shape = (5, 13, 6))#candidate|4731|(5, 13, 6)|var|float64
var_4732 = relay.var("var_4732", dtype = "float32", shape = (432,))#candidate|4732|(432,)|var|float32
var_4733 = relay.var("var_4733", dtype = "float64", shape = (66,))#candidate|4733|(66,)|var|float64
var_4734 = relay.var("var_4734", dtype = "float64", shape = (1056,))#candidate|4734|(1056,)|var|float64
output = func_4723(var_4724,var_4725,var_4726,var_4727,var_4728,var_4729,var_4730,var_4731,var_4732,var_4733,var_4734,)
func_4735 = relay.Function([var_4724,var_4725,var_4726,var_4727,var_4728,var_4729,var_4730,var_4731,var_4732,var_4733,var_4734,], output)
mutated_mod['func_4735'] = func_4735
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4819 = relay.var("var_4819", dtype = "bool", shape = (7, 1, 8))#candidate|4819|(7, 1, 8)|var|bool
var_4820 = relay.var("var_4820", dtype = "bool", shape = (7, 10, 8))#candidate|4820|(7, 10, 8)|var|bool
bop_4821 = relay.logical_or(var_4819.astype('bool'), var_4820.astype('bool')) # shape=(7, 10, 8)
func_2829_call = mod.get_global_var('func_2829')
func_2832_call = mutated_mod.get_global_var('func_2832')
const_4825 = relay.const([0.766090,1.056299,-9.293152,3.823878,-6.040802,5.498232,-1.156119,3.302726,-0.090883,4.455556,5.360619,-1.525122,-5.703740,4.808740,-9.620148,1.599136,-1.131493,-5.034658,-6.888663,8.804128,8.438603,-6.958322,-5.033901,5.738180,5.884436,8.866805,3.266456,-7.822320,-0.477530,5.011772,-7.130012,-6.139544,-1.989372,9.043843,-0.022906,6.232344,1.905375,0.530718,3.226109,7.160828,-3.075535,-6.349986,-8.169801,3.297390,-0.936749,4.677903,9.948995,6.073914,-8.229008,7.922047,4.183610,-2.022985,-5.988928,8.026592,-9.923761,4.743288,3.347596,6.465815,-8.835736,-6.344135,9.728830,9.465385,3.424006,-0.937623,4.357951,-0.734054,7.393869,5.836103,0.011325,9.794867,8.333580,-6.762464,-4.035121,-1.807265,-5.271354,-4.058768,-1.719446,3.400842,-9.265245,-1.775908,0.484342,6.862898,2.538929,-9.564095,6.471002,6.311789,-9.661747,5.600354,8.748414,8.179924,-1.207271,8.839158,8.423396,-7.793026,6.702442,1.547488,2.351487,2.447155,-8.472874,1.246411,0.359450,-0.028320,-7.481538,8.777284,-8.416164,-0.490871,-6.920355,8.596004,-4.375505,8.811154,-3.384139,-0.992148,4.568971,2.608037,9.376497,5.801751,2.896047,1.624686,9.477335,0.177538,1.296051,-6.415962,7.754936,-7.142652,1.539712,9.400492,-6.628008,-4.794950,8.563622,6.826461,-8.522070,-7.293799,2.723310,-9.579999,-6.783817,-7.527892,2.370261,4.489957,-8.487171,-8.993314,3.919472,-1.454320,6.232722,-4.869611,-6.161527,7.833820,-5.863008,-3.739707,5.272034,0.175142,-2.945893,-4.582336,-5.121279,-6.990122,2.753617,0.496155,3.260991,-0.069770,-5.264491,9.420597,0.536538,6.185073,-7.770697,3.333948,-3.730476,1.433932,-1.833560,-8.412967,2.757291,3.437183,0.788522,-8.472773,-8.404013,1.219736,6.643436,4.357678,-4.864343,-7.555086,-5.083637,-3.281363,-2.129659,4.867369,0.386346,-5.335541,0.971012,4.779571,-1.507302,3.247124,4.286795,4.357793,2.370393,8.870330,7.379168,9.125504,8.555079,1.569536,0.767843,-4.552742,-8.173830,-5.219458,-9.307141,0.334813,2.467502,-5.309394,6.336486,1.731530,-2.798604,-6.919565,-3.026788,-1.560290,-9.808226,-9.682564,-5.398270,-7.544866,5.732857,-2.705399,3.920957,-8.561751,-3.237603,9.995743,-9.558863,6.503768,5.635749,-8.451040,7.365014,9.380535,-8.509450,1.499803,-4.201786,-1.972551,-7.606228,9.763577,-7.222281,-6.522137,-0.772645,-7.659769,-4.351495,-6.572778,-7.966949,-4.575289,8.243686,8.085847,5.037110,-9.738224,-1.516700,3.043441,-8.135417,-5.771946,-5.504769,8.313736,-4.580645,0.868108,9.364645,-4.836677,-4.669633,0.245282,-1.436777,-4.121961,-1.004048,6.336671,9.321940,9.192214,-4.789822,-2.871529,7.055450,7.437983,9.767941,-2.013130,-6.531135,-8.448526,1.485411,-2.346775,-9.015031,4.019587,-2.721283,-7.805058,7.567260,6.971017,7.152083,-5.777702,2.230502,0.439529,-4.758041,-5.597020,-3.576123,-8.176277,-2.913705,-2.320187,3.767396,8.708774,-9.482583,4.040668,-7.628026,1.885388,-4.905914,-3.953787,-3.151295,-1.605840,0.505214,6.568054,-9.194824,-9.872812,7.016849,9.827441,-3.745397,-3.587511,-1.685427,0.496201,-4.449429,6.643729,-6.777541,-6.734384,0.798558,-0.505488,1.580609,-9.625586,1.714516,1.853034,0.576311,7.990270,6.258267,9.024272,5.324353,-0.665922,5.737312,-7.316666,0.271267,-4.071021,2.194984,-2.482675,4.434890,-3.759830,4.692401,6.645054,8.481872,-9.599903,-7.408142,-1.192035,-0.525513,6.363982,-3.756590,-7.230127,-2.651069,-8.983968,3.096762,3.915688,-1.706936,9.796310,8.020714,-6.751120,7.494059,0.458196,-0.440440,8.498342,4.752092,1.114121,-6.976211,3.563651,-0.390185,-6.409060,-5.586649,-2.211470,-9.191190,-7.704230,-4.001626,-7.492559,-0.264237,2.400245,6.769094,6.317018,1.217164,8.867235,-1.150412,2.546989,-4.218335,-3.163551,4.414443,7.947596,-2.487522,9.063598,7.414555,-2.164697,9.675016,-6.767973,-8.742984,1.450513,-7.062195,7.741561,-0.312501,-4.075611,5.627857,5.922121,8.792001,-1.481585,7.508981,3.924844,0.117550,-4.810252,9.661107,2.796500,-2.522320,-0.005814,0.544190,-6.490924,-5.735940,9.343087,1.527423,-6.024533,1.226410,7.107830,-3.604299,9.857223,-0.155155,-1.368002,0.953132,-2.955264,3.924441,-2.546430,-7.972701,-0.526025,7.548236,-1.725474,-4.342852,-0.094777,4.944867,-6.209343,-9.451500,9.368163,8.110923,-0.318412,-0.794165,8.310740,6.867212,-3.474133,-3.657783,-7.108609,-8.261525,-6.041931,2.407573,0.904235,-4.930256,-7.945746,4.586650,-9.123521,-6.688196,2.468318,8.226876,-2.996102,8.841272,-2.344038,7.756779,5.214125,-8.774643,-1.791510,-3.321057,-4.756860,-0.785042,7.264522,7.849487,-8.128305,2.291970,-8.280059,-1.904201,5.421481,8.420070,5.912242,5.038230,3.704038,6.148295,6.056247,7.938861,-2.210549,7.917555,5.830668,4.086184,-7.844469,-0.136261,1.836124,1.346069,-1.003691,8.926732,8.121701,-2.554382,-9.929569,-5.644228,-0.664051,2.119355,9.513093,-0.420639,9.292383,1.501471,-9.767201,-4.440326,-2.669922,6.511465,8.251254,4.186596,4.967291,7.416277,3.485956,3.042667,8.805126,-1.740637,6.093655,9.275135,6.492385,-3.802541,-6.166866,5.959926,-3.292739,3.574860,4.808767,-2.422727,5.692589,-5.449975,-0.273151,-9.023985,2.567653,-3.287302,8.113663,3.492922,-4.391273,6.291673,9.330923,-4.005157,0.227937,3.079483,-3.250737,0.329517,7.013655,-9.535165,8.789706,1.941991,2.984608,-5.015912,9.132516,9.547843,7.785754,5.718980,-5.368547,6.022488,3.272790,-8.195960,-7.578702,3.368160,-5.540458,1.085532,-2.434770,-6.174323,8.300163,2.783555,-6.864080,-5.500507,1.989374,-2.808368,9.459075,5.727034,-6.866689,-8.862295,5.407945,-6.132963,6.330138,5.886056,-1.102152,-8.143870,-6.370978,3.616336,-3.662189,5.006060,5.112981,8.363742,7.932061,8.716936,8.796225,-7.694552,-1.398395,-0.035190,4.321075,0.557698,8.473345,8.327207,2.622274,-4.838406,-9.058698,3.817342,-0.473648,3.959930,5.664043,7.511724,-0.420839,1.291506,4.799980,8.077308,-1.139379,-1.379639,-0.711944,0.700844,-9.944216,4.886839,2.352263,-3.105488,-6.470158,1.999250,4.991821,-7.994770,4.548389,-2.587288,6.373933,6.793013,-7.362993,9.273288,3.979382,9.694705,-6.066148,-3.981327,9.992487,2.044238,-2.363397,-9.617347,-7.333683,-4.582503,-9.386921,-5.262723,-6.372829,7.280937,2.084218,4.122791,-6.613652,8.954004,6.911818,-9.444449,-1.336936,-7.597680,1.969888,-9.152680,7.654915,6.905514,9.123939,3.094752,3.211103,0.044517,9.462309,8.586289,5.824985,7.108373,-0.919272,6.308882,9.269817,-6.938717,-6.523158,-7.760614,1.657795,-8.596656,6.840277,-5.279630,-6.344334,-1.352206,-8.633986,9.714071,-4.287762,-5.840754,3.111678,2.850540,-5.736717,4.685922,7.636787,-3.305941,9.754469,9.584641,6.658085,8.956326,2.854566,8.592330,4.484911,9.029951,2.439526,-5.987857,-9.730139,-8.364931,1.040967,2.611568,6.884081,8.142056,-8.037880,-4.561154,-6.490865,-4.675483,4.185921,8.711458,-6.783170,-6.192254,4.116752,-4.222177,-5.865384,-0.644263,-9.019836,-4.472796,3.716038,-2.095767,7.683042,1.216210,-7.121641,0.455533,-9.846648,-1.448053,-7.439035,-3.859643,-2.165754,5.303058,8.589058,-1.291433,5.378813,-9.954091,3.806860,6.935805,1.469121,-2.734900,-9.808020,0.573909,0.349571,4.073239,-7.828664,0.239641,6.912070,0.452785,-0.426638,-2.849627,4.241021,-9.982256,-4.806791,7.233527,8.619883,1.694301,7.303057,-8.572137,5.741209,-1.938171,6.844191,-1.473561,-1.801384,-1.478309,7.583387,8.211224,8.929655,8.050202,1.028054,9.573171,7.889321,-9.833702,1.858199,2.393223,-6.098264,-5.782658,3.101541,-3.301464,-9.670333,-0.354229,-3.802188,-5.227803,7.712305,6.429213,-7.094535,7.378236,9.934859,6.103889,-8.424283,9.830799,-6.791067,0.699056,-8.096420,-2.173314,-0.445740,3.557269,-2.419983,-9.896762,8.840089,-1.043923,-2.725481,1.235555,2.558230,-6.151113,9.427634,-5.639660,9.276256,9.511052,-9.086582,-0.728107,-5.190156,9.254602,-8.117904,5.943068,4.480479,9.852615,2.569134,3.392091,1.857461,8.384265,-1.084675,2.100763,5.314428,4.941517,-8.566262,-3.635427,4.870887,8.384091,4.129393,-2.061719,-6.700712,-5.475751,-2.153829,-6.699309,0.573571,2.671119,4.624849,1.136184,4.499544,-7.215221,-4.968451,1.663876], dtype = "float64")#candidate|4825|(819,)|const|float64
call_4824 = func_2829_call(relay.reshape(const_4825.astype('float64'), [7, 13, 9]))
call_4826 = func_2829_call(relay.reshape(const_4825.astype('float64'), [7, 13, 9]))
const_4827 = relay.const([[[False,True,False,True,True,False,True,False],[True,False,False,True,True,True,False,False],[False,False,False,True,False,True,False,False],[True,False,False,True,True,True,True,True],[True,False,False,False,False,False,True,False],[False,True,True,True,True,False,True,True],[False,False,False,True,True,True,True,False],[True,True,True,False,True,False,False,False],[False,False,False,True,False,True,True,False],[True,False,True,False,False,True,True,True]],[[True,False,False,False,True,True,False,False],[False,True,False,True,True,False,True,False],[True,False,True,True,True,False,False,False],[False,True,False,True,False,False,False,True],[False,False,True,True,True,True,True,True],[False,True,True,False,False,False,False,True],[False,True,False,False,True,False,False,True],[False,True,False,False,True,False,False,True],[False,True,False,True,True,True,True,True],[False,False,True,False,False,True,True,True]],[[False,False,True,True,False,True,True,False],[False,True,True,True,False,True,False,False],[False,False,False,True,True,True,True,False],[True,False,False,True,False,False,False,False],[False,True,False,False,True,True,True,True],[False,False,True,False,True,True,True,True],[False,True,True,True,False,False,True,True],[False,False,False,False,False,True,True,False],[False,True,False,True,False,True,True,False],[True,False,True,False,True,False,False,True]],[[True,True,True,True,True,False,False,True],[False,False,False,False,True,True,False,False],[False,True,True,False,False,False,False,False],[False,True,False,False,True,False,True,False],[True,False,True,False,True,True,False,True],[False,False,False,True,True,False,True,True],[True,True,True,False,True,True,False,False],[True,False,False,False,True,True,True,False],[False,False,True,True,False,True,False,False],[True,False,True,False,True,True,True,False]],[[False,False,False,True,True,False,True,False],[True,True,True,False,True,False,False,True],[False,True,False,False,False,False,False,True],[True,False,True,False,True,False,False,True],[False,True,False,False,True,False,False,False],[True,True,False,False,True,True,True,False],[False,True,False,True,False,True,False,True],[True,False,True,False,False,True,True,True],[False,True,True,False,True,True,False,True],[True,True,True,False,False,True,False,False]],[[False,True,True,False,False,False,True,True],[False,False,True,False,False,False,True,False],[True,False,False,True,False,True,False,True],[False,True,True,False,False,False,False,True],[True,False,True,True,False,True,False,False],[True,True,False,True,True,False,False,False],[False,False,True,False,True,True,True,True],[True,True,True,True,True,False,False,False],[False,False,True,False,True,True,False,False],[False,False,False,True,False,False,True,True]],[[False,True,True,False,False,True,True,True],[False,True,True,True,True,True,True,True],[True,False,True,False,True,True,True,True],[True,True,False,False,True,True,True,True],[False,False,True,True,True,True,False,True],[False,True,False,True,True,True,False,False],[True,True,True,False,False,False,True,True],[True,True,True,False,True,False,True,True],[True,True,False,False,False,True,False,False],[False,False,True,True,False,True,False,True]]], dtype = "bool")#candidate|4827|(7, 10, 8)|const|bool
bop_4828 = relay.less(bop_4821.astype('bool'), relay.reshape(const_4827.astype('bool'), relay.shape_of(bop_4821))) # shape=(7, 10, 8)
func_2829_call = mod.get_global_var('func_2829')
func_2832_call = mutated_mod.get_global_var('func_2832')
call_4835 = func_2829_call(relay.reshape(call_4824.astype('float64'), [7, 13, 9]))
call_4836 = func_2829_call(relay.reshape(call_4824.astype('float64'), [7, 13, 9]))
output = relay.Tuple([call_4824,const_4825,bop_4828,call_4835,])
output2 = relay.Tuple([call_4826,const_4825,bop_4828,call_4836,])
func_4840 = relay.Function([var_4819,var_4820,], output)
mod['func_4840'] = func_4840
mod = relay.transform.InferType()(mod)
var_4841 = relay.var("var_4841", dtype = "bool", shape = (7, 1, 8))#candidate|4841|(7, 1, 8)|var|bool
var_4842 = relay.var("var_4842", dtype = "bool", shape = (7, 10, 8))#candidate|4842|(7, 10, 8)|var|bool
output = func_4840(var_4841,var_4842,)
func_4843 = relay.Function([var_4841,var_4842,], output)
mutated_mod['func_4843'] = func_4843
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5132 = relay.var("var_5132", dtype = "float32", shape = (3, 5, 13))#candidate|5132|(3, 5, 13)|var|float32
uop_5133 = relay.exp(var_5132.astype('float32')) # shape=(3, 5, 13)
func_3445_call = mod.get_global_var('func_3445')
func_3452_call = mutated_mod.get_global_var('func_3452')
var_5141 = relay.var("var_5141", dtype = "float64", shape = (1280,))#candidate|5141|(1280,)|var|float64
const_5142 = relay.const([0.061997,-9.905135,-0.532582,3.043683,8.785874,-4.628416,-4.239585,-5.235957,-0.224610,1.622837,6.266701,-9.021589,-1.383591,-0.546643,-3.845277,2.469954,0.365749,-8.043870,9.400505,-2.765690,5.800163,6.528685,-4.728772,-0.278568,-8.469590,-1.204495,-0.383914,1.126915,-7.896096,-6.548536,-8.619265,-6.646557,9.872392,5.200381,-4.159372,4.956180,4.320294,3.095512,-1.304071,-0.893284,2.048972,3.408156,2.370074,0.655110,-3.927527,-8.160933,0.221902,9.443733,-1.057103,6.625132,-9.204021,-9.642768,9.926265,1.080072,0.190374,-8.173411,-1.022152,-5.324186,7.564335,1.462713,-3.492299,-9.406446,-5.484214,-3.513096,2.462118,9.613110], dtype = "float64")#candidate|5142|(66,)|const|float64
const_5143 = relay.const(7.315018, dtype = "float64")#candidate|5143|()|const|float64
const_5144 = relay.const([-3.633836,-0.552735,-8.349082,-8.652018,-4.041369,-1.683702,-2.108453,-6.766685,-0.816067,2.187120,-6.010565,5.648840,-8.003586,4.922430], dtype = "float64")#candidate|5144|(14,)|const|float64
const_5145 = relay.const([-6.351147,6.448128,-8.955318,-0.146585,8.741495,2.894864,-4.160817,3.060004,6.733249,-2.756002,5.713058,4.493115,-0.752677,-6.476215,-3.754290,5.003238,8.856679,-9.418549,-1.938508,-7.421404,1.133996,1.985033,9.754716,-3.735745,1.996330,-4.337479,-7.377048,9.504175,-2.730751,-4.311738,4.058989,-0.999331,-7.287664,-6.905726,8.445997,7.806334,5.656589,-7.951559,6.980659,0.544748,6.206169,3.672622,2.527597,-7.793768,-6.157207,-2.238237,-3.230573,-0.390561,8.945102,-4.821629,9.299877,4.317175,-2.389520,8.979972,-1.183145,9.096405,8.304975,9.747789,4.997618,-3.325781,6.571326,4.932509,9.054974,-9.003864,-9.822845,-0.135464,-4.457373,-1.452163,1.175580,-9.880732,-8.957502,-9.438424,9.317264,-1.872450,4.524048,-4.992494,-9.833116,0.470111,-0.018602,-3.962019,-4.496700,-4.083273,7.449763,7.035753,7.939538,-5.367495,9.808628,4.803118,8.096273,1.455105,-8.233441,3.359814,3.362556,4.080752,-5.179186,7.576212,-6.184150,-9.617849,-8.447422,-3.135039,0.172081,-7.367711,2.873274,2.070013,5.210611,-9.155740,3.726833,-1.774051,-4.152517,-1.824491,-4.588134,8.803292,3.282678,-7.588175,1.820818,3.489511,3.790477,-0.833099,0.593886,9.387812,-4.126808,9.579340,2.917914,8.495261,1.636615,2.320125,9.113957,-1.257559,-2.537951,-9.453880,0.949932,-9.741347,3.543042,-1.535720,6.078739,-1.078038,4.518514,7.085422,5.501147,-3.167039,-8.862649,-0.996261,-2.122598,-2.112198,1.491997,-9.315856,9.542594,-4.751553,3.018459,3.942776,-5.208130,2.124836,5.562863,7.647871,2.439498,6.959961,5.187588,8.211697,-1.048878,-4.778754,-7.469178,5.212575,2.573757,4.642090,-4.612687,3.193943,-4.516509,-2.917038,0.984865,-4.148987,2.560705,-2.848087,-8.472339,-6.728294,-7.396874,-6.883132,1.431720,-7.045199,6.918324,-0.392955,-4.990930,2.174061,-4.933137,9.251603,0.621457,-6.698591,2.331055,8.696948,-3.980222,4.062878,-1.868098,4.709395,0.879067,-1.470488,0.596148,-9.738860,2.164630,-6.086532,8.886195,3.493888,-0.071365,9.730142,6.661423,6.830331,-8.692977,-8.363253,-9.400180,-0.244878,5.447610,8.788303,9.861813,-9.104898,8.583978,-1.229199,-8.806519,9.516157,5.273062,8.085153,6.530725,-0.212369,8.193925,-2.887004,4.242672,3.507863,2.430760,2.783568,-0.666128,9.461009,9.367426,-2.020842,-2.632162,-8.933973,-3.919867,-0.076001,-9.837564,1.429854,5.604740,7.152549,-4.324066,8.978384,1.090886,8.861549,-3.411229,5.432338,-5.487045,-0.032403,8.029884,8.831834,-1.596387,8.175116,-7.060553,-5.934536,-3.335656,-3.441436,-9.900689,9.702622,6.650254,7.290064,3.534840,7.352992,-6.749944,-7.282145,-2.083661,1.585363,3.674262,4.713575,7.999508,9.953884,6.143844,-3.151855,4.396972,-7.583291,-8.641455,4.120063,-9.847907,-0.507077,-1.262945,0.417706,-3.604504,9.958852,1.601158,6.370746,-8.849200,7.088140,4.316709,2.268397,3.506378,7.629116,9.967923,9.984080,6.286354,-5.827585,9.808688,-5.787430,-3.264456,7.508629,-6.598050,-5.947143,-2.921607,-8.447254,6.622413,-5.262264,9.651918,5.934706,-8.450335,1.821487,-9.564543,7.895408,1.651625,0.292823,5.354507,8.797874,5.277246,-1.433378,3.690447,3.002343,-6.150187,1.367697,8.708322,-9.660453,-0.227021,1.211834,2.284191,-5.861371,-9.150895,-3.107228,-7.957080,4.686207,1.794140,0.908535,6.988260,-2.379058,0.855854,9.900806,-8.145699,-1.579305,2.628236,4.895846,8.617071,8.954989,3.459521,4.717173,-0.841491,8.586676,7.351763,-5.720246,-6.619771,-2.138197,1.038187,-2.289307,-8.656374,-4.663998,7.017946,-9.453072,7.059490,-0.983940,-3.721915,-4.924883,2.255453,-0.472109,1.141525,5.854297,1.438580,4.790311,1.034642,-0.351471,-1.271733,-5.813611,-2.184544,-3.526805,-4.655383,-3.260645,7.521123,7.376891,1.675549,5.769711,4.780553,-3.255144,-9.397829,8.036693,7.053012,2.517983,-4.767407,0.867280,5.017161,-2.720957,8.142102,-8.056878,1.829832,0.610378,8.340614,7.808003,6.863708,-2.500481,3.277212,9.916080,7.164040,3.257517,-9.869836,7.298664,-1.454713,-6.019318,-7.981444,-0.824764,-8.982506,-0.630303,-9.355682,-5.546262,0.364014,-0.663227,-1.533121,-6.284603,-5.991578,3.206308,-1.841596,-0.231384,-4.698069,-8.123626,7.243956,8.973010,-0.500283,-0.396998,8.893698,-3.109662,3.734293,-8.535479,9.453278,6.387423,-2.338127,-0.917432,9.125643,8.095012,4.767681,7.694000,9.969021,5.785907,-5.546851,-8.265621,-5.894696,9.678849,6.418419,-4.678259,-4.484656,9.501868,-1.109558,8.238815,-4.198282,-9.907849,4.111733,4.551051,-7.439607,-5.938183,-2.924679,-7.185602,-6.855884,-5.915526,4.966585,-5.698077,-1.512384,-6.668947,9.596216,3.439598,3.993838,-6.642838,3.609387,7.511361,-3.194065,-7.547460,-1.456582,1.024996,-2.778298,8.603403,-3.124711,1.941118,8.596247,-0.047201,-9.532070,-4.264026,1.089893,-9.615177,-3.641751,-2.455025,4.793107,3.190801,2.797941,-6.074543,-2.314746,-0.129392,2.337665,-2.251539,3.206002,-6.277558,-0.189066,4.721826,7.448209,-2.120990,6.235533,-2.761028,1.639499,0.829612,-7.728860,7.991978,4.293993,-0.976911,7.927241,3.789300,2.298271,-3.728535,-9.078856,4.608930,8.849563,-4.227078,-7.116547,-7.361208,-9.216583,-7.840229,2.765901,-2.072841,0.046542,-7.120216,3.762476,-9.620820,2.123642,-1.592835,-8.449699,7.158614,1.388296,7.661291,-4.764915,6.577779,8.828241,5.980483,5.775422,9.453481,-0.139260,-0.692864,3.640264,-8.363437,9.264688,-3.901368,-7.486534,-3.604444,9.174298,4.595655,7.044214,8.056536,2.892948,0.829716,-5.620277,4.403290,-8.628321,-8.395895,-6.228185,-5.808551,9.868263,-5.069646,-3.842787,9.582038,-9.218993,3.937158,5.542380,-7.466723,-0.453634,-0.201074,-6.748514,5.145603,5.338381,-4.882913,8.518013,8.121417,3.258989,-6.664573,-9.279394,-3.684554,8.580575,-2.679438,-8.557893,4.075910,6.136425,5.286688,8.676955,-2.757451,-6.911259,7.579951,-8.148762,-7.623208,-9.478835,6.229683,-7.337246,8.840622,-2.515795,-0.603991,-8.544657,7.644248,6.957315,7.125518,4.684684,1.089766,-0.910019,9.084255,-3.573421,-3.994510,3.260269,8.647441,3.181418,5.469238,6.009162,-0.770062,7.981291,0.071022,-5.992865,2.559366,-8.768248,3.642998,4.543614,0.090825,-4.298942,-9.775340,-4.832287,0.265182,-6.120522,3.932777,0.070175,1.641084,7.947354,4.544538,8.681796,3.839789,-0.220324,-6.091966,-3.000754,2.846220,-5.363637,-8.168590,9.407280,-0.023388,-6.768405,6.290260,-0.486406,-9.661471,3.555293,9.845096,-0.703568,7.660678,-6.658896,0.976335,4.374718,7.136652,-3.198995,-6.202577,-6.276972,-7.225108,-1.103609,-9.694669,-3.017036,-3.013777,-7.695935,3.325596,1.419589,2.395771,-4.780567,-5.674829,1.937458,1.875680,8.576619,-7.637710,2.300955,-8.640130,-8.341277,-1.709084,3.522373,7.895572,-2.445243,-1.091352,7.262164,3.863949,-2.440511,0.304872,-0.861000,-4.624320,0.400045,2.938943,9.991914,-0.774629,-1.037012,-4.473818,-9.324752,8.658232,-2.588922,-6.079507,-2.592135,-9.104702,6.858741,-7.394238,-7.241477,7.137187,9.490461,-3.737561,-1.578380,6.614631,2.435866,-4.150519,5.865626,7.180282,0.748472,0.257079,7.587504,5.595490,7.379330,-2.385969,-4.346492,0.232222,-5.607225,-4.356098,5.128356,6.198896,6.959153,-1.347392,-3.231667,1.311008,3.429010,5.289387,-3.572736,9.926833,-2.645094,4.030483,1.895874,5.839131,3.771198,-7.231322,4.974307,5.797684,9.957692,0.777812,3.039631,0.271479,4.586915,-2.776508,8.298626,5.298560,9.985753,-3.472609,-6.650434,1.702701,9.796975,-6.540121,2.272988,-4.895028,2.645123,-3.204289,-5.097683,7.725241,-2.447170,4.858834,0.800920,-6.625735,9.206193,1.707615,-8.176191,1.373253,-4.096737,-9.143932,-5.092124,-4.377592,-7.760342,-0.443480,-7.912189,-0.091572,6.297487,6.237294,-5.300719,-0.568550,-4.829960,0.158464,-0.406641,5.078180,-4.542890,-3.006114,-0.236084,-9.673322,-0.512123,6.857643,-9.451531,8.321903,9.562094,-8.738716,-8.998353,3.786621,-4.689517,5.814556,-7.448547,1.285604,-3.136704,0.047200,-7.775622,2.231876,-5.612733,-9.221684,-6.835881,8.056012,-9.468367,-3.887076,-8.584991,8.632675,-6.009868,8.232842,9.142465,-5.365536,-7.322008,-8.489993,6.897374,8.185592,-4.900965,4.021625,-7.198885,-4.579108,-7.805139,3.352366,3.972466,-3.036359,-0.895616,-0.640995,-4.117550,6.523416,-5.127993,-8.352893,-3.955212,6.485815,6.430580,3.101650,5.681701,-3.721612,-3.333855,-6.165397,-4.709688,-0.046005,-8.483394,3.395172,2.170181,-5.462164,-6.335477,6.445255,-4.145697,-5.502867,3.565456,5.193050,9.397093,5.670184,-0.071340,0.498786,-4.765694,2.268632,-3.184564,1.910076,7.384646,8.523453,-8.954242,-3.798517,-0.908257,-0.212681,3.725401,-0.649323,5.304958,-5.202745,-6.058123,7.459049,8.810951,5.234608,7.232506,6.675669,-6.721846,-3.386330,-1.027967,-8.016568,6.897236,-3.073682,-1.122858,-6.684499,-9.505295,1.749779,-5.165999,0.939778,7.434610,-2.781600,-6.480132,-9.578939,-4.483479,3.145456,8.555493,2.965679,8.085986,8.018198,0.839723,3.372897,3.246610,-2.047323,3.611523,6.400316,-0.304957,6.481187,-1.976383,-7.615054,6.753336,0.061649,7.361803,8.409495,-9.284308,-4.819714,-2.930559,-5.493930,3.152952,-5.906535,-9.411509,5.958467,4.162758,9.593159,-5.782025,-4.920912,-8.284173,8.732395,1.857686,-9.924243,6.220516,0.044035,-8.645608,1.804168,-9.349590,8.174603,-5.259406,2.266649,4.908817,8.293869,-4.002910,9.210382,8.400521,-1.694684,-1.916615,-9.447474,-5.146198,0.058583,1.563814,-7.746582,-9.397069,3.048879,-8.677842,-5.455823,3.925872,-7.297000,-0.803706,-6.238741,-7.142548,-1.708211,7.912780,-1.935870,-9.956508,3.229328,3.011319,2.683476,2.990388,-7.695937,6.508534,1.370102,-3.192108,6.308190,-6.302852,-4.173594,-2.102692,4.798539,2.522605,0.316994,0.345026,-6.042455,-1.108007,8.334885,-1.239543,-0.491046,-8.468403,-8.164996,7.845603,5.364562,-0.811560,-7.449816,-8.582815,-7.156731,1.480609,8.229662,-8.460333,8.195113,9.878583,-6.616102,-9.593487,-6.078164,6.021444,8.472588,-2.777609,-8.842079,-6.937537,3.396668,-2.450921,1.330476,-8.978974,-1.411065,-0.994812,5.991819,-1.684743,1.355978,-2.940497,-9.399198,-2.525813,-5.302081,-2.486444,5.497393,1.920049,-3.345612,6.852506,-3.666583,-9.910826,-3.042810,-8.407722,0.103792,-7.778108,-9.870660,-4.324311,-2.804410,-3.549908,6.447068,4.624390,-3.921023,0.910072,-2.191174,-6.785458,-2.564298,8.970855,5.748300,6.882535,2.981478,6.339082,-9.594114,-1.192002,-4.794468,-4.165607,2.411890,9.732088,-6.143395,-1.303045,0.778658,6.600857,-1.165777,-1.820484,8.855978,-1.522899,8.026611,-8.676244,1.301013,-3.879143,3.187650], dtype = "float64")#candidate|5145|(1056,)|const|float64
const_5146 = relay.const([[3.034136,3.985641,8.735591,1.856793,-9.095202,7.880276,7.003138,-5.040294,9.989091,-9.387836,4.055909,5.337425,5.694124,5.691450,5.319878,9.180961,6.577710,9.054080,9.393312,-5.183017,-9.165658,3.330234,8.627118,2.807337,-5.917502,5.797966,-6.159462,0.255679,7.854002,-6.397064,-1.527608,8.494534,-9.304568,3.130362,7.861189,4.552651,3.000802,4.436171,-6.788378,-4.958945,9.046234,-2.071525,-9.832700,3.661902],[4.844060,-2.605277,0.550191,9.452390,-5.685429,-1.440707,-9.703034,3.029781,-8.733937,-7.164294,6.320171,-1.779706,-1.880527,1.503134,-5.172789,-4.704713,-7.177481,7.491539,-7.304854,5.070453,4.322430,2.522654,-5.154772,-0.949277,3.860106,2.481472,2.817313,8.790351,1.245854,-6.084446,-2.437442,8.432724,0.341813,-6.384833,8.315905,-1.422165,5.213045,-2.746065,-5.432174,6.816629,6.152049,2.161107,-5.131725,-3.447683],[5.175315,9.153726,6.420859,-1.875531,6.661200,-5.849626,-4.608806,-6.883591,-0.339761,9.780845,3.634009,6.818372,-7.748172,1.828451,9.791697,-2.854479,-3.249067,-3.420432,-8.645993,-7.854405,-5.637540,-9.398436,0.696144,-7.668574,6.265009,-2.575837,-7.168836,8.552963,-8.123834,4.431427,-0.118419,-5.814090,9.110515,-9.720520,1.258435,-2.340265,3.364605,7.459290,4.811695,6.382035,0.664928,4.109022,1.726323,-7.851660],[9.586124,2.320761,6.774057,-5.501496,8.570597,-8.510836,2.931548,-0.508892,9.467547,7.624273,2.396891,6.844441,-7.668695,4.475109,8.145762,-2.698382,4.609784,-0.356310,0.697598,-3.547397,4.702758,-4.037961,1.622162,-9.195597,-4.771078,0.352765,-9.335390,-9.642314,0.495386,-5.812075,-9.825542,5.880683,-2.733521,-0.740065,-0.539883,-4.960760,-8.799480,-4.447704,1.149809,-2.770184,-1.155334,-3.762368,7.543011,2.466018],[-4.796263,5.778305,-8.259733,-6.746366,5.272279,9.493737,8.684759,6.269374,-8.545174,7.969923,-2.860690,2.509267,9.492211,9.554363,-4.004828,3.054077,-7.338911,3.644422,2.415614,-4.646978,4.451086,-1.806573,1.372072,-4.591749,5.384524,-3.700283,4.182312,-2.193843,8.544513,6.604360,8.705684,-8.696369,-6.067829,-0.829161,6.084776,-1.584591,-4.720058,-0.564013,-1.803187,0.116888,-0.910524,-8.187140,7.698723,2.733065]], dtype = "float32")#candidate|5146|(5, 44)|const|float32
call_5140 = relay.TupleGetItem(func_3445_call(relay.reshape(var_5141.astype('float64'), [16, 10, 8]), relay.reshape(const_5142.astype('float64'), [66,]), relay.reshape(const_5143.astype('float64'), []), relay.reshape(const_5144.astype('float64'), [14,]), relay.reshape(const_5145.astype('float64'), [1056,]), relay.reshape(const_5146.astype('float32'), [1, 220]), ), 6)
call_5147 = relay.TupleGetItem(func_3452_call(relay.reshape(var_5141.astype('float64'), [16, 10, 8]), relay.reshape(const_5142.astype('float64'), [66,]), relay.reshape(const_5143.astype('float64'), []), relay.reshape(const_5144.astype('float64'), [14,]), relay.reshape(const_5145.astype('float64'), [1056,]), relay.reshape(const_5146.astype('float32'), [1, 220]), ), 6)
output = relay.Tuple([uop_5133,call_5140,var_5141,const_5142,const_5143,const_5144,const_5145,const_5146,])
output2 = relay.Tuple([uop_5133,call_5147,var_5141,const_5142,const_5143,const_5144,const_5145,const_5146,])
func_5149 = relay.Function([var_5132,var_5141,], output)
mod['func_5149'] = func_5149
mod = relay.transform.InferType()(mod)
mutated_mod['func_5149'] = func_5149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5149_call = mutated_mod.get_global_var('func_5149')
var_5151 = relay.var("var_5151", dtype = "float32", shape = (3, 5, 13))#candidate|5151|(3, 5, 13)|var|float32
var_5152 = relay.var("var_5152", dtype = "float64", shape = (1280,))#candidate|5152|(1280,)|var|float64
call_5150 = func_5149_call(var_5151,var_5152,)
output = call_5150
func_5153 = relay.Function([var_5151,var_5152,], output)
mutated_mod['func_5153'] = func_5153
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5160 = relay.var("var_5160", dtype = "uint32", shape = (14, 4, 8))#candidate|5160|(14, 4, 8)|var|uint32
const_5161 = relay.const([[[2,-2,-6,-6,-2,2,-2,-9],[8,-5,-6,-9,-9,9,9,-1],[-9,-7,7,6,10,3,-6,1],[6,5,10,3,10,-1,5,-2]],[[-8,1,-4,3,7,-8,-8,1],[2,-8,-7,-2,-6,7,-6,8],[-10,9,6,-10,10,7,6,2],[1,10,2,6,4,9,-2,4]],[[-4,8,5,-4,-7,-2,1,10],[-3,-2,10,-3,3,2,9,-9],[-9,4,8,-8,10,-7,4,-5],[-6,4,-6,8,-10,-5,8,-3]],[[-3,-2,6,-6,-10,7,8,2],[10,-10,2,-6,-10,-1,-6,-9],[1,10,1,-6,-8,-6,-7,-10],[2,-1,-10,9,9,10,4,4]],[[1,5,-1,5,-5,6,7,7],[8,8,-7,7,6,-1,9,10],[-1,-3,7,2,9,2,-5,-7],[-10,-10,1,3,7,10,9,-7]],[[6,-3,-6,-2,10,-2,6,-8],[4,3,7,3,-4,-9,4,3],[6,2,10,8,10,7,-9,4],[4,9,7,-5,-6,4,-2,1]],[[-5,-1,-6,7,7,6,10,9],[7,-5,-9,-3,-7,-4,-4,-9],[7,5,7,1,-7,-1,-5,1],[6,6,8,-10,-8,6,-9,-2]],[[4,-10,-7,-6,8,-1,8,6],[-2,9,4,7,-6,-4,9,-3],[-1,-6,6,5,9,-6,2,1],[4,3,1,-8,6,-2,-7,-10]],[[10,9,5,-7,-1,-1,4,-4],[2,-4,9,10,5,-2,8,1],[5,-3,3,5,4,-5,-8,5],[-8,2,3,3,-3,10,-5,1]],[[-10,-2,-4,-7,5,-7,2,-10],[10,-6,-4,-3,-3,10,6,10],[6,9,1,8,-9,-8,6,-9],[-1,-1,5,-4,9,-8,5,-10]],[[-2,-1,-6,-10,4,6,-7,6],[2,-3,-3,5,10,8,-3,-4],[-9,9,-4,2,8,-7,3,-3],[3,1,-4,10,10,-9,8,10]],[[-10,5,-10,1,-5,1,2,-4],[-3,-2,1,-2,2,6,7,-7],[4,1,7,2,-10,1,-8,-6],[-7,-9,-10,9,-10,-2,-2,-4]],[[-1,10,8,-1,6,10,-4,-6],[-7,-1,-4,1,-7,3,-3,6],[3,-1,10,9,3,-10,10,-10],[-9,-5,1,-8,-10,8,7,5]],[[-9,-3,10,5,-3,-10,10,-9],[-9,3,10,-10,2,4,-3,-3],[7,3,6,-1,-2,-2,-1,1],[-5,3,8,8,1,-3,-2,9]]], dtype = "uint32")#candidate|5161|(14, 4, 8)|const|uint32
bop_5162 = relay.left_shift(var_5160.astype('uint32'), relay.reshape(const_5161.astype('uint32'), relay.shape_of(var_5160))) # shape=(14, 4, 8)
uop_5168 = relay.acos(var_5160.astype('float32')) # shape=(14, 4, 8)
const_5174 = relay.const([[[-10,9,7,4,-1,7,-6,-9],[-2,-7,6,4,-8,1,-1,-6],[-7,1,-4,-9,4,2,-5,-4],[8,1,-9,-6,-7,3,-9,1]],[[5,-7,6,5,-1,8,10,5],[5,1,-1,5,5,8,-8,-9],[10,3,3,-6,6,2,-7,-1],[-3,10,-1,-3,-2,2,1,-2]],[[-1,-9,-2,-1,-10,-4,10,-1],[10,-8,-6,-9,6,-8,-5,10],[-7,2,-5,-10,6,3,-9,-10],[8,2,-2,4,-4,-5,-5,7]],[[-7,3,-10,8,-7,3,-5,-5],[-4,9,-7,2,-5,10,-5,2],[-6,3,-8,-3,9,-10,-10,9],[1,-9,-3,2,9,8,1,-3]],[[4,4,-6,4,-4,4,-1,-9],[3,3,-1,1,-10,-4,-8,-9],[-5,-2,-1,-8,3,10,-5,8],[-7,3,7,7,-5,-10,2,-5]],[[2,9,6,-8,-1,4,-7,5],[3,-3,-4,-10,5,-9,-9,3],[-2,5,-10,-10,3,-9,6,6],[2,2,2,-2,-3,-2,-7,-6]],[[-7,-10,3,-8,-2,7,-10,9],[-4,7,-4,3,-4,-10,9,-2],[6,-3,-10,7,9,1,-9,-3],[-3,9,1,-5,-6,-6,2,3]],[[-9,-6,9,-2,9,2,-6,-1],[7,-8,-1,-3,-9,-5,-6,6],[-7,4,-8,-8,2,5,7,8],[-5,4,9,-6,-6,-9,1,8]],[[10,4,8,6,-4,-9,8,-4],[-4,-10,6,3,-9,4,8,8],[6,7,-5,-6,-4,9,2,5],[-4,1,3,3,4,3,-1,-1]],[[2,1,-3,-6,3,10,-3,-1],[2,-6,-6,10,-6,4,-2,6],[-5,3,5,-6,7,4,-1,-4],[7,-1,-10,-2,3,-6,3,9]],[[1,7,-1,4,6,-7,-3,3],[4,-4,4,1,-4,-2,-10,-4],[-3,7,-3,-4,-1,8,-4,5],[-5,-10,-4,4,-9,4,7,2]],[[-8,-6,4,-10,10,10,-10,-10],[3,-2,3,7,-4,3,9,-3],[-6,10,8,-4,9,-10,8,-4],[10,-10,-3,4,9,1,5,-5]],[[-5,-9,-6,-9,7,-3,-9,-6],[2,3,6,-5,7,1,1,2],[-2,9,6,-2,-9,-7,-10,1],[-10,9,4,-9,1,-4,9,-10]],[[-1,-8,9,9,2,8,9,-6],[-4,7,9,10,7,2,-3,4],[1,8,-1,-10,5,9,-7,-4],[-1,2,6,-2,7,-6,6,2]]], dtype = "uint32")#candidate|5174|(14, 4, 8)|const|uint32
bop_5175 = relay.subtract(var_5160.astype('uint16'), relay.reshape(const_5174.astype('uint16'), relay.shape_of(var_5160))) # shape=(14, 4, 8)
uop_5191 = relay.atan(uop_5168.astype('float32')) # shape=(14, 4, 8)
func_4271_call = mod.get_global_var('func_4271')
func_4274_call = mutated_mod.get_global_var('func_4274')
const_5203 = relay.const([-0.171737,6.205954,6.543781,8.917084,0.114975,-5.128001,-5.223239,-3.237740,-3.072074,0.508498,1.077513,5.339708,-6.010864,-9.358089,-6.114739,0.689188,-5.175106,-1.323260,-8.049113,0.351299,-7.337053,-4.724743,-4.041207,6.592076,3.659594,-9.853434,2.022806,8.048573,4.736422,6.019551,-6.759061,-4.263789,-1.839720,-2.632963,-4.868848,-5.876796,6.087274,-7.459881,-8.740018,6.382809,-7.373197,-2.120358,7.559846,0.976430,9.716231,-4.863636,-5.986429,-3.466388,9.739529,5.806749,-8.167746,-4.897554,-9.207980,9.334819,-0.334346,-5.032625,7.689460,-8.204664,-2.289820,5.389225,9.005343,3.133987,-9.241389,-8.231027,3.071589,2.889824,7.612922,9.912969,-3.515506,-2.874680,3.379841,-4.184922,-8.293896,-1.174468,-4.324859,-6.749533,3.532449,6.386259,-3.329347,-6.832909,-6.662075,4.861668,7.126733,5.185276,-4.487358,6.295685,2.840839,-4.078763,-6.436493,-7.598495,-8.739949,-4.227840,0.221186,8.101721,2.730039,0.139805,9.367539,-0.929393,5.391589,3.636489,3.896396,-6.547479,-4.175578,-5.877513,3.996622,6.797826,-6.205916,0.740606,-1.783246,2.404213,-1.194914,8.940697,8.011608,5.402471,2.810439,-3.530525,1.917225,4.731410,2.111110,-5.117147,6.861486,-3.477947,-2.782299,5.743088,-6.079947,-9.732029,2.928188,0.876700,6.521164,9.319254,5.924822,-7.360785,-5.433172,-8.087371,3.470249,-1.061107,-8.138827,-8.646051,4.115583,5.425354,-2.921730,-3.407809,9.289561,2.229361,-0.774111,-1.266431,-2.302400,-7.531959,-3.684329,5.946422,-5.448545,-8.922340,-1.182843,1.537069,-7.659391,-6.563265,-7.957150,-9.184355,-6.802177,9.247563,5.729184,-7.116404,-0.008040,-3.787691,6.968551,-2.413158,-2.411868,-9.774936,-7.697530,-5.602392,8.858984,9.861808,1.636718,2.201807,5.668526,2.968255,-7.506737,7.588297,-3.790220,-8.336417,7.613252,9.946338,1.027591,-8.270595,8.797532,4.557934,9.630683,2.426839,-1.214172,-9.129004,5.682489,-5.055146,6.572428,-6.816697,-0.503257,2.629384,6.283000,1.950901,2.201911,-8.787103,-8.473917,8.017295,0.121487,-1.890501,8.772203,9.721487,-2.047982,4.507931,3.771699,-5.258795,-5.626105,0.764543,-6.168178,-2.969758,1.656869,2.670262,-1.870693,5.957921,8.281136,-0.693519,4.404398,3.251159,4.030943,8.167400,-0.233766,-2.068102,-7.010481,-6.678542,-8.513066,-1.143394,-1.134180,7.802426,-5.308987,-5.418409,4.015943,-4.310123,-2.418598,-5.397826,-3.591227,6.128632,1.086678,4.423581,4.671741,8.193058,6.239157,7.343905,2.433842,-2.365534,-9.936732,0.402869,8.646286,-8.132383,8.163900,-7.835643,-7.785432,-0.791480,1.926487,6.517563,2.010569,0.517180,-4.158660,-3.046001,0.542908,0.640184,2.960365,2.242164,7.854489,0.128850,8.917968,-3.074361,2.765669,9.849628,7.245026,3.319636,7.159181,5.993220,-8.623401,2.452530,-6.079908,9.839564,9.146800,6.436596,-0.908931,4.213942,-2.854710,6.152992,-4.733111,-6.647994,-1.776390,7.040086,-0.394779,9.456546,-8.909427,7.397526,-0.993388,9.416702,8.697714,-1.333520,6.091368,6.400314,8.229281,8.102488,-6.236307,2.311075,8.629953,-7.241895,4.969457,-3.427494,0.229513,4.480494,-5.909259,8.068772,5.784762,9.251321,-3.689298,-3.841244,-6.979015,9.582205,7.899994,3.054820,4.666657,0.613729,8.767584,8.312534,3.532740,-6.843274,7.376289,0.822155,8.630295,0.006569,-7.853989,-4.637665,3.607340,2.159634,-0.504407,2.407308,-8.264929,4.246986,6.337026,-9.103876,9.522004,-7.896271,8.258749,5.343213,4.118820,-6.940673,-8.654378,-2.939804,-8.992808,-4.732285,-4.240792,8.788128,-5.046200,-7.221627,2.554590,-1.048113,-4.657170,3.283159,7.015438,-1.667241,5.842475,-2.909589,5.199753,4.408201,-5.577195,3.737755,4.127757,2.629343,1.145572,1.419965,4.057561,9.373535,0.289705,1.299102,1.335840,8.898483,-2.614163,-7.561963,-4.163717,8.448056,6.782001,4.618652,4.954987,5.845893,-3.535801,9.388152,-1.979271,6.020624,3.308152,-1.411150,3.691419,2.685272,5.703051,4.115952,6.038661,-9.162134,2.776480,-0.465679,9.944626,6.700713,-5.966287,3.683315,1.954327,-3.358424,5.935856,6.937366,-0.969631,-4.022087,-5.443312,8.317491,-7.661631,9.582672,3.980590,6.948169,7.875269,7.905531,5.628054,-2.826955,1.144787,-0.102035,-4.272029,6.932455,-1.463816,-9.824301,-2.620394,8.926398,-3.247566,-2.636495,-2.877140,-4.865789,1.292038,0.825210,-2.861188,2.234175,2.654640,-6.752260,-9.448987,-3.455648,1.150774,2.550709,2.993158,-5.587739,9.291695,6.669895,-1.275381,7.965142,9.250152,5.504385,6.202731,-9.309074,-9.487178,-2.168010,-9.572764,6.246373,5.004325,5.306842,6.131199,-2.093819,7.248218,-0.916806,2.804890,6.364420,6.902338,-6.987324,2.868300,9.566662,4.174927,-9.804009,-5.291950,4.335952,2.612648,-5.450902,3.921278,8.378469,5.017506,-5.776748,-9.419593,5.024166,-0.833075,-4.781436,-5.443217,7.109906,2.270351,-2.964940,-9.944199,2.466734,-3.483362,-2.849298,7.504327,-9.579661,-3.223063,8.691871,-4.753655,-4.647335,1.241472,0.633772,-3.013055,4.478113,-1.215534,9.576731,-6.968069,-6.664535,5.566541,-9.054559,2.694133,3.347062,7.459651,-3.130107,7.621252,8.762908,0.001645,0.829271,1.458778,2.467490,-2.930135,-3.968580,8.828390,5.196270,-6.595801,3.382912,3.083331,9.031411,-1.189860,-5.488889,-4.238793,-6.546922,-0.329045,0.335409,-7.798279,-2.795206,6.525492,5.073822,8.824919,9.414679,-0.137362,4.127534,9.920947,4.867077,-4.903461,-5.802165,2.215372,-8.257641,-9.126312,1.751222,-0.082732,8.676533,4.511619,7.057305,5.930171,-1.815664,3.217050,3.679006,-9.593082,-3.653486,7.392328,0.883172,8.699387,-7.488555,6.691672,3.655881,4.864217,9.680716,4.859883,-3.903098,-8.286432,3.649887,-4.104632,-6.150662,5.010240,-2.444922,5.936983,9.984727,7.972111,-4.864303,9.615745,7.885907,-3.853446,4.017392,7.438573,9.520371,-1.535284,0.936401,1.690453,6.207851,1.465089,8.989176,6.038632,4.944233,8.371164,5.834739,4.760373,2.738343,-3.481328,-5.067954,-1.212039,5.547476,-3.244912,-9.804253,-1.477161,-2.073126,7.704634,6.649964,-8.099100,8.862383,-9.269744,-6.836647,4.577979,-3.279704,3.183739,4.743447,-6.680646,-0.473253,-7.534780,-0.374652,2.544739,-7.725280,8.409084,7.626303,-4.808475,4.008706,-0.079779,1.990646,6.513722,5.426024,-4.175570,3.142298,0.035786,0.480229,-4.593110,-2.501895,-1.110716,-3.662300,-5.508126,4.187455,-5.742399,-1.005536,-1.998014,5.703910,2.334787,-4.982701,0.025064,-6.759643,-3.399358,-0.685812,2.428594,-3.123684,6.467938,2.128797,-7.227324,9.977053,9.231213,8.644143,4.303582,-2.663226,1.283990,-0.660970,-3.387904,9.408632,-1.999136,8.493436,0.662850,3.450327,-8.853054,-1.321659,4.565069,8.773877,7.338912,-5.371259,0.667097,7.386701,-3.832482,-7.424224,-4.242854,1.017153,3.387152,3.583625,-0.125172,-0.696051,3.824802,8.909063,-4.093285,-1.953979,-4.715689,-3.152301,1.247595,-8.920836,6.677979,-3.743616,2.510472,-9.824043,-9.435688,2.893797,-3.486657,3.557277,-6.639977,-4.091387,2.246266,8.095356,7.710132,-9.799608,0.700736,-4.281167,2.476795,8.140742,-0.228482,1.086168,6.840952,6.488391,-6.994541,6.836642,-5.913932,8.407385,-0.591142,2.467283,-2.814543,-1.168958,-4.030643,-9.580470,9.088198,-5.274124,2.661508,-7.913261,-8.426898,-9.758956,-3.308205,-9.880013,8.303836,2.662909,-7.334758,-8.853356,-5.039359,-8.457062,3.118805,-5.610386,-1.446177,2.775107,-2.940111,-2.239540,8.495851,-7.926203,1.042036,-2.101371,-9.092132,-0.079286,-9.552693,-4.681149,-0.494291,-1.705853,9.653841,-3.522297,9.725868,-5.455588,-2.626271,6.890603,8.073498,6.425497,-7.451620,-6.444739,0.337828,6.666498,0.671739,-3.808045,-0.649224,1.440357,1.758299,-0.697769,3.975679,0.854653,1.872190,-6.552316,-9.492937,9.382618,1.480810,1.843901,6.565145,2.792165,-8.424650,-6.663515,-5.131599,6.775306,5.123899,-8.472554,-5.789414,-3.940832,-1.033375,-2.002146,5.945812,3.158747,0.960139,8.875763,8.244791,2.864725,9.944305,0.675299,-1.318345,6.514011,-6.669667,-3.803002,0.759159,-6.129693,2.305199,-5.557820,9.533545,-5.273611,4.634523,1.780675,-1.198314,-7.853856,-7.927217,2.223653,-6.572018,-1.143953,-2.293563,2.615869,-1.532988,-3.469975,9.037532,-2.360579,-5.699794,8.939559,-1.831832,6.175280,-5.114677,-0.953114,5.143878,2.752173,1.662711,-7.580468,-8.773525,1.527374,4.526014,4.710274,3.915363,4.858428,-3.913773,4.444495,3.572280,3.601873,-8.148177,-9.252117,5.885858,-1.617267,-6.174543,-9.540197,-6.613046,1.255795,1.173476,-0.475567,-7.491863,5.611334,1.538698,7.055625,8.911938,-4.608340,8.255344,2.987651,-2.903722,6.364302,-3.953859,6.083110,4.019272,-2.186917,5.077777,4.030943,9.279893,-2.435858,9.940187,1.317803,-7.418636,2.871494,1.559145,-1.345899,-8.159186,-5.354764,-6.368711,1.250297,-2.106194,-6.673240,9.765910,9.016530,-5.137023,4.506202,9.270752,-8.519665,-9.532246,5.736202,-8.753470,1.104616,0.378240,3.826497,6.263111,-5.063973,0.469534,-8.354450,-6.949981,7.587407,0.005162,0.926337,6.191852,1.934982,3.315309,1.682784,-2.416357,-7.351910,-5.345748,4.530409,-3.612709,1.431111,3.639909,-1.733452,1.039281,-2.377078,-6.423357,-8.876078,-5.685769,0.457511,-8.067879,8.116708,3.868098,2.896487,-0.915147,-7.850176,-9.209488,-7.308651,0.482430,4.539855,-7.930486,3.783591,8.933111,-8.162017,8.024895,0.410254,4.922888,4.950048,-6.754136,-9.941259,0.314543,-2.642909,9.294302,0.441814,8.050332,0.845111,9.147703,6.351635,-7.723329,-4.085843,0.761859,-8.522605,-9.049295,-3.905067,-2.239991,3.486209,1.902464,2.763610,-4.729012,1.571314,8.432216,3.477883,1.010291,-0.786180,1.375485,-0.870094,-3.945467,2.822365,-0.743247,-2.931477,-3.929908,-8.705099,8.943522,-0.337991,8.327514,4.670042,7.947962,4.726409,6.679518,-5.479105,-5.908338,-8.769540,9.772531,8.515933,0.146154,-3.165426,-5.514445,1.640643,-5.865548,2.425165,7.521310,7.566555,-5.270289,0.762805,-4.439819,-5.053686,-9.753867,3.131736,-9.669577,4.225277,-7.821750,4.814571,7.875135,-4.504260,8.791162,8.705493,1.255297,6.836190,5.266846,7.647372,-0.039792,-7.028961,-6.393927,5.566171,-7.374253,-4.508999,-1.891636,1.105317,-2.487168,-2.834441,-7.137879,-6.495915,-8.218798,7.346254,4.002971,1.215807,-0.957151,-4.909085,0.759513,9.267095,8.220694,9.221965,9.102389,9.662953,-2.581972,9.436599,3.949750,-5.965365,6.257249,6.339531,9.147361,9.299157,-7.665323,-1.714068,4.928664,6.298446,-6.108711,-5.381820,-2.146218,1.162505,1.678075,7.668525,9.609843,-3.840245,4.680050,9.004890,-3.051131,-8.289045,-1.479022,6.958452], dtype = "float64")#candidate|5203|(1056,)|const|float64
var_5204 = relay.var("var_5204", dtype = "float32", shape = (220, 1))#candidate|5204|(220, 1)|var|float32
call_5202 = relay.TupleGetItem(func_4271_call(relay.reshape(const_5203.astype('float64'), [8, 132]), relay.reshape(var_5204.astype('float32'), [220, 1]), ), 0)
call_5205 = relay.TupleGetItem(func_4274_call(relay.reshape(const_5203.astype('float64'), [8, 132]), relay.reshape(var_5204.astype('float32'), [220, 1]), ), 0)
uop_5211 = relay.sin(uop_5191.astype('float64')) # shape=(14, 4, 8)
func_439_call = mod.get_global_var('func_439')
func_442_call = mutated_mod.get_global_var('func_442')
const_5217 = relay.const([2.098195,-9.250203,-9.180134,-5.492367,8.805107,-6.131589,-3.862752,-7.169168,3.816595,-3.393687,6.778172,-6.997658,-6.491441,-3.147383,-4.608107,-1.716201,-7.577253,-0.239737,-8.464095,-4.044993,5.425973,-6.621521,-8.746093,4.911935], dtype = "float64")#candidate|5217|(24,)|const|float64
call_5216 = relay.TupleGetItem(func_439_call(relay.reshape(const_5217.astype('float64'), [1, 2, 12])), 1)
call_5218 = relay.TupleGetItem(func_442_call(relay.reshape(const_5217.astype('float64'), [1, 2, 12])), 1)
func_2210_call = mod.get_global_var('func_2210')
func_2218_call = mutated_mod.get_global_var('func_2218')
var_5222 = relay.var("var_5222", dtype = "float32", shape = (1078,))#candidate|5222|(1078,)|var|float32
var_5223 = relay.var("var_5223", dtype = "float64", shape = ())#candidate|5223|()|var|float64
var_5224 = relay.var("var_5224", dtype = "float64", shape = (14,))#candidate|5224|(14,)|var|float64
const_5225 = relay.const([-8,-7,-1,-2,-6,5,2,-10,-1,1,1,10,5,2,5,-6,-8,5,-9,-8,-3,8,7,8,-4,-9,2,4,9,-1,-5,9,-3,5,-1,-6,6,-2,3,-8,1,-1,-7,2,-2,10,1,3,6,-5,-8,3,-6,-6,-7,7,10,-2,-4,-2,-7,-4,-4,4,2,6,10,-6,4,-7,-6,8,-2,-4,-7,1,-1,-4,-1,-4,8,6,9,6,6,4,-8,2,5,4,-4,-5,1,9,-10,6,-5,5,6,7,5,-6,6,-2,-3,2,-3,-2,8,8,-6,-5,-7,-5,10,-5,-5,-9,-8,-1,-7,-6,-4,7,-10,10,-1,7,5,-3,5,-1,10,9,-1,6,-7,-10,-1,-3,-4,-8,-9,-5,8,1,-7,-4,-4,-4,5,-5,-2,-3,4,7,8,4,-2,-4,-8,-4,9,3,-2,8,-5,-2,-8,4,-1,-9,-6,-8,6,9,-5,1,2,7,9,3,-8,4,10,-5,1,-9,1,-7,7,10,-10,8,-3,8,-2,-7,-6,4,1,6,-7,8,2,2,-1,5,-1,5,-10,7,4,10,-5,3,-6,-7,-3,9,-8,7,3,-3,5,-10,1,-4,-9,4,-1,-1,7,1,1,-5,3,2,-4,-2,-3,1,-8,-8,3,3,8,-10,2,-4,3,3,3,-2,10,-3,4,6,3,1,5,-8,9,-7,1,-3,-3,10,2,1,6,3,-2,-4,-3,8,10,-1,8,-10,-9,5,9,-6,-7,-1,4,3,-4,-8,-3,-5,4,1,-1,-1,4,-2,1,-2,-8,-1,8,6,-2,-9,3,-9,-7,9,3,-8,-5,-10,10,-5,6,1,-2,7,3,1,7,5,2,4,5,2,4,-6,-5,-3,1,-8,10,8,-9,-1,1,-2,9,8,-8,4,4,6,-5,4,-2,-8,6,-6,-7,5,3,2,-3,-6,3,-5,-1,10,-2,1,-5,-6,5,7,-9,1,-2,-7,-5,8,-4,9,-5,-3,-3,1,-5,10,9,3,2,3,9,8,3,-2,-10,2,7,-4,-2,-8,-2,-9,8,10,-8,-1,-10,-10,5,-8,2,2,-9,-10,3,-10,-8,5,-2,5,7,6,-7,10,8,-8,-2,-10,1,2,1,9,10,7,-1,2,10,-7,4,-8,-7,-5,-1,8,6,-5,1,-6,8,-10,8,8,10,3,-3,8,-1,7,-7,-1,-6,-2,10,7,-3,-10,-1,-7,4,-6,-4,4,-9,-5,-7,-1,-5,-1,1,5,-5,5,3,-6,3,-1,8,10,6,6,-6,-6,10,-5,5,6,-5,7,-4,-3,7,-4,9,2,3,-9,-5,-7,-4,9,-4,-1,-8,7,5,1,-3,-7,-10,8,-7,2,3,10,-4,9,3,-7,10,5,3,7,10,8,3,5,2,5,-9,-3,3,10,-1,9,10,-9,1,-9,-10,-2,3,-4,-7,2,-3,8,6,3,7,-1,9,10,-3,-2,-7,5,-4,-9,-9,8,4,9,-5,7,8,9,-5,-7,9,3,-6,10,-9,-2,7,-2,7,1,6,4,-6,-3,-1,3,-2,5,-7,9,-3,-6,-2,-1,2,8,2,3,-4,-10,9,-4,10,-10,-4,4,-9,-8,-9,-7,-3,-10,-9,-2,1,8,7,-2,1,3,10,-3,-8,-7,9,9,-3,8,3,-4,4,-6,-4,-10,-10,-10,-10,9,-5,-6,-4,-8,-3,-8,-8,3,-6,5,-7,7,-7,10,-4,-7,9,5,8,10,-2,10,-5,-4,-9,-3,1,6,10,7,-8,3,8,1,-3,-7,-3,7,-9,-9,7,5,-3,-7,-10,7,7,-5,7,-10,9,7,6,8,-4,-2,-8,-8,1,-5,8,-8,1,-1,-7,1,8,-8,4,8,2,7,-10,-2,-2,3,-1,6,-2,2,-8,7,-3,-10,10,4,-1,-1,-8,3,2,-2,7,-4,-5,-2,1,8,-6,-2,-8,8,7,-10,2,7,-1,6,-8,-9,-7,5,2,-2], dtype = "int64")#candidate|5225|(756,)|const|int64
call_5221 = relay.TupleGetItem(func_2210_call(relay.reshape(var_5222.astype('float32'), [7, 11, 14]), relay.reshape(var_5222.astype('float32'), [7, 11, 14]), relay.reshape(call_5216.astype('float64'), [24,]), relay.reshape(var_5223.astype('float64'), []), relay.reshape(var_5224.astype('float64'), [14,]), relay.reshape(const_5225.astype('int64'), [756,]), relay.reshape(var_5204.astype('float32'), [55, 4]), ), 6)
call_5226 = relay.TupleGetItem(func_2218_call(relay.reshape(var_5222.astype('float32'), [7, 11, 14]), relay.reshape(var_5222.astype('float32'), [7, 11, 14]), relay.reshape(call_5216.astype('float64'), [24,]), relay.reshape(var_5223.astype('float64'), []), relay.reshape(var_5224.astype('float64'), [14,]), relay.reshape(const_5225.astype('int64'), [756,]), relay.reshape(var_5204.astype('float32'), [55, 4]), ), 6)
bop_5229 = relay.mod(uop_5211.astype('float64'), relay.reshape(uop_5191.astype('float64'), relay.shape_of(uop_5211))) # shape=(14, 4, 8)
func_439_call = mod.get_global_var('func_439')
func_442_call = mutated_mod.get_global_var('func_442')
call_5258 = relay.TupleGetItem(func_439_call(relay.reshape(call_5216.astype('float64'), [1, 2, 12])), 0)
call_5259 = relay.TupleGetItem(func_442_call(relay.reshape(call_5216.astype('float64'), [1, 2, 12])), 0)
output = relay.Tuple([bop_5162,bop_5175,call_5202,const_5203,var_5204,call_5216,const_5217,call_5221,var_5222,var_5223,var_5224,const_5225,bop_5229,call_5258,])
output2 = relay.Tuple([bop_5162,bop_5175,call_5205,const_5203,var_5204,call_5218,const_5217,call_5226,var_5222,var_5223,var_5224,const_5225,bop_5229,call_5259,])
func_5266 = relay.Function([var_5160,var_5204,var_5222,var_5223,var_5224,], output)
mod['func_5266'] = func_5266
mod = relay.transform.InferType()(mod)
mutated_mod['func_5266'] = func_5266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5266_call = mutated_mod.get_global_var('func_5266')
var_5268 = relay.var("var_5268", dtype = "uint32", shape = (14, 4, 8))#candidate|5268|(14, 4, 8)|var|uint32
var_5269 = relay.var("var_5269", dtype = "float32", shape = (220, 1))#candidate|5269|(220, 1)|var|float32
var_5270 = relay.var("var_5270", dtype = "float32", shape = (1078,))#candidate|5270|(1078,)|var|float32
var_5271 = relay.var("var_5271", dtype = "float64", shape = ())#candidate|5271|()|var|float64
var_5272 = relay.var("var_5272", dtype = "float64", shape = (14,))#candidate|5272|(14,)|var|float64
call_5267 = func_5266_call(var_5268,var_5269,var_5270,var_5271,var_5272,)
output = call_5267
func_5273 = relay.Function([var_5268,var_5269,var_5270,var_5271,var_5272,], output)
mutated_mod['func_5273'] = func_5273
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5554 = relay.var("var_5554", dtype = "uint64", shape = (3, 3, 1))#candidate|5554|(3, 3, 1)|var|uint64
var_5555 = relay.var("var_5555", dtype = "uint64", shape = (3, 3, 5))#candidate|5555|(3, 3, 5)|var|uint64
bop_5556 = relay.add(var_5554.astype('uint64'), var_5555.astype('uint64')) # shape=(3, 3, 5)
func_5266_call = mod.get_global_var('func_5266')
func_5273_call = mutated_mod.get_global_var('func_5273')
const_5573 = relay.const([3,6,5,9,5,8,-3,9,1,-3,4,4,3,10,-6,-3,8,-6,9,3,-7,5,5,4,-6,3,-8,-9,-10,-4,9,-5,7,10,-9,9,5,7,-1,-6,-7,-6,-9,8,3,8,-9,1,-6,-1,5,2,5,-7,-8,1,5,-2,2,4,2,-9,4,-5,10,-7,6,-4,7,-9,-6,2,-8,4,4,7,-9,-5,6,-5,-7,-1,10,-8,-7,-3,7,-4,10,7,7,8,-8,-3,6,-3,8,8,9,4,10,1,-3,-4,-5,4,3,-10,-8,7,8,-7,-4,-6,-10,9,8,-9,4,-3,-4,-1,-3,-10,-1,-5,7,-7,6,3,4,7,-1,4,-2,2,-7,3,-3,1,9,5,7,-6,7,-8,-1,-4,5,-8,6,3,3,5,6,-10,-1,1,-8,10,6,4,-5,10,8,-9,7,10,-7,-6,1,7,10,10,5,-1,8,-10,6,4,-7,-10,4,-4,5,3,-5,-9,-10,-5,7,-8,3,-9,-8,-5,-8,7,7,1,3,-7,4,-5,5,9,-6,-8,-5,-10,-1,-7,-9,9,8,-7,5,9,-2,-6,-2,8,4,-7,-4,-3,1,2,-4,6,-2,-1,9,-10,4,-7,-3,-4,-2,9,9,10,9,10,4,5,8,-7,-8,7,3,8,-8,4,-7,-7,4,-4,3,6,9,5,9,-4,1,9,-5,1,-3,-5,-7,-5,-4,-3,3,4,3,9,3,9,3,7,8,1,-2,-10,-1,-9,-5,9,2,-10,-5,6,-10,-2,-4,-3,7,-4,2,-8,-10,-7,-7,-1,-2,-5,9,4,8,-4,-5,5,-1,-10,4,6,-5,6,-1,-3,7,-1,9,6,1,10,-5,9,7,-8,7,2,7,4,-5,3,6,8,1,-5,-4,-8,3,4,7,8,6,-6,5,2,-10,2,9,3,6,2,-4,-8,10,-4,3,-2,9,-1,9,-6,8,-5,2,9,-8,5,-3,-7,-4,-3,3,6,-3,-10,-8,-1,8,5,6,5,7,5,2,5,5,3,-3,-3,3,1,2,10,-10,8,-1,3,5,-7,2,-3,2,-8,-4,-3,4,10,6,6,9,5,10,-7,5,-4,-6,5,-4,2,4,4,-9,-6,8,-2,-7,-6,-2,2,5,-4,4,10,2,5,-7,-4,7,1,1,2], dtype = "uint32")#candidate|5573|(448,)|const|uint32
var_5574 = relay.var("var_5574", dtype = "float32", shape = (1, 220))#candidate|5574|(1, 220)|var|float32
var_5575 = relay.var("var_5575", dtype = "float32", shape = (1078,))#candidate|5575|(1078,)|var|float32
const_5576 = relay.const(-2.323760, dtype = "float64")#candidate|5576|()|const|float64
const_5577 = relay.const([6.480620,-0.284556,-4.088734,8.957119,7.645093,-1.121854,5.881867,-4.345433,-8.547155,0.807466,-5.755053,-9.689295,-5.478781,3.788303], dtype = "float64")#candidate|5577|(14,)|const|float64
call_5572 = relay.TupleGetItem(func_5266_call(relay.reshape(const_5573.astype('uint32'), [14, 4, 8]), relay.reshape(var_5574.astype('float32'), [220, 1]), relay.reshape(var_5575.astype('float32'), [1078,]), relay.reshape(const_5576.astype('float64'), []), relay.reshape(const_5577.astype('float64'), [14,]), ), 11)
call_5578 = relay.TupleGetItem(func_5273_call(relay.reshape(const_5573.astype('uint32'), [14, 4, 8]), relay.reshape(var_5574.astype('float32'), [220, 1]), relay.reshape(var_5575.astype('float32'), [1078,]), relay.reshape(const_5576.astype('float64'), []), relay.reshape(const_5577.astype('float64'), [14,]), ), 11)
var_5584 = relay.var("var_5584", dtype = "uint64", shape = (3, 3, 1))#candidate|5584|(3, 3, 1)|var|uint64
bop_5585 = relay.greater(var_5554.astype('bool'), relay.reshape(var_5584.astype('bool'), relay.shape_of(var_5554))) # shape=(3, 3, 1)
output = relay.Tuple([bop_5556,call_5572,const_5573,var_5574,var_5575,const_5576,const_5577,bop_5585,])
output2 = relay.Tuple([bop_5556,call_5578,const_5573,var_5574,var_5575,const_5576,const_5577,bop_5585,])
func_5588 = relay.Function([var_5554,var_5555,var_5574,var_5575,var_5584,], output)
mod['func_5588'] = func_5588
mod = relay.transform.InferType()(mod)
var_5589 = relay.var("var_5589", dtype = "uint64", shape = (3, 3, 1))#candidate|5589|(3, 3, 1)|var|uint64
var_5590 = relay.var("var_5590", dtype = "uint64", shape = (3, 3, 5))#candidate|5590|(3, 3, 5)|var|uint64
var_5591 = relay.var("var_5591", dtype = "float32", shape = (1, 220))#candidate|5591|(1, 220)|var|float32
var_5592 = relay.var("var_5592", dtype = "float32", shape = (1078,))#candidate|5592|(1078,)|var|float32
var_5593 = relay.var("var_5593", dtype = "uint64", shape = (3, 3, 1))#candidate|5593|(3, 3, 1)|var|uint64
output = func_5588(var_5589,var_5590,var_5591,var_5592,var_5593,)
func_5594 = relay.Function([var_5589,var_5590,var_5591,var_5592,var_5593,], output)
mutated_mod['func_5594'] = func_5594
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5815 = relay.var("var_5815", dtype = "float64", shape = (7, 11, 1))#candidate|5815|(7, 11, 1)|var|float64
uop_5816 = relay.atanh(var_5815.astype('float64')) # shape=(7, 11, 1)
bop_5821 = relay.floor_mod(var_5815.astype('float32'), relay.reshape(uop_5816.astype('float32'), relay.shape_of(var_5815))) # shape=(7, 11, 1)
uop_5835 = relay.sigmoid(var_5815.astype('float32')) # shape=(7, 11, 1)
output = relay.Tuple([bop_5821,uop_5835,])
output2 = relay.Tuple([bop_5821,uop_5835,])
func_5844 = relay.Function([var_5815,], output)
mod['func_5844'] = func_5844
mod = relay.transform.InferType()(mod)
var_5845 = relay.var("var_5845", dtype = "float64", shape = (7, 11, 1))#candidate|5845|(7, 11, 1)|var|float64
output = func_5844(var_5845)
func_5846 = relay.Function([var_5845], output)
mutated_mod['func_5846'] = func_5846
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5996 = relay.var("var_5996", dtype = "uint16", shape = ())#candidate|5996|()|var|uint16
var_5997 = relay.var("var_5997", dtype = "uint16", shape = (1, 8, 9))#candidate|5997|(1, 8, 9)|var|uint16
bop_5998 = relay.logical_xor(var_5996.astype('uint16'), var_5997.astype('uint16')) # shape=(1, 8, 9)
func_1123_call = mod.get_global_var('func_1123')
func_1125_call = mutated_mod.get_global_var('func_1125')
var_6022 = relay.var("var_6022", dtype = "float32", shape = (220,))#candidate|6022|(220,)|var|float32
call_6021 = relay.TupleGetItem(func_1123_call(relay.reshape(var_6022.astype('float32'), [10, 2, 11])), 0)
call_6023 = relay.TupleGetItem(func_1125_call(relay.reshape(var_6022.astype('float32'), [10, 2, 11])), 0)
output = relay.Tuple([bop_5998,call_6021,var_6022,])
output2 = relay.Tuple([bop_5998,call_6023,var_6022,])
func_6050 = relay.Function([var_5996,var_5997,var_6022,], output)
mod['func_6050'] = func_6050
mod = relay.transform.InferType()(mod)
mutated_mod['func_6050'] = func_6050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6050_call = mutated_mod.get_global_var('func_6050')
var_6052 = relay.var("var_6052", dtype = "uint16", shape = ())#candidate|6052|()|var|uint16
var_6053 = relay.var("var_6053", dtype = "uint16", shape = (1, 8, 9))#candidate|6053|(1, 8, 9)|var|uint16
var_6054 = relay.var("var_6054", dtype = "float32", shape = (220,))#candidate|6054|(220,)|var|float32
call_6051 = func_6050_call(var_6052,var_6053,var_6054,)
output = call_6051
func_6055 = relay.Function([var_6052,var_6053,var_6054,], output)
mutated_mod['func_6055'] = func_6055
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6301 = relay.const([[[1.729929],[-5.038319],[2.910304],[-1.213050],[-2.542924],[-2.273753],[-5.257293],[0.329031],[-8.880076],[-2.147264],[-8.232950],[2.492865],[-5.658063],[5.318204],[-1.092387]],[[8.224404],[2.180265],[6.945039],[7.358558],[-5.975860],[-4.316064],[4.858919],[-1.646700],[5.375833],[-3.935048],[-7.220704],[1.810941],[0.330127],[4.283119],[6.540588]],[[3.190523],[8.266146],[-5.855919],[9.122397],[-6.044681],[1.891915],[-7.391323],[6.325506],[4.471069],[6.273628],[7.463894],[3.060798],[-1.660461],[-4.892067],[2.704861]],[[8.757984],[-9.831105],[9.177773],[4.070471],[-6.595051],[3.159788],[-6.813540],[-1.210894],[-3.405665],[7.159826],[7.242378],[-5.020578],[2.996142],[6.261210],[-9.102333]],[[1.044539],[6.432979],[-7.829541],[9.545609],[5.314786],[-4.008655],[2.755691],[-8.640691],[-3.116717],[-9.215440],[5.390212],[-1.815589],[-6.993737],[-6.727140],[2.196099]],[[-4.067431],[-2.016837],[1.811313],[5.910273],[-3.898735],[-9.254118],[5.999282],[4.209272],[-7.471182],[-8.395114],[9.056266],[-3.341608],[9.631831],[0.444787],[7.025324]]], dtype = "float64")#candidate|6301|(6, 15, 1)|const|float64
uop_6302 = relay.sin(const_6301.astype('float64')) # shape=(6, 15, 1)
output = uop_6302
output2 = uop_6302
func_6304 = relay.Function([], output)
mod['func_6304'] = func_6304
mod = relay.transform.InferType()(mod)
output = func_6304()
func_6305 = relay.Function([], output)
mutated_mod['func_6305'] = func_6305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6304_call = mod.get_global_var('func_6304')
func_6305_call = mutated_mod.get_global_var('func_6305')
call_6326 = func_6304_call()
call_6327 = func_6304_call()
var_6333 = relay.var("var_6333", dtype = "float64", shape = (6, 15, 12))#candidate|6333|(6, 15, 12)|var|float64
bop_6334 = relay.equal(call_6326.astype('bool'), var_6333.astype('bool')) # shape=(6, 15, 12)
bop_6337 = relay.equal(call_6327.astype('bool'), var_6333.astype('bool')) # shape=(6, 15, 12)
uop_6340 = relay.sinh(bop_6334.astype('float64')) # shape=(6, 15, 12)
uop_6342 = relay.sinh(bop_6337.astype('float64')) # shape=(6, 15, 12)
func_5266_call = mod.get_global_var('func_5266')
func_5273_call = mutated_mod.get_global_var('func_5273')
var_6357 = relay.var("var_6357", dtype = "uint32", shape = (448,))#candidate|6357|(448,)|var|uint32
const_6358 = relay.const([6.351124,-9.342032,-8.460655,-6.615813,-9.228514,-2.288767,-3.056348,9.025912,6.694928,9.083477,-6.277284,-9.704012,-6.580644,8.541287,3.155228,3.760232,-5.408592,8.065275,5.099491,-4.665777,8.867075,1.517600,8.495747,-8.013053,-4.415965,-0.903050,-5.229429,0.251180,-1.244531,3.309475,6.977736,-0.076320,-0.885631,-6.106167,3.337824,-6.106936,9.808775,-7.810995,-6.186054,1.819117,-1.536740,1.413521,-4.508872,7.424550,7.648656,-3.991100,-4.740503,-2.834725,5.186554,-2.467963,8.047425,9.456912,-2.406040,9.866750,5.892970,9.837225,-2.781323,-8.418777,-3.429186,2.214552,-4.890771,-3.921656,-8.455191,-0.044471,2.413813,-5.432827,3.430517,2.111651,2.179411,-1.922583,6.901147,7.136099,-3.271500,-5.430894,1.502242,-7.991676,4.426229,-8.372523,5.170195,7.784322,5.758709,2.833759,-3.631187,-9.798049,7.766060,-2.171405,2.334037,-8.116947,2.122047,-4.065105,-7.018938,6.018063,9.755195,7.513698,-1.596367,5.453818,-4.571998,-4.349991,3.461459,-1.294929,1.150116,5.648781,-0.076221,-3.357611,-7.538170,4.833313,9.605182,-3.376168,-6.506580,4.990905,9.769195,0.706170,0.713793,-8.341363,-7.890054,4.778969,8.323650,-0.895273,-6.155678,3.620555,6.430161,3.548619,8.975398,7.004097,0.483149,-0.268909,5.616310,-2.178192,0.354420,8.934995,0.675722,1.057190,2.481235,7.967448,-2.952079,-8.777173,6.992363,-9.515655,-1.085055,-9.920732,-2.174871,-6.793128,-5.407778,-5.059525,8.806228,-3.197995,-4.444707,8.421315,2.729304,8.207526,9.326943,-3.701657,2.750552,-4.132193,-0.515493,1.097861,3.494236,2.481578,-9.897814,-9.254979,5.548810,6.720911,-1.833863,-7.373213,9.795046,-1.911189,2.530269,7.078511,8.773861,-9.349066,-2.380514,3.321553,9.888094,-0.504596,-9.010128,4.758937,3.110092,-3.964151,9.098282,6.155949,-2.981627,-2.472319,-8.632294,2.458094,3.402691,-3.895564,4.069863,8.158820,-8.411555,0.134415,-6.619814,-6.155966,2.908096,-8.323089,4.320450,1.163323,5.380807,-6.680280,0.683503,0.660880,1.720988,-5.058400,4.115200,-9.150367,5.845511,9.545492,-0.264444,9.515127,-7.502646,4.518266,-9.747708,9.294776,-3.126332,2.885818,3.668436,-9.140439,-8.933950,-7.805300,-7.659725,3.352282], dtype = "float32")#candidate|6358|(220,)|const|float32
var_6359 = relay.var("var_6359", dtype = "float32", shape = (1078,))#candidate|6359|(1078,)|var|float32
const_6360 = relay.const(-2.949485, dtype = "float64")#candidate|6360|()|const|float64
const_6361 = relay.const([-1.575071,0.928611,-7.763337,-7.696628,0.196206,5.213233,7.307186,-2.688665,-7.552661,-6.874342,-6.413244,3.966733,-4.527504,3.363173], dtype = "float64")#candidate|6361|(14,)|const|float64
call_6356 = relay.TupleGetItem(func_5266_call(relay.reshape(var_6357.astype('uint32'), [14, 4, 8]), relay.reshape(const_6358.astype('float32'), [220, 1]), relay.reshape(var_6359.astype('float32'), [1078,]), relay.reshape(const_6360.astype('float64'), []), relay.reshape(const_6361.astype('float64'), [14,]), ), 4)
call_6362 = relay.TupleGetItem(func_5273_call(relay.reshape(var_6357.astype('uint32'), [14, 4, 8]), relay.reshape(const_6358.astype('float32'), [220, 1]), relay.reshape(var_6359.astype('float32'), [1078,]), relay.reshape(const_6360.astype('float64'), []), relay.reshape(const_6361.astype('float64'), [14,]), ), 4)
output = relay.Tuple([uop_6340,call_6356,var_6357,const_6358,var_6359,const_6360,const_6361,])
output2 = relay.Tuple([uop_6342,call_6362,var_6357,const_6358,var_6359,const_6360,const_6361,])
func_6367 = relay.Function([var_6333,var_6357,var_6359,], output)
mod['func_6367'] = func_6367
mod = relay.transform.InferType()(mod)
var_6368 = relay.var("var_6368", dtype = "float64", shape = (6, 15, 12))#candidate|6368|(6, 15, 12)|var|float64
var_6369 = relay.var("var_6369", dtype = "uint32", shape = (448,))#candidate|6369|(448,)|var|uint32
var_6370 = relay.var("var_6370", dtype = "float32", shape = (1078,))#candidate|6370|(1078,)|var|float32
output = func_6367(var_6368,var_6369,var_6370,)
func_6371 = relay.Function([var_6368,var_6369,var_6370,], output)
mutated_mod['func_6371'] = func_6371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6304_call = mod.get_global_var('func_6304')
func_6305_call = mutated_mod.get_global_var('func_6305')
call_6432 = func_6304_call()
call_6433 = func_6304_call()
uop_6436 = relay.acos(call_6432.astype('float32')) # shape=(6, 15, 1)
uop_6438 = relay.acos(call_6433.astype('float32')) # shape=(6, 15, 1)
bop_6442 = relay.logical_xor(uop_6436.astype('int8'), relay.reshape(call_6432.astype('int8'), relay.shape_of(uop_6436))) # shape=(6, 15, 1)
bop_6445 = relay.logical_xor(uop_6438.astype('int8'), relay.reshape(call_6433.astype('int8'), relay.shape_of(uop_6438))) # shape=(6, 15, 1)
bop_6446 = relay.floor_mod(bop_6442.astype('float32'), relay.reshape(uop_6436.astype('float32'), relay.shape_of(bop_6442))) # shape=(6, 15, 1)
bop_6449 = relay.floor_mod(bop_6445.astype('float32'), relay.reshape(uop_6438.astype('float32'), relay.shape_of(bop_6445))) # shape=(6, 15, 1)
func_2829_call = mod.get_global_var('func_2829')
func_2832_call = mutated_mod.get_global_var('func_2832')
const_6452 = relay.const([[9.273126],[-5.880972],[-5.363078],[-1.253482],[7.638826],[2.429513],[-2.873017],[4.731579],[-7.139165],[-8.806403],[-1.985946],[4.323492],[5.481605],[0.295010],[-1.470874],[-0.323507],[-1.289653],[-3.615882],[2.370707],[4.203705],[0.117936],[-0.420747],[8.801526],[3.887485],[1.881469],[1.208030],[5.088033],[-8.186070],[8.372907],[-4.332121],[-5.870494],[7.936459],[-5.325486],[5.198949],[-3.612008],[-5.246313],[-5.295049],[-9.759176],[0.772411],[7.564933],[5.812365],[-8.129567],[9.185604],[8.193412],[-3.329202],[6.468296],[7.974608],[2.146076],[-4.852784],[3.039975],[-6.077449],[-8.352367],[-5.126534],[-7.084087],[-6.651846],[0.609597],[-9.942811],[7.576792],[-3.720404],[-2.509169],[-2.300749],[-9.690423],[-8.668608],[0.729485],[-9.457553],[-2.278526],[1.027235],[2.388702],[7.651207],[9.576441],[4.437563],[0.490960],[-3.421409],[-0.121432],[-0.596698],[4.775628],[-7.753081],[-3.133994],[3.939668],[6.718554],[-9.824854],[-3.492576],[8.844951],[-4.722093],[4.210905],[-7.740240],[-7.282328],[-5.925267],[-2.202293],[0.264018],[8.391137],[-8.231334],[-2.104319],[8.431382],[-5.726647],[-5.766412],[-3.395946],[-7.172240],[-2.835763],[-4.576724],[-1.943773],[0.704474],[-1.269481],[1.581629],[-0.283163],[9.209691],[0.568044],[2.561949],[-6.134172],[-7.510729],[6.990497],[-9.498828],[1.825561],[0.111298],[5.211030],[-1.273861],[9.993728],[-7.779571],[1.850459],[-9.934307],[-1.047653],[-7.824306],[7.575484],[-2.111457],[-8.354060],[1.880592],[7.175379],[1.620867],[-6.178413],[-3.494878],[-1.399325],[-2.996355],[-9.326971],[7.921226],[-0.121542],[7.158310],[-9.223743],[6.723859],[0.323820],[1.000101],[-8.716759],[-9.224061],[-5.270245],[-4.442366],[-4.933821],[-9.694026],[7.896971],[-2.776011],[3.804556],[-3.739267],[-5.169940],[2.931652],[9.159382],[-8.785518],[-8.275329],[-9.892603],[-0.907937],[-7.131105],[-4.778122],[-0.578516],[6.302736],[3.400749],[1.306766],[9.795198],[1.182159],[-0.215359],[5.714987],[-2.467352],[-5.194083],[-4.083896],[2.114119],[8.992710],[3.715842],[-1.057841],[3.506379],[-5.759728],[-6.137615],[5.401679],[-1.135497],[-6.018458],[-8.287366],[3.053039],[-4.339672],[-3.583644],[-7.442145],[6.541333],[4.107078],[-3.277194],[-4.305052],[-5.169634],[3.788335],[7.606048],[-3.924942],[4.130694],[8.543527],[2.182215],[-4.243462],[6.865440],[-0.358026],[-5.259366],[-8.110301],[-1.430394],[-5.660842],[-8.575056],[-2.897788],[-5.117543],[-0.953456],[8.151232],[6.946649],[2.422072],[-8.093307],[-0.116271],[9.468586],[-0.004665],[-7.869559],[-1.511512],[-7.881352],[-7.703268],[8.159294],[-9.369217],[-8.093640],[2.374129],[-5.340706],[3.677224],[2.342609],[-7.481810],[4.101860],[8.251360],[-6.704543],[9.943699],[-8.111455],[-4.421918],[-1.242146],[9.586486],[5.359569],[5.327941],[6.181761],[-5.639946],[6.702443],[0.534937],[-1.796730],[4.011437],[-2.606910],[-2.298851],[-8.840292],[1.174757],[-0.440481],[7.505178],[8.459623],[-9.043522],[-2.297762],[-5.113977],[9.811357],[6.565873],[-7.852518],[8.801189],[-0.061526],[4.156411],[6.114771],[-2.015740],[4.576793],[-7.726603],[9.422701],[-5.906939],[2.739650],[4.401036],[5.053295],[9.445655],[9.993765],[4.462163],[3.572803],[-5.387980],[9.601631],[-8.843842],[-1.565756],[-2.605145],[4.410416],[7.749225],[7.661321],[2.733432],[-6.726773],[-1.415136],[-6.922265],[-5.251888],[3.260238],[6.779099],[7.210206],[-1.649986],[3.117200],[7.126918],[9.429266],[8.324985],[8.483159],[7.368333],[5.036210],[2.019795],[-3.887705],[9.103153],[5.618434],[-2.567803],[6.185825],[3.684274],[9.264098],[-7.235591],[-1.508019],[-4.735060],[1.308681],[-5.756452],[-6.737679],[5.489395],[-5.228540],[-7.895789],[2.382215],[2.985796],[2.271923],[0.085651],[-6.545679],[6.939292],[-4.151229],[-1.642551],[-1.656488],[3.696590],[1.712497],[-9.231867],[5.497981],[6.481711],[-9.551527],[-8.438308],[9.674389],[-5.123005],[4.221122],[5.588845],[-3.536457],[-8.707232],[-4.951443],[6.531989],[1.754027],[8.601900],[8.759294],[7.775946],[3.371547],[-5.293519],[-8.235486],[9.462442],[2.143766],[-6.364460],[2.323363],[-9.233704],[9.191023],[8.832878],[4.992763],[-6.490212],[4.595362],[1.096580],[6.380667],[0.260589],[4.976459],[-0.876249],[2.959813],[1.938175],[2.088858],[1.994343],[-3.310695],[-3.542404],[-3.389972],[3.735024],[-3.866128],[5.685658],[3.688588],[-6.307567],[5.943458],[-0.730554],[-7.467511],[-1.197668],[-6.459135],[-4.839369],[4.738668],[9.060668],[2.632507],[4.993019],[0.111453],[2.504982],[-6.958185],[3.267452],[-0.403652],[-5.009639],[4.976787],[-0.908329],[2.350394],[2.167311],[0.133710],[8.246725],[-2.028665],[-3.899187],[-0.011196],[2.479664],[-0.122096],[-6.579781],[6.938311],[6.818906],[4.742088],[0.706056],[-1.778623],[-8.781589],[-3.683818],[6.391060],[4.608280],[3.560510],[1.448282],[9.972683],[3.725294],[2.698703],[-6.168023],[3.782578],[8.012689],[5.907856],[-9.164695],[-2.480487],[-5.591141],[5.868947],[-5.425389],[-6.146124],[3.274786],[0.268073],[6.519521],[0.116956],[-2.748485],[1.727265],[-5.772280],[-0.453859],[2.000407],[-4.030353],[4.494885],[-8.100806],[-1.513636],[-7.158968],[-6.047470],[-4.017340],[-8.879962],[3.983868],[5.814392],[3.019740],[8.646200],[-7.628399],[4.221259],[-1.304171],[-2.463177],[-5.875591],[3.664708],[6.278410],[-6.559116],[-9.577165],[0.916459],[4.684152],[0.414230],[4.072742],[5.065984],[-5.623983],[4.186391],[-7.935772],[8.321773],[1.934601],[4.082069],[0.637294],[-9.368343],[-8.337428],[9.233568],[-2.077817],[-4.291510],[-2.534211],[-4.788424],[-1.762779],[-0.564433],[-3.739386],[3.986559],[-5.759260],[9.928512],[-6.003535],[-0.469177],[6.085255],[-4.229675],[7.489441],[2.325327],[-4.030872],[1.727860],[5.452893],[2.657921],[0.347161],[-0.435750],[1.895344],[-2.195124],[-6.395987],[-9.970821],[4.051246],[8.049159],[8.236220],[-8.703715],[5.417863],[-0.491529],[5.078378],[-1.115073],[7.241414],[-9.293012],[-7.420087],[9.309970],[-4.014431],[9.282031],[2.773945],[3.799024],[-2.214930],[-6.304606],[2.066896],[3.868271],[-7.200504],[-8.858522],[5.437776],[-8.374218],[-9.770869],[-4.397023],[0.989821],[3.630151],[0.979978],[-7.768429],[-6.450550],[5.786639],[-6.883992],[-2.068949],[2.292050],[-1.496099],[-2.208629],[4.735973],[-6.010333],[-6.138839],[2.174849],[1.807659],[-7.206882],[-7.960205],[9.847575],[3.914666],[4.966691],[6.245404],[-4.764495],[4.719120],[4.648168],[3.528434],[-8.033722],[1.742074],[-1.459542],[-0.260133],[-3.923388],[-8.370503],[-0.958484],[8.857770],[9.226424],[4.930685],[6.308837],[3.627472],[-9.273508],[5.628099],[-3.081192],[2.217809],[-1.241489],[5.868017],[2.584875],[-7.066477],[7.141576],[-5.936543],[4.920804],[-0.627325],[-0.100293],[2.494925],[-2.944224],[8.274975],[0.605327],[-2.518842],[2.857226],[7.232176],[-6.442739],[-4.082097],[-4.897437],[-0.775682],[6.803549],[6.190859],[-5.271287],[-1.419341],[6.701264],[-9.667765],[-1.956737],[-1.590677],[7.507482],[2.136518],[2.888673],[-0.451561],[-8.131193],[6.687599],[6.411196],[-2.563401],[-5.017199],[8.992346],[6.100307],[-3.348933],[-9.578936],[-5.477541],[-0.129079],[-9.602093],[2.555598],[5.636782],[-9.009116],[9.713798],[-8.818864],[1.597159],[-0.951640],[7.977279],[3.645672],[0.358377],[-0.956814],[5.051373],[-4.835954],[2.054472],[8.839293],[-8.286921],[9.429752],[5.366985],[1.996724],[-0.620638],[3.733830],[9.540930],[-0.625575],[-6.107071],[-2.768836],[-3.196344],[0.315090],[7.267370],[-7.830489],[7.026789],[-5.321430],[-1.491257],[0.007714],[-0.752058],[-6.215799],[-5.794125],[-9.907646],[6.312662],[-4.113283],[8.557503],[0.353032],[7.561367],[2.974943],[3.090963],[7.425558],[8.747033],[-1.838154],[-9.352818],[9.763759],[3.437399],[9.921802],[2.724524],[9.655284],[-6.317446],[3.289943],[-9.302246],[-6.548719],[1.466221],[-8.609937],[9.703074],[8.342526],[-6.500195],[-3.539199],[4.751378],[7.013947],[-5.917898],[0.659306],[-8.376863],[-2.134302],[-9.332653],[-4.143309],[2.979231],[6.895700],[1.735707],[3.998962],[1.630081],[2.548435],[-7.788766],[-9.526166],[-1.163252],[-9.649053],[2.457323],[-7.926955],[0.650479],[-8.412175],[-2.502809],[-8.830035],[3.896197],[0.710754],[-4.008043],[4.258222],[0.317086],[3.554087],[3.750084],[-4.751612],[6.840805],[-2.390028],[-3.499474],[-0.393949],[5.482912],[5.107280],[-2.701596],[3.577218],[7.793242],[-0.771574],[8.891365],[-7.737719],[-1.749019],[3.405592],[5.972739],[8.405322],[-5.978166],[9.985321],[6.957962],[-3.455660],[9.497364],[-1.865283],[-6.310504],[4.716728],[-9.439899],[0.503916],[-6.216618],[3.296235],[3.152927],[-6.586070],[-5.320855],[1.187986],[6.994161],[6.694758],[-7.165387],[7.029620],[8.610483],[1.032718],[-0.435884],[-1.862866],[-8.914771],[-9.946660],[9.605620],[-1.399381],[-2.225625],[0.874786],[-7.766157],[-3.224388],[-7.950755],[-1.596924],[4.576988],[-0.933124],[-1.927261],[-1.938103],[-7.167253],[6.781901],[-6.628863],[8.667420],[4.607298],[-7.654342],[-4.811882],[-2.061997],[-3.168402],[-1.662712],[-5.603603],[-0.287025],[8.739848],[5.797104],[-2.407773],[-3.810036],[-5.941110],[-1.575810],[3.031858],[-8.102852],[3.493154],[9.568261],[-6.000402],[-2.200993],[-0.715116],[0.678528],[-5.481322],[-9.211174],[-5.920156],[1.306197],[-7.212388],[-2.963131],[8.250050],[1.376933],[-0.736183],[-7.388255],[1.290518],[-7.504090],[2.239514],[-9.771965],[2.454179],[6.675289],[5.262176],[7.289454],[2.629749],[6.246333],[-3.867206],[-4.560135],[-5.460422],[8.757609],[4.168285],[-2.570008],[2.119419],[-5.471222],[3.464492],[-6.872361],[7.750405],[-7.093732],[8.336163],[-9.861358],[-7.457537],[-2.354405],[7.854134],[2.770601],[4.311157]], dtype = "float64")#candidate|6452|(819, 1)|const|float64
call_6451 = func_2829_call(relay.reshape(const_6452.astype('float64'), [7, 13, 9]))
call_6453 = func_2829_call(relay.reshape(const_6452.astype('float64'), [7, 13, 9]))
uop_6456 = relay.sqrt(uop_6436.astype('float64')) # shape=(6, 15, 1)
uop_6458 = relay.sqrt(uop_6438.astype('float64')) # shape=(6, 15, 1)
uop_6467 = relay.log2(uop_6456.astype('float32')) # shape=(6, 15, 1)
uop_6469 = relay.log2(uop_6458.astype('float32')) # shape=(6, 15, 1)
func_938_call = mod.get_global_var('func_938')
func_941_call = mutated_mod.get_global_var('func_941')
const_6487 = relay.const([2.227884,3.053821,-3.893097,-4.811452,-8.233160,3.235564], dtype = "float32")#candidate|6487|(6,)|const|float32
const_6488 = relay.const([-4.425545,9.602109,4.591197,-9.172325,2.172959,6.731403,-2.171554,-3.225436,7.211262,0.302166,-4.458124,-3.329675,5.066076,5.922122,-8.633282,2.240614,-0.530326,9.626366,1.662896,-5.472331,8.702695,2.379823,1.842995,-3.087460], dtype = "float64")#candidate|6488|(24,)|const|float64
call_6486 = relay.TupleGetItem(func_938_call(relay.reshape(const_6487.astype('float32'), [1, 1, 6]), relay.reshape(const_6488.astype('float64'), [24,]), ), 9)
call_6489 = relay.TupleGetItem(func_941_call(relay.reshape(const_6487.astype('float32'), [1, 1, 6]), relay.reshape(const_6488.astype('float64'), [24,]), ), 9)
func_1123_call = mod.get_global_var('func_1123')
func_1125_call = mutated_mod.get_global_var('func_1125')
const_6491 = relay.const([9.094267,4.707145,4.406320,-1.595088,-4.661921,2.768452,-6.283866,-5.660386,-5.151503,-6.878694,-9.308560,-6.507492,0.841031,7.416349,-0.427841,5.073107,3.364736,-5.016741,-2.360205,0.599257,-4.065129,-6.027024,-5.055439,-7.672196,-2.953244,4.215095,1.871042,3.219275,6.743753,8.132970,-8.077002,6.370878,-7.517129,-2.972074,-9.960102,2.022128,-0.222256,-3.458395,-9.593886,5.680956,4.558332,6.438173,-9.431121,3.602935,9.822918,5.674439,-3.885481,7.835112,-4.298547,3.847362,-5.271038,8.795205,-4.660266,7.917865,8.709342,8.237882,2.025731,9.888830,1.024862,8.613345,-1.932794,-2.604619,2.495514,6.040173,-7.838922,2.321395,0.380702,5.919216,-4.929007,-4.822473,-2.566785,-9.023594,-2.753802,2.428720,-0.668207,-6.942104,-2.989097,4.043733,0.821796,1.506451,-7.624570,-8.091831,-6.081575,9.485073,-7.219446,-1.074288,-8.771678,-6.147813,-4.398674,-7.841446,-2.071299,1.231544,-1.212002,-4.956769,3.231695,4.793386,-3.324359,5.543091,3.905554,6.170512,-4.205910,-2.872462,-4.899942,7.861735,8.732524,-4.115603,9.804446,-7.742679,-3.516284,5.271779,-7.419298,4.534401,-8.614906,8.627273,-9.718328,3.760369,-1.335496,4.986265,-4.397575,-9.601758,-3.670955,9.347344,-1.126408,8.589848,-0.619840,4.049225,5.765462,-8.695340,8.346111,-8.732665,-9.795652,5.813379,6.422069,-0.847262,6.291564,2.138871,3.610224,6.075068,-3.157095,-0.132176,9.176992,-1.809701,9.338579,-8.978447,-5.187920,-1.781801,-9.432549,-8.023758,-7.381370,1.154277,6.144170,2.949641,5.576470,-7.137038,-2.064291,6.408743,-0.455621,-8.582943,-2.051422,6.514889,0.791969,6.585664,9.172617,-3.345122,-3.308582,2.926159,-0.867375,-3.828236,-4.819358,-1.655148,-9.518363,-5.245076,4.556939,-0.985923,-2.077109,-1.308045,2.375060,8.088262,2.531838,-4.886938,-5.908583,4.173879,-3.618700,-9.921144,2.421616,3.204633,-5.964538,-6.482949,6.940166,9.229536,-5.639828,0.648918,-3.304588,-0.071286,-6.280678,4.359988,6.434309,-0.088427,7.460743,-9.881620,5.137635,-5.505623,1.014845,7.037723,9.702017,-4.297513,-2.813508,7.761819,7.899761,8.116514,-0.905328,-9.090102,9.223213,0.367216,2.126803,1.941185,-2.863180,6.797058,9.084698,-3.511218], dtype = "float32")#candidate|6491|(220,)|const|float32
call_6490 = relay.TupleGetItem(func_1123_call(relay.reshape(const_6491.astype('float32'), [10, 2, 11])), 0)
call_6492 = relay.TupleGetItem(func_1125_call(relay.reshape(const_6491.astype('float32'), [10, 2, 11])), 0)
func_1472_call = mod.get_global_var('func_1472')
func_1479_call = mutated_mod.get_global_var('func_1479')
const_6495 = relay.const([0.454162,1.706585,-4.709266,0.949285,8.366416,-5.677934,7.580662,-3.002714,-6.140194,8.061127,-4.505125,2.914348,-2.254687,4.377989,2.661717,-2.591498,5.999193,-9.951231,-3.634538,8.238854,3.577435,8.086652,2.867560,5.175423,-7.323076,-5.178969,-8.127960,-7.370764,3.634551,-1.741065,-7.133341,3.377611,-2.507038,7.452310,1.746072,-5.280242,-0.986930,7.735573,9.151157,9.282262,5.691659,9.281323,2.991180,-3.273317,0.807540,-3.489007,-3.512306,6.123377,5.022393,4.204196,-5.054855,-3.373728,9.092568,-5.900787,-3.892875,1.514286,0.823302,0.660418,-8.743799,7.498311,-6.674966,-1.757849,9.297475,9.210947,-7.791295,9.585566], dtype = "float64")#candidate|6495|(66,)|const|float64
var_6496 = relay.var("var_6496", dtype = "float64", shape = ())#candidate|6496|()|var|float64
var_6497 = relay.var("var_6497", dtype = "float64", shape = (1056,))#candidate|6497|(1056,)|var|float64
call_6494 = relay.TupleGetItem(func_1472_call(relay.reshape(const_6495.astype('float64'), [1, 6, 11]), relay.reshape(var_6496.astype('float64'), []), relay.reshape(call_6486.astype('float64'), [14, 1]), relay.reshape(const_6488.astype('float64'), [6, 4]), relay.reshape(var_6497.astype('float64'), [16, 6, 11]), relay.reshape(call_6490.astype('float32'), [220,]), ), 8)
call_6498 = relay.TupleGetItem(func_1479_call(relay.reshape(const_6495.astype('float64'), [1, 6, 11]), relay.reshape(var_6496.astype('float64'), []), relay.reshape(call_6486.astype('float64'), [14, 1]), relay.reshape(const_6488.astype('float64'), [6, 4]), relay.reshape(var_6497.astype('float64'), [16, 6, 11]), relay.reshape(call_6490.astype('float32'), [220,]), ), 8)
func_4297_call = mod.get_global_var('func_4297')
func_4300_call = mutated_mod.get_global_var('func_4300')
const_6503 = relay.const([[-1.067637,9.788474,-9.077249,-4.273235,-4.587857,-2.892972,8.470887]], dtype = "float32")#candidate|6503|(1, 7)|const|float32
call_6502 = func_4297_call(relay.reshape(var_6496.astype('float32'), []), relay.reshape(const_6503.astype('float32'), [7, 1, 1]), )
call_6504 = func_4297_call(relay.reshape(var_6496.astype('float32'), []), relay.reshape(const_6503.astype('float32'), [7, 1, 1]), )
output = relay.Tuple([bop_6446,call_6451,const_6452,uop_6467,call_6486,const_6487,const_6488,call_6490,const_6491,call_6494,const_6495,var_6496,var_6497,call_6502,const_6503,])
output2 = relay.Tuple([bop_6449,call_6453,const_6452,uop_6469,call_6489,const_6487,const_6488,call_6492,const_6491,call_6498,const_6495,var_6496,var_6497,call_6504,const_6503,])
func_6521 = relay.Function([var_6496,var_6497,], output)
mod['func_6521'] = func_6521
mod = relay.transform.InferType()(mod)
var_6522 = relay.var("var_6522", dtype = "float64", shape = ())#candidate|6522|()|var|float64
var_6523 = relay.var("var_6523", dtype = "float64", shape = (1056,))#candidate|6523|(1056,)|var|float64
output = func_6521(var_6522,var_6523,)
func_6524 = relay.Function([var_6522,var_6523,], output)
mutated_mod['func_6524'] = func_6524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6304_call = mod.get_global_var('func_6304')
func_6305_call = mutated_mod.get_global_var('func_6305')
call_6539 = func_6304_call()
call_6540 = func_6304_call()
output = relay.Tuple([call_6539,])
output2 = relay.Tuple([call_6540,])
func_6552 = relay.Function([], output)
mod['func_6552'] = func_6552
mod = relay.transform.InferType()(mod)
output = func_6552()
func_6553 = relay.Function([], output)
mutated_mod['func_6553'] = func_6553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6560 = relay.var("var_6560", dtype = "float64", shape = (15, 3, 10))#candidate|6560|(15, 3, 10)|var|float64
uop_6561 = relay.rsqrt(var_6560.astype('float64')) # shape=(15, 3, 10)
output = relay.Tuple([uop_6561,])
output2 = relay.Tuple([uop_6561,])
func_6564 = relay.Function([var_6560,], output)
mod['func_6564'] = func_6564
mod = relay.transform.InferType()(mod)
mutated_mod['func_6564'] = func_6564
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6565 = relay.var("var_6565", dtype = "float64", shape = (15, 3, 10))#candidate|6565|(15, 3, 10)|var|float64
func_6564_call = mutated_mod.get_global_var('func_6564')
call_6566 = func_6564_call(var_6565)
output = call_6566
func_6567 = relay.Function([var_6565], output)
mutated_mod['func_6567'] = func_6567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6552_call = mod.get_global_var('func_6552')
func_6553_call = mutated_mod.get_global_var('func_6553')
call_6569 = relay.TupleGetItem(func_6552_call(), 0)
call_6570 = relay.TupleGetItem(func_6553_call(), 0)
func_5588_call = mod.get_global_var('func_5588')
func_5594_call = mutated_mod.get_global_var('func_5594')
var_6572 = relay.var("var_6572", dtype = "uint64", shape = (3, 3))#candidate|6572|(3, 3)|var|uint64
var_6573 = relay.var("var_6573", dtype = "uint64", shape = (45,))#candidate|6573|(45,)|var|uint64
var_6574 = relay.var("var_6574", dtype = "float32", shape = (220,))#candidate|6574|(220,)|var|float32
const_6575 = relay.const([[8.853499],[-5.824026],[-7.181590],[-2.678321],[5.178108],[6.109765],[-7.181747],[2.637032],[8.657504],[-0.260642],[-7.736505],[-3.377778],[7.031746],[1.350025],[9.191813],[-4.546808],[-4.095138],[4.557092],[-5.137229],[2.472567],[0.202613],[2.093749],[-0.186098],[-5.467025],[-6.152652],[3.995729],[3.894217],[7.744431],[-6.827031],[8.954382],[-3.137449],[-4.443450],[-0.866332],[5.999557],[-9.776335],[3.728115],[4.890848],[6.343439],[1.482482],[8.810203],[-9.272433],[-3.839246],[7.091706],[-0.051983],[-8.638947],[4.257251],[2.594307],[-7.619196],[6.420885],[-9.938370],[-7.352755],[1.613339],[-2.978357],[6.119022],[-9.603322],[-9.269213],[-5.148017],[7.109836],[-8.259157],[4.015004],[5.722744],[0.786440],[-4.806020],[-3.877882],[-6.901387],[2.663796],[-0.337880],[-3.776836],[4.930012],[-1.301445],[7.177545],[2.339150],[6.511886],[9.739547],[-5.341742],[8.285091],[3.626880],[0.532582],[-1.005549],[2.715698],[-1.431330],[6.320304],[-5.164930],[-2.571419],[6.198432],[0.873984],[1.736225],[-7.445395],[7.450331],[-4.687829],[-9.189593],[7.765178],[-1.891545],[-5.758855],[2.234434],[4.620532],[-7.380221],[-7.675291],[6.325504],[6.040685],[-6.179327],[9.926559],[9.986076],[-3.568508],[6.003952],[-2.222594],[-3.142155],[5.931018],[-3.027873],[0.844067],[0.680253],[-0.599089],[1.336340],[-4.279628],[5.472640],[-3.613612],[9.165669],[6.757792],[0.170059],[7.469034],[-5.244871],[6.282462],[-8.673401],[5.862379],[-3.710567],[-1.790709],[-0.707610],[1.016709],[9.061041],[-3.309712],[1.983165],[-5.004518],[-6.765699],[9.858771],[-9.489026],[-8.650390],[1.724260],[3.055460],[-4.751128],[-0.521785],[-2.514760],[-2.287037],[5.793877],[-3.659574],[-2.487403],[5.556792],[4.247570],[-8.816538],[7.889542],[-7.679856],[-4.046817],[-8.753467],[-6.744900],[2.538466],[3.546978],[1.355683],[-6.103527],[-0.660844],[6.005179],[9.539889],[7.376319],[-7.978139],[-5.476151],[-7.695347],[-1.782292],[5.438393],[8.489471],[-8.815297],[-5.479064],[-9.481973],[-7.775813],[8.678341],[1.224721],[-9.445047],[-9.908454],[-5.617389],[8.236482],[1.402569],[2.666886],[5.858283],[-2.457065],[8.870836],[2.164054],[0.211867],[3.455379],[3.713371],[5.648242],[2.243644],[-8.358279],[9.879766],[5.022039],[-5.537316],[-2.102173],[-3.614939],[7.034929],[-5.763975],[4.612789],[2.919005],[6.085000],[-6.316713],[-0.130970],[-2.350917],[-3.910818],[-3.653476],[-3.997760],[7.077490],[-5.389732],[-7.163876],[7.396470],[-8.764476],[-1.841490],[-5.027386],[-4.682036],[-8.753525],[-6.187318],[2.701975],[-6.566097],[-9.208871],[3.674310],[1.160542],[4.866103],[9.991079],[-3.768925],[-4.813824],[-4.913109],[-6.007911],[4.055510],[-2.197809],[-7.488055],[-4.214269],[1.749270],[7.901309],[5.185618],[-9.120183],[7.095504],[-2.516847],[2.899486],[-0.369330],[8.686539],[8.528855],[6.904650],[8.472786],[8.662493],[8.073133],[-0.675245],[-8.248584],[6.666328],[-7.524159],[-0.724195],[9.052733],[-9.984963],[-6.115017],[9.046008],[-5.615914],[9.996614],[-2.955601],[2.871274],[-0.834243],[-0.169939],[2.017474],[3.305908],[-3.450780],[6.412239],[0.422381],[-8.379017],[7.351371],[9.789072],[-3.265849],[-3.100714],[5.701284],[-0.885175],[4.826077],[2.184275],[-4.338152],[3.014552],[1.901675],[-0.841906],[4.150756],[-4.370103],[2.236302],[3.727446],[9.347336],[-3.549775],[7.383900],[-2.161873],[-9.917674],[-6.623493],[9.552809],[4.681104],[9.215844],[5.911456],[3.324363],[8.424969],[8.432227],[-4.969530],[-3.021583],[-6.594223],[-8.303502],[0.490972],[3.655987],[-8.930135],[-9.646958],[4.083428],[9.380258],[-6.313335],[1.329243],[3.554917],[7.451282],[1.933765],[-4.712244],[1.011093],[0.918785],[-2.728764],[-2.444609],[6.283820],[-9.212614],[8.381109],[0.903514],[-1.286126],[-6.162283],[1.739387],[-2.512132],[-8.297870],[6.580299],[-4.616424],[2.625982],[-9.765605],[3.068859],[-3.417385],[-2.253133],[-3.885273],[-4.807977],[-0.152740],[-9.995603],[-2.968664],[4.224001],[7.450073],[-3.700752],[7.943655],[4.996476],[3.309842],[9.122579],[-2.662199],[-9.934360],[-9.352958],[-4.270873],[7.236818],[-0.848850],[-3.466816],[-5.426141],[1.697278],[8.670618],[9.445169],[4.000485],[8.580030],[9.858812],[7.584180],[9.189057],[1.506241],[6.842159],[-5.545067],[-7.567299],[-7.793175],[1.016897],[-0.636295],[7.668237],[6.380191],[-4.209282],[-4.524158],[7.342115],[-3.432831],[-3.044241],[1.965832],[4.557135],[6.314511],[-7.740280],[2.921202],[-5.506792],[-9.454727],[-5.732855],[7.978515],[-4.652610],[-6.326306],[-8.859368],[-9.280498],[6.546310],[-2.766379],[6.258709],[1.665851],[-0.059619],[9.849994],[-1.138385],[-8.852231],[-1.234308],[7.533786],[6.123248],[-9.257385],[0.719577],[-1.730615],[6.623838],[-8.697290],[2.481056],[-4.179743],[-1.633908],[-9.185876],[-4.587112],[-7.115486],[-2.512404],[0.776163],[9.048614],[7.896676],[-4.035611],[-7.005062],[4.608727],[0.636661],[-8.723075],[8.449306],[-1.844356],[-7.183249],[7.497667],[2.166195],[-0.874499],[-1.564211],[-1.592640],[6.171988],[-5.609557],[-7.814465],[-9.732258],[5.471821],[1.920657],[-3.150905],[-7.329632],[-2.843553],[3.989527],[6.468544],[9.710797],[-5.221266],[-1.154405],[-0.384262],[4.851237],[-6.295677],[-2.103674],[-9.443137],[-6.533302],[-4.288378],[-2.911574],[1.869278],[-9.057596],[3.389559],[-0.569218],[-0.284773],[0.155260],[8.213810],[-7.907206],[2.887121],[5.849532],[6.751005],[-4.896827],[-5.848154],[6.818250],[9.471024],[9.542821],[-4.664615],[-4.058484],[8.411711],[5.134350],[-0.241165],[-5.334818],[-7.667745],[6.395812],[-7.961885],[-6.137218],[-7.296235],[3.206266],[2.561714],[-3.430055],[-4.255963],[4.916695],[0.959655],[-5.194684],[-2.169351],[0.356697],[1.417235],[-8.433421],[-8.744730],[5.451362],[-9.231826],[-3.704930],[-9.806426],[9.456274],[4.998352],[-7.511174],[1.339977],[-1.174280],[1.135148],[2.091552],[-6.407613],[-8.477893],[-6.870398],[-7.666526],[-9.406960],[-6.740905],[8.061155],[-3.246839],[-6.256848],[0.883015],[6.709711],[-0.670577],[0.251374],[4.528708],[7.873706],[-0.790433],[5.397367],[9.377167],[5.961213],[-4.036414],[1.182016],[-7.050508],[-5.826619],[7.821252],[-9.245604],[-9.583809],[-2.866803],[-9.903776],[6.609837],[7.015341],[-8.191455],[7.375292],[-8.425664],[4.817836],[-3.095637],[-8.846803],[-9.119700],[-0.837671],[3.965459],[-6.967622],[-7.424790],[3.056031],[5.166991],[-9.397852],[6.976420],[9.834211],[9.789345],[-2.785381],[-5.204355],[5.240714],[0.611869],[-4.061767],[-9.927429],[-5.009784],[-9.106293],[4.012668],[4.545497],[-6.186082],[-1.072249],[-8.537501],[-3.869601],[4.937654],[-5.426722],[4.828123],[2.582542],[0.795020],[-3.198240],[6.429606],[-4.908518],[-1.454930],[-1.521251],[8.299677],[-0.248392],[-4.999052],[-6.124282],[4.578339],[-3.900701],[-2.918437],[-2.376204],[9.939709],[-0.124931],[-2.662698],[7.899958],[1.117870],[-0.140585],[-6.949401],[1.779037],[-2.408163],[7.297734],[-1.832433],[0.574874],[-5.210859],[-5.666296],[-4.606422],[7.067120],[-2.566309],[-0.712226],[-4.474429],[-3.646153],[2.573207],[-1.176045],[8.537923],[2.671117],[0.085380],[-5.041552],[-7.777790],[7.870609],[-9.104456],[4.694467],[-6.695786],[-6.026385],[-3.017313],[-9.468466],[-2.490928],[-8.668199],[3.921538],[-8.313811],[-0.822583],[-7.965568],[-5.327361],[8.586505],[1.069638],[-1.371102],[-2.735639],[-1.191856],[-2.716108],[-1.673920],[-1.956574],[7.435907],[5.004305],[-7.833094],[-1.358109],[-8.213510],[8.651097],[1.555943],[8.207182],[-4.931186],[9.421733],[-5.869523],[1.365067],[9.861272],[-3.310680],[-5.355091],[-9.624750],[2.183847],[-4.201410],[-5.478771],[-0.845352],[6.294128],[3.876009],[-7.494653],[-2.058255],[7.543320],[1.859184],[0.668635],[0.479453],[-7.137440],[-7.488698],[-4.548343],[-5.309407],[6.539802],[4.195143],[-1.146250],[-4.893027],[5.797365],[-2.859610],[-4.096202],[2.151167],[-7.623695],[-8.310800],[4.308101],[-2.356597],[6.066588],[-7.819669],[7.616511],[2.440656],[7.601643],[-9.257388],[8.722434],[-8.574857],[9.464036],[-0.343249],[1.011934],[1.893637],[-6.816076],[5.150160],[3.490585],[9.971217],[9.357175],[-8.912377],[-6.821019],[0.889059],[7.842427],[2.472730],[-7.571424],[4.220600],[-8.468471],[9.190748],[0.185524],[-1.112193],[-8.760525],[8.270635],[0.236687],[-3.902394],[8.142119],[-7.740293],[0.448409],[2.717031],[2.637261],[2.427268],[-6.791498],[7.563782],[-2.452078],[-1.160496],[-0.054667],[7.054169],[0.097134],[-8.279833],[8.739302],[7.941439],[-0.003252],[-7.257826],[9.828632],[-3.300892],[3.339305],[-4.358257],[-6.121253],[-4.789259],[-5.129183],[9.103986],[3.605111],[-6.911591],[7.388141],[-9.762326],[0.500657],[6.878606],[2.486800],[2.488963],[-6.600719],[4.011252],[5.300778],[2.042025],[-0.142181],[-6.686053],[6.786073],[7.091461],[-3.398713],[0.967491],[-8.624718],[-0.193765],[6.664596],[6.349681],[-3.563065],[1.102494],[-2.023488],[-6.314672],[-5.680630],[-3.946449],[6.639232],[3.272830],[-2.237177],[-2.001511],[-2.415485],[-1.434739],[2.742964],[6.896136],[3.491987],[3.547829],[1.392529],[-3.941556],[8.448777],[-0.488160],[-8.220666],[-4.797225],[1.625403],[-8.015334],[-2.443138],[6.304407],[-6.681104],[-8.387645],[-5.956310],[-0.205928],[-9.352746],[5.225713],[-7.965962],[-7.560629],[-9.417954],[0.621341],[7.473633],[5.989544],[-6.478974],[-0.568604],[-7.362342],[9.528730],[5.031701],[-6.688792],[9.668373],[9.030666],[-1.244635],[-3.539887],[-7.211397],[-5.788472],[9.432154],[-8.959400],[-5.611032],[1.401200],[7.971819],[6.242689],[3.453808],[6.696713],[-1.211028],[6.163947],[-7.017501],[-0.373314],[0.204076],[-3.971188],[6.962827],[2.706285],[-3.619940],[4.789741],[1.795782],[0.818236],[-0.568072],[-8.572510],[-0.870215],[-6.513510],[4.642678],[-0.006169],[1.482834],[-2.591476],[5.894923],[-9.175901],[1.636505],[2.175469],[6.995636],[-9.248147],[-5.860550],[-8.771061],[3.791636],[-6.069563],[-9.864124],[-5.183624],[-1.996187],[7.015344],[0.669978],[8.377743],[-8.363174],[8.479358],[3.407647],[-7.197889],[6.262241],[5.916419],[-4.158589],[-9.498089],[-5.692933],[9.942377],[-9.485084],[-2.443102],[0.834206],[-4.968203],[6.062998],[1.608969],[8.911274],[4.507905],[-4.980090],[-5.487154],[3.566570],[2.256783],[2.718883],[7.517072],[-9.295312],[-9.163695],[-3.138750],[-7.118762],[-2.661934],[1.698789],[-7.993482],[-6.834415],[4.580161],[-3.433275],[1.379728],[-1.891933],[-2.563615],[-2.732286],[8.399013],[6.125650],[2.490337],[-9.730623],[-3.343034],[1.403360],[3.127210],[-1.972239],[7.399743],[-1.188805],[-6.794708],[-3.304057],[7.745207],[-2.468961],[-8.009610],[6.544070],[-9.425146],[-9.344100],[-1.106444],[-1.569827],[2.675192],[2.933285],[-5.914854],[-5.041631],[-7.381559],[-4.473964],[7.625717],[-3.319605],[5.308470],[-5.549754],[-3.010507],[-8.590444],[-5.977322],[-7.202051],[6.368535],[1.452590],[-6.314621],[-6.204112],[-8.449941],[-7.827001],[5.132906],[7.402879],[-2.207408],[5.850506],[0.387041],[5.922967],[2.858195],[-4.698208],[-5.330918],[-2.269044],[1.985502],[-5.674176],[-6.783624],[-4.222246],[0.786954],[-0.941095],[-7.219383],[5.251030],[4.555259],[-8.744918],[-2.471651],[-9.463358],[7.304473],[6.763320],[7.205806],[-7.727987],[7.736042],[-7.288328],[7.826128],[-8.139898],[-5.784529],[9.330768],[4.012093],[8.049546],[8.320618],[9.045697],[2.130711],[2.221728],[-2.959919],[2.556297],[-6.045604],[9.932698],[-1.062780],[2.556881],[-4.571493],[6.457433],[-5.508217],[6.931639],[8.545542],[2.130284],[1.890014],[3.004545],[-7.916940],[7.789172],[0.424425],[2.179409],[-1.592026],[-2.613429],[-4.777117],[-1.112350],[3.049658],[6.910562],[-3.089116],[5.927324],[7.578691],[-2.160435],[6.300941],[-7.691014],[-6.922546],[4.823807],[-5.862884],[9.275215],[6.559158],[5.510720],[-8.470898],[-8.625216],[8.876922],[3.198934],[2.038740],[-4.948133],[3.684666],[0.201773],[-8.707035],[4.523352],[1.763716],[-6.881836],[1.586106],[8.486764],[5.957526],[-4.863001],[-4.755367],[-7.318170],[3.832787],[-2.818336],[-9.258598],[4.577406],[4.100075],[3.094730],[-3.165664],[8.767764],[2.829387],[5.897690],[2.723545],[8.518195],[-6.057786],[-5.989452],[-0.284635],[-2.663446],[5.274416],[-1.718609],[7.017075],[1.587378],[-6.515335],[-3.983533],[4.302923],[5.877732],[-3.935150],[0.127048],[7.679880],[-9.704104],[4.700267],[-5.233938],[7.978126],[7.621037],[5.924681],[8.180604],[7.735067],[-7.718207],[9.653135],[5.716696],[-7.502698],[9.129401],[0.415994],[-4.855906],[9.165086],[-7.421088],[-1.164982],[-8.335749],[-0.289605],[-4.497867],[-7.138720],[-9.998043],[-8.089371],[2.128573],[-9.164021],[2.430697],[5.958490],[2.457227],[3.937823],[0.705742],[-8.399247],[9.640428],[4.057250],[1.559205],[4.631668],[6.142117],[4.258205],[-6.033079]], dtype = "float32")#candidate|6575|(1078, 1)|const|float32
call_6571 = relay.TupleGetItem(func_5588_call(relay.reshape(var_6572.astype('uint64'), [3, 3, 1]), relay.reshape(var_6573.astype('uint64'), [3, 3, 5]), relay.reshape(var_6574.astype('float32'), [1, 220]), relay.reshape(const_6575.astype('float32'), [1078,]), relay.reshape(var_6572.astype('uint64'), [3, 3, 1]), ), 5)
call_6576 = relay.TupleGetItem(func_5594_call(relay.reshape(var_6572.astype('uint64'), [3, 3, 1]), relay.reshape(var_6573.astype('uint64'), [3, 3, 5]), relay.reshape(var_6574.astype('float32'), [1, 220]), relay.reshape(const_6575.astype('float32'), [1078,]), relay.reshape(var_6572.astype('uint64'), [3, 3, 1]), ), 5)
var_6582 = relay.var("var_6582", dtype = "float32", shape = (1078, 9))#candidate|6582|(1078, 9)|var|float32
bop_6583 = relay.equal(const_6575.astype('bool'), var_6582.astype('bool')) # shape=(1078, 9)
bop_6588 = relay.multiply(call_6571.astype('int32'), var_6573.astype('int32')) # shape=(45,)
bop_6591 = relay.multiply(call_6576.astype('int32'), var_6573.astype('int32')) # shape=(45,)
uop_6606 = relay.exp(const_6575.astype('float32')) # shape=(1078, 1)
uop_6608 = relay.log2(uop_6606.astype('float32')) # shape=(1078, 1)
output = relay.Tuple([call_6569,var_6572,var_6574,bop_6583,bop_6588,uop_6608,])
output2 = relay.Tuple([call_6570,var_6572,var_6574,bop_6583,bop_6591,uop_6608,])
func_6631 = relay.Function([var_6572,var_6573,var_6574,var_6582,], output)
mod['func_6631'] = func_6631
mod = relay.transform.InferType()(mod)
mutated_mod['func_6631'] = func_6631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6631_call = mutated_mod.get_global_var('func_6631')
var_6633 = relay.var("var_6633", dtype = "uint64", shape = (3, 3))#candidate|6633|(3, 3)|var|uint64
var_6634 = relay.var("var_6634", dtype = "uint64", shape = (45,))#candidate|6634|(45,)|var|uint64
var_6635 = relay.var("var_6635", dtype = "float32", shape = (220,))#candidate|6635|(220,)|var|float32
var_6636 = relay.var("var_6636", dtype = "float32", shape = (1078, 9))#candidate|6636|(1078, 9)|var|float32
call_6632 = func_6631_call(var_6633,var_6634,var_6635,var_6636,)
output = call_6632
func_6637 = relay.Function([var_6633,var_6634,var_6635,var_6636,], output)
mutated_mod['func_6637'] = func_6637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6304_call = mod.get_global_var('func_6304')
func_6305_call = mutated_mod.get_global_var('func_6305')
call_6654 = func_6304_call()
call_6655 = func_6304_call()
func_2548_call = mod.get_global_var('func_2548')
func_2555_call = mutated_mod.get_global_var('func_2555')
const_6657 = relay.const([-9.856994,-2.183073,5.886689,-2.643786,-9.184114,-6.582929,-1.898662,9.705840,0.185119,-1.464544,-7.543089,-5.270242,-2.789160,-2.124028,0.253776,1.567399,-8.586086,-1.501368,7.423833,7.955972,-3.187560,0.741403,8.792387,-0.256114,8.587425,2.913164,7.436251,3.988705,-0.812603,-3.590753,4.189997,7.590080], dtype = "float32")#candidate|6657|(32,)|const|float32
const_6658 = relay.const([[-8.189755],[1.425676],[4.824692],[-6.724024],[6.821516],[-0.693316],[-8.001359],[-4.646259],[-4.123138],[6.262476],[-9.046504],[-1.361580],[-0.436097],[6.189284],[-7.913819],[-5.795648],[4.024442],[4.974628],[-3.811571],[-2.795896],[4.517230],[4.163800],[-3.047891],[-5.699389],[-8.325433],[3.935189],[-0.243151],[-4.452088],[-1.166806],[8.302798],[0.430618],[7.206373],[-5.531812],[1.444973],[4.672504],[-7.665543],[5.731063],[-3.902988],[-8.121199],[-6.573943],[-7.753366],[5.735403],[4.100700],[-2.435213],[-5.423801],[1.460079],[0.359026],[-2.432932],[3.135417],[7.066308],[2.675896],[2.442615],[3.088826],[-0.271632],[-3.986036],[-3.200228],[4.629619],[-0.518641],[8.669934],[-9.954438],[-9.598514],[4.618784],[-5.335924],[9.434205],[9.973819],[-2.495044],[2.707501],[4.224913],[8.483787],[-6.411600],[-2.276153],[3.372508],[-3.394785],[3.733159],[-8.928719],[4.986600],[7.838975],[-9.113644],[-5.255335],[6.207434],[-4.854221],[-1.801979],[4.030010],[-7.484157],[-1.423506],[8.159873],[2.194683],[-7.081253],[-0.359977],[2.799253],[6.339822],[2.690260],[1.305035],[-9.036924],[-7.232605],[-0.126412],[-9.579194],[-4.795552],[-1.662574],[-8.972616],[5.501820],[-3.957988],[-6.351318],[-0.693968],[-2.710013],[8.221098],[8.803784],[-1.820190],[8.560116],[-9.107147],[-8.833086],[-2.328110],[-4.464671],[-5.377380],[-4.263733],[7.123372],[-6.550835],[-1.024494],[-1.847446],[8.044200],[3.467658],[-6.950046],[-4.840455],[4.838735],[4.186635],[1.723465],[-1.487121],[-1.310383],[-6.404879],[-1.271976],[-3.269574],[-3.541068],[8.721814],[1.448868],[6.067609],[-6.762521],[-1.606368],[0.331696],[5.824252],[-8.133167],[1.810554],[-5.722996],[8.345832],[-6.656167],[1.699718],[-2.858711],[-0.643127],[6.223912],[-3.766693],[9.030831],[9.963618],[-3.916767],[-4.435458],[-3.562183],[-8.698885],[-7.056185],[-9.658591],[-1.866974],[-8.697276],[8.462715],[8.255553],[9.419280],[-7.735940],[5.052967],[4.466724],[2.797280],[-1.407532],[-2.823002],[0.828482],[-3.824225],[5.062483],[9.462758],[7.361087],[-7.064288],[-5.711696],[5.719910],[5.444027],[0.535078],[8.275067],[-5.085128],[7.029770],[-7.507297],[5.596378],[-3.162199],[7.199982],[2.070992],[-3.413913],[8.955069],[-1.925766],[5.614774],[3.083454],[-6.552826],[9.111576],[3.257212],[-1.356462],[6.100942],[9.335932],[7.208725],[0.555920],[4.974197],[-5.703720],[3.489547],[-4.545611],[-7.818993],[-4.703040],[4.127973],[-7.651367],[2.004251],[-1.764903],[8.464139],[-9.511024],[-2.395827],[-2.714005],[9.591022],[-6.805478],[-2.106066],[5.301952],[7.202350],[-6.155713],[-9.652108],[0.486164],[0.175778],[2.260013],[9.726091],[1.213838],[-5.300487],[7.279932],[9.001196],[-2.114471],[3.805096],[0.586297],[7.190562],[-7.314253],[-3.103540],[-5.231048],[5.519253],[2.551390],[8.529013],[2.886660],[-6.318089],[9.866720],[6.494383],[3.231955],[-6.327273],[4.005292],[-3.704359],[-6.236271],[3.284354],[-1.341971],[8.994159],[-5.106100],[-4.976276],[7.246988],[-4.214317],[-8.954232],[9.428312],[2.674117],[6.298872],[1.547938],[-4.621906],[5.990770],[-2.614955],[-6.178288],[-7.065157],[7.954761],[9.578993],[3.186792],[3.685402],[8.093983],[8.488378],[-5.508035],[-1.672725],[9.299756],[8.063428],[6.207599],[4.293190],[-6.507875],[-2.367954],[4.396756],[-8.123190],[5.440941],[-1.597947],[4.569463],[4.911141],[1.920825],[5.506673],[-2.782191],[0.012757],[8.278812],[-1.437522],[-9.909316],[8.738317],[6.007166],[7.915629],[3.076455],[-8.095548],[5.679838],[6.779134],[-2.156384],[-7.480921],[7.092426],[-5.513586],[3.282296],[-8.505574],[-4.045703],[4.035989],[-0.128212],[6.554681],[6.889802],[8.061461],[-3.395164],[2.876024],[-0.454915],[4.885110],[8.766961],[2.733816],[2.471691],[-7.718935],[5.931842],[9.854771],[-4.377898],[5.719677],[7.517210],[-1.530695],[0.351855],[1.925274],[4.107387],[-1.107104],[2.408195],[2.663721],[7.805469],[-0.493258],[-7.806628],[5.784913],[1.613318],[3.533408],[6.023857],[-2.404130],[5.203415],[1.447805],[-4.125078],[3.896437],[2.082662],[-4.070182],[2.306928],[-9.930901],[-5.454648],[6.208275],[3.638217],[-2.668909],[0.516278],[-4.145545],[-1.020715],[7.694876],[-8.110641],[4.085669],[-3.971819],[-5.860145],[-5.014366],[-2.749677],[-5.953458],[-0.367161],[3.886586],[1.085223],[-8.051599],[9.661467],[5.982832],[-0.236959],[3.087015],[-0.857179],[6.586784],[-2.792253],[-6.509208],[1.462527],[7.439337],[-6.902515],[-1.359310],[-4.848417],[-6.927511],[5.237656],[-8.527762],[-7.006624],[-2.268520],[6.378643],[-4.948384],[2.575440],[5.568489],[1.204750],[3.294041],[-9.676520],[1.414548],[-0.280813],[3.542324],[9.260732],[9.071579],[-4.341975],[-7.554426],[5.836595],[-9.840594],[-1.629234],[-1.641526],[-7.958712],[6.194844],[5.424907],[-8.556656],[-0.371476],[-3.103534],[-9.742855],[7.303701],[8.071420],[-3.790501],[-8.529731],[-5.578262],[6.245930],[6.759143],[-1.091170],[-3.214867],[3.133961],[-9.514512],[-4.499121],[5.317497],[-5.974502],[3.724533],[6.761099],[1.040681],[4.568440],[0.399150],[-1.944031],[-8.320204],[-1.438964],[1.051558],[9.015588],[3.813739],[9.494800],[-0.630754],[-0.397257],[-3.156410],[9.886996],[5.908414],[2.884057],[-4.826548],[-5.483936],[-9.984191],[4.540995],[4.094070],[-5.061239],[-7.114977],[-5.952489],[2.286975],[-3.609692],[3.923195],[4.557973],[3.991647],[6.468219],[8.405091],[0.754788],[-9.794226],[5.608464],[-7.519925],[3.489234],[-8.013978],[-4.804821],[9.819904],[-1.424064],[6.150836],[-6.220425],[-2.467294],[-4.301987],[8.940782],[-1.398818],[-4.652373],[-0.528189],[-7.473706],[-5.234238],[-3.135587],[-5.556052],[7.195707],[-6.771361],[7.446941],[9.809697],[8.332172],[9.179902],[0.599889],[3.570110],[9.934404],[-5.402626],[-3.532853],[-1.130434],[-0.736022],[7.229586],[-9.581512],[-1.926919],[6.986550],[1.009821],[3.261157],[9.560938],[-4.235418],[-5.305858],[-3.390910],[-0.413480],[-9.559822],[-4.146881],[0.447578],[3.734878],[4.348822],[2.129831],[-4.181333],[3.853412],[-1.677900],[-0.100541],[-6.457520],[-5.930371],[-3.799882],[-9.036369],[-3.160449],[-3.368828],[3.014664],[7.661882],[-7.005070],[7.712548],[-7.309436],[8.169374],[-4.243089],[-6.944724],[0.305149],[-4.279577],[-9.302090],[6.467318],[-0.381106],[0.624406],[-7.963110],[3.974952],[-7.976965],[9.806671],[5.202001],[-1.480114],[1.939110],[-7.886721],[8.620125],[-0.244200],[9.683914],[-0.101050],[3.350470],[-2.843990],[6.148785],[-1.954564],[2.378947],[-5.064993],[5.392969],[-0.424731],[-8.676915],[-0.478580],[3.483650],[7.535670],[5.376031],[2.460516],[-3.915679],[-1.058205],[3.227879],[2.098455],[-8.944679],[1.334387],[3.781341],[-7.258978],[0.765039],[4.434304],[4.907206],[4.781559],[-0.776818],[6.301476],[-6.082173],[-4.163371],[-6.526904],[-7.706799],[1.228655],[9.213340],[9.859575],[-7.056584],[-4.521237],[8.173761],[0.764826],[6.922995],[-0.540476],[6.903538],[0.045094],[-2.268902],[-5.919663],[-3.334210],[9.784105],[-2.926082],[6.487954],[4.064538],[-0.026692],[1.711903],[-0.557054],[-6.613843],[-0.543726],[-3.123560],[-0.965236],[9.456620],[3.677059],[2.321495],[0.403645],[-8.941423],[-8.984122],[0.873644],[-7.316290],[0.887081],[-2.707264],[6.725319],[5.481149],[2.876843],[3.097201],[3.644634],[0.384388],[5.434258],[-6.476519],[-0.934277],[5.260861],[3.728974],[-6.579251],[3.992861],[9.308459],[9.908602],[9.622760],[-8.251221],[7.623111],[-3.249910],[8.153899],[-3.795504],[2.938666],[1.527585],[2.771406],[8.124070],[3.581375],[-3.321895],[1.757294],[-1.517047],[-9.159271],[8.862065],[4.263315],[8.301626],[4.696098],[6.937748],[0.960023],[1.976601],[-5.897606],[-0.726831],[7.842282],[-4.886199],[-3.793446],[-9.943885],[-6.029752],[-4.753221],[-5.985561],[-4.743025],[5.727611],[-8.315785],[-6.163831],[-3.911309],[-2.574334],[-1.959199],[-8.821728],[-0.779206],[-8.716750],[-8.730720],[8.546037],[-7.723568],[-4.614734],[4.573561],[-3.190786],[-8.203974],[2.408043],[-8.990614],[-0.306853],[4.512340],[8.249532],[8.860463],[-8.127693],[8.065564],[-1.833384],[-6.554219],[-6.226378],[2.753993],[4.682513],[6.820582],[4.434934],[-7.593345],[1.302714],[-0.134501],[4.530949],[-3.931463],[7.499363],[-2.010548],[8.419370],[-4.097836],[-5.484440],[4.210409],[5.461732],[6.715285],[3.887956],[5.442767],[-6.639175],[6.407373],[-6.574928],[4.100923],[6.076875],[-3.425361],[-5.777747],[3.092783],[-7.712101],[9.529297],[-4.498487],[5.623482],[-7.155294],[-3.830137],[-5.455536],[-4.731516],[0.040700],[-8.031529],[4.473768],[0.088618],[3.283840],[0.627015],[6.970358],[7.954706],[-9.340975],[-5.455049],[4.752091],[-8.800678],[-9.024923],[-0.523868],[-7.887531],[3.626320],[-7.525950],[-2.809496],[0.164839],[3.371975],[9.653266],[-8.018285],[3.343669],[3.918700],[6.475215],[-7.091590],[5.786449],[-1.347488],[0.440732],[-3.361577],[8.067295],[-8.636539],[7.388140],[3.428327],[-5.310717],[1.758777],[4.889428],[-4.982227],[5.633210],[-6.420454],[8.385214],[-5.342075],[8.915438],[-3.109200],[3.888972],[0.832580],[-6.712521],[-0.152743],[-3.869851],[0.830725],[-4.252708],[-2.816119],[-2.839966],[-9.589870],[-4.635645],[-4.978388],[5.607243],[8.891063],[4.466334],[-0.914734],[-0.455679],[6.142495],[6.582817],[1.207538],[6.154445],[-8.129289],[7.259760],[6.052393],[-2.368894],[-0.552237],[-9.930530],[-5.881813],[4.031994],[1.225604],[-5.838026],[3.661579],[6.908705],[5.607147],[-8.066193],[-1.408861],[8.962592],[-7.874614],[3.988112],[4.242716],[6.045190],[5.777900],[-3.390216],[-3.141847],[9.949361],[2.165423],[7.098324],[-5.303197],[8.081489],[7.221076],[-0.516226],[-0.349575],[-6.679708],[5.894992],[-9.112708],[9.352941],[-9.712475],[-2.279536],[9.775124],[-9.422061],[-4.457801],[-3.944568],[-8.841298],[-8.256805],[-1.963264],[8.339984],[1.065874],[8.950232],[-5.926167],[3.514050],[1.009650],[1.021776],[9.880093],[-0.095451],[-0.092481],[9.932734],[-8.734719],[-0.600898],[9.010843],[6.975299],[-4.402327],[-2.633671],[-9.998816],[3.145580],[-0.950081],[3.815211],[-1.310341],[0.393339],[-8.655527],[-4.388172],[-7.334287],[3.510942],[6.435597],[6.797036],[-0.702923],[-5.955939],[-3.999774],[-6.766494],[-6.288965],[0.525294],[0.132512],[-5.589784],[1.728005],[9.188453],[-2.460706],[-6.783033],[-0.053439],[8.914945],[9.271472],[-7.518389],[2.189158],[-6.803935],[8.583442],[-3.968952],[8.521008],[9.794160],[9.904685],[-4.658717],[7.369006],[-4.759425],[5.299652],[5.513623],[1.066657],[3.037185],[5.444291],[-8.172314],[-5.326932],[-7.140797],[-4.885838],[-1.104880],[5.514508],[-0.778424],[8.137869],[8.364700],[-1.018975],[-1.236797],[6.490675],[2.170917],[9.791348],[6.557296],[-5.841753],[9.361551],[2.274519],[3.217471],[7.988427],[7.402860],[1.733074],[5.166517],[-4.836097],[4.551047],[-5.832246],[-6.025820],[5.489401],[-2.130615],[-5.897393],[-4.658411],[-7.425470],[3.058716],[1.957069],[7.743047],[-6.497496],[3.410394],[-6.385028],[7.102795],[-1.584909],[2.052199],[-0.927811],[-7.085240],[-6.182918],[-9.684586],[-8.734578],[7.979044],[6.241395],[-8.086614],[8.619691],[5.576782],[-7.906302],[9.092057],[2.223583],[2.140658],[-3.664381],[-7.462540],[-8.774254],[-2.931412],[-9.245429],[2.744036],[8.196166],[6.271307],[-7.962086],[-4.729054],[0.813211],[6.155881],[-4.998873],[-9.464015],[0.580835],[9.075123],[-1.879597],[6.558672],[-4.096721],[8.613955],[-1.629874],[-9.867825],[-3.347409],[-4.824274],[9.509658],[-7.150952],[-9.327354],[6.006358],[7.098675],[-5.144630],[3.459442],[-0.735297],[-9.961863],[1.017480],[1.729370],[6.500799],[4.075463],[-8.677438],[4.665005],[-1.256760],[1.201565],[5.134330],[9.081942],[-2.078862],[-2.879388],[0.627422],[4.160800],[4.633967],[1.034156],[-7.981310],[-4.004459],[5.345584],[3.444816],[9.048106],[-0.377163],[-9.602083],[-4.133676],[-9.592149],[-9.910126],[-5.105023],[1.564729],[-7.720756],[2.505558],[-4.950304],[-6.413988],[-1.838266],[-9.250643],[9.840493],[6.564203],[-8.255901],[-7.814883],[7.811040],[-4.971110],[-7.311056],[-7.945484],[4.544516],[2.133031],[-2.317754],[-2.505080],[0.198027],[-1.579346],[5.195192],[5.509914],[-5.515968],[6.108337],[8.002140],[8.000143],[-5.291234],[-7.557265],[-9.810129],[-5.819621],[-5.847080],[-4.629855],[-4.074311],[-4.031166],[2.290380],[5.273928],[9.641835],[5.296736],[8.339377],[2.054742],[1.517623],[0.003917],[-6.909646],[-9.310931],[4.565473],[8.715798],[-3.378241],[-0.475140],[-7.453814],[0.818390],[7.515241],[-7.159196],[2.699880],[1.833503],[-5.781914],[5.649833],[9.644507],[5.598979],[-9.143563],[4.850540],[-8.525513],[-7.713906],[-6.439027],[-0.709277],[0.707367],[-1.943696],[-3.152972],[8.222074],[0.592048],[0.203046],[0.227774],[7.767528],[8.158718],[1.742213],[-2.404196]], dtype = "float32")#candidate|6658|(1078, 1)|const|float32
const_6659 = relay.const([-0.398797,9.780393,-6.544617,-1.891207,4.098540,5.941071,-7.728539,3.157457,-0.233388,6.693004,-5.425656,-1.505757,-2.615891,-7.284099,-9.227752,1.388036,2.105279,7.974664,7.324977,-1.107192,-2.084394,-4.516135,-8.085938,-2.811579], dtype = "float64")#candidate|6659|(24,)|const|float64
var_6660 = relay.var("var_6660", dtype = "float64", shape = (7, 2))#candidate|6660|(7, 2)|var|float64
var_6661 = relay.var("var_6661", dtype = "int64", shape = (18, 42))#candidate|6661|(18, 42)|var|int64
var_6662 = relay.var("var_6662", dtype = "float32", shape = (220,))#candidate|6662|(220,)|var|float32
call_6656 = relay.TupleGetItem(func_2548_call(relay.reshape(const_6657.astype('float32'), [4, 4, 2]), relay.reshape(const_6658.astype('float32'), [1078,]), relay.reshape(const_6659.astype('float64'), [1, 24]), relay.reshape(var_6660.astype('float64'), [14,]), relay.reshape(var_6661.astype('int64'), [756,]), relay.reshape(var_6662.astype('float32'), [220,]), ), 6)
call_6663 = relay.TupleGetItem(func_2555_call(relay.reshape(const_6657.astype('float32'), [4, 4, 2]), relay.reshape(const_6658.astype('float32'), [1078,]), relay.reshape(const_6659.astype('float64'), [1, 24]), relay.reshape(var_6660.astype('float64'), [14,]), relay.reshape(var_6661.astype('int64'), [756,]), relay.reshape(var_6662.astype('float32'), [220,]), ), 6)
output = relay.Tuple([call_6654,call_6656,const_6657,const_6658,const_6659,var_6660,var_6661,var_6662,])
output2 = relay.Tuple([call_6655,call_6663,const_6657,const_6658,const_6659,var_6660,var_6661,var_6662,])
func_6664 = relay.Function([var_6660,var_6661,var_6662,], output)
mod['func_6664'] = func_6664
mod = relay.transform.InferType()(mod)
mutated_mod['func_6664'] = func_6664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6664_call = mutated_mod.get_global_var('func_6664')
var_6666 = relay.var("var_6666", dtype = "float64", shape = (7, 2))#candidate|6666|(7, 2)|var|float64
var_6667 = relay.var("var_6667", dtype = "int64", shape = (18, 42))#candidate|6667|(18, 42)|var|int64
var_6668 = relay.var("var_6668", dtype = "float32", shape = (220,))#candidate|6668|(220,)|var|float32
call_6665 = func_6664_call(var_6666,var_6667,var_6668,)
output = call_6665
func_6669 = relay.Function([var_6666,var_6667,var_6668,], output)
mutated_mod['func_6669'] = func_6669
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6712 = relay.const([[[-5.667042,5.918745,7.395807,0.094044],[1.128203,-7.758820,-6.878527,-4.262151],[-7.726373,-5.379596,-6.717000,-9.472472],[5.699157,-7.903545,8.605904,-3.574861],[7.247753,5.186093,8.105978,-5.739597],[-6.282622,-3.221634,-6.010413,-7.966872],[-8.382987,-6.797320,2.654707,-6.832268],[-3.749508,-7.580094,-5.998067,0.753657],[-1.512157,-1.195893,-6.477621,-8.827003],[2.803001,2.396970,-4.162558,-9.635647],[-5.804716,1.234922,-8.926425,-5.116155],[-3.501091,-7.360752,0.363297,-1.230536],[1.576924,-0.689806,-0.597668,-4.683117]],[[9.960766,6.512871,9.098810,-3.589622],[-3.680798,6.372903,1.857140,5.670393],[9.778604,-2.599898,8.374063,-1.683007],[5.044340,-6.820762,-9.194764,3.004251],[-1.353825,0.173927,9.643414,9.471814],[3.100166,-1.287474,-3.731433,-6.223325],[3.586436,6.052842,-2.096187,5.761117],[-3.626191,9.740436,6.558266,-7.311726],[9.705743,9.525342,-1.088653,-2.096090],[-4.039188,-1.356854,-5.782998,-2.585629],[-8.302459,-0.284217,7.299708,-4.392371],[-3.856647,-9.880317,7.476694,6.102770],[-4.406502,3.470983,-1.687646,-6.657728]],[[-4.952004,2.783822,-8.893780,-1.194705],[1.517642,4.183807,5.926979,-2.754491],[1.073357,4.040023,-6.081681,8.613339],[6.096915,5.955832,-3.266599,-0.652619],[-3.033983,1.509647,0.437938,2.356143],[-4.155420,-6.071197,7.524546,7.630417],[4.589428,9.418915,-4.388434,0.879547],[2.792684,9.211738,-7.045746,-6.196178],[3.430609,9.962225,0.594792,-8.614637],[9.794738,5.245120,1.503051,1.150745],[8.220496,-7.912002,3.166296,-8.635003],[-9.713069,-8.849792,8.045964,-0.291046],[-1.194357,-4.723056,-0.997948,-5.763200]],[[8.648112,-8.554158,-1.718506,9.327968],[-5.469779,9.376698,1.350571,-2.356240],[0.081904,8.622195,1.322673,-7.672789],[7.666501,-7.306421,6.291411,-3.654050],[-6.316718,7.693690,-4.971896,1.881970],[6.838081,0.455233,-7.559748,-5.393715],[-1.050232,-6.766262,3.149908,-5.964634],[7.462614,5.001949,5.935780,0.384805],[-7.624100,-0.313546,-4.529091,-0.084112],[0.481844,-9.160882,3.863616,1.022765],[-8.826981,-9.118116,-8.775186,2.533105],[2.822521,-6.595035,-6.010939,-2.801616],[3.116433,4.633026,-5.656492,5.003195]],[[4.169885,9.482192,-6.468472,0.230510],[7.239465,0.856136,-9.616123,4.505793],[5.406636,-1.512238,-8.977831,-8.481489],[2.626060,6.483442,5.493082,0.605588],[-7.924790,-7.277999,-5.309688,-7.094744],[0.778187,5.520939,-4.801691,5.628277],[4.322478,3.398086,-2.600320,0.053048],[6.788069,-7.463477,9.571411,-2.063585],[-4.176414,-5.107390,-7.639143,-3.058217],[-8.297623,0.522663,1.807134,-8.434164],[-2.514766,-4.954583,-5.762713,-2.181509],[-6.388793,-6.513893,7.687453,8.211286],[7.456244,-6.828948,-1.546214,2.983287]],[[-1.299982,0.520354,3.445149,-4.669538],[2.619778,1.732334,-6.428930,-4.057877],[-0.047583,-2.981800,3.991181,3.385375],[-2.926881,-5.805417,4.584230,5.247087],[-1.127934,9.036818,2.599534,7.877286],[-4.515642,-3.846988,-9.318656,6.374592],[3.635287,-6.493595,8.031628,-5.626425],[1.500943,8.428585,-3.804955,1.440544],[0.565325,3.842879,-3.430919,-1.570453],[1.694130,-8.805238,5.034034,-3.820175],[0.439544,5.927084,-9.547815,-3.617745],[-9.478426,-2.532633,9.648054,6.262100],[-2.467645,0.001117,7.396367,0.251112]],[[-3.117590,-4.963566,6.032000,-9.701167],[-0.629732,-1.488627,6.959107,-5.514508],[-7.204838,6.914172,-7.640202,-0.902134],[0.029173,-6.083194,4.035765,6.023882],[8.261997,4.583994,-9.581539,0.150938],[8.516686,9.328792,7.936851,-7.522478],[0.406003,0.798081,-0.190078,-4.533376],[8.425203,-5.418326,6.965536,-7.236787],[-3.377205,0.603649,5.892745,4.938475],[-5.948590,-1.332082,-6.927992,6.882622],[-5.206185,-5.032257,8.928329,-2.145925],[3.116876,7.168783,-4.759713,8.199037],[-5.059896,5.556036,0.331503,-5.488529]]], dtype = "float64")#candidate|6712|(7, 13, 4)|const|float64
uop_6713 = relay.sigmoid(const_6712.astype('float64')) # shape=(7, 13, 4)
func_6521_call = mod.get_global_var('func_6521')
func_6524_call = mutated_mod.get_global_var('func_6524')
const_6731 = relay.const(-0.347841, dtype = "float64")#candidate|6731|()|const|float64
const_6732 = relay.const([[1.822405,-7.122787,-9.472657,-9.206768,7.835751,4.639698,-6.825724,-8.495504,-2.262848,-6.274537,-4.204521,8.807384,-6.794917,8.359264,-6.555966,6.519186,-6.748165,2.270306,-9.346929,7.840050,-1.882763,1.236797,-3.803723,3.342329,7.960687,-3.065377,7.383123,-7.824510,-7.423147,-2.155131,9.747655,-8.325161,-7.047247,-2.189822,3.502420,-9.237149,-0.866234,7.441247,5.598616,7.843127,-4.118601,-3.698540,1.290196,-8.632757,-6.561875,9.834543,-8.787502,-0.463150,6.722876,9.758365,-1.182696,-4.952808,-2.721899,0.461465,-9.022000,-1.154919,-7.607660,-6.411414,-5.464961,-0.457718,-1.676611,-9.448221,5.200970,0.872921,-9.186508,-3.004174,-3.538439,7.632350,-9.947623,-8.315551,-0.863165,1.870044,-1.802744,-5.862645,-9.230083,6.576881,-8.246475,2.789263,-2.386385,-7.708042,-8.882136,8.561760,-9.949118,9.090475,-6.430965,1.520713,-9.785611,7.501594,1.163127,0.578653,-4.602771,-1.059955,9.979943,4.497299,-5.169003,-1.956654,-4.672110,9.833493,-1.432333,7.527561,-0.207975,4.458449,7.891060,3.872229,5.166884,1.187689,-4.019626,-1.011833,3.908156,8.856317,-8.372703,-1.874146,-3.505243,5.583466,-7.109095,3.433343,2.470243,-7.407805,1.047869,3.266309,-1.322883,6.832650,-1.383246,-3.761097,7.106501,0.038092,8.301140,-1.560190,7.793246,5.636204,-4.021889,7.244092,0.168726,-5.114914,4.604919,4.850980,-5.873809,-1.042048,1.842701,5.695916,5.799909,-7.162858,-0.303553,-6.001350,-0.176634,-3.730962,-5.872142,-3.772828,0.156356,-0.991713,6.449793,-4.064439,-7.568000,-9.637551,-8.039082,-8.025143,4.842822,-7.094759,4.442351,1.069998,-0.474725,-7.927673,5.603114,7.925294,-4.627868,-9.874852,6.450659,1.948001,7.299282,5.474938,3.504446,0.547457,-2.540027,2.098809,-3.850148,3.435807,-0.300623,5.019397,8.859643,-5.178312,2.475114,9.792459,7.951369,-6.214616,-6.791147,-5.368582,-3.676526,-5.409678,-9.217830,-1.999853,8.343221,3.160153,-7.640724,0.439985,2.447889,9.313614,-7.409812,-3.432455,7.947454,3.004927,-0.357281,-3.229188,4.684911,-2.792357,-3.441125,3.284078,-5.388407,1.176871,5.250761,-4.551097,-2.348823,6.290880,-5.084145,-6.376642,9.616885,-9.946979,-8.124625,-9.873004,7.781802,0.318631,3.327892,4.602335,4.182980,-7.280079,-7.219421,-4.994466,-7.585386,2.421432,9.634856,4.425454,8.503781,-2.822690,-1.418003,-9.408388,2.917425,4.001069,-6.711724,5.210904,3.112787,-6.381109,-3.138800,-4.340311,9.780606,-1.353191,6.950275,9.258351,2.292268,-8.131107,-2.211618,3.103142,-4.894449,-7.693987,-0.698663,0.136289,-6.338180,5.033981,-3.243588,1.202419,3.922383,-1.682686,0.911759,-6.892274,1.207445,-3.758009,4.973632,-8.358031,-3.802521,-9.999967,-5.460246,-7.223668,8.479373,5.979650,3.532282,8.843626,-9.253135,-2.091008,8.268700,-3.726312,7.808116,-0.154347,4.119618,6.972281,-7.647074,-5.127021,9.726691,2.331507,-2.971596,-9.724232,1.285912,-2.199696,7.702317,-0.793957,0.946705,1.001679,0.377554,5.456874,-8.859011,3.094234,-1.248154,9.042094,-4.140569,8.043268,-9.456253,1.321015,5.144317,3.775420,-0.707343,-0.900403,8.425411,-6.145390,5.873144,2.448395,-9.986179,-0.680662,-4.036914,-3.936631,-5.957672,7.251629,4.896608,8.410257,-3.012991,5.517689,-0.211299,7.233765,-7.707647,-1.808177,8.861908,1.158743,-0.826599,2.717875,-6.835150,-2.112049,1.543595,3.179550,-3.059930,5.053519,6.003682,3.750624,-4.760297,4.926843,-9.138134,0.038689,9.551419,-2.854050,-5.809761,-7.802640,4.568381,-5.061748,-7.982923,-5.459386,-6.331132,-2.072889,-2.767462,2.036911,-7.203186,6.644083,-9.177251,-5.068337,-3.174269,-1.489866,-7.169609,1.932393,6.689390,-2.897948,3.420790,-5.009917,2.856252,6.485281,-8.776025,-0.797407,-8.870453,3.632222,-2.786353,-6.530263,-3.385145,-8.281185,-0.906008,1.820787,1.505654,4.492012,-8.444332,-3.557134,-9.054415,6.958416,-4.642273,8.149696,-8.507815,5.663054,5.328180,3.589722,-0.400202,-2.608383,2.940378,-8.432319,-1.535057,7.782296,5.906828,-1.225205,2.366419,-6.640476,2.348359,-1.153441,5.011629,6.751612,-2.357454,-0.707457,-8.815261,9.526525,-1.114580,-0.850694,2.760848,0.702571,2.892614,1.905428,-3.634231,-5.719408,5.774194,1.953856,-6.925362,9.834368,9.560248,-9.080034,6.162190,7.808974,7.020883,-7.452684,7.730544,-7.183788,6.432151,9.072722,8.506513,2.148038,7.711617,2.242481,2.104323,-3.931295,0.053876,-6.787184,-1.907032,-1.294722,2.011813,-0.024442,0.889763,5.573817,-9.639524,-9.194711,-8.559417,3.429826,-9.319072,-6.159406,4.701962,-8.057408,7.240450,3.428621,-0.860220,8.840154,-0.387615,-5.881676,-9.189947,-8.559157,-4.913077,0.788395,7.390223,-5.654192,3.420269,1.467792,4.317711,4.318956,4.062829,-8.678727,2.814884,9.043982,-5.196223,5.869330,-0.881096,3.948564,-1.650251,7.742054,1.819963,8.699663,-7.281143,-9.132015,-4.983646,-1.346914,-6.168895,5.312845,9.153923,-7.709201,-6.045080,-5.930619,4.274154,2.983576,-7.548594,7.083078,7.116791,7.220628,-7.263449,9.429340,8.066915,-9.791472,3.974923,3.210683,-9.123598,-6.546160,3.944875,7.063950,-0.323723,-1.726904,-2.126178,5.114703,-1.178334,6.591952,-3.535306,3.284636,7.109647,6.780526,7.783627,9.564086,-0.667194,-6.714164,-7.715236,7.220564,9.047960,-3.296374,3.180390,2.887980,-6.696113,-9.985910],[0.931939,-2.442570,6.234016,1.530460,8.205477,4.814421,-3.243013,6.464804,4.867739,-4.878222,4.857542,-0.947838,-8.068401,-5.982661,0.959851,7.607971,6.457440,5.814578,5.862347,1.137657,9.689987,1.966843,7.573497,-4.154761,2.543366,6.694550,7.329164,9.032443,8.058339,-8.734998,4.561941,9.405489,-6.641830,0.130971,-3.154082,-3.263480,9.730350,2.405098,-9.562923,-1.181587,-2.195926,-9.227417,2.677674,3.186853,-7.640982,6.746194,6.300424,-6.385915,3.210131,-3.362651,-6.402701,8.240319,-2.748447,-0.611412,5.629991,-6.929235,-6.570575,1.726489,-2.065299,-2.458641,3.184077,-6.790715,2.494603,-9.112701,2.920073,-2.916069,2.299282,3.305223,-6.465781,-2.912692,-6.956114,-0.171643,-6.429719,1.814284,-1.178476,8.946202,3.456604,7.263536,-9.583442,-7.464960,-8.516322,6.794040,-4.491282,2.808244,8.230918,-5.694221,-3.471452,-9.889913,0.575103,1.898968,-8.976312,4.630174,3.337982,-7.633956,-2.462278,2.605503,0.622228,-6.262548,8.763426,-3.939813,8.543155,6.227659,8.140652,-1.695387,9.968828,7.099892,-8.905486,9.562795,2.433048,1.830862,-7.248940,-0.385578,-6.800228,-2.562195,-1.680758,-2.539768,9.034840,9.606651,9.276222,3.750209,9.862215,-7.175049,2.109773,4.731799,9.156040,-6.789269,5.009977,7.088640,3.232392,-6.448084,7.515264,-1.319917,-6.711850,9.040467,3.449921,-5.722148,7.273616,4.280697,-2.660078,9.536190,6.250756,-2.230124,-9.002048,-7.137294,6.302660,4.524098,3.050519,6.519483,0.572696,-2.885381,-2.852536,-1.055517,5.775376,-4.233186,-5.771722,-4.477857,-6.494101,3.795211,-8.359483,-5.704736,-6.479656,-1.685823,6.739537,6.625854,8.971896,-3.916543,-0.177738,4.254914,-8.439151,2.014637,-2.096069,-4.724657,-8.750771,8.934038,-8.529907,-4.679466,-9.759713,-5.949255,4.941603,-6.213504,1.996597,-3.202845,5.265391,-7.919012,8.639381,8.926730,6.133586,-2.946602,2.760780,-8.957375,-8.025655,-7.862298,-7.782761,-9.526071,-5.819260,-7.297082,6.040648,4.559987,-5.644096,-9.744354,7.834188,2.544860,-0.936706,5.726636,-0.731964,4.147414,-0.937152,8.306086,-3.683882,-2.404801,-4.402115,4.877989,3.766084,6.376115,-2.065579,-2.309717,2.205950,-2.876574,6.531365,1.118012,7.232966,-7.292666,-1.210391,-3.174759,-4.718927,4.773924,2.915091,-5.713616,7.052262,8.953564,-8.239684,8.355125,7.968719,6.808874,1.311621,-0.523775,2.379588,1.250462,-4.773242,-6.075467,-6.880857,-1.852601,-9.241795,2.196364,-0.709518,2.958611,-0.287416,-8.658647,-6.148201,-5.775458,-4.644081,7.837538,-2.976355,1.182949,-1.358195,6.963704,5.830160,7.125024,-3.283318,3.706194,4.011995,2.376276,0.880787,2.495508,0.763879,-4.971696,2.558649,1.065083,-7.419920,-6.942659,0.413177,9.999271,0.826833,-9.346332,7.318431,-2.913204,6.301450,-5.916486,0.068227,-7.724503,-0.361321,-9.272455,-1.341786,4.282857,-9.142457,-5.001061,3.643585,-6.476122,-5.215048,-9.098166,-9.322691,-4.125588,6.587537,1.906850,-4.179664,1.081049,-5.431363,-1.146802,-6.870640,7.237972,-3.469492,-1.451277,5.779214,-1.123929,0.317725,-8.273004,-1.470837,5.898062,3.674815,-8.724562,9.961769,-1.960743,-1.990230,-0.693004,-7.083142,5.180106,9.707353,-5.260433,3.847212,-2.276514,-8.391655,-8.202104,8.963000,-7.163252,-6.626153,5.532093,-2.046928,7.076351,-9.061982,1.420942,7.515263,4.651582,-2.681078,-8.344214,3.963012,1.444937,9.099335,-7.929343,3.579147,6.119730,7.759220,8.236211,3.248819,-7.190437,7.148557,-5.993101,3.489911,2.673304,-3.745135,8.435157,3.199757,1.663983,-5.983775,8.988644,-2.266899,-3.634898,9.237977,8.461307,-3.333284,1.389195,-0.525184,7.078686,5.654045,2.811379,-2.577071,8.859110,4.639763,-1.382956,-8.018690,-8.984716,-0.228709,1.549074,-5.550639,-3.323218,-1.361327,-0.103110,-1.258687,-8.006962,8.428100,0.282011,-8.523651,1.467689,9.861740,-3.216811,4.963009,-0.648606,0.361679,-3.926713,-8.698173,-9.242843,-3.831150,8.964923,-6.283262,-9.242854,-9.324915,0.528800,8.892158,-3.148062,-8.941976,-8.274170,3.056011,-0.225935,-5.869876,6.089636,3.453173,-6.790920,-1.568525,-0.091347,9.034463,-2.635153,-9.454373,2.280950,-2.730462,-7.605011,-4.380853,0.661760,1.504935,-5.435509,-5.371256,3.163346,3.080524,5.612960,5.651540,4.593826,-6.838798,-0.166645,7.914094,-4.478043,-5.679096,8.062944,-7.415163,-2.615847,-6.070602,7.959468,-1.508050,-0.248738,-5.870175,-9.853476,-6.070985,7.593212,5.751799,9.982854,0.160778,1.757772,3.176812,-3.014335,3.155681,2.174334,4.543132,-7.912084,1.814098,3.457240,-8.291109,-6.150766,6.560747,2.997829,3.139734,-4.582006,8.358547,-8.368612,-2.850784,-1.260690,-0.359591,9.851298,-1.220344,2.460837,-3.870482,-7.406084,-1.184552,5.657400,-1.447404,5.773252,-4.718811,-6.160237,4.280352,-8.273004,1.211462,3.284418,-4.801325,0.528144,-0.760982,0.838980,9.996727,1.355075,-9.610212,-4.137385,0.391300,-7.272211,2.584153,7.179984,-0.008575,-0.888927,-6.198615,3.173059,-9.650031,-9.732855,6.528051,3.677782,4.523781,5.374579,-8.291663,-2.930829,8.990685,8.449725,6.487426,7.426222,-7.600940,6.426646,1.802484,3.656047,3.923392,-8.924173,3.211274,8.631178,-5.671779,-0.075581,-7.092820,-7.839622,-5.894043,-7.112022,8.677263,5.996102,0.139532,-3.301413,0.351023,-8.538919,4.665445,1.219031]], dtype = "float64")#candidate|6732|(2, 528)|const|float64
call_6730 = relay.TupleGetItem(func_6521_call(relay.reshape(const_6731.astype('float64'), []), relay.reshape(const_6732.astype('float64'), [1056,]), ), 11)
call_6733 = relay.TupleGetItem(func_6524_call(relay.reshape(const_6731.astype('float64'), []), relay.reshape(const_6732.astype('float64'), [1056,]), ), 11)
uop_6737 = relay.sin(const_6732.astype('float32')) # shape=(2, 528)
output = relay.Tuple([uop_6713,call_6730,const_6731,uop_6737,])
output2 = relay.Tuple([uop_6713,call_6733,const_6731,uop_6737,])
func_6746 = relay.Function([], output)
mod['func_6746'] = func_6746
mod = relay.transform.InferType()(mod)
output = func_6746()
func_6747 = relay.Function([], output)
mutated_mod['func_6747'] = func_6747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6304_call = mod.get_global_var('func_6304')
func_6305_call = mutated_mod.get_global_var('func_6305')
call_6792 = func_6304_call()
call_6793 = func_6304_call()
output = relay.Tuple([call_6792,])
output2 = relay.Tuple([call_6793,])
func_6804 = relay.Function([], output)
mod['func_6804'] = func_6804
mod = relay.transform.InferType()(mod)
output = func_6804()
func_6805 = relay.Function([], output)
mutated_mod['func_6805'] = func_6805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6804_call = mod.get_global_var('func_6804')
func_6805_call = mutated_mod.get_global_var('func_6805')
call_6838 = relay.TupleGetItem(func_6804_call(), 0)
call_6839 = relay.TupleGetItem(func_6805_call(), 0)
func_439_call = mod.get_global_var('func_439')
func_442_call = mutated_mod.get_global_var('func_442')
const_6843 = relay.const([[-7.648581,8.063461,3.753153,1.770210,-5.835722,-4.936783,-7.528650,1.037878,-9.356683,-0.151700,1.609500,6.818888],[5.138319,-3.839400,-3.254317,0.589900,9.040724,8.560294,6.176236,3.522377,-7.021451,6.441767,9.913154,-0.560388]], dtype = "float64")#candidate|6843|(2, 12)|const|float64
call_6842 = relay.TupleGetItem(func_439_call(relay.reshape(const_6843.astype('float64'), [1, 2, 12])), 1)
call_6844 = relay.TupleGetItem(func_442_call(relay.reshape(const_6843.astype('float64'), [1, 2, 12])), 1)
func_3172_call = mod.get_global_var('func_3172')
func_3175_call = mutated_mod.get_global_var('func_3175')
var_6848 = relay.var("var_6848", dtype = "int64", shape = (21, 4))#candidate|6848|(21, 4)|var|int64
call_6847 = func_3172_call(relay.reshape(var_6848.astype('int64'), [2, 14, 3]), relay.reshape(var_6848.astype('int64'), [2, 14, 3]), )
call_6849 = func_3172_call(relay.reshape(var_6848.astype('int64'), [2, 14, 3]), relay.reshape(var_6848.astype('int64'), [2, 14, 3]), )
func_6367_call = mod.get_global_var('func_6367')
func_6371_call = mutated_mod.get_global_var('func_6371')
const_6865 = relay.const([2.060730,-9.925840,3.286900,9.616229,9.477985,5.932855,6.372513,4.221608,8.968417,2.295548,-8.810641,-8.787548,7.752348,-7.077718,-5.879703,-8.390741,0.271495,-3.491497,-1.967674,0.401730,1.479348,6.555970,-4.571908,-1.298342,1.440281,3.679454,-2.199118,-2.311633,-7.149616,9.621780,3.220652,-3.725835,-1.950736,0.415455,-8.221634,-0.979444,0.304181,-6.167848,1.936721,4.630783,5.020169,-6.335427,-4.163697,6.336226,5.385576,0.606728,-7.772439,-4.793702,4.557390,-2.916831,-8.282090,4.758937,-7.210361,-0.595500,-0.497917,0.673481,-1.469187,5.143791,-9.099311,9.791173,2.763874,-3.955168,9.336874,-4.172244,4.842384,-8.778469,-4.887166,1.005930,-3.355529,-6.583188,-0.378119,-8.820152,5.825084,9.699772,-9.501789,-3.282055,-9.633771,-9.388199,1.114395,-1.092113,9.125619,-5.608768,-6.079239,-9.831564,0.074372,2.572664,-6.733340,6.633419,7.704964,-2.022571,7.694052,-1.196888,1.176147,2.998199,0.816174,6.731999,0.854379,-8.209236,-0.326611,-5.952197,0.040449,1.477704,0.392160,-7.375891,5.372491,-4.548714,6.239380,-9.804417,0.395681,1.345910,3.380652,1.428043,-6.603737,-7.208207,9.315453,1.688833,-1.484636,-5.584962,5.033645,9.757610,4.699061,6.590497,-5.525579,-3.596692,-3.238649,-1.033843,-4.307652,-7.733694,-5.550626,1.646616,4.710584,-5.867614,2.409096,6.377810,4.181285,-7.428203,-6.220558,8.690850,5.983349,9.739693,0.263438,-4.032704,3.272607,0.498463,6.042794,3.882418,4.223762,1.979054,0.936792,8.738284,6.397503,4.047858,0.184847,-6.450556,-1.353159,-5.902402,8.140734,-9.516085,2.313456,-5.151355,-0.097542,7.111240,-1.746997,4.635301,6.533279,-1.571668,-9.658076,2.865676,0.368249,-4.604505,7.698953,4.429362,9.700090,3.161748,2.015674,-7.982904,-0.290088,5.741650,-4.059483,-6.077148,7.229961,-8.208701,-8.849084,-2.282495,8.707851,-5.410349,5.196154,7.679693,9.610561,-6.499135,4.314397,-4.204219,-7.809442,-3.749615,-4.112778,8.133131,3.130184,7.292851,9.863928,8.241779,1.482987,1.531522,-4.781627,5.175872,4.331759,-6.502319,-7.668570,-3.770213,3.116312,8.662806,2.081022,4.415931,-0.261692,1.862709,-4.261667,-7.114793,-4.659408,1.592476,6.796916,-4.774710,-4.711050,7.842562,8.241169,2.664195,-5.055404,6.822760,4.882771,-1.771159,8.023852,3.673718,0.871756,7.107200,2.472625,-0.282959,-1.919415,-7.599884,5.510540,9.533196,6.070851,3.718870,-6.800381,-7.299948,-8.970029,0.054027,-9.121740,6.656355,2.739800,8.285226,6.265294,0.469618,-6.657919,-2.161669,6.089749,-0.231205,7.002954,-6.850762,-8.724465,6.853380,0.715676,5.927783,-7.993687,5.315753,8.968721,-9.958054,-0.454593,-2.268410,8.544506,2.738835,7.438757,-2.574568,1.858388,-4.659493,1.476109,-4.631645,-2.103860,-3.938649,7.398034,-2.728759,-8.443984,5.498554,-0.829220,4.331942,6.338957,-9.134788,-8.299229,7.411841,2.102380,-1.519212,6.862522,-0.664766,-6.608674,-0.137478,-9.116954,-5.406526,-8.451200,-9.573954,-1.242056,-5.122736,-9.555358,-5.854577,6.847498,-2.036597,1.692554,1.312258,-5.158175,-5.344949,-6.306683,-6.294632,-6.453842,5.578302,-8.644444,3.091983,8.690043,-9.110148,8.708048,4.058550,-3.136875,6.506313,-5.978685,5.272250,-1.792772,5.735619,-6.015000,-1.155622,-8.191481,5.015624,2.883533,2.062260,1.152938,-1.365614,-8.371119,7.086560,8.702756,-8.596338,-3.575021,-2.186105,-0.730347,7.204630,3.134504,5.908057,-8.801491,6.000370,7.260223,-3.238594,-8.936632,1.793560,-8.537511,-7.194057,-5.214509,9.650695,-2.503939,0.518771,7.017516,9.033884,-4.806919,6.575316,-1.368760,-2.686795,2.678867,-2.516518,1.987242,4.716794,-2.121339,-6.921910,-4.734536,8.924539,4.360753,3.553472,-4.481670,-6.677489,5.456268,7.221613,-6.317488,-6.851206,-6.295894,8.501416,-0.302607,-8.146035,-3.238186,5.899269,-1.444198,9.719183,-7.167419,5.934970,-8.302807,4.587337,7.348194,8.316475,3.559231,7.159839,-1.445545,4.684098,2.773133,0.469810,-8.002545,6.720222,-8.831083,8.338621,5.913429,2.053059,-1.078643,-4.521274,5.337271,0.265542,4.938460,-2.273978,8.554986,-1.923462,9.498684,0.480117,6.382653,7.420656,6.396448,-0.331988,5.633173,-6.821365,-5.548899,4.574061,-5.389044,-9.650705,6.436460,5.691257,0.843678,-4.879422,-7.262343,-7.547019,-7.056734,3.354875,-2.773456,-8.441233,3.678487,9.392582,5.796103,1.269382,6.686201,3.605555,-7.923779,-8.905958,3.856560,8.697997,-3.602458,1.206070,7.363159,-4.346247,-6.341773,5.518963,-4.704075,5.674464,3.450369,8.873151,2.888383,8.533402,-6.619841,4.064242,-7.703672,8.750394,-8.747146,6.047415,2.924770,-2.724777,1.083819,3.997077,-3.675852,7.454851,5.153714,0.592023,-4.873594,-4.121526,-3.951831,-1.211186,-4.406116,5.163893,-4.579584,-2.759515,-1.720755,8.559729,-7.277327,9.145187,4.251023,-2.152369,-0.008246,0.440790,4.061901,4.177834,0.578955,-5.798821,8.894509,1.253145,7.437970,2.988911,-8.832977,8.978364,9.203080,3.636176,0.390272,5.765955,0.311729,-6.986586,-2.170810,-5.072622,8.419145,-8.011077,-2.238153,-7.533628,6.032706,-0.027276,-2.589018,7.051221,-7.847814,2.836815,-6.133819,9.743071,9.800658,-8.287509,6.459427,-1.915096,-4.608479,3.203826,-3.762233,-2.805924,8.780720,2.499920,-0.358883,8.784750,0.846277,-3.892035,3.781266,-7.574593,-6.012724,2.917870,2.778426,-6.042671,-4.326489,4.985660,-6.353631,-0.611611,-4.893986,4.868406,-6.553595,1.809500,6.370816,-0.379130,-2.755585,-7.524763,5.708492,-2.916578,9.496080,-4.901932,8.703616,-0.292009,4.824445,1.466507,-0.164791,-2.752835,-4.871905,-0.367827,-1.169942,-0.788185,7.906977,1.659813,-1.667688,-0.011384,-1.157343,3.694714,-9.621016,7.998548,7.243980,3.481581,-0.031353,-1.582525,0.849574,-4.141177,1.234106,-4.591099,0.193053,-5.861396,-7.838665,8.143408,3.398476,-5.891126,-7.784491,-3.689257,-4.595086,1.355124,0.930608,5.350824,7.193792,-4.071284,1.958992,6.295424,-7.569272,-7.050268,-7.802571,-4.495145,2.248201,0.221710,-7.019214,5.393186,7.383035,1.911637,-4.866008,-7.479822,4.245284,7.776200,5.252620,0.085505,-2.269662,-8.979985,-2.960514,-2.840625,2.832333,2.468563,7.734208,5.569518,-7.722430,-7.677471,8.753497,-4.682044,9.228907,5.652149,-0.282545,6.510572,2.908537,-0.351965,-3.107805,8.832341,-3.694363,0.865718,8.462538,3.450772,-8.093179,-9.756162,-5.336326,-6.565434,-2.695850,-7.110735,-9.799633,8.679093,-3.705396,3.212543,4.136108,-8.579814,-0.675200,3.512689,-7.371993,9.472819,-8.491025,6.998430,-5.161328,2.959000,4.456572,8.960545,5.792627,4.393954,-5.542995,-3.263005,4.082550,-4.254673,-2.584683,0.831566,-0.331546,9.087824,4.386761,1.147221,-3.669133,-6.936086,-8.763710,-1.937372,7.686171,1.359061,-0.936639,1.904025,2.904421,4.597040,5.921213,-0.557055,9.868330,4.145852,-5.210491,-6.785263,7.248869,2.302028,5.698675,7.193856,7.248334,-2.055895,-6.390381,-6.561275,7.681205,5.669859,-6.693050,-4.612651,-4.363929,-0.468986,-0.518988,6.859521,-3.339345,-0.484383,-5.535196,-7.287097,-1.746418,-7.088229,-7.170354,-1.436154,-8.481020,-5.930674,-9.164394,8.564196,-3.910006,5.702124,-5.515649,-6.475694,0.305563,-3.777573,-3.872007,-9.888775,-9.211081,4.007346,0.660865,-7.189041,-7.225326,-7.107256,-9.443273,8.156997,-8.094744,4.384386,8.669925,6.693457,-9.742786,1.774675,-0.908917,-0.508826,-5.122787,0.055035,6.157470,8.060283,-0.703370,-1.114470,9.812021,-3.016689,8.780001,3.298821,8.790514,3.425428,-4.651703,0.520983,-7.490929,7.354050,7.864208,-7.911025,4.125314,-0.434063,-9.036979,-1.271622,-5.013694,4.923490,-0.509882,1.475802,0.359018,-6.202873,5.848021,-6.174639,8.940146,-6.482028,-8.598382,4.730322,-3.796518,2.386813,9.704311,3.227834,-5.492851,9.969612,1.026852,8.801707,2.854501,-2.899899,7.531299,2.422033,3.794458,4.280208,-1.903136,1.909767,4.450252,4.256040,-6.804259,-2.778024,9.455682,0.928752,-0.507091,8.676806,-0.775814,-9.788761,-4.937737,-1.355721,0.767331,5.681977,8.554080,6.854823,-3.104827,2.813625,6.031776,0.089638,1.823896,2.972171,3.909705,4.321481,-8.194980,8.903008,0.107694,-9.684602,-2.220765,1.359872,-1.761349,-2.401147,9.026928,9.390134,5.027519,-6.279297,-7.286686,4.413112,-7.879923,7.193854,-0.294738,-3.457012,4.938082,5.994107,-9.090733,8.430034,3.608733,6.992532,8.455974,0.296198,-5.604129,2.024581,3.329108,-1.155000,8.344912,-9.413837,0.041087,-3.823806,-9.845732,-8.402375,-2.015304,8.071761,2.424635,-0.299177,-9.340629,1.649024,4.317363,8.192543,6.163300,4.756717,0.261600,8.277869,-8.149768,4.214346,3.941210,0.649135,2.390112,0.347772,-0.250399,4.652218,5.218316,1.144236,3.787289,8.324481,-4.969345,-0.014323,-1.592348,-7.303252,0.051547,6.559581,0.037808,-6.659807,-6.932210,4.682795,6.597389,8.564623,-3.586229,-0.056632,3.696964,-9.935316,-3.239637,0.740682,-8.658567,5.348920,-6.590293,-6.803973,3.925378,-9.357565,-3.970466,-9.189843,8.693080,-6.839523,-7.958765,9.022693,-6.111457,-0.522750,-4.883655,-6.341489,5.041109,-7.727267,-4.275984,-5.104481,6.178353,3.346496,-5.946357,-1.355625,9.252982,5.517757,6.320986,2.672883,4.572720,-1.231277,-0.125053,-7.862181,-7.314745,5.558016,-1.575968,-7.283236,-1.123936,7.529842,-1.627950,-7.856788,3.688767,8.606377,9.284944,-3.292493,-9.215888,-0.630830,9.614078,0.791041,-0.083110,0.804152,-6.227709,-8.553097,2.613550,6.510230,5.855539,-1.652975,-8.694165,9.252956,-3.508893,-2.644461,-8.666864,0.710932,7.388996,8.643695,3.361588,-4.768697,1.000266,9.200414,3.490239,-4.153402,-2.821992,5.245393,-0.682268,-3.586330,-5.746910,-5.037125,-9.503862,4.231514,-3.685987,3.954086,2.368010,3.905795,-6.064027,3.434583,1.374570,9.036136,-6.974687,-7.723501,7.044318,-8.379012,7.466831,7.168359,-7.998801,-1.621768,8.206338,1.604806,9.145646,7.978415,3.002374,0.706334,-8.729218,-5.580656,0.044009,-4.752683,-7.990502,0.639713,8.516462,2.256158,8.386342,-0.577508,5.532913,5.904517,-1.857591,-5.210114,2.970962,-9.400406,-3.201269,2.712312,-7.240203,7.864154,-7.897417,-9.899850,0.734903,1.903383,4.277182,4.925133,7.951136,-7.543743,-8.837569,4.339623,-6.628153,6.395283,6.213110,4.185582,-7.512018,-0.254501,2.525862,-4.653406,-4.336375,6.554962,9.325518,-8.339518,7.796408,-0.338552,8.229271,5.755363,-1.241587,3.593877,2.235199,0.760028,7.842760,-1.090234,-1.803755,3.038988,8.293006,6.167202,7.230945,1.586051,-3.583256,-8.667909,-5.673560,6.962902,6.434060,-4.382563,7.093796,-5.921400,0.292752,3.064826,-2.027819,-3.104144,5.339051,-3.482570,7.707808,9.677234,-7.336038,0.507597,-0.509100,5.462685,8.084044,-3.754663,4.286492,7.998029,-1.898418,-1.425926,5.043578,-3.838176,-0.689372,-2.333010,-2.562501,4.302229,3.368161,5.757819,-7.922979,9.003422,-2.849199,-7.369585], dtype = "float64")#candidate|6865|(1080,)|const|float64
const_6866 = relay.const([-3,1,5,-4,6,-8,-4,9,2,10,-10,10,4,-7,2,-7,-8,3,-6,8,-2,1,1,-4,5,1,-2,-1,2,3,6,1,8,-9,10,6,-6,-7,-8,2,-7,-9,3,-5,1,-10,-8,1,4,10,-7,-5,-5,10,3,9,4,-1,1,3,-4,7,4,7,7,-2,-4,-5,-9,-2,-8,6,-10,-10,-3,-1,6,10,-5,7,-6,6,8,-9,-10,-3,4,2,-4,-3,7,-5,-3,2,4,9,10,10,-9,-7,1,-7,9,9,2,-10,7,4,2,7,7,8,3,9,8,-3,6,-6,-9,-8,-8,-2,8,4,-3,-8,6,10,-5,-5,5,-3,-6,-7,5,-10,8,7,-7,7,-1,10,10,-1,9,7,-2,8,-9,-4,2,7,-5,7,-7,-4,1,8,-4,-6,2,10,4,-3,2,-9,-3,-8,3,2,2,-6,10,4,-2,-8,6,10,5,-4,1,1,2,-2,-5,-2,-10,9,4,-3,-4,3,-8,-1,-6,-10,-10,1,-2,-4,-9,3,-7,-9,-6,7,5,1,3,-8,8,-6,-9,-2,-3,-8,-3,4,-5,-10,7,-2,-9,8,8,-1,-4,-7,-5,5,-5,10,6,-9,7,4,9,8,1,-2,-2,7,1,8,-3,3,6,8,-9,4,6,-2,2,-3,-6,3,-7,1,-4,-3,3,-7,-3,-2,-9,8,2,10,-8,10,7,9,4,1,2,-7,2,-6,8,-7,4,-4,-3,-4,-7,-4,-8,6,6,3,3,-3,-5,-2,-8,-2,4,3,-2,8,-1,-4,7,4,9,-1,7,-9,-4,-7,-10,5,7,-1,4,6,6,-6,-10,-6,8,-1,-1,7,-1,-8,-3,5,10,9,-7,-9,7,-6,6,7,-1,-10,9,10,4,-1,10,7,3,-5,-2,-5,-2,7,-5,3,-3,10,10,1,7,-1,9,-8,5,-5,10,6,-1,9,7,1,4,-9,-9,-8,-4,5,8,-4,-9,-2,8,-10,-2,2,2,7,-5,2,-9,-2,1,6,1,4,8,-8,3,5,6,5,3,5,10,-1,8,-2,3,8,-8,3,-8,4,8,7,7,3,5,7,5,-4,3,4,6,9,6,-1,4,8,-5,7,8,-3,10,-6,-7,-2,10,8,9,9,-1,2,8,-1,-4,6,-10,4,-8,-7], dtype = "uint32")#candidate|6866|(448,)|const|uint32
const_6867 = relay.const([[-4.794215,-7.486250,0.300717,8.064943,-1.278132,0.494031,1.938292,-8.286444,3.416019,-5.303369,4.954464,8.387328,3.332174,2.447473,-5.753508,-4.545412,-3.333454,4.748321,7.371697,-5.170068,-0.470120,-4.477758,-1.367254,2.120263,6.566125,6.156633,4.475236,5.305565,6.042332,-2.368162,6.351021,-4.485329,1.288953,4.886029,-8.029504,-4.871172,7.793255,6.896017,-3.164325,-4.517282,-4.090911,-1.494489,-5.901185,9.686480,5.292826,1.256260,-6.386836,-6.698270,4.562963,8.654732,-7.097688,6.704283,-5.461787,8.256872,3.812813,8.999432,5.530314,8.976599,1.681021,9.531523,-7.839138,9.155890,-8.049914,-5.110406,-8.230429,-6.348168,0.333905,-0.541550,-4.060162,-7.986310,4.850997,4.953399,-2.177963,0.145285,7.820870,-2.566231,8.357312,2.288992,9.919596,-1.576862,5.727224,-3.592902,-5.495455,-4.103799,-4.327039,-6.636264,-6.862525,-1.179391,-8.052681,-9.597645,-4.423897,9.922077,3.428226,-1.935239,-1.094500,-6.771380,7.987644,-5.741715,2.844664,-6.507858,-0.129998,-9.318907,-3.783610,8.453624,-8.248916,1.191344,-2.271921,-3.734081,2.367855,-6.586059,6.861622,0.487586,-4.823420,-2.378650,-5.634534,3.749717,8.154975,-4.794544,4.087398,-2.489449,7.614106,-1.744263,-1.477197,5.414935,4.626795,3.911981,-3.538421,7.331193,1.892144,9.423562,-2.803963,-2.530545,-4.460248,-6.609769,-4.017108,5.004946,-7.894062,8.197080,-8.143797,-6.260535,-4.129118,2.226481,-5.281529,1.343076,-7.326837,6.855051,-9.223195,0.561480,-2.713778,-1.006321,-7.662943,2.990013,5.465322,-3.242436],[7.344551,-9.214587,-3.039031,1.353728,-8.406127,-5.603699,1.982201,-2.142218,9.679258,-1.615586,5.666737,-7.698680,-0.887669,-3.338079,-5.266179,1.409103,4.486937,-2.603767,0.848091,-0.730432,-0.559029,4.486772,-9.071827,7.065222,0.678449,-1.585074,-6.654146,-6.540930,-7.000439,4.614998,3.391673,-4.561201,-1.073084,5.742426,-2.902353,2.021021,-1.346205,-1.351670,-7.092917,1.689879,3.058375,-1.848346,-2.371715,-8.162917,5.589262,-7.921993,3.940012,8.703954,6.092824,6.526363,-2.918521,-0.800943,2.841617,-6.890288,9.663971,7.326641,9.930722,-9.485900,6.517071,-1.797077,-3.104664,1.999513,6.099321,2.587819,1.328043,4.040350,-7.928278,1.998146,-7.466466,8.504409,7.745784,0.085303,5.582956,-8.573751,-0.414056,6.362744,6.179782,-6.581589,-0.154214,9.004372,4.539951,0.777849,0.019760,8.808880,-3.147820,3.980846,-9.573379,-8.459382,-1.322792,-3.047642,0.983601,-5.318682,-8.370016,-9.065971,-6.466032,5.579140,-5.126683,8.227078,9.182348,5.141825,-3.526522,1.752746,7.668655,-7.591484,-2.990414,5.257875,-0.975660,6.381096,-9.241614,2.109754,8.819492,-6.709006,-1.234072,0.224835,3.554599,1.156590,4.019916,-0.324156,3.569386,2.920473,1.770161,6.380541,-4.785208,-6.041638,-7.279200,9.506084,-1.203288,5.987819,-6.798896,-0.221840,-9.776024,0.561556,-4.458255,-0.001698,-8.817336,-6.740801,-2.317596,0.627946,-6.617439,-9.959683,-3.858293,-0.014903,2.133531,2.661768,3.692958,0.139725,2.413000,5.594704,-3.202412,5.345967,7.942345,-2.463773,-4.323159,-7.813703],[-9.127086,2.930736,3.115428,1.659944,-9.247945,-3.430236,5.446341,7.647677,-1.908889,-4.681492,-4.270392,2.155598,5.217517,-2.366937,3.617450,-3.349750,0.456040,-3.984409,-9.554411,5.565437,-8.177486,-1.983999,-6.263227,8.905813,-1.234596,3.672201,1.237585,4.053352,9.622874,-9.048641,-5.326655,-1.014677,0.216709,-2.188201,-8.557375,-1.142242,2.580504,-6.204292,-6.435926,-0.265304,-6.360530,3.640919,-7.891776,-3.213731,-5.585484,1.800429,-8.740450,-6.509564,-1.642973,6.743741,6.787314,-6.067526,-4.260654,-7.794038,-7.507841,9.450522,-1.666486,-1.402596,9.938810,-4.186716,-9.235812,8.765180,4.026515,-0.887956,-3.417076,6.796645,7.853677,7.524246,-4.506006,-4.993327,-3.377135,8.836544,-3.065805,-5.848794,6.023200,-0.880839,-4.745005,-0.031110,9.277205,4.999814,-8.605470,0.748335,-8.001717,6.374208,-4.653826,9.990681,8.762640,-2.659056,8.060503,-6.685150,1.265172,-4.744898,-0.509874,-9.847908,8.861573,3.444003,-1.176446,9.001411,2.992513,3.622070,-2.210642,8.955041,-0.653772,7.955172,-7.954198,-6.983528,-2.981401,3.939126,8.852170,0.050770,9.470643,-0.411237,1.574286,5.203905,-1.795494,6.732970,8.860495,-5.894327,-8.858471,5.832326,7.820406,-6.277794,-3.537096,-3.838126,5.280249,-8.758969,8.117085,-8.561389,-6.445020,3.846132,7.322096,3.874391,2.849180,-6.700865,-4.489835,-8.863050,4.834380,2.775240,-7.323875,0.766499,8.994381,4.052321,-2.129708,-5.503403,7.891512,1.465441,-9.194750,8.879045,-9.159511,6.859641,-0.250292,9.409464,-9.590545,1.187158],[-7.686481,7.680815,9.459739,-2.145283,-8.478730,-4.148124,9.601477,-5.763857,5.771554,9.644369,7.780673,-5.621641,3.085829,4.930034,-2.493096,-4.533984,5.288883,2.650329,-6.704007,-1.788009,-4.626453,-6.497099,-8.192234,8.652228,2.774663,-1.726605,2.386522,-1.400037,-1.790794,-7.124517,-1.742842,5.411261,-9.147293,-3.847755,2.889923,-4.531211,-3.294873,7.214206,3.973699,-3.558246,4.086026,-0.976835,2.770618,8.223634,-1.051601,-1.445622,8.971740,9.710119,-2.569900,-0.103414,-0.574175,1.590190,-5.416255,-2.707367,5.540392,-7.901435,5.238538,3.973879,5.321483,-3.416118,7.054984,-2.095772,-0.644308,-6.080149,-4.725759,-1.447920,4.755100,7.468804,-0.404027,-3.653090,-5.144505,3.732785,7.903767,-7.879380,1.858884,-0.357070,4.211453,5.379942,-5.256503,1.703647,4.648206,-1.024546,9.922601,-1.889467,6.349126,-1.245117,8.441630,2.440720,-6.435298,0.129618,-6.554207,-9.303146,-3.281386,8.907760,-2.950720,2.736736,2.837283,-0.788578,0.412055,-2.666577,0.233386,-1.895974,-3.499831,9.843317,7.510252,0.515463,4.518765,-0.788152,9.449733,-8.733643,-3.050943,6.152354,1.933324,-1.484610,-2.716417,7.906696,0.498655,-7.766481,6.969681,0.052445,-0.954862,-8.721523,-3.908352,-1.438447,5.551543,1.882595,-0.989784,5.629723,6.491827,4.811862,-1.884598,4.542239,-3.006535,-8.469172,-1.125658,2.429171,-4.823814,-8.044405,-4.946443,-4.506682,7.723055,2.290654,9.856312,-6.642712,-4.818203,-6.601582,-0.180224,4.701536,-1.539667,7.214488,6.863274,8.985148,-5.580990,-4.014753],[-8.124550,-7.016513,7.079640,-2.981064,-3.567288,0.468106,-6.034381,-2.146032,6.418017,4.062431,1.779730,-5.702162,2.965056,-5.042858,6.824643,-4.631709,5.990918,-0.555676,-0.834461,0.828941,4.894988,-7.676218,6.891521,-8.133662,-5.364370,-9.058139,-9.104262,-8.203123,-6.383659,-5.063048,1.184929,-6.783542,0.019945,9.019254,1.887835,5.344893,9.183506,-9.570326,-7.814358,-0.572552,-3.826374,-9.454897,9.475964,9.797735,9.931141,-4.205973,-9.874426,3.620175,4.862323,-8.274745,-6.830409,4.075846,2.323225,-5.088005,-0.729969,-3.666547,5.320316,-7.947119,0.376891,-7.430661,8.113796,4.363552,2.865214,6.204933,-4.527389,1.797121,6.335558,-2.271149,-6.964633,-0.001748,5.001015,-0.270633,5.398509,-1.608622,-8.111181,6.192149,4.607683,0.763196,-7.759714,7.114278,-8.872945,7.767288,9.201335,-3.486958,-9.868567,-5.291559,8.117387,-3.842852,7.514961,6.836472,5.407030,6.471692,-7.318343,-1.497767,-8.123294,1.291769,-5.234302,-4.981604,-4.507774,-6.747048,-0.084943,2.549641,4.684137,-5.641817,-1.626955,-8.855871,3.523848,-4.078165,-5.274302,-0.195942,-1.296238,-6.788621,-6.976617,-2.178830,7.430491,6.940167,2.070638,-2.908102,-9.214591,-0.738451,-6.531614,-6.559478,-9.042467,9.691769,7.242150,8.738658,6.951114,7.665777,9.438604,5.671170,-0.988266,-0.316252,3.889425,-6.854601,5.383358,-6.070537,0.222398,2.558718,7.242181,-9.642215,-9.226229,-2.513813,9.411973,2.027631,5.540350,-6.651503,2.352960,2.006549,4.218031,-8.432145,-8.901499,-0.718175,-2.966166,-4.830714],[1.054525,-9.880757,-6.371303,7.989383,-6.270919,-0.599119,8.080760,7.305170,8.050333,7.224569,-6.924264,-0.158593,-1.360014,-4.312673,-8.760600,-0.898427,-9.127232,-6.669278,3.781445,-4.621214,-3.367855,1.271773,8.172682,0.214393,-1.078221,5.058637,-8.705418,9.861131,9.527784,1.388287,-4.217872,1.716981,9.688898,-3.175587,1.685877,-3.632842,8.495855,-2.578880,2.637305,-0.649396,-1.954740,-0.256908,6.099699,-2.625461,-6.585708,-5.867450,3.254174,0.583378,6.643142,-3.670029,-4.797297,3.233010,-2.585620,4.011856,8.145582,3.051263,4.568222,-7.209375,-2.168454,4.286710,9.197844,1.642786,2.483312,2.700172,-5.359976,-2.748475,-1.443130,6.638181,6.695027,-3.011350,-0.508136,-2.977113,-1.595060,-6.358011,5.519413,7.022950,8.747661,-2.350255,2.086016,-2.271313,0.400963,-7.412323,-8.159632,-5.866572,-5.893152,-5.343611,1.526690,5.821967,0.781051,-0.634391,9.303483,0.139538,-0.487054,-1.354411,9.824688,-2.082914,5.884823,6.730465,-3.981725,4.286236,-7.593288,5.813159,-8.313180,3.972313,-7.423001,2.495064,2.660968,-4.756194,-7.958733,0.352423,0.702624,-5.839369,3.247358,-9.633752,3.899905,-7.879902,2.955319,2.712557,-6.143567,-0.688583,-6.454117,4.404740,-1.459937,-5.051249,-3.674723,7.317140,6.376847,-5.612442,8.982049,-9.867266,-8.843399,-7.753245,-7.091816,8.519549,3.986588,3.610908,9.396505,2.367472,-7.575311,-1.736595,-2.675558,4.471297,2.530073,-2.064254,-0.852511,-9.245447,8.666983,8.229582,-6.585833,2.430410,-5.528733,-3.474281,8.722427,9.406340],[1.922211,-0.519892,6.187702,2.380144,6.002563,8.629899,-6.038995,-2.495707,1.001898,5.114933,-7.256624,1.329964,9.346464,4.347019,4.720667,-5.173405,-1.354335,-9.830290,-9.818140,6.733370,7.471784,-6.286980,-7.653814,-5.881360,-1.554717,8.179463,-6.766248,4.070231,-5.430419,-8.389678,9.192740,-7.651673,0.065407,-5.066891,-7.065772,5.149188,-1.745556,0.595803,-4.973040,-1.920366,1.550564,6.999987,-8.708247,5.594715,7.462916,6.465284,7.359565,6.156295,-5.938387,-7.927589,7.695398,9.229672,8.288258,-1.396386,-3.220837,-2.322388,-2.795081,7.280621,-1.886889,-6.919679,-9.350552,1.006147,2.137065,-4.579216,-2.807746,7.844065,-3.853713,9.170277,1.690074,7.023817,6.939033,-5.648528,8.058542,-5.867991,-9.406635,-1.346197,-8.021888,-2.551947,-5.208754,-8.662132,-2.641150,-2.025194,-2.914431,-5.486337,1.926721,7.332331,-6.394025,-0.781548,1.410489,9.204103,4.608799,-0.613407,5.340272,-9.868817,3.591661,-7.274138,-4.919950,-5.928958,6.791169,-8.421351,-0.422263,0.477945,5.743705,-9.726713,-2.712423,8.268388,4.934683,-6.680537,-3.967386,-1.333141,3.555792,8.377973,6.818781,-3.973529,1.952615,3.095264,-3.576138,-7.269411,2.178951,-0.298468,-1.915423,1.651349,5.150620,5.667969,-3.697066,7.603590,-3.114177,6.792199,-6.877806,-1.281279,6.139346,7.509709,-7.171264,7.601017,-0.510712,-6.833811,3.362458,7.779669,7.973027,3.602193,-9.485006,5.548888,6.338224,0.824604,-6.573808,0.099905,9.608502,1.170598,-3.570834,1.325147,-0.170416,-2.830187,-7.200693,-0.676379]], dtype = "float32")#candidate|6867|(7, 154)|const|float32
call_6864 = relay.TupleGetItem(func_6367_call(relay.reshape(const_6865.astype('float64'), [6, 15, 12]), relay.reshape(const_6866.astype('uint32'), [448,]), relay.reshape(const_6867.astype('float32'), [1078,]), ), 6)
call_6868 = relay.TupleGetItem(func_6371_call(relay.reshape(const_6865.astype('float64'), [6, 15, 12]), relay.reshape(const_6866.astype('uint32'), [448,]), relay.reshape(const_6867.astype('float32'), [1078,]), ), 6)
bop_6875 = relay.mod(const_6866.astype('float64'), call_6838.astype('float64')) # shape=(6, 15, 448)
bop_6878 = relay.mod(const_6866.astype('float64'), call_6839.astype('float64')) # shape=(6, 15, 448)
var_6887 = relay.var("var_6887", dtype = "int64", shape = (2, 14, 3))#candidate|6887|(2, 14, 3)|var|int64
bop_6888 = relay.less_equal(call_6847.astype('bool'), relay.reshape(var_6887.astype('bool'), relay.shape_of(call_6847))) # shape=(2, 14, 3)
bop_6891 = relay.less_equal(call_6849.astype('bool'), relay.reshape(var_6887.astype('bool'), relay.shape_of(call_6849))) # shape=(2, 14, 3)
output = relay.Tuple([call_6842,const_6843,var_6848,call_6864,const_6865,const_6867,bop_6875,bop_6888,])
output2 = relay.Tuple([call_6844,const_6843,var_6848,call_6868,const_6865,const_6867,bop_6878,bop_6891,])
func_6892 = relay.Function([var_6848,var_6887,], output)
mod['func_6892'] = func_6892
mod = relay.transform.InferType()(mod)
mutated_mod['func_6892'] = func_6892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6892_call = mutated_mod.get_global_var('func_6892')
var_6894 = relay.var("var_6894", dtype = "int64", shape = (21, 4))#candidate|6894|(21, 4)|var|int64
var_6895 = relay.var("var_6895", dtype = "int64", shape = (2, 14, 3))#candidate|6895|(2, 14, 3)|var|int64
call_6893 = func_6892_call(var_6894,var_6895,)
output = call_6893
func_6896 = relay.Function([var_6894,var_6895,], output)
mutated_mod['func_6896'] = func_6896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6552_call = mod.get_global_var('func_6552')
func_6553_call = mutated_mod.get_global_var('func_6553')
call_6933 = relay.TupleGetItem(func_6552_call(), 0)
call_6934 = relay.TupleGetItem(func_6553_call(), 0)
var_6962 = relay.var("var_6962", dtype = "float64", shape = (6, 15, 9))#candidate|6962|(6, 15, 9)|var|float64
bop_6963 = relay.floor_divide(call_6933.astype('float32'), var_6962.astype('float32')) # shape=(6, 15, 9)
bop_6966 = relay.floor_divide(call_6934.astype('float32'), var_6962.astype('float32')) # shape=(6, 15, 9)
func_3705_call = mod.get_global_var('func_3705')
func_3713_call = mutated_mod.get_global_var('func_3713')
var_6969 = relay.var("var_6969", dtype = "float32", shape = (432,))#candidate|6969|(432,)|var|float32
var_6970 = relay.var("var_6970", dtype = "float64", shape = (66,))#candidate|6970|(66,)|var|float64
const_6971 = relay.const(1.340227, dtype = "float64")#candidate|6971|()|const|float64
const_6972 = relay.const([1.141088,5.929789,5.578521,0.083052,9.944320,9.319203,-0.165914,3.435947,-9.075973,7.249819,-3.531116,8.340505,-0.160337,4.059984], dtype = "float64")#candidate|6972|(14,)|const|float64
var_6973 = relay.var("var_6973", dtype = "float64", shape = (1, 24))#candidate|6973|(1, 24)|var|float64
const_6974 = relay.const([-4.408682,4.555510,1.927014,-7.728508,-2.475495,-9.881820,4.458231,9.625074,-1.265436,2.248116,0.375631,3.488844,2.897117,-9.815076,-2.577176,7.807736,-5.155022,-5.799559,-7.843261,-5.790530,5.695410,6.530531,-1.176687,5.914450,-7.309959,-2.261167,2.968245,1.198248,9.668006,0.997534,0.009879,-9.973155,0.996107,9.520829,5.157357,-8.257056,6.512132,-6.064128,-4.543092,-3.263824,-6.378588,4.883143,2.057347,9.103347,-8.751024,-4.787345,9.930902,3.389381,2.533475,0.386494,4.778203,2.576662,0.992977,-0.303738,1.234248,-7.279041,3.549914,9.219991,-6.764467,1.534569,5.948236,-6.428946,7.743170,6.750336,-5.733976,1.132623,7.325039,-2.489823,-9.162743,-4.747688,-4.053801,-4.063513,-1.970043,-8.184728,-7.087043,9.284493,7.127040,-6.935091,-7.036775,3.766230,-8.414131,-9.024980,6.638688,-1.465692,7.191074,5.963525,7.239387,2.879979,-5.831193,-6.154913,-1.396573,-3.404182,5.801466,-1.382947,9.031789,9.386783,-6.361640,0.953533,-8.236484,-2.357999,-0.237588,7.186990,4.316869,-5.754074,-7.837405,-5.739165,-9.332054,-6.879094,5.157305,3.156726,-3.656675,1.118272,-1.886258,-8.537435,-9.002198,-3.068255,4.911129,3.015917,3.761793,-0.864632,-7.460027,-2.043084,7.602130,5.093508,4.975701,6.183599,0.978017,-2.118538,4.650510,-5.248471,6.353503,1.868504,5.143882,0.974085,-4.235256,-6.366367,-2.868605,8.339908,-9.194890,1.813859,-3.236354,1.518798,4.756473,1.657016,6.292716,-7.423282,8.740708,0.362044,-9.912661,3.989040,-8.939562,-4.977678,-1.630595,-5.216195,-5.015291,-1.002204,7.219700,-1.514363,3.158438,8.938499,9.520297,-1.538609,0.578035,2.231137,-6.878313,-3.539560,4.445416,-1.190057,5.120156,-0.876828,-4.942543,-1.467557,-1.140643,-3.964224,-9.940903,-2.103537,4.625643,-2.389775,-1.637806,1.350690,-4.397123,9.610462,-3.242306,4.186983,8.019645,0.386362,-6.789199,1.416201,-2.017207,6.029925,6.798667,-8.720002,-3.152388,-4.155145,9.757928,4.009725,6.319170,6.681614,-7.606301,9.304692,-4.553056,5.200353,-5.604244,7.312018,-9.286230,-7.254964,1.458197,6.746676,7.228510,-0.123790,3.242045,6.615748,5.778233,-4.733783,0.655162,4.908731,-9.869653,8.396652,4.276910,1.594364,0.634860,5.945224,-6.080246,-6.664698,-1.940901,-9.553652,-9.247248,6.616799,-8.980146,-5.879548,1.229420,7.650582,-9.335088,0.802404,-7.236927,-7.737553,-6.479731,-5.396373,-7.312004,-6.813258,1.166035,-1.080160,-8.068855,3.085916,7.457386,1.235200,8.003286,-2.125845,2.912454,1.192266,-9.918576,0.997235,-5.353908,2.456742,-8.884891,4.724220,0.037878,3.028106,8.619519,-1.916407,-7.503082,-6.982779,2.614320,-9.079715,-2.400398,-0.930041,3.648330,9.645874,6.490106,-1.129649,-1.293202,1.993209,6.240096,-6.079372,-8.960884,7.553972,-9.846639,-1.707968,-1.063517,-1.285525,3.777386,3.671102,-4.574930,-4.009787,1.659635,4.845782,-7.424193,4.105562,7.823805,4.900077,1.873601,4.756197,-1.830925,3.765769,-3.213981,8.209395,-5.677633,-7.293320,3.400112,-8.378694,5.487808,-0.766245,-2.548849,4.591866,1.792403,7.784863,6.996586,-2.013742,4.180699,-4.251383,4.535101,5.317760,-5.964526,-9.074328,-5.603399,-5.980563,-6.981283,3.299202,9.418857,8.942928,9.220707,7.660619,2.226044,-8.476486,4.282487,-8.994707,-7.289031,-1.943045,7.456695,-1.096188,9.919467,7.170592,-4.250442,-6.869112,1.310647,-4.672923,7.907897,9.747476,-6.718503,9.873646,-8.905124,-7.143444,9.417499,1.675397,-0.127295,-4.225117,-2.425481,9.476358,-4.911397,-6.500372,5.702069,8.055226,-1.890006,2.403072,-0.997734,-8.556110,-9.340420,-4.661400,2.565769,-2.156568,7.508877,2.989707,-3.800917,-7.465888,4.092240,-9.988774,-1.822890,8.330899,-4.686314,4.492369,7.582005,1.356288,-6.408137,4.339384,5.974946,0.252772,-8.942193,6.513708,-9.126723,3.987836,-1.610765,-2.600771,4.079648,-8.276904,9.053166,3.169595,3.679701,-6.988697,-6.024898,-6.864236,-5.166329,-4.151902,-1.204347,3.280116,-9.186405,-1.042529,8.672338,3.664178,-1.660708,-2.079727,5.294324,-2.303307,4.607040,-9.040282,-1.737924,8.283894,3.468426,8.360942,9.987768,-1.148541,-2.188858,4.404574,4.451674,-4.636377,-0.059760,4.035774,-4.364392,-7.126280,4.979882,5.763681,0.523231,-3.026219,7.456178,1.888777,-2.750449,-5.351493,-3.098829,-4.127134,-1.090014,-8.677547,-0.663635,-8.313508,4.098918,-9.485260,9.298336,1.432281,-3.837310,5.664443,9.033501,5.469930,-6.816737,-5.608639,4.946918,7.151639,-3.097086,-4.940481,4.952936,4.165763,3.821267,6.255109,-7.951670,-3.361880,-3.273708,-3.273762,-8.682312,-0.669518,7.568021,7.190168,5.407015,-2.836041,-5.283575,-4.216945,5.800778,1.957427,0.766672,3.626900,0.282545,2.764092,-6.217835,5.794537,9.481376,3.974461,2.496085,4.534297,1.181767,-5.649459,-0.303532,-3.463705,-5.618476,-5.177575,-0.756299,0.997656,6.670139,-2.591622,-0.863118,-0.714842,9.757423,-1.738345,6.393786,9.310731,3.553414,-7.074758,2.243689,4.369144,-6.029079,0.339523,-2.846742,-0.260693,1.112599,2.725962,5.809716,9.210439,6.244045,2.888578,7.791870,-6.219376,-8.170539,-1.489013,0.215018,4.139280,-8.859636,-5.917471,-9.784890,-8.233813,7.694226,7.799709,-1.088017,0.688749,7.462176,-4.713169,-1.192042,0.392851,3.825321,-7.980481,-6.549457,1.237432,-8.509771,6.405142,-7.583172,8.668080,7.384710,-3.033746,8.223842,7.632423,-2.530672,-8.718820,-4.884430,3.941842,6.512192,-5.327313,-8.079240,-1.627567,-0.197740,7.790017,-4.424081,-4.214363,8.338793,8.902568,7.011535,3.426566,-8.184049,-5.679314,-1.604758,-5.226280,7.627908,7.530412,-9.964278,-6.392522,7.781469,-4.775717,-6.048794,2.732203,6.498129,4.232709,5.822745,7.008620,-6.372012,1.243163,2.518368,-8.078660,-9.253648,-7.671477,-0.446117,7.108077,-7.939259,8.626980,4.521566,6.415485,9.314393,9.496380,3.443098,-6.920445,-6.477175,-9.446550,5.925881,-7.061387,-6.066661,2.645874,4.171186,-8.861931,-7.842924,3.367248,-9.203040,-1.338693,4.050474,4.656374,-9.088303,-9.549000,7.476255,9.829503,2.017469,-7.617144,-9.913922,-6.758918,2.762404,-9.017098,-4.112707,5.217238,-0.635589,-2.291907,8.991610,-7.125636,2.837559,-1.027180,-1.101844,-2.701546,5.519096,9.056045,-6.239852,8.964605,3.919004,2.963763,2.341298,-9.146355,-1.996449,1.089285,-0.378191,-8.249801,-4.909203,-7.127157,-5.560447,3.012258,-1.673934,8.049896,-6.193742,-6.205011,-0.878539,-7.212364,-2.503586,9.652657,4.431627,-4.203633,1.795740,-7.269396,4.614690,-3.297844,4.711970,6.053813,-6.822445,-9.476893,5.243261,-0.296993,-9.859970,-7.859664,-8.616552,6.498366,-9.163292,5.576710,-9.342928,-9.127022,8.273565,4.688741,-4.913573,-3.559873,-5.310647,2.489046,6.792503,6.749995,-4.911058,-1.126823,-7.939729,8.563273,6.286346,-9.789837,-4.191802,4.051146,5.289971,-7.158004,4.860949,-4.964208,5.274266,8.416661,-8.184161,-9.419660,-5.216112,8.198457,-3.421751,-8.637254,3.385719,-2.339394,2.551816,1.033813,-1.924867,-7.422156,-1.667746,7.510024,-6.974040,-2.253133,-9.318726,-8.507784,4.696588,5.682440,-5.589949,0.762378,-7.627666,2.143346,6.079429,-4.989205,-2.553301,0.633494,6.768349,-8.756950,-4.380374,-8.848985,3.665679,2.149841,-7.666559,-4.087431,-2.231310,7.156331,4.329842,-0.198872,1.855935,5.447717,2.769483,3.772021,6.214749,9.494643,-9.627709,-9.472946,-2.406392,1.866935,-3.121562,4.325379,4.670656,6.071309,9.278589,-1.962156,-3.831944,-7.362508,-5.190137,8.820011,9.725951,6.176108,-6.273756,4.479529,-8.886100,-4.553426,-9.100554,0.715416,-4.828962,7.061804,7.889771,-9.064626,9.001448,9.258032,-7.636444,7.671271,7.901304,-6.729857,0.909984,-9.729510,-8.006232,-6.514862,-4.181050,-0.600615,9.559979,-3.768297,1.172775,-1.578742,6.327538,8.070520,-2.342649,5.836406,0.666868,-9.372014,3.818775,-2.377449,2.255785,4.278915,4.152516,-8.696651,8.224121,4.454304,4.143067,3.990480,8.856057,3.524961,5.162609,-1.308247,-6.580900,3.313506,1.463823,7.798728,8.403252,0.073501,-4.332094,5.965868,-2.198771,4.397609,-2.837206,7.583272,8.950777,-1.080805,1.990627,2.339197,2.376620,-1.187001,3.450922,1.841411,-8.308507,4.394384,-4.447561,-5.524200,1.622741,-7.709433,-2.706045,1.728869,-7.035875,-6.779206,-3.443230,6.601536,3.273507,0.738874,4.613771,3.605252,5.734984,4.908498,5.191012,-8.350938,9.803907,-8.991097,-0.994842,0.989693,9.271808,9.616579,8.054366,7.509751,-5.232078,9.537671,6.227985,7.275562,1.106657,-1.076042,-7.629350,7.121908,-3.367670,8.689487,-7.072278,4.352091,-1.872853,7.209012,-6.388383,-8.424526,5.170670,-8.457589,-7.338237,0.680562,-1.035897,-8.716229,8.027192,-7.167851,-3.779990,-5.973858,-8.512046,-9.936048,-8.464177,8.685043,9.093749,2.144209,8.326691,2.054759,2.617627,-1.366136,5.375017,-8.466707,-1.741770,-2.802757,-3.860817,1.068262,-3.929159,-7.145427,-4.963702,2.561723,6.280773,-9.827843,3.064815,4.546735,3.461142,-7.314349,-4.439786,9.110293,-1.930023,2.504854,-1.731504,1.483598,7.342168,-6.612344,8.650049,3.942838,-5.752146,-2.300830,8.142705,4.559732,9.762384,5.560792,-0.582773,-6.938494,-7.582864,-3.014567,6.735287,-6.847823,6.714345,-7.630750,-0.007019,6.107810,5.902920,-7.833789,2.671396,4.138405,-1.241808,5.554533,1.219959,1.851242,8.482387,3.585788,5.065875,5.344534,-7.285288,-9.088491,6.413893,0.604763,2.498049,-2.034802,1.871811,1.345213,-3.828904,3.325808,-0.547892,-7.944397,-0.996240,-6.438411,1.261457,-4.512313,3.591718,-4.013386,-3.188525,-3.800451,-6.063202,3.545090,-8.707071,5.202087,7.577657,8.892556,7.846159,0.901344,9.189918,5.616749,-4.650938,-9.829119,-3.446674,-9.598416,-0.907689,-7.886088,4.548889,9.832708,-8.393509,9.163889,5.547409,-1.073544,-5.331914,-2.200080,2.805303,-9.745070,8.688808,-4.796343,3.938025,-8.359001,9.632023,-1.711726,-2.044647,-0.176453,-8.673627,-7.445311,-7.408227,-3.503746,8.356887,-2.014342,5.367733,-5.253300,1.131556,-6.293457,2.297800,3.489889,-9.605405,-4.335873,7.279316,4.261269,-7.935002,5.250283,-2.325244,7.909022,-2.949398,0.873996,-0.645688,-0.004645,-0.971763,-6.364853,0.175264,-1.621063,-7.230699,8.442284,9.066139,6.286123,-7.621697,8.960671,7.262193,-9.972388,-0.181114,4.287705,7.045743,4.846057,-3.067430,-7.488916,4.314786,9.805220,2.661177,1.010183,-7.006543,-3.387979,6.780225,1.195786,-1.220889,-9.738268,4.543009,8.401535,0.897076,-2.286329,-9.772557,9.095986,7.224736,5.329174,2.555121,-6.903826,-9.908358,8.252216,-8.995880,-8.299898,-9.039505,5.396675,-9.187230,0.330367,4.906635,9.202415,-1.123349,7.662399], dtype = "float64")#candidate|6974|(1056,)|const|float64
var_6975 = relay.var("var_6975", dtype = "float32", shape = (220,))#candidate|6975|(220,)|var|float32
call_6968 = relay.TupleGetItem(func_3705_call(relay.reshape(var_6969.astype('float32'), [12, 4, 9]), relay.reshape(var_6970.astype('float64'), [22, 3]), relay.reshape(const_6971.astype('float64'), []), relay.reshape(const_6972.astype('float64'), [14, 1]), relay.reshape(var_6973.astype('float64'), [24, 1]), relay.reshape(const_6974.astype('float64'), [88, 12]), relay.reshape(var_6975.astype('float32'), [220,]), ), 7)
call_6976 = relay.TupleGetItem(func_3713_call(relay.reshape(var_6969.astype('float32'), [12, 4, 9]), relay.reshape(var_6970.astype('float64'), [22, 3]), relay.reshape(const_6971.astype('float64'), []), relay.reshape(const_6972.astype('float64'), [14, 1]), relay.reshape(var_6973.astype('float64'), [24, 1]), relay.reshape(const_6974.astype('float64'), [88, 12]), relay.reshape(var_6975.astype('float32'), [220,]), ), 7)
bop_6978 = relay.equal(call_6968.astype('bool'), call_6933.astype('bool')) # shape=(6, 15, 220)
bop_6981 = relay.equal(call_6976.astype('bool'), call_6934.astype('bool')) # shape=(6, 15, 220)
output = relay.Tuple([bop_6963,var_6969,var_6970,const_6971,const_6972,var_6973,const_6974,var_6975,bop_6978,])
output2 = relay.Tuple([bop_6966,var_6969,var_6970,const_6971,const_6972,var_6973,const_6974,var_6975,bop_6981,])
func_6986 = relay.Function([var_6962,var_6969,var_6970,var_6973,var_6975,], output)
mod['func_6986'] = func_6986
mod = relay.transform.InferType()(mod)
var_6987 = relay.var("var_6987", dtype = "float64", shape = (6, 15, 9))#candidate|6987|(6, 15, 9)|var|float64
var_6988 = relay.var("var_6988", dtype = "float32", shape = (432,))#candidate|6988|(432,)|var|float32
var_6989 = relay.var("var_6989", dtype = "float64", shape = (66,))#candidate|6989|(66,)|var|float64
var_6990 = relay.var("var_6990", dtype = "float64", shape = (1, 24))#candidate|6990|(1, 24)|var|float64
var_6991 = relay.var("var_6991", dtype = "float32", shape = (220,))#candidate|6991|(220,)|var|float32
output = func_6986(var_6987,var_6988,var_6989,var_6990,var_6991,)
func_6992 = relay.Function([var_6987,var_6988,var_6989,var_6990,var_6991,], output)
mutated_mod['func_6992'] = func_6992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6746_call = mod.get_global_var('func_6746')
func_6747_call = mutated_mod.get_global_var('func_6747')
call_7041 = relay.TupleGetItem(func_6746_call(), 1)
call_7042 = relay.TupleGetItem(func_6747_call(), 1)
func_5149_call = mod.get_global_var('func_5149')
func_5153_call = mutated_mod.get_global_var('func_5153')
const_7045 = relay.const([2.351093,-5.088548,1.936949,-7.278755,2.731185,8.070622,-5.289151,-3.543572,0.581572,-1.623611,7.245086,3.724635,2.497537,5.905189,-6.568898,-2.262936,-4.698368,6.424499,5.009512,-2.535193,5.911819,8.489685,7.387922,1.656159,0.352472,2.743625,-0.434577,-5.595046,-1.356386,-2.766700,-0.210386,-7.583410,9.844506,-6.061340,-4.253486,-2.875917,-0.334966,9.553348,1.912618,-0.054188,-7.819008,7.480516,3.430738,-8.757648,0.176236,-1.051779,9.041714,-9.961202,-7.216279,-8.519229,-8.247611,-9.157362,-7.453935,-0.903027,-5.205800,-2.744191,-0.554747,7.868029,1.363911,1.443130,-7.268550,-3.994770,9.150580,2.045210,5.014229,-1.588552,-2.235172,-8.046860,-0.953948,-0.230263,-5.146638,3.300099,2.851020,-5.981152,-7.627711,4.636486,2.267830,3.098274,1.525108,-9.913691,-3.953459,-7.272696,0.396708,8.260627,6.816463,-7.615831,-5.108171,8.498662,3.709386,2.720565,7.685853,-3.246058,-7.270195,0.177178,-3.391028,1.099372,-4.335141,0.081099,-1.140746,7.475818,3.105905,2.456196,9.051548,8.801010,-5.884000,4.974446,4.375850,-5.474587,0.105612,8.521102,6.469821,-8.288404,-8.644499,2.732460,-3.524737,0.224043,7.463090,9.393076,8.895336,9.243413,7.391466,8.485807,-1.072300,0.589847,-8.854926,-0.858817,7.432446,0.905766,-2.009565,-0.521754,-4.640034,-9.876457,9.190066,-8.763345,-4.057246,-3.867554,-0.821040,3.854392,-1.128206,-7.814975,9.417215,-9.726080,6.716067,6.593683,9.708338,-7.735289,7.317522,2.205413,8.917792,0.081205,2.078397,4.351110,5.114353,-2.250509,9.596309,-3.412366,2.899755,7.799622,2.106672,1.149991,8.229365,-2.816127,-2.813452,3.974772,4.267265,-2.211648,-4.648791,9.854189,-6.509055,6.320592,-8.970278,-4.867454,5.667198,4.905244,-7.020999,1.505665,-1.519720,-3.260126,5.340759,-4.733848,-7.023514,1.066706,8.587517,9.937580,-4.437424,9.847979,-7.801971,6.391043,-0.895307,-4.293646,6.858039,-0.350186,2.791050,-2.113656,-3.545196], dtype = "float32")#candidate|7045|(195,)|const|float32
var_7046 = relay.var("var_7046", dtype = "float64", shape = (1280,))#candidate|7046|(1280,)|var|float64
call_7044 = relay.TupleGetItem(func_5149_call(relay.reshape(const_7045.astype('float32'), [3, 5, 13]), relay.reshape(var_7046.astype('float64'), [1280,]), ), 3)
call_7047 = relay.TupleGetItem(func_5153_call(relay.reshape(const_7045.astype('float32'), [3, 5, 13]), relay.reshape(var_7046.astype('float64'), [1280,]), ), 3)
uop_7051 = relay.cosh(const_7045.astype('float32')) # shape=(195,)
output = relay.Tuple([call_7041,call_7044,var_7046,uop_7051,])
output2 = relay.Tuple([call_7042,call_7047,var_7046,uop_7051,])
func_7057 = relay.Function([var_7046,], output)
mod['func_7057'] = func_7057
mod = relay.transform.InferType()(mod)
var_7058 = relay.var("var_7058", dtype = "float64", shape = (1280,))#candidate|7058|(1280,)|var|float64
output = func_7057(var_7058)
func_7059 = relay.Function([var_7058], output)
mutated_mod['func_7059'] = func_7059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6304_call = mod.get_global_var('func_6304')
func_6305_call = mutated_mod.get_global_var('func_6305')
call_7068 = func_6304_call()
call_7069 = func_6304_call()
output = call_7068
output2 = call_7069
func_7099 = relay.Function([], output)
mod['func_7099'] = func_7099
mod = relay.transform.InferType()(mod)
mutated_mod['func_7099'] = func_7099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7099_call = mutated_mod.get_global_var('func_7099')
call_7100 = func_7099_call()
output = call_7100
func_7101 = relay.Function([], output)
mutated_mod['func_7101'] = func_7101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6552_call = mod.get_global_var('func_6552')
func_6553_call = mutated_mod.get_global_var('func_6553')
call_7176 = relay.TupleGetItem(func_6552_call(), 0)
call_7177 = relay.TupleGetItem(func_6553_call(), 0)
var_7185 = relay.var("var_7185", dtype = "float64", shape = (6, 15, 6))#candidate|7185|(6, 15, 6)|var|float64
bop_7186 = relay.less(call_7176.astype('bool'), var_7185.astype('bool')) # shape=(6, 15, 6)
bop_7189 = relay.less(call_7177.astype('bool'), var_7185.astype('bool')) # shape=(6, 15, 6)
func_6746_call = mod.get_global_var('func_6746')
func_6747_call = mutated_mod.get_global_var('func_6747')
call_7193 = relay.TupleGetItem(func_6746_call(), 2)
call_7194 = relay.TupleGetItem(func_6747_call(), 2)
func_4169_call = mod.get_global_var('func_4169')
func_4172_call = mutated_mod.get_global_var('func_4172')
var_7226 = relay.var("var_7226", dtype = "float32", shape = (448,))#candidate|7226|(448,)|var|float32
call_7225 = func_4169_call(relay.reshape(var_7226.astype('float32'), [8, 14, 4]), relay.reshape(var_7226.astype('float32'), [8, 14, 4]), )
call_7227 = func_4169_call(relay.reshape(var_7226.astype('float32'), [8, 14, 4]), relay.reshape(var_7226.astype('float32'), [8, 14, 4]), )
output = relay.Tuple([bop_7186,call_7193,call_7225,var_7226,])
output2 = relay.Tuple([bop_7189,call_7194,call_7227,var_7226,])
func_7234 = relay.Function([var_7185,var_7226,], output)
mod['func_7234'] = func_7234
mod = relay.transform.InferType()(mod)
var_7235 = relay.var("var_7235", dtype = "float64", shape = (6, 15, 6))#candidate|7235|(6, 15, 6)|var|float64
var_7236 = relay.var("var_7236", dtype = "float32", shape = (448,))#candidate|7236|(448,)|var|float32
output = func_7234(var_7235,var_7236,)
func_7237 = relay.Function([var_7235,var_7236,], output)
mutated_mod['func_7237'] = func_7237
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7368 = relay.const([[[-10,-6,10],[-4,5,-4],[-2,5,-1],[5,-2,10],[-7,4,-5],[-7,-1,-9],[-5,2,4]]], dtype = "int64")#candidate|7368|(1, 7, 3)|const|int64
var_7369 = relay.var("var_7369", dtype = "int64", shape = (5, 7, 3))#candidate|7369|(5, 7, 3)|var|int64
bop_7370 = relay.bitwise_or(const_7368.astype('int64'), var_7369.astype('int64')) # shape=(5, 7, 3)
output = bop_7370
output2 = bop_7370
func_7378 = relay.Function([var_7369,], output)
mod['func_7378'] = func_7378
mod = relay.transform.InferType()(mod)
mutated_mod['func_7378'] = func_7378
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7379 = relay.var("var_7379", dtype = "int64", shape = (5, 7, 3))#candidate|7379|(5, 7, 3)|var|int64
func_7378_call = mutated_mod.get_global_var('func_7378')
call_7380 = func_7378_call(var_7379)
output = call_7380
func_7381 = relay.Function([var_7379], output)
mutated_mod['func_7381'] = func_7381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6746_call = mod.get_global_var('func_6746')
func_6747_call = mutated_mod.get_global_var('func_6747')
call_7386 = relay.TupleGetItem(func_6746_call(), 0)
call_7387 = relay.TupleGetItem(func_6747_call(), 0)
var_7388 = relay.var("var_7388", dtype = "float64", shape = (7, 13, 4))#candidate|7388|(7, 13, 4)|var|float64
bop_7389 = relay.bitwise_xor(call_7386.astype('int8'), relay.reshape(var_7388.astype('int8'), relay.shape_of(call_7386))) # shape=(7, 13, 4)
bop_7392 = relay.bitwise_xor(call_7387.astype('int8'), relay.reshape(var_7388.astype('int8'), relay.shape_of(call_7387))) # shape=(7, 13, 4)
output = relay.Tuple([bop_7389,])
output2 = relay.Tuple([bop_7392,])
func_7395 = relay.Function([var_7388,], output)
mod['func_7395'] = func_7395
mod = relay.transform.InferType()(mod)
var_7396 = relay.var("var_7396", dtype = "float64", shape = (7, 13, 4))#candidate|7396|(7, 13, 4)|var|float64
output = func_7395(var_7396)
func_7397 = relay.Function([var_7396], output)
mutated_mod['func_7397'] = func_7397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6552_call = mod.get_global_var('func_6552')
func_6553_call = mutated_mod.get_global_var('func_6553')
call_7407 = relay.TupleGetItem(func_6552_call(), 0)
call_7408 = relay.TupleGetItem(func_6553_call(), 0)
output = call_7407
output2 = call_7408
func_7414 = relay.Function([], output)
mod['func_7414'] = func_7414
mod = relay.transform.InferType()(mod)
mutated_mod['func_7414'] = func_7414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7414_call = mutated_mod.get_global_var('func_7414')
call_7415 = func_7414_call()
output = call_7415
func_7416 = relay.Function([], output)
mutated_mod['func_7416'] = func_7416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7099_call = mod.get_global_var('func_7099')
func_7101_call = mutated_mod.get_global_var('func_7101')
call_7428 = func_7099_call()
call_7429 = func_7099_call()
output = relay.Tuple([call_7428,])
output2 = relay.Tuple([call_7429,])
func_7430 = relay.Function([], output)
mod['func_7430'] = func_7430
mod = relay.transform.InferType()(mod)
output = func_7430()
func_7431 = relay.Function([], output)
mutated_mod['func_7431'] = func_7431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6746_call = mod.get_global_var('func_6746')
func_6747_call = mutated_mod.get_global_var('func_6747')
call_7454 = relay.TupleGetItem(func_6746_call(), 0)
call_7455 = relay.TupleGetItem(func_6747_call(), 0)
func_6564_call = mod.get_global_var('func_6564')
func_6567_call = mutated_mod.get_global_var('func_6567')
const_7507 = relay.const([-9.226481,1.241225,0.203807,5.903374,1.468708,-6.358357,-2.251983,0.220318,-0.035731,-5.497070,-9.523968,1.331002,6.978105,-5.251272,-4.124922,-3.449290,1.712867,-8.601898,-9.414841,7.992008,-0.847528,7.815000,7.938942,-1.878798,-0.974650,-0.673903,-6.287534,8.247540,-4.237253,-8.632634,7.346415,-3.447163,-6.559455,3.498905,-7.896158,-3.209920,-1.374446,7.350637,5.385612,6.500346,-9.076178,-5.882479,-5.861466,-2.784529,5.346408,2.051494,-4.522228,1.036913,-9.858711,4.085990,-5.579091,6.057806,-4.432976,-1.737238,6.807760,6.653193,2.660004,-0.764989,0.626136,8.516555,9.683938,1.898761,-3.889040,-7.611796,2.961938,2.487596,-0.895487,-7.475965,-3.721461,-3.331444,5.559472,3.176522,7.348094,-1.619752,3.053366,-4.603398,-6.430318,-6.726923,-3.143339,0.473446,-6.234291,2.392033,-7.960374,0.209503,-2.797869,-7.647030,-1.166155,8.443677,6.615883,-3.602997,4.317998,2.406807,2.950097,-4.044212,-0.496154,1.276849,-8.428635,6.846553,8.732734,8.000410,-5.174422,4.862106,-8.685950,5.089548,-3.571777,-3.584049,-4.662184,2.136657,5.022487,3.173895,0.642583,-8.520693,-2.691127,-7.828975,7.910517,8.082637,5.255139,-7.875875,8.625805,1.932683,7.196087,6.273500,8.469416,4.491387,-4.804507,3.640963,-4.424770,-3.123955,4.169318,-5.650862,-3.538254,5.864988,-0.866192,3.508197,9.053267,1.478222,-0.054328,-2.927215,6.833532,-9.056675,-9.934686,8.863586,-4.989768,3.343090,5.939423,-5.984062,-3.002323,0.347240,6.685138,-0.530270,-5.639899,3.034706,5.993000,-4.779029,-9.056347,-4.512046,-7.630155,4.181129,2.022184,7.181057,-4.978482,8.179948,8.615837,4.282398,0.395867,5.250204,8.716950,8.317216,-1.282009,3.360435,-6.623686,0.911799,4.364219,4.995090,-7.846607,7.545328,-4.141632,8.318520,-2.252076,-7.370683,-8.396268,9.655067,8.576116,-2.604143,-7.771746,-1.755726,-6.028320,-0.604964,-4.296361,-4.667604,-8.083331,5.244495,-9.583005,-6.116896,6.991160,0.882974,-1.342690,0.031677,4.397073,2.630594,5.399468,-9.899059,9.154655,8.229778,3.979725,-5.211858,-0.045144,-9.021047,-5.458701,7.233116,-5.716779,-6.630996,7.578307,-4.825358,8.176432,-4.800834,8.710150,-6.823688,3.678852,-9.351127,-7.991558,-1.029776,-6.112069,7.331405,8.720351,-2.370123,1.364261,-2.857889,-3.824837,9.056118,-1.561171,-1.569480,1.360932,7.736013,-1.959158,8.310727,-8.777037,8.881844,-3.811502,-5.458392,4.423581,3.213874,8.871513,1.686577,-2.827773,2.363003,2.830140,-5.582752,4.294938,2.658455,9.181426,-2.057631,5.306928,-8.991640,-8.103398,3.519064,2.968832,6.521377,6.729739,-7.939350,8.712944,-2.499577,1.470039,1.706386,-0.183942,0.795197,7.802499,-2.679849,5.421169,2.203995,1.193993,-1.419689,5.007480,0.325768,-4.595620,5.970594,4.234793,-1.259496,-0.127502,7.143565,7.591843,2.354368,-4.185159,2.962431,-6.348429,-0.817159,7.463182,6.500212,-2.800741,6.652366,-3.885252,-4.337914,7.614392,4.865368,1.894028,-7.633731,1.007598,6.467261,1.547310,0.474204,3.127746,6.877601,-9.438357,-5.692237,2.051340,-8.600835,-9.917996,-9.087613,4.963245,6.543441,-3.632075,1.616859,3.586908,-8.585530,4.796753,1.873338,8.753242,-0.049921,1.973112,-4.756116,-0.183677,-3.854922,2.434228,-7.881263,-7.638569,2.824990,-0.783893,-5.678228,-7.928180,-0.139913,2.635608,-1.367186,9.466997,-1.282572,9.734961,0.486191,4.942985,-5.597269,-3.249229,-6.760463,8.195088,-7.877983,-8.205500,2.574300,6.262888,9.451244,8.634602,1.528234,-8.418237,0.750653,-6.972061,6.530469,8.829708,-7.466983,3.269513,-7.055155,3.195526,-2.242577,-3.670917,-2.160345,0.839098,-9.011740,4.414283,6.936345,8.843520,-2.802348,-3.677677,-4.080585,2.422631,2.343324,5.717214,2.402213,-1.163647,-8.915551,-0.046022,-5.552446,-7.041679,-4.340505,-6.396798,7.899679,8.893844,0.096746,-5.156914,0.094571,0.459423,-5.947958,-8.663955,9.734617,5.637250,8.061104,-8.084415,3.549843,-9.217561,-4.608801,-5.388831,0.545192,9.155116,1.842414,-0.723465,-4.768836,5.540197,-8.251156,-6.991448,1.776459,3.078384,6.433788,-9.070908,4.251027,3.423096,-6.957666,0.104436,3.307270,-7.034619,-7.741015,0.145020,-5.752476,9.788663,-6.215316,-5.374183,6.345549,1.165139,6.925681,-2.776508,-6.529536,1.587246,5.738690,-7.934311,9.061526,6.807227,3.666560,-8.931546,0.392034,-5.660091,-3.555522,7.083969,8.092470,-2.412649,1.689341,5.064015,-9.801287,-3.451299,7.875314,-4.243392,6.549115,5.672516,-3.783728,8.023109,0.073304,-7.932736,-8.800971], dtype = "float64")#candidate|7507|(450,)|const|float64
call_7506 = relay.TupleGetItem(func_6564_call(relay.reshape(const_7507.astype('float64'), [15, 3, 10])), 0)
call_7508 = relay.TupleGetItem(func_6567_call(relay.reshape(const_7507.astype('float64'), [15, 3, 10])), 0)
output = relay.Tuple([call_7454,call_7506,const_7507,])
output2 = relay.Tuple([call_7455,call_7508,const_7507,])
func_7521 = relay.Function([], output)
mod['func_7521'] = func_7521
mod = relay.transform.InferType()(mod)
output = func_7521()
func_7522 = relay.Function([], output)
mutated_mod['func_7522'] = func_7522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6804_call = mod.get_global_var('func_6804')
func_6805_call = mutated_mod.get_global_var('func_6805')
call_7523 = relay.TupleGetItem(func_6804_call(), 0)
call_7524 = relay.TupleGetItem(func_6805_call(), 0)
func_4271_call = mod.get_global_var('func_4271')
func_4274_call = mutated_mod.get_global_var('func_4274')
const_7533 = relay.const([-0.092549,1.893648,4.310255,2.294021,6.658413,-2.509069,-0.795229,3.295894,-3.664415,9.712146,-4.649395,6.193072,9.478274,5.093886,5.507282,3.173667,-0.092969,3.320430,0.018500,9.522890,3.979582,-8.159056,-1.403138,8.808436,-4.709810,-7.787410,2.020544,-3.880143,8.445256,-0.721992,-7.354069,-9.017239,-7.460537,-0.906128,-3.468260,-9.244153,9.640557,-1.610654,-2.532044,-7.431496,-7.747125,-7.988883,0.952705,1.260460,-1.250467,3.989528,4.767795,-3.668881,0.190363,-8.202392,-2.289098,3.373348,7.850680,7.851590,1.910028,-9.636683,-4.519811,-8.314133,5.096515,-1.891940,1.568437,1.864909,-2.791714,-5.620861,-8.346452,0.955656,-6.314915,0.465747,-2.334376,3.995857,-1.083676,-1.755587,-9.384220,-4.303226,-5.373619,-4.703591,-0.229275,-4.973204,6.711074,-8.953507,1.969797,-2.800662,-8.889441,6.789705,-3.311589,1.131967,4.505980,8.812181,-7.077284,9.059632,-0.271030,-5.442673,2.737131,1.325052,0.719455,6.718189,-5.221896,-1.574865,5.297072,8.883944,7.346252,-3.341905,-4.023233,-9.236414,-2.722874,3.379916,2.473877,2.132220,6.068982,7.582343,5.677163,0.550449,-7.850202,-7.303999,-9.833218,2.487955,-2.848312,-4.559724,6.878107,6.157852,-8.410061,2.142911,-9.279980,1.056797,0.901827,8.287036,0.533652,-2.381890,-0.217310,1.294874,7.579310,-5.161626,-1.885998,-6.129896,-4.973041,8.828000,7.012348,-8.085680,-3.551239,7.502545,0.508518,-9.358302,1.864152,-0.160828,6.801688,-8.013782,6.323621,8.958933,5.784684,1.629917,2.641161,2.574550,1.394496,9.145344,1.918276,-2.833605,5.113079,5.345795,6.457446,-7.734104,3.961440,0.378505,-6.990270,-2.093435,2.193633,7.824393,9.063315,9.579862,-9.858395,-0.123416,3.940310,-0.369664,9.587325,7.524947,-3.087162,0.090839,7.306815,-9.548171,4.226979,6.461628,-2.802754,-5.314418,2.602848,9.090215,-6.524858,3.470265,-5.326044,-6.814194,2.716836,-9.611731,7.720223,8.549705,4.365270,-0.737769,0.334020,8.315868,-6.281260,7.766554,5.297867,-6.744198,-9.061687,1.078651,1.673544,-0.235510,9.582518,-5.792879,-3.481559,4.240799,5.604498,1.871012,-8.498082,7.953472,-3.075817,-3.401787,1.706647,8.033015,9.257602,-4.368623,-5.001627,8.020154,1.143280,-1.258431,-1.661536,9.402268,-4.048492,-4.482817,5.862056,1.035715,-3.324252,1.366762,-4.874098,9.614494,6.447928,2.401813,-3.038061,-1.176080,-1.341484,6.713771,-8.983632,8.974652,4.931464,1.763132,2.600993,-8.204499,4.515259,2.435914,-3.066438,2.576545,-5.809636,3.082347,0.964402,-6.644044,7.489037,-8.739946,1.316043,-3.352796,3.581895,8.627731,-7.246701,-8.233214,-4.444062,-1.216580,-0.593726,-9.490049,-5.997540,2.582513,9.258790,2.748958,-3.537104,4.708793,9.867169,-0.917990,7.990049,6.345481,-4.532433,8.499751,8.849869,2.388849,4.043740,-4.838561,-0.080108,-0.624016,-0.928034,-4.261807,3.917871,-1.701643,6.626639,-8.911618,-5.149334,-2.503211,4.749801,6.901987,2.839023,9.563228,9.664684,-1.332509,7.406888,5.406359,1.429884,-9.228338,9.101865,0.212244,-5.825666,-1.548860,-3.324881,9.599819,-7.063617,-2.012246,2.280819,5.915429,-7.380305,-2.556263,-5.486898,0.925551,1.945684,-3.724579,-4.897972,6.903920,5.051115,4.483433,7.514368,-7.051450,-5.346392,9.398781,-9.761437,-8.041448,1.045597,-2.725530,-4.694992,8.769205,-9.921050,5.129754,1.551761,7.409040,-6.654462,-3.928992,1.948425,9.005281,-1.264767,8.363936,7.048457,6.158633,4.611695,-9.394428,8.044307,1.843566,-0.490313,-0.074002,-1.150657,-5.068583,-0.913323,-7.339246,6.517325,3.797389,-7.965348,-9.777341,-2.041353,-1.457588,-8.091670,-9.089188,-3.671922,1.864242,-5.935526,2.542696,2.087842,8.337555,-0.465301,8.670219,2.909196,7.968387,2.317435,-6.654043,1.423624,3.846354,5.449849,3.362659,-2.047223,-3.089290,-9.952631,9.242883,-4.116013,-1.456659,-0.586046,-4.657069,-8.190855,9.743643,-0.511433,-3.439386,1.052635,1.474179,5.653733,-7.843865,7.255946,-0.895853,-1.224608,0.414383,-9.927445,-3.846126,5.760988,-3.339086,-1.734562,6.380663,3.239078,0.604631,-7.881105,-3.312767,4.904526,9.394402,2.533017,6.238509,5.790415,-0.233838,-0.906038,-6.962331,-7.077587,3.337790,-2.195989,5.179586,-8.161080,-7.407863,7.999254,-1.034449,-2.332596,3.494829,4.096402,2.932091,2.972712,-1.034344,-8.800377,9.363760,-4.664705,-8.973816,0.955639,-3.014599,-4.985925,-4.267777,8.697242,-2.543732,-1.437692,-3.082218,-7.546914,-2.805764,5.009426,1.176948,5.553935,-5.787057,-8.003777,3.632701,-8.968062,8.364799,-6.871597,-3.487712,6.543937,8.951892,-3.728334,8.568327,-8.673246,-2.207180,1.293208,9.406437,-8.450758,-6.598958,-8.762598,0.673634,0.779121,5.718286,-0.056060,-4.296595,9.801336,-2.187895,3.010933,-7.815198,7.316848,1.049329,0.866498,-0.564468,3.744239,-2.434883,-0.015676,-5.766574,-3.203514,8.690991,-6.803059,-7.337841,-5.392233,7.569413,5.744895,9.802956,6.639998,5.810936,5.791770,-8.888291,-9.388142,1.830415,-3.928608,-2.443642,1.109410,-2.340788,8.826851,7.209796,7.965594,0.067042,3.482721,6.318475,-2.761518,9.582570,-4.334044,-9.965833,-7.741974,3.642202,7.619269,9.048186,-6.077465,-8.224765,4.662643,0.374635,7.067704,5.174402,1.325339,5.070074,4.550426,5.669664,-9.430267,-9.763859,3.810958,-3.225006,7.938031,-5.975479,1.158762,-8.614367,-9.682135,7.771190,-8.997216,-2.327750,1.290456,7.484231,-7.716989,6.384782,-1.791303,2.419024,9.330116,4.770059,-0.663989,-6.740820,-0.647757,-1.784941,-6.925938,-4.687655,-7.044143,-4.693034,-5.573310,-1.304951,4.522085,-8.581888,6.177179,2.417142,8.810364,0.581876,-5.741299,8.552982,-6.409053,-4.577556,4.146476,-9.252857,1.646725,6.611231,-4.720026,2.167338,2.938713,-7.288208,8.359804,-7.634422,-8.399589,-6.184403,8.563737,9.197485,3.677258,4.394315,7.046474,-6.617086,-4.478092,-1.620501,1.890073,-8.384532,0.373767,5.845975,2.868938,6.428768,-1.783310,-5.729765,8.751240,4.250125,5.874100,6.532691,-9.271657,-9.974145,-5.815468,-7.069082,-1.401512,-1.049535,4.112510,-2.356025,8.190795,-5.223728,-8.602396,-7.557971,-9.634054,-3.795512,-8.472703,-2.316971,-1.357353,1.914604,-0.684724,-0.971624,0.423991,-7.505389,8.520299,3.330166,2.745957,-7.514088,-8.826503,2.830824,-0.788705,1.245682,-4.404370,-2.333355,-3.811636,1.142578,3.444222,8.087589,-4.360172,6.791299,-3.960712,8.359105,-5.977267,2.201405,-6.087894,7.370647,0.284200,9.018953,1.495337,-4.199083,3.028783,-5.440729,9.428791,9.208803,6.384529,9.274532,3.244795,5.970622,-6.862360,5.779132,-7.568906,-2.958603,9.101251,9.948312,2.948560,-4.978992,3.427837,6.422692,-0.391543,-6.300007,0.689976,7.178932,-9.491740,-2.651187,-5.801661,4.246832,-3.837152,-4.734098,0.168708,-7.025010,8.572807,-6.270389,8.919538,5.982469,-1.558504,-4.036970,-5.367817,6.954192,-7.048307,2.737535,9.149701,8.107718,-0.892213,3.494818,4.402740,-5.658583,-6.519114,8.815291,-3.629128,2.326172,0.304137,-8.605940,0.857615,-5.873435,3.797664,-9.776956,6.229781,7.995199,3.609281,2.766456,-4.581451,4.230319,-7.005592,9.258446,-5.042504,-6.541062,-6.084016,8.375494,-9.194444,4.941467,9.662721,-0.786174,-3.443042,2.813973,-9.706617,-3.040259,-7.831488,3.241346,4.777854,-5.159105,1.692354,9.057961,7.550472,3.457639,-6.054869,-8.557390,1.784846,-2.997722,-3.073985,3.835361,3.820010,3.738265,-5.200757,-0.472334,8.339861,1.093223,3.928165,-1.817049,0.436569,-3.858620,1.628368,2.077410,3.932500,-6.033703,7.567445,-4.648354,2.853568,8.326067,-3.988087,4.450535,-9.330697,-6.062194,3.287468,-2.032194,7.896390,8.625426,9.553335,6.541784,-8.762646,-2.134861,1.766875,-0.944272,4.116660,-8.336080,-3.355737,6.270798,-2.874003,-7.561386,3.834478,-6.324827,-1.246138,1.913080,8.389804,-0.370234,-0.549870,2.537568,-1.643195,-2.677496,9.957773,0.431597,9.249404,-7.158106,2.042922,2.552945,-9.276841,6.364941,7.843481,-9.920582,1.554070,4.973746,-3.446913,9.850915,-4.915548,-4.300414,6.538457,1.321564,-1.079734,-0.552556,3.279333,-5.077357,-3.010196,-2.553389,-6.269723,-6.349431,4.573125,4.066328,-9.219507,-8.535334,7.236036,3.141807,6.535612,2.600032,-5.530329,6.067929,4.231004,1.670089,9.938504,-0.410956,5.571859,1.492309,-0.632901,-5.376366,1.292144,7.461842,6.711498,6.104750,-7.383414,-4.166214,1.608267,-8.078195,-8.715886,-8.814035,7.054385,4.912046,5.378598,8.414920,-2.750223,-3.741460,1.953136,-3.255112,-6.715655,9.185714,-3.029591,-3.806982,8.443974,-8.492564,-6.204773,4.184889,3.925316,-9.350243,9.757647,-7.116840,2.573838,0.088595,4.678525,4.988490,-2.860739,-0.673139,5.017942,-3.582606,6.321630,-5.504118,6.734242,6.423417,-6.074406,2.386619,1.893706,1.098150,-0.525346,4.173342,-7.027709,-8.456820,2.095072,2.650052,9.745914,3.518087,4.187079,-7.492604,2.941983,1.931096,-5.091910,9.027497,9.634875,-3.856139,-3.195574,3.986611,2.377910,3.044099,-1.839509,6.624545,-9.818604,-6.600279,-2.934320,-0.258946,-9.789053,5.380762,-0.122680,-2.733789,-2.547838,4.153804,1.095271,1.458098,-5.495003,8.698240,-6.658227,-7.254726,-5.915212,-8.898825,-2.516670,-5.105258,-2.762364,4.367962,3.437745,-4.870382,-6.683376,-9.637429,-5.856286,-2.367635,-3.319988,2.435681,-8.250689,7.070773,-1.804210,4.795759,-4.596035,7.170486,-5.062445,2.032990,5.196650,2.797777,0.277767,2.515109,7.496750,6.756602,3.389185,-3.621756,-9.785280,-7.250687,5.729816,3.504534,-5.534179,0.795132,6.477099,-8.742493,-6.196789,9.717471,1.462211,-5.769427,-2.173876,-4.728414,-4.820895,-1.967116,-7.946543,-0.199594,-0.859475,6.595898,-0.960856,5.985267,6.056722,-9.529504,9.862141,8.058479,-4.745434,-7.683074,7.087911,9.944303,3.873865,0.385824,-7.963219,-0.725954,9.577400,0.657716,-8.636126,-4.224866,-5.092032,2.870686,-3.578608,-1.883838,-6.291881,2.726002,2.650679,-2.203179,-0.705005,-1.192141,4.871282,-5.900718,-4.930715,-5.345531,-1.305167,-0.129053,-8.625047,6.573003,7.565643,0.578144,-5.395396,3.462843,6.998765,-6.947159,1.878611,2.384496,2.398533,-6.310104,4.017942,-7.409699,2.327430,2.885257,5.543122,-2.795552,-4.734882,-3.582398,-6.233208,7.613453,1.026483,-0.069436,-0.519548,7.136112,3.595869,-1.911719,4.566129,-7.760639,4.201080,-6.826529,-2.048076,1.021759,-7.286109,2.119377,-6.204019,7.843869,5.577646,-0.463779,8.892632,2.162143,0.623426,6.764233,9.627782,9.264562,4.243872,2.450260,-1.847314,7.196580,-0.027582,-3.490793,5.819798,7.490240,0.609326,-2.827472,4.188597,5.079674,2.701840,5.895262,-2.688374,-2.819249,-6.238891,-3.994022], dtype = "float64")#candidate|7533|(1056,)|const|float64
var_7534 = relay.var("var_7534", dtype = "float32", shape = (220,))#candidate|7534|(220,)|var|float32
call_7532 = relay.TupleGetItem(func_4271_call(relay.reshape(const_7533.astype('float64'), [8, 132]), relay.reshape(var_7534.astype('float32'), [220, 1]), ), 7)
call_7535 = relay.TupleGetItem(func_4274_call(relay.reshape(const_7533.astype('float64'), [8, 132]), relay.reshape(var_7534.astype('float32'), [220, 1]), ), 7)
uop_7541 = relay.sqrt(call_7532.astype('float32')) # shape=(220, 1)
uop_7543 = relay.sqrt(call_7535.astype('float32')) # shape=(220, 1)
bop_7544 = relay.less(uop_7541.astype('bool'), relay.reshape(call_7532.astype('bool'), relay.shape_of(uop_7541))) # shape=(220, 1)
bop_7547 = relay.less(uop_7543.astype('bool'), relay.reshape(call_7535.astype('bool'), relay.shape_of(uop_7543))) # shape=(220, 1)
output = relay.Tuple([call_7523,const_7533,var_7534,bop_7544,])
output2 = relay.Tuple([call_7524,const_7533,var_7534,bop_7547,])
func_7549 = relay.Function([var_7534,], output)
mod['func_7549'] = func_7549
mod = relay.transform.InferType()(mod)
mutated_mod['func_7549'] = func_7549
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7550 = relay.var("var_7550", dtype = "float32", shape = (220,))#candidate|7550|(220,)|var|float32
func_7549_call = mutated_mod.get_global_var('func_7549')
call_7551 = func_7549_call(var_7550)
output = call_7551
func_7552 = relay.Function([var_7550], output)
mutated_mod['func_7552'] = func_7552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7521_call = mod.get_global_var('func_7521')
func_7522_call = mutated_mod.get_global_var('func_7522')
call_7574 = relay.TupleGetItem(func_7521_call(), 1)
call_7575 = relay.TupleGetItem(func_7522_call(), 1)
const_7576 = relay.const([[[-6.443805,9.103865,-0.319379,5.336947,-8.633208,0.757498,5.388512,-5.070506,6.260261,1.140910],[-5.810345,-2.996107,2.255253,7.847195,-4.716752,-4.931957,-2.753385,-4.775985,7.524546,8.542256],[6.351689,1.628112,-1.404268,-5.633887,9.421512,7.331800,-3.535462,3.696359,-6.460334,-7.863153]],[[5.849360,9.984219,-5.467354,-8.295012,3.993790,-6.893054,-2.159276,-2.814404,7.722484,-8.127623],[-9.342990,6.827146,-3.261441,5.344466,1.455548,8.804880,-3.827196,0.839819,-1.889433,-1.524164],[1.053375,5.036908,-4.747452,-4.304213,-8.381585,-4.090677,-8.897357,1.143057,-2.703589,6.305220]],[[1.177571,0.278040,9.667359,-0.961856,-5.715426,-2.320108,4.153203,-7.692028,3.354030,-3.839911],[4.096991,-8.861274,-8.572862,-1.657169,-6.151113,-2.223122,1.894003,3.367917,-1.467615,-7.218739],[-2.007186,-0.626183,-5.926444,5.638690,3.914231,-2.550420,5.351051,4.196760,-5.022610,-4.561142]],[[9.914958,-7.903502,-0.670377,-8.029353,-7.008966,-5.932654,2.418575,-3.574946,9.792663,6.820023],[9.179312,5.503680,-3.416156,-9.695056,2.230768,-4.210593,-7.347553,4.297097,-2.758796,7.191807],[-9.823587,-3.547228,1.867225,-6.098652,-4.736635,9.350376,3.310676,-4.322655,3.302583,-5.039835]],[[-8.843101,-2.698157,-8.190428,9.477087,8.420442,6.229112,-3.956029,0.756240,-2.091242,-2.453633],[7.552979,6.551917,4.206743,-3.126560,-3.275469,4.839837,0.884206,3.501946,1.548985,4.514161],[-7.664800,-8.783050,-7.092457,-8.986627,9.112886,9.242343,-3.402652,4.893367,5.057920,6.659325]],[[1.283293,-4.533657,-7.172619,-0.873633,-7.492625,-0.382742,-4.177746,-7.172887,-0.031814,4.205945],[0.527381,-6.417235,8.007695,7.190659,5.221266,9.834972,3.712302,-7.856718,1.104766,1.591779],[-9.360728,-5.515001,2.171272,0.302608,6.326925,4.845214,8.235498,3.488178,-8.804301,8.640791]],[[2.156033,-9.336380,-4.328469,-5.662427,0.938854,-3.935704,2.648970,-1.614600,7.881581,-6.697171],[-0.334444,9.068828,6.731279,1.378239,-9.329329,3.603935,7.094872,-2.291188,-0.762925,4.178714],[6.428483,1.079463,1.054352,3.284619,3.656933,1.313798,4.773056,-4.164873,8.376908,-6.896066]],[[-7.525106,6.159801,1.927459,-6.521282,-6.464938,9.224539,2.344823,-1.451900,-9.298420,0.091842],[8.746724,-6.866476,6.096255,3.240963,-3.313961,-0.425236,-9.943778,-5.025970,-8.262062,3.617249],[-6.991155,-5.194359,-8.810357,-9.532159,-4.747930,-4.986850,2.329060,-3.398804,5.133350,9.313835]],[[-8.948461,5.059177,-2.465283,-4.402857,-2.982754,0.093578,0.445559,-2.606169,9.003407,-0.231540],[-4.782033,2.547241,8.672458,-4.015693,-0.201132,-5.312564,-2.485906,3.190477,0.025623,7.345296],[5.375727,4.062090,-4.823596,-3.615268,-0.790861,3.391146,-2.014101,-3.278439,-9.089142,-6.504443]],[[5.611413,0.467335,-5.330593,-5.486218,1.948440,0.313416,-6.239971,4.702155,-7.525412,-8.724711],[-6.067993,1.319081,0.819620,3.270198,0.852195,-4.734050,-8.678259,-4.276436,-9.391157,0.594431],[-6.591110,-5.944689,6.275748,1.301037,-9.044579,-0.455195,7.543121,3.672595,-3.822985,-1.865619]],[[-1.684177,-6.458847,4.973708,-9.603059,8.080687,5.050857,-6.266021,-8.206898,7.159760,-4.469264],[-5.511992,-2.213432,-1.051623,-9.885875,-2.457447,-4.834433,9.930354,-5.461458,8.293060,-6.775536],[-4.693831,-7.443025,9.255307,-3.856220,-8.081343,-5.443145,8.807330,-7.843109,-3.016995,-2.279602]],[[-6.285645,-3.490430,6.435554,-7.534952,1.388501,2.830867,-3.194386,-4.588057,8.237239,-2.809943],[2.166657,-5.837904,2.018272,8.099951,1.351817,4.425846,-3.473789,3.418003,-7.930127,6.375465],[-4.967247,2.253544,-7.652882,-5.075084,-7.249053,-6.933372,-1.312675,-4.807176,3.026396,1.903383]],[[-3.921957,-1.478274,-2.251758,-2.470114,0.579021,-5.715414,9.699086,-5.307325,-0.607914,7.854271],[5.338589,-5.324420,-8.376958,-7.503373,-8.945631,-8.503245,-4.533591,-7.095450,-6.069047,1.877872],[-9.241020,7.986678,6.779845,4.511833,-6.816869,-2.857972,-8.623714,0.820896,2.941755,5.174874]],[[-4.697077,-9.483995,-9.959277,3.133080,-6.464367,3.942975,6.412392,-9.124128,-7.930392,-0.070558],[-4.321357,0.558884,2.049158,7.765222,-3.533804,6.982830,-4.686047,7.461389,-3.454596,1.972191],[9.626733,2.182998,0.028145,0.419276,1.154715,-4.443621,-2.158882,4.654142,7.391352,-1.034463]],[[8.163171,-5.828034,-1.821799,-3.880407,-6.129370,8.426406,-4.742042,-6.506298,-8.581677,-8.071696],[2.055387,6.677560,-1.806907,-3.497251,1.543815,3.595282,-0.824157,-9.768933,6.436046,7.614908],[-7.034052,6.797457,6.775688,-0.246681,3.571187,8.640185,4.104111,-3.919321,6.951628,1.125833]]], dtype = "float64")#candidate|7576|(15, 3, 10)|const|float64
bop_7577 = relay.bitwise_and(call_7574.astype('uint32'), relay.reshape(const_7576.astype('uint32'), relay.shape_of(call_7574))) # shape=(15, 3, 10)
bop_7580 = relay.bitwise_and(call_7575.astype('uint32'), relay.reshape(const_7576.astype('uint32'), relay.shape_of(call_7575))) # shape=(15, 3, 10)
func_7395_call = mod.get_global_var('func_7395')
func_7397_call = mutated_mod.get_global_var('func_7397')
var_7586 = relay.var("var_7586", dtype = "float64", shape = (364,))#candidate|7586|(364,)|var|float64
call_7585 = relay.TupleGetItem(func_7395_call(relay.reshape(var_7586.astype('float64'), [7, 13, 4])), 0)
call_7587 = relay.TupleGetItem(func_7397_call(relay.reshape(var_7586.astype('float64'), [7, 13, 4])), 0)
output = relay.Tuple([bop_7577,call_7585,var_7586,])
output2 = relay.Tuple([bop_7580,call_7587,var_7586,])
func_7593 = relay.Function([var_7586,], output)
mod['func_7593'] = func_7593
mod = relay.transform.InferType()(mod)
mutated_mod['func_7593'] = func_7593
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7594 = relay.var("var_7594", dtype = "float64", shape = (364,))#candidate|7594|(364,)|var|float64
func_7593_call = mutated_mod.get_global_var('func_7593')
call_7595 = func_7593_call(var_7594)
output = call_7595
func_7596 = relay.Function([var_7594], output)
mutated_mod['func_7596'] = func_7596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7521_call = mod.get_global_var('func_7521')
func_7522_call = mutated_mod.get_global_var('func_7522')
call_7610 = relay.TupleGetItem(func_7521_call(), 2)
call_7611 = relay.TupleGetItem(func_7522_call(), 2)
output = relay.Tuple([call_7610,])
output2 = relay.Tuple([call_7611,])
func_7619 = relay.Function([], output)
mod['func_7619'] = func_7619
mod = relay.transform.InferType()(mod)
output = func_7619()
func_7620 = relay.Function([], output)
mutated_mod['func_7620'] = func_7620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7430_call = mod.get_global_var('func_7430')
func_7431_call = mutated_mod.get_global_var('func_7431')
call_7627 = relay.TupleGetItem(func_7430_call(), 0)
call_7628 = relay.TupleGetItem(func_7431_call(), 0)
const_7659 = relay.const([[[1.970185],[-0.030404],[-2.518444],[3.495132],[4.796116],[9.019203],[-2.913819],[3.520193],[2.802297],[2.742883],[2.812307],[8.128717],[-5.666439],[-3.904662],[-8.388583]],[[-2.931981],[-9.867313],[5.845096],[0.019197],[-5.896102],[-4.426889],[3.972682],[6.085590],[-9.436677],[-5.828823],[2.767307],[3.693240],[-2.415800],[3.351099],[3.035122]],[[-0.620445],[9.867353],[-1.345370],[-0.417163],[-4.771279],[-0.079990],[-0.125402],[1.790661],[-1.120817],[6.706054],[2.087205],[0.439235],[3.908198],[-2.950166],[-4.074291]],[[-5.975743],[4.077658],[9.358628],[-8.705162],[1.401390],[9.115430],[-7.616764],[-0.874046],[5.364599],[2.199144],[3.293849],[-5.742127],[7.697647],[-8.010023],[-1.321537]],[[9.918253],[-6.687337],[-8.458457],[-2.152371],[4.833612],[1.645619],[3.276760],[-2.741840],[5.585412],[-9.607050],[-7.268543],[2.969004],[-8.598350],[-2.074872],[-4.996642]],[[9.114637],[-5.311480],[-6.958385],[-5.357815],[5.682012],[4.556813],[-9.842512],[-2.915479],[-0.467621],[-3.411642],[-1.074853],[-2.360768],[2.622268],[-9.737555],[-2.700234]]], dtype = "float64")#candidate|7659|(6, 15, 1)|const|float64
bop_7660 = relay.minimum(call_7627.astype('float64'), relay.reshape(const_7659.astype('float64'), relay.shape_of(call_7627))) # shape=(6, 15, 1)
bop_7663 = relay.minimum(call_7628.astype('float64'), relay.reshape(const_7659.astype('float64'), relay.shape_of(call_7628))) # shape=(6, 15, 1)
output = bop_7660
output2 = bop_7663
func_7664 = relay.Function([], output)
mod['func_7664'] = func_7664
mod = relay.transform.InferType()(mod)
output = func_7664()
func_7665 = relay.Function([], output)
mutated_mod['func_7665'] = func_7665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7521_call = mod.get_global_var('func_7521')
func_7522_call = mutated_mod.get_global_var('func_7522')
call_7684 = relay.TupleGetItem(func_7521_call(), 1)
call_7685 = relay.TupleGetItem(func_7522_call(), 1)
output = relay.Tuple([call_7684,])
output2 = relay.Tuple([call_7685,])
func_7687 = relay.Function([], output)
mod['func_7687'] = func_7687
mod = relay.transform.InferType()(mod)
mutated_mod['func_7687'] = func_7687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7687_call = mutated_mod.get_global_var('func_7687')
call_7688 = func_7687_call()
output = call_7688
func_7689 = relay.Function([], output)
mutated_mod['func_7689'] = func_7689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7664_call = mod.get_global_var('func_7664')
func_7665_call = mutated_mod.get_global_var('func_7665')
call_7735 = func_7664_call()
call_7736 = func_7664_call()
const_7737 = relay.const([[[0.221297,3.113666,-7.285692,8.261891,5.411888,9.948709,9.449922],[-0.662241,2.728388,3.398389,-3.284960,2.096197,-1.109136,-7.277276],[-7.339809,-8.420901,-9.202506,-7.591056,7.936495,4.029605,9.961743],[5.715338,6.648405,-0.573379,-9.468764,7.460776,-5.362862,-5.517962],[-2.782800,7.851426,-2.401463,-3.801450,7.480651,9.579545,9.322280],[8.598088,-4.414534,0.820021,-9.253823,-2.665037,0.625792,-9.876787],[-2.923063,8.608882,5.744707,2.567472,-1.483220,-2.432862,-7.662611],[-1.813242,2.545649,-4.832815,-6.148221,9.019885,-6.076341,5.899961],[0.725603,1.891857,7.323790,2.981174,0.645451,-4.368913,-9.996343],[2.287586,0.845433,-3.309596,-0.189830,-8.317965,-5.037398,5.833014],[0.325168,3.638562,-3.829729,3.253401,3.823430,0.438467,8.721128],[-2.735063,-7.282235,5.477894,-8.859145,-7.343789,-4.628078,2.902323],[-8.865306,7.443808,-5.502241,4.330476,-6.539724,-5.688907,1.992617],[-5.293002,1.049178,-2.738050,2.367076,3.142298,-6.334547,-7.641492],[-9.267046,7.835588,-7.327706,4.624510,8.202454,-3.717727,9.396676]],[[0.783331,-7.211739,1.221549,9.779984,1.837997,4.238781,-1.927833],[8.694560,7.595279,-4.217391,-3.157993,7.089394,0.656459,-0.371102],[-5.410303,-3.104975,-6.776109,-3.553530,4.732187,-3.007836,-5.889104],[0.378625,6.584840,8.575223,0.065385,3.760338,-8.019289,7.917247],[-6.783573,7.784460,6.329115,-9.413640,-9.429568,3.571517,-2.245250],[7.497955,-3.286495,4.593806,3.922163,-2.303055,3.423034,-7.596297],[-8.808122,4.692335,-2.757566,-8.378060,0.969649,5.256794,0.872987],[6.126622,-5.191942,-7.077320,6.818148,-0.594493,-1.592700,3.629540],[8.761080,9.402256,7.431584,-2.687870,-4.425174,5.799779,0.994382],[9.328723,-9.760695,0.752598,6.662540,6.249080,4.917630,3.600577],[-7.511403,6.820181,3.294648,9.004941,-2.154222,-2.171353,-0.972997],[-1.382926,-1.060667,-2.592206,-1.728919,-4.055877,1.050008,-9.819188],[2.085237,-1.730339,9.751814,7.223922,1.005375,2.028037,-1.611171],[-7.344101,-3.167749,6.655227,-4.424704,8.882158,7.296378,9.229846],[2.806115,5.800547,5.490806,-3.360396,-6.378907,3.737834,-0.982228]],[[4.213303,-7.859306,-4.667796,-6.590142,-1.890811,0.581680,4.864431],[2.601503,-7.567911,-2.136270,9.129157,0.854299,-9.775726,-8.401104],[4.697047,0.930844,6.924248,-7.339102,-3.329173,5.792602,-8.539677],[-6.869750,3.211973,-5.484952,-1.291082,-1.849086,-2.628969,8.841904],[4.437554,8.180377,-1.335574,5.119849,-2.433306,9.836368,-6.370078],[4.721660,-2.298372,-5.717551,1.726719,9.487319,4.533939,-0.853184],[0.477260,9.258904,2.761337,-7.099491,2.407264,3.772473,4.009471],[-8.624245,-3.761068,-7.690368,3.377058,-0.127894,7.394974,-5.540193],[3.327696,6.512249,-6.037719,6.387247,4.536351,2.386556,2.938173],[-3.482867,-6.518449,-6.903071,2.802433,7.033274,0.709206,4.439001],[2.518342,-0.014652,-0.284614,3.824534,-9.939699,-3.196223,-4.253060],[-3.054800,5.636723,8.265195,3.872273,-4.119172,-8.740138,6.347880],[3.175450,1.041327,-5.295077,-6.687314,4.391116,6.882918,-5.600156],[5.006801,2.498357,0.190713,-2.561010,-7.408208,-2.253608,-3.069834],[-3.267228,6.718678,9.191063,-7.020140,-3.359170,-7.569834,2.317957]],[[7.228169,-2.972781,-1.203184,-9.713080,-3.593960,-4.151563,-5.383176],[5.048139,-4.363248,-8.740381,2.561337,-0.634359,3.412484,-2.200237],[-4.253295,0.746002,-5.877168,-8.782635,6.188674,-8.383323,4.747450],[9.299470,1.491395,8.316888,-2.754132,5.890006,5.022316,-6.990374],[-1.237406,-6.645557,-3.444392,-1.810562,5.107066,1.873649,8.017913],[-2.242176,3.807903,-3.576101,-1.734265,-5.702166,1.218358,3.975262],[4.787153,3.122683,-2.455184,-9.060444,3.817823,1.976754,6.364273],[-5.794660,-8.843236,9.924285,-5.384518,6.987556,8.045973,7.461330],[9.754560,0.362172,-9.275446,7.912784,6.390339,6.836628,-9.750474],[4.060324,-2.627118,4.916995,8.482938,-6.213072,-1.323188,-7.495443],[2.974211,2.168556,-1.298287,8.019035,6.332395,-0.412987,-9.169397],[-0.804281,-1.992433,-6.676369,2.095707,-1.845945,-7.992665,-7.700446],[-3.045184,8.924878,-1.682483,-4.862737,7.351820,-5.968733,-1.880126],[0.500727,-1.891044,-9.049899,-9.219205,1.011832,-0.163682,-1.098362],[-8.331521,0.448911,6.869178,-3.889017,7.406729,9.251748,-9.602152]],[[-6.038559,-8.043439,0.852002,8.866128,9.722187,-0.452467,1.733721],[-5.623200,-4.908430,-9.721418,3.900155,-9.046161,3.291941,1.108658],[-0.093761,-1.350760,-0.369807,3.093941,-7.413229,6.156887,-0.456171],[-6.197808,-3.731092,5.425701,-5.711630,1.744580,2.574048,2.920463],[4.270901,3.568827,5.566479,-6.704603,-4.138729,0.281924,-7.707328],[4.679842,8.471209,-8.868196,-9.070066,-2.321825,5.769993,6.769889],[8.587788,-4.072612,9.084274,-6.215637,8.701397,-3.592863,-7.154223],[-4.290372,6.159130,4.614435,-5.643168,-8.787839,8.077847,3.876406],[-8.462359,-5.169947,0.649088,8.028159,-2.830571,3.934890,-6.295623],[-1.823937,-9.358055,-5.719216,-9.556909,-8.094457,3.438831,0.069733],[5.992328,-0.465173,0.188190,6.962627,9.092433,6.304100,-9.174631],[2.870014,3.866461,-9.057215,3.283346,6.913311,-6.439380,-2.888140],[-6.690929,9.671041,-9.797675,-1.650579,-3.620508,-6.273294,-9.252367],[2.717682,6.649526,2.349988,-6.858314,-9.738386,-0.439866,2.850651],[4.549526,8.633683,-7.991602,8.109262,-3.581379,-3.949097,0.261706]],[[-9.889555,1.891213,-0.454157,-7.610895,8.991160,2.500634,-2.499556],[3.856892,7.535298,3.042718,-1.502674,1.536241,-4.011289,2.338799],[-1.001500,-8.096789,-6.250441,-9.392162,-4.650826,0.652818,-1.574595],[2.077986,-7.383129,-9.302117,5.948404,-1.634310,2.953889,9.557401],[5.627765,5.163420,6.547308,-2.788921,8.380195,-4.680866,-2.146886],[1.388011,7.933506,2.401384,6.495924,8.108814,-6.085214,-8.195697],[9.811544,3.224056,4.833917,-3.212389,-6.144736,-9.771752,6.108451],[9.139205,-1.151297,-5.825719,6.290496,-9.375021,-4.271506,4.302429],[7.118711,-6.600216,3.363223,-4.013638,-8.649218,4.205906,4.747332],[-7.727670,0.514137,-2.325500,-1.483767,3.031966,8.408802,-9.529901],[5.357645,-4.243700,-6.285571,6.354624,-5.610145,-8.472828,-3.585833],[-8.449767,3.944726,-2.372387,-4.332643,8.632133,-8.347737,2.712545],[-5.736635,6.649665,2.113451,-1.042802,-0.388830,-9.689735,7.441199],[-3.214031,-3.896486,-0.618717,8.038952,-2.702010,6.224043,4.054206],[-4.502390,6.088287,-3.925167,-3.138086,-1.399744,5.701979,-6.090004]]], dtype = "float64")#candidate|7737|(6, 15, 7)|const|float64
bop_7738 = relay.floor_divide(call_7735.astype('float64'), const_7737.astype('float64')) # shape=(6, 15, 7)
bop_7741 = relay.floor_divide(call_7736.astype('float64'), const_7737.astype('float64')) # shape=(6, 15, 7)
func_7664_call = mod.get_global_var('func_7664')
func_7665_call = mutated_mod.get_global_var('func_7665')
call_7746 = func_7664_call()
call_7747 = func_7664_call()
uop_7749 = relay.asin(call_7746.astype('float32')) # shape=(6, 15, 1)
uop_7751 = relay.asin(call_7747.astype('float32')) # shape=(6, 15, 1)
bop_7756 = relay.logical_and(uop_7749.astype('bool'), relay.reshape(call_7735.astype('bool'), relay.shape_of(uop_7749))) # shape=(6, 15, 1)
bop_7759 = relay.logical_and(uop_7751.astype('bool'), relay.reshape(call_7736.astype('bool'), relay.shape_of(uop_7751))) # shape=(6, 15, 1)
func_1755_call = mod.get_global_var('func_1755')
func_1759_call = mutated_mod.get_global_var('func_1759')
const_7761 = relay.const([6.286462,-9.175044,-1.085399,1.009723,2.507748,-9.749286,-7.473451,-7.542959,4.964798,-1.953471,-0.513812,1.876724,-7.371620,0.022285,-4.839625,5.861414,-4.012938,1.296874,6.693913,2.049592,0.378218,1.705325,-3.856815,0.124348,-0.920269,8.127571,1.596812,4.510559,-7.593461,2.246381,9.231114,-9.994474,-8.083294,8.753662,-7.457612,-1.797630,-1.777654,-8.944065,0.557913,-4.839695,4.611532,-1.625196,-1.923262,-3.542277,-4.667158,9.365246,2.120527,-4.421580,-1.133253,8.334934,-1.296374,-5.088364,-2.302035,-0.494981,7.346506,4.416389,-3.988707,2.506645,1.736759,8.915965,3.031262,-6.118363,7.454875,5.694548,-8.938496,-7.904670,-6.312469,4.988266,2.268892,2.548363,-7.283173,6.948876,-3.103499,4.723647,2.057486,-3.286649,-8.827997,5.963778,1.911705,0.128740,7.985415,-6.787733,-3.089724,-8.569598,2.122948,-4.082667,-6.661964,9.964909,-1.279071,7.974549,3.418296,7.485460,-5.305122,9.226277,4.239339,8.173146,9.374479,-0.540596,2.118106,0.340845,-4.772719,-1.552855,-8.985189,-6.917606,-1.876778,-5.894985,4.174536,9.422084,-8.863314,7.479541,2.402814,-0.652366,-3.592917,5.994051,-2.700861,8.246670,-8.302954,5.492628,9.239861,-1.196858,6.854015,5.837885,-3.124152,-5.712304,-9.442994,-8.768138,-4.303115,-5.977875,1.781237,-3.172103,-7.543724,7.611081,3.747466,8.084514,-1.639036,5.629984,-6.425778,-5.441660,3.089881,6.805658,-6.435349,-2.887106,8.420183,7.551612,-1.572077,-1.665858,5.831677,2.566860,-2.486738,2.095270,-4.859756,6.783951,-8.082693,2.446847,-8.623005,1.472940,-6.601310,-2.866829,-1.412995,3.806728,6.447923,9.765769,9.541252,-4.611890,-8.535484,-0.488835,-4.972143,6.050348,4.532451,-4.183213,-1.220257,-6.240187,7.458715,-1.450834,-6.816776,-2.149713,9.941525,4.325475,3.672185,-8.983792,9.333152,-6.039302,-3.983364,-1.748302,3.208643,-6.422651,-7.535103,-5.500614,2.119486,1.522151,-6.529984,7.404081,-9.848827,-6.126035,-7.386364,7.132691,7.506145,4.270748,7.125448,9.816303,2.337388,-9.743416,-2.866218,6.153040,5.914931,-9.269509,4.137163,9.105519,-4.403115,4.193792,2.489475,-5.274830,-3.469497,-1.364636,-4.696250,-3.658285,8.135129,5.383320,-5.305647,5.881983,-3.322975,8.459139,-6.255345,8.316822,8.330207,4.575133,4.395737,2.901510,-5.511029,8.954117,-8.363838,-6.080324,3.055419,0.168137,-9.410753,1.791095,-0.712243,-9.299715,-5.488813,6.931007,-0.102511,-7.979908,1.049790,-0.108537,0.999108,-2.116372,2.155168,-9.237226,-2.510382,-6.386866,-9.305666,1.467122,9.709899,1.600977,3.122788,5.913863,-9.448657,8.938784,8.577777,6.903943,-0.925629,-0.391048,-1.444169,-3.814648,5.662263,5.776033,-3.578301,-9.367254,5.318011,0.395652,1.223914,-1.925480,-5.180413,7.012085,6.627484,5.795254,-1.301218,-1.630701,-6.918024,4.156267,7.629322,2.508632,-9.028925,2.148259,-6.800111,-5.529887,0.960970,1.812087,1.587353,-8.987753,0.888030,-2.424557,7.700270,-5.761205,3.630390,7.361772,-0.087066,-6.331138,8.184823,-4.968661,8.674016,0.808725,-7.270174,-0.864457,6.339795,-8.548172,-8.696598,-8.441392,8.317308,0.421709,-6.501031,-7.191184,-0.067033,0.754254,-4.326715,7.754274,7.875197,4.576376,6.627774,8.276773,-7.039082,1.018994,-4.006861,-5.788610,-3.859058,-7.647714,6.211932,1.305365,8.964164,4.624140,9.768971,5.746256,2.474553,-5.810358,1.494840,2.732090,4.799773,-4.224395,-7.570553,-3.762116,3.902823,8.875968,3.841250,-9.272623,-3.831892,-4.786615,-7.031666,-6.097747,-4.555212,-2.972772,-0.146763,2.603284,-7.213085,6.916312,0.919691,1.482103,-3.071106,6.913007,6.064558,-6.459728,1.959268,8.717206,7.698126,4.769471,-7.649328,8.315876,7.868370,0.146148,-7.919781,-9.350635,-5.355519,-5.838295,-9.524114,-9.673635,7.948602,9.883538,0.265329,-5.923890,-1.968276,6.343086,2.776933,3.568214,7.348834,-5.909349,5.664927,0.304681,-0.571098,-6.125742,0.069267,8.695604,-2.177046,2.682252,6.959361,-6.304207,7.205009,8.331181,-2.728493,7.952544,3.262070,7.701410,-3.845002,-1.094736,0.809301,-9.105987,7.092371,8.153735,-3.027256,8.171966,7.638773,-9.627890,2.597063,4.805609,-0.481658,-5.082323,4.113728,7.316484,-2.859985,-0.153989,-1.554964,7.841636,-0.591955,5.341026,9.110964,7.151502,-1.545184,-8.778105,7.122952,5.470269,-6.801482,6.936521,-0.880176,-4.964931,-9.583008,-8.825187,2.085843,-4.531749,-2.275601,-6.072759,-0.168602,-1.973452,2.272786,6.090801,3.959579,4.851554,-2.002030,7.953811,0.078520,2.232492,-2.226842,-0.522879,2.750557,-4.486425,2.743839,-1.783402,-9.215072,-1.138056,2.212967,-0.793142,4.069152,-3.109234,-5.958998,-5.194559,5.628012,3.417491,0.835849,1.622134,-5.067204,-4.192772,9.427264,7.165219,-5.414720,1.307644,1.932317,-7.641150,0.069493,-1.327704,-8.149984,1.472395,7.064255,2.296261,3.507677,9.792007,-4.615111,9.720347,-3.782897,6.006291,-6.698700,-6.588706,-0.958230,-3.802141,-7.419878,9.900755,3.242362,-5.044964,2.294811,9.779555,0.297359,-2.717947,4.941924,3.044297,4.439040,-6.608589,4.637715,4.401510,5.632947,-1.330534,4.256684,-3.819681,-8.978914,8.502303,-3.132586,-2.287726,6.434210,-6.591544,-1.785650,9.590029,-5.030525,-8.724466,-0.438990,-6.035903,8.204568,9.693214,-7.517842,-6.898026,3.063429,0.915757,-5.333660,1.212151,-9.006915,-8.886977,4.200988,-4.604300,2.640449,1.548525,0.256867,4.156118,-3.015561,6.247427,-1.114190,-9.904551,4.288364,-6.778764,9.233462,1.461119,5.053484,0.947077,9.385492,-3.771218,-5.454734,4.749300,9.652790,-6.811077,2.798120,9.060286,6.317611,4.300264,9.171531,4.760849,4.199808,-6.291251,-8.856325,4.722407,-3.055654,1.480759,-8.068338,-0.849234,3.303214,0.180784,-4.776406,6.392205,-9.166696,-9.833082,-1.972672,9.427294,-5.702673,-2.259779,4.541914,2.391186,9.685275,-2.993545,3.235349,-3.063222,9.094742,4.031662,-7.282204,-2.596217,-2.595930,-8.539559,-1.246319,-1.087570,0.940918,8.936829,0.706493,-0.679059,2.981987,-1.868910,3.348389,-6.817396,-1.045137,-1.529045,-8.475876,-2.006281,3.459598,2.620172,-3.784002,4.191154,-6.886646,-1.765607,1.800223,-8.197555,7.424680,6.795511,5.510234,1.835615,2.445935,-8.104281], dtype = "float32")#candidate|7761|(616,)|const|float32
call_7760 = relay.TupleGetItem(func_1755_call(relay.reshape(const_7761.astype('float32'), [8, 11, 7]), relay.reshape(const_7761.astype('float32'), [8, 11, 7]), ), 0)
call_7762 = relay.TupleGetItem(func_1759_call(relay.reshape(const_7761.astype('float32'), [8, 11, 7]), relay.reshape(const_7761.astype('float32'), [8, 11, 7]), ), 0)
bop_7766 = relay.bitwise_and(uop_7749.astype('uint16'), bop_7738.astype('uint16')) # shape=(6, 15, 7)
bop_7769 = relay.bitwise_and(uop_7751.astype('uint16'), bop_7741.astype('uint16')) # shape=(6, 15, 7)
bop_7770 = relay.power(bop_7756.astype('float32'), bop_7766.astype('float32')) # shape=(6, 15, 7)
bop_7773 = relay.power(bop_7759.astype('float32'), bop_7769.astype('float32')) # shape=(6, 15, 7)
output = relay.Tuple([call_7760,const_7761,bop_7770,])
output2 = relay.Tuple([call_7762,const_7761,bop_7773,])
func_7776 = relay.Function([], output)
mod['func_7776'] = func_7776
mod = relay.transform.InferType()(mod)
mutated_mod['func_7776'] = func_7776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7776_call = mutated_mod.get_global_var('func_7776')
call_7777 = func_7776_call()
output = call_7777
func_7778 = relay.Function([], output)
mutated_mod['func_7778'] = func_7778
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7815 = relay.var("var_7815", dtype = "float64", shape = (1, 12, 16))#candidate|7815|(1, 12, 16)|var|float64
var_7816 = relay.var("var_7816", dtype = "float64", shape = (9, 12, 16))#candidate|7816|(9, 12, 16)|var|float64
bop_7817 = relay.floor_divide(var_7815.astype('float64'), var_7816.astype('float64')) # shape=(9, 12, 16)
bop_7826 = relay.mod(var_7815.astype('float32'), var_7816.astype('float32')) # shape=(9, 12, 16)
uop_7830 = relay.asinh(bop_7817.astype('float32')) # shape=(9, 12, 16)
bop_7833 = relay.less(bop_7817.astype('bool'), relay.reshape(var_7816.astype('bool'), relay.shape_of(bop_7817))) # shape=(9, 12, 16)
output = relay.Tuple([bop_7826,uop_7830,bop_7833,])
output2 = relay.Tuple([bop_7826,uop_7830,bop_7833,])
F = relay.Function([var_7815,var_7816,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7815,var_7816,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

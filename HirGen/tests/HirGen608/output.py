import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_22 = relay.var("var_22", dtype = "float32", shape = (6, 10, 1))#candidate|22|(6, 10, 1)|var|float32
uop_23 = relay.tan(var_22.astype('float32')) # shape=(6, 10, 1)
bop_30 = relay.subtract(var_22.astype('uint64'), relay.reshape(uop_23.astype('uint64'), relay.shape_of(var_22))) # shape=(6, 10, 1)
bop_42 = relay.left_shift(bop_30.astype('uint8'), relay.reshape(uop_23.astype('uint8'), relay.shape_of(bop_30))) # shape=(6, 10, 1)
output = relay.Tuple([bop_42,])
output2 = relay.Tuple([bop_42,])
func_46 = relay.Function([var_22,], output)
mod['func_46'] = func_46
mod = relay.transform.InferType()(mod)
var_47 = relay.var("var_47", dtype = "float32", shape = (6, 10, 1))#candidate|47|(6, 10, 1)|var|float32
output = func_46(var_47)
func_48 = relay.Function([var_47], output)
mutated_mod['func_48'] = func_48
mutated_mod = relay.transform.InferType()(mutated_mod)
var_419 = relay.var("var_419", dtype = "bool", shape = (8, 2, 5))#candidate|419|(8, 2, 5)|var|bool
var_420 = relay.var("var_420", dtype = "bool", shape = (8, 2, 5))#candidate|420|(8, 2, 5)|var|bool
bop_421 = relay.logical_or(var_419.astype('bool'), relay.reshape(var_420.astype('bool'), relay.shape_of(var_419))) # shape=(8, 2, 5)
func_46_call = mod.get_global_var('func_46')
func_48_call = mutated_mod.get_global_var('func_48')
var_434 = relay.var("var_434", dtype = "float32", shape = (15, 4))#candidate|434|(15, 4)|var|float32
call_433 = relay.TupleGetItem(func_46_call(relay.reshape(var_434.astype('float32'), [6, 10, 1])), 0)
call_435 = relay.TupleGetItem(func_48_call(relay.reshape(var_434.astype('float32'), [6, 10, 1])), 0)
output = relay.Tuple([bop_421,call_433,var_434,])
output2 = relay.Tuple([bop_421,call_435,var_434,])
func_436 = relay.Function([var_419,var_420,var_434,], output)
mod['func_436'] = func_436
mod = relay.transform.InferType()(mod)
var_437 = relay.var("var_437", dtype = "bool", shape = (8, 2, 5))#candidate|437|(8, 2, 5)|var|bool
var_438 = relay.var("var_438", dtype = "bool", shape = (8, 2, 5))#candidate|438|(8, 2, 5)|var|bool
var_439 = relay.var("var_439", dtype = "float32", shape = (15, 4))#candidate|439|(15, 4)|var|float32
output = func_436(var_437,var_438,var_439,)
func_440 = relay.Function([var_437,var_438,var_439,], output)
mutated_mod['func_440'] = func_440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_632 = relay.var("var_632", dtype = "bool", shape = (1, 12, 3))#candidate|632|(1, 12, 3)|var|bool
var_633 = relay.var("var_633", dtype = "bool", shape = (2, 12, 3))#candidate|633|(2, 12, 3)|var|bool
bop_634 = relay.logical_and(var_632.astype('bool'), var_633.astype('bool')) # shape=(2, 12, 3)
func_436_call = mod.get_global_var('func_436')
func_440_call = mutated_mod.get_global_var('func_440')
const_638 = relay.const([False,True,False,True,True,True,False,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,False,True,True], dtype = "bool")#candidate|638|(80,)|const|bool
var_639 = relay.var("var_639", dtype = "float32", shape = (60,))#candidate|639|(60,)|var|float32
call_637 = relay.TupleGetItem(func_436_call(relay.reshape(const_638.astype('bool'), [8, 2, 5]), relay.reshape(const_638.astype('bool'), [8, 2, 5]), relay.reshape(var_639.astype('float32'), [15, 4]), ), 1)
call_640 = relay.TupleGetItem(func_440_call(relay.reshape(const_638.astype('bool'), [8, 2, 5]), relay.reshape(const_638.astype('bool'), [8, 2, 5]), relay.reshape(var_639.astype('float32'), [15, 4]), ), 1)
output = relay.Tuple([bop_634,call_637,const_638,var_639,])
output2 = relay.Tuple([bop_634,call_640,const_638,var_639,])
func_642 = relay.Function([var_632,var_633,var_639,], output)
mod['func_642'] = func_642
mod = relay.transform.InferType()(mod)
mutated_mod['func_642'] = func_642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_642_call = mutated_mod.get_global_var('func_642')
var_644 = relay.var("var_644", dtype = "bool", shape = (1, 12, 3))#candidate|644|(1, 12, 3)|var|bool
var_645 = relay.var("var_645", dtype = "bool", shape = (2, 12, 3))#candidate|645|(2, 12, 3)|var|bool
var_646 = relay.var("var_646", dtype = "float32", shape = (60,))#candidate|646|(60,)|var|float32
call_643 = func_642_call(var_644,var_645,var_646,)
output = call_643
func_647 = relay.Function([var_644,var_645,var_646,], output)
mutated_mod['func_647'] = func_647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1082 = relay.var("var_1082", dtype = "float32", shape = (15, 12, 12))#candidate|1082|(15, 12, 12)|var|float32
var_1083 = relay.var("var_1083", dtype = "float32", shape = (15, 12, 12))#candidate|1083|(15, 12, 12)|var|float32
bop_1084 = relay.floor_mod(var_1082.astype('float32'), relay.reshape(var_1083.astype('float32'), relay.shape_of(var_1082))) # shape=(15, 12, 12)
output = bop_1084
output2 = bop_1084
func_1090 = relay.Function([var_1082,var_1083,], output)
mod['func_1090'] = func_1090
mod = relay.transform.InferType()(mod)
var_1091 = relay.var("var_1091", dtype = "float32", shape = (15, 12, 12))#candidate|1091|(15, 12, 12)|var|float32
var_1092 = relay.var("var_1092", dtype = "float32", shape = (15, 12, 12))#candidate|1092|(15, 12, 12)|var|float32
output = func_1090(var_1091,var_1092,)
func_1093 = relay.Function([var_1091,var_1092,], output)
mutated_mod['func_1093'] = func_1093
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1254 = relay.var("var_1254", dtype = "uint32", shape = (4, 2, 1))#candidate|1254|(4, 2, 1)|var|uint32
var_1255 = relay.var("var_1255", dtype = "uint32", shape = (4, 2, 6))#candidate|1255|(4, 2, 6)|var|uint32
bop_1256 = relay.add(var_1254.astype('uint32'), var_1255.astype('uint32')) # shape=(4, 2, 6)
func_46_call = mod.get_global_var('func_46')
func_48_call = mutated_mod.get_global_var('func_48')
const_1278 = relay.const([5.011893,-3.145281,-1.066301,-8.180447,-2.006491,-2.831625,0.960678,-0.202337,-1.685629,-6.047729,9.117072,0.714890,-7.419133,9.705855,-1.528272,-7.725030,-3.368174,4.608444,-0.367436,5.389073,-7.367004,1.651873,8.376893,6.950146,8.081695,-1.033193,-8.646705,-9.890605,-0.270853,-1.031270,-2.896224,-9.728990,7.726304,4.995747,5.428612,-5.475447,-4.854668,1.550260,-5.402828,-9.229549,-4.325636,-7.195451,-4.552839,8.477726,9.320610,2.223379,-0.810087,-6.178968,3.809574,6.373673,4.804179,3.200933,-4.866339,5.648910,7.559250,-9.538026,5.738863,-7.505429,3.144345,-3.605373], dtype = "float32")#candidate|1278|(60,)|const|float32
call_1277 = relay.TupleGetItem(func_46_call(relay.reshape(const_1278.astype('float32'), [6, 10, 1])), 0)
call_1279 = relay.TupleGetItem(func_48_call(relay.reshape(const_1278.astype('float32'), [6, 10, 1])), 0)
func_1090_call = mod.get_global_var('func_1090')
func_1093_call = mutated_mod.get_global_var('func_1093')
const_1281 = relay.const([7.368616,0.616274,-4.064682,-9.991940,2.668671,2.439856,8.714960,-9.746694,-8.359911,1.920152,5.021231,-5.442562,0.577651,-6.091065,-7.114788,-7.952664,9.492428,-8.642139,-2.874458,-4.382967,-7.777079,-5.263670,7.917613,-7.561638,3.136543,-3.539578,1.819185,-2.386478,4.407726,4.889925,-0.548976,5.168310,4.319627,4.201996,7.791798,7.530639,0.462194,5.313839,8.991158,-8.589871,9.957820,1.940499,-0.100058,-2.815890,-7.282231,5.488253,6.396728,-2.784035,-8.419453,-7.462023,9.572958,4.870884,2.914212,-9.172492,9.062519,5.468642,2.772485,1.586068,5.830469,8.166148,-3.898286,-1.667459,-8.810309,-5.847755,-6.139359,-4.869474,7.900671,-6.525545,-5.371993,0.813553,3.389932,7.841862,3.506846,-8.163269,-6.145248,-2.635351,-9.930746,-5.662539,-9.336391,8.909635,5.574588,-3.923179,-0.727978,1.977795,2.787466,-7.589280,6.088708,8.988144,-2.165829,3.430966,-3.777542,6.499038,-3.470688,6.898240,6.373350,1.144404,-1.647810,2.201571,-9.368739,6.347275,3.861787,9.444021,6.920789,2.885798,-6.816685,-1.457793,-3.366043,-2.980892,7.920618,6.655729,-8.788171,5.936848,0.220505,5.279037,6.035193,5.620298,-6.427149,-8.080994,-6.428192,-5.183314,-8.991571,9.208513,-2.253034,-7.126962,8.755049,-4.601852,-3.159958,-5.673885,-4.202587,-8.026100,-7.318884,-2.527084,-3.324728,8.145702,-1.042864,1.055177,-6.218852,-1.887346,-1.373612,7.105689,-0.695303,-3.733908,1.440792,-0.640681,-2.949601,-0.464032,3.168979,-9.600504,0.858121,-1.667953,2.559109,-3.583959,-4.612124,-8.517060,4.356784,-8.975726,-4.060680,7.080432,0.527135,9.704970,-8.695893,-7.206504,0.234607,7.517610,-1.214112,-0.092180,9.607998,-0.738906,7.539537,5.745481,-9.233421,4.469519,-8.257676,-8.838624,-3.296444,0.254961,6.275466,-9.158387,-1.071046,0.197952,7.912483,-6.527375,3.701208,-2.013419,-8.277344,2.840436,6.143043,9.764031,4.479973,1.021931,2.772639,-5.441324,6.720808,3.390745,-9.558415,-1.222910,8.463307,8.569304,0.824919,9.276957,5.078093,-8.854229,6.141908,-7.123767,-7.525532,6.412510,-6.718614,-3.488581,-8.206630,-4.187525,7.043539,8.094254,5.965761,2.237433,-5.682023,-8.798286,0.692275,6.483902,-0.872506,-4.805889,4.478239,7.182654,7.758780,3.099628,4.460453,3.250255,4.020284,2.505871,0.957393,4.997365,-0.011451,3.420532,5.481401,-3.322536,-3.052748,-9.809194,-7.740504,9.969893,6.528171,-5.815087,-2.621525,2.458352,-3.366070,9.734545,3.243348,5.817253,-9.664661,-5.862996,7.156386,-4.676878,5.308615,-5.808883,-8.521279,6.533317,-3.884256,-5.237146,5.566114,-3.275156,4.507638,1.467751,5.221350,-8.076440,9.436077,7.016587,4.632361,-0.540508,-9.499084,2.284401,6.028869,-2.176965,-2.299884,-1.424557,7.781253,1.076002,-8.301767,7.819509,6.884517,-6.315285,-9.948605,-3.756766,0.034031,-8.290332,4.007344,-4.204627,5.908988,-5.257053,8.657728,4.689595,-4.929351,9.120916,-3.095281,-0.237791,-8.529601,-5.003813,-1.411481,2.170547,-7.264361,8.744706,4.871979,-2.235887,-1.494435,-1.812387,7.301153,-1.213554,-3.311928,8.550606,2.525523,-7.309697,-8.458758,-3.719485,6.890590,-8.877534,-6.241263,2.990634,9.446996,-7.360291,0.283771,0.809135,-1.851903,-0.472351,-2.004002,8.612010,2.627445,9.759879,5.603281,-4.852271,6.780318,-9.058020,-1.674342,6.620538,5.841255,1.134565,-8.737471,8.010307,1.969763,6.938926,7.859008,2.832443,6.594091,-0.738691,-4.789618,1.645441,3.571101,4.887841,-2.227168,4.652585,-6.840764,-8.166239,-2.131709,-5.046616,3.419552,3.928596,-4.996280,1.083600,9.194295,-2.935679,-3.803027,-5.139247,6.366227,3.694373,-7.525622,4.028937,8.585496,-6.594048,-2.643320,9.954533,-2.199004,-2.944302,1.609060,-2.835331,-2.149609,9.707095,3.050893,-1.942273,4.936632,-2.530279,6.593193,0.076917,3.518142,-9.197597,-4.865973,4.311976,-5.494578,8.504567,9.803590,-8.887982,4.613792,-7.464732,8.939477,5.928166,-2.672883,0.955289,-7.034749,-4.730340,-6.686603,3.590478,4.104480,2.365937,-7.381943,4.370434,9.729272,1.213621,6.867761,6.386709,3.715800,-0.586137,-5.663874,7.609613,-8.408113,-9.673805,-1.087382,0.503646,-7.065594,9.180618,1.568506,-9.420388,-4.962373,4.904806,3.583404,1.232866,-5.965392,-6.949039,5.246296,8.620867,7.476789,-1.847516,4.248184,7.726099,-9.095644,-0.929282,-2.957780,-2.346634,7.591525,-5.211793,-0.301042,4.460917,9.996822,9.497044,2.949436,-2.601367,-9.564337,-6.945653,-2.855534,3.023406,-0.642100,1.890213,-2.205146,6.945287,7.164309,-5.133273,1.043599,-7.551457,4.432259,8.537968,-1.243659,-3.547662,-6.656189,-8.525081,-7.420983,-7.932122,-7.505032,3.786447,3.016199,-1.236652,4.451833,7.851092,-7.505103,4.621340,8.881993,-0.368658,6.791648,2.025722,6.490531,-8.894126,4.800560,-8.724799,-8.030591,1.657140,-5.151076,5.589511,-7.935510,0.580440,-5.190181,1.777304,9.555158,-5.903016,-8.622451,6.370531,8.630193,6.485132,-1.031819,-8.680477,-5.785006,-5.090042,3.406950,-5.472601,-6.367369,-2.591571,-2.539283,1.577671,2.192560,-9.095673,4.755638,8.070826,-4.539641,4.847416,-2.806583,9.815450,9.055645,-5.431127,8.103713,8.194705,-4.188000,4.701163,9.441376,-2.670408,-6.471757,-5.762748,-3.471405,-7.221203,-9.322679,2.272707,-9.783098,9.304059,7.461092,-0.582083,-6.697603,-0.555478,-1.428626,-2.552557,-0.760333,-2.125409,5.427480,-0.462940,2.380498,-6.125037,6.675470,-3.437883,1.600719,8.404352,5.823321,4.937645,1.524207,-2.011172,8.160832,4.658721,-2.173547,-6.848173,-0.910908,3.497999,-3.831176,-5.493410,-7.571222,8.698654,-0.821224,-3.807264,-8.266076,-3.469094,1.608130,3.486444,2.311365,0.187665,1.563193,2.916904,-3.474246,0.265992,2.165755,-3.691581,-4.439635,7.689836,1.472688,3.586490,6.664985,3.818097,-3.584739,-8.028405,-7.533788,3.222863,4.856859,2.333729,-1.679972,-2.980392,-5.328159,9.934430,-6.308234,-1.028326,-2.201235,-4.358772,3.322857,-0.625231,-5.347724,8.938000,-6.376053,-1.739220,9.090725,-9.513250,-6.382526,4.541504,3.683814,-7.431186,8.830510,1.914249,-1.050319,-5.965897,-2.027052,3.669421,3.922942,7.291110,-3.750661,4.211075,8.217856,3.738863,2.470535,4.848005,5.032304,-4.437401,-3.212236,-4.319604,8.300332,-6.003267,2.108163,4.564058,-5.491089,2.399502,-1.588910,-7.232361,-7.635869,-1.967649,4.687200,-7.552610,9.947931,3.277222,7.357634,-4.409467,-2.736566,-6.473190,-1.500036,-7.592835,-0.087958,9.381038,4.836435,-4.753991,0.288218,4.461594,-0.344612,2.203806,-0.479757,1.046704,-5.752270,9.823408,-6.934198,6.678842,2.665633,3.981549,3.397731,-3.477172,5.649857,-1.429421,2.641403,1.105372,9.031514,9.533828,3.278376,4.327070,-1.532384,4.514038,-8.630593,-7.340974,-5.017875,1.168737,-6.540057,-4.006891,2.174810,6.664143,-7.957074,-9.912452,9.008647,-5.540435,6.478810,2.082862,-9.028803,-9.875212,0.557140,-0.258470,9.804332,5.851125,7.858182,8.039125,-8.811472,-3.407009,4.917350,-1.118638,-4.400731,3.575296,4.976875,-4.003649,7.300508,-3.394069,0.363038,4.116767,4.240602,-7.663577,-8.089557,0.424302,-0.328366,-5.579828,-2.547947,8.506291,0.762207,-2.767907,8.408071,-8.323122,-9.208641,4.225709,3.843521,-1.985553,5.525371,8.919114,-0.643261,-2.923159,-9.271031,-0.646504,9.424657,-5.553008,-7.517914,1.938291,6.834589,2.439182,1.606145,4.043861,6.027696,2.179621,-1.612229,-4.371312,0.330011,-6.602563,2.837539,-0.818995,-9.139148,4.127101,-3.699892,-7.373545,-6.110703,2.176165,-5.306134,-2.992013,-6.327007,-1.652343,2.626605,8.194542,3.721496,-4.442504,-4.901012,5.227337,3.547063,0.710288,-8.197149,5.279958,2.008709,-6.871777,9.891745,7.996313,-6.484299,5.678693,9.769045,-1.947522,-8.684959,4.567442,5.603709,5.130410,-6.180952,-2.457828,-5.687988,3.773736,-8.860299,6.781689,1.491278,8.096419,-3.136990,0.729369,6.497309,-1.141157,-7.250847,-1.891797,-9.417238,8.448199,3.995858,5.729144,5.938977,8.011564,-0.274546,-0.356087,-9.323076,7.365276,-6.057043,-3.436930,-5.099026,0.135517,-3.246851,4.218713,9.719920,7.989922,-6.284534,-4.969164,-2.916064,-9.350579,-8.309646,-0.334280,-8.026813,4.256856,-0.960418,3.175239,-1.207635,7.059633,-1.673035,8.239046,2.895114,-5.217883,-6.669499,-3.947592,6.329744,5.592075,4.982510,-3.183571,-6.627480,-4.312682,3.278758,9.556314,-6.082210,-6.706796,2.018466,-2.019498,4.992065,6.538671,0.943512,-5.651694,-8.539462,-3.191285,0.819184,2.951004,-0.449038,-4.810833,0.090497,8.924037,-6.245998,9.527147,3.200917,5.432525,-2.542302,-5.345363,-2.330589,-2.989792,8.929543,-5.182760,8.886728,-2.887258,9.672692,7.224987,-7.575021,-6.297866,7.306694,1.495513,3.424091,7.271187,5.268160,5.738797,-6.066598,-2.977271,-2.872854,-5.680105,-0.093075,8.690412,3.013455,2.906316,0.552576,-6.414033,1.573493,0.759261,-0.070292,-3.852800,3.631626,2.179540,-7.844293,1.826618,-4.223299,-4.180368,-5.428594,-4.171420,7.431875,7.945602,3.055040,6.079021,4.850293,3.276888,6.954748,8.725897,8.294858,-1.948892,-5.256916,-2.987867,5.435280,-8.998856,-0.118761,9.508556,-5.047852,-0.291585,-7.320889,-0.259172,7.308627,-5.333998,8.266073,8.888966,-8.204179,-0.723921,7.621052,-3.812397,-5.026204,-8.185138,7.304685,-8.270028,-5.043999,-1.320688,-2.401861,4.556294,-3.691046,-2.479583,3.656268,9.856920,2.554974,5.232547,-3.322868,9.766042,-2.558475,-0.910990,7.284185,5.477646,5.727555,-5.517953,-1.948021,0.734001,9.424062,-1.349643,5.955910,9.692706,-0.665309,1.851733,-6.852949,5.853958,-8.850839,-6.935070,-1.318988,-3.804810,1.188419,7.992369,-3.223109,3.472522,-3.817713,-5.814925,9.309960,-2.430074,-2.060567,-7.556735,-8.443309,6.584450,9.295759,-6.175453,1.101217,-0.779750,9.163210,-1.752420,-1.824024,-6.710491,-1.243502,6.451515,-1.082606,9.218492,5.147812,7.567368,7.956282,7.950868,-6.653908,-1.175894,-8.038786,4.325989,-7.018211,3.626175,4.463812,8.616017,-9.023622,7.555976,-5.143099,-8.188839,-8.809024,7.434460,-0.247593,6.227642,-6.362366,4.800948,-3.395264,-9.598882,-1.546356,7.200437,1.361580,6.864231,8.388081,-7.412878,8.601556,-6.504755,-0.675092,1.097812,-2.449486,-7.136767,-2.221748,7.728133,-7.365280,2.563766,9.526479,-7.937859,9.315713,-7.651288,-1.061224,-1.847822,0.547274,3.333812,-4.226093,8.073950,8.846859,2.589980,0.715972,-0.970795,4.089614,-0.684650,6.581776,0.556825,9.356470,9.430958,0.560807,9.240197,-8.398969,-8.972988,-6.133853,6.431104,9.102957,9.412653,2.613971,-6.609145,-0.372631,8.880019,7.563746,-7.032655,2.430817,-2.174172,-3.800089,8.897142,4.394329,2.084391,4.312453,0.564005,-7.079731,9.974582,7.541628,-0.169356,2.486284,9.736230,-5.036438,1.922829,5.633030,-4.464631,9.592698,7.895090,-2.959356,-1.629339,2.935416,-2.293758,0.088647,-6.664641,-7.189436,-8.086597,-0.955755,-6.586314,2.186088,-7.135090,-3.043199,-6.985799,6.626182,-6.982962,3.699541,8.296325,-6.588468,-3.011425,-2.244053,-6.368331,2.847611,-5.805770,-8.266234,-2.876351,-0.094341,3.098800,-3.064375,-7.412506,6.632151,7.219120,-2.295371,4.135638,-8.596970,-7.894890,-5.673152,9.825021,1.289836,-7.712927,3.275803,8.790891,2.381411,-2.572598,4.052026,8.347619,1.179436,6.159827,-6.018373,-5.432913,-5.120181,1.234459,-4.441062,-1.997153,-2.910303,5.642159,2.562976,1.447986,0.241629,-1.157310,-3.315860,6.935663,-0.593506,4.594393,-1.997049,-3.916499,-6.157067,0.905764,-0.526500,-3.822939,-6.335603,-9.369688,3.657390,0.435600,5.036287,6.160064,5.314744,1.234757,3.791700,-7.038633,6.504185,-2.573874,-0.825519,-9.130737,4.205851,7.065839,-9.894552,1.731043,1.942068,2.242533,3.686625,7.415457,7.392845,-3.455968,9.128602,-7.263836,1.860524,4.711371,1.248020,0.815692,-6.878055,-6.225798,-2.945931,-8.618645,-5.418413,0.638367,-0.914167,7.960280,8.597665,-3.427810,-7.129890,6.157651,3.023170,-4.538425,-8.639352,5.335150,-8.210477,-5.937689,-8.823126,5.928025,-6.908383,-7.873660,1.199433,-9.171499,2.916147,7.521123,-8.605129,-8.951057,0.331520,-0.825948,-8.615113,3.971873,9.214537,4.569822,-4.702492,8.132596,5.623333,-3.318639,6.135017,-5.916271,5.996969,-0.900652,-3.498735,-4.347035,2.200997,-8.263364,-5.776953,2.508548,7.883955,9.901964,1.026154,-0.728149,-1.897987,3.882689,9.976459,8.061142,0.779904,-2.108504,-0.539476,-9.712431,3.756465,8.183684,-6.069090,-4.611263,4.189961,4.906222,-5.192717,-8.689509,-9.632937,-2.160365,6.889085,1.145688,0.824637,-5.573716,-4.921363,-0.037911,1.281636,6.463314,-7.492915,0.864644,-5.047057,-2.448717,-5.275694,5.143084,-6.469648,0.787855,6.782785,-2.304256,-5.735819,-9.338505,6.073835,8.587841,-5.691753,-9.926606,-7.630297,1.027020,0.920092,3.768734,-6.451158,-3.839586,-2.314064,-8.636165,-4.502228,-7.567749,7.366542,4.788746,6.380246,-7.079187,-2.747494,-8.377380,-8.696179,9.415768,4.772571,-3.003100,4.267039,-4.587467,-1.339539,-6.634460,-5.378309,8.239718,1.215116,-5.295404,9.278391,6.944188,-9.401438,-6.460192,4.323054,-6.812047,-4.438973,-5.348098,9.202746,4.166937,8.263001,8.932664,7.306658,6.212049,4.657127,0.715734,-4.157739,-4.195760,0.763400,-5.326479,-3.367434,7.774681,1.568948,3.681569,7.643399,-3.186733,-6.093126,-6.343354,-3.520281,-3.101182,0.879236,3.721418,-7.179134,-4.149005,-3.388789,-9.611461,9.281463,-0.433141,0.127189,-3.748473,-7.377425,5.325008,-7.196753,-5.678202,-9.789098,-7.473582,9.426798,0.056917,-7.400736,8.023647,-0.477134,5.448862,0.478181,-5.379985,7.424572,8.821927,6.286856,-8.089224,-9.519890,8.347984,-2.646420,9.806092,2.456002,3.665684,-0.784049,-6.900603,7.112973,4.642136,7.173831,4.827281,-7.610935,0.047039,-1.210435,7.020420,-2.851963,1.503129,-7.309053,-1.489831,8.239331,0.758753,-6.340445,8.175546,-7.949609,3.794289,-6.576636,-3.160475,0.491295,3.430735,-0.884171,6.988179,2.277080,2.221736,6.332858,7.701377,8.482675,-1.074714,-7.980943,9.681634,-8.089485,1.709184,-0.903674,3.129713,6.353734,3.316077,0.567900,-5.062387,9.222612,2.285251,-6.090577,9.519740,9.894092,1.612581,5.711746,-8.956660,6.445156,8.747561,-0.293866,-8.043781,5.845602,2.803050,-3.618454,2.854379,4.680108,-4.732992,3.693704,6.687489,1.290900,-4.597289,-2.208705,7.585565,-9.947676,3.633754,3.024985,-9.539015,7.951034,-4.283266,-8.384120,4.899639,-0.717103,7.762119,0.705196,-8.177587,5.955611,-7.342530,-4.623130,-4.453373,-7.868635,0.146473,0.924165,-2.739008,8.229270,-9.540113,-8.557436,6.107431,2.186734,-8.123938,5.843760,7.322387,5.299143,-9.215731,5.177685,9.675513,-4.449829,-2.183768,-7.653687,-8.522115,4.169048,6.415042,-4.935267,-0.991362,5.458574,7.480148,0.194380,-8.651215,-2.771669,-1.368852,9.626308,0.896690,-9.251976,3.674721,-7.746016,-1.646875,-3.287626,9.164174,-2.217406,-6.082307,-7.144889,3.033495,-1.312068,-2.419422,-0.579289,0.370472,-1.276671,-6.899080,-4.475150,-2.269135,0.415161,-4.425379,-8.072877,3.169417,9.073701,9.836797,6.393707,6.854103,-4.487033,-8.858975,1.188621,-0.922412,-6.766240,-9.462942,-4.977377,5.102759,-7.360655,2.937074,8.247862,7.801204,-7.635253,-7.516018,9.881251,2.145088,3.069850,2.957469,2.943717,8.411296,-0.662410,-0.934628,-8.364994,-1.685028,3.330257,0.630164,-3.327690,0.792485,6.925230,-1.426729,-6.965823,-0.556997,4.194068,-0.095857,6.350891,-4.437751,3.006400,-6.190756,-8.830637,-5.029089,-9.321025,-0.702119,9.581582,5.787760,1.928723,8.541210,-2.082277,-1.537532,1.256273,-4.390054,-5.803325,-2.235731,-1.279943,8.944593,-5.349193,-2.754163,1.877048,9.714842,0.529599,-7.521322,3.287459,-7.630338,7.341578,7.038553,7.144246,-9.537524,5.719912,0.575085,9.700507,-3.604264,6.370901,0.321560,-8.200358,2.977521,7.934268,-1.833129,5.738053,-8.125738,6.794130,-5.509205,-7.530785,-9.522820,4.416243,6.680067,-1.190373,-9.949016,-1.580779,6.832774,3.278341,-7.201514,-9.561314,4.950920,5.058533,-1.059777,4.995737,5.027794,3.145973,1.250003,-5.007633,-3.462110,0.848293,-1.847182,-3.931117,-6.745660,-8.514267,-8.392755,5.970121,-1.077503,-8.002854,-6.056235,4.355812,2.926065,2.739418,-4.471041,6.872224,7.664410,2.053318,-4.013009,2.504853,9.784054,-6.953540,-8.360570,8.064602,-7.687375,1.439361,-3.469474,8.942200,-3.717465,-9.496610,-7.953562,2.474791,-3.678305,2.154503,-0.527501,5.604064,-2.919459,0.439195,-2.503698,2.994493,-9.953127,2.952450,-3.951402,-4.595716,7.478639,8.593272,-1.460752,2.006045,4.530461,-5.433925,5.113431,-9.085454,5.847614,-7.645824,-9.145859,-5.862182,0.590995,0.469121,-0.510387,-4.027209,4.408534,1.239554,-5.794229,-5.173712,4.634751,9.823273,3.675559,-7.356801,6.901896,-8.352014,0.926796,1.901575,-0.272242,-8.523444,-8.536157,-1.224603,-6.701129,-3.795989,4.162784,-9.651167,5.777582,1.002182,9.064656,4.011341,6.657102,0.748111,-8.152397,3.409636,2.114158,-7.977418,-5.678770,2.179496,-2.285347,6.431439,4.085532,1.693323,3.716155,4.538022,-5.992372,4.361563,-1.823530,-9.925412,7.601783,4.635703,0.895985,3.695999,-6.714412,-2.866408,-6.092901,-1.588569,-9.024276,-6.733797,2.811359,-0.697617,-5.501222,8.415567,-8.385715,1.094745,0.917924,9.002324,-5.802912,-0.914332,6.730817,-0.298679,-1.245264,2.316659,-8.641021,-2.049286,8.760447,7.603925,-1.328199,-0.521740,5.687198,2.487796,-1.724496,6.955447,3.176991,-6.873261,7.852489,-5.460645,7.121570,-4.611919,3.534057,7.484857,3.851436,-0.050134,2.966336,4.610248,-5.308653,7.954361,7.657729,-7.838889,-6.235777,5.357210,7.983908,4.951850,-6.590621,-7.753092,-8.946851,-4.241586,-8.099817,-7.757997,-9.173885,-5.490852,-4.408028,3.897922,6.467983,-6.667968,-5.328321,2.120576,4.785193,0.139507,-5.325891,1.528766,3.099959,-9.076417,-9.770431,-2.650468,-8.486499,1.664288,-4.546207,-0.566903,-0.108468,-3.792405,6.245163,-5.464771,-4.064453,-1.939238,1.570351,-8.100211,8.392859,2.385177,5.479835,-6.159018,-4.749738,-2.750176,1.891715,-0.726379,8.599757,-3.808109,-8.517341,4.145601,-5.788020,9.743673,8.239967,8.709075,5.216472,-6.976578,-6.793798,-7.999629,-4.961932,8.800482,-4.802479,-8.503030,-7.597781,-5.773948,0.176611,-8.503110,0.402597,-0.364745,4.108413,5.116451,-4.859537,7.738084,5.193202,5.904073,-3.487919,8.244051,9.849432,-5.089127,-3.490519,-1.931020,-8.026218,-1.085062,4.437493,-0.535004,-5.837200,2.873100,0.876894,5.360414,-6.297898,-9.576642,6.860821,7.732327,9.569377,9.046588,-3.106264,-0.693248,-4.993223,-8.918735,7.159441,-7.603934,6.573094,-2.033817,-0.726347,0.839518,-7.377739,8.371344,7.243901,-9.078071,-3.093231,-1.293269,-0.619754,0.262719,3.801253,-8.217065,-7.979188,-2.117515,-4.934133,-0.206370,-4.164569,3.270396,3.379039,7.065257,-1.340707,-7.345780,4.239090,2.383582,6.660202,-3.330325,2.860145,8.354615,3.467149,4.764702,-3.002187,-6.008631,7.403783,6.593004,-3.722699,2.676297,3.198337,6.407628,-5.272910,-0.680821,5.147642,0.320882,9.334741,-2.729810,-4.141489,-3.815993,3.036789,-5.762592,-9.208191,3.561391,-9.828729,7.634084,-5.890570,-5.510811,-1.931243,-2.672081,8.210469,-3.181257,-5.663068,8.648074,-4.898770,6.340538,-9.025670,-7.661751,-2.018780,2.085036,-9.239771,-1.216825,7.094900,1.885819,1.918748,9.950542,0.702629,5.503008,-7.945128,0.524237,-9.598626,-2.104289,-8.359635,8.511243,-7.372429,7.584114,-3.866429,-2.735710,-8.067236,2.348361,2.288354,-9.690264,-9.663408,5.957666,-9.892571,5.023943,0.476436,5.436935,-3.125974,-4.626460,1.736725,6.724630,1.737433,3.532516,2.439431,1.529098,6.143690,-3.343506,9.245153,-5.045644,-2.240134,-8.037388,8.604934,1.438697,7.353835,-3.872004,4.919628,-4.083823,0.479716,-0.491303,-2.328618,-8.535112,2.715642,0.480574,-9.800700,-0.889327,9.515529,-6.307846,-8.961142,-4.748894,-8.255526,-3.972279,-6.469560,-5.887428,-2.131566,-6.630672,8.552475,-0.494670,6.904992,2.484168,7.197621,-8.603314,2.952998,6.439107,-0.273989,7.369900,-5.068192,-5.786901,-5.473104,9.154972,2.765514,1.933352,-9.580471,5.166701,7.375147,2.644076,-0.579176,1.043539,-3.436706,5.694067,-4.592602,3.024841,-3.297776,9.791833,3.447673,7.181275,-7.077937,0.707131,-5.733322,5.807813,6.672459,-9.507730,-3.504786,1.072129,-9.769975,-7.714094,8.618709,-3.175768,5.124421,-2.200750,-5.765353,-6.250891,-1.244849,3.514733,-9.299334,-1.166525,6.812099,-1.422647,-6.430232,-5.264534,-8.955180,4.349134,6.658410,-2.889906,9.221458,4.128798,-5.803679,6.086909,4.683647,-3.755143,5.538955,4.600213,1.851376,-5.386844,-2.036786,9.372258,7.549573,-2.838653,-0.530025,-3.038301,-2.365594,4.846109,2.615387,0.518595,3.116093,-7.823032,1.415428,9.450222,3.145683,-5.942150,-4.583643,6.144325,6.748300,-4.324372,-5.075572,0.962595,-5.043292,7.105324,1.086907,-2.076519,-8.349791,5.022737,6.278225,2.570308,4.756568,-1.602161,2.669701,6.116672,3.499501,-0.008836,-7.934426,-2.370240,-3.835423,-4.806749,2.573005,-9.714056,-4.603935,2.024381,-7.307176,-4.424053,-7.299572,8.300649,-5.258411,-6.536544,5.712249,2.556226,0.195289,-6.625655,-1.669296,9.769195,-4.653509,1.327865,-8.975099,-3.542742,3.486920,-7.012881,1.381179,0.019832,-0.965243,8.721945,-4.010808,-4.601612,0.228478,0.502957,6.056447,5.563259,-8.586457,-1.921597,7.508096,7.777195,-3.565203,-3.499847,-7.908628,3.628064,-8.407656,-7.282558,-2.444828,-5.657091,6.419814,5.070490,-1.702414,-4.615032,1.854536,8.236038,3.702499,-3.028902,-7.108093,6.699474,-5.636787,-1.221272,-1.862264,-6.262701,8.472555,-1.063181,-0.447407,4.168716,-2.478777,-7.865963,7.875149,-2.313414,-2.299342,-4.384921,9.479017,1.356601,-1.807716], dtype = "float32")#candidate|1281|(2160,)|const|float32
call_1280 = func_1090_call(relay.reshape(const_1281.astype('float32'), [15, 12, 12]), relay.reshape(const_1281.astype('float32'), [15, 12, 12]), )
call_1282 = func_1090_call(relay.reshape(const_1281.astype('float32'), [15, 12, 12]), relay.reshape(const_1281.astype('float32'), [15, 12, 12]), )
output = relay.Tuple([bop_1256,call_1277,const_1278,call_1280,const_1281,])
output2 = relay.Tuple([bop_1256,call_1279,const_1278,call_1282,const_1281,])
func_1293 = relay.Function([var_1254,var_1255,], output)
mod['func_1293'] = func_1293
mod = relay.transform.InferType()(mod)
var_1294 = relay.var("var_1294", dtype = "uint32", shape = (4, 2, 1))#candidate|1294|(4, 2, 1)|var|uint32
var_1295 = relay.var("var_1295", dtype = "uint32", shape = (4, 2, 6))#candidate|1295|(4, 2, 6)|var|uint32
output = func_1293(var_1294,var_1295,)
func_1296 = relay.Function([var_1294,var_1295,], output)
mutated_mod['func_1296'] = func_1296
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1596 = relay.const([[[-0.236646,-6.881691,7.501792,-6.945584,3.666563,-2.223680,-5.800876,6.606566,-7.907178],[-7.572146,-4.403246,0.253302,2.627006,-5.805931,-1.637237,-0.179938,-4.106723,0.192197],[-0.655715,8.870669,6.854935,8.110988,-4.719528,-1.294980,-2.684501,4.390934,4.912429],[-2.844423,-5.098827,0.656851,-2.810133,-1.910210,7.485737,-8.737485,1.482200,7.588345],[8.233159,-4.836805,0.110074,6.397897,9.131250,4.297055,2.139103,1.345044,-4.804397],[3.803827,0.107254,3.557162,7.677546,-5.790584,-8.432418,3.229107,-8.311396,3.367054],[-5.486675,5.954219,2.220814,-6.093372,-0.762185,5.784726,7.875067,7.461478,-9.004939],[8.531180,-9.192199,-0.497933,3.909863,0.272552,7.862550,-8.228369,6.116519,6.470165],[-8.342472,8.891357,0.973762,4.661531,9.542585,8.005813,1.177423,-1.614572,-9.688999],[-6.656872,-8.951778,0.074796,2.978773,-5.378936,-2.026243,6.963592,9.323956,0.610678],[9.074740,6.556005,-8.561224,-7.856588,0.672768,8.121063,8.719089,-8.997456,4.090382],[5.509302,2.170232,9.363336,3.759306,-3.896573,-7.623920,-9.644671,-5.405455,-1.319824],[-4.479710,-2.907934,8.991898,-1.806361,-4.310460,0.329154,-5.655703,-3.012707,-1.247696],[5.790972,-6.968325,-7.203326,-6.174781,1.442638,1.378129,9.697877,-2.848146,5.397541]],[[4.228222,5.295625,-9.984865,-3.305219,1.202258,-7.419199,-7.068425,-0.175361,4.109204],[4.715375,8.667525,-3.174692,9.761294,-4.304746,-8.316102,7.409962,5.590871,4.459704],[5.906370,2.369339,-0.726591,-8.156115,5.986694,3.656229,-3.211845,-9.577941,9.974797],[-6.935493,-9.646048,0.012757,-2.823456,9.125214,9.423258,-5.979227,-9.880141,1.923908],[6.308064,9.141981,-4.567078,-4.005221,-0.689949,-1.006853,8.871221,-4.951984,-1.465181],[-7.873271,-4.613192,-8.811730,-6.940153,5.804595,-8.510551,8.626906,-1.310924,4.673830],[-6.368326,9.954389,-0.814834,-3.280524,-9.007884,-0.759837,-8.889140,-3.917902,-5.412064],[-0.413617,3.276027,2.225170,5.745687,6.191642,9.239057,-1.187836,-2.079028,-9.801649],[-1.040190,3.544424,3.120065,8.584753,-2.495182,0.082474,-8.142059,-0.435428,1.485985],[-4.039719,-3.959658,-4.047195,-8.485665,0.402961,0.802975,6.938891,2.138734,-6.827672],[-9.184417,-3.527814,8.043949,0.365834,-8.606513,2.921662,0.366760,-9.692784,-5.086661],[-6.437238,8.113480,2.846986,5.221429,-4.192952,5.268974,-1.576470,-5.295612,8.932970],[-9.122424,-3.411905,-7.221523,-9.472993,3.382967,0.722035,5.764026,-2.033419,-8.867916],[5.881674,-7.750868,-0.155798,9.570233,-2.178312,4.234588,6.361192,-7.760862,-8.373241]],[[-6.628351,6.127061,6.031419,2.338142,-9.633498,-6.158604,2.511925,-7.945554,0.114591],[-5.507034,7.612882,7.775544,-5.194499,-4.659154,-5.708564,3.625643,9.816083,-4.699723],[4.781295,-7.808044,5.730148,-7.407045,-4.173128,-4.378120,0.915028,-9.807143,5.232089],[-0.151880,4.021904,0.434205,5.585144,-2.870395,7.270621,-3.829600,-2.008800,-1.392492],[1.006392,-4.528962,5.274205,3.694826,5.309068,-3.674271,6.884114,-6.590934,6.505527],[-4.418404,-7.887856,-9.257939,7.356374,4.750658,9.297868,7.186110,-7.421946,-2.362339],[3.501265,9.297823,-4.174989,4.132828,-1.858365,-5.482572,4.435249,-0.472082,1.141976],[6.409790,1.042956,-8.142864,-0.738434,3.747629,1.907270,0.903167,-2.205295,-5.625576],[-3.546216,-4.476038,7.857363,-6.562001,-8.690249,8.740887,7.916057,-3.210051,3.349151],[6.107489,2.189126,-8.754351,8.433701,3.185889,-1.468513,-0.645110,1.617140,2.532236],[9.057710,-9.158949,1.188706,5.347444,-0.346288,8.257276,-7.476266,-4.819631,-1.477068],[-1.616184,-2.673787,2.779261,8.170952,9.309110,-3.413937,-6.852891,-2.743262,2.542097],[-7.546647,2.569780,2.791794,-3.742962,0.751992,3.469270,7.165784,4.177864,7.434024],[5.583842,-8.467105,3.299657,8.671165,-4.119265,-9.265601,7.980206,-0.597940,-9.194694]],[[-8.215639,7.582086,5.938790,2.207240,0.476281,-9.205228,7.851010,2.077798,-0.304495],[-1.138437,-0.560478,5.960445,8.638555,2.539037,3.861310,4.933458,-2.371905,-3.788386],[8.084871,7.628800,-1.055221,0.588163,9.259844,-1.827007,9.358916,5.504140,2.614511],[3.806404,-2.092663,6.864450,-2.073886,6.252212,9.497572,-4.214564,4.835163,0.973104],[7.080439,9.345342,-3.435151,-4.712248,-5.797060,5.820188,-2.322842,-5.617241,-1.116284],[2.455348,-6.662278,3.527479,-4.989688,-1.983830,1.377787,9.772446,-7.770943,3.720909],[-6.066390,3.914857,-6.996465,1.673281,7.327389,0.063972,7.011549,-3.799514,6.579359],[6.047329,1.622265,6.004057,-5.021283,6.481972,2.538063,7.119105,-7.343052,-8.120788],[6.482928,5.666999,-8.384765,-4.404518,7.692170,4.417322,7.233579,-3.525133,8.612720],[4.552154,5.158250,-4.832601,-7.667338,-7.994549,-4.158585,3.558648,-3.400401,-9.222703],[8.059975,-8.953230,8.365940,0.597125,9.298776,7.271940,4.407688,-3.760877,2.630774],[4.697493,-1.153917,-7.202717,-6.631320,-4.671007,7.951663,9.666623,-7.221900,1.780025],[-7.335366,-2.451589,5.858633,-3.052782,-6.626706,2.470298,4.727437,9.821012,-4.792510],[1.273160,9.081476,-6.464187,-2.813848,0.457082,3.268615,5.939413,1.906980,1.542791]],[[2.211190,5.051836,-0.059609,-3.301736,0.314449,6.633524,2.494663,4.026937,6.145983],[0.055759,5.440488,-9.937914,-8.989878,-4.140067,6.023404,-4.063825,3.583381,-8.936534],[-0.034782,-0.115335,5.700714,6.428041,-7.483322,9.685379,-4.841767,8.528337,-1.108555],[0.247396,3.689391,-9.309172,1.619511,-7.195611,5.208361,7.978638,1.938579,6.119400],[5.043752,9.392211,9.193317,3.180394,-1.069376,-8.398812,-9.269659,9.440918,2.993223],[-9.097072,-7.908888,-9.814541,-6.112387,9.757262,0.687859,-5.339223,6.078840,-9.428605],[-6.389625,5.146059,-9.419470,9.980532,4.180031,4.139746,5.604713,6.277446,-0.954240],[3.943395,2.129167,-9.416489,9.606924,-9.435728,-8.076867,-1.395327,-5.116495,0.870811],[9.906800,-9.075134,9.422324,8.139981,4.139840,-0.604863,-2.104828,-9.119731,-0.449771],[-5.940389,7.884522,4.998743,7.606509,2.118175,4.479249,7.986969,5.007910,8.215869],[4.664833,1.892985,7.906078,-7.688884,2.088655,-0.141180,5.694105,-0.503470,7.217648],[-0.363979,7.755510,-0.886464,3.210022,0.663440,4.440932,2.607588,2.349503,-0.847678],[2.152458,9.060044,2.019662,-1.576001,-9.853304,-6.321610,-3.215103,3.799957,-6.562314],[-4.096218,9.224223,-2.645217,-9.469389,9.823996,3.948266,4.013604,-0.032809,3.815559]],[[-0.037945,-0.062736,-3.565279,-4.947781,7.921081,-7.344821,2.953775,6.978855,-5.347238],[-0.296493,-4.157294,6.362332,6.119979,-3.922578,7.692930,1.028735,2.304078,-1.697232],[-5.775772,5.657381,-7.467849,0.703500,-9.844697,-0.030892,9.210795,-3.379179,-1.646777],[8.902988,-1.914181,2.050189,2.778924,4.461778,-8.900693,1.231694,-4.277659,4.856611],[-4.610561,-6.972067,6.396069,-6.571072,1.574314,-9.363330,-0.510123,0.865841,7.797135],[-8.419069,-3.101302,-1.365243,5.093147,0.067524,-7.010577,9.489450,-7.626415,5.160368],[-2.462328,-5.868792,-2.172683,-4.275825,-1.607886,0.198890,-4.092833,-7.734298,3.911330],[-7.523386,-6.456496,-2.708716,-6.045486,-8.134948,-0.939075,-2.605486,4.614827,-7.308858],[-3.640492,-5.358166,7.211675,-1.334698,8.853470,-7.517264,3.243553,8.585244,-9.522602],[-4.116402,2.363827,2.768451,3.431737,2.831149,-6.602696,-6.899569,-5.198963,0.672110],[1.023410,7.930354,3.174980,1.805901,-6.104669,-0.250341,9.380190,2.354439,1.249422],[-0.897564,2.802825,0.556227,2.898023,-3.149403,-2.279500,8.571405,9.513108,-0.896949],[-7.632635,-6.223827,7.819261,-1.281112,5.267818,8.358577,-8.617577,9.103218,5.569124],[-3.981120,9.036940,-3.016349,-1.306088,0.109342,0.125006,-4.441936,8.868206,-3.762620]],[[-3.286381,9.457790,5.300220,-4.276072,-8.311191,7.264421,6.715974,7.647547,-6.598534],[-9.009660,4.203367,-6.359640,-2.557692,9.914108,9.808508,-4.993387,-3.011490,-5.576902],[-0.666563,7.660881,-5.649897,7.936693,-6.798746,-2.796490,-4.122323,-6.673007,-1.083373],[-9.653189,1.673002,4.968696,-0.297682,-9.347847,8.379685,-0.412351,-1.478528,9.140583],[-5.792549,-1.212609,8.984925,3.781523,4.362874,0.043520,-9.046033,-9.612786,8.157813],[7.456776,6.797264,-5.214712,-9.614131,2.745646,2.241818,6.038473,6.428546,-0.456699],[5.862551,-2.150279,2.125424,-2.805099,-4.553941,-0.697414,-1.197747,0.097694,3.953015],[1.780035,-1.401944,-4.625966,8.932928,5.440845,1.878168,7.081074,8.488307,-7.066963],[2.718366,-5.529486,1.538236,-3.865416,-2.170255,-2.079285,3.199253,1.014926,-7.101254],[5.618563,-4.957116,-6.423324,0.629253,-6.280673,5.996591,8.768904,7.306915,-3.631085],[-0.672271,9.097406,-7.172147,3.905311,1.215736,2.745461,-1.445562,8.293394,1.233031],[7.426970,7.848168,5.587917,-0.519362,8.477711,9.259427,-0.053544,-4.160080,-9.993267],[4.578440,9.844763,7.881955,-3.146094,6.402866,-6.080329,3.681041,6.448990,3.035695],[-6.893067,-5.065768,8.797587,5.446264,7.934687,7.732030,5.876652,2.361424,8.299432]],[[6.083903,7.242408,6.692959,-0.157181,3.197549,0.597202,-3.409572,-8.311862,-9.978409],[-9.455442,1.444790,4.605584,-8.904042,-5.377245,1.761871,-2.407945,8.061555,-2.621349],[9.938924,-4.730441,-8.015384,5.566947,4.770000,8.270025,4.854798,3.682532,-9.893433],[-3.586005,0.769945,-0.461920,-5.415892,-6.817896,-9.274124,1.191016,8.766116,-5.367907],[9.454634,-6.542202,3.508176,-8.091760,-5.148621,-0.284743,0.548601,1.705743,7.426675],[1.391033,-3.066921,8.763136,-7.920616,-4.020426,-8.036933,-1.968128,-2.990523,-3.381627],[-3.845776,-3.057040,9.940637,0.433437,8.937885,7.686422,7.532637,7.155888,-3.028503],[-8.742611,1.504471,-4.094030,-8.812310,3.733116,-3.036733,-3.597974,4.165434,9.945611],[2.625858,8.563616,7.029893,9.154368,7.234346,-5.902251,-7.954314,0.239241,7.831992],[4.830717,-6.636582,-8.069119,5.614207,8.970985,7.293396,6.788033,-8.738957,-8.021120],[3.253407,-5.639183,-5.312128,1.489109,7.191438,-4.427518,-7.716898,-2.466768,-8.833269],[4.266949,-0.894305,-5.865933,3.655242,-0.606395,-9.076148,6.679313,2.753332,7.400577],[-9.854022,-2.186376,2.929609,-4.779705,-6.406398,-8.356959,3.822202,-7.248800,-1.035682],[-7.448406,-3.632839,2.948287,9.603690,8.241463,-1.518613,-7.511027,8.741314,9.386167]],[[6.122756,-9.203129,-1.583643,-2.305071,2.235020,9.377266,-4.867820,7.143979,8.575391],[5.256829,-3.610462,0.355374,2.300157,9.093776,-3.302785,0.437181,3.816163,0.298011],[-3.468156,3.011610,3.507897,-9.103105,-8.006610,-6.148774,-5.692990,-8.162553,-9.471691],[-0.694792,3.579059,-7.591783,-3.382732,8.031478,-8.273322,5.908827,6.744172,-0.212089],[-2.546072,-3.377957,-0.444081,-7.646917,-1.491618,0.363744,-5.640129,3.473896,-6.617087],[3.353599,0.746142,-9.529227,2.448106,5.996178,-3.114707,8.912437,-2.999109,-1.689207],[2.695298,5.288895,5.978811,-2.879926,-5.251017,-2.176169,-4.641325,1.461053,-1.863585],[1.338364,-1.901492,-7.335274,-9.335593,1.628688,4.948639,8.510133,-0.910513,4.489552],[-3.181747,5.245418,9.103840,4.996168,9.543798,7.824283,-6.009749,9.879719,2.910097],[5.963260,-6.483220,-8.934670,-1.384607,-7.427758,6.383534,5.685267,8.992613,-3.831027],[-8.984030,-1.817657,7.463933,8.639631,-4.999894,-1.411745,2.209233,0.180167,-6.306656],[8.925415,-1.579663,1.589996,1.410397,1.562990,1.827631,8.701927,6.855785,8.788940],[-9.913266,-3.307115,2.584818,-0.791249,-8.595849,-1.704607,-4.144010,-4.016558,5.304154],[-4.871636,-0.583440,-8.476731,3.885210,2.589948,3.030654,6.688523,4.230280,6.546059]],[[-0.485568,8.940440,1.410269,7.442425,-6.790256,-2.394585,9.449999,-8.755239,-8.782149],[3.837638,4.502660,-7.610647,5.159769,-1.032976,8.161723,-0.039146,5.744103,3.954444],[9.945078,-0.932352,-9.088335,-0.814284,4.686136,8.617253,2.669685,-1.286797,4.408381],[3.587548,-1.077909,9.750744,7.993322,-5.252864,-5.598077,-5.102990,-0.747865,0.821260],[2.321366,5.891675,-6.586585,8.816898,4.409111,-9.554108,-6.015609,-2.018235,3.134403],[3.846413,7.869589,-3.194308,7.544074,2.589510,4.843208,-6.444945,-6.451371,-4.614012],[-9.416224,-3.880886,1.994236,-8.069789,7.790575,-2.660013,-2.660685,4.482807,7.857753],[4.286574,-2.806722,1.804939,7.664426,5.857061,6.684550,1.445454,9.942627,1.801396],[-1.286840,-3.246348,-1.945757,1.354234,-4.161096,-0.538606,-7.868585,-6.959084,2.704874],[-5.373733,1.122238,-9.446403,2.169568,-9.272696,-3.124399,3.947568,9.845777,-3.339732],[4.193572,1.485775,-8.444984,2.559746,8.392086,-8.248723,8.198841,-9.698893,-6.767563],[2.164008,-8.724494,-1.605867,-3.519619,5.624710,0.432583,2.566301,9.181182,7.419387],[2.939201,-9.962527,-8.060081,3.086273,-9.627680,7.248645,-1.804178,-7.728976,-4.378345],[7.223831,2.994508,8.395350,-7.212728,1.942036,1.668185,-1.271161,2.490405,2.017783]],[[1.463799,-6.476525,-3.122215,-5.657303,-8.727865,9.374330,7.351746,4.804124,-8.260086],[5.306867,-9.965389,-7.783853,1.610610,-6.883314,-1.170733,0.121801,-6.154137,0.294702],[4.786684,3.916429,-4.911001,-5.617978,-5.123351,-4.856380,-9.278936,6.231767,-3.237211],[-9.865927,-9.906692,8.620514,8.543958,-7.002354,-1.748548,-6.473056,0.570069,4.714224],[4.407483,3.779379,-3.769305,-9.798492,-3.119228,9.601475,0.255164,-0.152310,-4.505093],[-7.285977,-9.876033,3.054494,-3.978484,-2.018255,0.847179,-4.297720,-7.091039,-0.596429],[4.190890,3.715160,9.372508,8.033468,6.626682,-0.445041,5.180203,0.659436,-2.895767],[-1.253051,-7.782087,-1.675302,-5.082957,-2.716833,2.020393,5.124510,2.748077,-2.634783],[7.393089,-3.839985,0.619395,-6.538052,4.152967,4.011508,-5.338530,5.674978,-6.811918],[2.756862,-3.204634,7.232404,-4.937193,-4.246056,-1.529917,-8.792392,-7.094005,-6.570026],[-1.802964,-2.167827,-6.118527,5.105987,1.818324,9.375791,-3.354221,1.729708,6.235678],[-6.059026,1.521568,2.097490,3.813642,-4.329068,-6.748956,-6.573188,1.067138,6.274833],[-1.091334,3.176152,1.154468,5.435841,6.449537,-4.325174,-4.322753,-4.187168,5.628542],[0.131219,-1.753833,2.801842,-3.169721,3.304855,-5.420420,6.561391,4.525979,5.953371]],[[8.421823,-8.896548,5.792646,4.389264,-2.093777,6.747347,-7.535741,-1.462124,-8.842881],[8.406597,6.449704,1.241568,3.847676,-4.215082,5.619933,2.817218,0.214618,0.136049],[-9.495656,-3.363530,-5.206806,9.121335,-4.327996,7.603090,6.588927,4.422042,1.546498],[-4.792912,0.387751,2.536391,-7.183405,2.512122,0.815444,-7.812685,-8.937524,-3.442065],[0.114970,6.678348,8.171487,-7.904638,6.452177,-1.788351,-8.460563,-1.254157,1.852790],[-1.576380,-2.335224,2.714237,-8.242838,-3.667861,-5.787098,-2.700004,-9.256570,6.551676],[-3.937531,-1.555092,1.903688,8.982657,5.884221,7.100094,6.846623,4.960514,-9.777957],[6.414651,-4.334411,1.708928,-5.575723,-1.272371,4.663565,2.670439,-1.520393,7.436782],[-6.372553,0.595195,-2.608897,-7.209709,2.602056,-6.865785,8.735133,-7.338686,6.089088],[-2.419536,2.208944,-0.556488,8.287946,3.414175,4.504374,4.407342,0.643559,0.942655],[-8.368064,2.598989,1.655645,3.169888,-8.364312,2.191871,8.639665,7.507023,-4.934406],[7.873878,6.585521,4.442033,4.740355,-0.246423,-7.928953,6.590116,-2.740135,-4.370195],[-1.073396,-6.790740,5.685227,-1.452815,1.332122,-5.319997,0.085470,6.733672,-3.145441],[4.512226,-5.685267,-2.661838,7.780661,6.523206,-8.702693,-1.432901,0.337479,8.922193]],[[-2.120439,1.220200,-3.955843,2.049633,7.554448,-9.514382,-3.047797,7.517449,-7.435721],[3.561442,2.445204,5.789861,-3.873558,-3.346397,-8.102949,-5.896931,9.762717,-4.687026],[6.844422,2.422415,5.999676,-3.212901,2.904549,-1.258254,7.756873,-2.549108,-1.694668],[7.119323,6.578116,-9.571162,5.154680,-1.944928,-7.829327,-6.010566,-4.331748,-7.114945],[-9.474988,6.813856,-1.767484,5.095880,5.287556,5.504950,1.206993,-0.482827,-8.518011],[-7.262437,-2.859551,8.598611,5.443681,-1.737427,3.504920,2.336155,-3.555156,-1.836540],[-1.323461,-9.788328,5.069261,4.541910,-9.506708,2.550539,-0.967422,7.659934,-6.285249],[7.698130,-3.583098,1.489207,-6.204604,9.984402,-5.663411,-3.224968,0.911197,-9.399845],[-1.634274,6.916448,-9.795268,2.945880,-7.379867,1.215852,0.875753,5.306798,-4.744128],[-8.144663,8.881036,7.708028,6.965005,2.216955,5.372596,8.144257,0.438607,-5.337103],[9.256075,4.021549,-6.719999,-8.527605,1.539525,-9.769904,-9.527256,6.155551,-3.639665],[6.525177,-3.166358,2.693839,1.425932,0.443282,6.493573,-7.759437,8.328014,5.912428],[-5.503162,-2.297947,2.659342,7.778356,9.234397,1.037174,-2.357895,8.997250,8.181558],[-8.606895,6.589854,-3.908465,7.250075,0.541488,-5.597595,5.518253,-4.150202,-2.066857]],[[-7.109395,4.342851,-1.566819,6.089578,-2.266734,6.412483,3.414444,-7.872229,3.868283],[-5.765392,5.384760,-7.813714,-5.195850,-6.311926,6.348681,-0.629452,-1.943962,5.055810],[-5.793899,3.021764,3.016011,6.544718,-4.818663,3.585865,-1.581638,0.863054,6.674123],[3.504129,9.073725,-2.866822,-2.607186,-9.610928,-9.406750,-3.782268,-8.730535,4.080094],[-9.085467,8.830242,-8.480114,1.914657,-9.200910,-7.486879,-5.211509,1.788592,2.055868],[-0.662851,-9.794494,6.408474,-4.413615,2.726495,1.950396,-8.712625,2.801029,6.007754],[-4.050661,-8.191580,1.542955,-2.905242,-8.764101,1.203520,4.931833,-2.907326,-4.466030],[-0.645094,5.135306,4.649693,9.482389,-0.184554,5.778344,-0.816555,-3.630909,-3.437601],[-6.730113,3.778536,-0.027507,-7.198811,-1.248587,7.480685,-7.561688,4.362172,-2.467072],[3.905499,-9.239923,-8.698671,5.146179,5.506256,-1.398584,5.515483,-8.730138,5.625400],[8.254910,-5.897929,-3.645863,-6.126425,-3.482779,-3.011055,-1.320618,-1.922985,-7.988742],[9.187179,7.839901,9.549401,-3.807852,-3.509730,-9.678699,-1.849774,-3.035744,7.704748],[-3.921756,1.256994,-2.047175,5.671398,4.564188,5.010648,6.666743,1.359856,-2.145974],[-9.915450,4.370337,3.643535,-1.239393,4.684558,6.546889,-2.651634,-8.890812,-6.644020]]], dtype = "float64")#candidate|1596|(14, 14, 9)|const|float64
uop_1597 = relay.log(const_1596.astype('float64')) # shape=(14, 14, 9)
output = relay.Tuple([uop_1597,])
output2 = relay.Tuple([uop_1597,])
func_1605 = relay.Function([], output)
mod['func_1605'] = func_1605
mod = relay.transform.InferType()(mod)
output = func_1605()
func_1606 = relay.Function([], output)
mutated_mod['func_1606'] = func_1606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1605_call = mod.get_global_var('func_1605')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_1612 = relay.TupleGetItem(func_1605_call(), 0)
call_1613 = relay.TupleGetItem(func_1606_call(), 0)
func_46_call = mod.get_global_var('func_46')
func_48_call = mutated_mod.get_global_var('func_48')
const_1615 = relay.const([-0.089072,7.338433,9.612495,4.602617,7.045712,7.511921,-3.626445,8.157123,-1.884634,2.455667,4.630329,-6.298908,-0.830454,5.758418,-5.104591,2.028928,-4.560500,3.513887,9.801630,8.828240,-1.622170,5.625283,2.481736,2.110747,4.216047,1.775116,7.444786,8.792370,0.519598,-3.938553,-9.815971,-8.324686,-4.243421,-2.795231,-6.891363,2.396914,8.934511,-6.183519,1.158721,-4.103558,-6.104034,7.393526,7.826238,2.947967,5.148772,-9.472831,0.698334,2.473729,-5.862058,1.114799,5.741219,2.965361,0.060906,0.315992,1.067672,2.403667,-8.656741,-1.914168,2.279640,-1.478626], dtype = "float32")#candidate|1615|(60,)|const|float32
call_1614 = relay.TupleGetItem(func_46_call(relay.reshape(const_1615.astype('float32'), [6, 10, 1])), 0)
call_1616 = relay.TupleGetItem(func_48_call(relay.reshape(const_1615.astype('float32'), [6, 10, 1])), 0)
func_1090_call = mod.get_global_var('func_1090')
func_1093_call = mutated_mod.get_global_var('func_1093')
var_1623 = relay.var("var_1623", dtype = "float32", shape = (2160,))#candidate|1623|(2160,)|var|float32
call_1622 = func_1090_call(relay.reshape(var_1623.astype('float32'), [15, 12, 12]), relay.reshape(var_1623.astype('float32'), [15, 12, 12]), )
call_1624 = func_1090_call(relay.reshape(var_1623.astype('float32'), [15, 12, 12]), relay.reshape(var_1623.astype('float32'), [15, 12, 12]), )
func_1605_call = mod.get_global_var('func_1605')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_1636 = relay.TupleGetItem(func_1605_call(), 0)
call_1637 = relay.TupleGetItem(func_1606_call(), 0)
output = relay.Tuple([call_1612,call_1614,const_1615,call_1622,var_1623,call_1636,])
output2 = relay.Tuple([call_1613,call_1616,const_1615,call_1624,var_1623,call_1637,])
func_1640 = relay.Function([var_1623,], output)
mod['func_1640'] = func_1640
mod = relay.transform.InferType()(mod)
var_1641 = relay.var("var_1641", dtype = "float32", shape = (2160,))#candidate|1641|(2160,)|var|float32
output = func_1640(var_1641)
func_1642 = relay.Function([var_1641], output)
mutated_mod['func_1642'] = func_1642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1605_call = mod.get_global_var('func_1605')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_1659 = relay.TupleGetItem(func_1605_call(), 0)
call_1660 = relay.TupleGetItem(func_1606_call(), 0)
output = relay.Tuple([call_1659,])
output2 = relay.Tuple([call_1660,])
func_1673 = relay.Function([], output)
mod['func_1673'] = func_1673
mod = relay.transform.InferType()(mod)
mutated_mod['func_1673'] = func_1673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1673_call = mutated_mod.get_global_var('func_1673')
call_1674 = func_1673_call()
output = call_1674
func_1675 = relay.Function([], output)
mutated_mod['func_1675'] = func_1675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1605_call = mod.get_global_var('func_1605')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_1722 = relay.TupleGetItem(func_1605_call(), 0)
call_1723 = relay.TupleGetItem(func_1606_call(), 0)
func_1605_call = mod.get_global_var('func_1605')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_1729 = relay.TupleGetItem(func_1605_call(), 0)
call_1730 = relay.TupleGetItem(func_1606_call(), 0)
output = relay.Tuple([call_1722,call_1729,])
output2 = relay.Tuple([call_1723,call_1730,])
func_1734 = relay.Function([], output)
mod['func_1734'] = func_1734
mod = relay.transform.InferType()(mod)
mutated_mod['func_1734'] = func_1734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1734_call = mutated_mod.get_global_var('func_1734')
call_1735 = func_1734_call()
output = call_1735
func_1736 = relay.Function([], output)
mutated_mod['func_1736'] = func_1736
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1757 = relay.var("var_1757", dtype = "float64", shape = (13, 5, 8))#candidate|1757|(13, 5, 8)|var|float64
uop_1758 = relay.log10(var_1757.astype('float64')) # shape=(13, 5, 8)
output = relay.Tuple([uop_1758,])
output2 = relay.Tuple([uop_1758,])
func_1769 = relay.Function([var_1757,], output)
mod['func_1769'] = func_1769
mod = relay.transform.InferType()(mod)
var_1770 = relay.var("var_1770", dtype = "float64", shape = (13, 5, 8))#candidate|1770|(13, 5, 8)|var|float64
output = func_1769(var_1770)
func_1771 = relay.Function([var_1770], output)
mutated_mod['func_1771'] = func_1771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1734_call = mod.get_global_var('func_1734')
func_1736_call = mutated_mod.get_global_var('func_1736')
call_1781 = relay.TupleGetItem(func_1734_call(), 1)
call_1782 = relay.TupleGetItem(func_1736_call(), 1)
func_642_call = mod.get_global_var('func_642')
func_647_call = mutated_mod.get_global_var('func_647')
var_1788 = relay.var("var_1788", dtype = "bool", shape = (36,))#candidate|1788|(36,)|var|bool
const_1789 = relay.const([True,True,True,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,True], dtype = "bool")#candidate|1789|(72,)|const|bool
const_1790 = relay.const([[-4.029381,6.737616],[-8.037138,-6.363059],[-8.438462,-6.192658],[6.476847,9.808281],[-9.736187,4.805755],[4.769567,9.545969],[-6.966418,-3.013400],[9.867831,-9.142132],[-7.013583,6.407267],[-0.434904,2.952984],[-3.686155,-5.026201],[5.435793,5.689136],[-9.217874,9.748742],[-0.528629,-9.977531],[4.122428,0.802700],[5.142699,-7.815297],[-0.074450,-4.133767],[2.934347,6.683792],[4.518611,9.716869],[6.279445,4.981805],[3.800732,-6.665780],[7.997348,5.879071],[6.262373,0.088434],[-5.843128,7.190286],[8.384969,-8.631404],[3.688091,3.055189],[3.719484,2.200275],[0.262393,4.437553],[3.838088,-3.057265],[-0.081374,0.212592]], dtype = "float32")#candidate|1790|(30, 2)|const|float32
call_1787 = relay.TupleGetItem(func_642_call(relay.reshape(var_1788.astype('bool'), [1, 12, 3]), relay.reshape(const_1789.astype('bool'), [2, 12, 3]), relay.reshape(const_1790.astype('float32'), [60,]), ), 0)
call_1791 = relay.TupleGetItem(func_647_call(relay.reshape(var_1788.astype('bool'), [1, 12, 3]), relay.reshape(const_1789.astype('bool'), [2, 12, 3]), relay.reshape(const_1790.astype('float32'), [60,]), ), 0)
output = relay.Tuple([call_1781,call_1787,var_1788,const_1789,const_1790,])
output2 = relay.Tuple([call_1782,call_1791,var_1788,const_1789,const_1790,])
func_1802 = relay.Function([var_1788,], output)
mod['func_1802'] = func_1802
mod = relay.transform.InferType()(mod)
mutated_mod['func_1802'] = func_1802
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1803 = relay.var("var_1803", dtype = "bool", shape = (36,))#candidate|1803|(36,)|var|bool
func_1802_call = mutated_mod.get_global_var('func_1802')
call_1804 = func_1802_call(var_1803)
output = call_1804
func_1805 = relay.Function([var_1803], output)
mutated_mod['func_1805'] = func_1805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1673_call = mod.get_global_var('func_1673')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_1807 = relay.TupleGetItem(func_1673_call(), 0)
call_1808 = relay.TupleGetItem(func_1675_call(), 0)
output = relay.Tuple([call_1807,])
output2 = relay.Tuple([call_1808,])
func_1811 = relay.Function([], output)
mod['func_1811'] = func_1811
mod = relay.transform.InferType()(mod)
output = func_1811()
func_1812 = relay.Function([], output)
mutated_mod['func_1812'] = func_1812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1673_call = mod.get_global_var('func_1673')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_1827 = relay.TupleGetItem(func_1673_call(), 0)
call_1828 = relay.TupleGetItem(func_1675_call(), 0)
uop_1830 = relay.log10(call_1827.astype('float32')) # shape=(14, 14, 9)
uop_1832 = relay.log10(call_1828.astype('float32')) # shape=(14, 14, 9)
func_1769_call = mod.get_global_var('func_1769')
func_1771_call = mutated_mod.get_global_var('func_1771')
var_1843 = relay.var("var_1843", dtype = "float64", shape = (5, 104))#candidate|1843|(5, 104)|var|float64
call_1842 = relay.TupleGetItem(func_1769_call(relay.reshape(var_1843.astype('float64'), [13, 5, 8])), 0)
call_1844 = relay.TupleGetItem(func_1771_call(relay.reshape(var_1843.astype('float64'), [13, 5, 8])), 0)
output = relay.Tuple([uop_1830,call_1842,var_1843,])
output2 = relay.Tuple([uop_1832,call_1844,var_1843,])
func_1845 = relay.Function([var_1843,], output)
mod['func_1845'] = func_1845
mod = relay.transform.InferType()(mod)
mutated_mod['func_1845'] = func_1845
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1846 = relay.var("var_1846", dtype = "float64", shape = (5, 104))#candidate|1846|(5, 104)|var|float64
func_1845_call = mutated_mod.get_global_var('func_1845')
call_1847 = func_1845_call(var_1846)
output = call_1847
func_1848 = relay.Function([var_1846], output)
mutated_mod['func_1848'] = func_1848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1811_call = mod.get_global_var('func_1811')
func_1812_call = mutated_mod.get_global_var('func_1812')
call_1882 = relay.TupleGetItem(func_1811_call(), 0)
call_1883 = relay.TupleGetItem(func_1812_call(), 0)
uop_1892 = relay.acosh(call_1882.astype('float32')) # shape=(14, 14, 9)
uop_1894 = relay.acosh(call_1883.astype('float32')) # shape=(14, 14, 9)
func_1734_call = mod.get_global_var('func_1734')
func_1736_call = mutated_mod.get_global_var('func_1736')
call_1902 = relay.TupleGetItem(func_1734_call(), 1)
call_1903 = relay.TupleGetItem(func_1736_call(), 1)
output = relay.Tuple([uop_1892,call_1902,])
output2 = relay.Tuple([uop_1894,call_1903,])
func_1908 = relay.Function([], output)
mod['func_1908'] = func_1908
mod = relay.transform.InferType()(mod)
output = func_1908()
func_1909 = relay.Function([], output)
mutated_mod['func_1909'] = func_1909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1811_call = mod.get_global_var('func_1811')
func_1812_call = mutated_mod.get_global_var('func_1812')
call_1929 = relay.TupleGetItem(func_1811_call(), 0)
call_1930 = relay.TupleGetItem(func_1812_call(), 0)
output = relay.Tuple([call_1929,])
output2 = relay.Tuple([call_1930,])
func_1952 = relay.Function([], output)
mod['func_1952'] = func_1952
mod = relay.transform.InferType()(mod)
output = func_1952()
func_1953 = relay.Function([], output)
mutated_mod['func_1953'] = func_1953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1952_call = mod.get_global_var('func_1952')
func_1953_call = mutated_mod.get_global_var('func_1953')
call_1977 = relay.TupleGetItem(func_1952_call(), 0)
call_1978 = relay.TupleGetItem(func_1953_call(), 0)
output = relay.Tuple([call_1977,])
output2 = relay.Tuple([call_1978,])
func_1997 = relay.Function([], output)
mod['func_1997'] = func_1997
mod = relay.transform.InferType()(mod)
mutated_mod['func_1997'] = func_1997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1997_call = mutated_mod.get_global_var('func_1997')
call_1998 = func_1997_call()
output = call_1998
func_1999 = relay.Function([], output)
mutated_mod['func_1999'] = func_1999
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2017 = relay.var("var_2017", dtype = "int64", shape = (16, 6, 9))#candidate|2017|(16, 6, 9)|var|int64
var_2018 = relay.var("var_2018", dtype = "int64", shape = (16, 6, 9))#candidate|2018|(16, 6, 9)|var|int64
bop_2019 = relay.minimum(var_2017.astype('int64'), relay.reshape(var_2018.astype('int64'), relay.shape_of(var_2017))) # shape=(16, 6, 9)
output = bop_2019
output2 = bop_2019
func_2025 = relay.Function([var_2017,var_2018,], output)
mod['func_2025'] = func_2025
mod = relay.transform.InferType()(mod)
mutated_mod['func_2025'] = func_2025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2025_call = mutated_mod.get_global_var('func_2025')
var_2027 = relay.var("var_2027", dtype = "int64", shape = (16, 6, 9))#candidate|2027|(16, 6, 9)|var|int64
var_2028 = relay.var("var_2028", dtype = "int64", shape = (16, 6, 9))#candidate|2028|(16, 6, 9)|var|int64
call_2026 = func_2025_call(var_2027,var_2028,)
output = call_2026
func_2029 = relay.Function([var_2027,var_2028,], output)
mutated_mod['func_2029'] = func_2029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1605_call = mod.get_global_var('func_1605')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_2075 = relay.TupleGetItem(func_1605_call(), 0)
call_2076 = relay.TupleGetItem(func_1606_call(), 0)
func_1802_call = mod.get_global_var('func_1802')
func_1805_call = mutated_mod.get_global_var('func_1805')
const_2091 = relay.const([True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,True], dtype = "bool")#candidate|2091|(36,)|const|bool
call_2090 = relay.TupleGetItem(func_1802_call(relay.reshape(const_2091.astype('bool'), [36,])), 3)
call_2092 = relay.TupleGetItem(func_1805_call(relay.reshape(const_2091.astype('bool'), [36,])), 3)
func_1640_call = mod.get_global_var('func_1640')
func_1642_call = mutated_mod.get_global_var('func_1642')
const_2105 = relay.const([0.080510,-9.755435,-2.107962,-2.534589,4.150661,2.155770,-9.697470,-2.385265,0.328573,-5.370201,-1.341173,5.133407,-4.786145,8.759744,-4.799799,-5.749340,-2.235951,-9.985916,1.292519,-6.388408,0.313274,-3.327060,-5.559814,6.954933,9.200276,-0.974322,5.336160,6.287825,-2.468054,6.888681,-6.887094,5.657927,7.007241,0.588236,-2.480766,6.368609,7.044887,6.041233,-4.627525,-9.614584,-5.324034,2.785029,-7.404040,2.756437,8.253400,8.949747,3.209271,2.425528,-9.438967,4.783103,-0.762340,-4.373149,-0.755635,7.884589,-3.811816,7.089032,-9.413392,-6.624055,9.948018,-1.649105,8.652773,-9.740215,-7.878271,6.659558,8.413970,4.528274,4.821377,8.789884,1.868694,5.315259,-3.892835,-5.410354,7.225429,9.062649,3.435521,-1.440303,0.220874,3.348233,-4.053535,-1.416822,4.940604,8.044545,-8.889737,9.950126,4.291527,8.696915,7.340706,-8.474657,9.491637,3.604202,4.132474,8.530565,-9.517697,-3.006180,6.844687,-3.904455,-4.017098,2.762151,2.443945,-8.114104,0.748501,-7.358839,-0.846357,-5.820513,2.654461,-7.837127,4.204758,5.763001,-9.424493,-1.866302,4.569540,-0.885061,-9.008796,-1.583174,-9.267053,-3.019132,-6.107394,-3.176907,2.328978,-8.703091,-4.578659,-9.352990,-5.642235,-6.694675,0.379052,-7.880516,4.235977,9.855814,9.026987,0.270500,-6.008290,4.353685,9.762723,8.285759,-7.897511,9.544775,-7.621407,-5.679955,5.737369,6.338620,2.294101,3.782363,8.685499,-4.969124,-1.015843,-7.208013,6.704863,-4.313169,-6.616122,-6.312802,0.826922,0.650754,9.076143,9.597788,-7.919523,2.130414,-5.643216,4.240863,5.565263,-8.801091,2.330442,9.258001,9.889995,7.927373,1.017666,-4.513730,3.951238,7.704366,-7.541325,-3.106270,1.297837,-6.881077,-5.529641,3.957659,-3.923354,-7.570555,1.122031,-1.110834,2.447602,-0.533014,2.620400,1.387940,-9.229911,8.742339,7.063322,-7.140608,-0.822101,4.626961,-0.115533,-8.783706,-4.804195,-5.402792,-4.928984,-1.484040,6.526113,5.246455,-6.387653,3.511982,9.300198,5.749013,-9.022085,5.104204,-6.560092,-2.508812,-2.231505,7.012602,7.990810,-0.082577,1.028260,9.406323,1.487381,9.519956,4.525616,-0.401252,-5.637345,-2.101738,3.314109,4.266843,-2.440933,-7.353796,-5.232675,2.472831,-1.683822,-0.029044,4.389619,-6.352402,-3.376620,-8.194557,-0.404097,-0.252770,-1.585131,-5.367405,-4.321311,9.557512,2.694906,5.506009,-9.182062,6.595450,-7.634007,-3.420417,3.131222,-8.813249,-7.402361,5.209853,-6.056125,3.589609,-3.697524,-3.513994,2.782579,6.904895,-8.420029,8.347084,-4.192089,2.944875,-4.295111,-0.924316,-6.376702,0.861996,7.527305,1.332540,-5.938703,-1.999457,-2.421495,2.353923,-5.970272,-2.219157,-5.614430,1.128639,-2.165969,5.233347,-5.085965,-0.733728,3.628316,-5.588494,2.300565,-7.996549,-3.255460,-1.525892,1.929030,1.438314,0.231672,-9.504735,9.024619,-7.644623,-4.858364,-0.988596,4.108636,2.788282,-1.847357,9.517404,-6.028492,5.158605,-6.048397,7.828949,3.237377,4.435673,5.273857,-2.527737,-0.824551,-5.230968,0.151336,2.465918,-4.785034,5.017617,-1.167255,-1.410277,-7.033367,-7.318938,8.617468,-1.618921,-3.494691,0.761852,-0.745696,-9.834982,-2.182043,2.172895,8.158376,-2.551713,-0.807381,-1.098434,-7.408025,3.654789,-9.134584,6.956468,1.679521,-5.695474,-0.837234,4.754708,-6.993483,3.155557,9.077931,-4.100029,8.121035,-0.588951,-9.167031,4.305768,5.150158,7.295478,-0.164491,6.302959,-2.410538,9.140128,-0.616630,1.217546,-4.349179,2.172491,-6.524965,-7.916321,9.089962,2.640391,7.077430,-1.481329,0.265974,-1.959487,8.663339,5.229183,7.124858,-1.250076,-4.085089,-2.846972,-0.341776,-0.643632,6.860315,-4.786367,4.615858,-2.833818,-2.924150,3.109120,-9.938423,3.907936,7.812865,-7.126101,7.589398,-4.948142,-6.340522,-5.108066,7.398598,7.002973,4.652987,2.526898,8.119212,0.303226,-2.608470,2.526756,-8.178241,-1.688607,-6.652728,9.224764,0.950985,1.558052,-0.243912,-3.355844,-6.496801,1.721237,-5.029639,-9.519798,-7.237807,0.272513,-7.705550,-7.519102,-2.631121,-1.704167,1.307752,-9.086330,-3.898260,-8.848609,-8.884815,-5.781673,4.511424,-3.531692,-1.800697,6.411157,2.136624,0.493355,-3.262410,-3.176549,1.944097,3.930506,-1.732612,5.683185,8.411025,-0.334873,4.087065,-5.807252,-5.252707,-2.462432,9.394835,4.095690,-5.946268,-2.828588,-0.235655,0.281717,5.734194,-8.872669,0.120729,-7.361248,-6.393536,-5.869246,0.608842,-4.727423,1.831050,-1.829994,-9.416421,2.077666,2.451229,4.082452,1.139467,3.005064,3.324639,-5.024106,6.408529,3.883238,7.046116,1.949535,-5.700818,-2.406666,-2.677727,-9.559243,5.943560,-5.570680,1.855918,-2.040773,-1.995863,-3.047580,-9.733789,-4.477856,4.706799,2.795991,5.663539,-3.478693,-0.134645,-3.223230,4.497071,1.303221,-9.648543,7.905643,-7.542931,-6.281137,1.732767,-4.973715,-4.465834,-1.022275,9.758480,-0.782072,-4.255506,-6.018719,-7.241704,-4.098774,-1.801373,-5.217116,2.350237,-4.556132,5.412484,-6.712206,1.468685,-9.626230,-2.768666,-4.362682,-8.925998,-1.563766,0.606659,2.786330,5.861730,5.399461,-8.725534,4.519272,-8.010983,1.494096,-6.490694,-5.611909,-9.161297,1.708908,7.584048,-0.031737,9.918938,4.818431,-2.008353,-4.522120,-2.363661,2.141111,3.837516,-5.299281,-2.079455,2.522443,4.318760,7.801872,4.499011,-1.201458,-3.622753,-6.709922,-3.477575,-5.572138,5.327641,-9.605788,-4.760792,-9.672030,-6.408321,3.096325,-0.687012,-7.330616,5.131152,0.183400,-3.606852,5.822452,8.926124,-7.423795,3.820710,-5.048814,1.212860,-7.523086,-1.924533,5.295003,4.372816,7.782283,-3.152960,-0.462238,8.665262,-0.304461,5.864864,-1.757544,5.499476,-4.555228,7.887348,6.805858,-2.501824,7.691266,-5.791491,7.749250,9.081160,7.670993,-7.942364,0.737462,-4.884142,-1.255737,-1.276076,-8.629906,3.014885,-1.999280,8.656312,-0.584475,-2.569877,-3.711741,-0.490156,-9.481226,-1.293968,9.158907,2.204219,8.379119,-1.011014,-0.896695,-5.107862,4.777715,7.809356,7.698647,2.433343,-8.338831,9.336463,4.921049,4.162834,8.573074,1.700087,-2.866889,-5.001603,-3.937979,1.771863,1.446133,2.969271,-9.041318,-0.100056,1.950721,7.340706,2.556788,-3.621577,-7.534694,0.564633,-9.863195,8.701451,1.113009,-5.566248,-5.402506,-0.643041,7.847013,-0.812705,4.536145,7.596525,8.714360,-8.965744,7.732383,2.041916,-0.312384,-4.515748,9.018331,-0.039584,9.197256,6.623919,-6.231819,6.221451,1.281229,7.610372,-0.442625,-2.904257,8.789041,5.181888,0.857274,7.020625,9.717735,-7.919051,3.661989,8.438304,2.290271,-5.471897,2.598055,-6.672541,-2.641236,8.572573,-7.875493,-2.723068,-4.559382,8.571160,-1.731891,-1.933558,-6.019126,-9.054048,5.509537,-6.735315,-1.304135,-4.142770,-9.118812,5.195619,8.236068,8.187690,-4.278250,3.750931,8.703772,-8.151249,8.049537,6.831899,-1.245230,8.981411,-1.837411,-4.697335,0.103729,-0.307133,9.644620,-8.092839,-0.705956,5.907892,0.789837,0.892047,0.117218,-1.090643,-4.974191,-6.371504,2.655380,-2.655389,7.033447,8.821007,-3.140208,-2.994679,3.285258,-4.960234,-9.805936,-0.899479,-3.161573,7.823405,9.977758,6.018296,9.624103,-6.156450,5.474078,-4.810142,-4.118161,3.709083,8.335661,-0.579718,-7.353395,-1.299870,-7.755422,-2.179180,1.097315,-2.635294,9.756065,-5.674703,6.732287,-6.152395,-0.820226,7.595160,-3.702401,2.649141,-1.099982,-7.072919,-0.563816,-7.345004,8.463327,6.453944,-4.649414,9.524670,6.213255,-8.569603,1.756522,-7.084118,-2.155216,-1.678776,-6.422662,-0.428254,7.984169,-5.577330,-6.581843,3.849900,0.889463,-6.616573,-1.097138,-2.962181,2.318532,3.299914,5.098357,-4.328021,8.764652,-7.533050,-3.122741,5.327862,2.155156,5.484321,-0.636428,8.178717,-3.911694,7.498789,6.645754,-5.495107,-2.816991,8.658010,2.088396,5.553568,-9.211652,6.509781,7.421496,8.929280,-2.914254,-5.594443,2.785396,-2.147478,3.835887,-9.529917,1.176586,7.540880,-2.600731,7.014055,3.382190,6.772229,-9.843245,-0.310237,7.121004,-5.155876,6.558313,-1.008177,-7.731557,-0.568438,-4.722564,2.736162,9.969962,7.380725,3.485622,-5.093639,-0.423779,0.673517,-9.420032,-4.253896,1.872013,7.335386,4.609519,7.282180,-2.856358,2.624718,-8.218190,1.140466,4.333588,-3.629543,9.674075,4.506345,-1.189399,2.990504,7.032652,-4.980508,-9.612966,7.280439,8.867486,-5.767949,-3.200153,-1.312065,-2.107572,-3.033612,-8.234879,-5.577493,5.904959,3.732085,-0.948942,-2.071401,-2.841979,-8.682464,-1.817977,-1.325749,-3.247366,-2.450260,-9.454160,-3.992823,-1.895171,5.761138,4.891184,-6.923898,6.494882,-8.957034,-2.273253,6.072964,2.530732,-0.800666,7.400771,4.312276,0.569019,-9.562042,-0.778959,-9.226237,-5.401580,8.182608,8.489521,-0.145117,-6.406595,8.723295,-4.054033,8.081547,-8.558558,2.106358,9.605308,-3.029569,-2.208253,-4.956389,7.963958,8.859019,-9.135134,0.932590,4.942967,8.183827,-3.304765,-6.300337,1.820738,-2.499858,2.264031,-1.717551,-2.102883,7.267278,2.660125,4.863636,-4.897058,-4.014307,1.869654,1.399567,-3.684612,-0.199172,7.113885,6.429535,4.160220,-1.966312,8.267672,4.297825,5.022198,1.174527,-8.717819,9.282052,9.909447,-6.966591,5.500722,5.267728,-0.187264,-3.722148,7.509336,-1.320855,3.143518,0.776612,1.982091,-1.545615,-5.990071,-8.710951,-6.245186,7.369430,1.626435,0.536626,7.829612,-5.440262,-4.621053,2.748229,-4.990225,-8.016005,6.858972,0.436850,-0.346949,9.711066,4.770091,-0.689913,-6.329098,9.882334,2.914800,-8.088163,-0.525800,-9.060600,-4.733986,-2.597373,2.226352,-4.910125,-7.212988,-0.347386,-3.318569,0.471971,6.811212,3.549893,-5.559608,0.186348,8.930316,-6.866019,3.563955,3.426120,4.758540,-5.466658,-0.889487,3.944689,-6.019356,-8.612178,8.309875,-2.718371,2.570568,-6.426546,6.559252,6.445941,-9.430186,-4.373952,-7.373646,6.204912,1.525979,-1.079031,-6.462387,-9.984922,0.249973,3.878994,7.812309,8.011990,-8.385574,-8.215198,-5.908913,-2.283014,4.677792,-1.778065,-0.423014,5.638241,4.742563,-2.722531,7.889105,4.770110,6.452663,-4.314873,-7.476449,8.715417,9.477867,-1.182529,8.363289,-0.030282,5.034269,-0.903632,-8.736528,2.697603,2.895503,-1.409112,9.070949,-2.143319,-3.331736,3.071346,-9.252326,7.270291,-2.958271,1.469795,3.651916,-2.184136,-6.190328,-0.603641,6.839779,8.084839,9.677145,8.647685,4.151653,8.704466,-5.754180,-6.569975,9.644777,6.321537,-1.808560,4.018272,-3.083252,-0.183891,-9.413329,-6.774311,2.582847,8.686177,2.567502,1.410339,-3.190729,-6.820848,9.266954,8.491926,0.150272,-7.303127,-3.031038,1.405386,4.731036,0.955986,-5.091684,9.162573,3.845619,6.778830,-6.355708,7.219665,9.671403,2.650502,7.751217,-6.526261,2.169569,-2.768604,-8.579488,9.292182,7.626622,-4.886602,-5.328581,3.974115,-4.222897,-8.467179,8.717863,8.561568,5.791704,9.236014,2.180858,1.962338,-8.730563,-7.901714,0.938719,4.510590,4.335733,1.829954,4.574711,7.437202,1.196818,-3.269823,-8.980655,8.414427,3.396857,-8.710305,-6.062737,5.555544,3.060089,-7.138876,7.086922,5.984875,0.066230,-0.796323,-6.145493,-1.375686,0.289430,-3.023659,-0.012884,-4.534887,9.668160,-4.681243,-9.256960,-4.038965,-0.085831,2.281759,-5.921684,-4.075100,1.141217,8.341665,-5.967623,3.457080,-4.395967,1.094309,1.186512,-4.894095,-6.244678,1.488345,3.926212,-5.571453,-2.536217,1.134694,5.105664,-9.114793,7.987143,-2.081247,5.858523,4.136695,4.976734,-0.862653,-3.354094,8.425923,3.759791,-2.937170,6.462255,-6.501565,-0.720772,-8.549724,1.743994,-3.871921,-6.880860,8.920199,-6.652216,-9.959340,0.960320,-6.234040,7.416882,2.090324,-3.938478,5.974816,-6.912252,9.599597,-7.065445,-1.430271,-5.316515,-8.846996,1.507107,-3.010075,-6.123577,-0.550723,9.885369,-8.700458,-2.134790,-0.056302,0.567351,-3.243317,1.167158,-4.766169,-5.695602,-7.067576,7.045677,1.086577,-3.923256,-7.625745,-0.284767,-6.284576,9.451623,7.416016,-4.821279,4.737416,6.576082,-1.818118,4.948176,-7.844120,1.628287,2.996867,2.962005,-5.989443,-8.964445,6.803844,5.430863,6.641323,-3.064748,-7.062327,-4.551289,-1.669649,-8.611829,-8.372931,7.648641,9.002214,7.259687,0.490937,7.740086,-2.737561,-9.225073,3.674824,-5.424448,-8.467875,2.563368,1.458205,-9.496452,9.994854,-0.982166,5.460926,3.525633,8.804984,9.215642,4.121575,-5.408412,-3.448336,1.745659,-3.962265,-5.793014,-7.274230,3.004070,5.727116,6.045829,-0.222500,2.990432,1.308233,-3.591535,2.643197,7.497947,4.122460,1.747424,-4.934614,4.681224,-1.564461,-2.741164,4.866482,-2.839388,0.490666,0.672435,-7.712489,4.963323,4.120716,-0.843048,1.116574,-3.343149,9.190810,7.313093,-5.765311,-1.903407,-4.032217,-0.414116,-1.842746,6.062861,-8.419529,-7.311024,2.977972,3.753650,9.148998,1.234517,3.892404,9.205795,0.884755,4.849084,6.926452,-1.861673,-0.168101,7.606635,-3.865900,-9.540407,-2.058820,2.226281,7.735074,-7.529598,-3.669040,4.968826,1.068667,-1.598849,6.564979,3.721779,5.152675,8.686206,-4.263228,-7.868988,3.372522,8.020175,0.045121,6.748025,1.136136,-8.430827,4.990418,-2.695456,-8.709215,-3.285525,-6.570737,1.895038,7.871053,8.464013,6.036990,-0.950246,-2.330677,-5.710738,-9.005429,-3.769899,-8.667811,2.088080,4.980106,-5.643279,-7.387545,6.932722,-9.634645,-8.819552,4.963676,0.600023,-0.902513,3.764222,-2.048792,-0.766572,2.449292,-7.048743,9.190805,-0.756372,3.381087,3.011655,1.904594,-7.975286,8.726382,8.498908,-3.537630,9.112099,8.641632,-5.776464,7.830900,-7.586612,9.312407,-9.817549,8.600688,7.873221,1.889712,-7.881014,-3.543340,9.349226,-3.642015,-0.160153,5.021014,0.788664,7.968120,-8.116610,-4.597713,6.220468,-7.951180,6.871858,-5.341563,-0.835642,2.869415,-8.539352,-1.375843,7.547028,3.696962,3.851846,7.891214,5.877232,-7.843185,0.784402,-4.603479,6.798416,-7.824580,-7.849601,2.594181,7.475720,-8.922602,-0.339925,1.979347,7.985828,-7.782438,2.903590,4.655219,-6.712157,4.044394,-9.288621,-4.662847,-3.671801,-5.478116,-3.449359,5.055690,-7.022646,0.030684,-3.141503,-3.868750,7.235166,6.673923,6.816404,8.538864,-4.342183,8.525256,8.663350,-7.270939,0.589613,-8.789138,6.151881,5.603946,3.331807,-9.853132,4.164612,7.619900,1.353159,2.705828,8.259270,-2.006612,7.463739,0.124277,-4.501751,-8.217733,-1.469016,2.816356,3.489463,-9.706086,8.051391,-7.747199,6.809999,-9.449196,-0.842905,7.186575,-6.307959,-4.117577,-6.260677,-3.238538,7.183282,-5.326428,-3.784028,2.038658,-8.843591,-6.629460,0.804605,-7.550117,0.285745,4.619533,-0.327742,9.141369,4.613594,2.491887,4.468143,-1.713298,-3.738913,9.213564,-9.959017,-2.510777,-1.580852,-8.738709,-5.901943,-0.338326,1.996340,7.466519,1.615756,9.278105,-4.912714,-0.678855,-5.089254,5.858926,0.464217,5.241058,5.121660,-0.454466,6.894389,9.246136,5.827380,2.946515,-9.009414,-3.013951,1.100923,-1.909862,-1.929036,-8.286158,6.140497,-9.682996,-6.448922,-8.171491,0.829449,8.153518,8.039461,-7.796424,-6.288042,-5.821027,3.711500,-0.350833,-1.746519,-5.644721,4.696107,1.148596,-5.360397,4.624829,-0.624376,0.954977,-3.854461,-7.772113,1.162542,-3.046982,-6.559639,-0.116617,-7.755183,-5.324159,5.572977,2.596288,1.568733,3.278549,-1.660773,-6.534160,-3.022484,2.849607,-5.928357,0.105155,-3.257062,-1.020251,-0.750283,-1.796114,9.955140,8.065987,-2.172755,-4.640638,2.811837,4.992147,-3.715278,-4.634056,4.311909,-6.487450,7.647475,-8.031877,3.087220,-8.477551,4.569928,-8.296803,-5.395506,-1.452253,2.878304,-9.788992,-7.683667,-7.312948,-7.469298,-7.036173,-6.828885,2.385176,-1.867555,-5.187037,-0.861641,6.140412,3.596397,0.529526,0.922064,-4.941523,-5.138202,3.645521,1.749412,6.285856,5.573713,6.735534,-5.034238,8.851243,-1.845748,3.907515,4.045976,0.364552,-1.408495,-2.981140,-2.050474,-9.461086,0.327149,9.021712,-3.679976,-0.047071,-8.793003,2.242438,3.006502,5.227917,-4.637005,-8.122823,2.599212,2.324268,-8.526881,8.669584,-6.601819,9.874143,-8.529623,-0.546115,-3.616953,-6.355935,0.485777,0.399733,-3.755873,-8.856310,5.436457,-6.214628,-0.597790,9.312317,2.933533,7.422049,-7.118572,-3.790805,-7.182394,8.842072,1.731704,5.429666,-2.294160,6.351693,-0.061739,5.449554,2.503780,-4.851806,6.073747,-0.948228,0.282511,3.507798,7.118774,-0.514719,-2.640786,-6.934949,9.437880,-6.796060,-1.894794,-4.304580,-9.025309,1.992312,-9.284250,4.370723,7.866682,-8.633986,-8.215382,-9.450866,0.412410,8.098379,3.345921,-8.540771,5.864588,-9.682439,-5.874940,-2.448164,-4.410784,-9.421430,-1.868856,5.867820,-7.459843,-5.816855,0.128911,-8.800936,0.615513,-2.582637,8.500846,6.160301,-3.128926,-7.405998,-5.427639,7.688816,-5.543924,3.855757,9.788652,-2.556149,0.341663,-0.597082,-0.717531,9.403664,-7.361656,-8.036502,-3.614797,4.609430,3.303834,-8.509130,-9.105153,-6.219652,1.221704,0.740505,-4.187889,-4.122107,-7.257303,-6.561078,0.930648,-8.374141,-6.194068,3.840529,-0.508065,0.709346,4.638589,-7.141373,7.216129,-8.529896,-6.166536,8.849056,-2.224346,-5.099911,7.802565,8.856768,7.933914,-2.035417,-7.468844,-7.238911,-2.575913,-3.973955,1.116793,-8.597097,4.937852,-3.756067,-3.592592,1.397104,0.569436,-3.197630,-3.939932,-0.021551,0.985390,7.485321,-8.819154,1.931241,7.996697,-9.006219,-6.569825,2.936696,-2.693128,1.695269,-9.322452,5.321191,1.854644,-9.081945,1.498012,8.520294,1.177945,-2.624761,-3.953918,3.540417,0.057290,9.650896,-9.860967,7.390915,-5.282074,2.005288,6.946279,-1.637416,-3.128919,9.006051,2.178932,1.650819,0.292207,9.373250,4.434223,-7.830135,-2.697951,-3.372701,-4.334784,8.022700,-9.408134,9.347635,1.693906,-9.062031,-6.822384,2.797848,-6.629824,8.041978,-7.077943,-0.984839,7.464910,-7.842370,-9.336366,-6.813283,1.790081,2.998707,-3.218251,8.680953,-3.102738,-9.157513,2.192710,0.169441,-4.548181,-2.037544,0.222188,-1.795935,7.688499,-9.034893,6.723689,-4.776240,8.717041,-7.756871,8.182076,9.267140,-8.982829,-6.578023,-9.755117,5.158073,-6.555457,2.372719,-6.182097,-8.454320,2.670800,8.739877,7.351473,9.322393,2.352346,4.964157,6.739751,8.026355,-8.031672,-8.066926,2.108471,1.426968,2.321353,8.458155,-3.635257,4.989775,-8.789949,-6.003125,-2.540506,-4.346056,9.279420,-7.095790,9.977687,-2.878217,-4.278940,-4.658886,7.872412,9.584060,-2.181821,-4.879326,8.090453,-8.164854,9.258190,0.338855,-4.643462,9.048387,6.020992,1.678833,5.445182,-3.504820,-0.865236,2.367551,-1.643799,-5.346817,9.579286,1.510483,-6.633742,3.564560,-2.019502,8.270904,-8.559064,7.048987,3.419490,-4.135094,-7.671865,-2.410497,3.711810,-9.080324,-1.730626,5.847429,-0.035541,-7.408631,-0.052800,-8.242827,2.212034,-1.404244,-8.449692,0.467134,-4.069963,8.212591,0.201367,7.793451,1.110613,-3.617986,-4.038424,-8.014847,3.997064,3.283854,-7.475335,-1.311893,5.421138,1.550535,-3.839688,7.834981,8.593317,-6.528326,-1.926306,3.266913,6.656526,-7.877561,2.891857,-7.228693,3.086028,1.536432,2.977078,4.414791,-4.062148,2.667892,-0.499995,6.487923,4.016696,-9.860653,4.316786,3.431968,6.323462,-3.574110,-8.252442,3.999989,-4.270627,0.383020,9.481398,-1.526415,-1.076971,-6.624243,7.050354,-0.165640,8.338114,-1.260142,-6.315196,-0.995794,9.829270,0.739031,0.635531,-9.957355,9.024145,-4.750400,-0.592264,-9.010726,-3.512017,0.241713,-4.577438,-9.754123,-8.246734,-9.856442,-5.682801,0.557571,5.704923,-8.197766,9.455887,-9.803105,-5.474753,7.495052,2.431806,2.854673,0.436266,7.594002,-5.932740,6.835146,9.787360,-4.895068,-4.444981,1.681451,-1.588898,2.477010,-4.822172,-4.080730,-2.622160,-5.268370,2.658134,2.370875,-8.083990,-9.870047,-4.431872,-9.011010,6.981083,3.706151,-0.356596,7.685933,-8.979912,-8.754169,-8.910470,-7.001562,7.875986,-5.742257,-8.504433,8.771684,3.614866,-1.194591,4.399933,3.070945,9.300188,1.703394,7.066823,-3.058305,7.475090,1.108555,8.026080,-5.347755,-0.919710,2.716938,-5.132460,8.899302,-0.133576,7.291994,-5.800238,-6.062774,6.476081,6.348672,-4.538574,5.595891,3.601403,0.682036,-0.498807,1.322708,-5.671238,2.707510,5.362075,-6.438397,-3.606395,0.616758,-2.246642,-9.416869,3.894749,6.490551,7.895767,1.936204,8.837710,8.456340,-4.491816,-7.633656,8.040386,2.479026,-3.263360,-4.556019,9.034605,-7.384860,7.958583,-4.162966,-4.631058,-2.175628,-8.558392,-4.090500,-4.132688,8.699809,-8.063993,-0.933768,4.898725,-6.115983,7.664975,7.021629,5.325693,2.846949,-5.234568,0.358347,0.445943,9.411816,-1.178593,1.070698,7.956405,6.139338,-3.952228,-8.507346,-7.238836,3.581848,4.195936,-7.255331,-9.560613,-0.773689,5.302332,-3.053823,7.445201,-0.813286,7.540043,4.085729,-1.250599,7.634525,-8.976409,5.810247,-0.117985,-0.291838,8.811678,-4.004196,-6.693857,-3.077493,9.549253,-0.379254,-4.036972,-0.055080,-8.179462,8.266331,-5.311732,9.252061,-2.627887,8.507840,-7.636972,-0.924314,1.348185,6.943119,5.004191,4.929212,-7.337329,-7.252503,0.629073,9.413808,-9.209660,-5.380711,5.229935,4.960656,-1.555560,-8.482819,-9.264346,-1.218171,-9.212548,-9.276324,-2.466969,-4.347552,2.706038,1.919177,0.866891,5.398576,1.183152,-7.115332,0.986377,-5.195286,7.864842,-4.624747,-8.460546,2.787403,9.494584,-6.374598,3.493932,-3.530479,3.042318,2.082920,-3.952436,-3.781080,4.124162,-0.937674,-3.201170,-4.897463,-3.268810,-1.222110,-5.612975,7.745601,3.994740,3.485409,-7.910887,5.960820,4.279581,-5.103329,1.649488,-9.145379,6.508576,-1.045746,3.518663,0.506859,4.278212,-0.810841,7.741334,5.822877,-6.484732,-1.515391,0.517350,-9.254975,-9.984675,-9.433871,-9.796630,-2.829192,-3.025141,1.113289,-3.027311,0.927309,-4.865013,8.145347,0.382133], dtype = "float32")#candidate|2105|(2160,)|const|float32
call_2104 = relay.TupleGetItem(func_1640_call(relay.reshape(const_2105.astype('float32'), [2160,])), 0)
call_2106 = relay.TupleGetItem(func_1642_call(relay.reshape(const_2105.astype('float32'), [2160,])), 0)
func_1845_call = mod.get_global_var('func_1845')
func_1848_call = mutated_mod.get_global_var('func_1848')
const_2108 = relay.const([9.830199,8.516184,-5.321626,1.153346,-5.527271,7.321920,-2.672379,3.615408,-5.732210,-8.576842,5.754904,6.850573,8.647427,5.654841,5.786801,7.780151,4.608535,-4.377223,-4.779839,-1.974471,-1.591754,5.287990,-2.218915,-6.706750,9.630339,-4.935209,5.650937,3.815903,8.720010,1.343085,-9.757379,7.643627,-6.999575,4.090546,5.718035,7.363630,3.194699,-2.149191,8.200337,7.276363,-3.764823,-3.672564,0.704555,-3.051918,-7.206989,5.243743,-8.993280,-7.840950,-0.351992,-5.448777,0.547787,-7.700357,-2.142284,-4.650732,5.049351,0.390833,7.284057,2.701841,8.959794,1.253698,-0.846767,-0.225035,1.247754,0.281031,9.190192,-3.038464,3.652945,5.652772,7.508218,-4.563582,4.753631,-8.755986,8.103336,-9.095442,-5.023738,-9.751546,-8.485289,0.126306,-0.945295,-5.984031,-2.989383,-9.327672,8.545119,-7.020808,-9.043118,3.605267,-8.042268,-8.187715,7.776171,-8.679237,1.920085,-0.078087,-0.674925,4.760831,-1.964092,-5.504448,-3.651268,0.954820,-5.686475,5.527755,-3.727956,7.172171,-9.044695,-5.073498,-5.222617,2.590127,1.484727,0.655718,-2.246769,-2.379964,-7.102366,8.568115,-5.437478,-5.916557,-7.615850,0.010471,-3.255757,6.244299,-0.635095,1.275248,8.202889,-9.345013,-6.542123,-0.855515,8.253787,-8.785555,1.231814,-4.795701,-0.963914,-0.433106,-1.262434,7.836644,-8.869264,-5.451413,-1.408530,3.378312,-1.912904,-4.325587,-3.413685,6.355970,-8.703638,2.154786,-9.275467,3.158697,9.022330,4.877763,2.462167,-9.811581,-1.412483,-2.075758,-2.392293,-9.871597,-4.910799,-0.029048,4.930714,-4.804244,7.479142,0.368477,6.086386,-7.826679,-9.728394,2.675951,-6.956372,-9.737804,-3.222214,5.714930,-1.763074,1.827564,-5.374369,8.960088,-7.869336,1.965732,-2.586293,8.691937,1.944822,-8.797230,9.132971,5.242668,1.929740,-5.787501,5.189816,5.848354,5.960213,-2.696405,-1.956683,2.034830,1.183697,-1.322598,1.334825,5.136861,6.562374,5.640459,5.507032,-2.338815,-2.236053,-2.934465,-0.205880,5.484542,7.893895,1.924058,-3.836575,-7.234925,-1.354693,6.086882,-5.979952,-4.495644,-5.004445,-3.728626,4.497818,-9.133027,-8.375256,7.493424,-9.925514,-8.623906,-9.786243,3.276241,1.437723,-0.748215,-7.658959,4.736627,-8.463407,-9.267435,2.217904,1.174046,7.151063,-9.392323,-0.705132,-3.706770,8.037162,-0.727392,1.298885,-7.731364,0.708799,-4.542066,-1.876010,-3.434733,4.802519,1.747485,-7.077670,7.419987,-9.085140,5.033756,0.099656,-7.652103,-2.886225,-7.230556,-5.719485,-7.841503,8.380028,-5.373316,1.251619,3.010233,9.946191,6.722133,9.207955,-2.946293,4.216482,-8.501719,0.384626,2.902965,-4.350768,9.364265,-9.832147,-3.470012,-1.605145,5.631343,-6.410405,8.670310,0.271558,7.731702,7.497296,-4.318255,4.398074,-1.768116,0.956508,-6.107527,1.801180,9.205580,-1.521662,-9.611337,-2.212457,-6.431220,-1.168350,-2.842082,-6.284473,-3.471752,8.226679,-7.354293,4.007860,-7.075674,-3.975500,-1.383914,-0.499328,3.268417,-0.588870,-0.183016,1.246663,7.131342,-4.319507,8.729681,5.252838,-2.538856,5.143526,7.706063,5.934990,3.745611,-9.301243,-5.313863,7.122893,1.597256,0.621653,-1.896749,-7.039460,-8.752100,-1.699244,-2.804956,0.579326,-1.786228,6.256107,0.967550,1.205808,6.639640,8.329145,1.472997,7.135693,-6.322859,-4.810217,-0.793589,-0.124289,0.435082,-2.278911,-0.605822,-0.086493,-1.340840,-5.091019,3.840458,5.544423,1.786373,-8.218780,7.575974,-0.394458,-1.550362,4.542514,3.356554,6.302310,-3.728178,-6.185961,3.649003,2.988350,0.163156,9.756967,-0.476169,6.351940,2.316892,-8.035020,4.105727,-8.422979,0.401638,-9.819280,1.969668,6.377757,-5.692423,-3.389478,-9.097919,6.193740,0.103469,-6.736693,0.808373,-2.975904,2.443178,-7.188641,0.501004,-5.242442,-5.675667,9.934720,-0.669682,9.600553,9.226284,-9.643833,9.084487,7.012313,8.228999,-3.002174,1.409059,8.594589,3.026550,3.827107,0.401556,5.570964,6.990678,9.764978,0.644982,-4.828246,5.095084,5.662029,-0.743566,4.570767,-3.963069,4.867480,-9.158317,8.621227,-2.638840,-4.540837,-3.575980,7.104086,4.367343,-5.865547,6.911341,2.037686,9.367452,9.940261,7.951210,3.541238,2.719415,8.966583,-0.145702,2.862725,4.847188,-7.403993,-0.847138,4.843415,-3.351352,-7.554253,-7.101186,-0.131636,-1.367557,-2.970654,8.664962,-3.699953,-9.416434,-7.239723,-9.057062,1.614954,-5.911618,7.922656,6.643679,-1.132862,-3.343644,4.175883,-7.090322,3.116597,4.507191,-3.758077,2.759874,4.520003,-1.431910,-2.025295,-6.143915,-7.537504,6.893805,1.789471,3.972885,1.521890,-7.330552,-2.974910,-7.307843,-7.487911,6.923592,-1.936723,3.474271,-2.873701,-2.927010,-2.818115,-5.085381,4.705114,-1.544204,-6.770736,-6.590525,-1.646779,-6.356328,1.235603,-7.901984,1.528751,-3.179330,-4.492705,4.054236,2.320785,-7.228170,-5.499178,-3.633434,-6.668081,-7.944237,-9.384216,-7.668108,-2.713399,-0.342251,-2.898174,3.993716,-0.731909,6.104317,0.699418,-8.039590,-7.126035,-0.749659,0.921055,-3.582427,6.408556,0.763121,1.095080,-2.275825,-8.281677,8.758101,2.311006,-8.052710,-7.771897,4.261329,0.058896,-4.059271,-6.997329,-2.216719,-5.355103,9.600446,-6.513082,1.321530,6.861065,1.257349,-8.908614,-8.004231,3.744375,-8.176371], dtype = "float64")#candidate|2108|(520,)|const|float64
call_2107 = relay.TupleGetItem(func_1845_call(relay.reshape(const_2108.astype('float64'), [5, 104])), 2)
call_2109 = relay.TupleGetItem(func_1848_call(relay.reshape(const_2108.astype('float64'), [5, 104])), 2)
output = relay.Tuple([call_2075,call_2090,const_2091,call_2104,const_2105,call_2107,const_2108,])
output2 = relay.Tuple([call_2076,call_2092,const_2091,call_2106,const_2105,call_2109,const_2108,])
func_2151 = relay.Function([], output)
mod['func_2151'] = func_2151
mod = relay.transform.InferType()(mod)
mutated_mod['func_2151'] = func_2151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2151_call = mutated_mod.get_global_var('func_2151')
call_2152 = func_2151_call()
output = call_2152
func_2153 = relay.Function([], output)
mutated_mod['func_2153'] = func_2153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1908_call = mod.get_global_var('func_1908')
func_1909_call = mutated_mod.get_global_var('func_1909')
call_2195 = relay.TupleGetItem(func_1908_call(), 0)
call_2196 = relay.TupleGetItem(func_1909_call(), 0)
output = relay.Tuple([call_2195,])
output2 = relay.Tuple([call_2196,])
func_2201 = relay.Function([], output)
mod['func_2201'] = func_2201
mod = relay.transform.InferType()(mod)
output = func_2201()
func_2202 = relay.Function([], output)
mutated_mod['func_2202'] = func_2202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1908_call = mod.get_global_var('func_1908')
func_1909_call = mutated_mod.get_global_var('func_1909')
call_2216 = relay.TupleGetItem(func_1908_call(), 1)
call_2217 = relay.TupleGetItem(func_1909_call(), 1)
var_2220 = relay.var("var_2220", dtype = "float64", shape = (14, 14, 9))#candidate|2220|(14, 14, 9)|var|float64
bop_2221 = relay.mod(call_2216.astype('float64'), relay.reshape(var_2220.astype('float64'), relay.shape_of(call_2216))) # shape=(14, 14, 9)
bop_2224 = relay.mod(call_2217.astype('float64'), relay.reshape(var_2220.astype('float64'), relay.shape_of(call_2217))) # shape=(14, 14, 9)
output = bop_2221
output2 = bop_2224
func_2231 = relay.Function([var_2220,], output)
mod['func_2231'] = func_2231
mod = relay.transform.InferType()(mod)
var_2232 = relay.var("var_2232", dtype = "float64", shape = (14, 14, 9))#candidate|2232|(14, 14, 9)|var|float64
output = func_2231(var_2232)
func_2233 = relay.Function([var_2232], output)
mutated_mod['func_2233'] = func_2233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2151_call = mod.get_global_var('func_2151')
func_2153_call = mutated_mod.get_global_var('func_2153')
call_2290 = relay.TupleGetItem(func_2151_call(), 6)
call_2291 = relay.TupleGetItem(func_2153_call(), 6)
output = call_2290
output2 = call_2291
func_2296 = relay.Function([], output)
mod['func_2296'] = func_2296
mod = relay.transform.InferType()(mod)
output = func_2296()
func_2297 = relay.Function([], output)
mutated_mod['func_2297'] = func_2297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1673_call = mod.get_global_var('func_1673')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_2308 = relay.TupleGetItem(func_1673_call(), 0)
call_2309 = relay.TupleGetItem(func_1675_call(), 0)
func_1802_call = mod.get_global_var('func_1802')
func_1805_call = mutated_mod.get_global_var('func_1805')
var_2323 = relay.var("var_2323", dtype = "bool", shape = (36,))#candidate|2323|(36,)|var|bool
call_2322 = relay.TupleGetItem(func_1802_call(relay.reshape(var_2323.astype('bool'), [36,])), 3)
call_2324 = relay.TupleGetItem(func_1805_call(relay.reshape(var_2323.astype('bool'), [36,])), 3)
output = relay.Tuple([call_2308,call_2322,var_2323,])
output2 = relay.Tuple([call_2309,call_2324,var_2323,])
func_2335 = relay.Function([var_2323,], output)
mod['func_2335'] = func_2335
mod = relay.transform.InferType()(mod)
var_2336 = relay.var("var_2336", dtype = "bool", shape = (36,))#candidate|2336|(36,)|var|bool
output = func_2335(var_2336)
func_2337 = relay.Function([var_2336], output)
mutated_mod['func_2337'] = func_2337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2151_call = mod.get_global_var('func_2151')
func_2153_call = mutated_mod.get_global_var('func_2153')
call_2351 = relay.TupleGetItem(func_2151_call(), 6)
call_2352 = relay.TupleGetItem(func_2153_call(), 6)
output = call_2351
output2 = call_2352
func_2365 = relay.Function([], output)
mod['func_2365'] = func_2365
mod = relay.transform.InferType()(mod)
output = func_2365()
func_2366 = relay.Function([], output)
mutated_mod['func_2366'] = func_2366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1908_call = mod.get_global_var('func_1908')
func_1909_call = mutated_mod.get_global_var('func_1909')
call_2371 = relay.TupleGetItem(func_1908_call(), 0)
call_2372 = relay.TupleGetItem(func_1909_call(), 0)
const_2373 = relay.const([[[-7.391548,4.724528,2.299721,1.853799,-5.429974,0.340855,5.760734,-0.920959,7.599072],[-3.697226,-3.571715,-3.094803,-2.626968,-2.942546,-0.193623,-8.789496,8.258103,-5.654895],[-2.541545,-7.013677,-4.539895,-9.194969,-1.391859,-8.078498,-3.918477,-4.969403,-1.154542],[-0.201657,-2.987871,1.591166,2.697336,1.486917,-5.891660,4.052774,0.130395,0.574253],[9.834071,-6.535290,0.852310,1.893201,0.682856,-8.536523,0.346256,-6.549893,-7.926608],[-1.593372,3.400305,-8.077773,3.813681,2.876983,1.878596,-4.029915,-7.402979,-3.838724],[-1.362386,7.552009,-9.013272,5.937969,-0.825865,2.325796,-1.761309,-0.059127,-0.132711],[9.208120,-0.282952,-4.866588,7.753549,8.897742,6.896930,8.015641,4.851956,0.434250],[7.281106,2.532619,1.576038,-1.148335,3.020653,1.047900,2.142035,3.809315,5.287046],[6.296471,5.624434,-4.888063,3.796456,-2.635568,-1.089780,-4.978976,-3.386909,-8.096026],[-5.385882,1.557162,3.730729,9.348468,8.713966,1.704699,8.319110,-2.588462,0.944033],[6.179957,-1.438360,1.938291,-7.037455,-4.593988,-4.665224,-0.730693,3.213778,-4.289209],[-7.239616,0.786267,-6.627294,0.105382,-1.148064,-8.271443,-8.584686,-1.631660,4.069222],[-0.218348,9.270874,0.743210,6.102663,-2.190263,3.481961,2.622233,3.043417,-4.036776]],[[9.551474,6.845186,2.628595,2.931863,6.534438,-8.514696,-3.470342,-9.289654,-0.637009],[3.655054,7.942215,-6.714780,-0.153537,1.011119,3.042487,4.392221,5.196332,-1.363170],[8.325982,-5.061428,4.918321,2.680610,9.837895,2.497711,3.661175,7.467741,-6.434562],[-3.898647,-1.748697,-0.574224,2.403971,-8.908954,-1.878985,7.519961,6.331585,6.366208],[-1.458181,-0.754672,-0.997894,9.919153,-4.577218,3.760685,0.805139,5.683341,4.001468],[0.780967,7.165398,3.099343,-0.726701,6.758112,-7.225020,-9.990047,-3.608637,3.705124],[-1.591844,-8.650112,9.742262,2.387805,3.300461,-1.309220,1.268582,3.688539,-8.956702],[-6.807583,5.673714,-6.256854,-1.132087,4.199292,9.009934,-6.958938,8.350232,-8.682962],[-0.380395,8.473698,-8.899342,-2.464609,8.289301,-9.052941,-9.001365,-3.196354,4.499922],[6.624494,2.390317,-2.683717,3.896086,-6.716913,3.845580,-5.195521,2.902926,-9.348531],[6.285216,0.522379,-0.157899,-9.967574,-4.365484,5.884235,7.136364,-6.104731,8.886573],[7.766149,4.453723,8.205971,-0.848670,-4.191342,-0.148372,2.829571,4.795256,-6.109101],[9.701565,-3.551113,-8.195792,3.658478,-0.525361,-5.980839,-6.316410,8.596305,-5.954363],[-8.400512,-8.186953,-8.286824,7.699034,-0.448157,-7.298042,4.468534,-5.368284,9.957743]],[[2.903096,-1.398370,-9.480859,5.115823,8.490369,-3.047425,4.579135,-5.027540,6.472803],[-5.675534,0.074129,8.996855,-2.697711,8.010909,-3.957491,9.141652,1.192399,-1.623391],[-2.398688,-0.649843,-6.177444,1.948761,1.013682,2.462222,-1.486440,-1.329271,-3.846311],[0.934338,-1.223249,2.217132,-1.914705,-9.447489,1.904858,2.251849,-0.844926,6.348316],[2.785807,-1.634170,-2.125779,0.628968,-6.012222,-6.566931,-3.857020,4.327815,-8.484365],[2.740897,8.862264,-1.807415,-9.619361,-0.319580,9.309443,3.741666,8.830682,-1.632049],[2.883332,-1.019899,5.698600,8.517948,2.121541,-0.063364,8.993451,-1.960982,6.484891],[4.541270,-5.886087,-0.891505,1.330659,-5.267703,9.382066,9.437428,8.297515,-7.711623],[-0.586501,-0.969444,-9.047538,-8.603442,-7.927014,-6.576851,7.512029,-8.817006,-9.379298],[-3.148313,-8.009352,-9.846250,1.294215,4.055331,8.958854,7.526962,9.044556,7.540339],[-7.219282,8.628921,-7.210363,-2.622626,-9.899321,-6.907317,4.725011,-4.743114,5.126407],[3.525454,-6.603182,4.942621,9.948915,-2.047462,-8.004364,-4.813413,4.914709,-5.493416],[-7.465485,7.810741,5.751847,0.682662,-7.639423,-3.153358,-9.978467,-0.247536,-1.438534],[-1.847678,-1.631051,-5.322186,1.550584,6.516000,5.496162,-1.310159,-1.275008,-2.625567]],[[3.063819,-7.686955,2.798417,-6.855550,8.431897,3.672870,-1.784643,7.951458,-6.933765],[-1.064400,-2.926919,-2.942031,5.608946,7.015433,-2.039812,7.258125,5.226614,-2.673596],[-0.125060,-7.005069,3.824770,-9.169906,-5.819574,4.503669,1.638278,-9.544987,6.731600],[2.263915,1.514817,0.832749,-2.932593,-8.897161,-3.984076,2.967728,4.400720,-2.020809],[9.821588,-4.281887,-6.388683,-7.475027,9.597816,-5.322264,2.838738,8.413930,-3.022564],[-5.849795,2.079717,4.449813,3.212230,8.263171,-9.809118,-1.805332,-7.897346,5.127341],[-8.785836,-6.610659,-8.333052,-5.073836,4.929075,4.186804,-9.905798,-8.811463,-9.005166],[-5.457317,-9.151895,-4.126003,9.977455,-4.955387,3.434072,3.739699,2.549989,-2.400694],[-4.695226,9.651073,-3.218955,3.821242,3.841926,9.527551,7.998182,1.457527,9.125706],[6.996278,-3.464570,-9.566403,6.310392,2.777577,3.059021,5.884537,9.359666,0.135251],[9.818988,-7.973605,1.222398,-4.580157,3.931930,-2.100878,0.819819,-6.335691,-6.758640],[4.560815,-0.007825,-3.082677,-2.455794,7.138479,6.430062,-3.941051,6.554496,9.072972],[-4.695139,-8.706668,3.630039,-2.473590,-2.073862,3.227029,4.792126,-6.386948,1.564774],[9.248276,-4.839926,0.009350,-4.017636,-4.110591,5.583302,-9.870873,4.951178,4.725576]],[[9.405651,4.181910,-9.143229,-0.700211,-9.234903,3.770799,-1.154226,7.793813,7.727467],[-4.254892,-7.089676,-1.828469,-9.688090,6.251228,2.976961,-8.707257,-0.318593,-0.107492],[-6.155715,-9.329687,0.161855,7.529412,4.355413,1.246961,4.405757,-2.490379,-2.034130],[3.651904,8.028626,2.838754,-4.912121,7.378054,2.612946,9.370256,5.622529,-9.784887],[-7.346184,-7.939137,4.767122,-0.885710,7.326922,-9.763656,9.297392,-1.806418,6.490700],[5.004428,4.944865,-3.886140,-0.417405,5.716619,-1.533324,6.619957,5.583455,-6.991915],[7.060649,5.882283,0.967241,-9.655342,-0.897194,6.596685,-4.679406,9.469067,4.043787],[7.155841,8.720228,6.027762,-5.422526,-4.681646,-9.504398,-5.864463,-3.175860,-8.601717],[-8.569264,-1.237124,6.116135,-8.269826,0.712429,-9.938580,1.651901,-3.974575,-6.076542],[-1.935099,-3.704751,-2.830237,9.758846,-3.988605,-6.707127,1.882164,-0.607033,8.185946],[3.622346,6.970470,6.988099,-4.984062,2.839760,-9.152862,-0.270361,3.530152,6.867510],[-9.434348,-0.791833,-4.007449,4.680691,5.422146,-7.630261,-8.871288,-0.314471,-3.040691],[6.829775,3.816249,2.015302,-7.949938,-0.144042,5.030956,4.274552,4.629755,-8.233395],[-1.248957,4.239559,2.209955,6.943472,-7.365202,-1.910147,3.740635,6.988993,-6.434679]],[[-8.211049,-1.522079,-7.344871,1.199695,1.058152,-5.355378,-7.179513,-4.395805,-4.989881],[9.745183,1.938327,-7.188463,-0.981297,1.748403,-0.473110,0.619696,-7.577433,1.887017],[7.005440,-1.732970,5.159493,-2.535999,8.921015,-9.136273,2.286118,8.630695,3.150590],[-7.910675,-3.596541,8.546815,4.470452,8.268542,-2.292913,8.075040,4.655598,1.270946],[-3.453423,9.134609,-6.465132,4.511446,2.751434,-2.610311,-0.378400,1.350470,-2.179778],[7.787979,7.269663,2.023464,-9.723751,4.175179,-6.273859,-5.373460,-7.580572,-0.541244],[6.501597,-4.780360,4.545241,1.184694,4.100796,-0.433729,7.904428,-2.170697,-0.544128],[9.647904,-5.524421,6.274485,2.279122,8.958103,3.479559,-4.202400,0.338936,2.692050],[1.946026,2.807667,9.540238,-3.474581,1.296968,5.326801,-2.434883,-9.134271,6.569734],[6.861159,-4.975406,0.581912,-2.400871,-4.305548,-5.168294,-5.998509,9.657777,3.607483],[3.749434,6.538038,-8.671761,3.132819,7.214975,4.450764,7.374386,1.919117,3.224430],[4.408806,-8.225342,5.626438,0.384113,-7.900362,4.075665,-9.497782,1.155894,-8.232473],[-0.935255,-1.445011,5.782595,7.385482,-2.195119,-3.358804,6.771625,-7.876273,-7.912311],[-5.049812,2.323410,-0.414007,-6.578298,-2.255538,-2.520341,6.257256,-7.255269,4.639508]],[[1.278991,-8.973497,7.640040,3.234901,-5.876284,5.806368,-1.546355,-0.682562,-4.205894],[-4.056075,7.594845,1.153185,5.894607,0.704391,-9.478931,-1.702994,1.624463,-5.596780],[2.992903,2.468376,1.506938,-8.941120,-3.908422,3.706541,1.094216,-8.601929,-6.184005],[4.396630,-2.485542,3.074520,8.412982,5.147658,-2.236680,2.179049,0.780878,6.431439],[6.772181,-1.444080,6.671731,1.253364,-7.208286,4.509667,1.857934,-6.289867,6.392249],[-3.335453,1.908854,1.653311,6.783364,-9.554856,6.083259,4.056827,1.315373,1.185665],[-7.366606,-0.699135,-5.083473,7.897245,-8.356176,3.979541,-5.689103,-5.072858,9.190900],[1.335787,-5.390298,-5.875900,-5.327249,3.696233,5.092091,-5.563434,3.569361,-6.392117],[-5.328785,9.057248,-9.104531,5.848108,-3.762600,-2.815486,5.138378,1.049069,8.976962],[-9.488709,8.372124,-3.079163,-5.511904,-6.467366,0.759372,7.155536,7.367274,-2.772011],[6.682550,-6.907106,8.439376,-1.650729,-1.102871,-8.102584,6.210597,0.291477,-8.079827],[6.219316,-8.488589,-5.638698,2.951639,-7.347284,-3.713859,-4.117509,-1.717130,-7.921693],[5.867380,-3.890246,-7.692347,-0.002979,5.335265,-5.566135,8.000249,-1.462002,-5.448502],[6.721193,-5.226344,-4.762583,-5.225490,7.780160,2.070001,-5.034377,-6.920201,-1.644679]],[[0.191959,-7.692368,7.100397,1.548790,-9.418261,-8.340107,-8.282884,-1.333761,2.701520],[-2.264909,4.373306,-4.138418,3.865494,-8.304341,-3.688044,-4.322470,6.881482,-4.555198],[7.419183,4.511477,-7.495139,-0.022231,9.989644,0.422399,9.265916,-7.852013,2.855970],[8.495469,7.037407,-6.814874,9.841425,8.104640,4.126475,2.826225,4.983181,9.787899],[-4.769417,9.663201,-9.052560,7.991564,-6.974649,6.437432,-5.149294,-7.984006,-2.254254],[8.283071,6.742355,-9.742681,5.895107,0.532286,-5.464780,-1.298285,8.216113,-2.240824],[-7.995214,2.566961,2.497074,0.818241,-1.033866,6.224839,-9.583365,-4.170178,5.175603],[2.169885,-3.965234,-4.590615,5.526308,4.268326,-9.105857,-5.085855,6.869020,9.344868],[-1.870248,2.283639,-7.190102,3.579667,8.437951,-0.367040,-8.703901,1.427725,-0.748824],[6.400954,-7.269038,-7.177032,-7.695765,-0.837643,7.531546,-8.630219,-1.218199,-5.285368],[-3.465888,0.357313,5.049659,0.499407,8.959149,-6.129240,-5.620629,9.551984,-8.768523],[3.412891,8.453835,4.668967,1.001205,-5.838321,8.767021,-6.279294,8.421753,0.726018],[8.819185,-8.832121,-8.737606,-2.830140,7.802409,3.024617,-9.226714,-6.091127,-7.129632],[-1.441418,-3.343614,0.393739,8.109074,2.374721,-1.219550,2.338199,6.748599,-0.874800]],[[-9.953734,-2.348145,8.468274,2.289570,-7.246034,4.764292,9.703922,-1.721120,-2.058516],[5.304671,0.303188,-7.495539,-6.790150,0.779771,-3.806309,6.716549,9.871085,-2.764781],[1.304180,-5.033775,4.175045,2.387347,3.825842,-9.876627,6.863853,0.112565,4.781432],[-8.685518,4.698952,0.968451,-3.932777,-1.858583,3.010578,-0.396935,-6.797601,-4.690005],[-7.235811,8.758061,-9.876489,4.980871,7.408398,-4.123388,3.381952,-9.471540,1.643643],[-6.357805,-6.628628,6.148150,4.506323,8.784919,-8.980174,5.552162,8.756806,-1.903287],[1.824496,4.763609,-5.793669,5.916558,6.993898,-7.964187,5.769004,-5.252134,9.990549],[4.223223,6.568330,-0.407107,6.560189,-5.157150,-6.840332,-6.375306,-4.261772,4.129529],[8.321779,-1.401311,-5.380214,1.701876,0.479949,-7.914080,7.327927,2.724043,-6.543769],[-2.374806,-2.570272,-8.911451,6.711355,-3.208101,-2.407431,-1.874374,-3.822796,-8.898898],[3.572378,-0.449418,7.332776,4.527156,4.229176,4.093941,8.870237,4.146378,-3.979766],[-4.504380,-4.257118,-7.794321,-2.337537,-2.984321,8.141634,-8.301091,4.911672,-3.112312],[2.493654,3.069886,-9.967174,-3.653458,2.223837,7.155017,1.259867,8.948807,-6.062205],[-0.976740,5.810300,2.136648,-2.290624,2.897647,7.270787,-0.171827,-3.431613,0.609926]],[[6.390312,-6.147465,6.234121,-7.979432,6.712068,-1.045063,5.814203,7.520796,6.882263],[-9.243851,-9.396721,2.935052,6.800421,-5.179334,-8.422552,-0.379034,8.744682,-3.295552],[2.944623,7.231816,-5.794768,-3.423979,-6.585900,-2.504547,7.663905,6.325622,7.786152],[1.685625,8.817694,-4.308581,6.934684,1.436558,7.738055,1.449020,-3.709821,4.556073],[-9.319305,1.342775,2.948784,-8.452361,-4.664485,-5.579190,0.306717,-0.246032,1.072835],[-3.901203,2.976195,1.268027,1.004437,9.654670,6.161437,-5.757810,3.504182,1.587522],[-3.260853,5.241737,8.707653,-8.566443,7.173356,7.600532,8.702354,1.359520,0.668833],[3.376164,2.941208,6.271660,1.087371,-9.288267,6.779755,-9.230025,0.705160,-6.736419],[1.406412,9.115923,5.667897,-5.939021,-2.312370,8.130410,-9.124494,-8.084099,-8.739913],[9.120273,-5.855328,-0.749823,5.767953,3.890866,-5.246700,9.526272,-0.307192,-0.110532],[-7.810491,-7.581265,-2.901145,-4.857537,-0.189431,-8.109035,-5.701182,-0.287531,8.331261],[-3.656267,1.518467,2.950560,0.968690,-7.319417,-5.513911,0.501329,4.499599,3.239523],[-9.889469,-0.755110,8.070947,8.857217,-4.049406,-1.322784,-4.466171,-7.387293,-3.804510],[2.266720,3.988112,9.450195,-2.790986,-7.721814,-0.237453,2.973522,9.508219,0.754244]],[[-0.389995,2.721237,-7.608355,-9.514744,-2.436243,5.807154,-5.092817,3.313654,-6.417179],[6.635536,2.287259,-7.422422,-5.564970,-1.172880,8.249251,-7.466620,-7.321815,5.794484],[6.353691,4.366548,-6.007736,-7.994512,2.345022,-3.256513,-5.608329,-3.331439,6.132178],[7.712272,-8.050093,-9.241992,9.875996,5.733731,-4.291755,-5.768101,-8.293417,5.443320],[-7.451142,-8.994777,1.218949,4.596958,-7.440531,-9.870235,-7.404315,6.005127,0.732589],[0.436725,-3.754231,4.417121,3.621311,-7.768959,1.299158,-8.470536,7.604063,-1.230911],[-8.018126,-7.329370,7.438758,-1.168041,-8.592876,1.135271,3.331826,-5.141557,9.112329],[-0.558683,-8.316407,7.245145,0.410999,1.473583,-1.294418,2.554434,-9.914780,0.284794],[-5.189230,6.333442,-5.681579,2.930081,6.184329,9.103496,9.154728,3.429494,9.643365],[0.375195,2.996604,5.727790,-8.474141,-3.797640,6.755584,2.907133,7.014928,-4.887235],[4.969800,-3.243220,-0.059086,4.756286,0.794752,1.642233,4.743272,5.917879,5.888952],[-8.090127,-6.227253,-8.270524,4.584217,4.491100,0.594306,-9.807259,9.044301,0.915843],[-7.329664,5.805578,-3.957142,-6.624844,-0.164924,-1.932536,3.081859,2.502971,9.502486],[6.076103,2.208402,8.541033,-8.618563,1.940650,-0.642423,9.849505,-4.873495,8.644189]],[[9.664193,-6.521913,0.259019,-9.314001,-0.292562,-5.622965,8.494833,-4.542463,1.228315],[4.185152,2.115852,8.299244,-4.379852,-1.473031,-5.460601,9.243897,-0.982279,9.048461],[-1.286315,-3.095054,0.489563,-2.178271,-7.722371,-1.578997,-7.637257,2.772238,-5.270386],[-9.493482,-3.734893,3.678521,-9.573259,-8.365049,8.830009,-7.663142,5.170120,-7.665142],[-0.842040,-9.185275,4.485863,-1.472997,-5.309332,7.353875,-7.639435,9.408258,-0.446175],[5.687295,2.679333,6.812807,3.378597,-1.905470,-2.467749,-3.285378,8.114164,7.036569],[3.388920,9.772187,-5.091633,-4.222643,-2.092940,0.356791,1.923899,2.224745,-4.586258],[5.842290,-6.134668,5.202822,-3.675996,4.999067,-8.198243,-6.585643,-4.912538,1.468762],[-7.128986,-2.435199,-7.319263,8.318707,-2.199083,-4.984377,-6.223054,7.958120,-2.907794],[6.128073,-4.487330,-3.092403,-6.140574,-1.964948,-7.933410,3.799465,5.836973,3.095678],[4.881306,3.771536,9.599484,-2.163279,4.072179,5.635628,-1.647571,-7.351568,2.498144],[5.639923,0.861636,9.477955,-4.126787,-8.694622,-4.488893,4.570451,2.065448,9.104976],[-8.135751,-6.170201,2.033956,7.387257,-5.058528,-6.637193,4.092648,9.780117,7.624138],[-8.394057,6.925209,-3.931069,2.819154,4.780207,-3.487706,6.220066,9.753973,9.019307]],[[0.702650,-6.956742,-8.888911,-4.673688,6.463918,5.783351,-8.842481,-0.009456,-3.381093],[7.335659,-9.792029,-4.014755,1.925073,6.327001,0.003181,-5.695250,-0.994994,1.147044],[3.014833,-0.152084,8.559482,-4.652586,8.430170,-4.217155,6.997878,0.716037,-5.004227],[-9.803677,-1.628553,-2.375048,-7.796615,-4.368929,-1.413168,-6.211144,6.671430,-2.197121],[-5.997949,-0.707185,3.984854,5.428623,-3.162057,-2.976689,6.935434,7.629065,-6.619123],[7.103847,-1.772322,9.520482,0.771074,-3.761601,-0.308882,-6.109407,2.836371,2.468922],[1.909209,7.526548,3.807809,-6.618653,1.767136,-9.120896,-7.990148,-0.771716,-5.550958],[2.703799,7.275383,-3.394191,-9.308125,-7.407384,-7.805979,-4.787048,8.218000,8.030446],[5.107317,1.360535,9.170301,-9.319821,5.014666,-5.018873,3.869947,-0.928180,-8.421809],[-5.226112,0.215122,-8.384563,-5.266227,5.119213,3.316274,4.245030,-4.170112,8.497488],[-0.876115,4.842681,-1.315463,1.199534,1.686044,6.160718,4.728029,-4.978632,-4.225434],[-4.403306,8.053202,-2.010216,-5.443709,4.851423,-8.228792,7.469589,9.611599,5.024316],[-4.709832,6.217058,-4.378325,4.677561,-8.824350,-2.855201,3.849093,-8.935649,-7.710175],[5.461062,-4.379807,8.087037,5.639991,1.455695,-9.748563,-9.929703,-3.695042,-6.769128]],[[-0.335777,-5.100425,-5.222721,-4.330244,2.413612,-7.797651,5.397621,-9.873250,6.701505],[7.946799,-1.413290,0.875387,7.308091,-2.294619,2.307180,-1.238402,-2.227707,-8.277883],[2.509602,-9.811604,6.864318,-3.419758,-6.619425,-4.425769,-5.496290,-2.438380,8.266896],[0.056064,-1.321635,-9.006297,4.861401,5.824975,7.293810,-7.322589,-2.462368,6.806279],[6.138957,5.999458,-3.473271,1.705401,5.708426,-3.085833,4.712580,7.637691,9.232246],[4.085529,-5.715894,-3.389546,8.811254,-7.800057,-2.978836,4.476124,8.956163,9.221955],[5.844414,-9.186819,9.421497,1.400673,6.132048,-8.663573,-7.808245,6.082603,-1.771901],[-4.256253,-1.134338,-7.100057,-2.678679,-6.540339,-8.397297,6.988348,1.249460,-4.398835],[-0.568141,4.304446,-2.441293,-4.899010,-3.764747,7.636365,-4.238503,-0.969939,-2.729892],[5.173913,-1.644479,-4.111473,9.840053,-1.430936,1.519745,0.980478,-9.643239,1.369695],[-1.346458,9.483112,8.963699,-2.128319,-7.126458,-0.852818,6.468917,7.287606,-5.716554],[-2.000662,-8.481974,-8.644463,4.493722,1.490818,-7.335733,-9.796045,0.149209,5.733356],[-0.100690,-4.464151,-0.110658,4.739272,-1.688003,-8.418812,-6.386809,-7.267236,7.992610],[-3.184793,5.001838,7.783194,1.813782,-1.133614,5.667114,2.501291,8.020162,1.353121]]], dtype = "float32")#candidate|2373|(14, 14, 9)|const|float32
bop_2374 = relay.equal(call_2371.astype('bool'), relay.reshape(const_2373.astype('bool'), relay.shape_of(call_2371))) # shape=(14, 14, 9)
bop_2377 = relay.equal(call_2372.astype('bool'), relay.reshape(const_2373.astype('bool'), relay.shape_of(call_2372))) # shape=(14, 14, 9)
func_2365_call = mod.get_global_var('func_2365')
func_2366_call = mutated_mod.get_global_var('func_2366')
call_2388 = func_2365_call()
call_2389 = func_2365_call()
output = relay.Tuple([bop_2374,call_2388,])
output2 = relay.Tuple([bop_2377,call_2389,])
func_2404 = relay.Function([], output)
mod['func_2404'] = func_2404
mod = relay.transform.InferType()(mod)
mutated_mod['func_2404'] = func_2404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2404_call = mutated_mod.get_global_var('func_2404')
call_2405 = func_2404_call()
output = call_2405
func_2406 = relay.Function([], output)
mutated_mod['func_2406'] = func_2406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2151_call = mod.get_global_var('func_2151')
func_2153_call = mutated_mod.get_global_var('func_2153')
call_2413 = relay.TupleGetItem(func_2151_call(), 0)
call_2414 = relay.TupleGetItem(func_2153_call(), 0)
output = relay.Tuple([call_2413,])
output2 = relay.Tuple([call_2414,])
func_2415 = relay.Function([], output)
mod['func_2415'] = func_2415
mod = relay.transform.InferType()(mod)
mutated_mod['func_2415'] = func_2415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2415_call = mutated_mod.get_global_var('func_2415')
call_2416 = func_2415_call()
output = call_2416
func_2417 = relay.Function([], output)
mutated_mod['func_2417'] = func_2417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1605_call = mod.get_global_var('func_1605')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_2427 = relay.TupleGetItem(func_1605_call(), 0)
call_2428 = relay.TupleGetItem(func_1606_call(), 0)
output = relay.Tuple([call_2427,])
output2 = relay.Tuple([call_2428,])
func_2432 = relay.Function([], output)
mod['func_2432'] = func_2432
mod = relay.transform.InferType()(mod)
mutated_mod['func_2432'] = func_2432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2432_call = mutated_mod.get_global_var('func_2432')
call_2433 = func_2432_call()
output = call_2433
func_2434 = relay.Function([], output)
mutated_mod['func_2434'] = func_2434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1811_call = mod.get_global_var('func_1811')
func_1812_call = mutated_mod.get_global_var('func_1812')
call_2464 = relay.TupleGetItem(func_1811_call(), 0)
call_2465 = relay.TupleGetItem(func_1812_call(), 0)
output = call_2464
output2 = call_2465
func_2475 = relay.Function([], output)
mod['func_2475'] = func_2475
mod = relay.transform.InferType()(mod)
output = func_2475()
func_2476 = relay.Function([], output)
mutated_mod['func_2476'] = func_2476
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2497 = relay.var("var_2497", dtype = "float64", shape = (3, 15, 3))#candidate|2497|(3, 15, 3)|var|float64
uop_2498 = relay.log(var_2497.astype('float64')) # shape=(3, 15, 3)
output = uop_2498
output2 = uop_2498
func_2503 = relay.Function([var_2497,], output)
mod['func_2503'] = func_2503
mod = relay.transform.InferType()(mod)
mutated_mod['func_2503'] = func_2503
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2504 = relay.var("var_2504", dtype = "float64", shape = (3, 15, 3))#candidate|2504|(3, 15, 3)|var|float64
func_2503_call = mutated_mod.get_global_var('func_2503')
call_2505 = func_2503_call(var_2504)
output = call_2505
func_2506 = relay.Function([var_2504], output)
mutated_mod['func_2506'] = func_2506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1811_call = mod.get_global_var('func_1811')
func_1812_call = mutated_mod.get_global_var('func_1812')
call_2515 = relay.TupleGetItem(func_1811_call(), 0)
call_2516 = relay.TupleGetItem(func_1812_call(), 0)
uop_2524 = relay.sigmoid(call_2515.astype('float32')) # shape=(14, 14, 9)
uop_2526 = relay.sigmoid(call_2516.astype('float32')) # shape=(14, 14, 9)
var_2530 = relay.var("var_2530", dtype = "float32", shape = (14, 14, 9))#candidate|2530|(14, 14, 9)|var|float32
bop_2531 = relay.less_equal(uop_2524.astype('bool'), relay.reshape(var_2530.astype('bool'), relay.shape_of(uop_2524))) # shape=(14, 14, 9)
bop_2534 = relay.less_equal(uop_2526.astype('bool'), relay.reshape(var_2530.astype('bool'), relay.shape_of(uop_2526))) # shape=(14, 14, 9)
output = bop_2531
output2 = bop_2534
func_2535 = relay.Function([var_2530,], output)
mod['func_2535'] = func_2535
mod = relay.transform.InferType()(mod)
var_2536 = relay.var("var_2536", dtype = "float32", shape = (14, 14, 9))#candidate|2536|(14, 14, 9)|var|float32
output = func_2535(var_2536)
func_2537 = relay.Function([var_2536], output)
mutated_mod['func_2537'] = func_2537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2296_call = mod.get_global_var('func_2296')
func_2297_call = mutated_mod.get_global_var('func_2297')
call_2610 = func_2296_call()
call_2611 = func_2296_call()
output = call_2610
output2 = call_2611
func_2626 = relay.Function([], output)
mod['func_2626'] = func_2626
mod = relay.transform.InferType()(mod)
output = func_2626()
func_2627 = relay.Function([], output)
mutated_mod['func_2627'] = func_2627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1605_call = mod.get_global_var('func_1605')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_2711 = relay.TupleGetItem(func_1605_call(), 0)
call_2712 = relay.TupleGetItem(func_1606_call(), 0)
output = call_2711
output2 = call_2712
func_2722 = relay.Function([], output)
mod['func_2722'] = func_2722
mod = relay.transform.InferType()(mod)
output = func_2722()
func_2723 = relay.Function([], output)
mutated_mod['func_2723'] = func_2723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1997_call = mod.get_global_var('func_1997')
func_1999_call = mutated_mod.get_global_var('func_1999')
call_2737 = relay.TupleGetItem(func_1997_call(), 0)
call_2738 = relay.TupleGetItem(func_1999_call(), 0)
uop_2754 = relay.acos(call_2737.astype('float64')) # shape=(14, 14, 9)
uop_2756 = relay.acos(call_2738.astype('float64')) # shape=(14, 14, 9)
func_1769_call = mod.get_global_var('func_1769')
func_1771_call = mutated_mod.get_global_var('func_1771')
const_2763 = relay.const([7.117861,9.489844,5.543231,3.655169,0.387370,-4.686006,2.057674,6.663995,-8.014458,-5.459200,-7.906224,-1.245444,5.857525,5.251607,-1.317644,7.434023,1.878294,-0.780674,3.907648,1.043900,-8.298586,-8.009538,-0.963462,-1.109695,9.444823,1.771172,0.806620,5.504397,0.065785,-0.001292,5.492018,6.259234,-2.779823,4.555481,4.692764,-9.844703,-8.355219,-2.920128,-9.833537,8.589496,5.116549,7.889755,-5.508628,4.407842,9.466639,4.401469,5.740638,-7.004678,-6.827757,-2.317176,-3.288368,-2.779625,9.160770,3.181290,7.603723,0.325102,5.432347,-4.268878,1.435068,2.451196,8.550549,8.520779,-4.615507,-0.325483,4.367089,-6.838586,4.244265,-9.738010,9.201000,-4.100054,-0.227280,-8.350383,-0.183325,-5.159570,-0.126754,6.775799,-5.656685,5.308828,-0.288185,-1.582991,-8.688782,9.597725,4.451356,-3.173260,3.019448,7.685493,-9.167179,2.087191,-7.091515,-4.714373,-0.821363,-3.478111,-5.946088,6.552184,1.087902,-7.712722,-3.086182,7.359802,7.198142,9.183348,-4.071298,-9.002598,-5.512658,-2.517792,0.223968,6.132363,-5.200612,3.741530,0.709409,6.714373,-0.445335,-7.715478,9.624951,-3.816575,0.595722,4.540900,-6.149323,-1.674157,7.346934,-4.031561,6.266791,-3.155628,2.454870,-6.768879,-8.979449,-6.385155,1.099243,-1.393032,-5.877854,9.682611,-8.438288,-1.248098,5.937972,1.966151,9.774163,1.619434,8.774518,-1.106774,3.125757,-3.070635,-5.627685,-0.295084,2.950398,-1.641710,6.787958,-2.196913,-4.160518,8.449157,1.005300,-9.786837,-2.437679,-5.500356,-5.421684,-3.863526,9.925770,5.226204,5.146295,-2.428017,-6.576970,0.567369,-1.362164,7.554986,-7.524061,-5.207687,7.227859,-7.984927,9.039871,-7.940734,5.775332,6.118148,0.119889,-9.402757,5.982495,8.947398,4.730705,5.079008,-6.762953,-3.938548,5.668839,4.535131,6.517407,-3.762267,-0.237456,-7.827822,-0.541965,-1.643585,2.255415,-3.169322,5.817222,-8.631298,-1.543597,2.678471,9.296091,1.631296,-1.094429,6.671239,-4.026360,-2.146885,-1.470072,-4.211734,7.208802,-2.601118,9.027211,4.593904,2.400367,5.798893,2.714670,-0.401018,-7.628228,-3.115526,-4.984484,4.410512,2.993890,7.573730,-4.366559,-2.170051,3.378411,-6.293008,-0.193220,8.573507,-7.005741,4.489374,8.436246,-1.244009,-6.451190,9.776021,-9.705952,8.158165,-9.950312,-7.128315,8.017575,-6.356773,6.956758,5.192342,-0.630646,4.599173,-5.920398,7.498651,6.778273,3.811403,-2.339917,-5.390593,3.076676,-2.397878,3.352213,8.457284,-5.083223,2.309533,-3.096516,1.179690,5.650757,2.186557,7.315143,-5.802380,-2.795029,-3.467319,-4.783905,-3.400027,1.189499,5.704427,2.359140,3.100290,1.178648,6.294279,1.729710,-7.085215,-8.529021,-3.522210,-1.829358,-9.933146,4.211234,9.368190,8.854290,3.200562,5.060718,3.937884,0.484279,-7.422230,0.016869,5.367305,-3.137942,-9.615059,9.477912,-7.784623,6.133407,2.621489,-5.422962,-2.301169,-7.194992,-5.495865,-4.257600,-3.400549,-2.781746,-3.072944,-5.739907,-8.804633,-1.910179,1.035737,-2.463830,6.934035,-3.972350,-1.615034,-6.970083,9.166129,-5.108046,-1.802471,7.853984,8.019301,6.367357,-7.468095,3.156490,-5.740873,8.664491,9.838797,1.800804,4.445102,5.027879,-3.483263,-9.926631,-5.951975,7.180928,1.086488,0.502753,-8.576139,7.827588,3.586811,-9.312446,-2.739549,0.245978,7.887322,-6.146935,0.800470,-1.745498,0.235904,4.979333,5.558596,-1.733159,0.677848,2.688818,-6.340921,-2.814475,9.213150,0.990642,-5.540541,-0.168234,-7.714715,-7.077664,-9.561148,4.127099,1.008572,-1.770348,-9.586068,-5.657533,-8.013649,9.620496,-0.696632,-4.054598,-1.502556,4.265566,1.429730,-2.826349,-2.633986,4.366002,2.363102,2.717887,4.132792,-5.706489,-0.948353,9.073139,-2.111117,-0.731283,3.054874,4.325810,-6.595561,-0.515195,-2.293011,8.159475,-8.333002,0.775254,-4.284868,-9.947815,-9.832576,6.879185,2.144018,-9.029291,8.555853,-3.218493,4.562996,7.469014,-4.901302,4.256174,-5.754536,-8.104908,5.989928,3.144015,-5.290762,9.795768,-6.776094,6.834506,-4.392411,4.313010,-8.419752,-0.339212,4.898386,-0.528556,8.156791,-0.489189,-3.290452,-0.844090,3.404381,9.038710,-9.534726,-9.787446,6.013346,-4.719122,6.133619,-8.777268,-8.959497,-2.621659,-6.379557,4.708062,-5.605672,1.672890,-4.491113,6.058288,7.677206,6.959390,0.897659,-7.224559,-9.758525,-4.780041,1.280177,6.479810,3.217955,2.712661,-7.914834,-0.999296,1.057362,-3.656453,6.374566,9.999933,-8.626153,-4.174432,-0.282434,7.227668,-4.501250,1.273459,-2.222314,8.160626,-9.566464,2.738038,2.680118,4.893379,1.417545,1.441193,1.095117,-4.600518,4.422896,-7.912664,0.095407,-8.435007,7.688770,3.245401,4.288668,-6.961514,-7.262606,-6.700963,6.776548,-0.576076,5.119970,2.497523,-7.851571,1.586694,2.801601,1.759299,9.996040,-0.224197,7.218853,-7.122164,-0.988516,-6.776401,-9.124885,-3.455991,5.513564,-6.766118,-8.849020,7.195554,6.093323,5.721389,-6.926106,-8.061965,-2.408688,8.114522,-3.341691,-9.692871,-0.832429,3.507253,-9.605392,-6.345557,-0.823117,-3.097060,-1.507014,7.026335,-6.637159,-9.159411,-0.942331,-5.831287,4.288597,-0.623225,6.940102,-7.708749,-4.886009,-8.152621,-4.781201,-7.875444,-1.364249,9.613131,-5.302713,-7.901629,2.246677], dtype = "float64")#candidate|2763|(520,)|const|float64
call_2762 = relay.TupleGetItem(func_1769_call(relay.reshape(const_2763.astype('float64'), [13, 5, 8])), 0)
call_2764 = relay.TupleGetItem(func_1771_call(relay.reshape(const_2763.astype('float64'), [13, 5, 8])), 0)
output = relay.Tuple([uop_2754,call_2762,const_2763,])
output2 = relay.Tuple([uop_2756,call_2764,const_2763,])
func_2775 = relay.Function([], output)
mod['func_2775'] = func_2775
mod = relay.transform.InferType()(mod)
output = func_2775()
func_2776 = relay.Function([], output)
mutated_mod['func_2776'] = func_2776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2151_call = mod.get_global_var('func_2151')
func_2153_call = mutated_mod.get_global_var('func_2153')
call_2868 = relay.TupleGetItem(func_2151_call(), 2)
call_2869 = relay.TupleGetItem(func_2153_call(), 2)
output = relay.Tuple([call_2868,])
output2 = relay.Tuple([call_2869,])
func_2904 = relay.Function([], output)
mod['func_2904'] = func_2904
mod = relay.transform.InferType()(mod)
output = func_2904()
func_2905 = relay.Function([], output)
mutated_mod['func_2905'] = func_2905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1673_call = mod.get_global_var('func_1673')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_2911 = relay.TupleGetItem(func_1673_call(), 0)
call_2912 = relay.TupleGetItem(func_1675_call(), 0)
output = relay.Tuple([call_2911,])
output2 = relay.Tuple([call_2912,])
func_2917 = relay.Function([], output)
mod['func_2917'] = func_2917
mod = relay.transform.InferType()(mod)
output = func_2917()
func_2918 = relay.Function([], output)
mutated_mod['func_2918'] = func_2918
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2960 = relay.var("var_2960", dtype = "float64", shape = (2, 6, 2))#candidate|2960|(2, 6, 2)|var|float64
uop_2961 = relay.sigmoid(var_2960.astype('float64')) # shape=(2, 6, 2)
output = uop_2961
output2 = uop_2961
func_2968 = relay.Function([var_2960,], output)
mod['func_2968'] = func_2968
mod = relay.transform.InferType()(mod)
var_2969 = relay.var("var_2969", dtype = "float64", shape = (2, 6, 2))#candidate|2969|(2, 6, 2)|var|float64
output = func_2968(var_2969)
func_2970 = relay.Function([var_2969], output)
mutated_mod['func_2970'] = func_2970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1811_call = mod.get_global_var('func_1811')
func_1812_call = mutated_mod.get_global_var('func_1812')
call_2985 = relay.TupleGetItem(func_1811_call(), 0)
call_2986 = relay.TupleGetItem(func_1812_call(), 0)
func_1845_call = mod.get_global_var('func_1845')
func_1848_call = mutated_mod.get_global_var('func_1848')
var_2991 = relay.var("var_2991", dtype = "float64", shape = (520,))#candidate|2991|(520,)|var|float64
call_2990 = relay.TupleGetItem(func_1845_call(relay.reshape(var_2991.astype('float64'), [5, 104])), 1)
call_2992 = relay.TupleGetItem(func_1848_call(relay.reshape(var_2991.astype('float64'), [5, 104])), 1)
uop_2996 = relay.sigmoid(var_2991.astype('float32')) # shape=(520,)
func_46_call = mod.get_global_var('func_46')
func_48_call = mutated_mod.get_global_var('func_48')
const_3015 = relay.const([2.131958,7.673635,-9.741805,1.657196,4.545961,1.436000,-2.751242,-3.754702,-9.592942,-7.926341,0.601067,5.268264,-4.841724,-5.817916,-5.017028,0.580446,6.968058,2.470094,-6.987029,4.346033,8.003166,9.320171,-1.656584,-5.727063,-2.170301,-0.997942,3.916618,-1.666541,-6.695332,0.774923,-8.394536,-0.554338,5.833211,9.381758,-0.206769,7.533102,3.311247,-8.818395,6.364492,-6.546226,1.116315,8.839556,-2.576215,9.373793,-6.483046,5.916193,4.652739,-3.072901,-5.538377,-2.985447,7.635853,-4.141219,-9.654478,-7.795638,5.314843,4.078652,1.630355,3.212829,-8.620578,9.060096], dtype = "float32")#candidate|3015|(60,)|const|float32
call_3014 = relay.TupleGetItem(func_46_call(relay.reshape(const_3015.astype('float32'), [6, 10, 1])), 0)
call_3016 = relay.TupleGetItem(func_48_call(relay.reshape(const_3015.astype('float32'), [6, 10, 1])), 0)
func_2201_call = mod.get_global_var('func_2201')
func_2202_call = mutated_mod.get_global_var('func_2202')
call_3022 = relay.TupleGetItem(func_2201_call(), 0)
call_3023 = relay.TupleGetItem(func_2202_call(), 0)
func_2917_call = mod.get_global_var('func_2917')
func_2918_call = mutated_mod.get_global_var('func_2918')
call_3028 = relay.TupleGetItem(func_2917_call(), 0)
call_3029 = relay.TupleGetItem(func_2918_call(), 0)
output = relay.Tuple([call_2985,call_2990,uop_2996,call_3014,const_3015,call_3022,call_3028,])
output2 = relay.Tuple([call_2986,call_2992,uop_2996,call_3016,const_3015,call_3023,call_3029,])
func_3042 = relay.Function([var_2991,], output)
mod['func_3042'] = func_3042
mod = relay.transform.InferType()(mod)
var_3043 = relay.var("var_3043", dtype = "float64", shape = (520,))#candidate|3043|(520,)|var|float64
output = func_3042(var_3043)
func_3044 = relay.Function([var_3043], output)
mutated_mod['func_3044'] = func_3044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2722_call = mod.get_global_var('func_2722')
func_2723_call = mutated_mod.get_global_var('func_2723')
call_3057 = func_2722_call()
call_3058 = func_2722_call()
func_2535_call = mod.get_global_var('func_2535')
func_2537_call = mutated_mod.get_global_var('func_2537')
call_3065 = func_2535_call(relay.reshape(call_3057.astype('float32'), [14, 14, 9]))
call_3066 = func_2535_call(relay.reshape(call_3057.astype('float32'), [14, 14, 9]))
output = relay.Tuple([call_3057,call_3065,])
output2 = relay.Tuple([call_3058,call_3066,])
func_3071 = relay.Function([], output)
mod['func_3071'] = func_3071
mod = relay.transform.InferType()(mod)
output = func_3071()
func_3072 = relay.Function([], output)
mutated_mod['func_3072'] = func_3072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2151_call = mod.get_global_var('func_2151')
func_2153_call = mutated_mod.get_global_var('func_2153')
call_3083 = relay.TupleGetItem(func_2151_call(), 5)
call_3084 = relay.TupleGetItem(func_2153_call(), 5)
func_2722_call = mod.get_global_var('func_2722')
func_2723_call = mutated_mod.get_global_var('func_2723')
call_3091 = func_2722_call()
call_3092 = func_2722_call()
func_2365_call = mod.get_global_var('func_2365')
func_2366_call = mutated_mod.get_global_var('func_2366')
call_3095 = func_2365_call()
call_3096 = func_2365_call()
output = relay.Tuple([call_3083,call_3091,call_3095,])
output2 = relay.Tuple([call_3084,call_3092,call_3096,])
func_3097 = relay.Function([], output)
mod['func_3097'] = func_3097
mod = relay.transform.InferType()(mod)
mutated_mod['func_3097'] = func_3097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3097_call = mutated_mod.get_global_var('func_3097')
call_3098 = func_3097_call()
output = call_3098
func_3099 = relay.Function([], output)
mutated_mod['func_3099'] = func_3099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2775_call = mod.get_global_var('func_2775')
func_2776_call = mutated_mod.get_global_var('func_2776')
call_3239 = relay.TupleGetItem(func_2775_call(), 2)
call_3240 = relay.TupleGetItem(func_2776_call(), 2)
output = relay.Tuple([call_3239,])
output2 = relay.Tuple([call_3240,])
func_3247 = relay.Function([], output)
mod['func_3247'] = func_3247
mod = relay.transform.InferType()(mod)
mutated_mod['func_3247'] = func_3247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3247_call = mutated_mod.get_global_var('func_3247')
call_3248 = func_3247_call()
output = call_3248
func_3249 = relay.Function([], output)
mutated_mod['func_3249'] = func_3249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1952_call = mod.get_global_var('func_1952')
func_1953_call = mutated_mod.get_global_var('func_1953')
call_3265 = relay.TupleGetItem(func_1952_call(), 0)
call_3266 = relay.TupleGetItem(func_1953_call(), 0)
output = relay.Tuple([call_3265,])
output2 = relay.Tuple([call_3266,])
func_3270 = relay.Function([], output)
mod['func_3270'] = func_3270
mod = relay.transform.InferType()(mod)
output = func_3270()
func_3271 = relay.Function([], output)
mutated_mod['func_3271'] = func_3271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3071_call = mod.get_global_var('func_3071')
func_3072_call = mutated_mod.get_global_var('func_3072')
call_3286 = relay.TupleGetItem(func_3071_call(), 0)
call_3287 = relay.TupleGetItem(func_3072_call(), 0)
output = call_3286
output2 = call_3287
func_3288 = relay.Function([], output)
mod['func_3288'] = func_3288
mod = relay.transform.InferType()(mod)
mutated_mod['func_3288'] = func_3288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3288_call = mutated_mod.get_global_var('func_3288')
call_3289 = func_3288_call()
output = call_3289
func_3290 = relay.Function([], output)
mutated_mod['func_3290'] = func_3290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3071_call = mod.get_global_var('func_3071')
func_3072_call = mutated_mod.get_global_var('func_3072')
call_3371 = relay.TupleGetItem(func_3071_call(), 1)
call_3372 = relay.TupleGetItem(func_3072_call(), 1)
output = call_3371
output2 = call_3372
func_3379 = relay.Function([], output)
mod['func_3379'] = func_3379
mod = relay.transform.InferType()(mod)
mutated_mod['func_3379'] = func_3379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3379_call = mutated_mod.get_global_var('func_3379')
call_3380 = func_3379_call()
output = call_3380
func_3381 = relay.Function([], output)
mutated_mod['func_3381'] = func_3381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2904_call = mod.get_global_var('func_2904')
func_2905_call = mutated_mod.get_global_var('func_2905')
call_3416 = relay.TupleGetItem(func_2904_call(), 0)
call_3417 = relay.TupleGetItem(func_2905_call(), 0)
output = relay.Tuple([call_3416,])
output2 = relay.Tuple([call_3417,])
func_3418 = relay.Function([], output)
mod['func_3418'] = func_3418
mod = relay.transform.InferType()(mod)
output = func_3418()
func_3419 = relay.Function([], output)
mutated_mod['func_3419'] = func_3419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2775_call = mod.get_global_var('func_2775')
func_2776_call = mutated_mod.get_global_var('func_2776')
call_3545 = relay.TupleGetItem(func_2775_call(), 1)
call_3546 = relay.TupleGetItem(func_2776_call(), 1)
func_2025_call = mod.get_global_var('func_2025')
func_2029_call = mutated_mod.get_global_var('func_2029')
const_3550 = relay.const([[3],[9],[-6],[-2],[7],[5],[-6],[-4],[1],[9],[3],[5],[-1],[-3],[5],[3],[1],[3],[-9],[6],[6],[7],[-10],[-9],[8],[-2],[-2],[-2],[10],[-9],[3],[10],[-6],[-3],[5],[2],[-3],[-7],[7],[-5],[-4],[7],[3],[-10],[-7],[5],[-3],[-3],[-7],[-3],[-8],[-8],[-1],[5],[9],[-4],[-6],[-10],[2],[-10],[-8],[-8],[10],[-9],[10],[1],[-6],[-6],[-4],[-6],[10],[7],[-1],[-2],[4],[4],[9],[-5],[3],[-7],[-8],[8],[9],[-3],[-6],[5],[9],[1],[6],[4],[7],[6],[-10],[-4],[4],[6],[2],[-6],[-10],[4],[-7],[4],[-1],[-7],[8],[9],[-1],[-9],[5],[-4],[7],[-1],[-3],[-9],[-7],[9],[-2],[-2],[-7],[9],[2],[9],[4],[-4],[3],[8],[-7],[-8],[9],[3],[10],[9],[-6],[6],[10],[9],[5],[5],[7],[-8],[7],[-10],[-8],[-7],[6],[10],[4],[10],[2],[3],[1],[-4],[-1],[-6],[8],[9],[-2],[4],[-7],[-7],[-10],[9],[-8],[-2],[-4],[10],[9],[4],[5],[-8],[-5],[-2],[8],[-7],[6],[-10],[-10],[-8],[9],[-9],[-7],[10],[5],[7],[5],[-4],[-6],[7],[10],[-1],[-9],[3],[-9],[8],[-1],[2],[-7],[7],[8],[3],[1],[2],[-2],[1],[5],[10],[-2],[-3],[-4],[-10],[-9],[-4],[-7],[-10],[6],[6],[9],[-5],[9],[4],[-6],[7],[-9],[-9],[-1],[-7],[-3],[9],[-3],[3],[-10],[-7],[9],[1],[5],[-1],[4],[-1],[8],[4],[-10],[2],[-2],[-1],[7],[6],[-5],[10],[4],[3],[9],[-2],[-1],[5],[-4],[-1],[-10],[8],[-3],[8],[-5],[1],[7],[5],[3],[3],[-1],[6],[-10],[5],[10],[8],[8],[-3],[-5],[3],[7],[-1],[5],[8],[-3],[3],[-7],[-9],[-10],[3],[-10],[-1],[9],[1],[6],[5],[10],[-8],[1],[5],[8],[-1],[7],[-4],[-4],[-8],[-9],[3],[4],[9],[8],[5],[-9],[2],[-10],[7],[3],[3],[-8],[8],[3],[6],[-6],[8],[-3],[-1],[-3],[8],[9],[4],[-7],[5],[1],[-9],[-4],[-2],[-2],[9],[-7],[9],[5],[8],[4],[2],[6],[-3],[8],[-2],[-6],[9],[9],[-9],[8],[-10],[-4],[-5],[-6],[-9],[-1],[-8],[-6],[9],[-8],[5],[3],[6],[-5],[-4],[2],[10],[-2],[6],[-7],[2],[5],[-6],[-10],[-9],[7],[4],[9],[-3],[-6],[9],[-2],[5],[3],[-4],[8],[10],[-8],[6],[-1],[-4],[-8],[8],[8],[-2],[-10],[-2],[10],[-6],[1],[-5],[8],[2],[-10],[-1],[1],[7],[6],[5],[-7],[-8],[-7],[-9],[10],[-2],[-7],[-7],[10],[2],[6],[-1],[1],[-6],[-5],[2],[-1],[-1],[3],[-5],[-7],[-3],[2],[1],[9],[-4],[-9],[4],[6],[8],[5],[7],[2],[-4],[10],[-9],[6],[1],[-2],[-4],[6],[-8],[4],[4],[5],[3],[-1],[6],[8],[10],[1],[5],[9],[-9],[-10],[4],[10],[10],[3],[4],[-7],[-8],[7],[4],[5],[-5],[1],[-4],[-8],[3],[-4],[4],[8],[-10],[8],[-1],[-2],[3],[-2],[-7],[1],[3],[-2],[6],[10],[7],[-6],[-9],[-5],[-7],[2],[-9],[-6],[6],[-1],[7],[4],[8],[7],[-5],[-3],[10],[-5],[4],[-6],[4],[7],[-4],[10],[-3],[2],[-5],[-7],[2],[6],[10],[2],[-9],[-7],[-9],[-3],[2],[-10],[5],[6],[-1],[7],[5],[-10],[10],[6],[7],[8],[-7],[8],[9],[-10],[-3],[7],[8],[-5],[2],[-6],[6],[5],[4],[-5],[-1],[7],[-9],[3],[6],[7],[4],[9],[-7],[-3],[-6],[7],[-9],[-9],[-4],[-5],[7],[-3],[9],[-2],[-1],[-6],[5],[9],[8],[5],[4],[-8],[-6],[5],[-9],[-7],[2],[-3],[-7],[-6],[8],[-5],[7],[-8],[-7],[1],[-7],[-2],[5],[-3],[10],[1],[1],[5],[-2],[6],[4],[4],[-5],[-8],[-5],[2],[9],[-3],[5],[-7],[7],[9],[5],[-5],[4],[7],[-5],[1],[3],[-10],[10],[10],[-10],[-2],[-10],[-10],[-10],[-6],[2],[1],[5],[5],[-1],[9],[8],[4],[-3],[-7],[-7],[8],[9],[-6],[-6],[3],[-6],[-3],[6],[-10],[-6],[3],[-10],[2],[-3],[-8],[10],[-8],[3],[-10],[-4],[4],[-1],[10],[5],[-6],[-3],[-3],[-8],[-6],[-7],[-9],[-10],[10],[1],[-10],[-4],[7],[-1],[3],[-1],[5],[8],[4],[-6],[-6],[5],[-2],[4],[-8],[-1],[-10],[-3],[2],[-5],[8],[-4],[7],[4],[9],[-4],[-2],[2],[-5],[5],[1],[-2],[-3],[-9],[-8],[10],[10],[10],[7],[1],[-3],[4],[-3],[9],[-5],[1],[-10],[-9],[7],[8],[4],[-3],[3],[4],[-9],[-9],[-7],[8],[-9],[7],[-1],[10],[-3],[-6],[8],[-8],[-3],[1],[-6],[9],[7],[8],[1],[5],[2],[2],[2],[9],[-2],[6],[1],[4],[-4],[-2],[-9],[6],[9],[1],[9],[-7],[-10],[8],[-2],[9],[-2],[-6],[8],[-6],[7],[5],[-7],[2],[-4],[-5],[1],[-5],[3],[-2],[8],[9],[-8],[-10],[-4],[-1],[2],[-7],[-6],[6],[-3],[10],[-5],[4],[-8],[-2],[-10],[4],[-5],[4],[-1],[-10],[-2],[6],[7],[-5],[-5],[4],[-2],[7],[-5],[-6],[-10],[-2],[-7],[4],[-3],[2],[3],[-1],[-4],[-1],[-5],[-10],[-5],[7],[-5],[-4],[-3],[8],[3],[7],[6],[1],[-1],[-2],[-3],[3],[-9],[-3],[9],[-4],[-2],[7],[-5],[5],[-7],[-5],[-6],[-4],[1],[10],[-8],[9],[8],[-4]], dtype = "int64")#candidate|3550|(864, 1)|const|int64
call_3549 = func_2025_call(relay.reshape(const_3550.astype('int64'), [16, 6, 9]), relay.reshape(const_3550.astype('int64'), [16, 6, 9]), )
call_3551 = func_2025_call(relay.reshape(const_3550.astype('int64'), [16, 6, 9]), relay.reshape(const_3550.astype('int64'), [16, 6, 9]), )
func_2917_call = mod.get_global_var('func_2917')
func_2918_call = mutated_mod.get_global_var('func_2918')
call_3553 = relay.TupleGetItem(func_2917_call(), 0)
call_3554 = relay.TupleGetItem(func_2918_call(), 0)
func_2404_call = mod.get_global_var('func_2404')
func_2406_call = mutated_mod.get_global_var('func_2406')
call_3556 = relay.TupleGetItem(func_2404_call(), 1)
call_3557 = relay.TupleGetItem(func_2406_call(), 1)
uop_3558 = relay.rsqrt(call_3545.astype('float32')) # shape=(13, 5, 8)
uop_3560 = relay.rsqrt(call_3546.astype('float32')) # shape=(13, 5, 8)
output = relay.Tuple([call_3549,const_3550,call_3553,call_3556,uop_3558,])
output2 = relay.Tuple([call_3551,const_3550,call_3554,call_3557,uop_3560,])
func_3571 = relay.Function([], output)
mod['func_3571'] = func_3571
mod = relay.transform.InferType()(mod)
mutated_mod['func_3571'] = func_3571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3571_call = mutated_mod.get_global_var('func_3571')
call_3572 = func_3571_call()
output = call_3572
func_3573 = relay.Function([], output)
mutated_mod['func_3573'] = func_3573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2151_call = mod.get_global_var('func_2151')
func_2153_call = mutated_mod.get_global_var('func_2153')
call_3592 = relay.TupleGetItem(func_2151_call(), 3)
call_3593 = relay.TupleGetItem(func_2153_call(), 3)
output = relay.Tuple([call_3592,])
output2 = relay.Tuple([call_3593,])
func_3607 = relay.Function([], output)
mod['func_3607'] = func_3607
mod = relay.transform.InferType()(mod)
output = func_3607()
func_3608 = relay.Function([], output)
mutated_mod['func_3608'] = func_3608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2432_call = mod.get_global_var('func_2432')
func_2434_call = mutated_mod.get_global_var('func_2434')
call_3617 = relay.TupleGetItem(func_2432_call(), 0)
call_3618 = relay.TupleGetItem(func_2434_call(), 0)
output = relay.Tuple([call_3617,])
output2 = relay.Tuple([call_3618,])
func_3621 = relay.Function([], output)
mod['func_3621'] = func_3621
mod = relay.transform.InferType()(mod)
mutated_mod['func_3621'] = func_3621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3621_call = mutated_mod.get_global_var('func_3621')
call_3622 = func_3621_call()
output = call_3622
func_3623 = relay.Function([], output)
mutated_mod['func_3623'] = func_3623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3270_call = mod.get_global_var('func_3270')
func_3271_call = mutated_mod.get_global_var('func_3271')
call_3652 = relay.TupleGetItem(func_3270_call(), 0)
call_3653 = relay.TupleGetItem(func_3271_call(), 0)
output = call_3652
output2 = call_3653
func_3658 = relay.Function([], output)
mod['func_3658'] = func_3658
mod = relay.transform.InferType()(mod)
mutated_mod['func_3658'] = func_3658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mutated_mod.get_global_var('func_3658')
call_3659 = func_3658_call()
output = call_3659
func_3660 = relay.Function([], output)
mutated_mod['func_3660'] = func_3660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3071_call = mod.get_global_var('func_3071')
func_3072_call = mutated_mod.get_global_var('func_3072')
call_3733 = relay.TupleGetItem(func_3071_call(), 0)
call_3734 = relay.TupleGetItem(func_3072_call(), 0)
output = relay.Tuple([call_3733,])
output2 = relay.Tuple([call_3734,])
func_3780 = relay.Function([], output)
mod['func_3780'] = func_3780
mod = relay.transform.InferType()(mod)
output = func_3780()
func_3781 = relay.Function([], output)
mutated_mod['func_3781'] = func_3781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2775_call = mod.get_global_var('func_2775')
func_2776_call = mutated_mod.get_global_var('func_2776')
call_3787 = relay.TupleGetItem(func_2775_call(), 0)
call_3788 = relay.TupleGetItem(func_2776_call(), 0)
func_2151_call = mod.get_global_var('func_2151')
func_2153_call = mutated_mod.get_global_var('func_2153')
call_3800 = relay.TupleGetItem(func_2151_call(), 5)
call_3801 = relay.TupleGetItem(func_2153_call(), 5)
output = relay.Tuple([call_3787,call_3800,])
output2 = relay.Tuple([call_3788,call_3801,])
func_3808 = relay.Function([], output)
mod['func_3808'] = func_3808
mod = relay.transform.InferType()(mod)
output = func_3808()
func_3809 = relay.Function([], output)
mutated_mod['func_3809'] = func_3809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3607_call = mod.get_global_var('func_3607')
func_3608_call = mutated_mod.get_global_var('func_3608')
call_3869 = relay.TupleGetItem(func_3607_call(), 0)
call_3870 = relay.TupleGetItem(func_3608_call(), 0)
func_1802_call = mod.get_global_var('func_1802')
func_1805_call = mutated_mod.get_global_var('func_1805')
const_3872 = relay.const([False,True,False,False,False,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,True,True,True,False,True,True,False], dtype = "bool")#candidate|3872|(36,)|const|bool
call_3871 = relay.TupleGetItem(func_1802_call(relay.reshape(const_3872.astype('bool'), [36,])), 2)
call_3873 = relay.TupleGetItem(func_1805_call(relay.reshape(const_3872.astype('bool'), [36,])), 2)
func_3379_call = mod.get_global_var('func_3379')
func_3381_call = mutated_mod.get_global_var('func_3381')
call_3880 = func_3379_call()
call_3881 = func_3379_call()
func_1640_call = mod.get_global_var('func_1640')
func_1642_call = mutated_mod.get_global_var('func_1642')
const_3883 = relay.const([-3.929530,7.932658,1.578187,-6.245085,3.909260,7.901404,-2.682522,-7.961962,-2.150998,-5.169628,-5.992397,-9.039325,6.718487,7.896589,4.184395,6.039233,-3.271951,-2.708692,-5.695473,-3.752959,-3.874697,-3.137574,2.219458,9.529602,5.429748,-6.520790,-5.243470,-5.358924,1.897750,-4.112107,-0.945081,-5.803226,1.258538,-7.721598,-2.178440,7.919518,-8.357920,0.125895,9.647180,2.294961,-6.707163,-8.345424,-6.011494,-8.919141,3.433177,-1.123775,2.698578,-1.794056,4.835717,-4.062792,5.785383,-4.235600,-0.979870,7.481961,4.004163,-7.547413,2.824626,-6.920198,5.601211,2.583240,-4.387017,-2.653295,2.486551,-9.145565,9.781053,-6.531306,-9.350230,-9.959441,-3.932788,-6.411949,-2.924230,-4.169580,-7.057456,-8.183567,0.400134,-6.565253,4.107575,3.538837,9.398915,-3.562657,3.281220,8.185215,4.320539,-4.699009,5.184817,2.493561,6.129938,1.151357,4.828635,7.078928,-7.360213,-1.638953,-3.002498,-7.807548,9.471624,-4.587641,7.806494,-9.672701,9.917625,-7.731702,-1.609025,-1.524204,2.387331,8.573769,4.260378,-6.127895,-0.645975,-4.268742,-0.732919,-0.280937,2.430832,-1.487602,-0.081943,5.496706,6.620424,-1.351186,-6.483017,8.159067,7.548074,-7.924381,5.177302,-8.070888,0.165381,-5.018805,5.149649,1.521580,2.814122,0.853079,-5.465547,0.728163,-0.885779,2.417665,6.035829,9.426022,3.727648,5.199999,-0.303708,-9.970443,-1.209577,0.089763,4.304632,-5.547500,7.396876,-2.059288,0.102385,3.408675,-5.053835,-1.611221,-0.116847,-3.875342,4.035202,-0.891903,6.261848,3.345918,-1.536463,0.164570,7.113496,-0.858628,9.287142,-8.475440,2.608773,-9.593384,6.829648,7.707983,-7.021637,9.985199,7.910309,1.781840,6.402243,8.492194,-4.475997,6.864801,-4.896230,-4.102436,0.873577,-8.279638,-9.242397,-0.297026,5.813658,4.729460,0.936244,3.574532,8.992086,2.727841,0.599975,-6.596841,9.644905,2.856128,2.077231,1.696649,8.563927,4.344707,-5.354660,7.360113,2.552478,-8.951231,8.311952,-3.075201,-4.534343,3.257962,-3.962234,1.469074,-0.241783,9.748626,-8.481845,-3.779819,3.804449,-4.127650,3.484187,7.112638,-5.197089,4.178738,-9.262925,-3.039303,8.545447,-2.035061,6.460185,6.749341,4.015466,-9.580596,8.175659,6.798882,-5.758035,-0.649030,8.324797,6.651821,6.089268,7.768419,-7.241214,8.897567,-7.864700,9.767784,7.053739,1.903717,9.557371,3.230139,-6.521323,5.485949,-0.754922,-3.993594,-1.831720,1.290045,-3.895849,3.706721,9.560974,-4.867744,-0.447554,1.914198,-0.657517,-3.441032,-2.233320,-8.657719,-1.439686,-2.893566,1.450040,-6.927143,-9.923729,-7.863454,2.154315,5.009507,-9.016807,-9.906100,2.224165,-9.195643,-6.074029,7.199352,-1.693874,5.062197,-5.336144,4.453506,-0.462951,1.675893,-1.887125,4.832903,4.260193,-6.340831,-0.791828,-6.761563,-5.498863,2.873409,-7.008753,-6.389681,-7.892352,6.081652,8.312295,-5.374924,3.330301,-8.102783,6.602306,1.236134,-8.754054,-7.236795,-3.522381,-8.411350,-7.275173,7.872198,-7.450042,7.451888,2.114232,2.994097,-2.831350,-0.999228,9.852903,8.329000,-5.615824,2.283829,-2.547716,1.372983,7.440625,9.924153,2.903434,-2.603003,-4.235962,-8.980804,-6.054546,-4.018728,9.212314,-2.765358,6.773389,-2.414365,-1.252682,-2.325461,1.942397,1.647155,8.034957,-3.537802,0.652677,9.237128,4.865324,3.225442,9.615097,-5.544517,-7.938137,-9.415968,-6.588949,1.940120,-1.175987,7.939333,7.455201,-7.081283,1.805587,3.713787,3.316255,5.020293,-9.491991,4.870636,-0.653472,7.741134,-4.548685,5.466993,-9.826512,-6.491232,-7.787407,-9.340246,-4.216288,0.169017,-6.335654,8.564087,6.420462,-9.881165,9.154733,8.768911,9.904022,7.007866,-4.334209,-5.837214,8.024717,-4.868062,-0.427262,-6.390975,3.019473,-6.781358,-2.571592,-9.347912,-0.012408,-6.492770,-1.099032,-3.188695,-8.021112,8.279359,-7.898098,4.543948,-0.146877,7.838258,-6.124796,-6.292833,4.015852,8.428250,-6.022961,7.541195,-7.835232,-2.599972,-7.873126,-0.637015,-4.957534,6.926254,9.144342,2.418756,-0.662279,-6.117736,-3.225733,0.469244,-4.214221,1.473805,-2.241918,5.241434,-7.254609,3.597657,-8.296232,1.358691,3.054966,9.199836,3.696160,1.275797,-1.522037,2.022112,-7.729865,-4.700154,0.307630,0.315078,1.290155,9.250911,-7.840052,-5.019344,-4.942936,-2.688267,-6.668830,4.259098,-1.172595,-8.180993,-3.590257,5.347375,-9.187393,4.555094,0.673869,1.190807,-7.676383,3.209545,4.902098,0.288292,5.820434,5.468046,-9.273538,-0.856448,9.726420,9.344024,-4.235859,-6.819592,-8.988797,-4.989883,-2.339295,-1.131457,-9.777568,-0.822087,4.006000,-3.652202,1.501510,9.744144,-4.101086,-4.854397,-9.731515,0.065848,-6.356153,7.866212,-5.248409,-1.769056,9.902632,2.974473,-8.966495,5.777135,1.307529,8.470461,6.159988,-3.092515,-5.560354,-1.567336,-6.237820,4.425221,2.969622,-4.495492,-5.582144,4.449052,2.524899,-8.311677,-9.641810,-8.938342,4.374947,-7.630697,-1.547231,-6.064195,3.651901,3.091049,-0.917506,-4.573745,8.126952,7.507837,2.757866,2.752189,0.959818,7.778958,4.281889,-3.892599,2.207817,1.267458,6.741236,-9.621807,-5.475097,2.175028,-2.008113,6.710566,-2.972105,0.572916,7.283905,-5.206506,-5.196714,-9.912657,9.127182,-0.753051,5.348657,-6.307751,9.787728,3.579407,-0.404570,1.444942,-2.012278,-0.009545,9.448178,-3.199489,-0.631789,-4.967213,-4.440139,-7.984433,5.870132,-3.048770,1.774383,6.131540,5.984697,-0.264140,2.416083,-4.174775,-9.761234,-0.213163,4.596761,-2.018667,-7.707471,-5.841282,0.321811,-5.516040,-3.807618,0.515539,-9.931177,-6.587743,5.829187,4.656733,-3.598965,-0.728825,0.234920,1.390638,-8.481027,-4.028813,-8.361217,2.682871,-7.121778,-9.556390,3.265077,-8.485072,-7.585047,0.631965,6.526593,5.269775,2.117582,5.351847,-0.457155,9.720716,-6.923472,3.901268,-1.985086,1.745297,3.205166,8.243663,3.115204,-0.895402,8.610313,-0.046248,-9.137805,-4.575433,3.183111,-0.621529,-0.480076,-3.716336,-9.650580,7.125317,8.441110,7.486828,-4.999896,4.186444,-4.048805,-7.257298,8.025805,-1.803228,-3.255627,4.640285,-3.594448,4.050306,1.829618,-0.123337,-2.610541,9.662086,-4.527230,-5.632849,2.498894,-2.012026,5.617064,7.264675,8.157719,-2.587331,6.244853,-7.935434,-1.234112,-0.425018,6.694169,1.108227,6.321421,9.690864,5.333646,-6.564425,5.564530,-0.414997,0.490827,-0.133357,7.743573,-6.814186,-6.290373,5.405619,5.108281,9.145224,-1.440090,-5.952641,3.767560,7.349530,4.084725,3.550296,-3.677289,9.724221,-9.059491,1.372446,-0.307647,-4.529086,-2.736058,4.031970,4.745575,-0.536830,5.415018,9.610731,7.583200,1.694193,9.350566,4.188722,-7.226690,6.682950,-0.473872,3.750719,3.853930,-9.656227,7.001290,5.994095,-3.146442,-6.606701,-9.578169,-5.993342,-5.572218,-1.695549,-2.427203,0.709308,-5.197098,5.274047,7.254057,0.818708,-8.501457,-2.510805,-9.806461,9.938742,-3.971840,-6.903006,7.821369,-3.225173,0.563045,4.874787,-5.071577,-0.679430,-0.442849,-6.596145,-7.420180,-8.419000,4.023479,-6.936809,-8.777660,-2.505462,2.508272,4.401727,4.102415,-1.101618,-7.904713,-2.738272,8.525035,7.342173,4.402148,8.205811,9.755972,-7.861227,0.139125,-7.928048,-6.000669,-7.825341,-7.784646,6.576071,8.556423,-6.635873,9.006536,-8.522644,2.998902,-9.647863,5.390139,0.555382,0.964727,5.216206,-7.411107,-4.007900,-5.181935,4.403268,-9.391289,-4.183420,-6.086064,8.000379,-9.509609,-0.732853,4.636047,-4.953820,3.419653,-2.620774,3.340446,7.586128,1.074712,6.534549,-1.027917,-7.145597,0.392025,-2.098863,8.880666,6.404045,5.602578,-5.798852,1.521995,-5.671919,-5.744842,1.755601,-0.900254,2.018806,7.099231,-9.527084,6.339058,-1.500625,4.377025,8.997674,5.000407,-9.958166,-3.669293,0.984276,7.298629,-2.864585,-8.996234,-4.561773,-6.953745,2.594860,-7.169378,8.387734,-8.517628,-6.961146,-3.268386,0.079283,-2.977539,8.360364,-4.457694,-2.454635,-1.346701,1.475922,3.894856,0.902768,9.341317,7.741617,-2.112442,-5.546058,-2.013523,9.176682,-8.058750,-2.483661,-6.670954,3.906822,4.025773,8.237453,6.993018,-1.039431,-8.468770,-5.199402,-3.875413,3.038876,4.525766,-3.528391,-1.685162,-9.586986,-9.083502,6.990008,-6.420576,0.457403,9.214135,8.171422,9.050177,7.643625,-7.946946,2.991650,0.800119,9.775868,-2.685899,-0.696377,1.590046,0.111023,-1.893922,5.734329,-8.035602,-4.071113,2.141248,-2.908967,7.933560,-5.598290,8.440647,5.358960,-0.171288,3.574282,-3.311958,4.899419,9.135688,8.325454,4.523760,-0.803679,8.693233,4.396701,7.503840,7.976627,2.275501,-2.593114,9.713827,3.978294,-8.636744,0.427154,6.713615,0.910815,6.099451,-8.870989,5.038406,-9.118025,9.146072,2.120048,0.166695,7.462863,-8.927044,-6.338488,5.754726,8.033799,-4.171259,-6.702652,4.373316,-8.239467,-5.207637,5.165642,-8.816625,-1.214249,-2.904783,-7.533914,-4.046251,-7.565883,6.908898,3.453691,9.283411,-9.218742,2.826187,7.229781,-1.529149,2.365815,-5.153435,-3.967332,6.932258,-8.532535,-5.622417,1.750263,-7.042583,7.756357,-0.962769,2.814340,0.745255,-2.171848,-4.142486,7.467280,4.787112,-8.229936,-0.864216,-1.658462,2.562152,2.904935,7.699523,5.673909,-4.241612,3.415645,7.226984,-5.556956,2.293948,5.794767,-4.383846,-3.397668,6.855038,3.431691,-4.661382,1.058255,-0.102835,3.501543,-2.303635,-7.860776,-1.567564,1.113538,-0.790642,-1.324704,-9.337033,9.851337,5.268899,6.541560,-7.973076,-1.159214,-8.621574,9.279015,-0.504310,6.603406,1.483636,4.051064,1.049158,3.955989,2.757948,7.355347,6.461185,-8.908590,6.136431,4.259286,8.134117,-2.646019,-8.917541,-8.082536,-8.342813,8.546814,1.203222,4.461871,9.859965,-3.642121,5.237703,7.364825,3.706464,5.471945,0.083095,-0.675542,-2.222700,-8.807081,-2.651768,4.795871,-7.006007,-4.137828,8.035276,7.615923,-1.737994,4.558546,5.616533,-1.048763,7.715060,7.635078,6.330161,4.685293,-6.583418,-5.231443,-2.688142,-9.068670,-7.811891,7.824070,-3.464152,-8.320781,-7.206468,-5.942171,-8.698808,-0.255354,-1.258603,-0.430804,-9.606905,2.760924,-6.710378,9.881506,3.888731,9.917100,3.614339,-8.447822,8.817458,-2.997782,-3.750148,-9.591058,-0.420776,-1.471080,-1.528812,-6.207737,-9.180585,-2.723532,0.606676,-2.383999,6.341613,-9.522960,-0.589317,-4.842265,3.024086,0.396757,-8.331846,0.496465,8.030482,8.705125,-8.481457,-7.018856,-6.241184,8.956755,-0.752305,-7.348542,-3.010453,-9.469839,2.036939,-7.514548,-5.749453,7.265407,0.096825,8.477972,-1.228370,2.850153,-3.955127,-0.999664,-4.585849,-9.251982,6.965539,-8.783379,5.629418,-2.185287,1.276846,4.654465,-9.612838,-4.265002,0.291642,-5.820859,8.491779,5.005802,1.171667,-6.111278,5.037540,8.925372,7.130216,-8.021389,-6.924396,-4.705944,-2.773660,8.277821,-2.182016,-2.120439,0.054883,6.567130,-0.483628,-5.785967,-0.286083,3.957782,0.137443,-8.850438,-6.979851,4.173802,9.926165,8.900395,-2.489095,8.221438,-9.590146,-5.608236,-6.593543,-3.101674,-0.714954,4.360450,6.042775,8.341828,1.016258,-7.884246,-9.194850,-2.799681,9.739935,3.412687,1.678499,-7.369068,4.689148,1.166954,-5.824504,-6.878874,4.412027,-7.315545,2.558756,2.445702,7.581645,-5.038303,-6.580207,-8.865257,-4.468401,1.174318,-0.112702,-9.574885,-7.054379,5.967123,8.089294,-0.518243,1.096717,-2.678692,-1.461097,4.350951,8.972307,6.718082,4.771379,3.630641,-1.660384,9.184301,-5.213263,-9.619247,7.001704,5.977686,6.620429,8.813682,-7.808068,1.024200,-7.194166,6.846383,0.843070,0.254412,-1.897955,-6.563711,5.088837,7.206963,3.372784,-7.411108,2.913167,-2.613513,6.940924,-2.327215,6.970978,-0.722440,-4.970206,1.738735,7.809938,-1.033395,8.648103,-0.097873,-7.846163,-4.797712,6.912311,8.782331,-7.447143,7.325570,4.011631,-6.929291,-1.222989,-4.795332,-6.271576,-1.113544,-1.595641,6.185716,2.497625,-7.447382,7.417326,-6.942916,-1.005686,9.943515,8.625018,-9.334250,-6.430657,1.298902,-0.897517,-0.970494,4.939511,-0.541409,4.081406,5.838978,3.841559,2.847387,-9.603435,4.330247,2.266715,0.958506,1.218925,8.029478,-1.530770,-0.740801,5.438806,2.097932,8.867275,-4.404908,4.964326,-2.864608,-1.786770,3.861742,8.207854,5.183324,-0.682550,3.061300,-5.047332,8.597820,2.363367,3.889001,-0.932654,4.294919,-7.752585,8.823063,7.809093,-6.148029,7.095236,-7.611215,-4.795530,6.341214,-6.685804,1.999709,0.453704,-6.121092,-1.361068,4.099613,-7.981874,1.291189,5.603084,4.895517,-9.441924,-5.590957,6.116142,-0.865846,-8.524695,-8.158719,-9.962949,3.847830,5.058190,-7.307455,-6.662886,-0.009559,-0.381499,9.266155,-5.149907,-9.939968,6.237647,-9.301840,2.024885,-6.095700,-6.078669,-4.084300,-3.001153,8.722474,5.977203,-2.742505,2.869674,3.968075,-1.548788,8.378288,6.945609,7.933626,-6.144489,1.832847,-8.775996,8.253953,7.417770,1.373946,-2.333080,5.372354,-9.059535,1.394006,-7.100957,1.669676,6.287910,-6.069715,-8.225513,0.849776,0.985881,-2.911641,0.727276,3.441980,4.041907,-2.255280,4.171156,-8.402541,9.827941,2.532861,-8.098350,-3.659893,-3.894029,-5.041552,-2.281317,3.964412,-9.589894,4.751176,-0.023625,-5.507894,2.645937,9.328569,-2.281381,-3.718599,9.456305,-5.068762,-2.933878,9.044366,7.998333,9.149054,-2.905649,5.441528,-0.304967,-4.717879,7.137740,3.997436,4.513018,2.475679,-2.470337,-8.657042,-2.140190,7.382878,1.963840,6.806086,-0.387440,0.942949,1.049511,2.001674,3.093631,-0.827893,8.096400,-9.602774,-9.276260,-8.544278,1.769059,-6.649150,2.684934,2.244485,9.257763,3.788465,1.929103,-9.572341,-5.013177,3.732814,6.001424,-0.087711,9.184094,2.650405,8.775962,-9.013727,-2.584537,-6.793728,-3.371815,5.455273,-3.118259,4.815582,1.035238,-3.326635,5.212725,7.873330,-2.468725,8.917114,-2.375387,1.377393,3.423224,7.198489,7.636393,3.599658,5.132713,9.113679,-8.985888,2.566582,-1.149363,9.036998,1.851830,-2.033384,-4.468910,9.578401,-5.354956,-5.809048,-4.560893,-2.366413,9.628244,3.009159,-0.942654,-3.684225,4.349599,-9.851060,-2.354098,-8.911026,-5.424808,5.276753,-5.127242,-5.873537,7.299874,-3.083595,-0.111131,9.460186,2.999360,-6.999186,8.122850,-0.669697,-5.700165,-5.112376,-1.980909,8.214487,9.568220,1.192056,1.957611,5.424442,2.204946,3.055587,-9.621360,9.157348,2.045772,0.454544,5.619448,-5.252537,-4.326335,-9.246307,0.339990,0.688078,-8.610581,-9.402790,-4.093219,-7.933061,-1.479641,8.551297,3.297329,-4.821038,-0.877042,6.400846,4.084434,-1.920465,2.212987,-8.227425,-6.378629,4.046433,-6.491803,-5.345250,2.085507,-7.823272,-5.114202,-1.866556,8.000880,9.276622,-6.914364,2.760311,-4.694732,8.236959,-3.040126,-1.087107,-8.851477,2.181210,8.415936,6.368134,-1.337055,-4.828907,-4.922889,-2.684002,9.461688,5.148638,3.058707,8.766935,-8.708597,7.511878,-7.080761,9.989297,6.583029,-3.533320,3.250645,-8.506409,9.661324,-1.909118,9.170258,5.329697,-7.414922,7.601709,6.838658,7.438989,2.639775,-3.631423,-4.823884,-3.070363,-7.906871,8.515975,3.570011,-3.715360,-9.446612,-5.323943,6.961353,1.798040,-4.185337,8.627165,4.326276,-4.093371,3.470176,5.853444,-5.322286,-8.504173,-1.558615,-9.808108,6.482674,-3.430753,-6.062742,6.384060,1.339604,9.435256,5.577648,0.452642,-1.739485,-8.944235,4.283499,4.782297,3.563659,-0.597850,5.198969,3.033705,6.087953,4.826150,-6.790966,-0.323036,8.433693,-8.073555,-8.419335,8.604120,6.237385,5.575623,3.240380,-2.060426,-2.561683,-6.584193,-8.066497,-1.959189,-6.858704,4.759620,-2.093520,-0.606129,0.450981,8.264126,-0.614569,-8.352175,-6.446970,-5.485867,7.251948,-4.096418,-9.396984,0.740942,6.178609,-2.589221,2.852758,-9.316556,0.661644,2.766930,9.371898,6.639045,-2.119346,1.594777,8.589424,-1.312025,4.168206,-9.090939,-3.077905,-9.351137,7.813405,7.614679,-8.037997,-2.202542,-5.177276,-8.134643,-4.560111,7.317627,-6.813913,9.712174,0.681087,-0.199752,2.905164,-6.333856,-6.672532,6.133157,9.082881,6.792961,-5.882094,-6.356878,4.368897,5.511981,-3.871882,-4.447624,4.147368,-5.714135,-5.597336,6.059096,4.241660,6.880003,-5.532532,7.882289,2.994655,2.504037,-5.309107,-6.632281,6.637686,-5.782736,-4.447829,-1.733672,-4.045557,-9.858355,4.752999,-9.828931,8.693622,-2.369347,-4.049080,-7.951126,-0.190368,-0.183811,3.632111,3.940385,-8.896128,-6.197848,-8.502366,-4.997919,3.797091,6.144551,6.609594,9.693590,6.498744,-4.246977,8.431536,9.627685,9.580776,-0.899421,-0.374430,2.120355,8.401768,-7.458186,-1.104686,2.537285,2.539702,-1.802376,-4.182925,-9.524384,9.692242,-3.913447,7.107691,8.734546,1.244323,6.914861,5.437656,-4.811471,-1.589599,-6.581100,6.139701,-4.309455,9.287273,0.417478,-6.309866,2.102755,7.620371,-0.038020,-9.844719,0.319064,0.013888,0.455825,7.101520,-3.697209,-2.307892,-5.741703,-7.640694,2.908683,2.260161,6.676400,-9.923485,1.853825,-1.668724,-6.397575,9.835562,-8.260201,-4.998654,2.956949,6.175798,5.402084,6.220944,-1.077025,-8.694053,4.285693,-4.966419,9.174734,5.269103,-4.089889,-2.606333,-8.853049,-0.397910,-2.644935,1.541458,-4.551238,0.037724,-0.882303,4.589700,-6.091741,-6.323885,0.822504,1.977564,8.497389,-3.209207,-4.407143,-5.145947,-8.045694,-4.007370,9.642274,3.685740,-5.188264,9.771433,5.654472,8.372358,-1.412856,6.330382,6.946752,-5.565321,1.653867,-2.719945,7.064430,2.975584,-5.163909,8.307132,0.545606,3.161329,7.527138,-0.965698,-2.351539,5.530587,-1.354004,-6.332678,3.684120,-9.458183,0.659391,-2.335600,-9.486939,7.789467,5.980103,-9.128321,7.090851,6.528722,1.785512,0.861363,5.944207,-1.749827,1.897704,9.828107,-1.695907,8.795307,2.351919,-4.405930,8.718180,-2.856742,-9.256737,3.767265,-0.090083,8.389473,5.288325,0.013986,3.701789,-0.304656,7.909949,8.526096,7.846456,9.440224,-5.243021,-4.214854,9.617321,6.086448,-7.118638,0.232117,6.928747,-0.983634,4.949368,6.791920,9.969618,2.111140,-8.418823,-5.899240,-7.500623,-9.124637,-4.037450,-3.557859,3.133934,8.602003,1.235781,-3.756790,5.727029,4.366944,8.152510,8.001342,-5.929597,3.522144,1.262703,-7.671373,6.946500,0.206215,-2.439660,-0.789842,6.415223,3.800306,-1.685403,5.209316,-7.428566,0.897069,7.268983,-7.445583,9.994937,-5.391570,-7.754750,-6.738377,0.155262,5.503363,-4.864051,3.997118,6.034491,-6.046205,4.166207,-3.298904,-2.351736,5.288146,-5.131446,4.544848,3.751955,3.796343,-8.127151,7.484430,8.250494,5.936686,-1.560746,9.929281,2.208611,-2.390636,2.759821,-8.605344,-6.710649,2.849013,-8.807501,-8.496068,9.462181,1.083280,-1.772091,5.408251,1.693513,1.639381,-3.078334,3.552199,-4.165549,-6.598753,-0.458882,1.876106,-7.835680,-2.109404,5.582225,-2.513620,-4.653467,-5.141353,-8.928953,-5.613324,4.358573,-4.049477,-8.610584,3.772020,4.241576,-5.169375,1.463195,-3.669078,-5.019185,-8.589608,0.919369,-2.417698,-7.412331,-2.259605,0.164685,-6.527325,-1.187885,-2.144521,-6.222147,1.736653,0.165580,-0.197333,7.124078,-6.886428,9.525946,4.826165,8.570840,-1.639083,1.063817,-0.128082,6.088327,5.184239,7.185340,-5.641033,1.144998,2.948640,3.839152,7.721262,-3.847498,-6.376193,-3.912065,0.009119,-0.111476,2.908363,-0.216162,-6.732184,-8.409936,-0.126022,8.711623,-9.319134,-8.041903,1.806058,7.147674,9.580666,-7.210341,1.535923,1.263900,-3.152817,-8.462874,7.980788,9.786152,-8.150658,5.325327,-5.243294,4.457534,-2.199371,-7.633366,2.787398,-1.224658,-5.823211,-5.463663,-9.155915,-2.764384,1.781692,-6.871607,1.449153,-5.980648,-2.609913,-1.080519,-3.978275,8.388733,-1.631781,-8.506291,3.989652,-2.100170,7.659729,3.873885,-4.692999,-9.829016,-5.903732,0.823065,8.852176,2.583558,6.816663,-4.036493,2.877374,-6.116347,3.712155,5.087724,-9.572336,-3.601703,-4.834907,2.110530,8.756005,2.925567,-9.213385,-5.239334,-0.809419,8.844169,4.765880,-2.704998,2.585089,-8.605268,5.499643,9.154806,7.077011,-6.148898,8.889373,9.906045,6.389961,-3.773682,2.053269,3.503132,-0.976501,1.779000,-0.876469,-0.211837,6.621561,7.907763,-0.880228,-4.502966,-1.590241,-0.609763,-1.549522,2.521349,-6.867646,4.265606,-9.070693,3.265454,-3.734481,-6.235993,-2.231481,-4.730576,-5.401754,2.493403,2.148374,-3.764746,-3.743996,0.910600,-2.126857,-0.245225,3.055540,-1.856413,8.196822,-7.198666,9.425305,-7.982683,-0.252659,0.706121,-5.248084,1.087097,-4.594552,-4.344124,-0.846868,4.136238,-0.272394,3.710024,8.463163,9.383444,-6.741223,-9.331929,-6.266704,5.163423,-8.118871,1.569093,9.902253,-2.582589,4.219635,-4.998145,-2.185077,-1.695501,-9.864779,-1.708578,-4.671802,-3.139380,-8.847128,-6.098070,7.492792,3.130929,-1.000903,3.080452,4.485826,8.583755,-9.289127,2.207965,7.664147,0.079622,4.903204,8.682656,4.983779,-8.591630,7.829442,-7.040928,3.490041,-5.602478,7.066922,2.824385,3.783757,9.365993,7.128105,-2.176128,-5.736482,-8.195186,-3.303639,8.602924,9.705073,6.947919,-5.817559,4.585135,4.337901,0.388098,3.043812,7.613163,7.627297,-3.604415,0.927994,2.812228,-0.443709,-7.921857,-1.491184,-3.291540,1.388115,-7.618834,-6.181319,2.830638,7.622037,-3.347085,-0.150825,7.032207,-1.561602,-7.544906,-5.422408,2.077315,0.042164,3.019448,-5.523083,4.566131,5.178733,4.024257,5.712884,6.031089,-0.028234,-3.893685,-4.685545,-3.245908,6.455884,-2.962685,8.864162,0.149997,6.403510,-5.755046,-2.831124,-8.922890,2.730023,7.015354,-4.170328,6.379858,-3.284016,6.241489,0.176666,9.302542,-5.872509,-6.000449,-9.320239,-9.521923,2.821544,7.839351,-1.404971,8.242500,0.165469,8.972777,-4.216481,-9.126415,-0.164525,7.732992,-0.946608,-1.556579,-6.939026,-9.661208,-3.229800,3.823646,3.688751,-0.545062,-0.326188,8.841056,-2.291378,6.349546], dtype = "float32")#candidate|3883|(2160,)|const|float32
call_3882 = relay.TupleGetItem(func_1640_call(relay.reshape(const_3883.astype('float32'), [2160,])), 5)
call_3884 = relay.TupleGetItem(func_1642_call(relay.reshape(const_3883.astype('float32'), [2160,])), 5)
uop_3903 = relay.cos(const_3883.astype('float64')) # shape=(2160,)
output = relay.Tuple([call_3869,call_3871,const_3872,call_3880,call_3882,uop_3903,])
output2 = relay.Tuple([call_3870,call_3873,const_3872,call_3881,call_3884,uop_3903,])
func_3906 = relay.Function([], output)
mod['func_3906'] = func_3906
mod = relay.transform.InferType()(mod)
output = func_3906()
func_3907 = relay.Function([], output)
mutated_mod['func_3907'] = func_3907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3379_call = mod.get_global_var('func_3379')
func_3381_call = mutated_mod.get_global_var('func_3381')
call_3936 = func_3379_call()
call_3937 = func_3379_call()
func_1811_call = mod.get_global_var('func_1811')
func_1812_call = mutated_mod.get_global_var('func_1812')
call_3951 = relay.TupleGetItem(func_1811_call(), 0)
call_3952 = relay.TupleGetItem(func_1812_call(), 0)
func_642_call = mod.get_global_var('func_642')
func_647_call = mutated_mod.get_global_var('func_647')
var_3954 = relay.var("var_3954", dtype = "bool", shape = (36,))#candidate|3954|(36,)|var|bool
var_3955 = relay.var("var_3955", dtype = "bool", shape = (72,))#candidate|3955|(72,)|var|bool
var_3956 = relay.var("var_3956", dtype = "float32", shape = (60,))#candidate|3956|(60,)|var|float32
call_3953 = relay.TupleGetItem(func_642_call(relay.reshape(var_3954.astype('bool'), [1, 12, 3]), relay.reshape(var_3955.astype('bool'), [2, 12, 3]), relay.reshape(var_3956.astype('float32'), [60,]), ), 1)
call_3957 = relay.TupleGetItem(func_647_call(relay.reshape(var_3954.astype('bool'), [1, 12, 3]), relay.reshape(var_3955.astype('bool'), [2, 12, 3]), relay.reshape(var_3956.astype('float32'), [60,]), ), 1)
bop_3962 = relay.power(call_3951.astype('float32'), relay.reshape(call_3936.astype('float32'), relay.shape_of(call_3951))) # shape=(14, 14, 9)
bop_3965 = relay.power(call_3952.astype('float32'), relay.reshape(call_3937.astype('float32'), relay.shape_of(call_3952))) # shape=(14, 14, 9)
var_3970 = relay.var("var_3970", dtype = "bool", shape = (14, 14, 9))#candidate|3970|(14, 14, 9)|var|bool
bop_3971 = relay.floor_mod(call_3936.astype('float32'), relay.reshape(var_3970.astype('float32'), relay.shape_of(call_3936))) # shape=(14, 14, 9)
bop_3974 = relay.floor_mod(call_3937.astype('float32'), relay.reshape(var_3970.astype('float32'), relay.shape_of(call_3937))) # shape=(14, 14, 9)
func_2722_call = mod.get_global_var('func_2722')
func_2723_call = mutated_mod.get_global_var('func_2723')
call_3976 = func_2722_call()
call_3977 = func_2722_call()
output = relay.Tuple([call_3953,var_3954,var_3955,var_3956,bop_3962,bop_3971,call_3976,])
output2 = relay.Tuple([call_3957,var_3954,var_3955,var_3956,bop_3965,bop_3974,call_3977,])
func_3986 = relay.Function([var_3954,var_3955,var_3956,var_3970,], output)
mod['func_3986'] = func_3986
mod = relay.transform.InferType()(mod)
var_3987 = relay.var("var_3987", dtype = "bool", shape = (36,))#candidate|3987|(36,)|var|bool
var_3988 = relay.var("var_3988", dtype = "bool", shape = (72,))#candidate|3988|(72,)|var|bool
var_3989 = relay.var("var_3989", dtype = "float32", shape = (60,))#candidate|3989|(60,)|var|float32
var_3990 = relay.var("var_3990", dtype = "bool", shape = (14, 14, 9))#candidate|3990|(14, 14, 9)|var|bool
output = func_3986(var_3987,var_3988,var_3989,var_3990,)
func_3991 = relay.Function([var_3987,var_3988,var_3989,var_3990,], output)
mutated_mod['func_3991'] = func_3991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2201_call = mod.get_global_var('func_2201')
func_2202_call = mutated_mod.get_global_var('func_2202')
call_4013 = relay.TupleGetItem(func_2201_call(), 0)
call_4014 = relay.TupleGetItem(func_2202_call(), 0)
func_46_call = mod.get_global_var('func_46')
func_48_call = mutated_mod.get_global_var('func_48')
const_4016 = relay.const([-4.848903,-0.092220,5.350740,-1.602592,0.298847,-2.975245,3.763256,9.208262,-5.513918,6.481977,-3.028039,6.378032,-5.424905,7.310204,-3.122231,9.773923,3.209876,-4.617303,-0.512937,3.831677,-2.104387,6.368247,5.681768,3.131814,2.293533,0.001071,-8.308800,7.384509,-1.697052,-4.428294,6.421445,1.117342,6.532775,6.936668,8.124505,1.755885,3.872500,6.183838,1.292599,-3.270294,9.132046,-6.911911,-9.260851,-8.299538,-6.352991,-2.343997,5.455711,5.907291,2.416540,-3.161623,2.628901,-6.887752,-7.877118,8.709477,-4.065205,3.308846,-1.668089,6.245307,1.115596,4.606597], dtype = "float32")#candidate|4016|(60,)|const|float32
call_4015 = relay.TupleGetItem(func_46_call(relay.reshape(const_4016.astype('float32'), [6, 10, 1])), 0)
call_4017 = relay.TupleGetItem(func_48_call(relay.reshape(const_4016.astype('float32'), [6, 10, 1])), 0)
func_3247_call = mod.get_global_var('func_3247')
func_3249_call = mutated_mod.get_global_var('func_3249')
call_4049 = relay.TupleGetItem(func_3247_call(), 0)
call_4050 = relay.TupleGetItem(func_3249_call(), 0)
var_4051 = relay.var("var_4051", dtype = "float32", shape = (14, 14, 9))#candidate|4051|(14, 14, 9)|var|float32
bop_4052 = relay.divide(call_4013.astype('float64'), relay.reshape(var_4051.astype('float64'), relay.shape_of(call_4013))) # shape=(14, 14, 9)
bop_4055 = relay.divide(call_4014.astype('float64'), relay.reshape(var_4051.astype('float64'), relay.shape_of(call_4014))) # shape=(14, 14, 9)
func_2415_call = mod.get_global_var('func_2415')
func_2417_call = mutated_mod.get_global_var('func_2417')
call_4060 = relay.TupleGetItem(func_2415_call(), 0)
call_4061 = relay.TupleGetItem(func_2417_call(), 0)
func_3571_call = mod.get_global_var('func_3571')
func_3573_call = mutated_mod.get_global_var('func_3573')
call_4062 = relay.TupleGetItem(func_3571_call(), 0)
call_4063 = relay.TupleGetItem(func_3573_call(), 0)
uop_4073 = relay.log10(call_4015.astype('float64')) # shape=(6, 10, 1)
uop_4075 = relay.log10(call_4017.astype('float64')) # shape=(6, 10, 1)
output = relay.Tuple([const_4016,call_4049,bop_4052,call_4060,call_4062,uop_4073,])
output2 = relay.Tuple([const_4016,call_4050,bop_4055,call_4061,call_4063,uop_4075,])
func_4086 = relay.Function([var_4051,], output)
mod['func_4086'] = func_4086
mod = relay.transform.InferType()(mod)
var_4087 = relay.var("var_4087", dtype = "float32", shape = (14, 14, 9))#candidate|4087|(14, 14, 9)|var|float32
output = func_4086(var_4087)
func_4088 = relay.Function([var_4087], output)
mutated_mod['func_4088'] = func_4088
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4095 = relay.var("var_4095", dtype = "bool", shape = (8, 15, 1))#candidate|4095|(8, 15, 1)|var|bool
const_4096 = relay.const([[[True,False,True,True,True,True,False,False,True,False,False,False,False,True],[False,False,False,True,False,False,False,True,True,True,False,False,True,False],[False,False,True,True,True,False,True,False,True,True,False,False,False,False],[True,False,True,True,False,True,True,False,False,True,False,True,False,False],[True,False,True,False,False,False,True,True,False,False,True,True,False,False],[True,False,False,False,False,False,False,True,True,True,True,True,False,True],[False,True,False,False,True,True,False,True,True,True,True,True,False,False],[False,False,False,True,False,True,False,False,True,False,True,False,True,True],[False,True,False,False,False,False,False,True,True,False,True,False,False,False],[True,False,False,True,False,True,True,False,False,True,False,True,True,False],[True,False,True,True,True,True,False,False,False,False,True,True,True,False],[False,True,False,True,True,True,True,True,False,False,True,False,True,True],[True,False,True,False,False,False,False,True,False,False,True,False,False,True],[True,True,True,True,False,False,True,True,True,False,False,True,False,True],[True,True,True,False,True,False,False,True,True,False,False,True,False,False]],[[True,True,True,False,False,False,False,True,False,True,False,True,True,True],[False,True,False,True,False,True,True,True,False,False,False,True,False,False],[False,True,False,True,False,True,True,False,False,True,True,False,False,False],[False,True,True,False,False,True,False,False,True,True,True,True,True,True],[False,False,False,False,True,False,True,True,False,False,True,False,False,True],[False,False,True,False,False,False,True,False,True,True,True,False,False,False],[True,False,False,True,False,False,True,True,False,False,False,False,True,True],[False,True,False,True,True,True,True,True,True,False,False,True,True,True],[True,False,True,True,False,True,False,False,True,False,True,False,False,True],[False,True,False,True,False,True,False,False,False,True,True,False,False,True],[True,True,False,False,True,False,True,True,True,False,True,True,False,False],[True,False,True,True,False,False,False,False,True,False,False,True,False,False],[True,False,True,False,True,False,True,True,False,False,False,True,False,False],[False,False,False,True,True,False,True,True,False,True,True,True,False,False],[False,False,False,False,False,True,False,True,True,True,False,True,False,True]],[[True,False,True,True,True,True,True,False,True,False,True,True,True,False],[False,True,False,True,True,False,True,True,False,True,True,True,True,True],[True,True,False,False,True,True,True,False,True,False,False,False,False,True],[False,False,False,False,True,False,True,True,True,False,False,True,False,True],[False,True,True,True,False,True,True,True,True,True,False,False,True,False],[False,False,False,False,False,False,True,True,False,False,False,True,True,True],[False,True,False,True,False,True,False,False,True,False,True,False,True,True],[False,False,False,False,False,False,True,False,False,False,False,False,False,False],[False,True,True,False,False,False,True,False,True,False,False,False,False,False],[False,True,True,False,True,True,True,False,True,False,False,True,False,False],[False,False,True,False,False,False,False,False,False,False,True,False,False,True],[False,False,True,True,True,True,True,False,False,False,False,False,False,True],[True,False,True,True,True,False,True,True,True,False,True,True,False,False],[True,False,False,False,False,True,True,True,False,False,True,True,True,False],[True,True,True,False,False,False,False,True,True,True,False,False,True,True]],[[True,True,False,True,True,False,True,True,True,False,False,False,False,False],[True,True,False,False,True,True,False,True,True,False,False,False,False,False],[False,True,True,False,True,True,True,False,True,False,False,True,False,False],[True,False,False,False,False,False,False,True,True,False,False,True,True,False],[True,True,False,False,False,True,False,True,True,True,False,False,True,False],[True,True,False,False,True,True,False,True,True,False,False,True,True,False],[False,False,False,True,True,False,True,True,False,True,True,True,False,True],[True,True,True,True,False,True,True,False,False,False,True,False,False,False],[True,True,False,True,True,True,False,False,True,False,False,True,True,True],[False,False,False,False,True,True,True,False,False,False,False,True,False,True],[True,True,True,False,False,False,True,False,True,True,False,False,True,False],[False,True,True,False,True,True,False,False,False,True,False,True,False,False],[False,False,False,True,True,True,True,False,True,False,False,False,True,False],[True,True,True,True,False,False,True,True,False,False,True,False,True,False],[True,True,False,True,False,False,False,True,False,True,True,True,True,True]],[[False,True,False,True,False,True,False,False,True,True,True,True,True,False],[False,True,False,True,False,True,True,False,True,True,False,True,True,True],[True,False,True,True,True,True,False,True,False,False,True,True,True,False],[True,True,True,True,False,True,False,False,False,True,True,False,True,True],[True,False,False,False,False,True,True,False,False,True,True,False,True,True],[False,True,True,True,False,False,False,False,False,False,False,False,False,True],[False,True,False,False,True,True,False,True,False,False,True,True,True,True],[True,True,False,True,False,True,False,False,False,False,False,False,True,False],[False,True,False,True,False,False,True,True,True,True,False,False,True,False],[True,True,True,False,False,True,False,False,False,False,False,False,True,False],[False,False,False,True,True,False,False,True,True,True,False,False,False,False],[False,False,False,True,True,True,False,True,False,False,True,True,False,True],[True,True,True,False,True,True,True,False,False,True,True,True,False,True],[True,False,False,False,False,False,True,True,False,True,False,False,True,True],[True,False,False,True,True,True,True,True,True,False,True,True,True,True]],[[False,True,False,True,True,False,True,False,True,True,True,True,False,False],[True,False,True,True,False,False,False,True,True,True,False,False,True,False],[True,False,True,True,True,True,True,False,False,False,False,True,True,False],[False,False,False,True,False,True,False,False,True,False,True,True,True,False],[True,False,False,True,False,True,False,True,False,True,False,False,False,False],[True,True,False,True,True,False,True,True,False,True,True,True,False,True],[False,True,True,False,False,True,True,False,False,True,False,False,True,False],[True,True,False,False,False,True,False,False,True,True,True,True,False,True],[True,False,False,True,False,True,True,False,False,False,False,False,False,False],[False,True,False,True,False,True,False,False,False,False,False,True,True,False],[True,True,True,False,False,True,True,False,False,True,False,False,True,False],[False,True,True,False,False,True,False,False,False,False,True,False,False,True],[False,True,True,True,False,False,True,False,True,False,False,True,True,False],[True,True,True,True,False,False,False,True,True,False,True,False,False,False],[False,False,False,False,True,True,True,True,False,False,False,True,True,False]],[[True,False,True,False,True,False,False,False,False,False,True,True,False,False],[True,False,True,False,False,True,False,True,False,False,False,False,False,False],[False,True,True,True,False,False,True,True,False,True,True,False,True,False],[True,True,True,True,True,False,True,True,True,True,False,True,True,True],[False,False,True,False,True,False,True,True,False,False,True,False,False,False],[False,True,True,False,True,False,True,False,False,False,False,True,True,False],[False,True,True,False,True,True,False,False,True,True,False,False,False,True],[False,False,True,True,True,False,True,False,False,False,True,False,False,True],[True,True,True,False,False,True,False,True,False,True,False,True,False,False],[True,False,True,False,False,False,True,False,True,False,False,True,False,True],[False,False,False,True,True,False,True,False,True,False,True,True,True,True],[False,True,True,False,False,False,False,False,True,True,False,False,True,True],[True,True,False,True,True,True,True,False,True,False,False,False,False,False],[True,True,True,True,True,True,True,True,True,True,True,False,False,False],[False,True,True,False,False,True,True,True,False,False,False,True,True,False]],[[True,True,False,False,True,False,False,False,True,True,True,False,True,False],[True,True,False,True,True,True,True,True,True,True,True,True,True,True],[True,False,True,False,False,False,True,True,False,True,True,True,False,False],[True,True,False,False,True,True,False,False,False,True,True,True,False,False],[True,False,True,False,False,True,False,False,True,True,True,True,False,False],[False,True,False,True,False,True,False,True,False,False,True,False,True,True],[False,False,True,True,False,True,True,False,False,True,True,True,True,False],[False,True,True,False,False,True,True,True,False,True,False,False,True,False],[True,True,True,True,True,False,False,True,True,True,True,True,False,False],[False,True,True,False,True,False,False,True,True,False,False,False,True,True],[False,True,True,True,False,False,False,True,False,False,False,False,True,True],[True,False,False,False,True,True,False,False,True,True,False,False,True,False],[False,False,True,True,True,False,False,True,False,True,False,True,True,False],[True,True,False,False,True,False,False,False,True,True,True,False,False,True],[False,True,True,True,True,True,False,True,True,False,False,False,True,True]]], dtype = "bool")#candidate|4096|(8, 15, 14)|const|bool
bop_4097 = relay.logical_or(var_4095.astype('bool'), const_4096.astype('bool')) # shape=(8, 15, 14)
func_1952_call = mod.get_global_var('func_1952')
func_1953_call = mutated_mod.get_global_var('func_1953')
call_4111 = relay.TupleGetItem(func_1952_call(), 0)
call_4112 = relay.TupleGetItem(func_1953_call(), 0)
func_2201_call = mod.get_global_var('func_2201')
func_2202_call = mutated_mod.get_global_var('func_2202')
call_4127 = relay.TupleGetItem(func_2201_call(), 0)
call_4128 = relay.TupleGetItem(func_2202_call(), 0)
uop_4130 = relay.sin(call_4111.astype('float64')) # shape=(14, 14, 9)
uop_4132 = relay.sin(call_4112.astype('float64')) # shape=(14, 14, 9)
func_3288_call = mod.get_global_var('func_3288')
func_3290_call = mutated_mod.get_global_var('func_3290')
call_4133 = func_3288_call()
call_4134 = func_3288_call()
output = relay.Tuple([bop_4097,call_4127,uop_4130,call_4133,])
output2 = relay.Tuple([bop_4097,call_4128,uop_4132,call_4134,])
func_4140 = relay.Function([var_4095,], output)
mod['func_4140'] = func_4140
mod = relay.transform.InferType()(mod)
mutated_mod['func_4140'] = func_4140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4141 = relay.var("var_4141", dtype = "bool", shape = (8, 15, 1))#candidate|4141|(8, 15, 1)|var|bool
func_4140_call = mutated_mod.get_global_var('func_4140')
call_4142 = func_4140_call(var_4141)
output = call_4142
func_4143 = relay.Function([var_4141], output)
mutated_mod['func_4143'] = func_4143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2415_call = mod.get_global_var('func_2415')
func_2417_call = mutated_mod.get_global_var('func_2417')
call_4157 = relay.TupleGetItem(func_2415_call(), 0)
call_4158 = relay.TupleGetItem(func_2417_call(), 0)
func_2475_call = mod.get_global_var('func_2475')
func_2476_call = mutated_mod.get_global_var('func_2476')
call_4161 = func_2475_call()
call_4162 = func_2475_call()
output = relay.Tuple([call_4157,call_4161,])
output2 = relay.Tuple([call_4158,call_4162,])
func_4164 = relay.Function([], output)
mod['func_4164'] = func_4164
mod = relay.transform.InferType()(mod)
output = func_4164()
func_4165 = relay.Function([], output)
mutated_mod['func_4165'] = func_4165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2415_call = mod.get_global_var('func_2415')
func_2417_call = mutated_mod.get_global_var('func_2417')
call_4166 = relay.TupleGetItem(func_2415_call(), 0)
call_4167 = relay.TupleGetItem(func_2417_call(), 0)
output = relay.Tuple([call_4166,])
output2 = relay.Tuple([call_4167,])
func_4168 = relay.Function([], output)
mod['func_4168'] = func_4168
mod = relay.transform.InferType()(mod)
mutated_mod['func_4168'] = func_4168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4168_call = mutated_mod.get_global_var('func_4168')
call_4169 = func_4168_call()
output = call_4169
func_4170 = relay.Function([], output)
mutated_mod['func_4170'] = func_4170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4164_call = mod.get_global_var('func_4164')
func_4165_call = mutated_mod.get_global_var('func_4165')
call_4177 = relay.TupleGetItem(func_4164_call(), 0)
call_4178 = relay.TupleGetItem(func_4165_call(), 0)
func_2722_call = mod.get_global_var('func_2722')
func_2723_call = mutated_mod.get_global_var('func_2723')
call_4201 = func_2722_call()
call_4202 = func_2722_call()
func_2722_call = mod.get_global_var('func_2722')
func_2723_call = mutated_mod.get_global_var('func_2723')
call_4203 = func_2722_call()
call_4204 = func_2722_call()
output = relay.Tuple([call_4177,call_4201,call_4203,])
output2 = relay.Tuple([call_4178,call_4202,call_4204,])
func_4205 = relay.Function([], output)
mod['func_4205'] = func_4205
mod = relay.transform.InferType()(mod)
output = func_4205()
func_4206 = relay.Function([], output)
mutated_mod['func_4206'] = func_4206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_4250 = relay.TupleGetItem(func_4205_call(), 0)
call_4251 = relay.TupleGetItem(func_4206_call(), 0)
output = call_4250
output2 = call_4251
func_4278 = relay.Function([], output)
mod['func_4278'] = func_4278
mod = relay.transform.InferType()(mod)
mutated_mod['func_4278'] = func_4278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4278_call = mutated_mod.get_global_var('func_4278')
call_4279 = func_4278_call()
output = call_4279
func_4280 = relay.Function([], output)
mutated_mod['func_4280'] = func_4280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1605_call = mod.get_global_var('func_1605')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_4305 = relay.TupleGetItem(func_1605_call(), 0)
call_4306 = relay.TupleGetItem(func_1606_call(), 0)
func_2917_call = mod.get_global_var('func_2917')
func_2918_call = mutated_mod.get_global_var('func_2918')
call_4345 = relay.TupleGetItem(func_2917_call(), 0)
call_4346 = relay.TupleGetItem(func_2918_call(), 0)
output = relay.Tuple([call_4305,call_4345,])
output2 = relay.Tuple([call_4306,call_4346,])
func_4347 = relay.Function([], output)
mod['func_4347'] = func_4347
mod = relay.transform.InferType()(mod)
output = func_4347()
func_4348 = relay.Function([], output)
mutated_mod['func_4348'] = func_4348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1997_call = mod.get_global_var('func_1997')
func_1999_call = mutated_mod.get_global_var('func_1999')
call_4402 = relay.TupleGetItem(func_1997_call(), 0)
call_4403 = relay.TupleGetItem(func_1999_call(), 0)
var_4437 = relay.var("var_4437", dtype = "float64", shape = (14, 14, 9))#candidate|4437|(14, 14, 9)|var|float64
bop_4438 = relay.bitwise_and(call_4402.astype('int8'), relay.reshape(var_4437.astype('int8'), relay.shape_of(call_4402))) # shape=(14, 14, 9)
bop_4441 = relay.bitwise_and(call_4403.astype('int8'), relay.reshape(var_4437.astype('int8'), relay.shape_of(call_4403))) # shape=(14, 14, 9)
func_2775_call = mod.get_global_var('func_2775')
func_2776_call = mutated_mod.get_global_var('func_2776')
call_4453 = relay.TupleGetItem(func_2775_call(), 1)
call_4454 = relay.TupleGetItem(func_2776_call(), 1)
func_4086_call = mod.get_global_var('func_4086')
func_4088_call = mutated_mod.get_global_var('func_4088')
call_4456 = relay.TupleGetItem(func_4086_call(relay.reshape(var_4437.astype('float32'), [14, 14, 9])), 1)
call_4457 = relay.TupleGetItem(func_4088_call(relay.reshape(var_4437.astype('float32'), [14, 14, 9])), 1)
func_2151_call = mod.get_global_var('func_2151')
func_2153_call = mutated_mod.get_global_var('func_2153')
call_4468 = relay.TupleGetItem(func_2151_call(), 5)
call_4469 = relay.TupleGetItem(func_2153_call(), 5)
uop_4473 = relay.atanh(call_4468.astype('float64')) # shape=(5, 104)
uop_4475 = relay.atanh(call_4469.astype('float64')) # shape=(5, 104)
bop_4476 = relay.logical_xor(uop_4473.astype('int8'), relay.reshape(call_4453.astype('int8'), relay.shape_of(uop_4473))) # shape=(5, 104)
bop_4479 = relay.logical_xor(uop_4475.astype('int8'), relay.reshape(call_4454.astype('int8'), relay.shape_of(uop_4475))) # shape=(5, 104)
uop_4480 = relay.asin(uop_4473.astype('float32')) # shape=(5, 104)
uop_4482 = relay.asin(uop_4475.astype('float32')) # shape=(5, 104)
uop_4495 = relay.log10(uop_4480.astype('float32')) # shape=(5, 104)
uop_4497 = relay.log10(uop_4482.astype('float32')) # shape=(5, 104)
var_4500 = relay.var("var_4500", dtype = "float32", shape = (5, 104))#candidate|4500|(5, 104)|var|float32
bop_4501 = relay.bitwise_and(uop_4495.astype('uint64'), relay.reshape(var_4500.astype('uint64'), relay.shape_of(uop_4495))) # shape=(5, 104)
bop_4504 = relay.bitwise_and(uop_4497.astype('uint64'), relay.reshape(var_4500.astype('uint64'), relay.shape_of(uop_4497))) # shape=(5, 104)
output = relay.Tuple([bop_4438,call_4456,bop_4476,bop_4501,])
output2 = relay.Tuple([bop_4441,call_4457,bop_4479,bop_4504,])
func_4505 = relay.Function([var_4437,var_4500,], output)
mod['func_4505'] = func_4505
mod = relay.transform.InferType()(mod)
var_4506 = relay.var("var_4506", dtype = "float64", shape = (14, 14, 9))#candidate|4506|(14, 14, 9)|var|float64
var_4507 = relay.var("var_4507", dtype = "float32", shape = (5, 104))#candidate|4507|(5, 104)|var|float32
output = func_4505(var_4506,var_4507,)
func_4508 = relay.Function([var_4506,var_4507,], output)
mutated_mod['func_4508'] = func_4508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2917_call = mod.get_global_var('func_2917')
func_2918_call = mutated_mod.get_global_var('func_2918')
call_4528 = relay.TupleGetItem(func_2917_call(), 0)
call_4529 = relay.TupleGetItem(func_2918_call(), 0)
var_4539 = relay.var("var_4539", dtype = "float64", shape = (14, 14, 9))#candidate|4539|(14, 14, 9)|var|float64
bop_4540 = relay.not_equal(call_4528.astype('bool'), relay.reshape(var_4539.astype('bool'), relay.shape_of(call_4528))) # shape=(14, 14, 9)
bop_4543 = relay.not_equal(call_4529.astype('bool'), relay.reshape(var_4539.astype('bool'), relay.shape_of(call_4529))) # shape=(14, 14, 9)
func_3906_call = mod.get_global_var('func_3906')
func_3907_call = mutated_mod.get_global_var('func_3907')
call_4545 = relay.TupleGetItem(func_3906_call(), 2)
call_4546 = relay.TupleGetItem(func_3907_call(), 2)
func_2201_call = mod.get_global_var('func_2201')
func_2202_call = mutated_mod.get_global_var('func_2202')
call_4555 = relay.TupleGetItem(func_2201_call(), 0)
call_4556 = relay.TupleGetItem(func_2202_call(), 0)
output = relay.Tuple([bop_4540,call_4545,call_4555,])
output2 = relay.Tuple([bop_4543,call_4546,call_4556,])
func_4576 = relay.Function([var_4539,], output)
mod['func_4576'] = func_4576
mod = relay.transform.InferType()(mod)
var_4577 = relay.var("var_4577", dtype = "float64", shape = (14, 14, 9))#candidate|4577|(14, 14, 9)|var|float64
output = func_4576(var_4577)
func_4578 = relay.Function([var_4577], output)
mutated_mod['func_4578'] = func_4578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2201_call = mod.get_global_var('func_2201')
func_2202_call = mutated_mod.get_global_var('func_2202')
call_4580 = relay.TupleGetItem(func_2201_call(), 0)
call_4581 = relay.TupleGetItem(func_2202_call(), 0)
output = call_4580
output2 = call_4581
func_4592 = relay.Function([], output)
mod['func_4592'] = func_4592
mod = relay.transform.InferType()(mod)
output = func_4592()
func_4593 = relay.Function([], output)
mutated_mod['func_4593'] = func_4593
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4618 = relay.const([[[7.271620,-8.123366,6.404645,5.387755,-7.084028],[-3.201355,-1.248219,-6.297759,-5.804057,-1.159862]],[[5.905501,9.497714,-2.387659,-5.185546,-7.784822],[7.883868,6.795824,-1.630991,-4.285690,5.850392]],[[4.430703,-5.060163,-4.458592,9.822989,3.865868],[-4.726961,-4.666263,-0.082349,-4.245348,4.207946]],[[-8.216559,-7.468507,-0.699722,4.549984,-6.309555],[1.282417,-5.606764,-7.666990,7.676391,9.068960]],[[8.096026,5.726141,8.469544,-2.401767,-1.392713],[-4.091716,-4.709848,-6.028525,-3.956502,3.992450]],[[-3.106303,-5.143301,-0.596501,4.026756,-7.486353],[-7.548280,7.856721,-1.000791,9.419610,-3.085414]],[[-7.114677,2.509263,2.380207,8.460492,2.063273],[8.228435,-4.347651,-4.240014,-1.894132,-9.117823]],[[-2.863007,-8.025770,-8.497811,7.494858,2.504674],[-4.205245,-5.821163,-4.465535,8.360321,6.526376]],[[-0.771100,6.845628,4.347774,-6.801860,3.299766],[-0.034461,8.207017,4.177377,1.208193,-3.488605]],[[-9.417795,-7.275434,-1.929167,9.913529,5.968125],[-9.068872,4.391695,-6.787557,1.774041,-4.623206]],[[8.426092,-8.712820,7.592366,-0.254047,-2.997099],[4.642555,3.502137,-5.810470,-5.233873,-0.517434]],[[-6.340201,0.009595,-6.718688,-9.818603,-7.565680],[-3.484485,-8.048514,5.805831,6.526813,-3.623233]],[[-8.124856,-1.495020,-5.726143,5.652185,-8.181825],[-2.273236,-6.515855,-7.792590,4.523692,-4.595055]],[[1.507551,8.949208,5.992400,6.220682,-8.007443],[7.644957,5.892622,1.534430,-3.428162,-5.223483]],[[-7.641438,9.404292,9.837266,1.665948,4.079591],[-1.301449,-1.702929,-4.897766,-8.265823,-8.962934]],[[0.752323,1.544477,-7.472313,-6.647719,7.025812],[0.728105,8.928894,-6.690991,5.141522,9.137899]]], dtype = "float64")#candidate|4618|(16, 2, 5)|const|float64
uop_4619 = relay.tan(const_4618.astype('float64')) # shape=(16, 2, 5)
output = relay.Tuple([uop_4619,])
output2 = relay.Tuple([uop_4619,])
func_4622 = relay.Function([], output)
mod['func_4622'] = func_4622
mod = relay.transform.InferType()(mod)
output = func_4622()
func_4623 = relay.Function([], output)
mutated_mod['func_4623'] = func_4623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2475_call = mod.get_global_var('func_2475')
func_2476_call = mutated_mod.get_global_var('func_2476')
call_4631 = func_2475_call()
call_4632 = func_2475_call()
output = relay.Tuple([call_4631,])
output2 = relay.Tuple([call_4632,])
func_4641 = relay.Function([], output)
mod['func_4641'] = func_4641
mod = relay.transform.InferType()(mod)
mutated_mod['func_4641'] = func_4641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4641_call = mutated_mod.get_global_var('func_4641')
call_4642 = func_4641_call()
output = call_4642
func_4643 = relay.Function([], output)
mutated_mod['func_4643'] = func_4643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2296_call = mod.get_global_var('func_2296')
func_2297_call = mutated_mod.get_global_var('func_2297')
call_4709 = func_2296_call()
call_4710 = func_2296_call()
func_4576_call = mod.get_global_var('func_4576')
func_4578_call = mutated_mod.get_global_var('func_4578')
var_4716 = relay.var("var_4716", dtype = "float64", shape = (1764, 1))#candidate|4716|(1764, 1)|var|float64
call_4715 = relay.TupleGetItem(func_4576_call(relay.reshape(var_4716.astype('float64'), [14, 14, 9])), 0)
call_4717 = relay.TupleGetItem(func_4578_call(relay.reshape(var_4716.astype('float64'), [14, 14, 9])), 0)
output = relay.Tuple([call_4709,call_4715,var_4716,])
output2 = relay.Tuple([call_4710,call_4717,var_4716,])
func_4730 = relay.Function([var_4716,], output)
mod['func_4730'] = func_4730
mod = relay.transform.InferType()(mod)
mutated_mod['func_4730'] = func_4730
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4731 = relay.var("var_4731", dtype = "float64", shape = (1764, 1))#candidate|4731|(1764, 1)|var|float64
func_4730_call = mutated_mod.get_global_var('func_4730')
call_4732 = func_4730_call(var_4731)
output = call_4732
func_4733 = relay.Function([var_4731], output)
mutated_mod['func_4733'] = func_4733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4755 = relay.var("var_4755", dtype = "float64", shape = (6, 5, 1))#candidate|4755|(6, 5, 1)|var|float64
uop_4756 = relay.sigmoid(var_4755.astype('float64')) # shape=(6, 5, 1)
uop_4758 = relay.log10(uop_4756.astype('float64')) # shape=(6, 5, 1)
output = uop_4758
output2 = uop_4758
func_4773 = relay.Function([var_4755,], output)
mod['func_4773'] = func_4773
mod = relay.transform.InferType()(mod)
var_4774 = relay.var("var_4774", dtype = "float64", shape = (6, 5, 1))#candidate|4774|(6, 5, 1)|var|float64
output = func_4773(var_4774)
func_4775 = relay.Function([var_4774], output)
mutated_mod['func_4775'] = func_4775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3097_call = mod.get_global_var('func_3097')
func_3099_call = mutated_mod.get_global_var('func_3099')
call_4779 = relay.TupleGetItem(func_3097_call(), 0)
call_4780 = relay.TupleGetItem(func_3099_call(), 0)
output = relay.Tuple([call_4779,])
output2 = relay.Tuple([call_4780,])
func_4784 = relay.Function([], output)
mod['func_4784'] = func_4784
mod = relay.transform.InferType()(mod)
mutated_mod['func_4784'] = func_4784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4784_call = mutated_mod.get_global_var('func_4784')
call_4785 = func_4784_call()
output = call_4785
func_4786 = relay.Function([], output)
mutated_mod['func_4786'] = func_4786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1734_call = mod.get_global_var('func_1734')
func_1736_call = mutated_mod.get_global_var('func_1736')
call_4798 = relay.TupleGetItem(func_1734_call(), 0)
call_4799 = relay.TupleGetItem(func_1736_call(), 0)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_4806 = relay.TupleGetItem(func_4205_call(), 2)
call_4807 = relay.TupleGetItem(func_4206_call(), 2)
func_1090_call = mod.get_global_var('func_1090')
func_1093_call = mutated_mod.get_global_var('func_1093')
var_4823 = relay.var("var_4823", dtype = "float32", shape = (360, 6))#candidate|4823|(360, 6)|var|float32
call_4822 = func_1090_call(relay.reshape(var_4823.astype('float32'), [15, 12, 12]), relay.reshape(var_4823.astype('float32'), [15, 12, 12]), )
call_4824 = func_1090_call(relay.reshape(var_4823.astype('float32'), [15, 12, 12]), relay.reshape(var_4823.astype('float32'), [15, 12, 12]), )
bop_4831 = relay.minimum(var_4823.astype('int8'), relay.reshape(call_4822.astype('int8'), relay.shape_of(var_4823))) # shape=(360, 6)
bop_4834 = relay.minimum(var_4823.astype('int8'), relay.reshape(call_4824.astype('int8'), relay.shape_of(var_4823))) # shape=(360, 6)
output = relay.Tuple([call_4798,call_4806,bop_4831,])
output2 = relay.Tuple([call_4799,call_4807,bop_4834,])
func_4838 = relay.Function([var_4823,], output)
mod['func_4838'] = func_4838
mod = relay.transform.InferType()(mod)
var_4839 = relay.var("var_4839", dtype = "float32", shape = (360, 6))#candidate|4839|(360, 6)|var|float32
output = func_4838(var_4839)
func_4840 = relay.Function([var_4839], output)
mutated_mod['func_4840'] = func_4840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4164_call = mod.get_global_var('func_4164')
func_4165_call = mutated_mod.get_global_var('func_4165')
call_4874 = relay.TupleGetItem(func_4164_call(), 0)
call_4875 = relay.TupleGetItem(func_4165_call(), 0)
output = call_4874
output2 = call_4875
func_4894 = relay.Function([], output)
mod['func_4894'] = func_4894
mod = relay.transform.InferType()(mod)
output = func_4894()
func_4895 = relay.Function([], output)
mutated_mod['func_4895'] = func_4895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2722_call = mod.get_global_var('func_2722')
func_2723_call = mutated_mod.get_global_var('func_2723')
call_4948 = func_2722_call()
call_4949 = func_2722_call()
output = relay.Tuple([call_4948,])
output2 = relay.Tuple([call_4949,])
func_4953 = relay.Function([], output)
mod['func_4953'] = func_4953
mod = relay.transform.InferType()(mod)
mutated_mod['func_4953'] = func_4953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4953_call = mutated_mod.get_global_var('func_4953')
call_4954 = func_4953_call()
output = call_4954
func_4955 = relay.Function([], output)
mutated_mod['func_4955'] = func_4955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_5032 = relay.TupleGetItem(func_4205_call(), 0)
call_5033 = relay.TupleGetItem(func_4206_call(), 0)
func_4168_call = mod.get_global_var('func_4168')
func_4170_call = mutated_mod.get_global_var('func_4170')
call_5041 = relay.TupleGetItem(func_4168_call(), 0)
call_5042 = relay.TupleGetItem(func_4170_call(), 0)
output = relay.Tuple([call_5032,call_5041,])
output2 = relay.Tuple([call_5033,call_5042,])
func_5043 = relay.Function([], output)
mod['func_5043'] = func_5043
mod = relay.transform.InferType()(mod)
output = func_5043()
func_5044 = relay.Function([], output)
mutated_mod['func_5044'] = func_5044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1908_call = mod.get_global_var('func_1908')
func_1909_call = mutated_mod.get_global_var('func_1909')
call_5058 = relay.TupleGetItem(func_1908_call(), 1)
call_5059 = relay.TupleGetItem(func_1909_call(), 1)
output = relay.Tuple([call_5058,])
output2 = relay.Tuple([call_5059,])
func_5067 = relay.Function([], output)
mod['func_5067'] = func_5067
mod = relay.transform.InferType()(mod)
mutated_mod['func_5067'] = func_5067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5067_call = mutated_mod.get_global_var('func_5067')
call_5068 = func_5067_call()
output = call_5068
func_5069 = relay.Function([], output)
mutated_mod['func_5069'] = func_5069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5043_call = mod.get_global_var('func_5043')
func_5044_call = mutated_mod.get_global_var('func_5044')
call_5070 = relay.TupleGetItem(func_5043_call(), 1)
call_5071 = relay.TupleGetItem(func_5044_call(), 1)
output = relay.Tuple([call_5070,])
output2 = relay.Tuple([call_5071,])
func_5075 = relay.Function([], output)
mod['func_5075'] = func_5075
mod = relay.transform.InferType()(mod)
mutated_mod['func_5075'] = func_5075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5075_call = mutated_mod.get_global_var('func_5075')
call_5076 = func_5075_call()
output = call_5076
func_5077 = relay.Function([], output)
mutated_mod['func_5077'] = func_5077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2296_call = mod.get_global_var('func_2296')
func_2297_call = mutated_mod.get_global_var('func_2297')
call_5095 = func_2296_call()
call_5096 = func_2296_call()
output = relay.Tuple([call_5095,])
output2 = relay.Tuple([call_5096,])
func_5099 = relay.Function([], output)
mod['func_5099'] = func_5099
mod = relay.transform.InferType()(mod)
mutated_mod['func_5099'] = func_5099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5099_call = mutated_mod.get_global_var('func_5099')
call_5100 = func_5099_call()
output = call_5100
func_5101 = relay.Function([], output)
mutated_mod['func_5101'] = func_5101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4784_call = mod.get_global_var('func_4784')
func_4786_call = mutated_mod.get_global_var('func_4786')
call_5154 = relay.TupleGetItem(func_4784_call(), 0)
call_5155 = relay.TupleGetItem(func_4786_call(), 0)
const_5161 = relay.const([[7.001170,-2.921514,-9.310691,7.704547,-5.205066,-1.580262,4.124414,-0.184606,-6.077985,-7.728666,-2.102794,-7.264711,-6.275678,-3.878492,-7.192363,-5.988751,-3.427071,6.879069,3.669708,3.969233,-3.809164,-7.477175,-2.951646,-0.192707,-2.599247,4.801018,8.812573,2.055305,5.583859,-4.756189,1.161913,2.858032,1.204425,-2.707115,9.551539,-8.267010,6.685435,6.079733,-2.895924,-3.929482,7.231144,8.230015,9.156760,-7.137312,2.226272,1.642890,3.856709,-1.080421,3.017424,1.521848,-6.971711,-3.114737,-8.598318,5.948201,-2.884190,8.058410,-5.958842,-3.797928,4.098992,-2.989840,8.241372,9.669479,2.433825,6.323056,-6.712792,3.453958,5.884563,-3.562478,-9.217346,-6.033713,7.999201,-3.301923,-4.736128,-0.810073,1.777511,-4.400669,-2.645218,2.318689,0.592387,-2.204297,3.813588,-5.893536,9.403497,-4.322866,1.387982,-5.420188,-2.467369,-3.535996,-7.097741,-0.294807,7.261600,-0.741047,-6.484465,2.153895,9.892494,1.858704,-1.177478,0.146687,-4.383211,2.847684,-1.759830,-7.162063,-9.453817,2.002979],[4.755295,-9.506504,0.878202,-9.404537,-0.973002,8.588609,7.945272,-2.530025,3.522191,-1.000755,8.070287,1.676386,8.178331,-8.121995,-6.876058,-8.333981,5.639203,-2.157061,-8.462455,-8.370271,2.734259,-1.742532,-5.704559,-9.752899,-9.139995,5.835811,-7.602472,2.593674,-0.897821,5.877175,0.853083,4.254887,-8.550677,5.986849,-2.708076,6.331872,-9.995792,7.353433,-3.401929,-2.350286,-5.677978,-5.132187,-5.123526,-5.283581,9.939760,8.140210,-2.535180,9.513037,-2.808148,5.862776,-7.194912,-3.245377,-2.197836,3.262220,2.729982,2.040707,2.552955,-0.364063,7.637313,-4.504706,-8.937940,0.570229,-0.239345,6.461713,-6.255251,-7.717749,0.336729,5.246848,-1.079687,-8.098481,-6.332025,1.057787,4.838595,6.607001,-2.943423,0.922274,5.177656,0.392515,8.833858,-7.598639,1.514846,-3.863923,-2.956245,-7.778866,-1.157952,-4.297222,-5.355898,-5.234950,-5.857779,-2.833877,-6.469574,9.045581,2.419997,7.806525,-1.802498,-1.480474,-3.909572,-9.558934,-3.082673,2.662693,-6.648523,4.535550,8.239681,-9.939426],[0.860295,9.937460,2.452243,9.017318,9.522049,1.609731,-4.559260,-1.175622,4.291666,5.301629,2.855141,-6.952825,1.243680,3.730324,-4.480745,-4.923621,-2.297471,6.896610,-8.987720,-4.999498,9.969493,6.494983,3.216078,8.468206,6.970113,-0.812178,6.961207,-2.659182,-5.055318,-6.420288,2.937422,-7.565218,-6.092382,2.674483,-0.501112,-7.580957,-8.193350,-2.039123,1.811615,-3.327099,-1.955643,-6.245717,9.239058,-7.795132,-7.169478,-1.794493,2.689374,8.964821,-5.466597,4.161959,5.471481,5.801122,7.538081,5.449929,5.793792,2.267638,3.726255,8.995085,-2.236008,-2.413660,-8.264987,3.178710,-6.625936,5.990453,3.099360,9.538808,6.383512,-3.933593,-7.593362,8.165780,5.181192,-4.745413,-0.145051,-9.163944,8.696411,6.509825,3.343417,-0.118746,-6.030792,8.276503,-2.745402,-6.419626,6.322155,-2.286435,-0.148325,8.555465,1.374554,-0.318158,2.924426,-8.973304,-3.288678,0.682463,-4.698766,8.664512,3.853283,9.059045,6.344500,3.873945,-0.736576,3.072603,-2.794889,4.176612,-7.886502,9.136649],[-3.061678,-7.518849,-0.820847,-6.704247,0.339223,2.642770,-8.098857,-9.380103,-9.496438,-1.119900,-4.942145,6.498378,-9.672360,-8.666860,0.954412,0.589305,8.444306,-1.646207,0.625688,0.771738,-7.922416,7.372237,7.530908,-4.908608,-0.942123,-7.608228,-3.152934,3.568974,-6.293014,4.330073,5.547413,8.853343,2.933070,-6.320926,9.415568,8.223842,-6.631588,-0.365391,8.224045,1.564678,-3.240972,-3.713940,-9.478153,3.832623,6.682957,-9.113061,5.990421,9.031753,9.866567,2.007279,7.578457,-2.393793,-0.595197,0.036038,4.959823,5.031279,2.275329,3.811228,2.670139,-1.673853,0.602742,4.508901,4.004791,5.848342,4.508981,9.755640,-4.389390,-3.131887,-7.820946,-5.151263,4.105706,8.072706,9.323273,-1.003356,-8.682714,6.163624,3.474130,-7.169617,0.862775,3.584408,0.943940,-6.753318,-5.200850,-8.514164,-8.308107,-7.180239,-5.880215,-0.671240,-6.013067,-3.374815,-3.461575,4.023514,-0.902515,-6.043147,0.877973,-0.329334,-6.265741,-4.825406,-4.050321,3.256618,7.841610,-0.566090,-3.576137,9.018290],[6.550958,9.146239,6.788681,4.134535,-6.666823,-3.763226,7.242388,-3.673119,7.053493,-3.317289,0.779576,-8.396072,4.530752,-1.237420,-8.111493,9.583457,8.226186,6.404596,6.434309,9.714537,-6.997030,3.785488,-4.689987,4.113994,3.333317,7.061355,4.019716,7.156658,-5.086305,-6.620369,-3.992763,-7.703499,-5.518657,-9.231437,-8.670960,-3.907234,8.078729,-2.651376,3.771407,0.109733,5.998055,-5.785972,3.470765,-1.244814,4.353584,-2.213360,-9.575099,-1.966161,-3.994569,-7.187878,-1.352056,5.592520,-8.998900,5.288918,6.125321,-8.639704,-2.948080,4.744694,7.634552,0.345953,1.938894,-8.911533,6.302855,-5.392861,5.553857,-9.653851,3.108641,-2.797363,-9.543681,-0.576661,-1.302583,-8.554922,8.786284,-5.323363,6.159724,5.216663,2.007426,-1.718889,-2.304770,-2.431076,4.142122,2.640067,-8.819753,1.786825,-0.493907,-5.142076,-5.602878,6.982959,4.589290,-2.372946,0.180550,6.555184,2.464536,5.641114,-5.272135,-2.442146,7.399821,9.828279,7.206598,-9.333192,-1.709057,-7.196031,4.998640,-9.947535]], dtype = "float64")#candidate|5161|(5, 104)|const|float64
bop_5162 = relay.right_shift(call_5154.astype('uint64'), relay.reshape(const_5161.astype('uint64'), relay.shape_of(call_5154))) # shape=(5, 104)
bop_5165 = relay.right_shift(call_5155.astype('uint64'), relay.reshape(const_5161.astype('uint64'), relay.shape_of(call_5155))) # shape=(5, 104)
output = relay.Tuple([bop_5162,])
output2 = relay.Tuple([bop_5165,])
func_5170 = relay.Function([], output)
mod['func_5170'] = func_5170
mod = relay.transform.InferType()(mod)
output = func_5170()
func_5171 = relay.Function([], output)
mutated_mod['func_5171'] = func_5171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5099_call = mod.get_global_var('func_5099')
func_5101_call = mutated_mod.get_global_var('func_5101')
call_5186 = relay.TupleGetItem(func_5099_call(), 0)
call_5187 = relay.TupleGetItem(func_5101_call(), 0)
output = call_5186
output2 = call_5187
func_5189 = relay.Function([], output)
mod['func_5189'] = func_5189
mod = relay.transform.InferType()(mod)
mutated_mod['func_5189'] = func_5189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5189_call = mutated_mod.get_global_var('func_5189')
call_5190 = func_5189_call()
output = call_5190
func_5191 = relay.Function([], output)
mutated_mod['func_5191'] = func_5191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5043_call = mod.get_global_var('func_5043')
func_5044_call = mutated_mod.get_global_var('func_5044')
call_5202 = relay.TupleGetItem(func_5043_call(), 0)
call_5203 = relay.TupleGetItem(func_5044_call(), 0)
func_2503_call = mod.get_global_var('func_2503')
func_2506_call = mutated_mod.get_global_var('func_2506')
const_5213 = relay.const([-5.668063,6.292288,-8.930341,7.896517,-9.760702,-3.357592,2.544070,5.833625,4.351147,-8.698289,-1.097260,8.659009,-6.181855,-8.104262,8.928822,-9.673728,9.009693,-1.407822,2.462260,4.065764,8.251168,-5.795571,7.477118,0.999543,8.244117,4.800158,-5.191302,6.097184,-0.136843,-4.774127,-1.851441,4.319853,-3.388118,9.758133,3.163311,-6.578006,-4.170686,4.442178,-3.430726,2.970231,-9.291859,9.202341,4.300385,-1.773749,-0.754015,5.121957,1.035410,0.443355,-9.852794,2.125240,5.628877,-4.734593,-6.853666,-3.156576,4.155827,-0.617453,-5.742312,-0.584702,1.722045,4.711723,-0.078181,-5.947612,0.813247,4.446424,-4.632786,2.366573,-8.077901,3.433651,-6.665279,3.231872,1.383436,9.477909,-9.464183,5.213737,-9.845488,1.950738,9.015319,6.385261,8.790890,8.679087,2.871856,-4.900162,-4.235782,2.181271,1.365139,-0.484226,-0.626934,-2.622930,-4.723566,-2.717051,5.019120,8.582372,1.912571,0.672058,9.391042,-1.017232,-7.494460,2.650804,5.556615,2.182684,0.988233,1.231383,8.962769,-3.236518,-5.826701,2.910041,3.455149,-8.477304,4.686628,5.349698,-3.109996,3.063638,-0.871800,-2.962684,9.289536,-6.551172,0.299744,1.775675,-5.599070,-5.169381,-6.872940,-6.281331,-5.217207,1.945717,-8.921283,3.653895,-3.892197,3.788361,0.547927,-4.347775,4.520837,1.285221,5.123976,-4.252115,5.468435], dtype = "float64")#candidate|5213|(135,)|const|float64
call_5212 = func_2503_call(relay.reshape(const_5213.astype('float64'), [3, 15, 3]))
call_5214 = func_2503_call(relay.reshape(const_5213.astype('float64'), [3, 15, 3]))
func_2201_call = mod.get_global_var('func_2201')
func_2202_call = mutated_mod.get_global_var('func_2202')
call_5219 = relay.TupleGetItem(func_2201_call(), 0)
call_5220 = relay.TupleGetItem(func_2202_call(), 0)
func_5170_call = mod.get_global_var('func_5170')
func_5171_call = mutated_mod.get_global_var('func_5171')
call_5221 = relay.TupleGetItem(func_5170_call(), 0)
call_5222 = relay.TupleGetItem(func_5171_call(), 0)
output = relay.Tuple([call_5202,call_5212,const_5213,call_5219,call_5221,])
output2 = relay.Tuple([call_5203,call_5214,const_5213,call_5220,call_5222,])
func_5236 = relay.Function([], output)
mod['func_5236'] = func_5236
mod = relay.transform.InferType()(mod)
mutated_mod['func_5236'] = func_5236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5236_call = mutated_mod.get_global_var('func_5236')
call_5237 = func_5236_call()
output = call_5237
func_5238 = relay.Function([], output)
mutated_mod['func_5238'] = func_5238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3621_call = mod.get_global_var('func_3621')
func_3623_call = mutated_mod.get_global_var('func_3623')
call_5250 = relay.TupleGetItem(func_3621_call(), 0)
call_5251 = relay.TupleGetItem(func_3623_call(), 0)
func_4784_call = mod.get_global_var('func_4784')
func_4786_call = mutated_mod.get_global_var('func_4786')
call_5252 = relay.TupleGetItem(func_4784_call(), 0)
call_5253 = relay.TupleGetItem(func_4786_call(), 0)
uop_5260 = relay.cos(call_5252.astype('float64')) # shape=(5, 104)
uop_5262 = relay.cos(call_5253.astype('float64')) # shape=(5, 104)
uop_5263 = relay.rsqrt(uop_5260.astype('float64')) # shape=(5, 104)
uop_5265 = relay.rsqrt(uop_5262.astype('float64')) # shape=(5, 104)
func_2535_call = mod.get_global_var('func_2535')
func_2537_call = mutated_mod.get_global_var('func_2537')
call_5292 = func_2535_call(relay.reshape(call_5250.astype('float32'), [14, 14, 9]))
call_5293 = func_2535_call(relay.reshape(call_5250.astype('float32'), [14, 14, 9]))
output = relay.Tuple([call_5250,uop_5263,call_5292,])
output2 = relay.Tuple([call_5251,uop_5265,call_5293,])
func_5298 = relay.Function([], output)
mod['func_5298'] = func_5298
mod = relay.transform.InferType()(mod)
output = func_5298()
func_5299 = relay.Function([], output)
mutated_mod['func_5299'] = func_5299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3660_call = mutated_mod.get_global_var('func_3660')
call_5303 = func_3658_call()
call_5304 = func_3658_call()
output = relay.Tuple([call_5303,])
output2 = relay.Tuple([call_5304,])
func_5307 = relay.Function([], output)
mod['func_5307'] = func_5307
mod = relay.transform.InferType()(mod)
output = func_5307()
func_5308 = relay.Function([], output)
mutated_mod['func_5308'] = func_5308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2475_call = mod.get_global_var('func_2475')
func_2476_call = mutated_mod.get_global_var('func_2476')
call_5312 = func_2475_call()
call_5313 = func_2475_call()
func_4278_call = mod.get_global_var('func_4278')
func_4280_call = mutated_mod.get_global_var('func_4280')
call_5329 = func_4278_call()
call_5330 = func_4278_call()
output = relay.Tuple([call_5312,call_5329,])
output2 = relay.Tuple([call_5313,call_5330,])
func_5331 = relay.Function([], output)
mod['func_5331'] = func_5331
mod = relay.transform.InferType()(mod)
mutated_mod['func_5331'] = func_5331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5331_call = mutated_mod.get_global_var('func_5331')
call_5332 = func_5331_call()
output = call_5332
func_5333 = relay.Function([], output)
mutated_mod['func_5333'] = func_5333
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5354 = relay.var("var_5354", dtype = "int32", shape = (1, 15, 14))#candidate|5354|(1, 15, 14)|var|int32
const_5355 = relay.const([[[5,-10,4,-7,9,-4,-1,-7,7,-8,-8,-5,10,6],[-2,-7,-4,5,-6,7,-10,-10,-7,9,-8,6,10,9],[-3,-3,7,2,-7,-1,1,-10,9,1,6,10,7,-8],[-9,-8,-3,-9,-2,-2,-10,-2,1,2,-4,5,-5,4],[1,10,10,-4,10,3,-4,1,-10,-5,-8,2,-1,2],[2,-7,-9,-2,-6,1,-2,8,-3,-10,-5,-5,-3,5],[-4,2,-2,-8,8,1,8,10,8,6,8,-4,2,-5],[6,2,4,5,-3,-8,-3,-2,1,-3,-1,-10,-6,3],[-2,4,6,-8,-8,-8,-6,-1,-5,1,7,3,-2,9],[7,-5,-8,-7,-5,-7,-9,-5,1,-3,-2,-2,-8,-9],[8,-8,1,4,-2,-6,-9,3,7,-3,7,7,-2,-8],[-4,9,-6,6,10,-7,-4,-3,-7,1,6,4,-1,1],[-10,4,-8,7,-9,3,5,-4,-4,-2,-3,5,-8,-3],[2,4,4,7,10,8,-6,-9,-3,-10,9,-6,-6,2],[-1,-4,-8,4,-4,-6,2,-4,-6,-1,-7,4,4,10]],[[2,-3,8,6,6,2,1,-6,3,-3,-4,-8,5,1],[-3,-9,-7,-9,-2,3,-3,9,2,-6,7,3,-4,-4],[-4,-6,8,-5,-10,7,7,1,4,5,7,-2,3,-8],[8,-3,7,-3,-7,-9,1,6,-8,10,-6,10,6,-8],[7,5,-7,10,-10,-10,-9,1,-5,-8,5,-6,2,-4],[8,-9,-9,-10,5,-4,-3,1,3,2,8,-2,-9,-3],[4,1,-3,-9,-7,1,-1,4,-9,-5,-6,2,-10,-8],[-3,-2,-10,3,5,6,-10,-1,-3,-4,1,-7,-10,-10],[3,1,-9,-5,8,-10,9,-3,4,2,1,10,-7,7],[-5,-8,-7,4,-2,4,-8,-10,-2,-8,9,4,5,-1],[10,-8,9,3,4,1,-8,-5,9,5,-2,-6,10,10],[5,-6,1,1,-1,-5,2,1,9,6,3,9,-4,-6],[-6,-10,10,-5,-3,3,1,-8,-2,-2,-7,10,10,7],[6,-8,2,5,-5,4,-7,1,3,-2,8,-9,-2,7],[10,-8,9,-1,6,-2,-6,-1,3,2,1,4,-10,6]]], dtype = "int32")#candidate|5355|(2, 15, 14)|const|int32
bop_5356 = relay.bitwise_or(var_5354.astype('int32'), const_5355.astype('int32')) # shape=(2, 15, 14)
func_5043_call = mod.get_global_var('func_5043')
func_5044_call = mutated_mod.get_global_var('func_5044')
call_5389 = relay.TupleGetItem(func_5043_call(), 0)
call_5390 = relay.TupleGetItem(func_5044_call(), 0)
output = relay.Tuple([bop_5356,call_5389,])
output2 = relay.Tuple([bop_5356,call_5390,])
func_5399 = relay.Function([var_5354,], output)
mod['func_5399'] = func_5399
mod = relay.transform.InferType()(mod)
mutated_mod['func_5399'] = func_5399
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5400 = relay.var("var_5400", dtype = "int32", shape = (1, 15, 14))#candidate|5400|(1, 15, 14)|var|int32
func_5399_call = mutated_mod.get_global_var('func_5399')
call_5401 = func_5399_call(var_5400)
output = call_5401
func_5402 = relay.Function([var_5400], output)
mutated_mod['func_5402'] = func_5402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2365_call = mod.get_global_var('func_2365')
func_2366_call = mutated_mod.get_global_var('func_2366')
call_5411 = func_2365_call()
call_5412 = func_2365_call()
output = call_5411
output2 = call_5412
func_5425 = relay.Function([], output)
mod['func_5425'] = func_5425
mod = relay.transform.InferType()(mod)
mutated_mod['func_5425'] = func_5425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5425_call = mutated_mod.get_global_var('func_5425')
call_5426 = func_5425_call()
output = call_5426
func_5427 = relay.Function([], output)
mutated_mod['func_5427'] = func_5427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1997_call = mod.get_global_var('func_1997')
func_1999_call = mutated_mod.get_global_var('func_1999')
call_5473 = relay.TupleGetItem(func_1997_call(), 0)
call_5474 = relay.TupleGetItem(func_1999_call(), 0)
func_2503_call = mod.get_global_var('func_2503')
func_2506_call = mutated_mod.get_global_var('func_2506')
var_5476 = relay.var("var_5476", dtype = "float64", shape = (135,))#candidate|5476|(135,)|var|float64
call_5475 = func_2503_call(relay.reshape(var_5476.astype('float64'), [3, 15, 3]))
call_5477 = func_2503_call(relay.reshape(var_5476.astype('float64'), [3, 15, 3]))
func_2201_call = mod.get_global_var('func_2201')
func_2202_call = mutated_mod.get_global_var('func_2202')
call_5484 = relay.TupleGetItem(func_2201_call(), 0)
call_5485 = relay.TupleGetItem(func_2202_call(), 0)
func_2775_call = mod.get_global_var('func_2775')
func_2776_call = mutated_mod.get_global_var('func_2776')
call_5504 = relay.TupleGetItem(func_2775_call(), 2)
call_5505 = relay.TupleGetItem(func_2776_call(), 2)
output = relay.Tuple([call_5473,call_5475,var_5476,call_5484,call_5504,])
output2 = relay.Tuple([call_5474,call_5477,var_5476,call_5485,call_5505,])
func_5507 = relay.Function([var_5476,], output)
mod['func_5507'] = func_5507
mod = relay.transform.InferType()(mod)
var_5508 = relay.var("var_5508", dtype = "float64", shape = (135,))#candidate|5508|(135,)|var|float64
output = func_5507(var_5508)
func_5509 = relay.Function([var_5508], output)
mutated_mod['func_5509'] = func_5509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1605_call = mod.get_global_var('func_1605')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_5596 = relay.TupleGetItem(func_1605_call(), 0)
call_5597 = relay.TupleGetItem(func_1606_call(), 0)
func_2415_call = mod.get_global_var('func_2415')
func_2417_call = mutated_mod.get_global_var('func_2417')
call_5614 = relay.TupleGetItem(func_2415_call(), 0)
call_5615 = relay.TupleGetItem(func_2417_call(), 0)
var_5628 = relay.var("var_5628", dtype = "float64", shape = (14, 14, 9))#candidate|5628|(14, 14, 9)|var|float64
bop_5629 = relay.minimum(call_5614.astype('int8'), relay.reshape(var_5628.astype('int8'), relay.shape_of(call_5614))) # shape=(14, 14, 9)
bop_5632 = relay.minimum(call_5615.astype('int8'), relay.reshape(var_5628.astype('int8'), relay.shape_of(call_5615))) # shape=(14, 14, 9)
func_1640_call = mod.get_global_var('func_1640')
func_1642_call = mutated_mod.get_global_var('func_1642')
const_5634 = relay.const([-7.018336,5.684026,-1.917794,-0.571297,-8.256515,7.405162,-6.044487,8.532042,-9.779802,-2.136125,5.287708,9.856052,6.562728,5.442314,7.703120,2.515333,-0.458254,5.635130,-0.252675,4.700426,9.020907,-0.683759,-3.161669,-2.828754,-5.921486,-7.755552,5.533292,-4.269744,6.077395,-1.862935,-1.897758,-5.655826,-1.771200,-8.046008,-0.581357,6.984191,-9.762733,6.475469,1.229617,6.467668,-4.258509,1.722241,5.181182,-4.065329,-8.375884,3.791133,-6.431156,1.562713,4.553288,7.393198,2.159490,8.866516,-3.613195,-9.110114,2.498138,2.201186,2.169712,2.347629,-6.374385,-0.460986,-5.406821,-1.537330,3.297708,3.861729,2.831226,-3.795718,-6.737457,-4.584603,1.587830,-0.208944,-7.654610,-8.029110,3.032596,-5.680028,-9.776172,-0.542461,-2.558606,9.931267,-3.121075,4.545638,-4.087738,-6.588699,0.421357,8.360849,6.384593,6.189782,-9.616910,-0.601018,-9.680925,4.503616,1.891076,2.637861,-5.358127,5.558461,-3.734103,-0.282535,6.561424,9.954993,9.493892,4.098818,-3.044774,-4.260357,-1.869339,-8.471145,1.344944,7.503517,6.542232,6.237194,-1.102104,-2.625289,9.848485,7.066838,5.733773,2.608477,0.734654,-7.519026,-8.148031,-9.261715,1.203173,8.558335,8.393537,4.133165,4.791147,-2.914500,5.513274,-4.268397,-5.667084,4.349065,-2.110431,-1.339001,8.924008,-9.216930,-2.201638,4.836401,8.625771,-0.225239,1.930058,-8.424415,-4.474057,-4.925777,7.970485,-1.658723,-4.067700,-0.822965,0.414829,4.590680,4.905074,-4.963910,-0.571597,8.206963,-0.017567,-3.832939,2.745693,-4.748957,-7.145573,7.789277,-6.623305,5.996700,-6.790759,8.950526,-4.955513,-8.862806,-7.899396,7.207548,-9.199323,7.456774,8.590501,0.033231,-6.054899,-6.906946,-5.707110,-5.653591,-0.527112,-3.862541,5.979260,-8.966692,-3.655814,2.873275,3.047320,5.086412,8.800648,-0.833988,6.053679,0.835933,5.097029,-1.294435,-1.258362,-7.002050,-6.285465,4.501086,9.105064,0.134065,-0.361696,-0.907935,-1.025646,-4.291639,-2.622748,-5.696012,-5.517350,1.982724,2.251839,4.590093,5.207332,-2.397630,-3.179201,6.941464,6.586817,6.646729,-6.591584,5.620501,-5.304071,-2.357955,-6.695220,-6.780167,1.406241,3.218391,8.073691,-3.161207,-9.360064,-4.324514,-6.622017,-6.225177,-9.069379,6.930917,-4.848728,0.687779,-6.409367,8.089048,-2.763082,0.323327,-0.830231,0.979067,-1.949608,-6.789777,-9.634766,8.599789,-0.523223,9.674454,-0.889183,4.471294,8.974591,5.883642,0.741112,7.208552,-5.566798,6.700675,4.654697,-5.251000,-5.510012,-2.761633,4.969605,3.875742,-6.995094,-8.099752,1.645835,5.191200,9.794997,6.309615,5.698864,-3.825728,4.610905,-2.455971,-7.583945,-3.145750,4.961039,-4.346654,4.363486,6.116420,-1.855756,-9.014105,2.659392,-6.522499,-7.397025,9.491897,-1.630103,9.335205,2.791333,-7.975699,-4.365295,-3.854275,-3.767032,-5.451778,-5.532257,8.256189,3.637316,9.618214,4.393363,8.993261,2.293223,7.885288,9.230279,1.516255,4.385831,-2.789669,5.338887,6.405805,3.353519,4.137572,2.064827,-0.344962,-5.243570,-6.948732,-0.081950,8.088791,-6.519756,6.018623,4.889020,1.844021,3.131568,-7.785189,-6.361363,-8.955617,7.401461,-2.163554,-1.227724,8.054209,-0.713113,-6.523851,-0.556897,-8.047990,-9.668103,-0.737679,-7.629962,-4.859785,1.338929,-2.537132,0.440169,-3.330122,-4.784829,7.748816,9.343744,8.418838,-0.159819,-1.135384,3.205546,-8.076954,0.442845,8.332449,-3.468236,4.701207,-4.553272,3.182376,-6.193365,-5.137648,-5.960038,0.057136,4.451755,8.531089,-1.575135,-3.355478,-5.638953,3.999038,9.689472,-5.887319,8.442633,0.583198,0.052238,1.537076,-3.675901,0.848928,1.761308,3.217669,0.733498,0.361295,-3.840679,-0.302533,-0.662253,-6.906593,-8.952890,1.328545,-2.874575,-1.454521,5.929384,1.064276,8.423560,8.895580,4.022887,2.744757,8.389781,-1.990811,-8.776107,8.805393,6.396212,-4.198219,-9.445082,0.082306,1.205778,-3.006773,5.503132,-8.395449,-6.698871,1.840019,-3.733301,7.894859,8.241055,-5.159508,-2.500467,-6.941574,0.706028,0.503699,-0.998974,9.037699,-1.845874,5.594448,4.877708,6.110338,7.083632,-4.690802,3.995781,1.635397,2.360826,2.341336,4.842872,8.686143,-7.937181,-8.974449,1.149887,-9.088330,-6.835827,8.738673,-2.683828,6.251607,-0.244017,6.215498,3.956409,-8.529611,-5.563996,-1.513515,-5.073405,5.694690,0.534394,0.421984,3.129190,-7.212676,3.484828,0.449804,-8.278503,6.587454,-3.159177,3.868922,-6.969583,9.816092,4.084994,-6.776430,7.916700,-5.978291,-0.680223,-3.764342,-5.615711,0.957134,-2.494298,5.853876,6.911336,4.682664,1.466033,-1.466727,0.635253,9.890158,3.164012,-5.048761,1.579923,6.110612,-0.604873,5.155205,2.590258,3.853852,6.439245,-3.914496,2.062081,1.919584,-4.216958,-9.465935,8.742866,-4.694267,-1.996806,4.249212,-5.901001,9.235994,-1.868867,3.756571,6.380318,-1.798352,5.572935,3.327531,-1.215106,3.639962,-1.158881,-1.060211,8.005830,7.661590,8.259159,3.848918,4.372597,8.910282,7.522264,9.251979,6.829050,-3.848273,0.749076,2.971444,-8.297299,-8.251986,7.471156,-8.477132,-1.047363,-1.592430,-6.629379,2.098455,-8.635830,-7.962623,5.208647,-6.013130,7.058191,9.382877,-3.395484,-6.651065,3.868929,-7.387921,-2.191997,-9.866424,-3.012310,-6.858768,-3.661859,-3.592037,-6.044690,9.868971,2.134392,-2.929929,-2.387856,0.185368,9.508056,6.085501,-7.236788,9.546917,-1.878302,4.438097,-9.975440,3.958452,7.364270,4.780763,-8.467003,0.965670,-9.538388,-9.291895,2.027617,0.021998,-1.456611,-5.501689,-6.729474,9.685989,2.045106,0.968521,-1.716340,-5.377048,3.248223,-7.999949,-9.896068,9.933137,8.180736,2.212271,7.717684,8.286523,7.649082,-6.059501,1.408299,-6.285349,4.526713,-1.385665,3.033212,9.847481,-6.281150,-3.591887,-4.268607,0.072756,-8.488192,-9.671720,-2.507042,5.940153,3.910246,7.365730,4.273165,9.305249,-6.395336,-4.792857,5.284337,-7.862069,3.165148,-4.795078,-5.485627,-6.545628,9.908281,-0.906281,-9.249558,3.952784,9.641253,5.902417,7.845213,3.065135,-7.442862,6.488668,-4.889922,-4.253320,-0.461040,9.868876,-0.124089,2.561882,-2.587079,3.034629,8.562928,6.776120,-4.158555,7.385329,4.550597,7.190829,6.067812,5.278325,-8.392972,5.998767,1.127267,2.605203,-1.692460,8.760549,-1.198335,-7.112174,5.735280,-5.267051,-5.093306,8.830973,0.161506,3.621048,9.509801,-0.522747,-4.597244,1.487815,-4.632715,-0.613745,7.481330,9.668011,-5.632399,-7.129713,3.457863,1.366526,-1.474920,-4.157044,8.104539,-0.557172,-6.685606,-5.953179,7.335404,-5.636083,-1.062295,-0.407960,-7.812078,1.640491,7.908999,8.901835,0.057655,-8.480299,5.963739,9.204801,5.046068,-3.009635,-7.966490,-5.402850,-6.089687,4.095322,3.968134,-9.888160,8.497579,0.855094,5.784852,-3.327023,9.224267,4.963801,5.716315,-0.989585,-7.537249,-2.852911,5.604826,-7.959780,-1.244006,3.001025,-9.591346,6.820642,4.207660,-8.809006,7.241906,6.429495,-6.329833,-1.188243,3.393290,-0.446932,6.532489,-2.966424,2.840575,-1.867370,-9.258060,-3.380744,9.964488,0.319352,-1.852325,-8.054177,-9.995798,-5.030937,-2.515929,-1.910661,2.783360,1.038017,2.255857,-9.804384,5.345746,-4.558669,-7.157945,-0.893930,9.756142,-3.718694,3.381299,6.182667,7.244584,-3.559923,-4.063980,1.198293,5.941632,-9.044146,8.567269,-0.169850,3.197118,-9.111964,8.242177,-4.972083,-2.231406,-4.374783,3.453535,9.640360,4.395782,-1.160828,-9.792881,-5.078880,-2.739203,8.138585,9.907754,-1.229919,-6.200860,-2.768855,1.457805,-2.765288,5.392007,-0.631970,4.482116,3.665236,1.082243,-2.289781,-3.382056,-7.606170,-6.181711,-8.544323,9.893153,-7.099621,2.899748,8.671263,3.189155,3.705489,-4.439957,3.589967,0.948282,-3.637830,-2.613769,8.035585,1.219145,-3.322581,6.202472,9.569597,0.451091,-0.004914,-4.834289,-5.619819,-4.771596,2.546607,9.297896,-8.341364,0.075159,6.545806,3.835225,-6.224357,-0.236495,-1.392869,9.737885,-6.574389,-2.135951,-3.040207,-3.958295,-7.415127,-9.708889,2.764297,2.136894,-9.078436,3.474078,-3.260939,-3.186483,1.284147,4.823417,-6.551089,-2.112932,-0.852758,-5.291943,9.315174,9.247915,0.526116,9.683823,8.125034,-7.298910,-9.705296,7.565374,-7.799869,3.806815,3.908153,-0.390038,-4.440297,-9.085522,4.479451,5.361517,-0.133674,-3.737140,-4.003238,-6.705841,-0.540477,9.449111,-1.100366,-1.098993,6.590083,6.155574,-1.815872,-4.198612,-6.979732,2.226721,4.432444,-1.030541,6.424649,3.184151,3.354429,1.936139,-0.833289,-5.392947,-7.784636,-7.304079,-9.891125,-4.400195,5.942727,5.367471,3.188481,8.301432,9.022947,-5.703303,-0.332843,-5.499418,-9.199347,-8.849191,4.561405,1.781114,0.115574,3.818064,0.024402,-8.030453,-0.420632,-6.009342,0.216396,3.094688,-3.407385,3.042772,1.999637,-2.316451,-2.577221,1.584381,6.112565,4.476284,-7.908708,-0.827097,-6.538801,-4.564449,0.273045,-3.211598,-7.074042,7.100924,-2.254047,9.838789,2.307633,9.181531,-1.865856,9.840918,6.342707,-7.377267,6.897062,-4.069642,-6.337591,-4.369737,2.415904,-9.045571,-5.996492,-8.363624,-9.077647,6.772829,3.134526,8.227674,8.660656,3.604620,2.052920,-9.398268,5.835284,-7.160331,2.512046,4.716878,-5.278258,-6.501748,6.703331,7.575470,-4.033084,1.977779,9.063433,-9.263547,1.774602,9.855964,3.972944,5.970194,-7.037361,-8.049148,8.970031,8.783912,2.254206,-5.355155,-6.005295,8.739032,-0.951858,7.185367,6.882660,-3.805385,6.085124,-3.301949,8.331523,7.151140,2.648200,7.850877,2.782581,-5.191048,-5.037034,-6.789990,-8.999088,-1.970752,-5.338787,-4.800515,1.550513,0.315452,6.599327,8.295659,6.630540,-5.165229,9.715112,8.884475,-1.114622,8.454729,4.146100,-1.040485,2.463626,-6.472166,-1.445777,-8.980262,-0.905676,-7.559439,5.928967,-6.872930,6.005122,4.639111,4.252951,1.588232,9.148584,-3.381696,-2.756554,-9.543044,1.667348,-3.263206,-3.616633,5.011777,-3.138003,-6.110614,-2.466891,-9.832517,2.008160,-3.021920,4.192080,6.141895,-4.204282,5.336069,-5.639076,6.412619,-9.316465,3.972140,-6.725214,8.292490,-5.121662,-3.655974,1.069668,-1.065244,-1.336351,9.816907,9.299731,-3.150859,-7.446286,-1.202335,-8.946118,0.310358,1.398857,2.058001,2.115516,-6.018036,-8.956979,-1.495385,-5.159006,-1.952499,9.349247,-1.266042,-9.407345,8.752758,-2.471307,7.704097,5.781057,6.578896,2.458291,-0.950103,-7.322397,8.927091,4.503325,-0.233623,-3.161269,-6.589976,-2.492337,-9.926750,-9.899862,0.749082,-5.343598,3.477334,8.254697,-6.573252,2.683410,-5.537336,-1.837577,-5.868286,8.228065,2.977730,3.393116,-3.118839,-2.285574,0.755240,-9.435826,2.720008,7.336135,-5.522349,0.027652,-7.080145,4.722444,-6.088624,-0.941500,4.445810,2.085919,0.447529,-0.418268,-9.968085,7.169554,6.917405,6.308297,-3.496847,7.953434,1.220069,6.644389,4.457871,-6.245679,-2.089630,-1.190853,4.510792,-5.676318,8.857111,-7.180207,1.224099,5.023892,4.720626,6.978121,9.401724,-0.512593,-5.854850,-4.248712,-4.644102,8.053857,5.524960,-5.784572,-1.205734,-5.060187,5.371438,3.512695,-3.229295,-5.177908,2.162394,2.210296,-0.884765,-5.660187,8.215516,3.744156,2.598856,3.964401,-0.356172,4.763196,-5.630581,-6.947648,-2.288006,3.738554,-4.597104,-2.564678,5.567251,1.250848,0.358775,-8.527941,-8.842579,-2.457039,7.992941,4.606773,0.518843,-3.911350,-5.703115,-1.674077,-9.880143,6.013678,9.526546,0.300528,7.764963,-6.662154,-2.468535,5.827796,-5.689489,-3.383471,7.456187,-0.544570,5.558267,4.941496,8.387761,-6.327180,9.491939,8.366995,-7.334867,8.117600,8.656470,-4.882354,5.078526,-0.417651,-2.524944,5.352159,-0.180791,-9.688225,-7.210136,9.173514,8.780630,7.691769,3.991146,0.787090,3.394227,8.004656,3.432676,-0.158855,-4.698343,-8.369410,-3.743102,-7.268471,3.757162,-2.927170,-3.186384,-7.390770,0.203416,-2.972025,-9.653488,-0.876547,2.779882,-4.856476,-9.435426,6.014457,7.983604,8.220425,0.505729,8.034647,-9.935623,-6.842701,0.792031,3.463343,-8.276764,-8.017758,4.602439,6.644807,-3.977090,8.546656,-6.413987,4.294418,1.520213,2.701962,6.302580,5.952648,-0.138490,-6.590639,-7.043877,9.320348,-4.661117,0.257839,-6.844973,-4.919803,-1.442866,0.699092,-6.500019,7.866450,8.401284,-0.983849,7.722522,1.519949,1.343663,4.679313,6.814655,-9.096023,-3.394243,9.559888,-1.354478,-6.467658,-8.918316,-2.428390,-6.776896,-9.567020,-6.166927,-3.888869,-3.275584,-2.806870,-9.696287,-9.685407,-6.386995,0.685881,-5.317106,4.393658,-8.941650,-8.473544,-5.349685,7.273315,-6.087657,-3.849193,-4.242985,-2.419197,-4.148292,-7.980661,-9.023951,-3.221115,2.716690,-7.505278,7.616507,6.590943,8.239793,-7.613764,-2.478718,-8.792217,1.100050,2.509556,-4.968735,-6.400340,-1.159226,8.771434,4.803911,2.844227,2.744430,0.965683,-0.789422,-4.463313,-8.841837,4.973466,-1.928702,3.299692,-3.489151,1.375279,-5.778581,-6.509682,-1.463666,4.228047,5.874777,-5.770118,-3.716403,5.213047,-1.762579,-3.079064,-2.295545,3.961440,-4.485804,-4.928396,-7.613037,7.972752,-4.615210,6.343052,8.058064,-0.243533,-0.916217,5.375898,-2.149378,0.334451,-3.222481,3.846712,3.200194,4.617663,5.853576,-6.274085,8.279734,-3.372685,8.992728,-0.841537,7.478446,-0.830121,0.054038,-3.689143,-1.028827,1.501414,-3.895326,-4.846788,7.389054,5.505281,4.503861,-3.921324,6.154861,-3.682989,5.843758,8.921800,-3.749973,-4.799650,9.177874,3.855282,-6.679160,-5.834378,-9.163214,-4.634012,-1.373234,-5.465015,2.531827,-8.340810,-9.036866,-2.230998,3.460263,-3.174200,2.677684,6.855130,7.737892,-6.644851,7.864734,-7.348806,4.424221,-1.037681,-9.287376,-4.157662,9.251578,-9.219641,3.757610,1.825001,-2.377131,-9.732692,-6.083880,-8.798188,6.455519,6.917056,9.391188,-9.437105,-0.433071,-7.573314,3.315866,2.753893,9.150483,-1.260248,-5.546138,0.621025,9.206747,-9.450620,-8.492342,-5.699993,9.481819,-3.587835,0.088642,-1.828046,7.335972,4.036346,1.524097,-0.462809,-7.001674,5.299968,-6.084692,-9.115212,3.569373,-2.189768,6.692248,0.101174,-4.300734,-8.567676,-4.017020,-6.109464,7.297178,-8.555610,-2.655852,-0.478496,-8.818773,9.606487,-9.683392,-5.968209,-3.077105,7.062214,6.220080,-3.058797,3.372345,-3.244846,3.292406,0.093057,-2.190830,4.614590,-8.450825,1.954314,-9.884440,-6.560993,-1.622036,-7.680789,8.650826,1.137338,-5.924837,-2.754864,-6.715694,3.449785,7.357155,-4.898291,-2.268183,-9.224761,9.745501,3.318934,-4.284603,4.949838,7.576034,8.353872,2.397826,6.746317,9.327815,3.597258,-9.051855,0.906865,-1.032952,1.670568,-5.122260,9.659417,-2.759904,7.250023,-1.771061,0.615285,-0.965007,-6.829704,9.379181,4.137820,-4.432949,-5.936651,7.641097,-6.783904,-9.005580,-1.108250,-7.224829,-5.534069,1.638528,6.371600,-1.332512,3.086310,-9.290394,7.557182,8.129172,-0.586866,6.090544,1.242489,-8.100636,-6.716088,2.181997,3.665969,4.585394,-1.559861,9.457707,-9.747759,8.581231,-7.206328,-8.840502,4.387319,-0.900182,7.905338,8.154415,-7.765790,-8.631866,-3.878515,-6.644787,4.704081,4.853153,-5.497894,-2.452923,4.816209,-3.816262,4.635599,6.445505,-5.037881,-6.540129,0.668177,-9.397619,6.302585,8.179692,5.292490,-0.100675,2.180707,-3.649253,-5.776509,-4.084862,-8.062016,-4.804256,6.644966,8.624375,7.515752,3.643616,7.742429,7.881370,0.276498,-3.395555,-1.443997,0.328533,-0.610872,3.222293,-3.023097,-1.815450,-1.136398,-0.223113,-6.372399,4.620327,5.672168,2.544387,4.691233,-4.150742,3.631342,5.405121,4.776638,6.488718,-5.360409,-0.189864,-3.577518,-0.863380,5.494899,4.082910,-5.564135,-2.220535,8.380654,-9.700320,-9.734538,2.230149,5.622163,5.524722,-1.704603,-7.001606,5.504315,9.872564,-1.851581,-2.627470,2.572553,1.420108,-7.422078,2.402831,3.510219,-6.029133,-9.589428,2.160262,-4.542664,-9.315924,3.373958,-1.747305,-2.338844,0.508384,8.678663,-9.380040,7.105897,-4.530256,9.564385,4.225971,7.581992,-0.600992,-9.158661,6.452211,-5.858812,8.800827,-5.639865,-1.445117,1.982333,8.422640,4.011022,7.025940,-8.499533,9.824471,-5.857297,-5.439351,-8.473670,4.008718,8.977364,-9.519054,5.486578,0.917004,8.236253,-0.608691,6.184131,9.810122,7.204203,1.810338,-5.815532,-2.588554,-8.413820,-8.857525,9.874571,6.639116,-9.964813,0.836468,8.891617,2.101103,-0.636523,3.933612,-3.763349,6.000418,-9.515273,0.468807,5.077381,8.699334,-2.957732,-5.281093,1.646453,-1.817436,7.593923,4.064448,1.232179,9.568644,-3.893245,0.812020,5.780893,6.213735,-5.591223,-3.718523,-6.160071,5.837897,5.516856,-4.586774,9.128349,-3.465713,-0.499972,1.910903,9.863804,-8.332592,6.185985,-0.013918,-3.134291,-1.020039,-1.766329,-9.769801,-6.612296,0.320477,4.968952,0.789642,0.204609,-0.621698,2.608488,1.492062,-6.115443,2.074557,5.147296,6.000269,5.149366,-7.085902,-9.518531,-5.229688,-1.678119,5.975207,7.904525,-3.554572,-8.713536,3.139178,-4.790675,-1.010112,-0.620123,5.487872,7.387549,7.411396,-3.034657,-1.556853,-2.105311,-1.101096,7.346466,-4.972022,-3.639743,2.836338,3.088371,-3.772450,3.560746,5.008246,-3.226005,3.725007,3.594776,-5.376328,8.488493,-8.206997,4.212365,-8.038892,-5.098384,-4.455536,-8.038525,-8.568602,-4.443864,1.432100,9.336056,0.240372,3.670862,-7.085051,5.091650,3.709416,2.043028,-7.826196,-3.850252,0.474386,8.532932,3.771193,8.275000,-3.931950,-9.550867,8.334392,-5.007571,-8.798655,-8.459919,-2.261983,7.826821,-8.087457,8.048486,-3.761447,3.427753,8.229812,8.828649,-5.833605,-2.140034,-0.502931,3.194820,-7.198698,-5.701625,2.746242,4.898904,-3.351701,6.416949,-4.397667,7.637874,-1.399884,-9.737242,2.356306,-5.305301,0.183403,-8.156303,-4.098400,9.673798,9.240399,0.754780,-4.356960,-4.135582,4.972289,5.921112,9.882009,-5.768080,-4.732047,5.838059,-4.824885,6.733397,-5.897053,8.582544,1.132143,0.806347,-7.718607,-1.618485,-8.804017,2.926755,-1.098045,0.632539,1.452797,-3.807823,-1.448462,-3.006081,9.569797,-6.710893,2.767666,-0.312369,1.704739,-4.657195,-8.277752,-7.869640,8.657549,8.608299,6.563294,7.039167,-5.488079,-4.430892,4.271781,-8.897467,-8.014732,-8.940843,-9.734929,9.246235,6.559207,-3.601218,-5.922829,-9.925855,-8.865924,4.671554,-2.284151,7.787464,-1.256608,7.837432,-5.846758,8.063516,5.826342,-1.365403,-4.993149,7.503049,6.886998,-2.949212,-7.446916,-3.785761,-5.883580,-2.360183,-1.468674,7.854481,7.087638,6.732764,-9.446754,9.139169,-2.658759,-9.663995,3.574648,-1.881154,0.557741,-3.224348,0.262319,-4.183356,-3.857400,-2.676914,-8.984768,-2.295589,6.440758,8.784258,-1.960308,9.855499,5.231918,6.762426,6.006615,7.544755,-3.754818,-0.301340,-3.675703,2.031912,-7.989712,-9.925973,-3.456968,-6.510443,-8.947771,8.916448,-8.293885,1.162398,-8.562676,-4.250391,7.732730,-4.905282,0.458108,6.428424,-7.285352,6.541997,5.277391,2.969456,-0.120488,5.445244,-9.943450,2.747211,9.949983,-2.600054,0.370980,9.054968,-3.555992,1.390839,-0.426417,-4.251841,7.986155,8.101455,1.851399,-3.019618,1.827571,-1.640592,4.124074,-0.568573,-2.355930,-0.728708,-3.224574,-2.473016,-4.320911,-6.384512,9.783582,9.513454,-3.380710,6.211108,2.527145,4.331765,3.819101,-8.596172,6.484040,0.521379,3.898848,-9.147587,4.703194,7.806632,-1.769309,-5.423140,-7.053462,-3.231773,7.586674,-0.443922,-4.133715,2.312522,7.429747,-6.710591,-0.899466,-7.084101,8.459774,6.596011,-3.058983,-2.147945,4.813476,-8.882079,-9.927613,-2.538410,-2.142228,2.671433,6.630318,-1.280285,-9.270446,4.160962,-5.881122,9.951319,-7.660906,-4.755322,4.740585,9.612089,2.677844,-8.064419,6.852833,5.008932,0.903123,-1.093231,8.879847,9.995097,7.013306,9.194009,-1.227567,9.793496,9.817151,6.149524,1.938829,4.251848,-5.814231,-9.117329,8.096899,0.349428,-4.765130,1.579969,-8.337363,-8.541204,2.808442,0.370001,-1.188209,8.355769,-0.454456,-9.828528,6.524156,9.164225,9.481707,1.357407,7.719434,4.127579,-5.492820,-6.325511,6.882347,-4.568297,-3.352426,-5.994919,5.607330,-7.733924,4.366613,8.435334,6.731399,-1.986879,-1.885360,0.139393,3.501265,-2.939021,5.306153,-8.254246,6.081775,5.965277,6.949266,-7.557671,1.585420,-9.392605,9.122705,-4.838446,-7.225928,7.610202,-5.600190,1.065240,8.511369,-9.809556,-6.605516,9.489193,0.828576,3.740203,-0.733093,6.873004,-3.767125,-9.043590,7.103198,-0.458356,-6.990369,3.002582,-2.001121,-2.548799,-0.879963,-8.466320,3.675854,-4.597706,1.939645,3.024825,0.001174,7.453374,0.316255,3.215565,-8.114629,-9.835198,6.750014,-7.217687,-6.647600,5.696354,2.739354,1.955424,9.654013,1.798747,7.248909,-6.649881,-0.137127,5.687673,-1.750149,-2.085100,-8.537677,8.833408,-7.899283,-1.817226,-6.056463,2.869494,1.606848,-1.858864,-9.073435,9.385081,6.666565,-9.312333,-2.394948,1.690814,-4.054491,7.184372,-1.314947,-5.590930,-9.964775,-2.942377,-3.813038,-3.743566,-8.943468,-7.923060,6.163014,0.656455,-7.793923,-9.431092,2.921433,9.447820,7.526978,-6.025142,8.917373,4.428475,9.700556,-0.659216,6.339248,-4.469137,6.623042,9.026006,-5.712507,5.173748,-5.764461,8.150707,6.785632,-9.823977,-6.022582,8.149062,6.443213,5.808703,-2.184097,8.106770,2.486657,5.788445,-2.103884,2.069802,8.507714,3.868528,-6.584886,1.094134,5.075426,-1.340331,4.409561,5.679946,-8.041680,2.445384,-6.731640,6.273884,-6.515146,0.979475,3.213042,-1.397499,7.102088,-2.858640,-4.244807,-2.147868,6.494390,2.470624,-5.183896,-7.179634,-5.111337,8.660802,-7.342999,-0.318782,3.266714,4.200244,-3.317528,-4.036848,-6.993770,1.930575,-2.967603,-1.575545,-3.237626,-6.314390,0.486265,-2.278853,1.453822,-3.397583,-0.122778,-8.881699,-1.192290,-9.157061,1.414417,2.541197,3.075494,5.852088,-6.847297,-5.245639], dtype = "float32")#candidate|5634|(2160,)|const|float32
call_5633 = relay.TupleGetItem(func_1640_call(relay.reshape(const_5634.astype('float32'), [2160,])), 1)
call_5635 = relay.TupleGetItem(func_1642_call(relay.reshape(const_5634.astype('float32'), [2160,])), 1)
output = relay.Tuple([call_5596,bop_5629,call_5633,const_5634,])
output2 = relay.Tuple([call_5597,bop_5632,call_5635,const_5634,])
func_5647 = relay.Function([var_5628,], output)
mod['func_5647'] = func_5647
mod = relay.transform.InferType()(mod)
mutated_mod['func_5647'] = func_5647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5648 = relay.var("var_5648", dtype = "float64", shape = (14, 14, 9))#candidate|5648|(14, 14, 9)|var|float64
func_5647_call = mutated_mod.get_global_var('func_5647')
call_5649 = func_5647_call(var_5648)
output = call_5649
func_5650 = relay.Function([var_5648], output)
mutated_mod['func_5650'] = func_5650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2626_call = mod.get_global_var('func_2626')
func_2627_call = mutated_mod.get_global_var('func_2627')
call_5658 = func_2626_call()
call_5659 = func_2626_call()
output = relay.Tuple([call_5658,])
output2 = relay.Tuple([call_5659,])
func_5661 = relay.Function([], output)
mod['func_5661'] = func_5661
mod = relay.transform.InferType()(mod)
mutated_mod['func_5661'] = func_5661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5661_call = mutated_mod.get_global_var('func_5661')
call_5662 = func_5661_call()
output = call_5662
func_5663 = relay.Function([], output)
mutated_mod['func_5663'] = func_5663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5307_call = mod.get_global_var('func_5307')
func_5308_call = mutated_mod.get_global_var('func_5308')
call_5686 = relay.TupleGetItem(func_5307_call(), 0)
call_5687 = relay.TupleGetItem(func_5308_call(), 0)
output = call_5686
output2 = call_5687
func_5689 = relay.Function([], output)
mod['func_5689'] = func_5689
mod = relay.transform.InferType()(mod)
mutated_mod['func_5689'] = func_5689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5689_call = mutated_mod.get_global_var('func_5689')
call_5690 = func_5689_call()
output = call_5690
func_5691 = relay.Function([], output)
mutated_mod['func_5691'] = func_5691
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5701 = relay.const([[[0.302479,5.146066,3.623103,3.362151,-9.977965],[-8.586213,-1.899937,9.360916,8.734206,-1.224793],[0.128505,9.694528,-6.789567,9.651534,-5.750407],[6.322793,6.123030,7.200160,2.468443,8.630230],[7.389946,-2.809015,-0.961070,5.201434,2.147073],[-4.666712,1.343308,-6.335678,0.752771,8.723208],[-1.028726,-6.992783,7.370027,-8.341835,-1.246724],[-2.201754,0.930547,6.560903,-4.221894,-1.357918],[-9.483496,7.419763,-7.609318,3.278461,9.063039],[7.760391,8.754194,6.942295,-8.316837,1.482617]],[[-6.953307,-7.058183,-6.021298,5.795261,9.787771],[-1.931929,-9.449937,2.229163,2.291110,5.087093],[3.380087,-1.536800,-1.119042,5.803831,7.666311],[7.239360,-1.295430,-2.640496,6.376757,7.352740],[9.668776,4.264133,2.247675,-3.110956,0.496869],[5.344135,-1.183106,-2.767436,-1.176883,2.432513],[-5.268392,4.602935,5.774576,-7.243505,1.253350],[8.815236,6.539758,-8.180606,8.126413,-9.291897],[-3.511039,5.255642,1.141041,0.302505,6.664284],[-0.690345,4.308855,-9.005046,3.007430,-7.467982]],[[-1.740666,8.605081,-3.679193,2.607584,-8.573174],[-8.931288,4.103663,7.626717,9.196334,-0.948046],[-7.259866,3.920412,-4.762549,-4.637073,-6.391106],[-2.675003,-1.908611,-8.363736,-2.197843,-1.894660],[4.823430,9.770217,-2.163479,-7.081199,-1.899671],[-4.018036,8.608443,-8.081728,7.745426,2.208517],[6.091997,-6.813555,9.377629,-1.540893,-7.780488],[-5.643165,-5.706369,6.126544,-2.207860,-8.158817],[-8.254956,4.959518,-4.245313,-0.261187,-2.139440],[0.414384,5.737590,3.446161,0.765031,-9.095054]],[[-5.426452,5.822807,9.779734,9.953077,-2.801672],[-1.011055,-4.300713,-2.170796,4.328607,-7.733466],[-6.023364,-4.943978,-2.143980,-2.621231,8.290871],[9.787019,5.280514,-4.468321,4.726089,4.525500],[-5.511640,6.384300,3.116069,9.555025,-6.642565],[0.518537,-4.628977,-4.098716,9.202072,-3.352172],[-0.015530,4.115797,-1.382934,-7.673051,5.768127],[-6.111628,5.244868,9.642227,8.157990,7.134935],[-9.480829,7.424989,-0.776041,1.656360,-5.296203],[6.691148,-4.550065,1.140252,-8.176092,-0.420934]],[[9.683114,0.106810,-5.281630,8.881219,-7.671162],[1.187231,6.083915,2.995240,6.406973,-8.929978],[-6.413457,-0.157967,-0.787214,6.235764,7.117571],[-9.370415,-7.821462,6.734938,-5.828363,7.874746],[8.055023,-4.033908,2.874696,7.704199,-1.988036],[-5.410828,8.866822,4.813346,-4.780198,-2.684502],[2.899971,-3.994013,9.393968,-2.050373,7.653959],[-6.101739,7.256409,4.016495,-4.031027,4.036070],[-9.357354,9.025040,-0.325792,0.955626,4.035027],[-1.482046,8.937181,5.061776,-8.644456,-6.570469]],[[1.049484,-3.091224,9.779963,6.791764,-4.292675],[2.853304,-6.206310,-7.825034,2.496898,-6.044894],[-4.266295,1.348047,7.196714,-4.393161,0.429003],[9.508968,9.973877,2.923279,-1.634135,-5.090897],[3.744979,5.034043,-1.825633,-0.182226,-3.802042],[-5.335487,2.952115,-8.891339,-3.711544,-0.018497],[1.554576,-2.670078,8.005935,-7.580575,-3.004056],[7.972652,-6.472224,-9.273734,-5.712344,-2.318617],[7.876784,3.169552,9.118651,5.392602,-1.560105],[4.581702,-1.461334,-9.953936,2.069220,0.189826]]], dtype = "float64")#candidate|5701|(6, 10, 5)|const|float64
var_5702 = relay.var("var_5702", dtype = "float64", shape = (6, 10, 5))#candidate|5702|(6, 10, 5)|var|float64
bop_5703 = relay.divide(const_5701.astype('float64'), relay.reshape(var_5702.astype('float64'), relay.shape_of(const_5701))) # shape=(6, 10, 5)
var_5731 = relay.var("var_5731", dtype = "float64", shape = (6, 10, 5))#candidate|5731|(6, 10, 5)|var|float64
bop_5732 = relay.floor_divide(var_5702.astype('float64'), relay.reshape(var_5731.astype('float64'), relay.shape_of(var_5702))) # shape=(6, 10, 5)
func_1605_call = mod.get_global_var('func_1605')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_5744 = relay.TupleGetItem(func_1605_call(), 0)
call_5745 = relay.TupleGetItem(func_1606_call(), 0)
func_4592_call = mod.get_global_var('func_4592')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_5746 = func_4592_call()
call_5747 = func_4592_call()
uop_5750 = relay.exp(call_5744.astype('float64')) # shape=(14, 14, 9)
uop_5752 = relay.exp(call_5745.astype('float64')) # shape=(14, 14, 9)
func_1734_call = mod.get_global_var('func_1734')
func_1736_call = mutated_mod.get_global_var('func_1736')
call_5779 = relay.TupleGetItem(func_1734_call(), 1)
call_5780 = relay.TupleGetItem(func_1736_call(), 1)
output = relay.Tuple([bop_5703,bop_5732,call_5746,uop_5750,call_5779,])
output2 = relay.Tuple([bop_5703,bop_5732,call_5747,uop_5752,call_5780,])
func_5784 = relay.Function([var_5702,var_5731,], output)
mod['func_5784'] = func_5784
mod = relay.transform.InferType()(mod)
mutated_mod['func_5784'] = func_5784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5784_call = mutated_mod.get_global_var('func_5784')
var_5786 = relay.var("var_5786", dtype = "float64", shape = (6, 10, 5))#candidate|5786|(6, 10, 5)|var|float64
var_5787 = relay.var("var_5787", dtype = "float64", shape = (6, 10, 5))#candidate|5787|(6, 10, 5)|var|float64
call_5785 = func_5784_call(var_5786,var_5787,)
output = call_5785
func_5788 = relay.Function([var_5786,var_5787,], output)
mutated_mod['func_5788'] = func_5788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2365_call = mod.get_global_var('func_2365')
func_2366_call = mutated_mod.get_global_var('func_2366')
call_5790 = func_2365_call()
call_5791 = func_2365_call()
output = call_5790
output2 = call_5791
func_5792 = relay.Function([], output)
mod['func_5792'] = func_5792
mod = relay.transform.InferType()(mod)
mutated_mod['func_5792'] = func_5792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5792_call = mutated_mod.get_global_var('func_5792')
call_5793 = func_5792_call()
output = call_5793
func_5794 = relay.Function([], output)
mutated_mod['func_5794'] = func_5794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5661_call = mod.get_global_var('func_5661')
func_5663_call = mutated_mod.get_global_var('func_5663')
call_5861 = relay.TupleGetItem(func_5661_call(), 0)
call_5862 = relay.TupleGetItem(func_5663_call(), 0)
func_5170_call = mod.get_global_var('func_5170')
func_5171_call = mutated_mod.get_global_var('func_5171')
call_5866 = relay.TupleGetItem(func_5170_call(), 0)
call_5867 = relay.TupleGetItem(func_5171_call(), 0)
output = relay.Tuple([call_5861,call_5866,])
output2 = relay.Tuple([call_5862,call_5867,])
func_5869 = relay.Function([], output)
mod['func_5869'] = func_5869
mod = relay.transform.InferType()(mod)
output = func_5869()
func_5870 = relay.Function([], output)
mutated_mod['func_5870'] = func_5870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4784_call = mod.get_global_var('func_4784')
func_4786_call = mutated_mod.get_global_var('func_4786')
call_5996 = relay.TupleGetItem(func_4784_call(), 0)
call_5997 = relay.TupleGetItem(func_4786_call(), 0)
output = relay.Tuple([call_5996,])
output2 = relay.Tuple([call_5997,])
func_6000 = relay.Function([], output)
mod['func_6000'] = func_6000
mod = relay.transform.InferType()(mod)
mutated_mod['func_6000'] = func_6000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6000_call = mutated_mod.get_global_var('func_6000')
call_6001 = func_6000_call()
output = call_6001
func_6002 = relay.Function([], output)
mutated_mod['func_6002'] = func_6002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1908_call = mod.get_global_var('func_1908')
func_1909_call = mutated_mod.get_global_var('func_1909')
call_6008 = relay.TupleGetItem(func_1908_call(), 0)
call_6009 = relay.TupleGetItem(func_1909_call(), 0)
uop_6037 = relay.asinh(call_6008.astype('float64')) # shape=(14, 14, 9)
uop_6039 = relay.asinh(call_6009.astype('float64')) # shape=(14, 14, 9)
output = uop_6037
output2 = uop_6039
func_6060 = relay.Function([], output)
mod['func_6060'] = func_6060
mod = relay.transform.InferType()(mod)
mutated_mod['func_6060'] = func_6060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6060_call = mutated_mod.get_global_var('func_6060')
call_6061 = func_6060_call()
output = call_6061
func_6062 = relay.Function([], output)
mutated_mod['func_6062'] = func_6062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4278_call = mod.get_global_var('func_4278')
func_4280_call = mutated_mod.get_global_var('func_4280')
call_6082 = func_4278_call()
call_6083 = func_4278_call()
output = call_6082
output2 = call_6083
func_6086 = relay.Function([], output)
mod['func_6086'] = func_6086
mod = relay.transform.InferType()(mod)
output = func_6086()
func_6087 = relay.Function([], output)
mutated_mod['func_6087'] = func_6087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5236_call = mod.get_global_var('func_5236')
func_5238_call = mutated_mod.get_global_var('func_5238')
call_6108 = relay.TupleGetItem(func_5236_call(), 2)
call_6109 = relay.TupleGetItem(func_5238_call(), 2)
func_3571_call = mod.get_global_var('func_3571')
func_3573_call = mutated_mod.get_global_var('func_3573')
call_6119 = relay.TupleGetItem(func_3571_call(), 4)
call_6120 = relay.TupleGetItem(func_3573_call(), 4)
var_6154 = relay.var("var_6154", dtype = "float32", shape = (13, 5, 8))#candidate|6154|(13, 5, 8)|var|float32
bop_6155 = relay.left_shift(call_6119.astype('int64'), relay.reshape(var_6154.astype('int64'), relay.shape_of(call_6119))) # shape=(13, 5, 8)
bop_6158 = relay.left_shift(call_6120.astype('int64'), relay.reshape(var_6154.astype('int64'), relay.shape_of(call_6120))) # shape=(13, 5, 8)
output = relay.Tuple([call_6108,bop_6155,])
output2 = relay.Tuple([call_6109,bop_6158,])
func_6161 = relay.Function([var_6154,], output)
mod['func_6161'] = func_6161
mod = relay.transform.InferType()(mod)
var_6162 = relay.var("var_6162", dtype = "float32", shape = (13, 5, 8))#candidate|6162|(13, 5, 8)|var|float32
output = func_6161(var_6162)
func_6163 = relay.Function([var_6162], output)
mutated_mod['func_6163'] = func_6163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2365_call = mod.get_global_var('func_2365')
func_2366_call = mutated_mod.get_global_var('func_2366')
call_6182 = func_2365_call()
call_6183 = func_2365_call()
func_5075_call = mod.get_global_var('func_5075')
func_5077_call = mutated_mod.get_global_var('func_5077')
call_6186 = relay.TupleGetItem(func_5075_call(), 0)
call_6187 = relay.TupleGetItem(func_5077_call(), 0)
func_5307_call = mod.get_global_var('func_5307')
func_5308_call = mutated_mod.get_global_var('func_5308')
call_6188 = relay.TupleGetItem(func_5307_call(), 0)
call_6189 = relay.TupleGetItem(func_5308_call(), 0)
func_46_call = mod.get_global_var('func_46')
func_48_call = mutated_mod.get_global_var('func_48')
var_6193 = relay.var("var_6193", dtype = "float32", shape = (60,))#candidate|6193|(60,)|var|float32
call_6192 = relay.TupleGetItem(func_46_call(relay.reshape(var_6193.astype('float32'), [6, 10, 1])), 0)
call_6194 = relay.TupleGetItem(func_48_call(relay.reshape(var_6193.astype('float32'), [6, 10, 1])), 0)
bop_6199 = relay.left_shift(call_6192.astype('int8'), call_6182.astype('int8')) # shape=(6, 10, 520)
bop_6202 = relay.left_shift(call_6194.astype('int8'), call_6183.astype('int8')) # shape=(6, 10, 520)
output = relay.Tuple([call_6186,call_6188,var_6193,bop_6199,])
output2 = relay.Tuple([call_6187,call_6189,var_6193,bop_6202,])
func_6209 = relay.Function([var_6193,], output)
mod['func_6209'] = func_6209
mod = relay.transform.InferType()(mod)
mutated_mod['func_6209'] = func_6209
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6210 = relay.var("var_6210", dtype = "float32", shape = (60,))#candidate|6210|(60,)|var|float32
func_6209_call = mutated_mod.get_global_var('func_6209')
call_6211 = func_6209_call(var_6210)
output = call_6211
func_6212 = relay.Function([var_6210], output)
mutated_mod['func_6212'] = func_6212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5170_call = mod.get_global_var('func_5170')
func_5171_call = mutated_mod.get_global_var('func_5171')
call_6218 = relay.TupleGetItem(func_5170_call(), 0)
call_6219 = relay.TupleGetItem(func_5171_call(), 0)
output = call_6218
output2 = call_6219
func_6220 = relay.Function([], output)
mod['func_6220'] = func_6220
mod = relay.transform.InferType()(mod)
output = func_6220()
func_6221 = relay.Function([], output)
mutated_mod['func_6221'] = func_6221
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6224 = relay.var("var_6224", dtype = "float64", shape = (4, 16, 8))#candidate|6224|(4, 16, 8)|var|float64
uop_6225 = relay.sinh(var_6224.astype('float64')) # shape=(4, 16, 8)
output = relay.Tuple([uop_6225,])
output2 = relay.Tuple([uop_6225,])
func_6228 = relay.Function([var_6224,], output)
mod['func_6228'] = func_6228
mod = relay.transform.InferType()(mod)
var_6229 = relay.var("var_6229", dtype = "float64", shape = (4, 16, 8))#candidate|6229|(4, 16, 8)|var|float64
output = func_6228(var_6229)
func_6230 = relay.Function([var_6229], output)
mutated_mod['func_6230'] = func_6230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5331_call = mod.get_global_var('func_5331')
func_5333_call = mutated_mod.get_global_var('func_5333')
call_6298 = relay.TupleGetItem(func_5331_call(), 0)
call_6299 = relay.TupleGetItem(func_5333_call(), 0)
output = relay.Tuple([call_6298,])
output2 = relay.Tuple([call_6299,])
func_6301 = relay.Function([], output)
mod['func_6301'] = func_6301
mod = relay.transform.InferType()(mod)
mutated_mod['func_6301'] = func_6301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6301_call = mutated_mod.get_global_var('func_6301')
call_6302 = func_6301_call()
output = call_6302
func_6303 = relay.Function([], output)
mutated_mod['func_6303'] = func_6303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6086_call = mod.get_global_var('func_6086')
func_6087_call = mutated_mod.get_global_var('func_6087')
call_6318 = func_6086_call()
call_6319 = func_6086_call()
output = relay.Tuple([call_6318,])
output2 = relay.Tuple([call_6319,])
func_6333 = relay.Function([], output)
mod['func_6333'] = func_6333
mod = relay.transform.InferType()(mod)
mutated_mod['func_6333'] = func_6333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6333_call = mutated_mod.get_global_var('func_6333')
call_6334 = func_6333_call()
output = call_6334
func_6335 = relay.Function([], output)
mutated_mod['func_6335'] = func_6335
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6356 = relay.const([[[6,3,4,-4,8,7,-2,-1,3,-2,-2,3,-10,1,10],[1,-5,-1,4,-8,-3,-2,-3,5,-4,-8,3,-4,-8,6]],[[8,6,-2,2,4,-10,4,1,5,-7,5,5,7,-5,-6],[-5,-8,8,7,8,2,8,2,-7,-7,5,-10,-4,-10,1]],[[9,10,6,9,-2,3,-7,-3,-10,3,5,-3,-8,1,5],[-6,10,2,-6,9,8,-3,3,-1,6,-2,3,5,2,9]],[[-2,4,1,-7,-6,6,-6,-8,-4,-2,2,5,-1,7,8],[3,-1,1,-10,10,3,-10,4,10,7,-2,7,-4,-8,4]],[[-9,8,-1,-3,-7,8,8,1,-8,-3,4,-3,3,-3,-10],[-8,1,8,-5,4,-3,-2,-4,2,7,-4,1,3,-9,-8]],[[3,-8,4,-8,-7,2,9,-1,-8,-3,-10,-5,-6,-6,7],[4,10,6,-9,4,9,6,-10,8,-9,5,8,2,-2,-9]],[[-2,1,-6,-9,-1,1,-9,-5,3,8,-4,3,7,-8,-6],[8,-1,-2,-5,-3,4,-6,10,-3,-7,-7,6,-5,-7,-1]],[[-1,1,-7,-10,-5,-1,-7,-3,10,-10,-7,-8,-8,7,5],[10,-7,9,-5,-10,-3,9,-8,5,-6,-5,-5,-7,7,10]],[[-2,-9,1,-6,-6,-7,7,-7,8,-5,10,-9,-4,-7,2],[2,-8,-6,-8,5,9,2,-8,3,4,10,9,-8,10,3]],[[-5,-8,7,-3,-8,-10,2,3,3,-6,5,1,-9,-6,-4],[-1,-7,3,-4,-10,7,-9,3,1,-9,3,4,7,-2,-2]],[[-3,7,-5,5,-7,2,-4,4,-7,3,1,2,-9,9,-4],[-8,-8,-7,5,2,7,-7,7,8,4,9,-7,-1,2,6]],[[2,2,-10,3,-1,7,-9,8,-6,9,10,-5,1,-3,-5],[6,4,-9,7,10,-7,7,-3,-3,3,-9,1,2,-8,-2]],[[6,2,8,-4,5,4,-5,9,7,-7,3,-5,-9,-4,-4],[10,6,7,5,-10,7,2,4,10,-5,-4,-2,-3,-6,8]],[[5,9,1,-7,9,-9,-3,10,4,1,-8,8,-3,-1,-9],[-10,-8,-8,-5,9,4,2,-1,-7,4,-6,2,-4,-4,4]]], dtype = "uint64")#candidate|6356|(14, 2, 15)|const|uint64
const_6357 = relay.const([[[-3,4,-7,-7,4,10,-7,-3,-6,-5,-6,-5,-4,6,-3],[-6,9,2,-6,-10,2,-6,-8,9,-9,-8,-3,-4,4,-9]],[[-8,-7,-6,-4,7,7,-6,8,1,10,2,-3,-3,-2,-8],[5,-5,-4,1,-7,3,-10,4,-3,-5,-5,2,-2,6,1]],[[-4,-1,-9,3,-2,-8,2,-2,-6,-3,1,-8,7,-10,-3],[-6,-9,7,1,-10,8,-6,6,9,6,-4,2,-1,-1,2]],[[4,-10,-7,3,-5,-1,-10,3,8,1,6,2,-7,-6,4],[10,-8,-10,-5,4,-5,3,3,-3,-2,4,10,-7,-9,-3]],[[3,-10,4,-7,-3,1,8,-3,-1,-2,1,-10,-2,-7,-10],[-3,-6,5,2,-10,-4,1,6,5,-10,-2,-2,1,-9,-4]],[[-9,-3,9,6,9,4,-1,-7,9,-6,-10,-10,-1,8,-9],[9,1,-4,10,-2,10,-6,3,5,7,2,10,-10,5,10]],[[-10,4,3,-2,2,5,1,10,-5,9,8,9,-3,10,-7],[-4,1,8,7,-10,7,-10,7,6,7,-5,-5,5,-5,8]],[[5,-1,-9,4,-3,7,-10,-10,-7,10,-10,-10,-1,-4,10],[-10,-1,5,10,-6,-2,10,-9,8,5,-1,2,1,-8,10]],[[5,5,1,-4,7,-1,-2,-10,3,9,5,4,-3,9,-8],[-9,10,-8,6,-1,1,-4,7,4,-4,-10,2,4,-9,-7]],[[5,1,-4,8,1,6,3,5,-6,10,3,-8,-3,2,-7],[-8,-9,-8,8,-4,5,-10,-10,8,7,7,-5,-7,-7,-10]],[[-10,-9,-7,-3,-4,3,8,8,10,5,4,-7,7,7,3],[-2,-6,-5,7,10,-6,1,-8,-4,-6,4,-3,7,5,7]],[[3,-2,-10,4,6,1,8,-7,-2,5,-2,-8,-9,6,-10],[3,-2,-2,1,-2,-9,8,6,4,-8,5,-7,2,7,2]],[[-1,-1,-8,-5,-9,8,9,-7,-3,2,1,1,10,4,3],[7,10,7,2,-9,-7,1,4,1,-1,1,10,-10,5,-10]],[[-1,-2,-6,9,9,9,6,1,9,9,5,-2,2,-5,-5],[7,3,-4,-8,-7,10,2,7,8,-7,6,9,-7,9,9]]], dtype = "uint64")#candidate|6357|(14, 2, 15)|const|uint64
bop_6358 = relay.greater(const_6356.astype('bool'), relay.reshape(const_6357.astype('bool'), relay.shape_of(const_6356))) # shape=(14, 2, 15)
output = relay.Tuple([bop_6358,])
output2 = relay.Tuple([bop_6358,])
func_6362 = relay.Function([], output)
mod['func_6362'] = func_6362
mod = relay.transform.InferType()(mod)
mutated_mod['func_6362'] = func_6362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6362_call = mutated_mod.get_global_var('func_6362')
call_6363 = func_6362_call()
output = call_6363
func_6364 = relay.Function([], output)
mutated_mod['func_6364'] = func_6364
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6434 = relay.var("var_6434", dtype = "uint64", shape = ())#candidate|6434|()|var|uint64
var_6435 = relay.var("var_6435", dtype = "uint64", shape = (1, 10, 8))#candidate|6435|(1, 10, 8)|var|uint64
bop_6436 = relay.add(var_6434.astype('uint64'), var_6435.astype('uint64')) # shape=(1, 10, 8)
output = relay.Tuple([bop_6436,])
output2 = relay.Tuple([bop_6436,])
func_6439 = relay.Function([var_6434,var_6435,], output)
mod['func_6439'] = func_6439
mod = relay.transform.InferType()(mod)
var_6440 = relay.var("var_6440", dtype = "uint64", shape = ())#candidate|6440|()|var|uint64
var_6441 = relay.var("var_6441", dtype = "uint64", shape = (1, 10, 8))#candidate|6441|(1, 10, 8)|var|uint64
output = func_6439(var_6440,var_6441,)
func_6442 = relay.Function([var_6440,var_6441,], output)
mutated_mod['func_6442'] = func_6442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6060_call = mod.get_global_var('func_6060')
func_6062_call = mutated_mod.get_global_var('func_6062')
call_6503 = func_6060_call()
call_6504 = func_6060_call()
func_4953_call = mod.get_global_var('func_4953')
func_4955_call = mutated_mod.get_global_var('func_4955')
call_6528 = relay.TupleGetItem(func_4953_call(), 0)
call_6529 = relay.TupleGetItem(func_4955_call(), 0)
func_3071_call = mod.get_global_var('func_3071')
func_3072_call = mutated_mod.get_global_var('func_3072')
call_6535 = relay.TupleGetItem(func_3071_call(), 0)
call_6536 = relay.TupleGetItem(func_3072_call(), 0)
output = relay.Tuple([call_6503,call_6528,call_6535,])
output2 = relay.Tuple([call_6504,call_6529,call_6536,])
func_6540 = relay.Function([], output)
mod['func_6540'] = func_6540
mod = relay.transform.InferType()(mod)
output = func_6540()
func_6541 = relay.Function([], output)
mutated_mod['func_6541'] = func_6541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5298_call = mod.get_global_var('func_5298')
func_5299_call = mutated_mod.get_global_var('func_5299')
call_6546 = relay.TupleGetItem(func_5298_call(), 2)
call_6547 = relay.TupleGetItem(func_5299_call(), 2)
output = call_6546
output2 = call_6547
func_6550 = relay.Function([], output)
mod['func_6550'] = func_6550
mod = relay.transform.InferType()(mod)
output = func_6550()
func_6551 = relay.Function([], output)
mutated_mod['func_6551'] = func_6551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6550_call = mod.get_global_var('func_6550')
func_6551_call = mutated_mod.get_global_var('func_6551')
call_6558 = func_6550_call()
call_6559 = func_6550_call()
output = call_6558
output2 = call_6559
func_6569 = relay.Function([], output)
mod['func_6569'] = func_6569
mod = relay.transform.InferType()(mod)
output = func_6569()
func_6570 = relay.Function([], output)
mutated_mod['func_6570'] = func_6570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4894_call = mod.get_global_var('func_4894')
func_4895_call = mutated_mod.get_global_var('func_4895')
call_6587 = func_4894_call()
call_6588 = func_4894_call()
output = relay.Tuple([call_6587,])
output2 = relay.Tuple([call_6588,])
func_6589 = relay.Function([], output)
mod['func_6589'] = func_6589
mod = relay.transform.InferType()(mod)
mutated_mod['func_6589'] = func_6589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6589_call = mutated_mod.get_global_var('func_6589')
call_6590 = func_6589_call()
output = call_6590
func_6591 = relay.Function([], output)
mutated_mod['func_6591'] = func_6591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1673_call = mod.get_global_var('func_1673')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_6592 = relay.TupleGetItem(func_1673_call(), 0)
call_6593 = relay.TupleGetItem(func_1675_call(), 0)
uop_6612 = relay.tan(call_6592.astype('float64')) # shape=(14, 14, 9)
uop_6614 = relay.tan(call_6593.astype('float64')) # shape=(14, 14, 9)
func_6228_call = mod.get_global_var('func_6228')
func_6230_call = mutated_mod.get_global_var('func_6230')
const_6617 = relay.const([-4.736313,-4.281187,-2.582812,-9.587712,1.563439,5.466637,7.815705,2.761678,-8.775892,0.708793,9.212293,-5.682508,-2.532914,-0.922681,8.028096,-4.480451,-9.637745,5.758812,-6.045325,-1.340356,-4.217103,-7.089858,8.610881,-9.971781,3.412757,5.321455,-2.197735,2.972624,5.373768,2.650019,4.669544,-4.050695,-5.668261,9.031263,6.953680,-7.917030,8.308409,3.182667,-4.690743,9.114016,5.346504,7.160554,-3.810793,-8.896281,-8.007419,-5.783402,6.701442,3.046481,-4.720444,-3.418500,7.065297,-1.059822,4.212411,9.919888,1.347251,-8.133171,8.986524,9.324984,-6.589230,4.125077,3.511648,-0.884217,-0.564043,-1.631675,-1.072387,-4.970707,4.323683,8.977406,-4.332724,-2.764675,1.495785,-8.672921,-0.757667,-9.641939,8.939898,6.445922,3.146722,0.533564,-3.172192,7.957111,-6.863605,-6.786541,-0.127853,3.683665,-8.894873,-8.210081,-0.936085,-8.021559,-4.400690,7.854340,-3.518426,-1.318825,-1.476386,7.018137,7.498976,-1.233220,-5.849491,3.439080,-4.120153,3.209176,4.836544,-3.622444,-6.352807,-8.665966,4.354776,-3.340758,2.661978,1.691276,-3.438011,-8.581230,0.907964,3.413919,7.604730,-2.687762,8.362657,-9.005712,-4.578127,-3.694234,6.033139,3.538177,-7.350249,-9.733981,9.323021,-3.033814,-7.413879,7.058861,9.737442,1.197247,-5.190615,-3.077345,3.523644,-5.393026,5.331438,-1.859174,3.856409,2.687957,7.586315,7.289513,3.307066,-7.799290,-4.119876,-0.644749,-2.000824,-6.399734,5.273280,6.581755,2.395342,-3.265954,-5.904768,6.595021,8.320963,-4.762748,-7.289193,7.157237,2.497562,7.273707,9.823514,5.253955,9.227103,-5.117244,-9.716474,8.014511,2.259350,-5.895160,-5.198504,-7.566450,-8.976841,-5.569348,-9.813579,-5.630697,7.006277,-4.136322,2.306546,7.342552,9.765038,-1.343119,3.769829,-8.358409,3.353722,-2.411700,-9.348583,8.833529,7.534739,-1.396071,7.157569,1.489887,-2.473706,-7.762697,7.194562,4.794718,6.601996,-2.522967,0.943061,-9.146131,5.314179,5.998010,2.296016,-4.499567,-4.216588,-7.990128,-9.349019,5.420222,5.987770,-7.787605,4.976587,-4.456634,1.453565,8.844075,9.605373,-3.500449,-0.505483,-8.159283,-8.115436,5.044894,6.299142,7.753210,6.378899,9.703553,-0.497359,-9.519035,7.198085,-0.758933,7.818774,4.442754,8.233066,-5.194613,5.980171,8.833929,2.047430,0.382176,2.206949,-0.747275,7.731360,5.470769,-8.428586,6.864556,-8.832769,-3.497580,1.530598,-6.237038,6.897592,-5.591510,-2.028542,0.627646,-0.075584,-6.697015,1.762342,7.450621,-5.292351,-7.015901,-9.263802,-7.120613,3.831968,-9.715349,4.950985,-5.829939,0.856676,0.850594,-8.472660,-0.715686,8.258381,-3.455586,7.277128,1.691692,1.820252,-2.800391,0.798206,-9.958823,-5.946467,3.994957,-9.661579,-8.021117,5.579833,7.563667,-2.931124,-5.994399,-4.144167,-2.866054,-8.432511,-7.388842,4.935772,8.867479,3.451809,-7.446654,3.917811,7.577660,3.186500,7.070991,-4.261174,-4.080855,-3.956315,-9.776378,-7.431884,8.905934,9.081174,-3.360323,-9.574893,9.988951,2.716736,0.296230,-0.267487,-0.591770,2.893748,-0.540578,-1.749773,-7.988520,7.028318,-6.883784,-6.694496,6.920443,8.561422,-8.811857,3.366014,9.068635,3.233043,1.900806,-1.651109,6.996339,-4.347799,1.183771,2.561047,8.754027,-1.187448,-6.338967,6.829883,-5.658204,9.607040,6.001396,2.269609,7.401828,7.219493,-1.851337,4.760032,0.187832,3.886458,-9.814575,1.798893,0.299595,0.984850,-2.988594,2.733887,6.354938,0.128395,-7.931950,-2.183643,-6.926913,-4.748488,8.503626,-4.141960,3.556445,7.659038,-3.961548,-2.880423,-9.085611,7.048965,-0.563998,-4.562492,7.038587,-3.341330,-0.455872,-9.596008,2.140059,4.542008,-4.772698,1.811397,4.574271,3.242124,5.762209,1.369101,-8.377179,-3.210362,-9.591452,-1.625658,2.463136,2.990728,9.320535,-0.819249,-6.003261,1.806706,0.041363,8.213256,2.136349,5.120667,-4.551606,4.952482,6.235339,9.146595,-0.882739,-9.852398,0.328218,9.328119,4.504618,7.834856,2.820040,-4.242260,2.171307,7.048620,-9.406764,-7.179449,5.516407,9.617167,1.892969,-4.516464,0.625058,4.141694,-6.171330,8.443852,-1.417203,-8.699932,-7.904972,1.780893,-8.728973,-9.564568,1.046737,2.033116,-7.371638,7.933495,9.425766,1.390015,-5.122865,5.078129,7.585134,-8.561129,6.784956,8.500098,6.574497,-3.647132,4.898593,9.884144,2.779831,-5.699972,3.202476,1.290162,8.291107,9.426904,-0.683170,6.046599,-0.032510,8.990292,-7.437843,5.212748,0.104245,7.841549,-8.714437,6.416797,8.502311,-8.862757,-2.505760,1.941672,-1.343534,5.145177,-8.800411,9.140514,6.266041,-1.370649,8.459735,6.947420,0.568493,-3.971179,8.817806,9.466851,8.978917,-9.542930,-4.883294,8.412862,-4.397958,7.179560,9.011332,1.868394,7.253960,-0.310488,9.667754,-7.469758,-1.978056,3.767233,-2.636348,-7.504364,-9.979858,9.655454,1.605460,5.849483,-2.541996,-6.784818,8.935518,-4.020696,8.212185,-8.991662,-1.904757,-9.482653,2.061020,6.286443,-1.900583,8.590096,-3.877089,7.374220,0.009092,9.546053,9.931217,-8.429049,-9.547258,-6.164847,1.933131,-7.908596,3.011470,4.669432,-7.978358,-8.411724,-9.874825,2.875959,4.047184,-7.467010,-0.698158], dtype = "float64")#candidate|6617|(512,)|const|float64
call_6616 = relay.TupleGetItem(func_6228_call(relay.reshape(const_6617.astype('float64'), [4, 16, 8])), 0)
call_6618 = relay.TupleGetItem(func_6230_call(relay.reshape(const_6617.astype('float64'), [4, 16, 8])), 0)
func_3621_call = mod.get_global_var('func_3621')
func_3623_call = mutated_mod.get_global_var('func_3623')
call_6627 = relay.TupleGetItem(func_3621_call(), 0)
call_6628 = relay.TupleGetItem(func_3623_call(), 0)
func_2917_call = mod.get_global_var('func_2917')
func_2918_call = mutated_mod.get_global_var('func_2918')
call_6636 = relay.TupleGetItem(func_2917_call(), 0)
call_6637 = relay.TupleGetItem(func_2918_call(), 0)
func_3042_call = mod.get_global_var('func_3042')
func_3044_call = mutated_mod.get_global_var('func_3044')
var_6647 = relay.var("var_6647", dtype = "float64", shape = (520,))#candidate|6647|(520,)|var|float64
call_6646 = relay.TupleGetItem(func_3042_call(relay.reshape(var_6647.astype('float64'), [520,])), 4)
call_6648 = relay.TupleGetItem(func_3044_call(relay.reshape(var_6647.astype('float64'), [520,])), 4)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
var_6650 = relay.var("var_6650", dtype = "float32", shape = (2160,))#candidate|6650|(2160,)|var|float32
call_6649 = relay.TupleGetItem(func_4838_call(relay.reshape(var_6650.astype('float32'), [360, 6])), 2)
call_6651 = relay.TupleGetItem(func_4840_call(relay.reshape(var_6650.astype('float32'), [360, 6])), 2)
func_4773_call = mod.get_global_var('func_4773')
func_4775_call = mutated_mod.get_global_var('func_4775')
var_6671 = relay.var("var_6671", dtype = "float64", shape = (30,))#candidate|6671|(30,)|var|float64
call_6670 = func_4773_call(relay.reshape(var_6671.astype('float64'), [6, 5, 1]))
call_6672 = func_4773_call(relay.reshape(var_6671.astype('float64'), [6, 5, 1]))
output = relay.Tuple([uop_6612,call_6616,const_6617,call_6627,call_6636,call_6646,var_6647,call_6649,var_6650,call_6670,var_6671,])
output2 = relay.Tuple([uop_6614,call_6618,const_6617,call_6628,call_6637,call_6648,var_6647,call_6651,var_6650,call_6672,var_6671,])
func_6678 = relay.Function([var_6647,var_6650,var_6671,], output)
mod['func_6678'] = func_6678
mod = relay.transform.InferType()(mod)
mutated_mod['func_6678'] = func_6678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6678_call = mutated_mod.get_global_var('func_6678')
var_6680 = relay.var("var_6680", dtype = "float64", shape = (520,))#candidate|6680|(520,)|var|float64
var_6681 = relay.var("var_6681", dtype = "float32", shape = (2160,))#candidate|6681|(2160,)|var|float32
var_6682 = relay.var("var_6682", dtype = "float64", shape = (30,))#candidate|6682|(30,)|var|float64
call_6679 = func_6678_call(var_6680,var_6681,var_6682,)
output = call_6679
func_6683 = relay.Function([var_6680,var_6681,var_6682,], output)
mutated_mod['func_6683'] = func_6683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5298_call = mod.get_global_var('func_5298')
func_5299_call = mutated_mod.get_global_var('func_5299')
call_6717 = relay.TupleGetItem(func_5298_call(), 0)
call_6718 = relay.TupleGetItem(func_5299_call(), 0)
func_2503_call = mod.get_global_var('func_2503')
func_2506_call = mutated_mod.get_global_var('func_2506')
var_6771 = relay.var("var_6771", dtype = "float64", shape = (135,))#candidate|6771|(135,)|var|float64
call_6770 = func_2503_call(relay.reshape(var_6771.astype('float64'), [3, 15, 3]))
call_6772 = func_2503_call(relay.reshape(var_6771.astype('float64'), [3, 15, 3]))
uop_6793 = relay.rsqrt(call_6770.astype('float32')) # shape=(3, 15, 3)
uop_6795 = relay.rsqrt(call_6772.astype('float32')) # shape=(3, 15, 3)
output = relay.Tuple([call_6717,var_6771,uop_6793,])
output2 = relay.Tuple([call_6718,var_6771,uop_6795,])
func_6796 = relay.Function([var_6771,], output)
mod['func_6796'] = func_6796
mod = relay.transform.InferType()(mod)
mutated_mod['func_6796'] = func_6796
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6797 = relay.var("var_6797", dtype = "float64", shape = (135,))#candidate|6797|(135,)|var|float64
func_6796_call = mutated_mod.get_global_var('func_6796')
call_6798 = func_6796_call(var_6797)
output = call_6798
func_6799 = relay.Function([var_6797], output)
mutated_mod['func_6799'] = func_6799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4168_call = mod.get_global_var('func_4168')
func_4170_call = mutated_mod.get_global_var('func_4170')
call_6804 = relay.TupleGetItem(func_4168_call(), 0)
call_6805 = relay.TupleGetItem(func_4170_call(), 0)
func_4730_call = mod.get_global_var('func_4730')
func_4733_call = mutated_mod.get_global_var('func_4733')
call_6807 = relay.TupleGetItem(func_4730_call(relay.reshape(call_6804.astype('float64'), [1764, 1])), 0)
call_6808 = relay.TupleGetItem(func_4733_call(relay.reshape(call_6804.astype('float64'), [1764, 1])), 0)
output = relay.Tuple([call_6804,call_6807,])
output2 = relay.Tuple([call_6805,call_6808,])
func_6823 = relay.Function([], output)
mod['func_6823'] = func_6823
mod = relay.transform.InferType()(mod)
output = func_6823()
func_6824 = relay.Function([], output)
mutated_mod['func_6824'] = func_6824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4894_call = mod.get_global_var('func_4894')
func_4895_call = mutated_mod.get_global_var('func_4895')
call_6860 = func_4894_call()
call_6861 = func_4894_call()
func_1802_call = mod.get_global_var('func_1802')
func_1805_call = mutated_mod.get_global_var('func_1805')
const_6868 = relay.const([[True,False,True,True,False,False,True,True,False,False,True,False],[False,False,True,True,False,False,True,False,False,False,True,True],[True,True,True,True,True,False,True,False,True,True,True,True]], dtype = "bool")#candidate|6868|(3, 12)|const|bool
call_6867 = relay.TupleGetItem(func_1802_call(relay.reshape(const_6868.astype('bool'), [36,])), 4)
call_6869 = relay.TupleGetItem(func_1805_call(relay.reshape(const_6868.astype('bool'), [36,])), 4)
output = relay.Tuple([call_6860,call_6867,const_6868,])
output2 = relay.Tuple([call_6861,call_6869,const_6868,])
func_6873 = relay.Function([], output)
mod['func_6873'] = func_6873
mod = relay.transform.InferType()(mod)
mutated_mod['func_6873'] = func_6873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6873_call = mutated_mod.get_global_var('func_6873')
call_6874 = func_6873_call()
output = call_6874
func_6875 = relay.Function([], output)
mutated_mod['func_6875'] = func_6875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5067_call = mod.get_global_var('func_5067')
func_5069_call = mutated_mod.get_global_var('func_5069')
call_7018 = relay.TupleGetItem(func_5067_call(), 0)
call_7019 = relay.TupleGetItem(func_5069_call(), 0)
output = relay.Tuple([call_7018,])
output2 = relay.Tuple([call_7019,])
func_7045 = relay.Function([], output)
mod['func_7045'] = func_7045
mod = relay.transform.InferType()(mod)
output = func_7045()
func_7046 = relay.Function([], output)
mutated_mod['func_7046'] = func_7046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5189_call = mod.get_global_var('func_5189')
func_5191_call = mutated_mod.get_global_var('func_5191')
call_7047 = func_5189_call()
call_7048 = func_5189_call()
func_2904_call = mod.get_global_var('func_2904')
func_2905_call = mutated_mod.get_global_var('func_2905')
call_7054 = relay.TupleGetItem(func_2904_call(), 0)
call_7055 = relay.TupleGetItem(func_2905_call(), 0)
func_6569_call = mod.get_global_var('func_6569')
func_6570_call = mutated_mod.get_global_var('func_6570')
call_7061 = func_6569_call()
call_7062 = func_6569_call()
output = relay.Tuple([call_7047,call_7054,call_7061,])
output2 = relay.Tuple([call_7048,call_7055,call_7062,])
func_7069 = relay.Function([], output)
mod['func_7069'] = func_7069
mod = relay.transform.InferType()(mod)
output = func_7069()
func_7070 = relay.Function([], output)
mutated_mod['func_7070'] = func_7070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6060_call = mod.get_global_var('func_6060')
func_6062_call = mutated_mod.get_global_var('func_6062')
call_7095 = func_6060_call()
call_7096 = func_6060_call()
output = call_7095
output2 = call_7096
func_7104 = relay.Function([], output)
mod['func_7104'] = func_7104
mod = relay.transform.InferType()(mod)
output = func_7104()
func_7105 = relay.Function([], output)
mutated_mod['func_7105'] = func_7105
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7106 = relay.var("var_7106", dtype = "int8", shape = ())#candidate|7106|()|var|int8
var_7107 = relay.var("var_7107", dtype = "int8", shape = (4, 1, 9))#candidate|7107|(4, 1, 9)|var|int8
bop_7108 = relay.logical_xor(var_7106.astype('int8'), var_7107.astype('int8')) # shape=(4, 1, 9)
func_2904_call = mod.get_global_var('func_2904')
func_2905_call = mutated_mod.get_global_var('func_2905')
call_7117 = relay.TupleGetItem(func_2904_call(), 0)
call_7118 = relay.TupleGetItem(func_2905_call(), 0)
func_2365_call = mod.get_global_var('func_2365')
func_2366_call = mutated_mod.get_global_var('func_2366')
call_7119 = func_2365_call()
call_7120 = func_2365_call()
func_3658_call = mod.get_global_var('func_3658')
func_3660_call = mutated_mod.get_global_var('func_3660')
call_7134 = func_3658_call()
call_7135 = func_3658_call()
bop_7136 = relay.floor_mod(var_7107.astype('float32'), relay.reshape(call_7117.astype('float32'), relay.shape_of(var_7107))) # shape=(4, 1, 9)
bop_7139 = relay.floor_mod(var_7107.astype('float32'), relay.reshape(call_7118.astype('float32'), relay.shape_of(var_7107))) # shape=(4, 1, 9)
func_6362_call = mod.get_global_var('func_6362')
func_6364_call = mutated_mod.get_global_var('func_6364')
call_7142 = relay.TupleGetItem(func_6362_call(), 0)
call_7143 = relay.TupleGetItem(func_6364_call(), 0)
uop_7147 = relay.sigmoid(bop_7108.astype('float64')) # shape=(4, 1, 9)
func_4168_call = mod.get_global_var('func_4168')
func_4170_call = mutated_mod.get_global_var('func_4170')
call_7162 = relay.TupleGetItem(func_4168_call(), 0)
call_7163 = relay.TupleGetItem(func_4170_call(), 0)
uop_7176 = relay.acos(uop_7147.astype('float32')) # shape=(4, 1, 9)
func_3379_call = mod.get_global_var('func_3379')
func_3381_call = mutated_mod.get_global_var('func_3381')
call_7180 = func_3379_call()
call_7181 = func_3379_call()
func_2503_call = mod.get_global_var('func_2503')
func_2506_call = mutated_mod.get_global_var('func_2506')
const_7189 = relay.const([[5.254989,1.492448,-1.350397,8.741511,5.898723,6.096072,3.993619,-1.710671,6.447742,-1.703352,-1.731603,-9.313829,8.442581,-4.760083,-0.171535,6.693665,9.034429,9.843165,-7.463288,-8.578758,1.230334,0.406220,1.003335,1.947835,-6.362545,-4.773052,5.257762,8.659046,-0.761283,1.210452,-0.791051,6.477763,1.292663,6.735230,8.231500,1.469019,1.165608,-6.613824,-1.877653,3.319336,8.800993,4.982224,-8.161700,-9.064519,-4.423213],[-2.422702,-4.337000,3.838729,-2.073905,3.110347,-1.563919,-4.176431,6.369020,-3.933090,-9.138160,4.413862,0.144510,9.402315,7.459481,5.839757,8.645445,-7.649742,7.769370,2.423352,-4.842534,0.252801,6.369928,-3.411058,-8.386687,2.469153,-7.081653,2.574542,1.003409,-3.388735,-2.516510,9.664818,6.427470,1.745144,0.238916,-6.153234,-5.376566,-5.726589,9.769165,-9.419147,-1.365356,-5.942153,-2.649857,-5.209122,-2.158472,0.184139],[-5.906375,-0.844601,-2.111502,-2.133815,-1.777035,-1.823515,3.446333,7.329108,1.784358,-6.763564,3.460964,8.445390,-1.182457,0.322305,-4.071330,2.262179,1.505619,-4.255210,-2.878356,5.162394,9.324365,5.300088,0.784932,7.505112,-1.459231,-4.815572,-7.415336,-6.273056,3.118103,-6.200000,-6.407702,9.054427,0.462041,8.932119,-9.116052,8.493619,-2.130249,-8.547972,0.246223,0.772300,-8.232535,0.710353,2.442048,7.619410,8.900725]], dtype = "float64")#candidate|7189|(3, 45)|const|float64
call_7188 = func_2503_call(relay.reshape(const_7189.astype('float64'), [3, 15, 3]))
call_7190 = func_2503_call(relay.reshape(const_7189.astype('float64'), [3, 15, 3]))
output = relay.Tuple([call_7119,call_7134,bop_7136,call_7142,call_7162,uop_7176,call_7180,call_7188,const_7189,])
output2 = relay.Tuple([call_7120,call_7135,bop_7139,call_7143,call_7163,uop_7176,call_7181,call_7190,const_7189,])
func_7193 = relay.Function([var_7106,var_7107,], output)
mod['func_7193'] = func_7193
mod = relay.transform.InferType()(mod)
mutated_mod['func_7193'] = func_7193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7193_call = mutated_mod.get_global_var('func_7193')
var_7195 = relay.var("var_7195", dtype = "int8", shape = ())#candidate|7195|()|var|int8
var_7196 = relay.var("var_7196", dtype = "int8", shape = (4, 1, 9))#candidate|7196|(4, 1, 9)|var|int8
call_7194 = func_7193_call(var_7195,var_7196,)
output = call_7194
func_7197 = relay.Function([var_7195,var_7196,], output)
mutated_mod['func_7197'] = func_7197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5099_call = mod.get_global_var('func_5099')
func_5101_call = mutated_mod.get_global_var('func_5101')
call_7204 = relay.TupleGetItem(func_5099_call(), 0)
call_7205 = relay.TupleGetItem(func_5101_call(), 0)
output = relay.Tuple([call_7204,])
output2 = relay.Tuple([call_7205,])
func_7234 = relay.Function([], output)
mod['func_7234'] = func_7234
mod = relay.transform.InferType()(mod)
output = func_7234()
func_7235 = relay.Function([], output)
mutated_mod['func_7235'] = func_7235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2296_call = mod.get_global_var('func_2296')
func_2297_call = mutated_mod.get_global_var('func_2297')
call_7252 = func_2296_call()
call_7253 = func_2296_call()
output = relay.Tuple([call_7252,])
output2 = relay.Tuple([call_7253,])
func_7254 = relay.Function([], output)
mod['func_7254'] = func_7254
mod = relay.transform.InferType()(mod)
mutated_mod['func_7254'] = func_7254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7254_call = mutated_mod.get_global_var('func_7254')
call_7255 = func_7254_call()
output = call_7255
func_7256 = relay.Function([], output)
mutated_mod['func_7256'] = func_7256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3379_call = mod.get_global_var('func_3379')
func_3381_call = mutated_mod.get_global_var('func_3381')
call_7348 = func_3379_call()
call_7349 = func_3379_call()
var_7350 = relay.var("var_7350", dtype = "bool", shape = (14, 14, 9))#candidate|7350|(14, 14, 9)|var|bool
bop_7351 = relay.left_shift(call_7348.astype('uint64'), relay.reshape(var_7350.astype('uint64'), relay.shape_of(call_7348))) # shape=(14, 14, 9)
bop_7354 = relay.left_shift(call_7349.astype('uint64'), relay.reshape(var_7350.astype('uint64'), relay.shape_of(call_7349))) # shape=(14, 14, 9)
output = bop_7351
output2 = bop_7354
func_7364 = relay.Function([var_7350,], output)
mod['func_7364'] = func_7364
mod = relay.transform.InferType()(mod)
var_7365 = relay.var("var_7365", dtype = "bool", shape = (14, 14, 9))#candidate|7365|(14, 14, 9)|var|bool
output = func_7364(var_7365)
func_7366 = relay.Function([var_7365], output)
mutated_mod['func_7366'] = func_7366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4894_call = mod.get_global_var('func_4894')
func_4895_call = mutated_mod.get_global_var('func_4895')
call_7390 = func_4894_call()
call_7391 = func_4894_call()
output = call_7390
output2 = call_7391
func_7410 = relay.Function([], output)
mod['func_7410'] = func_7410
mod = relay.transform.InferType()(mod)
mutated_mod['func_7410'] = func_7410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7410_call = mutated_mod.get_global_var('func_7410')
call_7411 = func_7410_call()
output = call_7411
func_7412 = relay.Function([], output)
mutated_mod['func_7412'] = func_7412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2296_call = mod.get_global_var('func_2296')
func_2297_call = mutated_mod.get_global_var('func_2297')
call_7418 = func_2296_call()
call_7419 = func_2296_call()
func_6209_call = mod.get_global_var('func_6209')
func_6212_call = mutated_mod.get_global_var('func_6212')
var_7444 = relay.var("var_7444", dtype = "float32", shape = (60,))#candidate|7444|(60,)|var|float32
call_7443 = relay.TupleGetItem(func_6209_call(relay.reshape(var_7444.astype('float32'), [60,])), 3)
call_7445 = relay.TupleGetItem(func_6212_call(relay.reshape(var_7444.astype('float32'), [60,])), 3)
output = relay.Tuple([call_7418,call_7443,var_7444,])
output2 = relay.Tuple([call_7419,call_7445,var_7444,])
func_7450 = relay.Function([var_7444,], output)
mod['func_7450'] = func_7450
mod = relay.transform.InferType()(mod)
mutated_mod['func_7450'] = func_7450
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7451 = relay.var("var_7451", dtype = "float32", shape = (60,))#candidate|7451|(60,)|var|float32
func_7450_call = mutated_mod.get_global_var('func_7450')
call_7452 = func_7450_call(var_7451)
output = call_7452
func_7453 = relay.Function([var_7451], output)
mutated_mod['func_7453'] = func_7453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1605_call = mod.get_global_var('func_1605')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_7479 = relay.TupleGetItem(func_1605_call(), 0)
call_7480 = relay.TupleGetItem(func_1606_call(), 0)
output = relay.Tuple([call_7479,])
output2 = relay.Tuple([call_7480,])
func_7484 = relay.Function([], output)
mod['func_7484'] = func_7484
mod = relay.transform.InferType()(mod)
mutated_mod['func_7484'] = func_7484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7484_call = mutated_mod.get_global_var('func_7484')
call_7485 = func_7484_call()
output = call_7485
func_7486 = relay.Function([], output)
mutated_mod['func_7486'] = func_7486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2151_call = mod.get_global_var('func_2151')
func_2153_call = mutated_mod.get_global_var('func_2153')
call_7496 = relay.TupleGetItem(func_2151_call(), 6)
call_7497 = relay.TupleGetItem(func_2153_call(), 6)
output = call_7496
output2 = call_7497
func_7502 = relay.Function([], output)
mod['func_7502'] = func_7502
mod = relay.transform.InferType()(mod)
output = func_7502()
func_7503 = relay.Function([], output)
mutated_mod['func_7503'] = func_7503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6873_call = mod.get_global_var('func_6873')
func_6875_call = mutated_mod.get_global_var('func_6875')
call_7528 = relay.TupleGetItem(func_6873_call(), 1)
call_7529 = relay.TupleGetItem(func_6875_call(), 1)
uop_7531 = relay.sigmoid(call_7528.astype('float64')) # shape=(30, 2)
uop_7533 = relay.sigmoid(call_7529.astype('float64')) # shape=(30, 2)
output = relay.Tuple([uop_7531,])
output2 = relay.Tuple([uop_7533,])
func_7534 = relay.Function([], output)
mod['func_7534'] = func_7534
mod = relay.transform.InferType()(mod)
output = func_7534()
func_7535 = relay.Function([], output)
mutated_mod['func_7535'] = func_7535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2475_call = mod.get_global_var('func_2475')
func_2476_call = mutated_mod.get_global_var('func_2476')
call_7546 = func_2475_call()
call_7547 = func_2475_call()
output = relay.Tuple([call_7546,])
output2 = relay.Tuple([call_7547,])
func_7554 = relay.Function([], output)
mod['func_7554'] = func_7554
mod = relay.transform.InferType()(mod)
mutated_mod['func_7554'] = func_7554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7554_call = mutated_mod.get_global_var('func_7554')
call_7555 = func_7554_call()
output = call_7555
func_7556 = relay.Function([], output)
mutated_mod['func_7556'] = func_7556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7534_call = mod.get_global_var('func_7534')
func_7535_call = mutated_mod.get_global_var('func_7535')
call_7744 = relay.TupleGetItem(func_7534_call(), 0)
call_7745 = relay.TupleGetItem(func_7535_call(), 0)
uop_7753 = relay.log(call_7744.astype('float32')) # shape=(30, 2)
uop_7755 = relay.log(call_7745.astype('float32')) # shape=(30, 2)
func_4278_call = mod.get_global_var('func_4278')
func_4280_call = mutated_mod.get_global_var('func_4280')
call_7758 = func_4278_call()
call_7759 = func_4278_call()
output = relay.Tuple([uop_7753,call_7758,])
output2 = relay.Tuple([uop_7755,call_7759,])
func_7761 = relay.Function([], output)
mod['func_7761'] = func_7761
mod = relay.transform.InferType()(mod)
mutated_mod['func_7761'] = func_7761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7761_call = mutated_mod.get_global_var('func_7761')
call_7762 = func_7761_call()
output = call_7762
func_7763 = relay.Function([], output)
mutated_mod['func_7763'] = func_7763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1673_call = mod.get_global_var('func_1673')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_7837 = relay.TupleGetItem(func_1673_call(), 0)
call_7838 = relay.TupleGetItem(func_1675_call(), 0)
func_5067_call = mod.get_global_var('func_5067')
func_5069_call = mutated_mod.get_global_var('func_5069')
call_7848 = relay.TupleGetItem(func_5067_call(), 0)
call_7849 = relay.TupleGetItem(func_5069_call(), 0)
func_7534_call = mod.get_global_var('func_7534')
func_7535_call = mutated_mod.get_global_var('func_7535')
call_7851 = relay.TupleGetItem(func_7534_call(), 0)
call_7852 = relay.TupleGetItem(func_7535_call(), 0)
uop_7855 = relay.acos(call_7851.astype('float64')) # shape=(30, 2)
uop_7857 = relay.acos(call_7852.astype('float64')) # shape=(30, 2)
func_2231_call = mod.get_global_var('func_2231')
func_2233_call = mutated_mod.get_global_var('func_2233')
call_7858 = func_2231_call(relay.reshape(call_7848.astype('float64'), [14, 14, 9]))
call_7859 = func_2231_call(relay.reshape(call_7848.astype('float64'), [14, 14, 9]))
output = relay.Tuple([call_7837,call_7848,uop_7855,call_7858,])
output2 = relay.Tuple([call_7838,call_7849,uop_7857,call_7859,])
func_7860 = relay.Function([], output)
mod['func_7860'] = func_7860
mod = relay.transform.InferType()(mod)
mutated_mod['func_7860'] = func_7860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7860_call = mutated_mod.get_global_var('func_7860')
call_7861 = func_7860_call()
output = call_7861
func_7862 = relay.Function([], output)
mutated_mod['func_7862'] = func_7862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4592_call = mod.get_global_var('func_4592')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_7886 = func_4592_call()
call_7887 = func_4592_call()
output = relay.Tuple([call_7886,])
output2 = relay.Tuple([call_7887,])
func_7889 = relay.Function([], output)
mod['func_7889'] = func_7889
mod = relay.transform.InferType()(mod)
mutated_mod['func_7889'] = func_7889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7889_call = mutated_mod.get_global_var('func_7889')
call_7890 = func_7889_call()
output = call_7890
func_7891 = relay.Function([], output)
mutated_mod['func_7891'] = func_7891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6086_call = mod.get_global_var('func_6086')
func_6087_call = mutated_mod.get_global_var('func_6087')
call_7958 = func_6086_call()
call_7959 = func_6086_call()
output = relay.Tuple([call_7958,])
output2 = relay.Tuple([call_7959,])
func_7992 = relay.Function([], output)
mod['func_7992'] = func_7992
mod = relay.transform.InferType()(mod)
output = func_7992()
func_7993 = relay.Function([], output)
mutated_mod['func_7993'] = func_7993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7502_call = mod.get_global_var('func_7502')
func_7503_call = mutated_mod.get_global_var('func_7503')
call_8005 = func_7502_call()
call_8006 = func_7502_call()
func_1293_call = mod.get_global_var('func_1293')
func_1296_call = mutated_mod.get_global_var('func_1296')
var_8008 = relay.var("var_8008", dtype = "uint32", shape = (8,))#candidate|8008|(8,)|var|uint32
const_8009 = relay.const([2,-7,-8,-7,9,6,1,4,-7,3,-7,-4,-7,6,-9,-4,-3,-8,-5,-4,2,6,-10,-9,5,4,6,3,-10,-1,-3,10,8,-7,-2,-7,10,6,-6,-7,-8,5,3,-9,4,-10,7,-3], dtype = "uint32")#candidate|8009|(48,)|const|uint32
call_8007 = relay.TupleGetItem(func_1293_call(relay.reshape(var_8008.astype('uint32'), [4, 2, 1]), relay.reshape(const_8009.astype('uint32'), [4, 2, 6]), ), 0)
call_8010 = relay.TupleGetItem(func_1296_call(relay.reshape(var_8008.astype('uint32'), [4, 2, 1]), relay.reshape(const_8009.astype('uint32'), [4, 2, 6]), ), 0)
output = relay.Tuple([call_8005,call_8007,var_8008,const_8009,])
output2 = relay.Tuple([call_8006,call_8010,var_8008,const_8009,])
func_8012 = relay.Function([var_8008,], output)
mod['func_8012'] = func_8012
mod = relay.transform.InferType()(mod)
mutated_mod['func_8012'] = func_8012
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8013 = relay.var("var_8013", dtype = "uint32", shape = (8,))#candidate|8013|(8,)|var|uint32
func_8012_call = mutated_mod.get_global_var('func_8012')
call_8014 = func_8012_call(var_8013)
output = call_8014
func_8015 = relay.Function([var_8013], output)
mutated_mod['func_8015'] = func_8015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5331_call = mod.get_global_var('func_5331')
func_5333_call = mutated_mod.get_global_var('func_5333')
call_8095 = relay.TupleGetItem(func_5331_call(), 0)
call_8096 = relay.TupleGetItem(func_5333_call(), 0)
output = call_8095
output2 = call_8096
func_8108 = relay.Function([], output)
mod['func_8108'] = func_8108
mod = relay.transform.InferType()(mod)
output = func_8108()
func_8109 = relay.Function([], output)
mutated_mod['func_8109'] = func_8109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5298_call = mod.get_global_var('func_5298')
func_5299_call = mutated_mod.get_global_var('func_5299')
call_8120 = relay.TupleGetItem(func_5298_call(), 2)
call_8121 = relay.TupleGetItem(func_5299_call(), 2)
func_2503_call = mod.get_global_var('func_2503')
func_2506_call = mutated_mod.get_global_var('func_2506')
var_8124 = relay.var("var_8124", dtype = "float64", shape = (135,))#candidate|8124|(135,)|var|float64
call_8123 = func_2503_call(relay.reshape(var_8124.astype('float64'), [3, 15, 3]))
call_8125 = func_2503_call(relay.reshape(var_8124.astype('float64'), [3, 15, 3]))
uop_8166 = relay.tan(call_8123.astype('float64')) # shape=(3, 15, 3)
uop_8168 = relay.tan(call_8125.astype('float64')) # shape=(3, 15, 3)
output = relay.Tuple([call_8120,var_8124,uop_8166,])
output2 = relay.Tuple([call_8121,var_8124,uop_8168,])
func_8171 = relay.Function([var_8124,], output)
mod['func_8171'] = func_8171
mod = relay.transform.InferType()(mod)
var_8172 = relay.var("var_8172", dtype = "float64", shape = (135,))#candidate|8172|(135,)|var|float64
output = func_8171(var_8172)
func_8173 = relay.Function([var_8172], output)
mutated_mod['func_8173'] = func_8173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7045_call = mod.get_global_var('func_7045')
func_7046_call = mutated_mod.get_global_var('func_7046')
call_8279 = relay.TupleGetItem(func_7045_call(), 0)
call_8280 = relay.TupleGetItem(func_7046_call(), 0)
output = relay.Tuple([call_8279,])
output2 = relay.Tuple([call_8280,])
func_8284 = relay.Function([], output)
mod['func_8284'] = func_8284
mod = relay.transform.InferType()(mod)
mutated_mod['func_8284'] = func_8284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8284_call = mutated_mod.get_global_var('func_8284')
call_8285 = func_8284_call()
output = call_8285
func_8286 = relay.Function([], output)
mutated_mod['func_8286'] = func_8286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4953_call = mod.get_global_var('func_4953')
func_4955_call = mutated_mod.get_global_var('func_4955')
call_8295 = relay.TupleGetItem(func_4953_call(), 0)
call_8296 = relay.TupleGetItem(func_4955_call(), 0)
func_7254_call = mod.get_global_var('func_7254')
func_7256_call = mutated_mod.get_global_var('func_7256')
call_8311 = relay.TupleGetItem(func_7254_call(), 0)
call_8312 = relay.TupleGetItem(func_7256_call(), 0)
func_5792_call = mod.get_global_var('func_5792')
func_5794_call = mutated_mod.get_global_var('func_5794')
call_8330 = func_5792_call()
call_8331 = func_5792_call()
func_2201_call = mod.get_global_var('func_2201')
func_2202_call = mutated_mod.get_global_var('func_2202')
call_8332 = relay.TupleGetItem(func_2201_call(), 0)
call_8333 = relay.TupleGetItem(func_2202_call(), 0)
func_2404_call = mod.get_global_var('func_2404')
func_2406_call = mutated_mod.get_global_var('func_2406')
call_8349 = relay.TupleGetItem(func_2404_call(), 1)
call_8350 = relay.TupleGetItem(func_2406_call(), 1)
output = relay.Tuple([call_8295,call_8311,call_8330,call_8332,call_8349,])
output2 = relay.Tuple([call_8296,call_8312,call_8331,call_8333,call_8350,])
func_8363 = relay.Function([], output)
mod['func_8363'] = func_8363
mod = relay.transform.InferType()(mod)
output = func_8363()
func_8364 = relay.Function([], output)
mutated_mod['func_8364'] = func_8364
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8403 = relay.const([[[9.433242,-6.362596,-2.708749,0.316288,-4.977098],[-4.598436,-1.769505,6.922215,-6.065716,-6.329865],[8.933546,5.516365,3.345023,1.455485,-7.556953],[7.937653,0.804327,4.505404,7.987631,-4.572265]],[[3.049664,-5.047512,9.386104,6.636627,8.975351],[-8.114998,-6.084472,-8.343858,1.239525,7.679744],[9.694615,-3.406955,-6.492112,-0.699110,-4.811596],[2.178933,-3.290087,4.229317,4.513884,4.192379]],[[-6.171391,7.203463,-7.274804,-3.754745,7.855271],[4.668092,7.246288,8.025434,5.902120,6.076131],[1.144111,6.164769,1.342891,9.207406,7.574726],[6.327860,-0.581881,3.344782,0.990967,-4.738196]],[[8.790362,4.713231,1.474813,-7.914508,-9.710323],[9.230183,-7.873452,3.402544,6.732357,5.196418],[-0.584351,8.561597,6.597567,7.928318,-9.783480],[-9.097967,6.860376,-1.695460,-9.121560,8.025427]],[[7.979519,-2.260082,7.219702,4.206375,-2.102849],[-9.256277,8.549628,8.219278,-4.055308,7.207461],[3.679194,-6.170393,0.588675,7.077012,3.499022],[9.063551,8.920273,-2.548908,5.367809,-6.652386]],[[-0.189197,-7.340982,-4.069357,9.205615,-9.530604],[4.156238,-4.961646,-8.330218,2.799083,8.141152],[-7.481795,6.854843,7.608135,3.143760,4.737181],[-6.133782,-9.159705,6.137289,3.678994,9.068888]],[[-3.766710,9.110192,-5.424595,-9.423822,8.939272],[-1.140471,-3.970799,-0.369873,0.128900,5.953428],[2.256650,7.193723,-9.250342,-3.507097,5.624659],[-5.641679,-3.740418,-9.022143,8.920960,-3.538029]],[[-2.945720,4.221637,-8.616969,-9.830042,7.434313],[-8.386928,-4.343981,-9.868866,7.197458,-2.597341],[-3.723494,-6.129435,-4.671370,6.102508,1.554014],[-9.747038,-3.415098,9.612704,2.646325,-6.073952]],[[6.594598,7.798282,-7.225143,-2.336801,-8.824924],[-4.484590,0.824352,-5.162715,2.104715,-6.827112],[7.868991,4.461807,-0.681448,3.351413,-8.224480],[-0.604412,-8.606063,0.065361,7.144094,-4.838162]],[[-7.427963,-1.318639,2.064089,3.861730,-1.813805],[-6.386752,0.327517,7.464411,-6.113929,8.161957],[-1.742748,-0.401077,-2.118151,-1.936575,1.903147],[9.418582,1.237874,-1.596090,-3.348813,-0.666481]],[[4.372208,9.537273,-1.696320,-5.011960,3.858417],[6.437887,4.223252,-6.411931,-5.028096,7.258304],[-2.860772,8.791895,-1.003834,-5.046253,-6.958355],[4.037921,5.003034,-3.498617,8.527048,-8.601554]],[[-6.619554,-0.158668,6.343136,9.444152,4.647357],[-5.953268,-3.470523,-0.027051,2.397650,0.564358],[9.932368,6.641532,0.850972,-7.058689,-9.633424],[7.511771,-5.800948,-8.080265,9.003153,1.173899]],[[-0.130059,-6.409406,-9.458765,8.877930,0.560763],[2.324915,5.567958,-1.560601,-5.381450,8.623211],[9.567312,8.786369,-0.460416,-4.138585,-8.988416],[6.824512,7.789058,9.072824,-7.554985,0.952964]],[[9.005013,-1.117116,7.530742,-7.193367,9.197223],[-9.041881,-2.790738,-4.903150,6.091545,-8.678318],[7.742971,-3.317335,8.065978,-3.039553,-5.852843],[-8.519136,-0.673684,-3.853085,1.833004,1.218844]],[[-2.729486,4.675161,5.313082,1.588787,-0.027952],[-9.716949,5.914126,-3.926362,-2.419237,-9.505721],[-1.086143,7.941163,3.993498,-2.459968,-0.301745],[4.023643,1.052481,2.128758,5.501448,6.614468]],[[8.363887,1.643737,-6.458291,1.436802,-4.981982],[3.991391,-4.075759,5.047740,-3.433530,-2.059080],[5.685860,3.086049,7.582831,8.732239,-5.615882],[-6.050992,6.264186,-1.295932,-5.666679,-8.156878]]], dtype = "float32")#candidate|8403|(16, 4, 5)|const|float32
var_8404 = relay.var("var_8404", dtype = "float32", shape = (16, 4, 5))#candidate|8404|(16, 4, 5)|var|float32
bop_8405 = relay.mod(const_8403.astype('float32'), relay.reshape(var_8404.astype('float32'), relay.shape_of(const_8403))) # shape=(16, 4, 5)
bop_8426 = relay.minimum(bop_8405.astype('int16'), relay.reshape(const_8403.astype('int16'), relay.shape_of(bop_8405))) # shape=(16, 4, 5)
output = relay.Tuple([bop_8426,])
output2 = relay.Tuple([bop_8426,])
func_8434 = relay.Function([var_8404,], output)
mod['func_8434'] = func_8434
mod = relay.transform.InferType()(mod)
var_8435 = relay.var("var_8435", dtype = "float32", shape = (16, 4, 5))#candidate|8435|(16, 4, 5)|var|float32
output = func_8434(var_8435)
func_8436 = relay.Function([var_8435], output)
mutated_mod['func_8436'] = func_8436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6550_call = mod.get_global_var('func_6550')
func_6551_call = mutated_mod.get_global_var('func_6551')
call_8440 = func_6550_call()
call_8441 = func_6550_call()
func_6220_call = mod.get_global_var('func_6220')
func_6221_call = mutated_mod.get_global_var('func_6221')
call_8442 = func_6220_call()
call_8443 = func_6220_call()
func_1640_call = mod.get_global_var('func_1640')
func_1642_call = mutated_mod.get_global_var('func_1642')
var_8447 = relay.var("var_8447", dtype = "float32", shape = (2160,))#candidate|8447|(2160,)|var|float32
call_8446 = relay.TupleGetItem(func_1640_call(relay.reshape(var_8447.astype('float32'), [2160,])), 5)
call_8448 = relay.TupleGetItem(func_1642_call(relay.reshape(var_8447.astype('float32'), [2160,])), 5)
output = relay.Tuple([call_8440,call_8442,call_8446,var_8447,])
output2 = relay.Tuple([call_8441,call_8443,call_8448,var_8447,])
func_8458 = relay.Function([var_8447,], output)
mod['func_8458'] = func_8458
mod = relay.transform.InferType()(mod)
var_8459 = relay.var("var_8459", dtype = "float32", shape = (2160,))#candidate|8459|(2160,)|var|float32
output = func_8458(var_8459)
func_8460 = relay.Function([var_8459], output)
mutated_mod['func_8460'] = func_8460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3247_call = mod.get_global_var('func_3247')
func_3249_call = mutated_mod.get_global_var('func_3249')
call_8478 = relay.TupleGetItem(func_3247_call(), 0)
call_8479 = relay.TupleGetItem(func_3249_call(), 0)
func_6362_call = mod.get_global_var('func_6362')
func_6364_call = mutated_mod.get_global_var('func_6364')
call_8480 = relay.TupleGetItem(func_6362_call(), 0)
call_8481 = relay.TupleGetItem(func_6364_call(), 0)
func_5043_call = mod.get_global_var('func_5043')
func_5044_call = mutated_mod.get_global_var('func_5044')
call_8494 = relay.TupleGetItem(func_5043_call(), 0)
call_8495 = relay.TupleGetItem(func_5044_call(), 0)
func_1845_call = mod.get_global_var('func_1845')
func_1848_call = mutated_mod.get_global_var('func_1848')
call_8499 = relay.TupleGetItem(func_1845_call(relay.reshape(call_8478.astype('float64'), [5, 104])), 1)
call_8500 = relay.TupleGetItem(func_1848_call(relay.reshape(call_8478.astype('float64'), [5, 104])), 1)
output = relay.Tuple([call_8478,call_8480,call_8494,call_8499,])
output2 = relay.Tuple([call_8479,call_8481,call_8495,call_8500,])
func_8506 = relay.Function([], output)
mod['func_8506'] = func_8506
mod = relay.transform.InferType()(mod)
mutated_mod['func_8506'] = func_8506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8506_call = mutated_mod.get_global_var('func_8506')
call_8507 = func_8506_call()
output = call_8507
func_8508 = relay.Function([], output)
mutated_mod['func_8508'] = func_8508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2626_call = mod.get_global_var('func_2626')
func_2627_call = mutated_mod.get_global_var('func_2627')
call_8535 = func_2626_call()
call_8536 = func_2626_call()
output = call_8535
output2 = call_8536
func_8554 = relay.Function([], output)
mod['func_8554'] = func_8554
mod = relay.transform.InferType()(mod)
output = func_8554()
func_8555 = relay.Function([], output)
mutated_mod['func_8555'] = func_8555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6569_call = mod.get_global_var('func_6569')
func_6570_call = mutated_mod.get_global_var('func_6570')
call_8559 = func_6569_call()
call_8560 = func_6569_call()
output = call_8559
output2 = call_8560
func_8567 = relay.Function([], output)
mod['func_8567'] = func_8567
mod = relay.transform.InferType()(mod)
mutated_mod['func_8567'] = func_8567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8567_call = mutated_mod.get_global_var('func_8567')
call_8568 = func_8567_call()
output = call_8568
func_8569 = relay.Function([], output)
mutated_mod['func_8569'] = func_8569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8284_call = mod.get_global_var('func_8284')
func_8286_call = mutated_mod.get_global_var('func_8286')
call_8664 = relay.TupleGetItem(func_8284_call(), 0)
call_8665 = relay.TupleGetItem(func_8286_call(), 0)
output = call_8664
output2 = call_8665
func_8673 = relay.Function([], output)
mod['func_8673'] = func_8673
mod = relay.transform.InferType()(mod)
mutated_mod['func_8673'] = func_8673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8673_call = mutated_mod.get_global_var('func_8673')
call_8674 = func_8673_call()
output = call_8674
func_8675 = relay.Function([], output)
mutated_mod['func_8675'] = func_8675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6086_call = mod.get_global_var('func_6086')
func_6087_call = mutated_mod.get_global_var('func_6087')
call_8681 = func_6086_call()
call_8682 = func_6086_call()
output = call_8681
output2 = call_8682
func_8688 = relay.Function([], output)
mod['func_8688'] = func_8688
mod = relay.transform.InferType()(mod)
output = func_8688()
func_8689 = relay.Function([], output)
mutated_mod['func_8689'] = func_8689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6362_call = mod.get_global_var('func_6362')
func_6364_call = mutated_mod.get_global_var('func_6364')
call_8695 = relay.TupleGetItem(func_6362_call(), 0)
call_8696 = relay.TupleGetItem(func_6364_call(), 0)
output = call_8695
output2 = call_8696
func_8703 = relay.Function([], output)
mod['func_8703'] = func_8703
mod = relay.transform.InferType()(mod)
mutated_mod['func_8703'] = func_8703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8703_call = mutated_mod.get_global_var('func_8703')
call_8704 = func_8703_call()
output = call_8704
func_8705 = relay.Function([], output)
mutated_mod['func_8705'] = func_8705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2415_call = mod.get_global_var('func_2415')
func_2417_call = mutated_mod.get_global_var('func_2417')
call_8748 = relay.TupleGetItem(func_2415_call(), 0)
call_8749 = relay.TupleGetItem(func_2417_call(), 0)
func_7554_call = mod.get_global_var('func_7554')
func_7556_call = mutated_mod.get_global_var('func_7556')
call_8761 = relay.TupleGetItem(func_7554_call(), 0)
call_8762 = relay.TupleGetItem(func_7556_call(), 0)
func_8688_call = mod.get_global_var('func_8688')
func_8689_call = mutated_mod.get_global_var('func_8689')
call_8784 = func_8688_call()
call_8785 = func_8688_call()
func_6086_call = mod.get_global_var('func_6086')
func_6087_call = mutated_mod.get_global_var('func_6087')
call_8787 = func_6086_call()
call_8788 = func_6086_call()
bop_8794 = relay.floor_divide(call_8784.astype('float32'), relay.reshape(call_8748.astype('float32'), relay.shape_of(call_8784))) # shape=(14, 14, 9)
bop_8797 = relay.floor_divide(call_8785.astype('float32'), relay.reshape(call_8749.astype('float32'), relay.shape_of(call_8785))) # shape=(14, 14, 9)
output = relay.Tuple([call_8761,call_8787,bop_8794,])
output2 = relay.Tuple([call_8762,call_8788,bop_8797,])
func_8811 = relay.Function([], output)
mod['func_8811'] = func_8811
mod = relay.transform.InferType()(mod)
mutated_mod['func_8811'] = func_8811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8811_call = mutated_mod.get_global_var('func_8811')
call_8812 = func_8811_call()
output = call_8812
func_8813 = relay.Function([], output)
mutated_mod['func_8813'] = func_8813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4168_call = mod.get_global_var('func_4168')
func_4170_call = mutated_mod.get_global_var('func_4170')
call_8860 = relay.TupleGetItem(func_4168_call(), 0)
call_8861 = relay.TupleGetItem(func_4170_call(), 0)
output = relay.Tuple([call_8860,])
output2 = relay.Tuple([call_8861,])
func_8867 = relay.Function([], output)
mod['func_8867'] = func_8867
mod = relay.transform.InferType()(mod)
mutated_mod['func_8867'] = func_8867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8867_call = mutated_mod.get_global_var('func_8867')
call_8868 = func_8867_call()
output = call_8868
func_8869 = relay.Function([], output)
mutated_mod['func_8869'] = func_8869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3379_call = mod.get_global_var('func_3379')
func_3381_call = mutated_mod.get_global_var('func_3381')
call_8933 = func_3379_call()
call_8934 = func_3379_call()
func_1293_call = mod.get_global_var('func_1293')
func_1296_call = mutated_mod.get_global_var('func_1296')
var_8938 = relay.var("var_8938", dtype = "uint32", shape = (8, 1))#candidate|8938|(8, 1)|var|uint32
const_8939 = relay.const([7,6,1,-4,-3,-6,4,-5,4,7,10,6,10,8,-10,7,-8,-7,-8,5,-3,-4,-9,-1,-7,-3,-2,4,7,-6,-10,2,-7,-9,9,-8,3,1,-1,4,-1,-2,-4,-4,10,-7,2,-10], dtype = "uint32")#candidate|8939|(48,)|const|uint32
call_8937 = relay.TupleGetItem(func_1293_call(relay.reshape(var_8938.astype('uint32'), [4, 2, 1]), relay.reshape(const_8939.astype('uint32'), [4, 2, 6]), ), 1)
call_8940 = relay.TupleGetItem(func_1296_call(relay.reshape(var_8938.astype('uint32'), [4, 2, 1]), relay.reshape(const_8939.astype('uint32'), [4, 2, 6]), ), 1)
output = relay.Tuple([call_8933,call_8937,var_8938,const_8939,])
output2 = relay.Tuple([call_8934,call_8940,var_8938,const_8939,])
func_8943 = relay.Function([var_8938,], output)
mod['func_8943'] = func_8943
mod = relay.transform.InferType()(mod)
mutated_mod['func_8943'] = func_8943
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8944 = relay.var("var_8944", dtype = "uint32", shape = (8, 1))#candidate|8944|(8, 1)|var|uint32
func_8943_call = mutated_mod.get_global_var('func_8943')
call_8945 = func_8943_call(var_8944)
output = call_8945
func_8946 = relay.Function([var_8944], output)
mutated_mod['func_8946'] = func_8946
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8962 = relay.var("var_8962", dtype = "uint16", shape = (7, 2, 2))#candidate|8962|(7, 2, 2)|var|uint16
var_8963 = relay.var("var_8963", dtype = "uint16", shape = (7, 2, 2))#candidate|8963|(7, 2, 2)|var|uint16
bop_8964 = relay.greater(var_8962.astype('bool'), relay.reshape(var_8963.astype('bool'), relay.shape_of(var_8962))) # shape=(7, 2, 2)
output = relay.Tuple([bop_8964,])
output2 = relay.Tuple([bop_8964,])
func_8970 = relay.Function([var_8962,var_8963,], output)
mod['func_8970'] = func_8970
mod = relay.transform.InferType()(mod)
mutated_mod['func_8970'] = func_8970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8970_call = mutated_mod.get_global_var('func_8970')
var_8972 = relay.var("var_8972", dtype = "uint16", shape = (7, 2, 2))#candidate|8972|(7, 2, 2)|var|uint16
var_8973 = relay.var("var_8973", dtype = "uint16", shape = (7, 2, 2))#candidate|8973|(7, 2, 2)|var|uint16
call_8971 = func_8970_call(var_8972,var_8973,)
output = call_8971
func_8974 = relay.Function([var_8972,var_8973,], output)
mutated_mod['func_8974'] = func_8974
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9000 = relay.var("var_9000", dtype = "float64", shape = ())#candidate|9000|()|var|float64
const_9001 = relay.const([[[-2.835213,9.733900,-6.733929,8.328598,-5.454396,-2.117649,5.846182,8.760293],[-1.883935,-2.610906,-4.114396,4.051913,-5.924445,7.686400,9.718892,7.358221],[0.802763,5.608794,1.774189,3.623530,9.754418,-6.603060,-8.033029,1.296430],[-5.998508,-5.415651,0.887011,-5.010140,-0.093241,-2.624092,-0.207199,4.784836],[-4.240348,-6.120208,4.798874,6.970278,3.286792,7.139161,-3.365431,-2.288012],[4.531428,9.468769,-1.326918,-9.075754,-0.700103,-3.632656,4.598573,-2.762591],[3.808958,3.810687,-0.780243,9.763630,-2.335402,-7.588124,-4.939548,1.720517],[8.067129,-3.657529,-1.379920,4.405599,5.550210,8.915245,9.671401,-4.372406],[-7.859198,-3.525332,-4.352024,-9.810191,-8.287714,2.821198,2.951968,-9.167366]],[[-6.512049,-1.991654,-1.432152,3.096138,-5.899284,-1.445978,-6.081465,-4.294062],[-8.120169,-9.759456,-9.921782,3.402041,0.900365,9.791007,2.759425,6.406856],[-7.747700,-4.202498,8.375361,-3.467253,-7.612273,-3.041695,5.765891,-2.162378],[4.018522,6.379862,4.152101,-8.451833,9.104762,-6.257382,-0.113892,-6.165717],[4.268663,5.680133,-5.867414,-3.891304,-9.794520,-1.878348,2.723003,1.057488],[4.500547,2.249633,7.523135,2.768245,0.379523,2.741495,9.663181,7.045604],[-4.396041,-1.468650,-3.034000,0.900678,4.256707,9.201992,-6.839839,1.407707],[9.657406,5.899194,-9.654019,6.141299,-4.304507,2.074797,5.080576,-5.706873],[0.416939,-6.051517,-6.791402,-5.335160,0.668984,-4.559624,-8.427867,5.908616]],[[-6.421074,-4.927062,1.617351,4.078249,-4.470817,-3.530540,7.601894,6.608909],[4.051110,-5.567354,-2.434735,6.409278,-9.577632,0.715352,3.715191,-5.036885],[7.930438,-0.861344,3.928941,-7.647728,7.610298,3.591201,-2.053756,0.952877],[-1.074001,5.678680,1.892226,1.420571,-3.457084,-1.840786,5.862682,-9.215159],[-9.577690,-8.969224,-3.323300,5.352350,0.479859,-9.453551,-7.093941,9.603625],[2.377618,0.313953,8.396524,9.787523,4.602528,3.621656,-6.701037,-2.995087],[-0.214671,-5.811585,6.724147,-5.829246,-1.221998,-0.003032,3.484730,-1.236884],[-6.942022,2.934811,-5.465457,-5.970041,-4.850909,-8.257013,0.984396,7.277910],[8.910229,-4.147783,-3.095983,9.001265,2.131306,4.029908,0.882148,1.014868]],[[1.515247,5.186262,0.047060,1.448421,8.964568,0.858371,-7.243641,2.424118],[-1.858354,3.479691,-0.372770,-0.724915,-8.906639,-6.180390,1.902628,-4.190525],[-0.942305,-5.130055,0.792747,-1.646241,2.061585,3.056770,-3.485710,-9.330686],[-5.207441,7.252222,-2.635743,-6.876234,3.797961,6.635185,-6.523549,3.182445],[5.297345,8.074684,-3.520751,-2.538654,4.373673,8.517761,-5.138751,-8.814116],[9.234796,6.255249,7.132537,4.154527,9.566004,0.772649,-2.512103,-4.084732],[-9.591732,-0.153642,2.791904,5.043108,-6.848130,7.549841,-8.431794,6.743107],[2.416997,8.046052,-6.134987,-8.797908,3.727836,3.497262,-0.236208,-2.409070],[4.395032,5.843439,2.676377,2.028652,-4.938804,-9.129695,8.656643,-6.035062]],[[-1.614525,5.806161,-7.853750,-8.205145,-0.115819,3.029236,-3.368440,6.553631],[-5.524152,-0.923645,6.388065,4.806097,-3.695112,-7.714206,9.420685,2.986082],[9.008756,-4.912697,-8.375151,8.293722,4.629055,6.596271,-7.810716,8.500440],[-0.618693,-4.949969,-3.628695,6.893171,9.731158,-5.339501,-8.694352,7.488931],[-2.897314,-3.900561,-6.294167,1.275873,-4.685435,7.615248,-2.259486,-7.786169],[6.370884,-3.920044,-0.277640,-8.189297,-5.862114,1.039206,-1.726936,-8.037213],[-6.984485,6.260885,-0.009775,-4.980276,-2.929845,-9.067956,8.770362,6.672195],[1.767026,-9.557231,1.968239,-1.002629,1.564818,-1.422372,-6.478816,-0.812748],[1.970465,6.522524,7.722556,5.571873,-6.076028,-7.028742,-3.182647,-0.403832]],[[0.722936,7.237604,2.565869,-0.040178,4.212406,6.254499,6.179009,8.008542],[8.277422,5.991441,-4.368809,-9.766209,-5.917688,-3.431141,-2.976107,-0.992204],[9.428155,-8.940629,8.453178,8.096243,-8.133647,-1.952710,9.283224,-8.016329],[2.036352,4.757540,-0.878529,-3.042414,-1.565062,6.408125,0.568295,-7.627741],[-6.258778,5.203115,-5.175125,-8.757064,6.341077,-7.699250,-4.820511,-5.652545],[-0.195020,-1.140714,2.068829,4.700411,2.695090,0.337351,3.706530,-0.360441],[-9.606179,5.229630,-9.921219,9.578398,7.351193,-5.199307,3.127835,5.065044],[-1.290619,-0.998733,-4.757721,3.520839,7.310172,-0.570647,2.416371,-9.254794],[-4.305218,-6.801009,7.716375,3.676267,0.293211,2.638997,-0.370963,9.525489]],[[-8.134970,-1.248757,4.396133,-8.498277,-8.317931,5.964961,1.607443,-2.502388],[-2.241878,4.331225,-0.304007,-9.324346,-3.924455,-4.781392,-2.388564,-6.838791],[-9.540750,4.351896,-7.049712,-8.471743,-2.316266,-4.116098,7.212912,7.466625],[2.557615,7.851380,0.703562,-2.422968,7.899378,-8.514853,-0.922640,-3.174921],[-9.031261,-3.705936,-4.696438,9.725452,5.656147,-0.974667,-1.146247,-7.047214],[-5.562039,-3.656980,7.098643,-9.019544,8.004164,-1.362276,5.717276,-1.720407],[-6.301052,-8.517904,7.897069,6.915025,-3.250260,3.833033,8.110407,-6.746875],[-3.355819,-9.425559,6.588721,-9.704851,7.857477,-1.261121,-6.994861,-5.670103],[-3.110596,7.456488,6.526915,-9.143767,-1.075590,-9.842859,2.543548,-1.329257]]], dtype = "float64")#candidate|9001|(7, 9, 8)|const|float64
bop_9002 = relay.floor_divide(var_9000.astype('float64'), const_9001.astype('float64')) # shape=(7, 9, 8)
func_7992_call = mod.get_global_var('func_7992')
func_7993_call = mutated_mod.get_global_var('func_7993')
call_9008 = relay.TupleGetItem(func_7992_call(), 0)
call_9009 = relay.TupleGetItem(func_7993_call(), 0)
output = relay.Tuple([bop_9002,call_9008,])
output2 = relay.Tuple([bop_9002,call_9009,])
func_9017 = relay.Function([var_9000,], output)
mod['func_9017'] = func_9017
mod = relay.transform.InferType()(mod)
mutated_mod['func_9017'] = func_9017
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9018 = relay.var("var_9018", dtype = "float64", shape = ())#candidate|9018|()|var|float64
func_9017_call = mutated_mod.get_global_var('func_9017')
call_9019 = func_9017_call(var_9018)
output = call_9019
func_9020 = relay.Function([var_9018], output)
mutated_mod['func_9020'] = func_9020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7104_call = mod.get_global_var('func_7104')
func_7105_call = mutated_mod.get_global_var('func_7105')
call_9037 = func_7104_call()
call_9038 = func_7104_call()
func_5331_call = mod.get_global_var('func_5331')
func_5333_call = mutated_mod.get_global_var('func_5333')
call_9075 = relay.TupleGetItem(func_5331_call(), 0)
call_9076 = relay.TupleGetItem(func_5333_call(), 0)
output = relay.Tuple([call_9037,call_9075,])
output2 = relay.Tuple([call_9038,call_9076,])
func_9079 = relay.Function([], output)
mod['func_9079'] = func_9079
mod = relay.transform.InferType()(mod)
output = func_9079()
func_9080 = relay.Function([], output)
mutated_mod['func_9080'] = func_9080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7554_call = mod.get_global_var('func_7554')
func_7556_call = mutated_mod.get_global_var('func_7556')
call_9150 = relay.TupleGetItem(func_7554_call(), 0)
call_9151 = relay.TupleGetItem(func_7556_call(), 0)
output = relay.Tuple([call_9150,])
output2 = relay.Tuple([call_9151,])
func_9166 = relay.Function([], output)
mod['func_9166'] = func_9166
mod = relay.transform.InferType()(mod)
output = func_9166()
func_9167 = relay.Function([], output)
mutated_mod['func_9167'] = func_9167
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9191 = relay.const([[[-6,6,-3,-5,-2,-5,10,-4,7,-10,-1,-7,8,1],[-10,3,-10,-6,-9,9,3,10,7,-6,-9,9,9,-2],[9,-10,-10,3,-4,-2,-9,8,5,5,2,-8,-10,-1],[-2,3,-4,-8,-7,-4,-1,8,9,4,-4,8,2,8],[-3,-10,-2,4,-7,-4,-7,-7,-7,10,9,-2,3,-8],[7,9,-5,-5,-4,-6,-5,-7,-1,3,-7,5,-5,8],[10,6,-4,-9,6,7,-7,2,5,4,-2,-5,-10,-5],[-9,4,1,-7,7,-3,2,-2,6,10,-3,-9,-1,-6],[-7,7,-5,5,1,2,-10,10,8,-2,7,-6,-6,5]],[[-1,10,3,-4,-10,-6,-1,-8,5,4,1,-6,7,9],[10,5,-7,9,-4,-10,-2,-5,7,5,-3,-5,-4,-3],[6,-6,-7,8,-6,4,2,4,10,-6,-5,1,1,-4],[-7,-7,10,7,-4,9,-4,4,7,-9,-7,6,-5,2],[10,-2,-3,-10,-4,-10,4,2,2,-3,4,-6,6,-5],[-8,8,2,-7,-2,-8,3,-5,-7,6,-3,-8,10,9],[7,-8,10,-5,9,7,-10,-6,-5,2,1,3,9,-2],[7,-7,-5,1,5,8,-9,-3,-2,-2,3,-8,1,8],[-3,1,2,-4,4,-2,3,-3,5,-9,-9,5,-4,6]]], dtype = "int16")#candidate|9191|(2, 9, 14)|const|int16
var_9192 = relay.var("var_9192", dtype = "int16", shape = (2, 9, 14))#candidate|9192|(2, 9, 14)|var|int16
bop_9193 = relay.equal(const_9191.astype('bool'), relay.reshape(var_9192.astype('bool'), relay.shape_of(const_9191))) # shape=(2, 9, 14)
func_6000_call = mod.get_global_var('func_6000')
func_6002_call = mutated_mod.get_global_var('func_6002')
call_9200 = relay.TupleGetItem(func_6000_call(), 0)
call_9201 = relay.TupleGetItem(func_6002_call(), 0)
const_9212 = relay.const([[[True,True,False,True,False,True,True,False,False,True,False,False,False,True],[True,False,True,False,False,False,True,False,False,True,True,False,True,False],[False,False,False,True,True,True,False,False,False,False,False,False,True,False],[False,False,True,True,False,False,True,True,False,False,True,False,True,False],[False,True,True,True,True,True,False,False,False,True,False,False,True,False],[False,False,False,False,False,True,True,True,True,False,False,True,False,True],[False,False,False,False,True,True,True,False,False,False,False,True,True,True],[True,False,True,False,False,False,False,True,True,False,False,True,False,False],[False,True,True,False,True,True,True,False,False,False,False,True,False,False]],[[False,True,True,True,True,True,True,False,True,False,True,False,False,True],[True,False,True,False,True,False,False,False,False,True,False,False,False,False],[True,False,True,True,False,False,True,True,True,False,True,False,False,False],[True,False,True,False,True,False,False,False,True,True,True,True,False,True],[True,False,False,True,True,True,False,True,True,True,False,True,False,False],[True,False,False,False,True,False,True,False,False,True,False,True,False,True],[False,True,True,False,True,True,True,False,False,True,True,True,True,False],[False,True,False,False,True,False,False,False,False,True,False,True,True,True],[False,True,False,True,False,True,True,False,False,False,False,False,True,False]]], dtype = "bool")#candidate|9212|(2, 9, 14)|const|bool
bop_9213 = relay.floor_divide(bop_9193.astype('float64'), relay.reshape(const_9212.astype('float64'), relay.shape_of(bop_9193))) # shape=(2, 9, 14)
bop_9222 = relay.bitwise_xor(bop_9213.astype('int64'), relay.reshape(const_9191.astype('int64'), relay.shape_of(bop_9213))) # shape=(2, 9, 14)
func_2775_call = mod.get_global_var('func_2775')
func_2776_call = mutated_mod.get_global_var('func_2776')
call_9226 = relay.TupleGetItem(func_2775_call(), 2)
call_9227 = relay.TupleGetItem(func_2776_call(), 2)
func_4140_call = mod.get_global_var('func_4140')
func_4143_call = mutated_mod.get_global_var('func_4143')
var_9230 = relay.var("var_9230", dtype = "bool", shape = (120,))#candidate|9230|(120,)|var|bool
call_9229 = relay.TupleGetItem(func_4140_call(relay.reshape(var_9230.astype('bool'), [8, 15, 1])), 2)
call_9231 = relay.TupleGetItem(func_4143_call(relay.reshape(var_9230.astype('bool'), [8, 15, 1])), 2)
uop_9232 = relay.sin(bop_9193.astype('float32')) # shape=(2, 9, 14)
bop_9237 = relay.bitwise_or(call_9200.astype('uint8'), relay.reshape(call_9226.astype('uint8'), relay.shape_of(call_9200))) # shape=(5, 104)
bop_9240 = relay.bitwise_or(call_9201.astype('uint8'), relay.reshape(call_9227.astype('uint8'), relay.shape_of(call_9201))) # shape=(5, 104)
func_5067_call = mod.get_global_var('func_5067')
func_5069_call = mutated_mod.get_global_var('func_5069')
call_9245 = relay.TupleGetItem(func_5067_call(), 0)
call_9246 = relay.TupleGetItem(func_5069_call(), 0)
uop_9267 = relay.cos(uop_9232.astype('float64')) # shape=(2, 9, 14)
output = relay.Tuple([bop_9222,call_9229,var_9230,bop_9237,call_9245,uop_9267,])
output2 = relay.Tuple([bop_9222,call_9231,var_9230,bop_9240,call_9246,uop_9267,])
func_9278 = relay.Function([var_9192,var_9230,], output)
mod['func_9278'] = func_9278
mod = relay.transform.InferType()(mod)
mutated_mod['func_9278'] = func_9278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9278_call = mutated_mod.get_global_var('func_9278')
var_9280 = relay.var("var_9280", dtype = "int16", shape = (2, 9, 14))#candidate|9280|(2, 9, 14)|var|int16
var_9281 = relay.var("var_9281", dtype = "bool", shape = (120,))#candidate|9281|(120,)|var|bool
call_9279 = func_9278_call(var_9280,var_9281,)
output = call_9279
func_9282 = relay.Function([var_9280,var_9281,], output)
mutated_mod['func_9282'] = func_9282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7104_call = mod.get_global_var('func_7104')
func_7105_call = mutated_mod.get_global_var('func_7105')
call_9289 = func_7104_call()
call_9290 = func_7104_call()
func_7069_call = mod.get_global_var('func_7069')
func_7070_call = mutated_mod.get_global_var('func_7070')
call_9293 = relay.TupleGetItem(func_7069_call(), 2)
call_9294 = relay.TupleGetItem(func_7070_call(), 2)
output = relay.Tuple([call_9289,call_9293,])
output2 = relay.Tuple([call_9290,call_9294,])
func_9297 = relay.Function([], output)
mod['func_9297'] = func_9297
mod = relay.transform.InferType()(mod)
mutated_mod['func_9297'] = func_9297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9297_call = mutated_mod.get_global_var('func_9297')
call_9298 = func_9297_call()
output = call_9298
func_9299 = relay.Function([], output)
mutated_mod['func_9299'] = func_9299
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9331 = relay.var("var_9331", dtype = "float64", shape = (9, 11, 11))#candidate|9331|(9, 11, 11)|var|float64
uop_9332 = relay.exp(var_9331.astype('float64')) # shape=(9, 11, 11)
func_1293_call = mod.get_global_var('func_1293')
func_1296_call = mutated_mod.get_global_var('func_1296')
var_9341 = relay.var("var_9341", dtype = "uint32", shape = (8,))#candidate|9341|(8,)|var|uint32
var_9342 = relay.var("var_9342", dtype = "uint32", shape = (48,))#candidate|9342|(48,)|var|uint32
call_9340 = relay.TupleGetItem(func_1293_call(relay.reshape(var_9341.astype('uint32'), [4, 2, 1]), relay.reshape(var_9342.astype('uint32'), [4, 2, 6]), ), 3)
call_9343 = relay.TupleGetItem(func_1296_call(relay.reshape(var_9341.astype('uint32'), [4, 2, 1]), relay.reshape(var_9342.astype('uint32'), [4, 2, 6]), ), 3)
func_1802_call = mod.get_global_var('func_1802')
func_1805_call = mutated_mod.get_global_var('func_1805')
var_9346 = relay.var("var_9346", dtype = "bool", shape = (36,))#candidate|9346|(36,)|var|bool
call_9345 = relay.TupleGetItem(func_1802_call(relay.reshape(var_9346.astype('bool'), [36,])), 3)
call_9347 = relay.TupleGetItem(func_1805_call(relay.reshape(var_9346.astype('bool'), [36,])), 3)
output = relay.Tuple([uop_9332,call_9340,var_9341,var_9342,call_9345,var_9346,])
output2 = relay.Tuple([uop_9332,call_9343,var_9341,var_9342,call_9347,var_9346,])
func_9356 = relay.Function([var_9331,var_9341,var_9342,var_9346,], output)
mod['func_9356'] = func_9356
mod = relay.transform.InferType()(mod)
var_9357 = relay.var("var_9357", dtype = "float64", shape = (9, 11, 11))#candidate|9357|(9, 11, 11)|var|float64
var_9358 = relay.var("var_9358", dtype = "uint32", shape = (8,))#candidate|9358|(8,)|var|uint32
var_9359 = relay.var("var_9359", dtype = "uint32", shape = (48,))#candidate|9359|(48,)|var|uint32
var_9360 = relay.var("var_9360", dtype = "bool", shape = (36,))#candidate|9360|(36,)|var|bool
output = func_9356(var_9357,var_9358,var_9359,var_9360,)
func_9361 = relay.Function([var_9357,var_9358,var_9359,var_9360,], output)
mutated_mod['func_9361'] = func_9361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2904_call = mod.get_global_var('func_2904')
func_2905_call = mutated_mod.get_global_var('func_2905')
call_9382 = relay.TupleGetItem(func_2904_call(), 0)
call_9383 = relay.TupleGetItem(func_2905_call(), 0)
func_1802_call = mod.get_global_var('func_1802')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_9390 = relay.TupleGetItem(func_1802_call(relay.reshape(call_9382.astype('bool'), [36,])), 2)
call_9391 = relay.TupleGetItem(func_1805_call(relay.reshape(call_9382.astype('bool'), [36,])), 2)
func_8688_call = mod.get_global_var('func_8688')
func_8689_call = mutated_mod.get_global_var('func_8689')
call_9396 = func_8688_call()
call_9397 = func_8688_call()
output = relay.Tuple([call_9382,call_9390,call_9396,])
output2 = relay.Tuple([call_9383,call_9391,call_9397,])
func_9401 = relay.Function([], output)
mod['func_9401'] = func_9401
mod = relay.transform.InferType()(mod)
mutated_mod['func_9401'] = func_9401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9401_call = mutated_mod.get_global_var('func_9401')
call_9402 = func_9401_call()
output = call_9402
func_9403 = relay.Function([], output)
mutated_mod['func_9403'] = func_9403
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9501 = relay.var("var_9501", dtype = "float32", shape = (1, 4, 4))#candidate|9501|(1, 4, 4)|var|float32
var_9502 = relay.var("var_9502", dtype = "float32", shape = (1, 4, 4))#candidate|9502|(1, 4, 4)|var|float32
bop_9503 = relay.equal(var_9501.astype('bool'), relay.reshape(var_9502.astype('bool'), relay.shape_of(var_9501))) # shape=(1, 4, 4)
func_9401_call = mod.get_global_var('func_9401')
func_9403_call = mutated_mod.get_global_var('func_9403')
call_9510 = relay.TupleGetItem(func_9401_call(), 2)
call_9511 = relay.TupleGetItem(func_9403_call(), 2)
func_2231_call = mod.get_global_var('func_2231')
func_2233_call = mutated_mod.get_global_var('func_2233')
call_9527 = func_2231_call(relay.reshape(call_9510.astype('float64'), [14, 14, 9]))
call_9528 = func_2231_call(relay.reshape(call_9510.astype('float64'), [14, 14, 9]))
output = relay.Tuple([bop_9503,call_9510,call_9527,])
output2 = relay.Tuple([bop_9503,call_9511,call_9528,])
func_9529 = relay.Function([var_9501,var_9502,], output)
mod['func_9529'] = func_9529
mod = relay.transform.InferType()(mod)
var_9530 = relay.var("var_9530", dtype = "float32", shape = (1, 4, 4))#candidate|9530|(1, 4, 4)|var|float32
var_9531 = relay.var("var_9531", dtype = "float32", shape = (1, 4, 4))#candidate|9531|(1, 4, 4)|var|float32
output = func_9529(var_9530,var_9531,)
func_9532 = relay.Function([var_9530,var_9531,], output)
mutated_mod['func_9532'] = func_9532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2775_call = mod.get_global_var('func_2775')
func_2776_call = mutated_mod.get_global_var('func_2776')
call_9537 = relay.TupleGetItem(func_2775_call(), 1)
call_9538 = relay.TupleGetItem(func_2776_call(), 1)
func_9401_call = mod.get_global_var('func_9401')
func_9403_call = mutated_mod.get_global_var('func_9403')
call_9549 = relay.TupleGetItem(func_9401_call(), 1)
call_9550 = relay.TupleGetItem(func_9403_call(), 1)
output = relay.Tuple([call_9537,call_9549,])
output2 = relay.Tuple([call_9538,call_9550,])
func_9560 = relay.Function([], output)
mod['func_9560'] = func_9560
mod = relay.transform.InferType()(mod)
output = func_9560()
func_9561 = relay.Function([], output)
mutated_mod['func_9561'] = func_9561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1952_call = mod.get_global_var('func_1952')
func_1953_call = mutated_mod.get_global_var('func_1953')
call_9580 = relay.TupleGetItem(func_1952_call(), 0)
call_9581 = relay.TupleGetItem(func_1953_call(), 0)
func_3071_call = mod.get_global_var('func_3071')
func_3072_call = mutated_mod.get_global_var('func_3072')
call_9582 = relay.TupleGetItem(func_3071_call(), 0)
call_9583 = relay.TupleGetItem(func_3072_call(), 0)
output = relay.Tuple([call_9580,call_9582,])
output2 = relay.Tuple([call_9581,call_9583,])
func_9589 = relay.Function([], output)
mod['func_9589'] = func_9589
mod = relay.transform.InferType()(mod)
output = func_9589()
func_9590 = relay.Function([], output)
mutated_mod['func_9590'] = func_9590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4953_call = mod.get_global_var('func_4953')
func_4955_call = mutated_mod.get_global_var('func_4955')
call_9597 = relay.TupleGetItem(func_4953_call(), 0)
call_9598 = relay.TupleGetItem(func_4955_call(), 0)
func_6220_call = mod.get_global_var('func_6220')
func_6221_call = mutated_mod.get_global_var('func_6221')
call_9599 = func_6220_call()
call_9600 = func_6220_call()
var_9623 = relay.var("var_9623", dtype = "uint64", shape = (5, 104))#candidate|9623|(5, 104)|var|uint64
bop_9624 = relay.left_shift(call_9599.astype('int64'), relay.reshape(var_9623.astype('int64'), relay.shape_of(call_9599))) # shape=(5, 104)
bop_9627 = relay.left_shift(call_9600.astype('int64'), relay.reshape(var_9623.astype('int64'), relay.shape_of(call_9600))) # shape=(5, 104)
output = relay.Tuple([call_9597,bop_9624,])
output2 = relay.Tuple([call_9598,bop_9627,])
func_9641 = relay.Function([var_9623,], output)
mod['func_9641'] = func_9641
mod = relay.transform.InferType()(mod)
var_9642 = relay.var("var_9642", dtype = "uint64", shape = (5, 104))#candidate|9642|(5, 104)|var|uint64
output = func_9641(var_9642)
func_9643 = relay.Function([var_9642], output)
mutated_mod['func_9643'] = func_9643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5236_call = mod.get_global_var('func_5236')
func_5238_call = mutated_mod.get_global_var('func_5238')
call_9653 = relay.TupleGetItem(func_5236_call(), 3)
call_9654 = relay.TupleGetItem(func_5238_call(), 3)
func_8867_call = mod.get_global_var('func_8867')
func_8869_call = mutated_mod.get_global_var('func_8869')
call_9656 = relay.TupleGetItem(func_8867_call(), 0)
call_9657 = relay.TupleGetItem(func_8869_call(), 0)
output = relay.Tuple([call_9653,call_9656,])
output2 = relay.Tuple([call_9654,call_9657,])
func_9659 = relay.Function([], output)
mod['func_9659'] = func_9659
mod = relay.transform.InferType()(mod)
mutated_mod['func_9659'] = func_9659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9659_call = mutated_mod.get_global_var('func_9659')
call_9660 = func_9659_call()
output = call_9660
func_9661 = relay.Function([], output)
mutated_mod['func_9661'] = func_9661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6540_call = mod.get_global_var('func_6540')
func_6541_call = mutated_mod.get_global_var('func_6541')
call_9668 = relay.TupleGetItem(func_6540_call(), 2)
call_9669 = relay.TupleGetItem(func_6541_call(), 2)
func_6161_call = mod.get_global_var('func_6161')
func_6163_call = mutated_mod.get_global_var('func_6163')
const_9673 = relay.const([8.734601,-6.376681,-7.576437,-4.369097,-3.289931,-3.403473,-9.909711,5.108190,0.177859,8.476564,8.740367,4.590155,-1.285347,4.405155,4.106040,6.049925,0.588110,6.678314,-3.083867,1.729252,6.832663,-8.928300,-7.007502,6.390072,-3.247821,-6.024378,-0.182694,-9.128117,-6.511291,-9.577696,8.943988,-0.580865,5.362269,-3.795492,-3.236655,-5.423655,7.151036,1.389001,-8.550200,1.988383,-6.506465,-1.466070,-0.411064,3.172432,-7.282576,-8.179282,-0.938109,-6.668080,4.952046,3.237886,-2.907910,6.572970,3.573663,-4.983509,-6.088499,-0.608444,1.090068,5.809317,3.825483,-5.770732,-5.842477,2.915428,7.919611,-8.249925,-8.824333,-8.292594,9.424976,5.531911,0.319732,-9.262785,0.689074,-9.383640,6.790108,-1.751504,-7.046239,-5.212236,-6.677282,8.958585,9.411004,-1.789702,-5.675136,2.092965,-5.310349,-9.587929,-4.364110,4.895519,5.409505,-9.856584,0.364920,-7.372080,4.762296,-9.937299,-1.480049,7.829922,3.019267,-8.822968,0.909873,6.075394,-0.727728,7.257804,-8.046875,-2.292031,-5.880408,-7.192212,-8.585296,2.817171,9.758105,2.333114,-8.920999,-6.293326,-1.435538,8.280070,-5.997966,4.674942,-4.944024,0.558093,-2.926661,-7.731760,-7.213352,-3.551580,6.426257,-2.714268,-6.269354,6.018135,-9.745334,-1.799386,-7.492003,-5.339490,7.074294,6.366010,-7.950682,-9.445545,-0.492946,3.938117,-9.069640,7.925535,-9.123364,-3.319308,0.124221,5.325616,0.773990,-7.123408,0.379526,-2.153746,0.801655,-2.355036,-6.337558,-3.013438,2.460054,5.394387,1.603455,-7.561362,-7.250465,-7.017006,-9.064942,-7.271895,-4.406587,2.474077,2.550438,-6.613231,9.695893,0.464087,4.216640,-2.157788,5.054811,-9.152142,8.266793,-6.736166,-9.206010,3.421559,-0.762131,-8.919304,8.720955,-4.869412,-3.364188,5.936372,0.613517,3.267195,-0.813961,-8.934939,-4.935922,-5.790436,1.073625,5.902794,-3.827112,-6.248957,-7.402802,1.505946,-3.294195,0.269938,-9.474774,-2.720941,6.188303,-5.626669,1.995771,3.036399,-8.395942,2.608433,0.030139,9.618296,-9.587598,-4.278243,-4.764666,-5.938755,-0.306655,3.102677,-9.644851,-4.401807,-4.655305,8.618653,6.315597,4.226692,-6.092019,0.721109,9.048590,9.039566,-5.474844,3.921921,1.273278,8.693534,4.705661,-7.778417,-5.199204,0.258318,-4.578073,2.816277,6.496038,0.587476,9.736191,7.950744,5.396461,-7.750117,3.081851,-4.289147,0.798428,-8.309932,8.133626,-1.128180,4.378631,-8.056031,-6.181323,-1.597333,-3.954154,-1.017646,-2.661182,-3.028230,-0.107883,-6.404823,-9.483298,2.159477,-8.753536,-8.302566,-3.122550,-5.086297,-0.058947,3.199999,-5.432516,0.322580,7.248733,-9.717732,6.797810,8.077629,-4.479329,0.940762,2.074546,-0.678444,-8.493946,9.429148,-0.224375,6.385797,-8.655732,5.314120,-8.041034,1.026162,-1.745621,0.157439,-3.187544,-5.873775,-3.275532,-4.190296,-8.978044,-9.689121,6.982281,0.632674,7.157518,4.813080,-0.824963,-0.819783,2.797518,-0.814814,5.067294,5.268678,9.758930,-8.263019,-4.409952,6.958325,-8.868552,4.773793,9.627530,3.446703,6.174554,-4.773576,5.364222,-5.588328,-8.731242,4.980547,9.623479,8.721956,-3.624732,-1.714864,-9.934557,0.870784,7.422596,9.663061,9.914285,0.317833,7.693020,-6.587849,-8.199860,5.330711,-0.714501,7.503958,1.556224,-8.608734,-1.370272,-9.465208,-9.227877,0.541142,0.693717,-4.656411,8.108330,6.729299,7.007347,-8.366320,3.935287,-1.992525,-2.174336,9.184417,-1.040256,9.522106,-7.632181,-0.945342,5.684754,1.078017,-4.980231,3.357758,5.533933,-7.841553,2.006355,6.298578,-9.684761,-8.439928,9.781222,-1.711905,9.667896,-8.317239,-6.686218,-8.502958,1.103723,-9.308706,6.219225,9.131487,-4.961115,3.252290,-4.680409,-3.168756,-9.531506,3.299606,-6.316545,9.503745,2.436140,-6.079670,-6.026405,9.122569,-7.901413,6.030865,-3.416718,-8.802133,-1.099127,-4.528922,-3.080451,2.611248,0.747298,-2.827791,8.985682,3.556796,-3.853739,-4.067968,-2.237112,-8.402229,3.489604,-4.530830,-7.203170,-0.091512,-4.993964,-9.916784,-3.433711,7.109090,-0.417867,4.010455,3.008005,6.762088,-3.701879,5.771334,4.940084,6.275791,8.999379,-2.689840,4.641106,2.784727,0.873005,-3.394167,8.104089,5.815376,-3.952443,7.741182,3.557405,2.619797,-3.683385,-2.613242,-4.203773,-2.131594,1.383044,8.215378,-0.335249,-8.767095,-6.517548,4.486078,-3.022065,-8.605775,6.714383,4.291633,-5.817921,8.842909,0.146253,-3.442593,1.115108,9.809053,-0.971539,6.334299,6.742157,-2.601344,3.196645,-8.697296,7.537700,-2.237600,-0.386275,0.012618,-7.617775,-1.463810,4.922958,3.259479,4.670268,2.512866,5.866945,-5.801973,2.719593,6.455985,-0.109574,-5.819396,-7.255211,1.298935,-9.258907,9.652441,9.555234,-9.354817,-0.095197,6.739197,0.512508,5.124222,-1.644014,4.281423,2.279543,-3.566968,-5.166039,7.767115,8.220949,-5.119194,8.605153,-6.136031,3.667996,2.442786,-2.517196,1.285101,-0.547009,-3.838627,4.693629,-7.847722,-4.622223,-1.511527,1.285795,7.303285,-8.048733,4.452695,9.245527,-6.930364,-9.379295,1.944392,3.671738,-8.929207,8.759816,-9.309331,0.070366,6.617046,0.206645,-0.606784,8.392865,4.229192,5.331259,-7.614341,-5.348992,4.211055,-1.195874,4.623088,-9.375349,7.133468,-4.568833,-8.856789,-8.512628,-8.325449], dtype = "float32")#candidate|9673|(520,)|const|float32
call_9672 = relay.TupleGetItem(func_6161_call(relay.reshape(const_9673.astype('float32'), [13, 5, 8])), 0)
call_9674 = relay.TupleGetItem(func_6163_call(relay.reshape(const_9673.astype('float32'), [13, 5, 8])), 0)
func_46_call = mod.get_global_var('func_46')
func_48_call = mutated_mod.get_global_var('func_48')
var_9684 = relay.var("var_9684", dtype = "float32", shape = (60,))#candidate|9684|(60,)|var|float32
call_9683 = relay.TupleGetItem(func_46_call(relay.reshape(var_9684.astype('float32'), [6, 10, 1])), 0)
call_9685 = relay.TupleGetItem(func_48_call(relay.reshape(var_9684.astype('float32'), [6, 10, 1])), 0)
func_1908_call = mod.get_global_var('func_1908')
func_1909_call = mutated_mod.get_global_var('func_1909')
call_9687 = relay.TupleGetItem(func_1908_call(), 1)
call_9688 = relay.TupleGetItem(func_1909_call(), 1)
func_9560_call = mod.get_global_var('func_9560')
func_9561_call = mutated_mod.get_global_var('func_9561')
call_9695 = relay.TupleGetItem(func_9560_call(), 0)
call_9696 = relay.TupleGetItem(func_9561_call(), 0)
bop_9701 = relay.greater_equal(call_9672.astype('bool'), call_9683.astype('bool')) # shape=(6, 10, 135)
bop_9704 = relay.greater_equal(call_9674.astype('bool'), call_9685.astype('bool')) # shape=(6, 10, 135)
func_8434_call = mod.get_global_var('func_8434')
func_8436_call = mutated_mod.get_global_var('func_8436')
const_9712 = relay.const([9.453629,-3.160601,7.912249,-7.912979,-5.376945,-5.187012,-3.458602,-5.031965,7.345611,5.786510,4.166682,-6.119284,-8.145449,0.729202,-4.363558,3.567776,0.934231,0.441702,-6.506882,-5.450253,-7.582725,-7.834906,8.602802,-6.989579,-2.571390,1.517296,-1.500027,-2.567427,2.453323,-1.226899,-5.353474,1.588047,2.559650,-0.575785,3.046725,1.200921,-1.238826,-7.549042,-9.165109,-5.529095,0.794201,-8.197603,7.710239,-4.389600,-3.119668,1.314693,-8.429927,-2.382299,7.717013,5.816350,-7.943810,5.225834,0.369604,-6.812980,-0.198825,-0.912727,-8.105175,1.117358,9.701410,9.811224,-8.843097,-0.117726,3.514947,-1.902483,-0.796503,1.708921,-9.463982,7.453156,6.464345,-1.904822,-5.123325,0.276706,7.747079,3.340412,-7.499467,6.729185,0.618622,0.091857,-2.278180,8.168901,4.724580,0.305854,8.580166,3.145659,-0.982771,-1.636028,-8.850109,-7.602273,-3.264996,-2.022954,-9.964698,5.597948,-3.471366,-6.726359,0.934944,2.547449,0.724414,-1.515400,4.801587,2.182266,9.362024,-2.588277,8.839929,-8.146466,-9.967075,-4.771223,-9.335286,-2.886071,-0.117145,5.951732,8.562287,-4.586259,-8.650169,2.695935,8.171503,6.588732,2.097155,-7.358933,-3.142038,-1.425348,-3.970524,0.299269,0.398220,2.675390,3.808512,9.050303,2.305544,0.550622,-6.765799,6.080195,3.759146,6.553375,-6.081227,0.537038,-2.359790,-7.672775,-9.321492,3.361902,5.856106,1.903722,6.148470,1.143271,-8.352870,-4.271657,-2.791903,-6.866081,7.453800,-2.163045,-2.022735,-2.935226,3.489591,9.858260,8.540592,1.998852,8.486998,5.056521,3.454814,7.932773,5.042964,3.725664,3.424754,2.699956,2.081749,-7.368923,9.186837,-8.608150,5.883435,-3.973796,-6.554213,-9.408609,-9.976387,-8.850092,-8.836549,0.370049,-9.635626,2.957861,1.789605,-2.630106,-7.994570,-9.655463,9.743504,2.945557,-6.783221,4.462978,6.662578,-4.443461,3.023135,-1.551399,-8.298275,7.041198,-7.045685,-5.134737,4.558435,-4.068992,0.170784,1.040284,6.877339,-7.001951,-0.606538,-4.185923,0.591853,3.195186,4.713282,-0.456332,-1.129290,-7.916871,9.097634,-5.019340,3.354508,-0.296344,1.588785,-2.222726,-6.108453,-7.282088,-1.327228,9.862107,3.067217,8.449558,-4.586784,-8.921773,0.060028,5.213010,3.733631,-8.934574,-9.204999,6.893045,-4.754909,-0.591104,-0.273746,-7.663246,0.147792,-1.071719,-8.096524,6.272214,-1.484739,7.764804,5.874277,-4.822368,-8.067755,7.599609,1.114855,-6.715497,-5.778316,7.657048,9.791849,-4.038034,8.806022,3.322924,-6.536129,-2.512583,-0.401272,-2.827880,-0.158059,-9.828439,4.300191,5.817819,7.228543,8.402051,-7.230765,-6.413849,-0.012421,-7.468144,-6.312707,1.978236,-5.821554,0.315439,-6.837437,-2.729736,-4.109504,0.490627,4.563508,-4.318039,7.919221,-5.441137,-8.261539,9.546119,1.469763,-0.648033,-1.842298,-2.378669,3.401613,1.316314,-1.590305,-9.213464,7.634971,-0.304575,-4.916272,8.503636,-9.502406,4.436616,-1.513619,8.936074,-5.641276,6.733256,-4.276650,-6.368471,5.094688,4.845826,9.324357,-4.172102,1.835249,7.686117,-9.577135,5.866556,7.513042,2.401251,-5.148379,0.763801,5.226093,4.158759,4.758620,6.903160,8.271816,-8.694828,0.939620,1.305406,5.030889,-7.008479,3.053036,9.119453], dtype = "float32")#candidate|9712|(320,)|const|float32
call_9711 = relay.TupleGetItem(func_8434_call(relay.reshape(const_9712.astype('float32'), [16, 4, 5])), 0)
call_9713 = relay.TupleGetItem(func_8436_call(relay.reshape(const_9712.astype('float32'), [16, 4, 5])), 0)
output = relay.Tuple([call_9668,const_9673,var_9684,call_9687,call_9695,bop_9701,call_9711,const_9712,])
output2 = relay.Tuple([call_9669,const_9673,var_9684,call_9688,call_9696,bop_9704,call_9713,const_9712,])
func_9727 = relay.Function([var_9684,], output)
mod['func_9727'] = func_9727
mod = relay.transform.InferType()(mod)
mutated_mod['func_9727'] = func_9727
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9728 = relay.var("var_9728", dtype = "float32", shape = (60,))#candidate|9728|(60,)|var|float32
func_9727_call = mutated_mod.get_global_var('func_9727')
call_9729 = func_9727_call(var_9728)
output = call_9729
func_9730 = relay.Function([var_9728], output)
mutated_mod['func_9730'] = func_9730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3658_call = mod.get_global_var('func_3658')
func_3660_call = mutated_mod.get_global_var('func_3660')
call_9779 = func_3658_call()
call_9780 = func_3658_call()
func_7450_call = mod.get_global_var('func_7450')
func_7453_call = mutated_mod.get_global_var('func_7453')
var_9801 = relay.var("var_9801", dtype = "float32", shape = (60,))#candidate|9801|(60,)|var|float32
call_9800 = relay.TupleGetItem(func_7450_call(relay.reshape(var_9801.astype('float32'), [60,])), 0)
call_9802 = relay.TupleGetItem(func_7453_call(relay.reshape(var_9801.astype('float32'), [60,])), 0)
output = relay.Tuple([call_9779,call_9800,var_9801,])
output2 = relay.Tuple([call_9780,call_9802,var_9801,])
func_9805 = relay.Function([var_9801,], output)
mod['func_9805'] = func_9805
mod = relay.transform.InferType()(mod)
mutated_mod['func_9805'] = func_9805
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9806 = relay.var("var_9806", dtype = "float32", shape = (60,))#candidate|9806|(60,)|var|float32
func_9805_call = mutated_mod.get_global_var('func_9805')
call_9807 = func_9805_call(var_9806)
output = call_9807
func_9808 = relay.Function([var_9806], output)
mutated_mod['func_9808'] = func_9808
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9851 = relay.var("var_9851", dtype = "float32", shape = (4, 1, 12))#candidate|9851|(4, 1, 12)|var|float32
uop_9852 = relay.sinh(var_9851.astype('float32')) # shape=(4, 1, 12)
var_9854 = relay.var("var_9854", dtype = "float32", shape = (4, 14, 12))#candidate|9854|(4, 14, 12)|var|float32
bop_9855 = relay.maximum(var_9851.astype('uint16'), var_9854.astype('uint16')) # shape=(4, 14, 12)
output = relay.Tuple([uop_9852,bop_9855,])
output2 = relay.Tuple([uop_9852,bop_9855,])
func_9858 = relay.Function([var_9851,var_9854,], output)
mod['func_9858'] = func_9858
mod = relay.transform.InferType()(mod)
var_9859 = relay.var("var_9859", dtype = "float32", shape = (4, 1, 12))#candidate|9859|(4, 1, 12)|var|float32
var_9860 = relay.var("var_9860", dtype = "float32", shape = (4, 14, 12))#candidate|9860|(4, 14, 12)|var|float32
output = func_9858(var_9859,var_9860,)
func_9861 = relay.Function([var_9859,var_9860,], output)
mutated_mod['func_9861'] = func_9861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5043_call = mod.get_global_var('func_5043')
func_5044_call = mutated_mod.get_global_var('func_5044')
call_9866 = relay.TupleGetItem(func_5043_call(), 0)
call_9867 = relay.TupleGetItem(func_5044_call(), 0)
output = call_9866
output2 = call_9867
func_9884 = relay.Function([], output)
mod['func_9884'] = func_9884
mod = relay.transform.InferType()(mod)
mutated_mod['func_9884'] = func_9884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9884_call = mutated_mod.get_global_var('func_9884')
call_9885 = func_9884_call()
output = call_9885
func_9886 = relay.Function([], output)
mutated_mod['func_9886'] = func_9886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2775_call = mod.get_global_var('func_2775')
func_2776_call = mutated_mod.get_global_var('func_2776')
call_9900 = relay.TupleGetItem(func_2775_call(), 0)
call_9901 = relay.TupleGetItem(func_2776_call(), 0)
output = relay.Tuple([call_9900,])
output2 = relay.Tuple([call_9901,])
func_9925 = relay.Function([], output)
mod['func_9925'] = func_9925
mod = relay.transform.InferType()(mod)
output = func_9925()
func_9926 = relay.Function([], output)
mutated_mod['func_9926'] = func_9926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8554_call = mod.get_global_var('func_8554')
func_8555_call = mutated_mod.get_global_var('func_8555')
call_9946 = func_8554_call()
call_9947 = func_8554_call()
output = relay.Tuple([call_9946,])
output2 = relay.Tuple([call_9947,])
func_9960 = relay.Function([], output)
mod['func_9960'] = func_9960
mod = relay.transform.InferType()(mod)
mutated_mod['func_9960'] = func_9960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9960_call = mutated_mod.get_global_var('func_9960')
call_9961 = func_9960_call()
output = call_9961
func_9962 = relay.Function([], output)
mutated_mod['func_9962'] = func_9962
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9988 = relay.var("var_9988", dtype = "float32", shape = (15, 15, 4))#candidate|9988|(15, 15, 4)|var|float32
uop_9989 = relay.log2(var_9988.astype('float32')) # shape=(15, 15, 4)
uop_9995 = relay.erf(uop_9989.astype('float32')) # shape=(15, 15, 4)
output = relay.Tuple([uop_9995,])
output2 = relay.Tuple([uop_9995,])
func_10002 = relay.Function([var_9988,], output)
mod['func_10002'] = func_10002
mod = relay.transform.InferType()(mod)
var_10003 = relay.var("var_10003", dtype = "float32", shape = (15, 15, 4))#candidate|10003|(15, 15, 4)|var|float32
output = func_10002(var_10003)
func_10004 = relay.Function([var_10003], output)
mutated_mod['func_10004'] = func_10004
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10043 = relay.var("var_10043", dtype = "float64", shape = (7, 13, 5))#candidate|10043|(7, 13, 5)|var|float64
uop_10044 = relay.asinh(var_10043.astype('float64')) # shape=(7, 13, 5)
func_8943_call = mod.get_global_var('func_8943')
func_8946_call = mutated_mod.get_global_var('func_8946')
const_10059 = relay.const([1,-1,-5,2,10,9,-5,9], dtype = "uint32")#candidate|10059|(8,)|const|uint32
call_10058 = relay.TupleGetItem(func_8943_call(relay.reshape(const_10059.astype('uint32'), [8, 1])), 0)
call_10060 = relay.TupleGetItem(func_8946_call(relay.reshape(const_10059.astype('uint32'), [8, 1])), 0)
func_8171_call = mod.get_global_var('func_8171')
func_8173_call = mutated_mod.get_global_var('func_8173')
var_10063 = relay.var("var_10063", dtype = "float64", shape = (135,))#candidate|10063|(135,)|var|float64
call_10062 = relay.TupleGetItem(func_8171_call(relay.reshape(var_10063.astype('float64'), [135,])), 2)
call_10064 = relay.TupleGetItem(func_8173_call(relay.reshape(var_10063.astype('float64'), [135,])), 2)
uop_10084 = relay.rsqrt(uop_10044.astype('float64')) # shape=(7, 13, 5)
func_1640_call = mod.get_global_var('func_1640')
func_1642_call = mutated_mod.get_global_var('func_1642')
const_10090 = relay.const([[-3.705580,-2.151539],[-1.636832,9.866657],[-0.658744,3.651379],[1.401299,-0.211229],[-0.074606,-7.194536],[9.618121,4.991620],[1.614945,-6.194671],[1.235492,4.107711],[-8.070944,9.989822],[5.004903,4.370290],[8.596309,3.929091],[8.633018,5.225156],[-1.806369,3.494650],[5.603228,-9.658642],[5.113814,5.230431],[2.469952,4.172089],[-6.339854,-3.533699],[0.233469,4.690213],[-0.901302,8.812524],[-1.946717,-8.744810],[-0.442689,2.295301],[-5.492237,-3.378256],[-1.436180,-2.560391],[-1.204743,-0.472470],[2.129910,-4.336459],[-9.640432,2.930903],[8.554057,-5.970906],[-8.542931,-5.025957],[7.817338,-1.377127],[9.297889,6.542499],[-9.513679,8.819900],[6.443301,4.361026],[-8.204111,3.148522],[-1.775519,5.255976],[7.043864,5.159872],[-0.297542,-5.584186],[6.690736,-9.482256],[3.161599,6.833230],[3.685624,-4.560642],[-0.247929,2.642756],[-7.904483,2.230869],[-3.804679,-5.546349],[-6.937484,3.391820],[4.644947,-9.492539],[-4.413648,6.486590],[7.859997,-0.644559],[5.178191,2.302698],[-0.403045,-5.077631],[-4.164964,6.512494],[-2.277252,-9.337565],[-2.472085,-9.438981],[-2.976318,-4.926286],[8.226014,-1.562809],[-1.707948,4.453938],[-1.389431,1.892857],[-8.821036,7.753473],[5.708826,3.286111],[-7.398362,1.795119],[9.416052,-5.607050],[-1.022134,-4.387003],[-9.059102,-4.767242],[5.081320,-6.039711],[3.056015,6.731396],[5.193667,-5.688726],[1.800975,-1.396092],[0.897775,-8.601026],[4.420487,-2.554711],[-6.649270,2.780320],[-2.264981,7.674577],[-4.564829,0.554318],[-3.005808,9.725168],[6.446939,-1.283865],[6.573663,-4.034622],[-8.740743,0.655254],[7.401191,-4.354379],[-9.632511,-5.571218],[7.071099,0.090459],[8.335631,5.803450],[5.837670,5.803374],[-7.465319,9.704678],[-3.789061,7.847696],[0.765122,9.333721],[-3.566678,-8.335831],[1.661104,3.471768],[-7.319746,-4.166051],[9.932894,1.341278],[-6.977014,4.322883],[1.166163,-7.769834],[-6.976958,-8.707238],[-8.319845,-1.108146],[9.493213,-3.614848],[6.330464,-1.823317],[-2.185101,8.700366],[-6.901603,-6.294089],[0.339221,-8.111842],[-8.550010,3.500591],[-9.296435,-2.620951],[9.354581,1.983224],[1.217960,5.222135],[-0.011526,8.897350],[6.269131,-1.799366],[3.039497,-5.448989],[8.906220,7.748101],[-3.064183,-3.680377],[9.954915,9.158737],[-9.416415,3.015517],[-9.618928,-8.533493],[-8.704156,1.633239],[0.399703,-3.701350],[-9.333534,7.771161],[9.759811,-8.622824],[4.883421,-5.381645],[3.188102,0.465882],[-5.713651,-5.240140],[-4.073789,6.972569],[-6.338052,-2.364783],[3.755541,-5.360399],[8.724162,7.461237],[9.005868,-7.856919],[-9.554176,6.127323],[1.671613,5.093467],[9.098123,-3.573802],[0.581816,6.480698],[2.906699,0.887600],[-3.851141,-5.471218],[4.165554,-2.426408],[2.930146,-6.243532],[7.740788,-6.765090],[-2.609955,-1.802737],[7.779977,1.963305],[4.475298,-3.835180],[-6.795773,5.379803],[3.106208,3.924354],[0.820635,3.694331],[-1.167245,-7.255902],[8.863400,-8.595934],[0.245544,-4.693465],[-3.348991,4.729001],[-9.864443,-4.270833],[9.079392,9.637238],[8.964866,7.633208],[-1.988525,-8.699839],[-7.503637,-1.574146],[1.624329,-2.598497],[2.771145,6.095697],[-1.359141,1.749033],[-5.292681,-3.105107],[9.903579,-8.303630],[-2.919185,2.080776],[9.959094,5.737146],[1.896357,5.472467],[2.411326,5.590175],[-2.960688,-6.891959],[6.602943,9.622572],[2.419346,3.493990],[3.064212,5.736040],[4.435082,-2.795797],[-4.381858,5.721752],[0.795516,-4.422182],[-6.904339,-9.129102],[-9.024059,0.645078],[-5.164387,3.652070],[-7.310889,7.122698],[0.529131,8.506055],[5.248909,4.310748],[-6.578204,9.318702],[0.726929,-4.731460],[8.717202,4.604633],[8.988785,0.289846],[5.553426,6.361269],[6.140329,-7.096852],[0.150929,-7.686312],[2.425414,0.175448],[-1.047998,-6.472171],[-7.522282,0.352836],[3.480020,-9.639127],[0.622230,-0.458344],[-2.762710,6.467724],[-5.600455,-6.283992],[2.738310,0.300547],[-5.940893,-4.129463],[3.123411,1.055958],[5.372104,-6.171043],[4.107129,0.853515],[-2.426372,7.847977],[7.055648,8.939535],[-1.189196,-0.954866],[-4.038735,7.805162],[-2.049759,0.114677],[-0.888922,2.659422],[4.672548,-7.482362],[-0.139702,2.912498],[6.527977,-1.921783],[0.044050,6.284024],[4.607616,-3.778624],[4.468311,3.097489],[2.975485,1.492730],[3.664126,-3.948769],[-6.834196,8.066289],[-4.551533,-3.734570],[9.905423,3.931735],[-5.607353,2.042038],[-7.865904,5.032983],[0.998172,1.612721],[1.597157,-4.310400],[3.164913,5.273843],[3.220337,5.759442],[5.068567,2.375893],[-1.936685,-6.800077],[2.245630,-2.633550],[0.546982,9.949532],[-7.747664,9.022098],[-3.164305,-0.902312],[-1.434478,7.853432],[-6.200591,-2.900129],[-0.735376,9.041736],[-2.553671,0.157458],[9.225578,9.020156],[9.742375,1.535794],[3.192500,8.535183],[-1.229253,1.641586],[6.145355,-9.364691],[2.068457,-1.575922],[-4.889386,-3.920026],[0.530821,7.138419],[-0.097031,1.246010],[4.452460,8.806840],[1.769362,-5.405763],[8.223220,9.470676],[9.127223,-2.241196],[-7.867239,-7.301159],[-8.444964,7.013542],[3.243957,-4.561666],[6.066045,6.102243],[-2.770137,4.937878],[-1.925783,3.261186],[1.794191,-1.277554],[-3.237838,-8.790604],[4.100993,-2.630209],[2.009913,9.493411],[-1.957284,-8.179257],[1.902643,-0.716815],[7.752158,-6.251178],[-6.482065,5.856660],[-6.348250,-1.778011],[-7.009248,9.219877],[8.475287,-0.040638],[2.742452,6.559419],[9.926211,9.883157],[-2.479326,9.753964],[4.257849,9.850806],[8.092521,4.003255],[-1.377989,1.491160],[-4.921695,7.403899],[-4.049006,7.682668],[8.756793,6.279852],[-8.756479,-2.104423],[-0.373872,-7.793722],[9.489673,6.651083],[-8.128686,-8.181716],[-1.835634,-9.957575],[-5.631117,7.728412],[1.606051,-9.500657],[3.715082,0.536566],[-4.839984,-2.107638],[2.189400,-1.160497],[-9.945560,-9.200971],[-5.781108,-7.381072],[-1.463144,-3.181679],[-9.840715,9.499889],[-0.383506,-3.559383],[8.283911,7.662789],[0.784230,-3.129428],[8.448611,1.535189],[6.511428,-3.965386],[-3.590248,-0.904082],[8.456616,4.702632],[-6.793783,1.924756],[-8.713120,5.984591],[-7.728452,0.551323],[-9.641853,-1.679920],[-7.004323,-2.775048],[0.891514,-6.072661],[4.652549,-6.301441],[0.726374,-3.527055],[-8.139904,-0.418032],[2.281479,-6.318612],[-3.505668,-0.048613],[-3.371817,-5.572596],[-3.523097,-8.814376],[-4.685043,-6.301340],[8.716379,-2.482302],[-7.888471,5.449627],[1.148336,-4.910845],[8.565936,-8.578535],[-4.146871,-2.402616],[2.231199,-5.175257],[2.911779,-7.083995],[1.520114,1.485648],[8.251983,6.552775],[-0.624633,9.865438],[-4.769023,0.670921],[-4.054306,3.506857],[-8.334521,6.834248],[4.000828,4.834252],[-0.104323,-9.256648],[-3.937933,3.194968],[7.536690,-8.350003],[5.679198,0.718072],[8.578949,8.398085],[-6.648156,-1.127620],[-6.939908,0.433874],[2.647192,9.446455],[-1.183765,8.813246],[0.756643,-3.972322],[6.215611,8.544741],[-6.488607,-6.095533],[8.146593,-4.119831],[8.735244,-2.584024],[-9.746215,4.293914],[-1.633420,-7.442334],[-6.487106,-3.105864],[-3.759977,-4.354719],[3.797138,-4.460523],[4.047215,9.203885],[-2.150355,-7.615550],[-6.895903,1.988210],[-0.369840,7.037320],[8.544915,5.075572],[0.798438,-5.748670],[4.884925,-9.820184],[-4.863988,-8.449227],[2.437188,-0.715723],[1.727218,4.863328],[1.512323,0.744503],[6.178210,-6.798451],[-1.845615,-7.040863],[3.777546,4.566899],[-6.703280,3.901587],[-0.943156,-7.354005],[1.572422,6.847048],[6.337410,8.922484],[0.608903,7.926003],[3.408846,-1.953806],[6.554330,1.705289],[1.426211,4.611896],[-4.524953,-9.277890],[2.034963,7.603930],[0.485639,9.437396],[9.558383,1.227839],[8.432713,-1.556827],[-5.025961,-6.342521],[0.482669,1.871439],[-9.058797,-4.610330],[7.687344,0.368567],[3.006847,-1.510670],[7.344695,-2.920394],[-7.038475,-2.076093],[-8.770226,-5.222815],[3.188507,-9.894177],[-1.853024,3.192307],[2.893533,-8.840349],[-1.457684,4.522461],[-1.276456,-4.278621],[4.246767,-5.597721],[-6.501832,-9.886933],[0.092102,3.178641],[0.081684,-6.841633],[2.942988,2.086696],[2.640170,-3.349067],[6.360430,-8.984426],[2.960462,-5.223711],[3.870914,-0.345231],[6.343340,-5.775724],[6.831628,6.391827],[4.340844,-8.048038],[1.350364,4.134043],[8.072858,-0.385350],[2.292253,-8.616323],[5.341189,-1.830265],[-5.337229,-0.491997],[5.411632,-8.365175],[-6.284037,2.504878],[2.190771,2.237231],[3.123319,-8.909766],[-6.885879,-2.944148],[6.807251,-6.350192],[9.150973,1.022284],[2.171595,3.090966],[-4.204033,7.888333],[7.097865,-4.516426],[-7.017732,2.634904],[3.454706,7.177218],[-1.623948,9.639378],[-8.888709,-2.284247],[-2.438220,4.194891],[9.025163,-2.720288],[0.986390,-6.395187],[5.023293,7.903683],[-8.355468,8.150945],[-9.224427,8.349528],[-9.573222,-1.966111],[-3.825704,-2.680327],[-7.120113,-4.857094],[-7.531747,5.457274],[-4.494693,-6.402907],[5.413447,-2.229587],[-0.885817,0.972044],[-9.445854,4.240024],[7.613467,3.123493],[-8.399406,5.996668],[-3.442815,-4.431557],[-6.329508,-0.875075],[-6.485884,-7.008016],[-2.480701,7.998704],[2.884891,-6.957113],[-2.361977,-4.925440],[4.167267,0.693663],[-7.614348,1.417494],[5.680028,7.603285],[1.897113,-9.156491],[3.148319,2.596054],[4.253950,-8.389191],[1.264376,-6.563788],[2.565504,-3.082583],[4.796283,-7.598005],[-6.275821,-6.437262],[-5.989227,6.744178],[3.599510,8.967448],[7.877518,-5.590246],[3.482284,0.563333],[7.240779,-9.787169],[-1.238538,-4.052802],[5.181129,8.631833],[-4.274076,5.544665],[-7.652497,-1.563458],[-1.812565,-9.172619],[5.389164,3.450137],[0.288818,1.886009],[-5.545224,0.737912],[-1.340543,-0.560148],[9.832744,5.298901],[0.987150,-8.519496],[-6.558177,7.944551],[-5.532522,-5.818947],[1.370690,-0.531470],[-5.794509,1.965468],[-4.663771,5.550053],[-8.465347,-5.564574],[-1.338033,9.644056],[-9.371207,1.259913],[5.283297,7.368915],[-3.906090,8.711212],[0.588115,-7.452225],[1.122405,8.211423],[0.300143,9.129285],[-2.063966,5.124704],[4.193392,5.144109],[-5.283815,-3.834709],[2.740595,0.196622],[0.584723,0.626836],[-8.130510,-0.260241],[-8.026533,1.324047],[6.184250,3.514779],[-2.404895,-3.389359],[-9.701974,6.141564],[-8.270319,-6.228464],[-2.821116,2.757944],[-4.497814,-0.848921],[-1.429059,-9.550062],[-2.926952,-7.137943],[-8.422218,-9.722004],[-3.970435,7.205932],[-8.301200,2.910084],[-8.833451,-4.265028],[6.822467,6.039645],[7.249570,3.928604],[-0.167902,-5.709970],[9.039880,-5.198309],[-7.807694,5.363266],[3.845790,4.852480],[0.128584,-2.151979],[-7.667118,-2.128273],[-8.094435,3.254613],[-3.684360,-2.447344],[1.830010,5.244332],[3.806072,-5.877357],[-6.304972,5.253199],[-8.482295,2.201634],[9.302308,-2.066401],[8.635767,-6.564685],[-3.997233,4.198999],[-2.943238,4.059899],[-1.861627,-0.452029],[9.811939,1.783293],[-5.072427,9.819513],[-9.622711,4.733332],[7.431930,7.361497],[-7.935403,-5.610862],[-4.544301,6.239197],[1.929185,-1.440066],[-4.166530,-9.223722],[3.648950,9.036628],[-8.048109,1.607355],[-6.842994,-5.517358],[-2.218509,-9.931061],[9.103700,9.946906],[-6.306081,-5.522738],[6.971801,3.126694],[-4.473494,2.776859],[9.051557,0.613608],[-5.604279,-2.976545],[8.398992,-9.373234],[1.162066,9.878515],[1.851606,-8.914466],[8.655953,-3.839002],[3.410049,-1.049380],[9.372409,9.924492],[1.033187,-3.689086],[7.060903,-4.352308],[9.487130,-4.151501],[9.822854,-2.399743],[-3.605356,-4.317557],[6.055222,3.904437],[-3.762632,-1.721242],[1.164320,-8.070298],[1.503489,-9.270745],[-2.808063,0.092912],[8.287473,-4.032055],[8.109010,-1.429971],[1.392966,-9.347363],[5.938882,2.018125],[0.586901,8.449753],[1.253428,6.698850],[-8.809243,-3.786826],[-1.222238,-8.994519],[8.085778,-1.442120],[3.826799,6.571211],[9.712636,-2.527890],[7.724026,-2.719419],[9.112218,6.419014],[-8.052951,4.887324],[4.067623,1.261333],[-7.041613,7.511310],[-5.209978,-8.738195],[-6.662775,-5.516461],[7.040660,-1.032932],[-7.834316,-5.966009],[-6.053937,-0.288665],[-6.704220,2.406416],[8.012305,-0.442965],[9.773332,-6.926024],[0.159703,1.974966],[-1.188581,-3.813552],[-0.163448,-7.493152],[2.280970,8.780003],[-1.883017,-5.160756],[8.680116,-9.932555],[-2.485530,-4.396895],[1.826151,9.842001],[-4.010419,-4.656477],[-6.619426,-6.672488],[-3.542195,9.865298],[2.277660,4.225270],[3.067257,1.971084],[-2.990253,6.322647],[-7.581349,-1.244525],[-3.746660,-3.433190],[-2.685413,9.316172],[9.692766,-6.615008],[-4.858039,-5.229073],[-1.638132,-3.293964],[0.475264,-7.557206],[6.915311,2.054998],[-2.548001,9.762034],[0.977541,8.272617],[1.994881,0.715666],[-7.984602,-7.541917],[6.493640,3.913919],[-1.644783,5.898994],[7.859165,3.718689],[-0.803267,-5.909840],[-6.260006,0.694426],[2.286410,-8.629799],[-6.310370,-7.779976],[6.659955,1.438367],[0.541228,-5.061173],[-4.893223,0.869883],[2.665659,2.967531],[7.043321,-1.259764],[7.707275,-7.110022],[-4.617770,8.705561],[-2.160640,-6.552249],[-5.221970,-1.213425],[-1.956862,-4.813897],[8.684019,-3.591622],[-2.904309,-1.859954],[9.769118,-4.320990],[-7.383393,1.593162],[6.099467,5.380252],[-4.517963,9.497291],[-6.236189,-1.138303],[-6.067795,0.500306],[8.168386,-8.337882],[6.697360,9.522251],[-2.658832,-5.172346],[-1.645896,8.946924],[-8.230777,9.205935],[-8.511703,-1.962734],[0.411929,7.450021],[1.828356,2.827509],[-1.455177,-9.452933],[-6.852853,-0.452598],[2.896431,9.913816],[0.012557,5.438486],[-6.517127,-1.686913],[8.819624,7.957429],[-3.222670,-0.536168],[5.964103,-1.896852],[-8.956323,-0.784100],[-1.177231,8.007678],[4.541148,-3.357552],[6.502271,-9.765244],[-7.222357,7.989464],[3.783083,-5.610025],[7.935657,3.769504],[-8.335464,2.522694],[0.809510,1.301412],[-8.984616,6.174748],[-0.280300,-5.111770],[-4.848218,0.239963],[-6.023997,-0.053345],[9.843546,1.061009],[-1.684499,6.590881],[-0.289401,5.796611],[-1.811008,0.334220],[6.171076,-3.718034],[-4.801756,8.301492],[-6.497470,-9.822896],[9.387971,-6.607123],[1.934677,-4.723535],[3.859461,7.264109],[-4.530547,8.200895],[0.506403,3.634894],[5.550721,-7.226873],[8.256741,-7.950433],[-6.833063,-1.846964],[-1.035902,-3.527088],[-3.433772,4.333601],[6.215278,3.292735],[1.672078,-9.446005],[0.218886,3.409464],[-1.748971,7.922585],[2.845089,5.876782],[-3.202845,-3.872493],[-2.962598,-2.646173],[1.660639,-8.528748],[-4.681477,-1.825237],[-8.664368,3.704975],[-1.938375,2.895595],[-9.290801,-1.837744],[-0.466427,-7.637775],[5.819908,0.602173],[3.161108,-3.518575],[0.016829,3.814709],[-5.215814,8.888960],[2.198524,9.892094],[6.960454,-1.078067],[2.693121,-9.784252],[-9.070771,-4.329941],[6.762712,2.285667],[8.438135,0.638045],[9.139534,4.187821],[-8.014852,-8.204427],[2.495453,4.775626],[-6.604018,-1.465614],[3.965799,-9.946740],[2.155895,8.275534],[-7.242235,-2.002136],[2.657803,3.489036],[-6.673363,-5.932919],[3.703390,-5.472302],[-8.333473,-2.616808],[3.836633,-0.597085],[5.281170,-8.867228],[5.454687,9.605673],[2.478830,-5.978855],[3.925369,9.092736],[-1.199718,-3.049401],[-9.993925,-6.210107],[-3.339529,-2.502033],[4.836387,-0.863690],[4.571392,-9.219099],[4.311183,-9.291682],[1.459809,0.849154],[-3.784256,-6.853011],[-7.042966,3.463447],[-1.727354,-6.358715],[-0.393844,-0.837540],[5.496351,-1.180166],[-8.760698,-0.367591],[-8.647644,-6.349502],[3.696965,-6.416758],[-4.599087,-8.431212],[8.334831,8.161299],[2.701962,-8.005830],[-7.002821,4.813094],[-9.155747,-2.954743],[-2.922182,-4.693870],[-9.784764,-4.342073],[-8.493804,4.166148],[-8.266325,8.230425],[8.011791,5.152027],[-8.541442,-5.736659],[-0.958965,2.665895],[9.747037,0.825147],[-5.524078,-9.866238],[-6.367009,-4.910993],[9.108999,0.118229],[8.644610,9.878747],[-5.265414,5.835242],[1.682810,9.649110],[4.000439,-8.067117],[9.361809,1.684997],[2.783405,-6.600815],[-5.035118,-2.146805],[-2.646148,0.157269],[-2.184296,7.415396],[2.830154,-1.178453],[-2.292908,0.574080],[-6.205271,2.851155],[9.313724,5.519878],[-9.771181,3.855689],[-3.871010,6.869096],[8.071039,-9.357312],[7.263868,-6.251076],[-8.826197,3.268903],[4.557456,-7.463920],[-7.000021,4.305864],[-6.422583,-1.732042],[-2.230473,-9.208713],[4.357402,1.863325],[-6.947684,2.219927],[9.355564,8.928903],[-9.909504,5.817261],[3.907526,5.356813],[4.832270,5.722708],[7.149383,-2.224276],[1.813639,-1.684450],[-7.812422,-6.185493],[2.861086,0.420422],[6.872292,-4.348825],[6.553947,8.472494],[6.524615,0.248274],[7.975279,0.911897],[-1.616968,-9.860650],[-0.385844,6.014978],[3.836180,1.101864],[3.495516,2.096775],[7.144162,-6.091721],[0.964171,2.665550],[-6.689920,9.958767],[-6.128968,-7.882432],[2.781526,-3.218943],[3.756780,-3.010116],[5.401483,5.914157],[-8.581614,-0.317473],[-4.799988,8.408957],[-3.978681,-3.468381],[6.422149,1.415304],[-3.166662,-4.934860],[-6.821423,5.355567],[-4.472606,-9.247894],[-5.293217,-8.809771],[5.911032,-2.853028],[0.830864,8.249030],[7.443042,-0.069971],[-1.390854,-2.136383],[1.529213,-7.100002],[3.518361,5.110192],[8.799234,-5.991658],[0.405200,5.316578],[5.556114,-3.147296],[9.265597,-5.843114],[-5.801764,5.768940],[-8.037339,3.153815],[-3.245844,-8.128987],[-7.596858,-7.698851],[8.334277,8.254292],[3.053988,0.619755],[-1.289536,-1.279012],[-1.037658,-5.478575],[2.466521,4.427551],[8.116943,-8.371442],[-6.437253,-3.116444],[-5.969344,-6.744758],[1.341855,6.200942],[-0.615935,9.817381],[-0.016144,-3.960384],[-2.570819,2.296243],[-1.107206,-9.167078],[-5.035321,-9.978560],[4.894780,3.457858],[0.587797,0.830570],[6.302737,2.737079],[-4.012987,-1.332677],[-0.086253,5.903430],[-1.663842,9.536506],[3.560141,-6.722042],[-4.261580,-8.012515],[0.730197,5.487697],[8.206590,8.196856],[5.868492,7.134417],[9.732559,4.984423],[-5.705244,8.661698],[3.178187,-1.923870],[-6.696730,-8.127478],[8.914787,-7.992219],[-2.003326,6.655725],[-0.785410,-4.066267],[5.107417,5.023301],[-7.508981,0.481501],[0.975666,4.688344],[9.429437,5.126883],[-0.974296,-9.560576],[-4.276508,5.160777],[-1.481693,5.868595],[7.531949,0.018251],[5.342970,-5.854954],[5.904070,-2.460389],[-9.300955,6.513009],[3.836559,6.559048],[5.325995,4.795411],[-4.584388,-4.990982],[8.211740,1.572671],[-7.664188,-4.689173],[-5.885296,5.467224],[-5.875316,-0.818484],[1.449842,-3.739239],[3.410181,-6.807759],[9.790140,-0.141971],[-2.130244,-9.249594],[-5.053895,6.452281],[-0.548975,-1.550998],[-1.478300,-6.379751],[-2.506562,6.030203],[2.274989,-0.365969],[7.172364,2.744122],[6.391014,-1.585429],[-7.558613,8.866219],[-1.145882,6.222619],[-0.836848,6.898137],[1.033106,6.727215],[1.187567,4.614830],[-6.747534,9.471551],[3.553597,-3.048126],[-8.935053,-5.078491],[-4.743028,-8.659534],[-7.258752,9.979559],[0.258318,7.931806],[0.373599,-8.015398],[2.992623,9.170275],[-1.698687,4.447760],[8.032762,-9.191508],[-9.514657,-0.084664],[-1.153799,-8.039872],[2.798719,-0.220197],[-3.205240,4.832845],[-1.065152,-0.356940],[-9.152688,-6.671164],[-6.271711,-8.119641],[9.646299,-6.408358],[2.452934,-5.015788],[6.983680,0.160643],[1.842897,2.694536],[0.871163,0.449194],[9.858808,-0.681637],[9.920666,-3.706858],[-7.515085,6.788050],[1.322316,-6.627023],[-9.346058,-7.891307],[0.050377,-7.047072],[6.403051,-3.975804],[1.434097,9.150212],[-7.633982,-8.474737],[-0.177031,3.437033],[7.134733,-2.327517],[-9.426234,8.509519],[-6.940783,-2.782719],[9.214033,-9.040401],[4.851755,-5.333269],[-8.861296,5.735368],[3.074779,-8.801868],[-0.774042,-9.054746],[-0.587180,-5.394033],[5.032561,3.724637],[2.910908,6.795646],[6.028646,-7.848603],[0.225742,9.567607],[-7.216058,-3.535645],[-5.107188,1.395903],[-4.071084,-2.303168],[-4.886549,-6.630963],[-8.697265,0.750764],[7.850145,8.417854],[-7.320682,2.063422],[-2.408765,1.607752],[0.597123,-6.564565],[-5.177536,-6.341827],[1.830235,3.956245],[0.400873,-0.912117],[-8.201198,-1.103461],[-2.798254,-8.363989],[1.227807,-6.294508],[-4.580964,-9.132081],[3.449986,7.356136],[-2.438371,2.059374],[-1.866659,2.156825],[-9.109513,5.334857],[-6.495334,-3.209243],[7.518508,5.735692],[3.553338,-3.728604],[-4.686931,3.829781],[8.325768,7.238310],[5.552346,-3.976491],[-0.129877,0.847082],[4.816729,1.441369],[-9.297923,-5.737388],[-3.534934,-1.542843],[-2.655355,6.103295],[0.903095,-7.544023],[2.000363,-8.353182],[-4.326524,-6.813876],[9.878084,7.629465],[-2.424465,-8.754399],[7.179303,0.076856],[-3.137824,6.938026],[-1.651576,7.953987],[6.935732,1.152577],[-9.542464,7.447138],[-8.221071,8.613305],[-9.974918,-4.412245],[3.764431,9.701973],[7.853177,-0.469171],[2.243055,-2.726402],[-8.742076,1.868916],[-3.091762,-9.578072],[9.562642,2.289102],[2.224133,1.862036],[-3.053166,-6.806092],[-0.011503,-8.175628],[-7.164927,9.538966],[-8.842950,-1.358594],[-6.855750,-7.399997],[-5.672628,5.404483],[8.609575,5.562992],[3.799097,-6.296353],[-3.731052,5.618542],[-6.203938,-9.027352],[-8.444960,-8.993857],[-5.359001,6.064076],[7.072979,8.251877],[-4.054975,0.516635],[4.956748,-7.948341],[4.011928,-8.943193],[3.582682,-5.909135],[5.627775,5.902200],[-6.196200,-8.424173],[-8.290926,8.995215],[-1.116690,3.313091],[5.883896,-5.787066],[6.137019,1.583019],[8.577976,-4.639940],[9.629241,-5.613696],[2.796213,-9.597104],[-5.635722,-3.078536],[-7.461172,-5.798735],[-1.317323,3.186393],[-2.110378,1.220918],[-3.394732,-8.516570],[-2.055585,8.624485],[0.407536,6.477389],[9.339052,-2.227011],[-6.853534,-8.567334],[1.320235,9.350291],[-4.700811,4.527511],[-9.891070,-1.385813],[-3.644810,-6.832103],[1.502095,-2.610034],[-7.286706,5.088810],[-4.394763,8.151981],[4.624363,9.225609],[-2.697306,-7.692145],[-7.335930,4.867590],[-9.592340,3.807995],[-6.850306,-6.610711],[7.010164,-2.719460],[-2.550312,5.712535],[6.620646,5.800959],[-9.935598,6.744418],[-2.985416,2.451134],[-3.940419,7.734742],[-9.601728,2.546894],[1.439795,-8.193472],[-5.991936,-6.922357],[9.304134,1.993364],[-9.362972,7.100334],[-5.530010,0.504066],[-3.220768,2.811308],[3.579334,-6.862171],[4.434161,-9.471801],[1.698089,-6.587524],[6.872660,-7.737460],[-7.855876,2.295327],[-5.831514,-6.295275],[-9.002899,9.793234],[-3.530917,2.555636],[-8.219970,-1.541411],[6.270396,-6.529942],[9.160989,-7.350450],[6.360881,1.998770],[4.209281,-7.749737],[9.542622,-7.735058],[-1.223374,3.965100],[-1.550368,-4.332410],[-7.990734,-0.801841],[9.663751,-1.898841],[4.742239,0.631779],[7.983457,1.913633],[1.358505,-8.007340],[-5.377671,-3.098317],[4.091531,9.934950],[-5.109480,-4.692600],[-1.858805,-8.661547],[4.165918,6.112415],[-4.642348,7.354371],[8.833735,-2.316935],[-3.476631,-5.285021],[5.353553,5.093401],[-9.134599,-9.321945],[-6.145106,5.006405],[7.031296,-2.771949],[-4.681376,-5.410473],[-6.033973,-2.882675],[-9.698863,-9.855637],[4.639615,8.036907],[-1.567950,0.649307],[5.462088,1.890466],[-3.860834,7.031013],[7.281655,-1.626169],[4.380906,-5.333774],[-8.280658,3.750625],[5.772483,3.624334],[-9.434280,4.227415],[2.728337,0.491409],[-7.512805,-8.723636],[5.771452,-2.993186],[7.589215,-6.995744],[4.668453,-7.592409],[7.674374,-9.684610],[-2.785572,-8.652681],[-2.908332,4.253232],[-7.326947,8.233240],[8.096541,-0.772432],[2.427345,6.679429],[4.134826,7.766070],[-0.183111,0.078860],[6.348947,-7.112883],[4.071643,9.283027],[-8.572822,-9.735037],[7.220731,5.036909],[6.257240,-5.745223],[6.737879,-6.209499],[7.279537,1.920273],[1.032075,-7.645170],[5.268062,-4.997364],[1.594725,-5.190202],[-0.045698,-8.698373],[-6.311812,2.386903],[2.527523,-6.654972]], dtype = "float32")#candidate|10090|(1080, 2)|const|float32
call_10089 = relay.TupleGetItem(func_1640_call(relay.reshape(const_10090.astype('float32'), [2160,])), 0)
call_10091 = relay.TupleGetItem(func_1642_call(relay.reshape(const_10090.astype('float32'), [2160,])), 0)
func_5399_call = mod.get_global_var('func_5399')
func_5402_call = mutated_mod.get_global_var('func_5402')
var_10095 = relay.var("var_10095", dtype = "int32", shape = (210,))#candidate|10095|(210,)|var|int32
call_10094 = relay.TupleGetItem(func_5399_call(relay.reshape(var_10095.astype('int32'), [1, 15, 14])), 1)
call_10096 = relay.TupleGetItem(func_5402_call(relay.reshape(var_10095.astype('int32'), [1, 15, 14])), 1)
uop_10098 = relay.sinh(uop_10044.astype('float32')) # shape=(7, 13, 5)
func_6333_call = mod.get_global_var('func_6333')
func_6335_call = mutated_mod.get_global_var('func_6335')
call_10106 = relay.TupleGetItem(func_6333_call(), 0)
call_10107 = relay.TupleGetItem(func_6335_call(), 0)
uop_10111 = relay.log(uop_10084.astype('float64')) # shape=(7, 13, 5)
output = relay.Tuple([call_10058,const_10059,call_10062,var_10063,call_10089,const_10090,call_10094,var_10095,uop_10098,call_10106,uop_10111,])
output2 = relay.Tuple([call_10060,const_10059,call_10064,var_10063,call_10091,const_10090,call_10096,var_10095,uop_10098,call_10107,uop_10111,])
func_10116 = relay.Function([var_10043,var_10063,var_10095,], output)
mod['func_10116'] = func_10116
mod = relay.transform.InferType()(mod)
var_10117 = relay.var("var_10117", dtype = "float64", shape = (7, 13, 5))#candidate|10117|(7, 13, 5)|var|float64
var_10118 = relay.var("var_10118", dtype = "float64", shape = (135,))#candidate|10118|(135,)|var|float64
var_10119 = relay.var("var_10119", dtype = "int32", shape = (210,))#candidate|10119|(210,)|var|int32
output = func_10116(var_10117,var_10118,var_10119,)
func_10120 = relay.Function([var_10117,var_10118,var_10119,], output)
mutated_mod['func_10120'] = func_10120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7992_call = mod.get_global_var('func_7992')
func_7993_call = mutated_mod.get_global_var('func_7993')
call_10126 = relay.TupleGetItem(func_7992_call(), 0)
call_10127 = relay.TupleGetItem(func_7993_call(), 0)
output = call_10126
output2 = call_10127
func_10177 = relay.Function([], output)
mod['func_10177'] = func_10177
mod = relay.transform.InferType()(mod)
output = func_10177()
func_10178 = relay.Function([], output)
mutated_mod['func_10178'] = func_10178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6589_call = mod.get_global_var('func_6589')
func_6591_call = mutated_mod.get_global_var('func_6591')
call_10195 = relay.TupleGetItem(func_6589_call(), 0)
call_10196 = relay.TupleGetItem(func_6591_call(), 0)
output = relay.Tuple([call_10195,])
output2 = relay.Tuple([call_10196,])
func_10234 = relay.Function([], output)
mod['func_10234'] = func_10234
mod = relay.transform.InferType()(mod)
output = func_10234()
func_10235 = relay.Function([], output)
mutated_mod['func_10235'] = func_10235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5236_call = mod.get_global_var('func_5236')
func_5238_call = mutated_mod.get_global_var('func_5238')
call_10246 = relay.TupleGetItem(func_5236_call(), 4)
call_10247 = relay.TupleGetItem(func_5238_call(), 4)
func_6301_call = mod.get_global_var('func_6301')
func_6303_call = mutated_mod.get_global_var('func_6303')
call_10248 = relay.TupleGetItem(func_6301_call(), 0)
call_10249 = relay.TupleGetItem(func_6303_call(), 0)
func_7534_call = mod.get_global_var('func_7534')
func_7535_call = mutated_mod.get_global_var('func_7535')
call_10266 = relay.TupleGetItem(func_7534_call(), 0)
call_10267 = relay.TupleGetItem(func_7535_call(), 0)
func_5170_call = mod.get_global_var('func_5170')
func_5171_call = mutated_mod.get_global_var('func_5171')
call_10271 = relay.TupleGetItem(func_5170_call(), 0)
call_10272 = relay.TupleGetItem(func_5171_call(), 0)
uop_10275 = relay.sin(call_10266.astype('float64')) # shape=(30, 2)
uop_10277 = relay.sin(call_10267.astype('float64')) # shape=(30, 2)
output = relay.Tuple([call_10246,call_10248,call_10271,uop_10275,])
output2 = relay.Tuple([call_10247,call_10249,call_10272,uop_10277,])
func_10280 = relay.Function([], output)
mod['func_10280'] = func_10280
mod = relay.transform.InferType()(mod)
output = func_10280()
func_10281 = relay.Function([], output)
mutated_mod['func_10281'] = func_10281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1734_call = mod.get_global_var('func_1734')
func_1736_call = mutated_mod.get_global_var('func_1736')
call_10293 = relay.TupleGetItem(func_1734_call(), 0)
call_10294 = relay.TupleGetItem(func_1736_call(), 0)
func_46_call = mod.get_global_var('func_46')
func_48_call = mutated_mod.get_global_var('func_48')
const_10306 = relay.const([-6.973726,-5.710121,5.495177,-3.706126,1.266273,7.375553,6.915278,-1.929765,2.706874,-3.798263,-7.423725,9.741310,-4.720943,-4.711028,7.405745,-5.813926,5.607638,0.491264,-6.477075,-7.555540,-6.343533,6.088428,2.355905,-6.444578,5.097179,-4.018713,2.987148,-1.808279,7.765671,1.665768,-3.285994,6.750995,-5.658022,-9.056839,-6.961887,-8.156777,-4.183113,8.740174,-0.337606,1.801557,-0.558719,7.224592,8.299089,-7.990038,-7.489332,-2.891882,0.831436,-0.502873,-9.149267,-8.736484,5.543360,4.324251,4.689743,-0.804179,-6.879864,6.074180,5.252761,-0.983962,-3.148546,0.228006], dtype = "float32")#candidate|10306|(60,)|const|float32
call_10305 = relay.TupleGetItem(func_46_call(relay.reshape(const_10306.astype('float32'), [6, 10, 1])), 0)
call_10307 = relay.TupleGetItem(func_48_call(relay.reshape(const_10306.astype('float32'), [6, 10, 1])), 0)
func_1293_call = mod.get_global_var('func_1293')
func_1296_call = mutated_mod.get_global_var('func_1296')
var_10312 = relay.var("var_10312", dtype = "uint32", shape = (4, 2))#candidate|10312|(4, 2)|var|uint32
var_10313 = relay.var("var_10313", dtype = "uint32", shape = (12, 4))#candidate|10313|(12, 4)|var|uint32
call_10311 = relay.TupleGetItem(func_1293_call(relay.reshape(var_10312.astype('uint32'), [4, 2, 1]), relay.reshape(var_10313.astype('uint32'), [4, 2, 6]), ), 3)
call_10314 = relay.TupleGetItem(func_1296_call(relay.reshape(var_10312.astype('uint32'), [4, 2, 1]), relay.reshape(var_10313.astype('uint32'), [4, 2, 6]), ), 3)
var_10315 = relay.var("var_10315", dtype = "float32", shape = (15, 12, 12))#candidate|10315|(15, 12, 12)|var|float32
bop_10316 = relay.greater_equal(call_10311.astype('bool'), relay.reshape(var_10315.astype('bool'), relay.shape_of(call_10311))) # shape=(15, 12, 12)
bop_10319 = relay.greater_equal(call_10314.astype('bool'), relay.reshape(var_10315.astype('bool'), relay.shape_of(call_10314))) # shape=(15, 12, 12)
uop_10321 = relay.asin(call_10305.astype('float64')) # shape=(6, 10, 1)
uop_10323 = relay.asin(call_10307.astype('float64')) # shape=(6, 10, 1)
bop_10327 = relay.not_equal(uop_10321.astype('bool'), relay.reshape(call_10305.astype('bool'), relay.shape_of(uop_10321))) # shape=(6, 10, 1)
bop_10330 = relay.not_equal(uop_10323.astype('bool'), relay.reshape(call_10307.astype('bool'), relay.shape_of(uop_10323))) # shape=(6, 10, 1)
output = relay.Tuple([call_10293,const_10306,var_10312,var_10313,bop_10316,bop_10327,])
output2 = relay.Tuple([call_10294,const_10306,var_10312,var_10313,bop_10319,bop_10330,])
func_10335 = relay.Function([var_10312,var_10313,var_10315,], output)
mod['func_10335'] = func_10335
mod = relay.transform.InferType()(mod)
var_10336 = relay.var("var_10336", dtype = "uint32", shape = (4, 2))#candidate|10336|(4, 2)|var|uint32
var_10337 = relay.var("var_10337", dtype = "uint32", shape = (12, 4))#candidate|10337|(12, 4)|var|uint32
var_10338 = relay.var("var_10338", dtype = "float32", shape = (15, 12, 12))#candidate|10338|(15, 12, 12)|var|float32
output = func_10335(var_10336,var_10337,var_10338,)
func_10339 = relay.Function([var_10336,var_10337,var_10338,], output)
mutated_mod['func_10339'] = func_10339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6333_call = mod.get_global_var('func_6333')
func_6335_call = mutated_mod.get_global_var('func_6335')
call_10376 = relay.TupleGetItem(func_6333_call(), 0)
call_10377 = relay.TupleGetItem(func_6335_call(), 0)
output = call_10376
output2 = call_10377
func_10380 = relay.Function([], output)
mod['func_10380'] = func_10380
mod = relay.transform.InferType()(mod)
output = func_10380()
func_10381 = relay.Function([], output)
mutated_mod['func_10381'] = func_10381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10280_call = mod.get_global_var('func_10280')
func_10281_call = mutated_mod.get_global_var('func_10281')
call_10400 = relay.TupleGetItem(func_10280_call(), 1)
call_10401 = relay.TupleGetItem(func_10281_call(), 1)
func_10280_call = mod.get_global_var('func_10280')
func_10281_call = mutated_mod.get_global_var('func_10281')
call_10415 = relay.TupleGetItem(func_10280_call(), 1)
call_10416 = relay.TupleGetItem(func_10281_call(), 1)
uop_10432 = relay.log2(call_10415.astype('float64')) # shape=(14, 14, 9)
uop_10434 = relay.log2(call_10416.astype('float64')) # shape=(14, 14, 9)
func_2503_call = mod.get_global_var('func_2503')
func_2506_call = mutated_mod.get_global_var('func_2506')
const_10437 = relay.const([1.186023,6.391502,-1.170864,-7.065492,-2.504658,1.739311,1.917699,4.489378,-3.985637,1.224245,-4.839241,-1.818658,7.123885,0.505719,-7.670401,6.981024,2.303166,-8.847040,6.455361,9.483200,8.130014,4.629950,1.289702,2.524931,-2.462531,9.680513,-0.754689,-1.363044,-7.418737,-1.281829,0.040607,-1.839315,-8.871704,8.875003,7.512072,-9.646203,9.567878,7.313164,-7.360713,-2.045506,9.351984,1.441317,3.182871,-9.391878,5.404717,-9.268290,-1.558591,-5.431151,4.585611,-4.972433,-2.812482,3.262164,-0.987259,-9.240467,-8.200354,-2.400567,-6.965990,7.229777,1.008713,-5.713974,-8.217273,-8.320401,5.633524,0.345061,-7.012071,-4.777077,-8.032594,-7.747829,-6.682113,6.652832,5.214628,3.717045,-0.151327,1.091529,-4.695534,-8.627131,5.941604,8.913011,9.803426,8.736638,-3.402253,-5.279949,-4.520887,-6.873455,6.705645,4.097263,8.860128,7.027067,8.170981,9.915189,-6.365276,-7.162539,-4.190203,-2.205775,-3.757101,5.797069,0.584113,-8.574529,-1.557707,3.622900,-0.233906,-6.548688,2.851733,9.626448,3.869937,-6.231692,5.154221,9.725982,-2.830025,6.534395,9.717937,8.492717,6.359116,-4.025677,-5.774292,2.012612,-7.418393,-9.204387,6.999655,-9.688373,1.270716,-8.257191,6.793805,-8.879981,-2.280179,9.344339,7.335877,-1.532158,-3.792170,-1.715492,-8.676115,2.904348,-3.891469,-0.739321,-2.281065], dtype = "float64")#candidate|10437|(135,)|const|float64
call_10436 = func_2503_call(relay.reshape(const_10437.astype('float64'), [3, 15, 3]))
call_10438 = func_2503_call(relay.reshape(const_10437.astype('float64'), [3, 15, 3]))
output = relay.Tuple([call_10400,uop_10432,call_10436,const_10437,])
output2 = relay.Tuple([call_10401,uop_10434,call_10438,const_10437,])
func_10441 = relay.Function([], output)
mod['func_10441'] = func_10441
mod = relay.transform.InferType()(mod)
mutated_mod['func_10441'] = func_10441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10441_call = mutated_mod.get_global_var('func_10441')
call_10442 = func_10441_call()
output = call_10442
func_10443 = relay.Function([], output)
mutated_mod['func_10443'] = func_10443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6220_call = mod.get_global_var('func_6220')
func_6221_call = mutated_mod.get_global_var('func_6221')
call_10457 = func_6220_call()
call_10458 = func_6220_call()
output = relay.Tuple([call_10457,])
output2 = relay.Tuple([call_10458,])
func_10461 = relay.Function([], output)
mod['func_10461'] = func_10461
mod = relay.transform.InferType()(mod)
output = func_10461()
func_10462 = relay.Function([], output)
mutated_mod['func_10462'] = func_10462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3418_call = mod.get_global_var('func_3418')
func_3419_call = mutated_mod.get_global_var('func_3419')
call_10471 = relay.TupleGetItem(func_3418_call(), 0)
call_10472 = relay.TupleGetItem(func_3419_call(), 0)
func_3379_call = mod.get_global_var('func_3379')
func_3381_call = mutated_mod.get_global_var('func_3381')
call_10479 = func_3379_call()
call_10480 = func_3379_call()
func_5784_call = mod.get_global_var('func_5784')
func_5788_call = mutated_mod.get_global_var('func_5788')
const_10489 = relay.const([5.061383,2.379278,8.117326,-7.063289,7.284167,-1.894245,5.528402,-6.811691,-5.888615,-5.294444,-6.303684,-8.618402,-5.326744,-6.072977,7.472976,-8.312929,7.099042,-9.981944,-3.776092,-0.038540,9.397748,7.126344,-4.417253,0.969891,-2.091560,-8.569882,2.983356,-2.419090,0.212133,9.554867,-8.924384,7.589988,2.494025,-9.451653,-9.312535,8.133072,0.530076,-4.106132,3.852541,-5.578735,8.705964,-6.361867,6.592655,9.732744,-6.381060,8.513038,-4.526678,-6.906107,-5.375016,9.446725,6.126441,8.342921,-8.654507,6.945105,0.798643,8.950672,-9.290332,1.976493,-0.718045,-7.682307,-2.578064,-1.400126,8.674690,-5.992186,8.993726,-2.055391,8.833620,-1.973189,-2.671715,1.543233,9.536410,-1.377615,-6.130949,-1.058186,-1.285262,0.082881,-3.967875,-6.068642,2.080611,-1.071928,-5.582309,1.676799,-7.314443,9.090567,2.131499,-2.768373,-2.371892,7.052763,5.120588,4.655607,-5.174675,-7.723659,-0.375669,-5.764483,4.490612,6.333958,-1.620573,6.976189,-0.449389,1.690998,3.263652,-0.102814,-8.084263,1.880761,1.172984,-5.448712,9.002590,1.065843,2.332104,5.779136,-9.801371,-3.394736,-3.101862,4.978551,3.223285,-9.608819,-3.018950,-2.141554,-0.585288,-2.770801,-5.757403,-2.175821,0.667489,-3.574624,4.619814,-5.885644,-2.252690,-6.625747,-7.841482,9.481630,-5.397023,6.852206,-3.103996,-7.452839,1.645976,1.671237,6.276806,6.543823,9.312510,5.948683,-4.368920,-4.230565,-8.472446,9.190063,-5.241723,-6.771198,-8.502728,3.189560,2.558281,-3.444401,0.432418,2.467244,0.153841,2.249319,-3.931662,5.338759,-0.378955,0.042060,2.598037,-0.466967,2.675050,-8.615348,-1.972657,-5.970653,0.439651,-6.656087,-1.502121,3.321610,-7.440801,-5.962038,1.146668,2.910065,6.026853,4.979599,7.819303,-5.185657,-1.657189,3.120568,3.353835,9.716509,-8.887423,5.630248,4.361985,-8.554063,0.500766,-9.125323,-7.841438,0.708510,-1.147138,-1.937423,-3.104098,-1.715872,-4.150430,8.068398,8.194430,-0.018556,-0.363695,9.674276,4.131069,5.133714,-6.206956,7.235706,-6.632384,6.034064,2.157107,-2.426217,-2.345862,9.285027,-1.177180,-9.732304,8.687913,7.854551,-4.793039,6.453741,-0.649018,0.469634,-1.447026,-1.716400,3.730541,4.215645,5.495148,-1.896792,-8.239476,-8.174514,-5.072224,-4.427593,-9.694983,1.143454,-3.134444,-2.631875,5.991700,-3.838641,-3.592083,-7.511149,-8.429009,8.964873,-0.778720,6.946116,0.871152,0.143574,5.577829,7.278118,-9.178786,-9.499581,0.629052,7.406830,-2.510828,-6.452116,-3.790769,-2.254626,-1.674476,6.761967,2.859708,3.835756,-3.202314,-0.111864,-4.645665,4.805692,-8.691764,-0.441387,-7.509721,4.604483,9.407094,-3.637607,-9.135582,-3.710576,-7.147143,3.516776,-9.793919,-5.816383,-4.352912,-1.866046,-2.955370,0.714839,-0.981035,-0.473754,6.824914,8.191617,5.461711,4.183080,1.924624,-1.364759,1.971188,7.131693,-4.180403,-0.538182,4.400589,3.088915,9.172579,-8.003476,-7.559217,-1.634044,-4.105384,-2.394975,1.003053,-2.766829,9.845427,-9.346255,-0.104012,2.463308], dtype = "float64")#candidate|10489|(300,)|const|float64
call_10488 = relay.TupleGetItem(func_5784_call(relay.reshape(const_10489.astype('float64'), [6, 10, 5]), relay.reshape(const_10489.astype('float64'), [6, 10, 5]), ), 3)
call_10490 = relay.TupleGetItem(func_5788_call(relay.reshape(const_10489.astype('float64'), [6, 10, 5]), relay.reshape(const_10489.astype('float64'), [6, 10, 5]), ), 3)
var_10497 = relay.var("var_10497", dtype = "float64", shape = (14, 14, 9))#candidate|10497|(14, 14, 9)|var|float64
bop_10498 = relay.greater_equal(call_10488.astype('bool'), relay.reshape(var_10497.astype('bool'), relay.shape_of(call_10488))) # shape=(14, 14, 9)
bop_10501 = relay.greater_equal(call_10490.astype('bool'), relay.reshape(var_10497.astype('bool'), relay.shape_of(call_10490))) # shape=(14, 14, 9)
output = relay.Tuple([call_10471,call_10479,const_10489,bop_10498,])
output2 = relay.Tuple([call_10472,call_10480,const_10489,bop_10501,])
func_10504 = relay.Function([var_10497,], output)
mod['func_10504'] = func_10504
mod = relay.transform.InferType()(mod)
var_10505 = relay.var("var_10505", dtype = "float64", shape = (14, 14, 9))#candidate|10505|(14, 14, 9)|var|float64
output = func_10504(var_10505)
func_10506 = relay.Function([var_10505], output)
mutated_mod['func_10506'] = func_10506
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10546 = relay.var("var_10546", dtype = "float32", shape = (1, 2, 8))#candidate|10546|(1, 2, 8)|var|float32
uop_10547 = relay.acosh(var_10546.astype('float32')) # shape=(1, 2, 8)
func_7502_call = mod.get_global_var('func_7502')
func_7503_call = mutated_mod.get_global_var('func_7503')
call_10550 = func_7502_call()
call_10551 = func_7502_call()
bop_10571 = relay.maximum(uop_10547.astype('float32'), relay.reshape(var_10546.astype('float32'), relay.shape_of(uop_10547))) # shape=(1, 2, 8)
func_4953_call = mod.get_global_var('func_4953')
func_4955_call = mutated_mod.get_global_var('func_4955')
call_10578 = relay.TupleGetItem(func_4953_call(), 0)
call_10579 = relay.TupleGetItem(func_4955_call(), 0)
bop_10582 = relay.bitwise_or(bop_10571.astype('int64'), relay.reshape(uop_10547.astype('int64'), relay.shape_of(bop_10571))) # shape=(1, 2, 8)
var_10588 = relay.var("var_10588", dtype = "float32", shape = (2, 2, 8))#candidate|10588|(2, 2, 8)|var|float32
bop_10589 = relay.greater(uop_10547.astype('bool'), var_10588.astype('bool')) # shape=(2, 2, 8)
output = relay.Tuple([call_10550,call_10578,bop_10582,bop_10589,])
output2 = relay.Tuple([call_10551,call_10579,bop_10582,bop_10589,])
func_10623 = relay.Function([var_10546,var_10588,], output)
mod['func_10623'] = func_10623
mod = relay.transform.InferType()(mod)
var_10624 = relay.var("var_10624", dtype = "float32", shape = (1, 2, 8))#candidate|10624|(1, 2, 8)|var|float32
var_10625 = relay.var("var_10625", dtype = "float32", shape = (2, 2, 8))#candidate|10625|(2, 2, 8)|var|float32
output = func_10623(var_10624,var_10625,)
func_10626 = relay.Function([var_10624,var_10625,], output)
mutated_mod['func_10626'] = func_10626
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10631 = relay.var("var_10631", dtype = "float32", shape = (15, 11, 10))#candidate|10631|(15, 11, 10)|var|float32
uop_10632 = relay.asinh(var_10631.astype('float32')) # shape=(15, 11, 10)
output = relay.Tuple([uop_10632,])
output2 = relay.Tuple([uop_10632,])
func_10634 = relay.Function([var_10631,], output)
mod['func_10634'] = func_10634
mod = relay.transform.InferType()(mod)
mutated_mod['func_10634'] = func_10634
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10635 = relay.var("var_10635", dtype = "float32", shape = (15, 11, 10))#candidate|10635|(15, 11, 10)|var|float32
func_10634_call = mutated_mod.get_global_var('func_10634')
call_10636 = func_10634_call(var_10635)
output = call_10636
func_10637 = relay.Function([var_10635], output)
mutated_mod['func_10637'] = func_10637
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10652 = relay.var("var_10652", dtype = "float64", shape = (16, 9, 1))#candidate|10652|(16, 9, 1)|var|float64
uop_10653 = relay.atan(var_10652.astype('float64')) # shape=(16, 9, 1)
output = relay.Tuple([uop_10653,])
output2 = relay.Tuple([uop_10653,])
func_10662 = relay.Function([var_10652,], output)
mod['func_10662'] = func_10662
mod = relay.transform.InferType()(mod)
var_10663 = relay.var("var_10663", dtype = "float64", shape = (16, 9, 1))#candidate|10663|(16, 9, 1)|var|float64
output = func_10662(var_10663)
func_10664 = relay.Function([var_10663], output)
mutated_mod['func_10664'] = func_10664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8567_call = mod.get_global_var('func_8567')
func_8569_call = mutated_mod.get_global_var('func_8569')
call_10740 = func_8567_call()
call_10741 = func_8567_call()
func_10380_call = mod.get_global_var('func_10380')
func_10381_call = mutated_mod.get_global_var('func_10381')
call_10794 = func_10380_call()
call_10795 = func_10380_call()
output = relay.Tuple([call_10740,call_10794,])
output2 = relay.Tuple([call_10741,call_10795,])
func_10796 = relay.Function([], output)
mod['func_10796'] = func_10796
mod = relay.transform.InferType()(mod)
output = func_10796()
func_10797 = relay.Function([], output)
mutated_mod['func_10797'] = func_10797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10461_call = mod.get_global_var('func_10461')
func_10462_call = mutated_mod.get_global_var('func_10462')
call_10813 = relay.TupleGetItem(func_10461_call(), 0)
call_10814 = relay.TupleGetItem(func_10462_call(), 0)
output = relay.Tuple([call_10813,])
output2 = relay.Tuple([call_10814,])
func_10817 = relay.Function([], output)
mod['func_10817'] = func_10817
mod = relay.transform.InferType()(mod)
output = func_10817()
func_10818 = relay.Function([], output)
mutated_mod['func_10818'] = func_10818
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10822 = relay.var("var_10822", dtype = "bool", shape = (3, 3, 13))#candidate|10822|(3, 3, 13)|var|bool
var_10823 = relay.var("var_10823", dtype = "bool", shape = (3, 3, 13))#candidate|10823|(3, 3, 13)|var|bool
bop_10824 = relay.logical_or(var_10822.astype('bool'), relay.reshape(var_10823.astype('bool'), relay.shape_of(var_10822))) # shape=(3, 3, 13)
output = relay.Tuple([bop_10824,])
output2 = relay.Tuple([bop_10824,])
F = relay.Function([var_10822,var_10823,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10822,var_10823,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_216 = relay.var("var_216", dtype = "float64", shape = (13, 2, 3))#candidate|216|(13, 2, 3)|var|float64
uop_217 = relay.acos(var_216.astype('float64')) # shape=(13, 2, 3)
output = uop_217
output2 = uop_217
func_220 = relay.Function([var_216,], output)
mod['func_220'] = func_220
mod = relay.transform.InferType()(mod)
mutated_mod['func_220'] = func_220
mutated_mod = relay.transform.InferType()(mutated_mod)
var_221 = relay.var("var_221", dtype = "float64", shape = (13, 2, 3))#candidate|221|(13, 2, 3)|var|float64
func_220_call = mutated_mod.get_global_var('func_220')
call_222 = func_220_call(var_221)
output = call_222
func_223 = relay.Function([var_221], output)
mutated_mod['func_223'] = func_223
mutated_mod = relay.transform.InferType()(mutated_mod)
var_269 = relay.var("var_269", dtype = "float32", shape = (14, 16, 6))#candidate|269|(14, 16, 6)|var|float32
const_270 = relay.const([[[-6.805125,3.040504,1.238721,1.580100,9.945073,-8.897206],[-6.354981,-8.735392,0.046086,7.242985,2.644619,-4.871417],[-8.869989,-3.595389,-8.629334,-7.850646,-6.017664,9.933735],[-2.486470,-6.719021,3.344040,3.529192,-2.676812,9.509808],[-6.746306,9.527087,-3.968998,9.160624,-7.772364,9.141977],[-0.602754,1.950163,-1.727333,-1.095558,-7.926100,-0.158268],[7.987873,9.924222,7.435306,2.229193,7.443919,8.750526],[-5.362597,-0.781728,7.289840,3.022003,3.153280,-7.305701],[-9.391853,-9.983684,-7.633515,-6.072820,-9.900494,9.664772],[-6.623708,0.332304,4.462981,3.508581,-4.329909,9.499055],[-6.016978,3.401314,1.238392,2.122656,-5.417453,-2.519492],[-1.240431,2.320089,-7.565416,-6.843552,9.991236,5.656539],[-2.071072,8.650045,-8.861872,-0.787160,5.270071,5.470662],[-0.080231,-4.451797,-0.920064,7.423483,-2.307109,-6.060938],[3.098233,9.257464,-8.961563,1.857690,-5.191652,6.387120],[2.309846,9.950719,1.236158,-4.951778,9.965217,4.625793]],[[2.559529,-6.106149,8.741931,7.866796,6.844930,7.114657],[5.079083,-4.014060,1.745652,-6.564881,-4.635467,-0.489710],[-0.210421,1.107280,9.200502,-5.379267,0.271559,-1.844169],[8.201081,4.548013,7.633211,-4.203241,6.941375,-8.616622],[1.095052,-4.305634,-3.747054,9.475188,0.398396,-6.800620],[5.383486,8.038744,2.816909,8.764599,5.181079,0.478781],[-3.163008,6.624240,-7.363541,-2.916573,9.782361,8.616838],[7.291071,-6.647747,1.847110,-9.755401,3.601200,6.565888],[7.745391,1.243262,2.040544,2.737096,0.136137,-4.919651],[-0.012870,3.038159,8.060926,4.449161,8.376261,6.843463],[-3.985227,-7.175934,0.357959,-7.427248,-4.438336,-0.409318],[-3.124141,9.092068,-1.023583,-5.602562,1.661022,-2.468906],[-3.619769,3.549701,-3.420292,1.251354,-4.060464,-7.776359],[6.763206,0.889572,2.891743,-4.420278,8.663432,6.058606],[9.237102,1.883301,8.139982,3.796458,8.956261,6.513038],[7.170053,8.695613,-8.833880,1.853424,-4.200954,-4.503423]],[[-3.803955,-6.454269,-1.434410,-5.263363,1.059903,-8.445602],[9.634573,-9.677179,2.249563,-8.920974,-1.426577,-9.574035],[-5.538389,4.141981,-1.837191,-8.423444,-0.833744,6.563442],[-6.638372,-3.010296,6.490605,-1.481711,-2.989240,7.998849],[-5.177669,-3.080269,0.842128,-6.829489,-1.468584,7.432734],[2.915701,-1.968258,-5.086018,-4.915901,3.047966,-0.768354],[-9.643360,8.404944,6.793678,-5.466538,8.189412,9.783698],[3.426166,-5.748295,3.497180,6.898789,0.807264,-1.747786],[4.494211,-7.222423,2.191372,1.283281,5.320820,-8.385336],[9.487248,-6.593199,6.098638,-4.743216,9.649846,-9.547747],[-6.073599,2.076990,3.751290,5.959360,3.830156,0.387542],[-5.860120,-3.927402,-9.036952,-2.935430,3.427512,-9.297255],[-8.539317,8.924147,5.592380,-5.418387,4.386577,8.987662],[4.114628,4.555972,-9.532554,5.825221,8.628778,-8.322657],[-0.399412,-5.541615,6.115428,-7.553367,2.223796,-1.946817],[-2.094378,-5.474699,-0.384820,-7.039503,-6.843734,-6.911987]],[[4.501984,6.718320,6.620648,-1.068514,-4.310614,2.554254],[8.702081,-8.073664,-0.248645,0.838432,3.042070,-7.545023],[8.479501,-2.818987,1.789472,-6.121652,-0.233788,2.516840],[1.856284,-0.658581,-9.940766,7.248235,4.708036,-1.286333],[-0.827037,-9.316908,0.220195,-0.898603,-0.097980,-0.749706],[1.283445,-7.287938,-6.404672,-3.698966,3.861411,-7.663939],[-3.787360,5.571831,2.065362,4.623340,4.116640,0.255812],[3.617090,3.943982,-8.252908,8.167621,-0.230549,-0.837300],[4.390977,-9.031229,5.135554,7.850363,-3.913273,8.157873],[-5.433411,-8.251323,9.195023,8.486871,2.598724,-1.439273],[-9.683814,4.172945,5.638524,-2.014302,-3.089116,5.799747],[0.223508,-9.364582,1.546263,9.369869,-0.974123,5.018859],[1.639144,-0.907673,2.583880,0.644959,-2.142999,-1.639276],[-8.049287,3.918746,4.001723,-0.130226,8.898786,-1.020759],[-0.670316,-8.607953,6.613162,-1.503079,-7.656719,0.602611],[1.778723,-8.460880,-5.955087,4.344591,5.182229,7.026526]],[[3.978508,8.591799,-0.019227,8.090245,9.235608,-4.270160],[9.381963,1.107018,3.251405,4.520189,0.699588,7.211952],[-3.397035,-8.271658,3.812494,-3.250175,0.856645,0.723227],[-9.187651,2.344820,-7.019846,-2.185251,-6.190683,-2.385401],[2.841478,7.428767,5.090146,-4.582680,5.395704,7.633083],[-2.139385,-0.435228,7.226717,-0.213403,-6.850788,9.948890],[4.339408,9.873742,2.944591,5.404637,8.955472,-2.035512],[3.494378,3.601301,3.088665,3.478005,-5.507333,-8.799356],[9.245120,7.489870,-6.521998,5.651421,2.862258,1.561864],[-5.018971,3.780561,6.060879,-5.662256,-5.890418,-7.976825],[-6.739547,2.624420,9.734092,-1.731953,-3.047059,-7.891743],[-3.128356,-0.680291,-0.582149,-1.212831,6.077087,5.506960],[2.826805,6.888068,0.118502,-0.375887,-7.922819,-5.214552],[2.817106,-5.302972,9.705962,-6.004468,-2.320264,3.186274],[-2.378672,5.642747,8.162635,8.890777,-1.392863,-0.366463],[-4.733378,7.301970,-5.643670,-0.453107,-3.467654,-7.242213]],[[0.754211,9.875973,1.598515,1.983445,6.888898,9.942994],[7.417721,3.545779,-3.603337,9.465255,-7.296592,3.049635],[-7.651960,-8.682468,-9.335282,-9.685497,3.607235,-4.633126],[-8.653649,8.679853,-2.091071,-2.647699,4.843344,-3.541840],[4.472367,-2.086760,-7.493707,3.950011,1.545733,-1.138123],[-7.341905,4.855494,-8.502418,-3.114450,8.652307,-8.346571],[6.330598,9.933488,5.201436,-3.384481,0.770367,-2.206564],[-5.863576,2.634439,-7.627788,1.106369,-2.643751,-5.920579],[-9.101341,-7.459675,-3.679733,-8.885947,0.253562,-4.707851],[1.571912,-6.906462,7.656002,-1.758049,-7.984229,6.958248],[8.595780,1.257604,-2.572832,3.668526,-4.456811,-0.179020],[-4.984823,-9.628024,4.310241,-3.592907,0.608697,9.054280],[-3.555935,-5.956357,5.169263,6.833040,0.393177,1.768515],[-7.710614,-1.710367,-3.716136,-0.542298,8.121622,-4.606322],[6.107898,4.704099,7.038701,-0.649188,0.388959,-9.480650],[-2.028152,8.925614,-8.012152,1.448808,4.617439,-0.954253]],[[6.994441,3.194237,0.176178,9.561619,-0.826085,-2.684486],[2.096450,2.081177,7.131675,-2.971612,6.632064,8.652136],[-7.802911,5.394641,3.812872,8.946887,-3.364038,4.809549],[-9.618322,-8.528833,-0.003351,3.798889,8.268363,-4.834046],[-7.093802,2.768531,-2.038098,-8.620367,5.674316,8.931871],[9.276395,3.111079,4.485772,2.693189,9.633423,-6.300755],[-8.272800,-4.138403,5.900423,4.292652,3.110124,2.530675],[3.548787,-8.084396,9.192096,0.854486,-6.556340,-1.410130],[-5.994132,0.203745,-9.704952,2.000288,4.293449,-1.727827],[-2.845684,1.249192,-1.089669,4.748539,-0.028732,1.325375],[6.972687,-2.485684,7.207662,9.897793,-3.078816,-9.952147],[2.420314,-1.543967,7.225564,6.942672,-1.207443,8.987798],[5.848065,-2.127025,-1.312056,-8.637142,7.799033,0.169017],[9.443483,-9.839093,5.200347,-6.685202,-0.026932,-6.532798],[-4.842511,3.221316,-0.017644,1.565207,2.480635,0.638183],[1.246771,-9.172595,-9.624616,-8.918058,-7.364062,0.949927]],[[0.986302,-2.437675,-2.717266,0.196830,-1.305641,0.864864],[4.648268,5.384439,0.497529,-4.409689,-3.434192,8.092825],[-3.591886,-6.130538,-5.333674,-5.063981,-0.371082,9.219779],[3.400452,2.110483,4.670855,-7.396429,1.008419,0.242396],[-0.601904,-2.393273,-1.444161,5.147455,3.324363,-8.990539],[-5.489314,6.619509,3.954745,0.437278,9.373350,8.308371],[-8.254607,9.646843,0.064257,-9.547122,-9.344169,-6.034667],[-5.870131,0.750607,3.076070,2.598820,-3.499841,-2.026869],[3.671561,9.946239,-4.426806,4.392783,-4.012018,2.662275],[2.008405,-5.412956,-5.586745,2.768866,-6.922995,-1.574721],[-3.373859,7.868624,-1.922764,-4.604200,-4.715494,-3.369143],[-3.090382,4.409907,-8.257135,-6.526691,-2.122705,4.946958],[7.762160,2.088297,2.868500,-0.141205,2.262730,-6.286492],[6.712663,2.404435,-8.038370,6.007191,3.927959,-4.904531],[9.652466,2.529923,7.673950,-9.416902,6.998919,-0.170894],[5.201075,-5.891041,8.679571,-5.139897,-6.927987,-3.051829]],[[0.034866,0.642001,-7.341154,-9.665474,1.590865,6.628313],[-5.948387,0.019467,2.172562,-0.329930,-0.802739,5.201617],[2.093014,6.993933,0.555370,2.514708,9.361993,9.823845],[-3.761134,0.545951,2.570661,-5.457275,-5.526057,-1.787539],[9.289149,-0.876462,7.835784,8.071735,9.331954,-2.919025],[-2.050458,2.820714,8.263147,3.240994,-0.190160,7.085146],[1.287901,0.633721,1.014218,5.305165,-0.964084,7.709064],[1.640539,-7.560617,8.398239,8.732616,-6.700613,9.365187],[3.549988,7.926876,9.255920,-2.979417,-2.969843,-8.709382],[0.736542,5.010301,5.520373,0.356189,1.855609,8.738891],[8.707664,9.474425,5.737929,6.511131,0.272953,-7.535283],[9.963320,-7.358667,-2.000516,8.933474,-0.915297,3.982509],[2.320280,8.981766,-7.103760,0.855783,4.742321,-8.880173],[3.541182,-1.905423,-7.173712,7.779802,0.420698,-1.643739],[-6.068315,9.422379,-1.716413,-7.881024,6.379604,-0.044399],[-3.721106,4.310348,-9.172855,-7.073340,4.212241,0.753720]],[[4.114900,1.171216,-4.182262,-3.441584,-0.658117,2.406623],[-3.726006,-4.539411,4.718882,-0.926404,1.775088,-0.222437],[2.364038,6.632813,4.269207,-0.275726,-8.768224,9.983566],[5.037176,3.395057,1.714154,-0.343499,9.161637,5.280399],[-2.077558,-6.647459,-6.039998,6.419430,-4.071902,-8.269547],[4.554385,-1.096722,5.026012,-8.185133,-5.459598,-8.639814],[8.006571,9.062175,4.837326,4.533097,-9.338236,8.665951],[-0.877451,-5.280334,-8.154569,-4.662882,-7.943181,3.288778],[-8.403475,-2.712485,1.020064,-0.561479,-4.071275,2.888712],[2.119473,0.110777,1.605963,-1.747158,5.009877,-2.937448],[5.136864,-2.538291,3.623893,8.361203,3.370795,-6.343248],[-5.105793,3.255401,0.907284,1.249040,-0.858510,-8.582108],[3.780901,2.922549,-9.746909,-1.378490,5.775797,7.434960],[-3.268551,-7.545038,-5.980845,2.909652,-1.647086,4.854836],[6.878356,-5.493590,7.213539,1.297202,4.797925,-9.665406],[-7.142433,9.159648,9.079227,1.035842,-0.363187,4.570513]],[[-3.208719,9.589914,-2.584392,-5.998974,6.596275,5.515110],[-4.622238,-5.411004,0.312207,6.427942,9.375795,6.359225],[3.121583,4.484260,3.540080,-7.470806,3.865651,-5.270301],[0.286263,3.740879,0.640055,3.613815,-0.356477,5.997549],[-7.769656,3.766372,5.289987,-1.029493,2.322502,-7.583159],[1.862450,9.213164,4.947931,-1.712090,-7.432305,3.843338],[-7.285547,0.087647,-0.857383,-2.073749,5.329075,8.120160],[4.299438,1.404713,0.341762,6.282245,5.470549,5.059251],[-2.356529,2.878132,3.970950,-6.592570,3.785301,-9.435565],[-0.097431,8.982893,6.154531,-4.670132,-2.237559,5.586775],[-3.918082,-6.028868,1.643930,-1.603799,7.190381,7.200936],[-3.295076,-6.120724,8.499880,-9.698248,-1.264117,-4.803123],[-3.299249,-4.505513,-8.792579,-4.238807,-1.284569,-3.576898],[-1.801099,2.468649,-1.420079,-9.221850,-6.272639,5.619857],[-0.468536,4.772753,8.552165,-5.158826,-1.757557,-7.927291],[-6.646876,2.161478,-5.491125,5.654939,-9.126874,-5.351244]],[[1.236369,-3.945241,-7.209491,0.732408,0.276765,5.122125],[-3.562904,-3.537540,-0.930195,-0.250706,5.439732,4.039714],[3.912689,-2.997217,2.528685,4.492203,9.744276,-1.899066],[4.982127,-6.146906,-9.210323,3.623077,1.417380,1.531909],[-5.263624,5.269676,-2.667535,0.588874,7.326935,5.152151],[5.529732,1.377137,-6.186138,-6.337930,1.953342,-5.096978],[-6.135506,8.014198,0.995416,4.380404,-5.075457,3.234904],[9.669293,-6.377942,-2.134530,3.291342,-7.753511,1.167444],[-1.044301,-8.259130,-1.012992,2.260429,-7.595959,0.886798],[2.477835,-6.822316,0.247230,-7.691930,-7.343124,6.747578],[9.062005,-1.289712,5.551523,-2.558953,5.400099,5.730154],[-5.312026,-5.552513,2.290438,-0.171277,-9.263735,-7.725189],[0.574733,-2.438162,-3.822039,-3.446310,-7.499734,9.956040],[-5.620035,5.770726,3.793488,-1.964953,8.075822,-1.193153],[-0.174583,-1.124117,4.369608,-2.603374,5.681851,9.950887],[-8.052419,7.776967,-1.905723,-5.303653,4.361335,8.551113]],[[-4.550891,-0.310057,-4.815892,9.051812,4.329044,-2.620634],[-7.434291,8.895066,7.513628,4.162272,3.688962,2.628411],[-0.629920,-7.864370,6.975470,-7.845574,6.496881,-2.223083],[6.111283,-8.186312,0.678274,-4.360207,0.565027,1.471224],[-1.611374,-9.940911,-1.412996,3.079383,1.099873,-0.372722],[5.164208,4.577732,2.681557,2.192354,8.039405,7.800786],[-7.292596,-8.965644,-6.604760,-5.949693,5.640532,-6.168378],[-7.611882,-9.375142,8.442263,8.632072,8.488601,-7.485119],[-3.947263,0.003474,3.121892,-3.753400,-0.997089,-7.660493],[-9.818583,7.975727,9.967140,1.883648,-1.920130,-5.506613],[-8.515042,-9.687895,-7.534470,-2.567607,-4.407430,-9.953868],[0.686675,2.068832,2.215965,-0.945213,4.916137,9.525198],[1.813432,-9.559323,-1.417456,1.879024,-3.659178,-7.665897],[-8.185274,8.372980,4.641454,3.210808,-9.853357,-8.099596],[-6.939743,-4.030347,2.823483,-2.764341,-2.441376,-9.844696],[4.229051,-4.057421,9.126789,-6.255290,3.638158,1.875421]],[[3.869078,4.725078,8.207822,-7.521751,-2.522667,0.474169],[-2.828617,-9.205773,0.238007,-2.476774,4.456431,-0.871692],[6.527970,-9.910706,4.114844,8.345283,-0.019828,-6.028017],[8.127579,8.439879,1.275414,5.049884,6.442645,5.262968],[-7.111770,0.445722,-2.467267,-6.170044,9.990387,-1.423186],[-6.882758,7.609078,0.386361,1.029309,-0.073595,-7.174547],[1.863321,-6.150725,-3.775087,7.492839,5.171846,-4.635169],[0.831488,5.957692,1.073080,7.465970,-3.183968,7.490982],[-5.433407,-8.820812,1.716866,8.896017,-2.861670,8.831905],[9.409905,6.218548,-2.648728,-3.990539,-2.984805,-5.219342],[8.889414,-1.793792,-2.055132,4.554930,-3.642056,-4.122647],[7.668685,-2.805197,9.117074,-5.830340,0.959392,4.023990],[3.972430,4.505379,2.618045,6.948747,3.583474,-0.381419],[0.620822,-6.997391,1.156667,-8.141744,-3.571166,-7.580632],[-6.370926,-2.608308,-6.761235,0.019077,9.999445,-6.955254],[-0.532641,-4.636962,9.900986,-0.606138,-6.348641,-0.054653]]], dtype = "float32")#candidate|270|(14, 16, 6)|const|float32
bop_271 = relay.mod(var_269.astype('float32'), relay.reshape(const_270.astype('float32'), relay.shape_of(var_269))) # shape=(14, 16, 6)
output = bop_271
output2 = bop_271
func_275 = relay.Function([var_269,], output)
mod['func_275'] = func_275
mod = relay.transform.InferType()(mod)
mutated_mod['func_275'] = func_275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_276 = relay.var("var_276", dtype = "float32", shape = (14, 16, 6))#candidate|276|(14, 16, 6)|var|float32
func_275_call = mutated_mod.get_global_var('func_275')
call_277 = func_275_call(var_276)
output = call_277
func_278 = relay.Function([var_276], output)
mutated_mod['func_278'] = func_278
mutated_mod = relay.transform.InferType()(mutated_mod)
var_901 = relay.var("var_901", dtype = "int64", shape = (5, 10, 7))#candidate|901|(5, 10, 7)|var|int64
const_902 = relay.const([[[10,-10,2,-6,-5,8,9],[-1,-2,1,2,-8,5,2],[-6,1,-8,-2,3,7,4],[1,-9,8,-3,-3,-3,5],[5,-7,-4,6,1,2,6],[2,-5,3,-7,5,10,-3],[9,2,5,-6,2,-1,-1],[-5,-2,-7,9,-3,9,-6],[-8,-3,-7,4,8,3,3],[3,6,-1,6,-9,7,3]],[[10,6,-8,-6,6,9,9],[4,-7,-5,4,3,-5,-6],[4,8,-9,-1,-3,-4,-6],[-3,-6,-6,1,-5,-7,-6],[1,-7,-1,9,9,-7,-9],[-3,5,-10,10,-3,7,-7],[-8,-9,5,4,-10,6,-2],[-6,-5,6,3,-10,-3,-6],[-4,-5,6,-1,-1,-8,7],[2,6,-2,7,10,7,-2]],[[6,-1,1,-3,1,9,-1],[2,-1,-1,4,-8,3,-10],[-10,1,2,-6,-5,9,5],[7,-5,5,-7,2,10,-4],[-8,3,9,-5,5,4,-2],[-7,3,4,7,3,-8,5],[5,-4,4,-4,-3,-5,-10],[-8,4,-1,9,6,-9,-10],[-3,6,4,4,9,-4,7],[-9,-10,1,-2,2,10,-9]],[[-6,7,-4,9,2,10,1],[2,-5,5,9,9,10,3],[9,10,-1,-7,9,6,1],[-5,-10,-10,-9,10,3,-9],[3,7,-6,-9,6,-3,-4],[-8,-5,-7,1,9,2,-8],[-1,2,-1,-7,-7,-5,2],[8,6,-1,9,5,-3,10],[6,-2,6,-8,-2,5,1],[2,7,1,6,-6,8,-6]],[[8,8,-7,10,8,-2,4],[10,7,-1,2,10,4,6],[9,-4,-10,-2,7,-2,-9],[5,-2,-1,7,-3,-3,-8],[3,8,-5,-1,-7,4,5],[8,10,7,8,-9,9,-5],[-9,7,8,3,8,-10,5],[8,10,3,-7,10,-10,2],[4,-2,-4,-4,6,6,9],[10,2,3,-4,-3,-9,-8]]], dtype = "int64")#candidate|902|(5, 10, 7)|const|int64
bop_903 = relay.bitwise_xor(var_901.astype('int64'), relay.reshape(const_902.astype('int64'), relay.shape_of(var_901))) # shape=(5, 10, 7)
func_275_call = mod.get_global_var('func_275')
func_278_call = mutated_mod.get_global_var('func_278')
const_907 = relay.const([5.413934,-4.634754,1.102847,7.372549,-1.695755,-8.744516,-3.789733,-1.797949,7.162288,1.563924,-3.143671,-4.962690,-6.259119,3.421643,5.833150,1.058840,0.197693,4.489270,-2.901099,-3.649757,3.097281,3.339161,-7.128626,7.133879,0.039589,-4.850980,1.058499,-2.024616,1.810886,2.728128,9.883414,-0.571309,8.470512,9.897628,-5.033595,-0.540603,6.719247,2.942523,4.835716,2.423144,1.935762,-0.220405,-2.613535,5.409000,-2.801498,-8.103337,5.201511,6.560227,-3.650472,-1.366837,-0.470466,5.765000,-7.272423,-6.719933,5.661041,-6.555821,7.726608,5.364746,6.336995,2.182326,-4.710588,8.113792,-9.074119,-6.300444,-4.173837,9.026066,5.183507,-2.854061,-6.875445,0.519315,-8.540920,-1.286616,-0.983198,-8.484048,-8.180131,-0.819229,9.859549,-4.446155,-1.536768,0.948163,4.566595,5.394169,0.654107,1.521868,-3.233494,8.372632,-6.749438,-8.540995,6.661580,0.847190,2.941621,-3.381339,0.131763,-7.540680,9.203712,-5.530566,1.352770,3.474184,0.918667,-2.635800,2.173375,8.163185,3.655281,5.700525,-3.946328,1.141423,-7.407815,-4.114971,-1.617243,1.741510,-7.191847,5.107263,8.288955,-7.408649,3.748643,6.102250,-6.371858,-0.577733,-9.875428,6.011402,-5.502196,-6.524488,-9.847496,4.565718,-3.381516,1.104843,-5.383247,-4.746683,7.022241,1.219120,9.862728,-3.676146,8.944272,8.239257,-9.842452,-3.900779,5.663223,2.780238,6.428892,6.530180,2.829973,6.179960,1.167121,2.956421,-2.391001,4.275949,5.739022,-8.835236,-2.172956,0.422188,-8.014687,-7.407254,-8.386749,8.185909,-9.719091,7.180280,0.991668,4.019658,-4.780405,-7.557266,6.041843,-1.979745,5.583827,5.443793,8.983823,-1.575452,-8.230521,2.979723,-3.361952,4.954407,4.997194,-5.820510,9.095169,0.796786,-9.617242,-5.762290,7.496015,8.711602,8.875664,4.704434,7.988891,-1.392776,-7.276049,-0.046697,6.539877,2.004751,1.452240,3.603919,2.118283,-7.536679,-1.284898,-0.755946,-6.037891,-5.399075,-6.833395,-0.409533,5.101637,-6.802632,-3.934995,-3.043022,-6.563821,6.534864,4.781049,-0.191219,0.745608,8.742051,5.395290,-0.420050,2.604400,-8.779167,-1.360978,6.297765,0.300890,9.509489,-3.666046,2.112358,8.856196,-8.185285,-8.123487,3.401689,-1.440990,5.806658,-5.561751,9.501865,8.542654,-6.838711,-7.971079,0.777825,5.718445,0.688725,8.348092,-6.906280,4.311613,2.359583,2.330424,-1.723764,3.161483,0.007966,3.580791,2.422556,-5.739953,-1.435533,2.131032,1.395613,-7.102355,6.816199,2.774144,-1.497649,-5.939311,-2.863938,-6.552861,9.900808,6.997649,-5.812859,8.417739,4.744477,5.577093,-5.730452,7.098312,1.169186,0.442602,2.147458,-6.802088,3.083009,-4.703097,-8.574779,-5.010946,-4.826761,-1.212815,-1.054426,5.855014,-5.531105,5.451098,1.102362,-1.778183,-4.906299,8.318035,-0.637927,4.435073,7.731013,-7.447496,9.375856,0.297367,-3.417829,-1.249772,-8.872560,-0.823729,-8.312931,5.789771,-8.130484,-0.557198,8.997319,2.642187,6.542060,-3.875989,-4.522753,-1.700082,9.279645,9.171412,6.686405,8.182786,2.767412,-8.079934,8.472453,-5.203616,0.368564,6.393480,-9.988011,5.055454,0.849039,-1.304167,-1.808409,1.115537,3.812243,7.344002,-9.845508,-9.007744,-0.922375,1.312025,-4.859506,2.963324,-0.971809,1.667894,1.721990,-8.954288,-3.094515,-1.846898,8.097415,-2.571543,4.169892,-6.565818,-5.420017,0.726854,6.226429,3.463679,-3.651625,-4.212155,5.754916,-6.794266,-4.058435,9.693514,0.293463,1.460997,-5.247476,2.037587,2.183327,5.378551,-2.191380,-8.867848,-3.466626,-8.286645,-4.212960,5.727762,-0.393202,3.287307,5.059891,6.680820,-3.891014,2.035081,-1.091316,-4.197573,-8.156965,-3.633108,9.863294,2.831833,-1.932679,-6.505750,-4.011082,-0.156015,2.722895,9.319910,-5.400608,-5.942800,6.772905,2.729406,-3.250814,1.871687,-7.152954,-9.325944,-8.416947,9.079568,3.220281,7.120588,1.507501,-4.682736,3.738752,3.525922,-8.592836,7.804150,-3.513580,5.759221,-3.340631,9.951731,-1.275338,-8.464075,1.362517,7.017271,-4.980257,-0.462655,-3.996295,-3.265510,-7.776829,-3.354817,4.254272,-1.876555,-0.894486,6.886271,-9.472263,0.379653,-5.163042,2.162734,7.431556,-2.847438,-9.831889,-3.740584,1.398879,-2.918216,-3.685155,-3.115876,-4.774514,5.177773,-1.420354,-6.174169,-4.470767,-5.242287,4.538562,-8.217012,-6.419911,-8.694803,-5.288348,-2.888944,-1.126652,5.454299,7.528051,-7.211043,5.031672,-4.766561,-1.078027,-0.657376,8.861192,9.243375,9.422956,4.290682,-8.549851,-1.849462,-7.264773,-9.361815,5.352667,-3.126862,5.904612,9.758997,-2.758239,8.520682,-2.580498,3.921889,-3.766793,-2.818664,1.735899,2.958509,-0.270466,-6.077892,-4.660516,6.969616,-9.066938,-0.706108,-6.113508,-9.895620,-9.457977,-5.859948,-0.925482,-6.354342,-9.848163,-7.354434,-4.180979,-3.449043,9.116391,-5.529325,4.050777,9.679118,5.129293,-2.945646,9.822885,-1.059276,-3.852613,-2.007674,2.850745,2.408704,-6.640127,5.002230,9.215746,0.551525,-8.201560,7.239656,9.157128,0.010239,-8.055972,-3.343930,5.049549,3.888554,6.511763,-8.716280,-0.519368,4.559315,6.787964,-2.576288,-6.831683,5.264919,8.016502,-6.301366,1.137897,7.416172,3.051089,-9.026176,-1.097279,-8.634342,3.785175,-5.441558,-8.203514,-5.761171,-0.632575,4.541702,-3.856174,4.211317,5.753953,-4.920986,-7.310113,-3.493857,-7.114831,-1.371460,5.413157,-0.662411,8.428542,-9.669358,-5.581341,9.505201,8.310732,1.713598,7.508835,7.734831,0.468008,7.403334,0.697043,2.035817,-6.122181,8.232803,0.812443,9.178682,-7.676304,-4.831825,-3.855086,-8.066367,-6.746117,-1.053296,-3.293087,-6.111972,2.635638,6.171991,-6.204712,-6.812565,-6.821906,-5.856877,-4.167795,-1.039688,0.177425,7.135537,-3.823572,-3.085487,-9.038778,-0.366338,-5.769269,-8.139061,6.154500,9.685187,-7.661459,-2.787024,3.529668,-1.765571,-1.572246,-8.687638,-1.691437,-2.936140,6.001294,7.723765,0.169374,9.489185,2.379337,1.401441,7.340912,-4.919143,0.947014,4.830388,0.633306,-0.643373,-4.122070,0.504518,-8.734807,-3.128985,-0.060430,8.689541,2.688785,-2.244766,-9.871784,8.734822,-9.318560,-4.999962,3.652137,-1.305852,5.708477,-1.650492,8.259433,-0.108311,5.529499,-9.821027,8.386054,0.976083,-2.395628,1.020764,-7.228000,-9.102635,-9.075583,-6.945889,-6.657875,-9.032645,3.610954,-4.034445,-8.273669,-5.006380,3.514837,-5.600381,3.860156,2.381999,5.965886,-7.738513,-1.210609,-2.555084,7.433386,-1.809313,9.994775,-7.037672,9.010003,5.666936,5.741931,-9.205569,-1.498422,4.360629,-6.043588,0.099644,4.832400,3.091606,5.517258,-8.313164,-2.250373,-7.050468,9.614113,-1.133235,8.409134,6.360499,-0.308774,3.274096,-1.502743,-2.877486,-6.532718,-9.503743,6.933448,9.193262,4.286694,-2.662661,-4.994511,4.864918,4.069657,-9.654127,0.778061,1.778096,3.565077,4.487455,-8.139724,8.448650,4.917865,-5.555241,2.694532,8.322646,-0.990674,2.507940,9.626647,-0.564378,-8.479652,3.932552,-7.546900,4.167525,-8.039919,2.852451,-9.413482,8.774545,-4.584853,6.662569,0.442080,-5.212820,-7.277198,-8.889595,-2.442220,-9.930333,6.341134,5.623248,-7.622746,-2.043486,0.354153,5.259671,-4.197113,9.122321,7.521406,-3.842743,-9.678150,-4.606052,-2.714648,-9.494273,4.970089,-9.392388,-9.727719,0.296151,-3.417250,0.991094,3.834366,-0.005591,4.939186,0.101089,-0.965646,4.630661,-3.291829,7.186915,-9.467581,-8.651424,-3.181247,1.530158,-4.060604,0.139115,-2.638805,-0.342992,-5.936542,1.806909,-2.990738,-6.250550,-4.045863,3.966641,0.367180,-6.490170,-7.231197,6.132766,5.205587,-2.282490,2.398181,-0.852811,-2.150614,-4.734243,4.693379,6.891436,-4.293696,-9.988134,4.070673,9.265652,-5.264805,3.083439,-6.238125,0.299845,4.141351,1.829016,-7.801821,-0.291544,-3.005675,7.912948,-5.373449,-2.605335,-9.425227,7.336913,-9.269064,-0.611638,-3.812293,-1.819147,-0.538329,-1.147941,3.243509,9.733515,-3.494462,-5.163165,-1.169130,-2.332886,-7.401991,4.597995,-9.890581,7.635214,4.023389,6.943718,3.678489,6.500628,-4.368175,9.732850,5.446843,5.340697,-9.264985,5.886279,7.605690,4.728312,-8.378354,-3.869329,8.707645,2.402889,2.245480,2.097582,-9.995126,-3.891503,-9.832602,-2.543399,-3.112640,9.603111,-7.668159,4.715235,9.598636,3.079024,9.599175,-9.727764,5.170306,-4.588700,-7.695102,8.993893,-4.367948,2.353122,4.601915,-7.548874,6.773200,-4.945831,-8.396707,6.428483,-6.232312,9.734592,-6.938057,2.302251,-0.605267,-2.841596,8.718987,7.670049,-6.502150,-6.134322,5.410569,5.582779,8.006764,-0.814193,-9.192717,8.269190,-0.521763,-6.762129,-9.409838,6.795824,9.311186,6.010493,2.474801,-1.056523,-5.423006,-1.503246,-4.884712,-7.869201,6.385805,6.874646,9.298127,4.328673,-9.238422,-1.289899,0.217806,6.615160,-9.294977,1.452879,4.459908,8.190304,-8.341757,7.914916,2.109807,-8.980681,-5.050544,-5.063497,-7.097085,-8.658049,-9.357047,7.787705,-1.420378,-8.686236,-5.528840,-8.702300,-2.014562,8.876614,6.945818,6.306351,-9.458677,-7.171254,2.956067,-3.616652,-4.857956,-6.603347,-8.677646,-5.526873,-5.606359,7.907717,-2.537378,6.671389,4.809774,1.243095,8.254561,9.983177,7.257969,1.354545,3.945752,-0.819270,-3.102596,-1.190161,8.522235,8.143402,6.120378,-1.223836,-8.760736,-4.572478,-9.155678,7.655675,-4.845153,6.930744,-9.433890,4.251493,3.093572,7.448915,-3.077673,-0.130944,-5.082472,-9.389201,-4.652621,9.989429,-1.258429,-7.378297,4.778616,-8.603749,-9.544403,3.683057,-7.716829,-1.962600,1.733914,5.050279,0.467800,5.769862,7.389932,-3.559386,-2.931960,6.004437,1.313567,0.563385,1.562042,3.281405,5.877390,-5.934713,1.419637,6.820582,-4.943006,-0.417356,-8.005842,3.732192,0.589006,4.712421,4.317235,-5.683958,-1.313452,5.960545,-6.950783,-2.133472,-2.703994,5.130005,1.070386,-0.096837,-9.979588,-3.039640,-1.025202,-7.486251,5.747307,6.562807,-8.749474,4.322901,5.380414,-2.619708,6.716923,1.804890,7.907939,3.374555,-5.444024,-6.494191,5.396820,1.946256,-7.913838,8.785399,-9.481074,-8.924929,0.554285,2.675269,8.676768,-9.437736,-5.810108,-3.692665,-3.537357,4.491653,4.093833,5.461596,-4.836315,-2.929796,3.067805,-1.234103,-6.649077,-2.607007,-5.300153,-5.119341,-3.325270,6.069120,-1.469691,-7.340361,2.230691,9.181060,-9.308615,1.018620,-7.801015,5.530032,-7.274510,9.172401,5.276185,-8.249501,4.276849,8.070206,6.499585,5.551630,-3.984643,-9.061613,7.674294,-4.644857,7.782224,-0.912295,7.241816,8.602708,6.896422,-4.927404,-1.866394,-7.836509,5.962457,4.600711,-6.530213,-5.323641,2.801991,0.989316,5.577305,-5.559132,8.012917,-0.971795,-6.417045,-3.793785,-7.263708,-3.977864,9.772984,-3.917931,-3.220279,4.323249,-6.286253,1.600354,4.267221,-2.270176,-8.803321,3.588180,7.069007,-8.379448,3.439267,7.738830,6.775486,-3.701764,3.866602,1.936283,3.759466,-1.873517,5.511599,5.098649,-8.149088,3.742752,-7.695791,7.363150,-3.488075,5.623797,-6.667913,8.417781,4.321445,3.396267,-7.448803,-6.237959,7.845362,-0.865404,3.208989,2.445041,8.227474,-3.053424,5.041169,-7.280758,-3.167957,6.023745,-5.864548,-1.198535,3.821527,-4.085575,0.070690,9.190930,-9.453827,4.364606,3.006345,3.959772,1.051697,-7.217749,1.924203,-2.902430,-4.782002,4.798943,-2.229707,-6.451691,7.426765,0.955517,-1.103833,4.170711,-2.515744,-8.931076,-7.687387,6.715307,2.225968,-5.972148,-0.415468,-5.498688,8.804536,8.003048,-5.734363,8.698013,0.846889,-5.328143,1.203371,-8.474510,-5.239978,8.030682,-0.979924,-8.369943,-7.999732,4.048410,6.578085,6.315632,5.591603,-0.827306,8.895097,9.902238,-1.219476,-7.970811,0.378118,-2.839750,2.699871,-1.955385,-6.516576,7.141767,-4.849138,6.374768,9.849674,-7.817458,9.542123,-7.803965,-7.981121,6.271567,3.688753,-3.837723,-1.349515,-1.777817,-9.855052,-0.786966,5.607196,4.376028,-9.714679,5.600629,3.890462,-9.848311,-6.872103,5.575222,-6.235644,7.999057,-5.319789,-3.374099,-1.563222,-8.756942,-2.651297,1.664361,7.762777,0.161993,1.325987,3.193649,-3.724724,-3.328589,-0.803259,3.385757,-2.882468,-9.096339,-7.448043,-0.730197,8.930614,3.681307,6.020202,0.352145,7.720291,-6.211337,0.400838,4.110583,2.776459,-2.217386,-3.738077,-4.762450,-9.810193,6.079805,0.181203,-5.964202,9.012633,-1.822955,-4.967858,8.106239,-1.724894,9.998883,2.977273,5.838646,-0.259462,-7.659022,7.397119,3.463692,9.581975,-3.953477,-5.189532,8.488209,-1.369460,-9.113009,3.194326,-2.620550,3.459511,3.451754,3.664629,3.697262,-4.114036,-6.010807,-6.126680,5.306675,-0.167543,7.135666,-9.719468,-5.813660,-2.332315,-7.377849,-2.903498,-1.778482,-8.832737,-7.168429,-7.957797,8.536315,7.265793,8.669001,7.215568,2.921489,-8.127847,0.073379,2.739026,-7.461681,-9.483195,6.232728,2.821572,6.151256,0.436257,1.506587,1.101950,-3.601568,-2.849535,3.198309,0.731041,-6.697610,1.065224,-1.306103,7.576001,-2.141048,0.172350,0.781776,2.541711,-2.488755,-3.763318,7.499176,-9.063305,6.464362,0.891799,3.697875,6.659967,-1.690517,6.231195,-4.018910,0.341261,-5.312046,-6.623474,-6.528646,-7.351969,8.588276,-6.206995,9.566122,-3.549721,-2.890655,0.374013,-8.161845,8.060292,3.758628,-0.239694,2.920784,-0.107447,-0.704846,9.080421,0.164931,-5.367106,0.985724,4.901467,7.549536,3.549675,9.824211,7.496061,4.495661,-6.769545,7.407850,-3.160936,0.412482,8.792845,-2.237684,-3.367916,-9.950800,-6.571308,1.865148,-9.043756,2.884254,-3.106308,-6.735016,6.245986,-5.825928,-4.438256,-8.215876,2.133004,-4.000743,5.274705,0.233075,-3.621261], dtype = "float32")#candidate|907|(1344,)|const|float32
call_906 = func_275_call(relay.reshape(const_907.astype('float32'), [14, 16, 6]))
call_908 = func_275_call(relay.reshape(const_907.astype('float32'), [14, 16, 6]))
output = relay.Tuple([bop_903,call_906,const_907,])
output2 = relay.Tuple([bop_903,call_908,const_907,])
func_923 = relay.Function([var_901,], output)
mod['func_923'] = func_923
mod = relay.transform.InferType()(mod)
mutated_mod['func_923'] = func_923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_924 = relay.var("var_924", dtype = "int64", shape = (5, 10, 7))#candidate|924|(5, 10, 7)|var|int64
func_923_call = mutated_mod.get_global_var('func_923')
call_925 = func_923_call(var_924)
output = call_925
func_926 = relay.Function([var_924], output)
mutated_mod['func_926'] = func_926
mutated_mod = relay.transform.InferType()(mutated_mod)
var_940 = relay.var("var_940", dtype = "float64", shape = (1, 14, 7))#candidate|940|(1, 14, 7)|var|float64
uop_941 = relay.asin(var_940.astype('float64')) # shape=(1, 14, 7)
func_275_call = mod.get_global_var('func_275')
func_278_call = mutated_mod.get_global_var('func_278')
var_944 = relay.var("var_944", dtype = "float32", shape = (1344, 1))#candidate|944|(1344, 1)|var|float32
call_943 = func_275_call(relay.reshape(var_944.astype('float32'), [14, 16, 6]))
call_945 = func_275_call(relay.reshape(var_944.astype('float32'), [14, 16, 6]))
output = relay.Tuple([uop_941,call_943,var_944,])
output2 = relay.Tuple([uop_941,call_945,var_944,])
func_948 = relay.Function([var_940,var_944,], output)
mod['func_948'] = func_948
mod = relay.transform.InferType()(mod)
mutated_mod['func_948'] = func_948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_948_call = mutated_mod.get_global_var('func_948')
var_950 = relay.var("var_950", dtype = "float64", shape = (1, 14, 7))#candidate|950|(1, 14, 7)|var|float64
var_951 = relay.var("var_951", dtype = "float32", shape = (1344, 1))#candidate|951|(1344, 1)|var|float32
call_949 = func_948_call(var_950,var_951,)
output = call_949
func_952 = relay.Function([var_950,var_951,], output)
mutated_mod['func_952'] = func_952
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1678 = relay.var("var_1678", dtype = "int64", shape = (15, 10, 10))#candidate|1678|(15, 10, 10)|var|int64
var_1679 = relay.var("var_1679", dtype = "int64", shape = (15, 10, 10))#candidate|1679|(15, 10, 10)|var|int64
bop_1680 = relay.maximum(var_1678.astype('int64'), relay.reshape(var_1679.astype('int64'), relay.shape_of(var_1678))) # shape=(15, 10, 10)
func_220_call = mod.get_global_var('func_220')
func_223_call = mutated_mod.get_global_var('func_223')
const_1684 = relay.const([1.592309,5.466603,-0.899747,-6.449416,-6.578553,7.817169,8.824940,-9.922423,2.602787,-9.170464,8.806726,-4.216000,4.468642,-8.359600,5.961036,9.119338,1.352901,-5.311706,-3.597964,1.042243,1.963724,1.075550,-0.123460,9.836134,2.445468,-7.259989,2.253797,7.787543,-3.726883,8.277067,2.474466,-8.717076,9.551701,-5.170628,5.387598,-8.587960,-0.348368,6.831703,-0.589108,0.095650,3.558945,-3.983471,-5.686683,2.832732,-5.762754,-9.591800,2.945257,-1.068957,-5.136127,6.977765,-0.482716,-1.869856,2.021703,6.707604,-7.725589,5.957780,-7.243997,8.576979,9.692752,4.579819,1.930667,-7.426533,7.576889,-0.921686,6.024157,8.674688,5.138148,4.362153,-8.860108,-2.175023,1.406963,-8.694525,-3.228446,-9.998888,-2.239600,5.172863,4.520422,-1.270143], dtype = "float64")#candidate|1684|(78,)|const|float64
call_1683 = func_220_call(relay.reshape(const_1684.astype('float64'), [13, 2, 3]))
call_1685 = func_220_call(relay.reshape(const_1684.astype('float64'), [13, 2, 3]))
output = relay.Tuple([bop_1680,call_1683,const_1684,])
output2 = relay.Tuple([bop_1680,call_1685,const_1684,])
func_1705 = relay.Function([var_1678,var_1679,], output)
mod['func_1705'] = func_1705
mod = relay.transform.InferType()(mod)
var_1706 = relay.var("var_1706", dtype = "int64", shape = (15, 10, 10))#candidate|1706|(15, 10, 10)|var|int64
var_1707 = relay.var("var_1707", dtype = "int64", shape = (15, 10, 10))#candidate|1707|(15, 10, 10)|var|int64
output = func_1705(var_1706,var_1707,)
func_1708 = relay.Function([var_1706,var_1707,], output)
mutated_mod['func_1708'] = func_1708
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2701 = relay.const(-5.310203, dtype = "float32")#candidate|2701|()|const|float32
var_2702 = relay.var("var_2702", dtype = "float32", shape = (11, 12, 3))#candidate|2702|(11, 12, 3)|var|float32
bop_2703 = relay.less(const_2701.astype('bool'), var_2702.astype('bool')) # shape=(11, 12, 3)
output = bop_2703
output2 = bop_2703
func_2712 = relay.Function([var_2702,], output)
mod['func_2712'] = func_2712
mod = relay.transform.InferType()(mod)
var_2713 = relay.var("var_2713", dtype = "float32", shape = (11, 12, 3))#candidate|2713|(11, 12, 3)|var|float32
output = func_2712(var_2713)
func_2714 = relay.Function([var_2713], output)
mutated_mod['func_2714'] = func_2714
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2986 = relay.const([[[-2,6,10,2,2,1,4,4,-7,9,7,-1,7]],[[7,-5,-7,-1,-10,4,3,7,-5,4,-1,8,5]],[[1,4,-3,2,-9,-6,-4,1,10,2,-2,10,-8]],[[-4,-1,4,6,-2,10,6,-2,10,-9,-4,9,-6]],[[-4,-6,9,1,-9,-4,4,4,9,-5,-2,-7,-10]],[[-10,6,1,-2,4,-6,-3,-9,-2,2,-9,5,4]],[[-1,-6,3,-9,2,10,-4,7,-9,-7,-7,5,4]],[[-2,8,-4,-8,-7,8,9,5,-6,-6,-10,-3,-5]],[[-5,-10,2,6,6,8,-2,-5,2,-10,5,-7,9]]], dtype = "uint32")#candidate|2986|(9, 1, 13)|const|uint32
var_2987 = relay.var("var_2987", dtype = "uint32", shape = (9, 2, 13))#candidate|2987|(9, 2, 13)|var|uint32
bop_2988 = relay.less_equal(const_2986.astype('bool'), var_2987.astype('bool')) # shape=(9, 2, 13)
output = relay.Tuple([bop_2988,])
output2 = relay.Tuple([bop_2988,])
func_2991 = relay.Function([var_2987,], output)
mod['func_2991'] = func_2991
mod = relay.transform.InferType()(mod)
mutated_mod['func_2991'] = func_2991
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2992 = relay.var("var_2992", dtype = "uint32", shape = (9, 2, 13))#candidate|2992|(9, 2, 13)|var|uint32
func_2991_call = mutated_mod.get_global_var('func_2991')
call_2993 = func_2991_call(var_2992)
output = call_2993
func_2994 = relay.Function([var_2992], output)
mutated_mod['func_2994'] = func_2994
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3322 = relay.var("var_3322", dtype = "float32", shape = (1, 1, 9))#candidate|3322|(1, 1, 9)|var|float32
var_3323 = relay.var("var_3323", dtype = "float32", shape = (5, 15, 9))#candidate|3323|(5, 15, 9)|var|float32
bop_3324 = relay.floor_divide(var_3322.astype('float32'), var_3323.astype('float32')) # shape=(5, 15, 9)
func_948_call = mod.get_global_var('func_948')
func_952_call = mutated_mod.get_global_var('func_952')
var_3331 = relay.var("var_3331", dtype = "float64", shape = (98,))#candidate|3331|(98,)|var|float64
const_3332 = relay.const([8.699087,0.376831,-0.213151,-5.420648,4.656324,-0.453727,-1.017261,3.553970,9.033640,9.832852,-7.497403,-9.114416,9.089684,7.781473,6.126810,-0.082992,-3.993741,-0.640945,5.878258,-6.287778,1.878254,1.904093,-4.059244,-0.097826,8.279206,-6.835623,3.243094,-9.914256,-7.662417,2.245892,1.164166,-3.297926,8.771829,-0.992810,-8.389693,9.328766,4.634610,9.129740,9.005167,2.446139,6.501524,-7.744316,7.985783,0.017120,-4.314409,5.713935,-1.788961,6.058419,-6.347672,-1.608190,8.056740,-8.095003,1.942734,-2.968891,3.562090,4.602568,-5.218893,9.888345,4.792362,2.031006,6.678708,5.987784,3.020057,6.269318,-1.179185,-5.616267,-5.100299,-8.941913,-3.937740,-7.503854,-3.644499,-8.651640,-6.742333,-2.752536,-5.129916,2.275311,-0.973138,-3.679945,-0.875690,-3.689322,9.893543,-3.211183,8.924567,0.693889,2.742367,-8.784229,-6.874457,-1.883282,-7.453230,-4.846970,0.659464,4.520274,-0.972489,1.899790,6.449354,0.480270,-6.846077,-8.346426,-2.120757,5.550432,-2.134447,4.982260,-5.158019,4.636952,3.732355,0.946327,0.209855,-0.755576,-1.416468,-1.415518,4.480225,7.892942,6.126271,-9.905520,4.436854,-7.086697,5.645031,-9.816332,1.029382,-2.404731,4.281834,3.288076,-3.567511,-9.972608,6.381449,0.509551,-1.366145,-8.046648,-9.385440,5.310970,-5.400761,6.891070,-4.098330,9.233523,8.616050,-6.519240,-6.461649,-8.558749,3.011196,7.820184,0.007944,-7.070743,1.310546,-9.437204,6.776513,-7.132043,6.934483,8.140280,1.345952,6.825184,-8.733000,-9.468148,-7.818383,-4.594528,2.575535,-7.941605,-5.808925,6.917081,-4.572034,9.765871,4.950369,0.851716,-8.932581,-1.452520,-2.551890,-3.690616,2.948838,4.939563,7.531699,-7.131566,9.250724,-2.110724,6.135805,-3.411959,9.946801,7.947394,6.835319,2.050209,4.981362,9.575430,5.406123,-5.758259,-4.487617,-2.597666,7.710190,4.991189,-1.069739,-3.239680,3.837802,2.028415,3.937046,4.991536,8.267244,-3.202521,0.818146,-8.938265,2.617937,4.277901,-6.366731,-4.120035,-7.433849,4.562087,6.831145,-5.170822,-3.503996,1.884879,-4.892024,-6.370963,3.176489,-3.824137,-1.975121,3.918723,-7.151022,-1.781193,2.143807,-1.257373,-2.971217,-4.143260,-3.757039,-3.194954,-9.472803,-5.059173,-5.486387,-8.421741,4.897143,-5.078453,-5.452124,2.125327,3.299503,2.456096,-9.748133,-2.661173,1.675843,-3.753766,-3.272528,-3.952720,-6.612246,8.367906,3.013443,-2.554818,5.668471,7.508166,3.465965,-2.265828,-8.642166,8.443820,3.648741,0.937091,-1.377684,-9.866989,-2.854656,6.480065,0.080871,3.956968,-0.250102,2.960697,0.734611,6.534635,-2.796191,7.431801,-9.281636,7.771324,-6.087561,-5.874362,4.740230,9.252477,-0.227338,-7.234929,-1.724462,-1.980259,-2.680677,-6.002805,-1.808779,-6.324688,5.006878,8.538367,-3.588284,8.203546,9.484236,4.534966,5.260782,-2.310649,2.654394,5.363294,7.262270,-1.906108,-6.626852,5.397217,4.429797,4.402612,9.678772,-3.891142,2.121999,-0.929314,4.691985,7.141627,4.498984,-4.349017,8.624330,-4.177218,-9.274666,-0.040112,7.414510,9.924149,3.506779,6.912934,-0.704249,-3.577360,1.057950,-9.732466,-2.228964,0.558990,-3.818520,-1.020106,-2.867711,-1.938621,2.601406,5.810256,-9.960719,5.727773,9.540724,-8.699441,-8.384255,4.497770,5.602120,3.023006,-6.339933,7.193370,-9.442422,-0.499811,-6.183484,5.594676,3.948242,-6.446116,-9.848680,4.218093,-9.783135,9.646889,-8.065404,3.770294,-9.377218,2.833661,2.242237,9.249396,-7.487601,-4.495092,-0.618632,-3.196062,-6.162331,5.497521,8.680283,-9.440464,-7.571360,-6.206771,1.346316,0.840086,-6.897800,-9.962177,0.273158,-7.112321,8.942857,6.859208,-5.262087,2.775698,-9.007349,8.276053,3.850053,-6.073098,1.639827,-8.080875,-2.627936,2.968306,-1.959807,-0.679668,6.240594,4.785507,-5.614559,5.468048,-8.310413,0.465466,9.600295,-1.777885,6.413708,5.608154,-4.681719,9.675200,0.397301,2.101051,-9.440510,2.869393,-7.888209,-9.837634,5.644215,-6.155097,-3.607110,5.279129,-2.944733,-6.041466,-9.646102,4.739776,6.212094,5.369917,5.816260,-2.042904,-0.051806,4.955666,-9.601246,3.789042,5.818347,1.452142,-1.373184,-6.300757,4.806211,-7.096909,-4.455340,-2.887016,-0.293855,-2.028478,-5.533534,8.108796,-6.064116,-0.454649,-2.063243,5.053928,3.777754,7.995833,5.571377,-6.181522,-8.619760,-8.708580,-8.572757,-4.878089,-3.588962,-1.704370,5.810078,8.353442,4.761843,-1.343601,-1.509000,3.848332,-5.636295,5.815639,-3.650402,-6.343361,-3.533121,9.083230,6.443423,5.224089,-5.282583,5.090201,7.882722,-7.598699,-4.436128,-2.947637,-8.444621,-5.232280,-4.400445,-0.259867,9.256775,6.290958,3.758814,0.488775,-6.680117,-6.562074,-7.886488,-5.842290,-0.061934,-6.623433,5.081165,4.257461,1.970207,-4.430576,9.211857,-0.388051,-8.551444,-4.555564,2.746029,-4.009140,-2.179903,-8.779638,-7.104511,-3.484631,1.796516,5.477717,8.405988,-9.944357,-1.400402,-1.739862,6.598694,1.133184,-3.008855,6.232240,3.923012,9.174046,-8.804531,-9.482669,-3.882728,-5.048452,-2.871874,-7.428902,-9.201624,-9.047545,-1.265273,1.554531,1.261593,2.266931,-4.141489,8.975412,-5.602331,-2.878042,5.012855,-0.954678,6.792920,5.758929,-9.757792,-3.879622,3.425707,-9.452688,2.131250,3.744965,-4.707287,0.408886,-8.922942,-0.021419,4.017930,3.251769,5.121353,6.061565,-3.483992,-4.429399,-2.013377,-9.150932,9.587713,1.098735,-4.948715,-0.430579,0.130673,8.004839,-4.675161,7.786227,-2.810214,-4.861623,-8.265524,9.344747,6.741066,6.745054,-7.776062,2.185438,-8.850509,-2.701170,3.696927,6.128679,-9.980605,-6.012657,-1.027173,3.784974,7.995389,9.064527,5.877586,-3.581664,-8.361179,-8.991587,2.484802,2.953660,1.988291,-1.764829,-5.759901,0.403400,1.160082,4.483762,1.933051,-8.688183,2.233660,-2.945477,-2.709941,5.123870,9.401247,0.206046,8.344969,-1.707915,9.880922,1.735938,4.037018,-2.377597,2.233280,-4.781779,-6.897770,2.273428,-2.758635,-7.740335,-2.891556,-8.118201,-3.225919,9.042796,-9.685187,-1.888635,-5.657375,4.062806,-8.939401,-9.251133,3.667145,5.934726,-8.117663,4.882501,-5.901805,7.446243,0.147725,-7.460396,-4.417054,7.350827,-0.775216,-2.534800,-0.524582,-0.792840,0.520946,-1.190308,4.634558,6.745225,-9.659028,7.743155,-4.333983,2.917806,-5.776487,0.284874,4.263449,2.155742,-1.471661,6.818389,0.850091,-7.210598,-0.664556,1.553596,-0.172380,5.807233,-4.398359,6.664504,-0.742044,-5.735288,9.875451,6.166800,1.164180,-0.874155,-9.673232,-6.622826,2.986449,-1.163740,8.274650,0.864819,-0.385717,-6.167824,5.047964,-1.171585,-0.083536,-4.630436,-4.262059,0.346146,-6.356467,-8.523566,1.603359,-3.621999,4.299962,-7.577580,3.190111,-1.648531,6.891210,-2.897818,-0.296529,-3.624179,3.898353,-6.790240,-8.999304,6.889407,3.254431,4.253083,-8.161938,2.167672,-1.345138,-5.625061,-1.598560,-3.402612,2.465617,-0.048840,8.856362,6.416285,-6.450501,-9.935396,4.427871,1.807013,3.857072,8.462315,8.318079,1.258135,-7.836647,8.667827,-1.022885,-2.025872,-9.932318,-2.650731,5.578045,-6.445711,4.416479,-7.598526,0.102647,-8.392226,-1.991437,-3.682865,-4.506031,-3.108999,-9.321109,2.772661,9.007878,-4.593514,1.196105,5.701215,-3.612583,-4.628348,-6.933311,-9.341998,-0.105141,6.812933,-4.153265,-5.320788,6.580319,-0.503466,-5.942311,0.067145,1.680654,4.257029,-6.963388,-1.729584,8.198714,-8.451626,5.489988,4.709409,4.373133,4.310450,-2.538021,3.953445,-0.848743,6.106490,3.258043,-4.281291,5.066039,4.462625,-8.108933,-0.225193,-2.304745,0.905371,-1.985237,-9.002970,3.048540,9.344918,7.535250,-8.730845,-7.419412,6.087035,-8.396399,1.275052,3.848812,1.912029,-6.177217,7.396983,-1.366378,-8.598053,9.725514,8.063331,-3.788688,0.800700,9.311932,2.618802,4.634395,1.357697,-6.116042,7.976329,-1.870994,9.965781,8.863609,2.802413,-2.135512,-1.485693,-2.032553,-6.075407,-1.229352,3.775534,6.964357,-3.118575,6.383048,-7.270569,-5.724482,1.882969,-7.753199,9.308975,-8.270094,-6.964192,-7.615162,-9.442571,-3.191236,-2.265288,-6.221893,-1.303027,-7.577864,7.986581,-9.746627,-5.781060,3.915963,1.127156,-1.813298,7.788830,-3.817948,8.533411,-6.358106,4.049316,3.318674,-1.129272,3.055207,9.940826,5.001942,6.273721,5.772657,-4.619452,-1.005636,-5.600653,-7.487617,3.034132,6.202972,7.191626,-2.022618,-5.720713,-5.269034,-0.329596,5.632666,-0.058633,-6.852499,0.355076,0.295016,-5.647781,2.298442,-2.615413,1.119910,-0.274464,5.317325,-5.427561,1.160252,8.364061,7.229115,9.663536,2.749482,7.812435,-5.183136,1.798034,-8.982153,4.525177,0.122403,2.367693,1.355805,1.615058,-8.956062,-4.764891,3.499359,1.175483,0.704352,9.745050,-1.894146,-0.132056,0.785801,-4.067250,-9.663927,-7.209766,-2.047384,-8.866312,5.654435,-6.327496,7.514473,5.763335,-7.710397,-2.731999,-7.670092,-4.484494,-9.786397,6.390672,3.499963,-2.003327,2.111169,1.854647,-2.361451,6.135388,3.572085,1.868599,-8.109758,4.664700,-3.936172,8.137732,-7.958440,3.434116,-3.820660,-0.967839,4.780750,4.999248,1.836819,-6.037477,-0.918941,-4.058828,5.783514,9.712888,-1.114338,-7.719264,-4.289598,4.230007,2.434527,2.933037,9.648001,9.106270,-5.306123,7.149999,6.758254,-8.479100,1.984067,-0.929088,-2.212059,9.952399,-1.828954,4.758645,2.014298,4.497067,-0.126553,-9.002277,1.551641,-5.903480,0.255377,1.111215,5.602863,-4.223823,-3.215684,3.255947,-5.405277,-0.010877,-7.328540,6.911924,-3.253809,-1.599496,-2.058499,9.482286,1.385233,0.021826,4.990901,4.039184,-0.776635,-8.792143,-0.785939,-1.110830,-2.659726,-3.241528,-3.108326,-5.695459,-5.459914,8.282952,1.881186,-2.821286,-3.354721,7.539221,9.740395,-2.479703,3.299224,-4.905207,-1.760444,-1.469602,8.610260,2.468447,1.766082,1.888004,2.207434,-3.485687,6.023761,5.007192,-5.540646,3.802942,4.236227,-9.157642,-3.845232,4.431006,4.894154,0.092968,-7.455754,-5.604234,-7.839739,2.450758,5.719535,5.559584,3.839597,-0.682447,9.006007,9.599785,-4.142303,2.834422,-6.017563,0.166290,9.862334,8.533613,-2.422259,4.091620,5.024999,-2.071492,-3.735922,8.241264,-3.830766,1.171659,7.518299,-5.299943,-4.069896,1.356400,-5.037133,-2.086174,5.730300,6.006142,-0.562764,2.458593,-4.935814,-3.330918,1.398009,-3.938642,0.840484,7.494255,-2.904066,-9.908583,-6.107399,9.321398,0.585836,-6.316229,3.226800,-1.399459,-0.230100,0.446474,4.595692,0.957364,7.020420,-3.787172,8.116577,-2.119499,2.472652,0.970598,-4.803896,0.774213,-3.376181,-5.897183,1.430586,4.462360,-7.896901,-0.711594,-7.123728,-8.702922,6.051916,0.497282,4.770570,-3.977023,-5.867457,-4.810230,7.031352,-1.198162,6.364221,2.631147,7.390199,-8.924569,-1.632743,6.034483,-1.801053,-5.036629,-5.565820,-0.556265,3.317772,4.211097,-3.060289,-2.817740,9.309059,-0.781028,-2.306491,5.035025,-1.789793,7.496664,8.504386,-4.268290,2.984491,5.319256,-2.282960,7.778298,5.970001,3.757305,-5.165102,8.500069,3.543876,-3.523962,0.580152,3.350149,8.701403,-4.700070,-5.107856,-2.482721,-8.020784,2.751318,9.756471,-5.126536,9.909401,1.198871,-6.321179,5.808560,-2.585679,2.801633,-8.513307,3.448756,1.589009,-2.802068,-4.150549,9.052841,-4.585429,7.027496,8.736176,-8.989983,-4.036140,-0.190054,-8.275249,-4.623080,0.291044,8.599556,-3.454222,9.783895,-4.214318,6.153473,-4.874965,8.049778,-4.000872,2.173954,5.999356,-0.344615,2.013710,-0.470985,8.108430,-3.537767,-9.139997,-4.647037,-8.381993,-1.104642,1.729456,-1.649078,4.708188,-1.130441,-4.258972,3.248107,-0.611361,0.938347,2.406272,5.733497,-1.441686,9.371933,3.724096,-0.495206,-8.645943,2.034005,-2.003094,7.802980,6.211680,9.522419,4.127047,6.780784,5.153747,9.495044,-3.544353,2.715210,-9.029172,5.425380,-3.679496,-9.960868,3.649280,-1.386568,7.383520,8.943820,9.683806,-2.917034,5.515138,-1.728609,2.707436,5.513714,8.420841,-2.009357,-0.955271,0.094949,5.118628,7.297928,2.106444,2.108098,1.156971,-8.446037,2.632765,-6.331684,-8.187826,2.899873,-4.644288,-1.052301,4.699338,-6.985870,-7.476168,-5.871722,0.505102,-5.459821,5.399684,2.051174,-5.302542,-5.584354,-0.038322,4.357764,4.555559,-7.843692,7.123437,0.782211,-7.101406,-1.009162,-9.327097,-5.586106,-8.445309,-3.460947,-2.041798,9.579224,4.512193,0.280296,-2.196816,1.241187,2.768303,3.124745,-9.024532,-4.678170,-1.761628,8.190398,9.532278,-2.701719,3.886331,-2.744946,-5.703059,-9.876615,7.478909,-7.556517,-6.570586,8.341012,2.471099,0.578628,-4.327191,-6.993721,-1.937868,2.415644,-6.261389,-5.494972,-1.938883,3.207180,-5.605397,5.024405,9.125541,3.783926,5.012447,-9.230740,0.429283,-2.943339,2.929407,5.330290,-3.314632,4.713861,-4.727960,-9.160427,-6.545289,-0.940832,-1.777242,-1.755455,3.088880,4.386354,1.960680,2.618156,0.442280,-2.887655,6.588794,3.241794,-5.577425,-7.695400,-3.577593,5.966691,-4.343412,0.156056,9.938671,7.126791,0.607647,1.677808,-5.189244,0.847721,-2.906233,-1.725189,8.910654,-9.200158,-6.029532,8.205432,2.297608,-2.445435,-6.095419,-6.894781,8.996945,-4.508056,2.746955,8.841865,-4.756188,1.174493,-0.667246,-3.634450,9.593975,7.165990,6.830717,-5.350988,-1.041731,4.237997,-6.426532,-6.677980,3.968242,-5.776196,8.046305,-5.516514,9.469899,-4.512977,7.792037,9.318282,8.916326,-8.149028,5.812948,-2.449697,8.451451,-1.639462,3.160844,-8.660589,1.987586,2.033345,-8.349100,5.593728,-6.421336,-1.544358,-5.308327,-2.238939,-8.511523,6.247874,-1.177005,3.527581,8.696450,5.049079], dtype = "float32")#candidate|3332|(1344,)|const|float32
call_3330 = relay.TupleGetItem(func_948_call(relay.reshape(var_3331.astype('float64'), [1, 14, 7]), relay.reshape(const_3332.astype('float32'), [1344, 1]), ), 2)
call_3333 = relay.TupleGetItem(func_952_call(relay.reshape(var_3331.astype('float64'), [1, 14, 7]), relay.reshape(const_3332.astype('float32'), [1344, 1]), ), 2)
output = relay.Tuple([bop_3324,call_3330,var_3331,const_3332,])
output2 = relay.Tuple([bop_3324,call_3333,var_3331,const_3332,])
func_3339 = relay.Function([var_3322,var_3323,var_3331,], output)
mod['func_3339'] = func_3339
mod = relay.transform.InferType()(mod)
mutated_mod['func_3339'] = func_3339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3339_call = mutated_mod.get_global_var('func_3339')
var_3341 = relay.var("var_3341", dtype = "float32", shape = (1, 1, 9))#candidate|3341|(1, 1, 9)|var|float32
var_3342 = relay.var("var_3342", dtype = "float32", shape = (5, 15, 9))#candidate|3342|(5, 15, 9)|var|float32
var_3343 = relay.var("var_3343", dtype = "float64", shape = (98,))#candidate|3343|(98,)|var|float64
call_3340 = func_3339_call(var_3341,var_3342,var_3343,)
output = call_3340
func_3344 = relay.Function([var_3341,var_3342,var_3343,], output)
mutated_mod['func_3344'] = func_3344
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3374 = relay.const(10, dtype = "int8")#candidate|3374|()|const|int8
var_3375 = relay.var("var_3375", dtype = "int8", shape = (8, 5, 9))#candidate|3375|(8, 5, 9)|var|int8
bop_3376 = relay.logical_xor(const_3374.astype('int8'), var_3375.astype('int8')) # shape=(8, 5, 9)
func_3339_call = mod.get_global_var('func_3339')
func_3344_call = mutated_mod.get_global_var('func_3344')
const_3391 = relay.const([[-6.189063,-9.305970,-3.677282,8.246450,-8.465070,-0.394687,7.694866,-6.755003,5.075258]], dtype = "float32")#candidate|3391|(1, 9)|const|float32
var_3392 = relay.var("var_3392", dtype = "float32", shape = (675,))#candidate|3392|(675,)|var|float32
var_3393 = relay.var("var_3393", dtype = "float64", shape = (7, 14))#candidate|3393|(7, 14)|var|float64
call_3390 = relay.TupleGetItem(func_3339_call(relay.reshape(const_3391.astype('float32'), [1, 1, 9]), relay.reshape(var_3392.astype('float32'), [5, 15, 9]), relay.reshape(var_3393.astype('float64'), [98,]), ), 3)
call_3394 = relay.TupleGetItem(func_3344_call(relay.reshape(const_3391.astype('float32'), [1, 1, 9]), relay.reshape(var_3392.astype('float32'), [5, 15, 9]), relay.reshape(var_3393.astype('float64'), [98,]), ), 3)
func_1705_call = mod.get_global_var('func_1705')
func_1708_call = mutated_mod.get_global_var('func_1708')
var_3403 = relay.var("var_3403", dtype = "int64", shape = (1500,))#candidate|3403|(1500,)|var|int64
call_3402 = relay.TupleGetItem(func_1705_call(relay.reshape(var_3403.astype('int64'), [15, 10, 10]), relay.reshape(var_3403.astype('int64'), [15, 10, 10]), ), 2)
call_3404 = relay.TupleGetItem(func_1708_call(relay.reshape(var_3403.astype('int64'), [15, 10, 10]), relay.reshape(var_3403.astype('int64'), [15, 10, 10]), ), 2)
uop_3413 = relay.erf(var_3392.astype('float32')) # shape=(675,)
output = relay.Tuple([bop_3376,call_3390,const_3391,var_3393,call_3402,var_3403,uop_3413,])
output2 = relay.Tuple([bop_3376,call_3394,const_3391,var_3393,call_3404,var_3403,uop_3413,])
func_3444 = relay.Function([var_3375,var_3392,var_3393,var_3403,], output)
mod['func_3444'] = func_3444
mod = relay.transform.InferType()(mod)
mutated_mod['func_3444'] = func_3444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3444_call = mutated_mod.get_global_var('func_3444')
var_3446 = relay.var("var_3446", dtype = "int8", shape = (8, 5, 9))#candidate|3446|(8, 5, 9)|var|int8
var_3447 = relay.var("var_3447", dtype = "float32", shape = (675,))#candidate|3447|(675,)|var|float32
var_3448 = relay.var("var_3448", dtype = "float64", shape = (7, 14))#candidate|3448|(7, 14)|var|float64
var_3449 = relay.var("var_3449", dtype = "int64", shape = (1500,))#candidate|3449|(1500,)|var|int64
call_3445 = func_3444_call(var_3446,var_3447,var_3448,var_3449,)
output = call_3445
func_3450 = relay.Function([var_3446,var_3447,var_3448,var_3449,], output)
mutated_mod['func_3450'] = func_3450
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3644 = relay.var("var_3644", dtype = "float32", shape = (6, 12, 1))#candidate|3644|(6, 12, 1)|var|float32
uop_3645 = relay.acos(var_3644.astype('float32')) # shape=(6, 12, 1)
output = uop_3645
output2 = uop_3645
func_3647 = relay.Function([var_3644,], output)
mod['func_3647'] = func_3647
mod = relay.transform.InferType()(mod)
var_3648 = relay.var("var_3648", dtype = "float32", shape = (6, 12, 1))#candidate|3648|(6, 12, 1)|var|float32
output = func_3647(var_3648)
func_3649 = relay.Function([var_3648], output)
mutated_mod['func_3649'] = func_3649
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3659 = relay.var("var_3659", dtype = "uint16", shape = (1, 12, 9))#candidate|3659|(1, 12, 9)|var|uint16
const_3660 = relay.const([[[2,9,-8,-10,1,-3,-2,4,5],[-3,-3,10,-3,8,-7,-1,2,8],[2,-8,8,1,-2,-9,10,-5,-8],[-6,-5,10,-5,1,-2,7,7,-8],[-5,-4,-3,-7,3,-8,8,-4,8],[6,-7,-1,6,-3,-3,7,-8,-8],[-1,6,6,7,-7,8,-6,-9,3],[-2,-7,-1,3,-8,-6,4,9,3],[5,9,2,-5,4,-3,-3,-6,-7],[-9,-3,-3,-3,-8,6,-8,-1,3],[6,4,-4,-7,-10,-7,7,7,-3],[1,-7,8,2,6,-3,-9,-9,-9]],[[9,-9,-6,-6,-10,-5,5,-9,-6],[-8,3,2,-3,4,-5,4,-6,3],[-9,7,3,-4,-7,-1,-2,-1,-2],[-10,7,8,5,-6,-7,5,7,9],[3,8,-8,2,5,4,10,4,-6],[-7,-4,-3,1,9,9,8,1,1],[5,1,9,-7,9,-6,4,7,-6],[3,8,7,-9,-9,-3,2,-6,-7],[-8,3,8,6,3,-1,6,10,5],[-3,-4,-7,-5,-2,3,3,4,1],[-5,5,10,9,-2,-2,-6,-3,7],[5,10,10,-9,-5,1,6,-4,-6]],[[-8,10,5,7,5,2,-10,4,6],[-1,9,9,-3,7,-7,2,1,-3],[4,-10,8,2,10,-7,-4,-3,-6],[4,-9,-7,-8,-10,-2,5,-3,-6],[-6,-10,-8,5,7,4,2,5,1],[-8,2,5,-2,-10,7,7,-4,-2],[-6,-4,-8,-6,-6,-4,2,3,-9],[-6,3,8,-1,5,-4,10,5,2],[-10,-6,7,3,-1,3,-7,2,6],[1,-5,-5,-3,-8,8,-6,6,7],[9,7,8,-1,-1,-6,3,6,-4],[-6,5,9,-3,2,-4,-7,8,-4]],[[-3,1,8,-3,-7,-8,2,-9,-9],[10,3,3,2,-2,-3,-9,1,-2],[-9,9,-6,6,4,-4,-4,-7,10],[-2,-2,-5,3,3,3,-3,10,8],[-3,-3,10,10,-6,8,-8,8,-7],[7,4,3,7,10,10,-5,-2,9],[-8,5,5,9,4,-5,8,-2,-4],[-2,3,-8,9,7,4,5,-5,5],[4,5,-9,2,2,2,8,-9,-5],[3,2,9,-6,-7,7,-10,6,-2],[6,4,5,-6,-1,4,-1,2,-9],[-9,-7,5,-8,6,2,9,-9,6]],[[1,9,-6,-8,1,10,2,4,-6],[3,8,8,-9,-8,3,4,-7,-6],[5,-1,5,-6,-1,-6,3,-10,3],[1,-6,8,-2,-3,-5,-3,4,-7],[-5,8,7,-2,-7,1,2,-10,10],[8,-2,4,-2,8,-1,9,-1,-10],[2,9,4,-7,-4,5,-7,-8,5],[-6,9,7,2,3,-4,2,-7,-5],[-2,9,1,10,8,7,-1,4,-1],[-1,-8,6,9,8,-10,-7,9,-8],[10,10,-9,-3,2,-2,8,-5,8],[-6,9,3,1,2,7,-10,-2,-7]],[[7,-1,5,3,-9,-10,10,-3,2],[-10,7,-10,-6,1,1,8,8,-9],[5,6,2,10,-2,3,-1,8,7],[-4,10,-10,3,-9,7,4,3,5],[-8,9,10,-5,-7,10,-10,-8,10],[-1,5,-4,9,-4,9,-8,-6,6],[-9,8,-3,9,-3,-4,-4,-5,-5],[9,10,8,5,-6,-3,1,-5,-9],[7,2,4,2,8,-6,10,-7,-1],[10,1,10,-2,7,10,-6,3,-9],[-3,-6,10,-4,-9,1,-5,7,10],[-1,8,2,3,7,7,4,6,-10]],[[4,-9,6,5,2,7,-1,6,6],[9,5,5,9,1,1,-2,-7,10],[-10,5,8,5,2,-1,9,-8,-8],[-6,4,2,1,4,6,9,8,-9],[-8,6,-8,-8,8,5,1,-1,-1],[2,-1,-7,-10,-3,2,5,-6,2],[7,-5,10,-9,1,5,6,-3,-4],[2,-9,-2,-6,-3,-7,10,-8,7],[5,8,7,-8,-1,-10,1,10,-8],[1,1,-8,-2,10,-3,8,6,-4],[9,8,4,6,-1,-7,1,2,-3],[-10,-1,5,-9,2,8,10,1,-9]],[[5,2,4,-4,-7,-8,-9,5,1],[3,-4,-7,4,-10,-5,-2,6,8],[-3,-6,-1,3,5,1,10,7,-1],[-6,2,-2,7,-7,7,-3,-10,-1],[5,4,-1,-5,-10,-5,-7,-8,9],[5,-3,8,-10,10,-2,-2,6,7],[10,8,-6,-3,-4,-1,-2,-8,1],[-6,-9,-10,9,5,7,-3,-8,10],[-6,9,5,-4,8,-3,9,7,-6],[-6,10,-10,-7,-5,6,1,10,5],[-1,2,4,-8,5,-1,-2,-5,2],[9,-8,6,-2,9,8,7,2,9]],[[-5,9,2,-2,-10,-7,2,-2,2],[4,7,-6,-7,4,-2,-7,10,8],[9,8,-7,-10,1,-9,3,9,-7],[5,-7,5,-4,6,-10,7,4,-9],[-10,-10,-2,-6,-2,-5,9,5,10],[3,6,-9,-4,6,-4,3,-3,-5],[-1,1,5,6,-7,9,-5,-3,-2],[7,-3,-7,7,8,-2,8,5,1],[-5,-3,-8,-2,-7,-3,-1,6,-3],[-8,-5,-2,-1,-4,-10,-6,2,9],[-4,-4,-8,-9,-5,-3,-9,1,-9],[-3,-5,-7,-2,2,-6,3,-6,8]],[[-3,-4,-3,-9,8,-6,-4,7,6],[4,1,-9,1,-7,-2,-2,4,-5],[3,-9,3,7,-4,7,-2,-7,9],[10,-1,-6,1,-8,-1,10,-7,4],[6,-7,8,2,5,3,-7,-3,-9],[1,-6,-5,-2,-1,-5,6,6,2],[7,4,-5,-5,1,1,8,1,1],[-1,2,1,-6,-1,-10,8,8,1],[-8,-6,-8,-10,10,-8,-5,5,10],[-7,3,-1,-2,2,9,-3,-2,10],[5,4,-9,-6,3,4,-5,10,-10],[1,-7,1,-8,7,-1,-10,4,10]],[[10,10,7,-7,-6,10,-5,7,4],[2,-10,2,5,-8,7,2,5,-1],[5,-5,-2,-6,-6,2,1,-3,-10],[-4,8,4,1,-5,10,-9,3,-8],[10,3,-7,5,-9,-8,-3,6,4],[9,7,-2,-7,4,6,6,-5,2],[-5,9,7,-5,-10,4,-2,-9,-4],[-8,3,-2,7,7,-8,-6,-7,-7],[4,7,-4,8,-3,-6,10,-9,-9],[6,-10,8,3,10,-8,-8,-10,6],[7,9,3,-6,-9,-7,-7,-2,7],[4,-3,4,1,6,7,5,-8,-4]],[[10,-3,7,9,5,3,-3,-6,3],[-10,1,8,-7,-4,9,-3,9,10],[-10,-2,-2,8,5,-2,3,-5,-7],[2,7,-7,5,-7,-10,10,8,4],[10,5,-8,-6,-8,-3,3,7,5],[-8,7,-5,-4,6,9,-4,-6,6],[4,2,2,-7,5,7,-9,8,-10],[-5,-8,-8,5,-7,1,-2,7,8],[-1,6,-8,-4,8,7,7,-6,-4],[-3,6,-7,-7,-3,5,4,4,-2],[1,-3,9,8,-9,2,-9,-2,7],[4,-8,-8,6,-9,-10,-7,6,-3]],[[-8,-3,-7,2,-10,-3,-2,2,-5],[5,2,4,-6,4,-10,10,-10,-7],[-8,3,3,-6,6,-7,8,-2,9],[-2,-8,-6,5,-8,-9,-10,-4,-6],[2,2,-1,8,-2,-2,8,-5,-2],[7,-8,-10,10,5,-4,10,6,3],[2,9,-2,6,-6,-10,-3,6,2],[10,8,7,-8,-10,-1,-2,-4,1],[-3,-10,10,-7,-5,-8,-9,-10,-6],[8,3,8,1,-1,2,-5,-10,4],[-2,-5,-4,-7,-1,-7,-3,-1,-5],[2,-1,-2,-4,-6,1,4,-10,2]],[[4,-6,-6,4,-10,-6,7,10,1],[-9,-9,1,6,5,8,2,9,-9],[-1,-4,9,3,-8,-2,-4,-5,-7],[-5,4,2,7,4,-2,-9,-5,3],[3,-1,-10,1,5,9,4,8,-1],[-2,4,4,-10,-10,-6,-10,-2,9],[4,-8,-5,5,-10,-9,-3,1,6],[5,8,10,10,-2,-1,-4,2,7],[10,7,5,3,7,-3,-9,1,-4],[1,3,6,-8,-2,-4,-6,-1,4],[-2,-1,-1,4,-5,-9,-7,4,-8],[3,-3,-4,4,-3,6,-10,-4,-7]],[[-5,7,7,-8,-10,4,3,2,2],[4,8,2,5,-2,1,6,-4,8],[10,-6,10,-6,9,10,-8,9,4],[-1,3,9,-5,-2,7,10,7,6],[8,-2,-4,2,1,-7,3,5,3],[2,7,7,-5,1,-5,-1,3,-1],[8,-8,-5,3,4,5,-1,5,2],[-2,-9,1,2,-6,-7,-3,-10,-3],[7,-2,5,-8,6,-4,5,5,1],[-5,-10,-9,8,2,-2,-3,-5,9],[4,-4,-3,1,8,-2,-2,3,10],[8,5,-5,9,5,-5,-1,6,-1]]], dtype = "uint16")#candidate|3660|(15, 12, 9)|const|uint16
bop_3661 = relay.greater(var_3659.astype('bool'), const_3660.astype('bool')) # shape=(15, 12, 9)
output = relay.Tuple([bop_3661,])
output2 = relay.Tuple([bop_3661,])
func_3664 = relay.Function([var_3659,], output)
mod['func_3664'] = func_3664
mod = relay.transform.InferType()(mod)
mutated_mod['func_3664'] = func_3664
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3665 = relay.var("var_3665", dtype = "uint16", shape = (1, 12, 9))#candidate|3665|(1, 12, 9)|var|uint16
func_3664_call = mutated_mod.get_global_var('func_3664')
call_3666 = func_3664_call(var_3665)
output = call_3666
func_3667 = relay.Function([var_3665], output)
mutated_mod['func_3667'] = func_3667
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3860 = relay.const([[[0.613687,7.570872,7.568608,-7.484599,-6.389752,-1.896422,-2.676859,0.785254,8.435113,3.024383,-6.959496,-8.067825,-6.350697,4.058409,3.612274],[-8.349307,6.422879,-4.486796,-4.986648,0.207268,5.454264,8.983698,3.004103,5.926844,8.511946,7.675792,-2.335128,-4.475418,1.872393,-0.102349],[-6.392174,3.086699,-8.092201,-2.449404,-3.977749,-1.616986,8.676475,1.228313,-1.121941,-0.202586,2.326709,-7.005773,6.961858,9.936541,-3.390282],[5.908947,-0.968632,-3.313044,-1.169995,4.979358,-0.408264,-7.969520,0.421202,-2.578369,-6.836855,9.566055,-1.381260,3.408469,1.722081,7.744515],[4.555379,-2.081339,3.197194,-2.453104,-5.541517,6.334227,4.406415,-5.953938,1.327327,7.252644,2.619606,-5.460188,-2.642021,6.927226,-3.814854],[2.735508,-2.856391,2.071500,-8.063802,2.161771,1.276714,4.676484,7.160999,2.564195,-4.757898,-0.276409,-0.853487,-1.806911,6.899090,-9.451904],[-6.312074,8.525670,3.297206,-6.763750,-9.920025,-9.990545,-3.815718,1.083031,-3.924579,3.480025,5.187623,-0.497416,-8.189409,-6.723164,2.284028]],[[4.227601,-6.612082,-1.613400,7.750147,8.695072,-2.512784,8.597604,4.420082,-9.869096,3.779267,-9.525211,-0.127473,-1.949652,2.377761,-1.382692],[7.634329,-7.313786,-6.603836,-3.296980,-4.210351,6.507471,0.538711,7.944733,5.509067,-1.351436,6.853149,8.624951,-4.581787,-5.172862,-1.203523],[-4.132094,-3.373535,9.022063,1.008560,-2.921617,5.234271,-8.670739,-4.968498,9.422639,-2.306751,5.240955,5.873208,5.978315,-5.724560,3.734218],[-0.935484,9.834535,3.707245,4.196676,-6.071194,-8.126970,4.987673,-7.660630,-5.881399,-6.613803,-5.779222,1.761674,-5.168676,0.700713,-3.039950],[-8.902120,-5.705753,-8.328584,-3.375873,-0.431276,2.606469,3.979111,9.954051,1.992269,4.331416,-9.964096,8.669062,8.690334,-0.005716,-2.446151],[-7.591963,8.734260,-0.077986,-3.309969,7.948014,3.497728,9.914312,-0.062245,5.890210,-5.932032,9.671432,-0.827484,-4.097507,-7.943212,-2.635339],[-7.624427,2.948889,1.064345,6.399565,9.550543,-2.427215,2.089731,7.285981,-7.482046,9.434716,5.279106,-9.897372,4.447297,-0.902508,9.485765]],[[6.363340,2.962488,-4.460388,-7.819592,-0.680893,-7.110451,6.888835,-4.330873,7.520748,9.057121,3.514399,7.480822,-3.015676,6.413268,9.675212],[6.410019,-1.650337,8.278575,1.002321,-1.412813,7.362071,-9.480167,-9.891406,5.857180,2.051048,2.929659,-3.478993,-5.259104,8.311786,5.922231],[8.286509,7.549043,5.843033,-1.525149,2.511899,-7.490798,6.696958,8.877142,8.441587,-9.105136,8.569862,6.938726,-0.873760,-6.973349,1.961930],[-1.554413,-9.530581,-3.572878,6.321447,-8.721028,1.106333,8.427322,5.328100,2.096782,-5.130668,3.284197,7.856831,8.395537,9.040278,4.049803],[4.264097,5.164519,-9.101675,1.522750,-2.375381,-3.322615,-5.477846,-8.103375,-1.836972,-6.819600,4.585309,-9.217753,-6.824317,4.002959,7.218206],[2.522738,-2.073390,-2.753239,-5.860486,-2.213168,0.317358,3.884891,0.245347,6.442443,2.363474,-5.680262,3.030680,4.922735,-8.495430,4.008913],[8.685750,-6.724227,9.815344,-6.670473,-9.916506,-9.854357,2.200966,4.476821,-9.429948,-8.615712,-1.245550,-1.394622,8.347579,2.533281,-5.127404]],[[9.760903,1.439725,-1.099980,-1.558598,9.126877,9.030120,-4.954460,0.802906,4.873344,-1.706489,4.741602,-2.165841,2.729020,5.661988,4.658075],[9.885441,1.921645,-4.360658,-4.102123,2.866973,8.872042,0.768522,5.529306,0.222017,-9.162079,4.111252,-2.712374,-0.107417,6.266720,8.948532],[0.266094,-4.524837,9.698670,-6.945216,4.032365,9.213654,4.641658,2.264643,5.665962,7.898488,-1.504208,7.225702,4.100507,-1.998692,0.766294],[8.532544,6.163780,-6.935394,1.533216,-7.164418,-3.924611,6.908110,-7.655343,-3.640815,-6.806321,-4.238176,-0.333773,1.477507,7.635629,7.685758],[8.503967,3.515142,-2.268945,-3.095194,1.835741,-9.949591,-6.186277,8.944965,-8.579929,1.329639,2.416129,-0.939599,0.659464,1.890550,3.791101],[-6.504028,-8.759145,5.606749,6.359930,-0.682160,-1.760912,-0.967849,-1.522411,-1.479280,6.832928,8.908737,8.159373,9.544144,-2.849999,1.666680],[9.426920,-9.696296,9.508099,-7.207584,3.161948,7.096266,2.549636,4.511667,0.512194,1.006156,6.998040,-3.747949,-5.943767,4.891619,-5.454382]],[[-8.397977,-6.142611,5.420528,3.478410,-2.744075,-0.235490,-2.382428,9.046405,-3.540591,1.688552,-1.716493,-5.974085,3.520989,-0.855225,1.424228],[2.043890,-1.138546,1.980688,-6.024508,6.359898,7.402189,-7.005328,5.593918,1.800591,8.689962,1.120387,8.324202,-0.895447,-8.439052,-0.774823],[7.439708,-8.111435,2.208286,-4.163690,-0.514983,2.179902,4.902463,2.808744,2.678572,-1.735454,-0.376779,-2.357185,-3.177325,-1.523384,9.833597],[-1.055741,7.466702,-0.868180,-0.102067,-5.084855,-5.104553,1.581147,7.110143,3.810887,8.724152,9.720157,8.495962,-3.091449,-5.441844,2.486298],[0.732525,6.236180,-2.647386,9.930501,-8.276782,1.669008,7.536117,-8.245039,1.939504,-5.065020,-9.879352,-8.295899,4.931888,5.675250,-2.986685],[-4.502592,-5.236921,-1.585269,9.513280,-0.027957,8.599793,8.634651,-2.473351,3.490639,4.684872,-4.867934,-3.635622,5.454322,1.112211,2.340538],[8.108041,2.067936,7.751275,-8.494094,-7.629142,-4.902676,-2.661961,-0.338066,-3.525714,4.197906,7.274318,5.827506,-0.607137,-7.591908,9.392422]],[[3.249671,4.751222,-3.217765,-6.389338,3.956451,7.466902,-9.368035,4.197275,-6.979304,6.814307,5.796132,-9.154042,-4.381304,-3.023310,-0.493757],[-9.686449,-5.317530,6.223669,1.122116,-8.972515,-1.136752,-3.226334,5.521144,0.588761,8.078682,8.456199,-0.035206,4.673121,5.525465,8.560847],[7.721245,2.893967,6.712887,1.715748,5.022772,1.886632,9.409502,-6.148425,-3.113961,2.002522,-6.134746,-4.487579,-9.226842,5.262621,5.371924],[8.883062,3.481649,0.715794,8.659717,4.242380,-5.297740,-3.026485,-3.019454,-3.673727,8.843652,6.306862,3.203580,-9.961331,8.699445,1.669109],[-2.997049,-7.406401,5.375659,-8.303186,-1.474030,7.572611,-4.820493,-2.165881,0.395395,9.789853,-8.042666,-0.830686,9.918719,9.333353,2.988675],[0.108938,-2.807366,1.287018,4.027085,-6.233898,5.353552,-1.764978,-0.965638,-2.532358,-2.109017,-2.609486,-1.116241,-7.572142,2.357544,9.241240],[-0.375896,-9.181576,-1.838354,-9.077570,8.884088,2.503203,5.665795,-0.019512,-0.273343,4.422795,0.578394,-8.902705,-2.464379,2.070381,-1.456688]],[[-9.297466,8.407007,5.428418,-4.836227,-1.936725,1.651445,-3.454394,5.076098,-4.422732,-6.837728,-1.158340,0.915509,1.318161,5.004580,7.471237],[3.120182,-2.395790,-6.213657,-0.508047,-5.328151,-1.675628,-3.330461,-3.905674,0.494302,-8.874212,-2.795366,2.147888,5.185984,0.534358,3.846597],[-2.966715,6.222363,-3.340359,8.591688,-2.466914,5.461500,0.509217,-0.938481,9.380879,-8.923088,8.662943,3.590371,-1.355700,9.711925,6.539786],[-6.322459,-4.250856,6.069889,5.767517,1.740690,-2.831945,-3.515272,5.003412,6.978879,-3.376102,-1.380397,-9.524253,7.281685,-4.303377,-4.376767],[3.415843,8.852342,-8.534771,-2.696658,6.728889,-3.799185,-0.158631,8.122072,4.704030,1.615062,-9.374230,3.283803,9.457259,7.454809,8.684465],[7.977580,-6.909284,-3.461860,4.793032,-9.929448,3.531077,-9.710672,6.520206,0.732016,-5.457724,3.859994,-8.340010,9.450771,8.540311,9.030119],[1.886942,3.651157,8.754489,-3.191129,5.142855,-0.006471,4.235178,-4.250276,-0.862081,2.548754,-1.443440,-2.691841,4.455892,-6.374271,-9.234338]],[[-4.803697,7.490164,-0.730627,1.565484,9.038315,5.464582,5.047220,2.717025,-5.901015,1.056622,-6.527132,-5.406330,-3.398142,0.302981,-8.142280],[-1.601660,5.145437,-1.842197,5.315862,-9.730453,-6.889313,-1.092448,5.082740,-0.841094,6.522544,4.730393,4.444738,-2.537736,-9.427174,3.557944],[-5.948437,3.919237,7.769025,7.568082,8.672574,5.916598,8.308298,-4.781001,2.918724,-5.390858,-2.175637,0.611846,5.200688,-6.671926,4.685713],[-0.178225,5.151775,7.068313,-0.303516,5.463589,-3.267484,9.197087,-4.880532,-2.215557,-9.106112,0.373202,4.604632,9.741975,-3.710882,-5.379294],[4.479140,3.385502,-6.871009,6.870713,3.287746,-4.794266,3.305859,-9.715084,4.319265,-6.999435,4.693247,0.737805,-1.086774,-5.515273,-0.463876],[-3.526033,1.848778,-2.450657,-8.943205,-9.933577,6.624399,4.148038,8.414900,-1.144960,2.545565,-0.272801,-4.850163,1.778279,-8.635198,-1.435073],[-2.949403,-7.720624,-1.125514,8.464425,-3.230289,4.488922,-5.214579,8.114418,-9.883916,1.351516,-6.069364,-0.295741,7.545687,6.311858,9.592691]],[[-5.376600,-3.309651,-1.471063,1.240767,8.008525,3.400232,0.930036,7.683475,8.643726,1.406380,5.442995,5.103176,-2.125785,0.328606,-0.369750],[4.878385,-7.109009,-8.519486,6.598474,-1.738672,1.157133,9.340358,-5.978397,6.660424,-5.148908,-4.776260,-9.518671,9.435223,-2.661834,-9.096014],[-6.842178,9.041824,9.668476,2.239749,8.777949,8.064332,7.521341,-7.641709,-9.593024,-1.042665,-4.239002,-0.835778,-4.197522,0.619552,3.847854],[6.794301,-1.023193,-1.503775,-7.877284,-1.243442,-2.663081,3.276005,-9.833110,1.629909,8.755538,6.978729,-5.318611,9.906796,7.330296,4.122558],[-3.735232,-0.213689,8.072711,9.940974,-5.201345,8.471660,6.989014,8.537673,-7.109247,-1.015765,-9.870284,2.079847,-7.946339,8.189231,-3.871862],[-9.012239,5.069328,7.298109,3.524478,1.772591,-8.027924,-5.663481,3.175749,9.264779,-5.741227,0.032179,8.250550,7.548801,9.884745,0.109633],[4.653220,4.207143,9.911719,9.735000,0.419840,-7.876238,-8.498614,8.542316,-5.972674,9.623370,0.994439,0.003872,-3.131533,-4.706237,5.648588]],[[6.546510,5.506240,-5.769776,0.463424,8.166179,-8.651416,-1.794100,1.216933,-1.386033,-0.366527,-8.998919,-0.500711,-1.568293,1.710083,6.768991],[-0.776987,7.276732,1.751071,-5.072959,-6.713844,2.514835,-3.807418,6.771237,9.860952,8.266623,8.776170,6.337597,-7.190299,-7.186067,-9.730829],[-4.278640,-2.746042,-4.346921,0.603853,-7.969988,5.762924,-3.064587,9.167730,1.601400,1.154133,-9.272338,-7.456200,0.669525,1.495812,-2.647914],[7.503259,4.397376,6.542702,9.006632,-3.524162,-5.768953,0.337466,8.047189,-8.777243,3.914019,-3.731813,-4.270998,-8.027096,3.743132,-9.188967],[4.625574,-9.807359,0.279006,6.975648,5.206529,8.055887,5.433957,-5.116920,3.418823,0.826773,8.709042,1.598490,-0.014848,5.896474,9.401427],[-4.151882,7.568242,2.113557,-7.343297,0.823139,7.521227,5.708688,1.243535,8.504012,-2.230312,5.855889,-4.382907,9.494343,-3.304573,-2.342759],[-2.592264,5.990234,-4.200001,4.898509,0.871251,-3.879491,8.840953,9.059538,9.073339,6.862541,9.833752,1.851020,7.509328,-1.428381,5.995736]],[[-5.611320,4.693377,1.538642,-2.372503,-8.986954,8.535410,-7.630859,-3.186487,6.184071,1.387182,8.281682,-8.456350,-1.564879,-6.520818,7.938068],[-0.689019,1.124047,0.972727,4.795764,0.599637,6.973876,-4.923717,2.540714,5.986365,-8.395304,-5.434012,0.895527,6.133517,-4.620203,3.283989],[8.208766,8.744229,4.653571,-2.599660,4.820041,7.426965,-8.374084,-1.262684,-6.573239,3.851887,-6.867830,8.005610,-6.334928,-3.837326,-2.255933],[-0.386652,1.276341,-8.660421,3.761485,1.731341,1.858479,0.139264,-6.448473,3.290537,-1.135908,9.571643,-2.252636,-6.669301,7.056890,-0.353883],[-9.772926,-5.053603,-7.727840,0.465553,7.208393,-6.260871,6.537695,-6.380063,-6.110170,-7.727193,-5.633706,7.872673,-5.754272,0.188127,-4.464833],[2.270839,3.201237,-8.498222,8.480635,7.318066,-5.595907,3.179501,0.329368,8.057501,1.115322,-9.939993,-8.267858,8.758020,-5.985154,-8.137885],[-0.982662,6.118789,6.773558,5.554585,8.528688,7.075914,4.607750,6.190730,7.123508,-9.065890,0.922725,-3.214214,-6.134053,-1.692509,0.739153]],[[-3.863425,1.553148,2.385131,6.324529,2.288171,0.334766,2.822385,8.862569,5.603555,8.190718,4.781564,2.652779,-4.715558,3.993808,-8.211347],[-6.453381,-8.443348,-8.980331,-2.043139,2.056319,1.368701,2.894989,0.925951,8.537435,8.362988,-2.864005,8.400760,-7.555714,3.285479,6.870743],[-5.798551,-7.213158,5.478298,-0.179899,1.486285,1.812786,-9.899210,3.371535,3.606279,0.866446,7.243803,6.410846,2.267878,7.510760,-1.122156],[-5.841446,-1.456818,2.164904,0.257193,8.849327,6.779194,0.493703,3.824255,2.078802,-7.764770,5.792341,-2.957019,-7.787491,5.872357,2.574966],[-3.426113,-5.635908,-3.194705,-6.159723,-0.633080,-0.354819,-9.261600,2.788335,-0.529279,-2.044926,3.464658,9.038277,9.791272,6.709670,6.246468],[-9.222395,-2.273159,-5.879774,-8.378141,3.121693,-9.274533,7.134780,6.932376,4.657407,6.212417,-5.592145,2.164892,3.841319,-0.214921,0.020651],[3.884860,2.080823,3.508797,-3.360964,4.483839,-2.166209,-2.960123,-2.037899,-1.438419,9.019286,-0.658506,5.666736,6.784057,-8.447044,2.854584]]], dtype = "float32")#candidate|3860|(12, 7, 15)|const|float32
uop_3861 = relay.erf(const_3860.astype('float32')) # shape=(12, 7, 15)
func_3664_call = mod.get_global_var('func_3664')
func_3667_call = mutated_mod.get_global_var('func_3667')
var_3864 = relay.var("var_3864", dtype = "uint16", shape = (108,))#candidate|3864|(108,)|var|uint16
call_3863 = relay.TupleGetItem(func_3664_call(relay.reshape(var_3864.astype('uint16'), [1, 12, 9])), 0)
call_3865 = relay.TupleGetItem(func_3667_call(relay.reshape(var_3864.astype('uint16'), [1, 12, 9])), 0)
uop_3872 = relay.log2(call_3863.astype('float32')) # shape=(15, 12, 9)
uop_3874 = relay.log2(call_3865.astype('float32')) # shape=(15, 12, 9)
uop_3876 = relay.atan(uop_3872.astype('float32')) # shape=(15, 12, 9)
uop_3878 = relay.atan(uop_3874.astype('float32')) # shape=(15, 12, 9)
func_3339_call = mod.get_global_var('func_3339')
func_3344_call = mutated_mod.get_global_var('func_3344')
var_3883 = relay.var("var_3883", dtype = "float32", shape = (1, 9))#candidate|3883|(1, 9)|var|float32
const_3884 = relay.const([[5.674904,-7.864719,-6.833690],[0.415603,-0.732096,-5.187966],[3.399380,9.409604,2.665866],[-4.942058,5.321938,-4.595202],[6.186532,8.711136,-9.287386],[-4.444771,0.306294,2.238223],[3.268424,-7.784974,2.099487],[5.026503,-2.278993,-8.166737],[5.604702,4.993507,2.438032],[-5.843598,6.003845,-2.107378],[-2.892266,7.940090,-5.149140],[-6.918363,1.818353,3.312220],[3.458733,8.705240,3.232475],[-6.523787,-0.701956,5.106064],[9.116720,-5.891624,3.011033],[1.869362,8.175789,6.533977],[5.931999,-5.451942,-7.705459],[4.844820,-5.407817,0.157605],[-3.111506,8.204452,8.645061],[9.339660,-2.528980,1.441798],[-9.222288,5.989855,4.266237],[0.811651,-6.518325,1.437325],[0.004480,1.329628,4.735458],[4.473065,-6.891812,-7.286975],[1.043791,-0.068503,7.633929],[7.074495,-2.342924,0.378814],[5.848872,-4.622721,-4.978715],[-8.347361,-0.293090,-8.614671],[-2.426003,-9.880405,-0.299165],[-4.821032,-3.232345,6.778694],[-7.449923,4.606328,9.236135],[-4.651919,-9.512620,1.728684],[-1.054078,-0.541519,4.850135],[-8.812676,4.744304,-9.680865],[1.968991,8.142270,2.131274],[6.187830,-8.125809,0.630106],[-5.811958,-0.706184,-4.409182],[3.377721,-1.315623,-5.849225],[-9.530766,1.265305,4.110252],[6.694121,9.709215,-7.754784],[2.984122,-7.015179,-1.503940],[-5.628317,-2.940840,9.307354],[-4.820805,6.178083,7.107337],[-0.492480,0.203506,5.672837],[2.337407,2.198282,7.012180],[0.982555,-6.647907,-3.112592],[6.350478,6.321078,-1.641867],[2.342309,5.769501,3.615238],[-9.622541,3.854759,4.863425],[-6.996551,0.770364,8.957735],[3.347733,-7.069987,0.117647],[-7.510574,7.522301,-0.947316],[9.067385,-6.934535,-1.898744],[4.700483,3.605664,-1.032253],[4.553823,8.557072,0.429945],[8.731228,5.542069,-0.652184],[7.868296,-0.335128,-7.651974],[-1.435817,-1.601505,-0.834569],[-6.385371,2.657155,-6.878553],[-1.133780,-9.472192,6.957523],[6.642849,-9.393618,-8.294061],[8.623230,1.269756,-8.710487],[-7.829559,2.907112,0.337676],[7.850282,0.308304,6.882224],[6.880303,2.505292,9.585019],[8.519506,-7.051960,3.491485],[-8.783940,-5.217545,-4.087139],[7.088630,6.789433,5.455919],[-9.011336,-9.484842,4.569215],[-8.002922,4.728382,-6.006985],[-3.695102,1.174428,6.154478],[6.161257,5.069691,-0.720384],[-5.325874,-3.826035,-3.348395],[-3.096143,2.855673,9.505368],[-4.047349,5.619576,8.470321],[-5.092719,0.702419,-5.531460],[-3.748095,-2.515755,6.840075],[-4.492255,-0.922318,7.122347],[-1.869294,1.085381,-3.431854],[0.904403,-1.580987,0.218727],[-3.822905,2.281587,0.279684],[0.989649,1.152867,-6.308462],[-6.789777,-9.457788,7.353097],[1.946798,1.847718,1.849031],[3.356888,-4.037822,4.344387],[-5.452535,6.016664,3.780682],[6.763262,3.932720,-7.496080],[-1.744068,-9.071520,4.737491],[-8.560079,2.042909,-1.645856],[-3.360882,2.139478,9.815765],[-6.052277,4.851974,-6.308636],[-6.037467,0.265841,-7.543969],[1.618098,-1.000802,-0.091336],[-1.644234,-4.813322,-9.575933],[-1.011726,4.330974,-4.752295],[6.947120,-7.103209,-3.366389],[2.528332,-7.982530,-4.280213],[2.562651,9.352076,7.377042],[5.885557,3.927091,-8.188904],[-4.608434,-8.151498,-4.418750],[2.017985,7.352188,-0.415157],[-5.752217,-5.644537,-6.097376],[2.542281,4.500852,2.027613],[-2.179347,-4.802913,0.659381],[-7.694789,7.310951,8.667685],[0.706234,4.487328,-9.986750],[-3.940306,-8.488597,8.693755],[-4.077986,-4.316129,-7.270788],[-9.466102,-3.220538,-3.204547],[6.273475,-5.985853,6.776869],[1.185568,-1.389427,5.919070],[-7.171102,5.725660,-9.971245],[-1.125201,1.021114,-3.304243],[-7.097188,1.375177,9.471585],[-6.060138,-5.695782,-2.167047],[-0.431104,-4.347118,-9.394403],[6.905025,8.327082,9.513695],[-2.559549,-8.924408,-6.975024],[1.211062,-5.262396,-7.793175],[-2.890617,-6.093581,2.316412],[-2.566279,-5.219020,-4.558134],[-8.430710,-1.012345,-9.669379],[9.145261,3.824850,-0.107736],[4.401077,-9.108879,-5.612680],[8.300159,-9.183201,0.596936],[-6.157684,5.733943,-6.747619],[-5.649337,-1.293898,7.887574],[-3.068888,0.207467,-9.377120],[-9.264337,6.359632,7.391237],[9.274237,-5.152970,2.290180],[4.747437,7.558912,-5.468460],[-5.414793,-5.568507,1.688672],[4.923922,-7.358019,4.759447],[-3.228586,-2.597040,1.589445],[-5.526910,8.582628,-8.429242],[-5.559037,-7.965753,-3.585341],[-9.872309,5.164718,3.307239],[-7.295103,6.845014,9.139647],[3.993982,-5.710372,3.432048],[-6.941807,-0.040814,-1.952322],[-9.680735,-2.719287,-7.394912],[1.432227,2.850769,8.577381],[-7.392503,6.452153,0.302888],[-8.476797,-2.894447,-4.220845],[-6.855562,9.298992,-3.489233],[4.803231,4.054468,-3.699437],[7.671507,-3.610860,-0.429389],[0.744666,1.353498,-0.092605],[-6.228791,7.908764,7.956181],[-7.799965,-4.067382,-9.534526],[-0.912486,1.843314,7.764058],[7.917664,-5.845868,3.898940],[-1.336114,9.805576,0.224948],[-5.318885,-6.181389,4.244946],[7.938883,-4.876639,6.351656],[6.545266,-0.016922,9.704753],[-8.885149,-9.913567,-7.544435],[0.856865,1.579191,-4.292991],[3.076728,-5.578181,5.108206],[3.702961,0.203146,-0.267360],[8.027503,-2.158574,3.685235],[1.082766,3.303326,-0.697750],[-2.628416,-8.571145,-4.203057],[-9.507595,4.800684,4.564956],[-2.324334,6.295941,-6.293684],[3.564796,5.680537,-7.011845],[3.691622,-4.245892,4.198423],[3.851993,2.055801,9.777318],[-0.967259,1.513052,-1.312119],[-2.026207,4.934966,7.421553],[-9.980352,0.188725,-3.812339],[-7.768591,-1.866640,-9.687962],[3.024167,6.520942,3.773436],[-0.285865,-5.781040,7.995988],[-2.131759,-5.223494,-4.058556],[-5.405659,-3.938551,-7.488704],[0.515926,-4.485541,-1.085030],[5.594137,-7.005914,-0.294797],[-7.379168,-3.811260,-5.295148],[3.680497,5.088498,-5.841307],[1.494194,-5.554848,4.308345],[2.731931,1.478333,-3.767397],[-8.333203,4.196869,-6.773817],[4.903192,-9.147728,1.160340],[0.704555,-3.217214,-8.721777],[-1.671713,1.587053,2.938841],[-5.185159,4.698187,3.569792],[0.865511,3.120523,-1.487800],[-7.926061,-8.822581,6.923777],[0.846027,5.719402,-5.657286],[-9.638575,6.881160,8.758222],[-4.896052,1.601211,-6.006642],[1.896624,6.585811,-6.188121],[-2.079932,0.724082,-2.344654],[9.078540,7.313975,7.770163],[-6.720987,0.749894,9.185058],[9.502871,-0.518709,4.578549],[9.589909,-9.845180,2.042355],[-6.645625,6.119546,4.199219],[8.089373,2.407656,3.674002],[-3.300876,-9.254338,2.604763],[-1.079001,-1.556580,-5.926886],[6.488703,-9.440151,-3.102480],[7.862891,-7.308427,-7.305666],[-0.964082,-1.061808,-9.540572],[-9.939744,8.333105,-5.930190],[-5.147804,3.070097,4.566335],[-2.471193,2.647312,-2.548295],[-6.159207,9.208229,-8.982639],[-9.962179,9.676677,-5.242450],[-5.308109,-5.355628,-6.284561],[0.698750,5.520020,7.004271],[-9.865231,-8.647668,-2.540172],[0.671333,-0.482017,9.960897],[-7.633651,5.175910,-6.365892],[8.576894,-8.635803,0.577834],[7.903491,6.434325,3.011048],[0.117247,-9.957822,-5.174072],[8.501590,4.645231,-6.920438],[-6.099598,6.234187,-2.594603],[-2.791486,-8.912407,4.003080],[6.526745,-6.122314,9.049836],[6.516729,9.283497,-5.660568],[-4.550352,8.460689,2.219812],[6.381333,-0.120871,1.198583]], dtype = "float32")#candidate|3884|(225, 3)|const|float32
var_3885 = relay.var("var_3885", dtype = "float64", shape = (98,))#candidate|3885|(98,)|var|float64
call_3882 = relay.TupleGetItem(func_3339_call(relay.reshape(var_3883.astype('float32'), [1, 1, 9]), relay.reshape(const_3884.astype('float32'), [5, 15, 9]), relay.reshape(var_3885.astype('float64'), [98,]), ), 0)
call_3886 = relay.TupleGetItem(func_3344_call(relay.reshape(var_3883.astype('float32'), [1, 1, 9]), relay.reshape(const_3884.astype('float32'), [5, 15, 9]), relay.reshape(var_3885.astype('float64'), [98,]), ), 0)
func_275_call = mod.get_global_var('func_275')
func_278_call = mutated_mod.get_global_var('func_278')
var_3892 = relay.var("var_3892", dtype = "float32", shape = (1344,))#candidate|3892|(1344,)|var|float32
call_3891 = func_275_call(relay.reshape(var_3892.astype('float32'), [14, 16, 6]))
call_3893 = func_275_call(relay.reshape(var_3892.astype('float32'), [14, 16, 6]))
uop_3894 = relay.erf(uop_3872.astype('float64')) # shape=(15, 12, 9)
uop_3896 = relay.erf(uop_3874.astype('float64')) # shape=(15, 12, 9)
uop_3903 = relay.rsqrt(uop_3876.astype('float32')) # shape=(15, 12, 9)
uop_3905 = relay.rsqrt(uop_3878.astype('float32')) # shape=(15, 12, 9)
func_3444_call = mod.get_global_var('func_3444')
func_3450_call = mutated_mod.get_global_var('func_3450')
var_3907 = relay.var("var_3907", dtype = "int8", shape = (360,))#candidate|3907|(360,)|var|int8
var_3908 = relay.var("var_3908", dtype = "int64", shape = (1500,))#candidate|3908|(1500,)|var|int64
call_3906 = relay.TupleGetItem(func_3444_call(relay.reshape(var_3907.astype('int8'), [8, 5, 9]), relay.reshape(call_3882.astype('float32'), [675,]), relay.reshape(var_3885.astype('float64'), [7, 14]), relay.reshape(var_3908.astype('int64'), [1500,]), ), 2)
call_3909 = relay.TupleGetItem(func_3450_call(relay.reshape(var_3907.astype('int8'), [8, 5, 9]), relay.reshape(call_3882.astype('float32'), [675,]), relay.reshape(var_3885.astype('float64'), [7, 14]), relay.reshape(var_3908.astype('int64'), [1500,]), ), 2)
uop_3910 = relay.sigmoid(uop_3903.astype('float32')) # shape=(15, 12, 9)
uop_3912 = relay.sigmoid(uop_3905.astype('float32')) # shape=(15, 12, 9)
func_220_call = mod.get_global_var('func_220')
func_223_call = mutated_mod.get_global_var('func_223')
var_3915 = relay.var("var_3915", dtype = "float64", shape = (78,))#candidate|3915|(78,)|var|float64
call_3914 = func_220_call(relay.reshape(var_3915.astype('float64'), [13, 2, 3]))
call_3916 = func_220_call(relay.reshape(var_3915.astype('float64'), [13, 2, 3]))
func_2712_call = mod.get_global_var('func_2712')
func_2714_call = mutated_mod.get_global_var('func_2714')
const_3926 = relay.const([9.425960,-6.862577,-7.882605,1.416007,-6.087930,7.035569,-1.184186,9.193124,2.883709,6.592156,-0.849369,6.196617,-4.211240,-0.497949,-0.132551,7.685342,-6.325753,-5.896381,-8.371031,-2.365904,-0.551680,3.346969,-5.079749,-2.797576,-6.252014,-7.945986,-0.131552,1.781062,-6.256797,-1.960140,9.491026,-0.708898,-4.612647,-7.366876,-6.877792,7.245597,3.379083,0.121703,-1.286239,3.147821,5.763238,7.027063,0.025629,0.517698,-8.138965,-8.311149,5.106019,-7.881682,4.859540,-6.736912,0.114757,5.001110,-0.283414,-0.300111,-9.153105,7.111277,9.358572,4.689338,-8.210376,-0.244631,-8.651357,-7.251704,7.827548,6.296265,5.973543,-7.245776,-9.295321,3.148728,6.299444,2.118247,0.188972,5.243932,6.759976,4.093232,3.560551,-6.193835,5.918506,1.091647,3.911897,7.492484,-1.733707,8.837644,8.312860,9.098078,-7.719883,-1.173549,-4.080295,7.240062,-1.508418,3.505217,-5.383513,-8.187972,-3.740675,5.271464,-8.328807,-1.704750,-4.834519,6.106322,4.377062,-1.320818,1.965721,5.853611,0.915141,4.500914,-4.666409,2.548769,2.860913,-1.292325,-0.841035,9.757460,-1.117775,2.992706,-9.966201,6.389625,-6.082950,7.129152,-1.960721,2.121331,9.884921,-8.592848,6.928266,3.098504,3.156267,-2.296594,5.139652,-8.994236,6.458212,-7.595229,3.801818,0.542518,-3.197629,5.529673,-3.532600,-7.425737,-7.295526,9.503455,-7.093184,-8.313820,-5.685852,3.077041,-9.343085,7.980035,-6.053662,8.732775,4.891111,9.036297,-6.204079,1.110715,0.710015,-8.315938,-5.183771,7.026059,-4.052822,-6.899147,-4.767284,-3.174823,9.843541,-9.416638,-0.419013,8.051001,1.381618,5.642300,-5.280010,-3.514163,-5.411211,2.027833,-5.592922,5.835733,-3.449561,7.528910,-8.029299,2.261500,1.428591,8.705845,-6.060387,-6.127459,3.400378,3.971153,-6.585844,7.301707,-2.683052,0.941478,6.969060,-4.982801,-1.584015,-4.061191,0.884963,-3.099286,8.957500,-1.996427,7.099687,2.261180,-3.659131,-5.572162,-2.934871,0.796504,-9.422968,0.174101,-3.475760,4.737054,6.926724,3.453572,2.490865,-8.548056,3.990578,-4.326044,3.465420,6.587891,-7.130136,-8.796175,4.793961,-0.294019,-5.850266,7.420419,0.078734,9.878831,-5.599997,4.907841,-6.782775,-1.843624,2.943081,-2.571213,4.283348,-5.750004,4.521393,-6.704635,2.033436,-5.539304,6.550372,-0.319877,-2.952119,2.929942,-1.496429,6.564928,-4.544419,-9.875489,-5.698344,-8.084431,-7.682822,-2.994427,4.260664,-9.268259,4.677986,-3.374146,-8.120460,8.253697,-9.329922,7.958025,9.852905,-5.984279,-6.878245,2.301504,2.716669,-2.912658,1.042428,-8.391623,-3.549701,6.552787,2.673526,-5.964093,-3.889557,2.031486,-1.960897,7.242116,6.586003,-2.757177,-4.667589,-5.612304,9.694485,4.479120,0.546552,-3.322032,-6.007444,6.879027,3.142209,3.943059,4.513073,9.369282,6.822362,-9.466268,-8.146855,-7.693466,-9.063965,-2.671260,-9.531163,-6.664097,3.619108,8.432914,-0.364984,-2.599311,-2.155584,9.636829,-3.910304,4.918054,9.963284,-2.310302,-1.355717,-0.368512,7.143807,6.901532,-5.217102,-5.082412,-4.466157,9.156164,-4.555662,-4.455649,0.351801,7.095606,-1.855609,0.574268,-5.464943,3.893782,5.059018,6.148039,7.944984,-3.693945,7.227425,8.033403,-1.324224,-4.706113,-1.604925,6.479499,7.692169,9.785615,1.579912,1.697354,-3.270408,5.831314,3.889051,7.545413,4.766358,-3.445909,-6.333209,-2.253855,2.712021,7.347279,1.163579,3.950543,9.651757,5.776669,-5.814044,-7.465312,6.336522,-5.064004,3.064021,6.625697,3.713318,7.461887,-6.848222,-9.906316,-0.760707,0.164858,-5.457873,-2.060637,-1.322819,-3.177159,1.260796,7.470701,-9.289888,1.773478,1.698181,-0.248454,-8.331230,-6.370245,1.258634,-8.199922,9.245039,-9.150612,4.024626,0.158960,-5.527480,-7.809862,1.513355,-5.702005,0.342226,0.958655,5.054101,1.948115,5.509372,-6.992950,-0.558533,-1.702326,-0.292238,4.932479,-7.484296,2.608653,-1.170311,-2.185033,-8.683670,-5.868068,-4.351374,-3.503205,3.766550,1.611159,-7.861502,-8.882130], dtype = "float32")#candidate|3926|(396,)|const|float32
call_3925 = func_2712_call(relay.reshape(const_3926.astype('float32'), [11, 12, 3]))
call_3927 = func_2712_call(relay.reshape(const_3926.astype('float32'), [11, 12, 3]))
func_1705_call = mod.get_global_var('func_1705')
func_1708_call = mutated_mod.get_global_var('func_1708')
call_3934 = relay.TupleGetItem(func_1705_call(relay.reshape(var_3908.astype('int64'), [15, 10, 10]), relay.reshape(var_3908.astype('int64'), [15, 10, 10]), ), 1)
call_3935 = relay.TupleGetItem(func_1708_call(relay.reshape(var_3908.astype('int64'), [15, 10, 10]), relay.reshape(var_3908.astype('int64'), [15, 10, 10]), ), 1)
func_1705_call = mod.get_global_var('func_1705')
func_1708_call = mutated_mod.get_global_var('func_1708')
call_3940 = relay.TupleGetItem(func_1705_call(relay.reshape(var_3908.astype('int64'), [15, 10, 10]), relay.reshape(var_3908.astype('int64'), [15, 10, 10]), ), 0)
call_3941 = relay.TupleGetItem(func_1708_call(relay.reshape(var_3908.astype('int64'), [15, 10, 10]), relay.reshape(var_3908.astype('int64'), [15, 10, 10]), ), 0)
func_2712_call = mod.get_global_var('func_2712')
func_2714_call = mutated_mod.get_global_var('func_2714')
call_3952 = func_2712_call(relay.reshape(call_3925.astype('float32'), [11, 12, 3]))
call_3953 = func_2712_call(relay.reshape(call_3925.astype('float32'), [11, 12, 3]))
output = relay.Tuple([uop_3861,var_3864,call_3882,var_3883,const_3884,var_3885,call_3891,var_3892,uop_3894,call_3906,var_3907,var_3908,uop_3910,call_3914,var_3915,call_3925,const_3926,call_3934,call_3940,call_3952,])
output2 = relay.Tuple([uop_3861,var_3864,call_3886,var_3883,const_3884,var_3885,call_3893,var_3892,uop_3896,call_3909,var_3907,var_3908,uop_3912,call_3916,var_3915,call_3927,const_3926,call_3935,call_3941,call_3953,])
func_3956 = relay.Function([var_3864,var_3883,var_3885,var_3892,var_3907,var_3908,var_3915,], output)
mod['func_3956'] = func_3956
mod = relay.transform.InferType()(mod)
mutated_mod['func_3956'] = func_3956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3956_call = mutated_mod.get_global_var('func_3956')
var_3958 = relay.var("var_3958", dtype = "uint16", shape = (108,))#candidate|3958|(108,)|var|uint16
var_3959 = relay.var("var_3959", dtype = "float32", shape = (1, 9))#candidate|3959|(1, 9)|var|float32
var_3960 = relay.var("var_3960", dtype = "float64", shape = (98,))#candidate|3960|(98,)|var|float64
var_3961 = relay.var("var_3961", dtype = "float32", shape = (1344,))#candidate|3961|(1344,)|var|float32
var_3962 = relay.var("var_3962", dtype = "int8", shape = (360,))#candidate|3962|(360,)|var|int8
var_3963 = relay.var("var_3963", dtype = "int64", shape = (1500,))#candidate|3963|(1500,)|var|int64
var_3964 = relay.var("var_3964", dtype = "float64", shape = (78,))#candidate|3964|(78,)|var|float64
call_3957 = func_3956_call(var_3958,var_3959,var_3960,var_3961,var_3962,var_3963,var_3964,)
output = call_3957
func_3965 = relay.Function([var_3958,var_3959,var_3960,var_3961,var_3962,var_3963,var_3964,], output)
mutated_mod['func_3965'] = func_3965
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3993 = relay.var("var_3993", dtype = "float32", shape = (14, 10, 8))#candidate|3993|(14, 10, 8)|var|float32
var_3994 = relay.var("var_3994", dtype = "float32", shape = (14, 10, 8))#candidate|3994|(14, 10, 8)|var|float32
bop_3995 = relay.floor_divide(var_3993.astype('float32'), relay.reshape(var_3994.astype('float32'), relay.shape_of(var_3993))) # shape=(14, 10, 8)
func_3647_call = mod.get_global_var('func_3647')
func_3649_call = mutated_mod.get_global_var('func_3649')
var_4002 = relay.var("var_4002", dtype = "float32", shape = (72,))#candidate|4002|(72,)|var|float32
call_4001 = func_3647_call(relay.reshape(var_4002.astype('float32'), [6, 12, 1]))
call_4003 = func_3647_call(relay.reshape(var_4002.astype('float32'), [6, 12, 1]))
output = relay.Tuple([bop_3995,call_4001,var_4002,])
output2 = relay.Tuple([bop_3995,call_4003,var_4002,])
func_4007 = relay.Function([var_3993,var_3994,var_4002,], output)
mod['func_4007'] = func_4007
mod = relay.transform.InferType()(mod)
var_4008 = relay.var("var_4008", dtype = "float32", shape = (14, 10, 8))#candidate|4008|(14, 10, 8)|var|float32
var_4009 = relay.var("var_4009", dtype = "float32", shape = (14, 10, 8))#candidate|4009|(14, 10, 8)|var|float32
var_4010 = relay.var("var_4010", dtype = "float32", shape = (72,))#candidate|4010|(72,)|var|float32
output = func_4007(var_4008,var_4009,var_4010,)
func_4011 = relay.Function([var_4008,var_4009,var_4010,], output)
mutated_mod['func_4011'] = func_4011
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4324 = relay.var("var_4324", dtype = "int64", shape = (15, 5, 7))#candidate|4324|(15, 5, 7)|var|int64
var_4325 = relay.var("var_4325", dtype = "int64", shape = (15, 5, 7))#candidate|4325|(15, 5, 7)|var|int64
bop_4326 = relay.subtract(var_4324.astype('int64'), relay.reshape(var_4325.astype('int64'), relay.shape_of(var_4324))) # shape=(15, 5, 7)
func_3647_call = mod.get_global_var('func_3647')
func_3649_call = mutated_mod.get_global_var('func_3649')
var_4336 = relay.var("var_4336", dtype = "float32", shape = (72,))#candidate|4336|(72,)|var|float32
call_4335 = func_3647_call(relay.reshape(var_4336.astype('float32'), [6, 12, 1]))
call_4337 = func_3647_call(relay.reshape(var_4336.astype('float32'), [6, 12, 1]))
output = relay.Tuple([bop_4326,call_4335,var_4336,])
output2 = relay.Tuple([bop_4326,call_4337,var_4336,])
func_4343 = relay.Function([var_4324,var_4325,var_4336,], output)
mod['func_4343'] = func_4343
mod = relay.transform.InferType()(mod)
mutated_mod['func_4343'] = func_4343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4343_call = mutated_mod.get_global_var('func_4343')
var_4345 = relay.var("var_4345", dtype = "int64", shape = (15, 5, 7))#candidate|4345|(15, 5, 7)|var|int64
var_4346 = relay.var("var_4346", dtype = "int64", shape = (15, 5, 7))#candidate|4346|(15, 5, 7)|var|int64
var_4347 = relay.var("var_4347", dtype = "float32", shape = (72,))#candidate|4347|(72,)|var|float32
call_4344 = func_4343_call(var_4345,var_4346,var_4347,)
output = call_4344
func_4348 = relay.Function([var_4345,var_4346,var_4347,], output)
mutated_mod['func_4348'] = func_4348
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4523 = relay.var("var_4523", dtype = "float64", shape = (5, 14, 12))#candidate|4523|(5, 14, 12)|var|float64
uop_4524 = relay.asin(var_4523.astype('float64')) # shape=(5, 14, 12)
uop_4528 = relay.erf(uop_4524.astype('float32')) # shape=(5, 14, 12)
output = uop_4528
output2 = uop_4528
func_4530 = relay.Function([var_4523,], output)
mod['func_4530'] = func_4530
mod = relay.transform.InferType()(mod)
var_4531 = relay.var("var_4531", dtype = "float64", shape = (5, 14, 12))#candidate|4531|(5, 14, 12)|var|float64
output = func_4530(var_4531)
func_4532 = relay.Function([var_4531], output)
mutated_mod['func_4532'] = func_4532
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4758 = relay.var("var_4758", dtype = "float64", shape = (1, 5, 16))#candidate|4758|(1, 5, 16)|var|float64
uop_4759 = relay.sinh(var_4758.astype('float64')) # shape=(1, 5, 16)
output = uop_4759
output2 = uop_4759
func_4767 = relay.Function([var_4758,], output)
mod['func_4767'] = func_4767
mod = relay.transform.InferType()(mod)
var_4768 = relay.var("var_4768", dtype = "float64", shape = (1, 5, 16))#candidate|4768|(1, 5, 16)|var|float64
output = func_4767(var_4768)
func_4769 = relay.Function([var_4768], output)
mutated_mod['func_4769'] = func_4769
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4777 = relay.const([[[2.143556,-5.271331,1.150165,-0.504453,6.002313,0.477021,-5.112336,9.160008,-9.568198],[-2.872890,-2.613673,6.543963,5.066262,2.712698,2.497093,-4.604086,6.074052,-1.124832],[-9.133656,8.887606,-9.818793,2.321221,-5.762949,-6.073129,-2.629672,-4.999513,1.250686],[-4.743679,-8.379227,8.953148,-6.010279,-1.905601,2.176508,5.955033,5.117297,6.908867],[3.609329,-1.116972,-5.828787,-6.771339,8.758408,7.134033,-6.711954,7.547827,-9.186507],[-6.539085,5.590207,-6.734302,-7.286143,-4.506800,-7.284868,6.168152,-7.631485,6.683129],[-2.966325,1.898087,0.876580,5.927407,-7.131619,-9.114056,2.107419,0.135250,3.198477],[8.865553,6.984814,8.751324,-7.271785,5.680252,5.131160,7.012985,8.532515,3.509871],[8.322606,-1.847950,-3.387047,-5.406953,-7.671106,-8.785673,3.962384,7.560710,6.267310],[6.650350,1.011724,-6.851380,2.851891,9.092140,-4.024520,6.432272,0.896343,4.106853],[-9.019523,1.127347,9.135640,-2.559630,-9.114440,-4.291394,5.894338,2.364192,-8.219887],[7.473369,7.342489,-0.120461,0.187011,9.280774,-9.034171,-1.030353,0.234021,6.565493]],[[4.110156,8.171369,3.546119,8.148951,6.638977,5.023322,-1.695307,-6.809041,5.466747],[8.354357,-0.247202,5.197645,4.228741,-4.009023,-1.036538,-2.601462,3.378531,7.070332],[3.815871,1.446771,3.173250,-0.774597,3.776931,1.237303,-1.139827,-9.867908,0.083841],[1.733475,3.158971,3.328276,2.131780,-5.212242,-7.384800,6.710442,-7.945529,-1.038310],[5.545639,-7.388347,8.618415,-5.469825,-0.012049,7.607235,-7.828530,7.679578,-1.628408],[3.815466,-4.973845,-3.673222,0.576399,-2.307619,5.507785,8.233161,1.811793,9.427728],[8.045930,-7.053671,-0.239111,-7.429708,-6.189255,5.702638,-6.080820,-4.730225,-6.857120],[5.308836,-8.551680,0.026873,3.117287,0.255540,-6.807693,6.196989,-0.007562,-9.149081],[2.709319,4.809681,-2.877252,-8.098693,-9.449407,2.122893,-1.486551,-8.401594,-9.407454],[-2.140446,1.553312,-6.818921,-3.501795,6.360644,-5.178260,-8.627386,-8.599770,7.750281],[-5.401445,-2.221324,3.143694,0.085480,-6.745376,-9.905623,8.301671,-3.840446,-1.394196],[4.753727,3.773673,8.306625,-2.619396,1.625788,-0.229766,7.499209,9.734102,2.237396]],[[5.326396,-7.766471,-4.164117,-9.295664,6.226723,-0.198247,6.011005,-1.654852,0.166900],[-0.356904,2.317543,-0.475085,4.307837,-0.013981,4.255540,9.411929,-0.761928,4.062475],[-1.382907,0.407912,-2.278478,-8.236985,4.849341,-0.683570,-8.214526,-4.372597,6.364824],[9.249358,-0.870169,0.532219,5.140819,-0.374711,-6.803297,5.790803,4.557033,-1.470649],[-7.967831,7.538725,1.236868,-8.466409,8.889073,-4.857331,-7.049430,2.892440,4.038777],[-7.937330,3.718424,8.242123,-4.567674,-1.108254,6.701635,-5.418332,2.545176,1.703026],[7.841426,2.056255,-0.092932,8.324571,7.480596,1.464796,8.488446,-1.512281,-8.936147],[-8.384669,-8.807682,-5.983972,6.741572,2.674055,-6.464830,-4.657807,2.636285,-1.946120],[8.947685,-8.773226,-3.645571,3.638075,9.003782,-0.541551,7.460228,9.684235,-2.205219],[8.026018,-1.016609,-4.970230,0.595483,-3.064391,-6.108549,-6.697513,1.154723,5.027213],[-9.422114,5.785997,-3.201063,5.956992,0.613335,7.320628,-2.916659,5.210771,5.795181],[-8.525836,-1.034605,8.449791,8.708593,-9.479351,-5.736151,6.188055,3.014250,7.473670]],[[-6.789682,9.738219,2.339058,7.600767,-7.916496,-3.876364,4.640998,-3.437838,7.476095],[-2.766166,-5.411125,8.911665,-2.432546,5.824259,-9.627483,2.725103,-1.799594,-7.050003],[3.739258,3.607727,-3.211937,-8.112977,-4.907018,-7.307355,-9.628241,8.268505,0.757709],[-9.986008,5.261859,6.373107,-5.242595,-2.342141,-9.958886,-8.590771,4.030753,6.171593],[9.943920,2.942802,-6.854669,7.663643,-9.736178,0.158841,-2.038383,-9.160129,-7.818776],[3.941308,-3.584422,1.551757,-0.054174,6.008223,1.874200,3.986325,-9.733903,0.038706],[-1.181036,6.550629,9.363980,7.246857,-1.725848,9.073074,5.495285,6.666376,-6.698236],[-0.867716,-3.437379,-8.892262,-9.175664,-8.590151,-9.497666,-1.980056,4.795836,-9.298490],[-5.429935,-2.235031,8.933326,6.340926,-0.368979,-1.622317,1.302992,5.546393,-2.977324],[-5.750653,0.917452,4.163879,-9.605128,8.438687,-5.826623,-6.034976,1.801867,5.389836],[-9.454498,9.482081,-2.184497,0.852051,4.089363,6.444019,0.210317,-6.620097,9.663521],[-0.205934,2.867139,0.858018,9.215841,7.246610,-8.054010,8.711181,3.082679,5.734172]],[[2.351482,-7.838512,1.640778,-8.853641,6.392226,7.747818,6.419670,-3.266401,9.679544],[-8.831501,1.232402,5.116021,-1.520765,-1.188105,-2.105995,5.074775,-8.596156,-9.380692],[-8.965148,-7.532443,0.686874,-4.567073,-4.847075,-2.315918,-5.295780,-6.253231,-9.370147],[8.156104,1.870061,-7.277086,4.435956,1.296888,9.536915,6.372662,-9.964206,8.207862],[7.469675,-3.657456,-2.952060,-1.517046,2.054264,-2.511450,-8.485229,6.080454,6.649674],[4.072210,9.554963,8.492988,-6.026747,-2.500885,-6.794867,7.282635,3.927958,0.984655],[-9.635725,-8.168703,4.068414,0.066503,-3.270097,1.105403,-8.320487,-2.711254,9.040222],[9.540876,-1.799911,-8.934039,8.393807,2.854260,-7.229498,3.267171,-0.583118,-7.950072],[-8.086871,2.610643,-4.482953,0.007421,-1.339260,1.875749,6.713023,7.159650,-0.656386],[-2.798163,2.475982,3.881222,7.350375,-6.175411,-8.023322,5.240307,-4.791529,-8.356253],[7.347094,-5.274916,0.228643,7.787535,-0.419486,8.760866,-5.606309,-5.877404,7.804421],[1.528480,-3.728703,-8.758518,6.970317,-4.349261,-0.731424,-7.734025,-1.361900,3.215214]],[[-7.771733,-3.844653,-1.131625,-3.135562,3.734291,-0.200536,-0.169061,5.044338,-3.046471],[2.814885,2.964768,5.331654,-9.297111,9.808908,-8.113350,2.033747,9.058787,1.845396],[3.771733,2.870234,8.643765,2.498422,9.595276,-6.484604,-5.869426,3.555102,4.874732],[4.373096,9.223927,-1.130003,-0.421705,-8.160748,8.463235,0.229162,2.128068,-6.615597],[-8.429439,-5.104039,-3.329249,2.554942,9.572175,6.627752,-3.161250,-8.166797,0.312371],[9.273144,-7.318894,-8.277728,-5.050275,-4.288927,-9.824199,-8.091997,-9.736398,-6.169063],[2.116444,8.800145,2.621787,-3.003306,-5.875695,1.752478,9.805129,3.373410,-7.209483],[-5.007971,1.167385,1.102032,8.842283,-5.779082,-2.530661,-6.327508,0.009107,-1.673837],[-8.432323,-5.833584,-7.143312,0.249533,-1.256655,5.671238,-8.593435,7.511138,3.300983],[8.125259,-4.330073,-5.456940,-6.188798,1.728041,1.380031,-3.050682,-2.177310,-3.856019],[-2.945027,-0.092022,-3.285234,-7.959833,5.255982,-6.954515,-7.166495,0.781433,6.428465],[9.983400,3.394663,4.953195,3.917757,-0.918272,-8.362115,-8.030090,-9.401878,-7.992069]],[[-1.667843,3.491442,-7.832300,-4.178642,2.483656,-4.451108,-8.489917,0.998208,-4.050183],[-9.195368,-1.192333,5.685021,1.373666,-6.301169,-3.963221,-9.452929,4.047330,1.351708],[9.899391,-3.700966,7.358442,1.036426,-9.513183,8.837234,-5.645559,-1.936306,1.908811],[2.947034,9.644121,-8.252393,-0.330096,1.305955,1.269267,-0.214245,-6.943681,2.817767],[5.356225,3.770877,4.742681,-5.654784,-2.521974,8.872030,-3.457116,-2.272598,-9.464288],[0.779773,2.725627,-2.526531,4.487146,2.902238,0.392388,-0.965238,-8.236685,-0.034054],[-0.346609,9.038280,-3.672796,-6.850926,1.254048,-7.815524,-0.388345,1.319755,-8.021492],[-0.401970,-9.490678,-8.675699,-7.579101,-7.728106,-6.110231,4.984050,9.363737,-3.353352],[4.586854,-2.372826,6.253675,-5.838375,-8.353519,-4.052229,1.307219,5.957478,-9.095768],[4.503474,-6.618336,6.234794,-8.096336,0.877320,4.280558,5.307151,7.748679,-6.810305],[6.940879,-0.646586,-2.080504,-7.735311,6.840864,4.127873,1.068121,-3.053849,-7.565855],[4.035791,-0.590316,-4.516685,-5.248274,-4.894071,5.993864,-9.492852,1.555071,-2.264171]],[[8.777708,1.346181,-9.558110,1.855809,5.313662,3.972962,9.926577,7.827161,-6.474828],[-3.583381,0.680894,-0.228848,9.304788,4.667923,2.975121,-8.095372,1.773495,5.742151],[-2.377415,5.732365,-5.289026,0.851668,0.184563,-9.173449,-8.032661,-8.818126,0.535261],[-7.150776,-0.025937,-3.395869,8.075240,-6.761150,-7.108485,6.877825,-6.006011,5.503186],[7.398865,8.340557,8.645460,-0.316121,-4.252391,5.007428,8.231847,-1.638012,-1.095689],[7.089742,8.793335,-2.025370,1.559128,-1.795541,-1.537606,2.011394,-8.742179,4.403602],[-6.057894,9.883407,-4.936801,-4.827987,-3.021787,1.121847,8.773948,-5.387954,3.930890],[6.012032,-2.953535,-9.052405,1.392564,5.566535,-5.998900,5.299084,-8.925093,1.437495],[3.340690,3.132453,-2.976020,-0.091944,4.973611,-5.042656,1.913855,-8.224975,3.733993],[0.475805,-2.960564,-2.334703,7.543093,6.270596,-0.220161,-7.934733,-9.820787,5.707732],[0.690469,9.466761,0.941817,3.733884,3.392222,-2.888617,-6.813890,3.271037,-1.273017],[-3.784719,2.922549,-9.458005,-6.649978,2.247480,-7.999338,-8.532511,2.261289,-7.531888]],[[1.572909,3.132112,4.302879,-4.250090,9.926818,-1.344638,1.801143,6.770638,-1.970667],[4.971047,8.881423,-9.733434,9.427476,9.422948,-0.412639,0.292108,5.604818,-4.905574],[6.246781,-3.242999,-8.372553,-8.160671,4.648861,-2.283407,1.194305,1.592995,-2.278126],[-4.974633,-6.718238,-2.856150,-9.133614,-1.091723,0.029407,-7.394323,7.632071,9.259390],[-9.177554,-4.596718,-2.225294,4.905560,-0.735500,-7.068803,-0.340548,-5.744584,-4.050373],[9.498703,4.952222,-9.233271,-9.413208,1.251731,7.393108,1.468743,-4.334969,-3.572897],[-2.585095,2.708048,-3.458325,-4.595106,-3.388489,8.758913,9.250276,8.737377,-9.126928],[9.023404,7.916356,5.284734,-9.777274,-3.121371,-3.016124,4.297847,-2.883997,4.478949],[-8.063680,-9.101916,-8.018052,6.144521,-2.370259,-1.217158,-4.793125,-6.003321,-4.762811],[-5.948347,-8.452437,-6.708245,9.111417,-3.926758,-7.310293,-6.752553,6.943508,3.589369],[-8.350299,4.985337,-2.585307,-8.721546,-1.887265,-1.743137,-5.850109,8.303663,4.029677],[6.970064,9.056598,-3.348923,0.881851,-3.856178,7.731131,-6.103501,-9.934413,4.186210]]], dtype = "float64")#candidate|4777|(9, 12, 9)|const|float64
uop_4778 = relay.tan(const_4777.astype('float64')) # shape=(9, 12, 9)
func_4767_call = mod.get_global_var('func_4767')
func_4769_call = mutated_mod.get_global_var('func_4769')
const_4781 = relay.const([[-5.728949,7.965091,-9.550273,9.811422,-5.789863,-0.001434,-2.876104,-5.089664,7.180538,8.581492,4.564861,-3.507221,-7.975829,-9.412715,-1.617901,-9.079054,-3.971613,-2.746765,1.758638,-1.009162,1.106920,-3.230978,8.424458,-6.432652,-9.055707,-3.251826,-6.469476,3.488402,5.074864,5.609906,1.146577,-8.502925,6.411634,1.599492,4.079659,2.277404,-5.486582,-9.054639,-1.292512,-7.400733,-2.061115,-9.261462,8.148989,2.687475,8.444602,-9.197341,-0.640861,-2.090979,0.228622,-8.411876,2.743144,8.635480,0.944398,4.349907,-5.967931,-7.484790,3.696658,7.289269,-1.490396,8.901063,-5.601756,1.654698,-4.521654,-3.823818,7.188547,-0.252875,-9.149514,-2.704188,9.572825,2.400550,-2.921119,-5.389479,-0.626915,-9.832358,-3.037452,-9.087873,-3.803073,5.581200,3.915007,-9.223119]], dtype = "float64")#candidate|4781|(1, 80)|const|float64
call_4780 = func_4767_call(relay.reshape(const_4781.astype('float64'), [1, 5, 16]))
call_4782 = func_4767_call(relay.reshape(const_4781.astype('float64'), [1, 5, 16]))
output = relay.Tuple([uop_4778,call_4780,const_4781,])
output2 = relay.Tuple([uop_4778,call_4782,const_4781,])
func_4785 = relay.Function([], output)
mod['func_4785'] = func_4785
mod = relay.transform.InferType()(mod)
mutated_mod['func_4785'] = func_4785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4785_call = mutated_mod.get_global_var('func_4785')
call_4786 = func_4785_call()
output = call_4786
func_4787 = relay.Function([], output)
mutated_mod['func_4787'] = func_4787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4785_call = mod.get_global_var('func_4785')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_4856 = relay.TupleGetItem(func_4785_call(), 2)
call_4857 = relay.TupleGetItem(func_4787_call(), 2)
output = call_4856
output2 = call_4857
func_4877 = relay.Function([], output)
mod['func_4877'] = func_4877
mod = relay.transform.InferType()(mod)
mutated_mod['func_4877'] = func_4877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4877_call = mutated_mod.get_global_var('func_4877')
call_4878 = func_4877_call()
output = call_4878
func_4879 = relay.Function([], output)
mutated_mod['func_4879'] = func_4879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4785_call = mod.get_global_var('func_4785')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_4897 = relay.TupleGetItem(func_4785_call(), 1)
call_4898 = relay.TupleGetItem(func_4787_call(), 1)
output = call_4897
output2 = call_4898
func_4920 = relay.Function([], output)
mod['func_4920'] = func_4920
mod = relay.transform.InferType()(mod)
mutated_mod['func_4920'] = func_4920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4920_call = mutated_mod.get_global_var('func_4920')
call_4921 = func_4920_call()
output = call_4921
func_4922 = relay.Function([], output)
mutated_mod['func_4922'] = func_4922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4920_call = mod.get_global_var('func_4920')
func_4922_call = mutated_mod.get_global_var('func_4922')
call_4945 = func_4920_call()
call_4946 = func_4920_call()
func_2712_call = mod.get_global_var('func_2712')
func_2714_call = mutated_mod.get_global_var('func_2714')
var_4965 = relay.var("var_4965", dtype = "float32", shape = (396,))#candidate|4965|(396,)|var|float32
call_4964 = func_2712_call(relay.reshape(var_4965.astype('float32'), [11, 12, 3]))
call_4966 = func_2712_call(relay.reshape(var_4965.astype('float32'), [11, 12, 3]))
func_2712_call = mod.get_global_var('func_2712')
func_2714_call = mutated_mod.get_global_var('func_2714')
call_4969 = func_2712_call(relay.reshape(var_4965.astype('float32'), [11, 12, 3]))
call_4970 = func_2712_call(relay.reshape(var_4965.astype('float32'), [11, 12, 3]))
output = relay.Tuple([call_4945,call_4964,var_4965,call_4969,])
output2 = relay.Tuple([call_4946,call_4966,var_4965,call_4970,])
func_4978 = relay.Function([var_4965,], output)
mod['func_4978'] = func_4978
mod = relay.transform.InferType()(mod)
mutated_mod['func_4978'] = func_4978
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4979 = relay.var("var_4979", dtype = "float32", shape = (396,))#candidate|4979|(396,)|var|float32
func_4978_call = mutated_mod.get_global_var('func_4978')
call_4980 = func_4978_call(var_4979)
output = call_4980
func_4981 = relay.Function([var_4979], output)
mutated_mod['func_4981'] = func_4981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4920_call = mod.get_global_var('func_4920')
func_4922_call = mutated_mod.get_global_var('func_4922')
call_4991 = func_4920_call()
call_4992 = func_4920_call()
uop_4998 = relay.atanh(call_4991.astype('float64')) # shape=(1, 5, 16)
uop_5000 = relay.atanh(call_4992.astype('float64')) # shape=(1, 5, 16)
output = uop_4998
output2 = uop_5000
func_5017 = relay.Function([], output)
mod['func_5017'] = func_5017
mod = relay.transform.InferType()(mod)
mutated_mod['func_5017'] = func_5017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5017_call = mutated_mod.get_global_var('func_5017')
call_5018 = func_5017_call()
output = call_5018
func_5019 = relay.Function([], output)
mutated_mod['func_5019'] = func_5019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4920_call = mod.get_global_var('func_4920')
func_4922_call = mutated_mod.get_global_var('func_4922')
call_5020 = func_4920_call()
call_5021 = func_4920_call()
output = relay.Tuple([call_5020,])
output2 = relay.Tuple([call_5021,])
func_5035 = relay.Function([], output)
mod['func_5035'] = func_5035
mod = relay.transform.InferType()(mod)
mutated_mod['func_5035'] = func_5035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5035_call = mutated_mod.get_global_var('func_5035')
call_5036 = func_5035_call()
output = call_5036
func_5037 = relay.Function([], output)
mutated_mod['func_5037'] = func_5037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5017_call = mod.get_global_var('func_5017')
func_5019_call = mutated_mod.get_global_var('func_5019')
call_5063 = func_5017_call()
call_5064 = func_5017_call()
output = relay.Tuple([call_5063,])
output2 = relay.Tuple([call_5064,])
func_5082 = relay.Function([], output)
mod['func_5082'] = func_5082
mod = relay.transform.InferType()(mod)
mutated_mod['func_5082'] = func_5082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5082_call = mutated_mod.get_global_var('func_5082')
call_5083 = func_5082_call()
output = call_5083
func_5084 = relay.Function([], output)
mutated_mod['func_5084'] = func_5084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5082_call = mod.get_global_var('func_5082')
func_5084_call = mutated_mod.get_global_var('func_5084')
call_5149 = relay.TupleGetItem(func_5082_call(), 0)
call_5150 = relay.TupleGetItem(func_5084_call(), 0)
func_4920_call = mod.get_global_var('func_4920')
func_4922_call = mutated_mod.get_global_var('func_4922')
call_5158 = func_4920_call()
call_5159 = func_4920_call()
uop_5162 = relay.acos(call_5149.astype('float64')) # shape=(1, 5, 16)
uop_5164 = relay.acos(call_5150.astype('float64')) # shape=(1, 5, 16)
output = relay.Tuple([call_5158,uop_5162,])
output2 = relay.Tuple([call_5159,uop_5164,])
func_5166 = relay.Function([], output)
mod['func_5166'] = func_5166
mod = relay.transform.InferType()(mod)
output = func_5166()
func_5167 = relay.Function([], output)
mutated_mod['func_5167'] = func_5167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4785_call = mod.get_global_var('func_4785')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_5188 = relay.TupleGetItem(func_4785_call(), 1)
call_5189 = relay.TupleGetItem(func_4787_call(), 1)
var_5194 = relay.var("var_5194", dtype = "float64", shape = (1, 5, 16))#candidate|5194|(1, 5, 16)|var|float64
bop_5195 = relay.less(call_5188.astype('bool'), relay.reshape(var_5194.astype('bool'), relay.shape_of(call_5188))) # shape=(1, 5, 16)
bop_5198 = relay.less(call_5189.astype('bool'), relay.reshape(var_5194.astype('bool'), relay.shape_of(call_5189))) # shape=(1, 5, 16)
bop_5210 = relay.bitwise_and(call_5188.astype('uint16'), relay.reshape(bop_5195.astype('uint16'), relay.shape_of(call_5188))) # shape=(1, 5, 16)
bop_5213 = relay.bitwise_and(call_5189.astype('uint16'), relay.reshape(bop_5198.astype('uint16'), relay.shape_of(call_5189))) # shape=(1, 5, 16)
var_5219 = relay.var("var_5219", dtype = "float64", shape = (12, 5, 16))#candidate|5219|(12, 5, 16)|var|float64
bop_5220 = relay.add(call_5188.astype('uint16'), var_5219.astype('uint16')) # shape=(12, 5, 16)
bop_5223 = relay.add(call_5189.astype('uint16'), var_5219.astype('uint16')) # shape=(12, 5, 16)
output = relay.Tuple([bop_5210,bop_5220,])
output2 = relay.Tuple([bop_5213,bop_5223,])
func_5239 = relay.Function([var_5194,var_5219,], output)
mod['func_5239'] = func_5239
mod = relay.transform.InferType()(mod)
var_5240 = relay.var("var_5240", dtype = "float64", shape = (1, 5, 16))#candidate|5240|(1, 5, 16)|var|float64
var_5241 = relay.var("var_5241", dtype = "float64", shape = (12, 5, 16))#candidate|5241|(12, 5, 16)|var|float64
output = func_5239(var_5240,var_5241,)
func_5242 = relay.Function([var_5240,var_5241,], output)
mutated_mod['func_5242'] = func_5242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4877_call = mod.get_global_var('func_4877')
func_4879_call = mutated_mod.get_global_var('func_4879')
call_5261 = func_4877_call()
call_5262 = func_4877_call()
uop_5263 = relay.sin(call_5261.astype('float64')) # shape=(1, 80)
uop_5265 = relay.sin(call_5262.astype('float64')) # shape=(1, 80)
const_5287 = relay.const([[3.071938,-9.029304,1.562953,-4.570476,-4.780153,9.901250,7.353067,-4.419092,9.473566,6.742171,7.266432,-9.341267,1.155472,-5.004498,5.533395,2.613034,-1.526431,3.246299,-2.632504,-0.190801,6.198385,-0.160424,4.171518,2.175815,-2.327957,3.392744,3.028948,5.354479,6.369836,0.933638,-9.158677,-3.445969,-6.367879,-5.939676,0.892684,8.220604,2.199179,-6.498004,-8.063630,1.185206,-5.280967,-9.575282,-9.702524,-6.573358,7.632542,-0.609469,-0.118429,7.438726,0.780783,4.343037,-3.068284,5.150671,-5.723813,-2.746758,7.073628,-2.643546,-4.005245,3.040569,-5.587956,1.652869,9.125403,6.568162,-4.594592,-7.937943,8.179216,-4.218284,9.791911,1.437326,0.606114,-0.377040,8.086560,-4.285787,-7.997642,-4.597632,2.692175,-0.791950,-4.763405,-1.163921,-3.956866,-3.245473],[-9.801587,4.694809,-7.303241,-0.485003,3.624445,-3.209417,8.040715,-7.181111,-9.301854,-9.260956,-2.983395,8.839099,8.219830,9.205530,-3.723030,2.491561,7.630647,-7.817197,5.532843,2.972397,-2.352886,2.588950,5.305344,5.606032,-3.068189,4.857231,-5.143380,7.732165,0.869844,-3.942903,-7.577819,-9.602032,-2.264306,6.299647,2.214261,-4.088684,-9.650515,8.730946,-7.244984,-0.857720,2.443506,5.625594,-7.415961,1.171175,-2.200197,1.587842,4.864426,-0.433887,2.242557,9.965797,-7.326851,-4.002230,5.893730,-4.149838,-1.521529,-2.317240,3.583599,4.954373,5.488867,2.837801,-5.381249,-7.857875,-9.770549,-7.195630,1.651294,1.410182,4.962461,-8.125554,4.895386,-3.850251,6.280380,3.988932,9.096249,-2.921884,1.228831,-5.688415,2.970940,2.376720,7.206596,8.551047],[9.680501,-6.902618,-5.417302,1.890626,-2.936106,2.267369,7.021679,-6.329063,8.098169,9.480057,-4.735416,2.878530,-3.199678,8.397573,-9.007054,-4.009390,5.292047,-9.424343,-5.363320,-1.967746,-8.954847,-3.083894,-3.894687,-1.026251,-1.395063,1.374474,4.363581,-0.494422,8.873211,2.344115,-8.475768,-2.167486,-5.965037,7.359434,-3.917003,5.442548,9.104550,-7.673776,-8.145494,3.457234,-7.693018,9.689277,7.435881,-1.417923,-9.906731,-7.985854,6.457809,-9.067234,-4.295456,-5.709224,1.839114,5.216735,-2.983286,4.523070,-1.183083,8.277718,2.002410,-6.651530,-6.724130,5.945069,-8.345042,4.416111,-7.738006,6.987125,9.333569,-8.288560,-6.413144,8.181986,0.043934,4.927552,0.015476,9.331578,-0.134805,-5.948293,-9.066891,8.855707,9.294863,-1.143929,-7.495372,-5.940636],[-1.560988,0.090682,-6.250074,4.509197,6.434358,2.297406,0.269785,1.518343,-6.680250,-9.517481,9.909887,6.017340,-8.227237,5.092952,-4.464124,-3.482793,-5.952245,0.581319,-6.969884,-5.494872,1.570993,-0.227092,-7.456310,-9.109935,6.518427,4.580413,-2.184250,-1.566568,8.576176,-1.665739,1.719116,-2.458830,-8.915827,7.922529,-4.285672,-5.806583,5.965614,-2.301347,-8.520619,1.871604,6.426381,-5.727322,3.920971,-5.154726,-6.633562,-0.644386,1.212852,3.725757,-2.483247,-9.688154,2.168586,0.049997,3.391400,-4.194313,-1.368552,-3.857138,7.321038,-0.264621,6.630109,6.222134,8.883241,9.914160,-4.461827,-2.650870,7.357759,1.398183,5.201231,-8.772622,-2.579457,-4.177114,-3.113036,-2.888788,9.661648,-0.174961,4.421172,0.839785,-1.198782,2.425462,0.103498,6.970637],[-1.381815,2.689331,0.742915,-3.144637,2.197516,0.977283,5.382793,3.846574,-9.951226,0.775673,3.973164,-6.110884,-6.661524,-2.351723,5.336121,-4.705011,-6.105043,4.174047,5.357160,6.691678,-9.185515,-8.936369,-1.561507,-0.352522,-5.243312,-7.045006,-3.412242,9.571350,-4.450898,8.494445,9.715952,3.253639,8.549334,-1.360357,-2.310680,0.037862,-1.100507,0.744332,0.182858,1.852153,1.652581,7.062191,-8.502263,-4.415021,-2.125821,-7.851330,-6.881591,3.455286,-9.992974,-1.471485,3.470811,8.946017,-4.412332,-2.993467,-0.324200,8.036975,2.229167,-7.847492,9.074507,-1.513870,-6.099858,2.687931,-3.916644,-7.052399,-3.620054,-2.266751,7.465152,2.561322,-2.807014,2.902491,0.208354,-9.999970,-1.865546,-3.241224,-4.759120,5.924908,4.264552,0.943041,-6.038072,-2.363175],[-1.204054,-7.351667,-6.338531,9.757933,-5.481961,-4.299780,2.587928,-7.218987,5.763883,7.238723,-8.583076,-8.270769,-5.059921,8.111541,6.097069,8.734665,-7.944880,5.934874,-2.356928,0.806960,-0.202893,-1.486820,1.043678,9.958612,-3.480504,-7.451985,8.166024,-7.209941,-3.020633,-6.637557,-6.996202,7.950042,-0.098842,1.867113,-6.850597,2.767701,-7.701377,-5.842111,-6.085246,-3.004273,0.745578,0.555991,5.631373,-3.053053,-6.368229,-4.495809,-8.452489,7.772641,-6.362578,3.111455,-3.377164,4.979227,0.814038,-3.925495,1.564796,-3.944885,1.845443,-7.438000,6.700804,-0.253799,5.167208,-0.845568,-1.358362,-0.549929,2.876284,0.202248,-6.544209,-3.822099,9.354201,-8.219444,-9.359260,8.414028,-4.956102,-6.079243,-2.668375,5.419880,5.731858,5.708009,-9.075620,1.846826],[-6.807826,5.813847,2.759275,-3.817158,-2.814489,-2.970415,7.349500,-5.913426,9.944111,0.749188,5.047665,3.750431,3.211439,-7.860302,3.810135,5.776545,0.312001,-8.500216,-0.707635,3.086672,6.463291,6.148918,7.933290,1.972595,4.472143,-9.180799,6.500337,8.535059,-3.146814,-8.334449,4.217007,0.818066,-0.216775,-8.298729,-7.224446,9.641687,6.628026,-5.339154,-8.889187,3.679298,2.750496,-9.462735,5.648643,2.120380,-5.674343,9.392414,6.922197,-7.836476,2.683449,-2.614696,-2.873894,6.055655,6.638580,-2.948084,8.049355,0.695195,8.087555,-3.429258,2.420384,-8.363583,9.481967,-5.020687,1.762844,1.670776,8.384347,-2.197720,6.475521,7.514977,-0.741588,8.063577,5.825231,-2.225146,-6.426133,1.822111,-2.504152,1.992509,-4.641800,-3.091332,-4.235269,-3.714445],[7.368972,0.696767,-3.761684,9.833557,-9.169941,9.025999,9.841408,-2.157878,-0.707402,-9.069031,-2.135970,-3.876079,4.109627,-4.208058,-4.183173,4.744366,3.786748,2.100734,0.852941,-7.527918,2.340742,0.218359,5.821300,-1.625921,4.634913,-3.489322,7.036156,-0.256040,4.251935,-9.617174,7.853276,-4.689279,0.801498,1.996140,-0.684202,-3.932831,5.376585,2.878701,-3.697772,-2.621294,-5.808187,6.735099,8.093151,-5.698981,-1.462532,2.520787,-2.550956,-6.177681,6.897074,-5.759639,-7.300179,8.161544,-7.505321,-1.042639,-6.043722,-4.617640,-6.802161,-2.253100,-4.332677,-4.571915,-0.285746,-0.762691,0.431026,-7.607390,-5.498904,1.492070,6.834581,-6.290112,2.079005,-8.839535,8.594362,-8.870718,-7.286763,-4.170889,6.820413,2.305786,-8.209655,-6.770580,5.460691,-3.137173],[5.288061,-3.360319,-6.973707,-9.003073,7.146903,5.343036,7.128105,-1.826655,7.811687,-2.627140,-4.708388,-1.425951,-1.041042,-9.443795,4.851054,5.364635,-2.332203,9.628293,3.964165,-8.037641,8.065381,5.692746,2.821236,-2.600676,-8.889340,9.109201,3.435393,0.133401,-7.269666,0.771363,-5.373187,-7.432135,-6.307785,5.332056,2.758282,-3.673746,-8.655347,-3.780354,-6.857096,-9.235124,6.623701,8.911438,9.764916,-3.330887,-4.578702,3.602273,4.934281,-2.629167,8.217669,5.708514,6.995324,9.719824,8.013417,-6.048343,1.267732,1.231360,-3.383746,6.343130,5.726038,-8.266345,3.052986,5.957937,1.258432,-8.356849,2.738891,-5.496691,1.074917,-0.261966,2.753713,-8.258212,8.724002,6.012315,-0.809056,4.304537,6.389666,-6.934991,8.626382,2.016839,1.488449,-6.216892],[1.172960,2.380784,-2.676987,3.671293,-0.196568,-4.723837,1.985870,-2.847583,-5.465133,-3.812812,5.173738,-6.061716,-7.264933,3.209843,2.777524,-2.509277,-3.185572,-6.077699,-2.016860,-1.642306,0.215792,-0.577306,4.645706,4.415543,0.091370,5.113164,-5.184694,0.848962,9.043183,-1.735444,-2.250067,8.225303,-7.316574,-1.947029,2.898210,-7.631573,7.476005,-9.195312,9.352676,6.152505,2.809623,7.820157,-4.829028,-8.092953,8.754331,5.775858,8.156387,6.231673,-7.435437,-2.283588,-0.839959,-1.453731,-3.972606,-9.991902,-3.443416,-2.873630,-4.012415,4.004101,-9.483232,-7.810289,-4.579957,-4.641310,-4.677622,-0.587087,8.815895,0.444197,8.405723,4.425958,-0.306649,5.232984,3.587234,-0.934353,3.158709,7.602681,5.584526,6.782808,8.802849,8.742626,1.141732,-6.751272]], dtype = "float64")#candidate|5287|(10, 80)|const|float64
bop_5288 = relay.not_equal(uop_5263.astype('bool'), const_5287.astype('bool')) # shape=(10, 80)
bop_5291 = relay.not_equal(uop_5265.astype('bool'), const_5287.astype('bool')) # shape=(10, 80)
uop_5295 = relay.sinh(call_5261.astype('float64')) # shape=(1, 80)
uop_5297 = relay.sinh(call_5262.astype('float64')) # shape=(1, 80)
bop_5306 = relay.bitwise_or(bop_5288.astype('int64'), uop_5263.astype('int64')) # shape=(10, 80)
bop_5309 = relay.bitwise_or(bop_5291.astype('int64'), uop_5265.astype('int64')) # shape=(10, 80)
func_220_call = mod.get_global_var('func_220')
func_223_call = mutated_mod.get_global_var('func_223')
const_5324 = relay.const([8.446439,-3.990154,-5.674034,-0.799474,1.080563,-6.920443,-0.001412,1.733651,-1.188798,-8.503877,3.953404,-4.231666,-7.602295,1.039249,9.486952,-1.607740,-9.994035,3.843207,9.054751,-0.214359,-7.227739,-0.014824,2.109450,9.613199,-0.868480,-3.102951,0.942633,7.105423,-9.598500,1.448105,0.173156,-5.625808,-3.988111,-6.001617,1.969741,6.441482,1.070406,1.557339,6.022111,5.017520,-0.125427,-2.532850,-8.651968,-2.468828,-0.733233,4.702795,2.011527,6.924514,2.778830,-1.388916,-8.196879,-9.615791,0.175766,5.450024,5.507580,-7.394571,-5.069328,9.654985,7.732118,2.894766,4.275841,6.072121,-0.913128,-0.098749,-9.027010,-1.619099,-7.305736,9.328895,-5.794951,7.605393,0.958926,-0.734823,-3.263203,-9.871283,0.682729,2.859550,-4.124267,7.571749], dtype = "float64")#candidate|5324|(78,)|const|float64
call_5323 = func_220_call(relay.reshape(const_5324.astype('float64'), [13, 2, 3]))
call_5325 = func_220_call(relay.reshape(const_5324.astype('float64'), [13, 2, 3]))
func_4007_call = mod.get_global_var('func_4007')
func_4011_call = mutated_mod.get_global_var('func_4011')
var_5328 = relay.var("var_5328", dtype = "float32", shape = (1120,))#candidate|5328|(1120,)|var|float32
var_5329 = relay.var("var_5329", dtype = "float32", shape = (72,))#candidate|5329|(72,)|var|float32
call_5327 = relay.TupleGetItem(func_4007_call(relay.reshape(var_5328.astype('float32'), [14, 10, 8]), relay.reshape(var_5328.astype('float32'), [14, 10, 8]), relay.reshape(var_5329.astype('float32'), [72,]), ), 2)
call_5330 = relay.TupleGetItem(func_4011_call(relay.reshape(var_5328.astype('float32'), [14, 10, 8]), relay.reshape(var_5328.astype('float32'), [14, 10, 8]), relay.reshape(var_5329.astype('float32'), [72,]), ), 2)
var_5333 = relay.var("var_5333", dtype = "float64", shape = (13, 2, 3))#candidate|5333|(13, 2, 3)|var|float64
bop_5334 = relay.less(call_5323.astype('bool'), relay.reshape(var_5333.astype('bool'), relay.shape_of(call_5323))) # shape=(13, 2, 3)
bop_5337 = relay.less(call_5325.astype('bool'), relay.reshape(var_5333.astype('bool'), relay.shape_of(call_5325))) # shape=(13, 2, 3)
func_220_call = mod.get_global_var('func_220')
func_223_call = mutated_mod.get_global_var('func_223')
call_5347 = func_220_call(relay.reshape(call_5323.astype('float64'), [13, 2, 3]))
call_5348 = func_220_call(relay.reshape(call_5323.astype('float64'), [13, 2, 3]))
bop_5350 = relay.multiply(uop_5263.astype('int16'), relay.reshape(uop_5295.astype('int16'), relay.shape_of(uop_5263))) # shape=(1, 80)
bop_5353 = relay.multiply(uop_5265.astype('int16'), relay.reshape(uop_5297.astype('int16'), relay.shape_of(uop_5265))) # shape=(1, 80)
func_2712_call = mod.get_global_var('func_2712')
func_2714_call = mutated_mod.get_global_var('func_2714')
var_5360 = relay.var("var_5360", dtype = "float32", shape = (396,))#candidate|5360|(396,)|var|float32
call_5359 = func_2712_call(relay.reshape(var_5360.astype('float32'), [11, 12, 3]))
call_5361 = func_2712_call(relay.reshape(var_5360.astype('float32'), [11, 12, 3]))
func_4343_call = mod.get_global_var('func_4343')
func_4348_call = mutated_mod.get_global_var('func_4348')
var_5370 = relay.var("var_5370", dtype = "int64", shape = (525,))#candidate|5370|(525,)|var|int64
call_5369 = relay.TupleGetItem(func_4343_call(relay.reshape(var_5370.astype('int64'), [15, 5, 7]), relay.reshape(var_5370.astype('int64'), [15, 5, 7]), relay.reshape(call_5327.astype('float32'), [72,]), ), 0)
call_5371 = relay.TupleGetItem(func_4348_call(relay.reshape(var_5370.astype('int64'), [15, 5, 7]), relay.reshape(var_5370.astype('int64'), [15, 5, 7]), relay.reshape(call_5327.astype('float32'), [72,]), ), 0)
uop_5372 = relay.acos(uop_5263.astype('float64')) # shape=(1, 80)
uop_5374 = relay.acos(uop_5265.astype('float64')) # shape=(1, 80)
output = relay.Tuple([bop_5306,const_5324,call_5327,var_5328,var_5329,bop_5334,call_5347,bop_5350,call_5359,var_5360,call_5369,var_5370,uop_5372,])
output2 = relay.Tuple([bop_5309,const_5324,call_5330,var_5328,var_5329,bop_5337,call_5348,bop_5353,call_5361,var_5360,call_5371,var_5370,uop_5374,])
func_5380 = relay.Function([var_5328,var_5329,var_5333,var_5360,var_5370,], output)
mod['func_5380'] = func_5380
mod = relay.transform.InferType()(mod)
mutated_mod['func_5380'] = func_5380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5380_call = mutated_mod.get_global_var('func_5380')
var_5382 = relay.var("var_5382", dtype = "float32", shape = (1120,))#candidate|5382|(1120,)|var|float32
var_5383 = relay.var("var_5383", dtype = "float32", shape = (72,))#candidate|5383|(72,)|var|float32
var_5384 = relay.var("var_5384", dtype = "float64", shape = (13, 2, 3))#candidate|5384|(13, 2, 3)|var|float64
var_5385 = relay.var("var_5385", dtype = "float32", shape = (396,))#candidate|5385|(396,)|var|float32
var_5386 = relay.var("var_5386", dtype = "int64", shape = (525,))#candidate|5386|(525,)|var|int64
call_5381 = func_5380_call(var_5382,var_5383,var_5384,var_5385,var_5386,)
output = call_5381
func_5387 = relay.Function([var_5382,var_5383,var_5384,var_5385,var_5386,], output)
mutated_mod['func_5387'] = func_5387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5035_call = mod.get_global_var('func_5035')
func_5037_call = mutated_mod.get_global_var('func_5037')
call_5424 = relay.TupleGetItem(func_5035_call(), 0)
call_5425 = relay.TupleGetItem(func_5037_call(), 0)
output = call_5424
output2 = call_5425
func_5432 = relay.Function([], output)
mod['func_5432'] = func_5432
mod = relay.transform.InferType()(mod)
mutated_mod['func_5432'] = func_5432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5432_call = mutated_mod.get_global_var('func_5432')
call_5433 = func_5432_call()
output = call_5433
func_5434 = relay.Function([], output)
mutated_mod['func_5434'] = func_5434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5432_call = mod.get_global_var('func_5432')
func_5434_call = mutated_mod.get_global_var('func_5434')
call_5638 = func_5432_call()
call_5639 = func_5432_call()
func_923_call = mod.get_global_var('func_923')
func_926_call = mutated_mod.get_global_var('func_926')
const_5644 = relay.const([7,-3,-2,6,-5,4,-9,-7,-8,-5,10,5,-4,-5,7,5,-3,-10,-3,6,-1,6,-9,-1,5,-1,4,3,8,-5,6,-10,-8,-6,7,9,-4,-7,9,-1,6,9,7,-9,2,9,6,6,10,-3,4,4,-8,-3,1,-1,-8,-8,-4,10,-3,-1,8,10,-9,-4,8,3,9,3,1,-6,6,-4,10,-6,2,-1,7,2,-6,-1,4,-10,-1,4,9,-1,-5,5,8,10,9,2,-1,-3,1,-1,9,2,4,-4,-8,-8,-7,-8,-6,-6,-10,-2,3,9,-9,-10,10,10,8,5,-8,-6,-7,1,5,-10,-6,-7,8,-2,4,7,2,8,-3,5,-9,6,9,1,5,-10,-4,9,-3,-2,2,3,-9,5,5,3,3,1,-9,6,2,4,-3,1,-5,-2,-4,-1,7,7,8,-7,-9,2,9,-3,-6,-10,-1,4,5,1,3,4,-9,-4,-1,7,9,10,-7,-2,10,-1,-4,7,3,9,-3,7,-2,-1,4,-2,7,-3,-7,-7,-7,-9,5,8,-5,7,-10,2,-5,-4,10,4,-2,-2,-1,5,1,-9,-10,-6,6,5,-8,-7,-9,-4,10,6,2,-8,-9,1,7,-6,-8,1,8,9,2,-8,10,-2,9,-2,-6,-6,-5,6,-8,8,7,-10,-7,10,7,-2,2,-7,10,2,10,-2,6,9,-2,-1,-8,5,-2,-5,-5,-5,-1,-7,-10,10,8,8,-1,9,-4,4,5,-5,4,-5,-9,5,-1,-2,1,4,3,5,-9,-7,7,4,1,-9,1,6,-4,-9,-3,-7,-2,-4,-5,9,5,6,9,6,-1,-5,-8,-10,1,-7,-10,-9,-7,7,3,-7,-4,-2,3,3,2,-6,-8,-3,8,1,6,10,4,7,-7,-6,7,6,-6,6,6,10], dtype = "int64")#candidate|5644|(350,)|const|int64
call_5643 = relay.TupleGetItem(func_923_call(relay.reshape(const_5644.astype('int64'), [5, 10, 7])), 1)
call_5645 = relay.TupleGetItem(func_926_call(relay.reshape(const_5644.astype('int64'), [5, 10, 7])), 1)
output = relay.Tuple([call_5638,call_5643,const_5644,])
output2 = relay.Tuple([call_5639,call_5645,const_5644,])
func_5653 = relay.Function([], output)
mod['func_5653'] = func_5653
mod = relay.transform.InferType()(mod)
output = func_5653()
func_5654 = relay.Function([], output)
mutated_mod['func_5654'] = func_5654
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5736 = relay.var("var_5736", dtype = "float64", shape = (1, 2, 5))#candidate|5736|(1, 2, 5)|var|float64
uop_5737 = relay.cosh(var_5736.astype('float64')) # shape=(1, 2, 5)
output = uop_5737
output2 = uop_5737
func_5753 = relay.Function([var_5736,], output)
mod['func_5753'] = func_5753
mod = relay.transform.InferType()(mod)
mutated_mod['func_5753'] = func_5753
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5754 = relay.var("var_5754", dtype = "float64", shape = (1, 2, 5))#candidate|5754|(1, 2, 5)|var|float64
func_5753_call = mutated_mod.get_global_var('func_5753')
call_5755 = func_5753_call(var_5754)
output = call_5755
func_5756 = relay.Function([var_5754], output)
mutated_mod['func_5756'] = func_5756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4785_call = mod.get_global_var('func_4785')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_5764 = relay.TupleGetItem(func_4785_call(), 2)
call_5765 = relay.TupleGetItem(func_4787_call(), 2)
output = call_5764
output2 = call_5765
func_5774 = relay.Function([], output)
mod['func_5774'] = func_5774
mod = relay.transform.InferType()(mod)
output = func_5774()
func_5775 = relay.Function([], output)
mutated_mod['func_5775'] = func_5775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4877_call = mod.get_global_var('func_4877')
func_4879_call = mutated_mod.get_global_var('func_4879')
call_5831 = func_4877_call()
call_5832 = func_4877_call()
output = call_5831
output2 = call_5832
func_5833 = relay.Function([], output)
mod['func_5833'] = func_5833
mod = relay.transform.InferType()(mod)
mutated_mod['func_5833'] = func_5833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5833_call = mutated_mod.get_global_var('func_5833')
call_5834 = func_5833_call()
output = call_5834
func_5835 = relay.Function([], output)
mutated_mod['func_5835'] = func_5835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5833_call = mod.get_global_var('func_5833')
func_5835_call = mutated_mod.get_global_var('func_5835')
call_5839 = func_5833_call()
call_5840 = func_5833_call()
func_4785_call = mod.get_global_var('func_4785')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_5843 = relay.TupleGetItem(func_4785_call(), 0)
call_5844 = relay.TupleGetItem(func_4787_call(), 0)
func_5017_call = mod.get_global_var('func_5017')
func_5019_call = mutated_mod.get_global_var('func_5019')
call_5846 = func_5017_call()
call_5847 = func_5017_call()
uop_5871 = relay.exp(call_5839.astype('float32')) # shape=(1, 80)
uop_5873 = relay.exp(call_5840.astype('float32')) # shape=(1, 80)
output = relay.Tuple([call_5843,call_5846,uop_5871,])
output2 = relay.Tuple([call_5844,call_5847,uop_5873,])
func_5874 = relay.Function([], output)
mod['func_5874'] = func_5874
mod = relay.transform.InferType()(mod)
output = func_5874()
func_5875 = relay.Function([], output)
mutated_mod['func_5875'] = func_5875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5774_call = mod.get_global_var('func_5774')
func_5775_call = mutated_mod.get_global_var('func_5775')
call_5933 = func_5774_call()
call_5934 = func_5774_call()
const_5936 = relay.const([[-6.570261,-0.499362,-6.257637,-0.749994,2.392140,-2.450604,3.963196,-7.422415,8.556149,4.004258,-7.962146,9.017253,-5.453003,-7.203743,3.816560,-8.672760,4.918108,-1.952908,2.985994,-0.982554,-9.238297,2.801552,-7.027107,7.605116,-6.114324,6.441068,1.367380,8.470436,-6.648396,-4.200562,1.955721,-5.415618,7.621481,5.705541,7.943175,-1.067932,-4.687467,1.690512,9.736484,-8.967951,8.443734,-7.579153,0.215687,-0.286093,6.483983,2.743167,-5.556316,5.182369,4.263648,-2.413913,-8.180803,-8.108461,3.642741,-1.870479,-7.845589,-8.518540,-8.224282,0.349591,-4.825910,0.461856,-2.142991,7.711054,-3.775387,-0.465999,1.828292,-4.857223,3.983671,-9.632660,4.791255,-4.620323,4.183352,2.325335,9.041921,8.153290,6.094783,-2.631381,-0.904845,-3.492794,-9.681052,-0.350329],[2.580815,-7.958462,4.735676,2.911608,3.490735,6.569494,-6.164147,-2.494293,3.592421,-7.607672,-8.232221,-0.938445,-9.071151,-5.837264,8.712102,-9.146620,9.897847,-8.576339,9.289403,0.559063,9.235669,5.889480,-4.870297,2.895138,-2.186858,-2.099304,-5.842278,3.568832,7.500185,-3.222292,-4.921670,3.892961,8.974152,-8.308460,-0.755301,7.785267,-4.064907,9.041084,-2.660937,-3.374097,-8.916870,1.069533,2.465441,0.586940,-2.166911,-9.214893,-0.161893,6.282123,9.484332,-8.942185,6.172292,6.235421,2.765545,-2.203301,9.113897,-2.311885,0.323325,9.964953,-9.654912,4.265041,-3.577920,3.578077,-3.758672,-9.415926,-1.271259,4.572363,-0.659748,-7.382392,1.368033,3.781435,6.991937,1.053350,3.486579,-5.591573,7.072707,1.269298,6.050291,4.377605,4.155862,6.620529],[-7.233399,1.576711,2.837549,-3.668527,2.881962,0.435202,9.919212,6.449994,7.357230,-5.938171,-8.235409,-1.684398,-0.032452,9.250020,5.787317,-5.216578,5.306530,-6.339652,4.238972,5.176210,-4.899500,2.725886,0.946203,5.497004,-1.666346,-3.305919,9.202061,-7.720645,-8.379260,8.677028,-0.276856,5.598209,5.230809,-4.856184,3.576121,5.364241,2.211884,2.015228,-3.312690,2.063031,7.570583,3.028727,5.688010,-0.122579,5.582720,2.465630,5.242546,0.550093,6.292989,8.927808,2.838288,-4.341404,-0.237494,-5.329790,-9.893024,2.951837,5.088041,-4.821280,1.542471,-1.241320,-0.434227,-1.978431,-5.438463,6.633815,-9.330921,-9.816490,3.720607,-3.111083,8.816313,-4.429157,-2.146540,8.721355,-0.305575,-4.536062,-6.838102,-6.346543,9.979584,0.437659,-9.805043,8.308774],[4.554334,6.300919,-2.405151,-0.360026,-3.965921,-1.092423,9.031404,-9.848773,3.059255,0.167131,0.075568,8.000399,-3.804550,-7.249555,6.502453,7.542111,-9.954373,4.692565,-4.659930,-9.648345,7.122409,-7.218156,-8.577096,-0.996995,1.814500,9.802302,-0.971276,9.761936,8.071410,7.814369,0.391077,-5.526609,1.037848,3.020833,6.819746,-5.060811,-6.162195,3.230736,5.978777,-0.560509,2.173213,4.235903,-5.741769,7.993118,5.007314,-6.619487,4.567825,-8.535238,7.796895,6.642677,8.545390,8.683545,-7.025711,-0.600645,-5.939081,-9.478756,-8.777372,8.606841,0.545055,4.772381,-6.393050,9.637220,-5.889580,-2.181251,5.583980,-5.420303,-0.703146,-3.096852,9.353790,-6.562010,-5.704643,3.969843,4.556635,3.819897,2.262613,0.653799,0.063990,-4.880345,-2.926514,2.036977],[-0.801427,-4.655449,6.020180,8.854850,5.003068,-3.910090,-0.182878,-0.994912,0.374508,-2.755733,-2.469679,-7.025855,5.435893,0.214504,3.107089,9.776582,4.745435,-6.358844,8.800641,8.664041,-4.347981,-6.237616,7.337131,-6.988251,-1.754912,-0.421790,-0.098219,-9.118514,9.373462,2.532876,-3.648141,-0.984599,-6.124191,-3.782634,-0.973849,-0.560928,-9.651263,5.305619,9.605630,-6.136485,3.016812,6.631037,4.429356,8.897376,2.132833,0.629385,8.588693,6.489700,5.113865,3.215754,8.461586,-1.550721,-9.060810,-9.064960,3.456007,-1.717539,0.011138,-3.201686,3.753728,9.894576,-8.257429,0.723332,-2.349384,4.301467,-2.656312,4.454633,-2.581315,3.381364,3.826400,-8.838798,-5.310405,2.014623,-9.696764,-7.439504,3.268689,9.019303,9.205856,-4.079592,8.646013,0.923033],[-4.049073,-8.103351,-6.316706,-1.883559,6.621873,-3.907400,8.609820,3.615000,9.958046,4.654420,6.316572,-2.223639,0.425656,-6.912546,-0.378620,9.207751,-3.187065,2.751286,7.739182,-6.510612,-0.311642,2.737341,6.125443,-0.318917,-9.636837,2.083427,-2.968747,-5.256939,-5.708747,-8.638628,-5.364438,-5.931203,3.065199,8.408020,6.008056,3.085195,-9.353784,4.889495,4.930090,-9.809522,8.235090,9.758137,9.736889,-3.142046,-3.536296,-9.412956,-7.588162,8.760488,-4.507810,-2.735818,4.176985,-4.005472,-5.940631,5.564190,1.794770,-5.279729,9.524416,-5.221501,2.588286,7.141438,2.570347,4.539047,-7.567605,-4.631141,8.482832,-0.695667,-7.852422,1.456953,-5.730368,4.751192,-6.390688,-6.853828,7.616906,1.593306,5.913049,3.142636,-9.993526,-3.428918,7.365357,-5.739987],[-9.205788,2.273292,3.897498,1.968760,2.436795,3.490048,-7.439803,-4.782182,-7.417560,7.611542,-2.390827,-3.877788,9.071549,7.011362,7.327679,3.937742,-7.709128,6.198663,9.678264,4.872597,4.792833,7.785664,-5.610524,6.405962,2.854674,2.905883,8.622760,-5.062908,-9.094354,-6.884527,9.764539,3.064942,-8.531767,2.313153,-7.879758,1.748480,9.971383,5.929898,-8.050332,-8.357148,7.937428,3.146128,-3.747604,5.794713,0.518412,-7.490794,-2.526153,-0.443587,-0.181426,-0.064919,-2.303543,-9.921267,-3.145706,4.245821,0.332854,-3.239194,1.295915,5.804259,-8.975510,9.620219,-1.764825,-4.672975,7.887243,-3.511516,3.539084,-3.804258,-2.711389,9.104504,5.084791,5.489505,5.721445,9.448861,1.859611,-9.424625,-0.418827,9.721365,1.689694,5.123889,-7.825896,9.092103],[-1.674330,5.820164,-9.278469,-1.211742,3.683067,-4.616551,5.320065,-9.951414,1.139469,-8.434132,-2.925154,-3.102502,-6.490972,-4.269516,3.953530,-3.751957,-8.902998,-2.291872,-9.548167,-3.691937,-3.156165,-6.149710,-2.484587,-2.175365,2.029993,6.572934,-3.804693,-8.887333,3.146766,2.874258,-9.102046,2.640174,9.980339,2.356124,-3.889757,-6.731720,9.210306,-1.058766,7.231695,8.612273,-5.105193,-7.278629,-9.491359,6.404101,8.452436,1.244923,-3.986579,-7.005285,-5.186627,0.482215,5.883225,-7.024076,0.242596,9.854234,1.076478,1.030271,4.024206,3.689085,-3.146695,-3.907022,5.430198,0.399395,-7.864934,-3.836754,-9.174782,9.845779,7.727345,-4.032379,-7.479735,1.209787,-0.141445,6.245881,-4.631743,5.772588,6.908895,-7.848338,1.647392,-6.696462,-7.196958,4.328138],[6.348341,-8.489028,-8.841474,7.008712,-7.347618,-1.542096,4.862497,7.935578,-6.081512,2.421556,-1.795757,2.440845,3.861789,9.486028,-7.887006,-8.128480,1.869343,-4.951187,8.621840,-1.512563,-8.534133,-6.770570,3.382840,4.305339,0.975692,6.382050,-6.652143,5.232842,4.882482,4.215012,2.615412,1.219537,5.260879,-7.922186,3.896735,-2.755090,-4.856491,8.607329,-4.815256,1.758011,1.279156,7.996379,7.319904,-8.037112,0.480123,-8.781960,7.220421,6.930933,7.337531,-1.311181,2.799299,-6.884926,9.807156,9.883773,-4.810149,7.447493,1.923739,-6.642718,-1.431311,2.429265,-8.063281,-7.528704,2.308579,-5.678603,-7.827978,0.452273,-3.669611,6.253614,-8.914649,8.188801,9.260032,-5.291372,-7.998275,-5.668037,8.396503,-4.440922,4.566977,-5.155166,3.656561,-3.768828],[5.040442,0.416382,5.089921,6.695348,0.901475,9.886581,-6.654410,8.064428,-5.941438,3.642913,-3.065105,1.108518,-0.812831,-4.807676,1.875520,5.110535,0.963951,-1.676072,0.601179,-0.847797,-0.633985,-1.654598,6.226191,1.485804,2.384146,-3.476158,6.711707,5.186369,6.837824,2.558891,-3.300604,7.861488,9.859135,5.856248,7.671984,5.457237,8.523941,-9.793322,9.069078,-0.518425,-7.710374,-7.406488,-6.358879,-8.577605,-8.829337,-1.648122,-1.787131,-1.927577,1.286993,3.682830,9.087685,2.902638,-6.057051,0.289236,7.259758,-7.026754,-2.602323,3.692591,-9.483707,-6.296844,6.265749,-6.882642,-4.898481,3.970552,-9.364430,7.114323,2.670799,-4.971814,-1.192689,-9.421277,6.266127,-2.062728,7.216386,-8.668858,4.292983,-8.680432,-7.244298,-7.233301,0.675655,-6.340810],[-5.226004,7.926166,-7.776984,0.346610,-0.159839,5.290154,-3.460572,3.599571,9.530623,-0.157797,3.699705,-4.663953,7.190294,-5.932198,-3.043555,-0.146375,-1.685685,3.700859,1.427756,-8.008696,-4.436687,2.877049,9.947556,-5.376145,-5.764898,6.414445,-7.336014,8.254716,-6.652634,-9.726273,7.373787,-4.638966,6.382330,-2.622441,-4.089975,-4.965076,-1.780087,-0.139669,-7.630941,6.042018,1.216830,-9.579412,-9.241517,0.814074,-6.172031,6.871606,-7.166606,0.298259,2.268573,-8.887787,-0.755556,-6.902550,-9.275233,-3.651423,-9.285021,7.043881,-0.049636,1.626877,-5.536114,-7.280909,-5.732530,-3.439535,5.357596,-9.692503,4.767298,-1.866686,1.714385,8.882146,4.305326,4.276648,3.849931,1.638797,-5.729963,-4.526028,1.383086,0.135852,-4.511289,-9.927377,-7.396257,8.375663]], dtype = "float64")#candidate|5936|(11, 80)|const|float64
bop_5937 = relay.power(call_5933.astype('float64'), const_5936.astype('float64')) # shape=(11, 80)
bop_5940 = relay.power(call_5934.astype('float64'), const_5936.astype('float64')) # shape=(11, 80)
bop_5943 = relay.less(call_5933.astype('bool'), const_5936.astype('bool')) # shape=(11, 80)
bop_5946 = relay.less(call_5934.astype('bool'), const_5936.astype('bool')) # shape=(11, 80)
func_4767_call = mod.get_global_var('func_4767')
func_4769_call = mutated_mod.get_global_var('func_4769')
call_5950 = func_4767_call(relay.reshape(call_5933.astype('float64'), [1, 5, 16]))
call_5951 = func_4767_call(relay.reshape(call_5933.astype('float64'), [1, 5, 16]))
output = relay.Tuple([bop_5937,bop_5943,call_5950,])
output2 = relay.Tuple([bop_5940,bop_5946,call_5951,])
func_5952 = relay.Function([], output)
mod['func_5952'] = func_5952
mod = relay.transform.InferType()(mod)
mutated_mod['func_5952'] = func_5952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5952_call = mutated_mod.get_global_var('func_5952')
call_5953 = func_5952_call()
output = call_5953
func_5954 = relay.Function([], output)
mutated_mod['func_5954'] = func_5954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5432_call = mod.get_global_var('func_5432')
func_5434_call = mutated_mod.get_global_var('func_5434')
call_5990 = func_5432_call()
call_5991 = func_5432_call()
func_3664_call = mod.get_global_var('func_3664')
func_3667_call = mutated_mod.get_global_var('func_3667')
const_6027 = relay.const([[9],[-1],[10],[10],[5],[-4],[-3],[5],[-5],[-7],[6],[1],[-6],[3],[8],[-10],[9],[-5],[-1],[8],[-3],[6],[-1],[6],[-7],[6],[-1],[-3],[-7],[-10],[-2],[-3],[-4],[-1],[3],[10],[-2],[-4],[9],[-10],[4],[-10],[-4],[-3],[1],[-5],[6],[5],[-6],[4],[6],[7],[-2],[10],[10],[-8],[7],[-1],[-2],[9],[10],[6],[3],[7],[-8],[3],[6],[-1],[-1],[-10],[2],[-7],[-7],[-7],[7],[-4],[-1],[4],[-4],[7],[1],[-5],[8],[-7],[-8],[1],[-6],[-8],[-1],[2],[2],[-4],[6],[8],[8],[-1],[5],[-7],[-3],[-3],[-1],[10],[5],[10],[4],[3],[-10],[10]], dtype = "uint16")#candidate|6027|(108, 1)|const|uint16
call_6026 = relay.TupleGetItem(func_3664_call(relay.reshape(const_6027.astype('uint16'), [1, 12, 9])), 0)
call_6028 = relay.TupleGetItem(func_3667_call(relay.reshape(const_6027.astype('uint16'), [1, 12, 9])), 0)
func_3664_call = mod.get_global_var('func_3664')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_6029 = relay.TupleGetItem(func_3664_call(relay.reshape(const_6027.astype('uint16'), [1, 12, 9])), 0)
call_6030 = relay.TupleGetItem(func_3667_call(relay.reshape(const_6027.astype('uint16'), [1, 12, 9])), 0)
output = relay.Tuple([call_5990,call_6026,const_6027,call_6029,])
output2 = relay.Tuple([call_5991,call_6028,const_6027,call_6030,])
func_6031 = relay.Function([], output)
mod['func_6031'] = func_6031
mod = relay.transform.InferType()(mod)
output = func_6031()
func_6032 = relay.Function([], output)
mutated_mod['func_6032'] = func_6032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4877_call = mod.get_global_var('func_4877')
func_4879_call = mutated_mod.get_global_var('func_4879')
call_6095 = func_4877_call()
call_6096 = func_4877_call()
output = relay.Tuple([call_6095,])
output2 = relay.Tuple([call_6096,])
func_6099 = relay.Function([], output)
mod['func_6099'] = func_6099
mod = relay.transform.InferType()(mod)
mutated_mod['func_6099'] = func_6099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6099_call = mutated_mod.get_global_var('func_6099')
call_6100 = func_6099_call()
output = call_6100
func_6101 = relay.Function([], output)
mutated_mod['func_6101'] = func_6101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4877_call = mod.get_global_var('func_4877')
func_4879_call = mutated_mod.get_global_var('func_4879')
call_6145 = func_4877_call()
call_6146 = func_4877_call()
const_6153 = relay.const([[-6.014617,-2.394825,-8.847232,6.409219,-0.901319,5.763834,9.836158,0.841007,4.411684,-3.091817,-0.725523,6.233186,-0.642358,-4.211781,-0.612548,2.231443,8.716105,3.061094,9.445798,1.697045,-0.469363,0.342263,0.458447,-0.042580,-0.525380,-7.704008,-6.780488,7.016423,-4.979647,7.138175,7.454752,-4.294185,5.532903,-1.984379,-0.107289,-2.962551,-9.154152,-9.884458,-0.341068,3.428848,2.545385,9.015974,1.910663,-3.333121,-0.304462,-5.640737,-5.223930,8.428064,-1.244611,-6.685326,1.074559,-8.262286,0.608680,9.092819,5.844012,-9.291517,-7.313467,-5.727530,2.111345,-3.359326,-0.721262,1.483813,0.650697,-4.531624,0.412702,-3.528478,-9.138480,-5.600337,8.293154,3.786624,-6.851434,8.351340,-1.354064,8.473538,-2.681247,3.374998,-7.573535,2.982739,0.849134,-9.456101],[-7.325062,-5.557455,9.841340,-3.088780,-6.404134,8.951466,-6.096330,-8.869903,-4.318333,-6.522273,7.481380,8.159244,-9.936284,9.299946,3.572720,-4.160810,-9.378714,-9.041956,-6.222701,-7.653923,-2.892915,7.618644,-2.930004,1.663743,8.619235,0.980152,-6.539453,9.234068,3.740044,-9.601277,-9.630807,-6.577103,4.105714,-0.334676,-6.268412,3.200190,-9.171052,3.368661,-1.379869,2.253079,-7.615652,-3.920382,1.865941,1.074378,-0.317619,1.288799,1.626791,2.025647,-9.672870,-5.520312,-8.243323,-9.776273,-7.858415,9.237077,-7.858216,3.730547,5.521351,8.593828,2.088994,2.392891,4.979278,-8.244495,-8.263225,9.487093,1.067779,9.414922,7.516606,-1.160441,0.020761,-4.665317,-1.588660,-9.436713,4.617923,-8.873347,3.022545,-4.338683,1.270646,3.358056,-2.170290,-3.993934],[-6.363899,2.529955,1.144237,6.074001,3.076920,5.171490,0.353730,6.228647,3.427005,6.090667,3.391618,3.561296,-2.174322,6.639801,-3.132515,-0.410407,1.102966,-3.754685,2.089947,-7.796023,-5.600993,-0.236250,3.957747,-2.245251,-4.013642,7.245615,-3.254559,-7.995286,7.729169,5.451453,8.163531,-8.754802,-3.301372,-2.468295,0.274943,-3.903573,-1.221462,7.205809,5.338681,-9.460002,-1.081528,4.519217,2.888642,1.821895,4.046147,-7.305085,5.516087,-6.458558,7.294188,0.150758,4.807172,-6.881095,0.540942,6.766103,-5.490299,-7.235745,-7.449233,0.094786,9.023694,-4.502810,3.908242,8.838870,-1.637340,-1.980997,-6.515731,-8.855673,-5.294147,9.156484,-8.530142,-5.249311,7.456373,5.224999,-1.518307,0.963075,-9.795263,9.840441,-7.830027,-8.189549,-7.392873,-9.061331],[-1.338283,-4.858395,-7.514981,-6.937821,-9.030348,1.906088,9.865832,4.567561,0.095906,7.793000,9.953354,2.892281,-1.299601,-8.497840,9.913696,3.712357,5.506802,-4.795496,-2.413516,-5.451950,9.520291,-1.294936,1.845130,-2.212501,-8.980998,-2.528328,-3.816495,2.034278,6.236933,0.604989,-5.866528,-1.707053,-5.588635,3.852814,-5.134467,-9.220166,7.486558,-2.424701,-5.356001,4.816314,6.776118,-1.135268,-9.500534,-4.737103,8.811943,-8.848714,-7.248421,5.516661,2.064991,9.509048,9.297618,6.558785,-5.185914,9.273340,-0.860591,8.031040,-0.509238,-4.359113,2.301251,-9.893547,-6.580683,0.628948,8.419886,-2.581704,2.779032,-7.299338,4.265956,-8.826269,-4.270999,-6.913976,-4.487676,-4.163138,-6.012555,5.748641,8.865375,-4.782140,-3.353035,-8.027006,2.075649,-5.687602],[6.129656,4.813565,-7.627516,-9.095008,0.290008,-1.658163,3.067538,-8.887314,8.428892,8.227434,2.311041,-0.717537,4.235047,8.574145,1.338027,-7.347388,3.978684,5.995201,6.081505,-9.427009,9.109070,-6.487006,5.401384,-1.557142,2.307736,0.005008,9.209004,-8.303352,-3.374570,3.122179,-1.128939,-4.126997,8.411570,0.120224,-4.863768,7.553827,-9.410073,-8.467273,-3.318389,-7.786326,-2.427759,-6.855874,-5.241088,3.125707,8.148278,-2.003317,-5.267050,8.333352,8.002194,-4.324345,-7.828513,1.208230,7.202182,-6.916696,-3.144721,4.415114,-4.950441,-5.696663,1.564534,0.224423,9.829827,-1.473942,6.626541,2.066630,-7.748910,-3.110899,-9.019229,-0.346531,1.726375,3.678577,9.410443,-9.520483,2.602885,-3.280118,-3.954873,1.887432,-5.662862,6.202919,6.861649,-6.137216],[-3.365986,-7.144301,-8.089202,7.466372,6.930704,3.274656,5.714226,-6.107583,-9.236514,9.757364,-4.243706,-5.856272,-0.112596,-4.349820,7.703607,-8.678768,1.462062,-7.771629,6.498911,9.607776,-2.316581,0.478877,5.816730,-7.765370,9.670429,-8.243514,-9.229828,-8.333035,8.924057,-1.259627,0.830186,-0.867450,5.340607,-7.092717,-6.394727,1.311417,-5.953739,3.659765,-2.367869,8.005773,6.589749,-1.237050,6.015897,3.136952,0.757463,8.557032,-8.511220,-7.096648,-2.261237,-4.775532,-9.820646,2.836381,-6.491785,-5.911147,8.750595,-7.688887,-1.254346,-3.893478,7.225083,-4.326677,-3.272133,4.584470,5.602890,-1.231414,-7.875400,6.590794,6.860244,5.275568,0.592045,-1.373254,-4.796866,7.489984,0.211308,-4.006722,7.056745,-2.473355,-7.331659,-2.754717,1.462443,6.906892],[2.211535,-8.870823,1.339522,9.599864,-0.425283,5.540817,-7.530491,1.268383,0.910017,6.250287,-0.016340,-4.948037,6.501892,-3.713798,5.876681,6.595426,-3.827414,8.131374,4.299218,-1.283392,6.826704,-6.800786,2.254493,7.372244,1.938260,0.482333,-8.643211,-0.938292,2.721499,-3.675189,-8.272144,6.000535,-5.164480,0.539182,6.829470,5.193226,7.849462,1.249855,7.301352,5.717382,5.107330,-2.976441,-0.224096,9.663925,2.779937,1.368546,1.301596,1.493945,8.099625,-8.548502,-0.312278,4.700505,3.188441,-5.002595,-8.862543,-4.938032,7.702535,2.312554,9.565210,2.226416,1.990869,2.413547,1.517354,-2.971465,2.536548,-2.198395,-1.676922,4.403744,-5.977503,-8.157036,-2.538716,-7.011746,9.955788,6.615125,-1.354493,6.938450,9.236405,6.433530,0.531282,-8.560218],[-9.587507,7.463828,-1.944488,-9.037358,-8.981896,9.180309,8.620102,-6.109000,-4.414278,-8.168228,-5.212430,-6.620785,-3.292778,5.543181,1.105722,-3.330989,-1.152752,-1.217194,-3.300608,7.198108,8.324538,1.560215,-2.901288,1.093593,-5.841154,6.082317,0.007029,-7.620836,0.932102,-5.045320,2.720393,-5.085508,-2.445740,3.642003,-7.641753,3.472762,0.323657,-9.300664,7.017032,-3.053056,8.699514,-9.290565,0.381782,-9.650074,-9.628231,8.584536,6.913695,7.141690,-6.644290,4.207971,6.598485,-2.470166,5.312819,-9.163700,-8.544215,-8.685282,6.654016,9.911115,-4.370391,1.606641,-6.162150,-3.761866,7.488142,3.356348,-6.462936,-9.550916,1.894911,3.948827,6.874280,0.582553,-9.048835,-7.132335,9.341904,8.781461,4.307823,-2.901628,1.624318,-3.237224,8.322316,6.671881],[-1.311748,1.028389,-6.024360,-5.044659,1.163732,-5.960517,-4.559175,4.075016,-9.242575,0.342763,5.883648,9.402409,-0.149733,8.575501,7.035256,-1.047780,-1.366657,5.887573,-6.333766,9.530780,-2.878772,1.638950,-0.287426,-9.531883,5.268166,-1.604614,9.001731,-0.946378,2.922221,5.132262,-4.453731,-3.389099,-5.419449,3.270954,-2.016780,-2.570506,-9.290603,0.841211,-4.727700,0.064225,1.666230,-2.359674,2.305821,-6.954920,4.009468,0.016815,3.148213,-9.067837,-5.051106,-5.976259,-3.959605,9.766926,6.630840,8.779664,-1.532258,0.981684,0.355057,-3.769755,-0.078087,9.638894,3.097593,7.202626,8.196023,-4.903333,-4.477796,-4.894267,1.521052,6.477002,-5.422542,-8.394143,-3.419231,-3.927181,4.144609,-7.412856,7.221805,1.029039,1.504775,-8.508604,8.794000,-3.535898],[7.906274,-6.799193,-5.347422,3.364105,8.463339,5.772769,-3.958064,4.089532,-5.817777,4.531644,3.532443,-6.015628,-5.688966,7.449084,1.343100,8.049002,-0.989184,0.688087,2.766600,3.596160,-2.376166,-2.478688,-6.176562,7.012888,-0.999322,3.054372,1.412738,-4.559757,-9.244660,9.736018,1.850415,-4.762239,0.477536,-3.741839,5.171722,1.254952,-2.199105,-4.846570,9.982268,3.227529,-0.015208,8.778942,0.277983,9.815099,-0.275500,1.496017,7.189939,1.183708,-1.144640,-1.384063,-7.488908,2.502833,6.035850,7.045702,4.082969,-4.223630,9.876446,-8.674200,1.746284,-3.430321,-5.696450,0.948722,-2.928172,-7.537265,-0.298071,-3.942820,-4.648983,7.466137,5.208964,-0.812805,-0.662318,-6.946307,7.125513,-3.197187,3.032409,-2.454966,-8.150096,9.868053,-3.141969,6.202413]], dtype = "float64")#candidate|6153|(10, 80)|const|float64
bop_6154 = relay.logical_xor(call_6145.astype('uint16'), const_6153.astype('uint16')) # shape=(10, 80)
bop_6157 = relay.logical_xor(call_6146.astype('uint16'), const_6153.astype('uint16')) # shape=(10, 80)
output = bop_6154
output2 = bop_6157
func_6175 = relay.Function([], output)
mod['func_6175'] = func_6175
mod = relay.transform.InferType()(mod)
mutated_mod['func_6175'] = func_6175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6175_call = mutated_mod.get_global_var('func_6175')
call_6176 = func_6175_call()
output = call_6176
func_6177 = relay.Function([], output)
mutated_mod['func_6177'] = func_6177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4785_call = mod.get_global_var('func_4785')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_6184 = relay.TupleGetItem(func_4785_call(), 0)
call_6185 = relay.TupleGetItem(func_4787_call(), 0)
func_5833_call = mod.get_global_var('func_5833')
func_5835_call = mutated_mod.get_global_var('func_5835')
call_6197 = func_5833_call()
call_6198 = func_5833_call()
const_6204 = relay.const([[7.810639,5.377728,-6.603417,-6.945995,-1.954188,-6.293277,4.496540,-8.436692,-6.165298,7.629598,-8.990037,9.482901,2.071447,-9.727015,1.650065,0.951083,1.025074,4.489734,-0.980750,-5.026701,2.953503,-1.801245,-4.947594,1.227015,4.606609,9.256809,-8.594496,-0.314704,-1.492399,-7.067522,-2.804803,-5.845095,-4.000357,9.423464,3.580477,-6.308515,4.686969,1.252904,7.683468,-5.939297,0.833218,7.351725,-8.946624,2.768147,-5.231572,-1.065008,2.906337,5.721618,-3.901116,-4.258351,-1.631085,5.520698,5.452627,3.952232,2.205565,8.812593,-9.446447,-7.908919,-3.876190,2.232550,1.810528,-4.692495,-2.204125,8.707599,-0.287022,-1.288570,-5.460900,-5.985041,-7.090990,-4.444761,0.598848,6.000344,-7.493092,-2.575274,9.553840,-6.024180,-3.257552,-7.012148,-1.560892,8.805626],[7.618576,7.696972,4.013071,-1.250658,6.958242,7.146479,-8.124921,-6.492154,-8.671601,-1.379371,-5.979924,7.470348,9.547856,9.213776,2.400398,-4.439695,-5.190959,-7.438404,-4.425992,-1.857799,2.319875,-8.290323,-6.538547,3.235104,-4.531647,-5.120946,-9.637821,4.633468,3.709411,8.005900,8.777356,-2.532715,9.259854,-0.166498,8.003026,8.151961,-2.157538,-5.790913,8.148146,-9.819943,0.275537,-7.560950,-4.147449,7.808441,2.444266,-4.433854,7.272041,-8.902488,8.858341,-5.607635,5.640135,1.936518,3.467073,-7.189163,9.549866,-7.906448,-8.186309,-3.108799,-5.789112,-7.711625,-6.269240,3.369468,5.343416,-3.647929,-2.408460,5.916286,5.983800,6.195737,8.101877,0.700999,-4.742956,8.411284,-8.662522,2.121998,-9.210225,-2.487837,-6.074471,-9.409272,-8.705971,-5.171293],[6.787579,-7.398867,4.942434,3.036213,-1.102203,9.726334,2.265793,3.415078,7.939221,-5.085710,-7.613750,-6.153217,-5.785682,9.613174,-0.588393,0.916443,3.953667,-8.565860,-8.159010,4.314579,-4.295410,0.323187,-9.285953,7.463092,-1.791894,7.994810,2.715046,7.186079,-0.027453,-0.601141,8.982585,-4.373258,7.324892,2.021474,-0.461743,-3.211203,8.954610,-8.164615,-4.602966,3.590547,-3.230864,-9.282505,2.936689,0.799933,-9.485566,-3.167408,-4.753964,-5.305597,5.933130,8.632108,5.149677,-7.493315,4.647937,-5.136797,-3.886710,-1.562369,-5.076060,-1.616467,3.310587,0.826406,9.606611,7.391743,-8.218058,-4.894470,5.287280,8.924767,4.910391,7.829059,9.992602,9.929376,-3.011512,-2.821663,-3.170287,-0.025874,-7.539081,8.511730,8.998577,4.900892,-8.732917,0.687516],[3.183222,-1.663040,-0.708319,-6.194667,5.795065,6.740338,2.461699,-2.624784,5.592888,3.519669,-0.693968,5.849638,7.792672,1.530317,-7.325875,8.037568,-7.244186,6.161636,-4.302918,-1.426506,1.709486,6.784357,1.267999,-5.607428,-1.249179,-0.604067,-9.374746,-2.992342,1.750399,1.153033,-9.995602,8.033113,1.822779,2.609151,-0.472395,3.192639,9.045708,7.718802,7.677137,9.357392,5.209485,-9.146345,-7.137130,-9.017332,8.137504,4.925188,-9.081386,-4.749348,3.124556,4.693597,7.410533,7.734678,0.899805,7.143116,-4.334098,-5.635865,-5.341196,5.656838,9.711869,-6.337596,-3.512394,-6.555226,9.621622,-0.429836,-8.067230,-2.639009,-3.470933,8.629957,-0.777570,-1.703206,0.481706,0.489061,-4.092829,-0.021493,-9.302933,-7.614616,2.324785,1.317769,7.223868,7.290776],[-6.040349,0.870546,-7.898859,-0.717916,7.416029,1.905049,-9.639546,-7.270027,-2.135088,-1.571401,-0.116100,3.283447,-2.744915,-5.021502,-7.110646,9.872103,6.185166,6.123086,6.441154,5.479764,9.444796,-6.660106,6.689618,-7.748187,6.377680,-1.652839,4.976618,6.633871,-6.978703,0.760849,-3.989616,0.465172,0.058759,3.562273,6.728297,9.009178,8.430660,-6.237951,-8.318387,-3.949092,5.444220,9.404726,-5.923735,-1.563903,-3.234977,1.610257,8.699146,9.660860,-7.287235,0.479157,4.046387,-5.576757,-4.842360,3.918918,2.651822,8.151457,-1.228957,5.376416,1.426088,7.350667,2.028319,-3.742515,-8.679460,1.588912,-1.314703,-7.358908,7.641902,3.770330,5.317997,-7.871063,-0.430883,5.057290,4.448353,-5.516411,8.603621,-0.718175,-6.199825,0.049273,-2.252373,6.386759]], dtype = "float64")#candidate|6204|(5, 80)|const|float64
bop_6205 = relay.bitwise_or(call_6197.astype('uint8'), const_6204.astype('uint8')) # shape=(5, 80)
bop_6208 = relay.bitwise_or(call_6198.astype('uint8'), const_6204.astype('uint8')) # shape=(5, 80)
output = relay.Tuple([call_6184,bop_6205,])
output2 = relay.Tuple([call_6185,bop_6208,])
func_6219 = relay.Function([], output)
mod['func_6219'] = func_6219
mod = relay.transform.InferType()(mod)
mutated_mod['func_6219'] = func_6219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6219_call = mutated_mod.get_global_var('func_6219')
call_6220 = func_6219_call()
output = call_6220
func_6221 = relay.Function([], output)
mutated_mod['func_6221'] = func_6221
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6267 = relay.var("var_6267", dtype = "float32", shape = (3, 6, 6))#candidate|6267|(3, 6, 6)|var|float32
uop_6268 = relay.rsqrt(var_6267.astype('float32')) # shape=(3, 6, 6)
output = relay.Tuple([uop_6268,])
output2 = relay.Tuple([uop_6268,])
func_6277 = relay.Function([var_6267,], output)
mod['func_6277'] = func_6277
mod = relay.transform.InferType()(mod)
var_6278 = relay.var("var_6278", dtype = "float32", shape = (3, 6, 6))#candidate|6278|(3, 6, 6)|var|float32
output = func_6277(var_6278)
func_6279 = relay.Function([var_6278], output)
mutated_mod['func_6279'] = func_6279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5166_call = mod.get_global_var('func_5166')
func_5167_call = mutated_mod.get_global_var('func_5167')
call_6305 = relay.TupleGetItem(func_5166_call(), 1)
call_6306 = relay.TupleGetItem(func_5167_call(), 1)
var_6316 = relay.var("var_6316", dtype = "float64", shape = (3, 5, 16))#candidate|6316|(3, 5, 16)|var|float64
bop_6317 = relay.divide(call_6305.astype('float64'), var_6316.astype('float64')) # shape=(3, 5, 16)
bop_6320 = relay.divide(call_6306.astype('float64'), var_6316.astype('float64')) # shape=(3, 5, 16)
output = bop_6317
output2 = bop_6320
func_6339 = relay.Function([var_6316,], output)
mod['func_6339'] = func_6339
mod = relay.transform.InferType()(mod)
var_6340 = relay.var("var_6340", dtype = "float64", shape = (3, 5, 16))#candidate|6340|(3, 5, 16)|var|float64
output = func_6339(var_6340)
func_6341 = relay.Function([var_6340], output)
mutated_mod['func_6341'] = func_6341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6219_call = mod.get_global_var('func_6219')
func_6221_call = mutated_mod.get_global_var('func_6221')
call_6361 = relay.TupleGetItem(func_6219_call(), 0)
call_6362 = relay.TupleGetItem(func_6221_call(), 0)
output = relay.Tuple([call_6361,])
output2 = relay.Tuple([call_6362,])
func_6389 = relay.Function([], output)
mod['func_6389'] = func_6389
mod = relay.transform.InferType()(mod)
mutated_mod['func_6389'] = func_6389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6389_call = mutated_mod.get_global_var('func_6389')
call_6390 = func_6389_call()
output = call_6390
func_6391 = relay.Function([], output)
mutated_mod['func_6391'] = func_6391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4877_call = mod.get_global_var('func_4877')
func_4879_call = mutated_mod.get_global_var('func_4879')
call_6413 = func_4877_call()
call_6414 = func_4877_call()
output = relay.Tuple([call_6413,])
output2 = relay.Tuple([call_6414,])
func_6415 = relay.Function([], output)
mod['func_6415'] = func_6415
mod = relay.transform.InferType()(mod)
output = func_6415()
func_6416 = relay.Function([], output)
mutated_mod['func_6416'] = func_6416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5432_call = mod.get_global_var('func_5432')
func_5434_call = mutated_mod.get_global_var('func_5434')
call_6419 = func_5432_call()
call_6420 = func_5432_call()
var_6426 = relay.var("var_6426", dtype = "float64", shape = (3, 5, 16))#candidate|6426|(3, 5, 16)|var|float64
bop_6427 = relay.logical_xor(call_6419.astype('int32'), var_6426.astype('int32')) # shape=(3, 5, 16)
bop_6430 = relay.logical_xor(call_6420.astype('int32'), var_6426.astype('int32')) # shape=(3, 5, 16)
func_2712_call = mod.get_global_var('func_2712')
func_2714_call = mutated_mod.get_global_var('func_2714')
var_6444 = relay.var("var_6444", dtype = "float32", shape = (6, 66))#candidate|6444|(6, 66)|var|float32
call_6443 = func_2712_call(relay.reshape(var_6444.astype('float32'), [11, 12, 3]))
call_6445 = func_2712_call(relay.reshape(var_6444.astype('float32'), [11, 12, 3]))
func_5952_call = mod.get_global_var('func_5952')
func_5954_call = mutated_mod.get_global_var('func_5954')
call_6447 = relay.TupleGetItem(func_5952_call(), 2)
call_6448 = relay.TupleGetItem(func_5954_call(), 2)
output = relay.Tuple([bop_6427,call_6443,var_6444,call_6447,])
output2 = relay.Tuple([bop_6430,call_6445,var_6444,call_6448,])
func_6452 = relay.Function([var_6426,var_6444,], output)
mod['func_6452'] = func_6452
mod = relay.transform.InferType()(mod)
var_6453 = relay.var("var_6453", dtype = "float64", shape = (3, 5, 16))#candidate|6453|(3, 5, 16)|var|float64
var_6454 = relay.var("var_6454", dtype = "float32", shape = (6, 66))#candidate|6454|(6, 66)|var|float32
output = func_6452(var_6453,var_6454,)
func_6455 = relay.Function([var_6453,var_6454,], output)
mutated_mod['func_6455'] = func_6455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5082_call = mod.get_global_var('func_5082')
func_5084_call = mutated_mod.get_global_var('func_5084')
call_6480 = relay.TupleGetItem(func_5082_call(), 0)
call_6481 = relay.TupleGetItem(func_5084_call(), 0)
output = relay.Tuple([call_6480,])
output2 = relay.Tuple([call_6481,])
func_6487 = relay.Function([], output)
mod['func_6487'] = func_6487
mod = relay.transform.InferType()(mod)
output = func_6487()
func_6488 = relay.Function([], output)
mutated_mod['func_6488'] = func_6488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5035_call = mod.get_global_var('func_5035')
func_5037_call = mutated_mod.get_global_var('func_5037')
call_6522 = relay.TupleGetItem(func_5035_call(), 0)
call_6523 = relay.TupleGetItem(func_5037_call(), 0)
func_4785_call = mod.get_global_var('func_4785')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_6529 = relay.TupleGetItem(func_4785_call(), 2)
call_6530 = relay.TupleGetItem(func_4787_call(), 2)
bop_6538 = relay.left_shift(call_6529.astype('uint16'), relay.reshape(call_6522.astype('uint16'), relay.shape_of(call_6529))) # shape=(1, 80)
bop_6541 = relay.left_shift(call_6530.astype('uint16'), relay.reshape(call_6523.astype('uint16'), relay.shape_of(call_6530))) # shape=(1, 80)
func_4785_call = mod.get_global_var('func_4785')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_6546 = relay.TupleGetItem(func_4785_call(), 2)
call_6547 = relay.TupleGetItem(func_4787_call(), 2)
output = relay.Tuple([bop_6538,call_6546,])
output2 = relay.Tuple([bop_6541,call_6547,])
func_6550 = relay.Function([], output)
mod['func_6550'] = func_6550
mod = relay.transform.InferType()(mod)
mutated_mod['func_6550'] = func_6550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6550_call = mutated_mod.get_global_var('func_6550')
call_6551 = func_6550_call()
output = call_6551
func_6552 = relay.Function([], output)
mutated_mod['func_6552'] = func_6552
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6575 = relay.var("var_6575", dtype = "float64", shape = (16, 6, 13))#candidate|6575|(16, 6, 13)|var|float64
uop_6576 = relay.asinh(var_6575.astype('float64')) # shape=(16, 6, 13)
func_5753_call = mod.get_global_var('func_5753')
func_5756_call = mutated_mod.get_global_var('func_5756')
const_6579 = relay.const([-7.024586,0.315149,-8.622210,6.662593,9.770577,-7.240342,8.290203,-0.561918,4.806113,-5.678282], dtype = "float64")#candidate|6579|(10,)|const|float64
call_6578 = func_5753_call(relay.reshape(const_6579.astype('float64'), [1, 2, 5]))
call_6580 = func_5753_call(relay.reshape(const_6579.astype('float64'), [1, 2, 5]))
output = relay.Tuple([uop_6576,call_6578,const_6579,])
output2 = relay.Tuple([uop_6576,call_6580,const_6579,])
func_6615 = relay.Function([var_6575,], output)
mod['func_6615'] = func_6615
mod = relay.transform.InferType()(mod)
mutated_mod['func_6615'] = func_6615
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6616 = relay.var("var_6616", dtype = "float64", shape = (16, 6, 13))#candidate|6616|(16, 6, 13)|var|float64
func_6615_call = mutated_mod.get_global_var('func_6615')
call_6617 = func_6615_call(var_6616)
output = call_6617
func_6618 = relay.Function([var_6616], output)
mutated_mod['func_6618'] = func_6618
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6650 = relay.var("var_6650", dtype = "float32", shape = (14, 4, 6))#candidate|6650|(14, 4, 6)|var|float32
uop_6651 = relay.cos(var_6650.astype('float32')) # shape=(14, 4, 6)
func_5833_call = mod.get_global_var('func_5833')
func_5835_call = mutated_mod.get_global_var('func_5835')
call_6654 = func_5833_call()
call_6655 = func_5833_call()
uop_6660 = relay.exp(uop_6651.astype('float32')) # shape=(14, 4, 6)
func_3444_call = mod.get_global_var('func_3444')
func_3450_call = mutated_mod.get_global_var('func_3450')
var_6667 = relay.var("var_6667", dtype = "int8", shape = (360,))#candidate|6667|(360,)|var|int8
const_6668 = relay.const([6.077667,2.110347,-2.734142,6.408738,2.458223,-5.291314,0.603791,4.307978,-8.085098,2.554090,0.268466,7.311296,7.216099,4.935208,-6.336230,7.629176,6.191637,9.601413,-5.528065,-4.216403,1.570764,-2.572496,-0.758679,-2.997885,-9.012673,6.679929,-1.441459,-4.132694,9.939978,-0.129149,6.136197,5.750147,-3.571371,-7.745394,-1.658027,7.060287,5.643191,-7.435953,3.032818,-6.648595,9.964509,9.513917,4.059143,6.817605,1.648864,-8.057622,-3.389527,1.711879,-9.827539,7.359773,-3.115443,4.756978,-5.255138,1.668660,-4.837303,-4.609661,-9.480443,2.658488,0.578682,-5.382955,-9.481294,2.170527,2.413047,-2.129493,1.494886,-2.356927,-7.346185,7.652092,2.664389,-5.483446,1.965461,2.948922,-3.479472,9.943533,-5.266677,-7.972995,-9.161814,7.693260,-5.066483,-4.808368,2.020710,-6.763471,-6.214082,4.772478,-3.760251,6.879616,-4.161709,6.887042,7.087161,-4.647669,0.450783,-6.231193,-2.808057,2.824382,7.573203,-8.205830,-4.287683,-6.825852,3.839011,-7.157166,6.808736,3.963756,2.102457,-8.888949,6.484416,-8.455896,4.391821,-3.831725,-8.300701,4.249179,7.408474,-9.607009,-3.114594,-5.416934,-3.290595,0.492372,-9.052289,1.579112,-4.681770,-6.783951,-7.783495,-8.946683,-1.212712,-6.611185,-7.085595,-3.206779,6.754650,8.138530,-2.268764,1.918869,-4.085432,-9.557612,3.063988,-2.163742,-0.956921,1.114954,4.884558,-0.026969,0.270858,-8.964092,-7.942025,7.820050,-7.641182,0.817766,9.963570,5.395904,-1.735039,-4.186146,-8.172539,8.128521,-5.300174,4.080764,-1.288089,2.376552,-9.195449,2.273745,-4.670406,6.280131,3.131127,4.687120,0.532316,-6.576973,1.430822,-5.539390,-4.649303,-4.968356,-4.120275,-3.580705,7.441044,-3.331915,-2.533412,6.927892,9.362519,3.421957,5.616007,6.584297,8.599717,-8.725839,-1.817622,-9.568870,-3.513581,3.003745,6.088541,5.322652,1.865577,-1.989052,0.322704,4.745491,-0.182415,8.961015,4.799981,2.235398,8.968594,3.523974,-4.852653,-2.634765,-6.392318,4.414451,1.748671,8.257836,2.260087,-8.449402,7.301748,3.971618,-0.770004,1.474970,1.107128,1.022301,1.575322,-7.784171,-9.498903,-8.346631,1.816321,-9.982684,5.537288,1.977704,-3.103013,5.607525,3.733492,1.768729,-7.829562,-0.625822,5.085265,-9.751346,-0.495783,-3.746018,3.629278,-3.215820,3.804214,6.728468,-4.119724,1.284212,7.671309,-9.328803,8.349498,-3.140695,-6.882843,1.875676,-7.736687,-8.636987,-4.728530,-7.004582,-4.380812,-1.850979,5.290404,-5.763901,4.272031,-5.119873,-0.055285,8.000096,3.470629,3.691837,-4.322591,2.834814,-5.763809,-0.745897,7.867285,-6.835375,6.786954,2.815735,0.853936,-6.621889,4.876150,8.848681,8.514110,5.288833,-2.804113,-4.094980,5.585275,-7.564870,-4.815733,-8.051328,4.733551,3.700749,-8.235673,5.697235,-7.371284,-0.361629,6.226184,5.552497,-5.773846,9.497412,-4.502510,-7.529992,8.472204,9.910011,5.859363,5.336281,5.202490,9.446817,6.725090,0.762406,-6.419575,3.169043,9.240750,-0.091110,3.637201,-0.237671,5.451197,7.843696,5.324627,-4.071743,8.357201,0.934139,-2.694879,-8.828459,-0.237419,6.791760,1.982657,-4.973237,-3.055993,-5.178721,-1.059012,1.720651,6.222875,-7.153507,7.326011,7.372573,9.768877,4.337461,5.156954,0.950914,2.590876,-8.175655,-0.181348,9.189794,1.847379,-4.328049,4.957817,-6.672759,6.148928,3.274088,8.300413,5.672836,-8.948903,0.590221,-9.950053,6.494309,2.416077,-9.221101,-7.988774,-2.725887,7.477864,6.914967,-3.827718,-3.908728,-4.105979,2.571613,-3.246609,-0.347270,4.609373,7.721209,7.936308,-0.508450,-0.385782,-3.028551,-5.277624,9.479487,2.548013,-4.776638,-1.534266,0.139423,8.994502,-1.527582,1.423154,-3.102619,-2.272404,-5.949239,-0.549287,0.033260,6.302619,9.371554,-1.640361,-1.457245,3.739064,-8.308144,4.807938,-8.005160,-2.676286,-7.570078,-2.792290,-3.991509,-5.781469,-6.649347,5.494308,-5.205564,8.542491,0.027654,-8.384283,7.490995,-9.928690,2.592797,-4.526185,-5.895517,-5.556339,-3.444414,9.346811,-6.422506,-0.892612,-8.603028,-7.691733,-2.668520,-6.706578,2.022411,1.349509,-5.870119,-2.505427,6.312725,-1.959251,3.375425,7.581178,9.023008,8.304954,-3.013103,-7.669318,5.530962,1.670946,-1.898222,6.417826,-4.644802,-7.974062,0.203597,-6.656109,5.617774,-8.652222,-8.045580,1.591527,7.505815,2.647991,-8.702564,-1.486377,-1.591720,1.284789,-4.183706,-3.620700,-7.311153,7.681059,-9.190575,-0.728651,-8.153129,-3.715554,-2.040900,-4.699237,-0.911277,-5.321255,2.769391,2.812511,-3.251454,-8.594004,7.950688,-9.665462,-5.519307,2.198230,3.685207,-5.994651,2.451199,-9.620866,-9.877155,3.294016,-2.722587,8.907132,-0.964033,7.732988,-7.645303,7.785568,6.307890,9.924319,-4.364592,-1.182901,-1.411752,7.529041,9.857232,-9.002632,2.785081,5.878409,1.080168,6.800325,7.787998,-8.972473,6.614493,7.327755,1.518331,-3.387575,-6.268919,-7.857394,1.768711,-3.474545,1.034475,6.686407,-8.376881,0.500303,2.771345,4.210204,8.158822,-5.943861,-2.198973,0.303851,-1.904673,7.619049,-1.924695,-5.773429,1.246365,3.171662,8.020065,7.853904,5.763230,5.746787,-3.038412,2.432104,-1.166567,-8.116083,3.994727,1.795235,4.330729,-8.441224,-8.638237,0.233500,1.830592,-8.155489,4.897178,-3.694365,-9.569649,-4.174201,5.399709,5.982102,0.586353,-8.663202,2.589859,7.302364,-8.451798,1.863126,-7.680978,-8.215927,1.597182,-4.460837,7.824805,1.378910,-8.561668,-7.656752,1.688858,5.123433,5.330749,3.242914,1.597407,9.942226,3.296382,-9.197906,7.575283,0.995371,-7.852256,-2.671243,6.732826,1.585306,2.567432,7.900586,3.120354,4.971668,-4.835264,-2.588024,4.085666,5.916978,-3.454477,-3.420850,-5.741084,-7.187518,6.190293,-7.040882,-7.425052,-4.770997,3.249445,-1.810543,0.128854,1.903043,-7.683125,2.141755,0.560898,-1.620121,1.837685,-1.883207,0.534290,-8.910199,5.954803,9.183096,-5.115138,2.921614,7.318775,4.838648,9.798147,-6.386485,-5.277698,-1.534864,-7.459339,1.117459,2.171480,1.650951,-2.173566,-1.162025,5.442381,4.932805,0.681444,3.053452,-7.811751,0.844075,-2.807682,0.452819,-7.542581,-8.443758,1.422084,-3.732313,4.134714,8.146867,4.027122,9.780247,0.278903,-0.743561,5.628692,0.927595,-9.816241,-5.503616,-6.835190,6.892572,7.459298,8.004386,4.663565,9.011281,2.888109,-2.052606,-0.903859,1.354493,-7.073782,7.799399,-8.660678,6.591249,9.213642,2.398456,-0.523698,-3.937288,-5.518463,-9.161255,3.397490,7.162565,-3.829656,0.099126,3.415753,-4.870206,8.536156,-7.532600,-1.504234,-7.726058,5.358420,2.357297,2.700317,1.126077,5.454931,6.597776,0.602284,4.647187,9.790509,8.477618,-8.799480,-5.427470,0.184664,4.303737,8.961406,4.305844,3.119407,-0.521394,7.118222,-0.278230,2.820068,9.604730,-1.737075,-0.881636,-7.463953,0.683328], dtype = "float32")#candidate|6668|(675,)|const|float32
const_6669 = relay.const([-7.393761,-7.736437,7.163560,-1.354172,-3.494749,3.461460,-6.197572,-7.957189,-1.671647,-9.837216,-9.529113,-0.927478,-1.152072,7.543990,6.591385,-6.077188,1.191979,1.425289,1.300591,4.349106,-4.662497,7.473939,7.525937,-4.879083,1.641564,-8.364338,1.022255,-8.764193,-5.989262,6.725950,9.319453,0.079005,-4.335636,-4.520777,-0.859760,1.548458,-5.804935,6.265478,-3.668365,4.586938,4.913056,-3.780398,-9.755664,-9.895431,-0.424852,5.476968,-6.617466,7.836735,7.917327,-4.322372,1.517243,4.418829,-7.715962,0.501765,-4.775074,-1.807353,6.813082,6.008735,-7.174519,-8.124239,5.881048,-8.829220,1.937945,0.367413,1.950207,-9.607562,7.529294,4.421970,3.558315,8.993796,1.682747,8.123094,-0.238945,1.839904,-4.638173,6.959047,1.681691,2.043962,7.727669,6.903915,-9.523158,-0.698045,9.399325,0.965841,-0.658399,2.492368,0.429298,-2.994389,0.461111,-9.199937,-5.197996,4.237021,7.593885,-3.840252,8.082375,-8.315152,1.681075,-9.961779], dtype = "float64")#candidate|6669|(98,)|const|float64
var_6670 = relay.var("var_6670", dtype = "int64", shape = (1500,))#candidate|6670|(1500,)|var|int64
call_6666 = relay.TupleGetItem(func_3444_call(relay.reshape(var_6667.astype('int8'), [8, 5, 9]), relay.reshape(const_6668.astype('float32'), [675,]), relay.reshape(const_6669.astype('float64'), [7, 14]), relay.reshape(var_6670.astype('int64'), [1500,]), ), 0)
call_6671 = relay.TupleGetItem(func_3450_call(relay.reshape(var_6667.astype('int8'), [8, 5, 9]), relay.reshape(const_6668.astype('float32'), [675,]), relay.reshape(const_6669.astype('float64'), [7, 14]), relay.reshape(var_6670.astype('int64'), [1500,]), ), 0)
uop_6680 = relay.erf(uop_6660.astype('float64')) # shape=(14, 4, 6)
output = relay.Tuple([call_6654,call_6666,var_6667,const_6668,const_6669,var_6670,uop_6680,])
output2 = relay.Tuple([call_6655,call_6671,var_6667,const_6668,const_6669,var_6670,uop_6680,])
func_6691 = relay.Function([var_6650,var_6667,var_6670,], output)
mod['func_6691'] = func_6691
mod = relay.transform.InferType()(mod)
var_6692 = relay.var("var_6692", dtype = "float32", shape = (14, 4, 6))#candidate|6692|(14, 4, 6)|var|float32
var_6693 = relay.var("var_6693", dtype = "int8", shape = (360,))#candidate|6693|(360,)|var|int8
var_6694 = relay.var("var_6694", dtype = "int64", shape = (1500,))#candidate|6694|(1500,)|var|int64
output = func_6691(var_6692,var_6693,var_6694,)
func_6695 = relay.Function([var_6692,var_6693,var_6694,], output)
mutated_mod['func_6695'] = func_6695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5432_call = mod.get_global_var('func_5432')
func_5434_call = mutated_mod.get_global_var('func_5434')
call_6735 = func_5432_call()
call_6736 = func_5432_call()
uop_6756 = relay.exp(call_6735.astype('float64')) # shape=(1, 5, 16)
uop_6758 = relay.exp(call_6736.astype('float64')) # shape=(1, 5, 16)
output = uop_6756
output2 = uop_6758
func_6770 = relay.Function([], output)
mod['func_6770'] = func_6770
mod = relay.transform.InferType()(mod)
output = func_6770()
func_6771 = relay.Function([], output)
mutated_mod['func_6771'] = func_6771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4877_call = mod.get_global_var('func_4877')
func_4879_call = mutated_mod.get_global_var('func_4879')
call_6775 = func_4877_call()
call_6776 = func_4877_call()
output = relay.Tuple([call_6775,])
output2 = relay.Tuple([call_6776,])
func_6794 = relay.Function([], output)
mod['func_6794'] = func_6794
mod = relay.transform.InferType()(mod)
output = func_6794()
func_6795 = relay.Function([], output)
mutated_mod['func_6795'] = func_6795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4920_call = mod.get_global_var('func_4920')
func_4922_call = mutated_mod.get_global_var('func_4922')
call_6832 = func_4920_call()
call_6833 = func_4920_call()
func_4978_call = mod.get_global_var('func_4978')
func_4981_call = mutated_mod.get_global_var('func_4981')
var_6841 = relay.var("var_6841", dtype = "float32", shape = (396,))#candidate|6841|(396,)|var|float32
call_6840 = relay.TupleGetItem(func_4978_call(relay.reshape(var_6841.astype('float32'), [396,])), 3)
call_6842 = relay.TupleGetItem(func_4981_call(relay.reshape(var_6841.astype('float32'), [396,])), 3)
uop_6845 = relay.asin(call_6832.astype('float64')) # shape=(1, 5, 16)
uop_6847 = relay.asin(call_6833.astype('float64')) # shape=(1, 5, 16)
func_5380_call = mod.get_global_var('func_5380')
func_5387_call = mutated_mod.get_global_var('func_5387')
var_6849 = relay.var("var_6849", dtype = "float32", shape = (1120,))#candidate|6849|(1120,)|var|float32
const_6850 = relay.const([[-8.071578,-9.107789,-5.178467,-0.292853,8.632289,9.474628,-1.220316,9.701235,7.187365,5.131947,-1.557162,4.637982,2.270218,-8.534270,9.921919,-8.854011,1.608808,5.169616,3.477419,0.030429,-7.922801,5.352063,9.334474,-0.039955,-3.193889,-9.495775,3.664485,-8.143731,-2.711775,0.993798,-4.319447,-5.434129,-8.120065,6.154493,1.533667,-0.862545,-0.778294,-7.868760,-7.916641,-5.271304,1.624304,-0.860434,-6.008691,3.337459,4.440542,-1.607938,-6.233769,1.059043,-6.516285,-8.336650,-6.375322,-9.746613,-8.746582,-0.153179,9.782407,8.167387,5.873478,-0.295428,-9.066962,-4.128840,-5.302233,-0.720358,6.998903,1.825427,-1.601658,-8.720587,-7.990641,1.209552,7.112009,-5.605671,-6.598738,9.072384]], dtype = "float32")#candidate|6850|(1, 72)|const|float32
const_6851 = relay.const([-1.441590,2.011649,-1.050557,6.041130,8.834125,-5.982933,8.701838,-2.135272,6.614743,-8.824640,9.007689,7.477534,7.171694,5.747331,-2.247992,-6.343896,3.721294,2.470483,7.701007,5.326789,8.174843,8.107607,-7.118191,0.104025,1.553533,3.912063,-0.076266,0.194633,0.549187,-3.558171,6.700715,-0.178312,-2.252417,1.543817,6.624958,-4.770376,-1.074820,0.090271,-2.145482,-9.460610,-9.260150,-0.602559,-4.875020,-3.274134,8.613367,-0.204654,-1.015490,5.484839,-9.850947,-5.917370,3.013236,1.465591,-0.902696,7.670505,2.803953,5.902112,3.437372,-8.626347,2.226750,3.357469,7.260654,8.377649,3.441023,-1.671877,3.464581,7.520337,6.368886,-5.390047,6.557830,-9.149943,4.140524,-7.229414,-4.483867,0.024314,-8.191687,-7.232395,-8.161472,4.132627], dtype = "float64")#candidate|6851|(78,)|const|float64
const_6852 = relay.const([6,-6,-7,-2,10,-4,9,9,-2,1,-3,6,7,4,-10,-5,-1,7,3,-1,-1,7,1,-7,7,8,-6,5,-6,-9,7,1,6,-8,-9,9,-5,9,6,-6,-5,2,-1,-7,7,-1,2,4,10,-5,2,1,4,-3,10,-5,6,-6,-6,1,-9,-10,6,8,-8,7,1,-7,-1,-7,-2,4,4,6,-3,3,-1,4,9,-5,7,6,1,-2,8,1,-4,9,-7,7,-1,-3,-5,10,-10,-10,-9,4,-2,2,6,9,2,-9,2,-10,-8,5,-1,9,2,-6,-6,2,-7,-7,10,4,-5,-1,-10,-9,-4,-4,-1,-4,-10,5,3,3,2,2,7,3,10,8,3,-8,4,-1,3,-10,-8,-1,4,8,4,-9,-9,-3,-6,-10,-8,7,-2,-9,-4,10,-5,2,4,5,-3,1,5,-10,4,-2,-10,-6,-7,-9,-3,-2,9,6,-7,3,5,9,-7,3,-3,-6,3,-5,-7,1,3,-6,9,-8,-5,6,3,4,-8,-1,-3,4,-9,6,5,-5,3,3,-7,10,-9,4,4,2,-6,-1,-10,-4,-5,-4,-8,-1,2,4,-4,-1,-1,-7,-4,6,-1,-6,-1,-9,-1,-9,2,9,-3,-1,-9,9,9,4,-2,1,7,-4,8,-7,4,9,5,10,-2,2,-5,-1,7,-8,-6,-4,-8,3,2,8,-5,4,4,-5,-8,6,-10,-10,2,9,8,-3,2,6,-6,-1,-9,1,10,-10,7,-2,2,-5,1,-6,-9,-9,5,-6,10,-3,4,-4,2,-3,-1,5,8,-10,5,-9,-7,5,6,4,-9,-6,-1,-7,6,9,6,1,-5,2,8,-2,2,6,7,1,-9,8,9,2,-7,3,6,-5,4,8,-1,-7,-8,-8,-7,2,9,-5,-7,-6,-9,-6,-10,5,-2,-7,5,-5,-1,9,-3,-1,1,3,-2,-2,5,-5,1,-2,-4,6,-5,2,4,-1,2,-1,9,-3,-10,-1,3,1,-3,-8,2,-6,-5,-2,-4,9,-8,-1,4,-7,8,-1,-3,8,-7,-4,-10,-7,-1,-5,-3,-10,-5,-5,4,-5,-1,5,1,9,10,9,4,-7,3,9,-8,-7,10,4,-6,-8,5,9,9,-6,-1,-10,-10,-7,1,-1,5,-4,9,-8,-8,4,-2,-1,-2,9,-3,6,8,-8,-1,9,-6,2,-2,-4,9,-4,-10,-1,6,-6,10,6,-9,-6,5,8,-10,-1,-1,3,-3,-10,-5,-7,-2,2,7,10,4,8,-3,1,7,6,-6,-7,-9,2,-9,-7,-2,-4,8,-6,-2,-10,-1,8,4,5,4,-9,-10,-9,1,-9,-6,3,7,-6,4,-3,8,2,-7,4,-10,6,-5,6,-2,1,7,2,3], dtype = "int64")#candidate|6852|(525,)|const|int64
call_6848 = relay.TupleGetItem(func_5380_call(relay.reshape(var_6849.astype('float32'), [1120,]), relay.reshape(const_6850.astype('float32'), [72,]), relay.reshape(const_6851.astype('float64'), [13, 2, 3]), relay.reshape(call_6840.astype('float32'), [396,]), relay.reshape(const_6852.astype('int64'), [525,]), ), 2)
call_6853 = relay.TupleGetItem(func_5387_call(relay.reshape(var_6849.astype('float32'), [1120,]), relay.reshape(const_6850.astype('float32'), [72,]), relay.reshape(const_6851.astype('float64'), [13, 2, 3]), relay.reshape(call_6840.astype('float32'), [396,]), relay.reshape(const_6852.astype('int64'), [525,]), ), 2)
uop_6872 = relay.log2(uop_6845.astype('float32')) # shape=(1, 5, 16)
uop_6874 = relay.log2(uop_6847.astype('float32')) # shape=(1, 5, 16)
output = relay.Tuple([call_6840,var_6841,call_6848,var_6849,const_6850,const_6851,const_6852,uop_6872,])
output2 = relay.Tuple([call_6842,var_6841,call_6853,var_6849,const_6850,const_6851,const_6852,uop_6874,])
func_6875 = relay.Function([var_6841,var_6849,], output)
mod['func_6875'] = func_6875
mod = relay.transform.InferType()(mod)
mutated_mod['func_6875'] = func_6875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6875_call = mutated_mod.get_global_var('func_6875')
var_6877 = relay.var("var_6877", dtype = "float32", shape = (396,))#candidate|6877|(396,)|var|float32
var_6878 = relay.var("var_6878", dtype = "float32", shape = (1120,))#candidate|6878|(1120,)|var|float32
call_6876 = func_6875_call(var_6877,var_6878,)
output = call_6876
func_6879 = relay.Function([var_6877,var_6878,], output)
mutated_mod['func_6879'] = func_6879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5432_call = mod.get_global_var('func_5432')
func_5434_call = mutated_mod.get_global_var('func_5434')
call_6915 = func_5432_call()
call_6916 = func_5432_call()
func_5653_call = mod.get_global_var('func_5653')
func_5654_call = mutated_mod.get_global_var('func_5654')
call_6918 = relay.TupleGetItem(func_5653_call(), 0)
call_6919 = relay.TupleGetItem(func_5654_call(), 0)
output = relay.Tuple([call_6915,call_6918,])
output2 = relay.Tuple([call_6916,call_6919,])
func_6927 = relay.Function([], output)
mod['func_6927'] = func_6927
mod = relay.transform.InferType()(mod)
mutated_mod['func_6927'] = func_6927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6927_call = mutated_mod.get_global_var('func_6927')
call_6928 = func_6927_call()
output = call_6928
func_6929 = relay.Function([], output)
mutated_mod['func_6929'] = func_6929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6975 = relay.var("var_6975", dtype = "float64", shape = (2, 2, 11))#candidate|6975|(2, 2, 11)|var|float64
var_6976 = relay.var("var_6976", dtype = "float64", shape = (2, 2, 11))#candidate|6976|(2, 2, 11)|var|float64
bop_6977 = relay.mod(var_6975.astype('float64'), relay.reshape(var_6976.astype('float64'), relay.shape_of(var_6975))) # shape=(2, 2, 11)
func_3339_call = mod.get_global_var('func_3339')
func_3344_call = mutated_mod.get_global_var('func_3344')
const_6981 = relay.const([-7.228895,4.820133,4.253163,-3.181593,6.675216,-2.893420,1.655682,2.813225,-1.398783], dtype = "float32")#candidate|6981|(9,)|const|float32
var_6982 = relay.var("var_6982", dtype = "float32", shape = (675,))#candidate|6982|(675,)|var|float32
const_6983 = relay.const([3.083402,2.413525,-7.285841,0.289053,4.896856,-9.121065,-9.267917,-3.264722,-3.585662,-6.313299,-5.676163,7.889331,9.004134,-3.057061,-5.750429,2.511146,5.045072,2.381648,-1.228511,7.400131,5.488461,-5.464715,-9.556896,-1.387976,-4.388536,-2.906122,4.609232,8.670462,-0.058646,-5.171861,2.094487,-7.566828,-5.060058,-3.599973,-9.603702,-0.743103,-6.696451,-2.686612,8.803884,4.491122,4.840382,-3.993731,0.256258,8.470240,5.048157,-7.575547,-0.807208,7.937058,-9.353668,5.686294,-9.406112,1.962079,-9.218050,5.856506,-7.222966,5.608244,-9.075337,5.082111,0.027861,7.775889,-7.182240,1.105526,0.074345,5.289682,8.867777,-1.566854,-8.405373,-3.332586,0.634676,-7.930300,-9.308418,-0.483181,1.344104,-0.323837,-0.399384,5.088832,4.289330,1.005938,-5.239561,-4.662340,-2.233446,8.924447,-6.011717,5.972116,7.124488,-8.092664,-0.905264,-0.141207,-9.072829,-1.475851,2.477960,2.454784,2.787137,7.689177,0.592700,7.470977,-4.564267,-7.389015], dtype = "float64")#candidate|6983|(98,)|const|float64
call_6980 = relay.TupleGetItem(func_3339_call(relay.reshape(const_6981.astype('float32'), [1, 1, 9]), relay.reshape(var_6982.astype('float32'), [5, 15, 9]), relay.reshape(const_6983.astype('float64'), [98,]), ), 2)
call_6984 = relay.TupleGetItem(func_3344_call(relay.reshape(const_6981.astype('float32'), [1, 1, 9]), relay.reshape(var_6982.astype('float32'), [5, 15, 9]), relay.reshape(const_6983.astype('float64'), [98,]), ), 2)
func_6875_call = mod.get_global_var('func_6875')
func_6879_call = mutated_mod.get_global_var('func_6879')
const_7000 = relay.const([-4.249051,-3.474002,-8.337759,-7.560272,-9.854370,-1.083507,5.910943,-7.609605,-5.443387,-1.404676,0.354603,5.523898,9.802920,-1.534060,7.527055,-2.915091,-1.874139,2.281697,-0.378720,-2.245873,-4.995118,6.522462,9.180687,9.158087,1.622086,8.839130,-3.575316,-6.693322,-2.830304,2.387194,-5.172620,4.178040,-1.313555,9.336922,-6.790926,7.412780,-8.590050,-6.559055,-7.389343,-5.318178,8.083135,-6.949053,-2.944002,1.828874,6.845103,-7.538981,-1.632937,8.225484,-0.953719,5.727788,-0.249992,7.443703,7.030360,-1.404727,-3.877901,4.654853,-9.450057,7.464393,-8.194932,1.921899,1.520785,1.901821,0.734645,-5.840590,2.936189,-4.139783,4.226939,7.384447,9.269702,-2.639183,-9.432142,6.738442,-1.129977,0.081709,7.644821,-1.978662,-6.160460,-8.340788,-5.457451,6.410075,-8.655446,-2.400467,-7.802737,-3.255287,8.246759,5.464100,8.280980,1.820542,5.566377,-7.840656,5.629977,-2.925297,3.495512,-9.180911,5.208476,6.440130,4.505036,9.861056,1.137974,-5.859685,4.712939,-3.915808,-1.553232,-0.332316,-6.319754,3.587365,1.530271,6.423001,-8.990078,7.155995,-9.901797,-5.460970,-1.586838,2.536960,0.885625,-8.178417,5.267321,5.788648,-8.915513,6.242024,2.700068,5.502617,-6.954769,3.178759,-9.794235,2.188214,4.593093,-2.490873,5.312735,-2.256193,9.604955,6.498294,5.634723,4.297239,-2.874012,9.514972,3.014970,8.683034,4.347433,-4.799573,6.405598,-7.879087,1.397326,-1.741986,-0.624741,-5.432465,0.978963,-9.528986,-5.338766,8.886897,7.192746,-4.878455,6.499638,-5.012651,-8.246803,-4.040576,-4.784022,8.978064,6.277977,6.887786,-1.956130,-5.396045,4.225228,-9.257464,-8.755966,6.948067,-9.277471,-5.439746,0.319530,2.643283,7.046518,1.972157,-7.122486,-4.744047,-3.391935,-1.551890,2.852321,-1.876530,0.334804,-0.985012,-8.672308,9.805083,-6.461259,-7.877401,0.158665,9.436096,7.834615,-2.612020,2.407086,-5.458308,-8.140004,-6.694657,8.571168,1.871126,-5.333231,-0.934922,5.694957,7.578126,5.371287,4.921885,1.959724,9.596428,6.989942,1.588060,-3.698446,-4.714354,-3.606283,-3.908649,4.386139,-2.744313,-1.660392,3.025364,9.466794,2.351260,-4.451809,1.946659,9.233760,1.794467,-6.921466,-7.155781,-9.233579,-7.623851,6.799734,-7.078098,-6.284177,-2.378935,6.756712,-3.124166,0.548005,9.547017,-1.500853,2.472248,5.313624,-9.173805,2.852790,8.503280,1.560820,-9.124005,-2.694753,4.064208,-0.505346,6.764718,0.656889,-5.264832,8.417216,3.536963,-7.149357,-1.539191,8.478362,9.440679,7.342697,-5.346394,-8.364188,9.156578,3.114588,6.113143,2.657047,6.054833,-6.987829,7.611043,6.099792,0.028481,1.795537,0.380328,-4.506034,-2.196627,4.193621,-8.069321,0.458457,5.610886,0.114020,-1.607204,4.577658,4.615240,5.343819,-0.360835,0.102066,-9.196048,5.378194,6.327782,1.314255,8.721656,-0.629994,-9.596387,3.086459,-4.942626,5.162280,9.439078,-2.550803,-7.258107,3.097957,-4.742911,6.504517,-5.323393,0.417183,-8.015811,4.724329,9.741984,-4.695860,8.404271,6.031300,-4.063807,8.951904,-1.178145,-9.316890,6.714331,2.783258,6.625298,8.125476,4.390464,7.579289,9.159157,7.516379,6.995817,-1.673942,0.445384,-2.509708,-8.051033,-6.129058,-8.488397,-6.583492,-8.483788,5.358806,-5.240019,3.754414,1.727361,2.306432,2.646802,-1.828414,-9.815131,-8.091957,-8.370581,8.034210,-4.022211,8.098861,2.951513,-1.153825,2.235338,0.557705,-4.766663,5.888292,4.146609,-4.276447,9.987703,7.897929,-4.367744,-8.465279,1.146503,0.488769,4.809212,-1.911869,-8.496546,-5.225982,-9.003448,0.410978,8.599963,9.557115,-1.094455,3.805323,-7.516164,7.227920,-5.543209,8.129575,-1.200565,3.788182,-3.970975,-4.274935,8.007388,-9.308940,-4.803183,-5.813867,9.633060,-7.351329,-8.619778,0.064588,3.848847,9.390576,-1.923535,1.829293,4.756237,-2.164963,-2.903440,1.888433,-4.972812,6.533713,2.348395,-7.220563,6.476877,-0.749410,-9.758481,-2.453960,5.947358,-6.113979,3.469633,-5.628878,-6.277844], dtype = "float32")#candidate|7000|(396,)|const|float32
var_7001 = relay.var("var_7001", dtype = "float32", shape = (1120,))#candidate|7001|(1120,)|var|float32
call_6999 = relay.TupleGetItem(func_6875_call(relay.reshape(const_7000.astype('float32'), [396,]), relay.reshape(var_7001.astype('float32'), [1120,]), ), 3)
call_7002 = relay.TupleGetItem(func_6879_call(relay.reshape(const_7000.astype('float32'), [396,]), relay.reshape(var_7001.astype('float32'), [1120,]), ), 3)
uop_7010 = relay.sinh(bop_6977.astype('float32')) # shape=(2, 2, 11)
uop_7026 = relay.log10(uop_7010.astype('float64')) # shape=(2, 2, 11)
func_4785_call = mod.get_global_var('func_4785')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_7039 = relay.TupleGetItem(func_4785_call(), 0)
call_7040 = relay.TupleGetItem(func_4787_call(), 0)
func_5774_call = mod.get_global_var('func_5774')
func_5775_call = mutated_mod.get_global_var('func_5775')
call_7043 = func_5774_call()
call_7044 = func_5774_call()
func_5035_call = mod.get_global_var('func_5035')
func_5037_call = mutated_mod.get_global_var('func_5037')
call_7045 = relay.TupleGetItem(func_5035_call(), 0)
call_7046 = relay.TupleGetItem(func_5037_call(), 0)
func_5380_call = mod.get_global_var('func_5380')
func_5387_call = mutated_mod.get_global_var('func_5387')
var_7048 = relay.var("var_7048", dtype = "float32", shape = (72,))#candidate|7048|(72,)|var|float32
var_7049 = relay.var("var_7049", dtype = "float64", shape = (78, 1))#candidate|7049|(78, 1)|var|float64
const_7050 = relay.const([-1,7,-7,-2,-2,-10,1,4,-6,-3,3,-3,-4,-3,5,-7,2,-2,-3,-7,7,-9,-3,-10,-9,9,-5,-8,-7,-9,4,7,-10,-6,7,-7,1,1,-8,5,7,9,6,1,10,-6,-8,10,-3,-2,-10,-3,6,6,-8,-9,-7,-7,6,8,1,-2,-6,8,1,-10,-10,3,-8,8,-4,-10,-5,-5,6,9,-9,6,-5,5,-4,-6,-7,-8,10,10,5,6,-9,-3,4,2,-2,9,5,-3,8,-1,10,9,-7,5,-8,-2,-10,2,6,1,4,-5,-3,-8,-10,5,2,10,-2,-1,-6,7,-5,-3,-7,-9,2,10,4,10,8,-4,1,10,-8,6,-4,-9,-4,-2,-5,-1,-6,-6,-10,-4,2,-3,-1,6,3,-3,-5,-10,7,1,2,10,-5,-8,-3,-7,10,9,10,1,7,4,6,-4,-5,-4,-7,5,-5,6,9,4,-3,1,10,9,-5,3,7,4,-2,-9,7,10,-10,9,-2,-7,5,8,-9,5,4,-5,3,2,-10,-4,-6,-8,-3,-4,-9,1,10,-1,8,4,2,-4,-1,-2,-7,9,-3,10,1,2,-8,5,-2,-10,10,4,-5,9,-5,8,-9,7,-3,9,-4,5,-4,1,-7,-8,-5,1,3,6,2,1,-5,5,-9,4,-5,-5,-1,7,-5,5,1,10,7,-3,-1,4,5,4,6,-5,-8,2,-7,7,5,-4,9,2,1,9,-10,-10,2,6,3,-9,-2,-4,1,4,5,-4,-3,2,-10,8,4,2,1,4,-9,-8,-7,3,4,-3,5,-3,2,2,4,1,-5,6,2,3,4,-4,4,6,-5,6,6,6,-3,-1,8,7,-8,-1,-2,4,8,6,7,9,-2,-10,4,-10,4,-6,-5,6,-7,-4,5,-4,5,-4,-5,-2,10,7,10,1,-9,8,3,7,-5,8,8,1,-3,6,10,4,2,5,1,7,4,-5,-1,6,5,4,-7,1,-1,-7,6,4,7,1,-5,9,6,-8,-10,3,-10,1,3,7,-8,9,-8,-4,-10,4,-7,-7,-6,-2,-1,4,-3,9,6,1,10,9,-3,-2,10,-10,-8,-10,4,-3,-8,-6,-1,-8,-9,-2,-1,7,-4,8,-5,-10,5,-9,5,-2,6,-3,-3,3,-2,-10,-6,6,8,-3,-10,5,-7,4,6,-7,6,-9,-3,-2,7,-7,-1,-2,-6,-1,2,-4,2,-2,-8,1,9,4,2,6,-1,4,-5,-10,-3,-9,-1,-5,5,-1,8,-6,2,8,9,5,6,-10,8,-4,-5,8,-10,-6,2,-7,-9,-7,6,-5,9,2,1,-8,6,-10,9,-4,2,-3,9,-5,4,7,9,-2,4,-8,8,2,10,-4,1], dtype = "int64")#candidate|7050|(525,)|const|int64
call_7047 = relay.TupleGetItem(func_5380_call(relay.reshape(call_6999.astype('float32'), [1120,]), relay.reshape(var_7048.astype('float32'), [72,]), relay.reshape(var_7049.astype('float64'), [13, 2, 3]), relay.reshape(const_7000.astype('float32'), [396,]), relay.reshape(const_7050.astype('int64'), [525,]), ), 2)
call_7051 = relay.TupleGetItem(func_5387_call(relay.reshape(call_6999.astype('float32'), [1120,]), relay.reshape(var_7048.astype('float32'), [72,]), relay.reshape(var_7049.astype('float64'), [13, 2, 3]), relay.reshape(const_7000.astype('float32'), [396,]), relay.reshape(const_7050.astype('int64'), [525,]), ), 2)
output = relay.Tuple([call_6980,const_6981,var_6982,const_6983,call_6999,const_7000,var_7001,uop_7026,call_7039,call_7043,call_7045,call_7047,var_7048,var_7049,const_7050,])
output2 = relay.Tuple([call_6984,const_6981,var_6982,const_6983,call_7002,const_7000,var_7001,uop_7026,call_7040,call_7044,call_7046,call_7051,var_7048,var_7049,const_7050,])
func_7067 = relay.Function([var_6975,var_6976,var_6982,var_7001,var_7048,var_7049,], output)
mod['func_7067'] = func_7067
mod = relay.transform.InferType()(mod)
var_7068 = relay.var("var_7068", dtype = "float64", shape = (2, 2, 11))#candidate|7068|(2, 2, 11)|var|float64
var_7069 = relay.var("var_7069", dtype = "float64", shape = (2, 2, 11))#candidate|7069|(2, 2, 11)|var|float64
var_7070 = relay.var("var_7070", dtype = "float32", shape = (675,))#candidate|7070|(675,)|var|float32
var_7071 = relay.var("var_7071", dtype = "float32", shape = (1120,))#candidate|7071|(1120,)|var|float32
var_7072 = relay.var("var_7072", dtype = "float32", shape = (72,))#candidate|7072|(72,)|var|float32
var_7073 = relay.var("var_7073", dtype = "float64", shape = (78, 1))#candidate|7073|(78, 1)|var|float64
output = func_7067(var_7068,var_7069,var_7070,var_7071,var_7072,var_7073,)
func_7074 = relay.Function([var_7068,var_7069,var_7070,var_7071,var_7072,var_7073,], output)
mutated_mod['func_7074'] = func_7074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6031_call = mod.get_global_var('func_6031')
func_6032_call = mutated_mod.get_global_var('func_6032')
call_7121 = relay.TupleGetItem(func_6031_call(), 0)
call_7122 = relay.TupleGetItem(func_6032_call(), 0)
var_7133 = relay.var("var_7133", dtype = "float64", shape = (7, 5, 16))#candidate|7133|(7, 5, 16)|var|float64
bop_7134 = relay.left_shift(call_7121.astype('uint64'), var_7133.astype('uint64')) # shape=(7, 5, 16)
bop_7137 = relay.left_shift(call_7122.astype('uint64'), var_7133.astype('uint64')) # shape=(7, 5, 16)
output = bop_7134
output2 = bop_7137
func_7155 = relay.Function([var_7133,], output)
mod['func_7155'] = func_7155
mod = relay.transform.InferType()(mod)
mutated_mod['func_7155'] = func_7155
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7156 = relay.var("var_7156", dtype = "float64", shape = (7, 5, 16))#candidate|7156|(7, 5, 16)|var|float64
func_7155_call = mutated_mod.get_global_var('func_7155')
call_7157 = func_7155_call(var_7156)
output = call_7157
func_7158 = relay.Function([var_7156], output)
mutated_mod['func_7158'] = func_7158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6487_call = mod.get_global_var('func_6487')
func_6488_call = mutated_mod.get_global_var('func_6488')
call_7208 = relay.TupleGetItem(func_6487_call(), 0)
call_7209 = relay.TupleGetItem(func_6488_call(), 0)
output = relay.Tuple([call_7208,])
output2 = relay.Tuple([call_7209,])
func_7214 = relay.Function([], output)
mod['func_7214'] = func_7214
mod = relay.transform.InferType()(mod)
output = func_7214()
func_7215 = relay.Function([], output)
mutated_mod['func_7215'] = func_7215
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7242 = relay.var("var_7242", dtype = "float32", shape = (16, 4, 8))#candidate|7242|(16, 4, 8)|var|float32
uop_7243 = relay.tan(var_7242.astype('float32')) # shape=(16, 4, 8)
output = relay.Tuple([uop_7243,])
output2 = relay.Tuple([uop_7243,])
func_7246 = relay.Function([var_7242,], output)
mod['func_7246'] = func_7246
mod = relay.transform.InferType()(mod)
mutated_mod['func_7246'] = func_7246
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7247 = relay.var("var_7247", dtype = "float32", shape = (16, 4, 8))#candidate|7247|(16, 4, 8)|var|float32
func_7246_call = mutated_mod.get_global_var('func_7246')
call_7248 = func_7246_call(var_7247)
output = call_7248
func_7249 = relay.Function([var_7247], output)
mutated_mod['func_7249'] = func_7249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6550_call = mod.get_global_var('func_6550')
func_6552_call = mutated_mod.get_global_var('func_6552')
call_7254 = relay.TupleGetItem(func_6550_call(), 0)
call_7255 = relay.TupleGetItem(func_6552_call(), 0)
output = call_7254
output2 = call_7255
func_7259 = relay.Function([], output)
mod['func_7259'] = func_7259
mod = relay.transform.InferType()(mod)
output = func_7259()
func_7260 = relay.Function([], output)
mutated_mod['func_7260'] = func_7260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5653_call = mod.get_global_var('func_5653')
func_5654_call = mutated_mod.get_global_var('func_5654')
call_7261 = relay.TupleGetItem(func_5653_call(), 0)
call_7262 = relay.TupleGetItem(func_5654_call(), 0)
func_4877_call = mod.get_global_var('func_4877')
func_4879_call = mutated_mod.get_global_var('func_4879')
call_7270 = func_4877_call()
call_7271 = func_4877_call()
func_4785_call = mod.get_global_var('func_4785')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_7272 = relay.TupleGetItem(func_4785_call(), 0)
call_7273 = relay.TupleGetItem(func_4787_call(), 0)
bop_7274 = relay.multiply(call_7261.astype('int32'), relay.reshape(call_7270.astype('int32'), relay.shape_of(call_7261))) # shape=(1, 5, 16)
bop_7277 = relay.multiply(call_7262.astype('int32'), relay.reshape(call_7271.astype('int32'), relay.shape_of(call_7262))) # shape=(1, 5, 16)
var_7279 = relay.var("var_7279", dtype = "float64", shape = (9, 12, 9))#candidate|7279|(9, 12, 9)|var|float64
bop_7280 = relay.add(call_7272.astype('int64'), relay.reshape(var_7279.astype('int64'), relay.shape_of(call_7272))) # shape=(9, 12, 9)
bop_7283 = relay.add(call_7273.astype('int64'), relay.reshape(var_7279.astype('int64'), relay.shape_of(call_7273))) # shape=(9, 12, 9)
func_7067_call = mod.get_global_var('func_7067')
func_7074_call = mutated_mod.get_global_var('func_7074')
var_7295 = relay.var("var_7295", dtype = "float64", shape = (44,))#candidate|7295|(44,)|var|float64
var_7296 = relay.var("var_7296", dtype = "float32", shape = (675,))#candidate|7296|(675,)|var|float32
const_7297 = relay.const([[-4.901889,-9.259774,3.089241,-6.304433,3.637684,-1.751007,-6.719962,0.369055,-5.986965,6.926294,-0.855333,1.966670,6.895920,-2.906471,-1.707717,3.632012,7.982965,3.245686,3.929324,8.342429],[6.165693,-7.562735,0.529483,-5.225323,0.169416,-9.432385,1.390438,-4.767596,1.516131,-0.896301,-5.846146,-7.806811,-9.688766,0.868907,1.386545,-5.719747,-2.636213,-3.354851,-4.166171,0.189977],[-9.614265,9.903629,-1.809729,-5.555249,-2.103963,7.123194,-9.464514,-9.178316,0.848518,-4.754282,1.288472,4.136860,6.911006,6.971475,3.674899,-1.241763,-0.967540,0.988439,4.847641,-8.743359],[6.882386,-1.557271,5.180544,-4.040905,-5.826499,-2.790891,6.742439,-0.429575,2.499727,6.994180,-8.790286,8.655892,1.781061,8.189487,-7.401956,3.396410,5.238048,-1.257337,-0.095191,-0.513173],[0.584026,-4.919599,-4.709209,-6.205019,-3.203617,-5.252923,4.661423,-7.735123,2.633750,7.985112,5.118365,4.462422,-3.529612,-5.347345,-4.853154,-1.407944,7.150646,-7.799671,7.616354,5.107742],[-5.849465,-4.882282,3.559933,6.242082,4.754350,9.205576,9.303057,3.518520,-4.890558,-4.363777,-1.972950,-1.249806,-6.334182,-0.013579,3.206162,4.442825,1.652947,2.812398,-0.985879,2.443460],[9.600985,7.179809,0.952965,0.647490,-9.639717,-9.827737,-1.794492,-4.642227,-6.260751,-1.238966,-8.089633,5.749246,6.414495,6.730503,2.599934,6.603661,8.856754,8.007712,-9.905307,-5.482842],[0.791785,7.271298,9.160352,-1.027813,-8.934329,-9.639357,-3.764071,5.460298,-4.093236,-6.606864,1.376663,9.591006,-5.197624,-8.318136,4.025963,7.981184,2.072429,-4.352027,-1.190422,-7.820641],[2.958957,8.350032,4.519241,6.431282,0.948494,9.197327,-7.504487,7.118744,-4.948397,5.614566,-9.085961,-1.320144,1.906129,6.029190,2.019200,3.217177,-9.031071,-8.944981,1.395544,3.164647],[1.085057,5.292189,8.875485,-8.958084,-8.627771,0.368363,-4.091612,0.103910,-6.949248,9.720156,-9.107092,-4.519542,-3.980249,-5.247733,6.486777,-3.354512,9.839907,-2.681482,5.434499,-0.122127],[-9.222287,-6.330493,0.909823,-6.469748,-9.958480,8.112195,-9.431959,5.619935,-3.172364,-0.236864,-2.317111,6.373425,3.928034,-0.793738,-7.222999,-6.051217,2.581543,-9.373460,-5.553222,-7.933093],[-4.514681,-8.830906,-1.585983,1.610740,2.298747,-5.812276,8.431136,4.004634,1.006587,8.449920,-0.566290,-9.179120,-5.976467,-3.006676,6.746451,-0.112204,-0.784702,7.351387,-4.759400,-0.007747],[-6.859740,6.711953,-5.939772,-3.585916,8.281577,5.504496,-3.124272,4.164800,-8.873056,1.844065,-5.930756,-7.633942,-1.476184,4.877042,-4.706322,0.926039,-1.515185,-0.269634,5.202732,-6.824930],[-2.048225,9.792230,9.406528,-9.713191,-7.210955,-1.551876,3.963914,-5.433763,-1.516439,-5.421863,8.398213,5.932850,5.026502,-8.604451,2.869124,7.678297,-0.912091,-4.717391,3.920521,-2.563196],[-6.224497,-8.181758,0.637769,-4.462011,7.238626,-9.776441,-9.235139,-1.515399,-3.250254,-0.570948,-5.662157,8.260614,-3.338955,-9.827228,-5.524973,-8.984956,9.343344,-1.718700,4.010288,-1.968196],[-8.262173,7.921845,9.623930,-4.958122,-4.865887,6.121366,-9.652654,7.312042,-3.889882,-1.624789,-8.934276,6.509828,8.003557,-2.411395,-0.791416,9.183489,-4.308027,9.225605,9.354181,6.329694],[0.745865,-4.699545,5.176019,-5.009030,5.312451,2.671426,1.334438,-5.565913,-7.153026,4.950632,4.162890,7.577524,4.052692,1.327117,-6.525210,-6.382828,5.684700,2.321139,0.514928,-4.473717],[-9.306990,-6.965665,7.730787,4.173632,-5.352340,-3.326695,6.070316,4.811782,7.235732,8.557279,2.629494,8.995479,-2.097007,7.827885,-6.696369,2.094246,0.555788,0.249491,-5.530210,4.934423],[9.045132,-8.939264,8.875344,-4.016655,3.818536,6.488794,2.746371,9.229698,5.336810,2.584991,7.621777,5.380772,9.511878,4.298075,9.795279,-3.020876,-9.938116,6.310840,-6.793102,-6.890057],[-2.577486,-4.834385,-4.447999,9.576627,-3.760228,-3.927410,8.681004,2.216173,-7.785063,-0.207017,5.155829,-0.548722,-2.822551,4.143442,8.082897,-9.701155,7.002518,-3.645369,-2.350394,-9.055191],[-8.754060,-3.022230,-5.473853,-2.783483,-5.297133,-1.000198,8.292194,-2.636474,-3.758657,-1.478660,7.362325,6.978567,5.613470,5.230319,-1.100258,9.990934,-2.891403,-1.562819,3.833687,2.968493],[-2.711645,8.030781,-5.261861,4.264319,7.631205,0.192211,-7.949104,-2.311408,-2.459265,7.976184,3.745554,9.089360,7.675022,-3.519827,4.572414,-1.482066,1.047371,3.783008,8.230602,-3.918540],[1.097285,-3.499707,0.066237,9.570717,-1.273193,-5.377714,1.369727,3.902242,1.107595,5.508987,2.244453,-8.425350,5.603317,-4.451527,-2.155942,-4.856130,-9.540135,5.421511,0.727119,3.942909],[-8.136040,1.161592,-2.805286,-7.721938,-9.868650,-6.501114,0.768806,-0.347340,-1.770768,-7.540008,3.202120,-9.859361,5.839577,0.371430,3.683007,-0.489533,-2.713351,5.272995,-9.672193,2.394002],[-0.258668,-2.371639,-8.723950,-8.992200,8.394442,-0.287835,6.818381,6.637027,-8.193808,2.437304,8.329646,6.179866,8.813312,-6.375851,-4.356797,-5.949700,9.611995,0.387627,2.585207,7.173671],[-0.270350,-5.223959,-8.945746,-1.126624,-9.222164,-8.265774,5.886761,-4.153284,1.028599,-8.610276,-9.962763,-1.733013,0.803325,0.459301,2.113799,5.378462,-7.486857,-4.564871,9.847311,-1.066191],[-3.130412,-9.430179,-7.163412,3.742597,6.301101,-9.808026,-2.861459,-8.224453,-1.190957,4.790648,-2.866682,5.385112,-1.999577,0.135846,-5.902254,9.469647,5.461198,-9.332507,-2.560673,3.698961],[0.602918,0.986676,-6.358532,2.967700,-3.013806,-1.324018,2.326740,8.722323,4.783568,-8.982887,-9.758762,1.229769,3.451807,-6.106763,8.502076,6.022518,7.637463,-2.000476,-1.289849,-3.603179],[-1.839562,4.073520,-9.730550,4.171996,-9.761925,2.162206,-7.939113,-7.959493,-6.670880,7.166124,-4.321407,-1.679854,-9.206520,1.026928,-2.730746,2.134410,-2.808905,-6.893675,9.607420,4.733262],[1.168759,6.064428,1.233889,8.863599,-2.116969,8.983231,-7.733622,-7.571223,-4.342283,1.763849,0.239295,-5.520046,-3.939487,-7.363881,-9.067964,2.565899,-0.933536,9.264175,-1.236836,9.208112],[-7.897566,9.055605,-0.794391,8.089333,7.857674,9.122854,7.722167,-6.510878,-0.565227,3.340449,-9.742469,8.789740,5.356753,-0.966800,5.710922,-8.186397,-0.689472,-9.513794,6.358258,-1.600146],[1.750540,6.025030,3.804518,-4.414201,-5.059266,-6.998140,-2.812824,4.823915,3.508049,9.425181,2.627666,-3.356314,5.726399,-6.570133,-4.521969,8.522436,-6.723593,-9.379738,-3.332752,-5.379342],[-3.778132,-1.832742,-4.950137,6.256159,3.506720,-9.795894,-2.556317,5.334835,-7.050570,0.840225,-9.414961,-0.530857,7.077507,-3.463213,0.402936,4.111260,0.397208,-7.670722,1.697570,1.160550],[-9.521827,-5.613508,-3.269846,-1.588165,4.129306,7.015120,-2.014877,0.977463,-4.392786,9.904049,-9.893622,-9.607442,-4.938637,9.003032,-1.580183,4.732435,-4.812712,0.826816,5.382252,3.462058],[0.657822,-5.128166,-8.228217,-0.414212,9.523061,-5.401113,-7.157105,2.808292,3.910745,-3.082651,-3.076140,-3.942725,7.475662,8.719857,4.275589,-1.181701,-3.026009,-0.238989,-8.346028,3.352154],[9.425079,6.721454,-8.952264,-3.018148,5.191144,6.878358,-4.084055,-9.299683,-4.423086,-7.563215,3.308502,-5.515307,4.462133,-4.182770,0.336931,5.875132,-4.179209,-9.195398,-4.680978,-5.538283],[-3.021422,4.239198,-8.706289,-9.149781,3.229922,-6.321457,1.745293,-2.145008,-4.717799,-0.437291,3.767725,-7.709336,-5.581264,-6.588098,2.563643,-5.358589,8.846030,5.499705,-0.905921,-9.042571],[-7.648879,-9.674585,3.350089,1.613170,1.240333,-5.249625,0.042700,-7.726050,5.340407,-1.224024,-9.526411,-7.781962,-1.200554,3.709930,-3.297463,4.141904,-1.258744,-9.366923,-1.231116,6.522238],[-6.484406,-3.776713,-8.829893,1.648118,-4.598508,4.190549,2.334469,-7.817934,5.520983,-1.429655,4.348189,-8.679258,9.029058,1.187909,-3.531183,8.358840,-5.658691,6.726523,7.653343,5.594218],[-3.036166,-2.078709,-8.472859,-1.309959,-7.118645,4.747122,-6.264585,0.345738,2.218406,6.656556,-2.184139,-1.813404,8.623633,5.057108,-7.765802,-5.450869,6.355488,-1.481639,5.503817,0.441461],[3.624766,4.933197,5.464314,3.379853,7.221508,-3.839424,-6.467611,5.459544,-7.706736,-8.296539,3.016681,-1.788425,4.398834,-0.648173,8.961305,-3.411244,8.812895,-7.343869,-6.057865,7.972969],[-7.408194,8.411454,-5.560881,-5.202400,-8.497329,1.680415,8.543174,-8.169200,6.451673,0.871259,5.177530,4.045718,3.284023,1.277706,-3.734198,-0.341191,-4.724595,0.496899,-5.715909,-2.248286],[-4.750280,-5.008283,5.958879,-2.239258,9.599565,6.165489,9.511120,5.055763,-1.192010,-1.717163,6.830541,2.154186,6.094362,-6.766286,2.765549,-8.810337,7.378284,0.055263,7.427868,8.720036],[-0.942545,6.051255,0.028569,-0.454497,6.311294,-1.346975,9.696191,8.451431,-6.808203,-5.101889,-1.064530,5.134697,1.728389,-9.613902,-4.414628,-4.731160,-2.304872,-0.018994,-0.894588,0.675498],[-3.959018,4.599025,1.089015,-9.103264,-9.461129,0.671976,9.224835,-2.684369,-4.733715,0.822217,-5.849508,5.615813,-3.771402,7.104653,-3.578513,-3.343771,-6.554786,2.678585,-6.917681,-4.770887],[-3.384593,9.920376,-9.313424,0.628703,-1.176841,-3.094440,-4.328956,0.010000,4.167258,0.059097,0.630645,-1.083035,5.662696,-8.570548,0.909128,8.596863,-5.704346,1.367852,-7.438009,4.380772],[-9.947195,-3.895951,7.025141,8.884551,-8.683952,2.219249,-9.683057,0.828374,4.533792,-7.580183,-4.195144,-6.127346,-5.196043,-7.731560,-2.831345,-7.382792,8.858708,0.507187,-3.029314,6.397771],[-2.175402,9.229066,8.695353,-1.519068,-3.751878,2.856446,-3.070339,5.214246,-0.437734,-3.088025,-7.240945,8.859484,2.376559,-1.316594,6.619050,-3.283298,-8.251551,-6.105089,-4.215172,-8.380680],[8.225687,-5.439971,-4.287824,9.100416,5.461405,4.726692,-2.150901,0.245608,-0.187717,5.516876,6.580342,3.655759,8.053663,7.531238,-5.846670,-3.310897,-2.318684,-0.192519,6.343420,9.943549],[5.034081,-0.209415,2.494785,5.812616,4.964619,1.086092,-3.439019,4.895252,-1.410196,6.668929,-7.002933,2.857923,-2.104187,0.610634,2.494156,-9.748568,-7.439276,-7.649023,-4.582961,3.644418],[-1.606806,2.083947,3.545609,0.835924,4.395296,-6.981574,-8.450995,-3.291747,4.550702,-4.968553,-6.392345,7.941856,3.608191,-3.059847,9.664496,-4.394045,-6.735137,-8.164371,-1.188566,-9.825258],[0.316916,8.948978,-8.226480,-8.507788,-0.596486,-3.896138,-1.632750,6.077463,7.490908,4.388489,7.508915,-8.294996,8.431945,1.003311,-8.102410,-7.568122,-6.334232,-2.168476,0.334428,1.885919],[1.602415,0.670909,1.888129,-3.438823,-2.496846,-0.167613,3.370143,-0.304739,5.116126,-7.839397,8.449806,4.548763,-9.114294,-8.494839,0.703782,4.612168,9.708346,-7.142211,7.294302,0.684689],[-5.105910,6.875977,-9.443668,9.291847,7.853372,-8.789272,-3.000597,8.103101,2.210081,-9.356304,1.123031,6.051538,-0.031900,8.170989,-7.617867,-7.999635,-3.969661,-6.987413,8.385323,4.704366],[7.296027,0.934588,1.720956,3.829159,-6.179439,2.373662,6.028929,-2.659961,-0.246958,-6.648260,-8.254539,-6.356070,-7.347870,3.047960,-1.573977,6.672858,-0.607191,7.719850,1.197796,-9.071970],[-6.322561,5.658550,8.142291,-8.629734,6.735163,-0.655821,9.594666,4.676626,-4.798911,2.466742,5.536481,-3.542371,4.112909,7.106236,-6.792324,-6.930093,-6.801367,5.640192,9.321804,0.600522]], dtype = "float32")#candidate|7297|(56, 20)|const|float32
var_7298 = relay.var("var_7298", dtype = "float32", shape = (72, 1))#candidate|7298|(72, 1)|var|float32
const_7299 = relay.const([[3.898350,-0.836720,3.548613],[0.055780,7.567609,3.876270],[9.379906,6.906597,-2.022005],[-5.372194,3.107101,-4.607208],[-1.037037,-1.649221,-8.102838],[-5.836593,2.659546,-8.460006],[-9.982083,5.485728,7.176487],[9.597525,0.010958,3.833387],[-1.485304,-3.996787,-5.531938],[9.669717,-6.770879,9.592048],[-8.134499,9.491699,-8.604065],[-0.281115,0.691320,8.367134],[-8.838238,-6.106483,9.020537],[6.018635,8.346604,4.078180],[-7.634194,-9.600141,-6.511152],[6.246411,5.244406,5.085409],[-5.682944,-0.446482,5.177277],[-0.167095,4.529311,6.425774],[-6.733781,-7.312571,-3.773654],[4.160294,-6.043515,6.896096],[-6.835538,7.565512,6.492453],[5.225716,3.699222,-6.597836],[3.052496,-9.724041,7.001019],[-5.096198,3.781886,1.879351],[-0.047299,-2.291572,-7.054364],[-6.097521,6.024957,-0.281429]], dtype = "float64")#candidate|7299|(26, 3)|const|float64
call_7294 = relay.TupleGetItem(func_7067_call(relay.reshape(var_7295.astype('float64'), [2, 2, 11]), relay.reshape(var_7295.astype('float64'), [2, 2, 11]), relay.reshape(var_7296.astype('float32'), [675,]), relay.reshape(const_7297.astype('float32'), [1120,]), relay.reshape(var_7298.astype('float32'), [72,]), relay.reshape(const_7299.astype('float64'), [78, 1]), ), 2)
call_7300 = relay.TupleGetItem(func_7074_call(relay.reshape(var_7295.astype('float64'), [2, 2, 11]), relay.reshape(var_7295.astype('float64'), [2, 2, 11]), relay.reshape(var_7296.astype('float32'), [675,]), relay.reshape(const_7297.astype('float32'), [1120,]), relay.reshape(var_7298.astype('float32'), [72,]), relay.reshape(const_7299.astype('float64'), [78, 1]), ), 2)
func_3339_call = mod.get_global_var('func_3339')
func_3344_call = mutated_mod.get_global_var('func_3344')
const_7304 = relay.const([[1.001330],[-7.644524],[9.667867],[-5.023639],[-3.506522],[8.310409],[0.362668],[-6.181810],[6.870094]], dtype = "float32")#candidate|7304|(9, 1)|const|float32
const_7305 = relay.const([5.329966,7.103571,9.132551,-1.867698,7.717165,3.885317,3.149972,-0.088582,-1.351815,-7.120298,-7.947347,5.244751,-6.570075,5.893196,-4.130630,5.953405,7.069479,-5.954792,-8.007140,-8.408986,0.849863,-3.337764,0.750579,-4.463120,-6.751152,5.375918,7.415229,-6.849190,-4.540220,-7.496945,8.414355,0.705093,-6.734244,9.716503,-8.759826,-9.148500,3.763354,3.075958,8.111126,-8.727258,-0.672631,0.226924,6.540423,-9.882294,2.144193,-3.066868,-4.142758,-6.252379,8.464041,9.772901,0.568831,-8.814088,-5.312103,8.686206,6.621648,3.558385,9.009045,-6.017423,-4.801777,-3.076155,9.711539,-4.157946,-6.052287,-6.916390,-0.918276,-3.882677,-5.958615,-8.887459,-7.147598,-2.540942,-1.165610,9.906261,-2.502838,-8.911825,-4.907848,9.099469,2.883528,3.771321,-9.674504,-7.933599,1.750040,-9.327724,3.733965,-3.625720,-2.537405,5.472542,-5.272638,-5.762027,-7.212499,7.717738,8.652588,-4.693452,-2.467382,2.214432,-2.624348,7.524465,-3.098256,8.422617], dtype = "float64")#candidate|7305|(98,)|const|float64
call_7303 = relay.TupleGetItem(func_3339_call(relay.reshape(const_7304.astype('float32'), [1, 1, 9]), relay.reshape(call_7294.astype('float32'), [5, 15, 9]), relay.reshape(const_7305.astype('float64'), [98,]), ), 0)
call_7306 = relay.TupleGetItem(func_3344_call(relay.reshape(const_7304.astype('float32'), [1, 1, 9]), relay.reshape(call_7294.astype('float32'), [5, 15, 9]), relay.reshape(const_7305.astype('float64'), [98,]), ), 0)
bop_7317 = relay.floor_divide(call_7270.astype('float64'), const_7304.astype('float64')) # shape=(9, 80)
bop_7320 = relay.floor_divide(call_7271.astype('float64'), const_7304.astype('float64')) # shape=(9, 80)
func_4343_call = mod.get_global_var('func_4343')
func_4348_call = mutated_mod.get_global_var('func_4348')
var_7323 = relay.var("var_7323", dtype = "int64", shape = (525,))#candidate|7323|(525,)|var|int64
call_7322 = relay.TupleGetItem(func_4343_call(relay.reshape(var_7323.astype('int64'), [15, 5, 7]), relay.reshape(var_7323.astype('int64'), [15, 5, 7]), relay.reshape(var_7298.astype('float32'), [72,]), ), 2)
call_7324 = relay.TupleGetItem(func_4348_call(relay.reshape(var_7323.astype('int64'), [15, 5, 7]), relay.reshape(var_7323.astype('int64'), [15, 5, 7]), relay.reshape(var_7298.astype('float32'), [72,]), ), 2)
func_4007_call = mod.get_global_var('func_4007')
func_4011_call = mutated_mod.get_global_var('func_4011')
call_7326 = relay.TupleGetItem(func_4007_call(relay.reshape(const_7297.astype('float32'), [14, 10, 8]), relay.reshape(const_7297.astype('float32'), [14, 10, 8]), relay.reshape(call_7322.astype('float32'), [72,]), ), 2)
call_7327 = relay.TupleGetItem(func_4011_call(relay.reshape(const_7297.astype('float32'), [14, 10, 8]), relay.reshape(const_7297.astype('float32'), [14, 10, 8]), relay.reshape(call_7322.astype('float32'), [72,]), ), 2)
func_5432_call = mod.get_global_var('func_5432')
func_5434_call = mutated_mod.get_global_var('func_5434')
call_7341 = func_5432_call()
call_7342 = func_5432_call()
var_7345 = relay.var("var_7345", dtype = "float64", shape = (26, 3))#candidate|7345|(26, 3)|var|float64
bop_7346 = relay.add(const_7299.astype('uint64'), relay.reshape(var_7345.astype('uint64'), relay.shape_of(const_7299))) # shape=(26, 3)
func_6615_call = mod.get_global_var('func_6615')
func_6618_call = mutated_mod.get_global_var('func_6618')
const_7356 = relay.const([-1.926380,-8.723666,-7.580035,8.259491,7.064102,2.623949,-0.946902,3.849863,7.727826,-7.919972,-2.420824,-2.472577,0.419903,5.589658,-9.687232,-2.828098,0.617800,-3.092795,1.921104,-4.990641,-7.451018,5.699804,-2.408328,-1.776539,1.690427,1.912632,-7.987247,7.644450,8.628590,-2.322280,-3.344441,-8.113467,-7.536584,2.212449,4.506097,-9.294242,1.697858,-7.901759,-6.517185,6.341010,-9.702191,-1.000121,-8.385848,-9.239809,-7.726164,9.667624,6.386181,-0.242797,-8.350296,9.130441,1.482687,7.707987,3.733357,4.639900,-6.097840,5.319306,0.501017,-7.263325,6.808289,2.470563,5.555128,-9.661136,-1.727532,-2.407931,-2.616571,-8.584770,9.120022,-7.770226,-4.588702,4.030054,-1.775657,4.305103,-6.555755,5.871538,-7.961062,9.259233,2.798329,9.597418,8.950115,-4.871035,2.127228,2.983322,9.960568,-4.136283,0.562731,-0.474388,-0.540520,2.597986,7.466604,5.832145,9.660590,-1.572707,-1.338490,7.160306,1.583181,-2.996391,-3.514908,-9.198590,9.936286,6.818276,-4.409295,5.214693,8.490343,5.273196,5.440496,5.237576,2.831171,-2.406204,3.741737,9.636590,1.395058,7.332299,-8.831964,5.904462,-4.861343,-6.197037,8.793278,-6.292259,0.314676,7.719428,-5.606021,7.619546,-4.045781,2.470264,3.470965,6.499199,-4.189390,3.123382,-0.295227,8.187266,5.812834,6.317029,4.906595,-7.143896,3.434159,2.358684,-2.358263,0.346974,-4.230792,-7.661049,-4.485749,3.235488,-6.865474,2.799826,1.232572,-9.281366,-7.848562,3.256309,1.486894,-4.988124,-5.536694,-9.897692,8.633566,4.281195,-2.970747,2.743733,4.781091,-5.234483,7.279527,-6.481018,-8.765404,-4.402350,-7.571832,-3.760586,7.729834,-3.349189,-6.268419,-8.585625,8.363996,-2.796618,5.556996,-1.098710,-8.501615,-4.434649,-1.623083,-9.058210,6.773551,6.649260,8.835834,8.188108,7.737798,-7.321325,-9.154931,7.515471,-1.463614,-3.166745,4.925187,3.118094,0.137887,-7.474456,-1.692132,-9.020484,7.778727,-5.401962,5.932987,9.120374,1.352952,-8.098329,-2.635150,6.123604,8.776898,-5.776319,-4.907322,-7.273018,8.182452,5.508817,-2.146184,-1.145144,-4.159105,-9.404783,-7.637962,-0.737546,7.866633,-8.138732,-9.150930,-0.331465,3.632493,-3.629129,-4.380813,7.794926,2.659636,-5.102115,-6.468016,8.764454,9.908911,-0.774402,5.116307,7.761536,2.178181,-1.858603,-4.201680,-4.845378,6.389314,6.112028,0.655203,-9.829579,-4.912541,-5.901455,6.836688,3.506744,0.917300,-6.653671,-9.615771,3.819201,2.748026,0.349968,9.303749,5.535647,-0.494383,-8.446189,3.270855,4.396518,2.486889,-0.852079,8.225449,7.675041,6.957333,-8.277349,-6.478633,-4.961924,8.707387,6.475061,5.465458,-4.648616,2.775914,2.661347,4.904761,-0.563722,6.835301,5.076905,-1.114582,3.652011,-3.622996,6.983421,-3.224646,0.335497,1.300313,-4.789892,3.080600,1.773953,2.854014,-0.099062,2.564752,-2.242371,3.337190,4.511594,-8.735280,-1.416781,-8.666917,1.222875,5.438177,2.453603,5.312352,7.107202,-2.175408,-6.498526,6.285784,-9.236923,5.545927,8.269521,-9.465314,7.711523,-5.076649,4.037602,6.149889,6.449640,6.432895,-3.100137,-1.747071,-9.430524,-0.520326,-8.301626,5.342005,-9.549454,1.225015,7.279869,-7.302671,9.689994,-2.764127,-0.359608,7.967096,-8.677608,-6.011251,-1.394089,-3.312468,7.416790,5.336087,0.623657,-6.047019,3.506230,8.333240,2.084289,9.124363,-3.660377,3.324717,-7.550923,-3.427108,-8.196422,8.710066,7.937394,8.798140,-0.678688,0.635736,3.982284,6.211677,0.057543,5.588459,-9.702866,4.651309,9.901499,2.527776,-2.946984,-6.210175,-8.400171,2.501226,-0.618521,-6.274519,9.039501,-5.794468,5.992496,4.400923,-8.533771,0.440771,-9.305703,-9.343299,-5.356357,5.215901,1.394535,6.150190,4.866487,-2.767494,4.170455,-4.518533,-2.021097,7.464613,-7.379404,-7.341843,2.237252,8.983122,7.681481,7.689020,-7.426888,-0.380868,7.557373,5.084743,-1.022657,-4.582104,2.223445,-0.821055,8.393915,4.548041,-6.666136,-2.030020,-3.003970,2.204552,5.155042,0.290217,7.006432,-1.688191,0.860897,0.549360,5.060517,4.031493,-9.705678,-9.056932,2.209588,2.826532,3.012210,0.708699,-5.298863,4.285078,-3.318261,9.029370,-8.368489,-5.279697,7.479381,7.217632,1.662010,4.681421,-6.137478,4.786169,-2.434193,-7.038032,-3.789799,3.291380,-0.695388,0.837277,4.072529,6.435446,-9.098914,6.297901,5.803254,-6.100110,9.448364,4.529551,0.517924,0.036213,2.269049,0.257274,3.629482,-2.226141,-6.810989,-3.138415,-6.146912,2.937582,9.492140,4.450982,-7.884138,6.117388,6.191378,0.586072,1.048840,-3.409925,-2.450507,8.543955,-5.953291,-1.956603,9.795250,-9.876969,-1.770859,-0.738229,-4.470090,-9.576418,0.136673,-0.459208,-6.634907,0.866454,-0.665842,6.787218,7.056924,0.420635,-8.812131,-8.490484,-4.875455,-4.490395,6.930333,9.035948,-5.438648,-4.662255,4.770364,-6.193693,-5.691452,-7.581736,-2.707684,-3.534784,-5.159398,5.314259,2.376203,-5.080308,6.884761,-5.906731,0.231365,-1.360386,8.795472,7.842474,-0.171763,0.790284,0.963733,1.115113,0.243550,5.179600,1.277284,-6.683400,3.392200,0.779167,2.286278,8.433349,8.620390,-4.511016,-9.347664,7.938746,-8.826298,6.615514,-0.966500,1.577142,-7.194998,7.317886,3.027121,-8.378710,-6.465700,7.100914,2.459265,-7.648073,5.253184,-7.958528,-1.072741,-2.870219,-1.808237,-6.894778,-2.613264,-9.625775,7.911809,8.217778,7.732236,6.143695,3.416698,-2.623900,9.928029,8.551510,2.865100,-1.583638,7.410216,-1.070357,-6.014881,7.884151,-3.685772,-9.904544,9.871720,6.275545,7.606152,5.313009,6.406365,-5.783576,-4.486229,5.777059,7.130066,-3.710794,-5.183285,-9.574727,2.854500,-2.566375,0.462383,4.139088,-4.666122,8.854486,6.071493,-5.622107,-1.720436,8.446073,-8.712355,8.696937,-3.608296,-6.787915,-4.129956,-2.457261,-6.737697,-2.112768,2.430638,7.058544,-7.779774,4.621950,1.930979,-5.462224,-1.929674,-1.862362,4.370848,-3.602809,6.316957,-6.549994,6.729526,-7.289631,1.483831,8.718916,-3.740303,-5.360938,-8.187718,3.194722,9.832911,6.646117,3.079766,-2.278882,0.075522,0.598777,-5.057057,7.048426,-6.527673,7.112089,-5.532203,-8.740498,7.226682,2.227545,-1.452269,5.486886,-2.225079,-0.726455,2.805749,-5.017900,0.780087,5.817896,-4.893273,-0.362477,-7.241236,-2.253558,-9.381237,-1.244406,-7.242910,7.339133,-0.531235,-5.781550,-9.188197,-8.558213,-4.292878,-0.656184,-6.832655,4.544987,-3.500476,9.197564,5.655433,4.325529,-5.754336,-9.566178,4.221133,-2.213574,-9.904366,7.482665,6.006797,-9.083031,-0.118010,8.470516,7.796565,9.744223,-6.299099,-8.877486,2.636329,-5.367210,3.697100,-4.976540,-0.137650,-3.371598,8.697175,6.409142,-9.261787,-4.632504,3.096518,5.812431,-5.008289,-2.454359,-2.537817,0.351797,8.239335,9.995612,-5.820217,0.570766,-6.473457,4.150262,0.052549,-0.483472,2.913704,3.870455,7.995457,3.421949,6.501433,-7.727007,-3.724188,9.648583,2.167318,0.581714,-3.104859,9.340043,-3.495934,8.386201,5.305894,2.801492,-5.505888,2.054688,-6.149091,-6.151381,4.049757,2.595122,-2.317441,9.816422,1.354390,2.125638,8.358592,1.532857,5.131831,-8.721727,-1.974367,1.768866,-6.495142,-6.279867,9.217989,-0.387763,-2.815657,8.637076,6.244009,-9.381487,8.948057,-3.082864,-8.215347,-7.948854,-3.683523,7.427693,8.624775,-5.398533,5.617119,-7.253605,7.566043,8.868396,-4.645645,-8.758118,3.766202,-5.953324,-2.762614,-0.345380,-7.063700,-9.398044,4.961471,-8.724599,5.916325,-1.515211,0.394740,0.733816,0.027037,-6.833444,0.008155,2.088731,-2.917010,2.954241,7.281560,4.574925,3.292877,-7.692494,0.813109,2.351937,4.130516,-4.271229,-4.655505,0.459695,-1.726499,7.993539,-1.626070,0.083352,-4.593560,7.128400,-0.794850,-9.946376,5.390415,-4.497514,4.339733,9.287680,1.568956,6.542957,8.684276,5.863518,1.144155,-7.232836,-3.590256,-1.049462,-6.349875,-2.480717,-2.655533,-7.078032,0.690132,3.324414,-0.924701,-9.813722,-8.444234,4.966717,-8.771681,9.388555,0.103243,-5.352943,5.517257,5.992558,-0.782735,-4.034616,-1.543486,-2.282199,5.352012,-4.128649,-0.132332,3.374492,-1.332940,6.374522,-6.155208,-7.846441,-9.122064,8.042269,7.961383,1.013799,-7.563909,7.109026,5.314842,-7.927550,0.886709,-4.479797,2.759897,-2.679186,9.701784,7.650616,-0.115068,0.618347,-8.939034,9.683775,4.281391,6.720602,-2.895995,-3.292033,2.331937,6.156057,2.087428,-6.132145,8.274422,6.175802,-8.989133,-2.576138,-9.171062,6.245131,-6.627156,5.859955,-0.872296,6.127178,6.797696,-2.891790,4.990912,6.703731,0.640772,3.130876,-3.472147,8.721330,2.398877,8.008838,-0.695743,-7.988878,5.897808,-5.131541,5.125793,4.354595,-3.496649,4.560564,4.515323,-9.567166,-4.916843,9.960749,-6.018642,-7.121121,2.244691,-3.772022,-6.833078,-2.353200,-9.094142,4.987333,1.166298,-5.265010,-3.654600,2.941378,-6.777311,0.815346,3.146000,8.923440,9.774523,-2.744314,9.236223,-2.672084,0.677935,-3.340966,-7.029567,6.806787,-6.321495,8.066526,4.176660,-5.080621,-6.998970,9.371020,-0.225559,-0.599255,-3.109054,-8.943604,8.796875,9.933478,-1.978351,-3.885305,-1.557599,-1.742328,0.289344,5.794488,-9.916931,-2.632479,0.675050,-4.135557,-4.372445,-4.500453,4.218808,-7.593013,4.325872,-8.092534,3.871394,-2.707931,-1.298674,-6.468009,-9.150817,6.536514,0.765691,-1.988179,6.863320,8.098036,0.466116,-2.774608,-4.804705,0.713495,-2.977831,6.881748,-7.333728,9.360126,-9.197927,-1.821716,-9.325517,8.950071,3.409960,-1.438990,5.800884,-2.321689,1.019587,5.102439,0.961607,-9.906473,-2.113040,-9.449013,0.818284,-3.406633,2.894570,7.739061,-4.180574,-6.517272,-8.182028,-4.792134,-8.786126,-1.940142,8.179398,6.838745,-2.273969,-9.573895,-8.145809,8.508365,3.083097,1.893610,-0.922882,-1.607562,-0.800762,-5.113056,3.851718,-0.196554,9.563952,-1.515901,-8.416021,0.203564,6.296383,-9.094934,-0.143628,8.021931,4.279645,9.699983,8.689064,-2.665298,-1.524075,-7.707005,3.308462,7.125928,1.045203,3.519193,7.669998,-3.088280,-5.994795,-9.702369,-5.872078,-6.184647,4.924314,0.129747,9.012697,-2.944247,-9.733359,-1.544055,9.308977,-0.117793,4.253533,-7.447457,4.602677,1.454705,6.049438,-7.627403,6.289010,4.521011,-3.285687,-0.504463,-4.627976,5.301933,3.788832,-7.873343,8.115541,-9.528907,-4.586832,-1.954435,7.233601,-7.399920,3.840511,3.811913,5.070854,9.997624,0.633463,-5.032595,-1.858087,9.806228,1.904885,-9.287113,-2.151967,2.662656,-6.790712,-9.774870,1.939956,-5.312659,-3.018221,7.948043,6.169930,1.181410,-8.990313,-3.577172,-0.460728,7.751136,-0.238391,-8.989231,-1.914296,8.607414,5.366119,-6.909601,-7.839559,-8.853955,-5.999759,9.742813,-6.503985,1.854709,-4.777080,-1.172734,9.141460,-5.375310,4.418484,-1.068336,-6.951974,-0.022587,-5.692983,-5.922158,-6.159063,2.868230,-7.518193,-6.385017,9.159992,-2.173510,2.910432,-0.486772,-3.479583,-9.830404,-0.602412,5.023741,0.871445,-3.530511,-0.921808,-1.335421,7.451053,-5.168788,-6.563984,7.251943,-3.680982,8.188350,-2.056874,-5.711859,-6.491917,-6.857965,0.555642,0.989307,-5.164602,-6.843806,-3.894988,5.632553,-4.815958,-8.286027,-5.024277,1.358600,2.002549,-5.086545,-0.258559,-0.873696,-9.636686,4.524313,-6.010666,-4.446589,4.281764,4.279288,9.393356,2.815306,-7.750189,1.383133,4.304339,1.106566,7.335827,-1.793916,-4.775427,8.023383,-5.361408,0.613558,5.949725,0.710925,-4.562460,3.830138,1.830585,-1.477718,-4.654482,-8.685272,-2.595838,-9.389277,9.421333,1.766525,0.302368,-2.586326,-2.438562,-4.506093,1.435811,-2.391175,-9.224161,-1.273211,-8.042411,-5.514663,-2.680408,5.755845,-3.570697,-8.117513,-4.735151,-2.733906,-7.978969,6.820183,-9.066873,2.241547,5.721996,8.020440,3.131277,4.764057,-0.814321,-7.217731,-8.249297,2.277275,0.741793,2.943668,-9.711258,2.148049,-5.063583,4.260278,-0.585047,3.456047,-0.571209,7.043504,-4.705324,0.528715,-2.984882,5.606799,1.647344,-1.618297,-0.551623,6.076021,2.265576,-3.450290,4.380454,-4.978819,-5.120833,-4.759984,-4.343477,-0.169686,-1.456981,-0.495723,2.927685,-6.880310,-8.217741,7.378927,-4.521487,1.753891,3.183906,1.552656,7.623469,-8.245436,6.809248,-4.781726,-2.011465,-9.916458,8.189464,-0.206417,-9.299253,0.121881,9.139771,-9.895430,4.150897,9.456438,0.453356,-6.183953,-0.416757,-7.408202,7.330789,6.445203,2.990975,-3.307034,-8.234113,9.241296,8.590356,-2.571884,8.112588,-4.904769,-3.753275,7.453591,1.290399,9.037512,-0.504371,0.047114,-1.321114,2.100877,5.250996,-8.854930,-5.505452,-3.428763,4.078146,-9.583511,1.349698], dtype = "float64")#candidate|7356|(1248,)|const|float64
call_7355 = relay.TupleGetItem(func_6615_call(relay.reshape(const_7356.astype('float64'), [16, 6, 13])), 2)
call_7357 = relay.TupleGetItem(func_6618_call(relay.reshape(const_7356.astype('float64'), [16, 6, 13])), 2)
output = relay.Tuple([bop_7274,bop_7280,call_7294,var_7295,var_7296,const_7297,var_7298,call_7303,const_7305,bop_7317,call_7322,var_7323,call_7326,call_7341,bop_7346,call_7355,const_7356,])
output2 = relay.Tuple([bop_7277,bop_7283,call_7300,var_7295,var_7296,const_7297,var_7298,call_7306,const_7305,bop_7320,call_7324,var_7323,call_7327,call_7342,bop_7346,call_7357,const_7356,])
func_7362 = relay.Function([var_7279,var_7295,var_7296,var_7298,var_7323,var_7345,], output)
mod['func_7362'] = func_7362
mod = relay.transform.InferType()(mod)
var_7363 = relay.var("var_7363", dtype = "float64", shape = (9, 12, 9))#candidate|7363|(9, 12, 9)|var|float64
var_7364 = relay.var("var_7364", dtype = "float64", shape = (44,))#candidate|7364|(44,)|var|float64
var_7365 = relay.var("var_7365", dtype = "float32", shape = (675,))#candidate|7365|(675,)|var|float32
var_7366 = relay.var("var_7366", dtype = "float32", shape = (72, 1))#candidate|7366|(72, 1)|var|float32
var_7367 = relay.var("var_7367", dtype = "int64", shape = (525,))#candidate|7367|(525,)|var|int64
var_7368 = relay.var("var_7368", dtype = "float64", shape = (26, 3))#candidate|7368|(26, 3)|var|float64
output = func_7362(var_7363,var_7364,var_7365,var_7366,var_7367,var_7368,)
func_7369 = relay.Function([var_7363,var_7364,var_7365,var_7366,var_7367,var_7368,], output)
mutated_mod['func_7369'] = func_7369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5035_call = mod.get_global_var('func_5035')
func_5037_call = mutated_mod.get_global_var('func_5037')
call_7429 = relay.TupleGetItem(func_5035_call(), 0)
call_7430 = relay.TupleGetItem(func_5037_call(), 0)
func_7246_call = mod.get_global_var('func_7246')
func_7249_call = mutated_mod.get_global_var('func_7249')
const_7434 = relay.const([0.914506,6.846822,3.416050,0.134599,5.109280,9.735820,-5.691261,-6.568170,-6.193637,3.462440,-3.370159,0.983242,-4.212579,5.303439,-6.399381,-6.452086,9.945287,-8.426192,5.190302,0.313279,1.077948,9.095462,-7.084680,5.853316,1.536791,-6.583057,8.498021,-0.303796,5.181322,-4.144525,8.508744,0.982456,-7.727292,8.147489,-0.903652,-3.480211,0.782263,6.060190,6.173887,-8.252876,6.607468,-0.040971,7.937055,-6.450658,-3.405771,-4.043116,1.352448,-2.130534,6.304706,8.694821,-2.212450,9.333492,-1.907474,8.894727,-6.574609,-3.690397,0.463931,-4.277228,-9.518128,5.923565,2.989120,-4.422605,4.945802,-0.038197,-4.165464,-9.213881,5.270146,1.800650,-4.222840,7.382574,-4.412690,8.778517,-7.013961,-5.390796,-1.421889,7.078070,3.826953,3.027245,-3.660513,-6.245465,5.588716,8.840352,-5.719763,-4.095160,-7.652936,8.766277,-5.289560,-6.324965,0.205167,3.050490,-6.780765,7.468494,-4.670468,-4.578200,7.257546,7.939650,-6.225735,9.497235,8.812324,3.933159,-9.985862,8.862761,8.365540,1.272800,-0.220438,9.580506,-8.145205,2.206730,7.695475,3.194061,-3.600761,9.302472,-9.179389,1.244762,3.442616,0.042432,-1.180458,-3.765692,-5.412386,-7.635623,-4.177769,2.348814,-4.755222,4.896227,-5.402396,-0.453891,5.343216,8.113129,2.558550,-6.505956,-0.558081,-2.086919,-0.207154,-7.612726,-7.708687,4.620935,-9.111366,3.196682,2.812970,-1.307225,-5.155636,-0.139340,5.223325,3.592676,1.520537,4.341630,9.862009,-9.735505,-7.532946,-1.955997,9.745311,7.926553,-7.394239,-5.712908,6.104582,2.860174,-1.414288,7.197908,-8.985692,-7.168844,-0.388436,2.416910,9.739772,0.041791,-3.993944,-8.715873,-8.243851,-8.768838,2.404499,-6.580718,4.971149,-1.989605,-5.618666,3.310622,-6.925011,-3.111579,7.805707,-2.230610,8.638242,-8.351572,4.193813,3.544694,-0.077874,-6.904148,-6.088233,-6.446467,-7.053279,2.419149,5.282406,4.059135,-0.089104,-1.703900,0.373951,-1.154925,1.732539,9.209764,-3.542459,-5.016590,-9.471034,-1.281272,7.331282,-1.857387,3.744763,-1.319081,7.748554,-2.955849,8.447803,5.597186,4.734044,0.532671,3.956126,4.499713,6.106907,-7.723104,-1.113931,2.291042,-6.940450,6.724970,0.526221,-4.032102,-8.982480,9.110227,3.879003,-0.551599,-4.553334,4.754310,-0.847894,1.109729,-9.051890,3.784063,-2.353269,6.312548,9.663952,-9.463571,-4.596458,9.662594,2.846313,9.773240,7.202386,1.445282,0.221959,4.184603,8.297067,-9.453118,6.810066,-8.906581,-2.152664,-5.644999,4.195923,-7.570272,1.549403,-8.948076,-9.245859,6.911135,5.020452,-9.062632,-7.270207,3.533712,-2.260647,8.184265,9.779011,-1.009840,6.370021,4.047792,4.851828,4.906276,2.188582,-4.956033,7.921579,-5.903875,-5.774957,7.246575,-6.052540,6.079723,-6.927120,-5.179877,-6.539206,1.787257,0.668211,-3.471736,0.576610,5.962081,4.752818,-4.343841,-7.226968,-2.545162,0.941329,4.395211,-5.482823,9.410222,5.104001,-4.841338,-7.639211,-5.591932,2.883124,-5.811171,-7.465203,4.117038,5.439220,-9.516528,-9.625255,3.765009,-6.898564,-2.218308,7.451075,-8.602601,9.172673,-0.564516,-4.931029,-4.382300,-2.338727,-4.711614,-5.224785,-2.381114,-2.324713,0.667312,5.089084,-6.756428,5.530979,-7.833218,-2.795730,-9.244283,-0.425961,3.402378,4.011179,-5.071846,9.583100,-5.575267,-7.537449,0.595477,4.997485,-2.731430,4.991701,-2.808186,5.891887,6.866093,3.953604,3.684795,2.589330,0.023595,-2.665466,-3.752657,-9.419925,-2.125559,1.274429,8.136834,-7.580674,-7.726512,7.236731,8.559774,7.452442,-6.174867,-6.232319,-4.816559,0.853584,-1.849957,1.669723,7.599579,2.241625,8.656905,9.931538,5.773757,-2.063169,-7.447241,-0.695783,-1.874140,-2.881762,8.767911,-0.096171,-1.930018,9.230997,-5.644828,3.168218,-3.578149,3.995056,-7.433161,3.800796,-1.017577,7.899965,1.193431,-5.074640,5.907395,-3.873857,9.177324,4.275640,-1.923313,-6.824281,8.673994,-7.858495,-4.506132,6.771605,5.940349,-4.599688,-3.208572,-8.579912,-7.056139,6.932778,1.173170,-2.944288,3.465611,5.045640,-6.268125,-0.981466,7.862907,3.711347,-8.351201,-2.316206,7.595895,3.034527,-5.966152,4.427604,7.615319,4.112055,6.176131,3.997751,5.814020,-8.968802,4.855054,7.524746,-6.286947,-3.332995,-0.978245,-7.889990,-4.429443,4.036776,7.324905,8.587409,-9.225921,6.455952,-1.972337,-2.716391,7.580747,2.439705,4.556436,-3.603088,6.739461,-9.200628,6.471173,-0.292718,-0.200400,7.352218,-4.346850,-9.192388,4.348734,-4.244571,0.375169,7.532308,-6.945737,6.780938,4.681924,1.454414,-5.503721,-7.159932,-0.680603,6.692251,0.697707,-6.654939,4.436561,-1.565740,-1.985233,-7.396617,0.276798,7.196469,-2.202893,1.403613,-2.088568,8.220392,-7.066125,-2.068284,-4.090016,9.139111,-9.191878,6.820383,0.237842,-8.576558,8.598056,4.463324,-8.605630,-9.398269,6.658282,4.486769,-4.681573,-7.114483,-3.194056,0.555250,5.537652,-4.025801,-9.512618,8.169263,2.732721,0.603368,1.148740,7.373953,4.310394,-7.212672,7.924998,-0.193028,-9.683466,-3.256254,-8.043016,5.058456,1.890338,0.007241,-7.435662,7.066323,1.860297,-3.960152,0.221195,-2.071597,9.876758,7.436000,-9.473507], dtype = "float32")#candidate|7434|(512,)|const|float32
call_7433 = relay.TupleGetItem(func_7246_call(relay.reshape(const_7434.astype('float32'), [16, 4, 8])), 0)
call_7435 = relay.TupleGetItem(func_7249_call(relay.reshape(const_7434.astype('float32'), [16, 4, 8])), 0)
output = relay.Tuple([call_7429,call_7433,const_7434,])
output2 = relay.Tuple([call_7430,call_7435,const_7434,])
func_7436 = relay.Function([], output)
mod['func_7436'] = func_7436
mod = relay.transform.InferType()(mod)
output = func_7436()
func_7437 = relay.Function([], output)
mutated_mod['func_7437'] = func_7437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7214_call = mod.get_global_var('func_7214')
func_7215_call = mutated_mod.get_global_var('func_7215')
call_7441 = relay.TupleGetItem(func_7214_call(), 0)
call_7442 = relay.TupleGetItem(func_7215_call(), 0)
var_7447 = relay.var("var_7447", dtype = "float64", shape = (9, 5, 16))#candidate|7447|(9, 5, 16)|var|float64
bop_7448 = relay.power(call_7441.astype('float32'), var_7447.astype('float32')) # shape=(9, 5, 16)
bop_7451 = relay.power(call_7442.astype('float32'), var_7447.astype('float32')) # shape=(9, 5, 16)
func_6875_call = mod.get_global_var('func_6875')
func_6879_call = mutated_mod.get_global_var('func_6879')
var_7455 = relay.var("var_7455", dtype = "float32", shape = (396,))#candidate|7455|(396,)|var|float32
var_7456 = relay.var("var_7456", dtype = "float32", shape = (1120,))#candidate|7456|(1120,)|var|float32
call_7454 = relay.TupleGetItem(func_6875_call(relay.reshape(var_7455.astype('float32'), [396,]), relay.reshape(var_7456.astype('float32'), [1120,]), ), 5)
call_7457 = relay.TupleGetItem(func_6879_call(relay.reshape(var_7455.astype('float32'), [396,]), relay.reshape(var_7456.astype('float32'), [1120,]), ), 5)
func_4978_call = mod.get_global_var('func_4978')
func_4981_call = mutated_mod.get_global_var('func_4981')
call_7473 = relay.TupleGetItem(func_4978_call(relay.reshape(var_7455.astype('float32'), [396,])), 3)
call_7474 = relay.TupleGetItem(func_4981_call(relay.reshape(var_7455.astype('float32'), [396,])), 3)
var_7481 = relay.var("var_7481", dtype = "float64", shape = (78,))#candidate|7481|(78,)|var|float64
bop_7482 = relay.not_equal(call_7454.astype('bool'), relay.reshape(var_7481.astype('bool'), relay.shape_of(call_7454))) # shape=(78,)
bop_7485 = relay.not_equal(call_7457.astype('bool'), relay.reshape(var_7481.astype('bool'), relay.shape_of(call_7457))) # shape=(78,)
func_6615_call = mod.get_global_var('func_6615')
func_6618_call = mutated_mod.get_global_var('func_6618')
var_7488 = relay.var("var_7488", dtype = "float64", shape = (624, 2))#candidate|7488|(624, 2)|var|float64
call_7487 = relay.TupleGetItem(func_6615_call(relay.reshape(var_7488.astype('float64'), [16, 6, 13])), 0)
call_7489 = relay.TupleGetItem(func_6618_call(relay.reshape(var_7488.astype('float64'), [16, 6, 13])), 0)
output = relay.Tuple([bop_7448,var_7455,var_7456,call_7473,bop_7482,call_7487,var_7488,])
output2 = relay.Tuple([bop_7451,var_7455,var_7456,call_7474,bop_7485,call_7489,var_7488,])
func_7501 = relay.Function([var_7447,var_7455,var_7456,var_7481,var_7488,], output)
mod['func_7501'] = func_7501
mod = relay.transform.InferType()(mod)
mutated_mod['func_7501'] = func_7501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7501_call = mutated_mod.get_global_var('func_7501')
var_7503 = relay.var("var_7503", dtype = "float64", shape = (9, 5, 16))#candidate|7503|(9, 5, 16)|var|float64
var_7504 = relay.var("var_7504", dtype = "float32", shape = (396,))#candidate|7504|(396,)|var|float32
var_7505 = relay.var("var_7505", dtype = "float32", shape = (1120,))#candidate|7505|(1120,)|var|float32
var_7506 = relay.var("var_7506", dtype = "float64", shape = (78,))#candidate|7506|(78,)|var|float64
var_7507 = relay.var("var_7507", dtype = "float64", shape = (624, 2))#candidate|7507|(624, 2)|var|float64
call_7502 = func_7501_call(var_7503,var_7504,var_7505,var_7506,var_7507,)
output = call_7502
func_7508 = relay.Function([var_7503,var_7504,var_7505,var_7506,var_7507,], output)
mutated_mod['func_7508'] = func_7508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6487_call = mod.get_global_var('func_6487')
func_6488_call = mutated_mod.get_global_var('func_6488')
call_7530 = relay.TupleGetItem(func_6487_call(), 0)
call_7531 = relay.TupleGetItem(func_6488_call(), 0)
output = relay.Tuple([call_7530,])
output2 = relay.Tuple([call_7531,])
func_7546 = relay.Function([], output)
mod['func_7546'] = func_7546
mod = relay.transform.InferType()(mod)
output = func_7546()
func_7547 = relay.Function([], output)
mutated_mod['func_7547'] = func_7547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5653_call = mod.get_global_var('func_5653')
func_5654_call = mutated_mod.get_global_var('func_5654')
call_7548 = relay.TupleGetItem(func_5653_call(), 1)
call_7549 = relay.TupleGetItem(func_5654_call(), 1)
uop_7551 = relay.asin(call_7548.astype('float64')) # shape=(14, 16, 6)
uop_7553 = relay.asin(call_7549.astype('float64')) # shape=(14, 16, 6)
func_5774_call = mod.get_global_var('func_5774')
func_5775_call = mutated_mod.get_global_var('func_5775')
call_7560 = func_5774_call()
call_7561 = func_5774_call()
func_6487_call = mod.get_global_var('func_6487')
func_6488_call = mutated_mod.get_global_var('func_6488')
call_7562 = relay.TupleGetItem(func_6487_call(), 0)
call_7563 = relay.TupleGetItem(func_6488_call(), 0)
func_6691_call = mod.get_global_var('func_6691')
func_6695_call = mutated_mod.get_global_var('func_6695')
var_7577 = relay.var("var_7577", dtype = "float32", shape = (2, 168))#candidate|7577|(2, 168)|var|float32
var_7578 = relay.var("var_7578", dtype = "int8", shape = (360,))#candidate|7578|(360,)|var|int8
var_7579 = relay.var("var_7579", dtype = "int64", shape = (1500,))#candidate|7579|(1500,)|var|int64
call_7576 = relay.TupleGetItem(func_6691_call(relay.reshape(var_7577.astype('float32'), [14, 4, 6]), relay.reshape(var_7578.astype('int8'), [360,]), relay.reshape(var_7579.astype('int64'), [1500,]), ), 0)
call_7580 = relay.TupleGetItem(func_6695_call(relay.reshape(var_7577.astype('float32'), [14, 4, 6]), relay.reshape(var_7578.astype('int8'), [360,]), relay.reshape(var_7579.astype('int64'), [1500,]), ), 0)
func_4767_call = mod.get_global_var('func_4767')
func_4769_call = mutated_mod.get_global_var('func_4769')
call_7581 = func_4767_call(relay.reshape(call_7562.astype('float64'), [1, 5, 16]))
call_7582 = func_4767_call(relay.reshape(call_7562.astype('float64'), [1, 5, 16]))
uop_7583 = relay.cosh(uop_7551.astype('float64')) # shape=(14, 16, 6)
uop_7585 = relay.cosh(uop_7553.astype('float64')) # shape=(14, 16, 6)
output = relay.Tuple([call_7560,call_7562,call_7576,var_7577,var_7578,var_7579,call_7581,uop_7583,])
output2 = relay.Tuple([call_7561,call_7563,call_7580,var_7577,var_7578,var_7579,call_7582,uop_7585,])
func_7586 = relay.Function([var_7577,var_7578,var_7579,], output)
mod['func_7586'] = func_7586
mod = relay.transform.InferType()(mod)
var_7587 = relay.var("var_7587", dtype = "float32", shape = (2, 168))#candidate|7587|(2, 168)|var|float32
var_7588 = relay.var("var_7588", dtype = "int8", shape = (360,))#candidate|7588|(360,)|var|int8
var_7589 = relay.var("var_7589", dtype = "int64", shape = (1500,))#candidate|7589|(1500,)|var|int64
output = func_7586(var_7587,var_7588,var_7589,)
func_7590 = relay.Function([var_7587,var_7588,var_7589,], output)
mutated_mod['func_7590'] = func_7590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4920_call = mod.get_global_var('func_4920')
func_4922_call = mutated_mod.get_global_var('func_4922')
call_7650 = func_4920_call()
call_7651 = func_4920_call()
func_6927_call = mod.get_global_var('func_6927')
func_6929_call = mutated_mod.get_global_var('func_6929')
call_7674 = relay.TupleGetItem(func_6927_call(), 0)
call_7675 = relay.TupleGetItem(func_6929_call(), 0)
func_2712_call = mod.get_global_var('func_2712')
func_2714_call = mutated_mod.get_global_var('func_2714')
const_7698 = relay.const([3.863152,-6.335670,6.425559,-2.592649,-0.923716,5.545705,-5.744125,9.616279,1.476680,7.732729,7.959564,-6.367919,-6.282347,-3.945112,5.698976,-5.971407,-5.562563,-5.501623,-8.271011,-6.798289,2.818845,-4.685087,4.013097,-3.970535,7.807669,2.454853,-4.461774,-1.699778,-1.234512,-9.867521,-9.607359,8.157555,5.998783,-9.238821,-6.860872,8.570020,-3.891145,6.185518,6.448518,-8.489363,0.957118,-2.636922,-0.468451,-7.693815,8.369025,-7.882221,8.790281,-0.936018,7.265859,-8.792461,6.684311,-0.352986,-1.331153,-4.555843,5.031559,-1.965117,-4.195987,-2.104086,3.688512,-4.348417,2.267451,-4.028604,-0.455739,-8.983537,1.974599,5.397035,-8.227161,4.849769,-7.415231,-9.985739,-0.220745,-7.558466,2.717660,4.778545,-3.399839,-1.890904,6.996478,-5.697300,9.084305,6.214411,-8.785895,-4.287007,-9.460080,6.530310,0.548024,-4.912914,-1.105514,-2.165296,1.563880,-7.879249,2.319192,-2.539784,6.853917,-2.920170,5.868422,4.378899,6.319239,-2.637157,5.343323,-1.021220,8.391854,6.245740,7.514550,-6.927649,7.680547,-7.987518,5.246435,4.511181,-0.522491,9.250377,-6.425098,4.365157,-2.042955,4.284315,1.202283,-5.298120,0.686858,-4.934955,-9.500583,4.910634,7.703830,-0.850262,-7.438334,2.526925,-8.394629,-2.976726,5.069317,-8.816160,9.146987,-2.539848,6.102252,-6.984470,-7.937555,7.246803,8.972772,-4.413392,7.958513,6.253132,8.504036,-1.389722,3.619860,-1.924369,-3.993683,7.009236,-7.931182,-2.164036,-0.336271,-0.394798,0.754085,0.159569,4.881957,0.479175,0.470203,-0.708111,9.063405,-5.532805,-3.383536,9.948731,6.361195,-6.998245,-2.539924,9.304881,4.198618,5.412474,3.925420,9.457176,7.738431,2.014546,2.699367,5.213048,-1.563028,-4.914858,-8.395971,4.945897,-2.230149,2.611128,-5.879288,8.941582,8.048223,-0.447523,-6.198181,5.991286,-9.909012,-0.760182,-9.898684,-7.678624,3.515809,4.346855,5.326920,8.927533,5.579929,-2.695541,5.815081,9.071514,7.263121,6.635082,-9.453944,9.907679,-1.367861,-3.456291,8.769837,0.384363,1.798455,-9.481097,-1.150544,-6.676873,-0.595133,5.663709,6.017213,-1.754503,7.485165,-9.503295,-9.043464,-5.511221,4.026202,-5.847204,-0.802194,9.213840,-6.585997,-0.087380,4.958884,-7.345515,1.777128,3.779619,6.142092,9.611293,2.663821,-5.772419,5.399612,-4.809849,9.650903,5.992126,7.582904,-8.222334,-0.538114,-5.561352,6.393510,-7.180975,-0.737966,5.134907,0.438639,-1.102834,-0.867392,1.125219,-4.935815,-2.409357,-1.444282,4.243330,-0.026439,5.807947,-9.550896,-3.857472,2.378458,-1.847173,-5.090086,4.906564,2.817954,8.659522,-4.963422,7.830879,-4.924826,-2.063335,-6.993934,-2.750252,4.581524,4.880684,5.230256,-6.771165,-1.887394,8.020800,-6.736513,4.634117,-3.207897,-6.093331,4.193199,6.257004,8.369909,-1.665652,0.785786,8.106450,-6.249436,-4.225093,-2.431029,-9.427752,-2.426620,-1.394656,-6.760325,-1.304023,-1.256621,9.647630,-4.522224,4.667410,6.215257,7.718041,6.523107,1.014203,-7.328399,5.232097,-9.991921,8.128015,5.811529,-1.640217,6.848802,4.677181,3.479459,3.877785,0.842649,8.503894,-2.646695,-1.484521,3.085570,-8.227225,7.013715,7.267823,6.427559,-7.716390,-9.039416,8.770602,8.582619,7.101839,2.605735,2.087942,1.088939,0.901110,9.500976,3.506506,-5.563231,-3.108712,-1.838526,4.736443,5.700653,-8.241769,-7.067738,7.653111,-7.088990,-8.160042,-3.565347,6.186271,8.575196,3.364617,-0.786039,3.944173,-4.575419,-0.372498,7.028692,7.712641,-2.832350,-0.714441,5.018747,-7.521737,-0.701172,2.469982,-3.859434,5.915187,-4.696673,5.030021,3.750414,3.555773,-5.739636,-9.595286,8.774462,-2.095205,-1.503698,5.458608,2.890645,7.700663,-1.293091,-4.774756,2.523085,-1.602353,-0.462109,-5.961043,4.876998,-1.870372,-5.338733,0.587002,-7.208113,2.515541,8.530670,-2.340822,-3.231809,-3.363565,-9.960696,-5.280684,-7.329528,6.835707,-9.002775,4.648819,2.292537,8.608400,-6.322394,-4.347513,3.444866,5.836897,-1.427414,0.695718], dtype = "float32")#candidate|7698|(396,)|const|float32
call_7697 = func_2712_call(relay.reshape(const_7698.astype('float32'), [11, 12, 3]))
call_7699 = func_2712_call(relay.reshape(const_7698.astype('float32'), [11, 12, 3]))
bop_7701 = relay.logical_or(call_7697.astype('bool'), relay.reshape(const_7698.astype('bool'), relay.shape_of(call_7697))) # shape=(11, 12, 3)
bop_7704 = relay.logical_or(call_7699.astype('bool'), relay.reshape(const_7698.astype('bool'), relay.shape_of(call_7699))) # shape=(11, 12, 3)
func_6927_call = mod.get_global_var('func_6927')
func_6929_call = mutated_mod.get_global_var('func_6929')
call_7726 = relay.TupleGetItem(func_6927_call(), 0)
call_7727 = relay.TupleGetItem(func_6929_call(), 0)
output = relay.Tuple([call_7650,call_7674,bop_7701,call_7726,])
output2 = relay.Tuple([call_7651,call_7675,bop_7704,call_7727,])
func_7732 = relay.Function([], output)
mod['func_7732'] = func_7732
mod = relay.transform.InferType()(mod)
output = func_7732()
func_7733 = relay.Function([], output)
mutated_mod['func_7733'] = func_7733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6099_call = mod.get_global_var('func_6099')
func_6101_call = mutated_mod.get_global_var('func_6101')
call_7783 = relay.TupleGetItem(func_6099_call(), 0)
call_7784 = relay.TupleGetItem(func_6101_call(), 0)
var_7788 = relay.var("var_7788", dtype = "float64", shape = (11, 80))#candidate|7788|(11, 80)|var|float64
bop_7789 = relay.greater_equal(call_7783.astype('bool'), var_7788.astype('bool')) # shape=(11, 80)
bop_7792 = relay.greater_equal(call_7784.astype('bool'), var_7788.astype('bool')) # shape=(11, 80)
bop_7793 = relay.not_equal(var_7788.astype('bool'), relay.reshape(bop_7789.astype('bool'), relay.shape_of(var_7788))) # shape=(11, 80)
bop_7796 = relay.not_equal(var_7788.astype('bool'), relay.reshape(bop_7792.astype('bool'), relay.shape_of(var_7788))) # shape=(11, 80)
bop_7800 = relay.maximum(call_7783.astype('float64'), bop_7789.astype('float64')) # shape=(11, 80)
bop_7803 = relay.maximum(call_7784.astype('float64'), bop_7792.astype('float64')) # shape=(11, 80)
uop_7820 = relay.erf(call_7783.astype('float64')) # shape=(1, 80)
uop_7822 = relay.erf(call_7784.astype('float64')) # shape=(1, 80)
func_4767_call = mod.get_global_var('func_4767')
func_4769_call = mutated_mod.get_global_var('func_4769')
call_7823 = func_4767_call(relay.reshape(uop_7820.astype('float64'), [1, 5, 16]))
call_7824 = func_4767_call(relay.reshape(uop_7820.astype('float64'), [1, 5, 16]))
uop_7825 = relay.log10(bop_7793.astype('float32')) # shape=(11, 80)
uop_7827 = relay.log10(bop_7796.astype('float32')) # shape=(11, 80)
bop_7836 = relay.equal(uop_7825.astype('bool'), relay.reshape(var_7788.astype('bool'), relay.shape_of(uop_7825))) # shape=(11, 80)
bop_7839 = relay.equal(uop_7827.astype('bool'), relay.reshape(var_7788.astype('bool'), relay.shape_of(uop_7827))) # shape=(11, 80)
bop_7849 = relay.right_shift(bop_7800.astype('int32'), relay.reshape(uop_7825.astype('int32'), relay.shape_of(bop_7800))) # shape=(11, 80)
bop_7852 = relay.right_shift(bop_7803.astype('int32'), relay.reshape(uop_7827.astype('int32'), relay.shape_of(bop_7803))) # shape=(11, 80)
bop_7856 = relay.floor_divide(uop_7820.astype('float32'), bop_7836.astype('float32')) # shape=(11, 80)
bop_7859 = relay.floor_divide(uop_7822.astype('float32'), bop_7839.astype('float32')) # shape=(11, 80)
output = relay.Tuple([call_7823,bop_7849,bop_7856,])
output2 = relay.Tuple([call_7824,bop_7852,bop_7859,])
func_7862 = relay.Function([var_7788,], output)
mod['func_7862'] = func_7862
mod = relay.transform.InferType()(mod)
var_7863 = relay.var("var_7863", dtype = "float64", shape = (11, 80))#candidate|7863|(11, 80)|var|float64
output = func_7862(var_7863)
func_7864 = relay.Function([var_7863], output)
mutated_mod['func_7864'] = func_7864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4920_call = mod.get_global_var('func_4920')
func_4922_call = mutated_mod.get_global_var('func_4922')
call_7925 = func_4920_call()
call_7926 = func_4920_call()
uop_7949 = relay.asinh(call_7925.astype('float64')) # shape=(1, 5, 16)
uop_7951 = relay.asinh(call_7926.astype('float64')) # shape=(1, 5, 16)
output = relay.Tuple([uop_7949,])
output2 = relay.Tuple([uop_7951,])
func_7954 = relay.Function([], output)
mod['func_7954'] = func_7954
mod = relay.transform.InferType()(mod)
mutated_mod['func_7954'] = func_7954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7954_call = mutated_mod.get_global_var('func_7954')
call_7955 = func_7954_call()
output = call_7955
func_7956 = relay.Function([], output)
mutated_mod['func_7956'] = func_7956
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7968 = relay.var("var_7968", dtype = "float32", shape = (6, 2, 3))#candidate|7968|(6, 2, 3)|var|float32
const_7969 = relay.const([[[-8.818287,-8.970814,-7.566858],[-0.440309,-8.552525,0.223146]],[[-5.089151,0.219475,0.901743],[7.914155,-0.918231,-5.412228]],[[-0.528135,-9.322322,6.773626],[-2.458345,1.278087,0.900084]],[[4.883135,3.933901,2.964807],[-3.560128,5.918951,3.492326]],[[2.327955,4.308645,-5.151059],[4.686381,2.119970,-6.403635]],[[4.514639,-9.586563,7.044212],[-0.570109,-0.322864,-1.617220]]], dtype = "float32")#candidate|7969|(6, 2, 3)|const|float32
bop_7970 = relay.divide(var_7968.astype('float32'), relay.reshape(const_7969.astype('float32'), relay.shape_of(var_7968))) # shape=(6, 2, 3)
func_4767_call = mod.get_global_var('func_4767')
func_4769_call = mutated_mod.get_global_var('func_4769')
var_7974 = relay.var("var_7974", dtype = "float64", shape = (80,))#candidate|7974|(80,)|var|float64
call_7973 = func_4767_call(relay.reshape(var_7974.astype('float64'), [1, 5, 16]))
call_7975 = func_4767_call(relay.reshape(var_7974.astype('float64'), [1, 5, 16]))
uop_7988 = relay.asin(const_7969.astype('float32')) # shape=(6, 2, 3)
func_5017_call = mod.get_global_var('func_5017')
func_5019_call = mutated_mod.get_global_var('func_5019')
call_8009 = func_5017_call()
call_8010 = func_5017_call()
bop_8015 = relay.add(uop_7988.astype('int16'), relay.reshape(bop_7970.astype('int16'), relay.shape_of(uop_7988))) # shape=(6, 2, 3)
func_4920_call = mod.get_global_var('func_4920')
func_4922_call = mutated_mod.get_global_var('func_4922')
call_8019 = func_4920_call()
call_8020 = func_4920_call()
func_6339_call = mod.get_global_var('func_6339')
func_6341_call = mutated_mod.get_global_var('func_6341')
var_8029 = relay.var("var_8029", dtype = "float64", shape = (240,))#candidate|8029|(240,)|var|float64
call_8028 = func_6339_call(relay.reshape(var_8029.astype('float64'), [3, 5, 16]))
call_8030 = func_6339_call(relay.reshape(var_8029.astype('float64'), [3, 5, 16]))
output = relay.Tuple([call_7973,var_7974,call_8009,bop_8015,call_8019,call_8028,var_8029,])
output2 = relay.Tuple([call_7975,var_7974,call_8010,bop_8015,call_8020,call_8030,var_8029,])
func_8041 = relay.Function([var_7968,var_7974,var_8029,], output)
mod['func_8041'] = func_8041
mod = relay.transform.InferType()(mod)
var_8042 = relay.var("var_8042", dtype = "float32", shape = (6, 2, 3))#candidate|8042|(6, 2, 3)|var|float32
var_8043 = relay.var("var_8043", dtype = "float64", shape = (80,))#candidate|8043|(80,)|var|float64
var_8044 = relay.var("var_8044", dtype = "float64", shape = (240,))#candidate|8044|(240,)|var|float64
output = func_8041(var_8042,var_8043,var_8044,)
func_8045 = relay.Function([var_8042,var_8043,var_8044,], output)
mutated_mod['func_8045'] = func_8045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5166_call = mod.get_global_var('func_5166')
func_5167_call = mutated_mod.get_global_var('func_5167')
call_8047 = relay.TupleGetItem(func_5166_call(), 0)
call_8048 = relay.TupleGetItem(func_5167_call(), 0)
output = call_8047
output2 = call_8048
func_8051 = relay.Function([], output)
mod['func_8051'] = func_8051
mod = relay.transform.InferType()(mod)
output = func_8051()
func_8052 = relay.Function([], output)
mutated_mod['func_8052'] = func_8052
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8053 = relay.var("var_8053", dtype = "float64", shape = (3, 6, 2))#candidate|8053|(3, 6, 2)|var|float64
uop_8054 = relay.log10(var_8053.astype('float64')) # shape=(3, 6, 2)
bop_8056 = relay.bitwise_xor(var_8053.astype('uint8'), relay.reshape(uop_8054.astype('uint8'), relay.shape_of(var_8053))) # shape=(3, 6, 2)
output = bop_8056
output2 = bop_8056
func_8073 = relay.Function([var_8053,], output)
mod['func_8073'] = func_8073
mod = relay.transform.InferType()(mod)
mutated_mod['func_8073'] = func_8073
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8074 = relay.var("var_8074", dtype = "float64", shape = (3, 6, 2))#candidate|8074|(3, 6, 2)|var|float64
func_8073_call = mutated_mod.get_global_var('func_8073')
call_8075 = func_8073_call(var_8074)
output = call_8075
func_8076 = relay.Function([var_8074], output)
mutated_mod['func_8076'] = func_8076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6099_call = mod.get_global_var('func_6099')
func_6101_call = mutated_mod.get_global_var('func_6101')
call_8100 = relay.TupleGetItem(func_6099_call(), 0)
call_8101 = relay.TupleGetItem(func_6101_call(), 0)
var_8109 = relay.var("var_8109", dtype = "float64", shape = (8, 80))#candidate|8109|(8, 80)|var|float64
bop_8110 = relay.equal(call_8100.astype('bool'), var_8109.astype('bool')) # shape=(8, 80)
bop_8113 = relay.equal(call_8101.astype('bool'), var_8109.astype('bool')) # shape=(8, 80)
uop_8118 = relay.cosh(bop_8110.astype('float32')) # shape=(8, 80)
uop_8120 = relay.cosh(bop_8113.astype('float32')) # shape=(8, 80)
uop_8125 = relay.log2(var_8109.astype('float32')) # shape=(8, 80)
output = relay.Tuple([uop_8118,uop_8125,])
output2 = relay.Tuple([uop_8120,uop_8125,])
func_8138 = relay.Function([var_8109,], output)
mod['func_8138'] = func_8138
mod = relay.transform.InferType()(mod)
mutated_mod['func_8138'] = func_8138
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8139 = relay.var("var_8139", dtype = "float64", shape = (8, 80))#candidate|8139|(8, 80)|var|float64
func_8138_call = mutated_mod.get_global_var('func_8138')
call_8140 = func_8138_call(var_8139)
output = call_8140
func_8141 = relay.Function([var_8139], output)
mutated_mod['func_8141'] = func_8141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5952_call = mod.get_global_var('func_5952')
func_5954_call = mutated_mod.get_global_var('func_5954')
call_8195 = relay.TupleGetItem(func_5952_call(), 0)
call_8196 = relay.TupleGetItem(func_5954_call(), 0)
output = relay.Tuple([call_8195,])
output2 = relay.Tuple([call_8196,])
func_8204 = relay.Function([], output)
mod['func_8204'] = func_8204
mod = relay.transform.InferType()(mod)
mutated_mod['func_8204'] = func_8204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8204_call = mutated_mod.get_global_var('func_8204')
call_8205 = func_8204_call()
output = call_8205
func_8206 = relay.Function([], output)
mutated_mod['func_8206'] = func_8206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5874_call = mod.get_global_var('func_5874')
func_5875_call = mutated_mod.get_global_var('func_5875')
call_8207 = relay.TupleGetItem(func_5874_call(), 1)
call_8208 = relay.TupleGetItem(func_5875_call(), 1)
output = relay.Tuple([call_8207,])
output2 = relay.Tuple([call_8208,])
func_8214 = relay.Function([], output)
mod['func_8214'] = func_8214
mod = relay.transform.InferType()(mod)
output = func_8214()
func_8215 = relay.Function([], output)
mutated_mod['func_8215'] = func_8215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6099_call = mod.get_global_var('func_6099')
func_6101_call = mutated_mod.get_global_var('func_6101')
call_8303 = relay.TupleGetItem(func_6099_call(), 0)
call_8304 = relay.TupleGetItem(func_6101_call(), 0)
var_8305 = relay.var("var_8305", dtype = "float64", shape = (14, 80))#candidate|8305|(14, 80)|var|float64
bop_8306 = relay.floor_divide(call_8303.astype('float32'), var_8305.astype('float32')) # shape=(14, 80)
bop_8309 = relay.floor_divide(call_8304.astype('float32'), var_8305.astype('float32')) # shape=(14, 80)
func_3664_call = mod.get_global_var('func_3664')
func_3667_call = mutated_mod.get_global_var('func_3667')
const_8319 = relay.const([[3,5,-5,10,-9,2,1,4,4,-5,2,-9,-8,-8,8,8,-9,1,2,-3,-10,-8,5,-6,-5,-5,2,-9,-10,-3,-4,10,-6,9,-2,10,9,2,3,2,1,-4,-1,3,10,8,9,-9,-8,-6,3,2,-5,6,2,-3,-3,-4,-9,-6,5,3,3,-2,2,-3,3,7,-8,3,8,3,-4,-8,5,10,-9,7,-4,-4,6,-1,3,-4,-10,-2,-4,4,3,-1,-5,2,5,-5,-6,-5,-8,-1,6,-3,4,-9,-10,8,-4,-4,1,2]], dtype = "uint16")#candidate|8319|(1, 108)|const|uint16
call_8318 = relay.TupleGetItem(func_3664_call(relay.reshape(const_8319.astype('uint16'), [1, 12, 9])), 0)
call_8320 = relay.TupleGetItem(func_3667_call(relay.reshape(const_8319.astype('uint16'), [1, 12, 9])), 0)
output = relay.Tuple([bop_8306,call_8318,const_8319,])
output2 = relay.Tuple([bop_8309,call_8320,const_8319,])
func_8322 = relay.Function([var_8305,], output)
mod['func_8322'] = func_8322
mod = relay.transform.InferType()(mod)
var_8323 = relay.var("var_8323", dtype = "float64", shape = (14, 80))#candidate|8323|(14, 80)|var|float64
output = func_8322(var_8323)
func_8324 = relay.Function([var_8323], output)
mutated_mod['func_8324'] = func_8324
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8326 = relay.const([[[9,-4,-2,-5],[-5,-2,7,-6],[-1,2,-3,9],[-2,-10,4,-6],[9,5,1,4],[4,-6,-3,3],[-1,-6,-2,4],[9,-6,10,-5],[3,10,9,-2],[10,-1,2,7],[-10,10,9,7]],[[-9,-10,-8,8],[4,-7,-2,5],[9,-4,-1,-6],[3,5,1,-1],[-7,-1,-3,-8],[7,-9,4,-2],[9,6,7,3],[8,-4,-1,1],[-6,-5,-1,8],[-6,-8,1,5],[-6,-2,-3,-4]],[[4,-3,-5,-3],[7,9,-10,-8],[4,-9,8,6],[7,6,4,2],[-8,-3,1,3],[5,-8,1,-1],[1,-3,-6,-2],[9,-4,10,3],[2,2,-3,3],[-8,-2,6,5],[3,-6,-7,3]],[[-8,10,-6,-7],[-10,-4,-5,2],[-8,2,8,-1],[5,2,-10,9],[6,8,-2,-2],[4,-5,3,-2],[-2,6,4,-2],[7,-3,1,-4],[3,10,-7,-10],[-8,-1,4,5],[8,5,9,10]],[[-3,2,7,2],[-8,-5,-5,-7],[2,8,-9,-2],[-2,-8,-4,6],[1,1,4,8],[-8,-8,-10,7],[-2,5,-8,8],[-4,1,-7,7],[-5,-6,4,2],[10,2,-4,9],[-4,7,1,-1]],[[4,-5,1,8],[10,6,1,3],[-9,-9,-6,8],[5,1,3,-3],[8,-7,-7,6],[1,1,-1,1],[-9,-4,1,4],[-7,1,1,-8],[-9,-5,-2,-6],[-4,-6,9,-6],[10,-3,1,-4]],[[-4,-10,-9,1],[5,-6,10,1],[9,10,7,-6],[7,-5,-9,-9],[-5,10,-9,-2],[1,-3,-10,-5],[-2,-6,-1,5],[6,-8,-10,-9],[-8,-9,-2,-3],[-10,1,3,-10],[-1,5,3,-1]]], dtype = "int32")#candidate|8326|(7, 11, 4)|const|int32
var_8327 = relay.var("var_8327", dtype = "int32", shape = (7, 11, 4))#candidate|8327|(7, 11, 4)|var|int32
bop_8328 = relay.add(const_8326.astype('int32'), relay.reshape(var_8327.astype('int32'), relay.shape_of(const_8326))) # shape=(7, 11, 4)
output = relay.Tuple([bop_8328,])
output2 = relay.Tuple([bop_8328,])
func_8341 = relay.Function([var_8327,], output)
mod['func_8341'] = func_8341
mod = relay.transform.InferType()(mod)
mutated_mod['func_8341'] = func_8341
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8342 = relay.var("var_8342", dtype = "int32", shape = (7, 11, 4))#candidate|8342|(7, 11, 4)|var|int32
func_8341_call = mutated_mod.get_global_var('func_8341')
call_8343 = func_8341_call(var_8342)
output = call_8343
func_8344 = relay.Function([var_8342], output)
mutated_mod['func_8344'] = func_8344
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8470 = relay.const([[[-8.919356],[0.805841],[-3.375582],[-9.611593],[-0.374753],[5.481956],[6.035312],[9.323342]],[[-9.665865],[-1.845584],[-3.048809],[-9.930153],[-6.829810],[7.182747],[-3.333918],[-4.479708]],[[7.117532],[-8.527568],[4.124365],[0.056905],[-9.274094],[-7.659796],[-3.596349],[2.332144]],[[4.871666],[-5.893917],[-4.985309],[-6.052175],[8.728749],[1.931933],[-4.264275],[-6.395284]],[[0.393721],[0.169226],[7.031945],[-8.839609],[-2.426159],[1.741892],[-6.429641],[7.093638]],[[4.008817],[-1.864684],[-6.109317],[-2.336681],[-1.681111],[-6.449119],[3.091028],[2.096935]],[[5.001774],[-0.365678],[4.587666],[-1.448045],[6.143346],[9.759740],[6.439546],[1.953485]],[[-2.814436],[-5.655659],[-2.990985],[-0.019990],[-5.977216],[-2.968110],[-6.990752],[-2.091845]]], dtype = "float32")#candidate|8470|(8, 8, 1)|const|float32
uop_8471 = relay.cos(const_8470.astype('float32')) # shape=(8, 8, 1)
output = uop_8471
output2 = uop_8471
func_8477 = relay.Function([], output)
mod['func_8477'] = func_8477
mod = relay.transform.InferType()(mod)
mutated_mod['func_8477'] = func_8477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8477_call = mutated_mod.get_global_var('func_8477')
call_8478 = func_8477_call()
output = call_8478
func_8479 = relay.Function([], output)
mutated_mod['func_8479'] = func_8479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5653_call = mod.get_global_var('func_5653')
func_5654_call = mutated_mod.get_global_var('func_5654')
call_8494 = relay.TupleGetItem(func_5653_call(), 1)
call_8495 = relay.TupleGetItem(func_5654_call(), 1)
output = relay.Tuple([call_8494,])
output2 = relay.Tuple([call_8495,])
func_8504 = relay.Function([], output)
mod['func_8504'] = func_8504
mod = relay.transform.InferType()(mod)
output = func_8504()
func_8505 = relay.Function([], output)
mutated_mod['func_8505'] = func_8505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6031_call = mod.get_global_var('func_6031')
func_6032_call = mutated_mod.get_global_var('func_6032')
call_8550 = relay.TupleGetItem(func_6031_call(), 1)
call_8551 = relay.TupleGetItem(func_6032_call(), 1)
output = call_8550
output2 = call_8551
func_8562 = relay.Function([], output)
mod['func_8562'] = func_8562
mod = relay.transform.InferType()(mod)
output = func_8562()
func_8563 = relay.Function([], output)
mutated_mod['func_8563'] = func_8563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6219_call = mod.get_global_var('func_6219')
func_6221_call = mutated_mod.get_global_var('func_6221')
call_8571 = relay.TupleGetItem(func_6219_call(), 0)
call_8572 = relay.TupleGetItem(func_6221_call(), 0)
func_7501_call = mod.get_global_var('func_7501')
func_7508_call = mutated_mod.get_global_var('func_7508')
var_8581 = relay.var("var_8581", dtype = "float64", shape = (720,))#candidate|8581|(720,)|var|float64
const_8582 = relay.const([-8.776441,-4.735256,-9.210222,1.794313,8.618617,7.597515,-1.895447,-3.858773,7.305456,0.082076,-3.209098,-2.719569,-4.147397,-3.782308,6.187670,-0.064302,8.193082,-9.128650,3.954253,9.610101,-6.075801,-0.340686,4.992185,1.689001,-8.130698,2.843728,-1.592938,9.133243,4.727658,2.445573,-2.990338,-0.614167,-2.568916,2.592314,-8.767754,-9.427074,2.303728,4.343649,6.803466,-5.482546,4.656908,-0.345890,1.875247,2.619495,4.825674,-1.077519,-0.549804,3.377542,3.288287,5.305588,4.545639,-1.001462,-1.267858,-5.218877,-8.818003,8.336299,-1.247602,-5.503489,-8.698240,-0.147558,-2.577828,8.734709,3.673137,8.518067,-6.813803,-7.325093,-6.945577,-3.051410,-5.324411,-9.073401,2.752923,-6.921276,5.567816,-3.211821,-5.380178,-6.829125,3.677423,-1.476637,-9.836038,8.484125,-5.772859,2.541720,-9.798950,3.204768,-9.211998,-1.947568,-7.361945,6.888307,1.183254,6.843893,-8.488168,-4.913041,4.213418,-4.131733,-6.348812,-4.745137,0.414237,2.788916,-2.035944,-2.107949,-4.423211,-8.476179,7.829714,-4.783966,8.241786,0.104000,4.420320,3.669962,-9.214990,7.367138,8.110508,7.578868,4.114490,4.751091,2.602830,-1.409278,-7.094879,-3.212531,-5.418861,-0.153504,-6.119766,5.404418,6.849606,9.327533,-1.755495,-7.105232,-5.924210,-2.655873,-7.654631,5.613790,3.788281,6.460468,9.151259,9.194252,-2.935518,7.997999,0.286401,8.720079,-4.358933,-5.484482,4.268908,-4.428224,-1.220145,4.815996,-2.310403,6.046498,-1.926183,9.026952,-2.928574,2.001268,-7.595906,-2.410839,5.075673,-0.295326,-8.399592,-8.418826,7.070271,0.207698,7.082506,-4.808261,-7.832939,7.212245,-0.683723,-0.289240,3.990596,-6.519712,-0.678453,-1.779275,-6.798622,4.245553,1.676978,-1.635812,2.383509,0.471622,-2.838607,-7.172688,7.715257,5.657592,0.719493,-1.914048,7.076050,-9.894699,0.217696,5.105521,-7.260930,-4.225188,-5.958224,-8.842050,6.633331,-7.062494,-1.514684,-2.332486,-1.886544,5.319147,8.123360,-1.119592,-6.639343,-2.235214,6.616390,1.028822,9.290190,-1.685982,-7.657207,0.147713,-8.835306,4.868191,-2.153248,-6.065598,2.244979,-8.517647,8.673468,3.915950,-6.304932,-8.999477,5.924377,9.889659,7.424960,-8.021088,-7.031788,3.130410,6.808110,3.205514,-3.757012,-0.811927,-9.476096,-7.084859,-1.963461,1.977226,-9.032605,-7.824454,-1.840023,-7.438799,6.882877,7.532648,-1.431780,-1.177594,-8.281679,7.944306,5.345784,-2.906816,2.416489,-1.893599,5.178993,-4.786749,4.581373,7.430627,-8.453570,2.985532,7.013567,3.898763,-5.321864,3.168412,-3.155123,3.360398,5.427273,2.834797,5.209064,-3.537120,6.207762,-7.873916,1.357176,-8.898884,4.502193,-2.462772,4.938953,-3.374691,1.736496,-5.226839,-2.103669,-9.977372,1.718308,-8.847174,2.901882,4.352663,9.825141,5.231282,-4.152283,-2.199560,1.429472,-0.513765,3.598129,-7.983770,-9.490980,-5.345774,1.165586,-9.886714,-3.073484,6.846894,8.210001,-2.768774,-2.490615,-8.537976,-6.331046,-3.348653,5.220094,-2.816488,7.670123,0.244019,1.791153,-7.133461,-1.950418,7.659044,-8.253108,-1.714786,-1.460298,-3.101390,-0.898306,0.679537,-3.013452,3.948805,-6.498639,-6.406380,-9.612194,8.965420,1.785988,-6.624531,0.879414,-8.035588,-7.286170,4.467994,3.849761,3.256223,-2.368053,-6.819755,-5.735133,-6.749326,7.901460,-5.952399,0.544939,5.971945,-5.801396,-1.493164,-0.066020,2.920809,-1.870652,2.787217,-2.140517,4.576145,4.091447,5.368061,6.359070,-5.541217,-1.496794,2.017557,-8.834965,-0.939084,-6.759859,-5.159182,5.608927,-8.761870,8.185227,-0.809828,-3.968847,-1.869037,1.423755,-0.999355,-0.112912,-0.782704,7.458216,-2.547485,-0.489645,-9.969247,8.690743,3.330332,-4.161070,-1.957872,0.346820,-9.023719,6.271348,3.123191,-0.735946,6.517666,-9.926650,-3.508322,5.567807,-7.503762,7.270276,0.458128,1.752331,-9.046782,-0.769724,6.360334,0.788485,2.525478,9.786384,6.368675,-9.924790,-5.073432,-5.606537,8.547939,4.186907,-3.025611,-3.150701,5.944014,-7.809705,-9.797607], dtype = "float32")#candidate|8582|(396,)|const|float32
const_8583 = relay.const([9.647854,6.396630,1.476704,-5.765682,7.682195,5.561624,2.133753,-7.595750,-9.947374,-6.174703,-9.626043,-6.703297,6.735149,1.398433,7.916939,3.813170,0.804132,6.301431,3.531110,7.779111,-9.016600,9.393572,2.895796,-8.871432,-7.814331,-4.831895,-0.222525,3.114867,6.190879,-4.664234,0.047527,0.415826,-8.305061,-4.383674,0.066763,2.376793,-6.199672,9.084956,-9.873415,2.884970,-2.485206,5.032863,-5.761629,-4.029122,9.460765,-9.375478,-2.698265,0.459534,-0.614878,2.942142,9.410174,7.001091,3.878852,0.537476,-0.629527,-0.806121,9.045672,-1.952087,-7.912545,7.231037,9.199091,0.708226,-1.326841,1.850355,-9.460810,-3.465463,2.592906,5.888944,-5.001272,-6.887372,5.484026,-7.650339,-2.737919,-8.452510,8.611965,-3.438237,-9.787895,6.637323,-9.034815,1.053806,8.521590,0.465233,-0.668589,9.675021,2.898578,4.215233,-4.323019,9.255693,-2.454305,0.434614,-3.897438,0.339279,1.608817,9.063870,7.965797,-0.270409,-5.542223,5.431698,-3.514704,1.216392,-1.360836,-3.071613,-7.336475,0.875996,-5.030550,8.247509,-2.207327,1.426180,1.905413,5.150316,2.701741,5.541398,6.767038,-0.513973,7.860125,-2.846435,3.898266,-6.018704,-6.127679,-0.264711,-3.027977,4.979866,-2.247682,1.986072,3.251802,-2.517058,-5.404811,-0.991759,-6.061278,-4.672654,9.244864,2.988697,7.673145,-4.110137,6.438670,-7.817781,-9.896316,-3.546421,-6.319267,-9.432571,1.345272,0.037720,-1.829895,4.955190,-1.664492,-9.517005,-9.981775,-8.932192,7.705882,-0.031624,-2.841375,4.091467,-0.068848,5.282708,2.134839,9.651070,7.675026,-7.539654,-5.322731,-2.964341,9.288740,-0.685770,8.395383,-6.902570,-4.267072,3.493211,3.915106,1.059299,3.873532,6.117733,2.607230,6.546806,9.665439,-2.962874,0.393140,-8.725730,-1.752692,4.541376,-6.939908,-3.037647,-2.607498,5.824017,-3.651317,4.717293,9.787152,-6.440639,6.567659,6.229096,-0.189206,7.229637,4.176646,-5.759310,-5.606433,4.038497,0.319289,8.227595,7.327757,-8.924659,-7.157106,1.530285,-6.380003,-5.916797,1.196388,-7.506295,6.077308,-4.064295,7.751393,-9.361920,-1.221522,-9.540957,-5.049500,4.473644,-2.907931,2.009814,6.197131,9.378653,8.482523,-1.275412,6.899283,-5.509755,-8.895094,7.806725,4.776174,8.890275,2.539446,-9.053614,-8.989786,-6.073143,2.892953,6.913793,-9.562798,-0.568823,-1.113480,6.739012,0.785558,-0.646925,-2.774296,8.687871,-3.116845,8.062864,6.221553,1.803540,5.008655,-4.830836,6.079226,1.471537,-6.141870,3.031614,-0.144935,8.096707,-5.001571,9.755639,6.759138,3.548003,-3.614903,-0.017910,-7.195335,8.878803,1.489141,-3.181562,6.688945,-8.332154,0.045992,-9.396637,-8.572601,1.006402,7.637257,5.960928,3.467389,-3.610310,4.633833,1.742053,-6.537058,9.277819,2.915487,4.158295,-6.108983,-6.484340,7.422664,1.969001,-4.456744,4.737002,-7.197959,3.695098,0.143135,3.753067,-7.554735,-1.692871,0.842834,-1.698095,6.261889,3.008141,0.844849,7.322588,-9.763481,7.476595,3.086353,-7.292338,4.518101,3.905762,-4.804422,-8.041965,-9.665322,6.401198,-3.755147,-2.019292,5.666333,0.267608,3.985952,-7.111141,-8.415647,7.615879,-9.753074,9.037554,9.747330,-5.838992,9.815845,-2.576229,1.026276,7.777806,3.111683,2.611784,8.142278,9.138913,2.170490,-3.490757,8.745639,4.176765,3.713201,-8.315375,7.032994,-5.391348,0.169240,-8.116863,6.164816,-5.565334,1.295987,4.395997,5.047871,-3.258808,-4.151605,-4.225314,-0.785150,4.002497,-7.759685,-4.168488,-6.517532,-3.457157,0.557502,-6.465104,-6.048779,6.575307,-8.902308,-9.518266,1.900321,-4.152013,0.192386,-4.545025,-8.840039,7.561363,2.973236,7.584212,1.858373,6.457197,-6.175028,9.909211,-5.722847,7.644722,3.617376,-0.445519,-8.855125,0.821350,9.352574,4.090600,8.346825,-8.651281,-3.722348,0.570091,6.161925,-1.052789,-7.702637,-5.382782,-3.815082,-5.218539,9.292638,-7.365304,6.737927,8.397917,5.608783,2.759759,-7.509009,8.566504,2.692525,-6.519972,2.118928,-7.861587,-8.310351,7.103409,-7.057251,-8.999198,-3.649532,2.541778,-9.906699,9.386615,1.048369,0.928283,-4.173987,-8.370999,8.084401,2.250845,6.972813,-4.318187,-5.730297,-4.986963,8.155155,7.714235,-4.842423,-0.688846,2.784950,-6.620340,-9.457211,-7.018672,4.622540,-7.893943,0.920368,4.241099,5.554558,-3.232433,5.926774,5.006990,-6.196959,0.797426,6.689647,8.816692,8.946115,-5.594543,9.634920,-0.630620,1.282471,5.513392,-6.876930,-6.508256,4.686519,-1.079322,8.231073,9.455128,-3.665286,-6.071139,-5.755712,-0.714723,-4.110198,7.044949,-2.147223,-5.965426,-1.581406,-8.611880,-4.733246,2.848329,-7.656147,3.661437,4.832603,5.580307,9.237103,6.589122,0.855176,4.291772,-6.728522,-6.068845,-3.489319,1.465478,-2.299276,-2.952305,-4.929202,-4.348522,4.247270,-1.199539,4.995165,-0.755160,-1.984906,-1.380318,5.076008,3.664303,2.139365,-7.771768,-1.678198,-6.976322,-3.414447,8.327015,-0.680228,8.629575,2.593670,-4.017022,2.542070,4.108758,2.031677,9.217020,4.724597,-1.948583,-6.177822,8.664590,-9.488220,-1.541871,-6.451700,0.983325,3.663571,-4.716153,3.808000,9.015410,1.699161,-5.846944,0.942199,0.033346,-6.294174,1.971676,7.730768,7.016453,-5.675064,-8.778486,0.401491,-9.257451,-4.718736,-1.610589,1.873939,-3.403885,-9.147156,2.265242,-0.933337,1.065795,6.444057,-6.464894,9.218624,-2.994259,0.483666,-3.071694,6.741001,6.312564,3.330032,9.637719,-9.087947,9.456515,-9.839358,-9.874928,5.556169,8.972792,-8.765738,4.782780,1.678944,7.108596,-9.818855,6.547422,-1.793704,4.408327,-8.332423,4.585916,-8.740307,-4.945703,8.962748,-8.555484,-6.803143,0.349486,3.254250,-7.053103,5.608814,1.206463,2.927127,5.560849,6.136539,0.725066,0.267987,-1.673542,2.789330,-2.798564,3.895422,4.259497,-2.944499,-2.782855,-2.012853,-3.879391,1.506340,0.186321,-1.310942,-8.121323,-9.665263,-8.001881,-3.627371,3.421986,6.197516,1.246762,-6.939403,-5.205699,0.649604,-4.721435,8.927529,1.715095,-7.843029,6.679830,4.040728,8.941619,8.192179,4.427281,-0.061113,9.149259,-0.116205,1.452081,7.509983,9.089569,-5.986927,-4.809066,-3.929493,-2.788597,5.394668,-0.765233,-7.384950,-1.368727,7.352233,0.620148,-0.213487,6.204910,6.734064,-3.513568,-2.242227,-2.781667,1.150213,-3.761585,-8.729877,9.457868,-3.131345,7.186444,2.440355,-5.904579,7.571425,-6.236462,-9.671241,5.778671,-0.603343,-3.266704,6.040928,-7.627047,-9.486925,4.419952,5.085380,-6.893747,-9.088503,-5.399326,5.046625,-8.424548,5.296598,-2.494290,-2.888574,0.598030,1.382279,1.380252,-8.841952,-3.508828,-6.268288,-3.350680,-1.097572,6.706870,-2.683502,-6.622895,-4.509810,-0.817327,6.557472,0.772405,-1.420958,6.702121,-2.499613,5.565903,-3.265739,4.410355,6.891228,-2.005419,-4.919522,-7.604173,-6.446431,-5.183741,2.304420,-0.101586,-4.946671,-3.285511,-9.308296,-1.609209,-9.983357,-1.764883,3.930982,3.815069,6.603702,-4.064070,1.815682,-1.744573,9.706019,-7.923740,9.637630,-6.873312,-4.619455,6.388334,-1.012959,8.023090,8.575265,5.534523,-9.570537,5.623399,-0.541272,4.211173,-2.113043,8.914832,1.865961,-8.216012,-8.102168,-0.832900,9.741263,-3.085696,6.777607,-7.238016,6.690812,-1.626736,-9.681253,3.960177,7.050600,-8.625037,-1.079030,-4.736557,4.079982,-3.078601,1.908069,-9.709225,-8.941702,-1.433111,-9.326490,-5.180622,-4.006135,7.112854,-4.442631,5.183666,-9.570346,2.103921,-9.249705,-1.410591,-4.756352,1.790996,4.240341,-0.424697,-8.165735,8.607036,4.269005,-3.383309,-9.542120,-3.174299,-3.091199,1.205037,4.735270,4.808127,-0.504193,6.283464,7.550065,-7.290922,-1.961155,-5.427787,5.403716,-6.544892,-5.068074,-4.433309,-2.992800,2.198864,-1.101048,8.643128,-3.710536,8.513859,-5.020475,2.161462,-9.701836,-2.661688,7.263104,8.757188,6.046560,7.706220,2.123616,-1.222141,7.761088,-1.610204,-8.037391,4.675243,3.780045,2.563204,-3.088914,1.005515,-0.492086,9.039500,-5.038828,-9.639247,-2.714755,6.543112,7.471984,-3.032958,-4.104133,1.291312,-8.854529,6.746842,6.107917,-2.729243,4.133513,-8.448541,4.946075,5.825270,0.048590,6.682867,-1.307682,8.741954,5.602110,-2.977219,-2.475528,-4.536718,-3.568141,-7.613928,5.610518,1.972597,-8.248489,-3.874677,-5.202965,-9.772161,-3.715759,7.260961,-5.781821,-4.403389,-3.388305,1.430187,-3.774333,-6.515647,1.393851,6.881896,9.606879,-2.201804,-2.481637,1.813758,-5.457666,-0.911930,-2.467007,0.501005,-0.745595,-3.532275,-7.725247,-0.178512,9.480979,-5.789288,2.793024,9.499837,-6.227884,7.565645,8.917102,6.187306,-1.916987,-9.008092,-7.386865,5.823742,6.083389,8.975660,-2.583328,8.023418,-4.145642,-8.022519,1.905078,-0.527450,1.252246,-0.503653,9.033783,4.149763,-3.993479,-4.860854,8.773202,7.083025,2.148378,2.857639,-8.868376,8.243921,-5.659259,1.675463,-1.885065,7.095596,9.992296,-0.992489,-6.340525,-8.759544,6.630467,7.979355,-8.234487,8.937691,1.764176,8.212844,9.634310,4.397414,3.037467,3.489795,-3.740346,6.407319,5.391179,-6.216420,6.456485,-1.367329,8.974343,-4.862322,-3.941582,1.511441,-8.831667,-3.368826,-9.526576,7.302385,-3.335631,5.394170,7.421923,-9.018677,-0.202839,-9.641696,8.579744,-6.436556,-0.159908,-6.447723,-3.598986,9.504874,2.293534,1.880725,4.226722,3.366269,9.313011,-0.935987,7.577183,3.537767,-8.537594,-4.155815,-6.898058,-3.252401,0.701352,-1.298012,2.751507,-0.511325,8.081910,-3.525799,-0.877374,-6.533507,-6.690460,-7.745450,6.194469,5.315822,-6.592668,4.596391,-2.815468,1.028405,-8.382613,7.833071,6.265179,-1.187521,6.679628,7.954900,-4.656239,-5.371225,0.144445,9.772444,-7.773296,-4.545647,-1.458244,-8.604115,9.467734,-6.134393,4.196008,4.860075,6.823646,5.786340,-7.187039,-2.163730,-2.704298,5.524819,8.040016,-4.703141,3.261206,-5.139457,-9.697543,-0.451193,7.182126,9.452328,1.091397,4.947897,1.775308,5.492910,-9.714733,-9.134279,-5.118604,-6.197040,-5.957392,-6.551918,8.198232,3.531044,2.795328,6.513955,-1.801022,4.844883,-6.261238,-2.656888,2.829227,2.154946,8.643752,-9.627982,-0.969174,-8.751779,7.006040,-9.061155,4.136438,-1.102373,-1.278858,3.099799,-3.766307,-5.604177,-0.825384,-0.600679,-2.737969,3.812049,-7.525498,-9.332101,-7.623368,8.485245,6.511398,-5.653376,-4.926465,6.297776,-8.790412,3.135530,7.810528,0.941840,8.595408,4.078402,-3.076015,9.895947,-8.944425,9.625367,-2.460876,-4.445893,-4.777683,5.586841,3.200318,4.484587,6.982201,-5.544322,-6.265772,-6.141118,-7.598031,-2.738464,-9.988894,3.037152,1.392100,2.681162,6.372227,4.932461,-3.437407,-2.414693,3.545142,-6.432927,5.919454,5.456403,-3.636072,3.810101,8.402557,4.210372,8.889364,-9.236092,0.122146,4.065423,4.127175,4.950390,8.146510,8.456192,6.790659,5.756075,-7.895293,1.333929,2.316775,2.251788,-6.215122,-1.871035,6.084684,-7.950306,0.452119,-0.929558,-1.388711,-9.790815,2.591113,-1.588331,0.452332,2.311704,-8.211262,9.960920,4.451938,-2.070080,8.108855,-6.685912,0.258357,-2.598589,-8.799318,4.510284,-7.696457,-6.563886,6.322411,-0.659717,-9.071803,-9.199262,-6.851786,-9.278444,9.406273,2.592235,-1.452767,1.738330,-0.049033,-4.103656,-1.557798,4.300263,7.931995,4.515170,-0.734777,-6.310320,0.607501,0.171005,-0.218468,-9.659478], dtype = "float32")#candidate|8583|(1120,)|const|float32
var_8584 = relay.var("var_8584", dtype = "float64", shape = (26, 3))#candidate|8584|(26, 3)|var|float64
var_8585 = relay.var("var_8585", dtype = "float64", shape = (1248,))#candidate|8585|(1248,)|var|float64
call_8580 = relay.TupleGetItem(func_7501_call(relay.reshape(var_8581.astype('float64'), [9, 5, 16]), relay.reshape(const_8582.astype('float32'), [396,]), relay.reshape(const_8583.astype('float32'), [1120,]), relay.reshape(var_8584.astype('float64'), [78,]), relay.reshape(var_8585.astype('float64'), [624, 2]), ), 0)
call_8586 = relay.TupleGetItem(func_7508_call(relay.reshape(var_8581.astype('float64'), [9, 5, 16]), relay.reshape(const_8582.astype('float32'), [396,]), relay.reshape(const_8583.astype('float32'), [1120,]), relay.reshape(var_8584.astype('float64'), [78,]), relay.reshape(var_8585.astype('float64'), [624, 2]), ), 0)
func_6794_call = mod.get_global_var('func_6794')
func_6795_call = mutated_mod.get_global_var('func_6795')
call_8611 = relay.TupleGetItem(func_6794_call(), 0)
call_8612 = relay.TupleGetItem(func_6795_call(), 0)
output = relay.Tuple([call_8571,call_8580,var_8581,const_8582,const_8583,var_8584,var_8585,call_8611,])
output2 = relay.Tuple([call_8572,call_8586,var_8581,const_8582,const_8583,var_8584,var_8585,call_8612,])
func_8624 = relay.Function([var_8581,var_8584,var_8585,], output)
mod['func_8624'] = func_8624
mod = relay.transform.InferType()(mod)
var_8625 = relay.var("var_8625", dtype = "float64", shape = (720,))#candidate|8625|(720,)|var|float64
var_8626 = relay.var("var_8626", dtype = "float64", shape = (26, 3))#candidate|8626|(26, 3)|var|float64
var_8627 = relay.var("var_8627", dtype = "float64", shape = (1248,))#candidate|8627|(1248,)|var|float64
output = func_8624(var_8625,var_8626,var_8627,)
func_8628 = relay.Function([var_8625,var_8626,var_8627,], output)
mutated_mod['func_8628'] = func_8628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6031_call = mod.get_global_var('func_6031')
func_6032_call = mutated_mod.get_global_var('func_6032')
call_8654 = relay.TupleGetItem(func_6031_call(), 0)
call_8655 = relay.TupleGetItem(func_6032_call(), 0)
func_6691_call = mod.get_global_var('func_6691')
func_6695_call = mutated_mod.get_global_var('func_6695')
var_8665 = relay.var("var_8665", dtype = "float32", shape = (336,))#candidate|8665|(336,)|var|float32
var_8666 = relay.var("var_8666", dtype = "int8", shape = (360,))#candidate|8666|(360,)|var|int8
var_8667 = relay.var("var_8667", dtype = "int64", shape = (3, 500))#candidate|8667|(3, 500)|var|int64
call_8664 = relay.TupleGetItem(func_6691_call(relay.reshape(var_8665.astype('float32'), [14, 4, 6]), relay.reshape(var_8666.astype('int8'), [360,]), relay.reshape(var_8667.astype('int64'), [1500,]), ), 6)
call_8668 = relay.TupleGetItem(func_6695_call(relay.reshape(var_8665.astype('float32'), [14, 4, 6]), relay.reshape(var_8666.astype('int8'), [360,]), relay.reshape(var_8667.astype('int64'), [1500,]), ), 6)
func_6487_call = mod.get_global_var('func_6487')
func_6488_call = mutated_mod.get_global_var('func_6488')
call_8670 = relay.TupleGetItem(func_6487_call(), 0)
call_8671 = relay.TupleGetItem(func_6488_call(), 0)
func_6927_call = mod.get_global_var('func_6927')
func_6929_call = mutated_mod.get_global_var('func_6929')
call_8684 = relay.TupleGetItem(func_6927_call(), 1)
call_8685 = relay.TupleGetItem(func_6929_call(), 1)
output = relay.Tuple([call_8654,call_8664,var_8665,var_8666,var_8667,call_8670,call_8684,])
output2 = relay.Tuple([call_8655,call_8668,var_8665,var_8666,var_8667,call_8671,call_8685,])
func_8690 = relay.Function([var_8665,var_8666,var_8667,], output)
mod['func_8690'] = func_8690
mod = relay.transform.InferType()(mod)
var_8691 = relay.var("var_8691", dtype = "float32", shape = (336,))#candidate|8691|(336,)|var|float32
var_8692 = relay.var("var_8692", dtype = "int8", shape = (360,))#candidate|8692|(360,)|var|int8
var_8693 = relay.var("var_8693", dtype = "int64", shape = (3, 500))#candidate|8693|(3, 500)|var|int64
output = func_8690(var_8691,var_8692,var_8693,)
func_8694 = relay.Function([var_8691,var_8692,var_8693,], output)
mutated_mod['func_8694'] = func_8694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5017_call = mod.get_global_var('func_5017')
func_5019_call = mutated_mod.get_global_var('func_5019')
call_8739 = func_5017_call()
call_8740 = func_5017_call()
uop_8742 = relay.sin(call_8739.astype('float64')) # shape=(1, 5, 16)
uop_8744 = relay.sin(call_8740.astype('float64')) # shape=(1, 5, 16)
func_8562_call = mod.get_global_var('func_8562')
func_8563_call = mutated_mod.get_global_var('func_8563')
call_8745 = func_8562_call()
call_8746 = func_8562_call()
func_6219_call = mod.get_global_var('func_6219')
func_6221_call = mutated_mod.get_global_var('func_6221')
call_8770 = relay.TupleGetItem(func_6219_call(), 0)
call_8771 = relay.TupleGetItem(func_6221_call(), 0)
func_5082_call = mod.get_global_var('func_5082')
func_5084_call = mutated_mod.get_global_var('func_5084')
call_8776 = relay.TupleGetItem(func_5082_call(), 0)
call_8777 = relay.TupleGetItem(func_5084_call(), 0)
uop_8790 = relay.tan(uop_8742.astype('float32')) # shape=(1, 5, 16)
uop_8792 = relay.tan(uop_8744.astype('float32')) # shape=(1, 5, 16)
func_5166_call = mod.get_global_var('func_5166')
func_5167_call = mutated_mod.get_global_var('func_5167')
call_8794 = relay.TupleGetItem(func_5166_call(), 1)
call_8795 = relay.TupleGetItem(func_5167_call(), 1)
uop_8801 = relay.log(uop_8790.astype('float32')) # shape=(1, 5, 16)
uop_8803 = relay.log(uop_8792.astype('float32')) # shape=(1, 5, 16)
func_6031_call = mod.get_global_var('func_6031')
func_6032_call = mutated_mod.get_global_var('func_6032')
call_8813 = relay.TupleGetItem(func_6031_call(), 0)
call_8814 = relay.TupleGetItem(func_6032_call(), 0)
bop_8816 = relay.logical_xor(uop_8790.astype('int16'), relay.reshape(uop_8742.astype('int16'), relay.shape_of(uop_8790))) # shape=(1, 5, 16)
bop_8819 = relay.logical_xor(uop_8792.astype('int16'), relay.reshape(uop_8744.astype('int16'), relay.shape_of(uop_8792))) # shape=(1, 5, 16)
func_6452_call = mod.get_global_var('func_6452')
func_6455_call = mutated_mod.get_global_var('func_6455')
var_8849 = relay.var("var_8849", dtype = "float64", shape = (240,))#candidate|8849|(240,)|var|float64
const_8850 = relay.const([-7.991800,-6.097798,-5.231772,-9.680967,1.006803,-2.030255,7.603670,8.887066,4.182437,-5.360690,4.320664,3.606010,-5.995945,5.936941,4.690989,1.267221,-6.952563,-5.703067,-6.980132,5.070737,0.955311,-6.294482,7.142302,6.692297,8.221776,9.239104,7.683930,-5.720336,-8.769667,5.779554,-7.952453,8.845203,-3.770407,0.971686,-5.623517,-0.764716,-4.510737,6.506303,3.148735,-9.732994,-9.324854,6.773258,-5.108808,3.422473,1.172942,1.857378,-0.240024,4.644485,-1.012105,0.486249,2.384887,-0.874462,-9.802390,5.069503,-7.059034,-1.344895,7.999116,-1.768204,-8.089909,-5.850632,-8.027967,7.234532,0.130333,7.805137,-8.305561,-4.799072,1.420099,6.134204,-5.254355,6.812159,6.851590,4.922021,5.898208,-6.948272,-6.868774,8.150631,-7.885669,1.481738,5.901129,-1.805975,7.562102,8.239453,7.267266,6.030572,-1.929159,6.886363,-0.418174,-2.883761,-0.609408,1.045195,-0.282503,-6.673848,-9.946225,-9.920294,-7.143800,7.329405,6.778213,-6.314086,4.937242,4.059692,-8.725842,8.669032,2.718263,-3.038253,4.540407,-4.322641,2.641832,-4.692281,-3.853745,1.703106,0.677495,3.337179,-3.049424,-8.978983,1.946629,8.795476,-6.155611,-9.995742,-0.263050,9.348994,3.271788,3.827976,-0.837685,-0.250499,-4.870830,-5.342159,-2.312235,9.401738,6.923071,-4.146537,5.708115,1.896139,1.616240,8.864157,-0.035256,6.692582,0.322110,-2.044635,-9.532717,-5.093966,7.898146,9.009645,-7.642791,-1.319724,-9.104571,-3.343262,-9.923650,1.616851,-7.871997,7.347983,4.344311,-7.845119,-7.581252,5.991805,2.115462,6.739516,-1.069963,-1.270878,2.364401,-6.100776,2.724063,5.861115,-6.491351,2.519205,-0.888422,-5.761327,8.211508,-8.291541,0.800423,7.897073,5.995361,2.390344,1.684314,8.562838,-3.243831,-4.099754,-5.637170,9.215492,-7.135792,8.666047,-4.479927,-6.392568,-0.092297,9.491847,-7.010361,-5.570986,6.711443,2.479171,7.446776,-7.667591,6.035355,-7.892642,-7.455582,-1.356108,-7.075665,8.725738,9.987922,2.366053,-6.654255,-7.126841,6.759299,2.577441,-9.536011,1.104740,3.428325,-7.689079,-0.591067,-3.245147,-9.190163,3.304663,5.817405,8.947556,-2.669138,-4.716451,8.085394,-5.685714,-8.083001,-0.853068,-4.515063,-6.609978,1.795716,-8.032688,0.986219,-0.381011,-4.908222,1.374160,7.966986,-1.017141,0.462928,-9.604284,3.420950,0.415251,-4.830431,3.946931,0.051961,-4.985838,-9.864337,-9.462164,-8.711872,3.927746,-3.234306,-0.562853,-6.530699,6.093125,0.294213,-3.117719,-0.021088,-8.541127,4.026483,-0.568635,-1.966059,7.972431,4.388373,-0.018965,8.225116,-1.035156,-9.038247,7.122786,-3.715425,-0.969707,-3.937426,-8.164157,-0.325014,-0.728194,-2.086295,-7.232748,2.044450,5.650331,2.026204,-3.885573,-3.343919,-9.049274,0.929345,4.828577,6.237619,-9.066205,-9.918269,-9.700772,6.004437,7.358675,1.063689,-1.969728,0.470395,-7.723197,-9.203355,2.153893,4.028609,6.162958,2.621634,-2.898330,5.280212,7.145286,-8.316892,-5.110895,-2.336470,3.099642,-2.289668,-6.208863,-1.577735,-4.175934,-6.780181,7.205037,-3.232969,-8.035101,1.425786,-1.821403,7.319615,-0.249983,7.249117,-3.190503,-0.033028,-0.521757,2.509125,3.252201,8.375818,-3.382246,2.108842,4.166638,3.806786,-9.834833,5.996879,6.790725,-6.701826,-4.518238,-2.436538,5.284118,-6.286512,5.922317,-2.298803,7.604492,1.594704,3.982904,5.567006,-0.405365,5.054603,1.267880,1.672349,1.995281,9.029992,5.006249,-2.692169,-2.172862,-6.752066,4.073117,-6.794464,-0.833458,-5.103167,2.329393,2.511722,-9.278335,-9.859796,5.080467,-5.489740,7.127215,-2.749710,-9.003098,6.574624,8.260925,-8.814758,-5.212695,-8.672047,-8.051098,7.576712,-0.525979,4.724109,5.869067,8.470651,2.518021,2.520543,1.770366,-3.577889,6.565097,-6.102110,2.318761,1.671553,-1.981374,1.233510,-0.279110,-3.786820,7.517031,-5.454436,6.543218,8.122736,8.853085,8.969729,-4.254803,-0.380918,5.209530,-4.663607,-7.569294,-7.529691,5.955970,1.872785,-8.306813,8.890282,-7.276594], dtype = "float32")#candidate|8850|(396,)|const|float32
call_8848 = relay.TupleGetItem(func_6452_call(relay.reshape(var_8849.astype('float64'), [3, 5, 16]), relay.reshape(const_8850.astype('float32'), [6, 66]), ), 0)
call_8851 = relay.TupleGetItem(func_6455_call(relay.reshape(var_8849.astype('float64'), [3, 5, 16]), relay.reshape(const_8850.astype('float32'), [6, 66]), ), 0)
bop_8852 = relay.floor_mod(uop_8801.astype('float64'), relay.reshape(call_8739.astype('float64'), relay.shape_of(uop_8801))) # shape=(1, 5, 16)
bop_8855 = relay.floor_mod(uop_8803.astype('float64'), relay.reshape(call_8740.astype('float64'), relay.shape_of(uop_8803))) # shape=(1, 5, 16)
func_220_call = mod.get_global_var('func_220')
func_223_call = mutated_mod.get_global_var('func_223')
var_8863 = relay.var("var_8863", dtype = "float64", shape = (78,))#candidate|8863|(78,)|var|float64
call_8862 = func_220_call(relay.reshape(var_8863.astype('float64'), [13, 2, 3]))
call_8864 = func_220_call(relay.reshape(var_8863.astype('float64'), [13, 2, 3]))
output = relay.Tuple([call_8745,call_8770,call_8776,call_8794,call_8813,bop_8816,call_8848,var_8849,const_8850,bop_8852,call_8862,var_8863,])
output2 = relay.Tuple([call_8746,call_8771,call_8777,call_8795,call_8814,bop_8819,call_8851,var_8849,const_8850,bop_8855,call_8864,var_8863,])
func_8865 = relay.Function([var_8849,var_8863,], output)
mod['func_8865'] = func_8865
mod = relay.transform.InferType()(mod)
mutated_mod['func_8865'] = func_8865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8865_call = mutated_mod.get_global_var('func_8865')
var_8867 = relay.var("var_8867", dtype = "float64", shape = (240,))#candidate|8867|(240,)|var|float64
var_8868 = relay.var("var_8868", dtype = "float64", shape = (78,))#candidate|8868|(78,)|var|float64
call_8866 = func_8865_call(var_8867,var_8868,)
output = call_8866
func_8869 = relay.Function([var_8867,var_8868,], output)
mutated_mod['func_8869'] = func_8869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6927_call = mod.get_global_var('func_6927')
func_6929_call = mutated_mod.get_global_var('func_6929')
call_8890 = relay.TupleGetItem(func_6927_call(), 1)
call_8891 = relay.TupleGetItem(func_6929_call(), 1)
var_8896 = relay.var("var_8896", dtype = "float64", shape = (9, 5, 16))#candidate|8896|(9, 5, 16)|var|float64
bop_8897 = relay.right_shift(call_8890.astype('uint64'), var_8896.astype('uint64')) # shape=(9, 5, 16)
bop_8900 = relay.right_shift(call_8891.astype('uint64'), var_8896.astype('uint64')) # shape=(9, 5, 16)
func_5874_call = mod.get_global_var('func_5874')
func_5875_call = mutated_mod.get_global_var('func_5875')
call_8902 = relay.TupleGetItem(func_5874_call(), 0)
call_8903 = relay.TupleGetItem(func_5875_call(), 0)
output = relay.Tuple([bop_8897,call_8902,])
output2 = relay.Tuple([bop_8900,call_8903,])
func_8908 = relay.Function([var_8896,], output)
mod['func_8908'] = func_8908
mod = relay.transform.InferType()(mod)
mutated_mod['func_8908'] = func_8908
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8909 = relay.var("var_8909", dtype = "float64", shape = (9, 5, 16))#candidate|8909|(9, 5, 16)|var|float64
func_8908_call = mutated_mod.get_global_var('func_8908')
call_8910 = func_8908_call(var_8909)
output = call_8910
func_8911 = relay.Function([var_8909], output)
mutated_mod['func_8911'] = func_8911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4920_call = mod.get_global_var('func_4920')
func_4922_call = mutated_mod.get_global_var('func_4922')
call_8929 = func_4920_call()
call_8930 = func_4920_call()
output = call_8929
output2 = call_8930
func_8936 = relay.Function([], output)
mod['func_8936'] = func_8936
mod = relay.transform.InferType()(mod)
output = func_8936()
func_8937 = relay.Function([], output)
mutated_mod['func_8937'] = func_8937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5653_call = mod.get_global_var('func_5653')
func_5654_call = mutated_mod.get_global_var('func_5654')
call_9008 = relay.TupleGetItem(func_5653_call(), 1)
call_9009 = relay.TupleGetItem(func_5654_call(), 1)
func_6389_call = mod.get_global_var('func_6389')
func_6391_call = mutated_mod.get_global_var('func_6391')
call_9033 = relay.TupleGetItem(func_6389_call(), 0)
call_9034 = relay.TupleGetItem(func_6391_call(), 0)
output = relay.Tuple([call_9008,call_9033,])
output2 = relay.Tuple([call_9009,call_9034,])
func_9037 = relay.Function([], output)
mod['func_9037'] = func_9037
mod = relay.transform.InferType()(mod)
mutated_mod['func_9037'] = func_9037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9037_call = mutated_mod.get_global_var('func_9037')
call_9038 = func_9037_call()
output = call_9038
func_9039 = relay.Function([], output)
mutated_mod['func_9039'] = func_9039
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9043 = relay.var("var_9043", dtype = "float64", shape = (1, 16, 11))#candidate|9043|(1, 16, 11)|var|float64
uop_9044 = relay.asinh(var_9043.astype('float64')) # shape=(1, 16, 11)
func_6691_call = mod.get_global_var('func_6691')
func_6695_call = mutated_mod.get_global_var('func_6695')
const_9050 = relay.const([-0.139844,-8.165196,2.526726,-5.013871,0.543630,7.382255,8.327281,-7.063693,7.606433,-3.057333,-4.419524,-9.560924,-5.222428,-0.466790,4.076429,-9.900673,6.705729,-4.438048,-0.866262,1.604611,-9.939627,1.343011,7.110314,-0.251382,-4.345552,0.388620,5.147353,7.366401,-8.212105,3.208235,-4.778794,3.768547,-5.660913,1.993751,0.410802,-4.098473,4.280124,7.499321,7.962954,5.739113,-6.240440,7.208536,-2.232027,0.561575,-8.290091,-7.856070,-2.518479,-9.581983,7.280974,2.835675,1.485454,9.874523,6.817076,0.777010,-2.712669,4.734389,3.746789,-4.372095,0.895328,-1.507138,6.524954,7.671318,0.320889,-7.457823,7.923328,6.749337,-6.955208,1.836541,5.304696,-8.470911,5.590816,-8.299542,-2.659477,-3.338047,-2.472690,-9.539292,-0.723141,2.608528,5.318721,-6.330795,6.802044,3.452455,-6.156472,-8.405932,9.669748,-9.995542,-4.335445,-2.478194,2.161402,-0.222775,5.301762,8.775579,-2.834914,1.316613,9.812795,-1.197724,4.482320,-4.399229,-7.389359,5.533101,1.891314,-9.710216,-1.829213,2.076302,-3.321754,3.780428,-0.614850,6.397503,7.929782,-7.750653,-5.177176,-8.475467,2.772481,-7.119845,9.251093,6.168739,5.466354,-4.687091,-5.739236,3.808590,7.745638,4.485585,-4.781444,4.851880,3.560316,-1.444330,-8.400723,-3.505706,3.904605,-4.830348,-0.770633,3.327150,7.981163,-8.070894,6.530404,-0.485111,-0.668334,-9.628984,-4.234703,4.190922,-4.834672,-9.615957,-8.974269,-0.236757,1.619200,-3.141768,-7.327065,6.980432,8.347875,-6.568410,0.071822,8.399289,-2.602368,-3.918938,6.170836,-4.210594,8.315004,6.049468,5.518180,9.713205,-8.991712,9.414148,-9.705427,-3.117821,-8.220995,-3.591995,-4.194021,1.082329,-8.018465,7.397872,3.748341,0.721657,-4.089390,-3.786414,-3.033452,-8.212981,5.058389,1.316740,-8.962568,0.322047,-8.655523,4.333032,-1.044249,4.015712,-8.391059,-4.493993,9.293411,9.703941,-6.891249,0.254507,0.983903,2.752013,2.347428,-7.988130,4.664706,-5.985778,-9.570958,-6.561929,0.197547,5.632506,-7.338681,9.415686,1.835828,-3.713840,6.620859,-2.568895,5.183262,8.629748,-2.041506,2.006911,-3.014921,-5.979165,5.580287,7.124943,-8.461494,-1.545665,-6.383750,-6.725185,-3.197655,-6.058239,7.629259,7.925222,-9.692728,0.247917,-1.886173,-9.478922,2.143043,4.235785,2.215970,9.540743,7.433525,3.771874,4.800025,9.725146,-7.880455,9.681178,-3.399736,-7.824686,-6.499164,-3.236780,-0.075887,0.298727,0.031703,-5.023572,6.092629,-3.916740,-8.858975,-1.147040,-0.995043,0.478091,6.296875,-5.815202,0.018625,6.498960,-1.042850,5.902640,-1.667982,-1.183709,1.875033,2.737340,-8.685312,-0.290332,2.223052,0.195936,-8.754938,-1.052666,5.777852,-3.942716,2.235827,-7.159379,3.085683,7.279196,-1.185141,3.197248,-0.146530,-6.960100,-4.979206,2.977739,-8.157722,2.599168,-3.673802,-6.234256,-1.614570,-2.943884,-1.362348,-8.346086,-6.597168,-3.880623,1.315834,2.729731,-0.791430,4.333544,-6.865100,-7.057067,7.156965,8.711959,4.834745,5.490094,-0.099164,2.833852,3.877266,-2.578629,8.277567,-7.269701,-3.771410,9.693957,-2.761416,-8.336699,9.721787,0.327359,-3.602332,-8.894526,-4.928926,-6.225496,-8.946848,-5.163812,7.590976,5.274793,9.250570,9.046415,9.524179,-6.595702,4.972928,-3.534687,8.440113,2.471894,4.224616,2.550282,-3.735079,-7.016678,9.847873,-1.830271,-8.945525,-6.197880,0.165581,3.197871], dtype = "float32")#candidate|9050|(336,)|const|float32
var_9051 = relay.var("var_9051", dtype = "int8", shape = (360,))#candidate|9051|(360,)|var|int8
var_9052 = relay.var("var_9052", dtype = "int64", shape = (1500, 1))#candidate|9052|(1500, 1)|var|int64
call_9049 = relay.TupleGetItem(func_6691_call(relay.reshape(const_9050.astype('float32'), [14, 4, 6]), relay.reshape(var_9051.astype('int8'), [360,]), relay.reshape(var_9052.astype('int64'), [1500,]), ), 1)
call_9053 = relay.TupleGetItem(func_6695_call(relay.reshape(const_9050.astype('float32'), [14, 4, 6]), relay.reshape(var_9051.astype('int8'), [360,]), relay.reshape(var_9052.astype('int64'), [1500,]), ), 1)
output = relay.Tuple([uop_9044,call_9049,const_9050,var_9051,var_9052,])
output2 = relay.Tuple([uop_9044,call_9053,const_9050,var_9051,var_9052,])
func_9061 = relay.Function([var_9043,var_9051,var_9052,], output)
mod['func_9061'] = func_9061
mod = relay.transform.InferType()(mod)
var_9062 = relay.var("var_9062", dtype = "float64", shape = (1, 16, 11))#candidate|9062|(1, 16, 11)|var|float64
var_9063 = relay.var("var_9063", dtype = "int8", shape = (360,))#candidate|9063|(360,)|var|int8
var_9064 = relay.var("var_9064", dtype = "int64", shape = (1500, 1))#candidate|9064|(1500, 1)|var|int64
output = func_9061(var_9062,var_9063,var_9064,)
func_9065 = relay.Function([var_9062,var_9063,var_9064,], output)
mutated_mod['func_9065'] = func_9065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7954_call = mod.get_global_var('func_7954')
func_7956_call = mutated_mod.get_global_var('func_7956')
call_9216 = relay.TupleGetItem(func_7954_call(), 0)
call_9217 = relay.TupleGetItem(func_7956_call(), 0)
output = relay.Tuple([call_9216,])
output2 = relay.Tuple([call_9217,])
func_9237 = relay.Function([], output)
mod['func_9237'] = func_9237
mod = relay.transform.InferType()(mod)
output = func_9237()
func_9238 = relay.Function([], output)
mutated_mod['func_9238'] = func_9238
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9275 = relay.var("var_9275", dtype = "uint32", shape = (15, 6, 1))#candidate|9275|(15, 6, 1)|var|uint32
const_9276 = relay.const([[[-9,-3,-6,-1,-8,1,-6,5,-10],[4,-3,-5,-2,-3,5,8,3,-6],[-8,1,6,7,-3,-9,-3,9,2],[6,-10,2,-7,7,6,8,-2,1],[-2,-1,9,6,-5,-9,2,-2,6],[-6,-8,2,10,-7,-10,-2,7,7]],[[-5,9,1,6,5,4,2,6,-4],[-4,-2,-7,-9,5,4,3,7,7],[10,-9,-1,-10,-4,-5,-9,-3,1],[-3,10,-8,2,-2,-1,-4,4,10],[8,-2,-8,-1,9,-8,-3,-1,-1],[-7,-10,1,-10,6,10,-3,8,9]],[[4,5,-3,2,-5,10,3,10,-4],[7,-6,10,-9,-2,-8,-4,-2,-6],[1,-2,-2,-4,-8,10,-3,-8,10],[-5,-10,-7,-10,1,-8,-9,-6,5],[1,-4,-4,-3,-3,-6,-2,3,9],[-2,-1,-3,1,-7,-2,4,-4,4]],[[-5,4,9,-1,2,5,-4,-2,-10],[-3,6,-6,4,2,10,-7,5,3],[5,7,9,-9,-6,5,8,5,-8],[4,2,-2,-2,-9,2,10,-7,-5],[8,-7,-6,10,-2,8,5,4,8],[2,-6,-8,3,6,-7,-6,6,9]],[[8,4,2,2,1,-9,-3,-10,1],[9,-6,-6,7,-7,-5,-3,-6,3],[-8,-7,2,-2,6,3,-10,3,-9],[-8,-1,9,3,-9,2,7,8,1],[-10,2,-4,5,-9,-9,-7,7,4],[-4,-2,6,-4,4,-6,1,-7,-4]],[[-9,-5,7,-1,1,-2,7,-1,-8],[3,-9,5,1,3,-10,10,-10,-10],[-9,1,10,-4,-1,6,-2,-3,-5],[6,4,-7,-10,6,4,-7,8,2],[5,-6,10,6,-10,-3,-9,2,-10],[-10,8,2,-1,-4,9,6,1,-2]],[[4,3,9,1,-4,-3,-4,9,-8],[-3,-10,-7,-4,-4,-7,-5,4,-4],[-3,1,8,4,-9,-3,3,-6,-4],[3,6,-4,-6,3,-9,5,2,9],[-1,1,7,-7,-9,-3,-3,-10,8],[3,2,-5,1,-3,5,-2,-7,8]],[[-4,-4,5,-5,-8,1,-6,9,8],[-9,2,-3,-3,7,7,-4,8,5],[7,-6,-4,8,-9,10,-1,-8,10],[-3,-8,5,-6,8,8,9,-5,10],[-2,-1,-7,10,-1,-4,2,6,-8],[7,1,-7,-1,6,-3,-7,-7,6]],[[1,-4,4,3,-3,-8,-1,4,10],[-1,-10,-9,5,8,4,6,9,6],[-5,-1,-10,-1,4,3,9,-7,2],[1,-1,7,-2,9,-10,7,5,-6],[-9,-6,-4,-8,-2,3,-8,9,-3],[5,9,7,10,-7,-1,2,3,4]],[[-4,2,5,9,-2,-5,7,10,-3],[-9,10,9,-2,3,6,3,-10,-7],[-2,10,-7,7,-2,-3,-4,7,-10],[-5,-7,6,-6,5,-5,2,-1,1],[5,3,7,-4,8,-2,10,-1,-8],[8,7,1,-8,-9,-3,-4,-8,-10]],[[4,-5,5,-3,7,-10,10,-8,-5],[-8,1,-9,-6,7,-1,9,8,8],[-1,8,4,2,10,-10,2,6,-3],[-10,-10,-5,1,-6,9,-4,-6,10],[-2,5,-6,-7,-3,2,9,-7,8],[-2,9,9,4,2,-6,2,-7,-2]],[[-2,-3,-5,2,-8,5,-2,-6,4],[1,-9,-10,5,6,10,9,8,-8],[-9,-7,9,5,-8,4,-8,-10,6],[-5,3,-5,9,5,-5,2,-3,-1],[2,4,8,-2,3,-5,-3,1,2],[-8,-9,-8,-6,-6,-9,3,-2,-1]],[[-5,7,6,-6,-4,4,-3,7,-7],[-4,-7,-4,-7,10,-4,-2,-6,8],[2,-3,-2,-2,-1,-5,-6,-1,-1],[-9,-4,2,2,8,2,9,9,-10],[-9,6,-1,-8,1,-10,-8,5,-10],[9,-10,9,2,-3,2,-2,6,-10]],[[-10,-4,2,5,2,10,-6,3,6],[7,-2,1,-6,4,10,8,6,10],[5,6,7,1,-6,1,-10,2,-1],[-5,-5,-8,7,-6,8,-9,-1,-2],[4,4,-10,4,3,2,-10,-10,10],[-1,-2,9,2,4,-4,4,10,8]],[[4,1,-9,-3,2,3,9,-6,-10],[4,-5,-5,-5,-7,-6,-6,-8,-8],[-10,3,4,3,-9,-8,-5,10,1],[9,4,-8,2,3,-10,6,-3,1],[6,-3,-4,3,-3,9,8,-7,-5],[-5,10,-8,10,-2,4,10,-7,4]]], dtype = "uint32")#candidate|9276|(15, 6, 9)|const|uint32
bop_9277 = relay.greater(var_9275.astype('bool'), const_9276.astype('bool')) # shape=(15, 6, 9)
uop_9281 = relay.log10(var_9275.astype('float64')) # shape=(15, 6, 1)
output = relay.Tuple([bop_9277,uop_9281,])
output2 = relay.Tuple([bop_9277,uop_9281,])
func_9285 = relay.Function([var_9275,], output)
mod['func_9285'] = func_9285
mod = relay.transform.InferType()(mod)
mutated_mod['func_9285'] = func_9285
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9286 = relay.var("var_9286", dtype = "uint32", shape = (15, 6, 1))#candidate|9286|(15, 6, 1)|var|uint32
func_9285_call = mutated_mod.get_global_var('func_9285')
call_9287 = func_9285_call(var_9286)
output = call_9287
func_9288 = relay.Function([var_9286], output)
mutated_mod['func_9288'] = func_9288
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9327 = relay.var("var_9327", dtype = "int16", shape = (10, 7, 14))#candidate|9327|(10, 7, 14)|var|int16
var_9328 = relay.var("var_9328", dtype = "int16", shape = (10, 7, 14))#candidate|9328|(10, 7, 14)|var|int16
bop_9329 = relay.subtract(var_9327.astype('int16'), relay.reshape(var_9328.astype('int16'), relay.shape_of(var_9327))) # shape=(10, 7, 14)
output = relay.Tuple([bop_9329,])
output2 = relay.Tuple([bop_9329,])
func_9344 = relay.Function([var_9327,var_9328,], output)
mod['func_9344'] = func_9344
mod = relay.transform.InferType()(mod)
mutated_mod['func_9344'] = func_9344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9344_call = mutated_mod.get_global_var('func_9344')
var_9346 = relay.var("var_9346", dtype = "int16", shape = (10, 7, 14))#candidate|9346|(10, 7, 14)|var|int16
var_9347 = relay.var("var_9347", dtype = "int16", shape = (10, 7, 14))#candidate|9347|(10, 7, 14)|var|int16
call_9345 = func_9344_call(var_9346,var_9347,)
output = call_9345
func_9348 = relay.Function([var_9346,var_9347,], output)
mutated_mod['func_9348'] = func_9348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8562_call = mod.get_global_var('func_8562')
func_8563_call = mutated_mod.get_global_var('func_8563')
call_9378 = func_8562_call()
call_9379 = func_8562_call()
output = relay.Tuple([call_9378,])
output2 = relay.Tuple([call_9379,])
func_9384 = relay.Function([], output)
mod['func_9384'] = func_9384
mod = relay.transform.InferType()(mod)
output = func_9384()
func_9385 = relay.Function([], output)
mutated_mod['func_9385'] = func_9385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7259_call = mod.get_global_var('func_7259')
func_7260_call = mutated_mod.get_global_var('func_7260')
call_9430 = func_7259_call()
call_9431 = func_7259_call()
output = relay.Tuple([call_9430,])
output2 = relay.Tuple([call_9431,])
func_9432 = relay.Function([], output)
mod['func_9432'] = func_9432
mod = relay.transform.InferType()(mod)
output = func_9432()
func_9433 = relay.Function([], output)
mutated_mod['func_9433'] = func_9433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5833_call = mod.get_global_var('func_5833')
func_5835_call = mutated_mod.get_global_var('func_5835')
call_9595 = func_5833_call()
call_9596 = func_5833_call()
output = relay.Tuple([call_9595,])
output2 = relay.Tuple([call_9596,])
func_9597 = relay.Function([], output)
mod['func_9597'] = func_9597
mod = relay.transform.InferType()(mod)
mutated_mod['func_9597'] = func_9597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9597_call = mutated_mod.get_global_var('func_9597')
call_9598 = func_9597_call()
output = call_9598
func_9599 = relay.Function([], output)
mutated_mod['func_9599'] = func_9599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6550_call = mod.get_global_var('func_6550')
func_6552_call = mutated_mod.get_global_var('func_6552')
call_9649 = relay.TupleGetItem(func_6550_call(), 1)
call_9650 = relay.TupleGetItem(func_6552_call(), 1)
output = call_9649
output2 = call_9650
func_9680 = relay.Function([], output)
mod['func_9680'] = func_9680
mod = relay.transform.InferType()(mod)
mutated_mod['func_9680'] = func_9680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9680_call = mutated_mod.get_global_var('func_9680')
call_9681 = func_9680_call()
output = call_9681
func_9682 = relay.Function([], output)
mutated_mod['func_9682'] = func_9682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7546_call = mod.get_global_var('func_7546')
func_7547_call = mutated_mod.get_global_var('func_7547')
call_9690 = relay.TupleGetItem(func_7546_call(), 0)
call_9691 = relay.TupleGetItem(func_7547_call(), 0)
func_8477_call = mod.get_global_var('func_8477')
func_8479_call = mutated_mod.get_global_var('func_8479')
call_9706 = func_8477_call()
call_9707 = func_8477_call()
func_4785_call = mod.get_global_var('func_4785')
func_4787_call = mutated_mod.get_global_var('func_4787')
call_9720 = relay.TupleGetItem(func_4785_call(), 1)
call_9721 = relay.TupleGetItem(func_4787_call(), 1)
output = relay.Tuple([call_9690,call_9706,call_9720,])
output2 = relay.Tuple([call_9691,call_9707,call_9721,])
func_9760 = relay.Function([], output)
mod['func_9760'] = func_9760
mod = relay.transform.InferType()(mod)
mutated_mod['func_9760'] = func_9760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9760_call = mutated_mod.get_global_var('func_9760')
call_9761 = func_9760_call()
output = call_9761
func_9762 = relay.Function([], output)
mutated_mod['func_9762'] = func_9762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5035_call = mod.get_global_var('func_5035')
func_5037_call = mutated_mod.get_global_var('func_5037')
call_9801 = relay.TupleGetItem(func_5035_call(), 0)
call_9802 = relay.TupleGetItem(func_5037_call(), 0)
func_948_call = mod.get_global_var('func_948')
func_952_call = mutated_mod.get_global_var('func_952')
const_9811 = relay.const([[-2.682682,-7.917067,-2.979545,6.028509,7.308803,9.663028,-3.899799],[2.689924,9.301780,8.391044,-2.073760,-5.874934,4.686119,-4.706136],[-1.269622,0.421859,9.815271,-5.246139,-7.016375,-5.474861,6.167158],[-9.135125,-3.452215,3.261388,5.429510,5.354987,-7.540934,-5.410469],[7.127994,4.474495,-0.119700,-5.761308,-7.576565,1.413385,4.772943],[-1.362011,4.594661,-5.473596,3.710993,-2.101843,0.070589,-6.115292],[9.816378,1.310549,4.486243,-2.739434,-7.255811,2.298512,-5.895245],[5.737228,-7.792072,-8.162770,-8.723231,8.678530,-7.602477,2.991068],[2.013318,6.463312,-7.396025,3.943115,1.169083,4.931081,0.645565],[5.841469,5.695715,0.896611,-5.910731,8.184744,-1.619971,-7.550849],[-0.808557,-2.337758,2.949625,7.941931,4.484815,4.314457,-1.021682],[-5.099337,8.404621,2.097351,-4.786257,-5.812334,-5.395719,-1.495781],[6.574186,6.374905,-3.293998,6.813559,4.996814,4.450064,-3.142723],[-0.392727,5.528178,-5.664407,-9.056123,8.378809,-1.884303,7.472708]], dtype = "float64")#candidate|9811|(14, 7)|const|float64
const_9812 = relay.const([6.477822,2.247955,2.360596,6.950319,5.072298,1.236947,-1.880585,-4.730174,-5.451255,-8.901500,7.197771,9.447609,-1.244552,-4.061416,-5.840015,-4.895870,9.532814,0.272595,-5.936839,2.037799,7.072583,7.982128,-0.755580,7.688068,-9.470785,9.738363,7.561527,3.953442,-5.590770,-7.139882,-4.100357,-3.532443,-5.261527,-3.827024,-0.498530,-5.430886,-4.546739,3.632785,2.812829,9.056708,5.713599,6.828305,0.715131,-1.168070,6.803658,8.861867,6.062894,7.590513,9.364873,-0.377904,9.044509,-3.828305,2.860098,2.203083,-2.214294,-6.039201,3.123960,9.922581,3.443462,-6.515740,-3.979122,-4.813936,7.587642,8.673464,9.974736,8.550310,-6.488118,-3.299070,1.858743,-9.185101,-0.995395,1.716493,8.744421,-8.720274,-0.465053,5.474028,-1.532538,-4.760797,9.927002,4.526274,-3.367531,3.329170,-8.232953,-5.714503,9.531485,7.261416,0.234655,-6.258228,6.666285,7.662075,9.872631,-6.723165,-8.654890,-9.417745,-4.951895,-4.855942,-2.966774,7.302589,1.292620,-4.804862,5.752492,-2.254513,8.098494,7.165474,-6.256195,-4.772634,0.438329,7.673763,-2.172699,3.442070,1.799370,7.675470,8.881728,-1.434572,-5.787636,-8.743646,0.939771,-8.367552,0.729513,7.839448,4.184279,3.224201,2.556342,-2.080029,-8.166606,-6.728429,-4.006901,7.665118,8.197161,-4.269614,1.534304,0.854860,-3.081111,4.415807,0.009056,3.813056,-7.442932,6.998450,1.047727,0.057819,6.640144,-1.735634,0.136926,4.797535,2.527496,-4.002971,-0.284738,1.029977,-7.859788,-7.282394,-6.381621,-1.912844,3.967952,-1.619149,5.028141,-5.436277,3.478303,-3.656127,3.402802,2.802913,-4.767702,4.521512,5.126993,9.137889,3.771608,4.885043,0.790965,-8.477492,8.608484,7.553446,0.804745,8.360435,-1.534166,1.573343,-7.344347,7.594481,0.710794,3.459600,8.075657,-4.410859,1.002419,-5.436366,8.316710,3.557768,6.656329,0.486687,-2.597993,-5.770911,9.262807,-1.114328,-4.097376,-2.176235,-1.111388,9.171994,-3.651803,-4.064849,7.530443,-4.759646,-4.165292,-0.004848,-7.264517,-4.053851,-3.670312,-8.854467,-1.376355,6.680321,-8.847573,-3.802595,-4.292831,-0.479320,1.797690,-9.038099,-6.701887,0.180175,-2.564427,-3.538802,-1.602219,4.396597,6.571768,-3.291574,0.850882,3.675875,8.572295,-2.934519,3.704835,-8.637223,-7.944916,4.053108,0.615690,0.804435,-3.370691,-5.313922,-6.742911,-1.405438,8.865652,9.373509,-5.278904,-9.023242,4.267121,6.135872,-5.165527,0.767591,-6.749494,2.016418,-4.431485,8.433831,-3.573831,6.425929,-7.305299,5.500864,-0.272012,-8.354107,4.596236,-4.650014,1.595308,5.395747,4.086484,-7.382180,2.405649,8.324873,-5.519964,6.554949,-8.058506,3.836828,-7.533913,9.427189,-4.637929,1.250565,-3.151617,-5.129879,-6.706831,1.595461,-0.694114,8.319258,3.770662,9.580157,-3.509352,7.023106,1.035160,6.293297,4.664617,-3.253125,-4.675286,3.017967,0.447289,-1.133957,1.797188,5.136718,-0.843820,6.598915,7.714242,4.269481,4.784534,2.599593,-1.912127,-7.856687,5.558692,2.836049,8.177852,-6.374407,-3.487660,-2.977149,2.665329,7.704967,-7.271261,1.394451,-1.579984,1.997349,8.407019,-0.623171,1.360304,6.519408,-8.666237,-9.784327,1.641236,-0.697298,-3.791908,8.581687,9.341448,0.333628,-7.722520,7.603956,4.900061,-8.273553,3.066418,-5.303056,-3.370038,9.046197,-2.678727,-5.465274,2.761562,6.996193,0.354999,0.636025,-6.917512,-6.680712,8.806151,1.539325,2.541281,-8.766658,-8.716000,8.347717,-8.316702,6.754752,0.572395,2.898686,9.498367,-5.181303,3.260224,5.308924,-7.707038,-0.695704,4.680289,-1.359932,-9.213102,-0.761985,-3.682960,8.878680,-7.875149,5.609962,-2.894091,-4.601510,-7.550332,-3.464822,-6.081200,2.209381,2.373953,0.576689,0.812316,3.945252,-0.857032,-9.265246,-5.224206,3.195100,8.909945,-9.671616,3.914045,8.360909,9.612066,-7.981519,4.974747,-1.281907,0.652041,9.416561,9.531485,-7.744346,-3.585664,-3.652503,-4.647430,-1.433354,0.414218,5.881879,8.295566,-9.511323,-2.076370,0.302572,-9.725513,3.863299,1.540755,-4.887827,0.714696,-2.380134,4.953877,-5.981985,-5.377880,9.729033,3.592946,3.125657,2.694725,6.697313,-8.416832,2.922785,-6.399385,-9.593282,-1.802924,8.194201,-4.749987,8.658498,-2.130555,1.233771,-1.419167,-5.298694,-3.038440,2.224818,3.221982,6.018753,7.159946,-5.416985,7.639000,3.984167,4.537694,-8.170151,-6.517404,-0.184606,7.589816,0.406120,-9.908100,-0.514027,1.192032,8.981307,-6.258896,-2.812783,6.067743,-2.980209,-5.943341,-0.521269,-8.780744,5.050823,7.689799,3.565279,4.830702,-3.613323,5.120305,-4.598456,-7.733224,6.150815,9.169336,-2.704250,1.101204,8.473980,-3.220784,2.600521,-1.423744,6.330804,-5.147438,1.835013,-4.825117,-2.459949,-8.009388,-5.029121,-6.888203,7.221055,-7.909394,-7.707943,-9.900114,8.450115,-9.118446,7.628902,6.374321,-7.535207,-1.538840,7.872141,3.394862,-1.589312,1.211663,0.364939,-5.020102,5.265437,-9.842160,-9.091888,1.983132,-5.740124,6.539516,5.846446,-9.392929,-6.927900,4.586322,6.784701,0.736691,-4.158725,5.716431,-4.854603,-8.267822,-6.957480,-3.133462,-8.126484,-7.994280,0.743823,-7.359585,-3.683989,-9.504912,2.629567,-5.425469,-6.141947,-6.196928,-8.856763,-7.683970,-8.774781,-9.600085,-8.802389,5.780535,8.086246,1.643258,6.664119,3.557560,-8.136542,9.892376,5.855007,8.342731,8.946078,-8.403160,8.486233,0.768310,2.978021,-5.343715,-4.645713,-8.812190,7.303857,-2.667999,-3.730771,-1.700107,8.857059,-0.870711,2.044803,-3.174936,-3.908115,4.422577,-2.878053,4.557582,-9.973091,9.786640,6.200286,-6.261950,9.181829,-1.987746,-3.652717,-7.213666,-0.647017,-2.415599,-9.416752,-5.058373,5.058203,-0.650709,-2.691720,-8.879386,4.137884,8.521020,8.093854,7.037651,-2.642409,-2.752926,-7.190824,-5.365301,-7.797255,8.927999,-4.090434,1.511220,6.498021,1.034752,4.291237,-2.418255,6.360100,3.848791,-9.659871,8.632873,-4.873173,5.203420,-8.744425,4.955678,9.763728,-4.808958,5.883990,5.575947,0.015337,-8.984396,-5.398557,-5.347015,4.832937,2.299039,-5.237668,-8.383151,-1.439766,-2.325945,-3.806314,2.175605,-2.452265,4.786148,2.431629,-3.656640,1.802369,4.507529,7.808290,2.290594,-4.017928,-9.926853,3.916415,8.100949,8.578256,-4.670908,-4.525671,9.477498,1.181256,-2.587592,1.478214,-8.246317,7.559525,7.318980,9.724027,2.384980,1.382699,-8.045778,4.533334,-0.164890,4.723484,-2.553361,7.633002,-7.054351,-5.088000,2.243726,1.089191,-3.140913,-8.216729,-3.802209,-9.930883,5.839789,3.026973,-8.955520,6.595338,1.553760,9.188943,-9.785557,0.965940,-7.018186,6.198056,-4.584287,3.813558,-6.025828,-0.747934,1.278615,-2.075000,-0.454858,-7.024058,-9.790925,5.994336,8.006370,9.843901,1.656517,-8.538508,-2.939488,-1.862682,2.814577,1.131977,2.558042,-3.989307,-6.257804,3.100205,-4.723644,9.889097,6.997612,4.603999,-6.623709,4.124656,3.589129,6.542220,7.276600,-0.832330,8.096228,-4.366906,7.919750,7.821827,-3.927457,-6.691202,-4.865358,9.781002,7.970073,-6.080339,-6.152189,5.230611,-9.584294,6.272298,-8.795217,-0.728837,-6.772845,-3.016706,0.993248,9.750466,-3.273799,-6.289782,-2.180200,4.327315,-1.776325,5.798827,8.821056,5.642797,0.732132,8.466564,-9.371665,5.814915,6.107956,7.755198,2.721735,-5.798139,-9.017564,-0.458374,-7.333983,-5.755979,-9.421096,2.783168,8.249338,9.170608,-9.086524,-0.224247,-4.528755,7.450034,-8.660623,-3.145557,9.471929,5.596025,6.853990,-9.751155,3.139431,9.023175,-4.043134,5.923582,8.844970,-6.587176,-2.246062,-9.690293,-2.658808,-5.371675,-1.825517,-7.027067,4.760569,-6.100609,-1.255833,-2.188790,2.138803,3.781567,0.699831,4.498771,1.787286,-7.333946,1.066795,-4.411232,-6.801181,-4.354769,1.145119,-5.318075,-9.095119,7.482254,-4.326364,9.905844,0.989636,1.110982,0.120664,7.670459,8.631547,-5.248479,8.531687,-9.031698,8.841755,-8.010866,-6.502154,8.405663,2.797112,4.232513,2.003476,-1.509601,7.171584,3.299339,-8.610370,3.755748,-4.283018,-5.503866,-6.452399,1.918344,1.120079,-3.504525,-4.792747,8.810391,-4.013485,3.400937,6.190756,8.289316,-9.374649,3.559531,2.070017,-3.047202,7.719708,6.733078,3.191964,6.691092,1.146645,-1.138162,-7.728919,3.868586,-6.743610,-5.044711,-5.963218,-0.920967,-3.544367,-9.010628,-3.311529,5.425474,6.416824,4.759912,1.430944,-9.580683,-0.742228,-4.471530,-6.497314,-1.437307,8.443441,-9.538532,-6.799562,-5.072786,-2.638779,-5.672560,6.876816,-8.909730,8.379700,3.049634,5.688690,5.869750,9.860417,-1.360501,5.029618,-6.409050,8.879064,9.830866,-7.870304,-1.844827,-6.485249,8.557721,-9.461277,-1.935875,-6.578602,-9.982431,2.235191,6.286037,0.712370,-1.977278,-1.470719,2.196481,8.836911,4.127586,-3.723282,1.465198,6.790273,-6.007833,-6.608245,7.521700,0.008850,-8.291979,3.243020,3.505759,7.438492,7.317378,-8.292160,5.754832,9.697350,3.578666,-4.912181,-1.862943,-4.377407,4.195874,-1.317304,4.112989,-1.565698,-6.826285,8.850453,9.398543,-7.066658,9.226756,6.492813,-5.093189,0.098172,9.425906,-3.475504,7.170496,-5.408610,-5.647733,2.369409,-2.204539,9.902014,7.559321,-4.022893,-1.815754,-4.506686,-9.454581,-4.835958,-0.372252,-4.333054,-0.354591,-8.705777,7.755513,-8.418051,3.003436,2.964913,-0.734814,-9.439764,-4.810814,-9.224241,6.930979,-6.673663,-0.002425,5.543463,-5.225888,-1.889127,-1.950499,7.173670,-2.324207,9.269732,3.157884,2.863481,-4.579077,-7.333167,9.362354,2.273115,0.218431,-5.555659,-7.639499,-2.373450,6.305116,9.305546,1.528568,-1.594264,2.225816,7.682872,-0.441724,-0.773388,3.629702,3.691650,1.976920,8.495027,-6.602366,-7.844582,6.465183,-7.020098,-0.401850,0.993185,-9.915227,6.818550,9.625965,-9.819519,0.692928,-5.988584,6.966037,9.588515,-3.502891,1.905967,-6.593323,-6.987884,9.715474,7.090582,-9.936391,0.502952,-6.098188,-5.513479,-3.146924,9.302668,7.195724,-7.864108,-6.367046,8.716127,-3.477669,1.935145,4.696534,0.197776,-5.630541,-5.583878,3.656946,0.109522,-8.350897,9.398154,9.000108,-3.425723,4.506216,1.314501,9.366787,-0.750056,-7.413605,-5.825313,5.490104,-6.520842,-9.913150,5.418551,-9.927143,3.889147,-4.130469,7.271615,-9.055033,9.819785,-2.245766,7.419393,6.611353,-7.720250,6.836181,3.069473,-1.032347,4.090487,-3.807880,-4.415083,7.407866,0.111904,-5.609286,9.979631,9.841313,-5.333491,-9.408905,2.791182,-0.421142,5.808811,-0.197622,-3.205879,-1.647256,-9.599512,-5.049396,3.830920,-5.423108,-6.781628,-6.697271,6.842038,-5.296067,4.066143,8.604298,-2.206306,-6.533867,-7.079337,5.237641,6.445790,-8.784176,-9.403403,-8.592626,-9.714603,0.287500,-0.070296,8.921601,3.029736,7.538717,-0.165479,6.200832,-8.479352,-3.143111,-8.642880,-9.883227,6.720950,4.783803,7.546583,7.462968,5.493537,-4.201214,-9.817262,1.349268,6.311977,3.675735,-8.144237,2.119606,-8.357466,6.675536,6.018211,6.680521,-4.219673,-1.936027,-6.760649,7.576240,-5.894101,0.166535,0.220370,-0.964813,-3.176513,-0.799738,-9.089329,6.921873,6.421151,-9.501041,-7.087935,6.217424,-1.754679,2.035608,-1.354981,-5.458513,-6.869113,5.677579,3.900876,0.667480,0.889762,-6.923083,6.260354,3.707017,-6.264509,7.841110,8.322598,3.978693,-0.385438,-1.204798,8.107521,-5.115938,3.152564,-2.500652,2.465348,-7.777115,7.068089,3.558207,-5.878447,-0.507175,-3.526532,-6.636574,-4.780588,6.038344,-5.334834,6.453053,8.688992,2.760683,-2.672098,0.603362,8.296434,-6.030321,-8.612773,6.296353,-9.808160,7.092073,9.217914,-7.949678,8.802566,6.628950,-8.034545,8.152845,-2.246805,-3.862218,-6.417616,-8.535268,4.492579,6.986955,-0.008620,-9.926668,-0.984906,6.247530,4.028928,3.989116,-6.425003,-8.212496,-1.552110,-3.896069,0.564843,7.893383,-2.672295,8.335386,-2.372236,6.110442,-1.954687,-9.167212,4.998589,-1.182488,0.090028,3.717615,-8.489514,-6.432772,4.470215,7.736335,7.328848,4.704346,2.481886,4.560925,2.677760,-4.970248,5.239621,-0.129974,4.923868,4.792157,-7.734311,-7.548864,8.836611,1.291415,3.451373,2.560901,1.272510,-5.755646,5.599672,6.631746,-0.292052,-4.895781,-4.215968,-4.699294,-3.054455,-8.362949,-5.074729,8.377964,-0.404180,-1.234424,-7.497411,-5.202024,-3.654618,-1.409796,8.142547,-5.296399,4.618705,6.410763,8.718877,1.756851,4.477738,0.741780,-6.669747,0.777762,9.482512,-7.463780,0.112303,-7.149150,5.012525,-8.432727,-6.482255,-7.711329,2.569719,0.404319,4.199105,-3.850919,-2.484259,-5.449918,8.183941,0.093536,-6.452880,-9.742546,1.124471,5.912035,1.635065,4.473063,5.292048,4.421543,9.826696,1.704438,-1.867602,1.446744,0.211982,8.845758,-7.841646,-9.045484,5.272267,-9.668006,2.128690,3.469057,3.272512,-9.981994,3.905264,-4.924246,-1.996605,2.154326,3.802065,8.028958,4.382599,4.832581,-5.312583,-4.697611,-7.217808,-8.116811,-8.744533,-7.780827,-2.951125,-2.184850,0.310348,-7.582185,4.514145,-9.655674,-6.871636,1.976632,-3.377928,1.860657,-8.605274,-5.496873,7.237393,-7.876550,9.759689,8.023422,0.209856,4.700521,-2.634433,-7.681548,4.747638,7.846635,8.882442,0.915647,1.825636,-7.894269,-6.613040,0.799045,6.469807,-7.740797,-1.522251,-3.603217,6.031203,-4.142790,0.098508,7.060733,2.936612,-0.653343,-1.007776,6.666992,1.273741,0.953052,-7.373173,1.110770,9.500345,-0.859322,9.339159,8.856579,-2.238374,8.501740,0.136275,5.086760,6.365757,9.227584,7.772358,9.431933,-9.413883,8.883780,7.910893,-1.992500,-1.982271,8.898635,1.821109,-4.699733,-0.869490,7.812053,3.074629,5.949264], dtype = "float32")#candidate|9812|(1344,)|const|float32
call_9810 = relay.TupleGetItem(func_948_call(relay.reshape(const_9811.astype('float64'), [1, 14, 7]), relay.reshape(const_9812.astype('float32'), [1344, 1]), ), 1)
call_9813 = relay.TupleGetItem(func_952_call(relay.reshape(const_9811.astype('float64'), [1, 14, 7]), relay.reshape(const_9812.astype('float32'), [1344, 1]), ), 1)
output = relay.Tuple([call_9801,call_9810,const_9811,const_9812,])
output2 = relay.Tuple([call_9802,call_9813,const_9811,const_9812,])
func_9819 = relay.Function([], output)
mod['func_9819'] = func_9819
mod = relay.transform.InferType()(mod)
output = func_9819()
func_9820 = relay.Function([], output)
mutated_mod['func_9820'] = func_9820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5017_call = mod.get_global_var('func_5017')
func_5019_call = mutated_mod.get_global_var('func_5019')
call_9823 = func_5017_call()
call_9824 = func_5017_call()
func_923_call = mod.get_global_var('func_923')
func_926_call = mutated_mod.get_global_var('func_926')
const_9826 = relay.const([[10,10,-3,-9,-1,6,-9,-9,5,-2,4,-6,-7,-6,8,1,-4,-10,-8,-7,1,-8,-8,-5,-1,-1,-8,10,9,-10,-4,4,1,-4,2,8,7,-4,-3,7,7,-10,2,-10,8,7,-2,9,-7,-4,8,-2,10,-1,6,-8,5,-8,8,9,10,9,9,5,2,-4,-1,-7,-6,-3,-8,7,-1,-4,5,-6,-1,6,2,5,1,6,8,3,4,6,9,7,10,-10,5,9,8,8,-7,5,4,9,5,-8,10,-10,9,8,9,4,3,-1,-9,2,-2,3,6,-10,6,9,3,-4,7,2,1,1,9,4,1,-5,10,-2,2,9,-1,-5,-8,-7,-2,-10,-2,4,2,-1,-3,-7,4,1,-1,-5,9,-7,8,1,-10,2,1,-5,-5,8,-5,-1,4,5,10,-10,-8,5,8,6,6,-1,-6,-10,5,7,2,-8,-9,4,3,-8,10,8,9,5,4,10,4,-10,-7,8,-6,8,1,5,-5,-4,-6,2,-6,9,-4,-1,1,9,10,-9,-6,-10,-10,-1,-9,1,-7,1,1,5,-10,-6,-8,3,4,4,1,-7,10,8,-2,5,2,-5,7,-10,6,2,-1,-4,8,-5,4,10,9,-5,6,10,-9,3,-5,-5,-7,9,-3,-2,-2,10,8,-4,-9,-10,1,5,7,6,-8,-6,-9,4,-9,2,3,9,-1,2,4,-7,4,-6,9,-4,6,-4,5,8,-4,7,-2,1,-1,-5,5,-3,3,1,-3,1,-4,-6,-4,-3,5,-8,-6,2,1,4,1,-6,-7,8,-1,1,5,4,-10,-8,9,-1,4,-4,-1,3,-6,-6,-6,-4,5,-2,-1,-8,7,7,1,-3,-1,1,7,-6,3,-7,8,7,5,4,10,-10,-9,3,4,6,-4,9,-1,4]], dtype = "int64")#candidate|9826|(1, 350)|const|int64
call_9825 = relay.TupleGetItem(func_923_call(relay.reshape(const_9826.astype('int64'), [5, 10, 7])), 1)
call_9827 = relay.TupleGetItem(func_926_call(relay.reshape(const_9826.astype('int64'), [5, 10, 7])), 1)
const_9829 = relay.const([[1,4,1,3,4,-8,-4,-1,-6,-2,-6,-3,-6,-9,-6,-10,8,6,-7,-1,8,-2,-6,9,-7,2,-5,-10,-9,-5,-7,2,10,-5,9,-8,7,-1,-10,-4,3,-4,10,9,-3,4,9,5,6,-8,6,-3,-3,-6,7,4,8,10,2,-9,2,-4,9,-2,-9,-1,-6,10,1,4,7,-9,6,5,9,-2,5,-3,7,-1,-6,1,-9,1,6,7,5,-10,-5,10,7,6,10,-8,3,-3,-4,-10,7,2,-9,9,-4,5,-2,-5,7,-2,-9,3,-2,2,1,10,3,1,8,6,-9,-3,-7,9,-8,-10,1,-2,10,-10,7,-10,9,-2,1,1,10,10,-10,1,2,-8,9,-8,3,-1,-8,-1,-2,6,-3,-5,8,-2,8,8,-9,3,-6,6,-8,2,-5,3,-7,3,3,-5,-5,1,2,-3,8,8,6,-5,-10,8,-7,-5,9,4,-5,-3,8,4,-5,-3,-3,-5,5,-3,7,10,-4,10,-2,5,5,-10,4,-5,10,-10,-8,-4,-6,-10,10,-9,-5,-6,-1,-4,9,-1,7,1,-3,4,7,6,5,-8,-6,-9,-4,-7,6,-3,-7,-9,10,6,3,7,-6,-5,9,-5,-10,7,9,-1,9,-1,10,-3,-10,-4,-8,2,3,6,3,-8,-8,-9,3,4,-7,10,-7,-8,1,1,-2,-5,2,-9,-3,-10,-6,-7,-10,-10,-10,-4,3,-5,3,-6,-10,-4,-2,-9,-3,-5,-7,-7,5,-4,8,-1,10,-7,-3,2,4,6,-10,-1,6,-2,-8,2,6,8,5,-5,5,-2,5,-2,1,-6,-4,5,-3,-3,-4,4,-4,-4,-2,-6,10,-7,-3,5,8,-6,-10,-2,-8,6,1,-1,-4,4,3,7,9,8,5,-7,-9,-5,5,-4,4,6],[1,10,4,3,5,9,-4,-5,2,-1,-4,2,6,4,-7,7,8,3,-5,-7,6,4,7,-8,1,2,8,7,-9,7,-9,-3,-4,-9,5,-9,4,-1,-3,9,-8,1,4,-3,-9,8,5,-7,2,-9,-3,-7,4,-7,-7,-2,9,3,3,8,-6,-4,-10,1,-8,-8,-1,-6,-3,5,-1,-4,-2,6,3,-9,-10,10,-5,-3,-3,2,10,-2,-2,2,4,4,5,3,-3,6,7,-5,-9,3,-3,-8,2,-3,-5,-8,3,6,3,5,-2,-1,-7,1,-7,7,-1,1,5,10,1,8,3,3,3,-3,-8,-6,-9,10,3,-3,4,-8,10,-8,7,6,-2,-5,6,2,10,-9,-4,6,10,-2,5,-3,7,5,-9,-5,1,-8,7,1,5,-8,-10,-6,4,-3,7,4,-9,-1,4,-3,-3,-2,-8,-10,2,4,2,2,-10,-7,-3,5,3,-4,10,-2,6,-5,-6,1,-3,-9,7,-3,6,-3,2,-3,-4,4,4,-8,7,-7,10,-10,-3,10,-10,-4,-2,7,7,-2,7,-4,9,1,7,10,6,-8,9,-6,10,5,-10,-9,2,-9,-5,-10,-7,10,-9,-9,10,-1,-7,8,-10,1,-7,7,2,-10,1,1,1,9,-4,4,-6,-3,-3,-2,7,-2,-4,6,7,2,6,-5,7,-8,2,2,-8,-3,-9,-3,-8,3,-6,-7,6,2,-3,10,10,-10,9,-2,-9,7,10,6,-7,-2,-7,7,-10,-5,3,-4,3,-5,6,-1,-2,4,-10,-4,9,-1,4,-8,-6,-9,8,2,-7,-8,-4,-9,7,10,4,-8,9,7,-7,8,-8,2,10,1,-3,-10,6,-5,3,-4,-9,-7,-2,-4,1,-2,-10,-9,10,-8,7,-10,-7,9,10,6,6,10,10,-4],[-5,-2,-3,-5,-8,-8,5,9,-4,-4,2,8,5,-3,-1,6,7,10,10,5,-2,-5,4,1,-4,4,6,3,1,6,5,7,1,-2,-7,-9,3,-8,-9,4,-5,-9,-2,10,-10,-5,-8,7,-2,-10,-9,9,-4,8,5,9,2,-1,-2,-10,-7,9,9,-7,-8,-9,-8,6,5,-7,6,2,-6,4,4,-2,1,8,-9,1,2,4,-8,3,-6,4,6,2,9,-2,2,-3,7,-2,-8,6,3,-1,-2,-4,5,-10,4,-7,-8,5,2,4,3,8,1,1,-3,6,-7,4,8,6,-6,6,-9,5,-3,3,-6,-7,-6,-10,-1,4,7,-1,-2,1,-10,-1,2,-4,-6,10,9,-9,-6,-4,7,6,-8,1,7,-9,8,8,7,-4,-1,4,-4,5,-2,-8,8,3,4,-9,3,-8,9,1,-7,10,-1,-8,-7,-6,3,-8,-1,-9,4,-4,6,-9,7,3,-7,6,5,-7,-8,-1,-9,1,9,-3,-8,1,-10,-8,-10,-4,4,-9,3,-3,-8,-9,-5,-7,2,9,-8,3,1,-6,4,2,-10,-9,6,4,-8,3,5,10,-1,-7,-9,8,2,3,-5,-6,-5,-10,8,-6,-8,2,8,-1,10,9,-8,9,2,8,6,-6,10,3,1,8,8,-3,9,5,-1,9,1,1,-2,3,-4,9,5,6,1,5,2,-6,-3,-2,-7,-6,-1,-4,-8,8,-7,6,1,8,-5,-1,-3,2,10,-4,5,9,-9,-6,1,-6,3,10,5,-5,-3,9,-5,-5,5,4,-9,5,-8,-2,-4,-9,2,2,9,10,-4,-9,-2,-4,4,-6,-10,1,-9,-9,3,2,7,-3,-1,-8,3,-4,4,1,-5,-2,-5,5,8,-9,-1,-6,-4,5,-3,-10,2,3,-3,7],[1,-5,2,2,-3,1,-3,10,-6,-5,-8,5,-1,10,-3,2,-4,-2,-4,-8,-5,-10,-4,6,-5,-8,7,7,-2,-4,3,10,-10,6,5,4,1,-10,4,4,8,4,-5,-5,-7,-5,2,8,8,-9,-7,6,-7,-4,10,-10,-2,-4,-7,-8,-8,7,-8,4,-10,-2,-8,-7,-3,-3,3,-3,-10,-3,-8,5,4,5,-8,2,4,7,2,-4,-6,-10,-2,5,-2,3,1,-5,10,1,-1,-8,-8,-4,10,7,-6,-7,2,4,-2,5,5,-8,-1,6,1,6,8,10,-9,4,-4,8,4,-1,9,8,7,10,7,2,10,9,-8,-6,6,4,2,7,2,-10,5,4,8,-1,-1,-4,1,-9,-2,5,4,9,9,-1,5,3,-1,-3,-2,3,7,4,-1,-4,7,-3,9,8,10,-9,3,5,9,-5,2,4,-7,7,3,-1,1,5,7,-7,5,2,-10,-5,4,-1,2,-6,-6,-7,4,-1,-3,6,2,-7,-3,-8,-7,-3,-5,-5,-10,7,4,8,3,5,-8,10,-6,8,7,2,10,-2,8,3,-10,7,-4,2,-6,7,-7,3,-3,3,-8,-3,10,5,-5,-7,9,-9,-1,-2,9,9,6,9,7,-1,-9,-3,-2,-7,7,3,10,-8,-6,-5,10,1,10,-7,-4,-1,-5,-9,3,5,10,5,-4,8,-3,-3,9,-9,3,-3,6,-9,-10,-9,6,4,-4,5,-2,-5,8,-8,-3,-7,6,-5,-5,3,-5,-8,-8,9,1,-9,-9,-10,6,5,6,6,-1,4,7,1,2,5,10,-2,-7,6,7,4,-3,-3,-2,-10,-9,-1,4,8,-9,-5,-6,4,10,-1,5,10,-8,-8,1,-5,2,7,-8,-1,-10,10,5,-1,-3,4,10,7,-9,10],[2,-10,-3,-10,6,10,8,-1,-5,10,7,-7,9,6,-10,8,2,-6,-7,-6,8,10,-7,10,5,9,3,-8,-1,-10,1,-10,-6,-9,-5,-7,-10,-8,9,-6,-8,-6,-10,-5,9,9,1,-4,-8,-1,8,5,-4,5,-2,8,8,3,6,-1,3,-8,1,-1,-5,-3,10,-2,-2,-8,2,4,-7,9,7,2,-10,-4,2,-2,-8,3,5,-2,4,1,5,-5,-6,-8,4,3,-10,-7,-4,3,-7,8,2,1,10,-10,-9,9,-1,8,-7,-1,10,1,-8,4,1,-9,3,-8,10,-10,-5,4,-6,-1,-5,-1,-2,-9,-1,8,-6,-4,7,-6,10,-7,4,10,6,-6,6,6,-4,-10,7,-6,9,3,-1,-2,-2,-5,2,10,-7,-9,-6,2,-9,2,4,-8,-7,6,8,1,9,-10,-1,1,9,-2,-6,-2,1,-10,3,8,8,9,4,-8,6,-5,10,-7,-7,-1,-7,5,-8,-1,-2,-10,4,8,9,-2,6,2,-5,-5,9,-5,-1,-4,-7,10,5,2,9,-9,6,1,-1,7,3,-10,10,-1,-8,-9,-10,-4,9,6,4,4,9,3,8,9,4,4,-7,-6,-9,-7,4,-8,7,-8,-1,2,-8,9,-7,-9,-8,-6,9,-9,6,9,-7,-2,-3,7,5,-4,-4,-10,1,-5,-2,5,2,-2,-2,-10,-10,-5,-3,6,2,10,3,1,9,5,7,-5,-8,9,7,-10,10,-9,8,2,5,7,3,-2,-2,-6,-10,7,-7,7,6,1,5,-2,7,-4,-7,10,9,-4,10,-1,10,-8,6,3,3,9,-5,-10,4,-5,-6,-3,-7,-7,9,-7,10,8,-1,10,-4,-3,-2,1,8,9,1,7,10,-6,4,8,1,9,-6,9,10,8,4,7],[5,3,9,3,8,10,5,5,5,-9,5,-10,-7,-6,-8,-4,-3,9,9,-5,3,10,-5,-3,10,-1,9,3,-2,10,6,-2,-1,10,5,8,1,6,-4,6,3,3,1,-10,5,-4,4,-7,-9,6,4,-1,-3,-9,-6,-2,-4,-10,9,1,-10,4,-3,8,9,7,9,8,-5,-8,6,9,-3,5,9,-5,-1,4,1,7,7,7,1,5,-4,6,-2,-10,-6,-6,-10,-5,-3,6,-2,-6,-6,4,-8,-3,3,-2,6,10,6,-6,-1,9,1,-8,10,-1,-6,-4,-3,9,-8,-1,-3,-4,-8,-7,-1,-1,-4,5,-2,10,9,-4,-1,-8,-6,-3,9,7,-10,-4,-1,-5,-5,-8,-7,7,-2,-10,-6,4,-7,-10,-6,4,3,7,5,10,-2,-9,7,-7,-8,6,5,-7,-8,-9,-6,-10,-10,-3,-1,-7,1,4,-3,-9,-7,-7,4,3,3,-6,-4,7,5,1,3,1,-5,4,-5,10,-7,-2,-1,10,-8,2,-3,8,-1,6,-8,-9,-1,4,5,7,9,10,-8,-5,-9,8,7,1,-6,1,-3,10,3,-9,-6,-8,-8,8,-1,2,-9,1,8,-4,-9,10,-5,-6,-4,7,-3,-8,3,7,-8,-3,3,3,-8,-8,1,-10,2,-5,3,8,-8,9,2,-5,-8,7,4,3,-4,10,-10,-2,-8,-9,-10,9,5,1,-5,-10,-7,-2,-7,-3,-7,8,3,10,-8,4,-9,-8,-10,-4,5,6,2,-3,5,10,10,9,-8,5,-1,-8,2,7,-4,7,-6,3,2,-7,-3,9,4,5,9,2,10,10,-5,-4,-7,-10,5,-1,1,-4,-4,6,-10,-2,4,9,-3,8,6,-6,-4,-8,-4,-5,-6,7,-9,9,-7,-10,-4,-5,-8,4,-6,6],[1,-8,-2,7,-10,-9,-1,-10,-1,7,9,-4,-6,10,-3,1,-2,-8,-10,4,1,-10,-4,-1,3,2,-2,1,-9,10,-9,3,-10,8,7,-1,-7,-1,5,10,1,-2,-10,-1,-3,-10,-3,-6,5,-2,-7,-1,6,-7,-5,9,-1,-9,3,10,2,-10,5,6,9,-10,-3,-1,4,-9,7,3,10,-8,1,-9,-2,-5,-5,4,-3,2,-7,6,-3,10,-5,-7,-4,-8,-7,-7,-7,3,-5,8,3,-5,-1,4,6,-3,5,-7,-6,-6,-3,-1,7,-2,3,2,10,-8,8,6,-4,-4,10,1,-8,1,2,-2,8,-3,6,8,-3,-6,8,5,-10,2,2,-7,10,2,2,3,9,-10,1,8,4,-5,5,-4,-10,-4,2,3,-9,-6,-8,-10,4,10,8,9,2,-4,-5,2,7,-8,-7,-10,5,-9,4,-9,-1,-4,-9,-3,-9,9,-5,1,-7,10,-1,4,6,-8,5,9,-6,-9,5,5,-6,10,-5,5,4,-8,6,1,-5,2,-4,-8,-3,-5,-8,4,5,7,-9,-10,8,7,9,-5,5,-4,10,1,-10,6,5,4,-6,-9,-5,-5,6,6,10,-10,3,-7,-10,10,3,8,6,9,4,6,-7,-2,-4,10,2,-10,6,9,4,-5,-3,-8,-6,-10,4,-8,6,-6,10,4,-8,8,2,9,5,6,1,-9,-10,7,-5,-5,-7,-3,8,9,-4,9,4,-3,-4,-7,2,1,-4,-7,7,2,-4,-1,2,6,8,-3,3,-1,6,3,-3,3,-5,6,2,-6,-3,-9,-10,3,10,2,4,2,1,-10,-10,-4,3,8,10,-4,-2,9,9,2,10,5,-5,-5,-2,3,-10,-10,-8,10,2,-10,6,10,1,-7,4,-6,8,-7,8,4,-10,-1],[-1,-6,-5,-1,6,-8,-3,-2,6,-6,-1,5,-7,-7,1,5,9,9,8,8,-3,-4,1,1,-4,-2,-4,-4,5,-7,-9,2,-4,5,3,9,-8,-2,9,-8,4,9,8,10,7,4,10,6,-9,7,2,9,8,-3,-7,-1,-1,-9,-4,-4,6,6,4,-3,3,-4,-5,9,6,-10,10,-4,-2,2,3,8,6,7,-10,-4,10,9,2,-9,-9,9,-2,2,5,-3,-4,10,-9,-9,-7,1,10,3,10,-10,4,-8,-2,4,6,8,10,-9,4,7,2,9,2,6,7,-10,-5,9,3,-7,-1,-9,2,2,-10,7,9,-4,9,4,5,-5,4,-8,-7,6,-7,-1,-6,4,3,6,7,-4,1,10,-2,8,3,5,-8,-8,-9,-5,3,1,-3,8,8,-6,-10,8,-5,9,10,-8,8,-7,-6,-2,-4,-2,9,-8,-2,9,-5,3,3,8,10,4,-1,-5,-5,-5,-9,9,7,-8,-4,-10,-3,-6,6,2,9,4,-8,6,-5,6,8,-3,-1,-3,-7,1,-7,-8,3,1,-7,2,1,3,-9,-1,2,-3,4,-7,10,-4,-9,3,4,5,-6,-1,7,6,-10,-4,-8,5,-4,4,-4,-2,-1,-6,9,-8,-8,-4,2,-2,7,-5,2,9,-6,-1,-3,5,8,-1,-3,-3,-10,8,7,4,-8,8,-3,-6,-2,-1,-10,9,10,-6,-8,5,-6,-10,5,-8,5,2,5,-6,7,-3,4,8,1,6,-2,7,-6,-2,1,5,-8,-3,-9,1,6,6,6,-5,-7,-6,4,9,-2,-4,-3,-10,-7,3,2,3,-7,-2,-2,-10,10,8,-1,3,-9,8,-5,2,-1,-8,-8,3,-10,8,3,-9,-6,-6,-7,2,-7,8,7,4,5,-1,4,10,-2,-4],[-8,8,3,3,-5,5,-3,6,1,10,-3,-10,-6,1,-9,-4,1,1,8,-3,8,8,1,3,-3,9,-3,-5,7,10,-4,-3,8,10,-7,-2,-10,-6,2,2,-4,5,10,-10,-7,-3,5,-9,-9,1,-1,2,-3,4,-10,3,9,-1,8,-8,-2,-10,-6,-9,6,-10,3,2,-10,1,7,4,-2,7,-6,4,5,-4,3,-3,-5,9,6,-4,-10,-8,1,-2,-7,-2,3,3,-2,-8,-2,3,5,5,-3,-10,8,-9,10,-1,-2,1,10,3,5,-6,-2,6,3,1,-2,1,8,8,-1,6,9,1,3,1,5,5,-6,-9,4,-5,2,6,-5,-10,1,-2,-3,-2,-6,6,-8,-3,4,3,1,-4,-3,-4,5,5,-8,-8,9,-9,3,-8,-8,7,-2,-8,10,5,2,-2,-3,-5,-3,4,-5,8,-10,-10,5,8,8,2,10,1,-9,1,1,5,-10,-7,3,2,-2,-2,10,6,-8,7,-6,-9,3,-6,-5,10,9,-10,-5,-6,7,-3,7,-4,-8,10,9,-10,1,-9,-7,2,8,-8,8,-9,-3,-1,-4,3,6,-7,-5,9,2,-2,7,-7,-10,6,-1,3,9,-4,9,-4,-3,1,-9,5,8,-2,-3,-10,4,-1,2,8,-7,2,-10,-10,1,-2,-2,2,4,5,-1,-2,-2,7,-6,7,7,-7,8,-1,-9,-9,-10,2,-3,5,3,-8,-10,-3,1,-10,-9,-7,-6,-6,-1,-7,6,-7,8,4,9,10,-8,-6,1,1,-2,-7,-5,5,-7,-7,4,1,-7,-5,8,4,6,-7,3,-9,6,-5,-8,-9,3,-10,-1,8,8,2,9,-2,-5,4,-6,-5,6,3,10,-2,9,1,5,-6,5,8,4,-8,8,-9,2,9,3,3,6,-6],[9,3,-9,8,-8,5,-6,-3,3,-3,5,3,5,-1,3,-4,-7,8,-9,-7,3,-9,4,-7,5,4,-1,-9,-4,5,-10,-4,9,2,-6,-5,2,10,-7,5,-7,3,7,-2,4,2,10,10,6,7,2,5,-5,2,-1,5,7,4,2,6,-5,8,4,5,2,4,-2,-8,3,1,6,-2,6,4,3,-1,-10,-4,-9,-4,10,4,8,-1,1,-5,-7,-7,-4,-8,3,-5,-10,-7,7,1,9,1,7,-8,-3,-5,-9,-3,5,10,-3,-3,4,-2,-1,-2,8,10,5,-6,-3,9,5,-7,-3,10,-1,-7,-5,8,3,10,3,-1,-8,-7,7,-4,-5,-3,-5,-4,-10,-1,-1,-2,-1,10,-4,10,-7,4,-2,8,-7,-6,6,9,3,2,1,10,8,-3,10,-4,-2,-3,-5,2,4,4,-9,7,-5,6,2,-7,6,1,-5,5,3,4,10,10,5,3,9,6,8,-1,9,-9,9,-3,6,4,9,-7,-3,5,3,3,-8,7,2,6,-5,8,-6,-8,10,-10,-1,10,-4,-3,-2,8,-7,8,2,-3,-9,-10,-2,7,-2,5,-4,7,-9,-6,9,5,-8,5,6,-6,1,-2,-6,-6,-8,2,-7,1,-1,9,10,6,-6,9,-1,1,-2,-4,3,-7,-3,4,-9,-6,-3,-10,10,10,-9,9,5,1,-2,6,-6,-6,-5,1,-5,-4,-3,-9,2,-8,-2,10,-7,-5,-5,4,-5,2,-1,3,9,2,6,4,5,-9,-1,2,-8,-8,-9,6,-5,5,-9,-9,8,10,-3,1,6,-4,-9,-4,-5,-1,7,10,6,-5,6,5,5,9,10,5,10,-3,-6,-5,1,5,3,-7,3,-4,-6,-2,-4,9,10,10,-5,-10,-1,-4,-1,8,6,-3],[-7,-5,-7,4,-9,5,-10,1,9,-8,6,-3,-1,-3,8,6,-6,-10,10,-4,10,-10,8,6,3,-10,-4,-10,-5,3,-10,1,-2,10,-9,-2,-6,9,-4,-1,-9,-7,-5,-9,9,-6,-3,-8,-1,6,5,-9,8,4,5,10,10,6,-4,6,8,-6,-10,-3,-3,1,7,-8,9,9,-1,7,-6,-7,-9,8,6,8,8,-8,-2,-10,10,4,-4,-5,-1,6,-7,-10,7,-6,9,8,-7,2,-7,8,2,9,6,1,-8,5,-2,-4,10,-2,7,-10,-8,4,5,-1,6,1,3,9,2,7,-6,3,-4,-9,-4,-5,-9,6,-3,-1,8,-10,5,-4,-3,1,5,-7,8,8,-5,6,4,-8,-10,7,-2,-1,-8,5,8,-3,9,-10,6,-1,-2,6,9,-2,-4,9,8,4,6,7,5,-7,-10,1,8,8,9,8,8,8,-9,-8,6,-2,1,-8,-9,-1,3,-6,6,-3,-10,4,8,-9,-9,-5,9,9,9,6,-2,9,-9,-8,-1,-1,-9,8,-4,-8,6,-8,-3,6,-4,-1,9,2,5,4,-1,8,9,9,2,8,1,4,-5,-7,3,5,-8,-2,9,10,3,9,-3,-5,6,-3,-1,2,-7,5,6,2,7,8,1,7,5,6,-4,3,6,6,4,5,4,-1,-8,-6,-10,4,-4,7,-4,-7,6,8,-7,1,-2,-3,6,9,-9,-2,1,10,4,-7,10,9,-4,-8,-3,4,-7,4,-3,9,9,-10,-5,8,-10,8,-6,6,5,-5,-6,6,6,-7,2,-10,5,-1,-2,10,1,4,8,-1,5,-3,-5,-4,-6,9,-7,9,10,-4,7,8,3,-7,-3,6,-4,-9,-8,1,4,-2,-10,-2,-10,-7,-10,9,7,6,6,-8,-9,-1]], dtype = "int64")#candidate|9829|(11, 350)|const|int64
bop_9830 = relay.logical_or(const_9826.astype('bool'), const_9829.astype('bool')) # shape=(11, 350)
bop_9838 = relay.logical_and(bop_9830.astype('bool'), const_9826.astype('bool')) # shape=(11, 350)
output = relay.Tuple([call_9823,call_9825,bop_9838,])
output2 = relay.Tuple([call_9824,call_9827,bop_9838,])
func_9849 = relay.Function([], output)
mod['func_9849'] = func_9849
mod = relay.transform.InferType()(mod)
output = func_9849()
func_9850 = relay.Function([], output)
mutated_mod['func_9850'] = func_9850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5035_call = mod.get_global_var('func_5035')
func_5037_call = mutated_mod.get_global_var('func_5037')
call_9870 = relay.TupleGetItem(func_5035_call(), 0)
call_9871 = relay.TupleGetItem(func_5037_call(), 0)
func_8214_call = mod.get_global_var('func_8214')
func_8215_call = mutated_mod.get_global_var('func_8215')
call_9894 = relay.TupleGetItem(func_8214_call(), 0)
call_9895 = relay.TupleGetItem(func_8215_call(), 0)
const_9896 = relay.const([[[8.325308,6.841566,-6.327466,-8.996394,3.896803,3.274112,0.724654,-8.976351,9.689726,-4.889188,-5.526417,-2.997867,-5.475528,-8.244721,6.064733,8.982353],[2.959130,9.087769,0.952953,7.874994,-7.129589,-4.529599,-1.512892,4.511070,4.543654,-6.385638,7.460758,-0.093527,3.246106,6.880912,-6.222124,3.147557],[0.935296,4.994551,6.505388,2.114758,7.309465,5.456965,4.537345,-2.263842,1.863255,-3.722933,8.623689,-5.206129,1.432221,0.587387,-2.591313,-7.179746],[2.741591,-8.205786,-3.810602,-8.784836,2.155578,2.561083,-1.423011,-3.305462,-9.433982,-2.508280,0.375535,6.661813,-7.341955,1.687275,6.588818,-1.909300],[4.780991,8.381038,4.879847,-4.162616,-0.499142,7.213626,4.401542,-8.213024,-9.597873,4.416812,3.222582,4.519863,9.494755,-5.369847,-0.046976,1.266403]],[[-3.160924,8.865127,-9.373420,-9.619267,7.464961,0.857637,4.456056,-6.659951,-5.977832,-1.554521,-4.059984,8.520646,-5.115762,9.624492,-7.509791,-8.599928],[1.896878,-0.888696,2.962791,-5.940312,-9.779097,2.417365,7.590939,-0.064637,1.895026,1.980070,-0.577345,4.689179,2.649261,3.623129,8.388640,-8.299642],[0.314247,-9.947580,4.457440,3.727218,-9.109627,-2.639164,-2.637882,1.032767,0.319166,-0.146772,0.200631,-9.666458,-3.663005,6.203725,6.554596,-0.071862],[-0.270936,-7.107064,-6.485078,-7.741827,-0.679238,-4.054289,0.881685,0.331610,4.596175,-0.039766,9.027999,6.959951,-0.811201,-5.426494,-5.633744,-3.727228],[3.966467,-2.136118,-4.866537,2.092272,0.633638,0.019551,7.852776,7.858636,-5.019508,-1.675365,-6.372950,3.367908,-7.326392,2.167614,1.639058,2.364545]],[[-9.954816,-6.958058,-4.573930,7.567961,6.247631,-5.445052,0.070052,8.775001,6.774205,-6.425367,7.240601,-7.872660,0.440358,-5.317506,6.550352,4.478902],[-5.348180,-9.402136,5.373823,-7.773305,1.044420,-7.900640,3.015376,-4.388911,6.328078,-8.045917,2.229727,-5.097242,-1.625263,0.566755,-7.202561,6.350606],[-3.688048,-6.207613,-9.214369,-3.559680,9.757320,-4.199303,7.068161,-9.773850,2.514537,1.526579,6.831222,5.697907,8.805614,-1.109083,-2.389846,-5.422314],[5.170660,-6.969905,7.225179,1.459940,4.010620,9.246006,3.725262,8.141896,3.635003,6.971412,-3.277222,-4.174827,1.998628,-1.716049,8.818249,-1.521590],[0.677934,-6.814966,3.791554,2.692811,4.438467,6.568003,-0.782846,-8.326622,-3.471826,3.998347,-5.006941,-2.746399,-4.252290,4.740737,9.375776,-8.171529]],[[9.667948,9.568116,9.922009,8.093992,-8.225210,6.211486,-8.378391,-6.299942,3.568890,3.613121,7.414673,4.601667,-0.624347,9.205747,-1.513608,-7.508359],[-4.709193,-1.442436,3.472783,9.289714,5.446735,-7.363317,-2.603109,-0.811412,-4.633623,9.661592,5.029570,7.954982,-1.747485,5.488071,3.360645,-1.531641],[5.253071,2.960723,-2.197394,-7.056133,2.319259,9.898344,8.460366,5.366823,-0.981878,-7.404085,5.215494,5.149532,-8.533968,-3.325355,0.758792,-6.505559],[6.398197,0.754086,-8.840142,7.950164,-3.826100,0.225737,-7.111627,-0.690443,0.152551,-9.290628,-6.654763,-4.543415,-9.174006,-2.096735,2.574927,5.204745],[-6.214716,3.642876,-3.011448,-2.401548,9.626321,1.934267,-2.714872,-2.819055,-9.637498,-5.470198,6.771603,8.917287,6.943977,9.572996,-7.196686,-5.861613]],[[9.191992,2.314693,-8.419422,-0.001420,4.027437,-0.842327,4.924545,-9.251143,7.776736,3.447338,4.247979,4.465927,-0.909599,-4.619268,0.198429,-9.122695],[-3.927162,-0.524887,2.208785,-9.873211,-7.490607,0.140782,-6.555630,6.392842,-0.359068,-8.198385,-3.978139,3.712295,-9.154914,7.095768,-0.799934,-4.222040],[-0.851049,8.011858,8.344030,-1.926606,-1.869073,-1.255004,0.162734,5.620896,-3.600589,-5.653988,5.751685,0.482932,7.400841,0.833263,-1.401556,-4.267306],[-3.240118,8.321018,2.207642,-5.650497,9.740697,-3.843690,-3.399376,-2.248262,4.889528,1.805807,-7.363557,-3.633568,-7.993300,2.665185,2.975507,3.220526],[-8.901301,-8.198004,-7.414799,4.160917,9.412810,2.306522,9.524875,-7.133611,-0.599247,9.761798,-1.549495,-3.510175,2.783556,-7.895076,1.783082,9.097888]],[[-3.480172,3.350332,-0.067043,-2.413350,7.395982,5.761519,7.281388,5.053347,-8.118473,3.120067,2.402344,8.609261,5.473774,6.297458,0.500117,-9.396712],[-2.324668,-0.763613,3.676764,-2.747063,-6.310702,0.517976,3.633115,3.021290,-9.500610,8.830141,-9.563650,-3.894908,-8.442409,-5.563917,-9.790626,3.378095],[5.498641,9.873440,-2.563684,8.116653,-7.406374,-1.158249,2.046448,3.836462,-2.808581,3.646883,4.304083,1.752433,-6.568239,5.290248,-6.603807,8.520628],[-5.975452,-3.240043,0.408724,-3.965448,6.497392,4.579155,-1.303140,-5.298288,9.546308,-0.483820,3.172334,-9.126795,5.140169,5.914846,-2.487856,3.578016],[3.868840,6.473703,6.238734,-8.157804,9.229584,-8.673692,-4.006537,-1.749726,-1.324928,-4.404117,-0.143131,4.204887,-0.434037,-5.056361,-5.260246,-3.735117]],[[6.008793,-7.045552,4.012062,0.763302,-1.649679,-0.999098,-6.964789,6.910090,4.754729,0.284351,-2.905787,-3.011563,5.321391,-3.033976,-1.748763,5.147111],[-3.088432,8.451216,4.707687,-7.173977,-0.288909,-9.785265,-2.397949,6.977828,-8.035183,1.570518,-5.703401,0.489686,-1.121035,6.507782,-0.634820,3.686299],[-2.369301,-1.833087,5.809481,1.048503,-9.349748,0.323115,2.106097,-2.920141,5.763641,4.877966,2.140909,5.334434,-4.096723,4.086368,1.224926,1.288050],[8.929620,6.177770,9.726240,-0.900294,5.643643,-3.974031,-0.030586,-7.437248,-6.291223,2.783485,-3.225840,-0.051088,7.617349,-6.159766,-0.503013,-2.654764],[1.152031,-0.896183,7.812369,-6.780502,-2.054731,5.394662,-9.041226,-4.424292,5.457703,-0.559270,-5.655390,-5.634533,-5.516823,5.048622,1.234172,-1.929708]]], dtype = "float64")#candidate|9896|(7, 5, 16)|const|float64
bop_9897 = relay.less(call_9894.astype('bool'), const_9896.astype('bool')) # shape=(7, 5, 16)
bop_9900 = relay.less(call_9895.astype('bool'), const_9896.astype('bool')) # shape=(7, 5, 16)
output = relay.Tuple([call_9870,bop_9897,])
output2 = relay.Tuple([call_9871,bop_9900,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_4920() -> Tensor[(1, 5, 16), float64] {
  %0 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %0.1
}

def @func_9384() -> (Tensor[(15, 12, 9), bool],) {
  %1 = @func_8562() /* ty=Tensor[(15, 12, 9), bool] */;
  (%1,)
}

def @func_9597() -> (Tensor[(1, 80), float64],) {
  %2 = @func_5833() /* ty=Tensor[(1, 80), float64] */;
  (%2,)
}

def @func_7862(%var_7788: Tensor[(11, 80), float64]) -> (Tensor[(1, 5, 16), float64], Tensor[(11, 80), int32], Tensor[(11, 80), float32]) {
  %3 = @func_6099() /* ty=(Tensor[(1, 80), float64],) */;
  %4 = %3.0;
  %5 = cast(%4, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %6 = erf(%5) /* ty=Tensor[(1, 80), float64] */;
  %7 = cast(%6, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %8 = reshape(%7, newshape=[1, 5, 16]) /* ty=Tensor[(1, 5, 16), float64] */;
  %9 = cast(%4, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
  %10 = cast(%var_7788, dtype="bool") /* ty=Tensor[(11, 80), bool] */;
  %11 = greater_equal(%9, %10) /* ty=Tensor[(11, 80), bool] */;
  %12 = cast(%4, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %13 = cast(%11, dtype="float64") /* ty=Tensor[(11, 80), float64] */;
  %14 = maximum(%12, %13) /* ty=Tensor[(11, 80), float64] */;
  %15 = cast(%11, dtype="bool") /* ty=Tensor[(11, 80), bool] */;
  %16 = shape_of(%var_7788, dtype="int32") /* ty=Tensor[(2), int32] */;
  %17 = cast(%var_7788, dtype="bool") /* ty=Tensor[(11, 80), bool] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %19 = not_equal(%17, %18) /* ty=Tensor[(11, 80), bool] */;
  %20 = cast(%19, dtype="float32") /* ty=Tensor[(11, 80), float32] */;
  %21 = log10(%20) /* ty=Tensor[(11, 80), float32] */;
  %22 = cast(%21, dtype="int32") /* ty=Tensor[(11, 80), int32] */;
  %23 = shape_of(%14, dtype="int32") /* ty=Tensor[(2), int32] */;
  %24 = cast(%14, dtype="int32") /* ty=Tensor[(11, 80), int32] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %26 = cast(%var_7788, dtype="bool") /* ty=Tensor[(11, 80), bool] */;
  %27 = shape_of(%21, dtype="int32") /* ty=Tensor[(2), int32] */;
  %28 = cast(%21, dtype="bool") /* ty=Tensor[(11, 80), bool] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %30 = equal(%28, %29) /* ty=Tensor[(11, 80), bool] */;
  %31 = cast(%6, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %32 = cast(%30, dtype="float32") /* ty=Tensor[(11, 80), float32] */;
  %33 = @func_4767(%8) /* ty=Tensor[(1, 5, 16), float64] */;
  %34 = right_shift(%24, %25) /* ty=Tensor[(11, 80), int32] */;
  %35 = floor_divide(%31, %32) /* ty=Tensor[(11, 80), float32] */;
  (%33, %34, %35)
}

def @func_4767(%var_4758: Tensor[(1, 5, 16), float64]) -> Tensor[(1, 5, 16), float64] {
  %36 = cast(%var_4758, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  sinh(%36) /* ty=Tensor[(1, 5, 16), float64] */
}

def @func_8562() -> Tensor[(15, 12, 9), bool] {
  %37 = @func_6031() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(15, 12, 9), bool], Tensor[(108, 1), uint16], Tensor[(15, 12, 9), bool]) */;
  %37.1
}

def @func_8908(%var_8896: Tensor[(9, 5, 16), float64]) -> (Tensor[(9, 5, 16), uint64], Tensor[(9, 12, 9), float64]) {
  %38 = @func_6927() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */;
  %39 = %38.1;
  %40 = cast(%39, dtype="uint64") /* ty=Tensor[(1, 5, 16), uint64] */;
  %41 = cast(%var_8896, dtype="uint64") /* ty=Tensor[(9, 5, 16), uint64] */;
  %42 = @func_5874() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float32]) */;
  %43 = right_shift(%40, %41) /* ty=Tensor[(9, 5, 16), uint64] */;
  %44 = %42.0;
  (%43, %44)
}

def @func_7546() -> (Tensor[(1, 5, 16), float64],) {
  %45 = @func_6487() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %46 = %45.0;
  (%46,)
}

def @func_7067(%var_6975: Tensor[(2, 2, 11), float64], %var_6976: Tensor[(2, 2, 11), float64], %var_6982: Tensor[(675), float32], %var_7001: Tensor[(1120), float32], %var_7048: Tensor[(72), float32], %var_7049: Tensor[(78, 1), float64]) -> (Tensor[(98), float64], Tensor[(9), float32], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1120), float32], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(2, 2, 11), float64], Tensor[(9, 12, 9), float64], Tensor[(1, 80), float64], Tensor[(1, 5, 16), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(78, 1), float64], Tensor[(525), int64]) {
  %47 = cast(meta[relay.Constant][0] /* ty=Tensor[(9), float32] */, dtype="float32") /* ty=Tensor[(9), float32] */;
  %48 = cast(%var_6982, dtype="float32") /* ty=Tensor[(675), float32] */;
  %49 = cast(meta[relay.Constant][1] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
  %50 = reshape(%47, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float32] */;
  %51 = reshape(%48, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float32] */;
  %52 = reshape(%49, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %53 = @func_3339(%50, %51, %52) /* ty=(Tensor[(5, 15, 9), float32], Tensor[(1344, 1), float32], Tensor[(98), float64], Tensor[(1344), float32]) */;
  %54 = cast(meta[relay.Constant][2] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %55 = cast(%var_7001, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %56 = reshape(%54, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %57 = reshape(%55, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %58 = @func_6875(%56, %57) /* ty=(Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(1, 72), float32], Tensor[(78), float64], Tensor[(525), int64], Tensor[(1, 5, 16), float32]) */;
  %59 = cast(%var_6976, dtype="float64") /* ty=Tensor[(2, 2, 11), float64] */;
  %60 = shape_of(%var_6975, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%var_6975, dtype="float64") /* ty=Tensor[(2, 2, 11), float64] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %63 = mod(%61, %62) /* ty=Tensor[(2, 2, 11), float64] */;
  %64 = cast(%63, dtype="float32") /* ty=Tensor[(2, 2, 11), float32] */;
  %65 = sinh(%64) /* ty=Tensor[(2, 2, 11), float32] */;
  %66 = cast(%65, dtype="float64") /* ty=Tensor[(2, 2, 11), float64] */;
  %67 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %68 = @func_5035() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %69 = %58.3;
  %70 = cast(%69, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %71 = cast(%var_7048, dtype="float32") /* ty=Tensor[(72), float32] */;
  %72 = cast(%var_7049, dtype="float64") /* ty=Tensor[(78, 1), float64] */;
  %73 = cast(meta[relay.Constant][2] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %74 = cast(meta[relay.Constant][3] /* ty=Tensor[(525), int64] */, dtype="int64") /* ty=Tensor[(525), int64] */;
  %75 = reshape(%70, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %76 = reshape(%71, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %77 = reshape(%72, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %78 = reshape(%73, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %79 = reshape(%74, newshape=[525]) /* ty=Tensor[(525), int64] */;
  %80 = @func_5380(%75, %76, %77, %78, %79) /* ty=(Tensor[(10, 80), int64], Tensor[(78), float64], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(72), float32], Tensor[(13, 2, 3), bool], Tensor[(13, 2, 3), float64], Tensor[(?, 80), int16], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(15, 5, 7), int64], Tensor[(525), int64], Tensor[(1, 80), float64]) */;
  %81 = %53.2;
  %82 = log10(%66) /* ty=Tensor[(2, 2, 11), float64] */;
  %83 = %67.0;
  %84 = @func_5774() /* ty=Tensor[(1, 80), float64] */;
  %85 = %68.0;
  %86 = %80.2;
  (%81, meta[relay.Constant][0] /* ty=Tensor[(9), float32] */, %var_6982, meta[relay.Constant][1] /* ty=Tensor[(98), float64] */, %69, meta[relay.Constant][2] /* ty=Tensor[(396), float32] */, %var_7001, %82, %83, %84, %85, %86, %var_7048, %var_7049, meta[relay.Constant][3] /* ty=Tensor[(525), int64] */)
}

def @func_948(%var_940: Tensor[(1, 14, 7), float64], %var_944: Tensor[(1344, 1), float32]) -> (Tensor[(1, 14, 7), float64], Tensor[(14, 16, 6), float32], Tensor[(1344, 1), float32]) {
  %87 = cast(%var_940, dtype="float64") /* ty=Tensor[(1, 14, 7), float64] */;
  %88 = cast(%var_944, dtype="float32") /* ty=Tensor[(1344, 1), float32] */;
  %89 = reshape(%88, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %90 = asin(%87) /* ty=Tensor[(1, 14, 7), float64] */;
  %91 = @func_275(%89) /* ty=Tensor[(14, 16, 6), float32] */;
  (%90, %91, %var_944)
}

def @func_5082() -> (Tensor[(1, 5, 16), float64],) {
  %92 = @func_5017() /* ty=Tensor[(1, 5, 16), float64] */;
  (%92,)
}

def @func_5833() -> Tensor[(1, 80), float64] {
  @func_4877() /* ty=Tensor[(1, 80), float64] */
}

def @func_275(%var_269: Tensor[(14, 16, 6), float32]) -> Tensor[(14, 16, 6), float32] {
  %93 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 16, 6), float32] */, dtype="float32") /* ty=Tensor[(14, 16, 6), float32] */;
  %94 = shape_of(%var_269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(%var_269, dtype="float32") /* ty=Tensor[(14, 16, 6), float32] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%95, %96) /* ty=Tensor[(14, 16, 6), float32] */
}

def @func_5653() -> (Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(350), int64]) {
  %97 = cast(meta[relay.Constant][5] /* ty=Tensor[(350), int64] */, dtype="int64") /* ty=Tensor[(350), int64] */;
  %98 = reshape(%97, newshape=[5, 10, 7]) /* ty=Tensor[(5, 10, 7), int64] */;
  %99 = @func_923(%98) /* ty=(Tensor[(5, 10, 7), int64], Tensor[(14, 16, 6), float32], Tensor[(1344), float32]) */;
  %100 = @func_5432() /* ty=Tensor[(1, 5, 16), float64] */;
  %101 = %99.1;
  (%100, %101, meta[relay.Constant][5] /* ty=Tensor[(350), int64] */)
}

def @func_9760() -> (Tensor[(1, 5, 16), float64], Tensor[(8, 8, 1), float32], Tensor[(1, 5, 16), float64]) {
  %102 = @func_7546() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %103 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %104 = %102.0;
  %105 = @func_8477() /* ty=Tensor[(8, 8, 1), float32] */;
  %106 = %103.1;
  (%104, %105, %106)
}

def @func_9680() -> Tensor[(1, 80), float64] {
  %107 = @func_6550() /* ty=(Tensor[(?, 80), uint16], Tensor[(1, 80), float64]) */;
  %107.1
}

def @func_9037() -> (Tensor[(14, 16, 6), float32], Tensor[(9, 12, 9), float64]) {
  %108 = @func_5653() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(350), int64]) */;
  %109 = @func_6389() /* ty=(Tensor[(9, 12, 9), float64],) */;
  %110 = %108.1;
  %111 = %109.0;
  (%110, %111)
}

def @func_9819() -> (Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(14, 7), float64], Tensor[(1344), float32]) {
  %112 = @func_5035() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %113 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 7), float64] */;
  %114 = cast(meta[relay.Constant][7] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %115 = reshape(%113, newshape=[1, 14, 7]) /* ty=Tensor[(1, 14, 7), float64] */;
  %116 = reshape(%114, newshape=[1344, 1]) /* ty=Tensor[(1344, 1), float32] */;
  %117 = @func_948(%115, %116) /* ty=(Tensor[(1, 14, 7), float64], Tensor[(14, 16, 6), float32], Tensor[(1344, 1), float32]) */;
  %118 = %112.0;
  %119 = %117.1;
  (%118, %119, meta[relay.Constant][6] /* ty=Tensor[(14, 7), float64] */, meta[relay.Constant][7] /* ty=Tensor[(1344), float32] */)
}

def @func_3339(%var_3322: Tensor[(1, 1, 9), float32], %var_3323: Tensor[(5, 15, 9), float32], %var_3331: Tensor[(98), float64]) -> (Tensor[(5, 15, 9), float32], Tensor[(1344, 1), float32], Tensor[(98), float64], Tensor[(1344), float32]) {
  %120 = cast(%var_3322, dtype="float32") /* ty=Tensor[(1, 1, 9), float32] */;
  %121 = cast(%var_3323, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  %122 = cast(%var_3331, dtype="float64") /* ty=Tensor[(98), float64] */;
  %123 = cast(meta[relay.Constant][8] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %124 = reshape(%122, newshape=[1, 14, 7]) /* ty=Tensor[(1, 14, 7), float64] */;
  %125 = reshape(%123, newshape=[1344, 1]) /* ty=Tensor[(1344, 1), float32] */;
  %126 = @func_948(%124, %125) /* ty=(Tensor[(1, 14, 7), float64], Tensor[(14, 16, 6), float32], Tensor[(1344, 1), float32]) */;
  %127 = floor_divide(%120, %121) /* ty=Tensor[(5, 15, 9), float32] */;
  %128 = %126.2;
  (%127, %128, %var_3331, meta[relay.Constant][8] /* ty=Tensor[(1344), float32] */)
}

def @func_923(%var_901: Tensor[(5, 10, 7), int64]) -> (Tensor[(5, 10, 7), int64], Tensor[(14, 16, 6), float32], Tensor[(1344), float32]) {
  %129 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 10, 7), int64] */, dtype="int64") /* ty=Tensor[(5, 10, 7), int64] */;
  %130 = shape_of(%var_901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %131 = cast(%var_901, dtype="int64") /* ty=Tensor[(5, 10, 7), int64] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %133 = cast(meta[relay.Constant][10] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %134 = reshape(%133, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %135 = bitwise_xor(%131, %132) /* ty=Tensor[(5, 10, 7), int64] */;
  %136 = @func_275(%134) /* ty=Tensor[(14, 16, 6), float32] */;
  (%135, %136, meta[relay.Constant][10] /* ty=Tensor[(1344), float32] */)
}

def @func_1705(%var_1678: Tensor[(15, 10, 10), int64], %var_1679: Tensor[(15, 10, 10), int64]) -> (Tensor[(15, 10, 10), int64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) {
  %137 = cast(%var_1679, dtype="int64") /* ty=Tensor[(15, 10, 10), int64] */;
  %138 = shape_of(%var_1678, dtype="int32") /* ty=Tensor[(3), int32] */;
  %139 = cast(%var_1678, dtype="int64") /* ty=Tensor[(15, 10, 10), int64] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %141 = cast(meta[relay.Constant][11] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %142 = reshape(%141, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %143 = maximum(%139, %140) /* ty=Tensor[(15, 10, 10), int64] */;
  %144 = @func_220(%142) /* ty=Tensor[(13, 2, 3), float64] */;
  (%143, %144, meta[relay.Constant][11] /* ty=Tensor[(78), float64] */)
}

def @func_8624(%var_8581: Tensor[(720), float64], %var_8584: Tensor[(26, 3), float64], %var_8585: Tensor[(1248), float64]) -> (Tensor[(9, 12, 9), float64], Tensor[(9, 5, 16), float32], Tensor[(720), float64], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(26, 3), float64], Tensor[(1248), float64], Tensor[(1, 80), float64]) {
  %145 = @func_6219() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(5, 80), uint8]) */;
  %146 = cast(%var_8581, dtype="float64") /* ty=Tensor[(720), float64] */;
  %147 = cast(meta[relay.Constant][12] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %148 = cast(meta[relay.Constant][13] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %149 = cast(%var_8584, dtype="float64") /* ty=Tensor[(26, 3), float64] */;
  %150 = cast(%var_8585, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %151 = reshape(%146, newshape=[9, 5, 16]) /* ty=Tensor[(9, 5, 16), float64] */;
  %152 = reshape(%147, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %153 = reshape(%148, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %154 = reshape(%149, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %155 = reshape(%150, newshape=[624, 2]) /* ty=Tensor[(624, 2), float64] */;
  %156 = @func_7501(%151, %152, %153, %154, %155) /* ty=(Tensor[(9, 5, 16), float32], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(11, 12, 3), bool], Tensor[(78), bool], Tensor[(16, 6, 13), float64], Tensor[(624, 2), float64]) */;
  %157 = @func_6794() /* ty=(Tensor[(1, 80), float64],) */;
  %158 = %145.0;
  %159 = %156.0;
  %160 = %157.0;
  (%158, %159, %var_8581, meta[relay.Constant][12] /* ty=Tensor[(396), float32] */, meta[relay.Constant][13] /* ty=Tensor[(1120), float32] */, %var_8584, %var_8585, %160)
}

def @func_8041(%var_7968: Tensor[(6, 2, 3), float32], %var_7974: Tensor[(80), float64], %var_8029: Tensor[(240), float64]) -> (Tensor[(1, 5, 16), float64], Tensor[(80), float64], Tensor[(1, 5, 16), float64], Tensor[(6, 2, 3), int16], Tensor[(1, 5, 16), float64], Tensor[(3, 5, 16), float64], Tensor[(240), float64]) {
  %161 = cast(%var_7974, dtype="float64") /* ty=Tensor[(80), float64] */;
  %162 = reshape(%161, newshape=[1, 5, 16]) /* ty=Tensor[(1, 5, 16), float64] */;
  %163 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 2, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 3), float32] */;
  %164 = asin(%163) /* ty=Tensor[(6, 2, 3), float32] */;
  %165 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 2, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 3), float32] */;
  %166 = shape_of(%var_7968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%var_7968, dtype="float32") /* ty=Tensor[(6, 2, 3), float32] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %169 = divide(%167, %168) /* ty=Tensor[(6, 2, 3), float32] */;
  %170 = cast(%169, dtype="int16") /* ty=Tensor[(6, 2, 3), int16] */;
  %171 = shape_of(%164, dtype="int32") /* ty=Tensor[(3), int32] */;
  %172 = cast(%164, dtype="int16") /* ty=Tensor[(6, 2, 3), int16] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %174 = cast(%var_8029, dtype="float64") /* ty=Tensor[(240), float64] */;
  %175 = reshape(%174, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), float64] */;
  %176 = @func_4767(%162) /* ty=Tensor[(1, 5, 16), float64] */;
  %177 = @func_5017() /* ty=Tensor[(1, 5, 16), float64] */;
  %178 = add(%172, %173) /* ty=Tensor[(6, 2, 3), int16] */;
  %179 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
  %180 = @func_6339(%175) /* ty=Tensor[(3, 5, 16), float64] */;
  (%176, %var_7974, %177, %178, %179, %180, %var_8029)
}

def @func_5380(%var_5328: Tensor[(1120), float32], %var_5329: Tensor[(72), float32], %var_5333: Tensor[(13, 2, 3), float64], %var_5360: Tensor[(396), float32], %var_5370: Tensor[(525), int64]) -> (Tensor[(10, 80), int64], Tensor[(78), float64], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(72), float32], Tensor[(13, 2, 3), bool], Tensor[(13, 2, 3), float64], Tensor[(?, 80), int16], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(15, 5, 7), int64], Tensor[(525), int64], Tensor[(1, 80), float64]) {
  %181 = @func_4877() /* ty=Tensor[(1, 80), float64] */;
  %182 = cast(%181, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %183 = sin(%182) /* ty=Tensor[(1, 80), float64] */;
  %184 = cast(%183, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
  %185 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 80), float64] */, dtype="bool") /* ty=Tensor[(10, 80), bool] */;
  %186 = not_equal(%184, %185) /* ty=Tensor[(10, 80), bool] */;
  %187 = cast(%186, dtype="int64") /* ty=Tensor[(10, 80), int64] */;
  %188 = cast(%183, dtype="int64") /* ty=Tensor[(1, 80), int64] */;
  %189 = cast(%var_5328, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %190 = cast(%var_5328, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %191 = cast(%var_5329, dtype="float32") /* ty=Tensor[(72), float32] */;
  %192 = reshape(%189, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float32] */;
  %193 = reshape(%190, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float32] */;
  %194 = reshape(%191, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %195 = @func_4007(%192, %193, %194) /* ty=(Tensor[(14, 10, 8), float32], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) */;
  %196 = cast(meta[relay.Constant][16] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %197 = reshape(%196, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %198 = @func_220(%197) /* ty=Tensor[(13, 2, 3), float64] */;
  %199 = cast(%var_5333, dtype="bool") /* ty=Tensor[(13, 2, 3), bool] */;
  %200 = shape_of(%198, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(%198, dtype="bool") /* ty=Tensor[(13, 2, 3), bool] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %203 = cast(%198, dtype="float64") /* ty=Tensor[(13, 2, 3), float64] */;
  %204 = reshape(%203, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %205 = cast(%181, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %206 = sinh(%205) /* ty=Tensor[(1, 80), float64] */;
  %207 = cast(%206, dtype="int16") /* ty=Tensor[(1, 80), int16] */;
  %208 = shape_of(%183, dtype="int32") /* ty=Tensor[(2), int32] */;
  %209 = cast(%183, dtype="int16") /* ty=Tensor[(1, 80), int16] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %211 = cast(%var_5360, dtype="float32") /* ty=Tensor[(396), float32] */;
  %212 = reshape(%211, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float32] */;
  %213 = cast(%var_5370, dtype="int64") /* ty=Tensor[(525), int64] */;
  %214 = cast(%var_5370, dtype="int64") /* ty=Tensor[(525), int64] */;
  %215 = %195.2;
  %216 = cast(%215, dtype="float32") /* ty=Tensor[(72), float32] */;
  %217 = reshape(%213, newshape=[15, 5, 7]) /* ty=Tensor[(15, 5, 7), int64] */;
  %218 = reshape(%214, newshape=[15, 5, 7]) /* ty=Tensor[(15, 5, 7), int64] */;
  %219 = reshape(%216, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %220 = @func_4343(%217, %218, %219) /* ty=(Tensor[(15, 5, 7), int64], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) */;
  %221 = cast(%183, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %222 = bitwise_or(%187, %188) /* ty=Tensor[(10, 80), int64] */;
  %223 = less(%201, %202) /* ty=Tensor[(13, 2, 3), bool] */;
  %224 = @func_220(%204) /* ty=Tensor[(13, 2, 3), float64] */;
  %225 = multiply(%209, %210) /* ty=Tensor[(?, 80), int16] */;
  %226 = @func_2712(%212) /* ty=Tensor[(11, 12, 3), bool] */;
  %227 = %220.0;
  %228 = acos(%221) /* ty=Tensor[(1, 80), float64] */;
  (%222, meta[relay.Constant][16] /* ty=Tensor[(78), float64] */, %215, %var_5328, %var_5329, %223, %224, %225, %226, %var_5360, %227, %var_5370, %228)
}

def @func_4785() -> (Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) {
  %229 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 12, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 12, 9), float64] */;
  %230 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 80), float64] */, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %231 = reshape(%230, newshape=[1, 5, 16]) /* ty=Tensor[(1, 5, 16), float64] */;
  %232 = tan(%229) /* ty=Tensor[(9, 12, 9), float64] */;
  %233 = @func_4767(%231) /* ty=Tensor[(1, 5, 16), float64] */;
  (%232, %233, meta[relay.Constant][18] /* ty=Tensor[(1, 80), float64] */)
}

def @func_5017() -> Tensor[(1, 5, 16), float64] {
  %234 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
  %235 = cast(%234, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  atanh(%235) /* ty=Tensor[(1, 5, 16), float64] */
}

def @func_6277(%var_6267: Tensor[(3, 6, 6), float32]) -> (Tensor[(3, 6, 6), float32],) {
  %236 = cast(%var_6267, dtype="float32") /* ty=Tensor[(3, 6, 6), float32] */;
  %237 = rsqrt(%236) /* ty=Tensor[(3, 6, 6), float32] */;
  (%237,)
}

def @func_6875(%var_6841: Tensor[(396), float32], %var_6849: Tensor[(1120), float32]) -> (Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(1, 72), float32], Tensor[(78), float64], Tensor[(525), int64], Tensor[(1, 5, 16), float32]) {
  %238 = cast(%var_6841, dtype="float32") /* ty=Tensor[(396), float32] */;
  %239 = reshape(%238, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %240 = @func_4978(%239) /* ty=(Tensor[(1, 5, 16), float64], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(11, 12, 3), bool]) */;
  %241 = cast(%var_6849, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %242 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 72), float32] */, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %243 = cast(meta[relay.Constant][20] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %244 = %240.3;
  %245 = cast(%244, dtype="float32") /* ty=Tensor[(11, 12, 3), float32] */;
  %246 = cast(meta[relay.Constant][21] /* ty=Tensor[(525), int64] */, dtype="int64") /* ty=Tensor[(525), int64] */;
  %247 = reshape(%241, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %248 = reshape(%242, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %249 = reshape(%243, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %250 = reshape(%245, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %251 = reshape(%246, newshape=[525]) /* ty=Tensor[(525), int64] */;
  %252 = @func_5380(%247, %248, %249, %250, %251) /* ty=(Tensor[(10, 80), int64], Tensor[(78), float64], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(72), float32], Tensor[(13, 2, 3), bool], Tensor[(13, 2, 3), float64], Tensor[(?, 80), int16], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(15, 5, 7), int64], Tensor[(525), int64], Tensor[(1, 80), float64]) */;
  %253 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
  %254 = cast(%253, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  %255 = asin(%254) /* ty=Tensor[(1, 5, 16), float64] */;
  %256 = cast(%255, dtype="float32") /* ty=Tensor[(1, 5, 16), float32] */;
  %257 = %252.2;
  %258 = log2(%256) /* ty=Tensor[(1, 5, 16), float32] */;
  (%244, %var_6841, %257, %var_6849, meta[relay.Constant][19] /* ty=Tensor[(1, 72), float32] */, meta[relay.Constant][20] /* ty=Tensor[(78), float64] */, meta[relay.Constant][21] /* ty=Tensor[(525), int64] */, %258)
}

def @func_8936() -> Tensor[(1, 5, 16), float64] {
  @func_4920() /* ty=Tensor[(1, 5, 16), float64] */
}

def @func_7214() -> (Tensor[(1, 5, 16), float64],) {
  %259 = @func_6487() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %260 = %259.0;
  (%260,)
}

def @func_8504() -> (Tensor[(14, 16, 6), float32],) {
  %261 = @func_5653() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(350), int64]) */;
  %262 = %261.1;
  (%262,)
}

def @func_9285(%var_9275: Tensor[(15, 6, 1), uint32]) -> (Tensor[(15, 6, 9), bool], Tensor[(15, 6, 1), float64]) {
  %263 = cast(%var_9275, dtype="bool") /* ty=Tensor[(15, 6, 1), bool] */;
  %264 = cast(meta[relay.Constant][22] /* ty=Tensor[(15, 6, 9), uint32] */, dtype="bool") /* ty=Tensor[(15, 6, 9), bool] */;
  %265 = cast(%var_9275, dtype="float64") /* ty=Tensor[(15, 6, 1), float64] */;
  %266 = greater(%263, %264) /* ty=Tensor[(15, 6, 9), bool] */;
  %267 = log10(%265) /* ty=Tensor[(15, 6, 1), float64] */;
  (%266, %267)
}

def @func_6452(%var_6426: Tensor[(3, 5, 16), float64], %var_6444: Tensor[(6, 66), float32]) -> (Tensor[(3, 5, 16), int32], Tensor[(11, 12, 3), bool], Tensor[(6, 66), float32], Tensor[(1, 5, 16), float64]) {
  %268 = @func_5432() /* ty=Tensor[(1, 5, 16), float64] */;
  %269 = cast(%268, dtype="int32") /* ty=Tensor[(1, 5, 16), int32] */;
  %270 = cast(%var_6426, dtype="int32") /* ty=Tensor[(3, 5, 16), int32] */;
  %271 = cast(%var_6444, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
  %272 = reshape(%271, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float32] */;
  %273 = @func_5952() /* ty=(Tensor[(11, 80), float64], Tensor[(11, 80), bool], Tensor[(1, 5, 16), float64]) */;
  %274 = logical_xor(%269, %270) /* ty=Tensor[(3, 5, 16), int32] */;
  %275 = @func_2712(%272) /* ty=Tensor[(11, 12, 3), bool] */;
  %276 = %273.2;
  (%274, %275, %var_6444, %276)
}

def @func_6550() -> (Tensor[(?, 80), uint16], Tensor[(1, 80), float64]) {
  %277 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %278 = %277.2;
  %279 = @func_5035() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %280 = %279.0;
  %281 = cast(%280, dtype="uint16") /* ty=Tensor[(1, 5, 16), uint16] */;
  %282 = shape_of(%278, dtype="int32") /* ty=Tensor[(2), int32] */;
  %283 = cast(%278, dtype="uint16") /* ty=Tensor[(1, 80), uint16] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %285 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %286 = left_shift(%283, %284) /* ty=Tensor[(?, 80), uint16] */;
  %287 = %285.2;
  (%286, %287)
}

def @func_6339(%var_6316: Tensor[(3, 5, 16), float64]) -> Tensor[(3, 5, 16), float64] {
  %288 = @func_5166() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */;
  %289 = %288.1;
  %290 = cast(%289, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  %291 = cast(%var_6316, dtype="float64") /* ty=Tensor[(3, 5, 16), float64] */;
  divide(%290, %291) /* ty=Tensor[(3, 5, 16), float64] */
}

def @func_9849() -> (Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(11, 350), bool]) {
  %292 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 350), int64] */, dtype="int64") /* ty=Tensor[(1, 350), int64] */;
  %293 = reshape(%292, newshape=[5, 10, 7]) /* ty=Tensor[(5, 10, 7), int64] */;
  %294 = @func_923(%293) /* ty=(Tensor[(5, 10, 7), int64], Tensor[(14, 16, 6), float32], Tensor[(1344), float32]) */;
  %295 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 350), int64] */, dtype="bool") /* ty=Tensor[(1, 350), bool] */;
  %296 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 350), int64] */, dtype="bool") /* ty=Tensor[(11, 350), bool] */;
  %297 = logical_or(%295, %296) /* ty=Tensor[(11, 350), bool] */;
  %298 = cast(%297, dtype="bool") /* ty=Tensor[(11, 350), bool] */;
  %299 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 350), int64] */, dtype="bool") /* ty=Tensor[(1, 350), bool] */;
  %300 = @func_5017() /* ty=Tensor[(1, 5, 16), float64] */;
  %301 = %294.1;
  %302 = logical_and(%298, %299) /* ty=Tensor[(11, 350), bool] */;
  (%300, %301, %302)
}

def @func_8214() -> (Tensor[(1, 5, 16), float64],) {
  %303 = @func_5874() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float32]) */;
  %304 = %303.1;
  (%304,)
}

def @func_7155(%var_7133: Tensor[(7, 5, 16), float64]) -> Tensor[(7, 5, 16), uint64] {
  %305 = @func_6031() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(15, 12, 9), bool], Tensor[(108, 1), uint16], Tensor[(15, 12, 9), bool]) */;
  %306 = %305.0;
  %307 = cast(%306, dtype="uint64") /* ty=Tensor[(1, 5, 16), uint64] */;
  %308 = cast(%var_7133, dtype="uint64") /* ty=Tensor[(7, 5, 16), uint64] */;
  left_shift(%307, %308) /* ty=Tensor[(7, 5, 16), uint64] */
}

def @func_3647(%var_3644: Tensor[(6, 12, 1), float32]) -> Tensor[(6, 12, 1), float32] {
  %309 = cast(%var_3644, dtype="float32") /* ty=Tensor[(6, 12, 1), float32] */;
  acos(%309) /* ty=Tensor[(6, 12, 1), float32] */
}

def @main() -> (Tensor[(1, 5, 16), float64], Tensor[(7, 5, 16), bool]) {
  %310 = @func_5035() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %311 = @func_8214() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %312 = %311.0;
  %313 = cast(%312, dtype="bool") /* ty=Tensor[(1, 5, 16), bool] */;
  %314 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 5, 16), float64] */, dtype="bool") /* ty=Tensor[(7, 5, 16), bool] */;
  %315 = %310.0;
  %316 = less(%313, %314) /* ty=Tensor[(7, 5, 16), bool] */;
  (%315, %316)
}

def @func_8073(%var_8053: Tensor[(3, 6, 2), float64]) -> Tensor[(3, 6, 2), uint8] {
  %317 = cast(%var_8053, dtype="float64") /* ty=Tensor[(3, 6, 2), float64] */;
  %318 = log10(%317) /* ty=Tensor[(3, 6, 2), float64] */;
  %319 = cast(%318, dtype="uint8") /* ty=Tensor[(3, 6, 2), uint8] */;
  %320 = shape_of(%var_8053, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%var_8053, dtype="uint8") /* ty=Tensor[(3, 6, 2), uint8] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%321, %322) /* ty=Tensor[(3, 6, 2), uint8] */
}

def @func_5874() -> (Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float32]) {
  %323 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %324 = @func_5833() /* ty=Tensor[(1, 80), float64] */;
  %325 = cast(%324, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %326 = %323.0;
  %327 = @func_5017() /* ty=Tensor[(1, 5, 16), float64] */;
  %328 = exp(%325) /* ty=Tensor[(1, 80), float32] */;
  (%326, %327, %328)
}

def @func_8477() -> Tensor[(8, 8, 1), float32] {
  %329 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 8, 1), float32] */, dtype="float32") /* ty=Tensor[(8, 8, 1), float32] */;
  cos(%329) /* ty=Tensor[(8, 8, 1), float32] */
}

def @func_8138(%var_8109: Tensor[(8, 80), float64]) -> (Tensor[(8, 80), float32], Tensor[(8, 80), float32]) {
  %330 = @func_6099() /* ty=(Tensor[(1, 80), float64],) */;
  %331 = %330.0;
  %332 = cast(%331, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
  %333 = cast(%var_8109, dtype="bool") /* ty=Tensor[(8, 80), bool] */;
  %334 = equal(%332, %333) /* ty=Tensor[(8, 80), bool] */;
  %335 = cast(%334, dtype="float32") /* ty=Tensor[(8, 80), float32] */;
  %336 = cast(%var_8109, dtype="float32") /* ty=Tensor[(8, 80), float32] */;
  %337 = cosh(%335) /* ty=Tensor[(8, 80), float32] */;
  %338 = log2(%336) /* ty=Tensor[(8, 80), float32] */;
  (%337, %338)
}

def @func_5432() -> Tensor[(1, 5, 16), float64] {
  %339 = @func_5035() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %339.0
}

def @func_8690(%var_8665: Tensor[(336), float32], %var_8666: Tensor[(360), int8], %var_8667: Tensor[(3, 500), int64]) -> (Tensor[(1, 5, 16), float64], Tensor[(14, 4, 6), float64], Tensor[(336), float32], Tensor[(360), int8], Tensor[(3, 500), int64], Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) {
  %340 = @func_6031() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(15, 12, 9), bool], Tensor[(108, 1), uint16], Tensor[(15, 12, 9), bool]) */;
  %341 = cast(%var_8665, dtype="float32") /* ty=Tensor[(336), float32] */;
  %342 = cast(%var_8666, dtype="int8") /* ty=Tensor[(360), int8] */;
  %343 = cast(%var_8667, dtype="int64") /* ty=Tensor[(3, 500), int64] */;
  %344 = reshape(%341, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), float32] */;
  %345 = reshape(%342, newshape=[360]) /* ty=Tensor[(360), int8] */;
  %346 = reshape(%343, newshape=[1500]) /* ty=Tensor[(1500), int64] */;
  %347 = @func_6691(%344, %345, %346) /* ty=(Tensor[(1, 80), float64], Tensor[(8, 5, 9), int8], Tensor[(360), int8], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1500), int64], Tensor[(14, 4, 6), float64]) */;
  %348 = @func_6487() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %349 = @func_6927() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */;
  %350 = %340.0;
  %351 = %347.6;
  %352 = %348.0;
  %353 = %349.1;
  (%350, %351, %var_8665, %var_8666, %var_8667, %352, %353)
}

def @func_6487() -> (Tensor[(1, 5, 16), float64],) {
  %354 = @func_5082() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %355 = %354.0;
  (%355,)
}

def @func_8341(%var_8327: Tensor[(7, 11, 4), int32]) -> (Tensor[(7, 11, 4), int32],) {
  %356 = cast(%var_8327, dtype="int32") /* ty=Tensor[(7, 11, 4), int32] */;
  %357 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(7, 11, 4), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %358 = cast(meta[relay.Constant][27] /* ty=Tensor[(7, 11, 4), int32] */, dtype="int32") /* ty=Tensor[(7, 11, 4), int32] */;
  %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %360 = add(%358, %359) /* ty=Tensor[(7, 11, 4), int32] */;
  (%360,)
}

def @func_6389() -> (Tensor[(9, 12, 9), float64],) {
  %361 = @func_6219() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(5, 80), uint8]) */;
  %362 = %361.0;
  (%362,)
}

def @func_7501(%var_7447: Tensor[(9, 5, 16), float64], %var_7455: Tensor[(396), float32], %var_7456: Tensor[(1120), float32], %var_7481: Tensor[(78), float64], %var_7488: Tensor[(624, 2), float64]) -> (Tensor[(9, 5, 16), float32], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(11, 12, 3), bool], Tensor[(78), bool], Tensor[(16, 6, 13), float64], Tensor[(624, 2), float64]) {
  %363 = @func_7214() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %364 = %363.0;
  %365 = cast(%364, dtype="float32") /* ty=Tensor[(1, 5, 16), float32] */;
  %366 = cast(%var_7447, dtype="float32") /* ty=Tensor[(9, 5, 16), float32] */;
  %367 = cast(%var_7455, dtype="float32") /* ty=Tensor[(396), float32] */;
  %368 = reshape(%367, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %369 = @func_4978(%368) /* ty=(Tensor[(1, 5, 16), float64], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(11, 12, 3), bool]) */;
  %370 = cast(%var_7455, dtype="float32") /* ty=Tensor[(396), float32] */;
  %371 = cast(%var_7456, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %372 = reshape(%370, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %373 = reshape(%371, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %374 = @func_6875(%372, %373) /* ty=(Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(1, 72), float32], Tensor[(78), float64], Tensor[(525), int64], Tensor[(1, 5, 16), float32]) */;
  %375 = %374.5;
  %376 = cast(%var_7481, dtype="bool") /* ty=Tensor[(78), bool] */;
  %377 = shape_of(%375, dtype="int32") /* ty=Tensor[(1), int32] */;
  %378 = cast(%375, dtype="bool") /* ty=Tensor[(78), bool] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?), bool] */;
  %380 = cast(%var_7488, dtype="float64") /* ty=Tensor[(624, 2), float64] */;
  %381 = reshape(%380, newshape=[16, 6, 13]) /* ty=Tensor[(16, 6, 13), float64] */;
  %382 = @func_6615(%381) /* ty=(Tensor[(16, 6, 13), float64], Tensor[(1, 2, 5), float64], Tensor[(10), float64]) */;
  %383 = power(%365, %366) /* ty=Tensor[(9, 5, 16), float32] */;
  %384 = %369.3;
  %385 = not_equal(%378, %379) /* ty=Tensor[(78), bool] */;
  %386 = %382.0;
  (%383, %var_7455, %var_7456, %384, %385, %386, %var_7488)
}

def @func_4343(%var_4324: Tensor[(15, 5, 7), int64], %var_4325: Tensor[(15, 5, 7), int64], %var_4336: Tensor[(72), float32]) -> (Tensor[(15, 5, 7), int64], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) {
  %387 = cast(%var_4325, dtype="int64") /* ty=Tensor[(15, 5, 7), int64] */;
  %388 = shape_of(%var_4324, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%var_4324, dtype="int64") /* ty=Tensor[(15, 5, 7), int64] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %391 = cast(%var_4336, dtype="float32") /* ty=Tensor[(72), float32] */;
  %392 = reshape(%391, newshape=[6, 12, 1]) /* ty=Tensor[(6, 12, 1), float32] */;
  %393 = subtract(%389, %390) /* ty=Tensor[(15, 5, 7), int64] */;
  %394 = @func_3647(%392) /* ty=Tensor[(6, 12, 1), float32] */;
  (%393, %394, %var_4336)
}

def @func_8322(%var_8305: Tensor[(14, 80), float64]) -> (Tensor[(14, 80), float32], Tensor[(15, 12, 9), bool], Tensor[(1, 108), uint16]) {
  %395 = @func_6099() /* ty=(Tensor[(1, 80), float64],) */;
  %396 = %395.0;
  %397 = cast(%396, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %398 = cast(%var_8305, dtype="float32") /* ty=Tensor[(14, 80), float32] */;
  %399 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 108), uint16] */, dtype="uint16") /* ty=Tensor[(1, 108), uint16] */;
  %400 = reshape(%399, newshape=[1, 12, 9]) /* ty=Tensor[(1, 12, 9), uint16] */;
  %401 = @func_3664(%400) /* ty=(Tensor[(15, 12, 9), bool],) */;
  %402 = floor_divide(%397, %398) /* ty=Tensor[(14, 80), float32] */;
  %403 = %401.0;
  (%402, %403, meta[relay.Constant][28] /* ty=Tensor[(1, 108), uint16] */)
}

def @func_5774() -> Tensor[(1, 80), float64] {
  %404 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %404.2
}

def @func_5166() -> (Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) {
  %405 = @func_5082() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %406 = %405.0;
  %407 = cast(%406, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  %408 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
  %409 = acos(%407) /* ty=Tensor[(1, 5, 16), float64] */;
  (%408, %409)
}

def @func_9432() -> (Tensor[(?, 80), uint16],) {
  %410 = @func_7259() /* ty=Tensor[(?, 80), uint16] */;
  (%410,)
}

def @func_3444(%var_3375: Tensor[(8, 5, 9), int8], %var_3392: Tensor[(675), float32], %var_3393: Tensor[(7, 14), float64], %var_3403: Tensor[(1500), int64]) -> (Tensor[(8, 5, 9), int8], Tensor[(1344), float32], Tensor[(1, 9), float32], Tensor[(7, 14), float64], Tensor[(78), float64], Tensor[(1500), int64], Tensor[(675), float32]) {
  %411 = cast(meta[relay.Constant][29] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %412 = cast(%var_3375, dtype="int8") /* ty=Tensor[(8, 5, 9), int8] */;
  %413 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 9), float32] */;
  %414 = cast(%var_3392, dtype="float32") /* ty=Tensor[(675), float32] */;
  %415 = cast(%var_3393, dtype="float64") /* ty=Tensor[(7, 14), float64] */;
  %416 = reshape(%413, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float32] */;
  %417 = reshape(%414, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float32] */;
  %418 = reshape(%415, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %419 = @func_3339(%416, %417, %418) /* ty=(Tensor[(5, 15, 9), float32], Tensor[(1344, 1), float32], Tensor[(98), float64], Tensor[(1344), float32]) */;
  %420 = cast(%var_3403, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %421 = cast(%var_3403, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %422 = reshape(%420, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), int64] */;
  %423 = reshape(%421, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), int64] */;
  %424 = @func_1705(%422, %423) /* ty=(Tensor[(15, 10, 10), int64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) */;
  %425 = cast(%var_3392, dtype="float32") /* ty=Tensor[(675), float32] */;
  %426 = logical_xor(%411, %412) /* ty=Tensor[(8, 5, 9), int8] */;
  %427 = %419.3;
  %428 = %424.2;
  %429 = erf(%425) /* ty=Tensor[(675), float32] */;
  (%426, %427, meta[relay.Constant][30] /* ty=Tensor[(1, 9), float32] */, %var_3393, %428, %var_3403, %429)
}

def @func_2712(%var_2702: Tensor[(11, 12, 3), float32]) -> Tensor[(11, 12, 3), bool] {
  %430 = cast(-5.3102f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %431 = cast(%var_2702, dtype="bool") /* ty=Tensor[(11, 12, 3), bool] */;
  less(%430, %431) /* ty=Tensor[(11, 12, 3), bool] */
}

def @func_8051() -> Tensor[(1, 5, 16), float64] {
  %432 = @func_5166() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */;
  %432.0
}

def @func_2991(%var_2987: Tensor[(9, 2, 13), uint32]) -> (Tensor[(9, 2, 13), bool],) {
  %433 = cast(meta[relay.Constant][31] /* ty=Tensor[(9, 1, 13), uint32] */, dtype="bool") /* ty=Tensor[(9, 1, 13), bool] */;
  %434 = cast(%var_2987, dtype="bool") /* ty=Tensor[(9, 2, 13), bool] */;
  %435 = less_equal(%433, %434) /* ty=Tensor[(9, 2, 13), bool] */;
  (%435,)
}

def @func_6099() -> (Tensor[(1, 80), float64],) {
  %436 = @func_4877() /* ty=Tensor[(1, 80), float64] */;
  (%436,)
}

def @func_5753(%var_5736: Tensor[(1, 2, 5), float64]) -> Tensor[(1, 2, 5), float64] {
  %437 = cast(%var_5736, dtype="float64") /* ty=Tensor[(1, 2, 5), float64] */;
  cosh(%437) /* ty=Tensor[(1, 2, 5), float64] */
}

def @func_7732() -> (Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64], Tensor[(11, 12, 3), bool], Tensor[(1, 5, 16), float64]) {
  %438 = @func_6927() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */;
  %439 = cast(meta[relay.Constant][32] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %440 = reshape(%439, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float32] */;
  %441 = @func_2712(%440) /* ty=Tensor[(11, 12, 3), bool] */;
  %442 = cast(meta[relay.Constant][32] /* ty=Tensor[(396), float32] */, dtype="bool") /* ty=Tensor[(396), bool] */;
  %443 = shape_of(%441, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%441, dtype="bool") /* ty=Tensor[(11, 12, 3), bool] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %446 = @func_6927() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */;
  %447 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
  %448 = %438.0;
  %449 = logical_or(%444, %445) /* ty=Tensor[(11, 12, 3), bool] */;
  %450 = %446.0;
  (%447, %448, %449, %450)
}

def @func_8204() -> (Tensor[(11, 80), float64],) {
  %451 = @func_5952() /* ty=(Tensor[(11, 80), float64], Tensor[(11, 80), bool], Tensor[(1, 5, 16), float64]) */;
  %452 = %451.0;
  (%452,)
}

def @func_4877() -> Tensor[(1, 80), float64] {
  %453 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %453.2
}

def @func_6794() -> (Tensor[(1, 80), float64],) {
  %454 = @func_4877() /* ty=Tensor[(1, 80), float64] */;
  (%454,)
}

def @func_7954() -> (Tensor[(1, 5, 16), float64],) {
  %455 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
  %456 = cast(%455, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  %457 = asinh(%456) /* ty=Tensor[(1, 5, 16), float64] */;
  (%457,)
}

def @func_6691(%var_6650: Tensor[(14, 4, 6), float32], %var_6667: Tensor[(360), int8], %var_6670: Tensor[(1500), int64]) -> (Tensor[(1, 80), float64], Tensor[(8, 5, 9), int8], Tensor[(360), int8], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1500), int64], Tensor[(14, 4, 6), float64]) {
  %458 = cast(%var_6667, dtype="int8") /* ty=Tensor[(360), int8] */;
  %459 = cast(meta[relay.Constant][33] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %460 = cast(meta[relay.Constant][34] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
  %461 = cast(%var_6670, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %462 = reshape(%458, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int8] */;
  %463 = reshape(%459, newshape=[675]) /* ty=Tensor[(675), float32] */;
  %464 = reshape(%460, newshape=[7, 14]) /* ty=Tensor[(7, 14), float64] */;
  %465 = reshape(%461, newshape=[1500]) /* ty=Tensor[(1500), int64] */;
  %466 = @func_3444(%462, %463, %464, %465) /* ty=(Tensor[(8, 5, 9), int8], Tensor[(1344), float32], Tensor[(1, 9), float32], Tensor[(7, 14), float64], Tensor[(78), float64], Tensor[(1500), int64], Tensor[(675), float32]) */;
  %467 = cast(%var_6650, dtype="float32") /* ty=Tensor[(14, 4, 6), float32] */;
  %468 = cos(%467) /* ty=Tensor[(14, 4, 6), float32] */;
  %469 = cast(%468, dtype="float32") /* ty=Tensor[(14, 4, 6), float32] */;
  %470 = exp(%469) /* ty=Tensor[(14, 4, 6), float32] */;
  %471 = cast(%470, dtype="float64") /* ty=Tensor[(14, 4, 6), float64] */;
  %472 = @func_5833() /* ty=Tensor[(1, 80), float64] */;
  %473 = %466.0;
  %474 = erf(%471) /* ty=Tensor[(14, 4, 6), float64] */;
  (%472, %473, %var_6667, meta[relay.Constant][33] /* ty=Tensor[(675), float32] */, meta[relay.Constant][34] /* ty=Tensor[(98), float64] */, %var_6670, %474)
}

def @func_4978(%var_4965: Tensor[(396), float32]) -> (Tensor[(1, 5, 16), float64], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(11, 12, 3), bool]) {
  %475 = cast(%var_4965, dtype="float32") /* ty=Tensor[(396), float32] */;
  %476 = reshape(%475, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float32] */;
  %477 = cast(%var_4965, dtype="float32") /* ty=Tensor[(396), float32] */;
  %478 = reshape(%477, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float32] */;
  %479 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
  %480 = @func_2712(%476) /* ty=Tensor[(11, 12, 3), bool] */;
  %481 = @func_2712(%478) /* ty=Tensor[(11, 12, 3), bool] */;
  (%479, %480, %var_4965, %481)
}

def @func_4007(%var_3993: Tensor[(14, 10, 8), float32], %var_3994: Tensor[(14, 10, 8), float32], %var_4002: Tensor[(72), float32]) -> (Tensor[(14, 10, 8), float32], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) {
  %482 = cast(%var_3994, dtype="float32") /* ty=Tensor[(14, 10, 8), float32] */;
  %483 = shape_of(%var_3993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%var_3993, dtype="float32") /* ty=Tensor[(14, 10, 8), float32] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %486 = cast(%var_4002, dtype="float32") /* ty=Tensor[(72), float32] */;
  %487 = reshape(%486, newshape=[6, 12, 1]) /* ty=Tensor[(6, 12, 1), float32] */;
  %488 = floor_divide(%484, %485) /* ty=Tensor[(14, 10, 8), float32] */;
  %489 = @func_3647(%487) /* ty=Tensor[(6, 12, 1), float32] */;
  (%488, %489, %var_4002)
}

def @func_6770() -> Tensor[(1, 5, 16), float64] {
  %490 = @func_5432() /* ty=Tensor[(1, 5, 16), float64] */;
  %491 = cast(%490, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  exp(%491) /* ty=Tensor[(1, 5, 16), float64] */
}

def @func_5035() -> (Tensor[(1, 5, 16), float64],) {
  %492 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
  (%492,)
}

def @func_9061(%var_9043: Tensor[(1, 16, 11), float64], %var_9051: Tensor[(360), int8], %var_9052: Tensor[(1500, 1), int64]) -> (Tensor[(1, 16, 11), float64], Tensor[(8, 5, 9), int8], Tensor[(336), float32], Tensor[(360), int8], Tensor[(1500, 1), int64]) {
  %493 = cast(%var_9043, dtype="float64") /* ty=Tensor[(1, 16, 11), float64] */;
  %494 = cast(meta[relay.Constant][35] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %495 = cast(%var_9051, dtype="int8") /* ty=Tensor[(360), int8] */;
  %496 = cast(%var_9052, dtype="int64") /* ty=Tensor[(1500, 1), int64] */;
  %497 = reshape(%494, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), float32] */;
  %498 = reshape(%495, newshape=[360]) /* ty=Tensor[(360), int8] */;
  %499 = reshape(%496, newshape=[1500]) /* ty=Tensor[(1500), int64] */;
  %500 = @func_6691(%497, %498, %499) /* ty=(Tensor[(1, 80), float64], Tensor[(8, 5, 9), int8], Tensor[(360), int8], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1500), int64], Tensor[(14, 4, 6), float64]) */;
  %501 = asinh(%493) /* ty=Tensor[(1, 16, 11), float64] */;
  %502 = %500.1;
  (%501, %502, meta[relay.Constant][35] /* ty=Tensor[(336), float32] */, %var_9051, %var_9052)
}

def @func_220(%var_216: Tensor[(13, 2, 3), float64]) -> Tensor[(13, 2, 3), float64] {
  %503 = cast(%var_216, dtype="float64") /* ty=Tensor[(13, 2, 3), float64] */;
  acos(%503) /* ty=Tensor[(13, 2, 3), float64] */
}

def @func_4530(%var_4523: Tensor[(5, 14, 12), float64]) -> Tensor[(5, 14, 12), float32] {
  %504 = cast(%var_4523, dtype="float64") /* ty=Tensor[(5, 14, 12), float64] */;
  %505 = asin(%504) /* ty=Tensor[(5, 14, 12), float64] */;
  %506 = cast(%505, dtype="float32") /* ty=Tensor[(5, 14, 12), float32] */;
  erf(%506) /* ty=Tensor[(5, 14, 12), float32] */
}

def @func_9344(%var_9327: Tensor[(10, 7, 14), int16], %var_9328: Tensor[(10, 7, 14), int16]) -> (Tensor[(10, 7, 14), int16],) {
  %507 = cast(%var_9328, dtype="int16") /* ty=Tensor[(10, 7, 14), int16] */;
  %508 = shape_of(%var_9327, dtype="int32") /* ty=Tensor[(3), int32] */;
  %509 = cast(%var_9327, dtype="int16") /* ty=Tensor[(10, 7, 14), int16] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %511 = subtract(%509, %510) /* ty=Tensor[(10, 7, 14), int16] */;
  (%511,)
}

def @func_6415() -> (Tensor[(1, 80), float64],) {
  %512 = @func_4877() /* ty=Tensor[(1, 80), float64] */;
  (%512,)
}

def @func_7259() -> Tensor[(?, 80), uint16] {
  %513 = @func_6550() /* ty=(Tensor[(?, 80), uint16], Tensor[(1, 80), float64]) */;
  %513.0
}

def @func_6927() -> (Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) {
  %514 = @func_5653() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(350), int64]) */;
  %515 = @func_5432() /* ty=Tensor[(1, 5, 16), float64] */;
  %516 = %514.0;
  (%515, %516)
}

def @func_6175() -> Tensor[(10, 80), uint16] {
  %517 = @func_4877() /* ty=Tensor[(1, 80), float64] */;
  %518 = cast(%517, dtype="uint16") /* ty=Tensor[(1, 80), uint16] */;
  %519 = cast(meta[relay.Constant][36] /* ty=Tensor[(10, 80), float64] */, dtype="uint16") /* ty=Tensor[(10, 80), uint16] */;
  logical_xor(%518, %519) /* ty=Tensor[(10, 80), uint16] */
}

def @func_9237() -> (Tensor[(1, 5, 16), float64],) {
  %520 = @func_7954() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %521 = %520.0;
  (%521,)
}

def @func_7436() -> (Tensor[(1, 5, 16), float64], Tensor[(16, 4, 8), float32], Tensor[(512), float32]) {
  %522 = @func_5035() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %523 = cast(meta[relay.Constant][37] /* ty=Tensor[(512), float32] */, dtype="float32") /* ty=Tensor[(512), float32] */;
  %524 = reshape(%523, newshape=[16, 4, 8]) /* ty=Tensor[(16, 4, 8), float32] */;
  %525 = @func_7246(%524) /* ty=(Tensor[(16, 4, 8), float32],) */;
  %526 = %522.0;
  %527 = %525.0;
  (%526, %527, meta[relay.Constant][37] /* ty=Tensor[(512), float32] */)
}

def @func_8865(%var_8849: Tensor[(240), float64], %var_8863: Tensor[(78), float64]) -> (Tensor[(15, 12, 9), bool], Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64], Tensor[(?, 5, 16), int16], Tensor[(3, 5, 16), int32], Tensor[(240), float64], Tensor[(396), float32], Tensor[(?, 5, 16), float64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) {
  %528 = @func_6219() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(5, 80), uint8]) */;
  %529 = @func_5082() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %530 = @func_5166() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */;
  %531 = @func_6031() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(15, 12, 9), bool], Tensor[(108, 1), uint16], Tensor[(15, 12, 9), bool]) */;
  %532 = @func_5017() /* ty=Tensor[(1, 5, 16), float64] */;
  %533 = cast(%532, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  %534 = sin(%533) /* ty=Tensor[(1, 5, 16), float64] */;
  %535 = cast(%534, dtype="float32") /* ty=Tensor[(1, 5, 16), float32] */;
  %536 = tan(%535) /* ty=Tensor[(1, 5, 16), float32] */;
  %537 = cast(%534, dtype="int16") /* ty=Tensor[(1, 5, 16), int16] */;
  %538 = shape_of(%536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %539 = cast(%536, dtype="int16") /* ty=Tensor[(1, 5, 16), int16] */;
  %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %541 = cast(%var_8849, dtype="float64") /* ty=Tensor[(240), float64] */;
  %542 = cast(meta[relay.Constant][38] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %543 = reshape(%541, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), float64] */;
  %544 = reshape(%542, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %545 = @func_6452(%543, %544) /* ty=(Tensor[(3, 5, 16), int32], Tensor[(11, 12, 3), bool], Tensor[(6, 66), float32], Tensor[(1, 5, 16), float64]) */;
  %546 = cast(%536, dtype="float32") /* ty=Tensor[(1, 5, 16), float32] */;
  %547 = log(%546) /* ty=Tensor[(1, 5, 16), float32] */;
  %548 = cast(%532, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  %549 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%547, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %552 = cast(%var_8863, dtype="float64") /* ty=Tensor[(78), float64] */;
  %553 = reshape(%552, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %554 = @func_8562() /* ty=Tensor[(15, 12, 9), bool] */;
  %555 = %528.0;
  %556 = %529.0;
  %557 = %530.1;
  %558 = %531.0;
  %559 = logical_xor(%539, %540) /* ty=Tensor[(?, 5, 16), int16] */;
  %560 = %545.0;
  %561 = floor_mod(%550, %551) /* ty=Tensor[(?, 5, 16), float64] */;
  %562 = @func_220(%553) /* ty=Tensor[(13, 2, 3), float64] */;
  (%554, %555, %556, %557, %558, %559, %560, %var_8849, meta[relay.Constant][38] /* ty=Tensor[(396), float32] */, %561, %562, %var_8863)
}

def @func_6031() -> (Tensor[(1, 5, 16), float64], Tensor[(15, 12, 9), bool], Tensor[(108, 1), uint16], Tensor[(15, 12, 9), bool]) {
  %563 = cast(meta[relay.Constant][39] /* ty=Tensor[(108, 1), uint16] */, dtype="uint16") /* ty=Tensor[(108, 1), uint16] */;
  %564 = reshape(%563, newshape=[1, 12, 9]) /* ty=Tensor[(1, 12, 9), uint16] */;
  %565 = @func_3664(%564) /* ty=(Tensor[(15, 12, 9), bool],) */;
  %566 = cast(meta[relay.Constant][39] /* ty=Tensor[(108, 1), uint16] */, dtype="uint16") /* ty=Tensor[(108, 1), uint16] */;
  %567 = reshape(%566, newshape=[1, 12, 9]) /* ty=Tensor[(1, 12, 9), uint16] */;
  %568 = @func_3664(%567) /* ty=(Tensor[(15, 12, 9), bool],) */;
  %569 = @func_5432() /* ty=Tensor[(1, 5, 16), float64] */;
  %570 = %565.0;
  %571 = %568.0;
  (%569, %570, meta[relay.Constant][39] /* ty=Tensor[(108, 1), uint16] */, %571)
}

def @func_3664(%var_3659: Tensor[(1, 12, 9), uint16]) -> (Tensor[(15, 12, 9), bool],) {
  %572 = cast(%var_3659, dtype="bool") /* ty=Tensor[(1, 12, 9), bool] */;
  %573 = cast(meta[relay.Constant][40] /* ty=Tensor[(15, 12, 9), uint16] */, dtype="bool") /* ty=Tensor[(15, 12, 9), bool] */;
  %574 = greater(%572, %573) /* ty=Tensor[(15, 12, 9), bool] */;
  (%574,)
}

def @func_7362(%var_7279: Tensor[(9, 12, 9), float64], %var_7295: Tensor[(44), float64], %var_7296: Tensor[(675), float32], %var_7298: Tensor[(72, 1), float32], %var_7323: Tensor[(525), int64], %var_7345: Tensor[(26, 3), float64]) -> (Tensor[(?, 5, 16), int32], Tensor[(9, 12, 9), int64], Tensor[(675), float32], Tensor[(44), float64], Tensor[(675), float32], Tensor[(56, 20), float32], Tensor[(72, 1), float32], Tensor[(5, 15, 9), float32], Tensor[(98), float64], Tensor[(9, 80), float64], Tensor[(72), float32], Tensor[(525), int64], Tensor[(72), float32], Tensor[(1, 5, 16), float64], Tensor[(26, 3), uint64], Tensor[(10), float64], Tensor[(1248), float64]) {
  %575 = @func_5653() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(350), int64]) */;
  %576 = %575.0;
  %577 = @func_4877() /* ty=Tensor[(1, 80), float64] */;
  %578 = cast(%577, dtype="int32") /* ty=Tensor[(1, 80), int32] */;
  %579 = shape_of(%576, dtype="int32") /* ty=Tensor[(3), int32] */;
  %580 = cast(%576, dtype="int32") /* ty=Tensor[(1, 5, 16), int32] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %582 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %583 = %582.0;
  %584 = cast(%var_7279, dtype="int64") /* ty=Tensor[(9, 12, 9), int64] */;
  %585 = shape_of(%583, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%583, dtype="int64") /* ty=Tensor[(9, 12, 9), int64] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %588 = cast(%var_7295, dtype="float64") /* ty=Tensor[(44), float64] */;
  %589 = cast(%var_7295, dtype="float64") /* ty=Tensor[(44), float64] */;
  %590 = cast(%var_7296, dtype="float32") /* ty=Tensor[(675), float32] */;
  %591 = cast(meta[relay.Constant][41] /* ty=Tensor[(56, 20), float32] */, dtype="float32") /* ty=Tensor[(56, 20), float32] */;
  %592 = cast(%var_7298, dtype="float32") /* ty=Tensor[(72, 1), float32] */;
  %593 = cast(meta[relay.Constant][42] /* ty=Tensor[(26, 3), float64] */, dtype="float64") /* ty=Tensor[(26, 3), float64] */;
  %594 = reshape(%588, newshape=[2, 2, 11]) /* ty=Tensor[(2, 2, 11), float64] */;
  %595 = reshape(%589, newshape=[2, 2, 11]) /* ty=Tensor[(2, 2, 11), float64] */;
  %596 = reshape(%590, newshape=[675]) /* ty=Tensor[(675), float32] */;
  %597 = reshape(%591, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %598 = reshape(%592, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %599 = reshape(%593, newshape=[78, 1]) /* ty=Tensor[(78, 1), float64] */;
  %600 = @func_7067(%594, %595, %596, %597, %598, %599) /* ty=(Tensor[(98), float64], Tensor[(9), float32], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1120), float32], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(2, 2, 11), float64], Tensor[(9, 12, 9), float64], Tensor[(1, 80), float64], Tensor[(1, 5, 16), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(78, 1), float64], Tensor[(525), int64]) */;
  %601 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 1), float32] */, dtype="float32") /* ty=Tensor[(9, 1), float32] */;
  %602 = %600.2;
  %603 = cast(%602, dtype="float32") /* ty=Tensor[(675), float32] */;
  %604 = cast(meta[relay.Constant][44] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
  %605 = reshape(%601, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float32] */;
  %606 = reshape(%603, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float32] */;
  %607 = reshape(%604, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %608 = @func_3339(%605, %606, %607) /* ty=(Tensor[(5, 15, 9), float32], Tensor[(1344, 1), float32], Tensor[(98), float64], Tensor[(1344), float32]) */;
  %609 = cast(%577, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %610 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 1), float32] */, dtype="float64") /* ty=Tensor[(9, 1), float64] */;
  %611 = cast(%var_7323, dtype="int64") /* ty=Tensor[(525), int64] */;
  %612 = cast(%var_7323, dtype="int64") /* ty=Tensor[(525), int64] */;
  %613 = cast(%var_7298, dtype="float32") /* ty=Tensor[(72, 1), float32] */;
  %614 = reshape(%611, newshape=[15, 5, 7]) /* ty=Tensor[(15, 5, 7), int64] */;
  %615 = reshape(%612, newshape=[15, 5, 7]) /* ty=Tensor[(15, 5, 7), int64] */;
  %616 = reshape(%613, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %617 = @func_4343(%614, %615, %616) /* ty=(Tensor[(15, 5, 7), int64], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) */;
  %618 = cast(meta[relay.Constant][41] /* ty=Tensor[(56, 20), float32] */, dtype="float32") /* ty=Tensor[(56, 20), float32] */;
  %619 = cast(meta[relay.Constant][41] /* ty=Tensor[(56, 20), float32] */, dtype="float32") /* ty=Tensor[(56, 20), float32] */;
  %620 = %617.2;
  %621 = cast(%620, dtype="float32") /* ty=Tensor[(72), float32] */;
  %622 = reshape(%618, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float32] */;
  %623 = reshape(%619, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float32] */;
  %624 = reshape(%621, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %625 = @func_4007(%622, %623, %624) /* ty=(Tensor[(14, 10, 8), float32], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) */;
  %626 = cast(%var_7345, dtype="uint64") /* ty=Tensor[(26, 3), uint64] */;
  %627 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(26, 3), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %628 = cast(meta[relay.Constant][42] /* ty=Tensor[(26, 3), float64] */, dtype="uint64") /* ty=Tensor[(26, 3), uint64] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %630 = cast(meta[relay.Constant][45] /* ty=Tensor[(1248), float64] */, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %631 = reshape(%630, newshape=[16, 6, 13]) /* ty=Tensor[(16, 6, 13), float64] */;
  %632 = @func_6615(%631) /* ty=(Tensor[(16, 6, 13), float64], Tensor[(1, 2, 5), float64], Tensor[(10), float64]) */;
  %633 = multiply(%580, %581) /* ty=Tensor[(?, 5, 16), int32] */;
  %634 = add(%586, %587) /* ty=Tensor[(9, 12, 9), int64] */;
  %635 = %608.0;
  %636 = floor_divide(%609, %610) /* ty=Tensor[(9, 80), float64] */;
  %637 = %625.2;
  %638 = @func_5432() /* ty=Tensor[(1, 5, 16), float64] */;
  %639 = add(%628, %629) /* ty=Tensor[(26, 3), uint64] */;
  %640 = %632.2;
  (%633, %634, %602, %var_7295, %var_7296, meta[relay.Constant][41] /* ty=Tensor[(56, 20), float32] */, %var_7298, %635, meta[relay.Constant][44] /* ty=Tensor[(98), float64] */, %636, %620, %var_7323, %637, %638, %639, %640, meta[relay.Constant][45] /* ty=Tensor[(1248), float64] */)
}

def @func_5239(%var_5194: Tensor[(1, 5, 16), float64], %var_5219: Tensor[(12, 5, 16), float64]) -> (Tensor[(?, 5, 16), uint16], Tensor[(12, 5, 16), uint16]) {
  %641 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %642 = %641.1;
  %643 = cast(%var_5194, dtype="bool") /* ty=Tensor[(1, 5, 16), bool] */;
  %644 = shape_of(%642, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(%642, dtype="bool") /* ty=Tensor[(1, 5, 16), bool] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %647 = less(%645, %646) /* ty=Tensor[(?, 5, 16), bool] */;
  %648 = cast(%647, dtype="uint16") /* ty=Tensor[(?, 5, 16), uint16] */;
  %649 = shape_of(%642, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(%642, dtype="uint16") /* ty=Tensor[(1, 5, 16), uint16] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %652 = cast(%642, dtype="uint16") /* ty=Tensor[(1, 5, 16), uint16] */;
  %653 = cast(%var_5219, dtype="uint16") /* ty=Tensor[(12, 5, 16), uint16] */;
  %654 = bitwise_and(%650, %651) /* ty=Tensor[(?, 5, 16), uint16] */;
  %655 = add(%652, %653) /* ty=Tensor[(12, 5, 16), uint16] */;
  (%654, %655)
}

def @func_6615(%var_6575: Tensor[(16, 6, 13), float64]) -> (Tensor[(16, 6, 13), float64], Tensor[(1, 2, 5), float64], Tensor[(10), float64]) {
  %656 = cast(%var_6575, dtype="float64") /* ty=Tensor[(16, 6, 13), float64] */;
  %657 = cast(meta[relay.Constant][46] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
  %658 = reshape(%657, newshape=[1, 2, 5]) /* ty=Tensor[(1, 2, 5), float64] */;
  %659 = asinh(%656) /* ty=Tensor[(16, 6, 13), float64] */;
  %660 = @func_5753(%658) /* ty=Tensor[(1, 2, 5), float64] */;
  (%659, %660, meta[relay.Constant][46] /* ty=Tensor[(10), float64] */)
}

def @func_6219() -> (Tensor[(9, 12, 9), float64], Tensor[(5, 80), uint8]) {
  %661 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %662 = @func_5833() /* ty=Tensor[(1, 80), float64] */;
  %663 = cast(%662, dtype="uint8") /* ty=Tensor[(1, 80), uint8] */;
  %664 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 80), float64] */, dtype="uint8") /* ty=Tensor[(5, 80), uint8] */;
  %665 = %661.0;
  %666 = bitwise_or(%663, %664) /* ty=Tensor[(5, 80), uint8] */;
  (%665, %666)
}

def @func_3956(%var_3864: Tensor[(108), uint16], %var_3883: Tensor[(1, 9), float32], %var_3885: Tensor[(98), float64], %var_3892: Tensor[(1344), float32], %var_3907: Tensor[(360), int8], %var_3908: Tensor[(1500), int64], %var_3915: Tensor[(78), float64]) -> (Tensor[(12, 7, 15), float32], Tensor[(108), uint16], Tensor[(5, 15, 9), float32], Tensor[(1, 9), float32], Tensor[(225, 3), float32], Tensor[(98), float64], Tensor[(14, 16, 6), float32], Tensor[(1344), float32], Tensor[(15, 12, 9), float64], Tensor[(1, 9), float32], Tensor[(360), int8], Tensor[(1500), int64], Tensor[(15, 12, 9), float32], Tensor[(13, 2, 3), float64], Tensor[(78), float64], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(13, 2, 3), float64], Tensor[(15, 10, 10), int64], Tensor[(11, 12, 3), bool]) {
  %667 = cast(meta[relay.Constant][48] /* ty=Tensor[(12, 7, 15), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 15), float32] */;
  %668 = cast(%var_3883, dtype="float32") /* ty=Tensor[(1, 9), float32] */;
  %669 = cast(meta[relay.Constant][49] /* ty=Tensor[(225, 3), float32] */, dtype="float32") /* ty=Tensor[(225, 3), float32] */;
  %670 = cast(%var_3885, dtype="float64") /* ty=Tensor[(98), float64] */;
  %671 = reshape(%668, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float32] */;
  %672 = reshape(%669, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float32] */;
  %673 = reshape(%670, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %674 = @func_3339(%671, %672, %673) /* ty=(Tensor[(5, 15, 9), float32], Tensor[(1344, 1), float32], Tensor[(98), float64], Tensor[(1344), float32]) */;
  %675 = cast(%var_3892, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %676 = reshape(%675, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %677 = cast(%var_3864, dtype="uint16") /* ty=Tensor[(108), uint16] */;
  %678 = reshape(%677, newshape=[1, 12, 9]) /* ty=Tensor[(1, 12, 9), uint16] */;
  %679 = @func_3664(%678) /* ty=(Tensor[(15, 12, 9), bool],) */;
  %680 = %679.0;
  %681 = cast(%680, dtype="float32") /* ty=Tensor[(15, 12, 9), float32] */;
  %682 = log2(%681) /* ty=Tensor[(15, 12, 9), float32] */;
  %683 = cast(%682, dtype="float64") /* ty=Tensor[(15, 12, 9), float64] */;
  %684 = cast(%var_3907, dtype="int8") /* ty=Tensor[(360), int8] */;
  %685 = %674.0;
  %686 = cast(%685, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  %687 = cast(%var_3885, dtype="float64") /* ty=Tensor[(98), float64] */;
  %688 = cast(%var_3908, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %689 = reshape(%684, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int8] */;
  %690 = reshape(%686, newshape=[675]) /* ty=Tensor[(675), float32] */;
  %691 = reshape(%687, newshape=[7, 14]) /* ty=Tensor[(7, 14), float64] */;
  %692 = reshape(%688, newshape=[1500]) /* ty=Tensor[(1500), int64] */;
  %693 = @func_3444(%689, %690, %691, %692) /* ty=(Tensor[(8, 5, 9), int8], Tensor[(1344), float32], Tensor[(1, 9), float32], Tensor[(7, 14), float64], Tensor[(78), float64], Tensor[(1500), int64], Tensor[(675), float32]) */;
  %694 = cast(%682, dtype="float32") /* ty=Tensor[(15, 12, 9), float32] */;
  %695 = atan(%694) /* ty=Tensor[(15, 12, 9), float32] */;
  %696 = cast(%695, dtype="float32") /* ty=Tensor[(15, 12, 9), float32] */;
  %697 = rsqrt(%696) /* ty=Tensor[(15, 12, 9), float32] */;
  %698 = cast(%697, dtype="float32") /* ty=Tensor[(15, 12, 9), float32] */;
  %699 = cast(%var_3915, dtype="float64") /* ty=Tensor[(78), float64] */;
  %700 = reshape(%699, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %701 = cast(meta[relay.Constant][50] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %702 = reshape(%701, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float32] */;
  %703 = cast(%var_3908, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %704 = cast(%var_3908, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %705 = reshape(%703, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), int64] */;
  %706 = reshape(%704, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), int64] */;
  %707 = @func_1705(%705, %706) /* ty=(Tensor[(15, 10, 10), int64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) */;
  %708 = cast(%var_3908, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %709 = cast(%var_3908, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %710 = reshape(%708, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), int64] */;
  %711 = reshape(%709, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), int64] */;
  %712 = @func_1705(%710, %711) /* ty=(Tensor[(15, 10, 10), int64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) */;
  %713 = @func_2712(%702) /* ty=Tensor[(11, 12, 3), bool] */;
  %714 = cast(%713, dtype="float32") /* ty=Tensor[(11, 12, 3), float32] */;
  %715 = reshape(%714, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float32] */;
  %716 = erf(%667) /* ty=Tensor[(12, 7, 15), float32] */;
  %717 = @func_275(%676) /* ty=Tensor[(14, 16, 6), float32] */;
  %718 = erf(%683) /* ty=Tensor[(15, 12, 9), float64] */;
  %719 = %693.2;
  %720 = sigmoid(%698) /* ty=Tensor[(15, 12, 9), float32] */;
  %721 = @func_220(%700) /* ty=Tensor[(13, 2, 3), float64] */;
  %722 = %707.1;
  %723 = %712.0;
  %724 = @func_2712(%715) /* ty=Tensor[(11, 12, 3), bool] */;
  (%716, %var_3864, %685, %var_3883, meta[relay.Constant][49] /* ty=Tensor[(225, 3), float32] */, %var_3885, %717, %var_3892, %718, %719, %var_3907, %var_3908, %720, %721, %var_3915, %713, meta[relay.Constant][50] /* ty=Tensor[(396), float32] */, %722, %723, %724)
}

def @func_7586(%var_7577: Tensor[(2, 168), float32], %var_7578: Tensor[(360), int8], %var_7579: Tensor[(1500), int64]) -> (Tensor[(1, 80), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64], Tensor[(2, 168), float32], Tensor[(360), int8], Tensor[(1500), int64], Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float64]) {
  %725 = @func_6487() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %726 = cast(%var_7577, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
  %727 = cast(%var_7578, dtype="int8") /* ty=Tensor[(360), int8] */;
  %728 = cast(%var_7579, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %729 = reshape(%726, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), float32] */;
  %730 = reshape(%727, newshape=[360]) /* ty=Tensor[(360), int8] */;
  %731 = reshape(%728, newshape=[1500]) /* ty=Tensor[(1500), int64] */;
  %732 = @func_6691(%729, %730, %731) /* ty=(Tensor[(1, 80), float64], Tensor[(8, 5, 9), int8], Tensor[(360), int8], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1500), int64], Tensor[(14, 4, 6), float64]) */;
  %733 = %725.0;
  %734 = cast(%733, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  %735 = reshape(%734, newshape=[1, 5, 16]) /* ty=Tensor[(1, 5, 16), float64] */;
  %736 = @func_5653() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(350), int64]) */;
  %737 = %736.1;
  %738 = cast(%737, dtype="float64") /* ty=Tensor[(14, 16, 6), float64] */;
  %739 = asin(%738) /* ty=Tensor[(14, 16, 6), float64] */;
  %740 = cast(%739, dtype="float64") /* ty=Tensor[(14, 16, 6), float64] */;
  %741 = @func_5774() /* ty=Tensor[(1, 80), float64] */;
  %742 = %732.0;
  %743 = @func_4767(%735) /* ty=Tensor[(1, 5, 16), float64] */;
  %744 = cosh(%740) /* ty=Tensor[(14, 16, 6), float64] */;
  (%741, %733, %742, %var_7577, %var_7578, %var_7579, %743, %744)
}

def @func_5952() -> (Tensor[(11, 80), float64], Tensor[(11, 80), bool], Tensor[(1, 5, 16), float64]) {
  %745 = @func_5774() /* ty=Tensor[(1, 80), float64] */;
  %746 = cast(%745, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %747 = cast(meta[relay.Constant][51] /* ty=Tensor[(11, 80), float64] */, dtype="float64") /* ty=Tensor[(11, 80), float64] */;
  %748 = cast(%745, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
  %749 = cast(meta[relay.Constant][51] /* ty=Tensor[(11, 80), float64] */, dtype="bool") /* ty=Tensor[(11, 80), bool] */;
  %750 = cast(%745, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %751 = reshape(%750, newshape=[1, 5, 16]) /* ty=Tensor[(1, 5, 16), float64] */;
  %752 = power(%746, %747) /* ty=Tensor[(11, 80), float64] */;
  %753 = less(%748, %749) /* ty=Tensor[(11, 80), bool] */;
  %754 = @func_4767(%751) /* ty=Tensor[(1, 5, 16), float64] */;
  (%752, %753, %754)
}

def @func_7246(%var_7242: Tensor[(16, 4, 8), float32]) -> (Tensor[(16, 4, 8), float32],) {
  %755 = cast(%var_7242, dtype="float32") /* ty=Tensor[(16, 4, 8), float32] */;
  %756 = tan(%755) /* ty=Tensor[(16, 4, 8), float32] */;
  (%756,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8869(%var_8867: Tensor[(240), float64], %var_8868: Tensor[(78), float64]) -> (Tensor[(15, 12, 9), bool], Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64], Tensor[(?, 5, 16), int16], Tensor[(3, 5, 16), int32], Tensor[(240), float64], Tensor[(396), float32], Tensor[(?, 5, 16), float64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) {
  @func_8865(%var_8867, %var_8868) /* ty=(Tensor[(15, 12, 9), bool], Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64], Tensor[(?, 5, 16), int16], Tensor[(3, 5, 16), int32], Tensor[(240), float64], Tensor[(396), float32], Tensor[(?, 5, 16), float64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) */
}

def @func_4787() -> (Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) {
  @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */
}

def @func_5833() -> Tensor[(1, 80), float64] {
  @func_4877() /* ty=Tensor[(1, 80), float64] */
}

def @func_923(%var_901: Tensor[(5, 10, 7), int64]) -> (Tensor[(5, 10, 7), int64], Tensor[(14, 16, 6), float32], Tensor[(1344), float32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 10, 7), int64] */, dtype="int64") /* ty=Tensor[(5, 10, 7), int64] */;
  %1 = shape_of(%var_901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_901, dtype="int64") /* ty=Tensor[(5, 10, 7), int64] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %5 = reshape(%4, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %6 = bitwise_xor(%2, %3) /* ty=Tensor[(5, 10, 7), int64] */;
  %7 = @func_275(%5) /* ty=Tensor[(14, 16, 6), float32] */;
  (%6, %7, meta[relay.Constant][1] /* ty=Tensor[(1344), float32] */)
}

def @func_5387(%var_5382: Tensor[(1120), float32], %var_5383: Tensor[(72), float32], %var_5384: Tensor[(13, 2, 3), float64], %var_5385: Tensor[(396), float32], %var_5386: Tensor[(525), int64]) -> (Tensor[(10, 80), int64], Tensor[(78), float64], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(72), float32], Tensor[(13, 2, 3), bool], Tensor[(13, 2, 3), float64], Tensor[(?, 80), int16], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(15, 5, 7), int64], Tensor[(525), int64], Tensor[(1, 80), float64]) {
  @func_5380(%var_5382, %var_5383, %var_5384, %var_5385, %var_5386) /* ty=(Tensor[(10, 80), int64], Tensor[(78), float64], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(72), float32], Tensor[(13, 2, 3), bool], Tensor[(13, 2, 3), float64], Tensor[(?, 80), int16], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(15, 5, 7), int64], Tensor[(525), int64], Tensor[(1, 80), float64]) */
}

def @func_9682() -> Tensor[(1, 80), float64] {
  @func_9680() /* ty=Tensor[(1, 80), float64] */
}

def @func_278(%var_276: Tensor[(14, 16, 6), float32]) -> Tensor[(14, 16, 6), float32] {
  @func_275(%var_276) /* ty=Tensor[(14, 16, 6), float32] */
}

def @func_6175() -> Tensor[(10, 80), uint16] {
  %8 = @func_4877() /* ty=Tensor[(1, 80), float64] */;
  %9 = cast(%8, dtype="uint16") /* ty=Tensor[(1, 80), uint16] */;
  %10 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 80), float64] */, dtype="uint16") /* ty=Tensor[(10, 80), uint16] */;
  logical_xor(%9, %10) /* ty=Tensor[(10, 80), uint16] */
}

def @func_4981(%var_4979: Tensor[(396), float32]) -> (Tensor[(1, 5, 16), float64], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(11, 12, 3), bool]) {
  @func_4978(%var_4979) /* ty=(Tensor[(1, 5, 16), float64], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(11, 12, 3), bool]) */
}

def @func_6455(%var_6453: Tensor[(3, 5, 16), float64], %var_6454: Tensor[(6, 66), float32]) -> (Tensor[(3, 5, 16), int32], Tensor[(11, 12, 3), bool], Tensor[(6, 66), float32], Tensor[(1, 5, 16), float64]) {
  %20 = fn (%var_6426: Tensor[(3, 5, 16), float64], %var_6444: Tensor[(6, 66), float32]) -> (Tensor[(3, 5, 16), int32], Tensor[(11, 12, 3), bool], Tensor[(6, 66), float32], Tensor[(1, 5, 16), float64]) {
    %11 = @func_5432() /* ty=Tensor[(1, 5, 16), float64] */;
    %12 = cast(%11, dtype="int32") /* ty=Tensor[(1, 5, 16), int32] */;
    %13 = cast(%var_6426, dtype="int32") /* ty=Tensor[(3, 5, 16), int32] */;
    %14 = cast(%var_6444, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
    %15 = reshape(%14, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float32] */;
    %16 = @func_5952() /* ty=(Tensor[(11, 80), float64], Tensor[(11, 80), bool], Tensor[(1, 5, 16), float64]) */;
    %17 = logical_xor(%12, %13) /* ty=Tensor[(3, 5, 16), int32] */;
    %18 = @func_2712(%15) /* ty=Tensor[(11, 12, 3), bool] */;
    %19 = %16.2;
    (%17, %18, %var_6444, %19)
  };
  %20(%var_6453, %var_6454) /* ty=(Tensor[(3, 5, 16), int32], Tensor[(11, 12, 3), bool], Tensor[(6, 66), float32], Tensor[(1, 5, 16), float64]) */
}

def @func_952(%var_950: Tensor[(1, 14, 7), float64], %var_951: Tensor[(1344, 1), float32]) -> (Tensor[(1, 14, 7), float64], Tensor[(14, 16, 6), float32], Tensor[(1344, 1), float32]) {
  @func_948(%var_950, %var_951) /* ty=(Tensor[(1, 14, 7), float64], Tensor[(14, 16, 6), float32], Tensor[(1344, 1), float32]) */
}

def @func_220(%var_216: Tensor[(13, 2, 3), float64]) -> Tensor[(13, 2, 3), float64] {
  %21 = cast(%var_216, dtype="float64") /* ty=Tensor[(13, 2, 3), float64] */;
  acos(%21) /* ty=Tensor[(13, 2, 3), float64] */
}

def @func_5952() -> (Tensor[(11, 80), float64], Tensor[(11, 80), bool], Tensor[(1, 5, 16), float64]) {
  %22 = @func_5774() /* ty=Tensor[(1, 80), float64] */;
  %23 = cast(%22, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %24 = cast(meta[relay.Constant][3] /* ty=Tensor[(11, 80), float64] */, dtype="float64") /* ty=Tensor[(11, 80), float64] */;
  %25 = cast(%22, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
  %26 = cast(meta[relay.Constant][3] /* ty=Tensor[(11, 80), float64] */, dtype="bool") /* ty=Tensor[(11, 80), bool] */;
  %27 = cast(%22, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %28 = reshape(%27, newshape=[1, 5, 16]) /* ty=Tensor[(1, 5, 16), float64] */;
  %29 = power(%23, %24) /* ty=Tensor[(11, 80), float64] */;
  %30 = less(%25, %26) /* ty=Tensor[(11, 80), bool] */;
  %31 = @func_4767(%28) /* ty=Tensor[(1, 5, 16), float64] */;
  (%29, %30, %31)
}

def @func_8344(%var_8342: Tensor[(7, 11, 4), int32]) -> (Tensor[(7, 11, 4), int32],) {
  @func_8341(%var_8342) /* ty=(Tensor[(7, 11, 4), int32],) */
}

def @func_5082() -> (Tensor[(1, 5, 16), float64],) {
  %32 = @func_5017() /* ty=Tensor[(1, 5, 16), float64] */;
  (%32,)
}

def @func_6771() -> Tensor[(1, 5, 16), float64] {
  %35 = fn () -> Tensor[(1, 5, 16), float64] {
    %33 = @func_5432() /* ty=Tensor[(1, 5, 16), float64] */;
    %34 = cast(%33, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
    exp(%34) /* ty=Tensor[(1, 5, 16), float64] */
  };
  %35() /* ty=Tensor[(1, 5, 16), float64] */
}

def @func_5432() -> Tensor[(1, 5, 16), float64] {
  %36 = @func_5035() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %36.0
}

def @func_6927() -> (Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) {
  %37 = @func_5653() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(350), int64]) */;
  %38 = @func_5432() /* ty=Tensor[(1, 5, 16), float64] */;
  %39 = %37.0;
  (%38, %39)
}

def @func_5954() -> (Tensor[(11, 80), float64], Tensor[(11, 80), bool], Tensor[(1, 5, 16), float64]) {
  @func_5952() /* ty=(Tensor[(11, 80), float64], Tensor[(11, 80), bool], Tensor[(1, 5, 16), float64]) */
}

def @func_9433() -> (Tensor[(?, 80), uint16],) {
  %41 = fn () -> (Tensor[(?, 80), uint16],) {
    %40 = @func_7259() /* ty=Tensor[(?, 80), uint16] */;
    (%40,)
  };
  %41() /* ty=(Tensor[(?, 80), uint16],) */
}

def @func_7260() -> Tensor[(?, 80), uint16] {
  %43 = fn () -> Tensor[(?, 80), uint16] {
    %42 = @func_6550() /* ty=(Tensor[(?, 80), uint16], Tensor[(1, 80), float64]) */;
    %42.0
  };
  %43() /* ty=Tensor[(?, 80), uint16] */
}

def @func_4769(%var_4768: Tensor[(1, 5, 16), float64]) -> Tensor[(1, 5, 16), float64] {
  %45 = fn (%var_4758: Tensor[(1, 5, 16), float64]) -> Tensor[(1, 5, 16), float64] {
    %44 = cast(%var_4758, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
    sinh(%44) /* ty=Tensor[(1, 5, 16), float64] */
  };
  %45(%var_4768) /* ty=Tensor[(1, 5, 16), float64] */
}

def @func_3649(%var_3648: Tensor[(6, 12, 1), float32]) -> Tensor[(6, 12, 1), float32] {
  %47 = fn (%var_3644: Tensor[(6, 12, 1), float32]) -> Tensor[(6, 12, 1), float32] {
    %46 = cast(%var_3644, dtype="float32") /* ty=Tensor[(6, 12, 1), float32] */;
    acos(%46) /* ty=Tensor[(6, 12, 1), float32] */
  };
  %47(%var_3648) /* ty=Tensor[(6, 12, 1), float32] */
}

def @func_8865(%var_8849: Tensor[(240), float64], %var_8863: Tensor[(78), float64]) -> (Tensor[(15, 12, 9), bool], Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64], Tensor[(?, 5, 16), int16], Tensor[(3, 5, 16), int32], Tensor[(240), float64], Tensor[(396), float32], Tensor[(?, 5, 16), float64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) {
  %48 = @func_6219() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(5, 80), uint8]) */;
  %49 = @func_5082() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %50 = @func_5166() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */;
  %51 = @func_6031() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(15, 12, 9), bool], Tensor[(108, 1), uint16], Tensor[(15, 12, 9), bool]) */;
  %52 = @func_5017() /* ty=Tensor[(1, 5, 16), float64] */;
  %53 = cast(%52, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  %54 = sin(%53) /* ty=Tensor[(1, 5, 16), float64] */;
  %55 = cast(%54, dtype="float32") /* ty=Tensor[(1, 5, 16), float32] */;
  %56 = tan(%55) /* ty=Tensor[(1, 5, 16), float32] */;
  %57 = cast(%54, dtype="int16") /* ty=Tensor[(1, 5, 16), int16] */;
  %58 = shape_of(%56, dtype="int32") /* ty=Tensor[(3), int32] */;
  %59 = cast(%56, dtype="int16") /* ty=Tensor[(1, 5, 16), int16] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %61 = cast(%var_8849, dtype="float64") /* ty=Tensor[(240), float64] */;
  %62 = cast(meta[relay.Constant][4] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %63 = reshape(%61, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), float64] */;
  %64 = reshape(%62, newshape=[6, 66]) /* ty=Tensor[(6, 66), float32] */;
  %65 = @func_6452(%63, %64) /* ty=(Tensor[(3, 5, 16), int32], Tensor[(11, 12, 3), bool], Tensor[(6, 66), float32], Tensor[(1, 5, 16), float64]) */;
  %66 = cast(%56, dtype="float32") /* ty=Tensor[(1, 5, 16), float32] */;
  %67 = log(%66) /* ty=Tensor[(1, 5, 16), float32] */;
  %68 = cast(%52, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  %69 = shape_of(%67, dtype="int32") /* ty=Tensor[(3), int32] */;
  %70 = cast(%67, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %72 = cast(%var_8863, dtype="float64") /* ty=Tensor[(78), float64] */;
  %73 = reshape(%72, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %74 = @func_8562() /* ty=Tensor[(15, 12, 9), bool] */;
  %75 = %48.0;
  %76 = %49.0;
  %77 = %50.1;
  %78 = %51.0;
  %79 = logical_xor(%59, %60) /* ty=Tensor[(?, 5, 16), int16] */;
  %80 = %65.0;
  %81 = floor_mod(%70, %71) /* ty=Tensor[(?, 5, 16), float64] */;
  %82 = @func_220(%73) /* ty=Tensor[(13, 2, 3), float64] */;
  (%74, %75, %76, %77, %78, %79, %80, %var_8849, meta[relay.Constant][4] /* ty=Tensor[(396), float32] */, %81, %82, %var_8863)
}

def @func_4879() -> Tensor[(1, 80), float64] {
  @func_4877() /* ty=Tensor[(1, 80), float64] */
}

def @func_9238() -> (Tensor[(1, 5, 16), float64],) {
  %85 = fn () -> (Tensor[(1, 5, 16), float64],) {
    %83 = @func_7954() /* ty=(Tensor[(1, 5, 16), float64],) */;
    %84 = %83.0;
    (%84,)
  };
  %85() /* ty=(Tensor[(1, 5, 16), float64],) */
}

def @func_5775() -> Tensor[(1, 80), float64] {
  %87 = fn () -> Tensor[(1, 80), float64] {
    %86 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
    %86.2
  };
  %87() /* ty=Tensor[(1, 80), float64] */
}

def @func_6875(%var_6841: Tensor[(396), float32], %var_6849: Tensor[(1120), float32]) -> (Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(1, 72), float32], Tensor[(78), float64], Tensor[(525), int64], Tensor[(1, 5, 16), float32]) {
  %88 = cast(%var_6841, dtype="float32") /* ty=Tensor[(396), float32] */;
  %89 = reshape(%88, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %90 = @func_4978(%89) /* ty=(Tensor[(1, 5, 16), float64], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(11, 12, 3), bool]) */;
  %91 = cast(%var_6849, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %92 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 72), float32] */, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %93 = cast(meta[relay.Constant][6] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %94 = %90.3;
  %95 = cast(%94, dtype="float32") /* ty=Tensor[(11, 12, 3), float32] */;
  %96 = cast(meta[relay.Constant][7] /* ty=Tensor[(525), int64] */, dtype="int64") /* ty=Tensor[(525), int64] */;
  %97 = reshape(%91, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %98 = reshape(%92, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %99 = reshape(%93, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %100 = reshape(%95, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %101 = reshape(%96, newshape=[525]) /* ty=Tensor[(525), int64] */;
  %102 = @func_5380(%97, %98, %99, %100, %101) /* ty=(Tensor[(10, 80), int64], Tensor[(78), float64], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(72), float32], Tensor[(13, 2, 3), bool], Tensor[(13, 2, 3), float64], Tensor[(?, 80), int16], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(15, 5, 7), int64], Tensor[(525), int64], Tensor[(1, 80), float64]) */;
  %103 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
  %104 = cast(%103, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  %105 = asin(%104) /* ty=Tensor[(1, 5, 16), float64] */;
  %106 = cast(%105, dtype="float32") /* ty=Tensor[(1, 5, 16), float32] */;
  %107 = %102.2;
  %108 = log2(%106) /* ty=Tensor[(1, 5, 16), float32] */;
  (%94, %var_6841, %107, %var_6849, meta[relay.Constant][5] /* ty=Tensor[(1, 72), float32] */, meta[relay.Constant][6] /* ty=Tensor[(78), float64] */, meta[relay.Constant][7] /* ty=Tensor[(525), int64] */, %108)
}

def @func_8694(%var_8691: Tensor[(336), float32], %var_8692: Tensor[(360), int8], %var_8693: Tensor[(3, 500), int64]) -> (Tensor[(1, 5, 16), float64], Tensor[(14, 4, 6), float64], Tensor[(336), float32], Tensor[(360), int8], Tensor[(3, 500), int64], Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) {
  %123 = fn (%var_8665: Tensor[(336), float32], %var_8666: Tensor[(360), int8], %var_8667: Tensor[(3, 500), int64]) -> (Tensor[(1, 5, 16), float64], Tensor[(14, 4, 6), float64], Tensor[(336), float32], Tensor[(360), int8], Tensor[(3, 500), int64], Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) {
    %109 = @func_6031() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(15, 12, 9), bool], Tensor[(108, 1), uint16], Tensor[(15, 12, 9), bool]) */;
    %110 = cast(%var_8665, dtype="float32") /* ty=Tensor[(336), float32] */;
    %111 = cast(%var_8666, dtype="int8") /* ty=Tensor[(360), int8] */;
    %112 = cast(%var_8667, dtype="int64") /* ty=Tensor[(3, 500), int64] */;
    %113 = reshape(%110, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), float32] */;
    %114 = reshape(%111, newshape=[360]) /* ty=Tensor[(360), int8] */;
    %115 = reshape(%112, newshape=[1500]) /* ty=Tensor[(1500), int64] */;
    %116 = @func_6691(%113, %114, %115) /* ty=(Tensor[(1, 80), float64], Tensor[(8, 5, 9), int8], Tensor[(360), int8], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1500), int64], Tensor[(14, 4, 6), float64]) */;
    %117 = @func_6487() /* ty=(Tensor[(1, 5, 16), float64],) */;
    %118 = @func_6927() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */;
    %119 = %109.0;
    %120 = %116.6;
    %121 = %117.0;
    %122 = %118.1;
    (%119, %120, %var_8665, %var_8666, %var_8667, %121, %122)
  };
  %123(%var_8691, %var_8692, %var_8693) /* ty=(Tensor[(1, 5, 16), float64], Tensor[(14, 4, 6), float64], Tensor[(336), float32], Tensor[(360), int8], Tensor[(3, 500), int64], Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */
}

def @func_9348(%var_9346: Tensor[(10, 7, 14), int16], %var_9347: Tensor[(10, 7, 14), int16]) -> (Tensor[(10, 7, 14), int16],) {
  @func_9344(%var_9346, %var_9347) /* ty=(Tensor[(10, 7, 14), int16],) */
}

def @func_926(%var_924: Tensor[(5, 10, 7), int64]) -> (Tensor[(5, 10, 7), int64], Tensor[(14, 16, 6), float32], Tensor[(1344), float32]) {
  @func_923(%var_924) /* ty=(Tensor[(5, 10, 7), int64], Tensor[(14, 16, 6), float32], Tensor[(1344), float32]) */
}

def @func_3664(%var_3659: Tensor[(1, 12, 9), uint16]) -> (Tensor[(15, 12, 9), bool],) {
  %124 = cast(%var_3659, dtype="bool") /* ty=Tensor[(1, 12, 9), bool] */;
  %125 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 12, 9), uint16] */, dtype="bool") /* ty=Tensor[(15, 12, 9), bool] */;
  %126 = greater(%124, %125) /* ty=Tensor[(15, 12, 9), bool] */;
  (%126,)
}

def @func_9597() -> (Tensor[(1, 80), float64],) {
  %127 = @func_5833() /* ty=Tensor[(1, 80), float64] */;
  (%127,)
}

def @func_9760() -> (Tensor[(1, 5, 16), float64], Tensor[(8, 8, 1), float32], Tensor[(1, 5, 16), float64]) {
  %128 = @func_7546() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %129 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %130 = %128.0;
  %131 = @func_8477() /* ty=Tensor[(8, 8, 1), float32] */;
  %132 = %129.1;
  (%130, %131, %132)
}

def @func_5019() -> Tensor[(1, 5, 16), float64] {
  @func_5017() /* ty=Tensor[(1, 5, 16), float64] */
}

def @func_5434() -> Tensor[(1, 5, 16), float64] {
  @func_5432() /* ty=Tensor[(1, 5, 16), float64] */
}

def @func_6101() -> (Tensor[(1, 80), float64],) {
  @func_6099() /* ty=(Tensor[(1, 80), float64],) */
}

def @func_8937() -> Tensor[(1, 5, 16), float64] {
  %133 = fn () -> Tensor[(1, 5, 16), float64] {
    @func_4920() /* ty=Tensor[(1, 5, 16), float64] */
  };
  %133() /* ty=Tensor[(1, 5, 16), float64] */
}

def @func_9039() -> (Tensor[(14, 16, 6), float32], Tensor[(9, 12, 9), float64]) {
  @func_9037() /* ty=(Tensor[(14, 16, 6), float32], Tensor[(9, 12, 9), float64]) */
}

def @func_3444(%var_3375: Tensor[(8, 5, 9), int8], %var_3392: Tensor[(675), float32], %var_3393: Tensor[(7, 14), float64], %var_3403: Tensor[(1500), int64]) -> (Tensor[(8, 5, 9), int8], Tensor[(1344), float32], Tensor[(1, 9), float32], Tensor[(7, 14), float64], Tensor[(78), float64], Tensor[(1500), int64], Tensor[(675), float32]) {
  %134 = cast(meta[relay.Constant][9] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %135 = cast(%var_3375, dtype="int8") /* ty=Tensor[(8, 5, 9), int8] */;
  %136 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 9), float32] */;
  %137 = cast(%var_3392, dtype="float32") /* ty=Tensor[(675), float32] */;
  %138 = cast(%var_3393, dtype="float64") /* ty=Tensor[(7, 14), float64] */;
  %139 = reshape(%136, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float32] */;
  %140 = reshape(%137, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float32] */;
  %141 = reshape(%138, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %142 = @func_3339(%139, %140, %141) /* ty=(Tensor[(5, 15, 9), float32], Tensor[(1344, 1), float32], Tensor[(98), float64], Tensor[(1344), float32]) */;
  %143 = cast(%var_3403, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %144 = cast(%var_3403, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %145 = reshape(%143, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), int64] */;
  %146 = reshape(%144, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), int64] */;
  %147 = @func_1705(%145, %146) /* ty=(Tensor[(15, 10, 10), int64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) */;
  %148 = cast(%var_3392, dtype="float32") /* ty=Tensor[(675), float32] */;
  %149 = logical_xor(%134, %135) /* ty=Tensor[(8, 5, 9), int8] */;
  %150 = %142.3;
  %151 = %147.2;
  %152 = erf(%148) /* ty=Tensor[(675), float32] */;
  (%149, %150, meta[relay.Constant][10] /* ty=Tensor[(1, 9), float32] */, %var_3393, %151, %var_3403, %152)
}

def @func_6221() -> (Tensor[(9, 12, 9), float64], Tensor[(5, 80), uint8]) {
  @func_6219() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(5, 80), uint8]) */
}

def @func_7547() -> (Tensor[(1, 5, 16), float64],) {
  %155 = fn () -> (Tensor[(1, 5, 16), float64],) {
    %153 = @func_6487() /* ty=(Tensor[(1, 5, 16), float64],) */;
    %154 = %153.0;
    (%154,)
  };
  %155() /* ty=(Tensor[(1, 5, 16), float64],) */
}

def @func_4877() -> Tensor[(1, 80), float64] {
  %156 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %156.2
}

def @func_223(%var_221: Tensor[(13, 2, 3), float64]) -> Tensor[(13, 2, 3), float64] {
  @func_220(%var_221) /* ty=Tensor[(13, 2, 3), float64] */
}

def @func_6416() -> (Tensor[(1, 80), float64],) {
  %158 = fn () -> (Tensor[(1, 80), float64],) {
    %157 = @func_4877() /* ty=Tensor[(1, 80), float64] */;
    (%157,)
  };
  %158() /* ty=(Tensor[(1, 80), float64],) */
}

def @func_7508(%var_7503: Tensor[(9, 5, 16), float64], %var_7504: Tensor[(396), float32], %var_7505: Tensor[(1120), float32], %var_7506: Tensor[(78), float64], %var_7507: Tensor[(624, 2), float64]) -> (Tensor[(9, 5, 16), float32], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(11, 12, 3), bool], Tensor[(78), bool], Tensor[(16, 6, 13), float64], Tensor[(624, 2), float64]) {
  @func_7501(%var_7503, %var_7504, %var_7505, %var_7506, %var_7507) /* ty=(Tensor[(9, 5, 16), float32], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(11, 12, 3), bool], Tensor[(78), bool], Tensor[(16, 6, 13), float64], Tensor[(624, 2), float64]) */
}

def @func_7437() -> (Tensor[(1, 5, 16), float64], Tensor[(16, 4, 8), float32], Tensor[(512), float32]) {
  %165 = fn () -> (Tensor[(1, 5, 16), float64], Tensor[(16, 4, 8), float32], Tensor[(512), float32]) {
    %159 = @func_5035() /* ty=(Tensor[(1, 5, 16), float64],) */;
    %160 = cast(meta[relay.Constant][11] /* ty=Tensor[(512), float32] */, dtype="float32") /* ty=Tensor[(512), float32] */;
    %161 = reshape(%160, newshape=[16, 4, 8]) /* ty=Tensor[(16, 4, 8), float32] */;
    %162 = @func_7246(%161) /* ty=(Tensor[(16, 4, 8), float32],) */;
    %163 = %159.0;
    %164 = %162.0;
    (%163, %164, meta[relay.Constant][11] /* ty=Tensor[(512), float32] */)
  };
  %165() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(16, 4, 8), float32], Tensor[(512), float32]) */
}

def @func_6552() -> (Tensor[(?, 80), uint16], Tensor[(1, 80), float64]) {
  @func_6550() /* ty=(Tensor[(?, 80), uint16], Tensor[(1, 80), float64]) */
}

def @func_6795() -> (Tensor[(1, 80), float64],) {
  %167 = fn () -> (Tensor[(1, 80), float64],) {
    %166 = @func_4877() /* ty=Tensor[(1, 80), float64] */;
    (%166,)
  };
  %167() /* ty=(Tensor[(1, 80), float64],) */
}

def @func_8141(%var_8139: Tensor[(8, 80), float64]) -> (Tensor[(8, 80), float32], Tensor[(8, 80), float32]) {
  @func_8138(%var_8139) /* ty=(Tensor[(8, 80), float32], Tensor[(8, 80), float32]) */
}

def @func_6341(%var_6340: Tensor[(3, 5, 16), float64]) -> Tensor[(3, 5, 16), float64] {
  %172 = fn (%var_6316: Tensor[(3, 5, 16), float64]) -> Tensor[(3, 5, 16), float64] {
    %168 = @func_5166() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */;
    %169 = %168.1;
    %170 = cast(%169, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
    %171 = cast(%var_6316, dtype="float64") /* ty=Tensor[(3, 5, 16), float64] */;
    divide(%170, %171) /* ty=Tensor[(3, 5, 16), float64] */
  };
  %172(%var_6340) /* ty=Tensor[(3, 5, 16), float64] */
}

def @func_6219() -> (Tensor[(9, 12, 9), float64], Tensor[(5, 80), uint8]) {
  %173 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %174 = @func_5833() /* ty=Tensor[(1, 80), float64] */;
  %175 = cast(%174, dtype="uint8") /* ty=Tensor[(1, 80), uint8] */;
  %176 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 80), float64] */, dtype="uint8") /* ty=Tensor[(5, 80), uint8] */;
  %177 = %173.0;
  %178 = bitwise_or(%175, %176) /* ty=Tensor[(5, 80), uint8] */;
  (%177, %178)
}

def @func_7249(%var_7247: Tensor[(16, 4, 8), float32]) -> (Tensor[(16, 4, 8), float32],) {
  @func_7246(%var_7247) /* ty=(Tensor[(16, 4, 8), float32],) */
}

def @func_9599() -> (Tensor[(1, 80), float64],) {
  @func_9597() /* ty=(Tensor[(1, 80), float64],) */
}

def @func_6618(%var_6616: Tensor[(16, 6, 13), float64]) -> (Tensor[(16, 6, 13), float64], Tensor[(1, 2, 5), float64], Tensor[(10), float64]) {
  @func_6615(%var_6616) /* ty=(Tensor[(16, 6, 13), float64], Tensor[(1, 2, 5), float64], Tensor[(10), float64]) */
}

def @func_9285(%var_9275: Tensor[(15, 6, 1), uint32]) -> (Tensor[(15, 6, 9), bool], Tensor[(15, 6, 1), float64]) {
  %179 = cast(%var_9275, dtype="bool") /* ty=Tensor[(15, 6, 1), bool] */;
  %180 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 6, 9), uint32] */, dtype="bool") /* ty=Tensor[(15, 6, 9), bool] */;
  %181 = cast(%var_9275, dtype="float64") /* ty=Tensor[(15, 6, 1), float64] */;
  %182 = greater(%179, %180) /* ty=Tensor[(15, 6, 9), bool] */;
  %183 = log10(%181) /* ty=Tensor[(15, 6, 1), float64] */;
  (%182, %183)
}

def @func_4348(%var_4345: Tensor[(15, 5, 7), int64], %var_4346: Tensor[(15, 5, 7), int64], %var_4347: Tensor[(72), float32]) -> (Tensor[(15, 5, 7), int64], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) {
  @func_4343(%var_4345, %var_4346, %var_4347) /* ty=(Tensor[(15, 5, 7), int64], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) */
}

def @main() -> (Tensor[(1, 5, 16), float64], Tensor[(7, 5, 16), bool]) {
  %184 = @func_5037() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %185 = @func_8215() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %186 = %185.0;
  %187 = cast(%186, dtype="bool") /* ty=Tensor[(1, 5, 16), bool] */;
  %188 = cast(meta[relay.Constant][14] /* ty=Tensor[(7, 5, 16), float64] */, dtype="bool") /* ty=Tensor[(7, 5, 16), bool] */;
  %189 = %184.0;
  %190 = less(%187, %188) /* ty=Tensor[(7, 5, 16), bool] */;
  (%189, %190)
}

def @func_9065(%var_9062: Tensor[(1, 16, 11), float64], %var_9063: Tensor[(360), int8], %var_9064: Tensor[(1500, 1), int64]) -> (Tensor[(1, 16, 11), float64], Tensor[(8, 5, 9), int8], Tensor[(336), float32], Tensor[(360), int8], Tensor[(1500, 1), int64]) {
  %201 = fn (%var_9043: Tensor[(1, 16, 11), float64], %var_9051: Tensor[(360), int8], %var_9052: Tensor[(1500, 1), int64]) -> (Tensor[(1, 16, 11), float64], Tensor[(8, 5, 9), int8], Tensor[(336), float32], Tensor[(360), int8], Tensor[(1500, 1), int64]) {
    %191 = cast(%var_9043, dtype="float64") /* ty=Tensor[(1, 16, 11), float64] */;
    %192 = cast(meta[relay.Constant][15] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
    %193 = cast(%var_9051, dtype="int8") /* ty=Tensor[(360), int8] */;
    %194 = cast(%var_9052, dtype="int64") /* ty=Tensor[(1500, 1), int64] */;
    %195 = reshape(%192, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), float32] */;
    %196 = reshape(%193, newshape=[360]) /* ty=Tensor[(360), int8] */;
    %197 = reshape(%194, newshape=[1500]) /* ty=Tensor[(1500), int64] */;
    %198 = @func_6691(%195, %196, %197) /* ty=(Tensor[(1, 80), float64], Tensor[(8, 5, 9), int8], Tensor[(360), int8], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1500), int64], Tensor[(14, 4, 6), float64]) */;
    %199 = asinh(%191) /* ty=Tensor[(1, 16, 11), float64] */;
    %200 = %198.1;
    (%199, %200, meta[relay.Constant][15] /* ty=Tensor[(336), float32] */, %var_9051, %var_9052)
  };
  %201(%var_9062, %var_9063, %var_9064) /* ty=(Tensor[(1, 16, 11), float64], Tensor[(8, 5, 9), int8], Tensor[(336), float32], Tensor[(360), int8], Tensor[(1500, 1), int64]) */
}

def @func_4922() -> Tensor[(1, 5, 16), float64] {
  @func_4920() /* ty=Tensor[(1, 5, 16), float64] */
}

def @func_4785() -> (Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) {
  %202 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 12, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 12, 9), float64] */;
  %203 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 80), float64] */, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %204 = reshape(%203, newshape=[1, 5, 16]) /* ty=Tensor[(1, 5, 16), float64] */;
  %205 = tan(%202) /* ty=Tensor[(9, 12, 9), float64] */;
  %206 = @func_4767(%204) /* ty=Tensor[(1, 5, 16), float64] */;
  (%205, %206, meta[relay.Constant][17] /* ty=Tensor[(1, 80), float64] */)
}

def @func_6879(%var_6877: Tensor[(396), float32], %var_6878: Tensor[(1120), float32]) -> (Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(1, 72), float32], Tensor[(78), float64], Tensor[(525), int64], Tensor[(1, 5, 16), float32]) {
  @func_6875(%var_6877, %var_6878) /* ty=(Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(1, 72), float32], Tensor[(78), float64], Tensor[(525), int64], Tensor[(1, 5, 16), float32]) */
}

def @func_6032() -> (Tensor[(1, 5, 16), float64], Tensor[(15, 12, 9), bool], Tensor[(108, 1), uint16], Tensor[(15, 12, 9), bool]) {
  %216 = fn () -> (Tensor[(1, 5, 16), float64], Tensor[(15, 12, 9), bool], Tensor[(108, 1), uint16], Tensor[(15, 12, 9), bool]) {
    %207 = cast(meta[relay.Constant][18] /* ty=Tensor[(108, 1), uint16] */, dtype="uint16") /* ty=Tensor[(108, 1), uint16] */;
    %208 = reshape(%207, newshape=[1, 12, 9]) /* ty=Tensor[(1, 12, 9), uint16] */;
    %209 = @func_3664(%208) /* ty=(Tensor[(15, 12, 9), bool],) */;
    %210 = cast(meta[relay.Constant][18] /* ty=Tensor[(108, 1), uint16] */, dtype="uint16") /* ty=Tensor[(108, 1), uint16] */;
    %211 = reshape(%210, newshape=[1, 12, 9]) /* ty=Tensor[(1, 12, 9), uint16] */;
    %212 = @func_3664(%211) /* ty=(Tensor[(15, 12, 9), bool],) */;
    %213 = @func_5432() /* ty=Tensor[(1, 5, 16), float64] */;
    %214 = %209.0;
    %215 = %212.0;
    (%213, %214, meta[relay.Constant][18] /* ty=Tensor[(108, 1), uint16] */, %215)
  };
  %216() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(15, 12, 9), bool], Tensor[(108, 1), uint16], Tensor[(15, 12, 9), bool]) */
}

def @func_8563() -> Tensor[(15, 12, 9), bool] {
  %218 = fn () -> Tensor[(15, 12, 9), bool] {
    %217 = @func_6031() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(15, 12, 9), bool], Tensor[(108, 1), uint16], Tensor[(15, 12, 9), bool]) */;
    %217.1
  };
  %218() /* ty=Tensor[(15, 12, 9), bool] */
}

def @func_9762() -> (Tensor[(1, 5, 16), float64], Tensor[(8, 8, 1), float32], Tensor[(1, 5, 16), float64]) {
  @func_9760() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(8, 8, 1), float32], Tensor[(1, 5, 16), float64]) */
}

def @func_6177() -> Tensor[(10, 80), uint16] {
  @func_6175() /* ty=Tensor[(10, 80), uint16] */
}

def @func_3667(%var_3665: Tensor[(1, 12, 9), uint16]) -> (Tensor[(15, 12, 9), bool],) {
  @func_3664(%var_3665) /* ty=(Tensor[(15, 12, 9), bool],) */
}

def @func_5167() -> (Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) {
  %224 = fn () -> (Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) {
    %219 = @func_5082() /* ty=(Tensor[(1, 5, 16), float64],) */;
    %220 = %219.0;
    %221 = cast(%220, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
    %222 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
    %223 = acos(%221) /* ty=Tensor[(1, 5, 16), float64] */;
    (%222, %223)
  };
  %224() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */
}

def @func_8138(%var_8109: Tensor[(8, 80), float64]) -> (Tensor[(8, 80), float32], Tensor[(8, 80), float32]) {
  %225 = @func_6099() /* ty=(Tensor[(1, 80), float64],) */;
  %226 = %225.0;
  %227 = cast(%226, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
  %228 = cast(%var_8109, dtype="bool") /* ty=Tensor[(8, 80), bool] */;
  %229 = equal(%227, %228) /* ty=Tensor[(8, 80), bool] */;
  %230 = cast(%229, dtype="float32") /* ty=Tensor[(8, 80), float32] */;
  %231 = cast(%var_8109, dtype="float32") /* ty=Tensor[(8, 80), float32] */;
  %232 = cosh(%230) /* ty=Tensor[(8, 80), float32] */;
  %233 = log2(%231) /* ty=Tensor[(8, 80), float32] */;
  (%232, %233)
}

def @func_948(%var_940: Tensor[(1, 14, 7), float64], %var_944: Tensor[(1344, 1), float32]) -> (Tensor[(1, 14, 7), float64], Tensor[(14, 16, 6), float32], Tensor[(1344, 1), float32]) {
  %234 = cast(%var_940, dtype="float64") /* ty=Tensor[(1, 14, 7), float64] */;
  %235 = cast(%var_944, dtype="float32") /* ty=Tensor[(1344, 1), float32] */;
  %236 = reshape(%235, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %237 = asin(%234) /* ty=Tensor[(1, 14, 7), float64] */;
  %238 = @func_275(%236) /* ty=Tensor[(14, 16, 6), float32] */;
  (%237, %238, %var_944)
}

def @func_8908(%var_8896: Tensor[(9, 5, 16), float64]) -> (Tensor[(9, 5, 16), uint64], Tensor[(9, 12, 9), float64]) {
  %239 = @func_6927() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */;
  %240 = %239.1;
  %241 = cast(%240, dtype="uint64") /* ty=Tensor[(1, 5, 16), uint64] */;
  %242 = cast(%var_8896, dtype="uint64") /* ty=Tensor[(9, 5, 16), uint64] */;
  %243 = @func_5874() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float32]) */;
  %244 = right_shift(%241, %242) /* ty=Tensor[(9, 5, 16), uint64] */;
  %245 = %243.0;
  (%244, %245)
}

def @func_9820() -> (Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(14, 7), float64], Tensor[(1344), float32]) {
  %254 = fn () -> (Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(14, 7), float64], Tensor[(1344), float32]) {
    %246 = @func_5035() /* ty=(Tensor[(1, 5, 16), float64],) */;
    %247 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 7), float64] */;
    %248 = cast(meta[relay.Constant][20] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
    %249 = reshape(%247, newshape=[1, 14, 7]) /* ty=Tensor[(1, 14, 7), float64] */;
    %250 = reshape(%248, newshape=[1344, 1]) /* ty=Tensor[(1344, 1), float32] */;
    %251 = @func_948(%249, %250) /* ty=(Tensor[(1, 14, 7), float64], Tensor[(14, 16, 6), float32], Tensor[(1344, 1), float32]) */;
    %252 = %246.0;
    %253 = %251.1;
    (%252, %253, meta[relay.Constant][19] /* ty=Tensor[(14, 7), float64] */, meta[relay.Constant][20] /* ty=Tensor[(1344), float32] */)
  };
  %254() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(14, 7), float64], Tensor[(1344), float32]) */
}

def @func_8076(%var_8074: Tensor[(3, 6, 2), float64]) -> Tensor[(3, 6, 2), uint8] {
  @func_8073(%var_8074) /* ty=Tensor[(3, 6, 2), uint8] */
}

def @func_5380(%var_5328: Tensor[(1120), float32], %var_5329: Tensor[(72), float32], %var_5333: Tensor[(13, 2, 3), float64], %var_5360: Tensor[(396), float32], %var_5370: Tensor[(525), int64]) -> (Tensor[(10, 80), int64], Tensor[(78), float64], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(72), float32], Tensor[(13, 2, 3), bool], Tensor[(13, 2, 3), float64], Tensor[(?, 80), int16], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(15, 5, 7), int64], Tensor[(525), int64], Tensor[(1, 80), float64]) {
  %255 = @func_4877() /* ty=Tensor[(1, 80), float64] */;
  %256 = cast(%255, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %257 = sin(%256) /* ty=Tensor[(1, 80), float64] */;
  %258 = cast(%257, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
  %259 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 80), float64] */, dtype="bool") /* ty=Tensor[(10, 80), bool] */;
  %260 = not_equal(%258, %259) /* ty=Tensor[(10, 80), bool] */;
  %261 = cast(%260, dtype="int64") /* ty=Tensor[(10, 80), int64] */;
  %262 = cast(%257, dtype="int64") /* ty=Tensor[(1, 80), int64] */;
  %263 = cast(%var_5328, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %264 = cast(%var_5328, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %265 = cast(%var_5329, dtype="float32") /* ty=Tensor[(72), float32] */;
  %266 = reshape(%263, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float32] */;
  %267 = reshape(%264, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float32] */;
  %268 = reshape(%265, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %269 = @func_4007(%266, %267, %268) /* ty=(Tensor[(14, 10, 8), float32], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) */;
  %270 = cast(meta[relay.Constant][22] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %271 = reshape(%270, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %272 = @func_220(%271) /* ty=Tensor[(13, 2, 3), float64] */;
  %273 = cast(%var_5333, dtype="bool") /* ty=Tensor[(13, 2, 3), bool] */;
  %274 = shape_of(%272, dtype="int32") /* ty=Tensor[(3), int32] */;
  %275 = cast(%272, dtype="bool") /* ty=Tensor[(13, 2, 3), bool] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %277 = cast(%272, dtype="float64") /* ty=Tensor[(13, 2, 3), float64] */;
  %278 = reshape(%277, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %279 = cast(%255, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %280 = sinh(%279) /* ty=Tensor[(1, 80), float64] */;
  %281 = cast(%280, dtype="int16") /* ty=Tensor[(1, 80), int16] */;
  %282 = shape_of(%257, dtype="int32") /* ty=Tensor[(2), int32] */;
  %283 = cast(%257, dtype="int16") /* ty=Tensor[(1, 80), int16] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %285 = cast(%var_5360, dtype="float32") /* ty=Tensor[(396), float32] */;
  %286 = reshape(%285, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float32] */;
  %287 = cast(%var_5370, dtype="int64") /* ty=Tensor[(525), int64] */;
  %288 = cast(%var_5370, dtype="int64") /* ty=Tensor[(525), int64] */;
  %289 = %269.2;
  %290 = cast(%289, dtype="float32") /* ty=Tensor[(72), float32] */;
  %291 = reshape(%287, newshape=[15, 5, 7]) /* ty=Tensor[(15, 5, 7), int64] */;
  %292 = reshape(%288, newshape=[15, 5, 7]) /* ty=Tensor[(15, 5, 7), int64] */;
  %293 = reshape(%290, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %294 = @func_4343(%291, %292, %293) /* ty=(Tensor[(15, 5, 7), int64], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) */;
  %295 = cast(%257, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %296 = bitwise_or(%261, %262) /* ty=Tensor[(10, 80), int64] */;
  %297 = less(%275, %276) /* ty=Tensor[(13, 2, 3), bool] */;
  %298 = @func_220(%278) /* ty=Tensor[(13, 2, 3), float64] */;
  %299 = multiply(%283, %284) /* ty=Tensor[(?, 80), int16] */;
  %300 = @func_2712(%286) /* ty=Tensor[(11, 12, 3), bool] */;
  %301 = %294.0;
  %302 = acos(%295) /* ty=Tensor[(1, 80), float64] */;
  (%296, meta[relay.Constant][22] /* ty=Tensor[(78), float64] */, %289, %var_5328, %var_5329, %297, %298, %299, %300, %var_5360, %301, %var_5370, %302)
}

def @func_6389() -> (Tensor[(9, 12, 9), float64],) {
  %303 = @func_6219() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(5, 80), uint8]) */;
  %304 = %303.0;
  (%304,)
}

def @func_2714(%var_2713: Tensor[(11, 12, 3), float32]) -> Tensor[(11, 12, 3), bool] {
  %307 = fn (%var_2702: Tensor[(11, 12, 3), float32]) -> Tensor[(11, 12, 3), bool] {
    %305 = cast(-5.3102f /* ty=float32 */, dtype="bool") /* ty=bool */;
    %306 = cast(%var_2702, dtype="bool") /* ty=Tensor[(11, 12, 3), bool] */;
    less(%305, %306) /* ty=Tensor[(11, 12, 3), bool] */
  };
  %307(%var_2713) /* ty=Tensor[(11, 12, 3), bool] */
}

def @func_2991(%var_2987: Tensor[(9, 2, 13), uint32]) -> (Tensor[(9, 2, 13), bool],) {
  %308 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 1, 13), uint32] */, dtype="bool") /* ty=Tensor[(9, 1, 13), bool] */;
  %309 = cast(%var_2987, dtype="bool") /* ty=Tensor[(9, 2, 13), bool] */;
  %310 = less_equal(%308, %309) /* ty=Tensor[(9, 2, 13), bool] */;
  (%310,)
}

def @func_8206() -> (Tensor[(11, 80), float64],) {
  @func_8204() /* ty=(Tensor[(11, 80), float64],) */
}

def @func_7864(%var_7863: Tensor[(11, 80), float64]) -> (Tensor[(1, 5, 16), float64], Tensor[(11, 80), int32], Tensor[(11, 80), float32]) {
  %344 = fn (%var_7788: Tensor[(11, 80), float64]) -> (Tensor[(1, 5, 16), float64], Tensor[(11, 80), int32], Tensor[(11, 80), float32]) {
    %311 = @func_6099() /* ty=(Tensor[(1, 80), float64],) */;
    %312 = %311.0;
    %313 = cast(%312, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
    %314 = erf(%313) /* ty=Tensor[(1, 80), float64] */;
    %315 = cast(%314, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
    %316 = reshape(%315, newshape=[1, 5, 16]) /* ty=Tensor[(1, 5, 16), float64] */;
    %317 = cast(%312, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
    %318 = cast(%var_7788, dtype="bool") /* ty=Tensor[(11, 80), bool] */;
    %319 = greater_equal(%317, %318) /* ty=Tensor[(11, 80), bool] */;
    %320 = cast(%312, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
    %321 = cast(%319, dtype="float64") /* ty=Tensor[(11, 80), float64] */;
    %322 = maximum(%320, %321) /* ty=Tensor[(11, 80), float64] */;
    %323 = cast(%319, dtype="bool") /* ty=Tensor[(11, 80), bool] */;
    %324 = shape_of(%var_7788, dtype="int32") /* ty=Tensor[(2), int32] */;
    %325 = cast(%var_7788, dtype="bool") /* ty=Tensor[(11, 80), bool] */;
    %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %327 = not_equal(%325, %326) /* ty=Tensor[(11, 80), bool] */;
    %328 = cast(%327, dtype="float32") /* ty=Tensor[(11, 80), float32] */;
    %329 = log10(%328) /* ty=Tensor[(11, 80), float32] */;
    %330 = cast(%329, dtype="int32") /* ty=Tensor[(11, 80), int32] */;
    %331 = shape_of(%322, dtype="int32") /* ty=Tensor[(2), int32] */;
    %332 = cast(%322, dtype="int32") /* ty=Tensor[(11, 80), int32] */;
    %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %334 = cast(%var_7788, dtype="bool") /* ty=Tensor[(11, 80), bool] */;
    %335 = shape_of(%329, dtype="int32") /* ty=Tensor[(2), int32] */;
    %336 = cast(%329, dtype="bool") /* ty=Tensor[(11, 80), bool] */;
    %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %338 = equal(%336, %337) /* ty=Tensor[(11, 80), bool] */;
    %339 = cast(%314, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
    %340 = cast(%338, dtype="float32") /* ty=Tensor[(11, 80), float32] */;
    %341 = @func_4767(%316) /* ty=Tensor[(1, 5, 16), float64] */;
    %342 = right_shift(%332, %333) /* ty=Tensor[(11, 80), int32] */;
    %343 = floor_divide(%339, %340) /* ty=Tensor[(11, 80), float32] */;
    (%341, %342, %343)
  };
  %344(%var_7863) /* ty=(Tensor[(1, 5, 16), float64], Tensor[(11, 80), int32], Tensor[(11, 80), float32]) */
}

def @func_8073(%var_8053: Tensor[(3, 6, 2), float64]) -> Tensor[(3, 6, 2), uint8] {
  %345 = cast(%var_8053, dtype="float64") /* ty=Tensor[(3, 6, 2), float64] */;
  %346 = log10(%345) /* ty=Tensor[(3, 6, 2), float64] */;
  %347 = cast(%346, dtype="uint8") /* ty=Tensor[(3, 6, 2), uint8] */;
  %348 = shape_of(%var_8053, dtype="int32") /* ty=Tensor[(3), int32] */;
  %349 = cast(%var_8053, dtype="uint8") /* ty=Tensor[(3, 6, 2), uint8] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%349, %350) /* ty=Tensor[(3, 6, 2), uint8] */
}

def @func_7158(%var_7156: Tensor[(7, 5, 16), float64]) -> Tensor[(7, 5, 16), uint64] {
  @func_7155(%var_7156) /* ty=Tensor[(7, 5, 16), uint64] */
}

def @func_6391() -> (Tensor[(9, 12, 9), float64],) {
  @func_6389() /* ty=(Tensor[(9, 12, 9), float64],) */
}

def @func_7954() -> (Tensor[(1, 5, 16), float64],) {
  %351 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
  %352 = cast(%351, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  %353 = asinh(%352) /* ty=Tensor[(1, 5, 16), float64] */;
  (%353,)
}

def @func_8477() -> Tensor[(8, 8, 1), float32] {
  %354 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 8, 1), float32] */, dtype="float32") /* ty=Tensor[(8, 8, 1), float32] */;
  cos(%354) /* ty=Tensor[(8, 8, 1), float32] */
}

def @func_8045(%var_8042: Tensor[(6, 2, 3), float32], %var_8043: Tensor[(80), float64], %var_8044: Tensor[(240), float64]) -> (Tensor[(1, 5, 16), float64], Tensor[(80), float64], Tensor[(1, 5, 16), float64], Tensor[(6, 2, 3), int16], Tensor[(1, 5, 16), float64], Tensor[(3, 5, 16), float64], Tensor[(240), float64]) {
  %375 = fn (%var_7968: Tensor[(6, 2, 3), float32], %var_7974: Tensor[(80), float64], %var_8029: Tensor[(240), float64]) -> (Tensor[(1, 5, 16), float64], Tensor[(80), float64], Tensor[(1, 5, 16), float64], Tensor[(6, 2, 3), int16], Tensor[(1, 5, 16), float64], Tensor[(3, 5, 16), float64], Tensor[(240), float64]) {
    %355 = cast(%var_7974, dtype="float64") /* ty=Tensor[(80), float64] */;
    %356 = reshape(%355, newshape=[1, 5, 16]) /* ty=Tensor[(1, 5, 16), float64] */;
    %357 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 2, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 3), float32] */;
    %358 = asin(%357) /* ty=Tensor[(6, 2, 3), float32] */;
    %359 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 2, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 3), float32] */;
    %360 = shape_of(%var_7968, dtype="int32") /* ty=Tensor[(3), int32] */;
    %361 = cast(%var_7968, dtype="float32") /* ty=Tensor[(6, 2, 3), float32] */;
    %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %363 = divide(%361, %362) /* ty=Tensor[(6, 2, 3), float32] */;
    %364 = cast(%363, dtype="int16") /* ty=Tensor[(6, 2, 3), int16] */;
    %365 = shape_of(%358, dtype="int32") /* ty=Tensor[(3), int32] */;
    %366 = cast(%358, dtype="int16") /* ty=Tensor[(6, 2, 3), int16] */;
    %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %368 = cast(%var_8029, dtype="float64") /* ty=Tensor[(240), float64] */;
    %369 = reshape(%368, newshape=[3, 5, 16]) /* ty=Tensor[(3, 5, 16), float64] */;
    %370 = @func_4767(%356) /* ty=Tensor[(1, 5, 16), float64] */;
    %371 = @func_5017() /* ty=Tensor[(1, 5, 16), float64] */;
    %372 = add(%366, %367) /* ty=Tensor[(6, 2, 3), int16] */;
    %373 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
    %374 = @func_6339(%369) /* ty=Tensor[(3, 5, 16), float64] */;
    (%370, %var_7974, %371, %372, %373, %374, %var_8029)
  };
  %375(%var_8042, %var_8043, %var_8044) /* ty=(Tensor[(1, 5, 16), float64], Tensor[(80), float64], Tensor[(1, 5, 16), float64], Tensor[(6, 2, 3), int16], Tensor[(1, 5, 16), float64], Tensor[(3, 5, 16), float64], Tensor[(240), float64]) */
}

def @func_7956() -> (Tensor[(1, 5, 16), float64],) {
  @func_7954() /* ty=(Tensor[(1, 5, 16), float64],) */
}

def @func_9385() -> (Tensor[(15, 12, 9), bool],) {
  %377 = fn () -> (Tensor[(15, 12, 9), bool],) {
    %376 = @func_8562() /* ty=Tensor[(15, 12, 9), bool] */;
    (%376,)
  };
  %377() /* ty=(Tensor[(15, 12, 9), bool],) */
}

def @func_4011(%var_4008: Tensor[(14, 10, 8), float32], %var_4009: Tensor[(14, 10, 8), float32], %var_4010: Tensor[(72), float32]) -> (Tensor[(14, 10, 8), float32], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) {
  %386 = fn (%var_3993: Tensor[(14, 10, 8), float32], %var_3994: Tensor[(14, 10, 8), float32], %var_4002: Tensor[(72), float32]) -> (Tensor[(14, 10, 8), float32], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) {
    %378 = cast(%var_3994, dtype="float32") /* ty=Tensor[(14, 10, 8), float32] */;
    %379 = shape_of(%var_3993, dtype="int32") /* ty=Tensor[(3), int32] */;
    %380 = cast(%var_3993, dtype="float32") /* ty=Tensor[(14, 10, 8), float32] */;
    %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %382 = cast(%var_4002, dtype="float32") /* ty=Tensor[(72), float32] */;
    %383 = reshape(%382, newshape=[6, 12, 1]) /* ty=Tensor[(6, 12, 1), float32] */;
    %384 = floor_divide(%380, %381) /* ty=Tensor[(14, 10, 8), float32] */;
    %385 = @func_3647(%383) /* ty=Tensor[(6, 12, 1), float32] */;
    (%384, %385, %var_4002)
  };
  %386(%var_4008, %var_4009, %var_4010) /* ty=(Tensor[(14, 10, 8), float32], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) */
}

def @func_7155(%var_7133: Tensor[(7, 5, 16), float64]) -> Tensor[(7, 5, 16), uint64] {
  %387 = @func_6031() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(15, 12, 9), bool], Tensor[(108, 1), uint16], Tensor[(15, 12, 9), bool]) */;
  %388 = %387.0;
  %389 = cast(%388, dtype="uint64") /* ty=Tensor[(1, 5, 16), uint64] */;
  %390 = cast(%var_7133, dtype="uint64") /* ty=Tensor[(7, 5, 16), uint64] */;
  left_shift(%389, %390) /* ty=Tensor[(7, 5, 16), uint64] */
}

def @func_4920() -> Tensor[(1, 5, 16), float64] {
  %391 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %391.1
}

def @func_7369(%var_7363: Tensor[(9, 12, 9), float64], %var_7364: Tensor[(44), float64], %var_7365: Tensor[(675), float32], %var_7366: Tensor[(72, 1), float32], %var_7367: Tensor[(525), int64], %var_7368: Tensor[(26, 3), float64]) -> (Tensor[(?, 5, 16), int32], Tensor[(9, 12, 9), int64], Tensor[(675), float32], Tensor[(44), float64], Tensor[(675), float32], Tensor[(56, 20), float32], Tensor[(72, 1), float32], Tensor[(5, 15, 9), float32], Tensor[(98), float64], Tensor[(9, 80), float64], Tensor[(72), float32], Tensor[(525), int64], Tensor[(72), float32], Tensor[(1, 5, 16), float64], Tensor[(26, 3), uint64], Tensor[(10), float64], Tensor[(1248), float64]) {
  %458 = fn (%var_7279: Tensor[(9, 12, 9), float64], %var_7295: Tensor[(44), float64], %var_7296: Tensor[(675), float32], %var_7298: Tensor[(72, 1), float32], %var_7323: Tensor[(525), int64], %var_7345: Tensor[(26, 3), float64]) -> (Tensor[(?, 5, 16), int32], Tensor[(9, 12, 9), int64], Tensor[(675), float32], Tensor[(44), float64], Tensor[(675), float32], Tensor[(56, 20), float32], Tensor[(72, 1), float32], Tensor[(5, 15, 9), float32], Tensor[(98), float64], Tensor[(9, 80), float64], Tensor[(72), float32], Tensor[(525), int64], Tensor[(72), float32], Tensor[(1, 5, 16), float64], Tensor[(26, 3), uint64], Tensor[(10), float64], Tensor[(1248), float64]) {
    %392 = @func_5653() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(350), int64]) */;
    %393 = %392.0;
    %394 = @func_4877() /* ty=Tensor[(1, 80), float64] */;
    %395 = cast(%394, dtype="int32") /* ty=Tensor[(1, 80), int32] */;
    %396 = shape_of(%393, dtype="int32") /* ty=Tensor[(3), int32] */;
    %397 = cast(%393, dtype="int32") /* ty=Tensor[(1, 5, 16), int32] */;
    %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %399 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
    %400 = %399.0;
    %401 = cast(%var_7279, dtype="int64") /* ty=Tensor[(9, 12, 9), int64] */;
    %402 = shape_of(%400, dtype="int32") /* ty=Tensor[(3), int32] */;
    %403 = cast(%400, dtype="int64") /* ty=Tensor[(9, 12, 9), int64] */;
    %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %405 = cast(%var_7295, dtype="float64") /* ty=Tensor[(44), float64] */;
    %406 = cast(%var_7295, dtype="float64") /* ty=Tensor[(44), float64] */;
    %407 = cast(%var_7296, dtype="float32") /* ty=Tensor[(675), float32] */;
    %408 = cast(meta[relay.Constant][26] /* ty=Tensor[(56, 20), float32] */, dtype="float32") /* ty=Tensor[(56, 20), float32] */;
    %409 = cast(%var_7298, dtype="float32") /* ty=Tensor[(72, 1), float32] */;
    %410 = cast(meta[relay.Constant][27] /* ty=Tensor[(26, 3), float64] */, dtype="float64") /* ty=Tensor[(26, 3), float64] */;
    %411 = reshape(%405, newshape=[2, 2, 11]) /* ty=Tensor[(2, 2, 11), float64] */;
    %412 = reshape(%406, newshape=[2, 2, 11]) /* ty=Tensor[(2, 2, 11), float64] */;
    %413 = reshape(%407, newshape=[675]) /* ty=Tensor[(675), float32] */;
    %414 = reshape(%408, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
    %415 = reshape(%409, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %416 = reshape(%410, newshape=[78, 1]) /* ty=Tensor[(78, 1), float64] */;
    %417 = @func_7067(%411, %412, %413, %414, %415, %416) /* ty=(Tensor[(98), float64], Tensor[(9), float32], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1120), float32], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(2, 2, 11), float64], Tensor[(9, 12, 9), float64], Tensor[(1, 80), float64], Tensor[(1, 5, 16), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(78, 1), float64], Tensor[(525), int64]) */;
    %418 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 1), float32] */, dtype="float32") /* ty=Tensor[(9, 1), float32] */;
    %419 = %417.2;
    %420 = cast(%419, dtype="float32") /* ty=Tensor[(675), float32] */;
    %421 = cast(meta[relay.Constant][29] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
    %422 = reshape(%418, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float32] */;
    %423 = reshape(%420, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float32] */;
    %424 = reshape(%421, newshape=[98]) /* ty=Tensor[(98), float64] */;
    %425 = @func_3339(%422, %423, %424) /* ty=(Tensor[(5, 15, 9), float32], Tensor[(1344, 1), float32], Tensor[(98), float64], Tensor[(1344), float32]) */;
    %426 = cast(%394, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
    %427 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 1), float32] */, dtype="float64") /* ty=Tensor[(9, 1), float64] */;
    %428 = cast(%var_7323, dtype="int64") /* ty=Tensor[(525), int64] */;
    %429 = cast(%var_7323, dtype="int64") /* ty=Tensor[(525), int64] */;
    %430 = cast(%var_7298, dtype="float32") /* ty=Tensor[(72, 1), float32] */;
    %431 = reshape(%428, newshape=[15, 5, 7]) /* ty=Tensor[(15, 5, 7), int64] */;
    %432 = reshape(%429, newshape=[15, 5, 7]) /* ty=Tensor[(15, 5, 7), int64] */;
    %433 = reshape(%430, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %434 = @func_4343(%431, %432, %433) /* ty=(Tensor[(15, 5, 7), int64], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) */;
    %435 = cast(meta[relay.Constant][26] /* ty=Tensor[(56, 20), float32] */, dtype="float32") /* ty=Tensor[(56, 20), float32] */;
    %436 = cast(meta[relay.Constant][26] /* ty=Tensor[(56, 20), float32] */, dtype="float32") /* ty=Tensor[(56, 20), float32] */;
    %437 = %434.2;
    %438 = cast(%437, dtype="float32") /* ty=Tensor[(72), float32] */;
    %439 = reshape(%435, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float32] */;
    %440 = reshape(%436, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float32] */;
    %441 = reshape(%438, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %442 = @func_4007(%439, %440, %441) /* ty=(Tensor[(14, 10, 8), float32], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) */;
    %443 = cast(%var_7345, dtype="uint64") /* ty=Tensor[(26, 3), uint64] */;
    %444 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(26, 3), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %445 = cast(meta[relay.Constant][27] /* ty=Tensor[(26, 3), float64] */, dtype="uint64") /* ty=Tensor[(26, 3), uint64] */;
    %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %447 = cast(meta[relay.Constant][30] /* ty=Tensor[(1248), float64] */, dtype="float64") /* ty=Tensor[(1248), float64] */;
    %448 = reshape(%447, newshape=[16, 6, 13]) /* ty=Tensor[(16, 6, 13), float64] */;
    %449 = @func_6615(%448) /* ty=(Tensor[(16, 6, 13), float64], Tensor[(1, 2, 5), float64], Tensor[(10), float64]) */;
    %450 = multiply(%397, %398) /* ty=Tensor[(?, 5, 16), int32] */;
    %451 = add(%403, %404) /* ty=Tensor[(9, 12, 9), int64] */;
    %452 = %425.0;
    %453 = floor_divide(%426, %427) /* ty=Tensor[(9, 80), float64] */;
    %454 = %442.2;
    %455 = @func_5432() /* ty=Tensor[(1, 5, 16), float64] */;
    %456 = add(%445, %446) /* ty=Tensor[(26, 3), uint64] */;
    %457 = %449.2;
    (%450, %451, %419, %var_7295, %var_7296, meta[relay.Constant][26] /* ty=Tensor[(56, 20), float32] */, %var_7298, %452, meta[relay.Constant][29] /* ty=Tensor[(98), float64] */, %453, %437, %var_7323, %454, %455, %456, %457, meta[relay.Constant][30] /* ty=Tensor[(1248), float64] */)
  };
  %458(%var_7363, %var_7364, %var_7365, %var_7366, %var_7367, %var_7368) /* ty=(Tensor[(?, 5, 16), int32], Tensor[(9, 12, 9), int64], Tensor[(675), float32], Tensor[(44), float64], Tensor[(675), float32], Tensor[(56, 20), float32], Tensor[(72, 1), float32], Tensor[(5, 15, 9), float32], Tensor[(98), float64], Tensor[(9, 80), float64], Tensor[(72), float32], Tensor[(525), int64], Tensor[(72), float32], Tensor[(1, 5, 16), float64], Tensor[(26, 3), uint64], Tensor[(10), float64], Tensor[(1248), float64]) */
}

def @func_9288(%var_9286: Tensor[(15, 6, 1), uint32]) -> (Tensor[(15, 6, 9), bool], Tensor[(15, 6, 1), float64]) {
  @func_9285(%var_9286) /* ty=(Tensor[(15, 6, 9), bool], Tensor[(15, 6, 1), float64]) */
}

def @func_8628(%var_8625: Tensor[(720), float64], %var_8626: Tensor[(26, 3), float64], %var_8627: Tensor[(1248), float64]) -> (Tensor[(9, 12, 9), float64], Tensor[(9, 5, 16), float32], Tensor[(720), float64], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(26, 3), float64], Tensor[(1248), float64], Tensor[(1, 80), float64]) {
  %475 = fn (%var_8581: Tensor[(720), float64], %var_8584: Tensor[(26, 3), float64], %var_8585: Tensor[(1248), float64]) -> (Tensor[(9, 12, 9), float64], Tensor[(9, 5, 16), float32], Tensor[(720), float64], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(26, 3), float64], Tensor[(1248), float64], Tensor[(1, 80), float64]) {
    %459 = @func_6219() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(5, 80), uint8]) */;
    %460 = cast(%var_8581, dtype="float64") /* ty=Tensor[(720), float64] */;
    %461 = cast(meta[relay.Constant][31] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
    %462 = cast(meta[relay.Constant][32] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %463 = cast(%var_8584, dtype="float64") /* ty=Tensor[(26, 3), float64] */;
    %464 = cast(%var_8585, dtype="float64") /* ty=Tensor[(1248), float64] */;
    %465 = reshape(%460, newshape=[9, 5, 16]) /* ty=Tensor[(9, 5, 16), float64] */;
    %466 = reshape(%461, newshape=[396]) /* ty=Tensor[(396), float32] */;
    %467 = reshape(%462, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
    %468 = reshape(%463, newshape=[78]) /* ty=Tensor[(78), float64] */;
    %469 = reshape(%464, newshape=[624, 2]) /* ty=Tensor[(624, 2), float64] */;
    %470 = @func_7501(%465, %466, %467, %468, %469) /* ty=(Tensor[(9, 5, 16), float32], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(11, 12, 3), bool], Tensor[(78), bool], Tensor[(16, 6, 13), float64], Tensor[(624, 2), float64]) */;
    %471 = @func_6794() /* ty=(Tensor[(1, 80), float64],) */;
    %472 = %459.0;
    %473 = %470.0;
    %474 = %471.0;
    (%472, %473, %var_8581, meta[relay.Constant][31] /* ty=Tensor[(396), float32] */, meta[relay.Constant][32] /* ty=Tensor[(1120), float32] */, %var_8584, %var_8585, %474)
  };
  %475(%var_8625, %var_8626, %var_8627) /* ty=(Tensor[(9, 12, 9), float64], Tensor[(9, 5, 16), float32], Tensor[(720), float64], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(26, 3), float64], Tensor[(1248), float64], Tensor[(1, 80), float64]) */
}

def @func_275(%var_269: Tensor[(14, 16, 6), float32]) -> Tensor[(14, 16, 6), float32] {
  %476 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 16, 6), float32] */, dtype="float32") /* ty=Tensor[(14, 16, 6), float32] */;
  %477 = shape_of(%var_269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%var_269, dtype="float32") /* ty=Tensor[(14, 16, 6), float32] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%478, %479) /* ty=Tensor[(14, 16, 6), float32] */
}

def @func_3344(%var_3341: Tensor[(1, 1, 9), float32], %var_3342: Tensor[(5, 15, 9), float32], %var_3343: Tensor[(98), float64]) -> (Tensor[(5, 15, 9), float32], Tensor[(1344, 1), float32], Tensor[(98), float64], Tensor[(1344), float32]) {
  @func_3339(%var_3341, %var_3342, %var_3343) /* ty=(Tensor[(5, 15, 9), float32], Tensor[(1344, 1), float32], Tensor[(98), float64], Tensor[(1344), float32]) */
}

def @func_6695(%var_6692: Tensor[(14, 4, 6), float32], %var_6693: Tensor[(360), int8], %var_6694: Tensor[(1500), int64]) -> (Tensor[(1, 80), float64], Tensor[(8, 5, 9), int8], Tensor[(360), int8], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1500), int64], Tensor[(14, 4, 6), float64]) {
  %497 = fn (%var_6650: Tensor[(14, 4, 6), float32], %var_6667: Tensor[(360), int8], %var_6670: Tensor[(1500), int64]) -> (Tensor[(1, 80), float64], Tensor[(8, 5, 9), int8], Tensor[(360), int8], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1500), int64], Tensor[(14, 4, 6), float64]) {
    %480 = cast(%var_6667, dtype="int8") /* ty=Tensor[(360), int8] */;
    %481 = cast(meta[relay.Constant][34] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
    %482 = cast(meta[relay.Constant][35] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
    %483 = cast(%var_6670, dtype="int64") /* ty=Tensor[(1500), int64] */;
    %484 = reshape(%480, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int8] */;
    %485 = reshape(%481, newshape=[675]) /* ty=Tensor[(675), float32] */;
    %486 = reshape(%482, newshape=[7, 14]) /* ty=Tensor[(7, 14), float64] */;
    %487 = reshape(%483, newshape=[1500]) /* ty=Tensor[(1500), int64] */;
    %488 = @func_3444(%484, %485, %486, %487) /* ty=(Tensor[(8, 5, 9), int8], Tensor[(1344), float32], Tensor[(1, 9), float32], Tensor[(7, 14), float64], Tensor[(78), float64], Tensor[(1500), int64], Tensor[(675), float32]) */;
    %489 = cast(%var_6650, dtype="float32") /* ty=Tensor[(14, 4, 6), float32] */;
    %490 = cos(%489) /* ty=Tensor[(14, 4, 6), float32] */;
    %491 = cast(%490, dtype="float32") /* ty=Tensor[(14, 4, 6), float32] */;
    %492 = exp(%491) /* ty=Tensor[(14, 4, 6), float32] */;
    %493 = cast(%492, dtype="float64") /* ty=Tensor[(14, 4, 6), float64] */;
    %494 = @func_5833() /* ty=Tensor[(1, 80), float64] */;
    %495 = %488.0;
    %496 = erf(%493) /* ty=Tensor[(14, 4, 6), float64] */;
    (%494, %495, %var_6667, meta[relay.Constant][34] /* ty=Tensor[(675), float32] */, meta[relay.Constant][35] /* ty=Tensor[(98), float64] */, %var_6670, %496)
  };
  %497(%var_6692, %var_6693, %var_6694) /* ty=(Tensor[(1, 80), float64], Tensor[(8, 5, 9), int8], Tensor[(360), int8], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1500), int64], Tensor[(14, 4, 6), float64]) */
}

def @func_5835() -> Tensor[(1, 80), float64] {
  @func_5833() /* ty=Tensor[(1, 80), float64] */
}

def @func_6279(%var_6278: Tensor[(3, 6, 6), float32]) -> (Tensor[(3, 6, 6), float32],) {
  %500 = fn (%var_6267: Tensor[(3, 6, 6), float32]) -> (Tensor[(3, 6, 6), float32],) {
    %498 = cast(%var_6267, dtype="float32") /* ty=Tensor[(3, 6, 6), float32] */;
    %499 = rsqrt(%498) /* ty=Tensor[(3, 6, 6), float32] */;
    (%499,)
  };
  %500(%var_6278) /* ty=(Tensor[(3, 6, 6), float32],) */
}

def @func_6550() -> (Tensor[(?, 80), uint16], Tensor[(1, 80), float64]) {
  %501 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %502 = %501.2;
  %503 = @func_5035() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %504 = %503.0;
  %505 = cast(%504, dtype="uint16") /* ty=Tensor[(1, 5, 16), uint16] */;
  %506 = shape_of(%502, dtype="int32") /* ty=Tensor[(2), int32] */;
  %507 = cast(%502, dtype="uint16") /* ty=Tensor[(1, 80), uint16] */;
  %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %509 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
  %510 = left_shift(%507, %508) /* ty=Tensor[(?, 80), uint16] */;
  %511 = %509.2;
  (%510, %511)
}

def @func_2994(%var_2992: Tensor[(9, 2, 13), uint32]) -> (Tensor[(9, 2, 13), bool],) {
  @func_2991(%var_2992) /* ty=(Tensor[(9, 2, 13), bool],) */
}

def @func_4978(%var_4965: Tensor[(396), float32]) -> (Tensor[(1, 5, 16), float64], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(11, 12, 3), bool]) {
  %512 = cast(%var_4965, dtype="float32") /* ty=Tensor[(396), float32] */;
  %513 = reshape(%512, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float32] */;
  %514 = cast(%var_4965, dtype="float32") /* ty=Tensor[(396), float32] */;
  %515 = reshape(%514, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float32] */;
  %516 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
  %517 = @func_2712(%513) /* ty=Tensor[(11, 12, 3), bool] */;
  %518 = @func_2712(%515) /* ty=Tensor[(11, 12, 3), bool] */;
  (%516, %517, %var_4965, %518)
}

def @func_7501(%var_7447: Tensor[(9, 5, 16), float64], %var_7455: Tensor[(396), float32], %var_7456: Tensor[(1120), float32], %var_7481: Tensor[(78), float64], %var_7488: Tensor[(624, 2), float64]) -> (Tensor[(9, 5, 16), float32], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(11, 12, 3), bool], Tensor[(78), bool], Tensor[(16, 6, 13), float64], Tensor[(624, 2), float64]) {
  %519 = @func_7214() /* ty=(Tensor[(1, 5, 16), float64],) */;
  %520 = %519.0;
  %521 = cast(%520, dtype="float32") /* ty=Tensor[(1, 5, 16), float32] */;
  %522 = cast(%var_7447, dtype="float32") /* ty=Tensor[(9, 5, 16), float32] */;
  %523 = cast(%var_7455, dtype="float32") /* ty=Tensor[(396), float32] */;
  %524 = reshape(%523, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %525 = @func_4978(%524) /* ty=(Tensor[(1, 5, 16), float64], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(11, 12, 3), bool]) */;
  %526 = cast(%var_7455, dtype="float32") /* ty=Tensor[(396), float32] */;
  %527 = cast(%var_7456, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %528 = reshape(%526, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %529 = reshape(%527, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %530 = @func_6875(%528, %529) /* ty=(Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(1, 72), float32], Tensor[(78), float64], Tensor[(525), int64], Tensor[(1, 5, 16), float32]) */;
  %531 = %530.5;
  %532 = cast(%var_7481, dtype="bool") /* ty=Tensor[(78), bool] */;
  %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(1), int32] */;
  %534 = cast(%531, dtype="bool") /* ty=Tensor[(78), bool] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?), bool] */;
  %536 = cast(%var_7488, dtype="float64") /* ty=Tensor[(624, 2), float64] */;
  %537 = reshape(%536, newshape=[16, 6, 13]) /* ty=Tensor[(16, 6, 13), float64] */;
  %538 = @func_6615(%537) /* ty=(Tensor[(16, 6, 13), float64], Tensor[(1, 2, 5), float64], Tensor[(10), float64]) */;
  %539 = power(%521, %522) /* ty=Tensor[(9, 5, 16), float32] */;
  %540 = %525.3;
  %541 = not_equal(%534, %535) /* ty=Tensor[(78), bool] */;
  %542 = %538.0;
  (%539, %var_7455, %var_7456, %540, %541, %542, %var_7488)
}

def @func_7074(%var_7068: Tensor[(2, 2, 11), float64], %var_7069: Tensor[(2, 2, 11), float64], %var_7070: Tensor[(675), float32], %var_7071: Tensor[(1120), float32], %var_7072: Tensor[(72), float32], %var_7073: Tensor[(78, 1), float64]) -> (Tensor[(98), float64], Tensor[(9), float32], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1120), float32], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(2, 2, 11), float64], Tensor[(9, 12, 9), float64], Tensor[(1, 80), float64], Tensor[(1, 5, 16), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(78, 1), float64], Tensor[(525), int64]) {
  %583 = fn (%var_6975: Tensor[(2, 2, 11), float64], %var_6976: Tensor[(2, 2, 11), float64], %var_6982: Tensor[(675), float32], %var_7001: Tensor[(1120), float32], %var_7048: Tensor[(72), float32], %var_7049: Tensor[(78, 1), float64]) -> (Tensor[(98), float64], Tensor[(9), float32], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1120), float32], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(2, 2, 11), float64], Tensor[(9, 12, 9), float64], Tensor[(1, 80), float64], Tensor[(1, 5, 16), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(78, 1), float64], Tensor[(525), int64]) {
    %543 = cast(meta[relay.Constant][36] /* ty=Tensor[(9), float32] */, dtype="float32") /* ty=Tensor[(9), float32] */;
    %544 = cast(%var_6982, dtype="float32") /* ty=Tensor[(675), float32] */;
    %545 = cast(meta[relay.Constant][37] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
    %546 = reshape(%543, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float32] */;
    %547 = reshape(%544, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float32] */;
    %548 = reshape(%545, newshape=[98]) /* ty=Tensor[(98), float64] */;
    %549 = @func_3339(%546, %547, %548) /* ty=(Tensor[(5, 15, 9), float32], Tensor[(1344, 1), float32], Tensor[(98), float64], Tensor[(1344), float32]) */;
    %550 = cast(meta[relay.Constant][38] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
    %551 = cast(%var_7001, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %552 = reshape(%550, newshape=[396]) /* ty=Tensor[(396), float32] */;
    %553 = reshape(%551, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
    %554 = @func_6875(%552, %553) /* ty=(Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(1, 72), float32], Tensor[(78), float64], Tensor[(525), int64], Tensor[(1, 5, 16), float32]) */;
    %555 = cast(%var_6976, dtype="float64") /* ty=Tensor[(2, 2, 11), float64] */;
    %556 = shape_of(%var_6975, dtype="int32") /* ty=Tensor[(3), int32] */;
    %557 = cast(%var_6975, dtype="float64") /* ty=Tensor[(2, 2, 11), float64] */;
    %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %559 = mod(%557, %558) /* ty=Tensor[(2, 2, 11), float64] */;
    %560 = cast(%559, dtype="float32") /* ty=Tensor[(2, 2, 11), float32] */;
    %561 = sinh(%560) /* ty=Tensor[(2, 2, 11), float32] */;
    %562 = cast(%561, dtype="float64") /* ty=Tensor[(2, 2, 11), float64] */;
    %563 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
    %564 = @func_5035() /* ty=(Tensor[(1, 5, 16), float64],) */;
    %565 = %554.3;
    %566 = cast(%565, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %567 = cast(%var_7048, dtype="float32") /* ty=Tensor[(72), float32] */;
    %568 = cast(%var_7049, dtype="float64") /* ty=Tensor[(78, 1), float64] */;
    %569 = cast(meta[relay.Constant][38] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
    %570 = cast(meta[relay.Constant][39] /* ty=Tensor[(525), int64] */, dtype="int64") /* ty=Tensor[(525), int64] */;
    %571 = reshape(%566, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
    %572 = reshape(%567, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %573 = reshape(%568, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
    %574 = reshape(%569, newshape=[396]) /* ty=Tensor[(396), float32] */;
    %575 = reshape(%570, newshape=[525]) /* ty=Tensor[(525), int64] */;
    %576 = @func_5380(%571, %572, %573, %574, %575) /* ty=(Tensor[(10, 80), int64], Tensor[(78), float64], Tensor[(72), float32], Tensor[(1120), float32], Tensor[(72), float32], Tensor[(13, 2, 3), bool], Tensor[(13, 2, 3), float64], Tensor[(?, 80), int16], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(15, 5, 7), int64], Tensor[(525), int64], Tensor[(1, 80), float64]) */;
    %577 = %549.2;
    %578 = log10(%562) /* ty=Tensor[(2, 2, 11), float64] */;
    %579 = %563.0;
    %580 = @func_5774() /* ty=Tensor[(1, 80), float64] */;
    %581 = %564.0;
    %582 = %576.2;
    (%577, meta[relay.Constant][36] /* ty=Tensor[(9), float32] */, %var_6982, meta[relay.Constant][37] /* ty=Tensor[(98), float64] */, %565, meta[relay.Constant][38] /* ty=Tensor[(396), float32] */, %var_7001, %578, %579, %580, %581, %582, %var_7048, %var_7049, meta[relay.Constant][39] /* ty=Tensor[(525), int64] */)
  };
  %583(%var_7068, %var_7069, %var_7070, %var_7071, %var_7072, %var_7073) /* ty=(Tensor[(98), float64], Tensor[(9), float32], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1120), float32], Tensor[(396), float32], Tensor[(1120), float32], Tensor[(2, 2, 11), float64], Tensor[(9, 12, 9), float64], Tensor[(1, 80), float64], Tensor[(1, 5, 16), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(78, 1), float64], Tensor[(525), int64]) */
}

def @func_3965(%var_3958: Tensor[(108), uint16], %var_3959: Tensor[(1, 9), float32], %var_3960: Tensor[(98), float64], %var_3961: Tensor[(1344), float32], %var_3962: Tensor[(360), int8], %var_3963: Tensor[(1500), int64], %var_3964: Tensor[(78), float64]) -> (Tensor[(12, 7, 15), float32], Tensor[(108), uint16], Tensor[(5, 15, 9), float32], Tensor[(1, 9), float32], Tensor[(225, 3), float32], Tensor[(98), float64], Tensor[(14, 16, 6), float32], Tensor[(1344), float32], Tensor[(15, 12, 9), float64], Tensor[(1, 9), float32], Tensor[(360), int8], Tensor[(1500), int64], Tensor[(15, 12, 9), float32], Tensor[(13, 2, 3), float64], Tensor[(78), float64], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(13, 2, 3), float64], Tensor[(15, 10, 10), int64], Tensor[(11, 12, 3), bool]) {
  @func_3956(%var_3958, %var_3959, %var_3960, %var_3961, %var_3962, %var_3963, %var_3964) /* ty=(Tensor[(12, 7, 15), float32], Tensor[(108), uint16], Tensor[(5, 15, 9), float32], Tensor[(1, 9), float32], Tensor[(225, 3), float32], Tensor[(98), float64], Tensor[(14, 16, 6), float32], Tensor[(1344), float32], Tensor[(15, 12, 9), float64], Tensor[(1, 9), float32], Tensor[(360), int8], Tensor[(1500), int64], Tensor[(15, 12, 9), float32], Tensor[(13, 2, 3), float64], Tensor[(78), float64], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(13, 2, 3), float64], Tensor[(15, 10, 10), int64], Tensor[(11, 12, 3), bool]) */
}

def @func_1708(%var_1706: Tensor[(15, 10, 10), int64], %var_1707: Tensor[(15, 10, 10), int64]) -> (Tensor[(15, 10, 10), int64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) {
  %592 = fn (%var_1678: Tensor[(15, 10, 10), int64], %var_1679: Tensor[(15, 10, 10), int64]) -> (Tensor[(15, 10, 10), int64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) {
    %584 = cast(%var_1679, dtype="int64") /* ty=Tensor[(15, 10, 10), int64] */;
    %585 = shape_of(%var_1678, dtype="int32") /* ty=Tensor[(3), int32] */;
    %586 = cast(%var_1678, dtype="int64") /* ty=Tensor[(15, 10, 10), int64] */;
    %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %588 = cast(meta[relay.Constant][40] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
    %589 = reshape(%588, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
    %590 = maximum(%586, %587) /* ty=Tensor[(15, 10, 10), int64] */;
    %591 = @func_220(%589) /* ty=Tensor[(13, 2, 3), float64] */;
    (%590, %591, meta[relay.Constant][40] /* ty=Tensor[(78), float64] */)
  };
  %592(%var_1706, %var_1707) /* ty=(Tensor[(15, 10, 10), int64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) */
}

def @func_9680() -> Tensor[(1, 80), float64] {
  %593 = @func_6550() /* ty=(Tensor[(?, 80), uint16], Tensor[(1, 80), float64]) */;
  %593.1
}

def @func_7590(%var_7587: Tensor[(2, 168), float32], %var_7588: Tensor[(360), int8], %var_7589: Tensor[(1500), int64]) -> (Tensor[(1, 80), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64], Tensor[(2, 168), float32], Tensor[(360), int8], Tensor[(1500), int64], Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float64]) {
  %614 = fn (%var_7577: Tensor[(2, 168), float32], %var_7578: Tensor[(360), int8], %var_7579: Tensor[(1500), int64]) -> (Tensor[(1, 80), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64], Tensor[(2, 168), float32], Tensor[(360), int8], Tensor[(1500), int64], Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float64]) {
    %594 = @func_6487() /* ty=(Tensor[(1, 5, 16), float64],) */;
    %595 = cast(%var_7577, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
    %596 = cast(%var_7578, dtype="int8") /* ty=Tensor[(360), int8] */;
    %597 = cast(%var_7579, dtype="int64") /* ty=Tensor[(1500), int64] */;
    %598 = reshape(%595, newshape=[14, 4, 6]) /* ty=Tensor[(14, 4, 6), float32] */;
    %599 = reshape(%596, newshape=[360]) /* ty=Tensor[(360), int8] */;
    %600 = reshape(%597, newshape=[1500]) /* ty=Tensor[(1500), int64] */;
    %601 = @func_6691(%598, %599, %600) /* ty=(Tensor[(1, 80), float64], Tensor[(8, 5, 9), int8], Tensor[(360), int8], Tensor[(675), float32], Tensor[(98), float64], Tensor[(1500), int64], Tensor[(14, 4, 6), float64]) */;
    %602 = %594.0;
    %603 = cast(%602, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
    %604 = reshape(%603, newshape=[1, 5, 16]) /* ty=Tensor[(1, 5, 16), float64] */;
    %605 = @func_5653() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(350), int64]) */;
    %606 = %605.1;
    %607 = cast(%606, dtype="float64") /* ty=Tensor[(14, 16, 6), float64] */;
    %608 = asin(%607) /* ty=Tensor[(14, 16, 6), float64] */;
    %609 = cast(%608, dtype="float64") /* ty=Tensor[(14, 16, 6), float64] */;
    %610 = @func_5774() /* ty=Tensor[(1, 80), float64] */;
    %611 = %601.0;
    %612 = @func_4767(%604) /* ty=Tensor[(1, 5, 16), float64] */;
    %613 = cosh(%609) /* ty=Tensor[(14, 16, 6), float64] */;
    (%610, %602, %611, %var_7577, %var_7578, %var_7579, %612, %613)
  };
  %614(%var_7587, %var_7588, %var_7589) /* ty=(Tensor[(1, 80), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64], Tensor[(2, 168), float32], Tensor[(360), int8], Tensor[(1500), int64], Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float64]) */
}

def @func_7215() -> (Tensor[(1, 5, 16), float64],) {
  %617 = fn () -> (Tensor[(1, 5, 16), float64],) {
    %615 = @func_6487() /* ty=(Tensor[(1, 5, 16), float64],) */;
    %616 = %615.0;
    (%616,)
  };
  %617() /* ty=(Tensor[(1, 5, 16), float64],) */
}

def @func_7733() -> (Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64], Tensor[(11, 12, 3), bool], Tensor[(1, 5, 16), float64]) {
  %631 = fn () -> (Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64], Tensor[(11, 12, 3), bool], Tensor[(1, 5, 16), float64]) {
    %618 = @func_6927() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */;
    %619 = cast(meta[relay.Constant][41] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
    %620 = reshape(%619, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float32] */;
    %621 = @func_2712(%620) /* ty=Tensor[(11, 12, 3), bool] */;
    %622 = cast(meta[relay.Constant][41] /* ty=Tensor[(396), float32] */, dtype="bool") /* ty=Tensor[(396), bool] */;
    %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
    %624 = cast(%621, dtype="bool") /* ty=Tensor[(11, 12, 3), bool] */;
    %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %626 = @func_6927() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */;
    %627 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
    %628 = %618.0;
    %629 = logical_or(%624, %625) /* ty=Tensor[(11, 12, 3), bool] */;
    %630 = %626.0;
    (%627, %628, %629, %630)
  };
  %631() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64], Tensor[(11, 12, 3), bool], Tensor[(1, 5, 16), float64]) */
}

def @func_5084() -> (Tensor[(1, 5, 16), float64],) {
  @func_5082() /* ty=(Tensor[(1, 5, 16), float64],) */
}

def @func_8505() -> (Tensor[(14, 16, 6), float32],) {
  %634 = fn () -> (Tensor[(14, 16, 6), float32],) {
    %632 = @func_5653() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(350), int64]) */;
    %633 = %632.1;
    (%633,)
  };
  %634() /* ty=(Tensor[(14, 16, 6), float32],) */
}

def @func_6615(%var_6575: Tensor[(16, 6, 13), float64]) -> (Tensor[(16, 6, 13), float64], Tensor[(1, 2, 5), float64], Tensor[(10), float64]) {
  %635 = cast(%var_6575, dtype="float64") /* ty=Tensor[(16, 6, 13), float64] */;
  %636 = cast(meta[relay.Constant][42] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
  %637 = reshape(%636, newshape=[1, 2, 5]) /* ty=Tensor[(1, 2, 5), float64] */;
  %638 = asinh(%635) /* ty=Tensor[(16, 6, 13), float64] */;
  %639 = @func_5753(%637) /* ty=Tensor[(1, 2, 5), float64] */;
  (%638, %639, meta[relay.Constant][42] /* ty=Tensor[(10), float64] */)
}

def @func_9344(%var_9327: Tensor[(10, 7, 14), int16], %var_9328: Tensor[(10, 7, 14), int16]) -> (Tensor[(10, 7, 14), int16],) {
  %640 = cast(%var_9328, dtype="int16") /* ty=Tensor[(10, 7, 14), int16] */;
  %641 = shape_of(%var_9327, dtype="int32") /* ty=Tensor[(3), int32] */;
  %642 = cast(%var_9327, dtype="int16") /* ty=Tensor[(10, 7, 14), int16] */;
  %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %644 = subtract(%642, %643) /* ty=Tensor[(10, 7, 14), int16] */;
  (%644,)
}

def @func_8324(%var_8323: Tensor[(14, 80), float64]) -> (Tensor[(14, 80), float32], Tensor[(15, 12, 9), bool], Tensor[(1, 108), uint16]) {
  %654 = fn (%var_8305: Tensor[(14, 80), float64]) -> (Tensor[(14, 80), float32], Tensor[(15, 12, 9), bool], Tensor[(1, 108), uint16]) {
    %645 = @func_6099() /* ty=(Tensor[(1, 80), float64],) */;
    %646 = %645.0;
    %647 = cast(%646, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
    %648 = cast(%var_8305, dtype="float32") /* ty=Tensor[(14, 80), float32] */;
    %649 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 108), uint16] */, dtype="uint16") /* ty=Tensor[(1, 108), uint16] */;
    %650 = reshape(%649, newshape=[1, 12, 9]) /* ty=Tensor[(1, 12, 9), uint16] */;
    %651 = @func_3664(%650) /* ty=(Tensor[(15, 12, 9), bool],) */;
    %652 = floor_divide(%647, %648) /* ty=Tensor[(14, 80), float32] */;
    %653 = %651.0;
    (%652, %653, meta[relay.Constant][43] /* ty=Tensor[(1, 108), uint16] */)
  };
  %654(%var_8323) /* ty=(Tensor[(14, 80), float32], Tensor[(15, 12, 9), bool], Tensor[(1, 108), uint16]) */
}

def @func_4532(%var_4531: Tensor[(5, 14, 12), float64]) -> Tensor[(5, 14, 12), float32] {
  %658 = fn (%var_4523: Tensor[(5, 14, 12), float64]) -> Tensor[(5, 14, 12), float32] {
    %655 = cast(%var_4523, dtype="float64") /* ty=Tensor[(5, 14, 12), float64] */;
    %656 = asin(%655) /* ty=Tensor[(5, 14, 12), float64] */;
    %657 = cast(%656, dtype="float32") /* ty=Tensor[(5, 14, 12), float32] */;
    erf(%657) /* ty=Tensor[(5, 14, 12), float32] */
  };
  %658(%var_4531) /* ty=Tensor[(5, 14, 12), float32] */
}

def @func_6099() -> (Tensor[(1, 80), float64],) {
  %659 = @func_4877() /* ty=Tensor[(1, 80), float64] */;
  (%659,)
}

def @func_5753(%var_5736: Tensor[(1, 2, 5), float64]) -> Tensor[(1, 2, 5), float64] {
  %660 = cast(%var_5736, dtype="float64") /* ty=Tensor[(1, 2, 5), float64] */;
  cosh(%660) /* ty=Tensor[(1, 2, 5), float64] */
}

def @func_5654() -> (Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(350), int64]) {
  %666 = fn () -> (Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(350), int64]) {
    %661 = cast(meta[relay.Constant][44] /* ty=Tensor[(350), int64] */, dtype="int64") /* ty=Tensor[(350), int64] */;
    %662 = reshape(%661, newshape=[5, 10, 7]) /* ty=Tensor[(5, 10, 7), int64] */;
    %663 = @func_923(%662) /* ty=(Tensor[(5, 10, 7), int64], Tensor[(14, 16, 6), float32], Tensor[(1344), float32]) */;
    %664 = @func_5432() /* ty=Tensor[(1, 5, 16), float64] */;
    %665 = %663.1;
    (%664, %665, meta[relay.Constant][44] /* ty=Tensor[(350), int64] */)
  };
  %666() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(350), int64]) */
}

def @func_8204() -> (Tensor[(11, 80), float64],) {
  %667 = @func_5952() /* ty=(Tensor[(11, 80), float64], Tensor[(11, 80), bool], Tensor[(1, 5, 16), float64]) */;
  %668 = %667.0;
  (%668,)
}

def @func_8341(%var_8327: Tensor[(7, 11, 4), int32]) -> (Tensor[(7, 11, 4), int32],) {
  %669 = cast(%var_8327, dtype="int32") /* ty=Tensor[(7, 11, 4), int32] */;
  %670 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(7, 11, 4), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(meta[relay.Constant][45] /* ty=Tensor[(7, 11, 4), int32] */, dtype="int32") /* ty=Tensor[(7, 11, 4), int32] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %673 = add(%671, %672) /* ty=Tensor[(7, 11, 4), int32] */;
  (%673,)
}

def @func_5035() -> (Tensor[(1, 5, 16), float64],) {
  %674 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
  (%674,)
}

def @func_9850() -> (Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(11, 350), bool]) {
  %686 = fn () -> (Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(11, 350), bool]) {
    %675 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 350), int64] */, dtype="int64") /* ty=Tensor[(1, 350), int64] */;
    %676 = reshape(%675, newshape=[5, 10, 7]) /* ty=Tensor[(5, 10, 7), int64] */;
    %677 = @func_923(%676) /* ty=(Tensor[(5, 10, 7), int64], Tensor[(14, 16, 6), float32], Tensor[(1344), float32]) */;
    %678 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 350), int64] */, dtype="bool") /* ty=Tensor[(1, 350), bool] */;
    %679 = cast(meta[relay.Constant][47] /* ty=Tensor[(11, 350), int64] */, dtype="bool") /* ty=Tensor[(11, 350), bool] */;
    %680 = logical_or(%678, %679) /* ty=Tensor[(11, 350), bool] */;
    %681 = cast(%680, dtype="bool") /* ty=Tensor[(11, 350), bool] */;
    %682 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 350), int64] */, dtype="bool") /* ty=Tensor[(1, 350), bool] */;
    %683 = @func_5017() /* ty=Tensor[(1, 5, 16), float64] */;
    %684 = %677.1;
    %685 = logical_and(%681, %682) /* ty=Tensor[(11, 350), bool] */;
    (%683, %684, %685)
  };
  %686() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(11, 350), bool]) */
}

def @func_4343(%var_4324: Tensor[(15, 5, 7), int64], %var_4325: Tensor[(15, 5, 7), int64], %var_4336: Tensor[(72), float32]) -> (Tensor[(15, 5, 7), int64], Tensor[(6, 12, 1), float32], Tensor[(72), float32]) {
  %687 = cast(%var_4325, dtype="int64") /* ty=Tensor[(15, 5, 7), int64] */;
  %688 = shape_of(%var_4324, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%var_4324, dtype="int64") /* ty=Tensor[(15, 5, 7), int64] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %691 = cast(%var_4336, dtype="float32") /* ty=Tensor[(72), float32] */;
  %692 = reshape(%691, newshape=[6, 12, 1]) /* ty=Tensor[(6, 12, 1), float32] */;
  %693 = subtract(%689, %690) /* ty=Tensor[(15, 5, 7), int64] */;
  %694 = @func_3647(%692) /* ty=Tensor[(6, 12, 1), float32] */;
  (%693, %694, %var_4336)
}

def @func_3450(%var_3446: Tensor[(8, 5, 9), int8], %var_3447: Tensor[(675), float32], %var_3448: Tensor[(7, 14), float64], %var_3449: Tensor[(1500), int64]) -> (Tensor[(8, 5, 9), int8], Tensor[(1344), float32], Tensor[(1, 9), float32], Tensor[(7, 14), float64], Tensor[(78), float64], Tensor[(1500), int64], Tensor[(675), float32]) {
  @func_3444(%var_3446, %var_3447, %var_3448, %var_3449) /* ty=(Tensor[(8, 5, 9), int8], Tensor[(1344), float32], Tensor[(1, 9), float32], Tensor[(7, 14), float64], Tensor[(78), float64], Tensor[(1500), int64], Tensor[(675), float32]) */
}

def @func_6929() -> (Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) {
  @func_6927() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */
}

def @func_3339(%var_3322: Tensor[(1, 1, 9), float32], %var_3323: Tensor[(5, 15, 9), float32], %var_3331: Tensor[(98), float64]) -> (Tensor[(5, 15, 9), float32], Tensor[(1344, 1), float32], Tensor[(98), float64], Tensor[(1344), float32]) {
  %695 = cast(%var_3322, dtype="float32") /* ty=Tensor[(1, 1, 9), float32] */;
  %696 = cast(%var_3323, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  %697 = cast(%var_3331, dtype="float64") /* ty=Tensor[(98), float64] */;
  %698 = cast(meta[relay.Constant][48] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %699 = reshape(%697, newshape=[1, 14, 7]) /* ty=Tensor[(1, 14, 7), float64] */;
  %700 = reshape(%698, newshape=[1344, 1]) /* ty=Tensor[(1344, 1), float32] */;
  %701 = @func_948(%699, %700) /* ty=(Tensor[(1, 14, 7), float64], Tensor[(14, 16, 6), float32], Tensor[(1344, 1), float32]) */;
  %702 = floor_divide(%695, %696) /* ty=Tensor[(5, 15, 9), float32] */;
  %703 = %701.2;
  (%702, %703, %var_3331, meta[relay.Constant][48] /* ty=Tensor[(1344), float32] */)
}

def @func_8052() -> Tensor[(1, 5, 16), float64] {
  %705 = fn () -> Tensor[(1, 5, 16), float64] {
    %704 = @func_5166() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(1, 5, 16), float64]) */;
    %704.0
  };
  %705() /* ty=Tensor[(1, 5, 16), float64] */
}

def @func_8215() -> (Tensor[(1, 5, 16), float64],) {
  %708 = fn () -> (Tensor[(1, 5, 16), float64],) {
    %706 = @func_5874() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float32]) */;
    %707 = %706.1;
    (%707,)
  };
  %708() /* ty=(Tensor[(1, 5, 16), float64],) */
}

def @func_8911(%var_8909: Tensor[(9, 5, 16), float64]) -> (Tensor[(9, 5, 16), uint64], Tensor[(9, 12, 9), float64]) {
  @func_8908(%var_8909) /* ty=(Tensor[(9, 5, 16), uint64], Tensor[(9, 12, 9), float64]) */
}

def @func_5242(%var_5240: Tensor[(1, 5, 16), float64], %var_5241: Tensor[(12, 5, 16), float64]) -> (Tensor[(?, 5, 16), uint16], Tensor[(12, 5, 16), uint16]) {
  %724 = fn (%var_5194: Tensor[(1, 5, 16), float64], %var_5219: Tensor[(12, 5, 16), float64]) -> (Tensor[(?, 5, 16), uint16], Tensor[(12, 5, 16), uint16]) {
    %709 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
    %710 = %709.1;
    %711 = cast(%var_5194, dtype="bool") /* ty=Tensor[(1, 5, 16), bool] */;
    %712 = shape_of(%710, dtype="int32") /* ty=Tensor[(3), int32] */;
    %713 = cast(%710, dtype="bool") /* ty=Tensor[(1, 5, 16), bool] */;
    %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %715 = less(%713, %714) /* ty=Tensor[(?, 5, 16), bool] */;
    %716 = cast(%715, dtype="uint16") /* ty=Tensor[(?, 5, 16), uint16] */;
    %717 = shape_of(%710, dtype="int32") /* ty=Tensor[(3), int32] */;
    %718 = cast(%710, dtype="uint16") /* ty=Tensor[(1, 5, 16), uint16] */;
    %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %720 = cast(%710, dtype="uint16") /* ty=Tensor[(1, 5, 16), uint16] */;
    %721 = cast(%var_5219, dtype="uint16") /* ty=Tensor[(12, 5, 16), uint16] */;
    %722 = bitwise_and(%718, %719) /* ty=Tensor[(?, 5, 16), uint16] */;
    %723 = add(%720, %721) /* ty=Tensor[(12, 5, 16), uint16] */;
    (%722, %723)
  };
  %724(%var_5240, %var_5241) /* ty=(Tensor[(?, 5, 16), uint16], Tensor[(12, 5, 16), uint16]) */
}

def @func_3956(%var_3864: Tensor[(108), uint16], %var_3883: Tensor[(1, 9), float32], %var_3885: Tensor[(98), float64], %var_3892: Tensor[(1344), float32], %var_3907: Tensor[(360), int8], %var_3908: Tensor[(1500), int64], %var_3915: Tensor[(78), float64]) -> (Tensor[(12, 7, 15), float32], Tensor[(108), uint16], Tensor[(5, 15, 9), float32], Tensor[(1, 9), float32], Tensor[(225, 3), float32], Tensor[(98), float64], Tensor[(14, 16, 6), float32], Tensor[(1344), float32], Tensor[(15, 12, 9), float64], Tensor[(1, 9), float32], Tensor[(360), int8], Tensor[(1500), int64], Tensor[(15, 12, 9), float32], Tensor[(13, 2, 3), float64], Tensor[(78), float64], Tensor[(11, 12, 3), bool], Tensor[(396), float32], Tensor[(13, 2, 3), float64], Tensor[(15, 10, 10), int64], Tensor[(11, 12, 3), bool]) {
  %725 = cast(meta[relay.Constant][49] /* ty=Tensor[(12, 7, 15), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 15), float32] */;
  %726 = cast(%var_3883, dtype="float32") /* ty=Tensor[(1, 9), float32] */;
  %727 = cast(meta[relay.Constant][50] /* ty=Tensor[(225, 3), float32] */, dtype="float32") /* ty=Tensor[(225, 3), float32] */;
  %728 = cast(%var_3885, dtype="float64") /* ty=Tensor[(98), float64] */;
  %729 = reshape(%726, newshape=[1, 1, 9]) /* ty=Tensor[(1, 1, 9), float32] */;
  %730 = reshape(%727, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float32] */;
  %731 = reshape(%728, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %732 = @func_3339(%729, %730, %731) /* ty=(Tensor[(5, 15, 9), float32], Tensor[(1344, 1), float32], Tensor[(98), float64], Tensor[(1344), float32]) */;
  %733 = cast(%var_3892, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %734 = reshape(%733, newshape=[14, 16, 6]) /* ty=Tensor[(14, 16, 6), float32] */;
  %735 = cast(%var_3864, dtype="uint16") /* ty=Tensor[(108), uint16] */;
  %736 = reshape(%735, newshape=[1, 12, 9]) /* ty=Tensor[(1, 12, 9), uint16] */;
  %737 = @func_3664(%736) /* ty=(Tensor[(15, 12, 9), bool],) */;
  %738 = %737.0;
  %739 = cast(%738, dtype="float32") /* ty=Tensor[(15, 12, 9), float32] */;
  %740 = log2(%739) /* ty=Tensor[(15, 12, 9), float32] */;
  %741 = cast(%740, dtype="float64") /* ty=Tensor[(15, 12, 9), float64] */;
  %742 = cast(%var_3907, dtype="int8") /* ty=Tensor[(360), int8] */;
  %743 = %732.0;
  %744 = cast(%743, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  %745 = cast(%var_3885, dtype="float64") /* ty=Tensor[(98), float64] */;
  %746 = cast(%var_3908, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %747 = reshape(%742, newshape=[8, 5, 9]) /* ty=Tensor[(8, 5, 9), int8] */;
  %748 = reshape(%744, newshape=[675]) /* ty=Tensor[(675), float32] */;
  %749 = reshape(%745, newshape=[7, 14]) /* ty=Tensor[(7, 14), float64] */;
  %750 = reshape(%746, newshape=[1500]) /* ty=Tensor[(1500), int64] */;
  %751 = @func_3444(%747, %748, %749, %750) /* ty=(Tensor[(8, 5, 9), int8], Tensor[(1344), float32], Tensor[(1, 9), float32], Tensor[(7, 14), float64], Tensor[(78), float64], Tensor[(1500), int64], Tensor[(675), float32]) */;
  %752 = cast(%740, dtype="float32") /* ty=Tensor[(15, 12, 9), float32] */;
  %753 = atan(%752) /* ty=Tensor[(15, 12, 9), float32] */;
  %754 = cast(%753, dtype="float32") /* ty=Tensor[(15, 12, 9), float32] */;
  %755 = rsqrt(%754) /* ty=Tensor[(15, 12, 9), float32] */;
  %756 = cast(%755, dtype="float32") /* ty=Tensor[(15, 12, 9), float32] */;
  %757 = cast(%var_3915, dtype="float64") /* ty=Tensor[(78), float64] */;
  %758 = reshape(%757, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %759 = cast(meta[relay.Constant][51] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %760 = reshape(%759, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float32] */;
  %761 = cast(%var_3908, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %762 = cast(%var_3908, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %763 = reshape(%761, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), int64] */;
  %764 = reshape(%762, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), int64] */;
  %765 = @func_1705(%763, %764) /* ty=(Tensor[(15, 10, 10), int64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) */;
  %766 = cast(%var_3908, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %767 = cast(%var_3908, dtype="int64") /* ty=Tensor[(1500), int64] */;
  %768 = reshape(%766, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), int64] */;
  %769 = reshape(%767, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), int64] */;
  %770 = @func_1705(%768, %769) /* ty=(Tensor[(15, 10, 10), int64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) */;
  %771 = @func_2712(%760) /* ty=Tensor[(11, 12, 3), bool] */;
  %772 = cast(%771, dtype="float32") /* ty=Tensor[(11, 12, 3), float32] */;
  %773 = reshape(%772, newshape=[11, 12, 3]) /* ty=Tensor[(11, 12, 3), float32] */;
  %774 = erf(%725) /* ty=Tensor[(12, 7, 15), float32] */;
  %775 = @func_275(%734) /* ty=Tensor[(14, 16, 6), float32] */;
  %776 = erf(%741) /* ty=Tensor[(15, 12, 9), float64] */;
  %777 = %751.2;
  %778 = sigmoid(%756) /* ty=Tensor[(15, 12, 9), float32] */;
  %779 = @func_220(%758) /* ty=Tensor[(13, 2, 3), float64] */;
  %780 = %765.1;
  %781 = %770.0;
  %782 = @func_2712(%773) /* ty=Tensor[(11, 12, 3), bool] */;
  (%774, %var_3864, %743, %var_3883, meta[relay.Constant][50] /* ty=Tensor[(225, 3), float32] */, %var_3885, %775, %var_3892, %776, %777, %var_3907, %var_3908, %778, %779, %var_3915, %771, meta[relay.Constant][51] /* ty=Tensor[(396), float32] */, %780, %781, %782)
}

def @func_7246(%var_7242: Tensor[(16, 4, 8), float32]) -> (Tensor[(16, 4, 8), float32],) {
  %783 = cast(%var_7242, dtype="float32") /* ty=Tensor[(16, 4, 8), float32] */;
  %784 = tan(%783) /* ty=Tensor[(16, 4, 8), float32] */;
  (%784,)
}

def @func_8479() -> Tensor[(8, 8, 1), float32] {
  @func_8477() /* ty=Tensor[(8, 8, 1), float32] */
}

def @func_9037() -> (Tensor[(14, 16, 6), float32], Tensor[(9, 12, 9), float64]) {
  %785 = @func_5653() /* ty=(Tensor[(1, 5, 16), float64], Tensor[(14, 16, 6), float32], Tensor[(350), int64]) */;
  %786 = @func_6389() /* ty=(Tensor[(9, 12, 9), float64],) */;
  %787 = %785.1;
  %788 = %786.0;
  (%787, %788)
}

def @func_5756(%var_5754: Tensor[(1, 2, 5), float64]) -> Tensor[(1, 2, 5), float64] {
  @func_5753(%var_5754) /* ty=Tensor[(1, 2, 5), float64] */
}

def @func_5875() -> (Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float32]) {
  %795 = fn () -> (Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float32]) {
    %789 = @func_4785() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float64]) */;
    %790 = @func_5833() /* ty=Tensor[(1, 80), float64] */;
    %791 = cast(%790, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
    %792 = %789.0;
    %793 = @func_5017() /* ty=Tensor[(1, 5, 16), float64] */;
    %794 = exp(%791) /* ty=Tensor[(1, 80), float32] */;
    (%792, %793, %794)
  };
  %795() /* ty=(Tensor[(9, 12, 9), float64], Tensor[(1, 5, 16), float64], Tensor[(1, 80), float32]) */
}

def @func_5037() -> (Tensor[(1, 5, 16), float64],) {
  @func_5035() /* ty=(Tensor[(1, 5, 16), float64],) */
}

def @func_5017() -> Tensor[(1, 5, 16), float64] {
  %796 = @func_4920() /* ty=Tensor[(1, 5, 16), float64] */;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(1, 5, 16), float64] */;
  atanh(%797) /* ty=Tensor[(1, 5, 16), float64] */
}

def @func_6488() -> (Tensor[(1, 5, 16), float64],) {
  %800 = fn () -> (Tensor[(1, 5, 16), float64],) {
    %798 = @func_5082() /* ty=(Tensor[(1, 5, 16), float64],) */;
    %799 = %798.0;
    (%799,)
  };
  %800() /* ty=(Tensor[(1, 5, 16), float64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

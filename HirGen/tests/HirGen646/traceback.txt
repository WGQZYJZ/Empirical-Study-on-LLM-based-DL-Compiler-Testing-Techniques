==========mod==========
#[version = "0.0.5"]
def @func_3454(%var_3440: Tensor[(8, 4, 15), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(8, 4, 15), uint32], Tensor[(8, 4, 15), float32]) {
  %0 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 4, 15), float32] */, dtype="float32") /* ty=Tensor[(8, 4, 15), float32] */;
  %2 = exp(%1) /* ty=Tensor[(8, 4, 15), float32] */;
  %3 = cast(%var_3440, dtype="uint32") /* ty=Tensor[(8, 4, 15), uint32] */;
  %4 = shape_of(%2, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%2, dtype="uint32") /* ty=Tensor[(8, 4, 15), uint32] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 4, 15), float32] */, dtype="float64") /* ty=Tensor[(8, 4, 15), float64] */;
  %8 = sigmoid(%7) /* ty=Tensor[(8, 4, 15), float64] */;
  %9 = cast(%8, dtype="float32") /* ty=Tensor[(8, 4, 15), float32] */;
  %10 = %0.0;
  %11 = @func_2799() /* ty=Tensor[(4, 2, 6), float64] */;
  %12 = minimum(%5, %6) /* ty=Tensor[(8, 4, 15), uint32] */;
  %13 = sinh(%9) /* ty=Tensor[(8, 4, 15), float32] */;
  (%10, %11, %12, %13)
}

def @func_4763() -> (Tensor[(9, 3, 12), float64], Tensor[(2, 4, 16), int8], Tensor[(9, 5, 15), float32], Tensor[(715, 2), float32], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32], Tensor[(128), uint64]) {
  %14 = @func_2696() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) */;
  %15 = cast(meta[relay.Constant][1] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %17 = reshape(%15, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), int8] */;
  %18 = reshape(%16, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), int8] */;
  %19 = cast(meta[relay.Constant][2] /* ty=Tensor[(715, 2), float32] */, dtype="float32") /* ty=Tensor[(715, 2), float32] */;
  %20 = reshape(%19, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), float32] */;
  %21 = @func_921(%20) /* ty=(Tensor[(9, 5, 15), float32], Tensor[(675), float32], Tensor[(11, 13, 10), int64]) */;
  %22 = @func_4195() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %23 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 16, 3), float32] */, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %24 = sin(%23) /* ty=Tensor[(13, 16, 3), float32] */;
  %25 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 16, 3), float32] */, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %26 = shape_of(%24, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%24, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %29 = floor_mod(%27, %28) /* ty=Tensor[(13, 16, 3), float32] */;
  %30 = cast(%29, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %31 = sinh(%30) /* ty=Tensor[(13, 16, 3), float32] */;
  %32 = cast(%31, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %33 = cast(meta[relay.Constant][4] /* ty=Tensor[(128), int8] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %34 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(128), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %35 = cast(meta[relay.Constant][1] /* ty=Tensor[(128), int8] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %37 = %14.3;
  %38 = @func_4097(%17, %18) /* ty=Tensor[(2, 4, 16), int8] */;
  %39 = %21.0;
  %40 = %22.0;
  %41 = atan(%32) /* ty=Tensor[(13, 16, 3), float32] */;
  %42 = left_shift(%35, %36) /* ty=Tensor[(128), uint64] */;
  (%37, %38, %39, meta[relay.Constant][2] /* ty=Tensor[(715, 2), float32] */, %40, %41, %42)
}

def @func_4905(%var_4900: Tensor[(20), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(675), float32], Tensor[(1430), float32], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) {
  %43 = @func_3505() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %44 = @func_3990() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool]) */;
  %45 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %46 = cast(meta[relay.Constant][5] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %47 = reshape(%46, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), float32] */;
  %48 = @func_921(%47) /* ty=(Tensor[(9, 5, 15), float32], Tensor[(675), float32], Tensor[(11, 13, 10), int64]) */;
  %49 = cast(%var_4900, dtype="float32") /* ty=Tensor[(20), float32] */;
  %50 = reshape(%49, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float32] */;
  %51 = @func_808(%50) /* ty=(Tensor[(5, 2, 2), float32],) */;
  %52 = %43.0;
  %53 = %44.0;
  %54 = %45.0;
  %55 = %48.1;
  %56 = %51.0;
  (%52, %53, %54, %55, meta[relay.Constant][5] /* ty=Tensor[(1430), float32] */, %56, %var_4900)
}

def @func_9992() -> Tensor[(4, 2, 6), float64] {
  @func_9276() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_7960(%var_7943: Tensor[(675), float32]) -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(675), float64]) {
  %57 = @func_3891() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %58 = cast(%var_7943, dtype="float32") /* ty=Tensor[(675), float32] */;
  %59 = reshape(%58, newshape=[675]) /* ty=Tensor[(675), float32] */;
  %60 = @func_3045(%59) /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(675), float32]) */;
  %61 = @func_3990() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool]) */;
  %62 = cast(%var_7943, dtype="float64") /* ty=Tensor[(675), float64] */;
  %63 = %57.0;
  %64 = @func_1722() /* ty=Tensor[(4, 2, 6), float64] */;
  %65 = %60.0;
  %66 = %61.0;
  %67 = cos(%62) /* ty=Tensor[(675), float64] */;
  (%63, %64, %65, %66, %67)
}

def @func_11594() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %68 = @func_5748() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %69 = @func_4195() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %70 = %68.2;
  %71 = %69.1;
  (%70, %71)
}

def @func_8257() -> (Tensor[(4, 2, 6), float64], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(14, ?, 4), float32], Tensor[(14, ?, 4), uint16], Tensor[(4, 2, 6), float64]) {
  %72 = @func_4120() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %73 = @func_3878() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */;
  %74 = @func_1979() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %75 = @func_5718() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %76 = @func_7823() /* ty=(Tensor[(14, 1, 4), float32],) */;
  %77 = %76.0;
  %78 = cast(%77, dtype="float32") /* ty=Tensor[(14, 1, 4), float32] */;
  %79 = sigmoid(%78) /* ty=Tensor[(14, 1, 4), float32] */;
  %80 = cast(%77, dtype="float32") /* ty=Tensor[(14, 1, 4), float32] */;
  %81 = shape_of(%79, dtype="int32") /* ty=Tensor[(3), int32] */;
  %82 = cast(%79, dtype="float32") /* ty=Tensor[(14, 1, 4), float32] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %84 = mod(%82, %83) /* ty=Tensor[(14, ?, 4), float32] */;
  %85 = cast(%84, dtype="float32") /* ty=Tensor[(14, ?, 4), float32] */;
  %86 = cast(%79, dtype="uint16") /* ty=Tensor[(14, 1, 4), uint16] */;
  %87 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%84, dtype="uint16") /* ty=Tensor[(14, ?, 4), uint16] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %90 = multiply(%88, %89) /* ty=Tensor[(14, ?, 4), uint16] */;
  %91 = cast(%79, dtype="uint16") /* ty=Tensor[(14, 1, 4), uint16] */;
  %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%90, dtype="uint16") /* ty=Tensor[(14, ?, 4), uint16] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %95 = @func_7034() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %96 = %72.0;
  %97 = %73.1;
  %98 = %74.0;
  %99 = %75.0;
  %100 = tan(%85) /* ty=Tensor[(14, ?, 4), float32] */;
  %101 = minimum(%93, %94) /* ty=Tensor[(14, ?, 4), uint16] */;
  %102 = %95.2;
  (%96, %97, %98, %99, %100, %101, %102)
}

def @func_3878() -> (Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) {
  %103 = @func_3356() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %104 = @func_1957() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint16]) */;
  %105 = %103.1;
  %106 = %104.2;
  (%105, %106)
}

def @func_10091(%var_10050: Tensor[(324), bool]) -> (Tensor[(4, 2, 6), float64], Tensor[(324), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(9, 12, 3), float64]) {
  %107 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %108 = cast(%var_10050, dtype="uint16") /* ty=Tensor[(324), uint16] */;
  %109 = reshape(%108, newshape=[3, 108]) /* ty=Tensor[(3, 108), uint16] */;
  %110 = @func_8345(%109) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(3, 108), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(1792), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %111 = @func_6592() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %112 = cast(%var_10050, dtype="bool") /* ty=Tensor[(324), bool] */;
  %113 = cast(%var_10050, dtype="bool") /* ty=Tensor[(324), bool] */;
  %114 = reshape(%112, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), bool] */;
  %115 = reshape(%113, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), bool] */;
  %116 = @func_450(%114, %115) /* ty=(Tensor[(9, 12, 3), uint32], Tensor[(9, 12, 3), float32]) */;
  %117 = %116.0;
  %118 = cast(%117, dtype="float64") /* ty=Tensor[(9, 12, 3), float64] */;
  %119 = %107.0;
  %120 = %110.7;
  %121 = %111.4;
  %122 = asin(%118) /* ty=Tensor[(9, 12, 3), float64] */;
  (%119, %var_10050, %120, %121, %122)
}

def @func_808(%var_803: Tensor[(5, 2, 2), float32]) -> (Tensor[(5, 2, 2), float32],) {
  %123 = cast(%var_803, dtype="float32") /* ty=Tensor[(5, 2, 2), float32] */;
  %124 = asin(%123) /* ty=Tensor[(5, 2, 2), float32] */;
  (%124,)
}

def @func_11293() -> Tensor[(4, 2, 6), float64] {
  @func_10734() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_2696() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) {
  %125 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 108), uint16] */, dtype="uint16") /* ty=Tensor[(3, 108), uint16] */;
  %126 = reshape(%125, newshape=[324]) /* ty=Tensor[(324), uint16] */;
  %127 = @func_2329(%126) /* ty=(Tensor[(675, 1), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), float64]) */;
  %128 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 108), uint16] */, dtype="uint16") /* ty=Tensor[(3, 108), uint16] */;
  %129 = reshape(%128, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint16] */;
  %130 = @func_1060(%129) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(9, 5, 15), float32], Tensor[(675, 1), float32]) */;
  %131 = @func_1870() /* ty=Tensor[(4, 2, 6), float64] */;
  %132 = %127.2;
  %133 = %130.0;
  (%131, %132, meta[relay.Constant][6] /* ty=Tensor[(3, 108), uint16] */, %133)
}

def @func_11512() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) {
  %134 = @func_3395() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %135 = @func_2784() /* ty=Tensor[(4, 2, 6), float64] */;
  %136 = %134.0;
  (%135, %136)
}

def @func_7905() -> (Tensor[(4, 2, 6), float64],) {
  %137 = @func_4120() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %138 = %137.0;
  (%138,)
}

def @func_2144(%var_2135: Tensor[(12, 6, 12), float32]) -> (Tensor[(12, 6, 12), float32], Tensor[(4, 2, 6), float64]) {
  %139 = cast(%var_2135, dtype="float32") /* ty=Tensor[(12, 6, 12), float32] */;
  %140 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %141 = exp(%139) /* ty=Tensor[(12, 6, 12), float32] */;
  %142 = %140.0;
  (%141, %142)
}

def @func_6149(%var_6102: Tensor[(5, 8, 7), int8]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(20), float32], Tensor[(4, 2, 6), float64], Tensor[(5, 8, 7), float32]) {
  %143 = cast(meta[relay.Constant][7] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %144 = reshape(%143, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %145 = @func_3336(%144) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64], Tensor[(4, 2, 6), float64]) */;
  %146 = @func_5748() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %147 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 8, 7), int8] */, dtype="int8") /* ty=Tensor[(5, 8, 7), int8] */;
  %148 = shape_of(%var_6102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%var_6102, dtype="int8") /* ty=Tensor[(5, 8, 7), int8] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %151 = maximum(%149, %150) /* ty=Tensor[(5, 8, 7), int8] */;
  %152 = cast(%151, dtype="float32") /* ty=Tensor[(5, 8, 7), float32] */;
  %153 = @func_1870() /* ty=Tensor[(4, 2, 6), float64] */;
  %154 = %145.0;
  %155 = %146.0;
  %156 = tan(%152) /* ty=Tensor[(5, 8, 7), float32] */;
  (%153, %154, meta[relay.Constant][7] /* ty=Tensor[(20), float32] */, %155, %156)
}

def @func_9331(%var_9302: Tensor[(9, 6, 16), int32], %var_9303: Tensor[(9, 6, 16), int32]) -> (Tensor[(9, 6, 16), int8], Tensor[(9, 6, 16), bool]) {
  %157 = cast(%var_9302, dtype="int8") /* ty=Tensor[(9, 6, 16), int8] */;
  %158 = shape_of(%var_9303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %159 = cast(%var_9303, dtype="int8") /* ty=Tensor[(9, 6, 16), int8] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %161 = cast(%var_9303, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
  %162 = shape_of(%var_9302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %163 = cast(%var_9302, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %165 = greater_equal(%163, %164) /* ty=Tensor[(9, 6, 16), bool] */;
  %166 = cast(%165, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
  %167 = shape_of(%var_9302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(%var_9302, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %170 = logical_xor(%159, %160) /* ty=Tensor[(9, 6, 16), int8] */;
  %171 = equal(%168, %169) /* ty=Tensor[(9, 6, 16), bool] */;
  (%170, %171)
}

def @func_5791() -> Tensor[(4, 2, 6), float32] {
  %172 = @func_3594() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %172.0
}

def @func_8145() -> (Tensor[(4, 2, 6), float64],) {
  %173 = @func_6927() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %174 = %173.1;
  (%174,)
}

def @func_2207(%var_2177: Tensor[(15, 6, 10), float32]) -> (Tensor[(15, 6, 10), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64]) {
  %175 = cast(%var_2177, dtype="float32") /* ty=Tensor[(15, 6, 10), float32] */;
  %176 = @func_1957() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint16]) */;
  %177 = sqrt(%175) /* ty=Tensor[(15, 6, 10), float32] */;
  %178 = @func_1870() /* ty=Tensor[(4, 2, 6), float64] */;
  %179 = %176.1;
  (%177, %178, %179)
}

def @func_450(%var_395: Tensor[(9, 12, 3), bool], %var_396: Tensor[(9, 12, 3), bool]) -> (Tensor[(9, 12, 3), uint32], Tensor[(9, 12, 3), float32]) {
  %180 = cast(%var_395, dtype="float64") /* ty=Tensor[(9, 12, 3), float64] */;
  %181 = sqrt(%180) /* ty=Tensor[(9, 12, 3), float64] */;
  %182 = cast(%181, dtype="uint32") /* ty=Tensor[(9, 12, 3), uint32] */;
  %183 = shape_of(%var_395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%var_395, dtype="uint32") /* ty=Tensor[(9, 12, 3), uint32] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %186 = cast(%var_396, dtype="bool") /* ty=Tensor[(9, 12, 3), bool] */;
  %187 = shape_of(%var_395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%var_395, dtype="bool") /* ty=Tensor[(9, 12, 3), bool] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %190 = logical_or(%188, %189) /* ty=Tensor[(9, 12, 3), bool] */;
  %191 = cast(%190, dtype="float32") /* ty=Tensor[(9, 12, 3), float32] */;
  %192 = shape_of(%181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%181, dtype="float32") /* ty=Tensor[(9, 12, 3), float32] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %195 = power(%193, %194) /* ty=Tensor[(9, 12, 3), float32] */;
  %196 = cast(%195, dtype="float32") /* ty=Tensor[(9, 12, 3), float32] */;
  %197 = bitwise_and(%184, %185) /* ty=Tensor[(9, 12, 3), uint32] */;
  %198 = tan(%196) /* ty=Tensor[(9, 12, 3), float32] */;
  (%197, %198)
}

def @func_4832() -> Tensor[(4, 2, 6), float64] {
  %199 = @func_2696() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) */;
  %199.0
}

def @func_2600() -> Tensor[(4, 2, 6), float64] {
  %200 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %200.0
}

def @func_3356() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %201 = @func_3096() /* ty=(Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */;
  %202 = @func_2926() /* ty=Tensor[(4, 2, 6), float64] */;
  %203 = %201.2;
  (%202, %203)
}

def @func_9955(%var_9895: Tensor[(3, 300), float32], %var_9947: Tensor[(20, 1), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(15, 6, 10), float32], Tensor[(3, 300), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64], Tensor[(20, 1), float32], Tensor[(14, 1, 4), float32]) {
  %204 = @func_7660() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %205 = cast(%var_9895, dtype="float32") /* ty=Tensor[(3, 300), float32] */;
  %206 = reshape(%205, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), float32] */;
  %207 = @func_2207(%206) /* ty=(Tensor[(15, 6, 10), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64]) */;
  %208 = @func_3555() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %209 = cast(%var_9947, dtype="float32") /* ty=Tensor[(20, 1), float32] */;
  %210 = reshape(%209, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %211 = @func_3336(%210) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64], Tensor[(4, 2, 6), float64]) */;
  %212 = @func_7823() /* ty=(Tensor[(14, 1, 4), float32],) */;
  %213 = %212.0;
  %214 = cast(%213, dtype="float32") /* ty=Tensor[(14, 1, 4), float32] */;
  %215 = %204.0;
  %216 = %207.0;
  %217 = %208.0;
  %218 = @func_7796() /* ty=Tensor[(4, 2, 6), float64] */;
  %219 = %211.1;
  %220 = atanh(%214) /* ty=Tensor[(14, 1, 4), float32] */;
  (%215, %216, %var_9895, %217, %218, %219, %var_9947, %220)
}

def @func_11361() -> Tensor[(5, 2, 2), float64] {
  %221 = @func_9767() /* ty=(Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64]) */;
  %221.2
}

def @func_10382() -> (Tensor[(324), uint16],) {
  %222 = @func_7558() /* ty=Tensor[(324), uint16] */;
  (%222,)
}

def @func_10844() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) {
  %223 = @func_1979() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %224 = @func_5266() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %225 = @func_4622() /* ty=Tensor[(4, 2, 6), float64] */;
  %226 = %223.0;
  %227 = %224.0;
  (%225, %226, %227)
}

def @func_1844() -> (Tensor[(4, 2, 6), float64],) {
  %228 = @func_1722() /* ty=Tensor[(4, 2, 6), float64] */;
  (%228,)
}

def @func_8038() -> (Tensor[(8, 1, 2), float32], Tensor[(4, 2, 6), float64]) {
  %229 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 1, 2), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 2), float32] */;
  %230 = sqrt(%229) /* ty=Tensor[(8, 1, 2), float32] */;
  %231 = @func_2799() /* ty=Tensor[(4, 2, 6), float64] */;
  (%230, %231)
}

def @func_9142() -> Tensor[(4, 2, 6), uint64] {
  %232 = @func_5146() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */;
  %232.1
}

def @func_1779() -> Tensor[(4, 2, 6), float64] {
  @func_1722() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_6056() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %233 = @func_3395() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %234 = %233.1;
  %235 = @func_2926() /* ty=Tensor[(4, 2, 6), float64] */;
  (%234, %235)
}

def @func_8164(%var_8148: Tensor[(16, 16, 8), float32], %var_8158: Tensor[(715, 2), float32]) -> (Tensor[(16, 16, 8), float32], Tensor[(1430), float32], Tensor[(715, 2), float32], Tensor[(4, 2, 6), float64]) {
  %236 = cast(%var_8148, dtype="float32") /* ty=Tensor[(16, 16, 8), float32] */;
  %237 = cast(%var_8158, dtype="float32") /* ty=Tensor[(715, 2), float32] */;
  %238 = reshape(%237, newshape=[1430]) /* ty=Tensor[(1430), float32] */;
  %239 = @func_4668(%238) /* ty=(Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float32]) */;
  %240 = @func_3395() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %241 = asin(%236) /* ty=Tensor[(16, 16, 8), float32] */;
  %242 = %239.1;
  %243 = %240.1;
  (%241, %242, %var_8158, %243)
}

def @func_10897(%var_10877: Tensor[(14, 16, 12), int8]) -> (Tensor[(14, 16, 12), bool], Tensor[(4, 2, 6), float64]) {
  %244 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 16, 12), int8] */, dtype="bool") /* ty=Tensor[(14, 16, 12), bool] */;
  %245 = shape_of(%var_10877, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%var_10877, dtype="bool") /* ty=Tensor[(14, 16, 12), bool] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %248 = greater_equal(%246, %247) /* ty=Tensor[(14, 16, 12), bool] */;
  %249 = @func_2498() /* ty=Tensor[(4, 2, 6), float64] */;
  (%248, %249)
}

def @func_10648(%var_10630: Tensor[(20), float32]) -> (Tensor[(4, 2, 6), float32], Tensor[(675), float32], Tensor[(675), float32], Tensor[(14, 1, 4), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(20), float32], Tensor[(4, 2, 6), float64], Tensor[(7, ?, 11), uint32]) {
  %250 = @func_10283() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %251 = cast(meta[relay.Constant][11] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %252 = reshape(%251, newshape=[675]) /* ty=Tensor[(675), float32] */;
  %253 = @func_8116(%252) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(675), float32]) */;
  %254 = @func_7823() /* ty=(Tensor[(14, 1, 4), float32],) */;
  %255 = @func_7494() /* ty=(Tensor[(324), uint16], Tensor[(4, 2, 6), float64]) */;
  %256 = cast(%var_10630, dtype="float32") /* ty=Tensor[(20), float32] */;
  %257 = reshape(%256, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %258 = @func_7225(%257) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) */;
  %259 = cast(meta[relay.Constant][12] /* ty=Tensor[(7, 1, 11), float32] */, dtype="float32") /* ty=Tensor[(7, 1, 11), float32] */;
  %260 = cosh(%259) /* ty=Tensor[(7, 1, 11), float32] */;
  %261 = cast(%260, dtype="float32") /* ty=Tensor[(7, 1, 11), float32] */;
  %262 = cos(%261) /* ty=Tensor[(7, 1, 11), float32] */;
  %263 = cast(%262, dtype="float32") /* ty=Tensor[(7, 1, 11), float32] */;
  %264 = asinh(%263) /* ty=Tensor[(7, 1, 11), float32] */;
  %265 = cast(%264, dtype="int32") /* ty=Tensor[(7, 1, 11), int32] */;
  %266 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %267 = cast(%262, dtype="int32") /* ty=Tensor[(7, 1, 11), int32] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %269 = logical_xor(%267, %268) /* ty=Tensor[(7, ?, 11), int32] */;
  %270 = cast(%269, dtype="float32") /* ty=Tensor[(7, ?, 11), float32] */;
  %271 = log2(%270) /* ty=Tensor[(7, ?, 11), float32] */;
  %272 = cast(meta[relay.Constant][12] /* ty=Tensor[(7, 1, 11), float32] */, dtype="uint32") /* ty=Tensor[(7, 1, 11), uint32] */;
  %273 = shape_of(%271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %274 = cast(%271, dtype="uint32") /* ty=Tensor[(7, ?, 11), uint32] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %276 = %250.0;
  %277 = %253.2;
  %278 = %254.0;
  %279 = %255.0;
  %280 = %258.1;
  %281 = @func_4622() /* ty=Tensor[(4, 2, 6), float64] */;
  %282 = add(%274, %275) /* ty=Tensor[(7, ?, 11), uint32] */;
  (%276, %277, meta[relay.Constant][11] /* ty=Tensor[(675), float32] */, %278, %279, %280, %var_10630, %281, %282)
}

def @func_10197() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %283 = @func_5646() /* ty=(Tensor[(324), uint16], Tensor[(4, 2, 6), float64]) */;
  %284 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
  %285 = %283.1;
  (%284, %285)
}

def @func_2425() -> (Tensor[(4, 2, 6), float32],) {
  %286 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %287 = %286.0;
  %288 = cast(%287, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
  %289 = exp(%288) /* ty=Tensor[(4, 2, 6), float32] */;
  (%289,)
}

def @func_4319() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32]) {
  %290 = @func_3891() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %291 = @func_2703() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %292 = %291.0;
  %293 = cast(%292, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
  %294 = %290.0;
  %295 = asinh(%293) /* ty=Tensor[(4, 2, 6), float32] */;
  (%294, %295)
}

def @func_10227(%var_10205: Tensor[(900), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(900), float32], Tensor[(4, 2, 6), float64]) {
  %296 = cast(%var_10205, dtype="float32") /* ty=Tensor[(900), float32] */;
  %297 = reshape(%296, newshape=[9, 100]) /* ty=Tensor[(9, 100), float32] */;
  %298 = @func_5975(%297) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(9, 100), float32]) */;
  %299 = @func_1870() /* ty=Tensor[(4, 2, 6), float64] */;
  %300 = %298.1;
  %301 = @func_2600() /* ty=Tensor[(4, 2, 6), float64] */;
  (%299, %300, %var_10205, %301)
}

def @func_5497() -> Tensor[(4, 2, 6), float64] {
  @func_4832() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_5748() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %302 = @func_5146() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */;
  %303 = @func_3674() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) */;
  %304 = %302.0;
  %305 = %303.0;
  %306 = @func_2784() /* ty=Tensor[(4, 2, 6), float64] */;
  (%304, %305, %306)
}

def @func_5349() -> Tensor[(4, 2, 6), float64] {
  @func_2812() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_9514() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %307 = @func_2278() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %308 = %307.0;
  %309 = @func_4405() /* ty=Tensor[(4, 2, 6), float64] */;
  (%308, %309)
}

def @func_8116(%var_8114: Tensor[(675), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(675), float32]) {
  %310 = @func_3505() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %311 = cast(%var_8114, dtype="float32") /* ty=Tensor[(675), float32] */;
  %312 = reshape(%311, newshape=[675]) /* ty=Tensor[(675), float32] */;
  %313 = @func_7960(%312) /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(675), float64]) */;
  %314 = %310.0;
  %315 = %313.2;
  (%314, %315, %var_8114)
}

def @func_5975(%var_5964: Tensor[(9, 100), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(9, 100), float32]) {
  %316 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %317 = cast(%var_5964, dtype="float32") /* ty=Tensor[(9, 100), float32] */;
  %318 = reshape(%317, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), float32] */;
  %319 = @func_2207(%318) /* ty=(Tensor[(15, 6, 10), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64]) */;
  %320 = %316.0;
  %321 = %319.2;
  (%320, %321, %var_5964)
}

def @func_5266() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %322 = @func_3674() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) */;
  %323 = @func_3878() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */;
  %324 = %322.2;
  %325 = %323.0;
  (%324, %325)
}

def @func_754(%var_729: Tensor[(9, 5, 15), float32]) -> Tensor[(9, 5, 15), float32] {
  %326 = cast(%var_729, dtype="float32") /* ty=Tensor[(9, 5, 15), float32] */;
  tan(%326) /* ty=Tensor[(9, 5, 15), float32] */
}

def @func_4405() -> Tensor[(4, 2, 6), float64] {
  %327 = @func_2926() /* ty=Tensor[(4, 2, 6), float64] */;
  %328 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 2, 6), float64] */, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
  %329 = shape_of(%327, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%327, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%330, %331) /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_1870() -> Tensor[(4, 2, 6), float64] {
  %332 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %332.0
}

def @func_5557() -> (Tensor[(15, 3, 16), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %333 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 3, 16), int8] */, dtype="bool") /* ty=Tensor[(15, 3, 16), bool] */;
  %334 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(15, 3, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %335 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 3, 16), int8] */, dtype="bool") /* ty=Tensor[(15, 3, 16), bool] */;
  %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %337 = greater(%335, %336) /* ty=Tensor[(15, 3, 16), bool] */;
  %338 = cast(%337, dtype="float64") /* ty=Tensor[(15, 3, 16), float64] */;
  %339 = cast(%337, dtype="float32") /* ty=Tensor[(15, 3, 16), float32] */;
  %340 = @func_3674() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) */;
  %341 = @func_2703() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %342 = sin(%338) /* ty=Tensor[(15, 3, 16), float64] */;
  %343 = log(%339) /* ty=Tensor[(15, 3, 16), float32] */;
  %344 = %340.2;
  %345 = %341.0;
  (%342, %343, %344, %345)
}

def @func_1979() -> (Tensor[(4, 2, 6), float64],) {
  %346 = @func_1601() /* ty=Tensor[(4, 2, 6), float64] */;
  (%346,)
}

def @func_2799() -> Tensor[(4, 2, 6), float64] {
  @func_2784() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_3555() -> (Tensor[(4, 2, 6), float64],) {
  %347 = @func_1601() /* ty=Tensor[(4, 2, 6), float64] */;
  (%347,)
}

def @func_6927() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %348 = @func_6239() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %349 = %348.0;
  %350 = @func_1779() /* ty=Tensor[(4, 2, 6), float64] */;
  (%349, %350)
}

def @func_10332() -> Tensor[(324), uint16] {
  %351 = @func_9262() /* ty=(Tensor[(324), uint16],) */;
  %351.0
}

def @func_6400(%var_6387: Tensor[(1, 900), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(15, 6, 10), float32], Tensor[(1, 900), float32]) {
  %352 = @func_1979() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %353 = %352.0;
  %354 = cast(%353, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
  %355 = cast(%var_6387, dtype="float32") /* ty=Tensor[(1, 900), float32] */;
  %356 = reshape(%355, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), float32] */;
  %357 = @func_2207(%356) /* ty=(Tensor[(15, 6, 10), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64]) */;
  %358 = @func_6091() /* ty=Tensor[(4, 2, 6), float64] */;
  %359 = cos(%354) /* ty=Tensor[(4, 2, 6), float64] */;
  %360 = %357.0;
  (%358, %359, %360, %var_6387)
}

def @func_11008(%var_10927: Tensor[(5, 13, 11), float32], %var_10988: Tensor[(5, 13, 11), float64]) -> (Tensor[(5, 13, 11), float32], Tensor[(4, 2, 6), float32], Tensor[(675), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(5, 13, 11), uint32]) {
  %361 = cast(%var_10927, dtype="float32") /* ty=Tensor[(5, 13, 11), float32] */;
  %362 = cast(meta[relay.Constant][16] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %363 = reshape(%362, newshape=[675]) /* ty=Tensor[(675), float32] */;
  %364 = @func_8116(%363) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(675), float32]) */;
  %365 = @func_4319() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32]) */;
  %366 = @func_3594() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %367 = cast(%var_10927, dtype="float64") /* ty=Tensor[(5, 13, 11), float64] */;
  %368 = tan(%367) /* ty=Tensor[(5, 13, 11), float64] */;
  %369 = cast(%368, dtype="float64") /* ty=Tensor[(5, 13, 11), float64] */;
  %370 = atan(%369) /* ty=Tensor[(5, 13, 11), float64] */;
  %371 = cast(%var_10988, dtype="uint32") /* ty=Tensor[(5, 13, 11), uint32] */;
  %372 = shape_of(%370, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%370, dtype="uint32") /* ty=Tensor[(5, 13, 11), uint32] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %375 = sin(%361) /* ty=Tensor[(5, 13, 11), float32] */;
  %376 = %364.1;
  %377 = %365.0;
  %378 = %366.0;
  %379 = @func_2799() /* ty=Tensor[(4, 2, 6), float64] */;
  %380 = bitwise_xor(%373, %374) /* ty=Tensor[(5, 13, 11), uint32] */;
  (%375, %376, meta[relay.Constant][16] /* ty=Tensor[(675), float32] */, %377, %378, %379, %380)
}

def @func_11192(%var_11187: Tensor[(1760), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32], Tensor[(4, 2, 6), float64], Tensor[(16, 10, 11), float32], Tensor[(1760), float32], Tensor[(4, 2, 6), float64]) {
  %381 = @func_4763() /* ty=(Tensor[(9, 3, 12), float64], Tensor[(2, 4, 16), int8], Tensor[(9, 5, 15), float32], Tensor[(715, 2), float32], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32], Tensor[(128), uint64]) */;
  %382 = cast(%var_11187, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %383 = reshape(%382, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
  %384 = @func_7905() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %385 = @func_1722() /* ty=Tensor[(4, 2, 6), float64] */;
  %386 = %381.5;
  %387 = @func_9429() /* ty=Tensor[(4, 2, 6), float64] */;
  %388 = @func_4206(%383) /* ty=Tensor[(16, 10, 11), float32] */;
  %389 = %384.0;
  (%385, %386, %387, %388, %var_11187, %389)
}

def @func_8657() -> Tensor[(9, 5, 15), float32] {
  %390 = @func_4763() /* ty=(Tensor[(9, 3, 12), float64], Tensor[(2, 4, 16), int8], Tensor[(9, 5, 15), float32], Tensor[(715, 2), float32], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32], Tensor[(128), uint64]) */;
  %390.2
}

def @func_8505(%var_8470: Tensor[(1792), float64]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(1430, ?), float32], Tensor[(16, 7, 16), float64], Tensor[(324, 1), uint16], Tensor[(14, ?, 4), float32], Tensor[(4, 2, 6), float64], Tensor[(1430, ?), float32], Tensor[(1430, 1792), bool]) {
  %391 = @func_4120() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %392 = cast(meta[relay.Constant][17] /* ty=Tensor[(1430, 1), float32] */, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %393 = reshape(%392, newshape=[1430]) /* ty=Tensor[(1430), float32] */;
  %394 = @func_4668(%393) /* ty=(Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float32]) */;
  %395 = %394.1;
  %396 = cast(%395, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %397 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(1430, 1), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %398 = cast(meta[relay.Constant][17] /* ty=Tensor[(1430, 1), float32] */, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %400 = cast(%var_8470, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %401 = cast(%var_8470, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %402 = cast(meta[relay.Constant][18] /* ty=Tensor[(324, 1), uint16] */, dtype="uint16") /* ty=Tensor[(324, 1), uint16] */;
  %403 = reshape(%400, newshape=[16, 7, 16]) /* ty=Tensor[(16, 7, 16), float64] */;
  %404 = reshape(%401, newshape=[16, 7, 16]) /* ty=Tensor[(16, 7, 16), float64] */;
  %405 = reshape(%402, newshape=[324]) /* ty=Tensor[(324), uint16] */;
  %406 = @func_6526(%403, %404, %405) /* ty=(Tensor[(16, 7, 16), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(900), float32]) */;
  %407 = @func_8257() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(14, ?, 4), float32], Tensor[(14, ?, 4), uint16], Tensor[(4, 2, 6), float64]) */;
  %408 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %409 = cast(meta[relay.Constant][17] /* ty=Tensor[(1430, 1), float32] */, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %410 = exp(%409) /* ty=Tensor[(1430, 1), float32] */;
  %411 = cast(meta[relay.Constant][17] /* ty=Tensor[(1430, 1), float32] */, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %412 = shape_of(%410, dtype="int32") /* ty=Tensor[(2), int32] */;
  %413 = cast(%410, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %415 = cast(%410, dtype="bool") /* ty=Tensor[(1430, 1), bool] */;
  %416 = cast(%var_8470, dtype="bool") /* ty=Tensor[(1792), bool] */;
  %417 = %391.0;
  %418 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
  %419 = floor_mod(%398, %399) /* ty=Tensor[(1430, ?), float32] */;
  %420 = %406.0;
  %421 = %407.4;
  %422 = %408.0;
  %423 = floor_divide(%413, %414) /* ty=Tensor[(1430, ?), float32] */;
  %424 = less(%415, %416) /* ty=Tensor[(1430, 1792), bool] */;
  (%417, %418, %419, %420, meta[relay.Constant][18] /* ty=Tensor[(324, 1), uint16] */, %421, %422, %423, %424)
}

def @func_7225(%var_7200: Tensor[(20), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) {
  %425 = @func_4195() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %426 = cast(%var_7200, dtype="float32") /* ty=Tensor[(20), float32] */;
  %427 = reshape(%426, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float32] */;
  %428 = @func_808(%427) /* ty=(Tensor[(5, 2, 2), float32],) */;
  %429 = @func_5497() /* ty=Tensor[(4, 2, 6), float64] */;
  %430 = %425.1;
  %431 = %428.0;
  (%429, %430, %431, %var_7200)
}

def @func_1601() -> Tensor[(4, 2, 6), float64] {
  %432 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 2, 6), float64] */, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
  sqrt(%432) /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_9208(%var_9196: Tensor[(1, 900), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(1, 900), float32], Tensor[(9, 3, 12), float64]) {
  %433 = @func_5146() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */;
  %434 = @func_5646() /* ty=(Tensor[(324), uint16], Tensor[(4, 2, 6), float64]) */;
  %435 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %436 = cast(%var_9196, dtype="float32") /* ty=Tensor[(1, 900), float32] */;
  %437 = reshape(%436, newshape=[1, 900]) /* ty=Tensor[(1, 900), float32] */;
  %438 = @func_6400(%437) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(15, 6, 10), float32], Tensor[(1, 900), float32]) */;
  %439 = %434.0;
  %440 = cast(%439, dtype="uint16") /* ty=Tensor[(324), uint16] */;
  %441 = reshape(%440, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint16] */;
  %442 = @func_1060(%441) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(9, 5, 15), float32], Tensor[(675, 1), float32]) */;
  %443 = @func_5497() /* ty=Tensor[(4, 2, 6), float64] */;
  %444 = %433.0;
  %445 = %435.0;
  %446 = %438.1;
  %447 = %442.0;
  (%443, %444, %439, %445, %446, %var_9196, %447)
}

def @func_3777(%var_3730: Tensor[(1, 10, 12), float64], %var_3751: Tensor[(225, 3), float32]) -> (Tensor[(6, 10, 12), float64], Tensor[(4, 2, 6), float32], Tensor[(225, 3), float32], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64]) {
  %448 = cast(%var_3730, dtype="float64") /* ty=Tensor[(1, 10, 12), float64] */;
  %449 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 10, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 12), float64] */;
  %450 = cast(%var_3751, dtype="float32") /* ty=Tensor[(225, 3), float32] */;
  %451 = reshape(%450, newshape=[675]) /* ty=Tensor[(675), float32] */;
  %452 = @func_3045(%451) /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(675), float32]) */;
  %453 = @func_3166() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64]) */;
  %454 = @func_3010() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %455 = floor_divide(%448, %449) /* ty=Tensor[(6, 10, 12), float64] */;
  %456 = %452.0;
  %457 = %453.1;
  %458 = %454.0;
  (%455, %456, %var_3751, %457, %458)
}

def @func_6783(%var_6756: Tensor[(9, 6, 12), float32], %var_6757: Tensor[(9, 6, 12), float32]) -> (Tensor[(9, 6, 12), float32], Tensor[(9, 6, 12), float64], Tensor[(9, 6, 12), float32]) {
  %459 = cast(%var_6757, dtype="float32") /* ty=Tensor[(9, 6, 12), float32] */;
  %460 = shape_of(%var_6756, dtype="int32") /* ty=Tensor[(3), int32] */;
  %461 = cast(%var_6756, dtype="float32") /* ty=Tensor[(9, 6, 12), float32] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %463 = cast(%var_6756, dtype="float64") /* ty=Tensor[(9, 6, 12), float64] */;
  %464 = shape_of(%var_6757, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(%var_6757, dtype="float64") /* ty=Tensor[(9, 6, 12), float64] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %467 = cast(%var_6756, dtype="float32") /* ty=Tensor[(9, 6, 12), float32] */;
  %468 = mod(%461, %462) /* ty=Tensor[(9, 6, 12), float32] */;
  %469 = power(%465, %466) /* ty=Tensor[(9, 6, 12), float64] */;
  %470 = atan(%467) /* ty=Tensor[(9, 6, 12), float32] */;
  (%468, %469, %470)
}

def @main(%var_11804: Tensor[(16, 7, 1), float64]) -> (Tensor[(16, 7, 1), float64],) {
  %471 = cast(%var_11804, dtype="float64") /* ty=Tensor[(16, 7, 1), float64] */;
  %472 = atan(%471) /* ty=Tensor[(16, 7, 1), float64] */;
  (%472,)
}

def @func_10287() -> Tensor[(4, 2, 6), float64] {
  @func_1601() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_4334() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %473 = @func_3674() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) */;
  %474 = @func_2784() /* ty=Tensor[(4, 2, 6), float64] */;
  %475 = %473.0;
  (%474, %475)
}

def @func_6857() -> (Tensor[(4, 2, 6), float64], Tensor[(16, 10, 11), float32], Tensor[(1760), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %476 = @func_4195() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %477 = cast(meta[relay.Constant][21] /* ty=Tensor[(1760), float32] */, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %478 = reshape(%477, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
  %479 = @func_6056() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %480 = %476.1;
  %481 = @func_4206(%478) /* ty=Tensor[(16, 10, 11), float32] */;
  %482 = %479.1;
  %483 = @func_5497() /* ty=Tensor[(4, 2, 6), float64] */;
  (%480, %481, meta[relay.Constant][21] /* ty=Tensor[(1760), float32] */, %482, %483)
}

def @func_2852() -> Tensor[(4, 2, 6), float64] {
  @func_1601() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_3395() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %484 = @func_2425() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %485 = @func_3010() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %486 = %484.0;
  %487 = %485.0;
  (%486, %487)
}

def @func_11337(%var_11308: Tensor[(1430), float32], %var_11324: Tensor[(9, 100), float32]) -> (Tensor[(11, 13, 10), int64], Tensor[(1430), float32], Tensor[(8, 4, 3), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 100), float32], Tensor[(14, 1, 4), float32]) {
  %488 = cast(%var_11308, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %489 = reshape(%488, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), float32] */;
  %490 = @func_921(%489) /* ty=(Tensor[(9, 5, 15), float32], Tensor[(675), float32], Tensor[(11, 13, 10), int64]) */;
  %491 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 4, 3), float32] */, dtype="float32") /* ty=Tensor[(8, 4, 3), float32] */;
  %492 = asinh(%491) /* ty=Tensor[(8, 4, 3), float32] */;
  %493 = cast(%492, dtype="float32") /* ty=Tensor[(8, 4, 3), float32] */;
  %494 = cast(%var_11324, dtype="float32") /* ty=Tensor[(9, 100), float32] */;
  %495 = reshape(%494, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %496 = @func_10227(%495) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(900), float32], Tensor[(4, 2, 6), float64]) */;
  %497 = @func_7823() /* ty=(Tensor[(14, 1, 4), float32],) */;
  %498 = %490.2;
  %499 = sinh(%493) /* ty=Tensor[(8, 4, 3), float32] */;
  %500 = %496.3;
  %501 = %497.0;
  (%498, %var_11308, %499, %500, %var_11324, %501)
}

def @func_9099(%var_9068: Tensor[(5, 12, 15), int16], %var_9069: Tensor[(5, 12, 15), int16]) -> (Tensor[(5, 12, 15), int16], Tensor[(5, 12, 15), float64]) {
  %502 = cast(%var_9069, dtype="int16") /* ty=Tensor[(5, 12, 15), int16] */;
  %503 = shape_of(%var_9068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %504 = cast(%var_9068, dtype="int16") /* ty=Tensor[(5, 12, 15), int16] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %506 = cast(%var_9068, dtype="float64") /* ty=Tensor[(5, 12, 15), float64] */;
  %507 = minimum(%504, %505) /* ty=Tensor[(5, 12, 15), int16] */;
  %508 = cos(%506) /* ty=Tensor[(5, 12, 15), float64] */;
  (%507, %508)
}

def @func_4195() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %509 = @func_2839() /* ty=Tensor[(4, 2, 6), float64] */;
  %510 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 2, 6), float64] */, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
  %511 = shape_of(%509, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%509, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %514 = @func_2498() /* ty=Tensor[(4, 2, 6), float64] */;
  %515 = floor_mod(%512, %513) /* ty=Tensor[(4, 2, 6), float64] */;
  (%514, %515)
}

def @func_7796() -> Tensor[(4, 2, 6), float64] {
  @func_1870() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_6324(%var_6310: Tensor[(1430), float32]) -> (Tensor[(4, 2, 6), float32], Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float64]) {
  %516 = cast(%var_6310, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %517 = reshape(%516, newshape=[1430]) /* ty=Tensor[(1430), float32] */;
  %518 = @func_4668(%517) /* ty=(Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float32]) */;
  %519 = @func_5791() /* ty=Tensor[(4, 2, 6), float32] */;
  %520 = %518.0;
  %521 = @func_2839() /* ty=Tensor[(4, 2, 6), float64] */;
  (%519, %520, %var_6310, %521)
}

def @func_10283() -> (Tensor[(4, 2, 6), float32],) {
  %522 = @func_5383() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %523 = %522.0;
  (%523,)
}

def @func_2329(%var_2318: Tensor[(324), uint16]) -> (Tensor[(675, 1), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), float64]) {
  %524 = cast(%var_2318, dtype="uint16") /* ty=Tensor[(324), uint16] */;
  %525 = reshape(%524, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint16] */;
  %526 = @func_1060(%525) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(9, 5, 15), float32], Tensor[(675, 1), float32]) */;
  %527 = @func_1957() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint16]) */;
  %528 = %527.0;
  %529 = cast(%528, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
  %530 = rsqrt(%529) /* ty=Tensor[(4, 2, 6), float64] */;
  %531 = @func_1801() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %532 = %531.0;
  %533 = cast(%532, dtype="bool") /* ty=Tensor[(4, 2, 6), bool] */;
  %534 = shape_of(%530, dtype="int32") /* ty=Tensor[(3), int32] */;
  %535 = cast(%530, dtype="bool") /* ty=Tensor[(4, 2, 6), bool] */;
  %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %537 = %526.2;
  %538 = logical_or(%535, %536) /* ty=Tensor[(4, 2, 6), bool] */;
  %539 = @func_1870() /* ty=Tensor[(4, 2, 6), float64] */;
  (%537, %var_2318, %538, %539)
}

def @func_6475() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(1430), float32], Tensor[(20), float32], Tensor[(5, 2, 2), float64]) {
  %540 = @func_5040() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %541 = cast(meta[relay.Constant][24] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %542 = reshape(%541, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %543 = @func_4905(%542) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(675), float32], Tensor[(1430), float32], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) */;
  %544 = cast(meta[relay.Constant][24] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %545 = reshape(%544, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %546 = @func_3336(%545) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64], Tensor[(4, 2, 6), float64]) */;
  %547 = %540.2;
  %548 = @func_2799() /* ty=Tensor[(4, 2, 6), float64] */;
  %549 = %543.4;
  %550 = %546.1;
  (%547, %548, %549, meta[relay.Constant][24] /* ty=Tensor[(20), float32] */, %550)
}

def @func_3594() -> (Tensor[(4, 2, 6), float32],) {
  %551 = @func_2812() /* ty=Tensor[(4, 2, 6), float64] */;
  %552 = cast(%551, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
  %553 = log(%552) /* ty=Tensor[(4, 2, 6), float64] */;
  %554 = cast(%553, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
  %555 = erf(%554) /* ty=Tensor[(4, 2, 6), float32] */;
  (%555,)
}

def @func_5115() -> Tensor[(4, 2, 6), float64] {
  %556 = @func_4334() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %556.0
}

def @func_4206(%var_4199: Tensor[(16, 10, 11), float32]) -> Tensor[(16, 10, 11), float32] {
  %557 = cast(%var_4199, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  acosh(%557) /* ty=Tensor[(16, 10, 11), float32] */
}

def @func_6592() -> (Tensor[(4, 2, 6), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %558 = @func_3096() /* ty=(Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */;
  %559 = @func_5557() /* ty=(Tensor[(15, 3, 16), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %560 = @func_2703() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %561 = @func_3096() /* ty=(Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */;
  %562 = %558.2;
  %563 = %559.1;
  %564 = %560.0;
  %565 = %561.0;
  %566 = @func_2799() /* ty=Tensor[(4, 2, 6), float64] */;
  %567 = @func_4832() /* ty=Tensor[(4, 2, 6), float64] */;
  %568 = @func_1870() /* ty=Tensor[(4, 2, 6), float64] */;
  (%562, %563, %564, %565, %566, %567, %568)
}

def @func_7156(%var_7152: Tensor[(128), int8]) -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(2, 4, 16), int8], Tensor[(128), int8]) {
  %569 = @func_2425() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %570 = @func_4195() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %571 = @func_7034() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %572 = cast(%var_7152, dtype="int8") /* ty=Tensor[(128), int8] */;
  %573 = cast(%var_7152, dtype="int8") /* ty=Tensor[(128), int8] */;
  %574 = reshape(%572, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), int8] */;
  %575 = reshape(%573, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), int8] */;
  %576 = %569.0;
  %577 = %570.0;
  %578 = %571.0;
  %579 = @func_4097(%574, %575) /* ty=Tensor[(2, 4, 16), int8] */;
  (%576, %577, %578, %579, %var_7152)
}

def @func_11535() -> Tensor[(4, 2, 6), int32] {
  %580 = @func_4469() /* ty=(Tensor[(4, 2, 6), int32],) */;
  %580.0
}

def @func_7236() -> Tensor[(324), uint16] {
  %581 = @func_3878() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */;
  %581.1
}

def @func_7816(%var_7811: Tensor[(3, 108), uint16]) -> (Tensor[(3, 108), bool],) {
  %582 = @func_2696() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) */;
  %583 = %582.2;
  %584 = cast(%var_7811, dtype="bool") /* ty=Tensor[(3, 108), bool] */;
  %585 = shape_of(%583, dtype="int32") /* ty=Tensor[(2), int32] */;
  %586 = cast(%583, dtype="bool") /* ty=Tensor[(3, 108), bool] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %588 = logical_and(%586, %587) /* ty=Tensor[(3, 108), bool] */;
  (%588,)
}

def @func_9767() -> (Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64]) {
  %589 = @func_9262() /* ty=(Tensor[(324), uint16],) */;
  %590 = @func_5179() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %591 = @func_6475() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(1430), float32], Tensor[(20), float32], Tensor[(5, 2, 2), float64]) */;
  %592 = %589.0;
  %593 = %590.0;
  %594 = %591.4;
  (%592, %593, %594)
}

def @func_3990() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool]) {
  %595 = @func_3555() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %596 = %595.0;
  %597 = cast(%596, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
  %598 = reshape(%597, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float64] */;
  %599 = @func_3217(%598) /* ty=(Tensor[(9, 3, 12), float32], Tensor[(9, 3, 12), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool]) */;
  %600 = %599.3;
  (%596, %600)
}

def @func_7283() -> (Tensor[(4, 2, 6), float64],) {
  %601 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %602 = %601.0;
  (%602,)
}

def @func_7558() -> Tensor[(324), uint16] {
  @func_4499() /* ty=Tensor[(324), uint16] */
}

def @func_6903() -> Tensor[(4, 2, 6), float64] {
  @func_5497() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_11095() -> (Tensor[(324), uint16],) {
  %603 = @func_3878() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */;
  %604 = %603.1;
  (%604,)
}

def @func_11169() -> Tensor[(4, 2, 6), float64] {
  %605 = @func_9468() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %605.0
}

def @func_10543() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %606 = @func_8085() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %607 = %606.1;
  %608 = @func_9276() /* ty=Tensor[(4, 2, 6), float64] */;
  (%607, %608)
}

def @func_7660() -> (Tensor[(4, 2, 6), float64],) {
  %609 = @func_3878() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */;
  %610 = %609.0;
  (%610,)
}

def @func_4622() -> Tensor[(4, 2, 6), float64] {
  @func_2839() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_6091() -> Tensor[(4, 2, 6), float64] {
  %611 = @func_3010() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %611.1
}

def @func_7674() -> Tensor[(4, 2, 6), float64] {
  %612 = @func_2703() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %612.0
}

def @func_5646() -> (Tensor[(324), uint16], Tensor[(4, 2, 6), float64]) {
  %613 = @func_5127() /* ty=(Tensor[(324), uint16],) */;
  %614 = %613.0;
  %615 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
  (%614, %615)
}

def @func_9262() -> (Tensor[(324), uint16],) {
  %616 = @func_3878() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */;
  %617 = %616.1;
  (%617,)
}

def @func_5718() -> (Tensor[(4, 2, 6), float64],) {
  %618 = @func_5349() /* ty=Tensor[(4, 2, 6), float64] */;
  (%618,)
}

def @func_9867() -> (Tensor[(4, 2, 6), float64],) {
  %619 = @func_2852() /* ty=Tensor[(4, 2, 6), float64] */;
  (%619,)
}

def @func_10734() -> Tensor[(4, 2, 6), float64] {
  @func_2839() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_7980() -> Tensor[(4, 2, 6), float64] {
  %620 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %620.0
}

def @func_1801() -> (Tensor[(4, 2, 6), float64],) {
  %621 = @func_1779() /* ty=Tensor[(4, 2, 6), float64] */;
  (%621,)
}

def @func_3045(%var_3041: Tensor[(675), float32]) -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(675), float32]) {
  %622 = @func_2600() /* ty=Tensor[(4, 2, 6), float64] */;
  %623 = cast(%622, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
  %624 = @func_1801() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %625 = cast(%var_3041, dtype="float32") /* ty=Tensor[(675), float32] */;
  %626 = reshape(%625, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), float32] */;
  %627 = tan(%623) /* ty=Tensor[(4, 2, 6), float32] */;
  %628 = %624.0;
  %629 = @func_754(%626) /* ty=Tensor[(9, 5, 15), float32] */;
  (%627, %628, %629, %var_3041)
}

def @func_5146() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) {
  %630 = @func_4120() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %631 = %630.0;
  %632 = cast(%631, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
  %633 = reshape(%632, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float32] */;
  %634 = @func_1928(%633) /* ty=(Tensor[(4, 2, 6), uint64], Tensor[(4, 2, 6), uint16]) */;
  %635 = %634.0;
  (%631, %635)
}

def @func_7759() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %636 = @func_6239() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %637 = %636.0;
  %638 = @func_2799() /* ty=Tensor[(4, 2, 6), float64] */;
  %639 = @func_2498() /* ty=Tensor[(4, 2, 6), float64] */;
  (%637, %638, %639)
}

def @func_11679() -> (Tensor[(4, 2, 6), float64], Tensor[(900), float32], Tensor[(900), float32]) {
  %640 = cast(meta[relay.Constant][25] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %641 = reshape(%640, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %642 = @func_10227(%641) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(900), float32], Tensor[(4, 2, 6), float64]) */;
  %643 = @func_6091() /* ty=Tensor[(4, 2, 6), float64] */;
  %644 = %642.2;
  (%643, %644, meta[relay.Constant][25] /* ty=Tensor[(900), float32] */)
}

def @func_2784() -> Tensor[(4, 2, 6), float64] {
  @func_1722() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_9635() -> Tensor[(8, 1, 2), float32] {
  %645 = @func_8038() /* ty=(Tensor[(8, 1, 2), float32], Tensor[(4, 2, 6), float64]) */;
  %645.0
}

def @func_3010() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %646 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %647 = @func_1979() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %648 = %646.0;
  %649 = %647.0;
  (%648, %649)
}

def @func_1060(%var_1008: Tensor[(9, 3, 12), uint16]) -> (Tensor[(9, 3, 12), float64], Tensor[(9, 5, 15), float32], Tensor[(675, 1), float32]) {
  %650 = cast(meta[relay.Constant][26] /* ty=Tensor[(9, 3, 12), uint16] */, dtype="bool") /* ty=Tensor[(9, 3, 12), bool] */;
  %651 = shape_of(%var_1008, dtype="int32") /* ty=Tensor[(3), int32] */;
  %652 = cast(%var_1008, dtype="bool") /* ty=Tensor[(9, 3, 12), bool] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %654 = greater(%652, %653) /* ty=Tensor[(9, 3, 12), bool] */;
  %655 = cast(%654, dtype="float64") /* ty=Tensor[(9, 3, 12), float64] */;
  %656 = cast(meta[relay.Constant][27] /* ty=Tensor[(675, 1), float32] */, dtype="float32") /* ty=Tensor[(675, 1), float32] */;
  %657 = reshape(%656, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), float32] */;
  %658 = cast(meta[relay.Constant][27] /* ty=Tensor[(675, 1), float32] */, dtype="float32") /* ty=Tensor[(675, 1), float32] */;
  %659 = atanh(%655) /* ty=Tensor[(9, 3, 12), float64] */;
  %660 = @func_754(%657) /* ty=Tensor[(9, 5, 15), float32] */;
  %661 = acosh(%658) /* ty=Tensor[(675, 1), float32] */;
  (%659, %660, %661)
}

def @func_8526() -> Tensor[(4, 2, 6), float64] {
  @func_6091() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_6633() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %662 = @func_3555() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %663 = %662.0;
  %664 = @func_5349() /* ty=Tensor[(4, 2, 6), float64] */;
  (%663, %664)
}

def @func_9276() -> Tensor[(4, 2, 6), float64] {
  @func_2784() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_9429() -> Tensor[(4, 2, 6), float64] {
  %665 = @func_3555() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %665.0
}

def @func_1957() -> (Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint16]) {
  %666 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %667 = cast(meta[relay.Constant][28] /* ty=Tensor[(324), uint16] */, dtype="uint16") /* ty=Tensor[(324), uint16] */;
  %668 = reshape(%667, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint16] */;
  %669 = @func_1060(%668) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(9, 5, 15), float32], Tensor[(675, 1), float32]) */;
  %670 = %666.0;
  %671 = %669.0;
  (%670, %671, meta[relay.Constant][28] /* ty=Tensor[(324), uint16] */)
}

def @func_8899(%var_8843: Tensor[(13, 16, 16), float32], %var_8850: Tensor[(324), uint16]) -> (Tensor[(13, 16, 16), float32], Tensor[(4, 2, 6), float64], Tensor[(900), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(1792), float32]) {
  %672 = cast(%var_8843, dtype="float32") /* ty=Tensor[(13, 16, 16), float32] */;
  %673 = @func_5748() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %674 = cast(meta[relay.Constant][29] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %675 = cast(meta[relay.Constant][29] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %676 = cast(%var_8850, dtype="uint16") /* ty=Tensor[(324), uint16] */;
  %677 = reshape(%674, newshape=[16, 7, 16]) /* ty=Tensor[(16, 7, 16), float64] */;
  %678 = reshape(%675, newshape=[16, 7, 16]) /* ty=Tensor[(16, 7, 16), float64] */;
  %679 = reshape(%676, newshape=[324]) /* ty=Tensor[(324), uint16] */;
  %680 = @func_6526(%677, %678, %679) /* ty=(Tensor[(16, 7, 16), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(900), float32]) */;
  %681 = cast(meta[relay.Constant][30] /* ty=Tensor[(1792), float64] */, dtype="bool") /* ty=Tensor[(1792), bool] */;
  %682 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(1792), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %683 = cast(meta[relay.Constant][29] /* ty=Tensor[(1792), float64] */, dtype="bool") /* ty=Tensor[(1792), bool] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?), bool] */;
  %685 = greater(%683, %684) /* ty=Tensor[(1792), bool] */;
  %686 = cast(%685, dtype="float32") /* ty=Tensor[(1792), float32] */;
  %687 = rsqrt(%672) /* ty=Tensor[(13, 16, 16), float32] */;
  %688 = %673.1;
  %689 = %680.6;
  %690 = @func_7980() /* ty=Tensor[(4, 2, 6), float64] */;
  %691 = erf(%686) /* ty=Tensor[(1792), float32] */;
  (%687, %688, %689, %var_8850, %690, %691)
}

def @func_8713() -> (Tensor[(5, 2, 14), float64], Tensor[(15, 3, 16), float32]) {
  %692 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 2, 14), float64] */, dtype="float64") /* ty=Tensor[(5, 2, 14), float64] */;
  %693 = @func_5557() /* ty=(Tensor[(15, 3, 16), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %694 = tan(%692) /* ty=Tensor[(5, 2, 14), float64] */;
  %695 = %693.1;
  (%694, %695)
}

def @func_8016() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %696 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %697 = @func_4405() /* ty=Tensor[(4, 2, 6), float64] */;
  %698 = %696.0;
  (%697, %698)
}

def @func_8627() -> (Tensor[(4, 2, 6), float64], Tensor[(20), float32], Tensor[(4, 2, 6), float64]) {
  %699 = @func_8016() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %700 = @func_6475() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(1430), float32], Tensor[(20), float32], Tensor[(5, 2, 2), float64]) */;
  %701 = @func_4120() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %702 = %699.1;
  %703 = %700.3;
  %704 = %701.0;
  (%702, %703, %704)
}

def @func_7823() -> (Tensor[(14, 1, 4), float32],) {
  %705 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 1, 4), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 4), float32] */;
  %706 = acosh(%705) /* ty=Tensor[(14, 1, 4), float32] */;
  (%706,)
}

def @func_9620() -> (Tensor[(4, 2, 6), float64],) {
  %707 = @func_5718() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %708 = %707.0;
  (%708,)
}

def @func_4120() -> (Tensor[(4, 2, 6), float64],) {
  %709 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
  (%709,)
}

def @func_11765() -> (Tensor[(4, 2, 6), float32],) {
  %710 = @func_5266() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %711 = %710.0;
  (%711,)
}

def @func_5762() -> (Tensor[(4, 2, 6), float64],) {
  %712 = @func_3166() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64]) */;
  %713 = %712.2;
  (%713,)
}

def @func_1722() -> Tensor[(4, 2, 6), float64] {
  @func_1601() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_6698() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %714 = @func_5040() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %715 = @func_2425() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %716 = %714.2;
  %717 = %715.0;
  %718 = @func_5349() /* ty=Tensor[(4, 2, 6), float64] */;
  (%716, %717, %718)
}

def @func_6721() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %719 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %720 = %719.0;
  %721 = @func_2852() /* ty=Tensor[(4, 2, 6), float64] */;
  (%720, %721)
}

def @func_9017() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %722 = @func_6698() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %723 = %722.1;
  %724 = @func_7674() /* ty=Tensor[(4, 2, 6), float64] */;
  (%723, %724)
}

def @func_9468() -> (Tensor[(4, 2, 6), float64],) {
  %725 = @func_8257() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(14, ?, 4), float32], Tensor[(14, ?, 4), uint16], Tensor[(4, 2, 6), float64]) */;
  %726 = %725.3;
  (%726,)
}

def @func_10392() -> (Tensor[(4, 2, 6), float64],) {
  %727 = @func_5697() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32]) */;
  %728 = %727.1;
  (%728,)
}

def @func_11790() -> Tensor[(4, 2, 6), float64] {
  @func_11405() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_5040() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %729 = @func_2703() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %730 = @func_3166() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64]) */;
  %731 = @func_3505() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %732 = %729.0;
  %733 = @func_2498() /* ty=Tensor[(4, 2, 6), float64] */;
  %734 = %730.0;
  %735 = %731.0;
  (%732, %733, %734, %735)
}

def @func_9546() -> (Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) {
  %736 = @func_2703() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %737 = %736.0;
  %738 = @func_7558() /* ty=Tensor[(324), uint16] */;
  (%737, %738)
}

def @func_4668(%var_4655: Tensor[(1430), float32]) -> (Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float32]) {
  %739 = cast(%var_4655, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %740 = reshape(%739, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), float32] */;
  %741 = @func_921(%740) /* ty=(Tensor[(9, 5, 15), float32], Tensor[(675), float32], Tensor[(11, 13, 10), int64]) */;
  %742 = @func_1870() /* ty=Tensor[(4, 2, 6), float64] */;
  %743 = cast(%742, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
  %744 = %741.1;
  %745 = sigmoid(%743) /* ty=Tensor[(4, 2, 6), float32] */;
  (%744, %var_4655, %745)
}

def @func_2498() -> Tensor[(4, 2, 6), float64] {
  %746 = @func_2278() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %746.1
}

def @func_3166() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64]) {
  %747 = @func_2278() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %748 = %747.0;
  %749 = cast(%748, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
  %750 = reshape(%749, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float32] */;
  %751 = @func_1928(%750) /* ty=(Tensor[(4, 2, 6), uint64], Tensor[(4, 2, 6), uint16]) */;
  %752 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %753 = %751.1;
  %754 = %752.0;
  (%748, %753, %754)
}

def @func_4644() -> Tensor[(4, 2, 6), float64] {
  @func_2498() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_7494() -> (Tensor[(324), uint16], Tensor[(4, 2, 6), float64]) {
  %755 = @func_5179() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %756 = @func_4499() /* ty=Tensor[(324), uint16] */;
  %757 = %755.1;
  (%756, %757)
}

def @func_11260() -> Tensor[(4, 2, 6), float64] {
  @func_4644() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_921(%var_857: Tensor[(11, 13, 10), float32]) -> (Tensor[(9, 5, 15), float32], Tensor[(675), float32], Tensor[(11, 13, 10), int64]) {
  %758 = cast(meta[relay.Constant][33] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %759 = reshape(%758, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), float32] */;
  %760 = cast(%var_857, dtype="float32") /* ty=Tensor[(11, 13, 10), float32] */;
  %761 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(11, 13, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %762 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 13, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 13, 10), float32] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %764 = divide(%762, %763) /* ty=Tensor[(11, 13, 10), float32] */;
  %765 = cast(%764, dtype="int64") /* ty=Tensor[(11, 13, 10), int64] */;
  %766 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(11, 13, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 13, 10), float32] */, dtype="int64") /* ty=Tensor[(11, 13, 10), int64] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %769 = @func_754(%759) /* ty=Tensor[(9, 5, 15), float32] */;
  %770 = bitwise_or(%767, %768) /* ty=Tensor[(11, 13, 10), int64] */;
  (%769, meta[relay.Constant][33] /* ty=Tensor[(675), float32] */, %770)
}

def @func_2021() -> (Tensor[(4, 2, 6), float64],) {
  %771 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %772 = %771.0;
  (%772,)
}

def @func_4097(%var_4076: Tensor[(2, 4, 16), int8], %var_4077: Tensor[(2, 4, 16), int8]) -> Tensor[(2, 4, 16), int8] {
  %773 = cast(%var_4077, dtype="int8") /* ty=Tensor[(2, 4, 16), int8] */;
  %774 = shape_of(%var_4076, dtype="int32") /* ty=Tensor[(3), int32] */;
  %775 = cast(%var_4076, dtype="int8") /* ty=Tensor[(2, 4, 16), int8] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  add(%775, %776) /* ty=Tensor[(2, 4, 16), int8] */
}

def @func_8429() -> Tensor[(4, 2, 6), float64] {
  %777 = @func_6056() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %777.0
}

def @func_3891() -> (Tensor[(4, 2, 6), float32],) {
  %778 = @func_3594() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %779 = %778.0;
  (%779,)
}

def @func_2839() -> Tensor[(4, 2, 6), float64] {
  @func_2822() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_3096() -> (Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) {
  %780 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
  %781 = @func_1779() /* ty=Tensor[(4, 2, 6), float64] */;
  %782 = cast(%781, dtype="bool") /* ty=Tensor[(4, 2, 6), bool] */;
  %783 = shape_of(%780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(%780, dtype="bool") /* ty=Tensor[(4, 2, 6), bool] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %786 = cast(%781, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
  %787 = reshape(%786, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float32] */;
  %788 = @func_1928(%787) /* ty=(Tensor[(4, 2, 6), uint64], Tensor[(4, 2, 6), uint16]) */;
  %789 = @func_1801() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %790 = logical_and(%784, %785) /* ty=Tensor[(4, 2, 6), bool] */;
  %791 = cast(%790, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
  %792 = reshape(%791, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float32] */;
  %793 = @func_1928(%792) /* ty=(Tensor[(4, 2, 6), uint64], Tensor[(4, 2, 6), uint16]) */;
  %794 = %788.1;
  %795 = %789.0;
  %796 = %793.0;
  (%790, %794, %795, %796)
}

def @func_4469() -> (Tensor[(4, 2, 6), int32],) {
  %797 = @func_2852() /* ty=Tensor[(4, 2, 6), float64] */;
  %798 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 2, 6), float64] */, dtype="int32") /* ty=Tensor[(4, 2, 6), int32] */;
  %799 = shape_of(%797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %800 = cast(%797, dtype="int32") /* ty=Tensor[(4, 2, 6), int32] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %802 = bitwise_xor(%800, %801) /* ty=Tensor[(4, 2, 6), int32] */;
  (%802,)
}

def @func_3505() -> (Tensor[(4, 2, 6), float64],) {
  %803 = @func_2784() /* ty=Tensor[(4, 2, 6), float64] */;
  (%803,)
}

def @func_7034() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %804 = @func_5762() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %805 = @func_4832() /* ty=Tensor[(4, 2, 6), float64] */;
  %806 = @func_1601() /* ty=Tensor[(4, 2, 6), float64] */;
  %807 = %804.0;
  (%805, %806, %807)
}

def @func_9608() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(280), int8], Tensor[(4, 2, 6), float64], Tensor[(3, 108), float64]) {
  %808 = @func_1957() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint16]) */;
  %809 = cast(meta[relay.Constant][36] /* ty=Tensor[(280), int8] */, dtype="int8") /* ty=Tensor[(280), int8] */;
  %810 = reshape(%809, newshape=[5, 8, 7]) /* ty=Tensor[(5, 8, 7), int8] */;
  %811 = @func_6149(%810) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(20), float32], Tensor[(4, 2, 6), float64], Tensor[(5, 8, 7), float32]) */;
  %812 = @func_2696() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) */;
  %813 = %812.2;
  %814 = cast(%813, dtype="float64") /* ty=Tensor[(3, 108), float64] */;
  %815 = %808.0;
  %816 = %811.1;
  %817 = @func_5349() /* ty=Tensor[(4, 2, 6), float64] */;
  %818 = asin(%814) /* ty=Tensor[(3, 108), float64] */;
  (%815, %816, meta[relay.Constant][36] /* ty=Tensor[(280), int8] */, %817, %818)
}

def @func_11430() -> (Tensor[(4, 2, 6), float64],) {
  %819 = @func_3505() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %820 = %819.0;
  (%820,)
}

def @func_2822() -> Tensor[(4, 2, 6), float64] {
  %821 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %821.0
}

def @func_4499() -> Tensor[(324), uint16] {
  %822 = @func_3878() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */;
  %822.1
}

def @func_3217(%var_3208: Tensor[(4, 2, 6), float64]) -> (Tensor[(9, 3, 12), float32], Tensor[(9, 3, 12), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool]) {
  %823 = @func_2696() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) */;
  %824 = %823.3;
  %825 = cast(meta[relay.Constant][37] /* ty=Tensor[(9, 3, 12), float64] */, dtype="float32") /* ty=Tensor[(9, 3, 12), float32] */;
  %826 = shape_of(%824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%824, dtype="float32") /* ty=Tensor[(9, 3, 12), float32] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %829 = cast(meta[relay.Constant][37] /* ty=Tensor[(9, 3, 12), float64] */, dtype="float32") /* ty=Tensor[(9, 3, 12), float32] */;
  %830 = @func_1979() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %831 = @func_1779() /* ty=Tensor[(4, 2, 6), float64] */;
  %832 = cast(%var_3208, dtype="bool") /* ty=Tensor[(4, 2, 6), bool] */;
  %833 = shape_of(%831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %834 = cast(%831, dtype="bool") /* ty=Tensor[(4, 2, 6), bool] */;
  %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %836 = divide(%827, %828) /* ty=Tensor[(9, 3, 12), float32] */;
  %837 = log10(%829) /* ty=Tensor[(9, 3, 12), float32] */;
  %838 = %830.0;
  %839 = greater(%834, %835) /* ty=Tensor[(4, 2, 6), bool] */;
  (%836, %837, %838, %839)
}

def @func_3674() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) {
  %840 = @func_3010() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %841 = @func_2425() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %842 = @func_2852() /* ty=Tensor[(4, 2, 6), float64] */;
  %843 = %840.0;
  %844 = %841.0;
  (%842, %843, %844)
}

def @func_10864(%var_10857: Tensor[(11, 13, 8), uint32], %var_10858: Tensor[(11, 13, 8), uint32]) -> (Tensor[(11, 13, 8), bool],) {
  %845 = cast(%var_10858, dtype="bool") /* ty=Tensor[(11, 13, 8), bool] */;
  %846 = shape_of(%var_10857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(%var_10857, dtype="bool") /* ty=Tensor[(11, 13, 8), bool] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %849 = greater_equal(%847, %848) /* ty=Tensor[(11, 13, 8), bool] */;
  (%849,)
}

def @func_2703() -> (Tensor[(4, 2, 6), float64],) {
  %850 = @func_1957() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint16]) */;
  %851 = %850.0;
  (%851,)
}

def @func_2926() -> Tensor[(4, 2, 6), float64] {
  %852 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %852.0
}

def @func_10919() -> Tensor[(8, 1, 2), float32] {
  @func_9635() /* ty=Tensor[(8, 1, 2), float32] */
}

def @func_5383() -> (Tensor[(4, 2, 6), float32],) {
  %853 = @func_3891() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %854 = %853.0;
  (%854,)
}

def @func_5127() -> (Tensor[(324), uint16],) {
  %855 = @func_4499() /* ty=Tensor[(324), uint16] */;
  (%855,)
}

def @func_11707() -> (Tensor[(9, 5, 15), float32], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) {
  %856 = cast(meta[relay.Constant][38] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %857 = reshape(%856, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float32] */;
  %858 = @func_808(%857) /* ty=(Tensor[(5, 2, 2), float32],) */;
  %859 = @func_8657() /* ty=Tensor[(9, 5, 15), float32] */;
  %860 = %858.0;
  (%859, %860, meta[relay.Constant][38] /* ty=Tensor[(20), float32] */)
}

def @func_3336(%var_3302: Tensor[(20), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64], Tensor[(4, 2, 6), float64]) {
  %861 = cast(%var_3302, dtype="float32") /* ty=Tensor[(20), float32] */;
  %862 = reshape(%861, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float32] */;
  %863 = @func_808(%862) /* ty=(Tensor[(5, 2, 2), float32],) */;
  %864 = %863.0;
  %865 = cast(%var_3302, dtype="float64") /* ty=Tensor[(20), float64] */;
  %866 = shape_of(%864, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%864, dtype="float64") /* ty=Tensor[(5, 2, 2), float64] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %869 = @func_1801() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %870 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
  %871 = power(%867, %868) /* ty=Tensor[(5, 2, 2), float64] */;
  %872 = %869.0;
  (%870, %871, %872)
}

def @func_8345(%var_8266: Tensor[(3, 108), uint16]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(3, 108), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(1792), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %873 = @func_3395() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %874 = cast(meta[relay.Constant][39] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %875 = cast(meta[relay.Constant][39] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %876 = cast(%var_8266, dtype="uint16") /* ty=Tensor[(3, 108), uint16] */;
  %877 = reshape(%874, newshape=[16, 7, 16]) /* ty=Tensor[(16, 7, 16), float64] */;
  %878 = reshape(%875, newshape=[16, 7, 16]) /* ty=Tensor[(16, 7, 16), float64] */;
  %879 = reshape(%876, newshape=[324]) /* ty=Tensor[(324), uint16] */;
  %880 = @func_6526(%877, %878, %879) /* ty=(Tensor[(16, 7, 16), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(900), float32]) */;
  %881 = @func_3356() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %882 = cast(meta[relay.Constant][39] /* ty=Tensor[(1792), float64] */, dtype="float32") /* ty=Tensor[(1792), float32] */;
  %883 = log2(%882) /* ty=Tensor[(1792), float32] */;
  %884 = cast(meta[relay.Constant][39] /* ty=Tensor[(1792), float64] */, dtype="bool") /* ty=Tensor[(1792), bool] */;
  %885 = shape_of(%883, dtype="int32") /* ty=Tensor[(1), int32] */;
  %886 = cast(%883, dtype="bool") /* ty=Tensor[(1792), bool] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?), bool] */;
  %888 = @func_3395() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %889 = %873.1;
  %890 = %880.2;
  %891 = %881.1;
  %892 = @func_5349() /* ty=Tensor[(4, 2, 6), float64] */;
  %893 = logical_or(%886, %887) /* ty=Tensor[(1792), bool] */;
  %894 = @func_6903() /* ty=Tensor[(4, 2, 6), float64] */;
  %895 = %888.1;
  (%889, %890, %var_8266, %891, %892, %893, %894, %895)
}

def @func_8085() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %896 = @func_8016() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %897 = @func_2425() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %898 = @func_5762() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %899 = %896.0;
  %900 = %897.0;
  %901 = %898.0;
  (%899, %900, %901)
}

def @func_1928(%var_1909: Tensor[(4, 2, 6), float32]) -> (Tensor[(4, 2, 6), uint64], Tensor[(4, 2, 6), uint16]) {
  %902 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %903 = %902.0;
  %904 = cast(%903, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
  %905 = log2(%904) /* ty=Tensor[(4, 2, 6), float32] */;
  %906 = @func_1601() /* ty=Tensor[(4, 2, 6), float64] */;
  %907 = cast(%906, dtype="uint64") /* ty=Tensor[(4, 2, 6), uint64] */;
  %908 = shape_of(%905, dtype="int32") /* ty=Tensor[(3), int32] */;
  %909 = cast(%905, dtype="uint64") /* ty=Tensor[(4, 2, 6), uint64] */;
  %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %911 = cast(%var_1909, dtype="uint16") /* ty=Tensor[(4, 2, 6), uint16] */;
  %912 = shape_of(%905, dtype="int32") /* ty=Tensor[(3), int32] */;
  %913 = cast(%905, dtype="uint16") /* ty=Tensor[(4, 2, 6), uint16] */;
  %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %915 = bitwise_or(%909, %910) /* ty=Tensor[(4, 2, 6), uint64] */;
  %916 = logical_xor(%913, %914) /* ty=Tensor[(4, 2, 6), uint16] */;
  (%915, %916)
}

def @func_6526(%var_6497: Tensor[(16, 7, 16), float64], %var_6498: Tensor[(16, 7, 16), float64], %var_6514: Tensor[(324), uint16]) -> (Tensor[(16, 7, 16), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(900), float32]) {
  %917 = cast(%var_6498, dtype="float64") /* ty=Tensor[(16, 7, 16), float64] */;
  %918 = shape_of(%var_6497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %919 = cast(%var_6497, dtype="float64") /* ty=Tensor[(16, 7, 16), float64] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %921 = cast(%var_6514, dtype="uint16") /* ty=Tensor[(324), uint16] */;
  %922 = reshape(%921, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint16] */;
  %923 = @func_1060(%922) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(9, 5, 15), float32], Tensor[(675, 1), float32]) */;
  %924 = cast(meta[relay.Constant][40] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %925 = reshape(%924, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), float32] */;
  %926 = @func_2207(%925) /* ty=(Tensor[(15, 6, 10), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64]) */;
  %927 = floor_mod(%919, %920) /* ty=Tensor[(16, 7, 16), float64] */;
  %928 = @func_2839() /* ty=Tensor[(4, 2, 6), float64] */;
  %929 = @func_2812() /* ty=Tensor[(4, 2, 6), float64] */;
  %930 = %923.1;
  %931 = %926.1;
  (%927, %928, %929, %930, %var_6514, %931, meta[relay.Constant][40] /* ty=Tensor[(900), float32] */)
}

def @func_10150() -> (Tensor[(14, 1, 4), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %932 = @func_7823() /* ty=(Tensor[(14, 1, 4), float32],) */;
  %933 = @func_6721() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %934 = @func_5146() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */;
  %935 = %932.0;
  %936 = @func_6903() /* ty=Tensor[(4, 2, 6), float64] */;
  %937 = %933.1;
  %938 = %934.0;
  (%935, %936, %937, %938)
}

def @func_2278() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %939 = @func_1779() /* ty=Tensor[(4, 2, 6), float64] */;
  %940 = cast(%939, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
  %941 = acos(%940) /* ty=Tensor[(4, 2, 6), float32] */;
  %942 = @func_1779() /* ty=Tensor[(4, 2, 6), float64] */;
  (%941, %942)
}

def @func_5697() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32]) {
  %943 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %944 = @func_4763() /* ty=(Tensor[(9, 3, 12), float64], Tensor[(2, 4, 16), int8], Tensor[(9, 5, 15), float32], Tensor[(715, 2), float32], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32], Tensor[(128), uint64]) */;
  %945 = %943.0;
  %946 = @func_5115() /* ty=Tensor[(4, 2, 6), float64] */;
  %947 = %944.5;
  (%945, %946, %947)
}

def @func_5179() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %948 = @func_1801() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %949 = %948.0;
  %950 = @func_4405() /* ty=Tensor[(4, 2, 6), float64] */;
  (%949, %950)
}

def @func_6239() -> (Tensor[(4, 2, 6), float64],) {
  %951 = @func_5497() /* ty=Tensor[(4, 2, 6), float64] */;
  (%951,)
}

def @func_11251() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %952 = @func_6592() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %953 = @func_6239() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %954 = @func_5697() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32]) */;
  %955 = %952.2;
  %956 = %953.0;
  %957 = %954.0;
  %958 = @func_9992() /* ty=Tensor[(4, 2, 6), float64] */;
  (%955, %956, %957, %958)
}

def @func_11064() -> (Tensor[(4, 2, 6), float64],) {
  %959 = @func_5762() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %960 = %959.0;
  (%960,)
}

def @func_10754() -> (Tensor[(4, 2, 6), int32],) {
  %961 = @func_4469() /* ty=(Tensor[(4, 2, 6), int32],) */;
  %962 = %961.0;
  (%962,)
}

def @func_2812() -> Tensor[(4, 2, 6), float64] {
  @func_2498() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_8982() -> (Tensor[(4, 2, 6), float64], Tensor[(1430), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) {
  %963 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %964 = cast(meta[relay.Constant][41] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %965 = reshape(%964, newshape=[1430]) /* ty=Tensor[(1430), float32] */;
  %966 = @func_6324(%965) /* ty=(Tensor[(4, 2, 6), float32], Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float64]) */;
  %967 = @func_6927() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %968 = @func_3891() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %969 = %963.0;
  %970 = %966.2;
  %971 = %967.1;
  %972 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
  %973 = %968.0;
  (%969, %970, meta[relay.Constant][41] /* ty=Tensor[(1430), float32] */, %971, %972, %973)
}

def @func_11225() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %974 = @func_7905() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %975 = @func_4120() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %976 = %974.0;
  %977 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
  %978 = @func_7980() /* ty=Tensor[(4, 2, 6), float64] */;
  %979 = %975.0;
  (%976, %977, %978, %979)
}

def @func_11405() -> Tensor[(4, 2, 6), float64] {
  %980 = @func_2696() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) */;
  %980.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8715() -> (Tensor[(5, 2, 14), float64], Tensor[(15, 3, 16), float32]) {
  @func_8713() /* ty=(Tensor[(5, 2, 14), float64], Tensor[(15, 3, 16), float32]) */
}

def @func_2601() -> Tensor[(4, 2, 6), float64] {
  %1 = fn () -> Tensor[(4, 2, 6), float64] {
    %0 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %0.0
  };
  %1() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_2854() -> Tensor[(4, 2, 6), float64] {
  @func_2852() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_1980() -> (Tensor[(4, 2, 6), float64],) {
  %3 = fn () -> (Tensor[(4, 2, 6), float64],) {
    %2 = @func_1601() /* ty=Tensor[(4, 2, 6), float64] */;
    (%2,)
  };
  %3() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_11066() -> (Tensor[(4, 2, 6), float64],) {
  @func_11064() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_11432() -> (Tensor[(4, 2, 6), float64],) {
  @func_11430() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_7675() -> Tensor[(4, 2, 6), float64] {
  %5 = fn () -> Tensor[(4, 2, 6), float64] {
    %4 = @func_2703() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %4.0
  };
  %5() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_8038() -> (Tensor[(8, 1, 2), float32], Tensor[(4, 2, 6), float64]) {
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 1, 2), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 2), float32] */;
  %7 = sqrt(%6) /* ty=Tensor[(8, 1, 2), float32] */;
  %8 = @func_2799() /* ty=Tensor[(4, 2, 6), float64] */;
  (%7, %8)
}

def @func_6475() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(1430), float32], Tensor[(20), float32], Tensor[(5, 2, 2), float64]) {
  %9 = @func_5040() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %10 = cast(meta[relay.Constant][1] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %11 = reshape(%10, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %12 = @func_4905(%11) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(675), float32], Tensor[(1430), float32], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) */;
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %14 = reshape(%13, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %15 = @func_3336(%14) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64], Tensor[(4, 2, 6), float64]) */;
  %16 = %9.2;
  %17 = @func_2799() /* ty=Tensor[(4, 2, 6), float64] */;
  %18 = %12.4;
  %19 = %15.1;
  (%16, %17, %18, meta[relay.Constant][1] /* ty=Tensor[(20), float32] */, %19)
}

def @func_3990() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool]) {
  %20 = @func_3555() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %21 = %20.0;
  %22 = cast(%21, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
  %23 = reshape(%22, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float64] */;
  %24 = @func_3217(%23) /* ty=(Tensor[(9, 3, 12), float32], Tensor[(9, 3, 12), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool]) */;
  %25 = %24.3;
  (%21, %25)
}

def @func_7035() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %30 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
    %26 = @func_5762() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %27 = @func_4832() /* ty=Tensor[(4, 2, 6), float64] */;
    %28 = @func_1601() /* ty=Tensor[(4, 2, 6), float64] */;
    %29 = %26.0;
    (%27, %28, %29)
  };
  %30() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_4646() -> Tensor[(4, 2, 6), float64] {
  @func_4644() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_5977(%var_5976: Tensor[(9, 100), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(9, 100), float32]) {
  %37 = fn (%var_5964: Tensor[(9, 100), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(9, 100), float32]) {
    %31 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %32 = cast(%var_5964, dtype="float32") /* ty=Tensor[(9, 100), float32] */;
    %33 = reshape(%32, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), float32] */;
    %34 = @func_2207(%33) /* ty=(Tensor[(15, 6, 10), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64]) */;
    %35 = %31.0;
    %36 = %34.2;
    (%35, %36, %var_5964)
  };
  %37(%var_5976) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(9, 100), float32]) */
}

def @func_2329(%var_2318: Tensor[(324), uint16]) -> (Tensor[(675, 1), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), float64]) {
  %38 = cast(%var_2318, dtype="uint16") /* ty=Tensor[(324), uint16] */;
  %39 = reshape(%38, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint16] */;
  %40 = @func_1060(%39) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(9, 5, 15), float32], Tensor[(675, 1), float32]) */;
  %41 = @func_1957() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint16]) */;
  %42 = %41.0;
  %43 = cast(%42, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
  %44 = rsqrt(%43) /* ty=Tensor[(4, 2, 6), float64] */;
  %45 = @func_1801() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %46 = %45.0;
  %47 = cast(%46, dtype="bool") /* ty=Tensor[(4, 2, 6), bool] */;
  %48 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%44, dtype="bool") /* ty=Tensor[(4, 2, 6), bool] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %51 = %40.2;
  %52 = logical_or(%49, %50) /* ty=Tensor[(4, 2, 6), bool] */;
  %53 = @func_1870() /* ty=Tensor[(4, 2, 6), float64] */;
  (%51, %var_2318, %52, %53)
}

def @func_9018() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %57 = fn () -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
    %54 = @func_6698() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
    %55 = %54.1;
    %56 = @func_7674() /* ty=Tensor[(4, 2, 6), float64] */;
    (%55, %56)
  };
  %57() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_11406() -> Tensor[(4, 2, 6), float64] {
  %59 = fn () -> Tensor[(4, 2, 6), float64] {
    %58 = @func_2696() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) */;
    %58.0
  };
  %59() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_7159(%var_7157: Tensor[(128), int8]) -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(2, 4, 16), int8], Tensor[(128), int8]) {
  @func_7156(%var_7157) /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(2, 4, 16), int8], Tensor[(128), int8]) */
}

def @func_8903(%var_8901: Tensor[(13, 16, 16), float32], %var_8902: Tensor[(324), uint16]) -> (Tensor[(13, 16, 16), float32], Tensor[(4, 2, 6), float64], Tensor[(900), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(1792), float32]) {
  @func_8899(%var_8901, %var_8902) /* ty=(Tensor[(13, 16, 16), float32], Tensor[(4, 2, 6), float64], Tensor[(900), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(1792), float32]) */
}

def @func_9099(%var_9068: Tensor[(5, 12, 15), int16], %var_9069: Tensor[(5, 12, 15), int16]) -> (Tensor[(5, 12, 15), int16], Tensor[(5, 12, 15), float64]) {
  %60 = cast(%var_9069, dtype="int16") /* ty=Tensor[(5, 12, 15), int16] */;
  %61 = shape_of(%var_9068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%var_9068, dtype="int16") /* ty=Tensor[(5, 12, 15), int16] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %64 = cast(%var_9068, dtype="float64") /* ty=Tensor[(5, 12, 15), float64] */;
  %65 = minimum(%62, %63) /* ty=Tensor[(5, 12, 15), int16] */;
  %66 = cos(%64) /* ty=Tensor[(5, 12, 15), float64] */;
  (%65, %66)
}

def @func_756(%var_755: Tensor[(9, 5, 15), float32]) -> Tensor[(9, 5, 15), float32] {
  %68 = fn (%var_729: Tensor[(9, 5, 15), float32]) -> Tensor[(9, 5, 15), float32] {
    %67 = cast(%var_729, dtype="float32") /* ty=Tensor[(9, 5, 15), float32] */;
    tan(%67) /* ty=Tensor[(9, 5, 15), float32] */
  };
  %68(%var_755) /* ty=Tensor[(9, 5, 15), float32] */
}

def @func_4668(%var_4655: Tensor[(1430), float32]) -> (Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float32]) {
  %69 = cast(%var_4655, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %70 = reshape(%69, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), float32] */;
  %71 = @func_921(%70) /* ty=(Tensor[(9, 5, 15), float32], Tensor[(675), float32], Tensor[(11, 13, 10), int64]) */;
  %72 = @func_1870() /* ty=Tensor[(4, 2, 6), float64] */;
  %73 = cast(%72, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
  %74 = %71.1;
  %75 = sigmoid(%73) /* ty=Tensor[(4, 2, 6), float32] */;
  (%74, %var_4655, %75)
}

def @func_1781() -> Tensor[(4, 2, 6), float64] {
  @func_1779() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_4907(%var_4906: Tensor[(20), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(675), float32], Tensor[(1430), float32], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) {
  %90 = fn (%var_4900: Tensor[(20), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(675), float32], Tensor[(1430), float32], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) {
    %76 = @func_3505() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %77 = @func_3990() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool]) */;
    %78 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %79 = cast(meta[relay.Constant][2] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
    %80 = reshape(%79, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), float32] */;
    %81 = @func_921(%80) /* ty=(Tensor[(9, 5, 15), float32], Tensor[(675), float32], Tensor[(11, 13, 10), int64]) */;
    %82 = cast(%var_4900, dtype="float32") /* ty=Tensor[(20), float32] */;
    %83 = reshape(%82, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float32] */;
    %84 = @func_808(%83) /* ty=(Tensor[(5, 2, 2), float32],) */;
    %85 = %76.0;
    %86 = %77.0;
    %87 = %78.0;
    %88 = %81.1;
    %89 = %84.0;
    (%85, %86, %87, %88, meta[relay.Constant][2] /* ty=Tensor[(1430), float32] */, %89, %var_4900)
  };
  %90(%var_4906) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(675), float32], Tensor[(1430), float32], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) */
}

def @func_8347(%var_8346: Tensor[(3, 108), uint16]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(3, 108), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(1792), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %114 = fn (%var_8266: Tensor[(3, 108), uint16]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(3, 108), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(1792), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
    %91 = @func_3395() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
    %92 = cast(meta[relay.Constant][3] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
    %93 = cast(meta[relay.Constant][3] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
    %94 = cast(%var_8266, dtype="uint16") /* ty=Tensor[(3, 108), uint16] */;
    %95 = reshape(%92, newshape=[16, 7, 16]) /* ty=Tensor[(16, 7, 16), float64] */;
    %96 = reshape(%93, newshape=[16, 7, 16]) /* ty=Tensor[(16, 7, 16), float64] */;
    %97 = reshape(%94, newshape=[324]) /* ty=Tensor[(324), uint16] */;
    %98 = @func_6526(%95, %96, %97) /* ty=(Tensor[(16, 7, 16), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(900), float32]) */;
    %99 = @func_3356() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
    %100 = cast(meta[relay.Constant][3] /* ty=Tensor[(1792), float64] */, dtype="float32") /* ty=Tensor[(1792), float32] */;
    %101 = log2(%100) /* ty=Tensor[(1792), float32] */;
    %102 = cast(meta[relay.Constant][3] /* ty=Tensor[(1792), float64] */, dtype="bool") /* ty=Tensor[(1792), bool] */;
    %103 = shape_of(%101, dtype="int32") /* ty=Tensor[(1), int32] */;
    %104 = cast(%101, dtype="bool") /* ty=Tensor[(1792), bool] */;
    %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?), bool] */;
    %106 = @func_3395() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
    %107 = %91.1;
    %108 = %98.2;
    %109 = %99.1;
    %110 = @func_5349() /* ty=Tensor[(4, 2, 6), float64] */;
    %111 = logical_or(%104, %105) /* ty=Tensor[(1792), bool] */;
    %112 = @func_6903() /* ty=Tensor[(4, 2, 6), float64] */;
    %113 = %106.1;
    (%107, %108, %var_8266, %109, %110, %111, %112, %113)
  };
  %114(%var_8346) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(3, 108), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(1792), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_10650(%var_10649: Tensor[(20), float32]) -> (Tensor[(4, 2, 6), float32], Tensor[(675), float32], Tensor[(675), float32], Tensor[(14, 1, 4), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(20), float32], Tensor[(4, 2, 6), float64], Tensor[(7, ?, 11), uint32]) {
  %148 = fn (%var_10630: Tensor[(20), float32]) -> (Tensor[(4, 2, 6), float32], Tensor[(675), float32], Tensor[(675), float32], Tensor[(14, 1, 4), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(20), float32], Tensor[(4, 2, 6), float64], Tensor[(7, ?, 11), uint32]) {
    %115 = @func_10283() /* ty=(Tensor[(4, 2, 6), float32],) */;
    %116 = cast(meta[relay.Constant][4] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
    %117 = reshape(%116, newshape=[675]) /* ty=Tensor[(675), float32] */;
    %118 = @func_8116(%117) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(675), float32]) */;
    %119 = @func_7823() /* ty=(Tensor[(14, 1, 4), float32],) */;
    %120 = @func_7494() /* ty=(Tensor[(324), uint16], Tensor[(4, 2, 6), float64]) */;
    %121 = cast(%var_10630, dtype="float32") /* ty=Tensor[(20), float32] */;
    %122 = reshape(%121, newshape=[20]) /* ty=Tensor[(20), float32] */;
    %123 = @func_7225(%122) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) */;
    %124 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 1, 11), float32] */, dtype="float32") /* ty=Tensor[(7, 1, 11), float32] */;
    %125 = cosh(%124) /* ty=Tensor[(7, 1, 11), float32] */;
    %126 = cast(%125, dtype="float32") /* ty=Tensor[(7, 1, 11), float32] */;
    %127 = cos(%126) /* ty=Tensor[(7, 1, 11), float32] */;
    %128 = cast(%127, dtype="float32") /* ty=Tensor[(7, 1, 11), float32] */;
    %129 = asinh(%128) /* ty=Tensor[(7, 1, 11), float32] */;
    %130 = cast(%129, dtype="int32") /* ty=Tensor[(7, 1, 11), int32] */;
    %131 = shape_of(%127, dtype="int32") /* ty=Tensor[(3), int32] */;
    %132 = cast(%127, dtype="int32") /* ty=Tensor[(7, 1, 11), int32] */;
    %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %134 = logical_xor(%132, %133) /* ty=Tensor[(7, ?, 11), int32] */;
    %135 = cast(%134, dtype="float32") /* ty=Tensor[(7, ?, 11), float32] */;
    %136 = log2(%135) /* ty=Tensor[(7, ?, 11), float32] */;
    %137 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 1, 11), float32] */, dtype="uint32") /* ty=Tensor[(7, 1, 11), uint32] */;
    %138 = shape_of(%136, dtype="int32") /* ty=Tensor[(3), int32] */;
    %139 = cast(%136, dtype="uint32") /* ty=Tensor[(7, ?, 11), uint32] */;
    %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %141 = %115.0;
    %142 = %118.2;
    %143 = %119.0;
    %144 = %120.0;
    %145 = %123.1;
    %146 = @func_4622() /* ty=Tensor[(4, 2, 6), float64] */;
    %147 = add(%139, %140) /* ty=Tensor[(7, ?, 11), uint32] */;
    (%141, %142, meta[relay.Constant][4] /* ty=Tensor[(675), float32] */, %143, %144, %145, %var_10630, %146, %147)
  };
  %148(%var_10649) /* ty=(Tensor[(4, 2, 6), float32], Tensor[(675), float32], Tensor[(675), float32], Tensor[(14, 1, 4), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(20), float32], Tensor[(4, 2, 6), float64], Tensor[(7, ?, 11), uint32]) */
}

def @func_5718() -> (Tensor[(4, 2, 6), float64],) {
  %149 = @func_5349() /* ty=Tensor[(4, 2, 6), float64] */;
  (%149,)
}

def @func_4209(%var_4207: Tensor[(16, 10, 11), float32]) -> Tensor[(16, 10, 11), float32] {
  @func_4206(%var_4207) /* ty=Tensor[(16, 10, 11), float32] */
}

def @func_3781(%var_3779: Tensor[(1, 10, 12), float64], %var_3780: Tensor[(225, 3), float32]) -> (Tensor[(6, 10, 12), float64], Tensor[(4, 2, 6), float32], Tensor[(225, 3), float32], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64]) {
  @func_3777(%var_3779, %var_3780) /* ty=(Tensor[(6, 10, 12), float64], Tensor[(4, 2, 6), float32], Tensor[(225, 3), float32], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64]) */
}

def @func_3358() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  @func_3356() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_1801() -> (Tensor[(4, 2, 6), float64],) {
  %150 = @func_1779() /* ty=Tensor[(4, 2, 6), float64] */;
  (%150,)
}

def @func_6929() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  @func_6927() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_3506() -> (Tensor[(4, 2, 6), float64],) {
  %152 = fn () -> (Tensor[(4, 2, 6), float64],) {
    %151 = @func_2784() /* ty=Tensor[(4, 2, 6), float64] */;
    (%151,)
  };
  %152() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_7906() -> (Tensor[(4, 2, 6), float64],) {
  %155 = fn () -> (Tensor[(4, 2, 6), float64],) {
    %153 = @func_4120() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %154 = %153.0;
    (%154,)
  };
  %155() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_4407() -> Tensor[(4, 2, 6), float64] {
  @func_4405() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_11226() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %162 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
    %156 = @func_7905() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %157 = @func_4120() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %158 = %156.0;
    %159 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
    %160 = @func_7980() /* ty=Tensor[(4, 2, 6), float64] */;
    %161 = %157.0;
    (%158, %159, %160, %161)
  };
  %162() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_8040() -> (Tensor[(8, 1, 2), float32], Tensor[(4, 2, 6), float64]) {
  @func_8038() /* ty=(Tensor[(8, 1, 2), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_11535() -> Tensor[(4, 2, 6), int32] {
  %163 = @func_4469() /* ty=(Tensor[(4, 2, 6), int32],) */;
  %163.0
}

def @func_1931(%var_1929: Tensor[(4, 2, 6), float32]) -> (Tensor[(4, 2, 6), uint64], Tensor[(4, 2, 6), uint16]) {
  @func_1928(%var_1929) /* ty=(Tensor[(4, 2, 6), uint64], Tensor[(4, 2, 6), uint16]) */
}

def @func_1957() -> (Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint16]) {
  %164 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %165 = cast(meta[relay.Constant][6] /* ty=Tensor[(324), uint16] */, dtype="uint16") /* ty=Tensor[(324), uint16] */;
  %166 = reshape(%165, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint16] */;
  %167 = @func_1060(%166) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(9, 5, 15), float32], Tensor[(675, 1), float32]) */;
  %168 = %164.0;
  %169 = %167.0;
  (%168, %169, meta[relay.Constant][6] /* ty=Tensor[(324), uint16] */)
}

def @func_11513() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) {
  %173 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) {
    %170 = @func_3395() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
    %171 = @func_2784() /* ty=Tensor[(4, 2, 6), float64] */;
    %172 = %170.0;
    (%171, %172)
  };
  %173() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) */
}

def @func_3878() -> (Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) {
  %174 = @func_3356() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %175 = @func_1957() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint16]) */;
  %176 = %174.1;
  %177 = %175.2;
  (%176, %177)
}

def @func_5383() -> (Tensor[(4, 2, 6), float32],) {
  %178 = @func_3891() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %179 = %178.0;
  (%179,)
}

def @func_6326(%var_6325: Tensor[(1430), float32]) -> (Tensor[(4, 2, 6), float32], Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float64]) {
  %186 = fn (%var_6310: Tensor[(1430), float32]) -> (Tensor[(4, 2, 6), float32], Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float64]) {
    %180 = cast(%var_6310, dtype="float32") /* ty=Tensor[(1430), float32] */;
    %181 = reshape(%180, newshape=[1430]) /* ty=Tensor[(1430), float32] */;
    %182 = @func_4668(%181) /* ty=(Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float32]) */;
    %183 = @func_5791() /* ty=Tensor[(4, 2, 6), float32] */;
    %184 = %182.0;
    %185 = @func_2839() /* ty=Tensor[(4, 2, 6), float64] */;
    (%183, %184, %var_6310, %185)
  };
  %186(%var_6325) /* ty=(Tensor[(4, 2, 6), float32], Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_9277() -> Tensor[(4, 2, 6), float64] {
  %187 = fn () -> Tensor[(4, 2, 6), float64] {
    @func_2784() /* ty=Tensor[(4, 2, 6), float64] */
  };
  %187() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_9546() -> (Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) {
  %188 = @func_2703() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %189 = %188.0;
  %190 = @func_7558() /* ty=Tensor[(324), uint16] */;
  (%189, %190)
}

def @func_7494() -> (Tensor[(324), uint16], Tensor[(4, 2, 6), float64]) {
  %191 = @func_5179() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %192 = @func_4499() /* ty=Tensor[(324), uint16] */;
  %193 = %191.1;
  (%192, %193)
}

def @func_8147() -> (Tensor[(4, 2, 6), float64],) {
  @func_8145() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_9869() -> (Tensor[(4, 2, 6), float64],) {
  @func_9867() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_11337(%var_11308: Tensor[(1430), float32], %var_11324: Tensor[(9, 100), float32]) -> (Tensor[(11, 13, 10), int64], Tensor[(1430), float32], Tensor[(8, 4, 3), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 100), float32], Tensor[(14, 1, 4), float32]) {
  %194 = cast(%var_11308, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %195 = reshape(%194, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), float32] */;
  %196 = @func_921(%195) /* ty=(Tensor[(9, 5, 15), float32], Tensor[(675), float32], Tensor[(11, 13, 10), int64]) */;
  %197 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 4, 3), float32] */, dtype="float32") /* ty=Tensor[(8, 4, 3), float32] */;
  %198 = asinh(%197) /* ty=Tensor[(8, 4, 3), float32] */;
  %199 = cast(%198, dtype="float32") /* ty=Tensor[(8, 4, 3), float32] */;
  %200 = cast(%var_11324, dtype="float32") /* ty=Tensor[(9, 100), float32] */;
  %201 = reshape(%200, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %202 = @func_10227(%201) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(900), float32], Tensor[(4, 2, 6), float64]) */;
  %203 = @func_7823() /* ty=(Tensor[(14, 1, 4), float32],) */;
  %204 = %196.2;
  %205 = sinh(%199) /* ty=Tensor[(8, 4, 3), float32] */;
  %206 = %202.3;
  %207 = %203.0;
  (%204, %var_11308, %205, %206, %var_11324, %207)
}

def @func_5266() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %208 = @func_3674() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) */;
  %209 = @func_3878() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */;
  %210 = %208.2;
  %211 = %209.0;
  (%210, %211)
}

def @func_5351() -> Tensor[(4, 2, 6), float64] {
  @func_5349() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_4833() -> Tensor[(4, 2, 6), float64] {
  %213 = fn () -> Tensor[(4, 2, 6), float64] {
    %212 = @func_2696() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) */;
    %212.0
  };
  %213() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_6927() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %214 = @func_6239() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %215 = %214.0;
  %216 = @func_1779() /* ty=Tensor[(4, 2, 6), float64] */;
  (%215, %216)
}

def @func_11679() -> (Tensor[(4, 2, 6), float64], Tensor[(900), float32], Tensor[(900), float32]) {
  %217 = cast(meta[relay.Constant][8] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %218 = reshape(%217, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %219 = @func_10227(%218) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(900), float32], Tensor[(4, 2, 6), float64]) */;
  %220 = @func_6091() /* ty=Tensor[(4, 2, 6), float64] */;
  %221 = %219.2;
  (%220, %221, meta[relay.Constant][8] /* ty=Tensor[(900), float32] */)
}

def @func_923(%var_922: Tensor[(11, 13, 10), float32]) -> (Tensor[(9, 5, 15), float32], Tensor[(675), float32], Tensor[(11, 13, 10), int64]) {
  %235 = fn (%var_857: Tensor[(11, 13, 10), float32]) -> (Tensor[(9, 5, 15), float32], Tensor[(675), float32], Tensor[(11, 13, 10), int64]) {
    %222 = cast(meta[relay.Constant][9] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
    %223 = reshape(%222, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), float32] */;
    %224 = cast(%var_857, dtype="float32") /* ty=Tensor[(11, 13, 10), float32] */;
    %225 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(11, 13, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %226 = cast(meta[relay.Constant][10] /* ty=Tensor[(11, 13, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 13, 10), float32] */;
    %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %228 = divide(%226, %227) /* ty=Tensor[(11, 13, 10), float32] */;
    %229 = cast(%228, dtype="int64") /* ty=Tensor[(11, 13, 10), int64] */;
    %230 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(11, 13, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %231 = cast(meta[relay.Constant][10] /* ty=Tensor[(11, 13, 10), float32] */, dtype="int64") /* ty=Tensor[(11, 13, 10), int64] */;
    %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %233 = @func_754(%223) /* ty=Tensor[(9, 5, 15), float32] */;
    %234 = bitwise_or(%231, %232) /* ty=Tensor[(11, 13, 10), int64] */;
    (%233, meta[relay.Constant][9] /* ty=Tensor[(675), float32] */, %234)
  };
  %235(%var_922) /* ty=(Tensor[(9, 5, 15), float32], Tensor[(675), float32], Tensor[(11, 13, 10), int64]) */
}

def @func_3893() -> (Tensor[(4, 2, 6), float32],) {
  @func_3891() /* ty=(Tensor[(4, 2, 6), float32],) */
}

def @func_6149(%var_6102: Tensor[(5, 8, 7), int8]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(20), float32], Tensor[(4, 2, 6), float64], Tensor[(5, 8, 7), float32]) {
  %236 = cast(meta[relay.Constant][11] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
  %237 = reshape(%236, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %238 = @func_3336(%237) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64], Tensor[(4, 2, 6), float64]) */;
  %239 = @func_5748() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %240 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 8, 7), int8] */, dtype="int8") /* ty=Tensor[(5, 8, 7), int8] */;
  %241 = shape_of(%var_6102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(%var_6102, dtype="int8") /* ty=Tensor[(5, 8, 7), int8] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %244 = maximum(%242, %243) /* ty=Tensor[(5, 8, 7), int8] */;
  %245 = cast(%244, dtype="float32") /* ty=Tensor[(5, 8, 7), float32] */;
  %246 = @func_1870() /* ty=Tensor[(4, 2, 6), float64] */;
  %247 = %238.0;
  %248 = %239.0;
  %249 = tan(%245) /* ty=Tensor[(5, 8, 7), float32] */;
  (%246, %247, meta[relay.Constant][11] /* ty=Tensor[(20), float32] */, %248, %249)
}

def @func_8145() -> (Tensor[(4, 2, 6), float64],) {
  %250 = @func_6927() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %251 = %250.1;
  (%251,)
}

def @func_7963(%var_7961: Tensor[(675), float32]) -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(675), float64]) {
  @func_7960(%var_7961) /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(675), float64]) */
}

def @func_9515() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %255 = fn () -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
    %252 = @func_2278() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
    %253 = %252.0;
    %254 = @func_4405() /* ty=Tensor[(4, 2, 6), float64] */;
    (%253, %254)
  };
  %255() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_2705() -> (Tensor[(4, 2, 6), float64],) {
  @func_2703() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_4644() -> Tensor[(4, 2, 6), float64] {
  @func_2498() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_7156(%var_7152: Tensor[(128), int8]) -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(2, 4, 16), int8], Tensor[(128), int8]) {
  %256 = @func_2425() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %257 = @func_4195() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %258 = @func_7034() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %259 = cast(%var_7152, dtype="int8") /* ty=Tensor[(128), int8] */;
  %260 = cast(%var_7152, dtype="int8") /* ty=Tensor[(128), int8] */;
  %261 = reshape(%259, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), int8] */;
  %262 = reshape(%260, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), int8] */;
  %263 = %256.0;
  %264 = %257.0;
  %265 = %258.0;
  %266 = @func_4097(%261, %262) /* ty=Tensor[(2, 4, 16), int8] */;
  (%263, %264, %265, %266, %var_7152)
}

def @func_8119(%var_8117: Tensor[(675), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(675), float32]) {
  @func_8116(%var_8117) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(675), float32]) */
}

def @func_5558() -> (Tensor[(15, 3, 16), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %280 = fn () -> (Tensor[(15, 3, 16), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
    %267 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 3, 16), int8] */, dtype="bool") /* ty=Tensor[(15, 3, 16), bool] */;
    %268 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(15, 3, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %269 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 3, 16), int8] */, dtype="bool") /* ty=Tensor[(15, 3, 16), bool] */;
    %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %271 = greater(%269, %270) /* ty=Tensor[(15, 3, 16), bool] */;
    %272 = cast(%271, dtype="float64") /* ty=Tensor[(15, 3, 16), float64] */;
    %273 = cast(%271, dtype="float32") /* ty=Tensor[(15, 3, 16), float32] */;
    %274 = @func_3674() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) */;
    %275 = @func_2703() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %276 = sin(%272) /* ty=Tensor[(15, 3, 16), float64] */;
    %277 = log(%273) /* ty=Tensor[(15, 3, 16), float32] */;
    %278 = %274.2;
    %279 = %275.0;
    (%276, %277, %278, %279)
  };
  %280() /* ty=(Tensor[(15, 3, 16), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_11595() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %285 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
    %281 = @func_5748() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
    %282 = @func_4195() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
    %283 = %281.2;
    %284 = %282.1;
    (%283, %284)
  };
  %285() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_3675() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) {
  %291 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) {
    %286 = @func_3010() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
    %287 = @func_2425() /* ty=(Tensor[(4, 2, 6), float32],) */;
    %288 = @func_2852() /* ty=Tensor[(4, 2, 6), float64] */;
    %289 = %286.0;
    %290 = %287.0;
    (%288, %289, %290)
  };
  %291() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) */
}

def @func_8984() -> (Tensor[(4, 2, 6), float64], Tensor[(1430), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) {
  @func_8982() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(1430), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) */
}

def @func_2703() -> (Tensor[(4, 2, 6), float64],) {
  %292 = @func_1957() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint16]) */;
  %293 = %292.0;
  (%293,)
}

def @func_2697() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) {
  %303 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) {
    %294 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 108), uint16] */, dtype="uint16") /* ty=Tensor[(3, 108), uint16] */;
    %295 = reshape(%294, newshape=[324]) /* ty=Tensor[(324), uint16] */;
    %296 = @func_2329(%295) /* ty=(Tensor[(675, 1), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), float64]) */;
    %297 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 108), uint16] */, dtype="uint16") /* ty=Tensor[(3, 108), uint16] */;
    %298 = reshape(%297, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint16] */;
    %299 = @func_1060(%298) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(9, 5, 15), float32], Tensor[(675, 1), float32]) */;
    %300 = @func_1870() /* ty=Tensor[(4, 2, 6), float64] */;
    %301 = %296.2;
    %302 = %299.0;
    (%300, %301, meta[relay.Constant][15] /* ty=Tensor[(3, 108), uint16] */, %302)
  };
  %303() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) */
}

def @func_8018() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  @func_8016() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_10287() -> Tensor[(4, 2, 6), float64] {
  @func_1601() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_5646() -> (Tensor[(324), uint16], Tensor[(4, 2, 6), float64]) {
  %304 = @func_5127() /* ty=(Tensor[(324), uint16],) */;
  %305 = %304.0;
  %306 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
  (%305, %306)
}

def @func_5117() -> Tensor[(4, 2, 6), float64] {
  @func_5115() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_4470() -> (Tensor[(4, 2, 6), int32],) {
  %313 = fn () -> (Tensor[(4, 2, 6), int32],) {
    %307 = @func_2852() /* ty=Tensor[(4, 2, 6), float64] */;
    %308 = cast(meta[relay.Constant][16] /* ty=Tensor[(4, 2, 6), float64] */, dtype="int32") /* ty=Tensor[(4, 2, 6), int32] */;
    %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %310 = cast(%307, dtype="int32") /* ty=Tensor[(4, 2, 6), int32] */;
    %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %312 = bitwise_xor(%310, %311) /* ty=Tensor[(4, 2, 6), int32] */;
    (%312,)
  };
  %313() /* ty=(Tensor[(4, 2, 6), int32],) */
}

def @func_6634() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %317 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
    %314 = @func_3555() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %315 = %314.0;
    %316 = @func_5349() /* ty=Tensor[(4, 2, 6), float64] */;
    (%315, %316)
  };
  %317() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_5147() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) {
  %324 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) {
    %318 = @func_4120() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %319 = %318.0;
    %320 = cast(%319, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
    %321 = reshape(%320, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float32] */;
    %322 = @func_1928(%321) /* ty=(Tensor[(4, 2, 6), uint64], Tensor[(4, 2, 6), uint16]) */;
    %323 = %322.0;
    (%319, %323)
  };
  %324() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */
}

def @func_3595() -> (Tensor[(4, 2, 6), float32],) {
  %330 = fn () -> (Tensor[(4, 2, 6), float32],) {
    %325 = @func_2812() /* ty=Tensor[(4, 2, 6), float64] */;
    %326 = cast(%325, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
    %327 = log(%326) /* ty=Tensor[(4, 2, 6), float64] */;
    %328 = cast(%327, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
    %329 = erf(%328) /* ty=Tensor[(4, 2, 6), float32] */;
    (%329,)
  };
  %330() /* ty=(Tensor[(4, 2, 6), float32],) */
}

def @func_10229(%var_10228: Tensor[(900), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(900), float32], Tensor[(4, 2, 6), float64]) {
  %337 = fn (%var_10205: Tensor[(900), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(900), float32], Tensor[(4, 2, 6), float64]) {
    %331 = cast(%var_10205, dtype="float32") /* ty=Tensor[(900), float32] */;
    %332 = reshape(%331, newshape=[9, 100]) /* ty=Tensor[(9, 100), float32] */;
    %333 = @func_5975(%332) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(9, 100), float32]) */;
    %334 = @func_1870() /* ty=Tensor[(4, 2, 6), float64] */;
    %335 = %333.1;
    %336 = @func_2600() /* ty=Tensor[(4, 2, 6), float64] */;
    (%334, %335, %var_10205, %336)
  };
  %337(%var_10228) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(900), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_1779() -> Tensor[(4, 2, 6), float64] {
  @func_1722() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_4319() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32]) {
  %338 = @func_3891() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %339 = @func_2703() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %340 = %339.0;
  %341 = cast(%340, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
  %342 = %338.0;
  %343 = asinh(%341) /* ty=Tensor[(4, 2, 6), float32] */;
  (%342, %343)
}

def @func_1803() -> (Tensor[(4, 2, 6), float64],) {
  @func_1801() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_2800() -> Tensor[(4, 2, 6), float64] {
  %344 = fn () -> Tensor[(4, 2, 6), float64] {
    @func_2784() /* ty=Tensor[(4, 2, 6), float64] */
  };
  %344() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_8505(%var_8470: Tensor[(1792), float64]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(1430, ?), float32], Tensor[(16, 7, 16), float64], Tensor[(324, 1), uint16], Tensor[(14, ?, 4), float32], Tensor[(4, 2, 6), float64], Tensor[(1430, ?), float32], Tensor[(1430, 1792), bool]) {
  %345 = @func_4120() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %346 = cast(meta[relay.Constant][17] /* ty=Tensor[(1430, 1), float32] */, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %347 = reshape(%346, newshape=[1430]) /* ty=Tensor[(1430), float32] */;
  %348 = @func_4668(%347) /* ty=(Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float32]) */;
  %349 = %348.1;
  %350 = cast(%349, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %351 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(1430, 1), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %352 = cast(meta[relay.Constant][17] /* ty=Tensor[(1430, 1), float32] */, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %354 = cast(%var_8470, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %355 = cast(%var_8470, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %356 = cast(meta[relay.Constant][18] /* ty=Tensor[(324, 1), uint16] */, dtype="uint16") /* ty=Tensor[(324, 1), uint16] */;
  %357 = reshape(%354, newshape=[16, 7, 16]) /* ty=Tensor[(16, 7, 16), float64] */;
  %358 = reshape(%355, newshape=[16, 7, 16]) /* ty=Tensor[(16, 7, 16), float64] */;
  %359 = reshape(%356, newshape=[324]) /* ty=Tensor[(324), uint16] */;
  %360 = @func_6526(%357, %358, %359) /* ty=(Tensor[(16, 7, 16), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(900), float32]) */;
  %361 = @func_8257() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(14, ?, 4), float32], Tensor[(14, ?, 4), uint16], Tensor[(4, 2, 6), float64]) */;
  %362 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %363 = cast(meta[relay.Constant][17] /* ty=Tensor[(1430, 1), float32] */, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %364 = exp(%363) /* ty=Tensor[(1430, 1), float32] */;
  %365 = cast(meta[relay.Constant][17] /* ty=Tensor[(1430, 1), float32] */, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %366 = shape_of(%364, dtype="int32") /* ty=Tensor[(2), int32] */;
  %367 = cast(%364, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %369 = cast(%364, dtype="bool") /* ty=Tensor[(1430, 1), bool] */;
  %370 = cast(%var_8470, dtype="bool") /* ty=Tensor[(1792), bool] */;
  %371 = %345.0;
  %372 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
  %373 = floor_mod(%352, %353) /* ty=Tensor[(1430, ?), float32] */;
  %374 = %360.0;
  %375 = %361.4;
  %376 = %362.0;
  %377 = floor_divide(%367, %368) /* ty=Tensor[(1430, ?), float32] */;
  %378 = less(%369, %370) /* ty=Tensor[(1430, 1792), bool] */;
  (%371, %372, %373, %374, meta[relay.Constant][18] /* ty=Tensor[(324, 1), uint16] */, %375, %376, %377, %378)
}

def @func_7960(%var_7943: Tensor[(675), float32]) -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(675), float64]) {
  %379 = @func_3891() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %380 = cast(%var_7943, dtype="float32") /* ty=Tensor[(675), float32] */;
  %381 = reshape(%380, newshape=[675]) /* ty=Tensor[(675), float32] */;
  %382 = @func_3045(%381) /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(675), float32]) */;
  %383 = @func_3990() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool]) */;
  %384 = cast(%var_7943, dtype="float64") /* ty=Tensor[(675), float64] */;
  %385 = %379.0;
  %386 = @func_1722() /* ty=Tensor[(4, 2, 6), float64] */;
  %387 = %382.0;
  %388 = %383.0;
  %389 = cos(%384) /* ty=Tensor[(675), float64] */;
  (%385, %386, %387, %388, %389)
}

def @func_6723() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  @func_6721() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_8016() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %390 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %391 = @func_4405() /* ty=Tensor[(4, 2, 6), float64] */;
  %392 = %390.0;
  (%391, %392)
}

def @func_8508(%var_8506: Tensor[(1792), float64]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(1430, ?), float32], Tensor[(16, 7, 16), float64], Tensor[(324, 1), uint16], Tensor[(14, ?, 4), float32], Tensor[(4, 2, 6), float64], Tensor[(1430, ?), float32], Tensor[(1430, 1792), bool]) {
  @func_8505(%var_8506) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(1430, ?), float32], Tensor[(16, 7, 16), float64], Tensor[(324, 1), uint16], Tensor[(14, ?, 4), float32], Tensor[(4, 2, 6), float64], Tensor[(1430, ?), float32], Tensor[(1430, 1792), bool]) */
}

def @func_1601() -> Tensor[(4, 2, 6), float64] {
  %393 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 2, 6), float64] */, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
  sqrt(%393) /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_2841() -> Tensor[(4, 2, 6), float64] {
  @func_2839() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_4499() -> Tensor[(324), uint16] {
  %394 = @func_3878() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */;
  %394.1
}

def @func_5720() -> (Tensor[(4, 2, 6), float64],) {
  @func_5718() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_8431() -> Tensor[(4, 2, 6), float64] {
  @func_8429() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_3047(%var_3046: Tensor[(675), float32]) -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(675), float32]) {
  %403 = fn (%var_3041: Tensor[(675), float32]) -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(675), float32]) {
    %395 = @func_2600() /* ty=Tensor[(4, 2, 6), float64] */;
    %396 = cast(%395, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
    %397 = @func_1801() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %398 = cast(%var_3041, dtype="float32") /* ty=Tensor[(675), float32] */;
    %399 = reshape(%398, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), float32] */;
    %400 = tan(%396) /* ty=Tensor[(4, 2, 6), float32] */;
    %401 = %397.0;
    %402 = @func_754(%399) /* ty=Tensor[(9, 5, 15), float32] */;
    (%400, %401, %402, %var_3041)
  };
  %403(%var_3046) /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(675), float32]) */
}

def @func_4196() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %411 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
    %404 = @func_2839() /* ty=Tensor[(4, 2, 6), float64] */;
    %405 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 2, 6), float64] */, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
    %406 = shape_of(%404, dtype="int32") /* ty=Tensor[(3), int32] */;
    %407 = cast(%404, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
    %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %409 = @func_2498() /* ty=Tensor[(4, 2, 6), float64] */;
    %410 = floor_mod(%407, %408) /* ty=Tensor[(4, 2, 6), float64] */;
    (%409, %410)
  };
  %411() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_4206(%var_4199: Tensor[(16, 10, 11), float32]) -> Tensor[(16, 10, 11), float32] {
  %412 = cast(%var_4199, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  acosh(%412) /* ty=Tensor[(16, 10, 11), float32] */
}

def @func_9620() -> (Tensor[(4, 2, 6), float64],) {
  %413 = @func_5718() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %414 = %413.0;
  (%414,)
}

def @func_6093() -> Tensor[(4, 2, 6), float64] {
  @func_6091() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_7227(%var_7226: Tensor[(20), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) {
  %422 = fn (%var_7200: Tensor[(20), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) {
    %415 = @func_4195() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
    %416 = cast(%var_7200, dtype="float32") /* ty=Tensor[(20), float32] */;
    %417 = reshape(%416, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float32] */;
    %418 = @func_808(%417) /* ty=(Tensor[(5, 2, 2), float32],) */;
    %419 = @func_5497() /* ty=Tensor[(4, 2, 6), float64] */;
    %420 = %415.1;
    %421 = %418.0;
    (%419, %420, %421, %var_7200)
  };
  %422(%var_7226) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) */
}

def @func_9769() -> (Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64]) {
  @func_9767() /* ty=(Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64]) */
}

def @func_3891() -> (Tensor[(4, 2, 6), float32],) {
  %423 = @func_3594() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %424 = %423.0;
  (%424,)
}

def @func_5648() -> (Tensor[(324), uint16], Tensor[(4, 2, 6), float64]) {
  @func_5646() /* ty=(Tensor[(324), uint16], Tensor[(4, 2, 6), float64]) */
}

def @func_5349() -> Tensor[(4, 2, 6), float64] {
  @func_2812() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_11262() -> Tensor[(4, 2, 6), float64] {
  @func_11260() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_8526() -> Tensor[(4, 2, 6), float64] {
  @func_6091() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_11791() -> Tensor[(4, 2, 6), float64] {
  %425 = fn () -> Tensor[(4, 2, 6), float64] {
    @func_11405() /* ty=Tensor[(4, 2, 6), float64] */
  };
  %425() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_8659() -> Tensor[(9, 5, 15), float32] {
  @func_8657() /* ty=Tensor[(9, 5, 15), float32] */
}

def @func_3339(%var_3337: Tensor[(20), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64], Tensor[(4, 2, 6), float64]) {
  @func_3336(%var_3337) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_8085() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %426 = @func_8016() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %427 = @func_2425() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %428 = @func_5762() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %429 = %426.0;
  %430 = %427.0;
  %431 = %428.0;
  (%429, %430, %431)
}

def @func_6058() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  @func_6056() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_8087() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  @func_8085() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_3217(%var_3208: Tensor[(4, 2, 6), float64]) -> (Tensor[(9, 3, 12), float32], Tensor[(9, 3, 12), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool]) {
  %432 = @func_2696() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) */;
  %433 = %432.3;
  %434 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 3, 12), float64] */, dtype="float32") /* ty=Tensor[(9, 3, 12), float32] */;
  %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%433, dtype="float32") /* ty=Tensor[(9, 3, 12), float32] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %438 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 3, 12), float64] */, dtype="float32") /* ty=Tensor[(9, 3, 12), float32] */;
  %439 = @func_1979() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %440 = @func_1779() /* ty=Tensor[(4, 2, 6), float64] */;
  %441 = cast(%var_3208, dtype="bool") /* ty=Tensor[(4, 2, 6), bool] */;
  %442 = shape_of(%440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%440, dtype="bool") /* ty=Tensor[(4, 2, 6), bool] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %445 = divide(%436, %437) /* ty=Tensor[(9, 3, 12), float32] */;
  %446 = log10(%438) /* ty=Tensor[(9, 3, 12), float32] */;
  %447 = %439.0;
  %448 = greater(%443, %444) /* ty=Tensor[(4, 2, 6), bool] */;
  (%445, %446, %447, %448)
}

def @func_3397() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  @func_3395() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_11260() -> Tensor[(4, 2, 6), float64] {
  @func_4644() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_4405() -> Tensor[(4, 2, 6), float64] {
  %449 = @func_2926() /* ty=Tensor[(4, 2, 6), float64] */;
  %450 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 2, 6), float64] */, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
  %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%449, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%452, %453) /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_9637() -> Tensor[(8, 1, 2), float32] {
  @func_9635() /* ty=Tensor[(8, 1, 2), float32] */
}

def @func_9767() -> (Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64]) {
  %454 = @func_9262() /* ty=(Tensor[(324), uint16],) */;
  %455 = @func_5179() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %456 = @func_6475() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(1430), float32], Tensor[(20), float32], Tensor[(5, 2, 2), float64]) */;
  %457 = %454.0;
  %458 = %455.0;
  %459 = %456.4;
  (%457, %458, %459)
}

def @func_10392() -> (Tensor[(4, 2, 6), float64],) {
  %460 = @func_5697() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32]) */;
  %461 = %460.1;
  (%461,)
}

def @func_10897(%var_10877: Tensor[(14, 16, 12), int8]) -> (Tensor[(14, 16, 12), bool], Tensor[(4, 2, 6), float64]) {
  %462 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 16, 12), int8] */, dtype="bool") /* ty=Tensor[(14, 16, 12), bool] */;
  %463 = shape_of(%var_10877, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%var_10877, dtype="bool") /* ty=Tensor[(14, 16, 12), bool] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %466 = greater_equal(%464, %465) /* ty=Tensor[(14, 16, 12), bool] */;
  %467 = @func_2498() /* ty=Tensor[(4, 2, 6), float64] */;
  (%466, %467)
}

def @func_4622() -> Tensor[(4, 2, 6), float64] {
  @func_2839() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_6477() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(1430), float32], Tensor[(20), float32], Tensor[(5, 2, 2), float64]) {
  @func_6475() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(1430), float32], Tensor[(20), float32], Tensor[(5, 2, 2), float64]) */
}

def @func_2427() -> (Tensor[(4, 2, 6), float32],) {
  @func_2425() /* ty=(Tensor[(4, 2, 6), float32],) */
}

def @func_6903() -> Tensor[(4, 2, 6), float64] {
  @func_5497() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_6594() -> (Tensor[(4, 2, 6), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  @func_6592() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_3167() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64]) {
  %476 = fn () -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64]) {
    %468 = @func_2278() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
    %469 = %468.0;
    %470 = cast(%469, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
    %471 = reshape(%470, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float32] */;
    %472 = @func_1928(%471) /* ty=(Tensor[(4, 2, 6), uint64], Tensor[(4, 2, 6), uint16]) */;
    %473 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %474 = %472.1;
    %475 = %473.0;
    (%469, %474, %475)
  };
  %476() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64]) */
}

def @func_8713() -> (Tensor[(5, 2, 14), float64], Tensor[(15, 3, 16), float32]) {
  %477 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 2, 14), float64] */, dtype="float64") /* ty=Tensor[(5, 2, 14), float64] */;
  %478 = @func_5557() /* ty=(Tensor[(15, 3, 16), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %479 = tan(%477) /* ty=Tensor[(5, 2, 14), float64] */;
  %480 = %478.1;
  (%479, %480)
}

def @func_810(%var_809: Tensor[(5, 2, 2), float32]) -> (Tensor[(5, 2, 2), float32],) {
  %483 = fn (%var_803: Tensor[(5, 2, 2), float32]) -> (Tensor[(5, 2, 2), float32],) {
    %481 = cast(%var_803, dtype="float32") /* ty=Tensor[(5, 2, 2), float32] */;
    %482 = asin(%481) /* ty=Tensor[(5, 2, 2), float32] */;
    (%482,)
  };
  %483(%var_809) /* ty=(Tensor[(5, 2, 2), float32],) */
}

def @func_8657() -> Tensor[(9, 5, 15), float32] {
  %484 = @func_4763() /* ty=(Tensor[(9, 3, 12), float64], Tensor[(2, 4, 16), int8], Tensor[(9, 5, 15), float32], Tensor[(715, 2), float32], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32], Tensor[(128), uint64]) */;
  %484.2
}

def @func_7284() -> (Tensor[(4, 2, 6), float64],) {
  %487 = fn () -> (Tensor[(4, 2, 6), float64],) {
    %485 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %486 = %485.0;
    (%486,)
  };
  %487() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_11011(%var_11009: Tensor[(5, 13, 11), float32], %var_11010: Tensor[(5, 13, 11), float64]) -> (Tensor[(5, 13, 11), float32], Tensor[(4, 2, 6), float32], Tensor[(675), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(5, 13, 11), uint32]) {
  %508 = fn (%var_10927: Tensor[(5, 13, 11), float32], %var_10988: Tensor[(5, 13, 11), float64]) -> (Tensor[(5, 13, 11), float32], Tensor[(4, 2, 6), float32], Tensor[(675), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(5, 13, 11), uint32]) {
    %488 = cast(%var_10927, dtype="float32") /* ty=Tensor[(5, 13, 11), float32] */;
    %489 = cast(meta[relay.Constant][25] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
    %490 = reshape(%489, newshape=[675]) /* ty=Tensor[(675), float32] */;
    %491 = @func_8116(%490) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(675), float32]) */;
    %492 = @func_4319() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32]) */;
    %493 = @func_3594() /* ty=(Tensor[(4, 2, 6), float32],) */;
    %494 = cast(%var_10927, dtype="float64") /* ty=Tensor[(5, 13, 11), float64] */;
    %495 = tan(%494) /* ty=Tensor[(5, 13, 11), float64] */;
    %496 = cast(%495, dtype="float64") /* ty=Tensor[(5, 13, 11), float64] */;
    %497 = atan(%496) /* ty=Tensor[(5, 13, 11), float64] */;
    %498 = cast(%var_10988, dtype="uint32") /* ty=Tensor[(5, 13, 11), uint32] */;
    %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
    %500 = cast(%497, dtype="uint32") /* ty=Tensor[(5, 13, 11), uint32] */;
    %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %502 = sin(%488) /* ty=Tensor[(5, 13, 11), float32] */;
    %503 = %491.1;
    %504 = %492.0;
    %505 = %493.0;
    %506 = @func_2799() /* ty=Tensor[(4, 2, 6), float64] */;
    %507 = bitwise_xor(%500, %501) /* ty=Tensor[(5, 13, 11), uint32] */;
    (%502, %503, meta[relay.Constant][25] /* ty=Tensor[(675), float32] */, %504, %505, %506, %507)
  };
  %508(%var_11009, %var_11010) /* ty=(Tensor[(5, 13, 11), float32], Tensor[(4, 2, 6), float32], Tensor[(675), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(5, 13, 11), uint32]) */
}

def @func_11341(%var_11339: Tensor[(1430), float32], %var_11340: Tensor[(9, 100), float32]) -> (Tensor[(11, 13, 10), int64], Tensor[(1430), float32], Tensor[(8, 4, 3), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 100), float32], Tensor[(14, 1, 4), float32]) {
  @func_11337(%var_11339, %var_11340) /* ty=(Tensor[(11, 13, 10), int64], Tensor[(1430), float32], Tensor[(8, 4, 3), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 100), float32], Tensor[(14, 1, 4), float32]) */
}

def @func_9208(%var_9196: Tensor[(1, 900), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(1, 900), float32], Tensor[(9, 3, 12), float64]) {
  %509 = @func_5146() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */;
  %510 = @func_5646() /* ty=(Tensor[(324), uint16], Tensor[(4, 2, 6), float64]) */;
  %511 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %512 = cast(%var_9196, dtype="float32") /* ty=Tensor[(1, 900), float32] */;
  %513 = reshape(%512, newshape=[1, 900]) /* ty=Tensor[(1, 900), float32] */;
  %514 = @func_6400(%513) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(15, 6, 10), float32], Tensor[(1, 900), float32]) */;
  %515 = %510.0;
  %516 = cast(%515, dtype="uint16") /* ty=Tensor[(324), uint16] */;
  %517 = reshape(%516, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint16] */;
  %518 = @func_1060(%517) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(9, 5, 15), float32], Tensor[(675, 1), float32]) */;
  %519 = @func_5497() /* ty=Tensor[(4, 2, 6), float64] */;
  %520 = %509.0;
  %521 = %511.0;
  %522 = %514.1;
  %523 = %518.0;
  (%519, %520, %515, %521, %522, %var_9196, %523)
}

def @func_5498() -> Tensor[(4, 2, 6), float64] {
  %524 = fn () -> Tensor[(4, 2, 6), float64] {
    @func_4832() /* ty=Tensor[(4, 2, 6), float64] */
  };
  %524() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_8899(%var_8843: Tensor[(13, 16, 16), float32], %var_8850: Tensor[(324), uint16]) -> (Tensor[(13, 16, 16), float32], Tensor[(4, 2, 6), float64], Tensor[(900), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(1792), float32]) {
  %525 = cast(%var_8843, dtype="float32") /* ty=Tensor[(13, 16, 16), float32] */;
  %526 = @func_5748() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %527 = cast(meta[relay.Constant][26] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %528 = cast(meta[relay.Constant][26] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %529 = cast(%var_8850, dtype="uint16") /* ty=Tensor[(324), uint16] */;
  %530 = reshape(%527, newshape=[16, 7, 16]) /* ty=Tensor[(16, 7, 16), float64] */;
  %531 = reshape(%528, newshape=[16, 7, 16]) /* ty=Tensor[(16, 7, 16), float64] */;
  %532 = reshape(%529, newshape=[324]) /* ty=Tensor[(324), uint16] */;
  %533 = @func_6526(%530, %531, %532) /* ty=(Tensor[(16, 7, 16), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(900), float32]) */;
  %534 = cast(meta[relay.Constant][27] /* ty=Tensor[(1792), float64] */, dtype="bool") /* ty=Tensor[(1792), bool] */;
  %535 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(1792), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %536 = cast(meta[relay.Constant][26] /* ty=Tensor[(1792), float64] */, dtype="bool") /* ty=Tensor[(1792), bool] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?), bool] */;
  %538 = greater(%536, %537) /* ty=Tensor[(1792), bool] */;
  %539 = cast(%538, dtype="float32") /* ty=Tensor[(1792), float32] */;
  %540 = rsqrt(%525) /* ty=Tensor[(13, 16, 16), float32] */;
  %541 = %526.1;
  %542 = %533.6;
  %543 = @func_7980() /* ty=Tensor[(4, 2, 6), float64] */;
  %544 = erf(%539) /* ty=Tensor[(1792), float32] */;
  (%540, %541, %542, %var_8850, %543, %544)
}

def @func_1928(%var_1909: Tensor[(4, 2, 6), float32]) -> (Tensor[(4, 2, 6), uint64], Tensor[(4, 2, 6), uint16]) {
  %545 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %546 = %545.0;
  %547 = cast(%546, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
  %548 = log2(%547) /* ty=Tensor[(4, 2, 6), float32] */;
  %549 = @func_1601() /* ty=Tensor[(4, 2, 6), float64] */;
  %550 = cast(%549, dtype="uint64") /* ty=Tensor[(4, 2, 6), uint64] */;
  %551 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %552 = cast(%548, dtype="uint64") /* ty=Tensor[(4, 2, 6), uint64] */;
  %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %554 = cast(%var_1909, dtype="uint16") /* ty=Tensor[(4, 2, 6), uint16] */;
  %555 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %556 = cast(%548, dtype="uint16") /* ty=Tensor[(4, 2, 6), uint16] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %558 = bitwise_or(%552, %553) /* ty=Tensor[(4, 2, 6), uint64] */;
  %559 = logical_xor(%556, %557) /* ty=Tensor[(4, 2, 6), uint16] */;
  (%558, %559)
}

def @func_2852() -> Tensor[(4, 2, 6), float64] {
  @func_1601() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_6858() -> (Tensor[(4, 2, 6), float64], Tensor[(16, 10, 11), float32], Tensor[(1760), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %568 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(16, 10, 11), float32], Tensor[(1760), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
    %560 = @func_4195() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
    %561 = cast(meta[relay.Constant][28] /* ty=Tensor[(1760), float32] */, dtype="float32") /* ty=Tensor[(1760), float32] */;
    %562 = reshape(%561, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
    %563 = @func_6056() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
    %564 = %560.1;
    %565 = @func_4206(%562) /* ty=Tensor[(16, 10, 11), float32] */;
    %566 = %563.1;
    %567 = @func_5497() /* ty=Tensor[(4, 2, 6), float64] */;
    (%564, %565, meta[relay.Constant][28] /* ty=Tensor[(1760), float32] */, %566, %567)
  };
  %568() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(16, 10, 11), float32], Tensor[(1760), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_9263() -> (Tensor[(324), uint16],) {
  %571 = fn () -> (Tensor[(324), uint16],) {
    %569 = @func_3878() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */;
    %570 = %569.1;
    (%570,)
  };
  %571() /* ty=(Tensor[(324), uint16],) */
}

def @func_8982() -> (Tensor[(4, 2, 6), float64], Tensor[(1430), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) {
  %572 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %573 = cast(meta[relay.Constant][29] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %574 = reshape(%573, newshape=[1430]) /* ty=Tensor[(1430), float32] */;
  %575 = @func_6324(%574) /* ty=(Tensor[(4, 2, 6), float32], Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float64]) */;
  %576 = @func_6927() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %577 = @func_3891() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %578 = %572.0;
  %579 = %575.2;
  %580 = %576.1;
  %581 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
  %582 = %577.0;
  (%578, %579, meta[relay.Constant][29] /* ty=Tensor[(1430), float32] */, %580, %581, %582)
}

def @func_9143() -> Tensor[(4, 2, 6), uint64] {
  %584 = fn () -> Tensor[(4, 2, 6), uint64] {
    %583 = @func_5146() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */;
    %583.1
  };
  %584() /* ty=Tensor[(4, 2, 6), uint64] */
}

def @func_9867() -> (Tensor[(4, 2, 6), float64],) {
  %585 = @func_2852() /* ty=Tensor[(4, 2, 6), float64] */;
  (%585,)
}

def @func_5268() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  @func_5266() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_10289() -> Tensor[(4, 2, 6), float64] {
  @func_10287() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_2786() -> Tensor[(4, 2, 6), float64] {
  @func_2784() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_9334(%var_9332: Tensor[(9, 6, 16), int32], %var_9333: Tensor[(9, 6, 16), int32]) -> (Tensor[(9, 6, 16), int8], Tensor[(9, 6, 16), bool]) {
  %601 = fn (%var_9302: Tensor[(9, 6, 16), int32], %var_9303: Tensor[(9, 6, 16), int32]) -> (Tensor[(9, 6, 16), int8], Tensor[(9, 6, 16), bool]) {
    %586 = cast(%var_9302, dtype="int8") /* ty=Tensor[(9, 6, 16), int8] */;
    %587 = shape_of(%var_9303, dtype="int32") /* ty=Tensor[(3), int32] */;
    %588 = cast(%var_9303, dtype="int8") /* ty=Tensor[(9, 6, 16), int8] */;
    %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %590 = cast(%var_9303, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
    %591 = shape_of(%var_9302, dtype="int32") /* ty=Tensor[(3), int32] */;
    %592 = cast(%var_9302, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
    %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %594 = greater_equal(%592, %593) /* ty=Tensor[(9, 6, 16), bool] */;
    %595 = cast(%594, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
    %596 = shape_of(%var_9302, dtype="int32") /* ty=Tensor[(3), int32] */;
    %597 = cast(%var_9302, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
    %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %599 = logical_xor(%588, %589) /* ty=Tensor[(9, 6, 16), int8] */;
    %600 = equal(%597, %598) /* ty=Tensor[(9, 6, 16), bool] */;
    (%599, %600)
  };
  %601(%var_9332, %var_9333) /* ty=(Tensor[(9, 6, 16), int8], Tensor[(9, 6, 16), bool]) */
}

def @func_453(%var_451: Tensor[(9, 12, 3), bool], %var_452: Tensor[(9, 12, 3), bool]) -> (Tensor[(9, 12, 3), uint32], Tensor[(9, 12, 3), float32]) {
  %621 = fn (%var_395: Tensor[(9, 12, 3), bool], %var_396: Tensor[(9, 12, 3), bool]) -> (Tensor[(9, 12, 3), uint32], Tensor[(9, 12, 3), float32]) {
    %602 = cast(%var_395, dtype="float64") /* ty=Tensor[(9, 12, 3), float64] */;
    %603 = sqrt(%602) /* ty=Tensor[(9, 12, 3), float64] */;
    %604 = cast(%603, dtype="uint32") /* ty=Tensor[(9, 12, 3), uint32] */;
    %605 = shape_of(%var_395, dtype="int32") /* ty=Tensor[(3), int32] */;
    %606 = cast(%var_395, dtype="uint32") /* ty=Tensor[(9, 12, 3), uint32] */;
    %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %608 = cast(%var_396, dtype="bool") /* ty=Tensor[(9, 12, 3), bool] */;
    %609 = shape_of(%var_395, dtype="int32") /* ty=Tensor[(3), int32] */;
    %610 = cast(%var_395, dtype="bool") /* ty=Tensor[(9, 12, 3), bool] */;
    %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %612 = logical_or(%610, %611) /* ty=Tensor[(9, 12, 3), bool] */;
    %613 = cast(%612, dtype="float32") /* ty=Tensor[(9, 12, 3), float32] */;
    %614 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
    %615 = cast(%603, dtype="float32") /* ty=Tensor[(9, 12, 3), float32] */;
    %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %617 = power(%615, %616) /* ty=Tensor[(9, 12, 3), float32] */;
    %618 = cast(%617, dtype="float32") /* ty=Tensor[(9, 12, 3), float32] */;
    %619 = bitwise_and(%606, %607) /* ty=Tensor[(9, 12, 3), uint32] */;
    %620 = tan(%618) /* ty=Tensor[(9, 12, 3), float32] */;
    (%619, %620)
  };
  %621(%var_451, %var_452) /* ty=(Tensor[(9, 12, 3), uint32], Tensor[(9, 12, 3), float32]) */
}

def @func_6700() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  @func_6698() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_3777(%var_3730: Tensor[(1, 10, 12), float64], %var_3751: Tensor[(225, 3), float32]) -> (Tensor[(6, 10, 12), float64], Tensor[(4, 2, 6), float32], Tensor[(225, 3), float32], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64]) {
  %622 = cast(%var_3730, dtype="float64") /* ty=Tensor[(1, 10, 12), float64] */;
  %623 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 10, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 12), float64] */;
  %624 = cast(%var_3751, dtype="float32") /* ty=Tensor[(225, 3), float32] */;
  %625 = reshape(%624, newshape=[675]) /* ty=Tensor[(675), float32] */;
  %626 = @func_3045(%625) /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(675), float32]) */;
  %627 = @func_3166() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64]) */;
  %628 = @func_3010() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %629 = floor_divide(%622, %623) /* ty=Tensor[(6, 10, 12), float64] */;
  %630 = %626.0;
  %631 = %627.1;
  %632 = %628.0;
  (%629, %630, %var_3751, %631, %632)
}

def @func_4765() -> (Tensor[(9, 3, 12), float64], Tensor[(2, 4, 16), int8], Tensor[(9, 5, 15), float32], Tensor[(715, 2), float32], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32], Tensor[(128), uint64]) {
  @func_4763() /* ty=(Tensor[(9, 3, 12), float64], Tensor[(2, 4, 16), int8], Tensor[(9, 5, 15), float32], Tensor[(715, 2), float32], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32], Tensor[(128), uint64]) */
}

def @func_7237() -> Tensor[(324), uint16] {
  %634 = fn () -> Tensor[(324), uint16] {
    %633 = @func_3878() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */;
    %633.1
  };
  %634() /* ty=Tensor[(324), uint16] */
}

def @func_4120() -> (Tensor[(4, 2, 6), float64],) {
  %635 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
  (%635,)
}

def @func_2279() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %640 = fn () -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
    %636 = @func_1779() /* ty=Tensor[(4, 2, 6), float64] */;
    %637 = cast(%636, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
    %638 = acos(%637) /* ty=Tensor[(4, 2, 6), float32] */;
    %639 = @func_1779() /* ty=Tensor[(4, 2, 6), float64] */;
    (%638, %639)
  };
  %640() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_10900(%var_10898: Tensor[(14, 16, 12), int8]) -> (Tensor[(14, 16, 12), bool], Tensor[(4, 2, 6), float64]) {
  @func_10897(%var_10898) /* ty=(Tensor[(14, 16, 12), bool], Tensor[(4, 2, 6), float64]) */
}

def @func_1846() -> (Tensor[(4, 2, 6), float64],) {
  @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_2425() -> (Tensor[(4, 2, 6), float32],) {
  %641 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %642 = %641.0;
  %643 = cast(%642, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
  %644 = exp(%643) /* ty=Tensor[(4, 2, 6), float32] */;
  (%644,)
}

def @func_4100(%var_4098: Tensor[(2, 4, 16), int8], %var_4099: Tensor[(2, 4, 16), int8]) -> Tensor[(2, 4, 16), int8] {
  %649 = fn (%var_4076: Tensor[(2, 4, 16), int8], %var_4077: Tensor[(2, 4, 16), int8]) -> Tensor[(2, 4, 16), int8] {
    %645 = cast(%var_4077, dtype="int8") /* ty=Tensor[(2, 4, 16), int8] */;
    %646 = shape_of(%var_4076, dtype="int32") /* ty=Tensor[(3), int32] */;
    %647 = cast(%var_4076, dtype="int8") /* ty=Tensor[(2, 4, 16), int8] */;
    %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    add(%647, %648) /* ty=Tensor[(2, 4, 16), int8] */
  };
  %649(%var_4098, %var_4099) /* ty=Tensor[(2, 4, 16), int8] */
}

def @func_6239() -> (Tensor[(4, 2, 6), float64],) {
  %650 = @func_5497() /* ty=Tensor[(4, 2, 6), float64] */;
  (%650,)
}

def @func_11708() -> (Tensor[(9, 5, 15), float32], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) {
  %656 = fn () -> (Tensor[(9, 5, 15), float32], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) {
    %651 = cast(meta[relay.Constant][31] /* ty=Tensor[(20), float32] */, dtype="float32") /* ty=Tensor[(20), float32] */;
    %652 = reshape(%651, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float32] */;
    %653 = @func_808(%652) /* ty=(Tensor[(5, 2, 2), float32],) */;
    %654 = @func_8657() /* ty=Tensor[(9, 5, 15), float32] */;
    %655 = %653.0;
    (%654, %655, meta[relay.Constant][31] /* ty=Tensor[(20), float32] */)
  };
  %656() /* ty=(Tensor[(9, 5, 15), float32], Tensor[(5, 2, 2), float32], Tensor[(20), float32]) */
}

def @func_11537() -> Tensor[(4, 2, 6), int32] {
  @func_11535() /* ty=Tensor[(4, 2, 6), int32] */
}

def @func_10394() -> (Tensor[(4, 2, 6), float64],) {
  @func_10392() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_3454(%var_3440: Tensor[(8, 4, 15), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(8, 4, 15), uint32], Tensor[(8, 4, 15), float32]) {
  %657 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %658 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 4, 15), float32] */, dtype="float32") /* ty=Tensor[(8, 4, 15), float32] */;
  %659 = exp(%658) /* ty=Tensor[(8, 4, 15), float32] */;
  %660 = cast(%var_3440, dtype="uint32") /* ty=Tensor[(8, 4, 15), uint32] */;
  %661 = shape_of(%659, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%659, dtype="uint32") /* ty=Tensor[(8, 4, 15), uint32] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %664 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 4, 15), float32] */, dtype="float64") /* ty=Tensor[(8, 4, 15), float64] */;
  %665 = sigmoid(%664) /* ty=Tensor[(8, 4, 15), float64] */;
  %666 = cast(%665, dtype="float32") /* ty=Tensor[(8, 4, 15), float32] */;
  %667 = %657.0;
  %668 = @func_2799() /* ty=Tensor[(4, 2, 6), float64] */;
  %669 = minimum(%662, %663) /* ty=Tensor[(8, 4, 15), uint32] */;
  %670 = sinh(%666) /* ty=Tensor[(8, 4, 15), float32] */;
  (%667, %668, %669, %670)
}

def @func_6592() -> (Tensor[(4, 2, 6), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %671 = @func_3096() /* ty=(Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */;
  %672 = @func_5557() /* ty=(Tensor[(15, 3, 16), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %673 = @func_2703() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %674 = @func_3096() /* ty=(Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */;
  %675 = %671.2;
  %676 = %672.1;
  %677 = %673.0;
  %678 = %674.0;
  %679 = @func_2799() /* ty=Tensor[(4, 2, 6), float64] */;
  %680 = @func_4832() /* ty=Tensor[(4, 2, 6), float64] */;
  %681 = @func_1870() /* ty=Tensor[(4, 2, 6), float64] */;
  (%675, %676, %677, %678, %679, %680, %681)
}

def @func_2022() -> (Tensor[(4, 2, 6), float64],) {
  %684 = fn () -> (Tensor[(4, 2, 6), float64],) {
    %682 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %683 = %682.0;
    (%683,)
  };
  %684() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_9548() -> (Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) {
  @func_9546() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */
}

def @func_1844() -> (Tensor[(4, 2, 6), float64],) {
  %685 = @func_1722() /* ty=Tensor[(4, 2, 6), float64] */;
  (%685,)
}

def @func_10284() -> (Tensor[(4, 2, 6), float32],) {
  %688 = fn () -> (Tensor[(4, 2, 6), float32],) {
    %686 = @func_5383() /* ty=(Tensor[(4, 2, 6), float32],) */;
    %687 = %686.0;
    (%687,)
  };
  %688() /* ty=(Tensor[(4, 2, 6), float32],) */
}

def @func_11170() -> Tensor[(4, 2, 6), float64] {
  %690 = fn () -> Tensor[(4, 2, 6), float64] {
    %689 = @func_9468() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %689.0
  };
  %690() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_3356() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %691 = @func_3096() /* ty=(Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */;
  %692 = @func_2926() /* ty=Tensor[(4, 2, 6), float64] */;
  %693 = %691.2;
  (%692, %693)
}

def @func_11064() -> (Tensor[(4, 2, 6), float64],) {
  %694 = @func_5762() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %695 = %694.0;
  (%695,)
}

def @func_11430() -> (Tensor[(4, 2, 6), float64],) {
  %696 = @func_3505() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %697 = %696.0;
  (%697,)
}

def @func_5697() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32]) {
  %698 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %699 = @func_4763() /* ty=(Tensor[(9, 3, 12), float64], Tensor[(2, 4, 16), int8], Tensor[(9, 5, 15), float32], Tensor[(715, 2), float32], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32], Tensor[(128), uint64]) */;
  %700 = %698.0;
  %701 = @func_5115() /* ty=Tensor[(4, 2, 6), float64] */;
  %702 = %699.5;
  (%700, %701, %702)
}

def @func_9993() -> Tensor[(4, 2, 6), float64] {
  %703 = fn () -> Tensor[(4, 2, 6), float64] {
    @func_9276() /* ty=Tensor[(4, 2, 6), float64] */
  };
  %703() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_5128() -> (Tensor[(324), uint16],) {
  %705 = fn () -> (Tensor[(324), uint16],) {
    %704 = @func_4499() /* ty=Tensor[(324), uint16] */;
    (%704,)
  };
  %705() /* ty=(Tensor[(324), uint16],) */
}

def @func_9211(%var_9209: Tensor[(1, 900), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(1, 900), float32], Tensor[(9, 3, 12), float64]) {
  @func_9208(%var_9209) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(1, 900), float32], Tensor[(9, 3, 12), float64]) */
}

def @func_9958(%var_9956: Tensor[(3, 300), float32], %var_9957: Tensor[(20, 1), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(15, 6, 10), float32], Tensor[(3, 300), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64], Tensor[(20, 1), float32], Tensor[(14, 1, 4), float32]) {
  %723 = fn (%var_9895: Tensor[(3, 300), float32], %var_9947: Tensor[(20, 1), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(15, 6, 10), float32], Tensor[(3, 300), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64], Tensor[(20, 1), float32], Tensor[(14, 1, 4), float32]) {
    %706 = @func_7660() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %707 = cast(%var_9895, dtype="float32") /* ty=Tensor[(3, 300), float32] */;
    %708 = reshape(%707, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), float32] */;
    %709 = @func_2207(%708) /* ty=(Tensor[(15, 6, 10), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64]) */;
    %710 = @func_3555() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %711 = cast(%var_9947, dtype="float32") /* ty=Tensor[(20, 1), float32] */;
    %712 = reshape(%711, newshape=[20]) /* ty=Tensor[(20), float32] */;
    %713 = @func_3336(%712) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64], Tensor[(4, 2, 6), float64]) */;
    %714 = @func_7823() /* ty=(Tensor[(14, 1, 4), float32],) */;
    %715 = %714.0;
    %716 = cast(%715, dtype="float32") /* ty=Tensor[(14, 1, 4), float32] */;
    %717 = %706.0;
    %718 = %709.0;
    %719 = %710.0;
    %720 = @func_7796() /* ty=Tensor[(4, 2, 6), float64] */;
    %721 = %713.1;
    %722 = atanh(%716) /* ty=Tensor[(14, 1, 4), float32] */;
    (%717, %718, %var_9895, %719, %720, %721, %var_9947, %722)
  };
  %723(%var_9956, %var_9957) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(15, 6, 10), float32], Tensor[(3, 300), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64], Tensor[(20, 1), float32], Tensor[(14, 1, 4), float32]) */
}

def @func_1063(%var_1061: Tensor[(9, 3, 12), uint16]) -> (Tensor[(9, 3, 12), float64], Tensor[(9, 5, 15), float32], Tensor[(675, 1), float32]) {
  @func_1060(%var_1061) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(9, 5, 15), float32], Tensor[(675, 1), float32]) */
}

def @func_2812() -> Tensor[(4, 2, 6), float64] {
  @func_2498() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_10383() -> (Tensor[(324), uint16],) {
  %725 = fn () -> (Tensor[(324), uint16],) {
    %724 = @func_7558() /* ty=Tensor[(324), uint16] */;
    (%724,)
  };
  %725() /* ty=(Tensor[(324), uint16],) */
}

def @func_10867(%var_10865: Tensor[(11, 13, 8), uint32], %var_10866: Tensor[(11, 13, 8), uint32]) -> (Tensor[(11, 13, 8), bool],) {
  %731 = fn (%var_10857: Tensor[(11, 13, 8), uint32], %var_10858: Tensor[(11, 13, 8), uint32]) -> (Tensor[(11, 13, 8), bool],) {
    %726 = cast(%var_10858, dtype="bool") /* ty=Tensor[(11, 13, 8), bool] */;
    %727 = shape_of(%var_10857, dtype="int32") /* ty=Tensor[(3), int32] */;
    %728 = cast(%var_10857, dtype="bool") /* ty=Tensor[(11, 13, 8), bool] */;
    %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %730 = greater_equal(%728, %729) /* ty=Tensor[(11, 13, 8), bool] */;
    (%730,)
  };
  %731(%var_10865, %var_10866) /* ty=(Tensor[(11, 13, 8), bool],) */
}

def @func_6402(%var_6401: Tensor[(1, 900), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(15, 6, 10), float32], Tensor[(1, 900), float32]) {
  %741 = fn (%var_6387: Tensor[(1, 900), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(15, 6, 10), float32], Tensor[(1, 900), float32]) {
    %732 = @func_1979() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %733 = %732.0;
    %734 = cast(%733, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
    %735 = cast(%var_6387, dtype="float32") /* ty=Tensor[(1, 900), float32] */;
    %736 = reshape(%735, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), float32] */;
    %737 = @func_2207(%736) /* ty=(Tensor[(15, 6, 10), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64]) */;
    %738 = @func_6091() /* ty=Tensor[(4, 2, 6), float64] */;
    %739 = cos(%734) /* ty=Tensor[(4, 2, 6), float64] */;
    %740 = %737.0;
    (%738, %739, %740, %var_6387)
  };
  %741(%var_6401) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(15, 6, 10), float32], Tensor[(1, 900), float32]) */
}

def @func_6241() -> (Tensor[(4, 2, 6), float64],) {
  @func_6239() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_8628() -> (Tensor[(4, 2, 6), float64], Tensor[(20), float32], Tensor[(4, 2, 6), float64]) {
  %748 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(20), float32], Tensor[(4, 2, 6), float64]) {
    %742 = @func_8016() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
    %743 = @func_6475() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(1430), float32], Tensor[(20), float32], Tensor[(5, 2, 2), float64]) */;
    %744 = @func_4120() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %745 = %742.1;
    %746 = %743.3;
    %747 = %744.0;
    (%745, %746, %747)
  };
  %748() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(20), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_2209(%var_2208: Tensor[(15, 6, 10), float32]) -> (Tensor[(15, 6, 10), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64]) {
  %754 = fn (%var_2177: Tensor[(15, 6, 10), float32]) -> (Tensor[(15, 6, 10), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64]) {
    %749 = cast(%var_2177, dtype="float32") /* ty=Tensor[(15, 6, 10), float32] */;
    %750 = @func_1957() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint16]) */;
    %751 = sqrt(%749) /* ty=Tensor[(15, 6, 10), float32] */;
    %752 = @func_1870() /* ty=Tensor[(4, 2, 6), float64] */;
    %753 = %750.1;
    (%751, %752, %753)
  };
  %754(%var_2208) /* ty=(Tensor[(15, 6, 10), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64]) */
}

def @func_2823() -> Tensor[(4, 2, 6), float64] {
  %756 = fn () -> Tensor[(4, 2, 6), float64] {
    %755 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %755.0
  };
  %756() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_6905() -> Tensor[(4, 2, 6), float64] {
  @func_6903() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_1959() -> (Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint16]) {
  @func_1957() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint16]) */
}

def @func_11681() -> (Tensor[(4, 2, 6), float64], Tensor[(900), float32], Tensor[(900), float32]) {
  @func_11679() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(900), float32], Tensor[(900), float32]) */
}

def @func_5179() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %757 = @func_1801() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %758 = %757.0;
  %759 = @func_4405() /* ty=Tensor[(4, 2, 6), float64] */;
  (%758, %759)
}

def @func_10151() -> (Tensor[(14, 1, 4), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %767 = fn () -> (Tensor[(14, 1, 4), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
    %760 = @func_7823() /* ty=(Tensor[(14, 1, 4), float32],) */;
    %761 = @func_6721() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
    %762 = @func_5146() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */;
    %763 = %760.0;
    %764 = @func_6903() /* ty=Tensor[(4, 2, 6), float64] */;
    %765 = %761.1;
    %766 = %762.0;
    (%763, %764, %765, %766)
  };
  %767() /* ty=(Tensor[(14, 1, 4), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_9622() -> (Tensor[(4, 2, 6), float64],) {
  @func_9620() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_5749() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %773 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
    %768 = @func_5146() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */;
    %769 = @func_3674() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) */;
    %770 = %768.0;
    %771 = %769.0;
    %772 = @func_2784() /* ty=Tensor[(4, 2, 6), float64] */;
    (%770, %771, %772)
  };
  %773() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_11097() -> (Tensor[(324), uint16],) {
  @func_11095() /* ty=(Tensor[(324), uint16],) */
}

def @func_11294() -> Tensor[(4, 2, 6), float64] {
  %774 = fn () -> Tensor[(4, 2, 6), float64] {
    @func_10734() /* ty=Tensor[(4, 2, 6), float64] */
  };
  %774() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_9468() -> (Tensor[(4, 2, 6), float64],) {
  %775 = @func_8257() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(14, ?, 4), float32], Tensor[(14, ?, 4), uint16], Tensor[(4, 2, 6), float64]) */;
  %776 = %775.3;
  (%776,)
}

def @func_3457(%var_3455: Tensor[(8, 4, 15), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(8, 4, 15), uint32], Tensor[(8, 4, 15), float32]) {
  @func_3454(%var_3455) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(8, 4, 15), uint32], Tensor[(8, 4, 15), float32]) */
}

def @func_6531(%var_6528: Tensor[(16, 7, 16), float64], %var_6529: Tensor[(16, 7, 16), float64], %var_6530: Tensor[(324), uint16]) -> (Tensor[(16, 7, 16), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(900), float32]) {
  @func_6526(%var_6528, %var_6529, %var_6530) /* ty=(Tensor[(16, 7, 16), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(900), float32]) */
}

def @func_9608() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(280), int8], Tensor[(4, 2, 6), float64], Tensor[(3, 108), float64]) {
  %777 = @func_1957() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64], Tensor[(324), uint16]) */;
  %778 = cast(meta[relay.Constant][33] /* ty=Tensor[(280), int8] */, dtype="int8") /* ty=Tensor[(280), int8] */;
  %779 = reshape(%778, newshape=[5, 8, 7]) /* ty=Tensor[(5, 8, 7), int8] */;
  %780 = @func_6149(%779) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(20), float32], Tensor[(4, 2, 6), float64], Tensor[(5, 8, 7), float32]) */;
  %781 = @func_2696() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) */;
  %782 = %781.2;
  %783 = cast(%782, dtype="float64") /* ty=Tensor[(3, 108), float64] */;
  %784 = %777.0;
  %785 = %780.1;
  %786 = @func_5349() /* ty=Tensor[(4, 2, 6), float64] */;
  %787 = asin(%783) /* ty=Tensor[(3, 108), float64] */;
  (%784, %785, meta[relay.Constant][33] /* ty=Tensor[(280), int8] */, %786, %787)
}

def @func_9635() -> Tensor[(8, 1, 2), float32] {
  %788 = @func_8038() /* ty=(Tensor[(8, 1, 2), float32], Tensor[(4, 2, 6), float64]) */;
  %788.0
}

def @func_1723() -> Tensor[(4, 2, 6), float64] {
  %789 = fn () -> Tensor[(4, 2, 6), float64] {
    @func_1601() /* ty=Tensor[(4, 2, 6), float64] */
  };
  %789() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_11361() -> Tensor[(5, 2, 2), float64] {
  %790 = @func_9767() /* ty=(Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64]) */;
  %790.2
}

def @func_8167(%var_8165: Tensor[(16, 16, 8), float32], %var_8166: Tensor[(715, 2), float32]) -> (Tensor[(16, 16, 8), float32], Tensor[(1430), float32], Tensor[(715, 2), float32], Tensor[(4, 2, 6), float64]) {
  %799 = fn (%var_8148: Tensor[(16, 16, 8), float32], %var_8158: Tensor[(715, 2), float32]) -> (Tensor[(16, 16, 8), float32], Tensor[(1430), float32], Tensor[(715, 2), float32], Tensor[(4, 2, 6), float64]) {
    %791 = cast(%var_8148, dtype="float32") /* ty=Tensor[(16, 16, 8), float32] */;
    %792 = cast(%var_8158, dtype="float32") /* ty=Tensor[(715, 2), float32] */;
    %793 = reshape(%792, newshape=[1430]) /* ty=Tensor[(1430), float32] */;
    %794 = @func_4668(%793) /* ty=(Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float32]) */;
    %795 = @func_3395() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
    %796 = asin(%791) /* ty=Tensor[(16, 16, 8), float32] */;
    %797 = %794.1;
    %798 = %795.1;
    (%796, %797, %var_8158, %798)
  };
  %799(%var_8165, %var_8166) /* ty=(Tensor[(16, 16, 8), float32], Tensor[(1430), float32], Tensor[(715, 2), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_3011() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %804 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
    %800 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %801 = @func_1979() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %802 = %800.0;
    %803 = %801.0;
    (%802, %803)
  };
  %804() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_10543() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %805 = @func_8085() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %806 = %805.1;
  %807 = @func_9276() /* ty=Tensor[(4, 2, 6), float64] */;
  (%806, %807)
}

def @func_5181() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  @func_5179() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_3336(%var_3302: Tensor[(20), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(5, 2, 2), float64], Tensor[(4, 2, 6), float64]) {
  %808 = cast(%var_3302, dtype="float32") /* ty=Tensor[(20), float32] */;
  %809 = reshape(%808, newshape=[5, 2, 2]) /* ty=Tensor[(5, 2, 2), float32] */;
  %810 = @func_808(%809) /* ty=(Tensor[(5, 2, 2), float32],) */;
  %811 = %810.0;
  %812 = cast(%var_3302, dtype="float64") /* ty=Tensor[(20), float64] */;
  %813 = shape_of(%811, dtype="int32") /* ty=Tensor[(3), int32] */;
  %814 = cast(%811, dtype="float64") /* ty=Tensor[(5, 2, 2), float64] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %816 = @func_1801() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %817 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
  %818 = power(%814, %815) /* ty=Tensor[(5, 2, 2), float64] */;
  %819 = %816.0;
  (%817, %818, %819)
}

def @func_10844() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) {
  %820 = @func_1979() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %821 = @func_5266() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %822 = @func_4622() /* ty=Tensor[(4, 2, 6), float64] */;
  %823 = %820.0;
  %824 = %821.0;
  (%822, %823, %824)
}

def @func_5115() -> Tensor[(4, 2, 6), float64] {
  %825 = @func_4334() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %825.0
}

def @func_10846() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) {
  @func_10844() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) */
}

def @func_2814() -> Tensor[(4, 2, 6), float64] {
  @func_2812() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_10334() -> Tensor[(324), uint16] {
  @func_10332() /* ty=Tensor[(324), uint16] */
}

def @func_8258() -> (Tensor[(4, 2, 6), float64], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(14, ?, 4), float32], Tensor[(14, ?, 4), uint16], Tensor[(4, 2, 6), float64]) {
  %857 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(14, ?, 4), float32], Tensor[(14, ?, 4), uint16], Tensor[(4, 2, 6), float64]) {
    %826 = @func_4120() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %827 = @func_3878() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */;
    %828 = @func_1979() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %829 = @func_5718() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %830 = @func_7823() /* ty=(Tensor[(14, 1, 4), float32],) */;
    %831 = %830.0;
    %832 = cast(%831, dtype="float32") /* ty=Tensor[(14, 1, 4), float32] */;
    %833 = sigmoid(%832) /* ty=Tensor[(14, 1, 4), float32] */;
    %834 = cast(%831, dtype="float32") /* ty=Tensor[(14, 1, 4), float32] */;
    %835 = shape_of(%833, dtype="int32") /* ty=Tensor[(3), int32] */;
    %836 = cast(%833, dtype="float32") /* ty=Tensor[(14, 1, 4), float32] */;
    %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %838 = mod(%836, %837) /* ty=Tensor[(14, ?, 4), float32] */;
    %839 = cast(%838, dtype="float32") /* ty=Tensor[(14, ?, 4), float32] */;
    %840 = cast(%833, dtype="uint16") /* ty=Tensor[(14, 1, 4), uint16] */;
    %841 = shape_of(%838, dtype="int32") /* ty=Tensor[(3), int32] */;
    %842 = cast(%838, dtype="uint16") /* ty=Tensor[(14, ?, 4), uint16] */;
    %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %844 = multiply(%842, %843) /* ty=Tensor[(14, ?, 4), uint16] */;
    %845 = cast(%833, dtype="uint16") /* ty=Tensor[(14, 1, 4), uint16] */;
    %846 = shape_of(%844, dtype="int32") /* ty=Tensor[(3), int32] */;
    %847 = cast(%844, dtype="uint16") /* ty=Tensor[(14, ?, 4), uint16] */;
    %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %849 = @func_7034() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
    %850 = %826.0;
    %851 = %827.1;
    %852 = %828.0;
    %853 = %829.0;
    %854 = tan(%839) /* ty=Tensor[(14, ?, 4), float32] */;
    %855 = minimum(%847, %848) /* ty=Tensor[(14, ?, 4), uint16] */;
    %856 = %849.2;
    (%850, %851, %852, %853, %854, %855, %856)
  };
  %857() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(14, ?, 4), float32], Tensor[(14, ?, 4), uint16], Tensor[(4, 2, 6), float64]) */
}

def @func_3220(%var_3218: Tensor[(4, 2, 6), float64]) -> (Tensor[(9, 3, 12), float32], Tensor[(9, 3, 12), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool]) {
  @func_3217(%var_3218) /* ty=(Tensor[(9, 3, 12), float32], Tensor[(9, 3, 12), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool]) */
}

def @func_9430() -> Tensor[(4, 2, 6), float64] {
  %859 = fn () -> Tensor[(4, 2, 6), float64] {
    %858 = @func_3555() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %858.0
  };
  %859() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_11766() -> (Tensor[(4, 2, 6), float32],) {
  %862 = fn () -> (Tensor[(4, 2, 6), float32],) {
    %860 = @func_5266() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
    %861 = %860.0;
    (%861,)
  };
  %862() /* ty=(Tensor[(4, 2, 6), float32],) */
}

def @func_3880() -> (Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) {
  @func_3878() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */
}

def @func_5763() -> (Tensor[(4, 2, 6), float64],) {
  %865 = fn () -> (Tensor[(4, 2, 6), float64],) {
    %863 = @func_3166() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64]) */;
    %864 = %863.2;
    (%864,)
  };
  %865() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_2332(%var_2330: Tensor[(324), uint16]) -> (Tensor[(675, 1), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), float64]) {
  @func_2329(%var_2330) /* ty=(Tensor[(675, 1), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), float64]) */
}

def @func_9103(%var_9101: Tensor[(5, 12, 15), int16], %var_9102: Tensor[(5, 12, 15), int16]) -> (Tensor[(5, 12, 15), int16], Tensor[(5, 12, 15), float64]) {
  @func_9099(%var_9101, %var_9102) /* ty=(Tensor[(5, 12, 15), int16], Tensor[(5, 12, 15), float64]) */
}

def @func_8528() -> Tensor[(4, 2, 6), float64] {
  @func_8526() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_9610() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(280), int8], Tensor[(4, 2, 6), float64], Tensor[(3, 108), float64]) {
  @func_9608() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(280), int8], Tensor[(4, 2, 6), float64], Tensor[(3, 108), float64]) */
}

def @func_10756() -> (Tensor[(4, 2, 6), int32],) {
  @func_10754() /* ty=(Tensor[(4, 2, 6), int32],) */
}

def @func_3395() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %866 = @func_2425() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %867 = @func_3010() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %868 = %866.0;
  %869 = %867.0;
  (%868, %869)
}

def @func_11252() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %877 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
    %870 = @func_6592() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
    %871 = @func_6239() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %872 = @func_5697() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32]) */;
    %873 = %870.2;
    %874 = %871.0;
    %875 = %872.0;
    %876 = @func_9992() /* ty=Tensor[(4, 2, 6), float64] */;
    (%873, %874, %875, %876)
  };
  %877() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_3097() -> (Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) {
  %895 = fn () -> (Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) {
    %878 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
    %879 = @func_1779() /* ty=Tensor[(4, 2, 6), float64] */;
    %880 = cast(%879, dtype="bool") /* ty=Tensor[(4, 2, 6), bool] */;
    %881 = shape_of(%878, dtype="int32") /* ty=Tensor[(3), int32] */;
    %882 = cast(%878, dtype="bool") /* ty=Tensor[(4, 2, 6), bool] */;
    %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %884 = cast(%879, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
    %885 = reshape(%884, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float32] */;
    %886 = @func_1928(%885) /* ty=(Tensor[(4, 2, 6), uint64], Tensor[(4, 2, 6), uint16]) */;
    %887 = @func_1801() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %888 = logical_and(%882, %883) /* ty=Tensor[(4, 2, 6), bool] */;
    %889 = cast(%888, dtype="float32") /* ty=Tensor[(4, 2, 6), float32] */;
    %890 = reshape(%889, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float32] */;
    %891 = @func_1928(%890) /* ty=(Tensor[(4, 2, 6), uint64], Tensor[(4, 2, 6), uint16]) */;
    %892 = %886.1;
    %893 = %887.0;
    %894 = %891.0;
    (%888, %892, %893, %894)
  };
  %895() /* ty=(Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), uint64]) */
}

def @func_4671(%var_4669: Tensor[(1430), float32]) -> (Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float32]) {
  @func_4668(%var_4669) /* ty=(Tensor[(675), float32], Tensor[(1430), float32], Tensor[(4, 2, 6), float32]) */
}

def @func_7661() -> (Tensor[(4, 2, 6), float64],) {
  %898 = fn () -> (Tensor[(4, 2, 6), float64],) {
    %896 = @func_3878() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */;
    %897 = %896.0;
    (%897,)
  };
  %898() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_7559() -> Tensor[(324), uint16] {
  %899 = fn () -> Tensor[(324), uint16] {
    @func_4499() /* ty=Tensor[(324), uint16] */
  };
  %899() /* ty=Tensor[(324), uint16] */
}

def @func_7496() -> (Tensor[(324), uint16], Tensor[(4, 2, 6), float64]) {
  @func_7494() /* ty=(Tensor[(324), uint16], Tensor[(4, 2, 6), float64]) */
}

def @func_5792() -> Tensor[(4, 2, 6), float32] {
  %901 = fn () -> Tensor[(4, 2, 6), float32] {
    %900 = @func_3594() /* ty=(Tensor[(4, 2, 6), float32],) */;
    %900.0
  };
  %901() /* ty=Tensor[(4, 2, 6), float32] */
}

def @func_4624() -> Tensor[(4, 2, 6), float64] {
  @func_4622() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_4763() -> (Tensor[(9, 3, 12), float64], Tensor[(2, 4, 16), int8], Tensor[(9, 5, 15), float32], Tensor[(715, 2), float32], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32], Tensor[(128), uint64]) {
  %902 = @func_2696() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) */;
  %903 = cast(meta[relay.Constant][34] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %904 = cast(meta[relay.Constant][34] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %905 = reshape(%903, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), int8] */;
  %906 = reshape(%904, newshape=[2, 4, 16]) /* ty=Tensor[(2, 4, 16), int8] */;
  %907 = cast(meta[relay.Constant][35] /* ty=Tensor[(715, 2), float32] */, dtype="float32") /* ty=Tensor[(715, 2), float32] */;
  %908 = reshape(%907, newshape=[11, 13, 10]) /* ty=Tensor[(11, 13, 10), float32] */;
  %909 = @func_921(%908) /* ty=(Tensor[(9, 5, 15), float32], Tensor[(675), float32], Tensor[(11, 13, 10), int64]) */;
  %910 = @func_4195() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %911 = cast(meta[relay.Constant][36] /* ty=Tensor[(13, 16, 3), float32] */, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %912 = sin(%911) /* ty=Tensor[(13, 16, 3), float32] */;
  %913 = cast(meta[relay.Constant][36] /* ty=Tensor[(13, 16, 3), float32] */, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %914 = shape_of(%912, dtype="int32") /* ty=Tensor[(3), int32] */;
  %915 = cast(%912, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %916 = dyn.reshape(%913, %914, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %917 = floor_mod(%915, %916) /* ty=Tensor[(13, 16, 3), float32] */;
  %918 = cast(%917, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %919 = sinh(%918) /* ty=Tensor[(13, 16, 3), float32] */;
  %920 = cast(%919, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %921 = cast(meta[relay.Constant][37] /* ty=Tensor[(128), int8] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %922 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(128), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %923 = cast(meta[relay.Constant][34] /* ty=Tensor[(128), int8] */, dtype="uint64") /* ty=Tensor[(128), uint64] */;
  %924 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %925 = %902.3;
  %926 = @func_4097(%905, %906) /* ty=Tensor[(2, 4, 16), int8] */;
  %927 = %909.0;
  %928 = %910.0;
  %929 = atan(%920) /* ty=Tensor[(13, 16, 3), float32] */;
  %930 = left_shift(%923, %924) /* ty=Tensor[(128), uint64] */;
  (%925, %926, %927, meta[relay.Constant][35] /* ty=Tensor[(715, 2), float32] */, %928, %929, %930)
}

def @func_5040() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %931 = @func_2703() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %932 = @func_3166() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), uint16], Tensor[(4, 2, 6), float64]) */;
  %933 = @func_3505() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %934 = %931.0;
  %935 = @func_2498() /* ty=Tensor[(4, 2, 6), float64] */;
  %936 = %932.0;
  %937 = %933.0;
  (%934, %935, %936, %937)
}

def @func_8116(%var_8114: Tensor[(675), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(675), float32]) {
  %938 = @func_3505() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %939 = cast(%var_8114, dtype="float32") /* ty=Tensor[(675), float32] */;
  %940 = reshape(%939, newshape=[675]) /* ty=Tensor[(675), float32] */;
  %941 = @func_7960(%940) /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64], Tensor[(675), float64]) */;
  %942 = %938.0;
  %943 = %941.2;
  (%942, %943, %var_8114)
}

def @func_10093(%var_10092: Tensor[(324), bool]) -> (Tensor[(4, 2, 6), float64], Tensor[(324), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(9, 12, 3), float64]) {
  %960 = fn (%var_10050: Tensor[(324), bool]) -> (Tensor[(4, 2, 6), float64], Tensor[(324), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(9, 12, 3), float64]) {
    %944 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %945 = cast(%var_10050, dtype="uint16") /* ty=Tensor[(324), uint16] */;
    %946 = reshape(%945, newshape=[3, 108]) /* ty=Tensor[(3, 108), uint16] */;
    %947 = @func_8345(%946) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(3, 108), uint16], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(1792), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
    %948 = @func_6592() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(15, 3, 16), float32], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
    %949 = cast(%var_10050, dtype="bool") /* ty=Tensor[(324), bool] */;
    %950 = cast(%var_10050, dtype="bool") /* ty=Tensor[(324), bool] */;
    %951 = reshape(%949, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), bool] */;
    %952 = reshape(%950, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), bool] */;
    %953 = @func_450(%951, %952) /* ty=(Tensor[(9, 12, 3), uint32], Tensor[(9, 12, 3), float32]) */;
    %954 = %953.0;
    %955 = cast(%954, dtype="float64") /* ty=Tensor[(9, 12, 3), float64] */;
    %956 = %944.0;
    %957 = %947.7;
    %958 = %948.4;
    %959 = asin(%955) /* ty=Tensor[(9, 12, 3), float64] */;
    (%956, %var_10050, %957, %958, %959)
  };
  %960(%var_10092) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), bool], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(9, 12, 3), float64]) */
}

def @func_10754() -> (Tensor[(4, 2, 6), int32],) {
  %961 = @func_4469() /* ty=(Tensor[(4, 2, 6), int32],) */;
  %962 = %961.0;
  (%962,)
}

def @func_1871() -> Tensor[(4, 2, 6), float64] {
  %964 = fn () -> Tensor[(4, 2, 6), float64] {
    %963 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %963.0
  };
  %964() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_11095() -> (Tensor[(324), uint16],) {
  %965 = @func_3878() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(324), uint16]) */;
  %966 = %965.1;
  (%966,)
}

def @func_7824() -> (Tensor[(14, 1, 4), float32],) {
  %969 = fn () -> (Tensor[(14, 1, 4), float32],) {
    %967 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 1, 4), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 4), float32] */;
    %968 = acosh(%967) /* ty=Tensor[(14, 1, 4), float32] */;
    (%968,)
  };
  %969() /* ty=(Tensor[(14, 1, 4), float32],) */
}

def @func_6786(%var_6784: Tensor[(9, 6, 12), float32], %var_6785: Tensor[(9, 6, 12), float32]) -> (Tensor[(9, 6, 12), float32], Tensor[(9, 6, 12), float64], Tensor[(9, 6, 12), float32]) {
  %982 = fn (%var_6756: Tensor[(9, 6, 12), float32], %var_6757: Tensor[(9, 6, 12), float32]) -> (Tensor[(9, 6, 12), float32], Tensor[(9, 6, 12), float64], Tensor[(9, 6, 12), float32]) {
    %970 = cast(%var_6757, dtype="float32") /* ty=Tensor[(9, 6, 12), float32] */;
    %971 = shape_of(%var_6756, dtype="int32") /* ty=Tensor[(3), int32] */;
    %972 = cast(%var_6756, dtype="float32") /* ty=Tensor[(9, 6, 12), float32] */;
    %973 = dyn.reshape(%970, %971, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %974 = cast(%var_6756, dtype="float64") /* ty=Tensor[(9, 6, 12), float64] */;
    %975 = shape_of(%var_6757, dtype="int32") /* ty=Tensor[(3), int32] */;
    %976 = cast(%var_6757, dtype="float64") /* ty=Tensor[(9, 6, 12), float64] */;
    %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %978 = cast(%var_6756, dtype="float32") /* ty=Tensor[(9, 6, 12), float32] */;
    %979 = mod(%972, %973) /* ty=Tensor[(9, 6, 12), float32] */;
    %980 = power(%976, %977) /* ty=Tensor[(9, 6, 12), float64] */;
    %981 = atan(%978) /* ty=Tensor[(9, 6, 12), float32] */;
    (%979, %980, %981)
  };
  %982(%var_6784, %var_6785) /* ty=(Tensor[(9, 6, 12), float32], Tensor[(9, 6, 12), float64], Tensor[(9, 6, 12), float32]) */
}

def @func_1603() -> Tensor[(4, 2, 6), float64] {
  @func_1601() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_4321() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32]) {
  @func_4319() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32]) */
}

def @func_11194(%var_11193: Tensor[(1760), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32], Tensor[(4, 2, 6), float64], Tensor[(16, 10, 11), float32], Tensor[(1760), float32], Tensor[(4, 2, 6), float64]) {
  %992 = fn (%var_11187: Tensor[(1760), float32]) -> (Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32], Tensor[(4, 2, 6), float64], Tensor[(16, 10, 11), float32], Tensor[(1760), float32], Tensor[(4, 2, 6), float64]) {
    %983 = @func_4763() /* ty=(Tensor[(9, 3, 12), float64], Tensor[(2, 4, 16), int8], Tensor[(9, 5, 15), float32], Tensor[(715, 2), float32], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32], Tensor[(128), uint64]) */;
    %984 = cast(%var_11187, dtype="float32") /* ty=Tensor[(1760), float32] */;
    %985 = reshape(%984, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
    %986 = @func_7905() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %987 = @func_1722() /* ty=Tensor[(4, 2, 6), float64] */;
    %988 = %983.5;
    %989 = @func_9429() /* ty=Tensor[(4, 2, 6), float64] */;
    %990 = @func_4206(%985) /* ty=Tensor[(16, 10, 11), float32] */;
    %991 = %986.0;
    (%987, %988, %989, %990, %var_11187, %991)
  };
  %992(%var_11193) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32], Tensor[(4, 2, 6), float64], Tensor[(16, 10, 11), float32], Tensor[(1760), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_4336() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  @func_4334() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_7797() -> Tensor[(4, 2, 6), float64] {
  %993 = fn () -> Tensor[(4, 2, 6), float64] {
    @func_1870() /* ty=Tensor[(4, 2, 6), float64] */
  };
  %993() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_7818(%var_7817: Tensor[(3, 108), uint16]) -> (Tensor[(3, 108), bool],) {
  %1001 = fn (%var_7811: Tensor[(3, 108), uint16]) -> (Tensor[(3, 108), bool],) {
    %994 = @func_2696() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool], Tensor[(3, 108), uint16], Tensor[(9, 3, 12), float64]) */;
    %995 = %994.2;
    %996 = cast(%var_7811, dtype="bool") /* ty=Tensor[(3, 108), bool] */;
    %997 = shape_of(%995, dtype="int32") /* ty=Tensor[(2), int32] */;
    %998 = cast(%995, dtype="bool") /* ty=Tensor[(3, 108), bool] */;
    %999 = dyn.reshape(%996, %997, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1000 = logical_and(%998, %999) /* ty=Tensor[(3, 108), bool] */;
    (%1000,)
  };
  %1001(%var_7817) /* ty=(Tensor[(3, 108), bool],) */
}

def @func_8429() -> Tensor[(4, 2, 6), float64] {
  %1002 = @func_6056() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %1002.0
}

def @func_10332() -> Tensor[(324), uint16] {
  %1003 = @func_9262() /* ty=(Tensor[(324), uint16],) */;
  %1003.0
}

def @func_10545() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  @func_10543() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_2144(%var_2135: Tensor[(12, 6, 12), float32]) -> (Tensor[(12, 6, 12), float32], Tensor[(4, 2, 6), float64]) {
  %1004 = cast(%var_2135, dtype="float32") /* ty=Tensor[(12, 6, 12), float32] */;
  %1005 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %1006 = exp(%1004) /* ty=Tensor[(12, 6, 12), float32] */;
  %1007 = %1005.0;
  (%1006, %1007)
}

def @func_2147(%var_2145: Tensor[(12, 6, 12), float32]) -> (Tensor[(12, 6, 12), float32], Tensor[(4, 2, 6), float64]) {
  @func_2144(%var_2145) /* ty=(Tensor[(12, 6, 12), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_3556() -> (Tensor[(4, 2, 6), float64],) {
  %1009 = fn () -> (Tensor[(4, 2, 6), float64],) {
    %1008 = @func_1601() /* ty=Tensor[(4, 2, 6), float64] */;
    (%1008,)
  };
  %1009() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_3992() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool]) {
  @func_3990() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), bool]) */
}

def @func_6698() -> (Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  %1010 = @func_5040() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %1011 = @func_2425() /* ty=(Tensor[(4, 2, 6), float32],) */;
  %1012 = %1010.2;
  %1013 = %1011.0;
  %1014 = @func_5349() /* ty=Tensor[(4, 2, 6), float64] */;
  (%1012, %1013, %1014)
}

def @func_9470() -> (Tensor[(4, 2, 6), float64],) {
  @func_9468() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_5042() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) {
  @func_5040() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */
}

def @func_6091() -> Tensor[(4, 2, 6), float64] {
  %1015 = @func_3010() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */;
  %1015.1
}

def @func_1060(%var_1008: Tensor[(9, 3, 12), uint16]) -> (Tensor[(9, 3, 12), float64], Tensor[(9, 5, 15), float32], Tensor[(675, 1), float32]) {
  %1016 = cast(meta[relay.Constant][39] /* ty=Tensor[(9, 3, 12), uint16] */, dtype="bool") /* ty=Tensor[(9, 3, 12), bool] */;
  %1017 = shape_of(%var_1008, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1018 = cast(%var_1008, dtype="bool") /* ty=Tensor[(9, 3, 12), bool] */;
  %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1020 = greater(%1018, %1019) /* ty=Tensor[(9, 3, 12), bool] */;
  %1021 = cast(%1020, dtype="float64") /* ty=Tensor[(9, 3, 12), float64] */;
  %1022 = cast(meta[relay.Constant][40] /* ty=Tensor[(675, 1), float32] */, dtype="float32") /* ty=Tensor[(675, 1), float32] */;
  %1023 = reshape(%1022, newshape=[9, 5, 15]) /* ty=Tensor[(9, 5, 15), float32] */;
  %1024 = cast(meta[relay.Constant][40] /* ty=Tensor[(675, 1), float32] */, dtype="float32") /* ty=Tensor[(675, 1), float32] */;
  %1025 = atanh(%1021) /* ty=Tensor[(9, 3, 12), float64] */;
  %1026 = @func_754(%1023) /* ty=Tensor[(9, 5, 15), float32] */;
  %1027 = acosh(%1024) /* ty=Tensor[(675, 1), float32] */;
  (%1025, %1026, %1027)
}

def @func_6152(%var_6150: Tensor[(5, 8, 7), int8]) -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(20), float32], Tensor[(4, 2, 6), float64], Tensor[(5, 8, 7), float32]) {
  @func_6149(%var_6150) /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(20), float32], Tensor[(4, 2, 6), float64], Tensor[(5, 8, 7), float32]) */
}

def @func_10920() -> Tensor[(8, 1, 2), float32] {
  %1028 = fn () -> Tensor[(8, 1, 2), float32] {
    @func_9635() /* ty=Tensor[(8, 1, 2), float32] */
  };
  %1028() /* ty=Tensor[(8, 1, 2), float32] */
}

def @func_2928() -> Tensor[(4, 2, 6), float64] {
  @func_2926() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_11363() -> Tensor[(5, 2, 2), float64] {
  @func_11361() /* ty=Tensor[(5, 2, 2), float64] */
}

def @func_5699() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32]) {
  @func_5697() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(13, 16, 3), float32]) */
}

def @func_2784() -> Tensor[(4, 2, 6), float64] {
  @func_1722() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_4334() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %1029 = @func_3674() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float32]) */;
  %1030 = @func_2784() /* ty=Tensor[(4, 2, 6), float64] */;
  %1031 = %1029.0;
  (%1030, %1031)
}

def @func_2839() -> Tensor[(4, 2, 6), float64] {
  @func_2822() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_10736() -> Tensor[(4, 2, 6), float64] {
  @func_10734() /* ty=Tensor[(4, 2, 6), float64] */
}

def @main(%var_11804: Tensor[(16, 7, 1), float64]) -> (Tensor[(16, 7, 1), float64],) {
  %1032 = cast(%var_11804, dtype="float64") /* ty=Tensor[(16, 7, 1), float64] */;
  %1033 = atan(%1032) /* ty=Tensor[(16, 7, 1), float64] */;
  (%1033,)
}

def @func_2499() -> Tensor[(4, 2, 6), float64] {
  %1035 = fn () -> Tensor[(4, 2, 6), float64] {
    %1034 = @func_2278() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
    %1034.1
  };
  %1035() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_5385() -> (Tensor[(4, 2, 6), float32],) {
  @func_5383() /* ty=(Tensor[(4, 2, 6), float32],) */
}

def @func_4501() -> Tensor[(324), uint16] {
  @func_4499() /* ty=Tensor[(324), uint16] */
}

def @func_10198() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %1039 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
    %1036 = @func_5646() /* ty=(Tensor[(324), uint16], Tensor[(4, 2, 6), float64]) */;
    %1037 = @func_2822() /* ty=Tensor[(4, 2, 6), float64] */;
    %1038 = %1036.1;
    (%1037, %1038)
  };
  %1039() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_7981() -> Tensor[(4, 2, 6), float64] {
  %1041 = fn () -> Tensor[(4, 2, 6), float64] {
    %1040 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %1040.0
  };
  %1041() /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_6056() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %1042 = @func_3395() /* ty=(Tensor[(4, 2, 6), float32], Tensor[(4, 2, 6), float64]) */;
  %1043 = %1042.1;
  %1044 = @func_2926() /* ty=Tensor[(4, 2, 6), float64] */;
  (%1043, %1044)
}

def @func_6721() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %1045 = @func_2021() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %1046 = %1045.0;
  %1047 = @func_2852() /* ty=Tensor[(4, 2, 6), float64] */;
  (%1046, %1047)
}

def @func_4122() -> (Tensor[(4, 2, 6), float64],) {
  @func_4120() /* ty=(Tensor[(4, 2, 6), float64],) */
}

def @func_2926() -> Tensor[(4, 2, 6), float64] {
  %1048 = @func_1844() /* ty=(Tensor[(4, 2, 6), float64],) */;
  %1048.0
}

def @func_6526(%var_6497: Tensor[(16, 7, 16), float64], %var_6498: Tensor[(16, 7, 16), float64], %var_6514: Tensor[(324), uint16]) -> (Tensor[(16, 7, 16), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(9, 5, 15), float32], Tensor[(324), uint16], Tensor[(4, 2, 6), float64], Tensor[(900), float32]) {
  %1049 = cast(%var_6498, dtype="float64") /* ty=Tensor[(16, 7, 16), float64] */;
  %1050 = shape_of(%var_6497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1051 = cast(%var_6497, dtype="float64") /* ty=Tensor[(16, 7, 16), float64] */;
  %1052 = dyn.reshape(%1049, %1050, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1053 = cast(%var_6514, dtype="uint16") /* ty=Tensor[(324), uint16] */;
  %1054 = reshape(%1053, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), uint16] */;
  %1055 = @func_1060(%1054) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(9, 5, 15), float32], Tensor[(675, 1), float32]) */;
  %1056 = cast(meta[relay.Constant][41] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %1057 = reshape(%1056, newshape=[15, 6, 10]) /* ty=Tensor[(15, 6, 10), float32] */;
  %1058 = @func_2207(%1057) /* ty=(Tensor[(15, 6, 10), float32], Tensor[(4, 2, 6), float64], Tensor[(9, 3, 12), float64]) */;
  %1059 = floor_mod(%1051, %1052) /* ty=Tensor[(16, 7, 16), float64] */;
  %1060 = @func_2839() /* ty=Tensor[(4, 2, 6), float64] */;
  %1061 = @func_2812() /* ty=Tensor[(4, 2, 6), float64] */;
  %1062 = %1055.1;
  %1063 = %1058.1;
  (%1059, %1060, %1061, %1062, %var_6514, %1063, meta[relay.Constant][41] /* ty=Tensor[(900), float32] */)
}

def @func_7760() -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
  %1068 = fn () -> (Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) {
    %1064 = @func_6239() /* ty=(Tensor[(4, 2, 6), float64],) */;
    %1065 = %1064.0;
    %1066 = @func_2799() /* ty=Tensor[(4, 2, 6), float64] */;
    %1067 = @func_2498() /* ty=Tensor[(4, 2, 6), float64] */;
    (%1065, %1066, %1067)
  };
  %1068() /* ty=(Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64], Tensor[(4, 2, 6), float64]) */
}

def @func_10734() -> Tensor[(4, 2, 6), float64] {
  @func_2839() /* ty=Tensor[(4, 2, 6), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen646/build/output.py:3736: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen646/build/output.py", line 3741, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(112) tvmgen_default_fused_atan_kernel0(double* __restrict__ T_atan, double* __restrict__ placeholder) {
  T_atan[(((int)threadIdx.x))] = atan(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


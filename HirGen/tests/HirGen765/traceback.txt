==========mod==========
#[version = "0.0.5"]
def @func_14716() -> (Tensor[(11, 11, 10), float32],) {
  %0 = @func_14155() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %1 = %0.0;
  (%1,)
}

def @func_11390(%var_11371: Tensor[(1, 1584), int8]) -> (Tensor[(11, 11, 10), float32], Tensor[(208), uint64], Tensor[(2, 52), uint64], Tensor[(10, 1584), int8]) {
  %2 = @func_9821() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %3 = cast(%var_11371, dtype="int8") /* ty=Tensor[(1, 1584), int8] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 52), uint64] */, dtype="uint64") /* ty=Tensor[(2, 52), uint64] */;
  %5 = reshape(%3, newshape=[16, 9, 11]) /* ty=Tensor[(16, 9, 11), int8] */;
  %6 = reshape(%4, newshape=[104]) /* ty=Tensor[(104), uint64] */;
  %7 = @func_9072(%5, %6) /* ty=(Tensor[(16, 9, 11), int8], Tensor[(5, 6, 13), bool], Tensor[(390, 1), bool], Tensor[(208), uint64], Tensor[(3), int8], Tensor[(104), uint64]) */;
  %8 = cast(%var_11371, dtype="int8") /* ty=Tensor[(1, 1584), int8] */;
  %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 1584), int8] */, dtype="int8") /* ty=Tensor[(10, 1584), int8] */;
  %10 = %2.0;
  %11 = %7.3;
  %12 = right_shift(%8, %9) /* ty=Tensor[(10, 1584), int8] */;
  (%10, %11, meta[relay.Constant][0] /* ty=Tensor[(2, 52), uint64] */, %12)
}

def @func_9289() -> Tensor[(2, 10, 12), float32] {
  @func_9247() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_3112(%var_3105: Tensor[(4, 14, 9), int8]) -> Tensor[(4, 14, 9), int8] {
  %13 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 14, 9), int8] */, dtype="int8") /* ty=Tensor[(4, 14, 9), int8] */;
  %14 = shape_of(%var_3105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%var_3105, dtype="int8") /* ty=Tensor[(4, 14, 9), int8] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_xor(%15, %16) /* ty=Tensor[(4, 14, 9), int8] */
}

def @func_10178(%var_10164: Tensor[(7, 4, 13), int16], %var_10165: Tensor[(7, 4, 13), int16]) -> (Tensor[(7, 4, 13), int16], Tensor[(7, 4, 13), float64], Tensor[(11, 5, 11), float64], Tensor[(605), float64]) {
  %17 = cast(%var_10165, dtype="int16") /* ty=Tensor[(7, 4, 13), int16] */;
  %18 = shape_of(%var_10164, dtype="int32") /* ty=Tensor[(3), int32] */;
  %19 = cast(%var_10164, dtype="int16") /* ty=Tensor[(7, 4, 13), int16] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %21 = cast(%var_10164, dtype="float64") /* ty=Tensor[(7, 4, 13), float64] */;
  %22 = cast(meta[relay.Constant][3] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %23 = cast(meta[relay.Constant][3] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %24 = reshape(%22, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), float64] */;
  %25 = reshape(%23, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), float64] */;
  %26 = @func_8366(%24, %25) /* ty=(Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), bool], Tensor[(1, 3, 1), int8], Tensor[(3), int8], Tensor[(104), uint64]) */;
  %27 = bitwise_and(%19, %20) /* ty=Tensor[(7, 4, 13), int16] */;
  %28 = sin(%21) /* ty=Tensor[(7, 4, 13), float64] */;
  %29 = %26.0;
  (%27, %28, %29, meta[relay.Constant][3] /* ty=Tensor[(605), float64] */)
}

def @func_4650(%var_4599: Tensor[(6, 9, 9), uint32], %var_4600: Tensor[(6, 9, 9), uint32], %var_4607: Tensor[(128), float64]) -> (Tensor[(6, 9, 9), bool], Tensor[(576), int64], Tensor[(128), float64], Tensor[(6, 96), int64], Tensor[(6, 64), int16], Tensor[(9, 16, 12), int16], Tensor[(1728), uint64], Tensor[(1, 220), uint8], Tensor[(144, 4), uint32]) {
  %30 = cast(%var_4600, dtype="bool") /* ty=Tensor[(6, 9, 9), bool] */;
  %31 = shape_of(%var_4599, dtype="int32") /* ty=Tensor[(3), int32] */;
  %32 = cast(%var_4599, dtype="bool") /* ty=Tensor[(6, 9, 9), bool] */;
  %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %34 = cast(%var_4607, dtype="float64") /* ty=Tensor[(128), float64] */;
  %35 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 96), int64] */, dtype="int64") /* ty=Tensor[(6, 96), int64] */;
  %36 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 64), int16] */, dtype="int16") /* ty=Tensor[(6, 64), int16] */;
  %37 = reshape(%34, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float64] */;
  %38 = reshape(%35, newshape=[2, 288]) /* ty=Tensor[(2, 288), int64] */;
  %39 = reshape(%36, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %40 = @func_1141(%37, %38, %39) /* ty=(Tensor[(16, 2, 4), float64], Tensor[(8, 6, 12), float64], Tensor[(2, 288), int64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %41 = cast(meta[relay.Constant][6] /* ty=Tensor[(1728), uint64] */, dtype="uint64") /* ty=Tensor[(1728), uint64] */;
  %42 = reshape(%41, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), uint64] */;
  %43 = @func_2312(%42) /* ty=(Tensor[(9, 16, 12), uint64], Tensor[(9, 16, 12), int16], Tensor[(9, 16, 12), float32]) */;
  %44 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 220), uint8] */, dtype="uint8") /* ty=Tensor[(1, 220), uint8] */;
  %45 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 220), uint8] */, dtype="uint8") /* ty=Tensor[(1, 220), uint8] */;
  %46 = cast(%var_4607, dtype="float64") /* ty=Tensor[(128), float64] */;
  %47 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 96), int64] */, dtype="int64") /* ty=Tensor[(6, 96), int64] */;
  %48 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 64), int16] */, dtype="int16") /* ty=Tensor[(6, 64), int16] */;
  %49 = reshape(%44, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), uint8] */;
  %50 = reshape(%45, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), uint8] */;
  %51 = reshape(%46, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %52 = reshape(%47, newshape=[144, 4]) /* ty=Tensor[(144, 4), int64] */;
  %53 = reshape(%48, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %54 = @func_1282(%49, %50, %51, %52, %53) /* ty=(Tensor[(11, 5, 4), uint8], Tensor[(384), int16], Tensor[(128), float64], Tensor[(144, 4), int64], Tensor[(384), int16]) */;
  %55 = %54.3;
  %56 = cast(meta[relay.Constant][8] /* ty=Tensor[(144, 4), int64] */, dtype="uint32") /* ty=Tensor[(144, 4), uint32] */;
  %57 = shape_of(%55, dtype="int32") /* ty=Tensor[(2), int32] */;
  %58 = cast(%55, dtype="uint32") /* ty=Tensor[(144, 4), uint32] */;
  %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %60 = greater_equal(%32, %33) /* ty=Tensor[(6, 9, 9), bool] */;
  %61 = %40.3;
  %62 = %43.1;
  %63 = logical_xor(%58, %59) /* ty=Tensor[(144, 4), uint32] */;
  (%60, %61, %var_4607, meta[relay.Constant][4] /* ty=Tensor[(6, 96), int64] */, meta[relay.Constant][5] /* ty=Tensor[(6, 64), int16] */, %62, meta[relay.Constant][6] /* ty=Tensor[(1728), uint64] */, meta[relay.Constant][7] /* ty=Tensor[(1, 220), uint8] */, %63)
}

def @func_254(%var_196: Tensor[(8, 6, 12), int64]) -> (Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) {
  %64 = cast(%var_196, dtype="bool") /* ty=Tensor[(8, 6, 12), bool] */;
  %65 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(8, 6, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 6, 12), int64] */, dtype="bool") /* ty=Tensor[(8, 6, 12), bool] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %68 = greater(%66, %67) /* ty=Tensor[(8, 6, 12), bool] */;
  %69 = cast(%68, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
  %70 = cast(%var_196, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
  %71 = acos(%70) /* ty=Tensor[(8, 6, 12), float64] */;
  %72 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 6, 12), float64] */, dtype="uint16") /* ty=Tensor[(8, 6, 12), uint16] */;
  %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(3), int32] */;
  %74 = cast(%71, dtype="uint16") /* ty=Tensor[(8, 6, 12), uint16] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %76 = acosh(%69) /* ty=Tensor[(8, 6, 12), float64] */;
  %77 = bitwise_and(%74, %75) /* ty=Tensor[(8, 6, 12), uint16] */;
  (%76, %77)
}

def @func_2312(%var_2262: Tensor[(9, 16, 12), uint64]) -> (Tensor[(9, 16, 12), uint64], Tensor[(9, 16, 12), int16], Tensor[(9, 16, 12), float32]) {
  %78 = cast(meta[relay.Constant][11] /* ty=Tensor[(9, 16, 12), uint64] */, dtype="uint64") /* ty=Tensor[(9, 16, 12), uint64] */;
  %79 = shape_of(%var_2262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%var_2262, dtype="uint64") /* ty=Tensor[(9, 16, 12), uint64] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %82 = cast(meta[relay.Constant][11] /* ty=Tensor[(9, 16, 12), uint64] */, dtype="float32") /* ty=Tensor[(9, 16, 12), float32] */;
  %83 = log10(%82) /* ty=Tensor[(9, 16, 12), float32] */;
  %84 = cast(%83, dtype="int16") /* ty=Tensor[(9, 16, 12), int16] */;
  %85 = shape_of(%var_2262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%var_2262, dtype="int16") /* ty=Tensor[(9, 16, 12), int16] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %88 = cast(%83, dtype="float32") /* ty=Tensor[(9, 16, 12), float32] */;
  %89 = add(%80, %81) /* ty=Tensor[(9, 16, 12), uint64] */;
  %90 = minimum(%86, %87) /* ty=Tensor[(9, 16, 12), int16] */;
  %91 = sinh(%88) /* ty=Tensor[(9, 16, 12), float32] */;
  (%89, %90, %91)
}

def @func_8994(%var_8934: Tensor[(16, 8), float64], %var_8935: Tensor[(576), int64], %var_8936: Tensor[(384), int16], %var_8948: Tensor[(486), uint32], %var_8969: Tensor[(784, 1), float64], %var_8988: Tensor[(4, 432), uint64]) -> (Tensor[(8, 6, 5), float32], Tensor[(2, 288), int64], Tensor[(16, 8), float64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(576), int64], Tensor[(486), uint32], Tensor[(7, 14, 8), float64], Tensor[(784, 1), float64], Tensor[(9, 16, 12), int16], Tensor[(4, 432), uint64]) {
  %92 = cast(meta[relay.Constant][12] /* ty=Tensor[(8, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 6, 5), float32] */;
  %93 = cast(%var_8934, dtype="float64") /* ty=Tensor[(16, 8), float64] */;
  %94 = cast(%var_8935, dtype="int64") /* ty=Tensor[(576), int64] */;
  %95 = cast(%var_8936, dtype="int16") /* ty=Tensor[(384), int16] */;
  %96 = reshape(%93, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float64] */;
  %97 = reshape(%94, newshape=[2, 288]) /* ty=Tensor[(2, 288), int64] */;
  %98 = reshape(%95, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %99 = @func_1141(%96, %97, %98) /* ty=(Tensor[(16, 2, 4), float64], Tensor[(8, 6, 12), float64], Tensor[(2, 288), int64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %100 = cast(%var_8948, dtype="uint32") /* ty=Tensor[(486), uint32] */;
  %101 = cast(%var_8948, dtype="uint32") /* ty=Tensor[(486), uint32] */;
  %102 = cast(%var_8934, dtype="float64") /* ty=Tensor[(16, 8), float64] */;
  %103 = reshape(%100, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), uint32] */;
  %104 = reshape(%101, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), uint32] */;
  %105 = reshape(%102, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %106 = @func_4650(%103, %104, %105) /* ty=(Tensor[(6, 9, 9), bool], Tensor[(576), int64], Tensor[(128), float64], Tensor[(6, 96), int64], Tensor[(6, 64), int16], Tensor[(9, 16, 12), int16], Tensor[(1728), uint64], Tensor[(1, 220), uint8], Tensor[(144, 4), uint32]) */;
  %107 = cast(%var_8969, dtype="float64") /* ty=Tensor[(784, 1), float64] */;
  %108 = reshape(%107, newshape=[7, 14, 8]) /* ty=Tensor[(7, 14, 8), float64] */;
  %109 = cast(%var_8988, dtype="uint64") /* ty=Tensor[(4, 432), uint64] */;
  %110 = reshape(%109, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), uint64] */;
  %111 = @func_2312(%110) /* ty=(Tensor[(9, 16, 12), uint64], Tensor[(9, 16, 12), int16], Tensor[(9, 16, 12), float32]) */;
  %112 = sqrt(%92) /* ty=Tensor[(8, 6, 5), float32] */;
  %113 = %99.2;
  %114 = %106.1;
  %115 = @func_2801(%108) /* ty=Tensor[(7, 14, 8), float64] */;
  %116 = %111.1;
  (%112, %113, %var_8934, %var_8935, %var_8936, %114, %var_8948, %115, %var_8969, %116, %var_8988)
}

def @func_15043(%var_15024: Tensor[(160), int64], %var_15026: Tensor[(384), int16]) -> (Tensor[(11, 11, 10), float32], Tensor[(4, 12, 8), int16], Tensor[(160), int64], Tensor[(784), float64], Tensor[(384), int16]) {
  %117 = cast(%var_15024, dtype="int64") /* ty=Tensor[(160), int64] */;
  %118 = cast(meta[relay.Constant][13] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
  %119 = cast(%var_15026, dtype="int16") /* ty=Tensor[(384), int16] */;
  %120 = reshape(%117, newshape=[4, 8, 5]) /* ty=Tensor[(4, 8, 5), int64] */;
  %121 = reshape(%118, newshape=[784]) /* ty=Tensor[(784), float64] */;
  %122 = reshape(%119, newshape=[1, 384]) /* ty=Tensor[(1, 384), int16] */;
  %123 = @func_4875(%120, %121, %122) /* ty=(Tensor[(4, 8, 5), bool], Tensor[(4, 8, 5), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(4, 12, 8), int16], Tensor[(1, 384), int16]) */;
  %124 = @func_11336() /* ty=Tensor[(11, 11, 10), float32] */;
  %125 = %123.4;
  (%124, %125, %var_15024, meta[relay.Constant][13] /* ty=Tensor[(784), float64] */, %var_15026)
}

def @func_6704(%var_6684: Tensor[(6, 15, 10), float32], %var_6699: Tensor[(208), uint64]) -> (Tensor[(6, 15, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(104), uint64], Tensor[(208), uint64]) {
  %126 = cast(%var_6684, dtype="float32") /* ty=Tensor[(6, 15, 10), float32] */;
  %127 = cast(meta[relay.Constant][14] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %128 = cast(%var_6699, dtype="uint64") /* ty=Tensor[(208), uint64] */;
  %129 = reshape(%127, newshape=[8, 1, 13]) /* ty=Tensor[(8, 1, 13), uint64] */;
  %130 = reshape(%128, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), uint64] */;
  %131 = @func_3215(%129, %130) /* ty=(Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */;
  %132 = exp(%126) /* ty=Tensor[(6, 15, 10), float32] */;
  %133 = %131.1;
  (%132, %133, meta[relay.Constant][14] /* ty=Tensor[(104), uint64] */, %var_6699)
}

def @func_11617(%var_11596: Tensor[(72), float32], %var_11597: Tensor[(128), float64]) -> (Tensor[(11, 11, 10), float32], Tensor[(13, 14, 13), float64], Tensor[(128), float64], Tensor[(72), float32], Tensor[(128), float64], Tensor[(1, 576), int64]) {
  %134 = cast(%var_11596, dtype="float32") /* ty=Tensor[(72), float32] */;
  %135 = cast(%var_11596, dtype="float32") /* ty=Tensor[(72), float32] */;
  %136 = cast(%var_11596, dtype="float32") /* ty=Tensor[(72), float32] */;
  %137 = cast(%var_11597, dtype="float64") /* ty=Tensor[(128), float64] */;
  %138 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 576), int64] */, dtype="int64") /* ty=Tensor[(1, 576), int64] */;
  %139 = reshape(%134, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %140 = reshape(%135, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %141 = reshape(%136, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %142 = reshape(%137, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %143 = reshape(%138, newshape=[576]) /* ty=Tensor[(576), int64] */;
  %144 = @func_5580(%139, %140, %141, %142, %143) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(4, 6, 3), bool], Tensor[(9, 16, 12), uint64], Tensor[(1728), uint64], Tensor[(128), float64], Tensor[(220), uint8], Tensor[(128), float64], Tensor[(576), int64], Tensor[(384), int16]) */;
  %145 = @func_10830() /* ty=Tensor[(11, 11, 10), float32] */;
  %146 = @func_10147() /* ty=Tensor[(13, 14, 13), float64] */;
  %147 = %144.4;
  (%145, %146, %147, %var_11596, %var_11597, meta[relay.Constant][15] /* ty=Tensor[(1, 576), int64] */)
}

def @func_7458(%var_7451: Tensor[(13, 10, 4), int32], %var_7452: Tensor[(13, 10, 4), int32]) -> (Tensor[(13, 10, 4), int32],) {
  %148 = cast(%var_7452, dtype="int32") /* ty=Tensor[(13, 10, 4), int32] */;
  %149 = shape_of(%var_7451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%var_7451, dtype="int32") /* ty=Tensor[(13, 10, 4), int32] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %152 = bitwise_xor(%150, %151) /* ty=Tensor[(13, 10, 4), int32] */;
  (%152,)
}

def @func_13988(%var_13978: Tensor[(576), int64]) -> (Tensor[(11, 11, 10), float32], Tensor[(8, 6, 12), float64], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) {
  %153 = @func_12775() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %154 = cast(%var_13978, dtype="int64") /* ty=Tensor[(576), int64] */;
  %155 = reshape(%154, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int64] */;
  %156 = @func_254(%155) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) */;
  %157 = cast(meta[relay.Constant][16] /* ty=Tensor[(384), int16] */, dtype="int16") /* ty=Tensor[(384), int16] */;
  %158 = reshape(%157, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %159 = @func_9643(%158) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(384), int16], Tensor[(4, 12), float64], Tensor[(60), float32], Tensor[(48), float64]) */;
  %160 = %153.0;
  %161 = %156.0;
  %162 = %159.1;
  (%160, %161, %var_13978, %162, meta[relay.Constant][16] /* ty=Tensor[(384), int16] */)
}

def @func_11222() -> (Tensor[(2, 10, 12), float32],) {
  %163 = @func_10012() /* ty=Tensor[(2, 10, 12), float32] */;
  (%163,)
}

def @func_11079(%var_11071: bool) -> Tensor[(7, 3, 16), bool] {
  %164 = cast(%var_11071, dtype="bool") /* ty=bool */;
  %165 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 3, 16), bool] */, dtype="bool") /* ty=Tensor[(7, 3, 16), bool] */;
  logical_and(%164, %165) /* ty=Tensor[(7, 3, 16), bool] */
}

def @func_11893(%var_11867: Tensor[(9, 3, 11), bool], %var_11868: Tensor[(9, 3, 11), bool]) -> (Tensor[(9, 3, 11), bool],) {
  %166 = cast(%var_11868, dtype="bool") /* ty=Tensor[(9, 3, 11), bool] */;
  %167 = shape_of(%var_11867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(%var_11867, dtype="bool") /* ty=Tensor[(9, 3, 11), bool] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %170 = logical_and(%168, %169) /* ty=Tensor[(9, 3, 11), bool] */;
  (%170,)
}

def @func_3495(%var_3490: Tensor[(1, 6, 16), int64]) -> Tensor[(1, 6, 16), bool] {
  %171 = cast(-1 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %172 = cast(%var_3490, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  less_equal(%171, %172) /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_9821() -> (Tensor[(11, 11, 10), float32],) {
  %173 = @func_9268() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %174 = %173.0;
  %175 = cast(%174, dtype="float32") /* ty=Tensor[(11, 11, 10), float32] */;
  %176 = sqrt(%175) /* ty=Tensor[(11, 11, 10), float32] */;
  (%176,)
}

def @func_13445(%var_13341: Tensor[(297), bool], %var_13393: Tensor[(104), uint64], %var_13405: Tensor[(72), float32], %var_13406: Tensor[(576), int64], %var_13418: Tensor[(36), float64]) -> (Tensor[(297), uint32], Tensor[(504), int8], Tensor[(11, 11, 10), float32], Tensor[(390), bool], Tensor[(13, 14, 13), float32], Tensor[(5, 6, 13), float32], Tensor[(8, 2, 13), uint64], Tensor[(1, 3), int8], Tensor[(104), uint64], Tensor[(13, 14, 13), float64], Tensor[(128), float64], Tensor[(72), float32], Tensor[(576), int64], Tensor[(128), float64], Tensor[(36), float64], Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) {
  %177 = cast(%var_13341, dtype="bool") /* ty=Tensor[(297), bool] */;
  %178 = cast(%var_13341, dtype="bool") /* ty=Tensor[(297), bool] */;
  %179 = reshape(%177, newshape=[9, 3, 11]) /* ty=Tensor[(9, 3, 11), bool] */;
  %180 = reshape(%178, newshape=[9, 3, 11]) /* ty=Tensor[(9, 3, 11), bool] */;
  %181 = @func_11893(%179, %180) /* ty=(Tensor[(9, 3, 11), bool],) */;
  %182 = %181.0;
  %183 = cast(%182, dtype="uint32") /* ty=Tensor[(9, 3, 11), uint32] */;
  %184 = shape_of(%var_13341, dtype="int32") /* ty=Tensor[(1), int32] */;
  %185 = cast(%var_13341, dtype="uint32") /* ty=Tensor[(297), uint32] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %187 = @func_10469() /* ty=(Tensor[(4, 12, 8), int16], Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(504), int8]) */;
  %188 = @func_9821() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %189 = @func_12022() /* ty=(Tensor[(13, 14, 13), float64],) */;
  %190 = %189.0;
  %191 = cast(%190, dtype="float32") /* ty=Tensor[(13, 14, 13), float32] */;
  %192 = cast(meta[relay.Constant][18] /* ty=Tensor[(390), bool] */, dtype="bool") /* ty=Tensor[(390), bool] */;
  %193 = cast(meta[relay.Constant][18] /* ty=Tensor[(390), bool] */, dtype="bool") /* ty=Tensor[(390), bool] */;
  %194 = reshape(%192, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %195 = reshape(%193, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %196 = @func_1332(%194, %195) /* ty=Tensor[(5, 6, 13), bool] */;
  %197 = cast(%196, dtype="float32") /* ty=Tensor[(5, 6, 13), float32] */;
  %198 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 3), int8] */, dtype="int8") /* ty=Tensor[(1, 3), int8] */;
  %199 = cast(%var_13393, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %200 = reshape(%198, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), int8] */;
  %201 = reshape(%199, newshape=[104, 1]) /* ty=Tensor[(104, 1), uint64] */;
  %202 = @func_6847(%200, %201) /* ty=(Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) */;
  %203 = @func_12022() /* ty=(Tensor[(13, 14, 13), float64],) */;
  %204 = cast(%var_13405, dtype="float32") /* ty=Tensor[(72), float32] */;
  %205 = cast(%var_13406, dtype="int64") /* ty=Tensor[(576), int64] */;
  %206 = reshape(%204, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %207 = reshape(%205, newshape=[576]) /* ty=Tensor[(576), int64] */;
  %208 = @func_9715(%206, %207) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(128), float64], Tensor[(72), float32], Tensor[(128), float64], Tensor[(576), int64]) */;
  %209 = cast(%var_13418, dtype="float64") /* ty=Tensor[(36), float64] */;
  %210 = cast(%196, dtype="bool") /* ty=Tensor[(5, 6, 13), bool] */;
  %211 = reshape(%209, newshape=[6, 2, 3]) /* ty=Tensor[(6, 2, 3), float64] */;
  %212 = reshape(%210, newshape=[1, 390]) /* ty=Tensor[(1, 390), bool] */;
  %213 = @func_7802(%211, %212) /* ty=(Tensor[(6, 2, 3), float64], Tensor[(384), int16], Tensor[(52, 2), uint64], Tensor[(104, 2), uint64], Tensor[(5, 6, 13), bool], Tensor[(1, 390), bool], Tensor[(384), int16], Tensor[(128), float64], Tensor[(576), int64]) */;
  %214 = @func_9971() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %215 = bitwise_or(%185, %186) /* ty=Tensor[(297), uint32] */;
  %216 = %187.3;
  %217 = %188.0;
  %218 = log(%191) /* ty=Tensor[(13, 14, 13), float32] */;
  %219 = sigmoid(%197) /* ty=Tensor[(5, 6, 13), float32] */;
  %220 = %202.1;
  %221 = %203.0;
  %222 = %208.3;
  %223 = %213.7;
  %224 = @func_12668() /* ty=Tensor[(2, 10, 12), float32] */;
  %225 = %214.0;
  (%215, %216, %217, meta[relay.Constant][18] /* ty=Tensor[(390), bool] */, %218, %219, %220, meta[relay.Constant][19] /* ty=Tensor[(1, 3), int8] */, %var_13393, %221, %222, %var_13405, %var_13406, %223, %var_13418, %224, %225)
}

def @func_10147() -> Tensor[(13, 14, 13), float64] {
  %226 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 14, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 14, 13), float64] */;
  acos(%226) /* ty=Tensor[(13, 14, 13), float64] */
}

def @func_10908(%var_10889: Tensor[(2, 10, 12), float32]) -> (Tensor[(2, 10, 12), float64], Tensor[(104), uint64]) {
  %227 = @func_9289() /* ty=Tensor[(2, 10, 12), float32] */;
  %228 = cast(%var_10889, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
  %229 = shape_of(%227, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%227, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %232 = @func_10262() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(104), uint64], Tensor[(480), int16]) */;
  %233 = multiply(%230, %231) /* ty=Tensor[(2, 10, 12), float64] */;
  %234 = %232.1;
  (%233, %234)
}

def @func_683(%var_661: Tensor[(4, 12, 8), int16], %var_662: Tensor[(4, 12, 8), int16]) -> (Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) {
  %235 = cast(%var_662, dtype="int16") /* ty=Tensor[(4, 12, 8), int16] */;
  %236 = shape_of(%var_661, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%var_661, dtype="int16") /* ty=Tensor[(4, 12, 8), int16] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %239 = cast(meta[relay.Constant][21] /* ty=Tensor[(576), int64] */, dtype="int64") /* ty=Tensor[(576), int64] */;
  %240 = reshape(%239, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int64] */;
  %241 = @func_254(%240) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) */;
  %242 = cast(meta[relay.Constant][21] /* ty=Tensor[(576), int64] */, dtype="int64") /* ty=Tensor[(576), int64] */;
  %243 = reshape(%242, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int64] */;
  %244 = @func_254(%243) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) */;
  %245 = %244.1;
  %246 = cast(%245, dtype="int64") /* ty=Tensor[(8, 6, 12), int64] */;
  %247 = reshape(%246, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int64] */;
  %248 = @func_254(%247) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) */;
  %249 = logical_xor(%237, %238) /* ty=Tensor[(4, 12, 8), int16] */;
  %250 = %241.1;
  %251 = %248.0;
  (%249, %250, meta[relay.Constant][21] /* ty=Tensor[(576), int64] */, %245, %251)
}

def @func_10281() -> Tensor[(2, 10, 12), float32] {
  %252 = @func_9247() /* ty=Tensor[(2, 10, 12), float32] */;
  %253 = cast(%252, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
  cos(%253) /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_10262() -> (Tensor[(2, 10, 12), float32], Tensor[(104), uint64], Tensor[(480), int16]) {
  %254 = cast(meta[relay.Constant][22] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
  %255 = reshape(%254, newshape=[16, 3, 10]) /* ty=Tensor[(16, 3, 10), int16] */;
  %256 = @func_8166(%255) /* ty=(Tensor[(16, 3, 10), int16], Tensor[(208), uint64], Tensor[(3, 1), int8], Tensor[(104), uint64]) */;
  %257 = @func_9247() /* ty=Tensor[(2, 10, 12), float32] */;
  %258 = %256.3;
  (%257, %258, meta[relay.Constant][22] /* ty=Tensor[(480), int16] */)
}

def @func_7104(%var_7061: Tensor[(6, 4, 15), float64], %var_7065: Tensor[(576), int64], %var_7083: Tensor[(48), float64]) -> (Tensor[(8, 6, 12), float64], Tensor[(576), int64], Tensor[(6, 4, 15), float32], Tensor[(6, 4, 15), float64], Tensor[(6, 1, 8), float64], Tensor[(1, 60), float32], Tensor[(48), float64], Tensor[(6, 4, 15), float64], Tensor[(8, 6, 12), uint16], Tensor[(104), uint64], Tensor[(208), uint64]) {
  %259 = cast(%var_7065, dtype="int64") /* ty=Tensor[(576), int64] */;
  %260 = reshape(%259, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int64] */;
  %261 = @func_254(%260) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) */;
  %262 = cast(%var_7061, dtype="float64") /* ty=Tensor[(6, 4, 15), float64] */;
  %263 = sigmoid(%262) /* ty=Tensor[(6, 4, 15), float64] */;
  %264 = cast(%263, dtype="float32") /* ty=Tensor[(6, 4, 15), float32] */;
  %265 = cast(%263, dtype="float64") /* ty=Tensor[(6, 4, 15), float64] */;
  %266 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 60), float32] */, dtype="float32") /* ty=Tensor[(1, 60), float32] */;
  %267 = cast(%var_7083, dtype="float64") /* ty=Tensor[(48), float64] */;
  %268 = reshape(%266, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float32] */;
  %269 = reshape(%267, newshape=[4, 12]) /* ty=Tensor[(4, 12), float64] */;
  %270 = @func_3458(%268, %269) /* ty=(Tensor[(12, 5, ?), int64], Tensor[(6, 1, 8), float64], Tensor[(1568), int64], Tensor[(4, 12), float64]) */;
  %271 = cast(%263, dtype="float64") /* ty=Tensor[(6, 4, 15), float64] */;
  %272 = cast(meta[relay.Constant][24] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %273 = cast(meta[relay.Constant][25] /* ty=Tensor[(208), uint64] */, dtype="uint64") /* ty=Tensor[(208), uint64] */;
  %274 = reshape(%272, newshape=[8, 1, 13]) /* ty=Tensor[(8, 1, 13), uint64] */;
  %275 = reshape(%273, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), uint64] */;
  %276 = @func_3215(%274, %275) /* ty=(Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */;
  %277 = %261.0;
  %278 = log10(%264) /* ty=Tensor[(6, 4, 15), float32] */;
  %279 = rsqrt(%265) /* ty=Tensor[(6, 4, 15), float64] */;
  %280 = %270.1;
  %281 = log(%271) /* ty=Tensor[(6, 4, 15), float64] */;
  %282 = %276.1;
  (%277, %var_7065, %278, %279, %280, meta[relay.Constant][23] /* ty=Tensor[(1, 60), float32] */, %var_7083, %281, %282, meta[relay.Constant][24] /* ty=Tensor[(104), uint64] */, meta[relay.Constant][25] /* ty=Tensor[(208), uint64] */)
}

def @func_11863(%var_11848: Tensor[(384), int16]) -> (Tensor[(2, 10, 12), float64], Tensor[(48), float64], Tensor[(384), int16], Tensor[(8, 6, 12), float64], Tensor[(128), float64], Tensor[(576), int64]) {
  %283 = @func_9247() /* ty=Tensor[(2, 10, 12), float32] */;
  %284 = cast(%283, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
  %285 = cast(%var_11848, dtype="int16") /* ty=Tensor[(384), int16] */;
  %286 = reshape(%285, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %287 = @func_9643(%286) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(384), int16], Tensor[(4, 12), float64], Tensor[(60), float32], Tensor[(48), float64]) */;
  %288 = cast(meta[relay.Constant][26] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %289 = cast(meta[relay.Constant][27] /* ty=Tensor[(576), int64] */, dtype="int64") /* ty=Tensor[(576), int64] */;
  %290 = cast(%var_11848, dtype="int16") /* ty=Tensor[(384), int16] */;
  %291 = reshape(%288, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float64] */;
  %292 = reshape(%289, newshape=[2, 288]) /* ty=Tensor[(2, 288), int64] */;
  %293 = reshape(%290, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %294 = @func_1141(%291, %292, %293) /* ty=(Tensor[(16, 2, 4), float64], Tensor[(8, 6, 12), float64], Tensor[(2, 288), int64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %295 = sin(%284) /* ty=Tensor[(2, 10, 12), float64] */;
  %296 = %287.5;
  %297 = %294.1;
  (%295, %296, %var_11848, %297, meta[relay.Constant][26] /* ty=Tensor[(128), float64] */, meta[relay.Constant][27] /* ty=Tensor[(576), int64] */)
}

def @func_9643(%var_9620: Tensor[(384), int16]) -> (Tensor[(11, 11, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(384), int16], Tensor[(4, 12), float64], Tensor[(60), float32], Tensor[(48), float64]) {
  %298 = @func_9578() /* ty=Tensor[(11, 11, 10), float32] */;
  %299 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 11, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 11, 10), float32] */;
  %300 = shape_of(%298, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%298, dtype="float32") /* ty=Tensor[(11, 11, 10), float32] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %303 = cast(%var_9620, dtype="int16") /* ty=Tensor[(384), int16] */;
  %304 = cast(%var_9620, dtype="int16") /* ty=Tensor[(384), int16] */;
  %305 = reshape(%303, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %306 = reshape(%304, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %307 = @func_683(%305, %306) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %308 = cast(meta[relay.Constant][29] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %309 = cast(meta[relay.Constant][30] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %310 = reshape(%308, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float32] */;
  %311 = reshape(%309, newshape=[4, 12]) /* ty=Tensor[(4, 12), float64] */;
  %312 = @func_3458(%310, %311) /* ty=(Tensor[(12, 5, ?), int64], Tensor[(6, 1, 8), float64], Tensor[(1568), int64], Tensor[(4, 12), float64]) */;
  %313 = floor_mod(%301, %302) /* ty=Tensor[(11, 11, 10), float32] */;
  %314 = %307.1;
  %315 = %312.3;
  (%313, %314, %var_9620, %315, meta[relay.Constant][29] /* ty=Tensor[(60), float32] */, meta[relay.Constant][30] /* ty=Tensor[(48), float64] */)
}

def @func_7802(%var_7783: Tensor[(6, 2, 3), float64], %var_7795: Tensor[(1, 390), bool]) -> (Tensor[(6, 2, 3), float64], Tensor[(384), int16], Tensor[(52, 2), uint64], Tensor[(104, 2), uint64], Tensor[(5, 6, 13), bool], Tensor[(1, 390), bool], Tensor[(384), int16], Tensor[(128), float64], Tensor[(576), int64]) {
  %316 = cast(%var_7783, dtype="float64") /* ty=Tensor[(6, 2, 3), float64] */;
  %317 = cast(meta[relay.Constant][31] /* ty=Tensor[(52, 2), uint64] */, dtype="uint64") /* ty=Tensor[(52, 2), uint64] */;
  %318 = cast(meta[relay.Constant][32] /* ty=Tensor[(104, 2), uint64] */, dtype="uint64") /* ty=Tensor[(104, 2), uint64] */;
  %319 = reshape(%317, newshape=[8, 1, 13]) /* ty=Tensor[(8, 1, 13), uint64] */;
  %320 = reshape(%318, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), uint64] */;
  %321 = @func_3215(%319, %320) /* ty=(Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */;
  %322 = cast(%var_7795, dtype="bool") /* ty=Tensor[(1, 390), bool] */;
  %323 = cast(%var_7795, dtype="bool") /* ty=Tensor[(1, 390), bool] */;
  %324 = reshape(%322, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %325 = reshape(%323, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %326 = cast(meta[relay.Constant][33] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %327 = cast(meta[relay.Constant][34] /* ty=Tensor[(576), int64] */, dtype="int64") /* ty=Tensor[(576), int64] */;
  %328 = %321.2;
  %329 = cast(%328, dtype="int16") /* ty=Tensor[(384), int16] */;
  %330 = reshape(%326, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float64] */;
  %331 = reshape(%327, newshape=[2, 288]) /* ty=Tensor[(2, 288), int64] */;
  %332 = reshape(%329, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %333 = @func_1141(%330, %331, %332) /* ty=(Tensor[(16, 2, 4), float64], Tensor[(8, 6, 12), float64], Tensor[(2, 288), int64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %334 = cos(%316) /* ty=Tensor[(6, 2, 3), float64] */;
  %335 = @func_1332(%324, %325) /* ty=Tensor[(5, 6, 13), bool] */;
  %336 = %333.4;
  (%334, %328, meta[relay.Constant][31] /* ty=Tensor[(52, 2), uint64] */, meta[relay.Constant][32] /* ty=Tensor[(104, 2), uint64] */, %335, %var_7795, %336, meta[relay.Constant][33] /* ty=Tensor[(128), float64] */, meta[relay.Constant][34] /* ty=Tensor[(576), int64] */)
}

def @func_11522() -> Tensor[(2, 10, 12), float32] {
  %337 = @func_9688() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(2, 10, 12), float32]) */;
  %337.1
}

def @func_11694() -> Tensor[(2, 10, 12), float32] {
  %338 = @func_9439() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %338.0
}

def @func_8166(%var_8154: Tensor[(16, 3, 10), int16]) -> (Tensor[(16, 3, 10), int16], Tensor[(208), uint64], Tensor[(3, 1), int8], Tensor[(104), uint64]) {
  %339 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 3, 10), int16] */, dtype="int16") /* ty=Tensor[(16, 3, 10), int16] */;
  %340 = shape_of(%var_8154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%var_8154, dtype="int16") /* ty=Tensor[(16, 3, 10), int16] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %343 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 1), int8] */, dtype="int8") /* ty=Tensor[(3, 1), int8] */;
  %344 = cast(meta[relay.Constant][37] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %345 = reshape(%343, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), int8] */;
  %346 = reshape(%344, newshape=[104, 1]) /* ty=Tensor[(104, 1), uint64] */;
  %347 = @func_6847(%345, %346) /* ty=(Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) */;
  %348 = maximum(%341, %342) /* ty=Tensor[(16, 3, 10), int16] */;
  %349 = %347.3;
  (%348, %349, meta[relay.Constant][36] /* ty=Tensor[(3, 1), int8] */, meta[relay.Constant][37] /* ty=Tensor[(104), uint64] */)
}

def @func_1332(%var_1327: Tensor[(5, 6, 13), bool], %var_1328: Tensor[(5, 6, 13), bool]) -> Tensor[(5, 6, 13), bool] {
  %350 = cast(%var_1328, dtype="bool") /* ty=Tensor[(5, 6, 13), bool] */;
  %351 = shape_of(%var_1327, dtype="int32") /* ty=Tensor[(3), int32] */;
  %352 = cast(%var_1327, dtype="bool") /* ty=Tensor[(5, 6, 13), bool] */;
  %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%352, %353) /* ty=Tensor[(5, 6, 13), bool] */
}

def @func_7507(%var_7465: Tensor[(10, 5, 14), int64], %var_7466: Tensor[(10, 5, 14), int64]) -> (Tensor[(10, 5, 14), int64], Tensor[(6, 1, 8), float64], Tensor[(2, 24), float64]) {
  %354 = cast(%var_7466, dtype="int64") /* ty=Tensor[(10, 5, 14), int64] */;
  %355 = shape_of(%var_7465, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%var_7465, dtype="int64") /* ty=Tensor[(10, 5, 14), int64] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %358 = cast(meta[relay.Constant][38] /* ty=Tensor[(2, 24), float64] */, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %359 = reshape(%358, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float64] */;
  %360 = right_shift(%356, %357) /* ty=Tensor[(10, 5, 14), int64] */;
  %361 = @func_1939(%359) /* ty=Tensor[(6, 1, 8), float64] */;
  (%360, %361, meta[relay.Constant][38] /* ty=Tensor[(2, 24), float64] */)
}

def @func_8366(%var_8315: Tensor[(11, 5, 11), float64], %var_8334: Tensor[(11, 5, 11), float64]) -> (Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), bool], Tensor[(1, 3, 1), int8], Tensor[(3), int8], Tensor[(104), uint64]) {
  %362 = cast(%var_8315, dtype="float64") /* ty=Tensor[(11, 5, 11), float64] */;
  %363 = cast(%var_8315, dtype="float64") /* ty=Tensor[(11, 5, 11), float64] */;
  %364 = cast(%var_8334, dtype="bool") /* ty=Tensor[(11, 5, 11), bool] */;
  %365 = shape_of(%var_8315, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%var_8315, dtype="bool") /* ty=Tensor[(11, 5, 11), bool] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %368 = cast(meta[relay.Constant][39] /* ty=Tensor[(3), int8] */, dtype="int8") /* ty=Tensor[(3), int8] */;
  %369 = cast(meta[relay.Constant][40] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %370 = reshape(%368, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), int8] */;
  %371 = reshape(%369, newshape=[104, 1]) /* ty=Tensor[(104, 1), uint64] */;
  %372 = @func_6847(%370, %371) /* ty=(Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) */;
  %373 = acosh(%362) /* ty=Tensor[(11, 5, 11), float64] */;
  %374 = atan(%363) /* ty=Tensor[(11, 5, 11), float64] */;
  %375 = less(%366, %367) /* ty=Tensor[(11, 5, 11), bool] */;
  %376 = %372.0;
  (%373, %374, %375, %376, meta[relay.Constant][39] /* ty=Tensor[(3), int8] */, meta[relay.Constant][40] /* ty=Tensor[(104), uint64] */)
}

def @func_9698() -> (Tensor[(2, 10, 12), float32],) {
  %377 = @func_9439() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %378 = %377.0;
  (%378,)
}

def @func_13293(%var_13276: Tensor[(49, 6), float64], %var_13277: int64, %var_13278: Tensor[(4, 12), float64]) -> (Tensor[(2, 10, 12), float32], Tensor[(48), float64], Tensor[(49, 6), float64], int64, Tensor[(4, 12), float64]) {
  %379 = @func_13264() /* ty=(Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(104), uint64]) */;
  %380 = cast(%var_13276, dtype="float64") /* ty=Tensor[(49, 6), float64] */;
  %381 = cast(%var_13277, dtype="int64") /* ty=int64 */;
  %382 = cast(%var_13278, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %383 = reshape(%380, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float64] */;
  %384 = reshape(%381, newshape=[]) /* ty=int64 */;
  %385 = reshape(%382, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %386 = @func_5498(%383, %384, %385) /* ty=(Tensor[(7, 3, 14), float64], Tensor[(48), float64], int64, Tensor[(1568), int64], Tensor[(48), float64]) */;
  %387 = %379.1;
  %388 = %386.4;
  (%387, %388, %var_13276, %var_13277, %var_13278)
}

def @func_13871() -> (Tensor[(11, 11, 10), float32],) {
  %389 = @func_10830() /* ty=Tensor[(11, 11, 10), float32] */;
  (%389,)
}

def @func_9688() -> (Tensor[(2, 10, 12), float32], Tensor[(2, 10, 12), float32]) {
  %390 = @func_9439() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %391 = %390.0;
  %392 = @func_9389() /* ty=Tensor[(2, 10, 12), float32] */;
  (%391, %392)
}

def @func_5580(%var_5541: Tensor[(4, 6, 3), float32], %var_5542: Tensor[(4, 6, 3), float32], %var_5547: Tensor[(4, 6, 3), float32], %var_5568: Tensor[(128), float64], %var_5569: Tensor[(576), int64]) -> (Tensor[(4, 6, 3), float32], Tensor[(4, 6, 3), bool], Tensor[(9, 16, 12), uint64], Tensor[(1728), uint64], Tensor[(128), float64], Tensor[(220), uint8], Tensor[(128), float64], Tensor[(576), int64], Tensor[(384), int16]) {
  %393 = cast(%var_5542, dtype="float32") /* ty=Tensor[(4, 6, 3), float32] */;
  %394 = shape_of(%var_5541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%var_5541, dtype="float32") /* ty=Tensor[(4, 6, 3), float32] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %397 = cast(%var_5547, dtype="uint16") /* ty=Tensor[(4, 6, 3), uint16] */;
  %398 = shape_of(%var_5541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %399 = cast(%var_5541, dtype="uint16") /* ty=Tensor[(4, 6, 3), uint16] */;
  %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %401 = left_shift(%399, %400) /* ty=Tensor[(4, 6, 3), uint16] */;
  %402 = cast(%var_5541, dtype="bool") /* ty=Tensor[(4, 6, 3), bool] */;
  %403 = shape_of(%401, dtype="int32") /* ty=Tensor[(3), int32] */;
  %404 = cast(%401, dtype="bool") /* ty=Tensor[(4, 6, 3), bool] */;
  %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %406 = cast(meta[relay.Constant][41] /* ty=Tensor[(1728), uint64] */, dtype="uint64") /* ty=Tensor[(1728), uint64] */;
  %407 = reshape(%406, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), uint64] */;
  %408 = @func_2312(%407) /* ty=(Tensor[(9, 16, 12), uint64], Tensor[(9, 16, 12), int16], Tensor[(9, 16, 12), float32]) */;
  %409 = cast(meta[relay.Constant][42] /* ty=Tensor[(220), uint8] */, dtype="uint8") /* ty=Tensor[(220), uint8] */;
  %410 = cast(meta[relay.Constant][42] /* ty=Tensor[(220), uint8] */, dtype="uint8") /* ty=Tensor[(220), uint8] */;
  %411 = cast(%var_5568, dtype="float64") /* ty=Tensor[(128), float64] */;
  %412 = cast(%var_5569, dtype="int64") /* ty=Tensor[(576), int64] */;
  %413 = cast(meta[relay.Constant][43] /* ty=Tensor[(384), int16] */, dtype="int16") /* ty=Tensor[(384), int16] */;
  %414 = reshape(%409, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), uint8] */;
  %415 = reshape(%410, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), uint8] */;
  %416 = reshape(%411, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %417 = reshape(%412, newshape=[144, 4]) /* ty=Tensor[(144, 4), int64] */;
  %418 = reshape(%413, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %419 = @func_1282(%414, %415, %416, %417, %418) /* ty=(Tensor[(11, 5, 4), uint8], Tensor[(384), int16], Tensor[(128), float64], Tensor[(144, 4), int64], Tensor[(384), int16]) */;
  %420 = floor_divide(%395, %396) /* ty=Tensor[(4, 6, 3), float32] */;
  %421 = logical_and(%404, %405) /* ty=Tensor[(4, 6, 3), bool] */;
  %422 = %408.0;
  %423 = %419.2;
  (%420, %421, %422, meta[relay.Constant][41] /* ty=Tensor[(1728), uint64] */, %423, meta[relay.Constant][42] /* ty=Tensor[(220), uint8] */, %var_5568, %var_5569, meta[relay.Constant][43] /* ty=Tensor[(384), int16] */)
}

def @func_14619() -> (Tensor[(2, 10, 12), float32],) {
  %424 = @func_11694() /* ty=Tensor[(2, 10, 12), float32] */;
  (%424,)
}

def @func_11336() -> Tensor[(11, 11, 10), float32] {
  %425 = @func_9971() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %425.0
}

def @func_14932() -> Tensor[(11, 11, 10), float32] {
  @func_12455() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_2909(%var_2869: int64, %var_2870: Tensor[(14, 7, 16), int64], %var_2883: Tensor[(48), float64]) -> (Tensor[(14, 7, 16), int64], Tensor[(6, 1, 8), float64], Tensor[(48), float64]) {
  %426 = cast(%var_2869, dtype="int64") /* ty=int64 */;
  %427 = cast(%var_2870, dtype="int64") /* ty=Tensor[(14, 7, 16), int64] */;
  %428 = cast(%var_2883, dtype="float64") /* ty=Tensor[(48), float64] */;
  %429 = reshape(%428, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float64] */;
  %430 = left_shift(%426, %427) /* ty=Tensor[(14, 7, 16), int64] */;
  %431 = @func_1939(%429) /* ty=Tensor[(6, 1, 8), float64] */;
  (%430, %431, %var_2883)
}

def @func_13264() -> (Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(104), uint64]) {
  %432 = @func_10704() /* ty=(Tensor[(104), uint64], Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(504), int8]) */;
  %433 = @func_11780() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %434 = @func_10704() /* ty=(Tensor[(104), uint64], Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(504), int8]) */;
  %435 = %432.1;
  %436 = %433.0;
  %437 = %434.0;
  (%435, %436, %437)
}

def @func_10402() -> (Tensor[(2, 10, 12), float32], Tensor[(8, 6, 12), uint16], Tensor[(384, 1), int16], Tensor[(144, 4), uint32], Tensor[(700), int64], Tensor[(4, 12, 8), int16]) {
  %438 = @func_9688() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(2, 10, 12), float32]) */;
  %439 = cast(meta[relay.Constant][44] /* ty=Tensor[(384, 1), int16] */, dtype="int16") /* ty=Tensor[(384, 1), int16] */;
  %440 = cast(meta[relay.Constant][44] /* ty=Tensor[(384, 1), int16] */, dtype="int16") /* ty=Tensor[(384, 1), int16] */;
  %441 = reshape(%439, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %442 = reshape(%440, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %443 = @func_683(%441, %442) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %444 = cast(meta[relay.Constant][45] /* ty=Tensor[(700), int64] */, dtype="int64") /* ty=Tensor[(700), int64] */;
  %445 = reshape(%444, newshape=[10, 70]) /* ty=Tensor[(10, 70), int64] */;
  %446 = @func_9777(%445) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(144, 4), uint32], Tensor[(486), uint32], Tensor[(128), float64], Tensor[(2, 24), float64], Tensor[(10, 70), int64]) */;
  %447 = cast(meta[relay.Constant][44] /* ty=Tensor[(384, 1), int16] */, dtype="int16") /* ty=Tensor[(384, 1), int16] */;
  %448 = cast(meta[relay.Constant][44] /* ty=Tensor[(384, 1), int16] */, dtype="int16") /* ty=Tensor[(384, 1), int16] */;
  %449 = reshape(%447, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %450 = reshape(%448, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %451 = @func_683(%449, %450) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %452 = %438.0;
  %453 = %443.3;
  %454 = %446.3;
  %455 = %451.0;
  (%452, %453, meta[relay.Constant][44] /* ty=Tensor[(384, 1), int16] */, %454, meta[relay.Constant][45] /* ty=Tensor[(700), int64] */, %455)
}

def @func_9411() -> Tensor[(11, 11, 10), float32] {
  %456 = @func_9268() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %456.0
}

def @func_11044(%var_10946: Tensor[(8, 11, 1), uint64], %var_10961: Tensor[(8, 11, 8), uint64], %var_10977: Tensor[(160), int64], %var_10987: Tensor[(700), int64], %var_10989: Tensor[(8, 11, 8), uint64], %var_11004: Tensor[(96), int64], %var_11011: Tensor[(390, 2), float32], %var_11012: Tensor[(128), float64]) -> (Tensor[(8, 11, 8), bool], Tensor[(4, 8, 5), float32], Tensor[(160), int64], Tensor[(2, 392), float64], Tensor[(700), int64], Tensor[(8, 11, 8), uint16], Tensor[(6, 384, 8), bool], Tensor[(1, 6, 16), bool], Tensor[(96), int64], Tensor[(390, 2), float32], Tensor[(128), float64], Tensor[(8, 11, 605), uint16], Tensor[(2, 24), float64], Tensor[(104), uint64], Tensor[(450, 2), float32], Tensor[(208), uint64], Tensor[(128), float64], Tensor[(486), uint32], Tensor[(8, 11, 8), float32]) {
  %457 = cast(meta[relay.Constant][46] /* ty=Tensor[(8, 11, 1), uint64] */, dtype="uint64") /* ty=Tensor[(8, 11, 1), uint64] */;
  %458 = shape_of(%var_10946, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%var_10946, dtype="uint64") /* ty=Tensor[(8, 11, 1), uint64] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %461 = subtract(%459, %460) /* ty=Tensor[(8, 11, ?), uint64] */;
  %462 = cast(%461, dtype="bool") /* ty=Tensor[(8, 11, ?), bool] */;
  %463 = cast(%var_10961, dtype="bool") /* ty=Tensor[(8, 11, 8), bool] */;
  %464 = cast(%var_10977, dtype="int64") /* ty=Tensor[(160), int64] */;
  %465 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 392), float64] */, dtype="float64") /* ty=Tensor[(2, 392), float64] */;
  %466 = @func_10402() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(8, 6, 12), uint16], Tensor[(384, 1), int16], Tensor[(144, 4), uint32], Tensor[(700), int64], Tensor[(4, 12, 8), int16]) */;
  %467 = %466.2;
  %468 = cast(%467, dtype="int16") /* ty=Tensor[(384, 1), int16] */;
  %469 = reshape(%464, newshape=[4, 8, 5]) /* ty=Tensor[(4, 8, 5), int64] */;
  %470 = reshape(%465, newshape=[784]) /* ty=Tensor[(784), float64] */;
  %471 = reshape(%468, newshape=[1, 384]) /* ty=Tensor[(1, 384), int16] */;
  %472 = @func_4875(%469, %470, %471) /* ty=(Tensor[(4, 8, 5), bool], Tensor[(4, 8, 5), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(4, 12, 8), int16], Tensor[(1, 384), int16]) */;
  %473 = cast(%var_10989, dtype="uint16") /* ty=Tensor[(8, 11, 8), uint16] */;
  %474 = shape_of(%var_10961, dtype="int32") /* ty=Tensor[(3), int32] */;
  %475 = cast(%var_10961, dtype="uint16") /* ty=Tensor[(8, 11, 8), uint16] */;
  %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %477 = cast(%var_10987, dtype="int64") /* ty=Tensor[(700), int64] */;
  %478 = cast(%var_10987, dtype="int64") /* ty=Tensor[(700), int64] */;
  %479 = reshape(%477, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
  %480 = reshape(%478, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
  %481 = @func_7507(%479, %480) /* ty=(Tensor[(10, 5, 14), int64], Tensor[(6, 1, 8), float64], Tensor[(2, 24), float64]) */;
  %482 = %481.1;
  %483 = cast(%482, dtype="bool") /* ty=Tensor[(6, 1, 8), bool] */;
  %484 = cast(%467, dtype="bool") /* ty=Tensor[(384, 1), bool] */;
  %485 = cast(%var_11004, dtype="int64") /* ty=Tensor[(96), int64] */;
  %486 = reshape(%485, newshape=[1, 6, 16]) /* ty=Tensor[(1, 6, 16), int64] */;
  %487 = cast(%var_11011, dtype="float32") /* ty=Tensor[(390, 2), float32] */;
  %488 = cast(%var_11012, dtype="float64") /* ty=Tensor[(128), float64] */;
  %489 = cast(%467, dtype="int16") /* ty=Tensor[(384, 1), int16] */;
  %490 = reshape(%487, newshape=[13, 5, 12]) /* ty=Tensor[(13, 5, 12), float32] */;
  %491 = reshape(%488, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %492 = reshape(%489, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %493 = @func_9523(%490, %491, %492) /* ty=(Tensor[(13, 5, 12), float32], Tensor[(3, 24), float32], Tensor[(128), float64], Tensor[(576), int64], Tensor[(8, 6, 12), float64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(9, 16, 12), bool], Tensor[(11, 5, 11), float64], Tensor[(605), float64]) */;
  %494 = %493.9;
  %495 = cast(%461, dtype="uint16") /* ty=Tensor[(8, 11, ?), uint16] */;
  %496 = cast(%494, dtype="uint16") /* ty=Tensor[(605), uint16] */;
  %497 = cast(%var_10987, dtype="int64") /* ty=Tensor[(700), int64] */;
  %498 = cast(%var_10987, dtype="int64") /* ty=Tensor[(700), int64] */;
  %499 = reshape(%497, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
  %500 = reshape(%498, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
  %501 = @func_7507(%499, %500) /* ty=(Tensor[(10, 5, 14), int64], Tensor[(6, 1, 8), float64], Tensor[(2, 24), float64]) */;
  %502 = cast(meta[relay.Constant][48] /* ty=Tensor[(450, 2), float32] */, dtype="float32") /* ty=Tensor[(450, 2), float32] */;
  %503 = cast(meta[relay.Constant][49] /* ty=Tensor[(208), uint64] */, dtype="uint64") /* ty=Tensor[(208), uint64] */;
  %504 = reshape(%502, newshape=[6, 15, 10]) /* ty=Tensor[(6, 15, 10), float32] */;
  %505 = reshape(%503, newshape=[208]) /* ty=Tensor[(208), uint64] */;
  %506 = @func_6704(%504, %505) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(104), uint64], Tensor[(208), uint64]) */;
  %507 = cast(meta[relay.Constant][50] /* ty=Tensor[(486), uint32] */, dtype="uint32") /* ty=Tensor[(486), uint32] */;
  %508 = cast(meta[relay.Constant][50] /* ty=Tensor[(486), uint32] */, dtype="uint32") /* ty=Tensor[(486), uint32] */;
  %509 = cast(%var_11012, dtype="float64") /* ty=Tensor[(128), float64] */;
  %510 = reshape(%507, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), uint32] */;
  %511 = reshape(%508, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), uint32] */;
  %512 = reshape(%509, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %513 = @func_4650(%510, %511, %512) /* ty=(Tensor[(6, 9, 9), bool], Tensor[(576), int64], Tensor[(128), float64], Tensor[(6, 96), int64], Tensor[(6, 64), int16], Tensor[(9, 16, 12), int16], Tensor[(1728), uint64], Tensor[(1, 220), uint8], Tensor[(144, 4), uint32]) */;
  %514 = cast(%var_10961, dtype="float32") /* ty=Tensor[(8, 11, 8), float32] */;
  %515 = cast(%var_10946, dtype="float32") /* ty=Tensor[(8, 11, 1), float32] */;
  %516 = logical_or(%462, %463) /* ty=Tensor[(8, 11, 8), bool] */;
  %517 = %472.1;
  %518 = maximum(%475, %476) /* ty=Tensor[(8, 11, 8), uint16] */;
  %519 = greater_equal(%483, %484) /* ty=Tensor[(6, 384, 8), bool] */;
  %520 = @func_3495(%486) /* ty=Tensor[(1, 6, 16), bool] */;
  %521 = minimum(%495, %496) /* ty=Tensor[(8, 11, 605), uint16] */;
  %522 = %501.2;
  %523 = %506.2;
  %524 = %513.2;
  %525 = power(%514, %515) /* ty=Tensor[(8, 11, 8), float32] */;
  (%516, %517, %var_10977, meta[relay.Constant][47] /* ty=Tensor[(2, 392), float64] */, %var_10987, %518, %519, %520, %var_11004, %var_11011, %var_11012, %521, %522, %523, meta[relay.Constant][48] /* ty=Tensor[(450, 2), float32] */, meta[relay.Constant][49] /* ty=Tensor[(208), uint64] */, %524, meta[relay.Constant][50] /* ty=Tensor[(486), uint32] */, %525)
}

def @func_9867(%var_9857: Tensor[(1, 10, 5), float64]) -> Tensor[(1, 10, 5), float64] {
  %526 = cast(%var_9857, dtype="float64") /* ty=Tensor[(1, 10, 5), float64] */;
  sqrt(%526) /* ty=Tensor[(1, 10, 5), float64] */
}

def @func_14976() -> (Tensor[(?, 4, 5), bool], Tensor[(13, 14, 13), float64]) {
  %527 = @func_13787() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(?, 4, 5), float32], Tensor[(?, 4, 5), bool]) */;
  %528 = @func_13545() /* ty=(Tensor[(13, 14, 13), float64],) */;
  %529 = %527.2;
  %530 = %528.0;
  (%529, %530)
}

def @func_14993() -> (Tensor[(13, 14, 13), float64],) {
  %531 = @func_13545() /* ty=(Tensor[(13, 14, 13), float64],) */;
  %532 = %531.0;
  (%532,)
}

def @func_10517() -> Tensor[(2, 10, 12), float32] {
  @func_9946() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_13578() -> (Tensor[(2, 10, 12), float32],) {
  %533 = @func_11222() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %534 = %533.0;
  (%534,)
}

def @func_1282(%var_1263: Tensor[(11, 5, 4), uint8], %var_1264: Tensor[(11, 5, 4), uint8], %var_1276: Tensor[(128), float64], %var_1277: Tensor[(144, 4), int64], %var_1278: Tensor[(384), int16]) -> (Tensor[(11, 5, 4), uint8], Tensor[(384), int16], Tensor[(128), float64], Tensor[(144, 4), int64], Tensor[(384), int16]) {
  %535 = cast(%var_1264, dtype="uint8") /* ty=Tensor[(11, 5, 4), uint8] */;
  %536 = shape_of(%var_1263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(%var_1263, dtype="uint8") /* ty=Tensor[(11, 5, 4), uint8] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %539 = cast(%var_1276, dtype="float64") /* ty=Tensor[(128), float64] */;
  %540 = cast(%var_1277, dtype="int64") /* ty=Tensor[(144, 4), int64] */;
  %541 = cast(%var_1278, dtype="int16") /* ty=Tensor[(384), int16] */;
  %542 = reshape(%539, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float64] */;
  %543 = reshape(%540, newshape=[2, 288]) /* ty=Tensor[(2, 288), int64] */;
  %544 = reshape(%541, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %545 = @func_1141(%542, %543, %544) /* ty=(Tensor[(16, 2, 4), float64], Tensor[(8, 6, 12), float64], Tensor[(2, 288), int64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %546 = bitwise_or(%537, %538) /* ty=Tensor[(11, 5, 4), uint8] */;
  %547 = %545.4;
  (%546, %547, %var_1276, %var_1277, %var_1278)
}

def @func_9715(%var_9709: Tensor[(72), float32], %var_9711: Tensor[(576), int64]) -> (Tensor[(11, 11, 10), float32], Tensor[(128), float64], Tensor[(72), float32], Tensor[(128), float64], Tensor[(576), int64]) {
  %548 = cast(%var_9709, dtype="float32") /* ty=Tensor[(72), float32] */;
  %549 = cast(%var_9709, dtype="float32") /* ty=Tensor[(72), float32] */;
  %550 = cast(%var_9709, dtype="float32") /* ty=Tensor[(72), float32] */;
  %551 = cast(meta[relay.Constant][51] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %552 = cast(%var_9711, dtype="int64") /* ty=Tensor[(576), int64] */;
  %553 = reshape(%548, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %554 = reshape(%549, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %555 = reshape(%550, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %556 = reshape(%551, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %557 = reshape(%552, newshape=[576]) /* ty=Tensor[(576), int64] */;
  %558 = @func_5580(%553, %554, %555, %556, %557) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(4, 6, 3), bool], Tensor[(9, 16, 12), uint64], Tensor[(1728), uint64], Tensor[(128), float64], Tensor[(220), uint8], Tensor[(128), float64], Tensor[(576), int64], Tensor[(384), int16]) */;
  %559 = @func_9411() /* ty=Tensor[(11, 11, 10), float32] */;
  %560 = %558.4;
  (%559, %560, %var_9709, meta[relay.Constant][51] /* ty=Tensor[(128), float64] */, %var_9711)
}

def @func_9946() -> Tensor[(2, 10, 12), float32] {
  %561 = @func_9439() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %561.0
}

def @func_11192(%var_11168: Tensor[(700), int64], %var_11169: Tensor[(1, 96), int64], %var_11170: Tensor[(780), float32]) -> (Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(11, 11, 10), float32], Tensor[(2, 392), float64], Tensor[(88), uint64], Tensor[(704), uint64], Tensor[(160), int64], Tensor[(700), int64], Tensor[(1, 96), int64], Tensor[(128), float64], Tensor[(780), float64]) {
  %562 = @func_10469() /* ty=(Tensor[(4, 12, 8), int16], Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(504), int8]) */;
  %563 = @func_10540() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) */;
  %564 = cast(meta[relay.Constant][52] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %565 = cast(meta[relay.Constant][53] /* ty=Tensor[(704), uint64] */, dtype="uint64") /* ty=Tensor[(704), uint64] */;
  %566 = cast(meta[relay.Constant][54] /* ty=Tensor[(160), int64] */, dtype="int64") /* ty=Tensor[(160), int64] */;
  %567 = cast(%var_11168, dtype="int64") /* ty=Tensor[(700), int64] */;
  %568 = cast(meta[relay.Constant][53] /* ty=Tensor[(704), uint64] */, dtype="uint64") /* ty=Tensor[(704), uint64] */;
  %569 = cast(%var_11169, dtype="int64") /* ty=Tensor[(1, 96), int64] */;
  %570 = cast(%var_11170, dtype="float32") /* ty=Tensor[(780), float32] */;
  %571 = cast(meta[relay.Constant][55] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %572 = reshape(%564, newshape=[8, 11, 1]) /* ty=Tensor[(8, 11, 1), uint64] */;
  %573 = reshape(%565, newshape=[8, 11, 8]) /* ty=Tensor[(8, 11, 8), uint64] */;
  %574 = reshape(%566, newshape=[160]) /* ty=Tensor[(160), int64] */;
  %575 = reshape(%567, newshape=[700]) /* ty=Tensor[(700), int64] */;
  %576 = reshape(%568, newshape=[8, 11, 8]) /* ty=Tensor[(8, 11, 8), uint64] */;
  %577 = reshape(%569, newshape=[96]) /* ty=Tensor[(96), int64] */;
  %578 = reshape(%570, newshape=[390, 2]) /* ty=Tensor[(390, 2), float32] */;
  %579 = reshape(%571, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %580 = @func_11044(%572, %573, %574, %575, %576, %577, %578, %579) /* ty=(Tensor[(8, 11, 8), bool], Tensor[(4, 8, 5), float32], Tensor[(160), int64], Tensor[(2, 392), float64], Tensor[(700), int64], Tensor[(8, 11, 8), uint16], Tensor[(6, 384, 8), bool], Tensor[(1, 6, 16), bool], Tensor[(96), int64], Tensor[(390, 2), float32], Tensor[(128), float64], Tensor[(8, 11, 605), uint16], Tensor[(2, 24), float64], Tensor[(104), uint64], Tensor[(450, 2), float32], Tensor[(208), uint64], Tensor[(128), float64], Tensor[(486), uint32], Tensor[(8, 11, 8), float32]) */;
  %581 = cast(%var_11170, dtype="float64") /* ty=Tensor[(780), float64] */;
  %582 = @func_9389() /* ty=Tensor[(2, 10, 12), float32] */;
  %583 = %562.2;
  %584 = %563.1;
  %585 = %580.3;
  %586 = tan(%581) /* ty=Tensor[(780), float64] */;
  (%582, %583, %584, %585, meta[relay.Constant][52] /* ty=Tensor[(88), uint64] */, meta[relay.Constant][53] /* ty=Tensor[(704), uint64] */, meta[relay.Constant][54] /* ty=Tensor[(160), int64] */, %var_11168, %var_11169, meta[relay.Constant][55] /* ty=Tensor[(128), float64] */, %586)
}

def @func_9439() -> (Tensor[(2, 10, 12), float32],) {
  %587 = @func_9289() /* ty=Tensor[(2, 10, 12), float32] */;
  (%587,)
}

def @func_12668() -> Tensor[(2, 10, 12), float32] {
  %588 = @func_9688() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(2, 10, 12), float32]) */;
  %588.0
}

def @func_12775() -> (Tensor[(11, 11, 10), float32],) {
  %589 = @func_10830() /* ty=Tensor[(11, 11, 10), float32] */;
  (%589,)
}

def @func_13545() -> (Tensor[(13, 14, 13), float64],) {
  %590 = @func_10147() /* ty=Tensor[(13, 14, 13), float64] */;
  (%590,)
}

def @func_13161() -> (Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32]) {
  %591 = @func_9821() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %592 = %591.0;
  %593 = @func_9946() /* ty=Tensor[(2, 10, 12), float32] */;
  (%592, %593)
}

def @func_13787() -> (Tensor[(2, 10, 12), float32], Tensor[(?, 4, 5), float32], Tensor[(?, 4, 5), bool]) {
  %594 = @func_9698() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %595 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 4, 5), float32] */, dtype="float32") /* ty=Tensor[(1, 4, 5), float32] */;
  %596 = cosh(%595) /* ty=Tensor[(1, 4, 5), float32] */;
  %597 = cast(%596, dtype="float32") /* ty=Tensor[(1, 4, 5), float32] */;
  %598 = cos(%597) /* ty=Tensor[(1, 4, 5), float32] */;
  %599 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 4, 5), float32] */, dtype="float64") /* ty=Tensor[(1, 4, 5), float64] */;
  %600 = shape_of(%598, dtype="int32") /* ty=Tensor[(3), int32] */;
  %601 = cast(%598, dtype="float64") /* ty=Tensor[(1, 4, 5), float64] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %603 = floor_divide(%601, %602) /* ty=Tensor[(?, 4, 5), float64] */;
  %604 = cast(%603, dtype="float32") /* ty=Tensor[(?, 4, 5), float32] */;
  %605 = cast(%598, dtype="bool") /* ty=Tensor[(1, 4, 5), bool] */;
  %606 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%603, dtype="bool") /* ty=Tensor[(?, 4, 5), bool] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %609 = %594.0;
  %610 = acos(%604) /* ty=Tensor[(?, 4, 5), float32] */;
  %611 = logical_or(%607, %608) /* ty=Tensor[(?, 4, 5), bool] */;
  (%609, %610, %611)
}

def @func_14155() -> (Tensor[(11, 11, 10), float32],) {
  %612 = @func_9411() /* ty=Tensor[(11, 11, 10), float32] */;
  (%612,)
}

def @func_14661() -> Tensor[(11, 11, 10), float32] {
  %613 = @func_10373() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %613.0
}

def @func_10012() -> Tensor[(2, 10, 12), float32] {
  @func_9946() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_14871() -> Tensor[(11, 11, 10), float32] {
  @func_13856() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_2801(%var_2781: Tensor[(7, 14, 8), float64]) -> Tensor[(7, 14, 8), float64] {
  %614 = cast(%var_2781, dtype="float64") /* ty=Tensor[(7, 14, 8), float64] */;
  sigmoid(%614) /* ty=Tensor[(7, 14, 8), float64] */
}

def @func_12221() -> Tensor[(2, 10, 12), float32] {
  @func_9247() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_14830(%var_14757: Tensor[(14, 5, 11), float32], %var_14810: Tensor[(700), int64]) -> (Tensor[(14, 5, 11), int8], Tensor[(9, 16, 12), int16], Tensor[(1728), uint64], Tensor[(2, 24), float64], Tensor[(700), int64]) {
  %615 = cast(%var_14757, dtype="float32") /* ty=Tensor[(14, 5, 11), float32] */;
  %616 = acosh(%615) /* ty=Tensor[(14, 5, 11), float32] */;
  %617 = cast(%616, dtype="int8") /* ty=Tensor[(14, 5, 11), int8] */;
  %618 = shape_of(%var_14757, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%var_14757, dtype="int8") /* ty=Tensor[(14, 5, 11), int8] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %621 = cast(meta[relay.Constant][57] /* ty=Tensor[(1728), uint64] */, dtype="uint64") /* ty=Tensor[(1728), uint64] */;
  %622 = reshape(%621, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), uint64] */;
  %623 = @func_2312(%622) /* ty=(Tensor[(9, 16, 12), uint64], Tensor[(9, 16, 12), int16], Tensor[(9, 16, 12), float32]) */;
  %624 = cast(%var_14810, dtype="int64") /* ty=Tensor[(700), int64] */;
  %625 = cast(%var_14810, dtype="int64") /* ty=Tensor[(700), int64] */;
  %626 = reshape(%624, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
  %627 = reshape(%625, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
  %628 = @func_7507(%626, %627) /* ty=(Tensor[(10, 5, 14), int64], Tensor[(6, 1, 8), float64], Tensor[(2, 24), float64]) */;
  %629 = bitwise_or(%619, %620) /* ty=Tensor[(14, 5, 11), int8] */;
  %630 = %623.1;
  %631 = %628.2;
  (%629, %630, meta[relay.Constant][57] /* ty=Tensor[(1728), uint64] */, %631, %var_14810)
}

def @func_11780() -> (Tensor[(2, 10, 12), float32],) {
  %632 = @func_9698() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %633 = %632.0;
  (%633,)
}

def @func_13710(%var_13705: Tensor[(11, 11, 10), float32]) -> (Tensor[(2, 10, 12), float32], Tensor[(144, 4), uint32], Tensor[(11, 11, 10), bool]) {
  %634 = @func_10402() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(8, 6, 12), uint16], Tensor[(384, 1), int16], Tensor[(144, 4), uint32], Tensor[(700), int64], Tensor[(4, 12, 8), int16]) */;
  %635 = @func_12775() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %636 = %635.0;
  %637 = cast(%var_13705, dtype="bool") /* ty=Tensor[(11, 11, 10), bool] */;
  %638 = shape_of(%636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%636, dtype="bool") /* ty=Tensor[(11, 11, 10), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %641 = @func_10354() /* ty=Tensor[(2, 10, 12), float32] */;
  %642 = %634.3;
  %643 = logical_and(%639, %640) /* ty=Tensor[(11, 11, 10), bool] */;
  (%641, %642, %643)
}

def @func_10540() -> (Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) {
  %644 = @func_10012() /* ty=Tensor[(2, 10, 12), float32] */;
  %645 = @func_10250() /* ty=Tensor[(11, 11, 10), float32] */;
  (%644, %645)
}

def @func_10250() -> Tensor[(11, 11, 10), float32] {
  %646 = @func_9268() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %647 = %646.0;
  %648 = cast(%647, dtype="float32") /* ty=Tensor[(11, 11, 10), float32] */;
  atanh(%648) /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_10373() -> (Tensor[(11, 11, 10), float32],) {
  %649 = @func_10250() /* ty=Tensor[(11, 11, 10), float32] */;
  (%649,)
}

def @func_10354() -> Tensor[(2, 10, 12), float32] {
  @func_10012() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_10084(%var_10077: Tensor[(900), float32]) -> (Tensor[(2, 10, 12), float32], Tensor[(208), uint64], Tensor[(900), float32], Tensor[(208), uint64]) {
  %650 = cast(%var_10077, dtype="float32") /* ty=Tensor[(900), float32] */;
  %651 = cast(meta[relay.Constant][58] /* ty=Tensor[(208), uint64] */, dtype="uint64") /* ty=Tensor[(208), uint64] */;
  %652 = reshape(%650, newshape=[6, 15, 10]) /* ty=Tensor[(6, 15, 10), float32] */;
  %653 = reshape(%651, newshape=[208]) /* ty=Tensor[(208), uint64] */;
  %654 = @func_6704(%652, %653) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(104), uint64], Tensor[(208), uint64]) */;
  %655 = @func_9946() /* ty=Tensor[(2, 10, 12), float32] */;
  %656 = %654.3;
  (%655, %656, %var_10077, meta[relay.Constant][58] /* ty=Tensor[(208), uint64] */)
}

def @func_12865() -> (Tensor[(11, 11, 10), float32],) {
  %657 = @func_10592() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %658 = %657.0;
  (%658,)
}

def @func_9777(%var_9775: Tensor[(10, 70), int64]) -> (Tensor[(11, 11, 10), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(144, 4), uint32], Tensor[(486), uint32], Tensor[(128), float64], Tensor[(2, 24), float64], Tensor[(10, 70), int64]) {
  %659 = cast(meta[relay.Constant][59] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
  %660 = reshape(%659, newshape=[7, 14, 8]) /* ty=Tensor[(7, 14, 8), float64] */;
  %661 = cast(meta[relay.Constant][60] /* ty=Tensor[(486), uint32] */, dtype="uint32") /* ty=Tensor[(486), uint32] */;
  %662 = cast(meta[relay.Constant][60] /* ty=Tensor[(486), uint32] */, dtype="uint32") /* ty=Tensor[(486), uint32] */;
  %663 = cast(meta[relay.Constant][61] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %664 = reshape(%661, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), uint32] */;
  %665 = reshape(%662, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), uint32] */;
  %666 = reshape(%663, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %667 = @func_4650(%664, %665, %666) /* ty=(Tensor[(6, 9, 9), bool], Tensor[(576), int64], Tensor[(128), float64], Tensor[(6, 96), int64], Tensor[(6, 64), int16], Tensor[(9, 16, 12), int16], Tensor[(1728), uint64], Tensor[(1, 220), uint8], Tensor[(144, 4), uint32]) */;
  %668 = cast(%var_9775, dtype="int64") /* ty=Tensor[(10, 70), int64] */;
  %669 = cast(%var_9775, dtype="int64") /* ty=Tensor[(10, 70), int64] */;
  %670 = reshape(%668, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
  %671 = reshape(%669, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
  %672 = @func_7507(%670, %671) /* ty=(Tensor[(10, 5, 14), int64], Tensor[(6, 1, 8), float64], Tensor[(2, 24), float64]) */;
  %673 = @func_9411() /* ty=Tensor[(11, 11, 10), float32] */;
  %674 = @func_2801(%660) /* ty=Tensor[(7, 14, 8), float64] */;
  %675 = %667.8;
  %676 = %672.2;
  (%673, %674, meta[relay.Constant][59] /* ty=Tensor[(784), float64] */, %675, meta[relay.Constant][60] /* ty=Tensor[(486), uint32] */, meta[relay.Constant][61] /* ty=Tensor[(128), float64] */, %676, %var_9775)
}

def @func_12022() -> (Tensor[(13, 14, 13), float64],) {
  %677 = @func_10147() /* ty=Tensor[(13, 14, 13), float64] */;
  (%677,)
}

def @func_12445() -> Tensor[(2, 10, 12), float32] {
  %678 = @func_12337() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %678.0
}

def @func_4875(%var_4821: Tensor[(4, 8, 5), int64], %var_4840: Tensor[(784), float64], %var_4852: Tensor[(1, 384), int16]) -> (Tensor[(4, 8, 5), bool], Tensor[(4, 8, 5), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(4, 12, 8), int16], Tensor[(1, 384), int16]) {
  %679 = cast(meta[relay.Constant][62] /* ty=Tensor[(4, 8, 5), int64] */, dtype="bool") /* ty=Tensor[(4, 8, 5), bool] */;
  %680 = shape_of(%var_4821, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%var_4821, dtype="bool") /* ty=Tensor[(4, 8, 5), bool] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %683 = cast(%var_4821, dtype="float32") /* ty=Tensor[(4, 8, 5), float32] */;
  %684 = rsqrt(%683) /* ty=Tensor[(4, 8, 5), float32] */;
  %685 = cast(%684, dtype="float32") /* ty=Tensor[(4, 8, 5), float32] */;
  %686 = cast(%var_4840, dtype="float64") /* ty=Tensor[(784), float64] */;
  %687 = reshape(%686, newshape=[7, 14, 8]) /* ty=Tensor[(7, 14, 8), float64] */;
  %688 = cast(%var_4852, dtype="int16") /* ty=Tensor[(1, 384), int16] */;
  %689 = cast(%var_4852, dtype="int16") /* ty=Tensor[(1, 384), int16] */;
  %690 = reshape(%688, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %691 = reshape(%689, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %692 = @func_683(%690, %691) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %693 = equal(%681, %682) /* ty=Tensor[(4, 8, 5), bool] */;
  %694 = atan(%685) /* ty=Tensor[(4, 8, 5), float32] */;
  %695 = @func_2801(%687) /* ty=Tensor[(7, 14, 8), float64] */;
  %696 = %692.0;
  (%693, %694, %695, %var_4840, %696, %var_4852)
}

def @func_12455() -> Tensor[(11, 11, 10), float32] {
  @func_9411() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_12423(%var_12402: Tensor[(2, 10, 12), float32]) -> (Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float64], Tensor[(208), uint64], Tensor[(1584), int8], Tensor[(104), uint64]) {
  %697 = @func_10281() /* ty=Tensor[(2, 10, 12), float32] */;
  %698 = cast(%var_12402, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
  %699 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%697, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %702 = cast(%697, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
  %703 = cast(meta[relay.Constant][63] /* ty=Tensor[(1584), int8] */, dtype="int8") /* ty=Tensor[(1584), int8] */;
  %704 = cast(meta[relay.Constant][64] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %705 = reshape(%703, newshape=[16, 9, 11]) /* ty=Tensor[(16, 9, 11), int8] */;
  %706 = reshape(%704, newshape=[104]) /* ty=Tensor[(104), uint64] */;
  %707 = @func_9072(%705, %706) /* ty=(Tensor[(16, 9, 11), int8], Tensor[(5, 6, 13), bool], Tensor[(390, 1), bool], Tensor[(208), uint64], Tensor[(3), int8], Tensor[(104), uint64]) */;
  %708 = logical_or(%700, %701) /* ty=Tensor[(2, 10, 12), bool] */;
  %709 = rsqrt(%702) /* ty=Tensor[(2, 10, 12), float64] */;
  %710 = %707.3;
  (%708, %709, %710, meta[relay.Constant][63] /* ty=Tensor[(1584), int8] */, meta[relay.Constant][64] /* ty=Tensor[(104), uint64] */)
}

def @func_10830() -> Tensor[(11, 11, 10), float32] {
  @func_10250() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_5498(%var_5480: Tensor[(7, 3, 14), float64], %var_5489: int64, %var_5491: Tensor[(48), float64]) -> (Tensor[(7, 3, 14), float64], Tensor[(48), float64], int64, Tensor[(1568), int64], Tensor[(48), float64]) {
  %711 = cast(%var_5480, dtype="float64") /* ty=Tensor[(7, 3, 14), float64] */;
  %712 = cast(%var_5489, dtype="int64") /* ty=int64 */;
  %713 = cast(meta[relay.Constant][65] /* ty=Tensor[(1568), int64] */, dtype="int64") /* ty=Tensor[(1568), int64] */;
  %714 = cast(%var_5491, dtype="float64") /* ty=Tensor[(48), float64] */;
  %715 = reshape(%712, newshape=[]) /* ty=int64 */;
  %716 = reshape(%713, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), int64] */;
  %717 = reshape(%714, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %718 = @func_2909(%715, %716, %717) /* ty=(Tensor[(14, 7, 16), int64], Tensor[(6, 1, 8), float64], Tensor[(48), float64]) */;
  %719 = rsqrt(%711) /* ty=Tensor[(7, 3, 14), float64] */;
  %720 = %718.2;
  (%719, %720, %var_5489, meta[relay.Constant][65] /* ty=Tensor[(1568), int64] */, %var_5491)
}

def @func_9971() -> (Tensor[(11, 11, 10), float32],) {
  %721 = @func_9411() /* ty=Tensor[(11, 11, 10), float32] */;
  (%721,)
}

def @func_11478(%var_11420: Tensor[(22, 5), float32], %var_11421: Tensor[(550), float32], %var_11422: Tensor[(104), uint64], %var_11434: Tensor[(96), int64]) -> (Tensor[(11, 11, 10), float32], Tensor[(5, 10, 11), float32], Tensor[(22, 5), float32], Tensor[(550), float32], Tensor[(104), uint64], Tensor[(4, 14, 9), int8], Tensor[(1, 96), int64], Tensor[(700), int64], Tensor[(96), int64], Tensor[(2, 10, 12), float32], Tensor[(13, 14, 13), float64], Tensor[(784, 780), float32], Tensor[(2, 10, 12), float32]) {
  %722 = cast(%var_11420, dtype="float32") /* ty=Tensor[(22, 5), float32] */;
  %723 = cast(%var_11421, dtype="float32") /* ty=Tensor[(550), float32] */;
  %724 = cast(%var_11422, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %725 = cast(meta[relay.Constant][66] /* ty=Tensor[(784, 1), float64] */, dtype="float64") /* ty=Tensor[(784, 1), float64] */;
  %726 = reshape(%722, newshape=[1, 10, 11]) /* ty=Tensor[(1, 10, 11), float32] */;
  %727 = reshape(%723, newshape=[5, 10, 11]) /* ty=Tensor[(5, 10, 11), float32] */;
  %728 = reshape(%724, newshape=[104]) /* ty=Tensor[(104), uint64] */;
  %729 = reshape(%725, newshape=[784]) /* ty=Tensor[(784), float64] */;
  %730 = @func_6189(%726, %727, %728, %729) /* ty=(Tensor[(5, 10, 11), float32], Tensor[(384), int16], Tensor[(208), uint64], Tensor[(104), uint16], Tensor[(9, 16, 12), int16], Tensor[(1, 1728), uint64], Tensor[(7, 14, 8), float64], Tensor[(784), float64]) */;
  %731 = @func_10469() /* ty=(Tensor[(4, 12, 8), int16], Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(504), int8]) */;
  %732 = cast(meta[relay.Constant][67] /* ty=Tensor[(700), int64] */, dtype="int64") /* ty=Tensor[(700), int64] */;
  %733 = cast(%var_11434, dtype="int64") /* ty=Tensor[(96), int64] */;
  %734 = cast(meta[relay.Constant][68] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %735 = reshape(%732, newshape=[700]) /* ty=Tensor[(700), int64] */;
  %736 = reshape(%733, newshape=[1, 96]) /* ty=Tensor[(1, 96), int64] */;
  %737 = reshape(%734, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %738 = @func_11192(%735, %736, %737) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(11, 11, 10), float32], Tensor[(2, 392), float64], Tensor[(88), uint64], Tensor[(704), uint64], Tensor[(160), int64], Tensor[(700), int64], Tensor[(1, 96), int64], Tensor[(128), float64], Tensor[(780), float64]) */;
  %739 = cast(meta[relay.Constant][68] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %740 = cast(meta[relay.Constant][66] /* ty=Tensor[(784, 1), float64] */, dtype="float32") /* ty=Tensor[(784, 1), float32] */;
  %741 = @func_10830() /* ty=Tensor[(11, 11, 10), float32] */;
  %742 = %730.0;
  %743 = %731.2;
  %744 = %738.8;
  %745 = @func_9946() /* ty=Tensor[(2, 10, 12), float32] */;
  %746 = @func_10147() /* ty=Tensor[(13, 14, 13), float64] */;
  %747 = add(%739, %740) /* ty=Tensor[(784, 780), float32] */;
  %748 = @func_9289() /* ty=Tensor[(2, 10, 12), float32] */;
  (%741, %742, %var_11420, %var_11421, %var_11422, %743, %744, meta[relay.Constant][67] /* ty=Tensor[(700), int64] */, %var_11434, %745, %746, %747, %748)
}

def @func_10704() -> (Tensor[(104), uint64], Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(504), int8]) {
  %749 = @func_10262() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(104), uint64], Tensor[(480), int16]) */;
  %750 = @func_9971() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %751 = @func_9698() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %752 = @func_10469() /* ty=(Tensor[(4, 12, 8), int16], Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(504), int8]) */;
  %753 = %749.1;
  %754 = %750.0;
  %755 = %751.0;
  %756 = %752.3;
  (%753, %754, %755, %756)
}

def @func_12148() -> (Tensor[(2, 10, 12), float32],) {
  %757 = @func_11694() /* ty=Tensor[(2, 10, 12), float32] */;
  (%757,)
}

def @func_1939(%var_1934: Tensor[(6, 1, 8), float64]) -> Tensor[(6, 1, 8), float64] {
  %758 = cast(%var_1934, dtype="float64") /* ty=Tensor[(6, 1, 8), float64] */;
  rsqrt(%758) /* ty=Tensor[(6, 1, 8), float64] */
}

def @func_12921(%var_12905: Tensor[(11, 11, 10), float32]) -> Tensor[(11, 11, 10), uint64] {
  %759 = @func_9821() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %760 = %759.0;
  %761 = cast(%var_12905, dtype="uint64") /* ty=Tensor[(11, 11, 10), uint64] */;
  %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(%760, dtype="uint64") /* ty=Tensor[(11, 11, 10), uint64] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_and(%763, %764) /* ty=Tensor[(11, 11, 10), uint64] */
}

def @func_13068() -> (Tensor[(2, 10, 12), float32],) {
  %765 = @func_12221() /* ty=Tensor[(2, 10, 12), float32] */;
  (%765,)
}

def @func_14270() -> (Tensor[(2, 10, 12), float32], Tensor[(104), uint64]) {
  %766 = @func_9247() /* ty=Tensor[(2, 10, 12), float32] */;
  %767 = cast(%766, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
  %768 = reshape(%767, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float32] */;
  %769 = @func_10908(%768) /* ty=(Tensor[(2, 10, 12), float64], Tensor[(104), uint64]) */;
  %770 = %769.1;
  (%766, %770)
}

def @func_14475(%var_14467: Tensor[(240), float32]) -> (Tensor[(11, 11, 10), float32], Tensor[(13, 14, 13), float64], Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(240), float32]) {
  %771 = @func_13545() /* ty=(Tensor[(13, 14, 13), float64],) */;
  %772 = @func_9821() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %773 = cast(%var_14467, dtype="float32") /* ty=Tensor[(240), float32] */;
  %774 = reshape(%773, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float32] */;
  %775 = @func_13034(%774) /* ty=(Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) */;
  %776 = @func_11336() /* ty=Tensor[(11, 11, 10), float32] */;
  %777 = %771.0;
  %778 = %772.0;
  %779 = %775.1;
  (%776, %777, %778, %779, %var_14467)
}

def @func_9362(%var_9333: Tensor[(1584, 1), int8], %var_9351: Tensor[(110), float32], %var_9352: Tensor[(550), float32], %var_9353: Tensor[(784), float64]) -> (Tensor[(2, 10, 12), float32], Tensor[(390, 1), bool], Tensor[(1584, 104), float64], Tensor[(1584, ?), float64], Tensor[(7, 14, 8), float64], Tensor[(110), float32], Tensor[(550), float32], Tensor[(784), float64]) {
  %780 = cast(meta[relay.Constant][69] /* ty=Tensor[(1584, 1), int8] */, dtype="int8") /* ty=Tensor[(1584, 1), int8] */;
  %781 = cast(meta[relay.Constant][70] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %782 = reshape(%780, newshape=[16, 9, 11]) /* ty=Tensor[(16, 9, 11), int8] */;
  %783 = reshape(%781, newshape=[104]) /* ty=Tensor[(104), uint64] */;
  %784 = @func_9072(%782, %783) /* ty=(Tensor[(16, 9, 11), int8], Tensor[(5, 6, 13), bool], Tensor[(390, 1), bool], Tensor[(208), uint64], Tensor[(3), int8], Tensor[(104), uint64]) */;
  %785 = cast(meta[relay.Constant][69] /* ty=Tensor[(1584, 1), int8] */, dtype="bool") /* ty=Tensor[(1584, 1), bool] */;
  %786 = cast(meta[relay.Constant][70] /* ty=Tensor[(104), uint64] */, dtype="bool") /* ty=Tensor[(104), bool] */;
  %787 = logical_or(%785, %786) /* ty=Tensor[(1584, 104), bool] */;
  %788 = cast(meta[relay.Constant][69] /* ty=Tensor[(1584, 1), int8] */, dtype="float64") /* ty=Tensor[(1584, 1), float64] */;
  %789 = cast(%787, dtype="float64") /* ty=Tensor[(1584, 104), float64] */;
  %790 = cast(%var_9333, dtype="float64") /* ty=Tensor[(1584, 1), float64] */;
  %791 = shape_of(meta[relay.Constant][69] /* ty=Tensor[(1584, 1), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %792 = cast(meta[relay.Constant][69] /* ty=Tensor[(1584, 1), int8] */, dtype="float64") /* ty=Tensor[(1584, 1), float64] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %794 = cast(%var_9351, dtype="float32") /* ty=Tensor[(110), float32] */;
  %795 = cast(%var_9352, dtype="float32") /* ty=Tensor[(550), float32] */;
  %796 = cast(meta[relay.Constant][70] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %797 = cast(%var_9353, dtype="float64") /* ty=Tensor[(784), float64] */;
  %798 = reshape(%794, newshape=[1, 10, 11]) /* ty=Tensor[(1, 10, 11), float32] */;
  %799 = reshape(%795, newshape=[5, 10, 11]) /* ty=Tensor[(5, 10, 11), float32] */;
  %800 = reshape(%796, newshape=[104]) /* ty=Tensor[(104), uint64] */;
  %801 = reshape(%797, newshape=[784]) /* ty=Tensor[(784), float64] */;
  %802 = @func_6189(%798, %799, %800, %801) /* ty=(Tensor[(5, 10, 11), float32], Tensor[(384), int16], Tensor[(208), uint64], Tensor[(104), uint16], Tensor[(9, 16, 12), int16], Tensor[(1, 1728), uint64], Tensor[(7, 14, 8), float64], Tensor[(784), float64]) */;
  %803 = @func_9247() /* ty=Tensor[(2, 10, 12), float32] */;
  %804 = %784.2;
  %805 = floor_mod(%788, %789) /* ty=Tensor[(1584, 104), float64] */;
  %806 = floor_mod(%792, %793) /* ty=Tensor[(1584, ?), float64] */;
  %807 = %802.6;
  (%803, %804, %805, %806, %807, %var_9351, %var_9352, %var_9353)
}

def @func_6189(%var_6134: Tensor[(1, 10, 11), float32], %var_6135: Tensor[(5, 10, 11), float32], %var_6143: Tensor[(104), uint64], %var_6170: Tensor[(784), float64]) -> (Tensor[(5, 10, 11), float32], Tensor[(384), int16], Tensor[(208), uint64], Tensor[(104), uint16], Tensor[(9, 16, 12), int16], Tensor[(1, 1728), uint64], Tensor[(7, 14, 8), float64], Tensor[(784), float64]) {
  %808 = cast(%var_6134, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %809 = cast(%var_6135, dtype="float32") /* ty=Tensor[(5, 10, 11), float32] */;
  %810 = cast(meta[relay.Constant][71] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %811 = cast(meta[relay.Constant][72] /* ty=Tensor[(208), uint64] */, dtype="uint64") /* ty=Tensor[(208), uint64] */;
  %812 = reshape(%810, newshape=[8, 1, 13]) /* ty=Tensor[(8, 1, 13), uint64] */;
  %813 = reshape(%811, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), uint64] */;
  %814 = @func_3215(%812, %813) /* ty=(Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */;
  %815 = cast(%var_6143, dtype="uint16") /* ty=Tensor[(104), uint16] */;
  %816 = shape_of(meta[relay.Constant][71] /* ty=Tensor[(104), uint64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %817 = cast(meta[relay.Constant][71] /* ty=Tensor[(104), uint64] */, dtype="uint16") /* ty=Tensor[(104), uint16] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %819 = cast(meta[relay.Constant][73] /* ty=Tensor[(1, 1728), uint64] */, dtype="uint64") /* ty=Tensor[(1, 1728), uint64] */;
  %820 = reshape(%819, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), uint64] */;
  %821 = @func_2312(%820) /* ty=(Tensor[(9, 16, 12), uint64], Tensor[(9, 16, 12), int16], Tensor[(9, 16, 12), float32]) */;
  %822 = cast(%var_6170, dtype="float64") /* ty=Tensor[(784), float64] */;
  %823 = reshape(%822, newshape=[7, 14, 8]) /* ty=Tensor[(7, 14, 8), float64] */;
  %824 = maximum(%808, %809) /* ty=Tensor[(5, 10, 11), float32] */;
  %825 = %814.2;
  %826 = subtract(%817, %818) /* ty=Tensor[(104), uint16] */;
  %827 = %821.1;
  %828 = @func_2801(%823) /* ty=Tensor[(7, 14, 8), float64] */;
  (%824, %825, meta[relay.Constant][72] /* ty=Tensor[(208), uint64] */, %826, %827, meta[relay.Constant][73] /* ty=Tensor[(1, 1728), uint64] */, %828, %var_6170)
}

def @func_9578() -> Tensor[(11, 11, 10), float32] {
  %829 = @func_9268() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %829.0
}

def @func_12620(%var_12579: bool, %var_12610: Tensor[(144, 4), float32]) -> (Tensor[(11, 11, 10), float32], Tensor[(7, 3, 16), bool], Tensor[(144, 4), bool], Tensor[(144, 4), float64]) {
  %830 = @func_10592() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %831 = cast(%var_12579, dtype="bool") /* ty=bool */;
  %832 = reshape(%831, newshape=[]) /* ty=bool */;
  %833 = @func_10402() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(8, 6, 12), uint16], Tensor[(384, 1), int16], Tensor[(144, 4), uint32], Tensor[(700), int64], Tensor[(4, 12, 8), int16]) */;
  %834 = %833.3;
  %835 = cast(%834, dtype="bool") /* ty=Tensor[(144, 4), bool] */;
  %836 = cast(%var_12579, dtype="bool") /* ty=bool */;
  %837 = greater(%835, %836) /* ty=Tensor[(144, 4), bool] */;
  %838 = cast(meta[relay.Constant][74] /* ty=Tensor[(144, 4), bool] */, dtype="bool") /* ty=Tensor[(144, 4), bool] */;
  %839 = shape_of(%837, dtype="int32") /* ty=Tensor[(2), int32] */;
  %840 = cast(%837, dtype="bool") /* ty=Tensor[(144, 4), bool] */;
  %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %842 = cast(%837, dtype="float32") /* ty=Tensor[(144, 4), float32] */;
  %843 = sinh(%842) /* ty=Tensor[(144, 4), float32] */;
  %844 = cast(%var_12610, dtype="uint32") /* ty=Tensor[(144, 4), uint32] */;
  %845 = shape_of(%843, dtype="int32") /* ty=Tensor[(2), int32] */;
  %846 = cast(%843, dtype="uint32") /* ty=Tensor[(144, 4), uint32] */;
  %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %848 = bitwise_and(%846, %847) /* ty=Tensor[(144, 4), uint32] */;
  %849 = cast(%848, dtype="float64") /* ty=Tensor[(144, 4), float64] */;
  %850 = %830.0;
  %851 = @func_11079(%832) /* ty=Tensor[(7, 3, 16), bool] */;
  %852 = not_equal(%840, %841) /* ty=Tensor[(144, 4), bool] */;
  %853 = log2(%849) /* ty=Tensor[(144, 4), float64] */;
  (%850, %851, %852, %853)
}

def @func_12137() -> (Tensor[(11, 11, 10), float32],) {
  %854 = @func_9411() /* ty=Tensor[(11, 11, 10), float32] */;
  (%854,)
}

def @func_14097(%var_14094: Tensor[(900), float32], %var_14095: Tensor[(1, 208), uint64]) -> (Tensor[(2, 10, 12), float32], Tensor[(2, 10, 12), float32], Tensor[(6, 15, 10), float32], Tensor[(900), float32], Tensor[(1, 208), uint64]) {
  %855 = cast(%var_14094, dtype="float32") /* ty=Tensor[(900), float32] */;
  %856 = cast(%var_14095, dtype="uint64") /* ty=Tensor[(1, 208), uint64] */;
  %857 = reshape(%855, newshape=[6, 15, 10]) /* ty=Tensor[(6, 15, 10), float32] */;
  %858 = reshape(%856, newshape=[208]) /* ty=Tensor[(208), uint64] */;
  %859 = @func_6704(%857, %858) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(104), uint64], Tensor[(208), uint64]) */;
  %860 = @func_9247() /* ty=Tensor[(2, 10, 12), float32] */;
  %861 = @func_9946() /* ty=Tensor[(2, 10, 12), float32] */;
  %862 = %859.0;
  (%860, %861, %862, %var_14094, %var_14095)
}

def @func_10812(%var_10794: Tensor[(576), int64]) -> (Tensor[(2, 10, 12), float32], Tensor[(128), float64], Tensor[(700), int64], Tensor[(220), uint8], Tensor[(576), int64], Tensor[(384), int16], Tensor[(2, 10, 12), bool], Tensor[(128), float32]) {
  %863 = @func_10704() /* ty=(Tensor[(104), uint64], Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(504), int8]) */;
  %864 = cast(meta[relay.Constant][75] /* ty=Tensor[(700), int64] */, dtype="int64") /* ty=Tensor[(700), int64] */;
  %865 = reshape(%864, newshape=[10, 70]) /* ty=Tensor[(10, 70), int64] */;
  %866 = @func_9777(%865) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(144, 4), uint32], Tensor[(486), uint32], Tensor[(128), float64], Tensor[(2, 24), float64], Tensor[(10, 70), int64]) */;
  %867 = @func_9389() /* ty=Tensor[(2, 10, 12), float32] */;
  %868 = cast(%867, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
  %869 = exp(%868) /* ty=Tensor[(2, 10, 12), float64] */;
  %870 = cast(%867, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
  %871 = shape_of(%869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %872 = cast(%869, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %874 = cast(meta[relay.Constant][76] /* ty=Tensor[(220), uint8] */, dtype="uint8") /* ty=Tensor[(220), uint8] */;
  %875 = cast(meta[relay.Constant][76] /* ty=Tensor[(220), uint8] */, dtype="uint8") /* ty=Tensor[(220), uint8] */;
  %876 = %866.5;
  %877 = cast(%876, dtype="float64") /* ty=Tensor[(128), float64] */;
  %878 = cast(%var_10794, dtype="int64") /* ty=Tensor[(576), int64] */;
  %879 = cast(meta[relay.Constant][77] /* ty=Tensor[(384), int16] */, dtype="int16") /* ty=Tensor[(384), int16] */;
  %880 = reshape(%874, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), uint8] */;
  %881 = reshape(%875, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), uint8] */;
  %882 = reshape(%877, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %883 = reshape(%878, newshape=[144, 4]) /* ty=Tensor[(144, 4), int64] */;
  %884 = reshape(%879, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %885 = @func_1282(%880, %881, %882, %883, %884) /* ty=(Tensor[(11, 5, 4), uint8], Tensor[(384), int16], Tensor[(128), float64], Tensor[(144, 4), int64], Tensor[(384), int16]) */;
  %886 = %885.2;
  %887 = cast(%886, dtype="float32") /* ty=Tensor[(128), float32] */;
  %888 = %863.2;
  %889 = not_equal(%872, %873) /* ty=Tensor[(2, 10, 12), bool] */;
  %890 = asin(%887) /* ty=Tensor[(128), float32] */;
  (%888, %876, meta[relay.Constant][75] /* ty=Tensor[(700), int64] */, meta[relay.Constant][76] /* ty=Tensor[(220), uint8] */, %var_10794, meta[relay.Constant][77] /* ty=Tensor[(384), int16] */, %889, %890)
}

def @func_12114() -> (Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32], Tensor[(4, 12), float64], Tensor[(384), int16]) {
  %891 = @func_9268() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %892 = cast(meta[relay.Constant][78] /* ty=Tensor[(384), int16] */, dtype="int16") /* ty=Tensor[(384), int16] */;
  %893 = reshape(%892, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %894 = @func_9643(%893) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(384), int16], Tensor[(4, 12), float64], Tensor[(60), float32], Tensor[(48), float64]) */;
  %895 = @func_9946() /* ty=Tensor[(2, 10, 12), float32] */;
  %896 = %891.0;
  %897 = %894.3;
  (%895, %896, %897, meta[relay.Constant][78] /* ty=Tensor[(384), int16] */)
}

def @func_12808() -> Tensor[(2, 10, 12), float32] {
  @func_12221() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_10469() -> (Tensor[(4, 12, 8), int16], Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(504), int8]) {
  %898 = @func_10402() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(8, 6, 12), uint16], Tensor[(384, 1), int16], Tensor[(144, 4), uint32], Tensor[(700), int64], Tensor[(4, 12, 8), int16]) */;
  %899 = cast(meta[relay.Constant][79] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
  %900 = reshape(%899, newshape=[4, 14, 9]) /* ty=Tensor[(4, 14, 9), int8] */;
  %901 = %898.5;
  %902 = @func_9389() /* ty=Tensor[(2, 10, 12), float32] */;
  %903 = @func_3112(%900) /* ty=Tensor[(4, 14, 9), int8] */;
  (%901, %902, %903, meta[relay.Constant][79] /* ty=Tensor[(504), int8] */)
}

def @func_6847(%var_6832: Tensor[(1, 3, 1), int8], %var_6838: Tensor[(104, 1), uint64]) -> (Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) {
  %904 = cast(meta[relay.Constant][80] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %905 = cast(%var_6832, dtype="int8") /* ty=Tensor[(1, 3, 1), int8] */;
  %906 = cast(%var_6838, dtype="uint64") /* ty=Tensor[(104, 1), uint64] */;
  %907 = cast(meta[relay.Constant][81] /* ty=Tensor[(208), uint64] */, dtype="uint64") /* ty=Tensor[(208), uint64] */;
  %908 = reshape(%906, newshape=[8, 1, 13]) /* ty=Tensor[(8, 1, 13), uint64] */;
  %909 = reshape(%907, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), uint64] */;
  %910 = @func_3215(%908, %909) /* ty=(Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */;
  %911 = cast(%var_6838, dtype="uint64") /* ty=Tensor[(104, 1), uint64] */;
  %912 = cast(meta[relay.Constant][81] /* ty=Tensor[(208), uint64] */, dtype="uint64") /* ty=Tensor[(208), uint64] */;
  %913 = reshape(%911, newshape=[8, 1, 13]) /* ty=Tensor[(8, 1, 13), uint64] */;
  %914 = reshape(%912, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), uint64] */;
  %915 = @func_3215(%913, %914) /* ty=(Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */;
  %916 = bitwise_xor(%904, %905) /* ty=Tensor[(1, 3, 1), int8] */;
  %917 = %910.0;
  %918 = %915.0;
  (%916, %917, %var_6838, meta[relay.Constant][81] /* ty=Tensor[(208), uint64] */, %918)
}

def @func_13034(%var_13014: Tensor[(2, 10, 12), float32]) -> (Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) {
  %919 = @func_12221() /* ty=Tensor[(2, 10, 12), float32] */;
  %920 = cast(%var_13014, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
  %921 = shape_of(%919, dtype="int32") /* ty=Tensor[(3), int32] */;
  %922 = cast(%919, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
  %923 = dyn.reshape(%920, %921, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %924 = @func_12148() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %925 = @func_9821() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %926 = equal(%922, %923) /* ty=Tensor[(2, 10, 12), bool] */;
  %927 = %924.0;
  %928 = %925.0;
  (%926, %927, %928)
}

def @func_9213(%var_9197: Tensor[(5, 8, 4), int64], %var_9205: Tensor[(3), int8], %var_9206: Tensor[(104), uint64]) -> (Tensor[(5, 8, 4), int64], Tensor[(8, 2, 13), uint64], Tensor[(3), int8], Tensor[(104), uint64]) {
  %929 = cast(meta[relay.Constant][82] /* ty=Tensor[(5, 8, 4), int64] */, dtype="int64") /* ty=Tensor[(5, 8, 4), int64] */;
  %930 = shape_of(%var_9197, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(%var_9197, dtype="int64") /* ty=Tensor[(5, 8, 4), int64] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %933 = cast(%var_9205, dtype="int8") /* ty=Tensor[(3), int8] */;
  %934 = cast(%var_9206, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %935 = reshape(%933, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), int8] */;
  %936 = reshape(%934, newshape=[104, 1]) /* ty=Tensor[(104, 1), uint64] */;
  %937 = @func_6847(%935, %936) /* ty=(Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) */;
  %938 = maximum(%931, %932) /* ty=Tensor[(5, 8, 4), int64] */;
  %939 = %937.4;
  (%938, %939, %var_9205, %var_9206)
}

def @func_9268() -> (Tensor[(11, 11, 10), float32],) {
  %940 = cast(meta[relay.Constant][83] /* ty=Tensor[(11, 11, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 11, 10), float32] */;
  %941 = asin(%940) /* ty=Tensor[(11, 11, 10), float32] */;
  (%941,)
}

def @func_10592() -> (Tensor[(11, 11, 10), float32],) {
  %942 = @func_10373() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %943 = %942.0;
  (%943,)
}

def @func_13856() -> Tensor[(11, 11, 10), float32] {
  @func_11336() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_13922(%var_13909: Tensor[(4, 396), int8], %var_13911: Tensor[(550), float32]) -> (Tensor[(2, 10, 12), float32], Tensor[(1, 10, 5), float64], Tensor[(5, 10), float64], Tensor[(390, 1), bool], Tensor[(4, 396), int8], Tensor[(110), float32], Tensor[(550), float32], Tensor[(784), float64]) {
  %944 = cast(meta[relay.Constant][84] /* ty=Tensor[(5, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 10), float64] */;
  %945 = reshape(%944, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
  %946 = cast(%var_13909, dtype="int8") /* ty=Tensor[(4, 396), int8] */;
  %947 = cast(meta[relay.Constant][85] /* ty=Tensor[(110), float32] */, dtype="float32") /* ty=Tensor[(110), float32] */;
  %948 = cast(%var_13911, dtype="float32") /* ty=Tensor[(550), float32] */;
  %949 = cast(meta[relay.Constant][86] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
  %950 = reshape(%946, newshape=[1584, 1]) /* ty=Tensor[(1584, 1), int8] */;
  %951 = reshape(%947, newshape=[110]) /* ty=Tensor[(110), float32] */;
  %952 = reshape(%948, newshape=[550]) /* ty=Tensor[(550), float32] */;
  %953 = reshape(%949, newshape=[784]) /* ty=Tensor[(784), float64] */;
  %954 = @func_9362(%950, %951, %952, %953) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(390, 1), bool], Tensor[(1584, 104), float64], Tensor[(1584, ?), float64], Tensor[(7, 14, 8), float64], Tensor[(110), float32], Tensor[(550), float32], Tensor[(784), float64]) */;
  %955 = @func_9247() /* ty=Tensor[(2, 10, 12), float32] */;
  %956 = @func_9867(%945) /* ty=Tensor[(1, 10, 5), float64] */;
  %957 = %954.1;
  (%955, %956, meta[relay.Constant][84] /* ty=Tensor[(5, 10), float64] */, %957, %var_13909, meta[relay.Constant][85] /* ty=Tensor[(110), float32] */, %var_13911, meta[relay.Constant][86] /* ty=Tensor[(784), float64] */)
}

def @func_3458(%var_3408: Tensor[(12, 5, 1), float32], %var_3445: Tensor[(4, 12), float64]) -> (Tensor[(12, 5, ?), int64], Tensor[(6, 1, 8), float64], Tensor[(1568), int64], Tensor[(4, 12), float64]) {
  %958 = cast(7.58121f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %959 = cast(%var_3408, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
  %960 = mod(%958, %959) /* ty=Tensor[(12, 5, 1), float32] */;
  %961 = cast(%960, dtype="int64") /* ty=Tensor[(12, 5, 1), int64] */;
  %962 = shape_of(%var_3408, dtype="int32") /* ty=Tensor[(3), int32] */;
  %963 = cast(%var_3408, dtype="int64") /* ty=Tensor[(12, 5, 1), int64] */;
  %964 = dyn.reshape(%961, %962, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %965 = cast(7.58121f /* ty=float32 */, dtype="int64") /* ty=int64 */;
  %966 = cast(meta[relay.Constant][87] /* ty=Tensor[(1568), int64] */, dtype="int64") /* ty=Tensor[(1568), int64] */;
  %967 = cast(%var_3445, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %968 = reshape(%965, newshape=[]) /* ty=int64 */;
  %969 = reshape(%966, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), int64] */;
  %970 = reshape(%967, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %971 = @func_2909(%968, %969, %970) /* ty=(Tensor[(14, 7, 16), int64], Tensor[(6, 1, 8), float64], Tensor[(48), float64]) */;
  %972 = multiply(%963, %964) /* ty=Tensor[(12, 5, ?), int64] */;
  %973 = %971.1;
  (%972, %973, meta[relay.Constant][87] /* ty=Tensor[(1568), int64] */, %var_3445)
}

def @main(%var_15054: Tensor[(10, 10, 4), float64]) -> (Tensor[(10, 10, 4), float32],) {
  %974 = cast(%var_15054, dtype="float64") /* ty=Tensor[(10, 10, 4), float64] */;
  %975 = sqrt(%974) /* ty=Tensor[(10, 10, 4), float64] */;
  %976 = cast(%975, dtype="float32") /* ty=Tensor[(10, 10, 4), float32] */;
  %977 = sinh(%976) /* ty=Tensor[(10, 10, 4), float32] */;
  (%977,)
}

def @func_9523(%var_9457: Tensor[(13, 5, 12), float32], %var_9471: Tensor[(128), float64], %var_9480: Tensor[(384), int16]) -> (Tensor[(13, 5, 12), float32], Tensor[(3, 24), float32], Tensor[(128), float64], Tensor[(576), int64], Tensor[(8, 6, 12), float64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(9, 16, 12), bool], Tensor[(11, 5, 11), float64], Tensor[(605), float64]) {
  %978 = cast(-6.75414f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %979 = cast(%var_9457, dtype="float32") /* ty=Tensor[(13, 5, 12), float32] */;
  %980 = cast(%var_9480, dtype="int16") /* ty=Tensor[(384), int16] */;
  %981 = cast(%var_9480, dtype="int16") /* ty=Tensor[(384), int16] */;
  %982 = reshape(%980, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %983 = reshape(%981, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %984 = @func_683(%982, %983) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %985 = cast(%var_9480, dtype="int16") /* ty=Tensor[(384), int16] */;
  %986 = cast(%var_9480, dtype="int16") /* ty=Tensor[(384), int16] */;
  %987 = reshape(%985, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %988 = reshape(%986, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %989 = @func_683(%987, %988) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %990 = cast(meta[relay.Constant][88] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %991 = cast(meta[relay.Constant][88] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %992 = cast(meta[relay.Constant][88] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %993 = cast(%var_9471, dtype="float64") /* ty=Tensor[(128), float64] */;
  %994 = cast(meta[relay.Constant][89] /* ty=Tensor[(576), int64] */, dtype="int64") /* ty=Tensor[(576), int64] */;
  %995 = reshape(%990, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %996 = reshape(%991, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %997 = reshape(%992, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %998 = reshape(%993, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %999 = reshape(%994, newshape=[576]) /* ty=Tensor[(576), int64] */;
  %1000 = @func_5580(%995, %996, %997, %998, %999) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(4, 6, 3), bool], Tensor[(9, 16, 12), uint64], Tensor[(1728), uint64], Tensor[(128), float64], Tensor[(220), uint8], Tensor[(128), float64], Tensor[(576), int64], Tensor[(384), int16]) */;
  %1001 = %1000.2;
  %1002 = cast(%1001, dtype="bool") /* ty=Tensor[(9, 16, 12), bool] */;
  %1003 = cast(-6.75414f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %1004 = cast(meta[relay.Constant][90] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %1005 = cast(meta[relay.Constant][90] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %1006 = reshape(%1004, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), float64] */;
  %1007 = reshape(%1005, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), float64] */;
  %1008 = @func_8366(%1006, %1007) /* ty=(Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), bool], Tensor[(1, 3, 1), int8], Tensor[(3), int8], Tensor[(104), uint64]) */;
  %1009 = add(%978, %979) /* ty=Tensor[(13, 5, 12), float32] */;
  %1010 = %984.4;
  %1011 = %989.3;
  %1012 = not_equal(%1002, %1003) /* ty=Tensor[(9, 16, 12), bool] */;
  %1013 = %1008.1;
  (%1009, meta[relay.Constant][88] /* ty=Tensor[(3, 24), float32] */, %var_9471, meta[relay.Constant][89] /* ty=Tensor[(576), int64] */, %1010, %var_9480, %1011, %1012, %1013, meta[relay.Constant][90] /* ty=Tensor[(605), float64] */)
}

def @func_1141(%var_1102: Tensor[(16, 2, 4), float64], %var_1107: Tensor[(2, 288), int64], %var_1133: Tensor[(384), int16]) -> (Tensor[(16, 2, 4), float64], Tensor[(8, 6, 12), float64], Tensor[(2, 288), int64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) {
  %1014 = cast(%var_1102, dtype="float64") /* ty=Tensor[(16, 2, 4), float64] */;
  %1015 = cast(%var_1107, dtype="int64") /* ty=Tensor[(2, 288), int64] */;
  %1016 = reshape(%1015, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int64] */;
  %1017 = @func_254(%1016) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) */;
  %1018 = cast(%var_1133, dtype="int16") /* ty=Tensor[(384), int16] */;
  %1019 = cast(%var_1133, dtype="int16") /* ty=Tensor[(384), int16] */;
  %1020 = reshape(%1018, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %1021 = reshape(%1019, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %1022 = @func_683(%1020, %1021) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %1023 = cast(%var_1133, dtype="int16") /* ty=Tensor[(384), int16] */;
  %1024 = cast(%var_1133, dtype="int16") /* ty=Tensor[(384), int16] */;
  %1025 = reshape(%1023, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %1026 = reshape(%1024, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %1027 = @func_683(%1025, %1026) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %1028 = %1027.1;
  %1029 = cast(%1028, dtype="int64") /* ty=Tensor[(8, 6, 12), int64] */;
  %1030 = reshape(%1029, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int64] */;
  %1031 = @func_254(%1030) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) */;
  %1032 = asin(%1014) /* ty=Tensor[(16, 2, 4), float64] */;
  %1033 = %1017.0;
  %1034 = %1022.2;
  %1035 = %1031.0;
  (%1032, %1033, %var_1107, %1034, %var_1133, %1028, %1035)
}

def @func_13228() -> (Tensor[(11, 11, 10), float32], Tensor[(104, 1), uint64], Tensor[(3), int8], Tensor[(104), uint64], Tensor[(11, 11, 10), float32], Tensor[(11, 11, 10), float32], Tensor[(13, 14, 13), float64]) {
  %1036 = @func_12865() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %1037 = cast(meta[relay.Constant][91] /* ty=Tensor[(3), int8] */, dtype="int8") /* ty=Tensor[(3), int8] */;
  %1038 = cast(meta[relay.Constant][92] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %1039 = reshape(%1037, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), int8] */;
  %1040 = reshape(%1038, newshape=[104, 1]) /* ty=Tensor[(104, 1), uint64] */;
  %1041 = @func_6847(%1039, %1040) /* ty=(Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) */;
  %1042 = @func_10592() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %1043 = @func_9971() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %1044 = %1036.0;
  %1045 = %1041.2;
  %1046 = %1042.0;
  %1047 = %1043.0;
  %1048 = @func_10147() /* ty=Tensor[(13, 14, 13), float64] */;
  (%1044, %1045, meta[relay.Constant][91] /* ty=Tensor[(3), int8] */, meta[relay.Constant][92] /* ty=Tensor[(104), uint64] */, %1046, %1047, %1048)
}

def @func_14335(%var_14308: Tensor[(48), float64], %var_14332: Tensor[(2, 64), float64]) -> (Tensor[(2, 10, 12), float32], Tensor[(48), float64], Tensor[(7, 42), float64], int64, Tensor[(48), float64], Tensor[(6, 1, 8), float64], Tensor[(550), float32], Tensor[(2, 792), int8], Tensor[(550), float32], Tensor[(2, 10, 12), float32], Tensor[(220), uint8], Tensor[(36, 2), float32], Tensor[(2, 64), float64], Tensor[(576), int64]) {
  %1049 = @func_14256() /* ty=(Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32]) */;
  %1050 = cast(meta[relay.Constant][93] /* ty=Tensor[(7, 42), float64] */, dtype="float64") /* ty=Tensor[(7, 42), float64] */;
  %1051 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1052 = cast(%var_14308, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1053 = reshape(%1050, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float64] */;
  %1054 = reshape(%1051, newshape=[]) /* ty=int64 */;
  %1055 = reshape(%1052, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1056 = @func_5498(%1053, %1054, %1055) /* ty=(Tensor[(7, 3, 14), float64], Tensor[(48), float64], int64, Tensor[(1568), int64], Tensor[(48), float64]) */;
  %1057 = cast(%var_14308, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1058 = reshape(%1057, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float64] */;
  %1059 = cast(meta[relay.Constant][94] /* ty=Tensor[(2, 792), int8] */, dtype="int8") /* ty=Tensor[(2, 792), int8] */;
  %1060 = cast(meta[relay.Constant][95] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
  %1061 = reshape(%1059, newshape=[4, 396]) /* ty=Tensor[(4, 396), int8] */;
  %1062 = reshape(%1060, newshape=[550]) /* ty=Tensor[(550), float32] */;
  %1063 = @func_13922(%1061, %1062) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(1, 10, 5), float64], Tensor[(5, 10), float64], Tensor[(390, 1), bool], Tensor[(4, 396), int8], Tensor[(110), float32], Tensor[(550), float32], Tensor[(784), float64]) */;
  %1064 = cast(meta[relay.Constant][96] /* ty=Tensor[(36, 2), float32] */, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
  %1065 = cast(meta[relay.Constant][96] /* ty=Tensor[(36, 2), float32] */, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
  %1066 = cast(meta[relay.Constant][96] /* ty=Tensor[(36, 2), float32] */, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
  %1067 = cast(%var_14332, dtype="float64") /* ty=Tensor[(2, 64), float64] */;
  %1068 = cast(meta[relay.Constant][97] /* ty=Tensor[(576), int64] */, dtype="int64") /* ty=Tensor[(576), int64] */;
  %1069 = reshape(%1064, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %1070 = reshape(%1065, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %1071 = reshape(%1066, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %1072 = reshape(%1067, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %1073 = reshape(%1068, newshape=[576]) /* ty=Tensor[(576), int64] */;
  %1074 = @func_5580(%1069, %1070, %1071, %1072, %1073) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(4, 6, 3), bool], Tensor[(9, 16, 12), uint64], Tensor[(1728), uint64], Tensor[(128), float64], Tensor[(220), uint8], Tensor[(128), float64], Tensor[(576), int64], Tensor[(384), int16]) */;
  %1075 = %1049.1;
  %1076 = %1056.1;
  %1077 = @func_1939(%1058) /* ty=Tensor[(6, 1, 8), float64] */;
  %1078 = %1063.6;
  %1079 = @func_11694() /* ty=Tensor[(2, 10, 12), float32] */;
  %1080 = %1074.5;
  (%1075, %1076, meta[relay.Constant][93] /* ty=Tensor[(7, 42), float64] */, 8 /* ty=int64 */, %var_14308, %1077, %1078, meta[relay.Constant][94] /* ty=Tensor[(2, 792), int8] */, meta[relay.Constant][95] /* ty=Tensor[(550), float32] */, %1079, %1080, meta[relay.Constant][96] /* ty=Tensor[(36, 2), float32] */, %var_14332, meta[relay.Constant][97] /* ty=Tensor[(576), int64] */)
}

def @func_12337() -> (Tensor[(2, 10, 12), float32],) {
  %1081 = @func_9698() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %1082 = %1081.0;
  (%1082,)
}

def @func_9072(%var_9039: Tensor[(16, 9, 11), int8], %var_9069: Tensor[(104), uint64]) -> (Tensor[(16, 9, 11), int8], Tensor[(5, 6, 13), bool], Tensor[(390, 1), bool], Tensor[(208), uint64], Tensor[(3), int8], Tensor[(104), uint64]) {
  %1083 = cast(meta[relay.Constant][98] /* ty=Tensor[(16, 9, 11), int8] */, dtype="int8") /* ty=Tensor[(16, 9, 11), int8] */;
  %1084 = shape_of(%var_9039, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1085 = cast(%var_9039, dtype="int8") /* ty=Tensor[(16, 9, 11), int8] */;
  %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1087 = cast(meta[relay.Constant][99] /* ty=Tensor[(390, 1), bool] */, dtype="bool") /* ty=Tensor[(390, 1), bool] */;
  %1088 = cast(meta[relay.Constant][99] /* ty=Tensor[(390, 1), bool] */, dtype="bool") /* ty=Tensor[(390, 1), bool] */;
  %1089 = reshape(%1087, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %1090 = reshape(%1088, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %1091 = cast(meta[relay.Constant][100] /* ty=Tensor[(3), int8] */, dtype="int8") /* ty=Tensor[(3), int8] */;
  %1092 = cast(%var_9069, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %1093 = reshape(%1091, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), int8] */;
  %1094 = reshape(%1092, newshape=[104, 1]) /* ty=Tensor[(104, 1), uint64] */;
  %1095 = @func_6847(%1093, %1094) /* ty=(Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) */;
  %1096 = minimum(%1085, %1086) /* ty=Tensor[(16, 9, 11), int8] */;
  %1097 = @func_1332(%1089, %1090) /* ty=Tensor[(5, 6, 13), bool] */;
  %1098 = %1095.3;
  (%1096, %1097, meta[relay.Constant][99] /* ty=Tensor[(390, 1), bool] */, %1098, meta[relay.Constant][100] /* ty=Tensor[(3), int8] */, %var_9069)
}

def @func_11674(%var_11645: Tensor[(104), uint64], %var_11646: Tensor[(208), uint64]) -> (Tensor[(2, 10, 12), float32], Tensor[(8, 2, 13), uint64], Tensor[(104), uint64], Tensor[(208), uint64], Tensor[(1568), int64], Tensor[(60), float32], Tensor[(48, 1), float64]) {
  %1099 = @func_11222() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %1100 = cast(%var_11645, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %1101 = cast(%var_11646, dtype="uint64") /* ty=Tensor[(208), uint64] */;
  %1102 = reshape(%1100, newshape=[8, 1, 13]) /* ty=Tensor[(8, 1, 13), uint64] */;
  %1103 = reshape(%1101, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), uint64] */;
  %1104 = @func_3215(%1102, %1103) /* ty=(Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */;
  %1105 = cast(meta[relay.Constant][101] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %1106 = cast(meta[relay.Constant][102] /* ty=Tensor[(48, 1), float64] */, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %1107 = reshape(%1105, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float32] */;
  %1108 = reshape(%1106, newshape=[4, 12]) /* ty=Tensor[(4, 12), float64] */;
  %1109 = @func_3458(%1107, %1108) /* ty=(Tensor[(12, 5, ?), int64], Tensor[(6, 1, 8), float64], Tensor[(1568), int64], Tensor[(4, 12), float64]) */;
  %1110 = %1099.0;
  %1111 = %1104.0;
  %1112 = %1109.2;
  (%1110, %1111, %var_11645, %var_11646, %1112, meta[relay.Constant][101] /* ty=Tensor[(60), float32] */, meta[relay.Constant][102] /* ty=Tensor[(48, 1), float64] */)
}

def @func_9247() -> Tensor[(2, 10, 12), float32] {
  %1113 = cast(meta[relay.Constant][103] /* ty=Tensor[(2, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
  asinh(%1113) /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_3215(%var_3207: Tensor[(8, 1, 13), uint64], %var_3208: Tensor[(8, 2, 13), uint64]) -> (Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) {
  %1114 = cast(%var_3207, dtype="uint64") /* ty=Tensor[(8, 1, 13), uint64] */;
  %1115 = cast(%var_3208, dtype="uint64") /* ty=Tensor[(8, 2, 13), uint64] */;
  %1116 = cast(meta[relay.Constant][104] /* ty=Tensor[(384), int16] */, dtype="int16") /* ty=Tensor[(384), int16] */;
  %1117 = cast(meta[relay.Constant][104] /* ty=Tensor[(384), int16] */, dtype="int16") /* ty=Tensor[(384), int16] */;
  %1118 = reshape(%1116, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %1119 = reshape(%1117, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %1120 = @func_683(%1118, %1119) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %1121 = subtract(%1114, %1115) /* ty=Tensor[(8, 2, 13), uint64] */;
  %1122 = %1120.3;
  (%1121, %1122, meta[relay.Constant][104] /* ty=Tensor[(384), int16] */)
}

def @func_9389() -> Tensor[(2, 10, 12), float32] {
  @func_9247() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_14256() -> (Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32]) {
  %1123 = @func_13161() /* ty=(Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32]) */;
  %1124 = @func_13161() /* ty=(Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32]) */;
  %1125 = %1123.0;
  %1126 = %1124.1;
  (%1125, %1126)
}

def @func_14075() -> (Tensor[(11, 11, 10), float32],) {
  %1127 = @func_12775() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %1128 = %1127.0;
  (%1128,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11223() -> (Tensor[(2, 10, 12), float32],) {
  %1 = fn () -> (Tensor[(2, 10, 12), float32],) {
    %0 = @func_10012() /* ty=Tensor[(2, 10, 12), float32] */;
    (%0,)
  };
  %1() /* ty=(Tensor[(2, 10, 12), float32],) */
}

def @func_9291() -> Tensor[(2, 10, 12), float32] {
  @func_9289() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_9688() -> (Tensor[(2, 10, 12), float32], Tensor[(2, 10, 12), float32]) {
  %2 = @func_9439() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %3 = %2.0;
  %4 = @func_9389() /* ty=Tensor[(2, 10, 12), float32] */;
  (%3, %4)
}

def @func_13264() -> (Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(104), uint64]) {
  %5 = @func_10704() /* ty=(Tensor[(104), uint64], Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(504), int8]) */;
  %6 = @func_11780() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %7 = @func_10704() /* ty=(Tensor[(104), uint64], Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(504), int8]) */;
  %8 = %5.1;
  %9 = %6.0;
  %10 = %7.0;
  (%8, %9, %10)
}

def @func_15046(%var_15044: Tensor[(160), int64], %var_15045: Tensor[(384), int16]) -> (Tensor[(11, 11, 10), float32], Tensor[(4, 12, 8), int16], Tensor[(160), int64], Tensor[(784), float64], Tensor[(384), int16]) {
  %20 = fn (%var_15024: Tensor[(160), int64], %var_15026: Tensor[(384), int16]) -> (Tensor[(11, 11, 10), float32], Tensor[(4, 12, 8), int16], Tensor[(160), int64], Tensor[(784), float64], Tensor[(384), int16]) {
    %11 = cast(%var_15024, dtype="int64") /* ty=Tensor[(160), int64] */;
    %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
    %13 = cast(%var_15026, dtype="int16") /* ty=Tensor[(384), int16] */;
    %14 = reshape(%11, newshape=[4, 8, 5]) /* ty=Tensor[(4, 8, 5), int64] */;
    %15 = reshape(%12, newshape=[784]) /* ty=Tensor[(784), float64] */;
    %16 = reshape(%13, newshape=[1, 384]) /* ty=Tensor[(1, 384), int16] */;
    %17 = @func_4875(%14, %15, %16) /* ty=(Tensor[(4, 8, 5), bool], Tensor[(4, 8, 5), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(4, 12, 8), int16], Tensor[(1, 384), int16]) */;
    %18 = @func_11336() /* ty=Tensor[(11, 11, 10), float32] */;
    %19 = %17.4;
    (%18, %19, %var_15024, meta[relay.Constant][0] /* ty=Tensor[(784), float64] */, %var_15026)
  };
  %20(%var_15044, %var_15045) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(4, 12, 8), int16], Tensor[(160), int64], Tensor[(784), float64], Tensor[(384), int16]) */
}

def @func_11677(%var_11675: Tensor[(104), uint64], %var_11676: Tensor[(208), uint64]) -> (Tensor[(2, 10, 12), float32], Tensor[(8, 2, 13), uint64], Tensor[(104), uint64], Tensor[(208), uint64], Tensor[(1568), int64], Tensor[(60), float32], Tensor[(48, 1), float64]) {
  %35 = fn (%var_11645: Tensor[(104), uint64], %var_11646: Tensor[(208), uint64]) -> (Tensor[(2, 10, 12), float32], Tensor[(8, 2, 13), uint64], Tensor[(104), uint64], Tensor[(208), uint64], Tensor[(1568), int64], Tensor[(60), float32], Tensor[(48, 1), float64]) {
    %21 = @func_11222() /* ty=(Tensor[(2, 10, 12), float32],) */;
    %22 = cast(%var_11645, dtype="uint64") /* ty=Tensor[(104), uint64] */;
    %23 = cast(%var_11646, dtype="uint64") /* ty=Tensor[(208), uint64] */;
    %24 = reshape(%22, newshape=[8, 1, 13]) /* ty=Tensor[(8, 1, 13), uint64] */;
    %25 = reshape(%23, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), uint64] */;
    %26 = @func_3215(%24, %25) /* ty=(Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */;
    %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %28 = cast(meta[relay.Constant][2] /* ty=Tensor[(48, 1), float64] */, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
    %29 = reshape(%27, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float32] */;
    %30 = reshape(%28, newshape=[4, 12]) /* ty=Tensor[(4, 12), float64] */;
    %31 = @func_3458(%29, %30) /* ty=(Tensor[(12, 5, ?), int64], Tensor[(6, 1, 8), float64], Tensor[(1568), int64], Tensor[(4, 12), float64]) */;
    %32 = %21.0;
    %33 = %26.0;
    %34 = %31.2;
    (%32, %33, %var_11645, %var_11646, %34, meta[relay.Constant][1] /* ty=Tensor[(60), float32] */, meta[relay.Constant][2] /* ty=Tensor[(48, 1), float64] */)
  };
  %35(%var_11675, %var_11676) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(8, 2, 13), uint64], Tensor[(104), uint64], Tensor[(208), uint64], Tensor[(1568), int64], Tensor[(60), float32], Tensor[(48, 1), float64]) */
}

def @func_11694() -> Tensor[(2, 10, 12), float32] {
  %36 = @func_9439() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %36.0
}

def @func_12337() -> (Tensor[(2, 10, 12), float32],) {
  %37 = @func_9698() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %38 = %37.0;
  (%38,)
}

def @func_9002(%var_8996: Tensor[(16, 8), float64], %var_8997: Tensor[(576), int64], %var_8998: Tensor[(384), int16], %var_8999: Tensor[(486), uint32], %var_9000: Tensor[(784, 1), float64], %var_9001: Tensor[(4, 432), uint64]) -> (Tensor[(8, 6, 5), float32], Tensor[(2, 288), int64], Tensor[(16, 8), float64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(576), int64], Tensor[(486), uint32], Tensor[(7, 14, 8), float64], Tensor[(784, 1), float64], Tensor[(9, 16, 12), int16], Tensor[(4, 432), uint64]) {
  @func_8994(%var_8996, %var_8997, %var_8998, %var_8999, %var_9000, %var_9001) /* ty=(Tensor[(8, 6, 5), float32], Tensor[(2, 288), int64], Tensor[(16, 8), float64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(576), int64], Tensor[(486), uint32], Tensor[(7, 14, 8), float64], Tensor[(784, 1), float64], Tensor[(9, 16, 12), int16], Tensor[(4, 432), uint64]) */
}

def @func_12866() -> (Tensor[(11, 11, 10), float32],) {
  %41 = fn () -> (Tensor[(11, 11, 10), float32],) {
    %39 = @func_10592() /* ty=(Tensor[(11, 11, 10), float32],) */;
    %40 = %39.0;
    (%40,)
  };
  %41() /* ty=(Tensor[(11, 11, 10), float32],) */
}

def @func_2913(%var_2910: int64, %var_2911: Tensor[(14, 7, 16), int64], %var_2912: Tensor[(48), float64]) -> (Tensor[(14, 7, 16), int64], Tensor[(6, 1, 8), float64], Tensor[(48), float64]) {
  %48 = fn (%var_2869: int64, %var_2870: Tensor[(14, 7, 16), int64], %var_2883: Tensor[(48), float64]) -> (Tensor[(14, 7, 16), int64], Tensor[(6, 1, 8), float64], Tensor[(48), float64]) {
    %42 = cast(%var_2869, dtype="int64") /* ty=int64 */;
    %43 = cast(%var_2870, dtype="int64") /* ty=Tensor[(14, 7, 16), int64] */;
    %44 = cast(%var_2883, dtype="float64") /* ty=Tensor[(48), float64] */;
    %45 = reshape(%44, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float64] */;
    %46 = left_shift(%42, %43) /* ty=Tensor[(14, 7, 16), int64] */;
    %47 = @func_1939(%45) /* ty=Tensor[(6, 1, 8), float64] */;
    (%46, %47, %var_2883)
  };
  %48(%var_2910, %var_2911, %var_2912) /* ty=(Tensor[(14, 7, 16), int64], Tensor[(6, 1, 8), float64], Tensor[(48), float64]) */
}

def @func_11621(%var_11619: Tensor[(72), float32], %var_11620: Tensor[(128), float64]) -> (Tensor[(11, 11, 10), float32], Tensor[(13, 14, 13), float64], Tensor[(128), float64], Tensor[(72), float32], Tensor[(128), float64], Tensor[(1, 576), int64]) {
  @func_11617(%var_11619, %var_11620) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(13, 14, 13), float64], Tensor[(128), float64], Tensor[(72), float32], Tensor[(128), float64], Tensor[(1, 576), int64]) */
}

def @func_10540() -> (Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) {
  %49 = @func_10012() /* ty=Tensor[(2, 10, 12), float32] */;
  %50 = @func_10250() /* ty=Tensor[(11, 11, 10), float32] */;
  (%49, %50)
}

def @func_12223() -> Tensor[(2, 10, 12), float32] {
  @func_12221() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_1335(%var_1333: Tensor[(5, 6, 13), bool], %var_1334: Tensor[(5, 6, 13), bool]) -> Tensor[(5, 6, 13), bool] {
  %55 = fn (%var_1327: Tensor[(5, 6, 13), bool], %var_1328: Tensor[(5, 6, 13), bool]) -> Tensor[(5, 6, 13), bool] {
    %51 = cast(%var_1328, dtype="bool") /* ty=Tensor[(5, 6, 13), bool] */;
    %52 = shape_of(%var_1327, dtype="int32") /* ty=Tensor[(3), int32] */;
    %53 = cast(%var_1327, dtype="bool") /* ty=Tensor[(5, 6, 13), bool] */;
    %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%53, %54) /* ty=Tensor[(5, 6, 13), bool] */
  };
  %55(%var_1333, %var_1334) /* ty=Tensor[(5, 6, 13), bool] */
}

def @func_10518() -> Tensor[(2, 10, 12), float32] {
  %56 = fn () -> Tensor[(2, 10, 12), float32] {
    @func_9946() /* ty=Tensor[(2, 10, 12), float32] */
  };
  %56() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_10592() -> (Tensor[(11, 11, 10), float32],) {
  %57 = @func_10373() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %58 = %57.0;
  (%58,)
}

def @func_10910(%var_10909: Tensor[(2, 10, 12), float32]) -> (Tensor[(2, 10, 12), float64], Tensor[(104), uint64]) {
  %67 = fn (%var_10889: Tensor[(2, 10, 12), float32]) -> (Tensor[(2, 10, 12), float64], Tensor[(104), uint64]) {
    %59 = @func_9289() /* ty=Tensor[(2, 10, 12), float32] */;
    %60 = cast(%var_10889, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
    %61 = shape_of(%59, dtype="int32") /* ty=Tensor[(3), int32] */;
    %62 = cast(%59, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
    %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %64 = @func_10262() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(104), uint64], Tensor[(480), int16]) */;
    %65 = multiply(%62, %63) /* ty=Tensor[(2, 10, 12), float64] */;
    %66 = %64.1;
    (%65, %66)
  };
  %67(%var_10909) /* ty=(Tensor[(2, 10, 12), float64], Tensor[(104), uint64]) */
}

def @func_7806(%var_7804: Tensor[(6, 2, 3), float64], %var_7805: Tensor[(1, 390), bool]) -> (Tensor[(6, 2, 3), float64], Tensor[(384), int16], Tensor[(52, 2), uint64], Tensor[(104, 2), uint64], Tensor[(5, 6, 13), bool], Tensor[(1, 390), bool], Tensor[(384), int16], Tensor[(128), float64], Tensor[(576), int64]) {
  @func_7802(%var_7804, %var_7805) /* ty=(Tensor[(6, 2, 3), float64], Tensor[(384), int16], Tensor[(52, 2), uint64], Tensor[(104, 2), uint64], Tensor[(5, 6, 13), bool], Tensor[(1, 390), bool], Tensor[(384), int16], Tensor[(128), float64], Tensor[(576), int64]) */
}

def @func_14934() -> Tensor[(11, 11, 10), float32] {
  @func_14932() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_6194(%var_6190: Tensor[(1, 10, 11), float32], %var_6191: Tensor[(5, 10, 11), float32], %var_6192: Tensor[(104), uint64], %var_6193: Tensor[(784), float64]) -> (Tensor[(5, 10, 11), float32], Tensor[(384), int16], Tensor[(208), uint64], Tensor[(104), uint16], Tensor[(9, 16, 12), int16], Tensor[(1, 1728), uint64], Tensor[(7, 14, 8), float64], Tensor[(784), float64]) {
  %89 = fn (%var_6134: Tensor[(1, 10, 11), float32], %var_6135: Tensor[(5, 10, 11), float32], %var_6143: Tensor[(104), uint64], %var_6170: Tensor[(784), float64]) -> (Tensor[(5, 10, 11), float32], Tensor[(384), int16], Tensor[(208), uint64], Tensor[(104), uint16], Tensor[(9, 16, 12), int16], Tensor[(1, 1728), uint64], Tensor[(7, 14, 8), float64], Tensor[(784), float64]) {
    %68 = cast(%var_6134, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
    %69 = cast(%var_6135, dtype="float32") /* ty=Tensor[(5, 10, 11), float32] */;
    %70 = cast(meta[relay.Constant][3] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
    %71 = cast(meta[relay.Constant][4] /* ty=Tensor[(208), uint64] */, dtype="uint64") /* ty=Tensor[(208), uint64] */;
    %72 = reshape(%70, newshape=[8, 1, 13]) /* ty=Tensor[(8, 1, 13), uint64] */;
    %73 = reshape(%71, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), uint64] */;
    %74 = @func_3215(%72, %73) /* ty=(Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */;
    %75 = cast(%var_6143, dtype="uint16") /* ty=Tensor[(104), uint16] */;
    %76 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(104), uint64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %77 = cast(meta[relay.Constant][3] /* ty=Tensor[(104), uint64] */, dtype="uint16") /* ty=Tensor[(104), uint16] */;
    %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %79 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 1728), uint64] */, dtype="uint64") /* ty=Tensor[(1, 1728), uint64] */;
    %80 = reshape(%79, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), uint64] */;
    %81 = @func_2312(%80) /* ty=(Tensor[(9, 16, 12), uint64], Tensor[(9, 16, 12), int16], Tensor[(9, 16, 12), float32]) */;
    %82 = cast(%var_6170, dtype="float64") /* ty=Tensor[(784), float64] */;
    %83 = reshape(%82, newshape=[7, 14, 8]) /* ty=Tensor[(7, 14, 8), float64] */;
    %84 = maximum(%68, %69) /* ty=Tensor[(5, 10, 11), float32] */;
    %85 = %74.2;
    %86 = subtract(%77, %78) /* ty=Tensor[(104), uint16] */;
    %87 = %81.1;
    %88 = @func_2801(%83) /* ty=Tensor[(7, 14, 8), float64] */;
    (%84, %85, meta[relay.Constant][4] /* ty=Tensor[(208), uint64] */, %86, %87, meta[relay.Constant][5] /* ty=Tensor[(1, 1728), uint64] */, %88, %var_6170)
  };
  %89(%var_6190, %var_6191, %var_6192, %var_6193) /* ty=(Tensor[(5, 10, 11), float32], Tensor[(384), int16], Tensor[(208), uint64], Tensor[(104), uint16], Tensor[(9, 16, 12), int16], Tensor[(1, 1728), uint64], Tensor[(7, 14, 8), float64], Tensor[(784), float64]) */
}

def @func_10356() -> Tensor[(2, 10, 12), float32] {
  @func_10354() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_8169(%var_8167: Tensor[(16, 3, 10), int16]) -> (Tensor[(16, 3, 10), int16], Tensor[(208), uint64], Tensor[(3, 1), int8], Tensor[(104), uint64]) {
  @func_8166(%var_8167) /* ty=(Tensor[(16, 3, 10), int16], Tensor[(208), uint64], Tensor[(3, 1), int8], Tensor[(104), uint64]) */
}

def @func_10542() -> (Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) {
  @func_10540() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) */
}

def @func_14977() -> (Tensor[(?, 4, 5), bool], Tensor[(13, 14, 13), float64]) {
  %94 = fn () -> (Tensor[(?, 4, 5), bool], Tensor[(13, 14, 13), float64]) {
    %90 = @func_13787() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(?, 4, 5), float32], Tensor[(?, 4, 5), bool]) */;
    %91 = @func_13545() /* ty=(Tensor[(13, 14, 13), float64],) */;
    %92 = %90.2;
    %93 = %91.0;
    (%92, %93)
  };
  %94() /* ty=(Tensor[(?, 4, 5), bool], Tensor[(13, 14, 13), float64]) */
}

def @func_9947() -> Tensor[(2, 10, 12), float32] {
  %96 = fn () -> Tensor[(2, 10, 12), float32] {
    %95 = @func_9439() /* ty=(Tensor[(2, 10, 12), float32],) */;
    %95.0
  };
  %96() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_12668() -> Tensor[(2, 10, 12), float32] {
  %97 = @func_9688() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(2, 10, 12), float32]) */;
  %97.0
}

def @func_2315(%var_2313: Tensor[(9, 16, 12), uint64]) -> (Tensor[(9, 16, 12), uint64], Tensor[(9, 16, 12), int16], Tensor[(9, 16, 12), float32]) {
  @func_2312(%var_2313) /* ty=(Tensor[(9, 16, 12), uint64], Tensor[(9, 16, 12), int16], Tensor[(9, 16, 12), float32]) */
}

def @func_3114(%var_3113: Tensor[(4, 14, 9), int8]) -> Tensor[(4, 14, 9), int8] {
  %102 = fn (%var_3105: Tensor[(4, 14, 9), int8]) -> Tensor[(4, 14, 9), int8] {
    %98 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 14, 9), int8] */, dtype="int8") /* ty=Tensor[(4, 14, 9), int8] */;
    %99 = shape_of(%var_3105, dtype="int32") /* ty=Tensor[(3), int32] */;
    %100 = cast(%var_3105, dtype="int8") /* ty=Tensor[(4, 14, 9), int8] */;
    %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    bitwise_xor(%100, %101) /* ty=Tensor[(4, 14, 9), int8] */
  };
  %102(%var_3113) /* ty=Tensor[(4, 14, 9), int8] */
}

def @func_6851(%var_6849: Tensor[(1, 3, 1), int8], %var_6850: Tensor[(104, 1), uint64]) -> (Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) {
  @func_6847(%var_6849, %var_6850) /* ty=(Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) */
}

def @func_8994(%var_8934: Tensor[(16, 8), float64], %var_8935: Tensor[(576), int64], %var_8936: Tensor[(384), int16], %var_8948: Tensor[(486), uint32], %var_8969: Tensor[(784, 1), float64], %var_8988: Tensor[(4, 432), uint64]) -> (Tensor[(8, 6, 5), float32], Tensor[(2, 288), int64], Tensor[(16, 8), float64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(576), int64], Tensor[(486), uint32], Tensor[(7, 14, 8), float64], Tensor[(784, 1), float64], Tensor[(9, 16, 12), int16], Tensor[(4, 432), uint64]) {
  %103 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 6, 5), float32] */;
  %104 = cast(%var_8934, dtype="float64") /* ty=Tensor[(16, 8), float64] */;
  %105 = cast(%var_8935, dtype="int64") /* ty=Tensor[(576), int64] */;
  %106 = cast(%var_8936, dtype="int16") /* ty=Tensor[(384), int16] */;
  %107 = reshape(%104, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float64] */;
  %108 = reshape(%105, newshape=[2, 288]) /* ty=Tensor[(2, 288), int64] */;
  %109 = reshape(%106, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %110 = @func_1141(%107, %108, %109) /* ty=(Tensor[(16, 2, 4), float64], Tensor[(8, 6, 12), float64], Tensor[(2, 288), int64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %111 = cast(%var_8948, dtype="uint32") /* ty=Tensor[(486), uint32] */;
  %112 = cast(%var_8948, dtype="uint32") /* ty=Tensor[(486), uint32] */;
  %113 = cast(%var_8934, dtype="float64") /* ty=Tensor[(16, 8), float64] */;
  %114 = reshape(%111, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), uint32] */;
  %115 = reshape(%112, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), uint32] */;
  %116 = reshape(%113, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %117 = @func_4650(%114, %115, %116) /* ty=(Tensor[(6, 9, 9), bool], Tensor[(576), int64], Tensor[(128), float64], Tensor[(6, 96), int64], Tensor[(6, 64), int16], Tensor[(9, 16, 12), int16], Tensor[(1728), uint64], Tensor[(1, 220), uint8], Tensor[(144, 4), uint32]) */;
  %118 = cast(%var_8969, dtype="float64") /* ty=Tensor[(784, 1), float64] */;
  %119 = reshape(%118, newshape=[7, 14, 8]) /* ty=Tensor[(7, 14, 8), float64] */;
  %120 = cast(%var_8988, dtype="uint64") /* ty=Tensor[(4, 432), uint64] */;
  %121 = reshape(%120, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), uint64] */;
  %122 = @func_2312(%121) /* ty=(Tensor[(9, 16, 12), uint64], Tensor[(9, 16, 12), int16], Tensor[(9, 16, 12), float32]) */;
  %123 = sqrt(%103) /* ty=Tensor[(8, 6, 5), float32] */;
  %124 = %110.2;
  %125 = %117.1;
  %126 = @func_2801(%119) /* ty=Tensor[(7, 14, 8), float64] */;
  %127 = %122.1;
  (%123, %124, %var_8934, %var_8935, %var_8936, %125, %var_8948, %126, %var_8969, %127, %var_8988)
}

def @func_12139() -> (Tensor[(11, 11, 10), float32],) {
  @func_12137() /* ty=(Tensor[(11, 11, 10), float32],) */
}

def @func_14993() -> (Tensor[(13, 14, 13), float64],) {
  %128 = @func_13545() /* ty=(Tensor[(13, 14, 13), float64],) */;
  %129 = %128.0;
  (%129,)
}

def @func_12149() -> (Tensor[(2, 10, 12), float32],) {
  %131 = fn () -> (Tensor[(2, 10, 12), float32],) {
    %130 = @func_11694() /* ty=Tensor[(2, 10, 12), float32] */;
    (%130,)
  };
  %131() /* ty=(Tensor[(2, 10, 12), float32],) */
}

def @func_12446() -> Tensor[(2, 10, 12), float32] {
  %133 = fn () -> Tensor[(2, 10, 12), float32] {
    %132 = @func_12337() /* ty=(Tensor[(2, 10, 12), float32],) */;
    %132.0
  };
  %133() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_3498(%var_3496: Tensor[(1, 6, 16), int64]) -> Tensor[(1, 6, 16), bool] {
  @func_3495(%var_3496) /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_12670() -> Tensor[(2, 10, 12), float32] {
  @func_12668() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_10831() -> Tensor[(11, 11, 10), float32] {
  %134 = fn () -> Tensor[(11, 11, 10), float32] {
    @func_10250() /* ty=Tensor[(11, 11, 10), float32] */
  };
  %134() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_13230() -> (Tensor[(11, 11, 10), float32], Tensor[(104, 1), uint64], Tensor[(3), int8], Tensor[(104), uint64], Tensor[(11, 11, 10), float32], Tensor[(11, 11, 10), float32], Tensor[(13, 14, 13), float64]) {
  @func_13228() /* ty=(Tensor[(11, 11, 10), float32], Tensor[(104, 1), uint64], Tensor[(3), int8], Tensor[(104), uint64], Tensor[(11, 11, 10), float32], Tensor[(11, 11, 10), float32], Tensor[(13, 14, 13), float64]) */
}

def @func_9269() -> (Tensor[(11, 11, 10), float32],) {
  %137 = fn () -> (Tensor[(11, 11, 10), float32],) {
    %135 = cast(meta[relay.Constant][8] /* ty=Tensor[(11, 11, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 11, 10), float32] */;
    %136 = asin(%135) /* ty=Tensor[(11, 11, 10), float32] */;
    (%136,)
  };
  %137() /* ty=(Tensor[(11, 11, 10), float32],) */
}

def @func_11522() -> Tensor[(2, 10, 12), float32] {
  %138 = @func_9688() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(2, 10, 12), float32]) */;
  %138.1
}

def @func_11897(%var_11895: Tensor[(9, 3, 11), bool], %var_11896: Tensor[(9, 3, 11), bool]) -> (Tensor[(9, 3, 11), bool],) {
  @func_11893(%var_11895, %var_11896) /* ty=(Tensor[(9, 3, 11), bool],) */
}

def @func_9869(%var_9868: Tensor[(1, 10, 5), float64]) -> Tensor[(1, 10, 5), float64] {
  %140 = fn (%var_9857: Tensor[(1, 10, 5), float64]) -> Tensor[(1, 10, 5), float64] {
    %139 = cast(%var_9857, dtype="float64") /* ty=Tensor[(1, 10, 5), float64] */;
    sqrt(%139) /* ty=Tensor[(1, 10, 5), float64] */
  };
  %140(%var_9868) /* ty=Tensor[(1, 10, 5), float64] */
}

def @func_10014() -> Tensor[(2, 10, 12), float32] {
  @func_10012() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_14100(%var_14098: Tensor[(900), float32], %var_14099: Tensor[(1, 208), uint64]) -> (Tensor[(2, 10, 12), float32], Tensor[(2, 10, 12), float32], Tensor[(6, 15, 10), float32], Tensor[(900), float32], Tensor[(1, 208), uint64]) {
  %149 = fn (%var_14094: Tensor[(900), float32], %var_14095: Tensor[(1, 208), uint64]) -> (Tensor[(2, 10, 12), float32], Tensor[(2, 10, 12), float32], Tensor[(6, 15, 10), float32], Tensor[(900), float32], Tensor[(1, 208), uint64]) {
    %141 = cast(%var_14094, dtype="float32") /* ty=Tensor[(900), float32] */;
    %142 = cast(%var_14095, dtype="uint64") /* ty=Tensor[(1, 208), uint64] */;
    %143 = reshape(%141, newshape=[6, 15, 10]) /* ty=Tensor[(6, 15, 10), float32] */;
    %144 = reshape(%142, newshape=[208]) /* ty=Tensor[(208), uint64] */;
    %145 = @func_6704(%143, %144) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(104), uint64], Tensor[(208), uint64]) */;
    %146 = @func_9247() /* ty=Tensor[(2, 10, 12), float32] */;
    %147 = @func_9946() /* ty=Tensor[(2, 10, 12), float32] */;
    %148 = %145.0;
    (%146, %147, %148, %var_14094, %var_14095)
  };
  %149(%var_14098, %var_14099) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(2, 10, 12), float32], Tensor[(6, 15, 10), float32], Tensor[(900), float32], Tensor[(1, 208), uint64]) */
}

def @func_6847(%var_6832: Tensor[(1, 3, 1), int8], %var_6838: Tensor[(104, 1), uint64]) -> (Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) {
  %150 = cast(meta[relay.Constant][9] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %151 = cast(%var_6832, dtype="int8") /* ty=Tensor[(1, 3, 1), int8] */;
  %152 = cast(%var_6838, dtype="uint64") /* ty=Tensor[(104, 1), uint64] */;
  %153 = cast(meta[relay.Constant][10] /* ty=Tensor[(208), uint64] */, dtype="uint64") /* ty=Tensor[(208), uint64] */;
  %154 = reshape(%152, newshape=[8, 1, 13]) /* ty=Tensor[(8, 1, 13), uint64] */;
  %155 = reshape(%153, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), uint64] */;
  %156 = @func_3215(%154, %155) /* ty=(Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */;
  %157 = cast(%var_6838, dtype="uint64") /* ty=Tensor[(104, 1), uint64] */;
  %158 = cast(meta[relay.Constant][10] /* ty=Tensor[(208), uint64] */, dtype="uint64") /* ty=Tensor[(208), uint64] */;
  %159 = reshape(%157, newshape=[8, 1, 13]) /* ty=Tensor[(8, 1, 13), uint64] */;
  %160 = reshape(%158, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), uint64] */;
  %161 = @func_3215(%159, %160) /* ty=(Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */;
  %162 = bitwise_xor(%150, %151) /* ty=Tensor[(1, 3, 1), int8] */;
  %163 = %156.0;
  %164 = %161.0;
  (%162, %163, %var_6838, meta[relay.Constant][10] /* ty=Tensor[(208), uint64] */, %164)
}

def @func_9391() -> Tensor[(2, 10, 12), float32] {
  @func_9389() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_10084(%var_10077: Tensor[(900), float32]) -> (Tensor[(2, 10, 12), float32], Tensor[(208), uint64], Tensor[(900), float32], Tensor[(208), uint64]) {
  %165 = cast(%var_10077, dtype="float32") /* ty=Tensor[(900), float32] */;
  %166 = cast(meta[relay.Constant][11] /* ty=Tensor[(208), uint64] */, dtype="uint64") /* ty=Tensor[(208), uint64] */;
  %167 = reshape(%165, newshape=[6, 15, 10]) /* ty=Tensor[(6, 15, 10), float32] */;
  %168 = reshape(%166, newshape=[208]) /* ty=Tensor[(208), uint64] */;
  %169 = @func_6704(%167, %168) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(104), uint64], Tensor[(208), uint64]) */;
  %170 = @func_9946() /* ty=Tensor[(2, 10, 12), float32] */;
  %171 = %169.3;
  (%170, %171, %var_10077, meta[relay.Constant][11] /* ty=Tensor[(208), uint64] */)
}

def @func_10181(%var_10179: Tensor[(7, 4, 13), int16], %var_10180: Tensor[(7, 4, 13), int16]) -> (Tensor[(7, 4, 13), int16], Tensor[(7, 4, 13), float64], Tensor[(11, 5, 11), float64], Tensor[(605), float64]) {
  %185 = fn (%var_10164: Tensor[(7, 4, 13), int16], %var_10165: Tensor[(7, 4, 13), int16]) -> (Tensor[(7, 4, 13), int16], Tensor[(7, 4, 13), float64], Tensor[(11, 5, 11), float64], Tensor[(605), float64]) {
    %172 = cast(%var_10165, dtype="int16") /* ty=Tensor[(7, 4, 13), int16] */;
    %173 = shape_of(%var_10164, dtype="int32") /* ty=Tensor[(3), int32] */;
    %174 = cast(%var_10164, dtype="int16") /* ty=Tensor[(7, 4, 13), int16] */;
    %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %176 = cast(%var_10164, dtype="float64") /* ty=Tensor[(7, 4, 13), float64] */;
    %177 = cast(meta[relay.Constant][12] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
    %178 = cast(meta[relay.Constant][12] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
    %179 = reshape(%177, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), float64] */;
    %180 = reshape(%178, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), float64] */;
    %181 = @func_8366(%179, %180) /* ty=(Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), bool], Tensor[(1, 3, 1), int8], Tensor[(3), int8], Tensor[(104), uint64]) */;
    %182 = bitwise_and(%174, %175) /* ty=Tensor[(7, 4, 13), int16] */;
    %183 = sin(%176) /* ty=Tensor[(7, 4, 13), float64] */;
    %184 = %181.0;
    (%182, %183, %184, meta[relay.Constant][12] /* ty=Tensor[(605), float64] */)
  };
  %185(%var_10179, %var_10180) /* ty=(Tensor[(7, 4, 13), int16], Tensor[(7, 4, 13), float64], Tensor[(11, 5, 11), float64], Tensor[(605), float64]) */
}

def @func_11893(%var_11867: Tensor[(9, 3, 11), bool], %var_11868: Tensor[(9, 3, 11), bool]) -> (Tensor[(9, 3, 11), bool],) {
  %186 = cast(%var_11868, dtype="bool") /* ty=Tensor[(9, 3, 11), bool] */;
  %187 = shape_of(%var_11867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%var_11867, dtype="bool") /* ty=Tensor[(9, 3, 11), bool] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %190 = logical_and(%188, %189) /* ty=Tensor[(9, 3, 11), bool] */;
  (%190,)
}

def @func_9690() -> (Tensor[(2, 10, 12), float32], Tensor[(2, 10, 12), float32]) {
  @func_9688() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(2, 10, 12), float32]) */
}

def @func_13452(%var_13447: Tensor[(297), bool], %var_13448: Tensor[(104), uint64], %var_13449: Tensor[(72), float32], %var_13450: Tensor[(576), int64], %var_13451: Tensor[(36), float64]) -> (Tensor[(297), uint32], Tensor[(504), int8], Tensor[(11, 11, 10), float32], Tensor[(390), bool], Tensor[(13, 14, 13), float32], Tensor[(5, 6, 13), float32], Tensor[(8, 2, 13), uint64], Tensor[(1, 3), int8], Tensor[(104), uint64], Tensor[(13, 14, 13), float64], Tensor[(128), float64], Tensor[(72), float32], Tensor[(576), int64], Tensor[(128), float64], Tensor[(36), float64], Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) {
  @func_13445(%var_13447, %var_13448, %var_13449, %var_13450, %var_13451) /* ty=(Tensor[(297), uint32], Tensor[(504), int8], Tensor[(11, 11, 10), float32], Tensor[(390), bool], Tensor[(13, 14, 13), float32], Tensor[(5, 6, 13), float32], Tensor[(8, 2, 13), uint64], Tensor[(1, 3), int8], Tensor[(104), uint64], Tensor[(13, 14, 13), float64], Tensor[(128), float64], Tensor[(72), float32], Tensor[(576), int64], Tensor[(128), float64], Tensor[(36), float64], Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) */
}

def @func_5502(%var_5499: Tensor[(7, 3, 14), float64], %var_5500: int64, %var_5501: Tensor[(48), float64]) -> (Tensor[(7, 3, 14), float64], Tensor[(48), float64], int64, Tensor[(1568), int64], Tensor[(48), float64]) {
  %201 = fn (%var_5480: Tensor[(7, 3, 14), float64], %var_5489: int64, %var_5491: Tensor[(48), float64]) -> (Tensor[(7, 3, 14), float64], Tensor[(48), float64], int64, Tensor[(1568), int64], Tensor[(48), float64]) {
    %191 = cast(%var_5480, dtype="float64") /* ty=Tensor[(7, 3, 14), float64] */;
    %192 = cast(%var_5489, dtype="int64") /* ty=int64 */;
    %193 = cast(meta[relay.Constant][13] /* ty=Tensor[(1568), int64] */, dtype="int64") /* ty=Tensor[(1568), int64] */;
    %194 = cast(%var_5491, dtype="float64") /* ty=Tensor[(48), float64] */;
    %195 = reshape(%192, newshape=[]) /* ty=int64 */;
    %196 = reshape(%193, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), int64] */;
    %197 = reshape(%194, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %198 = @func_2909(%195, %196, %197) /* ty=(Tensor[(14, 7, 16), int64], Tensor[(6, 1, 8), float64], Tensor[(48), float64]) */;
    %199 = rsqrt(%191) /* ty=Tensor[(7, 3, 14), float64] */;
    %200 = %198.2;
    (%199, %200, %var_5489, meta[relay.Constant][13] /* ty=Tensor[(1568), int64] */, %var_5491)
  };
  %201(%var_5499, %var_5500, %var_5501) /* ty=(Tensor[(7, 3, 14), float64], Tensor[(48), float64], int64, Tensor[(1568), int64], Tensor[(48), float64]) */
}

def @func_9440() -> (Tensor[(2, 10, 12), float32],) {
  %203 = fn () -> (Tensor[(2, 10, 12), float32],) {
    %202 = @func_9289() /* ty=Tensor[(2, 10, 12), float32] */;
    (%202,)
  };
  %203() /* ty=(Tensor[(2, 10, 12), float32],) */
}

def @func_14995() -> (Tensor[(13, 14, 13), float64],) {
  @func_14993() /* ty=(Tensor[(13, 14, 13), float64],) */
}

def @func_11082(%var_11080: bool) -> Tensor[(7, 3, 16), bool] {
  @func_11079(%var_11080) /* ty=Tensor[(7, 3, 16), bool] */
}

def @func_14475(%var_14467: Tensor[(240), float32]) -> (Tensor[(11, 11, 10), float32], Tensor[(13, 14, 13), float64], Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(240), float32]) {
  %204 = @func_13545() /* ty=(Tensor[(13, 14, 13), float64],) */;
  %205 = @func_9821() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %206 = cast(%var_14467, dtype="float32") /* ty=Tensor[(240), float32] */;
  %207 = reshape(%206, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float32] */;
  %208 = @func_13034(%207) /* ty=(Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) */;
  %209 = @func_11336() /* ty=Tensor[(11, 11, 10), float32] */;
  %210 = %204.0;
  %211 = %205.0;
  %212 = %208.1;
  (%209, %210, %211, %212, %var_14467)
}

def @func_14075() -> (Tensor[(11, 11, 10), float32],) {
  %213 = @func_12775() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %214 = %213.0;
  (%214,)
}

def @func_11478(%var_11420: Tensor[(22, 5), float32], %var_11421: Tensor[(550), float32], %var_11422: Tensor[(104), uint64], %var_11434: Tensor[(96), int64]) -> (Tensor[(11, 11, 10), float32], Tensor[(5, 10, 11), float32], Tensor[(22, 5), float32], Tensor[(550), float32], Tensor[(104), uint64], Tensor[(4, 14, 9), int8], Tensor[(1, 96), int64], Tensor[(700), int64], Tensor[(96), int64], Tensor[(2, 10, 12), float32], Tensor[(13, 14, 13), float64], Tensor[(784, 780), float32], Tensor[(2, 10, 12), float32]) {
  %215 = cast(%var_11420, dtype="float32") /* ty=Tensor[(22, 5), float32] */;
  %216 = cast(%var_11421, dtype="float32") /* ty=Tensor[(550), float32] */;
  %217 = cast(%var_11422, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %218 = cast(meta[relay.Constant][14] /* ty=Tensor[(784, 1), float64] */, dtype="float64") /* ty=Tensor[(784, 1), float64] */;
  %219 = reshape(%215, newshape=[1, 10, 11]) /* ty=Tensor[(1, 10, 11), float32] */;
  %220 = reshape(%216, newshape=[5, 10, 11]) /* ty=Tensor[(5, 10, 11), float32] */;
  %221 = reshape(%217, newshape=[104]) /* ty=Tensor[(104), uint64] */;
  %222 = reshape(%218, newshape=[784]) /* ty=Tensor[(784), float64] */;
  %223 = @func_6189(%219, %220, %221, %222) /* ty=(Tensor[(5, 10, 11), float32], Tensor[(384), int16], Tensor[(208), uint64], Tensor[(104), uint16], Tensor[(9, 16, 12), int16], Tensor[(1, 1728), uint64], Tensor[(7, 14, 8), float64], Tensor[(784), float64]) */;
  %224 = @func_10469() /* ty=(Tensor[(4, 12, 8), int16], Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(504), int8]) */;
  %225 = cast(meta[relay.Constant][15] /* ty=Tensor[(700), int64] */, dtype="int64") /* ty=Tensor[(700), int64] */;
  %226 = cast(%var_11434, dtype="int64") /* ty=Tensor[(96), int64] */;
  %227 = cast(meta[relay.Constant][16] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %228 = reshape(%225, newshape=[700]) /* ty=Tensor[(700), int64] */;
  %229 = reshape(%226, newshape=[1, 96]) /* ty=Tensor[(1, 96), int64] */;
  %230 = reshape(%227, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %231 = @func_11192(%228, %229, %230) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(11, 11, 10), float32], Tensor[(2, 392), float64], Tensor[(88), uint64], Tensor[(704), uint64], Tensor[(160), int64], Tensor[(700), int64], Tensor[(1, 96), int64], Tensor[(128), float64], Tensor[(780), float64]) */;
  %232 = cast(meta[relay.Constant][16] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %233 = cast(meta[relay.Constant][14] /* ty=Tensor[(784, 1), float64] */, dtype="float32") /* ty=Tensor[(784, 1), float32] */;
  %234 = @func_10830() /* ty=Tensor[(11, 11, 10), float32] */;
  %235 = %223.0;
  %236 = %224.2;
  %237 = %231.8;
  %238 = @func_9946() /* ty=Tensor[(2, 10, 12), float32] */;
  %239 = @func_10147() /* ty=Tensor[(13, 14, 13), float64] */;
  %240 = add(%232, %233) /* ty=Tensor[(784, 780), float32] */;
  %241 = @func_9289() /* ty=Tensor[(2, 10, 12), float32] */;
  (%234, %235, %var_11420, %var_11421, %var_11422, %236, %237, meta[relay.Constant][15] /* ty=Tensor[(700), int64] */, %var_11434, %238, %239, %240, %241)
}

def @func_10815(%var_10813: Tensor[(576), int64]) -> (Tensor[(2, 10, 12), float32], Tensor[(128), float64], Tensor[(700), int64], Tensor[(220), uint8], Tensor[(576), int64], Tensor[(384), int16], Tensor[(2, 10, 12), bool], Tensor[(128), float32]) {
  @func_10812(%var_10813) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(128), float64], Tensor[(700), int64], Tensor[(220), uint8], Tensor[(576), int64], Tensor[(384), int16], Tensor[(2, 10, 12), bool], Tensor[(128), float32]) */
}

def @func_686(%var_684: Tensor[(4, 12, 8), int16], %var_685: Tensor[(4, 12, 8), int16]) -> (Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) {
  %259 = fn (%var_661: Tensor[(4, 12, 8), int16], %var_662: Tensor[(4, 12, 8), int16]) -> (Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) {
    %242 = cast(%var_662, dtype="int16") /* ty=Tensor[(4, 12, 8), int16] */;
    %243 = shape_of(%var_661, dtype="int32") /* ty=Tensor[(3), int32] */;
    %244 = cast(%var_661, dtype="int16") /* ty=Tensor[(4, 12, 8), int16] */;
    %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %246 = cast(meta[relay.Constant][17] /* ty=Tensor[(576), int64] */, dtype="int64") /* ty=Tensor[(576), int64] */;
    %247 = reshape(%246, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int64] */;
    %248 = @func_254(%247) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) */;
    %249 = cast(meta[relay.Constant][17] /* ty=Tensor[(576), int64] */, dtype="int64") /* ty=Tensor[(576), int64] */;
    %250 = reshape(%249, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int64] */;
    %251 = @func_254(%250) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) */;
    %252 = %251.1;
    %253 = cast(%252, dtype="int64") /* ty=Tensor[(8, 6, 12), int64] */;
    %254 = reshape(%253, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int64] */;
    %255 = @func_254(%254) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) */;
    %256 = logical_xor(%244, %245) /* ty=Tensor[(4, 12, 8), int16] */;
    %257 = %248.1;
    %258 = %255.0;
    (%256, %257, meta[relay.Constant][17] /* ty=Tensor[(576), int64] */, %252, %258)
  };
  %259(%var_684, %var_685) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */
}

def @func_12137() -> (Tensor[(11, 11, 10), float32],) {
  %260 = @func_9411() /* ty=Tensor[(11, 11, 10), float32] */;
  (%260,)
}

def @func_10148() -> Tensor[(13, 14, 13), float64] {
  %262 = fn () -> Tensor[(13, 14, 13), float64] {
    %261 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 14, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 14, 13), float64] */;
    acos(%261) /* ty=Tensor[(13, 14, 13), float64] */
  };
  %262() /* ty=Tensor[(13, 14, 13), float64] */
}

def @func_13546() -> (Tensor[(13, 14, 13), float64],) {
  %264 = fn () -> (Tensor[(13, 14, 13), float64],) {
    %263 = @func_10147() /* ty=Tensor[(13, 14, 13), float64] */;
    (%263,)
  };
  %264() /* ty=(Tensor[(13, 14, 13), float64],) */
}

def @func_13857() -> Tensor[(11, 11, 10), float32] {
  %265 = fn () -> Tensor[(11, 11, 10), float32] {
    @func_11336() /* ty=Tensor[(11, 11, 10), float32] */
  };
  %265() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_12777() -> (Tensor[(11, 11, 10), float32],) {
  @func_12775() /* ty=(Tensor[(11, 11, 10), float32],) */
}

def @func_13710(%var_13705: Tensor[(11, 11, 10), float32]) -> (Tensor[(2, 10, 12), float32], Tensor[(144, 4), uint32], Tensor[(11, 11, 10), bool]) {
  %266 = @func_10402() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(8, 6, 12), uint16], Tensor[(384, 1), int16], Tensor[(144, 4), uint32], Tensor[(700), int64], Tensor[(4, 12, 8), int16]) */;
  %267 = @func_12775() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %268 = %267.0;
  %269 = cast(%var_13705, dtype="bool") /* ty=Tensor[(11, 11, 10), bool] */;
  %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%268, dtype="bool") /* ty=Tensor[(11, 11, 10), bool] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %273 = @func_10354() /* ty=Tensor[(2, 10, 12), float32] */;
  %274 = %266.3;
  %275 = logical_and(%271, %272) /* ty=Tensor[(11, 11, 10), bool] */;
  (%273, %274, %275)
}

def @func_12810() -> Tensor[(2, 10, 12), float32] {
  @func_12808() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_8369(%var_8367: Tensor[(11, 5, 11), float64], %var_8368: Tensor[(11, 5, 11), float64]) -> (Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), bool], Tensor[(1, 3, 1), int8], Tensor[(3), int8], Tensor[(104), uint64]) {
  %291 = fn (%var_8315: Tensor[(11, 5, 11), float64], %var_8334: Tensor[(11, 5, 11), float64]) -> (Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), bool], Tensor[(1, 3, 1), int8], Tensor[(3), int8], Tensor[(104), uint64]) {
    %276 = cast(%var_8315, dtype="float64") /* ty=Tensor[(11, 5, 11), float64] */;
    %277 = cast(%var_8315, dtype="float64") /* ty=Tensor[(11, 5, 11), float64] */;
    %278 = cast(%var_8334, dtype="bool") /* ty=Tensor[(11, 5, 11), bool] */;
    %279 = shape_of(%var_8315, dtype="int32") /* ty=Tensor[(3), int32] */;
    %280 = cast(%var_8315, dtype="bool") /* ty=Tensor[(11, 5, 11), bool] */;
    %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %282 = cast(meta[relay.Constant][19] /* ty=Tensor[(3), int8] */, dtype="int8") /* ty=Tensor[(3), int8] */;
    %283 = cast(meta[relay.Constant][20] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
    %284 = reshape(%282, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), int8] */;
    %285 = reshape(%283, newshape=[104, 1]) /* ty=Tensor[(104, 1), uint64] */;
    %286 = @func_6847(%284, %285) /* ty=(Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) */;
    %287 = acosh(%276) /* ty=Tensor[(11, 5, 11), float64] */;
    %288 = atan(%277) /* ty=Tensor[(11, 5, 11), float64] */;
    %289 = less(%280, %281) /* ty=Tensor[(11, 5, 11), bool] */;
    %290 = %286.0;
    (%287, %288, %289, %290, meta[relay.Constant][19] /* ty=Tensor[(3), int8] */, meta[relay.Constant][20] /* ty=Tensor[(104), uint64] */)
  };
  %291(%var_8367, %var_8368) /* ty=(Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), bool], Tensor[(1, 3, 1), int8], Tensor[(3), int8], Tensor[(104), uint64]) */
}

def @func_13228() -> (Tensor[(11, 11, 10), float32], Tensor[(104, 1), uint64], Tensor[(3), int8], Tensor[(104), uint64], Tensor[(11, 11, 10), float32], Tensor[(11, 11, 10), float32], Tensor[(13, 14, 13), float64]) {
  %292 = @func_12865() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %293 = cast(meta[relay.Constant][21] /* ty=Tensor[(3), int8] */, dtype="int8") /* ty=Tensor[(3), int8] */;
  %294 = cast(meta[relay.Constant][22] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %295 = reshape(%293, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), int8] */;
  %296 = reshape(%294, newshape=[104, 1]) /* ty=Tensor[(104, 1), uint64] */;
  %297 = @func_6847(%295, %296) /* ty=(Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) */;
  %298 = @func_10592() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %299 = @func_9971() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %300 = %292.0;
  %301 = %297.2;
  %302 = %298.0;
  %303 = %299.0;
  %304 = @func_10147() /* ty=Tensor[(13, 14, 13), float64] */;
  (%300, %301, meta[relay.Constant][21] /* ty=Tensor[(3), int8] */, meta[relay.Constant][22] /* ty=Tensor[(104), uint64] */, %302, %303, %304)
}

def @func_12114() -> (Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32], Tensor[(4, 12), float64], Tensor[(384), int16]) {
  %305 = @func_9268() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %306 = cast(meta[relay.Constant][23] /* ty=Tensor[(384), int16] */, dtype="int16") /* ty=Tensor[(384), int16] */;
  %307 = reshape(%306, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %308 = @func_9643(%307) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(384), int16], Tensor[(4, 12), float64], Tensor[(60), float32], Tensor[(48), float64]) */;
  %309 = @func_9946() /* ty=Tensor[(2, 10, 12), float32] */;
  %310 = %305.0;
  %311 = %308.3;
  (%309, %310, %311, meta[relay.Constant][23] /* ty=Tensor[(384), int16] */)
}

def @main(%var_15054: Tensor[(10, 10, 4), float64]) -> (Tensor[(10, 10, 4), float32],) {
  %312 = cast(%var_15054, dtype="float64") /* ty=Tensor[(10, 10, 4), float64] */;
  %313 = sqrt(%312) /* ty=Tensor[(10, 10, 4), float64] */;
  %314 = cast(%313, dtype="float32") /* ty=Tensor[(10, 10, 4), float32] */;
  %315 = sinh(%314) /* ty=Tensor[(10, 10, 4), float32] */;
  (%315,)
}

def @func_9645(%var_9644: Tensor[(384), int16]) -> (Tensor[(11, 11, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(384), int16], Tensor[(4, 12), float64], Tensor[(60), float32], Tensor[(48), float64]) {
  %334 = fn (%var_9620: Tensor[(384), int16]) -> (Tensor[(11, 11, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(384), int16], Tensor[(4, 12), float64], Tensor[(60), float32], Tensor[(48), float64]) {
    %316 = @func_9578() /* ty=Tensor[(11, 11, 10), float32] */;
    %317 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 11, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 11, 10), float32] */;
    %318 = shape_of(%316, dtype="int32") /* ty=Tensor[(3), int32] */;
    %319 = cast(%316, dtype="float32") /* ty=Tensor[(11, 11, 10), float32] */;
    %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %321 = cast(%var_9620, dtype="int16") /* ty=Tensor[(384), int16] */;
    %322 = cast(%var_9620, dtype="int16") /* ty=Tensor[(384), int16] */;
    %323 = reshape(%321, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
    %324 = reshape(%322, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
    %325 = @func_683(%323, %324) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
    %326 = cast(meta[relay.Constant][25] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %327 = cast(meta[relay.Constant][26] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %328 = reshape(%326, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float32] */;
    %329 = reshape(%327, newshape=[4, 12]) /* ty=Tensor[(4, 12), float64] */;
    %330 = @func_3458(%328, %329) /* ty=(Tensor[(12, 5, ?), int64], Tensor[(6, 1, 8), float64], Tensor[(1568), int64], Tensor[(4, 12), float64]) */;
    %331 = floor_mod(%319, %320) /* ty=Tensor[(11, 11, 10), float32] */;
    %332 = %325.1;
    %333 = %330.3;
    (%331, %332, %var_9620, %333, meta[relay.Constant][25] /* ty=Tensor[(60), float32] */, meta[relay.Constant][26] /* ty=Tensor[(48), float64] */)
  };
  %334(%var_9644) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(384), int16], Tensor[(4, 12), float64], Tensor[(60), float32], Tensor[(48), float64]) */
}

def @func_9076(%var_9074: Tensor[(16, 9, 11), int8], %var_9075: Tensor[(104), uint64]) -> (Tensor[(16, 9, 11), int8], Tensor[(5, 6, 13), bool], Tensor[(390, 1), bool], Tensor[(208), uint64], Tensor[(3), int8], Tensor[(104), uint64]) {
  @func_9072(%var_9074, %var_9075) /* ty=(Tensor[(16, 9, 11), int8], Tensor[(5, 6, 13), bool], Tensor[(390, 1), bool], Tensor[(208), uint64], Tensor[(3), int8], Tensor[(104), uint64]) */
}

def @func_3218(%var_3216: Tensor[(8, 1, 13), uint64], %var_3217: Tensor[(8, 2, 13), uint64]) -> (Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) {
  %344 = fn (%var_3207: Tensor[(8, 1, 13), uint64], %var_3208: Tensor[(8, 2, 13), uint64]) -> (Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) {
    %335 = cast(%var_3207, dtype="uint64") /* ty=Tensor[(8, 1, 13), uint64] */;
    %336 = cast(%var_3208, dtype="uint64") /* ty=Tensor[(8, 2, 13), uint64] */;
    %337 = cast(meta[relay.Constant][27] /* ty=Tensor[(384), int16] */, dtype="int16") /* ty=Tensor[(384), int16] */;
    %338 = cast(meta[relay.Constant][27] /* ty=Tensor[(384), int16] */, dtype="int16") /* ty=Tensor[(384), int16] */;
    %339 = reshape(%337, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
    %340 = reshape(%338, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
    %341 = @func_683(%339, %340) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
    %342 = subtract(%335, %336) /* ty=Tensor[(8, 2, 13), uint64] */;
    %343 = %341.3;
    (%342, %343, meta[relay.Constant][27] /* ty=Tensor[(384), int16] */)
  };
  %344(%var_3216, %var_3217) /* ty=(Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */
}

def @func_3495(%var_3490: Tensor[(1, 6, 16), int64]) -> Tensor[(1, 6, 16), bool] {
  %345 = cast(-1 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %346 = cast(%var_3490, dtype="bool") /* ty=Tensor[(1, 6, 16), bool] */;
  less_equal(%345, %346) /* ty=Tensor[(1, 6, 16), bool] */
}

def @func_8166(%var_8154: Tensor[(16, 3, 10), int16]) -> (Tensor[(16, 3, 10), int16], Tensor[(208), uint64], Tensor[(3, 1), int8], Tensor[(104), uint64]) {
  %347 = cast(meta[relay.Constant][28] /* ty=Tensor[(16, 3, 10), int16] */, dtype="int16") /* ty=Tensor[(16, 3, 10), int16] */;
  %348 = shape_of(%var_8154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %349 = cast(%var_8154, dtype="int16") /* ty=Tensor[(16, 3, 10), int16] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %351 = cast(meta[relay.Constant][29] /* ty=Tensor[(3, 1), int8] */, dtype="int8") /* ty=Tensor[(3, 1), int8] */;
  %352 = cast(meta[relay.Constant][30] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %353 = reshape(%351, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), int8] */;
  %354 = reshape(%352, newshape=[104, 1]) /* ty=Tensor[(104, 1), uint64] */;
  %355 = @func_6847(%353, %354) /* ty=(Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) */;
  %356 = maximum(%349, %350) /* ty=Tensor[(16, 3, 10), int16] */;
  %357 = %355.3;
  (%356, %357, meta[relay.Constant][29] /* ty=Tensor[(3, 1), int8] */, meta[relay.Constant][30] /* ty=Tensor[(104), uint64] */)
}

def @func_9699() -> (Tensor[(2, 10, 12), float32],) {
  %360 = fn () -> (Tensor[(2, 10, 12), float32],) {
    %358 = @func_9439() /* ty=(Tensor[(2, 10, 12), float32],) */;
    %359 = %358.0;
    (%359,)
  };
  %360() /* ty=(Tensor[(2, 10, 12), float32],) */
}

def @func_9780(%var_9778: Tensor[(10, 70), int64]) -> (Tensor[(11, 11, 10), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(144, 4), uint32], Tensor[(486), uint32], Tensor[(128), float64], Tensor[(2, 24), float64], Tensor[(10, 70), int64]) {
  @func_9777(%var_9778) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(144, 4), uint32], Tensor[(486), uint32], Tensor[(128), float64], Tensor[(2, 24), float64], Tensor[(10, 70), int64]) */
}

def @func_11617(%var_11596: Tensor[(72), float32], %var_11597: Tensor[(128), float64]) -> (Tensor[(11, 11, 10), float32], Tensor[(13, 14, 13), float64], Tensor[(128), float64], Tensor[(72), float32], Tensor[(128), float64], Tensor[(1, 576), int64]) {
  %361 = cast(%var_11596, dtype="float32") /* ty=Tensor[(72), float32] */;
  %362 = cast(%var_11596, dtype="float32") /* ty=Tensor[(72), float32] */;
  %363 = cast(%var_11596, dtype="float32") /* ty=Tensor[(72), float32] */;
  %364 = cast(%var_11597, dtype="float64") /* ty=Tensor[(128), float64] */;
  %365 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 576), int64] */, dtype="int64") /* ty=Tensor[(1, 576), int64] */;
  %366 = reshape(%361, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %367 = reshape(%362, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %368 = reshape(%363, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %369 = reshape(%364, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %370 = reshape(%365, newshape=[576]) /* ty=Tensor[(576), int64] */;
  %371 = @func_5580(%366, %367, %368, %369, %370) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(4, 6, 3), bool], Tensor[(9, 16, 12), uint64], Tensor[(1728), uint64], Tensor[(128), float64], Tensor[(220), uint8], Tensor[(128), float64], Tensor[(576), int64], Tensor[(384), int16]) */;
  %372 = @func_10830() /* ty=Tensor[(11, 11, 10), float32] */;
  %373 = @func_10147() /* ty=Tensor[(13, 14, 13), float64] */;
  %374 = %371.4;
  (%372, %373, %374, %var_11596, %var_11597, meta[relay.Constant][31] /* ty=Tensor[(1, 576), int64] */)
}

def @func_7802(%var_7783: Tensor[(6, 2, 3), float64], %var_7795: Tensor[(1, 390), bool]) -> (Tensor[(6, 2, 3), float64], Tensor[(384), int16], Tensor[(52, 2), uint64], Tensor[(104, 2), uint64], Tensor[(5, 6, 13), bool], Tensor[(1, 390), bool], Tensor[(384), int16], Tensor[(128), float64], Tensor[(576), int64]) {
  %375 = cast(%var_7783, dtype="float64") /* ty=Tensor[(6, 2, 3), float64] */;
  %376 = cast(meta[relay.Constant][32] /* ty=Tensor[(52, 2), uint64] */, dtype="uint64") /* ty=Tensor[(52, 2), uint64] */;
  %377 = cast(meta[relay.Constant][33] /* ty=Tensor[(104, 2), uint64] */, dtype="uint64") /* ty=Tensor[(104, 2), uint64] */;
  %378 = reshape(%376, newshape=[8, 1, 13]) /* ty=Tensor[(8, 1, 13), uint64] */;
  %379 = reshape(%377, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), uint64] */;
  %380 = @func_3215(%378, %379) /* ty=(Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */;
  %381 = cast(%var_7795, dtype="bool") /* ty=Tensor[(1, 390), bool] */;
  %382 = cast(%var_7795, dtype="bool") /* ty=Tensor[(1, 390), bool] */;
  %383 = reshape(%381, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %384 = reshape(%382, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %385 = cast(meta[relay.Constant][34] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %386 = cast(meta[relay.Constant][35] /* ty=Tensor[(576), int64] */, dtype="int64") /* ty=Tensor[(576), int64] */;
  %387 = %380.2;
  %388 = cast(%387, dtype="int16") /* ty=Tensor[(384), int16] */;
  %389 = reshape(%385, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float64] */;
  %390 = reshape(%386, newshape=[2, 288]) /* ty=Tensor[(2, 288), int64] */;
  %391 = reshape(%388, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %392 = @func_1141(%389, %390, %391) /* ty=(Tensor[(16, 2, 4), float64], Tensor[(8, 6, 12), float64], Tensor[(2, 288), int64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %393 = cos(%375) /* ty=Tensor[(6, 2, 3), float64] */;
  %394 = @func_1332(%383, %384) /* ty=Tensor[(5, 6, 13), bool] */;
  %395 = %392.4;
  (%393, %387, meta[relay.Constant][32] /* ty=Tensor[(52, 2), uint64] */, meta[relay.Constant][33] /* ty=Tensor[(104, 2), uint64] */, %394, %var_7795, %395, meta[relay.Constant][34] /* ty=Tensor[(128), float64] */, meta[relay.Constant][35] /* ty=Tensor[(576), int64] */)
}

def @func_14338(%var_14336: Tensor[(48), float64], %var_14337: Tensor[(2, 64), float64]) -> (Tensor[(2, 10, 12), float32], Tensor[(48), float64], Tensor[(7, 42), float64], int64, Tensor[(48), float64], Tensor[(6, 1, 8), float64], Tensor[(550), float32], Tensor[(2, 792), int8], Tensor[(550), float32], Tensor[(2, 10, 12), float32], Tensor[(220), uint8], Tensor[(36, 2), float32], Tensor[(2, 64), float64], Tensor[(576), int64]) {
  %428 = fn (%var_14308: Tensor[(48), float64], %var_14332: Tensor[(2, 64), float64]) -> (Tensor[(2, 10, 12), float32], Tensor[(48), float64], Tensor[(7, 42), float64], int64, Tensor[(48), float64], Tensor[(6, 1, 8), float64], Tensor[(550), float32], Tensor[(2, 792), int8], Tensor[(550), float32], Tensor[(2, 10, 12), float32], Tensor[(220), uint8], Tensor[(36, 2), float32], Tensor[(2, 64), float64], Tensor[(576), int64]) {
    %396 = @func_14256() /* ty=(Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32]) */;
    %397 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 42), float64] */, dtype="float64") /* ty=Tensor[(7, 42), float64] */;
    %398 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %399 = cast(%var_14308, dtype="float64") /* ty=Tensor[(48), float64] */;
    %400 = reshape(%397, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float64] */;
    %401 = reshape(%398, newshape=[]) /* ty=int64 */;
    %402 = reshape(%399, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %403 = @func_5498(%400, %401, %402) /* ty=(Tensor[(7, 3, 14), float64], Tensor[(48), float64], int64, Tensor[(1568), int64], Tensor[(48), float64]) */;
    %404 = cast(%var_14308, dtype="float64") /* ty=Tensor[(48), float64] */;
    %405 = reshape(%404, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float64] */;
    %406 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 792), int8] */, dtype="int8") /* ty=Tensor[(2, 792), int8] */;
    %407 = cast(meta[relay.Constant][38] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
    %408 = reshape(%406, newshape=[4, 396]) /* ty=Tensor[(4, 396), int8] */;
    %409 = reshape(%407, newshape=[550]) /* ty=Tensor[(550), float32] */;
    %410 = @func_13922(%408, %409) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(1, 10, 5), float64], Tensor[(5, 10), float64], Tensor[(390, 1), bool], Tensor[(4, 396), int8], Tensor[(110), float32], Tensor[(550), float32], Tensor[(784), float64]) */;
    %411 = cast(meta[relay.Constant][39] /* ty=Tensor[(36, 2), float32] */, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
    %412 = cast(meta[relay.Constant][39] /* ty=Tensor[(36, 2), float32] */, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
    %413 = cast(meta[relay.Constant][39] /* ty=Tensor[(36, 2), float32] */, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
    %414 = cast(%var_14332, dtype="float64") /* ty=Tensor[(2, 64), float64] */;
    %415 = cast(meta[relay.Constant][40] /* ty=Tensor[(576), int64] */, dtype="int64") /* ty=Tensor[(576), int64] */;
    %416 = reshape(%411, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
    %417 = reshape(%412, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
    %418 = reshape(%413, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
    %419 = reshape(%414, newshape=[128]) /* ty=Tensor[(128), float64] */;
    %420 = reshape(%415, newshape=[576]) /* ty=Tensor[(576), int64] */;
    %421 = @func_5580(%416, %417, %418, %419, %420) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(4, 6, 3), bool], Tensor[(9, 16, 12), uint64], Tensor[(1728), uint64], Tensor[(128), float64], Tensor[(220), uint8], Tensor[(128), float64], Tensor[(576), int64], Tensor[(384), int16]) */;
    %422 = %396.1;
    %423 = %403.1;
    %424 = @func_1939(%405) /* ty=Tensor[(6, 1, 8), float64] */;
    %425 = %410.6;
    %426 = @func_11694() /* ty=Tensor[(2, 10, 12), float32] */;
    %427 = %421.5;
    (%422, %423, meta[relay.Constant][36] /* ty=Tensor[(7, 42), float64] */, 8 /* ty=int64 */, %var_14308, %424, %425, meta[relay.Constant][37] /* ty=Tensor[(2, 792), int8] */, meta[relay.Constant][38] /* ty=Tensor[(550), float32] */, %426, %427, meta[relay.Constant][39] /* ty=Tensor[(36, 2), float32] */, %var_14332, meta[relay.Constant][40] /* ty=Tensor[(576), int64] */)
  };
  %428(%var_14336, %var_14337) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(48), float64], Tensor[(7, 42), float64], int64, Tensor[(48), float64], Tensor[(6, 1, 8), float64], Tensor[(550), float32], Tensor[(2, 792), int8], Tensor[(550), float32], Tensor[(2, 10, 12), float32], Tensor[(220), uint8], Tensor[(36, 2), float32], Tensor[(2, 64), float64], Tensor[(576), int64]) */
}

def @func_13580() -> (Tensor[(2, 10, 12), float32],) {
  @func_13578() /* ty=(Tensor[(2, 10, 12), float32],) */
}

def @func_9411() -> Tensor[(11, 11, 10), float32] {
  %429 = @func_9268() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %429.0
}

def @func_9823() -> (Tensor[(11, 11, 10), float32],) {
  @func_9821() /* ty=(Tensor[(11, 11, 10), float32],) */
}

def @func_13037(%var_13035: Tensor[(2, 10, 12), float32]) -> (Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) {
  @func_13034(%var_13035) /* ty=(Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) */
}

def @func_14077() -> (Tensor[(11, 11, 10), float32],) {
  @func_14075() /* ty=(Tensor[(11, 11, 10), float32],) */
}

def @func_10354() -> Tensor[(2, 10, 12), float32] {
  @func_10012() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_12024() -> (Tensor[(13, 14, 13), float64],) {
  @func_12022() /* ty=(Tensor[(13, 14, 13), float64],) */
}

def @func_9368(%var_9364: Tensor[(1584, 1), int8], %var_9365: Tensor[(110), float32], %var_9366: Tensor[(550), float32], %var_9367: Tensor[(784), float64]) -> (Tensor[(2, 10, 12), float32], Tensor[(390, 1), bool], Tensor[(1584, 104), float64], Tensor[(1584, ?), float64], Tensor[(7, 14, 8), float64], Tensor[(110), float32], Tensor[(550), float32], Tensor[(784), float64]) {
  @func_9362(%var_9364, %var_9365, %var_9366, %var_9367) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(390, 1), bool], Tensor[(1584, 104), float64], Tensor[(1584, ?), float64], Tensor[(7, 14, 8), float64], Tensor[(110), float32], Tensor[(550), float32], Tensor[(784), float64]) */
}

def @func_14663() -> Tensor[(11, 11, 10), float32] {
  @func_14661() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_9248() -> Tensor[(2, 10, 12), float32] {
  %431 = fn () -> Tensor[(2, 10, 12), float32] {
    %430 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
    asinh(%430) /* ty=Tensor[(2, 10, 12), float32] */
  };
  %431() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_1145(%var_1142: Tensor[(16, 2, 4), float64], %var_1143: Tensor[(2, 288), int64], %var_1144: Tensor[(384), int16]) -> (Tensor[(16, 2, 4), float64], Tensor[(8, 6, 12), float64], Tensor[(2, 288), int64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) {
  %454 = fn (%var_1102: Tensor[(16, 2, 4), float64], %var_1107: Tensor[(2, 288), int64], %var_1133: Tensor[(384), int16]) -> (Tensor[(16, 2, 4), float64], Tensor[(8, 6, 12), float64], Tensor[(2, 288), int64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) {
    %432 = cast(%var_1102, dtype="float64") /* ty=Tensor[(16, 2, 4), float64] */;
    %433 = cast(%var_1107, dtype="int64") /* ty=Tensor[(2, 288), int64] */;
    %434 = reshape(%433, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int64] */;
    %435 = @func_254(%434) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) */;
    %436 = cast(%var_1133, dtype="int16") /* ty=Tensor[(384), int16] */;
    %437 = cast(%var_1133, dtype="int16") /* ty=Tensor[(384), int16] */;
    %438 = reshape(%436, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
    %439 = reshape(%437, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
    %440 = @func_683(%438, %439) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
    %441 = cast(%var_1133, dtype="int16") /* ty=Tensor[(384), int16] */;
    %442 = cast(%var_1133, dtype="int16") /* ty=Tensor[(384), int16] */;
    %443 = reshape(%441, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
    %444 = reshape(%442, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
    %445 = @func_683(%443, %444) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
    %446 = %445.1;
    %447 = cast(%446, dtype="int64") /* ty=Tensor[(8, 6, 12), int64] */;
    %448 = reshape(%447, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int64] */;
    %449 = @func_254(%448) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) */;
    %450 = asin(%432) /* ty=Tensor[(16, 2, 4), float64] */;
    %451 = %435.0;
    %452 = %440.2;
    %453 = %449.0;
    (%450, %451, %var_1107, %452, %var_1133, %446, %453)
  };
  %454(%var_1142, %var_1143, %var_1144) /* ty=(Tensor[(16, 2, 4), float64], Tensor[(8, 6, 12), float64], Tensor[(2, 288), int64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */
}

def @func_4880(%var_4877: Tensor[(4, 8, 5), int64], %var_4878: Tensor[(784), float64], %var_4879: Tensor[(1, 384), int16]) -> (Tensor[(4, 8, 5), bool], Tensor[(4, 8, 5), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(4, 12, 8), int16], Tensor[(1, 384), int16]) {
  @func_4875(%var_4877, %var_4878, %var_4879) /* ty=(Tensor[(4, 8, 5), bool], Tensor[(4, 8, 5), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(4, 12, 8), int16], Tensor[(1, 384), int16]) */
}

def @func_11782() -> (Tensor[(2, 10, 12), float32],) {
  @func_11780() /* ty=(Tensor[(2, 10, 12), float32],) */
}

def @func_6704(%var_6684: Tensor[(6, 15, 10), float32], %var_6699: Tensor[(208), uint64]) -> (Tensor[(6, 15, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(104), uint64], Tensor[(208), uint64]) {
  %455 = cast(%var_6684, dtype="float32") /* ty=Tensor[(6, 15, 10), float32] */;
  %456 = cast(meta[relay.Constant][42] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %457 = cast(%var_6699, dtype="uint64") /* ty=Tensor[(208), uint64] */;
  %458 = reshape(%456, newshape=[8, 1, 13]) /* ty=Tensor[(8, 1, 13), uint64] */;
  %459 = reshape(%457, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), uint64] */;
  %460 = @func_3215(%458, %459) /* ty=(Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */;
  %461 = exp(%455) /* ty=Tensor[(6, 15, 10), float32] */;
  %462 = %460.1;
  (%461, %462, meta[relay.Constant][42] /* ty=Tensor[(104), uint64] */, %var_6699)
}

def @func_4875(%var_4821: Tensor[(4, 8, 5), int64], %var_4840: Tensor[(784), float64], %var_4852: Tensor[(1, 384), int16]) -> (Tensor[(4, 8, 5), bool], Tensor[(4, 8, 5), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(4, 12, 8), int16], Tensor[(1, 384), int16]) {
  %463 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 8, 5), int64] */, dtype="bool") /* ty=Tensor[(4, 8, 5), bool] */;
  %464 = shape_of(%var_4821, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(%var_4821, dtype="bool") /* ty=Tensor[(4, 8, 5), bool] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %467 = cast(%var_4821, dtype="float32") /* ty=Tensor[(4, 8, 5), float32] */;
  %468 = rsqrt(%467) /* ty=Tensor[(4, 8, 5), float32] */;
  %469 = cast(%468, dtype="float32") /* ty=Tensor[(4, 8, 5), float32] */;
  %470 = cast(%var_4840, dtype="float64") /* ty=Tensor[(784), float64] */;
  %471 = reshape(%470, newshape=[7, 14, 8]) /* ty=Tensor[(7, 14, 8), float64] */;
  %472 = cast(%var_4852, dtype="int16") /* ty=Tensor[(1, 384), int16] */;
  %473 = cast(%var_4852, dtype="int16") /* ty=Tensor[(1, 384), int16] */;
  %474 = reshape(%472, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %475 = reshape(%473, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %476 = @func_683(%474, %475) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %477 = equal(%465, %466) /* ty=Tensor[(4, 8, 5), bool] */;
  %478 = atan(%469) /* ty=Tensor[(4, 8, 5), float32] */;
  %479 = @func_2801(%471) /* ty=Tensor[(7, 14, 8), float64] */;
  %480 = %476.0;
  (%477, %478, %479, %var_4840, %480, %var_4852)
}

def @func_11336() -> Tensor[(11, 11, 10), float32] {
  %481 = @func_9971() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %481.0
}

def @func_7104(%var_7061: Tensor[(6, 4, 15), float64], %var_7065: Tensor[(576), int64], %var_7083: Tensor[(48), float64]) -> (Tensor[(8, 6, 12), float64], Tensor[(576), int64], Tensor[(6, 4, 15), float32], Tensor[(6, 4, 15), float64], Tensor[(6, 1, 8), float64], Tensor[(1, 60), float32], Tensor[(48), float64], Tensor[(6, 4, 15), float64], Tensor[(8, 6, 12), uint16], Tensor[(104), uint64], Tensor[(208), uint64]) {
  %482 = cast(%var_7065, dtype="int64") /* ty=Tensor[(576), int64] */;
  %483 = reshape(%482, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int64] */;
  %484 = @func_254(%483) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) */;
  %485 = cast(%var_7061, dtype="float64") /* ty=Tensor[(6, 4, 15), float64] */;
  %486 = sigmoid(%485) /* ty=Tensor[(6, 4, 15), float64] */;
  %487 = cast(%486, dtype="float32") /* ty=Tensor[(6, 4, 15), float32] */;
  %488 = cast(%486, dtype="float64") /* ty=Tensor[(6, 4, 15), float64] */;
  %489 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 60), float32] */, dtype="float32") /* ty=Tensor[(1, 60), float32] */;
  %490 = cast(%var_7083, dtype="float64") /* ty=Tensor[(48), float64] */;
  %491 = reshape(%489, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float32] */;
  %492 = reshape(%490, newshape=[4, 12]) /* ty=Tensor[(4, 12), float64] */;
  %493 = @func_3458(%491, %492) /* ty=(Tensor[(12, 5, ?), int64], Tensor[(6, 1, 8), float64], Tensor[(1568), int64], Tensor[(4, 12), float64]) */;
  %494 = cast(%486, dtype="float64") /* ty=Tensor[(6, 4, 15), float64] */;
  %495 = cast(meta[relay.Constant][45] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %496 = cast(meta[relay.Constant][46] /* ty=Tensor[(208), uint64] */, dtype="uint64") /* ty=Tensor[(208), uint64] */;
  %497 = reshape(%495, newshape=[8, 1, 13]) /* ty=Tensor[(8, 1, 13), uint64] */;
  %498 = reshape(%496, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), uint64] */;
  %499 = @func_3215(%497, %498) /* ty=(Tensor[(8, 2, 13), uint64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */;
  %500 = %484.0;
  %501 = log10(%487) /* ty=Tensor[(6, 4, 15), float32] */;
  %502 = rsqrt(%488) /* ty=Tensor[(6, 4, 15), float64] */;
  %503 = %493.1;
  %504 = log(%494) /* ty=Tensor[(6, 4, 15), float64] */;
  %505 = %499.1;
  (%500, %var_7065, %501, %502, %503, meta[relay.Constant][44] /* ty=Tensor[(1, 60), float32] */, %var_7083, %504, %505, meta[relay.Constant][45] /* ty=Tensor[(104), uint64] */, meta[relay.Constant][46] /* ty=Tensor[(208), uint64] */)
}

def @func_12775() -> (Tensor[(11, 11, 10), float32],) {
  %506 = @func_10830() /* ty=Tensor[(11, 11, 10), float32] */;
  (%506,)
}

def @func_9580() -> Tensor[(11, 11, 10), float32] {
  @func_9578() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_14619() -> (Tensor[(2, 10, 12), float32],) {
  %507 = @func_11694() /* ty=Tensor[(2, 10, 12), float32] */;
  (%507,)
}

def @func_14871() -> Tensor[(11, 11, 10), float32] {
  @func_13856() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_12924(%var_12922: Tensor[(11, 11, 10), float32]) -> Tensor[(11, 11, 10), uint64] {
  @func_12921(%var_12922) /* ty=Tensor[(11, 11, 10), uint64] */
}

def @func_10470() -> (Tensor[(4, 12, 8), int16], Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(504), int8]) {
  %514 = fn () -> (Tensor[(4, 12, 8), int16], Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(504), int8]) {
    %508 = @func_10402() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(8, 6, 12), uint16], Tensor[(384, 1), int16], Tensor[(144, 4), uint32], Tensor[(700), int64], Tensor[(4, 12, 8), int16]) */;
    %509 = cast(meta[relay.Constant][47] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
    %510 = reshape(%509, newshape=[4, 14, 9]) /* ty=Tensor[(4, 14, 9), int8] */;
    %511 = %508.5;
    %512 = @func_9389() /* ty=Tensor[(2, 10, 12), float32] */;
    %513 = @func_3112(%510) /* ty=Tensor[(4, 14, 9), int8] */;
    (%511, %512, %513, meta[relay.Constant][47] /* ty=Tensor[(504), int8] */)
  };
  %514() /* ty=(Tensor[(4, 12, 8), int16], Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(504), int8]) */
}

def @func_12623(%var_12621: bool, %var_12622: Tensor[(144, 4), float32]) -> (Tensor[(11, 11, 10), float32], Tensor[(7, 3, 16), bool], Tensor[(144, 4), bool], Tensor[(144, 4), float64]) {
  %539 = fn (%var_12579: bool, %var_12610: Tensor[(144, 4), float32]) -> (Tensor[(11, 11, 10), float32], Tensor[(7, 3, 16), bool], Tensor[(144, 4), bool], Tensor[(144, 4), float64]) {
    %515 = @func_10592() /* ty=(Tensor[(11, 11, 10), float32],) */;
    %516 = cast(%var_12579, dtype="bool") /* ty=bool */;
    %517 = reshape(%516, newshape=[]) /* ty=bool */;
    %518 = @func_10402() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(8, 6, 12), uint16], Tensor[(384, 1), int16], Tensor[(144, 4), uint32], Tensor[(700), int64], Tensor[(4, 12, 8), int16]) */;
    %519 = %518.3;
    %520 = cast(%519, dtype="bool") /* ty=Tensor[(144, 4), bool] */;
    %521 = cast(%var_12579, dtype="bool") /* ty=bool */;
    %522 = greater(%520, %521) /* ty=Tensor[(144, 4), bool] */;
    %523 = cast(meta[relay.Constant][48] /* ty=Tensor[(144, 4), bool] */, dtype="bool") /* ty=Tensor[(144, 4), bool] */;
    %524 = shape_of(%522, dtype="int32") /* ty=Tensor[(2), int32] */;
    %525 = cast(%522, dtype="bool") /* ty=Tensor[(144, 4), bool] */;
    %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %527 = cast(%522, dtype="float32") /* ty=Tensor[(144, 4), float32] */;
    %528 = sinh(%527) /* ty=Tensor[(144, 4), float32] */;
    %529 = cast(%var_12610, dtype="uint32") /* ty=Tensor[(144, 4), uint32] */;
    %530 = shape_of(%528, dtype="int32") /* ty=Tensor[(2), int32] */;
    %531 = cast(%528, dtype="uint32") /* ty=Tensor[(144, 4), uint32] */;
    %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %533 = bitwise_and(%531, %532) /* ty=Tensor[(144, 4), uint32] */;
    %534 = cast(%533, dtype="float64") /* ty=Tensor[(144, 4), float64] */;
    %535 = %515.0;
    %536 = @func_11079(%517) /* ty=Tensor[(7, 3, 16), bool] */;
    %537 = not_equal(%525, %526) /* ty=Tensor[(144, 4), bool] */;
    %538 = log2(%534) /* ty=Tensor[(144, 4), float64] */;
    (%535, %536, %537, %538)
  };
  %539(%var_12621, %var_12622) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(7, 3, 16), bool], Tensor[(144, 4), bool], Tensor[(144, 4), float64]) */
}

def @func_4654(%var_4651: Tensor[(6, 9, 9), uint32], %var_4652: Tensor[(6, 9, 9), uint32], %var_4653: Tensor[(128), float64]) -> (Tensor[(6, 9, 9), bool], Tensor[(576), int64], Tensor[(128), float64], Tensor[(6, 96), int64], Tensor[(6, 64), int16], Tensor[(9, 16, 12), int16], Tensor[(1728), uint64], Tensor[(1, 220), uint8], Tensor[(144, 4), uint32]) {
  %574 = fn (%var_4599: Tensor[(6, 9, 9), uint32], %var_4600: Tensor[(6, 9, 9), uint32], %var_4607: Tensor[(128), float64]) -> (Tensor[(6, 9, 9), bool], Tensor[(576), int64], Tensor[(128), float64], Tensor[(6, 96), int64], Tensor[(6, 64), int16], Tensor[(9, 16, 12), int16], Tensor[(1728), uint64], Tensor[(1, 220), uint8], Tensor[(144, 4), uint32]) {
    %540 = cast(%var_4600, dtype="bool") /* ty=Tensor[(6, 9, 9), bool] */;
    %541 = shape_of(%var_4599, dtype="int32") /* ty=Tensor[(3), int32] */;
    %542 = cast(%var_4599, dtype="bool") /* ty=Tensor[(6, 9, 9), bool] */;
    %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %544 = cast(%var_4607, dtype="float64") /* ty=Tensor[(128), float64] */;
    %545 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 96), int64] */, dtype="int64") /* ty=Tensor[(6, 96), int64] */;
    %546 = cast(meta[relay.Constant][50] /* ty=Tensor[(6, 64), int16] */, dtype="int16") /* ty=Tensor[(6, 64), int16] */;
    %547 = reshape(%544, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float64] */;
    %548 = reshape(%545, newshape=[2, 288]) /* ty=Tensor[(2, 288), int64] */;
    %549 = reshape(%546, newshape=[384]) /* ty=Tensor[(384), int16] */;
    %550 = @func_1141(%547, %548, %549) /* ty=(Tensor[(16, 2, 4), float64], Tensor[(8, 6, 12), float64], Tensor[(2, 288), int64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
    %551 = cast(meta[relay.Constant][51] /* ty=Tensor[(1728), uint64] */, dtype="uint64") /* ty=Tensor[(1728), uint64] */;
    %552 = reshape(%551, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), uint64] */;
    %553 = @func_2312(%552) /* ty=(Tensor[(9, 16, 12), uint64], Tensor[(9, 16, 12), int16], Tensor[(9, 16, 12), float32]) */;
    %554 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 220), uint8] */, dtype="uint8") /* ty=Tensor[(1, 220), uint8] */;
    %555 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 220), uint8] */, dtype="uint8") /* ty=Tensor[(1, 220), uint8] */;
    %556 = cast(%var_4607, dtype="float64") /* ty=Tensor[(128), float64] */;
    %557 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 96), int64] */, dtype="int64") /* ty=Tensor[(6, 96), int64] */;
    %558 = cast(meta[relay.Constant][50] /* ty=Tensor[(6, 64), int16] */, dtype="int16") /* ty=Tensor[(6, 64), int16] */;
    %559 = reshape(%554, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), uint8] */;
    %560 = reshape(%555, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), uint8] */;
    %561 = reshape(%556, newshape=[128]) /* ty=Tensor[(128), float64] */;
    %562 = reshape(%557, newshape=[144, 4]) /* ty=Tensor[(144, 4), int64] */;
    %563 = reshape(%558, newshape=[384]) /* ty=Tensor[(384), int16] */;
    %564 = @func_1282(%559, %560, %561, %562, %563) /* ty=(Tensor[(11, 5, 4), uint8], Tensor[(384), int16], Tensor[(128), float64], Tensor[(144, 4), int64], Tensor[(384), int16]) */;
    %565 = %564.3;
    %566 = cast(meta[relay.Constant][53] /* ty=Tensor[(144, 4), int64] */, dtype="uint32") /* ty=Tensor[(144, 4), uint32] */;
    %567 = shape_of(%565, dtype="int32") /* ty=Tensor[(2), int32] */;
    %568 = cast(%565, dtype="uint32") /* ty=Tensor[(144, 4), uint32] */;
    %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %570 = greater_equal(%542, %543) /* ty=Tensor[(6, 9, 9), bool] */;
    %571 = %550.3;
    %572 = %553.1;
    %573 = logical_xor(%568, %569) /* ty=Tensor[(144, 4), uint32] */;
    (%570, %571, %var_4607, meta[relay.Constant][49] /* ty=Tensor[(6, 96), int64] */, meta[relay.Constant][50] /* ty=Tensor[(6, 64), int16] */, %572, meta[relay.Constant][51] /* ty=Tensor[(1728), uint64] */, meta[relay.Constant][52] /* ty=Tensor[(1, 220), uint8] */, %573)
  };
  %574(%var_4651, %var_4652, %var_4653) /* ty=(Tensor[(6, 9, 9), bool], Tensor[(576), int64], Tensor[(128), float64], Tensor[(6, 96), int64], Tensor[(6, 64), int16], Tensor[(9, 16, 12), int16], Tensor[(1728), uint64], Tensor[(1, 220), uint8], Tensor[(144, 4), uint32]) */
}

def @func_9413() -> Tensor[(11, 11, 10), float32] {
  @func_9411() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_10402() -> (Tensor[(2, 10, 12), float32], Tensor[(8, 6, 12), uint16], Tensor[(384, 1), int16], Tensor[(144, 4), uint32], Tensor[(700), int64], Tensor[(4, 12, 8), int16]) {
  %575 = @func_9688() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(2, 10, 12), float32]) */;
  %576 = cast(meta[relay.Constant][54] /* ty=Tensor[(384, 1), int16] */, dtype="int16") /* ty=Tensor[(384, 1), int16] */;
  %577 = cast(meta[relay.Constant][54] /* ty=Tensor[(384, 1), int16] */, dtype="int16") /* ty=Tensor[(384, 1), int16] */;
  %578 = reshape(%576, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %579 = reshape(%577, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %580 = @func_683(%578, %579) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %581 = cast(meta[relay.Constant][55] /* ty=Tensor[(700), int64] */, dtype="int64") /* ty=Tensor[(700), int64] */;
  %582 = reshape(%581, newshape=[10, 70]) /* ty=Tensor[(10, 70), int64] */;
  %583 = @func_9777(%582) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(144, 4), uint32], Tensor[(486), uint32], Tensor[(128), float64], Tensor[(2, 24), float64], Tensor[(10, 70), int64]) */;
  %584 = cast(meta[relay.Constant][54] /* ty=Tensor[(384, 1), int16] */, dtype="int16") /* ty=Tensor[(384, 1), int16] */;
  %585 = cast(meta[relay.Constant][54] /* ty=Tensor[(384, 1), int16] */, dtype="int16") /* ty=Tensor[(384, 1), int16] */;
  %586 = reshape(%584, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %587 = reshape(%585, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
  %588 = @func_683(%586, %587) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %589 = %575.0;
  %590 = %580.3;
  %591 = %583.3;
  %592 = %588.0;
  (%589, %590, meta[relay.Constant][54] /* ty=Tensor[(384, 1), int16] */, %591, meta[relay.Constant][55] /* ty=Tensor[(700), int64] */, %592)
}

def @func_13990(%var_13989: Tensor[(576), int64]) -> (Tensor[(11, 11, 10), float32], Tensor[(8, 6, 12), float64], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) {
  %603 = fn (%var_13978: Tensor[(576), int64]) -> (Tensor[(11, 11, 10), float32], Tensor[(8, 6, 12), float64], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) {
    %593 = @func_12775() /* ty=(Tensor[(11, 11, 10), float32],) */;
    %594 = cast(%var_13978, dtype="int64") /* ty=Tensor[(576), int64] */;
    %595 = reshape(%594, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), int64] */;
    %596 = @func_254(%595) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) */;
    %597 = cast(meta[relay.Constant][56] /* ty=Tensor[(384), int16] */, dtype="int16") /* ty=Tensor[(384), int16] */;
    %598 = reshape(%597, newshape=[384]) /* ty=Tensor[(384), int16] */;
    %599 = @func_9643(%598) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(384), int16], Tensor[(4, 12), float64], Tensor[(60), float32], Tensor[(48), float64]) */;
    %600 = %593.0;
    %601 = %596.0;
    %602 = %599.1;
    (%600, %601, %var_13978, %602, meta[relay.Constant][56] /* ty=Tensor[(384), int16] */)
  };
  %603(%var_13989) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(8, 6, 12), float64], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(384), int16]) */
}

def @func_14155() -> (Tensor[(11, 11, 10), float32],) {
  %604 = @func_9411() /* ty=Tensor[(11, 11, 10), float32] */;
  (%604,)
}

def @func_14478(%var_14476: Tensor[(240), float32]) -> (Tensor[(11, 11, 10), float32], Tensor[(13, 14, 13), float64], Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(240), float32]) {
  @func_14475(%var_14476) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(13, 14, 13), float64], Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(240), float32]) */
}

def @func_11053(%var_11045: Tensor[(8, 11, 1), uint64], %var_11046: Tensor[(8, 11, 8), uint64], %var_11047: Tensor[(160), int64], %var_11048: Tensor[(700), int64], %var_11049: Tensor[(8, 11, 8), uint64], %var_11050: Tensor[(96), int64], %var_11051: Tensor[(390, 2), float32], %var_11052: Tensor[(128), float64]) -> (Tensor[(8, 11, 8), bool], Tensor[(4, 8, 5), float32], Tensor[(160), int64], Tensor[(2, 392), float64], Tensor[(700), int64], Tensor[(8, 11, 8), uint16], Tensor[(6, 384, 8), bool], Tensor[(1, 6, 16), bool], Tensor[(96), int64], Tensor[(390, 2), float32], Tensor[(128), float64], Tensor[(8, 11, 605), uint16], Tensor[(2, 24), float64], Tensor[(104), uint64], Tensor[(450, 2), float32], Tensor[(208), uint64], Tensor[(128), float64], Tensor[(486), uint32], Tensor[(8, 11, 8), float32]) {
  %674 = fn (%var_10946: Tensor[(8, 11, 1), uint64], %var_10961: Tensor[(8, 11, 8), uint64], %var_10977: Tensor[(160), int64], %var_10987: Tensor[(700), int64], %var_10989: Tensor[(8, 11, 8), uint64], %var_11004: Tensor[(96), int64], %var_11011: Tensor[(390, 2), float32], %var_11012: Tensor[(128), float64]) -> (Tensor[(8, 11, 8), bool], Tensor[(4, 8, 5), float32], Tensor[(160), int64], Tensor[(2, 392), float64], Tensor[(700), int64], Tensor[(8, 11, 8), uint16], Tensor[(6, 384, 8), bool], Tensor[(1, 6, 16), bool], Tensor[(96), int64], Tensor[(390, 2), float32], Tensor[(128), float64], Tensor[(8, 11, 605), uint16], Tensor[(2, 24), float64], Tensor[(104), uint64], Tensor[(450, 2), float32], Tensor[(208), uint64], Tensor[(128), float64], Tensor[(486), uint32], Tensor[(8, 11, 8), float32]) {
    %605 = cast(meta[relay.Constant][57] /* ty=Tensor[(8, 11, 1), uint64] */, dtype="uint64") /* ty=Tensor[(8, 11, 1), uint64] */;
    %606 = shape_of(%var_10946, dtype="int32") /* ty=Tensor[(3), int32] */;
    %607 = cast(%var_10946, dtype="uint64") /* ty=Tensor[(8, 11, 1), uint64] */;
    %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %609 = subtract(%607, %608) /* ty=Tensor[(8, 11, ?), uint64] */;
    %610 = cast(%609, dtype="bool") /* ty=Tensor[(8, 11, ?), bool] */;
    %611 = cast(%var_10961, dtype="bool") /* ty=Tensor[(8, 11, 8), bool] */;
    %612 = cast(%var_10977, dtype="int64") /* ty=Tensor[(160), int64] */;
    %613 = cast(meta[relay.Constant][58] /* ty=Tensor[(2, 392), float64] */, dtype="float64") /* ty=Tensor[(2, 392), float64] */;
    %614 = @func_10402() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(8, 6, 12), uint16], Tensor[(384, 1), int16], Tensor[(144, 4), uint32], Tensor[(700), int64], Tensor[(4, 12, 8), int16]) */;
    %615 = %614.2;
    %616 = cast(%615, dtype="int16") /* ty=Tensor[(384, 1), int16] */;
    %617 = reshape(%612, newshape=[4, 8, 5]) /* ty=Tensor[(4, 8, 5), int64] */;
    %618 = reshape(%613, newshape=[784]) /* ty=Tensor[(784), float64] */;
    %619 = reshape(%616, newshape=[1, 384]) /* ty=Tensor[(1, 384), int16] */;
    %620 = @func_4875(%617, %618, %619) /* ty=(Tensor[(4, 8, 5), bool], Tensor[(4, 8, 5), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(4, 12, 8), int16], Tensor[(1, 384), int16]) */;
    %621 = cast(%var_10989, dtype="uint16") /* ty=Tensor[(8, 11, 8), uint16] */;
    %622 = shape_of(%var_10961, dtype="int32") /* ty=Tensor[(3), int32] */;
    %623 = cast(%var_10961, dtype="uint16") /* ty=Tensor[(8, 11, 8), uint16] */;
    %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %625 = cast(%var_10987, dtype="int64") /* ty=Tensor[(700), int64] */;
    %626 = cast(%var_10987, dtype="int64") /* ty=Tensor[(700), int64] */;
    %627 = reshape(%625, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
    %628 = reshape(%626, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
    %629 = @func_7507(%627, %628) /* ty=(Tensor[(10, 5, 14), int64], Tensor[(6, 1, 8), float64], Tensor[(2, 24), float64]) */;
    %630 = %629.1;
    %631 = cast(%630, dtype="bool") /* ty=Tensor[(6, 1, 8), bool] */;
    %632 = cast(%615, dtype="bool") /* ty=Tensor[(384, 1), bool] */;
    %633 = cast(%var_11004, dtype="int64") /* ty=Tensor[(96), int64] */;
    %634 = reshape(%633, newshape=[1, 6, 16]) /* ty=Tensor[(1, 6, 16), int64] */;
    %635 = cast(%var_11011, dtype="float32") /* ty=Tensor[(390, 2), float32] */;
    %636 = cast(%var_11012, dtype="float64") /* ty=Tensor[(128), float64] */;
    %637 = cast(%615, dtype="int16") /* ty=Tensor[(384, 1), int16] */;
    %638 = reshape(%635, newshape=[13, 5, 12]) /* ty=Tensor[(13, 5, 12), float32] */;
    %639 = reshape(%636, newshape=[128]) /* ty=Tensor[(128), float64] */;
    %640 = reshape(%637, newshape=[384]) /* ty=Tensor[(384), int16] */;
    %641 = @func_9523(%638, %639, %640) /* ty=(Tensor[(13, 5, 12), float32], Tensor[(3, 24), float32], Tensor[(128), float64], Tensor[(576), int64], Tensor[(8, 6, 12), float64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(9, 16, 12), bool], Tensor[(11, 5, 11), float64], Tensor[(605), float64]) */;
    %642 = %641.9;
    %643 = cast(%609, dtype="uint16") /* ty=Tensor[(8, 11, ?), uint16] */;
    %644 = cast(%642, dtype="uint16") /* ty=Tensor[(605), uint16] */;
    %645 = cast(%var_10987, dtype="int64") /* ty=Tensor[(700), int64] */;
    %646 = cast(%var_10987, dtype="int64") /* ty=Tensor[(700), int64] */;
    %647 = reshape(%645, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
    %648 = reshape(%646, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
    %649 = @func_7507(%647, %648) /* ty=(Tensor[(10, 5, 14), int64], Tensor[(6, 1, 8), float64], Tensor[(2, 24), float64]) */;
    %650 = cast(meta[relay.Constant][59] /* ty=Tensor[(450, 2), float32] */, dtype="float32") /* ty=Tensor[(450, 2), float32] */;
    %651 = cast(meta[relay.Constant][60] /* ty=Tensor[(208), uint64] */, dtype="uint64") /* ty=Tensor[(208), uint64] */;
    %652 = reshape(%650, newshape=[6, 15, 10]) /* ty=Tensor[(6, 15, 10), float32] */;
    %653 = reshape(%651, newshape=[208]) /* ty=Tensor[(208), uint64] */;
    %654 = @func_6704(%652, %653) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(104), uint64], Tensor[(208), uint64]) */;
    %655 = cast(meta[relay.Constant][61] /* ty=Tensor[(486), uint32] */, dtype="uint32") /* ty=Tensor[(486), uint32] */;
    %656 = cast(meta[relay.Constant][61] /* ty=Tensor[(486), uint32] */, dtype="uint32") /* ty=Tensor[(486), uint32] */;
    %657 = cast(%var_11012, dtype="float64") /* ty=Tensor[(128), float64] */;
    %658 = reshape(%655, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), uint32] */;
    %659 = reshape(%656, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), uint32] */;
    %660 = reshape(%657, newshape=[128]) /* ty=Tensor[(128), float64] */;
    %661 = @func_4650(%658, %659, %660) /* ty=(Tensor[(6, 9, 9), bool], Tensor[(576), int64], Tensor[(128), float64], Tensor[(6, 96), int64], Tensor[(6, 64), int16], Tensor[(9, 16, 12), int16], Tensor[(1728), uint64], Tensor[(1, 220), uint8], Tensor[(144, 4), uint32]) */;
    %662 = cast(%var_10961, dtype="float32") /* ty=Tensor[(8, 11, 8), float32] */;
    %663 = cast(%var_10946, dtype="float32") /* ty=Tensor[(8, 11, 1), float32] */;
    %664 = logical_or(%610, %611) /* ty=Tensor[(8, 11, 8), bool] */;
    %665 = %620.1;
    %666 = maximum(%623, %624) /* ty=Tensor[(8, 11, 8), uint16] */;
    %667 = greater_equal(%631, %632) /* ty=Tensor[(6, 384, 8), bool] */;
    %668 = @func_3495(%634) /* ty=Tensor[(1, 6, 16), bool] */;
    %669 = minimum(%643, %644) /* ty=Tensor[(8, 11, 605), uint16] */;
    %670 = %649.2;
    %671 = %654.2;
    %672 = %661.2;
    %673 = power(%662, %663) /* ty=Tensor[(8, 11, 8), float32] */;
    (%664, %665, %var_10977, meta[relay.Constant][58] /* ty=Tensor[(2, 392), float64] */, %var_10987, %666, %667, %668, %var_11004, %var_11011, %var_11012, %669, %670, %671, meta[relay.Constant][59] /* ty=Tensor[(450, 2), float32] */, meta[relay.Constant][60] /* ty=Tensor[(208), uint64] */, %672, meta[relay.Constant][61] /* ty=Tensor[(486), uint32] */, %673)
  };
  %674(%var_11045, %var_11046, %var_11047, %var_11048, %var_11049, %var_11050, %var_11051, %var_11052) /* ty=(Tensor[(8, 11, 8), bool], Tensor[(4, 8, 5), float32], Tensor[(160), int64], Tensor[(2, 392), float64], Tensor[(700), int64], Tensor[(8, 11, 8), uint16], Tensor[(6, 384, 8), bool], Tensor[(1, 6, 16), bool], Tensor[(96), int64], Tensor[(390, 2), float32], Tensor[(128), float64], Tensor[(8, 11, 605), uint16], Tensor[(2, 24), float64], Tensor[(104), uint64], Tensor[(450, 2), float32], Tensor[(208), uint64], Tensor[(128), float64], Tensor[(486), uint32], Tensor[(8, 11, 8), float32]) */
}

def @func_11780() -> (Tensor[(2, 10, 12), float32],) {
  %675 = @func_9698() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %676 = %675.0;
  (%676,)
}

def @func_11338() -> Tensor[(11, 11, 10), float32] {
  @func_11336() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_12022() -> (Tensor[(13, 14, 13), float64],) {
  %677 = @func_10147() /* ty=Tensor[(13, 14, 13), float64] */;
  (%677,)
}

def @func_9578() -> Tensor[(11, 11, 10), float32] {
  %678 = @func_9268() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %678.0
}

def @func_256(%var_255: Tensor[(8, 6, 12), int64]) -> (Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) {
  %693 = fn (%var_196: Tensor[(8, 6, 12), int64]) -> (Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) {
    %679 = cast(%var_196, dtype="bool") /* ty=Tensor[(8, 6, 12), bool] */;
    %680 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(8, 6, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %681 = cast(meta[relay.Constant][62] /* ty=Tensor[(8, 6, 12), int64] */, dtype="bool") /* ty=Tensor[(8, 6, 12), bool] */;
    %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %683 = greater(%681, %682) /* ty=Tensor[(8, 6, 12), bool] */;
    %684 = cast(%683, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
    %685 = cast(%var_196, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
    %686 = acos(%685) /* ty=Tensor[(8, 6, 12), float64] */;
    %687 = cast(meta[relay.Constant][63] /* ty=Tensor[(8, 6, 12), float64] */, dtype="uint16") /* ty=Tensor[(8, 6, 12), uint16] */;
    %688 = shape_of(%686, dtype="int32") /* ty=Tensor[(3), int32] */;
    %689 = cast(%686, dtype="uint16") /* ty=Tensor[(8, 6, 12), uint16] */;
    %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %691 = acosh(%684) /* ty=Tensor[(8, 6, 12), float64] */;
    %692 = bitwise_and(%689, %690) /* ty=Tensor[(8, 6, 12), uint16] */;
    (%691, %692)
  };
  %693(%var_255) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(8, 6, 12), uint16]) */
}

def @func_11484(%var_11480: Tensor[(22, 5), float32], %var_11481: Tensor[(550), float32], %var_11482: Tensor[(104), uint64], %var_11483: Tensor[(96), int64]) -> (Tensor[(11, 11, 10), float32], Tensor[(5, 10, 11), float32], Tensor[(22, 5), float32], Tensor[(550), float32], Tensor[(104), uint64], Tensor[(4, 14, 9), int8], Tensor[(1, 96), int64], Tensor[(700), int64], Tensor[(96), int64], Tensor[(2, 10, 12), float32], Tensor[(13, 14, 13), float64], Tensor[(784, 780), float32], Tensor[(2, 10, 12), float32]) {
  @func_11478(%var_11480, %var_11481, %var_11482, %var_11483) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(5, 10, 11), float32], Tensor[(22, 5), float32], Tensor[(550), float32], Tensor[(104), uint64], Tensor[(4, 14, 9), int8], Tensor[(1, 96), int64], Tensor[(700), int64], Tensor[(96), int64], Tensor[(2, 10, 12), float32], Tensor[(13, 14, 13), float64], Tensor[(784, 780), float32], Tensor[(2, 10, 12), float32]) */
}

def @func_13034(%var_13014: Tensor[(2, 10, 12), float32]) -> (Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) {
  %694 = @func_12221() /* ty=Tensor[(2, 10, 12), float32] */;
  %695 = cast(%var_13014, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
  %696 = shape_of(%694, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(%694, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %699 = @func_12148() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %700 = @func_9821() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %701 = equal(%697, %698) /* ty=Tensor[(2, 10, 12), bool] */;
  %702 = %699.0;
  %703 = %700.0;
  (%701, %702, %703)
}

def @func_13069() -> (Tensor[(2, 10, 12), float32],) {
  %705 = fn () -> (Tensor[(2, 10, 12), float32],) {
    %704 = @func_12221() /* ty=Tensor[(2, 10, 12), float32] */;
    (%704,)
  };
  %705() /* ty=(Tensor[(2, 10, 12), float32],) */
}

def @func_14834(%var_14832: Tensor[(14, 5, 11), float32], %var_14833: Tensor[(700), int64]) -> (Tensor[(14, 5, 11), int8], Tensor[(9, 16, 12), int16], Tensor[(1728), uint64], Tensor[(2, 24), float64], Tensor[(700), int64]) {
  @func_14830(%var_14832, %var_14833) /* ty=(Tensor[(14, 5, 11), int8], Tensor[(9, 16, 12), int16], Tensor[(1728), uint64], Tensor[(2, 24), float64], Tensor[(700), int64]) */
}

def @func_11696() -> Tensor[(2, 10, 12), float32] {
  @func_11694() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_10263() -> (Tensor[(2, 10, 12), float32], Tensor[(104), uint64], Tensor[(480), int16]) {
  %711 = fn () -> (Tensor[(2, 10, 12), float32], Tensor[(104), uint64], Tensor[(480), int16]) {
    %706 = cast(meta[relay.Constant][64] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
    %707 = reshape(%706, newshape=[16, 3, 10]) /* ty=Tensor[(16, 3, 10), int16] */;
    %708 = @func_8166(%707) /* ty=(Tensor[(16, 3, 10), int16], Tensor[(208), uint64], Tensor[(3, 1), int8], Tensor[(104), uint64]) */;
    %709 = @func_9247() /* ty=Tensor[(2, 10, 12), float32] */;
    %710 = %708.3;
    (%709, %710, meta[relay.Constant][64] /* ty=Tensor[(480), int16] */)
  };
  %711() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(104), uint64], Tensor[(480), int16]) */
}

def @func_9973() -> (Tensor[(11, 11, 10), float32],) {
  @func_9971() /* ty=(Tensor[(11, 11, 10), float32],) */
}

def @func_13789() -> (Tensor[(2, 10, 12), float32], Tensor[(?, 4, 5), float32], Tensor[(?, 4, 5), bool]) {
  @func_13787() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(?, 4, 5), float32], Tensor[(?, 4, 5), bool]) */
}

def @func_13266() -> (Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(104), uint64]) {
  @func_13264() /* ty=(Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(104), uint64]) */
}

def @func_13162() -> (Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32]) {
  %715 = fn () -> (Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32]) {
    %712 = @func_9821() /* ty=(Tensor[(11, 11, 10), float32],) */;
    %713 = %712.0;
    %714 = @func_9946() /* ty=Tensor[(2, 10, 12), float32] */;
    (%713, %714)
  };
  %715() /* ty=(Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32]) */
}

def @func_14157() -> (Tensor[(11, 11, 10), float32],) {
  @func_14155() /* ty=(Tensor[(11, 11, 10), float32],) */
}

def @func_12339() -> (Tensor[(2, 10, 12), float32],) {
  @func_12337() /* ty=(Tensor[(2, 10, 12), float32],) */
}

def @func_11524() -> Tensor[(2, 10, 12), float32] {
  @func_11522() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_13578() -> (Tensor[(2, 10, 12), float32],) {
  %716 = @func_11222() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %717 = %716.0;
  (%717,)
}

def @func_10251() -> Tensor[(11, 11, 10), float32] {
  %721 = fn () -> Tensor[(11, 11, 10), float32] {
    %718 = @func_9268() /* ty=(Tensor[(11, 11, 10), float32],) */;
    %719 = %718.0;
    %720 = cast(%719, dtype="float32") /* ty=Tensor[(11, 11, 10), float32] */;
    atanh(%720) /* ty=Tensor[(11, 11, 10), float32] */
  };
  %721() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_10087(%var_10085: Tensor[(900), float32]) -> (Tensor[(2, 10, 12), float32], Tensor[(208), uint64], Tensor[(900), float32], Tensor[(208), uint64]) {
  @func_10084(%var_10085) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(208), uint64], Tensor[(900), float32], Tensor[(208), uint64]) */
}

def @func_10012() -> Tensor[(2, 10, 12), float32] {
  @func_9946() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_2312(%var_2262: Tensor[(9, 16, 12), uint64]) -> (Tensor[(9, 16, 12), uint64], Tensor[(9, 16, 12), int16], Tensor[(9, 16, 12), float32]) {
  %722 = cast(meta[relay.Constant][65] /* ty=Tensor[(9, 16, 12), uint64] */, dtype="uint64") /* ty=Tensor[(9, 16, 12), uint64] */;
  %723 = shape_of(%var_2262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%var_2262, dtype="uint64") /* ty=Tensor[(9, 16, 12), uint64] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %726 = cast(meta[relay.Constant][65] /* ty=Tensor[(9, 16, 12), uint64] */, dtype="float32") /* ty=Tensor[(9, 16, 12), float32] */;
  %727 = log10(%726) /* ty=Tensor[(9, 16, 12), float32] */;
  %728 = cast(%727, dtype="int16") /* ty=Tensor[(9, 16, 12), int16] */;
  %729 = shape_of(%var_2262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%var_2262, dtype="int16") /* ty=Tensor[(9, 16, 12), int16] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %732 = cast(%727, dtype="float32") /* ty=Tensor[(9, 16, 12), float32] */;
  %733 = add(%724, %725) /* ty=Tensor[(9, 16, 12), uint64] */;
  %734 = minimum(%730, %731) /* ty=Tensor[(9, 16, 12), int16] */;
  %735 = sinh(%732) /* ty=Tensor[(9, 16, 12), float32] */;
  (%733, %734, %735)
}

def @func_12456() -> Tensor[(11, 11, 10), float32] {
  %736 = fn () -> Tensor[(11, 11, 10), float32] {
    @func_9411() /* ty=Tensor[(11, 11, 10), float32] */
  };
  %736() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_13713(%var_13711: Tensor[(11, 11, 10), float32]) -> (Tensor[(2, 10, 12), float32], Tensor[(144, 4), uint32], Tensor[(11, 11, 10), bool]) {
  @func_13710(%var_13711) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(144, 4), uint32], Tensor[(11, 11, 10), bool]) */
}

def @func_14717() -> (Tensor[(11, 11, 10), float32],) {
  %739 = fn () -> (Tensor[(11, 11, 10), float32],) {
    %737 = @func_14155() /* ty=(Tensor[(11, 11, 10), float32],) */;
    %738 = %737.0;
    (%738,)
  };
  %739() /* ty=(Tensor[(11, 11, 10), float32],) */
}

def @func_12221() -> Tensor[(2, 10, 12), float32] {
  @func_9247() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_9821() -> (Tensor[(11, 11, 10), float32],) {
  %740 = @func_9268() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %741 = %740.0;
  %742 = cast(%741, dtype="float32") /* ty=Tensor[(11, 11, 10), float32] */;
  %743 = sqrt(%742) /* ty=Tensor[(11, 11, 10), float32] */;
  (%743,)
}

def @func_9719(%var_9717: Tensor[(72), float32], %var_9718: Tensor[(576), int64]) -> (Tensor[(11, 11, 10), float32], Tensor[(128), float64], Tensor[(72), float32], Tensor[(128), float64], Tensor[(576), int64]) {
  @func_9715(%var_9717, %var_9718) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(128), float64], Tensor[(72), float32], Tensor[(128), float64], Tensor[(576), int64]) */
}

def @func_9527(%var_9524: Tensor[(13, 5, 12), float32], %var_9525: Tensor[(128), float64], %var_9526: Tensor[(384), int16]) -> (Tensor[(13, 5, 12), float32], Tensor[(3, 24), float32], Tensor[(128), float64], Tensor[(576), int64], Tensor[(8, 6, 12), float64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(9, 16, 12), bool], Tensor[(11, 5, 11), float64], Tensor[(605), float64]) {
  %780 = fn (%var_9457: Tensor[(13, 5, 12), float32], %var_9471: Tensor[(128), float64], %var_9480: Tensor[(384), int16]) -> (Tensor[(13, 5, 12), float32], Tensor[(3, 24), float32], Tensor[(128), float64], Tensor[(576), int64], Tensor[(8, 6, 12), float64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(9, 16, 12), bool], Tensor[(11, 5, 11), float64], Tensor[(605), float64]) {
    %744 = cast(-6.75414f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %745 = cast(%var_9457, dtype="float32") /* ty=Tensor[(13, 5, 12), float32] */;
    %746 = cast(%var_9480, dtype="int16") /* ty=Tensor[(384), int16] */;
    %747 = cast(%var_9480, dtype="int16") /* ty=Tensor[(384), int16] */;
    %748 = reshape(%746, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
    %749 = reshape(%747, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
    %750 = @func_683(%748, %749) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
    %751 = cast(%var_9480, dtype="int16") /* ty=Tensor[(384), int16] */;
    %752 = cast(%var_9480, dtype="int16") /* ty=Tensor[(384), int16] */;
    %753 = reshape(%751, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
    %754 = reshape(%752, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), int16] */;
    %755 = @func_683(%753, %754) /* ty=(Tensor[(4, 12, 8), int16], Tensor[(8, 6, 12), uint16], Tensor[(576), int64], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
    %756 = cast(meta[relay.Constant][66] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
    %757 = cast(meta[relay.Constant][66] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
    %758 = cast(meta[relay.Constant][66] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
    %759 = cast(%var_9471, dtype="float64") /* ty=Tensor[(128), float64] */;
    %760 = cast(meta[relay.Constant][67] /* ty=Tensor[(576), int64] */, dtype="int64") /* ty=Tensor[(576), int64] */;
    %761 = reshape(%756, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
    %762 = reshape(%757, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
    %763 = reshape(%758, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
    %764 = reshape(%759, newshape=[128]) /* ty=Tensor[(128), float64] */;
    %765 = reshape(%760, newshape=[576]) /* ty=Tensor[(576), int64] */;
    %766 = @func_5580(%761, %762, %763, %764, %765) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(4, 6, 3), bool], Tensor[(9, 16, 12), uint64], Tensor[(1728), uint64], Tensor[(128), float64], Tensor[(220), uint8], Tensor[(128), float64], Tensor[(576), int64], Tensor[(384), int16]) */;
    %767 = %766.2;
    %768 = cast(%767, dtype="bool") /* ty=Tensor[(9, 16, 12), bool] */;
    %769 = cast(-6.75414f /* ty=float32 */, dtype="bool") /* ty=bool */;
    %770 = cast(meta[relay.Constant][68] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
    %771 = cast(meta[relay.Constant][68] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
    %772 = reshape(%770, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), float64] */;
    %773 = reshape(%771, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), float64] */;
    %774 = @func_8366(%772, %773) /* ty=(Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), float64], Tensor[(11, 5, 11), bool], Tensor[(1, 3, 1), int8], Tensor[(3), int8], Tensor[(104), uint64]) */;
    %775 = add(%744, %745) /* ty=Tensor[(13, 5, 12), float32] */;
    %776 = %750.4;
    %777 = %755.3;
    %778 = not_equal(%768, %769) /* ty=Tensor[(9, 16, 12), bool] */;
    %779 = %774.1;
    (%775, meta[relay.Constant][66] /* ty=Tensor[(3, 24), float32] */, %var_9471, meta[relay.Constant][67] /* ty=Tensor[(576), int64] */, %776, %var_9480, %777, %778, %779, meta[relay.Constant][68] /* ty=Tensor[(605), float64] */)
  };
  %780(%var_9524, %var_9525, %var_9526) /* ty=(Tensor[(13, 5, 12), float32], Tensor[(3, 24), float32], Tensor[(128), float64], Tensor[(576), int64], Tensor[(8, 6, 12), float64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(9, 16, 12), bool], Tensor[(11, 5, 11), float64], Tensor[(605), float64]) */
}

def @func_11196(%var_11193: Tensor[(700), int64], %var_11194: Tensor[(1, 96), int64], %var_11195: Tensor[(780), float32]) -> (Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(11, 11, 10), float32], Tensor[(2, 392), float64], Tensor[(88), uint64], Tensor[(704), uint64], Tensor[(160), int64], Tensor[(700), int64], Tensor[(1, 96), int64], Tensor[(128), float64], Tensor[(780), float64]) {
  %806 = fn (%var_11168: Tensor[(700), int64], %var_11169: Tensor[(1, 96), int64], %var_11170: Tensor[(780), float32]) -> (Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(11, 11, 10), float32], Tensor[(2, 392), float64], Tensor[(88), uint64], Tensor[(704), uint64], Tensor[(160), int64], Tensor[(700), int64], Tensor[(1, 96), int64], Tensor[(128), float64], Tensor[(780), float64]) {
    %781 = @func_10469() /* ty=(Tensor[(4, 12, 8), int16], Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(504), int8]) */;
    %782 = @func_10540() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) */;
    %783 = cast(meta[relay.Constant][69] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
    %784 = cast(meta[relay.Constant][70] /* ty=Tensor[(704), uint64] */, dtype="uint64") /* ty=Tensor[(704), uint64] */;
    %785 = cast(meta[relay.Constant][71] /* ty=Tensor[(160), int64] */, dtype="int64") /* ty=Tensor[(160), int64] */;
    %786 = cast(%var_11168, dtype="int64") /* ty=Tensor[(700), int64] */;
    %787 = cast(meta[relay.Constant][70] /* ty=Tensor[(704), uint64] */, dtype="uint64") /* ty=Tensor[(704), uint64] */;
    %788 = cast(%var_11169, dtype="int64") /* ty=Tensor[(1, 96), int64] */;
    %789 = cast(%var_11170, dtype="float32") /* ty=Tensor[(780), float32] */;
    %790 = cast(meta[relay.Constant][72] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
    %791 = reshape(%783, newshape=[8, 11, 1]) /* ty=Tensor[(8, 11, 1), uint64] */;
    %792 = reshape(%784, newshape=[8, 11, 8]) /* ty=Tensor[(8, 11, 8), uint64] */;
    %793 = reshape(%785, newshape=[160]) /* ty=Tensor[(160), int64] */;
    %794 = reshape(%786, newshape=[700]) /* ty=Tensor[(700), int64] */;
    %795 = reshape(%787, newshape=[8, 11, 8]) /* ty=Tensor[(8, 11, 8), uint64] */;
    %796 = reshape(%788, newshape=[96]) /* ty=Tensor[(96), int64] */;
    %797 = reshape(%789, newshape=[390, 2]) /* ty=Tensor[(390, 2), float32] */;
    %798 = reshape(%790, newshape=[128]) /* ty=Tensor[(128), float64] */;
    %799 = @func_11044(%791, %792, %793, %794, %795, %796, %797, %798) /* ty=(Tensor[(8, 11, 8), bool], Tensor[(4, 8, 5), float32], Tensor[(160), int64], Tensor[(2, 392), float64], Tensor[(700), int64], Tensor[(8, 11, 8), uint16], Tensor[(6, 384, 8), bool], Tensor[(1, 6, 16), bool], Tensor[(96), int64], Tensor[(390, 2), float32], Tensor[(128), float64], Tensor[(8, 11, 605), uint16], Tensor[(2, 24), float64], Tensor[(104), uint64], Tensor[(450, 2), float32], Tensor[(208), uint64], Tensor[(128), float64], Tensor[(486), uint32], Tensor[(8, 11, 8), float32]) */;
    %800 = cast(%var_11170, dtype="float64") /* ty=Tensor[(780), float64] */;
    %801 = @func_9389() /* ty=Tensor[(2, 10, 12), float32] */;
    %802 = %781.2;
    %803 = %782.1;
    %804 = %799.3;
    %805 = tan(%800) /* ty=Tensor[(780), float64] */;
    (%801, %802, %803, %804, meta[relay.Constant][69] /* ty=Tensor[(88), uint64] */, meta[relay.Constant][70] /* ty=Tensor[(704), uint64] */, meta[relay.Constant][71] /* ty=Tensor[(160), int64] */, %var_11168, %var_11169, meta[relay.Constant][72] /* ty=Tensor[(128), float64] */, %805)
  };
  %806(%var_11193, %var_11194, %var_11195) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(11, 11, 10), float32], Tensor[(2, 392), float64], Tensor[(88), uint64], Tensor[(704), uint64], Tensor[(160), int64], Tensor[(700), int64], Tensor[(1, 96), int64], Tensor[(128), float64], Tensor[(780), float64]) */
}

def @func_13872() -> (Tensor[(11, 11, 10), float32],) {
  %808 = fn () -> (Tensor[(11, 11, 10), float32],) {
    %807 = @func_10830() /* ty=Tensor[(11, 11, 10), float32] */;
    (%807,)
  };
  %808() /* ty=(Tensor[(11, 11, 10), float32],) */
}

def @func_11865(%var_11864: Tensor[(384), int16]) -> (Tensor[(2, 10, 12), float64], Tensor[(48), float64], Tensor[(384), int16], Tensor[(8, 6, 12), float64], Tensor[(128), float64], Tensor[(576), int64]) {
  %824 = fn (%var_11848: Tensor[(384), int16]) -> (Tensor[(2, 10, 12), float64], Tensor[(48), float64], Tensor[(384), int16], Tensor[(8, 6, 12), float64], Tensor[(128), float64], Tensor[(576), int64]) {
    %809 = @func_9247() /* ty=Tensor[(2, 10, 12), float32] */;
    %810 = cast(%809, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
    %811 = cast(%var_11848, dtype="int16") /* ty=Tensor[(384), int16] */;
    %812 = reshape(%811, newshape=[384]) /* ty=Tensor[(384), int16] */;
    %813 = @func_9643(%812) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(384), int16], Tensor[(4, 12), float64], Tensor[(60), float32], Tensor[(48), float64]) */;
    %814 = cast(meta[relay.Constant][73] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
    %815 = cast(meta[relay.Constant][74] /* ty=Tensor[(576), int64] */, dtype="int64") /* ty=Tensor[(576), int64] */;
    %816 = cast(%var_11848, dtype="int16") /* ty=Tensor[(384), int16] */;
    %817 = reshape(%814, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float64] */;
    %818 = reshape(%815, newshape=[2, 288]) /* ty=Tensor[(2, 288), int64] */;
    %819 = reshape(%816, newshape=[384]) /* ty=Tensor[(384), int16] */;
    %820 = @func_1141(%817, %818, %819) /* ty=(Tensor[(16, 2, 4), float64], Tensor[(8, 6, 12), float64], Tensor[(2, 288), int64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
    %821 = sin(%810) /* ty=Tensor[(2, 10, 12), float64] */;
    %822 = %813.5;
    %823 = %820.1;
    (%821, %822, %var_11848, %823, meta[relay.Constant][73] /* ty=Tensor[(128), float64] */, meta[relay.Constant][74] /* ty=Tensor[(576), int64] */)
  };
  %824(%var_11864) /* ty=(Tensor[(2, 10, 12), float64], Tensor[(48), float64], Tensor[(384), int16], Tensor[(8, 6, 12), float64], Tensor[(128), float64], Tensor[(576), int64]) */
}

def @func_14932() -> Tensor[(11, 11, 10), float32] {
  @func_12455() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_13445(%var_13341: Tensor[(297), bool], %var_13393: Tensor[(104), uint64], %var_13405: Tensor[(72), float32], %var_13406: Tensor[(576), int64], %var_13418: Tensor[(36), float64]) -> (Tensor[(297), uint32], Tensor[(504), int8], Tensor[(11, 11, 10), float32], Tensor[(390), bool], Tensor[(13, 14, 13), float32], Tensor[(5, 6, 13), float32], Tensor[(8, 2, 13), uint64], Tensor[(1, 3), int8], Tensor[(104), uint64], Tensor[(13, 14, 13), float64], Tensor[(128), float64], Tensor[(72), float32], Tensor[(576), int64], Tensor[(128), float64], Tensor[(36), float64], Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32]) {
  %825 = cast(%var_13341, dtype="bool") /* ty=Tensor[(297), bool] */;
  %826 = cast(%var_13341, dtype="bool") /* ty=Tensor[(297), bool] */;
  %827 = reshape(%825, newshape=[9, 3, 11]) /* ty=Tensor[(9, 3, 11), bool] */;
  %828 = reshape(%826, newshape=[9, 3, 11]) /* ty=Tensor[(9, 3, 11), bool] */;
  %829 = @func_11893(%827, %828) /* ty=(Tensor[(9, 3, 11), bool],) */;
  %830 = %829.0;
  %831 = cast(%830, dtype="uint32") /* ty=Tensor[(9, 3, 11), uint32] */;
  %832 = shape_of(%var_13341, dtype="int32") /* ty=Tensor[(1), int32] */;
  %833 = cast(%var_13341, dtype="uint32") /* ty=Tensor[(297), uint32] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %835 = @func_10469() /* ty=(Tensor[(4, 12, 8), int16], Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(504), int8]) */;
  %836 = @func_9821() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %837 = @func_12022() /* ty=(Tensor[(13, 14, 13), float64],) */;
  %838 = %837.0;
  %839 = cast(%838, dtype="float32") /* ty=Tensor[(13, 14, 13), float32] */;
  %840 = cast(meta[relay.Constant][75] /* ty=Tensor[(390), bool] */, dtype="bool") /* ty=Tensor[(390), bool] */;
  %841 = cast(meta[relay.Constant][75] /* ty=Tensor[(390), bool] */, dtype="bool") /* ty=Tensor[(390), bool] */;
  %842 = reshape(%840, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %843 = reshape(%841, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %844 = @func_1332(%842, %843) /* ty=Tensor[(5, 6, 13), bool] */;
  %845 = cast(%844, dtype="float32") /* ty=Tensor[(5, 6, 13), float32] */;
  %846 = cast(meta[relay.Constant][76] /* ty=Tensor[(1, 3), int8] */, dtype="int8") /* ty=Tensor[(1, 3), int8] */;
  %847 = cast(%var_13393, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %848 = reshape(%846, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), int8] */;
  %849 = reshape(%847, newshape=[104, 1]) /* ty=Tensor[(104, 1), uint64] */;
  %850 = @func_6847(%848, %849) /* ty=(Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) */;
  %851 = @func_12022() /* ty=(Tensor[(13, 14, 13), float64],) */;
  %852 = cast(%var_13405, dtype="float32") /* ty=Tensor[(72), float32] */;
  %853 = cast(%var_13406, dtype="int64") /* ty=Tensor[(576), int64] */;
  %854 = reshape(%852, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %855 = reshape(%853, newshape=[576]) /* ty=Tensor[(576), int64] */;
  %856 = @func_9715(%854, %855) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(128), float64], Tensor[(72), float32], Tensor[(128), float64], Tensor[(576), int64]) */;
  %857 = cast(%var_13418, dtype="float64") /* ty=Tensor[(36), float64] */;
  %858 = cast(%844, dtype="bool") /* ty=Tensor[(5, 6, 13), bool] */;
  %859 = reshape(%857, newshape=[6, 2, 3]) /* ty=Tensor[(6, 2, 3), float64] */;
  %860 = reshape(%858, newshape=[1, 390]) /* ty=Tensor[(1, 390), bool] */;
  %861 = @func_7802(%859, %860) /* ty=(Tensor[(6, 2, 3), float64], Tensor[(384), int16], Tensor[(52, 2), uint64], Tensor[(104, 2), uint64], Tensor[(5, 6, 13), bool], Tensor[(1, 390), bool], Tensor[(384), int16], Tensor[(128), float64], Tensor[(576), int64]) */;
  %862 = @func_9971() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %863 = bitwise_or(%833, %834) /* ty=Tensor[(297), uint32] */;
  %864 = %835.3;
  %865 = %836.0;
  %866 = log(%839) /* ty=Tensor[(13, 14, 13), float32] */;
  %867 = sigmoid(%845) /* ty=Tensor[(5, 6, 13), float32] */;
  %868 = %850.1;
  %869 = %851.0;
  %870 = %856.3;
  %871 = %861.7;
  %872 = @func_12668() /* ty=Tensor[(2, 10, 12), float32] */;
  %873 = %862.0;
  (%863, %864, %865, meta[relay.Constant][75] /* ty=Tensor[(390), bool] */, %866, %867, %868, meta[relay.Constant][76] /* ty=Tensor[(1, 3), int8] */, %var_13393, %869, %870, %var_13405, %var_13406, %871, %var_13418, %872, %873)
}

def @func_7109(%var_7106: Tensor[(6, 4, 15), float64], %var_7107: Tensor[(576), int64], %var_7108: Tensor[(48), float64]) -> (Tensor[(8, 6, 12), float64], Tensor[(576), int64], Tensor[(6, 4, 15), float32], Tensor[(6, 4, 15), float64], Tensor[(6, 1, 8), float64], Tensor[(1, 60), float32], Tensor[(48), float64], Tensor[(6, 4, 15), float64], Tensor[(8, 6, 12), uint16], Tensor[(104), uint64], Tensor[(208), uint64]) {
  @func_7104(%var_7106, %var_7107, %var_7108) /* ty=(Tensor[(8, 6, 12), float64], Tensor[(576), int64], Tensor[(6, 4, 15), float32], Tensor[(6, 4, 15), float64], Tensor[(6, 1, 8), float64], Tensor[(1, 60), float32], Tensor[(48), float64], Tensor[(6, 4, 15), float64], Tensor[(8, 6, 12), uint16], Tensor[(104), uint64], Tensor[(208), uint64]) */
}

def @func_13787() -> (Tensor[(2, 10, 12), float32], Tensor[(?, 4, 5), float32], Tensor[(?, 4, 5), bool]) {
  %874 = @func_9698() /* ty=(Tensor[(2, 10, 12), float32],) */;
  %875 = cast(meta[relay.Constant][77] /* ty=Tensor[(1, 4, 5), float32] */, dtype="float32") /* ty=Tensor[(1, 4, 5), float32] */;
  %876 = cosh(%875) /* ty=Tensor[(1, 4, 5), float32] */;
  %877 = cast(%876, dtype="float32") /* ty=Tensor[(1, 4, 5), float32] */;
  %878 = cos(%877) /* ty=Tensor[(1, 4, 5), float32] */;
  %879 = cast(meta[relay.Constant][77] /* ty=Tensor[(1, 4, 5), float32] */, dtype="float64") /* ty=Tensor[(1, 4, 5), float64] */;
  %880 = shape_of(%878, dtype="int32") /* ty=Tensor[(3), int32] */;
  %881 = cast(%878, dtype="float64") /* ty=Tensor[(1, 4, 5), float64] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %883 = floor_divide(%881, %882) /* ty=Tensor[(?, 4, 5), float64] */;
  %884 = cast(%883, dtype="float32") /* ty=Tensor[(?, 4, 5), float32] */;
  %885 = cast(%878, dtype="bool") /* ty=Tensor[(1, 4, 5), bool] */;
  %886 = shape_of(%883, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(%883, dtype="bool") /* ty=Tensor[(?, 4, 5), bool] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %889 = %874.0;
  %890 = acos(%884) /* ty=Tensor[(?, 4, 5), float32] */;
  %891 = logical_or(%887, %888) /* ty=Tensor[(?, 4, 5), bool] */;
  (%889, %890, %891)
}

def @func_10812(%var_10794: Tensor[(576), int64]) -> (Tensor[(2, 10, 12), float32], Tensor[(128), float64], Tensor[(700), int64], Tensor[(220), uint8], Tensor[(576), int64], Tensor[(384), int16], Tensor[(2, 10, 12), bool], Tensor[(128), float32]) {
  %892 = @func_10704() /* ty=(Tensor[(104), uint64], Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(504), int8]) */;
  %893 = cast(meta[relay.Constant][78] /* ty=Tensor[(700), int64] */, dtype="int64") /* ty=Tensor[(700), int64] */;
  %894 = reshape(%893, newshape=[10, 70]) /* ty=Tensor[(10, 70), int64] */;
  %895 = @func_9777(%894) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(144, 4), uint32], Tensor[(486), uint32], Tensor[(128), float64], Tensor[(2, 24), float64], Tensor[(10, 70), int64]) */;
  %896 = @func_9389() /* ty=Tensor[(2, 10, 12), float32] */;
  %897 = cast(%896, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
  %898 = exp(%897) /* ty=Tensor[(2, 10, 12), float64] */;
  %899 = cast(%896, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
  %900 = shape_of(%898, dtype="int32") /* ty=Tensor[(3), int32] */;
  %901 = cast(%898, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %903 = cast(meta[relay.Constant][79] /* ty=Tensor[(220), uint8] */, dtype="uint8") /* ty=Tensor[(220), uint8] */;
  %904 = cast(meta[relay.Constant][79] /* ty=Tensor[(220), uint8] */, dtype="uint8") /* ty=Tensor[(220), uint8] */;
  %905 = %895.5;
  %906 = cast(%905, dtype="float64") /* ty=Tensor[(128), float64] */;
  %907 = cast(%var_10794, dtype="int64") /* ty=Tensor[(576), int64] */;
  %908 = cast(meta[relay.Constant][80] /* ty=Tensor[(384), int16] */, dtype="int16") /* ty=Tensor[(384), int16] */;
  %909 = reshape(%903, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), uint8] */;
  %910 = reshape(%904, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), uint8] */;
  %911 = reshape(%906, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %912 = reshape(%907, newshape=[144, 4]) /* ty=Tensor[(144, 4), int64] */;
  %913 = reshape(%908, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %914 = @func_1282(%909, %910, %911, %912, %913) /* ty=(Tensor[(11, 5, 4), uint8], Tensor[(384), int16], Tensor[(128), float64], Tensor[(144, 4), int64], Tensor[(384), int16]) */;
  %915 = %914.2;
  %916 = cast(%915, dtype="float32") /* ty=Tensor[(128), float32] */;
  %917 = %892.2;
  %918 = not_equal(%901, %902) /* ty=Tensor[(2, 10, 12), bool] */;
  %919 = asin(%916) /* ty=Tensor[(128), float32] */;
  (%917, %905, meta[relay.Constant][78] /* ty=Tensor[(700), int64] */, meta[relay.Constant][79] /* ty=Tensor[(220), uint8] */, %var_10794, meta[relay.Constant][80] /* ty=Tensor[(384), int16] */, %918, %919)
}

def @func_14257() -> (Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32]) {
  %924 = fn () -> (Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32]) {
    %920 = @func_13161() /* ty=(Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32]) */;
    %921 = @func_13161() /* ty=(Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32]) */;
    %922 = %920.0;
    %923 = %921.1;
    (%922, %923)
  };
  %924() /* ty=(Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32]) */
}

def @func_9072(%var_9039: Tensor[(16, 9, 11), int8], %var_9069: Tensor[(104), uint64]) -> (Tensor[(16, 9, 11), int8], Tensor[(5, 6, 13), bool], Tensor[(390, 1), bool], Tensor[(208), uint64], Tensor[(3), int8], Tensor[(104), uint64]) {
  %925 = cast(meta[relay.Constant][81] /* ty=Tensor[(16, 9, 11), int8] */, dtype="int8") /* ty=Tensor[(16, 9, 11), int8] */;
  %926 = shape_of(%var_9039, dtype="int32") /* ty=Tensor[(3), int32] */;
  %927 = cast(%var_9039, dtype="int8") /* ty=Tensor[(16, 9, 11), int8] */;
  %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %929 = cast(meta[relay.Constant][82] /* ty=Tensor[(390, 1), bool] */, dtype="bool") /* ty=Tensor[(390, 1), bool] */;
  %930 = cast(meta[relay.Constant][82] /* ty=Tensor[(390, 1), bool] */, dtype="bool") /* ty=Tensor[(390, 1), bool] */;
  %931 = reshape(%929, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %932 = reshape(%930, newshape=[5, 6, 13]) /* ty=Tensor[(5, 6, 13), bool] */;
  %933 = cast(meta[relay.Constant][83] /* ty=Tensor[(3), int8] */, dtype="int8") /* ty=Tensor[(3), int8] */;
  %934 = cast(%var_9069, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %935 = reshape(%933, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), int8] */;
  %936 = reshape(%934, newshape=[104, 1]) /* ty=Tensor[(104, 1), uint64] */;
  %937 = @func_6847(%935, %936) /* ty=(Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) */;
  %938 = minimum(%927, %928) /* ty=Tensor[(16, 9, 11), int8] */;
  %939 = @func_1332(%931, %932) /* ty=Tensor[(5, 6, 13), bool] */;
  %940 = %937.3;
  (%938, %939, meta[relay.Constant][82] /* ty=Tensor[(390, 1), bool] */, %940, meta[relay.Constant][83] /* ty=Tensor[(3), int8] */, %var_9069)
}

def @func_12921(%var_12905: Tensor[(11, 11, 10), float32]) -> Tensor[(11, 11, 10), uint64] {
  %941 = @func_9821() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %942 = %941.0;
  %943 = cast(%var_12905, dtype="uint64") /* ty=Tensor[(11, 11, 10), uint64] */;
  %944 = shape_of(%942, dtype="int32") /* ty=Tensor[(3), int32] */;
  %945 = cast(%942, dtype="uint64") /* ty=Tensor[(11, 11, 10), uint64] */;
  %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_and(%945, %946) /* ty=Tensor[(11, 11, 10), uint64] */
}

def @func_2803(%var_2802: Tensor[(7, 14, 8), float64]) -> Tensor[(7, 14, 8), float64] {
  %948 = fn (%var_2781: Tensor[(7, 14, 8), float64]) -> Tensor[(7, 14, 8), float64] {
    %947 = cast(%var_2781, dtype="float64") /* ty=Tensor[(7, 14, 8), float64] */;
    sigmoid(%947) /* ty=Tensor[(7, 14, 8), float64] */
  };
  %948(%var_2802) /* ty=Tensor[(7, 14, 8), float64] */
}

def @func_9777(%var_9775: Tensor[(10, 70), int64]) -> (Tensor[(11, 11, 10), float32], Tensor[(7, 14, 8), float64], Tensor[(784), float64], Tensor[(144, 4), uint32], Tensor[(486), uint32], Tensor[(128), float64], Tensor[(2, 24), float64], Tensor[(10, 70), int64]) {
  %949 = cast(meta[relay.Constant][84] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
  %950 = reshape(%949, newshape=[7, 14, 8]) /* ty=Tensor[(7, 14, 8), float64] */;
  %951 = cast(meta[relay.Constant][85] /* ty=Tensor[(486), uint32] */, dtype="uint32") /* ty=Tensor[(486), uint32] */;
  %952 = cast(meta[relay.Constant][85] /* ty=Tensor[(486), uint32] */, dtype="uint32") /* ty=Tensor[(486), uint32] */;
  %953 = cast(meta[relay.Constant][86] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %954 = reshape(%951, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), uint32] */;
  %955 = reshape(%952, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), uint32] */;
  %956 = reshape(%953, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %957 = @func_4650(%954, %955, %956) /* ty=(Tensor[(6, 9, 9), bool], Tensor[(576), int64], Tensor[(128), float64], Tensor[(6, 96), int64], Tensor[(6, 64), int16], Tensor[(9, 16, 12), int16], Tensor[(1728), uint64], Tensor[(1, 220), uint8], Tensor[(144, 4), uint32]) */;
  %958 = cast(%var_9775, dtype="int64") /* ty=Tensor[(10, 70), int64] */;
  %959 = cast(%var_9775, dtype="int64") /* ty=Tensor[(10, 70), int64] */;
  %960 = reshape(%958, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
  %961 = reshape(%959, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
  %962 = @func_7507(%960, %961) /* ty=(Tensor[(10, 5, 14), int64], Tensor[(6, 1, 8), float64], Tensor[(2, 24), float64]) */;
  %963 = @func_9411() /* ty=Tensor[(11, 11, 10), float32] */;
  %964 = @func_2801(%950) /* ty=Tensor[(7, 14, 8), float64] */;
  %965 = %957.8;
  %966 = %962.2;
  (%963, %964, meta[relay.Constant][84] /* ty=Tensor[(784), float64] */, %965, meta[relay.Constant][85] /* ty=Tensor[(486), uint32] */, meta[relay.Constant][86] /* ty=Tensor[(128), float64] */, %966, %var_9775)
}

def @func_1941(%var_1940: Tensor[(6, 1, 8), float64]) -> Tensor[(6, 1, 8), float64] {
  %968 = fn (%var_1934: Tensor[(6, 1, 8), float64]) -> Tensor[(6, 1, 8), float64] {
    %967 = cast(%var_1934, dtype="float64") /* ty=Tensor[(6, 1, 8), float64] */;
    rsqrt(%967) /* ty=Tensor[(6, 1, 8), float64] */
  };
  %968(%var_1940) /* ty=Tensor[(6, 1, 8), float64] */
}

def @func_9715(%var_9709: Tensor[(72), float32], %var_9711: Tensor[(576), int64]) -> (Tensor[(11, 11, 10), float32], Tensor[(128), float64], Tensor[(72), float32], Tensor[(128), float64], Tensor[(576), int64]) {
  %969 = cast(%var_9709, dtype="float32") /* ty=Tensor[(72), float32] */;
  %970 = cast(%var_9709, dtype="float32") /* ty=Tensor[(72), float32] */;
  %971 = cast(%var_9709, dtype="float32") /* ty=Tensor[(72), float32] */;
  %972 = cast(meta[relay.Constant][87] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %973 = cast(%var_9711, dtype="int64") /* ty=Tensor[(576), int64] */;
  %974 = reshape(%969, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %975 = reshape(%970, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %976 = reshape(%971, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %977 = reshape(%972, newshape=[128]) /* ty=Tensor[(128), float64] */;
  %978 = reshape(%973, newshape=[576]) /* ty=Tensor[(576), int64] */;
  %979 = @func_5580(%974, %975, %976, %977, %978) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(4, 6, 3), bool], Tensor[(9, 16, 12), uint64], Tensor[(1728), uint64], Tensor[(128), float64], Tensor[(220), uint8], Tensor[(128), float64], Tensor[(576), int64], Tensor[(384), int16]) */;
  %980 = @func_9411() /* ty=Tensor[(11, 11, 10), float32] */;
  %981 = %979.4;
  (%980, %981, %var_9709, meta[relay.Constant][87] /* ty=Tensor[(128), float64] */, %var_9711)
}

def @func_1282(%var_1263: Tensor[(11, 5, 4), uint8], %var_1264: Tensor[(11, 5, 4), uint8], %var_1276: Tensor[(128), float64], %var_1277: Tensor[(144, 4), int64], %var_1278: Tensor[(384), int16]) -> (Tensor[(11, 5, 4), uint8], Tensor[(384), int16], Tensor[(128), float64], Tensor[(144, 4), int64], Tensor[(384), int16]) {
  %982 = cast(%var_1264, dtype="uint8") /* ty=Tensor[(11, 5, 4), uint8] */;
  %983 = shape_of(%var_1263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %984 = cast(%var_1263, dtype="uint8") /* ty=Tensor[(11, 5, 4), uint8] */;
  %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %986 = cast(%var_1276, dtype="float64") /* ty=Tensor[(128), float64] */;
  %987 = cast(%var_1277, dtype="int64") /* ty=Tensor[(144, 4), int64] */;
  %988 = cast(%var_1278, dtype="int16") /* ty=Tensor[(384), int16] */;
  %989 = reshape(%986, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float64] */;
  %990 = reshape(%987, newshape=[2, 288]) /* ty=Tensor[(2, 288), int64] */;
  %991 = reshape(%988, newshape=[384]) /* ty=Tensor[(384), int16] */;
  %992 = @func_1141(%989, %990, %991) /* ty=(Tensor[(16, 2, 4), float64], Tensor[(8, 6, 12), float64], Tensor[(2, 288), int64], Tensor[(576), int64], Tensor[(384), int16], Tensor[(8, 6, 12), uint16], Tensor[(8, 6, 12), float64]) */;
  %993 = bitwise_or(%984, %985) /* ty=Tensor[(11, 5, 4), uint8] */;
  %994 = %992.4;
  (%993, %994, %var_1276, %var_1277, %var_1278)
}

def @func_14271() -> (Tensor[(2, 10, 12), float32], Tensor[(104), uint64]) {
  %1000 = fn () -> (Tensor[(2, 10, 12), float32], Tensor[(104), uint64]) {
    %995 = @func_9247() /* ty=Tensor[(2, 10, 12), float32] */;
    %996 = cast(%995, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
    %997 = reshape(%996, newshape=[2, 10, 12]) /* ty=Tensor[(2, 10, 12), float32] */;
    %998 = @func_10908(%997) /* ty=(Tensor[(2, 10, 12), float64], Tensor[(104), uint64]) */;
    %999 = %998.1;
    (%995, %999)
  };
  %1000() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(104), uint64]) */
}

def @func_14661() -> Tensor[(11, 11, 10), float32] {
  %1001 = @func_10373() /* ty=(Tensor[(11, 11, 10), float32],) */;
  %1001.0
}

def @func_10705() -> (Tensor[(104), uint64], Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(504), int8]) {
  %1010 = fn () -> (Tensor[(104), uint64], Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(504), int8]) {
    %1002 = @func_10262() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(104), uint64], Tensor[(480), int16]) */;
    %1003 = @func_9971() /* ty=(Tensor[(11, 11, 10), float32],) */;
    %1004 = @func_9698() /* ty=(Tensor[(2, 10, 12), float32],) */;
    %1005 = @func_10469() /* ty=(Tensor[(4, 12, 8), int16], Tensor[(2, 10, 12), float32], Tensor[(4, 14, 9), int8], Tensor[(504), int8]) */;
    %1006 = %1002.1;
    %1007 = %1003.0;
    %1008 = %1004.0;
    %1009 = %1005.3;
    (%1006, %1007, %1008, %1009)
  };
  %1010() /* ty=(Tensor[(104), uint64], Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(504), int8]) */
}

def @func_12808() -> Tensor[(2, 10, 12), float32] {
  @func_12221() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_9362(%var_9333: Tensor[(1584, 1), int8], %var_9351: Tensor[(110), float32], %var_9352: Tensor[(550), float32], %var_9353: Tensor[(784), float64]) -> (Tensor[(2, 10, 12), float32], Tensor[(390, 1), bool], Tensor[(1584, 104), float64], Tensor[(1584, ?), float64], Tensor[(7, 14, 8), float64], Tensor[(110), float32], Tensor[(550), float32], Tensor[(784), float64]) {
  %1011 = cast(meta[relay.Constant][88] /* ty=Tensor[(1584, 1), int8] */, dtype="int8") /* ty=Tensor[(1584, 1), int8] */;
  %1012 = cast(meta[relay.Constant][89] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %1013 = reshape(%1011, newshape=[16, 9, 11]) /* ty=Tensor[(16, 9, 11), int8] */;
  %1014 = reshape(%1012, newshape=[104]) /* ty=Tensor[(104), uint64] */;
  %1015 = @func_9072(%1013, %1014) /* ty=(Tensor[(16, 9, 11), int8], Tensor[(5, 6, 13), bool], Tensor[(390, 1), bool], Tensor[(208), uint64], Tensor[(3), int8], Tensor[(104), uint64]) */;
  %1016 = cast(meta[relay.Constant][88] /* ty=Tensor[(1584, 1), int8] */, dtype="bool") /* ty=Tensor[(1584, 1), bool] */;
  %1017 = cast(meta[relay.Constant][89] /* ty=Tensor[(104), uint64] */, dtype="bool") /* ty=Tensor[(104), bool] */;
  %1018 = logical_or(%1016, %1017) /* ty=Tensor[(1584, 104), bool] */;
  %1019 = cast(meta[relay.Constant][88] /* ty=Tensor[(1584, 1), int8] */, dtype="float64") /* ty=Tensor[(1584, 1), float64] */;
  %1020 = cast(%1018, dtype="float64") /* ty=Tensor[(1584, 104), float64] */;
  %1021 = cast(%var_9333, dtype="float64") /* ty=Tensor[(1584, 1), float64] */;
  %1022 = shape_of(meta[relay.Constant][88] /* ty=Tensor[(1584, 1), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1023 = cast(meta[relay.Constant][88] /* ty=Tensor[(1584, 1), int8] */, dtype="float64") /* ty=Tensor[(1584, 1), float64] */;
  %1024 = dyn.reshape(%1021, %1022, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1025 = cast(%var_9351, dtype="float32") /* ty=Tensor[(110), float32] */;
  %1026 = cast(%var_9352, dtype="float32") /* ty=Tensor[(550), float32] */;
  %1027 = cast(meta[relay.Constant][89] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %1028 = cast(%var_9353, dtype="float64") /* ty=Tensor[(784), float64] */;
  %1029 = reshape(%1025, newshape=[1, 10, 11]) /* ty=Tensor[(1, 10, 11), float32] */;
  %1030 = reshape(%1026, newshape=[5, 10, 11]) /* ty=Tensor[(5, 10, 11), float32] */;
  %1031 = reshape(%1027, newshape=[104]) /* ty=Tensor[(104), uint64] */;
  %1032 = reshape(%1028, newshape=[784]) /* ty=Tensor[(784), float64] */;
  %1033 = @func_6189(%1029, %1030, %1031, %1032) /* ty=(Tensor[(5, 10, 11), float32], Tensor[(384), int16], Tensor[(208), uint64], Tensor[(104), uint16], Tensor[(9, 16, 12), int16], Tensor[(1, 1728), uint64], Tensor[(7, 14, 8), float64], Tensor[(784), float64]) */;
  %1034 = @func_9247() /* ty=Tensor[(2, 10, 12), float32] */;
  %1035 = %1015.2;
  %1036 = floor_mod(%1019, %1020) /* ty=Tensor[(1584, 104), float64] */;
  %1037 = floor_mod(%1023, %1024) /* ty=Tensor[(1584, ?), float64] */;
  %1038 = %1033.6;
  (%1034, %1035, %1036, %1037, %1038, %var_9351, %var_9352, %var_9353)
}

def @func_9289() -> Tensor[(2, 10, 12), float32] {
  @func_9247() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_10282() -> Tensor[(2, 10, 12), float32] {
  %1041 = fn () -> Tensor[(2, 10, 12), float32] {
    %1039 = @func_9247() /* ty=Tensor[(2, 10, 12), float32] */;
    %1040 = cast(%1039, dtype="float32") /* ty=Tensor[(2, 10, 12), float32] */;
    cos(%1040) /* ty=Tensor[(2, 10, 12), float32] */
  };
  %1041() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_11392(%var_11391: Tensor[(1, 1584), int8]) -> (Tensor[(11, 11, 10), float32], Tensor[(208), uint64], Tensor[(2, 52), uint64], Tensor[(10, 1584), int8]) {
  %1053 = fn (%var_11371: Tensor[(1, 1584), int8]) -> (Tensor[(11, 11, 10), float32], Tensor[(208), uint64], Tensor[(2, 52), uint64], Tensor[(10, 1584), int8]) {
    %1042 = @func_9821() /* ty=(Tensor[(11, 11, 10), float32],) */;
    %1043 = cast(%var_11371, dtype="int8") /* ty=Tensor[(1, 1584), int8] */;
    %1044 = cast(meta[relay.Constant][90] /* ty=Tensor[(2, 52), uint64] */, dtype="uint64") /* ty=Tensor[(2, 52), uint64] */;
    %1045 = reshape(%1043, newshape=[16, 9, 11]) /* ty=Tensor[(16, 9, 11), int8] */;
    %1046 = reshape(%1044, newshape=[104]) /* ty=Tensor[(104), uint64] */;
    %1047 = @func_9072(%1045, %1046) /* ty=(Tensor[(16, 9, 11), int8], Tensor[(5, 6, 13), bool], Tensor[(390, 1), bool], Tensor[(208), uint64], Tensor[(3), int8], Tensor[(104), uint64]) */;
    %1048 = cast(%var_11371, dtype="int8") /* ty=Tensor[(1, 1584), int8] */;
    %1049 = cast(meta[relay.Constant][91] /* ty=Tensor[(10, 1584), int8] */, dtype="int8") /* ty=Tensor[(10, 1584), int8] */;
    %1050 = %1042.0;
    %1051 = %1047.3;
    %1052 = right_shift(%1048, %1049) /* ty=Tensor[(10, 1584), int8] */;
    (%1050, %1051, meta[relay.Constant][90] /* ty=Tensor[(2, 52), uint64] */, %1052)
  };
  %1053(%var_11391) /* ty=(Tensor[(11, 11, 10), float32], Tensor[(208), uint64], Tensor[(2, 52), uint64], Tensor[(10, 1584), int8]) */
}

def @func_5586(%var_5581: Tensor[(4, 6, 3), float32], %var_5582: Tensor[(4, 6, 3), float32], %var_5583: Tensor[(4, 6, 3), float32], %var_5584: Tensor[(128), float64], %var_5585: Tensor[(576), int64]) -> (Tensor[(4, 6, 3), float32], Tensor[(4, 6, 3), bool], Tensor[(9, 16, 12), uint64], Tensor[(1728), uint64], Tensor[(128), float64], Tensor[(220), uint8], Tensor[(128), float64], Tensor[(576), int64], Tensor[(384), int16]) {
  %1085 = fn (%var_5541: Tensor[(4, 6, 3), float32], %var_5542: Tensor[(4, 6, 3), float32], %var_5547: Tensor[(4, 6, 3), float32], %var_5568: Tensor[(128), float64], %var_5569: Tensor[(576), int64]) -> (Tensor[(4, 6, 3), float32], Tensor[(4, 6, 3), bool], Tensor[(9, 16, 12), uint64], Tensor[(1728), uint64], Tensor[(128), float64], Tensor[(220), uint8], Tensor[(128), float64], Tensor[(576), int64], Tensor[(384), int16]) {
    %1054 = cast(%var_5542, dtype="float32") /* ty=Tensor[(4, 6, 3), float32] */;
    %1055 = shape_of(%var_5541, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1056 = cast(%var_5541, dtype="float32") /* ty=Tensor[(4, 6, 3), float32] */;
    %1057 = dyn.reshape(%1054, %1055, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1058 = cast(%var_5547, dtype="uint16") /* ty=Tensor[(4, 6, 3), uint16] */;
    %1059 = shape_of(%var_5541, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1060 = cast(%var_5541, dtype="uint16") /* ty=Tensor[(4, 6, 3), uint16] */;
    %1061 = dyn.reshape(%1058, %1059, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1062 = left_shift(%1060, %1061) /* ty=Tensor[(4, 6, 3), uint16] */;
    %1063 = cast(%var_5541, dtype="bool") /* ty=Tensor[(4, 6, 3), bool] */;
    %1064 = shape_of(%1062, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1065 = cast(%1062, dtype="bool") /* ty=Tensor[(4, 6, 3), bool] */;
    %1066 = dyn.reshape(%1063, %1064, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1067 = cast(meta[relay.Constant][92] /* ty=Tensor[(1728), uint64] */, dtype="uint64") /* ty=Tensor[(1728), uint64] */;
    %1068 = reshape(%1067, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), uint64] */;
    %1069 = @func_2312(%1068) /* ty=(Tensor[(9, 16, 12), uint64], Tensor[(9, 16, 12), int16], Tensor[(9, 16, 12), float32]) */;
    %1070 = cast(meta[relay.Constant][93] /* ty=Tensor[(220), uint8] */, dtype="uint8") /* ty=Tensor[(220), uint8] */;
    %1071 = cast(meta[relay.Constant][93] /* ty=Tensor[(220), uint8] */, dtype="uint8") /* ty=Tensor[(220), uint8] */;
    %1072 = cast(%var_5568, dtype="float64") /* ty=Tensor[(128), float64] */;
    %1073 = cast(%var_5569, dtype="int64") /* ty=Tensor[(576), int64] */;
    %1074 = cast(meta[relay.Constant][94] /* ty=Tensor[(384), int16] */, dtype="int16") /* ty=Tensor[(384), int16] */;
    %1075 = reshape(%1070, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), uint8] */;
    %1076 = reshape(%1071, newshape=[11, 5, 4]) /* ty=Tensor[(11, 5, 4), uint8] */;
    %1077 = reshape(%1072, newshape=[128]) /* ty=Tensor[(128), float64] */;
    %1078 = reshape(%1073, newshape=[144, 4]) /* ty=Tensor[(144, 4), int64] */;
    %1079 = reshape(%1074, newshape=[384]) /* ty=Tensor[(384), int16] */;
    %1080 = @func_1282(%1075, %1076, %1077, %1078, %1079) /* ty=(Tensor[(11, 5, 4), uint8], Tensor[(384), int16], Tensor[(128), float64], Tensor[(144, 4), int64], Tensor[(384), int16]) */;
    %1081 = floor_divide(%1056, %1057) /* ty=Tensor[(4, 6, 3), float32] */;
    %1082 = logical_and(%1065, %1066) /* ty=Tensor[(4, 6, 3), bool] */;
    %1083 = %1069.0;
    %1084 = %1080.2;
    (%1081, %1082, %1083, meta[relay.Constant][92] /* ty=Tensor[(1728), uint64] */, %1084, meta[relay.Constant][93] /* ty=Tensor[(220), uint8] */, %var_5568, %var_5569, meta[relay.Constant][94] /* ty=Tensor[(384), int16] */)
  };
  %1085(%var_5581, %var_5582, %var_5583, %var_5584, %var_5585) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(4, 6, 3), bool], Tensor[(9, 16, 12), uint64], Tensor[(1728), uint64], Tensor[(128), float64], Tensor[(220), uint8], Tensor[(128), float64], Tensor[(576), int64], Tensor[(384), int16]) */
}

def @func_10404() -> (Tensor[(2, 10, 12), float32], Tensor[(8, 6, 12), uint16], Tensor[(384, 1), int16], Tensor[(144, 4), uint32], Tensor[(700), int64], Tensor[(4, 12, 8), int16]) {
  @func_10402() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(8, 6, 12), uint16], Tensor[(384, 1), int16], Tensor[(144, 4), uint32], Tensor[(700), int64], Tensor[(4, 12, 8), int16]) */
}

def @func_12116() -> (Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32], Tensor[(4, 12), float64], Tensor[(384), int16]) {
  @func_12114() /* ty=(Tensor[(2, 10, 12), float32], Tensor[(11, 11, 10), float32], Tensor[(4, 12), float64], Tensor[(384), int16]) */
}

def @func_1289(%var_1284: Tensor[(11, 5, 4), uint8], %var_1285: Tensor[(11, 5, 4), uint8], %var_1286: Tensor[(128), float64], %var_1287: Tensor[(144, 4), int64], %var_1288: Tensor[(384), int16]) -> (Tensor[(11, 5, 4), uint8], Tensor[(384), int16], Tensor[(128), float64], Tensor[(144, 4), int64], Tensor[(384), int16]) {
  @func_1282(%var_1284, %var_1285, %var_1286, %var_1287, %var_1288) /* ty=(Tensor[(11, 5, 4), uint8], Tensor[(384), int16], Tensor[(128), float64], Tensor[(144, 4), int64], Tensor[(384), int16]) */
}

def @func_11079(%var_11071: bool) -> Tensor[(7, 3, 16), bool] {
  %1086 = cast(%var_11071, dtype="bool") /* ty=bool */;
  %1087 = cast(meta[relay.Constant][95] /* ty=Tensor[(7, 3, 16), bool] */, dtype="bool") /* ty=Tensor[(7, 3, 16), bool] */;
  logical_and(%1086, %1087) /* ty=Tensor[(7, 3, 16), bool] */
}

def @func_7510(%var_7508: Tensor[(10, 5, 14), int64], %var_7509: Tensor[(10, 5, 14), int64]) -> (Tensor[(10, 5, 14), int64], Tensor[(6, 1, 8), float64], Tensor[(2, 24), float64]) {
  %1096 = fn (%var_7465: Tensor[(10, 5, 14), int64], %var_7466: Tensor[(10, 5, 14), int64]) -> (Tensor[(10, 5, 14), int64], Tensor[(6, 1, 8), float64], Tensor[(2, 24), float64]) {
    %1088 = cast(%var_7466, dtype="int64") /* ty=Tensor[(10, 5, 14), int64] */;
    %1089 = shape_of(%var_7465, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1090 = cast(%var_7465, dtype="int64") /* ty=Tensor[(10, 5, 14), int64] */;
    %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1092 = cast(meta[relay.Constant][96] /* ty=Tensor[(2, 24), float64] */, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
    %1093 = reshape(%1092, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float64] */;
    %1094 = right_shift(%1090, %1091) /* ty=Tensor[(10, 5, 14), int64] */;
    %1095 = @func_1939(%1093) /* ty=Tensor[(6, 1, 8), float64] */;
    (%1094, %1095, meta[relay.Constant][96] /* ty=Tensor[(2, 24), float64] */)
  };
  %1096(%var_7508, %var_7509) /* ty=(Tensor[(10, 5, 14), int64], Tensor[(6, 1, 8), float64], Tensor[(2, 24), float64]) */
}

def @func_14830(%var_14757: Tensor[(14, 5, 11), float32], %var_14810: Tensor[(700), int64]) -> (Tensor[(14, 5, 11), int8], Tensor[(9, 16, 12), int16], Tensor[(1728), uint64], Tensor[(2, 24), float64], Tensor[(700), int64]) {
  %1097 = cast(%var_14757, dtype="float32") /* ty=Tensor[(14, 5, 11), float32] */;
  %1098 = acosh(%1097) /* ty=Tensor[(14, 5, 11), float32] */;
  %1099 = cast(%1098, dtype="int8") /* ty=Tensor[(14, 5, 11), int8] */;
  %1100 = shape_of(%var_14757, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1101 = cast(%var_14757, dtype="int8") /* ty=Tensor[(14, 5, 11), int8] */;
  %1102 = dyn.reshape(%1099, %1100, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1103 = cast(meta[relay.Constant][97] /* ty=Tensor[(1728), uint64] */, dtype="uint64") /* ty=Tensor[(1728), uint64] */;
  %1104 = reshape(%1103, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), uint64] */;
  %1105 = @func_2312(%1104) /* ty=(Tensor[(9, 16, 12), uint64], Tensor[(9, 16, 12), int16], Tensor[(9, 16, 12), float32]) */;
  %1106 = cast(%var_14810, dtype="int64") /* ty=Tensor[(700), int64] */;
  %1107 = cast(%var_14810, dtype="int64") /* ty=Tensor[(700), int64] */;
  %1108 = reshape(%1106, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
  %1109 = reshape(%1107, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), int64] */;
  %1110 = @func_7507(%1108, %1109) /* ty=(Tensor[(10, 5, 14), int64], Tensor[(6, 1, 8), float64], Tensor[(2, 24), float64]) */;
  %1111 = bitwise_or(%1101, %1102) /* ty=Tensor[(14, 5, 11), int8] */;
  %1112 = %1105.1;
  %1113 = %1110.2;
  (%1111, %1112, meta[relay.Constant][97] /* ty=Tensor[(1728), uint64] */, %1113, %var_14810)
}

def @func_10594() -> (Tensor[(11, 11, 10), float32],) {
  @func_10592() /* ty=(Tensor[(11, 11, 10), float32],) */
}

def @func_9217(%var_9214: Tensor[(5, 8, 4), int64], %var_9215: Tensor[(3), int8], %var_9216: Tensor[(104), uint64]) -> (Tensor[(5, 8, 4), int64], Tensor[(8, 2, 13), uint64], Tensor[(3), int8], Tensor[(104), uint64]) {
  %1125 = fn (%var_9197: Tensor[(5, 8, 4), int64], %var_9205: Tensor[(3), int8], %var_9206: Tensor[(104), uint64]) -> (Tensor[(5, 8, 4), int64], Tensor[(8, 2, 13), uint64], Tensor[(3), int8], Tensor[(104), uint64]) {
    %1114 = cast(meta[relay.Constant][98] /* ty=Tensor[(5, 8, 4), int64] */, dtype="int64") /* ty=Tensor[(5, 8, 4), int64] */;
    %1115 = shape_of(%var_9197, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1116 = cast(%var_9197, dtype="int64") /* ty=Tensor[(5, 8, 4), int64] */;
    %1117 = dyn.reshape(%1114, %1115, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1118 = cast(%var_9205, dtype="int8") /* ty=Tensor[(3), int8] */;
    %1119 = cast(%var_9206, dtype="uint64") /* ty=Tensor[(104), uint64] */;
    %1120 = reshape(%1118, newshape=[1, 3, 1]) /* ty=Tensor[(1, 3, 1), int8] */;
    %1121 = reshape(%1119, newshape=[104, 1]) /* ty=Tensor[(104, 1), uint64] */;
    %1122 = @func_6847(%1120, %1121) /* ty=(Tensor[(1, 3, 1), int8], Tensor[(8, 2, 13), uint64], Tensor[(104, 1), uint64], Tensor[(208), uint64], Tensor[(8, 2, 13), uint64]) */;
    %1123 = maximum(%1116, %1117) /* ty=Tensor[(5, 8, 4), int64] */;
    %1124 = %1122.4;
    (%1123, %1124, %var_9205, %var_9206)
  };
  %1125(%var_9214, %var_9215, %var_9216) /* ty=(Tensor[(5, 8, 4), int64], Tensor[(8, 2, 13), uint64], Tensor[(3), int8], Tensor[(104), uint64]) */
}

def @func_14621() -> (Tensor[(2, 10, 12), float32],) {
  @func_14619() /* ty=(Tensor[(2, 10, 12), float32],) */
}

def @func_13926(%var_13924: Tensor[(4, 396), int8], %var_13925: Tensor[(550), float32]) -> (Tensor[(2, 10, 12), float32], Tensor[(1, 10, 5), float64], Tensor[(5, 10), float64], Tensor[(390, 1), bool], Tensor[(4, 396), int8], Tensor[(110), float32], Tensor[(550), float32], Tensor[(784), float64]) {
  @func_13922(%var_13924, %var_13925) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(1, 10, 5), float64], Tensor[(5, 10), float64], Tensor[(390, 1), bool], Tensor[(4, 396), int8], Tensor[(110), float32], Tensor[(550), float32], Tensor[(784), float64]) */
}

def @func_13297(%var_13294: Tensor[(49, 6), float64], %var_13295: int64, %var_13296: Tensor[(4, 12), float64]) -> (Tensor[(2, 10, 12), float32], Tensor[(48), float64], Tensor[(49, 6), float64], int64, Tensor[(4, 12), float64]) {
  %1136 = fn (%var_13276: Tensor[(49, 6), float64], %var_13277: int64, %var_13278: Tensor[(4, 12), float64]) -> (Tensor[(2, 10, 12), float32], Tensor[(48), float64], Tensor[(49, 6), float64], int64, Tensor[(4, 12), float64]) {
    %1126 = @func_13264() /* ty=(Tensor[(11, 11, 10), float32], Tensor[(2, 10, 12), float32], Tensor[(104), uint64]) */;
    %1127 = cast(%var_13276, dtype="float64") /* ty=Tensor[(49, 6), float64] */;
    %1128 = cast(%var_13277, dtype="int64") /* ty=int64 */;
    %1129 = cast(%var_13278, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
    %1130 = reshape(%1127, newshape=[7, 3, 14]) /* ty=Tensor[(7, 3, 14), float64] */;
    %1131 = reshape(%1128, newshape=[]) /* ty=int64 */;
    %1132 = reshape(%1129, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %1133 = @func_5498(%1130, %1131, %1132) /* ty=(Tensor[(7, 3, 14), float64], Tensor[(48), float64], int64, Tensor[(1568), int64], Tensor[(48), float64]) */;
    %1134 = %1126.1;
    %1135 = %1133.4;
    (%1134, %1135, %var_13276, %var_13277, %var_13278)
  };
  %1136(%var_13294, %var_13295, %var_13296) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(48), float64], Tensor[(49, 6), float64], int64, Tensor[(4, 12), float64]) */
}

def @func_9971() -> (Tensor[(11, 11, 10), float32],) {
  %1137 = @func_9411() /* ty=Tensor[(11, 11, 10), float32] */;
  (%1137,)
}

def @func_10374() -> (Tensor[(11, 11, 10), float32],) {
  %1139 = fn () -> (Tensor[(11, 11, 10), float32],) {
    %1138 = @func_10250() /* ty=Tensor[(11, 11, 10), float32] */;
    (%1138,)
  };
  %1139() /* ty=(Tensor[(11, 11, 10), float32],) */
}

def @func_13922(%var_13909: Tensor[(4, 396), int8], %var_13911: Tensor[(550), float32]) -> (Tensor[(2, 10, 12), float32], Tensor[(1, 10, 5), float64], Tensor[(5, 10), float64], Tensor[(390, 1), bool], Tensor[(4, 396), int8], Tensor[(110), float32], Tensor[(550), float32], Tensor[(784), float64]) {
  %1140 = cast(meta[relay.Constant][99] /* ty=Tensor[(5, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 10), float64] */;
  %1141 = reshape(%1140, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
  %1142 = cast(%var_13909, dtype="int8") /* ty=Tensor[(4, 396), int8] */;
  %1143 = cast(meta[relay.Constant][100] /* ty=Tensor[(110), float32] */, dtype="float32") /* ty=Tensor[(110), float32] */;
  %1144 = cast(%var_13911, dtype="float32") /* ty=Tensor[(550), float32] */;
  %1145 = cast(meta[relay.Constant][101] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
  %1146 = reshape(%1142, newshape=[1584, 1]) /* ty=Tensor[(1584, 1), int8] */;
  %1147 = reshape(%1143, newshape=[110]) /* ty=Tensor[(110), float32] */;
  %1148 = reshape(%1144, newshape=[550]) /* ty=Tensor[(550), float32] */;
  %1149 = reshape(%1145, newshape=[784]) /* ty=Tensor[(784), float64] */;
  %1150 = @func_9362(%1146, %1147, %1148, %1149) /* ty=(Tensor[(2, 10, 12), float32], Tensor[(390, 1), bool], Tensor[(1584, 104), float64], Tensor[(1584, ?), float64], Tensor[(7, 14, 8), float64], Tensor[(110), float32], Tensor[(550), float32], Tensor[(784), float64]) */;
  %1151 = @func_9247() /* ty=Tensor[(2, 10, 12), float32] */;
  %1152 = @func_9867(%1141) /* ty=Tensor[(1, 10, 5), float64] */;
  %1153 = %1150.1;
  (%1151, %1152, meta[relay.Constant][99] /* ty=Tensor[(5, 10), float64] */, %1153, %var_13909, meta[relay.Constant][100] /* ty=Tensor[(110), float32] */, %var_13911, meta[relay.Constant][101] /* ty=Tensor[(784), float64] */)
}

def @func_14873() -> Tensor[(11, 11, 10), float32] {
  @func_14871() /* ty=Tensor[(11, 11, 10), float32] */
}

def @func_9389() -> Tensor[(2, 10, 12), float32] {
  @func_9247() /* ty=Tensor[(2, 10, 12), float32] */
}

def @func_12425(%var_12424: Tensor[(2, 10, 12), float32]) -> (Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float64], Tensor[(208), uint64], Tensor[(1584), int8], Tensor[(104), uint64]) {
  %1168 = fn (%var_12402: Tensor[(2, 10, 12), float32]) -> (Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float64], Tensor[(208), uint64], Tensor[(1584), int8], Tensor[(104), uint64]) {
    %1154 = @func_10281() /* ty=Tensor[(2, 10, 12), float32] */;
    %1155 = cast(%var_12402, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
    %1156 = shape_of(%1154, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1157 = cast(%1154, dtype="bool") /* ty=Tensor[(2, 10, 12), bool] */;
    %1158 = dyn.reshape(%1155, %1156, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1159 = cast(%1154, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
    %1160 = cast(meta[relay.Constant][102] /* ty=Tensor[(1584), int8] */, dtype="int8") /* ty=Tensor[(1584), int8] */;
    %1161 = cast(meta[relay.Constant][103] /* ty=Tensor[(104), uint64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
    %1162 = reshape(%1160, newshape=[16, 9, 11]) /* ty=Tensor[(16, 9, 11), int8] */;
    %1163 = reshape(%1161, newshape=[104]) /* ty=Tensor[(104), uint64] */;
    %1164 = @func_9072(%1162, %1163) /* ty=(Tensor[(16, 9, 11), int8], Tensor[(5, 6, 13), bool], Tensor[(390, 1), bool], Tensor[(208), uint64], Tensor[(3), int8], Tensor[(104), uint64]) */;
    %1165 = logical_or(%1157, %1158) /* ty=Tensor[(2, 10, 12), bool] */;
    %1166 = rsqrt(%1159) /* ty=Tensor[(2, 10, 12), float64] */;
    %1167 = %1164.3;
    (%1165, %1166, %1167, meta[relay.Constant][102] /* ty=Tensor[(1584), int8] */, meta[relay.Constant][103] /* ty=Tensor[(104), uint64] */)
  };
  %1168(%var_12424) /* ty=(Tensor[(2, 10, 12), bool], Tensor[(2, 10, 12), float64], Tensor[(208), uint64], Tensor[(1584), int8], Tensor[(104), uint64]) */
}

def @func_3461(%var_3459: Tensor[(12, 5, 1), float32], %var_3460: Tensor[(4, 12), float64]) -> (Tensor[(12, 5, ?), int64], Tensor[(6, 1, 8), float64], Tensor[(1568), int64], Tensor[(4, 12), float64]) {
  %1185 = fn (%var_3408: Tensor[(12, 5, 1), float32], %var_3445: Tensor[(4, 12), float64]) -> (Tensor[(12, 5, ?), int64], Tensor[(6, 1, 8), float64], Tensor[(1568), int64], Tensor[(4, 12), float64]) {
    %1169 = cast(7.58121f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1170 = cast(%var_3408, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
    %1171 = mod(%1169, %1170) /* ty=Tensor[(12, 5, 1), float32] */;
    %1172 = cast(%1171, dtype="int64") /* ty=Tensor[(12, 5, 1), int64] */;
    %1173 = shape_of(%var_3408, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1174 = cast(%var_3408, dtype="int64") /* ty=Tensor[(12, 5, 1), int64] */;
    %1175 = dyn.reshape(%1172, %1173, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1176 = cast(7.58121f /* ty=float32 */, dtype="int64") /* ty=int64 */;
    %1177 = cast(meta[relay.Constant][104] /* ty=Tensor[(1568), int64] */, dtype="int64") /* ty=Tensor[(1568), int64] */;
    %1178 = cast(%var_3445, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
    %1179 = reshape(%1176, newshape=[]) /* ty=int64 */;
    %1180 = reshape(%1177, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), int64] */;
    %1181 = reshape(%1178, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %1182 = @func_2909(%1179, %1180, %1181) /* ty=(Tensor[(14, 7, 16), int64], Tensor[(6, 1, 8), float64], Tensor[(48), float64]) */;
    %1183 = multiply(%1174, %1175) /* ty=Tensor[(12, 5, ?), int64] */;
    %1184 = %1182.1;
    (%1183, %1184, meta[relay.Constant][104] /* ty=Tensor[(1568), int64] */, %var_3445)
  };
  %1185(%var_3459, %var_3460) /* ty=(Tensor[(12, 5, ?), int64], Tensor[(6, 1, 8), float64], Tensor[(1568), int64], Tensor[(4, 12), float64]) */
}

def @func_7461(%var_7459: Tensor[(13, 10, 4), int32], %var_7460: Tensor[(13, 10, 4), int32]) -> (Tensor[(13, 10, 4), int32],) {
  %1191 = fn (%var_7451: Tensor[(13, 10, 4), int32], %var_7452: Tensor[(13, 10, 4), int32]) -> (Tensor[(13, 10, 4), int32],) {
    %1186 = cast(%var_7452, dtype="int32") /* ty=Tensor[(13, 10, 4), int32] */;
    %1187 = shape_of(%var_7451, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1188 = cast(%var_7451, dtype="int32") /* ty=Tensor[(13, 10, 4), int32] */;
    %1189 = dyn.reshape(%1186, %1187, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1190 = bitwise_xor(%1188, %1189) /* ty=Tensor[(13, 10, 4), int32] */;
    (%1190,)
  };
  %1191(%var_7459, %var_7460) /* ty=(Tensor[(13, 10, 4), int32],) */
}

def @func_6708(%var_6706: Tensor[(6, 15, 10), float32], %var_6707: Tensor[(208), uint64]) -> (Tensor[(6, 15, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(104), uint64], Tensor[(208), uint64]) {
  @func_6704(%var_6706, %var_6707) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(8, 6, 12), uint16], Tensor[(104), uint64], Tensor[(208), uint64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen765/build/output.py:2813: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen765/build/output.py", line 2818, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(400) tvmgen_default_fused_sqrt_cast_sinh_kernel0(float* __restrict__ T_sinh, double* __restrict__ placeholder) {
  T_sinh[(((int)threadIdx.x))] = sinhf(((float)sqrt(placeholder[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


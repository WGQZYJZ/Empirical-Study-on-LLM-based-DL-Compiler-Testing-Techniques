import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_195 = relay.const([[[-8,10,-1,1,4,9,8,-9,4,6,10,1],[1,-4,10,8,4,-1,-6,4,-4,2,-9,-8],[-8,-6,-10,-4,8,5,-1,-5,-2,1,-9,-10],[2,-2,6,-5,-6,5,-8,10,-8,-4,-7,-5],[5,9,-4,8,2,6,-2,2,-2,6,5,-5],[-9,1,8,-5,5,1,-2,5,9,-1,2,8]],[[2,5,-8,-8,9,-2,-7,-4,-10,2,-1,7],[-8,-2,-4,6,6,1,2,-2,-3,10,1,2],[6,-3,-1,-1,-9,-9,5,6,7,-5,1,1],[-2,-1,2,2,9,9,6,-7,2,7,-1,9],[2,-6,1,-6,8,-6,3,2,-5,-2,-10,-5],[4,10,-7,-3,4,2,7,-8,7,7,4,-2]],[[8,-10,-2,1,-9,1,-1,-2,4,-10,-4,-7],[-4,1,-4,7,-6,2,-3,3,-5,5,7,-1],[-5,-3,1,10,-6,5,3,-4,10,6,-1,5],[-1,4,-2,-10,-5,-6,5,-4,-6,-3,-1,-7],[-2,-6,9,-9,-6,10,-5,4,7,10,7,-5],[3,1,2,6,-8,7,6,10,6,-9,-4,4]],[[-5,3,8,-5,5,-6,-4,1,7,-1,-3,-4],[-3,-1,-5,8,9,2,-1,-8,-4,3,7,10],[-3,6,2,-6,-10,-3,2,-5,-5,6,-7,-4],[7,7,-3,-7,-7,-6,-2,3,-7,-6,-6,-10],[9,8,-10,-7,10,-2,-10,-3,3,-6,-2,-6],[-3,-10,3,-1,5,10,-4,2,-10,10,5,-9]],[[-5,-3,1,-7,-2,-5,-6,9,10,7,-6,-9],[-5,-6,-2,-1,9,-3,-5,-7,7,4,-10,5],[4,-5,10,5,-3,-8,-6,-2,-2,5,5,-6],[6,8,-3,-8,-6,7,7,3,-3,-4,7,3],[-3,9,-2,4,5,4,4,6,4,-6,-5,2],[-8,-6,4,-8,-8,7,-4,-8,1,-8,3,-7]],[[-5,-2,1,-8,-10,-6,4,1,3,-3,-7,5],[-2,-4,-6,6,3,-2,9,5,-6,4,-5,1],[-1,6,-5,7,-3,-4,4,-10,7,-3,-4,8],[9,10,-8,-3,-7,-8,-9,2,10,9,-8,-2],[3,-3,-4,-6,6,-9,7,3,1,8,8,2],[-8,3,3,2,3,-2,-10,-1,6,-9,4,-9]],[[-3,6,7,-1,-2,10,2,-1,9,5,6,6],[-8,5,6,6,8,-3,4,9,-10,1,-3,8],[-8,3,-9,-5,1,8,3,9,7,-8,7,7],[8,-1,2,5,4,-3,-7,9,-8,7,2,5],[-9,-2,-2,-6,-7,-3,8,-9,8,-5,-2,-2],[3,4,-5,-7,-1,1,-8,-4,-3,5,5,-2]],[[-8,7,-3,-2,8,2,-4,8,-7,-7,-3,1],[-7,7,-10,4,-8,-10,10,7,-8,9,-1,-5],[5,5,-2,6,-1,-1,4,9,-6,2,10,2],[-2,8,-10,-2,-7,-3,-1,8,3,-3,5,-8],[-2,5,-2,10,9,-7,-4,-2,-6,-10,5,1],[7,5,-9,-1,5,-2,2,-3,3,10,1,-8]]], dtype = "int64")#candidate|195|(8, 6, 12)|const|int64
var_196 = relay.var("var_196", dtype = "int64", shape = (8, 6, 12))#candidate|196|(8, 6, 12)|var|int64
bop_197 = relay.greater(const_195.astype('bool'), relay.reshape(var_196.astype('bool'), relay.shape_of(const_195))) # shape=(8, 6, 12)
uop_213 = relay.acosh(bop_197.astype('float64')) # shape=(8, 6, 12)
uop_225 = relay.acos(var_196.astype('float64')) # shape=(8, 6, 12)
const_247 = relay.const([[[4.644469,4.558041,4.569315,7.488422,-5.541186,-8.111108,2.070610,-8.331735,3.057381,-8.269950,5.806314,-5.305274],[1.233472,0.855967,-6.867142,2.692198,-5.668181,-7.788580,-4.423953,-6.385961,-7.132099,4.432648,4.805695,-2.511125],[7.833085,4.509684,6.309405,-1.474004,-3.172997,2.728712,-4.754451,-7.769504,0.081296,-8.022916,-0.802230,0.398802],[-8.384583,-4.321684,-8.019759,-5.622079,-5.979348,-9.896810,0.954676,-7.900001,-0.045872,-1.608466,-8.533816,-8.869658],[9.246277,-7.260978,7.932297,-7.216796,-1.276862,-7.212848,2.153694,-8.633007,-2.107932,-8.949659,4.425796,2.465857],[-2.535548,7.268355,-0.974953,-2.373633,-3.952747,1.610265,-5.907857,0.885493,9.988898,-8.723090,-5.396544,-5.691790]],[[4.891812,-9.021826,4.967073,1.850757,3.316181,5.558502,-2.911493,-7.758554,-3.666497,-5.470048,0.039029,4.720991],[7.780548,-2.215686,-4.025113,-9.968857,0.847301,3.141149,-6.119016,-6.339017,8.647742,2.891788,8.953022,-9.011444],[-2.152349,4.813415,1.432272,-2.424791,-8.108583,-5.995555,1.722810,-6.541291,-0.216468,8.183940,-4.475837,-9.193633],[1.543800,5.869095,9.577633,-6.644825,3.632786,-3.224081,-5.536325,4.053727,1.047736,-9.564525,2.507543,0.444523],[-4.430230,-1.049585,-2.521807,-0.769868,0.854958,-9.007554,5.619636,-8.452404,-8.573900,0.512761,9.796699,5.720647],[6.734691,4.935040,1.478307,-6.919818,5.662159,-4.670122,4.301176,-0.998031,6.317420,-5.239885,6.636845,7.593271]],[[1.680756,9.266755,3.443813,8.827537,-3.356160,5.707003,2.487764,2.258586,3.373687,-2.470698,-3.660624,4.357706],[4.134861,-1.814066,-8.778180,8.779424,7.764946,-4.968576,5.231941,1.979713,-4.766384,2.582455,-7.283876,-0.507698],[0.868981,-9.780147,9.913591,1.251359,1.939087,-6.112154,8.823707,4.062404,-7.751299,3.293482,0.564087,3.364443],[-9.809615,3.133657,7.745103,-6.518256,-3.164542,-2.132709,-5.230258,9.145134,8.913472,2.709650,9.513029,9.467224],[-4.910390,0.543079,5.805805,2.812989,-1.611920,-2.438978,-1.629458,-2.349813,-1.217745,1.562922,-6.435239,-2.218314],[-6.026483,-5.655703,7.063546,2.224911,-4.544080,5.020825,5.622161,4.534977,-0.522869,0.859502,-3.091006,5.951081]],[[-0.792408,7.637151,1.626022,-6.415664,0.084748,8.882477,4.930229,-7.069179,-9.032530,1.263338,-2.013591,8.456884],[9.843810,-8.552407,-4.812184,-1.115260,-5.515903,8.106001,5.406064,7.564096,-4.306035,4.457021,7.132867,9.061935],[-5.704027,0.183360,-7.207521,3.594569,1.252808,6.972230,7.376612,-1.852879,-3.580271,-6.611520,5.503633,-3.300701],[-5.025010,6.927891,-7.982122,6.206799,-6.698913,7.066004,7.359819,-4.303914,-7.978320,-6.003473,3.643895,6.793136],[-8.398105,1.632895,4.257137,0.733747,-4.270528,2.522165,-0.113655,0.386695,5.350186,7.065679,0.661675,4.587921],[4.804108,8.203986,-2.044786,-2.311259,-8.207087,0.152736,-3.361794,-5.527473,3.743942,0.948821,-2.723951,-3.887234]],[[3.834162,9.865031,7.800824,0.007970,-3.682756,2.720292,7.556557,-2.815536,-2.578418,-5.252743,-2.382133,9.476854],[-7.435304,5.880965,9.986933,6.320334,4.825188,2.707782,1.675169,-9.667590,2.412163,8.201081,9.816099,0.543128],[4.911585,-3.668598,-1.696336,4.002570,-4.094588,4.202163,7.584933,1.059841,1.713808,7.091155,0.729544,1.961037],[-1.444114,4.950692,-7.156346,5.135069,-4.739291,9.047066,6.035827,-7.196903,-8.244057,7.368045,-7.151019,-6.942650],[2.289774,-7.380760,0.190748,8.526325,-7.005883,-7.831312,4.591851,-0.132508,3.335143,-4.681338,4.399527,4.212959],[3.512710,8.656478,1.541274,9.251818,9.833376,5.124788,9.635389,-9.579159,7.841966,-3.915450,-7.330408,7.161775]],[[2.752665,-7.317765,-5.135126,-6.406641,-6.990522,7.593171,6.341619,-4.427662,-0.898912,-2.350077,3.445773,-8.201101],[6.191328,9.554097,1.576085,0.100957,0.143364,2.152599,5.501224,1.388676,0.062360,2.195353,0.395597,-3.860750],[5.290035,-2.600179,8.232035,-7.453506,7.241964,4.900714,-8.206550,3.900557,-9.530709,1.056781,-3.979830,-6.062945],[9.512987,1.400129,6.492699,-3.635475,-1.273602,1.523141,3.974891,-1.315633,-8.974191,-7.407031,-5.897729,-6.248139],[-3.036598,9.555243,-6.395449,2.929404,4.888430,-4.510406,-3.356436,-2.136463,4.695764,-6.496614,0.999012,-9.841223],[-1.949549,-1.117846,-3.613038,-1.017405,-5.608092,-5.929051,2.952931,-2.565084,-3.804833,8.952280,9.564336,9.620859]],[[-0.256615,-8.899486,-1.735634,0.336940,9.906641,6.115707,-8.750111,-1.454977,6.276420,0.065930,-7.595011,-7.038566],[-7.467198,2.837278,4.832065,0.347985,8.602725,9.151632,-6.076962,-2.778558,-2.440906,1.409380,2.632921,2.085315],[-4.346220,3.881274,-6.019524,6.820624,-3.075688,-2.709595,5.542759,4.983461,0.419626,-6.909054,8.780307,5.004794],[9.094507,-6.781557,0.365958,0.790335,-0.566306,-6.513134,-3.353557,2.609295,7.229497,-6.034898,8.393822,2.453931],[-2.686024,-9.037083,-9.156223,0.585584,5.791153,2.506674,4.886231,-1.373912,1.107291,-2.747271,0.126252,-7.558982],[-2.780109,6.288664,-9.617535,-4.444635,6.818508,-2.752511,6.483529,0.657535,8.909013,6.486941,7.464827,-0.462453]],[[-3.414759,5.829839,1.837262,-5.405457,-3.208784,6.951278,-3.915985,-5.942038,7.920106,-8.836004,-9.183454,6.189786],[-4.888738,1.165707,-9.920161,-2.154230,-2.869290,-3.713202,-9.068102,6.312965,1.105323,6.107685,1.307723,5.133955],[6.075066,1.509345,5.809855,1.661934,7.036537,8.413468,7.104415,-5.715772,3.370483,5.962673,-7.049601,7.740963],[9.373379,4.512207,-7.755182,1.209703,-6.699808,8.902210,1.607903,0.091073,6.824164,1.713485,9.224048,3.734733],[-5.677581,-3.067497,4.218637,-2.099407,-1.610188,1.140854,-0.179478,-6.245142,0.295662,-6.583690,5.487106,3.996093],[7.505621,7.813403,9.676130,1.917651,9.023152,-4.194783,5.113229,0.555302,-5.303211,-4.263554,-9.648497,-7.904826]]], dtype = "float64")#candidate|247|(8, 6, 12)|const|float64
bop_248 = relay.bitwise_and(uop_225.astype('uint16'), relay.reshape(const_247.astype('uint16'), relay.shape_of(uop_225))) # shape=(8, 6, 12)
output = relay.Tuple([uop_213,bop_248,])
output2 = relay.Tuple([uop_213,bop_248,])
func_254 = relay.Function([var_196,], output)
mod['func_254'] = func_254
mod = relay.transform.InferType()(mod)
var_255 = relay.var("var_255", dtype = "int64", shape = (8, 6, 12))#candidate|255|(8, 6, 12)|var|int64
output = func_254(var_255)
func_256 = relay.Function([var_255], output)
mutated_mod['func_256'] = func_256
mutated_mod = relay.transform.InferType()(mutated_mod)
var_661 = relay.var("var_661", dtype = "int16", shape = (4, 12, 8))#candidate|661|(4, 12, 8)|var|int16
var_662 = relay.var("var_662", dtype = "int16", shape = (4, 12, 8))#candidate|662|(4, 12, 8)|var|int16
bop_663 = relay.logical_xor(var_661.astype('int16'), relay.reshape(var_662.astype('int16'), relay.shape_of(var_661))) # shape=(4, 12, 8)
func_254_call = mod.get_global_var('func_254')
func_256_call = mutated_mod.get_global_var('func_256')
const_671 = relay.const([3,-3,-4,9,7,6,5,-2,10,-4,8,-2,-2,3,-1,7,10,-8,6,6,-1,-5,8,-5,-1,-5,6,4,-2,-9,3,6,5,8,1,-7,8,-9,3,-7,2,-5,-9,-6,6,-3,-1,-4,3,8,-8,6,-10,2,-10,-8,-9,3,-2,1,4,6,-5,10,2,3,6,6,6,-7,-5,1,8,5,2,-7,-2,-10,3,6,-1,-9,-8,-10,3,3,2,5,7,-9,6,3,-1,4,6,-1,-8,-1,5,3,1,-7,9,5,2,4,2,-5,-4,-8,10,7,-10,-4,-2,-5,10,-7,6,4,-6,7,8,2,4,10,9,-9,8,6,-8,-4,-6,9,1,-3,4,8,5,-3,7,-10,3,-7,-3,-2,7,3,-4,-7,-10,3,-2,7,10,6,-3,6,-6,-8,8,-3,-3,8,9,-4,8,2,-8,-7,8,6,10,9,4,6,-7,-9,-7,8,4,6,9,4,-6,-6,4,8,-3,-9,-6,3,8,-4,8,-1,-3,-6,5,-10,1,-7,-9,9,4,10,-7,-3,-4,-7,8,7,-5,6,3,2,3,8,-6,3,-7,10,-6,8,-10,2,-5,9,-2,-9,-2,-10,10,-6,-5,6,2,5,-9,-9,9,6,10,3,10,-8,5,-7,4,-9,2,2,-1,3,-1,10,-4,6,-2,8,3,6,4,2,9,-8,9,7,10,-2,4,2,8,2,7,2,7,-9,-3,8,2,-3,9,-1,-1,9,6,-1,-9,4,6,9,8,-2,-7,-1,10,2,-5,6,7,-9,-7,9,7,4,-3,-5,-1,2,-1,8,8,-9,-2,-8,10,-6,-10,-5,-10,8,-1,6,4,-1,10,4,-9,10,-8,2,8,7,5,-4,-10,-10,-7,-5,4,-6,7,-4,-7,-10,5,-4,-2,-10,2,3,8,5,2,8,7,-2,-8,-3,-3,9,-6,4,4,4,9,8,-1,-5,-4,-10,-9,-7,1,1,4,-3,-2,8,-10,-2,10,-6,-2,5,-4,-8,7,9,7,1,1,-10,2,9,-10,3,-8,4,-10,5,-6,-6,-10,3,8,-7,-2,9,4,-8,-8,8,-9,-5,1,-4,5,-2,-6,2,-10,2,5,6,9,8,4,-3,-6,2,10,-8,8,2,6,-10,3,10,3,-9,-1,-10,-3,-8,3,8,-7,-2,8,-1,-8,-3,-2,8,1,10,4,-9,-4,6,8,-3,-2,-2,-9,-5,3,-7,-2,-2,2,-7,1,3,-2,5,5,-4,4,-7,10,-1,9,10,3,-4,-4,-1,-6,10,-5,7,2,-5,9,1,-4,-4,10,-4,-6,8,-1,4,-5,-7,-9,8,-6,-10,-7,-6,-5,5,2,10,2,-7,9,2,8,-4,-2,10,9,4,-3,8,9,-1,3,-1,9,7,3,-4,9,-8,2,10,8,-7,4,-6,7,6,-1,4,-8,2,2,-10,3,1,-6,9,5,-4,1,2,1,9,-6,6,6,5,3,9,3,-3,3,4,8,-8], dtype = "int64")#candidate|671|(576,)|const|int64
call_670 = relay.TupleGetItem(func_254_call(relay.reshape(const_671.astype('int64'), [8, 6, 12])), 1)
call_672 = relay.TupleGetItem(func_256_call(relay.reshape(const_671.astype('int64'), [8, 6, 12])), 1)
func_254_call = mod.get_global_var('func_254')
func_256_call = mutated_mod.get_global_var('func_256')
call_675 = relay.TupleGetItem(func_254_call(relay.reshape(const_671.astype('int64'), [8, 6, 12])), 1)
call_676 = relay.TupleGetItem(func_256_call(relay.reshape(const_671.astype('int64'), [8, 6, 12])), 1)
func_254_call = mod.get_global_var('func_254')
func_256_call = mutated_mod.get_global_var('func_256')
call_678 = relay.TupleGetItem(func_254_call(relay.reshape(call_675.astype('int64'), [8, 6, 12])), 0)
call_679 = relay.TupleGetItem(func_256_call(relay.reshape(call_675.astype('int64'), [8, 6, 12])), 0)
output = relay.Tuple([bop_663,call_670,const_671,call_675,call_678,])
output2 = relay.Tuple([bop_663,call_672,const_671,call_676,call_679,])
func_683 = relay.Function([var_661,var_662,], output)
mod['func_683'] = func_683
mod = relay.transform.InferType()(mod)
var_684 = relay.var("var_684", dtype = "int16", shape = (4, 12, 8))#candidate|684|(4, 12, 8)|var|int16
var_685 = relay.var("var_685", dtype = "int16", shape = (4, 12, 8))#candidate|685|(4, 12, 8)|var|int16
output = func_683(var_684,var_685,)
func_686 = relay.Function([var_684,var_685,], output)
mutated_mod['func_686'] = func_686
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1102 = relay.var("var_1102", dtype = "float64", shape = (16, 2, 4))#candidate|1102|(16, 2, 4)|var|float64
uop_1103 = relay.asin(var_1102.astype('float64')) # shape=(16, 2, 4)
func_254_call = mod.get_global_var('func_254')
func_256_call = mutated_mod.get_global_var('func_256')
var_1107 = relay.var("var_1107", dtype = "int64", shape = (2, 288))#candidate|1107|(2, 288)|var|int64
call_1106 = relay.TupleGetItem(func_254_call(relay.reshape(var_1107.astype('int64'), [8, 6, 12])), 0)
call_1108 = relay.TupleGetItem(func_256_call(relay.reshape(var_1107.astype('int64'), [8, 6, 12])), 0)
func_683_call = mod.get_global_var('func_683')
func_686_call = mutated_mod.get_global_var('func_686')
var_1133 = relay.var("var_1133", dtype = "int16", shape = (384,))#candidate|1133|(384,)|var|int16
call_1132 = relay.TupleGetItem(func_683_call(relay.reshape(var_1133.astype('int16'), [4, 12, 8]), relay.reshape(var_1133.astype('int16'), [4, 12, 8]), ), 2)
call_1134 = relay.TupleGetItem(func_686_call(relay.reshape(var_1133.astype('int16'), [4, 12, 8]), relay.reshape(var_1133.astype('int16'), [4, 12, 8]), ), 2)
func_683_call = mod.get_global_var('func_683')
func_686_call = mutated_mod.get_global_var('func_686')
call_1135 = relay.TupleGetItem(func_683_call(relay.reshape(var_1133.astype('int16'), [4, 12, 8]), relay.reshape(var_1133.astype('int16'), [4, 12, 8]), ), 1)
call_1136 = relay.TupleGetItem(func_686_call(relay.reshape(var_1133.astype('int16'), [4, 12, 8]), relay.reshape(var_1133.astype('int16'), [4, 12, 8]), ), 1)
func_254_call = mod.get_global_var('func_254')
func_256_call = mutated_mod.get_global_var('func_256')
call_1137 = relay.TupleGetItem(func_254_call(relay.reshape(call_1135.astype('int64'), [8, 6, 12])), 0)
call_1138 = relay.TupleGetItem(func_256_call(relay.reshape(call_1135.astype('int64'), [8, 6, 12])), 0)
output = relay.Tuple([uop_1103,call_1106,var_1107,call_1132,var_1133,call_1135,call_1137,])
output2 = relay.Tuple([uop_1103,call_1108,var_1107,call_1134,var_1133,call_1136,call_1138,])
func_1141 = relay.Function([var_1102,var_1107,var_1133,], output)
mod['func_1141'] = func_1141
mod = relay.transform.InferType()(mod)
var_1142 = relay.var("var_1142", dtype = "float64", shape = (16, 2, 4))#candidate|1142|(16, 2, 4)|var|float64
var_1143 = relay.var("var_1143", dtype = "int64", shape = (2, 288))#candidate|1143|(2, 288)|var|int64
var_1144 = relay.var("var_1144", dtype = "int16", shape = (384,))#candidate|1144|(384,)|var|int16
output = func_1141(var_1142,var_1143,var_1144,)
func_1145 = relay.Function([var_1142,var_1143,var_1144,], output)
mutated_mod['func_1145'] = func_1145
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1263 = relay.var("var_1263", dtype = "uint8", shape = (11, 5, 4))#candidate|1263|(11, 5, 4)|var|uint8
var_1264 = relay.var("var_1264", dtype = "uint8", shape = (11, 5, 4))#candidate|1264|(11, 5, 4)|var|uint8
bop_1265 = relay.bitwise_or(var_1263.astype('uint8'), relay.reshape(var_1264.astype('uint8'), relay.shape_of(var_1263))) # shape=(11, 5, 4)
func_1141_call = mod.get_global_var('func_1141')
func_1145_call = mutated_mod.get_global_var('func_1145')
var_1276 = relay.var("var_1276", dtype = "float64", shape = (128,))#candidate|1276|(128,)|var|float64
var_1277 = relay.var("var_1277", dtype = "int64", shape = (144, 4))#candidate|1277|(144, 4)|var|int64
var_1278 = relay.var("var_1278", dtype = "int16", shape = (384,))#candidate|1278|(384,)|var|int16
call_1275 = relay.TupleGetItem(func_1141_call(relay.reshape(var_1276.astype('float64'), [16, 2, 4]), relay.reshape(var_1277.astype('int64'), [2, 288]), relay.reshape(var_1278.astype('int16'), [384,]), ), 4)
call_1279 = relay.TupleGetItem(func_1145_call(relay.reshape(var_1276.astype('float64'), [16, 2, 4]), relay.reshape(var_1277.astype('int64'), [2, 288]), relay.reshape(var_1278.astype('int16'), [384,]), ), 4)
output = relay.Tuple([bop_1265,call_1275,var_1276,var_1277,var_1278,])
output2 = relay.Tuple([bop_1265,call_1279,var_1276,var_1277,var_1278,])
func_1282 = relay.Function([var_1263,var_1264,var_1276,var_1277,var_1278,], output)
mod['func_1282'] = func_1282
mod = relay.transform.InferType()(mod)
mutated_mod['func_1282'] = func_1282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1282_call = mutated_mod.get_global_var('func_1282')
var_1284 = relay.var("var_1284", dtype = "uint8", shape = (11, 5, 4))#candidate|1284|(11, 5, 4)|var|uint8
var_1285 = relay.var("var_1285", dtype = "uint8", shape = (11, 5, 4))#candidate|1285|(11, 5, 4)|var|uint8
var_1286 = relay.var("var_1286", dtype = "float64", shape = (128,))#candidate|1286|(128,)|var|float64
var_1287 = relay.var("var_1287", dtype = "int64", shape = (144, 4))#candidate|1287|(144, 4)|var|int64
var_1288 = relay.var("var_1288", dtype = "int16", shape = (384,))#candidate|1288|(384,)|var|int16
call_1283 = func_1282_call(var_1284,var_1285,var_1286,var_1287,var_1288,)
output = call_1283
func_1289 = relay.Function([var_1284,var_1285,var_1286,var_1287,var_1288,], output)
mutated_mod['func_1289'] = func_1289
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1327 = relay.var("var_1327", dtype = "bool", shape = (5, 6, 13))#candidate|1327|(5, 6, 13)|var|bool
var_1328 = relay.var("var_1328", dtype = "bool", shape = (5, 6, 13))#candidate|1328|(5, 6, 13)|var|bool
bop_1329 = relay.logical_and(var_1327.astype('bool'), relay.reshape(var_1328.astype('bool'), relay.shape_of(var_1327))) # shape=(5, 6, 13)
output = bop_1329
output2 = bop_1329
func_1332 = relay.Function([var_1327,var_1328,], output)
mod['func_1332'] = func_1332
mod = relay.transform.InferType()(mod)
var_1333 = relay.var("var_1333", dtype = "bool", shape = (5, 6, 13))#candidate|1333|(5, 6, 13)|var|bool
var_1334 = relay.var("var_1334", dtype = "bool", shape = (5, 6, 13))#candidate|1334|(5, 6, 13)|var|bool
output = func_1332(var_1333,var_1334,)
func_1335 = relay.Function([var_1333,var_1334,], output)
mutated_mod['func_1335'] = func_1335
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1934 = relay.var("var_1934", dtype = "float64", shape = (6, 1, 8))#candidate|1934|(6, 1, 8)|var|float64
uop_1935 = relay.rsqrt(var_1934.astype('float64')) # shape=(6, 1, 8)
output = uop_1935
output2 = uop_1935
func_1939 = relay.Function([var_1934,], output)
mod['func_1939'] = func_1939
mod = relay.transform.InferType()(mod)
var_1940 = relay.var("var_1940", dtype = "float64", shape = (6, 1, 8))#candidate|1940|(6, 1, 8)|var|float64
output = func_1939(var_1940)
func_1941 = relay.Function([var_1940], output)
mutated_mod['func_1941'] = func_1941
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2262 = relay.var("var_2262", dtype = "uint64", shape = (9, 16, 12))#candidate|2262|(9, 16, 12)|var|uint64
const_2263 = relay.const([[[-2,-3,-6,-3,-4,9,3,2,4,2,1,3],[6,3,-8,5,5,10,-10,-8,-5,-6,3,-4],[1,7,2,8,-7,-4,-3,-6,-7,-10,1,-3],[4,-5,-9,-6,-7,-10,4,8,7,6,-1,10],[3,6,7,10,-9,10,4,-6,-10,-3,-6,-4],[1,5,-6,-1,-5,3,-6,-5,8,3,-3,6],[-7,6,7,6,-1,1,6,-8,-1,-4,6,2],[-9,7,-5,-5,-1,4,2,8,-3,-3,-3,9],[-4,2,6,-3,10,5,4,-6,3,-4,3,8],[-3,4,-4,1,-8,5,7,-7,1,-10,3,1],[-9,-1,-9,8,-2,7,5,-3,10,-5,9,4],[5,4,-4,-6,-1,5,5,-1,4,-2,-9,2],[-4,-8,10,-2,8,4,2,6,6,5,-5,-8],[-6,7,-7,5,-7,-4,-7,-1,2,-8,7,2],[-5,5,-3,8,7,-7,6,8,8,-10,10,-1],[-9,9,-3,1,7,-10,1,4,-5,2,6,5]],[[-2,9,8,-6,-9,5,5,-1,-2,-7,-9,10],[-3,-5,2,2,-5,-8,9,10,-9,1,10,10],[-5,6,-7,7,-7,-8,-2,-5,-9,10,6,-7],[6,1,-2,-10,8,-2,-2,-5,-3,10,-3,-4],[5,-10,5,-6,-7,-1,-7,-5,-6,-10,-6,-9],[-7,-4,-1,3,-2,7,-4,2,-1,8,3,3],[-8,10,-7,3,-8,-6,-3,5,6,7,-6,-1],[10,-4,-3,-4,9,7,3,-2,4,9,1,-5],[7,-8,8,9,9,3,-8,2,-1,5,-6,-6],[-9,10,-9,8,6,9,5,4,-9,5,5,7],[6,-1,-1,5,-2,-9,-9,-6,-4,10,1,5],[-2,1,8,5,-2,-8,-5,-2,-7,7,7,-2],[-8,-10,8,-3,6,10,-4,9,1,-10,2,5],[-10,-7,6,7,4,5,5,-4,1,-6,-9,2],[4,-8,1,-8,-6,9,-4,7,6,-2,9,-1],[-8,-7,3,6,-1,-6,8,7,-8,-7,5,-2]],[[6,-9,10,9,-8,-4,8,-2,4,5,-3,5],[9,6,6,4,-4,10,4,9,-6,6,-2,-4],[8,8,2,-5,-7,-6,8,6,-2,5,6,1],[-6,-7,-7,7,-2,9,10,6,4,10,-1,-6],[-3,-10,-7,-10,-2,-3,7,6,-7,-3,10,4],[-9,-8,3,5,6,-4,8,8,-10,-9,-1,6],[2,4,-9,8,5,8,1,-5,-9,-2,4,9],[10,-2,-4,10,-10,-10,7,6,-3,1,10,-2],[8,7,5,7,-5,10,-9,-7,-9,7,2,-7],[8,10,-7,-8,-8,6,-3,1,-5,-9,-3,5],[-1,5,4,8,-3,1,-1,-4,3,4,-6,6],[-6,-6,-9,-1,1,-6,2,-10,-4,-5,-1,-6],[1,-2,5,-6,1,1,3,2,10,3,-2,4],[-4,-1,-8,-9,8,-5,9,5,-5,10,8,2],[-10,9,7,-7,2,8,-6,-10,10,7,-9,9],[-9,-2,3,-7,10,-6,-9,8,3,-3,4,-5]],[[-1,2,-7,3,-2,-4,-8,7,-7,5,-7,7],[-10,1,6,-8,8,-6,-3,-10,-2,9,5,8],[-10,-8,-5,-7,7,-8,-3,1,-6,-8,-6,5],[3,9,-1,-2,1,8,-6,2,-4,-8,7,-10],[-6,6,-7,9,-3,9,-7,-7,-4,-6,-9,-6],[9,9,5,2,8,-3,-7,6,-3,5,8,10],[-6,-2,3,9,-6,-9,-10,4,9,2,2,-5],[2,8,-4,4,5,7,8,1,6,4,-2,-3],[-6,6,-2,-6,3,-6,2,-6,-8,6,-9,-9],[-8,-9,1,-1,7,-6,8,-3,6,5,1,-5],[-4,-4,-8,6,-6,-6,6,-6,5,-2,-4,4],[-4,7,2,-4,-3,-7,-3,-8,-9,10,4,-8],[7,-1,-5,-10,6,4,-9,4,1,4,-6,7],[-7,-3,-2,-9,1,10,7,-6,-9,-10,-3,2],[-10,9,9,3,2,6,-7,3,-4,-7,-2,3],[3,10,2,1,-10,-7,-6,-4,6,-2,-2,-2]],[[-7,7,-2,-1,-6,3,4,-9,2,-1,6,-7],[-3,5,4,-2,-6,10,-1,-3,1,4,-9,8],[-9,-10,-4,7,-7,-5,-10,2,7,-4,-1,5],[4,-7,-2,-4,6,6,-4,9,5,-2,10,3],[-4,-6,-7,-8,2,-3,2,7,-3,8,-8,-9],[-1,-2,-5,-8,3,5,-9,-2,-10,-7,-4,10],[1,-5,5,4,4,-6,-2,-7,10,-6,7,-10],[-10,-1,3,-2,-9,3,-4,9,2,9,2,8],[10,-1,-1,5,-7,-6,8,-3,8,3,3,-1],[9,-1,-6,3,3,4,-4,-5,-3,-3,2,8],[-4,-3,-2,3,4,2,-3,7,-8,9,-8,-5],[9,4,6,1,-2,6,-1,-5,3,5,4,-3],[1,-4,-8,1,-9,-9,8,6,6,-4,-10,-2],[-8,-10,-6,-5,-7,-7,-2,-4,-5,7,-5,-3],[-4,10,8,9,-8,10,-4,-3,6,7,10,8],[-4,-9,7,-2,9,-6,-3,-2,-6,4,-7,-2]],[[-7,-8,2,-2,-10,-7,-3,7,2,-8,8,5],[2,5,-6,-10,-8,2,4,-8,7,3,-6,-3],[-4,3,-8,-8,-10,10,4,3,-8,-3,10,-9],[9,-10,-2,5,-1,10,9,-2,4,6,-9,9],[-3,2,-4,-4,-10,-9,-5,-10,3,8,1,2],[9,1,-7,9,-3,-5,9,9,2,-6,2,-5],[-8,-6,2,-2,4,-3,4,-2,1,3,7,-1],[-1,7,-3,-6,-5,9,10,10,-9,-6,-5,1],[8,-5,-7,5,5,9,6,2,10,1,-5,4],[6,-8,-10,6,-2,-2,-9,-6,9,-6,-3,-6],[-10,-2,2,10,6,8,8,2,4,10,1,2],[5,4,-6,10,-9,-4,8,8,3,-2,9,2],[9,9,-10,-9,10,-3,-4,-4,-5,6,2,9],[-10,-8,-4,2,-2,1,-3,7,4,2,2,2],[6,-3,2,6,3,-8,-4,-10,3,-8,-4,2],[4,-7,-3,6,-7,-10,10,-10,1,10,10,2]],[[3,-10,7,-4,-7,9,-10,-9,-5,5,-4,10],[4,-1,-2,-8,4,-4,9,2,-7,-3,-8,-5],[1,10,-6,1,4,4,4,3,-7,9,-4,-1],[-3,-9,9,6,3,-5,10,-7,-7,-10,-3,3],[9,8,-4,-6,5,2,7,-4,-5,9,5,10],[9,7,5,1,-1,-9,8,-3,-9,7,-2,8],[9,5,-5,10,-4,-5,-8,-5,5,-5,7,6],[-5,-6,5,6,-1,-10,5,10,6,10,-4,-4],[-7,2,8,-4,2,-10,3,-10,7,3,-9,-3],[10,10,6,-3,-2,-9,-4,3,-2,-4,9,1],[6,-9,-9,-2,6,5,8,7,4,10,8,5],[-6,-6,4,10,1,5,-2,1,8,9,3,-6],[3,-4,-1,2,-9,-10,-6,-3,10,9,4,9],[7,8,4,-6,1,-10,2,-10,10,5,2,5],[5,-3,5,1,-10,3,-2,-2,10,7,-4,2],[-7,-10,-5,3,8,-1,8,4,-10,5,-5,-6]],[[1,-8,10,-8,6,-8,-2,3,4,4,5,-3],[4,-8,5,7,-9,10,4,-8,8,5,4,-2],[1,2,4,2,3,9,6,-5,-1,-6,-5,-7],[-10,-2,10,3,-8,9,2,9,1,-7,-4,-6],[9,9,-6,-6,-7,-1,10,10,10,-9,-1,10],[-6,1,-1,-6,8,-6,-4,-1,1,-9,5,-1],[7,9,-8,-9,8,-6,-6,-1,10,1,10,-4],[-5,3,10,-6,2,4,6,6,-3,3,7,-8],[-1,-8,2,-3,-4,-8,8,1,9,2,1,9],[10,-5,-6,-1,-1,-10,-2,-9,-9,3,9,7],[-1,5,-7,-6,-6,4,-6,-1,-8,10,-5,-10],[-4,-10,-9,4,8,-4,4,5,-2,4,-6,5],[-7,7,3,-6,10,-1,7,-9,-7,-3,4,2],[7,-4,-2,-8,-3,3,-2,-3,7,9,1,10],[-2,8,-8,-2,8,-7,-2,-1,2,10,-5,4],[7,7,-5,6,9,-5,-8,-2,-2,9,6,8]],[[-6,-1,1,4,-1,6,9,5,-7,4,7,2],[-7,-3,10,2,-10,-8,10,-9,-6,-7,6,-2],[-2,8,2,-9,2,-3,-5,-10,-10,8,-2,-1],[1,-1,1,1,10,5,1,1,9,-6,1,-1],[-4,-10,-5,5,10,4,1,-7,7,5,9,1],[-1,2,5,-4,-4,7,7,7,10,-9,7,2],[-9,1,-2,-5,1,7,-3,-5,5,-6,4,8],[-5,2,4,-3,2,2,-6,9,6,-3,6,6],[10,2,7,7,-10,1,7,-6,10,3,4,-3],[-7,-9,-6,4,7,1,7,-6,-9,10,5,-4],[-5,10,10,-10,-10,10,4,-6,-2,-6,7,8],[1,3,-6,-10,6,10,3,-3,-1,-1,-8,9],[-3,1,-1,5,6,9,-5,-3,-6,6,-5,4],[-3,4,-1,-5,1,4,4,-3,9,2,-10,-4],[-8,-8,1,-10,7,8,-8,-4,-9,-9,10,-3],[6,3,-10,2,9,-10,2,-7,-3,-8,-9,10]]], dtype = "uint64")#candidate|2263|(9, 16, 12)|const|uint64
bop_2264 = relay.add(var_2262.astype('uint64'), relay.reshape(const_2263.astype('uint64'), relay.shape_of(var_2262))) # shape=(9, 16, 12)
uop_2277 = relay.log10(const_2263.astype('float32')) # shape=(9, 16, 12)
bop_2289 = relay.minimum(var_2262.astype('int16'), relay.reshape(uop_2277.astype('int16'), relay.shape_of(var_2262))) # shape=(9, 16, 12)
uop_2302 = relay.sinh(uop_2277.astype('float32')) # shape=(9, 16, 12)
output = relay.Tuple([bop_2264,bop_2289,uop_2302,])
output2 = relay.Tuple([bop_2264,bop_2289,uop_2302,])
func_2312 = relay.Function([var_2262,], output)
mod['func_2312'] = func_2312
mod = relay.transform.InferType()(mod)
mutated_mod['func_2312'] = func_2312
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2313 = relay.var("var_2313", dtype = "uint64", shape = (9, 16, 12))#candidate|2313|(9, 16, 12)|var|uint64
func_2312_call = mutated_mod.get_global_var('func_2312')
call_2314 = func_2312_call(var_2313)
output = call_2314
func_2315 = relay.Function([var_2313], output)
mutated_mod['func_2315'] = func_2315
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2781 = relay.var("var_2781", dtype = "float64", shape = (7, 14, 8))#candidate|2781|(7, 14, 8)|var|float64
uop_2782 = relay.sigmoid(var_2781.astype('float64')) # shape=(7, 14, 8)
output = uop_2782
output2 = uop_2782
func_2801 = relay.Function([var_2781,], output)
mod['func_2801'] = func_2801
mod = relay.transform.InferType()(mod)
var_2802 = relay.var("var_2802", dtype = "float64", shape = (7, 14, 8))#candidate|2802|(7, 14, 8)|var|float64
output = func_2801(var_2802)
func_2803 = relay.Function([var_2802], output)
mutated_mod['func_2803'] = func_2803
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2869 = relay.var("var_2869", dtype = "int64", shape = ())#candidate|2869|()|var|int64
var_2870 = relay.var("var_2870", dtype = "int64", shape = (14, 7, 16))#candidate|2870|(14, 7, 16)|var|int64
bop_2871 = relay.left_shift(var_2869.astype('int64'), var_2870.astype('int64')) # shape=(14, 7, 16)
func_1939_call = mod.get_global_var('func_1939')
func_1941_call = mutated_mod.get_global_var('func_1941')
var_2883 = relay.var("var_2883", dtype = "float64", shape = (48,))#candidate|2883|(48,)|var|float64
call_2882 = func_1939_call(relay.reshape(var_2883.astype('float64'), [6, 1, 8]))
call_2884 = func_1939_call(relay.reshape(var_2883.astype('float64'), [6, 1, 8]))
output = relay.Tuple([bop_2871,call_2882,var_2883,])
output2 = relay.Tuple([bop_2871,call_2884,var_2883,])
func_2909 = relay.Function([var_2869,var_2870,var_2883,], output)
mod['func_2909'] = func_2909
mod = relay.transform.InferType()(mod)
var_2910 = relay.var("var_2910", dtype = "int64", shape = ())#candidate|2910|()|var|int64
var_2911 = relay.var("var_2911", dtype = "int64", shape = (14, 7, 16))#candidate|2911|(14, 7, 16)|var|int64
var_2912 = relay.var("var_2912", dtype = "float64", shape = (48,))#candidate|2912|(48,)|var|float64
output = func_2909(var_2910,var_2911,var_2912,)
func_2913 = relay.Function([var_2910,var_2911,var_2912,], output)
mutated_mod['func_2913'] = func_2913
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3105 = relay.var("var_3105", dtype = "int8", shape = (4, 14, 9))#candidate|3105|(4, 14, 9)|var|int8
const_3106 = relay.const([[[3,6,-4,2,7,-1,-4,9,9],[3,-7,7,-10,-5,10,-10,7,-7],[-5,10,10,4,-2,9,-9,3,1],[6,-9,-2,10,-4,-7,9,-1,-1],[10,-6,8,-2,-10,-7,-3,4,5],[-4,9,-1,10,-8,6,-3,7,-9],[-5,-4,-5,7,3,1,9,-2,-3],[5,-10,6,2,-4,-9,6,3,-10],[-2,-6,8,4,3,6,-8,9,3],[5,3,4,4,7,-9,-8,5,7],[-3,3,-8,10,-9,3,-4,-7,2],[10,-1,-5,-5,-3,-9,4,-3,8],[5,7,-6,-5,-1,-9,4,-8,6],[7,-10,-2,3,1,-2,-9,-6,2]],[[-7,4,1,-8,3,-10,-1,2,7],[10,-9,-8,-1,-9,-1,9,-10,-5],[-4,-8,1,8,4,5,2,-3,-8],[4,-8,-4,-6,9,6,8,7,9],[-3,1,-6,1,2,3,-7,-9,1],[-5,8,2,-8,-8,-6,6,-5,-9],[3,-1,5,7,10,-8,3,6,9],[-7,-10,-5,-1,8,-8,-7,6,-10],[-1,-5,-4,9,-8,9,5,-8,1],[3,-4,10,-5,-7,-6,-2,-5,-7],[1,8,-3,9,-3,2,2,-9,-4],[2,-7,-10,5,9,10,9,-4,-1],[4,-2,8,-2,-9,9,-10,-5,-8],[-8,-9,-3,5,-8,-8,5,-10,-8]],[[4,1,3,-9,10,7,-8,-3,6],[-6,9,-1,5,-9,-6,5,1,1],[7,4,-5,7,10,2,7,8,-2],[-3,6,3,-10,-9,-6,2,2,1],[1,-3,-8,-6,1,-1,2,1,5],[-9,4,-4,10,-4,-4,-2,-4,5],[-9,7,6,4,-1,7,1,-8,5],[5,-8,10,5,8,-6,-1,3,-5],[-5,8,-6,-9,10,-1,-9,-10,5],[-2,1,-10,-10,-10,-9,3,-5,-2],[-3,-7,-8,10,5,8,-10,-10,8],[-6,1,3,-2,-5,-7,-8,-8,7],[-1,7,7,-6,6,5,-8,-4,10],[10,-6,-9,-2,7,-1,-9,-9,10]],[[2,2,2,1,2,-8,3,-4,-4],[3,-9,-7,-5,5,-1,-10,9,-10],[-1,2,8,-4,9,-1,-1,7,7],[2,-10,-3,-2,-5,-7,5,-8,9],[-6,-7,1,5,4,-5,8,10,6],[1,10,-10,-1,-3,1,-4,-7,1],[-1,-3,10,8,5,6,-5,1,4],[-10,-6,5,9,2,2,-5,10,2],[5,-8,9,-2,-4,8,4,-3,5],[8,9,9,5,-8,1,7,-9,-6],[10,3,-3,-1,10,-7,-2,-8,-7],[4,-2,-9,4,9,-10,4,-5,3],[9,-6,8,6,10,-2,-3,-9,1],[-8,-3,-10,3,2,-2,-7,6,10]]], dtype = "int8")#candidate|3106|(4, 14, 9)|const|int8
bop_3107 = relay.bitwise_xor(var_3105.astype('int8'), relay.reshape(const_3106.astype('int8'), relay.shape_of(var_3105))) # shape=(4, 14, 9)
output = bop_3107
output2 = bop_3107
func_3112 = relay.Function([var_3105,], output)
mod['func_3112'] = func_3112
mod = relay.transform.InferType()(mod)
var_3113 = relay.var("var_3113", dtype = "int8", shape = (4, 14, 9))#candidate|3113|(4, 14, 9)|var|int8
output = func_3112(var_3113)
func_3114 = relay.Function([var_3113], output)
mutated_mod['func_3114'] = func_3114
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3207 = relay.var("var_3207", dtype = "uint64", shape = (8, 1, 13))#candidate|3207|(8, 1, 13)|var|uint64
var_3208 = relay.var("var_3208", dtype = "uint64", shape = (8, 2, 13))#candidate|3208|(8, 2, 13)|var|uint64
bop_3209 = relay.subtract(var_3207.astype('uint64'), var_3208.astype('uint64')) # shape=(8, 2, 13)
func_683_call = mod.get_global_var('func_683')
func_686_call = mutated_mod.get_global_var('func_686')
const_3213 = relay.const([5,6,6,-6,-6,-2,-10,10,-7,-1,4,8,-5,-4,-9,5,-1,-7,-10,1,10,10,-10,-1,1,-5,-6,-4,2,-9,4,-6,-6,-1,-7,-4,-6,8,3,2,-1,-8,9,-1,-1,-3,-4,-10,-3,-7,-3,-1,5,6,9,1,-6,9,4,-6,10,-10,10,7,4,8,-6,8,-8,-9,-4,-9,1,6,7,10,3,4,-3,9,-4,7,-5,1,-1,10,-1,6,6,9,3,-3,-1,-10,-5,-4,-5,10,5,-3,10,-10,2,-4,7,2,-3,6,1,10,2,-8,4,9,7,-4,5,1,1,8,7,9,6,-5,9,4,9,10,-7,-1,-3,5,-10,-7,-10,-10,-6,10,-2,10,10,5,-5,-3,8,-9,10,8,8,2,2,-8,10,-2,-3,-8,-4,2,-9,-2,-10,7,4,-3,-1,-4,-6,-1,10,-1,-4,8,1,9,-7,-9,1,9,1,2,7,-5,8,-1,1,-3,-2,-7,3,7,7,6,-1,-7,-9,6,-3,-2,1,1,-7,9,7,4,-9,9,8,6,-4,-4,2,-10,-3,7,-6,-3,5,4,-7,-2,-1,4,8,-9,-5,-5,2,-1,10,8,8,-10,-5,-7,-5,9,-1,5,3,10,-8,-4,-2,7,4,-7,9,7,2,-6,-2,4,8,-3,-5,10,9,6,-10,3,-8,-8,8,1,-9,8,2,7,3,-10,4,-2,5,-2,2,-10,-8,9,6,-7,-9,-10,-8,10,6,10,1,3,-1,-2,2,5,-2,5,4,-5,-8,-3,-2,10,6,-10,-3,4,7,8,8,7,-6,10,-4,-5,9,-9,-3,-1,-8,-6,3,6,6,9,-5,-3,-1,-3,7,-5,7,1,2,9,-4,-10,6,9,10,-3,-6,-8,-1,-10,-2,-7,1,-9,2,3,-6,3,1,-2,-9,7,-3,-10,9,-3,7,8,-9,-8,-8,5,6,-3,-9,9,2,-3,3,1,5,1,-5,-7,9,-3,8,10,-7,2,-10,8], dtype = "int16")#candidate|3213|(384,)|const|int16
call_3212 = relay.TupleGetItem(func_683_call(relay.reshape(const_3213.astype('int16'), [4, 12, 8]), relay.reshape(const_3213.astype('int16'), [4, 12, 8]), ), 3)
call_3214 = relay.TupleGetItem(func_686_call(relay.reshape(const_3213.astype('int16'), [4, 12, 8]), relay.reshape(const_3213.astype('int16'), [4, 12, 8]), ), 3)
output = relay.Tuple([bop_3209,call_3212,const_3213,])
output2 = relay.Tuple([bop_3209,call_3214,const_3213,])
func_3215 = relay.Function([var_3207,var_3208,], output)
mod['func_3215'] = func_3215
mod = relay.transform.InferType()(mod)
var_3216 = relay.var("var_3216", dtype = "uint64", shape = (8, 1, 13))#candidate|3216|(8, 1, 13)|var|uint64
var_3217 = relay.var("var_3217", dtype = "uint64", shape = (8, 2, 13))#candidate|3217|(8, 2, 13)|var|uint64
output = func_3215(var_3216,var_3217,)
func_3218 = relay.Function([var_3216,var_3217,], output)
mutated_mod['func_3218'] = func_3218
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3407 = relay.const(7.581210, dtype = "float32")#candidate|3407|()|const|float32
var_3408 = relay.var("var_3408", dtype = "float32", shape = (12, 5, 1))#candidate|3408|(12, 5, 1)|var|float32
bop_3409 = relay.mod(const_3407.astype('float32'), var_3408.astype('float32')) # shape=(12, 5, 1)
bop_3416 = relay.multiply(var_3408.astype('int64'), relay.reshape(bop_3409.astype('int64'), relay.shape_of(var_3408))) # shape=(12, 5, 1)
func_2909_call = mod.get_global_var('func_2909')
func_2913_call = mutated_mod.get_global_var('func_2913')
const_3444 = relay.const([7,-6,-6,-3,-9,-9,-8,-1,-4,-7,7,-4,-4,-2,5,5,-3,-6,-7,-5,-10,9,1,2,1,4,-9,1,-5,6,-2,-3,-2,-5,-8,5,5,5,4,-1,9,4,-8,-1,6,5,6,7,7,-9,2,-2,-8,5,8,-8,5,-5,7,-8,-3,4,-10,-9,1,-3,-10,10,-6,1,-2,1,10,-10,1,-9,10,-4,-4,-9,-1,-8,1,-10,-4,1,7,-3,9,4,-9,4,6,-10,-3,5,-3,-6,2,1,6,-2,-5,1,-6,4,8,3,-10,-6,3,-8,4,-1,1,-2,6,-1,7,-5,-7,-8,-8,2,-5,-2,10,5,5,2,-7,-4,-8,-4,-9,10,7,-4,1,3,-2,2,-5,8,2,8,2,-4,1,7,-6,-9,-5,10,-6,-1,7,2,10,-4,8,4,7,2,6,7,6,-7,-8,-8,9,5,-3,-10,7,-9,-9,8,-1,-4,-2,10,-9,-3,-3,1,10,-10,5,8,-5,8,10,-1,-6,7,-8,-10,-4,-3,-1,1,-10,-6,10,-6,1,-10,-10,3,6,6,8,8,-8,-1,5,2,-2,2,-2,-10,4,7,10,10,9,9,-3,-9,10,-1,3,-4,-2,8,7,-1,7,3,-8,-5,-2,-4,3,-7,5,-2,1,-3,2,-9,9,-10,-7,-4,-9,-2,5,-5,9,-5,-9,-3,3,-3,7,-6,1,-3,-10,-5,-9,-9,3,5,7,8,-7,6,7,6,1,-2,-7,-3,5,-3,7,9,5,3,3,8,2,-9,3,-5,-7,-7,6,-9,-9,5,4,5,-7,-1,-10,10,3,1,7,8,-6,6,6,1,8,9,-2,-1,-3,-1,1,4,-3,8,2,-3,3,-10,-5,-2,9,-2,8,-9,-6,-3,-2,-9,-2,4,-4,-4,-6,-4,5,3,1,-4,9,-9,4,9,9,-10,6,-8,-10,-7,-9,7,-1,10,6,-9,7,-9,10,-4,10,1,-7,8,1,8,-8,-6,5,-9,9,-7,5,-7,6,5,7,-1,5,6,5,-8,8,10,-9,6,6,-4,1,-8,-5,2,9,6,3,1,-3,8,2,-7,-6,9,-6,3,-4,-4,-5,1,-10,-9,-9,10,1,5,6,6,-5,-2,-8,10,-9,1,3,-8,-8,-7,-9,-1,2,6,8,-10,5,-5,8,-4,-2,-8,6,-9,7,1,2,6,8,4,4,-10,-5,-3,-10,9,-4,8,-5,4,4,7,7,-2,7,-2,9,3,9,-6,-5,-3,-1,10,-2,9,-4,-6,2,-8,5,4,-4,-7,-3,3,5,8,1,-2,-6,10,7,-1,-3,10,10,9,10,-8,8,-10,1,9,-8,4,-1,-4,-8,9,-5,-9,-4,-1,-6,-5,2,5,5,-5,4,9,-2,6,-9,3,-6,8,-3,-2,10,3,-5,5,-4,-5,8,6,10,-3,-8,4,1,2,3,-4,3,6,8,10,-2,10,10,3,9,10,2,-9,-9,6,-9,6,-8,10,4,7,6,7,3,-7,-5,10,-2,-10,-4,-3,-9,-2,9,-10,-3,-8,-4,4,-4,2,7,-7,-4,10,-5,8,-1,-8,6,5,7,-8,-10,-10,3,-6,-7,3,-9,-7,7,-6,-8,1,4,-3,1,4,6,-8,8,-1,-6,-6,9,-9,9,-5,4,2,9,-9,-9,-2,8,3,-5,-3,-1,5,-2,-6,-4,1,6,5,1,8,8,-4,-1,6,-1,4,-10,4,7,-5,1,-10,1,2,9,1,-9,8,10,-5,-3,-7,-10,-4,-10,-10,7,10,5,-10,-2,-6,6,3,5,8,-7,-2,-5,7,-7,8,9,4,2,8,4,8,-7,-5,9,2,-8,4,-1,1,-8,-4,1,-10,-9,-6,4,3,5,6,1,1,-2,-5,7,-1,-6,-3,2,-9,-4,3,1,9,-2,-9,3,-2,-6,-10,-2,-8,-7,-7,-4,7,3,8,-6,9,2,-2,-9,-1,-1,8,1,6,-8,-6,-9,-2,5,-6,7,-10,3,-5,8,9,-9,5,-4,-10,3,-7,-9,5,-1,6,6,6,-9,4,-10,-7,10,9,-2,-8,-4,-7,6,-8,5,-4,1,-10,2,10,-7,-1,8,10,-10,6,5,-7,-7,7,-1,1,-10,4,7,6,-10,10,8,1,10,1,1,6,7,10,-2,-1,3,8,1,3,-2,1,-5,-9,-10,-8,-10,-10,8,4,2,4,-3,7,-8,-7,-3,2,3,-3,-2,7,-7,-7,-9,-7,-8,-10,3,9,8,-2,6,-1,5,-3,8,9,7,2,-10,-10,-10,-1,6,6,6,6,-4,-3,2,-8,-6,-8,6,2,7,-6,10,1,7,-1,5,-7,6,-10,5,-1,-8,7,-6,-3,1,-9,-7,9,8,-9,7,4,7,4,-5,-7,3,-10,-3,4,-10,-4,-5,-3,1,6,1,3,-7,1,3,6,2,-5,-8,-8,1,-7,3,9,-5,3,-6,-3,-5,-4,2,4,-7,10,9,-4,-8,-7,5,4,-1,-6,-5,-2,5,9,-8,-5,4,-8,1,-3,7,9,-8,-1,-10,-7,-8,-5,7,-4,9,-7,3,7,-1,1,2,9,-3,-8,9,-9,-6,-2,10,-7,-5,3,-2,-10,-3,-1,2,-5,-2,7,-10,-10,1,-1,-10,-10,-3,-1,-5,7,5,-1,10,10,-10,-3,3,9,7,-7,-6,-10,-1,-3,-5,2,-2,4,10,-4,-3,3,10,4,-9,4,7,4,6,-4,-2,10,-3,4,2,-6,-4,-3,-10,-4,7,6,-2,3,10,1,-8,-3,-9,6,6,-6,-10,9,-7,9,-10,9,-5,-2,-2,6,7,-2,-10,-10,2,-9,7,4,-2,8,-8,-4,1,-10,2,-6,-9,7,-9,-8,-3,3,6,3,-10,9,-2,-3,-2,8,10,3,2,-9,-7,2,-5,-1,2,-8,-7,-10,-2,1,-5,8,-3,-7,4,-6,4,-2,-2,-9,-7,7,-5,-2,-2,-5,-2,-4,-7,-1,-6,2,6,-8,-9,5,5,-1,-10,9,7,-1,-8,-7,-6,4,5,10,1,2,-5,5,8,2,10,2,-7,10,7,-8,4,-5,-9,-2,4,-10,10,9,-3,10,2,3,-4,-5,-10,4,-7,7,-3,-6,-5,-6,-10,-5,-7,8,-6,1,6,2,8,-10,-4,-1,-5,4,1,-5,6,-6,6,2,-5,-1,-8,-6,9,-1,4,10,7,1,5,-1,-7,-5,8,-4,-2,-3,8,-7,5,7,-10,-9,2,-6,-6,-7,-3,6,10,6,5,-2,-9,9,9,-3,3,-7,-4,2,-10,-4,3,-6,-2,-7,-2,-1,10,-6,5,5,3,-3,-6,8,-7,-9,-4,5,7,-4,-3,-9,4,1,5,7,9,-7,-6,1,7,6,-4,7,5,10,6,-2,-5,10,-10,-9,7,-5,9,8,5,7,-5,3,-8,9,-6,-6,5,-2,1,5,5,10,-6,-2,-2,-2,-3,-8,-2,5,-9,9,-7,10,-10,5,-7,-3,-5,3,4,-6,-4,8,-1,-4,-5,8,-1,9,5,1,1,4,9,-5,7,-9,-6,-7,-1,-1,3,6,8,-7,9,7,-4,-10,-10,-5,8,8,-1,3,5,8,-3,-1,-2,-4,-10,5,-1,4,-9,10,3,1,2,-7,10,-4,4,4,6,8,-8,-10,7,-2,-5,4,-10,-3,9,-9,9,-1,-1,-8,-4,2,1,-3,-6,-3,-7,10,-1,2,-6,10,6,-8,-8,-5,7,4,-9,-4,-4,-9,-5,-10,1,8,-3,-3,-2,6,-1,2,-8,4,3,-6,7,10,2,10,-2,-3,9,-3,-10,2,-10,7,-1,7,9,3,-9,-9,2,6,-10,-6,8,-1,-10,10,-9,8,-8,-6,-8,-6,-1,-10,4,5,-9,-2,-4,-5,-6,-4,2,5,-9,-10,1,6,10,-4,-3,6,-2,9,1,-10,-9,-4,-8,-4,3,8,9,-3,-1,3,6,6,-10,-5,8,-2,10,9,-6,-7,-6,-10,-10,-8,-1,-4,2,6,4,-5,-7,-9,-2,8,-1,6,1,-4,2,-1,3,-2,7,9,9,4,-10,6,-1,-1,-1,-10,4,5,-6,-8,4,-5,8,-4,9,-7,-1,2,-7,-4,1,-3,10,10,-4,6], dtype = "int64")#candidate|3444|(1568,)|const|int64
var_3445 = relay.var("var_3445", dtype = "float64", shape = (4, 12))#candidate|3445|(4, 12)|var|float64
call_3443 = relay.TupleGetItem(func_2909_call(relay.reshape(const_3407.astype('int64'), []), relay.reshape(const_3444.astype('int64'), [14, 7, 16]), relay.reshape(var_3445.astype('float64'), [48,]), ), 1)
call_3446 = relay.TupleGetItem(func_2913_call(relay.reshape(const_3407.astype('int64'), []), relay.reshape(const_3444.astype('int64'), [14, 7, 16]), relay.reshape(var_3445.astype('float64'), [48,]), ), 1)
output = relay.Tuple([bop_3416,call_3443,const_3444,var_3445,])
output2 = relay.Tuple([bop_3416,call_3446,const_3444,var_3445,])
func_3458 = relay.Function([var_3408,var_3445,], output)
mod['func_3458'] = func_3458
mod = relay.transform.InferType()(mod)
var_3459 = relay.var("var_3459", dtype = "float32", shape = (12, 5, 1))#candidate|3459|(12, 5, 1)|var|float32
var_3460 = relay.var("var_3460", dtype = "float64", shape = (4, 12))#candidate|3460|(4, 12)|var|float64
output = func_3458(var_3459,var_3460,)
func_3461 = relay.Function([var_3459,var_3460,], output)
mutated_mod['func_3461'] = func_3461
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3489 = relay.const(-1, dtype = "int64")#candidate|3489|()|const|int64
var_3490 = relay.var("var_3490", dtype = "int64", shape = (1, 6, 16))#candidate|3490|(1, 6, 16)|var|int64
bop_3491 = relay.less_equal(const_3489.astype('bool'), var_3490.astype('bool')) # shape=(1, 6, 16)
output = bop_3491
output2 = bop_3491
func_3495 = relay.Function([var_3490,], output)
mod['func_3495'] = func_3495
mod = relay.transform.InferType()(mod)
mutated_mod['func_3495'] = func_3495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3496 = relay.var("var_3496", dtype = "int64", shape = (1, 6, 16))#candidate|3496|(1, 6, 16)|var|int64
func_3495_call = mutated_mod.get_global_var('func_3495')
call_3497 = func_3495_call(var_3496)
output = call_3497
func_3498 = relay.Function([var_3496], output)
mutated_mod['func_3498'] = func_3498
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4599 = relay.var("var_4599", dtype = "uint32", shape = (6, 9, 9))#candidate|4599|(6, 9, 9)|var|uint32
var_4600 = relay.var("var_4600", dtype = "uint32", shape = (6, 9, 9))#candidate|4600|(6, 9, 9)|var|uint32
bop_4601 = relay.greater_equal(var_4599.astype('bool'), relay.reshape(var_4600.astype('bool'), relay.shape_of(var_4599))) # shape=(6, 9, 9)
func_1141_call = mod.get_global_var('func_1141')
func_1145_call = mutated_mod.get_global_var('func_1145')
var_4607 = relay.var("var_4607", dtype = "float64", shape = (128,))#candidate|4607|(128,)|var|float64
const_4608 = relay.const([[10,-9,-7,2,-2,8,-8,1,-8,4,7,-3,3,-9,-1,-7,-4,2,9,-3,-6,8,5,3,-2,-5,-8,1,2,-4,-2,-2,7,8,-1,-8,-1,-3,8,10,-3,-8,-3,-10,10,8,5,8,5,10,8,4,-4,6,3,1,-2,4,-7,-10,10,-1,-9,9,-7,-1,4,-4,2,-10,9,8,-8,7,-9,-4,-7,6,-4,-2,-1,-5,8,-5,3,-3,5,-2,-4,-8,-5,1,-7,-8,1,1],[-4,-1,6,-1,9,1,-5,-9,-1,-1,-1,-10,1,-9,-9,8,-9,-4,-5,3,-8,10,-7,-4,7,-5,-2,-7,3,7,8,-5,-6,-1,-5,5,-1,9,-5,6,-10,8,-8,-7,3,-4,1,8,-8,8,-7,9,7,6,10,-4,5,-4,-9,3,-7,2,6,-5,3,10,-6,6,6,7,-3,8,-3,10,-5,3,-8,8,-7,10,6,-9,-6,6,-8,10,4,-1,2,10,-2,7,-7,6,10,5],[-6,10,1,6,1,-1,3,3,-3,1,5,7,-5,-10,-1,-2,-1,-10,8,-2,-1,-5,6,8,-10,-5,6,-1,-7,5,5,-6,10,7,-2,-9,1,-7,-2,6,-3,9,3,2,8,-9,-5,-9,2,4,-4,-9,7,-4,1,10,-1,7,8,5,7,1,10,8,4,10,-7,5,-4,-2,10,-1,5,-4,-7,1,4,5,-9,-8,7,5,6,9,-10,5,4,-1,-3,-2,-4,2,4,-2,4,-8],[-9,-4,-4,4,-3,3,2,8,9,-6,2,10,9,1,-3,4,-3,-6,-3,-2,-9,6,1,7,-6,2,2,6,-4,-3,-5,1,-7,-6,9,-7,-2,-8,-8,10,1,-4,4,4,-4,-6,-6,-8,6,-3,9,-1,-4,-4,7,8,8,1,-9,-1,-2,3,-4,2,4,-4,5,4,8,4,3,-3,4,-2,-9,-10,-10,10,4,5,-5,-1,-8,-2,4,-2,-1,-8,9,10,3,-10,2,6,-9,-4],[-9,7,-3,-4,6,-5,-2,-2,3,10,1,-6,7,-1,-2,-3,1,10,8,2,-1,10,8,-4,-3,6,4,9,3,-10,-4,-7,2,2,1,-3,-8,6,3,8,4,-2,-5,4,10,4,8,2,9,9,7,-4,2,-5,-10,1,-7,4,5,-2,1,-10,9,8,-7,10,6,-10,-4,3,6,-7,10,-6,7,-1,-6,-9,4,-5,-4,-6,-8,1,9,-5,-2,1,2,-9,7,-9,-1,-10,-6,8],[9,-2,-10,1,1,-6,6,4,-5,9,3,7,-6,8,1,4,2,8,-1,1,5,-4,7,9,3,5,5,9,-10,-3,-7,-4,-5,10,1,9,-1,7,2,-9,3,4,-10,9,-2,-3,-9,7,-9,-9,6,-6,-2,-4,-8,-1,1,-9,8,10,-10,10,-10,-3,-2,9,2,-7,-10,-9,8,-1,7,7,-8,7,10,7,-4,8,5,-8,-7,-9,7,-7,-10,-3,8,4,9,-2,-1,-8,9,5]], dtype = "int64")#candidate|4608|(6, 96)|const|int64
const_4609 = relay.const([[5,9,-3,9,-9,-1,-6,-2,-2,3,8,10,-1,-9,-5,4,-8,1,-1,1,9,-9,-6,8,-5,-7,-4,6,4,-8,6,-8,4,6,-4,-7,10,-10,4,-4,10,-3,8,8,7,-2,-9,-7,-2,10,1,10,1,8,9,8,3,2,3,5,7,4,10,8],[-6,9,-4,-1,-9,4,-10,5,-4,-9,6,-8,3,-6,-3,6,-3,-1,2,-3,10,6,10,7,8,-2,10,-5,1,-6,6,-6,-7,-5,8,7,-5,-9,-4,-8,2,5,9,-7,-3,-5,-6,-7,7,-1,2,-2,-1,-2,9,7,10,-7,4,-9,8,-6,-4,-7],[-7,-5,-6,-7,-10,-4,-9,-2,3,-9,-3,5,-2,-8,-6,-7,-5,3,1,-8,9,10,3,8,-3,-4,-5,8,2,6,-2,2,-7,-9,-6,-1,-9,4,5,9,-9,4,3,-3,-7,2,4,-7,10,-1,-2,-1,3,2,-7,6,5,-2,-2,-3,4,10,-9,10],[2,-8,-2,-5,4,3,-10,7,-6,4,-4,9,-2,7,-6,3,-8,2,9,5,5,-7,6,10,5,-2,-1,-10,-1,-6,-3,5,-9,-1,2,-4,-5,-4,4,-5,-10,-9,-9,5,5,-7,8,2,-8,-8,9,1,-2,5,1,-9,6,-3,7,4,-9,2,4,-7],[-5,5,8,9,1,7,3,-4,-4,-5,4,2,-2,-3,8,-1,6,8,9,5,1,-1,-8,7,-1,4,4,1,2,-4,-5,-3,8,8,-9,7,-4,6,3,-5,-6,2,-7,-5,8,-9,-4,-7,-4,-10,-5,-4,-9,-3,4,9,-9,9,3,-8,5,5,2,2],[6,-8,2,1,4,4,-4,-9,1,10,4,-4,-7,-8,10,4,3,6,-6,5,-1,-8,-1,7,-7,-5,-6,3,9,-10,-3,-6,6,2,-8,-2,5,3,10,-7,8,-1,-2,-8,6,-3,-4,-5,-10,4,3,9,7,3,2,6,1,-6,10,5,6,4,4,2]], dtype = "int16")#candidate|4609|(6, 64)|const|int16
call_4606 = relay.TupleGetItem(func_1141_call(relay.reshape(var_4607.astype('float64'), [16, 2, 4]), relay.reshape(const_4608.astype('int64'), [2, 288]), relay.reshape(const_4609.astype('int16'), [384,]), ), 3)
call_4610 = relay.TupleGetItem(func_1145_call(relay.reshape(var_4607.astype('float64'), [16, 2, 4]), relay.reshape(const_4608.astype('int64'), [2, 288]), relay.reshape(const_4609.astype('int16'), [384,]), ), 3)
func_2312_call = mod.get_global_var('func_2312')
func_2315_call = mutated_mod.get_global_var('func_2315')
const_4616 = relay.const([-1,9,7,3,1,9,-2,-10,7,9,-7,7,9,4,4,3,2,-5,9,8,-3,8,3,-6,-2,-10,5,-4,-1,-4,-10,2,10,4,7,-9,-1,6,7,-4,-9,9,-2,-8,-3,-9,9,8,1,9,6,-10,7,8,-10,-2,-7,-4,-5,-1,5,5,3,3,5,-4,10,-7,2,10,10,-2,4,-5,8,-9,-7,-9,6,-4,6,4,-2,2,8,7,-5,-6,-4,-9,-8,7,1,-6,10,1,-10,1,-8,7,6,-6,10,1,3,-6,8,-6,1,-5,-4,8,-3,-5,1,-9,-5,-1,8,-10,-4,2,2,-9,2,6,2,7,3,4,-5,5,9,6,8,8,4,3,10,1,-8,5,2,-3,5,1,4,1,-1,-9,-2,-2,9,-4,-7,-10,-3,5,8,-10,-9,2,-8,7,9,-10,-4,-9,10,-1,-8,4,-5,-9,-10,5,-2,5,1,9,9,-3,2,8,-7,8,10,-7,2,-10,-4,2,-6,-6,-8,-7,4,1,-3,-7,8,6,-9,6,10,4,5,-2,2,5,2,-8,-3,-4,8,5,-1,5,-3,-1,-9,6,10,2,-5,3,-1,8,10,8,-5,3,5,8,-8,-10,-6,10,6,8,-1,3,-2,5,2,9,8,5,-9,-1,2,6,2,3,-10,-1,4,2,-2,-7,2,-2,-5,4,-2,2,10,1,6,10,-7,-8,5,-6,-8,-1,-6,-3,-2,6,5,7,6,7,-5,9,-8,-2,8,9,-10,8,-5,-8,7,-10,-10,8,-8,9,4,5,4,6,-5,9,5,-3,8,9,5,-8,8,-2,-2,8,-8,7,-10,5,-8,-3,2,5,-7,-5,-4,9,10,-8,4,-6,1,-6,6,8,-6,7,7,7,-4,10,5,2,1,-8,8,-7,9,9,7,-9,8,-2,-6,3,-1,-10,10,-4,1,-8,-9,-5,-2,-4,-2,1,-7,-7,4,-6,10,-3,-7,-5,-2,7,-10,10,9,-1,8,-10,-7,-9,6,-5,-1,-1,7,7,9,-1,-8,-10,-8,7,5,1,6,-2,-5,-1,7,-7,9,6,-7,8,-9,-10,1,2,-7,-7,-5,5,6,-8,-9,-7,-8,10,-9,1,-9,6,-10,-8,-1,10,-4,6,3,2,9,-2,-2,2,-1,1,4,3,-8,-1,-6,5,-5,9,-6,-10,10,-2,4,-4,-7,-6,4,6,-10,1,7,-7,10,8,7,-3,-10,1,-10,-1,-2,9,6,-8,-10,6,8,10,9,3,8,5,2,-3,1,-1,-1,-8,4,7,8,1,-5,1,-1,-2,-2,-6,-4,-9,3,7,8,2,5,6,-1,7,-8,-9,-5,-7,-9,3,9,8,10,5,5,10,5,3,-10,3,1,8,-5,4,5,-7,9,-6,3,7,-9,7,-10,1,1,2,5,7,-3,4,-10,4,-8,-8,-2,-8,3,-4,-4,-7,-6,-6,-6,-1,-5,9,-9,7,-1,-8,-2,-3,-4,2,-3,-2,5,-2,-2,-10,-9,6,-1,-5,8,7,-2,8,9,-3,-6,-3,-6,2,9,6,-2,-8,-5,-5,-8,4,-5,5,2,-8,4,1,-8,9,6,7,-10,-1,10,10,10,-8,-8,-9,-3,-9,8,-9,3,-4,-3,-7,6,8,5,3,-1,8,-4,-8,-2,3,8,-6,8,-10,-1,-4,4,-2,-7,4,-6,7,-7,-4,-3,1,-9,-2,5,9,-10,4,4,-3,-2,9,9,-7,-1,7,10,-7,3,9,3,7,-1,-7,6,4,-9,6,-10,-4,4,9,9,6,-7,-3,10,-6,-8,4,5,4,4,1,2,7,9,3,-1,-10,-1,1,-3,-2,9,7,-5,-7,-2,3,6,-4,-3,10,4,-2,-5,6,-9,-10,-4,2,1,-8,-10,7,-10,-8,7,-7,-2,-6,2,-6,2,-9,5,8,3,-9,9,-8,8,-2,-5,-6,9,-5,-5,2,-7,6,2,-9,3,9,-7,-3,-4,10,5,8,9,5,-4,-3,-7,4,4,8,5,-1,4,-5,-8,-10,10,-7,1,5,8,-6,-7,-8,-8,-10,2,3,-5,6,5,6,-6,-6,-6,4,-9,1,-3,-8,-3,-3,-10,-3,-7,8,-9,-7,9,3,4,-1,8,-10,-1,5,1,-3,6,-7,8,-5,2,-9,-7,8,10,6,-1,2,-9,10,-4,-10,-10,1,2,5,10,-5,-8,8,-10,7,-1,7,-7,7,-1,-10,-3,1,9,-7,9,3,3,-5,-6,-8,3,-6,-4,2,1,8,-4,-9,-2,3,-10,-9,10,8,8,2,3,2,4,-5,-5,-10,2,4,-10,7,5,-3,-2,8,8,1,-1,-9,8,-1,6,2,5,-2,-4,4,-5,-2,-9,6,4,1,2,-2,3,-1,-9,7,-2,-8,9,6,1,2,-10,-9,6,2,9,8,1,3,4,-3,-10,-5,-5,5,-8,-7,-5,-5,-6,1,-4,7,8,-3,-9,-1,9,6,-4,1,-7,-2,-5,-5,5,6,5,-5,1,-5,4,7,-9,-7,-5,-7,-7,7,6,-4,-8,-2,-2,-5,-5,-3,-4,10,7,-6,-8,-7,2,8,5,-10,-10,7,-1,7,1,-3,-2,8,-4,10,-9,-6,10,-8,-4,10,-5,8,-9,10,-4,-5,-9,4,9,-5,2,9,3,-10,8,-3,-7,6,5,-6,-2,5,-5,-7,6,3,3,-3,1,-5,3,1,2,-8,5,8,-6,-3,6,5,1,-2,-2,-3,6,2,-10,1,-2,9,-4,7,1,-1,9,9,-6,4,-5,10,7,-5,7,-8,-7,-6,-5,-9,4,-3,5,-5,-4,8,-8,-5,2,-3,-5,8,8,-1,1,-9,-1,10,-8,-9,-5,-4,-7,9,8,-10,3,-5,6,-3,-7,3,-7,-7,9,-9,-3,9,-1,-9,2,-4,-9,-5,-6,-3,-3,2,-1,-6,3,9,8,5,-8,-2,8,-5,-4,2,-1,2,1,-7,-3,5,8,-3,1,8,6,2,-6,1,-9,2,7,-7,10,-3,5,-10,-1,1,-2,-1,-9,-4,-2,-6,7,-3,2,3,4,-4,3,3,-6,3,-1,8,-9,-6,-7,-2,-10,7,4,1,-7,6,8,1,2,-4,2,5,-6,10,3,6,-6,-5,-4,-8,-1,8,-4,5,-4,-10,-3,-8,8,-10,2,4,8,10,-6,-2,5,-8,10,-6,4,-3,-3,-4,8,1,2,8,3,-2,8,-5,4,3,-9,-8,-7,10,1,10,-9,-9,-4,-1,-7,-7,-4,10,-8,-10,2,-9,-1,6,2,1,-6,-2,-1,9,-3,5,-1,-5,-7,-3,7,5,-1,-9,-10,-6,-3,9,3,-2,-6,-6,-1,3,10,-7,2,-4,-7,-7,1,1,4,-8,10,3,-6,-1,2,6,-4,8,7,8,-2,8,10,7,-1,-1,4,7,5,-8,-3,-8,9,2,5,-9,5,-10,1,7,4,-3,5,10,-9,6,5,1,-9,10,-1,3,-8,-8,-2,-9,6,5,-3,9,3,5,1,-2,9,6,-10,-5,-2,5,10,10,-9,7,-10,-5,-6,-1,-6,-7,2,4,-10,10,4,6,3,-1,-1,-4,7,-3,2,9,-4,5,-10,10,10,4,9,-7,5,5,-6,-8,10,7,-5,2,-1,-9,-5,-10,3,8,-3,-4,-3,-8,-10,4,-10,-2,5,6,8,-8,-6,-10,2,1,-1,6,6,4,10,3,-1,7,-8,4,10,-3,-10,-5,8,-10,1,-4,-9,2,-8,-3,2,5,-5,-10,-2,-1,-3,-7,-4,-10,4,-1,-4,-6,8,9,9,1,-6,-9,1,1,8,-5,-8,7,-10,-6,-1,-7,10,-10,2,3,10,6,-1,7,8,2,-10,-7,7,-5,4,7,9,-4,-9,-1,-8,2,6,1,-3,10,-1,-4,-8,7,4,-5,1,6,-6,-1,-5,-6,-2,5,-1,1,-9,2,-5,-9,-3,1,-4,6,-5,-8,9,9,2,-9,8,9,-4,-5,10,-9,10,8,9,6,10,2,10,1,9,7,9,-5,6,3,5,8,-1,9,-10,-4,1,-8,-1,-2,-8,-6,-4,-9,4,-6,-5,4,3,-8,10,-3,-9,-1,9,-9,-2,-3,9,-9,-5,1,9,6,9,-5,5,10,-9,4,-2,-5,9,1,4,-8,4,9,-5,7,10,-10,10,-10,-1,-6,-7,-7,1,-2,-9,3,2,-1,10,8,10,6,-10,-6,1,5,-3,2,-2,8,-9,-9,7,-5,-5,-9,-2,4,3,4,4,-2,2,2,2,-7,2,-9,5,-6,-6,-5,9,-2,-9,-6,6,9,-2,1,-10,-5,4,1,-6,10,-1,-4,-4,1,-3,-8,5,-6,-8,-2,-5,3,9,-1,-3,10,-7,2,-1,9,-10,-2,4,-3,-6,5,2,-3,3,7,-8,-8,9,8,-5,-5,-4,1,6,-4,-8,4,-8,10,-2,7,-4,-6,-5,5,3,-4,-7,-7,-10,3,-2,10,5,-1,-9,-8,-3,7,1,9,-4,-1,9,-5,-10,7,-5,-2,-8,-7,1,-1,-2,-6,2,6], dtype = "uint64")#candidate|4616|(1728,)|const|uint64
call_4615 = relay.TupleGetItem(func_2312_call(relay.reshape(const_4616.astype('uint64'), [9, 16, 12])), 1)
call_4617 = relay.TupleGetItem(func_2315_call(relay.reshape(const_4616.astype('uint64'), [9, 16, 12])), 1)
func_1282_call = mod.get_global_var('func_1282')
func_1289_call = mutated_mod.get_global_var('func_1289')
const_4628 = relay.const([[2,-5,10,10,-6,-9,3,6,-1,2,-3,9,-5,-8,4,-3,-7,3,-4,9,3,8,10,-3,-4,-6,5,9,-6,8,8,-4,-2,2,-1,7,3,-1,3,3,-6,4,-4,3,1,-10,3,-4,5,2,-9,2,-6,4,-5,-7,-7,4,6,-3,-9,6,1,6,7,1,-8,-5,-6,-4,-5,-1,1,-4,-5,4,2,-3,-1,8,-8,4,-2,2,10,-8,-6,9,-8,-4,2,4,-9,6,9,-8,2,5,-10,3,-3,-7,4,6,-9,-3,-10,6,6,-1,-7,-2,-10,-7,3,2,-3,-5,-5,6,-1,6,8,1,5,10,1,-2,-10,3,9,1,6,-8,5,6,5,-9,3,10,2,-9,4,5,-10,-1,-6,10,8,-3,-2,-1,1,3,-10,4,-2,8,-6,-4,-3,-7,5,1,5,-6,-4,-5,7,-3,-2,-2,1,2,2,6,-1,4,-10,1,10,-2,6,-3,7,1,-2,4,10,-1,-4,-8,9,10,7,-3,-9,-3,-4,10,-2,-3,-4,8,-4,8,5,2,-6,-1,6,-1,-1,-1,-3,-6,-4,1,-5,3]], dtype = "uint8")#candidate|4628|(1, 220)|const|uint8
call_4627 = relay.TupleGetItem(func_1282_call(relay.reshape(const_4628.astype('uint8'), [11, 5, 4]), relay.reshape(const_4628.astype('uint8'), [11, 5, 4]), relay.reshape(var_4607.astype('float64'), [128,]), relay.reshape(const_4608.astype('int64'), [144, 4]), relay.reshape(const_4609.astype('int16'), [384,]), ), 3)
call_4629 = relay.TupleGetItem(func_1289_call(relay.reshape(const_4628.astype('uint8'), [11, 5, 4]), relay.reshape(const_4628.astype('uint8'), [11, 5, 4]), relay.reshape(var_4607.astype('float64'), [128,]), relay.reshape(const_4608.astype('int64'), [144, 4]), relay.reshape(const_4609.astype('int16'), [384,]), ), 3)
const_4634 = relay.const([[7,-8,-7,1],[8,-6,6,-7],[6,2,-8,-1],[7,-3,4,-1],[-5,6,-7,-4],[10,-6,-9,-9],[-3,-2,-5,3],[2,-1,7,7],[-10,-8,1,3],[-1,8,-4,-7],[-9,1,-2,5],[10,2,9,-3],[-4,9,-2,-7],[-3,-5,1,5],[-10,5,1,-8],[8,-10,1,10],[-4,-1,3,-9],[4,-3,-5,6],[-5,9,-2,6],[-9,1,-2,5],[9,-10,5,-9],[1,-3,-2,-2],[-1,4,-10,-3],[9,-6,4,4],[-9,-6,-6,-3],[-6,-3,-7,-7],[8,10,-4,-6],[7,-3,-5,-4],[3,-7,2,-6],[-8,9,8,2],[9,-5,-4,-5],[4,2,7,2],[-4,1,-2,-6],[-9,-4,3,2],[-7,-5,7,2],[10,-1,-9,-8],[-3,-1,-7,-3],[-6,-1,2,-2],[-10,2,9,-9],[7,7,-2,-3],[4,-1,-2,5],[-3,8,-2,8],[7,1,1,4],[-1,-8,-6,1],[-4,10,9,6],[4,9,2,9],[-5,-3,4,8],[8,10,6,3],[2,-8,1,-4],[5,2,-1,7],[5,6,-9,5],[-10,-1,-4,6],[8,-8,-7,-5],[-6,-10,-9,-6],[-8,4,-7,-5],[1,5,10,3],[7,-8,-6,9],[-9,-10,7,-5],[-10,-10,-7,8],[-3,-5,-6,3],[-2,10,-4,-9],[-9,3,6,-8],[-8,-5,-5,3],[6,1,8,7],[-4,7,7,3],[4,-1,6,9],[10,-9,7,-3],[1,4,7,-1],[-2,3,4,-7],[-3,-1,6,3],[3,10,-3,2],[-6,-7,-2,8],[-5,-5,-6,-7],[9,-8,-7,-10],[2,-10,-5,-10],[1,-6,6,-8],[4,1,-4,-6],[6,7,-4,6],[10,-10,-10,-6],[10,7,7,-8],[-7,-8,7,3],[8,9,-10,8],[2,-5,-2,7],[-4,-7,-8,-9],[-4,-7,10,4],[-1,-2,9,10],[-7,6,-7,-1],[-5,-1,5,-9],[8,-10,5,6],[9,6,-7,-7],[-5,-6,-6,-3],[-7,-4,-6,-3],[-9,3,-7,10],[9,3,-6,10],[5,-2,-5,2],[1,6,8,-2],[-4,-1,-3,8],[8,-8,2,-6],[6,-8,4,4],[-5,-3,-2,10],[-1,9,-1,-8],[8,5,-5,-9],[-8,-3,6,-8],[-10,3,-7,9],[3,3,-5,-7],[6,5,1,-2],[10,1,-3,-6],[-1,4,-2,-7],[-3,1,1,2],[-9,7,-2,1],[4,-9,-1,9],[-6,10,-8,-4],[-5,-10,4,4],[-9,-3,9,5],[6,-10,1,-6],[2,4,3,10],[3,-6,2,-10],[10,3,9,-5],[-2,-1,4,-7],[-3,8,-8,-6],[8,8,2,2],[3,-3,3,-9],[-3,-5,8,-5],[2,-9,-2,1],[-4,2,7,8],[-9,-4,9,7],[-2,10,4,-2],[-9,-9,3,10],[9,3,-8,-7],[4,-9,-5,-6],[9,-6,3,1],[9,2,-10,-1],[-6,6,-9,-1],[4,-7,-8,-5],[-1,10,-1,10],[3,-3,-6,-3],[-3,6,-1,7],[9,-4,7,6],[10,-3,-8,-2],[5,-3,4,-3],[2,2,-8,-9],[-1,6,2,-5],[7,-7,3,4],[-7,-8,3,-1]], dtype = "int64")#candidate|4634|(144, 4)|const|int64
bop_4635 = relay.logical_xor(call_4627.astype('uint32'), relay.reshape(const_4634.astype('uint32'), relay.shape_of(call_4627))) # shape=(144, 4)
bop_4638 = relay.logical_xor(call_4629.astype('uint32'), relay.reshape(const_4634.astype('uint32'), relay.shape_of(call_4629))) # shape=(144, 4)
output = relay.Tuple([bop_4601,call_4606,var_4607,const_4608,const_4609,call_4615,const_4616,const_4628,bop_4635,])
output2 = relay.Tuple([bop_4601,call_4610,var_4607,const_4608,const_4609,call_4617,const_4616,const_4628,bop_4638,])
func_4650 = relay.Function([var_4599,var_4600,var_4607,], output)
mod['func_4650'] = func_4650
mod = relay.transform.InferType()(mod)
var_4651 = relay.var("var_4651", dtype = "uint32", shape = (6, 9, 9))#candidate|4651|(6, 9, 9)|var|uint32
var_4652 = relay.var("var_4652", dtype = "uint32", shape = (6, 9, 9))#candidate|4652|(6, 9, 9)|var|uint32
var_4653 = relay.var("var_4653", dtype = "float64", shape = (128,))#candidate|4653|(128,)|var|float64
output = func_4650(var_4651,var_4652,var_4653,)
func_4654 = relay.Function([var_4651,var_4652,var_4653,], output)
mutated_mod['func_4654'] = func_4654
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4821 = relay.var("var_4821", dtype = "int64", shape = (4, 8, 5))#candidate|4821|(4, 8, 5)|var|int64
const_4822 = relay.const([[[5,-7,5,4,7],[-9,-5,-4,-2,-2],[-7,3,-6,6,-10],[-1,3,3,4,-4],[-1,1,-1,-2,9],[1,10,-1,10,-6],[2,-5,-5,-5,-8],[-9,1,7,-6,-7]],[[5,-3,10,3,9],[10,7,8,-4,5],[1,2,-4,6,-8],[-5,8,9,-9,-8],[4,-4,5,-6,-5],[10,-5,-8,1,-10],[-4,3,-2,2,7],[-4,9,-3,-7,3]],[[10,-8,8,-3,-1],[-10,-8,8,5,1],[-1,-4,-10,5,6],[1,-3,-10,-8,-4],[7,-3,6,3,1],[-5,1,-5,8,2],[9,-1,-4,-7,-5],[-1,-2,-5,4,-2]],[[-6,-9,8,-9,3],[-10,5,-7,2,3],[-3,-10,-7,-5,-5],[-7,-6,7,10,8],[-5,6,-10,9,6],[-9,-6,-6,-4,-5],[-10,9,1,-7,1],[-4,6,8,-2,-9]]], dtype = "int64")#candidate|4822|(4, 8, 5)|const|int64
bop_4823 = relay.equal(var_4821.astype('bool'), relay.reshape(const_4822.astype('bool'), relay.shape_of(var_4821))) # shape=(4, 8, 5)
uop_4831 = relay.rsqrt(var_4821.astype('float32')) # shape=(4, 8, 5)
uop_4834 = relay.atan(uop_4831.astype('float32')) # shape=(4, 8, 5)
func_2801_call = mod.get_global_var('func_2801')
func_2803_call = mutated_mod.get_global_var('func_2803')
var_4840 = relay.var("var_4840", dtype = "float64", shape = (784,))#candidate|4840|(784,)|var|float64
call_4839 = func_2801_call(relay.reshape(var_4840.astype('float64'), [7, 14, 8]))
call_4841 = func_2801_call(relay.reshape(var_4840.astype('float64'), [7, 14, 8]))
func_683_call = mod.get_global_var('func_683')
func_686_call = mutated_mod.get_global_var('func_686')
var_4852 = relay.var("var_4852", dtype = "int16", shape = (1, 384))#candidate|4852|(1, 384)|var|int16
call_4851 = relay.TupleGetItem(func_683_call(relay.reshape(var_4852.astype('int16'), [4, 12, 8]), relay.reshape(var_4852.astype('int16'), [4, 12, 8]), ), 0)
call_4853 = relay.TupleGetItem(func_686_call(relay.reshape(var_4852.astype('int16'), [4, 12, 8]), relay.reshape(var_4852.astype('int16'), [4, 12, 8]), ), 0)
output = relay.Tuple([bop_4823,uop_4834,call_4839,var_4840,call_4851,var_4852,])
output2 = relay.Tuple([bop_4823,uop_4834,call_4841,var_4840,call_4853,var_4852,])
func_4875 = relay.Function([var_4821,var_4840,var_4852,], output)
mod['func_4875'] = func_4875
mod = relay.transform.InferType()(mod)
mutated_mod['func_4875'] = func_4875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4875_call = mutated_mod.get_global_var('func_4875')
var_4877 = relay.var("var_4877", dtype = "int64", shape = (4, 8, 5))#candidate|4877|(4, 8, 5)|var|int64
var_4878 = relay.var("var_4878", dtype = "float64", shape = (784,))#candidate|4878|(784,)|var|float64
var_4879 = relay.var("var_4879", dtype = "int16", shape = (1, 384))#candidate|4879|(1, 384)|var|int16
call_4876 = func_4875_call(var_4877,var_4878,var_4879,)
output = call_4876
func_4880 = relay.Function([var_4877,var_4878,var_4879,], output)
mutated_mod['func_4880'] = func_4880
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5480 = relay.var("var_5480", dtype = "float64", shape = (7, 3, 14))#candidate|5480|(7, 3, 14)|var|float64
uop_5481 = relay.rsqrt(var_5480.astype('float64')) # shape=(7, 3, 14)
func_2909_call = mod.get_global_var('func_2909')
func_2913_call = mutated_mod.get_global_var('func_2913')
var_5489 = relay.var("var_5489", dtype = "int64", shape = ())#candidate|5489|()|var|int64
const_5490 = relay.const([10,-4,-1,-6,-1,-10,-2,-10,-3,-7,5,8,8,-4,-6,-6,-6,7,-7,8,8,4,4,-4,-6,3,-4,7,-1,-7,-9,5,5,-7,-3,-10,-3,-2,8,-4,-10,10,-8,-6,-8,-7,-7,-4,-4,-5,-6,-9,-1,5,-10,6,8,4,2,6,-4,-9,-5,5,4,6,5,10,-10,-7,-4,8,8,-7,-1,-2,-7,-8,-4,4,1,9,-7,5,-3,-6,5,8,-6,-4,1,-2,7,-3,-10,-8,-6,10,5,3,-6,-7,-4,4,4,-7,-6,-3,10,1,-2,-3,-5,4,-8,1,5,-7,-3,-9,1,-1,-4,9,2,-5,10,-3,-1,-8,-3,5,5,6,-4,-6,-10,3,1,9,-3,-8,-2,-9,-7,4,-4,-9,-10,6,10,1,8,4,-8,-5,-7,4,-3,2,10,1,4,10,4,10,-9,-4,4,8,-2,5,-5,9,-1,-9,9,-4,1,7,-1,1,-7,-7,-4,-5,8,-8,-8,-1,9,10,2,-1,10,-8,4,-1,4,-3,4,5,-5,-3,9,4,3,-6,-7,-8,4,8,-5,10,-8,6,-1,4,-3,1,-2,-7,-8,-10,9,-4,3,-10,4,6,5,5,-4,-3,5,-6,-8,2,8,-3,-1,10,10,4,4,-7,3,-4,-9,1,-1,-3,-2,7,10,-8,8,6,-2,3,10,2,1,8,4,-6,-8,6,-5,-3,2,3,-9,-1,9,4,3,1,-5,4,2,-4,8,-4,10,7,7,5,10,7,-9,7,1,8,10,-5,3,-5,-7,3,4,-3,-9,-9,4,8,-8,-7,-4,-7,8,-7,9,-1,8,-6,-5,5,9,5,-9,9,10,8,-3,-8,-7,4,-4,-4,1,7,1,4,-6,-3,3,-4,-8,-5,-7,3,-8,10,2,-6,-4,-2,5,-4,6,7,1,-2,-4,-1,-2,5,-1,-1,6,9,10,-6,-7,7,-10,-1,-4,2,-10,8,-9,-9,7,5,-7,5,6,-4,2,4,-6,6,8,9,-3,9,10,-2,9,-10,2,6,7,-8,-1,-4,7,-8,-8,-2,-4,2,-10,2,-2,10,2,-3,-7,-9,-5,-7,2,9,2,2,-6,-3,9,-8,2,8,-3,10,-5,-10,3,-5,3,-9,-9,3,5,10,1,-6,7,4,6,9,6,-4,-7,4,-4,4,-3,-7,-5,4,-6,-9,-6,-4,-1,-6,4,-4,8,10,-2,-3,3,3,8,6,-8,8,9,8,5,-7,-3,-10,2,1,6,8,6,9,-1,-8,7,-4,-8,-8,-8,1,-9,-10,-1,-4,-7,-6,4,-6,8,5,-2,6,1,4,-1,1,-6,-1,-4,-3,5,-1,-5,-5,3,-10,9,6,10,-9,4,2,-1,-6,6,-5,9,4,-4,-6,-9,1,-4,7,-6,-6,-8,-10,-1,-5,8,-2,5,10,4,-8,6,-10,6,-4,-6,3,-1,5,1,-3,-8,-5,-10,4,-5,-9,-4,9,8,2,-6,-8,-10,-10,-10,10,-7,-5,-2,-1,3,-5,-8,-5,-10,10,4,4,10,-4,7,10,-7,-1,4,-5,1,-2,-6,7,5,-1,-7,2,-1,8,10,-1,3,-7,3,3,-2,7,3,-2,-3,-9,2,-8,10,10,-5,7,3,6,6,2,-4,3,-2,8,-10,8,8,4,1,8,-4,-4,8,3,-9,9,-5,-5,-9,-4,9,10,7,7,-7,4,9,8,-9,-3,-9,6,-5,1,-5,3,-9,3,-9,4,5,-9,7,6,-10,8,1,3,6,-2,-1,3,9,5,-6,8,-8,-10,4,-5,-4,4,-7,-1,-1,2,-9,-3,2,-10,9,-4,3,-6,-9,-1,-3,8,2,-3,-4,6,-3,-4,6,-5,-10,-6,2,-1,-2,-4,1,-5,1,5,-6,-9,-9,3,-6,10,5,10,7,-8,8,-4,-2,-2,-8,10,-10,-10,-1,2,-1,-5,10,6,9,-8,4,7,-10,10,-8,1,-9,-6,-6,-10,-5,-5,-10,-4,-5,-9,-2,-6,7,-2,8,4,-6,8,9,1,2,-10,-7,3,-7,-10,9,3,3,1,-1,-9,-5,9,6,9,7,10,4,-5,-6,-1,-10,2,-2,-5,8,-9,2,9,1,-5,7,-2,1,-5,-2,-3,-3,-8,-8,9,8,10,-10,-7,9,9,9,1,7,-8,-2,-1,-8,1,3,-5,-2,10,-6,-2,9,2,-3,8,7,-8,7,-6,-10,2,-9,-2,-1,-4,9,3,9,6,6,-3,7,6,1,-2,8,-4,-10,9,-1,10,1,8,9,-4,-7,2,8,-10,7,-10,6,4,-2,-9,10,-3,-3,2,4,-8,3,-4,5,10,6,7,-5,9,-5,-10,-6,-5,3,-10,3,9,8,-7,-1,-3,6,-10,2,-8,-6,4,-1,-2,6,5,-1,-7,10,-10,-2,8,6,1,-7,-6,7,-6,9,-3,1,-8,2,1,-1,5,-5,-1,2,8,-1,4,-4,-6,-8,10,9,-2,-5,-5,6,-10,-2,2,5,3,6,-5,8,5,-10,-5,-5,10,-10,6,2,6,9,7,-10,9,8,8,5,9,-10,-6,1,-7,-2,6,-9,7,-2,1,5,-10,5,-8,-3,8,1,-2,-2,5,2,-8,-6,8,-1,10,10,-10,9,-7,-7,10,1,-2,9,-8,1,-1,-3,4,1,-4,3,-7,-4,-7,-1,10,-6,-8,-4,-7,4,-1,-8,-3,-7,9,-2,6,-3,8,-9,6,5,-4,10,-3,9,1,6,-6,2,-7,-4,-2,-6,-10,1,4,-2,4,-10,-8,10,6,-5,1,2,4,8,4,8,-1,-4,4,3,-9,6,2,9,10,-4,5,-8,1,-7,-2,-1,-4,7,-2,-8,3,-10,-8,5,-7,10,3,1,5,-3,10,9,-10,2,9,4,-3,-7,5,10,8,-4,-9,-7,10,3,-3,-4,1,4,7,1,2,3,-9,1,-7,10,-7,-10,8,-9,-8,-5,-10,-8,-9,-10,-9,2,8,-7,8,10,-6,-4,-6,7,-5,-10,3,5,8,-7,-10,5,10,-2,-1,4,5,-2,-1,4,3,-5,3,-2,-7,8,-6,7,8,6,4,-5,-8,-9,-7,-8,-8,-9,-7,1,-8,3,-5,1,10,1,7,-4,-4,-7,7,-3,10,-3,5,-1,5,8,-2,3,6,7,-1,-10,5,8,-3,-4,-5,8,-3,2,2,-7,-8,-8,2,8,8,8,5,3,7,9,-6,-1,-7,-4,10,3,10,2,9,-7,8,-10,3,1,3,-3,10,-8,6,3,-3,-6,8,-9,10,5,3,-2,-3,10,4,4,1,8,4,-3,-10,2,-9,-6,-6,6,8,-10,1,-6,-7,-9,-4,4,-10,5,-8,-9,-7,-5,-6,4,8,-5,-4,-4,-3,9,-9,5,2,9,-8,-6,-1,-6,1,-5,4,8,2,10,4,-3,2,10,10,5,-6,-3,-3,8,-8,5,-2,1,4,9,1,-10,-2,9,10,1,7,6,2,-6,-6,4,3,-2,-9,6,5,-6,-6,10,-1,5,5,-9,-5,9,5,1,-1,6,4,-1,-8,7,-4,-2,-9,4,-6,3,10,-5,5,5,-7,-7,5,-1,7,-6,6,-5,-3,-9,3,-2,-3,-8,-3,8,5,2,-5,10,-2,4,-2,-2,-9,-4,2,5,-3,8,5,-5,-1,-8,-1,-10,-5,-10,7,-2,3,-1,3,2,7,1,6,-2,-4,-3,1,9,-10,-4,1,5,5,-2,-10,-4,4,8,-3,7,3,4,5,-1,-4,-4,-3,2,-3,-6,-9,-9,-10,-5,1,2,-1,-9,2,3,-9,3,-4,-9,7,1,8,9,10,10,-5,5,-3,-4,8,-2,-4,8,10,-8,-3,-5,8,-8,9,10,-4,-1,1,1,3,-6,-8,7,-10,-9,4,5,-9,10,4,-1,7,5,-9,7,8,1,6,6,-2,10,-8,-10,9,-4,-2,-3,-8,4,3,-9,5,-8,7,8,2,7,-4,-6,7,-7,-8,-7,-7,4,-4,-2,3,1,-8,3,-6,10,7,4,10,4,-2,-4,4,10,1,7,5,-7,-7,-3,-3,5,-10,6,10,8,3,-2,8,-4,-5,-6,-1,3,3,4,-2,-6,8,4,3,10,2], dtype = "int64")#candidate|5490|(1568,)|const|int64
var_5491 = relay.var("var_5491", dtype = "float64", shape = (48,))#candidate|5491|(48,)|var|float64
call_5488 = relay.TupleGetItem(func_2909_call(relay.reshape(var_5489.astype('int64'), []), relay.reshape(const_5490.astype('int64'), [14, 7, 16]), relay.reshape(var_5491.astype('float64'), [48,]), ), 2)
call_5492 = relay.TupleGetItem(func_2913_call(relay.reshape(var_5489.astype('int64'), []), relay.reshape(const_5490.astype('int64'), [14, 7, 16]), relay.reshape(var_5491.astype('float64'), [48,]), ), 2)
output = relay.Tuple([uop_5481,call_5488,var_5489,const_5490,var_5491,])
output2 = relay.Tuple([uop_5481,call_5492,var_5489,const_5490,var_5491,])
func_5498 = relay.Function([var_5480,var_5489,var_5491,], output)
mod['func_5498'] = func_5498
mod = relay.transform.InferType()(mod)
var_5499 = relay.var("var_5499", dtype = "float64", shape = (7, 3, 14))#candidate|5499|(7, 3, 14)|var|float64
var_5500 = relay.var("var_5500", dtype = "int64", shape = ())#candidate|5500|()|var|int64
var_5501 = relay.var("var_5501", dtype = "float64", shape = (48,))#candidate|5501|(48,)|var|float64
output = func_5498(var_5499,var_5500,var_5501,)
func_5502 = relay.Function([var_5499,var_5500,var_5501,], output)
mutated_mod['func_5502'] = func_5502
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5541 = relay.var("var_5541", dtype = "float32", shape = (4, 6, 3))#candidate|5541|(4, 6, 3)|var|float32
var_5542 = relay.var("var_5542", dtype = "float32", shape = (4, 6, 3))#candidate|5542|(4, 6, 3)|var|float32
bop_5543 = relay.floor_divide(var_5541.astype('float32'), relay.reshape(var_5542.astype('float32'), relay.shape_of(var_5541))) # shape=(4, 6, 3)
var_5547 = relay.var("var_5547", dtype = "float32", shape = (4, 6, 3))#candidate|5547|(4, 6, 3)|var|float32
bop_5548 = relay.left_shift(var_5541.astype('uint16'), relay.reshape(var_5547.astype('uint16'), relay.shape_of(var_5541))) # shape=(4, 6, 3)
bop_5554 = relay.logical_and(bop_5548.astype('bool'), relay.reshape(var_5541.astype('bool'), relay.shape_of(bop_5548))) # shape=(4, 6, 3)
func_2312_call = mod.get_global_var('func_2312')
func_2315_call = mutated_mod.get_global_var('func_2315')
const_5560 = relay.const([-1,5,1,-6,8,-3,4,9,-10,10,-4,10,-9,-8,-10,-6,-6,-7,-6,-5,10,-5,10,2,-2,9,-7,-1,-7,3,-3,-8,-1,-8,-9,3,1,-4,1,-10,-2,8,-10,-8,-9,-4,-9,1,-9,-10,2,-10,1,-5,-3,5,5,-7,-2,2,5,4,-8,5,-6,6,8,10,-1,2,-9,9,8,-9,-10,-2,6,-8,-10,2,10,3,-5,7,-9,1,-6,2,-6,-6,3,-9,3,5,-2,3,-8,-10,-1,-10,6,10,2,9,4,-4,5,-8,-3,-6,-4,9,-5,-5,-3,-9,-8,2,1,-8,9,4,7,2,8,9,7,2,-4,-10,-3,8,6,-1,-3,3,-3,4,10,-2,-6,-8,8,4,-8,10,3,-5,10,-5,-5,5,-7,7,-8,6,1,-6,-8,2,-7,9,10,9,8,-5,4,10,-10,9,-6,-2,10,6,2,-4,-10,-1,5,-4,-5,7,-10,1,1,-10,4,6,1,10,9,4,-6,-4,6,5,7,-1,8,7,-1,-8,8,-10,5,-6,-3,6,7,10,7,3,9,9,7,7,-4,4,9,2,-4,-10,9,6,-7,-9,4,-6,-7,10,-2,1,-4,-9,1,-8,-2,-1,6,8,6,8,9,-4,-1,-8,5,-1,6,-3,3,-1,-4,5,2,3,-1,1,-5,4,-1,-10,-4,7,-3,9,6,1,4,9,-9,5,3,10,1,7,8,10,10,-4,-2,9,4,-7,7,-4,6,6,5,1,-10,10,6,10,9,-9,8,8,-9,10,-9,-4,-4,-8,8,5,-6,6,6,7,1,-8,-5,10,-1,2,5,-7,-6,-7,4,4,8,-1,-7,2,6,8,-4,7,-9,5,5,-2,-9,-5,3,-3,9,-5,-6,-6,-7,-4,-1,6,8,-5,-7,3,-7,9,10,-1,9,7,5,8,6,-2,-2,10,-4,-2,1,9,8,8,-3,8,6,-7,-9,-2,-6,-3,-7,-8,-5,3,8,3,-1,3,-9,4,-6,-8,-8,9,7,4,-2,-6,-5,-4,1,8,-8,4,3,5,-2,2,3,4,3,5,-10,-4,-10,-7,-8,2,9,-7,5,10,5,7,-5,-10,-1,-6,4,6,-10,4,2,-6,-4,-1,-5,8,5,7,-8,-10,2,10,6,9,-2,4,10,3,4,-5,-9,8,10,-5,4,7,-9,-1,4,-3,-4,-8,-8,10,-9,3,-10,1,8,-8,9,-6,4,-7,7,5,-6,6,6,-8,-1,-2,-1,10,-8,10,6,10,-5,-6,-5,-4,6,7,-7,8,5,10,-2,5,-9,-9,-3,4,-6,-10,3,-5,3,-10,6,-8,-7,-7,9,9,9,4,9,-9,10,9,3,-2,-6,9,-10,5,7,6,-5,5,-7,3,-9,-2,-4,-6,-4,5,3,-2,-1,2,-8,-6,-5,5,2,-9,-4,1,3,3,6,-7,-2,-3,5,-10,4,-4,-7,-3,10,-9,3,10,-9,-1,-3,-5,-7,-7,-4,3,-5,8,-9,10,-1,4,2,9,-9,6,9,6,-2,8,9,5,-2,7,-4,-1,-7,10,-2,-1,-9,4,2,4,2,9,5,7,-5,-9,1,-5,-8,10,-1,-1,-9,8,5,-5,-8,-10,6,-2,-2,-3,2,1,-10,10,-1,-4,7,4,-6,1,-5,6,-8,4,9,3,5,5,-5,9,-7,-10,6,8,-7,5,8,3,2,-6,-5,6,2,-7,6,7,-8,-10,3,6,7,-9,-7,-2,10,-3,6,-8,1,-7,1,4,9,4,4,-1,3,9,-4,10,1,-2,-5,5,-4,-4,-6,-4,4,8,-10,-10,-1,-5,-2,-1,-10,-9,-3,-10,-9,-4,3,-10,10,7,-9,4,-8,6,-4,10,-2,-9,-5,4,3,7,-9,-7,6,-8,-10,4,-9,-7,-9,-1,8,-6,8,7,9,1,2,7,-1,3,-5,-9,-9,-1,5,-9,-1,6,-6,-3,8,5,2,-7,6,4,7,8,-2,-4,1,10,8,-3,2,9,2,9,5,6,-6,-3,-6,10,-9,6,6,4,-5,-8,5,-4,-1,-10,1,-8,-8,1,-1,3,5,-2,7,-7,-6,-7,2,7,-6,-10,3,-3,6,-7,7,6,1,-3,7,1,4,-4,9,10,6,-4,7,-2,-3,1,-10,2,-9,2,-4,9,10,6,3,-7,-7,10,8,8,-10,1,-8,-5,-7,-2,7,3,-3,9,5,4,6,-6,5,-8,-3,-7,2,-7,-9,4,-10,-5,3,8,-9,10,6,10,9,6,-6,4,-7,9,-2,1,-9,5,-10,2,7,3,-9,5,-8,2,6,-2,-1,-6,-3,4,-3,5,-4,-3,10,-4,-8,9,-10,1,-10,-8,5,3,10,1,-8,9,5,5,-7,-6,-10,2,-7,5,-6,-8,6,9,9,-1,8,9,3,9,-2,6,10,-1,9,-6,-10,5,8,-2,-8,3,7,7,5,10,1,-9,-4,-9,8,-7,2,4,8,6,-1,1,-9,7,-6,-3,-5,-9,-5,-1,6,1,1,-7,-1,6,9,9,-8,4,-5,3,1,8,-2,9,6,5,7,-8,-4,2,2,5,-10,-5,8,-5,-10,5,2,10,-3,-7,9,-9,-2,10,4,3,6,7,6,3,4,9,-1,6,-6,-6,-8,1,8,3,9,-6,-6,1,6,7,3,8,7,-9,4,-1,10,2,3,2,3,-9,10,10,-3,5,-5,9,4,-6,-3,3,-8,3,-2,5,2,4,-1,7,-1,1,5,7,-8,-10,-9,4,9,1,4,-7,-10,-8,3,-7,8,-10,8,4,2,6,-8,1,2,9,7,-2,-6,2,-6,4,8,8,-5,1,6,-1,2,4,-5,9,10,1,-4,5,-3,-3,-5,7,3,9,7,-8,3,4,6,10,-7,-1,-3,10,-7,4,-5,-4,-1,2,3,9,-1,-4,8,-4,-4,-5,-1,-2,1,-10,9,7,-7,7,10,-7,-1,-9,-2,4,-7,-2,8,-9,-2,-5,5,10,-2,3,5,4,-1,-2,7,-1,-9,-5,9,-3,-4,-3,-2,-10,-1,8,-5,9,7,-10,-9,1,6,-4,1,-9,6,6,4,-4,-1,1,5,1,-1,-8,-2,10,-6,-4,-10,4,4,5,7,4,-10,-3,3,8,-7,-8,-5,8,1,-10,6,10,-5,-9,-4,2,8,-10,-1,6,-5,8,3,1,9,-6,7,-6,-10,-7,-6,8,-4,6,9,5,6,-3,-9,-2,10,-5,3,9,6,6,5,-7,-4,-6,3,-6,5,10,8,6,10,-4,3,-6,1,1,6,5,-1,5,-2,-4,2,1,-8,7,8,-10,-7,10,-8,4,-10,-6,-9,4,-1,8,-4,3,-6,1,6,-7,-8,10,1,-2,4,2,8,-5,-8,-2,2,6,10,3,9,-8,10,-4,4,2,3,-1,3,10,9,-4,1,-8,-5,4,3,-10,-2,4,10,5,-3,6,4,-7,-10,-3,-1,2,6,-2,10,1,-8,-9,2,-4,2,-1,8,1,-9,10,9,-9,-8,3,-5,-9,1,5,-3,10,-1,-2,-1,8,9,-1,10,1,-3,7,1,2,5,7,8,-3,-10,-7,-10,-10,-3,-5,-3,2,-3,3,-4,-7,-4,-6,4,1,-4,5,-3,1,8,-2,6,-4,-2,4,3,4,-6,8,-10,1,7,-8,-3,-10,-6,-1,-4,-3,1,2,-9,-9,-9,-2,-8,-2,1,9,8,-4,-10,7,9,2,-7,3,-5,10,1,-4,5,6,-8,9,-4,2,-7,10,1,5,8,-4,10,6,6,-4,6,8,-7,-9,1,5,-10,-3,6,-9,-5,5,8,9,-1,-6,5,2,10,-10,-3,-8,-7,6,-8,8,-1,-9,6,5,-2,-4,-7,-6,-8,-8,1,-5,-7,-2,7,6,-4,-7,4,-6,6,-3,8,8,8,-10,1,9,-8,3,-2,-3,6,5,-5,8,4,-2,3,-10,-7,-1,-8,8,-1,1,-10,8,-8,7,3,-5,-9,9,7,4,-4,4,-3,-7,-3,-6,5,-2,6,-6,-7,7,-8,-9,-10,10,-5,-3,9,3,-10,-9,-4,10,2,-10,-9,-4,-5,-3,-3,-8,-1,9,3,-4,-2,10,5,7,-9,4,-5,-6,-1,-7,4,-5,8,-7,-7,-4,5,6,-5,7,1,2,2,-6,9,-7,9,-9,3,8,6,-10,7,3,8,-7,-1,-5,-9,6,-6,-2,-5,4,7,-10,5,4,-4,5,6,3,3,2,10,-9,-3,3,-1,5,-10,-1,-5,-8,-3,-10,-7,8,-10,-1,2,-7,2,-2,7,-1,4,-2,6,-7,5,7,2,-1,10,3,3,-7,-9,7,10,-3,-9,-5,-8,-3,-2,4,-8,8,-8,-7,10,7,-5,-7,4,1,-6,-8,9,-7,2,6,-6,-7,5,7,-10,-7,1,-9,-4,10,-7,6,10,6,7,-1,6,9,-1,-9,1,5,-7,-10,-7,5,-9,-1,-6,-2,-10,-6,-2,-10,-9,4,-2,-5,7,4,-6,-1,9,5,-10,-6], dtype = "uint64")#candidate|5560|(1728,)|const|uint64
call_5559 = relay.TupleGetItem(func_2312_call(relay.reshape(const_5560.astype('uint64'), [9, 16, 12])), 0)
call_5561 = relay.TupleGetItem(func_2315_call(relay.reshape(const_5560.astype('uint64'), [9, 16, 12])), 0)
func_1282_call = mod.get_global_var('func_1282')
func_1289_call = mutated_mod.get_global_var('func_1289')
const_5567 = relay.const([-5,-2,-6,5,-3,-5,-4,4,-3,-7,-7,3,5,-8,5,9,-4,-6,9,4,8,-8,6,-2,1,10,-4,-9,4,-6,-3,-1,-7,7,8,-7,1,-9,-7,6,10,-8,-8,-3,-6,-5,5,4,-3,-7,-4,-9,2,-2,9,-1,-3,-5,-5,7,-9,-10,8,-6,7,-4,-10,6,3,2,-7,2,1,-2,8,-10,10,1,4,-1,-3,-1,-9,6,6,-3,1,2,-7,-10,4,9,-8,3,10,-4,-6,7,-2,7,-2,-1,-8,-7,-7,-7,7,-6,10,8,1,2,-6,3,1,6,-10,8,-1,-2,-2,-1,9,-5,-5,9,-6,3,10,-10,10,6,-2,-10,9,-1,-3,3,10,-2,-2,10,10,10,3,-10,-7,-3,-3,3,-6,-7,9,-4,-8,3,-5,-8,10,6,-9,8,-5,4,-5,9,1,2,-6,8,-1,1,-6,3,-8,-1,5,10,8,7,-1,5,-4,4,1,1,-3,-10,-3,4,9,-6,-3,-6,2,-6,-10,7,-10,-4,-10,-3,-9,-1,5,4,3,10,-8,-8,-10,3,9,-5,-8,-10,-6,-3,-7,9], dtype = "uint8")#candidate|5567|(220,)|const|uint8
var_5568 = relay.var("var_5568", dtype = "float64", shape = (128,))#candidate|5568|(128,)|var|float64
var_5569 = relay.var("var_5569", dtype = "int64", shape = (576,))#candidate|5569|(576,)|var|int64
const_5570 = relay.const([-4,7,-5,10,-3,-1,8,1,-6,1,-2,-10,7,-1,9,9,-4,-7,-3,4,-6,9,6,3,5,-4,1,2,-7,-7,10,10,-4,2,4,5,2,-7,4,-8,3,7,-5,-2,-9,-1,-6,-4,7,-10,-3,2,-9,-4,10,3,6,-7,-9,5,9,1,-4,8,1,2,-2,-9,-5,3,5,-9,8,-1,-9,8,-2,-3,-2,-8,6,-8,6,1,-10,-9,2,7,-7,8,-7,-2,-3,-5,-4,9,3,-2,5,-2,-8,4,-2,2,1,3,-6,9,2,6,7,9,5,10,-3,-6,7,10,1,7,2,4,-7,-9,6,-6,-3,4,-4,-7,-9,9,3,3,3,-9,-2,-5,3,9,-3,4,-9,5,1,2,7,5,-3,5,8,3,5,8,-5,-9,9,-4,2,-4,1,4,-9,7,7,10,-6,-5,2,-10,10,3,5,-10,9,9,-9,-8,-1,-10,7,-4,-2,3,-2,-1,4,-2,3,3,5,2,4,2,-4,-6,2,-5,10,-8,-3,-7,-3,4,-2,-6,1,-10,-7,-2,5,-6,-9,1,1,4,-8,-10,1,-9,-3,9,-2,-10,-9,1,-2,1,10,-3,-3,6,7,4,-2,-8,-7,-8,5,-9,-2,-10,-9,-6,-3,7,-3,9,9,-7,-6,7,-3,6,4,-2,-8,-9,-1,4,-3,2,-4,-7,4,-5,10,-8,8,10,-9,-6,-5,2,1,2,6,1,4,-6,-3,-3,-2,7,2,2,10,-8,5,10,5,4,-5,3,5,2,-10,-3,3,-2,5,-8,-4,-9,6,6,9,-1,5,8,3,9,4,-6,2,-3,4,4,-8,6,10,3,4,-8,10,-2,-7,-4,3,-9,8,3,-5,-9,-8,7,10,9,-6,4,2,-8,-7,9,4,4,-2,-5,2,10,-10,-9,-6,6,-5,9,6,-6,2,2,3,-8,-1,-10,9,-4,-6,1,1,-6,-8,4,4,9,-5,-4,7,1,-4,-2,10,2,-10,2], dtype = "int16")#candidate|5570|(384,)|const|int16
call_5566 = relay.TupleGetItem(func_1282_call(relay.reshape(const_5567.astype('uint8'), [11, 5, 4]), relay.reshape(const_5567.astype('uint8'), [11, 5, 4]), relay.reshape(var_5568.astype('float64'), [128,]), relay.reshape(var_5569.astype('int64'), [144, 4]), relay.reshape(const_5570.astype('int16'), [384,]), ), 2)
call_5571 = relay.TupleGetItem(func_1289_call(relay.reshape(const_5567.astype('uint8'), [11, 5, 4]), relay.reshape(const_5567.astype('uint8'), [11, 5, 4]), relay.reshape(var_5568.astype('float64'), [128,]), relay.reshape(var_5569.astype('int64'), [144, 4]), relay.reshape(const_5570.astype('int16'), [384,]), ), 2)
output = relay.Tuple([bop_5543,bop_5554,call_5559,const_5560,call_5566,const_5567,var_5568,var_5569,const_5570,])
output2 = relay.Tuple([bop_5543,bop_5554,call_5561,const_5560,call_5571,const_5567,var_5568,var_5569,const_5570,])
func_5580 = relay.Function([var_5541,var_5542,var_5547,var_5568,var_5569,], output)
mod['func_5580'] = func_5580
mod = relay.transform.InferType()(mod)
var_5581 = relay.var("var_5581", dtype = "float32", shape = (4, 6, 3))#candidate|5581|(4, 6, 3)|var|float32
var_5582 = relay.var("var_5582", dtype = "float32", shape = (4, 6, 3))#candidate|5582|(4, 6, 3)|var|float32
var_5583 = relay.var("var_5583", dtype = "float32", shape = (4, 6, 3))#candidate|5583|(4, 6, 3)|var|float32
var_5584 = relay.var("var_5584", dtype = "float64", shape = (128,))#candidate|5584|(128,)|var|float64
var_5585 = relay.var("var_5585", dtype = "int64", shape = (576,))#candidate|5585|(576,)|var|int64
output = func_5580(var_5581,var_5582,var_5583,var_5584,var_5585,)
func_5586 = relay.Function([var_5581,var_5582,var_5583,var_5584,var_5585,], output)
mutated_mod['func_5586'] = func_5586
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6134 = relay.var("var_6134", dtype = "float32", shape = (1, 10, 11))#candidate|6134|(1, 10, 11)|var|float32
var_6135 = relay.var("var_6135", dtype = "float32", shape = (5, 10, 11))#candidate|6135|(5, 10, 11)|var|float32
bop_6136 = relay.maximum(var_6134.astype('float32'), var_6135.astype('float32')) # shape=(5, 10, 11)
func_3215_call = mod.get_global_var('func_3215')
func_3218_call = mutated_mod.get_global_var('func_3218')
const_6140 = relay.const([1,7,-6,-1,5,-10,8,-9,-10,-5,5,1,-6,5,-1,4,-8,1,2,-2,1,7,5,6,-4,-4,1,-4,-6,-5,-3,-10,3,-5,-5,-9,9,6,5,-9,4,-7,-9,-4,-2,-3,-9,4,-4,7,7,8,4,-2,-7,-8,-6,-6,6,9,10,-10,5,-2,-6,10,5,-3,-1,9,-8,9,-2,9,8,5,-2,-8,1,-5,9,2,3,-6,-2,4,-2,6,-9,-1,2,4,2,-10,2,-10,1,6,9,10,-6,1,-7,-3], dtype = "uint64")#candidate|6140|(104,)|const|uint64
const_6141 = relay.const([3,1,9,9,-4,5,1,-10,-1,6,-10,6,-10,10,1,-7,-5,4,-2,3,6,-2,5,-6,2,-8,6,-6,8,10,-7,8,7,-6,-6,7,-9,1,-2,10,10,-8,5,1,-2,-5,-1,-1,-4,9,7,6,-4,10,5,-10,2,-9,2,10,-2,2,-7,-6,-1,-5,-1,-4,7,1,-6,4,10,4,-3,7,1,-3,-2,1,3,2,6,-9,2,2,-2,7,-2,-6,-5,-4,-2,-5,5,-10,2,4,-9,-1,-4,2,-1,-10,10,-10,8,-1,1,5,-4,6,-6,-5,3,8,9,5,-9,-7,-10,-3,-10,-1,4,9,-10,5,-5,-2,6,-6,-2,-9,6,7,2,6,-8,-5,2,2,10,1,10,6,5,-5,4,5,9,-8,6,2,-3,-8,-4,-9,2,2,3,-9,9,-5,-5,5,-4,4,-8,-6,7,8,-6,6,8,9,-5,2,-10,8,-7,1,5,3,-4,-6,3,-2,2,-9,5,2,8,-3,10,8,-2,1,4,5,-3,1,-7,-8,-1,9,-7,-4], dtype = "uint64")#candidate|6141|(208,)|const|uint64
call_6139 = relay.TupleGetItem(func_3215_call(relay.reshape(const_6140.astype('uint64'), [8, 1, 13]), relay.reshape(const_6141.astype('uint64'), [8, 2, 13]), ), 2)
call_6142 = relay.TupleGetItem(func_3218_call(relay.reshape(const_6140.astype('uint64'), [8, 1, 13]), relay.reshape(const_6141.astype('uint64'), [8, 2, 13]), ), 2)
var_6143 = relay.var("var_6143", dtype = "uint64", shape = (104,))#candidate|6143|(104,)|var|uint64
bop_6144 = relay.subtract(const_6140.astype('uint16'), relay.reshape(var_6143.astype('uint16'), relay.shape_of(const_6140))) # shape=(104,)
func_2312_call = mod.get_global_var('func_2312')
func_2315_call = mutated_mod.get_global_var('func_2315')
const_6165 = relay.const([[4,-5,9,1,5,-5,-10,5,-1,-10,6,9,-8,7,-5,-8,-7,7,10,-10,-8,5,6,-3,-4,9,4,-7,-8,-10,5,2,-10,8,5,-4,-2,8,-8,6,-6,1,-2,-4,-3,1,-2,-8,2,-2,-3,-9,-5,3,-9,-7,-4,5,-7,6,3,5,-10,6,10,-6,-4,8,-1,-5,9,-5,10,-1,-7,4,2,-5,-6,-4,-9,-9,-5,-4,-9,-9,9,-3,2,-6,1,-10,1,5,6,-4,-2,-10,2,-5,1,1,-6,10,8,-8,6,-2,-1,4,8,4,5,-7,10,-7,-4,2,3,-9,-6,10,4,8,-8,-5,-2,-4,-7,-5,-1,-7,-1,6,-8,6,1,-5,5,2,-8,8,10,-9,3,3,6,-10,8,4,-2,-2,-4,9,2,1,-2,4,-2,-8,-6,-10,10,3,7,-4,6,3,-2,-9,8,6,10,-2,2,-9,1,-5,1,-9,-3,-9,-6,1,7,-2,-10,2,8,-4,6,-1,3,9,1,-2,8,7,4,-2,8,3,-4,-1,3,-3,9,7,9,7,2,8,1,-6,3,-7,3,10,6,-10,-5,7,8,-9,10,8,-5,3,-2,-4,-6,6,10,-7,-7,5,-9,-9,8,5,-2,-9,-1,-7,-1,10,2,7,3,-8,10,-4,8,7,9,-4,-4,10,-5,-8,9,-6,-3,-1,-8,7,-2,8,-4,6,4,4,2,1,4,6,7,-2,-4,9,2,9,-8,-4,9,-6,1,-10,8,10,3,3,5,-2,-8,10,-8,-4,5,1,-9,6,-8,2,-2,-8,-8,6,-6,-4,-1,4,5,-8,-3,4,-5,-1,9,-9,-6,5,-5,9,9,-8,10,-10,8,-3,6,-5,10,-1,9,-9,4,9,4,3,-1,-4,2,6,-1,-5,8,5,7,-6,-6,1,10,-1,8,-8,6,-2,7,2,-8,-4,-6,4,-6,2,-7,4,-3,-4,3,-9,-5,9,8,-7,-8,-3,-1,-10,9,-9,-4,-6,7,7,-1,9,9,5,1,6,-4,-6,5,-1,7,-1,-10,8,-6,-9,3,-4,-8,-2,2,8,6,-2,-9,5,1,-9,-2,10,5,-6,7,-3,-8,4,2,9,-8,-8,4,-5,9,7,4,-1,9,5,9,3,-4,9,-10,3,9,-5,7,9,-5,-7,-6,-5,-8,-4,-10,-4,3,10,2,-3,9,6,-9,1,-3,-2,9,-7,2,5,6,8,-5,-7,4,-9,-8,-8,-2,-1,-9,6,-2,6,4,-8,3,2,-6,4,-8,4,2,3,1,10,6,-8,1,-6,7,5,-10,7,-7,6,6,9,2,-1,-5,2,7,4,8,-4,2,5,6,7,-3,-9,5,-4,-10,-9,-5,8,5,-3,2,7,5,-9,4,-6,-1,5,-5,-10,-5,1,1,6,-3,-8,4,-10,-5,-2,5,5,5,1,-10,-4,-3,7,-6,10,9,6,-3,-4,7,9,-6,-9,6,-10,4,-1,10,-1,-10,6,10,5,-10,4,-5,-9,-9,3,-10,-2,-8,1,1,-4,6,-2,-4,2,4,-9,-8,9,9,-3,-4,7,-9,1,2,-3,-7,-5,-10,3,2,2,-4,-9,4,6,-8,1,1,7,9,-2,-5,-7,3,-10,6,4,4,3,-7,7,9,-1,3,-4,8,-9,2,-7,-8,9,-8,3,8,1,4,9,9,6,9,-2,-9,-9,1,-5,4,4,-8,-7,3,-10,-7,2,2,-6,1,8,-3,10,-7,-2,10,-3,2,-3,-10,-2,5,-3,-4,-7,-10,-5,-4,-6,10,1,3,6,-6,10,5,2,-6,6,5,6,-10,6,-4,6,2,3,3,-3,-2,4,-5,-9,1,-4,1,-10,9,-5,-10,-8,-6,10,-2,-10,-5,2,-1,2,8,-8,4,-8,-6,9,-1,10,9,9,-2,8,3,7,2,-6,3,-7,-2,1,5,-5,8,6,-5,9,-3,-5,6,10,9,-6,10,1,-8,3,4,-2,5,-10,-2,-10,-5,-3,6,10,-9,-10,-2,2,-5,3,-3,4,4,8,2,-3,2,-1,-7,-2,7,-5,4,9,2,-1,-9,-3,-8,1,9,-8,-7,-7,-9,-3,4,-7,7,8,-2,-6,-1,-5,2,-8,7,-1,-6,-1,1,3,-1,-2,8,8,8,-10,3,-9,-1,-5,4,5,8,6,7,5,-4,4,8,2,6,-8,-9,-3,3,-1,7,10,9,7,9,-5,2,5,-1,-7,-10,7,1,2,-9,-4,8,-4,-9,-4,-4,1,8,7,2,-8,10,-4,5,-6,10,5,-1,6,1,-10,10,-2,-7,10,4,2,3,-4,3,-7,7,4,10,-9,1,-5,-3,9,-7,-7,-7,4,6,-2,-7,5,-8,3,8,-6,-3,10,-9,6,-10,-6,4,8,-7,1,7,9,3,-3,6,-2,4,7,-2,1,5,-8,-7,-1,7,2,7,1,-5,-3,-8,4,-6,7,-3,8,6,-9,2,-9,3,5,5,2,-2,3,-9,-2,-9,4,7,-1,10,8,-1,3,10,-4,3,5,2,-5,-6,-7,-8,-6,-3,-10,7,6,-4,-2,4,9,1,-3,3,-3,5,-3,-10,-9,-6,-7,6,-10,10,-5,7,2,-8,-10,-2,-8,-4,-1,-10,9,-9,8,10,6,-2,-4,2,7,-4,-9,-4,5,-9,-2,9,8,8,1,-6,7,7,6,-1,9,2,2,-8,1,5,8,-7,-2,-2,2,-2,-5,2,8,4,1,-9,1,-1,-5,-8,-2,9,1,-9,-1,-5,9,10,3,7,10,-6,-3,5,-5,1,1,3,3,-6,2,3,-9,1,6,5,-5,-9,9,-6,-1,2,-7,4,7,-4,-9,2,-9,9,4,3,4,10,8,-8,3,10,4,-9,4,-10,10,3,7,-5,6,10,2,3,-6,-10,10,-8,-6,5,-10,-4,-9,10,-9,-8,-4,4,10,5,-8,-4,9,-5,9,-6,7,9,-9,3,-5,10,9,3,-1,5,7,10,-3,10,4,-1,8,-6,-9,2,10,-3,-7,-10,7,10,7,10,4,2,-6,7,-4,-10,6,7,5,6,-6,-4,4,-9,-5,-2,6,7,8,-5,-8,7,8,-9,4,9,-4,7,7,10,2,1,8,2,-1,-8,4,5,1,-7,1,-7,6,-4,9,-5,8,8,3,1,7,-2,-7,4,-1,3,4,-9,-5,5,9,-4,7,2,-4,-3,4,-5,-4,-7,8,9,1,4,2,-9,-1,-9,-8,8,4,6,-9,-7,8,10,-5,9,10,1,5,5,6,6,-3,-8,8,-2,-5,-3,-4,-10,-5,-4,-2,-7,6,5,-3,4,7,-4,-5,5,-7,2,3,-10,-1,-3,1,2,-9,-9,-1,-10,-6,7,-3,1,3,1,5,4,8,-9,-7,-6,1,3,-10,-2,9,8,-2,-2,-2,2,-6,3,6,-3,-6,-1,6,-1,-9,3,-10,10,9,8,-4,-1,7,-2,-10,5,-8,5,2,-2,-8,-9,-7,-2,-10,10,-1,2,-8,10,-3,-4,-5,7,-4,8,-8,-2,-7,-3,-5,1,-7,5,-9,-3,-3,-5,7,-6,3,-5,-3,7,-1,7,5,-3,10,6,-4,2,-6,-6,9,6,-7,6,-5,-2,-3,-4,6,1,-5,7,-7,-7,-6,-8,4,-10,2,-1,-8,7,1,-10,-9,4,9,5,10,9,-4,4,10,7,9,10,10,-9,-9,9,-9,1,-4,-1,8,-2,-8,8,-2,9,4,9,7,4,-4,-5,6,10,-2,-4,-3,-3,-5,-7,8,8,-5,6,4,1,3,-10,2,6,-3,4,-9,4,-10,10,-9,1,-7,10,-9,7,5,-10,9,10,-8,-7,3,-2,-6,-2,3,1,-2,-1,-1,10,8,-4,-8,1,1,5,-1,9,-1,10,-6,-6,-1,-7,5,-8,-9,-2,-7,3,10,1,4,7,-3,-1,-10,-7,-4,-1,4,-2,4,-10,-6,8,-2,5,1,3,-1,-4,1,-1,-6,2,4,4,7,-8,8,8,8,-8,-7,4,-5,-10,10,1,-6,7,-8,-7,-5,-9,4,5,-3,1,-3,-10,5,-7,3,-10,-3,-8,-10,-8,-1,-9,4,-7,8,7,-2,2,-8,2,-6,-10,-1,-10,1,-7,-4,-9,2,-7,3,2,2,-5,-10,2,1,-5,-10,5,-4,6,-1,-8,1,1,-9,1,6,4,5,4,-9,8,7,-1,-8,-8,-3,1,-4,-10,-7,8,9,1,-9,-7,7,8,-3,-2,-7,9,1,-4,2,1,6,-5,1,-6,3,7,-3,2,3,6,-8,-9,-6,-5,-6,-10,-6,-7,10,-7,9,3,-10,-7,-10,-2,9,-7,-4,-5,-9,-5,1,1,-5,4,-2,-5,1,7,6,-10,-3,-2,-9,9,4,-10,6,-8,-10,7,1,-8,6,6,5,7,-2,4,5,-7,9,-6,1,-8,-8,6,-8,2,10,-8,-3,-2,3,8,3,-1,-5,7,-2,-10,1,8,8,7,-9,2,9,8,-4,-2,-2,-9,-1,-6,3,-1,-9,6,-10]], dtype = "uint64")#candidate|6165|(1, 1728)|const|uint64
call_6164 = relay.TupleGetItem(func_2312_call(relay.reshape(const_6165.astype('uint64'), [9, 16, 12])), 1)
call_6166 = relay.TupleGetItem(func_2315_call(relay.reshape(const_6165.astype('uint64'), [9, 16, 12])), 1)
func_2801_call = mod.get_global_var('func_2801')
func_2803_call = mutated_mod.get_global_var('func_2803')
var_6170 = relay.var("var_6170", dtype = "float64", shape = (784,))#candidate|6170|(784,)|var|float64
call_6169 = func_2801_call(relay.reshape(var_6170.astype('float64'), [7, 14, 8]))
call_6171 = func_2801_call(relay.reshape(var_6170.astype('float64'), [7, 14, 8]))
output = relay.Tuple([bop_6136,call_6139,const_6141,bop_6144,call_6164,const_6165,call_6169,var_6170,])
output2 = relay.Tuple([bop_6136,call_6142,const_6141,bop_6144,call_6166,const_6165,call_6171,var_6170,])
func_6189 = relay.Function([var_6134,var_6135,var_6143,var_6170,], output)
mod['func_6189'] = func_6189
mod = relay.transform.InferType()(mod)
var_6190 = relay.var("var_6190", dtype = "float32", shape = (1, 10, 11))#candidate|6190|(1, 10, 11)|var|float32
var_6191 = relay.var("var_6191", dtype = "float32", shape = (5, 10, 11))#candidate|6191|(5, 10, 11)|var|float32
var_6192 = relay.var("var_6192", dtype = "uint64", shape = (104,))#candidate|6192|(104,)|var|uint64
var_6193 = relay.var("var_6193", dtype = "float64", shape = (784,))#candidate|6193|(784,)|var|float64
output = func_6189(var_6190,var_6191,var_6192,var_6193,)
func_6194 = relay.Function([var_6190,var_6191,var_6192,var_6193,], output)
mutated_mod['func_6194'] = func_6194
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6684 = relay.var("var_6684", dtype = "float32", shape = (6, 15, 10))#candidate|6684|(6, 15, 10)|var|float32
uop_6685 = relay.exp(var_6684.astype('float32')) # shape=(6, 15, 10)
func_3215_call = mod.get_global_var('func_3215')
func_3218_call = mutated_mod.get_global_var('func_3218')
const_6698 = relay.const([-8,-6,-3,-2,3,-8,-9,4,-1,-7,-10,-9,-8,-9,-9,-10,-3,3,7,-5,-3,1,3,5,6,2,-2,9,6,-1,-6,-3,-9,-5,2,-7,4,4,5,-1,5,9,6,7,5,6,1,2,-8,6,-8,-4,3,10,-9,-1,6,-2,-7,6,-7,5,4,7,4,-3,-8,-7,-6,1,9,10,1,10,10,-1,-10,2,4,7,5,-2,-8,-6,-5,-10,8,-2,1,-8,-9,8,7,-3,-1,1,-2,-9,-2,-5,-3,-3,-6,-1], dtype = "uint64")#candidate|6698|(104,)|const|uint64
var_6699 = relay.var("var_6699", dtype = "uint64", shape = (208,))#candidate|6699|(208,)|var|uint64
call_6697 = relay.TupleGetItem(func_3215_call(relay.reshape(const_6698.astype('uint64'), [8, 1, 13]), relay.reshape(var_6699.astype('uint64'), [8, 2, 13]), ), 1)
call_6700 = relay.TupleGetItem(func_3218_call(relay.reshape(const_6698.astype('uint64'), [8, 1, 13]), relay.reshape(var_6699.astype('uint64'), [8, 2, 13]), ), 1)
output = relay.Tuple([uop_6685,call_6697,const_6698,var_6699,])
output2 = relay.Tuple([uop_6685,call_6700,const_6698,var_6699,])
func_6704 = relay.Function([var_6684,var_6699,], output)
mod['func_6704'] = func_6704
mod = relay.transform.InferType()(mod)
mutated_mod['func_6704'] = func_6704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6704_call = mutated_mod.get_global_var('func_6704')
var_6706 = relay.var("var_6706", dtype = "float32", shape = (6, 15, 10))#candidate|6706|(6, 15, 10)|var|float32
var_6707 = relay.var("var_6707", dtype = "uint64", shape = (208,))#candidate|6707|(208,)|var|uint64
call_6705 = func_6704_call(var_6706,var_6707,)
output = call_6705
func_6708 = relay.Function([var_6706,var_6707,], output)
mutated_mod['func_6708'] = func_6708
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6831 = relay.const(6, dtype = "int8")#candidate|6831|()|const|int8
var_6832 = relay.var("var_6832", dtype = "int8", shape = (1, 3, 1))#candidate|6832|(1, 3, 1)|var|int8
bop_6833 = relay.bitwise_xor(const_6831.astype('int8'), var_6832.astype('int8')) # shape=(1, 3, 1)
func_3215_call = mod.get_global_var('func_3215')
func_3218_call = mutated_mod.get_global_var('func_3218')
var_6838 = relay.var("var_6838", dtype = "uint64", shape = (104, 1))#candidate|6838|(104, 1)|var|uint64
const_6839 = relay.const([-4,-6,-3,-2,-1,-5,-10,-2,-1,8,6,-7,-6,9,9,-2,2,9,-2,8,-9,-4,9,-2,6,-8,-8,9,5,8,7,6,-8,5,-7,5,-7,-7,-6,-9,-8,7,5,-2,1,4,-9,-7,7,-9,8,10,-5,-4,-3,5,3,9,-5,6,-2,4,-3,10,-7,-4,-5,10,9,-2,6,-6,-9,-5,-8,10,3,1,9,8,10,-10,-4,4,-2,-6,6,-9,8,9,7,6,-5,10,10,-1,7,7,10,7,-10,4,4,8,9,8,9,8,2,-10,-5,3,2,5,1,-6,4,6,-3,-2,4,-8,3,-6,5,7,7,-2,-2,-1,-7,-6,6,9,-8,2,10,-2,-8,-9,-6,-3,-8,2,-1,5,-9,-9,4,-6,10,2,-2,4,-7,-2,-1,4,9,-1,8,-8,-8,-3,8,3,-9,-9,-3,8,-6,-1,-7,-10,2,9,-9,8,-8,10,-10,4,-9,-8,-6,10,-1,10,-9,-6,-4,-2,4,10,1,-7,-2,10,-4,4,7,1,-9,7,3,-9,-8,10], dtype = "uint64")#candidate|6839|(208,)|const|uint64
call_6837 = relay.TupleGetItem(func_3215_call(relay.reshape(var_6838.astype('uint64'), [8, 1, 13]), relay.reshape(const_6839.astype('uint64'), [8, 2, 13]), ), 0)
call_6840 = relay.TupleGetItem(func_3218_call(relay.reshape(var_6838.astype('uint64'), [8, 1, 13]), relay.reshape(const_6839.astype('uint64'), [8, 2, 13]), ), 0)
func_3215_call = mod.get_global_var('func_3215')
func_3218_call = mutated_mod.get_global_var('func_3218')
call_6843 = relay.TupleGetItem(func_3215_call(relay.reshape(var_6838.astype('uint64'), [8, 1, 13]), relay.reshape(const_6839.astype('uint64'), [8, 2, 13]), ), 0)
call_6844 = relay.TupleGetItem(func_3218_call(relay.reshape(var_6838.astype('uint64'), [8, 1, 13]), relay.reshape(const_6839.astype('uint64'), [8, 2, 13]), ), 0)
output = relay.Tuple([bop_6833,call_6837,var_6838,const_6839,call_6843,])
output2 = relay.Tuple([bop_6833,call_6840,var_6838,const_6839,call_6844,])
func_6847 = relay.Function([var_6832,var_6838,], output)
mod['func_6847'] = func_6847
mod = relay.transform.InferType()(mod)
mutated_mod['func_6847'] = func_6847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6847_call = mutated_mod.get_global_var('func_6847')
var_6849 = relay.var("var_6849", dtype = "int8", shape = (1, 3, 1))#candidate|6849|(1, 3, 1)|var|int8
var_6850 = relay.var("var_6850", dtype = "uint64", shape = (104, 1))#candidate|6850|(104, 1)|var|uint64
call_6848 = func_6847_call(var_6849,var_6850,)
output = call_6848
func_6851 = relay.Function([var_6849,var_6850,], output)
mutated_mod['func_6851'] = func_6851
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7061 = relay.var("var_7061", dtype = "float64", shape = (6, 4, 15))#candidate|7061|(6, 4, 15)|var|float64
uop_7062 = relay.sigmoid(var_7061.astype('float64')) # shape=(6, 4, 15)
func_254_call = mod.get_global_var('func_254')
func_256_call = mutated_mod.get_global_var('func_256')
var_7065 = relay.var("var_7065", dtype = "int64", shape = (576,))#candidate|7065|(576,)|var|int64
call_7064 = relay.TupleGetItem(func_254_call(relay.reshape(var_7065.astype('int64'), [8, 6, 12])), 0)
call_7066 = relay.TupleGetItem(func_256_call(relay.reshape(var_7065.astype('int64'), [8, 6, 12])), 0)
uop_7067 = relay.log10(uop_7062.astype('float32')) # shape=(6, 4, 15)
uop_7074 = relay.rsqrt(uop_7062.astype('float64')) # shape=(6, 4, 15)
func_3458_call = mod.get_global_var('func_3458')
func_3461_call = mutated_mod.get_global_var('func_3461')
const_7082 = relay.const([[-3.905846,2.856492,3.892334,-6.971315,6.956277,7.827792,-6.171876,6.060600,-5.501650,1.918934,2.046361,1.062028,-6.853356,-2.576121,4.456277,5.570021,8.627864,5.959884,3.136231,5.545689,-7.745836,-9.158059,-7.184069,-9.820327,9.588315,-6.282934,7.033824,-6.860746,-0.130743,-0.603208,4.860937,5.640580,-2.941496,4.142773,-5.917857,-3.244184,-1.536996,-5.752894,1.392606,7.212369,-5.954190,8.922258,-3.448307,6.973421,-0.406980,-9.858013,0.818192,5.402156,7.007314,0.451490,0.271660,-9.760553,-3.119948,-4.685636,1.833926,-3.340845,-0.724017,3.099292,9.001413,5.336751]], dtype = "float32")#candidate|7082|(1, 60)|const|float32
var_7083 = relay.var("var_7083", dtype = "float64", shape = (48,))#candidate|7083|(48,)|var|float64
call_7081 = relay.TupleGetItem(func_3458_call(relay.reshape(const_7082.astype('float32'), [12, 5, 1]), relay.reshape(var_7083.astype('float64'), [4, 12]), ), 1)
call_7084 = relay.TupleGetItem(func_3461_call(relay.reshape(const_7082.astype('float32'), [12, 5, 1]), relay.reshape(var_7083.astype('float64'), [4, 12]), ), 1)
uop_7085 = relay.log(uop_7062.astype('float64')) # shape=(6, 4, 15)
func_3215_call = mod.get_global_var('func_3215')
func_3218_call = mutated_mod.get_global_var('func_3218')
const_7089 = relay.const([-10,-5,8,-7,10,7,-1,-10,2,6,-5,5,-6,9,-3,-3,1,-7,5,-5,-7,9,-5,-6,-6,-1,3,4,8,9,10,-4,3,1,-5,-2,-3,10,-1,-6,-1,10,3,-3,9,-2,-7,1,-8,-5,1,5,10,1,-4,-10,4,-6,8,-7,5,-6,-6,10,3,4,5,-7,7,-8,-7,-3,-2,9,2,7,-7,-10,1,-6,-7,8,10,-1,-5,5,9,6,-8,-1,3,8,10,3,-7,-8,9,-10,-1,-5,2,-2,-9,4], dtype = "uint64")#candidate|7089|(104,)|const|uint64
const_7090 = relay.const([10,5,8,-5,9,-9,-10,-2,7,-1,-2,4,4,4,5,-5,-9,-4,-6,-9,-2,-1,-7,1,8,6,-5,-6,4,-6,1,-3,-2,7,-5,-4,-5,9,9,5,2,-7,-2,7,-5,6,-6,6,5,7,-2,-8,7,-10,-7,-4,-6,7,6,-3,-7,-8,-7,3,2,3,1,2,9,4,6,-5,1,-10,6,-1,-4,7,7,-7,-10,-2,4,-6,-7,6,-10,-8,5,-1,3,5,3,1,4,7,-10,2,7,6,-10,-7,-5,3,-3,10,-4,-5,1,-7,6,8,4,-10,1,5,10,2,-7,5,7,7,-4,-10,-8,9,-10,-2,10,5,9,1,-2,-5,7,-8,-9,10,7,8,5,-1,-8,-1,-6,8,-6,7,5,6,3,-8,1,8,8,-3,-5,9,-1,2,7,-5,2,-1,-3,8,-5,10,4,3,-4,-4,3,4,4,-3,7,-3,9,5,5,2,10,3,10,8,2,-4,-5,-3,2,9,-4,-8,8,-9,-9,-2,-2,4,1,-7,4,-2,-8,8,-10,1], dtype = "uint64")#candidate|7090|(208,)|const|uint64
call_7088 = relay.TupleGetItem(func_3215_call(relay.reshape(const_7089.astype('uint64'), [8, 1, 13]), relay.reshape(const_7090.astype('uint64'), [8, 2, 13]), ), 1)
call_7091 = relay.TupleGetItem(func_3218_call(relay.reshape(const_7089.astype('uint64'), [8, 1, 13]), relay.reshape(const_7090.astype('uint64'), [8, 2, 13]), ), 1)
output = relay.Tuple([call_7064,var_7065,uop_7067,uop_7074,call_7081,const_7082,var_7083,uop_7085,call_7088,const_7089,const_7090,])
output2 = relay.Tuple([call_7066,var_7065,uop_7067,uop_7074,call_7084,const_7082,var_7083,uop_7085,call_7091,const_7089,const_7090,])
func_7104 = relay.Function([var_7061,var_7065,var_7083,], output)
mod['func_7104'] = func_7104
mod = relay.transform.InferType()(mod)
mutated_mod['func_7104'] = func_7104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7104_call = mutated_mod.get_global_var('func_7104')
var_7106 = relay.var("var_7106", dtype = "float64", shape = (6, 4, 15))#candidate|7106|(6, 4, 15)|var|float64
var_7107 = relay.var("var_7107", dtype = "int64", shape = (576,))#candidate|7107|(576,)|var|int64
var_7108 = relay.var("var_7108", dtype = "float64", shape = (48,))#candidate|7108|(48,)|var|float64
call_7105 = func_7104_call(var_7106,var_7107,var_7108,)
output = call_7105
func_7109 = relay.Function([var_7106,var_7107,var_7108,], output)
mutated_mod['func_7109'] = func_7109
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7451 = relay.var("var_7451", dtype = "int32", shape = (13, 10, 4))#candidate|7451|(13, 10, 4)|var|int32
var_7452 = relay.var("var_7452", dtype = "int32", shape = (13, 10, 4))#candidate|7452|(13, 10, 4)|var|int32
bop_7453 = relay.bitwise_xor(var_7451.astype('int32'), relay.reshape(var_7452.astype('int32'), relay.shape_of(var_7451))) # shape=(13, 10, 4)
output = relay.Tuple([bop_7453,])
output2 = relay.Tuple([bop_7453,])
func_7458 = relay.Function([var_7451,var_7452,], output)
mod['func_7458'] = func_7458
mod = relay.transform.InferType()(mod)
var_7459 = relay.var("var_7459", dtype = "int32", shape = (13, 10, 4))#candidate|7459|(13, 10, 4)|var|int32
var_7460 = relay.var("var_7460", dtype = "int32", shape = (13, 10, 4))#candidate|7460|(13, 10, 4)|var|int32
output = func_7458(var_7459,var_7460,)
func_7461 = relay.Function([var_7459,var_7460,], output)
mutated_mod['func_7461'] = func_7461
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7465 = relay.var("var_7465", dtype = "int64", shape = (10, 5, 14))#candidate|7465|(10, 5, 14)|var|int64
var_7466 = relay.var("var_7466", dtype = "int64", shape = (10, 5, 14))#candidate|7466|(10, 5, 14)|var|int64
bop_7467 = relay.right_shift(var_7465.astype('int64'), relay.reshape(var_7466.astype('int64'), relay.shape_of(var_7465))) # shape=(10, 5, 14)
func_1939_call = mod.get_global_var('func_1939')
func_1941_call = mutated_mod.get_global_var('func_1941')
const_7479 = relay.const([[5.676913,4.802120,7.110792,-8.772636,-8.797545,6.511862,-6.695775,-5.392407,5.761354,6.785972,9.248147,-2.292153,-3.822655,5.639150,4.338614,9.766151,6.773699,-9.510891,-1.181382,8.901710,-8.736378,4.751905,6.710474,3.314717],[7.214368,8.644328,-0.810420,9.642870,-0.673082,-1.386925,-6.822513,-3.929785,-4.403580,-6.669970,2.848998,2.422707,-8.075246,-8.422269,-7.802022,-6.934813,-6.567064,-8.803000,5.870547,2.395574,-6.046093,-5.445643,7.950915,-2.942935]], dtype = "float64")#candidate|7479|(2, 24)|const|float64
call_7478 = func_1939_call(relay.reshape(const_7479.astype('float64'), [6, 1, 8]))
call_7480 = func_1939_call(relay.reshape(const_7479.astype('float64'), [6, 1, 8]))
output = relay.Tuple([bop_7467,call_7478,const_7479,])
output2 = relay.Tuple([bop_7467,call_7480,const_7479,])
func_7507 = relay.Function([var_7465,var_7466,], output)
mod['func_7507'] = func_7507
mod = relay.transform.InferType()(mod)
var_7508 = relay.var("var_7508", dtype = "int64", shape = (10, 5, 14))#candidate|7508|(10, 5, 14)|var|int64
var_7509 = relay.var("var_7509", dtype = "int64", shape = (10, 5, 14))#candidate|7509|(10, 5, 14)|var|int64
output = func_7507(var_7508,var_7509,)
func_7510 = relay.Function([var_7508,var_7509,], output)
mutated_mod['func_7510'] = func_7510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7783 = relay.var("var_7783", dtype = "float64", shape = (6, 2, 3))#candidate|7783|(6, 2, 3)|var|float64
uop_7784 = relay.cos(var_7783.astype('float64')) # shape=(6, 2, 3)
func_3215_call = mod.get_global_var('func_3215')
func_3218_call = mutated_mod.get_global_var('func_3218')
const_7791 = relay.const([[-4,8],[-6,7],[9,10],[-1,-7],[-4,8],[10,-5],[2,3],[-4,2],[3,4],[-5,9],[-7,10],[-9,-6],[6,3],[8,2],[1,-7],[6,5],[-9,1],[9,8],[8,-3],[-6,9],[5,-8],[9,-2],[7,7],[9,5],[10,2],[5,-5],[-7,-7],[9,5],[-10,-8],[-6,1],[-2,-7],[2,-8],[7,4],[-9,4],[-9,-1],[8,2],[-10,9],[1,-9],[10,-1],[-9,7],[-9,9],[-1,-4],[-3,9],[-10,7],[9,7],[-6,2],[-6,10],[-4,-3],[-7,-8],[3,-9],[6,8],[-8,7]], dtype = "uint64")#candidate|7791|(52, 2)|const|uint64
const_7792 = relay.const([[8,-3],[-8,-6],[9,-7],[-2,10],[-2,1],[10,-8],[-6,-5],[-6,5],[4,10],[4,7],[10,6],[4,3],[9,-8],[3,-5],[10,4],[-8,9],[6,6],[-7,-3],[6,8],[-5,5],[-6,-2],[9,-8],[7,5],[10,7],[-5,-3],[-5,-1],[4,-10],[2,-3],[-2,-7],[-2,2],[-6,5],[2,9],[-7,2],[-9,-5],[-4,-1],[4,-7],[1,-7],[-9,-2],[-5,1],[3,7],[-2,-5],[1,3],[-7,-2],[-8,-7],[-2,-2],[3,-8],[-5,8],[-8,-9],[3,1],[-4,-9],[-9,-3],[-1,6],[5,6],[3,10],[2,-7],[10,-9],[2,7],[4,-8],[-1,2],[1,5],[7,6],[7,10],[-4,10],[-3,-7],[10,-10],[1,7],[-10,4],[-6,-7],[-4,3],[-1,-1],[-9,10],[-9,-8],[2,3],[-7,7],[-1,7],[2,10],[-9,5],[7,-6],[6,-2],[-3,-4],[-8,8],[9,-3],[6,8],[5,2],[-5,5],[-5,-10],[-7,6],[3,-2],[-8,6],[-8,8],[10,2],[5,1],[-10,-4],[9,6],[8,-5],[3,-2],[10,6],[9,-1],[-1,-6],[6,-6],[6,-3],[-6,3],[2,-5],[-5,-4]], dtype = "uint64")#candidate|7792|(104, 2)|const|uint64
call_7790 = relay.TupleGetItem(func_3215_call(relay.reshape(const_7791.astype('uint64'), [8, 1, 13]), relay.reshape(const_7792.astype('uint64'), [8, 2, 13]), ), 2)
call_7793 = relay.TupleGetItem(func_3218_call(relay.reshape(const_7791.astype('uint64'), [8, 1, 13]), relay.reshape(const_7792.astype('uint64'), [8, 2, 13]), ), 2)
func_1332_call = mod.get_global_var('func_1332')
func_1335_call = mutated_mod.get_global_var('func_1335')
var_7795 = relay.var("var_7795", dtype = "bool", shape = (1, 390))#candidate|7795|(1, 390)|var|bool
call_7794 = func_1332_call(relay.reshape(var_7795.astype('bool'), [5, 6, 13]), relay.reshape(var_7795.astype('bool'), [5, 6, 13]), )
call_7796 = func_1332_call(relay.reshape(var_7795.astype('bool'), [5, 6, 13]), relay.reshape(var_7795.astype('bool'), [5, 6, 13]), )
func_1141_call = mod.get_global_var('func_1141')
func_1145_call = mutated_mod.get_global_var('func_1145')
const_7798 = relay.const([-1.228335,9.981483,5.399622,5.788359,-3.435703,3.231857,2.103165,-3.151802,-3.759543,9.555895,-4.704426,2.278787,-3.076581,-0.643201,8.367570,-7.495508,0.625960,-9.400430,1.996223,-7.663933,2.980665,0.303057,-7.679829,5.674622,-0.542084,-4.697053,-1.936088,-4.761406,2.794504,-6.093704,-3.867984,-5.265171,8.400802,-0.071943,-6.228817,-9.356428,6.114348,3.662722,2.214604,-7.606577,6.247935,-2.775648,-3.458602,-8.291770,-6.401410,-6.719609,9.262564,-0.815283,4.960977,7.007956,6.592879,-6.435448,-9.296636,-9.856845,-2.454245,2.509080,5.499097,2.437566,-0.570287,-1.649521,-5.976256,-8.406008,3.598748,-9.361999,5.162854,0.125227,-9.773577,0.739811,2.943556,-5.040991,1.109150,1.282632,-3.241820,-9.998663,-6.116561,5.512223,-2.416167,8.721959,-8.876578,-0.529789,6.026578,-2.686305,1.415693,-4.755146,-2.637990,-1.388914,7.688803,-5.334621,-5.512347,-1.016244,1.828417,-2.756174,2.001930,-6.369456,5.638727,-0.479055,-8.340885,-6.781296,-7.074067,-5.204373,-3.975280,-4.082144,-2.409108,6.570097,-8.486410,1.415074,9.593845,5.406246,3.976442,-7.691274,-0.273002,-1.285243,6.156836,9.432529,9.734267,-4.269689,-1.570774,6.466847,-8.646756,-8.530373,9.836830,-5.812786,5.273348,6.769327,6.009433,7.352428,-0.520761,-2.425521], dtype = "float64")#candidate|7798|(128,)|const|float64
const_7799 = relay.const([-1,-7,-4,-3,4,-3,2,8,9,-5,4,-3,-4,7,9,-4,10,9,8,-10,-4,9,-2,-9,-2,-3,-2,7,5,2,3,-4,7,8,7,-10,-2,-7,7,-7,-2,-5,-7,10,4,5,10,-2,-5,4,10,-7,6,-7,1,2,-4,-8,9,2,10,5,-9,6,-9,7,6,-10,-7,-5,-10,-2,6,-5,5,-10,-5,4,-2,-7,3,-10,10,-3,-6,-5,-7,-3,6,10,5,10,-3,-1,7,5,4,10,5,10,4,-10,-6,-6,10,6,3,3,-10,-2,4,6,-3,1,2,1,-9,-8,3,7,-9,-1,9,-10,-10,-8,10,-2,2,10,7,1,4,10,3,-3,2,-5,-7,2,7,-4,3,1,3,1,-5,-5,10,-6,-3,-5,2,8,9,9,-9,5,10,9,-7,3,-1,-9,-4,-7,-2,3,-4,-3,8,-9,4,-9,7,-10,-8,-6,-9,-3,-8,9,-3,-5,-3,2,-10,-10,-4,-3,-9,-7,3,-8,-8,5,-1,7,-9,3,-3,-5,7,-1,6,-5,-4,2,6,8,-10,2,-9,5,3,8,-4,-3,10,-1,-6,1,-9,-7,-4,-10,10,-8,-3,5,-3,-6,-7,8,-10,2,-5,6,-8,2,-8,8,4,-6,-9,7,-3,-8,9,-6,5,5,-2,8,5,-4,2,-2,-6,-5,9,-6,4,-3,-8,-2,-8,6,9,2,4,9,-7,-2,9,-7,-9,1,5,-6,2,9,-4,-3,-9,-9,2,6,-8,2,6,-6,-10,-10,-10,9,2,-3,1,3,3,-2,9,4,-4,9,-4,7,-1,-1,3,4,-8,-4,-4,-10,9,2,7,7,10,5,10,-10,-9,5,-10,7,-7,6,8,-6,7,-4,4,8,-9,10,5,4,10,5,-8,8,5,-7,-2,-9,1,-3,-9,10,4,-9,1,-2,-3,-3,-1,-6,-4,1,-6,-5,6,-5,-9,-2,5,9,-5,9,1,-8,-2,1,9,-4,-4,3,6,-4,-3,7,8,-7,8,2,5,-2,-8,3,-6,-2,5,-8,-5,6,-1,-9,-9,-5,-10,6,6,-4,-4,-2,5,9,-3,-3,-1,8,1,2,-4,9,-3,3,7,-4,6,9,1,-3,7,3,-2,2,8,5,1,8,-9,3,-10,-6,6,8,-3,2,-7,-8,7,4,1,9,-3,8,-10,9,2,4,9,5,-5,2,3,-2,-7,6,-4,-2,2,9,2,1,1,2,-1,4,6,-9,3,9,-6,9,-10,6,-2,-5,5,10,1,-8,1,-10,7,7,-9,-1,9,-4,3,-10,-7,1,1,7,-5,6,-8,-4,4,-6,-8,-7,-9,6,2,-8,1,2,1,5,6,-4,8,9,1,-6,-6,-6,5,-8,-9,10,6,-3,-1,4,2,4,-8,-3,-10,-10,3,3,9,8,10,10,-10,-2,3,-10,4,4,-9,-2,7,7,-7,9,4,4,5,-7,-6,8,4,4,-4,-1,7,-1,-5,-4,9,-10,3,6,-9,3], dtype = "int64")#candidate|7799|(576,)|const|int64
call_7797 = relay.TupleGetItem(func_1141_call(relay.reshape(const_7798.astype('float64'), [16, 2, 4]), relay.reshape(const_7799.astype('int64'), [2, 288]), relay.reshape(call_7790.astype('int16'), [384,]), ), 4)
call_7800 = relay.TupleGetItem(func_1145_call(relay.reshape(const_7798.astype('float64'), [16, 2, 4]), relay.reshape(const_7799.astype('int64'), [2, 288]), relay.reshape(call_7790.astype('int16'), [384,]), ), 4)
output = relay.Tuple([uop_7784,call_7790,const_7791,const_7792,call_7794,var_7795,call_7797,const_7798,const_7799,])
output2 = relay.Tuple([uop_7784,call_7793,const_7791,const_7792,call_7796,var_7795,call_7800,const_7798,const_7799,])
func_7802 = relay.Function([var_7783,var_7795,], output)
mod['func_7802'] = func_7802
mod = relay.transform.InferType()(mod)
mutated_mod['func_7802'] = func_7802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7802_call = mutated_mod.get_global_var('func_7802')
var_7804 = relay.var("var_7804", dtype = "float64", shape = (6, 2, 3))#candidate|7804|(6, 2, 3)|var|float64
var_7805 = relay.var("var_7805", dtype = "bool", shape = (1, 390))#candidate|7805|(1, 390)|var|bool
call_7803 = func_7802_call(var_7804,var_7805,)
output = call_7803
func_7806 = relay.Function([var_7804,var_7805,], output)
mutated_mod['func_7806'] = func_7806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8154 = relay.var("var_8154", dtype = "int16", shape = (16, 3, 10))#candidate|8154|(16, 3, 10)|var|int16
const_8155 = relay.const([[[-5,6,-9,-2,-9,10,8,-2,-9,6],[4,8,3,6,-6,-7,-3,2,7,2],[-1,-5,-10,-1,-2,6,2,9,3,-5]],[[-10,-1,-7,-7,-9,10,3,-8,4,1],[-4,-4,-2,-4,-10,3,3,-3,9,5],[-10,7,-4,-8,4,-6,6,-7,-5,-3]],[[-9,-5,2,-3,9,-8,-6,-2,-10,9],[-10,2,-5,6,9,-4,-8,1,6,-9],[-5,-6,2,9,8,3,5,6,2,9]],[[-1,-10,-4,9,6,-7,-6,1,-10,-9],[-10,-8,8,4,-6,-3,-8,6,-5,-1],[2,3,-10,-6,-5,-3,-7,-2,7,-5]],[[1,-9,-1,2,-9,-7,3,-1,-4,-7],[1,-8,1,3,7,8,-8,-8,4,-6],[-5,4,-5,-4,3,10,1,2,7,9]],[[-7,-4,6,7,4,-2,6,-10,2,-2],[5,-9,-9,8,10,1,-4,4,7,-1],[3,-1,-1,2,4,8,-5,6,10,1]],[[1,7,7,9,-3,6,-4,-8,7,-6],[-3,10,3,-5,2,-3,10,-2,1,4],[2,1,8,-8,-9,-7,1,2,5,-7]],[[3,-2,7,-3,-5,-4,6,2,-3,8],[5,4,-3,9,4,-5,-5,-4,-2,3],[-2,4,-10,-2,7,5,-3,9,7,-4]],[[-6,-2,7,-3,2,8,-3,-4,1,6],[-3,-9,3,-2,9,-3,-4,-6,-2,-10],[7,10,10,-2,9,-8,-10,1,-8,6]],[[-7,-2,4,2,9,10,-1,5,-4,4],[-5,-6,-1,10,9,7,-5,-9,-7,4],[-4,-1,5,-8,-2,-2,5,4,6,7]],[[2,-3,5,5,-4,7,5,5,-3,-9],[-3,4,1,-6,-5,-4,9,3,1,5],[9,5,9,6,-5,10,7,8,3,-7]],[[-6,-5,-8,8,-8,-7,4,-3,-6,-6],[-3,8,10,8,-7,2,-5,10,-7,5],[9,2,-7,-6,-1,1,9,-4,3,-2]],[[8,-6,1,8,-4,3,8,9,-10,6],[9,7,-5,5,-4,2,1,5,-6,1],[-10,7,2,1,1,7,-5,8,-7,9]],[[7,3,1,-1,-3,-9,7,-8,2,-4],[7,4,6,-1,2,6,3,-9,-7,3],[3,2,-6,10,2,-2,5,-10,-6,6]],[[2,9,-1,-2,-1,10,-5,-3,-5,-10],[6,5,-7,-4,7,-3,2,-6,2,-1],[1,6,-4,-10,3,7,3,1,-8,-3]],[[5,-3,7,9,-7,4,-2,7,-9,-6],[-6,-2,-4,1,9,8,-7,8,2,5],[8,9,-8,-7,-1,1,-7,-10,-9,-6]]], dtype = "int16")#candidate|8155|(16, 3, 10)|const|int16
bop_8156 = relay.maximum(var_8154.astype('int16'), relay.reshape(const_8155.astype('int16'), relay.shape_of(var_8154))) # shape=(16, 3, 10)
func_6847_call = mod.get_global_var('func_6847')
func_6851_call = mutated_mod.get_global_var('func_6851')
const_8163 = relay.const([[-10],[-10],[4]], dtype = "int8")#candidate|8163|(3, 1)|const|int8
const_8164 = relay.const([-1,-9,6,4,-10,6,8,3,5,2,5,-4,9,-3,6,-5,-6,1,-4,3,3,3,1,7,-7,10,9,8,-10,10,-2,4,-9,-1,10,-8,-5,-2,-6,-2,10,-6,8,8,4,5,-2,5,5,-6,-2,-8,5,3,1,-6,-9,-3,-6,-4,-10,6,1,-3,7,-3,-4,-6,-3,2,-6,6,-9,-2,-1,-7,9,-10,5,7,5,-3,-3,9,9,9,-8,-1,-5,3,-1,-4,4,-1,1,4,-9,4,7,-7,5,-2,-2,-3], dtype = "uint64")#candidate|8164|(104,)|const|uint64
call_8162 = relay.TupleGetItem(func_6847_call(relay.reshape(const_8163.astype('int8'), [1, 3, 1]), relay.reshape(const_8164.astype('uint64'), [104, 1]), ), 3)
call_8165 = relay.TupleGetItem(func_6851_call(relay.reshape(const_8163.astype('int8'), [1, 3, 1]), relay.reshape(const_8164.astype('uint64'), [104, 1]), ), 3)
output = relay.Tuple([bop_8156,call_8162,const_8163,const_8164,])
output2 = relay.Tuple([bop_8156,call_8165,const_8163,const_8164,])
func_8166 = relay.Function([var_8154,], output)
mod['func_8166'] = func_8166
mod = relay.transform.InferType()(mod)
mutated_mod['func_8166'] = func_8166
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8167 = relay.var("var_8167", dtype = "int16", shape = (16, 3, 10))#candidate|8167|(16, 3, 10)|var|int16
func_8166_call = mutated_mod.get_global_var('func_8166')
call_8168 = func_8166_call(var_8167)
output = call_8168
func_8169 = relay.Function([var_8167], output)
mutated_mod['func_8169'] = func_8169
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8315 = relay.var("var_8315", dtype = "float64", shape = (11, 5, 11))#candidate|8315|(11, 5, 11)|var|float64
uop_8316 = relay.acosh(var_8315.astype('float64')) # shape=(11, 5, 11)
uop_8318 = relay.atan(var_8315.astype('float64')) # shape=(11, 5, 11)
var_8334 = relay.var("var_8334", dtype = "float64", shape = (11, 5, 11))#candidate|8334|(11, 5, 11)|var|float64
bop_8335 = relay.less(var_8315.astype('bool'), relay.reshape(var_8334.astype('bool'), relay.shape_of(var_8315))) # shape=(11, 5, 11)
func_6847_call = mod.get_global_var('func_6847')
func_6851_call = mutated_mod.get_global_var('func_6851')
const_8354 = relay.const([3,7,-9], dtype = "int8")#candidate|8354|(3,)|const|int8
const_8355 = relay.const([2,5,-5,2,4,-7,-5,8,-1,-10,-4,-1,6,-10,-2,4,-8,-9,-9,-9,4,1,6,9,-6,8,-5,-6,8,5,-8,5,-10,-7,5,2,-3,-1,4,-6,-8,-10,-5,3,6,-7,-8,8,-7,9,-2,-1,5,4,3,-10,6,3,10,-7,3,9,-6,-1,4,5,2,9,-2,-9,-2,-6,-10,-2,-5,5,4,-1,-2,5,4,-10,-10,6,-3,-6,3,-5,-1,3,5,7,-3,2,-1,-9,-9,-1,-1,10,1,1,8,-9], dtype = "uint64")#candidate|8355|(104,)|const|uint64
call_8353 = relay.TupleGetItem(func_6847_call(relay.reshape(const_8354.astype('int8'), [1, 3, 1]), relay.reshape(const_8355.astype('uint64'), [104, 1]), ), 0)
call_8356 = relay.TupleGetItem(func_6851_call(relay.reshape(const_8354.astype('int8'), [1, 3, 1]), relay.reshape(const_8355.astype('uint64'), [104, 1]), ), 0)
output = relay.Tuple([uop_8316,uop_8318,bop_8335,call_8353,const_8354,const_8355,])
output2 = relay.Tuple([uop_8316,uop_8318,bop_8335,call_8356,const_8354,const_8355,])
func_8366 = relay.Function([var_8315,var_8334,], output)
mod['func_8366'] = func_8366
mod = relay.transform.InferType()(mod)
var_8367 = relay.var("var_8367", dtype = "float64", shape = (11, 5, 11))#candidate|8367|(11, 5, 11)|var|float64
var_8368 = relay.var("var_8368", dtype = "float64", shape = (11, 5, 11))#candidate|8368|(11, 5, 11)|var|float64
output = func_8366(var_8367,var_8368,)
func_8369 = relay.Function([var_8367,var_8368,], output)
mutated_mod['func_8369'] = func_8369
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8927 = relay.const([[[3.148798,-7.071470,3.731530,-1.190194,-5.108749],[-0.474525,-6.680399,4.885421,-7.422144,-0.265217],[2.135519,-1.267567,-2.788247,-4.932350,-5.139364],[-3.959455,-8.075417,-0.361461,6.509053,-7.809018],[-9.657553,-3.519350,-6.432338,7.757098,8.806492],[-9.355671,-6.250586,-0.279070,0.908406,-0.931726]],[[-9.427741,-8.197303,-1.532811,-0.670913,1.622030],[0.305308,-1.804482,-3.079691,-7.221003,0.004678],[3.858305,-7.293109,-5.433558,2.330922,3.406874],[-6.633173,-7.307138,1.011063,1.308460,-8.983209],[-9.310660,-4.081861,0.851247,-1.411351,-2.058550],[-6.833686,7.796632,-0.496300,3.454288,8.280459]],[[7.752880,8.016280,-2.168270,-5.130626,-2.391036],[-0.260172,9.337478,4.376341,3.277142,-6.808182],[-1.685809,-1.220507,8.423228,6.039852,-4.783206],[-4.104080,-1.136606,1.080306,-1.692058,8.485646],[-0.695273,5.077891,-3.325786,8.302670,-0.506779],[-8.187745,-9.357384,-6.213305,5.281281,-4.359877]],[[5.883866,8.631823,-8.081471,-1.274777,6.266645],[-9.785931,-8.554718,7.703701,-8.510403,-3.439482],[-1.877179,3.877518,3.422613,-8.768678,-2.742719],[-4.311352,0.282598,3.525565,-6.034259,-2.290504],[3.210159,-9.612531,4.966038,6.297417,-5.476245],[-3.577856,-2.338098,1.075050,-2.259302,-4.925296]],[[-2.064238,-7.864507,-8.729497,-5.522538,0.673434],[-3.548026,6.278891,-6.286957,-9.055884,-5.347311],[-7.159006,4.452864,5.070973,-8.406234,2.670980],[-6.425921,-6.259979,3.070276,-8.851767,8.774693],[6.889414,9.439192,-1.280680,3.043463,2.170132],[7.080429,-5.662656,-8.325619,6.137855,7.508110]],[[7.583420,5.057066,-4.194715,-0.187747,-0.807581],[2.644857,-3.392694,-1.445271,-6.830858,9.114040],[1.030269,5.021565,-1.076946,0.586626,6.415808],[-3.116639,-7.783890,-8.407921,-6.058221,-9.572838],[-8.980268,-1.789264,-3.372014,-7.687435,-0.879257],[-6.472745,-0.231183,-5.238465,7.067642,0.032915]],[[-3.683330,0.325080,5.213879,-8.379531,-3.145043],[-3.532581,-4.929904,2.547316,5.967500,7.466111],[-4.656858,7.779933,-7.907141,7.699768,-1.548490],[-9.627129,-8.548977,9.798955,1.632307,0.841024],[-4.360580,-0.966302,7.577609,4.427047,2.116507],[-8.485882,-4.324959,6.818549,0.190479,-8.518057]],[[6.868541,6.800836,-7.081264,8.449982,-1.448658],[-7.997712,-4.513991,5.814269,-9.817593,-8.030232],[3.726863,4.597875,-9.483922,-1.453997,8.665351],[3.527567,7.704841,-9.113261,-7.548680,4.681683],[0.316886,7.829853,6.451973,4.268354,-0.042097],[1.704676,-0.260788,0.756511,1.992598,5.887369]]], dtype = "float32")#candidate|8927|(8, 6, 5)|const|float32
uop_8928 = relay.sqrt(const_8927.astype('float32')) # shape=(8, 6, 5)
func_1141_call = mod.get_global_var('func_1141')
func_1145_call = mutated_mod.get_global_var('func_1145')
var_8934 = relay.var("var_8934", dtype = "float64", shape = (16, 8))#candidate|8934|(16, 8)|var|float64
var_8935 = relay.var("var_8935", dtype = "int64", shape = (576,))#candidate|8935|(576,)|var|int64
var_8936 = relay.var("var_8936", dtype = "int16", shape = (384,))#candidate|8936|(384,)|var|int16
call_8933 = relay.TupleGetItem(func_1141_call(relay.reshape(var_8934.astype('float64'), [16, 2, 4]), relay.reshape(var_8935.astype('int64'), [2, 288]), relay.reshape(var_8936.astype('int16'), [384,]), ), 2)
call_8937 = relay.TupleGetItem(func_1145_call(relay.reshape(var_8934.astype('float64'), [16, 2, 4]), relay.reshape(var_8935.astype('int64'), [2, 288]), relay.reshape(var_8936.astype('int16'), [384,]), ), 2)
func_4650_call = mod.get_global_var('func_4650')
func_4654_call = mutated_mod.get_global_var('func_4654')
var_8948 = relay.var("var_8948", dtype = "uint32", shape = (486,))#candidate|8948|(486,)|var|uint32
call_8947 = relay.TupleGetItem(func_4650_call(relay.reshape(var_8948.astype('uint32'), [6, 9, 9]), relay.reshape(var_8948.astype('uint32'), [6, 9, 9]), relay.reshape(var_8934.astype('float64'), [128,]), ), 1)
call_8949 = relay.TupleGetItem(func_4654_call(relay.reshape(var_8948.astype('uint32'), [6, 9, 9]), relay.reshape(var_8948.astype('uint32'), [6, 9, 9]), relay.reshape(var_8934.astype('float64'), [128,]), ), 1)
func_2801_call = mod.get_global_var('func_2801')
func_2803_call = mutated_mod.get_global_var('func_2803')
var_8969 = relay.var("var_8969", dtype = "float64", shape = (784, 1))#candidate|8969|(784, 1)|var|float64
call_8968 = func_2801_call(relay.reshape(var_8969.astype('float64'), [7, 14, 8]))
call_8970 = func_2801_call(relay.reshape(var_8969.astype('float64'), [7, 14, 8]))
func_2312_call = mod.get_global_var('func_2312')
func_2315_call = mutated_mod.get_global_var('func_2315')
var_8988 = relay.var("var_8988", dtype = "uint64", shape = (4, 432))#candidate|8988|(4, 432)|var|uint64
call_8987 = relay.TupleGetItem(func_2312_call(relay.reshape(var_8988.astype('uint64'), [9, 16, 12])), 1)
call_8989 = relay.TupleGetItem(func_2315_call(relay.reshape(var_8988.astype('uint64'), [9, 16, 12])), 1)
output = relay.Tuple([uop_8928,call_8933,var_8934,var_8935,var_8936,call_8947,var_8948,call_8968,var_8969,call_8987,var_8988,])
output2 = relay.Tuple([uop_8928,call_8937,var_8934,var_8935,var_8936,call_8949,var_8948,call_8970,var_8969,call_8989,var_8988,])
func_8994 = relay.Function([var_8934,var_8935,var_8936,var_8948,var_8969,var_8988,], output)
mod['func_8994'] = func_8994
mod = relay.transform.InferType()(mod)
mutated_mod['func_8994'] = func_8994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8994_call = mutated_mod.get_global_var('func_8994')
var_8996 = relay.var("var_8996", dtype = "float64", shape = (16, 8))#candidate|8996|(16, 8)|var|float64
var_8997 = relay.var("var_8997", dtype = "int64", shape = (576,))#candidate|8997|(576,)|var|int64
var_8998 = relay.var("var_8998", dtype = "int16", shape = (384,))#candidate|8998|(384,)|var|int16
var_8999 = relay.var("var_8999", dtype = "uint32", shape = (486,))#candidate|8999|(486,)|var|uint32
var_9000 = relay.var("var_9000", dtype = "float64", shape = (784, 1))#candidate|9000|(784, 1)|var|float64
var_9001 = relay.var("var_9001", dtype = "uint64", shape = (4, 432))#candidate|9001|(4, 432)|var|uint64
call_8995 = func_8994_call(var_8996,var_8997,var_8998,var_8999,var_9000,var_9001,)
output = call_8995
func_9002 = relay.Function([var_8996,var_8997,var_8998,var_8999,var_9000,var_9001,], output)
mutated_mod['func_9002'] = func_9002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9039 = relay.var("var_9039", dtype = "int8", shape = (16, 9, 11))#candidate|9039|(16, 9, 11)|var|int8
const_9040 = relay.const([[[-3,-3,-7,1,-1,-6,-9,-5,-8,-8,-2],[6,8,6,9,1,9,2,2,-2,8,-7],[-10,-10,3,5,-8,-9,-4,10,-3,5,6],[9,-3,-1,8,-7,-10,7,4,-9,5,-9],[-4,-10,1,-10,3,2,-10,-8,-3,-7,10],[6,-7,6,-4,-1,-7,3,6,-2,-3,-6],[9,1,7,-7,-3,-2,-8,4,-5,-10,4],[8,-9,9,-7,4,9,10,-3,-2,9,-9],[-4,1,-6,2,4,-9,4,-4,-3,9,-4]],[[-7,-5,5,4,-5,5,-8,6,-2,-3,3],[1,6,-8,7,5,10,6,6,-7,10,8],[6,9,-6,9,10,9,-5,1,8,7,-8],[3,-2,-6,4,-10,7,8,-4,5,6,-9],[10,2,-8,5,-9,9,-9,-6,10,-5,7],[-2,-10,-2,8,9,1,-5,-10,4,-1,5],[-9,-6,6,8,5,-4,-5,-5,-8,-3,8],[10,10,-1,9,4,-4,-9,-2,-4,4,-3],[-4,4,-5,-3,-4,-2,8,-7,9,7,2]],[[6,10,10,-7,5,-5,3,3,-4,-2,-1],[-2,-9,2,6,3,-5,-1,-9,9,-10,-10],[-4,-1,-9,-7,-5,-3,-9,2,6,-7,-10],[-7,7,-2,10,-9,6,3,5,10,-8,-4],[-7,-2,4,5,10,-3,-7,1,9,-2,-2],[-4,4,4,-4,-8,-7,-3,4,2,-1,-8],[-4,-8,10,9,6,8,-5,1,-1,2,1],[-8,5,-8,7,-7,-6,-3,4,8,-5,-9],[9,4,8,7,-3,-6,-6,-5,10,-5,4]],[[1,-2,-7,5,1,-7,-3,1,6,-6,-2],[-7,-7,-8,1,2,1,3,3,5,10,-9],[7,-3,-5,7,3,-2,-1,3,-4,6,-9],[3,-6,7,2,-9,9,-4,-2,10,5,8],[-4,-9,-5,4,-3,9,-9,3,6,10,5],[10,7,7,-3,1,5,8,3,8,-8,5],[-3,9,-2,5,-7,9,4,-9,8,-6,7],[4,3,8,-7,1,1,3,2,-1,2,2],[-5,-5,-10,7,-3,9,-3,1,10,-3,-3]],[[4,-2,-4,-6,-2,-9,5,8,-7,3,10],[5,-7,3,-5,4,-2,4,-3,-4,1,-4],[1,8,-6,5,6,-7,-4,1,-9,-7,-3],[8,-1,-3,-6,-9,-2,6,-8,3,-3,-5],[3,4,-2,4,4,-1,4,7,4,8,3],[-3,-7,4,-9,6,-6,-3,-3,-6,-8,-2],[-3,-2,-7,3,6,-2,4,-4,-7,-4,-1],[3,-3,1,-4,-6,1,3,10,-9,-2,9],[7,9,-4,-6,2,-10,-6,8,3,-8,2]],[[4,9,-8,6,-7,5,-6,-10,5,-4,7],[-8,-2,1,-7,5,-6,-7,-5,6,-8,9],[9,10,1,8,4,7,9,7,-2,9,7],[4,1,-8,-8,-4,-8,10,-8,9,6,-9],[-5,-1,1,5,-6,-1,-7,-7,-8,4,7],[7,-4,-7,-4,5,5,6,-6,1,8,-10],[-3,-3,-7,-8,3,-10,-2,9,-5,5,2],[3,10,1,-8,-4,7,-3,-6,-9,-6,8],[-7,-4,-3,10,8,-5,-9,-6,-9,-1,2]],[[1,5,-9,-10,-9,-3,-7,9,4,-3,6],[7,-9,6,3,4,-8,-3,-1,3,9,-4],[2,6,-1,-5,10,-2,-6,-1,-8,2,-7],[2,-9,-10,1,-7,-7,9,1,-8,-5,10],[-9,-2,-7,3,-1,-3,-10,-1,7,3,10],[-4,7,-1,-10,-4,5,8,-2,5,-5,-8],[-1,5,-8,4,10,10,-7,10,6,-8,1],[3,8,9,-6,10,5,-7,-4,10,6,3],[-2,5,-8,9,1,-5,9,4,-10,-5,2]],[[7,-3,-1,-10,6,-9,10,-4,-9,8,-3],[9,-4,-2,5,3,1,2,6,-8,1,-1],[-7,9,-9,-3,6,10,2,-9,7,10,7],[-9,3,5,-7,7,1,-1,5,-3,-5,-10],[-6,-5,-2,-10,-8,-4,-8,-4,-5,-8,-9],[7,2,-4,4,5,7,-4,8,10,4,-6],[-2,5,3,4,-2,-5,-4,1,-5,7,-10],[-10,4,4,-3,10,1,1,-9,-6,-9,-7],[-2,-10,-7,-8,7,-7,10,-8,-2,-8,-6]],[[-6,5,7,-3,-8,3,1,-4,-8,10,9],[7,-3,-8,1,-10,-8,-1,3,-7,8,-9],[-1,9,-4,-7,9,2,4,-4,3,-3,3],[6,-7,-6,-5,3,10,5,3,8,-7,-5],[-10,3,-5,4,10,3,-3,2,8,3,-9],[1,-2,3,9,8,9,3,-10,1,7,7],[4,5,3,9,6,-4,-9,8,7,7,7],[-7,9,7,1,-3,3,9,7,10,8,-2],[10,-6,5,-10,-5,1,6,-7,4,-4,-9]],[[-3,-10,10,6,6,-3,3,-6,-10,2,3],[1,-7,-2,-2,-5,-9,-5,-3,-2,-6,-1],[-5,-4,6,-8,5,10,4,6,-7,10,-6],[-7,-7,9,-6,-4,5,-5,5,-9,5,-4],[-5,7,-1,-10,-2,-7,-5,-4,-5,3,-6],[1,4,-4,3,-7,8,2,1,-6,6,3],[10,-4,6,4,-6,3,-7,8,-5,-10,-9],[2,-2,-4,-4,2,6,8,5,-2,-7,10],[4,-5,1,1,8,1,-6,10,5,1,-10]],[[-1,-10,-6,2,4,2,-4,-5,-4,-10,4],[-3,5,6,9,-6,-3,-5,-5,2,2,1],[6,1,-10,8,-9,8,-9,10,4,-8,4],[3,8,-1,9,6,-7,-7,10,-2,-6,-2],[7,-1,-10,8,-2,-5,6,3,-7,1,8],[2,-3,6,7,2,-4,4,4,9,-3,-8],[-10,4,-10,3,5,5,-2,-7,2,2,4],[1,-10,-6,7,-1,5,-4,2,-4,-3,-5],[3,-3,-3,1,2,5,-2,-4,5,6,3]],[[-8,7,4,-2,-6,-2,7,3,1,10,7],[9,3,-9,7,-8,8,6,9,2,-10,-4],[8,-7,-5,8,-10,-5,4,-1,5,5,-9],[7,10,3,2,9,7,2,4,5,-1,-9],[6,8,-1,7,6,8,-1,-6,-8,-6,2],[6,2,-1,4,7,-2,-1,8,5,-2,-9],[-1,8,1,-2,-4,10,2,8,-5,-5,-8],[10,-2,9,7,7,-3,7,2,9,-10,3],[-2,7,6,4,8,-9,10,-6,-7,3,9]],[[4,-9,-9,-1,10,-3,-1,-1,-10,-1,-9],[10,6,-8,7,-8,1,1,-8,-2,6,-7],[2,-3,7,5,3,-1,3,7,-9,9,4],[-9,4,3,7,-8,10,-3,-5,4,4,-6],[-5,4,-2,3,5,-10,-5,1,-5,-1,2],[3,-2,7,2,-10,-8,2,-9,6,1,3],[9,8,-6,-10,-4,-8,-9,10,-6,-10,-7],[4,9,10,-8,-6,10,2,4,4,4,-2],[-5,-6,-7,7,9,9,-3,-10,5,-7,-9]],[[-9,-10,10,-5,7,-7,4,9,7,5,8],[7,1,3,7,9,-6,10,-3,8,-6,-2],[10,-4,-1,-5,10,-8,-5,1,4,7,10],[-6,4,-2,-3,-3,-8,-10,-7,-10,8,-10],[-9,-3,2,3,-9,5,-4,-8,-5,-10,9],[4,4,2,1,2,-2,3,7,8,-4,3],[-1,-7,-1,9,-4,5,6,9,-9,7,8],[-9,-5,-2,9,-9,8,7,2,9,-1,-5],[2,-4,4,6,3,-6,-2,7,6,4,-3]],[[-3,-8,-10,-7,-6,6,-1,3,-2,-3,-5],[9,-6,10,-8,10,-8,4,-7,-3,-1,7],[9,9,6,-10,-7,-5,-3,-1,-7,-4,9],[-3,10,-1,4,3,8,7,-4,-7,5,3],[6,-10,-5,10,-4,-2,8,5,1,-7,2],[7,10,-8,-5,-4,-7,5,-1,-7,9,-1],[-3,9,6,7,10,5,-7,7,-6,-4,-7],[6,-6,-5,2,-2,-4,-1,8,10,1,10],[-2,9,-7,-2,5,-2,-1,-8,3,-10,-2]],[[9,8,-10,9,-6,-6,-9,-9,7,1,5],[-8,-6,2,10,-6,5,-10,-4,4,8,-6],[-3,9,9,9,3,6,8,5,1,7,-7],[1,-4,3,3,2,-6,-5,-3,8,2,5],[-1,8,-2,-10,-1,-2,5,10,7,-3,-3],[8,5,-1,-10,-6,7,-5,-8,9,5,6],[-9,10,-6,-10,3,6,4,2,-4,-4,-2],[-1,5,10,1,10,2,-7,4,9,7,-5],[5,-6,-6,9,1,-10,9,-4,6,2,5]]], dtype = "int8")#candidate|9040|(16, 9, 11)|const|int8
bop_9041 = relay.minimum(var_9039.astype('int8'), relay.reshape(const_9040.astype('int8'), relay.shape_of(var_9039))) # shape=(16, 9, 11)
func_1332_call = mod.get_global_var('func_1332')
func_1335_call = mutated_mod.get_global_var('func_1335')
const_9065 = relay.const([[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[False],[False],[True],[True],[True],[False],[True],[False],[False],[True],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[True],[False],[True],[False],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[True],[True],[True],[True],[False],[False],[False],[False],[True],[False],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[True],[True],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True]], dtype = "bool")#candidate|9065|(390, 1)|const|bool
call_9064 = func_1332_call(relay.reshape(const_9065.astype('bool'), [5, 6, 13]), relay.reshape(const_9065.astype('bool'), [5, 6, 13]), )
call_9066 = func_1332_call(relay.reshape(const_9065.astype('bool'), [5, 6, 13]), relay.reshape(const_9065.astype('bool'), [5, 6, 13]), )
func_6847_call = mod.get_global_var('func_6847')
func_6851_call = mutated_mod.get_global_var('func_6851')
const_9068 = relay.const([5,4,-5], dtype = "int8")#candidate|9068|(3,)|const|int8
var_9069 = relay.var("var_9069", dtype = "uint64", shape = (104,))#candidate|9069|(104,)|var|uint64
call_9067 = relay.TupleGetItem(func_6847_call(relay.reshape(const_9068.astype('int8'), [1, 3, 1]), relay.reshape(var_9069.astype('uint64'), [104, 1]), ), 3)
call_9070 = relay.TupleGetItem(func_6851_call(relay.reshape(const_9068.astype('int8'), [1, 3, 1]), relay.reshape(var_9069.astype('uint64'), [104, 1]), ), 3)
output = relay.Tuple([bop_9041,call_9064,const_9065,call_9067,const_9068,var_9069,])
output2 = relay.Tuple([bop_9041,call_9066,const_9065,call_9070,const_9068,var_9069,])
func_9072 = relay.Function([var_9039,var_9069,], output)
mod['func_9072'] = func_9072
mod = relay.transform.InferType()(mod)
mutated_mod['func_9072'] = func_9072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9072_call = mutated_mod.get_global_var('func_9072')
var_9074 = relay.var("var_9074", dtype = "int8", shape = (16, 9, 11))#candidate|9074|(16, 9, 11)|var|int8
var_9075 = relay.var("var_9075", dtype = "uint64", shape = (104,))#candidate|9075|(104,)|var|uint64
call_9073 = func_9072_call(var_9074,var_9075,)
output = call_9073
func_9076 = relay.Function([var_9074,var_9075,], output)
mutated_mod['func_9076'] = func_9076
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9197 = relay.var("var_9197", dtype = "int64", shape = (5, 8, 4))#candidate|9197|(5, 8, 4)|var|int64
const_9198 = relay.const([[[-8,-6,10,8],[7,-2,5,5],[-5,-3,-4,-3],[2,-10,2,10],[1,-6,7,-2],[-3,3,10,10],[-5,-10,5,2],[3,-2,10,-6]],[[7,3,6,-2],[-10,7,-5,5],[3,8,9,7],[-4,8,10,-6],[-5,-5,-6,10],[-2,-6,-7,6],[6,-9,-4,8],[5,1,-1,-6]],[[-7,7,-8,9],[-7,4,6,7],[-3,-9,-3,4],[-3,7,3,-10],[4,6,-6,1],[-10,1,-6,9],[5,6,-5,7],[-7,-1,10,3]],[[-9,-8,-3,-2],[4,10,10,-7],[9,2,-6,-1],[-7,-5,2,-3],[-8,7,7,-4],[-1,-3,6,-7],[-3,-1,9,-2],[-4,5,7,-6]],[[6,6,-3,8],[-7,-6,-1,9],[1,5,-2,8],[3,2,1,7],[-3,3,-3,1],[-10,-6,1,6],[-5,-4,5,-3],[-7,-2,-4,6]]], dtype = "int64")#candidate|9198|(5, 8, 4)|const|int64
bop_9199 = relay.maximum(var_9197.astype('int64'), relay.reshape(const_9198.astype('int64'), relay.shape_of(var_9197))) # shape=(5, 8, 4)
func_6847_call = mod.get_global_var('func_6847')
func_6851_call = mutated_mod.get_global_var('func_6851')
var_9205 = relay.var("var_9205", dtype = "int8", shape = (3,))#candidate|9205|(3,)|var|int8
var_9206 = relay.var("var_9206", dtype = "uint64", shape = (104,))#candidate|9206|(104,)|var|uint64
call_9204 = relay.TupleGetItem(func_6847_call(relay.reshape(var_9205.astype('int8'), [1, 3, 1]), relay.reshape(var_9206.astype('uint64'), [104, 1]), ), 4)
call_9207 = relay.TupleGetItem(func_6851_call(relay.reshape(var_9205.astype('int8'), [1, 3, 1]), relay.reshape(var_9206.astype('uint64'), [104, 1]), ), 4)
output = relay.Tuple([bop_9199,call_9204,var_9205,var_9206,])
output2 = relay.Tuple([bop_9199,call_9207,var_9205,var_9206,])
func_9213 = relay.Function([var_9197,var_9205,var_9206,], output)
mod['func_9213'] = func_9213
mod = relay.transform.InferType()(mod)
var_9214 = relay.var("var_9214", dtype = "int64", shape = (5, 8, 4))#candidate|9214|(5, 8, 4)|var|int64
var_9215 = relay.var("var_9215", dtype = "int8", shape = (3,))#candidate|9215|(3,)|var|int8
var_9216 = relay.var("var_9216", dtype = "uint64", shape = (104,))#candidate|9216|(104,)|var|uint64
output = func_9213(var_9214,var_9215,var_9216,)
func_9217 = relay.Function([var_9214,var_9215,var_9216,], output)
mutated_mod['func_9217'] = func_9217
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9233 = relay.const([[[-3.422049,-6.010276,1.886706,0.451186,3.442824,-8.078637,9.815796,8.598085,-7.219487,8.754748,-4.251043,0.887673],[-3.170365,-5.165694,-5.728700,4.982478,-1.344013,7.303905,8.359235,-6.483186,3.428900,-9.728849,-3.847831,1.001926],[-2.624251,0.649977,-7.430431,8.334766,6.140543,9.337828,5.002946,-5.744680,-0.714416,9.503515,2.548867,-3.745503],[-4.388889,9.709352,-3.736029,-1.493616,8.413647,2.498827,-0.895647,-8.226247,-2.098341,5.553566,-5.910982,2.821243],[9.879303,8.623644,5.894402,-0.377527,-7.096637,-0.819855,-4.817155,0.301391,0.999103,-0.337095,5.000473,3.348266],[-2.785549,-0.018746,-6.560425,-3.883928,-0.235774,-6.605182,0.483796,-9.657544,4.663886,3.483722,0.455635,5.942292],[7.190309,-4.978700,5.756607,1.354910,-8.894497,-8.316600,9.200611,6.713991,-1.222542,9.345611,-1.358728,2.635292],[7.835818,6.399468,2.114391,4.314504,-7.740712,-0.484134,5.571769,-9.038225,6.071895,-7.659839,6.451832,-8.499849],[-8.032817,1.881893,5.746173,-7.095462,6.047590,0.591839,-4.223321,-7.258934,-4.154858,-8.440387,-2.385730,-4.773767],[-4.510673,-4.760386,-1.455850,2.971411,9.847446,3.852779,-3.790914,9.428178,0.684458,-7.280215,1.628909,5.584881]],[[2.220380,2.940940,-9.462135,9.234530,-9.076177,-9.230406,3.852860,2.452025,-6.989711,4.355443,-9.738525,7.815479],[-6.106460,-9.532542,-6.368873,0.028631,9.092856,8.640252,-5.006577,-0.008110,-4.311077,5.608297,9.958810,-7.003095],[5.993125,-3.636976,-5.827697,-1.628449,8.766943,-8.108584,-5.238388,-3.983890,-6.638083,8.063055,-8.346923,-8.825145],[-1.373391,-0.906600,-8.585821,6.813905,8.409260,-3.059839,3.877985,-4.925924,3.764146,-6.451734,-3.549430,0.953651],[-4.945454,-7.736213,6.039042,-3.407404,-8.086424,8.085360,3.350949,8.601799,-2.249700,3.827859,-6.304820,-6.349336],[-4.805125,3.998453,5.877197,-5.907634,9.862054,3.790995,8.993933,-8.239734,-5.027660,-4.445771,-7.294462,-7.627597],[8.795728,6.536908,9.441648,9.015301,-9.186433,8.593523,-3.545005,-2.915883,-6.094475,-9.408271,9.540900,9.664396],[-8.217995,7.979357,9.378918,3.584874,7.870337,-9.570080,-2.619316,0.964332,-4.529449,7.900432,-5.981878,-9.327986],[4.480623,-3.032996,8.789986,-1.340171,2.673791,6.986290,-8.425387,-8.023774,3.256477,-4.292548,-2.225860,-8.900140],[-2.851403,6.575287,1.161856,4.441167,-3.021113,5.416840,-3.923630,2.689424,-1.780043,-1.563362,9.699809,-2.119819]]], dtype = "float32")#candidate|9233|(2, 10, 12)|const|float32
uop_9234 = relay.asinh(const_9233.astype('float32')) # shape=(2, 10, 12)
output = uop_9234
output2 = uop_9234
func_9247 = relay.Function([], output)
mod['func_9247'] = func_9247
mod = relay.transform.InferType()(mod)
output = func_9247()
func_9248 = relay.Function([], output)
mutated_mod['func_9248'] = func_9248
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9259 = relay.const([[[-5.752940,8.108130,-6.851944,7.604577,8.533480,-5.408990,6.085198,4.314801,5.695091,-4.687233],[-8.900851,-2.396018,-7.597483,7.664131,-0.071256,7.382227,9.551271,7.176938,-6.937170,-5.633925],[-8.004139,8.132995,7.360236,2.376752,4.587504,-3.824886,-4.687322,5.952957,-0.955636,6.058512],[3.987105,-7.125703,5.497432,9.939758,-0.595983,7.579545,-0.126881,-5.207529,5.989749,-8.602206],[-6.801470,8.793065,5.490858,0.746270,2.143814,-3.058348,1.255246,-1.383432,-6.464712,6.888296],[4.095631,-7.956561,8.646258,9.530748,-9.130386,7.125200,4.946646,5.553759,2.250640,-5.574153],[-9.145624,9.305111,9.095903,-7.539057,5.086537,0.332993,2.468497,-1.398650,-6.607306,9.209202],[0.712421,8.261270,0.680144,1.259196,6.444499,-1.651925,-3.370293,-4.739202,8.017204,-9.927676],[-0.566135,3.673019,9.389520,-2.569467,-0.939079,-0.877770,-4.224858,-9.879676,-5.350875,-4.986340],[5.888763,5.383071,-0.620042,-5.007251,9.537372,4.954047,-8.642998,4.222207,-3.790197,9.997650],[2.990513,8.508069,-2.142204,-0.384653,7.187224,-6.861665,0.265065,8.267526,6.146918,7.341709]],[[-9.355158,-7.628703,2.702242,-4.476074,9.242119,-0.573123,8.101972,-9.886634,2.035275,-7.765306],[9.743964,-6.004039,5.070307,7.040279,1.991834,0.120539,4.542188,-0.326722,8.671860,-6.570544],[-5.622557,3.851739,-2.318499,3.065658,-6.969561,2.896708,5.371000,-0.751903,3.299862,8.920186],[-0.210728,-5.416786,3.044709,2.373626,2.542478,8.735528,-1.059154,0.065916,6.963631,9.962042],[-5.108655,4.027212,-2.121096,-3.764506,1.900705,-1.751487,-4.596136,4.872425,7.187790,-3.050642],[2.398019,-2.898472,2.020180,-0.790049,0.276008,-6.085327,-6.926326,1.025279,-0.592497,-5.943277],[7.188363,8.023616,7.662739,4.940841,6.188536,2.080728,-2.027247,3.378505,4.778254,-8.726841],[1.138032,4.589386,-5.248428,-9.714080,-7.376815,7.987173,9.599547,-3.689405,6.390426,8.675615],[9.100373,4.736446,-7.347570,5.074272,6.185731,-6.501583,9.548023,-5.115170,-7.393193,-3.694789],[-8.673570,7.541132,-1.500908,-0.886133,4.365606,9.735876,2.901011,-7.772837,6.116106,2.684647],[3.204583,2.636290,5.713105,6.254647,-3.083313,7.375904,8.868243,-6.939511,-3.032585,6.044155]],[[-0.146038,-7.475677,-1.507348,9.604139,9.187063,-1.818064,7.677754,6.480826,8.256102,-8.884993],[-9.078586,-0.830761,-5.742170,9.430708,-5.058100,4.739540,3.122027,-7.546616,-8.484275,3.568491],[-1.037714,0.237871,1.073658,4.331910,1.251597,-3.249989,0.385888,2.140271,0.237542,-4.555063],[6.653302,-5.656192,0.484358,-4.878099,8.534645,2.394351,6.490657,6.250127,2.209031,-8.999544],[-5.916827,-9.258797,0.424268,-1.448821,1.444527,-5.138274,-9.490097,8.562327,5.036118,3.296388],[-1.943825,5.656854,7.472314,-1.797399,9.622874,9.156612,-0.351376,6.752985,3.988699,-9.423234],[-5.462872,-4.191172,-8.314142,-8.973616,1.664651,-1.950525,9.990876,-6.952117,-6.158303,6.701369],[5.913093,5.937989,3.284978,7.539696,-6.552625,2.455315,8.806934,7.707314,3.581286,3.164275],[-3.785572,-3.614084,6.441262,-2.953725,-7.027409,9.941486,2.212363,4.546721,0.959401,7.973198],[-4.343358,-2.581276,-6.846005,9.129672,-0.219045,9.966949,-1.320575,-4.249907,-3.865849,0.257946],[-5.675062,-0.257126,-5.117882,-9.888668,-6.387792,4.321640,-9.327021,-6.648706,-7.842674,6.499295]],[[1.721644,3.979718,-4.772810,9.513240,-1.954578,4.764058,-5.215553,-3.537254,3.061397,-0.851884],[5.295699,9.219765,-3.331462,-7.724571,6.585104,9.846750,-6.404329,4.512465,-4.591931,9.430019],[7.965051,1.742877,-3.624421,-9.779425,1.474349,-2.741700,7.975392,-4.737090,4.205594,-7.514427],[-7.367804,9.703474,-5.188568,-7.626388,-8.782489,2.794617,-6.460195,7.993876,6.887875,9.409099],[-6.616306,6.591289,1.041234,9.149971,-2.009855,1.263131,3.792958,-0.303378,3.963060,-0.533185],[-1.669862,-9.922275,4.805574,-6.835107,9.221320,0.334913,8.120005,7.868509,-1.841388,6.711231],[-2.912787,-5.525864,-2.925232,9.968232,9.598186,4.058416,-3.536627,-0.490828,8.706099,-5.689744],[-9.256758,-0.058856,-1.155952,-5.547791,1.991082,0.129541,2.552740,6.801546,-0.184256,9.867197],[6.803359,-1.136890,-0.276221,9.471585,9.173272,8.571988,7.773910,4.668763,1.586467,-5.527523],[4.476063,6.134713,8.365812,-0.989434,4.191025,7.891480,-4.421237,-7.262055,8.445430,-5.199198],[8.647590,-9.554447,-5.828861,-9.187747,-2.835316,-8.000930,9.699843,-2.529752,-7.247044,-0.738189]],[[-2.671695,-6.549919,7.587741,-6.908886,-3.798078,4.666536,-8.962320,-7.236231,3.615908,-7.266172],[-7.034968,-8.087918,-7.386816,-8.966988,5.421874,2.449141,4.278708,3.120734,-3.451921,2.546060],[-3.419091,4.380562,-2.520954,0.691596,-3.939961,1.622855,-8.000275,-5.414552,-4.620964,-3.296609],[-1.425002,-4.901759,0.350187,-8.586470,2.136331,7.460206,4.329584,-2.785142,-4.910772,9.878995],[6.224481,6.628676,-9.890398,3.381185,1.330957,5.532902,3.698633,5.748602,4.850486,-5.079123],[8.857425,-4.795551,-4.575472,-9.817062,9.981736,-5.532639,3.154950,-6.704809,8.213141,-9.045684],[1.980168,-7.997832,3.096701,-2.193398,-7.791691,9.878168,-7.641536,-8.034752,-5.510971,2.057188],[-5.798117,4.158831,-3.513205,-5.120698,6.388450,-2.193024,-7.352497,8.147467,-0.759410,-2.443304],[-4.878849,-8.721710,1.963234,-2.540823,7.200965,7.642336,1.209900,3.916109,7.001766,6.922777],[5.938468,5.064888,4.244819,2.288596,-7.994345,-4.704926,-6.375980,1.724704,1.849679,8.317387],[-1.306895,-6.348594,1.442507,0.558513,1.413536,5.816701,-7.707197,-7.610135,5.122177,6.081182]],[[5.381334,9.228387,-3.348338,-3.278033,-3.679597,-0.099162,-0.020178,-5.689858,0.154553,-4.335623],[-3.881958,7.601914,7.044171,-0.902310,2.682453,-5.839479,3.999276,-7.349502,5.942089,7.186336],[7.657815,-3.469294,3.499326,4.815330,-7.120599,9.891231,-2.593048,4.283889,7.844765,-4.604733],[9.707809,0.183673,-8.047699,-5.946335,-2.039297,0.384647,0.299018,-2.534634,-3.187751,5.907506],[7.175030,-2.550931,7.710074,4.194660,2.684436,-5.672226,6.671252,-3.051848,0.530393,2.402879],[-9.780832,7.116078,-3.558677,-5.201186,-7.260416,0.578508,8.714048,7.286437,4.862871,1.029825],[-6.187234,3.113525,9.014571,-0.974256,-6.947112,2.395936,-4.048135,-8.862903,-8.732749,-0.821089],[8.848379,-5.769813,0.913279,5.291609,0.137996,7.435209,-0.703865,2.012519,-7.192406,8.821180],[5.658508,-0.505730,5.543306,-4.983427,0.776733,-8.272599,-0.563643,1.606028,-8.470019,-8.340300],[6.152490,-8.139867,-6.577142,-2.091551,9.358971,0.411975,-4.641109,-5.796328,-2.593595,5.254492],[6.551326,-1.680818,-5.814244,8.200983,0.433153,-4.626558,-5.336917,-0.938331,-4.799751,8.040799]],[[-1.550627,-8.039082,-2.493042,4.510826,6.346425,3.024975,-5.018217,-6.433543,3.227364,-3.046693],[0.073024,-3.241892,4.473303,-6.646617,6.473488,0.559337,-5.015273,-4.067571,-4.722392,-3.459134],[-1.558710,6.170841,5.018293,7.094766,3.769278,7.733713,6.621034,-9.044952,4.505546,-3.392486],[0.461542,-9.713997,-3.021543,-1.038169,-1.150700,-5.990584,-0.324205,-0.862678,-1.576393,5.328651],[1.565891,-1.102188,-7.846035,2.242918,-5.857509,-9.516734,9.336489,3.616851,3.729050,-8.011413],[-2.442741,-5.274896,-9.775545,5.725960,-8.240078,1.091652,0.136605,-1.555920,-1.939153,3.086892],[-6.330817,-9.416195,4.672388,5.890164,-3.342862,-5.275050,-8.784094,8.021867,2.421435,3.137108],[4.047426,1.632183,4.297601,-0.053998,1.884165,-1.727269,4.294875,5.884728,-8.338620,2.799944],[7.964087,-8.113297,-6.204800,-0.808544,-8.717472,-4.383393,-1.763960,-4.457172,9.268152,-8.917334],[7.448111,-9.449022,8.103640,7.128657,-9.599802,-8.501453,-6.017410,-8.722821,7.936269,4.610294],[-5.321024,9.811667,6.922556,-4.707543,3.915749,-1.461263,2.750811,2.204273,-6.201036,0.738961]],[[-4.017401,-9.021114,-2.688405,8.778359,-1.827407,2.847103,-7.767833,2.126254,-1.378795,6.885565],[-9.243709,-8.369734,-5.852763,4.782301,-6.365575,-9.271356,-2.452313,-5.592342,6.655238,-3.123258],[-4.558550,-9.995745,0.946006,-1.816157,-6.271483,8.141283,3.667680,-2.225447,3.290248,1.835007],[-3.555863,-7.717336,-8.000887,6.687355,3.446549,1.494570,2.703775,-6.496743,-9.750159,4.126496],[-7.484167,6.427525,-5.921927,-6.537200,7.987497,-1.361924,2.545015,2.555902,0.071746,9.869460],[-5.657704,-4.437041,-2.597092,-5.424144,8.293330,2.487071,-8.845893,-1.602775,6.202435,6.023978],[-3.733320,-3.383830,-8.427943,0.357785,9.340680,-1.819209,-0.581011,0.776198,-2.758057,3.120059],[4.595973,2.120910,0.982388,4.602134,-8.913411,-6.807077,-4.661791,-4.215079,-8.194158,-6.032258],[-8.372924,6.432109,1.263646,-4.865885,2.333718,8.321738,-5.235080,-3.095925,-9.248260,-0.201656],[-5.007797,9.765124,-7.839780,-1.328173,-5.314917,-5.877508,6.957751,1.626481,-5.250060,-3.251307],[2.042934,2.017226,8.558271,7.602907,9.229658,-9.753110,-6.563609,-6.630139,-8.986208,9.162318]],[[9.640676,3.966291,-6.851449,6.142565,-9.627130,-0.143119,4.206696,-3.192383,6.501180,5.848940],[0.464652,1.150865,1.003967,-8.454816,-7.022782,-6.566793,6.548125,-2.631641,-9.126685,2.155075],[-3.875986,-4.265387,1.494348,-1.043574,6.555603,8.229330,7.580200,-6.271175,-8.858860,-4.382915],[9.397021,-7.539405,4.362045,-7.094149,-7.736440,-1.026606,9.212306,-7.244226,0.936630,3.963883],[-6.887759,-8.102499,5.727475,7.636746,4.705819,-8.102024,-7.871412,-5.604570,-1.690570,-0.042866],[-7.081389,2.788172,2.150110,-6.626490,-6.659269,3.367867,-4.332313,-1.293959,7.234977,3.855617],[-4.295881,3.582927,-8.641257,-8.251488,-2.066883,4.692708,0.779880,-3.281397,-3.202869,-1.403017],[-8.963763,-4.028541,0.440698,6.197135,-3.174716,3.309477,-9.862374,2.368828,-9.587384,1.498273],[-8.695676,7.792058,6.371923,2.301631,-3.410890,-7.085523,3.213169,7.385524,-7.853533,2.776456],[3.724373,0.137370,9.088860,-5.364785,-6.640608,-7.261052,-7.564178,-4.966766,8.199344,-7.454015],[3.525203,4.155469,9.677318,8.180682,1.259115,-9.871195,-9.986239,-2.773226,-4.412414,5.534255]],[[6.846241,-9.418544,-2.634687,7.573400,-3.908794,3.894418,6.628231,-0.813624,-5.389798,-8.302198],[9.369656,-3.920269,-4.135592,9.493282,-2.823600,4.449784,4.647730,7.142654,-3.307127,6.324421],[-3.889297,5.793450,3.204301,-6.371227,6.655130,6.289180,3.831627,-9.633732,1.680753,7.474783],[0.270874,8.504631,-1.410616,-6.061145,0.191593,2.718698,-6.271543,0.294330,-5.581022,0.650594],[-4.507067,-4.987501,7.971751,9.930752,5.038318,-4.871441,3.416433,5.519643,-2.266240,8.573140],[3.269884,-2.218201,5.616516,-2.245640,7.231281,1.050178,-8.516900,-6.645775,3.746545,-0.506579],[-5.894251,2.593621,-8.835563,3.394114,-4.404807,7.617371,2.798066,9.439294,7.108109,-6.625179],[-1.385475,0.602924,-5.216651,-6.612579,5.011944,-9.842352,3.153257,-6.745325,-9.940792,-4.166807],[-2.918318,-8.772631,5.526242,-5.782472,1.462755,-1.669615,-1.855295,0.009069,3.350698,-1.288499],[-7.124146,-9.683142,-2.711992,-4.968989,-9.739731,6.077668,-1.863420,-5.509229,-2.185835,-7.608899],[1.190395,8.101950,-0.181308,-3.160481,-5.663820,5.356178,1.894158,-0.295708,-1.018388,-9.375958]],[[3.738273,8.394510,-3.001553,-9.395581,-3.072112,-1.628021,6.879161,5.454179,-8.380286,3.687947],[6.024123,-9.290929,-3.784202,-5.609053,7.261372,0.433225,2.054832,-1.557323,-9.081747,-6.420923],[4.612542,-9.714530,-4.828236,3.694680,-5.874799,5.578842,2.504379,-5.385279,-6.610395,-5.969819],[-4.668732,-3.690996,-8.060215,1.110392,4.681937,3.226008,-4.101748,4.070065,9.867287,-5.820014],[1.419947,2.065805,1.426366,-1.293627,2.361373,4.179678,-6.193851,8.996483,-6.941196,5.102762],[-7.371171,-8.419462,5.116595,7.702339,-5.419527,-2.207649,3.281159,-2.060733,1.564569,-8.832879],[0.609866,-3.016168,1.274955,-1.339914,-6.109984,-6.087186,-5.105610,-5.599732,-0.973734,3.205811],[5.523948,4.546313,0.831140,5.879762,-6.344643,4.348333,0.805665,-7.753721,6.945502,-6.104822],[-2.277247,-6.267148,1.598421,-6.806503,-6.051830,7.839472,8.337310,-3.910663,-8.405647,-7.186108],[2.314260,7.400687,5.490347,-0.584101,-3.330164,2.136894,5.155120,-9.431705,-1.083150,-8.700238],[-7.029620,-5.974962,-1.262589,-4.004359,-3.403847,-6.637152,9.389546,-2.082023,2.814172,0.951538]]], dtype = "float32")#candidate|9259|(11, 11, 10)|const|float32
uop_9260 = relay.asin(const_9259.astype('float32')) # shape=(11, 11, 10)
output = relay.Tuple([uop_9260,])
output2 = relay.Tuple([uop_9260,])
func_9268 = relay.Function([], output)
mod['func_9268'] = func_9268
mod = relay.transform.InferType()(mod)
output = func_9268()
func_9269 = relay.Function([], output)
mutated_mod['func_9269'] = func_9269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9247_call = mod.get_global_var('func_9247')
func_9248_call = mutated_mod.get_global_var('func_9248')
call_9273 = func_9247_call()
call_9274 = func_9247_call()
output = call_9273
output2 = call_9274
func_9289 = relay.Function([], output)
mod['func_9289'] = func_9289
mod = relay.transform.InferType()(mod)
mutated_mod['func_9289'] = func_9289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9289_call = mutated_mod.get_global_var('func_9289')
call_9290 = func_9289_call()
output = call_9290
func_9291 = relay.Function([], output)
mutated_mod['func_9291'] = func_9291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9247_call = mod.get_global_var('func_9247')
func_9248_call = mutated_mod.get_global_var('func_9248')
call_9304 = func_9247_call()
call_9305 = func_9247_call()
func_9072_call = mod.get_global_var('func_9072')
func_9076_call = mutated_mod.get_global_var('func_9076')
const_9307 = relay.const([[5],[-8],[1],[2],[2],[-2],[6],[-2],[-8],[-10],[-10],[9],[10],[10],[3],[6],[1],[-10],[-9],[10],[8],[10],[1],[-2],[7],[-6],[-3],[-4],[8],[-2],[9],[-1],[-2],[-3],[-3],[2],[-2],[-5],[6],[-4],[3],[10],[6],[-9],[-6],[-5],[1],[-7],[7],[3],[2],[3],[-2],[9],[-10],[-3],[-4],[9],[4],[4],[2],[-7],[7],[5],[-4],[8],[-8],[2],[-1],[-9],[5],[-4],[-2],[-10],[-4],[8],[-6],[-1],[9],[-9],[-6],[10],[7],[-5],[-6],[-1],[-4],[-1],[9],[-5],[-8],[1],[8],[-8],[-7],[1],[-5],[-1],[-5],[-3],[1],[-4],[-9],[3],[6],[3],[1],[-9],[7],[5],[4],[9],[-6],[-4],[-7],[4],[10],[-4],[4],[-9],[5],[6],[7],[4],[-1],[-9],[-4],[-6],[9],[5],[-6],[-3],[-8],[-5],[4],[3],[-5],[7],[4],[-7],[-2],[-4],[5],[1],[10],[1],[7],[-4],[2],[-7],[3],[-8],[-1],[-2],[8],[-2],[8],[-9],[5],[-8],[-3],[3],[-4],[5],[6],[2],[4],[-10],[7],[-9],[-5],[-7],[4],[5],[-3],[-4],[-3],[-8],[-6],[3],[-7],[-3],[-9],[5],[7],[2],[3],[-3],[3],[-8],[-3],[3],[-1],[-3],[4],[-1],[2],[-1],[5],[6],[-9],[3],[6],[-1],[-6],[-5],[1],[-6],[-1],[-1],[6],[-7],[6],[-1],[3],[4],[-8],[4],[-3],[-4],[3],[-7],[-9],[9],[4],[4],[-4],[10],[8],[-2],[1],[-3],[-10],[-2],[3],[9],[5],[-10],[-1],[-4],[-3],[-4],[-9],[6],[8],[-10],[-1],[-5],[-1],[4],[-2],[10],[1],[2],[1],[8],[4],[10],[6],[5],[-3],[2],[-10],[-6],[5],[7],[-3],[9],[-8],[-7],[-6],[-4],[6],[-8],[-1],[8],[-7],[-1],[9],[-8],[-7],[4],[-1],[-5],[5],[-8],[8],[-3],[-6],[-7],[-3],[-3],[7],[-5],[-1],[-1],[-7],[10],[1],[7],[-9],[6],[6],[2],[-10],[1],[5],[-4],[-9],[-9],[4],[-9],[-8],[-1],[6],[2],[4],[3],[-7],[6],[-3],[3],[-2],[-8],[-5],[-1],[8],[2],[-9],[-2],[2],[10],[-2],[-9],[-5],[8],[-9],[-6],[7],[-2],[-1],[-3],[-3],[3],[-9],[-6],[-9],[-8],[9],[-9],[10],[4],[8],[2],[4],[-8],[-9],[3],[4],[-5],[-5],[4],[9],[-6],[-9],[5],[-2],[-1],[-7],[-6],[1],[7],[2],[3],[8],[-9],[-10],[6],[6],[8],[-6],[-7],[1],[1],[-4],[-8],[-10],[6],[-7],[-8],[-6],[-9],[-3],[-8],[8],[6],[-8],[-4],[-4],[-7],[-3],[-3],[2],[-3],[-8],[-5],[9],[3],[-8],[2],[-8],[9],[5],[4],[-10],[8],[-10],[4],[-10],[-10],[-9],[5],[8],[1],[10],[9],[4],[-3],[-3],[8],[10],[7],[-9],[-3],[-8],[-9],[7],[-7],[3],[-10],[-3],[-8],[-8],[6],[10],[5],[2],[-1],[2],[9],[-6],[-9],[4],[9],[-5],[-8],[-9],[-7],[-1],[-8],[-9],[-2],[-4],[-1],[8],[6],[-10],[-10],[-2],[10],[9],[10],[-8],[7],[-2],[-10],[-2],[3],[7],[2],[-5],[3],[5],[10],[2],[7],[-9],[3],[3],[-7],[-7],[-5],[1],[-4],[-1],[-8],[-7],[2],[2],[-9],[3],[10],[-2],[1],[3],[8],[7],[10],[1],[-10],[2],[-1],[-9],[-1],[4],[-7],[-8],[8],[10],[-3],[7],[4],[5],[4],[9],[10],[-2],[-10],[-3],[-3],[-5],[-5],[7],[-10],[5],[1],[-5],[8],[8],[5],[7],[-7],[-6],[1],[-2],[-10],[5],[7],[-1],[9],[10],[-9],[-5],[-2],[10],[8],[-5],[-8],[6],[2],[-4],[-2],[-6],[-10],[-5],[4],[-9],[8],[-2],[6],[-10],[-9],[1],[-5],[9],[-4],[8],[9],[-4],[4],[10],[-5],[-10],[2],[7],[-4],[-2],[3],[-2],[-2],[-6],[3],[10],[-9],[-3],[-6],[-8],[1],[-7],[-2],[2],[-1],[-10],[-10],[3],[-5],[-6],[-2],[-4],[-3],[-1],[-9],[1],[10],[4],[-2],[9],[1],[-10],[-6],[-2],[-1],[-1],[5],[1],[2],[8],[-4],[5],[4],[-6],[-6],[-2],[6],[9],[-2],[-3],[7],[5],[9],[1],[-9],[-7],[5],[6],[1],[-8],[9],[-5],[9],[-5],[3],[5],[1],[-4],[-7],[4],[-2],[-8],[4],[8],[8],[-4],[5],[9],[3],[8],[-1],[-6],[2],[-5],[-4],[4],[1],[-5],[-10],[10],[-1],[4],[-4],[-4],[9],[3],[-5],[-6],[-10],[8],[1],[2],[-6],[9],[-1],[3],[-3],[-2],[1],[6],[-7],[2],[7],[-3],[-9],[2],[4],[4],[-2],[5],[1],[-9],[-4],[5],[-6],[5],[-7],[9],[7],[4],[-2],[-5],[-2],[-6],[1],[-10],[-9],[1],[10],[1],[7],[1],[-5],[2],[2],[-9],[4],[-3],[-5],[3],[-2],[10],[-1],[-7],[1],[7],[5],[3],[-8],[-3],[1],[-5],[6],[-1],[8],[-6],[-6],[4],[-1],[10],[-2],[-9],[-5],[-9],[7],[1],[4],[5],[5],[10],[10],[8],[4],[5],[4],[5],[-2],[-2],[-7],[8],[-3],[-2],[-9],[6],[2],[9],[-9],[2],[-8],[9],[2],[-9],[10],[-1],[-2],[-1],[-2],[-3],[-9],[-4],[2],[7],[-2],[-7],[5],[4],[1],[4],[-7],[-6],[-6],[6],[-9],[8],[8],[3],[9],[1],[8],[-2],[5],[-2],[3],[6],[3],[-1],[-1],[8],[5],[-2],[-9],[-3],[4],[10],[4],[-4],[-9],[-5],[-4],[-2],[-7],[7],[-9],[-1],[-2],[9],[7],[-2],[10],[2],[-3],[4],[5],[-6],[-2],[-8],[-1],[-8],[2],[9],[10],[7],[-2],[8],[-10],[-5],[-9],[5],[-8],[-4],[1],[-9],[1],[-5],[5],[-8],[1],[-6],[-4],[-4],[-7],[7],[8],[1],[-5],[8],[9],[8],[-5],[2],[6],[6],[-5],[2],[-7],[4],[-7],[-1],[3],[3],[-6],[-3],[6],[-6],[4],[-10],[-10],[-8],[1],[4],[6],[3],[1],[8],[-3],[-3],[2],[8],[5],[1],[-2],[10],[9],[6],[-7],[9],[10],[-7],[-5],[6],[-8],[1],[-3],[7],[2],[9],[-9],[7],[4],[10],[-6],[7],[3],[9],[-10],[8],[-4],[-5],[-7],[-6],[10],[-5],[4],[-7],[-7],[-2],[-7],[9],[2],[8],[2],[10],[-6],[-4],[-9],[3],[8],[8],[-2],[-2],[3],[-2],[-2],[10],[8],[6],[5],[-10],[10],[3],[-8],[9],[-8],[10],[4],[-1],[-6],[9],[5],[-2],[7],[-4],[3],[-3],[-10],[2],[-7],[-4],[8],[5],[5],[-8],[10],[-9],[-9],[7],[-8],[-8],[9],[-5],[10],[-6],[6],[1],[3],[-5],[3],[-1],[3],[9],[10],[7],[9],[2],[9],[-6],[3],[-7],[4],[-5],[4],[-7],[-5],[2],[-8],[-9],[-7],[8],[-4],[-5],[-8],[-3],[4],[3],[7],[-3],[8],[-8],[8],[-1],[10],[-5],[-6],[4],[-5],[-2],[-9],[5],[-6],[9],[6],[4],[4],[7],[5],[8],[-7],[4],[-10],[-3],[5],[-10],[-4],[-8],[-3],[6],[1],[-5],[6],[-8],[-1],[-6],[-3],[-4],[-7],[8],[4],[-8],[2],[1],[-5],[9],[6],[2],[8],[-3],[-8],[9],[-7],[4],[2],[8],[1],[4],[-4],[-3],[9],[6],[5],[-9],[9],[2],[-9],[1],[-6],[10],[9],[3],[5],[-3],[2],[7],[-7],[-9],[10],[5],[-10],[-7],[10],[6],[2],[-3],[5],[-1],[3],[9],[-2],[-7],[9],[9],[-5],[-9],[1],[-5],[5],[-8],[-9],[-8],[-7],[5],[2],[5],[2],[3],[9],[-3],[8],[1],[-9],[2],[-10],[-8],[1],[5],[4],[-10],[-6],[10],[-1],[9],[5],[-6],[3],[2],[-6],[5],[5],[4],[1],[8],[1],[-2],[4],[-7],[5],[5],[-8],[-2],[-8],[5],[1],[7],[3],[-3],[-5],[10],[8],[-5],[3],[7],[7],[-7],[3],[-8],[-6],[-5],[2],[4],[-7],[2],[10],[8],[-1],[4],[2],[-4],[-5],[6],[2],[1],[6],[6],[9],[-5],[-1],[-6],[6],[-10],[-6],[3],[-8],[-7],[-7],[1],[6],[9],[7],[9],[-7],[2],[-1],[10],[-4],[-6],[-5],[-8],[-5],[-5],[9],[-4],[-9],[8],[10],[4],[4],[-5],[6],[-2],[-6],[-3],[-7],[-5],[8],[-7],[-8],[-4],[5],[3],[-9],[-3],[2],[-8],[3],[-1],[8],[3],[4],[8],[-10],[1],[-7],[2],[-6],[5],[1],[10],[6],[-2],[-10],[2],[-6],[5],[-3],[-4],[-9],[10],[9],[-8],[-9],[4],[-3],[-3],[-4],[9],[-7],[-4],[-4],[-5],[-4],[-3],[-5],[1],[-6],[-10],[-3],[3],[9],[-4],[1],[9],[-4],[3],[3],[-8],[-8],[-2],[-3],[6],[3],[2],[-10],[-4],[1],[2],[-3],[1],[3],[5],[3],[-5],[-4],[3],[-9],[7],[-7],[-9],[-4],[-8],[1],[8],[-10],[-1],[-3],[2],[-2],[7],[1],[3],[1],[1],[-9],[-4],[3],[1],[-1],[-8],[-7],[7],[5],[-8],[-4],[1],[6],[-7],[-6],[-4],[-1],[9],[10],[8],[8],[-6],[2],[7],[-3],[-4],[-9],[-4],[1],[-2],[2],[-3],[6],[-4],[3],[-10],[7],[7],[9],[9],[-8],[-1],[-10],[-4],[8],[9],[3],[10],[-3],[6],[6],[6],[-1],[-5],[9],[-6],[-6],[6],[4],[6],[-5],[2],[6],[-5],[-6],[-6],[6],[8],[-7],[10],[8],[10],[5],[-8],[5],[10],[1],[-6],[-4],[8],[4],[4],[6],[-7],[-8],[6],[5],[8],[4],[-8],[3],[9],[-2],[1],[-9],[-5],[10],[1],[5],[8],[7],[7],[-4],[3],[-4],[8],[-2],[1],[3],[-7],[-8],[-5],[6],[-4],[-4],[-4],[8],[6],[-8],[-1],[3],[-10],[-6],[9],[3],[-4],[-10],[9],[5],[-5],[-10],[1],[-2],[-2],[-9],[5],[-2],[-6],[-7],[10],[1],[-1],[2],[-7],[5],[-5],[10],[-3],[-6],[-5],[7],[6],[-4],[-10],[7],[1],[3],[-9],[1],[-2],[-7],[-1],[7],[-1],[2],[8],[5],[-1],[-6],[2],[-10],[-1],[4],[-7],[-3],[1],[-10],[-9],[10],[-9],[-4],[-2],[-1],[-8],[3],[-10],[2],[5],[1],[-2],[3],[-6],[-8],[7],[3],[-2],[3],[5],[-8],[-8],[-4],[3],[10],[-5],[2],[-5],[1],[-7],[4],[-10],[-1],[5],[-6],[-7],[7],[7],[-6],[9],[-2],[6],[2],[-8],[-5],[-1],[-2],[8],[-3]], dtype = "int8")#candidate|9307|(1584, 1)|const|int8
const_9308 = relay.const([-5,-6,-2,4,-7,5,-7,-3,4,-1,6,-8,5,2,-10,9,-5,-6,2,-6,-2,8,4,10,1,-7,-7,7,-2,10,-10,-7,-6,6,4,-6,-5,-8,4,-4,-3,-3,-7,-10,1,-3,3,-10,5,-6,7,5,-6,10,-3,6,7,-4,-2,-5,8,-6,10,-9,-1,3,-9,-10,3,7,-4,2,4,8,-2,-3,-3,-3,-4,-9,9,2,2,5,2,9,-6,-7,-9,-10,-8,-3,-1,-5,9,9,5,4,-3,-3,2,1,5,10], dtype = "uint64")#candidate|9308|(104,)|const|uint64
call_9306 = relay.TupleGetItem(func_9072_call(relay.reshape(const_9307.astype('int8'), [16, 9, 11]), relay.reshape(const_9308.astype('uint64'), [104,]), ), 2)
call_9309 = relay.TupleGetItem(func_9076_call(relay.reshape(const_9307.astype('int8'), [16, 9, 11]), relay.reshape(const_9308.astype('uint64'), [104,]), ), 2)
bop_9325 = relay.logical_or(const_9307.astype('bool'), const_9308.astype('bool')) # shape=(1584, 104)
bop_9328 = relay.floor_mod(const_9307.astype('float64'), bop_9325.astype('float64')) # shape=(1584, 104)
var_9333 = relay.var("var_9333", dtype = "int8", shape = (1584, 1))#candidate|9333|(1584, 1)|var|int8
bop_9334 = relay.floor_mod(const_9307.astype('float64'), relay.reshape(var_9333.astype('float64'), relay.shape_of(const_9307))) # shape=(1584, 1)
func_6189_call = mod.get_global_var('func_6189')
func_6194_call = mutated_mod.get_global_var('func_6194')
var_9351 = relay.var("var_9351", dtype = "float32", shape = (110,))#candidate|9351|(110,)|var|float32
var_9352 = relay.var("var_9352", dtype = "float32", shape = (550,))#candidate|9352|(550,)|var|float32
var_9353 = relay.var("var_9353", dtype = "float64", shape = (784,))#candidate|9353|(784,)|var|float64
call_9350 = relay.TupleGetItem(func_6189_call(relay.reshape(var_9351.astype('float32'), [1, 10, 11]), relay.reshape(var_9352.astype('float32'), [5, 10, 11]), relay.reshape(const_9308.astype('uint64'), [104,]), relay.reshape(var_9353.astype('float64'), [784,]), ), 6)
call_9354 = relay.TupleGetItem(func_6194_call(relay.reshape(var_9351.astype('float32'), [1, 10, 11]), relay.reshape(var_9352.astype('float32'), [5, 10, 11]), relay.reshape(const_9308.astype('uint64'), [104,]), relay.reshape(var_9353.astype('float64'), [784,]), ), 6)
output = relay.Tuple([call_9304,call_9306,bop_9328,bop_9334,call_9350,var_9351,var_9352,var_9353,])
output2 = relay.Tuple([call_9305,call_9309,bop_9328,bop_9334,call_9354,var_9351,var_9352,var_9353,])
func_9362 = relay.Function([var_9333,var_9351,var_9352,var_9353,], output)
mod['func_9362'] = func_9362
mod = relay.transform.InferType()(mod)
mutated_mod['func_9362'] = func_9362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9362_call = mutated_mod.get_global_var('func_9362')
var_9364 = relay.var("var_9364", dtype = "int8", shape = (1584, 1))#candidate|9364|(1584, 1)|var|int8
var_9365 = relay.var("var_9365", dtype = "float32", shape = (110,))#candidate|9365|(110,)|var|float32
var_9366 = relay.var("var_9366", dtype = "float32", shape = (550,))#candidate|9366|(550,)|var|float32
var_9367 = relay.var("var_9367", dtype = "float64", shape = (784,))#candidate|9367|(784,)|var|float64
call_9363 = func_9362_call(var_9364,var_9365,var_9366,var_9367,)
output = call_9363
func_9368 = relay.Function([var_9364,var_9365,var_9366,var_9367,], output)
mutated_mod['func_9368'] = func_9368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9247_call = mod.get_global_var('func_9247')
func_9248_call = mutated_mod.get_global_var('func_9248')
call_9381 = func_9247_call()
call_9382 = func_9247_call()
output = call_9381
output2 = call_9382
func_9389 = relay.Function([], output)
mod['func_9389'] = func_9389
mod = relay.transform.InferType()(mod)
mutated_mod['func_9389'] = func_9389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9389_call = mutated_mod.get_global_var('func_9389')
call_9390 = func_9389_call()
output = call_9390
func_9391 = relay.Function([], output)
mutated_mod['func_9391'] = func_9391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9268_call = mod.get_global_var('func_9268')
func_9269_call = mutated_mod.get_global_var('func_9269')
call_9409 = relay.TupleGetItem(func_9268_call(), 0)
call_9410 = relay.TupleGetItem(func_9269_call(), 0)
output = call_9409
output2 = call_9410
func_9411 = relay.Function([], output)
mod['func_9411'] = func_9411
mod = relay.transform.InferType()(mod)
mutated_mod['func_9411'] = func_9411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9411_call = mutated_mod.get_global_var('func_9411')
call_9412 = func_9411_call()
output = call_9412
func_9413 = relay.Function([], output)
mutated_mod['func_9413'] = func_9413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9289_call = mod.get_global_var('func_9289')
func_9291_call = mutated_mod.get_global_var('func_9291')
call_9433 = func_9289_call()
call_9434 = func_9289_call()
output = relay.Tuple([call_9433,])
output2 = relay.Tuple([call_9434,])
func_9439 = relay.Function([], output)
mod['func_9439'] = func_9439
mod = relay.transform.InferType()(mod)
output = func_9439()
func_9440 = relay.Function([], output)
mutated_mod['func_9440'] = func_9440
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9456 = relay.const(-6.754135, dtype = "float32")#candidate|9456|()|const|float32
var_9457 = relay.var("var_9457", dtype = "float32", shape = (13, 5, 12))#candidate|9457|(13, 5, 12)|var|float32
bop_9458 = relay.add(const_9456.astype('float32'), var_9457.astype('float32')) # shape=(13, 5, 12)
func_5580_call = mod.get_global_var('func_5580')
func_5586_call = mutated_mod.get_global_var('func_5586')
const_9470 = relay.const([[-3.500635,5.183955,2.328576,-1.675269,0.916154,-2.911198,-8.080870,-8.736581,-3.886078,5.143076,-5.928107,9.158576,-6.723338,-4.086629,-9.037618,-2.982328,6.007564,6.423164,8.748940,2.456891,-0.900035,-5.131297,-3.984243,8.581858],[0.217771,-2.147198,-2.427756,4.309643,2.095440,9.055618,-0.730143,-5.197654,3.115257,-2.344373,-4.769091,-2.762266,-9.517076,2.340318,7.143389,5.308770,-6.040774,-1.804180,3.369069,2.628532,-3.007684,0.889854,-7.094294,-3.488697],[6.931929,-4.724592,-2.601990,-8.359639,-5.098986,3.294538,-1.401312,-3.452285,-6.568333,3.959518,-6.910922,-7.315465,-9.780739,0.459525,-2.447232,-1.081788,7.352045,4.125227,3.023914,-0.340633,9.091075,9.814735,-5.023730,-1.155608]], dtype = "float32")#candidate|9470|(3, 24)|const|float32
var_9471 = relay.var("var_9471", dtype = "float64", shape = (128,))#candidate|9471|(128,)|var|float64
const_9472 = relay.const([7,-5,-10,10,9,-2,7,-10,-6,8,-3,9,6,9,4,-10,-1,-5,-9,6,1,8,7,10,3,9,4,5,8,8,5,3,10,-6,-3,8,2,3,-3,7,10,4,-5,-4,5,5,9,-6,7,9,-6,-7,2,-10,-2,3,-2,-8,7,2,-3,2,6,-2,-9,7,7,-6,2,5,2,8,6,2,5,5,-10,1,-4,1,3,9,-9,-8,-10,7,-3,-7,-8,-2,5,-2,-6,-3,7,2,-9,7,-7,-1,1,8,-10,3,-7,2,6,-9,8,-1,-3,2,-5,1,5,8,9,-10,-2,-6,1,3,1,-8,-3,3,-1,7,5,7,-10,-8,10,8,2,-4,-2,-10,8,-4,-6,-6,-2,-4,-3,-9,-7,-3,-4,10,-5,-8,-1,3,-6,-10,-4,1,9,2,-10,4,7,-4,-8,-6,-9,3,-5,-9,3,-3,-6,-2,-4,7,-7,-9,10,-7,8,-5,-10,-6,5,5,-7,-5,-5,-7,1,-10,5,-3,3,-3,-5,-9,-7,1,-2,-1,5,3,-1,6,2,-10,-7,4,-7,2,-7,9,6,5,-4,-9,2,-6,2,-7,-2,-5,-4,-1,-6,-2,-6,7,9,-1,10,-4,6,5,6,4,1,-6,-8,3,-4,7,6,-3,7,1,-6,10,-5,-9,9,8,5,-4,-5,-7,3,-8,-9,7,-4,3,-3,1,-10,-10,6,-10,2,-1,2,-5,-5,6,-1,-10,-9,-5,8,10,-6,8,8,2,3,-8,-3,-1,-5,2,10,-3,5,-3,3,10,6,3,7,6,1,4,-7,4,-2,10,-8,-2,10,-5,-9,-4,4,-6,3,10,6,-9,1,-6,8,6,6,9,1,1,-1,-4,-2,-6,4,10,2,-2,-1,-5,-4,-4,-8,8,-1,9,4,8,6,3,-2,2,2,-6,-2,-1,1,-9,-2,-8,6,4,-3,-7,8,10,3,-3,-6,8,-9,6,-6,-9,-2,1,6,-9,2,7,6,-10,-9,-3,-4,-5,-10,5,6,6,2,-7,5,-7,-3,-6,2,-7,-1,-8,-9,-9,3,-7,-1,6,-10,-4,-10,9,5,-10,1,10,8,-8,8,-8,-5,-10,7,10,1,-2,4,4,-9,6,4,4,1,-10,1,-2,4,1,-7,1,-6,9,-6,-9,1,-7,-9,-6,-2,1,-6,-10,-4,2,-3,-1,5,10,5,6,-5,1,-3,4,3,1,-10,-10,1,6,-4,-4,9,10,-5,9,1,-2,7,2,-5,9,-1,10,10,7,-4,-3,-6,6,3,-9,-5,9,-1,10,-1,1,-10,5,10,-4,-4,7,3,-1,-9,9,3,6,8,-2,-6,4,-8,6,2,2,6,-5,-5,5,9,9,-3,-10,10,-1,-6,2,5,-2,5,-2,3,2,-6,-1,-3,8,5,7,1,2,5,1,-10,-7,-7,10,10,10,-10,-2,-1,-9,10,2,7,9,5,-4,-5,4,3,3,-5,-9,6,-10,-2,5,-6,-3,8,7,-2,-10,3,10], dtype = "int64")#candidate|9472|(576,)|const|int64
call_9469 = relay.TupleGetItem(func_5580_call(relay.reshape(const_9470.astype('float32'), [4, 6, 3]), relay.reshape(const_9470.astype('float32'), [4, 6, 3]), relay.reshape(const_9470.astype('float32'), [4, 6, 3]), relay.reshape(var_9471.astype('float64'), [128,]), relay.reshape(const_9472.astype('int64'), [576,]), ), 2)
call_9473 = relay.TupleGetItem(func_5586_call(relay.reshape(const_9470.astype('float32'), [4, 6, 3]), relay.reshape(const_9470.astype('float32'), [4, 6, 3]), relay.reshape(const_9470.astype('float32'), [4, 6, 3]), relay.reshape(var_9471.astype('float64'), [128,]), relay.reshape(const_9472.astype('int64'), [576,]), ), 2)
func_683_call = mod.get_global_var('func_683')
func_686_call = mutated_mod.get_global_var('func_686')
var_9480 = relay.var("var_9480", dtype = "int16", shape = (384,))#candidate|9480|(384,)|var|int16
call_9479 = relay.TupleGetItem(func_683_call(relay.reshape(var_9480.astype('int16'), [4, 12, 8]), relay.reshape(var_9480.astype('int16'), [4, 12, 8]), ), 4)
call_9481 = relay.TupleGetItem(func_686_call(relay.reshape(var_9480.astype('int16'), [4, 12, 8]), relay.reshape(var_9480.astype('int16'), [4, 12, 8]), ), 4)
func_683_call = mod.get_global_var('func_683')
func_686_call = mutated_mod.get_global_var('func_686')
call_9493 = relay.TupleGetItem(func_683_call(relay.reshape(var_9480.astype('int16'), [4, 12, 8]), relay.reshape(var_9480.astype('int16'), [4, 12, 8]), ), 3)
call_9494 = relay.TupleGetItem(func_686_call(relay.reshape(var_9480.astype('int16'), [4, 12, 8]), relay.reshape(var_9480.astype('int16'), [4, 12, 8]), ), 3)
bop_9498 = relay.not_equal(call_9469.astype('bool'), const_9456.astype('bool')) # shape=(9, 16, 12)
bop_9501 = relay.not_equal(call_9473.astype('bool'), const_9456.astype('bool')) # shape=(9, 16, 12)
func_8366_call = mod.get_global_var('func_8366')
func_8369_call = mutated_mod.get_global_var('func_8369')
const_9506 = relay.const([-5.419749,-6.890398,5.012916,6.830443,1.401901,0.289475,2.363168,-9.647856,8.393815,4.718727,2.974423,2.682401,-0.077244,9.702783,-4.380065,7.290740,7.459046,-9.624435,-1.037007,-3.817842,9.063627,-1.257338,-9.835088,-4.692058,8.934001,2.485237,-0.551165,-2.625789,8.751386,-0.504273,-4.491741,-3.591928,-3.008362,-8.187600,-6.752205,-9.610037,-9.466948,-0.460912,2.966468,5.033307,9.815152,4.486232,6.637823,-6.597508,7.912460,-5.059568,3.887658,8.915380,-6.509894,-3.040998,-2.940448,-3.320085,4.328099,-3.039526,-1.546185,4.627514,-5.656651,6.728307,-4.783770,-3.059739,2.440271,3.044799,-0.336615,-2.059102,-7.620220,2.170705,0.829414,-6.297162,3.004952,8.234518,-2.449412,1.161688,6.651777,-7.401882,-2.742853,2.259855,-2.301404,-8.699669,-0.275963,0.014685,1.502196,9.504896,-3.318193,3.650900,-0.537757,2.368647,4.985247,-4.114337,-7.883635,-0.226356,5.132318,-3.771621,-9.028306,-9.002334,3.066740,-4.320008,8.519090,1.826221,2.230796,7.285600,1.991058,-8.287302,8.486340,4.982419,2.204796,-6.159265,5.838365,-0.878272,-8.318057,-9.165142,-3.019161,-6.436191,3.566278,-0.378981,4.685088,-9.157592,-1.896022,6.217066,2.213263,5.978968,4.391998,-9.535789,-2.291708,-1.236074,9.236604,-7.828243,3.814255,2.228988,-9.626120,4.247595,6.681793,-8.253542,-6.731120,1.602024,-0.369632,9.158485,8.663728,1.046773,-4.274181,-3.841120,-7.912262,-7.339784,1.898610,-9.138583,8.674247,0.363958,-4.112777,-9.908492,-7.583742,-0.008985,0.450111,-6.906665,2.218706,-8.339241,7.762804,-9.667452,-8.865940,-5.386138,-8.235858,8.670183,-3.376692,5.562388,3.224292,-9.050636,8.395322,-6.869849,-6.942128,2.255397,-3.039996,8.791832,-3.264135,-1.531573,-4.388912,0.147729,8.361561,-7.699288,7.628701,-2.378064,-9.777044,-6.057133,-5.772359,-1.475975,1.255430,-2.281798,6.691970,-6.394249,0.805891,-4.060519,2.265791,0.667835,9.459464,-6.913414,4.313850,2.314998,7.022384,7.020414,-8.464792,-7.770602,-6.873559,-2.785420,4.437357,9.582978,8.606083,-3.103320,7.801528,6.985497,-9.823547,-6.466557,3.936233,8.901081,1.330211,-8.521822,-7.402807,-9.890997,0.231588,-0.337405,5.280323,-2.948485,-3.106175,1.663387,-6.886109,-2.306533,-7.770884,-1.250446,-9.951685,0.947343,-8.070715,5.204814,-1.566454,5.984215,-7.364493,-9.802559,-6.458592,-7.822987,-7.051675,-0.633241,5.107213,1.061251,2.652580,4.402321,5.362856,-5.846266,-3.159715,-7.316570,3.839116,-0.045650,0.406148,7.031206,5.243381,-8.798098,0.067700,-4.652750,0.124629,-9.211709,7.214471,-6.844193,-6.946496,6.276221,8.031780,-3.753802,8.573930,-9.083398,7.372439,-5.495998,-9.281079,-8.380641,-4.548448,-1.493785,-6.257898,-1.807737,-3.821988,-4.209668,5.224936,3.709806,1.518047,8.936107,-4.341649,-2.711920,9.811640,9.192882,0.324413,8.547086,-6.406312,-6.347288,2.223134,0.308336,8.782706,-5.590379,1.952636,2.959274,8.931147,7.638266,9.300748,-8.829400,1.008360,-8.303881,8.528687,-8.681207,0.378540,7.889588,0.736905,-1.538864,-2.844442,-5.486641,-6.951051,5.068271,-1.460386,7.107945,-1.152638,5.700540,6.333931,-3.327848,3.953408,7.408295,2.594277,3.694755,9.928959,-7.622000,4.642214,0.113319,-8.162548,0.352676,4.886968,-8.219354,-0.877355,9.054738,5.055802,4.383694,-8.106506,4.581747,1.472005,2.647256,-4.492546,-3.351786,-0.848029,5.557216,-6.849749,7.933715,-8.638617,9.879757,2.534407,-8.355980,3.298145,-3.063344,-8.493609,3.562390,-2.056273,-7.056445,-6.016136,-4.581957,-3.422845,-8.208217,1.037138,3.365235,8.474987,-3.882574,3.665745,-0.320015,-6.053965,6.457162,-4.320930,-6.486000,7.788821,-3.053002,-2.366891,-4.456457,-9.913738,8.982930,-9.536655,1.883188,-4.839033,1.642433,2.609537,-7.224537,-5.967782,-3.075383,-9.513564,8.738155,-7.949117,-4.073920,5.709788,7.179198,4.177074,9.529469,7.617602,0.744736,-3.273578,-3.110914,-6.111561,-0.951990,-3.812913,-3.268439,9.602916,-1.691876,8.955058,-9.336940,1.959377,-8.179496,6.539988,-5.799782,6.859786,-2.973489,-2.064549,8.934787,4.638295,5.255248,-0.493844,-2.956141,-1.671906,6.979912,1.327438,-8.740410,-0.360797,6.531934,-8.496088,-8.303398,-0.208816,4.718332,2.182755,7.866669,-9.894224,-1.762517,-3.445862,0.612513,1.944848,-9.823329,-0.116452,3.518134,-7.642380,-7.774098,9.095644,-9.683345,2.177602,-9.664320,-8.560953,4.929393,6.841296,2.203934,5.906822,-7.148013,-4.920925,9.964209,7.452119,9.403606,-1.909978,-7.179291,-5.779177,2.775283,-2.532564,8.234191,2.801127,-0.021546,-6.211297,6.206954,-6.031011,3.167550,-3.025573,0.738919,9.473758,0.532591,5.896390,1.420989,-3.390067,4.050251,2.549626,9.041875,-0.271736,1.990608,-3.964024,-4.530832,-7.311916,4.756002,-6.866320,-3.502102,4.386314,3.740304,0.909125,-8.995488,6.395133,-3.650728,-7.010673,-5.215334,7.729179,-7.452113,-9.200835,-1.833598,-9.983267,4.047882,6.283776,-4.715092,-5.698254,4.568493,7.729176,2.929633,6.045067,6.379490,-0.126778,-3.754124,6.962022,6.738543,5.001488,-9.463665,8.722440,0.293526,6.506731,3.821761,3.630964,0.251120,-3.916102,-5.955426,-0.323427,-5.816502,7.391366,0.247515,3.888994,-6.079586,-8.857530,-2.856660,-4.077205,-3.204154,3.371786,8.241484,-8.296421,1.342493,-8.464489,3.326453,9.423625,7.616743,-6.018543,1.322875,9.836411,4.817965,-3.594937,6.674339,1.590426,-5.610622,1.083160,7.501304,-5.988610,-0.263394,-4.334104,-7.802995,7.800685,-2.995243,-5.671665,7.175354,2.240863,7.547098,-1.064063,3.279539,3.201526,4.027399,4.300183,-9.107919,4.143904,-9.389402,-8.503186,-3.364366,-3.404559,-5.911527,-5.213423,-4.290967,-3.355933,-2.410013,-8.490898,-7.571301,6.557392,-0.062227,-4.117243,2.653280,-9.369701,-4.573174,-2.232227,-4.855702,8.579605,6.557575,5.375841,-9.331469,3.611031,-6.772577,-8.660179,1.711384,-7.519017,-8.909827,9.428312,6.196782,-3.896031,-7.104608,-2.231862,1.780011,2.085821,9.269149,2.211732,-9.645521,-4.766626,-0.958873,8.942974,3.778555,-6.820808,3.744002,1.824648,8.936720,-3.049057,-0.549047,-8.750574], dtype = "float64")#candidate|9506|(605,)|const|float64
call_9505 = relay.TupleGetItem(func_8366_call(relay.reshape(const_9506.astype('float64'), [11, 5, 11]), relay.reshape(const_9506.astype('float64'), [11, 5, 11]), ), 1)
call_9507 = relay.TupleGetItem(func_8369_call(relay.reshape(const_9506.astype('float64'), [11, 5, 11]), relay.reshape(const_9506.astype('float64'), [11, 5, 11]), ), 1)
output = relay.Tuple([bop_9458,const_9470,var_9471,const_9472,call_9479,var_9480,call_9493,bop_9498,call_9505,const_9506,])
output2 = relay.Tuple([bop_9458,const_9470,var_9471,const_9472,call_9481,var_9480,call_9494,bop_9501,call_9507,const_9506,])
func_9523 = relay.Function([var_9457,var_9471,var_9480,], output)
mod['func_9523'] = func_9523
mod = relay.transform.InferType()(mod)
var_9524 = relay.var("var_9524", dtype = "float32", shape = (13, 5, 12))#candidate|9524|(13, 5, 12)|var|float32
var_9525 = relay.var("var_9525", dtype = "float64", shape = (128,))#candidate|9525|(128,)|var|float64
var_9526 = relay.var("var_9526", dtype = "int16", shape = (384,))#candidate|9526|(384,)|var|int16
output = func_9523(var_9524,var_9525,var_9526,)
func_9527 = relay.Function([var_9524,var_9525,var_9526,], output)
mutated_mod['func_9527'] = func_9527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9268_call = mod.get_global_var('func_9268')
func_9269_call = mutated_mod.get_global_var('func_9269')
call_9546 = relay.TupleGetItem(func_9268_call(), 0)
call_9547 = relay.TupleGetItem(func_9269_call(), 0)
output = call_9546
output2 = call_9547
func_9578 = relay.Function([], output)
mod['func_9578'] = func_9578
mod = relay.transform.InferType()(mod)
mutated_mod['func_9578'] = func_9578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9578_call = mutated_mod.get_global_var('func_9578')
call_9579 = func_9578_call()
output = call_9579
func_9580 = relay.Function([], output)
mutated_mod['func_9580'] = func_9580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9578_call = mod.get_global_var('func_9578')
func_9580_call = mutated_mod.get_global_var('func_9580')
call_9608 = func_9578_call()
call_9609 = func_9578_call()
const_9610 = relay.const([[[1.223346,0.105121,-0.349983,5.553818,-3.277134,2.748052,-5.920199,-8.344345,9.306404,2.291189],[5.227537,-4.623209,1.694913,-6.794536,-1.528619,6.735526,2.598519,-9.795656,-4.073843,-0.248257],[9.475144,-3.230342,9.838695,-9.019399,-6.399835,-4.082158,8.358611,8.034825,-0.862795,8.560726],[9.743452,-2.896968,4.381678,-4.896216,-5.246379,-0.532879,4.456110,0.810799,0.599391,2.579614],[0.958049,-7.648427,5.768325,3.005682,8.265280,-5.272315,-9.158809,3.812293,0.583010,8.568301],[-4.473223,0.123507,-9.257174,-6.124082,-4.686996,1.351563,-0.247662,1.795809,2.812082,6.488850],[8.720884,-3.783436,-9.714691,1.034122,4.425798,6.019090,5.080426,7.255017,6.495010,3.917639],[-3.996507,-9.485527,-5.359150,-5.299523,-5.465714,-8.284918,3.161184,4.882482,1.938251,-6.426882],[9.000561,-9.838299,-4.253140,-7.353310,-0.120527,-0.764731,7.505907,0.765977,-3.809676,5.864405],[6.150494,-2.955530,-1.631249,-5.728232,-6.721595,3.184503,-2.851684,-1.974542,7.501540,-0.964044],[6.457242,-0.961134,8.092522,-3.632091,5.729570,8.484177,-3.951818,-2.357932,3.366532,-6.595038]],[[2.318672,-4.991468,6.625213,-1.821956,6.643566,-3.060715,1.840279,8.542339,-5.418331,-1.615059],[-1.403632,-4.520142,9.252895,0.799020,4.788423,7.327569,1.258700,-8.102504,-7.571230,-3.994663],[-4.067657,-4.959838,2.700274,-8.009320,-7.328973,-3.322634,-8.762174,8.717410,2.862377,0.376895],[-8.056847,8.841156,-4.134688,-2.874131,-2.599152,-5.693983,-1.102039,9.616005,7.409726,1.210569],[-6.909955,-3.492113,4.408933,6.343479,-5.168414,2.545930,6.891318,6.208562,2.032820,-1.559514],[-6.044585,-8.834790,-0.617975,-5.691711,1.810980,6.823123,6.800308,5.960821,3.570985,9.882165],[6.398046,-6.883998,5.951100,-3.966332,5.663722,8.971309,7.921211,-3.629647,0.210935,3.201933],[3.304809,-5.874634,-1.156989,1.069224,-4.007440,-4.853417,9.726198,-7.198889,-0.647089,5.908757],[-4.049073,5.001471,-5.470410,5.269430,-4.972657,5.108654,9.848035,1.855294,3.023384,4.559120],[8.608872,1.848982,-3.144123,-6.104218,-1.045280,-2.831635,-9.764720,-8.106989,-2.042759,-1.148407],[3.984117,-9.459245,2.702088,-9.280992,-1.463509,9.724137,8.004582,-3.647644,-2.596535,-9.812458]],[[4.697763,9.640081,-8.004244,-1.553810,9.083725,-3.307478,-0.116022,7.392006,-2.427683,-4.948109],[1.110892,-1.914409,-8.912777,-8.672759,6.679573,1.829485,-3.024498,-2.990864,5.653355,7.781919],[3.497745,8.132890,-6.692808,-0.759284,-2.460731,7.513531,-1.458519,4.590750,-0.636268,6.401754],[-0.700126,-8.287047,-9.769341,-7.238788,-6.633072,-2.893342,1.514589,2.103738,9.415820,-7.523379],[9.609395,2.884095,7.661348,-3.956991,1.890547,-2.650773,1.062569,-9.553733,8.891132,3.679985],[-5.710456,-7.973363,4.798968,1.586664,9.984950,-4.746460,3.783469,-2.467749,-7.557032,-0.239333],[-1.729366,-7.341182,-8.835829,7.271439,8.857869,3.620470,8.358467,7.277693,0.939092,7.024984],[-8.472904,4.347885,5.605447,-0.768759,8.454052,5.122942,6.252589,1.216794,-3.681396,-3.318489],[1.843376,4.223055,2.536069,3.289539,4.933179,7.321370,-4.148273,1.753037,-4.762876,-7.993797],[6.304772,2.373455,7.655781,-9.666919,-3.960963,3.124043,-9.291401,-5.627541,3.120778,-8.765938],[-7.296078,-3.364894,2.463192,-9.121860,7.681627,1.956369,3.577875,-1.528148,2.953643,-3.235424]],[[9.428697,8.646275,7.991639,4.896257,4.716765,2.368594,5.977524,-7.681654,-6.803535,-9.259401],[4.239985,-1.887007,-9.671147,7.321749,5.974063,9.639262,6.052532,-9.673317,-9.628065,6.067686],[6.884458,4.862919,-7.941082,7.992669,0.317795,7.629016,8.125842,3.438526,-7.235971,2.015090],[-4.082540,-9.593228,6.105483,-3.716835,-6.177365,5.522184,4.796390,-1.077326,3.169163,-5.495087],[9.821422,2.165785,5.301640,-6.163191,-4.473126,2.093885,7.911907,-8.512793,-0.868508,-5.196871],[6.946716,-8.779112,0.441853,-1.493833,2.773270,5.445254,-3.521450,7.233059,6.439280,3.233918],[-7.709563,-8.272398,-2.058791,-4.311504,-8.326410,5.669745,0.260573,-2.607205,-8.343602,8.550990],[3.154334,-0.136334,8.180384,5.627888,-9.742398,-0.203407,9.223142,-7.011492,-0.336899,-2.862149],[0.094598,-7.445927,2.953834,6.976139,9.509797,9.370790,2.080375,8.832171,-0.140399,5.421246],[6.127102,6.710337,0.697427,6.469795,-9.819570,-8.457134,0.033607,-4.132699,0.136015,8.869456],[-4.618594,4.256304,-2.230261,4.000557,2.527914,1.430929,-1.059834,6.035164,-1.594207,7.976544]],[[-5.618310,4.709224,-6.178913,-3.207010,3.906490,0.502614,9.991120,-9.196516,3.345864,-4.440194],[-8.418609,1.341789,-2.470382,-5.689240,8.637328,3.280901,3.505205,-7.547241,6.162240,7.321638],[-7.466636,-8.963861,8.048649,1.579851,-4.298260,6.003992,-0.618542,-6.367665,4.679942,9.458489],[-1.759879,-2.262070,6.236909,-7.177551,-5.432827,-4.870760,-5.136912,-0.188630,6.703852,-2.949873],[5.561825,-5.543087,-4.401267,-4.552234,-3.293934,1.177721,-2.527505,-8.293880,-2.768588,-7.375894],[6.098369,5.082093,-4.826175,9.172368,4.963040,2.143680,-0.891040,-5.854307,-9.804634,-0.249249],[6.127892,-4.053512,-8.555899,2.928145,7.914567,3.668694,-0.620210,-4.001164,-3.279969,-3.471828],[8.437919,-0.124909,-4.018557,-0.012143,6.109453,3.463518,-5.502314,-8.222176,-1.986623,2.171143],[-4.106454,-0.132593,4.008648,7.739415,0.733278,-9.249563,4.288641,-0.351993,3.046324,8.437024],[8.836215,0.454961,-2.180783,-3.748291,-6.707567,-9.660858,-8.016802,3.936902,2.969853,7.315611],[4.711460,4.660300,-0.144012,-1.281947,-5.464211,-7.436761,-5.270304,-4.136395,-5.879023,1.600348]],[[-4.525870,8.119752,1.551443,3.509005,5.742386,3.343512,-1.357890,8.956493,-3.390988,-7.276052],[3.237766,-3.695621,4.941928,-5.170364,-1.085484,-7.976758,7.647332,5.908300,-0.036806,6.976939],[-8.663864,-5.597585,2.749803,9.867500,5.909031,8.804088,5.833053,-4.554837,-8.418435,-2.850617],[6.242522,4.080517,-4.653735,1.467638,2.607565,-2.340361,6.154994,-1.364142,-2.338676,-6.947614],[-4.508204,0.174059,9.912718,-6.924977,-8.085139,-6.508381,0.988261,2.589736,8.113051,-8.290373],[4.910055,-1.728718,-2.861478,-4.701208,-6.530586,-3.112905,-6.109126,-1.583844,-3.989334,2.352576],[5.414800,-9.622543,6.771546,-8.058087,-9.648811,-2.162677,6.453444,-2.282165,8.977731,8.541768],[6.599305,-6.111667,1.876515,8.132618,2.575574,-4.348106,5.905455,3.473707,-6.549653,8.557699],[9.005815,2.686830,-2.100801,-4.569340,-1.370781,0.752349,3.326471,6.605882,9.414401,-5.072510],[3.033705,7.236946,6.095553,4.864739,0.203520,-1.251071,-2.445798,8.315118,2.242720,8.506971],[0.580382,2.554559,-4.423655,7.634345,-2.385347,8.057396,7.631361,-2.294656,9.882372,-4.839143]],[[-0.756323,2.231326,-8.584330,6.929657,-6.267347,8.129701,4.766862,5.480898,4.223678,4.584292],[-2.497368,9.246215,-6.297197,9.298734,-3.176945,-4.849935,-9.120458,6.731087,-9.906618,2.463934],[8.969936,0.062594,1.785943,2.961950,4.605543,-3.775487,8.400643,0.549094,4.001137,6.445232],[5.991829,-8.266589,-7.797584,-8.807890,-3.357991,7.590483,8.851068,1.363164,0.309608,7.058286],[4.358771,1.500514,-7.935566,-8.725141,3.086322,2.228537,6.519360,-8.553744,3.396998,6.838358],[-7.427815,-3.037817,0.049396,9.486305,-3.839813,9.386364,-4.947035,-0.263642,-2.342732,8.714040],[-7.223754,-8.725897,-4.678153,9.645158,5.025152,-4.312149,-9.398684,8.782872,-4.382892,-2.641891],[-6.980181,-7.433050,-9.646674,7.636598,-0.181538,-8.255088,0.080051,-8.261127,-2.135757,2.651990],[-6.581083,7.379708,-2.904884,-1.198151,5.231734,0.834923,8.465823,6.195083,-1.711495,-0.009934],[9.171282,-0.426504,2.763178,-2.322915,-9.398726,5.854638,4.566842,0.481745,-4.563692,-4.131178],[9.908975,1.386788,-5.900032,-2.169102,5.070188,4.449701,-6.558702,4.304292,-6.031380,9.828511]],[[8.425794,-7.912584,4.186271,4.878991,7.104646,-1.771155,2.920940,3.415303,-0.357989,8.448375],[-2.680730,-0.854255,-7.655409,-6.589271,8.348060,8.223898,7.561490,-5.689543,-4.247896,-6.157097],[4.404639,-8.272085,-5.904111,-3.463752,8.020349,-2.946700,-4.903255,-7.007919,-4.634528,-8.448620],[-5.810532,-1.939984,3.665066,2.184494,-1.229396,5.261271,-4.721792,2.085341,-9.888572,3.600929],[1.297102,2.708887,-7.849692,-4.170621,4.235886,-6.374287,-8.882762,8.156123,8.137584,8.136767],[-5.908389,-8.370255,-9.791398,3.782604,1.062048,0.895877,-4.911110,7.332767,-5.176586,4.138867],[-1.255583,-9.746140,-3.292972,-9.034253,-4.896105,-0.998148,-4.302305,3.697834,-7.545208,4.453369],[1.585369,-0.675118,-0.588544,-9.805998,3.084086,-9.604261,5.914841,-3.325555,-1.684103,-7.963304],[8.130532,1.248871,7.435079,-9.318479,5.881948,8.989233,-9.177362,-8.116626,3.810986,-8.886807],[-0.596336,-6.713298,5.613249,5.485239,2.225382,-3.021518,-3.595003,9.272918,-1.856049,3.329796],[2.432769,-5.713323,-2.952472,-4.603462,8.372870,-4.041795,7.489259,5.670618,-8.522590,-1.393087]],[[-8.063028,-8.062495,-7.680253,-7.029312,8.415837,-0.938849,3.880834,2.527513,5.045739,2.918056],[-7.852402,-4.271523,8.379981,-3.768158,1.109188,1.531320,3.114893,-7.605720,5.127959,-2.658577],[3.167995,-0.728663,3.610592,-6.607423,3.849296,7.260500,-9.823867,-1.785980,7.184252,0.867391],[5.655159,9.700149,-5.675175,2.708729,-8.206292,-0.346806,-1.125369,-0.099140,-8.647240,2.385423],[1.931653,2.166357,-7.266019,5.323001,-4.717185,-8.578860,0.303163,-3.922781,-8.594511,-9.424736],[1.310018,-5.399386,9.877454,9.375035,7.726113,7.433652,6.366988,-0.455780,-9.279526,-1.984856],[-2.864700,5.442053,-6.505079,0.878769,1.762034,8.238640,1.879439,-2.101346,3.398255,-0.968702],[-9.692748,8.210033,3.149406,-2.077777,1.190310,-2.815464,3.731957,2.868079,-5.365141,-7.394280],[-7.792930,-7.153837,2.697138,-7.193691,9.092723,-3.095646,7.848070,9.295163,0.559194,-6.911161],[-9.863485,5.003633,-7.893424,3.973939,2.607018,-9.093268,-1.869975,9.612489,-8.592521,-5.675062],[1.910963,7.022941,-9.392463,9.783013,-7.608136,-8.728810,-2.235102,9.882755,-5.173526,7.722139]],[[-4.518804,-0.368233,4.391581,9.600263,6.689784,7.275783,-5.429871,9.298926,3.851419,-3.615059],[8.922500,5.126519,-6.455855,-8.792636,9.161491,6.281483,-6.787701,-9.362570,5.024015,5.944532],[3.498996,5.954707,8.784342,-7.046498,8.822151,6.567504,2.369929,5.630804,8.303310,7.539020],[7.727773,-9.544663,-2.526086,2.861575,-2.289359,-2.203142,9.322618,1.097608,0.750857,-4.868159],[3.806378,3.414738,-9.881554,-5.974994,-6.103025,-8.645306,-7.163189,3.761704,-4.459347,3.984084],[2.399959,-8.616165,2.701808,-7.764399,-3.907201,-5.433400,-6.132890,-6.127957,-0.130053,-3.709447],[-3.486647,-7.917109,3.793009,1.547213,0.197293,8.735704,5.059894,8.519526,8.516761,0.602929],[-8.815062,3.486115,2.430001,4.817414,6.304318,-3.342797,0.745994,-6.184358,4.562976,-2.247234],[-9.267959,2.604477,8.382323,1.713669,-8.080302,-5.227230,-7.335496,6.544359,-7.800538,0.511398],[-8.369258,3.697297,-1.989286,1.886246,-7.574700,-9.203711,2.558470,-0.816278,8.980703,6.342801],[-2.015601,-4.825084,-2.780794,-6.874378,0.652073,-6.105587,4.767010,0.229060,7.066098,3.045644]],[[-4.850976,2.652472,-3.409830,-4.907580,6.101372,8.611279,-0.256233,-3.212745,-6.438311,1.232322],[-0.807172,0.038654,4.697861,4.902621,1.313177,-4.162607,0.926572,7.605095,1.783935,9.248681],[-6.770467,-4.440108,-8.752825,2.444849,6.612029,-9.495410,-5.611401,-0.428176,-6.704617,-3.399332],[-0.454067,1.148301,-5.874919,2.333380,7.832622,-1.925260,-4.512602,-2.208645,3.252902,2.246614],[-5.262714,-2.561382,2.630829,-4.251331,7.097038,-7.568478,-3.896811,5.533217,-1.511803,-2.052130],[3.749392,5.932390,-2.442993,-3.898569,1.897355,-1.832224,-4.652601,-6.601835,6.874481,8.226459],[-8.277312,7.224586,-9.138866,9.931056,4.710254,-3.083330,0.850023,-5.390107,5.336947,2.426951],[-0.405058,-4.645533,4.649295,3.181679,7.338330,0.800763,-9.007843,-4.761847,4.869216,9.876286],[-4.236746,0.515772,-9.681107,8.473582,-6.927519,-3.926639,-3.979973,0.943411,-3.191736,1.519636],[-3.250707,5.977352,2.405291,5.093515,5.762559,4.119669,-5.180896,6.385607,4.371105,-6.433777],[-2.869699,-7.170234,5.035549,-2.019252,-5.667491,3.568256,-5.917527,7.465113,3.731685,-8.601792]]], dtype = "float32")#candidate|9610|(11, 11, 10)|const|float32
bop_9611 = relay.floor_mod(call_9608.astype('float32'), relay.reshape(const_9610.astype('float32'), relay.shape_of(call_9608))) # shape=(11, 11, 10)
bop_9614 = relay.floor_mod(call_9609.astype('float32'), relay.reshape(const_9610.astype('float32'), relay.shape_of(call_9609))) # shape=(11, 11, 10)
func_683_call = mod.get_global_var('func_683')
func_686_call = mutated_mod.get_global_var('func_686')
var_9620 = relay.var("var_9620", dtype = "int16", shape = (384,))#candidate|9620|(384,)|var|int16
call_9619 = relay.TupleGetItem(func_683_call(relay.reshape(var_9620.astype('int16'), [4, 12, 8]), relay.reshape(var_9620.astype('int16'), [4, 12, 8]), ), 1)
call_9621 = relay.TupleGetItem(func_686_call(relay.reshape(var_9620.astype('int16'), [4, 12, 8]), relay.reshape(var_9620.astype('int16'), [4, 12, 8]), ), 1)
func_3458_call = mod.get_global_var('func_3458')
func_3461_call = mutated_mod.get_global_var('func_3461')
const_9627 = relay.const([9.432439,7.966371,-8.241551,-3.816275,-9.085064,3.187370,1.588305,-4.975334,-4.859381,6.847348,-6.926462,4.092004,4.485458,-6.712881,-3.724172,-6.160852,4.948405,1.160735,7.064627,-9.089464,-9.731505,3.005262,2.168811,2.033720,-1.738728,-7.271679,1.567191,7.534281,2.374985,8.564932,5.261505,1.085316,7.478745,-9.600737,-0.488465,-7.764106,1.300437,-9.640925,1.291687,-0.080082,7.177540,-4.713186,-5.703140,5.017419,3.951238,3.431122,-4.596695,1.256025,-8.148983,6.145864,4.005129,1.488497,1.827048,5.366817,3.471147,-2.812043,-6.434791,7.604211,-7.363923,-0.185865], dtype = "float32")#candidate|9627|(60,)|const|float32
const_9628 = relay.const([3.771254,4.567824,-2.286767,-4.407441,-3.681992,-4.782932,-8.876910,-1.127448,1.075675,-8.612153,0.450429,3.866336,-5.263322,7.298254,3.182692,-3.523400,-3.657092,-1.687817,-2.327327,-8.764719,-1.347238,-7.299221,-9.812442,-9.998693,7.011576,2.963562,-3.372693,-5.711975,-3.490053,-1.432577,-1.707081,-8.629894,-2.000662,-5.958559,-9.095416,8.819305,2.062853,1.048173,-9.010001,-4.265539,-9.436885,-3.327121,-8.255998,4.131051,4.889066,-8.884547,-7.084343,-5.876688], dtype = "float64")#candidate|9628|(48,)|const|float64
call_9626 = relay.TupleGetItem(func_3458_call(relay.reshape(const_9627.astype('float32'), [12, 5, 1]), relay.reshape(const_9628.astype('float64'), [4, 12]), ), 3)
call_9629 = relay.TupleGetItem(func_3461_call(relay.reshape(const_9627.astype('float32'), [12, 5, 1]), relay.reshape(const_9628.astype('float64'), [4, 12]), ), 3)
output = relay.Tuple([bop_9611,call_9619,var_9620,call_9626,const_9627,const_9628,])
output2 = relay.Tuple([bop_9614,call_9621,var_9620,call_9629,const_9627,const_9628,])
func_9643 = relay.Function([var_9620,], output)
mod['func_9643'] = func_9643
mod = relay.transform.InferType()(mod)
var_9644 = relay.var("var_9644", dtype = "int16", shape = (384,))#candidate|9644|(384,)|var|int16
output = func_9643(var_9644)
func_9645 = relay.Function([var_9644], output)
mutated_mod['func_9645'] = func_9645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9439_call = mod.get_global_var('func_9439')
func_9440_call = mutated_mod.get_global_var('func_9440')
call_9661 = relay.TupleGetItem(func_9439_call(), 0)
call_9662 = relay.TupleGetItem(func_9440_call(), 0)
func_9389_call = mod.get_global_var('func_9389')
func_9391_call = mutated_mod.get_global_var('func_9391')
call_9668 = func_9389_call()
call_9669 = func_9389_call()
output = relay.Tuple([call_9661,call_9668,])
output2 = relay.Tuple([call_9662,call_9669,])
func_9688 = relay.Function([], output)
mod['func_9688'] = func_9688
mod = relay.transform.InferType()(mod)
mutated_mod['func_9688'] = func_9688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9688_call = mutated_mod.get_global_var('func_9688')
call_9689 = func_9688_call()
output = call_9689
func_9690 = relay.Function([], output)
mutated_mod['func_9690'] = func_9690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9439_call = mod.get_global_var('func_9439')
func_9440_call = mutated_mod.get_global_var('func_9440')
call_9696 = relay.TupleGetItem(func_9439_call(), 0)
call_9697 = relay.TupleGetItem(func_9440_call(), 0)
output = relay.Tuple([call_9696,])
output2 = relay.Tuple([call_9697,])
func_9698 = relay.Function([], output)
mod['func_9698'] = func_9698
mod = relay.transform.InferType()(mod)
output = func_9698()
func_9699 = relay.Function([], output)
mutated_mod['func_9699'] = func_9699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9411_call = mod.get_global_var('func_9411')
func_9413_call = mutated_mod.get_global_var('func_9413')
call_9703 = func_9411_call()
call_9704 = func_9411_call()
func_5580_call = mod.get_global_var('func_5580')
func_5586_call = mutated_mod.get_global_var('func_5586')
var_9709 = relay.var("var_9709", dtype = "float32", shape = (72,))#candidate|9709|(72,)|var|float32
const_9710 = relay.const([1.448270,-1.500125,8.209840,-9.555671,-8.083368,4.719744,-3.440407,-5.488981,-8.850670,3.540657,-1.163723,-6.099206,-4.217190,-2.290426,-3.234508,-1.032275,9.917207,0.629269,-1.982487,-2.694971,-3.956167,3.795974,5.865925,-1.583150,-6.611947,-3.250455,-8.528838,9.811391,2.880607,6.585006,-9.802979,0.849787,-1.649675,-9.397954,-7.963217,2.526634,0.008415,5.716651,-9.516508,-8.958917,3.963615,8.698949,3.027219,-5.984506,-1.504242,-1.471397,-9.798602,-7.476650,-9.134243,6.086018,-4.027289,-4.655477,6.081834,-8.210810,8.228720,-9.615273,8.184925,5.203748,-2.893397,9.277839,6.860120,-0.003623,4.105274,-7.021650,4.082531,-0.198884,-0.888344,1.768865,9.776282,3.936703,-7.556170,7.896176,-5.388343,-2.356183,4.106691,1.812890,-5.580173,-6.981235,9.950089,1.634591,-7.318298,-0.590440,-6.102346,-6.085067,2.828907,8.145403,9.668876,8.822960,2.569222,7.474991,-7.479150,0.531615,-5.442063,-8.844260,-9.133046,-1.151805,-2.317828,4.944640,4.403987,-0.258371,3.293384,-6.802850,-1.063022,-6.515227,-5.442550,-9.046300,3.850659,3.484363,6.195541,0.642040,9.288311,-8.089495,-6.538446,2.121090,0.686295,-9.768707,5.043404,-9.930210,-7.521145,0.594440,-8.406662,4.631879,2.723420,7.300308,5.841375,-1.116108,-8.528458,-5.510357], dtype = "float64")#candidate|9710|(128,)|const|float64
var_9711 = relay.var("var_9711", dtype = "int64", shape = (576,))#candidate|9711|(576,)|var|int64
call_9708 = relay.TupleGetItem(func_5580_call(relay.reshape(var_9709.astype('float32'), [4, 6, 3]), relay.reshape(var_9709.astype('float32'), [4, 6, 3]), relay.reshape(var_9709.astype('float32'), [4, 6, 3]), relay.reshape(const_9710.astype('float64'), [128,]), relay.reshape(var_9711.astype('int64'), [576,]), ), 4)
call_9712 = relay.TupleGetItem(func_5586_call(relay.reshape(var_9709.astype('float32'), [4, 6, 3]), relay.reshape(var_9709.astype('float32'), [4, 6, 3]), relay.reshape(var_9709.astype('float32'), [4, 6, 3]), relay.reshape(const_9710.astype('float64'), [128,]), relay.reshape(var_9711.astype('int64'), [576,]), ), 4)
output = relay.Tuple([call_9703,call_9708,var_9709,const_9710,var_9711,])
output2 = relay.Tuple([call_9704,call_9712,var_9709,const_9710,var_9711,])
func_9715 = relay.Function([var_9709,var_9711,], output)
mod['func_9715'] = func_9715
mod = relay.transform.InferType()(mod)
mutated_mod['func_9715'] = func_9715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9715_call = mutated_mod.get_global_var('func_9715')
var_9717 = relay.var("var_9717", dtype = "float32", shape = (72,))#candidate|9717|(72,)|var|float32
var_9718 = relay.var("var_9718", dtype = "int64", shape = (576,))#candidate|9718|(576,)|var|int64
call_9716 = func_9715_call(var_9717,var_9718,)
output = call_9716
func_9719 = relay.Function([var_9717,var_9718,], output)
mutated_mod['func_9719'] = func_9719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9411_call = mod.get_global_var('func_9411')
func_9413_call = mutated_mod.get_global_var('func_9413')
call_9748 = func_9411_call()
call_9749 = func_9411_call()
func_2801_call = mod.get_global_var('func_2801')
func_2803_call = mutated_mod.get_global_var('func_2803')
const_9767 = relay.const([7.805052,-6.900092,2.703012,-2.247829,-3.309343,2.461544,-2.494781,-2.612244,4.120089,-9.228585,-1.207774,-5.513705,-8.680119,-8.469459,-1.506470,7.361987,6.245226,3.595831,-2.464940,3.460318,8.319973,9.618696,4.197378,-8.661976,-2.021238,-9.033067,-2.110807,9.407131,1.398516,-9.185806,-7.868687,1.477434,9.382442,9.979081,1.238915,-7.894034,5.724909,-1.375248,3.284586,5.454834,1.481386,-1.349451,1.698737,-0.123146,-1.425749,-5.293142,2.650463,-5.275050,-3.404237,-3.854506,9.777374,-3.299814,-2.719649,5.456473,-5.178631,6.654078,-4.211591,8.442624,9.763649,5.238548,7.854159,-5.238184,6.279987,9.408262,-1.712580,1.376511,6.108077,3.823299,-3.929318,5.664786,0.743248,-8.354214,3.311200,7.264190,-5.909078,-1.758368,-1.169674,-7.926467,4.368313,7.943873,0.540594,7.121681,3.044855,-7.761756,-1.714827,-0.951659,-3.849692,2.509803,-8.179276,-1.783206,8.514290,-3.487746,5.223028,-9.673963,2.621072,0.894552,-7.510758,8.101102,8.262987,-5.152569,9.202759,8.375544,9.465239,0.905657,-9.080927,-1.761875,-1.508574,0.723184,8.462677,9.296121,-5.682980,8.192285,2.717157,-3.233171,-5.689852,-7.737427,9.414498,7.296114,2.073807,-8.352222,-1.161004,2.006747,-7.547187,9.606696,-6.246966,-9.867225,3.141597,-8.318905,-7.065845,1.326554,3.438689,-9.794843,3.513716,3.399581,1.727237,-0.757341,4.161582,-5.384641,2.140457,1.760860,-5.096598,-9.177533,-8.045806,9.957058,9.146402,0.912581,-3.676321,0.005952,-0.470343,-0.976763,-0.105285,8.623219,7.020881,5.972770,1.857761,-7.310370,-5.923203,9.670679,7.787509,7.604580,1.471488,5.315396,0.446765,-3.744907,-2.737342,2.688491,2.506229,-9.796975,-8.044708,4.349454,-0.283246,-9.990945,-5.656706,3.005708,-3.351636,-6.102927,-4.247433,1.810229,-1.992591,4.473451,8.698117,-1.838948,9.322588,4.406362,-3.805171,-7.214678,-1.469230,-2.200956,-0.681450,4.953194,-9.123676,6.062657,2.932591,-4.995266,-4.519305,-8.527499,-8.808986,-5.050362,8.421075,-4.794157,4.959042,5.769033,1.422690,-2.471940,2.123077,-7.192471,-6.500018,-5.000856,-7.391932,0.794174,-2.997949,-6.931786,-2.338228,9.360327,-9.922925,-9.765140,-2.749788,-3.917332,3.606003,0.932565,-6.267813,-3.938460,9.419404,-2.821224,-2.420953,-1.531597,-2.489261,6.018103,-6.176641,-5.309848,-5.047057,-1.552456,-2.863756,-6.766816,7.702220,7.417381,8.346078,-8.896549,-2.702450,0.997770,3.890706,-9.550369,-1.158532,-3.746298,-8.687625,-5.272607,8.633691,6.469475,2.527884,6.437531,0.077938,-1.071862,7.293175,-8.023578,3.874093,-0.386553,6.147727,-9.472656,-4.833363,-2.876669,-2.440204,-2.112111,8.939453,0.197735,4.551746,-9.950406,2.858211,-3.978360,0.058881,2.375306,-7.036568,7.609519,-0.532673,6.745300,5.972664,4.382381,-3.734803,8.769762,3.655088,-7.244113,-9.552508,6.198261,6.046268,-8.190884,-9.831885,-4.725273,7.912463,5.166816,2.863097,-8.646635,-9.765938,-8.009272,0.752727,4.159861,6.980905,-0.725851,-6.980185,2.764252,0.719856,-1.332828,0.805058,-2.535269,0.974851,-5.265636,-3.602761,7.470820,-5.303404,-0.640784,2.100196,-2.855442,1.354711,-3.496779,0.867965,-1.612425,7.356193,-8.324664,9.260477,4.451761,-1.328332,9.663327,3.028300,-0.968593,4.068809,7.125495,-2.478658,5.485286,-6.640194,4.614967,6.505472,-5.424700,-7.226515,-5.315736,5.886348,-8.840522,6.213347,9.927353,-2.089872,6.844588,-4.707127,6.420982,-8.581427,-8.071867,-0.950306,-4.614224,2.450559,9.226927,-6.215266,0.610432,3.270548,0.514958,-2.517714,5.237206,-1.562145,-1.213267,-8.581134,3.104772,-9.780512,3.775710,5.613572,-1.339983,3.235703,8.441818,1.761439,1.811345,-4.767996,-1.278559,0.963680,-6.030748,-3.679679,-1.347101,-2.181002,2.621587,-7.943789,5.495673,6.843096,-3.519224,4.162208,-1.340553,5.964146,-2.680688,-8.641240,-8.114210,-7.542407,-9.023049,5.784264,0.018177,-2.240047,-5.372672,-8.115689,1.184699,1.392416,-7.346220,3.920863,-5.676346,-5.340204,-3.268208,1.758226,2.617747,9.395974,-7.407941,-3.911099,-1.418007,-5.395208,5.506641,2.011941,-6.618001,0.533826,3.830968,2.555437,4.431604,-6.858547,1.664667,-0.304351,-2.023507,-3.650190,-0.647009,-5.381945,3.594698,6.925043,1.597553,6.756769,2.083888,-3.752920,7.872963,-7.175666,-0.177424,8.296956,-7.336774,-2.297270,1.837314,9.356059,4.989664,2.012769,0.642283,-7.116089,8.095526,-4.021644,-9.159535,2.452764,3.241788,-6.358122,4.349949,1.571973,0.218906,-6.333887,-5.086341,-1.488236,2.750225,-6.643507,-3.566852,-5.723005,5.615509,-1.167768,0.536656,5.770308,-4.651374,-9.165024,2.759130,2.906361,1.288290,-0.337666,-3.695987,-3.878053,-6.134610,-9.908736,6.546213,-4.395486,9.179875,-3.103800,-2.732181,1.355259,3.341452,-6.171672,9.594583,5.022886,9.467565,-0.155665,-2.634236,-6.838942,-6.378503,3.333519,9.862803,-7.040935,-6.613681,4.401942,-7.641767,8.997370,4.920775,1.027407,-6.242575,2.281561,-9.646060,6.347891,-1.325664,6.941860,-9.898670,-8.742511,-2.718570,-9.162647,2.103587,9.212936,1.867027,8.036045,2.785154,3.130256,5.799196,4.932907,3.726352,-7.568046,-3.591397,-1.878273,-0.876970,-6.467933,0.044859,-0.256794,5.638008,-2.421241,-9.369839,3.013605,-5.332152,5.814250,2.339600,8.304117,1.675439,8.257059,3.057528,-5.877844,-6.123126,-4.095930,-7.521501,7.758456,1.296856,-8.241339,5.684677,0.061169,-7.306653,-8.210690,9.309721,-3.217338,7.014555,0.039318,5.893550,2.676093,-1.765915,7.294829,-1.836096,-8.348800,7.027914,0.491268,-9.162291,-7.504091,-2.116089,4.691306,7.728711,-3.335157,2.020022,2.560832,-2.380981,-5.293007,6.467376,3.435236,-3.612623,5.810093,-0.690286,3.194423,5.764480,8.049925,-3.379376,8.296519,0.554866,-4.162115,7.991934,0.446242,-6.007116,8.062827,-7.461699,6.804995,-6.584712,-0.444720,-3.378579,-7.118047,5.334649,3.709288,-4.822448,3.070919,-0.868269,-8.896124,-2.074852,5.220260,2.426328,-4.073352,8.205365,5.832168,-5.852162,-1.817573,3.231181,-1.062964,1.317263,-7.892561,-0.258832,2.551750,3.152238,4.667693,4.908516,7.922261,3.861239,-2.009583,7.998660,-9.435552,4.755230,-6.476238,0.605632,-9.555257,-9.404055,-5.267908,-5.418222,-9.863874,1.434228,1.810040,-3.860478,-4.686161,-9.597573,5.746947,-3.056503,1.591098,-3.395223,-4.493075,-1.578544,-4.196049,0.623561,-2.691900,-0.224464,6.201569,-8.326164,5.560257,2.966864,-5.849643,-1.302074,-4.100673,9.142923,3.429566,2.715961,-2.329101,-1.394670,8.375038,3.966772,7.326724,-7.919322,-1.634429,-4.265161,4.535216,8.867318,9.723262,4.669802,-8.853477,-1.467107,1.177355,7.517733,3.810207,-1.772248,5.117138,-8.721549,-4.310454,4.211030,3.351998,-6.014635,-7.409465,-7.093228,4.549869,6.062339,7.440711,3.830795,7.427350,-3.792008,-3.735020,1.852685,-1.426479,1.474258,-9.584217,1.333542,-3.168092,0.822782,7.259316,-1.798965,7.510178,-4.082834,0.224681,9.735551,-0.595704,-2.044540,1.792887,-3.280126,4.852395,-0.176820,3.821883,-2.289909,9.680991,-0.871673,0.694638,9.312164,-7.422517,2.370346,-5.823151,-7.518559,-7.039249,3.452412,2.393572,-0.059630,9.953198,-3.580211,-3.354816,-4.656107,-1.008372,0.705671,-2.995329,2.425717,-7.368534,-9.834567,0.783600,-6.670442,0.843711,8.208126,6.201235,-2.332089,-5.328945,6.732960,6.444821,-2.378936,-8.118991,1.388726,9.235143,7.182279,-8.820167,-5.305767,0.655733,5.526527,-8.710191,1.906075,-6.217776,2.079715,-2.303136,-6.774836,-1.185933,-0.102445,-7.042290,4.790241,-1.446822,9.782148,6.171782,-4.100094,-3.155159,0.908413,0.290306,4.379657,-8.897018,-5.051073,5.453418,-5.142210,-6.311440,2.956336,2.139356,-2.198513,0.393706,-6.601467,9.078499,6.476079,-7.140733,-4.717732,7.828686,-9.374272,-7.945005,7.358858,6.284565,-7.569552,-2.590637,-4.134550,-5.920991,1.127536,-7.326997,-8.798885,-0.641901,-4.535729,3.189773,-3.380196], dtype = "float64")#candidate|9767|(784,)|const|float64
call_9766 = func_2801_call(relay.reshape(const_9767.astype('float64'), [7, 14, 8]))
call_9768 = func_2801_call(relay.reshape(const_9767.astype('float64'), [7, 14, 8]))
func_4650_call = mod.get_global_var('func_4650')
func_4654_call = mutated_mod.get_global_var('func_4654')
const_9771 = relay.const([4,6,8,-1,-1,-1,5,4,4,-1,-2,3,9,-1,2,4,-7,-3,2,7,2,6,9,7,1,-10,-10,7,8,2,-3,7,1,-7,4,6,-2,-5,6,6,9,10,-10,9,-6,-5,9,1,2,3,-3,-3,-3,10,2,7,-2,3,6,8,-2,3,7,-1,5,6,-3,5,-9,5,10,3,9,-4,7,-10,-6,-10,8,-3,-5,3,10,-4,-2,10,-3,6,10,-8,1,-6,3,-2,-5,-4,-8,8,4,6,-3,9,-3,9,-4,-10,6,-4,10,-8,2,7,10,7,9,3,4,-9,7,-10,-4,-6,4,7,-5,-3,10,7,7,-7,1,-10,10,-2,7,7,-10,-4,-10,-10,-8,2,-5,2,-4,8,-7,-10,10,-5,4,10,7,-2,-5,-2,7,2,4,2,3,5,10,8,-9,-7,-6,-9,-9,10,3,-8,7,-10,4,-2,4,6,5,2,-6,7,5,5,-6,7,-8,-8,5,-7,-4,5,-6,-1,-4,5,1,-1,7,-10,10,2,4,-2,-10,9,10,1,6,9,5,1,-7,4,-8,-6,-6,6,-8,1,1,-3,6,9,4,-4,-3,6,-7,3,-7,-4,7,2,-10,5,-3,-2,-10,10,8,-4,-9,10,-3,1,-4,-10,7,-8,5,8,-10,4,1,8,10,-10,-4,-4,5,-6,10,-10,10,-4,1,-10,2,3,-9,-1,-4,-7,3,-5,9,-9,-9,-8,7,1,-3,9,8,7,2,8,10,4,9,4,-3,6,2,-9,5,-6,-5,-4,-6,8,-8,6,2,-3,-1,10,2,4,-2,-2,4,-5,-3,-2,9,-1,-6,7,8,2,9,-1,-8,4,9,6,5,4,2,9,6,8,-6,4,7,3,-8,6,1,-7,-5,8,6,-10,-10,8,8,1,-3,1,-3,-5,-9,8,-10,-4,5,6,8,10,4,5,5,9,-1,7,3,4,2,5,4,-8,-5,-2,8,-10,-9,-6,9,2,6,-3,-3,2,-8,1,10,10,-2,6,-4,6,-9,6,8,9,1,-2,8,4,-4,-5,2,8,10,8,10,5,-6,9,-3,9,-8,-10,6,-2,7,-5,-5,-7,-8,-10,8,-8,-8,-10,5,7,-10,-2,9,9,3,8,-8,4,-9,4,10,4,1,1,3,9,-4,-4,-7,10,-8,8,3,-1,8,8,7,8,-7,-4,-6,6,6,-5,-2,10,3,-5,2,7,-1,-8,10,-8,4,7,-5,-3,4,3,-3,5,1,-2,-8,-2], dtype = "uint32")#candidate|9771|(486,)|const|uint32
const_9772 = relay.const([-6.289730,0.900305,8.200275,-2.072541,-1.463604,9.967028,-5.831616,-2.979283,5.642193,-9.353335,2.139603,-7.047540,3.181487,1.184645,-4.585461,-5.125909,3.240228,-3.576666,-3.596452,-3.714585,-1.471216,2.458646,4.487663,0.716071,-1.502234,9.528564,-4.436337,1.808453,7.295461,1.365773,-1.502077,0.091021,8.466078,-0.433168,-3.905510,3.011918,-2.375847,6.522473,-1.903154,1.099628,-1.442775,-7.250393,-4.979997,0.263699,4.462101,-0.843747,-0.715528,2.503558,4.293005,9.966031,-1.176116,-7.936954,0.505476,4.129095,-9.740358,-3.950038,4.186798,1.394338,6.578233,5.376234,6.573711,-0.424979,7.068022,-4.248623,1.262005,-6.724579,-2.447403,-5.669985,4.366865,2.128634,-9.237053,-5.139592,9.011990,-9.817302,-6.585217,0.732898,4.298183,0.927396,2.803351,0.216376,-7.700237,1.808664,-7.712583,-9.271484,1.739915,7.805667,-5.846481,3.728184,7.890733,-9.975984,0.779485,-4.363618,0.837467,-1.658834,3.326660,8.556966,3.788441,-1.532235,-5.819576,0.640761,-1.569190,-9.452493,2.119183,-6.214468,8.328618,-0.284344,-8.364083,2.882127,2.748854,6.753933,8.608276,-2.955371,2.469851,-6.655521,5.880235,7.122440,-2.230417,-1.481359,2.956884,-2.357015,0.137256,4.080218,0.267108,8.674669,-0.853413,3.622287,7.074376,1.287617], dtype = "float64")#candidate|9772|(128,)|const|float64
call_9770 = relay.TupleGetItem(func_4650_call(relay.reshape(const_9771.astype('uint32'), [6, 9, 9]), relay.reshape(const_9771.astype('uint32'), [6, 9, 9]), relay.reshape(const_9772.astype('float64'), [128,]), ), 8)
call_9773 = relay.TupleGetItem(func_4654_call(relay.reshape(const_9771.astype('uint32'), [6, 9, 9]), relay.reshape(const_9771.astype('uint32'), [6, 9, 9]), relay.reshape(const_9772.astype('float64'), [128,]), ), 8)
func_7507_call = mod.get_global_var('func_7507')
func_7510_call = mutated_mod.get_global_var('func_7510')
var_9775 = relay.var("var_9775", dtype = "int64", shape = (10, 70))#candidate|9775|(10, 70)|var|int64
call_9774 = relay.TupleGetItem(func_7507_call(relay.reshape(var_9775.astype('int64'), [10, 5, 14]), relay.reshape(var_9775.astype('int64'), [10, 5, 14]), ), 2)
call_9776 = relay.TupleGetItem(func_7510_call(relay.reshape(var_9775.astype('int64'), [10, 5, 14]), relay.reshape(var_9775.astype('int64'), [10, 5, 14]), ), 2)
output = relay.Tuple([call_9748,call_9766,const_9767,call_9770,const_9771,const_9772,call_9774,var_9775,])
output2 = relay.Tuple([call_9749,call_9768,const_9767,call_9773,const_9771,const_9772,call_9776,var_9775,])
func_9777 = relay.Function([var_9775,], output)
mod['func_9777'] = func_9777
mod = relay.transform.InferType()(mod)
mutated_mod['func_9777'] = func_9777
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9778 = relay.var("var_9778", dtype = "int64", shape = (10, 70))#candidate|9778|(10, 70)|var|int64
func_9777_call = mutated_mod.get_global_var('func_9777')
call_9779 = func_9777_call(var_9778)
output = call_9779
func_9780 = relay.Function([var_9778], output)
mutated_mod['func_9780'] = func_9780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9268_call = mod.get_global_var('func_9268')
func_9269_call = mutated_mod.get_global_var('func_9269')
call_9793 = relay.TupleGetItem(func_9268_call(), 0)
call_9794 = relay.TupleGetItem(func_9269_call(), 0)
uop_9816 = relay.sqrt(call_9793.astype('float32')) # shape=(11, 11, 10)
uop_9818 = relay.sqrt(call_9794.astype('float32')) # shape=(11, 11, 10)
output = relay.Tuple([uop_9816,])
output2 = relay.Tuple([uop_9818,])
func_9821 = relay.Function([], output)
mod['func_9821'] = func_9821
mod = relay.transform.InferType()(mod)
mutated_mod['func_9821'] = func_9821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9821_call = mutated_mod.get_global_var('func_9821')
call_9822 = func_9821_call()
output = call_9822
func_9823 = relay.Function([], output)
mutated_mod['func_9823'] = func_9823
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9857 = relay.var("var_9857", dtype = "float64", shape = (1, 10, 5))#candidate|9857|(1, 10, 5)|var|float64
uop_9858 = relay.sqrt(var_9857.astype('float64')) # shape=(1, 10, 5)
output = uop_9858
output2 = uop_9858
func_9867 = relay.Function([var_9857,], output)
mod['func_9867'] = func_9867
mod = relay.transform.InferType()(mod)
var_9868 = relay.var("var_9868", dtype = "float64", shape = (1, 10, 5))#candidate|9868|(1, 10, 5)|var|float64
output = func_9867(var_9868)
func_9869 = relay.Function([var_9868], output)
mutated_mod['func_9869'] = func_9869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9439_call = mod.get_global_var('func_9439')
func_9440_call = mutated_mod.get_global_var('func_9440')
call_9917 = relay.TupleGetItem(func_9439_call(), 0)
call_9918 = relay.TupleGetItem(func_9440_call(), 0)
output = call_9917
output2 = call_9918
func_9946 = relay.Function([], output)
mod['func_9946'] = func_9946
mod = relay.transform.InferType()(mod)
output = func_9946()
func_9947 = relay.Function([], output)
mutated_mod['func_9947'] = func_9947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9411_call = mod.get_global_var('func_9411')
func_9413_call = mutated_mod.get_global_var('func_9413')
call_9966 = func_9411_call()
call_9967 = func_9411_call()
output = relay.Tuple([call_9966,])
output2 = relay.Tuple([call_9967,])
func_9971 = relay.Function([], output)
mod['func_9971'] = func_9971
mod = relay.transform.InferType()(mod)
mutated_mod['func_9971'] = func_9971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9971_call = mutated_mod.get_global_var('func_9971')
call_9972 = func_9971_call()
output = call_9972
func_9973 = relay.Function([], output)
mutated_mod['func_9973'] = func_9973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9946_call = mod.get_global_var('func_9946')
func_9947_call = mutated_mod.get_global_var('func_9947')
call_9985 = func_9946_call()
call_9986 = func_9946_call()
output = call_9985
output2 = call_9986
func_10012 = relay.Function([], output)
mod['func_10012'] = func_10012
mod = relay.transform.InferType()(mod)
mutated_mod['func_10012'] = func_10012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10012_call = mutated_mod.get_global_var('func_10012')
call_10013 = func_10012_call()
output = call_10013
func_10014 = relay.Function([], output)
mutated_mod['func_10014'] = func_10014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9946_call = mod.get_global_var('func_9946')
func_9947_call = mutated_mod.get_global_var('func_9947')
call_10057 = func_9946_call()
call_10058 = func_9946_call()
func_6704_call = mod.get_global_var('func_6704')
func_6708_call = mutated_mod.get_global_var('func_6708')
var_10077 = relay.var("var_10077", dtype = "float32", shape = (900,))#candidate|10077|(900,)|var|float32
const_10078 = relay.const([-10,1,-7,7,-6,8,-10,1,-4,3,-6,7,-5,2,-4,3,6,-10,-8,-2,-7,8,5,-3,-6,4,3,2,4,1,-1,-4,6,-9,-10,-9,-3,-4,10,9,4,-10,5,-4,5,8,10,2,-5,-2,-4,-2,2,5,-5,-8,8,-7,1,3,-7,-4,3,4,-9,-3,-9,-1,-4,1,-3,-8,8,-7,7,4,10,-2,6,-3,2,1,2,2,-8,-5,3,-3,9,9,9,1,-3,-4,-8,-5,4,2,8,2,-9,7,8,-5,10,-4,-7,-8,-7,1,-1,6,2,1,-3,6,-8,4,-4,5,-2,3,-4,-4,-5,-4,1,2,-9,-5,-4,2,3,9,6,-1,1,-2,5,5,10,6,1,-7,3,-3,-3,10,-3,-5,-1,1,-2,-10,-10,-7,-6,4,-5,10,-4,-4,7,5,2,-1,8,-6,5,-7,1,-5,-1,6,9,1,-8,10,-10,5,7,-5,-8,-5,-7,7,-8,-6,-3,-4,-8,-6,1,-2,-3,3,3,-6,10,-3,6,6,-4,5,-7,-10,4,-3], dtype = "uint64")#candidate|10078|(208,)|const|uint64
call_10076 = relay.TupleGetItem(func_6704_call(relay.reshape(var_10077.astype('float32'), [6, 15, 10]), relay.reshape(const_10078.astype('uint64'), [208,]), ), 3)
call_10079 = relay.TupleGetItem(func_6708_call(relay.reshape(var_10077.astype('float32'), [6, 15, 10]), relay.reshape(const_10078.astype('uint64'), [208,]), ), 3)
output = relay.Tuple([call_10057,call_10076,var_10077,const_10078,])
output2 = relay.Tuple([call_10058,call_10079,var_10077,const_10078,])
func_10084 = relay.Function([var_10077,], output)
mod['func_10084'] = func_10084
mod = relay.transform.InferType()(mod)
mutated_mod['func_10084'] = func_10084
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10085 = relay.var("var_10085", dtype = "float32", shape = (900,))#candidate|10085|(900,)|var|float32
func_10084_call = mutated_mod.get_global_var('func_10084')
call_10086 = func_10084_call(var_10085)
output = call_10086
func_10087 = relay.Function([var_10085], output)
mutated_mod['func_10087'] = func_10087
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10140 = relay.constdtype = "float64")#candidate|10140|(13, 14, 13)|const|float64
uop_10141 = relay.acos(const_10140.astype('float64')) # shape=(13, 14, 13)
output = uop_10141
output2 = uop_10141
func_10147 = relay.Function([], output)
mod['func_10147'] = func_10147
mod = relay.transform.InferType()(mod)
output = func_10147()
func_10148 = relay.Function([], output)
mutated_mod['func_10148'] = func_10148
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10164 = relay.var("var_10164", dtype = "int16", shape = (7, 4, 13))#candidate|10164|(7, 4, 13)|var|int16
var_10165 = relay.var("var_10165", dtype = "int16", shape = (7, 4, 13))#candidate|10165|(7, 4, 13)|var|int16
bop_10166 = relay.bitwise_and(var_10164.astype('int16'), relay.reshape(var_10165.astype('int16'), relay.shape_of(var_10164))) # shape=(7, 4, 13)
uop_10169 = relay.sin(var_10164.astype('float64')) # shape=(7, 4, 13)
func_8366_call = mod.get_global_var('func_8366')
func_8369_call = mutated_mod.get_global_var('func_8369')
const_10172 = relay.const([-1.543448,-1.043262,6.435932,8.493927,-5.188247,-1.918696,-8.543034,-5.670803,-3.197273,-4.142933,-5.835788,6.392551,-0.454303,-3.273592,1.036007,-1.747686,5.482319,8.845271,7.896867,-0.934783,-7.378985,4.559444,-6.537373,-6.531167,-1.117521,8.728529,-7.121426,-3.047100,-1.078591,-1.024414,-6.981728,2.246007,9.379644,1.124271,4.996640,4.275897,-8.371584,3.006113,-2.324838,6.663274,-8.788666,5.058684,-9.528184,1.600823,-7.210314,-7.005093,-6.297940,-7.491112,-1.823478,9.522688,2.217240,0.141270,0.502412,-9.099270,-4.268718,-9.015045,7.286610,6.907144,2.688960,-9.226199,-9.672750,5.495073,-9.387080,-8.065099,5.627148,4.962574,-6.804106,-1.259985,3.026734,3.859822,7.442908,-7.597197,0.494865,-5.470522,-1.443527,-8.417888,6.002152,4.810022,6.967444,-5.526461,9.824091,2.465169,-5.906699,5.877854,8.794413,6.891932,3.488019,8.865496,9.521443,4.827018,-6.624444,-4.777142,1.912259,9.551286,3.609448,5.210705,9.409390,0.406444,9.782507,0.629051,4.722299,1.283383,-8.668656,-1.039215,-8.909045,0.998936,7.383125,-4.088059,-1.224851,-0.711250,9.748590,-5.199845,-9.242621,-6.234757,0.953147,-2.607015,-6.011956,4.617051,-7.071174,-0.095555,4.668149,9.219619,4.327245,-8.259234,-3.191614,1.974107,-2.787901,-7.730010,0.289689,-7.748261,7.556261,-0.473658,-3.158716,-6.755920,2.787680,2.200625,6.512284,8.207969,-7.832962,-5.353007,-7.744940,-1.777780,5.364600,-9.270539,3.103579,3.445382,1.315211,-9.307171,4.045191,8.932236,8.450510,-9.394380,7.453977,6.959031,9.461753,-4.141999,-6.201348,-1.165994,-6.591870,-4.187380,-4.647849,-4.620576,6.020348,2.782026,0.940974,5.734681,-0.089238,4.389517,-8.950279,0.220902,-3.795232,9.955360,7.646868,1.208031,-4.357719,0.875578,0.365396,9.021809,2.433074,-7.570821,5.142715,1.631401,5.155714,1.592792,-6.876289,4.390482,6.511645,3.367981,-3.590910,-3.893357,-9.644381,5.106752,6.040159,0.538418,-6.164618,7.049108,3.140522,0.017012,-5.320514,-2.055719,5.658351,1.738842,4.831405,3.027411,3.441647,-9.864802,-5.953002,-0.180064,-4.122577,-8.409251,2.981781,-0.240692,-3.140920,9.953747,0.766921,8.351002,6.984911,6.811604,3.513213,-8.367319,-0.911812,1.237455,3.534752,-1.642161,5.605573,-4.459063,-9.186031,8.063277,-2.919021,3.054482,8.549537,-2.916598,-2.798793,9.211082,2.923100,-7.148927,-8.885303,-0.750252,5.769916,-7.574778,4.534482,5.502968,0.563756,-8.073658,0.332284,6.549116,1.433722,4.153551,1.057122,5.366226,9.707565,-2.069427,4.394407,0.928791,8.277259,3.366559,-6.662706,8.631512,-3.422304,3.456134,4.215609,-1.852433,-6.938445,-7.532948,-0.701289,-4.064363,-6.598558,5.081336,4.961775,-6.116954,-3.362734,5.595650,2.409959,2.383409,7.683220,3.007823,3.328617,4.762273,-2.100749,-6.748479,3.648639,-0.384663,8.106930,-9.035805,-9.225948,-1.956103,-3.810132,6.325090,-9.731067,8.367341,8.088229,-3.744212,-2.461346,-8.711898,-2.444554,5.397273,-7.134937,7.155867,-0.499697,-4.396817,-6.179760,7.937216,5.694315,-5.749563,0.481562,7.224292,6.121315,-2.350162,4.569124,-4.276257,6.236673,1.528646,2.749403,4.395246,-7.185864,-9.414393,-3.371319,-3.921950,-7.705137,6.659435,-0.426721,-1.117285,0.740288,-1.031735,5.960717,-5.262524,-0.842246,-0.834765,-9.897924,1.337148,-4.521178,3.189587,-1.812684,-1.618186,3.092997,-5.335066,-5.731639,7.098194,5.177817,-9.092582,-7.199934,0.067682,-2.569907,-9.101544,-3.717989,-9.171025,6.734219,7.401693,7.690261,-6.464582,-9.964620,-1.444026,9.237091,-7.052439,2.619931,8.799389,8.369700,7.117802,6.427319,-6.536657,4.530195,-5.857028,-0.934330,-0.243520,3.412498,-9.686585,-3.278622,-5.919103,-6.958549,-8.793598,8.588579,3.714556,2.798866,-7.371945,-4.940079,-5.495330,5.745375,-1.553713,-8.251907,3.121513,6.565294,3.358851,3.903620,1.515878,-2.041934,5.073074,-2.856627,-3.095825,9.951911,-9.129255,8.188249,-7.167590,2.410360,5.201000,8.863662,4.855658,-5.075614,-9.103619,-1.279504,-5.513311,-1.342480,-7.319080,-3.372712,-7.045843,7.419082,-0.894611,3.943240,-8.461302,7.761837,-2.891242,-8.006466,-1.667620,2.639823,-4.737640,-1.096834,-3.402726,2.769815,4.128708,-8.738927,0.032452,-4.812273,-0.252161,-2.300348,-0.564420,-5.895246,5.817445,-9.353020,-7.440620,-3.571826,2.779565,0.094031,1.840389,-7.411822,-2.481132,-3.073389,7.685145,3.908686,-3.133963,-2.357472,-2.399886,-6.041706,3.569201,0.789296,-6.715840,5.755522,-2.945470,5.936936,2.223316,1.782728,-8.464086,8.958153,-8.380039,-2.215627,9.885886,-3.054125,8.752283,5.174111,0.132159,-9.685948,-9.176363,-6.171721,-3.164389,5.809258,8.425431,-0.782610,-6.853819,5.363182,-4.194918,-1.824523,-2.587894,5.374090,3.373478,5.660060,4.537587,-3.430702,1.211781,3.031120,-3.266011,2.573319,9.299751,-5.319392,8.674347,-6.278224,9.364607,5.321998,7.033378,8.925160,9.717777,-2.743453,4.160417,4.326839,3.839529,-2.024795,1.272282,2.740822,1.662912,-0.676667,-9.671336,2.879790,0.364139,5.112840,7.885533,8.379353,0.790663,-5.000237,-2.367975,4.668629,-2.043334,-6.510408,7.230073,-2.777842,1.477879,-7.328469,6.904554,4.664331,-8.537041,-9.897591,9.222479,4.359272,6.661334,4.449226,5.339026,4.081632,1.241882,1.071682,9.317900,9.592711,-3.432405,-8.197546,8.665790,2.278898,7.927955,-0.741612,0.131218,1.174923,9.677680,1.728162,-0.873558,-3.452292,-3.048728,-6.192711,4.405161,-9.928700,8.878643,7.779041,-2.982625,2.197124,-5.756003,-3.802793,5.585834,-5.226899,5.357549,4.497602,-9.546039,5.522754,2.053633,2.230261,2.910369,-7.346767,-2.219852,-9.841377,-1.148758,-9.383420,1.949925,3.800042,7.649453,5.950143,9.527902,-5.554021,-6.213279,-5.971879,1.519637,-1.416317,4.024450,-9.383490,-4.531292,-9.828269,-9.912760,-5.691228,4.050717,-8.347272,7.302548,5.567601,-8.678476,3.137501,6.202503,-6.498813,4.242500,-4.105100,1.026378,-0.076355,5.001231,0.014054,-9.034907,9.265055,3.107728,-8.787054,7.165619,0.430009,4.569753,-8.658995,-2.857786,7.019295,0.374705,-6.216906], dtype = "float64")#candidate|10172|(605,)|const|float64
call_10171 = relay.TupleGetItem(func_8366_call(relay.reshape(const_10172.astype('float64'), [11, 5, 11]), relay.reshape(const_10172.astype('float64'), [11, 5, 11]), ), 0)
call_10173 = relay.TupleGetItem(func_8369_call(relay.reshape(const_10172.astype('float64'), [11, 5, 11]), relay.reshape(const_10172.astype('float64'), [11, 5, 11]), ), 0)
output = relay.Tuple([bop_10166,uop_10169,call_10171,const_10172,])
output2 = relay.Tuple([bop_10166,uop_10169,call_10173,const_10172,])
func_10178 = relay.Function([var_10164,var_10165,], output)
mod['func_10178'] = func_10178
mod = relay.transform.InferType()(mod)
var_10179 = relay.var("var_10179", dtype = "int16", shape = (7, 4, 13))#candidate|10179|(7, 4, 13)|var|int16
var_10180 = relay.var("var_10180", dtype = "int16", shape = (7, 4, 13))#candidate|10180|(7, 4, 13)|var|int16
output = func_10178(var_10179,var_10180,)
func_10181 = relay.Function([var_10179,var_10180,], output)
mutated_mod['func_10181'] = func_10181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9268_call = mod.get_global_var('func_9268')
func_9269_call = mutated_mod.get_global_var('func_9269')
call_10206 = relay.TupleGetItem(func_9268_call(), 0)
call_10207 = relay.TupleGetItem(func_9269_call(), 0)
uop_10239 = relay.atanh(call_10206.astype('float32')) # shape=(11, 11, 10)
uop_10241 = relay.atanh(call_10207.astype('float32')) # shape=(11, 11, 10)
output = uop_10239
output2 = uop_10241
func_10250 = relay.Function([], output)
mod['func_10250'] = func_10250
mod = relay.transform.InferType()(mod)
output = func_10250()
func_10251 = relay.Function([], output)
mutated_mod['func_10251'] = func_10251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9247_call = mod.get_global_var('func_9247')
func_9248_call = mutated_mod.get_global_var('func_9248')
call_10252 = func_9247_call()
call_10253 = func_9247_call()
func_8166_call = mod.get_global_var('func_8166')
func_8169_call = mutated_mod.get_global_var('func_8169')
const_10255 = relay.const([9,2,-2,-7,7,2,-5,-2,-7,-3,2,-10,-3,1,7,-3,-3,-4,-2,-4,10,-6,-4,-10,-7,1,-2,-10,-9,-2,-6,5,-10,6,1,8,7,-6,4,3,10,1,-7,6,3,-4,-3,-10,-7,-4,6,10,7,8,2,3,7,4,6,-10,10,-7,3,7,-4,8,4,-5,2,2,-5,5,-10,6,1,-4,1,5,1,-6,4,8,2,10,-7,1,9,3,-7,5,6,8,-3,3,-6,10,3,-9,-1,2,-3,-9,-8,-2,-3,2,6,-9,4,2,1,1,2,-10,3,3,4,10,6,7,-1,-1,9,-8,1,5,4,5,-10,-10,-6,8,-5,-2,-2,-2,-7,10,2,1,7,-5,-5,-8,-5,7,9,3,-4,7,-3,-1,-2,8,-10,-7,-6,10,1,6,6,9,-9,-9,7,-10,-5,-1,-1,-10,8,8,8,-5,5,4,5,7,6,-6,4,-1,7,5,-3,-1,-2,6,6,-8,-3,4,-10,1,-7,-6,4,-1,3,1,2,-8,-10,6,-6,-8,-1,-8,-3,4,5,-2,-9,-2,-10,-10,-6,9,-3,-3,-1,7,-5,-10,3,10,-6,-8,7,9,4,4,-8,-9,7,-9,5,10,-2,-2,-6,2,9,9,2,5,-1,-10,-1,-9,1,9,-5,-9,9,1,-4,-9,7,-8,10,-6,4,10,-5,4,-9,3,1,-3,3,-8,-1,1,7,-6,5,-5,-10,-4,6,-2,-2,10,-8,4,9,10,8,-7,-1,1,-8,6,-3,-4,10,-5,4,-6,10,-4,1,-2,-5,6,-3,3,3,-1,2,7,-5,6,10,2,3,3,-9,-7,-4,-10,9,-10,7,-1,7,2,-2,1,-4,4,-8,3,9,-2,2,10,9,4,-9,4,-4,-10,-9,-8,6,2,6,1,-7,8,7,1,-10,-10,1,-7,-4,-3,1,-6,3,9,5,-7,-3,4,-5,-5,-1,5,1,-8,10,8,3,8,-3,-5,9,1,-9,1,9,10,-1,3,-7,-6,4,-10,-7,-5,5,9,4,-5,6,-10,2,-6,-4,-6,1,2,6,-6,-10,5,1,-1,-7,-9,-4,9,-8,8,3,-5,-6,4,8,-6,9,6,-9,-6,-5,9,-1,-5,3,-10,-9,-3,-3,8,-6,-2,8,-6,4,5,-4,-9,3,5,7,-4,-2,1,3,9,-6,4,-10,2,2,-5,2,-5,-6,-2,-6,1,-3,-5,4,6,6,3,-2,-10,-4,5,9,-2,-8,9], dtype = "int16")#candidate|10255|(480,)|const|int16
call_10254 = relay.TupleGetItem(func_8166_call(relay.reshape(const_10255.astype('int16'), [16, 3, 10])), 3)
call_10256 = relay.TupleGetItem(func_8169_call(relay.reshape(const_10255.astype('int16'), [16, 3, 10])), 3)
output = relay.Tuple([call_10252,call_10254,const_10255,])
output2 = relay.Tuple([call_10253,call_10256,const_10255,])
func_10262 = relay.Function([], output)
mod['func_10262'] = func_10262
mod = relay.transform.InferType()(mod)
output = func_10262()
func_10263 = relay.Function([], output)
mutated_mod['func_10263'] = func_10263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9247_call = mod.get_global_var('func_9247')
func_9248_call = mutated_mod.get_global_var('func_9248')
call_10270 = func_9247_call()
call_10271 = func_9247_call()
uop_10272 = relay.cos(call_10270.astype('float32')) # shape=(2, 10, 12)
uop_10274 = relay.cos(call_10271.astype('float32')) # shape=(2, 10, 12)
output = uop_10272
output2 = uop_10274
func_10281 = relay.Function([], output)
mod['func_10281'] = func_10281
mod = relay.transform.InferType()(mod)
output = func_10281()
func_10282 = relay.Function([], output)
mutated_mod['func_10282'] = func_10282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10012_call = mod.get_global_var('func_10012')
func_10014_call = mutated_mod.get_global_var('func_10014')
call_10348 = func_10012_call()
call_10349 = func_10012_call()
output = call_10348
output2 = call_10349
func_10354 = relay.Function([], output)
mod['func_10354'] = func_10354
mod = relay.transform.InferType()(mod)
mutated_mod['func_10354'] = func_10354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10354_call = mutated_mod.get_global_var('func_10354')
call_10355 = func_10354_call()
output = call_10355
func_10356 = relay.Function([], output)
mutated_mod['func_10356'] = func_10356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10250_call = mod.get_global_var('func_10250')
func_10251_call = mutated_mod.get_global_var('func_10251')
call_10367 = func_10250_call()
call_10368 = func_10250_call()
output = relay.Tuple([call_10367,])
output2 = relay.Tuple([call_10368,])
func_10373 = relay.Function([], output)
mod['func_10373'] = func_10373
mod = relay.transform.InferType()(mod)
output = func_10373()
func_10374 = relay.Function([], output)
mutated_mod['func_10374'] = func_10374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9688_call = mod.get_global_var('func_9688')
func_9690_call = mutated_mod.get_global_var('func_9690')
call_10385 = relay.TupleGetItem(func_9688_call(), 0)
call_10386 = relay.TupleGetItem(func_9690_call(), 0)
func_683_call = mod.get_global_var('func_683')
func_686_call = mutated_mod.get_global_var('func_686')
const_10390 = relay.const([[4],[6],[8],[3],[-8],[-5],[-6],[-6],[-1],[2],[-8],[-9],[3],[9],[4],[5],[7],[9],[5],[-1],[7],[-10],[7],[7],[8],[5],[4],[-4],[9],[-10],[-7],[9],[4],[9],[-2],[-2],[6],[-1],[7],[-2],[-7],[-4],[-10],[9],[-2],[-2],[-4],[4],[1],[-7],[4],[1],[3],[-5],[-9],[-7],[4],[7],[-10],[5],[5],[-2],[10],[-7],[9],[-5],[5],[-5],[9],[-9],[6],[5],[7],[-6],[-8],[10],[8],[-2],[-8],[-9],[-5],[2],[-2],[10],[-6],[8],[-7],[2],[4],[-1],[-8],[-6],[3],[-5],[9],[9],[-10],[-5],[9],[-4],[6],[-7],[-4],[7],[6],[2],[10],[-8],[-8],[-5],[-9],[-2],[-5],[-1],[-2],[-9],[6],[1],[4],[10],[7],[2],[2],[2],[5],[8],[2],[-10],[4],[-1],[-4],[-5],[6],[-2],[4],[-10],[4],[10],[-2],[-5],[-10],[10],[2],[8],[1],[2],[-2],[8],[3],[-8],[-2],[1],[10],[3],[4],[10],[2],[5],[-8],[-9],[2],[6],[10],[-4],[4],[1],[-10],[-3],[4],[2],[-3],[-3],[10],[6],[-10],[-9],[-8],[-8],[9],[-1],[-4],[10],[-7],[-4],[-8],[-2],[-9],[-3],[-10],[9],[5],[4],[-2],[-2],[-6],[7],[-9],[4],[1],[-10],[2],[-7],[4],[10],[-2],[6],[6],[1],[-6],[-3],[9],[-2],[9],[6],[-2],[7],[6],[-5],[-6],[6],[5],[-5],[4],[2],[-2],[2],[-5],[10],[8],[1],[10],[-6],[-4],[7],[-7],[7],[-7],[-4],[2],[-10],[-9],[4],[9],[-9],[9],[9],[-10],[6],[-5],[3],[7],[3],[-6],[-4],[-10],[-1],[-1],[6],[-8],[-6],[-5],[-6],[9],[8],[-8],[3],[4],[-9],[2],[-7],[10],[-5],[2],[10],[4],[-8],[-1],[3],[-10],[-2],[-5],[4],[-3],[-8],[-6],[1],[-2],[6],[6],[7],[-2],[-1],[1],[2],[7],[10],[1],[1],[-4],[-2],[3],[-8],[-8],[10],[-2],[7],[2],[-6],[-4],[-6],[4],[-4],[7],[10],[-4],[4],[6],[4],[-8],[-1],[1],[-4],[-6],[10],[9],[-2],[2],[-8],[1],[2],[2],[3],[-8],[3],[3],[-6],[-2],[1],[-1],[7],[-7],[-4],[4],[9],[2],[3],[9],[-4],[-4],[3],[-1],[-2],[-9],[10],[-4],[-9],[7],[-3],[5],[-8],[-5],[-3],[-6],[-1],[3],[8],[3],[4],[4],[2],[-10],[-2],[-6],[8],[9],[10],[-9],[-8],[1],[-7],[-3],[8],[-6],[-10]], dtype = "int16")#candidate|10390|(384, 1)|const|int16
call_10389 = relay.TupleGetItem(func_683_call(relay.reshape(const_10390.astype('int16'), [4, 12, 8]), relay.reshape(const_10390.astype('int16'), [4, 12, 8]), ), 3)
call_10391 = relay.TupleGetItem(func_686_call(relay.reshape(const_10390.astype('int16'), [4, 12, 8]), relay.reshape(const_10390.astype('int16'), [4, 12, 8]), ), 3)
func_9777_call = mod.get_global_var('func_9777')
func_9780_call = mutated_mod.get_global_var('func_9780')
const_10394 = relay.const([6,9,10,1,4,7,-6,-6,-6,7,-3,-9,9,-7,-8,7,4,1,5,2,-4,9,-9,6,-5,3,-6,-5,10,1,-8,-3,4,6,6,7,9,3,8,3,-2,3,1,-7,10,10,-4,-2,-6,6,-10,-5,-8,5,8,1,-4,-10,-4,7,-4,-6,9,7,-10,-9,-7,-7,3,-2,2,10,10,3,8,-10,7,3,5,1,-4,-4,-5,7,-7,-6,2,6,-10,10,9,2,-7,1,-6,7,-1,10,-6,-3,-6,1,-6,2,8,-4,3,4,-3,-1,-5,9,-1,-3,6,7,4,-9,-7,-4,4,-1,-6,-6,9,-7,6,-2,3,-2,-1,10,-9,6,4,10,-10,5,-5,4,-8,8,-5,1,-8,-8,3,6,10,9,-6,10,-1,1,-5,2,5,5,2,9,-10,1,-6,-7,-3,-8,7,-4,-4,4,9,3,8,6,-6,10,-4,1,-1,6,-7,2,4,-2,-8,-8,-2,3,-10,10,3,-2,-2,-7,-1,7,-9,2,5,-2,8,-2,-2,10,3,8,9,-5,2,6,-6,1,-3,9,-5,-1,-4,5,7,9,-7,-9,6,-9,-7,2,-9,-1,4,-2,-2,5,-5,3,8,-3,-9,-1,-8,3,-7,-3,8,1,-3,-2,-6,-4,-9,-5,8,-2,-2,-4,-5,-8,-2,1,4,-1,-4,5,-1,-1,5,-7,-5,2,4,-10,2,3,8,3,5,2,-8,9,5,2,-7,-4,2,2,3,6,9,-9,-3,-10,10,-10,-8,-10,1,2,2,2,2,-9,3,10,7,10,6,10,1,-4,9,9,-7,1,9,-3,-7,-7,10,-4,-1,-6,-2,2,-6,-2,10,6,4,-9,9,5,-4,8,-10,-10,-7,-7,-3,-4,-5,4,10,5,5,9,5,4,6,5,4,-8,-4,-2,6,-7,-2,8,-1,8,-8,4,8,-7,9,2,-9,-6,7,-3,-4,4,1,10,7,-10,2,2,-1,6,-1,3,9,5,7,-9,-8,7,-4,-1,-4,10,6,-7,1,7,2,-3,9,-8,-8,5,9,5,-10,8,1,9,-2,-6,-2,6,-3,6,1,-6,3,6,7,7,10,-1,-5,-10,-9,-9,-7,4,6,-2,7,5,-9,-4,-2,4,-8,5,-9,8,9,-10,2,8,5,-4,-6,-2,8,3,-7,-4,-6,-6,-1,-3,-4,9,-7,4,7,-4,-5,-9,-2,-4,1,-4,4,2,-6,8,-7,6,5,8,7,4,10,-6,-8,-1,-8,-8,5,-2,6,-1,-10,-9,-6,-7,-10,-7,-6,5,5,7,-1,8,6,8,-1,-6,-5,-5,1,6,-3,-4,-5,-5,4,-4,8,2,-3,7,-1,-4,-8,-1,-1,2,9,-4,-4,-5,-2,3,4,-5,6,-10,7,-5,-2,-5,3,-8,-3,7,1,4,-4,5,-2,2,6,-9,9,-7,-2,6,8,-8,-4,8,10,3,1,-9,-10,-5,6,-9,-7,5,-7,-5,-3,-7,1,-6,-1,2,-7,-7,3,-3,-7,3,7,3,9,10,-4,-10,-2,3,-5,5,7,1,5,8,-6,-6,-9,10,9,-9,-5,-8,-9,-8,8,-8,-7,-5,-3,-4,8,-6,9,4,-4,-2,5,-3,1,-9,-7,3,4,-8,-5,-7,-2,-9,-7,-10,-7,7,4,-6,-3,3,-2,6,6,-4,-6,-3,2,-1,4,-9,6,3,-7,-5,4,4,4,-1,-6,1,-5,-2,6,-7,7,-1,3,-2,-3,-3,-7,-2,-9,-3,-9,6,-1,-3,2,-9,-6,-1,-4,-9,4,-3,-9,1,-1,2,9,6,-8,6,8,8,-6,5,6,9,8,-10,-1,4], dtype = "int64")#candidate|10394|(700,)|const|int64
call_10393 = relay.TupleGetItem(func_9777_call(relay.reshape(const_10394.astype('int64'), [10, 70])), 3)
call_10395 = relay.TupleGetItem(func_9780_call(relay.reshape(const_10394.astype('int64'), [10, 70])), 3)
func_683_call = mod.get_global_var('func_683')
func_686_call = mutated_mod.get_global_var('func_686')
call_10400 = relay.TupleGetItem(func_683_call(relay.reshape(const_10390.astype('int16'), [4, 12, 8]), relay.reshape(const_10390.astype('int16'), [4, 12, 8]), ), 0)
call_10401 = relay.TupleGetItem(func_686_call(relay.reshape(const_10390.astype('int16'), [4, 12, 8]), relay.reshape(const_10390.astype('int16'), [4, 12, 8]), ), 0)
output = relay.Tuple([call_10385,call_10389,const_10390,call_10393,const_10394,call_10400,])
output2 = relay.Tuple([call_10386,call_10391,const_10390,call_10395,const_10394,call_10401,])
func_10402 = relay.Function([], output)
mod['func_10402'] = func_10402
mod = relay.transform.InferType()(mod)
mutated_mod['func_10402'] = func_10402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10402_call = mutated_mod.get_global_var('func_10402')
call_10403 = func_10402_call()
output = call_10403
func_10404 = relay.Function([], output)
mutated_mod['func_10404'] = func_10404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10402_call = mod.get_global_var('func_10402')
func_10404_call = mutated_mod.get_global_var('func_10404')
call_10431 = relay.TupleGetItem(func_10402_call(), 5)
call_10432 = relay.TupleGetItem(func_10404_call(), 5)
func_9389_call = mod.get_global_var('func_9389')
func_9391_call = mutated_mod.get_global_var('func_9391')
call_10460 = func_9389_call()
call_10461 = func_9389_call()
func_3112_call = mod.get_global_var('func_3112')
func_3114_call = mutated_mod.get_global_var('func_3114')
const_10465 = relay.const([-9,6,-2,-5,9,3,-7,-6,1,9,-10,-9,8,-9,2,-8,-9,-2,-3,9,4,1,6,-4,-9,-8,-9,5,-8,6,-2,-4,9,5,6,-5,-5,-2,6,-9,-6,3,-3,-5,-3,-2,3,10,-5,5,-9,10,7,-7,7,-7,3,10,-8,-7,-6,-10,9,5,4,-3,-10,-9,6,-9,1,8,6,10,-5,-7,-9,1,6,2,-6,5,2,5,1,1,-2,6,8,-3,6,-3,-6,5,-2,4,-5,-6,-6,-5,4,6,6,5,-1,-7,6,-6,-6,-6,9,8,2,3,6,-2,-5,-6,4,4,-10,6,1,-10,-2,-7,8,-9,3,8,-9,10,1,-4,9,-2,-9,5,-8,-8,3,3,3,2,3,3,-10,-7,-9,6,1,5,6,-9,-8,9,2,-3,-6,-1,6,-3,7,9,-1,1,5,-1,9,9,8,-9,10,7,8,6,-10,-2,7,2,-6,-9,1,2,-1,-7,7,-9,-9,-4,2,3,-7,10,4,-3,7,9,-1,9,-2,-8,4,9,-4,10,-2,-2,8,6,-4,-10,8,-8,-2,10,-5,6,-8,3,-7,9,-8,2,-5,-7,7,9,-9,-4,-5,-9,-5,-10,-2,-4,-7,-10,-6,-10,3,9,5,5,6,-8,-4,-1,-4,1,-5,-4,-9,-7,9,5,5,9,-3,-7,-4,10,-4,8,-4,-3,-5,1,-3,9,6,-3,-8,-4,-7,-2,7,-2,6,10,-10,-9,2,-6,-10,7,9,-8,4,-1,-4,5,-4,-4,-6,10,-1,-8,-1,-8,-1,7,-8,-8,9,-5,-2,-6,-7,7,-9,9,8,-3,-2,-9,7,-3,-1,9,-2,-2,-7,1,1,7,-4,7,4,10,10,-10,-5,4,-6,5,7,2,-6,-8,-10,-6,-1,-8,-5,-2,-10,-4,7,-1,10,3,-3,-3,-8,7,-8,-2,-10,-6,9,-9,-2,3,10,-6,-8,-2,-6,2,-8,9,4,6,2,-8,-2,9,10,5,6,4,10,4,3,-9,-7,-8,2,6,6,6,-2,1,-6,4,8,5,6,-6,-7,9,-5,-6,8,10,7,1,-10,-1,-9,-10,5,-6,7,9,9,2,4,9,-2,-6,-7,-8,1,7,6,-8,-5,1,6,-7,-5,-9,7,-1,-8,-7,7,-4,-5,-8,-8,-2,-9,-4,3,2,-2,-7,10,7,-8,-3,-2,-3,9,9,-6,-10,-6,-3,-10,6,-7,-1,2,5,6,7,6,-6,9,-2,-8,1,-9,-10,-1,-10,-1,5,3,-5,9,-7,-10,-10,10,-6,-6,-2,-3,-5,9,5,10,-3,-2,-10,-10,8,9,1], dtype = "int8")#candidate|10465|(504,)|const|int8
call_10464 = func_3112_call(relay.reshape(const_10465.astype('int8'), [4, 14, 9]))
call_10466 = func_3112_call(relay.reshape(const_10465.astype('int8'), [4, 14, 9]))
output = relay.Tuple([call_10431,call_10460,call_10464,const_10465,])
output2 = relay.Tuple([call_10432,call_10461,call_10466,const_10465,])
func_10469 = relay.Function([], output)
mod['func_10469'] = func_10469
mod = relay.transform.InferType()(mod)
output = func_10469()
func_10470 = relay.Function([], output)
mutated_mod['func_10470'] = func_10470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9946_call = mod.get_global_var('func_9946')
func_9947_call = mutated_mod.get_global_var('func_9947')
call_10503 = func_9946_call()
call_10504 = func_9946_call()
output = call_10503
output2 = call_10504
func_10517 = relay.Function([], output)
mod['func_10517'] = func_10517
mod = relay.transform.InferType()(mod)
output = func_10517()
func_10518 = relay.Function([], output)
mutated_mod['func_10518'] = func_10518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10012_call = mod.get_global_var('func_10012')
func_10014_call = mutated_mod.get_global_var('func_10014')
call_10521 = func_10012_call()
call_10522 = func_10012_call()
func_10250_call = mod.get_global_var('func_10250')
func_10251_call = mutated_mod.get_global_var('func_10251')
call_10529 = func_10250_call()
call_10530 = func_10250_call()
output = relay.Tuple([call_10521,call_10529,])
output2 = relay.Tuple([call_10522,call_10530,])
func_10540 = relay.Function([], output)
mod['func_10540'] = func_10540
mod = relay.transform.InferType()(mod)
mutated_mod['func_10540'] = func_10540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10540_call = mutated_mod.get_global_var('func_10540')
call_10541 = func_10540_call()
output = call_10541
func_10542 = relay.Function([], output)
mutated_mod['func_10542'] = func_10542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10373_call = mod.get_global_var('func_10373')
func_10374_call = mutated_mod.get_global_var('func_10374')
call_10590 = relay.TupleGetItem(func_10373_call(), 0)
call_10591 = relay.TupleGetItem(func_10374_call(), 0)
output = relay.Tuple([call_10590,])
output2 = relay.Tuple([call_10591,])
func_10592 = relay.Function([], output)
mod['func_10592'] = func_10592
mod = relay.transform.InferType()(mod)
mutated_mod['func_10592'] = func_10592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10592_call = mutated_mod.get_global_var('func_10592')
call_10593 = func_10592_call()
output = call_10593
func_10594 = relay.Function([], output)
mutated_mod['func_10594'] = func_10594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10262_call = mod.get_global_var('func_10262')
func_10263_call = mutated_mod.get_global_var('func_10263')
call_10626 = relay.TupleGetItem(func_10262_call(), 1)
call_10627 = relay.TupleGetItem(func_10263_call(), 1)
func_9971_call = mod.get_global_var('func_9971')
func_9973_call = mutated_mod.get_global_var('func_9973')
call_10632 = relay.TupleGetItem(func_9971_call(), 0)
call_10633 = relay.TupleGetItem(func_9973_call(), 0)
func_9698_call = mod.get_global_var('func_9698')
func_9699_call = mutated_mod.get_global_var('func_9699')
call_10646 = relay.TupleGetItem(func_9698_call(), 0)
call_10647 = relay.TupleGetItem(func_9699_call(), 0)
func_10469_call = mod.get_global_var('func_10469')
func_10470_call = mutated_mod.get_global_var('func_10470')
call_10659 = relay.TupleGetItem(func_10469_call(), 3)
call_10660 = relay.TupleGetItem(func_10470_call(), 3)
output = relay.Tuple([call_10626,call_10632,call_10646,call_10659,])
output2 = relay.Tuple([call_10627,call_10633,call_10647,call_10660,])
func_10704 = relay.Function([], output)
mod['func_10704'] = func_10704
mod = relay.transform.InferType()(mod)
output = func_10704()
func_10705 = relay.Function([], output)
mutated_mod['func_10705'] = func_10705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9389_call = mod.get_global_var('func_9389')
func_9391_call = mutated_mod.get_global_var('func_9391')
call_10708 = func_9389_call()
call_10709 = func_9389_call()
func_10704_call = mod.get_global_var('func_10704')
func_10705_call = mutated_mod.get_global_var('func_10705')
call_10745 = relay.TupleGetItem(func_10704_call(), 2)
call_10746 = relay.TupleGetItem(func_10705_call(), 2)
uop_10775 = relay.exp(call_10708.astype('float64')) # shape=(2, 10, 12)
uop_10777 = relay.exp(call_10709.astype('float64')) # shape=(2, 10, 12)
func_9777_call = mod.get_global_var('func_9777')
func_9780_call = mutated_mod.get_global_var('func_9780')
const_10779 = relay.const([4,8,-9,4,2,-10,-8,-7,3,3,-7,6,-7,7,5,-8,7,-4,7,-8,7,-1,-2,-8,-8,3,-10,-7,7,6,7,3,-2,-2,5,7,2,9,-6,-3,7,-2,-6,-3,2,-4,-7,-4,-6,-7,10,4,-4,8,-1,-8,6,7,-8,4,2,-10,-7,-8,-3,-3,-3,-7,-2,-8,-5,-3,-6,-2,3,-6,-3,5,-5,2,-10,-2,-2,1,-3,6,5,10,4,-8,9,-3,2,-4,-3,-6,-1,-7,7,-8,-6,2,-6,1,-4,6,-2,-8,8,-3,6,3,8,-2,-9,7,5,-5,2,10,4,1,-6,2,9,-5,5,-4,-10,-9,-7,2,-6,4,4,3,-1,-6,3,2,-5,7,-5,-4,9,5,10,9,-6,-3,8,-8,10,9,2,-5,8,-7,-7,9,-4,4,-4,9,8,10,-8,7,10,1,-7,9,10,-8,6,-3,-2,4,9,-7,5,-5,6,1,9,-10,-2,-2,4,9,7,-10,-10,8,8,-8,-1,-8,-6,4,2,-2,10,7,3,-4,2,3,8,3,5,9,-6,-4,7,-8,10,3,3,6,8,8,3,1,-3,7,6,5,-4,-4,6,10,-9,8,5,-10,3,2,-1,7,-7,-3,10,-7,-8,-5,-1,10,8,-4,1,5,-1,-10,-1,-8,1,5,1,8,-1,6,8,3,-4,-10,-8,9,-3,2,7,-6,1,-10,1,4,10,5,-5,-3,-7,6,-7,7,-7,8,10,2,5,-6,1,2,1,9,-8,-9,-7,-10,-1,6,7,1,10,-7,-7,-3,4,-2,-3,-2,-5,-7,5,7,-4,3,-9,-7,10,-3,-8,7,-2,-8,10,-7,9,5,1,10,-7,9,9,-6,-1,-6,-7,-4,2,3,1,6,6,-6,5,4,-8,1,-8,-6,8,-1,-7,-4,-6,10,1,-7,-9,-3,8,-10,10,-6,10,1,-6,-3,-7,1,-7,1,10,4,1,-6,5,-7,-9,7,-7,-7,1,5,10,1,8,5,10,-7,-9,1,-1,10,3,1,-6,-2,-10,-2,4,10,-5,-10,-6,-5,-4,-8,-7,6,6,2,6,8,3,-8,5,-7,-3,-5,-7,-2,9,5,8,9,-7,-7,-5,8,-5,2,-2,-10,9,-6,8,-7,-7,4,-2,-3,-4,-3,-5,8,5,10,3,6,7,-8,9,-1,-8,4,-10,2,-7,-4,3,-4,3,10,6,-8,6,-8,-1,-3,-6,2,6,-1,-6,7,6,-2,5,-5,-5,-4,8,8,-10,10,-8,3,6,-8,8,4,5,5,7,1,-2,7,-4,1,5,-2,-6,8,-9,-6,2,-3,7,8,-7,-8,-1,-10,9,3,-1,-9,-9,8,-5,-5,6,5,7,5,-10,4,7,8,-3,10,-7,-2,-5,-4,-7,-9,-10,-4,8,10,4,3,6,-7,-4,5,-3,-8,9,1,3,-7,-6,10,2,-6,-2,8,-2,-10,-10,-6,4,-5,5,7,8,3,-4,-2,10,3,-6,-3,3,-5,-8,10,-4,-5,3,-9,5,-6,4,5,7,8,-6,4,-4,-6,9,-6,-1,1,10,-6,3,-4,-2,-9,-5,-4,7,4,-4,-6,6,-5,-1,-2,8,8,2,8,-8,-2,-5,-6,4,-6,10,-1,-5,5,5,-9,-7,-6,-6,2,-3,-9,-1,-1,-4,-3,-10,-1,3,1,3,-4,-6,7,7,7,6,-8,-2,-3,-5,-1,3,2,-7,-7,-2,3,3,1,1,-10,6,3,-7,6,-3,9,-10,5,3,-10,-2,4,-2,5,-4,10,3,10,2,-1,3,-2,-10,-10,10,9,-4,-7,-7,2,9,3,-9,-1], dtype = "int64")#candidate|10779|(700,)|const|int64
call_10778 = relay.TupleGetItem(func_9777_call(relay.reshape(const_10779.astype('int64'), [10, 70])), 5)
call_10780 = relay.TupleGetItem(func_9780_call(relay.reshape(const_10779.astype('int64'), [10, 70])), 5)
func_1282_call = mod.get_global_var('func_1282')
func_1289_call = mutated_mod.get_global_var('func_1289')
const_10793 = relay.const([5,3,-4,5,4,10,-6,-8,10,8,1,3,9,1,8,-10,-7,-1,1,-2,3,-7,-3,-2,4,-10,-9,-6,-10,8,9,8,-3,7,-6,-1,1,8,2,8,9,4,8,6,9,5,-2,-5,4,10,-3,9,-8,7,-6,-9,-10,2,-3,5,2,1,4,10,-10,-8,-3,4,-3,-3,-3,-5,-5,2,-7,9,8,5,8,10,8,-10,6,-4,4,-9,2,-1,-10,5,9,-7,8,8,9,-3,-7,-10,6,1,1,-8,-3,10,-9,3,10,6,3,-3,4,-1,-8,2,-5,5,-5,9,-9,5,7,-9,-9,-5,9,-7,6,3,-9,2,-10,-7,8,-4,8,-9,7,-2,-3,9,6,6,-3,10,4,3,-6,8,10,-5,3,-1,-1,5,1,7,-1,1,-2,6,-2,-9,-9,4,-2,8,-2,4,-4,-7,-4,-2,9,-8,6,-6,-1,7,-5,1,-10,3,-10,5,-5,-6,-9,5,-4,1,-5,8,-4,-9,-6,8,-1,-7,-5,4,-7,10,-9,-7,8,-4,-5,-2,-5,-9,5,-6,6,7,8,-3,2,-2,-2,5], dtype = "uint8")#candidate|10793|(220,)|const|uint8
var_10794 = relay.var("var_10794", dtype = "int64", shape = (576,))#candidate|10794|(576,)|var|int64
const_10795 = relay.const([-2,-9,7,8,-2,9,-8,-3,-1,-8,-7,3,10,-2,1,-2,-10,-4,9,-2,-8,10,-7,1,-7,2,1,7,3,-8,3,-7,-5,3,3,-2,-8,9,7,-3,10,8,1,3,-3,10,4,-10,-10,-2,-10,-6,-9,2,-6,10,-2,-7,4,-9,-4,-4,8,-7,8,-1,-6,-5,-3,-2,-3,7,1,-10,-8,1,-10,10,10,6,7,-4,-6,9,-7,-8,-3,8,9,-8,-9,-8,-3,-8,-6,-1,-4,7,4,-9,8,1,-2,-5,9,9,2,10,6,10,-6,6,-4,10,-10,8,8,-9,-10,-3,-8,8,8,7,8,5,-8,4,5,-1,4,-4,1,-5,8,2,8,7,-10,1,4,1,-8,-6,-10,-9,8,-9,7,-2,1,10,-5,-5,-5,-2,4,-3,-10,-7,-5,7,10,-4,9,9,-9,-9,-9,-1,3,-3,9,-9,-4,9,3,-5,-1,9,5,2,-8,-10,5,9,-7,5,8,-4,10,-2,-9,-5,5,4,3,-6,7,8,-9,2,-1,9,10,-2,9,5,-2,-10,-4,9,-2,-8,2,1,-7,7,-9,-9,-2,-3,-8,8,-9,-9,5,-10,-2,6,-8,-5,-1,5,3,-10,9,-5,-2,-7,3,3,3,-7,-4,8,9,9,8,-9,-1,5,4,7,4,6,1,7,3,-8,6,-2,-9,-4,-6,9,6,9,5,6,3,7,1,7,-8,4,-9,7,-7,9,6,3,2,-1,-10,-6,-3,7,5,-10,7,6,-10,5,6,3,2,5,9,-10,-5,4,-9,1,-4,-8,-7,-8,9,-4,-7,-8,-4,4,-9,4,1,3,8,-6,7,3,8,10,-5,2,-9,3,-5,7,-1,1,9,-2,8,-9,-1,10,4,-7,-2,2,-1,-7,2,-2,4,-5,-7,-2,-6,-1,-3,-8,-1,-7,6,-6,-6,5,6,-1,1,5,-6,3,8,-10,-7,2,-3,-2,-8,-6,-1,2,-8,-8,-10,7,10,7,7,2], dtype = "int16")#candidate|10795|(384,)|const|int16
call_10792 = relay.TupleGetItem(func_1282_call(relay.reshape(const_10793.astype('uint8'), [11, 5, 4]), relay.reshape(const_10793.astype('uint8'), [11, 5, 4]), relay.reshape(call_10778.astype('float64'), [128,]), relay.reshape(var_10794.astype('int64'), [144, 4]), relay.reshape(const_10795.astype('int16'), [384,]), ), 2)
call_10796 = relay.TupleGetItem(func_1289_call(relay.reshape(const_10793.astype('uint8'), [11, 5, 4]), relay.reshape(const_10793.astype('uint8'), [11, 5, 4]), relay.reshape(call_10778.astype('float64'), [128,]), relay.reshape(var_10794.astype('int64'), [144, 4]), relay.reshape(const_10795.astype('int16'), [384,]), ), 2)
bop_10797 = relay.not_equal(uop_10775.astype('bool'), relay.reshape(call_10708.astype('bool'), relay.shape_of(uop_10775))) # shape=(2, 10, 12)
bop_10800 = relay.not_equal(uop_10777.astype('bool'), relay.reshape(call_10709.astype('bool'), relay.shape_of(uop_10777))) # shape=(2, 10, 12)
uop_10807 = relay.asin(call_10792.astype('float32')) # shape=(128,)
uop_10809 = relay.asin(call_10796.astype('float32')) # shape=(128,)
output = relay.Tuple([call_10745,call_10778,const_10779,const_10793,var_10794,const_10795,bop_10797,uop_10807,])
output2 = relay.Tuple([call_10746,call_10780,const_10779,const_10793,var_10794,const_10795,bop_10800,uop_10809,])
func_10812 = relay.Function([var_10794,], output)
mod['func_10812'] = func_10812
mod = relay.transform.InferType()(mod)
mutated_mod['func_10812'] = func_10812
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10813 = relay.var("var_10813", dtype = "int64", shape = (576,))#candidate|10813|(576,)|var|int64
func_10812_call = mutated_mod.get_global_var('func_10812')
call_10814 = func_10812_call(var_10813)
output = call_10814
func_10815 = relay.Function([var_10813], output)
mutated_mod['func_10815'] = func_10815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10250_call = mod.get_global_var('func_10250')
func_10251_call = mutated_mod.get_global_var('func_10251')
call_10828 = func_10250_call()
call_10829 = func_10250_call()
output = call_10828
output2 = call_10829
func_10830 = relay.Function([], output)
mod['func_10830'] = func_10830
mod = relay.transform.InferType()(mod)
output = func_10830()
func_10831 = relay.Function([], output)
mutated_mod['func_10831'] = func_10831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9289_call = mod.get_global_var('func_9289')
func_9291_call = mutated_mod.get_global_var('func_9291')
call_10887 = func_9289_call()
call_10888 = func_9289_call()
var_10889 = relay.var("var_10889", dtype = "float32", shape = (2, 10, 12))#candidate|10889|(2, 10, 12)|var|float32
bop_10890 = relay.multiply(call_10887.astype('float64'), relay.reshape(var_10889.astype('float64'), relay.shape_of(call_10887))) # shape=(2, 10, 12)
bop_10893 = relay.multiply(call_10888.astype('float64'), relay.reshape(var_10889.astype('float64'), relay.shape_of(call_10888))) # shape=(2, 10, 12)
func_10262_call = mod.get_global_var('func_10262')
func_10263_call = mutated_mod.get_global_var('func_10263')
call_10894 = relay.TupleGetItem(func_10262_call(), 1)
call_10895 = relay.TupleGetItem(func_10263_call(), 1)
output = relay.Tuple([bop_10890,call_10894,])
output2 = relay.Tuple([bop_10893,call_10895,])
func_10908 = relay.Function([var_10889,], output)
mod['func_10908'] = func_10908
mod = relay.transform.InferType()(mod)
var_10909 = relay.var("var_10909", dtype = "float32", shape = (2, 10, 12))#candidate|10909|(2, 10, 12)|var|float32
output = func_10908(var_10909)
func_10910 = relay.Function([var_10909], output)
mutated_mod['func_10910'] = func_10910
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10946 = relay.var("var_10946", dtype = "uint64", shape = (8, 11, 1))#candidate|10946|(8, 11, 1)|var|uint64
const_10947 = relay.const([[[-9],[-4],[5],[-10],[9],[-6],[-9],[-7],[-1],[10],[7]],[[-7],[6],[-2],[10],[-10],[8],[-8],[6],[-2],[6],[-1]],[[7],[3],[-6],[-1],[9],[-4],[1],[6],[5],[-10],[2]],[[6],[6],[10],[-5],[6],[-10],[-9],[3],[3],[-8],[-5]],[[-3],[10],[-8],[3],[-8],[7],[-8],[-5],[-1],[7],[9]],[[-2],[-8],[4],[-2],[-4],[-1],[4],[-7],[-9],[-5],[-9]],[[7],[-8],[-7],[4],[2],[10],[-2],[5],[5],[-8],[-6]],[[-8],[-1],[-7],[5],[-1],[-4],[-5],[-5],[10],[-4],[7]]], dtype = "uint64")#candidate|10947|(8, 11, 1)|const|uint64
bop_10948 = relay.subtract(var_10946.astype('uint64'), relay.reshape(const_10947.astype('uint64'), relay.shape_of(var_10946))) # shape=(8, 11, 1)
var_10961 = relay.var("var_10961", dtype = "uint64", shape = (8, 11, 8))#candidate|10961|(8, 11, 8)|var|uint64
bop_10962 = relay.logical_or(bop_10948.astype('bool'), var_10961.astype('bool')) # shape=(8, 11, 8)
func_10402_call = mod.get_global_var('func_10402')
func_10404_call = mutated_mod.get_global_var('func_10404')
call_10965 = relay.TupleGetItem(func_10402_call(), 2)
call_10966 = relay.TupleGetItem(func_10404_call(), 2)
func_4875_call = mod.get_global_var('func_4875')
func_4880_call = mutated_mod.get_global_var('func_4880')
var_10977 = relay.var("var_10977", dtype = "int64", shape = (160,))#candidate|10977|(160,)|var|int64
const_10978 = relay.const([[-6.167730,-2.156928,-5.908740,-4.165011,-7.494321,1.788354,4.661553,-7.667630,-5.333156,-1.722816,-3.062343,6.777831,-4.163177,-3.835361,2.259760,4.217924,-1.579074,2.791727,8.768489,3.041793,-3.299209,-1.184583,-4.100935,-3.095409,0.232503,1.935594,1.886478,7.587294,6.376604,-5.807550,-9.239763,2.741616,2.180121,1.913893,-4.363690,7.979701,-2.229842,-9.058271,-1.650863,7.241616,-2.931752,1.857611,0.945140,2.325000,8.572165,6.989711,1.019178,-2.684277,-3.097372,4.115699,1.163456,5.251243,-9.923161,-5.263253,-4.966606,-8.777110,-2.495720,-9.780726,-3.396036,-7.356916,4.346919,5.312805,-7.659680,-9.675582,-8.102645,-5.734900,-6.719457,2.652538,5.154859,7.711599,9.574617,-8.754726,7.819653,-5.290935,4.151868,0.451960,-4.067153,5.264017,6.433852,3.408551,-6.133892,3.556005,-0.884800,3.732220,-9.222844,9.830337,3.431971,3.122715,1.376077,-5.703388,-9.659853,1.627634,3.615123,-0.889617,-9.838825,-6.316841,0.143674,2.453251,-0.674178,6.368870,0.634870,-4.892585,6.807470,-1.144999,3.177493,4.058096,-3.689831,2.552617,1.091929,-4.966358,7.901616,-9.599768,-8.999431,-7.579307,8.895309,6.255195,4.479274,6.954094,7.527369,2.036832,-0.889069,6.337210,3.268370,-9.287457,-6.118550,0.685991,0.046453,-1.529074,8.168158,-9.272499,-6.256309,-0.070927,-9.012444,-6.323561,2.384166,-1.657193,-7.275979,-9.244212,-5.944458,7.878890,-8.142760,7.171042,-7.641361,1.354102,-8.208667,-9.709446,-6.704999,-7.469017,-1.752666,-4.746639,-1.997023,-0.001992,-8.327628,8.273505,8.846649,2.823378,7.119689,-7.453320,-7.776326,3.739848,2.110700,-1.932049,-6.711071,-2.301949,1.083689,-1.851956,-0.568696,8.186287,-1.266870,3.103972,9.103281,4.560643,0.850611,-9.973493,8.974986,6.242706,-0.091307,-2.154843,-6.544496,8.266891,-4.841690,-9.220518,-5.821599,1.050210,-4.398613,9.404854,-4.633900,-2.413546,-6.294369,0.925509,-1.613901,-1.949733,-8.135072,-1.287780,-1.550530,5.849469,5.414242,1.003186,6.736068,-7.829776,1.950173,1.163839,-4.282745,-7.288733,-8.093007,3.221461,-0.044021,2.066775,-5.790558,4.364618,-8.266832,6.809971,-9.478539,5.348223,-9.100591,5.758532,1.138193,6.707910,-7.589392,-3.917129,7.945315,-5.478861,-8.281696,6.917219,0.415166,0.404930,2.837884,1.210000,4.126482,5.797510,9.415163,0.440662,3.023462,-4.482669,-8.131518,-1.574910,-7.787738,9.181808,7.854742,-8.404835,-8.425822,-9.712924,-8.053112,2.152499,-1.596185,0.079387,-9.739896,5.301666,0.909274,9.882196,-2.579809,-4.221446,-3.761438,6.641432,-7.338884,-3.473809,7.232887,-9.302604,0.393054,8.899838,-1.844035,7.638828,-7.074175,-9.669053,-7.579693,6.177974,2.436722,-4.155500,-9.285593,3.239582,5.567094,0.857566,-0.708101,-5.793067,7.276940,-6.370082,9.223019,-0.922522,-9.811123,4.034430,3.261141,9.954434,-3.340743,-8.462531,-5.799208,2.532540,-5.971236,-2.207161,-1.574976,-0.562218,7.039920,7.496510,-2.166080,-1.590080,-0.795336,0.466684,-8.751111,3.997075,-0.385064,2.193532,1.525864,-3.820990,9.654823,3.059649,-9.801268,-1.889281,-9.248534,-3.646369,6.275888,2.679891,-1.950197,9.535667,1.703812,-5.570572,8.822744,-6.276637,-9.574282,-3.288891,-3.243102,-9.993043,6.213162,-9.455667,-8.922314,-8.559075,1.646630,-4.475731,-1.074943,-9.866980,-8.090184,-1.698852,1.260831,-4.937034,9.079232,4.711461,-3.083973,-4.852224,-6.222181,5.792473,2.764181,6.488325,2.441045,4.095448,0.182185,-6.136539,-3.584827,0.620447,4.619386,6.135231,-8.616959,-7.150146,-3.196228,-2.110472,9.880771,-1.714298,8.585098,7.767754,1.618708,5.893929,0.876886,-3.480895,-2.577878,4.698092,6.720369,-2.554061,1.386431,4.959484,-9.598233,7.100563,2.029026,-7.155499,9.784995,-3.288800,-7.509626,1.244788,8.839928,8.410154,-2.242973,7.891934,-4.741191,0.062595,9.912091,4.418430,2.227148,6.823089,-6.525196,4.293353,-9.912282,-5.662792,0.937757,-3.562492,8.446545,-1.552715],[-2.287997,-9.563633,-6.733450,-6.365553,-1.601882,8.402378,-8.016487,-9.372560,-0.963111,-0.378763,9.068951,-1.742534,8.367812,5.426704,-1.021375,-0.796197,-7.669520,1.735439,-9.613326,-1.860367,-1.547030,-2.117484,-8.283289,1.804029,8.004405,3.686357,9.193357,4.967113,-8.594788,9.507386,3.900639,4.909940,-7.771862,-7.077976,3.539245,9.114694,-6.041356,-8.182101,8.254325,9.194216,-4.355404,7.750171,-6.106581,-8.504068,-3.583465,-6.539929,2.155309,5.806097,-2.898500,-2.087845,-3.865086,6.463187,-3.156981,6.077895,-9.049119,-0.726185,-0.898280,-2.241837,-9.528509,1.708212,-1.927640,-3.926294,-5.182956,-7.286551,8.726944,-0.245333,-6.687283,-4.941926,3.770405,-5.024670,4.763975,-8.092668,9.246844,-2.315481,8.139090,-5.320766,9.705273,7.418969,-0.223324,9.387666,8.219352,5.121775,0.569033,-2.252909,8.328156,-5.911301,0.230768,-2.696178,2.022191,-2.771123,1.981437,9.304414,-1.560462,-3.938232,-5.406182,-0.997785,1.566365,1.648783,-3.739350,7.847482,2.010478,-5.100155,9.133400,2.142081,8.828401,3.325978,-7.248937,-9.213871,-5.949438,9.585163,-6.697865,-6.359582,2.695858,-0.919904,3.442255,5.659118,-5.382109,1.945739,9.075747,-9.344863,-7.189539,7.790049,-2.556268,4.648874,-5.344742,1.853100,6.921980,-2.579868,-1.601728,-0.627508,-5.402250,-2.671103,5.868336,-0.140668,-1.905901,6.616201,6.669824,6.243905,-5.681326,-0.521329,9.073968,6.026768,3.617470,1.579365,6.714053,2.234551,7.846716,-0.233576,9.533947,7.078418,7.834644,-3.687831,3.359110,7.094417,9.964051,-2.846113,0.464309,9.752003,1.692680,-8.481778,-4.510531,1.867962,8.053701,-9.947760,-7.255878,-4.158189,-8.910599,-4.446884,-0.910526,-0.528852,5.804295,-1.427669,-9.018500,3.950336,-5.914903,-1.390468,5.997928,6.759399,3.467712,2.071273,0.492596,-1.329565,5.550233,-8.165788,-1.895595,6.920032,1.689431,-4.976094,6.705671,-2.921160,-9.684301,-6.372475,-7.736799,-2.581227,4.027650,2.316315,-7.639862,-5.305412,0.598305,8.753478,3.706273,5.100287,3.295270,4.756498,-6.139077,-3.039969,-2.349610,-3.342558,-6.679925,5.943855,6.170105,5.647918,-6.929429,1.788814,-5.171729,5.383847,6.433218,-9.873580,-7.764600,0.166065,6.881628,1.075926,-9.117408,-0.035285,5.070748,-6.300844,8.514170,-8.129102,8.897507,0.763575,-2.744243,-6.215431,0.749185,-1.326941,-0.502740,-7.403373,-7.241864,1.612736,-9.461118,9.165306,5.010675,-9.900686,5.524173,-0.406107,-3.531172,-3.755836,-7.979805,-8.149403,-2.208603,-5.848109,-7.973649,-6.759862,-1.033795,6.811732,-3.412901,-0.884750,-9.698622,-9.961347,9.730184,-4.931015,-9.357514,9.012880,9.700183,-0.445405,-4.848247,-1.277464,-6.497961,4.138751,2.667495,2.283211,-3.926325,1.042174,-0.417476,-1.879434,4.558895,0.317468,-6.541572,-2.924887,-1.160209,1.357409,9.250322,0.411820,-5.085790,5.692911,0.114494,7.481100,-1.404133,-4.359837,-2.626116,1.114939,7.873259,7.306053,0.390383,-9.900696,2.552240,-0.118469,4.545905,-2.319457,1.363856,6.010636,-5.170935,-7.093222,-4.631209,5.176711,8.992236,-0.215980,6.182777,-0.329104,8.033039,-7.960856,-5.887569,-8.876971,-5.545422,-0.139699,-8.320836,-4.442423,-2.832019,6.118667,1.386575,-1.744604,1.029810,9.704792,-3.139959,4.873554,-1.727254,-1.912254,3.302097,5.466521,2.366013,8.642086,0.893050,-0.074459,-4.300929,-8.573788,-6.141857,-7.448408,4.491253,-3.541164,-4.562780,-7.198332,6.566794,7.309478,8.074152,-2.501393,-9.142844,-0.813443,5.310474,-7.812919,-8.168332,8.232061,5.548890,5.973304,-7.450141,-3.866653,0.970594,1.773079,-3.552774,3.719840,4.501256,-5.145512,4.327695,-1.663338,-6.917158,-8.441703,9.147530,5.430981,-0.958053,-9.988678,7.123584,5.290035,0.498248,1.131184,4.333343,5.368121,5.902563,3.119942,-5.111556,1.919242,-2.162136,8.396963,-7.851489,-6.173449,0.663026,7.636512,2.298994,-1.763493,5.563342,-6.791716,-9.544623,-2.263059,-4.095281,8.493793]], dtype = "float64")#candidate|10978|(2, 392)|const|float64
call_10976 = relay.TupleGetItem(func_4875_call(relay.reshape(var_10977.astype('int64'), [4, 8, 5]), relay.reshape(const_10978.astype('float64'), [784,]), relay.reshape(call_10965.astype('int16'), [1, 384]), ), 1)
call_10979 = relay.TupleGetItem(func_4880_call(relay.reshape(var_10977.astype('int64'), [4, 8, 5]), relay.reshape(const_10978.astype('float64'), [784,]), relay.reshape(call_10965.astype('int16'), [1, 384]), ), 1)
func_7507_call = mod.get_global_var('func_7507')
func_7510_call = mutated_mod.get_global_var('func_7510')
var_10987 = relay.var("var_10987", dtype = "int64", shape = (700,))#candidate|10987|(700,)|var|int64
call_10986 = relay.TupleGetItem(func_7507_call(relay.reshape(var_10987.astype('int64'), [10, 5, 14]), relay.reshape(var_10987.astype('int64'), [10, 5, 14]), ), 1)
call_10988 = relay.TupleGetItem(func_7510_call(relay.reshape(var_10987.astype('int64'), [10, 5, 14]), relay.reshape(var_10987.astype('int64'), [10, 5, 14]), ), 1)
var_10989 = relay.var("var_10989", dtype = "uint64", shape = (8, 11, 8))#candidate|10989|(8, 11, 8)|var|uint64
bop_10990 = relay.maximum(var_10961.astype('uint16'), relay.reshape(var_10989.astype('uint16'), relay.shape_of(var_10961))) # shape=(8, 11, 8)
bop_10997 = relay.greater_equal(call_10986.astype('bool'), call_10965.astype('bool')) # shape=(6, 384, 8)
bop_11000 = relay.greater_equal(call_10988.astype('bool'), call_10966.astype('bool')) # shape=(6, 384, 8)
func_3495_call = mod.get_global_var('func_3495')
func_3498_call = mutated_mod.get_global_var('func_3498')
var_11004 = relay.var("var_11004", dtype = "int64", shape = (96,))#candidate|11004|(96,)|var|int64
call_11003 = func_3495_call(relay.reshape(var_11004.astype('int64'), [1, 6, 16]))
call_11005 = func_3495_call(relay.reshape(var_11004.astype('int64'), [1, 6, 16]))
func_9523_call = mod.get_global_var('func_9523')
func_9527_call = mutated_mod.get_global_var('func_9527')
var_11011 = relay.var("var_11011", dtype = "float32", shape = (390, 2))#candidate|11011|(390, 2)|var|float32
var_11012 = relay.var("var_11012", dtype = "float64", shape = (128,))#candidate|11012|(128,)|var|float64
call_11010 = relay.TupleGetItem(func_9523_call(relay.reshape(var_11011.astype('float32'), [13, 5, 12]), relay.reshape(var_11012.astype('float64'), [128,]), relay.reshape(call_10965.astype('int16'), [384,]), ), 9)
call_11013 = relay.TupleGetItem(func_9527_call(relay.reshape(var_11011.astype('float32'), [13, 5, 12]), relay.reshape(var_11012.astype('float64'), [128,]), relay.reshape(call_10965.astype('int16'), [384,]), ), 9)
bop_11019 = relay.minimum(bop_10948.astype('uint16'), call_11010.astype('uint16')) # shape=(8, 11, 605)
bop_11022 = relay.minimum(bop_10948.astype('uint16'), call_11013.astype('uint16')) # shape=(8, 11, 605)
func_7507_call = mod.get_global_var('func_7507')
func_7510_call = mutated_mod.get_global_var('func_7510')
call_11024 = relay.TupleGetItem(func_7507_call(relay.reshape(var_10987.astype('int64'), [10, 5, 14]), relay.reshape(var_10987.astype('int64'), [10, 5, 14]), ), 2)
call_11025 = relay.TupleGetItem(func_7510_call(relay.reshape(var_10987.astype('int64'), [10, 5, 14]), relay.reshape(var_10987.astype('int64'), [10, 5, 14]), ), 2)
func_6704_call = mod.get_global_var('func_6704')
func_6708_call = mutated_mod.get_global_var('func_6708')
const_11027 = relay.const([[-2.376901,4.659779],[-1.901195,-2.413302],[9.821254,-0.594285],[-9.175445,-7.516343],[6.847032,8.643414],[-0.004662,-1.869498],[-8.243394,1.937040],[-6.018314,7.013621],[-5.825193,-9.089289],[4.449831,9.490820],[9.774943,9.090041],[-0.666482,-3.779595],[1.351703,-6.631120],[-3.286758,2.269971],[-3.996255,0.566915],[-9.832983,0.805297],[3.828974,4.184602],[-2.121744,5.805695],[-9.663937,1.862793],[-8.503013,-0.689697],[-6.085031,-1.212013],[7.965585,4.384656],[-1.646911,9.114349],[5.194430,0.795305],[-1.321083,7.296194],[0.076724,-2.560380],[-0.641394,-4.041821],[7.657619,-5.762455],[8.894682,-7.038359],[-3.010183,-2.001449],[-3.829886,9.873143],[-5.198085,0.705267],[0.742212,-6.346986],[4.596513,3.682435],[-8.412983,3.568806],[-8.679193,3.240803],[-7.865947,1.917746],[6.401078,8.175779],[1.894541,-3.383109],[-3.114464,-0.024147],[-6.330712,-3.191645],[3.446459,7.347157],[-5.710814,2.249389],[-6.806966,-1.763495],[5.321273,-8.086497],[-7.569904,-2.381173],[-3.868812,2.228235],[-9.183884,4.878135],[-5.114002,8.464737],[8.061041,-8.548506],[5.763976,-8.304108],[-3.000121,-9.376090],[-8.976049,3.718849],[-9.067946,-9.939070],[-0.411378,6.805313],[4.280636,5.122799],[9.555536,8.735904],[-7.687851,-5.171223],[-6.443199,2.981786],[1.843894,-0.767668],[-4.871498,-4.058471],[2.023686,-3.523759],[5.207371,3.098584],[-7.720436,-9.975076],[6.239982,-0.745116],[0.003023,7.997535],[2.371663,1.108191],[-4.703196,6.259406],[4.482382,0.520966],[-3.992405,-2.882512],[-0.009801,7.673131],[-5.721827,-2.788921],[3.110082,1.519384],[2.770306,-2.504907],[-5.347922,3.238959],[9.894059,2.204660],[9.148622,-7.551236],[-6.413500,7.435491],[-1.426491,2.872604],[-0.958662,-6.001557],[-4.452564,5.678266],[-2.940398,1.167492],[2.584416,1.698276],[3.783075,3.841053],[2.224494,-3.151307],[-1.152753,-0.159929],[-1.825614,8.132101],[8.159635,7.125861],[-3.201135,8.730553],[-1.350056,2.361029],[-6.701857,3.438928],[1.358075,-1.646801],[-8.117249,9.388855],[-7.397362,8.581817],[4.216647,2.335796],[-4.890042,9.177537],[3.274288,2.526080],[4.642799,7.797602],[8.197925,6.839083],[1.892834,3.938265],[-5.863017,-2.756120],[6.285215,-7.486446],[0.363226,7.924009],[-7.894261,-2.485358],[-0.606770,4.548084],[-8.262005,7.842319],[6.987709,-4.517272],[-1.584718,-2.009233],[-1.981556,4.690277],[-0.476996,7.029358],[9.305232,0.763664],[5.889716,-1.294190],[8.331928,8.417186],[-7.608596,5.412873],[8.600151,8.251057],[-7.146106,-1.160761],[-8.426829,-7.428269],[0.078128,-6.815134],[-1.816085,-7.927763],[6.758757,4.294982],[8.216588,-4.671562],[8.483772,3.175430],[-2.086937,-6.992994],[0.348554,6.819100],[-0.711738,-3.842571],[2.627897,8.006167],[7.475325,9.813486],[-4.833187,0.247480],[9.595913,5.962147],[-5.709568,1.918475],[4.819694,2.414471],[6.551295,9.492799],[-3.492733,0.547571],[-0.869940,2.709505],[7.833985,0.742935],[-9.735796,2.832541],[-8.524883,-8.797138],[2.352334,4.635880],[-9.789569,0.362907],[-3.450524,9.401270],[4.100355,-3.433999],[0.097925,1.766805],[2.858353,-6.174185],[9.066053,4.586994],[9.567503,-6.644431],[-5.719634,3.628430],[-4.752392,-1.337106],[5.684392,4.778166],[-4.076559,2.359159],[-3.404969,-0.123278],[0.055819,8.424244],[-0.879261,-7.250614],[-4.909308,9.202666],[0.106505,9.430514],[3.820696,-3.679351],[-6.962360,0.931537],[9.890638,-7.796885],[0.968992,4.274806],[-6.677725,-6.226804],[-5.219284,-5.035066],[4.558203,6.152418],[-5.190101,3.573592],[-1.775720,6.745159],[7.431635,9.578299],[2.319257,-8.201249],[3.081352,6.131564],[-3.445300,-4.825381],[-4.541561,-4.059486],[-4.598611,-4.953386],[-7.734978,8.235227],[6.053509,6.355795],[8.556089,-0.099360],[8.673064,-4.801367],[-3.549135,-9.477611],[5.023965,3.981358],[1.069761,1.559368],[1.082122,-7.588387],[6.217940,-4.076647],[-6.725779,-2.336171],[9.299059,-7.837386],[5.525701,3.578199],[-2.217600,1.052414],[-7.154892,-8.186467],[-7.880027,-0.107877],[3.224741,4.314404],[-2.306920,-5.922506],[-3.236248,-2.345205],[1.224979,-5.150955],[4.364494,-7.354525],[3.353658,0.584436],[6.329333,2.510242],[-5.181120,6.748360],[-0.912854,-4.998549],[4.445557,-5.806059],[0.684408,7.639567],[2.284305,-8.599144],[6.100583,0.874733],[-1.657738,-5.627034],[-5.602307,8.333882],[9.170496,-4.959324],[6.726630,-0.008497],[9.915261,-0.399793],[-6.182440,6.757654],[4.241674,-8.799749],[1.599761,3.565936],[8.120152,6.951717],[0.333565,-7.884309],[6.398488,5.095557],[1.262645,9.007062],[-7.226257,-5.684276],[7.361875,-4.437379],[0.197081,3.596015],[-5.372949,-7.243983],[7.123450,3.565683],[-0.602488,1.042351],[3.339292,-0.173552],[2.231527,8.044695],[-2.790533,-7.799444],[-2.884726,-3.973945],[8.823903,-6.169994],[3.778929,5.536577],[-7.328126,4.589876],[-3.335456,-1.959651],[1.831249,0.890036],[0.548991,-4.316701],[-8.049060,9.446794],[-6.011569,-7.724812],[-7.761085,4.765423],[2.362735,-8.751042],[-9.426397,-6.649802],[-5.673994,-4.865895],[6.167141,-3.242182],[-4.995752,-6.313418],[8.548897,1.557512],[-5.670338,-8.318711],[-5.323067,-3.626177],[-8.060121,8.666404],[-1.928695,-0.270669],[2.607923,1.655753],[-7.891096,7.106189],[-2.024548,1.534182],[2.988892,4.519142],[-8.629859,-9.910963],[-4.125082,-1.498832],[6.362497,9.573100],[3.349794,1.502069],[-5.063186,3.799938],[-9.609275,2.651653],[5.325036,5.530725],[-9.188659,-5.836454],[-7.497790,9.391248],[0.201797,9.361853],[-1.611909,-1.511025],[-1.664569,-7.751315],[-3.626537,5.043917],[-6.597241,-9.868628],[8.609141,-9.506429],[-2.071075,-6.851359],[-2.979520,8.398817],[2.837387,-0.126237],[9.750890,6.426015],[-2.885024,-2.877193],[-6.409025,-8.449888],[2.572576,-4.583708],[-7.855810,-2.090044],[5.501010,4.780854],[-5.972051,3.412954],[0.415372,1.351645],[-6.645656,9.384465],[-7.517454,-7.523134],[2.190263,1.102264],[2.106505,-3.352912],[0.409964,-5.313679],[9.986339,-9.595837],[5.976343,-5.447782],[8.955637,2.937678],[-0.724719,1.836725],[9.746887,0.355447],[-8.864370,0.799268],[-4.298480,6.591023],[-9.622651,-6.153334],[4.792653,3.690479],[-9.989344,7.767961],[-0.710416,-4.940744],[8.380732,4.558200],[0.378045,-3.311679],[-5.404388,0.865226],[8.998178,-5.760698],[-6.835466,3.203366],[3.413857,-8.427391],[-0.044771,7.236999],[4.822670,-5.226058],[7.628828,1.523289],[-6.711918,-1.834583],[6.889162,-5.270697],[-2.587340,-5.046141],[6.134230,-0.416247],[-1.154131,4.883370],[6.889250,2.587312],[-4.120257,1.709002],[-6.820598,-4.186576],[-9.118537,1.918074],[-6.500252,-7.919256],[-0.867808,9.914782],[5.249840,-0.555772],[5.280622,-7.153900],[-7.947516,1.804319],[4.220660,4.804959],[3.252737,8.444017],[-6.974099,5.975575],[-3.004007,-9.713938],[-8.018549,-0.334329],[5.613468,2.057073],[-4.719941,4.209495],[-0.637957,9.149421],[-7.551396,1.371580],[-2.450709,0.414203],[2.060167,1.661727],[8.264835,-8.792974],[-8.575090,1.445084],[4.671737,-7.470783],[-7.885839,-9.279173],[-2.846561,7.540118],[-0.533907,-1.598773],[9.500596,-8.434360],[-7.485157,-3.351125],[4.697887,8.161900],[7.633471,5.463890],[8.825175,2.722309],[-4.825796,-6.857035],[7.782530,2.823355],[-3.870733,9.997383],[6.133539,-0.490415],[6.309653,1.710058],[7.230356,-5.378355],[2.915735,0.560765],[8.309349,6.088609],[3.104507,-5.866830],[9.746784,-3.692879],[6.673304,4.670757],[0.989245,-6.941009],[-1.176467,3.679611],[-1.272132,-6.211205],[-5.530802,4.588028],[-5.582140,6.054502],[-4.713228,0.194576],[1.265956,-5.029202],[8.872268,7.766823],[1.641932,0.966853],[-7.128065,-7.944406],[1.642175,-6.042757],[-6.070087,1.447740],[-3.097627,-4.823004],[1.732385,-2.149899],[-6.766057,9.737432],[-7.594698,-0.576383],[9.330771,8.651983],[9.938230,-1.558602],[3.474837,-4.810810],[-2.916089,-0.497306],[-4.591153,-4.816967],[-8.240541,-6.777674],[6.753738,-8.323336],[-9.696246,6.227350],[9.168676,8.202767],[-7.223692,6.338469],[5.280568,-1.077079],[1.255509,-9.060370],[4.248536,7.241504],[-1.602052,-5.000568],[-1.583586,0.297193],[-4.765553,-7.892809],[-7.908902,-9.456340],[2.094404,-1.671369],[3.699098,8.677699],[3.602913,-3.670432],[-9.741818,1.054246],[7.593578,-9.779534],[-9.931721,-5.534040],[-8.932788,-4.455102],[4.819754,-4.703164],[-4.671557,6.852156],[5.133098,8.309963],[-5.025807,4.687027],[6.924947,1.800966],[6.125386,-2.748874],[-6.424302,-3.094034],[5.554493,5.334120],[9.072158,-6.026283],[-1.852118,7.654379],[-3.858283,-8.499990],[-2.468495,4.939885],[-3.682451,-4.816027],[-5.423709,-6.282077],[2.630404,8.628060],[0.137265,0.684036],[-5.967482,5.293143],[3.119905,-6.274175],[0.848644,3.928273],[6.126016,4.764933],[5.855842,0.644041],[9.290576,-5.966452],[-4.268535,9.459451],[-1.000577,-1.577769],[-8.403980,2.026103],[-9.822664,8.666175],[3.313685,6.684618],[0.013755,-0.691757],[-6.768643,-0.593838],[1.360840,-1.109240],[0.118761,-7.752997],[8.285134,-2.253012],[-0.814988,1.318284],[-5.559303,-6.628113],[1.205601,-0.530974],[-6.929555,-3.224509],[-0.539075,-6.925178],[7.393629,4.984287],[4.613714,9.718630],[-0.763299,-2.236275],[1.513477,4.439553],[1.337159,8.869824],[7.459511,1.883870],[8.049941,-8.937968],[5.185704,7.992382],[8.157841,4.464548],[-3.314805,9.707744],[-6.946570,2.394048],[-8.369851,7.766715],[-6.195131,-0.058516],[-5.682318,-3.763028],[5.317484,2.694191],[5.883763,-4.924369],[8.040771,6.964629],[-1.603447,-8.673769],[3.757875,-5.899741],[-8.677250,9.429448],[8.469238,-9.941691],[2.368390,7.240641],[7.632698,5.467564],[4.714247,-5.327602],[9.867346,1.938252],[-5.186402,3.021189],[8.992247,7.968098],[6.280681,6.016242],[8.051344,7.319295],[-2.130703,1.536461],[3.119295,-6.814830],[-6.162547,-9.635142],[1.947028,0.616890]], dtype = "float32")#candidate|11027|(450, 2)|const|float32
const_11028 = relay.const([3,3,10,7,6,-2,9,-10,4,-8,1,8,-10,-8,8,-10,-1,-6,-1,-4,3,3,2,6,5,2,9,9,10,-2,-5,1,5,6,-2,-2,8,7,-1,9,-9,1,3,-7,7,3,-4,-9,4,5,-6,1,2,-6,-4,-10,-8,-3,1,5,-1,-4,-5,-4,-8,4,-5,10,4,-2,-2,1,3,8,4,-4,2,-2,10,-5,-4,-2,6,6,-7,8,1,7,5,-10,1,-6,1,-9,3,-9,2,5,3,-10,10,-10,-9,-4,4,-5,-7,7,8,-9,1,9,-9,-3,-6,3,-1,4,1,6,2,-2,4,-7,7,-5,-3,-4,-7,-5,8,-8,10,-10,-1,-10,-10,2,-4,-6,4,-9,-6,-9,10,7,-1,-8,8,-6,6,6,6,10,8,1,9,-8,5,-7,3,-4,10,7,-9,9,-9,-1,-4,7,9,3,-9,1,10,10,4,10,-5,-4,-2,-2,-7,-5,4,-2,-9,-8,-5,4,-1,-1,-10,8,7,-10,4,-9,-4,3,-6,8,-7,-6,7,10,-8,-2], dtype = "uint64")#candidate|11028|(208,)|const|uint64
call_11026 = relay.TupleGetItem(func_6704_call(relay.reshape(const_11027.astype('float32'), [6, 15, 10]), relay.reshape(const_11028.astype('uint64'), [208,]), ), 2)
call_11029 = relay.TupleGetItem(func_6708_call(relay.reshape(const_11027.astype('float32'), [6, 15, 10]), relay.reshape(const_11028.astype('uint64'), [208,]), ), 2)
func_4650_call = mod.get_global_var('func_4650')
func_4654_call = mutated_mod.get_global_var('func_4654')
const_11037 = relay.const([3,-2,10,-5,10,4,-8,-7,-9,7,2,2,-9,-1,1,-2,9,-7,8,6,3,4,-8,2,1,-7,-7,-2,-5,5,-2,-10,-3,-10,10,10,7,-7,-5,4,-8,1,-1,4,-8,4,5,1,-3,-8,-8,-6,-4,-9,4,7,4,9,-10,3,-9,-10,-3,2,-3,-10,-1,-5,1,-6,-9,5,2,1,7,2,3,2,-4,-3,-7,9,7,-6,9,-3,6,4,-4,-10,10,-8,-5,-8,-5,7,2,-1,-1,9,-9,-10,2,3,-10,-6,-6,-5,3,3,4,1,7,9,8,-7,2,-2,-1,10,-7,-4,-1,7,2,-3,9,6,-5,-1,5,-10,5,-1,6,-10,10,-7,2,-6,-3,3,-10,-7,4,-7,-5,-5,-8,9,-10,8,-10,2,8,-8,-4,2,-10,10,-6,4,-6,4,-7,-10,9,-8,5,-2,-5,-4,1,-6,3,-6,5,-10,9,6,6,-3,-6,-3,9,3,-6,-5,-3,8,7,6,-4,-4,10,-8,-10,1,-2,-6,-2,6,-6,-6,2,-6,8,2,10,-4,9,-9,1,-6,6,5,-1,-7,2,9,-7,-2,8,-6,1,9,2,-9,-7,7,7,3,-2,8,-4,-5,-3,-8,10,-7,6,1,3,-2,-6,-4,-2,2,7,-6,-8,-4,8,10,-9,-9,5,4,1,-8,6,10,9,10,2,9,-6,1,-8,-2,-9,10,2,-2,2,9,-4,-6,9,-10,-3,-4,-5,-5,-5,-8,1,-10,3,-5,4,3,-1,10,6,-4,3,9,1,9,-2,-4,-6,-5,8,4,-4,-9,-7,-6,1,1,5,1,6,6,8,3,6,-3,-8,4,5,6,2,-4,-1,8,6,4,1,4,-1,3,4,10,2,-5,-9,6,2,-6,-6,-9,-6,-6,6,-4,8,-4,3,6,2,-2,-2,-2,-10,-7,7,-9,-10,7,7,-3,-1,9,3,-1,7,-5,4,5,-8,-10,-8,-7,8,-2,-9,1,-2,-6,-4,-9,10,1,-3,-8,7,-7,9,-3,10,-1,10,1,-10,8,-3,6,3,9,-4,-9,5,7,-10,10,-8,8,-10,-2,5,-6,-7,4,-2,5,2,-8,-10,2,5,-9,-2,1,-4,-4,-2,-7,-7,-10,8,4,1,-8,6,10,-3,-4,-4,8,-7,8,5,10,-8,10,10,-7,-5,-4,4,-2,-5,-3,1,-10,4,-10,3,10,4,9,-5,9,-1,2,-8,-4,1,3,-9,-2,9,1,-4,5,-2,-2,-3,8,3,-1,4,-6], dtype = "uint32")#candidate|11037|(486,)|const|uint32
call_11036 = relay.TupleGetItem(func_4650_call(relay.reshape(const_11037.astype('uint32'), [6, 9, 9]), relay.reshape(const_11037.astype('uint32'), [6, 9, 9]), relay.reshape(var_11012.astype('float64'), [128,]), ), 2)
call_11038 = relay.TupleGetItem(func_4654_call(relay.reshape(const_11037.astype('uint32'), [6, 9, 9]), relay.reshape(const_11037.astype('uint32'), [6, 9, 9]), relay.reshape(var_11012.astype('float64'), [128,]), ), 2)
bop_11041 = relay.power(var_10961.astype('float32'), var_10946.astype('float32')) # shape=(8, 11, 8)
output = relay.Tuple([bop_10962,call_10976,var_10977,const_10978,var_10987,bop_10990,bop_10997,call_11003,var_11004,var_11011,var_11012,bop_11019,call_11024,call_11026,const_11027,const_11028,call_11036,const_11037,bop_11041,])
output2 = relay.Tuple([bop_10962,call_10979,var_10977,const_10978,var_10987,bop_10990,bop_11000,call_11005,var_11004,var_11011,var_11012,bop_11022,call_11025,call_11029,const_11027,const_11028,call_11038,const_11037,bop_11041,])
func_11044 = relay.Function([var_10946,var_10961,var_10977,var_10987,var_10989,var_11004,var_11011,var_11012,], output)
mod['func_11044'] = func_11044
mod = relay.transform.InferType()(mod)
var_11045 = relay.var("var_11045", dtype = "uint64", shape = (8, 11, 1))#candidate|11045|(8, 11, 1)|var|uint64
var_11046 = relay.var("var_11046", dtype = "uint64", shape = (8, 11, 8))#candidate|11046|(8, 11, 8)|var|uint64
var_11047 = relay.var("var_11047", dtype = "int64", shape = (160,))#candidate|11047|(160,)|var|int64
var_11048 = relay.var("var_11048", dtype = "int64", shape = (700,))#candidate|11048|(700,)|var|int64
var_11049 = relay.var("var_11049", dtype = "uint64", shape = (8, 11, 8))#candidate|11049|(8, 11, 8)|var|uint64
var_11050 = relay.var("var_11050", dtype = "int64", shape = (96,))#candidate|11050|(96,)|var|int64
var_11051 = relay.var("var_11051", dtype = "float32", shape = (390, 2))#candidate|11051|(390, 2)|var|float32
var_11052 = relay.var("var_11052", dtype = "float64", shape = (128,))#candidate|11052|(128,)|var|float64
output = func_11044(var_11045,var_11046,var_11047,var_11048,var_11049,var_11050,var_11051,var_11052,)
func_11053 = relay.Function([var_11045,var_11046,var_11047,var_11048,var_11049,var_11050,var_11051,var_11052,], output)
mutated_mod['func_11053'] = func_11053
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11071 = relay.var("var_11071", dtype = "bool", shape = ())#candidate|11071|()|var|bool
const_11072 = relay.const([[[True,True,True,False,True,True,True,False,True,False,True,False,False,False,True,True],[False,True,False,False,True,False,True,True,True,False,False,True,True,False,False,False],[True,True,False,True,True,False,True,False,False,False,True,True,False,False,False,True]],[[False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,False],[True,True,True,False,True,True,False,True,True,True,False,False,False,True,True,False],[True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False]],[[True,True,False,False,False,True,True,False,False,False,False,False,True,True,False,False],[True,True,True,True,True,True,False,True,True,True,True,True,True,True,True,False],[False,False,False,True,True,False,True,True,False,True,False,True,False,False,True,True]],[[False,False,False,True,False,False,False,True,False,True,False,True,False,False,False,True],[False,False,False,True,False,True,False,False,False,False,True,False,True,True,True,True],[True,False,False,True,False,False,True,False,False,True,False,False,True,False,True,True]],[[False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,True],[False,True,True,False,False,False,True,False,True,True,False,True,True,False,False,True],[True,True,False,False,False,False,False,True,True,True,False,True,True,True,False,True]],[[True,True,True,True,True,False,True,True,True,True,False,False,True,False,False,True],[True,False,True,True,False,True,True,True,False,True,False,True,False,True,False,True],[False,False,False,False,False,True,True,False,True,True,False,False,True,False,True,True]],[[True,False,False,True,False,True,True,False,False,True,False,True,False,False,False,True],[False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True],[False,False,False,False,True,True,False,False,True,False,True,True,True,True,False,True]]], dtype = "bool")#candidate|11072|(7, 3, 16)|const|bool
bop_11073 = relay.logical_and(var_11071.astype('bool'), const_11072.astype('bool')) # shape=(7, 3, 16)
output = bop_11073
output2 = bop_11073
func_11079 = relay.Function([var_11071,], output)
mod['func_11079'] = func_11079
mod = relay.transform.InferType()(mod)
mutated_mod['func_11079'] = func_11079
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11080 = relay.var("var_11080", dtype = "bool", shape = ())#candidate|11080|()|var|bool
func_11079_call = mutated_mod.get_global_var('func_11079')
call_11081 = func_11079_call(var_11080)
output = call_11081
func_11082 = relay.Function([var_11080], output)
mutated_mod['func_11082'] = func_11082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9389_call = mod.get_global_var('func_9389')
func_9391_call = mutated_mod.get_global_var('func_9391')
call_11086 = func_9389_call()
call_11087 = func_9389_call()
func_10469_call = mod.get_global_var('func_10469')
func_10470_call = mutated_mod.get_global_var('func_10470')
call_11132 = relay.TupleGetItem(func_10469_call(), 2)
call_11133 = relay.TupleGetItem(func_10470_call(), 2)
func_10540_call = mod.get_global_var('func_10540')
func_10542_call = mutated_mod.get_global_var('func_10542')
call_11137 = relay.TupleGetItem(func_10540_call(), 1)
call_11138 = relay.TupleGetItem(func_10542_call(), 1)
func_11044_call = mod.get_global_var('func_11044')
func_11053_call = mutated_mod.get_global_var('func_11053')
const_11165 = relay.const([1,3,-9,-1,-8,1,4,5,9,10,-10,-8,9,4,-1,8,-3,9,-9,10,-7,-9,8,-7,-7,-2,1,7,7,-4,2,-10,4,-8,-2,-10,-1,9,5,6,-2,9,10,5,-7,6,10,4,-5,-9,-1,7,-8,-1,4,-6,-10,2,-3,9,-6,9,1,2,-8,-5,9,-10,10,-1,3,-1,-4,-2,9,-7,6,-1,-1,-3,3,7,1,9,3,4,-9,6], dtype = "uint64")#candidate|11165|(88,)|const|uint64
const_11166 = relay.const([10,-9,1,5,10,-4,-5,4,8,-1,7,-9,9,-9,1,3,3,10,-7,5,-1,4,-5,9,-6,-10,-4,5,7,8,-9,1,5,6,-6,-1,10,-2,4,8,-2,4,-9,9,2,-8,-10,-4,10,-7,1,-1,3,-5,7,-8,4,-6,10,3,-5,-4,-9,10,-10,-4,-4,1,-10,-8,-2,7,8,-10,-9,2,-3,-10,7,-2,6,-10,-2,-2,7,-1,-6,-6,-2,-3,-1,-6,3,9,-6,1,-6,4,9,-2,4,7,4,4,-2,-6,4,-7,7,-1,6,7,-10,-4,7,-7,-9,-10,-2,8,3,-6,7,-6,-1,9,6,1,-7,6,1,4,2,5,-8,7,-9,10,6,2,2,5,9,5,3,7,-7,-3,5,-4,-1,8,-3,5,2,-7,1,4,9,6,-3,5,-6,-10,8,-7,4,-10,2,6,-5,10,-4,7,-4,-3,-8,6,9,-6,-1,-6,8,1,1,6,10,-1,-10,6,-3,-10,9,4,5,5,-5,-2,6,3,-1,-3,-4,-5,-7,10,-4,-1,-8,1,7,1,6,6,-7,1,-7,10,3,8,8,7,8,-5,3,2,-3,-3,-4,-2,8,-10,-10,-10,6,2,-6,8,-7,10,10,-3,3,-3,-4,10,10,1,-8,6,9,-2,7,8,-2,7,10,-6,-5,-2,5,3,1,9,4,-5,-1,5,6,5,2,1,-1,7,-7,-5,2,-8,-1,-2,2,8,-6,-3,-6,10,2,2,-10,7,9,-10,1,5,6,-9,-7,-4,-7,5,7,3,-7,-3,3,6,4,-6,5,9,9,2,2,-10,2,4,1,9,4,6,-1,-1,10,10,-7,9,-6,5,-6,8,-10,-9,2,10,-9,-3,-1,-5,-2,-6,-5,-6,-5,-8,-7,1,9,-8,-8,-6,7,7,-4,8,-9,-4,9,-7,2,-7,4,-6,-8,5,-5,10,2,9,-2,-1,-9,-7,-6,5,2,7,-2,8,-7,5,-3,1,2,1,-7,5,9,6,-6,5,5,-3,-5,6,-1,-6,-5,2,-9,1,7,-1,10,4,-10,-6,-3,3,-8,-3,-9,-7,-6,-4,-2,-8,-5,-5,-6,-10,2,-1,-5,-6,-3,-3,-8,1,-9,-8,1,10,-4,-10,-6,9,10,-4,4,7,-10,4,-3,9,-1,1,-2,-10,5,-9,4,-10,9,7,-5,3,-7,3,-3,1,9,7,-2,2,-9,-10,-10,-5,-6,2,-9,9,3,7,4,1,-10,9,-7,9,1,-7,10,9,6,-9,6,2,-10,7,-9,-9,9,10,8,-2,-1,-1,-2,-6,2,3,3,-9,-8,-9,7,5,6,3,-7,5,5,8,8,6,-1,-10,-8,-9,7,1,-6,1,-4,-7,1,-10,10,4,3,-10,10,-1,6,5,8,9,-2,7,7,8,8,6,7,-7,-3,5,4,-4,-5,-6,-4,-8,-7,2,-9,-4,10,6,-4,-8,-10,2,10,-8,2,-10,1,3,-5,4,7,2,1,-3,-2,2,3,-10,10,9,-4,-8,-7,4,6,-7,-7,-10,-8,3,-3,4,1,-10,3,-10,-8,-3,9,-8,-7,-10,3,-3,5,3,-3,6,2,-4,5,6,-4,8,-8,2,3,-2,-4,-9,2,-6,10,10,8,-9,-8,6,-3,7,3,9,-1,-4,5,-1,5,4,9,-7,10,10,2,1,-2,-1,8,-3,-10,-2,-8,3,-2,9,3,-8,6,10,-4,7,9,-1,5,-4,8,-1,-2,-2,-3,6,10,10,2,4,-1,9,9,7,-3,1,10,2,6,6,6,5,6,10,5,3,8,-10,-4,-1,9,-10,5,2,-5,-1,2,7], dtype = "uint64")#candidate|11166|(704,)|const|uint64
const_11167 = relay.const([-5,4,4,10,7,2,-10,-3,1,4,7,4,10,-4,-4,-5,-3,5,-9,3,6,7,6,10,-5,-3,-4,10,2,3,1,3,7,3,-2,3,10,7,9,3,10,8,-2,-7,4,-8,-8,-1,10,2,-10,1,-6,-8,-4,10,-7,-7,7,-3,6,10,-6,-10,4,-10,6,4,10,6,5,9,2,-2,1,-4,1,-2,4,3,3,-2,-5,-10,10,-8,-10,6,-2,-3,-6,-2,10,3,-8,-1,2,-10,2,1,-6,7,-5,-7,3,-1,-10,7,-7,-5,-9,-5,-2,7,7,-5,6,-8,-7,1,9,-9,5,9,8,-8,-10,7,2,-5,-1,-1,-2,-9,3,9,2,-9,5,10,1,10,4,5,-1,-4,-1,-9,-1,-4,-6,6,-2,-6,2,2,-5,7,10,-5], dtype = "int64")#candidate|11167|(160,)|const|int64
var_11168 = relay.var("var_11168", dtype = "int64", shape = (700,))#candidate|11168|(700,)|var|int64
var_11169 = relay.var("var_11169", dtype = "int64", shape = (1, 96))#candidate|11169|(1, 96)|var|int64
var_11170 = relay.var("var_11170", dtype = "float32", shape = (780,))#candidate|11170|(780,)|var|float32
const_11171 = relay.const([-4.946192,-2.571298,-9.728689,1.100752,3.256167,5.017585,4.390757,-3.149258,-5.925802,-2.068645,4.152809,-9.874023,-0.380775,5.472524,2.758434,-5.250439,8.245034,-9.074504,3.708783,-2.256633,2.901753,-0.163342,-5.880747,-9.154167,-2.106355,0.264481,4.649405,2.594135,0.755668,0.064088,3.254860,-6.240884,-4.874351,-8.798097,7.665728,-0.435735,-2.763091,2.360323,-7.722881,0.623580,-6.692789,-0.897461,-0.277898,-8.718755,-8.171077,-5.001177,8.689261,6.405788,3.103414,8.853465,-6.616120,-3.812989,8.931053,2.669586,9.566374,-0.133387,2.498736,4.345059,-9.352870,-8.667466,0.358399,-5.307662,6.054729,-9.250180,5.584528,4.552657,-4.093431,-9.318406,0.070268,9.829797,-8.737994,5.715485,-2.614710,-2.198713,-1.747809,3.656041,2.065030,-8.381537,9.190303,-1.253470,8.339336,-1.060307,6.786507,1.275358,-8.085583,8.660515,-4.656090,3.664352,7.393438,3.677874,-2.684350,3.649896,-0.124650,-4.498901,-5.135917,-5.431278,1.961156,5.979353,7.954901,0.093112,5.213189,-7.280582,3.610348,-0.184502,7.513044,-6.650924,3.977932,-6.720018,-8.251102,6.926455,2.600169,-9.814251,7.169719,9.996808,-4.986172,-5.339529,6.264026,9.360614,-6.970072,8.602202,1.614991,2.190611,5.044432,-9.662767,1.647438,-9.418504,4.348652,1.542246], dtype = "float64")#candidate|11171|(128,)|const|float64
call_11164 = relay.TupleGetItem(func_11044_call(relay.reshape(const_11165.astype('uint64'), [8, 11, 1]), relay.reshape(const_11166.astype('uint64'), [8, 11, 8]), relay.reshape(const_11167.astype('int64'), [160,]), relay.reshape(var_11168.astype('int64'), [700,]), relay.reshape(const_11166.astype('uint64'), [8, 11, 8]), relay.reshape(var_11169.astype('int64'), [96,]), relay.reshape(var_11170.astype('float32'), [390, 2]), relay.reshape(const_11171.astype('float64'), [128,]), ), 3)
call_11172 = relay.TupleGetItem(func_11053_call(relay.reshape(const_11165.astype('uint64'), [8, 11, 1]), relay.reshape(const_11166.astype('uint64'), [8, 11, 8]), relay.reshape(const_11167.astype('int64'), [160,]), relay.reshape(var_11168.astype('int64'), [700,]), relay.reshape(const_11166.astype('uint64'), [8, 11, 8]), relay.reshape(var_11169.astype('int64'), [96,]), relay.reshape(var_11170.astype('float32'), [390, 2]), relay.reshape(const_11171.astype('float64'), [128,]), ), 3)
uop_11180 = relay.tan(var_11170.astype('float64')) # shape=(780,)
output = relay.Tuple([call_11086,call_11132,call_11137,call_11164,const_11165,const_11166,const_11167,var_11168,var_11169,const_11171,uop_11180,])
output2 = relay.Tuple([call_11087,call_11133,call_11138,call_11172,const_11165,const_11166,const_11167,var_11168,var_11169,const_11171,uop_11180,])
func_11192 = relay.Function([var_11168,var_11169,var_11170,], output)
mod['func_11192'] = func_11192
mod = relay.transform.InferType()(mod)
var_11193 = relay.var("var_11193", dtype = "int64", shape = (700,))#candidate|11193|(700,)|var|int64
var_11194 = relay.var("var_11194", dtype = "int64", shape = (1, 96))#candidate|11194|(1, 96)|var|int64
var_11195 = relay.var("var_11195", dtype = "float32", shape = (780,))#candidate|11195|(780,)|var|float32
output = func_11192(var_11193,var_11194,var_11195,)
func_11196 = relay.Function([var_11193,var_11194,var_11195,], output)
mutated_mod['func_11196'] = func_11196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10012_call = mod.get_global_var('func_10012')
func_10014_call = mutated_mod.get_global_var('func_10014')
call_11206 = func_10012_call()
call_11207 = func_10012_call()
output = relay.Tuple([call_11206,])
output2 = relay.Tuple([call_11207,])
func_11222 = relay.Function([], output)
mod['func_11222'] = func_11222
mod = relay.transform.InferType()(mod)
output = func_11222()
func_11223 = relay.Function([], output)
mutated_mod['func_11223'] = func_11223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9971_call = mod.get_global_var('func_9971')
func_9973_call = mutated_mod.get_global_var('func_9973')
call_11319 = relay.TupleGetItem(func_9971_call(), 0)
call_11320 = relay.TupleGetItem(func_9973_call(), 0)
output = call_11319
output2 = call_11320
func_11336 = relay.Function([], output)
mod['func_11336'] = func_11336
mod = relay.transform.InferType()(mod)
mutated_mod['func_11336'] = func_11336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11336_call = mutated_mod.get_global_var('func_11336')
call_11337 = func_11336_call()
output = call_11337
func_11338 = relay.Function([], output)
mutated_mod['func_11338'] = func_11338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9821_call = mod.get_global_var('func_9821')
func_9823_call = mutated_mod.get_global_var('func_9823')
call_11358 = relay.TupleGetItem(func_9821_call(), 0)
call_11359 = relay.TupleGetItem(func_9823_call(), 0)
func_9072_call = mod.get_global_var('func_9072')
func_9076_call = mutated_mod.get_global_var('func_9076')
var_11371 = relay.var("var_11371", dtype = "int8", shape = (1, 1584))#candidate|11371|(1, 1584)|var|int8
const_11372 = relay.const([[-10,-7,7,-2,4,-4,-6,-4,-2,-4,-7,-5,-7,-3,2,-7,2,-1,-10,4,9,-6,5,-2,5,7,-10,-8,-1,1,-2,6,-6,5,-2,-2,6,-5,-8,-7,-4,4,9,3,2,-3,-4,-8,-8,8,3,10],[-8,10,6,8,4,-4,-5,-2,2,-1,6,9,-6,5,-7,-9,-4,2,6,9,-3,2,-1,6,2,10,-1,-2,-5,6,-6,8,4,9,9,2,3,1,8,7,-7,8,5,-2,-8,2,-5,-3,10,1,-2,-3]], dtype = "uint64")#candidate|11372|(2, 52)|const|uint64
call_11370 = relay.TupleGetItem(func_9072_call(relay.reshape(var_11371.astype('int8'), [16, 9, 11]), relay.reshape(const_11372.astype('uint64'), [104,]), ), 3)
call_11373 = relay.TupleGetItem(func_9076_call(relay.reshape(var_11371.astype('int8'), [16, 9, 11]), relay.reshape(const_11372.astype('uint64'), [104,]), ), 3)
const_11386 = relay.const([[-9,-10,9,-9,-1,-9,-5,-10,-1,-7,-3,6,1,8,1,-3,-3,3,5,10,3,7,-4,4,-7,4,7,-5,1,-8,-5,3,3,1,5,4,-1,-6,7,2,3,1,8,-10,3,-1,8,6,9,-9,-9,4,5,6,-10,-5,8,6,-6,-7,6,-7,2,-8,-1,7,2,-1,-1,-1,7,5,4,3,10,8,8,2,9,2,7,-9,1,5,8,3,2,3,1,-5,-6,9,-8,-5,-1,8,-8,-6,-8,-1,5,-4,-5,-2,-2,9,9,1,9,4,-5,-9,-1,4,-3,6,10,-4,6,1,-2,8,-8,-9,-7,10,-7,-6,1,-8,4,6,-5,-1,6,-2,2,-10,-9,1,3,-7,-10,9,-1,-8,4,-1,4,-1,-3,3,-3,10,-3,7,2,-6,-4,-6,5,-4,-9,7,8,-8,-3,8,3,7,1,-1,7,-7,-4,8,6,8,8,1,-7,6,-7,5,4,-7,5,10,-7,3,-10,3,-4,3,8,7,-10,-3,-7,10,-2,8,5,9,7,-3,4,4,7,-9,1,10,9,10,-4,1,7,5,-9,4,-6,-4,-3,8,6,-6,-5,8,-10,2,-1,1,-4,10,9,-1,10,-7,4,4,-7,4,-7,-8,3,10,-4,-1,-7,4,-4,-5,10,9,9,3,2,-8,2,-5,-5,-8,-7,-5,-2,4,-4,2,1,10,-3,-6,2,5,7,6,8,-10,5,-1,6,4,-4,-6,8,-5,-10,-7,4,-4,-5,-4,8,-7,-9,1,4,7,-2,3,10,-2,-8,3,-2,-2,9,7,9,-10,2,6,-7,-6,-8,10,8,8,-2,9,-10,-10,-8,-6,-2,-7,-10,-4,8,9,-10,3,10,7,6,5,-8,5,-3,-3,1,-3,3,-9,7,6,-6,7,-4,-9,10,-4,-10,-6,-2,-10,-9,6,-8,2,3,-3,8,-9,4,-3,-2,5,-8,5,-10,-4,5,10,5,1,1,-8,-5,1,3,-6,-1,-6,-1,-10,5,-9,-2,-6,-2,-4,10,-2,-9,4,9,8,2,10,5,4,3,-10,4,-3,-2,1,-1,9,-8,-3,-5,-8,4,-10,-7,9,-10,7,5,-4,7,1,8,9,4,-2,4,6,7,9,2,6,-6,-8,2,-10,-7,8,-2,1,8,7,-3,-10,-10,-6,6,4,2,-5,-4,-3,7,-6,8,-6,-3,8,7,8,-6,8,4,-6,-4,1,5,10,-7,2,6,-2,3,4,-8,7,-5,-6,7,-7,2,-10,4,-10,6,6,3,8,-10,8,-5,3,-2,-8,2,1,-5,-10,10,-2,5,-6,-8,4,9,7,9,-3,-9,-1,8,5,-4,2,7,10,-4,10,-3,1,8,-7,7,9,10,-7,3,-2,6,-1,-8,5,-9,5,1,5,3,8,1,6,-5,-10,4,5,5,-3,9,4,-4,2,-6,-7,-1,1,-10,3,-1,-6,-4,4,-1,2,-4,-7,-7,6,-6,-2,-7,8,1,7,-4,-6,-7,10,7,5,-10,2,1,-1,-2,-5,8,-10,-5,-3,-1,-1,-9,-6,5,-10,6,-2,-1,-6,-10,3,6,-8,-10,4,-2,-2,6,-9,-9,-5,2,-4,2,5,-2,-1,2,1,-2,3,-10,7,3,8,-7,-7,-2,-2,-2,8,5,-4,3,-9,10,1,9,9,-3,3,2,1,-2,10,-9,-10,2,-3,7,9,6,-1,-7,-6,-7,-4,-1,-3,-7,-7,-3,-3,8,7,-8,7,8,8,6,10,2,-2,-9,4,-10,-2,-7,-8,-1,-4,-5,2,7,-3,-3,-6,-6,-6,7,-1,-2,-2,10,-7,8,9,-10,-9,2,-2,4,9,-8,7,8,4,2,10,7,2,-9,-1,5,-8,1,-3,-7,6,-1,3,-2,-7,5,6,-5,1,3,-2,1,5,-9,-8,-3,6,-7,3,-7,4,8,-8,-2,8,9,4,-10,-6,9,9,-8,6,-3,-7,-9,-4,2,-1,-1,8,9,-1,-10,1,-1,-1,-5,-6,-8,-1,-3,6,-9,8,8,-9,7,-7,9,6,8,10,-4,4,-9,-9,-1,8,3,-9,3,9,10,-8,-6,8,2,9,-6,10,-9,-10,5,10,5,1,9,-9,-8,7,-9,-9,-3,-7,-3,-6,7,3,-3,1,4,7,2,2,1,5,6,-1,4,10,6,-10,-10,-4,-7,1,7,-5,-4,-2,-8,-4,-10,-3,-4,2,9,-4,6,-1,5,6,-2,4,10,10,10,4,1,-4,10,-7,-1,-7,-9,2,2,7,-1,-1,-4,10,-5,5,2,10,-7,-3,8,-7,-10,-2,-1,8,1,-2,10,-8,-6,10,-2,10,-9,-10,-4,-5,-10,-7,-7,10,6,-10,5,3,3,-9,-8,-6,3,4,-7,-2,-6,-5,-5,9,-10,-10,-1,6,8,10,-4,3,-4,-7,-3,-7,9,10,-8,7,-9,3,-2,3,2,-8,-2,8,-7,9,3,7,-8,5,-7,4,-1,-8,-3,7,-6,6,5,6,-8,-9,8,10,-6,-2,9,-3,-2,-5,1,4,4,-5,-3,-10,3,9,-9,9,-6,-10,-6,5,-1,-7,-2,-2,-9,5,8,-3,7,4,3,-1,4,-5,-2,2,-3,-8,8,-1,-6,8,-4,-7,-3,8,6,-8,-1,-3,-7,10,4,5,7,8,4,9,7,2,-9,-9,-10,-7,1,-7,5,-8,-5,-10,1,-8,-3,5,-5,3,7,-10,8,1,-7,8,6,-2,9,5,-9,-4,-2,-4,8,-4,7,6,-1,-7,-3,-2,-10,-10,-4,8,-8,6,3,-10,7,-8,7,-2,-8,9,-1,-2,5,10,9,-5,-2,8,10,8,1,2,9,6,-10,-3,-8,-3,-9,4,-3,-4,9,2,-1,7,-6,7,2,7,2,6,-6,-3,-4,-2,6,-1,1,4,-2,1,-1,-7,4,8,5,6,-3,-8,-5,-3,8,6,5,-1,-3,9,1,-9,-2,-2,1,10,-6,2,-9,-2,6,6,10,-2,-10,-6,-7,-7,-4,-7,9,-10,4,-8,-4,9,10,5,5,-2,-6,-7,5,-5,-4,-3,-10,8,4,8,-8,-2,-4,-8,-2,-5,1,5,-5,7,3,-2,5,-10,8,9,-6,-8,-5,1,-9,8,-10,5,3,7,-2,-10,1,-5,7,8,-4,4,-3,9,-3,9,9,-9,8,8,-4,-8,-8,5,9,-9,-10,-4,-7,-4,-1,-4,-8,5,-8,5,-3,1,6,-7,1,-9,8,-3,-8,7,-9,2,-3,-5,-9,-5,3,-6,-1,-5,-10,3,-8,4,5,-5,-10,4,-3,-6,-9,-9,-6,5,-7,-2,-5,-4,3,-8,9,3,-2,5,-5,-2,-2,1,3,7,-4,-4,6,-3,7,-7,7,-6,-6,6,1,-10,-6,-1,6,-8,9,-1,-1,-5,-6,-3,-2,-1,1,2,5,5,4,10,-5,10,2,2,6,2,-8,4,-7,8,4,9,5,-3,-9,-7,-3,2,-8,3,-10,3,-1,9,6,7,9,-1,8,-3,9,3,7,-1,10,7,8,-9,1,-8,-5,-6,9,-1,3,5,-6,-8,-6,7,3,-7,6,-2,3,-3,-5,5,8,4,-3,-5,-1,-1,-2,-4,-4,5,-8,6,-7,2,-8,9,-6,-7,-3,-8,-3,-1,7,1,-8,-1,3,8,4,3,8,8,-6,2,5,-4,-9,5,-2,-7,-3,7,-4,8,-6,2,5,-7,-4,10,9,10,-1,-3,-3,1,7,-2,4,2,2,-3,5,8,9,1,-4,-5,7,-5,-8,-8,6,-7,1,8,7,-10,1,2,-8,9,5,6,-4,2,-1,7,10,8,7,-5,-7,-5,-3,-10,1,4,5,-7,2,9,10,1,-1,-3,4,1,3,2,6,-6,1,-2,-9,-5,10,4,-9,-2,-3,9,3,9,-7,-3,-2,9,-10,-2,-1,1,1,1,-10,10,-10,-1,10,-10,-2,9,3,-1,-2,1,10,-7,7,10,-3,-3,9,7,-5,-6,1,2,5,4,-6,3,6,4,-7,1,5,4,-7,3,9,10,7,1,-5,9,1,7,1,-1,6,-10,-5,6,9,-5,-1,8,6,7,-6,3,10,5,1,-10,5,1,8,3,9,6,2,5,5,9,2,-1,2,-4,9,4,-5,7,2,-3,-5,-8],[-4,4,7,-1,7,-1,-7,4,8,3,2,-9,9,3,10,10,6,-3,9,-4,-7,5,-10,3,8,-3,5,5,3,-7,-1,9,5,2,8,-10,3,-1,8,-2,10,-7,9,-9,9,-9,7,10,10,5,8,-4,-5,-5,-1,-9,6,5,7,-2,-4,-9,-7,-2,-10,6,6,-10,-7,4,-6,8,-1,9,-1,-6,-10,-5,-3,5,-5,1,2,-4,8,6,3,6,-7,3,6,2,-6,4,-3,5,3,-1,9,4,5,1,-2,-1,-4,6,6,7,-4,-3,1,6,4,-8,5,10,2,8,-8,4,5,-1,7,-5,8,-9,-6,4,-4,-2,-4,1,-4,9,-9,-6,-10,-9,7,-9,2,6,3,-1,-2,-10,-5,-2,1,5,-2,-6,9,3,-9,-3,-8,-2,-8,-10,6,-7,-10,-2,-10,-2,-9,7,4,-6,-2,-6,5,-3,-1,-3,2,7,-1,-4,-9,5,5,-6,2,3,-8,-4,9,7,-2,-6,-4,-6,-6,-8,-7,1,-5,-2,-10,2,-4,-2,-6,2,3,2,-2,2,1,1,5,1,-2,8,5,-1,-8,3,-3,-4,4,-4,6,-2,-8,-6,-8,2,7,-1,1,3,-4,5,-1,4,7,-2,3,-2,9,-1,-5,7,2,4,8,5,4,-9,-1,2,8,10,8,-2,10,-5,6,-4,-10,4,-8,1,-8,-8,-3,6,-2,5,-8,10,10,-10,-9,-7,-5,-10,9,-4,4,-6,10,-2,-8,-4,-4,2,-2,-2,-7,2,9,4,5,-5,-7,8,10,-10,7,-3,-10,6,-7,5,-9,-7,-2,6,-6,6,9,9,-4,-8,-4,-3,-7,-8,-9,-10,1,7,-8,-1,-4,-6,-3,-2,5,-9,2,3,2,6,6,2,-3,1,3,-6,8,-10,6,-7,4,1,-9,5,-6,5,-7,9,5,3,-3,5,-8,4,6,6,9,-6,-2,10,-2,-1,-1,8,4,5,8,-9,-4,-4,-4,10,10,2,7,-1,8,-7,-4,-8,-6,-4,-5,-5,-5,1,9,-5,-9,10,-10,2,-3,-8,4,5,-10,-8,-5,-4,-2,-2,-8,2,3,-3,5,2,6,6,7,-4,4,2,5,-10,4,-9,-10,-10,-5,7,-10,-9,-10,-6,8,-5,-2,-2,4,-5,5,-1,-7,9,3,3,4,10,6,-2,-8,9,-6,8,-6,-8,-6,-7,1,-4,-1,-10,8,-10,7,-3,10,6,4,6,4,-2,-3,3,4,-8,6,-9,-9,-1,2,3,5,-8,3,10,7,8,-2,6,10,-10,-4,-1,7,-9,-3,10,10,-10,1,-2,3,-10,3,-2,10,9,10,-6,1,7,-6,5,-7,2,-4,-6,-4,-3,-10,10,-6,5,1,6,-5,-8,-4,-10,8,8,-4,-9,9,-7,-9,-1,8,-3,-5,2,6,4,3,-8,6,2,-10,-10,5,10,-4,10,-6,2,-4,3,6,-9,-3,-9,4,-1,-4,-3,-10,-4,-3,10,-7,-1,7,-2,-3,-2,-9,7,4,-8,-3,-7,4,-9,6,-6,-4,-8,3,3,-3,4,10,7,-9,2,4,5,1,-4,-5,-3,-9,9,-1,8,1,-7,-3,-3,-9,-4,-6,-2,-7,5,-9,1,7,10,6,5,-1,-6,-9,9,-6,1,-6,-9,1,4,-2,10,7,-1,-9,10,-1,4,-7,-5,8,7,1,4,1,4,5,5,1,6,-2,-9,3,2,8,5,5,9,-9,10,3,3,7,3,-6,9,5,3,-3,2,-2,7,-10,-5,-1,8,8,-5,1,-2,-7,7,9,2,4,-1,-2,6,-7,10,6,4,-1,-9,-5,1,10,-5,-9,8,2,2,2,-5,-8,6,3,10,-9,6,7,-7,5,-5,1,-10,7,-7,1,-7,-5,5,-5,9,1,9,3,7,7,6,9,9,9,4,-7,9,6,-9,-8,-6,-8,-8,-10,-10,-7,3,2,2,9,1,9,-10,-5,-7,-1,-3,7,-9,4,-3,6,9,-9,9,-10,-6,10,5,8,10,4,-8,3,-9,-7,-2,-8,10,5,-7,-2,4,-10,-9,1,-10,1,8,-5,4,9,6,-8,-3,8,6,5,-1,-8,-5,-10,-6,1,8,2,10,8,7,4,9,-1,1,-6,1,3,-5,-1,5,-4,9,-2,7,7,-6,-5,-3,1,-4,-4,-10,-1,1,5,-3,8,-5,3,2,8,-10,-4,-1,7,-9,10,-10,-4,4,-9,-8,-1,1,9,-5,-3,9,-10,-2,8,7,-3,-1,-10,-8,-2,-7,-1,10,-4,-6,1,-6,-8,5,-4,-3,9,-5,7,-9,-10,-5,-7,-3,-1,1,4,3,8,9,-10,8,-4,-2,6,3,10,-9,4,-1,8,-9,9,-8,9,10,8,3,-1,-7,6,3,10,2,-3,-1,5,5,1,3,-9,-9,3,10,-7,-2,-7,-7,-6,-2,-4,-10,-2,-2,-10,-3,10,-7,4,-8,4,-3,5,-9,1,-10,4,-1,-6,-1,10,7,-8,4,2,4,-1,1,7,9,-1,10,-10,6,-5,-4,3,-4,6,4,9,-5,4,-6,-8,-6,3,-6,6,1,-1,6,-6,4,10,1,-5,-10,4,8,1,9,-2,7,9,1,2,-3,-10,2,6,-7,-10,9,-3,4,-3,-7,9,2,1,9,3,-4,10,10,9,-4,6,-1,-10,-4,9,7,3,-10,-5,10,1,-10,1,-7,-1,9,6,-8,-6,-1,-4,-7,-10,-3,-3,6,6,7,7,-8,-4,-8,7,-9,10,10,-10,1,1,6,7,-10,-7,-10,10,5,-5,6,-10,-6,5,-6,-2,-5,-3,9,-5,2,-7,-8,-10,-2,-7,6,-3,2,8,-3,7,5,10,-7,-4,-9,-3,7,2,-8,-8,-8,9,-1,10,-7,-3,-4,-8,-10,-1,-3,-7,-8,2,8,2,-10,-10,8,-4,-4,9,2,8,-10,-2,-3,-5,-6,7,-8,-3,-10,9,10,4,2,1,-3,-7,-10,-7,-6,6,-1,9,1,-8,-5,-10,-2,-1,10,-2,3,-7,8,7,-8,7,5,-1,-6,-9,7,5,4,6,8,-8,-7,3,10,-9,-3,10,-10,4,9,6,1,-5,-9,-2,1,7,6,3,-2,-6,9,-4,-6,-5,-2,-1,4,9,-1,10,2,1,-1,-5,7,9,7,4,-2,10,-10,6,-9,9,5,-3,9,6,-8,-3,10,2,-5,-1,-5,-8,4,-1,8,-2,-1,3,-8,-10,-8,3,6,7,2,-10,-1,-2,-4,-7,-2,9,-5,-5,-9,-1,-9,7,8,1,-4,-6,9,9,10,-6,-6,-6,-7,-3,-6,-5,9,-4,-8,8,4,-8,-10,6,4,2,9,2,-1,-2,9,5,9,-6,2,2,6,1,-8,7,1,3,-9,3,10,-8,3,9,-1,-1,-7,-3,5,-10,-2,-7,6,10,5,-7,1,5,9,5,7,6,-1,6,2,-8,-2,-7,5,6,-3,4,-8,-7,3,6,-2,-3,-1,8,4,8,-1,4,2,-5,-3,-10,-9,8,1,-3,6,5,-4,1,-8,-4,3,6,-10,-2,-3,-5,-9,6,7,-2,-5,10,-7,9,-9,-8,-3,-8,7,-7,2,5,-3,3,10,2,-10,7,1,-5,-9,3,-7,-4,-10,-5,2,-6,-10,-4,-2,-8,-9,2,-10,-2,-9,-10,3,3,4,-8,9,-1,2,-1,-2,-1,-5,2,-9,4,-7,-6,-8,-8,8,-9,1,-6,-5,-9,10,-9,2,-10,-6,-1,-1,-5,-10,1,10,-5,-10,-4,-1,-4,-5,-6,2,10,-2,-1,9,-2,-3,-7,3,-4,6,-7,-2,-8,2,6,9,4,-6,-8,2,-6,-3,8,6,8,-9,-6,8,8,7,-5,-9,-2,3,3,-8,-2,1,-8,1,8,-2,1,-10,9,-4,-4,3,-9,5,-6,9,5,-10,-9,-10,-1,1,10,2,9,-6,-8,-10,-7,-8,-10,-1,-1,8,1,6,10,-5,-9,2,4,2,6,10,-8,6,-7,3,-9,-7,10,-4,1,3,-8,-9,-4,4,-4,5,3,10,-10,8,-5,-2,8,-7,7,8,-6,8,9,-2,-6,-9,-8,-9,-3,2,1,4,9,-8,-1,2,5,-9,-3,1,6,8,-8,-4,3,-10,-9,-6,6,-7,-2,6,2,-4,-4,2],[-7,-6,7,-6,8,-7,-10,7,6,-3,-6,8,2,-1,-8,-6,3,-8,2,1,1,6,10,5,9,4,7,-1,3,5,7,6,5,-10,-9,-6,-8,2,-8,-4,7,2,2,-4,9,6,-3,6,6,7,-7,-8,7,-3,-8,-4,4,8,-3,-1,-2,-8,1,4,-2,-5,-6,-5,10,10,4,-3,-3,-2,-3,-1,-2,-1,5,-10,-6,7,5,-5,-10,5,2,-10,-10,1,9,-8,3,2,5,-6,-7,5,4,1,6,8,3,-2,4,6,-7,2,4,-9,-8,-1,7,10,-7,-5,-4,-10,-1,-10,8,-6,-10,9,4,6,3,10,-5,-1,-9,5,9,2,10,7,-10,4,-3,6,1,3,1,-5,-2,-9,5,4,-9,-6,-8,8,-5,-8,7,8,-5,-5,-4,3,9,7,-3,-7,-7,3,5,-3,-4,-3,-6,1,3,8,-6,-3,2,-8,1,1,-10,3,-6,10,-7,2,-5,5,-9,-5,-5,-2,6,-5,-5,3,1,-3,-2,8,5,5,5,7,-4,-10,9,-9,2,-2,-10,-4,-4,-9,-3,8,-9,9,-2,9,-9,4,-3,-4,6,-3,4,-9,-8,5,-5,9,-5,-7,5,2,5,1,-8,10,-1,-2,2,-3,8,-10,-10,-7,7,1,-10,-5,10,10,9,4,4,-6,5,-7,-7,8,-5,-2,10,4,8,-4,5,6,7,5,4,-10,-1,4,5,5,8,2,-3,-10,8,-9,2,-7,3,-2,3,6,2,-6,-3,-7,-10,-10,7,-6,-6,6,-10,8,-4,10,6,-5,-9,3,2,2,-9,7,-2,1,-7,9,9,-1,-10,2,1,4,8,2,9,4,-6,-6,-5,10,5,1,7,-8,-7,4,-10,7,-10,-10,3,-1,-6,-9,5,4,9,5,-9,6,3,-3,-10,3,-1,1,4,5,8,-10,5,2,-9,-3,-9,-4,9,-7,8,-1,10,5,5,-5,-5,-7,-1,6,5,10,-8,-8,2,8,-7,10,-2,-5,-4,1,7,2,8,-8,9,8,-4,6,4,-5,4,10,10,-4,-6,-8,4,1,-9,-4,-8,-8,1,-8,10,5,1,-2,1,-7,-3,-9,4,9,-8,-2,5,9,-5,-10,10,-1,-3,2,-2,-10,-6,2,-9,-1,-3,-5,4,4,-1,-6,-10,-4,3,6,6,10,4,-2,-2,2,-8,4,1,1,10,4,6,2,3,5,-3,3,-7,-2,8,6,9,7,-8,1,-8,10,3,3,2,-7,-3,4,-5,-10,-8,-8,6,8,-4,4,4,-7,-7,-4,10,-4,2,-4,-4,-10,3,-3,3,-3,-8,10,10,-8,-10,4,6,3,-7,6,3,6,-4,-7,8,-6,6,10,-5,-10,3,-5,5,-6,6,4,8,7,8,-8,3,-7,-2,-4,-7,10,-10,8,2,8,6,9,-1,-5,-10,7,7,-2,-1,5,-1,-8,9,-8,10,1,5,1,6,-7,8,-2,10,-3,-2,-8,3,-6,4,5,10,-1,6,3,5,-10,5,-8,-10,5,1,-5,-1,-9,8,10,-10,5,2,-9,9,10,5,-1,2,5,1,-8,-4,9,10,10,-10,-5,-4,-9,-8,-8,-10,-6,-5,4,4,2,8,9,-3,-8,-5,-7,-9,-1,7,8,8,-10,6,1,-5,-9,4,-2,9,2,-3,1,7,-9,-1,2,2,2,-7,9,6,6,5,9,-8,-6,-1,-2,-10,3,-9,-1,-8,-10,-8,6,6,5,1,-5,-6,9,1,6,-2,5,5,-4,-10,9,-1,3,-8,-1,6,-8,-7,2,8,-9,8,-4,1,7,2,1,-2,3,5,-10,7,5,-7,-4,-4,7,-9,6,-1,-1,-8,6,-9,3,10,6,3,5,-8,-5,6,-6,-5,6,3,8,-10,-5,-3,4,2,-5,1,5,1,-4,3,1,-2,5,4,9,10,-4,2,10,-8,-1,5,10,5,2,-4,8,-9,3,10,9,8,5,-3,-6,-2,-2,2,-4,8,6,10,-9,-9,-2,4,9,7,4,2,3,-6,2,8,6,1,-7,-8,-10,9,-7,5,5,-1,4,-8,7,1,-5,-5,-5,4,9,-10,-10,3,4,-3,-2,9,-10,-4,-4,-6,5,1,-10,-2,9,-10,-3,-6,10,7,6,1,-4,2,-9,-6,-2,4,1,2,10,-1,-4,-3,8,8,7,-7,4,10,8,8,4,-3,-8,7,7,-2,-2,-5,6,-4,3,-3,-3,-10,10,2,-10,8,-9,5,-10,-7,3,-5,-7,1,2,-5,-8,7,-3,-1,-3,-10,-6,10,-5,10,-1,6,-6,6,-2,5,7,9,1,2,10,8,-8,-2,7,8,9,-6,2,4,-4,-3,9,1,-3,5,7,-9,-4,-6,5,9,-10,8,6,8,-1,10,-5,1,6,-1,-9,-5,-1,4,-7,-9,-5,-2,1,10,1,3,3,-3,-9,-1,5,3,-9,2,-9,6,10,-6,8,-4,-6,-6,-2,-7,3,3,-5,6,3,-3,-10,8,-7,-4,2,3,-6,6,-9,-1,2,2,10,3,-7,8,5,9,2,-6,-1,2,-9,-7,3,3,-4,5,5,7,-4,9,-3,-1,2,-9,8,2,10,-10,-9,-10,-7,7,3,-4,-1,8,1,-10,9,-6,3,-8,1,-7,10,3,10,-1,-6,-10,8,-2,9,2,5,7,-9,-10,3,-1,5,-10,6,10,8,8,9,-5,-3,-4,-8,-6,-6,-7,6,-1,4,7,-3,-9,-8,7,8,-4,2,1,1,-8,8,5,5,-6,-7,8,-2,3,5,-5,-3,-6,-9,6,6,8,-9,-9,-8,3,8,7,10,9,-1,10,5,8,5,-5,-8,-7,5,1,-9,-3,8,8,-2,-5,3,-7,-1,4,1,-7,2,5,-7,5,5,-6,9,-2,3,4,-3,4,-5,8,-10,4,8,-3,10,-3,-7,-7,-3,7,-6,-9,1,-3,-4,4,-7,-5,-10,9,6,2,-9,10,-7,7,10,-2,-1,-9,5,8,2,6,4,9,-5,3,-1,7,2,1,10,-4,8,8,7,-7,3,-10,-9,7,3,10,-5,-1,-3,-8,8,5,-3,3,-3,10,4,-1,2,-6,9,6,5,8,2,10,-8,-9,-10,-3,-1,-8,-5,-7,-8,10,1,9,5,-5,-5,-8,1,-4,-10,-5,9,7,4,-1,-8,-10,-6,6,-8,10,-7,-6,8,3,-8,10,-4,3,10,8,4,-7,-7,-4,6,-10,-6,3,-8,-3,-7,-4,-9,-6,-3,-5,4,-7,-6,10,9,-7,6,-1,8,-3,-7,5,5,3,10,3,1,-7,-3,1,6,-6,-7,9,1,10,8,-1,7,-1,3,10,-5,5,5,1,3,4,-6,-5,4,4,3,6,-1,-8,2,2,-7,7,-10,-1,-6,3,9,-9,-5,8,-8,7,-1,6,5,1,3,-1,-4,6,-9,-4,-8,3,5,1,-6,-3,-5,10,-6,-1,-9,-2,7,5,-8,6,1,9,-3,-9,3,7,10,-10,-8,-7,-3,10,-8,6,3,4,-1,9,-5,2,10,-8,7,-9,8,2,5,-1,-6,-9,-1,2,-7,-8,9,2,1,10,-7,3,-2,-9,8,10,-9,4,3,1,-6,4,-9,3,-6,8,-1,-3,9,-2,1,2,4,-9,-1,-8,-1,2,-9,-10,1,10,-10,-7,-4,5,-4,7,-2,-6,9,1,4,-10,2,8,9,-5,1,-7,4,2,10,5,-6,-8,-5,-2,6,-2,3,2,-9,10,-1,-7,-2,5,8,5,-1,6,-4,4,2,8,7,-7,9,8,-6,-6,-4,10,1,6,10,7,-2,-4,9,4,-2,-2,-8,-2,5,-5,-9,1,-10,-1,8,-4,2,-9,-10,7,-3,6,9,-8,-3,5,7,1,2,-8,3,5,2,6,-8,-5,-2,-4,8,-7,-4,5,8,-9,-10,-5,10,8,-3,-5,5,-1,10,2,-7,9,3,5,1,-4,-2,4,8,-4,-6,3,9,-2,1,-9,3,2,-3,7,-10,5,-9,-3,-2,-9,8,-2,8,-9,6,-9,-7,4,7,-4,-4,8,1,-2,2,3,-3,-8,9,-10,-5,-5,-10,-2,2,-6,8,-2,9,4,-5,-3,2,-9,-9,9,10,8,-4,-10,8,-5,-4],[-7,-10,4,8,6,-9,2,-6,5,4,9,-4,6,-7,-2,7,3,8,3,-5,7,-5,-3,1,-8,-9,-5,-6,-9,-2,-3,10,-6,-3,6,9,-1,4,5,10,-10,-10,6,-6,10,-5,6,-9,4,3,-10,-3,5,3,-3,-3,3,-10,1,3,-3,-6,-6,1,-7,-1,-7,5,4,-3,-2,9,-2,-4,4,-6,-10,8,-7,9,5,10,6,3,-3,6,5,-1,-4,-1,4,9,-2,-1,8,-3,-10,5,8,6,6,-9,7,7,-6,-2,-8,4,10,10,-3,-10,-8,9,-5,-1,6,2,-1,7,-9,-8,1,-10,-7,-8,-5,-5,3,1,8,-9,-4,-10,-1,-4,5,9,4,-5,-10,-3,-1,-8,-10,-4,-2,5,-5,-3,-1,9,7,-9,7,-3,-9,2,3,-6,-2,5,5,-10,-6,-7,9,10,3,-8,7,9,-8,-6,2,7,-4,8,2,-10,-2,-5,4,-7,-9,9,-6,10,9,6,9,7,-4,3,-4,6,1,-5,9,3,-6,-3,-1,6,-10,5,-6,5,7,9,2,-5,9,9,1,5,4,-8,3,-7,8,4,-4,5,-6,3,10,-10,-8,-6,-1,-6,10,-2,-10,8,10,-4,-1,-6,-3,-7,-8,1,-8,-7,-9,5,-9,-2,5,8,2,-10,9,1,8,5,9,-2,-3,7,3,3,9,10,-7,-1,-10,-3,-8,3,6,-2,3,1,2,-10,-2,-7,-10,4,5,6,6,-6,-6,2,6,5,7,-9,-6,6,-4,6,9,-9,7,2,7,-10,9,-2,-6,-8,5,-2,6,6,2,-4,-3,-7,-10,-4,1,9,5,-4,-8,-2,10,3,-5,-8,10,7,-6,-6,7,5,-3,5,8,7,-4,1,4,-1,-3,-5,10,-8,8,5,3,3,-6,2,-10,10,-7,-9,4,-1,7,-10,7,5,2,-3,10,1,-6,10,1,1,2,10,-10,-3,-6,-5,-2,8,-10,9,7,-8,2,-1,7,-2,2,4,-2,10,-9,10,-7,7,9,9,-5,-1,2,-1,-1,-9,4,6,2,3,3,5,2,-5,-8,-9,1,2,-9,6,6,7,-9,-8,-9,2,-6,1,-9,-1,3,1,-9,9,8,9,9,3,-1,10,-2,3,1,6,-10,-8,6,-7,2,4,-1,3,-1,9,9,-3,6,-1,-7,9,-5,-2,-6,-7,-7,10,5,8,-2,-9,8,2,-5,-1,9,2,8,-4,-5,5,-3,7,-2,6,-2,5,-5,4,-1,4,4,3,-2,-8,-9,6,-10,1,-6,8,-2,-7,-1,8,-5,-1,10,3,-2,-6,4,4,-3,-9,-2,8,-1,2,6,-5,2,-2,-1,-4,-7,-7,-2,-6,8,5,-2,3,-8,5,-4,-4,8,1,-2,4,7,10,-2,4,2,9,2,9,-8,-3,7,-3,3,4,-10,5,-10,5,-3,-2,-10,-1,3,-4,6,-5,5,10,1,5,4,9,9,6,4,-9,8,-9,-1,4,-10,-2,7,5,6,9,4,-6,1,4,-9,-2,-2,10,5,1,-10,-4,-5,-5,1,-2,2,-7,-9,10,4,7,-6,9,10,9,-5,7,2,-4,5,-7,4,-2,6,3,4,6,-8,1,7,7,5,-5,-7,-1,2,1,-3,-1,3,-7,-5,-8,7,8,-3,7,9,6,-10,-8,6,-10,-2,-8,-6,-3,9,3,-5,2,-8,-6,3,-2,-9,-5,2,2,8,-9,6,-5,-5,2,1,-8,5,5,3,2,10,5,-3,-3,8,5,-6,-8,3,1,-4,-5,10,-10,9,-5,9,8,8,5,5,-9,-4,-2,-8,1,9,-2,7,-3,6,-3,1,-9,5,6,-7,1,-3,8,-3,3,6,4,-9,-8,-9,10,-4,-9,-4,-1,10,-2,-2,-2,9,10,1,9,-2,-5,-9,9,3,-4,-2,7,6,5,-10,-6,2,-4,-9,3,9,-2,-2,-2,10,-3,3,-6,-1,-9,-8,2,9,5,9,1,7,-8,4,-5,10,-7,-1,-9,4,3,-1,3,1,1,-5,1,4,2,-3,-2,-6,3,-4,10,-10,-1,10,-4,4,-2,-6,3,-6,9,2,10,4,3,-8,7,6,1,-4,6,10,6,-4,-7,-4,8,10,1,-3,-4,-9,-9,1,-10,6,-2,7,4,9,-10,10,6,-7,-7,-3,-9,2,-7,7,9,-5,-10,10,-4,7,-1,-1,10,8,-8,8,3,-7,-4,-2,-10,3,9,-5,-4,6,-3,4,9,-1,-3,6,1,-10,8,6,-9,7,2,-3,-8,2,10,-5,8,-5,6,-10,-3,-10,10,-10,-4,-7,10,-3,-10,10,-2,6,10,2,-1,3,-1,-6,8,10,-2,8,-8,10,7,6,4,9,5,2,-4,-1,-9,-7,-2,10,-5,-8,1,-1,-10,8,-10,10,10,1,-8,-8,9,5,-4,9,-5,-2,-5,-9,-9,10,5,5,1,-9,10,9,5,-3,1,8,-9,6,-3,-10,3,-4,-10,-2,-6,-4,-8,-6,-7,2,2,-7,2,4,10,8,6,10,2,6,4,-2,3,7,-8,-1,1,-9,3,8,1,-7,-9,-2,-10,7,-8,-8,9,-2,-6,-5,-3,10,10,-9,4,-8,2,4,-8,-6,1,9,9,5,6,-2,4,5,8,7,-8,4,4,-2,8,1,3,-9,5,10,4,10,-4,6,-9,-7,-7,-8,1,-7,9,-8,10,-7,-1,-6,-8,5,-3,7,1,10,-5,2,10,4,-7,-4,-10,-10,7,-6,-2,9,9,7,10,-1,-8,10,2,9,-6,6,3,9,-4,7,5,3,-1,-5,10,7,-8,-7,-1,-2,1,-7,6,6,-10,-9,-8,6,-3,-2,6,2,-6,-4,7,-6,-4,5,-8,1,4,10,10,-1,8,7,-1,-7,8,-6,5,-3,4,8,-9,-9,-9,-6,8,4,-1,9,10,2,7,-2,9,-1,3,6,-2,-8,-5,-2,4,-8,-8,8,3,7,8,-2,7,10,7,-4,3,10,8,1,-9,-6,6,-9,6,6,-5,10,4,-2,6,-7,-1,6,-10,-1,8,8,-5,-2,2,4,-8,1,-4,2,2,10,-8,-3,7,-7,-3,-8,3,9,2,5,10,4,9,-8,5,4,-6,2,-1,8,-8,-4,10,6,-9,-2,7,6,9,-6,-2,10,5,5,4,4,2,3,-1,2,10,-10,-7,2,10,4,6,4,-7,1,-2,3,3,6,5,-4,1,3,-10,-7,10,-4,3,-2,-7,-2,-8,-1,-1,4,4,-2,-4,4,-7,-6,-2,7,-8,-8,2,2,-2,-2,1,-8,4,1,-4,-3,7,10,-8,7,-8,3,-2,1,-9,9,-8,8,-7,-1,-7,4,2,5,2,9,6,9,6,-4,-2,-6,9,4,4,-9,-10,5,6,3,2,8,-4,6,7,-5,-10,-1,5,-7,3,-10,-6,4,-4,9,-10,4,4,-2,-7,-1,-9,7,10,-5,-7,-5,-9,-6,9,-1,-2,3,-2,-8,3,7,4,8,-8,-8,-7,10,5,10,-1,2,-3,-1,3,5,9,-10,8,8,10,-2,10,-2,10,-10,3,4,9,1,5,8,10,8,7,-5,-3,-3,-3,-1,-8,-3,2,-5,5,5,-3,-3,-2,-10,-10,-5,4,-7,4,9,8,1,1,3,3,5,10,9,-10,10,-6,2,-2,6,-8,7,8,8,-5,5,-8,6,-8,-1,-3,-10,-7,-8,3,6,-10,-9,-1,8,-9,-6,1,8,-6,-10,1,8,2,8,2,9,5,2,9,1,-3,7,-8,5,-4,-3,-5,-3,-8,2,-5,6,3,5,8,-9,5,-6,1,-7,4,-9,2,6,5,2,3,7,5,-5,9,3,2,-7,1,-5,7,-4,8,-10,9,10,-9,-7,10,-9,-8,3,4,-10,-7,9,-10,4,4,10,6,-5,-10,3,-4,9,5,-1,-5,1,7,7,-3,-7,4,10,9,9,8,9,2,-4,-3,5,8,-9,6,-2,8,-7,9,2,-3,-7,-3,-4,6,2,-5,-7,-3,-7,4,-9,1,5,-3,7,-10,-10,-5,-7,-2,-2,4,-7,-8,5,4,-4,-1,-4,-8,2,-9,10,-5,-5,-6,4,-6,6,-5,-6,6,-5,-1,-3,2,-8,8],[-5,6,1,-6,-1,-6,-6,9,-2,-4,-4,-6,7,-2,10,-6,4,6,-4,-10,7,-2,-9,-7,-8,7,-9,8,-4,-2,10,-1,9,-2,2,-10,10,-3,4,1,2,-3,3,-8,2,3,-9,-8,4,3,-2,6,-4,-10,-9,-8,8,-4,5,-10,-2,-8,-9,-9,-6,10,5,9,-7,8,9,8,9,10,4,10,-5,6,7,-9,-10,-1,7,4,9,1,-8,-5,3,-1,-7,4,1,6,-7,-1,5,2,1,7,8,6,-7,4,-8,8,8,-7,-1,-9,9,-3,-1,6,1,-2,1,4,10,-9,-5,-6,-6,1,8,-6,-9,9,6,-4,9,7,-5,-8,-10,-7,-2,7,-6,7,-10,10,4,1,-5,8,-2,-3,-5,-6,-8,10,-6,9,-5,7,-1,-5,6,-4,3,-6,6,-4,10,6,2,9,-2,9,7,3,3,-3,-3,10,1,-3,-5,10,6,5,-3,-6,-3,2,-3,7,10,6,7,1,4,-8,2,6,5,8,4,-3,-2,-6,-8,2,-1,5,-6,9,-2,-9,-5,4,4,8,-7,6,5,-4,-3,5,5,-5,8,-1,10,-7,-6,-3,-3,10,-1,9,6,-1,10,-6,-5,7,4,-6,-1,9,3,8,2,-8,-4,-1,10,3,7,6,10,-7,-3,-1,5,-2,2,6,7,9,1,-4,-1,9,-6,-3,-8,3,5,-8,3,-9,-9,1,9,7,-9,8,-8,9,4,10,-4,5,-6,10,-2,-8,-3,7,8,-1,5,-6,-8,6,-9,-6,-9,10,6,9,-8,9,6,5,-9,1,-8,8,-2,-10,9,3,10,5,3,6,-9,-3,10,-8,-4,5,-8,10,7,10,-9,-6,-6,5,-3,1,5,-10,3,5,9,-1,-5,6,2,-8,8,-8,-4,-6,-5,2,2,-6,-10,-2,3,5,-4,-7,-6,5,-10,-2,7,3,4,1,-7,-1,-8,-5,6,-8,-2,7,4,6,7,8,6,6,-7,8,-6,1,1,4,10,2,-8,2,2,-6,5,-5,-7,3,-9,-8,-9,10,4,9,-7,6,9,9,-5,2,-1,3,9,-10,4,-5,6,2,9,-6,2,2,-1,5,-6,-5,4,-4,3,-3,-3,-9,4,-3,-5,-9,-2,-10,-2,8,-2,8,3,10,6,-5,2,10,-7,6,1,-9,-6,5,-4,9,-7,1,-7,-6,-2,3,-4,9,5,3,3,-8,-1,-9,5,-8,-5,2,9,8,-10,-7,-6,-8,-4,-7,-3,5,6,-6,2,-3,4,-2,3,4,10,8,10,7,6,-8,-6,2,7,-5,3,-7,-3,-10,10,10,7,-6,-3,-2,6,8,5,6,-8,-2,-8,10,9,-8,5,-8,5,1,8,6,3,6,4,9,-4,4,9,5,-3,-6,-10,-3,10,-2,-7,-10,4,10,1,-1,10,9,1,-1,9,-5,2,4,1,-10,-6,-3,-8,8,2,-6,-5,6,-1,2,-4,8,2,10,8,6,-10,-4,-1,10,10,-8,3,2,-10,-3,-1,2,5,-9,-10,8,-3,2,3,-7,-10,-1,-8,-6,-7,-5,-1,4,-7,-8,-7,10,-9,3,-4,6,-5,6,9,-6,-10,7,-7,7,3,4,-4,-1,7,-2,6,5,-6,-9,-3,-3,5,6,2,-8,1,-6,-6,-5,-3,-4,-6,2,-1,6,5,9,-1,2,8,-8,-9,3,1,8,6,3,-2,3,4,-7,1,9,-1,-5,10,-10,-6,-6,-3,-1,6,-3,6,4,-7,9,9,2,-8,10,8,8,-7,3,7,-10,-9,-3,-9,7,8,-6,5,-6,2,-10,10,-8,-2,-6,6,-4,-9,10,-4,5,-4,-10,6,-1,-5,-3,-10,-1,-2,1,-5,5,-4,3,3,-1,-9,-3,8,-7,4,8,-9,-6,8,-2,-4,8,-3,7,10,-10,-10,6,-8,1,-3,8,7,-6,3,7,-5,7,-7,4,2,-6,1,-10,-7,1,-9,-3,-2,3,-6,-5,7,-1,-4,-2,10,-9,-4,-8,-10,-10,-7,-9,-1,-6,-5,8,-3,-6,5,-5,8,6,3,-2,4,-5,-6,-3,5,3,-2,-1,1,4,-7,-3,-3,8,6,2,-1,-2,-9,3,-8,-5,-9,-7,-8,-10,-2,-2,1,-2,10,-6,10,10,-7,-5,-1,-5,-9,-5,-3,-1,-6,-9,-3,-6,4,-5,-2,-4,-8,-3,-1,9,1,6,7,-1,10,-3,-3,-7,-1,-3,-7,-3,8,-4,-6,-1,-7,5,4,-8,-7,1,-10,-1,1,5,5,-3,-3,3,9,6,-1,-1,-6,1,-2,5,1,2,-2,-1,2,-9,10,6,-6,-5,-5,1,-5,-7,7,6,10,1,4,10,-8,3,-10,7,-1,-2,7,8,-8,-7,-8,2,-3,-1,-8,5,9,4,-6,7,1,4,5,-10,-8,5,-1,4,-1,-3,6,-5,-3,-4,7,-6,3,8,3,-10,-6,7,-3,3,5,-4,-3,6,7,-7,-5,5,-5,5,-3,-1,9,6,10,-5,7,-8,8,8,-7,-10,-10,-10,9,6,-8,1,-4,9,-8,1,-4,8,4,-5,-3,-1,9,-1,-7,-10,-4,2,8,4,-6,3,-3,-1,-9,5,-3,-8,-10,-1,-5,-3,2,7,-7,-7,-5,2,-3,4,-1,-7,-7,-7,3,-5,-10,7,4,-3,-6,-3,-3,8,9,-8,-1,5,10,-9,1,-3,-4,5,6,-8,-8,-5,9,-7,-5,9,1,-6,-7,6,-10,-8,-1,2,-1,-2,-3,-2,-2,1,3,5,-5,7,-7,9,-1,-2,2,-10,4,1,-10,-10,-1,10,-10,-10,-6,-8,-9,10,5,-2,6,9,-3,9,-5,-6,9,-2,8,5,-10,-5,-9,-9,-9,-1,-1,6,1,9,-4,2,-10,-4,8,-2,-2,7,4,-8,-5,7,-1,3,-10,-10,7,10,8,-8,3,5,7,-9,-8,-5,7,-2,-6,-2,7,-1,-4,4,4,8,-1,3,5,-10,-8,-9,-6,-7,5,-7,1,-7,-8,7,-2,-9,10,-1,-5,-9,6,2,-8,-4,-6,3,2,4,-2,4,-8,9,7,2,-2,7,-10,2,5,10,1,-1,-7,3,-8,5,9,3,-3,8,-7,-5,-3,6,5,1,3,-6,-9,-10,-3,-4,-9,8,3,9,-10,-8,3,1,3,-1,6,-7,-4,3,-1,10,5,6,-4,7,-1,-7,2,-10,3,-9,9,-5,2,4,6,-5,-2,6,-8,-9,1,-3,7,-6,-7,9,-1,-10,-4,-8,8,1,4,7,-4,1,6,6,7,4,-9,9,9,4,-6,6,-6,6,-6,-4,-3,6,8,3,-4,-1,-9,-4,2,2,10,1,-4,-8,2,-3,-8,4,-8,3,-3,-6,5,-1,-6,4,-10,4,6,6,-3,-4,-5,6,5,-9,4,-1,5,-7,-4,9,-7,-9,4,-10,-2,7,-5,3,4,10,-7,-8,-2,3,5,-1,-4,5,6,4,-4,-5,6,8,-10,-10,7,7,-3,9,-6,-10,3,-8,-5,-4,5,-5,-9,-3,-9,-6,-10,-10,-5,1,-1,2,6,-10,-4,9,8,-2,-5,6,9,2,4,2,-1,1,-4,4,6,-3,2,2,6,-7,-3,6,-2,3,10,-5,8,3,-2,-6,-4,-9,-2,6,-8,-8,-3,-3,3,-1,1,6,-6,5,-7,-6,-9,7,7,9,4,6,-2,-2,-7,7,-1,-9,-1,4,-5,-9,5,-8,-1,10,2,3,-9,8,2,-3,-6,1,-7,7,5,-8,4,-5,-1,-10,-2,-9,-2,6,10,-8,-2,-8,-3,-10,-1,-1,4,-1,10,10,-6,5,-3,3,-8,4,9,-8,-6,-1,7,-3,-7,-6,8,2,-2,-4,-6,10,8,-6,7,9,2,-10,1,10,10,6,-1,-1,-3,-9,4,7,-5,-8,8,-6,7,-1,-1,-8,-8,-8,3,1,-8,7,2,-1,8,9,-9,6,3,4,-10,-5,-7,7,-6,-7,9,-4,9,-7,-7,3,-3,1,8,-8,-2,-7,9,8,-2,-10,9,1,-3,7,7,7,-10,-4,6,7,6,-6,7,2,10,-10,6,-9,2,-9,5,-8,4,3,5,-7,-3,-8,8,-2,2,9,5,-6,-3,7,3,-3,7,-9,6,-3,-1,-1,-1,-9,-5,10,8,7],[3,9,9,-4,-8,7,3,2,1,4,6,-2,4,9,9,3,-1,-9,4,7,8,-3,5,6,-1,-7,-6,6,-2,3,-4,-3,-9,-5,8,5,7,-9,-5,8,5,-3,-6,-2,7,-10,-4,-5,-7,-5,4,3,10,-6,6,3,1,4,-8,-6,4,5,10,10,-2,-2,-7,-10,6,-3,1,-8,3,-10,8,3,3,-1,-8,2,-8,-8,9,3,5,-2,4,-1,-1,8,-8,-3,-9,-5,5,-8,-2,-9,4,8,10,8,-9,-10,9,-10,-9,9,7,-6,3,-5,-2,-6,8,8,4,-3,4,-1,-1,1,2,-9,-5,-1,-3,-1,-3,-1,-1,-3,4,5,-1,-2,-7,-4,4,10,-2,-8,-9,8,-8,-5,8,3,3,-2,6,7,-9,-4,8,-4,5,5,-3,-8,-4,1,2,-3,-3,1,1,5,-1,-4,-5,9,-2,-5,-9,-7,5,-2,1,-2,-2,-6,-1,2,-1,2,7,-5,-8,-8,-1,-8,3,3,-7,2,10,-10,-8,6,1,5,-9,-10,9,2,3,8,1,-3,10,6,3,2,10,-3,6,-2,-8,-2,8,-9,-5,8,2,-4,7,2,-6,1,2,9,-2,3,-3,7,10,-4,-6,-10,-6,-9,-4,2,7,8,-9,-9,9,-1,6,4,7,-10,-2,9,7,-10,-1,3,-6,-9,-9,8,-10,-8,8,-4,-2,5,-7,2,4,-6,-4,5,1,7,-4,-8,3,-3,-2,3,1,7,-2,-3,1,-1,2,5,2,5,-6,-2,-1,-7,2,-6,-7,3,2,-4,-7,5,1,-5,3,-10,-3,7,7,-6,3,-4,-4,10,4,6,10,-3,5,-5,7,7,-8,-1,-8,8,8,-4,10,8,-9,-7,8,-10,-9,-1,-10,4,3,-7,-6,-6,8,9,-5,1,-3,-3,-10,4,-7,6,5,9,7,3,-10,8,-1,5,-3,-10,-7,-9,-5,6,10,-1,-4,-5,8,-4,6,-6,10,3,-10,-2,-5,3,4,1,-3,-8,-5,-10,2,-1,8,5,1,-5,-2,-9,8,4,3,-5,-10,-5,-8,7,-1,-8,8,-8,3,1,10,2,-1,-7,4,3,7,-8,-5,6,-3,-6,10,-3,9,8,-3,-7,-9,-1,8,-6,3,1,8,5,-2,6,7,4,-1,-5,-5,1,7,-6,7,2,-5,-10,-10,6,-8,-5,10,-8,4,-9,6,-4,3,7,-1,2,2,10,-8,6,-9,-10,-10,1,-4,6,2,10,-9,7,-6,7,2,-9,-4,-6,-6,3,7,-4,6,-8,8,-4,-4,9,2,7,-3,-4,-1,-1,9,5,-10,4,8,4,1,-5,1,-7,1,-4,-2,3,-9,2,-10,3,-5,4,10,-1,6,-9,9,-7,-2,5,9,7,4,-7,6,2,6,7,4,8,2,-8,-3,-1,7,-9,4,6,3,10,-3,3,10,5,5,-5,-1,10,-7,-9,7,-3,-3,-8,-2,8,-3,-5,8,-9,5,2,7,2,-10,-8,-8,-7,10,9,-6,-9,7,-3,8,-10,6,-1,-3,-8,-3,-2,-9,-5,-6,5,1,-2,10,5,-9,-2,-6,-9,5,4,6,-10,6,-6,-10,-6,-4,1,-6,-5,3,2,-10,10,10,3,1,3,-9,-10,9,-9,-4,9,9,5,-1,3,9,5,9,-7,1,8,8,-8,3,10,-10,-9,4,10,4,5,7,3,9,-6,10,10,-1,-5,-6,6,-5,-4,3,-4,-7,10,-10,2,5,-10,2,-4,-8,1,-3,9,-4,-7,-9,1,10,2,4,-9,-1,-5,7,-8,-8,1,6,1,5,4,-1,-1,-8,-10,6,3,-8,-10,8,2,-5,-9,-4,-10,8,-2,10,-9,6,-3,1,-2,6,8,10,-2,-4,7,-1,5,-2,8,10,-2,-1,1,-5,-2,4,9,-9,-8,-1,-1,1,-4,4,-7,-3,3,6,-3,8,1,5,-6,10,9,1,8,7,7,5,-6,-2,2,4,8,3,3,-1,6,5,5,-5,-9,6,-4,9,1,10,9,9,7,9,9,1,1,1,1,10,10,6,-9,5,-6,3,10,-3,1,-9,1,-8,-5,8,-6,-5,-6,-2,6,7,2,-7,10,-3,3,-3,-3,5,-9,7,-5,2,3,-8,-1,3,3,-8,-2,-5,-5,9,1,-10,-9,6,9,-5,1,-5,8,-6,10,7,-8,-8,3,3,-3,6,1,-8,-1,-5,8,-5,-6,9,-6,7,-1,9,4,9,6,-1,-7,-7,2,1,10,8,8,3,6,-9,6,-8,-9,-8,-2,2,-6,8,-1,-9,6,6,-7,-7,10,7,-2,-6,3,6,3,-5,-8,-8,-1,-7,-6,-10,-3,-5,2,9,-6,7,-9,5,2,2,4,-7,8,-3,-1,7,-9,-7,4,-7,2,-2,-8,2,8,9,3,6,-2,-8,-1,6,-7,10,-10,-4,10,5,4,7,-3,-3,-4,10,7,10,-10,7,-1,1,-6,6,-10,6,-10,3,9,10,6,-1,5,-10,-10,-4,-7,-6,9,-1,-5,-10,-9,-6,10,2,-5,8,6,7,-8,9,-8,-8,-9,6,5,-8,-1,-3,-10,9,-9,5,9,-3,5,-2,-1,1,-1,-3,-5,1,5,10,-8,-1,8,-4,8,-3,3,9,8,-3,9,7,7,1,-1,-7,2,8,4,8,-1,-6,-8,8,4,-7,7,8,-2,-6,-2,2,9,-3,-1,-6,3,1,-6,9,10,5,-10,1,-2,4,10,-7,5,-3,-10,-1,10,4,2,-5,1,-2,-3,-4,-10,8,-4,10,-4,6,-1,-8,-10,4,-8,-4,1,2,9,-8,4,-10,10,6,2,-9,-10,3,-1,-1,7,8,3,1,-3,10,4,6,9,-9,5,-3,5,6,-2,3,-4,7,-10,-9,7,10,9,-5,-7,9,-2,-8,10,-3,1,-4,-8,2,1,-10,-1,10,-8,10,1,9,4,2,-1,10,2,9,-7,7,2,-6,10,5,-3,5,-4,7,4,-6,4,-7,10,-6,6,-4,-3,-5,6,-2,5,-3,4,1,-1,2,-10,2,6,-6,-1,5,9,-6,-10,-4,-8,7,6,9,-2,-3,-2,2,-4,2,-9,1,7,-4,8,3,4,-5,8,10,-4,4,-7,-6,5,8,3,1,-7,-6,-5,-10,-10,1,-10,2,1,2,2,-1,-3,10,-8,-5,-8,-9,-3,3,-3,-3,-3,-9,-1,-6,-6,-2,6,7,5,-9,7,7,7,3,-2,3,3,4,2,9,-7,-8,-2,-8,-1,9,7,5,-6,3,7,5,-9,-4,-7,8,-1,-10,5,10,-7,3,-7,-5,9,8,6,-3,-2,-4,9,4,2,5,-2,-3,-3,2,-7,10,-6,9,4,5,-9,5,-2,-8,-5,-2,-7,5,-3,2,3,-5,2,1,8,-4,-6,4,1,4,6,-2,-3,5,-5,6,-8,-9,5,-8,5,-9,-2,8,-7,-9,8,-6,-10,9,-5,-3,5,5,1,4,-7,6,-8,-5,9,-7,-5,2,-3,9,5,3,6,-2,1,-5,-1,-8,-9,5,8,9,-7,9,9,10,-1,-3,-10,6,-5,10,1,-6,-2,10,-4,-1,7,5,-9,-1,-9,-7,-1,10,3,-1,-7,-9,-9,9,8,-6,-2,-3,7,1,-8,5,-3,-7,-7,5,7,-5,2,10,5,-5,7,8,-1,10,-7,-1,1,9,8,2,-7,-10,10,-7,5,2,7,8,8,9,2,-6,-10,1,-8,-1,-1,-1,10,7,-9,9,-8,-6,-2,2,5,-9,4,2,4,-8,-4,-7,7,10,-3,-4,6,9,-6,-4,-2,7,4,7,-3,-4,-4,-3,-4,-10,4,2,-5,7,-4,2,3,-2,-9,6,6,10,2,-2,8,5,-8,-9,-8,2,-7,-7,-4,-9,8,4,5,5,-7,4,-10,7,-8,9,-5,9,7,-2,5,-3,-7,8,-1,9,-9,-5,-4,7,1,7,8,7,1,6,3,10,6,-1,-10,-7,5,-10,-4,-2,-4,10,6,9,7,3,5,-9,1,10,-2,10,10,-8,-8,9,9,4,-7,3,6,-5,9,-4,5,4,2,5,-6,6,3,-4,5,8,-10,-5,6,9,-3,8,8,5,7,-2,5,7,-3,2,8,9,10,-6,1],[4,2,-10,-7,2,7,7,4,-1,4,5,3,1,8,-10,5,-3,-9,7,9,7,5,-9,-7,-6,-4,-4,6,10,3,3,5,4,10,-1,-3,7,2,5,-10,2,-3,-3,-10,-3,5,2,3,-6,-9,3,5,10,-10,9,-5,4,-7,-6,-9,1,-8,-4,1,5,-6,4,10,1,8,-8,2,10,10,-6,7,-3,-2,-8,-6,7,-1,5,6,9,-7,6,10,9,-3,9,4,-7,-8,1,5,-7,-8,8,-10,7,-8,9,8,10,-6,-1,10,7,2,3,6,6,4,-10,-4,4,-10,2,4,1,-2,10,-2,-1,7,-4,5,8,5,-8,5,-1,-6,4,6,9,10,9,6,-6,5,5,9,3,-3,3,2,4,-8,7,-6,9,6,7,9,5,3,-7,-5,-4,-9,6,-2,9,-3,-1,3,-4,-9,8,-4,3,-5,10,1,6,-3,-1,-7,3,7,8,6,-6,6,-3,9,10,8,-1,3,9,4,-1,10,-10,9,-6,3,-10,-6,-9,-10,-8,-6,7,8,7,6,4,5,-5,-1,9,-1,-3,3,3,-9,-4,-7,8,9,-9,5,-2,-7,-7,8,-4,-7,7,7,5,-8,-2,-2,-2,8,-7,-5,5,6,10,-8,-2,-9,4,8,3,10,2,-8,2,-6,-10,8,4,-7,-7,-9,1,9,-8,-7,-2,8,9,-8,1,10,6,-9,3,5,3,10,-3,-1,5,-2,9,10,-6,-10,2,-10,-9,9,5,3,-7,3,-1,3,-6,-4,-4,2,-3,-1,-2,5,2,-5,-7,6,-1,-6,-5,10,-3,-6,-9,9,1,-8,2,6,7,-10,8,-10,7,1,6,-3,6,-8,-8,-8,8,1,1,-4,7,-5,-2,-3,-1,-10,6,6,5,-6,10,1,1,-7,-1,3,5,-4,2,-5,-2,2,10,-9,-1,-7,8,-8,-2,-3,4,-9,-3,7,10,10,8,-1,1,3,-4,2,8,3,7,-1,2,-1,4,-4,-9,-10,8,7,-1,1,1,-7,7,9,8,4,-3,-8,-10,-3,7,-8,-3,6,5,9,-3,5,10,4,7,9,1,-4,10,-2,1,3,4,9,-7,5,9,-1,-7,7,3,1,5,-6,5,1,-9,3,4,-3,2,-2,-8,-2,-10,-9,6,6,5,6,2,-7,2,2,-2,8,3,-7,-6,5,7,-8,4,-4,-8,1,8,10,-10,7,-7,7,8,10,4,-10,1,-6,4,4,-2,1,-4,1,5,-7,-4,2,-10,-6,2,-7,-5,-8,3,-10,-8,5,4,-10,-4,1,3,10,8,8,-5,2,8,-9,-3,-5,4,5,-4,8,1,-5,-5,-8,4,-2,2,7,6,-10,8,10,-7,-9,9,10,9,4,2,-6,9,3,3,-1,9,10,9,9,-6,-7,-8,-4,-2,-8,10,1,1,1,8,-7,-5,4,6,2,-2,6,7,6,10,-6,-7,2,-4,5,6,9,-8,9,-8,5,-1,-9,-3,-8,10,-3,-2,6,9,10,-3,9,3,5,-9,1,-3,8,7,9,1,-4,-9,1,-2,-3,1,8,10,-7,-6,-10,-1,5,4,7,7,8,-4,2,-9,2,-7,-4,-4,9,-1,10,-5,2,-10,3,-4,3,-10,-5,10,-9,-8,7,5,-5,-2,8,10,7,3,-9,-2,3,7,-1,5,-7,4,-8,-9,7,6,9,7,7,-9,-5,9,1,5,-7,3,-5,8,-7,-6,8,-10,-9,-6,-5,5,4,-7,3,10,-6,4,1,7,-10,-4,5,9,1,2,-10,7,2,2,9,5,-6,-7,2,-7,-6,-3,7,5,-9,5,4,5,7,1,-1,1,5,4,-3,10,-4,-10,-6,10,-2,5,8,-3,-1,-2,1,10,3,-3,-9,-8,7,5,-5,-9,1,-4,-7,-5,-9,3,-2,6,-10,-6,2,-3,1,4,-4,-2,8,5,3,6,-9,-2,3,-8,6,2,-5,-1,-3,-2,-8,4,-2,-5,-9,7,-1,8,-10,7,-10,8,-1,6,1,-3,-4,-7,5,1,3,3,10,8,-10,8,3,7,-2,-2,-3,-2,-1,3,-2,-10,-6,-9,-4,8,3,4,-9,-1,-6,-4,7,5,-8,4,5,-5,8,-9,4,-8,3,-4,-5,-5,-10,-1,8,5,-6,-6,-6,4,-4,6,-2,4,6,-2,-4,5,8,1,2,2,6,9,-8,5,7,9,-8,7,-10,9,5,-6,-10,9,-4,7,8,3,10,7,3,-9,8,7,6,-1,-9,-4,-5,-10,5,-10,-5,10,-1,5,2,5,3,-7,9,9,-9,9,-9,5,-8,8,6,-1,2,2,-3,3,10,-4,-10,-1,8,-4,-8,-1,-2,2,-7,-6,2,-3,5,-10,8,6,-6,8,8,1,9,-4,10,-8,2,6,-1,10,6,1,-1,1,-5,-1,1,8,-3,2,10,-2,3,8,-8,-10,-6,8,9,7,10,-8,8,-2,10,-6,-3,7,-6,-2,3,9,-4,-9,8,-8,1,-1,3,2,7,-6,-6,-8,7,-9,1,-10,-6,-9,-4,-5,2,6,9,-1,-5,9,-1,6,-7,8,2,5,6,4,-1,-5,-7,10,-6,-4,-7,4,10,-8,4,6,-4,6,5,10,-1,8,-5,-5,9,-5,2,6,9,2,-10,9,-9,5,-5,1,1,5,8,-10,9,5,3,7,7,-5,-6,-2,1,3,4,3,3,-3,6,-2,-7,8,10,3,-3,-6,-5,7,6,2,-4,-5,-3,-10,2,-3,8,-2,-7,8,5,2,-10,8,7,-6,-4,-7,-1,-7,-8,-5,-4,-5,-2,-4,6,-1,-2,-4,8,9,-3,1,3,7,8,8,-9,-6,7,-1,3,1,8,4,7,10,-10,-4,-10,-6,4,-2,-6,-5,-6,8,-6,-5,-6,4,4,5,-6,-9,-1,5,-9,-10,7,10,10,5,6,-4,-10,-8,-2,-10,-2,-5,6,-10,-10,1,-4,3,8,-3,9,-9,-4,5,9,-6,-6,4,2,-8,4,10,-10,-3,-10,-5,4,1,-10,-5,4,10,2,-4,9,7,-9,3,-9,-8,-3,-1,6,4,-8,6,2,-4,3,-9,9,-8,-2,-10,7,1,10,6,1,3,-1,-3,-7,5,6,2,9,-4,1,1,1,-6,3,-10,-2,-6,-3,5,-6,10,6,7,-4,-8,8,-10,3,-1,-10,1,-3,-6,-5,-8,1,7,2,7,-9,-10,6,6,-10,8,-8,-3,-7,7,9,-7,5,-2,-7,2,3,1,-6,1,-3,-7,9,2,-10,-7,6,1,-7,-8,-9,-2,-6,4,-9,-9,3,3,-7,-5,6,4,-8,-3,8,-3,4,9,-8,2,-7,10,-7,9,10,9,-10,1,-9,-4,8,4,-3,-1,-8,-8,2,-5,5,-2,-10,2,-7,-7,-9,-3,-10,-8,4,2,10,6,-10,-2,-5,-9,-7,-4,-5,-3,5,9,5,-6,7,-10,10,3,-7,6,-1,-6,7,5,4,-6,3,4,-5,6,10,10,-4,-3,-8,-2,3,9,9,-4,1,-3,7,4,-8,5,8,2,-8,10,4,-7,9,1,-2,-2,4,7,3,-3,-2,2,4,2,9,-8,-6,-3,2,5,-8,-9,2,-4,-7,-7,3,-3,-3,9,-8,8,3,-7,7,1,10,-8,5,-9,-6,5,8,-6,-10,-7,-3,2,-8,3,2,-3,-1,5,2,10,2,9,3,3,2,4,4,-1,5,-10,-5,9,3,-6,10,4,1,-2,-1,-10,4,10,7,10,3,-1,4,-8,6,1,10,-7,-1,7,-3,-6,-8,7,-6,-1,9,-1,6,10,-1,-7,8,-4,-5,10,-6,7,3,-3,-10,-1,-8,2,10,-5,4,-4,10,-1,8,2,-10,-2,-4,-5,9,5,-8,3,-10,-1,-2,7,6,6,-1,-10,1,5,4,10,-6,5,4,2,-6,-8,-9,-2,-5,8,1,7,7,5,-2,9,2,9,-1,1,3,10,6,-8,-2,-7,4,5,5,-7,7,-6,9,6,-6,1,-6,-3,5,-3,8,2,-3,-5,8,-7,7,5,-9,-10,-10,6,2,-8,3,-3,-1,-4,1,3,1,-4,5,8,4,1,-9,-2,10,-7,3,-3,7,7,7,7,1,-10,-3],[-10,-6,-1,-10,7,2,3,6,-8,-5,8,6,-2,9,3,10,-8,-6,5,-1,8,-8,9,-8,4,-3,-5,-2,-7,-1,-2,6,1,-9,10,9,-3,8,1,-8,-7,-1,-3,-1,1,-3,-3,3,4,10,-1,-1,-8,-6,-5,5,-7,-6,9,-3,9,3,6,6,7,-4,-7,-3,-4,-7,3,-2,-10,3,6,-10,-1,-7,-9,6,10,-6,-7,-5,10,-1,-4,5,9,-1,-1,10,-4,-8,-9,-10,-8,-8,-9,-5,3,-4,-9,10,9,5,-4,4,9,2,-10,-6,1,3,-7,1,-6,-6,5,3,9,6,10,-1,3,6,6,-2,-8,-8,-3,4,5,-2,-9,-8,4,2,-5,-4,4,2,6,8,-8,8,9,-9,-5,9,-10,10,1,8,5,-4,6,1,-1,3,-7,-1,4,-3,2,10,-6,-6,4,-3,-7,-8,-3,4,-7,-5,9,-1,5,1,3,-1,-6,6,-10,9,-5,2,-3,6,-3,-4,-5,5,-8,-9,-2,2,7,9,8,-7,-4,-5,-5,-7,-9,3,8,6,-8,1,-7,-9,-2,2,-8,-6,-9,-9,1,-5,9,-6,7,4,-1,7,-7,-2,7,-10,-2,7,-7,-8,-2,-1,-4,-9,3,6,10,1,2,-8,-5,3,-5,3,-7,-2,-5,-4,-10,-9,8,-6,-1,-8,10,3,4,-5,8,-1,-10,-8,6,3,4,-8,1,3,-10,-6,-4,-8,-7,-7,2,2,3,-6,-1,-4,2,9,7,-7,2,-9,-4,-7,9,-8,4,-10,7,5,-4,-2,2,-2,-5,7,-4,-4,-1,-9,-4,3,6,-4,-9,2,-7,-2,8,-7,-2,-8,1,7,4,-4,3,-4,-1,4,7,-5,-10,3,-10,-1,-7,1,5,-1,3,5,3,7,-10,-5,-6,-1,-7,6,-7,2,-8,-1,2,-9,-9,5,6,7,-2,2,3,4,-8,-9,-7,-10,-7,-7,-4,8,-3,-7,-4,6,9,5,3,-3,-10,-7,-7,-2,-9,5,-5,7,7,-8,8,-8,2,-10,1,-8,-8,-7,-2,-9,-10,-4,-1,-5,-9,-9,7,-6,9,5,-7,-2,-8,10,-10,2,-7,-6,-1,5,4,-7,-1,3,8,1,-3,-2,4,2,3,5,-4,10,-2,5,1,10,-6,-2,-10,-10,6,3,-4,-3,3,-10,-8,2,5,9,-3,8,9,4,2,4,5,-7,4,-9,7,4,8,-9,-5,-9,-5,-10,6,8,7,8,-7,3,5,8,1,-9,-8,-4,-7,3,-1,-8,4,-6,8,-5,7,8,-9,-5,-8,9,-5,1,9,3,7,-6,-1,-6,-6,-4,6,-6,10,-7,-10,-6,-1,-6,-3,10,-4,4,9,-4,8,10,2,1,1,-10,-4,5,-5,8,4,1,2,-3,5,8,7,-9,5,-1,-10,7,-9,-1,-5,-4,7,-7,1,2,9,-9,-9,5,10,2,9,4,-4,-2,-6,-8,-4,-1,-8,10,4,-6,-8,7,-9,8,8,3,10,1,-6,10,7,-4,6,-2,5,-1,1,3,-9,-7,6,1,9,-4,2,-4,5,1,4,-10,-5,4,-3,5,9,-8,-4,-8,10,8,6,-8,10,10,7,4,5,8,-4,-7,-7,-7,6,5,-7,-6,5,-4,5,10,8,-4,2,8,-6,-1,1,-5,-3,-3,-3,5,-4,2,5,-3,-6,5,-10,-5,9,9,-2,-9,5,5,-10,4,7,5,-8,6,-7,1,3,2,-10,4,-5,4,4,6,8,-7,-5,-1,-1,6,-8,-3,-3,-5,-8,-4,3,-3,-7,-2,-10,-4,-1,10,9,-2,-5,10,-2,10,7,4,-3,-8,9,-7,-10,6,5,-5,-5,3,-2,7,-9,5,-2,7,-8,-6,-6,-8,4,-8,-1,3,-10,8,-1,-7,4,8,2,1,-10,-9,-10,3,-10,-2,3,-8,2,-4,-1,-5,2,-10,9,-4,-6,7,7,-9,2,9,5,-8,-5,3,-3,10,-10,-2,10,9,-9,2,-6,-5,10,-4,3,-5,-4,4,-7,-5,-3,-7,2,-8,2,-9,1,-9,-1,-10,-4,-5,-5,6,-3,8,-9,-8,-1,-2,-8,-3,6,-4,2,-3,10,5,-5,7,5,4,2,-2,10,-8,-8,9,-3,-3,6,-3,2,-2,-10,-6,4,-6,-4,9,-6,-4,8,-8,-6,-5,-5,-1,-4,-7,-1,9,3,-2,-8,2,-8,6,-8,4,-5,8,-5,8,-1,-8,-8,-8,4,9,-10,4,5,-3,-8,1,-6,-3,8,-2,8,3,-7,-6,-2,-3,-6,-10,10,-8,-8,10,-7,-5,-8,-4,-9,10,-10,8,-3,-2,-9,2,6,6,6,-10,-2,-8,5,7,-10,1,5,-10,10,9,-6,7,-8,10,2,5,-6,-4,-4,7,2,-4,5,7,-7,5,5,9,-6,7,8,3,6,7,10,6,1,-9,5,4,-2,9,-2,3,7,7,4,3,9,2,5,-3,9,7,-10,7,-1,-3,7,2,-6,3,-10,1,-8,3,10,-4,-10,2,1,3,-10,-4,2,2,6,7,-2,7,1,7,-6,10,-1,5,4,5,-4,-10,6,4,7,-10,-2,-3,9,-4,-3,10,-7,-8,-6,-6,2,9,-7,-10,6,5,6,-3,-8,-9,-1,4,5,10,5,-2,-1,-2,5,5,1,1,8,2,1,8,10,8,4,-9,-4,-5,-3,3,1,9,-10,9,4,-7,-1,-5,-6,8,-2,10,-9,1,4,-10,-4,6,1,3,5,10,-4,8,-9,4,5,-9,1,-6,4,9,-7,3,10,-3,5,-2,-8,2,7,3,10,-8,-10,7,2,-3,2,-7,1,7,3,6,10,-1,4,10,-5,-6,-5,-8,-8,8,-6,-10,6,4,7,-3,10,5,-9,7,-5,7,-3,-9,-8,8,-3,-1,-8,-10,-7,-3,8,-10,-2,9,9,7,4,4,2,-6,-2,8,3,6,-3,-8,6,-8,-6,-6,-6,10,9,-2,8,8,4,-2,5,1,-9,-9,-9,-5,-5,-2,6,-10,6,7,-7,-3,-2,2,-5,5,1,10,2,-3,-8,7,6,8,9,-3,-10,-9,-1,10,-3,-1,1,-2,-5,-10,-1,7,-6,9,-10,-4,-9,5,-6,-8,-1,3,8,-7,-2,8,-5,1,9,1,-2,-2,-9,-3,-1,4,-9,6,-2,-4,9,10,-6,9,2,-7,-4,5,5,6,10,9,-7,-9,-7,5,-3,-2,-7,6,-1,-4,-9,6,-9,-9,-4,-8,-3,-2,-8,-6,2,-3,9,8,10,4,-1,5,-5,-8,-5,2,3,-8,-8,3,-4,-9,-6,4,-9,9,-1,1,-1,6,7,-5,9,1,-8,9,1,-5,-7,4,7,7,8,-3,8,4,-5,-6,-2,4,-9,4,-1,8,-9,-3,6,6,9,-2,9,4,6,-10,5,10,5,8,4,3,8,2,7,5,-5,4,-2,-10,8,-7,-4,-9,-3,-6,-2,-10,6,-2,8,-6,6,-9,-8,-9,6,1,4,-10,6,-2,4,7,-4,2,10,-6,-10,5,1,6,9,-1,7,8,5,2,-3,-1,9,8,-3,-6,-9,-1,-4,-2,-6,5,-2,7,-4,1,7,4,-7,-5,-9,3,3,-10,3,-1,-7,-2,-9,10,-5,1,-5,8,-9,2,8,-8,9,8,-2,-1,-5,-9,2,-10,-10,-1,-5,-5,-5,-4,2,4,2,3,2,2,-9,-4,10,-9,4,-3,10,5,7,-8,1,-10,5,6,9,7,-1,-10,4,9,-3,8,2,-1,-5,8,1,9,-5,-5,5,4,-2,6,8,-3,8,4,-7,9,-4,-9,8,2,5,8,9,5,-8,5,-6,7,-4,-6,-6,4,-5,-4,1,6,3,-5,8,4,-10,-4,-1,-4,1,-7,-6,-6,4,-4,8,-10,-4,5,-6,9,-8,-4,-3,-4,-8,-3,2,5,-9,-10,7,-8,-6,4,-2,9,6,-8,4,5,-3,-8,6,-10,2,-2,1,-1,-2,10,-8,3,4,2,3,2,6,2,3,8,9,4,9,6,10,5,-5,-1,10,-9,-1,-1,-2,8,5,9,-6,-4,8,-6,8,-8,2,3,1,6,-4,-8,10,-2,-1,-8,5,2,4,4,1,-6,-9,4,-5,-3,-7,-7,-8,3,9,-6,5,-10],[6,-2,5,-2,9,6,4,4,4,-10,8,2,5,4,6,1,-7,10,3,8,-8,7,-8,3,2,-4,7,2,4,3,1,3,-9,1,7,-5,4,6,4,-3,5,7,-3,-5,6,-8,-2,-4,-6,-2,-6,7,-10,1,-6,-10,-4,-4,-7,-4,7,-9,-3,-1,-10,1,3,-6,-2,-6,-5,-9,7,-4,2,-9,-9,1,3,-10,-8,-9,-8,-3,5,-1,8,-7,-3,1,-8,6,7,9,1,3,10,-10,10,-1,3,-3,-1,-7,-1,2,7,7,7,-5,7,10,1,-6,-3,4,-10,-8,7,-9,-2,-10,-1,4,-4,8,9,9,-10,-1,-5,-9,-3,-7,-2,3,-9,4,9,-10,7,6,-8,5,1,10,-2,10,6,10,-6,-4,3,7,-6,-6,-4,10,-7,-1,3,-4,-2,2,2,8,4,-4,-9,-8,-7,7,-9,7,-2,-4,-2,9,1,-4,3,4,3,4,-9,7,9,9,-1,-3,5,-7,4,-2,7,-1,-9,8,2,-6,-6,-9,6,-2,6,-9,5,-1,2,-5,9,-9,-10,2,9,-5,2,-10,5,5,-1,6,2,4,-1,1,6,10,-7,10,-4,-10,10,-5,6,-8,-6,-3,-2,-10,-8,2,-3,2,9,-5,-6,9,9,-10,-4,1,3,-8,-3,-5,-1,6,3,1,9,-5,3,2,-6,6,-1,9,5,8,-6,-8,1,-9,4,-4,-8,-8,3,-2,2,-6,-6,-8,2,8,8,3,2,4,1,-8,9,9,-6,8,10,-3,-10,-9,5,-10,-5,-2,4,4,-6,-4,10,4,4,-6,-7,-3,9,9,9,-9,-4,-3,7,-4,10,7,-3,8,2,-4,-4,-5,-6,9,6,10,-8,-8,10,9,2,-2,4,4,5,-4,2,-9,6,4,5,1,6,-10,1,-6,5,10,9,7,10,10,1,-10,9,-8,-7,10,6,8,1,-4,6,-8,-8,9,-6,-9,2,3,-5,-8,10,6,9,-5,1,-9,-3,-4,-9,8,3,2,1,7,-6,10,4,-4,-3,-5,10,3,-8,4,-7,-5,-2,-6,-4,-8,-9,-8,6,5,-1,-4,-4,-4,-2,-4,-1,-1,-7,3,-1,4,1,2,4,-7,-10,5,7,-10,8,-10,-4,1,2,-3,-6,3,-8,5,6,8,4,-4,5,-10,10,3,2,5,7,-7,4,-2,-8,-6,-10,2,10,-3,-10,9,4,3,-5,10,-4,-8,-8,3,-7,10,-5,-9,8,1,6,9,-3,6,9,-3,2,3,10,-5,7,6,10,9,9,8,-2,-5,-9,3,6,1,7,-9,-10,-8,2,10,-9,-1,-7,-6,-8,-3,6,5,4,-2,-9,-10,5,-7,1,-10,6,-1,-4,3,-1,-9,2,9,-9,9,-9,-9,8,-5,5,1,9,-4,2,7,4,10,-1,4,-9,-9,5,-5,8,-3,-5,4,-8,-9,6,4,3,5,-3,3,5,10,-4,2,5,4,-4,6,-7,-2,2,-2,-10,-8,-8,-2,-4,3,-9,7,2,6,10,-8,8,9,-8,4,9,-10,2,2,-6,4,-1,1,-4,1,-10,10,-1,-9,-1,-6,4,9,-9,4,7,-3,8,-4,-3,-6,-6,-1,7,-5,-5,-1,8,-7,-3,4,-8,10,1,10,-9,-6,-3,1,9,10,-8,2,-1,2,-9,-5,3,5,-9,9,1,4,-4,-6,10,4,-5,3,7,-9,2,-3,1,-1,3,10,-7,8,9,2,-7,7,-7,7,6,10,2,-4,-1,3,7,8,8,-5,9,4,6,-10,-2,4,-5,-7,-8,-1,-8,-5,-10,10,8,-2,-5,-2,2,3,-1,3,3,-4,-2,2,-3,-6,-1,-10,-4,-5,-3,-9,1,8,-10,7,-2,6,9,-2,6,-5,6,5,2,-8,-9,9,-8,-9,9,-4,8,-2,10,1,-4,5,4,10,2,-2,-5,-10,-1,3,-6,10,7,-2,8,2,-10,3,-9,-3,-3,1,-7,10,9,-7,-8,-8,8,1,5,-9,-10,-2,-7,9,9,7,10,-3,3,-3,-4,-6,-3,8,2,-5,-2,-3,-10,-1,2,-5,7,1,-6,1,-5,4,-5,8,-2,10,-7,-4,-5,8,-3,2,-10,10,-7,-8,9,2,4,1,-2,9,4,-8,8,-8,8,-3,-3,4,3,4,-4,3,-6,-4,-7,-8,6,-2,2,7,2,-8,-10,-6,-6,4,5,-10,2,-1,-6,-2,5,-1,3,-8,-8,1,9,-1,-6,-7,-2,5,-10,5,-3,10,-10,-8,-9,-10,-3,2,-8,8,-10,8,1,-10,-8,-7,-3,-1,-8,-5,-5,1,-8,9,10,2,4,3,-3,-6,-9,4,-10,4,5,-4,-6,8,9,-2,7,-6,5,-4,-4,9,-3,-5,7,-10,9,-3,-8,1,-10,-4,-8,-8,4,9,-2,1,-1,-8,-6,-3,4,-1,8,-10,6,5,-8,5,5,-8,-4,4,-5,-6,-3,-5,-6,9,-10,-2,5,-2,-2,-5,-3,-4,3,-4,10,-9,-8,2,-5,-8,2,-3,9,1,2,-10,10,4,4,2,-8,9,-9,2,1,-9,1,-9,-9,4,6,-8,8,10,10,5,4,3,-4,7,4,8,10,-8,10,2,-3,-4,4,2,5,1,-3,3,1,3,-8,3,-10,6,-2,-8,1,-8,8,-9,9,-4,-6,8,-9,-7,1,4,2,3,-8,-8,3,-2,-8,-5,2,-7,-6,-8,-5,-1,-6,8,-5,-9,-2,-10,5,-7,4,7,-1,4,9,-2,6,1,-8,-7,1,-4,7,1,9,-4,-10,-8,-7,-8,-6,-1,4,4,2,-5,-1,10,-6,-9,-9,-9,-6,-1,1,9,10,10,3,-9,7,-10,4,6,10,-6,-10,7,-4,-3,10,2,4,-5,6,-2,10,3,3,-6,9,-10,-9,-9,9,-7,3,-8,-9,-2,9,-2,-7,4,6,-2,4,-6,-3,5,6,-9,-9,-4,2,-7,-3,1,-4,1,-5,-7,-7,3,9,-1,9,-3,-9,-9,4,-3,3,-6,-8,-8,-10,-1,9,6,-1,-4,9,9,4,-8,-3,7,4,4,-10,5,9,-8,2,-10,-3,3,2,9,-3,-6,9,-4,-7,-6,-1,9,-9,-10,-5,5,-5,-1,2,4,-8,-2,4,-9,-6,-7,6,-9,-7,7,1,1,10,-4,-1,-10,7,-3,9,1,8,2,-8,-8,-2,-8,-7,-9,-10,-9,-9,7,2,10,-5,-7,-3,-5,-10,7,-10,-4,-1,-5,-8,-1,5,7,-1,9,8,-6,-4,1,6,7,10,-6,-6,3,5,-1,3,6,-2,9,-2,10,-6,2,-8,1,-8,-10,-5,-8,-8,-1,-6,-6,-3,-10,-10,10,3,9,9,-9,6,-3,4,-1,2,-7,10,-9,-10,7,3,-5,9,8,-3,-9,8,-8,-5,9,3,-8,-1,6,-9,-1,-10,1,-10,9,7,10,2,-10,-1,8,6,6,4,1,3,-8,-8,-4,7,2,3,-7,-2,-6,7,4,8,3,10,-7,-5,7,1,2,7,10,-5,-7,-8,-9,-4,10,-3,-6,-6,7,8,-5,-9,7,-2,-6,-5,-6,-7,-8,8,-5,-1,-5,5,-8,-7,-2,-1,-2,7,4,2,-7,-4,2,-2,-2,-9,10,8,5,-1,2,5,7,-4,3,10,7,-4,-6,7,3,-5,-7,3,10,10,-7,8,6,4,1,1,8,8,-6,-3,8,2,-3,-9,8,-7,-4,-9,-10,-2,-9,-9,-8,2,-2,3,-5,5,-9,-2,-4,1,7,-6,5,8,-1,-10,5,-5,8,-9,2,-10,-10,5,1,-10,8,-5,-6,-8,1,-7,1,-5,9,-2,10,9,4,2,4,4,-9,-6,4,-3,-3,1,-4,2,10,4,6,10,1,-7,-5,6,2,1,5,10,6,-1,10,4,9,-2,3,-7,3,9,5,-5,7,-4,2,2,7,-8,9,7,-10,-5,10,-5,-5,2,-10,-8,3,-1,6,-2,-7,8,-10,3,5,-3,7,-7,-4,2,-5,3,2,2,-5,1,-3,-7,-7,5,8,4,-7,10,1,5,4,-4,2,-6,-10,-9,7,8,-8,-3,-2,-2,1,10,5,8,5,-6,9,6,-9,4,2,-8,-6,7,-2,-7,-2,-5,-4,4,8,-6,2],[-6,-8,-4,4,-1,7,-6,-8,1,10,6,-2,3,2,7,-3,4,-5,2,-4,-8,2,9,-9,-9,-10,-2,7,2,-9,3,2,-5,-10,6,1,-5,10,-4,-6,-7,-8,-9,-6,-4,2,9,7,-2,-1,10,-2,5,-7,-10,-2,1,8,6,-3,-1,10,-10,3,3,-8,-4,-6,-2,-9,-9,-1,-10,-2,-7,7,-9,-9,3,1,-4,10,1,8,-2,8,-8,2,10,-6,-9,4,-1,9,4,1,10,7,-9,5,-4,1,-5,-9,6,-3,-10,3,9,5,-1,-1,-10,-2,-3,-8,-3,-8,3,3,-5,-2,-3,-6,8,-8,-10,2,7,-8,-3,9,7,-4,5,8,4,-4,-9,-3,-2,8,10,-3,-3,7,-9,-2,4,-5,-5,-8,6,-10,-2,4,2,9,1,8,5,2,2,10,-3,-6,9,9,-5,2,10,3,-7,3,-4,-4,6,3,-3,5,-10,-4,4,6,-2,9,4,3,4,-9,-9,-9,2,-5,7,-1,-3,-5,10,-8,-10,4,7,-5,-5,1,-7,9,4,-4,-5,9,-2,5,-8,4,-10,-1,-6,-9,-1,5,3,-7,9,10,-8,2,-5,-4,1,-10,6,7,-8,-7,9,6,7,10,7,-9,-1,7,-7,-9,-10,-7,-8,10,-3,4,-8,-3,-4,-2,3,7,10,9,6,-8,-7,-3,-1,3,-2,3,5,-7,-7,1,-10,-5,2,-10,4,-5,2,7,2,5,-7,6,-4,-3,1,4,-2,-2,3,-5,9,-7,7,-4,6,-3,-10,6,-1,9,-5,-5,-10,-3,10,-1,5,2,3,-3,7,-1,6,-3,6,-10,2,8,-4,-6,-9,3,-6,8,-1,8,8,5,9,-2,7,-6,9,3,-6,-8,-4,1,-8,-9,9,-6,-9,10,8,-2,3,-6,-5,8,5,-8,-10,1,7,8,-9,4,7,7,5,-10,9,-5,-2,6,10,8,-3,8,1,6,10,8,-4,-3,-4,9,1,-8,8,2,-9,6,9,10,1,10,3,-9,4,-6,-6,-4,1,-10,7,7,-4,6,8,-3,-9,10,-2,-9,-2,-7,-1,7,-2,-1,1,-4,2,8,5,8,-6,-8,-9,5,1,2,-2,4,-8,-4,4,3,8,-7,-3,-9,-5,-5,3,8,3,-7,-10,10,7,-8,4,8,-1,6,-2,-2,3,3,-1,-1,-2,-9,9,-2,-5,-7,2,-2,-4,8,5,-5,9,-4,1,-5,4,-7,5,-7,-2,1,4,8,4,-4,-5,-9,6,-5,1,-2,-5,-7,-10,3,1,-7,-9,-4,10,6,-6,-4,-8,-1,-10,-5,-2,5,5,6,-4,-2,8,10,4,7,-8,-6,1,-7,-2,4,-5,6,7,-7,-6,5,-6,4,-8,-4,4,-5,9,6,6,-5,-8,-10,-4,-7,-7,4,5,5,-3,-2,-9,3,-10,-9,-8,-7,5,3,-6,2,3,9,8,-1,-3,9,1,1,-1,-8,-5,7,-4,-1,-1,6,-9,-1,-8,-7,7,-4,7,10,6,-9,4,-10,6,-1,-4,-10,1,-9,6,-10,1,-1,-9,-8,-8,-5,3,-1,9,-8,8,-6,-1,-7,-1,2,-1,10,-4,7,5,4,-9,9,-8,1,-6,2,9,8,6,-2,3,-9,10,8,-9,-3,9,6,-8,-3,3,-4,7,-2,10,-10,-8,9,-6,-3,-9,-3,6,-6,-6,9,-6,-2,4,4,2,8,-6,7,-4,-8,5,-3,-1,-7,10,6,10,-9,-4,10,-10,5,7,-9,-2,-6,-6,-10,-2,6,5,-9,4,9,10,3,10,-5,9,10,1,-8,6,6,7,1,-5,-6,8,-8,-7,-10,10,7,-1,3,-2,-9,-1,8,8,-1,-10,4,4,-6,-3,-1,-2,-4,-3,5,8,-4,8,8,-1,-10,5,9,-4,-2,9,-1,10,-6,-10,10,4,6,8,-9,-2,10,-1,-9,-3,-3,4,5,-9,9,-3,-7,5,-8,-9,3,-4,-1,3,-3,10,-9,1,-10,-7,10,-10,-7,-2,9,2,3,9,4,-3,-6,-2,-7,3,3,-6,9,10,2,-1,-3,7,10,9,5,8,5,10,-4,7,2,8,1,7,10,-6,-2,9,8,5,-10,-7,-4,-4,10,4,5,3,-2,1,8,-6,-10,-2,3,-4,-8,-5,-7,-1,-10,-9,8,3,10,-3,1,9,-4,-2,6,-7,6,-9,1,-2,-6,10,-2,-6,-8,3,10,-3,-4,-1,-2,9,10,-2,9,-6,4,-10,8,1,7,-5,7,-3,-4,3,3,-3,9,8,9,4,-9,-2,-10,-2,6,-6,-7,5,-5,7,-2,3,-8,-1,4,-10,10,9,-4,9,-8,4,5,-7,10,8,-6,3,-5,-1,-2,3,3,-3,1,-7,-8,4,-10,6,5,-2,-9,5,1,-3,6,-6,6,-6,-1,7,3,5,-2,-3,-6,-8,-2,-9,8,8,5,-5,-3,-1,-5,6,-2,3,-3,-3,-3,-6,-5,-10,6,-8,-1,-4,-5,9,-5,-10,-3,3,1,-6,8,-9,-4,7,-6,3,-10,-10,-3,-7,-1,9,9,-1,-7,-3,9,-9,3,-5,5,-4,6,-1,2,-1,-4,8,-10,4,-8,-6,10,-9,5,2,1,-6,10,8,-7,7,-7,5,-6,9,-7,-8,-2,10,3,7,7,-1,-1,1,7,-9,4,4,-4,-3,-7,8,10,-7,9,6,-7,3,9,-6,-3,-1,-1,-7,9,6,3,-5,1,7,-8,-5,4,-3,-3,9,5,3,6,-9,-3,1,8,-10,-2,8,-4,4,-3,10,7,-2,-9,6,-8,-2,-1,-7,-1,-5,-6,4,6,-9,-7,4,8,6,-2,5,-9,-1,10,-9,-4,5,-7,-3,6,-3,1,-7,-5,8,-7,-9,10,9,7,2,-10,3,-7,-4,8,-8,-7,10,7,-3,-9,-3,4,10,9,3,10,-9,-4,-1,-2,-3,-3,-3,9,7,8,-10,1,4,-1,-9,6,-9,3,-5,9,4,-3,2,-10,-1,-8,-1,-10,-1,1,-1,10,-7,1,7,-2,-2,5,8,-5,-6,-1,-6,-1,1,6,8,3,8,1,-4,4,9,-1,7,-5,3,-7,6,-5,-1,-8,-7,-8,5,-8,-2,4,-4,-8,5,3,9,4,-9,10,-9,8,-1,9,-6,4,1,-9,5,5,3,7,-9,7,1,7,8,-6,-4,5,-3,-7,-7,1,-8,-5,6,10,4,-3,-7,-4,8,3,6,1,7,6,-6,7,3,4,-3,-5,4,-1,-8,5,5,-7,6,-10,6,6,-3,8,6,-5,8,5,8,2,-10,-4,-7,-8,7,-3,-4,-6,3,-2,8,9,9,-8,1,-5,-1,8,7,8,-3,-8,-3,3,10,6,-5,2,8,-3,3,1,-6,-1,-4,1,-1,4,3,9,-7,1,-9,-7,4,7,-7,-1,-7,10,-1,-9,-1,-6,2,-8,-2,2,2,10,9,-5,-8,-3,-1,6,-5,-6,-10,1,-2,3,-7,-5,4,9,7,-2,-2,-9,8,-7,-2,7,7,-6,-6,3,3,4,-5,3,-7,-6,7,-4,-5,-8,-5,-9,-3,-1,3,4,-4,-5,3,1,-2,1,-6,-6,7,8,-9,4,3,2,-9,-3,-7,2,-6,-10,-3,8,7,8,8,-5,4,-10,5,4,8,-9,-8,5,-5,4,7,7,8,7,3,2,1,6,-5,2,-10,8,-3,3,7,7,-9,-7,10,-2,4,-2,-7,-1,-1,-4,3,10,-7,3,8,8,-2,4,-9,-7,-10,9,7,10,2,-10,7,10,-3,-8,3,-8,-10,-9,1,-1,-4,8,10,-1,1,-9,1,2,2,-5,-5,2,-7,2,8,9,-4,7,-7,6,2,-8,-5,-7,10,6,6,9,-10,3,4,3,-1,2,1,-7,5,5,4,9,-7,7,2,9,7,-1,6,-9,-6,-4,-10,9,-4,5,10,4,-10,1,9,5,1,-8,-2,3,-1,7,8,7,2,-4,8,10,-10,-2,-10,-8,-5,-8,-7,-8,-8,10,-1,-1,-10,5,-2,-8,5,-3,8,-6,8,-1,2,3,-4,-7,-9,6,-3,7,-8,-2,-6,-6,6,7,-5,-1,10,1,7,7,-8,3,-5,-1,-7,6,7,8,-5,9,5,-8,-4,-9,9,-4,10,-10]], dtype = "int8")#candidate|11386|(10, 1584)|const|int8
bop_11387 = relay.right_shift(var_11371.astype('int8'), const_11386.astype('int8')) # shape=(10, 1584)
output = relay.Tuple([call_11358,call_11370,const_11372,bop_11387,])
output2 = relay.Tuple([call_11359,call_11373,const_11372,bop_11387,])
func_11390 = relay.Function([var_11371,], output)
mod['func_11390'] = func_11390
mod = relay.transform.InferType()(mod)
var_11391 = relay.var("var_11391", dtype = "int8", shape = (1, 1584))#candidate|11391|(1, 1584)|var|int8
output = func_11390(var_11391)
func_11392 = relay.Function([var_11391], output)
mutated_mod['func_11392'] = func_11392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10830_call = mod.get_global_var('func_10830')
func_10831_call = mutated_mod.get_global_var('func_10831')
call_11413 = func_10830_call()
call_11414 = func_10830_call()
func_6189_call = mod.get_global_var('func_6189')
func_6194_call = mutated_mod.get_global_var('func_6194')
var_11420 = relay.var("var_11420", dtype = "float32", shape = (22, 5))#candidate|11420|(22, 5)|var|float32
var_11421 = relay.var("var_11421", dtype = "float32", shape = (550,))#candidate|11421|(550,)|var|float32
var_11422 = relay.var("var_11422", dtype = "uint64", shape = (104,))#candidate|11422|(104,)|var|uint64
const_11423 = relay.const([[9.258520],[-3.220877],[0.503970],[9.192016],[-3.813025],[7.120919],[2.341823],[5.934009],[-9.306485],[4.479290],[-8.813214],[6.863700],[-8.790556],[8.139280],[-9.702855],[7.736011],[-0.682015],[-6.058510],[-8.680273],[-4.732619],[1.035690],[6.281085],[3.567443],[3.944922],[-5.333658],[8.452464],[-1.212523],[-5.473555],[3.890153],[-4.072900],[7.204494],[2.238392],[1.925582],[2.808537],[-8.809736],[-5.938296],[-6.501816],[-1.809704],[-8.818113],[3.103630],[9.868423],[5.449989],[6.963500],[-0.631561],[3.353098],[-4.887133],[-9.766211],[-6.143944],[-2.690166],[-7.519271],[3.185074],[-4.720597],[-6.322752],[2.703630],[-8.903364],[-0.395409],[6.286095],[6.195431],[1.437702],[-0.127489],[-9.670639],[0.043401],[-4.506814],[-8.754266],[0.086185],[2.458489],[4.329613],[-4.469631],[5.272227],[2.627915],[1.567553],[8.941388],[5.849638],[3.807019],[-7.206100],[-7.473613],[6.624658],[-6.515494],[3.061926],[-1.826942],[7.840014],[-1.355941],[4.133282],[-6.952109],[-4.184886],[-8.121607],[3.931595],[8.632603],[-7.442135],[3.517652],[-6.784546],[-7.554545],[2.389447],[0.842453],[2.573843],[-8.530782],[-1.614810],[-5.572628],[3.214446],[-7.464985],[-0.792210],[0.765702],[-7.434497],[-8.727544],[-9.146128],[1.259388],[5.131979],[-4.051267],[-4.709104],[-0.558700],[2.232083],[-6.877968],[6.081507],[5.083336],[-5.874501],[-9.686363],[-0.715939],[-7.228021],[-6.112447],[6.940306],[7.277669],[8.234328],[-8.248891],[8.870393],[-8.524483],[7.696976],[-8.690170],[3.299912],[-7.307343],[6.002216],[-2.693809],[7.600347],[2.718104],[7.161483],[-8.123213],[-4.652449],[3.080381],[8.545372],[3.370916],[7.769147],[-9.566869],[8.775457],[-6.794679],[-4.018034],[8.309612],[4.708955],[6.856533],[-8.779381],[9.665122],[1.281359],[6.337776],[8.639866],[2.358221],[-7.726093],[3.879417],[-0.421059],[-6.733786],[9.761798],[-5.735512],[5.477330],[1.231653],[4.255453],[9.142498],[7.436252],[2.644411],[6.147254],[4.341968],[-8.230995],[5.815170],[2.120662],[-5.803017],[-8.651253],[-4.439370],[3.509105],[0.901181],[-2.480623],[-5.821099],[6.377996],[-3.738982],[-2.974968],[7.562948],[-0.624256],[-9.914297],[-3.918992],[6.402342],[-3.127861],[8.750009],[4.742915],[-2.927206],[8.782747],[1.192043],[-9.674317],[9.777474],[-2.802294],[1.468634],[-7.471670],[-9.184150],[1.211123],[3.738122],[-9.032960],[1.868834],[-7.491827],[8.811470],[-7.484674],[-7.670309],[1.160324],[-4.367237],[4.151590],[2.452238],[1.253348],[-1.375801],[-5.489708],[-2.355043],[8.646637],[3.212940],[-8.143610],[6.386707],[8.655279],[-5.021305],[-5.742158],[4.588547],[6.542296],[-8.086941],[-4.861064],[-9.304550],[-7.709112],[9.599395],[4.337713],[-1.788458],[5.791927],[-6.584507],[-4.055692],[-7.641450],[-9.614077],[-6.787974],[9.370554],[-8.571910],[8.460228],[-8.650105],[-7.402076],[3.630185],[7.778535],[2.636548],[-3.045078],[-2.346978],[8.055586],[9.988042],[-5.776476],[-6.939309],[3.286109],[9.151603],[-0.929863],[3.104855],[-4.175171],[8.439011],[-2.276009],[7.821622],[8.228512],[-5.873780],[-3.821072],[1.498289],[8.287856],[-9.869961],[-7.026825],[-7.404234],[0.780659],[6.330960],[6.376450],[7.098461],[-5.807905],[-1.225255],[0.421629],[-6.521065],[8.218910],[-3.733947],[7.279715],[5.174051],[-1.215118],[-0.404084],[-9.313297],[-7.130506],[9.018156],[-7.513909],[-3.086804],[-8.082803],[-9.667163],[7.460112],[3.525865],[8.890425],[-5.850851],[-6.473848],[9.328195],[-1.904694],[9.301045],[4.702167],[6.079357],[7.298060],[8.879890],[5.881158],[7.827631],[-8.348640],[5.507757],[8.164609],[0.557210],[5.498530],[-4.332608],[-1.243696],[3.817581],[-5.195995],[6.069440],[6.375260],[4.543667],[7.416084],[-3.691751],[3.484259],[0.907879],[3.461515],[0.588813],[4.743418],[0.735969],[7.947319],[-5.926369],[-1.469676],[-6.180166],[9.347465],[-8.549503],[2.375895],[7.620934],[-9.824272],[3.055199],[-4.161337],[3.875266],[8.547767],[-6.331167],[5.737189],[1.287566],[-7.438590],[-4.756560],[-2.040944],[4.139504],[4.797458],[-4.541059],[3.151908],[6.837164],[5.676269],[7.331505],[3.307206],[3.374191],[-0.051691],[1.183692],[-0.754190],[-5.574888],[0.847608],[8.366828],[1.397756],[8.068732],[-9.444828],[8.665521],[3.747896],[5.927526],[-8.621645],[-5.314070],[3.798361],[-8.299456],[-1.983109],[5.415086],[9.611329],[8.171154],[4.209828],[-7.103039],[7.361764],[1.245843],[7.900037],[2.518549],[3.244209],[3.822785],[-7.642151],[-5.630005],[7.995656],[4.237490],[-8.347530],[-7.341236],[-0.226640],[-1.474959],[-2.904621],[-1.923147],[-0.178843],[5.637229],[7.525568],[4.877936],[2.370055],[-4.288030],[-4.961155],[8.519289],[7.303924],[7.329517],[-4.457759],[8.750654],[7.217512],[-1.949401],[-7.992455],[2.007081],[-7.181609],[-3.500886],[-3.995048],[-7.535291],[-7.383439],[5.553552],[0.719365],[2.039066],[3.025526],[9.259424],[-9.768170],[-5.536523],[-6.539641],[-0.118110],[7.913570],[-1.974076],[-2.852675],[0.597533],[-1.349941],[4.471972],[-9.586799],[1.712029],[7.412989],[3.303325],[-5.576596],[-3.564421],[8.649800],[-1.866063],[6.669035],[5.794175],[9.823322],[-0.195772],[-6.939283],[-0.406024],[-7.480869],[-4.032813],[-5.709760],[-8.367787],[-8.408512],[-8.516936],[-9.342235],[2.973433],[9.913967],[-6.473997],[-2.362596],[8.181536],[6.512231],[-4.031075],[-7.882260],[-2.437379],[-8.418024],[1.665422],[-2.338184],[-7.196058],[0.594655],[6.219636],[-5.505230],[-1.559451],[7.593579],[-6.796815],[-7.541851],[5.188449],[-6.864361],[5.836989],[-3.135837],[8.680091],[-8.137298],[5.409558],[-3.627158],[1.292737],[-0.515739],[-3.383434],[-7.522587],[-2.410056],[9.856106],[6.702005],[-3.946974],[1.838430],[-8.896874],[6.170851],[-8.429121],[6.420088],[-4.383675],[1.043965],[0.397840],[-9.039329],[-5.525133],[-8.639748],[0.261605],[-7.777766],[0.864242],[-2.664129],[-8.861568],[-1.224377],[4.477786],[3.729415],[-8.966096],[-0.217723],[9.887172],[-2.034603],[0.717784],[-9.058857],[2.021182],[-8.696569],[4.548752],[0.631877],[-6.022442],[-4.547393],[3.588647],[-9.562037],[8.805271],[-8.042770],[-2.869344],[-7.290307],[-6.321381],[-3.723134],[2.850497],[6.243485],[8.447813],[-9.671850],[-5.147493],[-0.539580],[5.938366],[2.053784],[5.651697],[7.140403],[7.414434],[6.040623],[1.867566],[8.070730],[-6.060422],[5.450041],[-0.115890],[-4.366363],[-2.297578],[-6.620878],[-8.299705],[2.144727],[-3.101367],[-6.035436],[-3.203443],[-0.199204],[8.571802],[-9.238395],[0.134628],[-6.073102],[1.189433],[8.445446],[9.907859],[-8.867611],[-6.038038],[-3.380403],[5.843219],[1.037783],[6.017012],[0.246168],[6.163518],[7.524620],[8.443687],[3.405177],[-6.650333],[-3.687500],[8.596891],[8.025520],[3.859317],[-2.616898],[1.528477],[-0.722452],[1.937044],[-6.128607],[8.681897],[-8.129017],[9.636493],[3.883889],[1.511414],[9.498069],[9.123386],[-0.567450],[0.572749],[9.578660],[0.306781],[6.292023],[-5.464453],[9.138509],[4.383397],[-8.672592],[0.151428],[5.312680],[8.002057],[-8.633265],[-9.758498],[-0.478669],[5.217315],[-9.118119],[-0.507121],[-4.245135],[-1.901975],[-9.857129],[0.374488],[-4.058506],[3.789055],[-0.439749],[3.759451],[2.292395],[-4.880239],[-5.097875],[5.238563],[-5.514202],[4.332374],[-0.125864],[-2.402810],[2.846044],[-3.159973],[-2.234955],[9.984114],[-4.281234],[3.069827],[1.303356],[-8.030055],[6.832492],[-4.072624],[7.905314],[-0.169092],[5.108787],[9.906822],[-9.057639],[-4.215040],[-6.073090],[5.869270],[-9.983178],[4.830630],[-8.561750],[2.189052],[2.587096],[-5.408271],[8.636896],[-4.538670],[3.978441],[-7.257462],[-5.045464],[-7.786731],[-5.117009],[-7.292821],[7.209163],[7.303806],[-8.866136],[-1.794896],[0.201019],[8.569377],[8.301577],[-8.919356],[-1.923081],[-5.971199],[5.033971],[-0.345811],[-8.108104],[-7.484124],[9.689827],[0.306569],[9.814188],[6.397659],[9.663318],[-7.558828],[8.751799],[3.102724],[3.927469],[6.430292],[3.850837],[0.316972],[3.206899],[-5.440264],[-0.552011],[-4.596213],[-0.685818],[-2.350914],[-7.083721],[5.011824],[0.289748],[-5.306659],[9.823251],[-8.500327],[4.676642],[5.938609],[8.339765],[-4.494231],[-2.486716],[-3.428580],[6.857726],[8.676321],[-7.644362],[1.963353],[8.071618],[-8.965684],[-8.677438],[1.296919],[-4.511777],[0.335561],[-2.331434],[-1.286003],[3.436053],[-4.640521],[-7.029984],[0.299629],[7.506390],[5.173910],[-5.627301],[-3.080973],[1.668755],[0.037607],[2.929817],[-3.419419],[-7.957536],[-1.084160],[-2.077472],[-8.688572],[8.492385],[5.193603],[0.912269],[1.930606],[8.413772],[-6.068686],[-2.630682],[8.429861],[6.116445],[4.854940],[-3.657660],[-8.228617],[3.850510],[4.312945],[-3.389802],[-7.252630],[-7.322960],[4.496580],[-5.330225],[-3.287736],[6.388335],[6.668126],[1.862787],[1.746582],[8.165911],[4.005143],[-6.214190],[-1.226917],[-5.902555],[3.922498],[2.196755],[-1.786896],[-5.847597],[1.474451],[3.190271],[-9.800693],[-0.935209],[-5.030678],[1.742070],[-7.614857],[-4.169080],[-7.292645],[-4.438098],[6.459426],[-8.109410],[5.579155],[-3.674587],[7.364759],[7.705292],[3.959396],[-4.199604],[9.475392],[7.718798],[-9.936974],[1.237458],[-5.870635],[-1.142118],[8.326181],[1.002585],[-3.362819],[1.726742],[-1.569579],[9.033986],[-1.521048],[-9.383717],[6.469161],[-0.641867]], dtype = "float64")#candidate|11423|(784, 1)|const|float64
call_11419 = relay.TupleGetItem(func_6189_call(relay.reshape(var_11420.astype('float32'), [1, 10, 11]), relay.reshape(var_11421.astype('float32'), [5, 10, 11]), relay.reshape(var_11422.astype('uint64'), [104,]), relay.reshape(const_11423.astype('float64'), [784,]), ), 0)
call_11424 = relay.TupleGetItem(func_6194_call(relay.reshape(var_11420.astype('float32'), [1, 10, 11]), relay.reshape(var_11421.astype('float32'), [5, 10, 11]), relay.reshape(var_11422.astype('uint64'), [104,]), relay.reshape(const_11423.astype('float64'), [784,]), ), 0)
func_10469_call = mod.get_global_var('func_10469')
func_10470_call = mutated_mod.get_global_var('func_10470')
call_11430 = relay.TupleGetItem(func_10469_call(), 2)
call_11431 = relay.TupleGetItem(func_10470_call(), 2)
func_11192_call = mod.get_global_var('func_11192')
func_11196_call = mutated_mod.get_global_var('func_11196')
const_11433 = relay.const([-1,-3,-5,6,1,5,9,6,-1,7,2,-4,-9,-4,-4,-4,-9,9,-7,7,1,5,-2,-7,6,2,9,-4,10,1,3,8,6,8,-2,-3,-7,-10,-9,-9,-10,4,4,8,-4,-10,6,-10,7,6,-1,2,-7,-6,-3,3,5,-3,-3,-6,1,5,6,-2,3,6,-8,1,-3,4,-1,9,4,6,-4,6,8,7,-9,9,-8,6,-3,1,-4,-4,-2,3,-7,-3,1,8,-5,5,3,-5,-1,7,10,4,7,-2,-2,-6,4,-10,1,6,5,9,5,1,9,-2,9,4,3,-4,-1,-4,10,-1,3,8,-9,8,-2,-2,6,-9,-9,1,-1,4,3,-10,-1,-5,-10,-4,1,5,-8,6,10,-1,10,-8,4,4,10,-2,7,-7,2,4,-3,7,-5,-7,8,-3,-7,1,4,1,-1,9,2,-3,-9,-8,-7,4,-9,8,-9,8,-5,-9,6,5,5,-5,1,-3,-6,-3,-9,-8,9,6,8,-8,-2,-4,-9,6,-4,-2,1,-5,10,2,8,8,6,7,-5,-9,-2,-3,-1,-4,2,-9,-5,9,-4,-5,-3,-2,-4,-6,-6,5,-9,10,1,-4,3,-5,-10,4,-7,10,1,-2,-3,-7,5,-10,4,4,-5,6,4,6,6,-9,10,-7,-1,7,7,-4,8,5,-3,5,7,-6,5,-4,4,7,3,5,3,8,8,2,-6,-7,-6,-7,-6,-6,6,3,5,2,-2,-4,10,4,-5,-3,-3,-2,-3,-6,3,-1,3,-7,-1,-8,7,-9,7,-5,10,-5,-8,-4,7,1,1,7,5,-4,-4,-9,-6,7,2,8,-10,4,10,-1,5,7,4,-2,9,-5,-8,-3,5,-10,10,8,2,7,8,-1,10,3,-1,4,10,-10,-8,-5,-2,9,-4,1,-8,10,-8,3,6,-3,10,6,9,-8,-10,9,9,-4,-6,1,-5,2,-1,-1,-10,5,-6,-9,8,3,10,1,-1,-6,-2,-10,9,10,6,8,-8,5,-3,-10,-10,2,2,-3,8,9,-8,5,-9,-7,8,1,8,1,-8,6,-3,-10,-10,9,2,-8,-5,8,-9,10,-10,-7,-7,-4,1,-5,-6,9,-7,6,4,-10,6,-6,-2,-4,9,5,-2,-3,6,-5,-4,-10,3,-10,9,-10,7,2,2,6,-9,-9,7,-2,-1,-5,5,6,3,-7,-8,-9,-2,-8,9,8,-2,-7,-1,2,-9,-7,-4,2,-10,2,-5,5,-4,-2,5,-10,-8,-4,9,-3,4,-3,-4,8,4,-2,-2,6,7,10,-7,7,-7,-6,-8,5,8,2,2,6,9,7,-2,-1,1,1,2,-3,10,5,8,-3,9,8,3,-9,1,-8,-7,2,-10,5,-2,1,10,1,10,-4,-9,-10,6,9,-3,10,5,7,-6,9,3,-9,8,8,-6,-6,-5,-9,4,-8,-2,7,2,-5,6,-6,4,1,7,-1,-2,-8,-3,-9,5,-4,-8,6,-4,-8,-7,-1,-2,-4,-2,2,3,-2,-8,-1,-10,10,7,10,9,4,-4,6,7,-5,-6,-4,8,5,-1,-9,-3,-9,-6,-2,6,-10,2,6,-9,-10,-7,-4,-4,-1,7,-6,-8,1,-3,-1,-2,1,9,5,10,3,-2,4,-7,-1,-4,7,1,8,-2,4,9,9,-5,-6,-10,2,-7,9,1,8,-4,-1,-2,8,-7,-1,-8,-6,5,-7,10,-8,-8,-1,-7,-8,4,8,6,4,-8,2,3,10,10,4,1,-7,9,9,8,8,7,-10,2,8,6,8,10,9,7,1,5,6,7,1,5,7,-7,-4,-2,-1,-4,10,-6,3], dtype = "int64")#candidate|11433|(700,)|const|int64
var_11434 = relay.var("var_11434", dtype = "int64", shape = (96,))#candidate|11434|(96,)|var|int64
const_11435 = relay.const([-4.860811,5.800957,1.479085,2.584575,1.950869,-4.081583,9.821789,9.160369,-1.853497,2.231552,9.102547,-6.206159,1.822979,-8.613329,-8.065006,-2.005480,5.379767,-5.362788,7.621185,0.043101,9.533740,-5.665433,4.863377,-3.343003,-2.756752,-6.092032,-2.290721,9.598707,7.225324,7.369903,6.972885,-0.737391,6.202226,-3.480950,-6.710289,3.315500,8.234932,-5.499288,7.531479,-5.764323,0.438654,8.423108,5.494076,0.330867,-7.285678,-7.829069,-8.488385,7.226190,1.175369,3.829370,6.332884,5.485083,-3.255674,2.877701,9.275023,7.595015,-9.125550,-4.843305,-2.833630,-9.974876,-9.269398,-3.233964,-8.823459,-9.384080,5.319219,4.440031,-9.355173,6.703210,2.940933,-2.850908,-9.491344,5.391928,-9.826785,4.925214,9.701642,-9.342893,-0.228328,-0.018975,-0.792506,2.183176,-5.636277,-4.761585,4.479371,-2.968246,-7.538275,8.719163,-6.742889,-7.061581,2.536710,5.374712,9.339312,-5.898359,8.912459,-8.769306,-8.396365,1.932529,8.340158,0.272200,-4.886858,1.918962,7.150683,6.388639,8.849152,-8.088136,3.255050,6.969875,4.726236,4.069140,-4.411881,-4.866359,5.148170,-3.315797,5.865155,7.299471,9.574738,5.404292,-4.935221,-4.124834,-4.577553,-0.547767,0.753518,-7.732158,0.444635,2.298949,-0.862869,-2.038971,1.630596,-7.097339,5.850421,-0.757138,-5.620009,8.011547,7.807814,-1.925034,-8.799139,0.570232,-8.142424,5.329888,0.547595,8.971223,-9.413722,1.452837,-9.470368,3.588259,-7.453072,-9.779037,9.714619,9.079803,-1.817752,-1.116954,-9.046386,-3.526452,5.957246,-3.395167,-5.329645,-2.893336,-5.225384,-5.815592,7.994004,-1.997105,-3.034735,-0.972799,-2.395845,-1.633051,7.312803,6.962039,-6.579516,-8.551138,2.896586,7.128866,9.504671,1.164126,9.408080,-4.540239,1.665337,-2.806881,-7.080084,1.103815,-4.014809,0.920412,-9.500436,5.911193,-1.758396,-0.113435,9.318270,5.511086,-4.831512,-8.317602,-3.041053,-6.023262,3.836953,5.206162,-0.361678,-1.853570,-5.086085,-7.297434,-2.183985,-8.309111,-3.003719,9.637530,-2.006997,-3.788560,8.615984,-4.641072,5.638331,7.304334,-2.316418,-0.374519,9.034096,1.595580,-4.965868,-3.230969,-5.081023,7.378951,3.197958,-5.964811,0.338375,-4.545086,2.456914,1.142804,-7.606699,7.560067,8.677602,5.392347,-9.654029,4.753220,-3.587320,1.182592,-3.221192,7.901069,1.650674,5.160557,-1.563132,1.763838,-7.765277,5.018548,5.477135,0.834076,-4.146294,6.540095,-8.400620,-4.177320,-8.776541,0.143813,-1.130609,3.412318,-8.501692,0.545283,-4.956385,-5.208519,3.054263,8.455706,-2.493175,9.098305,2.203739,8.507880,2.958307,1.094178,2.750717,-8.860035,2.041500,-7.892412,-6.406071,8.053745,-6.345558,-0.785574,7.532243,4.005509,-3.078879,-7.121702,2.716869,8.767902,7.534034,6.572864,6.789973,8.748775,0.553036,-4.682885,3.641541,-2.363874,3.631555,4.621150,2.196495,-0.258306,3.877584,2.965564,-9.817706,-7.830982,6.305884,8.457780,9.537837,-2.853442,-6.746526,6.281261,-3.606866,3.551880,-4.943055,-9.315809,4.800774,6.643600,3.083952,-7.416238,-7.109126,-3.149476,-5.422035,-4.854162,-1.316445,-9.121758,-8.783570,-3.234159,8.193708,-0.904084,-8.300268,4.021613,-4.235961,-0.121934,-5.460784,9.189328,5.145293,-1.086987,3.951686,-1.567681,3.478337,-5.650431,-9.103194,-5.269241,2.741800,2.809188,2.197736,9.366586,2.220564,-4.986572,-2.873353,-4.527793,1.673177,2.637731,-4.653034,-7.703868,-5.317568,2.395582,7.802655,2.322083,-7.835768,-9.546934,4.167531,4.434903,7.835500,-8.194952,-3.660528,-4.588448,-1.669183,-0.730055,5.829179,-1.409565,-7.616040,-2.031290,-8.591031,-7.710386,-7.992754,-7.507312,-9.619002,-0.910097,3.814935,-5.376361,-4.214385,7.391404,-1.596259,5.477350,-0.929210,-4.559222,3.175627,-3.439861,-8.858165,-8.598182,1.889242,-7.280535,1.096843,-4.884703,-0.873336,-7.101031,6.548687,4.641394,2.159204,3.945075,-1.575084,-4.914130,-4.387164,2.807287,3.359379,7.556312,2.034432,7.057464,-5.489430,2.002355,-3.826341,1.578338,-0.796941,2.987842,8.711151,6.625410,-1.384955,8.072258,3.403358,3.724858,6.549475,7.920236,4.006770,0.991386,-7.465419,-9.320412,-8.798921,-0.024629,-9.478694,-1.809091,-5.702150,5.099916,-0.280451,0.683647,-6.296550,-5.604072,1.041596,-6.267336,-4.855603,0.711497,-1.176038,2.362587,4.182779,4.340981,-6.386404,-5.960855,-7.458928,0.982209,-8.485597,-6.066032,-4.990347,-0.781480,-6.470162,-0.492637,-6.009517,-2.412204,5.651946,5.212962,5.534529,-7.022689,1.678591,0.388597,-2.774972,-4.781362,5.920470,2.874258,0.927480,-6.168928,-3.262278,0.374917,-4.619595,-2.731028,6.827882,-1.669716,-1.454313,-9.316447,7.854797,6.952236,1.990129,1.594190,-5.725786,-1.706187,-3.575670,-3.195847,9.013907,-9.819400,2.674399,8.652701,-0.723476,6.038943,-2.588523,-6.815267,0.658696,7.224000,7.304937,-0.962432,-1.661985,-0.810853,4.658930,8.031285,-4.479777,-7.402118,-7.745030,-6.457371,5.434681,-8.181823,-0.889042,-0.620564,-0.534687,-4.097179,-8.373816,-0.532498,1.142732,8.291903,6.466166,6.977972,-1.681867,0.279615,9.986095,-7.676036,8.939416,-5.950364,8.947778,-5.821477,-4.232600,-5.113994,6.479989,5.303293,5.468682,5.620107,-8.091228,-7.876264,-2.945377,9.124545,3.622911,-7.342933,-5.304717,-9.588199,9.288653,-5.120624,4.396186,-7.557530,7.631055,8.318350,1.647280,9.600715,8.147586,-1.920084,9.609924,2.280720,4.539636,0.487017,-3.683738,-1.264460,-9.327677,-7.041968,0.614909,-9.480495,-2.662572,5.132578,-3.839986,5.291299,-9.421457,2.374266,-9.440310,-3.563831,4.137649,5.781573,-7.159680,9.091538,-1.259026,-4.488866,1.889711,-3.534202,9.800880,7.620527,-0.317617,0.288982,-7.616925,-0.923879,-3.585560,3.011837,5.073885,6.456383,-5.224754,-4.567559,-3.135811,-4.825580,-5.001247,-1.168279,-8.400101,9.498009,-1.844009,6.611128,-2.954243,2.145549,-9.122645,-8.591834,-6.782186,0.600166,-9.348281,9.563092,4.121007,-3.051863,4.766601,7.313799,-0.886793,-9.395464,1.296476,-9.468434,-2.846692,-2.632735,-5.518777,-0.165585,7.030885,1.829791,5.330885,-8.522175,-4.754848,-9.985114,5.964501,4.896524,2.021241,1.665157,6.781721,-0.589966,6.625594,-5.004865,8.048208,-0.185196,5.979672,-7.608285,5.745406,9.518102,-0.675613,6.731073,1.546037,7.676633,-2.373568,8.737760,-0.428689,1.918812,1.312215,5.294166,-8.437790,2.063607,6.047254,6.067903,-2.979258,-5.707907,-6.235249,1.826355,-7.064457,-1.024025,8.491566,-2.018961,1.798010,4.169127,-6.610437,9.496049,6.639680,-4.508289,0.629670,9.882199,-2.062116,-6.571924,4.585379,-7.142776,-5.829453,-1.154790,-5.941984,-4.636932,1.886354,-2.758452,-2.589666,-1.404497,-2.388897,3.576928,-0.651887,-4.943005,-0.907428,-0.494216,-5.254408,-3.984867,4.781776,-1.896356,1.701249,-7.423954,-7.663573,-9.043680,-8.216632,-5.985431,8.585288,-7.680178,-6.769650,-5.749534,7.470318,-7.346925,0.300726,6.983688,-5.655866,9.509658,-1.801223,-0.600299,-1.041678,8.066770,5.155406,-2.102547,2.306519,6.018335,7.571368,0.392699,-2.445370,-8.191532,-5.067218,-8.518557,2.349087,-1.864701,4.817414,-4.803752,-8.495049,0.149809,-9.185428,-6.710849,-8.181493,4.441012,-3.513637,4.688847,6.394223,-8.774455,2.571344,-5.600377,-8.947664,-8.944048,4.298686,-2.842981,-6.249106,0.214504,9.284831,6.291522,7.938283,2.053977,2.153208,-8.717027,-1.826018,-4.429352,-6.822225,-5.788601,8.310132,-7.785197,4.408597,-7.743932,-5.919479,-4.161170,-3.365478,-0.001058,7.443941,2.640413,-5.186510,2.761057,-4.661578,-8.731954,-2.952723,-9.595323,3.912319,-9.424426,9.635603,-9.667031,-6.865602,7.565566,-1.608636,7.333072,2.869079,-2.423384,-7.257268,-2.320931,8.482524,3.367035,5.531263,-9.478463,7.170991,8.234790,2.472153,-5.061231,3.637807,-2.628140,7.542175,4.660626,-9.470691,-0.773118,4.370305,-0.279680,0.659981,-5.246508,1.118202,4.200054], dtype = "float32")#candidate|11435|(780,)|const|float32
call_11432 = relay.TupleGetItem(func_11192_call(relay.reshape(const_11433.astype('int64'), [700,]), relay.reshape(var_11434.astype('int64'), [1, 96]), relay.reshape(const_11435.astype('float32'), [780,]), ), 8)
call_11436 = relay.TupleGetItem(func_11196_call(relay.reshape(const_11433.astype('int64'), [700,]), relay.reshape(var_11434.astype('int64'), [1, 96]), relay.reshape(const_11435.astype('float32'), [780,]), ), 8)
func_9946_call = mod.get_global_var('func_9946')
func_9947_call = mutated_mod.get_global_var('func_9947')
call_11447 = func_9946_call()
call_11448 = func_9946_call()
func_10147_call = mod.get_global_var('func_10147')
func_10148_call = mutated_mod.get_global_var('func_10148')
call_11449 = func_10147_call()
call_11450 = func_10147_call()
bop_11469 = relay.add(const_11435.astype('float32'), const_11423.astype('float32')) # shape=(784, 780)
func_9289_call = mod.get_global_var('func_9289')
func_9291_call = mutated_mod.get_global_var('func_9291')
call_11475 = func_9289_call()
call_11476 = func_9289_call()
output = relay.Tuple([call_11413,call_11419,var_11420,var_11421,var_11422,call_11430,call_11432,const_11433,var_11434,call_11447,call_11449,bop_11469,call_11475,])
output2 = relay.Tuple([call_11414,call_11424,var_11420,var_11421,var_11422,call_11431,call_11436,const_11433,var_11434,call_11448,call_11450,bop_11469,call_11476,])
func_11478 = relay.Function([var_11420,var_11421,var_11422,var_11434,], output)
mod['func_11478'] = func_11478
mod = relay.transform.InferType()(mod)
mutated_mod['func_11478'] = func_11478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11478_call = mutated_mod.get_global_var('func_11478')
var_11480 = relay.var("var_11480", dtype = "float32", shape = (22, 5))#candidate|11480|(22, 5)|var|float32
var_11481 = relay.var("var_11481", dtype = "float32", shape = (550,))#candidate|11481|(550,)|var|float32
var_11482 = relay.var("var_11482", dtype = "uint64", shape = (104,))#candidate|11482|(104,)|var|uint64
var_11483 = relay.var("var_11483", dtype = "int64", shape = (96,))#candidate|11483|(96,)|var|int64
call_11479 = func_11478_call(var_11480,var_11481,var_11482,var_11483,)
output = call_11479
func_11484 = relay.Function([var_11480,var_11481,var_11482,var_11483,], output)
mutated_mod['func_11484'] = func_11484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9688_call = mod.get_global_var('func_9688')
func_9690_call = mutated_mod.get_global_var('func_9690')
call_11501 = relay.TupleGetItem(func_9688_call(), 1)
call_11502 = relay.TupleGetItem(func_9690_call(), 1)
output = call_11501
output2 = call_11502
func_11522 = relay.Function([], output)
mod['func_11522'] = func_11522
mod = relay.transform.InferType()(mod)
mutated_mod['func_11522'] = func_11522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11522_call = mutated_mod.get_global_var('func_11522')
call_11523 = func_11522_call()
output = call_11523
func_11524 = relay.Function([], output)
mutated_mod['func_11524'] = func_11524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10830_call = mod.get_global_var('func_10830')
func_10831_call = mutated_mod.get_global_var('func_10831')
call_11580 = func_10830_call()
call_11581 = func_10830_call()
func_10147_call = mod.get_global_var('func_10147')
func_10148_call = mutated_mod.get_global_var('func_10148')
call_11590 = func_10147_call()
call_11591 = func_10147_call()
func_5580_call = mod.get_global_var('func_5580')
func_5586_call = mutated_mod.get_global_var('func_5586')
var_11596 = relay.var("var_11596", dtype = "float32", shape = (72,))#candidate|11596|(72,)|var|float32
var_11597 = relay.var("var_11597", dtype = "float64", shape = (128,))#candidate|11597|(128,)|var|float64
const_11598 = relay.const([[4,-8,-6,-4,1,-9,-4,-7,-8,-7,2,-3,1,5,9,-1,-3,9,-8,-10,-2,5,-9,-1,3,1,-5,10,-4,-4,-8,7,6,9,-9,-10,7,7,10,-2,-5,10,9,-8,7,-7,6,6,-10,-5,3,1,5,-7,-7,7,6,-4,1,10,-5,-5,-1,-7,6,-3,9,1,4,-8,1,-3,-5,1,-10,-6,-8,-9,1,-3,8,-8,-9,-3,-8,-2,-8,-5,-3,-1,-7,-9,5,5,4,3,-5,-10,-1,-7,-4,8,-3,5,9,-8,-10,-1,-7,-2,-6,2,7,6,-5,-5,-2,-10,-7,-3,-10,3,10,-8,-10,-7,-5,-8,10,-8,-6,5,9,-5,2,-5,8,4,-9,4,-1,8,1,10,-1,-8,5,-7,1,-3,9,-5,3,7,-2,-5,-4,-10,-8,-6,-1,8,-10,-10,-6,-3,-10,-3,8,9,1,-2,5,-9,4,-4,2,1,-8,2,-6,10,-5,-3,3,2,5,10,-8,5,-4,7,2,7,-10,3,-4,-6,-7,2,10,-5,-10,5,4,1,10,6,-7,9,2,5,-4,-6,1,-3,4,8,-3,-5,4,6,4,-3,5,-8,3,-4,6,9,2,2,8,-1,4,9,-1,-1,7,4,5,10,5,6,5,-3,-5,-2,-5,-5,10,5,1,4,10,-9,-10,-5,-2,-10,-6,6,6,-6,5,-7,7,6,-10,5,10,6,-2,7,-10,3,-8,7,8,-6,-9,8,7,-4,-6,-8,3,-6,-3,-1,2,10,2,5,-3,3,-3,7,-4,-10,2,-5,-2,-1,8,1,-3,-9,8,-5,4,-2,8,1,-10,2,-9,-8,2,7,1,-7,6,-1,1,-7,5,-3,7,-7,-3,1,-6,2,-8,7,4,4,-9,6,1,4,-3,9,1,8,-4,7,-8,9,7,-5,-7,2,-4,-7,-2,-10,-10,-4,6,-8,-3,-10,1,8,3,-8,4,10,8,4,-10,4,5,2,2,-2,4,-7,-1,-4,2,-7,-2,6,-6,-2,9,8,-6,5,-10,-4,-1,1,9,8,-7,-10,2,1,-8,-4,-8,1,3,-3,-7,9,-1,-9,6,-4,2,2,-9,4,3,-6,-10,-7,7,10,-9,9,1,-2,5,10,7,-3,-4,-8,7,-1,3,2,8,-1,2,8,-9,-8,6,6,-1,-4,6,-3,-5,1,-2,5,6,-10,-9,-10,1,-7,-8,-2,1,-6,-5,-1,-5,8,5,9,1,-8,8,-9,7,-5,8,-4,3,-6,-8,9,-7,-1,10,4,9,-2,-9,5,-10,1,-8,-4,6,9,9,7,5,-8,8,-6,3,4,-2,10,-9,-9,9,-10,-5,6,7,10,1,-6,-2,-6,2,-1,-6,8,3,6,1,4,5,8,5,-3,-7,-7,-1,4,-2,-2,5,6,5,9,-8,-2,6,4,-9,10,-5,-5,-8,2,5,8,1,-9,8,2,4,6,3,1,-6,-8,-6,7,-1,5,10,7,9,-8,5,-10,4,-6,7,-9]], dtype = "int64")#candidate|11598|(1, 576)|const|int64
call_11595 = relay.TupleGetItem(func_5580_call(relay.reshape(var_11596.astype('float32'), [4, 6, 3]), relay.reshape(var_11596.astype('float32'), [4, 6, 3]), relay.reshape(var_11596.astype('float32'), [4, 6, 3]), relay.reshape(var_11597.astype('float64'), [128,]), relay.reshape(const_11598.astype('int64'), [576,]), ), 4)
call_11599 = relay.TupleGetItem(func_5586_call(relay.reshape(var_11596.astype('float32'), [4, 6, 3]), relay.reshape(var_11596.astype('float32'), [4, 6, 3]), relay.reshape(var_11596.astype('float32'), [4, 6, 3]), relay.reshape(var_11597.astype('float64'), [128,]), relay.reshape(const_11598.astype('int64'), [576,]), ), 4)
output = relay.Tuple([call_11580,call_11590,call_11595,var_11596,var_11597,const_11598,])
output2 = relay.Tuple([call_11581,call_11591,call_11599,var_11596,var_11597,const_11598,])
func_11617 = relay.Function([var_11596,var_11597,], output)
mod['func_11617'] = func_11617
mod = relay.transform.InferType()(mod)
mutated_mod['func_11617'] = func_11617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11617_call = mutated_mod.get_global_var('func_11617')
var_11619 = relay.var("var_11619", dtype = "float32", shape = (72,))#candidate|11619|(72,)|var|float32
var_11620 = relay.var("var_11620", dtype = "float64", shape = (128,))#candidate|11620|(128,)|var|float64
call_11618 = func_11617_call(var_11619,var_11620,)
output = call_11618
func_11621 = relay.Function([var_11619,var_11620,], output)
mutated_mod['func_11621'] = func_11621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11222_call = mod.get_global_var('func_11222')
func_11223_call = mutated_mod.get_global_var('func_11223')
call_11638 = relay.TupleGetItem(func_11222_call(), 0)
call_11639 = relay.TupleGetItem(func_11223_call(), 0)
func_3215_call = mod.get_global_var('func_3215')
func_3218_call = mutated_mod.get_global_var('func_3218')
var_11645 = relay.var("var_11645", dtype = "uint64", shape = (104,))#candidate|11645|(104,)|var|uint64
var_11646 = relay.var("var_11646", dtype = "uint64", shape = (208,))#candidate|11646|(208,)|var|uint64
call_11644 = relay.TupleGetItem(func_3215_call(relay.reshape(var_11645.astype('uint64'), [8, 1, 13]), relay.reshape(var_11646.astype('uint64'), [8, 2, 13]), ), 0)
call_11647 = relay.TupleGetItem(func_3218_call(relay.reshape(var_11645.astype('uint64'), [8, 1, 13]), relay.reshape(var_11646.astype('uint64'), [8, 2, 13]), ), 0)
func_3458_call = mod.get_global_var('func_3458')
func_3461_call = mutated_mod.get_global_var('func_3461')
const_11666 = relay.const([-2.978947,-8.859773,7.610742,6.086944,5.657143,-2.266986,9.747291,6.654769,-4.078485,-1.041302,-5.779326,-7.276193,-3.240024,7.650235,-1.702755,-4.994539,4.083535,7.805127,-7.460758,9.987165,7.031675,9.447992,4.688214,2.786600,1.530339,5.519784,-9.164205,-2.833099,6.912214,-4.612820,7.043540,-4.810435,9.165422,9.025408,-4.688787,-2.123864,-7.769822,8.618288,-7.207524,9.917464,-2.781925,8.984598,9.436240,6.474074,4.776139,-2.388202,-1.693201,5.916556,-2.020077,5.295423,-9.489810,-0.039609,-5.300669,-5.581864,-6.236707,-5.125114,-0.738883,-6.950393,-7.557713,-5.833910], dtype = "float32")#candidate|11666|(60,)|const|float32
const_11667 = relay.const([[-6.734099],[-3.877867],[2.924610],[1.591959],[-0.068475],[6.011277],[-4.734365],[-3.160516],[-6.264369],[-0.924207],[-6.013825],[-0.598316],[-8.569763],[0.932918],[-1.274840],[1.644915],[2.481391],[-0.873805],[-3.699716],[-7.841607],[0.210619],[4.177255],[-5.046316],[4.443089],[2.244117],[7.536826],[-7.102068],[-6.928978],[1.750066],[5.663519],[6.622611],[-2.802566],[-6.534436],[-6.810549],[-3.375053],[3.025775],[-3.932874],[5.061464],[7.552256],[-4.718477],[-6.505961],[-4.417586],[5.648140],[-5.935296],[5.163960],[-0.237614],[-9.648289],[8.087028]], dtype = "float64")#candidate|11667|(48, 1)|const|float64
call_11665 = relay.TupleGetItem(func_3458_call(relay.reshape(const_11666.astype('float32'), [12, 5, 1]), relay.reshape(const_11667.astype('float64'), [4, 12]), ), 2)
call_11668 = relay.TupleGetItem(func_3461_call(relay.reshape(const_11666.astype('float32'), [12, 5, 1]), relay.reshape(const_11667.astype('float64'), [4, 12]), ), 2)
output = relay.Tuple([call_11638,call_11644,var_11645,var_11646,call_11665,const_11666,const_11667,])
output2 = relay.Tuple([call_11639,call_11647,var_11645,var_11646,call_11668,const_11666,const_11667,])
func_11674 = relay.Function([var_11645,var_11646,], output)
mod['func_11674'] = func_11674
mod = relay.transform.InferType()(mod)
var_11675 = relay.var("var_11675", dtype = "uint64", shape = (104,))#candidate|11675|(104,)|var|uint64
var_11676 = relay.var("var_11676", dtype = "uint64", shape = (208,))#candidate|11676|(208,)|var|uint64
output = func_11674(var_11675,var_11676,)
func_11677 = relay.Function([var_11675,var_11676,], output)
mutated_mod['func_11677'] = func_11677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9439_call = mod.get_global_var('func_9439')
func_9440_call = mutated_mod.get_global_var('func_9440')
call_11684 = relay.TupleGetItem(func_9439_call(), 0)
call_11685 = relay.TupleGetItem(func_9440_call(), 0)
output = call_11684
output2 = call_11685
func_11694 = relay.Function([], output)
mod['func_11694'] = func_11694
mod = relay.transform.InferType()(mod)
mutated_mod['func_11694'] = func_11694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11694_call = mutated_mod.get_global_var('func_11694')
call_11695 = func_11694_call()
output = call_11695
func_11696 = relay.Function([], output)
mutated_mod['func_11696'] = func_11696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9698_call = mod.get_global_var('func_9698')
func_9699_call = mutated_mod.get_global_var('func_9699')
call_11768 = relay.TupleGetItem(func_9698_call(), 0)
call_11769 = relay.TupleGetItem(func_9699_call(), 0)
output = relay.Tuple([call_11768,])
output2 = relay.Tuple([call_11769,])
func_11780 = relay.Function([], output)
mod['func_11780'] = func_11780
mod = relay.transform.InferType()(mod)
mutated_mod['func_11780'] = func_11780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11780_call = mutated_mod.get_global_var('func_11780')
call_11781 = func_11780_call()
output = call_11781
func_11782 = relay.Function([], output)
mutated_mod['func_11782'] = func_11782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9247_call = mod.get_global_var('func_9247')
func_9248_call = mutated_mod.get_global_var('func_9248')
call_11797 = func_9247_call()
call_11798 = func_9247_call()
uop_11830 = relay.sin(call_11797.astype('float64')) # shape=(2, 10, 12)
uop_11832 = relay.sin(call_11798.astype('float64')) # shape=(2, 10, 12)
func_9643_call = mod.get_global_var('func_9643')
func_9645_call = mutated_mod.get_global_var('func_9645')
var_11848 = relay.var("var_11848", dtype = "int16", shape = (384,))#candidate|11848|(384,)|var|int16
call_11847 = relay.TupleGetItem(func_9643_call(relay.reshape(var_11848.astype('int16'), [384,])), 5)
call_11849 = relay.TupleGetItem(func_9645_call(relay.reshape(var_11848.astype('int16'), [384,])), 5)
func_1141_call = mod.get_global_var('func_1141')
func_1145_call = mutated_mod.get_global_var('func_1145')
const_11853 = relay.const([7.903122,0.998781,2.085049,-3.486014,-7.561896,-2.716203,-7.208908,9.907533,-6.643185,5.687511,0.793443,-0.754774,7.585216,5.916689,-7.373472,4.835757,2.423810,-5.465996,-0.247058,6.674451,2.363628,9.359385,-8.990508,7.906805,9.258886,5.758877,-1.034825,-8.935999,-8.004499,-0.515703,-4.288123,-2.921024,-5.835718,0.472349,-8.568394,9.386716,-8.683371,8.746104,2.156106,-5.694831,6.280934,1.382659,9.121282,1.282320,7.041865,1.251187,-8.245115,5.844164,-2.587347,0.001826,-0.564172,-4.439017,-0.030545,5.652305,-3.855649,-1.571888,3.180889,-9.442970,-5.969211,-3.966755,9.248848,8.014164,8.818002,2.697020,1.365800,-6.583808,5.381230,2.741784,1.795273,-2.303425,-1.618336,2.027372,-1.337241,-4.359742,-4.435115,6.482634,-6.691185,2.895721,0.926047,8.383067,5.382769,-4.874808,-9.712148,-7.998850,-0.047752,-0.473621,-8.309718,-1.271251,4.390568,6.749948,6.513109,5.770188,9.441723,-5.181370,1.632207,-7.385989,1.215791,-2.382294,-9.546225,6.574346,4.154214,4.922220,-6.351474,-3.755140,-1.067120,5.300893,-9.486876,-2.054234,0.521055,0.389597,-2.656235,3.292472,-8.720637,-4.769667,7.722974,-1.729856,2.434715,-2.414294,8.483538,4.518422,-4.318742,-9.586436,3.916831,-2.889615,3.174354,-3.031016,2.121005,5.747256], dtype = "float64")#candidate|11853|(128,)|const|float64
const_11854 = relay.const([2,2,-6,-1,5,-6,3,5,2,6,7,-8,-7,3,6,3,-5,-3,5,9,-9,-9,9,-10,-10,-8,2,-5,2,-7,5,6,6,1,5,-1,7,9,-8,8,-5,6,2,-6,-9,-5,-2,-4,-10,2,-5,10,-5,-9,-7,-10,5,2,7,-4,-1,-1,-7,5,-10,-1,-10,-8,-9,7,-3,-10,4,6,10,-8,-8,-7,-3,-2,-9,-7,-5,3,1,-10,6,-3,-2,2,8,4,-8,-10,-3,-2,-7,-1,-4,-8,4,-9,10,1,-2,3,-2,7,7,-2,2,-5,5,-5,10,-3,-3,-5,6,-2,-8,8,1,-3,-5,-9,1,9,-9,4,-8,-6,-9,2,6,4,9,5,7,8,-2,-10,2,8,2,3,-9,10,7,-5,-8,-8,-1,8,-10,4,7,7,-3,-1,9,6,-2,-7,-10,1,-3,6,-1,-4,5,6,-1,-1,10,-1,5,-6,-6,5,7,-6,6,-4,8,-9,7,-5,10,7,8,-8,7,-10,-9,9,-1,-6,-6,-4,-2,9,10,-10,-8,2,-6,8,4,-4,-3,9,-9,10,7,10,-9,-9,-3,-9,7,-8,2,4,-6,-1,5,-2,6,8,6,-5,8,-5,-4,-1,-8,3,5,-7,10,-9,-9,7,-2,3,4,-4,1,-1,-4,7,1,1,9,-6,-8,-4,-5,4,-6,5,4,-2,7,-1,8,-2,-8,-5,-2,6,8,-9,-10,8,2,8,1,3,5,-10,10,2,-6,4,9,-8,-1,8,1,-9,-9,9,7,9,-5,-5,-2,2,-3,8,8,7,-4,-1,2,6,-7,3,-6,-7,3,6,10,-5,-6,-5,8,6,-8,7,-4,-1,-7,-6,9,3,-5,7,-9,-8,-5,1,-6,5,3,4,-4,-10,-1,5,-10,-2,-7,2,-1,-3,5,10,-3,5,-9,-3,8,-4,-10,1,-7,-4,-1,-2,-9,1,-1,5,-5,7,-3,-7,-6,4,-1,-5,-7,5,-7,4,-4,-2,-5,-8,-1,-4,-7,-7,-3,-8,-5,5,4,-4,10,1,-1,8,9,-6,-1,5,3,-1,-3,3,4,10,1,-10,-1,5,-3,-10,1,3,6,9,9,8,-9,-10,10,-2,5,1,3,8,1,10,-3,3,10,1,-4,-3,-1,-7,-4,-9,10,-5,-6,-1,-2,-10,-4,8,-6,7,-9,2,-5,8,-7,10,-9,-10,-9,-3,-2,8,5,-1,-7,9,-9,4,2,-5,3,4,-2,6,-7,-4,1,6,10,-6,-6,-2,8,8,10,-8,-1,-4,9,4,-8,-7,-2,6,10,10,-9,-10,-8,8,6,-2,8,-7,5,-5,2,3,-6,-8,5,2,-8,-2,5,-6,-3,7,4,10,-7,-2,8,-3,-8,-1,-8,-6,9,7,-5,-4,-1,10,5,5,-7,-1,4,-9,8,5,5,6,-7,-8,6,-1,-3,2,-4,-1,4,6,-9,-10,5,3,-7,3,-2,6,-3,4,-1,5,5,-4,10,-9,-5,8,-6,-9,9,-7,-1,6], dtype = "int64")#candidate|11854|(576,)|const|int64
call_11852 = relay.TupleGetItem(func_1141_call(relay.reshape(const_11853.astype('float64'), [16, 2, 4]), relay.reshape(const_11854.astype('int64'), [2, 288]), relay.reshape(var_11848.astype('int16'), [384,]), ), 1)
call_11855 = relay.TupleGetItem(func_1145_call(relay.reshape(const_11853.astype('float64'), [16, 2, 4]), relay.reshape(const_11854.astype('int64'), [2, 288]), relay.reshape(var_11848.astype('int16'), [384,]), ), 1)
output = relay.Tuple([uop_11830,call_11847,var_11848,call_11852,const_11853,const_11854,])
output2 = relay.Tuple([uop_11832,call_11849,var_11848,call_11855,const_11853,const_11854,])
func_11863 = relay.Function([var_11848,], output)
mod['func_11863'] = func_11863
mod = relay.transform.InferType()(mod)
var_11864 = relay.var("var_11864", dtype = "int16", shape = (384,))#candidate|11864|(384,)|var|int16
output = func_11863(var_11864)
func_11865 = relay.Function([var_11864], output)
mutated_mod['func_11865'] = func_11865
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11867 = relay.var("var_11867", dtype = "bool", shape = (9, 3, 11))#candidate|11867|(9, 3, 11)|var|bool
var_11868 = relay.var("var_11868", dtype = "bool", shape = (9, 3, 11))#candidate|11868|(9, 3, 11)|var|bool
bop_11869 = relay.logical_and(var_11867.astype('bool'), relay.reshape(var_11868.astype('bool'), relay.shape_of(var_11867))) # shape=(9, 3, 11)
output = relay.Tuple([bop_11869,])
output2 = relay.Tuple([bop_11869,])
func_11893 = relay.Function([var_11867,var_11868,], output)
mod['func_11893'] = func_11893
mod = relay.transform.InferType()(mod)
mutated_mod['func_11893'] = func_11893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11893_call = mutated_mod.get_global_var('func_11893')
var_11895 = relay.var("var_11895", dtype = "bool", shape = (9, 3, 11))#candidate|11895|(9, 3, 11)|var|bool
var_11896 = relay.var("var_11896", dtype = "bool", shape = (9, 3, 11))#candidate|11896|(9, 3, 11)|var|bool
call_11894 = func_11893_call(var_11895,var_11896,)
output = call_11894
func_11897 = relay.Function([var_11895,var_11896,], output)
mutated_mod['func_11897'] = func_11897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10147_call = mod.get_global_var('func_10147')
func_10148_call = mutated_mod.get_global_var('func_10148')
call_12020 = func_10147_call()
call_12021 = func_10147_call()
output = relay.Tuple([call_12020,])
output2 = relay.Tuple([call_12021,])
func_12022 = relay.Function([], output)
mod['func_12022'] = func_12022
mod = relay.transform.InferType()(mod)
mutated_mod['func_12022'] = func_12022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12022_call = mutated_mod.get_global_var('func_12022')
call_12023 = func_12022_call()
output = call_12023
func_12024 = relay.Function([], output)
mutated_mod['func_12024'] = func_12024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9946_call = mod.get_global_var('func_9946')
func_9947_call = mutated_mod.get_global_var('func_9947')
call_12092 = func_9946_call()
call_12093 = func_9946_call()
func_9268_call = mod.get_global_var('func_9268')
func_9269_call = mutated_mod.get_global_var('func_9269')
call_12098 = relay.TupleGetItem(func_9268_call(), 0)
call_12099 = relay.TupleGetItem(func_9269_call(), 0)
func_9643_call = mod.get_global_var('func_9643')
func_9645_call = mutated_mod.get_global_var('func_9645')
const_12103 = relay.const([-2,3,-10,-6,-2,-1,-3,5,-5,-2,9,4,5,3,6,2,1,-5,6,9,-6,-1,3,1,-4,-6,4,-9,3,-3,-1,8,4,2,5,-8,-4,-9,4,7,-4,-1,5,9,5,7,-9,-8,8,-1,-3,-3,-9,-4,-4,-10,-5,9,2,-6,-10,-3,-9,9,2,10,2,-2,8,3,8,2,-6,-3,-9,-5,3,-7,2,-10,8,2,7,-1,2,9,-9,3,-4,-4,-7,-3,1,-5,-7,-7,-6,5,3,-8,-1,-4,2,6,6,-10,-10,-3,2,-2,-2,-4,-6,-2,6,-3,-1,-7,-6,6,2,-5,8,1,-6,8,2,6,10,8,-10,-1,7,1,-1,-7,4,5,-10,1,-3,-1,9,-4,7,-3,10,7,3,5,8,9,4,3,4,7,1,2,-9,-10,-8,-5,-8,8,-2,-9,4,2,4,9,9,7,8,-1,8,3,-4,-4,1,-6,-4,-5,3,-4,5,8,1,-4,-7,-6,-6,-2,-7,3,-10,-5,3,5,-9,4,-4,8,8,-6,8,-3,-1,7,3,8,-10,-10,-4,9,-3,9,-5,-3,-10,-9,1,3,7,9,-9,-3,-1,1,5,-9,3,6,-5,-1,7,3,2,-7,-7,8,7,-6,6,4,-9,2,10,-10,-6,-10,-10,9,3,10,-6,8,4,2,3,-3,-10,4,10,5,-6,-9,9,8,-7,2,1,-7,-5,-4,6,1,-2,-3,9,-10,-4,3,8,7,-2,-9,8,9,-6,2,-2,-5,7,9,-10,3,10,7,-7,-3,3,3,9,-7,-7,-6,-9,3,1,-2,-1,-4,10,8,8,-6,5,-4,-1,9,9,9,6,-4,6,-9,2,7,-9,-7,8,9,3,10,-4,6,-4,-1,-8,1,-2,10,-6,-8,-4,1,8,-5,-3,7,-4,3,7,-10,1,-9,-2,9,-6,2,-1,1,-2,2,-3,-5,1,7,-1,5,8,5,2,7,-10,-9,-1,10,-9,1,3,-1,5,4], dtype = "int16")#candidate|12103|(384,)|const|int16
call_12102 = relay.TupleGetItem(func_9643_call(relay.reshape(const_12103.astype('int16'), [384,])), 3)
call_12104 = relay.TupleGetItem(func_9645_call(relay.reshape(const_12103.astype('int16'), [384,])), 3)
output = relay.Tuple([call_12092,call_12098,call_12102,const_12103,])
output2 = relay.Tuple([call_12093,call_12099,call_12104,const_12103,])
func_12114 = relay.Function([], output)
mod['func_12114'] = func_12114
mod = relay.transform.InferType()(mod)
mutated_mod['func_12114'] = func_12114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12114_call = mutated_mod.get_global_var('func_12114')
call_12115 = func_12114_call()
output = call_12115
func_12116 = relay.Function([], output)
mutated_mod['func_12116'] = func_12116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9411_call = mod.get_global_var('func_9411')
func_9413_call = mutated_mod.get_global_var('func_9413')
call_12135 = func_9411_call()
call_12136 = func_9411_call()
output = relay.Tuple([call_12135,])
output2 = relay.Tuple([call_12136,])
func_12137 = relay.Function([], output)
mod['func_12137'] = func_12137
mod = relay.transform.InferType()(mod)
mutated_mod['func_12137'] = func_12137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12137_call = mutated_mod.get_global_var('func_12137')
call_12138 = func_12137_call()
output = call_12138
func_12139 = relay.Function([], output)
mutated_mod['func_12139'] = func_12139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11694_call = mod.get_global_var('func_11694')
func_11696_call = mutated_mod.get_global_var('func_11696')
call_12142 = func_11694_call()
call_12143 = func_11694_call()
output = relay.Tuple([call_12142,])
output2 = relay.Tuple([call_12143,])
func_12148 = relay.Function([], output)
mod['func_12148'] = func_12148
mod = relay.transform.InferType()(mod)
output = func_12148()
func_12149 = relay.Function([], output)
mutated_mod['func_12149'] = func_12149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9247_call = mod.get_global_var('func_9247')
func_9248_call = mutated_mod.get_global_var('func_9248')
call_12216 = func_9247_call()
call_12217 = func_9247_call()
output = call_12216
output2 = call_12217
func_12221 = relay.Function([], output)
mod['func_12221'] = func_12221
mod = relay.transform.InferType()(mod)
mutated_mod['func_12221'] = func_12221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12221_call = mutated_mod.get_global_var('func_12221')
call_12222 = func_12221_call()
output = call_12222
func_12223 = relay.Function([], output)
mutated_mod['func_12223'] = func_12223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9698_call = mod.get_global_var('func_9698')
func_9699_call = mutated_mod.get_global_var('func_9699')
call_12335 = relay.TupleGetItem(func_9698_call(), 0)
call_12336 = relay.TupleGetItem(func_9699_call(), 0)
output = relay.Tuple([call_12335,])
output2 = relay.Tuple([call_12336,])
func_12337 = relay.Function([], output)
mod['func_12337'] = func_12337
mod = relay.transform.InferType()(mod)
mutated_mod['func_12337'] = func_12337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12337_call = mutated_mod.get_global_var('func_12337')
call_12338 = func_12337_call()
output = call_12338
func_12339 = relay.Function([], output)
mutated_mod['func_12339'] = func_12339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10281_call = mod.get_global_var('func_10281')
func_10282_call = mutated_mod.get_global_var('func_10282')
call_12391 = func_10281_call()
call_12392 = func_10281_call()
var_12402 = relay.var("var_12402", dtype = "float32", shape = (2, 10, 12))#candidate|12402|(2, 10, 12)|var|float32
bop_12403 = relay.logical_or(call_12391.astype('bool'), relay.reshape(var_12402.astype('bool'), relay.shape_of(call_12391))) # shape=(2, 10, 12)
bop_12406 = relay.logical_or(call_12392.astype('bool'), relay.reshape(var_12402.astype('bool'), relay.shape_of(call_12392))) # shape=(2, 10, 12)
uop_12410 = relay.rsqrt(call_12391.astype('float64')) # shape=(2, 10, 12)
uop_12412 = relay.rsqrt(call_12392.astype('float64')) # shape=(2, 10, 12)
func_9072_call = mod.get_global_var('func_9072')
func_9076_call = mutated_mod.get_global_var('func_9076')
const_12415 = relay.const([5,4,-8,1,5,-9,10,-9,-4,-2,6,10,9,9,2,-7,-3,-2,1,1,1,-4,2,7,-6,8,-8,-1,4,10,-9,4,-9,3,10,-6,5,-3,1,5,-6,1,-3,-4,2,2,-3,3,1,-2,9,-3,7,-1,5,-8,-1,6,1,9,-3,5,7,8,4,-8,-9,5,-6,-4,4,-3,-3,9,8,9,8,9,-4,3,8,-8,4,-3,-2,3,-1,1,5,1,-7,-7,6,2,3,-5,9,-8,-9,-5,-9,8,-3,5,-10,-3,7,-6,6,-3,3,1,-1,5,1,-2,-6,-2,3,1,6,-2,2,7,4,-6,-6,-9,8,-7,-1,9,1,-10,-9,-10,3,-9,8,4,6,10,-8,8,-10,3,8,-1,-3,5,-2,-8,-5,-1,-3,-8,6,10,7,-8,-5,-10,-6,3,-4,3,1,10,-10,-10,5,-3,-6,-2,3,9,4,-2,-2,10,-3,-9,-6,-2,-7,3,-2,2,-1,10,6,-3,-9,-1,-2,-7,5,1,3,2,-8,4,1,-8,2,-8,7,9,8,9,2,-7,9,10,1,-6,5,9,-5,10,-2,6,-10,7,6,2,-3,-4,-8,6,6,-8,-1,-9,-1,2,5,-7,2,7,-2,-7,-7,-7,7,6,-7,-4,-1,-3,-2,-10,-4,4,-10,5,9,7,6,2,-9,-7,-3,3,6,8,2,4,2,-1,10,-4,-9,-6,-5,8,-7,10,-8,3,10,3,-9,7,7,-4,5,6,9,9,-10,-9,4,8,4,-7,3,6,6,-3,-3,-10,7,2,-7,1,10,6,-1,7,8,-10,5,-2,9,-6,6,-9,-1,10,-6,5,3,1,8,9,-5,6,5,2,7,4,-3,6,-8,2,-9,9,2,6,-7,5,-4,-1,-3,10,-1,3,1,-8,8,-2,-8,-1,-10,-10,1,-8,-8,-3,2,-1,2,-8,5,-4,7,2,-7,-6,9,4,1,7,1,-10,-7,-7,-7,4,5,7,-3,7,-3,7,-9,3,2,-1,2,-5,4,-10,9,5,9,5,-10,-4,-7,6,-1,-8,-9,-6,-2,-1,-3,7,4,-5,3,-7,-2,7,-1,7,-10,-4,6,3,1,4,7,-5,3,-6,-7,9,-3,3,7,-7,-7,-9,1,10,-8,-3,6,-5,-7,3,-3,5,9,9,10,-7,7,1,-8,9,7,-8,-1,4,-4,-3,-1,1,8,8,-8,-6,-8,4,-10,-9,-8,-4,2,8,-2,10,-1,3,-3,-9,3,7,-4,7,-7,-3,-5,-5,-2,2,-5,-9,-3,8,-5,-6,-2,-2,-5,10,-7,-6,-1,-1,3,-1,4,-7,-6,3,-9,10,2,-8,10,9,-5,2,-4,-1,6,7,3,7,8,1,-6,1,-2,5,8,-9,-8,1,6,3,5,10,-4,9,6,9,10,2,-8,-4,-2,1,6,4,-5,1,-6,10,-7,-2,-9,-5,-1,-9,-3,-7,-7,-4,2,4,2,-7,-6,8,6,-8,-1,3,1,2,6,10,-10,6,-2,-1,-6,5,-7,-9,3,9,-2,7,-6,-1,10,8,8,6,-6,6,-7,-6,-4,-7,-2,-2,-1,-2,-9,9,-4,1,-3,-2,4,-1,-1,-5,-1,3,-1,10,5,8,2,-3,-6,-10,1,-8,-2,-4,-7,1,1,1,-10,-3,2,-8,9,-5,-4,-6,7,-10,4,-5,4,8,9,-9,-2,-1,-4,-3,10,9,-2,-9,-8,9,4,2,-9,3,-2,4,-5,-2,-4,3,4,-8,-9,-5,-9,-9,-10,8,3,-5,4,-3,-6,9,10,4,7,10,2,-3,2,3,-4,9,-4,4,-6,8,-10,2,2,5,9,-5,1,-3,1,4,6,-3,-10,8,-2,5,-5,5,2,-7,7,5,2,-2,-1,8,-2,8,10,5,2,7,9,-5,3,-4,-3,-10,-9,8,1,-9,-1,-4,-3,-2,-10,-2,-10,-10,6,3,4,-6,10,-3,4,-3,-9,3,-7,-4,-3,-6,3,5,-1,-1,-4,10,-3,-4,-6,-9,5,6,-8,-10,9,1,3,1,4,1,-1,1,-5,-10,-3,6,2,1,4,-8,-7,-5,6,-6,-10,-2,1,4,8,7,-4,1,-6,-5,-2,-3,3,-3,4,3,8,2,9,-5,1,-2,8,-10,-4,5,7,6,6,2,9,-1,-1,8,10,-10,-7,5,-4,2,-7,5,-6,5,-2,-3,4,-10,8,6,-3,-8,-1,-8,7,4,-8,9,9,8,-3,-2,5,-2,2,-1,-8,-7,-4,-3,-4,7,7,-6,10,-8,2,-9,-6,10,-1,-4,1,-8,-6,-8,-10,-4,10,3,-3,2,5,-4,4,-10,4,4,7,2,4,6,4,-3,10,-6,-9,10,-2,6,8,-1,-1,-10,8,2,2,8,-7,-2,-6,-2,7,-10,8,-4,-1,-9,-1,-1,-10,1,-2,-10,9,-8,10,-10,5,7,6,-10,-6,1,9,-6,-6,3,-5,7,-6,-9,-6,-5,-8,4,4,3,6,-9,8,6,-10,2,-3,-1,7,-7,-10,-3,7,-4,-3,4,1,-6,7,-2,10,-6,6,-4,-9,5,-5,10,6,-4,-1,10,-2,-10,6,-7,8,1,-1,7,6,-9,-8,3,-3,5,-7,-5,-9,9,-8,6,-10,-10,-2,10,6,-10,-8,-10,-2,-4,-2,-10,-5,8,5,-9,-1,-5,5,2,5,-8,5,-6,5,-7,-1,9,8,-9,-3,8,-7,-8,8,-6,2,-8,3,5,1,6,1,-8,-5,1,-5,-4,2,5,-2,3,-4,-2,-2,-7,-8,-7,-8,-5,-1,-1,-5,-9,6,5,4,3,-8,6,-9,4,-6,4,5,-7,8,-3,4,8,-5,-8,-10,10,6,-9,-9,-2,-6,-8,-8,9,2,6,5,6,8,2,6,7,8,-5,-1,-1,-3,-9,-4,6,-2,2,8,-7,1,-4,1,-7,9,7,10,6,7,-6,-4,6,7,-1,-7,3,10,-5,1,10,-7,-8,5,10,-9,-4,1,9,10,-4,10,5,5,1,-3,3,-7,8,-7,5,-7,9,1,-5,-7,7,4,-7,3,4,8,7,10,-9,-4,-3,5,8,-9,6,1,5,-7,-6,-8,-6,2,2,-9,-9,5,-5,-5,6,-7,3,-10,-7,9,-7,6,5,-7,1,8,-2,-3,5,1,5,-6,9,-7,2,10,4,3,5,8,7,-8,-1,5,1,7,-5,6,-10,-8,8,-2,-5,4,4,-6,8,-7,4,-4,7,3,-6,-5,2,9,-1,-6,5,-8,4,7,9,10,7,10,-7,5,6,2,-5,-9,3,5,-7,-4,-9,2,6,-3,8,-6,-10,10,2,3,-4,-4,-2,-2,3,10,8,4,-6,4,2,-10,-10,-10,6,-10,10,7,4,-10,7,3,-4,9,3,5,-5,10,7,8,5,-4,-3,-6,-2,5,10,7,2,5,1,-3,-5,10,4,5,-7,6,-10,6,-3,-1,9,-7,4,-6,-2,-1,-1,8,10,-7,-2,8,5,2,-5,1,3,-6,-9,-1,-1,-9,3,10,-3,-2,-7,-7,-4,-2,-3,4,-10,2,3,2,6,-8,9,4,-2,6,-9,-4,1,-4,9,-10,-10,-10,-8,1,-4,-4,-7,-6,7,10,3,8,4,-10,-4,1,5,-1,6,6,10,-4,8,-8,1,10,-6,10,2,10,-2,-2,-6,9,-6,1,-3,-3,-6,6,10,3,-6,-3,-3,-6,8,2,-2,4,-6,-4,-4,1,-7,-9,-5,-3,3,9,1,-1,-5,10,5,-7,-3,-1,-7,6,1,3,6,-7,3,7,3,-10,-2,-6,-6,-10,-4,-5,3,-7,7,-10,-7,3,3,4,9,-4,4,-10,3,-9,-8,9,6,-6,7,7,3,8,2,-3,5,4,7,2,-3,-8,5,-4,3,-5,6,-8,2,6,-5,-4,4,10,1,1,2,5,-7,10,9,-2,-5,-5,-8,2,-7,6,4,3,9,-7,5,10,-3,4,4,-6,-10,-8,9,2,4,-9,5,4,-8,-6,-5,7,-5,-9,-10,-7,-5,9,-3,-1,-10,-7,-2,10,2,-5,10,-4,-6,3,-5,6,-5,5,7,-7,8,-3,-3,-2,-9,-3,-10,4,-7,2,5,-3,5,8,-7,3,9,6,9,8,-5,-4,5,1,-5], dtype = "int8")#candidate|12415|(1584,)|const|int8
const_12416 = relay.const([4,-2,-9,5,5,1,-1,7,-3,9,3,2,-1,1,9,8,5,4,-10,8,-4,1,-6,-7,-3,-8,10,-4,5,9,-1,-9,6,-10,10,-6,-9,-2,-5,-3,-7,-5,-2,-10,-8,3,9,-8,3,3,-6,-10,8,-1,10,3,6,4,9,-5,6,-8,9,-10,-2,6,4,4,-7,-4,8,4,-7,1,6,-5,-5,-7,-7,-7,-10,8,10,-5,-8,3,8,1,10,1,10,-8,7,1,2,2,2,7,3,-8,3,-6,-3,-8], dtype = "uint64")#candidate|12416|(104,)|const|uint64
call_12414 = relay.TupleGetItem(func_9072_call(relay.reshape(const_12415.astype('int8'), [16, 9, 11]), relay.reshape(const_12416.astype('uint64'), [104,]), ), 3)
call_12417 = relay.TupleGetItem(func_9076_call(relay.reshape(const_12415.astype('int8'), [16, 9, 11]), relay.reshape(const_12416.astype('uint64'), [104,]), ), 3)
output = relay.Tuple([bop_12403,uop_12410,call_12414,const_12415,const_12416,])
output2 = relay.Tuple([bop_12406,uop_12412,call_12417,const_12415,const_12416,])
func_12423 = relay.Function([var_12402,], output)
mod['func_12423'] = func_12423
mod = relay.transform.InferType()(mod)
var_12424 = relay.var("var_12424", dtype = "float32", shape = (2, 10, 12))#candidate|12424|(2, 10, 12)|var|float32
output = func_12423(var_12424)
func_12425 = relay.Function([var_12424], output)
mutated_mod['func_12425'] = func_12425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12337_call = mod.get_global_var('func_12337')
func_12339_call = mutated_mod.get_global_var('func_12339')
call_12439 = relay.TupleGetItem(func_12337_call(), 0)
call_12440 = relay.TupleGetItem(func_12339_call(), 0)
output = call_12439
output2 = call_12440
func_12445 = relay.Function([], output)
mod['func_12445'] = func_12445
mod = relay.transform.InferType()(mod)
output = func_12445()
func_12446 = relay.Function([], output)
mutated_mod['func_12446'] = func_12446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9411_call = mod.get_global_var('func_9411')
func_9413_call = mutated_mod.get_global_var('func_9413')
call_12449 = func_9411_call()
call_12450 = func_9411_call()
output = call_12449
output2 = call_12450
func_12455 = relay.Function([], output)
mod['func_12455'] = func_12455
mod = relay.transform.InferType()(mod)
output = func_12455()
func_12456 = relay.Function([], output)
mutated_mod['func_12456'] = func_12456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10592_call = mod.get_global_var('func_10592')
func_10594_call = mutated_mod.get_global_var('func_10594')
call_12562 = relay.TupleGetItem(func_10592_call(), 0)
call_12563 = relay.TupleGetItem(func_10594_call(), 0)
func_11079_call = mod.get_global_var('func_11079')
func_11082_call = mutated_mod.get_global_var('func_11082')
var_12579 = relay.var("var_12579", dtype = "bool", shape = ())#candidate|12579|()|var|bool
call_12578 = func_11079_call(relay.reshape(var_12579.astype('bool'), []))
call_12580 = func_11079_call(relay.reshape(var_12579.astype('bool'), []))
func_10402_call = mod.get_global_var('func_10402')
func_10404_call = mutated_mod.get_global_var('func_10404')
call_12581 = relay.TupleGetItem(func_10402_call(), 3)
call_12582 = relay.TupleGetItem(func_10404_call(), 3)
bop_12583 = relay.greater(call_12581.astype('bool'), var_12579.astype('bool')) # shape=(144, 4)
bop_12586 = relay.greater(call_12582.astype('bool'), var_12579.astype('bool')) # shape=(144, 4)
const_12589 = relay.const([[False,False,True,False],[False,False,False,False],[False,False,True,True],[True,False,False,True],[True,True,True,True],[True,False,True,False],[True,False,False,False],[False,False,False,False],[False,True,False,False],[False,False,True,False],[False,False,True,False],[False,False,True,False],[True,True,True,False],[True,False,False,False],[False,True,True,False],[True,True,False,False],[True,True,False,True],[True,True,True,False],[False,False,False,False],[False,True,False,False],[False,False,False,True],[False,True,False,True],[False,True,True,True],[False,False,True,True],[True,False,False,False],[True,True,False,True],[False,False,False,False],[False,False,False,False],[False,True,False,True],[False,False,False,False],[True,True,True,True],[True,True,True,False],[True,True,True,False],[True,True,False,True],[False,False,True,False],[False,False,False,True],[True,False,False,True],[False,False,True,True],[True,False,True,True],[True,False,True,False],[True,False,True,False],[False,True,True,False],[True,True,False,True],[True,False,False,False],[True,False,True,True],[False,False,True,False],[False,False,True,False],[False,False,False,True],[True,True,False,True],[False,True,True,True],[False,True,True,True],[True,True,True,False],[False,False,False,False],[False,True,False,True],[True,True,True,True],[False,True,False,True],[True,False,False,True],[False,True,True,False],[False,False,False,True],[True,True,False,True],[False,False,False,False],[True,False,True,False],[False,False,True,False],[False,True,True,True],[False,True,False,False],[False,True,False,False],[True,False,True,True],[False,True,False,False],[True,False,False,False],[True,False,False,True],[False,True,True,False],[True,False,True,True],[True,False,True,True],[True,True,True,True],[False,False,False,False],[False,False,False,True],[True,False,False,False],[False,False,True,True],[False,False,True,True],[False,True,False,True],[True,True,False,False],[False,True,True,False],[True,True,False,True],[False,False,True,True],[True,True,True,True],[True,False,False,True],[False,False,False,False],[True,False,True,False],[True,True,False,False],[False,False,False,True],[True,True,True,True],[True,False,False,False],[True,True,False,False],[True,False,False,True],[False,False,True,True],[True,False,True,False],[True,False,False,True],[False,True,True,True],[False,False,True,True],[False,True,False,True],[True,False,True,False],[False,True,False,True],[False,True,False,True],[False,False,True,True],[False,False,True,False],[True,False,True,True],[False,False,False,False],[False,False,True,True],[False,False,True,True],[False,True,False,False],[True,False,True,True],[False,False,False,False],[False,True,False,True],[True,False,False,True],[False,True,True,False],[True,False,True,False],[True,True,True,True],[False,True,True,True],[True,False,False,False],[False,True,False,True],[False,True,False,False],[True,True,True,True],[False,True,False,True],[True,True,True,False],[False,False,True,True],[True,False,False,True],[False,True,True,True],[False,True,False,False],[False,False,False,True],[True,False,True,True],[True,True,True,False],[False,False,True,True],[True,False,False,False],[True,False,True,True],[True,False,False,True],[False,False,False,False],[True,False,False,False],[False,True,False,True],[False,True,False,False],[True,True,True,False],[True,True,True,False],[False,False,False,True],[True,False,True,True],[True,True,True,False]], dtype = "bool")#candidate|12589|(144, 4)|const|bool
bop_12590 = relay.not_equal(bop_12583.astype('bool'), relay.reshape(const_12589.astype('bool'), relay.shape_of(bop_12583))) # shape=(144, 4)
bop_12593 = relay.not_equal(bop_12586.astype('bool'), relay.reshape(const_12589.astype('bool'), relay.shape_of(bop_12586))) # shape=(144, 4)
uop_12606 = relay.sinh(bop_12583.astype('float32')) # shape=(144, 4)
uop_12608 = relay.sinh(bop_12586.astype('float32')) # shape=(144, 4)
var_12610 = relay.var("var_12610", dtype = "float32", shape = (144, 4))#candidate|12610|(144, 4)|var|float32
bop_12611 = relay.bitwise_and(uop_12606.astype('uint32'), relay.reshape(var_12610.astype('uint32'), relay.shape_of(uop_12606))) # shape=(144, 4)
bop_12614 = relay.bitwise_and(uop_12608.astype('uint32'), relay.reshape(var_12610.astype('uint32'), relay.shape_of(uop_12608))) # shape=(144, 4)
uop_12616 = relay.log2(bop_12611.astype('float64')) # shape=(144, 4)
uop_12618 = relay.log2(bop_12614.astype('float64')) # shape=(144, 4)
output = relay.Tuple([call_12562,call_12578,bop_12590,uop_12616,])
output2 = relay.Tuple([call_12563,call_12580,bop_12593,uop_12618,])
func_12620 = relay.Function([var_12579,var_12610,], output)
mod['func_12620'] = func_12620
mod = relay.transform.InferType()(mod)
var_12621 = relay.var("var_12621", dtype = "bool", shape = ())#candidate|12621|()|var|bool
var_12622 = relay.var("var_12622", dtype = "float32", shape = (144, 4))#candidate|12622|(144, 4)|var|float32
output = func_12620(var_12621,var_12622,)
func_12623 = relay.Function([var_12621,var_12622,], output)
mutated_mod['func_12623'] = func_12623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9688_call = mod.get_global_var('func_9688')
func_9690_call = mutated_mod.get_global_var('func_9690')
call_12656 = relay.TupleGetItem(func_9688_call(), 0)
call_12657 = relay.TupleGetItem(func_9690_call(), 0)
output = call_12656
output2 = call_12657
func_12668 = relay.Function([], output)
mod['func_12668'] = func_12668
mod = relay.transform.InferType()(mod)
mutated_mod['func_12668'] = func_12668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12668_call = mutated_mod.get_global_var('func_12668')
call_12669 = func_12668_call()
output = call_12669
func_12670 = relay.Function([], output)
mutated_mod['func_12670'] = func_12670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10830_call = mod.get_global_var('func_10830')
func_10831_call = mutated_mod.get_global_var('func_10831')
call_12773 = func_10830_call()
call_12774 = func_10830_call()
output = relay.Tuple([call_12773,])
output2 = relay.Tuple([call_12774,])
func_12775 = relay.Function([], output)
mod['func_12775'] = func_12775
mod = relay.transform.InferType()(mod)
mutated_mod['func_12775'] = func_12775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12775_call = mutated_mod.get_global_var('func_12775')
call_12776 = func_12775_call()
output = call_12776
func_12777 = relay.Function([], output)
mutated_mod['func_12777'] = func_12777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12221_call = mod.get_global_var('func_12221')
func_12223_call = mutated_mod.get_global_var('func_12223')
call_12796 = func_12221_call()
call_12797 = func_12221_call()
output = call_12796
output2 = call_12797
func_12808 = relay.Function([], output)
mod['func_12808'] = func_12808
mod = relay.transform.InferType()(mod)
mutated_mod['func_12808'] = func_12808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12808_call = mutated_mod.get_global_var('func_12808')
call_12809 = func_12808_call()
output = call_12809
func_12810 = relay.Function([], output)
mutated_mod['func_12810'] = func_12810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10592_call = mod.get_global_var('func_10592')
func_10594_call = mutated_mod.get_global_var('func_10594')
call_12863 = relay.TupleGetItem(func_10592_call(), 0)
call_12864 = relay.TupleGetItem(func_10594_call(), 0)
output = relay.Tuple([call_12863,])
output2 = relay.Tuple([call_12864,])
func_12865 = relay.Function([], output)
mod['func_12865'] = func_12865
mod = relay.transform.InferType()(mod)
output = func_12865()
func_12866 = relay.Function([], output)
mutated_mod['func_12866'] = func_12866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9821_call = mod.get_global_var('func_9821')
func_9823_call = mutated_mod.get_global_var('func_9823')
call_12902 = relay.TupleGetItem(func_9821_call(), 0)
call_12903 = relay.TupleGetItem(func_9823_call(), 0)
var_12905 = relay.var("var_12905", dtype = "float32", shape = (11, 11, 10))#candidate|12905|(11, 11, 10)|var|float32
bop_12906 = relay.bitwise_and(call_12902.astype('uint64'), relay.reshape(var_12905.astype('uint64'), relay.shape_of(call_12902))) # shape=(11, 11, 10)
bop_12909 = relay.bitwise_and(call_12903.astype('uint64'), relay.reshape(var_12905.astype('uint64'), relay.shape_of(call_12903))) # shape=(11, 11, 10)
output = bop_12906
output2 = bop_12909
func_12921 = relay.Function([var_12905,], output)
mod['func_12921'] = func_12921
mod = relay.transform.InferType()(mod)
mutated_mod['func_12921'] = func_12921
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12922 = relay.var("var_12922", dtype = "float32", shape = (11, 11, 10))#candidate|12922|(11, 11, 10)|var|float32
func_12921_call = mutated_mod.get_global_var('func_12921')
call_12923 = func_12921_call(var_12922)
output = call_12923
func_12924 = relay.Function([var_12922], output)
mutated_mod['func_12924'] = func_12924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12221_call = mod.get_global_var('func_12221')
func_12223_call = mutated_mod.get_global_var('func_12223')
call_13011 = func_12221_call()
call_13012 = func_12221_call()
var_13014 = relay.var("var_13014", dtype = "float32", shape = (2, 10, 12))#candidate|13014|(2, 10, 12)|var|float32
bop_13015 = relay.equal(call_13011.astype('bool'), relay.reshape(var_13014.astype('bool'), relay.shape_of(call_13011))) # shape=(2, 10, 12)
bop_13018 = relay.equal(call_13012.astype('bool'), relay.reshape(var_13014.astype('bool'), relay.shape_of(call_13012))) # shape=(2, 10, 12)
func_12148_call = mod.get_global_var('func_12148')
func_12149_call = mutated_mod.get_global_var('func_12149')
call_13021 = relay.TupleGetItem(func_12148_call(), 0)
call_13022 = relay.TupleGetItem(func_12149_call(), 0)
func_9821_call = mod.get_global_var('func_9821')
func_9823_call = mutated_mod.get_global_var('func_9823')
call_13027 = relay.TupleGetItem(func_9821_call(), 0)
call_13028 = relay.TupleGetItem(func_9823_call(), 0)
output = relay.Tuple([bop_13015,call_13021,call_13027,])
output2 = relay.Tuple([bop_13018,call_13022,call_13028,])
func_13034 = relay.Function([var_13014,], output)
mod['func_13034'] = func_13034
mod = relay.transform.InferType()(mod)
mutated_mod['func_13034'] = func_13034
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13035 = relay.var("var_13035", dtype = "float32", shape = (2, 10, 12))#candidate|13035|(2, 10, 12)|var|float32
func_13034_call = mutated_mod.get_global_var('func_13034')
call_13036 = func_13034_call(var_13035)
output = call_13036
func_13037 = relay.Function([var_13035], output)
mutated_mod['func_13037'] = func_13037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12221_call = mod.get_global_var('func_12221')
func_12223_call = mutated_mod.get_global_var('func_12223')
call_13056 = func_12221_call()
call_13057 = func_12221_call()
output = relay.Tuple([call_13056,])
output2 = relay.Tuple([call_13057,])
func_13068 = relay.Function([], output)
mod['func_13068'] = func_13068
mod = relay.transform.InferType()(mod)
output = func_13068()
func_13069 = relay.Function([], output)
mutated_mod['func_13069'] = func_13069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9821_call = mod.get_global_var('func_9821')
func_9823_call = mutated_mod.get_global_var('func_9823')
call_13149 = relay.TupleGetItem(func_9821_call(), 0)
call_13150 = relay.TupleGetItem(func_9823_call(), 0)
func_9946_call = mod.get_global_var('func_9946')
func_9947_call = mutated_mod.get_global_var('func_9947')
call_13154 = func_9946_call()
call_13155 = func_9946_call()
output = relay.Tuple([call_13149,call_13154,])
output2 = relay.Tuple([call_13150,call_13155,])
func_13161 = relay.Function([], output)
mod['func_13161'] = func_13161
mod = relay.transform.InferType()(mod)
output = func_13161()
func_13162 = relay.Function([], output)
mutated_mod['func_13162'] = func_13162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12865_call = mod.get_global_var('func_12865')
func_12866_call = mutated_mod.get_global_var('func_12866')
call_13183 = relay.TupleGetItem(func_12865_call(), 0)
call_13184 = relay.TupleGetItem(func_12866_call(), 0)
func_6847_call = mod.get_global_var('func_6847')
func_6851_call = mutated_mod.get_global_var('func_6851')
const_13188 = relay.const([4,2,8], dtype = "int8")#candidate|13188|(3,)|const|int8
const_13189 = relay.const([2,9,-2,-1,7,-3,7,1,-1,-9,1,7,-5,-7,8,-2,-4,4,-9,4,6,-6,9,-10,-10,-7,10,6,3,-10,1,-3,4,-3,-2,-9,-4,3,6,6,-2,-7,-9,2,10,4,6,6,-5,-5,4,7,-10,-5,-4,2,-6,-10,4,8,4,3,1,9,8,5,7,4,-2,4,10,4,5,-10,6,4,1,-9,7,-8,-4,-9,-7,-10,1,-9,-10,-6,6,5,-5,-3,6,-9,-4,10,-4,-10,-3,1,6,3,-2,-10], dtype = "uint64")#candidate|13189|(104,)|const|uint64
call_13187 = relay.TupleGetItem(func_6847_call(relay.reshape(const_13188.astype('int8'), [1, 3, 1]), relay.reshape(const_13189.astype('uint64'), [104, 1]), ), 2)
call_13190 = relay.TupleGetItem(func_6851_call(relay.reshape(const_13188.astype('int8'), [1, 3, 1]), relay.reshape(const_13189.astype('uint64'), [104, 1]), ), 2)
func_10592_call = mod.get_global_var('func_10592')
func_10594_call = mutated_mod.get_global_var('func_10594')
call_13200 = relay.TupleGetItem(func_10592_call(), 0)
call_13201 = relay.TupleGetItem(func_10594_call(), 0)
func_9971_call = mod.get_global_var('func_9971')
func_9973_call = mutated_mod.get_global_var('func_9973')
call_13204 = relay.TupleGetItem(func_9971_call(), 0)
call_13205 = relay.TupleGetItem(func_9973_call(), 0)
func_10147_call = mod.get_global_var('func_10147')
func_10148_call = mutated_mod.get_global_var('func_10148')
call_13219 = func_10147_call()
call_13220 = func_10147_call()
output = relay.Tuple([call_13183,call_13187,const_13188,const_13189,call_13200,call_13204,call_13219,])
output2 = relay.Tuple([call_13184,call_13190,const_13188,const_13189,call_13201,call_13205,call_13220,])
func_13228 = relay.Function([], output)
mod['func_13228'] = func_13228
mod = relay.transform.InferType()(mod)
mutated_mod['func_13228'] = func_13228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13228_call = mutated_mod.get_global_var('func_13228')
call_13229 = func_13228_call()
output = call_13229
func_13230 = relay.Function([], output)
mutated_mod['func_13230'] = func_13230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10704_call = mod.get_global_var('func_10704')
func_10705_call = mutated_mod.get_global_var('func_10705')
call_13234 = relay.TupleGetItem(func_10704_call(), 1)
call_13235 = relay.TupleGetItem(func_10705_call(), 1)
func_11780_call = mod.get_global_var('func_11780')
func_11782_call = mutated_mod.get_global_var('func_11782')
call_13242 = relay.TupleGetItem(func_11780_call(), 0)
call_13243 = relay.TupleGetItem(func_11782_call(), 0)
func_10704_call = mod.get_global_var('func_10704')
func_10705_call = mutated_mod.get_global_var('func_10705')
call_13256 = relay.TupleGetItem(func_10704_call(), 0)
call_13257 = relay.TupleGetItem(func_10705_call(), 0)
output = relay.Tuple([call_13234,call_13242,call_13256,])
output2 = relay.Tuple([call_13235,call_13243,call_13257,])
func_13264 = relay.Function([], output)
mod['func_13264'] = func_13264
mod = relay.transform.InferType()(mod)
mutated_mod['func_13264'] = func_13264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13264_call = mutated_mod.get_global_var('func_13264')
call_13265 = func_13264_call()
output = call_13265
func_13266 = relay.Function([], output)
mutated_mod['func_13266'] = func_13266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13264_call = mod.get_global_var('func_13264')
func_13266_call = mutated_mod.get_global_var('func_13266')
call_13272 = relay.TupleGetItem(func_13264_call(), 1)
call_13273 = relay.TupleGetItem(func_13266_call(), 1)
func_5498_call = mod.get_global_var('func_5498')
func_5502_call = mutated_mod.get_global_var('func_5502')
var_13276 = relay.var("var_13276", dtype = "float64", shape = (49, 6))#candidate|13276|(49, 6)|var|float64
var_13277 = relay.var("var_13277", dtype = "int64", shape = ())#candidate|13277|()|var|int64
var_13278 = relay.var("var_13278", dtype = "float64", shape = (4, 12))#candidate|13278|(4, 12)|var|float64
call_13275 = relay.TupleGetItem(func_5498_call(relay.reshape(var_13276.astype('float64'), [7, 3, 14]), relay.reshape(var_13277.astype('int64'), []), relay.reshape(var_13278.astype('float64'), [48,]), ), 4)
call_13279 = relay.TupleGetItem(func_5502_call(relay.reshape(var_13276.astype('float64'), [7, 3, 14]), relay.reshape(var_13277.astype('int64'), []), relay.reshape(var_13278.astype('float64'), [48,]), ), 4)
output = relay.Tuple([call_13272,call_13275,var_13276,var_13277,var_13278,])
output2 = relay.Tuple([call_13273,call_13279,var_13276,var_13277,var_13278,])
func_13293 = relay.Function([var_13276,var_13277,var_13278,], output)
mod['func_13293'] = func_13293
mod = relay.transform.InferType()(mod)
var_13294 = relay.var("var_13294", dtype = "float64", shape = (49, 6))#candidate|13294|(49, 6)|var|float64
var_13295 = relay.var("var_13295", dtype = "int64", shape = ())#candidate|13295|()|var|int64
var_13296 = relay.var("var_13296", dtype = "float64", shape = (4, 12))#candidate|13296|(4, 12)|var|float64
output = func_13293(var_13294,var_13295,var_13296,)
func_13297 = relay.Function([var_13294,var_13295,var_13296,], output)
mutated_mod['func_13297'] = func_13297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12022_call = mod.get_global_var('func_12022')
func_12024_call = mutated_mod.get_global_var('func_12024')
call_13325 = relay.TupleGetItem(func_12022_call(), 0)
call_13326 = relay.TupleGetItem(func_12024_call(), 0)
func_11893_call = mod.get_global_var('func_11893')
func_11897_call = mutated_mod.get_global_var('func_11897')
var_13341 = relay.var("var_13341", dtype = "bool", shape = (297,))#candidate|13341|(297,)|var|bool
call_13340 = relay.TupleGetItem(func_11893_call(relay.reshape(var_13341.astype('bool'), [9, 3, 11]), relay.reshape(var_13341.astype('bool'), [9, 3, 11]), ), 0)
call_13342 = relay.TupleGetItem(func_11897_call(relay.reshape(var_13341.astype('bool'), [9, 3, 11]), relay.reshape(var_13341.astype('bool'), [9, 3, 11]), ), 0)
bop_13346 = relay.bitwise_or(var_13341.astype('uint32'), relay.reshape(call_13340.astype('uint32'), relay.shape_of(var_13341))) # shape=(297,)
bop_13349 = relay.bitwise_or(var_13341.astype('uint32'), relay.reshape(call_13342.astype('uint32'), relay.shape_of(var_13341))) # shape=(297,)
func_10469_call = mod.get_global_var('func_10469')
func_10470_call = mutated_mod.get_global_var('func_10470')
call_13350 = relay.TupleGetItem(func_10469_call(), 3)
call_13351 = relay.TupleGetItem(func_10470_call(), 3)
func_9821_call = mod.get_global_var('func_9821')
func_9823_call = mutated_mod.get_global_var('func_9823')
call_13354 = relay.TupleGetItem(func_9821_call(), 0)
call_13355 = relay.TupleGetItem(func_9823_call(), 0)
func_1332_call = mod.get_global_var('func_1332')
func_1335_call = mutated_mod.get_global_var('func_1335')
const_13370 = relay.const([True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,True,False,False,True,False,True,True,False,False,False,True,True,False,False,False,False,False,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,True,False,False,True,False,False,True,True,True,False,True,True,True,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False,True,True,True,False,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,False,False,False,True,True,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,False,True,False,True,True,True,True,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,True,True,False,True,False,False,False,True,False,False,False,True,True,True,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,True,True,True,False,False,True,False,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,False,True,True,True,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True], dtype = "bool")#candidate|13370|(390,)|const|bool
call_13369 = func_1332_call(relay.reshape(const_13370.astype('bool'), [5, 6, 13]), relay.reshape(const_13370.astype('bool'), [5, 6, 13]), )
call_13371 = func_1332_call(relay.reshape(const_13370.astype('bool'), [5, 6, 13]), relay.reshape(const_13370.astype('bool'), [5, 6, 13]), )
uop_13372 = relay.log(call_13325.astype('float32')) # shape=(13, 14, 13)
uop_13374 = relay.log(call_13326.astype('float32')) # shape=(13, 14, 13)
uop_13388 = relay.sigmoid(call_13369.astype('float32')) # shape=(5, 6, 13)
uop_13390 = relay.sigmoid(call_13371.astype('float32')) # shape=(5, 6, 13)
func_6847_call = mod.get_global_var('func_6847')
func_6851_call = mutated_mod.get_global_var('func_6851')
const_13392 = relay.const([[7,5,-7]], dtype = "int8")#candidate|13392|(1, 3)|const|int8
var_13393 = relay.var("var_13393", dtype = "uint64", shape = (104,))#candidate|13393|(104,)|var|uint64
call_13391 = relay.TupleGetItem(func_6847_call(relay.reshape(const_13392.astype('int8'), [1, 3, 1]), relay.reshape(var_13393.astype('uint64'), [104, 1]), ), 1)
call_13394 = relay.TupleGetItem(func_6851_call(relay.reshape(const_13392.astype('int8'), [1, 3, 1]), relay.reshape(var_13393.astype('uint64'), [104, 1]), ), 1)
func_12022_call = mod.get_global_var('func_12022')
func_12024_call = mutated_mod.get_global_var('func_12024')
call_13395 = relay.TupleGetItem(func_12022_call(), 0)
call_13396 = relay.TupleGetItem(func_12024_call(), 0)
func_9715_call = mod.get_global_var('func_9715')
func_9719_call = mutated_mod.get_global_var('func_9719')
var_13405 = relay.var("var_13405", dtype = "float32", shape = (72,))#candidate|13405|(72,)|var|float32
var_13406 = relay.var("var_13406", dtype = "int64", shape = (576,))#candidate|13406|(576,)|var|int64
call_13404 = relay.TupleGetItem(func_9715_call(relay.reshape(var_13405.astype('float32'), [72,]), relay.reshape(var_13406.astype('int64'), [576,]), ), 3)
call_13407 = relay.TupleGetItem(func_9719_call(relay.reshape(var_13405.astype('float32'), [72,]), relay.reshape(var_13406.astype('int64'), [576,]), ), 3)
func_7802_call = mod.get_global_var('func_7802')
func_7806_call = mutated_mod.get_global_var('func_7806')
var_13418 = relay.var("var_13418", dtype = "float64", shape = (36,))#candidate|13418|(36,)|var|float64
call_13417 = relay.TupleGetItem(func_7802_call(relay.reshape(var_13418.astype('float64'), [6, 2, 3]), relay.reshape(call_13369.astype('bool'), [1, 390]), ), 7)
call_13419 = relay.TupleGetItem(func_7806_call(relay.reshape(var_13418.astype('float64'), [6, 2, 3]), relay.reshape(call_13369.astype('bool'), [1, 390]), ), 7)
func_12668_call = mod.get_global_var('func_12668')
func_12670_call = mutated_mod.get_global_var('func_12670')
call_13423 = func_12668_call()
call_13424 = func_12668_call()
func_9971_call = mod.get_global_var('func_9971')
func_9973_call = mutated_mod.get_global_var('func_9973')
call_13432 = relay.TupleGetItem(func_9971_call(), 0)
call_13433 = relay.TupleGetItem(func_9973_call(), 0)
output = relay.Tuple([bop_13346,call_13350,call_13354,const_13370,uop_13372,uop_13388,call_13391,const_13392,var_13393,call_13395,call_13404,var_13405,var_13406,call_13417,var_13418,call_13423,call_13432,])
output2 = relay.Tuple([bop_13349,call_13351,call_13355,const_13370,uop_13374,uop_13390,call_13394,const_13392,var_13393,call_13396,call_13407,var_13405,var_13406,call_13419,var_13418,call_13424,call_13433,])
func_13445 = relay.Function([var_13341,var_13393,var_13405,var_13406,var_13418,], output)
mod['func_13445'] = func_13445
mod = relay.transform.InferType()(mod)
mutated_mod['func_13445'] = func_13445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13445_call = mutated_mod.get_global_var('func_13445')
var_13447 = relay.var("var_13447", dtype = "bool", shape = (297,))#candidate|13447|(297,)|var|bool
var_13448 = relay.var("var_13448", dtype = "uint64", shape = (104,))#candidate|13448|(104,)|var|uint64
var_13449 = relay.var("var_13449", dtype = "float32", shape = (72,))#candidate|13449|(72,)|var|float32
var_13450 = relay.var("var_13450", dtype = "int64", shape = (576,))#candidate|13450|(576,)|var|int64
var_13451 = relay.var("var_13451", dtype = "float64", shape = (36,))#candidate|13451|(36,)|var|float64
call_13446 = func_13445_call(var_13447,var_13448,var_13449,var_13450,var_13451,)
output = call_13446
func_13452 = relay.Function([var_13447,var_13448,var_13449,var_13450,var_13451,], output)
mutated_mod['func_13452'] = func_13452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10147_call = mod.get_global_var('func_10147')
func_10148_call = mutated_mod.get_global_var('func_10148')
call_13535 = func_10147_call()
call_13536 = func_10147_call()
output = relay.Tuple([call_13535,])
output2 = relay.Tuple([call_13536,])
func_13545 = relay.Function([], output)
mod['func_13545'] = func_13545
mod = relay.transform.InferType()(mod)
output = func_13545()
func_13546 = relay.Function([], output)
mutated_mod['func_13546'] = func_13546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11222_call = mod.get_global_var('func_11222')
func_11223_call = mutated_mod.get_global_var('func_11223')
call_13554 = relay.TupleGetItem(func_11222_call(), 0)
call_13555 = relay.TupleGetItem(func_11223_call(), 0)
output = relay.Tuple([call_13554,])
output2 = relay.Tuple([call_13555,])
func_13578 = relay.Function([], output)
mod['func_13578'] = func_13578
mod = relay.transform.InferType()(mod)
mutated_mod['func_13578'] = func_13578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13578_call = mutated_mod.get_global_var('func_13578')
call_13579 = func_13578_call()
output = call_13579
func_13580 = relay.Function([], output)
mutated_mod['func_13580'] = func_13580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10354_call = mod.get_global_var('func_10354')
func_10356_call = mutated_mod.get_global_var('func_10356')
call_13627 = func_10354_call()
call_13628 = func_10354_call()
func_12775_call = mod.get_global_var('func_12775')
func_12777_call = mutated_mod.get_global_var('func_12777')
call_13698 = relay.TupleGetItem(func_12775_call(), 0)
call_13699 = relay.TupleGetItem(func_12777_call(), 0)
func_10402_call = mod.get_global_var('func_10402')
func_10404_call = mutated_mod.get_global_var('func_10404')
call_13703 = relay.TupleGetItem(func_10402_call(), 3)
call_13704 = relay.TupleGetItem(func_10404_call(), 3)
var_13705 = relay.var("var_13705", dtype = "float32", shape = (11, 11, 10))#candidate|13705|(11, 11, 10)|var|float32
bop_13706 = relay.logical_and(call_13698.astype('bool'), relay.reshape(var_13705.astype('bool'), relay.shape_of(call_13698))) # shape=(11, 11, 10)
bop_13709 = relay.logical_and(call_13699.astype('bool'), relay.reshape(var_13705.astype('bool'), relay.shape_of(call_13699))) # shape=(11, 11, 10)
output = relay.Tuple([call_13627,call_13703,bop_13706,])
output2 = relay.Tuple([call_13628,call_13704,bop_13709,])
func_13710 = relay.Function([var_13705,], output)
mod['func_13710'] = func_13710
mod = relay.transform.InferType()(mod)
mutated_mod['func_13710'] = func_13710
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13711 = relay.var("var_13711", dtype = "float32", shape = (11, 11, 10))#candidate|13711|(11, 11, 10)|var|float32
func_13710_call = mutated_mod.get_global_var('func_13710')
call_13712 = func_13710_call(var_13711)
output = call_13712
func_13713 = relay.Function([var_13711], output)
mutated_mod['func_13713'] = func_13713
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13732 = relay.const([[[7.163676,-1.706673,-3.680976,-6.934363,-5.944345],[7.111917,0.972672,-7.052674,-0.240559,-3.272252],[7.082628,8.389315,4.173151,-5.122490,1.409895],[6.190383,1.994474,8.104050,-5.698572,7.286811]]], dtype = "float32")#candidate|13732|(1, 4, 5)|const|float32
uop_13733 = relay.cosh(const_13732.astype('float32')) # shape=(1, 4, 5)
uop_13742 = relay.cos(uop_13733.astype('float32')) # shape=(1, 4, 5)
func_9698_call = mod.get_global_var('func_9698')
func_9699_call = mutated_mod.get_global_var('func_9699')
call_13744 = relay.TupleGetItem(func_9698_call(), 0)
call_13745 = relay.TupleGetItem(func_9699_call(), 0)
bop_13762 = relay.floor_divide(uop_13742.astype('float64'), relay.reshape(const_13732.astype('float64'), relay.shape_of(uop_13742))) # shape=(1, 4, 5)
uop_13765 = relay.acos(bop_13762.astype('float32')) # shape=(1, 4, 5)
bop_13784 = relay.logical_or(bop_13762.astype('bool'), relay.reshape(uop_13742.astype('bool'), relay.shape_of(bop_13762))) # shape=(1, 4, 5)
output = relay.Tuple([call_13744,uop_13765,bop_13784,])
output2 = relay.Tuple([call_13745,uop_13765,bop_13784,])
func_13787 = relay.Function([], output)
mod['func_13787'] = func_13787
mod = relay.transform.InferType()(mod)
mutated_mod['func_13787'] = func_13787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13787_call = mutated_mod.get_global_var('func_13787')
call_13788 = func_13787_call()
output = call_13788
func_13789 = relay.Function([], output)
mutated_mod['func_13789'] = func_13789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11336_call = mod.get_global_var('func_11336')
func_11338_call = mutated_mod.get_global_var('func_11338')
call_13832 = func_11336_call()
call_13833 = func_11336_call()
output = call_13832
output2 = call_13833
func_13856 = relay.Function([], output)
mod['func_13856'] = func_13856
mod = relay.transform.InferType()(mod)
output = func_13856()
func_13857 = relay.Function([], output)
mutated_mod['func_13857'] = func_13857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10830_call = mod.get_global_var('func_10830')
func_10831_call = mutated_mod.get_global_var('func_10831')
call_13866 = func_10830_call()
call_13867 = func_10830_call()
output = relay.Tuple([call_13866,])
output2 = relay.Tuple([call_13867,])
func_13871 = relay.Function([], output)
mod['func_13871'] = func_13871
mod = relay.transform.InferType()(mod)
output = func_13871()
func_13872 = relay.Function([], output)
mutated_mod['func_13872'] = func_13872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9247_call = mod.get_global_var('func_9247')
func_9248_call = mutated_mod.get_global_var('func_9248')
call_13891 = func_9247_call()
call_13892 = func_9247_call()
func_9867_call = mod.get_global_var('func_9867')
func_9869_call = mutated_mod.get_global_var('func_9869')
const_13900 = relay.const([[9.638963,2.981026,-1.865313,8.723323,3.794388,1.758334,-8.210860,2.892729,-0.605635,2.015538],[8.164986,3.594068,1.297296,-1.565673,-9.702383,8.326828,-2.588380,-6.215281,1.590496,-9.313421],[-3.985016,-2.574004,4.274637,2.333883,-0.499829,-7.954680,-3.987003,2.775438,-7.384625,5.630256],[0.340093,2.859547,3.480568,-7.020131,6.550839,7.417082,-7.322825,-8.576892,-3.564807,-9.813215],[-8.705428,-2.202775,-5.747218,3.567453,7.064902,5.461245,7.379876,-5.260339,5.263417,6.674794]], dtype = "float64")#candidate|13900|(5, 10)|const|float64
call_13899 = func_9867_call(relay.reshape(const_13900.astype('float64'), [1, 10, 5]))
call_13901 = func_9867_call(relay.reshape(const_13900.astype('float64'), [1, 10, 5]))
func_9362_call = mod.get_global_var('func_9362')
func_9368_call = mutated_mod.get_global_var('func_9368')
var_13909 = relay.var("var_13909", dtype = "int8", shape = (4, 396))#candidate|13909|(4, 396)|var|int8
const_13910 = relay.const([-0.654033,5.375586,1.020183,-5.349413,-6.943394,5.111199,-0.265403,5.349448,-7.774578,4.474076,8.887831,1.562587,0.448487,3.195520,-7.860912,0.929016,-6.571765,3.621381,-4.107435,-2.380320,-4.711356,3.796598,-5.521723,9.405152,-2.924416,4.198235,-2.380962,5.940022,-7.853875,-2.501748,3.240594,9.163496,8.517487,0.094003,6.555963,-0.844648,9.381618,-8.384351,2.873551,3.350818,-2.738886,2.372166,9.113145,9.177711,5.885978,-0.491200,1.558950,-5.863080,2.214386,-5.725529,1.336095,-4.691456,-8.638998,-7.514678,-1.647424,6.022507,-0.734856,3.522329,3.160494,5.528843,-6.388362,6.911836,-7.634692,-3.864691,-2.153314,-5.136621,-7.861771,-2.425775,2.650462,-4.369333,-1.084841,-6.140835,-5.051769,1.774367,-5.001969,-6.898514,-0.458468,-6.020345,1.260086,-8.499172,5.656631,6.669917,3.118811,-4.652127,-0.718587,-8.655648,-6.237795,7.834061,-5.365223,1.114129,-0.432625,-5.776104,3.414316,1.428643,3.314891,-3.642553,-2.237968,-1.123478,-1.622941,-1.038557,5.160409,9.015710,9.402201,-8.598061,9.981766,4.967998,3.036681,1.528797,-6.474975,3.083420], dtype = "float32")#candidate|13910|(110,)|const|float32
var_13911 = relay.var("var_13911", dtype = "float32", shape = (550,))#candidate|13911|(550,)|var|float32
const_13912 = relay.const([-8.133410,-1.723325,-5.068521,-0.377866,2.720670,-3.304050,-4.569023,-6.320930,6.897059,-6.378178,-1.219786,4.145665,-7.437031,9.832608,2.340407,1.883213,-9.967233,8.556302,6.695167,-5.244321,7.015792,-8.538853,-7.445632,3.456719,-1.987731,-6.000644,-8.287413,2.802500,-0.874659,-2.044693,0.201551,2.866884,-2.694979,1.064108,-6.787502,-6.718045,-3.136186,9.954852,6.082612,-6.343729,3.854295,-2.443642,-1.690534,-4.251584,-5.342526,-0.168774,-0.986239,7.253038,3.513616,-8.683833,-4.583207,0.699796,2.662472,-1.862357,4.906340,-0.634453,4.588183,-2.809113,6.830192,-0.799217,-0.859169,6.222957,-0.982129,0.662221,5.755300,-3.186908,-4.697345,-8.822563,-3.448007,-3.673336,7.430079,-2.663957,0.445269,6.219275,7.541409,-5.746418,-3.693440,-0.382534,-5.071822,-0.188850,-7.107487,9.319720,-3.340401,-3.815504,-2.462263,1.606542,-7.359196,-6.472970,-7.171340,-9.880945,7.757623,1.557997,-0.836105,8.417260,3.386384,6.839871,-2.657275,-2.753288,-5.075019,5.305068,2.314428,0.835176,1.962321,8.872791,9.861261,3.942729,-8.213937,-8.233152,3.566283,1.247993,-4.182611,-9.362515,-2.988338,8.447665,5.717652,2.691687,3.691362,-1.927055,8.308698,2.577844,3.288324,6.046340,3.411558,5.520753,1.283436,-5.180871,9.004281,-4.850239,6.422573,-2.543774,7.975808,-4.504102,-7.456717,0.929131,-1.093273,-7.138798,9.199459,-6.931275,-3.759070,2.405245,-6.553630,6.106921,-9.698647,5.702461,8.825037,7.302653,-1.955269,-7.437788,-6.700225,-4.045989,-3.110660,4.766582,-9.804794,-0.330508,2.081795,0.856724,0.538550,1.043673,-2.309272,-2.544633,-3.001221,-8.869706,7.233223,-4.337682,-9.928590,-6.004951,6.384961,5.803864,6.851775,-5.322709,0.628775,2.979649,-5.407140,9.419202,2.363041,5.324906,0.745414,-0.157620,-4.096926,-7.768206,0.325523,1.368927,-7.144262,8.804944,-6.179451,-6.710326,5.574173,3.635277,-5.857600,-5.431802,-6.736201,-2.833641,-9.926519,-2.417236,2.226383,1.367972,2.215104,3.655428,5.495695,-6.837204,1.443055,-9.360059,-4.733004,-4.329660,-5.162957,-0.785776,-5.521698,-1.671166,-2.214962,5.054774,1.610487,-3.357895,8.371873,2.121988,-8.829881,7.871369,-8.932089,-0.577023,4.127820,-2.491511,-7.226695,-1.607314,1.777080,7.158855,8.104503,3.893856,9.616820,7.121685,3.057612,-2.680195,-1.818936,7.352329,1.037175,1.831015,7.375196,-7.741411,1.187303,-9.584467,6.029225,-3.814361,8.409997,9.067639,7.088747,3.124627,3.363652,1.682641,8.720298,1.878710,-8.434680,2.955620,-9.148194,5.016370,-4.321667,-1.041265,2.939427,-6.458286,-2.604517,-0.832496,7.705713,-6.196780,1.441267,-6.058674,3.593767,9.742704,5.717148,4.998964,-5.015401,9.369882,-5.370454,-1.276394,-8.293056,-7.862867,-4.993104,-3.351792,1.004248,1.219251,-0.042518,0.751876,7.671908,-8.447401,-1.824984,-1.242846,-2.673232,3.283105,7.882704,1.889075,2.433032,-5.606792,-8.517237,1.682866,2.982912,-8.871115,-8.937777,1.998904,-2.277555,-5.107374,9.628876,9.541599,-6.344435,2.299579,-2.615054,2.868081,-0.193836,4.929398,8.766969,-0.041825,6.578259,-0.427362,3.789414,3.374805,4.794734,-9.614221,-1.176294,9.694754,-6.078751,-7.008346,8.470688,-1.158766,8.417958,-4.660623,-4.140863,-0.445543,5.312734,-9.683309,-7.441443,-5.173404,7.419181,4.326868,-0.815125,1.188604,9.477612,4.716106,3.357635,-1.291621,7.209662,5.161672,-0.190155,-0.972796,7.847267,-3.329142,-7.704582,9.994255,4.371113,-2.068181,0.062481,-4.998619,3.263639,2.337788,-6.337757,-8.748705,-5.025052,9.464953,0.586335,-3.295101,-5.113198,-1.871633,6.650912,7.918928,-7.416299,-3.473487,1.319294,-2.252435,-7.694463,3.309022,-7.609663,3.185951,-4.692975,5.657377,-5.967452,-8.915881,-0.426473,2.279142,-8.443364,-0.892226,-3.776331,6.819856,4.072817,5.330894,2.691981,-7.321147,-5.622906,4.290198,5.160006,-8.551791,-6.674111,-1.902728,0.434077,5.979317,-0.208472,5.295896,-8.311484,-8.296807,-4.348482,-4.889215,8.933556,5.551271,-0.158818,-8.664632,5.174577,0.317942,6.805028,-0.144887,2.771619,-0.665577,4.774016,2.881573,-0.828150,-8.680002,5.493945,3.905774,1.495823,-9.441480,9.192849,1.596185,0.345906,-2.046982,0.621606,1.151023,-2.427665,-5.468870,4.542584,-4.663978,-2.102636,2.063497,3.496633,-5.296372,5.613085,-8.546354,7.045064,-0.863811,-1.701663,4.407458,7.610128,-2.243115,-7.177048,-4.897242,-5.222048,-9.196126,0.876378,-0.730665,-6.791515,2.260212,3.803610,-5.310040,-2.107084,7.433890,8.254157,-4.588237,-9.671120,9.220355,7.496355,-8.119171,-5.536892,-8.270732,-2.504650,-8.511563,0.684369,3.776249,2.109278,8.613906,-9.917012,-1.180160,5.724649,-9.451357,5.975568,1.219335,9.139028,3.723559,-3.386018,9.124648,-1.497253,0.674908,-1.061435,8.646999,-8.148115,3.222388,3.042351,-9.832869,-8.821248,-0.602659,-3.047791,-9.868769,-2.214245,5.148458,-5.295844,5.548966,-8.674612,-3.151889,9.996630,-3.229954,5.849939,-0.198792,7.870626,6.495590,-0.447311,-4.341094,2.822047,-6.886439,-4.076571,-8.538133,9.113807,2.721971,-6.030655,-1.106394,1.563937,3.729355,-8.059574,-8.832354,1.075485,5.254403,3.531579,-6.566236,-1.908040,-9.490397,4.289782,3.011908,2.460183,-5.366888,7.365533,6.788303,-9.048061,1.674247,7.386323,-5.040845,5.245243,-2.660703,1.627227,-9.679727,9.978659,-8.683211,9.595547,8.014409,3.793598,4.824202,-9.775508,8.531614,3.262110,3.427391,-8.901388,9.020876,1.386334,0.225070,5.173592,5.056019,-7.409281,3.107770,8.732234,-9.008797,-6.991813,7.238472,3.145355,1.415761,9.158943,4.997026,7.145497,-1.576089,-1.836776,5.300803,2.166418,-0.294498,5.446866,2.871307,6.896743,4.184296,1.254387,-5.273735,1.758463,-4.091988,6.054495,9.640720,-7.684104,6.325019,2.734331,-6.142980,5.081160,-4.384169,-9.209376,-3.465052,-7.241603,-7.605530,-1.962035,-9.392130,-3.751534,3.709993,-4.750593,-7.017846,-8.164298,2.112056,2.444845,-7.035247,-7.679313,2.566050,-6.696260,-7.517634,0.124801,1.287794,-8.232719,3.779556,-4.393417,-2.049575,6.742928,2.836356,-9.955769,7.890267,3.840876,8.859161,2.554547,-1.002566,-4.706127,-8.075611,3.148979,6.513648,1.915892,7.707494,3.901559,-2.246521,-8.041821,-7.631760,-5.385796,-1.690381,1.057079,7.117796,-1.815612,2.786243,3.761595,-3.710240,9.437687,-1.843425,1.247351,-9.705179,9.270374,3.953467,-8.264576,-4.656856,-1.614102,-3.958175,-3.195342,-7.325760,-8.450858,2.163987,5.615923,-0.801297,-3.433062,3.058610,-2.131969,-0.068288,-2.120337,-8.113329,-7.672683,7.661565,5.300223,-0.704916,2.917453,6.600290,-7.549456,4.049481,-0.544658,-7.644639,-6.693461,-2.702007,2.694989,-3.978085,1.707677,8.164464,-7.931317,-5.720537,-5.895584,0.969874,5.869817,4.473859,-7.205734,9.777298,2.908853,8.554673,9.538195,-7.256633,-9.681885,-4.688973,1.235830,0.226743,-6.543478,-8.482628,6.965670,-4.581570,-5.918095,-9.141064,4.324433,2.411788,-6.900239,-9.811307,4.922320,-9.657679,-1.746702,0.628843,-1.112921,4.266346,-9.574241,-5.356326,9.919619,-8.608578,-8.074084,-5.613099,-3.906709,-2.353926,-1.081627,-1.853393,-0.598583,-2.846541,3.878258,-3.214131,-6.822529,-0.323634,3.797464,-6.596163,1.055848,-7.238645,-0.842315,6.300260,8.404184,1.040600,5.241487,5.676397,-0.583302,-6.793808,4.962030,-4.307291,-5.855409,-5.760530,6.914426,-7.403982,7.308088,-1.722128,-1.033767,-3.200901,-7.552155,8.487250,3.491234,2.813171,-7.930530,5.864832,-7.554906,-7.638299,-3.917411,3.521188,1.271309,-5.466445,-1.115168,-2.247203,0.746487,-5.205322,-6.798105,7.124904,-9.679096,-7.044746,-8.483618,-3.240176,6.622722,5.952308,2.341120,6.797009,-3.938201,2.720649,-8.857843,7.342918,-4.850132,5.979482,-9.136585,-9.210236,0.260403,5.286102,-5.891717,7.486484,-4.206682,1.152718,9.014167,3.380851,6.242869,-5.654558,-2.755902,1.304327,-6.774843,-3.926489,9.358686,6.326741], dtype = "float64")#candidate|13912|(784,)|const|float64
call_13908 = relay.TupleGetItem(func_9362_call(relay.reshape(var_13909.astype('int8'), [1584, 1]), relay.reshape(const_13910.astype('float32'), [110,]), relay.reshape(var_13911.astype('float32'), [550,]), relay.reshape(const_13912.astype('float64'), [784,]), ), 1)
call_13913 = relay.TupleGetItem(func_9368_call(relay.reshape(var_13909.astype('int8'), [1584, 1]), relay.reshape(const_13910.astype('float32'), [110,]), relay.reshape(var_13911.astype('float32'), [550,]), relay.reshape(const_13912.astype('float64'), [784,]), ), 1)
output = relay.Tuple([call_13891,call_13899,const_13900,call_13908,var_13909,const_13910,var_13911,const_13912,])
output2 = relay.Tuple([call_13892,call_13901,const_13900,call_13913,var_13909,const_13910,var_13911,const_13912,])
func_13922 = relay.Function([var_13909,var_13911,], output)
mod['func_13922'] = func_13922
mod = relay.transform.InferType()(mod)
mutated_mod['func_13922'] = func_13922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13922_call = mutated_mod.get_global_var('func_13922')
var_13924 = relay.var("var_13924", dtype = "int8", shape = (4, 396))#candidate|13924|(4, 396)|var|int8
var_13925 = relay.var("var_13925", dtype = "float32", shape = (550,))#candidate|13925|(550,)|var|float32
call_13923 = func_13922_call(var_13924,var_13925,)
output = call_13923
func_13926 = relay.Function([var_13924,var_13925,], output)
mutated_mod['func_13926'] = func_13926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12775_call = mod.get_global_var('func_12775')
func_12777_call = mutated_mod.get_global_var('func_12777')
call_13974 = relay.TupleGetItem(func_12775_call(), 0)
call_13975 = relay.TupleGetItem(func_12777_call(), 0)
func_254_call = mod.get_global_var('func_254')
func_256_call = mutated_mod.get_global_var('func_256')
var_13978 = relay.var("var_13978", dtype = "int64", shape = (576,))#candidate|13978|(576,)|var|int64
call_13977 = relay.TupleGetItem(func_254_call(relay.reshape(var_13978.astype('int64'), [8, 6, 12])), 0)
call_13979 = relay.TupleGetItem(func_256_call(relay.reshape(var_13978.astype('int64'), [8, 6, 12])), 0)
func_9643_call = mod.get_global_var('func_9643')
func_9645_call = mutated_mod.get_global_var('func_9645')
const_13984 = relay.const([-10,-8,6,-5,-6,-3,-6,10,1,-2,-4,-5,6,-1,10,-2,4,3,9,-2,-8,7,-3,-7,3,-9,-10,4,-4,5,-8,6,7,3,1,1,8,5,-3,8,-4,6,1,-9,4,1,-1,5,-8,5,4,9,4,-5,-10,4,10,-5,-10,8,-10,-6,-7,10,1,-5,1,-9,1,1,-7,-5,-3,-1,-7,-6,9,-8,3,2,-5,-9,2,-1,-1,6,7,6,2,-4,-8,3,-2,-4,3,1,2,4,7,10,-8,-8,6,7,-3,6,-1,9,-2,-10,-6,2,-10,-3,-2,5,-9,-6,-6,2,4,-1,7,-8,-2,5,-7,7,3,-4,-2,8,-1,6,-9,-7,6,-10,7,-5,6,6,-7,3,-2,9,-6,-7,3,-4,-4,7,-10,-7,5,-5,-10,-6,-3,-10,-8,1,6,-2,-5,-3,-9,3,5,6,9,-3,-4,9,10,2,-8,3,-5,3,3,-1,6,4,3,3,3,3,5,-5,-3,4,-4,-5,3,-10,-6,3,-4,-3,-6,9,2,-7,5,-3,-10,10,-5,-2,-3,-7,3,10,6,2,-10,3,4,9,3,10,1,5,4,-4,-10,-7,10,10,-1,-8,-5,4,-1,3,-7,7,-4,1,2,9,8,-4,-3,4,9,6,-3,7,3,9,-4,7,-9,-10,-6,2,2,2,-2,-1,8,-7,6,-6,4,9,2,-8,6,1,-4,6,10,-3,-4,-3,2,3,4,6,-5,-5,-3,-7,8,1,-10,10,-4,-4,9,-1,9,-8,-5,10,3,8,-8,-5,2,10,2,6,7,4,-7,-9,-1,9,3,-8,9,-4,-1,-5,6,7,-9,4,10,4,-5,4,-1,-3,-6,-3,-5,2,-6,8,-4,10,9,1,-5,9,-9,-7,-9,5,1,10,4,3,9,-4,8,8,1,9,4,6,-2,-4,-5,-4,-8,2,6,-6,7,-8,5,4,-5,1,-10,5,-2,-1,-7,-3,1,10,1,2,5,6,-8,-3], dtype = "int16")#candidate|13984|(384,)|const|int16
call_13983 = relay.TupleGetItem(func_9643_call(relay.reshape(const_13984.astype('int16'), [384,])), 1)
call_13985 = relay.TupleGetItem(func_9645_call(relay.reshape(const_13984.astype('int16'), [384,])), 1)
output = relay.Tuple([call_13974,call_13977,var_13978,call_13983,const_13984,])
output2 = relay.Tuple([call_13975,call_13979,var_13978,call_13985,const_13984,])
func_13988 = relay.Function([var_13978,], output)
mod['func_13988'] = func_13988
mod = relay.transform.InferType()(mod)
var_13989 = relay.var("var_13989", dtype = "int64", shape = (576,))#candidate|13989|(576,)|var|int64
output = func_13988(var_13989)
func_13990 = relay.Function([var_13989], output)
mutated_mod['func_13990'] = func_13990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12775_call = mod.get_global_var('func_12775')
func_12777_call = mutated_mod.get_global_var('func_12777')
call_14045 = relay.TupleGetItem(func_12775_call(), 0)
call_14046 = relay.TupleGetItem(func_12777_call(), 0)
output = relay.Tuple([call_14045,])
output2 = relay.Tuple([call_14046,])
func_14075 = relay.Function([], output)
mod['func_14075'] = func_14075
mod = relay.transform.InferType()(mod)
mutated_mod['func_14075'] = func_14075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14075_call = mutated_mod.get_global_var('func_14075')
call_14076 = func_14075_call()
output = call_14076
func_14077 = relay.Function([], output)
mutated_mod['func_14077'] = func_14077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9247_call = mod.get_global_var('func_9247')
func_9248_call = mutated_mod.get_global_var('func_9248')
call_14087 = func_9247_call()
call_14088 = func_9247_call()
func_9946_call = mod.get_global_var('func_9946')
func_9947_call = mutated_mod.get_global_var('func_9947')
call_14089 = func_9946_call()
call_14090 = func_9946_call()
func_6704_call = mod.get_global_var('func_6704')
func_6708_call = mutated_mod.get_global_var('func_6708')
var_14094 = relay.var("var_14094", dtype = "float32", shape = (900,))#candidate|14094|(900,)|var|float32
var_14095 = relay.var("var_14095", dtype = "uint64", shape = (1, 208))#candidate|14095|(1, 208)|var|uint64
call_14093 = relay.TupleGetItem(func_6704_call(relay.reshape(var_14094.astype('float32'), [6, 15, 10]), relay.reshape(var_14095.astype('uint64'), [208,]), ), 0)
call_14096 = relay.TupleGetItem(func_6708_call(relay.reshape(var_14094.astype('float32'), [6, 15, 10]), relay.reshape(var_14095.astype('uint64'), [208,]), ), 0)
output = relay.Tuple([call_14087,call_14089,call_14093,var_14094,var_14095,])
output2 = relay.Tuple([call_14088,call_14090,call_14096,var_14094,var_14095,])
func_14097 = relay.Function([var_14094,var_14095,], output)
mod['func_14097'] = func_14097
mod = relay.transform.InferType()(mod)
var_14098 = relay.var("var_14098", dtype = "float32", shape = (900,))#candidate|14098|(900,)|var|float32
var_14099 = relay.var("var_14099", dtype = "uint64", shape = (1, 208))#candidate|14099|(1, 208)|var|uint64
output = func_14097(var_14098,var_14099,)
func_14100 = relay.Function([var_14098,var_14099,], output)
mutated_mod['func_14100'] = func_14100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9411_call = mod.get_global_var('func_9411')
func_9413_call = mutated_mod.get_global_var('func_9413')
call_14126 = func_9411_call()
call_14127 = func_9411_call()
output = relay.Tuple([call_14126,])
output2 = relay.Tuple([call_14127,])
func_14155 = relay.Function([], output)
mod['func_14155'] = func_14155
mod = relay.transform.InferType()(mod)
mutated_mod['func_14155'] = func_14155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14155_call = mutated_mod.get_global_var('func_14155')
call_14156 = func_14155_call()
output = call_14156
func_14157 = relay.Function([], output)
mutated_mod['func_14157'] = func_14157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13161_call = mod.get_global_var('func_13161')
func_13162_call = mutated_mod.get_global_var('func_13162')
call_14231 = relay.TupleGetItem(func_13161_call(), 0)
call_14232 = relay.TupleGetItem(func_13162_call(), 0)
func_13161_call = mod.get_global_var('func_13161')
func_13162_call = mutated_mod.get_global_var('func_13162')
call_14251 = relay.TupleGetItem(func_13161_call(), 1)
call_14252 = relay.TupleGetItem(func_13162_call(), 1)
output = relay.Tuple([call_14231,call_14251,])
output2 = relay.Tuple([call_14232,call_14252,])
func_14256 = relay.Function([], output)
mod['func_14256'] = func_14256
mod = relay.transform.InferType()(mod)
output = func_14256()
func_14257 = relay.Function([], output)
mutated_mod['func_14257'] = func_14257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9247_call = mod.get_global_var('func_9247')
func_9248_call = mutated_mod.get_global_var('func_9248')
call_14258 = func_9247_call()
call_14259 = func_9247_call()
func_10908_call = mod.get_global_var('func_10908')
func_10910_call = mutated_mod.get_global_var('func_10910')
call_14260 = relay.TupleGetItem(func_10908_call(relay.reshape(call_14258.astype('float32'), [2, 10, 12])), 1)
call_14261 = relay.TupleGetItem(func_10910_call(relay.reshape(call_14258.astype('float32'), [2, 10, 12])), 1)
output = relay.Tuple([call_14258,call_14260,])
output2 = relay.Tuple([call_14259,call_14261,])
func_14270 = relay.Function([], output)
mod['func_14270'] = func_14270
mod = relay.transform.InferType()(mod)
output = func_14270()
func_14271 = relay.Function([], output)
mutated_mod['func_14271'] = func_14271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14256_call = mod.get_global_var('func_14256')
func_14257_call = mutated_mod.get_global_var('func_14257')
call_14279 = relay.TupleGetItem(func_14256_call(), 1)
call_14280 = relay.TupleGetItem(func_14257_call(), 1)
func_5498_call = mod.get_global_var('func_5498')
func_5502_call = mutated_mod.get_global_var('func_5502')
const_14306 = relay.const([[1.114023,-1.101111,8.608911,-3.037799,7.191062,-7.310614,5.338792,-5.409908,9.912328,3.721746,8.437579,0.701684,8.490401,2.687378,8.842619,-9.908687,-9.016509,2.474923,1.608549,5.182770,-2.270536,1.195525,-3.919130,-0.786955,-6.542314,-1.410712,6.229390,-1.929075,-4.886419,-7.689700,2.905202,0.136567,-4.661521,8.850851,-8.026463,-0.667973,-6.743937,-8.641636,6.452621,-3.095028,-4.529498,7.802427],[-3.801523,-3.318449,4.011097,6.951213,-4.936507,9.161113,6.707397,-7.615592,1.015545,-4.894313,-7.145393,8.095404,-6.335141,-6.364375,-3.684183,-8.206281,6.624965,7.481319,-8.432403,5.371223,0.950680,7.735625,5.639391,-3.821340,-6.303339,-5.407200,-3.864341,-5.115291,4.810792,6.676385,-2.499492,3.727776,9.004768,4.891095,9.318139,-6.664667,6.833979,0.548057,8.444235,5.132476,-1.776973,4.779397],[2.791541,2.288322,-4.462708,-2.717732,6.816751,-1.868603,3.166951,-8.678317,0.923966,8.508361,-9.045677,2.827883,0.340455,7.570947,6.130440,-2.638782,-4.993939,9.864879,-2.561739,5.816408,7.406558,-8.058284,1.809005,7.468409,2.017978,2.944876,0.869881,-9.534202,-6.485035,6.734384,-5.846706,-7.616674,8.689201,1.969039,-4.971269,2.750379,-1.121413,-4.709162,-6.166307,-9.244628,-3.440169,3.694358],[4.895454,-7.013526,5.001398,8.946785,5.795476,-8.009496,3.605985,0.082092,4.355039,-9.227414,-0.261913,3.306244,-0.512957,8.635272,-3.177707,7.636440,-9.800701,4.945077,7.852321,4.191896,-4.480927,0.776175,2.968623,7.249141,-2.445057,-8.383458,-8.895180,6.690721,-8.000997,-3.390394,-9.343568,-0.375906,0.644529,-9.116553,-2.956484,-2.530752,-5.078427,-6.729131,-3.430923,-3.807466,7.647592,1.973809],[-4.658197,7.188457,3.237743,9.971457,0.662519,-4.047875,4.142668,0.955667,-8.459401,4.080833,2.326837,-8.366319,1.521412,-8.246015,-6.250345,7.035893,1.726148,0.229202,-7.123529,-7.070118,-8.367142,-0.738019,1.388859,8.562596,4.588110,-2.558870,-7.542033,-0.022516,0.148717,2.902721,0.757951,3.345251,8.470562,0.985446,8.529460,5.534911,7.207393,-3.847842,0.158455,-0.972932,-8.856162,7.466245],[-5.002275,-1.494114,3.356169,0.305492,-5.237924,9.993805,3.918387,2.845066,-1.237683,-2.565049,5.891213,-6.755649,-5.796858,0.673567,-2.645277,4.787244,8.999218,-1.493656,1.678583,9.883545,-6.110540,0.160532,8.495831,3.479945,3.711770,5.154423,-9.589557,2.736251,6.335237,1.527607,-6.439559,-1.186305,-3.154918,-8.824571,-6.445432,-7.033120,-2.448153,-1.930806,-4.742112,4.458986,7.662094,-0.637121],[-4.719309,-1.310343,4.533020,4.106505,-6.994554,9.733778,0.770036,9.525114,0.895821,-7.772953,5.353721,6.155661,-8.651888,-2.742483,-5.495498,5.685385,-0.859375,-1.774119,7.840909,4.503274,0.086624,9.394223,-5.057829,-0.544699,-3.180645,6.392776,7.456852,2.706617,4.100513,7.077521,0.946446,2.330106,-9.656265,8.871928,1.773960,6.995771,3.311597,3.923978,8.463994,2.715214,1.116435,-7.384786]], dtype = "float64")#candidate|14306|(7, 42)|const|float64
const_14307 = relay.const(8, dtype = "int64")#candidate|14307|()|const|int64
var_14308 = relay.var("var_14308", dtype = "float64", shape = (48,))#candidate|14308|(48,)|var|float64
call_14305 = relay.TupleGetItem(func_5498_call(relay.reshape(const_14306.astype('float64'), [7, 3, 14]), relay.reshape(const_14307.astype('int64'), []), relay.reshape(var_14308.astype('float64'), [48,]), ), 1)
call_14309 = relay.TupleGetItem(func_5502_call(relay.reshape(const_14306.astype('float64'), [7, 3, 14]), relay.reshape(const_14307.astype('int64'), []), relay.reshape(var_14308.astype('float64'), [48,]), ), 1)
func_1939_call = mod.get_global_var('func_1939')
func_1941_call = mutated_mod.get_global_var('func_1941')
call_14315 = func_1939_call(relay.reshape(var_14308.astype('float64'), [6, 1, 8]))
call_14316 = func_1939_call(relay.reshape(var_14308.astype('float64'), [6, 1, 8]))
func_13922_call = mod.get_global_var('func_13922')
func_13926_call = mutated_mod.get_global_var('func_13926')
const_14325 = relay.const([[-3,-7,1,10,8,-6,7,-3,-6,10,-7,-4,10,-6,1,2,-2,4,8,9,-4,-7,7,-9,-6,-2,-3,-2,4,-10,9,8,2,3,6,5,7,2,-2,10,-10,-1,-1,-8,10,-9,-1,-8,-6,2,-5,3,-9,-9,-6,10,-3,8,3,-8,-3,2,1,6,3,1,-7,3,1,-10,10,2,-1,5,6,7,-10,3,8,-1,1,10,-10,7,-4,-8,-5,6,-1,-9,6,-6,4,-8,-3,3,2,-4,-8,-4,6,-7,-10,-8,-5,6,3,-8,3,1,-6,2,10,2,6,10,-6,4,9,-7,-9,6,6,10,1,-7,-6,6,-4,-3,4,2,-10,6,-8,-4,5,-8,-5,4,10,6,10,-1,2,-3,-9,4,3,1,-2,-8,-6,-2,7,-10,7,2,-9,2,-10,8,1,-1,4,4,6,5,-8,-4,2,1,-9,7,-7,9,-3,7,9,-8,7,-8,-4,6,9,7,3,3,1,9,-8,-5,3,6,-7,2,-6,10,3,-4,-5,6,-10,-1,-10,1,7,10,8,-4,10,-3,-6,8,9,6,4,-4,-2,7,5,1,-6,4,6,-2,-3,5,-8,-1,-5,-4,8,3,-3,3,10,10,4,1,1,8,-8,5,6,-6,-2,1,-6,-1,7,-7,-5,-3,2,-9,-7,8,10,3,9,8,-8,1,-3,7,6,9,2,2,-7,-6,8,2,-7,-3,-4,6,-9,-8,-1,4,-8,1,-8,5,-4,2,6,1,8,-8,4,-4,2,5,8,3,6,-9,8,2,4,-3,7,-2,7,-9,5,-4,-7,2,-2,-5,-10,-5,-6,-10,2,-1,-9,-5,-4,-7,-8,-7,4,4,8,-4,-4,9,-7,-2,-4,7,-9,-10,-9,-3,-2,3,4,1,9,-10,-6,4,-8,10,1,-5,-2,-5,-6,7,1,-3,1,6,-1,2,-5,-9,-5,5,10,8,9,-4,-2,-2,-5,9,-10,4,1,-9,4,-1,10,-5,-8,-4,-8,1,-1,4,-9,-10,8,-2,-1,7,-10,-4,-4,3,-4,8,-5,-4,1,2,1,-1,-9,-7,-6,8,1,-8,-3,-7,-10,-2,2,-3,2,-5,1,-1,10,1,-2,-6,2,-10,-7,-5,1,-1,-3,-8,-10,-7,10,1,6,8,2,-3,-7,3,-9,8,6,-5,-4,4,-7,-4,1,-8,7,6,-7,-6,-1,8,-7,-2,-6,2,3,3,-8,-8,10,5,10,-7,-2,3,1,-3,-10,1,-5,7,2,-7,-4,-9,-9,-4,-8,7,-3,1,-2,10,3,-9,8,-4,3,-9,4,-3,-4,1,-7,10,-9,-4,7,-4,-7,9,-6,-6,-6,-7,-4,-5,-9,-8,7,6,1,8,6,-10,-2,10,4,8,-2,-10,7,-5,-4,-5,-3,4,3,-3,3,-1,4,6,7,8,10,8,-5,-6,-7,7,-3,7,-4,-4,4,1,-9,6,10,-5,-1,-10,7,-3,-8,-6,3,9,-4,4,10,-5,-4,-5,2,5,-5,10,-10,6,-5,-10,-8,6,2,9,5,3,3,-4,-9,10,5,-6,7,4,6,2,3,-5,10,-6,-6,-6,6,5,2,-9,-9,3,-1,-10,3,1,2,10,10,8,-7,-4,-4,-8,6,3,-6,-1,-5,4,-3,-1,-2,6,7,7,-6,-6,-10,9,6,3,-10,9,-3,1,-9,-10,5,3,8,7,1,-6,-10,8,7,-7,6,-2,8,-5,-10,-10,-1,-9,2,-4,-9,-5,5,6,7,-1,-9,1,8,6,3,1,8,-4,5,-5,-8,5,4,-7,5,1,1,-5,10,-5,7,8,7,8,-9,6,3,-1,5,7,8,-5,-2,9,2,-4,1,6,3,10,9,9,9,1,2,3,-6,8,-9,-7,-1,9,4,-2,3,10,7,-6,-1,-10,4,2,4,-5,9,3,4,3,-9,-4,-4,6,6,-10,10,-10,5,-4,4,-9,1,4,-4,-5,2,7,6,9,-9,8,1,6,2,3,9,-8,4,8,-10,10,2,8,-3,7,8,-1,-3,-2,-5,8,7,-6,1,10,5,-1,-9,3,8,4],[-5,-4,2,-1,3,2,-9,-2,10,-2,-3,-2,-4,6,4,1,-5,-8,-2,-5,-10,4,3,2,9,-8,6,7,-4,-5,3,10,10,-6,-8,-7,7,-10,9,-4,5,-1,4,1,2,-10,2,6,9,4,2,8,1,10,1,8,-7,-6,-10,-3,-5,-9,5,8,-5,1,-2,-7,-10,-4,-10,-6,-3,10,-1,6,-7,2,-8,4,-3,-3,8,7,-6,1,-3,-4,1,-10,8,10,-8,-7,-5,2,-8,10,-4,5,9,-5,-5,9,-5,-10,-4,8,5,8,6,5,-2,1,-5,5,4,-6,-1,5,-5,-8,-5,1,-2,7,9,-4,-10,-9,3,7,-8,-6,-10,-4,4,-4,-8,9,5,10,2,7,10,5,3,-3,-6,7,-8,3,-3,-2,-3,3,-1,-2,-8,2,-6,-5,10,-8,-5,-4,-8,-6,3,5,1,4,2,2,4,2,-5,-8,5,3,3,-4,6,5,9,5,-8,9,-4,2,9,7,10,-8,3,6,1,-10,-9,-6,5,-8,10,-6,10,-2,3,2,-7,10,-2,-8,4,7,3,4,5,-4,1,1,8,-2,-5,6,-3,-3,-1,-7,7,10,9,9,-10,-1,2,4,-5,3,-9,1,-3,8,-3,1,-8,3,7,-1,6,-7,2,-10,-8,-7,2,-10,2,1,2,7,-2,-7,-4,-7,-2,9,-8,3,2,4,7,10,-1,-7,4,-2,6,-7,-10,9,1,-8,-6,6,10,-3,3,8,-6,-6,1,-5,7,-5,8,-9,-1,1,-7,-5,-8,-5,2,6,8,-6,-10,-4,-7,-4,-5,8,-1,5,-8,4,-1,-9,-2,-10,-9,-9,-1,5,-4,-5,-3,6,1,-1,-4,-5,6,7,-10,-8,7,-7,-4,8,-3,-8,-5,-2,8,5,10,6,-3,4,1,-2,1,7,-4,-5,10,-5,10,1,-3,-9,-8,7,-9,7,-4,8,-10,1,2,3,9,-6,7,6,-6,1,1,7,10,10,5,-9,3,-9,8,-6,7,-6,9,-4,-9,9,6,10,2,-10,-7,9,9,-6,7,-5,-4,-1,-5,8,-4,5,-4,4,6,2,2,-3,9,-9,-1,-3,5,8,10,3,-4,2,3,6,1,-3,7,-6,-5,-3,9,-3,-9,-4,6,3,-6,-10,4,-8,-3,-7,-7,9,10,-10,7,5,4,-6,-1,-2,7,-7,9,-5,-6,-5,9,-7,-5,10,-2,-9,-8,-9,-8,-5,-5,6,-10,10,-5,-3,8,-3,-8,-6,-2,9,2,9,8,-4,8,9,-1,6,-6,2,10,9,-10,10,-10,2,-4,-3,-4,-7,5,2,7,-3,8,4,-3,-6,8,7,-3,-3,9,-9,-10,-9,2,-4,1,1,5,7,-10,2,-7,7,9,8,5,5,6,4,-7,-9,6,-10,-5,10,10,-5,-3,8,4,4,-5,-7,-2,9,9,-10,5,-7,-4,8,-9,2,7,5,-8,-1,7,4,-2,9,-8,-8,8,5,-2,-8,8,-4,2,6,-8,4,6,-5,8,2,4,1,7,5,-3,-2,-5,-5,6,8,8,-9,8,5,-7,-6,-6,10,4,-5,-10,-7,-3,-1,-4,5,1,-8,-6,-6,9,2,8,-1,9,9,-10,4,1,-4,-4,-4,-3,-3,5,-9,-1,2,-7,4,-6,5,1,3,3,-4,-6,-2,-3,7,-4,4,9,5,-10,2,-3,-4,-6,-6,-4,-8,1,1,-2,-5,7,4,-7,4,9,3,-2,-6,-6,9,-3,2,6,-1,4,-7,-7,-8,9,4,-7,9,8,2,-8,-3,10,6,-3,-6,-2,9,-3,6,1,1,-8,1,-8,9,-4,6,10,-1,10,9,10,5,-6,-7,-2,-7,1,-6,1,-6,10,10,-5,-2,-6,-10,8,2,-6,-1,9,9,-5,10,2,10,7,1,-1,-10,-3,-5,-4,7,6,-8,-7,7,-4,8,1,10,-10,-4,4,-9,-2,8,-3,-6,4,-6,-3,-2,9,4,2,10,5,-2,-7,5,-9,-5,-9,-3,-7,3,1,-6,9,-2,4,-2,5,-7,7,2,-7,8,8,-9,10,6,7,-6]], dtype = "int8")#candidate|14325|(2, 792)|const|int8
const_14326 = relay.const([0.209348,-8.429434,-1.694417,0.026509,7.871329,-9.819424,6.646557,3.192660,7.466804,4.224799,-7.576204,-5.822375,-7.980952,-1.611201,-4.073786,6.328842,-1.127033,3.142746,1.693521,-3.615847,-4.697444,0.850532,1.349329,3.193302,3.910117,2.670710,3.393035,-0.518086,-0.275499,4.725389,-4.984054,8.596282,9.455126,5.217830,5.793098,6.769979,1.425320,7.036388,-5.180959,4.009888,-7.968766,0.391842,5.014720,4.702251,-7.667382,-8.565232,6.245812,6.701701,-1.557516,-1.631505,5.953881,6.945672,-1.527154,6.275267,8.054150,-8.822805,0.590633,5.396142,7.742340,2.468210,1.678427,-0.475535,7.565373,4.509223,4.132664,1.002115,-3.223800,9.260028,4.948388,0.143929,3.857984,-3.430394,7.614761,6.822388,-4.503589,-0.382627,-4.207800,0.389170,-6.467382,1.868569,-2.847220,-2.800211,6.611706,7.102139,-5.455500,5.001157,-7.869647,8.098306,1.613759,-0.638587,5.972311,-5.974165,2.436947,7.170511,-7.380911,2.413998,7.095437,5.621277,5.525801,9.220942,8.328043,-6.211760,2.241680,6.666514,-0.729926,-5.568004,-8.184225,-5.794093,-5.662283,-9.337322,-9.985941,1.702876,1.769729,9.990221,8.761486,7.358131,6.407270,-2.094268,7.768889,-1.793486,8.710959,2.916075,8.448777,-3.017026,2.719379,-4.892511,-1.438779,6.822876,0.280836,9.143667,0.646139,7.689383,-9.928108,0.856385,-2.643166,1.994728,5.544300,2.649652,-7.582242,-8.151866,-6.407756,-7.780900,6.777019,0.113443,-3.867430,0.860292,9.443541,-1.933278,5.684743,1.376715,9.227615,3.506886,8.068327,2.780050,-5.836229,1.023670,2.204970,-1.921859,7.639568,4.704624,-8.785037,8.880216,1.307890,4.561432,-8.293369,-2.370858,1.141496,-7.709723,4.403833,3.537030,7.636304,-6.364928,-2.731200,9.468007,-4.659250,5.952164,-5.198774,-4.347878,-2.730998,-0.284419,-4.308670,0.975004,-6.174845,-6.326658,9.643184,-6.589364,-3.412648,0.545829,5.812589,-2.184045,8.079585,-4.026303,4.488214,-6.440716,-2.030795,-7.749210,2.524006,-7.907099,5.188763,2.066918,-9.515633,4.241854,9.465128,8.023333,-7.717381,-2.295783,4.386948,0.352382,-1.000151,8.106743,-5.619875,0.297284,1.963665,3.385110,9.923121,5.469459,-2.528842,-9.736083,-8.231735,-5.149434,-4.532520,-2.264853,1.623651,-8.977992,3.752664,-8.025122,8.929462,-3.612582,-1.974711,6.704576,-5.839147,3.146972,3.392574,-7.817915,-6.910022,-3.670300,-5.137669,-5.942456,-1.959578,5.397454,-6.359297,8.755732,3.619547,-2.633042,-7.775709,8.484014,0.640212,1.238159,9.781702,-9.320353,7.000262,-3.020355,0.777595,1.480446,4.698722,-9.956760,4.134822,9.183193,3.283665,-6.281702,9.803354,-4.519316,-7.767907,2.605801,-0.081305,3.773124,0.283293,4.448790,0.281720,-8.039756,6.698781,-8.867986,7.193889,5.267921,-4.331823,-4.979416,-4.629805,-1.007814,-6.834190,-1.282315,3.900527,-2.319774,3.415365,8.627818,9.796270,9.827153,-8.087482,5.818220,8.341042,-4.560852,-7.317692,3.589645,-1.754400,6.531158,0.888816,2.537808,-9.018236,7.918496,0.534727,-1.233931,9.648659,0.531169,9.668315,6.321184,3.686790,-9.676218,-1.963078,-8.251296,6.293617,2.716000,9.058377,5.997628,7.750194,7.629942,-5.476147,8.326964,3.113824,5.388424,4.080781,9.900150,7.137109,-4.698538,6.647941,-6.020471,-7.854642,-7.133588,-6.854592,1.269957,-2.657401,-9.543438,-0.919260,-9.281352,-7.868463,9.094041,-8.987667,-3.967848,-6.207894,1.001370,-5.226437,0.849165,-4.804720,-2.888253,1.678014,-4.417337,8.678773,-4.832448,-0.120811,9.043254,0.233969,-4.493795,-7.439876,8.490453,9.430244,-2.901051,-6.512042,-1.935367,8.529101,3.821345,8.743157,0.412996,-7.051888,-4.494787,-0.351602,2.223808,-8.657511,-4.153667,-7.778291,-0.383761,-5.436634,6.635348,-0.509350,2.926624,6.634172,-6.438600,-5.005426,4.498886,-5.838099,8.174749,4.141547,-5.457971,-3.858851,-9.004716,-0.125218,-9.688925,-9.286988,9.268004,-8.072948,-1.316332,2.037606,-5.993018,-6.822984,-0.290202,6.723862,-8.477473,-9.635156,0.340921,4.248685,4.160937,-9.946255,-1.520687,-2.307696,7.417574,7.939772,-5.554875,-8.102051,-9.523929,-0.630054,3.031275,7.423498,-9.458912,-9.637739,-4.264154,-5.018950,2.897120,-3.600054,2.208335,4.465336,6.469871,-9.675983,3.973494,-4.208470,-8.020124,-1.357914,-5.775954,2.420589,7.404969,-0.700542,1.422907,-9.101502,7.843370,-7.107670,5.521030,4.554188,-3.787212,-6.919916,1.198168,-5.191898,9.739524,7.058192,-2.502335,-2.757302,0.348978,3.017673,7.799667,7.994149,-2.259661,8.123447,-0.299742,-5.931512,2.683941,-5.580409,9.281782,-3.967691,-4.604503,6.404213,-7.891578,-6.355524,-2.649965,-6.552741,0.116110,9.783580,0.223468,0.037912,0.112513,1.588293,-2.254930,0.614169,-9.493885,-2.266331,-0.258811,8.342715,-0.104079,-2.522790,1.198141,-4.882303,-4.825541,3.554526,9.134786,7.419128,-0.910578,3.376848,5.447328,7.209538,-4.878283,-8.900695,6.603829,5.537388,2.770862,-4.774646,-2.979964,-2.963439,-4.338209,-1.729406,-2.261384,0.780967,-7.772821,-7.643300,5.598842,7.201385,9.207688,-0.460161,4.951869,-5.382185,3.860392,-2.027036,-3.082564,0.442228,-3.365208,-2.030539,0.865399,1.982451,-0.428510,4.726918,6.429818,7.145936,-9.966812,7.057015,8.871665,3.946682,5.496647,-9.967241,-0.656001,-9.773852,2.852945,5.834807,-3.156216,1.903945,-3.781382,0.667044,6.496844,1.958053,-3.782043,-3.309903,-3.019467,6.543605,3.772978,2.805544,2.848144,-9.739836,-0.873507,1.499938,-8.293651,6.549888,-3.561373,5.086951,6.571265,1.826624,3.833458,9.652427,5.834042], dtype = "float32")#candidate|14326|(550,)|const|float32
call_14324 = relay.TupleGetItem(func_13922_call(relay.reshape(const_14325.astype('int8'), [4, 396]), relay.reshape(const_14326.astype('float32'), [550,]), ), 6)
call_14327 = relay.TupleGetItem(func_13926_call(relay.reshape(const_14325.astype('int8'), [4, 396]), relay.reshape(const_14326.astype('float32'), [550,]), ), 6)
func_11694_call = mod.get_global_var('func_11694')
func_11696_call = mutated_mod.get_global_var('func_11696')
call_14328 = func_11694_call()
call_14329 = func_11694_call()
func_5580_call = mod.get_global_var('func_5580')
func_5586_call = mutated_mod.get_global_var('func_5586')
const_14331 = relay.const([[-7.847338,-9.789376],[2.374880,-0.866026],[-9.976058,-7.219311],[-9.733408,-3.089355],[-7.973918,-0.665140],[-9.693668,9.265487],[-0.369769,-0.334817],[6.593101,-0.143127],[8.181348,8.001419],[2.726480,-8.882922],[8.671533,3.544037],[-6.072446,-9.962003],[0.153415,-3.791453],[-4.490802,0.830800],[-0.612376,9.387958],[5.729666,4.156918],[7.262503,3.587573],[1.594704,-4.102604],[3.954201,-9.322178],[1.673309,-0.274052],[2.753669,-5.097673],[0.527082,-8.400662],[2.111315,8.914214],[-8.867294,-6.188696],[2.773413,-8.049436],[9.574813,1.910782],[-1.000173,-8.334241],[-0.682661,-4.480594],[6.286929,9.521983],[-1.908395,-3.728166],[-7.133202,-2.311806],[6.875363,-4.437409],[2.848409,5.168468],[3.671210,3.912664],[-3.843304,3.994675],[-8.799299,-0.691878]], dtype = "float32")#candidate|14331|(36, 2)|const|float32
var_14332 = relay.var("var_14332", dtype = "float64", shape = (2, 64))#candidate|14332|(2, 64)|var|float64
const_14333 = relay.const([-8,1,3,10,9,6,-4,7,6,-9,4,3,8,4,-2,-6,-3,-8,4,4,5,-1,4,6,-5,-6,4,4,-7,-8,5,-1,-4,-7,-9,2,-2,-5,-4,-8,-8,9,-6,-4,1,-5,-7,-7,5,9,-4,2,-7,-2,-9,-9,7,-1,-9,9,8,-8,-10,5,-8,3,-9,-8,1,-5,-2,-9,10,-5,4,1,-8,8,4,5,-10,-2,1,-5,-1,3,5,-4,2,6,-3,-10,5,-1,1,-9,-4,2,-2,-10,-7,8,-6,7,-10,-6,9,4,-1,-3,10,-7,-6,4,6,-2,-8,7,1,-4,6,-3,-3,10,-3,8,4,10,6,7,7,-7,10,-8,7,-3,1,9,-5,10,2,1,-5,6,-2,-5,2,3,7,4,-5,-8,-3,2,8,3,-2,-5,-5,2,4,8,1,-10,7,2,-1,10,-1,-9,6,6,8,9,-10,5,-8,2,8,-8,7,7,-2,9,9,10,-2,5,8,7,5,-6,7,-10,1,8,-10,4,-1,-5,3,-8,-4,6,9,3,-7,4,-4,-9,-4,3,-3,6,-1,6,8,10,-7,3,-2,-9,-5,3,1,6,-2,-1,-7,-10,-8,4,-10,-8,-3,-4,-9,-1,8,-4,9,-4,9,5,2,8,-2,8,7,1,-8,4,-8,2,1,4,-5,1,6,4,1,-10,4,-5,5,-2,10,10,3,3,7,-5,8,10,2,-3,-6,4,-2,-1,-4,8,1,2,-10,-9,4,9,10,5,-3,-2,1,9,6,10,4,-2,6,8,-8,-10,1,-6,1,10,10,-3,10,6,-1,-4,4,10,9,-5,5,1,7,4,9,-1,9,-1,5,5,-6,1,-6,-10,-6,-5,-10,-6,2,-4,5,-1,9,-3,3,-8,-10,7,-9,4,1,6,-4,8,-4,10,-8,-6,-4,1,9,-4,-10,7,-7,-5,-10,10,5,3,-10,9,-3,7,3,3,-9,5,8,-9,4,-5,-4,10,5,-9,6,5,2,-5,7,-9,4,6,-7,-1,8,3,3,3,7,-2,-7,-10,-8,6,-4,-4,10,-4,-6,5,-3,7,-4,-5,-10,3,4,8,10,-9,-8,5,-2,4,4,-3,-10,4,-1,-6,-5,-10,-4,-3,4,-1,5,-2,-6,7,8,8,10,-3,-10,4,9,8,-4,-10,-5,3,-10,8,-3,-8,7,-8,-8,8,1,-5,7,4,4,-2,-8,10,-9,-5,-5,3,7,-9,-4,4,8,-4,3,-6,5,-8,2,2,-8,6,-8,-5,10,-1,-10,8,4,-5,-3,6,9,-10,3,4,8,7,9,-10,-8,1,-8,8,-4,-9,-3,4,10,-5,-7,6,-9,1,7,-4,6,2,8,-4,-2,7,9,-9,7,-1,5,2,-10,-1,-6,-9,4,-4,1,3,2,-9,5,-9,-2,-9,-8,10,-3,5,5,2,5,-2,-8,8,-6,3,4,4,-2,2,3,8,-2,7,-8,9,-7,-10,5,-4,-4,2,7,-4,10,-1], dtype = "int64")#candidate|14333|(576,)|const|int64
call_14330 = relay.TupleGetItem(func_5580_call(relay.reshape(const_14331.astype('float32'), [4, 6, 3]), relay.reshape(const_14331.astype('float32'), [4, 6, 3]), relay.reshape(const_14331.astype('float32'), [4, 6, 3]), relay.reshape(var_14332.astype('float64'), [128,]), relay.reshape(const_14333.astype('int64'), [576,]), ), 5)
call_14334 = relay.TupleGetItem(func_5586_call(relay.reshape(const_14331.astype('float32'), [4, 6, 3]), relay.reshape(const_14331.astype('float32'), [4, 6, 3]), relay.reshape(const_14331.astype('float32'), [4, 6, 3]), relay.reshape(var_14332.astype('float64'), [128,]), relay.reshape(const_14333.astype('int64'), [576,]), ), 5)
output = relay.Tuple([call_14279,call_14305,const_14306,const_14307,var_14308,call_14315,call_14324,const_14325,const_14326,call_14328,call_14330,const_14331,var_14332,const_14333,])
output2 = relay.Tuple([call_14280,call_14309,const_14306,const_14307,var_14308,call_14316,call_14327,const_14325,const_14326,call_14329,call_14334,const_14331,var_14332,const_14333,])
func_14335 = relay.Function([var_14308,var_14332,], output)
mod['func_14335'] = func_14335
mod = relay.transform.InferType()(mod)
var_14336 = relay.var("var_14336", dtype = "float64", shape = (48,))#candidate|14336|(48,)|var|float64
var_14337 = relay.var("var_14337", dtype = "float64", shape = (2, 64))#candidate|14337|(2, 64)|var|float64
output = func_14335(var_14336,var_14337,)
func_14338 = relay.Function([var_14336,var_14337,], output)
mutated_mod['func_14338'] = func_14338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11336_call = mod.get_global_var('func_11336')
func_11338_call = mutated_mod.get_global_var('func_11338')
call_14432 = func_11336_call()
call_14433 = func_11336_call()
func_13545_call = mod.get_global_var('func_13545')
func_13546_call = mutated_mod.get_global_var('func_13546')
call_14460 = relay.TupleGetItem(func_13545_call(), 0)
call_14461 = relay.TupleGetItem(func_13546_call(), 0)
func_9821_call = mod.get_global_var('func_9821')
func_9823_call = mutated_mod.get_global_var('func_9823')
call_14462 = relay.TupleGetItem(func_9821_call(), 0)
call_14463 = relay.TupleGetItem(func_9823_call(), 0)
func_13034_call = mod.get_global_var('func_13034')
func_13037_call = mutated_mod.get_global_var('func_13037')
var_14467 = relay.var("var_14467", dtype = "float32", shape = (240,))#candidate|14467|(240,)|var|float32
call_14466 = relay.TupleGetItem(func_13034_call(relay.reshape(var_14467.astype('float32'), [2, 10, 12])), 1)
call_14468 = relay.TupleGetItem(func_13037_call(relay.reshape(var_14467.astype('float32'), [2, 10, 12])), 1)
output = relay.Tuple([call_14432,call_14460,call_14462,call_14466,var_14467,])
output2 = relay.Tuple([call_14433,call_14461,call_14463,call_14468,var_14467,])
func_14475 = relay.Function([var_14467,], output)
mod['func_14475'] = func_14475
mod = relay.transform.InferType()(mod)
mutated_mod['func_14475'] = func_14475
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14476 = relay.var("var_14476", dtype = "float32", shape = (240,))#candidate|14476|(240,)|var|float32
func_14475_call = mutated_mod.get_global_var('func_14475')
call_14477 = func_14475_call(var_14476)
output = call_14477
func_14478 = relay.Function([var_14476], output)
mutated_mod['func_14478'] = func_14478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11694_call = mod.get_global_var('func_11694')
func_11696_call = mutated_mod.get_global_var('func_11696')
call_14608 = func_11694_call()
call_14609 = func_11694_call()
output = relay.Tuple([call_14608,])
output2 = relay.Tuple([call_14609,])
func_14619 = relay.Function([], output)
mod['func_14619'] = func_14619
mod = relay.transform.InferType()(mod)
mutated_mod['func_14619'] = func_14619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14619_call = mutated_mod.get_global_var('func_14619')
call_14620 = func_14619_call()
output = call_14620
func_14621 = relay.Function([], output)
mutated_mod['func_14621'] = func_14621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10373_call = mod.get_global_var('func_10373')
func_10374_call = mutated_mod.get_global_var('func_10374')
call_14658 = relay.TupleGetItem(func_10373_call(), 0)
call_14659 = relay.TupleGetItem(func_10374_call(), 0)
output = call_14658
output2 = call_14659
func_14661 = relay.Function([], output)
mod['func_14661'] = func_14661
mod = relay.transform.InferType()(mod)
mutated_mod['func_14661'] = func_14661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14661_call = mutated_mod.get_global_var('func_14661')
call_14662 = func_14661_call()
output = call_14662
func_14663 = relay.Function([], output)
mutated_mod['func_14663'] = func_14663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14155_call = mod.get_global_var('func_14155')
func_14157_call = mutated_mod.get_global_var('func_14157')
call_14680 = relay.TupleGetItem(func_14155_call(), 0)
call_14681 = relay.TupleGetItem(func_14157_call(), 0)
output = relay.Tuple([call_14680,])
output2 = relay.Tuple([call_14681,])
func_14716 = relay.Function([], output)
mod['func_14716'] = func_14716
mod = relay.transform.InferType()(mod)
output = func_14716()
func_14717 = relay.Function([], output)
mutated_mod['func_14717'] = func_14717
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14757 = relay.var("var_14757", dtype = "float32", shape = (14, 5, 11))#candidate|14757|(14, 5, 11)|var|float32
uop_14758 = relay.acosh(var_14757.astype('float32')) # shape=(14, 5, 11)
bop_14769 = relay.bitwise_or(var_14757.astype('int8'), relay.reshape(uop_14758.astype('int8'), relay.shape_of(var_14757))) # shape=(14, 5, 11)
func_2312_call = mod.get_global_var('func_2312')
func_2315_call = mutated_mod.get_global_var('func_2315')
const_14794 = relay.const([8,-1,9,1,8,2,6,-3,5,2,3,4,4,6,-7,-8,-8,5,6,-5,-9,-2,-2,-8,5,6,-1,-7,8,-9,-8,-9,7,-4,-1,9,7,4,6,-6,-3,-1,1,-9,3,3,8,-10,7,10,-4,-7,-10,-2,-3,9,1,2,10,-2,-1,8,8,-4,1,-2,-3,-10,1,1,-2,-2,2,4,5,-7,-10,6,3,2,4,-3,-4,1,-4,-1,-3,-9,5,9,9,6,2,-9,2,1,7,4,-6,9,7,8,1,7,1,9,1,-1,-7,-8,-4,-8,2,4,-7,9,3,6,-5,1,6,-5,-5,-9,-7,-5,5,-1,5,6,10,-8,5,6,-6,3,7,10,-4,-6,6,-1,-3,10,10,2,3,3,-3,-5,6,-2,6,4,-10,1,2,-9,-4,4,4,6,-5,3,-7,-8,8,7,5,6,-4,3,8,-10,8,-8,10,-8,-2,5,-1,4,7,3,-3,-7,-5,10,10,-6,5,-1,-6,2,-9,-9,1,10,-3,10,-2,-10,7,8,1,6,-6,3,-5,1,-3,6,4,-4,9,-2,2,7,1,5,-9,-9,7,8,8,-7,2,7,-9,4,6,10,7,5,3,3,2,-9,-4,10,8,5,1,9,-4,8,8,-5,-7,4,-2,-2,-9,-3,9,8,-1,9,-4,1,-3,7,-9,8,-7,-6,1,3,-8,-4,-2,-4,5,4,-6,-9,-6,-10,-1,10,1,6,5,-2,8,10,8,2,1,-3,2,6,8,-2,-4,-6,-10,7,-4,8,4,-1,-6,-4,-10,4,10,-10,3,7,6,-2,-6,4,7,1,2,4,4,4,6,5,-5,-4,7,-8,5,-3,-9,2,-9,-7,-4,10,8,3,2,-10,5,7,-7,6,7,6,6,-3,-10,7,-3,5,1,-7,-8,-9,-3,4,3,2,9,9,-6,10,5,2,-6,-9,-7,-9,-3,7,-7,4,10,4,-3,-5,-3,7,-6,-6,-7,9,-9,-8,-9,8,5,7,-9,-5,4,-3,8,-7,-10,7,7,-1,4,-9,-4,10,1,5,10,4,1,-1,7,3,10,-5,6,3,5,7,-1,9,6,-1,3,10,-5,2,10,9,7,-7,10,-7,4,-4,-10,-8,-4,-3,-6,-10,-4,3,2,-4,-6,4,-2,10,-4,2,5,10,-9,-6,-6,4,-1,-5,-8,1,-1,9,9,-1,2,-9,-1,6,-2,5,-9,9,5,-2,-3,7,2,-1,-3,-6,-4,-2,3,-7,10,-2,-10,-8,5,7,7,-5,-8,-1,-7,-6,9,-9,3,7,7,-2,-10,-9,-4,-2,10,9,-4,-9,-7,-3,2,-9,8,-10,-5,2,-5,-10,-9,10,-10,7,1,-4,-10,5,10,9,-9,-3,-1,10,5,-5,-2,4,-5,-5,-7,-5,7,9,3,5,4,6,2,1,4,2,2,8,-6,-4,-4,-10,-10,-10,4,4,-3,5,-4,3,-4,-4,2,4,6,1,-10,3,-9,-10,8,2,2,-9,4,6,8,4,3,9,9,-1,10,-6,9,-1,2,2,-1,-2,-2,2,-10,9,-6,5,8,-4,-2,-5,-10,1,10,-6,2,-5,-6,-4,7,2,-4,1,-2,8,7,6,2,9,-1,-2,-3,-9,7,-7,-9,-8,-7,4,-3,-5,8,10,-3,1,-4,-8,1,7,-5,2,5,-8,8,4,-4,4,4,-1,4,10,-6,-6,10,-5,-8,-8,5,-7,-7,6,2,5,-5,3,-8,-9,5,-1,1,-9,-3,3,-4,2,-3,-5,8,3,6,-5,2,9,3,2,6,-2,2,-8,6,-10,-8,-6,-6,-2,-8,7,4,7,5,-9,5,-1,-7,-3,-1,-3,-9,7,-1,-6,-7,9,10,-7,9,8,-7,1,2,-6,7,1,-2,9,-7,-2,-9,-6,-9,6,10,4,-4,1,8,-8,1,-1,10,-6,-7,1,-9,5,-9,8,4,7,6,8,7,9,7,-1,-9,2,-5,-2,-2,-4,9,-2,-7,-2,9,7,6,-6,-7,8,5,-2,6,5,-2,-9,-5,3,-10,-5,7,-6,9,5,-10,1,-6,-4,-8,8,-9,8,-8,4,-8,-8,10,-7,6,4,-7,-1,-10,3,3,-6,10,8,7,-7,-10,9,9,-10,7,2,1,-5,8,8,1,6,10,-1,-6,1,5,8,7,2,-6,-6,-8,7,-10,9,-9,-7,7,-7,10,10,9,1,8,7,-10,10,-5,5,-3,1,9,2,-7,10,-6,-3,8,10,9,-9,-2,10,7,-7,2,-2,-7,1,-3,9,1,4,-8,-9,-4,10,9,-5,7,-7,-1,2,-3,-2,-3,-6,5,-8,-4,3,-5,-4,-3,1,5,1,-6,4,7,6,6,-6,1,5,-1,5,-1,10,-2,-6,-8,-10,3,4,1,1,3,10,3,1,-6,-10,7,-1,-3,-3,7,3,-9,-9,8,-8,7,-5,5,-4,2,8,-8,-6,9,9,-5,3,1,6,1,-8,-4,-9,-9,-10,9,-10,-10,-7,8,-2,-2,8,-6,-1,-8,5,4,-1,-7,5,2,6,-4,8,10,-6,4,4,-8,-6,7,-10,-5,5,-5,-9,-8,8,7,5,-5,-10,4,-10,-2,-3,-8,-10,-6,-5,7,-8,1,6,-2,-5,-1,8,10,2,-6,1,-7,-7,7,-2,9,9,5,-10,-10,6,2,9,-5,4,-5,5,5,5,-7,-6,8,-6,3,-2,1,-4,-5,4,5,1,-2,-2,-10,7,-3,-4,10,-5,-6,-8,6,-1,-7,9,5,-4,6,-4,-4,-2,5,9,5,-10,9,-1,2,-6,-9,2,6,-10,3,-9,-6,5,8,-1,-6,-8,-1,-1,-1,3,-3,3,-3,4,-1,-5,5,-10,-2,7,-2,-6,-4,-5,4,-4,-2,-8,3,1,2,-1,-5,-1,-2,8,5,-6,-9,-5,-8,3,7,-5,1,2,-3,2,4,7,-4,-1,-9,10,-9,-2,-4,-6,-6,9,10,-1,-4,3,8,3,6,-1,-10,-2,5,-5,1,-8,-6,-2,-8,-1,8,10,5,8,-7,6,-9,6,4,-1,-7,-4,7,9,-1,-10,2,2,3,-1,-8,-8,5,3,7,8,4,-7,8,-6,4,-7,-6,-6,-1,-9,-3,-8,-3,10,4,4,-8,8,-6,-4,-2,9,-1,7,1,1,-5,2,1,-9,-10,4,5,5,-10,-2,-1,8,-5,4,-3,9,5,7,5,-10,3,6,-7,9,-1,8,1,6,5,5,-6,-7,8,-6,3,10,9,2,-9,3,-4,-4,9,5,3,-1,4,1,-3,5,-2,-10,2,-8,4,1,-2,-5,8,-6,-9,9,4,-5,6,3,-6,-8,6,9,9,10,-6,4,-4,-4,-5,6,4,6,-1,7,-1,-6,-3,7,-7,-3,1,-7,-8,-9,6,4,-7,10,-1,-5,-2,-9,8,-6,2,-7,7,-1,-9,-9,6,-4,6,-2,1,-9,-2,7,-4,-6,2,-1,-1,3,-3,-4,-6,5,-4,-8,6,-7,6,10,-7,-8,2,-8,-4,-3,-3,-7,5,10,-8,-6,6,5,-7,1,1,-5,-1,-8,-5,-1,5,-9,7,-2,10,9,1,-7,9,6,-9,5,-5,-4,-3,7,10,-10,5,-2,-2,-10,-5,3,7,5,2,8,2,-6,-5,-5,-10,2,1,-2,-4,-7,-1,4,2,6,7,9,-3,6,-9,5,-8,-5,-10,1,9,-7,-8,10,8,4,-9,-7,-10,-2,-6,6,-3,-2,-10,-1,10,-1,6,-8,9,-2,-7,-5,-3,-3,6,-2,4,4,-8,-3,2,9,-7,-4,9,9,4,2,-10,6,-6,-5,-4,-2,-5,-3,1,6,-8,-6,-4,-4,6,-6,1,-2,-10,-7,7,7,6,-10,-1,-5,-7,-10,6,9,-10,-10,-7,-7,-9,-1,6,8,-9,9,3,1,-6,10,4,6,6,-4,6,8,-8,2,7,5,8,-8,-7,2,-1,-7,-6,9,-9,-5,-4,2,1,5,-6,6,2,9,-6,-7,5,-1,7,3,3,-10,-10,-1,8,1,-4,-10,-2,10,-9,-4,-8,-7,5,10,-7,-6,-3,-10,-1,-5,-7,-3,-1,8,9,4,8,-4,-1,-10,-7,7,-1,10,-5,7,9,4,5,10,5,5,7,-6,-6,-9,3,2,3,6,-7,4,6,-6,2,-7,1,-2,-3,-1,5,1,-7,1,-7,10,9,1,-3,-6,-4,4,7,6,-4,-1,8,-6,7,7,-4,9,2,-1,-7,-10,4,-8,9,2,-2,2,-5,5,8,7,10,9,7,6,1,-7,-7,-7,-9,-10,10,-9,2,6,-7,-6,-10,-8,9,1,10,-4,-10,-5,-7,-10,-9,-3,-4,-3,-3,-9,-7,10,-10,5,-8,7,9,-7,-9,5,-7,-8,-7,-3,1,-5,-8,4,5,-8,-8,1,8,-4,-6,-4,-9,-3,3,-9,7,-5,-9,4,8,-7,8,-4,7,-5,10,5,2,-8,-3,1,10,-4,7,-3,2,3,-7,10,6,-6,-7,-6,8,-5,-10,10,4,-9], dtype = "uint64")#candidate|14794|(1728,)|const|uint64
call_14793 = relay.TupleGetItem(func_2312_call(relay.reshape(const_14794.astype('uint64'), [9, 16, 12])), 1)
call_14795 = relay.TupleGetItem(func_2315_call(relay.reshape(const_14794.astype('uint64'), [9, 16, 12])), 1)
func_7507_call = mod.get_global_var('func_7507')
func_7510_call = mutated_mod.get_global_var('func_7510')
var_14810 = relay.var("var_14810", dtype = "int64", shape = (700,))#candidate|14810|(700,)|var|int64
call_14809 = relay.TupleGetItem(func_7507_call(relay.reshape(var_14810.astype('int64'), [10, 5, 14]), relay.reshape(var_14810.astype('int64'), [10, 5, 14]), ), 2)
call_14811 = relay.TupleGetItem(func_7510_call(relay.reshape(var_14810.astype('int64'), [10, 5, 14]), relay.reshape(var_14810.astype('int64'), [10, 5, 14]), ), 2)
output = relay.Tuple([bop_14769,call_14793,const_14794,call_14809,var_14810,])
output2 = relay.Tuple([bop_14769,call_14795,const_14794,call_14811,var_14810,])
func_14830 = relay.Function([var_14757,var_14810,], output)
mod['func_14830'] = func_14830
mod = relay.transform.InferType()(mod)
mutated_mod['func_14830'] = func_14830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14830_call = mutated_mod.get_global_var('func_14830')
var_14832 = relay.var("var_14832", dtype = "float32", shape = (14, 5, 11))#candidate|14832|(14, 5, 11)|var|float32
var_14833 = relay.var("var_14833", dtype = "int64", shape = (700,))#candidate|14833|(700,)|var|int64
call_14831 = func_14830_call(var_14832,var_14833,)
output = call_14831
func_14834 = relay.Function([var_14832,var_14833,], output)
mutated_mod['func_14834'] = func_14834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13856_call = mod.get_global_var('func_13856')
func_13857_call = mutated_mod.get_global_var('func_13857')
call_14868 = func_13856_call()
call_14869 = func_13856_call()
output = call_14868
output2 = call_14869
func_14871 = relay.Function([], output)
mod['func_14871'] = func_14871
mod = relay.transform.InferType()(mod)
mutated_mod['func_14871'] = func_14871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14871_call = mutated_mod.get_global_var('func_14871')
call_14872 = func_14871_call()
output = call_14872
func_14873 = relay.Function([], output)
mutated_mod['func_14873'] = func_14873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12455_call = mod.get_global_var('func_12455')
func_12456_call = mutated_mod.get_global_var('func_12456')
call_14930 = func_12455_call()
call_14931 = func_12455_call()
output = call_14930
output2 = call_14931
func_14932 = relay.Function([], output)
mod['func_14932'] = func_14932
mod = relay.transform.InferType()(mod)
mutated_mod['func_14932'] = func_14932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14932_call = mutated_mod.get_global_var('func_14932')
call_14933 = func_14932_call()
output = call_14933
func_14934 = relay.Function([], output)
mutated_mod['func_14934'] = func_14934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13787_call = mod.get_global_var('func_13787')
func_13789_call = mutated_mod.get_global_var('func_13789')
call_14937 = relay.TupleGetItem(func_13787_call(), 2)
call_14938 = relay.TupleGetItem(func_13789_call(), 2)
func_13545_call = mod.get_global_var('func_13545')
func_13546_call = mutated_mod.get_global_var('func_13546')
call_14952 = relay.TupleGetItem(func_13545_call(), 0)
call_14953 = relay.TupleGetItem(func_13546_call(), 0)
output = relay.Tuple([call_14937,call_14952,])
output2 = relay.Tuple([call_14938,call_14953,])
func_14976 = relay.Function([], output)
mod['func_14976'] = func_14976
mod = relay.transform.InferType()(mod)
output = func_14976()
func_14977 = relay.Function([], output)
mutated_mod['func_14977'] = func_14977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13545_call = mod.get_global_var('func_13545')
func_13546_call = mutated_mod.get_global_var('func_13546')
call_14983 = relay.TupleGetItem(func_13545_call(), 0)
call_14984 = relay.TupleGetItem(func_13546_call(), 0)
output = relay.Tuple([call_14983,])
output2 = relay.Tuple([call_14984,])
func_14993 = relay.Function([], output)
mod['func_14993'] = func_14993
mod = relay.transform.InferType()(mod)
mutated_mod['func_14993'] = func_14993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14993_call = mutated_mod.get_global_var('func_14993')
call_14994 = func_14993_call()
output = call_14994
func_14995 = relay.Function([], output)
mutated_mod['func_14995'] = func_14995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11336_call = mod.get_global_var('func_11336')
func_11338_call = mutated_mod.get_global_var('func_11338')
call_15021 = func_11336_call()
call_15022 = func_11336_call()
func_4875_call = mod.get_global_var('func_4875')
func_4880_call = mutated_mod.get_global_var('func_4880')
var_15024 = relay.var("var_15024", dtype = "int64", shape = (160,))#candidate|15024|(160,)|var|int64
const_15025 = relay.const([-8.968023,3.449120,8.098474,-5.734322,9.904791,-9.477421,2.647204,6.770645,-3.038264,-0.186383,-9.736752,-3.874017,8.881022,-0.056249,0.012237,8.774650,4.761334,3.933165,-8.754797,-3.670393,3.544926,-6.378274,-7.222708,-7.365927,5.525667,1.434322,-1.613550,-7.180992,-2.652762,-3.012008,-0.611711,-7.167163,-8.333485,-9.511479,4.007475,-4.242473,4.256190,0.462791,-5.502311,-0.468351,-3.431687,-6.314322,7.157618,-9.301432,2.814691,4.658889,3.252750,6.581259,-6.653184,-4.552735,-4.415246,-8.761605,7.430666,-6.686409,-8.590121,-0.231273,-2.137568,1.344980,4.338306,5.115104,2.480478,-9.014680,-9.930311,-0.823527,-9.297243,-9.060115,-7.176474,-9.129363,-4.258656,1.450891,-7.363083,-0.676248,-9.584381,-6.756324,3.182506,3.363605,8.813169,3.776907,8.065037,-7.912443,4.082720,3.702694,2.719447,5.333451,-2.867836,-5.251433,-0.713995,7.163120,4.395437,0.900792,5.686719,7.890453,-0.539725,6.187783,-0.973930,9.326443,-6.056740,2.043195,8.195129,-3.965468,-7.247487,-0.841918,9.114422,4.033567,8.507144,9.929537,5.953236,7.106515,-9.404502,-6.766075,-9.054470,-2.307558,-3.248255,1.391981,-6.157809,2.363416,-6.486859,-8.370388,3.515895,-7.677529,-7.260221,7.746170,-9.543768,2.835729,3.676510,-8.689692,-2.443167,3.837497,-1.578185,-1.249228,-9.671085,7.465836,2.745248,-4.126090,-1.266556,1.427123,-1.489565,-0.758542,-2.073243,1.965922,7.719593,1.969103,-2.637319,-4.027805,8.867281,-1.311806,-5.748642,6.747501,3.088302,-5.657699,-4.974111,-2.758152,4.793245,-3.733889,-8.250471,0.764299,6.085506,3.602407,2.763940,-7.534948,-8.337723,-5.602713,5.264711,-1.092690,1.559318,-2.108376,1.480229,3.814449,6.685302,-8.588811,8.595812,-1.738390,-7.846986,3.459429,0.839752,1.270815,-2.784817,7.312964,5.071632,-0.091481,-4.147578,-8.987004,6.696095,-3.410628,7.110036,-2.805369,0.421302,9.287320,7.014299,1.063839,7.307134,-2.372154,6.847497,3.275157,-9.121559,8.206671,-6.266925,-0.654641,3.056666,-9.698292,1.198147,-0.405158,5.079380,-7.379124,-0.851183,-4.800297,-9.127459,9.141346,-6.487512,-3.886573,-4.576643,0.518421,-0.362922,-2.852838,2.863999,-4.214783,8.325452,9.815104,4.198369,4.547657,1.962902,5.163980,5.587041,4.167517,1.526395,-5.162160,-0.171724,-5.176894,8.473600,-6.318441,9.124030,0.689143,0.478623,-9.515045,-6.213031,-5.192904,8.045343,-4.196415,-4.746452,-5.845673,3.303970,8.032116,-4.309830,-2.646560,-9.012592,-1.635663,-4.376918,0.901357,-5.303128,-5.603862,3.706170,5.630902,-3.980572,4.222724,6.043533,-0.433254,-2.155411,-3.551029,3.301230,-1.121218,-9.420360,4.168719,-8.264257,-2.713444,-2.614676,-6.013717,-3.516361,-6.140936,0.947729,6.852595,2.654265,3.192133,-9.477257,7.171526,1.519183,5.002765,-7.500575,-6.790529,9.666134,-4.352727,8.452886,-7.473126,-3.636517,-2.521696,-7.418186,-8.670206,0.875192,-5.910900,-6.700698,8.462505,7.071283,2.752219,5.003319,8.692918,-7.439525,2.649506,-1.900879,6.672076,-2.189079,-3.314153,-0.053082,4.492992,-3.351501,8.057907,2.097400,-3.673524,1.129403,-4.115763,4.352111,-2.417494,4.297135,6.285369,0.799485,-1.591267,-6.195497,-4.376595,-8.969217,-2.016226,7.666415,3.279135,-0.927564,-4.209659,1.329080,7.678699,-1.029369,-9.250871,4.150171,5.068275,5.324166,-0.731991,-8.376314,-5.235261,-3.719069,0.288679,-9.573108,-2.973793,7.528985,-8.912399,-8.006090,1.132522,6.510358,-7.964152,-3.575058,9.682764,-1.925831,1.676423,3.621696,3.325339,3.742896,9.090805,9.087692,-8.314552,-7.822335,0.779048,-9.397131,9.709329,-7.552821,-1.261596,8.912687,-6.848478,-4.659471,-5.262608,6.994185,2.432512,8.792353,-9.483189,0.400157,1.524930,-5.100762,-9.104839,2.801195,-8.502051,1.004510,-0.066671,2.679191,-5.352461,7.728246,1.886710,-9.363494,1.119497,0.460429,-2.019651,-6.941318,7.314751,-1.324910,-0.707951,4.704678,-3.708866,4.708032,-9.529044,2.700162,-8.934592,7.860494,-8.619345,3.089051,3.836515,2.761874,2.732553,4.813656,-2.914222,-3.754977,-6.781905,-7.889079,-2.963641,7.594282,-0.789204,-7.837977,5.299674,-0.666089,0.412033,1.756276,-8.709526,0.932686,7.700549,-5.853992,-5.305159,-0.571131,4.144360,5.357225,-1.179721,-4.250866,-8.504696,-8.700035,-3.441479,2.236660,-2.512960,3.142666,4.853201,-7.387046,9.653187,9.008625,9.689179,-0.105652,-4.170796,-4.627451,8.000058,8.973553,3.301415,2.241912,-5.795211,-9.774527,-8.509228,8.577247,-0.014092,-9.406613,7.603662,3.334634,3.489315,1.152621,-4.527677,-3.363834,-2.362398,2.142945,5.621875,1.604191,1.393254,-9.848141,1.983869,4.778725,2.647325,-7.866595,0.859417,8.684540,9.964580,-2.182119,7.357392,9.839561,-4.530050,8.821181,-4.823009,3.868002,-3.457944,4.580684,-6.117242,2.700624,-3.158881,-3.695137,-6.446966,-8.340253,-8.609849,0.992058,2.679563,2.221549,7.960774,-1.072693,3.437352,2.642588,7.910813,-2.896903,3.621751,-6.838190,9.634422,-8.927595,-4.438596,0.105074,3.625609,-6.791031,-0.928128,1.576836,4.964759,0.360803,9.356142,-1.702042,5.745267,-0.529209,4.919102,-0.637537,1.855105,-5.846458,8.870996,-5.904069,-0.960216,8.029407,-8.421072,-9.917360,-5.564502,7.521311,-6.133850,5.227345,-0.287060,-1.972521,-6.870102,-5.592687,4.146748,4.295873,-0.399817,-5.193254,9.788537,3.726901,-2.612988,1.679869,7.958010,-6.137973,-1.300025,8.597875,-4.685124,-2.305445,-5.417135,-5.651515,4.887164,-8.008833,-3.357755,-1.472714,5.662101,8.138900,9.289550,-1.989506,4.461988,-9.654640,-4.537922,-2.280640,-5.492242,9.967682,5.228567,-4.199915,-2.312682,8.025954,2.631447,-5.300375,3.869850,-9.324986,-4.886691,-2.806228,-4.823180,7.645579,-7.603238,1.171496,0.428769,-1.222207,-9.162713,2.253689,6.976241,4.719666,4.270184,0.466722,-8.547200,6.158303,0.333404,-8.564233,0.818288,-9.492932,-8.001119,-8.332895,2.764284,-5.710127,4.578960,-0.863780,-7.796222,-6.843247,5.776178,7.278508,6.591852,-5.891150,-1.951063,-7.366883,-5.055558,3.846713,-3.875801,-0.832594,-8.874719,-1.007707,9.065604,4.681652,-0.184038,6.373302,7.802534,9.826993,8.575243,3.419289,4.801833,5.360519,0.398620,-6.123518,-1.793994,0.963476,9.118296,8.835225,-4.722477,4.196500,-5.047554,-8.844242,9.778743,-5.795902,0.620887,-2.328691,-9.707873,-8.231994,-1.098885,3.929373,-3.160720,-8.158500,-8.931470,-5.098055,-5.544838,-1.642793,-2.886407,-7.441883,-9.383413,-9.869615,9.088334,-7.225082,5.025550,1.411883,4.041563,-2.148456,9.630113,-2.496655,-0.728223,-7.349146,-6.201045,8.402796,7.653970,-1.906380,4.548824,2.284080,0.622060,-5.337967,-2.277623,-1.849760,-9.447617,6.270449,0.809925,-6.223511,-8.115899,-2.657850,8.493498,3.908271,-2.530552,-7.468679,6.761714,-4.365058,-8.356406,3.829040,-9.566191,-7.924624,-5.010057,-3.320192,0.735237,-8.038653,7.522748,-5.394370,-1.693434,0.842445,4.241037,-7.124936,7.837143,1.825278,6.447861,-2.818627,5.133583,4.048304,7.287113,1.675935,-5.220082,-7.929819,6.267126,-1.638330,0.630280,-5.024994,0.784440,8.693364,0.110095,-9.770623,6.713670,-8.514290,-5.034462,-7.028325,9.627462,-8.156113,9.860616,5.156810,-6.530206,8.288146,3.033112,-5.994157,-1.892702,9.897840,6.154958,8.641041,-0.684418,7.566469,3.722931,-5.554254,9.282625,-2.638249,-5.515571,3.927987,1.913317,-9.364818,-5.439040,8.825802,-4.452864,-3.488847,2.881728,-4.340841,0.278062,-1.403950,5.371233,9.968024,4.024929,-7.242478,6.312962,-8.238267,-3.283572,9.172490,-9.842436,8.638901,0.374482,-3.529755,8.769072,6.917795,-0.935554,2.623690,-0.071808,-9.054656,-5.611326,7.086668,6.247652,-9.099320,-2.743783,-5.988863,2.506892,0.695545,-3.564289,0.668402,-5.505513,-1.782951,-2.670906,2.193692,2.638129,-0.827582,-1.181057,8.865238,-6.703134,1.143208,-6.551379,9.928278,6.933019,-4.242804,-9.265463,-7.334772,-8.201279,4.399710,-1.132284], dtype = "float64")#candidate|15025|(784,)|const|float64
var_15026 = relay.var("var_15026", dtype = "int16", shape = (384,))#candidate|15026|(384,)|var|int16
call_15023 = relay.TupleGetItem(func_4875_call(relay.reshape(var_15024.astype('int64'), [4, 8, 5]), relay.reshape(const_15025.astype('float64'), [784,]), relay.reshape(var_15026.astype('int16'), [1, 384]), ), 4)
call_15027 = relay.TupleGetItem(func_4880_call(relay.reshape(var_15024.astype('int64'), [4, 8, 5]), relay.reshape(const_15025.astype('float64'), [784,]), relay.reshape(var_15026.astype('int16'), [1, 384]), ), 4)
output = relay.Tuple([call_15021,call_15023,var_15024,const_15025,var_15026,])
output2 = relay.Tuple([call_15022,call_15027,var_15024,const_15025,var_15026,])
func_15043 = relay.Function([var_15024,var_15026,], output)
mod['func_15043'] = func_15043
mod = relay.transform.InferType()(mod)
var_15044 = relay.var("var_15044", dtype = "int64", shape = (160,))#candidate|15044|(160,)|var|int64
var_15045 = relay.var("var_15045", dtype = "int16", shape = (384,))#candidate|15045|(384,)|var|int16
output = func_15043(var_15044,var_15045,)
func_15046 = relay.Function([var_15044,var_15045,], output)
mutated_mod['func_15046'] = func_15046
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15054 = relay.var("var_15054", dtype = "float64", shape = (10, 10, 4))#candidate|15054|(10, 10, 4)|var|float64
uop_15055 = relay.sqrt(var_15054.astype('float64')) # shape=(10, 10, 4)
uop_15058 = relay.sinh(uop_15055.astype('float32')) # shape=(10, 10, 4)
output = relay.Tuple([uop_15058,])
output2 = relay.Tuple([uop_15058,])
F = relay.Function([var_15054,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_15054,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

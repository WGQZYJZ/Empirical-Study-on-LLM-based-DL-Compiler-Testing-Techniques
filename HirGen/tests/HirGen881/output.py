import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_123 = relay.var("var_123", dtype = "int64", shape = (11, 5, 7))#candidate|123|(11, 5, 7)|var|int64
var_124 = relay.var("var_124", dtype = "int64", shape = (11, 5, 7))#candidate|124|(11, 5, 7)|var|int64
bop_125 = relay.bitwise_or(var_123.astype('int64'), relay.reshape(var_124.astype('int64'), relay.shape_of(var_123))) # shape=(11, 5, 7)
output = bop_125
output2 = bop_125
func_134 = relay.Function([var_123,var_124,], output)
mod['func_134'] = func_134
mod = relay.transform.InferType()(mod)
mutated_mod['func_134'] = func_134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_134_call = mutated_mod.get_global_var('func_134')
var_136 = relay.var("var_136", dtype = "int64", shape = (11, 5, 7))#candidate|136|(11, 5, 7)|var|int64
var_137 = relay.var("var_137", dtype = "int64", shape = (11, 5, 7))#candidate|137|(11, 5, 7)|var|int64
call_135 = func_134_call(var_136,var_137,)
output = call_135
func_138 = relay.Function([var_136,var_137,], output)
mutated_mod['func_138'] = func_138
mutated_mod = relay.transform.InferType()(mutated_mod)
var_160 = relay.var("var_160", dtype = "float64", shape = (14, 1, 1))#candidate|160|(14, 1, 1)|var|float64
uop_161 = relay.rsqrt(var_160.astype('float64')) # shape=(14, 1, 1)
output = uop_161
output2 = uop_161
func_166 = relay.Function([var_160,], output)
mod['func_166'] = func_166
mod = relay.transform.InferType()(mod)
var_167 = relay.var("var_167", dtype = "float64", shape = (14, 1, 1))#candidate|167|(14, 1, 1)|var|float64
output = func_166(var_167)
func_168 = relay.Function([var_167], output)
mutated_mod['func_168'] = func_168
mutated_mod = relay.transform.InferType()(mutated_mod)
var_427 = relay.var("var_427", dtype = "uint32", shape = (16, 1, 9))#candidate|427|(16, 1, 9)|var|uint32
var_428 = relay.var("var_428", dtype = "uint32", shape = (16, 14, 9))#candidate|428|(16, 14, 9)|var|uint32
bop_429 = relay.minimum(var_427.astype('uint32'), var_428.astype('uint32')) # shape=(16, 14, 9)
output = relay.Tuple([bop_429,])
output2 = relay.Tuple([bop_429,])
func_436 = relay.Function([var_427,var_428,], output)
mod['func_436'] = func_436
mod = relay.transform.InferType()(mod)
mutated_mod['func_436'] = func_436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_436_call = mutated_mod.get_global_var('func_436')
var_438 = relay.var("var_438", dtype = "uint32", shape = (16, 1, 9))#candidate|438|(16, 1, 9)|var|uint32
var_439 = relay.var("var_439", dtype = "uint32", shape = (16, 14, 9))#candidate|439|(16, 14, 9)|var|uint32
call_437 = func_436_call(var_438,var_439,)
output = call_437
func_440 = relay.Function([var_438,var_439,], output)
mutated_mod['func_440'] = func_440
mutated_mod = relay.transform.InferType()(mutated_mod)
const_508 = relay.const(-6.278936, dtype = "float32")#candidate|508|()|const|float32
var_509 = relay.var("var_509", dtype = "float32", shape = (14, 1, 1))#candidate|509|(14, 1, 1)|var|float32
bop_510 = relay.maximum(const_508.astype('float32'), var_509.astype('float32')) # shape=(14, 1, 1)
func_134_call = mod.get_global_var('func_134')
func_138_call = mutated_mod.get_global_var('func_138')
const_514 = relay.const([7,-7,-8,-8,-6,-3,4,10,-1,-2,7,9,-9,-7,1,-10,-9,-7,-1,2,-1,-4,-10,5,-3,6,-4,9,2,-2,3,1,10,-1,-5,8,-9,-3,7,2,4,9,5,-3,-3,1,-10,9,10,-9,-4,-3,1,2,3,-7,6,-6,5,9,6,-5,-2,-6,-8,-9,4,-5,-9,5,3,-8,-10,-1,4,3,9,8,-6,-6,-9,-7,9,10,-1,10,6,2,-2,1,2,-8,5,2,10,8,-3,4,8,-9,-8,-2,9,-2,-6,7,-8,9,-2,-7,-7,2,9,-1,10,4,1,2,-10,8,-7,4,-3,9,3,8,10,-9,7,-5,-10,-7,-7,-8,3,-2,3,6,-10,1,-10,3,-2,8,-2,8,-4,-10,4,-7,-6,-5,-7,-6,7,-4,8,-8,10,2,1,-4,5,-5,4,3,-10,-10,1,-8,5,5,9,-6,1,3,-7,6,-2,8,2,-5,-2,-1,-3,1,-1,3,-2,-9,6,5,-8,3,4,6,-5,-8,8,-9,-8,-10,7,-9,4,-9,1,-4,-7,-10,10,-4,-9,-1,-4,9,-9,3,6,-4,-1,1,-7,2,1,4,8,-6,2,5,6,-10,-6,-2,4,-5,8,-8,10,-10,1,-4,-2,7,8,2,7,10,6,8,-9,-6,8,4,3,10,-10,3,7,-7,-4,-10,2,8,3,9,-8,8,10,-3,6,5,10,-7,1,-1,-5,-8,10,-7,2,4,3,-8,-4,6,-6,5,10,-4,-7,6,7,-1,1,-1,-5,5,-9,-3,-3,2,-9,-7,10,-1,-8,1,2,6,1,8,-4,-6,-7,-3,-7,2,-1,-6,-2,-8,-4,8,10,-1,1,6,4,8,2,-2,6,8,2,-10,3,-5,-8,4,8,10,-7,-7,-10,-10,4,-3,5,10,7,10,-8,6,-1,-4,8,-8,-10,-5,10,3,9,-6,9,-10,6,6,-8,-9,-5,-5,7,-9,10,7,1,-4,8,-5,-6,5,6,5,4], dtype = "int64")#candidate|514|(385,)|const|int64
call_513 = func_134_call(relay.reshape(const_514.astype('int64'), [11, 5, 7]), relay.reshape(const_514.astype('int64'), [11, 5, 7]), )
call_515 = func_134_call(relay.reshape(const_514.astype('int64'), [11, 5, 7]), relay.reshape(const_514.astype('int64'), [11, 5, 7]), )
func_166_call = mod.get_global_var('func_166')
func_168_call = mutated_mod.get_global_var('func_168')
call_518 = func_166_call(relay.reshape(var_509.astype('float64'), [14, 1, 1]))
call_519 = func_166_call(relay.reshape(var_509.astype('float64'), [14, 1, 1]))
func_436_call = mod.get_global_var('func_436')
func_440_call = mutated_mod.get_global_var('func_440')
const_526 = relay.const([-9,6,-5,6,5,7,1,5,-3,-7,-4,-2,-10,-5,-4,7,-5,5,-1,5,8,-3,7,1,10,2,-4,3,9,4,-2,-9,5,6,-4,1,2,-3,5,-9,-1,-9,5,-9,-1,8,-6,-10,-8,9,7,3,8,-10,-1,6,-10,-7,6,-9,-10,2,-3,-1,1,2,9,-9,3,-10,8,6,-10,5,10,-2,-3,10,-9,7,-8,7,-4,6,4,4,1,-10,-5,-6,-10,-7,5,7,6,-3,4,-4,4,8,8,-2,1,10,8,1,8,-1,5,8,-3,-8,1,-5,-3,-5,-4,2,10,1,9,7,10,-2,-5,8,1,5,9,-9,1,-5,-2,10,10,1,3,-9,-6,-8,3,-9,4,-8], dtype = "uint32")#candidate|526|(144,)|const|uint32
const_527 = relay.const([5,-2,9,-9,9,10,9,10,6,10,6,-4,10,8,8,9,-3,8,-7,3,-6,-6,8,-4,-1,-2,10,2,1,1,1,-5,-1,8,-9,3,-6,10,-4,-10,-3,-4,6,4,-5,-9,5,1,-6,-5,10,10,-7,-9,9,8,2,4,7,9,2,-10,-1,-6,-10,4,9,7,6,-8,7,-4,9,1,5,10,6,-8,-3,-8,3,4,-5,7,8,6,-3,-6,-10,8,7,-7,-10,-1,-9,-5,-10,4,1,-9,-9,6,-9,2,-1,7,10,10,8,10,-2,-10,5,10,-7,7,-3,-8,9,-2,-2,-8,-2,2,-2,7,-9,-8,1,2,-4,4,4,-2,3,5,6,8,2,7,-4,1,1,8,5,10,1,-1,-7,9,-10,5,-8,3,5,-7,6,2,5,-9,-2,-4,-4,-7,9,-9,10,2,-9,9,6,-2,-4,-10,-4,1,-2,8,-9,7,1,-6,1,1,4,-3,8,3,-10,10,5,-2,8,3,5,7,7,10,-3,8,-3,-10,-8,2,7,4,5,9,7,1,1,9,1,-7,-2,-4,8,5,-8,-4,9,6,-3,5,6,-2,-4,-4,2,-1,-6,9,-10,10,1,2,-1,4,-3,5,-7,-8,-10,7,-6,8,5,6,2,-3,1,3,-4,-7,7,8,-1,-6,1,-4,-4,-8,10,4,1,4,-1,-7,5,-3,8,-8,-10,-9,-10,7,-5,-4,-9,6,-6,-4,-9,-3,5,-9,-9,-1,3,-9,10,6,-1,10,-9,-1,-9,1,6,-2,-1,-5,8,-7,-5,-4,4,-2,-2,-2,1,5,8,7,1,-8,-8,3,10,-7,-8,-10,10,-5,6,-3,-3,-6,6,9,-3,-10,-2,9,2,-7,-8,3,8,-10,9,3,4,5,5,7,-10,10,-9,4,-8,4,-7,-4,8,1,-9,-7,6,-1,5,10,7,7,-3,-1,-1,5,-3,3,2,9,10,4,-10,-8,5,10,8,-9,-8,1,5,-5,4,-2,-4,8,8,2,7,1,-6,3,8,-6,-2,4,-3,-8,9,-3,-10,8,3,6,-8,3,7,1,-9,10,3,1,-4,-5,8,7,1,7,-5,-7,9,-8,-7,2,5,-9,7,-6,-6,6,-3,3,-8,1,3,-6,-7,1,-3,-1,-4,-7,-8,-5,-8,-10,4,4,-6,-5,2,-3,6,-4,-4,9,5,2,1,-10,6,1,-5,-4,-1,-10,-10,1,-7,-9,1,-1,-4,-10,10,-5,1,-8,2,-5,-1,-3,10,-1,10,-7,5,-7,-1,-5,10,9,5,-6,-9,9,8,3,7,-4,-3,10,-9,9,8,2,4,-9,-9,8,-10,8,-1,7,-4,-7,-1,6,-7,-9,1,-5,3,7,-1,-9,-4,-8,-9,-2,-3,1,7,-4,-6,-1,6,-3,-10,-2,5,-9,-10,3,1,2,6,9,-3,-10,-8,6,-7,-5,-9,-7,10,-5,-2,-2,8,8,-9,9,-10,3,-2,-1,9,-5,5,-5,7,-5,-10,3,-3,2,-5,-6,-2,2,9,2,-9,6,-10,-9,9,-7,1,7,-10,-5,-1,-10,1,8,5,-6,10,8,-3,8,-1,2,-4,7,9,-9,-5,7,10,6,7,10,5,7,5,9,10,-7,2,10,-5,4,-7,6,8,3,-5,3,10,-6,-7,10,-8,-6,10,2,3,7,-8,-7,4,-2,-4,-9,-6,1,1,3,-6,-8,2,-2,-5,-7,2,7,-6,7,3,6,10,-5,9,-10,6,3,-7,7,6,5,9,-5,3,5,-7,-7,10,-10,9,-6,-8,-5,4,1,5,7,9,7,4,-10,-6,-10,1,5,-9,-5,10,6,-1,5,2,-7,5,-5,-9,2,5,2,-1,4,-2,9,-8,-7,1,-4,-5,5,7,9,-6,1,-4,-7,-4,6,-9,-7,3,7,-5,6,2,-7,3,4,10,3,10,8,-1,9,3,-9,7,10,-7,-1,-10,-7,-8,-4,-6,-10,-7,10,7,7,5,-6,-2,-6,5,-7,8,9,6,-2,-10,-1,-5,4,2,3,5,-10,8,-5,3,-7,7,7,-9,8,-5,6,-9,3,-10,-7,-6,4,-4,6,-3,10,-8,5,-8,-7,-1,-5,1,-10,-2,8,7,-3,-2,-8,-1,7,5,-9,7,10,-8,6,2,-2,6,-4,3,4,6,2,-10,1,5,10,5,-9,4,-2,-3,1,-8,4,4,-9,-10,10,-4,-5,10,-10,-5,7,4,8,-8,1,-5,7,1,-2,1,-10,4,5,-1,8,-5,7,-6,1,3,-10,-6,-8,7,9,5,-4,-3,2,5,9,-8,-3,9,-8,7,1,-7,10,2,-1,-9,3,-3,7,8,1,-2,10,-10,6,-6,-1,-9,-6,-10,-7,1,2,-8,5,-7,-9,3,-2,8,10,-8,-9,-2,7,4,-3,-5,-1,8,-8,10,-3,7,-6,7,2,-7,-2,8,10,-5,-4,-2,3,1,-2,-9,4,2,2,7,5,-5,-10,-8,2,5,-6,-3,6,10,-4,3,-6,1,-6,-4,-2,-8,3,-7,1,-4,-9,-4,10,-3,7,-6,4,-3,-8,1,-7,2,-7,6,3,3,-7,-8,-4,-3,8,-4,-9,-3,5,6,-7,3,-9,1,8,-3,2,-4,-2,-7,-8,-5,9,5,3,7,2,-3,-2,-1,8,-5,-5,7,8,10,-7,5,2,-10,-1,-7,9,-4,-4,-1,-10,3,7,-5,-5,3,9,-6,9,-7,2,-3,-4,4,-3,8,-3,-9,2,7,6,-1,-7,-5,4,-7,6,9,-9,7,8,-5,8,-1,-7,-10,-8,9,10,2,-8,2,10,-5,6,3,7,5,6,-8,6,-8,-10,10,3,-6,10,8,-1,1,4,1,5,-1,-6,4,8,6,10,-10,5,-5,-5,-7,5,6,-1,5,5,-7,-4,10,-2,9,-2,7,6,2,-5,10,6,-1,10,-5,1,-5,2,4,4,7,2,-3,4,-10,6,-10,3,-1,7,-10,-9,-1,4,6,9,-6,-5,-7,-8,-9,6,-7,1,6,6,-6,4,-8,5,6,5,-2,3,-3,-10,-5,4,-7,-2,4,-8,-4,10,-1,-6,-8,1,3,-3,4,9,-10,-3,-7,-10,4,-3,-2,-10,9,-2,-7,1,8,6,-7,-1,-9,4,9,9,5,4,9,10,10,-7,6,8,-1,-6,-1,-5,-3,-8,-6,8,1,7,-5,-9,1,-3,3,-9,-6,-5,3,-7,3,-9,-4,-8,-8,-4,4,-10,-9,-1,2,1,6,5,9,6,-9,1,-1,-8,-8,5,-8,-8,-8,1,1,-10,-7,-8,8,10,-6,-3,-2,9,-5,-3,-7,-10,-1,5,-1,1,-1,-8,-1,-8,-9,-8,-4,-2,-9,-2,5,-3,2,-8,-4,-3,-10,-4,9,-9,-5,-1,4,-9,-6,3,-2,-8,6,-9,7,-5,-5,7,5,4,5,-10,-7,-3,-10,6,3,-8,2,-9,-1,5,5,10,9,9,-9,10,8,1,-10,-1,3,-1,-9,3,7,6,1,2,-9,-2,10,4,-7,-7,2,-1,-9,9,3,8,1,1,-9,9,-6,6,-3,5,7,-9,1,-5,2,-8,7,4,9,7,-10,8,9,1,6,4,-7,-2,2,-1,-1,-9,7,4,1,-6,2,-7,9,3,-4,-9,-9,-1,8,7,-1,8,4,-3,-5,-5,4,6,-2,9,5,8,8,-8,3,6,4,3,-5,-2,-7,7,-1,-5,3,10,1,-5,9,-7,-9,-8,8,10,8,-4,-10,-6,-6,-5,-6,-9,3,8,-7,4,-10,10,2,1,-3,4,-10,6,3,4,-6,-8,7,9,-3,-10,5,-10,2,-6,-8,8,-3,3,6,7,4,-9,1,5,-2,6,-6,4,-10,3,-3,6,-5,-3,-10,-5,4,-5,3,-9,-6,-2,-1,-8,-1,9,-2,-1,5,2,-4,2,-10,-5,7,-7,10,3,8,-2,-4,2,-7,-7,-6,-2,3,-10,-8,-5,10,-8,-1,-2,4,-9,-9,8,-3,10,3,4,5,10,-9,-8,5,9,-9,-7,9,3,7,1,8,3,-5,-9,1,2,4,-10,8,-5,2,-9,-9,6,8,8,-1,9,-8,-4,10,10,10,3,9,4,-1,2,-9,-6,6,-3,6,4,-2,4,8,6,-2,-5,-8,-2,-4,-8,3,-8,-9,7,-4,-1,1,2,7,-7,-6,2,3,-2,-8,-8,4,9,8,1,9,2,-7,-1,-2,-5,-1,4,-1,-1,-7,-8,-4,8,-5,5,9,3,-2,2,3,4,-4,-7,5,4,6,4,-10,-3,-1,6,8,8,4,-3,7,10,-6,-8,7,-2,5,5,8,10,-6,9,-10,3,-7,10,4,5,10,-10,5,-2,-7,8,4,-7,8,6,5,9,-8,5,-10,-1,-4,-7,-2,-1,-5,8,-7,-2,3,3,9,-9,3,-6,-4,3,-9,-9,9,-2,7,4,5,10,-5,-5,5,9,9,2,4,3,6,-4,10,-1,-4,-4,10,6,-9,8,-6,-3,-4,-8,10,10,3,-3,10,3,-9,-2,3,6,10,7,3,-10,-4,-3,-10,-2,-9,-10,-9,2,10,-6,-1,-4,-6,-6,2,6,-4,2,-6,-1,-1,3,-1,-7,10,-3,-8,3,-1,-5,-4,-9,-1,-4,-7,-1,3,-10,2,5,-1,-4,-9,-4,-5,3,9,-10,5,7,-9,2,-6,-6,10,-10,-4,-1,-1,-5,-4,-6,10,-5,-9,1,-5,-2,5,-7,1,-7,10,-10,-3,-7,-3,1,-10,2,-1,9,-4,-4,9,6,-9,-7,-1,1,-3,-2,-3,4,9,5,7,-7,5,1,-5,5,2,-4,-10,8,5,-2,2,4,-9,3,-2,-6,2,-10,8,2,7,4,2,1,-3,8,8,-9,10,5,-4,9,-10,-4,4,10,-3,9,8,5,-4,7,4,2,-9,5,8,1,5,-8,-3,-10,-3,-4,-2,4,-1,-9,8,10,-8,3,9,6,3,-2,-2,-5,-3,10,7,3,-3,-4,6,10,-8,-2,9,10,-1,8,-7,2,1,7,-4,-5,-3,-9,2,-2,4,-9,1,-5,-4,-10,6,-10,4,5,8,-6,-9,-9,-6,-3,-7,3,2,2,3,-4,4,7,3,-7,-2,-1,9,3,-3,8,-9,-9,1,4,3,-4,-3,-4,-1,-9,-3,-5,10,-10,4,-4,10,-1,-5,6,4,5,-1,6,-2,-6,-5,9,-8,-2,-8,-5,-10,-3,3,2,-9,7,-8,3,-9,-4,1,2,2,-4,-10,1,5,-6,-3,-8,-7,-6], dtype = "uint32")#candidate|527|(2016,)|const|uint32
call_525 = relay.TupleGetItem(func_436_call(relay.reshape(const_526.astype('uint32'), [16, 1, 9]), relay.reshape(const_527.astype('uint32'), [16, 14, 9]), ), 0)
call_528 = relay.TupleGetItem(func_440_call(relay.reshape(const_526.astype('uint32'), [16, 1, 9]), relay.reshape(const_527.astype('uint32'), [16, 14, 9]), ), 0)
output = relay.Tuple([bop_510,call_513,const_514,call_518,call_525,const_526,const_527,])
output2 = relay.Tuple([bop_510,call_515,const_514,call_519,call_528,const_526,const_527,])
func_540 = relay.Function([var_509,], output)
mod['func_540'] = func_540
mod = relay.transform.InferType()(mod)
var_541 = relay.var("var_541", dtype = "float32", shape = (14, 1, 1))#candidate|541|(14, 1, 1)|var|float32
output = func_540(var_541)
func_542 = relay.Function([var_541], output)
mutated_mod['func_542'] = func_542
mutated_mod = relay.transform.InferType()(mutated_mod)
var_629 = relay.var("var_629", dtype = "int64", shape = (8, 4, 4))#candidate|629|(8, 4, 4)|var|int64
var_630 = relay.var("var_630", dtype = "int64", shape = (8, 4, 4))#candidate|630|(8, 4, 4)|var|int64
bop_631 = relay.not_equal(var_629.astype('bool'), relay.reshape(var_630.astype('bool'), relay.shape_of(var_629))) # shape=(8, 4, 4)
func_540_call = mod.get_global_var('func_540')
func_542_call = mutated_mod.get_global_var('func_542')
var_640 = relay.var("var_640", dtype = "float32", shape = (14,))#candidate|640|(14,)|var|float32
call_639 = relay.TupleGetItem(func_540_call(relay.reshape(var_640.astype('float32'), [14, 1, 1])), 2)
call_641 = relay.TupleGetItem(func_542_call(relay.reshape(var_640.astype('float32'), [14, 1, 1])), 2)
func_166_call = mod.get_global_var('func_166')
func_168_call = mutated_mod.get_global_var('func_168')
call_642 = func_166_call(relay.reshape(var_640.astype('float64'), [14, 1, 1]))
call_643 = func_166_call(relay.reshape(var_640.astype('float64'), [14, 1, 1]))
func_166_call = mod.get_global_var('func_166')
func_168_call = mutated_mod.get_global_var('func_168')
call_652 = func_166_call(relay.reshape(var_640.astype('float64'), [14, 1, 1]))
call_653 = func_166_call(relay.reshape(var_640.astype('float64'), [14, 1, 1]))
func_134_call = mod.get_global_var('func_134')
func_138_call = mutated_mod.get_global_var('func_138')
call_661 = func_134_call(relay.reshape(call_639.astype('int64'), [11, 5, 7]), relay.reshape(call_639.astype('int64'), [11, 5, 7]), )
call_662 = func_134_call(relay.reshape(call_639.astype('int64'), [11, 5, 7]), relay.reshape(call_639.astype('int64'), [11, 5, 7]), )
func_166_call = mod.get_global_var('func_166')
func_168_call = mutated_mod.get_global_var('func_168')
call_674 = func_166_call(relay.reshape(var_640.astype('float64'), [14, 1, 1]))
call_675 = func_166_call(relay.reshape(var_640.astype('float64'), [14, 1, 1]))
output = relay.Tuple([bop_631,call_639,var_640,call_642,call_652,call_661,call_674,])
output2 = relay.Tuple([bop_631,call_641,var_640,call_643,call_653,call_662,call_675,])
func_679 = relay.Function([var_629,var_630,var_640,], output)
mod['func_679'] = func_679
mod = relay.transform.InferType()(mod)
mutated_mod['func_679'] = func_679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_679_call = mutated_mod.get_global_var('func_679')
var_681 = relay.var("var_681", dtype = "int64", shape = (8, 4, 4))#candidate|681|(8, 4, 4)|var|int64
var_682 = relay.var("var_682", dtype = "int64", shape = (8, 4, 4))#candidate|682|(8, 4, 4)|var|int64
var_683 = relay.var("var_683", dtype = "float32", shape = (14,))#candidate|683|(14,)|var|float32
call_680 = func_679_call(var_681,var_682,var_683,)
output = call_680
func_684 = relay.Function([var_681,var_682,var_683,], output)
mutated_mod['func_684'] = func_684
mutated_mod = relay.transform.InferType()(mutated_mod)
var_949 = relay.var("var_949", dtype = "int32", shape = (15, 15, 8))#candidate|949|(15, 15, 8)|var|int32
const_950 = relay.const([[[1,-10,8,-10,3,-9,-4,8],[-2,-6,-8,4,9,4,6,-5],[-1,-6,9,9,2,10,6,-1],[8,-7,-6,-2,4,2,-10,-6],[10,-2,-10,8,9,-1,-9,5],[4,6,4,5,-4,5,4,6],[5,-2,7,10,9,10,8,5],[-7,1,9,-9,-3,-8,8,-2],[10,-2,5,4,5,-3,-1,-4],[1,10,-1,4,5,-2,4,8],[7,2,3,-7,-9,-1,9,1],[-3,10,1,-2,4,9,-10,-3],[-6,9,10,-8,-6,-3,6,-5],[-4,5,-10,4,-10,3,10,7],[2,5,-3,3,4,6,-10,1]],[[5,1,-4,9,-8,6,-10,-3],[-2,-4,-3,-6,-3,-9,1,-6],[9,-4,-2,8,9,7,-8,2],[1,5,-3,3,1,-8,3,1],[-1,6,9,-3,-8,8,1,4],[-5,7,7,-3,-3,3,5,9],[-10,-9,-9,-9,-3,10,8,5],[2,1,-2,-10,-7,1,8,8],[-7,8,1,10,8,-5,6,8],[-2,7,-5,-8,-1,-2,1,6],[-1,1,-6,4,-2,8,9,-6],[-7,4,2,-2,-3,2,8,-3],[6,9,-6,6,1,6,2,-10],[4,8,-8,-9,-7,-6,-10,-2],[-2,10,3,5,-10,4,10,-10]],[[2,10,-10,-2,9,4,8,8],[6,-7,4,4,5,-5,-6,9],[4,-9,-8,3,-10,9,-2,7],[6,8,-7,3,2,7,2,-5],[7,1,4,5,1,-1,2,1],[-3,-8,-1,2,-9,-3,-5,9],[4,-7,4,-4,7,-5,5,-9],[-5,9,-9,1,-10,-1,5,-8],[10,9,9,-10,-1,7,3,6],[-6,5,-6,3,3,2,6,8],[5,-1,-3,3,7,1,10,9],[-2,1,-3,3,-10,3,-3,1],[8,-6,-4,4,3,-3,-3,-8],[7,3,4,5,9,8,-10,-3],[3,-1,10,-8,3,5,4,-10]],[[-3,-10,-9,8,2,1,7,10],[5,4,-7,10,4,5,-1,6],[10,-8,10,6,-4,-3,2,10],[5,5,-6,1,2,-5,-2,6],[8,10,2,9,-4,-8,4,-4],[-1,10,-3,7,-6,6,-5,2],[6,9,-10,7,-9,-10,2,1],[-2,1,1,-9,-10,6,9,7],[4,5,-6,-9,7,9,5,3],[2,-5,1,1,10,7,7,-5],[1,6,2,2,7,1,3,1],[9,10,9,1,9,7,1,-1],[-1,10,2,-7,5,-3,1,6],[2,-1,-7,10,-10,6,-10,6],[3,7,7,-6,-1,3,-7,-3]],[[4,9,8,-9,-6,-2,9,-10],[-3,10,10,-4,-7,6,-5,2],[-4,-3,10,-1,-5,5,-2,-8],[1,-8,-6,-3,-1,-8,7,-8],[-10,-1,10,-7,6,1,-6,-4],[-9,-7,5,7,-8,-4,4,5],[-10,-4,-2,-9,4,8,-1,8],[-7,4,-6,9,7,-10,3,4],[-6,8,-1,8,-7,7,1,7],[-2,-1,3,4,-3,-8,2,2],[2,7,6,-1,2,-10,-5,2],[-9,6,2,9,-6,2,1,-7],[-5,-6,-10,6,5,4,5,5],[-8,4,-3,-7,-10,-9,4,-3],[10,4,4,-1,-5,7,10,4]],[[5,10,-10,8,-8,10,3,-3],[-3,-5,6,-6,-3,-1,-4,-3],[-4,8,-9,-6,3,1,1,3],[10,1,-5,8,-7,-3,5,-2],[8,-5,-6,6,-6,7,2,1],[7,-9,-6,-2,-6,-8,10,10],[-1,7,-3,-9,9,-8,6,-2],[-9,7,5,-10,4,-2,7,-10],[-6,-6,-1,1,8,2,7,7],[4,1,3,2,1,-10,7,-7],[-9,5,-7,-10,6,-9,6,8],[1,-1,5,2,9,-2,-1,1],[-1,10,3,-3,3,-1,-9,1],[10,-4,7,-9,-7,-5,10,-10],[2,-9,3,-5,3,5,5,-1]],[[8,-10,-3,-1,1,-1,-2,4],[-3,1,4,-2,2,-8,-3,-3],[-8,4,-3,-4,-3,-9,-7,10],[-7,-8,7,-7,-7,-7,6,9],[-3,5,-2,-4,3,-9,-10,10],[10,-8,8,-7,2,5,-3,2],[-9,-4,6,-5,5,7,3,-1],[-3,-3,6,-6,-5,6,5,-4],[5,-5,-9,-9,-6,-8,-4,-3],[1,8,7,6,6,10,2,-6],[-5,9,5,8,2,10,8,3],[-1,-7,-6,2,8,3,-7,8],[-4,-6,3,-8,-2,3,4,-9],[8,5,10,-7,-9,-6,-1,-8],[1,4,10,1,2,3,-9,-3]],[[8,-2,-7,-5,-1,-3,-7,-7],[-5,-4,-3,-8,-8,-1,3,5],[-3,-2,-8,-5,9,-9,-8,-7],[-7,7,-6,5,6,-1,9,4],[5,-2,-2,9,-6,-2,-7,5],[-9,-6,-7,-9,6,-4,7,8],[-4,4,9,9,-4,-8,-9,-6],[7,-3,2,1,-3,-2,-3,-4],[-9,4,2,3,-4,8,6,-4],[-8,1,-1,6,7,8,-6,-8],[-1,-5,6,8,9,-5,-1,-1],[-8,-7,-5,4,-10,-4,5,5],[4,6,8,-10,-1,5,4,1],[8,-2,2,7,-10,-10,4,-8],[5,-8,1,3,5,-6,-2,2]],[[6,5,9,9,2,2,-7,4],[-8,7,10,-3,-8,3,-5,-1],[8,6,7,-7,-9,7,-3,9],[3,3,8,8,5,5,8,-9],[-4,-6,-2,-2,-3,-6,9,-8],[-3,-6,6,-6,-9,1,1,-6],[6,-5,-4,-1,5,-1,-5,5],[-1,9,-6,8,-10,-3,-10,-3],[8,5,7,8,3,6,-2,8],[-3,1,-3,-5,10,3,6,6],[-6,-7,-7,6,-6,-10,5,-2],[-6,-10,-5,-4,-4,5,-5,-5],[2,-3,-8,-10,3,-5,-7,-9],[-1,4,3,-1,4,-6,-8,9],[2,10,-3,6,-10,4,-7,4]],[[9,2,-5,2,10,10,8,10],[3,2,10,-2,7,10,9,2],[2,-4,6,10,-2,5,-10,-4],[5,-1,-3,5,-8,-4,1,-7],[-9,-3,4,2,-2,10,2,-6],[-9,1,-9,2,3,6,-3,10],[3,8,5,-5,-6,10,8,-2],[5,9,-10,-3,8,-1,-4,2],[4,-7,9,-7,-9,-3,-7,6],[-10,5,-7,-5,2,7,-10,-5],[10,-5,-6,-3,3,3,-3,-9],[-5,3,5,-8,-5,-4,3,-9],[-3,-1,-9,5,-10,-10,-9,-4],[-5,6,-4,-8,-7,-3,-2,-3],[-7,4,-9,-7,-9,-10,10,-3]],[[-10,7,-5,-2,-9,-5,7,8],[4,-9,-2,10,5,-10,-7,-10],[-3,-2,3,-1,8,3,-5,9],[-2,-10,7,6,3,9,-10,-6],[7,1,1,4,7,-5,10,-2],[4,-7,-4,-7,10,7,-6,-10],[1,6,-3,-1,8,5,-2,10],[-8,9,1,-9,1,-8,-6,-3],[-10,-9,7,-5,6,3,-8,-3],[2,-8,-9,4,10,-8,-10,5],[8,-5,4,2,-4,9,1,-6],[-6,-6,1,3,-1,10,-2,3],[9,-6,2,2,-6,7,2,10],[8,-3,7,-2,8,10,-5,1],[3,-6,7,10,-10,3,-10,2]],[[-3,9,-10,6,3,10,-1,3],[-8,8,8,3,6,-3,-10,-6],[-9,-3,-6,-9,-7,6,-7,1],[-7,-3,10,6,-3,-10,-2,-6],[-1,-10,-9,5,-7,3,9,1],[6,2,3,10,7,-9,-8,9],[-5,8,9,10,-6,2,-9,-3],[1,1,-5,10,-2,-10,3,2],[2,1,-5,7,-4,-9,6,-7],[1,-10,10,-10,-8,-5,-4,8],[6,5,-10,5,5,-6,7,-7],[3,7,-7,6,-9,-6,-7,-9],[4,6,-8,8,6,4,7,-4],[-9,4,9,-1,10,-3,2,1],[6,1,-10,-9,5,10,7,4]],[[6,-1,-7,-7,-10,5,-2,9],[4,6,-1,10,10,-7,3,-10],[9,-8,-6,3,-5,7,5,-7],[-7,4,-8,3,-4,3,-2,-8],[8,5,-1,7,9,3,-1,-4],[3,-6,2,-9,10,6,6,-2],[2,-8,8,-8,1,-10,4,-3],[-1,10,-10,10,2,1,9,-4],[-1,-3,10,-5,-5,-5,8,-7],[-9,-2,9,-9,7,-1,-1,9],[-9,-2,-6,-10,-3,-1,5,2],[9,2,-8,-9,1,3,-6,6],[7,-4,5,5,9,1,-5,9],[-6,4,-2,-9,4,6,2,-5],[10,-1,5,2,-3,-7,3,4]],[[7,-3,10,3,-2,4,-1,-5],[10,3,-4,-9,-8,-7,4,-2],[9,1,7,-3,-3,7,6,2],[-9,-1,-1,-2,-7,-4,2,2],[-3,-1,7,1,9,-3,-9,-10],[1,3,-2,-3,-8,1,-2,9],[8,-6,-4,-6,-5,9,-5,2],[4,9,4,6,6,-2,-2,4],[3,-4,6,-3,8,-3,-2,-10],[4,-2,-1,2,8,8,5,10],[1,-6,-4,8,-10,9,-9,8],[-8,4,3,-7,-10,-10,6,-2],[4,5,-6,1,5,-7,9,-8],[10,-6,-7,-1,-7,-1,-1,-3],[-10,4,-3,-1,-5,3,-6,2]],[[-2,-8,-1,-6,-1,3,-2,8],[7,8,-7,8,-9,-9,-9,-2],[9,-10,10,9,4,3,10,-8],[3,7,-6,3,6,-2,-1,8],[6,-10,-5,-8,-5,-5,-2,2],[-10,3,-3,-3,8,-4,4,1],[-9,6,2,-4,-3,-1,-3,-8],[3,-9,10,5,-1,-9,2,-3],[-2,6,-3,10,1,-10,-4,7],[4,4,-2,-3,10,6,-3,5],[-9,9,3,-7,1,-1,10,2],[6,7,7,-10,2,-8,-6,2],[4,-7,-1,3,4,8,-4,5],[6,-9,-1,-9,3,-2,2,4],[3,5,6,7,4,3,6,7]]], dtype = "int32")#candidate|950|(15, 15, 8)|const|int32
bop_951 = relay.right_shift(var_949.astype('int32'), relay.reshape(const_950.astype('int32'), relay.shape_of(var_949))) # shape=(15, 15, 8)
func_166_call = mod.get_global_var('func_166')
func_168_call = mutated_mod.get_global_var('func_168')
const_959 = relay.const([-7.548421,7.882053,4.392665,-6.945900,9.071146,0.154898,0.075740,-0.664551,-1.946014,3.065734,-2.492185,-0.285939,-6.947409,2.554541], dtype = "float64")#candidate|959|(14,)|const|float64
call_958 = func_166_call(relay.reshape(const_959.astype('float64'), [14, 1, 1]))
call_960 = func_166_call(relay.reshape(const_959.astype('float64'), [14, 1, 1]))
output = relay.Tuple([bop_951,call_958,const_959,])
output2 = relay.Tuple([bop_951,call_960,const_959,])
func_967 = relay.Function([var_949,], output)
mod['func_967'] = func_967
mod = relay.transform.InferType()(mod)
mutated_mod['func_967'] = func_967
mutated_mod = relay.transform.InferType()(mutated_mod)
var_968 = relay.var("var_968", dtype = "int32", shape = (15, 15, 8))#candidate|968|(15, 15, 8)|var|int32
func_967_call = mutated_mod.get_global_var('func_967')
call_969 = func_967_call(var_968)
output = call_969
func_970 = relay.Function([var_968], output)
mutated_mod['func_970'] = func_970
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1027 = relay.var("var_1027", dtype = "float64", shape = (3, 13, 16))#candidate|1027|(3, 13, 16)|var|float64
uop_1028 = relay.atanh(var_1027.astype('float64')) # shape=(3, 13, 16)
func_679_call = mod.get_global_var('func_679')
func_684_call = mutated_mod.get_global_var('func_684')
var_1031 = relay.var("var_1031", dtype = "int64", shape = (128,))#candidate|1031|(128,)|var|int64
const_1032 = relay.const([7.438608,-6.209174,3.122431,-2.641181,2.400773,9.577422,-9.271955,-0.380541,-5.449380,-7.031473,2.606883,3.123591,2.588041,8.885260], dtype = "float32")#candidate|1032|(14,)|const|float32
call_1030 = relay.TupleGetItem(func_679_call(relay.reshape(var_1031.astype('int64'), [8, 4, 4]), relay.reshape(var_1031.astype('int64'), [8, 4, 4]), relay.reshape(const_1032.astype('float32'), [14,]), ), 6)
call_1033 = relay.TupleGetItem(func_684_call(relay.reshape(var_1031.astype('int64'), [8, 4, 4]), relay.reshape(var_1031.astype('int64'), [8, 4, 4]), relay.reshape(const_1032.astype('float32'), [14,]), ), 6)
output = relay.Tuple([uop_1028,call_1030,var_1031,const_1032,])
output2 = relay.Tuple([uop_1028,call_1033,var_1031,const_1032,])
func_1041 = relay.Function([var_1027,var_1031,], output)
mod['func_1041'] = func_1041
mod = relay.transform.InferType()(mod)
mutated_mod['func_1041'] = func_1041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mutated_mod.get_global_var('func_1041')
var_1043 = relay.var("var_1043", dtype = "float64", shape = (3, 13, 16))#candidate|1043|(3, 13, 16)|var|float64
var_1044 = relay.var("var_1044", dtype = "int64", shape = (128,))#candidate|1044|(128,)|var|int64
call_1042 = func_1041_call(var_1043,var_1044,)
output = call_1042
func_1045 = relay.Function([var_1043,var_1044,], output)
mutated_mod['func_1045'] = func_1045
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1632 = relay.var("var_1632", dtype = "float64", shape = (10, 14, 8))#candidate|1632|(10, 14, 8)|var|float64
uop_1633 = relay.tan(var_1632.astype('float64')) # shape=(10, 14, 8)
func_540_call = mod.get_global_var('func_540')
func_542_call = mutated_mod.get_global_var('func_542')
const_1639 = relay.const([-4.132426,-2.391038,-7.107081,-5.635866,5.023046,4.545797,4.917192,-4.150745,-7.143410,6.607999,0.347899,-0.068280,3.524723,7.018264], dtype = "float32")#candidate|1639|(14,)|const|float32
call_1638 = relay.TupleGetItem(func_540_call(relay.reshape(const_1639.astype('float32'), [14, 1, 1])), 4)
call_1640 = relay.TupleGetItem(func_542_call(relay.reshape(const_1639.astype('float32'), [14, 1, 1])), 4)
func_967_call = mod.get_global_var('func_967')
func_970_call = mutated_mod.get_global_var('func_970')
const_1660 = relay.const([6,-1,-5,4,4,1,-6,-8,6,-1,-7,7,8,-4,-7,-9,7,2,4,2,-2,6,9,6,-1,2,3,9,3,-2,-6,-3,-2,7,-9,-8,3,-8,1,6,10,1,9,-7,-3,3,2,4,-9,4,1,-10,7,9,-3,-9,4,6,-7,-8,-2,4,4,-9,-1,2,4,-8,-1,6,-1,7,-4,3,-8,6,9,-5,9,8,7,-2,4,-2,9,9,5,-9,10,2,10,-9,7,-6,10,-6,3,-9,-10,-4,-1,8,10,6,-9,10,-4,10,3,-8,9,-9,2,1,-1,2,7,-7,-9,-7,-1,10,5,9,-6,-2,-10,9,-1,7,-3,-1,9,9,2,8,4,9,8,9,4,8,2,-8,-8,-4,-4,-3,-4,-2,-10,-10,-6,4,-6,7,4,-3,-5,-9,6,7,-8,-2,5,-9,-4,-9,-7,-6,6,2,-3,6,8,2,-9,-3,-1,9,10,-1,6,-7,-3,-5,-8,-8,-4,10,10,-3,3,5,-2,10,-2,-6,-10,-3,-8,1,7,-7,-4,10,-1,2,-2,9,-1,6,7,4,-7,-10,7,-10,-1,-5,6,-8,10,-2,-6,6,10,-3,-6,-4,-3,-5,-8,-5,4,3,-5,8,2,10,10,5,10,9,-4,6,-9,-8,-5,-5,10,8,10,1,-5,10,-6,7,5,-1,-9,8,7,-5,8,-3,8,6,-9,-8,9,-2,-4,-3,5,8,1,3,2,4,6,10,1,9,-4,-6,6,-8,-9,9,-4,-9,5,-3,-10,8,-4,-9,6,-7,-7,-1,-3,5,-9,7,3,8,-9,-4,-10,4,-3,-1,3,9,-10,-6,9,-4,-6,-4,6,7,-5,-4,-7,8,-5,9,6,-9,8,1,7,-10,8,-3,7,2,3,8,-6,10,-5,1,-8,-10,-8,-6,8,-9,1,1,-2,-2,10,-4,6,8,-4,-5,-1,-9,-7,3,10,-4,-4,8,9,-10,10,5,-8,7,4,-4,-8,4,-9,-3,-9,-9,3,6,9,-2,9,-5,4,1,-6,3,-10,-9,5,8,-10,-6,8,6,-9,-6,-8,7,5,-10,-3,-6,1,9,-9,2,6,4,-2,-1,1,-9,-8,-8,4,-5,2,-7,-7,9,-5,-7,8,5,4,-3,3,3,-10,-6,1,-9,-5,6,-5,7,-7,-1,6,7,3,-4,-1,10,7,6,-9,9,-3,5,-1,8,-9,-2,-8,-6,8,7,-6,-1,-5,9,3,-10,-4,-2,9,2,10,4,3,-9,1,-10,-5,8,-9,-3,-8,9,-8,-6,1,-7,-1,9,3,7,-3,1,-10,-7,-7,-3,3,-4,3,8,-9,6,-7,6,-4,4,-9,-5,-3,2,-1,4,9,5,-9,7,-9,9,-10,8,7,-1,-8,-7,-9,2,6,-5,3,8,-4,-3,1,-1,-7,7,10,10,4,-8,8,2,5,10,9,3,6,8,-7,8,-7,-8,3,-4,7,10,1,9,1,-5,1,4,1,-5,-9,2,10,-3,-8,-1,-9,8,7,8,-9,8,9,7,4,-8,-7,-10,-10,9,2,-1,-3,2,8,-7,3,9,9,-3,8,-5,4,1,10,10,-1,2,-1,3,-4,-6,-8,-8,1,-10,-5,-3,2,-10,5,4,-2,10,-3,-1,-7,-4,4,-2,5,3,6,-6,-1,1,-8,-3,-5,4,-10,-5,-3,-10,2,1,3,-5,1,7,10,9,-7,10,7,-8,-10,2,1,-2,5,8,7,-6,7,-4,3,6,-8,-2,2,-2,2,-6,7,3,1,-9,-9,9,-10,4,6,5,-8,-9,-6,5,-4,-10,8,4,-9,10,-1,3,-1,7,8,-1,9,-9,2,5,-4,8,2,-3,-6,6,-3,-7,5,2,-7,2,-5,-3,4,3,-4,-1,-3,-5,9,-6,-2,7,-8,3,-5,1,7,-7,1,10,-2,-2,-7,-6,10,-3,5,-10,-10,-8,7,5,1,-4,3,-10,6,4,8,-4,-3,9,-6,1,-3,8,-8,3,-6,-4,2,6,5,-3,-3,9,1,-4,-8,-10,-5,2,-3,5,-3,-8,4,-3,7,1,-3,6,10,-1,-4,-1,1,-4,-8,4,9,-8,-8,-3,-9,5,-7,-5,8,9,-7,4,-6,2,9,-7,8,3,-8,-2,-1,8,5,-6,9,8,-6,4,1,5,-4,10,8,1,-10,-3,-8,-10,6,10,1,-1,-10,-8,5,-3,-6,2,-8,1,3,-10,9,-6,8,-10,3,6,8,-6,-9,-1,-2,10,3,-10,9,9,-2,3,-2,10,4,-9,-2,-5,-4,6,7,-5,-9,-9,7,-6,-5,-10,2,2,-6,10,6,6,10,-5,8,-9,7,7,8,-4,4,9,1,-4,4,4,-9,-9,4,6,-8,-9,5,-10,9,3,5,9,-5,5,-7,9,-1,5,-6,9,7,8,6,-2,-9,8,9,2,-4,-3,-7,-9,5,-8,-6,-5,-5,-5,-9,5,4,-4,5,-8,6,-10,-6,-5,-2,1,10,-10,-9,5,2,7,-5,10,10,9,-9,-9,5,-7,-7,-4,6,-1,9,-2,7,-8,4,-2,-5,-10,-9,1,-5,2,9,-8,-10,-10,6,-9,-3,5,4,-2,8,3,-3,3,3,9,-1,-6,9,-1,10,-7,-8,10,10,1,4,-5,-6,-4,-4,-2,-3,10,-4,6,-3,-7,-3,-5,9,-1,9,9,-4,6,-7,7,-7,-1,-9,5,9,-5,6,-5,5,7,2,1,10,-8,-6,-6,-3,1,3,-6,-7,5,2,-8,6,2,3,7,-1,-10,-1,7,5,-8,6,-3,8,6,-7,-8,10,-4,3,6,-6,10,-5,3,-7,-2,-6,7,2,5,-6,4,-3,10,-8,2,5,1,-1,3,5,2,-8,-7,-2,10,3,5,2,4,2,-6,-9,8,-3,-7,-6,-2,-10,5,-9,-10,-8,-10,10,2,1,-2,7,8,3,-10,8,3,1,8,2,-4,-4,-3,-10,8,-5,2,10,-3,9,2,-5,3,-1,-8,10,-5,8,-1,-3,10,9,1,3,-4,7,-8,-1,2,4,6,2,10,-9,8,2,-1,1,-2,-6,-7,-4,-7,9,-6,-7,-9,-2,-1,-2,5,7,4,-6,4,-5,-4,9,-2,9,1,10,7,3,-5,8,-6,5,-5,-6,-4,-10,-10,10,-9,-1,6,-2,-7,2,-9,-3,-5,5,-1,9,-6,6,1,-9,6,1,-3,-7,-8,-4,1,-2,-8,-8,-1,-6,9,-2,-9,-9,1,7,2,4,-4,7,-8,2,9,4,-9,7,-4,6,-10,-8,-4,-4,-8,-6,-9,-8,3,2,9,2,-10,-6,7,-8,9,-5,3,-1,2,-3,-10,9,-10,5,-8,-9,-5,-5,-9,9,-10,-4,6,4,-3,-8,-6,8,7,-5,-2,5,9,10,-2,-9,3,-5,-9,6,6,6,-2,-9,-10,6,-1,9,-3,-10,-10,-9,-4,-4,5,-4,-6,4,5,-9,-10,-6,7,10,6,7,3,-9,-2,10,4,10,-6,-10,-8,7,5,6,1,-4,-8,-5,8,-5,-8,8,1,-6,2,8,-4,-7,-8,-10,9,-8,-4,-9,10,3,-1,1,-10,-6,2,4,9,-6,-4,-6,2,-1,10,1,4,-7,6,6,7,-10,-8,-7,-4,3,-9,1,6,10,-2,5,4,4,2,-5,3,-7,10,7,-5,1,9,7,-6,1,-5,-5,-8,8,8,-8,3,-2,-9,6,-9,-10,-3,-6,-4,-6,-3,10,1,-1,3,1,-5,8,6,-10,5,5,-6,6,8,-1,-6,-10,6,7,1,7,5,-1,-1,5,-10,-1,-9,-8,-8,8,7,10,-9,7,7,7,-9,-2,-7,4,7,-6,4,-3,-3,8,-9,5,7,10,-4,-7,-3,-3,8,-10,7,-1,-9,5,7,2,-2,-6,7,-5,2,7,-3,-8,10,-5,-1,7,-1,2,6,6,8,-6,-9,-9,-5,6,7,-10,-1,3,3,4,2,4,9,-5,1,4,-4,-10,-9,10,10,10,-7,5,-5,-4,4,-7,7,2,5,9,-10,10,-5,3,8,-9,8,-5,-5,-4,-6,-4,2,2,-1,-7,-9,-10,5,2,-7,-10,-6,-2,5,-10,4,3,-9,5,7,-10,-9,1,-4,-1,5,-9,-8,4,4,4,7,6,-4,5,-5,8,-7,-9,-5,3,-2,2,1,3,9,5,-5,-3,4,-10,3,2,-8,-1,1,-2,-6,5,10,3,5,7,-1,-9,-8,-3,-7,-3,5,-6,7,1,2,-1,4,-4,-3,9,1,8,-4,-2,-5,-6,8,7,9,9,4,6,5,8,-10,4,2,-3,-3,9,-8,6,-6,3,3,-9,-3,6,4,8,9,-7,5,1,-5,-6,7,10,7,1,5,-8,6,8,7,3,-9,-9,2,-10,2,9,8,-5,3,6,7,-6,-7,2,-10,10,-7,2,10,-4,8,2,-5,4,4,-5,1,3,-6,1,-1,-3,-9,6,9,-2,5,4,2,7,-7,8,-6,7,7,5,-9,4,5,7,-2,-10,4,9,1,1,-2,7,9,7,-10,-4,3,6,2,2,2,-2,-8,-2,1,-9,4,9,8,1,-10,-8,5,-1,-7,10,4,8,5,3,5,8,-7,-3,3,-4,9,6,-8,-10,9,-6,1,7,6,-3,1,10,-8,-5,-9,4,3,-3,-4,-7,2,-5,9,-1,1,6,7,2,-9,6,3,5,7,-6,10], dtype = "int32")#candidate|1660|(1800,)|const|int32
call_1659 = relay.TupleGetItem(func_967_call(relay.reshape(const_1660.astype('int32'), [15, 15, 8])), 2)
call_1661 = relay.TupleGetItem(func_970_call(relay.reshape(const_1660.astype('int32'), [15, 15, 8])), 2)
output = relay.Tuple([uop_1633,call_1638,const_1639,call_1659,const_1660,])
output2 = relay.Tuple([uop_1633,call_1640,const_1639,call_1661,const_1660,])
func_1667 = relay.Function([var_1632,], output)
mod['func_1667'] = func_1667
mod = relay.transform.InferType()(mod)
var_1668 = relay.var("var_1668", dtype = "float64", shape = (10, 14, 8))#candidate|1668|(10, 14, 8)|var|float64
output = func_1667(var_1668)
func_1669 = relay.Function([var_1668], output)
mutated_mod['func_1669'] = func_1669
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2390 = relay.const([[[8.848590,-1.397226,-8.551770,8.780268,-1.979584,-2.997334,-6.377392],[8.895315,-9.441021,-6.890820,8.104811,-1.318080,-1.963999,5.699965],[2.196825,-7.768219,2.874085,-5.944564,5.501268,-7.285915,-9.679862],[-4.931348,3.881852,2.859884,-7.367368,-1.111257,-6.833062,-0.688006],[7.724204,-2.682079,-3.226115,6.323892,-8.570954,3.543088,4.682392],[3.735140,4.183085,-9.753607,-5.365118,-5.727170,0.420174,-9.728310],[3.886240,-9.426936,-7.916283,8.269525,2.041467,6.283993,4.894873]],[[-4.991360,-6.426274,-1.066963,0.444155,-1.277053,-6.148947,-2.928855],[4.092858,-1.390306,1.555255,4.010067,3.610093,0.292027,2.618321],[-1.550354,2.929892,3.822289,8.979686,3.410278,-5.799961,-1.192843],[-8.218934,-0.731857,4.631397,0.487866,0.643993,9.403380,4.065038],[-8.669067,7.443332,8.542207,7.484856,-0.179980,-2.161770,2.378390],[1.930057,-3.022722,-1.198574,1.105555,7.928406,-1.179231,-4.364769],[7.187928,-8.435241,-2.798665,6.269458,1.600424,4.432419,2.237669]],[[7.342645,-2.613715,-8.057443,0.834249,-5.540057,-8.230166,1.385829],[-1.632708,-0.349573,3.333142,9.840160,-9.064392,-7.195817,6.378097],[6.402402,0.127880,6.320783,8.844087,-0.417424,-6.359275,-6.740339],[-1.628065,-7.089148,5.937172,3.956543,8.483265,-9.296113,5.325177],[9.611272,-4.350238,3.954047,-1.567520,-4.307164,-6.561352,-9.273617],[4.718426,2.520736,-1.931663,-2.881193,3.901314,-8.927035,7.297457],[-4.975903,7.116591,0.992907,8.403126,-8.282345,-4.727904,8.598648]],[[7.009596,1.924114,-8.866616,0.216861,-1.016710,-4.043402,0.565916],[1.908590,-4.427232,5.396588,3.493117,1.627678,6.885549,-4.262252],[-6.960880,-7.993062,5.420502,-6.437445,-2.517981,-4.651144,-3.393427],[-4.809200,-1.080560,-6.726714,-1.660020,-6.992060,-7.346314,-7.526708],[9.808677,7.550216,-9.346113,-5.115545,-4.817843,-0.298087,-6.050323],[6.976115,4.616159,-8.708852,8.893644,-9.116442,-0.059956,-0.228738],[9.291942,-1.475565,5.309629,-7.730868,5.642963,-1.539462,-0.193686]],[[-2.739045,2.827682,8.173067,-9.989428,-2.536916,-7.345862,2.921632],[-4.396932,0.903716,-9.879172,-2.263218,-1.933480,5.042356,1.986290],[6.678334,-6.113440,-8.530948,6.285477,2.629709,8.508933,-0.393976],[-3.891357,-3.471014,5.876297,-2.246239,6.790831,2.367589,-1.293530],[4.661874,-2.557887,2.865711,5.898767,6.706411,1.700077,-4.266470],[-9.218430,-1.826557,-1.031791,4.983926,-6.322548,4.172708,8.369897],[8.847503,7.957374,1.826015,8.323520,9.564157,1.187116,-9.690643]]], dtype = "float32")#candidate|2390|(5, 7, 7)|const|float32
uop_2391 = relay.sin(const_2390.astype('float32')) # shape=(5, 7, 7)
func_1041_call = mod.get_global_var('func_1041')
func_1045_call = mutated_mod.get_global_var('func_1045')
var_2395 = relay.var("var_2395", dtype = "float64", shape = (624,))#candidate|2395|(624,)|var|float64
const_2396 = relay.const([1,-9,-6,1,4,-6,-1,6,-7,6,-2,3,-4,3,2,-2,-1,-7,5,-4,7,-8,3,8,5,-6,-8,-2,-1,-4,-10,-5,-5,-7,-10,3,-5,6,7,9,-10,10,4,-10,-6,10,-3,4,-7,10,3,5,-6,-5,-4,6,9,-2,7,-10,8,-6,4,9,-2,1,4,-5,-6,5,7,2,7,-3,-7,7,4,6,-5,1,4,5,9,-2,4,-5,-1,1,10,-4,6,2,-5,9,-3,-7,6,7,-4,10,-6,-1,9,-5,-3,-8,10,-10,-10,3,1,10,-2,1,-8,3,4,-1,3,6,6,-4,5,9,3,9,-10,1], dtype = "int64")#candidate|2396|(128,)|const|int64
call_2394 = relay.TupleGetItem(func_1041_call(relay.reshape(var_2395.astype('float64'), [3, 13, 16]), relay.reshape(const_2396.astype('int64'), [128,]), ), 2)
call_2397 = relay.TupleGetItem(func_1045_call(relay.reshape(var_2395.astype('float64'), [3, 13, 16]), relay.reshape(const_2396.astype('int64'), [128,]), ), 2)
func_540_call = mod.get_global_var('func_540')
func_542_call = mutated_mod.get_global_var('func_542')
var_2406 = relay.var("var_2406", dtype = "float32", shape = (14,))#candidate|2406|(14,)|var|float32
call_2405 = relay.TupleGetItem(func_540_call(relay.reshape(var_2406.astype('float32'), [14, 1, 1])), 0)
call_2407 = relay.TupleGetItem(func_542_call(relay.reshape(var_2406.astype('float32'), [14, 1, 1])), 0)
func_1041_call = mod.get_global_var('func_1041')
func_1045_call = mutated_mod.get_global_var('func_1045')
call_2414 = relay.TupleGetItem(func_1041_call(relay.reshape(var_2395.astype('float64'), [3, 13, 16]), relay.reshape(const_2396.astype('int64'), [128,]), ), 2)
call_2415 = relay.TupleGetItem(func_1045_call(relay.reshape(var_2395.astype('float64'), [3, 13, 16]), relay.reshape(const_2396.astype('int64'), [128,]), ), 2)
output = relay.Tuple([uop_2391,call_2394,var_2395,const_2396,call_2405,var_2406,call_2414,])
output2 = relay.Tuple([uop_2391,call_2397,var_2395,const_2396,call_2407,var_2406,call_2415,])
func_2422 = relay.Function([var_2395,var_2406,], output)
mod['func_2422'] = func_2422
mod = relay.transform.InferType()(mod)
var_2423 = relay.var("var_2423", dtype = "float64", shape = (624,))#candidate|2423|(624,)|var|float64
var_2424 = relay.var("var_2424", dtype = "float32", shape = (14,))#candidate|2424|(14,)|var|float32
output = func_2422(var_2423,var_2424,)
func_2425 = relay.Function([var_2423,var_2424,], output)
mutated_mod['func_2425'] = func_2425
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2795 = relay.var("var_2795", dtype = "float64", shape = (16, 11, 9))#candidate|2795|(16, 11, 9)|var|float64
uop_2796 = relay.log10(var_2795.astype('float64')) # shape=(16, 11, 9)
func_679_call = mod.get_global_var('func_679')
func_684_call = mutated_mod.get_global_var('func_684')
const_2807 = relay.const([-2,8,2,6,1,-10,9,-6,-10,9,4,8,-9,4,-5,6,3,-7,-9,4,10,5,-8,8,6,10,3,-3,-7,6,7,1,7,6,2,-8,-4,2,3,-9,-7,-8,-1,5,-9,1,-4,-5,-10,-8,1,-5,-10,8,-8,4,-10,-6,-3,-8,-5,-8,9,1,-6,-2,-5,-3,-5,-10,-10,6,9,10,6,-6,-4,9,10,5,-7,5,5,8,-3,-10,-7,4,10,-9,9,-7,-2,8,-4,-9,1,4,-6,-3,3,1,-2,7,8,-10,1,-1,2,6,4,7,-1,-9,-3,5,8,9,2,3,2,-6,9,-8,9,-8,-1,-6], dtype = "int64")#candidate|2807|(128,)|const|int64
const_2808 = relay.const([-4.086426,-0.941514,-8.110775,5.188006,7.897636,-5.243293,6.551390,1.694443,-6.928331,-8.304325,8.977240,-6.687655,9.607756,5.475708], dtype = "float32")#candidate|2808|(14,)|const|float32
call_2806 = relay.TupleGetItem(func_679_call(relay.reshape(const_2807.astype('int64'), [8, 4, 4]), relay.reshape(const_2807.astype('int64'), [8, 4, 4]), relay.reshape(const_2808.astype('float32'), [14,]), ), 2)
call_2809 = relay.TupleGetItem(func_684_call(relay.reshape(const_2807.astype('int64'), [8, 4, 4]), relay.reshape(const_2807.astype('int64'), [8, 4, 4]), relay.reshape(const_2808.astype('float32'), [14,]), ), 2)
output = relay.Tuple([uop_2796,call_2806,const_2807,const_2808,])
output2 = relay.Tuple([uop_2796,call_2809,const_2807,const_2808,])
func_2825 = relay.Function([var_2795,], output)
mod['func_2825'] = func_2825
mod = relay.transform.InferType()(mod)
var_2826 = relay.var("var_2826", dtype = "float64", shape = (16, 11, 9))#candidate|2826|(16, 11, 9)|var|float64
output = func_2825(var_2826)
func_2827 = relay.Function([var_2826], output)
mutated_mod['func_2827'] = func_2827
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3365 = relay.var("var_3365", dtype = "float64", shape = (3, 16, 15))#candidate|3365|(3, 16, 15)|var|float64
uop_3366 = relay.tan(var_3365.astype('float64')) # shape=(3, 16, 15)
func_679_call = mod.get_global_var('func_679')
func_684_call = mutated_mod.get_global_var('func_684')
var_3373 = relay.var("var_3373", dtype = "int64", shape = (8, 16))#candidate|3373|(8, 16)|var|int64
const_3374 = relay.const([-8.082871,-4.569330,-9.344748,4.276793,3.393290,5.486103,-6.928834,9.826993,5.748467,1.091427,5.728198,-6.399099,-7.700243,2.273918], dtype = "float32")#candidate|3374|(14,)|const|float32
call_3372 = relay.TupleGetItem(func_679_call(relay.reshape(var_3373.astype('int64'), [8, 4, 4]), relay.reshape(var_3373.astype('int64'), [8, 4, 4]), relay.reshape(const_3374.astype('float32'), [14,]), ), 0)
call_3375 = relay.TupleGetItem(func_684_call(relay.reshape(var_3373.astype('int64'), [8, 4, 4]), relay.reshape(var_3373.astype('int64'), [8, 4, 4]), relay.reshape(const_3374.astype('float32'), [14,]), ), 0)
func_1667_call = mod.get_global_var('func_1667')
func_1669_call = mutated_mod.get_global_var('func_1669')
const_3379 = relay.const([-3.303940,-1.048150,-5.100609,-4.036550,-0.220197,-6.361151,-8.265470,3.834624,-9.101107,-5.382807,2.825077,3.754519,6.727599,9.743122,1.196999,-4.283273,6.755322,4.718263,2.352755,6.154771,-1.507783,1.373908,6.313310,2.046104,2.347412,0.945444,8.476808,-8.638042,1.066846,1.054530,9.131601,3.775980,-8.151245,-7.236849,-8.506318,3.069771,-4.191998,2.604419,8.099145,4.516956,-6.207820,-4.280681,-2.272397,6.388903,-2.217586,-0.563535,-9.468394,5.968936,1.825818,-9.701882,4.848898,-4.596581,-1.222446,1.975039,-6.948240,1.246504,-6.674537,-3.478380,-8.814416,-4.195064,-5.349038,-9.790198,-8.488451,0.331200,-6.279588,-4.094408,0.624823,3.843269,-3.404580,-9.570473,1.852606,-1.124215,2.879374,-9.126401,-4.148049,-9.470920,-6.669020,6.085005,-2.771963,-9.040937,-8.975526,-6.122296,5.366786,0.902162,4.761151,-7.624449,7.066366,-7.938805,4.302280,2.118900,6.169236,-3.141101,-4.663612,7.466603,-6.036715,0.119622,-1.030468,-5.903549,7.496657,9.291697,1.325620,-2.641060,-1.849438,3.139712,6.095967,0.151575,2.589831,-6.777245,7.465673,-2.714557,6.247850,-5.254548,-4.832872,3.264538,9.750100,-3.700484,-0.401210,6.708795,9.075915,-4.674416,4.257828,0.568179,3.607393,4.208125,5.586364,-0.238973,3.001790,-6.632327,-6.241841,-2.732699,3.601276,-2.988811,1.954453,-0.862838,9.866030,0.445576,0.407046,7.495066,9.403316,0.425135,-5.522782,6.711656,1.283572,5.546681,-8.575816,5.236551,-5.406479,3.116828,8.612999,-7.029558,4.116539,-6.949215,3.600585,3.219404,-5.441159,6.037013,4.382904,-8.511118,2.142571,-5.691745,9.825842,3.696069,8.244176,8.430300,-6.998224,9.191156,-6.606893,-9.471669,9.766172,-4.505148,8.122920,3.136171,-3.932682,4.226070,0.829765,0.616701,0.020781,9.333763,-1.020631,2.121894,-9.533487,-4.531450,-5.923968,-4.281458,-7.169869,8.289440,7.562911,-5.784286,4.784884,7.450122,9.699636,5.927482,9.860890,-8.236341,-2.171616,-6.392068,-5.209700,4.190265,-5.421442,9.949501,-2.636040,-1.001398,0.110221,5.654951,-2.126442,4.542509,-0.587283,-9.730138,8.999779,7.217635,-2.179697,4.434043,-0.210079,-1.860687,-2.215561,1.217517,-6.111580,-5.159471,0.889196,-3.548246,-7.234326,5.504289,7.204662,-0.631099,-7.556008,-4.405491,-6.505587,-9.602590,-2.903141,1.624790,-4.351307,7.501304,-2.909826,-9.858246,1.974938,9.110362,-4.772545,-6.249723,-5.060505,6.052729,-5.216437,7.818851,7.275785,4.428124,-4.272014,-3.804539,-4.379772,-3.617131,-6.508021,-7.846837,7.268839,9.663481,-0.601316,1.729387,3.006235,-2.942221,-3.960589,-7.975198,0.582453,4.645520,-6.112957,-5.052055,4.457643,8.822499,4.577217,-9.751437,5.931304,-3.794668,6.655222,-5.767267,-2.650896,5.952939,-4.406244,-2.597107,8.977730,-7.530056,-4.748482,-9.166009,2.813316,6.160352,6.673641,0.326811,4.758361,6.144580,-3.572899,6.759038,-3.034418,0.953365,-0.335450,-4.166082,-9.749423,3.879958,9.187601,-6.677833,8.578105,6.912110,3.608614,8.251961,-1.844331,-5.840541,-9.394998,-2.891316,-0.047016,-7.192475,6.956590,-5.185929,1.871009,-3.578623,-3.311667,2.314884,-7.040586,-1.499789,5.129157,5.515853,-0.975495,-8.866775,3.430810,6.276376,0.936144,4.942123,-6.440629,-1.572568,0.315207,-3.592326,6.293929,-0.640100,-8.017046,-3.637193,-2.311122,-1.871543,3.494483,-7.827898,1.730140,-4.092275,2.275297,1.424562,3.771560,9.479820,0.002681,-6.932032,7.731335,-3.022877,-3.342195,8.649154,-2.526233,3.421204,8.536069,7.561719,-5.745016,3.939151,0.098916,2.881353,-1.539571,2.691361,5.520577,-7.594579,-7.332371,-1.094589,8.257521,-6.354457,0.048267,5.245990,2.634135,8.467606,-0.150057,1.938565,-8.710478,6.863823,2.873719,-8.705259,-1.072778,5.662389,0.846600,3.279762,8.214051,5.732990,-4.702694,8.149438,0.191507,3.052554,5.736358,5.529559,1.433793,-7.488924,6.018606,6.399140,-1.917107,5.592697,7.825881,-1.272631,-9.150684,2.570296,6.003302,-6.529463,-3.261894,-8.860386,-9.517188,8.762282,-1.415846,-1.705879,-5.072460,-5.652523,-8.696735,-8.426913,-7.681476,-1.410851,-7.934126,4.048302,8.210615,-8.555133,8.041194,9.184600,-2.498962,-5.343709,6.055594,6.636155,-2.753857,-4.938385,5.266236,-1.429268,0.794111,-2.694323,2.402407,4.601357,5.468833,-8.184383,4.612603,-4.769309,-9.596430,-4.742328,5.652989,1.822634,7.065141,-0.470739,-4.487840,6.174074,4.570778,-9.662780,2.735630,0.468411,4.030640,-5.751168,-5.532060,3.480512,9.726518,-2.924955,1.733309,-1.875874,2.102615,5.030610,-5.760145,7.660175,-4.504948,-5.358581,-3.406278,-1.624202,9.135363,-1.848881,3.484357,-7.279118,2.794751,4.107092,-1.546139,-3.130512,-6.067736,8.459454,-1.473492,-8.848229,-6.573856,-0.057816,3.422810,9.233128,8.318066,-2.889921,1.732230,0.385570,1.166557,6.495827,5.397120,3.831425,4.543690,-8.848940,2.127276,-1.638543,8.896797,-7.026954,4.208536,1.505081,7.458997,3.232899,-6.123105,-9.304397,2.771555,7.579284,2.546165,-2.217778,3.566142,-5.095126,4.129946,9.748875,8.008409,1.458984,7.890196,-4.507044,-5.997460,4.589892,-2.585296,-3.403592,7.463098,-8.146254,-2.699888,8.508079,5.529761,0.645603,-0.693092,6.073073,-1.854231,-9.252342,0.592992,5.676687,-1.087581,-7.872701,-9.721458,-1.542126,-4.532453,-4.675102,3.919127,7.175239,5.817736,1.145021,3.530904,9.192936,-3.355229,8.109499,-4.807335,7.354441,1.358014,-8.224515,3.370714,4.681905,2.586869,-1.873443,3.815308,-3.080175,-3.483473,-7.087668,-9.362363,-0.214128,1.061538,4.574836,-0.520839,-2.734512,-7.140289,4.059420,1.910606,-6.576130,-6.662444,0.364178,-9.869610,-5.140788,9.965045,-3.266757,-2.694854,-5.536941,-0.872999,-5.966446,5.514455,-6.641579,9.178255,1.540649,-5.540007,7.427380,-4.645517,-1.017572,-1.303652,-3.367302,3.300722,-1.040672,4.606956,1.270674,-1.929079,-2.171632,-1.927759,2.672058,-3.915645,-6.189997,-3.209309,2.364758,-9.166649,1.144182,-2.032717,-6.683213,-3.418092,6.148219,-7.388185,3.089170,-7.611061,-3.886832,-4.985528,-8.646576,-6.012408,2.752013,0.715278,7.969941,-5.298892,-0.098751,-0.529032,-7.718834,9.549757,-4.581855,-3.763860,-6.335415,9.726305,7.271739,1.598196,-6.002196,-2.667072,-1.582263,-1.870718,1.608434,4.199071,4.864387,7.153925,-2.193337,-5.738878,-0.108405,0.857217,3.316247,2.126544,-6.405931,4.408059,-6.453319,2.062937,6.171986,-1.889704,-1.238936,-5.758517,-1.303302,-6.482220,4.841390,9.757357,6.884329,-3.592796,-1.474645,-3.419151,-7.837073,7.664076,7.519605,-9.757098,0.494765,-9.215919,-0.101419,2.382099,-8.325144,3.834014,-3.464208,9.905422,1.429973,7.223988,9.650207,9.590592,6.943679,-9.507973,9.777369,8.839906,8.132692,-3.702254,-5.135507,-1.082656,5.017744,-0.304278,3.666755,-7.399907,-2.010217,-5.746209,8.819727,3.239331,-7.345258,8.838862,-6.125678,-8.886145,-1.817629,1.017809,0.239319,3.942649,-2.254598,-5.648970,3.887795,-0.590139,-0.858327,2.094382,-2.228674,-6.865660,-5.985760,-8.265171,-4.553293,2.299526,-8.784433,-2.703005,-6.124010,-6.169136,5.512119,-7.948625,7.561182,-4.295079,6.062006,3.415755,4.526404,1.086306,-2.061830,-1.947971,-3.115907,2.559241,2.858093,-7.103481,-7.255948,-8.937881,-1.356737,-8.493014,2.605290,3.156583,6.019654,5.867377,1.499278,-4.443789,-8.739913,-6.397683,-3.051926,5.947535,6.006153,-6.037640,4.353721,-1.782427,8.086116,9.586836,1.144902,-2.308618,-2.371040,0.295019,-5.652405,1.002491,4.488705,7.467117,2.776891,2.629445,5.479056,-9.301771,-2.543101,-3.944406,-5.297988,-3.246666,-7.194521,-5.547905,-0.158340,-1.203967,1.972633,-6.427731,-5.456656,9.386763,-0.227991,-9.004511,-6.349832,-3.574152,9.732853,-9.561419,0.255748,-8.722175,7.016636,-2.032134,-2.326754,-7.490242,-0.398026,-8.169061,6.896621,-4.780473,-3.064953,0.973425,-9.409634,7.971910,-1.181043,1.374558,7.462891,2.589972,-7.855649,-9.933092,3.798124,-7.464256,6.064050,-8.974523,-0.729073,8.499918,5.053436,6.882951,-6.240390,-2.783861,8.880659,-7.918641,2.125506,8.727804,1.279236,-3.434108,6.345019,-1.664513,-0.227362,4.724806,-4.845935,6.683804,3.807978,8.162613,-1.696583,-9.356353,4.249101,-0.295791,-8.825530,-7.944924,3.091217,-9.731336,3.445166,-4.439360,9.797855,4.234897,-9.640179,-8.346910,2.698789,2.413710,0.621279,0.601600,8.720405,8.578871,-7.658219,7.802546,-2.709204,-4.298721,5.198350,8.337412,-7.189455,-3.144744,-4.811619,-4.783813,-7.497893,2.498465,0.747473,-9.325377,-4.723280,-8.361298,0.573618,-5.249388,-8.233162,4.962668,1.168655,-8.913593,1.892358,-7.461506,1.853509,-4.669757,8.469105,8.192314,-7.898815,8.646234,0.829709,5.387304,4.527322,1.279268,-5.491170,5.750472,8.120881,3.098447,-0.839985,-7.559541,-3.838145,2.516839,-7.912604,-0.524000,-4.080878,5.437973,-2.885592,-9.532170,7.739702,0.041319,4.056408,3.248755,-1.548416,5.605590,1.853314,8.588581,-7.342176,6.721328,8.398049,-0.098604,4.437664,-2.411224,-6.006715,0.849928,-1.862804,-7.975539,-6.467444,-0.790001,-6.929869,1.725635,-9.149748,-0.469451,-0.567592,8.028200,6.792033,7.360683,-1.956420,-4.466778,7.820682,-5.064849,-3.550305,4.215684,-8.751857,-1.343761,7.620329,-7.570420,-3.125527,8.871569,-8.033177,-2.204800,-4.819695,-4.833038,6.241115,9.195614,9.802923,-2.650615,-9.452572,-7.087988,-9.238396,-2.078484,-9.759606,2.314775,5.453659,0.772405,5.729863,4.070789,-9.405603,-6.540823,6.418483,-6.178526,9.661638,-0.804203,-8.987597,1.480223,3.599374,-0.125938,-1.030835,-1.353732,-0.485902,-6.078198,-9.696339,9.456801,8.504797,-9.568941,-4.587265,9.285286,-6.880415,2.474758,-7.797134,1.069050,-9.570054,-3.544602,1.003665,-9.267562,-5.590701,8.039369,2.778557,1.179874,8.247146,4.318320,-5.328832,0.303000,-3.936931,2.096738,2.946362,0.484978,4.613293,9.999260,-7.504953,-6.422418,-4.871424,9.094253,0.085049,-7.940391,3.993920,-6.840633,7.003123,-5.064562,-0.894183,-6.677840,-8.851963,-1.421200,3.088168,-4.134062,9.807435,7.715732,-5.526105,0.889662,0.147841,-7.712025,2.169026,0.455228,1.897825,3.667041,7.868681,3.006342,1.913611,4.924548,5.280428,-8.873426,2.764351,-8.398494,6.375993,5.519456,-3.622929,4.575244,-3.352726,-6.411647,-0.688657,1.771696,6.445251,4.454851,-7.375039,-7.505526,-4.713564,0.086867,-9.624873,9.649773,6.781681,-7.377152,8.246503,-4.437695,-9.102763,0.454863,-8.258788,8.339541,2.880648,-6.768336,4.187257,-1.649721,6.926280,5.143383,5.062644,5.314913,0.837672,-9.951691,5.685135,-5.680286,9.877720,-1.275269,5.924140,-5.922168,-3.688996,-5.266587,6.266703,5.807973,-5.981903,-8.898713,-8.562626,3.749200,5.081089,-9.904505,-6.064254,1.029705,-7.509280,6.016215,3.819845,-3.775109,-7.739863,2.306009,6.717943,-2.832861,-1.963075,-4.475373,2.263237,-1.883713,6.796147,1.874604,-0.584157,-2.276246,6.569338,-8.055761,1.778280,-9.386593,1.121823,9.095688,8.186895,0.645076,-0.364630,-7.346241,7.806362,-2.943042,4.829164,-6.683304,-9.021594,-1.196551,-6.872853,-3.897754,6.328688,4.012725,0.156557,-8.410961,-9.735912,-9.734710,7.956952,-1.207753,8.089770,5.973917,8.641428,-4.615981,-7.113089,2.495165,0.794960,-4.073366,-4.262595,-9.678984,-9.821969,-0.348821,-6.219311,3.609545,5.909238], dtype = "float64")#candidate|3379|(1120,)|const|float64
call_3378 = relay.TupleGetItem(func_1667_call(relay.reshape(const_3379.astype('float64'), [10, 14, 8])), 4)
call_3380 = relay.TupleGetItem(func_1669_call(relay.reshape(const_3379.astype('float64'), [10, 14, 8])), 4)
func_2422_call = mod.get_global_var('func_2422')
func_2425_call = mutated_mod.get_global_var('func_2425')
const_3387 = relay.const([[1.914795,-3.583857,5.109054,1.517758,-6.520122,-3.146957,4.127773,2.701821,-1.724142,2.423762,-8.124629,4.773272,-4.762623,-6.743329,-8.238028,8.632858,5.618971,9.026930,4.762844,-4.804700,5.207422,2.521679,-0.201877,1.514276,0.885798,6.305568,6.215948,-7.537604,5.869305,-2.861427,8.893320,6.787713,1.419657,-8.046153,-8.955761,5.082157,9.191181,-1.220674,6.169777,0.239219,-1.256013,-7.969433,5.429864,1.423495,-1.903271,8.097258,7.380640,-1.846874,5.368036,7.576487,-6.972067,3.384052,-9.309511,6.948837,9.197612,-4.437652,3.689829,0.214094,6.697859,1.637660,-8.503646,-5.920648,-8.038350,4.699522,2.310924,2.152384,9.391136,6.542109,-9.949908,1.413367,8.666715,-0.165947,-9.677661,-3.428003,-0.291965,0.509203,-4.128681,8.720456,3.692542,-7.245637,1.450280,-0.996629,-0.642761,-3.880345,-9.222696,-1.208010,-2.591775,-5.522446,-0.215434,-3.552155,-9.463808,3.879740,1.977931,8.706107,0.479773,4.086092,4.027267,8.310510,-0.452750,6.931890,8.921735,-6.578767,-0.469677,1.716406,7.230789,0.971962,3.447405,-1.402855,7.718393,7.158545,1.790469,-1.675805,-7.476780,-4.226194,3.461313,6.302668,3.242621,-5.809215,-2.608000,-1.167556,-7.018467,-6.128001,1.906645,-5.026459,-7.418112,5.224324,0.894649,1.746009,-8.855373,-1.669620,0.505375,-0.793886,4.908325,-6.333240,-4.249635,-7.867297,-6.684896,8.385721,5.221022,5.583260,4.071576,-7.059593,-4.143414,7.285907,4.824842,-3.059981,9.565069,-0.404025,-6.671794,6.237846,0.305748,8.578546,-4.853215,7.509641,-3.672093,5.735766,-4.659473,-4.373128,3.789461,3.577927,7.448437,4.977792,-5.430825,-7.916933,-7.181917,-8.496571,3.339111,-4.673123,-6.749957,8.591744,-5.263947,-1.466620,-6.156003,6.543650,-4.982923,9.669846,-1.998104,8.493647,-7.307728,7.824978,2.741689,-8.993066,5.561349,-8.718692,3.766808,9.150198,-2.273219,-5.652419,-3.302678,1.744413,-6.578460,7.003605,1.743956,2.355261,-1.521783,6.557789,-6.304049,-5.482072,-3.985099,2.962798,-4.665523,0.737144,1.325269,-8.206200,2.576289,-6.806309,-6.187287,-0.883181,-4.713232,3.238742,4.372992,-7.145587,-6.705544,7.152259,6.137327,-8.948874,2.550683,5.380597,5.821231,9.952058,0.295396,-6.553218,6.053523,0.521158,9.831663,-8.876396,9.568837,-6.396756,7.323663,-7.633228,7.773366,-2.335086,-9.803561,9.570997,5.539640,-4.192567,-0.598905,-6.233633,-6.986254,-3.697187,-9.462315,-1.397748,5.955682,-7.328034,-4.386619,-8.375828,0.228148,9.353143,-0.546413,-2.976576,6.839609,-9.071708,6.525298,6.265466,-8.074929,7.620132,-0.321683,0.384519,3.761681,-8.293789,-1.519838,2.493574,1.993067,-3.450392,3.176852,-4.688189,9.318602,-3.989815,2.534954,-4.848736,9.914408,7.422503,1.824219,-7.980573,-5.765639,8.867056,2.332787,-3.988421,4.366213,-6.469102,3.816522,6.154703,6.111941,-2.406087,4.512223,-3.102376,-6.400010,-3.917911,-6.674041,-3.044713,3.576341,-3.782772,-8.270133,9.115985,9.620041,-2.341006,-0.770306,1.921762,-8.616829,8.073204,4.590629,-8.857043,3.238570,5.547880,3.052689,-2.335361,9.106281,5.540860,0.763028,4.490411,-7.667343,-1.343507,1.451434,-5.909001,8.317538,6.078939,-9.711761,-1.485505,-9.410389,1.102998,-8.716915,-5.705216,-9.821659,9.830913,4.255051,-5.582796,9.663132,-4.942850,4.602550,-8.708615,-4.170281,3.466007,2.270732,-0.669075,8.210820,-0.157046,6.300481,-2.248356,-3.836026,-3.718197,-7.164829,-2.871611,9.979158,5.974690,6.184986,1.523973,3.723018,-7.145563,-4.491277,8.449375,8.174795,3.127955,-8.584478,-7.323094,-9.245871,-9.076621,-0.077152,-3.770149,-4.666495,-3.663160,0.595772,2.629887,-9.282748,1.560438,2.898544,-0.260748,-9.820909,7.162961,8.232422,-8.479126,-0.015412,3.317440,5.163099,-5.248311,2.990386,2.300495,-6.462817,0.881010,7.037734,-1.371266,7.887779,4.619012,-2.189333,5.490468,-1.189907,5.821128,-7.898715,1.514941,-9.109978,8.647327,-5.252304,-3.357847,-6.583272,7.057331,6.144001,-6.734513,1.250243,-2.804426,-9.848407,3.323897,8.028230,-8.819833,3.536952,2.261451,5.473605,0.398162,-4.656762,8.493301,-9.422673,-1.324564,-9.854726,-1.387191,-9.528700,8.046326,-1.622818,9.391684,-3.301079,-6.443711,-5.422337,1.949120,-6.268841,3.874735,7.116133,8.342595,-7.631059,3.473814,-5.984075,-5.690279,-4.390387,-6.554463,-2.881007,1.014568,4.316589,7.940256,6.078766,6.289258,8.819993,-5.132444,6.070919,-0.024683,7.557298,-0.853054,-2.979541,-5.015496,9.197494,1.848972,2.993930,-8.150500,-5.405057,-7.803229,-4.304568,-0.043626,-8.058740,-2.341862,-2.503713,6.704828,-6.459719,-0.910717,-9.561855,-3.957437,8.404629,-6.415972,-3.158950,9.729564,-8.540230,-7.124841,6.699398,-3.147996,-6.995971,-1.268376,-8.804686,-1.595397,1.824520,2.643582,-9.816551,2.651036,5.159604,-5.468793,-3.619439,0.200842,7.599276,-8.250296,-9.272642,-7.186971,6.454554,7.920511,5.593286,9.444883,-6.370766,-8.354308,-9.826614,-9.222355,9.669768,9.545894,-9.599157,-4.657244,-9.386154,3.372159,-7.915676,2.818625,-5.640875,2.029059,1.047939,-3.336657,2.550281,-3.928460,5.503193,0.667734,5.970164,-8.993503,3.112340,3.115133,8.326421,-8.812821,-1.325839,-3.319854,5.937425,-3.548848,-0.478486,-1.856605,-8.485024,5.059004,-4.586221,-9.184165,5.234046,7.208998,-7.504243,-7.229431,2.430585,7.636222,4.802250,-9.864198,6.489920,7.695836,-2.206587,1.082498,-8.703684,-3.042752,8.884155,-2.878443,2.937463,-5.137882,-5.074197,-0.439205,7.723938,1.583079,9.206012,7.166665,7.704847,-6.511924,0.287891,-1.532081,-9.766623,-4.495323,2.597118,-5.974562,-1.454077,-9.179015,6.964391,0.964801,-3.083341,0.917874,-4.808983,-2.147652,8.652116,9.616619,-0.224046,-9.330167,-1.825397,8.235577,1.745195,1.136678,-1.220769,-3.090691,-2.345868,-5.855127,2.353957,-4.681800,4.657187,3.202936,7.849630,7.841370,-5.026995,-9.404642,-5.895680,-2.119636,3.856140,4.068704,-9.229642,3.015468,4.585007,9.813261,-4.814455,0.557943,7.744813,-8.110073,1.441078,-8.462940,-9.471501,2.100842,-9.990958,-4.514033,8.174022,0.506290,-1.151426,-4.459323,1.950787,-8.031602,8.941042,8.810262,-8.205481,3.596061,7.431370,7.787751,-7.697945,-3.122595,-6.175244,-0.972580,-1.178802,7.364641,-8.249572,6.863060,-3.378277,7.767269]], dtype = "float64")#candidate|3387|(1, 624)|const|float64
call_3386 = relay.TupleGetItem(func_2422_call(relay.reshape(const_3387.astype('float64'), [624,]), relay.reshape(const_3374.astype('float32'), [14,]), ), 6)
call_3388 = relay.TupleGetItem(func_2425_call(relay.reshape(const_3387.astype('float64'), [624,]), relay.reshape(const_3374.astype('float32'), [14,]), ), 6)
output = relay.Tuple([uop_3366,call_3372,var_3373,const_3374,call_3378,const_3379,call_3386,const_3387,])
output2 = relay.Tuple([uop_3366,call_3375,var_3373,const_3374,call_3380,const_3379,call_3388,const_3387,])
func_3396 = relay.Function([var_3365,var_3373,], output)
mod['func_3396'] = func_3396
mod = relay.transform.InferType()(mod)
mutated_mod['func_3396'] = func_3396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3396_call = mutated_mod.get_global_var('func_3396')
var_3398 = relay.var("var_3398", dtype = "float64", shape = (3, 16, 15))#candidate|3398|(3, 16, 15)|var|float64
var_3399 = relay.var("var_3399", dtype = "int64", shape = (8, 16))#candidate|3399|(8, 16)|var|int64
call_3397 = func_3396_call(var_3398,var_3399,)
output = call_3397
func_3400 = relay.Function([var_3398,var_3399,], output)
mutated_mod['func_3400'] = func_3400
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3513 = relay.var("var_3513", dtype = "bool", shape = (4, 1, 10))#candidate|3513|(4, 1, 10)|var|bool
var_3514 = relay.var("var_3514", dtype = "bool", shape = (4, 14, 10))#candidate|3514|(4, 14, 10)|var|bool
bop_3515 = relay.logical_or(var_3513.astype('bool'), var_3514.astype('bool')) # shape=(4, 14, 10)
output = bop_3515
output2 = bop_3515
func_3525 = relay.Function([var_3513,var_3514,], output)
mod['func_3525'] = func_3525
mod = relay.transform.InferType()(mod)
mutated_mod['func_3525'] = func_3525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3525_call = mutated_mod.get_global_var('func_3525')
var_3527 = relay.var("var_3527", dtype = "bool", shape = (4, 1, 10))#candidate|3527|(4, 1, 10)|var|bool
var_3528 = relay.var("var_3528", dtype = "bool", shape = (4, 14, 10))#candidate|3528|(4, 14, 10)|var|bool
call_3526 = func_3525_call(var_3527,var_3528,)
output = call_3526
func_3529 = relay.Function([var_3527,var_3528,], output)
mutated_mod['func_3529'] = func_3529
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4134 = relay.constdtype = "float64")#candidate|4134|(16, 16, 16)|const|float64
var_4135 = relay.var("var_4135", dtype = "float64", shape = (16, 16, 16))#candidate|4135|(16, 16, 16)|var|float64
bop_4136 = relay.floor_mod(const_4134.astype('float64'), relay.reshape(var_4135.astype('float64'), relay.shape_of(const_4134))) # shape=(16, 16, 16)
output = bop_4136
output2 = bop_4136
func_4145 = relay.Function([var_4135,], output)
mod['func_4145'] = func_4145
mod = relay.transform.InferType()(mod)
mutated_mod['func_4145'] = func_4145
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4146 = relay.var("var_4146", dtype = "float64", shape = (16, 16, 16))#candidate|4146|(16, 16, 16)|var|float64
func_4145_call = mutated_mod.get_global_var('func_4145')
call_4147 = func_4145_call(var_4146)
output = call_4147
func_4148 = relay.Function([var_4146], output)
mutated_mod['func_4148'] = func_4148
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4582 = relay.var("var_4582", dtype = "uint16", shape = ())#candidate|4582|()|var|uint16
const_4583 = relay.const([[[-5],[-8],[-8],[4],[6],[9],[-7],[2],[-8],[1],[-3],[5]],[[-2],[-8],[3],[2],[-2],[10],[7],[-5],[-1],[-1],[-5],[4]],[[7],[-5],[4],[4],[4],[-9],[-5],[-9],[-1],[9],[3],[1]],[[6],[4],[-6],[-7],[6],[5],[-2],[3],[1],[3],[3],[3]],[[10],[-2],[-5],[7],[-6],[5],[1],[-4],[3],[-4],[8],[-1]]], dtype = "uint16")#candidate|4583|(5, 12, 1)|const|uint16
bop_4584 = relay.bitwise_or(var_4582.astype('uint16'), const_4583.astype('uint16')) # shape=(5, 12, 1)
bop_4592 = relay.less(bop_4584.astype('bool'), relay.reshape(const_4583.astype('bool'), relay.shape_of(bop_4584))) # shape=(5, 12, 1)
output = relay.Tuple([bop_4592,])
output2 = relay.Tuple([bop_4592,])
func_4598 = relay.Function([var_4582,], output)
mod['func_4598'] = func_4598
mod = relay.transform.InferType()(mod)
var_4599 = relay.var("var_4599", dtype = "uint16", shape = ())#candidate|4599|()|var|uint16
output = func_4598(var_4599)
func_4600 = relay.Function([var_4599], output)
mutated_mod['func_4600'] = func_4600
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5152 = relay.var("var_5152", dtype = "bool", shape = (10, 11, 2))#candidate|5152|(10, 11, 2)|var|bool
const_5153 = relay.const([[[False,False],[True,True],[False,False],[False,False],[False,False],[False,True],[True,True],[False,False],[True,True],[True,True],[False,False]],[[False,False],[True,True],[True,False],[False,False],[False,False],[True,True],[True,True],[True,False],[True,True],[False,True],[False,False]],[[True,False],[False,False],[True,True],[False,True],[True,False],[True,False],[False,False],[False,False],[True,False],[True,False],[True,False]],[[True,False],[False,True],[True,True],[False,True],[True,True],[False,True],[False,True],[False,False],[True,True],[False,False],[True,False]],[[True,False],[True,False],[False,False],[False,False],[False,True],[False,True],[False,False],[False,True],[True,True],[False,True],[False,False]],[[True,False],[False,False],[True,True],[False,False],[True,True],[False,False],[True,True],[False,True],[True,True],[True,True],[False,True]],[[True,False],[False,True],[True,True],[False,True],[True,True],[True,False],[True,False],[True,False],[False,False],[True,True],[True,True]],[[False,True],[False,True],[False,True],[False,False],[True,False],[False,True],[True,True],[False,True],[False,False],[True,True],[False,False]],[[True,True],[False,False],[True,False],[True,False],[True,True],[False,True],[False,False],[True,False],[True,False],[False,True],[True,True]],[[True,False],[True,True],[False,False],[True,False],[False,False],[True,True],[False,False],[True,True],[True,False],[False,True],[True,False]]], dtype = "bool")#candidate|5153|(10, 11, 2)|const|bool
bop_5154 = relay.logical_or(var_5152.astype('bool'), relay.reshape(const_5153.astype('bool'), relay.shape_of(var_5152))) # shape=(10, 11, 2)
func_166_call = mod.get_global_var('func_166')
func_168_call = mutated_mod.get_global_var('func_168')
var_5160 = relay.var("var_5160", dtype = "float64", shape = (14,))#candidate|5160|(14,)|var|float64
call_5159 = func_166_call(relay.reshape(var_5160.astype('float64'), [14, 1, 1]))
call_5161 = func_166_call(relay.reshape(var_5160.astype('float64'), [14, 1, 1]))
output = relay.Tuple([bop_5154,call_5159,var_5160,])
output2 = relay.Tuple([bop_5154,call_5161,var_5160,])
func_5163 = relay.Function([var_5152,var_5160,], output)
mod['func_5163'] = func_5163
mod = relay.transform.InferType()(mod)
var_5164 = relay.var("var_5164", dtype = "bool", shape = (10, 11, 2))#candidate|5164|(10, 11, 2)|var|bool
var_5165 = relay.var("var_5165", dtype = "float64", shape = (14,))#candidate|5165|(14,)|var|float64
output = func_5163(var_5164,var_5165,)
func_5166 = relay.Function([var_5164,var_5165,], output)
mutated_mod['func_5166'] = func_5166
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5431 = relay.var("var_5431", dtype = "float32", shape = (13, 15, 7))#candidate|5431|(13, 15, 7)|var|float32
uop_5432 = relay.sin(var_5431.astype('float32')) # shape=(13, 15, 7)
uop_5445 = relay.asinh(var_5431.astype('float32')) # shape=(13, 15, 7)
func_679_call = mod.get_global_var('func_679')
func_684_call = mutated_mod.get_global_var('func_684')
const_5455 = relay.const([6,-1,-3,-9,3,-10,9,-8,5,-9,-2,5,-1,-4,-8,5,6,4,6,6,9,-4,3,-3,10,3,1,5,-8,4,-3,-1,4,-10,1,10,4,-8,-7,-5,5,6,-7,9,-1,3,-2,5,-2,-8,3,-2,-1,-3,-3,5,4,3,4,7,5,-9,6,2,-9,10,-8,8,-5,10,-7,6,-6,-5,9,6,-3,10,9,7,2,-1,-10,-4,9,-2,8,-10,-7,7,-8,-1,-7,10,4,-5,5,-9,-6,9,-8,4,1,2,-8,5,1,-6,-6,4,6,-8,-9,5,1,-3,-6,-5,-10,4,-6,-5,-4,5,9,-2,3,5], dtype = "int64")#candidate|5455|(128,)|const|int64
const_5456 = relay.const([7.721632,9.209092,7.120248,6.198153,9.985701,-1.420546,4.695719,-8.909440,0.425871,-0.321999,-8.579568,2.943591,1.796141,7.200285], dtype = "float32")#candidate|5456|(14,)|const|float32
call_5454 = relay.TupleGetItem(func_679_call(relay.reshape(const_5455.astype('int64'), [8, 4, 4]), relay.reshape(const_5455.astype('int64'), [8, 4, 4]), relay.reshape(const_5456.astype('float32'), [14,]), ), 6)
call_5457 = relay.TupleGetItem(func_684_call(relay.reshape(const_5455.astype('int64'), [8, 4, 4]), relay.reshape(const_5455.astype('int64'), [8, 4, 4]), relay.reshape(const_5456.astype('float32'), [14,]), ), 6)
func_4145_call = mod.get_global_var('func_4145')
func_4148_call = mutated_mod.get_global_var('func_4148')
const_5460 = relay.const([-0.374386,1.979643,8.936701,6.546892,6.957560,-6.069982,9.434737,-0.032248,-2.031915,2.706583,-1.727815,7.334037,8.658391,-1.128142,-4.403819,5.038678,-7.717889,9.787993,2.864650,8.406781,4.450173,4.254362,7.542979,-7.001340,0.558626,6.916771,-9.635445,-6.774389,-7.111700,-0.512774,-4.340729,3.651162,-4.282497,2.010958,3.979485,3.433622,-2.134662,0.852100,-4.537259,2.155992,-6.237887,3.416448,0.560178,-1.173746,8.468991,4.326139,2.589137,-9.787689,4.395209,2.615318,-4.144724,5.250112,5.378584,-3.584847,-7.928553,-0.891478,1.225235,5.250500,7.488714,-9.685392,7.818422,-5.036957,-5.262720,-4.231910,-9.218505,0.470514,-5.935097,7.500895,0.132406,8.582859,-6.564483,-4.647659,-6.505036,-1.566076,-7.501188,-7.805926,-0.979575,-0.242471,4.760930,-5.032696,-7.609354,-8.794498,5.291655,-4.313097,9.704135,-2.644822,6.364184,2.036162,8.951785,5.605482,-8.153411,6.901166,2.021417,-9.102310,-7.299407,-1.026415,-0.764829,-4.483288,8.382847,-0.205282,-9.548529,-7.497127,-5.764433,2.507653,9.821586,5.135006,-1.838125,4.049580,-6.660192,-4.726243,-2.805716,9.119133,8.695614,-2.146445,-6.738788,-6.765574,-7.654480,1.002489,-0.997738,-4.391787,7.242545,-3.003964,-6.614882,5.192976,0.292707,8.931165,4.038594,-8.982655,-2.597142,3.531454,3.132583,-7.215320,-5.388685,-5.307119,-2.683905,-4.940046,-1.877177,-5.677792,-4.083285,8.805507,9.067434,-8.495393,4.086289,-0.877098,6.355468,2.045419,8.164206,-2.031304,6.013153,-3.377317,0.347972,2.154832,8.836177,-2.114888,-1.565552,9.774890,8.269858,-4.869562,-4.312779,-3.697078,-1.937465,2.797217,3.832655,2.515417,-9.991352,7.084747,-5.304907,-5.376944,-5.125102,-0.379811,-6.866387,-5.753165,5.593066,8.908596,0.435192,1.291683,3.706889,7.176119,2.749237,8.319025,1.187717,0.206789,5.684251,2.684636,1.511753,-0.647981,-4.122871,4.748805,1.107440,9.720268,-0.616678,-5.776114,5.125193,5.136010,-9.474070,8.449375,9.253678,-8.246434,-0.756024,-5.487073,1.884166,4.645481,8.873429,7.166131,0.946093,-4.527550,1.980151,8.312297,-5.675254,7.207702,4.089922,-6.810975,-3.176665,-2.459301,7.381107,-4.737062,7.700925,-6.788190,-5.035760,-3.189927,-5.830519,6.359988,0.542298,9.951738,8.421673,2.889399,2.346769,6.266418,-8.499533,-2.879916,-5.400288,-3.285495,-1.498364,6.506482,-7.283745,0.285336,-3.662992,-2.922775,8.892875,0.348508,7.484452,-8.786467,7.644613,-8.452339,9.996319,2.253055,1.782893,2.223612,-3.619184,-6.442098,-2.416113,4.238930,-9.786096,8.849371,5.746101,8.376724,7.627630,9.014483,8.048609,-4.196487,-2.587238,7.689090,4.644275,-5.631484,1.563678,-6.683014,-0.144650,-9.173541,0.261056,-0.311139,-0.999174,7.951406,1.222365,-2.153995,-3.161511,9.459259,-3.823681,-2.102206,-3.872242,7.386572,1.879590,0.288587,-8.538697,0.496038,7.941662,-4.311738,3.407814,6.033887,9.071062,0.422085,-7.920996,-1.260381,1.341836,-0.370963,9.730961,7.112206,0.221897,-9.470570,-1.308624,-9.567788,-6.703169,-4.577822,-6.055915,-5.101634,3.009333,-0.263665,5.358403,8.872259,0.444604,-1.685932,6.079351,-1.972149,-3.735625,-3.692945,-0.654956,4.477471,-6.442114,-3.752383,7.624888,-9.109535,-2.558153,2.203284,5.331171,0.103398,-9.525913,-2.042683,9.835890,9.317841,1.485586,9.439476,-0.499882,-7.606741,-4.013446,6.400948,-6.086500,-7.100684,-7.466760,-0.535035,-2.163938,3.147866,2.142531,0.051836,-3.923765,-6.829025,-5.153544,1.015043,-6.479525,6.095876,-7.221513,2.163327,-8.974564,5.665729,4.227313,2.037026,9.024673,-2.602635,-5.286078,-1.985079,-9.291742,-8.295792,-9.836290,5.564603,-0.699995,6.816757,-0.489769,5.000272,-6.700017,3.234727,-2.147555,-8.273350,4.871039,-7.995475,-8.964422,-4.087414,3.292951,9.014751,-4.648891,7.210603,-0.330989,4.631655,3.619824,6.470007,-2.521665,4.623983,8.853977,-4.517571,-0.301264,-2.824690,0.842231,-0.227617,-6.442553,-9.870800,-3.768829,9.412306,-9.370963,8.933282,3.382913,-9.927298,-3.317405,-0.421529,4.756016,-4.699116,4.416698,-6.773114,-0.995275,3.620119,-0.125432,5.333401,5.970722,8.013466,-0.240393,0.987769,-3.120208,3.927649,2.504360,-6.085665,-5.311208,5.197357,-4.717356,0.417232,-6.201038,6.559192,-6.221360,9.574904,8.424299,-3.883370,-0.721624,6.999156,8.466692,7.206095,-1.865366,7.375835,-7.283897,-5.067527,-2.173090,9.222863,-9.428288,4.919805,-7.573540,7.636788,-5.919448,0.863829,3.328714,7.040299,0.995035,-5.961183,-5.134131,-4.233210,-3.870209,2.931579,-4.616267,2.294931,0.596711,-2.415163,9.756055,8.358242,4.253018,-4.237039,7.474428,2.165862,-0.959672,-7.088768,4.380243,-3.088306,3.675349,-0.818047,-3.508900,9.751911,-2.602708,8.742564,8.055525,0.671904,1.442937,5.256437,7.300260,5.438762,-4.056111,7.362211,1.398132,7.486412,0.896073,-9.923873,5.346174,-2.073792,8.197377,-9.986315,-7.713436,5.503000,9.262768,8.586629,1.082172,6.131943,-8.392429,8.588314,-5.694405,8.981455,-8.539952,7.671481,8.870739,-7.994332,-0.126323,5.475799,-0.491252,-6.046258,4.008720,1.555534,5.495877,9.291339,5.741975,8.844461,1.563132,1.965267,-3.434367,-9.817703,-3.993091,7.034088,0.248600,-0.502602,6.424086,3.677970,-4.758559,-6.484464,5.281921,2.806542,-6.257915,-4.555414,9.387689,-0.746858,2.324560,3.164366,6.661180,-5.494258,3.932326,-1.903673,2.815925,-9.369877,-6.303889,2.651927,-8.741505,-5.927842,9.659452,-8.567956,8.213440,7.219689,1.721367,-8.271173,1.067020,2.469340,8.477547,1.312396,-7.871332,-7.592881,-6.072333,-4.625044,7.868822,-6.820530,-7.515371,8.560585,3.029218,-9.089532,-8.844467,0.898535,7.577244,-5.161668,-2.871089,5.427350,7.789341,-6.388926,-1.143020,-5.546362,6.318720,-8.739663,-6.971233,0.871886,-3.855308,-2.557507,4.916250,-0.711810,0.132791,2.931847,1.183930,-7.590607,8.688399,-0.189983,4.012901,2.422138,6.064264,-9.335607,8.214816,8.961297,0.111904,-7.582888,5.510114,3.103857,-7.972866,6.574947,-4.252080,-5.911626,-3.835270,0.424803,-4.427855,-2.137106,-5.852684,9.272332,5.300991,-2.701284,-1.683856,5.386941,0.211850,-5.156309,7.621904,1.609857,6.727853,7.136439,4.744533,-8.430981,2.709444,4.747026,2.027858,-9.818956,-4.119584,-8.503124,8.328687,-7.948532,-6.513631,-9.676344,-7.872606,5.344710,-3.721775,4.206649,1.664582,0.712367,5.134806,3.648619,3.431299,9.075160,-2.384819,-0.522799,6.181334,-5.911767,-0.725370,0.956379,8.082398,-7.333825,-1.186013,6.659097,6.488891,-3.057605,8.466010,-8.908787,0.157887,-1.121667,3.229151,-3.092447,-0.735348,-5.896278,1.844008,3.096463,3.714335,-5.504926,-6.792007,7.887814,-1.335434,-4.535385,5.048162,-1.479858,-2.878504,-1.305975,-0.416730,-1.879558,-8.549555,2.256376,-4.594162,-9.214088,-3.150983,7.420166,-1.016012,1.715321,1.014583,-0.197630,-0.150047,9.477719,-3.075820,-3.020274,-4.193056,8.078129,6.686135,6.043481,9.779066,3.038113,-4.815137,-2.907546,-5.273430,-3.005834,2.823555,-8.659369,5.915405,-5.870176,-5.200165,-9.703242,8.892655,4.893421,-5.565628,4.829507,-6.279016,-3.528366,4.402124,7.148465,-2.083723,1.812829,-7.403259,1.365018,-1.049550,4.828416,-4.124935,8.364997,4.622900,-3.388659,5.451797,-4.457061,0.804494,3.065118,8.010520,-6.959620,-6.667733,-6.324146,4.193995,-5.249440,0.055584,-4.115970,-3.639219,-5.756542,-1.832958,8.967995,-0.714079,3.366138,-7.408431,-5.267206,3.698553,4.713426,0.850142,0.670666,4.573648,-9.886081,5.970453,-0.145279,-3.935312,-8.057423,-2.350313,6.236140,0.053660,-5.079285,9.011787,0.918444,6.447255,-2.733981,-6.007136,3.110537,9.297037,0.196226,5.873990,-1.287247,-0.698164,-7.649187,4.281227,2.373691,2.941817,-5.173452,-0.999724,7.133415,3.390557,-1.921465,0.999623,9.896249,9.834109,-2.575603,5.555894,3.370997,1.318863,-5.176779,6.652241,6.813378,6.934684,5.612654,6.013372,7.317750,-3.388659,4.986309,3.082873,-7.903281,8.972635,0.513826,-6.955792,-3.931722,5.445519,-3.523760,-5.643216,8.941411,7.700082,5.142432,3.918282,9.543670,8.336641,-3.624404,-1.226451,8.013798,4.836800,-9.469451,5.778558,9.083626,7.682494,2.751079,6.406228,4.328681,3.600980,1.364456,7.244465,-8.230061,2.726555,9.258306,-8.325944,3.945700,-6.084109,0.472071,-8.067120,-1.020383,-3.145969,9.900343,-0.940382,-5.702930,-4.360012,-5.009788,6.291836,-0.380426,3.063335,-9.493880,-5.115521,8.178422,2.552124,9.363595,3.642689,0.188356,4.238847,7.566900,4.724462,-6.500683,-9.752889,8.786809,0.879250,-7.293015,2.352339,-2.851600,6.895209,-2.243231,-8.199894,-6.389926,8.760718,5.011105,6.064855,-0.876560,7.981124,-7.525648,-5.178992,8.264554,0.930139,-5.721529,-2.718006,-1.696660,5.126639,-5.039447,-0.406440,9.978191,-3.590178,6.119822,-0.820709,-2.106581,-3.340261,8.201991,-2.666765,-4.023698,-2.258681,-0.435269,-2.506366,-5.861994,-8.821219,9.027440,-3.659424,-3.706364,-1.129030,-8.056053,-2.955140,-7.163713,3.121735,5.192799,-2.782595,3.355704,-0.204573,9.432334,-6.151667,-6.496954,-0.641123,-2.529641,7.555603,1.357975,-3.904349,-2.236201,-5.131005,7.381574,-0.144715,5.469125,-5.377154,7.470113,-0.209201,6.307842,2.139150,2.748233,-0.926387,-7.878904,2.091397,5.110013,4.598108,-5.804289,-4.031868,5.531583,-7.375426,2.565612,0.515403,7.851088,0.857254,-6.682530,8.680408,-1.925502,9.158439,7.399165,-9.609312,-6.237486,-5.722333,5.515600,-9.618107,5.647428,5.420198,-1.743028,7.903196,-3.164810,-9.074556,8.880524,2.029077,8.612643,-6.940300,6.601010,9.589870,-1.890034,-8.634125,-0.071553,-4.884516,6.000222,-5.842160,-4.567983,8.656625,-4.522816,-7.447319,8.544713,5.056155,-9.791978,2.635082,-9.622365,-0.283915,-4.477398,-4.071812,7.940166,-3.063994,-5.889295,-7.560915,3.686405,-2.570226,-1.599453,6.398747,-0.328189,-4.004113,4.360689,-6.099083,2.946394,-6.564494,5.670598,-3.436615,-0.273387,2.000820,-9.422549,7.840298,5.828364,0.946341,-8.175875,-0.666407,-5.208713,-8.066492,-7.440599,7.473353,6.314781,-0.261216,9.396073,4.516137,1.820864,-7.365889,9.399672,5.860408,3.797396,-6.327856,-7.753623,-6.271498,9.824872,-2.418697,1.496624,0.424563,7.103511,0.328164,5.327642,-9.856920,6.133386,-4.967951,6.532436,-6.261039,-7.907545,-4.931563,3.077526,4.098395,6.969978,-5.709849,-6.595102,1.356439,9.933405,-2.268827,-7.356689,-4.724307,3.144704,-0.412524,-4.846854,-3.862752,2.912759,1.451754,9.222652,3.929000,-8.744090,-1.240518,-7.909349,6.302729,-1.533895,-2.138604,-8.521715,1.502609,2.435846,-8.132931,-5.948329,-3.658632,-9.945668,-8.465612,8.063225,-5.910806,7.824814,-5.325034,9.770241,-8.110671,0.933889,-4.547324,4.226234,0.111155,5.510436,-6.977066,-2.669497,1.086689,2.417195,8.933855,6.840078,-9.763585,-3.901545,-9.846150,-3.351146,3.299619,1.429620,-2.144935,3.901828,1.576715,5.005420,-4.969018,0.758872,-3.181896,4.269664,0.565936,-5.489721,-5.291296,-6.733355,-3.610091,5.759112,-5.557623,9.345618,2.888469,-4.599741,5.909168,-2.132031,-2.901878,2.234452,-0.518720,-8.628016,3.891489,-7.458064,4.298730,8.967541,5.404965,5.067350,1.929385,-5.336594,-1.063626,-2.958931,0.876815,6.146122,-3.871136,-1.933029,-1.618786,-6.768143,6.933000,2.964145,8.443888,-5.478473,2.779375,-5.616281,-0.009791,1.062630,8.710118,-6.537898,-9.960146,-5.137004,-1.360162,-4.667783,3.037850,0.072868,7.659269,0.715392,5.315411,6.013460,-5.196218,1.051595,7.869224,8.649852,-1.255313,1.329367,1.853983,1.249828,-2.133636,-6.360988,-9.846179,1.046296,-2.792281,-5.374786,-3.374663,-8.979044,0.589243,-4.222501,-3.117996,-1.283838,9.843672,-1.178827,0.699405,2.152500,8.574446,-3.617054,2.598067,3.755652,-0.858737,7.032081,5.119747,6.604043,5.465434,9.120226,6.543461,5.141650,2.584110,-5.344219,3.120349,0.634231,5.262119,8.429534,3.773955,8.730245,-2.017586,-8.240193,-3.798040,5.469581,5.235558,-6.765282,-1.978248,-3.363124,0.352120,-3.505993,-8.484301,6.074903,0.376670,-2.119654,6.965864,0.462769,-8.335752,2.451212,6.441672,-1.649813,-4.580651,-6.402134,-6.860725,-3.766707,1.115325,5.003206,-3.795331,2.993232,1.887310,-5.530729,4.454174,-5.216218,-2.057993,3.691863,-9.960382,-2.980249,-7.980960,8.000237,8.147680,-2.723925,9.461257,-2.817097,-8.679117,0.138304,7.135729,-4.786595,8.416167,-4.681422,-8.852655,-9.630470,-3.733956,1.532946,5.545243,1.466328,9.029604,9.583018,5.656572,-3.651926,6.633902,8.671293,-7.711011,-4.350238,8.689773,2.678892,-1.701240,-7.845973,-2.074273,4.661510,8.104650,4.817984,-9.215143,8.425457,-0.990523,4.865828,9.633860,2.633083,-8.799192,-9.994149,-4.105021,3.672733,6.060734,0.507776,-8.698842,3.159595,-2.129678,-9.281104,3.112837,-3.644109,2.873799,6.052194,9.428775,-0.178299,-7.097215,2.069656,-7.143723,7.923268,-6.422060,-2.087280,4.993220,-2.938467,-5.952387,-0.835665,-6.120592,0.491129,-4.351510,8.743580,1.809997,0.460548,-8.311636,7.572177,-3.324307,-9.157212,0.985017,4.849963,-6.422266,-5.546130,-0.424988,-8.958911,-2.644318,-4.205401,-0.986081,-3.598468,-8.774821,-0.630224,-9.469320,1.187061,-0.257221,0.262806,-9.183543,1.245180,6.651023,0.029990,-1.648613,-9.771484,-7.291011,-0.791116,-0.523132,-6.879781,-4.909732,9.419862,-0.890330,2.446806,-1.491071,3.695164,3.603854,2.512679,-4.423975,-8.657555,-8.691399,9.299173,-1.945075,-7.384275,-7.144800,1.634008,7.951707,0.538468,6.580720,-1.928023,-1.398028,3.091597,-7.831447,-4.689832,5.980729,-6.521693,3.317466,-4.588416,4.563569,0.469743,-2.715176,-2.815014,2.290127,6.979933,6.582032,4.324199,8.944879,1.093263,6.222199,1.933567,1.691679,2.260118,1.686653,-7.617465,-7.647960,7.886384,-0.082554,-8.964820,1.691266,-0.056154,5.638204,-8.824167,-8.481235,8.308438,2.306591,2.041552,-6.503250,-0.912214,-6.734929,-7.399980,-5.779967,3.584376,8.541665,-4.815280,-0.303328,5.617500,-4.150618,-9.222327,-0.618098,7.461620,-6.130548,-6.376670,0.403601,3.273952,2.248758,-7.987288,5.551809,-2.080180,7.444148,4.070933,7.411373,6.459330,3.363107,1.250899,5.475110,5.599508,1.191122,-1.565288,-5.418280,-9.883664,7.773161,7.631942,0.463805,-3.537438,5.537945,-1.891385,-5.903891,-3.847452,0.589467,1.606388,-4.293300,9.475750,-2.244812,-8.959583,3.857763,-6.366579,5.989233,9.687959,2.135114,8.167425,3.530651,-9.725737,-2.251232,8.677371,-1.920866,-3.269252,-7.855403,-8.287268,-9.849089,4.935175,3.037222,-1.321885,-4.934877,5.249778,8.532747,-4.254879,-2.011186,2.283354,9.233769,1.311139,1.860379,6.544726,2.592955,6.381840,-1.325877,9.437259,-9.021113,1.825122,2.026278,2.748350,1.589220,9.982598,-9.309016,-2.522735,-6.185675,0.147716,-1.377316,4.510558,-3.749252,3.680993,0.175762,-9.730615,-3.248360,-4.716349,3.921797,2.385414,3.076971,-0.662550,0.561383,-9.711130,-1.816718,1.875252,-0.237485,-1.703002,8.874005,7.521896,-7.791086,0.448158,1.950896,-1.810643,9.566656,-7.321182,2.674184,-4.387303,7.310666,-7.588009,-2.797834,-2.779408,-4.249550,1.956585,-3.721965,-7.165949,-4.697158,-9.574746,-6.057285,-1.500502,-7.240691,-9.143231,-1.911616,-8.917744,0.277158,4.814615,-1.710089,-2.898850,7.599058,2.869534,2.732120,-5.974791,9.945233,0.579032,-2.980247,0.215727,-6.252925,-5.155302,-1.261596,7.997261,5.968380,0.738416,-1.436634,-0.474025,5.852203,-7.695623,7.643807,-7.008472,9.980967,-1.072723,-0.766160,-9.127370,-7.708206,1.980004,2.721270,-4.194142,8.912519,-5.549153,-4.113631,1.918934,-6.331820,-2.683315,1.096508,-5.947794,-7.958898,-8.339044,-4.698963,-4.474421,8.177444,1.349244,-7.262073,6.846301,0.559613,3.667606,-7.873111,4.344448,-2.921401,-0.228808,2.151763,-6.439508,-3.320555,-9.107498,7.475803,6.410441,-1.701030,8.562907,-4.526536,-3.874252,9.714524,0.630220,1.232888,-9.272247,-6.505425,9.073121,-8.198845,-7.993009,-9.777791,2.131830,6.660706,-0.591640,-2.784311,-8.630436,-9.441658,-3.379147,-3.540437,1.911197,4.639404,-0.856548,-9.499126,1.165394,1.576592,7.861845,-9.441864,-5.823950,0.589671,0.841632,-3.792342,0.917723,-4.164624,-6.295632,1.219790,-1.403180,-9.375117,6.383612,-8.881061,5.891988,-9.510377,1.081613,2.875878,-5.825376,-5.509345,-2.259049,1.773907,1.556929,-3.997432,-8.245454,2.898255,-6.087892,1.702116,0.815554,-0.939411,-1.265025,7.172664,4.125404,8.754118,-3.538904,2.630107,-1.841999,-4.713827,-0.915315,-3.235507,-5.151240,-4.102160,5.600485,-4.537919,5.095009,2.952131,9.696953,-5.719393,7.795393,-8.303739,8.054767,5.701126,-5.989265,-6.201720,-7.165267,-6.922031,-9.030851,0.523769,-7.111008,-4.713775,-3.894967,1.262187,7.281271,-9.128583,4.364873,-4.035058,-4.514765,2.614751,9.211720,5.809805,-5.980350,-2.755793,-0.426584,-9.305745,-0.509939,6.031514,-3.764445,-9.620554,-6.704987,-7.042320,-6.991521,-1.218008,-3.976682,7.327099,0.592618,6.615732,-9.899318,4.260712,2.296030,-7.924532,-2.161695,-1.635056,-8.590349,-1.491547,0.595590,0.546891,5.058894,-1.742327,4.704569,1.924539,1.255362,-1.067231,2.639276,-8.611632,6.287094,-3.733884,-1.879308,-4.342303,8.647397,4.248352,5.025260,-2.783214,2.419180,9.466628,5.254586,6.993577,7.710067,-8.650337,9.677340,-9.966490,6.671179,4.049259,5.736955,3.397007,-9.701004,-1.707131,2.112727,1.821474,6.471949,5.234278,0.972623,7.467313,-9.054347,9.744367,9.779838,-5.901982,-9.390988,-1.542188,8.694300,8.489149,0.331578,7.185948,-8.818511,4.075227,8.773119,-2.210596,8.982765,-7.881502,-8.305762,-0.196411,1.267782,-6.351524,-9.884889,0.516015,-9.778451,7.800693,-6.811980,-7.371137,0.037796,9.678301,-1.046966,-5.676059,3.952659,1.950218,-8.437513,7.246917,-8.375014,-9.700075,0.209025,-0.438681,-0.793441,4.492359,9.719785,1.856972,9.056732,5.279084,5.194536,2.932629,-0.483924,-5.694988,-1.766695,-0.261560,1.556122,8.334082,4.688952,5.848558,-7.137192,-3.299045,-7.887374,-3.250959,-0.402360,-4.448692,3.732083,2.004345,-2.882482,8.891036,9.281179,-8.322094,-1.065396,2.305457,3.818687,8.843535,6.230061,4.096349,9.905452,9.099051,-7.485037,6.582541,-3.010773,8.578519,-3.221414,7.307084,0.923990,1.647638,-7.073388,3.431927,8.629917,1.689621,-2.521589,-3.380841,-8.801452,-5.873731,1.491505,3.119579,-4.817047,7.336677,5.954301,-6.655054,-7.322510,-9.330201,6.242998,-4.689776,-9.017697,8.991022,3.598223,-7.491795,-5.278344,-1.309690,5.707152,4.225484,-2.173538,-1.563758,3.652741,-8.816314,-5.297066,-0.287433,-7.478384,-7.152297,-1.087382,-7.043225,-8.923366,-6.067597,3.943101,-9.248398,-0.958443,-9.932264,-3.376007,-0.124371,7.901532,0.174236,4.992004,2.645615,4.794808,-3.645091,-0.868410,2.388227,5.650320,8.419784,-7.969737,3.625921,6.256494,3.767613,5.699309,0.319246,5.047790,-9.402800,5.089462,-0.710235,-6.394312,-8.725236,8.583014,2.171004,2.460869,0.812837,-4.267054,-5.529566,-8.985522,-0.925818,9.478242,7.969677,-0.322429,6.638089,7.992451,-4.108578,-7.070569,-0.941036,-7.779212,1.822279,-4.887295,5.063907,0.309509,-9.079329,-1.496551,1.042442,6.468935,-4.166738,1.012278,9.295047,2.243348,-1.046915,-2.490171,-3.639693,-0.432716,5.187394,-2.700711,2.580347,-5.843074,-8.198892,-8.926106,6.420325,-8.791877,-5.931720,1.698378,-6.622755,1.548071,4.540674,-8.995146,2.854896,4.093201,9.487389,4.764051,4.602314,8.639330,-0.014848,-6.802469,4.936975,7.775043,-7.931326,3.055429,-6.146390,3.134855,-2.085863,4.011278,-4.897708,-6.366639,-0.688594,-6.838952,-3.585226,2.663327,-7.442360,-9.245254,-0.297533,9.148295,-6.429695,-8.221533,0.118992,-1.831461,0.057663,5.947122,-1.160617,1.176391,-0.628288,7.038141,9.616009,6.313367,-3.148773,8.391801,-1.253787,2.830453,9.360494,1.685264,9.836211,8.577168,4.988066,-0.041511,-0.776119,-4.928977,6.441649,0.694099,1.709903,-0.788494,-5.532820,-8.256662,-4.055977,-7.883195,5.250035,1.905167,5.175479,6.124281,7.825753,9.778954,-3.781326,-3.744196,9.864874,-8.911217,6.431943,-5.719394,9.595546,-7.396593,-6.470028,1.347732,-1.521799,-1.538892,2.106686,-8.322739,8.077339,1.175378,0.765845,0.927494,9.315462,6.855561,7.726803,1.595476,3.329858,-3.076102,-8.349843,6.902465,-0.801726,-5.115222,-1.527523,8.460986,-0.049938,1.538720,-3.433130,-7.024320,-0.026964,-4.789255,8.201402,-2.801705,1.806650,-5.287735,2.311347,-9.656955,8.271490,7.430555,3.765097,2.663230,9.995785,-6.533944,-2.699176,-3.904315,-1.799596,-1.279513,-3.426066,-2.706936,9.217052,4.101501,9.318520,1.657276,-0.646150,-2.813199,1.603591,-0.242650,-6.597001,-2.348735,1.275839,7.614185,-2.972476,-3.281651,9.698930,-7.950969,0.408558,1.951561,-2.287602,-7.446320,4.156643,-0.402467,-5.216186,-3.162651,0.035433,4.923455,0.798329,7.461311,-9.701217,-0.145119,-0.660324,3.692655,-0.875553,-4.054390,4.283538,8.790542,8.608960,7.872096,-0.464964,-4.587578,-6.719440,0.123037,9.193018,1.237492,-7.296414,6.543873,9.601802,-3.411840,6.472143,-3.609555,0.857839,3.362491,1.362964,6.303337,-3.238472,-8.074740,4.219175,-0.978733,-2.057191,6.337815,0.043182,0.158934,9.064194,-6.215565,9.665409,6.140014,2.107736,1.399352,8.413942,-1.527293,2.688963,-3.356365,-5.808734,2.572833,9.616623,0.946274,2.669094,0.440141,9.374615,9.800286,-9.964055,4.744121,9.433142,-4.503579,0.732687,0.363059,5.817084,-2.243158,-9.946938,-8.015827,-9.516264,5.944267,8.189537,-7.669465,-5.927160,7.638914,-7.904337,-7.262415,7.143846,-7.449039,-6.558671,0.381262,5.616418,8.604508,3.271786,1.034549,-3.387822,0.178586,7.843126,-3.491972,1.303631,-8.978558,-2.277639,-3.705453,-4.291696,4.078643,-9.594037,-7.393806,-4.599362,8.163371,-2.989096,3.023674,7.647492,-1.465663,-9.879659,3.402017,-7.271056,0.183732,-2.924842,-8.533814,-7.609432,0.007721,4.210021,-1.607568,-0.619897,0.897198,5.074283,7.739554,-8.434107,4.697301,-7.419677,-9.437125,0.733221,9.405631,8.377506,-5.143407,1.918923,-1.116655,9.954511,-7.275667,6.376856,-7.979932,-4.668122,7.985324,9.000409,4.640834,6.581524,-9.020227,7.330537,0.942232,-4.817844,-7.231298,1.044455,-8.478320,-0.100975,-2.319711,-5.160853,-6.073527,-5.728932,1.240751,-1.739228,5.238118,0.553733,-1.807502,-0.947447,0.427802,7.392316,-1.294120,0.406034,-2.586328,-9.368052,0.345794,7.431309,2.060959,3.279510,-1.102662,-3.882986,-1.350035,0.687933,-0.351705,-1.577653,-4.153962,-3.504891,-8.601495,4.667751,5.595721,-0.115329,5.360894,-3.668549,3.035853,9.250152,7.379797,-0.385298,4.382261,1.571750,8.371041,-7.443066,9.586662,-2.514831,-7.329636,-5.552635,0.809787,-8.697405,2.163107,-0.886131,-5.534778,-5.652616,3.479537,1.643707,-6.795151,-7.416192,-3.860637,-1.741315,8.635719,-4.263013,-3.316631,3.360959,8.270871,-8.030975,-4.263432,6.676503,3.791063,0.083340,-6.974732,6.360667,9.858519,-5.131761,-9.454926,9.948525,-5.249144,3.808454,4.453003,-4.807779,-6.238268,1.360191,2.213873,-8.133195,-1.264392,7.523717,-0.123191,6.769005,4.452891,-9.419209,-6.227978,2.487955,9.497519,-6.561371,-7.301789,7.157699,3.813811,8.562432,5.310716,2.135384,0.047160,4.914826,-8.136046,0.967502,-2.003640,3.980432,-0.671636,7.391141,-8.031898,-4.327879,2.372291,8.282911,-9.110837,0.862364,-0.742082,6.977382,-6.060161,-5.474732,7.850600,-3.814199,6.606198,9.223491,-4.075671,0.978036,-9.106318,6.519658,6.178318,-2.051804,-5.496006,0.920171,3.881788,-1.289595,6.323354,-4.215123,2.682678,0.932879,-1.326576,-6.968451,7.749981,1.213672,2.895700,0.914191,-0.151683,-4.001527,-3.702555,6.993155,-4.366946,6.152085,-6.213000,-1.976501,-4.890500,-8.958842,-0.577148,6.551531,-2.753950,1.423561,-6.732811,-6.062263,6.596910,8.111796,9.357000,2.280424,-5.148299,8.644192,-8.519024,-7.950146,2.720949,9.553761,4.270727,-6.835122,-0.869042,6.985388,-3.395104,1.229941,-4.984395,7.408090,0.307061,4.633503,0.823415,5.872653,5.012811,-2.872539,-7.862809,-4.450020,9.761723,-2.269783,8.494393,-1.396432,5.840275,6.114896,-1.317456,4.105799,5.478371,5.899900,-1.395197,-1.506824,3.881801,-6.488783,-4.176942,0.575305,1.049216,3.983165,-2.799847,1.990745,5.316169,4.703709,2.088445,-1.907238,-1.171603,-7.967439,-2.406697,-3.874496,0.995136,5.750032,6.629111,9.623533,-5.392470,1.207832,-2.837900,7.759686,5.603674,0.537293,3.245756,8.502932,-3.851540,-6.985707,-0.958964,-3.649013,-1.506805,-0.950457,-0.973658,-4.987467,-6.869984,1.017227,-8.500643,8.088511,-4.003722,3.627991,-9.833051,5.206150,-5.411000,2.733646,-6.378623,-5.275003,6.259202,-0.067223,3.364642,0.017271,6.166145,-2.009875,1.742167,2.257221,9.659364,3.621951,-1.204892,-9.561150,2.356025,2.880101,9.698206,-1.119216,-7.064407,-3.806116,0.076751,-5.117211,0.247810,7.353960,-2.653593,-7.412724,8.924901,2.943732,-2.079364,-5.092889,1.852346,6.653147,9.055134,1.334809,-5.658008,3.324425,6.590105,-5.134324,9.167645,5.468349,5.835437,3.715442,-9.052309,-7.470292,-9.893042,-4.855676,-5.532742,-8.419691,8.772468,-1.269006,9.710822,1.355934,8.818621,9.708530,9.282352,-7.018162,-7.624210,3.040119,-6.809043,3.503382,-6.348302,-5.787531,2.232292,8.200122,-2.378169,9.304595,5.443788,2.628669,-3.932272,1.691670,7.488531,-8.441770,0.457599,-2.458473,8.777553,-9.900248,4.161596,9.016337,6.218128,7.551642,-0.690780,-7.515045,-9.517411,-1.969067,-2.407113,-7.305761,3.143200,-2.132033,3.100634,-0.180554,-7.358405,-4.788311,8.005086,1.576962,-1.591782,-1.806581,6.741283,5.293731,-2.558565,-6.849992,3.810700,5.425558,-9.977499,-5.387922,-3.875500,-6.497691,1.528105,8.243686,-3.972767,-7.737195,3.290339,9.064025,1.617671,-5.598661,-9.836527,-5.535369,-0.870358,-0.039269,2.146509,-3.195180,4.129157,7.864262,9.606276,8.221474,4.845946,9.125484,9.416408,0.222495,3.079101,-2.080176,-3.367450,4.772215,-8.184361,2.115163,-3.874405,-9.817268,9.952027,2.958143,-4.362736,-4.187050,-0.127744,-3.835343,3.528420,-7.993192,-3.962139,-0.527137,6.834399,9.581814,-1.355148,-8.310998,-6.836946,-6.791383,-3.301790,-2.373168,5.021109,-6.199703,-6.325835,3.369613,-0.726467,-4.413726,-3.517908,6.105678,8.869413,-8.630183,-3.542133,-1.070891,6.675318,-8.159844,-5.787147,-3.507423,2.638257,0.346982,0.126799,8.234840,-6.698707,-4.635135,4.050611,9.742788,-8.819836,-4.656548,-9.861201,4.420304,0.074271,2.270294,5.144934,9.608394,-9.187333,-7.233865,6.361687,1.978388,-5.464284,9.152722,7.287036,-0.009447,-1.845488,-9.932198,8.281385,-5.675950,2.986744,3.084585,0.971436,-8.106168,8.033669,4.444019,-2.589883,6.617826,5.945198,-1.392656,7.415254,-0.739690,6.501115,-2.612851,3.819749,-1.134797,-1.264242,4.661866,-9.609400,9.627512,-2.057906,5.091891,7.812511,5.695794,2.911081,7.902977,-6.897539,-9.454490,8.804232,2.931981,0.799916,0.646687,4.278897,2.653831,-1.378592,3.537583,7.130311,-2.553508,9.651153,8.363249,4.966899,7.577222,0.700413,-9.647024,-1.578753,7.583640,9.094929,8.464114,3.144666,-4.489441,8.393177,-4.141927,-1.178799,1.398121,6.094388,-0.722529,-8.734529,-1.573141,5.303889,-4.241858,-3.935816,6.274361,-8.556075,-0.075682,7.158099,-4.469859,3.235382,-2.124896,8.801746,3.109904,-2.321699,0.279559,-7.539504,-0.760575,-0.550681,6.432081,-7.846632,-6.310011,-7.539048,-8.048013,-9.865049,-5.716159,-9.870265,2.324454,8.624070,-1.299477,5.408598,-6.413998,4.987200,6.169998,4.456537,1.122970,-1.093239,-0.711864,-6.865701,-1.325625,1.365236,-8.020248,5.277894,3.263236,9.728208,7.989325,-9.145669,-6.820133,-8.777565,4.169027,-9.487650,-5.246315,6.085048,5.064538,7.539091,-1.424941,6.000554,-2.564541,-4.999065,3.951115,1.032667,-3.268392,-3.592766,-9.820163,9.624569,-8.965658,-7.761619,-5.908084,3.794439,7.038946,5.026005,-0.958898,9.760950,-3.668920,-5.769870,6.623017,-7.393281,2.203904,-1.543483,5.511893,-3.888909,8.694015,-0.271388,-8.938843,-4.420131,6.900083,0.201003,-5.050812,-1.468999,-2.426247,-9.556780,4.206499,-9.195373,1.826113,-4.751178,-9.258562,-5.783617,2.500157,6.704973,-4.108717,8.127893,5.202614,4.898411,8.492349,-4.762949,4.888509,3.751433,2.903102,2.363820,-1.329615,-1.347302,-6.181420,4.350890,8.846342,4.739613,-0.749176,5.996459,1.904581,1.487286,4.319216,7.402840,-2.031938,1.923896,-3.774320,-1.737535,-5.518601,4.939573,7.096359,-1.759115,4.281475,-4.185883,-1.977663,1.550967,1.928966,4.903796,1.456504,6.845177,7.951029,3.943701,1.075523,3.553790,-1.868601,0.807922,6.219093,7.320439,3.176165,-4.939914,7.915116,-0.989300,-3.682859,0.798265,-4.582711,5.813858,2.353883,9.651879,-4.299607,-3.164252,4.017323,-9.406199,4.678112,3.974518,4.635593,3.966511,2.320032,5.735751,2.759254,5.249403,5.617728,5.086116,-7.323240,-0.353247,3.973574,1.289959,-8.151586,2.399416,7.205505,-1.848444,-9.753110,-6.845523,6.115997,1.229377,-9.132257,-8.852385,3.642395,1.373582,-6.309093,-7.516870,-3.515647,-6.931699,9.073355,3.386109,-8.886967,-7.773144,0.994303,0.009865,-5.513342,8.042352,3.460243,7.879132,5.407611,-0.023043,-1.404558,-6.200047,3.964255,6.408356,-0.219962,4.705169,-8.915269,-3.045574,-3.239410,9.611737,-9.197505,-7.715005,-8.037224,9.953669,-6.732248,-2.285662,-4.070479,1.242844,1.648778,3.621232,3.796020,2.558469,-2.220834,5.063854,4.275825,9.511059,4.366786,1.521624,9.466868,-9.441845,7.564664,-2.863944,0.069770,7.061485,-9.372509,-9.859978,5.283266,-7.609879,8.576382,5.344712,-3.335976,5.789659,-7.208995,7.893534,8.331560,9.618824,-8.299409,-6.939035,6.827907,9.715198,-6.433557,-3.679129,3.679600,8.380659,-9.771768,0.826241,-6.566158,8.241885,1.633532,-1.033069,-9.880063,2.353161,-3.636482,-7.546703,5.787517,1.133483,4.216710,-0.939814,-1.519631,-9.936377,-0.113025,3.917508,-6.996669,7.424552,-8.154789,-8.771516,2.425174,6.933781,2.865383,8.708755,9.339302,7.241176,-9.032273,2.605841,1.121203,-8.759270,1.489424,-3.006371,-1.789004,-6.622135,-8.475124,9.559253,-7.280600,2.990695,-9.209069,1.743108,9.535319,-2.358485,-8.794444,0.061883,2.862276,2.177970,7.536572,-4.484868,2.756855,-2.102318,6.951413,6.238047,0.546010,-6.774437,0.977449,2.251083,-8.855412,4.165731,-0.524739,-3.059215,-8.656624,-2.621063,-6.230933,8.663099,9.249694,8.165529,6.544920,7.253847,5.090861,-6.697820,9.920545,2.030838,9.937956,-6.408876,3.144236,-7.643703,-6.528852,-1.747392,6.013628,-2.526252,4.617985,-6.293977,-5.074652,4.383564,8.943961,-7.536319,-9.712376,-3.786661,-8.140552,0.935329,7.520894,3.428261,-3.276899,-0.757704,6.754000,8.281597,-5.024141,2.890718,2.725574,-4.811632,-0.381104,6.960492,3.805524,6.927501,-8.520642,5.917026,-1.344143,2.340925,-6.901381,-2.037999,-7.237010,6.998861,7.118780,4.264212,0.629394,5.759811,-2.607163,-2.914287,-0.517162,-4.144875,-5.366439,5.378295,-4.201454,-1.505387,-6.637486,2.281471,-4.359160,-0.090091,7.066683,-5.862595,3.594241,6.739641,-8.527787,9.293691,2.510648,1.729457,-2.980166,-0.715845,0.045938,3.855824,5.015117,-7.810629,6.278503,-0.662082,-3.321055,-1.549705,-3.708078,6.038173,1.991080,-4.796509,-9.308573,6.325461,-4.779096,-8.198147,-3.388946,6.176134,-7.234303,2.851261,-3.822323,-0.905632,-7.814055,8.353314,-7.756982,8.773435,6.883213,-4.896603,6.982031,-4.552961,7.617945,4.411221,4.632887,-3.291922,-8.016411,9.398341,3.155537,8.451579,-6.596690,-2.330339,6.290792,9.998674,2.385212,2.312013,6.981409,-5.489762,-0.240015,-9.833800,1.932398,1.205749,-9.773824,-1.734171,-6.934753,3.113762,-7.970751,-7.431421,8.360876,1.190675,0.461227,3.843191,-4.975328,-1.155706,1.763392,-1.295900,9.277970,-5.666330,8.404627,6.617077,-1.288216,-9.518922,-7.323799,-1.491832,-4.337236,7.288906,-6.458112,-5.079135,-3.512308,7.561497,9.394248,-3.651783,6.996985,-1.930997,-1.037804,5.412633,-4.665257,6.958614,-7.919462,-4.331318,1.080427,-6.310369,-9.815657,7.108193,5.566899,-8.218238,-2.139835,5.659105,6.972697,-8.537603,0.860735,-8.833196,-5.180189,5.853873,-7.761959,6.957080,1.315429,7.543837,1.274518,-4.467217,-2.648011,2.373189,-9.798177,-3.006484,3.675579,2.347493,-1.395714,-1.850800,7.748068,2.323200,-0.105351,-1.935599,6.883683,3.092436,-1.997910,7.097120,6.183285,9.816622,-0.012125,6.328597,3.601699,-3.121018,2.771646,-5.850687,-0.857373,-2.227264,-8.063024,-6.292389,-5.982668,-1.766173,-4.821512,2.423268,6.560577,8.606669,9.886437,6.750319,5.987367,-2.399431,-4.697706,9.417311,8.928416,2.420852,-3.626486,5.971172,-8.898062,8.343687,7.879062,-9.502880,-9.508858,-3.559675,-2.856201,-6.577302,-5.582605,-8.886457,9.651679,5.280886,3.482698,-3.781398,4.895686,3.629655,-2.894464,-1.262159,7.597888,-8.592207,-0.042294,6.522290,-8.693029,-9.998837,1.983135,4.663925,-4.833790,2.377833,-5.523524,-6.100112,3.299511,2.353486,-4.711551,5.835585,-3.731553,9.404343,2.575011,7.798175,-3.512268,-1.485690,1.973091,-5.930514,-6.350404,6.888449,-6.255110,-3.262684,7.133965,6.221462,8.398973,-6.735738,-6.722189,-3.121875,-4.442328,5.735478,1.766698,-6.515879,7.702348,4.442319,-3.379783,-3.168585,-1.676252,-0.279778,-5.662337,1.959830,2.502568,4.255882,-7.289657,6.456326,-4.898407,3.379951,-7.461004,-1.733258,2.441606,6.457085,-6.126985,-2.741573,5.638323,6.009265,-0.190491,1.929413,-6.246151,0.611786,0.765751,0.406470,2.412917,1.681359,7.224699,3.148402,8.269273,-3.919995,5.500710,-1.143393,-3.340021,-9.125116,1.363294,-1.542607,2.878632,-3.659256,-1.708569,-1.458237,-0.749683,6.319404,9.445104,-1.173495,6.637610,-4.859836,6.401636,2.153624,-9.639427,-8.368558,-5.661406,0.624748,-9.556668,-8.626069,-2.674068,-4.437559,-9.141358,-6.809614,1.437382,2.994919,2.443353,5.614757,-7.313663,-2.384218,-3.081589,-0.648205,0.229632,-5.675530,2.870728,-7.394821,2.905612,0.767300,-7.301714,1.732011,-9.106750,3.611096,1.006678,9.767876,0.541855,-5.103928,-6.261448,-8.936535,0.488218,-6.053767,2.923836,-4.895879,1.825594,7.253332,4.247946,0.513860,6.852894,8.106337,2.519036,-6.523339,5.286138,7.084020,-0.993762,8.416211,-8.027843,-0.540277,1.709876,7.047033,-3.449102,-2.736909,9.083444,-7.880950,-7.033045,5.525546,-4.594374,0.003494,9.313481,2.685449,-9.495556,0.957212,-4.499009,6.829304,-1.707910,7.561377,6.464996,-0.217871,0.387031,2.305842,-0.572773,-6.849004,-6.049935,-0.884663,-6.531637,0.114934,7.912497,3.257515,1.656575,5.259101,7.582827,-2.970391,-3.050834,-9.766907,2.319136,-5.745719,-6.738423,-4.368337,-2.279048,-5.496757,9.572170,5.151326,-0.124900,-7.919289,3.466633,7.593408,-7.197289,6.316336,-4.350878,9.700182,6.783249,-4.087747,-5.602179,0.534813,2.530112,0.872014,0.881376,6.589128,1.977228,2.159249,2.177093,-7.500711,8.018759,7.092079,3.074366,4.324964,-5.947741,-7.364682,6.119414,9.384523,-6.997216,8.699527,7.940618,6.771084,-9.090666,-3.139008,-4.828529,-0.475628,-7.647199,0.111121,-6.736761,7.765257,-5.324270,2.848568,1.649501,4.665766,2.491958,7.310560,6.630165,9.500963,-5.872738,-3.263458,-0.122083,-0.278493,-0.180477,-9.083569,-4.914604,0.608877,-9.281442,-7.018682,0.024514,1.654717,-9.741259,0.870867,0.829228,-7.642712,-1.433141,-2.382980,3.241566,-2.547328,1.294514,-6.390667,-4.176254,-4.251731,-2.438550,-8.695172,-6.264773,-4.843887,-8.428020,4.904555,-2.680364,3.373380,-4.181450,-3.859409,-6.968237,7.132092,7.862446,-6.532823,4.930694,-8.315304,3.843880,5.748554,-7.422715,9.458385,2.721555,0.992941,-6.427393,1.650725,-4.385756,-7.338184,-6.277197,-9.229120,6.438304,5.071888,-3.486278,-2.122822,-6.295160,4.410463,9.352648,2.963445,6.137265,-5.425333,-0.451450,-6.081157,4.296798,6.654001,-8.760821,-0.425481,-5.129303,-8.497480,1.717793,8.424070,-7.591070,6.721830,3.356053,7.613269,5.005078,-0.816473,2.726201,-7.412996,9.462551,-9.745929,-2.671954,8.413118,-8.459118,9.014721,-2.491993,3.958420,1.798216,-8.318312,6.695231,-6.418535,6.120321,-0.945938,7.694328,-0.213905,1.875125,7.639449,2.043426,-2.653521,-3.281864,9.407278,-7.866124,-1.252549,3.114759,-8.905717,-9.880949,6.762999,5.549477,-3.742728,1.425307,0.967462,4.444181,-1.015369,5.022856,-0.657978,-6.777352,-4.317688,-9.073687,-2.480940,3.276537,-2.682944,8.731966,-5.096206,-8.688699,-3.100580,8.850733,-2.303875,-5.728163,9.810066,9.264117,7.899269,7.010094,2.638152,-3.652723,-8.886337,-3.957017,0.490952,-3.483947,6.186086,-5.513442,-3.222818,5.661993,-7.435228,8.215354,-1.234455,4.059651,-6.461418,0.934483,-2.810644,-3.449183,-1.581431,-3.147523,-5.657086,6.040156,9.134705,9.780411,0.935306,-2.278730,-6.342193,1.587908,-5.141547,1.181344,5.945885,-1.730813,-8.931864,-4.926936,-6.735882,4.852003,-8.392736,-8.814794,-5.266176,4.509969,-7.469392,-9.887854,-7.265596,9.548987,-1.970588,1.774156,-9.322818,-0.495593,-3.127993,3.042251,4.754036,-8.098853,4.319531,1.332199,-5.232380,4.512440,-5.087577,-9.875680,9.251841,3.443062,-5.971437,9.281331,2.953383,0.064437,1.403350,-8.478960,7.771557,-8.325991,8.838505,2.063746,-3.674088,-5.935398,-4.853114,8.798614,1.165454,7.278913,-3.628290,-4.117000,-1.994224,6.992738,-1.043040,-0.462122,-3.038529,-2.861607,-3.446894,-0.261709,-9.572384,1.161057,8.372502,-1.280778,-5.622266,-3.054929,-1.127086,-6.170521,-5.771116,-1.898338,5.030213,7.808698,0.143770,7.463294,8.925619,4.687110,-6.982508,-1.561155,6.450062,-4.215416,-1.977936,-2.161817,1.640827,-8.716326,4.708749,-6.559850,6.412593,-7.894189,5.304542,4.682361,3.049315,-0.167176,0.376947,1.309327,4.602286,-1.491888,-7.164171,7.585799,9.104559,-9.353207,-2.526685,5.274433,-6.776615,9.799593,9.229266,-9.580497,9.035444,5.559945,8.774075,9.275247,-7.288530,-5.295096,1.751634,6.615602,5.464742,9.235058,-2.888295,-6.409379,-2.436976,7.789285,-0.274109,5.593124,-4.963566,-0.599329,3.311090,6.410715,-5.212824,4.510831,9.401360,-9.568685,-8.553333,-4.768756,4.711222,8.674106,-7.096563,1.233131,-8.377284,-9.462339,1.953137,-3.961985,1.222112,5.327120,7.896366,6.219965,4.317805,-8.411374,3.118351,-7.996772,8.110650,-7.266524,-6.296364,-8.802823,-2.414220,-3.820406,1.873236,8.540003,-9.800509,-5.069377,6.369883,-9.717328,-4.153811,-7.872543,2.841781,-6.452234,-7.674626,5.340675,-5.751888,0.082190,-5.615561,2.027685,-6.830521,-1.039919,5.299172,-5.749559,-5.912420,2.585434,0.670710,-1.645723,-0.723207,7.563487,-0.171382,-2.441152,-4.359610,2.628477,9.284027,7.784501,5.903897,-4.147284,-6.881286,2.636504,3.015656,8.596411,-0.269078,5.130629,-9.739754,7.793487,1.946355,-5.244279,1.952396,0.459250,-9.605690,-1.728714,-9.471245,-0.504587,-5.080339,-3.842482,-9.934803,-4.170162,1.832684,3.157068,0.491065,-1.340365,-5.563473,-6.328050,5.819974,-3.729278,-1.100239,4.686480,0.925463,-5.989226,-8.252063,7.854723,-6.504777,1.792139,-7.668391,-3.009515,-6.349513,-5.195345,8.617991,-4.577263,-0.550727,-5.387777,-3.182822,-6.158766,5.612768,2.794911,6.919046,-0.747873,-9.499641,6.416514,-4.946323,-5.365287,5.377977,-1.706121,-2.604548,5.508075,7.600669,9.358310,4.070995,-6.842300,-3.239305,-9.770102,-9.627037,-9.743601,5.697713,7.563872,1.610358,-7.707958,1.535334,0.001753,3.683369,-8.943606,-4.134290,-3.250040,2.516235,-1.732023,-5.459717,4.898431,6.303931,-0.130102,-4.619767,-7.123522,5.538459,-2.601144,3.935993,-2.888455,-5.666650,-1.612582,9.143564,-2.636750,8.251441,-3.974044,-8.828403,-3.169459,8.902569,-6.254415,3.650256,3.512206,2.126134,7.448834,3.888374,9.066794,-3.490243,-0.731618,1.509670,6.619234,3.266004,-8.805179,8.660997,4.934512,5.047229,-9.567934,9.033835,-5.453826,4.167254,6.635889,2.609717,-2.996748,-5.102962,9.713473,-4.088787,-5.254403,2.736087,5.317517,-3.419830,4.206363,-3.201142,-7.287047,-3.161545,-5.396667,-7.970011,-7.887514,-7.413951,7.547403,-6.682387,-0.127852,5.130123,-3.834207,-2.486823,-7.091574,0.385010,-3.696038,3.043148,3.750509,7.819358,-5.551678,1.966036,-8.868832,9.512133,5.321850,-2.040112,-7.374834,-6.843994,-0.320607,-4.207213,2.842009,8.903789,8.503322,-9.241486,-0.606932,-2.558150,7.106926,6.649474,-0.431745,-8.857187,-3.768477,7.823553,-9.776873,-9.906414,-1.304219,5.391397,-8.888288,-5.036015,-5.360054,-7.060299,-0.361333,0.705829,-1.322737,8.439791,4.299710,-6.850447,1.415201,6.757185,-9.414171,-5.810535,-9.638861,-3.434739,-1.059023,5.947543,-4.644948,0.756936,-4.760544,-9.928506,-0.999802,0.632377,6.147865,8.122828,-6.196180,0.963135,-1.473356,6.099600,5.028333,0.657985,-7.990994,-5.061900,-9.657183,-8.431772,-1.047473,-3.942440,-6.230304,5.822534,8.199506,-6.028040,7.665541,-3.911209,-0.972371,-1.230016,-6.254217,9.424115,-9.161432,8.208639,-4.565658,-7.658575,-5.550457,6.130575,-1.217238,8.013919,6.954411,5.817972,2.504933,0.670982,-1.854581,8.552423,1.328491,6.338942,9.100843,9.490197,-2.612629,-4.600059,-3.543842,-3.951332,-5.814140,-2.724129,0.410012,-3.606308,-9.640214,-8.828240], dtype = "float64")#candidate|5460|(4096,)|const|float64
call_5459 = func_4145_call(relay.reshape(const_5460.astype('float64'), [16, 16, 16]))
call_5461 = func_4145_call(relay.reshape(const_5460.astype('float64'), [16, 16, 16]))
func_4598_call = mod.get_global_var('func_4598')
func_4600_call = mutated_mod.get_global_var('func_4600')
const_5463 = relay.const(-7, dtype = "uint16")#candidate|5463|()|const|uint16
call_5462 = relay.TupleGetItem(func_4598_call(relay.reshape(const_5463.astype('uint16'), [])), 0)
call_5464 = relay.TupleGetItem(func_4600_call(relay.reshape(const_5463.astype('uint16'), [])), 0)
bop_5465 = relay.floor_divide(uop_5445.astype('float32'), relay.reshape(uop_5432.astype('float32'), relay.shape_of(uop_5445))) # shape=(13, 15, 7)
bop_5469 = relay.minimum(uop_5432.astype('int64'), relay.reshape(uop_5445.astype('int64'), relay.shape_of(uop_5432))) # shape=(13, 15, 7)
func_3396_call = mod.get_global_var('func_3396')
func_3400_call = mutated_mod.get_global_var('func_3400')
const_5483 = relay.const([4.621224,-6.246468,-6.721807,6.704395,4.710881,-2.961301,-9.398839,-2.864661,4.678075,-2.248279,7.093228,9.605242,-0.652707,9.366375,4.428427,-4.822946,9.080621,-1.871553,-7.943595,9.750590,4.022474,-2.566595,3.753386,4.879471,-1.541286,-2.610976,-1.671069,4.517784,5.483170,-9.556972,2.885700,6.295446,3.483429,-5.953317,3.241073,-5.967844,-3.439219,-1.177248,0.385088,-8.564843,-4.752916,2.205633,-2.002416,4.539586,1.080766,-1.468210,-6.084014,8.451891,4.174111,9.623742,3.742733,0.599136,-6.660138,-9.818030,-6.898273,9.148781,9.974021,2.426513,0.533065,9.910821,-2.729559,-6.935577,-9.298602,-8.129084,2.750571,-2.623309,5.595524,-8.055051,-7.766776,7.186344,4.586376,7.789442,3.614853,-8.286916,7.090647,-4.105374,-3.376820,-3.010086,-8.250002,-5.781701,-7.177804,2.545932,8.736060,0.345719,-0.481352,-5.857237,1.941796,-2.761021,-3.529820,9.445875,1.494179,5.087131,-0.273750,-8.761274,-1.694661,4.427675,0.370998,2.401644,-8.297459,-9.017051,6.489617,8.807227,-9.168577,-6.824339,-1.587518,-8.462089,5.421209,2.648200,6.961701,-4.024107,5.058117,-0.033619,-0.910575,0.597177,-9.931874,0.856348,-2.833063,-0.253590,1.633816,9.719093,0.187812,8.009293,2.345412,-3.519732,-8.324733,-8.038261,-5.636254,-1.043999,-5.925762,-7.201746,-5.590680,3.554091,-5.020038,8.290901,-4.913313,5.038110,3.437032,-9.471208,-6.284869,2.343845,4.886276,-1.655365,5.634214,6.269991,-0.533950,-9.859059,7.795715,7.646631,-0.784503,3.785933,6.194633,-4.869129,8.262156,2.672556,8.167347,-0.917789,-3.493054,0.553942,-4.109319,-0.163802,-0.506956,4.194384,-6.578153,9.271723,1.205908,0.787743,8.357452,7.170085,-9.107564,-3.936687,-5.780257,-8.616412,1.316678,-5.588646,-0.766432,-2.862466,6.298622,7.711770,-2.384780,-1.597664,7.594502,-0.932795,3.330700,-5.314080,-7.866774,-4.179128,5.613885,-7.203348,-6.332989,-9.976521,2.504869,5.621840,-7.992122,-8.490443,9.076550,0.591591,-7.327593,4.265559,7.616507,6.043012,2.403134,-4.874046,-4.218043,4.387389,8.324134,-1.599614,5.898788,-7.920047,-3.939361,-2.859123,5.882933,-2.776299,-2.732658,-9.508761,6.397046,2.380617,5.805261,-8.040707,-1.819849,-4.362274,3.105685,-2.773112,-7.721219,2.252708,5.319733,-0.763879,3.151909,-3.964153,-1.999065,7.439876,-0.961214,-7.647402,5.620184,-2.664908,9.362090,0.520110,4.906282,8.249383,-8.202812,-4.446205,-2.053319,8.366978,0.847515,1.941006,-4.657339,-9.781971,-7.064702,-9.174615,3.494914,4.652182,3.630046,0.482794,0.959626,-6.221580,0.358303,8.654652,9.433087,8.934731,1.979154,-4.917018,-1.325444,-3.029065,-7.232147,-8.449920,0.859822,-2.801007,-9.515019,8.508599,-7.836027,-7.834431,-5.446047,4.308045,-8.390578,2.033282,-2.457249,3.371422,-1.690764,8.615294,-7.028887,-2.878046,0.633072,-2.137749,-4.698306,0.396703,6.336795,6.354782,-0.283842,0.269824,8.536287,-5.613050,-8.078453,-0.881936,5.062006,1.688682,7.359737,-8.884056,-8.819333,6.825706,-5.353030,6.332361,-4.407723,-4.897824,-1.182111,2.291820,-6.912744,2.963258,5.438651,0.509575,6.394265,-2.385402,-9.308367,4.881735,5.919601,3.650770,-1.326882,2.010682,4.031009,1.329569,8.773901,-6.577738,-9.042609,-9.698150,0.865374,-6.433861,2.030401,-3.049535,4.053523,-9.154008,-2.705100,3.488345,5.636333,4.770181,-0.641805,-6.588921,0.909062,4.964463,-3.810795,8.936651,2.564458,-3.672012,-8.767038,-4.495672,-0.015221,-7.070708,-7.303871,0.957318,-1.067657,4.156866,3.834139,-5.934012,-1.608497,-1.823294,8.611761,-6.340276,-8.870825,9.451469,2.086077,-5.041331,6.449743,-3.302153,-2.936964,8.357646,-2.190175,4.473800,-4.970675,-9.050886,1.872234,4.931323,-0.664506,0.232788,-0.395277,3.800311,-3.742457,7.924100,-3.481151,-0.109944,-7.772698,0.896391,-0.445231,-1.322124,-6.952837,6.812713,-2.421104,8.379476,-7.046066,1.919390,8.835822,2.377533,-6.614250,9.733370,-1.918758,-3.202449,1.645467,-8.889465,-6.527367,-3.092156,6.645424,3.950424,-7.434112,3.234652,0.720345,9.061106,2.558583,3.335202,-9.344594,4.648476,-0.999357,0.846163,7.313298,4.429986,-0.265649,4.859596,3.973926,9.363780,2.101891,-8.358382,3.145149,3.762311,-1.044488,9.171359,-9.370088,-5.359601,-1.537686,-0.607548,5.144105,3.501740,-1.384624,2.789653,5.905329,3.938981,0.384057,-1.525186,-8.102697,-2.380586,-1.803376,0.005755,-1.994390,9.498015,1.955785,-6.978282,1.235046,-7.252944,-0.952404,2.550479,6.691592,-3.438238,-6.723127,5.430881,6.114740,-9.204214,6.133699,-3.270138,7.120779,-9.202135,3.623747,3.527796,9.090405,-1.966116,2.902642,6.838109,9.785402,-5.424844,-9.302728,-2.958569,9.254632,6.145675,-1.965945,-4.987853,8.634521,-6.085207,6.727405,6.475448,5.958946,9.119784,0.719156,1.280059,-6.856245,1.237711,-1.579803,-1.153857,-2.317393,-3.152093,1.882315,-1.535543,-8.454768,-2.259609,-4.053555,-7.762990,8.237089,-3.291131,-4.195036,2.498343,6.784306,-0.528212,-7.605901,9.155085,-1.630234,7.293904,-0.434518,3.638356,-2.135838,3.646413,4.842849,8.821609,9.782227,-4.544755,7.706340,-2.402391,-8.279053,-6.589694,-3.892057,1.016332,-4.836555,-7.358369,-0.323649,9.350055,5.617183,2.868905,-3.049595,-0.129564,-6.427712,0.114501,-1.114610,7.280025,-4.524380,-3.302132,0.342789,-4.983916,-4.990103,9.425155,-6.337517,-0.760098,8.132680,-0.382395,-7.096452,7.249010,0.542467,-6.529550,-2.267094,-0.826361,-5.315992,7.804869,-3.578765,7.940131,6.729230,8.892155,5.004529,7.302604,2.615287,-2.542514,-5.266100,9.560898,-9.956223,-7.549901,0.694785,-7.020682,3.847114,8.692602,0.405231,-9.082163,0.260298,-6.735210,4.464841,7.818419,2.614415,-7.250099,1.530218,-2.469521,-4.507507,6.529284,1.875034,7.477997,0.098590,0.672186,0.529232,9.737429,9.154056,5.386661,-5.487001,-0.935182,-7.133944,3.731830,-9.082218,7.726896,-1.119033,-4.984940,-0.284340,-1.653543,-4.943269,-4.575183,-9.343684,3.487966,2.840747,-1.746748,3.614741,-8.971049,-1.268672,-4.052240,6.814914,7.383613,-3.006764,2.760648,0.303028,-0.983915,4.269654,7.178049,6.162640,-5.730904,1.578777,-4.351528,5.965315,-7.865843,-6.294900,-9.716329,-6.650526,-4.568480,2.749676,-4.172624,8.756909,-3.491103,2.349618,-3.651622,-1.603685,-3.703765,-7.758078,2.381703,9.104547,8.931695,-3.244101,4.325834,7.596061,8.182783,0.566367,2.396684,-3.627910,-8.125944,9.252982,-9.456766,0.099304,8.872441,4.146968,1.043650,-7.161451,9.064301,-0.637229,8.509003,-1.239925,-4.861746,-8.635576,-8.472437,2.687955,1.482794,-4.274693,0.859679,-5.218350,3.634794,2.723444,-5.087827,1.765153,-7.235979,-8.244498,2.019123,-8.720517,-8.652056,0.827779,9.660645,5.813154,1.088606,5.864100,3.000660,5.520108,0.196335,4.484909,-2.862787,9.915574,-8.075828,-0.520262,-9.875687,9.173073,-6.507271,-6.342627,-1.271643,-4.448809,2.596678,-1.638984,4.677969,1.670457,-9.799324,-0.025715,2.278251,7.045720,5.049446,9.328105,-4.062264,-5.679256,9.128611,-4.680234,0.172853,4.701260,-4.857131,0.710541,6.216691,2.617350,-3.462835,-7.803673,5.340829,5.982759,4.807266,9.053865,-4.630073,-2.408064,-6.166684,5.656675,1.884241,-2.165839,-7.576434,7.141790,-6.377869,2.513669,-6.291169], dtype = "float64")#candidate|5483|(720,)|const|float64
call_5482 = relay.TupleGetItem(func_3396_call(relay.reshape(const_5483.astype('float64'), [3, 16, 15]), relay.reshape(const_5455.astype('int64'), [8, 16]), ), 4)
call_5484 = relay.TupleGetItem(func_3400_call(relay.reshape(const_5483.astype('float64'), [3, 16, 15]), relay.reshape(const_5455.astype('int64'), [8, 16]), ), 4)
func_3525_call = mod.get_global_var('func_3525')
func_3529_call = mutated_mod.get_global_var('func_3529')
var_5487 = relay.var("var_5487", dtype = "bool", shape = (40,))#candidate|5487|(40,)|var|bool
var_5488 = relay.var("var_5488", dtype = "bool", shape = (40, 14))#candidate|5488|(40, 14)|var|bool
call_5486 = func_3525_call(relay.reshape(var_5487.astype('bool'), [4, 1, 10]), relay.reshape(var_5488.astype('bool'), [4, 14, 10]), )
call_5489 = func_3525_call(relay.reshape(var_5487.astype('bool'), [4, 1, 10]), relay.reshape(var_5488.astype('bool'), [4, 14, 10]), )
func_166_call = mod.get_global_var('func_166')
func_168_call = mutated_mod.get_global_var('func_168')
call_5493 = func_166_call(relay.reshape(const_5456.astype('float64'), [14, 1, 1]))
call_5494 = func_166_call(relay.reshape(const_5456.astype('float64'), [14, 1, 1]))
uop_5502 = relay.log2(uop_5432.astype('float32')) # shape=(13, 15, 7)
output = relay.Tuple([call_5454,const_5455,const_5456,call_5459,const_5460,call_5462,const_5463,bop_5465,bop_5469,call_5482,const_5483,call_5486,var_5487,var_5488,call_5493,uop_5502,])
output2 = relay.Tuple([call_5457,const_5455,const_5456,call_5461,const_5460,call_5464,const_5463,bop_5465,bop_5469,call_5484,const_5483,call_5489,var_5487,var_5488,call_5494,uop_5502,])
func_5512 = relay.Function([var_5431,var_5487,var_5488,], output)
mod['func_5512'] = func_5512
mod = relay.transform.InferType()(mod)
var_5513 = relay.var("var_5513", dtype = "float32", shape = (13, 15, 7))#candidate|5513|(13, 15, 7)|var|float32
var_5514 = relay.var("var_5514", dtype = "bool", shape = (40,))#candidate|5514|(40,)|var|bool
var_5515 = relay.var("var_5515", dtype = "bool", shape = (40, 14))#candidate|5515|(40, 14)|var|bool
output = func_5512(var_5513,var_5514,var_5515,)
func_5516 = relay.Function([var_5513,var_5514,var_5515,], output)
mutated_mod['func_5516'] = func_5516
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5541 = relay.var("var_5541", dtype = "float32", shape = (5, 12, 10))#candidate|5541|(5, 12, 10)|var|float32
uop_5542 = relay.cosh(var_5541.astype('float32')) # shape=(5, 12, 10)
func_5512_call = mod.get_global_var('func_5512')
func_5516_call = mutated_mod.get_global_var('func_5516')
const_5545 = relay.const([[7.734721,-9.404542,-1.862929,-3.011191,-3.071938,7.504534,6.429740,8.625380,1.320629,-4.157273,2.636960,7.319871,-2.117165,0.392719,-7.441819,9.845021,-6.782589,5.184579,-5.561317,-5.569850,1.223355,-0.673827,7.474790,2.245493,-7.459368,4.066389,-3.084677,-0.683671,6.034242,1.389563,-4.776579,-2.958638,-6.475167,0.811713,6.015444,9.753988,8.306044,2.976234,7.491887,1.886593,-2.100122,-6.952014,-0.036498,-8.539775,-1.698811,8.822462,-7.671934,5.505480,-8.045539,1.965344,-4.037193,-4.418210,-9.362110,-7.317068,-3.586887,-8.159524,4.372875,5.164293,6.620290,1.860157,7.373793,8.747885,-4.382251,8.370268,0.753526,-7.827767,8.582272,-6.457180,-5.747062,-0.530501,-7.417533,-9.065160,6.353961,3.561750,1.453851,-7.050536,-6.569680,-9.596324,-8.015438,9.242935,-4.945075,-6.831888,-0.053966,-1.498749,1.868267,-0.578732,8.985169,9.266167,-0.898025,8.069639,-2.576040,6.258564,7.954499,1.809602,5.827153,-4.365912,4.193684,1.681402,0.643339,-7.112455,-9.256081,-7.988575,2.086137,-1.278552,1.254650,3.838569,1.866085,-7.725625,-7.550225,1.156111,-7.505386,-2.693271,-2.754126,5.481702,2.090633,-6.796480,-1.458088,2.512163,4.911261,-5.801007,3.598881,-9.920436,-8.106975,-3.159014,-7.676591,-1.333615,7.022778,-6.205805,-4.629223,2.547725,-2.749206,-2.596488,-5.689126,-2.426690,8.931256,-0.117472,6.715389,-8.638569,4.088822,-0.154449,-7.658171,-5.661643,5.959490,7.772950,0.102383,1.537860,-3.573080,-2.236418,1.502449,-3.192800,4.560854,-9.927887,3.918543,-2.351663,0.880259,8.661491,9.063845,9.444052,-6.650536,8.737299,9.475773,9.734949,-7.026650,-7.465063,7.794867,-1.925512,-3.273055,7.244535,8.679280,-6.185642,-1.475685,-7.710261,-1.833508,1.911930,-5.417618,-3.338511,9.620574,-4.373038,2.704038,-2.737634,0.739523,-3.362654,4.098013,-2.779421,5.204967,6.712881,-5.482535,-7.161684,5.770554,6.792436,-7.767951,7.849601,-1.190171,5.157252,-3.316005],[-4.865195,-4.209004,8.108126,-3.121656,0.146139,6.965910,5.477564,-7.039199,-9.471428,6.927618,-7.596120,3.617687,-7.356835,4.044965,8.370737,6.273911,3.046742,-1.109461,3.848920,-0.102533,3.422439,6.718169,5.944445,-6.454537,9.475944,-0.486508,1.346428,5.098671,2.190269,6.808656,-7.123795,-2.182026,-0.976824,7.815480,7.489115,-1.190922,5.266669,3.112888,-1.149473,-0.228425,-0.577058,4.354830,-5.712084,9.801085,1.409262,-3.132830,6.097436,2.757469,-3.357946,4.520763,4.944862,-7.936713,6.880661,8.504314,6.640770,9.349218,-2.536160,0.586640,0.997007,-1.356481,3.781269,-7.949001,2.387279,-9.647442,-5.709356,0.051337,-8.831392,-6.334853,-8.778411,4.010867,8.772698,6.316897,1.794298,-6.209309,7.703838,2.083547,-2.362277,5.018665,4.329272,6.261165,5.479752,2.686430,-1.673445,3.115115,-2.997166,-0.254244,9.441328,7.750820,-5.205726,3.283511,6.655887,-6.338958,-2.312586,4.033627,3.837161,-2.399071,-3.333419,-8.571269,9.472998,3.345653,-3.914719,-7.258941,6.835952,-5.606628,8.742695,3.343880,-7.969441,-9.971968,6.144527,5.509526,-3.687059,5.459737,7.694227,8.745872,9.797062,-7.244490,-0.635743,9.007423,9.829477,2.253788,7.870680,9.725059,-8.975284,-4.740923,8.201580,6.911285,0.128392,-0.199358,-9.405520,-2.344599,-9.587007,-3.870003,6.957831,-5.406925,5.734951,8.277538,-3.841542,8.320201,6.907186,-5.215756,9.477962,-9.137225,-6.610041,6.141974,2.567268,-2.556308,9.158752,-3.408113,-3.976959,8.467114,1.207848,-6.968437,2.277194,-8.930364,-0.837853,7.561004,-8.054457,-1.393060,5.534415,-7.700807,6.353195,-3.577079,1.885473,8.247876,-6.305136,1.361907,-4.434035,1.843838,8.926108,-7.631165,3.233447,3.110704,4.914968,-4.112211,-6.869642,4.835230,-0.356748,-1.253053,8.255147,4.049744,-7.634698,7.877987,5.324851,-5.451345,-0.670332,-4.337027,-5.966394,-8.843972,3.892023,-9.358412,6.544816,-4.515691,-7.225165,6.277485,-1.183876],[4.645956,9.696536,3.266137,0.073047,-5.443881,-0.117401,4.803820,-8.420407,9.691571,5.376800,6.138835,7.798877,-1.356199,-1.015857,5.613232,-3.183652,3.504319,1.917454,-7.869604,-1.624763,6.122851,6.215471,-6.487019,-8.012293,-4.605781,8.080242,-1.843724,1.333392,-3.256929,-2.364413,-2.251085,-6.827913,-9.889198,7.099886,8.136492,7.027096,-2.021602,3.637245,3.554944,-8.279959,5.313584,8.165309,3.863916,-0.632405,5.284863,2.815544,-4.363259,0.362408,-7.509890,6.530572,3.786728,-8.254599,-7.299912,-5.820823,5.492594,9.293629,-9.219779,-1.111119,3.723250,-5.479576,7.653097,-8.945961,9.004154,-5.337352,-4.660016,9.613544,5.722620,-0.245629,-0.760868,4.250721,8.691498,-5.028131,5.083432,6.689724,-1.392523,0.593061,-7.400037,2.580716,-0.269644,6.035069,7.321488,-0.663638,-4.884656,-6.658265,7.522005,-7.954411,-0.666484,-9.740469,1.512128,-7.839441,7.183050,7.512686,-1.431952,-2.930210,-7.964527,0.057416,-2.859955,-3.542023,-6.380868,2.184902,-1.648041,2.121746,0.639637,0.104102,5.167875,-5.046617,1.086207,-3.650780,-5.957394,-3.805624,-0.850139,-2.217744,4.730704,4.865863,-4.762933,0.335755,-4.690816,0.018349,1.920508,-4.344603,8.243664,1.146832,-4.497008,-5.579832,-9.576303,-8.453896,-2.095904,-1.968782,0.157800,-5.402232,-5.991976,5.793614,-3.355155,-3.206186,0.653225,-2.580522,6.030273,2.498731,-8.859526,-4.558825,2.308031,5.328482,-4.628616,6.890235,-8.570363,7.615089,-6.173574,0.756513,8.259272,-0.591167,6.740882,1.065107,-8.629492,-2.883344,-0.392930,-7.679424,1.852499,-4.452294,7.802354,-2.330524,7.278597,-6.547715,-2.200946,-6.415561,-3.566765,-6.305186,5.955713,-3.777701,-0.151657,-1.401607,-0.815377,-7.420252,9.639983,7.716439,1.150275,-9.649404,8.539561,-3.074937,-1.823459,8.805329,7.170254,-9.887233,-3.529680,-3.833755,-6.909900,3.037064,4.865455,-0.006506,-1.520162,1.706646,9.916268,-5.856330,0.458996,-1.109220,6.649585],[-1.170538,1.862673,-0.821584,4.534374,2.919663,3.061915,-8.981569,-5.785511,2.967180,-7.351519,-9.122559,-7.820499,-4.239826,9.552390,-6.280488,3.223704,3.807466,9.749508,-0.181899,9.666268,-4.031757,-5.023514,7.283013,-0.025852,-1.576033,-9.930186,-3.562521,0.306434,-9.472585,-0.940292,-8.478299,4.706723,-5.637960,5.954993,7.174269,-1.986036,2.159388,1.680888,-8.190210,-3.208430,-7.658454,9.320751,8.904855,-4.776908,-5.985865,-6.030432,-9.623693,-9.099300,2.258097,0.322313,-2.823091,-8.885347,-1.391250,8.704142,1.656823,3.394729,-1.683417,3.394214,-7.460354,1.565126,-7.470912,4.602487,2.418631,5.266965,3.829376,6.505249,2.169933,4.971463,4.765837,-7.718948,-7.233543,7.888939,-5.695939,6.750735,-2.829506,3.486076,-8.460400,7.298686,0.736796,-0.570596,0.825065,-7.080564,-1.715454,-7.569704,-3.792595,-9.268938,0.605025,9.275206,-1.457762,-8.230761,9.340655,5.414058,-5.387722,4.630062,-7.034533,-8.900810,-9.331986,-7.535693,-7.651992,-9.469388,0.999476,-1.498475,-6.214869,-9.512918,-4.336977,9.526610,4.123005,8.646514,3.113143,2.693885,8.971658,4.570288,-7.068765,-1.794997,9.581096,-7.514329,9.421695,2.687652,-4.875629,3.367633,-5.108913,5.653552,0.073484,7.187392,6.889347,-5.469655,-3.149067,-4.850278,8.937475,9.127841,-5.849091,9.335743,-6.520093,2.396536,2.196414,6.053951,-4.370071,1.535234,-2.424760,-2.608084,9.214047,-1.285488,5.509948,-4.435453,1.172690,9.147518,8.899302,2.776860,9.425373,3.107373,5.033005,-6.615976,8.990213,-1.400699,-3.976523,4.755463,4.127754,7.456867,4.694242,-4.233273,5.933879,-2.257814,-9.214595,7.271768,-9.537953,-9.725505,9.384004,7.323341,-8.428719,-5.188934,1.694067,-4.370384,8.618937,4.979770,-7.263168,8.298298,9.086015,-3.467624,-4.806290,3.123088,-6.422752,-4.182887,-0.119747,-2.513389,9.611935,0.360054,1.421570,-8.144155,8.278039,3.620343,0.046991,5.965734,-7.105622,-4.825174,4.704134],[0.493042,-8.489662,-9.331825,-9.250775,2.650630,3.192393,-6.618285,4.299252,-7.421640,-0.439292,-1.596641,-9.469047,-9.887720,3.479347,2.000149,-2.733816,1.394636,1.427971,9.951385,-4.058352,3.591799,5.654904,-9.053032,-2.163382,5.074556,-3.030933,-1.948733,8.835726,8.482086,-0.454787,-2.718666,-5.844355,6.125385,6.940065,2.311332,5.235814,0.553276,-2.800829,3.075602,-9.239310,0.219215,-8.367933,-8.211665,-2.644715,7.237156,-1.795878,3.469803,4.117919,-5.454105,7.595471,-5.171750,0.055871,7.432632,-5.449527,-4.307470,7.984468,3.792232,-0.913513,1.568087,-3.581030,9.268748,-6.902017,4.617593,9.368364,-5.959451,3.289350,1.657550,2.876861,-9.110078,-0.150610,-9.821234,-1.550272,6.756326,1.989297,8.865286,9.014412,9.366373,0.837844,6.176036,-4.293344,1.025939,9.259762,-7.268587,4.149142,-2.432727,-3.095973,9.473840,-2.953882,0.502686,8.582798,8.388036,5.085189,0.798091,6.168628,9.179619,-9.696689,0.179411,6.499221,-3.260690,-1.514587,-6.639295,-7.828181,7.883357,7.110049,-4.741435,4.880103,8.288514,-2.708757,4.721817,-1.011535,-4.439368,0.827049,-9.273881,0.567389,1.968983,8.981256,-5.646295,6.337288,-7.593540,-1.204919,-6.909978,2.172405,-5.396334,-4.749931,2.489706,-8.475247,7.438787,-4.263455,4.778807,8.856505,0.480851,-8.771897,-3.645283,-9.300857,-5.260451,0.520134,-1.025366,0.613497,2.463794,5.440218,-8.562662,-6.575140,3.856213,1.192879,-9.635248,-9.888876,8.629066,-7.431767,-8.796595,-4.923728,3.192031,4.859926,-9.513812,8.671374,-2.082847,9.920753,-4.376415,0.640846,-9.548360,-4.108068,7.626193,-8.384425,-3.075584,-0.585282,8.457920,1.462381,-7.689933,5.958528,2.255989,-3.312695,6.280653,-7.989017,1.106767,2.077108,-6.756507,6.506563,-0.535174,-8.100508,-6.847867,-4.186228,-3.425986,-9.135736,-8.283433,2.787744,-3.929878,-2.561424,2.215041,-0.243832,-7.779746,-5.914754,5.318913,-1.036124,-7.784713,-9.553427,9.035227],[-1.016013,8.729953,-9.749509,-2.296573,3.986330,-4.101957,-5.973988,3.277998,-1.715432,8.656671,-8.736300,-4.508308,-8.560504,-1.518875,6.013939,3.785328,1.154886,0.116562,0.395655,1.816166,-5.051501,-6.014603,-9.770187,5.874939,5.205245,6.975506,-9.282947,-3.341039,-5.593166,7.106403,-6.428336,-5.669470,6.477602,0.987207,8.178913,-0.095904,-2.298155,4.790737,-7.022592,-3.146767,1.214519,1.804188,2.157409,-4.539517,-6.590625,-6.516990,7.758254,-9.375908,-0.778320,7.170500,5.819394,3.979976,-2.689899,-7.506596,-4.787964,-4.515587,-5.091436,5.452699,8.573961,-4.346620,3.190549,-2.228762,4.412960,-4.961535,-4.565739,3.941788,8.522062,-3.260217,9.678928,-8.381429,7.135068,9.669243,-6.969241,5.036355,4.172294,-4.577285,-5.219556,8.249087,2.005669,3.363308,9.687142,1.376615,-2.747966,-5.547742,-7.100969,1.224163,7.356074,-9.656040,9.918591,5.908601,0.212968,2.787640,-7.301997,1.519059,-5.171765,7.530024,9.026235,-1.128974,-9.630045,-3.713722,4.904900,-8.203112,-1.023428,0.972595,6.247942,-2.119881,-3.780844,-7.613736,-7.374757,-6.688143,5.505948,-0.522365,1.258942,-5.510368,4.032744,-1.561556,-5.240120,1.773036,0.002569,-2.148132,0.768021,0.804827,-9.123315,-7.367822,1.814742,-7.164775,5.269444,-6.184542,0.402711,-5.231276,7.304038,-0.887630,-8.601559,-1.306504,-6.169436,-3.353076,-4.367742,7.249680,9.461023,5.587818,-8.907161,3.560767,5.575846,-5.120912,-4.693098,5.469667,-3.699858,0.570318,-0.206349,-9.446097,-3.402385,-6.981783,8.764001,-7.514759,-1.974677,6.477272,1.007664,-9.124312,-4.439156,9.444751,0.115469,-2.199803,-0.537417,-5.159172,-8.547124,1.718281,5.297003,2.156413,8.491152,-2.181746,0.268633,2.222803,-1.180969,4.481841,-2.055631,-4.278335,-2.120843,8.808433,-5.889828,0.612744,7.807967,-6.842972,-3.706732,2.914556,6.829920,2.093521,3.399825,4.558460,-0.464065,2.214233,8.817012,4.302365,-6.589552,2.737411,-1.223634],[4.503232,2.279402,1.135596,0.627070,-6.783918,-1.051618,-9.057459,-4.536902,5.744671,-5.915629,8.510989,-8.223559,8.831606,-4.551682,-7.725125,1.373876,-9.827371,8.303422,4.129914,-9.504539,7.579899,3.823027,-7.034355,1.021697,0.215720,-4.247835,7.262215,7.006244,-0.397985,7.623421,-1.420075,-0.951238,-9.828356,-4.456201,0.722484,3.352497,1.443209,-3.541071,-7.752440,-6.442419,8.131246,-1.502024,5.879407,-9.035030,0.517738,-9.042309,-4.902419,-4.078516,-7.789103,-5.232816,0.672838,-5.560342,0.895402,9.934210,-2.957565,4.120686,-4.186159,7.347500,7.659441,1.655972,9.981994,-1.585355,9.079906,-8.394818,-9.275546,8.478167,-0.640795,-2.078143,-1.247346,8.647560,5.271482,-5.829120,1.449040,-3.240805,5.518828,0.638028,0.982979,1.534398,8.862990,7.961185,-1.982838,8.360308,-6.623762,-9.701987,8.363747,-3.543313,-2.723632,5.323595,-3.578386,-5.879415,2.896830,-9.176638,-4.875665,5.964849,-9.594698,1.751135,5.950626,1.869920,-0.535679,-7.075786,-7.070267,7.911730,-3.223300,-7.039019,-1.302534,-2.756845,-3.174226,-0.894042,-5.326234,-6.296780,-6.482452,-5.318332,2.828176,-0.991273,5.160080,4.324496,5.970514,5.547721,8.216189,-5.667472,-2.263328,-4.910026,2.612671,7.369106,-0.636903,-4.822746,3.188745,2.410109,2.370387,9.289900,-4.201275,-8.777449,6.780821,4.715466,1.501467,-6.261463,2.903247,-3.508398,6.879691,-2.562098,-3.193021,3.074517,5.026541,-7.751702,-5.692664,-5.735691,-0.743117,-9.575373,-5.217051,7.523342,4.163424,3.017234,-1.520523,4.812952,-5.906728,1.458130,8.907800,-0.900015,4.054536,1.708367,-4.566518,5.152765,-1.518154,-4.982228,8.468454,-0.048637,9.843587,8.134792,2.898400,-1.192495,8.782613,-7.592636,-7.606545,0.394507,6.700740,7.867871,-5.952098,3.215538,-0.178990,1.057054,2.474100,-0.962714,-3.470467,-0.994050,-1.244419,1.527863,-7.330135,-3.101537,-7.979167,4.804907,-6.273761,-8.022758,3.742808,1.030771,4.228713]], dtype = "float32")#candidate|5545|(7, 195)|const|float32
const_5546 = relay.const([True,True,False,False,True,True,True,True,False,True,True,False,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,False,True], dtype = "bool")#candidate|5546|(40,)|const|bool
const_5547 = relay.const([True,False,True,True,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True,True,False,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,True,False,True,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,True,False,False,True,False,True,True,False,True,False,True,True,True,True,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,True,False,False,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,True,True,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,False,True,False,True,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,True,True,False,True,False,True,False,True,True], dtype = "bool")#candidate|5547|(560,)|const|bool
call_5544 = relay.TupleGetItem(func_5512_call(relay.reshape(const_5545.astype('float32'), [13, 15, 7]), relay.reshape(const_5546.astype('bool'), [40,]), relay.reshape(const_5547.astype('bool'), [40, 14]), ), 12)
call_5548 = relay.TupleGetItem(func_5516_call(relay.reshape(const_5545.astype('float32'), [13, 15, 7]), relay.reshape(const_5546.astype('bool'), [40,]), relay.reshape(const_5547.astype('bool'), [40, 14]), ), 12)
func_2422_call = mod.get_global_var('func_2422')
func_2425_call = mutated_mod.get_global_var('func_2425')
var_5550 = relay.var("var_5550", dtype = "float64", shape = (624,))#candidate|5550|(624,)|var|float64
const_5551 = relay.const([[-3.655557],[8.392451],[-4.283948],[-4.881464],[-1.495670],[5.443698],[0.590268],[6.764599],[6.060222],[2.771944],[7.299257],[1.259356],[-3.280960],[-1.208305]], dtype = "float32")#candidate|5551|(14, 1)|const|float32
call_5549 = relay.TupleGetItem(func_2422_call(relay.reshape(var_5550.astype('float64'), [624,]), relay.reshape(const_5551.astype('float32'), [14,]), ), 3)
call_5552 = relay.TupleGetItem(func_2425_call(relay.reshape(var_5550.astype('float64'), [624,]), relay.reshape(const_5551.astype('float32'), [14,]), ), 3)
uop_5577 = relay.atanh(uop_5542.astype('float64')) # shape=(5, 12, 10)
output = relay.Tuple([call_5544,const_5545,const_5546,const_5547,call_5549,var_5550,const_5551,uop_5577,])
output2 = relay.Tuple([call_5548,const_5545,const_5546,const_5547,call_5552,var_5550,const_5551,uop_5577,])
func_5592 = relay.Function([var_5541,var_5550,], output)
mod['func_5592'] = func_5592
mod = relay.transform.InferType()(mod)
mutated_mod['func_5592'] = func_5592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5592_call = mutated_mod.get_global_var('func_5592')
var_5594 = relay.var("var_5594", dtype = "float32", shape = (5, 12, 10))#candidate|5594|(5, 12, 10)|var|float32
var_5595 = relay.var("var_5595", dtype = "float64", shape = (624,))#candidate|5595|(624,)|var|float64
call_5593 = func_5592_call(var_5594,var_5595,)
output = call_5593
func_5596 = relay.Function([var_5594,var_5595,], output)
mutated_mod['func_5596'] = func_5596
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6104 = relay.const([[[-9.894606],[-6.621086],[-6.695941],[-5.068169],[-9.126078],[7.794948],[-5.940341],[1.142753]],[[-0.225535],[-8.037631],[-4.902887],[-0.830650],[2.816130],[2.611055],[-9.516534],[-1.976811]],[[-0.728852],[5.119248],[0.144012],[-9.029554],[1.218351],[-9.198252],[-6.611625],[-9.515381]],[[-1.231705],[4.558330],[-8.633750],[-4.922970],[-5.840488],[-9.902899],[-2.179509],[-9.589243]]], dtype = "float32")#candidate|6104|(4, 8, 1)|const|float32
var_6105 = relay.var("var_6105", dtype = "float32", shape = (4, 8, 15))#candidate|6105|(4, 8, 15)|var|float32
bop_6106 = relay.floor_divide(const_6104.astype('float32'), var_6105.astype('float32')) # shape=(4, 8, 15)
output = bop_6106
output2 = bop_6106
func_6118 = relay.Function([var_6105,], output)
mod['func_6118'] = func_6118
mod = relay.transform.InferType()(mod)
mutated_mod['func_6118'] = func_6118
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6119 = relay.var("var_6119", dtype = "float32", shape = (4, 8, 15))#candidate|6119|(4, 8, 15)|var|float32
func_6118_call = mutated_mod.get_global_var('func_6118')
call_6120 = func_6118_call(var_6119)
output = call_6120
func_6121 = relay.Function([var_6119], output)
mutated_mod['func_6121'] = func_6121
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6161 = relay.var("var_6161", dtype = "int8", shape = (7, 8, 8))#candidate|6161|(7, 8, 8)|var|int8
var_6162 = relay.var("var_6162", dtype = "int8", shape = (7, 8, 8))#candidate|6162|(7, 8, 8)|var|int8
bop_6163 = relay.greater_equal(var_6161.astype('bool'), relay.reshape(var_6162.astype('bool'), relay.shape_of(var_6161))) # shape=(7, 8, 8)
output = relay.Tuple([bop_6163,])
output2 = relay.Tuple([bop_6163,])
func_6166 = relay.Function([var_6161,var_6162,], output)
mod['func_6166'] = func_6166
mod = relay.transform.InferType()(mod)
mutated_mod['func_6166'] = func_6166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6166_call = mutated_mod.get_global_var('func_6166')
var_6168 = relay.var("var_6168", dtype = "int8", shape = (7, 8, 8))#candidate|6168|(7, 8, 8)|var|int8
var_6169 = relay.var("var_6169", dtype = "int8", shape = (7, 8, 8))#candidate|6169|(7, 8, 8)|var|int8
call_6167 = func_6166_call(var_6168,var_6169,)
output = call_6167
func_6170 = relay.Function([var_6168,var_6169,], output)
mutated_mod['func_6170'] = func_6170
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6754 = relay.const([[[True,False,False,True],[True,True,True,False],[False,True,False,False],[False,False,True,True],[False,False,True,True]],[[False,True,True,True],[False,True,False,False],[False,True,False,True],[True,True,False,False],[False,True,False,False]],[[True,False,False,True],[True,False,True,True],[False,False,True,True],[True,False,False,True],[True,False,True,True]],[[True,False,True,False],[True,True,False,True],[True,False,False,False],[False,False,True,True],[False,False,True,True]],[[False,False,False,True],[False,False,True,True],[False,False,True,True],[False,False,True,True],[True,True,True,False]],[[True,True,False,True],[True,False,True,False],[False,False,True,True],[False,True,False,False],[True,True,True,True]],[[False,False,False,False],[False,True,False,False],[False,True,False,True],[False,True,False,True],[True,True,True,True]],[[True,False,False,True],[True,True,True,False],[False,True,True,False],[True,True,True,False],[False,True,False,False]],[[False,False,True,False],[True,False,True,False],[True,True,False,True],[True,False,False,True],[True,False,True,False]],[[True,True,False,False],[False,True,False,True],[False,False,True,False],[True,True,False,False],[True,False,True,False]],[[True,True,True,False],[True,False,True,True],[False,True,True,True],[False,True,True,False],[True,False,True,True]],[[False,True,False,True],[False,False,False,True],[False,True,True,True],[False,True,False,True],[True,True,False,True]],[[False,True,False,False],[True,True,True,False],[True,False,True,False],[True,True,True,True],[False,True,False,False]],[[False,False,False,False],[True,False,False,False],[True,False,True,False],[False,True,False,True],[False,True,True,False]],[[False,False,False,True],[False,True,True,False],[True,True,False,True],[True,False,False,False],[False,False,False,False]],[[False,True,False,False],[False,False,True,True],[False,False,True,False],[True,True,True,True],[False,False,True,True]]], dtype = "bool")#candidate|6754|(16, 5, 4)|const|bool
var_6755 = relay.var("var_6755", dtype = "bool", shape = (16, 5, 4))#candidate|6755|(16, 5, 4)|var|bool
bop_6756 = relay.logical_and(const_6754.astype('bool'), relay.reshape(var_6755.astype('bool'), relay.shape_of(const_6754))) # shape=(16, 5, 4)
output = relay.Tuple([bop_6756,])
output2 = relay.Tuple([bop_6756,])
func_6762 = relay.Function([var_6755,], output)
mod['func_6762'] = func_6762
mod = relay.transform.InferType()(mod)
var_6763 = relay.var("var_6763", dtype = "bool", shape = (16, 5, 4))#candidate|6763|(16, 5, 4)|var|bool
output = func_6762(var_6763)
func_6764 = relay.Function([var_6763], output)
mutated_mod['func_6764'] = func_6764
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6813 = relay.var("var_6813", dtype = "float64", shape = (8, 5, 3))#candidate|6813|(8, 5, 3)|var|float64
uop_6814 = relay.asin(var_6813.astype('float64')) # shape=(8, 5, 3)
func_3525_call = mod.get_global_var('func_3525')
func_3529_call = mutated_mod.get_global_var('func_3529')
var_6827 = relay.var("var_6827", dtype = "bool", shape = (20, 2))#candidate|6827|(20, 2)|var|bool
const_6828 = relay.const([True,True,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,False,False,True,True,True,False,True,False,True,False,False,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,True,False,False,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,True,False,False,True,True,False,True,False,True,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,True,True,True,False,True,True,True,False,True,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,False,True,True,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,True,True,True,True,True,False,True,True,True,True,False,False,True,False,True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True,True,True,False,True,True,False,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,False,True,True,True], dtype = "bool")#candidate|6828|(560,)|const|bool
call_6826 = func_3525_call(relay.reshape(var_6827.astype('bool'), [4, 1, 10]), relay.reshape(const_6828.astype('bool'), [4, 14, 10]), )
call_6829 = func_3525_call(relay.reshape(var_6827.astype('bool'), [4, 1, 10]), relay.reshape(const_6828.astype('bool'), [4, 14, 10]), )
output = relay.Tuple([uop_6814,call_6826,var_6827,const_6828,])
output2 = relay.Tuple([uop_6814,call_6829,var_6827,const_6828,])
func_6838 = relay.Function([var_6813,var_6827,], output)
mod['func_6838'] = func_6838
mod = relay.transform.InferType()(mod)
mutated_mod['func_6838'] = func_6838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6838_call = mutated_mod.get_global_var('func_6838')
var_6840 = relay.var("var_6840", dtype = "float64", shape = (8, 5, 3))#candidate|6840|(8, 5, 3)|var|float64
var_6841 = relay.var("var_6841", dtype = "bool", shape = (20, 2))#candidate|6841|(20, 2)|var|bool
call_6839 = func_6838_call(var_6840,var_6841,)
output = call_6839
func_6842 = relay.Function([var_6840,var_6841,], output)
mutated_mod['func_6842'] = func_6842
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7392 = relay.var("var_7392", dtype = "int32", shape = (5, 8, 7))#candidate|7392|(5, 8, 7)|var|int32
var_7393 = relay.var("var_7393", dtype = "int32", shape = (5, 8, 7))#candidate|7393|(5, 8, 7)|var|int32
bop_7394 = relay.left_shift(var_7392.astype('int32'), relay.reshape(var_7393.astype('int32'), relay.shape_of(var_7392))) # shape=(5, 8, 7)
output = relay.Tuple([bop_7394,])
output2 = relay.Tuple([bop_7394,])
func_7409 = relay.Function([var_7392,var_7393,], output)
mod['func_7409'] = func_7409
mod = relay.transform.InferType()(mod)
mutated_mod['func_7409'] = func_7409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7409_call = mutated_mod.get_global_var('func_7409')
var_7411 = relay.var("var_7411", dtype = "int32", shape = (5, 8, 7))#candidate|7411|(5, 8, 7)|var|int32
var_7412 = relay.var("var_7412", dtype = "int32", shape = (5, 8, 7))#candidate|7412|(5, 8, 7)|var|int32
call_7410 = func_7409_call(var_7411,var_7412,)
output = call_7410
func_7413 = relay.Function([var_7411,var_7412,], output)
mutated_mod['func_7413'] = func_7413
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7492 = relay.var("var_7492", dtype = "bool", shape = ())#candidate|7492|()|var|bool
const_7493 = relay.const([[[False],[True],[True],[False],[True],[False],[True],[True],[True],[True]],[[True],[False],[True],[False],[False],[True],[True],[True],[False],[True]],[[False],[True],[False],[False],[True],[True],[True],[True],[False],[True]],[[True],[True],[False],[False],[True],[False],[False],[False],[True],[True]],[[False],[False],[False],[True],[False],[False],[False],[True],[True],[True]],[[False],[False],[False],[True],[False],[False],[False],[False],[True],[True]]], dtype = "bool")#candidate|7493|(6, 10, 1)|const|bool
bop_7494 = relay.logical_and(var_7492.astype('bool'), const_7493.astype('bool')) # shape=(6, 10, 1)
output = bop_7494
output2 = bop_7494
func_7500 = relay.Function([var_7492,], output)
mod['func_7500'] = func_7500
mod = relay.transform.InferType()(mod)
var_7501 = relay.var("var_7501", dtype = "bool", shape = ())#candidate|7501|()|var|bool
output = func_7500(var_7501)
func_7502 = relay.Function([var_7501], output)
mutated_mod['func_7502'] = func_7502
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8257 = relay.var("var_8257", dtype = "float32", shape = (9, 7, 6))#candidate|8257|(9, 7, 6)|var|float32
uop_8258 = relay.exp(var_8257.astype('float32')) # shape=(9, 7, 6)
output = relay.Tuple([uop_8258,])
output2 = relay.Tuple([uop_8258,])
func_8260 = relay.Function([var_8257,], output)
mod['func_8260'] = func_8260
mod = relay.transform.InferType()(mod)
var_8261 = relay.var("var_8261", dtype = "float32", shape = (9, 7, 6))#candidate|8261|(9, 7, 6)|var|float32
output = func_8260(var_8261)
func_8262 = relay.Function([var_8261], output)
mutated_mod['func_8262'] = func_8262
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8455 = relay.const([[[-5.943216,-3.207505,9.589234,-6.846690,0.503883,-6.796417],[3.600437,5.934588,-8.728386,2.834254,8.175617,6.367951]],[[-0.948355,4.583852,8.700822,-9.820734,-8.519559,-2.808830],[-9.134032,4.059796,5.062350,0.146924,-2.099828,-9.161582]],[[-3.386255,-2.197968,0.620653,-8.579448,1.745425,0.213669],[-5.973849,2.781057,-2.532714,-6.014712,-8.578459,-2.981617]],[[9.021723,6.540765,-4.022243,-8.691251,6.010018,-9.121797],[-8.295034,0.907053,6.272611,-8.677874,-1.598737,-1.180396]],[[7.568302,5.253670,-2.525078,6.120650,2.220163,2.634943],[-2.586349,-9.512391,-4.866089,6.187855,8.083867,9.903686]],[[4.231176,-7.552966,4.388496,-1.111780,6.016448,-3.397446],[3.183219,0.698559,-2.073792,6.775470,-0.721254,9.403370]],[[-5.891117,-7.867660,9.803172,-6.210765,8.186650,-9.538911],[2.056697,-2.632319,-5.275085,-8.690295,-0.133036,-1.642062]],[[3.237226,-2.686994,-9.809256,-2.328677,-7.462636,-3.737040],[-5.521582,-5.785132,-8.064839,-7.291930,8.670093,-8.271450]],[[-6.193365,7.045009,4.323333,4.238744,2.014515,-0.028292],[1.033478,8.500455,7.349201,2.782194,-9.389293,-3.365045]],[[-2.539046,2.273248,3.597068,4.852869,-4.727279,-1.604052],[8.473241,-0.186882,6.568887,-5.241874,-0.068029,-4.987339]],[[9.644924,0.109151,9.972044,-4.458523,2.672412,3.151314],[-9.262678,-5.643859,-1.666408,-0.197605,-9.539714,-2.076569]],[[3.967578,1.841345,-0.254452,-6.050280,3.179942,-9.002029],[5.524205,0.201654,-5.030621,2.051008,6.891654,6.761067]],[[-6.614788,3.849511,3.653895,6.035528,-1.275443,-3.403401],[-9.526003,0.261919,-5.768081,1.949988,-7.731126,-9.364671]],[[0.743381,1.317846,6.500212,-4.406685,-8.953513,5.060030],[-7.602984,7.301675,0.846218,7.254426,-7.277445,3.598950]],[[-6.692876,-6.445791,6.034185,9.765188,-6.143202,-3.593269],[-4.957575,0.532208,-6.517590,-1.484006,4.582634,-1.310321]]], dtype = "float32")#candidate|8455|(15, 2, 6)|const|float32
uop_8456 = relay.rsqrt(const_8455.astype('float32')) # shape=(15, 2, 6)
bop_8460 = relay.bitwise_xor(const_8455.astype('uint8'), relay.reshape(uop_8456.astype('uint8'), relay.shape_of(const_8455))) # shape=(15, 2, 6)
func_3396_call = mod.get_global_var('func_3396')
func_3400_call = mutated_mod.get_global_var('func_3400')
var_8467 = relay.var("var_8467", dtype = "float64", shape = (720,))#candidate|8467|(720,)|var|float64
const_8468 = relay.const([[-8,-1],[-3,-3],[-10,6],[8,-10],[9,-10],[-1,1],[-6,-7],[-4,1],[9,7],[4,9],[-6,-1],[10,9],[-5,8],[-7,-10],[-4,10],[-9,-10],[-2,-10],[-6,-10],[3,7],[5,3],[-6,6],[9,-6],[2,-1],[-6,-7],[7,-7],[-6,5],[10,-3],[9,7],[-6,-9],[-10,8],[-3,-2],[9,9],[9,-8],[5,-6],[-7,-2],[-6,2],[-3,-9],[-7,4],[5,1],[7,7],[-6,-1],[-10,5],[-8,6],[5,8],[-8,-10],[5,7],[10,-1],[7,-3],[4,-3],[-10,6],[5,-4],[9,-10],[-10,-3],[4,4],[-9,-3],[4,9],[-9,-6],[3,9],[-3,8],[-2,8],[9,-6],[5,-1],[6,3],[9,9]], dtype = "int64")#candidate|8468|(64, 2)|const|int64
call_8466 = relay.TupleGetItem(func_3396_call(relay.reshape(var_8467.astype('float64'), [3, 16, 15]), relay.reshape(const_8468.astype('int64'), [8, 16]), ), 5)
call_8469 = relay.TupleGetItem(func_3400_call(relay.reshape(var_8467.astype('float64'), [3, 16, 15]), relay.reshape(const_8468.astype('int64'), [8, 16]), ), 5)
func_8260_call = mod.get_global_var('func_8260')
func_8262_call = mutated_mod.get_global_var('func_8262')
const_8474 = relay.const([[0.309808,-0.975477,0.475196],[0.535556,0.180246,-6.594604],[9.311706,3.820667,-7.498172],[9.818857,-8.626884,5.529454],[8.778472,4.674278,1.427105],[-8.134187,7.918598,3.053738],[-8.187469,4.321026,-9.734372],[-1.798288,-2.428749,-0.331571],[-8.744292,3.867471,4.819355],[1.175890,5.844226,-2.221630],[-2.130152,7.173106,5.958737],[-4.386228,1.855773,-0.125312],[-5.283362,8.003947,-8.620446],[4.693629,4.339623,9.030990],[9.093326,1.332834,-0.907513],[6.076576,3.688896,-1.490404],[-9.041983,-9.574274,-6.643019],[5.316528,1.974040,5.927723],[-4.498127,-6.271379,3.229035],[-7.931591,3.551658,-5.492322],[1.409369,-6.286792,-6.399722],[-5.298044,8.955200,4.264324],[0.759276,-3.627837,7.333932],[-6.512341,5.586855,-6.832416],[2.288686,2.202935,-0.931816],[-1.886583,-7.822804,-6.949332],[8.402851,1.226940,1.567470],[-0.890670,3.599736,-0.859566],[-7.268491,1.463414,9.789315],[8.278901,-0.978638,2.017326],[-0.021565,3.127602,-6.549052],[7.918409,-8.044003,1.327065],[3.595225,-4.826608,-1.642137],[-4.815877,0.587519,-9.680357],[9.135476,7.639983,0.225695],[-9.605718,-6.788139,-6.324353],[-1.241256,-6.896491,-0.392606],[-2.218492,9.419413,-0.299652],[9.083818,4.658397,-5.649752],[-6.055682,1.110040,-9.707552],[-0.796578,-0.832534,-0.690635],[-7.979853,-0.972825,3.752491],[-2.670940,9.987510,-2.570234],[6.177288,-2.135427,-2.152118],[7.459075,-4.771747,7.881035],[6.918743,3.366521,-6.804600],[-3.146073,-1.850417,-4.725936],[1.166784,-3.814432,-1.150912],[-1.635963,-6.207943,-5.926210],[-9.862783,8.250843,-3.981152],[9.058381,8.988440,6.965085],[-7.096291,-3.757558,3.478770],[-8.207508,8.736993,4.561153],[9.118937,0.323017,-7.700796],[-2.240437,0.314200,6.499656],[-2.411016,1.690147,1.065018],[-8.903086,-9.143674,7.864344],[3.932521,-5.522210,-5.016833],[-8.821313,-4.978620,9.056017],[-2.392322,2.902056,-8.972814],[2.361141,4.211332,-0.831217],[-4.750897,-6.036058,9.987071],[-9.505909,3.690159,0.046185],[-3.208313,7.207161,8.617504],[2.241667,-3.183425,-7.789773],[8.675332,-1.137029,-8.986030],[4.603767,6.579682,-4.640650],[0.855971,1.760269,6.787169],[-5.918781,-1.062764,-1.633914],[9.037594,8.552848,-8.211195],[-2.116600,-5.377089,-3.967244],[3.077596,7.661963,5.602120],[2.856377,-1.369368,1.300976],[5.102816,2.121041,0.560594],[2.085837,8.355549,4.346319],[-6.201546,6.107084,-0.796813],[-5.817705,8.589535,-1.646908],[6.194809,-0.043855,-6.922219],[7.409102,1.196096,9.267321],[8.577635,0.109097,-0.530977],[-0.213494,-7.200431,6.731141],[-3.430478,-3.765883,7.703232],[-4.758011,-0.682256,-5.527720],[2.165987,-4.008409,-6.147563],[2.329895,7.091016,-8.668324],[5.953896,-7.939822,-9.056271],[-9.736354,8.703706,-8.736321],[3.629298,7.408201,0.858494],[-6.245206,-7.054506,-2.580580],[6.418758,-9.597391,-2.914589],[-9.962756,4.885274,-2.348888],[-6.425360,-2.842459,7.262285],[-0.127525,-4.183434,6.290514],[0.611289,-0.429458,-2.424969],[-7.550060,-4.346140,-8.172398],[6.668285,7.544116,-2.369207],[-2.688782,-4.722524,-3.385087],[5.763903,9.822458,1.533649],[-9.448765,-3.875604,-1.083696],[5.509470,-7.053783,8.068851],[-0.304396,6.253015,2.817347],[5.071609,-9.606410,4.664622],[-7.503600,9.816462,-8.432516],[-0.208308,4.532692,2.953618],[3.879599,-6.567916,-1.400253],[3.097133,-1.599227,-6.165244],[-2.975316,7.728412,-4.523777],[3.212729,-6.600445,-1.250230],[4.215562,4.546328,8.883935],[-3.720885,0.339254,7.553381],[-7.728648,-0.756450,5.351747],[8.589669,6.715123,3.305224],[9.524190,-9.887052,2.637177],[-9.097569,2.184114,-2.906581],[-7.929897,3.347099,2.070059],[6.772573,4.895656,1.444647],[5.990458,-5.394321,2.663939],[-2.004717,9.879588,-8.986299],[7.852199,7.489421,-9.733570],[1.687432,7.046547,-6.559805],[1.595892,-4.780696,-2.095865],[-5.774670,-5.303626,-6.510010],[-9.651759,-6.407312,6.252054],[-9.774257,1.775221,1.828091],[0.515973,-4.436101,5.355423],[-6.979742,6.394873,-1.279365]], dtype = "float32")#candidate|8474|(126, 3)|const|float32
call_8473 = relay.TupleGetItem(func_8260_call(relay.reshape(const_8474.astype('float32'), [9, 7, 6])), 0)
call_8475 = relay.TupleGetItem(func_8262_call(relay.reshape(const_8474.astype('float32'), [9, 7, 6])), 0)
output = relay.Tuple([bop_8460,call_8466,var_8467,const_8468,call_8473,const_8474,])
output2 = relay.Tuple([bop_8460,call_8469,var_8467,const_8468,call_8475,const_8474,])
func_8481 = relay.Function([var_8467,], output)
mod['func_8481'] = func_8481
mod = relay.transform.InferType()(mod)
mutated_mod['func_8481'] = func_8481
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8482 = relay.var("var_8482", dtype = "float64", shape = (720,))#candidate|8482|(720,)|var|float64
func_8481_call = mutated_mod.get_global_var('func_8481')
call_8483 = func_8481_call(var_8482)
output = call_8483
func_8484 = relay.Function([var_8482], output)
mutated_mod['func_8484'] = func_8484
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8566 = relay.const([[[8.577379,-6.530416,8.364674,8.449107,-0.932083,-7.747849,-2.242066,7.387135,-4.666570,-6.045564,5.547496,-4.067988,6.941406,4.730763,6.999639],[0.177049,6.159603,-2.797910,-4.060782,-4.976022,-3.198703,3.867448,7.787459,-4.801747,-8.830934,8.220168,4.210735,-6.862176,3.971122,9.019965],[-7.998091,5.601521,-8.168226,-1.034332,-1.581505,-0.881091,1.361980,6.440178,-3.984532,-6.265634,4.875778,-6.688563,3.264729,8.463864,-8.948922],[-3.858047,2.890720,4.069008,6.882438,-1.266648,-8.591998,8.293345,-9.665712,-8.764850,-5.771606,-8.139375,-9.981857,-2.166292,3.595669,1.231003],[-5.621275,-4.554036,2.505235,-0.951137,6.934022,-2.969590,2.341436,0.745178,2.549015,-8.905371,8.642055,3.210395,-2.193640,5.862395,4.654681],[2.908178,-6.014485,5.438511,5.559940,1.324798,4.333916,-2.412807,7.761984,-0.778225,6.731768,-0.381096,9.462332,3.456892,0.490877,9.695941],[3.305274,-4.365602,-3.569060,3.111835,8.805521,-2.541919,9.782995,9.683214,6.135467,8.897372,7.918526,5.387089,3.338402,-2.453335,0.974421],[9.628883,-7.257397,3.295512,5.357261,4.080701,3.273356,3.028991,-4.212321,0.364916,2.039718,0.501940,-1.255312,0.581749,7.467445,-6.091316],[-3.004107,7.142664,3.645343,2.716734,2.611211,-0.004523,8.777064,6.969541,-7.215161,7.889048,0.192116,-4.487124,4.285774,1.176233,9.351288],[3.286093,7.510016,1.423541,0.586258,-3.485107,3.040003,1.721211,-9.345733,-4.829353,6.126421,-8.080975,-2.467408,-5.237032,9.611970,-2.735497],[1.094638,-5.463520,-9.114098,-4.042638,-6.929416,1.158713,7.222781,-0.135032,1.121297,-4.544238,-3.458980,-3.175980,-7.649779,-5.312808,-6.323235],[-6.580242,4.404649,9.331652,-4.315884,0.927890,-5.283911,-7.830471,-9.083070,3.008104,-0.223805,-7.418448,3.192483,7.047274,-1.139729,1.517362],[4.093215,-4.774619,-9.004798,-6.250548,3.696686,9.279072,-8.897044,5.660350,9.849663,0.235853,1.858254,-9.336907,-1.757020,-0.168283,-7.197478],[8.230609,5.876034,-1.997483,6.477091,0.760364,-7.649083,-0.579176,-7.371424,1.407995,6.157379,0.036397,6.825726,9.474352,-6.697216,-3.739205],[0.053076,-5.144617,2.925901,-5.215249,7.790207,-7.182243,-0.027230,3.170744,-1.623259,-4.652404,2.007109,-7.964593,-2.911337,-4.449141,0.882696]],[[9.109662,-7.971058,-4.406187,-1.136648,4.899037,-7.596555,5.441672,-9.554836,2.927737,-3.613621,-0.938654,-5.515929,-9.629473,-5.750893,6.499008],[9.308562,-5.073004,-4.016667,6.820750,2.182381,-1.081825,-7.751328,6.937808,-7.431755,-8.522111,-5.347019,-1.327198,7.403525,0.383432,0.797012],[-4.771367,9.381896,5.500377,2.536521,-2.329710,6.658884,-8.053857,0.304151,-6.687100,-9.696985,-9.378994,-7.163395,8.257520,5.439197,4.078775],[3.062423,0.599785,7.716158,-9.554615,1.953454,4.500020,-6.511283,0.779416,3.683402,9.213952,-3.271853,8.984488,0.189487,-2.822169,8.413069],[4.593346,9.815060,-9.049554,2.295128,4.352747,3.816453,8.256522,-6.168306,3.466934,2.426595,-8.133168,-5.960935,-8.369600,-0.350903,-9.045645],[-7.730526,3.236648,-9.964400,-0.092458,-4.934382,3.383385,1.680317,4.796150,4.168335,4.211677,-4.931868,-1.665024,2.634537,-9.431846,3.791228],[-2.713635,-4.339552,-4.466130,4.777510,1.557124,-4.393809,4.963106,2.138257,-7.553049,-9.522652,6.079038,0.436389,2.779908,-5.743541,-3.974471],[0.039087,-5.572408,-4.519629,-5.279250,5.316282,-2.673400,-4.151466,3.154901,-7.345592,-1.252365,-5.538786,6.429870,6.189832,-1.255182,-9.835898],[-0.849024,1.047723,-9.053718,6.584101,0.111212,-6.205159,-4.773354,-8.477510,-2.533891,8.797541,8.860343,2.078240,3.003438,5.035231,-6.946412],[8.146424,6.893924,5.365711,-8.912963,3.256794,-9.353470,2.269322,-6.277496,-8.906835,8.702363,-6.603458,2.753001,7.743850,-4.072445,0.330983],[6.637742,7.704916,3.232333,-9.393042,0.532938,-6.019835,0.303192,3.905632,5.331508,-2.894282,8.751185,0.744809,-2.000613,-6.408042,3.066033],[-4.864997,-1.347128,-7.241030,-3.640516,9.534465,-6.202465,7.107973,-4.644369,8.642216,0.941057,-3.328512,-1.943069,3.379966,-8.660364,-7.087614],[4.394760,-8.522559,-2.945720,-7.014314,4.123058,5.444146,1.884340,6.965172,6.584483,4.135450,2.307188,4.138777,4.361584,-9.617029,-0.163938],[4.789803,9.009250,3.671271,-2.440748,6.458647,-0.330752,6.320753,2.988549,0.398190,-2.467785,3.598559,-2.742423,1.695246,-0.104770,9.512714],[-5.119897,-4.873085,7.760161,-2.136328,7.098321,4.839437,-0.627372,4.238338,-0.259529,-8.884712,8.796397,-6.362693,-6.946695,8.624768,7.809176]]], dtype = "float64")#candidate|8566|(2, 15, 15)|const|float64
var_8567 = relay.var("var_8567", dtype = "float64", shape = (2, 15, 15))#candidate|8567|(2, 15, 15)|var|float64
bop_8568 = relay.mod(const_8566.astype('float64'), relay.reshape(var_8567.astype('float64'), relay.shape_of(const_8566))) # shape=(2, 15, 15)
output = relay.Tuple([bop_8568,])
output2 = relay.Tuple([bop_8568,])
func_8571 = relay.Function([var_8567,], output)
mod['func_8571'] = func_8571
mod = relay.transform.InferType()(mod)
mutated_mod['func_8571'] = func_8571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8572 = relay.var("var_8572", dtype = "float64", shape = (2, 15, 15))#candidate|8572|(2, 15, 15)|var|float64
func_8571_call = mutated_mod.get_global_var('func_8571')
call_8573 = func_8571_call(var_8572)
output = call_8573
func_8574 = relay.Function([var_8572], output)
mutated_mod['func_8574'] = func_8574
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8855 = relay.var("var_8855", dtype = "float64", shape = (6, 8, 4))#candidate|8855|(6, 8, 4)|var|float64
uop_8856 = relay.exp(var_8855.astype('float64')) # shape=(6, 8, 4)
func_7409_call = mod.get_global_var('func_7409')
func_7413_call = mutated_mod.get_global_var('func_7413')
var_8859 = relay.var("var_8859", dtype = "int32", shape = (280,))#candidate|8859|(280,)|var|int32
call_8858 = relay.TupleGetItem(func_7409_call(relay.reshape(var_8859.astype('int32'), [5, 8, 7]), relay.reshape(var_8859.astype('int32'), [5, 8, 7]), ), 0)
call_8860 = relay.TupleGetItem(func_7413_call(relay.reshape(var_8859.astype('int32'), [5, 8, 7]), relay.reshape(var_8859.astype('int32'), [5, 8, 7]), ), 0)
func_1041_call = mod.get_global_var('func_1041')
func_1045_call = mutated_mod.get_global_var('func_1045')
const_8875 = relay.const([7.816722,8.305146,1.946742,5.704657,6.170746,-8.145494,-5.248513,-1.564749,7.822067,2.592629,5.425475,-7.523677,-5.921623,3.903164,5.172804,-4.562727,-3.011426,-2.976221,-5.038090,3.947330,4.992802,-4.825107,4.779671,5.976499,-8.287202,6.082611,-8.887856,-1.251269,-3.418782,-4.040986,8.267307,-7.101952,-1.166960,9.046108,-4.337700,-3.676678,4.478799,2.497930,7.925734,9.959730,-7.097368,7.963224,-5.896892,7.315520,-6.764193,-0.172967,-1.918222,0.246419,5.500731,2.662167,5.314996,6.887946,6.177694,-8.421893,3.086463,-2.488416,-9.996725,-3.377012,1.318258,3.991459,2.506743,9.879857,-4.959801,8.715783,-9.415767,1.123412,-3.722654,-2.491684,-5.339469,5.115467,-4.831440,9.478559,5.178668,7.154148,9.844015,-1.859965,-8.443155,-7.406271,0.229938,8.966085,-7.563712,2.910641,4.518604,-2.571749,-6.035360,-0.852251,1.008680,-2.097422,4.461885,-1.306991,-1.931524,-3.271547,-8.066392,-5.084739,-5.365452,9.475923,-9.269032,3.420538,-7.596277,3.206517,5.516984,2.647593,8.283438,-6.863326,7.282375,4.443423,0.302991,2.520452,-4.405411,4.643224,4.491884,-7.735666,-7.449813,7.482352,5.078922,0.050450,-2.499708,-2.347695,-9.518324,8.651717,1.951137,-7.056527,-3.507661,-4.336824,2.306511,5.316898,4.925935,-4.874050,5.137495,-5.437350,9.362785,-0.261997,6.898479,6.861068,3.030482,5.450514,-3.321145,5.836572,4.366661,4.336601,-8.024992,2.821745,-4.569366,9.274526,-5.579073,3.473079,0.953747,4.119516,-2.497653,7.261515,2.315592,-6.239170,-0.896191,-3.000924,1.798593,-8.971737,-9.311471,7.734025,8.795638,4.888491,8.085293,1.547697,-7.299111,4.512544,-9.743649,-1.616431,8.373171,9.607825,-9.909828,-4.576991,8.088965,8.893948,-1.628974,1.157158,4.216750,8.889481,4.005124,-0.280235,-7.754704,-7.024100,-4.177279,-4.749987,5.900725,7.840533,-3.361308,2.787485,-7.427484,1.612682,-9.098067,-8.835845,6.085799,-0.013476,2.133130,-0.083903,-0.491520,-3.910571,4.542786,-1.055762,-0.512513,3.870429,1.383597,-4.391536,9.917463,3.097686,-9.832865,-9.708525,7.694864,-9.283300,3.011866,-6.250747,0.744218,-4.121106,-7.822760,1.313941,-5.479593,2.506269,-1.654724,2.247260,0.407291,3.092950,-6.977164,-0.393397,-3.675950,-3.789226,8.297735,5.261673,9.375452,-8.609725,-3.283157,-0.186066,-8.423164,2.927743,-3.484926,-9.661584,0.924690,3.374606,1.393888,3.835356,9.955329,8.781640,9.923776,9.739717,-9.594180,-3.773189,-4.928458,4.584802,-2.963245,5.859620,1.684746,-6.360718,8.573256,9.771393,2.839018,-5.992386,-4.933335,-7.023338,-1.469808,7.280703,5.981316,8.359447,-8.012840,-2.755761,9.864366,2.733161,3.782197,5.734438,-0.151092,-9.190797,-0.212151,-4.790424,-8.976578,-7.922275,-4.783078,-4.209319,1.345224,4.131348,-4.430682,-1.567450,7.621358,9.665328,1.233742,4.114364,1.352164,-9.406928,-5.158830,-0.122265,5.177468,4.408444,-1.182100,1.761510,-8.460399,-2.454609,-1.295554,-2.704767,-6.537252,-4.984959,2.815187,3.179832,7.125719,-6.925836,-7.213300,8.881685,9.592296,-8.084462,-1.047192,6.303224,-5.073472,2.108306,-2.862516,8.179887,2.645421,-9.628180,0.331776,9.732263,3.875987,0.464338,5.440582,2.987320,3.656276,-2.297895,5.591599,-3.168790,1.938773,-3.275409,-9.647298,4.048450,-4.658659,-5.684476,5.600977,-6.564401,7.814636,6.148620,-3.223585,6.249877,-1.459822,7.687942,1.374707,9.220375,-2.349053,-2.488297,8.184889,-1.893814,8.280651,-6.066335,4.948633,-0.872426,-8.756198,7.631494,-2.768996,-4.510224,-0.865374,7.901710,-4.966843,6.561606,-7.096670,7.495647,3.081031,6.854340,-0.038595,0.429633,1.260305,-3.110758,7.800836,-8.920707,-4.027436,-0.680499,1.802725,-4.753606,8.711775,-4.454279,2.536049,7.160346,6.212743,0.281668,-2.291761,1.600290,-9.747720,3.392377,1.749100,-5.022674,5.348820,1.993883,-1.704513,-5.123907,7.471301,2.290502,-2.225388,7.042495,-8.119613,6.001466,4.919227,-6.936505,-1.700371,-8.086583,2.247493,1.833166,2.024560,3.644694,-6.828396,7.426623,-7.084735,-1.455072,-4.856732,9.650992,-9.542749,5.850292,1.898726,-9.203232,-8.338639,-6.273603,4.907735,-0.992087,-2.439348,-6.679763,2.041091,-4.345692,-1.889778,-7.812046,-0.176270,4.356723,-2.791564,-8.566237,-1.637026,0.923634,6.943935,7.839677,2.457239,-5.026597,6.761600,-6.201268,-3.957665,8.769210,4.965747,7.269629,7.382544,-6.841118,-4.150515,6.281589,1.019914,0.298410,-2.968272,1.147512,-3.398105,8.544896,-4.308512,-3.540767,-1.020265,-2.804438,5.510471,2.390271,-5.479947,-4.822652,4.146843,-0.794882,-8.810494,3.906730,-6.245269,-0.967742,-4.039984,-0.198803,5.120164,-5.789833,-1.074741,0.373081,-4.144203,-7.295491,-7.084387,7.742359,5.681725,3.419382,7.934855,-2.929002,4.924910,-4.275522,8.051751,6.105210,7.257539,-5.339817,-8.019986,5.950912,9.908804,5.645754,-4.104737,9.549171,-4.181529,8.518429,5.809388,2.916293,-0.334288,3.033582,6.651877,-5.094533,-6.757748,-8.876773,-3.316053,8.417394,-9.021706,-6.519166,-8.307673,-3.952884,-4.855900,-1.658744,1.512943,-5.858031,-4.847940,1.709080,-5.698154,-4.511381,5.860835,6.086412,8.279910,6.087573,-5.915751,-6.872713,1.727552,8.840734,5.524409,4.700197,-9.063289,-6.773472,0.462079,-8.013468,-7.439538,-6.760238,6.971583,3.661220,9.900586,-9.452227,-8.916267,-5.775510,0.403757,2.940051,1.129063,-9.827774,9.901191,-9.438137,-4.602783,-5.991373,-1.594413,-2.913687,7.388257,-8.316010,-4.843776,-8.751742,8.068818,-4.722818,-1.666936,0.246122,6.701844,2.028269,6.482121,3.744612,-9.967975,-2.794192,7.786252,2.691272,-5.384196,1.421367,-9.707836,-1.570305,-1.612929,4.200473,-3.620799,-3.580135,-4.249870,-0.885954,-3.582887,2.836585,-2.612845,8.299072,2.977112,-5.516703,-6.887721,-7.727664,8.246573,-1.362626,-5.612138,-7.139750,5.502785,-0.624760,6.898443,8.643422,-5.084154,-2.054809,-1.638458,-1.707678,-1.229607,1.731188,-3.877295,-1.557234,-3.041447,2.064503,-3.707154,-5.293367,6.108512,8.262833,9.117422,-0.382561,3.284729,-0.306209,-3.877254,0.709815,3.859318,8.279950,7.946690,3.110122,-5.875109,-0.221364,2.021909,-8.060468,5.830027,6.408444,-5.870161,-6.451729,-0.134072,0.306930,-1.007020,-3.958273,-6.484658,8.820205,4.262578,3.193706,-9.572842,-4.994779], dtype = "float64")#candidate|8875|(624,)|const|float64
var_8876 = relay.var("var_8876", dtype = "int64", shape = (32, 4))#candidate|8876|(32, 4)|var|int64
call_8874 = relay.TupleGetItem(func_1041_call(relay.reshape(const_8875.astype('float64'), [3, 13, 16]), relay.reshape(var_8876.astype('int64'), [128,]), ), 2)
call_8877 = relay.TupleGetItem(func_1045_call(relay.reshape(const_8875.astype('float64'), [3, 13, 16]), relay.reshape(var_8876.astype('int64'), [128,]), ), 2)
func_4145_call = mod.get_global_var('func_4145')
func_4148_call = mutated_mod.get_global_var('func_4148')
var_8879 = relay.var("var_8879", dtype = "float64", shape = (4096,))#candidate|8879|(4096,)|var|float64
call_8878 = func_4145_call(relay.reshape(var_8879.astype('float64'), [16, 16, 16]))
call_8880 = func_4145_call(relay.reshape(var_8879.astype('float64'), [16, 16, 16]))
output = relay.Tuple([uop_8856,call_8858,var_8859,call_8874,const_8875,var_8876,call_8878,var_8879,])
output2 = relay.Tuple([uop_8856,call_8860,var_8859,call_8877,const_8875,var_8876,call_8880,var_8879,])
func_8886 = relay.Function([var_8855,var_8859,var_8876,var_8879,], output)
mod['func_8886'] = func_8886
mod = relay.transform.InferType()(mod)
mutated_mod['func_8886'] = func_8886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8886_call = mutated_mod.get_global_var('func_8886')
var_8888 = relay.var("var_8888", dtype = "float64", shape = (6, 8, 4))#candidate|8888|(6, 8, 4)|var|float64
var_8889 = relay.var("var_8889", dtype = "int32", shape = (280,))#candidate|8889|(280,)|var|int32
var_8890 = relay.var("var_8890", dtype = "int64", shape = (32, 4))#candidate|8890|(32, 4)|var|int64
var_8891 = relay.var("var_8891", dtype = "float64", shape = (4096,))#candidate|8891|(4096,)|var|float64
call_8887 = func_8886_call(var_8888,var_8889,var_8890,var_8891,)
output = call_8887
func_8892 = relay.Function([var_8888,var_8889,var_8890,var_8891,], output)
mutated_mod['func_8892'] = func_8892
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9012 = relay.const([[[5.619448,-6.825391,-1.974154,-2.620553,-5.189916,-3.105155,7.044617,-0.539349],[9.352489,-3.187277,-5.279497,1.872205,-6.026508,-9.454288,2.584563,4.108281],[-9.257055,-3.850784,-0.717493,2.403073,0.285401,-0.991172,5.548214,-0.963370],[-9.036944,-4.911693,6.658692,1.201796,-6.530777,4.921516,7.768528,-3.446495],[-5.923980,0.950124,-0.867296,3.267510,-5.169224,-6.732653,1.489990,-5.448533],[5.501803,-1.174602,-5.055243,-9.662787,-3.830650,-2.237476,9.555329,2.177019],[-2.453059,-7.686139,4.106697,-8.364110,-9.185884,6.461459,0.053586,8.156856],[-1.231783,0.773998,9.147754,0.315268,7.346705,-3.638866,7.324106,7.750601],[-4.139550,-2.142011,1.992078,4.167670,9.778119,2.094290,-9.412676,1.239370],[1.969423,3.245266,1.093551,-3.430946,-7.874047,0.695013,-2.271645,4.434250],[-3.121921,0.607455,-3.606323,3.117083,2.803237,-2.005945,1.807938,3.882999],[1.785040,-5.734204,4.478614,2.247021,2.482788,8.260465,2.547062,-3.844548],[-1.761765,-5.005374,-2.914801,-3.088202,-7.961868,2.559945,5.435932,-1.532476]],[[3.993508,0.612308,7.259373,-7.498228,1.180500,5.845142,2.354600,-1.951330],[8.688168,-9.586776,5.555415,5.812175,-9.314258,8.827563,8.369556,-3.796319],[-8.858311,-7.426836,-8.238364,-2.301456,-6.351292,2.995556,8.793838,-3.800877],[-6.832164,-9.698054,3.896313,9.618735,-8.102492,9.610154,4.123422,-7.878210],[7.371507,2.872954,-4.289502,8.905629,7.166948,-7.391936,8.113807,7.709123],[8.546631,8.889242,-7.740470,-8.314150,4.229165,-7.813062,7.017939,3.978135],[3.720786,1.873196,-1.419543,0.375604,4.730396,4.255704,-7.064859,-9.991874],[-3.074192,-8.510869,-2.586705,-8.435267,0.673588,-4.162604,3.048497,8.035640],[3.126315,-0.079976,-4.052313,3.402871,2.507277,-9.467129,-6.637186,-7.887626],[-7.951555,2.622078,4.775114,-4.093204,-6.272498,-1.394343,-4.422419,1.031685],[-2.250249,-8.742111,1.434515,-7.541807,-4.342258,-3.911615,7.655240,5.610806],[3.859274,-0.688948,-6.910608,8.315043,-4.751483,0.866982,-5.899909,-5.032398],[-6.640835,8.949102,-8.057295,1.345884,-6.561476,5.946159,-9.733077,0.635565]],[[5.418538,-6.430269,-6.781493,7.110498,7.423206,-2.300800,6.585485,-7.932408],[2.588393,0.868853,3.280806,-8.927105,-7.021192,9.438518,-0.951658,-7.907159],[2.407742,-7.371624,6.188460,-0.917487,-9.613811,-9.853056,1.530173,7.179375],[-5.049494,-3.415354,4.416909,9.366632,4.734218,-2.593277,8.712744,8.331237],[-0.676674,-8.589464,9.804132,-8.595231,3.215508,3.519683,-3.202693,8.273970],[8.162404,-3.034588,-5.686286,-0.772549,6.797718,-9.166531,-7.330535,2.069298],[1.477394,-2.025250,-3.539472,-1.646687,6.299256,-7.605704,-7.619933,-5.837140],[5.118746,4.139457,-6.140897,1.440429,-7.733825,-0.615416,-9.661318,3.340555],[1.750471,-1.632042,2.107688,-9.759936,6.946095,-0.504528,-5.158429,7.445915],[7.346249,-8.472844,9.883139,1.455406,8.687769,-7.678298,2.582344,6.979638],[2.028204,-0.806617,-5.767273,2.058919,9.094085,2.987866,-8.886354,-3.565412],[1.599277,7.097512,-6.924702,2.259196,-6.641811,8.393208,1.620644,-4.518948],[6.374450,8.274810,1.315279,2.590377,-1.065281,7.898078,1.295557,9.326683]],[[-8.558553,2.088932,8.699199,-6.897802,-9.831714,-6.720384,-6.757387,-4.165126],[0.142914,1.208894,-3.787265,-6.334842,5.036179,5.168380,4.992493,-2.011048],[8.797150,-0.362318,-6.130370,-8.450588,7.751575,-5.960890,-4.701254,7.735647],[6.434953,-8.398727,6.517639,-8.950385,-6.450827,7.724856,-9.212032,7.733703],[-6.965993,3.527150,-5.918789,7.482665,-5.678468,3.674069,4.148631,-1.910888],[5.318546,-2.932740,1.561799,-7.416865,8.420014,1.813917,9.410817,9.271347],[1.981574,-4.356864,2.247911,7.951192,4.882608,-1.497640,4.836340,4.602799],[5.860146,1.494054,6.134943,0.518294,1.602084,-7.336545,7.468847,-2.011930],[-3.358670,1.508951,8.201658,3.026612,4.703272,9.280798,4.304651,-9.490445],[-3.234168,9.791638,1.678179,-6.912272,-4.632755,1.146402,8.090709,-4.511645],[-3.271187,6.570759,-2.356556,-4.433924,-3.357553,-1.480322,9.065213,-5.410521],[-2.401501,0.822285,-0.890808,-6.901947,-0.775538,5.223068,-6.087002,-5.528357],[7.801773,-0.134977,-0.725570,4.600891,-7.660549,-4.012531,-6.495308,8.528826]],[[0.483086,-4.483036,6.876499,-5.987735,-1.303842,4.252713,1.698341,8.710968],[5.902323,-3.827839,7.030927,-0.174453,9.829933,6.985834,2.159495,-7.139738],[7.078337,1.621571,5.712155,-6.362467,7.638948,-9.315252,8.524626,2.260126],[2.859783,6.170297,8.738975,-1.887764,-4.923469,6.591991,8.261169,-7.529294],[-5.918656,7.629166,1.163184,-0.402260,3.224178,9.829047,-9.780929,0.256350],[-5.286428,-0.930092,-0.063982,-1.430212,-5.867846,-2.440966,0.276011,-0.924253],[-3.463845,-4.928815,-8.902515,-0.397312,8.187918,-6.109230,-9.810216,-7.778253],[-2.451483,6.488868,4.163976,-6.602070,9.047687,3.603902,2.537434,-0.222672],[9.348323,-0.400415,3.827239,3.910208,-8.308474,9.410360,0.842782,-4.285489],[-4.431313,-9.603633,3.338496,-6.913447,-6.329706,-4.884051,8.376600,0.657246],[6.781819,-9.510263,6.180570,4.666809,-3.654403,-4.794042,-1.287231,3.990076],[-7.680616,6.151541,-1.644922,-7.060319,8.545579,9.553373,-5.132567,-2.355778],[-0.917106,-2.254855,-1.881693,0.865673,-5.915281,4.458559,-5.384789,-2.372237]],[[-4.737481,4.319754,3.862073,7.818804,-6.380682,6.783238,-3.357064,-0.191175],[6.604063,-8.812037,-5.965654,-5.840188,6.219786,-2.281720,-9.881765,0.847499],[-6.589798,-7.809893,-5.876687,-1.916057,-7.014941,9.838794,8.538006,0.562016],[7.117057,0.540682,5.582494,-4.990008,6.089456,1.478353,0.648791,-0.558306],[8.692041,5.832765,5.913826,-4.444486,-8.026328,-0.565205,7.412203,-2.908450],[2.767337,-2.352113,9.960273,2.575107,7.292828,-0.693048,5.673443,-4.951001],[9.077804,2.428672,-0.647516,-0.320363,8.419628,-5.360391,-5.044388,0.251504],[-1.727257,0.819110,1.237246,-1.250076,9.736430,4.155153,-1.796405,6.616137],[-9.322131,-8.824983,-5.809646,4.573969,8.561354,-2.236089,-4.834708,1.803001],[6.490446,-6.765411,5.734472,-2.524643,1.994515,-8.919873,3.714507,-2.905402],[-9.981213,-4.992441,8.119293,-6.479747,-8.249452,0.198429,1.887381,1.525750],[5.125211,0.852305,3.673414,5.692886,2.551038,-2.297440,4.500447,-0.297855],[0.833921,-6.512636,-7.445993,8.279496,0.011775,3.928860,7.261271,6.890370]],[[-7.514083,4.362013,-0.629492,8.883879,-5.244171,2.279620,-4.831611,9.670314],[-2.226530,-8.217639,3.350359,6.033553,-7.275969,4.211294,-2.036610,-9.407376],[8.000697,-4.588727,-5.244584,0.214775,4.892615,-5.815022,7.645063,0.118127],[1.259597,-3.118301,4.647920,8.382344,0.243665,9.895699,-3.304140,-8.612548],[5.627696,0.767254,-8.623726,8.770507,1.724705,6.495296,0.483834,9.902385],[3.402971,9.440618,0.748558,-3.383270,0.380667,-3.211782,-6.361369,7.886899],[8.263969,7.699160,-0.310779,8.853114,3.231902,-2.711956,2.473834,8.893406],[2.373551,7.436911,-5.321613,7.279891,6.325572,2.518942,3.069809,-3.555787],[3.272302,-4.721118,-9.948406,-2.428025,6.708970,-9.698241,-3.189869,7.418791],[3.043691,-3.243735,-2.208968,3.132867,-6.505783,0.982546,-7.997507,-9.426965],[-5.298402,8.367326,5.483880,-6.739700,-9.855590,2.710379,-3.487383,-7.167880],[-4.543173,8.858973,5.166940,-3.499816,1.161922,7.989061,7.172745,-3.397235],[-0.038455,-7.578657,9.383721,-0.614986,-0.452526,-9.260756,-5.997122,-2.697619]],[[5.512109,-3.376305,-6.613347,-0.999281,-4.041857,6.693405,-6.676342,0.879273],[7.299972,-8.237431,-2.730029,-5.574480,-2.744427,-3.949136,-0.062918,2.186734],[-1.434612,-2.606444,1.242489,8.658246,-2.869118,3.992083,-1.321077,5.723283],[1.439366,-5.162969,3.032780,-2.245139,8.830953,-3.053672,1.310651,5.039640],[6.943196,-5.155642,4.709943,0.191898,2.601607,-6.596606,2.990849,6.332253],[1.732992,8.086704,9.183774,-7.969103,-5.768202,-2.100450,6.792704,2.366552],[6.503453,3.780194,7.461196,-6.775638,4.329831,-4.090008,-1.791829,6.907603],[3.654171,-1.618139,-3.790635,3.570758,-5.813194,-4.816651,-1.525372,-9.870547],[-0.898557,-4.410008,-2.846675,-1.623814,8.519469,8.234489,-1.966015,8.057077],[8.077268,-3.576492,-7.541892,-4.985014,7.850885,-2.386264,-1.787473,1.896404],[-2.018178,8.843553,-6.765159,0.940689,-2.643665,-5.998507,8.230233,6.661693],[5.970061,3.355416,2.216899,-2.559415,-1.964023,-9.363621,-1.117798,0.633441],[4.872408,9.902229,-7.184086,1.052752,0.727620,-1.432727,6.626743,1.386807]],[[6.376354,3.547667,-6.534837,-0.702731,-0.271269,-8.667833,-5.552780,-8.755582],[-8.965088,-7.593424,-3.901407,6.946305,6.969710,-5.468627,6.701541,8.828021],[-6.088963,-4.964700,2.609706,-6.265359,4.725164,-2.688842,-2.623514,-3.476358],[-8.532612,-2.513007,-0.520689,5.408115,0.715162,1.252318,9.523287,3.979239],[2.640288,1.730888,-9.202279,-9.492701,-2.907142,-0.259967,8.730454,6.904730],[0.828074,-0.770850,9.294539,9.566472,-0.511292,-8.395256,8.096011,5.656942],[7.021916,7.867094,-0.438433,6.609175,-7.963944,-2.485214,-5.208782,-9.917373],[3.521684,-4.735401,-1.673952,2.938798,-1.249016,-2.034546,9.354652,-8.398258],[-9.300171,9.633975,6.706816,5.312124,-5.793295,-4.185303,2.681494,-5.644916],[9.387419,-9.494882,-8.881465,-5.790807,4.188841,-7.899854,0.129779,9.946400],[9.331794,-2.025534,4.901448,-9.783192,8.218652,5.699414,5.654397,7.368534],[-7.553444,-8.935663,9.609040,2.936943,-5.480423,-6.058971,-5.179532,3.322777],[-2.472276,-5.849952,-6.297737,7.490955,9.632769,-5.610320,-1.998056,-6.485656]],[[6.273926,5.258433,4.430750,3.535421,-7.755394,3.068481,9.490566,-3.889974],[6.009010,-2.036205,-8.296668,0.428610,-4.251766,-3.196375,-8.803468,5.954387],[-8.810632,-4.822334,3.305980,2.134854,5.986670,-0.249981,2.872971,-9.215972],[8.636191,-2.358203,-5.082621,-8.547402,-3.883122,2.820545,5.407762,-8.569006],[5.546693,7.553299,1.825752,7.611307,-6.391579,6.116664,-9.048191,-7.775327],[-4.319579,0.424505,-4.340438,4.267714,4.603692,8.819933,0.065517,-5.742047],[7.060833,3.831238,-1.853445,9.272812,-0.118152,-0.399841,5.687109,6.826409],[-1.193494,-8.135183,-2.302987,3.086329,7.904697,-4.622012,-4.504684,4.822803],[-7.753941,-9.845445,7.269948,0.493967,0.360044,8.100506,-4.012782,-8.814295],[7.106865,-3.364415,8.742360,2.588948,-1.028190,4.155126,-7.406896,-1.316430],[-5.635392,8.021479,5.734605,7.936558,3.112383,8.174913,9.663093,-3.318955],[-9.516342,-6.661756,-1.094308,-3.605361,2.559434,1.378335,3.090780,5.921468],[5.941672,1.014782,6.460979,8.644019,1.796929,1.959298,-6.475525,-2.171376]]], dtype = "float32")#candidate|9012|(10, 13, 8)|const|float32
uop_9013 = relay.sin(const_9012.astype('float32')) # shape=(10, 13, 8)
func_8260_call = mod.get_global_var('func_8260')
func_8262_call = mutated_mod.get_global_var('func_8262')
const_9020 = relay.const([9.889943,-9.826226,-9.351327,-1.124521,-8.154962,7.095866,3.194225,-2.761416,-0.933846,6.629270,6.529639,-5.800667,5.601299,-9.804808,4.560150,1.755252,-7.897521,-3.783942,-2.159986,-2.500211,3.518609,6.267860,-2.687406,5.839550,-8.630913,-5.877994,1.365122,-8.136690,-9.900741,6.702721,-6.571306,0.866214,1.697211,7.250156,-7.453395,-1.404205,7.482110,-5.411560,9.105853,7.991939,-0.190660,9.057290,-7.632611,-4.967356,-1.957763,-0.731524,-1.538314,-9.988875,8.145387,-9.472699,7.316497,-2.954278,-0.815255,-9.789259,-0.382372,-0.872062,0.604930,9.265560,8.025101,-6.274031,9.127262,-2.616176,-9.214208,7.988012,-5.099476,-9.177992,-8.578409,-5.340910,9.969841,-9.918218,-1.697463,8.253303,-5.414815,8.128751,-7.673027,-2.151510,8.856465,-8.638955,4.124487,9.514526,8.456269,5.605489,-7.927934,-4.017853,-1.645270,-6.016994,9.852044,-3.845298,-0.337721,3.022992,6.028846,-1.298725,-7.505515,9.241434,2.758843,0.030302,-3.353917,-6.677526,4.109864,-0.510381,-3.678563,-8.040888,-2.862865,9.906109,8.730435,-5.099817,-1.851150,6.909155,2.020777,-2.792648,9.457698,7.419151,-4.840582,4.190686,-8.189365,5.598154,-6.822907,4.083788,-6.882413,3.879564,4.734611,0.173824,-0.355971,7.468431,1.123334,-9.540600,1.628464,-3.192484,-7.243431,8.717580,3.929935,5.419906,6.777511,8.423264,9.643827,1.414537,-0.092896,3.492878,2.279383,-5.208582,-1.417903,3.851071,-4.409707,-7.183932,4.917637,0.748689,-4.478035,-8.888323,2.170824,-2.784987,-2.379930,-7.228106,-2.058567,-8.301823,-3.303918,-4.937442,5.434230,-1.843441,1.269260,-2.842531,7.710058,6.896431,-8.173615,7.944419,1.698932,8.121007,4.596807,-3.262062,5.125572,5.491840,6.259889,-9.369899,8.884617,-6.732373,0.471022,-5.482294,3.865205,5.889916,0.133690,8.443942,-2.249652,1.983927,-8.839064,4.921850,-5.489286,1.118639,-1.940185,-4.986515,7.825069,-4.863711,-1.278965,7.164422,-5.218956,3.390277,9.070929,9.494470,1.700283,9.152280,-4.244958,5.748009,6.457635,5.074692,5.515528,7.688518,-8.273567,7.083607,-2.863317,-8.202368,3.712031,5.007351,5.853754,-7.912862,1.558608,-2.083809,-2.242352,-0.423423,0.797762,3.601840,0.748766,5.036877,-4.255755,-3.134979,3.902253,-0.078057,9.920262,9.354945,-3.083103,9.964393,6.177969,6.399538,-1.757986,6.741897,9.390103,-0.964519,2.666999,6.027033,-8.814691,6.014244,-8.779229,5.432900,1.235089,-3.946957,-9.982926,9.374371,-1.540856,-4.167195,-3.117821,-7.371456,-4.245687,-9.743172,-3.696296,-8.246126,-7.780191,-5.510333,0.017199,-3.298601,-4.221096,-6.759981,-6.977882,-1.224795,-7.026102,9.879319,-1.681892,2.769876,-2.819100,-4.567324,1.299869,-6.175336,-0.228135,-6.099470,-0.263321,-0.999638,-7.073694,7.121968,-3.584977,8.310963,-3.523198,3.413616,-5.595927,-6.250276,9.669373,0.093632,4.892522,-6.494809,-0.103244,8.723019,0.547811,0.952769,-2.187142,-6.016187,-3.844166,1.722310,2.680428,8.927076,3.910860,-0.762444,-4.445038,2.326148,2.222348,-1.757667,5.079705,-9.986567,6.605948,-1.907210,6.456501,9.778029,-2.106640,-6.732109,8.459414,2.533460,9.831274,4.195499,2.830535,4.917925,-7.556782,-4.684916,6.928472,-5.788671,-4.603873,-4.182758,-7.988495,0.284299,0.790339,-5.590636,6.421888,3.520062,6.464127,-2.255804,-3.551307,-5.682917,1.207580,-0.101190,7.925990,-1.831631,6.827686,4.145790,-0.737347,-8.838137,9.808427,-3.338387,-7.797952,1.858411,3.962953,-6.748050,-7.859039,-8.367067,2.142436,-3.028400,-4.058814,-2.251367,-0.744156,1.301999,-5.365416,-9.451163,-2.011592,-1.186516,-2.729146,-1.687936,8.488847,9.903247,1.676507,-8.025185,-0.642866,-2.627508,4.517752,-3.780595,-6.455627,-0.960811,7.999324,-3.076783,0.581302,-3.118028,4.949237,9.150421,5.435762,-6.229890,9.881120,0.451482], dtype = "float32")#candidate|9020|(378,)|const|float32
call_9019 = relay.TupleGetItem(func_8260_call(relay.reshape(const_9020.astype('float32'), [9, 7, 6])), 0)
call_9021 = relay.TupleGetItem(func_8262_call(relay.reshape(const_9020.astype('float32'), [9, 7, 6])), 0)
const_9023 = relay.const([[[-2.437307,2.126396,3.719237,0.967159,-2.522791,6.445091,-3.488752,-5.467649],[-0.438798,1.758091,4.167147,6.625010,2.496936,1.343886,-5.851316,0.687479],[-7.042016,8.757720,-4.883250,-7.610384,2.599958,-7.583582,3.710380,7.884098],[-7.696665,-7.233413,9.342787,-2.335225,-9.179354,4.382517,-3.115987,1.041944],[2.599270,6.941837,5.432502,-4.539515,5.499779,-9.652820,2.232169,-3.314746],[4.544090,0.878786,-0.487297,9.705478,7.830967,-9.166954,2.017143,-1.975153],[-7.362345,-7.709179,2.418047,-9.398531,8.252154,6.911615,-1.497207,-8.100453],[-7.953241,1.849029,-2.296784,3.458793,0.521818,1.420149,-8.789378,2.726339],[8.218544,-1.940779,-7.072160,3.707963,-3.771499,-6.616830,9.256127,-2.426912],[-3.571906,-8.786991,-3.645252,-3.117772,1.236057,-6.726065,-7.681540,-6.920132],[1.804213,-1.874306,-8.936595,7.046878,6.890500,5.564345,3.672871,-0.481636],[8.168230,-4.780214,9.051669,4.798337,-0.721917,-6.671997,4.364524,8.976645],[8.710842,-0.417140,8.175982,-8.460532,0.766785,7.517393,4.137921,-8.526466]],[[0.652101,-2.011468,-0.665689,7.084964,6.650984,4.884143,2.254763,0.289113],[-1.408979,-2.274290,-9.625263,-7.367858,-2.793058,-6.913383,-7.189208,7.539620],[6.104331,-5.884502,4.549934,-0.866400,5.521362,-1.297317,-0.009828,0.474357],[0.869114,2.366529,9.260580,-7.601123,6.020576,5.730130,4.101301,1.212428],[3.310730,-9.903266,-5.378515,1.433350,-6.367800,-3.474901,-4.181227,-5.506386],[2.045817,9.497976,5.771816,-6.279364,-4.831325,-1.990420,-6.130193,-0.035763],[4.626793,2.281726,7.380476,4.437511,-9.256900,1.682485,-9.601059,-5.284951],[8.257790,-4.962378,0.433939,7.771747,-9.173563,-2.832817,-8.746807,-6.751650],[5.370724,7.855023,5.634798,6.092997,-8.279750,-4.489531,-5.290323,-9.469337],[-1.271831,-0.601900,7.627112,0.257858,-9.790794,6.933014,-2.057151,-8.123068],[9.587279,-9.842173,3.248675,-8.766557,-5.847663,-6.170783,5.073361,-5.435248],[6.114730,-7.420571,7.236666,-2.418510,6.322041,-5.764539,-3.859045,0.362643],[-6.990755,-3.025027,9.157235,9.286349,3.585846,-6.215858,-5.209254,-1.783933]],[[-9.799874,-7.778097,-3.649105,4.861996,-0.975843,0.421230,-0.986478,-1.000302],[-4.928893,-7.278127,8.497062,-3.923844,2.999026,-5.958390,3.651572,1.281381],[3.820095,9.038609,5.572159,8.640417,-0.395165,-3.627737,4.089521,9.923393],[6.949294,-9.223578,2.882780,4.553128,0.984613,-3.234610,-3.846281,-3.514547],[-7.569602,9.851625,-6.928620,0.181112,3.959521,-5.282968,7.116114,-6.630702],[3.807353,7.203058,0.436105,-5.435326,-0.498961,-6.176493,-6.509729,-5.899966],[-7.691981,-8.913432,-1.103794,-4.601545,7.303924,6.626515,-5.569757,6.513270],[-2.789360,1.578691,6.063522,-7.605281,-6.943498,-2.022578,-9.789059,7.930392],[-8.329228,6.847037,-5.538432,-8.009814,-8.534886,-4.108535,-0.470559,4.094622],[-1.430125,-3.159892,-4.607771,-9.467869,9.708277,0.499360,1.251790,8.945153],[1.986454,1.884854,-5.958284,7.286176,9.511400,4.931272,-3.332057,-9.191219],[5.843129,-6.622991,1.351369,7.281956,-9.006350,-2.439013,6.353911,3.234854],[3.766312,-3.619544,3.721260,-5.271468,7.268712,-4.185837,-8.770805,7.541346]],[[8.484000,9.432544,-7.462648,-3.233297,-0.084465,-8.906276,-4.495251,-5.877080],[-8.721879,3.404511,-3.403867,-7.925002,0.508323,4.970400,8.329932,-5.585449],[0.480896,-4.112069,-6.014861,-3.099036,7.786026,-7.117019,-3.507209,1.842331],[-4.597039,-5.486941,5.156624,-6.920306,6.654522,-6.561752,-0.981367,-9.922762],[8.008360,2.537942,4.017432,-4.325272,9.799291,-2.317871,9.313958,-0.096027],[-3.894350,-1.292218,-1.329434,-1.057213,4.634241,-1.908112,2.570923,1.253086],[0.410412,-5.705573,-7.796068,-9.255012,-1.529263,5.389952,-0.249116,0.402168],[4.662061,-6.280124,-4.045974,8.351884,-3.738610,-9.996677,-7.778940,-1.264960],[-3.298171,-0.150550,6.074684,-6.195171,5.818512,3.779833,-8.963457,-7.167066],[-7.853744,2.861077,-4.468161,-9.654204,-8.695907,-1.069124,-8.999030,1.169234],[-5.362728,9.672448,-6.210564,9.594364,-0.704717,7.713748,3.109797,-4.678848],[8.961554,-2.782099,-2.957321,-9.198591,5.993249,-9.217446,2.908841,4.575640],[4.636619,0.066012,-3.724163,-3.859958,6.316643,7.434672,8.661775,-7.302726]],[[5.181854,-9.669954,-8.865319,4.558779,-5.764239,0.441380,0.746081,9.205603],[-6.182643,-3.403397,3.653457,6.625925,-3.464774,0.763348,-0.483524,-7.040113],[-4.046818,6.976263,3.337267,0.986786,-4.231805,9.810376,7.982279,9.230451],[9.510696,-0.522040,-2.652354,5.112819,0.174961,-6.685475,3.401176,8.894452],[-2.292245,-9.551319,7.178618,1.080759,-2.155671,7.234881,7.804963,1.165269],[-6.404357,4.932585,4.659271,-1.108288,3.511333,-6.131984,6.834665,-1.453592],[2.437199,-0.626972,-6.196735,-1.548093,-3.696833,-6.423449,-3.533659,6.804786],[-2.060042,6.587867,5.665032,-1.614497,7.913301,6.720874,-1.980142,-0.841379],[-7.036915,5.930917,-4.332689,-8.231421,6.383493,-5.929318,-6.821573,2.760741],[-5.940881,9.229208,-2.408354,-9.682696,-6.898420,-2.492301,8.724553,-4.684797],[7.179449,9.540764,-3.025561,9.688964,-2.842643,3.190967,4.879139,0.095837],[-0.798460,4.908037,-4.139653,-4.097073,-8.801117,-0.885739,9.641194,8.664507],[-8.057371,-9.663187,-4.655482,-0.722633,7.341758,-2.257795,-6.815469,-5.268862]],[[-1.242649,4.938019,1.294913,8.361662,2.211497,0.079389,3.425747,6.420634],[1.191145,-1.837237,0.113703,4.203011,-0.622169,8.685292,9.391726,8.619645],[-1.846098,6.380894,-6.480326,1.706808,-8.699544,-1.416946,7.677572,8.030071],[7.067095,8.240576,-2.103080,5.751010,-2.670457,-1.976927,-9.223826,1.486643],[-2.348947,-4.322456,7.373334,-2.987250,0.526323,1.752473,0.217467,3.941262],[-2.613158,4.785208,7.352535,-7.747929,-5.076553,-9.619895,-6.128362,1.747538],[-2.421448,-3.509990,6.381875,3.038491,1.348735,0.443541,3.608242,-3.153552],[8.600157,-6.112442,-7.021683,-3.453604,7.958228,-0.648463,-3.618859,7.345231],[4.099944,5.663974,-2.635865,4.001965,6.928658,-9.800042,-5.243047,1.615160],[6.118407,-4.216813,-3.295929,-2.064212,8.486070,1.867797,-3.013308,-3.482305],[-9.907204,-3.183648,-4.655296,7.278944,-5.866658,-7.870532,-6.076484,4.165736],[-3.367614,9.978904,-8.125122,-7.210976,-9.263333,-8.418037,-1.063544,8.685103],[-4.554235,-6.963162,5.423622,-3.822105,9.314704,-0.278631,-2.196571,5.217576]],[[-4.576574,9.401307,-0.767259,-0.493913,-9.709771,6.948261,-4.299856,4.140443],[-7.420408,4.148585,4.563507,-0.755874,6.127534,-4.497947,-7.519885,-2.981243],[1.447034,8.889634,7.798002,-8.943141,-2.898493,2.059556,-2.766377,8.604883],[-3.011968,9.746776,1.985373,-1.511736,-6.273248,-8.387008,9.545414,5.508786],[9.379126,-8.468144,7.725014,-6.491559,4.910015,-5.751472,-0.762196,-5.458581],[-7.743448,0.112991,3.327241,-3.162832,-0.745716,-3.595811,1.445962,-2.671429],[8.168648,-0.590626,-1.172645,-0.539319,-2.389941,3.667766,3.197913,3.604488],[5.825812,7.789736,-2.630074,4.273515,-3.738050,-8.687069,6.635164,-2.533877],[-7.317252,4.048416,4.757903,-8.050661,-4.061019,5.196625,4.208169,-2.981279],[3.132713,-3.794867,0.699100,-1.388673,6.275719,-4.053167,-8.925161,9.294500],[7.699899,3.864742,7.972624,-7.674483,9.928330,8.256156,-2.373376,-6.059205],[0.310393,2.355576,-5.010666,-6.942998,6.961527,-1.216997,-4.347348,-0.214163],[4.730626,-6.875071,5.870535,-9.218770,-1.750011,0.352243,3.494488,-4.725386]],[[-2.927714,-3.989765,-1.621642,6.099005,8.906085,1.744867,2.740944,5.028951],[1.115886,2.887347,-1.480185,4.281975,4.898196,3.050710,-4.308906,5.931635],[5.033052,2.746787,3.308549,0.012176,4.871472,-0.179353,-5.488941,1.204889],[7.337484,-0.883205,-5.762898,9.628238,0.085339,9.118091,-3.762061,-8.760197],[-7.229066,8.897892,-4.785081,-2.157246,0.091096,5.906850,-1.279962,7.237845],[2.207205,3.841093,-0.614628,-4.708134,4.318058,8.252513,-8.902566,4.283209],[-0.913270,-9.033834,-1.228470,-0.170657,1.094343,5.308305,-8.055961,-6.480653],[1.771991,1.667874,-7.947516,7.954811,0.990020,2.022659,-8.076870,-9.346605],[-3.045955,-7.315648,2.456476,-5.923333,-5.469505,-6.293110,1.045837,-3.929146],[-9.609018,-9.261172,1.751524,-5.027095,-3.685724,0.413788,2.568433,8.337535],[-7.958742,-2.216102,-6.542792,5.850107,-4.007654,9.232300,-2.087772,-4.772955],[-7.745405,3.326100,-7.107660,-7.782695,6.369348,-6.337867,-9.917839,-3.467811],[3.933507,-1.894237,-5.733145,-1.915229,-3.055174,-1.401450,8.681935,4.715286]],[[0.017456,-9.734468,9.950490,-8.654838,-2.389609,4.433143,6.838445,7.613830],[-0.144106,-6.287046,4.633443,5.660413,5.810469,-0.233277,4.081561,-2.494937],[-0.185577,-3.700071,5.768203,0.852644,1.158790,-5.392608,-2.864973,4.893940],[-1.977160,7.712481,-1.645563,2.619840,-3.699182,7.253117,3.385510,-7.048174],[-3.688352,0.993388,-7.707481,1.160949,8.166523,-8.143297,1.066628,-9.846867],[5.379827,-7.026914,0.055901,4.677639,9.431447,1.616038,-1.953631,4.238357],[-2.513501,6.180972,1.189517,6.536176,-7.895194,-7.749168,1.011332,5.446843],[0.997497,0.750413,1.910367,-8.675160,0.010760,-5.129861,-4.669826,-2.899767],[-8.983685,8.811050,-2.978345,7.879073,-3.244454,-2.065413,-6.647302,-4.734381],[8.575627,-8.798616,6.026254,-8.279870,-2.540694,-9.434353,-6.111376,-5.321928],[-5.298041,-5.195356,-8.792539,-4.749951,5.486465,-4.850126,-4.866152,6.282373],[-9.719927,1.022282,5.153526,-5.668766,-9.304727,-8.664447,1.572716,2.230053],[-9.888365,-9.313679,8.720749,8.425182,-0.747870,1.376446,-5.569969,-8.472735]],[[-2.000542,-3.215212,3.312677,-0.066430,-3.700812,-7.714225,8.459383,2.707723],[4.577208,-9.354681,-7.735127,-1.316183,4.795043,-9.304946,-2.288775,8.398347],[-3.957929,-0.445182,-5.803394,8.533696,0.147465,7.769457,4.929056,-1.547260],[-6.027353,-7.150852,-7.141837,3.268630,-7.307207,-0.367198,3.084229,7.306238],[9.985871,1.582178,-8.684448,-1.033899,4.469064,-7.525772,8.783633,7.572415],[1.627664,-0.706365,-5.449585,-0.693516,7.023165,-2.191493,-7.743825,-5.541773],[7.162564,6.993694,-3.029767,-2.042435,1.355023,8.630202,6.093789,8.537714],[-3.413464,8.438757,1.636798,8.119344,-3.985287,5.206080,3.049536,-6.468719],[-2.744594,0.641967,-8.544376,-0.082293,-9.809375,-3.229419,-3.630509,1.783778],[4.944808,-1.370815,-5.103326,-9.522033,4.329748,1.339184,6.027999,6.197693],[6.808232,1.305907,-1.945719,-7.022617,9.815257,0.627466,-6.468129,-4.470461],[9.881094,-9.568164,-9.231790,-5.689653,1.311282,-8.902079,1.680935,-1.832588],[-8.673782,-3.531667,1.562710,-2.224451,5.088170,-1.239404,-0.746716,-4.575468]]], dtype = "float32")#candidate|9023|(10, 13, 8)|const|float32
bop_9024 = relay.multiply(uop_9013.astype('uint32'), relay.reshape(const_9023.astype('uint32'), relay.shape_of(uop_9013))) # shape=(10, 13, 8)
func_166_call = mod.get_global_var('func_166')
func_168_call = mutated_mod.get_global_var('func_168')
const_9031 = relay.const([1.201293,-0.366788,8.869928,1.575884,9.013122,-6.593170,-3.370951,-7.531261,-4.857625,6.345567,7.495173,9.096663,-1.826511,-8.131410], dtype = "float64")#candidate|9031|(14,)|const|float64
call_9030 = func_166_call(relay.reshape(const_9031.astype('float64'), [14, 1, 1]))
call_9032 = func_166_call(relay.reshape(const_9031.astype('float64'), [14, 1, 1]))
output = relay.Tuple([call_9019,const_9020,bop_9024,call_9030,const_9031,])
output2 = relay.Tuple([call_9021,const_9020,bop_9024,call_9032,const_9031,])
func_9062 = relay.Function([], output)
mod['func_9062'] = func_9062
mod = relay.transform.InferType()(mod)
mutated_mod['func_9062'] = func_9062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9062_call = mutated_mod.get_global_var('func_9062')
call_9063 = func_9062_call()
output = call_9063
func_9064 = relay.Function([], output)
mutated_mod['func_9064'] = func_9064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9062_call = mod.get_global_var('func_9062')
func_9064_call = mutated_mod.get_global_var('func_9064')
call_9127 = relay.TupleGetItem(func_9062_call(), 2)
call_9128 = relay.TupleGetItem(func_9064_call(), 2)
var_9165 = relay.var("var_9165", dtype = "uint32", shape = (10, 13, 8))#candidate|9165|(10, 13, 8)|var|uint32
bop_9166 = relay.not_equal(call_9127.astype('bool'), relay.reshape(var_9165.astype('bool'), relay.shape_of(call_9127))) # shape=(10, 13, 8)
bop_9169 = relay.not_equal(call_9128.astype('bool'), relay.reshape(var_9165.astype('bool'), relay.shape_of(call_9128))) # shape=(10, 13, 8)
output = bop_9166
output2 = bop_9169
func_9170 = relay.Function([var_9165,], output)
mod['func_9170'] = func_9170
mod = relay.transform.InferType()(mod)
var_9171 = relay.var("var_9171", dtype = "uint32", shape = (10, 13, 8))#candidate|9171|(10, 13, 8)|var|uint32
output = func_9170(var_9171)
func_9172 = relay.Function([var_9171], output)
mutated_mod['func_9172'] = func_9172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9062_call = mod.get_global_var('func_9062')
func_9064_call = mutated_mod.get_global_var('func_9064')
call_9176 = relay.TupleGetItem(func_9062_call(), 4)
call_9177 = relay.TupleGetItem(func_9064_call(), 4)
func_8481_call = mod.get_global_var('func_8481')
func_8484_call = mutated_mod.get_global_var('func_8484')
var_9181 = relay.var("var_9181", dtype = "float64", shape = (720,))#candidate|9181|(720,)|var|float64
call_9180 = relay.TupleGetItem(func_8481_call(relay.reshape(var_9181.astype('float64'), [720,])), 1)
call_9182 = relay.TupleGetItem(func_8484_call(relay.reshape(var_9181.astype('float64'), [720,])), 1)
output = relay.Tuple([call_9176,call_9180,var_9181,])
output2 = relay.Tuple([call_9177,call_9182,var_9181,])
func_9200 = relay.Function([var_9181,], output)
mod['func_9200'] = func_9200
mod = relay.transform.InferType()(mod)
var_9201 = relay.var("var_9201", dtype = "float64", shape = (720,))#candidate|9201|(720,)|var|float64
output = func_9200(var_9201)
func_9202 = relay.Function([var_9201], output)
mutated_mod['func_9202'] = func_9202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9062_call = mod.get_global_var('func_9062')
func_9064_call = mutated_mod.get_global_var('func_9064')
call_9258 = relay.TupleGetItem(func_9062_call(), 2)
call_9259 = relay.TupleGetItem(func_9064_call(), 2)
func_9062_call = mod.get_global_var('func_9062')
func_9064_call = mutated_mod.get_global_var('func_9064')
call_9275 = relay.TupleGetItem(func_9062_call(), 3)
call_9276 = relay.TupleGetItem(func_9064_call(), 3)
func_7409_call = mod.get_global_var('func_7409')
func_7413_call = mutated_mod.get_global_var('func_7413')
var_9310 = relay.var("var_9310", dtype = "int32", shape = (280,))#candidate|9310|(280,)|var|int32
call_9309 = relay.TupleGetItem(func_7409_call(relay.reshape(var_9310.astype('int32'), [5, 8, 7]), relay.reshape(var_9310.astype('int32'), [5, 8, 7]), ), 0)
call_9311 = relay.TupleGetItem(func_7413_call(relay.reshape(var_9310.astype('int32'), [5, 8, 7]), relay.reshape(var_9310.astype('int32'), [5, 8, 7]), ), 0)
func_134_call = mod.get_global_var('func_134')
func_138_call = mutated_mod.get_global_var('func_138')
var_9313 = relay.var("var_9313", dtype = "int64", shape = (385,))#candidate|9313|(385,)|var|int64
call_9312 = func_134_call(relay.reshape(var_9313.astype('int64'), [11, 5, 7]), relay.reshape(var_9313.astype('int64'), [11, 5, 7]), )
call_9314 = func_134_call(relay.reshape(var_9313.astype('int64'), [11, 5, 7]), relay.reshape(var_9313.astype('int64'), [11, 5, 7]), )
func_967_call = mod.get_global_var('func_967')
func_970_call = mutated_mod.get_global_var('func_970')
var_9316 = relay.var("var_9316", dtype = "int32", shape = (1800,))#candidate|9316|(1800,)|var|int32
call_9315 = relay.TupleGetItem(func_967_call(relay.reshape(var_9316.astype('int32'), [15, 15, 8])), 2)
call_9317 = relay.TupleGetItem(func_970_call(relay.reshape(var_9316.astype('int32'), [15, 15, 8])), 2)
func_4598_call = mod.get_global_var('func_4598')
func_4600_call = mutated_mod.get_global_var('func_4600')
var_9322 = relay.var("var_9322", dtype = "uint16", shape = ())#candidate|9322|()|var|uint16
call_9321 = relay.TupleGetItem(func_4598_call(relay.reshape(var_9322.astype('uint16'), [])), 0)
call_9323 = relay.TupleGetItem(func_4600_call(relay.reshape(var_9322.astype('uint16'), [])), 0)
output = relay.Tuple([call_9258,call_9275,call_9309,var_9310,call_9312,var_9313,call_9315,var_9316,call_9321,var_9322,])
output2 = relay.Tuple([call_9259,call_9276,call_9311,var_9310,call_9314,var_9313,call_9317,var_9316,call_9323,var_9322,])
func_9328 = relay.Function([var_9310,var_9313,var_9316,var_9322,], output)
mod['func_9328'] = func_9328
mod = relay.transform.InferType()(mod)
mutated_mod['func_9328'] = func_9328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9328_call = mutated_mod.get_global_var('func_9328')
var_9330 = relay.var("var_9330", dtype = "int32", shape = (280,))#candidate|9330|(280,)|var|int32
var_9331 = relay.var("var_9331", dtype = "int64", shape = (385,))#candidate|9331|(385,)|var|int64
var_9332 = relay.var("var_9332", dtype = "int32", shape = (1800,))#candidate|9332|(1800,)|var|int32
var_9333 = relay.var("var_9333", dtype = "uint16", shape = ())#candidate|9333|()|var|uint16
call_9329 = func_9328_call(var_9330,var_9331,var_9332,var_9333,)
output = call_9329
func_9334 = relay.Function([var_9330,var_9331,var_9332,var_9333,], output)
mutated_mod['func_9334'] = func_9334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9062_call = mod.get_global_var('func_9062')
func_9064_call = mutated_mod.get_global_var('func_9064')
call_9336 = relay.TupleGetItem(func_9062_call(), 1)
call_9337 = relay.TupleGetItem(func_9064_call(), 1)
func_540_call = mod.get_global_var('func_540')
func_542_call = mutated_mod.get_global_var('func_542')
const_9345 = relay.const([-0.685303,3.864811,8.239575,8.932344,-5.699859,-8.414256,-4.150574,4.081249,-2.041560,7.167776,6.360285,0.323478,5.906418,-4.817722], dtype = "float32")#candidate|9345|(14,)|const|float32
call_9344 = relay.TupleGetItem(func_540_call(relay.reshape(const_9345.astype('float32'), [14, 1, 1])), 4)
call_9346 = relay.TupleGetItem(func_542_call(relay.reshape(const_9345.astype('float32'), [14, 1, 1])), 4)
output = relay.Tuple([call_9336,call_9344,const_9345,])
output2 = relay.Tuple([call_9337,call_9346,const_9345,])
func_9349 = relay.Function([], output)
mod['func_9349'] = func_9349
mod = relay.transform.InferType()(mod)
output = func_9349()
func_9350 = relay.Function([], output)
mutated_mod['func_9350'] = func_9350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9062_call = mod.get_global_var('func_9062')
func_9064_call = mutated_mod.get_global_var('func_9064')
call_9371 = relay.TupleGetItem(func_9062_call(), 1)
call_9372 = relay.TupleGetItem(func_9064_call(), 1)
output = relay.Tuple([call_9371,])
output2 = relay.Tuple([call_9372,])
func_9383 = relay.Function([], output)
mod['func_9383'] = func_9383
mod = relay.transform.InferType()(mod)
mutated_mod['func_9383'] = func_9383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9383_call = mutated_mod.get_global_var('func_9383')
call_9384 = func_9383_call()
output = call_9384
func_9385 = relay.Function([], output)
mutated_mod['func_9385'] = func_9385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9383_call = mod.get_global_var('func_9383')
func_9385_call = mutated_mod.get_global_var('func_9385')
call_9394 = relay.TupleGetItem(func_9383_call(), 0)
call_9395 = relay.TupleGetItem(func_9385_call(), 0)
output = call_9394
output2 = call_9395
func_9416 = relay.Function([], output)
mod['func_9416'] = func_9416
mod = relay.transform.InferType()(mod)
output = func_9416()
func_9417 = relay.Function([], output)
mutated_mod['func_9417'] = func_9417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9383_call = mod.get_global_var('func_9383')
func_9385_call = mutated_mod.get_global_var('func_9385')
call_9439 = relay.TupleGetItem(func_9383_call(), 0)
call_9440 = relay.TupleGetItem(func_9385_call(), 0)
func_134_call = mod.get_global_var('func_134')
func_138_call = mutated_mod.get_global_var('func_138')
var_9442 = relay.var("var_9442", dtype = "int64", shape = (385, 1))#candidate|9442|(385, 1)|var|int64
call_9441 = func_134_call(relay.reshape(var_9442.astype('int64'), [11, 5, 7]), relay.reshape(var_9442.astype('int64'), [11, 5, 7]), )
call_9443 = func_134_call(relay.reshape(var_9442.astype('int64'), [11, 5, 7]), relay.reshape(var_9442.astype('int64'), [11, 5, 7]), )
bop_9445 = relay.equal(var_9442.astype('bool'), call_9439.astype('bool')) # shape=(385, 378)
bop_9448 = relay.equal(var_9442.astype('bool'), call_9440.astype('bool')) # shape=(385, 378)
output = relay.Tuple([call_9441,bop_9445,])
output2 = relay.Tuple([call_9443,bop_9448,])
func_9452 = relay.Function([var_9442,], output)
mod['func_9452'] = func_9452
mod = relay.transform.InferType()(mod)
var_9453 = relay.var("var_9453", dtype = "int64", shape = (385, 1))#candidate|9453|(385, 1)|var|int64
output = func_9452(var_9453)
func_9454 = relay.Function([var_9453], output)
mutated_mod['func_9454'] = func_9454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9062_call = mod.get_global_var('func_9062')
func_9064_call = mutated_mod.get_global_var('func_9064')
call_9456 = relay.TupleGetItem(func_9062_call(), 3)
call_9457 = relay.TupleGetItem(func_9064_call(), 3)
func_2422_call = mod.get_global_var('func_2422')
func_2425_call = mutated_mod.get_global_var('func_2425')
const_9463 = relay.const([[3.730363,1.172410,2.176491,0.689970,-3.917048,-9.088090,-4.352971,-7.459563,-3.698198,-4.505046,-8.839258,-9.275295,0.760113,-2.107033,4.928856,8.308376,6.294231,-9.848109,5.073546,6.163761,-4.120527,0.021364,0.467810,8.418703,4.272659,-2.457042,3.766876,5.032752,-5.644916,-8.382264,1.724409,-5.268034,-2.786250,-1.544605,-8.414733,6.028489,5.272766,4.616384,-5.807059,4.503892,3.733911,-7.226619,-3.848901,0.731909,9.689756,-0.472923,-5.990037,7.102706,-6.855439,-3.290162,3.997686,7.142983,-7.743811,8.713346,1.645705,-7.230126,-3.405835,8.581513,4.017681,1.517936,-0.839189,9.144937,-5.058068,-1.413270,-3.112917,0.791902,-2.731284,7.138985,-8.976380,-5.406833,7.367789,-5.176665,3.957232,-9.846654,-1.308030,7.377884,9.666471,5.241457],[-4.270342,-9.786197,-8.549930,-5.914156,-4.565019,6.462449,9.146526,-9.782053,6.888334,-9.415455,-3.588229,5.025777,9.425491,-1.908220,8.067500,-4.865107,0.851274,9.807563,7.016258,-4.105217,0.154448,-8.821569,8.576440,2.179130,7.592560,1.980257,-9.935177,-0.978031,-2.919794,-4.377685,6.998522,8.382383,-1.473677,-2.388041,-2.773404,9.122899,9.816873,-3.124112,2.196950,0.508028,-4.344045,-5.812619,5.144261,-1.376771,7.891892,8.531900,2.554652,6.024908,3.531762,0.797783,6.311977,1.844679,-2.963918,9.039820,8.456191,-0.704925,-9.473792,-9.619016,-0.501521,4.113285,-2.550940,-6.687682,0.216160,1.894445,0.729080,-0.829729,1.105469,4.174006,-8.469739,7.594816,8.316839,0.224669,2.895341,7.246590,-4.438306,5.268650,-5.365096,-8.564467],[-1.507792,-7.377121,8.463744,-5.409373,0.743675,-1.569539,-4.822361,3.610810,-2.748574,6.848262,4.277108,9.900157,9.829225,-6.865977,-8.887049,1.091166,-4.394968,-2.788642,6.384218,-7.152547,8.491051,-4.764751,1.062221,2.719927,-5.631292,9.207698,-6.476377,8.933939,8.875872,0.957472,-7.841142,-3.797537,-5.834681,-8.127457,8.916642,-9.799480,-8.665151,2.090095,3.827690,9.500042,2.285602,7.454599,5.383216,-6.935922,-1.977230,-1.769583,-7.238916,6.940032,9.706810,-7.918999,-6.304419,2.286398,2.803523,-3.052206,-5.842380,-0.892519,-5.985911,8.844871,-9.101296,4.238901,2.174035,-6.592972,-6.164264,-6.823035,5.069882,9.840035,-3.085710,-5.328507,7.087606,-0.188375,-1.309997,3.879664,-5.592081,-9.743941,-3.498814,9.945655,3.372715,-2.995234],[8.645715,-4.310138,7.727553,-4.599616,-2.866636,-9.785279,-2.712886,2.377981,9.777772,4.173020,5.482935,5.412137,0.315864,0.161068,-2.872228,9.530967,4.915368,-6.071699,2.860722,-7.433347,-0.213708,6.298734,6.316399,3.648858,4.381876,-9.319972,9.181043,4.578945,-6.830887,5.808928,-5.707504,-3.141006,-1.197086,-3.617106,2.456020,-8.882013,1.618357,-5.036544,-4.266510,-1.268830,2.459447,3.060453,-1.785274,7.319089,0.340652,3.456982,5.333248,3.293503,-0.432026,0.398810,-5.785301,5.590189,2.037551,-5.000519,-9.128240,-6.198303,1.168806,-6.754987,-0.306529,-6.384332,-8.634914,2.534878,2.952269,-9.676766,-5.268493,-5.718352,8.081727,8.877229,7.657211,-4.643156,-0.344205,2.646173,-0.190214,1.776418,-4.354502,9.985267,1.947298,-4.265313],[1.549794,-3.971235,2.042093,7.335016,5.802251,2.471047,-7.614768,-5.550368,-1.826777,8.078659,4.945015,1.107693,-6.828602,-3.513734,1.362679,6.452126,2.452662,3.015055,-8.093647,1.579630,2.770042,-0.348046,1.126519,-3.842677,9.978936,-3.982162,-9.169252,-9.554929,-7.069550,-1.043907,2.959626,5.848043,3.758140,5.525759,6.790391,8.190046,-8.141518,-7.691444,-6.089766,8.571600,-5.155317,-4.485526,-1.868161,-9.661268,-9.089055,-9.295348,-8.021481,-5.031062,-6.410783,4.509460,8.316104,-9.955062,-2.223218,7.534665,0.916398,-2.112057,-3.818548,-4.025155,7.949982,-6.155321,6.568327,-9.130858,-8.454271,-2.855014,-2.712513,-3.858714,-5.164525,4.418673,4.513872,-5.104079,-2.736481,0.028830,7.429123,5.624044,-7.958342,-9.935594,-0.517792,8.081252],[-6.654392,-4.642803,7.213472,-6.369546,0.223715,-2.528549,-3.849271,-4.661854,-7.367991,1.423397,0.448253,-6.320561,-2.358354,-7.305392,6.928307,1.109782,3.579722,2.170765,-5.740477,-7.681694,1.183600,3.836180,9.062784,-0.571043,5.290727,-4.849366,-4.303665,-7.078465,8.136110,-4.491643,-3.560240,-0.885884,3.663147,-1.555815,4.627236,3.823562,0.271430,-4.919393,-1.743841,-5.536475,4.537060,3.607104,-5.393907,-0.006885,-5.425306,-4.757677,1.860946,-9.619267,-1.428110,-2.365708,7.458731,5.246358,-9.628285,-6.763857,-6.084614,-1.733695,2.876820,-3.406295,3.631067,5.297901,8.146007,-0.780373,7.595399,8.863895,7.267636,3.164019,2.301572,-0.081826,9.187709,6.245401,8.826453,2.467555,2.739898,-9.202959,-2.547024,-9.658277,-8.156264,-8.892767],[7.823394,3.896930,-6.635276,5.167988,0.171848,4.300079,-7.975071,6.236842,3.656474,-8.105664,-9.881765,4.584899,5.434229,-8.955848,2.119290,0.889176,-0.223601,2.086068,8.278748,-0.002534,-5.735168,2.563261,-0.903749,3.535188,1.775405,-9.595119,-9.678308,6.147453,8.695904,3.057507,-6.810976,8.959457,-7.960427,6.353595,-5.775576,-5.987660,-0.420192,7.614262,-6.935456,-0.551163,1.978418,1.792952,-0.558320,8.129498,-6.136575,-3.747089,5.171086,0.155406,3.858686,3.713173,1.497330,-2.133791,-7.277051,-5.968066,-0.320434,-1.926785,-1.399825,-3.519955,-3.503205,-9.762380,-3.780120,-7.075672,7.493676,4.118744,-6.069718,-8.509931,9.298988,1.310909,-8.164830,-6.752044,-4.629008,-7.383507,4.864677,-7.737732,-9.330361,-4.603439,3.831743,-5.879688],[8.777055,7.839310,2.225168,9.452309,2.260009,-1.464350,-1.891519,-6.895451,1.316930,1.996593,3.234340,8.059960,0.886228,7.031839,-6.919528,8.107554,4.691956,3.273266,-9.132446,1.350881,-9.236644,5.795583,3.408446,6.245092,1.978960,4.116728,-3.629526,-8.566349,-6.588790,6.683525,-2.745521,-0.192327,2.497097,-6.080198,-6.173112,8.206470,9.198535,-5.049688,8.239038,8.986226,-4.609531,7.119615,6.194527,-2.953313,2.906751,-6.417727,-7.614565,-5.796791,0.836110,8.766862,-0.231205,-3.588101,-1.115664,-3.829872,-7.149854,-1.013106,-5.633681,-5.418911,1.944656,-6.820342,-9.108107,-6.306493,5.088155,-1.903033,5.381691,5.565373,8.500499,1.703693,-9.610379,3.345659,-8.870401,5.138980,2.257807,-4.255269,8.794219,-5.668297,-6.698760,-5.939021]], dtype = "float64")#candidate|9463|(8, 78)|const|float64
call_9462 = relay.TupleGetItem(func_2422_call(relay.reshape(const_9463.astype('float64'), [624,]), relay.reshape(call_9456.astype('float32'), [14,]), ), 1)
call_9464 = relay.TupleGetItem(func_2425_call(relay.reshape(const_9463.astype('float64'), [624,]), relay.reshape(call_9456.astype('float32'), [14,]), ), 1)
bop_9473 = relay.add(const_9463.astype('float32'), call_9456.astype('float32')) # shape=(14, 8, 78)
bop_9476 = relay.add(const_9463.astype('float32'), call_9457.astype('float32')) # shape=(14, 8, 78)
output = relay.Tuple([call_9462,bop_9473,])
output2 = relay.Tuple([call_9464,bop_9476,])
func_9484 = relay.Function([], output)
mod['func_9484'] = func_9484
mod = relay.transform.InferType()(mod)
output = func_9484()
func_9485 = relay.Function([], output)
mutated_mod['func_9485'] = func_9485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9349_call = mod.get_global_var('func_9349')
func_9350_call = mutated_mod.get_global_var('func_9350')
call_9537 = relay.TupleGetItem(func_9349_call(), 0)
call_9538 = relay.TupleGetItem(func_9350_call(), 0)
output = relay.Tuple([call_9537,])
output2 = relay.Tuple([call_9538,])
func_9546 = relay.Function([], output)
mod['func_9546'] = func_9546
mod = relay.transform.InferType()(mod)
mutated_mod['func_9546'] = func_9546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9546_call = mutated_mod.get_global_var('func_9546')
call_9547 = func_9546_call()
output = call_9547
func_9548 = relay.Function([], output)
mutated_mod['func_9548'] = func_9548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9349_call = mod.get_global_var('func_9349')
func_9350_call = mutated_mod.get_global_var('func_9350')
call_9555 = relay.TupleGetItem(func_9349_call(), 0)
call_9556 = relay.TupleGetItem(func_9350_call(), 0)
output = relay.Tuple([call_9555,])
output2 = relay.Tuple([call_9556,])
func_9567 = relay.Function([], output)
mod['func_9567'] = func_9567
mod = relay.transform.InferType()(mod)
output = func_9567()
func_9568 = relay.Function([], output)
mutated_mod['func_9568'] = func_9568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9416_call = mod.get_global_var('func_9416')
func_9417_call = mutated_mod.get_global_var('func_9417')
call_9603 = func_9416_call()
call_9604 = func_9416_call()
func_2422_call = mod.get_global_var('func_2422')
func_2425_call = mutated_mod.get_global_var('func_2425')
const_9621 = relay.const([7.341720,-8.042199,8.301245,-7.992057,9.169931,3.392147,-5.677025,-6.570579,7.982032,9.490367,-7.333899,6.623044,-1.253601,-5.454062,-4.659244,-5.216244,3.098007,3.295055,5.425641,-9.076584,9.222318,-6.790693,-7.919438,-2.269013,6.280997,6.082644,1.636177,9.886721,9.606563,2.686529,5.918889,-2.151202,-4.756515,0.991453,5.757334,-5.534722,-0.960214,1.697249,3.623486,-6.597372,4.953425,8.207355,-7.092143,-2.048368,-0.401495,1.772116,8.662831,-9.925579,-6.408466,-5.371816,0.828828,-4.633805,3.793206,-6.143926,5.705274,3.790882,-4.298843,9.379236,-0.382149,-9.887491,8.279162,-8.907317,3.714794,-9.153993,0.668684,-0.345199,0.232369,-5.882174,-2.125350,-9.063769,2.315348,-1.956697,-0.309985,-0.893796,-9.943384,4.126572,0.744384,-7.479027,-4.560415,-4.176326,2.441791,-7.021844,9.451793,-7.388753,2.284445,-8.907227,-8.091768,-4.456086,-9.313389,1.077234,3.825066,6.322404,7.807436,-4.192914,-9.013080,1.965442,0.052491,3.733697,-5.054893,-5.555622,-6.764973,-4.878336,5.611754,1.520879,0.968238,-2.928946,9.788557,0.983134,-0.530049,-5.175829,-4.510258,-9.823253,9.015945,5.392227,1.052769,1.345998,-8.555228,0.333858,-1.689853,3.833252,8.710875,-9.607077,4.363302,7.558009,7.852546,5.155546,1.668768,1.859992,5.992647,-8.507521,-7.286982,-8.485685,4.061163,2.175351,-6.145894,-6.125379,-7.798097,-1.027089,-3.077648,9.200311,1.237932,-7.852723,0.059914,1.877988,-9.080841,5.586900,8.327009,5.872913,9.171100,-2.890794,3.755667,-1.810597,8.610275,-5.776651,-5.693989,-9.602378,-2.919186,9.540468,-0.103596,-7.559558,-3.592588,-1.546656,7.489959,7.535290,-0.430814,-6.572508,-9.270276,3.861358,9.967113,7.238055,-7.405210,5.803261,-9.955317,-6.195704,1.954158,3.255685,-2.635617,3.321451,4.386466,4.352204,-9.393573,-7.901397,-0.821978,-7.062447,7.101516,1.553698,4.323911,-3.552876,5.503649,8.605939,6.737671,4.926404,-3.679705,2.929647,7.184494,7.090989,-0.059252,-6.157290,4.978020,-9.624407,-7.743237,-6.814534,-1.144346,-3.077702,7.069915,-2.207975,-3.642246,2.300180,-0.936133,7.703781,6.544737,4.645082,-5.350891,-9.962162,-1.102705,-5.855432,-0.645295,3.589180,9.651094,9.354999,3.778774,5.336125,5.411266,-2.118711,1.494119,0.609974,-9.914689,-9.131248,-7.173427,-4.306280,1.959372,1.476102,-2.502010,-9.566199,-3.272989,-9.086078,3.244419,-6.526161,-6.850514,-4.638549,-1.221363,-2.250137,-7.662874,0.479246,3.702599,9.682552,-2.888958,7.211799,7.837169,-3.810095,4.569988,4.970082,-2.408837,6.513694,-6.603534,-6.685782,6.449885,9.109119,9.945842,-2.668598,3.250620,9.043525,-7.730076,-0.790015,-1.146334,-9.151198,8.255756,-8.097829,3.636889,8.778738,5.153598,-0.153896,-6.147825,-3.486509,-0.383948,2.230449,-4.758919,1.474576,3.747696,0.203776,-5.357950,1.199783,9.794867,1.729513,2.737176,8.184814,-1.747653,7.808230,0.370703,-9.349142,-6.947609,1.098550,-5.858866,1.324736,-7.339317,9.524301,-8.457666,3.122407,-0.873336,-2.467238,4.190740,-2.104092,2.380878,-7.161549,5.932352,-7.910777,-5.016259,-0.885828,-5.978432,-7.202858,-4.739237,4.258897,-1.396867,8.973336,9.033720,-5.957851,3.242139,-0.497349,-0.135939,6.903388,6.779717,3.645380,-9.142601,-5.618391,-1.210338,9.739621,-6.446470,6.902771,3.098519,3.309148,9.420392,9.656166,-0.825521,2.358916,5.786075,-5.505710,3.057565,-9.131578,-5.289941,-2.185242,-0.132679,6.827761,7.916826,5.077541,0.045507,2.227711,5.587473,0.254577,5.935575,-4.823209,-6.420184,1.962690,0.304041,5.329412,7.302653,-7.561934,4.118965,-4.671477,-1.277568,-2.086323,4.995829,-6.286725,-3.912976,-9.007560,2.733001,-1.326346,-3.194446,2.248197,-8.750344,9.152439,-3.473885,8.355960,7.720614,-9.930399,6.040643,-8.741640,3.322086,3.037371,-2.171376,8.091021,4.990053,8.432870,7.321517,5.829175,3.365852,9.476228,-9.316413,-2.894116,9.525566,6.107157,2.709457,9.492967,5.067071,-0.843728,-1.795118,3.589040,-8.329364,9.810373,4.084224,4.889873,9.291804,-3.661737,6.203056,-8.305623,-1.133760,2.542166,9.437066,-1.221645,-9.141921,-7.768201,-2.634382,-2.786960,0.107429,-0.792381,-3.257947,5.192460,5.492216,0.397272,-7.104660,7.031773,7.399458,-2.286446,8.619684,0.788206,-9.950382,-3.762284,4.098830,1.612269,6.273466,1.615965,8.919467,6.635200,6.560223,5.120147,-6.144320,-0.068330,3.992565,-9.942887,4.183045,-4.994453,-3.434211,-6.890706,8.152941,-3.441232,8.712958,-8.354993,-6.943175,6.112563,-6.145914,-9.930854,9.395737,5.710158,6.485318,6.755753,5.400926,-9.645229,5.586171,-9.601981,-4.254693,6.634863,-1.108372,-7.458587,0.410942,-7.303546,-7.793529,0.843693,6.549148,9.195449,-3.651665,4.396927,-7.031471,7.374043,-6.950673,7.752130,-6.534998,8.273821,-1.063920,-1.114713,5.658060,-7.412320,9.546351,-6.981458,-0.199843,9.220576,-5.006741,-6.917836,9.668405,-7.663250,2.188405,-6.098303,-4.621654,0.998188,-0.342241,7.506273,-4.285314,4.690622,7.053908,3.180053,1.930121,-2.310986,0.641760,7.296658,0.192045,6.658452,2.582650,-0.902005,0.129612,-1.969008,3.996207,6.973703,3.940628,3.669460,-4.444477,-2.210687,-0.133675,-1.572723,-2.573627,-6.326620,6.146195,-0.542833,0.137365,4.599174,-1.826317,-0.411070,2.829364,-9.883662,1.197092,4.171243,-0.513130,4.289086,-9.403284,-4.876211,3.156627,-2.561763,-2.487390,0.769411,-2.985036,-6.025112,2.299801,-6.799535,5.918959,0.660612,4.210686,-8.233958,8.342244,-3.675092,5.692116,-7.162672,1.719423,-1.305161,0.570741,7.262665,-7.955107,4.479460,1.382813,-7.800620,-8.980412,7.918614,-5.271007,2.836430,6.999074,5.800468,-8.237956,-9.882844,9.423094,-1.260205,-1.471381,-9.810639,7.550449,-2.022670,9.340273,4.592024,0.229007,9.259532,9.988856,4.350513,-9.674913,7.194777,-8.831135,-9.022618,-4.914271,-0.373605,9.992231,8.392096,-8.273677,1.707575,-0.591447,2.107441,5.824022,7.478826,0.519475,5.316349,-5.418502,2.536024,-1.736127,-2.138094,-0.382114,-3.834183,0.784286,-2.549623,8.284763,2.435474,6.707331,7.639466,-7.362858,9.702061,2.632682,5.455598,3.540815,-9.336466,2.458087,0.587900,-3.807627,6.102966,8.767051,5.655889,6.058847,2.535955,-9.199749,7.297866,3.017845,-3.471842,3.315474,-5.853891], dtype = "float64")#candidate|9621|(624,)|const|float64
var_9622 = relay.var("var_9622", dtype = "float32", shape = (14,))#candidate|9622|(14,)|var|float32
call_9620 = relay.TupleGetItem(func_2422_call(relay.reshape(const_9621.astype('float64'), [624,]), relay.reshape(var_9622.astype('float32'), [14,]), ), 6)
call_9623 = relay.TupleGetItem(func_2425_call(relay.reshape(const_9621.astype('float64'), [624,]), relay.reshape(var_9622.astype('float32'), [14,]), ), 6)
func_8260_call = mod.get_global_var('func_8260')
func_8262_call = mutated_mod.get_global_var('func_8262')
call_9628 = relay.TupleGetItem(func_8260_call(relay.reshape(call_9603.astype('float32'), [9, 7, 6])), 0)
call_9629 = relay.TupleGetItem(func_8262_call(relay.reshape(call_9603.astype('float32'), [9, 7, 6])), 0)
output = relay.Tuple([call_9603,call_9620,const_9621,var_9622,call_9628,])
output2 = relay.Tuple([call_9604,call_9623,const_9621,var_9622,call_9629,])
func_9635 = relay.Function([var_9622,], output)
mod['func_9635'] = func_9635
mod = relay.transform.InferType()(mod)
var_9636 = relay.var("var_9636", dtype = "float32", shape = (14,))#candidate|9636|(14,)|var|float32
output = func_9635(var_9636)
func_9637 = relay.Function([var_9636], output)
mutated_mod['func_9637'] = func_9637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9546_call = mod.get_global_var('func_9546')
func_9548_call = mutated_mod.get_global_var('func_9548')
call_9643 = relay.TupleGetItem(func_9546_call(), 0)
call_9644 = relay.TupleGetItem(func_9548_call(), 0)
func_7409_call = mod.get_global_var('func_7409')
func_7413_call = mutated_mod.get_global_var('func_7413')
const_9648 = relay.const([[-1,-10,8,-4,10,7,-7,-8,-3,-9,-4,-8,-1,-1,-9,2,7,-4,5,8,-9,5,-1,8,5,6,10,6],[-3,2,3,-5,-4,-5,-4,4,7,-1,4,4,-9,-1,-4,-10,6,-10,-6,9,-3,10,-7,-3,6,7,-3,3],[1,1,-3,-4,-5,-9,-1,-2,3,2,-8,8,-6,6,-4,-9,5,4,-3,8,-5,10,7,8,5,2,2,-9],[-5,-8,-6,-5,9,10,8,-1,-6,8,-2,-3,-8,-4,5,9,-2,10,-5,10,6,7,9,8,-10,9,5,-1],[-7,3,10,-5,-2,10,-9,1,-10,1,8,-5,6,-10,-5,5,-8,7,4,-10,-6,2,-1,-3,5,2,-1,-2],[2,9,-5,-1,-5,-10,-2,-3,-1,4,-2,-6,-10,10,5,10,4,-5,8,-3,-6,-1,-5,7,-1,-1,9,-10],[6,-2,-2,8,-4,8,-1,-4,-5,-7,9,-10,4,-5,-9,-4,7,-5,6,6,8,-1,-4,-8,-10,-1,9,-1],[-3,8,5,6,-5,10,4,-3,-9,-3,-1,-10,-6,-2,-2,-9,-1,-6,10,10,-5,-9,6,3,-10,6,9,-4],[9,-1,-9,6,1,8,-6,-7,9,-1,-1,10,-1,5,-4,-7,5,2,10,3,1,-1,2,-7,-7,5,3,1],[4,5,7,1,-8,5,2,-9,1,-10,-9,3,-7,6,-4,5,-3,5,10,1,10,8,-3,-5,-9,7,-5,-4]], dtype = "int32")#candidate|9648|(10, 28)|const|int32
call_9647 = relay.TupleGetItem(func_7409_call(relay.reshape(const_9648.astype('int32'), [5, 8, 7]), relay.reshape(const_9648.astype('int32'), [5, 8, 7]), ), 0)
call_9649 = relay.TupleGetItem(func_7413_call(relay.reshape(const_9648.astype('int32'), [5, 8, 7]), relay.reshape(const_9648.astype('int32'), [5, 8, 7]), ), 0)
func_6762_call = mod.get_global_var('func_6762')
func_6764_call = mutated_mod.get_global_var('func_6764')
var_9652 = relay.var("var_9652", dtype = "bool", shape = (2, 160))#candidate|9652|(2, 160)|var|bool
call_9651 = relay.TupleGetItem(func_6762_call(relay.reshape(var_9652.astype('bool'), [16, 5, 4])), 0)
call_9653 = relay.TupleGetItem(func_6764_call(relay.reshape(var_9652.astype('bool'), [16, 5, 4])), 0)
bop_9654 = relay.logical_xor(call_9647.astype('int16'), relay.reshape(const_9648.astype('int16'), relay.shape_of(call_9647))) # shape=(5, 8, 7)
bop_9657 = relay.logical_xor(call_9649.astype('int16'), relay.reshape(const_9648.astype('int16'), relay.shape_of(call_9649))) # shape=(5, 8, 7)
output = relay.Tuple([call_9643,call_9651,var_9652,bop_9654,])
output2 = relay.Tuple([call_9644,call_9653,var_9652,bop_9657,])
func_9658 = relay.Function([var_9652,], output)
mod['func_9658'] = func_9658
mod = relay.transform.InferType()(mod)
mutated_mod['func_9658'] = func_9658
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9659 = relay.var("var_9659", dtype = "bool", shape = (2, 160))#candidate|9659|(2, 160)|var|bool
func_9658_call = mutated_mod.get_global_var('func_9658')
call_9660 = func_9658_call(var_9659)
output = call_9660
func_9661 = relay.Function([var_9659], output)
mutated_mod['func_9661'] = func_9661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9567_call = mod.get_global_var('func_9567')
func_9568_call = mutated_mod.get_global_var('func_9568')
call_9723 = relay.TupleGetItem(func_9567_call(), 0)
call_9724 = relay.TupleGetItem(func_9568_call(), 0)
func_5512_call = mod.get_global_var('func_5512')
func_5516_call = mutated_mod.get_global_var('func_5516')
const_9738 = relay.const([0.340503,0.024854,5.045458,-0.033298,-2.945848,7.675702,2.791219,9.499544,-7.154427,3.524170,4.479126,-0.194881,9.892134,-4.189462,-0.774406,5.546273,3.477456,2.919634,-5.762693,5.239967,-3.426838,-0.363164,9.941329,1.312310,0.003006,-2.336196,3.813725,6.035698,-7.973230,-6.020443,-1.198644,-0.387818,-8.048050,-4.380256,-3.616017,9.645689,-2.194401,-0.901384,3.016248,-8.117938,-3.254503,-8.867537,6.269225,-4.571672,0.443386,-2.552355,-2.200548,1.769499,9.038312,5.145531,1.439435,-7.886699,-5.351393,-9.602136,-8.398492,-2.453067,4.445368,0.451492,-8.778502,-2.137360,-9.599677,6.197527,4.152791,8.080028,7.073130,-0.257829,-2.008692,-2.517785,0.829578,-4.594918,1.314403,-3.224456,3.789774,7.684391,8.329253,-3.021225,7.580617,-9.804063,-9.338718,0.658736,-8.717971,2.849004,-2.361327,7.185863,-6.734167,-7.284155,2.991210,-1.004949,-5.626550,-0.969347,1.596424,6.459093,2.879601,0.100021,9.702884,0.322192,6.571116,-5.118649,-1.943887,4.039184,-6.916626,6.867206,0.799359,-9.405415,5.279135,2.552987,6.767959,9.226422,8.633428,6.316659,2.043563,-8.018568,3.501661,5.957960,1.493490,-7.771420,-3.196741,3.677133,9.072700,6.587011,-5.895236,0.166324,8.253983,-0.539574,7.310647,4.111030,-3.970035,8.556693,1.888652,-6.569466,-6.442250,-4.341199,-1.437311,-4.118024,2.073733,-4.373442,-4.020744,-1.603965,7.230390,-3.370215,-3.958910,4.357925,-0.648668,-8.482564,8.298789,-9.257373,3.215303,-9.690259,-3.267778,3.552715,-3.591969,6.635373,8.190746,-7.600368,4.432742,2.156048,7.200008,-9.624015,-2.499350,6.409757,1.196751,3.694527,-0.360140,-9.319740,-3.191933,-3.562106,-1.012181,0.597791,9.374863,-6.668261,0.268956,-0.744246,-8.413153,-1.525877,8.163187,8.546157,5.212135,6.505387,-5.953129,-8.213443,5.576593,-8.384382,-9.764273,6.768767,7.798277,-4.158399,-4.268175,0.326131,-1.619714,3.978496,1.568955,-8.553536,6.319648,-4.428160,-2.613827,-4.030600,-2.168174,1.434854,-3.524527,-6.640257,-1.100608,-4.030707,-0.558777,7.931838,2.817182,-2.002485,7.081103,1.962625,4.500659,3.877232,-4.262607,0.998379,-8.974611,-2.745614,-4.368785,-2.457890,2.115530,8.314463,1.599364,-9.796670,8.494992,9.762052,-5.074488,9.738972,9.829743,4.134319,-0.685947,-2.982680,4.431558,4.413184,7.572058,-2.424140,0.814815,-5.155546,-7.647801,2.262690,-8.223669,4.890585,-9.317505,-0.820018,4.830478,1.682396,-5.432773,-1.328491,-8.544554,0.276870,6.050582,6.240679,2.465237,6.043243,-2.216837,8.193699,-8.489563,2.584940,5.932630,-9.164492,6.545265,-4.008775,7.355824,0.745916,3.353019,6.979537,-0.601330,7.447208,9.641766,-4.079295,7.628795,-6.840883,-6.055056,-8.550109,3.815415,-8.166264,2.404040,-0.600951,9.029820,-6.925496,6.806699,3.445878,-7.312674,5.077370,-4.806978,-6.959796,-2.552741,6.947653,-7.415815,-6.061523,-5.785970,8.639563,-1.011135,-4.671334,0.814695,-6.588543,-9.538759,6.112216,-7.993123,-4.436809,-9.179475,-3.670011,1.848240,6.252514,-3.190771,6.531114,-2.318826,-7.087375,4.193722,-1.948339,7.943093,0.485448,-8.783307,0.912433,2.578162,3.383675,-4.864317,-2.871547,8.469074,9.609773,-0.838172,-8.255761,6.210205,0.455706,0.131925,-6.167179,-7.692590,9.707205,-8.203195,1.558992,-2.011811,2.483043,-4.335974,9.228005,4.495069,8.672431,9.408137,-1.056646,-5.482316,4.090107,0.120354,3.037587,3.802967,-5.376940,1.455253,-9.040136,9.177235,-5.775282,3.470183,5.564335,-7.421244,-8.285924,0.576780,1.598927,-0.114220,2.486450,-7.356575,8.775289,5.910140,0.480138,7.017806,5.897598,9.810221,1.671972,0.330462,2.471903,2.255739,7.695967,-8.007051,6.588128,-7.043896,-5.782297,7.313788,-0.361279,8.846382,5.120952,6.959680,5.021014,-5.468604,-1.746640,-7.333118,7.288265,6.754467,-1.236824,1.727935,9.679652,-0.820684,-7.490556,9.754421,8.143736,-2.639390,-2.274470,1.332259,-4.530716,-0.940657,9.454086,-9.977885,-6.162208,7.331215,9.724895,-0.498028,-5.547565,-1.183452,-1.491456,-7.267304,8.714794,-4.451196,-9.332543,4.268740,5.531382,6.484669,-3.882777,-4.309006,-1.785063,7.122922,-3.802755,-8.896715,2.994301,-0.804424,-6.666927,5.473288,4.368421,5.615353,1.094557,1.929862,-3.920259,0.366505,-7.504263,-3.738305,0.578394,0.131674,0.414341,2.934731,-0.205564,0.308804,-1.076655,-9.102596,-6.964504,8.309996,5.270129,9.589606,-8.395619,-0.627834,-7.132794,4.899164,3.527468,2.263754,-1.059939,1.225437,-0.541934,0.724118,5.784262,0.955414,-3.351720,2.524451,1.104794,5.308437,3.404661,-8.527004,-2.300847,7.077024,-0.984357,4.235864,8.357912,-9.060250,7.228586,-3.663729,2.786352,-8.154925,2.657531,6.002265,-2.482123,-1.356429,4.241544,4.647643,-7.882101,8.874237,-6.814712,1.485351,3.421536,4.351364,9.867300,6.236092,1.566374,-2.303910,0.663007,8.422943,5.538400,8.959435,0.433977,-4.543125,7.639321,-4.903384,-6.342801,-4.308567,5.566546,-4.853298,4.302945,-1.914558,-6.566840,0.129562,-4.204593,0.259266,-7.394285,-0.228903,-1.102169,8.059748,-9.567225,2.870656,9.358663,-8.740395,5.812620,-1.202548,-5.452744,-7.948093,7.334659,-8.578723,-3.792007,8.570706,-1.388689,-7.406049,3.536245,4.728302,-7.088198,-4.960540,-1.161929,-8.746192,-6.239086,-4.769265,2.063973,3.869206,5.516434,8.718162,7.870840,-8.656273,-7.208388,-0.527284,8.627375,-7.575576,-5.559492,0.681896,7.134350,4.886318,-8.226337,0.800837,-8.025631,9.748208,-6.618464,4.041969,5.932304,-3.142451,2.198795,0.572382,-2.983784,-7.744853,6.517058,7.593995,3.114713,-4.606683,-7.467390,-1.182113,-6.678343,-3.593975,-9.243253,-9.790559,-9.643272,7.356196,-4.015776,-7.590511,-6.331364,0.309268,-2.325035,4.867848,0.316669,-2.222685,3.681947,-2.327553,-9.707758,-3.894151,4.449271,-6.671097,4.839569,3.639367,1.902003,-7.572991,-2.501899,6.514208,-7.533649,-9.132534,-4.979292,-8.755674,9.420616,1.031820,0.319492,-2.195910,-9.176127,-6.687518,8.185029,1.130645,6.062153,-7.031984,-6.475637,5.374453,-2.577210,-4.445766,-3.094098,-9.418318,-3.625251,9.721141,-6.713976,-5.751358,-6.448192,-4.589263,-5.768584,-8.503547,-3.953060,5.585058,-5.903468,7.618777,-0.333685,8.085090,-0.487025,7.851675,0.787526,0.164696,-4.289735,7.537648,-5.156767,-0.286996,1.172026,3.568264,-6.538695,-3.665527,8.890682,9.949525,-1.482860,-3.171560,0.598354,8.040945,-7.173042,-3.697149,-8.067154,5.754990,7.708910,3.166796,5.692904,-9.916924,6.623129,-7.384431,4.034288,-3.931138,5.447652,-6.062395,-9.197185,2.661428,-3.063304,-5.173443,9.365570,-8.282923,7.955759,-2.362230,-8.714446,-1.169273,0.131284,-4.343047,7.454807,-4.991325,9.960299,3.078667,-0.347482,-1.214733,-6.400541,6.550018,-1.609095,-4.349627,1.951061,-5.433617,-6.458432,8.954827,-8.759351,-0.532488,1.657611,-8.485150,7.774639,-0.611114,-7.039549,9.738985,8.701942,9.712797,-9.710390,-9.930662,-8.111905,6.854339,3.313087,-5.327962,-9.659135,5.240556,-2.467122,-3.878953,3.777628,2.222353,5.812264,-0.757903,-5.989268,-0.695703,-3.596431,-7.078950,-3.038550,0.487332,1.750466,6.498748,-9.911479,0.997774,-1.783688,-6.467007,-9.920158,7.628412,-6.997343,8.084532,0.958759,9.986725,-6.159773,-1.586988,5.624925,-8.786061,-2.550045,-0.794652,3.966100,5.797766,0.570227,3.823105,3.519267,9.792667,9.047119,-5.494605,2.475211,-0.361047,-8.803854,-9.386393,-3.854642,-4.074004,-9.637862,3.107553,-1.400314,9.005621,-6.407679,9.486275,5.110325,-1.558500,2.318840,-4.868996,-5.897265,-0.876218,6.234982,3.514245,-4.457016,-5.418299,-0.851794,-8.474025,-5.818239,4.193668,-0.804813,3.810951,6.682910,-3.103811,-3.698378,1.891163,1.060745,3.334489,-9.008688,-6.371679,-6.280146,7.323189,-2.783263,4.714719,2.474073,-4.840426,-0.616351,-8.786797,5.580873,-2.607175,5.540580,-5.061703,-4.549087,6.915037,-1.036300,0.906771,5.480388,-4.550483,-3.840740,-7.412992,-3.598584,8.116045,-0.016684,-7.041757,2.258092,-5.815062,7.422590,8.538179,-4.979980,-4.591497,4.080556,-1.940096,0.017355,-3.146411,-5.388106,2.131675,7.041247,7.778928,-4.180614,9.875825,3.871842,-4.015333,8.432277,-5.888331,3.925405,-3.284885,-8.196651,3.238768,6.078764,5.920857,-1.039518,-1.014880,7.641857,-7.049591,-1.244196,0.297492,0.197919,-6.953914,-2.776077,-4.253169,4.765123,-2.041528,0.059241,3.014976,4.456729,0.915037,-8.275378,-2.882367,5.533820,5.790572,-0.852933,0.660948,2.866049,-5.162469,-2.533975,7.139289,-5.025688,6.258749,4.209668,-0.929027,3.751959,-4.970737,-5.984276,-5.570624,5.872047,4.416296,-0.417651,9.600561,-1.961643,8.305205,2.027771,-5.698274,-3.829522,1.571501,4.601498,9.122952,8.104787,-6.438300,-4.522193,-9.607962,-3.979801,9.846170,-2.277751,-6.151598,8.271825,-3.346557,-9.792351,-7.316571,-7.097572,-9.967204,9.517016,3.148974,-5.270087,-5.409008,-7.767232,-4.930304,-0.458928,4.184637,2.522690,9.682152,-7.962549,9.751168,8.606680,7.549342,2.465108,8.316395,7.230692,-5.728250,-4.341161,-8.152111,6.672849,1.030073,1.484389,-6.802752,6.834737,2.745098,8.086536,-2.239801,-5.081550,7.094860,-2.880209,-4.452043,2.267734,2.205640,-7.030749,-5.694660,-5.475058,4.871232,-1.597163,-7.585458,-2.190341,7.884646,-6.743528,-3.672740,-0.484884,2.144040,-4.595180,-6.879793,-5.848491,1.802105,-2.372059,-7.858572,3.087719,-4.632637,2.824509,6.555546,-0.823054,-4.226263,7.169738,1.868491,-7.147593,-7.974865,-7.264575,-6.169921,-3.553429,6.713512,6.006932,4.721870,-0.545074,-1.731527,5.556590,5.607438,2.435660,-8.958618,-0.858438,-6.836876,-8.502869,9.556977,6.350203,9.209165,4.158750,-8.012621,-8.064960,7.116643,5.643063,3.520789,-0.834772,-6.757677,-6.960777,-8.335076,-5.631027,0.289960,3.506533,-0.389671,-7.626780,-2.843735,-6.433857,-8.825356,-4.277605,7.987412,4.672343,-1.047138,9.245270,5.106368,-6.741378,-4.679112,-7.858661,0.592033,-9.899395,7.644321,-8.859251,-8.884008,-5.809921,2.065645,2.962257,5.392199,2.875022,-0.578241,-2.195404,-3.607301,5.693212,-5.766413,-8.985191,4.088579,6.792142,6.192121,-0.597542,-0.738381,-4.611178,2.442561,3.459615,9.396902,8.266452,2.209129,0.979423,-7.832013,3.894918,3.742973,-1.505574,-5.441592,9.646356,2.477770,-5.239467,-8.468122,-4.705913,-5.090292,-4.424571,-3.199736,1.150273,-5.729716,-9.085871,2.237048,1.033983,8.109103,5.701956,5.626301,-9.205426,-1.910377,-4.174932,2.614792,-4.953644,-2.438104,6.225792,-5.371251,1.019610,-5.261711,6.319257,7.485581,-7.191162,7.787833,-9.167828,-2.703697,3.984763,1.989840,0.989814,-5.990341,-6.190583,9.221232,-3.418498,-8.585205,-6.747160,6.485035,-6.239306,-6.836085,8.033836,-0.473352,-4.935683,-3.638901,4.042224,3.323864,1.546210,6.973830,5.849807,8.140598,-6.845588,0.903751,-7.088880,6.891186,1.248297,6.155216,7.447807,-1.602662,-9.664919,7.874816,3.723329,0.648077,8.480194,-9.853045,0.684754,-9.155095,-2.465180,-2.936063,-0.374112,0.459732,9.223879,-4.826239,6.159957,-4.935403,-4.860555,0.066438,-0.144532,-0.840698,9.548645,-6.585008,-9.191133,3.343219,-3.009094,-1.483485,3.792296,-7.128339,-4.597756,0.141031,-0.519254,-9.557929,7.903831,-9.677025,-7.669408,4.258488,7.035672,-4.300736,-9.741734,-8.565974,3.341598,7.928688,7.729739,9.555899,5.264868,0.585100,-9.064415,-4.608786,6.943416,3.424572,9.762582,-0.876081,2.665439,-9.759568,-7.679626,-1.676323,9.822857,-5.130917,-8.959083,0.369616,-2.164541,9.976308,-7.423372,-3.282805,-4.536154,0.471652,9.218535,-2.190322,-7.684248,-9.275753,-9.826487,-9.607004,9.065717,-9.154896,-7.728752,5.683778,-3.148809,2.897918,-2.682164,-5.032025,6.162004,-4.492504,1.115284,4.649748,9.339007,-0.829990,6.807604,-1.301896,7.333754,-0.052103,-9.504988,-6.871431,-5.354271,1.656153,-7.409397,1.579261,3.051009,-3.402152,-7.701032,-7.019064,2.132971,5.265406,4.644649,1.826871,-5.214665,-5.216707,1.703612,9.800700,-4.466618,-0.390556,6.678963,-5.693879,1.891351,8.841786,3.825159,-6.618207,4.454501,7.415548,8.417004,5.422716,-7.947854,-6.094160,8.568165,4.053604,-6.034224,-5.922709,0.152989,-1.643751,8.446164,-3.476772,0.791023,8.329867,6.684374,5.137851,-6.928932,-7.895377,-8.536842,-3.499480,2.229669,3.062166,-1.084642,8.221846,-7.900586,-2.874653,2.030243,-9.411205,0.389300,7.728654,-2.921530,1.110510,-7.223820,0.677437,-1.873715,-9.251962,8.707125,4.974856,8.208151,5.177700,-4.251971,4.998041,8.281051,-7.828925,0.189433,1.419680,-0.413797,-6.244900,-7.187072,8.255276,-1.688944,-9.420242,0.201446,4.705671,-2.267487,6.404524,-6.433689,3.797900,-0.784472,1.581690,2.119712,-0.108990,2.740166,-1.706447,-4.300249,3.560385,7.276863,5.669445,3.279820,8.329332,7.273407,1.015523,4.250162,4.392805,-4.916962,-6.115530,7.626270,-6.588180,7.166747,7.226101,-0.936037,-1.590925,-7.218359,9.724719,-2.840587,-0.261469,8.939599,-5.166708,-3.594324,-9.727749,-5.701189,-1.208693,3.365182,-6.996986,-2.390064,1.726749,-5.556951,-7.396789,3.818134,8.907625,5.910299,0.366786,4.403930,8.268251,-4.060005,-3.835471,-9.975392,-0.255895,9.029939,6.474100,-9.839567,6.501341,-2.504777,-0.792340,8.442023,-0.433739,5.749538,7.592465,1.215387,-2.611118,-2.301112,-8.224105,7.862050,6.392879,5.302698,-0.127640,1.315051,9.497444,-3.857741,9.814098,5.698228,-3.381399,6.419129,8.779963,-8.017451,-8.140215,-8.126038,-4.295425,-5.859677,4.409192,-4.243862,4.025346,1.004001,2.038794,-3.327790,4.710569,-8.686513,-1.172023,4.626871,-4.135237,7.672535,-9.463367,1.438667,-1.056624,-4.343233,-9.932265,9.661222,-4.058332,-5.517934,-0.116125,-2.385296,-9.735979,5.405859,5.681223,-3.726235,0.680925,-6.066838,0.847757], dtype = "float32")#candidate|9738|(1365,)|const|float32
var_9739 = relay.var("var_9739", dtype = "bool", shape = (40,))#candidate|9739|(40,)|var|bool
const_9740 = relay.const([True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,False,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,True,False,False,True,False,False,False,False,False,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,False,True,True,False,True,True,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,False,False,True,True,True,False,False,True,True,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,False,False,False,False,True,False,False,True,False,True,True,True,False,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,True,False,False,False,True,True,True,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,True,False,False,False,True], dtype = "bool")#candidate|9740|(560,)|const|bool
call_9737 = relay.TupleGetItem(func_5512_call(relay.reshape(const_9738.astype('float32'), [13, 15, 7]), relay.reshape(var_9739.astype('bool'), [40,]), relay.reshape(const_9740.astype('bool'), [40, 14]), ), 2)
call_9741 = relay.TupleGetItem(func_5516_call(relay.reshape(const_9738.astype('float32'), [13, 15, 7]), relay.reshape(var_9739.astype('bool'), [40,]), relay.reshape(const_9740.astype('bool'), [40, 14]), ), 2)
output = relay.Tuple([call_9723,call_9737,const_9738,var_9739,const_9740,])
output2 = relay.Tuple([call_9724,call_9741,const_9738,var_9739,const_9740,])
func_9742 = relay.Function([var_9739,], output)
mod['func_9742'] = func_9742
mod = relay.transform.InferType()(mod)
var_9743 = relay.var("var_9743", dtype = "bool", shape = (40,))#candidate|9743|(40,)|var|bool
output = func_9742(var_9743)
func_9744 = relay.Function([var_9743], output)
mutated_mod['func_9744'] = func_9744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9546_call = mod.get_global_var('func_9546')
func_9548_call = mutated_mod.get_global_var('func_9548')
call_9746 = relay.TupleGetItem(func_9546_call(), 0)
call_9747 = relay.TupleGetItem(func_9548_call(), 0)
func_6118_call = mod.get_global_var('func_6118')
func_6121_call = mutated_mod.get_global_var('func_6121')
const_9754 = relay.const([-0.739382,-1.683405,-9.866205,-3.309272,-6.697425,-9.643291,6.987481,5.987675,-3.544056,-9.172070,-3.218031,0.069789,-1.797731,8.104935,-2.809302,-5.519461,9.647257,-3.211917,2.842784,4.247561,9.235532,-1.672702,-8.746677,-3.645670,-0.183989,-7.292557,-2.726167,7.012173,8.032765,-5.998295,-1.142504,7.241306,-7.526053,2.269296,-2.931660,6.836635,-0.706352,7.567785,1.595681,-9.662425,-0.474940,9.545280,-8.582043,-9.986529,2.658432,-8.191851,4.050597,5.114737,5.132183,-0.719291,2.946472,5.782547,1.462423,6.430310,-5.889980,-4.619986,-7.264402,-4.149427,4.571049,9.012344,2.059664,-7.454164,8.430925,-0.099513,-0.694772,-0.216880,9.498857,9.722126,-0.329720,0.461373,-7.529763,-7.537080,7.551358,-7.227009,5.370771,4.503113,1.952822,1.724203,-1.027795,5.966127,-8.157160,-8.926398,3.025106,-6.446760,-3.403461,2.611914,-4.150261,-1.939587,-9.433725,-1.357088,-8.659391,-1.356279,5.785329,-3.629690,-2.064495,-1.556315,3.837737,-8.022714,-2.222511,9.860740,-4.447420,-8.687364,-8.212733,3.966780,1.749289,-2.222695,3.720610,1.421006,-4.892862,-2.768971,7.930259,-0.164774,-9.991372,1.590406,4.203985,7.553246,3.767684,-4.769518,-3.326775,-1.936324,3.854995,2.010072,-7.888897,7.303394,-7.679375,3.564109,-4.514669,0.292272,-2.830554,-4.316322,9.671635,7.302064,2.808222,-3.018021,7.075076,6.862835,7.033137,-3.928203,5.786483,-3.210989,8.440755,0.762061,8.001339,-8.885367,5.173448,-2.589064,8.430550,-2.059470,1.219588,-0.557075,9.253754,-2.644770,9.343114,-5.223040,-2.687794,-3.199284,-1.753800,-5.550431,-7.160781,0.329746,2.104408,-1.032855,-6.565800,2.966074,8.306694,-4.976976,8.407947,3.395035,8.265320,1.181725,2.672424,-6.169401,3.949866,3.403860,8.340288,4.473831,-9.912485,9.975227,-3.340623,2.600360,2.632617,7.759981,-8.452186,3.852936,-9.613985,5.932259,-2.745146,-4.878265,-9.813417,-9.115586,-0.805913,-8.520582,6.716659,9.934107,-5.126948,-4.946874,8.716370,-0.121341,-1.664673,2.590288,-5.916942,-8.943670,-0.855449,-6.237686,0.280082,1.111252,1.746853,-6.427006,5.417250,-3.394822,-8.959365,2.246951,-5.018895,1.392386,4.649089,-2.023115,-6.356877,6.752674,7.934464,0.872346,-9.645000,-1.753118,7.063886,-4.517361,5.481866,-9.633979,0.412982,3.010171,-9.097799,8.404963,1.710707,3.033361,-9.135930,7.649997,5.769346,-6.416361,6.554278,2.929861,-2.808782,9.713335,-6.650204,6.033752,-9.268291,-9.864740,-0.697593,-7.822357,6.435320,8.816387,-1.395518,0.635948,1.652893,8.297142,-5.881289,8.145746,2.510848,-6.518029,9.224817,8.680686,-0.882767,-0.808875,7.548941,8.606538,-0.399398,3.045971,2.108036,-3.215034,-8.526643,7.866205,-0.947388,5.756926,0.456418,-1.687490,-7.504536,-4.179794,5.003226,2.622596,-3.608938,7.721287,4.884743,8.344926,6.453395,6.217302,-5.475572,-4.786704,-6.584811,-5.587820,-2.206180,-5.550915,-4.942788,2.851453,6.833517,1.664349,4.414150,-9.449817,7.195749,3.628124,-8.679150,-0.398289,9.705098,4.171840,2.843982,-7.215346,-0.308156,-0.070225,4.495311,-1.267809,-9.867871,-7.727145,-9.383895,-6.195092,4.388520,-7.403087,-6.411443,-8.253227,-2.121929,5.692447,5.433624,7.529697,-6.935247,-2.906188,5.621298,-8.363473,-3.387091,-7.404550,-2.380934,-2.625415,-5.222763,3.391497,-0.897818,3.491366,1.880062,-9.978218,-2.474861,9.538287,2.622731,-5.952584,-5.369715,-2.985784,-8.631660,-0.296929,1.520128,-9.800158,9.460990,-9.369867,7.378936,-3.230047,6.569296,7.018548,-9.197380,-4.146122,-7.388469,3.962831,-1.330372,-8.787124,-8.709873,6.089750,4.057717,6.236474,6.960636,-7.749832,9.330731,1.458872,1.129763,-0.701233,2.206559,5.877362,-5.004516,9.784972,-5.808531,6.046134,-5.747766,-5.169070,-9.748938,-5.295145,-6.053945,-9.341521,-9.157029,-1.383639,-7.476457,0.384677,9.633019,0.409771,2.405846,-9.111362,-3.499794,-6.018746,-9.451944,9.729624,4.865320,-8.845244,-8.412423,5.564192,4.194019,5.376880,8.411236,0.013526,7.112931,-9.331591,0.816717,6.295540,-4.408580,-8.106127,-7.176865,5.924881,-7.663935,5.755430,-4.928951,2.190437,-1.654771,6.295412,5.932246,2.428992,2.341308,-4.647813,-4.129123,0.740700,5.263670,-9.502611,2.361886,5.828039,3.243994,-5.499265,-8.354972,2.506726,-7.214656,-4.413841,-4.372711,9.486307,0.424309,-4.383955,4.369910,-4.024678,-5.786485,-4.386413,-7.088041,9.478910,8.793274,3.856037,4.923352,-6.791754,8.424514,6.316829,-7.241609,4.188693,-3.322593,-3.165081,7.752282,7.575072,5.581224,7.185738,6.910929,2.082900,1.031955,-1.544525,-2.556397,-0.008665,5.510851,6.903421,-3.215595,1.602700,-7.619075,-9.211081,-6.185390,1.447601,-3.716453,8.761964,5.530265,-1.648371,5.677229,4.515532,5.851145,9.155218,-6.642861,1.920439,-5.532366,1.709185,-7.363497,-3.656891,4.739325,-5.539003], dtype = "float32")#candidate|9754|(480,)|const|float32
call_9753 = func_6118_call(relay.reshape(const_9754.astype('float32'), [4, 8, 15]))
call_9755 = func_6118_call(relay.reshape(const_9754.astype('float32'), [4, 8, 15]))
func_9349_call = mod.get_global_var('func_9349')
func_9350_call = mutated_mod.get_global_var('func_9350')
call_9765 = relay.TupleGetItem(func_9349_call(), 2)
call_9766 = relay.TupleGetItem(func_9350_call(), 2)
output = relay.Tuple([call_9746,call_9753,const_9754,call_9765,])
output2 = relay.Tuple([call_9747,call_9755,const_9754,call_9766,])
func_9776 = relay.Function([], output)
mod['func_9776'] = func_9776
mod = relay.transform.InferType()(mod)
output = func_9776()
func_9777 = relay.Function([], output)
mutated_mod['func_9777'] = func_9777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9776_call = mod.get_global_var('func_9776')
func_9777_call = mutated_mod.get_global_var('func_9777')
call_9807 = relay.TupleGetItem(func_9776_call(), 0)
call_9808 = relay.TupleGetItem(func_9777_call(), 0)
func_8260_call = mod.get_global_var('func_8260')
func_8262_call = mutated_mod.get_global_var('func_8262')
call_9812 = relay.TupleGetItem(func_8260_call(relay.reshape(call_9807.astype('float32'), [9, 7, 6])), 0)
call_9813 = relay.TupleGetItem(func_8262_call(relay.reshape(call_9807.astype('float32'), [9, 7, 6])), 0)
func_3396_call = mod.get_global_var('func_3396')
func_3400_call = mutated_mod.get_global_var('func_3400')
var_9819 = relay.var("var_9819", dtype = "float64", shape = (720, 1))#candidate|9819|(720, 1)|var|float64
const_9820 = relay.const([3,-4,3,-6,6,3,-2,-6,10,-5,4,-3,10,5,4,-3,-7,1,-2,-6,-6,6,10,8,-3,-10,-1,-7,6,8,-7,9,10,3,9,-2,-8,5,-10,5,-8,-10,9,-9,-1,-9,9,-2,7,3,-5,-1,1,1,10,5,-3,6,-6,7,3,-6,3,3,5,8,-9,5,6,5,1,4,7,-6,-9,10,10,-6,8,-2,5,5,8,8,-3,10,3,8,7,2,-6,10,10,8,7,-1,10,8,5,4,1,1,-1,3,-2,6,1,3,-3,-9,1,-5,-7,2,1,9,-3,5,1,4,4,1,-7,7,5,2,-8,-8], dtype = "int64")#candidate|9820|(128,)|const|int64
call_9818 = relay.TupleGetItem(func_3396_call(relay.reshape(var_9819.astype('float64'), [3, 16, 15]), relay.reshape(const_9820.astype('int64'), [8, 16]), ), 6)
call_9821 = relay.TupleGetItem(func_3400_call(relay.reshape(var_9819.astype('float64'), [3, 16, 15]), relay.reshape(const_9820.astype('int64'), [8, 16]), ), 6)
func_2422_call = mod.get_global_var('func_2422')
func_2425_call = mutated_mod.get_global_var('func_2425')
const_9833 = relay.const([0.256463,-7.745291,-5.899231,-3.673610,-6.637614,-8.445227,-3.019960,1.959165,-9.856650,5.633068,4.065442,9.846647,8.914242,8.436467,3.579896,-5.114980,-4.123136,-5.208352,-6.247188,-9.204111,-3.638578,5.395154,-0.731987,0.932017,-6.074488,8.510886,8.220081,-3.660889,2.992067,9.962448,-2.342490,8.682253,-2.133232,-9.435850,-0.349460,-0.970393,3.699467,-7.018340,-7.203516,-2.150691,-2.489212,9.045011,-2.371312,-7.618010,2.729574,-6.777615,4.333299,-1.992549,3.519787,-5.187257,-4.855428,-6.812806,-6.421171,8.207823,-5.730151,9.278144,8.955560,-5.068035,9.532139,1.756314,5.493192,-8.824004,3.613774,-6.854972,9.517187,2.642609,6.062338,-2.619848,-6.970367,1.002282,6.153268,0.282909,9.238480,3.158514,-9.751340,5.031101,-0.555326,-7.458859,-6.679498,4.633060,2.648449,6.165175,-0.854651,6.788915,2.059952,-7.501421,8.587635,-7.478161,0.404035,5.876138,-6.969007,0.380443,9.674490,9.240527,9.136836,4.324865,4.349659,6.714299,-5.712366,-4.727393,1.143735,0.800298,-0.361431,8.731170,8.644846,1.512392,7.933678,-3.600670,-3.601798,5.151227,-4.942499,-0.789253,4.766258,-4.568155,-6.123096,-5.457767,5.647765,1.337977,6.250093,4.657632,5.220741,-1.156155,-3.271446,8.002891,-7.233495,-4.141227,-3.288266,-9.345555,-0.856673,8.260025,9.222244,7.183181,8.568984,-8.123792,9.849661,8.303494,-9.320627,-9.057877,4.143312,0.307573,-2.729513,-2.606683,6.701845,-3.280814,6.637318,-0.292239,6.811374,8.168530,-7.993009,5.146206,-9.682112,6.588446,9.156395,1.158872,1.446485,-7.049197,-7.332919,-6.436517,-4.005844,4.633486,1.470519,-3.218046,7.696980,3.796551,-3.692857,-6.006680,-2.054012,7.343185,9.776462,-0.547917,-8.476370,-4.706076,9.217052,-0.751643,8.117786,-3.083961,4.972436,-3.902954,-0.383135,2.224116,-2.333574,7.845633,6.818971,-1.783986,9.454050,4.576776,-8.084513,-6.395643,8.064473,3.518470,1.198611,9.840845,-0.398740,9.362083,9.145388,6.137307,-8.310905,-2.002252,-8.569328,-0.495338,0.294942,6.710527,2.332892,-3.667724,-4.849202,-7.996502,8.822057,-8.025938,0.883728,-5.333858,-9.098989,-9.090291,0.494416,-7.422867,-2.647326,9.337600,7.991243,9.262701,9.458943,1.100264,0.622964,6.186385,9.421665,-7.121099,1.088079,1.549741,1.739366,8.242737,0.977489,-8.466493,-1.873054,7.044471,-5.547266,9.336981,-1.724074,4.626084,-6.199587,-5.342777,-5.433871,-4.156703,-6.054831,-4.723847,4.460016,-9.556573,3.723473,-6.191580,-5.251778,1.392793,-7.287370,-3.131246,3.517724,-0.181925,-5.088102,4.066917,-6.947192,8.215193,-6.452481,-9.438688,2.800286,-1.439064,5.921834,-4.687063,-0.447995,-1.233111,-1.695715,-5.889555,-1.201973,0.638929,1.735028,9.027266,-1.256675,-4.796820,-0.830017,0.982849,5.847397,0.798700,-0.770157,2.746947,4.808440,-7.912012,-9.712982,-5.278363,4.996948,-7.479892,-5.186355,-6.091213,-0.763299,7.679838,9.539478,-9.556980,-3.014474,6.752566,9.586321,-9.473988,-3.521026,0.717373,7.609752,3.158005,5.281397,1.327959,-8.792823,2.280557,9.535343,2.663884,7.499823,6.965989,6.801210,-9.714395,6.700358,-2.661806,9.366729,4.832384,8.258017,-1.851046,-8.983914,-3.312098,4.468489,9.678766,6.905768,-8.881614,-5.266302,-9.822290,-8.942137,-2.141508,9.733524,-8.905698,-5.759085,5.753198,-1.140859,0.857799,-3.416887,9.398454,0.006827,-9.493837,-2.056001,3.356952,-3.139744,-0.056911,-1.944131,4.800859,9.644712,6.175553,0.195798,6.200670,-2.896122,-0.252396,9.916190,-0.279700,-6.829897,7.615291,2.526515,2.857257,-2.170062,3.745641,-9.058603,9.580151,-2.248555,-7.915672,2.966758,1.378925,-3.101303,-4.034780,-5.586232,-9.586831,3.466098,6.460375,-1.002820,3.171852,-4.871823,5.333187,9.825816,4.433422,2.996505,4.640139,1.772312,-1.123444,-3.452391,7.926527,-5.203019,5.760665,0.004020,-1.573240,4.133513,4.079357,-9.283080,-5.850195,6.028172,0.524792,9.473567,8.765418,-5.653719,-1.874918,3.177601,3.140492,0.954074,9.285235,5.009407,-3.071538,3.312408,-5.400848,5.676979,0.589395,-8.214960,7.680713,5.040455,0.500958,5.592165,-6.930433,1.698904,-2.790160,-8.237816,-3.010196,9.864694,-3.615303,-2.240072,6.842270,-4.039642,-4.560610,2.399245,-7.578718,-4.953905,-7.122173,-7.630869,-1.027448,-0.022040,-6.698380,8.672272,-7.680612,-7.752444,1.766696,-0.691017,-2.379987,-7.960182,4.268345,-5.961614,-5.415263,4.873884,-6.571869,-7.267005,-2.616341,7.061593,9.210130,2.874014,-8.243828,2.675571,-3.401137,-7.048345,-4.808194,5.379543,-5.197872,1.181834,-1.757914,-8.384085,-8.334560,-9.148475,7.821025,-2.136078,-4.338448,5.248195,3.794070,-7.580758,-8.091387,-5.557246,5.614455,-1.937711,1.792735,4.969349,4.521759,8.221884,-4.834306,-6.496301,6.945414,-6.963414,-2.212667,-9.887460,-9.174500,7.364442,0.544723,9.195007,1.511074,1.653458,-5.861810,-1.258302,-1.944390,0.551687,1.146358,-7.363766,-4.119212,-6.767260,-6.917202,-3.309602,-4.161071,7.157700,2.946395,-9.673335,2.438497,-0.428647,-6.884468,2.507624,-4.657834,7.319389,-4.848175,-3.558931,4.125933,9.712710,-5.885161,-6.424113,5.095796,-6.166271,0.362024,6.818329,-6.381831,-4.136851,-2.956550,6.513339,-8.196029,0.956093,6.457942,-7.965814,-4.506331,-7.345644,9.569299,9.520996,1.713789,-2.774220,7.947634,3.777774,3.099689,-7.049509,8.996270,-8.801530,4.697181,-3.833919,3.590493,3.904483,-4.877138,-7.451066,-9.692229,-8.849384,-5.461861,-5.494835,-7.458368,9.084466,3.814167,0.807965,-1.877953,7.828272,2.320508,-3.755595,-7.834499,7.910248,4.642506,-3.960311,6.127855,5.233592,4.540912,2.692770,3.272312,0.791319,1.639486,1.637587,-2.771207,7.545398,-3.252454,9.238462,4.749076,1.543437,-9.030523,-4.661183,-9.640506,6.038802,-2.855851,5.648841,-0.836871,-4.808233,-7.553935,8.122387,-7.047321,-2.043979,-7.851309,3.679071,-1.450631,-6.155151,1.220532,5.101139,3.117188,3.893986,7.289931,8.959171,-4.500570,3.666487,-4.396791,8.674093,6.468930,8.287529,9.074978,7.969337,-1.751784,2.740423,9.085555,7.584269,8.869178,-8.860957,-6.374235,-5.074210,2.671972,1.913148,-5.140350,8.539563,-3.461854,4.867916,0.687110,-8.582015,0.691774,8.030622,-9.269019,6.588163,-0.921219,-4.557659,8.788410,0.976126,3.200033,-2.880839,1.453403], dtype = "float64")#candidate|9833|(624,)|const|float64
const_9834 = relay.const([-8.426946,-2.124714,-5.467905,-5.591589,-5.204222,-7.316001,-7.338982,4.890660,6.139928,-0.185345,3.920178,7.572698,8.554818,1.424682], dtype = "float32")#candidate|9834|(14,)|const|float32
call_9832 = relay.TupleGetItem(func_2422_call(relay.reshape(const_9833.astype('float64'), [624,]), relay.reshape(const_9834.astype('float32'), [14,]), ), 5)
call_9835 = relay.TupleGetItem(func_2425_call(relay.reshape(const_9833.astype('float64'), [624,]), relay.reshape(const_9834.astype('float32'), [14,]), ), 5)
func_9062_call = mod.get_global_var('func_9062')
func_9064_call = mutated_mod.get_global_var('func_9064')
call_9836 = relay.TupleGetItem(func_9062_call(), 4)
call_9837 = relay.TupleGetItem(func_9064_call(), 4)
output = relay.Tuple([call_9807,call_9812,call_9818,var_9819,const_9820,call_9832,const_9833,const_9834,call_9836,])
output2 = relay.Tuple([call_9808,call_9813,call_9821,var_9819,const_9820,call_9835,const_9833,const_9834,call_9837,])
func_9842 = relay.Function([var_9819,], output)
mod['func_9842'] = func_9842
mod = relay.transform.InferType()(mod)
var_9843 = relay.var("var_9843", dtype = "float64", shape = (720, 1))#candidate|9843|(720, 1)|var|float64
output = func_9842(var_9843)
func_9844 = relay.Function([var_9843], output)
mutated_mod['func_9844'] = func_9844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9484_call = mod.get_global_var('func_9484')
func_9485_call = mutated_mod.get_global_var('func_9485')
call_9846 = relay.TupleGetItem(func_9484_call(), 0)
call_9847 = relay.TupleGetItem(func_9485_call(), 0)
func_8481_call = mod.get_global_var('func_8481')
func_8484_call = mutated_mod.get_global_var('func_8484')
const_9859 = relay.const([6.557710,1.837215,9.320467,4.759792,3.837860,2.015710,0.034471,-9.411028,5.655299,7.694167,5.238479,-1.865963,8.845755,0.010786,-0.853021,-8.288963,-7.326202,-7.557958,-7.798086,8.278674,4.508407,5.034844,1.957016,-9.823028,-0.062421,9.367706,-5.463272,3.381805,4.983243,-9.634812,8.895138,2.774142,-0.107076,-0.447812,5.074734,-8.704349,-5.354690,8.761133,2.522475,-6.234901,-2.861984,-9.381744,6.243810,-7.324318,-9.680404,-0.231731,-4.980982,1.381900,-4.224207,1.016246,4.967187,-5.201921,0.682849,-7.359543,-1.785957,-3.474374,-1.721240,3.839930,6.362534,-1.997510,-9.094533,8.170741,5.140464,3.341004,-2.534817,1.853031,-1.804728,9.864672,-2.369273,5.009564,1.786353,6.052792,-9.473504,3.441906,-3.429215,0.165117,1.603734,0.529264,4.573084,-7.886263,-3.911494,-5.554277,6.964438,-2.106836,8.290129,-2.302293,-8.247584,-9.753587,-9.826369,-8.055120,-9.207625,7.365017,-6.666599,-5.884692,1.147695,-9.584761,-7.319437,4.620550,-3.797368,8.394628,1.095552,-8.480053,6.085368,-4.748501,5.984847,2.580918,-8.581197,2.822074,5.812846,-8.321824,-8.705881,-5.090625,6.550158,-6.062200,-9.749329,0.804193,-7.222094,2.160104,6.417902,5.559170,-4.315024,-2.729761,-0.577035,9.440675,8.683450,-8.528635,-6.880112,-3.257021,-5.629413,-8.833691,3.458590,-4.934953,0.498651,7.174228,7.310482,0.347167,5.701789,-1.904390,9.448445,-1.219048,-2.273698,-7.970865,9.906026,-0.030168,-6.411970,-1.567706,5.336616,6.202054,-3.470903,7.824531,6.112540,0.576113,-7.637811,-1.176927,-6.546608,-4.180426,-3.117751,9.454101,3.154069,4.322906,-0.467223,5.169892,6.538645,0.707679,-2.638577,3.630191,7.498938,-0.572625,2.428507,-2.101317,3.637753,-1.330279,5.938286,-5.334867,7.402479,-9.790628,7.197432,4.620320,-7.331190,7.106117,0.910408,7.695290,9.109909,-1.335075,-1.968640,-0.691906,5.552827,9.048238,1.818524,-6.787851,-1.143201,-0.997605,-2.800935,-3.470322,-2.998151,1.691301,-3.988623,7.576926,1.756891,-7.881241,-3.603213,5.511951,4.711055,-1.981192,-6.643904,-4.344693,-2.964697,7.683252,-6.621319,2.791558,9.002844,8.136024,1.938793,7.904959,-1.112402,3.930941,2.035949,0.098923,5.158756,5.353446,-6.718250,-3.199126,-5.048342,1.428148,8.263963,-2.500037,-1.739039,2.138480,-1.744463,-5.240711,-7.295625,3.459511,-6.345644,5.555022,-8.184772,-2.334569,-1.994626,0.314647,-3.465849,9.818755,-6.114488,-4.477351,8.419631,-6.127711,-5.551110,8.514682,-8.393863,-7.710362,0.670616,5.792861,-0.280689,-7.140061,-8.062398,-6.414824,-2.859786,9.062619,2.068129,3.897504,3.907072,-4.259563,-7.859451,-7.742911,-6.809726,-2.337551,-1.608085,3.626981,7.275009,6.307980,-7.543765,-7.383160,-7.544200,7.481609,6.215897,-6.132080,-6.702626,-0.082436,-5.157895,-1.452831,-7.682391,-0.966585,-5.484054,8.790313,8.513650,2.233642,-8.212133,6.080609,3.445693,-3.886636,7.577619,0.307437,0.885114,0.549516,9.998953,-9.628599,-3.129394,-2.369227,2.175274,-0.842454,6.938299,-6.697406,2.213198,-0.196973,-4.425857,7.989221,8.213626,5.493590,-1.350383,0.552968,-6.645681,7.382414,-8.225190,8.144248,-0.853687,5.688832,-6.478270,7.349525,5.077634,-6.206435,2.203567,6.191276,3.340318,1.151679,5.645654,1.953927,6.050219,-1.507494,-2.401039,8.542510,9.046022,-4.329412,-7.831673,0.034984,1.757186,9.642964,4.160404,-3.176229,0.544039,5.273557,-8.905832,9.362378,9.918858,8.295677,6.580695,-6.949060,9.509551,-8.661894,9.192681,5.954733,-6.961688,5.331355,-2.726258,-3.335322,2.569377,-6.495580,-7.140388,1.074715,-5.599419,6.318371,8.861233,-3.099419,6.651879,-4.631935,8.235307,7.907636,-8.580678,9.570790,-0.364806,7.018040,6.166665,1.058958,2.046609,-5.583234,-0.839518,7.466816,7.940726,-1.631325,3.669742,8.702885,7.460621,-5.701380,6.351271,-0.304079,4.765242,-9.651786,5.853000,-5.358056,-6.606177,-2.097565,-3.677297,9.972150,-9.110451,-2.171155,-8.311047,-1.055148,2.055123,-1.450070,-7.093981,-7.124044,-9.720443,0.948133,4.850097,-3.473556,-1.125703,-7.082569,-4.990245,-7.454666,3.096335,-7.750912,3.370051,1.313859,6.096166,2.825921,-5.011430,4.999558,-9.930870,2.433617,-5.535107,-3.179639,-2.674690,-6.860164,-5.460344,3.627418,4.166902,7.641978,-8.094334,5.996104,-4.258306,-2.629792,4.412262,6.293723,-5.215822,2.825804,-2.626275,2.399369,-5.633805,-5.417352,-6.143703,-6.252452,6.529860,-4.711084,8.085957,-5.955634,8.109407,-1.814232,-0.198791,-9.983038,-7.610403,-3.485614,1.505191,-9.018590,1.729219,-8.071232,-0.101008,1.835867,7.522526,-6.142049,-8.886169,-3.296327,3.691270,-3.188118,4.251929,-0.112213,-2.066118,-6.432243,-7.909273,7.841015,9.993521,7.222452,-4.264057,-8.174145,5.912141,-9.196932,9.867959,2.532113,-3.842438,-7.328424,-3.376871,1.606084,0.334843,4.930730,-9.022633,1.186516,-6.856719,-7.784720,-5.077172,-4.653268,6.821840,5.166714,-9.970396,6.166755,-7.075093,-3.194209,-7.167557,6.574986,0.670190,0.346401,7.813062,-1.082695,5.839391,-9.771833,7.345022,0.038261,-2.890609,3.020001,9.148179,8.706991,-1.375860,4.995274,1.406440,3.545074,3.392898,9.075499,6.217098,-1.201280,-3.294727,-9.950207,-2.656133,-4.490958,-4.119649,1.970672,-1.382054,1.566873,-1.433801,1.685129,7.551518,-5.744755,3.927490,8.331937,6.687480,1.024372,5.478980,7.066126,-6.453083,-2.367707,6.407396,-7.552844,-2.362171,9.937842,-0.733022,-9.817111,6.777499,-7.398745,-2.203788,0.756997,-5.136741,0.976401,2.192950,5.849297,-8.377844,-0.369074,9.615498,1.513529,9.298287,-0.892783,8.060406,6.948479,9.527887,3.159096,-9.783540,-4.780870,-8.298488,-7.173642,-6.026883,4.758774,8.511040,8.392054,-9.043460,-7.442183,8.397924,-8.413843,1.518057,8.413766,3.223511,1.543035,1.815717,-0.339858,6.282076,5.733211,-1.387023,6.915416,5.983317,-6.120797,7.841660,8.244321,3.942077,-2.673421,1.481660,-7.658243,-8.941593,-0.743876,1.857092,2.987207,8.592916,-3.788084,8.455091,0.101742,-7.508082,8.333488,-9.757867,-2.401109,-1.995119,6.827073,-8.675279,-7.442190,7.859908,4.478019,-4.982522,0.727191,9.130014,0.873740,5.106673,7.782310,1.314874,-6.045398,5.295237,6.443984,7.755609,-0.797236,-9.265026,-6.199053,8.491531,-7.886298,2.141508,-0.259356,-1.400169,4.926397,-1.605439,6.341061,1.162796,-5.854082,5.522263,-4.298344,-5.647037,-0.900407,-3.757345,-1.789620,-4.315914,1.757746,-8.004117,4.319535,5.848060,4.561846,5.327850,0.241893,-9.205144,-3.603511,-5.064771,-0.773600,7.780232,5.712748,5.446167,8.927396,0.139897,4.311934,-0.151500,-2.694444,-2.655218,-5.445959,-8.165715,-9.773283,8.574701,-8.397513,-2.994077,-2.315308,-6.872535,0.412418,1.466987,6.011529,2.641773,-3.687682,9.901972,2.247861,-3.590374,-8.744090,-3.249222,7.520237,8.185181,7.152698,-6.982750,6.242530,4.771655,8.903244,0.323112,9.066562,8.783722,0.756189,-9.653056,-4.538422,-6.081789,-9.468095,-3.934700,-8.243311,1.518562,0.010068,4.874128,-9.633929,9.323368,4.063286,7.396768,2.797397,-3.207975,6.812242,0.923003,-7.522695,-1.846035,-5.985653,-2.603389,-8.376237,-4.527117,-9.956783,-5.279827,7.552690,-5.623916,1.544698,7.315407,-8.227634,6.167472,3.188068,-0.104152,-5.403315], dtype = "float64")#candidate|9859|(720,)|const|float64
call_9858 = relay.TupleGetItem(func_8481_call(relay.reshape(const_9859.astype('float64'), [720,])), 3)
call_9860 = relay.TupleGetItem(func_8484_call(relay.reshape(const_9859.astype('float64'), [720,])), 3)
output = relay.Tuple([call_9846,call_9858,const_9859,])
output2 = relay.Tuple([call_9847,call_9860,const_9859,])
func_9868 = relay.Function([], output)
mod['func_9868'] = func_9868
mod = relay.transform.InferType()(mod)
output = func_9868()
func_9869 = relay.Function([], output)
mutated_mod['func_9869'] = func_9869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9062_call = mod.get_global_var('func_9062')
func_9064_call = mutated_mod.get_global_var('func_9064')
call_9875 = relay.TupleGetItem(func_9062_call(), 2)
call_9876 = relay.TupleGetItem(func_9064_call(), 2)
func_6118_call = mod.get_global_var('func_6118')
func_6121_call = mutated_mod.get_global_var('func_6121')
const_9878 = relay.const([2.831418,0.108924,-0.818504,-9.160204,-2.662728,-4.085242,-7.792828,-3.153810,3.318970,-3.830963,5.062389,0.821627,-3.168168,3.038215,-6.005397,5.318332,6.705142,8.357676,5.516212,-2.184361,3.132427,-8.038253,-2.450405,4.444715,3.271593,-7.963566,-5.174312,-9.894352,3.350452,-7.621276,-9.191323,4.822465,-8.420036,6.072564,3.008332,-3.379373,7.458091,-5.849070,8.224994,9.847270,-3.219340,6.375617,7.334919,1.135278,6.791288,-5.100344,1.681698,0.087599,-2.647379,8.019545,-4.225115,8.120107,2.026471,-5.754888,3.726647,4.438910,9.719817,-2.237532,-5.006037,-9.518585,1.373928,-2.978340,-4.065071,3.659932,-8.775851,-0.988950,-5.868803,-5.616490,-7.633926,-5.166785,-7.550684,8.980637,-8.632462,4.637789,3.430478,-4.994289,-1.111169,5.121939,-4.541242,-1.386629,0.934203,-5.443404,-5.327799,2.792131,9.423810,-5.750084,-0.756178,5.567031,8.292986,8.376958,-3.273757,2.920586,-8.858157,-4.399112,4.742584,-0.204488,6.059084,-5.362535,4.638403,-9.858218,9.136696,6.381664,-5.108112,-0.155152,2.757672,-1.761489,7.494691,-3.731077,-9.417312,5.856745,0.589065,9.452678,-7.447855,-5.054081,5.638351,-9.045030,9.212733,-5.541101,-0.855289,2.532137,3.379468,-8.761063,-8.229246,-8.669317,9.705071,-8.871997,8.662514,0.018815,-7.165109,-6.671580,7.744658,-0.342455,-7.353631,-5.443180,-2.178122,-4.959201,-2.751331,-6.858106,6.947503,5.270613,-4.759135,-0.164653,7.584094,4.574167,7.546086,-7.667216,-4.148850,-2.306122,2.807945,-9.903612,-9.636725,9.390376,1.449608,2.914053,2.855620,8.095696,8.456220,9.500331,1.263159,-4.306895,-7.239510,4.034562,6.051334,0.234216,7.670794,-5.747354,-5.831186,-7.846742,-9.689998,0.947655,-8.578077,2.727965,-2.553314,9.673431,-8.763836,-9.359520,-9.582164,6.930637,5.435216,-8.858979,-6.606162,0.747984,0.894647,-6.780377,6.752945,8.203912,-3.333343,8.637439,7.942247,7.365119,-7.914064,4.746638,6.823432,6.670756,0.101132,8.119447,-8.672226,9.234522,-8.007650,1.249777,2.399531,-5.741244,-2.037025,-1.635360,-2.527042,6.532885,7.828778,6.197031,7.158796,-7.481727,-8.635680,7.559621,-1.121340,-2.500729,-0.432987,-9.112621,-2.041548,-9.301018,0.897097,0.614989,-9.609838,-3.393913,0.517478,-0.614856,-5.385981,7.404841,0.182608,-1.014283,1.069644,-2.362444,-4.291595,0.087807,8.526780,9.792054,-7.255617,-6.015001,3.368247,9.271022,-3.842038,-6.433227,-1.925589,-6.934011,-7.105119,4.972269,7.982413,8.698584,-3.555320,5.156382,-0.208743,-2.705514,0.636573,4.969351,-1.939524,8.293809,6.995149,9.177197,9.865122,9.259982,-9.684628,-2.224852,-1.688915,-4.000182,-3.248640,5.377230,-3.748400,-6.009688,-4.304843,2.778925,-2.955083,-1.131127,-9.876845,1.546596,5.055891,5.437696,5.811382,4.607571,7.939896,-0.333920,5.959207,1.518823,-7.332831,5.296864,2.889708,4.353649,7.879763,0.452751,3.590690,-4.789365,2.664642,8.105538,9.175234,9.491608,-3.334726,-3.598425,5.482845,7.002325,9.244840,-7.186793,2.361215,-3.967696,2.934043,-0.420763,-0.934370,1.847192,-7.646585,-2.163568,-4.927648,8.659893,-6.931274,-9.271279,5.541097,1.437372,3.623539,8.415760,9.841380,9.758102,-3.792975,3.974614,-9.720094,-1.900096,0.988581,-8.991134,-7.363747,-6.592738,-5.025617,-4.087532,1.119574,-0.601993,-3.317004,0.542390,-2.616645,-8.627151,9.897016,0.484082,8.859163,-3.359246,7.225192,-5.214166,-6.515281,-2.151020,1.250498,-8.604162,-5.908244,6.233720,5.573228,-9.138428,-6.137064,-4.157348,-8.993120,5.150427,5.007433,3.157400,2.311051,5.686935,-8.493294,-9.019334,-2.933011,-0.113116,6.621677,9.564317,3.852454,-9.156860,1.800131,2.292267,9.785921,0.489773,-5.800408,8.091187,-0.572206,-5.611883,-9.389694,-0.282425,7.786158,1.026851,6.792753,9.277560,-9.837646,-7.978342,-8.867733,0.406706,-7.026789,5.049214,2.675086,-3.512472,0.508900,4.032657,8.559097,-1.375360,-6.279744,-5.557334,7.079958,-6.692345,9.852386,4.992275,-1.214433,4.810836,1.919624,-3.181699,2.945307,-7.098698,9.497283,-0.373624,2.853146,2.620967,-2.536173,8.295846,-2.771568,4.846526,-7.971536,9.460007,-3.029400,-6.038233,8.654175,-3.586214,6.460372,7.921358,-4.490843,-8.573556,8.516558,-4.910291,5.904692,9.766445,6.689908,3.569069,7.451510,4.791154,-6.445753,3.690268,-4.707739,-9.360971,-3.115322,-2.270001,-6.271425,-0.321663,-0.922155,5.708877,2.963793,3.189959,-0.979110,-1.630696,-7.790739,3.986595,1.254239,-9.279068,-2.106656,-2.802322,4.931653,-6.272307,1.259409,6.273246,1.023196,1.787505,5.182063,8.494819,4.643425,8.610310,6.939322,-1.006548,9.467528,-9.770052,-6.444088,-2.547966,5.351332,7.211550,8.862126,9.145148,9.727368,6.710725,2.072649,-1.216477,8.817842,-6.080959,-6.429266,5.085524,-5.309687,-4.235832,-5.845499,-8.304374,7.181822,-5.770879], dtype = "float32")#candidate|9878|(480,)|const|float32
call_9877 = func_6118_call(relay.reshape(const_9878.astype('float32'), [4, 8, 15]))
call_9879 = func_6118_call(relay.reshape(const_9878.astype('float32'), [4, 8, 15]))
output = relay.Tuple([call_9875,call_9877,const_9878,])
output2 = relay.Tuple([call_9876,call_9879,const_9878,])
func_9895 = relay.Function([], output)
mod['func_9895'] = func_9895
mod = relay.transform.InferType()(mod)
mutated_mod['func_9895'] = func_9895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9895_call = mutated_mod.get_global_var('func_9895')
call_9896 = func_9895_call()
output = call_9896
func_9897 = relay.Function([], output)
mutated_mod['func_9897'] = func_9897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9895_call = mod.get_global_var('func_9895')
func_9897_call = mutated_mod.get_global_var('func_9897')
call_9904 = relay.TupleGetItem(func_9895_call(), 2)
call_9905 = relay.TupleGetItem(func_9897_call(), 2)
output = relay.Tuple([call_9904,])
output2 = relay.Tuple([call_9905,])
func_9908 = relay.Function([], output)
mod['func_9908'] = func_9908
mod = relay.transform.InferType()(mod)
output = func_9908()
func_9909 = relay.Function([], output)
mutated_mod['func_9909'] = func_9909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9062_call = mod.get_global_var('func_9062')
func_9064_call = mutated_mod.get_global_var('func_9064')
call_9969 = relay.TupleGetItem(func_9062_call(), 1)
call_9970 = relay.TupleGetItem(func_9064_call(), 1)
output = call_9969
output2 = call_9970
func_9981 = relay.Function([], output)
mod['func_9981'] = func_9981
mod = relay.transform.InferType()(mod)
mutated_mod['func_9981'] = func_9981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9981_call = mutated_mod.get_global_var('func_9981')
call_9982 = func_9981_call()
output = call_9982
func_9983 = relay.Function([], output)
mutated_mod['func_9983'] = func_9983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9349_call = mod.get_global_var('func_9349')
func_9350_call = mutated_mod.get_global_var('func_9350')
call_10022 = relay.TupleGetItem(func_9349_call(), 1)
call_10023 = relay.TupleGetItem(func_9350_call(), 1)
output = call_10022
output2 = call_10023
func_10026 = relay.Function([], output)
mod['func_10026'] = func_10026
mod = relay.transform.InferType()(mod)
output = func_10026()
func_10027 = relay.Function([], output)
mutated_mod['func_10027'] = func_10027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9868_call = mod.get_global_var('func_9868')
func_9869_call = mutated_mod.get_global_var('func_9869')
call_10028 = relay.TupleGetItem(func_9868_call(), 2)
call_10029 = relay.TupleGetItem(func_9869_call(), 2)
output = call_10028
output2 = call_10029
func_10041 = relay.Function([], output)
mod['func_10041'] = func_10041
mod = relay.transform.InferType()(mod)
output = func_10041()
func_10042 = relay.Function([], output)
mutated_mod['func_10042'] = func_10042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9383_call = mod.get_global_var('func_9383')
func_9385_call = mutated_mod.get_global_var('func_9385')
call_10046 = relay.TupleGetItem(func_9383_call(), 0)
call_10047 = relay.TupleGetItem(func_9385_call(), 0)
output = relay.Tuple([call_10046,])
output2 = relay.Tuple([call_10047,])
func_10058 = relay.Function([], output)
mod['func_10058'] = func_10058
mod = relay.transform.InferType()(mod)
mutated_mod['func_10058'] = func_10058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10058_call = mutated_mod.get_global_var('func_10058')
call_10059 = func_10058_call()
output = call_10059
func_10060 = relay.Function([], output)
mutated_mod['func_10060'] = func_10060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9383_call = mod.get_global_var('func_9383')
func_9385_call = mutated_mod.get_global_var('func_9385')
call_10113 = relay.TupleGetItem(func_9383_call(), 0)
call_10114 = relay.TupleGetItem(func_9385_call(), 0)
func_9868_call = mod.get_global_var('func_9868')
func_9869_call = mutated_mod.get_global_var('func_9869')
call_10115 = relay.TupleGetItem(func_9868_call(), 1)
call_10116 = relay.TupleGetItem(func_9869_call(), 1)
output = relay.Tuple([call_10113,call_10115,])
output2 = relay.Tuple([call_10114,call_10116,])
func_10124 = relay.Function([], output)
mod['func_10124'] = func_10124
mod = relay.transform.InferType()(mod)
mutated_mod['func_10124'] = func_10124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10124_call = mutated_mod.get_global_var('func_10124')
call_10125 = func_10124_call()
output = call_10125
func_10126 = relay.Function([], output)
mutated_mod['func_10126'] = func_10126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9383_call = mod.get_global_var('func_9383')
func_9385_call = mutated_mod.get_global_var('func_9385')
call_10209 = relay.TupleGetItem(func_9383_call(), 0)
call_10210 = relay.TupleGetItem(func_9385_call(), 0)
output = call_10209
output2 = call_10210
func_10211 = relay.Function([], output)
mod['func_10211'] = func_10211
mod = relay.transform.InferType()(mod)
output = func_10211()
func_10212 = relay.Function([], output)
mutated_mod['func_10212'] = func_10212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10026_call = mod.get_global_var('func_10026')
func_10027_call = mutated_mod.get_global_var('func_10027')
call_10213 = func_10026_call()
call_10214 = func_10026_call()
func_10124_call = mod.get_global_var('func_10124')
func_10126_call = mutated_mod.get_global_var('func_10126')
call_10215 = relay.TupleGetItem(func_10124_call(), 0)
call_10216 = relay.TupleGetItem(func_10126_call(), 0)
func_9200_call = mod.get_global_var('func_9200')
func_9202_call = mutated_mod.get_global_var('func_9202')
var_10224 = relay.var("var_10224", dtype = "float64", shape = (2, 360))#candidate|10224|(2, 360)|var|float64
call_10223 = relay.TupleGetItem(func_9200_call(relay.reshape(var_10224.astype('float64'), [720,])), 2)
call_10225 = relay.TupleGetItem(func_9202_call(relay.reshape(var_10224.astype('float64'), [720,])), 2)
output = relay.Tuple([call_10213,call_10215,call_10223,var_10224,])
output2 = relay.Tuple([call_10214,call_10216,call_10225,var_10224,])
func_10226 = relay.Function([var_10224,], output)
mod['func_10226'] = func_10226
mod = relay.transform.InferType()(mod)
mutated_mod['func_10226'] = func_10226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10227 = relay.var("var_10227", dtype = "float64", shape = (2, 360))#candidate|10227|(2, 360)|var|float64
func_10226_call = mutated_mod.get_global_var('func_10226')
call_10228 = func_10226_call(var_10227)
output = call_10228
func_10229 = relay.Function([var_10227], output)
mutated_mod['func_10229'] = func_10229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10211_call = mod.get_global_var('func_10211')
func_10212_call = mutated_mod.get_global_var('func_10212')
call_10231 = func_10211_call()
call_10232 = func_10211_call()
output = call_10231
output2 = call_10232
func_10242 = relay.Function([], output)
mod['func_10242'] = func_10242
mod = relay.transform.InferType()(mod)
mutated_mod['func_10242'] = func_10242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10242_call = mutated_mod.get_global_var('func_10242')
call_10243 = func_10242_call()
output = call_10243
func_10244 = relay.Function([], output)
mutated_mod['func_10244'] = func_10244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9383_call = mod.get_global_var('func_9383')
func_9385_call = mutated_mod.get_global_var('func_9385')
call_10276 = relay.TupleGetItem(func_9383_call(), 0)
call_10277 = relay.TupleGetItem(func_9385_call(), 0)
output = call_10276
output2 = call_10277
func_10278 = relay.Function([], output)
mod['func_10278'] = func_10278
mod = relay.transform.InferType()(mod)
output = func_10278()
func_10279 = relay.Function([], output)
mutated_mod['func_10279'] = func_10279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10041_call = mod.get_global_var('func_10041')
func_10042_call = mutated_mod.get_global_var('func_10042')
call_10308 = func_10041_call()
call_10309 = func_10041_call()
func_10058_call = mod.get_global_var('func_10058')
func_10060_call = mutated_mod.get_global_var('func_10060')
call_10356 = relay.TupleGetItem(func_10058_call(), 0)
call_10357 = relay.TupleGetItem(func_10060_call(), 0)
uop_10370 = relay.rsqrt(call_10356.astype('float64')) # shape=(378,)
uop_10372 = relay.rsqrt(call_10357.astype('float64')) # shape=(378,)
output = relay.Tuple([call_10308,uop_10370,])
output2 = relay.Tuple([call_10309,uop_10372,])
func_10381 = relay.Function([], output)
mod['func_10381'] = func_10381
mod = relay.transform.InferType()(mod)
mutated_mod['func_10381'] = func_10381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10381_call = mutated_mod.get_global_var('func_10381')
call_10382 = func_10381_call()
output = call_10382
func_10383 = relay.Function([], output)
mutated_mod['func_10383'] = func_10383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9383_call = mod.get_global_var('func_9383')
func_9385_call = mutated_mod.get_global_var('func_9385')
call_10429 = relay.TupleGetItem(func_9383_call(), 0)
call_10430 = relay.TupleGetItem(func_9385_call(), 0)
func_10211_call = mod.get_global_var('func_10211')
func_10212_call = mutated_mod.get_global_var('func_10212')
call_10438 = func_10211_call()
call_10439 = func_10211_call()
output = relay.Tuple([call_10429,call_10438,])
output2 = relay.Tuple([call_10430,call_10439,])
func_10443 = relay.Function([], output)
mod['func_10443'] = func_10443
mod = relay.transform.InferType()(mod)
mutated_mod['func_10443'] = func_10443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10443_call = mutated_mod.get_global_var('func_10443')
call_10444 = func_10443_call()
output = call_10444
func_10445 = relay.Function([], output)
mutated_mod['func_10445'] = func_10445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9349_call = mod.get_global_var('func_9349')
func_9350_call = mutated_mod.get_global_var('func_9350')
call_10446 = relay.TupleGetItem(func_9349_call(), 1)
call_10447 = relay.TupleGetItem(func_9350_call(), 1)
func_8886_call = mod.get_global_var('func_8886')
func_8892_call = mutated_mod.get_global_var('func_8892')
var_10455 = relay.var("var_10455", dtype = "float64", shape = (192,))#candidate|10455|(192,)|var|float64
const_10456 = relay.const([4,-5,-1,-9,3,-8,7,7,5,4,-8,-2,-5,-2,4,5,1,8,-1,4,9,4,-3,1,-2,4,7,-8,-6,3,-8,-5,-10,-10,-2,-8,8,8,-2,-9,-6,-4,-10,5,-5,-3,1,-1,-3,-4,7,7,-4,7,3,-10,-9,-4,-7,5,1,6,-8,-3,-7,-7,8,10,-8,-8,2,-2,2,-2,-6,2,4,7,4,2,-6,-4,10,6,10,9,-2,3,-6,5,-1,-7,-5,-5,-6,-10,4,7,-9,-2,-1,-1,3,-8,-10,-8,10,-3,2,5,5,-10,-3,-4,4,-3,10,-7,-9,-9,6,7,-5,-2,-10,-4,-4,5,3,-2,-7,9,1,10,1,-1,7,2,10,-10,2,-5,-10,8,2,-10,6,-6,-7,9,8,-2,1,8,1,2,-3,2,9,-7,-9,-10,6,4,-4,1,4,-6,1,-6,1,-6,9,8,-7,9,-1,10,6,-3,6,4,-7,-5,-4,9,-1,2,2,-7,2,-6,6,-10,-2,5,-7,10,-9,2,-9,1,-7,-9,-2,9,-4,-6,-3,-5,1,4,8,2,10,1,7,9,-6,5,7,-3,-9,3,7,-6,7,6,4,1,2,-1,-7,-2,-9,10,-1,8,3,-3,-1,-1,-8,2,-7,-6,-8,-9,-9,5,-8,-5,9,10,-9,2,-1,-6,10,-3,-4,7,7,-4,-6,6,5,6,9,6,8,-5,1,-10,-1,9,3,5,1,-10], dtype = "int32")#candidate|10456|(280,)|const|int32
var_10457 = relay.var("var_10457", dtype = "int64", shape = (64, 2))#candidate|10457|(64, 2)|var|int64
const_10458 = relay.const([[9.638059,-2.603212,6.430398,-3.706844,-4.647440,-0.330329,2.199907,-5.201007,-8.176663,1.279346,-3.516308,0.585233,-0.793683,6.150528,-5.083206,-6.602824,3.477059,-0.650290,-6.726635,8.497896,-7.237411,-5.491615,4.234518,-1.240862,7.934950,4.301951,4.819122,7.718829,4.588841,-6.596075,2.138098,2.732109,7.610685,0.791384,0.113023,-1.320963,-5.895919,1.644717,4.918698,9.919425,8.538967,9.336202,6.502344,-9.186912,4.175421,-4.836647,6.692659,5.287374,7.915525,-5.471834,2.843273,8.803366,5.769431,-7.015306,-8.718159,4.167507,-7.079888,-3.175755,-5.526655,-5.730370,9.525554,-5.631022,-7.206026,2.807804,-9.654992,-9.300804,-6.597972,7.148474,-3.599375,-0.846695,-6.658514,-8.172678,-9.009469,-6.781073,5.548543,-4.616945,-4.360860,8.574082,-7.131105,-5.384083,-3.608387,7.956205,-0.399003,-2.830579,-6.292816,4.463062,9.332540,5.756560,-2.354909,-1.772045,-0.519961,-7.324158,6.487589,6.477012,-3.352419,-8.438919,7.063863,4.025596,-4.203584,-1.981622,2.824096,4.074649,-3.032795,-0.137426,2.108604,-6.552401,-2.337697,-1.815494,7.185529,7.410755,8.682804,-1.859925,6.311013,8.223734,-3.170821,-9.722378,2.949603,-4.291787,-0.495869,5.060304,5.487134,8.994551,-7.896291,0.746248,-5.034563,-7.670906,-6.156492,-9.516495],[-5.767697,0.448275,7.968454,-7.122861,-4.578054,-7.353621,-6.669570,-4.433773,-0.981504,6.562301,9.399237,-1.086863,6.073678,3.148012,1.054918,-1.507311,7.926200,-1.668373,4.358922,-4.266272,4.102315,3.536608,-5.305802,8.907532,5.042756,7.558521,1.977765,-8.420966,-9.149466,-7.778287,4.563424,-9.556043,6.901371,-9.829445,0.278541,-9.429368,3.348092,-3.262748,6.484692,-0.704082,-9.890745,0.602280,7.635219,3.128556,7.016148,-6.952479,-8.715675,-2.220726,1.983419,-0.155522,6.505344,-8.407716,-8.397389,-7.880532,-8.076039,5.090437,-8.041339,5.039836,-2.135010,-1.541883,-8.445388,0.978950,3.138779,-6.932607,-0.392902,3.448948,4.599274,-8.631925,6.504793,3.604916,-6.945288,-9.377450,9.983890,-7.626841,-7.737678,-3.024537,6.079940,0.880088,1.144536,-1.125522,4.796509,8.405507,7.557267,-7.566538,-2.579117,-0.825616,-0.855962,6.882715,-4.073231,-3.226091,-6.981960,-8.596122,-8.189990,-4.105106,4.169341,9.565124,4.458739,-6.370791,-3.087979,0.537517,-4.531917,2.357068,-9.441525,7.954425,5.188306,-1.276051,-4.030342,7.674844,-5.451717,-4.977582,-5.407979,-6.294559,-1.056433,-9.995856,-1.003097,0.128398,-8.969514,6.981587,3.200082,6.057109,-9.700993,4.330818,-4.115903,6.792276,-8.904830,8.832279,9.292925,-0.595223],[-2.306632,5.868514,-7.019818,4.154665,9.597031,-1.614567,8.608252,1.960904,0.369976,-4.904041,-2.226138,-5.354754,2.454692,2.703343,-5.641420,-5.057642,0.278934,1.110490,-4.470091,-2.049997,3.638824,2.387033,-4.210406,4.128192,3.547559,-2.560619,9.697241,-7.947460,-3.357307,-0.376203,-0.113830,7.563327,-0.441132,9.683279,6.072469,-5.909862,-2.192674,-5.314928,9.153720,-6.598548,7.855895,-4.564957,-9.317459,-9.549207,-3.292318,4.980303,7.549172,-8.878285,1.795274,7.776038,6.265596,5.707291,8.056071,6.225887,7.586322,0.320395,-5.765557,-5.471616,-9.206277,0.241390,6.900575,9.038053,6.347414,-9.183538,-8.843449,9.208812,8.098489,2.274067,-3.413777,4.295906,3.618066,3.525704,-9.055744,-0.375136,-1.464980,-6.422634,-2.125504,-2.469039,8.691130,-9.317018,-7.639061,-6.240370,-7.193896,-1.185257,-3.728612,3.642223,-8.394711,5.072032,-2.875554,-1.393512,4.134898,-9.104939,-3.544137,4.168663,3.262878,2.193102,9.437591,6.731015,-9.959812,7.011422,-3.195495,-8.565557,5.386089,0.549236,3.980050,-8.309625,-7.900403,-3.181992,5.658791,4.178554,1.844901,7.840961,-9.501056,-7.004258,-3.982397,1.689467,-9.527120,-2.262413,9.608579,4.371917,9.181882,9.891423,-0.326807,-2.540606,2.368027,-9.105443,3.675394,5.104765],[1.168605,-1.324623,0.089137,-3.892622,8.713903,5.941208,-9.472079,8.956397,-6.277272,-1.186135,-1.185212,6.961369,-8.732485,-6.815923,3.485086,0.784880,0.978860,-6.641252,5.782524,7.400374,4.956189,3.396933,1.924020,9.693831,0.261036,3.450623,7.411881,2.216150,-9.609668,5.676813,9.561854,-5.597250,-7.956652,-0.414473,8.567270,-2.071812,-0.094650,2.673454,-3.197915,-2.029048,-1.745521,2.591092,-3.900971,4.478808,-3.120485,-7.890270,5.018740,-4.308806,8.039008,3.527591,-4.955145,-1.010901,4.726660,5.723132,-0.569924,9.596995,1.698064,-3.231403,3.152065,-6.234039,-8.068607,7.727657,-4.722595,7.361305,-9.632945,-8.070908,-8.209074,-8.463574,-2.751450,4.988806,2.674549,1.756254,4.851863,-7.860173,9.815759,-9.014545,7.002349,3.479849,-0.040360,8.864100,6.413768,0.597933,-1.857118,7.074513,1.715058,-2.990736,0.815346,1.999448,6.479130,6.087280,7.156807,8.084796,-3.097349,-6.336357,1.166501,7.548714,7.441419,0.096649,-7.261814,4.720007,4.790073,-2.865453,4.206316,-1.599144,5.256560,-0.352497,1.851537,3.430770,-0.362187,-5.089426,-1.350408,8.738881,5.730546,1.991951,8.510302,6.434713,-1.362839,-8.939502,-2.098879,1.494217,-7.908848,-6.571175,1.625783,7.748354,4.611156,2.357868,-2.817656,6.585808],[8.646407,4.662999,4.313307,-8.217509,7.090484,-6.984381,4.412533,1.354026,5.424940,4.698225,-0.732662,-5.212884,0.523068,0.952882,-8.136367,4.964433,5.103365,3.768984,7.513665,3.344419,-2.247959,-3.980225,9.127523,8.815463,0.483201,1.363765,-0.434114,3.685354,6.232636,3.463151,-7.531985,-2.555020,8.575450,-1.204912,2.985248,2.883379,8.281195,5.577168,-1.734682,6.759174,3.001870,3.865723,2.167321,5.872964,9.897143,-2.387492,1.353066,8.176295,-0.574583,-0.427968,3.907915,9.608437,2.729125,2.130561,-0.872371,-7.196557,5.284044,5.781222,-9.495437,-4.389748,1.645464,8.517365,5.029372,5.894860,0.559659,3.402810,-2.978626,8.042680,6.115690,0.182981,-5.678779,2.712804,7.390442,-3.232943,-2.701507,6.159019,0.686366,-7.387167,0.235719,7.004286,4.169863,-6.818809,9.936373,-4.977286,-4.155946,-3.667005,5.116588,4.496950,-8.351274,-6.921761,-5.537364,-1.593913,1.725576,-9.548171,3.516804,1.822215,-3.618226,-2.691534,8.655519,-8.781560,-9.728327,-5.970296,-2.632920,-2.249313,8.914434,5.211765,-3.808637,-8.241731,9.695522,-6.416499,-4.590679,5.844155,2.995409,-6.032821,-6.480778,7.309439,-7.321864,-2.565124,6.111802,5.231692,-8.893504,-9.513233,8.469698,-0.927571,0.103219,3.548365,-0.241897,-4.213724],[-4.848671,-7.193502,5.358511,3.271081,-4.781942,-4.247971,-1.657997,-1.248977,0.512867,4.806189,8.180879,2.302298,-9.064951,-1.214520,2.694851,1.378877,-6.830593,3.762906,4.992163,5.689880,-8.822218,2.256588,8.593454,9.296853,-1.361580,9.719416,-8.974622,-9.537858,8.501885,0.817496,6.321333,-1.156975,9.636279,2.180776,-0.959710,-1.340557,-3.482852,6.327258,3.511801,-0.421803,4.024973,-2.741413,-8.538756,3.666216,5.198019,7.260439,4.561817,-0.911995,6.914347,4.043096,-0.009045,-8.034254,3.541764,7.945422,0.055070,-5.790108,2.432434,-6.555464,1.058942,-9.698115,5.515745,4.146845,1.533564,1.468934,3.966156,7.898872,-0.265980,-8.569973,6.322737,-9.779866,-5.275744,-5.150334,3.771979,0.655581,-4.720918,-7.524069,9.832576,-0.459923,4.813344,8.121799,-0.688951,9.844403,1.785589,-1.696226,4.912613,3.468985,4.367714,5.195119,-0.133526,2.852412,-0.799976,-5.569384,5.782525,2.346850,-5.072418,9.209329,0.003755,1.539953,-3.130781,9.046576,0.662351,3.053386,-5.485519,1.669270,-6.199449,6.819177,-5.202726,-4.815238,-3.068302,9.098785,9.725926,7.511773,6.009738,0.171774,-8.251991,9.770793,7.378864,-5.372412,0.537197,-1.730508,-9.925387,3.359084,-0.108788,-3.201524,6.154368,8.646303,-7.623819,5.563951],[-9.825768,-5.585006,0.522640,-5.109899,-3.888014,1.072946,-7.602039,1.912614,5.093572,-3.833178,6.732391,4.521278,-9.356294,9.436198,8.862599,-7.210894,2.256745,5.844026,-9.653668,5.562473,-3.235337,-3.972547,-7.172095,-6.724324,-0.394124,6.124886,2.466065,-6.256275,-4.468019,8.000496,-2.953075,6.252315,-1.243162,1.794561,-0.925256,4.815082,1.629449,9.400718,-2.570442,8.083222,-2.131289,-0.276236,1.024715,0.471048,-6.473486,-1.009764,-5.058853,-2.616529,-8.181512,9.433351,-9.718524,8.681918,4.439743,2.677680,-9.957189,-1.278196,-9.478960,3.633964,-5.886250,8.620640,3.131713,0.520036,7.805156,-9.665489,3.667127,-0.136850,-9.788013,6.320034,-6.461080,5.914543,-6.413292,-6.501408,-7.851220,-0.649209,-9.023927,9.628470,9.678793,-9.747140,-3.251455,-4.491589,-4.032630,2.726098,9.210922,-1.893094,-0.275628,-2.865108,-7.272224,3.469488,-9.945120,5.755127,0.450310,-4.682726,4.677764,7.803340,4.817422,-0.409232,-9.898008,9.131569,-0.228093,1.409251,2.607954,1.271944,-9.415201,0.316962,5.845174,-0.241887,7.116436,4.197193,1.533552,1.644075,2.123808,-8.235193,6.420878,7.876894,-7.396500,-3.254290,-8.164678,8.068393,-7.051386,-7.432389,8.379025,-7.079451,1.187602,6.268119,-9.354832,-1.312112,-4.909742,7.970867],[-9.158335,-2.543659,-8.887116,-7.473461,-4.977696,8.406021,-7.911428,-5.921247,-5.980648,6.904855,8.004369,-4.252979,9.765368,8.447680,-2.497835,5.276927,1.946293,5.578586,3.382219,-5.473421,0.592841,-3.754735,7.730003,3.094983,-4.894093,-9.922452,5.459621,3.488997,9.451904,5.109820,-7.674598,-6.827041,-6.308867,6.784215,6.751626,0.888484,8.153890,5.075864,0.909073,7.386866,7.434424,1.332362,-6.207488,7.905034,2.052849,0.750326,5.264759,4.643576,5.504660,8.675829,-4.787526,8.436322,6.338272,3.928052,7.868916,-5.875168,-9.301274,-7.796572,-8.252929,-6.192222,-5.663151,7.508559,5.804791,4.568014,6.198204,6.248926,6.907171,-6.583843,3.435641,8.931366,-7.889226,2.002708,1.341646,7.618708,2.762878,2.806312,-3.079793,-7.530620,4.249603,-0.879777,-3.753431,9.757453,4.777636,-2.833671,5.118841,0.816861,5.523113,-6.801436,-7.638615,0.556439,2.176189,7.015070,2.728767,7.440885,5.247328,-5.401171,8.396069,-3.823814,4.324278,-5.968755,-2.800748,-6.853985,-6.685119,7.052704,-3.892968,1.711487,9.766272,7.985349,-3.312155,-3.502695,9.528495,5.298722,-9.843472,9.476728,7.314916,-8.574742,7.071499,7.974508,5.258178,5.518277,2.002137,4.122937,2.207197,-8.026447,8.315152,-1.427476,9.977928,2.292631],[3.880579,4.818431,-4.808910,-9.274330,-8.751537,-3.138720,-4.302969,6.905103,-7.990676,4.464244,-1.663496,6.559020,-6.843747,-8.227051,2.566351,0.403668,-7.900995,3.037892,-0.192988,-9.355107,-8.936951,-0.017001,-5.065829,-6.590546,-0.629466,2.193999,6.436396,-7.249198,-4.998138,2.047200,-3.872545,-9.139732,0.132920,-5.333968,3.448428,-4.696780,5.380231,2.409493,3.933043,-6.979895,1.196939,-4.960669,-6.765459,-6.912027,8.615607,-7.513393,-5.782540,-9.867445,2.332981,9.459652,1.880765,-2.733929,-6.601260,3.262021,8.349527,8.806463,3.652097,-5.007872,-3.612738,-5.188817,-8.844807,3.565317,2.443518,0.581449,-2.628790,2.495866,-1.027192,-6.222470,4.162833,-6.453447,8.474025,7.684982,2.960282,-1.357366,-4.944904,3.434265,-0.491611,6.467447,-6.176348,-3.219409,9.432953,5.401181,0.240860,-0.659643,5.639405,4.116608,-0.356095,6.424613,-9.688995,1.768794,-8.656601,-9.920323,-5.340657,-3.170079,-6.873905,2.634270,-2.061326,6.956760,6.125052,0.883222,7.611297,3.438561,9.567087,7.054923,1.144201,9.723528,-1.335958,-4.405184,9.038998,2.452420,4.459960,-9.763622,6.235176,3.455237,3.865803,6.824090,7.536968,3.642160,4.011491,7.366080,0.477347,-3.142916,-8.175551,-1.177286,2.785354,3.267067,0.519456,8.512048],[1.180223,5.354565,6.468868,2.270877,1.579291,2.528181,-4.746474,7.581085,6.572504,1.840074,-0.497864,-0.417290,9.147643,-4.222462,2.446094,-3.703090,-8.713040,9.450677,-3.965052,1.961928,6.202787,1.627492,6.298673,-0.559910,-7.098709,-4.997069,0.484062,3.876755,-3.545139,8.697368,1.174422,-9.350639,0.126800,6.570283,9.263115,-2.045308,2.251392,-7.027930,-4.938051,-6.022417,-5.795570,-7.721496,2.331888,-0.815544,4.468139,2.902046,3.295102,8.317668,9.274955,2.981577,9.982226,-9.218711,7.283356,8.951665,5.147083,-5.302522,-6.278886,2.392986,-7.879079,4.233070,-2.499716,-1.120817,-0.263357,-7.711404,-0.866401,-2.255645,9.196942,9.184620,4.866431,2.115294,-8.883338,-1.086319,-6.274354,-6.096244,-6.732639,-7.147272,-8.650554,-7.014019,-5.658134,-5.947629,-5.620356,-9.666580,8.367915,-6.161735,-9.413962,3.455455,-7.078730,5.763502,-4.566708,9.573723,9.869439,3.767680,3.410770,2.147308,-1.744341,-9.790584,-4.554674,1.235458,-3.303766,2.325705,1.418723,0.857709,-1.049142,-5.493789,-5.204036,8.233431,7.574953,6.874115,4.641636,8.797498,9.794512,-2.083834,-0.887963,1.600555,-9.210911,-5.526465,-8.556791,2.411089,-6.485437,8.009121,3.001374,7.675978,6.264759,4.815085,4.412727,-5.075046,8.334475,-7.929604],[-4.724096,-3.894874,-5.179347,-4.625426,9.442070,-8.703786,0.086808,-1.411214,-3.154583,-4.083857,7.931380,-0.953513,-9.996831,4.778109,-1.170796,7.119100,7.754614,2.253644,-4.914130,-1.607477,0.844528,-5.602351,-7.654264,8.469149,-9.351770,-3.398148,-7.737468,-4.321461,-0.647185,-9.043142,2.535455,1.750257,1.909756,7.364814,8.777308,9.131097,-0.511178,5.378463,4.436151,3.279258,-2.978407,8.118753,3.596660,0.617768,4.307972,-4.033023,-8.601184,1.238016,-4.607224,6.276395,3.072290,-2.415585,-2.169066,-6.480428,-3.147993,1.437998,-9.906513,7.215939,-5.753261,5.327425,-0.072576,8.619797,5.581838,8.216553,0.480280,5.758818,9.034428,-8.616622,-9.996196,2.466394,-9.492070,5.662964,7.271431,-2.243577,-1.984674,5.571531,2.789690,7.845107,-0.569010,-5.641582,4.876987,-1.739486,9.262440,2.893618,7.934558,3.393801,6.224373,-6.329867,5.414527,2.251321,-0.715854,0.871892,8.494333,3.288338,4.145984,0.773346,4.526562,3.567242,-9.317454,-9.254191,-1.687316,0.943642,0.162928,-8.420258,6.625139,-9.813167,7.721166,8.649015,-2.585319,-5.659934,0.934914,-9.534753,3.172228,7.655632,-7.554256,7.434098,8.156658,5.424274,3.265368,-3.868209,0.869684,-3.402319,-8.699556,6.315280,-5.967112,-9.727229,8.652869,2.073865],[-0.282849,-1.788817,-0.721754,7.256742,-3.077973,-6.405194,7.503523,-4.346434,6.128174,9.285152,3.432741,-6.946023,-9.927799,0.083973,-0.267253,-5.750889,1.102008,6.475172,-1.047710,-3.833078,3.919485,-7.653617,6.450321,7.823144,-6.360911,-5.047463,8.029728,5.681628,0.185017,2.888238,9.999309,-7.599126,-8.476915,9.419185,2.357842,-4.340207,-8.854405,7.948287,1.352662,3.844926,8.885835,2.280412,-2.359035,-5.253484,6.227423,7.754357,8.914815,-8.295539,-9.799320,-0.569544,1.770008,-0.070954,-2.052535,5.897351,7.907235,7.503039,-1.299860,4.523962,7.456566,-5.416208,-2.982317,-7.137336,3.633668,0.960291,-1.779645,5.452386,-8.177469,5.527455,4.131847,7.400220,7.211484,5.682331,1.515862,7.796800,-8.282081,-9.714790,4.978435,-8.603590,4.856734,-0.027874,-2.330360,6.649566,-8.330416,2.898124,0.472719,-1.265554,5.999810,-7.473310,-0.267278,3.448524,9.651065,7.540922,-5.397935,6.018563,-2.991217,6.280419,-8.043339,2.847552,-9.984313,-8.896423,5.394463,-6.198529,0.208111,-8.616990,-9.551599,-0.546665,7.936806,0.086777,-9.866693,1.752946,-3.399889,0.057374,7.152030,6.334014,4.965277,0.356789,-7.928126,9.652464,-0.366754,-3.043535,3.898961,-5.778621,-7.923926,5.750169,-8.626404,6.872982,2.307415,9.215733],[-2.272918,-1.200840,4.554569,-6.975722,-6.039826,4.568749,3.486972,2.975512,-0.542083,8.874466,5.802211,2.171482,7.632339,7.589491,2.707193,1.743280,8.812249,6.064976,2.241163,0.805335,2.821478,-7.678039,-0.952322,-3.094358,6.940991,3.144095,-2.006112,8.591442,-8.622436,-7.829785,7.369730,3.536833,-9.421735,1.888661,-6.326812,2.894764,0.224127,0.888504,3.383288,7.893433,7.613723,-8.057517,9.522151,-0.164606,-5.595720,-9.385447,-0.996392,-5.468306,-5.352491,4.795123,-4.376742,7.196601,-8.550568,4.334929,-3.403320,1.804386,-6.351406,0.827717,5.762699,3.326764,-0.032488,2.527599,5.304516,5.387447,-2.444268,-8.412723,8.140659,-2.233684,-9.198427,-0.566256,-7.506858,0.397791,9.095911,5.501494,-3.669260,-6.412417,-3.416045,6.507730,4.931456,5.329328,0.073311,7.811946,3.097891,9.043665,8.486737,-8.325184,9.996939,-3.835142,-8.473158,2.560628,-4.513848,-6.824166,6.170989,-0.883753,-0.476544,-7.339115,-8.788481,3.955491,-5.980073,4.940984,-4.794392,7.475937,8.383452,-4.446867,2.164706,-4.340785,7.984586,-7.276104,5.050351,7.815388,4.008081,0.883532,3.372643,4.927580,9.355717,-4.571949,8.615923,6.867054,4.285980,-0.190599,2.641388,6.934265,2.945984,-2.657672,-8.304627,2.471079,8.451570,7.043606],[3.325196,-0.401611,-9.112600,-4.421186,5.924946,-9.957928,2.898040,8.050252,-4.156969,8.515766,4.189552,-6.513056,5.444654,3.913715,-3.037564,-4.346727,1.890481,6.800428,4.146962,6.547207,8.324372,2.770249,0.238607,-9.084804,1.335476,4.692443,2.333130,6.794594,9.701079,4.894287,1.709195,9.013387,8.783883,-8.937022,-1.940949,9.203687,-9.389275,-0.631090,8.234065,7.901059,-0.942343,2.667230,-3.773354,9.429496,9.251444,1.110803,-7.197545,-7.750369,7.902178,-1.142296,-2.377710,-0.081463,-8.025656,-1.607756,7.293461,9.027976,0.364012,5.151999,4.023015,6.324729,8.383568,5.225612,-8.491215,4.546417,8.696839,1.382772,1.408663,-2.155407,0.235145,-5.623582,-5.340908,-6.494619,-8.105737,7.873279,-6.771703,6.963237,4.116869,1.777653,-3.233852,-3.493307,-1.653803,9.203110,8.450010,-8.853229,6.290137,4.276750,-0.381038,5.874053,2.572056,-8.605086,4.558730,3.911187,-9.507369,-9.358712,-7.164850,-5.834572,5.554447,-0.992702,0.965010,0.550173,9.010464,-4.771319,-4.710132,8.677646,-3.204286,-0.493582,3.935875,7.826248,-7.139777,-5.236387,-0.321305,-6.706782,-1.215126,-2.429017,9.572150,-9.120463,-3.301040,-7.822176,-8.805858,-8.286448,7.215196,1.326268,-8.563932,-1.341840,-9.861668,0.184594,-0.584480,-1.546991],[2.077041,-6.238088,-5.046730,3.231779,-7.403231,-9.457380,2.844642,3.221386,6.386385,2.495809,3.297607,-9.456676,-8.548323,-9.040464,4.712214,-4.615216,3.950247,9.982868,7.855296,-0.883178,-3.246921,7.862535,5.255803,-8.958975,5.926799,7.687560,-4.902408,-7.378812,3.461642,0.324161,-6.956010,9.029865,-2.479956,5.758977,-6.961840,2.392987,-8.166407,-4.685787,-4.374831,-8.886114,9.245096,-5.693937,-1.273489,-3.889869,-1.633236,-0.074432,1.910189,-1.749190,0.558623,-8.133846,-4.636412,-2.317157,-7.416169,-3.833184,-6.872941,-4.003581,-1.061664,8.814065,2.879375,0.615928,0.193013,-0.383630,7.291736,-8.558774,3.369534,-5.966462,8.745994,-7.477783,-9.662114,-4.299629,-4.238416,-3.138839,6.067025,9.453793,0.435532,-8.130140,-0.161385,-0.277276,-0.314093,-4.763472,9.653548,9.107883,-9.118843,-6.840055,-5.988094,5.850870,1.113863,-4.188455,7.081009,1.962146,-9.056470,0.976743,5.078906,-7.620405,-7.371330,3.634355,-7.165117,-8.822939,-3.924680,3.066684,2.783433,0.583338,-7.277457,-4.805177,6.562681,-9.317005,4.227060,9.795609,5.400189,-2.804632,-1.133330,7.966118,-0.999319,2.130604,-5.130394,-8.986157,4.855294,-9.140440,6.539069,5.751735,5.327191,-2.015912,7.313036,2.322176,6.081873,2.798435,0.680767,-4.162527],[-1.011871,-6.779472,-3.287939,7.370849,3.679166,3.332927,-2.422293,0.432215,0.751048,-2.261136,2.517690,0.893753,-2.131223,9.483199,-0.029440,8.732394,7.920189,1.716602,-5.878594,-6.762042,2.540566,-8.060901,-3.820535,9.391931,9.179514,6.753977,6.711141,-2.046132,3.634592,1.254192,7.986334,-0.968679,-7.366487,6.530094,-0.011293,-1.941165,0.176729,3.827491,9.642405,7.800192,9.749320,6.890834,-2.855010,-3.448461,0.985619,4.434321,-0.574213,-6.063081,4.895692,-4.970658,8.482405,5.970143,5.919383,-9.566147,2.728879,-1.223587,-9.840045,2.953305,0.150696,-0.314731,9.515486,7.919362,-8.847787,4.604873,1.443025,1.895212,-5.460291,-0.330326,-4.975878,-1.680561,-5.659766,-8.074859,3.379745,8.938017,4.551989,7.125960,3.119989,-1.257378,-1.622827,-0.694617,0.580053,-8.233603,-1.729695,-6.305652,-5.416970,2.667019,2.558611,7.623080,1.258917,2.793173,6.007926,-1.417276,1.519958,-7.782244,-4.430045,-6.801812,-9.483309,6.264730,0.284741,0.187171,9.869902,-3.870146,-6.957022,0.448446,7.174166,-1.200821,7.022661,5.470182,-4.637372,9.906656,-5.311619,-1.532159,-7.692945,-3.707062,6.692934,3.019262,-9.568023,2.093590,-6.336726,-4.770577,2.103451,-8.217448,9.680391,-6.895920,9.316416,-2.015635,8.941342,-9.397359],[4.299553,2.181956,1.235424,4.851327,-5.459182,-3.549505,1.751599,-5.675075,-5.244948,0.265467,6.745930,2.278245,4.199041,-8.951810,-7.015864,2.605525,5.542222,1.115967,2.373097,-9.535157,6.142812,-1.347300,-0.775686,-0.826611,4.723830,-7.628459,1.348359,3.520798,-6.232868,0.751632,6.712463,-7.226225,0.844557,2.274949,-3.655205,-2.713425,-3.976571,-2.578300,-4.911544,5.707443,-7.555194,-3.399144,5.198900,9.672315,8.797332,2.870268,3.115589,-2.388880,5.142420,7.665563,7.664838,4.670989,3.530219,-9.733052,-2.031961,5.573794,-9.706556,-7.379401,-6.378619,2.665491,-8.654201,-1.136645,-5.663968,-5.756862,-5.558229,3.207353,-2.239544,9.300891,-7.552391,5.625299,-1.230674,1.967668,-7.744664,-0.009162,6.862730,-6.909293,-9.105510,0.077077,9.178283,-4.117135,-3.612052,-7.263512,5.269841,-9.073803,5.226028,-0.048621,-9.330841,-1.752941,-3.780076,7.929090,-8.927238,5.542143,-6.542713,3.753795,5.764654,4.647275,0.375956,-3.858977,-7.845229,-5.899792,-8.440182,9.121395,4.078117,3.935072,-6.488638,4.706924,-8.839457,-1.618946,-2.722914,2.774716,6.555326,9.716006,-3.128798,0.883177,-5.396294,-5.346016,4.041534,3.438951,-0.829840,-3.768064,-7.485257,5.560157,-9.370417,3.458606,-8.279459,-4.868052,-7.259171,-3.244763],[6.569754,4.743526,-6.579592,-7.305378,1.902255,-1.635320,-0.390766,-4.395449,-0.642020,-6.817177,0.065161,2.252587,-6.813747,-2.499879,2.739336,6.169267,-8.996554,-9.953253,-7.415476,-4.608361,8.334103,7.702509,4.139449,-3.787337,-4.236292,2.394696,-9.124338,5.124352,-0.645897,2.627654,-8.688388,4.024252,6.097861,6.404769,-3.908597,5.041559,-8.248901,-1.190753,5.935226,-7.532863,5.754533,9.100691,-5.640379,-6.796606,-4.472101,1.204632,-2.961743,-9.778034,-1.982593,5.195938,2.306317,-2.251439,-2.618377,-4.881332,0.689025,7.294946,-3.787899,5.305728,3.210392,7.849871,9.843583,-5.154499,7.708312,-1.093154,8.820800,9.722288,-2.681737,-4.207125,-2.505650,-2.081426,8.942573,-4.767229,2.931796,4.567320,1.467259,-3.867187,2.088208,-5.325903,2.267641,-9.583281,-4.244918,-8.976459,-2.787142,4.558571,1.561039,-0.627722,4.011949,-5.965846,-7.002049,1.089957,-1.739229,8.900859,7.168535,2.039103,-0.990694,8.927663,9.929164,9.367099,-0.863742,-6.261346,3.452298,2.970062,8.241138,0.579369,0.306038,3.562853,-0.812089,2.906799,-1.112118,5.865653,-6.613824,9.688659,-8.628362,7.584428,-9.388018,-5.336394,5.730429,-5.997711,0.498770,-3.766639,7.867269,-9.629160,-6.174051,6.204875,-6.365457,5.494256,4.578268,-5.178725],[-8.088600,-5.422586,0.401981,-4.504986,-5.297570,1.944682,-5.591040,-0.309004,6.305070,3.585447,-4.661612,-0.599779,2.311225,-8.911009,4.511997,-9.041079,-6.144775,-6.932289,2.944445,-9.643463,3.074421,0.192938,-4.259610,0.833199,9.437920,5.301952,6.077396,-4.788926,-6.515748,9.244047,-8.305121,1.727426,8.584363,-0.083614,-4.306635,-4.996866,3.609129,9.881428,-9.979623,0.370434,7.596233,9.034942,3.206631,-0.055639,-2.007675,3.065595,6.350732,-7.928866,-3.364998,-9.635308,5.257832,-6.774954,-4.853860,-5.557150,0.352078,-5.330748,6.416594,0.135151,-6.632203,-2.976094,-3.239629,5.492162,-4.297711,-9.951728,-8.416180,6.243794,3.933279,-5.511005,5.681013,-8.720971,2.686321,0.850383,5.569244,3.425329,-3.964045,-4.150290,0.971884,8.744944,1.492369,-8.193570,-5.583623,-3.335951,2.547488,4.356349,6.069576,0.990824,4.933666,1.551070,-0.143078,-5.574479,-4.309676,1.652747,-8.157068,4.403408,-4.752408,2.342568,7.942039,-1.598823,3.959392,9.032469,-4.347246,6.113234,-0.313209,-3.521885,4.183280,6.655405,0.774429,5.774568,3.647314,-4.263242,-0.675931,-8.334007,4.628374,-9.753629,4.303211,1.009605,8.349068,4.507048,-0.873247,-4.477222,-5.008999,1.204503,-3.461875,4.543771,-5.822730,2.090046,1.711315,-4.415481],[-1.373210,2.557347,2.813164,9.936257,1.851773,-4.067270,-2.081149,6.437080,-8.955553,2.616981,5.785433,1.065750,-8.344550,-3.917165,-5.830902,-9.749196,-8.860242,-7.737395,-0.324747,-2.964856,-8.906181,9.999144,9.180714,6.146743,-4.658289,-2.350750,7.363633,1.304817,-8.203919,-6.907585,-5.435285,6.542748,-3.296699,-3.363522,-6.552867,0.571086,3.982107,0.540418,4.104321,5.567530,8.051763,-2.036117,6.044066,-4.638976,2.554381,-1.561261,6.406694,-8.001193,-6.921014,5.905076,7.377078,4.691410,9.324076,6.493113,-8.867999,-3.996568,-2.859576,-1.851401,-1.927812,9.444437,6.088238,-5.759268,-1.820563,4.607765,6.419968,2.533063,3.582183,-3.467040,9.142236,0.047593,-7.281045,-2.583270,-2.431492,-5.477180,5.818035,9.773112,9.309826,-7.944609,-7.757631,-0.968458,-0.822818,9.974338,8.830728,-9.765000,2.570880,-6.725138,-0.528273,5.031350,3.523796,1.592418,2.276669,-5.059193,-8.805328,-8.310514,-2.388037,0.483899,-1.205032,-7.816766,-0.327374,3.969380,-9.087851,9.920640,-0.464146,-3.693873,-1.468542,-4.698684,-4.457750,-8.490562,0.974224,9.099091,-3.840697,-6.985869,6.925485,-1.917214,-2.085699,-0.314316,3.525214,6.759995,-7.641918,4.183430,1.224022,-4.394295,-8.720146,7.698459,-3.398720,1.017157,5.073381,9.028200],[-5.811972,-0.914290,9.165371,-0.199951,-5.607696,-5.271500,5.495950,7.008491,-6.774788,-3.613505,-6.325044,-6.479076,-9.404842,5.445321,-6.732599,2.300423,-5.523508,9.546238,-8.031147,-3.630263,8.184034,9.560464,9.575370,4.077554,-8.769827,-6.865251,9.705239,4.942544,6.434744,2.168169,-9.845466,-7.393301,-7.145559,-3.522349,2.892192,3.364200,-3.838518,7.252188,2.017319,9.032662,-2.218050,7.830755,-1.918945,-8.189254,5.625261,0.042674,-2.742740,6.983250,7.572257,0.412090,-3.494905,8.854355,0.494154,-7.481621,-3.792063,-1.157568,-7.286231,-8.473953,9.250165,-3.213776,5.799095,-4.601808,2.304744,-4.896261,9.286992,-8.439317,1.923129,-1.174224,-2.371686,5.011596,-1.738278,-3.068093,4.090548,-1.374619,8.842966,-0.125782,-5.251232,-7.700977,-1.478552,3.604969,-1.194692,0.475595,5.677191,-9.312815,0.151394,-3.998438,6.137783,-5.116873,-9.862564,3.320945,0.822658,-6.778029,-5.913641,4.306001,2.190763,4.546466,-2.513582,4.892590,-0.499318,-8.900646,-3.098010,-8.621576,0.304566,-2.538801,2.222716,9.188596,7.638500,-4.172537,-6.920840,-0.411036,-6.641533,6.027818,0.712658,3.888449,-1.474818,3.480127,-8.667942,-2.929810,-3.782454,0.765796,5.245728,-6.293496,-3.118895,-0.734392,-7.531853,2.857823,-2.119425,-0.217091],[2.702893,-9.953354,4.729632,-6.278062,7.306800,8.154400,-0.484916,2.122087,8.708901,-2.304805,-5.821177,-9.683260,-9.525105,-8.623822,-7.159297,-2.986911,-7.427721,5.941099,-2.471461,0.111035,-5.138914,6.005863,-3.932101,-8.190995,-1.347688,4.091408,-7.651099,3.151257,3.845073,8.776795,-1.368870,-2.283298,-0.411037,-4.095430,3.354302,-6.241109,-6.098731,-0.661130,-3.886390,-4.850460,-2.436081,-6.613913,5.397566,2.248887,5.177609,-0.927884,-1.541340,-9.239622,-5.459324,9.597539,-6.719003,-1.364468,8.394221,6.028919,2.515385,-7.478697,-7.820522,-5.105723,-5.129383,-5.676652,8.716565,-7.093512,3.775463,-2.770755,0.694398,-8.009498,-3.115523,0.480347,7.838421,0.741587,-2.489238,-0.869767,-2.109934,7.685362,-0.684162,-5.122195,-1.168868,8.193830,7.235086,-8.097253,5.680567,7.609689,0.167975,9.182888,1.581765,9.183571,-1.117986,-6.901419,9.596352,-1.489884,-6.334636,7.046204,0.567938,-7.792167,-0.028660,2.545807,2.489656,5.664362,4.429140,-3.611459,-2.511673,6.118367,5.203834,5.583741,4.330903,9.303944,7.252585,-8.920534,1.358841,2.593800,8.640308,-3.153680,4.683803,1.444024,-9.372384,-5.027456,-6.554028,-8.369429,6.191907,-1.463111,4.998469,-7.809389,-7.651487,2.094643,-1.831640,4.516052,9.640103,-2.770861],[-7.097523,-2.804975,2.880058,6.613766,-9.278027,-6.378128,9.612309,-9.682786,-3.834468,8.797939,0.678233,-4.546641,-2.401086,-0.124494,7.865685,-2.952342,-4.457401,3.889677,9.131463,9.497057,-0.910660,-6.900883,-0.279028,-1.210160,4.181552,4.810847,-7.335175,-9.146631,-9.679943,-1.129448,-3.159925,4.134168,0.398869,-0.459653,8.946306,-0.764676,5.422869,8.340499,1.749562,-2.653752,-0.220254,-8.364875,-5.990054,6.902846,7.408645,-1.579371,-3.965603,-0.452436,-7.771752,4.000782,4.199238,2.164188,-1.860571,-8.993596,-0.585826,-0.086943,5.108860,5.861036,-6.046359,-8.750595,2.074513,8.139134,-5.726811,0.274058,-9.662608,-7.269841,0.437040,7.343741,-0.269803,8.730440,-8.612078,6.632323,-0.293354,3.466221,3.292370,-6.855444,7.667679,6.748684,-8.806409,-5.254946,2.410261,-2.596434,2.122420,-6.474419,9.351540,-9.221834,4.914242,9.128559,9.898289,-5.175487,-3.976098,7.413636,-6.830388,3.681104,5.842755,-7.583214,-5.015433,7.048468,-7.533270,-5.650109,-3.853117,9.988354,-9.285539,8.926631,-3.098883,9.681064,0.069461,-9.730533,8.152589,-7.195560,2.885839,7.307382,7.939916,3.983651,-2.436931,7.616675,7.322744,-8.120072,-8.945064,8.713013,-3.604806,9.686764,9.434208,8.861975,-0.674721,0.446919,-6.472139,5.839324],[-3.882891,3.705715,-2.375451,3.145920,-1.023424,-9.229733,1.157054,1.536199,-3.858108,0.888458,-3.770248,-6.738763,-7.595988,-5.300189,-6.208473,-4.038261,5.771990,3.242285,0.446875,6.999743,-9.067079,-0.019293,0.430384,9.952915,-0.166442,6.470722,-4.501805,5.635906,1.598161,5.435940,-1.580323,-6.692680,-5.325612,9.448484,-8.632165,0.525562,-2.576108,5.365948,3.423147,8.164979,4.633782,-2.049061,-4.320527,6.313880,2.548785,7.958944,-1.896997,0.326201,2.545600,-6.845004,3.668961,7.334215,2.714064,9.719057,6.820886,1.302893,9.237996,-9.514661,6.459660,-4.267103,8.028901,-0.775652,8.298897,-4.523942,7.947966,3.945704,-6.107217,-2.233271,5.772057,-1.100648,8.663530,8.120958,9.286556,-2.223945,9.402815,9.016591,1.120801,0.750004,-4.985159,8.212101,-4.643478,-5.271133,4.711458,6.130957,4.693495,-2.777428,4.907555,2.050020,2.030589,8.277234,-0.894320,6.410871,3.193554,2.421263,-5.559025,9.565193,8.089891,2.163392,-1.785986,3.594830,-5.493855,-6.492740,1.833139,-1.669420,-9.901831,-1.654195,6.516756,-0.756702,-0.335768,-7.789725,-2.100753,4.946203,6.640626,6.609125,4.134885,1.127238,-8.737838,5.397419,-0.023512,-7.206061,-1.660314,9.643963,6.754172,-2.861734,7.779873,-8.616328,-5.862772,2.528137],[1.119616,2.328092,7.553264,-4.184306,9.413234,-4.773634,-6.092772,-2.264697,7.396455,-1.472870,1.858626,-3.861351,7.535981,-2.269166,-6.987510,0.859968,-9.541525,6.018589,-6.950520,7.745950,1.995838,1.175904,2.264924,-2.423756,1.657541,1.826913,2.718711,-2.536043,-3.239848,-8.259618,-7.241388,-1.593280,6.778296,9.258821,-6.813958,5.559592,-4.964558,0.593447,-7.547218,-1.181555,-4.601852,-0.973046,4.458884,-5.360506,8.416882,-2.773642,-7.490347,9.978703,-5.336836,6.404609,4.902382,3.397436,7.759095,2.974633,-9.524691,-2.119917,6.124702,5.995196,1.659635,7.707903,-2.624500,-3.345259,-7.829981,-1.419378,-8.607595,5.998609,-7.417647,7.233157,4.623652,5.044381,-7.410036,-1.252165,-7.797898,-3.783376,3.630147,0.520419,-6.752457,7.207607,6.433433,3.262482,6.080213,7.868209,9.871098,-4.209584,-9.926544,1.801371,0.558896,-9.980628,2.112875,5.505774,-7.047157,-3.319859,-9.176868,-5.720740,-7.618929,-2.418191,-6.368036,8.805536,-4.601245,7.199740,-0.242027,-9.461572,-1.191764,2.711084,4.047512,9.189919,7.051924,-6.021993,8.068226,6.310943,7.755929,3.147632,-4.146355,3.468797,-4.548941,1.113849,5.584226,-8.298197,-6.963278,2.756205,-8.863027,-7.614355,2.164625,-4.354581,7.038490,-9.758727,5.627849,-3.732438],[-1.961966,-4.303972,-9.137900,7.983324,7.745267,-4.599004,-1.296370,-1.002203,-4.750643,-0.757621,8.194717,-0.189784,3.206944,5.790437,-3.900529,-3.279105,-2.571989,-7.926252,-2.844229,-2.823405,3.626715,3.104488,2.586708,2.038804,-4.388085,8.809314,-5.582810,-7.662523,-0.481678,-8.738612,-7.314309,7.570354,2.690158,5.054627,-5.718527,-7.969752,-1.359230,6.642939,0.239945,4.461775,-3.997888,3.036931,-1.536211,-3.787151,-8.531804,-0.715230,4.405623,6.907121,4.111845,-7.544539,-6.461984,4.371113,2.990770,-3.067725,1.413807,-2.337442,-6.884472,-4.421902,-5.611569,7.361092,2.573130,1.818332,-9.765374,-0.850654,6.481825,2.176205,4.640389,8.967898,5.208358,2.013288,4.185110,-1.696421,7.473113,2.681167,-9.827200,-9.855307,-1.164543,-6.223631,-4.291743,-5.267911,-4.755936,-0.970064,-6.969900,-8.144870,1.670861,0.791155,4.295957,3.639825,-6.296214,-5.182066,3.560594,8.062775,-0.771564,-7.208944,-8.474176,0.105707,-6.908065,-5.628853,6.904912,-4.328757,-2.680585,5.205239,-3.351152,-1.678692,3.026650,1.779000,-6.791755,-7.646264,-5.689256,9.741255,6.552496,1.089391,-1.273143,3.559790,-5.583507,9.820878,4.866971,1.520867,1.767371,-2.272795,-6.667503,4.531995,-4.693334,-4.402096,8.535337,9.742971,-7.602199,-1.426659],[-1.562386,-1.870693,-4.908303,5.161807,-8.044033,9.928624,1.611716,4.032633,0.345428,-0.453551,-2.012532,-2.332265,-4.581336,5.697718,6.400846,-5.870193,5.670438,-3.377458,-2.652041,1.007913,-2.648293,-7.238684,-8.667790,-7.596140,-1.555612,-5.473181,9.330863,-8.120054,-2.872259,-0.472096,-0.114681,-3.700244,3.775288,9.910642,-6.793054,-1.831286,7.666029,-0.073054,-2.320352,1.017274,3.110197,-7.755663,-7.780720,5.116354,-1.939189,-2.864122,-3.155355,-5.379589,-6.472894,1.017578,-5.130033,7.916701,-2.653875,4.853789,-8.119362,5.419466,-9.479207,-0.112784,7.536657,-4.446985,9.810571,-8.642708,1.492266,4.988264,-1.552184,-9.317196,9.507793,-7.341929,-0.015725,-7.717714,-7.275614,-3.924521,1.622277,2.768777,-6.947871,-1.713541,2.618484,1.241240,8.454044,-8.623561,9.906967,-0.749278,-0.170374,-8.461373,8.378714,-5.520495,7.384825,-8.324950,8.793841,3.673644,9.748693,-2.188071,-4.523641,4.579751,-9.235330,4.060832,6.086431,-2.787903,-5.331251,-0.610451,-3.279291,7.121022,3.095351,-3.573179,7.387659,4.407766,-3.119153,2.218919,8.344069,-7.611012,-5.162076,-3.634022,-0.210463,-9.140002,6.285628,-3.319159,1.377223,3.783929,2.626381,0.313522,9.786956,-1.798513,-4.450281,-5.839215,-4.617050,-8.184669,-6.572146,-1.023236],[2.978011,7.472817,0.559428,-1.319550,9.828128,-2.101191,-8.861467,-2.391240,-7.555278,2.927397,-6.365455,-0.698382,-8.008187,-9.756806,0.120048,3.192220,1.601980,-2.819326,-8.467946,4.351959,-3.244522,4.553749,3.648494,9.719465,-7.003899,2.226477,-2.362673,3.005600,-9.423396,-2.612805,4.292310,-7.384863,-7.504833,6.757503,-0.890622,5.651432,-7.507969,6.070457,-2.783400,3.139116,1.497638,4.057746,6.788767,-2.886976,-3.171898,1.442027,3.868405,-1.939383,-5.287240,-7.927053,-4.247722,-6.763338,-1.033343,7.795421,-3.143683,7.416411,6.631357,6.170914,-7.161177,-3.465758,-0.953556,-9.055388,0.803637,-4.315884,-2.099939,-6.567670,-7.053735,-7.495851,-6.325304,0.182340,-0.134738,-7.699007,5.236362,-8.979338,-3.763482,0.828873,6.456168,-3.400659,-6.878058,-4.827929,3.370107,-6.278193,7.874356,0.404883,-5.601093,-9.142379,3.560312,-9.655316,8.686505,-4.285247,8.070288,-6.560265,9.289849,1.780096,7.584785,5.822515,1.908547,-8.908016,-7.913388,-6.768042,-5.043796,3.087559,-2.731838,8.836634,2.187769,3.410565,5.302157,5.640719,-9.848638,-3.644796,-0.581791,-3.033704,5.551037,3.924380,-2.578596,-0.982989,-0.392991,0.595356,3.535635,-9.985780,-7.896935,8.915283,-7.257248,1.854043,-0.108511,-7.086784,6.859536,-9.626884],[-4.544576,-2.003016,3.355503,0.837613,-3.169369,-4.617287,2.698254,-9.979299,-8.631838,4.727828,-6.546024,8.911405,8.522150,-5.159908,1.501157,8.798586,-5.115313,-5.280620,2.959008,6.022863,-8.599818,3.049455,5.505135,-1.120357,-8.196250,-6.871336,-4.031178,8.567473,7.977604,-5.599950,-4.279270,-9.196303,8.029728,-8.435917,6.333196,-6.267320,-1.117922,3.380470,-7.777824,6.619331,-0.744899,7.011925,-1.365868,-6.323446,-0.796780,-7.014026,-8.108060,4.997583,2.108346,-8.793140,-5.205994,9.497867,7.449211,-4.617127,-2.957544,-7.602194,4.180878,3.513984,-7.591808,7.582564,-7.126626,9.648105,8.573729,-3.944634,-3.100762,7.506013,6.523066,9.066197,0.092686,-2.111895,-2.102820,-9.154033,8.424318,1.637511,3.617242,-9.064793,-5.582692,2.046699,2.065770,-2.856778,-6.859936,-4.279328,-2.441176,-5.127343,0.509299,2.897036,3.833608,6.081961,0.518909,-2.328704,6.004389,-4.761774,-3.206284,9.548904,5.767795,-9.810879,4.481881,-0.936942,-8.806670,-1.307429,1.128770,0.897044,5.782473,6.783080,2.163158,-9.174112,5.906704,-8.592981,-6.882460,5.280338,-5.250973,8.747231,-9.542984,3.090359,6.515656,-5.507498,-4.594330,5.578568,-1.252593,-5.131662,4.429107,-6.470685,-6.360261,-7.786576,8.692506,-4.493847,9.956876,8.504170],[1.905573,7.035632,-5.463841,-9.157503,6.511319,1.935983,-0.677115,-5.878101,-4.017198,-8.137475,5.280224,9.893782,-6.527486,-4.222573,9.572278,7.014904,7.539073,7.681913,-2.543221,-3.738937,-1.566175,3.719957,6.460571,-8.030114,8.744278,-8.083992,1.103735,8.033920,-8.325775,-6.156891,7.239768,-8.157805,-0.385330,9.376520,1.483723,-8.433070,4.219773,4.512023,1.092501,-2.824308,-0.701606,-3.441079,-2.115704,-0.762169,8.483152,-4.544332,-3.219571,5.893956,7.332847,-2.537088,-9.681307,-0.663598,-6.027538,1.616113,2.807954,-2.284779,-9.739149,2.626621,-7.019593,5.152864,-7.685864,9.991617,7.657675,6.561838,4.032754,8.471200,9.942471,6.951276,4.553488,3.777045,-1.723595,6.990773,-5.616896,3.815026,-6.157346,2.200061,-4.512577,5.334153,5.418513,-7.003540,-5.289333,6.756383,9.000258,-8.442363,5.082077,3.957557,8.004839,-8.986469,-1.308875,2.000645,0.135935,5.804758,0.233586,5.899020,-8.434459,3.647778,3.193911,-2.988728,1.592019,-4.460203,-7.219607,-3.911944,-0.010287,-6.316629,-9.111729,1.610030,-5.829308,6.958965,6.156492,-2.819971,1.617164,3.363785,-6.748307,4.352458,-9.872965,-8.435930,-1.139819,-0.201816,-3.217314,4.035701,-6.837645,-4.947434,2.988681,-3.586932,-2.488011,-8.332476,-0.922697,-0.204437],[2.826551,-8.492830,5.492821,7.924756,1.331091,-1.159022,-1.736218,-0.292727,-0.943454,0.054080,9.861594,4.383021,-6.255242,5.340326,8.507899,-9.736957,9.551120,-6.031595,5.275350,-0.077367,5.536127,-9.196492,-2.728321,6.410832,5.864058,1.256577,-5.159144,-0.645289,-3.497738,-8.907063,-4.808090,7.928641,3.233354,-4.622771,5.132456,-6.291611,-9.742604,-8.515373,3.754355,8.457592,-1.997502,6.295712,3.438347,5.399586,8.150581,6.008330,-7.133050,-4.171939,-4.626875,9.278974,4.996633,0.291815,-1.964781,4.388406,5.908062,6.169567,9.036226,-9.794914,-7.245322,-1.744597,3.728732,6.025776,-2.962139,-1.247454,9.378067,-9.351433,2.063075,-7.438815,1.149631,4.326352,-5.472922,-2.079728,-4.688377,0.209102,6.299710,-9.361320,7.276132,-5.894020,8.568831,8.509811,-0.076990,-6.376841,6.555200,-3.773414,-7.669470,7.921885,-7.814426,-6.661203,-5.382587,2.963462,6.062736,5.256342,-9.568326,1.607115,-8.113517,-6.423778,-6.541802,-6.403140,7.549655,3.858981,-6.744964,-6.307375,-7.572610,2.324026,-3.926896,-8.390901,7.605970,8.586663,-0.120958,4.127610,6.409228,9.653682,-3.487254,6.844927,-4.060349,0.144355,0.409858,2.201945,-0.762834,-3.440673,-3.284074,9.840730,-5.605477,6.066282,2.594606,7.070681,-7.037307,-9.729986],[-5.572233,-6.788677,-9.176000,-8.333972,9.311030,-8.388738,-8.479783,2.776230,0.049331,-2.269983,2.207759,-7.403306,0.677897,4.455263,4.144233,-9.850295,7.678647,-1.920754,0.924235,7.434019,1.208921,-5.443297,-4.479997,-2.973251,-2.454638,-9.951976,-8.240097,-5.579187,-4.982709,5.523042,-3.516017,-6.450063,-3.601037,6.467168,2.241398,-8.084085,-2.508666,-1.834899,-5.195688,9.715953,-8.250127,-4.037109,-7.937466,-4.366990,-6.534281,-9.676499,1.714567,-2.434716,-1.026283,6.264970,-2.867589,-0.620081,3.070278,-4.601006,3.253382,-6.193553,1.496645,-4.338684,-9.198139,-2.151903,-7.433504,9.998376,7.274930,6.401964,1.447386,9.173609,-9.686231,8.004212,5.076698,-3.086941,9.395318,-7.371199,8.530068,-7.238722,7.060247,8.697942,-8.158858,1.480605,-6.303072,0.799310,-5.195338,-6.666146,-9.463836,-8.440874,1.786916,-8.543210,3.511304,6.261715,0.221867,-0.358748,-3.537729,-8.666502,-0.290392,9.266146,-4.672941,0.194606,2.477090,1.842094,1.344368,8.156371,-2.589048,9.732176,-9.127340,9.571054,-3.411734,-7.000444,4.358504,2.567634,9.950761,-8.412310,5.284352,-7.997749,7.216309,-2.153079,3.346651,3.018041,3.467961,4.117304,5.089358,2.071597,0.074152,2.174284,-3.815593,-4.341246,5.910866,4.204238,-1.901500,8.853918]], dtype = "float64")#candidate|10458|(32, 128)|const|float64
call_10454 = relay.TupleGetItem(func_8886_call(relay.reshape(var_10455.astype('float64'), [6, 8, 4]), relay.reshape(const_10456.astype('int32'), [280,]), relay.reshape(var_10457.astype('int64'), [32, 4]), relay.reshape(const_10458.astype('float64'), [4096,]), ), 2)
call_10459 = relay.TupleGetItem(func_8892_call(relay.reshape(var_10455.astype('float64'), [6, 8, 4]), relay.reshape(const_10456.astype('int32'), [280,]), relay.reshape(var_10457.astype('int64'), [32, 4]), relay.reshape(const_10458.astype('float64'), [4096,]), ), 2)
output = relay.Tuple([call_10446,call_10454,var_10455,const_10456,var_10457,const_10458,])
output2 = relay.Tuple([call_10447,call_10459,var_10455,const_10456,var_10457,const_10458,])
func_10505 = relay.Function([var_10455,var_10457,], output)
mod['func_10505'] = func_10505
mod = relay.transform.InferType()(mod)
mutated_mod['func_10505'] = func_10505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10505_call = mutated_mod.get_global_var('func_10505')
var_10507 = relay.var("var_10507", dtype = "float64", shape = (192,))#candidate|10507|(192,)|var|float64
var_10508 = relay.var("var_10508", dtype = "int64", shape = (64, 2))#candidate|10508|(64, 2)|var|int64
call_10506 = func_10505_call(var_10507,var_10508,)
output = call_10506
func_10509 = relay.Function([var_10507,var_10508,], output)
mutated_mod['func_10509'] = func_10509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9349_call = mod.get_global_var('func_9349')
func_9350_call = mutated_mod.get_global_var('func_9350')
call_10524 = relay.TupleGetItem(func_9349_call(), 2)
call_10525 = relay.TupleGetItem(func_9350_call(), 2)
func_10278_call = mod.get_global_var('func_10278')
func_10279_call = mutated_mod.get_global_var('func_10279')
call_10539 = func_10278_call()
call_10540 = func_10278_call()
func_9742_call = mod.get_global_var('func_9742')
func_9744_call = mutated_mod.get_global_var('func_9744')
var_10542 = relay.var("var_10542", dtype = "bool", shape = (40,))#candidate|10542|(40,)|var|bool
call_10541 = relay.TupleGetItem(func_9742_call(relay.reshape(var_10542.astype('bool'), [40,])), 0)
call_10543 = relay.TupleGetItem(func_9744_call(relay.reshape(var_10542.astype('bool'), [40,])), 0)
func_10242_call = mod.get_global_var('func_10242')
func_10244_call = mutated_mod.get_global_var('func_10244')
call_10571 = func_10242_call()
call_10572 = func_10242_call()
output = relay.Tuple([call_10524,call_10539,call_10541,var_10542,call_10571,])
output2 = relay.Tuple([call_10525,call_10540,call_10543,var_10542,call_10572,])
func_10573 = relay.Function([var_10542,], output)
mod['func_10573'] = func_10573
mod = relay.transform.InferType()(mod)
mutated_mod['func_10573'] = func_10573
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10574 = relay.var("var_10574", dtype = "bool", shape = (40,))#candidate|10574|(40,)|var|bool
func_10573_call = mutated_mod.get_global_var('func_10573')
call_10575 = func_10573_call(var_10574)
output = call_10575
func_10576 = relay.Function([var_10574], output)
mutated_mod['func_10576'] = func_10576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9895_call = mod.get_global_var('func_9895')
func_9897_call = mutated_mod.get_global_var('func_9897')
call_10580 = relay.TupleGetItem(func_9895_call(), 1)
call_10581 = relay.TupleGetItem(func_9897_call(), 1)
output = relay.Tuple([call_10580,])
output2 = relay.Tuple([call_10581,])
func_10594 = relay.Function([], output)
mod['func_10594'] = func_10594
mod = relay.transform.InferType()(mod)
mutated_mod['func_10594'] = func_10594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10594_call = mutated_mod.get_global_var('func_10594')
call_10595 = func_10594_call()
output = call_10595
func_10596 = relay.Function([], output)
mutated_mod['func_10596'] = func_10596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9062_call = mod.get_global_var('func_9062')
func_9064_call = mutated_mod.get_global_var('func_9064')
call_10613 = relay.TupleGetItem(func_9062_call(), 4)
call_10614 = relay.TupleGetItem(func_9064_call(), 4)
output = call_10613
output2 = call_10614
func_10619 = relay.Function([], output)
mod['func_10619'] = func_10619
mod = relay.transform.InferType()(mod)
output = func_10619()
func_10620 = relay.Function([], output)
mutated_mod['func_10620'] = func_10620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9484_call = mod.get_global_var('func_9484')
func_9485_call = mutated_mod.get_global_var('func_9485')
call_10626 = relay.TupleGetItem(func_9484_call(), 0)
call_10627 = relay.TupleGetItem(func_9485_call(), 0)
output = relay.Tuple([call_10626,])
output2 = relay.Tuple([call_10627,])
func_10641 = relay.Function([], output)
mod['func_10641'] = func_10641
mod = relay.transform.InferType()(mod)
mutated_mod['func_10641'] = func_10641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10641_call = mutated_mod.get_global_var('func_10641')
call_10642 = func_10641_call()
output = call_10642
func_10643 = relay.Function([], output)
mutated_mod['func_10643'] = func_10643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10058_call = mod.get_global_var('func_10058')
func_10060_call = mutated_mod.get_global_var('func_10060')
call_10652 = relay.TupleGetItem(func_10058_call(), 0)
call_10653 = relay.TupleGetItem(func_10060_call(), 0)
func_9200_call = mod.get_global_var('func_9200')
func_9202_call = mutated_mod.get_global_var('func_9202')
const_10660 = relay.const([[1.147197,5.150736,4.309829,-9.535327,6.410551,3.938734,-8.466853,9.264172,-7.029250,-1.327285,7.493781,-4.238935,-8.369393,4.082465,-2.689957,-6.979545,-1.288137,-4.040852,2.043277,-6.074250,-1.017368,-8.001684,6.898098,0.220656,-7.900009,-1.386076,-8.304445,9.415764,-4.193570,-2.052781,6.428377,-9.962134,-1.357572,-0.723366,4.507316,-6.041206,-1.464705,8.709483,3.025146,8.352609,-4.021150,8.648235,-1.931159,6.364309,-3.442443,5.257990,9.694347,8.630767,-5.665882,8.899077,-1.336342,8.520758,-1.371724,-1.953170,-3.369188,7.180911,8.861758,2.310239,-9.277179,-5.993321,-9.663202,-0.141006,2.151153,-1.361636,8.092697,4.676633,1.153449,-1.549022,4.702293,6.337673,-6.322022,-0.085168,-9.071139,6.796636,4.350754,8.046965,-3.409532,2.211074,3.784116,0.329348,0.928997,-8.620827,-4.167185,-9.030641,3.359088,1.501654,-7.685394,6.327535,5.527646,3.778335,-1.764033,5.095874,8.778819,-0.389002,-8.299467,1.276515,-6.639106,-7.530541,5.211916,1.356916,0.856247,-3.586757,-9.853020,-8.194208,7.314973,-3.660506,-3.664919,-6.560403,-1.501301,-6.883135,-2.540211,-6.798974,6.268395,8.234685,0.420291,6.161942,6.088125,7.916198,2.217469,-3.932576,0.599297,-6.528167,-5.303382,9.375976,4.158958,4.519508,-4.564099,-1.982100,-1.807655,-7.515634,-3.632498,-6.161745,1.290169,-5.769000,8.302569,9.631695,1.433990,-3.202476,-7.054625,1.221253,9.258784,-5.500596,-4.123149,0.627324,-0.003943,0.275234,8.682792,2.001147,8.338238,2.748582,-1.421322,8.107439,-7.475356,2.631262,-5.374475,-5.473719,5.664932,7.502917,-2.978699,-7.308427,-4.047056,2.166477,-2.541785,-1.653841,-7.854953,-6.766323,6.113595,3.372152,-1.791406,-7.548542,3.096911,-4.973348,4.729626,-3.664330,0.740181,8.839340,-6.325262,8.229488,7.832484,-6.194852,-9.564990,-5.760473,2.152791,2.032187,-5.916971,-5.833116,5.709306,-2.045656,-1.713105,-8.895660,0.368812,8.789540,-2.403421,-2.107060,-6.069450,-9.747057,-2.430778,-4.121608,-4.958215,7.913764,-8.289328,-9.513974,-2.156304,-3.428221,9.630953,-7.280702,-8.807006,2.381291,2.604999,-7.129629,-4.420140,-9.905160,8.008770,-2.917860,-5.423711,-8.703176,1.102718,-6.091613,0.594742,-7.418804,3.742295,-2.571768,-5.165017,0.897603,7.106099,-8.985750,-8.167492,-8.684972,0.938106,0.540308,-5.711984,-5.816933,-9.244448,-7.757794,-0.445711,-8.097866,8.068490,2.485751,-5.117512,1.387039,2.488100,-2.815555,-8.728768,1.851251,5.651773,-3.881296,3.580588,-0.801802,9.854932,9.149885,9.818955,-3.040506,-8.985333,6.581800,-8.786983,6.881636,-7.273702,3.020746,-8.661698,-3.500672,1.931515,-0.394612,-9.734965,-4.249658,0.610386,6.362790,9.641140,9.840804,8.218704,2.930193,-6.291461,4.349560,-4.072159,6.703677,-6.169745,-2.461067,-1.563765,-0.620337,4.997003,9.586583,-6.124089,-8.761437,-1.793814,-3.299900,-1.511534,0.253035,-1.268368,6.736964,2.129114,3.099003,-9.240447,6.730314,-7.549030,0.746647,-0.186645,-6.020392,8.675643,-4.142399,2.554346,-2.176961,-9.485215,-4.650605,-6.893296,1.293388,-1.410657,5.134661,3.504891,-5.561119,-9.790250,2.878648,-0.278059,-6.141815,-9.431836,2.984407,4.017225,7.234800,7.074893,-5.291530,9.509826,6.150600,-3.724675,2.232444,8.679048,-2.923240,7.716529,-2.303792,1.280957,-7.754291,0.337470,9.304427,1.006226,3.693353,-4.264325,-5.972940,9.157233,-6.296768,4.052409,7.985369,0.790568,-0.427450,-5.141324,-7.856511,1.399602,9.543900,-6.473880,2.908082,-6.582543,-4.358272,-5.323717,-7.624717,-2.507169,-2.104057,-2.819861,-1.604090,5.872594,2.837159,5.253299,9.286656,-7.049140,0.848224,-8.227024,-5.389123,4.757184,0.528703,4.449821,-2.432855,-0.128892,0.012302,-0.118872,-7.007322,1.009531,4.615713,3.986311,1.235683,-1.806370,-6.922410,-7.290653,9.515291,2.310653,6.604307,-6.775605,-2.050339,-9.898138,-2.888110,4.433644,-5.192494,-5.123448,5.672483,6.429919,1.229307,-5.995695,-7.235238,-9.326749,-4.739562,-0.812544,-4.650825,5.323675,-4.335327,8.808417,0.111693,3.173135,3.444602,3.709206,-4.055652,3.115459,-3.513563,9.588249,-6.171340,-8.294801,-3.394632,7.478653,-1.325300,8.613346,-9.185364,2.227673,-3.119188,-8.348919,-6.520714,-5.069127,-1.153400,-8.713770,7.378258,4.923484,6.932534,7.861959,-8.706813,-1.374443,1.926012,5.762101,-2.340312,1.390259,-2.902353,-7.900010,-2.011680,8.864559,4.113922,1.703379,9.696799,-4.374435,8.581249,-4.225545,-6.503462,-3.267997,6.281717,-1.903581,-1.618029,-2.832010,4.394030,6.180699,3.482361,-4.466846,-7.665250,-2.450447,-9.589638,-2.174719,-4.180929,0.692135,4.779568,-7.960115,-1.828367,0.385778,9.255397,4.113690,-2.305065,-0.016322,8.160389,-4.496791,-3.508176,2.744784,-4.929802,-6.330561,8.094616,5.506931,2.070640,3.632489,-8.817659,-1.293727,-9.592401,-2.796769,-2.028223,-0.291513,2.205094,2.920436,5.113428,-6.512476,-0.564663,-3.417986,7.749099,8.446029,-0.909431,-8.460678,1.446221,-7.860633,-7.460582,-6.238261,9.350402,-7.870191,-1.690420,-3.290299,-7.116129,8.553118,-9.058442,-4.533858,9.442754,-1.588981,-3.978571,3.126961,-7.638368,2.292439,-9.796602,0.235780,1.707896,1.067181,-2.623419,0.980411,-5.195384,3.671421,1.555060,-4.866164,8.659188,-7.323570,4.720068,5.049649,9.097463,-7.620547,6.837304,0.172173,6.669825,-0.033900,-8.431470,9.018702,-2.671484,9.522123,-2.667636,-0.145200,4.326980,-6.798838,-3.526737,-1.306629,-9.502376,-2.422357,-8.233774,-6.613205,-1.988568,1.732395,1.121212,4.951877,-8.167260,0.167352,9.394000,-7.477871,-5.090540,0.690021,1.290423,-7.412852,1.368441,3.852244,-9.913200,3.384972,-7.016096,8.622685,2.356156,7.527513,-2.319915,5.364731,-2.936353,-9.050383,-7.033382,-5.304923,0.145542,8.383391,4.498712,-5.470406,8.074640,-5.569731,7.807656,5.099053,-8.419237,-2.546157,2.782310,-0.106356,9.595620,-8.441784,7.415719,2.764050,7.845683,3.636142,0.142153,-2.175074,3.945091,-5.046732,-9.866155,-4.804411,-9.172926,7.273186,-5.747731,-3.078113,-3.500815,0.482658,2.267889,-4.126658,4.914235,0.817569,-9.878798,8.867798,-3.673528,-2.142873,8.475124,1.317658,8.523102,9.570604,0.228146,2.460502,-8.490520,0.547231,-7.159861,-0.103106,8.849938,-9.799250,1.627975,9.439889,-7.388269,5.998960,-1.766253,5.007239,2.281657,2.087729,-2.940213,2.576191,0.407252,-2.277144,-9.331046,-2.070229,-3.527340,8.927104,-6.837463,2.909802,-3.960786,0.610463,-2.618986,-7.843693,8.475503,-1.593218,6.633546,3.283140,-3.837733,-2.285685,-6.512838,-6.514636,4.498489,7.813694,-9.627878,-8.972801,1.367606,-5.366677,8.712044,5.056563,-4.535976,-4.338731,5.667464,3.262918,-6.982801,6.553301,-3.201856,1.506223,3.641352,1.948405,-9.453629,1.735861,4.600424,3.005040,-8.279032,-0.491140,-0.306010,-6.352673,-3.909735,5.467882,3.369763,5.082959,-8.496409,-4.219162,3.298625,3.289307,8.322361,1.824317,-8.152388,1.309175,-7.051468,-2.477417,8.966776,-3.820978,-9.448182,-9.432649,-4.182926,2.382001,-9.648796,3.715335,2.127512,9.104943,3.675265,-1.190869,0.684916,-8.706813,6.082931,-6.069215,-3.700600,-4.951456,-5.957531,-9.728331,-6.402375,5.711445,4.071716,1.452282,-2.473785,-0.508484,6.518908,1.627681,-5.718592,-6.433018,-9.655540]], dtype = "float64")#candidate|10660|(1, 720)|const|float64
call_10659 = relay.TupleGetItem(func_9200_call(relay.reshape(const_10660.astype('float64'), [720,])), 0)
call_10661 = relay.TupleGetItem(func_9202_call(relay.reshape(const_10660.astype('float64'), [720,])), 0)
output = relay.Tuple([call_10652,call_10659,const_10660,])
output2 = relay.Tuple([call_10653,call_10661,const_10660,])
func_10662 = relay.Function([], output)
mod['func_10662'] = func_10662
mod = relay.transform.InferType()(mod)
output = func_10662()
func_10663 = relay.Function([], output)
mutated_mod['func_10663'] = func_10663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10662_call = mod.get_global_var('func_10662')
func_10663_call = mutated_mod.get_global_var('func_10663')
call_10742 = relay.TupleGetItem(func_10662_call(), 0)
call_10743 = relay.TupleGetItem(func_10663_call(), 0)
output = relay.Tuple([call_10742,])
output2 = relay.Tuple([call_10743,])
func_10747 = relay.Function([], output)
mod['func_10747'] = func_10747
mod = relay.transform.InferType()(mod)
mutated_mod['func_10747'] = func_10747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10747_call = mutated_mod.get_global_var('func_10747')
call_10748 = func_10747_call()
output = call_10748
func_10749 = relay.Function([], output)
mutated_mod['func_10749'] = func_10749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9383_call = mod.get_global_var('func_9383')
func_9385_call = mutated_mod.get_global_var('func_9385')
call_10765 = relay.TupleGetItem(func_9383_call(), 0)
call_10766 = relay.TupleGetItem(func_9385_call(), 0)
output = call_10765
output2 = call_10766
func_10779 = relay.Function([], output)
mod['func_10779'] = func_10779
mod = relay.transform.InferType()(mod)
mutated_mod['func_10779'] = func_10779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10779_call = mutated_mod.get_global_var('func_10779')
call_10780 = func_10779_call()
output = call_10780
func_10781 = relay.Function([], output)
mutated_mod['func_10781'] = func_10781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10594_call = mod.get_global_var('func_10594')
func_10596_call = mutated_mod.get_global_var('func_10596')
call_10842 = relay.TupleGetItem(func_10594_call(), 0)
call_10843 = relay.TupleGetItem(func_10596_call(), 0)
var_10847 = relay.var("var_10847", dtype = "float32", shape = (4, 8, 15))#candidate|10847|(4, 8, 15)|var|float32
bop_10848 = relay.right_shift(call_10842.astype('int32'), relay.reshape(var_10847.astype('int32'), relay.shape_of(call_10842))) # shape=(4, 8, 15)
bop_10851 = relay.right_shift(call_10843.astype('int32'), relay.reshape(var_10847.astype('int32'), relay.shape_of(call_10843))) # shape=(4, 8, 15)
uop_10862 = relay.sqrt(var_10847.astype('float64')) # shape=(4, 8, 15)
bop_10897 = relay.bitwise_or(uop_10862.astype('uint16'), relay.reshape(bop_10848.astype('uint16'), relay.shape_of(uop_10862))) # shape=(4, 8, 15)
bop_10900 = relay.bitwise_or(uop_10862.astype('uint16'), relay.reshape(bop_10851.astype('uint16'), relay.shape_of(uop_10862))) # shape=(4, 8, 15)
const_10920 = relay.const([[[9,6,-3,8,1,-10,-3,3,8,1,-6,-1,-7,-7,-2],[-6,4,-3,-6,1,-4,-2,-3,-7,7,-4,6,-1,6,9],[4,3,9,7,4,5,-8,6,-2,-2,-10,-3,4,9,-10],[10,-4,-2,-6,10,-6,1,-2,5,2,2,-4,10,8,7],[-8,4,9,-6,-6,8,-1,-9,-6,6,4,9,4,-7,9],[-2,3,10,3,-9,-10,2,6,4,-6,9,8,-7,7,5],[-7,4,3,4,-10,7,-9,-1,10,6,-6,7,3,8,-9],[-10,2,-8,10,2,-4,9,-8,10,-6,6,-1,7,7,8]],[[8,4,-1,-4,-4,-10,3,-4,10,9,-10,9,7,7,-1],[10,2,9,6,-6,-10,-9,-6,6,-8,-3,9,2,-7,-10],[4,8,-5,9,10,2,-2,5,-5,-3,5,3,-7,1,-4],[4,4,1,-9,-9,-6,9,3,5,2,-2,3,4,-10,5],[8,9,-1,9,3,-9,10,-8,-9,-10,-2,-1,-10,6,-9],[-2,-2,9,5,3,8,8,9,1,-10,2,-5,-6,5,-5],[-5,-1,1,-2,8,4,-9,-3,8,-8,-5,2,-1,-7,10],[-1,10,-4,10,5,1,-1,2,1,-8,-2,-9,-4,-3,-7]],[[2,10,9,-3,9,-6,-9,-3,1,-3,-2,3,-7,4,-8],[5,-10,-4,-8,-8,8,1,1,10,-9,4,-8,-5,-3,-7],[9,-3,-6,7,-7,-4,1,2,-9,-5,-7,-10,-5,2,-3],[9,2,2,-8,-3,-6,-9,10,8,-6,-6,3,8,10,-5],[10,6,5,-9,6,9,-8,-10,4,8,2,-4,1,-6,3],[-5,-5,-6,-6,7,-8,-6,7,-5,-4,2,8,-5,-10,-3],[2,10,8,2,-3,-7,-5,7,1,-4,6,4,-6,4,-10],[10,4,3,-8,-7,-4,-1,-1,5,-10,-8,-7,-10,-1,-8]],[[3,7,2,1,-5,-10,-5,7,9,8,3,6,8,2,10],[2,-1,-1,9,10,2,-2,-1,3,-3,9,-8,-5,-1,-8],[8,-4,-1,2,9,-1,-4,-8,-1,6,3,-9,2,-9,-10],[6,9,7,-5,7,2,4,2,-2,-2,-9,6,8,-2,1],[-6,-10,-6,-4,-5,-4,-2,1,-10,-8,-1,-7,-7,-5,6],[10,2,8,4,-1,-6,6,-3,3,-1,-6,-10,-1,10,7],[-1,-1,-5,-3,2,10,8,7,6,-5,-10,9,-3,-8,-6],[10,-10,-2,-9,-7,-6,-10,-4,6,-4,-7,9,4,-6,-5]]], dtype = "uint16")#candidate|10920|(4, 8, 15)|const|uint16
bop_10921 = relay.divide(bop_10897.astype('float64'), relay.reshape(const_10920.astype('float64'), relay.shape_of(bop_10897))) # shape=(4, 8, 15)
bop_10924 = relay.divide(bop_10900.astype('float64'), relay.reshape(const_10920.astype('float64'), relay.shape_of(bop_10900))) # shape=(4, 8, 15)
func_8481_call = mod.get_global_var('func_8481')
func_8484_call = mutated_mod.get_global_var('func_8484')
const_10929 = relay.const([6.574021,-1.242860,6.461707,-1.818704,7.533611,6.329171,6.411565,5.796948,-6.550688,4.076723,-1.341982,2.423061,-1.394802,-8.594849,-7.395685,-0.923957,1.803972,8.695420,-5.935671,-5.609781,-9.970347,-9.765505,-1.617084,-4.457291,6.377705,9.474034,4.050149,-6.231317,7.103140,-5.174316,-0.382647,9.242893,7.451940,-5.757755,6.682400,-0.900124,6.045695,3.962495,-1.447589,-0.630957,7.790923,5.921987,-9.518297,-1.003663,-6.731558,-9.365078,-6.882457,1.336939,-1.485276,9.418125,-1.463119,1.353312,-8.389837,7.996115,-3.320477,5.801654,6.082604,8.065075,-5.450336,-1.391892,-7.338374,6.961725,-1.095320,-8.329806,-2.646916,-1.178091,1.778166,-8.106893,1.584202,3.580558,9.904954,9.479164,3.919412,3.480248,5.227211,9.816079,-9.367813,-3.649913,1.518142,1.557630,-3.127356,-2.304263,-1.237464,5.926088,0.809812,6.758348,9.564466,5.198898,7.308484,-8.339465,-2.451534,-9.922549,-6.629692,-4.312750,-2.784900,-6.199502,8.995749,-0.130802,6.532942,5.249018,-2.917375,-1.797747,-2.816846,4.678975,-4.066995,-7.185682,9.030707,0.370634,3.080186,7.326580,1.314003,-1.439103,-6.050069,-8.965376,-9.976431,-2.817281,3.933085,1.948978,6.302415,1.071837,-5.450143,-2.763447,7.815044,-6.124354,8.043648,-4.691818,4.785360,-4.649062,6.611791,2.349597,-3.315694,6.411881,-1.288988,2.736443,4.776836,8.314023,-0.824212,9.136825,9.809692,-3.159387,0.563365,-3.655909,3.519178,-3.214647,1.937129,1.550627,-4.365452,6.969808,2.171004,-2.546371,-1.978462,-1.293995,2.302909,-1.467186,8.449933,-4.220674,6.342099,5.210140,2.886465,6.963881,-2.040764,-7.766224,6.233621,9.575733,2.658119,1.786111,-4.606261,-5.122407,0.969932,-8.402106,-4.376567,3.189932,0.664938,-8.068733,3.538355,-6.246681,-9.612793,-1.336549,-9.122868,-8.131045,3.022896,5.882832,-4.133582,5.022976,-6.297652,-3.321460,-4.259979,-6.018880,5.298927,-4.266127,8.513089,-9.702724,-5.375488,1.862486,-6.212949,-0.877053,-7.278634,3.010760,5.090730,-8.344846,5.256545,-4.956676,9.927798,7.782523,-8.488214,1.039378,-6.329563,7.489059,-9.629933,-9.857964,3.453405,-9.477146,-3.556078,-7.358806,-0.773050,-6.167072,6.993805,-5.378363,8.995124,3.363281,4.101039,7.190109,-7.291069,-9.436101,-3.050416,-0.594640,7.376847,3.272548,-8.543666,-2.056362,-0.860717,-8.362024,7.782025,-5.160091,2.233134,-9.489225,-9.752904,-1.159372,1.828404,9.765979,7.954152,5.284652,-2.585264,8.141253,-0.147179,-5.429891,-4.052723,-7.990892,1.019501,-9.835060,1.492032,4.719149,3.765236,-5.874535,9.987259,-0.245274,4.419787,1.455594,-4.376119,9.090569,-8.383570,4.053531,-5.442076,4.158028,3.138526,-8.070964,-5.048094,-4.394056,-1.265635,-7.294003,8.839320,-4.246646,-8.099048,-8.521732,-7.071058,1.544195,3.502293,5.608475,0.768612,8.597167,4.928825,5.701852,-0.256846,1.590319,-4.717346,-5.359926,-6.979584,5.927342,-2.506486,4.480936,7.449425,-3.659800,6.630804,-7.966298,-1.963244,9.990450,-1.819567,4.090409,9.162542,4.228823,2.943567,3.190707,-9.045956,-7.677845,-6.949459,-6.990234,0.394429,4.269221,-0.184674,4.114161,7.946588,-7.702620,8.170858,-4.257896,-2.430225,-4.220542,3.615682,8.894015,-6.696390,9.838473,1.726984,-9.339749,-4.233865,-0.817841,-4.640846,2.644283,-1.998429,8.083627,2.686875,-9.774408,9.743548,8.934743,-0.056287,-5.707042,3.653968,-3.925802,0.789033,9.426650,-9.007507,2.770912,2.324023,-3.162167,-6.681668,4.182252,-5.604767,-7.575720,-0.912250,-3.843945,-7.251593,-5.604176,-2.920866,1.211115,8.023910,1.070458,-7.470739,-7.549523,8.642573,3.224609,-8.239575,-3.410296,2.722483,-8.036481,-4.869208,-0.881724,-0.321623,-4.049481,6.047202,-1.816390,-2.267048,-4.318283,-8.281760,-2.530339,-5.756884,-3.264183,-6.064566,8.272469,2.327188,-7.784906,-7.265146,-4.633959,3.957028,-8.824382,-0.068849,8.162236,-6.626981,3.292441,8.649258,4.429680,-0.633813,-8.768946,-4.409999,-2.128923,-4.094565,8.378294,6.337167,2.188038,4.187534,-7.751583,-8.734278,-6.178387,4.241644,-2.698188,-1.938510,-9.556885,7.862989,4.633275,-9.632413,2.698315,-6.050060,-3.485289,-4.097944,-6.713152,6.398697,-1.514007,7.339785,-5.977586,-2.812104,7.101518,-0.723406,4.380103,-5.155096,3.755485,-4.825393,4.007253,-8.644885,2.480473,9.471961,-3.254879,-2.999267,8.790676,2.327854,-6.452243,-5.229392,-0.035782,-9.075985,-2.393920,9.233122,6.323611,-2.360619,-8.036260,-7.275330,4.779211,-2.802517,-3.009802,-2.631712,-0.349109,-5.830738,-4.648854,-7.090807,1.171246,-9.156892,2.819055,-0.345080,-4.296189,-1.728435,1.611095,-4.217138,-6.635103,-8.700736,1.272376,-7.943891,-1.808396,-8.318662,4.768480,-4.035866,9.019730,-6.444537,-0.826010,-4.863307,8.939228,1.372946,6.479611,-8.279584,-2.838224,7.473496,2.812144,6.161505,-2.556225,-1.099451,-3.060628,-3.719655,-8.070202,4.792280,8.496043,5.277671,-4.758000,4.708704,-7.315430,9.468613,-6.830414,-3.561092,5.808777,-7.430021,2.718010,4.287927,6.136807,-7.627383,4.352825,-2.104543,5.892481,1.016038,-3.741318,2.171780,-9.733214,-6.721231,8.523840,9.378541,-5.746727,-4.688807,-1.732553,-5.050236,-1.104001,0.733586,-1.411528,-0.503374,5.536074,8.541250,9.312545,-4.353504,7.071097,-6.701761,4.999632,8.014739,3.398470,-3.062516,-9.309262,1.645018,0.966591,-7.875577,-6.548575,6.461751,-3.535219,-4.035777,4.210019,-7.119389,8.404878,-9.062402,-5.523997,-8.390542,1.550694,8.756749,0.518317,-4.478468,-3.084129,-3.219204,-7.367565,-2.689497,-4.612660,-0.341632,-6.579779,0.748511,5.558283,-0.262579,3.887331,-2.744674,3.459280,-8.458493,-9.325900,5.089836,0.157541,-3.392617,5.713491,0.678709,7.788146,-6.585346,-3.060893,6.664368,7.671487,3.719178,-3.192574,5.572488,1.462031,0.259573,7.690667,-5.816744,-4.413444,-0.060291,-3.758173,-0.885538,9.326891,1.860937,-4.446872,8.960517,-2.978660,-3.328774,-8.956765,0.317046,-9.236020,-0.129955,4.808078,-9.609867,0.685404,-4.707147,-2.305745,1.995703,0.606195,2.211615,1.546660,5.340643,5.695955,-4.055141,0.917386,-0.520951,-4.316938,3.808507,0.918341,-4.095591,-7.507339,-4.814154,3.685703,-8.843529,-9.136534,-3.805005,3.729463,-9.021696,0.638441,-4.907862,-0.464930,-2.418894,3.590946,-1.200845,-0.917349,3.889353,0.836953,8.426331,4.216477,2.075997,-4.114445,6.191246,5.063066,-5.088446,6.069585,-2.784394,8.961706,-5.639332,-7.545199,-3.886063,3.936865,-3.201790,2.998435,3.051467,7.492493,5.477973,-7.655755,1.799127,-2.434219,5.826038,0.036121,0.805050,-2.757593,4.396723,-1.646153,8.082285,-3.971768,8.308613,-5.019190,-2.791907,3.709799,2.329468,2.509077,-9.843207,-3.982099,6.217177,1.908045,6.604731,-4.340959,-1.266242,-3.973441,7.829106,9.739939,-3.372851,3.979615,-8.362010,-6.816838,5.409528,-4.629331,7.696761,3.004311,-8.854457,0.050701,-4.954676,9.924106,8.263421,6.543653,-7.585311,3.598070,-7.574691,3.947937,0.217317,-6.998631,4.930630,-9.525888,3.606294,3.703211,-7.077835,2.022621,3.283840,-1.543021,-2.976391,1.876484,-2.447731,-2.840443,7.198347,9.683817,3.500716,2.334045,2.898911,-0.657544,4.943615,-1.691921,-3.297592,2.026824,-4.827414,-4.191046,3.364398,9.451685,-1.436994,-6.146897,-4.620656,7.513407], dtype = "float64")#candidate|10929|(720,)|const|float64
call_10928 = relay.TupleGetItem(func_8481_call(relay.reshape(const_10929.astype('float64'), [720,])), 2)
call_10930 = relay.TupleGetItem(func_8484_call(relay.reshape(const_10929.astype('float64'), [720,])), 2)
output = relay.Tuple([bop_10921,call_10928,const_10929,])
output2 = relay.Tuple([bop_10924,call_10930,const_10929,])
func_10931 = relay.Function([var_10847,], output)
mod['func_10931'] = func_10931
mod = relay.transform.InferType()(mod)
var_10932 = relay.var("var_10932", dtype = "float32", shape = (4, 8, 15))#candidate|10932|(4, 8, 15)|var|float32
output = func_10931(var_10932)
func_10933 = relay.Function([var_10932], output)
mutated_mod['func_10933'] = func_10933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10619_call = mod.get_global_var('func_10619')
func_10620_call = mutated_mod.get_global_var('func_10620')
call_10937 = func_10619_call()
call_10938 = func_10619_call()
output = relay.Tuple([call_10937,])
output2 = relay.Tuple([call_10938,])
func_10942 = relay.Function([], output)
mod['func_10942'] = func_10942
mod = relay.transform.InferType()(mod)
output = func_10942()
func_10943 = relay.Function([], output)
mutated_mod['func_10943'] = func_10943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10211_call = mod.get_global_var('func_10211')
func_10212_call = mutated_mod.get_global_var('func_10212')
call_10971 = func_10211_call()
call_10972 = func_10211_call()
output = call_10971
output2 = call_10972
func_10998 = relay.Function([], output)
mod['func_10998'] = func_10998
mod = relay.transform.InferType()(mod)
mutated_mod['func_10998'] = func_10998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10998_call = mutated_mod.get_global_var('func_10998')
call_10999 = func_10998_call()
output = call_10999
func_11000 = relay.Function([], output)
mutated_mod['func_11000'] = func_11000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10278_call = mod.get_global_var('func_10278')
func_10279_call = mutated_mod.get_global_var('func_10279')
call_11021 = func_10278_call()
call_11022 = func_10278_call()
output = call_11021
output2 = call_11022
func_11041 = relay.Function([], output)
mod['func_11041'] = func_11041
mod = relay.transform.InferType()(mod)
mutated_mod['func_11041'] = func_11041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11041_call = mutated_mod.get_global_var('func_11041')
call_11042 = func_11041_call()
output = call_11042
func_11043 = relay.Function([], output)
mutated_mod['func_11043'] = func_11043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10998_call = mod.get_global_var('func_10998')
func_11000_call = mutated_mod.get_global_var('func_11000')
call_11140 = func_10998_call()
call_11141 = func_10998_call()
output = relay.Tuple([call_11140,])
output2 = relay.Tuple([call_11141,])
func_11146 = relay.Function([], output)
mod['func_11146'] = func_11146
mod = relay.transform.InferType()(mod)
mutated_mod['func_11146'] = func_11146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11146_call = mutated_mod.get_global_var('func_11146')
call_11147 = func_11146_call()
output = call_11147
func_11148 = relay.Function([], output)
mutated_mod['func_11148'] = func_11148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9776_call = mod.get_global_var('func_9776')
func_9777_call = mutated_mod.get_global_var('func_9777')
call_11154 = relay.TupleGetItem(func_9776_call(), 2)
call_11155 = relay.TupleGetItem(func_9777_call(), 2)
output = call_11154
output2 = call_11155
func_11162 = relay.Function([], output)
mod['func_11162'] = func_11162
mod = relay.transform.InferType()(mod)
mutated_mod['func_11162'] = func_11162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11162_call = mutated_mod.get_global_var('func_11162')
call_11163 = func_11162_call()
output = call_11163
func_11164 = relay.Function([], output)
mutated_mod['func_11164'] = func_11164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9062_call = mod.get_global_var('func_9062')
func_9064_call = mutated_mod.get_global_var('func_9064')
call_11188 = relay.TupleGetItem(func_9062_call(), 2)
call_11189 = relay.TupleGetItem(func_9064_call(), 2)
func_8481_call = mod.get_global_var('func_8481')
func_8484_call = mutated_mod.get_global_var('func_8484')
const_11191 = relay.const([[2.460170],[5.165504],[-7.473520],[8.744323],[-9.228925],[7.137089],[2.471805],[0.795933],[6.155362],[2.020531],[3.850031],[-1.655535],[-6.878762],[-2.669459],[6.973297],[-3.025947],[-7.598625],[4.827524],[-8.297661],[-9.534992],[7.848320],[4.860028],[-4.328719],[6.742429],[2.487963],[-7.525885],[8.385314],[3.135699],[2.079934],[7.589426],[-9.435361],[4.001852],[8.452878],[1.067552],[1.373353],[-3.728697],[-4.299223],[-6.915024],[-8.269084],[-6.040346],[-1.015510],[3.554021],[1.474758],[5.872272],[-0.627808],[-5.620027],[-5.494244],[9.803953],[-7.866129],[-3.639799],[-6.019732],[-6.956029],[-8.299391],[9.597583],[-5.753025],[-4.953676],[9.522706],[7.644192],[-2.889788],[2.763572],[7.967900],[2.751434],[1.134338],[1.346632],[8.676590],[-6.389324],[-4.892432],[-1.821796],[1.931303],[-1.857424],[6.317689],[-6.727399],[-9.053942],[-4.579095],[-0.174515],[0.216359],[3.355357],[-2.387525],[1.488841],[-8.006540],[6.563942],[1.920209],[-4.792063],[-1.344148],[9.710599],[5.938093],[1.711716],[1.185855],[4.061293],[-5.138874],[5.674839],[0.386236],[-9.942597],[-8.974428],[5.391830],[-0.535505],[1.885260],[5.996105],[-4.457732],[5.844281],[-9.055734],[-8.365867],[-5.564951],[0.557804],[9.570434],[5.578563],[8.692824],[8.560774],[-8.263882],[1.802577],[6.169035],[-6.705376],[5.882809],[-0.786728],[2.392568],[-2.930888],[-7.185248],[3.190600],[-9.025841],[7.734148],[-7.214248],[3.704809],[1.976519],[0.570350],[-3.559747],[-9.580223],[1.119040],[-6.748116],[-3.658422],[-0.116955],[-4.355034],[7.450011],[2.760650],[0.052852],[4.734031],[-4.332560],[7.483193],[8.356611],[-0.993042],[5.452556],[2.124082],[-4.635097],[-9.195655],[-1.374549],[9.538396],[1.215521],[6.622451],[4.446241],[0.114541],[-4.556162],[8.527496],[6.206978],[-5.726722],[1.734537],[8.332835],[2.083437],[-6.534173],[8.438544],[-8.909632],[0.285243],[-9.809063],[9.601639],[7.131941],[1.795801],[0.833661],[3.217552],[-9.641227],[-6.139947],[9.683426],[4.753356],[-9.759812],[-1.339267],[7.031099],[6.170978],[3.414931],[6.911952],[3.491588],[3.644854],[8.802180],[-3.701736],[-1.004017],[9.151655],[-9.616638],[-0.811580],[-4.402800],[-5.718040],[-0.914481],[0.884236],[5.704878],[-5.572659],[-1.188813],[-5.422021],[-7.960765],[-7.986180],[-0.191222],[8.394129],[4.324006],[8.234100],[-6.117037],[3.768513],[-5.091284],[6.341108],[-1.909235],[-6.944115],[8.868304],[-3.305476],[-5.917917],[-8.229445],[-4.131101],[4.115275],[2.780600],[-6.695897],[4.551784],[-7.352685],[0.664808],[-3.689822],[9.836892],[-4.626942],[3.602966],[0.331913],[9.050208],[-8.590136],[3.635182],[5.282617],[3.038053],[-9.958542],[3.654167],[9.977260],[1.605895],[-4.887312],[-2.636135],[-5.930799],[-6.995154],[5.483260],[4.539967],[-9.993097],[8.081255],[-8.226050],[1.409886],[-8.218223],[-0.802109],[0.242652],[5.364505],[5.672079],[-1.589594],[4.114453],[-2.169290],[1.029950],[0.697212],[-2.911329],[3.516237],[4.795283],[2.315048],[1.709996],[3.814948],[-2.288375],[3.537573],[1.253331],[-3.765477],[5.719158],[-9.043970],[1.385864],[-6.294329],[7.428994],[-8.196292],[-5.136429],[6.721725],[-5.617944],[8.746045],[7.060417],[0.763734],[7.959023],[-8.948680],[-7.800575],[4.521036],[8.932850],[-6.143121],[-8.966978],[2.578443],[-8.688815],[-3.719932],[-8.609467],[3.737388],[-6.160014],[-8.757848],[7.397210],[4.881988],[-4.120908],[-0.517100],[7.512266],[-2.763066],[4.819377],[8.823680],[6.927967],[-1.609384],[-6.241633],[-7.208386],[-7.901365],[4.340845],[8.098710],[-9.189342],[-7.026993],[0.739936],[6.757421],[4.299556],[6.760838],[-5.563359],[-0.166371],[-5.442675],[-0.436555],[-1.236904],[4.587338],[3.273192],[-0.759612],[4.413550],[8.796529],[-6.212306],[5.202870],[-5.985984],[6.566989],[3.014712],[-1.572565],[-5.628798],[-2.206107],[-9.511681],[7.502026],[4.773430],[-3.017754],[-3.826210],[-8.179477],[-8.286653],[7.657041],[6.591930],[-2.190205],[-7.542360],[6.349541],[-1.914275],[5.165707],[-7.256514],[9.524012],[-5.718327],[3.085676],[-9.580236],[1.020738],[-4.660571],[-1.102423],[4.683113],[-0.018474],[-2.683165],[-1.192970],[-2.615301],[1.823509],[8.067301],[7.602336],[-9.062798],[3.015122],[7.442845],[-3.623227],[-4.829207],[-4.502011],[5.130053],[7.401061],[5.556951],[8.939416],[-4.406550],[-6.767152],[9.933280],[5.980470],[-9.174315],[2.978955],[7.222517],[4.261860],[5.581913],[-0.626168],[0.803990],[1.397503],[7.730761],[0.738481],[-7.631036],[0.978296],[5.734725],[3.495531],[5.875355],[7.852261],[-0.142383],[-5.292890],[8.346470],[-4.062733],[5.637187],[-2.053674],[-7.937705],[-5.384508],[-8.302756],[-3.128255],[-0.175481],[2.451729],[1.550526],[1.335255],[9.524784],[-1.403336],[3.390498],[-5.658296],[-3.033384],[1.113898],[3.780587],[4.008929],[7.597981],[-5.916272],[0.106504],[-8.182656],[-4.316656],[4.909359],[1.716766],[-0.152536],[-8.946341],[-3.146955],[6.506774],[-8.856358],[7.397727],[9.078786],[-9.461902],[-4.325282],[-4.496254],[8.390807],[6.180973],[-3.870841],[-0.479817],[2.214513],[-0.844115],[-2.025676],[-5.319038],[-1.006259],[4.197511],[-7.867760],[-0.782772],[-1.880463],[-5.415476],[9.790652],[0.658991],[-3.316658],[-2.095491],[-1.986205],[9.537708],[-0.934003],[4.960772],[-2.065714],[3.833930],[8.977875],[5.386014],[-3.774330],[8.165741],[-1.846995],[1.501044],[4.917197],[9.281688],[-4.019333],[-1.496274],[-2.024366],[-7.501461],[5.192072],[4.745221],[-6.283174],[-3.290533],[-1.238809],[9.747348],[2.622936],[3.502870],[-4.055022],[9.456376],[6.918748],[0.029562],[6.403220],[-9.296838],[4.061041],[-9.876342],[-5.529015],[-2.094809],[3.289447],[-3.847755],[2.925713],[-9.437070],[-0.647690],[-9.831840],[-2.367566],[-1.808985],[-4.177872],[9.257703],[6.582855],[4.450668],[3.847770],[5.131480],[-7.435401],[-0.929921],[-7.139450],[3.485228],[-1.630413],[3.463829],[6.725269],[0.815127],[0.461299],[6.750049],[0.253204],[4.153083],[-2.351365],[-3.570967],[8.087062],[6.597373],[3.366617],[5.672069],[-9.907859],[8.452731],[-3.721762],[9.569629],[5.922852],[4.591680],[9.445875],[-4.917202],[-9.084177],[3.286598],[4.488610],[-1.354786],[-7.906255],[-2.282907],[2.630287],[8.796503],[-8.366775],[-9.588245],[4.821704],[-9.303849],[-1.683486],[-1.312688],[-8.546305],[-2.145803],[-0.683649],[4.804459],[2.244787],[-1.253856],[7.779891],[-4.364441],[-8.780951],[-6.952483],[-9.406755],[9.071496],[-2.418325],[-9.114632],[-1.732261],[-3.564878],[-3.072021],[3.280580],[0.812083],[-3.199600],[-5.015067],[-0.193850],[5.627323],[-4.099206],[-3.478753],[-6.335976],[6.749648],[8.090985],[2.375827],[-0.590974],[-3.285832],[-3.694336],[0.634351],[0.743360],[-8.377188],[-3.967769],[5.483372],[-7.489629],[7.474087],[-7.524676],[9.615669],[-7.719051],[9.906882],[-4.568576],[-5.161017],[-7.595268],[-4.053721],[1.442542],[-8.738283],[-3.219698],[-1.958216],[1.632086],[7.985101],[-6.287385],[-4.650499],[-6.359694],[2.925072],[-6.744651],[-5.015758],[8.118083],[5.914555],[2.653059],[-6.637829],[0.345652],[-8.483353],[6.074745],[-7.653663],[-9.681414],[-2.216112],[-0.931189],[8.244002],[-0.198593],[-3.372664],[0.114225],[5.148012],[4.222229],[-2.117132],[-8.355873],[7.964223],[6.282725],[4.536535],[-2.032301],[2.113774],[1.978158],[0.731222],[-8.419207],[0.266981],[4.269851],[8.417661],[-2.673693],[8.657039],[5.589159],[5.260022],[-6.784035],[-6.488291],[-5.570482],[-4.377731],[4.351569],[2.243337],[6.988536],[7.909337],[8.968209],[-5.599626],[-8.158731],[-7.844656],[-3.560550],[-6.419112],[3.859319],[-3.715771],[-2.343741],[-2.692376],[-0.617824],[0.195425],[-2.456914],[1.845578],[6.575300],[-1.966201],[8.203990],[3.480301],[-5.109171],[-9.543658],[3.239804],[3.524786],[-5.909626],[-1.794666],[-3.766226],[7.964593],[8.557922],[-8.571890],[0.905882],[0.422149],[-1.086764],[-9.762538],[-1.695998],[8.263721],[7.463758],[7.981705],[-2.943292],[3.725253],[-3.297686],[2.439968],[-6.423536],[-0.122136],[6.448199],[-4.332963],[-8.561781],[9.516310],[5.953146],[-6.435929],[2.409922],[-6.569471],[9.750247],[6.394415],[-7.279183],[4.014026],[-5.402509],[6.554290],[5.743010],[-6.897393],[0.359853],[-3.301739],[-1.766409],[-5.759373],[6.032132],[5.714313],[8.768860],[7.579093],[-5.310764],[-4.863897],[3.620393],[7.778389],[6.968063],[4.232153],[-0.884547],[0.053323],[-0.680162],[1.894949],[-2.208311],[-0.232145],[-9.626420],[-1.309831],[4.633930],[0.448593],[4.047959],[9.007946],[4.195849],[-6.592556],[4.084140],[3.735188]], dtype = "float64")#candidate|11191|(720, 1)|const|float64
call_11190 = relay.TupleGetItem(func_8481_call(relay.reshape(const_11191.astype('float64'), [720,])), 4)
call_11192 = relay.TupleGetItem(func_8484_call(relay.reshape(const_11191.astype('float64'), [720,])), 4)
uop_11202 = relay.atan(const_11191.astype('float32')) # shape=(720, 1)
var_11206 = relay.var("var_11206", dtype = "float32", shape = (720, 1))#candidate|11206|(720, 1)|var|float32
bop_11207 = relay.bitwise_xor(uop_11202.astype('int16'), relay.reshape(var_11206.astype('int16'), relay.shape_of(uop_11202))) # shape=(720, 1)
uop_11212 = relay.sin(uop_11202.astype('float32')) # shape=(720, 1)
bop_11217 = relay.multiply(bop_11207.astype('int64'), relay.reshape(uop_11202.astype('int64'), relay.shape_of(bop_11207))) # shape=(720, 1)
func_10124_call = mod.get_global_var('func_10124')
func_10126_call = mutated_mod.get_global_var('func_10126')
call_11220 = relay.TupleGetItem(func_10124_call(), 1)
call_11221 = relay.TupleGetItem(func_10126_call(), 1)
bop_11225 = relay.right_shift(uop_11212.astype('uint64'), relay.reshape(bop_11207.astype('uint64'), relay.shape_of(uop_11212))) # shape=(720, 1)
output = relay.Tuple([call_11188,call_11190,bop_11217,call_11220,bop_11225,])
output2 = relay.Tuple([call_11189,call_11192,bop_11217,call_11221,bop_11225,])
func_11238 = relay.Function([var_11206,], output)
mod['func_11238'] = func_11238
mod = relay.transform.InferType()(mod)
mutated_mod['func_11238'] = func_11238
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11239 = relay.var("var_11239", dtype = "float32", shape = (720, 1))#candidate|11239|(720, 1)|var|float32
func_11238_call = mutated_mod.get_global_var('func_11238')
call_11240 = func_11238_call(var_11239)
output = call_11240
func_11241 = relay.Function([var_11239], output)
mutated_mod['func_11241'] = func_11241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10278_call = mod.get_global_var('func_10278')
func_10279_call = mutated_mod.get_global_var('func_10279')
call_11261 = func_10278_call()
call_11262 = func_10278_call()
func_10058_call = mod.get_global_var('func_10058')
func_10060_call = mutated_mod.get_global_var('func_10060')
call_11265 = relay.TupleGetItem(func_10058_call(), 0)
call_11266 = relay.TupleGetItem(func_10060_call(), 0)
output = relay.Tuple([call_11261,call_11265,])
output2 = relay.Tuple([call_11262,call_11266,])
func_11269 = relay.Function([], output)
mod['func_11269'] = func_11269
mod = relay.transform.InferType()(mod)
mutated_mod['func_11269'] = func_11269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11269_call = mutated_mod.get_global_var('func_11269')
call_11270 = func_11269_call()
output = call_11270
func_11271 = relay.Function([], output)
mutated_mod['func_11271'] = func_11271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10662_call = mod.get_global_var('func_10662')
func_10663_call = mutated_mod.get_global_var('func_10663')
call_11295 = relay.TupleGetItem(func_10662_call(), 0)
call_11296 = relay.TupleGetItem(func_10663_call(), 0)
func_10443_call = mod.get_global_var('func_10443')
func_10445_call = mutated_mod.get_global_var('func_10445')
call_11303 = relay.TupleGetItem(func_10443_call(), 1)
call_11304 = relay.TupleGetItem(func_10445_call(), 1)
output = relay.Tuple([call_11295,call_11303,])
output2 = relay.Tuple([call_11296,call_11304,])
func_11319 = relay.Function([], output)
mod['func_11319'] = func_11319
mod = relay.transform.InferType()(mod)
output = func_11319()
func_11320 = relay.Function([], output)
mutated_mod['func_11320'] = func_11320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9567_call = mod.get_global_var('func_9567')
func_9568_call = mutated_mod.get_global_var('func_9568')
call_11377 = relay.TupleGetItem(func_9567_call(), 0)
call_11378 = relay.TupleGetItem(func_9568_call(), 0)
output = call_11377
output2 = call_11378
func_11381 = relay.Function([], output)
mod['func_11381'] = func_11381
mod = relay.transform.InferType()(mod)
output = func_11381()
func_11382 = relay.Function([], output)
mutated_mod['func_11382'] = func_11382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9776_call = mod.get_global_var('func_9776')
func_9777_call = mutated_mod.get_global_var('func_9777')
call_11388 = relay.TupleGetItem(func_9776_call(), 1)
call_11389 = relay.TupleGetItem(func_9777_call(), 1)
func_8481_call = mod.get_global_var('func_8481')
func_8484_call = mutated_mod.get_global_var('func_8484')
const_11393 = relay.const([5.224209,-7.495321,1.790169,-1.978412,-1.634335,4.425592,2.269027,-0.997925,7.392937,-2.012727,9.345483,-8.123173,-7.012107,7.189548,8.677228,1.093525,2.746292,-5.523777,-3.706753,-3.146419,-8.734573,-6.530699,-2.874864,0.843601,3.732256,0.066953,0.149535,-4.680189,2.407308,-6.034351,-7.936816,8.540078,8.170486,-3.267690,-8.421419,2.637377,1.045573,-8.049088,-3.522929,2.925579,-8.506904,3.312616,-4.178063,3.691062,9.528954,-1.072911,0.522133,8.823049,-2.997409,0.697651,-2.271672,8.205191,-4.475283,-8.465779,1.314272,2.176841,-3.636934,-8.033331,-2.737515,-1.808071,2.638228,1.354136,9.541836,9.003841,-5.712893,-1.971807,1.062899,-2.176322,-1.011065,9.069344,-2.724630,6.079826,9.207045,4.254314,8.670217,3.515823,8.534731,5.969775,1.548379,-6.750241,2.530833,-4.908374,-7.278973,3.605229,2.556655,-0.603962,9.993701,3.644621,9.378515,-5.204633,-6.645656,6.343893,-5.657420,-2.469880,-0.050733,1.272778,-3.539655,-4.475897,2.656983,3.412483,-9.893710,-2.298952,0.786055,-2.789145,4.334956,0.616988,-0.572625,0.246902,6.973698,-0.883634,-8.575946,-1.415115,-3.203252,4.820164,-1.046896,-3.833643,-0.346975,-3.310413,-5.764094,3.066947,4.281993,-5.245831,5.613869,-5.218308,4.561819,-6.923109,-9.788452,-1.676806,-9.289698,-0.836427,-6.929860,1.633939,-9.637351,-3.928301,1.762600,-5.362464,-2.929292,-3.802186,-3.536903,7.993455,-9.041294,4.653131,-8.534058,8.075510,5.465045,1.682340,-1.857049,-3.891755,-1.008232,-1.746323,-3.438263,-4.579608,2.671657,1.064354,3.765202,9.174345,-3.974756,-5.448381,7.221541,4.475206,-0.607424,-9.388307,-7.063132,7.524152,-1.301491,-9.045972,-1.959329,7.414750,4.793535,0.926537,2.274269,-8.059742,7.257992,-7.161637,-8.276953,4.132617,-4.679120,-0.832308,-8.015264,4.284509,1.580357,-9.087281,-1.564362,7.556603,-3.434078,-2.169697,4.518096,1.945301,-0.638041,5.477325,-8.317184,6.756070,6.218746,9.948460,6.325751,-7.310493,-6.051158,-7.596793,-8.522378,-6.710246,-1.712853,0.622191,-3.587942,-2.702875,-1.327559,6.642883,-0.038011,-2.737092,-8.482633,8.613511,-9.614142,-6.785683,-4.379228,-9.396738,-6.580803,4.236495,5.649633,1.684612,-9.173266,-6.534054,1.079121,6.518555,-2.990727,3.741814,3.994898,-1.172213,-1.495188,-5.665763,1.962344,-7.671473,8.405160,-0.455989,-4.512008,-7.246288,4.011479,7.631135,8.976833,-9.274915,-0.181164,-8.188973,1.418151,-2.045353,-2.493601,-2.968339,3.244870,7.821989,3.686118,8.048236,3.950879,-3.168292,4.591889,-0.290590,-4.278437,-9.816984,-3.487972,-3.120111,-7.395616,-8.832975,4.343790,-2.982325,0.270584,9.152758,-1.650424,-3.028567,6.431313,-2.950607,-6.917724,7.372119,-1.653776,-5.922126,-7.583810,-5.095373,3.657368,4.267393,6.344675,0.506645,-2.549466,5.978072,7.330495,-6.722000,-8.935940,8.435412,1.770964,3.159103,2.968542,4.720711,-3.874010,-2.475620,-6.659246,-5.446145,3.281738,-4.267104,8.923701,-0.636400,2.145208,9.336897,-2.619419,-7.948350,8.253234,0.995227,0.697932,-6.274500,-1.064263,9.523620,6.881068,-9.297151,3.318439,-6.994262,0.226982,-2.080257,8.040254,-6.943083,-6.489190,-3.357737,3.319253,-8.915102,-4.408203,-9.302978,2.520865,5.817706,-8.836248,-6.717969,-6.087374,-2.504202,2.536484,-2.566640,-2.439791,-4.120807,9.707647,-7.138391,-9.465360,-0.980608,3.928703,0.932940,-3.663471,7.103979,7.658223,2.651685,-3.191592,4.955021,-8.093596,0.886665,-1.747594,3.130998,-3.841648,-5.001717,1.799271,5.192890,-7.586768,1.018183,8.785146,0.418697,-7.914053,-4.721629,-6.467046,6.322709,0.374003,5.755690,-5.445910,9.566896,-0.991207,-5.986752,-5.656960,-0.419754,-9.316694,-5.699413,6.336969,-7.658560,-2.763758,-2.709448,-9.496025,5.184970,-2.439649,-0.448598,3.740887,2.659201,1.112275,4.374265,5.179489,-4.718426,-1.615148,1.636278,-4.390345,2.576790,-3.461865,3.091381,0.145869,-6.180167,7.308522,9.240240,0.298556,-8.816673,-2.670981,-2.981577,-8.104329,1.290986,3.242640,-1.980653,3.857278,-3.588570,9.988276,-9.905506,-3.332638,0.565893,0.961774,6.774637,1.424341,-3.985259,3.909709,-4.898880,8.499756,-0.641224,-4.127580,7.692373,6.431769,-8.520865,4.808305,9.421995,0.521737,-4.966927,6.867924,6.340630,6.430552,-2.121970,6.102867,-8.394845,6.249260,3.026542,9.455750,7.954905,1.058667,-8.220873,-2.186827,-0.175570,-2.330885,0.675304,-1.160625,-6.462825,-5.178591,6.582953,4.688747,-2.901583,-6.346468,7.235634,-1.527239,-1.011468,-6.702457,0.392909,5.474488,-4.255707,-1.615557,0.924662,2.053529,-7.873253,9.803187,9.807865,-5.263193,5.169734,7.854986,-6.528062,1.784462,9.345911,7.290191,-5.438033,5.365789,-5.948256,-5.987009,-1.469577,-3.780332,0.163795,-2.907287,-7.610066,4.607846,-7.125927,-4.372380,-8.864611,8.698099,5.895733,-9.182385,8.080301,7.944936,5.626432,-6.154016,4.333028,1.870600,-6.310924,9.782094,-7.315481,-9.039492,6.260329,5.607506,-4.258566,-4.089191,-4.088768,8.380918,-6.338976,5.042265,8.863431,1.410473,-5.863190,1.469030,7.940391,-7.578706,2.951860,-9.285789,7.129185,6.941232,-2.443671,-6.366813,-4.103085,8.422947,-3.370784,5.742298,-0.319267,-0.267205,7.554920,2.750921,-5.162993,-1.742863,-9.596285,-6.637013,-5.515470,4.665701,3.162413,2.174902,2.453173,-5.910323,-3.954577,5.146361,7.177786,8.604688,-2.553036,0.918394,-4.629372,-1.500659,-8.325383,4.730898,-0.326926,0.207561,-2.886918,-6.035587,8.119233,6.007835,-3.094952,-8.910741,-5.922289,-3.337619,-8.941360,8.374735,7.330276,7.348452,-1.008447,-1.011527,0.816644,0.830908,5.194067,-8.660092,-7.302769,-5.287288,-0.555210,-7.039762,-5.047168,8.979937,-5.470915,-1.325359,5.955887,4.010180,-8.477542,-9.548633,-3.148214,3.533929,3.816203,-1.762781,7.757192,-8.479692,-8.100800,-2.611628,7.267998,8.504799,-8.491901,3.278998,-2.745133,7.946402,2.657875,-9.167255,5.004771,3.619770,0.459924,9.574687,-1.225474,2.780751,-6.018552,9.557657,5.726794,-9.025725,-9.740721,6.654743,-2.627698,1.241712,2.578372,1.265660,2.541851,1.692515,4.484815,1.296747,4.015415,-2.910085,-8.005940,9.537018,-5.413317,1.731329,-5.226143,5.320834,-7.695982,-7.196645,2.963960,-8.872457,-4.682459,5.699717,-5.671477,9.829037,0.415967,-2.472827,5.490392,-9.033050,2.884028,7.740842,-3.610777,-8.139976,0.687576,-8.489869,6.483194,-5.571506,1.890735,8.869994,-9.720051,0.786481,-7.343966,-6.640290,3.301549,8.314669,-7.550183,-1.440402,-0.397318,6.926070,8.866558,-4.172374,5.039729,-3.999240,-9.832238,-8.770416,-5.048017,4.270242,8.787116,5.916508,-9.932281,8.532873,7.858990,5.947330,2.309222,1.145486,6.526810,3.192160,-6.007894,7.798321,8.082960,-5.934850,0.517620,-1.410592,8.636041,2.536113,-0.940014,-4.256116,1.909153,0.499993,1.337623,0.458596,-8.285861,0.093048,9.546382,-6.137137,-8.533230,-5.825342,-6.532492,2.656953,-8.482132,6.329708,7.753713,-6.090871,5.340880,0.337658,1.828348,0.842757,2.153509,-2.174285,1.953493,5.707355,8.537178,5.807905,-6.996194,6.406659,-3.929574,-3.468409,7.449101,-0.484464,-4.406601,1.578716,-2.738963,-8.884287,7.754109,-0.225471,2.603363,-9.922349,-7.385974,-4.725525,-8.940727,7.915517,-6.807435,8.641887,6.527150], dtype = "float64")#candidate|11393|(720,)|const|float64
call_11392 = relay.TupleGetItem(func_8481_call(relay.reshape(const_11393.astype('float64'), [720,])), 5)
call_11394 = relay.TupleGetItem(func_8484_call(relay.reshape(const_11393.astype('float64'), [720,])), 5)
uop_11397 = relay.sigmoid(call_11392.astype('float32')) # shape=(126, 3)
uop_11399 = relay.sigmoid(call_11394.astype('float32')) # shape=(126, 3)
func_11238_call = mod.get_global_var('func_11238')
func_11241_call = mutated_mod.get_global_var('func_11241')
call_11404 = relay.TupleGetItem(func_11238_call(relay.reshape(const_11393.astype('float32'), [720, 1])), 3)
call_11405 = relay.TupleGetItem(func_11241_call(relay.reshape(const_11393.astype('float32'), [720, 1])), 3)
func_6762_call = mod.get_global_var('func_6762')
func_6764_call = mutated_mod.get_global_var('func_6764')
const_11411 = relay.const([False,False,True,False,False,False,False,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,False,True,False,False,False,True,True,True,True,False,False,True,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,False,False,False,False,False,False,False,False,False,True,False,True,True,False,True,False,True,True,True,True,False,True,True,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,True,False,True,True,False,True,True,True,False,True,False,False,False,False,True,False,True,True,False,True,False,True,True,False,True,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,True], dtype = "bool")#candidate|11411|(320,)|const|bool
call_11410 = relay.TupleGetItem(func_6762_call(relay.reshape(const_11411.astype('bool'), [16, 5, 4])), 0)
call_11412 = relay.TupleGetItem(func_6764_call(relay.reshape(const_11411.astype('bool'), [16, 5, 4])), 0)
output = relay.Tuple([call_11388,const_11393,uop_11397,call_11404,call_11410,const_11411,])
output2 = relay.Tuple([call_11389,const_11393,uop_11399,call_11405,call_11412,const_11411,])
func_11427 = relay.Function([], output)
mod['func_11427'] = func_11427
mod = relay.transform.InferType()(mod)
mutated_mod['func_11427'] = func_11427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11427_call = mutated_mod.get_global_var('func_11427')
call_11428 = func_11427_call()
output = call_11428
func_11429 = relay.Function([], output)
mutated_mod['func_11429'] = func_11429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10443_call = mod.get_global_var('func_10443')
func_10445_call = mutated_mod.get_global_var('func_10445')
call_11430 = relay.TupleGetItem(func_10443_call(), 1)
call_11431 = relay.TupleGetItem(func_10445_call(), 1)
func_2422_call = mod.get_global_var('func_2422')
func_2425_call = mutated_mod.get_global_var('func_2425')
var_11437 = relay.var("var_11437", dtype = "float64", shape = (2, 312))#candidate|11437|(2, 312)|var|float64
const_11438 = relay.const([7.732583,-4.559530,6.494425,-4.225195,-1.012275,-7.473970,7.925518,-2.314383,2.956024,-4.653877,6.194106,-3.020102,-6.230984,-9.642817], dtype = "float32")#candidate|11438|(14,)|const|float32
call_11436 = relay.TupleGetItem(func_2422_call(relay.reshape(var_11437.astype('float64'), [624,]), relay.reshape(const_11438.astype('float32'), [14,]), ), 1)
call_11439 = relay.TupleGetItem(func_2425_call(relay.reshape(var_11437.astype('float64'), [624,]), relay.reshape(const_11438.astype('float32'), [14,]), ), 1)
func_9567_call = mod.get_global_var('func_9567')
func_9568_call = mutated_mod.get_global_var('func_9568')
call_11447 = relay.TupleGetItem(func_9567_call(), 0)
call_11448 = relay.TupleGetItem(func_9568_call(), 0)
var_11458 = relay.var("var_11458", dtype = "float64", shape = (2, 312))#candidate|11458|(2, 312)|var|float64
bop_11459 = relay.right_shift(var_11437.astype('int8'), relay.reshape(var_11458.astype('int8'), relay.shape_of(var_11437))) # shape=(2, 312)
func_11146_call = mod.get_global_var('func_11146')
func_11148_call = mutated_mod.get_global_var('func_11148')
call_11470 = relay.TupleGetItem(func_11146_call(), 0)
call_11471 = relay.TupleGetItem(func_11148_call(), 0)
output = relay.Tuple([call_11430,call_11436,const_11438,call_11447,bop_11459,call_11470,])
output2 = relay.Tuple([call_11431,call_11439,const_11438,call_11448,bop_11459,call_11471,])
func_11479 = relay.Function([var_11437,var_11458,], output)
mod['func_11479'] = func_11479
mod = relay.transform.InferType()(mod)
var_11480 = relay.var("var_11480", dtype = "float64", shape = (2, 312))#candidate|11480|(2, 312)|var|float64
var_11481 = relay.var("var_11481", dtype = "float64", shape = (2, 312))#candidate|11481|(2, 312)|var|float64
output = func_11479(var_11480,var_11481,)
func_11482 = relay.Function([var_11480,var_11481,], output)
mutated_mod['func_11482'] = func_11482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9484_call = mod.get_global_var('func_9484')
func_9485_call = mutated_mod.get_global_var('func_9485')
call_11484 = relay.TupleGetItem(func_9484_call(), 1)
call_11485 = relay.TupleGetItem(func_9485_call(), 1)
uop_11489 = relay.tan(call_11484.astype('float32')) # shape=(14, 8, 78)
uop_11491 = relay.tan(call_11485.astype('float32')) # shape=(14, 8, 78)
func_9567_call = mod.get_global_var('func_9567')
func_9568_call = mutated_mod.get_global_var('func_9568')
call_11496 = relay.TupleGetItem(func_9567_call(), 0)
call_11497 = relay.TupleGetItem(func_9568_call(), 0)
func_9981_call = mod.get_global_var('func_9981')
func_9983_call = mutated_mod.get_global_var('func_9983')
call_11505 = func_9981_call()
call_11506 = func_9981_call()
uop_11511 = relay.log10(uop_11489.astype('float32')) # shape=(14, 8, 78)
uop_11513 = relay.log10(uop_11491.astype('float32')) # shape=(14, 8, 78)
output = relay.Tuple([call_11496,call_11505,uop_11511,])
output2 = relay.Tuple([call_11497,call_11506,uop_11513,])
func_11515 = relay.Function([], output)
mod['func_11515'] = func_11515
mod = relay.transform.InferType()(mod)
output = func_11515()
func_11516 = relay.Function([], output)
mutated_mod['func_11516'] = func_11516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11162_call = mod.get_global_var('func_11162')
func_11164_call = mutated_mod.get_global_var('func_11164')
call_11547 = func_11162_call()
call_11548 = func_11162_call()
func_10058_call = mod.get_global_var('func_10058')
func_10060_call = mutated_mod.get_global_var('func_10060')
call_11600 = relay.TupleGetItem(func_10058_call(), 0)
call_11601 = relay.TupleGetItem(func_10060_call(), 0)
func_8481_call = mod.get_global_var('func_8481')
func_8484_call = mutated_mod.get_global_var('func_8484')
const_11603 = relay.const([[-4.469189,5.985080,4.930961,3.438543,8.703461,4.584201,9.013299,3.217199,6.829076,-2.703431,-6.450064,-7.516043,0.084710,-3.440081,-1.218722,5.826826,0.713128,-0.956223,-9.336821,-3.001023,1.607860,-8.332629,-5.542567,-2.092012,-3.103121,-3.952136,-9.841893,-1.632779,-1.465017,7.638560,-6.435310,2.609790,0.591736,8.410249,0.055450,-5.765597,6.328273,4.144698,-4.875869,-1.588558,5.400471,-0.298652,5.461242,0.834690,5.294655,-8.682085,-0.969501,8.121610,6.281651,7.646051,-8.782597,2.041826,-4.003949,2.198398,-2.234890,8.135162,-5.555068,0.876918,-8.184290,7.941474,9.933831,-8.146638,-6.165823,-1.405859,-3.432219,-6.990962,8.768485,-2.067883,4.980360,-8.357555,0.415696,2.923476,2.159826,9.687167,8.822875,-6.163123,-8.805298,-0.950645,-8.606229,-7.384557,3.892024,-1.287614,-5.694133,-3.735004,-3.714973,1.087092,7.709676,-0.759992,0.847792,-4.163949,-8.364589,-7.117355,2.665892,8.091394,3.059883,-2.776551,8.712287,1.445520,-6.789091,4.798174,-9.086192,-7.445159,1.422042,1.680814,4.155376,9.036831,-5.255974,-4.540705,1.387194,1.705268,-9.774741,5.139643,-8.510202,1.014330,-5.931477,-9.728729,-2.226968,-8.437400,1.996406,-4.721532,-2.617193,-8.084817,6.609427,-1.387919,2.400160,5.901053,-8.811086,0.485571,0.291258,7.657291,9.736443,0.386640,-8.071814,3.219099,0.720780,-2.585737,0.240649,-4.774351,-9.125571,0.180667,-7.202812,8.045099,9.374792,-9.220958,3.311685,8.076389,9.997529,-9.576760,-5.985376,3.710739,-7.709827,0.254013,-9.899461,-4.585069,9.229702,-9.907680,1.898391,-1.560840,-0.607426,0.189516,-4.991052,-2.540070,2.336064,3.769897,-2.728840,1.711636,1.312756,8.778925,-5.508010,-2.942159,1.267296,-0.352664,-4.760047,-6.483938,2.912502,-5.840270,-0.715675,7.773495,-6.391671,6.932190],[4.853743,3.245023,-7.453186,-2.045400,-4.478111,-3.011595,-1.440770,-1.783917,4.159688,6.359546,6.300330,-8.168860,7.199948,4.721450,-4.580161,-4.563756,-9.436894,-1.963478,-5.863953,7.716934,4.420160,5.441517,-8.561097,-2.966556,-1.576527,-6.467741,-9.212105,5.066500,-8.602659,4.418333,0.310699,-0.264115,2.013299,-5.965669,-7.732377,-3.558046,5.872262,1.644825,-4.983315,6.927321,6.311261,-9.178099,-8.269465,6.837525,-9.347413,-9.131338,6.998791,1.742942,3.167367,-9.308867,-1.179296,-0.448955,-4.361731,8.524132,4.663542,9.017678,9.007494,-6.783910,3.929688,-3.147510,-8.970709,-3.698369,-8.191602,-1.922760,8.116933,4.004659,-5.157381,-6.180270,4.992624,2.479184,-5.698357,6.646273,-2.251557,-6.866553,-8.988983,0.259463,2.817281,-0.275748,-6.990156,6.775403,6.257219,6.460028,-5.820058,9.297157,2.633008,4.975870,8.448633,4.514534,-5.604306,-2.261487,0.602936,-8.430373,1.912185,-6.877885,0.736488,8.755907,-7.824898,-2.805975,-2.878938,-9.602491,-4.471322,-9.098443,-5.682839,3.752069,0.577321,5.922474,-9.102489,0.541838,-2.331021,7.870512,0.936187,6.813261,6.789023,1.981247,3.341120,5.407653,0.494823,4.488075,-0.631013,-1.189803,-2.702376,-1.737765,7.565987,-9.218188,3.873929,-1.061324,9.758781,-8.592521,6.804688,-6.223586,3.680548,5.219365,4.116577,-0.043789,2.740631,0.507021,7.357583,-3.241457,1.988029,-7.843615,-1.730120,-6.586132,-9.605228,-8.753994,-7.114621,-4.013695,0.936669,-9.046074,9.252670,-5.275506,2.120719,-2.453329,4.002008,-0.802872,-2.152707,6.508392,8.549914,-8.779896,-3.900041,7.662421,5.890960,-4.172748,7.911250,-2.826364,6.088847,-1.173364,-3.145942,1.719777,5.782455,9.754543,0.109617,5.583903,-6.964094,-8.028869,-8.142267,2.683932,-6.832363,-8.397323,-8.843006,-1.259283],[7.662396,-6.232058,0.026730,5.882351,2.538764,-8.345213,5.010471,2.424916,7.715256,-2.080512,-1.891904,-2.585037,6.694269,-7.237122,4.729887,-6.442108,1.859292,-5.115727,-2.596566,-5.602430,-9.689989,-3.250626,-8.234496,5.956562,-5.958133,9.106935,1.666832,2.039703,0.462237,-3.949075,-1.486496,6.450582,-8.402425,-6.417425,-1.283825,-7.334866,-4.708880,-1.142033,1.129928,-4.052021,-7.331950,-3.399303,6.200366,-1.139259,1.918786,4.625637,6.099431,-2.648201,9.426254,8.206805,3.070092,-1.158949,-8.280597,-0.435687,2.434785,1.871323,-5.378900,4.476510,4.688426,-7.119730,1.020986,-9.209187,0.864252,-9.478801,-6.969648,-3.559670,6.379378,3.103172,3.767890,9.396807,-7.337277,-2.480566,-1.620044,7.350581,-0.985467,8.897962,9.412018,-8.745690,-2.556964,3.537545,-0.883220,-4.352121,3.594536,-7.647577,9.836311,3.672766,-8.739081,-3.434915,7.752215,9.348651,-8.377922,5.495278,-6.550053,-6.687869,-2.468198,4.672687,5.000142,5.112999,2.345469,1.462916,8.121833,5.888337,5.670471,6.368694,7.873388,-9.500749,5.930187,2.387328,9.600356,-9.932531,-0.657348,6.915224,2.514786,-0.129053,-2.047091,7.906959,-9.004517,6.422419,-7.107451,-6.979518,4.502221,9.691694,9.288520,8.318376,-2.603376,-7.684064,4.255858,-5.893947,-0.602254,-2.752805,4.708513,6.138547,-7.671969,5.858607,0.483859,-0.305364,-9.391503,6.996843,-5.914324,-3.776164,-6.016211,8.037498,-6.094763,-4.276250,-7.529738,1.534372,-9.033073,2.217964,-3.982832,9.725938,8.925748,-8.281557,-5.411320,1.675776,-8.589339,4.375083,-0.336299,3.178294,3.814013,-1.878809,-8.129716,8.780762,-1.288231,0.932709,4.717246,-7.700977,-0.707754,-1.334678,-0.095428,5.760087,7.425008,9.786880,-0.664397,3.044756,-3.810501,1.011965,8.745739,8.647683,-2.252701,-4.175052],[0.048859,-5.197488,-4.389302,-8.045218,-9.891047,9.449728,9.304617,0.901711,1.360402,0.537434,-4.104576,-1.646345,2.938342,6.047971,-7.198714,1.716866,-3.292687,9.341357,-0.309744,8.705674,-2.771887,-6.992763,6.043073,0.515343,-6.525471,-3.979797,6.885197,0.905327,-0.692818,-8.258834,-4.463631,9.628953,1.500735,3.470168,-6.102913,-4.576278,-6.047466,-7.185807,2.254380,-9.163588,-9.285509,-2.549743,-6.090141,-8.795803,4.547069,3.108309,-7.908045,-9.846482,-8.365149,6.508658,4.707302,4.742309,3.886510,7.469897,2.376118,-7.104012,3.584756,8.591787,-0.533342,-9.226006,0.147563,-9.294787,-6.540451,4.174323,-7.047765,-1.082126,5.306915,4.001349,9.118835,0.196957,0.108839,4.847726,-6.526687,-7.077269,-3.442014,-6.635165,-5.383135,-9.708140,-4.287649,2.474334,-7.398944,-2.187304,7.750163,-1.865778,-8.436031,4.643406,-6.912912,-5.476822,-9.507450,3.371889,-7.501177,-6.806995,-4.492008,8.236728,-5.125636,-4.373776,-9.118105,-2.462895,-9.110004,0.227129,-8.035717,-9.059052,0.949458,-2.688529,1.543704,-3.272767,1.287533,0.480661,1.374844,-8.611947,5.500017,1.855576,0.334244,-1.318909,-8.809457,9.205743,-3.285040,2.489188,-2.907215,5.219095,-2.555924,9.173238,-5.623376,8.557388,-5.513370,-6.984298,-1.190832,5.828987,6.764315,-8.507627,9.842701,0.778861,8.758789,1.689861,-4.545944,-6.912646,7.601074,-6.802515,-6.058693,8.758725,-6.052064,-4.673337,2.484553,-9.338494,5.147553,4.336362,-0.525783,3.261321,1.019548,-2.881274,1.585970,-1.263896,-4.046812,9.060301,7.790002,9.157145,-5.295656,-2.149142,-9.341197,-5.277376,5.847466,-7.713366,-6.163644,-9.226108,2.867524,3.060418,4.744547,4.111735,2.967250,-2.407946,0.789645,-7.934867,2.455570,-1.958783,4.510503,-6.393918,-1.599815,3.743214,-3.370235,-1.958553]], dtype = "float64")#candidate|11603|(4, 180)|const|float64
call_11602 = relay.TupleGetItem(func_8481_call(relay.reshape(const_11603.astype('float64'), [720,])), 2)
call_11604 = relay.TupleGetItem(func_8484_call(relay.reshape(const_11603.astype('float64'), [720,])), 2)
output = relay.Tuple([call_11547,call_11600,call_11602,const_11603,])
output2 = relay.Tuple([call_11548,call_11601,call_11604,const_11603,])
func_11630 = relay.Function([], output)
mod['func_11630'] = func_11630
mod = relay.transform.InferType()(mod)
output = func_11630()
func_11631 = relay.Function([], output)
mutated_mod['func_11631'] = func_11631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9484_call = mod.get_global_var('func_9484')
func_9485_call = mutated_mod.get_global_var('func_9485')
call_11637 = relay.TupleGetItem(func_9484_call(), 0)
call_11638 = relay.TupleGetItem(func_9485_call(), 0)
output = call_11637
output2 = call_11638
func_11643 = relay.Function([], output)
mod['func_11643'] = func_11643
mod = relay.transform.InferType()(mod)
mutated_mod['func_11643'] = func_11643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11643_call = mutated_mod.get_global_var('func_11643')
call_11644 = func_11643_call()
output = call_11644
func_11645 = relay.Function([], output)
mutated_mod['func_11645'] = func_11645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9567_call = mod.get_global_var('func_9567')
func_9568_call = mutated_mod.get_global_var('func_9568')
call_11651 = relay.TupleGetItem(func_9567_call(), 0)
call_11652 = relay.TupleGetItem(func_9568_call(), 0)
output = call_11651
output2 = call_11652
func_11656 = relay.Function([], output)
mod['func_11656'] = func_11656
mod = relay.transform.InferType()(mod)
output = func_11656()
func_11657 = relay.Function([], output)
mutated_mod['func_11657'] = func_11657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10124_call = mod.get_global_var('func_10124')
func_10126_call = mutated_mod.get_global_var('func_10126')
call_11698 = relay.TupleGetItem(func_10124_call(), 0)
call_11699 = relay.TupleGetItem(func_10126_call(), 0)
output = call_11698
output2 = call_11699
func_11706 = relay.Function([], output)
mod['func_11706'] = func_11706
mod = relay.transform.InferType()(mod)
output = func_11706()
func_11707 = relay.Function([], output)
mutated_mod['func_11707'] = func_11707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9383_call = mod.get_global_var('func_9383')
func_9385_call = mutated_mod.get_global_var('func_9385')
call_11756 = relay.TupleGetItem(func_9383_call(), 0)
call_11757 = relay.TupleGetItem(func_9385_call(), 0)
output = relay.Tuple([call_11756,])
output2 = relay.Tuple([call_11757,])
func_11760 = relay.Function([], output)
mod['func_11760'] = func_11760
mod = relay.transform.InferType()(mod)
output = func_11760()
func_11761 = relay.Function([], output)
mutated_mod['func_11761'] = func_11761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9981_call = mod.get_global_var('func_9981')
func_9983_call = mutated_mod.get_global_var('func_9983')
call_11768 = func_9981_call()
call_11769 = func_9981_call()
output = relay.Tuple([call_11768,])
output2 = relay.Tuple([call_11769,])
func_11831 = relay.Function([], output)
mod['func_11831'] = func_11831
mod = relay.transform.InferType()(mod)
output = func_11831()
func_11832 = relay.Function([], output)
mutated_mod['func_11832'] = func_11832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11162_call = mod.get_global_var('func_11162')
func_11164_call = mutated_mod.get_global_var('func_11164')
call_11841 = func_11162_call()
call_11842 = func_11162_call()
func_9658_call = mod.get_global_var('func_9658')
func_9661_call = mutated_mod.get_global_var('func_9661')
const_11844 = relay.const([False,True,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,False,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,False,False,False,True,True,True,True,True,False,True,False,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,False,False,False,False,False,False,True,False,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,True,True,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,False,False,False,True,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,True,False,True,False,True,False,False,True,True,False], dtype = "bool")#candidate|11844|(320,)|const|bool
call_11843 = relay.TupleGetItem(func_9658_call(relay.reshape(const_11844.astype('bool'), [2, 160])), 0)
call_11845 = relay.TupleGetItem(func_9661_call(relay.reshape(const_11844.astype('bool'), [2, 160])), 0)
output = relay.Tuple([call_11841,call_11843,const_11844,])
output2 = relay.Tuple([call_11842,call_11845,const_11844,])
func_11872 = relay.Function([], output)
mod['func_11872'] = func_11872
mod = relay.transform.InferType()(mod)
output = func_11872()
func_11873 = relay.Function([], output)
mutated_mod['func_11873'] = func_11873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10662_call = mod.get_global_var('func_10662')
func_10663_call = mutated_mod.get_global_var('func_10663')
call_11883 = relay.TupleGetItem(func_10662_call(), 2)
call_11884 = relay.TupleGetItem(func_10663_call(), 2)
var_11887 = relay.var("var_11887", dtype = "float64", shape = (3, 720))#candidate|11887|(3, 720)|var|float64
bop_11888 = relay.floor_divide(call_11883.astype('float64'), var_11887.astype('float64')) # shape=(3, 720)
bop_11891 = relay.floor_divide(call_11884.astype('float64'), var_11887.astype('float64')) # shape=(3, 720)
func_10641_call = mod.get_global_var('func_10641')
func_10643_call = mutated_mod.get_global_var('func_10643')
call_11893 = relay.TupleGetItem(func_10641_call(), 0)
call_11894 = relay.TupleGetItem(func_10643_call(), 0)
output = relay.Tuple([bop_11888,call_11893,])
output2 = relay.Tuple([bop_11891,call_11894,])
func_11896 = relay.Function([var_11887,], output)
mod['func_11896'] = func_11896
mod = relay.transform.InferType()(mod)
mutated_mod['func_11896'] = func_11896
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11897 = relay.var("var_11897", dtype = "float64", shape = (3, 720))#candidate|11897|(3, 720)|var|float64
func_11896_call = mutated_mod.get_global_var('func_11896')
call_11898 = func_11896_call(var_11897)
output = call_11898
func_11899 = relay.Function([var_11897], output)
mutated_mod['func_11899'] = func_11899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9567_call = mod.get_global_var('func_9567')
func_9568_call = mutated_mod.get_global_var('func_9568')
call_11939 = relay.TupleGetItem(func_9567_call(), 0)
call_11940 = relay.TupleGetItem(func_9568_call(), 0)
output = call_11939
output2 = call_11940
func_11941 = relay.Function([], output)
mod['func_11941'] = func_11941
mod = relay.transform.InferType()(mod)
mutated_mod['func_11941'] = func_11941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11941_call = mutated_mod.get_global_var('func_11941')
call_11942 = func_11941_call()
output = call_11942
func_11943 = relay.Function([], output)
mutated_mod['func_11943'] = func_11943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9383_call = mod.get_global_var('func_9383')
func_9385_call = mutated_mod.get_global_var('func_9385')
call_11961 = relay.TupleGetItem(func_9383_call(), 0)
call_11962 = relay.TupleGetItem(func_9385_call(), 0)
func_11872_call = mod.get_global_var('func_11872')
func_11873_call = mutated_mod.get_global_var('func_11873')
call_11963 = relay.TupleGetItem(func_11872_call(), 1)
call_11964 = relay.TupleGetItem(func_11873_call(), 1)
func_2422_call = mod.get_global_var('func_2422')
func_2425_call = mutated_mod.get_global_var('func_2425')
var_11968 = relay.var("var_11968", dtype = "float64", shape = (624,))#candidate|11968|(624,)|var|float64
var_11969 = relay.var("var_11969", dtype = "float32", shape = (14, 1))#candidate|11969|(14, 1)|var|float32
call_11967 = relay.TupleGetItem(func_2422_call(relay.reshape(var_11968.astype('float64'), [624,]), relay.reshape(var_11969.astype('float32'), [14,]), ), 0)
call_11970 = relay.TupleGetItem(func_2425_call(relay.reshape(var_11968.astype('float64'), [624,]), relay.reshape(var_11969.astype('float32'), [14,]), ), 0)
func_9635_call = mod.get_global_var('func_9635')
func_9637_call = mutated_mod.get_global_var('func_9637')
call_11971 = relay.TupleGetItem(func_9635_call(relay.reshape(var_11969.astype('float32'), [14,])), 2)
call_11972 = relay.TupleGetItem(func_9637_call(relay.reshape(var_11969.astype('float32'), [14,])), 2)
output = relay.Tuple([call_11961,call_11963,call_11967,var_11968,var_11969,call_11971,])
output2 = relay.Tuple([call_11962,call_11964,call_11970,var_11968,var_11969,call_11972,])
func_11973 = relay.Function([var_11968,var_11969,], output)
mod['func_11973'] = func_11973
mod = relay.transform.InferType()(mod)
var_11974 = relay.var("var_11974", dtype = "float64", shape = (624,))#candidate|11974|(624,)|var|float64
var_11975 = relay.var("var_11975", dtype = "float32", shape = (14, 1))#candidate|11975|(14, 1)|var|float32
output = func_11973(var_11974,var_11975,)
func_11976 = relay.Function([var_11974,var_11975,], output)
mutated_mod['func_11976'] = func_11976
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12019 = relay.var("var_12019", dtype = "uint64", shape = ())#candidate|12019|()|var|uint64
var_12020 = relay.var("var_12020", dtype = "uint64", shape = (6, 3, 7))#candidate|12020|(6, 3, 7)|var|uint64
bop_12021 = relay.add(var_12019.astype('uint64'), var_12020.astype('uint64')) # shape=(6, 3, 7)
func_6118_call = mod.get_global_var('func_6118')
func_6121_call = mutated_mod.get_global_var('func_6121')
const_12031 = relay.const([-5.640555,8.636773,0.384464,-7.247263,-8.269303,-3.678188,-6.850140,-5.538915,1.772516,6.474548,-0.193139,-6.188280,-3.361023,-5.422552,-0.513346,-6.734425,2.360975,-8.641581,-1.112364,-2.409882,2.477133,6.103654,-0.435738,-2.017475,-9.953609,4.323843,5.490343,6.501602,-3.984690,5.061908,-6.510063,0.563642,4.137104,0.444247,8.408851,-4.712064,-1.168357,-7.392884,-3.106214,0.937073,-4.126087,8.367068,-8.990475,5.374936,-1.905218,7.548323,9.902606,-8.493338,-8.723915,-9.312396,6.364376,-0.010576,-2.334737,-2.400829,3.440272,6.364888,-6.496193,4.921545,4.094719,-2.744196,9.080389,4.834921,-6.325962,-5.177739,3.492072,-3.562404,9.909494,-4.494496,2.165214,-0.287710,-5.803552,3.343000,-3.512222,5.575172,7.526189,5.528660,0.776945,1.889758,-8.226059,-1.045687,-1.769549,-6.519095,1.540319,3.718388,-5.269397,6.082774,2.879645,8.634005,5.409757,-7.261167,-1.638892,-1.655581,-5.593025,-8.636420,9.951452,-2.735465,1.592747,3.271358,6.258887,-6.852897,5.907057,8.091783,-4.792635,-3.212791,7.336121,-7.898837,8.299577,-5.251250,4.716871,-0.420293,4.441889,-6.437992,-2.522158,-6.114716,4.920394,0.466390,-4.241721,4.767767,1.994413,0.581716,-6.702913,2.864528,-9.467564,2.202615,-7.393403,-0.027644,-8.282430,-8.391029,-4.613521,3.237342,2.940820,-0.559087,2.700105,-3.902278,-1.533503,3.677910,-4.338794,-2.164043,-7.900832,-7.788131,5.186012,6.045463,2.834097,-3.868372,-7.084899,7.841572,-4.206097,2.094247,-0.581300,5.732779,7.773292,1.519931,4.554776,-6.417419,-8.378811,-3.827010,3.585388,5.741251,2.787113,3.462255,7.087730,-9.004874,-1.980609,0.518102,4.574054,4.782555,-8.520130,-9.864071,-3.254610,3.074326,4.924606,0.961428,7.734590,-0.715636,-2.302752,-8.039036,-3.094856,-5.826687,9.175220,2.333203,-2.580641,6.929610,-4.432993,-9.950118,7.397113,4.539525,1.367043,9.813359,0.010666,4.081360,7.785920,-2.163973,-8.221558,9.112370,-4.944332,6.341728,0.721200,1.958476,-9.990715,2.130435,-5.028985,2.297603,6.465536,-8.178969,-9.897224,-3.169182,-2.805207,2.245177,1.223664,-8.154864,-3.053649,-1.734160,-6.302409,5.628719,7.186717,-8.598322,7.810507,0.686267,8.576131,9.825391,-2.321073,1.121902,-3.279031,8.662456,8.398138,-3.510440,1.726812,-7.984201,-8.807723,7.995316,-5.415418,9.767265,6.395912,-3.427184,9.568153,-3.103742,8.190582,-8.519438,-6.736046,-1.989508,8.027926,1.738735,3.273218,-0.175832,1.675144,-4.755153,-2.829072,7.550399,-3.251136,-1.535640,-7.924292,6.093323,-8.278528,9.174526,-9.801394,1.415040,-3.983267,-0.129269,-9.713168,-9.144518,-6.680867,9.601874,-9.598204,-1.218106,-7.112793,-7.191552,7.082103,-1.877369,9.523910,2.734115,3.848874,5.467758,8.233000,-0.715339,5.285999,-7.805040,0.991805,-4.197707,-1.295723,-0.732602,8.492142,4.544774,7.776399,-5.377527,-7.135196,-7.711393,-8.261898,2.203460,7.918225,8.441884,-9.555533,3.822069,8.104316,-8.332968,-7.891313,-6.464906,6.308730,8.769699,-5.117829,-8.393382,0.929694,-7.854765,-2.551803,4.158436,9.881608,-5.985087,-7.764822,4.889472,5.830522,-1.511209,2.210350,9.668678,-4.796894,5.400352,9.989915,8.605679,-8.591556,-9.277462,-3.103619,-2.619447,8.268436,8.648334,-8.123615,3.315213,-1.526023,-7.424405,9.930732,0.511957,-2.640545,-7.984125,-1.993418,-6.650213,3.465260,9.068863,-3.602852,-2.254246,9.165563,-9.481904,-7.697093,7.615186,7.482721,-1.364671,-4.901843,-2.846777,-1.856212,-7.973073,2.717647,9.638899,2.861542,-2.477942,1.367384,4.446898,-9.144245,-9.054214,-7.278132,-2.019102,4.162832,-8.086500,-1.906088,-0.506482,8.550480,1.570100,3.791924,6.168834,3.510896,3.518855,-8.016708,6.835542,-7.841819,-4.498456,-9.451115,-2.797090,2.887957,6.264800,4.288879,1.351320,-9.560079,0.472709,2.674857,-8.975867,-4.797068,7.114928,1.627359,-4.182496,1.752884,-6.380376,6.407212,9.912763,5.681867,-5.800896,2.728822,0.583310,-8.907400,6.405456,0.156144,-7.616316,7.885269,1.903004,3.086864,-9.039223,-6.165660,-1.531957,5.178129,-6.354323,-1.373688,-9.169256,-5.773831,7.243862,-9.115991,3.191988,-5.867604,-4.287415,3.508349,-8.463389,1.646618,0.916077,8.190853,8.493336,-5.770821,1.156587,-2.797251,-1.417379,4.348453,9.883590,-4.152837,-9.434765,-6.655052,3.300694,-6.015823,-8.865540,-9.184931,5.516457,6.884810,1.795228,-5.000607,-5.521790,-4.989089,-6.813324,-1.823611,0.895332,-1.368821,-7.231733,-7.880371,-7.716362,4.765380,-6.838442,9.071749,-6.602500,-0.422948,-5.872887,-7.229091,6.746477,1.377284,5.217231,6.474561,-8.289914,-7.835571,3.449383,-6.410496,7.292994,-4.189232,-6.213757,1.447990,7.464102,-2.854636,-0.141820,-8.800872,8.272650,8.205341,-9.799673,8.779444,-1.985220,8.968993,2.716205,-2.630537,1.448321,-3.297469,-1.045189,-7.321723,-5.451095], dtype = "float32")#candidate|12031|(480,)|const|float32
call_12030 = func_6118_call(relay.reshape(const_12031.astype('float32'), [4, 8, 15]))
call_12032 = func_6118_call(relay.reshape(const_12031.astype('float32'), [4, 8, 15]))
output = relay.Tuple([bop_12021,call_12030,const_12031,])
output2 = relay.Tuple([bop_12021,call_12032,const_12031,])
func_12033 = relay.Function([var_12019,var_12020,], output)
mod['func_12033'] = func_12033
mod = relay.transform.InferType()(mod)
var_12034 = relay.var("var_12034", dtype = "uint64", shape = ())#candidate|12034|()|var|uint64
var_12035 = relay.var("var_12035", dtype = "uint64", shape = (6, 3, 7))#candidate|12035|(6, 3, 7)|var|uint64
output = func_12033(var_12034,var_12035,)
func_12036 = relay.Function([var_12034,var_12035,], output)
mutated_mod['func_12036'] = func_12036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11706_call = mod.get_global_var('func_11706')
func_11707_call = mutated_mod.get_global_var('func_11707')
call_12068 = func_11706_call()
call_12069 = func_11706_call()
output = relay.Tuple([call_12068,])
output2 = relay.Tuple([call_12069,])
func_12073 = relay.Function([], output)
mod['func_12073'] = func_12073
mod = relay.transform.InferType()(mod)
mutated_mod['func_12073'] = func_12073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12073_call = mutated_mod.get_global_var('func_12073')
call_12074 = func_12073_call()
output = call_12074
func_12075 = relay.Function([], output)
mutated_mod['func_12075'] = func_12075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10942_call = mod.get_global_var('func_10942')
func_10943_call = mutated_mod.get_global_var('func_10943')
call_12096 = relay.TupleGetItem(func_10942_call(), 0)
call_12097 = relay.TupleGetItem(func_10943_call(), 0)
func_10381_call = mod.get_global_var('func_10381')
func_10383_call = mutated_mod.get_global_var('func_10383')
call_12110 = relay.TupleGetItem(func_10381_call(), 0)
call_12111 = relay.TupleGetItem(func_10383_call(), 0)
func_2825_call = mod.get_global_var('func_2825')
func_2827_call = mutated_mod.get_global_var('func_2827')
const_12113 = relay.const([9.877702,8.355914,0.397739,8.843051,9.523159,-2.783015,-2.114001,8.739223,9.610749,5.013466,-3.608275,-7.401143,9.174552,0.427440,-6.078707,-9.121906,-5.236945,9.600205,8.043332,9.043522,0.301016,-7.953345,-2.686216,-7.080647,5.143356,-7.478215,-3.184056,-2.945427,1.326855,-6.734782,2.183847,3.961416,3.660050,1.548494,8.703374,5.580081,-5.932078,-0.340058,-6.718252,2.872518,-0.395462,1.372421,-8.198571,6.774721,5.807699,-2.773090,-4.070469,8.498117,-3.704024,5.995930,9.223851,-2.130758,-7.938199,-8.655479,3.620945,-1.133122,9.696293,-0.747931,7.209170,-0.932494,-2.937506,7.932718,-9.247187,-4.972911,1.848189,4.459843,-8.057422,7.853649,-2.654854,1.618888,8.208917,-7.300349,-9.142969,-3.015139,-5.098305,-6.446849,6.890221,8.367836,-9.598326,-4.964705,5.319478,-4.877065,4.826594,-9.611162,6.957093,7.699378,9.732996,-7.353889,4.165593,-3.721800,5.369094,-0.734313,-4.144591,-6.537264,5.763729,1.906235,-0.514595,-2.753335,9.914189,-9.814253,7.496724,0.602073,3.143697,-2.496342,-1.243635,-9.598351,5.214663,4.567038,-3.758740,6.478077,-0.427818,6.070721,-5.971366,6.697400,-0.243121,9.686001,9.583680,4.717552,-4.068262,0.176970,-5.873691,-5.628122,-6.853630,3.284808,4.253694,-4.734328,6.903175,9.643805,-4.134679,4.815764,-2.891292,-6.951494,6.507157,-4.777698,0.089041,6.095182,8.133454,4.188691,0.924533,-0.530833,6.365841,-4.284676,-9.732055,3.671543,-9.071651,-2.080612,3.755192,6.890829,-8.294735,-1.871738,5.252947,8.833866,4.496358,9.525504,4.199177,8.617199,-8.999435,-0.554529,4.594734,7.765225,-8.410018,-2.909170,-1.789126,7.531646,6.651924,-7.683680,4.061230,9.266475,5.733887,1.524459,1.680331,7.202531,-8.764745,-3.607677,8.863227,-9.757949,4.789290,1.908592,-2.798952,-0.662113,-1.564636,-7.755260,-5.313344,-4.188382,-4.034234,1.687681,1.856293,-9.724339,-5.311442,2.089527,-1.374847,2.876973,1.314077,-9.449178,6.627505,9.136236,7.295192,7.175569,-9.071864,8.455913,4.376548,-3.381503,-1.319216,8.996648,4.280963,-2.059637,-5.695337,-2.382337,8.714902,6.131863,9.100424,-7.262995,-4.130072,5.833220,-5.795933,-3.735826,3.380188,-9.804658,4.255011,-3.645718,-5.160014,-5.293000,-9.525831,-5.245953,1.691935,3.661538,3.207296,-2.424879,1.309831,-9.898517,-7.052356,-9.477044,1.221021,1.740752,-2.871064,7.459023,5.128510,8.730366,-3.492771,9.783437,6.290394,1.503048,-5.833517,-3.085830,1.034520,3.252176,5.014316,5.862173,-5.974048,7.764634,-5.647639,-4.556385,5.513242,1.754875,6.560174,1.444226,8.136854,8.062134,-1.655212,-8.141279,-7.461600,-7.724302,2.053212,-8.500523,-7.024198,-1.575538,6.265796,-2.198136,-2.900888,-3.858101,-4.248884,-3.534098,-5.723245,-5.332313,2.929115,-2.728070,-5.569645,-0.319534,-1.660097,-0.542007,-3.720878,6.033854,7.293258,-7.244650,-4.295276,9.417649,3.002474,-8.575109,-8.853012,-1.602868,5.386805,0.070156,4.798232,1.876325,3.449106,2.527369,-2.724296,9.759618,-2.565176,0.015503,-8.093517,-4.188554,-6.343708,-1.682169,1.260856,5.228750,1.032391,-9.600856,-6.399882,6.936305,3.583411,2.975214,0.878480,3.889158,7.749842,-1.104981,-2.865009,9.944556,-5.888488,3.031757,-4.615233,-3.253094,8.363232,8.367056,5.097918,9.588320,6.692067,-6.724335,0.500949,-9.317949,5.704151,5.144899,5.739661,-6.314417,-2.714089,8.775090,-7.042098,-0.243670,7.593981,1.816474,-8.922305,6.879267,-0.976002,6.596828,-1.483991,-7.160709,-4.699894,3.843242,-5.195191,6.920663,9.541775,4.977942,6.756029,0.955708,3.201366,1.813348,-0.544823,3.162061,-2.651033,-9.462389,2.475973,-5.989026,-7.707740,2.458383,-1.299433,6.840031,-7.774329,6.544059,4.931974,-1.244980,-2.950863,-5.737471,-9.429902,8.218659,-8.421561,7.345763,-4.119347,-6.771052,3.139447,0.470310,-1.577054,5.826556,5.347894,-7.428599,-2.355928,-4.745434,-3.628962,5.449464,-9.911379,-5.209962,-6.732967,-5.893976,5.968348,-9.878045,8.006020,-0.013506,-6.627464,-2.325851,4.098759,-0.746106,0.799386,-1.408882,-8.477444,-7.281985,-1.073641,2.725569,7.334792,5.010006,-7.025749,9.875639,4.596429,-8.301055,-6.273272,9.744011,3.713766,4.535644,-1.421755,3.331279,8.059804,-7.517944,-3.151594,-2.994253,5.022284,-9.131539,3.588869,0.663417,-6.387255,0.959364,-5.322218,-5.580016,-1.491133,-4.560271,1.601729,2.658973,-7.704269,-6.596646,-1.517123,-5.764441,-6.343915,1.015739,-1.333129,-9.007945,-0.495535,0.214467,-6.859979,1.940587,3.866309,-9.090316,4.505876,3.649862,1.072240,-4.194156,2.486984,7.295791,3.365177,6.967937,-2.678715,-6.198412,6.305923,5.588487,0.606969,5.137078,9.345936,4.797188,1.193028,-1.511205,-0.557479,-1.180123,5.725495,9.387476,4.126656,-1.518335,-8.320602,-5.294197,9.303870,-9.021243,-9.976624,2.926075,3.050358,-4.411733,-7.400987,2.401442,4.170684,-1.432214,6.458570,-2.035240,-3.608605,-6.006398,3.832598,9.920993,5.550873,-1.385801,4.714809,5.966609,-1.160798,3.915104,-4.771877,-9.790297,9.353216,-9.423592,-0.694834,8.787533,4.979139,-3.350179,-3.866655,6.613941,3.225909,-0.349902,-0.897983,6.645747,6.416180,6.796133,4.883099,-5.590385,-7.122928,2.622694,8.391474,6.415237,6.202930,4.989809,8.000120,3.440441,-5.889408,2.743201,9.439763,-1.395306,-1.448007,-6.589765,7.755073,-1.437355,5.419651,-7.026243,-8.789179,3.838131,8.704957,5.470729,-9.859208,8.127642,-0.960751,2.126255,0.465442,4.071298,3.256879,0.224099,-4.788853,-1.052912,-8.495337,-1.004564,-2.961887,-6.310308,-8.557388,5.912653,-1.560420,-6.917879,2.070969,-9.179431,9.351024,-0.971298,6.425676,9.502390,2.653528,3.451648,-1.509906,-7.997775,6.100324,0.465415,7.047216,-5.921256,6.763072,-9.274329,-9.361487,-4.785087,-9.257400,-4.143465,-6.944553,8.713467,5.378718,3.585751,-8.696529,7.081606,-2.900651,-4.617768,7.457562,0.209195,3.886887,8.511569,-6.496557,3.402614,3.138734,-9.077427,0.150880,4.693270,-7.536544,-8.800638,4.276439,3.768968,-5.461788,5.277616,-8.802487,3.987159,-7.256646,-7.452110,-0.591984,-2.218304,2.983653,7.584107,-2.286230,-3.824532,-3.220304,-4.565514,-8.389021,2.633565,6.739292,-5.250975,-4.731799,4.722960,-8.772098,3.327205,6.722211,-2.430407,0.267807,9.718610,7.639243,-8.549112,-4.108072,6.879916,-9.882854,-4.883537,2.963074,-9.947364,-8.227818,-4.461450,7.223747,2.052199,6.493953,1.477964,9.853302,8.374941,-0.985376,-8.981398,-3.460701,0.441177,1.129536,-6.587304,-2.433600,-4.432348,-2.394262,-5.749173,-9.533349,-1.567440,3.591256,-8.390801,-6.804661,0.307150,-7.150015,1.992930,5.926500,2.602215,-6.991401,4.689196,-1.818560,3.513668,0.849767,-4.844732,4.080402,9.550115,0.575497,-7.696013,4.083216,-9.704734,7.189150,-1.855209,4.892826,1.876887,1.265309,-4.743848,-3.099596,-4.555053,9.141407,-4.757412,9.495234,-8.934946,2.259072,-5.466948,-2.487565,-4.012853,5.459281,2.839869,0.678865,-3.037386,4.589527,-5.620748,0.282474,5.096879,-7.467364,6.063124,-5.254923,-7.062550,-9.813838,-5.301320,6.736543,0.378532,-3.973112,9.014033,1.773536,-6.117776,0.328570,4.732193,-4.967460,6.181079,-3.490834,-5.542900,-5.786321,-1.857685,-6.028933,-5.581408,-2.830146,-3.451231,-4.430443,-7.916118,2.339073,-2.927222,2.285396,3.831536,9.128025,-3.291974,-6.449898,-1.516879,2.741303,4.133182,9.951781,-8.517607,3.490184,-7.423494,-9.289737,-8.040591,-3.862665,-2.020024,-9.374516,3.280086,4.123241,5.216231,-4.871310,-4.173230,-7.873369,3.623886,0.988260,0.219206,-5.474772,-6.152342,-3.928257,0.059813,-0.136665,9.659312,4.797964,-9.036091,-8.293266,-7.661751,7.181200,6.454836,9.087931,4.465721,-3.372716,5.773111,6.211723,2.822730,-5.306530,-9.038775,5.307784,5.952782,-1.552436,3.106767,5.762515,9.035735,-5.610719,5.054570,-3.082279,1.509084,7.944795,9.756418,-7.217549,5.222767,4.102244,1.269602,7.120102,-5.424316,-0.796246,-0.732045,9.116629,-9.651940,-1.264571,4.248842,2.065010,6.933611,-9.458243,5.970486,-5.125277,9.520281,-5.678177,-3.683919,-4.694689,1.702171,-0.467943,-9.846309,0.765438,4.274257,-2.705828,-7.019003,2.381268,0.294024,5.528368,4.076577,4.823866,0.506960,1.522349,1.878074,-4.416517,8.591172,-1.934025,0.717586,-0.759208,-2.425810,6.215260,-4.367105,-3.346813,-5.631920,-8.145832,8.743404,0.659290,7.057232,-8.889041,-5.440404,6.590292,4.450285,6.010042,-1.579161,-1.520038,6.776024,1.702881,-9.520142,0.768113,5.774674,-3.493206,4.440780,-2.207050,2.933669,1.514354,5.886675,5.405505,-5.133662,5.178748,-6.282829,6.922818,-0.360197,-8.455035,0.570392,8.122880,2.795126,7.994159,9.957482,-0.262976,0.091515,-9.326796,-2.517742,8.210188,3.088861,2.845397,-3.558227,3.441981,-6.674792,-4.396897,4.598675,-4.411446,4.597241,5.787459,1.338326,5.317730,5.808093,-8.496210,3.634372,-1.929329,-5.541474,8.041070,0.906862,0.459820,-7.889241,9.246290,-9.353930,-0.441377,7.104851,-4.318466,8.639101,8.129141,-2.504163,5.622252,-0.972330,-1.659131,8.649964,7.175536,-9.776206,-6.630453,-4.026443,-3.540833,-3.925220,0.354471,-9.190215,-2.687329,6.467159,-8.487027,3.149249,-2.945214,9.207259,7.914430,-8.009509,3.097569,5.397017,0.003678,1.997613,-8.491184,-4.806142,-0.434401,-3.171633,5.298091,-5.245017,5.571940,6.068824,2.308460,-5.101984,5.840970,-2.599382,5.968320,4.363862,1.172264,-3.786401,-9.522687,4.901250,1.355396,3.265458,-0.558792,-4.779557,-2.738493,1.137309,-5.980687,-5.411061,-3.843260,9.277414,-8.701153,-7.730999,5.355515,-7.700144,0.308148,-8.941281,6.698764,4.492465,-8.027238,4.831404,0.339744,-9.510637,-3.819655,-7.058328,2.142023,-2.157347,-2.830045,-0.183281,2.290755,5.025176,-8.974777,6.595386,7.882418,6.545187,-6.975800,-2.175412,4.827768,3.539459,2.890345,-4.079514,9.720976,3.402083,4.017097,-1.373584,-4.841104,-1.084806,6.897894,-3.820983,-6.265449,-9.633129,-5.111624,6.324722,-6.032041,3.269640,-2.375603,-5.936251,-6.407316,7.376095,7.125819,-4.739909,1.182603,1.091706,-6.604258,9.059158,6.255975,0.086305,2.260585,-5.029701,8.425501,2.602807,3.688722,-8.859245,1.090351,-1.779132,6.248223,-8.487526,6.548455,9.271425,7.437786,-2.879601,2.528777,-5.399662,-8.067137,-8.888673,-6.395260,6.906055,9.999558,9.121717,0.566788,-9.731253,-6.443630,8.111282,-8.469964,2.478065,-2.272398,-1.186843,2.694764,-1.750683,5.144233,-1.710167,-0.629388,-4.719746,1.351283,3.849632,8.641471,1.271581,-6.336624,7.142754,6.683554,7.240924,-3.892020,6.882834,-7.303100,-7.517901,-0.401346,-8.018627,-8.302105,4.648965,-1.712393,5.905729,-9.403947,-0.955592,4.091798,7.777864,-5.736608,-1.741382,-2.649414,1.558199,3.717755,8.966985,-8.113692,2.166777,-6.915181,-7.877810,8.066969,-2.369670,-3.358836,-8.707521,-0.285443,-1.730116,-9.997245,7.448503,5.488250,-5.331641,-9.281180,-9.807583,8.251194,-7.284933,-6.792990,-7.932480,-1.427957,0.981825,3.973202,-4.472203,7.669412,1.450870,-0.333324,9.905793,1.369037,-2.252793,2.560196,-4.625170,-7.733121,-7.289610,0.271080,-1.239028,0.240865,-2.915011,-0.392560,-2.625260,3.690095,3.072181,-8.567651,3.629788,-3.651293,-6.892782,2.616366,-8.028893,4.116239,-7.771466,-2.359039,-3.440112,7.558340,-1.762979,7.538365,0.909527,-1.662467,-7.651243,9.653066,-6.570250,-2.206018,1.262500,3.762257,8.604548,-0.879587,1.742526,8.072491,-4.726383,-9.906325,-5.743745,3.694274,4.983445,-3.389383,7.616575,8.284052,-0.844171,-3.125282,1.806228,8.465367,-4.244667,1.957402,-3.677667,9.219043,1.943776,-5.588920,9.334542,1.660512,6.889953,5.135517,-8.943436,0.950399,-0.356138,-3.647454,3.085638,-4.536668,-6.224680,-2.069773,-3.137886,0.270076,8.473531,8.198108,-7.973639,5.491518,9.863730,-1.820959,-4.169032,-5.563702,4.502027,-2.125528,-0.213455,-3.974028,-8.823003,-3.079817,-2.710177,-2.006163,5.437545,-9.334205,5.902612,3.995938,-5.361332,-9.677509,7.424201,2.765594,7.946133,-1.851839,5.535259,-3.640184,7.297435,-1.432650,0.398290,3.838392,3.487997,-6.430550,-1.577218,4.777799,2.962336,0.032728,-3.834781,4.659451,-6.726608,3.913166,-4.435075,-5.767831,-1.767497,7.985843,0.218393,-2.683591,-7.243680,9.048002,4.235601,-1.052472,-3.298326,7.079464,-4.148519,3.277043,-4.948419,-7.888817,-2.768596,-5.624732,-9.436367,-1.264776,0.857166,-9.431617,3.161140,-3.224183,-4.702498,4.943282,-2.099047,9.319415,2.105577,6.921333,4.301406,-5.571030,-4.637490,5.603419,-4.278277,3.529627,-8.580212,-3.665209,6.868410,-6.230219,6.770363,9.047627,2.933817,-6.898946,9.809855,-2.718731,-9.685225,-7.526438,-8.902246,6.477906,-6.139210,-7.313721,-6.155664,-5.433421,2.742799,7.047782,1.863800,-0.035436,4.210251,4.217100,-7.546982,7.426143,4.730412,-4.904724,6.655616,-8.358422,-0.364121,0.133640,2.301039,-0.243610,-8.622060,1.140927,-9.099899,-8.620473,7.619548,-6.975895,-2.764569,-4.005959,-7.215555,3.198208,-3.388136,5.158512,-6.549169,1.065145,-4.610445,-5.619570,7.358426,-1.139862,8.597432,6.925175,4.437722,-8.504061,7.904432,0.834788,8.827193,-4.878172,-6.618995,-2.201360,-1.169805,8.367202,-6.757888,8.566878,3.205749,6.325529,2.737471,6.164934,3.003491,-8.789337,-4.184783,-3.645044,-2.266601,9.134039,-7.640393,0.928067,4.704481,8.682248,-4.439724,5.378548,7.126487,-8.662812,8.896681,9.964194,6.040062,-1.841427,0.865164,-6.974669,1.096927,-8.209338,9.773751,-9.157817,-5.464174,-2.786163,-7.632142,0.472601,2.206500,-2.074861,7.488376,3.334404,6.634393,5.913776,-1.837830,-7.087489,0.085311,7.150002,-2.601148,-1.625358,1.142084,7.849448,-4.669423,5.569152,-1.024243,9.881830,8.114973,3.626055,-5.243631,1.301462,-3.284193,-1.380978,7.515879,-1.759744,1.982842,-5.137148,-5.512366,-4.504285,-6.973472,-5.562396,-6.537077,8.979709,-4.401255,-2.636272,6.515186,6.420018,-2.660672,6.631056,9.730186,8.010218,-8.147076,9.496257,-0.800065,-1.190619,-3.315858,3.236930,-7.738576,-8.548261,1.787470,5.366526,9.759032,-2.217390,-7.615098,4.352446,-6.149796,-1.917369,-7.033556,1.708179,9.714794,-6.715545,-2.215922,-7.632169,-0.504175,2.574487,-1.315461,-6.403352,6.130590,5.306539,-0.395460,4.250399,4.332494,-8.077978,0.719703,-6.459610,1.656788,-3.400413,2.687858,-6.607056,-8.695526,1.994123,-6.637217,-0.049356,4.300138,1.378235,-9.861076,-5.623323,-7.317470,7.650535,-9.608058,-5.081218,-1.822996,2.643994,-4.086008,8.097038,9.767882,0.034510,-9.219114,6.432216,5.953357,-0.041937,6.494818,0.327834,2.593974,1.404717,2.382037,5.748964,4.875253,3.309076,-6.379919,-5.592058,9.783802,7.063459,7.390364,2.052669,7.363667,-5.064220,-5.048162,-5.848282,-6.026781,0.646336,0.164346,-4.696569,9.614211,-6.460360,-4.628363,2.007904,-4.705143,-6.033387,4.527823,-1.508126,5.235838,4.512285,9.695448,9.040732,-9.136726,6.563524,4.872160,-5.111471,0.026757,-7.898267,4.554584,1.428767,-0.631942,0.458973,-7.856505,-2.928080,-5.306387,6.046624,6.877835,1.899166,-3.956782,1.683820,-6.124429,-7.783928,7.806311,-6.861779,2.417712,-9.377646,7.597940,6.915269,-5.881466,6.240990,-8.498119,-3.059684,7.206393,3.161794,-1.707408,8.458943,-0.630867,-7.339808,-9.298889,-6.635592,-9.890547,0.607564,-2.272197,2.351733,-3.190809,6.270068,-6.785985,-5.406043,8.249963,6.462299,-8.164996,9.548610,-1.077308,-5.657261,-5.427642,-2.404387,-2.297628,-7.558961,5.095221,6.474285,-9.296109,-2.756160,-1.764325,-2.262951,-4.988833,4.068510,-2.098962,1.533317,-8.078602,3.950850,-2.421491,3.324330,7.241696,6.864556,-0.568947,-1.799562,9.311446,6.607056,6.588113,2.269901,8.689996,-6.428723,4.633042,-2.198160,-0.145919,-5.997651,-4.160377,9.169250,7.330872,-0.981619,5.833952,-6.784259,9.152031,-5.126753,0.668256,-5.660534,-9.701312,-6.521632,-0.542415,8.569696,-7.518094,5.208745,2.139614,-5.664441,2.290314,-0.856190,1.854761,6.633207,-4.875680], dtype = "float64")#candidate|12113|(1584,)|const|float64
call_12112 = relay.TupleGetItem(func_2825_call(relay.reshape(const_12113.astype('float64'), [16, 11, 9])), 1)
call_12114 = relay.TupleGetItem(func_2827_call(relay.reshape(const_12113.astype('float64'), [16, 11, 9])), 1)
func_10931_call = mod.get_global_var('func_10931')
func_10933_call = mutated_mod.get_global_var('func_10933')
const_12141 = relay.const([-0.012977,2.119594,4.525655,9.625916,-2.408567,-1.724193,1.025422,-9.377818,-6.566321,0.383297,4.402041,8.550082,6.160039,6.159215,-8.505853,0.449445,3.483162,4.971404,-8.046084,-5.498901,2.170772,5.884993,7.556177,0.529031,-7.389928,-7.008952,1.428222,-9.344541,1.986047,9.119942,-8.061476,-4.907848,1.875844,-0.534761,-4.725769,-6.477309,6.028299,-0.999660,-2.331408,-9.605073,8.658046,-0.697879,1.109518,5.544152,-8.227995,-3.301996,4.353183,-1.712714,-4.147592,-2.580769,6.684888,4.375866,-9.845211,-5.339038,4.007853,9.757835,2.406066,0.971188,-8.773692,0.059180,8.212209,4.110205,-5.957121,-3.927951,5.482043,2.127424,1.207142,4.935279,3.743983,-7.561064,1.311544,2.046177,9.754967,1.694323,3.797892,-8.093133,-9.414330,0.760210,9.126050,7.616961,-0.873256,-5.604346,2.148042,1.108245,4.336878,-6.046313,6.920407,5.295646,-2.107728,5.044529,-1.007145,8.964301,1.418648,8.307755,-6.095731,0.247083,-4.339702,-3.986895,-4.886546,-0.704073,-6.792163,-9.332376,-6.022036,-8.648104,-9.726318,-0.773970,-7.756827,9.639889,-4.417984,-3.888743,1.621867,8.999596,8.155146,-2.399224,3.240275,7.354552,5.964391,7.515350,-9.058750,-7.946942,7.363170,5.432356,-5.010804,-6.387777,9.440439,8.197432,-2.044622,-1.881928,8.176087,9.894664,3.932826,-5.185806,-5.261119,-2.361566,6.381580,6.518248,8.287375,-5.736300,5.713944,-5.749390,-2.416344,-7.992958,-0.173368,-3.416803,9.424059,-6.172431,4.910264,1.059635,5.190882,-5.107009,-9.476047,2.998785,-1.771602,-9.210185,-5.330978,-9.068466,-9.566315,-8.888841,-4.923014,-4.525813,-8.033173,-8.763976,6.221659,-1.618901,-1.928238,-2.928809,-8.075450,-7.306371,3.820300,0.396981,-7.203729,-9.358721,-4.786600,9.542935,-8.983201,-9.875199,1.892369,-9.123496,-2.385782,4.802092,9.114003,1.068626,3.391492,-7.532941,-7.757159,5.234269,3.819769,-1.291062,-4.093043,-3.684301,0.209564,5.443444,-0.383455,-9.289294,-1.345777,3.189248,9.184397,-6.429461,-7.161416,2.998836,-8.314344,2.317764,3.567732,3.502405,-7.223701,-3.759484,-9.472141,-4.893189,6.216200,1.584915,-3.115286,8.998821,2.790474,-1.096360,-0.844572,6.259793,-7.790355,-5.064812,-8.364845,3.760823,-1.655556,-1.587293,-6.240699,4.470214,1.513205,9.927469,9.270580,8.185749,-1.986486,-1.345764,-2.368527,2.514825,2.935401,-4.001291,0.123088,-3.585743,6.118969,-6.653303,8.579089,6.607934,-6.914767,-3.710941,4.994777,1.860225,3.174702,-5.773937,3.345904,3.500480,0.164394,-0.365519,0.691076,-5.135918,4.458216,-1.315700,-7.816933,-3.520204,0.701853,-3.764297,-8.120453,-7.123942,-5.124117,8.251689,5.358457,-0.737672,-8.583695,2.241622,0.364414,-9.779542,8.676407,8.181010,-4.319476,-6.890819,-5.427654,-7.004743,-5.461481,-1.954507,8.735328,-3.171685,-7.959077,-2.855484,4.832262,4.572972,9.589884,-1.071173,-8.595579,1.628706,5.843197,-9.196511,-2.909435,-9.882613,-3.256146,5.938175,4.451634,-8.851021,-6.752002,-0.966186,-2.752832,-5.910893,-6.704482,-2.432255,-8.250598,9.478155,-8.430107,6.142007,3.494921,2.166489,1.086269,3.185699,6.564632,-1.601400,-2.551315,7.324225,-1.788708,6.743291,-3.522636,-5.985175,8.113812,-2.304303,2.662205,-3.986145,-9.529194,-0.637421,4.888090,-4.539947,5.620245,-6.324917,6.812635,0.303952,-4.517135,-2.049139,-0.987557,6.794413,2.003733,2.854861,-8.134899,1.124529,-9.787393,-2.136098,6.751826,-7.650967,6.267808,9.382403,-0.508289,8.703452,4.400721,-7.648451,-3.733865,8.901181,1.288021,-4.502194,-6.991248,-4.950067,-7.671380,-0.969347,6.656940,-4.977720,-9.190714,-0.633575,-8.300617,8.189066,4.681643,-4.656117,5.262733,2.394247,-8.530072,-3.744260,9.171388,7.092140,5.919716,-5.043932,-9.749760,-9.505110,-1.543276,-7.708224,-8.354585,-0.021121,5.897664,6.492562,-7.628404,8.804096,-4.890509,9.748389,5.985191,5.798160,8.297940,0.836304,4.344863,-4.814808,-6.470774,-1.171693,-6.786979,4.745702,3.494118,-1.708735,9.602214,3.525166,-4.219855,-2.076809,0.954426,-1.971595,4.410232,1.887064,5.920329,-7.303131,-1.463984,-6.734541,4.789643,-0.269076,-9.853597,-5.811098,-4.720118,-8.410788,-1.555954,-3.939103,-6.380955,-2.425622,9.403857,-0.761789,1.341062,-6.942653,-1.112392,-5.006081,-7.251000,-2.429434,-1.834949,1.092826,-2.996377,3.335228,-0.392264,4.906072,-7.595463,-7.927249,9.384994,6.494198,8.410931,-2.041445,-3.713104,5.119270,2.811215,-0.055692,-0.966518,-4.563426,5.727631,3.430517,-6.507945,-1.630774,6.647699,-4.410139,-8.162928,7.429816,6.087911,4.115484,2.616872,8.973105,-2.205197,-9.561808,1.994605,-6.454120,-8.727050,-4.841039,-1.560936,1.582228,7.528749,-8.083976,9.489126,3.509244,0.326444,0.663388,6.771991,5.700548,-2.002176,-4.543720,-7.840047,-0.080495,-8.078445,3.527898,3.051440,-4.621203,-3.068469,-0.693134], dtype = "float32")#candidate|12141|(480,)|const|float32
call_12140 = relay.TupleGetItem(func_10931_call(relay.reshape(const_12141.astype('float32'), [4, 8, 15])), 1)
call_12142 = relay.TupleGetItem(func_10933_call(relay.reshape(const_12141.astype('float32'), [4, 8, 15])), 1)
output = relay.Tuple([call_12096,call_12110,call_12112,const_12113,call_12140,const_12141,])
output2 = relay.Tuple([call_12097,call_12111,call_12114,const_12113,call_12142,const_12141,])
func_12150 = relay.Function([], output)
mod['func_12150'] = func_12150
mod = relay.transform.InferType()(mod)
output = func_12150()
func_12151 = relay.Function([], output)
mutated_mod['func_12151'] = func_12151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11381_call = mod.get_global_var('func_11381')
func_11382_call = mutated_mod.get_global_var('func_11382')
call_12167 = func_11381_call()
call_12168 = func_11381_call()
output = call_12167
output2 = call_12168
func_12174 = relay.Function([], output)
mod['func_12174'] = func_12174
mod = relay.transform.InferType()(mod)
output = func_12174()
func_12175 = relay.Function([], output)
mutated_mod['func_12175'] = func_12175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9416_call = mod.get_global_var('func_9416')
func_9417_call = mutated_mod.get_global_var('func_9417')
call_12217 = func_9416_call()
call_12218 = func_9416_call()
output = relay.Tuple([call_12217,])
output2 = relay.Tuple([call_12218,])
func_12242 = relay.Function([], output)
mod['func_12242'] = func_12242
mod = relay.transform.InferType()(mod)
output = func_12242()
func_12243 = relay.Function([], output)
mutated_mod['func_12243'] = func_12243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11872_call = mod.get_global_var('func_11872')
func_11873_call = mutated_mod.get_global_var('func_11873')
call_12265 = relay.TupleGetItem(func_11872_call(), 2)
call_12266 = relay.TupleGetItem(func_11873_call(), 2)
func_7500_call = mod.get_global_var('func_7500')
func_7502_call = mutated_mod.get_global_var('func_7502')
var_12275 = relay.var("var_12275", dtype = "bool", shape = ())#candidate|12275|()|var|bool
call_12274 = func_7500_call(relay.reshape(var_12275.astype('bool'), []))
call_12276 = func_7500_call(relay.reshape(var_12275.astype('bool'), []))
func_11427_call = mod.get_global_var('func_11427')
func_11429_call = mutated_mod.get_global_var('func_11429')
call_12284 = relay.TupleGetItem(func_11427_call(), 5)
call_12285 = relay.TupleGetItem(func_11429_call(), 5)
func_540_call = mod.get_global_var('func_540')
func_542_call = mutated_mod.get_global_var('func_542')
var_12287 = relay.var("var_12287", dtype = "float32", shape = (14,))#candidate|12287|(14,)|var|float32
call_12286 = relay.TupleGetItem(func_540_call(relay.reshape(var_12287.astype('float32'), [14, 1, 1])), 0)
call_12288 = relay.TupleGetItem(func_542_call(relay.reshape(var_12287.astype('float32'), [14, 1, 1])), 0)
output = relay.Tuple([call_12265,call_12274,var_12275,call_12284,call_12286,var_12287,])
output2 = relay.Tuple([call_12266,call_12276,var_12275,call_12285,call_12288,var_12287,])
func_12302 = relay.Function([var_12275,var_12287,], output)
mod['func_12302'] = func_12302
mod = relay.transform.InferType()(mod)
mutated_mod['func_12302'] = func_12302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12302_call = mutated_mod.get_global_var('func_12302')
var_12304 = relay.var("var_12304", dtype = "bool", shape = ())#candidate|12304|()|var|bool
var_12305 = relay.var("var_12305", dtype = "float32", shape = (14,))#candidate|12305|(14,)|var|float32
call_12303 = func_12302_call(var_12304,var_12305,)
output = call_12303
func_12306 = relay.Function([var_12304,var_12305,], output)
mutated_mod['func_12306'] = func_12306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10747_call = mod.get_global_var('func_10747')
func_10749_call = mutated_mod.get_global_var('func_10749')
call_12316 = relay.TupleGetItem(func_10747_call(), 0)
call_12317 = relay.TupleGetItem(func_10749_call(), 0)
func_5512_call = mod.get_global_var('func_5512')
func_5516_call = mutated_mod.get_global_var('func_5516')
var_12339 = relay.var("var_12339", dtype = "float32", shape = (455, 3))#candidate|12339|(455, 3)|var|float32
const_12340 = relay.const([False,False,True,True,True,True,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False], dtype = "bool")#candidate|12340|(40,)|const|bool
const_12341 = relay.const([True,True,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,True,False,False,True,False,True,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,True,True,False,False,False,True,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,True,True,False,False,True,True,False,False,True,True,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,True,False,False,True,True,False,False,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,False,True,True,True,True,True,False,False,True,False,True,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,False,True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,True,False,True,True,True,False,True,False,False,False,False,False,False,True,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,False,False], dtype = "bool")#candidate|12341|(560,)|const|bool
call_12338 = relay.TupleGetItem(func_5512_call(relay.reshape(var_12339.astype('float32'), [13, 15, 7]), relay.reshape(const_12340.astype('bool'), [40,]), relay.reshape(const_12341.astype('bool'), [40, 14]), ), 3)
call_12342 = relay.TupleGetItem(func_5516_call(relay.reshape(var_12339.astype('float32'), [13, 15, 7]), relay.reshape(const_12340.astype('bool'), [40,]), relay.reshape(const_12341.astype('bool'), [40, 14]), ), 3)
var_12353 = relay.var("var_12353", dtype = "float32", shape = (455, 3))#candidate|12353|(455, 3)|var|float32
bop_12354 = relay.mod(var_12339.astype('float32'), relay.reshape(var_12353.astype('float32'), relay.shape_of(var_12339))) # shape=(455, 3)
func_10026_call = mod.get_global_var('func_10026')
func_10027_call = mutated_mod.get_global_var('func_10027')
call_12358 = func_10026_call()
call_12359 = func_10026_call()
output = relay.Tuple([call_12316,call_12338,const_12340,const_12341,bop_12354,call_12358,])
output2 = relay.Tuple([call_12317,call_12342,const_12340,const_12341,bop_12354,call_12359,])
func_12378 = relay.Function([var_12339,var_12353,], output)
mod['func_12378'] = func_12378
mod = relay.transform.InferType()(mod)
var_12379 = relay.var("var_12379", dtype = "float32", shape = (455, 3))#candidate|12379|(455, 3)|var|float32
var_12380 = relay.var("var_12380", dtype = "float32", shape = (455, 3))#candidate|12380|(455, 3)|var|float32
output = func_12378(var_12379,var_12380,)
func_12381 = relay.Function([var_12379,var_12380,], output)
mutated_mod['func_12381'] = func_12381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10641_call = mod.get_global_var('func_10641')
func_10643_call = mutated_mod.get_global_var('func_10643')
call_12446 = relay.TupleGetItem(func_10641_call(), 0)
call_12447 = relay.TupleGetItem(func_10643_call(), 0)
func_6118_call = mod.get_global_var('func_6118')
func_6121_call = mutated_mod.get_global_var('func_6121')
const_12476 = relay.const([9.498602,5.466127,-0.925572,6.863033,9.359066,9.137949,6.423944,2.379364,3.586892,3.693706,6.519266,1.236838,-1.162873,0.505709,-8.456677,3.331975,8.566517,3.010138,-4.392850,2.479031,-7.088410,2.223299,-9.883921,-7.330020,7.007244,4.099272,-4.857688,8.136739,-0.769473,-9.685943,2.337845,-8.407033,6.438056,-0.981261,-5.670926,2.650457,-3.164377,-9.971693,7.061413,6.943875,6.699088,2.990809,8.078774,-8.187633,-8.833974,-8.276516,-9.414998,-0.666240,2.780868,-8.450971,6.967202,-2.273337,-4.728205,-4.513814,-0.519317,0.226343,0.142409,4.553723,7.791050,-3.036021,-7.391413,-4.390171,7.231145,-6.041622,8.026478,-6.945576,-7.878926,8.796684,4.559074,8.263683,8.579754,7.779446,0.065274,3.291262,7.178929,-8.198225,-0.584694,-2.259172,-4.193131,-0.596358,0.456540,-4.262877,-5.399664,1.908949,3.706423,2.350832,7.266109,3.859563,4.277668,1.228094,-1.038535,-6.239474,-0.384947,-4.620440,-2.801156,4.825373,1.169980,0.972220,4.214686,-6.671106,3.389405,9.789268,-2.646465,-5.883900,8.837599,-9.329002,9.597007,-9.628026,-2.028787,-1.091220,-0.465251,-2.494526,0.929359,3.840344,-3.154509,-9.687635,8.728968,-8.257555,-7.779212,7.497142,4.965159,-8.734630,-3.122058,-6.700421,4.388239,0.299803,-0.869932,-4.496367,-5.619929,-9.216104,8.050009,-7.289207,-8.859364,-1.745575,0.969887,-4.614221,-6.701951,-2.262307,-4.476265,6.175714,7.542285,8.375532,-8.072392,-8.420720,1.634474,-7.073441,1.639821,2.773737,0.408202,-8.308868,6.691946,1.958975,6.045200,-5.443012,8.799911,-8.821896,7.319458,-0.759664,8.328338,-1.160376,-3.535791,5.819134,7.260647,3.747380,-9.056838,-3.895652,6.517332,0.883072,8.767299,-0.170388,0.989030,8.516532,-9.535483,1.774792,-3.594442,-9.625070,-9.283930,-6.548415,-5.652849,-1.282977,-5.735698,-4.489440,8.474036,-4.430737,9.840489,5.242359,6.729443,8.642578,-2.292107,0.921853,-5.654550,3.450308,5.925209,1.192932,-8.637887,7.606985,-8.193717,-0.362621,9.449525,-6.161694,0.112030,-1.260642,-7.573092,-3.625483,-2.037618,-5.977162,8.065395,4.802048,1.519137,-8.642048,-7.771219,-8.448673,6.906455,-8.758069,-1.315758,4.417050,-3.166707,-5.321263,-9.686259,-5.735300,1.243358,4.512462,-3.161367,5.370683,1.003663,0.655002,0.110923,-6.960640,-3.240973,-8.510007,7.909580,-5.265236,8.150084,2.537571,5.040442,-8.124867,-3.615533,2.248620,-5.224604,-0.051596,-2.104500,2.483900,-5.448359,-4.814803,9.165601,6.912459,1.133269,-6.552617,-9.673828,-4.859338,0.122283,-5.339783,-6.356743,1.942941,7.910612,1.550117,6.068962,3.639741,-3.908105,7.178763,-7.286915,2.703164,-5.593869,-9.959756,4.865318,3.865767,3.785851,-6.141464,4.318911,-3.802115,8.144261,8.802030,6.495548,-8.298636,-1.206679,7.738577,-0.620055,-4.720841,-2.154275,-4.968727,9.710417,8.985227,5.108457,7.923758,5.866984,1.618510,1.569384,9.622957,-7.582739,-0.156172,9.614941,8.566474,-6.737904,2.686248,4.482778,-2.997006,3.792276,4.533596,4.783861,8.887307,0.194746,-8.678584,0.095802,0.576412,0.954779,3.452764,7.889641,3.255720,-6.618460,-7.598322,-7.543606,6.205589,-5.597336,-3.510568,7.661439,-9.724058,1.825078,5.880791,7.868666,-9.763061,-6.458679,6.657893,-4.437871,-5.197681,7.238914,-0.113592,9.303429,6.835529,2.392040,-1.568950,-4.722157,7.376840,6.010391,-4.770028,1.346114,9.264113,-3.824350,7.973455,0.239318,-8.487943,-4.590802,-9.313696,-4.058881,-5.429541,-3.528680,-4.270093,2.406504,-4.827264,-1.230394,3.508000,4.780973,2.427329,-6.842749,-2.935161,-5.667455,-5.242624,-9.432121,2.382095,3.994625,-6.883175,-1.091780,-9.120935,-7.646388,-1.361857,0.708544,-7.601524,-0.290850,7.019477,-7.668773,5.381150,-8.213432,5.020785,-4.549594,7.748951,-1.705992,8.060758,-7.992078,1.998059,-3.667974,5.672335,0.024643,-6.728352,1.312052,-3.464491,-6.871657,7.691207,-7.181452,2.779030,9.537392,-3.710476,-9.535570,-5.262720,5.030027,0.415479,5.802594,5.822781,-0.746634,-7.389983,2.953378,3.600484,-5.328220,-0.914067,3.690490,-2.222085,-5.655783,1.024003,-9.901385,3.628745,5.465212,-4.509082,0.057267,0.656574,4.677785,-1.754191,2.697164,-7.318669,-3.861862,-6.490677,-3.785646,-2.791915,0.482525,1.558068,0.532482,0.204720,7.667790,2.264989,3.742472,-4.854222,-6.276428,-2.752268,-1.192539,-6.538701,2.451914,9.101790,6.768505,1.443967,7.699816,-5.846536,1.734023,3.237633,8.393960,-7.035272,1.682709,-7.653058,1.593151,7.255286,4.535233,-9.894126,-5.416473,0.692089,7.381154,-8.680858,7.864061,5.457001,-0.954651,-7.959180,6.346998,4.068211,5.733117,-9.242471,-7.783252,3.009566,3.821122,-0.285383,9.308305,2.085780,-5.429199,1.138882,5.022791,4.636251,8.602946,7.480549,-4.976543,4.150846,-7.599842,-9.744787,-8.794541,1.460437,3.799954,0.260233], dtype = "float32")#candidate|12476|(480,)|const|float32
call_12475 = func_6118_call(relay.reshape(const_12476.astype('float32'), [4, 8, 15]))
call_12477 = func_6118_call(relay.reshape(const_12476.astype('float32'), [4, 8, 15]))
output = relay.Tuple([call_12446,call_12475,const_12476,])
output2 = relay.Tuple([call_12447,call_12477,const_12476,])
func_12500 = relay.Function([], output)
mod['func_12500'] = func_12500
mod = relay.transform.InferType()(mod)
output = func_12500()
func_12501 = relay.Function([], output)
mutated_mod['func_12501'] = func_12501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10211_call = mod.get_global_var('func_10211')
func_10212_call = mutated_mod.get_global_var('func_10212')
call_12599 = func_10211_call()
call_12600 = func_10211_call()
func_9328_call = mod.get_global_var('func_9328')
func_9334_call = mutated_mod.get_global_var('func_9334')
const_12630 = relay.const([3,-2,7,5,1,-3,-1,9,-7,-6,-5,-4,7,9,5,7,-2,-10,-2,-8,-6,7,-8,-3,-5,10,5,-10,-4,-8,-7,-6,3,-9,-2,8,-1,-5,-1,-6,1,-8,-7,-1,-7,9,-4,-2,-2,2,9,-2,-6,1,-7,-8,10,7,2,8,4,3,4,-5,-8,2,8,10,-3,5,-6,10,-9,-5,2,-2,3,-6,-3,-5,9,-8,3,5,7,-6,5,2,1,-8,-3,1,8,-2,8,1,7,6,-7,4,1,10,-5,1,-10,-1,9,-8,9,9,-7,7,-10,-4,4,-3,-9,2,-5,-4,-1,-5,-8,9,-3,7,9,-8,6,7,9,4,3,5,-8,1,3,2,-3,1,1,7,-1,-10,6,-5,-7,6,5,-8,-8,4,8,-5,9,6,1,2,10,-8,-1,-3,4,-10,1,-3,10,-2,-5,9,10,-6,3,-6,-1,-1,-9,-3,-6,-3,-5,-5,4,-3,-4,-5,-2,-9,10,-9,-10,-5,7,-2,-3,1,1,-2,5,4,-10,6,-9,-8,-10,1,-7,7,-6,-8,-3,-8,-7,9,-6,3,-3,9,-6,10,3,-4,-8,6,-1,3,-5,2,1,-6,-6,6,-8,1,3,-9,-3,-9,-5,4,-1,-4,2,-8,7,2,3,-5,5,6,-7,4,-8,-4,-10,-1,-7,-7,8,2,1,1,3,8,1,-6,9,-2,-5,-9,5,7,-4,-1,-2,-2,-10,-9,-8,-9], dtype = "int32")#candidate|12630|(280,)|const|int32
const_12631 = relay.const([[-1,-1,-2,8,10,-4,4,2,2,10,6,-5,10,-8,5,8,-10,-6,3,-10,3,4,3,-9,6,9,3,2,7,4,5,9,-1,8,9,7,-2,-1,-10,10,-10,-8,4,8,10,-3,-4,-10,5,10,-8,6,-9,6,7,-5,-6,-2,3,-2,-2,9,5,-2,1,-6,9,8,-9,9,-2,-5,-7,9,-6,4,5,-3,-5,3,-7,5,-1,7,-9,9,9,2,-2,-8,3,8,5,8,-8,-6,-2,-2,3,-4,-6,-8,9,-2,2,-9,10,-2,-1,-7,-5,-6,5,1,-9,-2,10,-9,9,-9,-9,-7,8,-6,-2,-7,-7,4,-3,1,2,5,3,-10,-5,-7,-7,-5,-4,3,-5,4,5,5,-5,-10,-10,-8,10,9,-6,10,-9,-8,6,-10,4,-7,2,-9,-8,3,-5,-3,10,4,6,-1,9,-9,-1,-9,5,-5,6,5,2,-2,-2,6,4,-9,-4,-7,-10,-1,9,7,6,2,-6,7,-6,9,-3,9,-4,10,-9,-2,-7,-1,5,-10,-1,-2,-9,9,8,-3,-4,8,1,8,9,10,-5,2,-10,-10,7,2,-8,3,-10,7,-1,9,-7,3,-9,1,3,-3,-6,-5,-4,8,9,-8,-10,-10,1,2,-10,-3,-7,2,-8,4,-9,-6,10,-5,-7,-8,9,9,-9,10,-7,8,-7,-5,-7,-8,2,7,8,-10,6,-4,-6,-7,-4,-4,-1,-7,3,3,5,-6,5,-6,9,2,4,10,-8,4,-5,-7,3,5,7,7,1,-6,9,9,-10,3,6,-1,-2,10,-5,6,-10,3,-10,7,4,-6,-7,-10,6,10,-7,-10,-8,-8,5,9,4,-1,2,4,3,-6,-6,7,2,-6,10,9,4,9,1,7,1,10,5,-7,5,-1,2,3,-5,4,-4,-3,2,10,-1,-1,-4,-4,-6,-9,6,9,8,-3,-10,-10,10,5,-5,-7,3,-9,-10,7,-5,6,8,1,-7,1,-1,-4,-4,5,5]], dtype = "int64")#candidate|12631|(1, 385)|const|int64
var_12632 = relay.var("var_12632", dtype = "int32", shape = (1800,))#candidate|12632|(1800,)|var|int32
var_12633 = relay.var("var_12633", dtype = "uint16", shape = ())#candidate|12633|()|var|uint16
call_12629 = relay.TupleGetItem(func_9328_call(relay.reshape(const_12630.astype('int32'), [280,]), relay.reshape(const_12631.astype('int64'), [385,]), relay.reshape(var_12632.astype('int32'), [1800,]), relay.reshape(var_12633.astype('uint16'), []), ), 3)
call_12634 = relay.TupleGetItem(func_9334_call(relay.reshape(const_12630.astype('int32'), [280,]), relay.reshape(const_12631.astype('int64'), [385,]), relay.reshape(var_12632.astype('int32'), [1800,]), relay.reshape(var_12633.astype('uint16'), []), ), 3)
output = relay.Tuple([call_12599,call_12629,const_12630,const_12631,var_12632,var_12633,])
output2 = relay.Tuple([call_12600,call_12634,const_12630,const_12631,var_12632,var_12633,])
func_12635 = relay.Function([var_12632,var_12633,], output)
mod['func_12635'] = func_12635
mod = relay.transform.InferType()(mod)
var_12636 = relay.var("var_12636", dtype = "int32", shape = (1800,))#candidate|12636|(1800,)|var|int32
var_12637 = relay.var("var_12637", dtype = "uint16", shape = ())#candidate|12637|()|var|uint16
output = func_12635(var_12636,var_12637,)
func_12638 = relay.Function([var_12636,var_12637,], output)
mutated_mod['func_12638'] = func_12638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11319_call = mod.get_global_var('func_11319')
func_11320_call = mutated_mod.get_global_var('func_11320')
call_12646 = relay.TupleGetItem(func_11319_call(), 1)
call_12647 = relay.TupleGetItem(func_11320_call(), 1)
func_9908_call = mod.get_global_var('func_9908')
func_9909_call = mutated_mod.get_global_var('func_9909')
call_12663 = relay.TupleGetItem(func_9908_call(), 0)
call_12664 = relay.TupleGetItem(func_9909_call(), 0)
func_9546_call = mod.get_global_var('func_9546')
func_9548_call = mutated_mod.get_global_var('func_9548')
call_12666 = relay.TupleGetItem(func_9546_call(), 0)
call_12667 = relay.TupleGetItem(func_9548_call(), 0)
func_12302_call = mod.get_global_var('func_12302')
func_12306_call = mutated_mod.get_global_var('func_12306')
const_12674 = relay.const(False, dtype = "bool")#candidate|12674|()|const|bool
const_12675 = relay.const([-7.985551,-3.110647,-3.047658,8.099751,-5.686801,-8.517477,-9.090118,8.799295,-3.666151,3.758577,-0.653524,1.993850,8.912804,3.675998], dtype = "float32")#candidate|12675|(14,)|const|float32
call_12673 = relay.TupleGetItem(func_12302_call(relay.reshape(const_12674.astype('bool'), []), relay.reshape(const_12675.astype('float32'), [14,]), ), 2)
call_12676 = relay.TupleGetItem(func_12306_call(relay.reshape(const_12674.astype('bool'), []), relay.reshape(const_12675.astype('float32'), [14,]), ), 2)
output = relay.Tuple([call_12646,call_12663,call_12666,call_12673,const_12674,const_12675,])
output2 = relay.Tuple([call_12647,call_12664,call_12667,call_12676,const_12674,const_12675,])
func_12696 = relay.Function([], output)
mod['func_12696'] = func_12696
mod = relay.transform.InferType()(mod)
output = func_12696()
func_12697 = relay.Function([], output)
mutated_mod['func_12697'] = func_12697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10641_call = mod.get_global_var('func_10641')
func_10643_call = mutated_mod.get_global_var('func_10643')
call_12705 = relay.TupleGetItem(func_10641_call(), 0)
call_12706 = relay.TupleGetItem(func_10643_call(), 0)
uop_12717 = relay.sigmoid(call_12705.astype('float64')) # shape=(128,)
uop_12719 = relay.sigmoid(call_12706.astype('float64')) # shape=(128,)
func_1041_call = mod.get_global_var('func_1041')
func_1045_call = mutated_mod.get_global_var('func_1045')
var_12723 = relay.var("var_12723", dtype = "float64", shape = (624,))#candidate|12723|(624,)|var|float64
call_12722 = relay.TupleGetItem(func_1041_call(relay.reshape(var_12723.astype('float64'), [3, 13, 16]), relay.reshape(uop_12717.astype('int64'), [128,]), ), 0)
call_12724 = relay.TupleGetItem(func_1045_call(relay.reshape(var_12723.astype('float64'), [3, 13, 16]), relay.reshape(uop_12717.astype('int64'), [128,]), ), 0)
func_10242_call = mod.get_global_var('func_10242')
func_10244_call = mutated_mod.get_global_var('func_10244')
call_12735 = func_10242_call()
call_12736 = func_10242_call()
func_9328_call = mod.get_global_var('func_9328')
func_9334_call = mutated_mod.get_global_var('func_9334')
const_12749 = relay.const([[-6,-6,8,-3,10,9,-8,9,4,-9,-10,5,-1,-6,10,2,4,10,-2,5,8,9,-8,-4,-2,9,7,-4],[6,-7,-5,-4,-7,-1,9,10,-7,7,-9,8,-5,-3,-10,3,8,-4,-8,-4,-5,1,-2,-3,-2,-6,1,-4],[10,9,8,-8,3,-1,-10,-6,-1,-9,10,4,2,6,-2,8,-10,4,2,-6,3,5,-4,10,-10,10,1,-1],[-2,4,9,-7,-2,7,-2,8,10,-9,-6,2,8,-3,6,1,3,3,1,3,9,-7,2,-6,-1,-1,-6,3],[6,4,-4,-9,4,10,-10,-9,2,-1,1,1,4,1,4,5,-9,-2,-8,1,5,-7,4,-5,2,-3,3,7],[5,-9,-9,8,7,-3,5,5,5,4,-8,6,-4,2,-2,-5,6,-5,-10,5,7,2,-3,-9,-1,-10,1,-10],[6,10,-3,-6,-1,-6,-5,10,-8,-3,3,1,-4,-4,8,10,8,-3,-7,9,-1,-2,-5,-10,7,6,-5,6],[10,4,4,4,-6,-2,-8,-2,6,-5,8,-6,9,7,-10,3,4,10,3,-9,-10,1,-4,7,9,-2,9,2],[-9,2,-3,-1,-4,5,2,-6,7,-2,-2,-2,3,6,2,-2,8,-4,10,-9,4,-6,8,-1,-1,7,-4,-2],[4,2,9,-1,-9,9,-8,-6,10,1,3,-4,-6,8,1,10,-10,-3,6,6,-7,-5,-3,9,2,-3,3,9]], dtype = "int32")#candidate|12749|(10, 28)|const|int32
var_12750 = relay.var("var_12750", dtype = "int64", shape = (1, 385))#candidate|12750|(1, 385)|var|int64
const_12751 = relay.const([3,-6,3,-3,2,-4,3,-2,-10,-5,1,5,9,2,-7,1,-6,8,4,-6,9,-5,-9,-5,-2,-10,-2,-4,10,-4,-1,-9,-3,6,6,6,-1,-8,-5,-7,-5,-1,-1,-6,1,8,-7,10,-1,9,-10,3,-5,-10,-5,-9,-6,-5,-7,10,3,1,2,-1,-8,2,-7,-9,-7,-5,8,3,6,4,1,1,-9,-3,4,8,6,1,-7,6,-9,-8,-6,-4,-9,6,-10,3,1,-2,9,8,10,-1,-10,-2,-7,-10,1,5,-10,-9,2,-2,5,-10,2,2,-7,-8,9,10,10,8,3,1,-8,6,10,3,-1,-4,10,4,8,-6,4,4,5,-5,-7,4,7,-5,7,6,10,-1,-5,-10,9,-1,-4,-4,7,9,-6,-9,-2,-1,2,-7,7,-5,-4,-5,-2,5,9,7,1,-10,-9,-1,5,10,-9,-2,-6,9,3,-5,10,3,1,7,-7,10,-8,-7,-3,10,7,-10,-10,-2,-3,-10,-7,6,6,-10,2,1,1,5,-6,-7,9,-5,-4,-4,6,-4,10,2,5,8,-4,-1,8,8,-3,6,-2,-4,10,7,-5,-10,3,10,-6,7,-9,4,6,-1,8,-4,-8,7,8,5,-5,6,-9,-5,-7,6,3,-5,-3,-10,4,1,2,-2,-2,-2,2,-6,-8,-7,-3,3,4,-7,-4,7,-10,-10,6,1,-8,8,4,-2,-3,7,3,-6,-8,5,-7,-8,1,-9,9,-9,-4,-9,-9,9,2,-1,-8,4,-7,7,-1,3,4,-1,2,2,-6,-4,-1,-8,1,-10,4,4,-4,7,8,9,2,5,-9,9,7,10,-8,-3,-6,7,-8,3,-2,9,-2,1,8,7,-4,-5,-2,1,1,-3,6,9,3,-7,-4,-4,-7,-10,3,-4,-6,8,-4,-1,2,4,-4,-3,6,-9,-8,-9,-9,2,6,9,-5,-9,-5,-5,-2,2,-1,2,-6,-10,-5,-9,-5,6,-9,3,-1,4,-3,-10,6,-3,-8,-6,6,-9,4,7,1,1,10,5,-6,-5,7,-6,-9,2,3,-2,-6,2,-10,-9,4,-2,-4,4,-5,-1,-6,9,-7,5,-1,-1,-7,-6,3,8,5,-2,5,1,6,-6,10,-2,-6,-8,-1,3,3,-4,5,4,10,-9,1,-6,-3,-1,-8,1,-7,3,10,-7,7,7,-1,-10,-4,-5,8,-4,-6,5,8,-1,4,7,10,-7,3,-9,-5,-5,-9,-6,6,9,4,7,9,-9,2,7,9,-10,-7,9,7,1,-6,4,-6,3,6,-2,-10,8,-6,-5,-10,-7,4,-9,10,9,-8,8,-4,3,-5,-5,-5,-8,-9,-4,-7,-7,7,-4,-7,-4,3,-10,5,9,6,4,6,-2,4,-5,9,4,10,-6,8,-4,2,-10,-7,8,2,7,-3,-4,-7,1,-2,3,-2,9,-6,3,-8,6,9,-3,5,8,8,-8,2,10,-4,-6,-9,8,-9,-5,1,6,-5,-2,8,-10,-3,-1,8,1,-2,8,-3,9,5,-2,-5,-10,-5,3,-4,10,-1,-6,-2,-9,-3,8,-3,-9,10,9,-10,-10,-3,10,3,-7,-1,-3,10,-9,-1,1,1,4,-1,-1,-4,-6,1,6,-6,-10,8,1,-3,10,-7,-8,1,2,-7,-3,-1,9,4,5,10,10,9,5,4,-6,8,-9,-9,1,1,8,4,3,-5,-10,6,-3,3,-6,5,6,-7,-2,-4,-4,-8,9,2,-2,2,3,1,-10,-4,-1,-10,2,-2,6,9,2,-4,1,-3,-4,4,3,-1,-10,-9,6,8,9,-4,7,-4,-5,2,-6,-1,-9,6,-10,5,6,1,-5,1,8,-8,-1,5,-3,-3,1,-9,-1,-2,-4,3,5,1,4,4,7,8,-8,-7,-8,-2,-6,-1,6,8,-2,-7,6,7,-9,-1,-4,-8,1,-3,-6,10,-4,9,-4,-9,9,-3,5,2,-10,-2,-3,7,4,3,-3,-3,3,8,-10,-4,-4,-5,-7,-2,-1,1,3,-8,-8,-8,-5,9,-5,-5,-5,-6,-8,-9,-10,-3,-5,7,-4,6,7,2,-7,9,-1,6,7,-6,-5,-1,-6,-5,1,-9,-6,-7,-9,6,4,-7,-2,-3,-5,6,-6,6,-1,10,-3,-7,6,-4,2,10,-5,-1,9,8,4,7,-10,9,2,-3,10,7,-3,10,1,3,8,5,-7,5,-8,9,-3,-7,-10,3,-10,8,1,9,10,8,-6,-9,-7,-6,7,2,6,7,10,9,-10,3,5,-3,-6,2,5,6,-6,-6,-10,4,-10,5,3,-1,-9,4,8,6,8,5,1,-7,4,1,2,9,6,-3,7,4,8,-7,-7,10,5,1,7,-7,1,-2,-3,6,-6,-10,3,-9,4,-9,1,6,-5,5,5,2,10,-1,-6,2,-6,-6,-8,1,-3,3,-10,-1,8,-6,8,10,-1,-8,-8,2,7,-4,-3,9,5,-9,10,9,-7,-2,-4,-10,-3,-5,-1,6,5,2,-7,5,2,-7,5,2,-3,-5,-9,6,-3,5,-8,-1,5,2,-6,-1,10,-3,-6,-4,-3,7,-4,-6,-4,3,3,4,9,9,-10,6,-10,2,7,-4,7,-2,4,7,10,9,-4,-3,-6,8,3,-5,-4,9,-5,2,4,-2,-4,6,9,-7,-6,-5,3,10,9,8,-4,-5,-10,10,2,10,-3,10,-2,6,-7,2,-8,7,8,1,4,1,-4,6,7,2,6,3,-8,6,1,7,-10,7,2,8,-5,-10,3,4,5,9,7,9,-8,3,5,-9,6,1,-5,6,1,10,5,4,-10,-3,-3,-4,-7,4,-7,-7,8,-5,-10,-4,8,-6,6,4,3,4,-10,-8,-3,1,5,7,7,-8,-2,9,-4,6,5,9,9,-3,-2,-8,-5,-9,6,-6,7,-1,6,-10,4,-4,7,-4,-7,-5,-10,-5,1,-5,-9,1,7,-4,3,5,1,-6,-5,5,9,-2,-3,4,-1,1,10,-6,6,-9,-6,-8,-6,-7,5,6,4,-3,-4,-2,-5,-5,-7,-9,-10,3,5,-3,6,-3,-2,6,-6,4,7,-7,1,7,-4,10,-7,10,-4,4,-2,2,-7,-1,-9,-4,-3,1,4,1,-6,-2,5,6,4,1,8,-4,-4,-9,2,-9,6,-10,-8,10,1,9,-5,-7,-7,-7,-2,2,-5,-8,8,-3,-9,-7,-3,3,1,2,-8,-5,7,-10,2,-4,-4,-6,-2,-9,2,-10,-4,-1,-6,1,1,-7,-9,-7,10,7,-6,8,-2,8,4,-10,-10,5,5,-10,-3,5,5,-2,5,-10,-2,8,-5,1,4,-8,-4,2,9,6,-8,-4,2,9,5,10,-8,-5,-7,-4,8,7,5,1,-9,7,-5,2,7,7,-3,-3,-5,5,5,-3,3,4,9,-5,-2,8,3,7,3,6,-2,6,7,9,3,2,-4,-6,-2,1,-3,-1,9,8,3,8,3,5,9,2,8,10,2,2,6,8,-10,-8,1,3,-2,-1,6,4,10,7,-10,7,-2,-6,10,-2,4,-1,7,-1,4,-3,8,6,-3,-3,10,3,-8,-4,4,3,5,-5,8,9,-7,-4,10,-10,-5,-4,-4,-8,-7,-5,6,10,-1,-4,-10,3,-5,-2,-9,8,7,8,2,-8,-8,-1,-8,-8,4,10,-6,1,9,8,6,-1,-9,-6,5,-9,6,9,-1,-5,-10,-10,7,8,5,-6,-2,-3,8,-2,-5,7,-3,7,5,10,6,-2,3,9,-5,-8,3,-8,3,3,-10,-9,-9,8,8,-1,-10,-7,10,1,-4,2,10,-6,9,1,4,-4,-6,-8,2,1,10,-3,8,6,2,-7,8,-3,5,-8,-4,1,-5,-6,-6,-9,7,-9,-7,-4,2,9,-5,9,-8,10,-9,2,1,3,7,6,-3,6,7,-6,1,1,10,9,-6,10,9,-1,1,8,5,9,-6,-9,7,5,3,-4,-5,10,2,-1,3,-3,-8,-2,4,3,8,-6,7,3,-7,-4,-9,-8,-6,4,-10,6,8,1,1,4,5,-4,-1,-6,-5,-3,-7,-7,-7,-6,6,5,10,-7,-7,10,-5,6,-3,-6,-3,3,9,6,-9,-5,2,2,-3,3,-2,-5,9,-2,-4,-1,9,-10,1,8,-6,-8,2,-2,-9,-8,8,-9,-5,-9,1,-7,-3,-1,-2,-6,-4,9,-4,-3,-6,5,2,-2,7,5,1,-10,-10,-1,-2,9,1,1,8,2,5,-7,3,6,-3,8,5,-8,-1,-7,6,-10,-3,6,-7,7,-6,-2,6,-9,-1,2,-6,-10,1,-1,-3,-6,4,-2,-8,6,3,-3,6,-7,8,2,10,-3,9,-8,7,-3,-5,5,-1,-7,8,3,-3,-8,10,7,2,-10,5,7,1,-6,-2,10,-1,10,-1,1,3,-5,9,-2,-3,6,-10,2,1,-8,7,8,8,-7,-1,1,8,-7,-9,2,1,1,-8,-3,-9,4,10,5,-10,-7,1,-6,-5,9,-2,-7,6,-4,-9,3,-9,-7,1,-9,6,-1,-5,9,-10,5,9,6,-7,10,-1,-5,2,-1,6,3,7,1,2,3,8,5,7,-3,-4,-2,5,-7,-9,-9,10,9,7,1,-1,1,-2,7,10,6,2,-10,5,-6,-4,3,1,3,-3,-9,-9,-4,-9,-10,2,2,6,-4,7,-9,-9,7,4,7,-4,-2,7,4,8,4,2], dtype = "int32")#candidate|12751|(1800,)|const|int32
const_12752 = relay.const(9, dtype = "uint16")#candidate|12752|()|const|uint16
call_12748 = relay.TupleGetItem(func_9328_call(relay.reshape(const_12749.astype('int32'), [280,]), relay.reshape(var_12750.astype('int64'), [385,]), relay.reshape(const_12751.astype('int32'), [1800,]), relay.reshape(const_12752.astype('uint16'), []), ), 2)
call_12753 = relay.TupleGetItem(func_9334_call(relay.reshape(const_12749.astype('int32'), [280,]), relay.reshape(var_12750.astype('int64'), [385,]), relay.reshape(const_12751.astype('int32'), [1800,]), relay.reshape(const_12752.astype('uint16'), []), ), 2)
output = relay.Tuple([uop_12717,call_12722,var_12723,call_12735,call_12748,const_12749,var_12750,const_12751,const_12752,])
output2 = relay.Tuple([uop_12719,call_12724,var_12723,call_12736,call_12753,const_12749,var_12750,const_12751,const_12752,])
func_12771 = relay.Function([var_12723,var_12750,], output)
mod['func_12771'] = func_12771
mod = relay.transform.InferType()(mod)
var_12772 = relay.var("var_12772", dtype = "float64", shape = (624,))#candidate|12772|(624,)|var|float64
var_12773 = relay.var("var_12773", dtype = "int64", shape = (1, 385))#candidate|12773|(1, 385)|var|int64
output = func_12771(var_12772,var_12773,)
func_12774 = relay.Function([var_12772,var_12773,], output)
mutated_mod['func_12774'] = func_12774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11941_call = mod.get_global_var('func_11941')
func_11943_call = mutated_mod.get_global_var('func_11943')
call_12834 = func_11941_call()
call_12835 = func_11941_call()
output = relay.Tuple([call_12834,])
output2 = relay.Tuple([call_12835,])
func_12840 = relay.Function([], output)
mod['func_12840'] = func_12840
mod = relay.transform.InferType()(mod)
mutated_mod['func_12840'] = func_12840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12840_call = mutated_mod.get_global_var('func_12840')
call_12841 = func_12840_call()
output = call_12841
func_12842 = relay.Function([], output)
mutated_mod['func_12842'] = func_12842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9895_call = mod.get_global_var('func_9895')
func_9897_call = mutated_mod.get_global_var('func_9897')
call_12866 = relay.TupleGetItem(func_9895_call(), 0)
call_12867 = relay.TupleGetItem(func_9897_call(), 0)
func_9908_call = mod.get_global_var('func_9908')
func_9909_call = mutated_mod.get_global_var('func_9909')
call_12905 = relay.TupleGetItem(func_9908_call(), 0)
call_12906 = relay.TupleGetItem(func_9909_call(), 0)
var_12937 = relay.var("var_12937", dtype = "uint32", shape = (10, 13, 8))#candidate|12937|(10, 13, 8)|var|uint32
bop_12938 = relay.greater_equal(call_12866.astype('bool'), relay.reshape(var_12937.astype('bool'), relay.shape_of(call_12866))) # shape=(10, 13, 8)
bop_12941 = relay.greater_equal(call_12867.astype('bool'), relay.reshape(var_12937.astype('bool'), relay.shape_of(call_12867))) # shape=(10, 13, 8)
func_10747_call = mod.get_global_var('func_10747')
func_10749_call = mutated_mod.get_global_var('func_10749')
call_12945 = relay.TupleGetItem(func_10747_call(), 0)
call_12946 = relay.TupleGetItem(func_10749_call(), 0)
output = relay.Tuple([call_12905,bop_12938,call_12945,])
output2 = relay.Tuple([call_12906,bop_12941,call_12946,])
func_12949 = relay.Function([var_12937,], output)
mod['func_12949'] = func_12949
mod = relay.transform.InferType()(mod)
mutated_mod['func_12949'] = func_12949
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12950 = relay.var("var_12950", dtype = "uint32", shape = (10, 13, 8))#candidate|12950|(10, 13, 8)|var|uint32
func_12949_call = mutated_mod.get_global_var('func_12949')
call_12951 = func_12949_call(var_12950)
output = call_12951
func_12952 = relay.Function([var_12950], output)
mutated_mod['func_12952'] = func_12952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10443_call = mod.get_global_var('func_10443')
func_10445_call = mutated_mod.get_global_var('func_10445')
call_12971 = relay.TupleGetItem(func_10443_call(), 0)
call_12972 = relay.TupleGetItem(func_10445_call(), 0)
output = relay.Tuple([call_12971,])
output2 = relay.Tuple([call_12972,])
func_13004 = relay.Function([], output)
mod['func_13004'] = func_13004
mod = relay.transform.InferType()(mod)
output = func_13004()
func_13005 = relay.Function([], output)
mutated_mod['func_13005'] = func_13005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10594_call = mod.get_global_var('func_10594')
func_10596_call = mutated_mod.get_global_var('func_10596')
call_13201 = relay.TupleGetItem(func_10594_call(), 0)
call_13202 = relay.TupleGetItem(func_10596_call(), 0)
func_11041_call = mod.get_global_var('func_11041')
func_11043_call = mutated_mod.get_global_var('func_11043')
call_13206 = func_11041_call()
call_13207 = func_11041_call()
func_9484_call = mod.get_global_var('func_9484')
func_9485_call = mutated_mod.get_global_var('func_9485')
call_13208 = relay.TupleGetItem(func_9484_call(), 0)
call_13209 = relay.TupleGetItem(func_9485_call(), 0)
func_8481_call = mod.get_global_var('func_8481')
func_8484_call = mutated_mod.get_global_var('func_8484')
const_13216 = relay.const([-6.656810,8.668019,-3.359331,-6.257818,5.179317,5.835493,1.948367,-3.328301,8.943281,-8.167518,7.520653,-2.520677,7.426075,-9.580646,1.017580,5.665199,2.035993,7.005205,-5.878560,9.597816,-4.854989,3.367288,-8.277113,7.612284,6.617991,-0.473427,6.495026,-2.224274,6.944392,1.775239,-6.596034,-0.184216,0.869315,-4.564169,-1.516025,1.490611,-9.775221,-6.643156,6.917474,-0.927476,-2.387320,3.038497,6.087420,-9.884673,-0.822962,1.289217,-1.955256,7.806932,-2.989829,7.535581,9.324633,5.878624,6.276194,-9.877261,1.284873,-2.446404,-6.819105,1.521250,7.332189,-4.188276,-3.355148,-9.053967,8.414531,-0.960334,9.910735,-6.914948,2.414665,-3.892760,-2.804317,3.832214,2.310813,2.184246,3.330594,-4.594804,-1.479700,-0.178365,-0.048184,5.348269,-6.426414,8.566711,-5.867076,0.444662,5.611223,-6.903277,-8.527908,5.164121,2.913699,7.310319,-3.661942,8.537877,-0.170624,6.656484,5.913987,1.847430,-8.247092,7.169061,-8.084358,-1.389179,0.090128,7.600734,-9.727283,3.042970,3.264169,-2.331031,-0.773705,-6.840570,-7.974208,-3.130548,3.702803,2.153868,-6.491007,-7.438153,4.844051,4.641148,7.895396,5.217442,6.440445,-0.172423,5.212387,-5.598216,-7.295997,8.976750,-3.286262,-1.439099,6.072095,-4.532595,6.037520,-6.334976,2.279156,1.276383,3.008291,8.854265,9.630728,6.432190,-5.570628,1.685397,6.881244,1.920475,-7.182683,2.742872,-6.521286,9.319250,-0.864525,-2.593507,9.483182,-0.896644,-8.699418,-0.043740,6.360780,8.873259,3.077381,5.555795,7.256131,5.113612,-2.679627,7.260051,-4.210339,-7.585760,-0.938337,-6.308875,-6.442654,-1.379864,-7.977140,4.140916,8.147150,-2.583005,3.866066,0.832332,-2.647203,-8.585866,9.108250,7.969773,-0.051111,-8.981943,5.149405,0.610057,3.593282,-5.045372,-3.261559,-7.068221,-1.190720,-1.459811,-9.576578,-7.003586,-2.102098,0.416589,-8.148770,9.646744,9.310263,-5.274964,1.173860,-3.445868,4.586568,-9.257027,-2.140411,9.756941,2.085014,-7.217384,9.652821,7.559697,8.299751,3.032929,3.882993,5.971551,-1.987358,5.036659,9.205103,4.620643,6.483813,-3.230859,-8.534908,-9.258244,1.478962,5.736822,-1.742693,2.945802,1.298247,0.196577,8.719830,5.673064,-6.670730,9.026374,1.413976,4.523677,3.433588,-1.780721,5.569369,8.689518,-7.575106,-2.665616,9.565083,-4.462319,-1.565946,-1.701307,-2.864519,-7.279557,-7.549803,-9.489467,-2.951445,-6.758906,5.603868,2.977063,-9.215597,-3.214876,6.845548,5.489998,-4.565249,5.788284,2.700723,-1.607053,-7.572800,4.004156,6.147320,-5.293250,5.357354,1.588376,9.804190,5.525060,6.756015,-9.731045,-5.953307,-7.990377,-4.100809,-1.775970,5.291280,6.130353,4.924509,-8.680042,9.000055,-5.883374,-0.440726,2.203788,-6.984952,5.900587,-9.832486,-1.188958,1.508858,4.286862,-2.931896,7.786247,2.067150,9.127948,0.589424,2.192643,-0.118147,7.591412,9.503702,3.677610,-4.932873,8.537478,-3.438431,0.158276,-0.676394,0.722604,-6.669364,-4.243167,-1.613005,-4.226791,-1.226221,-7.683385,7.706179,2.577928,-6.018665,-9.535439,6.013945,-2.164670,6.497173,5.714184,-1.745340,1.382558,7.532050,-8.779782,2.589765,-6.892249,-6.921435,9.782996,-3.970217,-8.643411,1.731656,2.803380,5.415005,-2.903713,-1.160701,-3.264425,4.013421,2.510304,-7.938853,-3.561623,8.714124,9.476574,5.727532,4.099278,0.005079,-6.638636,1.230308,8.774446,5.579327,4.233525,1.708350,5.322787,8.909389,1.378901,-0.802172,-7.260636,-7.658954,-4.758415,-5.947130,-2.632757,0.246793,-3.821717,-0.056425,6.822869,6.437599,6.536417,0.753762,0.656000,-7.978540,-1.159325,-3.684056,-8.842030,-6.208844,-3.657446,-0.415877,-4.266790,-2.283741,-2.463473,-6.292175,-9.598415,7.099923,-9.030849,-2.489441,9.438344,-3.493173,-4.192637,-8.918723,-4.302158,7.328636,4.134389,6.458017,8.505143,-4.865015,-0.796466,-9.826483,5.623339,1.658432,-2.563114,4.576137,-4.618971,8.763413,7.166803,9.220142,-2.234609,-5.735270,-1.832265,2.693475,1.945584,-4.098016,-6.611687,1.274597,-5.876689,1.176053,-2.750267,-5.208070,-9.022938,0.277198,-6.270627,4.887682,4.773953,-4.656550,8.757781,-9.301510,-0.711848,5.570230,5.893713,-3.575863,0.144567,-7.227568,-8.402562,-8.029644,-8.490276,-2.847062,-8.532823,0.457937,-5.859852,4.134097,7.157420,-9.277654,-9.226885,-2.558490,-2.612352,0.889429,-4.829886,-4.192533,1.521533,4.179522,-6.933434,-3.010403,-8.008913,6.121562,9.842232,-1.094425,-1.220954,-7.761057,-7.026930,-7.223147,0.412205,-1.974145,2.044779,0.861460,5.160967,-4.212774,-7.720061,-0.763114,-5.935950,9.136387,8.266957,-9.802735,0.794815,-6.373740,9.264582,-6.400666,6.220937,-9.392147,3.870887,5.697350,-7.097148,0.997799,-9.114767,0.858475,9.102354,-6.243745,5.758181,-9.591851,-6.649920,-6.855354,5.536923,-1.365446,-9.930119,3.869255,-6.540862,-7.602806,-0.892082,-0.433406,-1.214973,4.446205,-5.554436,-9.438483,-1.519262,-3.436928,3.938733,-9.744473,-7.536056,3.513841,5.383295,-9.145169,7.712060,-7.651957,-3.952137,-5.884474,3.995621,-1.421619,-2.249487,3.340308,0.896765,4.179745,-2.362457,7.142753,-2.035841,2.434539,7.717288,-3.548484,9.302964,-2.968164,9.752045,-8.214195,-1.330864,-6.104683,0.364397,9.246902,-0.288442,7.176564,-8.930322,0.499438,-3.983891,-2.376830,-5.753840,-0.868401,-3.146726,-9.493148,-9.072722,-6.257140,5.480938,6.786337,-9.667646,-2.707392,7.721747,2.252806,-8.472783,-6.345592,-2.407288,7.375824,0.872560,-6.298563,-6.326002,9.491841,8.090228,-0.688251,5.439541,0.280936,-0.579806,-9.978275,4.726177,-8.978442,-4.356814,-0.741055,7.334787,6.130712,-3.308730,-9.387497,-1.105594,9.983161,8.682442,0.637128,1.950899,-1.519974,-5.278195,0.531457,0.377526,2.249765,-8.997211,-8.594849,8.262820,8.233671,3.327219,8.266337,1.321701,6.760933,-0.148286,6.268127,4.248921,5.678929,-9.104304,6.741252,-0.656824,0.866976,8.881731,2.070576,-1.631839,-3.573724,-5.127215,4.358188,-8.762171,2.411704,8.062698,-6.313572,-1.402745,-9.422131,-6.017500,-6.575265,5.910185,9.995639,0.521945,6.710020,2.709781,7.062444,2.254189,-9.914078,9.294981,-3.039998,-4.363894,6.376745,1.912426,-3.837514,-6.442848,-7.642964,-2.765260,-4.333386,-9.141657,0.679240,4.733427,-9.095213,-8.617202,-0.664248,-2.259813,-6.072691,9.320474,3.332666,-8.858438,-1.088865,1.833760,-5.008129,-4.546316,1.528634,-2.538177,8.529197,-8.155541,6.621107,-7.883286,-5.440220,-0.901611,1.944302,4.817125,-4.333625,-9.870045,-5.477402,-6.570956,-5.278854,7.522170,2.353740,-4.635811,0.323765,-1.791064,1.269852,-3.552841,8.567654,6.579068,-4.252265,-7.279127,-6.414721,7.547626,-8.786474,5.594440,-1.173930,-8.833346,-3.197566,-7.938974,7.102808,-0.097030,1.805714,9.822396,-7.233565,-6.310722,1.390960,8.472870,1.737483,-8.850758,-3.145633,-0.495622,-7.619347,1.628185,-3.811688,-5.839548,-8.248818,-4.129530,2.059484,7.396059,-6.454902,-7.078978,-3.687189,5.633428,-2.722866,6.458143,8.536832,1.845113,-3.517116,3.169934,1.864949,3.786787,-6.047717,5.491527,9.076292,8.951835,-0.309478,7.758945,-4.757047,4.705594,-4.826787,3.481637,-6.100050,1.356140,0.831767,0.923708,-3.355638,1.496047,0.081720,-4.317131,0.850679,-2.343017,0.163731,-9.640542], dtype = "float64")#candidate|13216|(720,)|const|float64
call_13215 = relay.TupleGetItem(func_8481_call(relay.reshape(const_13216.astype('float64'), [720,])), 0)
call_13217 = relay.TupleGetItem(func_8484_call(relay.reshape(const_13216.astype('float64'), [720,])), 0)
output = relay.Tuple([call_13201,call_13206,call_13208,call_13215,const_13216,])
output2 = relay.Tuple([call_13202,call_13207,call_13209,call_13217,const_13216,])
func_13236 = relay.Function([], output)
mod['func_13236'] = func_13236
mod = relay.transform.InferType()(mod)
mutated_mod['func_13236'] = func_13236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13236_call = mutated_mod.get_global_var('func_13236')
call_13237 = func_13236_call()
output = call_13237
func_13238 = relay.Function([], output)
mutated_mod['func_13238'] = func_13238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11706_call = mod.get_global_var('func_11706')
func_11707_call = mutated_mod.get_global_var('func_11707')
call_13243 = func_11706_call()
call_13244 = func_11706_call()
func_10573_call = mod.get_global_var('func_10573')
func_10576_call = mutated_mod.get_global_var('func_10576')
var_13256 = relay.var("var_13256", dtype = "bool", shape = (40,))#candidate|13256|(40,)|var|bool
call_13255 = relay.TupleGetItem(func_10573_call(relay.reshape(var_13256.astype('bool'), [40,])), 2)
call_13257 = relay.TupleGetItem(func_10576_call(relay.reshape(var_13256.astype('bool'), [40,])), 2)
uop_13259 = relay.asinh(call_13255.astype('float64')) # shape=(378,)
uop_13261 = relay.asinh(call_13257.astype('float64')) # shape=(378,)
func_436_call = mod.get_global_var('func_436')
func_440_call = mutated_mod.get_global_var('func_440')
var_13263 = relay.var("var_13263", dtype = "uint32", shape = (4, 36))#candidate|13263|(4, 36)|var|uint32
var_13264 = relay.var("var_13264", dtype = "uint32", shape = (2016,))#candidate|13264|(2016,)|var|uint32
call_13262 = relay.TupleGetItem(func_436_call(relay.reshape(var_13263.astype('uint32'), [16, 1, 9]), relay.reshape(var_13264.astype('uint32'), [16, 14, 9]), ), 0)
call_13265 = relay.TupleGetItem(func_440_call(relay.reshape(var_13263.astype('uint32'), [16, 1, 9]), relay.reshape(var_13264.astype('uint32'), [16, 14, 9]), ), 0)
func_10619_call = mod.get_global_var('func_10619')
func_10620_call = mutated_mod.get_global_var('func_10620')
call_13268 = func_10619_call()
call_13269 = func_10619_call()
bop_13288 = relay.less_equal(call_13262.astype('bool'), relay.reshape(var_13264.astype('bool'), relay.shape_of(call_13262))) # shape=(16, 14, 9)
bop_13291 = relay.less_equal(call_13265.astype('bool'), relay.reshape(var_13264.astype('bool'), relay.shape_of(call_13265))) # shape=(16, 14, 9)
output = relay.Tuple([call_13243,var_13256,uop_13259,var_13263,call_13268,bop_13288,])
output2 = relay.Tuple([call_13244,var_13256,uop_13261,var_13263,call_13269,bop_13291,])
func_13297 = relay.Function([var_13256,var_13263,var_13264,], output)
mod['func_13297'] = func_13297
mod = relay.transform.InferType()(mod)
mutated_mod['func_13297'] = func_13297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13297_call = mutated_mod.get_global_var('func_13297')
var_13299 = relay.var("var_13299", dtype = "bool", shape = (40,))#candidate|13299|(40,)|var|bool
var_13300 = relay.var("var_13300", dtype = "uint32", shape = (4, 36))#candidate|13300|(4, 36)|var|uint32
var_13301 = relay.var("var_13301", dtype = "uint32", shape = (2016,))#candidate|13301|(2016,)|var|uint32
call_13298 = func_13297_call(var_13299,var_13300,var_13301,)
output = call_13298
func_13302 = relay.Function([var_13299,var_13300,var_13301,], output)
mutated_mod['func_13302'] = func_13302
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13393 = relay.var("var_13393", dtype = "bool", shape = (16, 10, 8))#candidate|13393|(16, 10, 8)|var|bool
var_13394 = relay.var("var_13394", dtype = "bool", shape = (16, 10, 8))#candidate|13394|(16, 10, 8)|var|bool
bop_13395 = relay.logical_or(var_13393.astype('bool'), relay.reshape(var_13394.astype('bool'), relay.shape_of(var_13393))) # shape=(16, 10, 8)
uop_13401 = relay.cosh(var_13393.astype('float64')) # shape=(16, 10, 8)
func_6118_call = mod.get_global_var('func_6118')
func_6121_call = mutated_mod.get_global_var('func_6121')
const_13409 = relay.const([-5.204726,-1.029910,8.103053,-1.046224,0.915436,0.439562,-9.538503,7.415251,-6.472120,9.292259,-9.708144,-2.757802,5.386962,-2.589097,4.106478,-5.244285,-0.643076,-8.727897,-0.977568,3.905930,-3.292095,-0.430677,7.386288,5.559533,-8.965282,8.025437,-6.991962,4.867255,-0.783949,-2.538403,9.080449,3.190196,5.050743,8.456693,-1.658907,6.491509,7.312957,6.858253,4.034412,-8.994042,0.057825,-1.414823,-0.500934,9.680417,4.038141,-7.203535,4.926335,9.260047,8.979730,-0.518252,0.572940,-1.364068,-7.082678,5.870194,-9.823311,4.003957,9.724552,7.447584,-7.121814,-9.581090,3.054730,-5.007862,-3.194237,2.840494,4.491382,0.370393,-8.277844,6.604936,6.137299,-5.570184,0.509503,-5.802112,-9.825325,-1.789982,-2.839425,-3.940825,4.132137,-8.644376,-7.016847,6.098813,-7.220711,-7.862483,-2.154217,5.648280,-5.943509,8.678816,5.416375,-4.872881,-7.646646,-3.520920,8.004783,-1.437433,-2.035967,-8.609472,-5.879174,-2.532722,-3.830077,5.392095,-1.984091,0.182678,6.430101,-7.995192,-6.047190,-2.504412,3.317809,5.994184,7.308074,2.890635,5.819576,2.965025,2.550692,-7.457032,-8.297788,-8.353848,-4.903370,-0.792776,2.557052,-6.973846,4.168310,-4.501320,-9.463811,-7.332738,7.328383,2.991396,9.522145,-9.855580,-9.243406,1.709050,6.556145,2.220695,4.932888,2.940365,0.157185,-4.235745,-1.218102,1.463782,-2.788698,-4.947476,-3.577778,-0.504996,-6.212966,-5.463037,5.457386,-9.240973,-1.179541,-1.844757,8.597201,-9.717051,-3.328654,1.918404,3.114528,8.748267,-6.496106,2.246639,2.141978,4.383801,-3.308140,-6.372726,2.782451,-4.449454,-5.735211,2.248095,-0.412740,-0.607239,-7.992995,4.282225,5.208296,0.742929,1.820774,-5.752422,9.844829,-2.426010,3.229191,9.708630,7.611234,-1.605128,1.617705,8.765159,6.330535,-2.701934,-6.524481,9.100201,-7.944863,7.390695,7.438639,-5.602665,3.399933,9.333257,0.885955,3.950150,-7.453433,-0.491054,0.114781,-0.902023,-5.487238,-2.307772,-1.860846,-1.294510,9.690719,-3.447387,7.940159,1.452548,-7.035215,1.740614,0.298582,-6.121900,0.140692,1.735747,7.777832,9.332296,-9.356665,-1.517680,-9.655521,2.372084,-7.448019,-8.668067,-7.104048,0.213127,-0.402036,-5.588087,9.586959,-6.213167,-4.738083,-3.817957,5.775712,1.909251,5.802980,-3.022767,-8.268680,7.416733,-7.506775,-1.630262,6.677977,7.553484,-1.689777,-8.617493,-9.802424,-0.619679,-1.749881,-1.054270,6.497965,-9.884158,7.032889,-7.637436,-2.981467,9.064176,5.481901,-9.562589,6.579855,2.436340,2.819026,3.306848,-4.301979,-0.277140,-9.021544,-8.888505,-8.235945,4.645660,4.097764,5.101590,8.587999,-0.124848,-2.666224,-4.449848,-0.403884,-9.277781,6.803566,-6.852164,1.912203,-9.636850,9.220243,7.464327,4.101020,-3.111672,-9.206174,7.187456,-3.896687,4.462833,-5.562662,-4.835429,0.509615,-6.985351,-0.371740,-1.276044,-6.213825,-0.857808,8.340576,1.648631,-9.696010,8.455129,-1.089658,-8.626389,5.379069,3.805631,2.562038,-5.506768,-0.928829,7.940523,6.051560,2.868092,1.432583,-7.156816,1.104165,3.221386,8.128483,0.818969,2.737542,-1.559114,2.473905,-9.498098,8.887049,9.830661,-4.969035,-3.499427,-9.211071,8.018907,0.111240,-6.960215,6.419014,-7.780853,-1.348620,-4.140389,-3.054028,-4.153642,4.843435,-0.035101,-8.417053,-0.718592,4.204493,-9.439121,-0.348276,1.272810,1.639859,2.431255,8.970349,6.546503,9.636878,-5.528832,-6.568438,7.111044,4.647424,-2.363491,0.914082,-2.039776,-3.154728,-8.867187,-0.775345,-8.498614,5.564789,1.908530,-2.149306,-9.307359,-1.071691,5.932049,-5.520877,-8.363778,-9.325668,4.967458,-3.678976,-8.520050,-3.598624,5.588764,-2.481617,3.169816,3.019473,4.931240,8.604582,5.950009,-0.863741,7.001293,1.329699,-0.845114,-0.105249,3.443970,-1.311188,2.507359,-3.672216,9.352190,3.064244,-6.713115,6.909702,-8.911721,-9.553811,8.433461,-3.580079,6.605088,-6.017496,3.538027,1.107834,6.120569,7.760748,-3.624733,-7.987602,-3.936029,-8.747511,-2.106434,-0.404188,3.881132,7.248821,7.689554,2.167475,3.028460,4.898656,-9.974450,-6.471164,-9.779361,9.753624,0.431309,-2.734388,6.307525,7.850143,7.625244,-9.084659,-7.169132,3.901790,3.978786,-0.676763,-3.085577,9.679162,-7.533573,1.361319,7.910054,3.420567,-6.082374,5.617054,2.184503,3.620916,-1.358316,5.412931,0.937279,2.853332,7.994786,-4.589402,9.234192,-7.908806,8.670147,-8.635172,-3.072636,5.205514,9.674826,-9.768361,6.946648,3.244802,6.545592,-5.426803,5.344663,7.437918,3.965373,4.759515,-7.597941,-9.391453,9.836993,-7.398641,6.822960,-1.239475,-9.937995,9.650781,-8.310296,-3.130486,9.305168,2.183498,-1.629901,2.645905,-2.996217,-4.110457,-0.591991,-5.098422,2.732136,-5.203578,-4.760062,2.821775,7.649105,6.764830,-0.389588,-1.360600,-2.281951,-9.567797,-4.960596,0.420947,-8.817086], dtype = "float32")#candidate|13409|(480,)|const|float32
call_13408 = func_6118_call(relay.reshape(const_13409.astype('float32'), [4, 8, 15]))
call_13410 = func_6118_call(relay.reshape(const_13409.astype('float32'), [4, 8, 15]))
bop_13422 = relay.subtract(uop_13401.astype('int32'), relay.reshape(bop_13395.astype('int32'), relay.shape_of(uop_13401))) # shape=(16, 10, 8)
output = relay.Tuple([call_13408,const_13409,bop_13422,])
output2 = relay.Tuple([call_13410,const_13409,bop_13422,])
func_13428 = relay.Function([var_13393,var_13394,], output)
mod['func_13428'] = func_13428
mod = relay.transform.InferType()(mod)
mutated_mod['func_13428'] = func_13428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13428_call = mutated_mod.get_global_var('func_13428')
var_13430 = relay.var("var_13430", dtype = "bool", shape = (16, 10, 8))#candidate|13430|(16, 10, 8)|var|bool
var_13431 = relay.var("var_13431", dtype = "bool", shape = (16, 10, 8))#candidate|13431|(16, 10, 8)|var|bool
call_13429 = func_13428_call(var_13430,var_13431,)
output = call_13429
func_13432 = relay.Function([var_13430,var_13431,], output)
mutated_mod['func_13432'] = func_13432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9908_call = mod.get_global_var('func_9908')
func_9909_call = mutated_mod.get_global_var('func_9909')
call_13443 = relay.TupleGetItem(func_9908_call(), 0)
call_13444 = relay.TupleGetItem(func_9909_call(), 0)
output = call_13443
output2 = call_13444
func_13464 = relay.Function([], output)
mod['func_13464'] = func_13464
mod = relay.transform.InferType()(mod)
output = func_13464()
func_13465 = relay.Function([], output)
mutated_mod['func_13465'] = func_13465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12242_call = mod.get_global_var('func_12242')
func_12243_call = mutated_mod.get_global_var('func_12243')
call_13600 = relay.TupleGetItem(func_12242_call(), 0)
call_13601 = relay.TupleGetItem(func_12243_call(), 0)
output = call_13600
output2 = call_13601
func_13609 = relay.Function([], output)
mod['func_13609'] = func_13609
mod = relay.transform.InferType()(mod)
mutated_mod['func_13609'] = func_13609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13609_call = mutated_mod.get_global_var('func_13609')
call_13610 = func_13609_call()
output = call_13610
func_13611 = relay.Function([], output)
mutated_mod['func_13611'] = func_13611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11515_call = mod.get_global_var('func_11515')
func_11516_call = mutated_mod.get_global_var('func_11516')
call_13630 = relay.TupleGetItem(func_11515_call(), 2)
call_13631 = relay.TupleGetItem(func_11516_call(), 2)
func_10779_call = mod.get_global_var('func_10779')
func_10781_call = mutated_mod.get_global_var('func_10781')
call_13644 = func_10779_call()
call_13645 = func_10779_call()
func_11515_call = mod.get_global_var('func_11515')
func_11516_call = mutated_mod.get_global_var('func_11516')
call_13646 = relay.TupleGetItem(func_11515_call(), 1)
call_13647 = relay.TupleGetItem(func_11516_call(), 1)
func_4598_call = mod.get_global_var('func_4598')
func_4600_call = mutated_mod.get_global_var('func_4600')
var_13649 = relay.var("var_13649", dtype = "uint16", shape = ())#candidate|13649|()|var|uint16
call_13648 = relay.TupleGetItem(func_4598_call(relay.reshape(var_13649.astype('uint16'), [])), 0)
call_13650 = relay.TupleGetItem(func_4600_call(relay.reshape(var_13649.astype('uint16'), [])), 0)
uop_13652 = relay.log(call_13630.astype('float64')) # shape=(14, 8, 78)
uop_13654 = relay.log(call_13631.astype('float64')) # shape=(14, 8, 78)
uop_13657 = relay.cosh(uop_13652.astype('float32')) # shape=(14, 8, 78)
uop_13659 = relay.cosh(uop_13654.astype('float32')) # shape=(14, 8, 78)
var_13660 = relay.var("var_13660", dtype = "float32", shape = (14, 8, 78))#candidate|13660|(14, 8, 78)|var|float32
bop_13661 = relay.floor_mod(uop_13657.astype('float32'), relay.reshape(var_13660.astype('float32'), relay.shape_of(uop_13657))) # shape=(14, 8, 78)
bop_13664 = relay.floor_mod(uop_13659.astype('float32'), relay.reshape(var_13660.astype('float32'), relay.shape_of(uop_13659))) # shape=(14, 8, 78)
func_2825_call = mod.get_global_var('func_2825')
func_2827_call = mutated_mod.get_global_var('func_2827')
const_13669 = relay.const([-6.625583,-7.878543,-8.912687,-4.330168,2.548169,-7.039787,-2.691837,-6.012186,0.981059,0.100825,-2.038870,-9.036548,5.213822,3.021846,4.558184,8.443866,8.897319,-8.022281,-0.297554,-3.344090,6.046073,-3.073938,-8.817096,-1.032232,-8.186016,5.975140,0.546682,9.652197,6.147515,1.960393,0.573989,0.141728,-6.327831,-1.865157,-0.452665,-2.371747,-2.253693,2.470473,-8.904257,-0.321984,6.753034,4.229489,8.301309,8.454594,-5.402819,5.823373,8.230475,-5.180432,9.832413,0.751589,8.504524,6.377498,-7.052813,-1.483272,-6.773210,8.561000,-8.545431,-7.976703,1.506493,5.083774,-6.639231,2.553088,3.261054,0.570704,8.935410,-3.657113,6.038183,-2.252498,-7.360105,-7.780808,2.347075,-6.617305,-7.043425,-7.284090,-1.998961,2.539244,-4.340702,-4.323741,-5.870279,-9.681814,-1.462430,6.682666,-0.154388,0.868675,-1.864107,3.558375,-9.244767,-2.519253,-3.670971,-2.347173,-3.899336,8.028112,1.658982,-8.930531,-9.436437,7.940875,7.446957,-7.838254,-5.446780,-6.421045,9.574898,-9.053106,9.057872,-0.974027,3.550283,-6.582813,7.146946,7.812664,9.330498,-9.854744,-0.401030,9.255888,-1.990702,-2.163908,3.058967,-8.487451,-4.415237,-1.020593,3.332512,-0.666027,-2.308136,-2.491896,-6.307783,-3.126371,7.288989,9.964119,-4.175998,4.362139,-6.756635,6.113046,-5.116953,-6.527876,-5.676439,-3.447568,-9.081464,3.626119,8.694928,-6.155132,3.290590,5.045165,9.803785,-5.531187,2.161731,1.156908,5.809879,-4.016132,-2.466186,6.695243,2.199776,-9.575717,-5.529970,-8.682451,3.549903,5.818831,0.999633,8.992404,-2.747563,-5.957135,1.807570,3.762491,-6.229012,-2.891232,8.740636,-5.660877,9.776193,-2.413070,-0.043463,0.148787,6.537555,-5.039105,2.828302,6.553245,2.862210,-7.038802,0.458742,-8.746991,8.138775,-0.033246,-3.635014,4.795053,7.385556,6.100545,5.072061,0.349342,5.385008,0.159380,0.304975,-2.838016,6.546891,5.074848,6.590188,-9.372182,-0.012238,2.170696,9.735143,-9.518023,-0.315842,-8.449041,-4.962000,-3.516426,1.200824,9.323521,-3.675596,-3.164415,-4.987623,1.785399,2.924387,-0.477590,-7.421887,-8.116046,-7.478515,7.506785,-4.920061,-6.468189,7.011055,-2.615451,4.852770,-7.254260,-9.105326,7.481743,-1.150195,-8.068351,-1.238083,-5.160333,-3.686697,0.960704,9.399191,0.271459,-2.303558,2.857775,-6.405831,7.005498,1.770584,8.017818,-8.879356,-7.890023,3.536387,-9.083141,7.612791,2.444452,9.911910,-1.249536,0.580501,-8.234823,-8.659935,6.880718,8.958782,-1.307925,-6.760881,-2.587968,-1.838969,-1.131744,0.634660,0.689088,0.264153,-1.703279,7.818116,1.452442,-5.212693,2.251401,5.263926,9.007679,5.455955,9.476029,-7.361701,-1.060921,-2.138175,-5.308396,0.971851,-7.965076,-4.893640,9.219496,-3.946326,-9.945915,-2.180409,2.258153,4.193440,-2.220096,-4.243774,-1.830361,-9.737341,2.709019,2.682510,-9.857181,1.189926,4.547806,-5.306859,-7.573096,-5.442906,8.343794,-0.845050,-7.496924,-7.913008,-7.849305,1.938315,0.887457,5.846387,-3.378403,-3.867944,8.306744,-2.743794,-6.474565,7.868836,2.292265,3.362863,-4.105961,8.356057,1.459745,7.551715,-4.965730,3.647383,-5.880894,-7.364823,6.798457,-1.938454,-3.570506,-8.384120,1.811517,1.531762,8.893526,2.126174,-2.704811,-6.789409,-5.486909,7.902102,-2.396496,-8.188073,7.640048,-1.941671,-8.412892,9.046870,7.880327,4.024061,7.730815,0.432176,1.215513,-4.866511,6.426026,-5.891380,5.816799,-7.097659,-1.078914,-3.201068,0.695935,-6.247461,1.964949,-6.202843,3.869639,3.988376,3.468995,1.653749,-9.092363,-6.916055,0.150347,7.447272,3.339107,-0.280625,2.244331,3.333633,5.973874,-6.648086,-2.425489,2.861017,-6.444163,-8.832267,1.728410,-7.582382,-4.420889,5.208660,7.382271,-5.549135,-9.953940,-6.092337,4.671306,-2.869503,-4.659637,-0.679882,-8.370169,-3.911816,-0.355885,-2.657491,8.507286,7.882114,7.213160,4.727876,-7.983290,0.886345,-7.118862,-7.870308,-5.725686,6.130149,2.219943,0.632906,9.757721,-3.023510,-5.878620,-1.205898,0.304729,4.527176,-3.518776,-1.572505,-4.421793,-8.372955,0.144506,5.850375,4.461552,-7.496252,-6.818374,-4.525984,-3.052381,9.977490,5.439478,-9.215359,-3.567378,-0.948896,-4.412979,1.445249,-7.683167,0.180286,-6.436612,4.300464,4.212209,-0.597752,5.962291,-5.439679,7.212795,5.705981,3.664411,6.383230,7.800494,-3.136203,-5.744892,6.678641,2.457756,9.449282,7.883891,-3.132860,-3.705008,-9.239019,4.020417,0.849183,-7.852257,-6.487158,-8.657431,4.309952,6.355825,4.748327,3.611257,-0.106613,-6.119937,-5.298414,0.905294,-8.105898,3.306523,6.369879,8.365958,4.001161,2.302035,7.827072,-6.057671,-1.174195,9.651890,6.129386,-7.203608,9.329499,8.079785,-5.754043,-4.871083,7.661716,7.314732,1.438117,4.170694,-4.080721,-9.927679,3.473540,0.655211,-2.844845,4.568583,8.293410,2.752704,-8.743288,6.515699,4.099534,-1.342278,4.904393,-3.843390,-2.270604,-0.627742,-5.164619,2.207386,7.805708,4.876702,3.155866,5.225023,-1.264252,6.773718,-7.334258,4.855252,8.824755,-3.817517,4.543458,6.034752,-0.877684,2.976991,-2.599402,-3.343398,7.161914,2.581853,4.513672,1.604066,0.550236,-5.314760,2.746220,-0.137196,3.944825,-8.048653,4.408340,8.134471,9.299132,-7.286728,6.162055,1.502924,4.132830,1.371970,0.831081,-9.244457,8.608960,-1.218927,3.134591,4.456666,6.691588,7.325893,7.791269,2.806362,0.296974,-3.931605,-6.890691,7.818864,-7.696854,-8.068207,-8.111198,5.874243,-1.136100,-8.628615,-6.886297,-1.803759,6.541851,-9.478665,-3.397769,9.413864,3.826922,-6.361176,5.862320,0.326210,-3.515693,-9.950722,9.781406,5.887711,9.365617,6.035601,9.041155,-0.707003,0.559862,-8.889088,-8.612444,-7.097954,3.569349,0.208634,-9.947182,2.080379,9.264007,8.469933,3.237491,-9.836457,9.016622,-1.403750,8.535214,0.329053,4.467036,5.833580,-7.148511,4.410360,-9.217499,-0.033669,-9.286676,-6.244380,2.330443,-8.672913,-1.788863,-9.258165,-2.825282,-9.253809,1.622374,-9.460932,0.091523,-8.277467,5.725872,-7.378878,-6.433118,4.159091,-2.615294,-4.372055,9.088304,-8.744038,0.365907,5.896888,3.558958,-0.315129,-7.811730,8.703971,-8.997335,0.788083,4.066744,8.523165,-0.783020,-3.864081,-9.859936,4.552445,6.683045,3.364167,-7.745687,-7.824689,0.913005,-4.844348,-2.100875,0.692261,8.521359,-6.901143,-7.692326,-1.886050,-4.571150,0.310222,-3.927083,3.971617,-9.873155,-0.751458,1.461586,-7.540257,1.714527,-2.461717,-0.912790,-5.727968,-3.965854,2.559189,2.761582,-1.733959,-3.196520,-0.478883,-0.793249,4.613179,4.696391,7.433783,-4.882102,0.969968,-6.977004,9.342095,7.290748,-5.086946,9.817864,0.051487,0.838396,-4.515336,7.615162,-9.290372,-8.453289,8.251150,-4.687624,9.695400,-8.597263,-8.206253,-7.143933,-3.490581,-4.266167,-7.196648,-0.117681,-5.741393,9.881384,0.376162,0.718846,-5.377569,4.771564,7.165973,-0.861373,1.355542,6.618453,8.887307,6.472319,-4.529485,-4.153708,5.650900,-2.792332,-2.727858,6.356375,-4.026753,-1.405755,-3.786916,-7.945263,6.790333,-3.859755,-4.383575,-7.219649,-9.017265,0.250088,5.218851,2.983109,-4.683477,-2.418609,5.108383,-1.738471,6.070710,-7.653746,3.807035,9.166738,9.493150,9.892387,-8.047922,3.548133,6.178552,4.076355,-0.563657,-5.362413,-5.157206,5.477211,-1.393780,9.080237,-9.520232,7.356674,6.579534,-3.298318,0.380271,-4.211609,-6.503352,-5.788954,-8.087060,-4.376858,-1.667397,2.607993,-6.449833,-7.440875,-4.299385,-6.476837,3.741559,-4.549800,-0.549449,5.348289,-5.096577,5.331895,6.660604,1.158876,1.058214,-1.167236,-4.507800,-5.874955,-1.912406,6.009368,3.437826,-5.106575,8.631997,1.840584,9.038296,2.629982,-1.281857,-2.011528,-3.597257,8.260815,-2.140078,3.789709,4.152492,9.498523,-5.126508,-9.609656,-4.024930,-9.697714,-8.217962,8.835358,-6.102884,3.064160,-9.098522,-0.301306,4.324238,-5.365281,1.783694,-2.339497,-7.983485,0.396671,-7.996629,-1.279349,-4.393053,0.801522,-2.909056,-1.252779,8.589115,7.666931,-8.467386,9.198746,4.296768,3.541673,3.712619,9.809342,6.347112,4.971377,-3.756740,-1.182694,-2.708838,3.322945,-1.953730,-2.690370,-7.074035,5.564326,4.901154,-8.575909,5.371630,-8.285333,-7.307759,-4.578022,-5.454487,4.662408,8.455625,2.086524,6.519078,-4.461606,-1.846189,-0.570867,-6.467813,7.357526,-0.303294,-0.701804,0.219168,-3.158173,-8.601817,3.608400,-1.313936,4.616044,-3.445993,-8.815349,-1.742049,-9.535018,6.455930,8.522571,-6.568926,0.737620,-5.684933,-3.599648,-7.320611,9.320809,8.166908,0.261136,-4.868118,4.022243,9.418676,-0.412986,-5.734992,1.797576,7.444349,8.758500,5.412359,-6.516474,-9.288640,-9.449153,-0.382259,4.105506,-3.309350,3.799312,-8.760331,-4.993534,-5.670085,0.477511,6.657776,-1.487510,9.122026,-4.886198,7.661468,-4.064474,-5.774576,-1.228143,4.491114,-8.568910,1.518354,-7.413692,0.642509,1.987729,4.360747,-7.638769,5.494920,-6.397668,9.121049,-9.545641,7.153351,-0.849676,0.078764,-4.889931,6.936180,-4.971885,9.626042,-7.081355,8.463142,-0.597216,-7.123016,6.459230,-4.492461,-7.664377,4.212523,-8.442844,6.415506,-6.178550,7.937084,6.473695,0.585547,3.062835,-5.476044,9.886744,-9.757834,8.277767,2.451398,-5.504473,-3.550325,8.572005,6.928573,-2.740706,-2.673576,3.092733,-6.485128,-7.272693,9.991550,-7.696218,3.315610,6.202854,4.105594,-5.114414,-2.058622,-5.978104,7.420869,-1.597779,8.585126,-8.077036,6.754889,-0.764352,-9.112240,3.098959,-9.183543,-6.280473,-9.376070,8.558468,-8.049267,-7.596226,5.423794,6.227182,-7.835437,5.952137,-5.817940,2.054727,-6.964845,8.541302,7.640980,-0.882588,-4.657119,1.695230,-3.173583,9.129458,5.761256,9.065427,-8.770779,7.330455,-1.454732,7.360659,-3.939248,-1.793719,-1.940222,-6.362143,0.906838,3.620062,5.593810,-2.372762,-5.693157,-6.556394,9.666241,-0.312564,-2.346415,-6.160560,-4.122945,8.054807,-0.536541,6.829174,-6.032476,-1.660783,-0.764462,3.386405,8.549050,-6.856685,4.460109,3.280302,-6.657703,5.000809,4.747996,-5.117098,9.156715,3.088309,9.958143,-3.272988,-9.240714,6.786522,-5.863541,-3.819190,-5.183546,2.832184,0.455150,-3.841075,-6.442000,-1.588556,0.596640,-6.457120,-8.264435,8.568555,-4.724910,1.733336,-7.298649,-7.251527,-9.858486,-6.454250,1.475019,-4.474266,-8.438767,-4.628077,-7.196436,9.014881,4.595682,-3.748483,2.633266,-9.949220,9.617884,-0.118488,-5.535757,4.662353,3.883319,-7.068555,3.984424,6.482470,5.392511,6.710796,-6.882257,-4.759359,-9.203837,9.217918,-6.272376,5.873501,-6.325298,8.001758,-5.381543,0.979706,7.493655,-9.034591,-8.269132,-7.544950,-9.116796,-9.002090,-6.255443,-7.336693,1.291455,-4.697321,1.017859,-6.597348,6.961197,0.032139,-2.813564,9.839376,-7.513886,-1.051078,3.468369,-0.524170,-1.494744,-6.148472,5.072026,6.034005,7.347052,-6.505480,-4.499565,-2.042145,6.832127,5.438565,-1.173592,1.723066,8.821299,5.873318,-8.626602,-9.556639,-3.373670,-9.115898,9.670598,2.444643,9.772075,-0.020622,-5.340342,-6.389003,-9.120886,9.889735,-1.599076,3.486968,-8.731124,1.630923,-7.929243,-7.564158,-5.338324,1.618660,-9.719367,-2.761695,-9.028826,2.036854,2.356293,-8.938937,-0.301783,-0.013270,-3.421327,-7.512973,6.525723,-2.218276,3.556633,-1.400308,0.729081,2.900899,-1.608650,9.154845,-6.595904,6.031296,-1.447888,5.340697,7.407410,-4.813463,7.518546,4.852543,-5.793431,4.880854,-9.063956,0.344549,8.445484,8.397007,4.081299,-0.268968,-2.378492,1.740337,-4.515702,9.152979,9.365839,6.717351,-0.439425,2.742532,-5.962614,-9.100355,-5.009460,-3.082812,-7.180727,-0.980763,6.437782,-3.920466,-9.467287,-1.215117,-7.352019,4.407333,4.316322,4.160806,8.491959,-9.700865,9.363045,-1.834499,9.793737,2.366086,-4.450178,6.555684,-1.743231,8.727390,0.307144,7.910168,0.258861,3.564973,-7.034828,-6.426301,9.866378,0.384071,2.403680,1.333725,8.745721,5.264093,-9.934135,7.876567,-4.343380,9.179515,-2.947549,0.591587,0.588343,7.075861,2.173606,6.199798,-2.459724,3.738940,-1.443051,-8.236262,6.290722,-9.697914,-5.128246,4.967813,-8.593467,3.705768,0.781404,6.236538,4.962911,-8.255019,-3.573262,-8.477701,4.302056,5.757357,-8.566386,3.257546,7.530525,5.320757,5.555363,-4.039079,4.942006,-3.048062,-2.421984,-8.547644,-9.344196,8.068993,-6.889049,-5.557535,3.249616,-5.925879,8.732094,-2.356799,9.742915,4.322218,-5.420264,-2.499689,1.089691,-2.341443,-9.919308,0.840068,-3.323990,-7.082197,-8.763119,-0.682932,-4.365989,9.938982,-5.983415,-2.438904,6.159080,-0.267419,9.855899,-1.703909,7.791302,-1.350449,6.878919,9.560311,-0.291215,-3.068821,-1.947398,8.672599,5.077386,-1.008839,-3.956291,1.775663,-3.231750,7.989341,3.790265,-2.012278,-3.060510,-5.511054,3.725193,6.871277,1.131724,-3.544700,-5.955829,-9.378522,6.772517,5.418467,8.440507,1.528752,-0.626102,8.739435,-7.392589,2.467460,8.240756,-7.555694,6.781207,-3.760357,-3.948152,-0.541906,-0.883276,-2.852259,9.915727,7.109945,4.823098,9.582592,2.559937,4.367481,-5.221113,1.438172,-1.028702,-4.470273,0.793101,8.491785,-5.975346,2.633270,-4.808049,-2.299066,9.567083,9.827419,-6.548462,9.851332,4.237223,-3.367641,1.814653,7.313400,7.999594,8.623969,4.187777,-3.822963,-0.948971,-2.246380,-3.539778,-0.906657,8.261737,-4.064993,-3.017890,4.170076,-4.356299,-9.852272,6.937797,5.294628,1.687984,-1.052385,8.724422,-3.410841,-9.702990,7.103759,4.341013,-2.724201,3.317448,7.441836,-1.401722,9.502227,-2.162254,-6.051658,-2.829795,-5.253640,-5.255415,-4.181441,-8.910440,1.925548,9.566248,2.737218,1.656431,4.650052,-4.213399,-7.475486,-6.276147,6.693220,2.745722,-1.669967,2.249929,-0.396425,3.783047,-0.038800,0.782985,-0.718846,-3.859059,-8.863873,-9.763874,-6.835541,-4.113482,8.767839,-6.973701,2.755146,7.036883,7.840931,-7.035672,-8.207235,-8.884828,6.644990,8.144566,6.482556,7.246576,2.143112,3.472948,-5.305135,-7.628211,-2.080577,-1.262431,7.239619,-7.338121,9.295641,-0.720225,-6.812608,-7.768096,-3.825617,-1.131653,1.647706,1.612441,6.773793,-2.642781,-1.365644,0.447498,9.912304,-2.135827,0.025954,-4.041742,-1.644688,6.212176,7.374690,-6.899459,1.450237,3.432070,9.572156,0.483877,-0.063420,-2.641153,-2.831548,7.723859,-1.043133,-7.978949,-3.261413,-1.896757,8.040443,-9.453919,8.833767,7.074328,3.298570,4.189340,1.245556,0.711721,-4.525477,2.812739,5.143146,-1.865461,-2.468346,-9.216598,1.057560,1.231377,-3.189569,-7.708292,3.234188,-9.116914,-3.142037,2.109152,-6.794824,1.402239,-6.535613,0.518745,-5.888308,3.762517,9.910828,2.276067,-3.285217,1.043227,-5.158457,-4.153466,0.829193,-9.095208,-7.205862,-2.042279,-0.552552,1.813909,-1.331447,8.798492,3.827446,2.519045,-1.286887,5.068078,-7.724955,7.176337,-1.684185,-9.586609,-4.060029,-6.157624,-9.494610,6.070862,-6.481605,7.897034,3.787773,4.906272,-8.666952,5.437709,-2.253203,5.568030,-6.809096,7.051945,6.967822,-8.370956,6.611760,-8.803728,9.395810,-6.892426,1.893549,-6.199892,-0.740321,6.137673,8.438770,9.781108,1.880881,-7.590403,5.653982,4.072159,6.663062,-6.889703,-6.587199,-1.158767,-0.106091,1.709169,-9.796019,4.062881,-8.494568,0.971865,5.392981,6.010050,-3.181463,-4.640418,0.235399,-8.518614,-9.718745,1.873838,3.336477,-1.605097,7.645958,1.714528,-2.678587,-2.769024,3.947628,-3.980402,6.387018,-2.498432,0.007485,5.358094,-7.448488,4.313668,6.489379,7.139836,-6.158952,-6.537246,2.309437,0.516087,-8.577020,-0.012329,-3.066906,6.733189,-3.347423,1.357630,-2.199879,7.404002,-6.109567,9.955600,9.643751,-2.314892,2.820859,3.800713,2.149203,-3.706785,6.852334,6.419473,5.693122,0.364795,-8.306215,5.909738,5.805406,1.250598,4.642900,4.318835,4.906375,-2.303079,9.017587,-1.528458,-5.434465,-7.214346,0.168668,1.280432,-5.532752,6.467483,8.668507,-0.786503,3.271694,-2.516166,-9.510230,5.123274,-0.669098,-7.343337,-4.668994,-8.415847], dtype = "float64")#candidate|13669|(1584,)|const|float64
call_13668 = relay.TupleGetItem(func_2825_call(relay.reshape(const_13669.astype('float64'), [16, 11, 9])), 2)
call_13670 = relay.TupleGetItem(func_2827_call(relay.reshape(const_13669.astype('float64'), [16, 11, 9])), 2)
bop_13674 = relay.logical_or(uop_13657.astype('bool'), relay.reshape(bop_13661.astype('bool'), relay.shape_of(uop_13657))) # shape=(14, 8, 78)
bop_13677 = relay.logical_or(uop_13659.astype('bool'), relay.reshape(bop_13664.astype('bool'), relay.shape_of(uop_13659))) # shape=(14, 8, 78)
output = relay.Tuple([call_13644,call_13646,call_13648,var_13649,call_13668,const_13669,bop_13674,])
output2 = relay.Tuple([call_13645,call_13647,call_13650,var_13649,call_13670,const_13669,bop_13677,])
func_13678 = relay.Function([var_13649,var_13660,], output)
mod['func_13678'] = func_13678
mod = relay.transform.InferType()(mod)
var_13679 = relay.var("var_13679", dtype = "uint16", shape = ())#candidate|13679|()|var|uint16
var_13680 = relay.var("var_13680", dtype = "float32", shape = (14, 8, 78))#candidate|13680|(14, 8, 78)|var|float32
output = func_13678(var_13679,var_13680,)
func_13681 = relay.Function([var_13679,var_13680,], output)
mutated_mod['func_13681'] = func_13681
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13738 = relay.var("var_13738", dtype = "float64", shape = (4, 2, 3))#candidate|13738|(4, 2, 3)|var|float64
uop_13739 = relay.log(var_13738.astype('float64')) # shape=(4, 2, 3)
output = uop_13739
output2 = uop_13739
func_13743 = relay.Function([var_13738,], output)
mod['func_13743'] = func_13743
mod = relay.transform.InferType()(mod)
mutated_mod['func_13743'] = func_13743
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13744 = relay.var("var_13744", dtype = "float64", shape = (4, 2, 3))#candidate|13744|(4, 2, 3)|var|float64
func_13743_call = mutated_mod.get_global_var('func_13743')
call_13745 = func_13743_call(var_13744)
output = call_13745
func_13746 = relay.Function([var_13744], output)
mutated_mod['func_13746'] = func_13746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11162_call = mod.get_global_var('func_11162')
func_11164_call = mutated_mod.get_global_var('func_11164')
call_13782 = func_11162_call()
call_13783 = func_11162_call()
func_10381_call = mod.get_global_var('func_10381')
func_10383_call = mutated_mod.get_global_var('func_10383')
call_13792 = relay.TupleGetItem(func_10381_call(), 0)
call_13793 = relay.TupleGetItem(func_10383_call(), 0)
func_11238_call = mod.get_global_var('func_11238')
func_11241_call = mutated_mod.get_global_var('func_11241')
call_13800 = relay.TupleGetItem(func_11238_call(relay.reshape(call_13792.astype('float32'), [720, 1])), 1)
call_13801 = relay.TupleGetItem(func_11241_call(relay.reshape(call_13792.astype('float32'), [720, 1])), 1)
output = relay.Tuple([call_13782,call_13792,call_13800,])
output2 = relay.Tuple([call_13783,call_13793,call_13801,])
func_13810 = relay.Function([], output)
mod['func_13810'] = func_13810
mod = relay.transform.InferType()(mod)
output = func_13810()
func_13811 = relay.Function([], output)
mutated_mod['func_13811'] = func_13811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11381_call = mod.get_global_var('func_11381')
func_11382_call = mutated_mod.get_global_var('func_11382')
call_13858 = func_11381_call()
call_13859 = func_11381_call()
func_12174_call = mod.get_global_var('func_12174')
func_12175_call = mutated_mod.get_global_var('func_12175')
call_13866 = func_12174_call()
call_13867 = func_12174_call()
func_12949_call = mod.get_global_var('func_12949')
func_12952_call = mutated_mod.get_global_var('func_12952')
var_13883 = relay.var("var_13883", dtype = "uint32", shape = (1040,))#candidate|13883|(1040,)|var|uint32
call_13882 = relay.TupleGetItem(func_12949_call(relay.reshape(var_13883.astype('uint32'), [10, 13, 8])), 2)
call_13884 = relay.TupleGetItem(func_12952_call(relay.reshape(var_13883.astype('uint32'), [10, 13, 8])), 2)
output = relay.Tuple([call_13858,call_13866,call_13882,var_13883,])
output2 = relay.Tuple([call_13859,call_13867,call_13884,var_13883,])
func_13895 = relay.Function([var_13883,], output)
mod['func_13895'] = func_13895
mod = relay.transform.InferType()(mod)
var_13896 = relay.var("var_13896", dtype = "uint32", shape = (1040,))#candidate|13896|(1040,)|var|uint32
output = func_13895(var_13896)
func_13897 = relay.Function([var_13896], output)
mutated_mod['func_13897'] = func_13897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11269_call = mod.get_global_var('func_11269')
func_11271_call = mutated_mod.get_global_var('func_11271')
call_13963 = relay.TupleGetItem(func_11269_call(), 1)
call_13964 = relay.TupleGetItem(func_11271_call(), 1)
output = relay.Tuple([call_13963,])
output2 = relay.Tuple([call_13964,])
func_13970 = relay.Function([], output)
mod['func_13970'] = func_13970
mod = relay.transform.InferType()(mod)
output = func_13970()
func_13971 = relay.Function([], output)
mutated_mod['func_13971'] = func_13971
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13986 = relay.var("var_13986", dtype = "float64", shape = (1, 7, 9))#candidate|13986|(1, 7, 9)|var|float64
uop_13987 = relay.sin(var_13986.astype('float64')) # shape=(1, 7, 9)
output = uop_13987
output2 = uop_13987
func_13989 = relay.Function([var_13986,], output)
mod['func_13989'] = func_13989
mod = relay.transform.InferType()(mod)
mutated_mod['func_13989'] = func_13989
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13990 = relay.var("var_13990", dtype = "float64", shape = (1, 7, 9))#candidate|13990|(1, 7, 9)|var|float64
func_13989_call = mutated_mod.get_global_var('func_13989')
call_13991 = func_13989_call(var_13990)
output = call_13991
func_13992 = relay.Function([var_13990], output)
mutated_mod['func_13992'] = func_13992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11643_call = mod.get_global_var('func_11643')
func_11645_call = mutated_mod.get_global_var('func_11645')
call_14031 = func_11643_call()
call_14032 = func_11643_call()
output = call_14031
output2 = call_14032
func_14039 = relay.Function([], output)
mod['func_14039'] = func_14039
mod = relay.transform.InferType()(mod)
mutated_mod['func_14039'] = func_14039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14039_call = mutated_mod.get_global_var('func_14039')
call_14040 = func_14039_call()
output = call_14040
func_14041 = relay.Function([], output)
mutated_mod['func_14041'] = func_14041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10041_call = mod.get_global_var('func_10041')
func_10042_call = mutated_mod.get_global_var('func_10042')
call_14045 = func_10041_call()
call_14046 = func_10041_call()
output = call_14045
output2 = call_14046
func_14072 = relay.Function([], output)
mod['func_14072'] = func_14072
mod = relay.transform.InferType()(mod)
output = func_14072()
func_14073 = relay.Function([], output)
mutated_mod['func_14073'] = func_14073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13609_call = mod.get_global_var('func_13609')
func_13611_call = mutated_mod.get_global_var('func_13611')
call_14197 = func_13609_call()
call_14198 = func_13609_call()
func_11941_call = mod.get_global_var('func_11941')
func_11943_call = mutated_mod.get_global_var('func_11943')
call_14199 = func_11941_call()
call_14200 = func_11941_call()
output = relay.Tuple([call_14197,call_14199,])
output2 = relay.Tuple([call_14198,call_14200,])
func_14209 = relay.Function([], output)
mod['func_14209'] = func_14209
mod = relay.transform.InferType()(mod)
mutated_mod['func_14209'] = func_14209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14209_call = mutated_mod.get_global_var('func_14209')
call_14210 = func_14209_call()
output = call_14210
func_14211 = relay.Function([], output)
mutated_mod['func_14211'] = func_14211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12242_call = mod.get_global_var('func_12242')
func_12243_call = mutated_mod.get_global_var('func_12243')
call_14225 = relay.TupleGetItem(func_12242_call(), 0)
call_14226 = relay.TupleGetItem(func_12243_call(), 0)
output = call_14225
output2 = call_14226
func_14238 = relay.Function([], output)
mod['func_14238'] = func_14238
mod = relay.transform.InferType()(mod)
mutated_mod['func_14238'] = func_14238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14238_call = mutated_mod.get_global_var('func_14238')
call_14239 = func_14238_call()
output = call_14239
func_14240 = relay.Function([], output)
mutated_mod['func_14240'] = func_14240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13464_call = mod.get_global_var('func_13464')
func_13465_call = mutated_mod.get_global_var('func_13465')
call_14286 = func_13464_call()
call_14287 = func_13464_call()
func_13970_call = mod.get_global_var('func_13970')
func_13971_call = mutated_mod.get_global_var('func_13971')
call_14294 = relay.TupleGetItem(func_13970_call(), 0)
call_14295 = relay.TupleGetItem(func_13971_call(), 0)
func_6838_call = mod.get_global_var('func_6838')
func_6842_call = mutated_mod.get_global_var('func_6842')
const_14303 = relay.const([-4.613527,-5.454562,-6.700853,-4.794065,1.511421,-3.395364,-3.964430,0.323020,7.004861,-1.297836,6.967239,3.884294,5.325237,1.090336,-7.537165,6.336406,3.692143,-2.373264,-2.425360,-4.120572,-3.700379,2.237639,8.106162,7.581290,-0.664576,-1.778171,2.051949,-6.249729,8.954031,3.853745,9.312983,-5.174761,-5.729543,-8.098055,-5.602532,-7.188403,2.222476,0.093029,1.224531,-4.212237,-6.369580,7.762342,-1.686754,-7.844659,0.558359,7.190576,-7.487630,7.808392,5.190378,4.214274,3.523213,-9.448222,-9.526341,7.201865,-3.003830,7.491414,-1.692222,-0.516347,-2.332138,-1.298423,-8.633009,-3.490282,0.390168,3.254900,-3.623124,-6.863857,-2.429285,-5.163697,-2.522305,-4.896217,6.955403,-2.992522,-2.405441,2.919448,9.907793,-2.051933,7.108188,3.187337,3.517912,5.526104,1.021168,7.359369,-3.489810,-7.798336,9.614469,2.803039,-1.752947,-3.221435,-0.884896,-6.022549,6.264683,1.321759,1.992231,8.265795,2.386987,-6.150645,3.663421,2.842072,-0.884371,-5.707950,-2.660570,-0.338906,4.462989,-3.330316,-5.875539,-8.837914,2.821397,1.782010,-9.937212,2.818528,4.141335,-7.679945,9.476816,9.817036,-0.238000,2.605998,9.750426,1.164993,-8.229485,9.570380], dtype = "float64")#candidate|14303|(120,)|const|float64
var_14304 = relay.var("var_14304", dtype = "bool", shape = (1, 40))#candidate|14304|(1, 40)|var|bool
call_14302 = relay.TupleGetItem(func_6838_call(relay.reshape(const_14303.astype('float64'), [8, 5, 3]), relay.reshape(var_14304.astype('bool'), [20, 2]), ), 1)
call_14305 = relay.TupleGetItem(func_6842_call(relay.reshape(const_14303.astype('float64'), [8, 5, 3]), relay.reshape(var_14304.astype('bool'), [20, 2]), ), 1)
output = relay.Tuple([call_14286,call_14294,call_14302,const_14303,var_14304,])
output2 = relay.Tuple([call_14287,call_14295,call_14305,const_14303,var_14304,])
func_14317 = relay.Function([var_14304,], output)
mod['func_14317'] = func_14317
mod = relay.transform.InferType()(mod)
mutated_mod['func_14317'] = func_14317
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14318 = relay.var("var_14318", dtype = "bool", shape = (1, 40))#candidate|14318|(1, 40)|var|bool
func_14317_call = mutated_mod.get_global_var('func_14317')
call_14319 = func_14317_call(var_14318)
output = call_14319
func_14320 = relay.Function([var_14318], output)
mutated_mod['func_14320'] = func_14320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9484_call = mod.get_global_var('func_9484')
func_9485_call = mutated_mod.get_global_var('func_9485')
call_14356 = relay.TupleGetItem(func_9484_call(), 1)
call_14357 = relay.TupleGetItem(func_9485_call(), 1)
var_14365 = relay.var("var_14365", dtype = "float32", shape = (14, 8, 78))#candidate|14365|(14, 8, 78)|var|float32
bop_14366 = relay.left_shift(call_14356.astype('uint16'), relay.reshape(var_14365.astype('uint16'), relay.shape_of(call_14356))) # shape=(14, 8, 78)
bop_14369 = relay.left_shift(call_14357.astype('uint16'), relay.reshape(var_14365.astype('uint16'), relay.shape_of(call_14357))) # shape=(14, 8, 78)
bop_14389 = relay.subtract(var_14365.astype('int16'), relay.reshape(bop_14366.astype('int16'), relay.shape_of(var_14365))) # shape=(14, 8, 78)
bop_14392 = relay.subtract(var_14365.astype('int16'), relay.reshape(bop_14369.astype('int16'), relay.shape_of(var_14365))) # shape=(14, 8, 78)
func_8886_call = mod.get_global_var('func_8886')
func_8892_call = mutated_mod.get_global_var('func_8892')
const_14404 = relay.const([[-5.499586,-1.352663,8.091836,2.656423,-4.247483,-5.589898,3.280860,0.564336,-3.941205,1.370356,-0.149893,-5.344189,3.393311,8.417510,0.633150,-0.178374,4.825214,4.973873,2.666215,4.256754,-1.042876,-3.655456,-6.859826,-4.727170,-1.828920,6.964897,-0.379347,-7.724122,-3.064341,6.233005,-2.400898,8.641635,-9.201147,-3.570282,2.778839,6.608088,-2.633365,1.787250,-4.383778,3.897793,9.726976,9.813151,-2.456689,-6.619995,1.168254,3.154655,1.434612,-6.445108],[1.156656,8.287485,-8.387958,-3.144577,-3.378593,1.508189,1.200561,-9.776111,-7.537216,-7.757804,2.246040,0.051003,-5.399938,-5.989462,9.678242,-5.636196,7.367525,2.719876,-6.361568,-3.224548,9.364569,2.018658,-5.829682,-5.649666,7.521347,-2.206212,6.587317,-3.974279,-2.718841,3.272154,2.795163,-2.962184,2.638901,-5.111239,-7.022560,8.863385,-1.577441,-1.055979,-2.030451,8.891067,-1.673707,-5.630042,7.770639,5.567799,6.144513,2.569119,-7.305926,3.507325],[2.132390,-3.119595,6.630738,-8.578774,-7.622732,-0.568680,5.056194,2.457890,1.995900,7.142619,-4.455688,-3.395925,9.842665,-9.854834,-5.742718,7.118222,2.655709,6.523600,6.130041,-0.377752,-9.993186,-7.971941,2.123550,5.158332,0.130162,0.994598,-1.368338,3.926005,-5.716257,2.202160,-7.050539,-8.315025,-4.807790,-5.687416,0.019325,-8.840106,9.634183,9.117131,-7.341347,-8.014635,1.580738,1.764261,2.089451,0.480014,-1.836527,-8.606932,-8.795084,-5.261967],[-5.575595,-9.629681,7.904701,-0.703135,-1.159004,6.991684,-0.788872,-4.743288,-5.643680,1.567477,3.182431,7.125162,-7.649945,-7.367690,-3.699304,2.518407,9.690442,7.690013,-9.502995,3.582089,5.578401,7.679417,-7.488336,-6.954458,7.054933,1.912612,-6.180180,-5.617656,-1.881093,2.787222,0.661017,-8.232973,0.666419,-8.598837,0.160980,-2.005165,-4.258114,-7.771057,5.701875,8.361584,6.422243,1.809123,2.101956,-4.386664,-2.219666,1.176649,-3.295174,-4.158745]], dtype = "float64")#candidate|14404|(4, 48)|const|float64
const_14405 = relay.const([9,-2,8,-2,-4,10,-3,2,5,-4,-4,-4,-3,10,-1,8,3,-9,-9,9,9,7,-10,5,6,4,2,7,-6,5,-6,-9,6,9,-1,9,8,4,-4,3,-8,-8,-5,-6,-3,-2,7,-5,-1,6,-5,-2,10,10,4,-2,10,-5,-4,-8,3,6,-1,-10,-9,2,3,6,-1,5,-10,10,-6,3,-3,9,-10,5,-7,-4,3,-8,-2,-2,-1,-8,6,8,-10,-4,-3,10,-9,7,-10,-10,-8,1,-5,3,-10,6,1,-9,-7,8,7,7,3,-2,4,-7,-2,-4,-1,-2,10,-8,4,-3,-10,4,9,5,-5,4,-9,-4,9,-10,5,-1,2,7,7,-8,1,6,3,-1,-8,-2,5,-10,5,3,3,-6,-3,10,5,9,-2,-5,6,-7,-2,-1,-6,1,2,3,2,-10,-4,-5,10,4,-8,-9,6,9,5,-7,5,-2,6,10,-5,-2,-3,-8,2,-5,1,-7,9,9,7,5,-5,-7,-2,-10,-9,8,1,5,7,6,-3,9,8,-6,-3,5,9,1,-2,10,3,-5,3,-10,9,10,-8,4,4,-8,-10,-7,8,-10,-10,4,-8,2,1,4,7,-2,3,-8,7,-6,-1,-7,2,1,-10,7,-6,-1,-10,-6,1,1,-5,10,7,10,10,6,5,-6,-2,4,2,4,-10,-9,10,4,-1,9,2,-5,-7,4,10,-8,3,-2,-7,8,-7,-10,-9,2], dtype = "int32")#candidate|14405|(280,)|const|int32
const_14406 = relay.const([-7,1,3,2,-9,-7,5,-8,4,-3,5,-1,7,-9,9,10,-9,5,6,-1,-10,-3,8,-3,-9,7,8,-8,8,-4,5,1,3,-8,-3,-6,-9,1,-4,-2,-3,-8,-8,6,2,-1,1,3,-5,-3,-1,-5,-1,8,3,10,-2,6,5,-4,-1,-5,4,-6,-8,9,-1,-2,1,8,1,-9,-6,-2,7,9,-8,10,-2,-3,5,-4,8,-9,-5,2,-6,-10,6,-5,-8,10,-1,-10,-7,5,-6,-10,-4,-5,7,6,8,10,-8,8,-1,1,-9,7,5,9,3,-8,-10,6,10,-5,-8,4,-1,-1,1,6,-5,7,7,3], dtype = "int64")#candidate|14406|(128,)|const|int64
const_14407 = relay.const([-7.386726,9.338334,-8.413384,1.550935,6.961857,8.797041,-6.805113,4.764327,-3.358479,7.483719,-9.085024,-2.675362,9.958729,-9.536518,9.001942,6.876375,0.557038,4.457002,5.932109,4.182966,6.179607,7.321020,-9.983425,3.701219,-2.260873,-9.426684,1.486671,-3.500583,-2.177267,-7.744981,-1.202482,-4.438833,-9.349335,0.941477,-9.895165,-5.882440,0.463656,5.017827,-6.922246,1.337954,7.082749,1.731256,-9.925105,1.636854,-3.326336,-1.437687,0.419915,4.714197,-7.110593,-4.118614,9.153468,-0.719347,-4.726034,-7.068648,-0.325994,9.404008,-4.954034,-7.815757,3.740009,0.478931,9.855785,-8.582119,-0.879640,-1.668902,-5.640497,-6.381525,2.607826,-8.833408,-9.880439,-9.244160,-1.980589,2.141973,-8.262771,5.074703,8.326324,-6.702984,-3.389825,-5.250872,-4.553765,5.883696,1.205901,-0.012513,-8.272104,-4.710292,2.732179,0.323194,2.809517,-2.903071,5.681183,6.608821,1.416767,0.730028,-1.657009,-5.931337,4.180930,4.852536,1.194450,7.568725,-0.598251,6.611615,3.462757,-5.178915,0.634637,-7.969950,-8.911847,1.286884,0.867461,-4.090342,-1.195796,-9.528891,-6.795322,-3.193836,6.432905,-5.106784,-6.975391,-3.284019,-5.387199,-5.040254,2.877159,-5.023252,-3.958555,1.104197,9.758382,5.899079,1.267342,5.132626,3.220365,8.909369,5.573842,-7.910993,2.728596,4.706018,1.329302,3.951622,3.933803,5.350405,-4.351356,3.811714,-9.538574,3.323460,6.416258,9.198692,8.672355,5.576966,-5.270558,-6.346611,-2.747190,-5.711766,0.816766,9.350642,2.602826,-9.377981,4.522923,1.618800,-1.578037,5.401077,5.787098,-8.129032,-0.918993,-8.217064,0.318436,-5.082032,-3.320658,-5.832819,8.668256,-9.440026,-0.110570,-9.941824,7.162232,1.218114,-2.234726,1.906640,2.713560,-4.530238,1.803208,1.480912,1.597071,2.030500,-9.379781,5.317962,2.339845,-0.832466,-7.903750,9.998679,1.723708,3.010521,-2.818453,3.545767,-8.102649,2.002886,-0.421110,4.422789,-2.682133,-3.095565,-1.373810,-7.977345,8.068178,0.189383,1.338309,0.647313,6.621492,2.681503,7.567806,4.582623,-9.379085,-3.408614,7.028238,0.095233,-3.319646,-4.845752,3.399562,-3.330550,-0.360283,4.045138,-1.111287,-6.912264,9.410984,8.079446,-6.380959,1.180413,7.098782,-8.242682,6.608570,5.928004,2.094519,-4.509379,-4.993243,1.674824,-0.752291,1.351654,-0.759757,-3.390558,4.367047,-9.271369,-5.858733,-4.880345,8.434421,6.680113,-7.160717,-0.450874,-3.611652,9.732244,5.533351,2.526681,9.797611,1.275355,-0.253362,5.572410,3.331519,-0.298624,8.378413,-8.930321,2.390958,7.783644,-5.089597,4.721987,-1.137543,8.684881,0.451851,2.901650,0.548898,-0.961955,-3.766524,9.199180,-1.649991,-0.291357,1.932013,-6.717824,-8.557842,-5.759151,-6.737783,8.229792,-2.864684,-9.307961,-9.017511,-9.618851,-7.455599,0.993025,2.431694,3.759083,-4.692733,9.627964,-5.780553,-4.363902,-2.069866,9.222982,-5.206190,7.670332,1.083413,7.884163,-9.398125,-0.608772,-6.548445,5.757262,-9.849046,0.954034,-0.626693,-5.406162,5.023219,5.527665,-6.306964,-9.935419,-9.558375,1.471918,4.329741,1.871191,9.140499,8.822332,2.900966,5.842272,2.273373,5.430460,4.103186,-0.013470,-6.480750,-1.873654,-3.907317,-4.592292,2.983766,-9.209120,-7.453116,-9.236548,7.172913,3.783257,-8.932487,0.936347,-0.125604,-8.652197,-4.955176,-4.098125,-7.403234,2.279012,6.506269,0.792610,-8.846915,8.661619,1.101620,-9.954723,2.775664,-1.456321,-7.483448,1.011518,-7.429722,-8.309408,-0.508711,6.624087,-0.309954,6.915722,-6.816156,-6.706899,2.275472,4.927545,5.197760,6.961914,-2.437317,-9.159152,3.821363,0.341204,8.979074,0.145632,-6.688006,5.406738,9.488351,-5.999894,2.066189,-7.403499,-8.253517,-3.368398,1.530284,4.803665,4.752344,-1.397461,6.193552,-0.943393,-8.219309,8.608977,-9.982651,1.797718,5.677642,-2.272431,-2.827743,6.873997,-7.798445,-0.063583,-5.489018,3.968360,2.679331,-0.687688,1.424833,-3.440894,-0.466101,-2.804053,-7.860255,0.080524,2.438603,-5.258365,-0.441640,7.929884,2.968469,2.063149,2.432412,9.698402,-0.075170,4.985573,-0.147027,4.831319,6.821642,-2.152584,2.251908,-9.890150,2.030883,-2.830633,-9.530374,-9.779580,7.312764,8.074945,4.733752,-3.133079,4.189869,7.951503,6.599249,-9.844181,2.855578,-6.815300,-5.816835,4.016869,8.660402,-4.810618,3.379076,-6.731769,-9.609615,4.495359,-0.789776,7.671016,-0.682950,-3.925540,-1.539022,-3.709829,7.236289,-0.096651,0.025934,7.455258,-1.027275,1.995464,-6.007740,-1.848061,0.912519,-4.563882,5.149626,7.867769,4.034044,2.007083,8.620445,0.375667,-8.836692,-3.232588,2.404491,4.717307,7.085941,-9.863803,-2.095954,-2.312188,-8.897452,7.933913,1.107577,9.982300,-3.267590,-5.100093,6.352844,-4.462984,1.447233,7.372797,-4.073200,-8.735701,4.260805,-0.782981,-7.576718,-1.718516,3.762350,-9.895767,-7.694294,7.745712,4.800771,-9.350161,2.799211,-3.619027,-3.475402,-8.541847,-5.529927,-2.457686,7.868016,6.072535,-6.664287,-5.303709,-8.104637,-8.606201,5.893845,9.181634,4.576528,9.202369,3.162791,6.409845,6.828500,-8.126556,2.487113,-8.693898,4.436956,-7.440281,0.745834,-2.272175,3.213503,-9.201640,-7.711818,7.238354,-5.264969,4.265612,1.970383,2.856899,-0.730281,-8.610307,-0.395558,-8.824365,9.158602,7.351768,9.490958,-4.080566,-1.913498,8.460259,-0.205083,-3.842250,4.412128,-6.082858,7.893015,-1.360231,-6.411260,4.662567,4.739355,-8.510937,-1.189391,6.043119,4.365216,-3.858823,-5.614424,2.957782,1.695706,8.707059,5.572525,6.452666,5.902127,-6.525712,-9.813190,3.548357,8.472756,-0.727115,4.556715,8.459702,4.652121,0.976847,-5.933349,1.372400,-2.700895,-4.432821,-7.312781,-1.192981,3.981084,8.646288,-9.665348,7.148068,2.621719,1.177269,4.559132,8.761526,1.748509,8.785925,0.497285,3.664671,7.397347,6.027116,5.586799,-5.614024,-9.713502,-8.365934,-2.004423,-2.409687,-3.524200,-2.949343,0.326035,-3.238170,-5.997643,-4.551613,-5.595205,-5.476437,6.072269,-6.644887,7.760337,-9.953619,-0.615482,1.854437,-7.481983,-1.960553,6.506762,2.756153,2.674324,7.176692,1.996379,3.971233,4.934803,7.394784,-7.799478,8.069532,-9.309974,6.625837,1.644703,4.250076,9.120063,-1.596616,8.877985,2.736749,5.051850,-8.669908,-2.807439,7.405152,2.307912,-2.397682,-7.071114,-3.689843,1.689893,7.915068,-1.068585,4.885287,4.893840,-5.118471,2.728849,5.024684,7.210255,5.094331,3.584207,1.250816,1.805582,-7.973858,-2.709378,6.207259,1.039667,-5.749863,2.126667,0.905795,7.017206,3.692506,5.571342,0.070142,2.316809,-1.600214,3.404305,4.233260,7.880551,-5.599932,-5.528433,-6.603111,8.634141,9.207268,-1.606128,9.999450,0.360505,-9.527539,7.103475,6.535841,-8.714502,8.974268,1.401808,-6.916108,5.337532,-2.304483,-3.390800,2.673405,7.901585,3.370357,8.441458,3.153777,4.670760,0.266712,-1.004611,0.858023,-7.232570,-2.969202,-8.267631,-2.744228,-3.295824,0.968384,9.637063,-0.948514,-2.461255,-7.748648,-3.182888,-0.868735,8.656927,-8.799070,-6.889381,-3.109370,-6.929773,-4.163772,-3.332636,-4.248699,-5.516766,7.187792,-7.179190,-0.151176,6.524840,-6.746700,2.961165,-8.902828,-2.330077,-0.610177,-3.844826,6.744873,8.394059,8.071584,6.850884,-3.530589,-0.953660,9.682629,7.576569,3.845471,9.569942,-9.680180,-0.383951,7.770143,6.620774,7.394362,3.711672,6.827739,-6.614958,-0.522249,-2.346928,1.605905,-5.613128,-0.193131,3.730704,2.664834,2.244540,7.910666,-7.914767,6.746810,-2.486666,7.997905,4.485632,-3.684879,-0.742107,6.859831,-7.813159,3.571755,-0.973478,-6.274892,1.504724,-1.688069,-6.162632,-6.780937,-2.528674,-9.091028,-8.279032,-3.855167,-6.724841,6.389513,5.568693,-7.277825,-3.377442,8.575924,4.442334,-5.925497,0.068664,1.180834,-9.304019,-9.831452,8.437519,7.710801,-0.654886,-3.445672,-6.354965,3.855363,-4.462258,8.998853,2.395590,1.782585,8.376644,6.078237,-7.324689,-5.091398,-7.489273,-4.685263,2.918039,8.987001,2.592426,6.403292,-0.394492,-0.492342,-1.674538,9.621919,-6.068739,-7.299009,-2.722478,-1.544614,-7.014989,0.219505,9.600518,0.545009,1.341021,-9.877776,-6.518353,-6.137078,1.118557,4.153696,3.068943,0.601228,-7.005443,3.460559,-9.092792,2.217732,-8.521700,5.127581,-0.279066,-2.134931,-9.663920,1.090525,-8.732159,4.124497,-5.317874,0.519145,6.078921,7.674208,-9.314074,-3.972696,-6.136357,-8.623039,-5.617245,-5.772904,-5.304096,-0.092197,2.234580,7.051948,8.833331,1.725517,9.270849,7.785459,-7.835707,-8.830379,0.817091,5.019889,0.761679,-0.624908,9.736951,-7.619144,-9.213062,-1.572953,-7.117717,0.944305,-6.113121,8.102659,-9.495905,-1.760485,2.257571,1.769795,3.857537,-6.745261,-5.298604,-6.645706,3.229597,0.631906,7.044165,-7.239968,0.569626,-2.158865,-0.101925,-1.077891,-7.775498,3.304516,1.644350,9.026066,0.096661,6.986966,-2.879273,-8.183874,9.609861,1.650398,6.148764,-7.527217,-8.181920,3.644465,2.724724,9.617670,-5.639559,0.320338,7.970838,4.880604,5.086738,2.880540,-2.816292,6.891394,7.495723,2.606972,-5.980149,-6.623423,-2.049740,-7.796574,4.000533,8.231701,-2.269151,8.703152,9.252460,6.724968,-2.530302,3.755817,-5.058884,-6.474413,6.615127,-8.632043,6.942370,-3.963983,-3.368084,3.590824,-5.221676,-8.051667,-1.059065,5.395818,-6.672726,-5.470721,4.710226,4.569841,-9.082161,7.573857,8.486204,-7.444548,-8.869013,-6.406055,4.486601,-7.298624,2.665210,-0.262334,3.028321,6.354055,-8.687190,-6.796892,2.382292,4.182640,5.006775,-4.160626,2.209863,4.137577,0.763195,-0.975166,-7.218513,8.627261,5.711917,6.194236,1.720922,-5.362181,-1.235169,2.214857,8.453810,1.276341,6.788311,0.346616,-5.730897,9.607841,9.011869,-2.165192,-6.418736,0.646416,-7.926206,-5.565366,1.330350,3.500084,0.685481,-9.386283,-4.876182,4.013188,0.935407,-5.499347,-3.716253,1.736203,7.748429,8.903321,5.271573,-5.694959,4.380431,6.213044,7.383002,-5.611707,5.798976,6.416089,-0.834450,-9.323988,-3.098763,-9.423199,-6.792438,-5.426414,4.601113,6.166140,-4.948312,-7.093978,2.983949,-3.429586,6.956731,4.966274,5.929520,-3.157948,-0.417550,7.677778,6.662494,4.244876,-9.990937,4.775205,2.056997,-8.036450,-3.501926,8.175767,6.225288,8.161886,-6.786256,8.301925,9.711477,2.758218,-1.928551,-8.399472,-0.187331,4.805580,2.477388,4.380959,-8.338124,-9.141215,-6.684486,-4.514269,-8.162137,-6.483869,-3.726652,-4.149938,9.233449,9.719355,5.170724,2.477263,4.379840,-0.004488,-7.370681,3.664681,0.085281,5.833049,2.360257,0.013651,1.946863,-7.031130,-1.818191,-2.121749,9.648615,0.439977,2.512691,-3.369169,-1.833991,-3.551894,-3.511645,4.530475,7.476655,-5.424523,-9.182538,-9.697913,9.735023,5.296853,-7.498914,-5.741758,-9.472516,-5.485458,-5.492440,-4.197045,4.719005,4.000089,8.758529,0.440396,-3.711538,1.379306,-1.325596,-5.798157,0.698189,2.841910,1.278894,0.726702,7.070957,-9.026562,-7.918472,-0.295255,1.176870,-7.637148,-5.437488,8.347589,4.877031,6.795636,3.190870,8.717676,-4.954448,-4.813626,-6.609384,2.423902,0.152927,-9.471465,-3.737644,6.213331,-8.188714,-8.161691,2.268856,3.801313,1.635230,-7.678837,9.770459,7.415784,-0.017904,8.369150,3.667004,8.156887,-2.397526,-5.309568,-2.600888,-2.907356,2.164846,-4.621761,4.509718,9.768621,-1.461746,7.690992,-5.572092,2.310532,-3.745291,1.807454,6.704220,-1.186269,-8.445071,7.373539,-7.314064,-4.408205,-2.702451,-5.449868,-2.642070,-4.299233,-2.650190,-2.828140,-8.140238,9.370561,3.929883,-2.128252,1.509615,-1.607050,-2.891739,7.411469,-1.471607,-1.848241,-4.568011,-8.302615,0.652544,9.093965,-2.365330,-8.590252,-5.787246,9.922896,-4.839043,-0.787579,-2.289130,-9.092836,-2.728277,2.479325,4.208734,-5.240214,-9.423938,-6.755177,6.140144,8.264524,-9.160326,1.342308,-7.294347,-7.650411,-1.379301,-4.618567,5.111256,6.394579,-6.530674,-2.280058,0.173506,5.171619,5.742260,2.113438,-0.821437,-4.477454,-8.456617,6.303427,-7.789511,6.720115,-9.932633,4.033512,-5.161019,-4.811066,7.576772,-8.578683,9.176223,8.637011,-6.712723,7.405915,8.716428,5.694943,1.522431,-7.893895,-6.692941,1.264880,-8.945433,-3.789658,5.370376,3.314950,-8.200042,9.122026,-3.654204,-5.621081,0.727230,7.824919,-1.802143,-2.664996,0.969463,5.909450,9.620840,-4.990293,-6.481630,-1.837224,0.388325,-5.479931,-0.141068,2.774587,-8.296160,0.045099,-1.081092,9.389123,2.820732,-6.304311,-7.534296,-4.494417,-4.835486,2.183561,2.613508,5.121451,-3.359559,-9.335546,4.511141,7.425790,-4.410046,-3.597312,0.392563,8.533351,4.692315,3.331264,5.051914,8.255358,-0.235413,-3.619140,1.453454,5.988045,-5.884101,-1.165833,5.823294,7.409441,-4.131806,-1.821871,1.481253,-7.066600,-5.349475,8.226036,7.725591,2.378481,0.549499,5.007946,1.915333,-8.824670,1.092468,-7.617958,-0.161765,-7.881409,3.912029,-3.655907,-9.909019,3.960168,-6.988393,-3.961651,-9.988103,-4.080573,-5.680246,-1.995679,-9.031830,0.391925,3.149863,-7.014579,1.886291,-5.334309,-9.639886,-3.664102,7.291459,4.428065,-6.873371,3.894353,5.952599,-7.326809,5.155439,-5.952371,-2.013450,4.788946,6.149571,9.026979,-7.537127,0.985516,1.439999,5.054600,2.354135,-3.950241,6.130103,-2.654917,8.345018,-7.933150,5.406637,-3.732820,-5.653838,7.609411,-2.556494,-7.461847,-4.289059,3.050246,7.771935,-4.097510,1.422764,-9.482091,-4.336074,7.511677,-0.213829,7.892187,-0.480328,4.297494,8.854225,-5.954528,8.396105,3.806491,-4.637133,3.620307,3.136837,6.181032,7.469492,5.152029,-4.641241,1.070064,-2.212542,5.476668,0.755227,2.071485,2.077583,-4.687027,6.410792,3.023027,-6.186602,5.993927,-4.493453,-4.757608,4.092969,-1.887205,-7.224295,-2.036213,-8.051965,-9.190362,-2.745667,-8.093900,2.997307,-2.407744,-3.941404,9.508089,5.814775,0.395950,2.264091,9.418655,8.004317,-5.811953,2.026456,8.669639,-6.513349,2.970230,7.813345,4.703377,-6.266956,2.905308,0.878816,8.196973,-0.605374,-0.795487,-5.514632,-5.025618,9.717318,-1.299060,0.436089,-5.363183,0.351180,-4.032413,-9.709948,1.240661,9.192939,3.598416,4.863794,6.121175,9.424253,9.035916,3.050298,-8.138984,4.614659,-5.201877,-3.276270,-0.737573,-0.720899,-2.634434,-7.656792,-5.580374,8.720309,-5.087553,-0.027141,-6.797593,-8.872214,-1.662986,3.929246,-5.127664,8.586789,6.206010,-1.306492,6.344467,-6.465810,5.954495,2.049101,-2.495189,7.945636,-2.340083,9.804033,-3.750826,-9.724645,5.677361,0.391998,-1.160625,-0.311435,-9.244662,-8.474263,-1.226291,9.484231,0.170598,3.814324,8.003673,2.588053,-8.368536,-8.619857,-5.517941,0.050476,-5.212964,7.932147,1.616758,-1.641798,-0.635692,8.162132,9.720930,-5.251282,-6.384829,9.270261,2.654035,8.481022,6.666495,-1.473268,-6.381637,8.504782,-8.527290,-2.447099,9.870242,6.121844,9.274426,-7.885552,4.331467,4.190071,-9.071151,-5.804469,8.944594,5.286226,9.548621,-1.133027,-5.047654,7.057971,4.526127,-1.987620,-8.381576,-7.845871,5.510732,8.255590,-5.276288,-7.747741,9.594540,-6.494144,-9.581562,0.584821,4.534800,4.232209,8.352672,-4.714025,-6.046534,2.716669,-4.498641,-2.616084,-2.625320,-1.570024,3.988917,0.755746,3.970214,4.780246,-8.047686,-1.308662,2.402930,8.841245,-7.245006,4.573219,-9.720628,2.365969,-5.532799,-5.784812,2.915049,5.504341,4.257084,0.843229,-5.220813,-5.954808,7.748661,-6.017033,9.448806,-8.688389,7.260521,-0.195821,-1.645731,-7.010584,-2.001159,-2.973467,-7.435584,-8.006116,-8.321064,-1.950085,-4.364328,9.473888,3.049141,-4.598469,1.507731,-1.468507,-4.303617,8.681667,3.598560,-1.667907,-5.381313,3.191842,-1.098209,3.697656,-8.712514,-5.755068,-3.764881,-3.441476,7.105470,-1.601024,8.174849,-0.742905,-5.758398,7.762639,7.961860,0.780013,-9.188375,-2.801551,-1.264737,3.181933,-3.837355,0.100937,-4.850761,-9.010150,3.698575,-2.577193,-1.678717,-8.914058,-1.064613,-8.785801,6.497769,-3.611480,-1.162062,3.276784,-2.080515,0.113864,-1.803885,1.401078,8.091434,-4.781658,3.490176,1.489738,6.484412,-4.588556,5.594133,-0.402566,-4.459028,-8.179232,6.461705,8.159771,6.011540,-2.867020,1.294996,-4.817505,-1.250085,7.666174,0.491871,4.753542,3.193234,9.512475,-6.350292,7.556275,-7.894383,2.537334,3.310791,5.075274,-5.394001,-9.696091,6.327398,-1.710001,-7.019908,6.161466,-6.131403,-6.086767,-4.042015,2.231684,0.598436,1.743677,-1.116028,-7.307607,5.918806,-8.957164,7.124326,-3.933816,4.967890,-9.459514,-2.450966,-2.777194,-2.007286,-8.776931,-6.090470,7.070077,2.282702,0.355534,-3.188429,6.724801,3.148123,1.745987,8.032989,1.017680,-4.307713,-9.727681,-0.629467,8.410609,9.961744,1.056711,7.087602,-2.077255,-2.479621,9.495642,8.040891,-4.907614,-8.466719,2.049184,9.348333,4.278418,4.899460,1.779717,-9.915603,-2.095202,-8.654685,5.058853,0.548134,-0.995543,7.210993,-5.979079,6.988522,3.840383,-1.074823,4.516626,4.745961,8.066741,-7.561966,-8.579233,6.956391,-5.132654,0.112441,-9.137339,1.338929,-1.647265,-5.582681,2.876834,1.755389,2.619252,-5.415883,-9.144568,9.177464,-0.105652,-1.235615,-5.012186,4.445078,3.477777,-3.633241,3.072799,8.466959,-3.576243,-5.424415,7.382598,-1.256187,2.189806,2.814087,4.686186,2.391846,-9.794052,-2.271953,-2.231823,6.392420,-9.492018,6.903097,-2.125703,3.240592,-6.867048,-9.040517,-5.202175,-9.644697,2.518451,2.811851,6.258355,-2.555268,-2.378277,-3.823095,7.193582,-1.580498,-9.496808,8.268842,-0.366212,1.318344,1.008783,-8.916518,3.221404,7.103549,-3.713149,2.341921,-9.128222,6.803890,-4.135484,0.965802,-6.386873,-0.035280,7.369690,4.851735,-0.749180,-2.692953,-0.555118,3.006316,4.670990,9.727581,7.050979,5.581139,-7.491594,-3.605847,3.583132,-7.224014,-3.377367,-3.817460,1.365496,7.880418,-3.583184,7.079488,5.679343,-7.178439,3.490595,-5.293265,-0.521869,-7.225414,3.640305,-4.704837,-9.314608,-0.509543,3.485361,-7.529119,-3.200699,-5.059343,7.221505,3.526714,6.127064,-5.435165,6.056148,4.319318,-5.475380,3.565068,8.252610,-4.454865,-1.139378,-7.079143,8.698181,-8.040415,-1.270455,3.063354,-0.877084,-3.639310,-4.442054,3.922628,-4.031550,-7.239979,-1.312004,-6.500368,3.140849,-2.077432,3.243952,3.017204,5.286744,-1.847870,-7.119473,-8.872954,-9.771646,-3.596995,6.616668,6.003521,4.571660,-3.165552,7.674198,3.061596,-2.546025,-2.400567,-3.706002,-3.035644,-0.254961,3.463670,-5.235133,3.792020,4.615731,-8.649501,8.969845,-9.849869,9.006330,1.429620,5.235660,4.642192,-2.692156,8.777227,6.980899,-8.456528,-5.363693,-6.580813,9.176883,2.241561,-2.126500,4.111379,4.386903,-0.502029,4.069837,3.380231,-8.964657,-6.596101,6.868996,1.156503,3.689022,-4.770757,9.449679,7.099727,-3.330882,5.000737,-7.810004,5.954876,-7.580655,-7.889588,4.534723,-6.197603,-0.854712,-1.126468,-5.068198,-2.109017,1.525944,8.150038,8.044039,-2.798528,-3.710334,-6.464334,-4.571500,-8.007353,7.092143,-4.061424,9.883069,-8.566256,3.252204,9.055629,-8.824925,-0.859913,-1.705220,0.323116,-6.400354,7.235875,8.133532,9.107336,2.030722,6.136388,-6.399941,5.564693,-1.177035,5.363285,-8.248301,-1.591314,-8.418182,3.124585,-8.845870,-0.853266,-9.691161,3.196189,-9.951195,0.479442,3.355559,-5.549130,9.535892,1.249936,-9.064143,5.728673,3.370582,9.276415,-9.819885,-4.091557,9.338778,0.497517,-1.551806,-5.793660,5.038772,4.201261,-3.503275,-7.592841,6.736239,6.749056,-8.830457,5.733424,-3.622398,9.268716,3.454085,-1.263884,3.292597,-2.961709,-2.421375,-1.546050,-4.312382,-6.357476,8.758475,-5.365124,-1.902957,-8.838465,8.241869,-8.997642,2.870630,-9.238955,0.717836,9.939550,5.939501,1.680550,-1.442660,7.061126,0.972028,9.700237,7.270860,3.747864,-5.363875,-7.273989,1.600691,0.222880,7.110473,3.061589,-3.953344,2.003439,-1.922407,-0.292268,-3.865560,-1.270916,7.971569,-3.468423,0.293369,3.812789,-2.449299,9.706291,-7.596851,-8.354000,9.740987,3.300707,-0.376083,6.490999,9.253847,-6.063737,9.674498,4.582121,-5.741682,4.305066,7.253002,0.031321,2.821844,-7.668642,-8.202420,0.890496,-4.810770,9.603348,6.775507,-8.870389,-4.591046,-7.608939,0.367748,7.006194,9.835604,0.970974,9.271956,-3.364374,-8.201415,-8.105766,9.953562,-5.888288,-5.333760,4.537045,-4.671222,-8.885450,-4.517054,-7.390432,-3.105487,2.171968,2.061098,7.379910,-3.052411,2.132500,-3.837694,6.442512,5.683174,6.963509,5.219563,7.541009,-2.235197,5.153753,-1.155734,-4.111979,4.264596,-8.381410,6.592348,2.097106,-4.333754,-7.721978,-4.044462,-7.306053,7.986112,-9.148253,-4.291548,-8.158210,7.168236,8.814588,8.858303,6.354168,-9.100245,1.746028,5.071134,6.192784,2.849950,-9.321300,2.091504,5.513343,-8.228151,3.472470,8.457215,-1.457744,7.216767,-4.599084,3.171191,6.755358,-2.343788,5.766603,2.301298,4.151502,-1.203315,2.697146,-1.560024,-3.479831,-8.727139,-5.494065,5.624803,-7.851556,-9.144297,-1.765701,-5.017776,9.258195,-2.794719,-4.251141,4.592252,0.240620,7.906751,7.773557,4.646663,3.200851,-0.571880,-4.431083,-2.800726,-5.223658,7.080810,-6.643355,6.399198,-9.266659,6.817549,6.199964,-7.024952,-9.262098,0.165546,-2.994804,-8.903953,-0.826851,4.868240,-1.021660,-0.840134,-6.289449,1.187437,6.669488,0.650074,5.846077,2.228570,0.059784,2.115021,2.103461,-4.359124,0.471970,3.005854,9.869218,-9.881613,-0.968717,-5.360079,4.081334,-6.808801,-8.469857,-7.950128,-2.655906,1.968816,-8.904891,1.530597,8.608370,3.874673,-3.741207,2.994637,3.988380,-0.032801,-9.738485,-5.731818,-8.957729,-8.476931,-5.284263,-5.648136,-7.819677,3.005774,-3.360590,4.368866,-6.757070,9.996172,5.386704,-0.923969,-3.164088,4.889843,5.678119,-0.879250,-4.004023,8.506673,-2.341949,2.467543,2.680164,5.956719,2.987253,4.327643,7.036662,3.025914,6.493183,4.910174,-5.403115,-4.491693,-4.109500,0.146919,-0.957742,-5.771770,4.411986,1.337376,-9.419937,-7.225351,7.248820,7.169699,-3.829812,-0.457660,-8.947542,-6.145303,-3.745016,-0.167697,8.440581,9.557180,-8.707203,-3.379391,0.506646,-3.923902,-9.816106,7.516016,0.157336,-5.539493,5.790437,6.085644,-5.596875,-1.228027,8.721702,-7.768033,4.145766,-0.352520,7.471767,3.225793,-1.890908,-6.097264,-3.699604,3.429759,-1.476514,-5.905895,-9.037337,4.671014,1.327456,8.964737,-9.609470,1.284822,3.007096,-6.947680,2.818744,5.724843,7.905387,-1.999065,4.859981,7.533974,-5.469988,-3.079927,-1.379004,8.267314,5.284690,-2.124272,-0.218923,8.740246,7.194946,-4.717140,7.099764,-7.130203,5.229770,2.052785,-6.260083,-9.072253,-3.359592,8.876433,-8.630055,-0.478417,3.442887,-0.552588,-7.645941,7.196032,0.836791,-3.076199,3.846985,3.963675,-2.635013,-6.231112,-9.003978,4.473932,5.612514,2.980457,3.912269,5.158802,-1.983823,4.737186,-8.846185,-7.779235,-3.759258,-5.294651,4.060373,0.888146,-3.273090,8.844738,-2.810323,2.430744,1.239378,-2.719978,-7.314595,-2.663441,6.898820,-5.742375,-8.562165,9.421333,7.727369,1.514481,4.992917,-9.958723,-2.427741,-6.388305,-5.139444,-7.836396,-2.563668,8.911806,-6.351200,7.807339,7.315625,4.611337,-2.668360,-4.656411,6.618457,2.214082,-5.111832,-0.897574,1.944491,-6.953021,9.269677,7.607819,4.322005,-5.614341,-7.307365,2.746980,7.050247,-1.082694,9.582709,-0.700651,-2.138363,0.837885,0.230614,5.442883,6.014437,1.065170,-6.818962,-7.391677,6.446770,0.206591,8.472448,9.315675,-4.057630,-9.175476,-6.203144,-3.395686,-9.342570,-7.482954,5.658123,-6.163765,2.135673,0.489969,5.612489,3.868913,6.527226,-8.922596,7.572255,1.503621,2.381545,0.334323,-6.450054,-7.479643,5.119981,6.036507,-7.923230,3.961110,9.170259,9.452212,6.753351,7.401735,-9.090286,5.060400,9.351363,0.952993,-8.089561,-2.885750,-3.515441,-8.841771,3.402404,-4.339660,3.457475,7.070723,9.384648,5.286304,9.576858,2.211296,0.734450,8.371247,7.564671,3.837648,0.982606,0.967311,4.546692,-0.677161,0.281784,-0.667820,-6.996247,7.979149,7.257664,-9.466666,3.618322,-0.843615,-8.472813,6.466013,-9.998884,-1.753548,-1.433963,2.760593,4.844980,6.967135,-0.388840,1.406985,3.313378,-2.342435,-1.985713,-6.682212,-4.435254,-0.636330,-9.921904,5.420995,-1.898847,3.271400,1.611408,-1.591107,-3.493301,0.610039,-6.329256,2.950257,3.603571,-0.515544,6.049780,9.044834,3.608412,-8.249930,0.244341,-4.564178,7.873924,-6.473231,-0.127365,7.846561,-7.522204,6.871761,-7.132436,9.988562,7.262256,8.643433,-8.372937,-2.035677,-9.809803,6.698983,-5.559203,7.038148,1.185417,-3.602969,4.166083,-3.911601,-7.137708,-5.294308,4.252821,-2.826583,6.432676,2.396413,-7.056020,8.334450,-7.546724,-8.677477,-6.112926,1.848510,-8.419938,6.917347,3.313475,9.280977,1.657574,-7.250753,7.496712,5.996696,-9.631700,-5.109595,2.425642,2.552754,7.251980,-5.933182,-9.723134,9.728928,-7.672513,-9.813238,8.820082,2.151095,5.700081,8.186361,8.691456,9.768801,7.353961,-5.009642,2.146586,-5.265125,-6.045687,-1.515311,-3.768685,3.076634,-2.332441,4.300115,4.366092,-2.730015,-8.344046,-8.648536,4.382015,-3.979926,4.863297,3.473147,-1.503943,5.810584,-1.977853,0.078521,-5.996295,3.238089,-0.492790,-4.420434,-3.437117,-4.739474,-8.807049,-6.758323,-1.676238,-7.439012,8.600080,-1.722873,4.176512,-4.266807,8.464521,9.795416,-5.159855,-2.966494,8.549592,3.363243,-4.968056,-5.909192,-3.583088,-2.022703,0.680231,-2.677254,-9.495044,3.245968,8.361992,5.926793,7.604386,-6.483452,-5.901065,6.920479,7.679878,3.773939,-0.926751,-7.754105,-2.389337,-9.224002,3.101416,-8.152820,8.694502,5.563453,-2.988832,-7.966747,4.798005,1.985871,0.267650,4.473124,6.941439,-8.429556,0.717347,-2.117184,2.298105,3.379649,-2.418565,-3.491764,4.500371,-4.530543,6.722640,-0.052122,0.931250,-2.105923,-5.464412,1.660604,-6.664558,7.591684,-5.013188,7.219148,-7.297277,-7.042716,-9.679117,6.843918,-8.868694,7.296268,-7.914928,8.770183,-3.049413,-6.321984,2.627989,-5.125556,-4.291196,1.350886,-0.858735,-5.153469,-4.278568,8.816062,-3.447637,-3.712389,-0.410623,-7.675397,0.151194,-3.586157,6.710307,-9.461210,-9.869989,-3.721394,0.505736,2.832751,-5.950657,-7.922279,-9.153838,6.167360,-3.689125,4.002370,-8.408019,3.232104,0.476458,9.301229,9.497035,-1.225967,-4.579551,-8.207128,-0.694972,0.971636,7.015968,0.641684,0.533864,-8.492648,6.737100,-7.237507,7.663096,1.633498,2.152780,3.671545,4.198489,-3.897722,-6.211153,6.252108,-9.430291,4.500379,-4.769701,4.306780,-8.746225,-1.390079,-7.891082,5.325795,-1.244658,-5.873739,2.251366,-3.730174,4.767841,-4.279186,3.620303,0.701421,9.173618,-1.135547,4.927199,2.530203,1.145783,1.519903,8.886846,-4.909688,-7.444459,7.792931,-1.302165,-4.665467,7.833916,-8.317173,-2.708881,-5.213695,-1.699875,9.992601,6.104175,2.451578,-9.839956,-3.136518,2.887460,-4.679568,1.039840,1.104308,3.064704,-0.035718,7.161818,-5.003060,-6.816498,9.911762,1.814930,-8.885480,0.002434,3.051956,6.776006,4.367931,-2.393310,-8.026447,-8.069500,-3.883596,7.235875,-0.474352,9.066434,-3.005618,6.872816,-5.360565,-4.760606,5.731286,4.795159,-2.724613,-8.159016,3.366147,6.533103,7.380633,-5.942783,7.904044,-1.695836,-3.737697,-5.389661,6.175493,-4.129427,-3.576535,-6.545752,-3.699579,3.909156,-1.863943,5.614032,-9.204743,9.297794,-8.143260,2.410778,6.948775,3.909629,3.289571,-9.049966,0.855417,6.913642,-5.912065,-1.308860,4.471038,2.105583,4.274576,9.896240,0.457031,5.763437,-5.435613,7.813417,-5.253692,1.024361,7.492240,-3.109791,-7.817443,-2.433010,-1.073567,-9.503872,-5.002572,1.361215,-3.352005,-7.570215,-0.500977,7.588161,-3.143011,-5.385672,1.495964,8.063141,-4.548499,9.308684,4.386422,8.346099,-3.298896,3.284582,6.695014,7.156104,0.810820,8.157291,2.209569,4.271465,6.343795,5.198891,4.532325,5.257160,-5.753957,0.427768,4.256608,8.010568,-4.152911,-0.686472,-8.234766,4.939955,2.669690,5.408358,9.276527,1.503267,-6.816571,2.243615,3.977794,3.115177,2.719974,2.562080,9.565801,6.163948,6.381809,2.297652,0.300262,7.325082,4.489996,8.909709,0.146767,-6.004500,4.402469,-2.233813,-7.692045,3.874114,-4.059994,-3.897552,2.352233,4.294585,-9.890959,-6.174353,0.629285,-5.540307,-4.496837,5.611076,-1.256310,-6.884268,2.340673,-8.699330,-4.257529,4.130542,-7.524827,2.255884,4.811119,-1.711177,3.805036,5.422403,3.360411,-3.797983,-1.942931,5.414770,9.745243,-7.378758,-2.407801,-2.398703,-9.892657,4.491293,-5.290017,9.397398,2.120938,6.298890,-2.502727,8.608291,-3.638290,-5.729908,6.922522,-5.955757,8.760759,6.736238,5.274819,-2.058772,-3.563916,8.073950,-2.244414,-5.765781,-6.106412,2.990841,5.892572,-5.633464,-9.066690,-4.645028,3.707419,-8.340031,1.482746,-3.627670,3.964208,2.281039,0.457867,-4.085541,5.933669,3.912301,-1.157024,-9.181683,-0.469914,-7.923615,6.241300,-3.195392,9.673443,1.036580,9.701210,6.128361,8.639461,-7.204398,8.843220,-7.746002,3.133350,4.853148,-8.738324,8.928979,-6.148692,2.470126,-9.679212,-9.924075,-3.824161,8.351195,-6.105201,2.328998,0.455297,-4.515672,-5.411567,2.802616,-9.509832,-2.112156,-9.704752,1.834225,9.225427,2.016803,0.105647,3.592742,2.333995,6.635718,7.744210,1.763612,-3.672557,-4.191847,6.442360,-6.392744,-9.790083,-0.690734,3.407854,6.511460,9.616837,-3.379039,8.253739,-1.338120,-9.066257,-2.624140,-9.895550,-8.380619,0.237160,-8.508834,-2.249697,-8.595600,2.460891,-7.554553,7.789575,8.785197,-0.285497,2.297714,7.308382,-8.952194,3.845526,6.351875,0.232374,-6.011209,-5.370331,8.860594,9.637243,1.569668,-1.654995,9.614025,-7.386011,-4.785784,2.063494,-6.160104,-2.644961,-6.284516,6.488424,6.108515,-2.078528,0.007233,-3.950994,9.432846,-4.502078,-9.774107,-3.659172,-3.097473,-6.784232,3.325971,-3.725566,-2.771929,6.352729,-0.807549,1.880364,9.579558,0.042653,-6.177918,2.064611,-5.308636,3.128418,-3.788897,-0.131434,-1.906792,-4.500220,-8.504511,5.136018,8.434647,-0.800090,4.322218,8.171644,9.439388,4.583196,8.207049,1.736773,-8.441477,-9.927580,3.940629,-9.512432,-8.118099,1.921932,8.130210,7.767024,3.483085,0.666241,6.439449,3.157205,3.357684,3.417046,7.677259,-8.961715,8.308280,3.812968,-9.382242,-7.506762,-9.519531,4.769995,-3.343398,-2.751564,-8.902161,-0.925584,-5.941598,-7.323554,-0.956937,-2.511958,5.871360,2.995490,-9.162949,1.303725,-1.231932,8.251525,9.146778,4.957836,5.353804,-1.198776,4.280309,-3.353544,-5.786358,6.813070,-5.387167,8.019353,3.948654,-6.315767,0.588523,-5.081083,8.661906,-6.264251,-1.250182,-4.958976,8.613888,-9.341636,5.739601,-6.091329,3.804128,-4.858723,-2.652219,0.867947,-0.930051,4.339653,1.901670,-8.393515,2.417878,-8.046443,-4.769860,7.393756,3.659901,-8.885857,-5.068575,-3.826160,-4.314783,5.085101,-3.070551,-8.719669,-2.924619,-0.181953,4.000771,-7.574229,2.874539,9.283231,9.103456,5.676863,-7.781768,2.529227,4.476711,-5.704019,-2.714443,-5.014583,3.050377,-3.630312,-7.975739,7.597528,6.581587,-5.612483,-0.738068,-8.717340,-3.295745,-9.099409,0.592771,-6.170701,-1.770732,-7.904434,-4.193520,9.934513,-4.109068,-0.266410,5.457277,-6.318515,2.981805,7.118136,-1.529265,-6.002257,-7.829792,8.835631,-9.101308,-2.606001,1.608676,-3.681319,2.213727,6.467643,2.567432,-0.096364,3.523684,0.287867,9.631951,7.267033,-2.296081,-5.950712,-6.227404,-7.952075,1.324895,4.271365,0.199670,9.814792,-5.291284,-4.659761,-3.113104,-5.273315,-6.338775,-5.026077,-5.434516,0.685951,3.301794,5.278879,-5.797067,1.044228,-8.852004,-0.558302,-4.148893,-7.527191,-1.977170,-6.262454,3.572739,-1.534345,-8.669273,9.805286,-2.323246,8.298556,2.916834,-1.166160,-4.411940,1.317522,-9.725413,-2.436323,8.617397,6.314895,-1.709527,-5.347569,-3.042836,1.429905,-7.456398,-4.963473,9.802599,-8.366441,-0.443031,-0.770550,-1.257871,-2.060436,9.009888,9.010805,8.053121,-8.006903,-3.758557,-1.743503,-5.836701,6.104894,-4.025897,2.401740,8.882016,-4.278158,-6.883948,-9.181972,6.425312,-7.563755,-8.332894,5.344448,-4.396409,0.968140,2.110103,-5.799419,3.081699,-4.811580,3.859985,5.104926,4.326340,-4.719706,5.731389,9.779771,6.007233,4.785654,3.478977,-3.999045,6.063026,0.666869,1.950339,-8.065727,8.974480,-0.367528,-3.105805,-5.808733,-3.556946,-5.731833,3.617358,-1.123344,7.386581,-3.893680,-0.101705,-8.499298,-6.733692,-9.892224,8.121436,-3.371804,0.546106,8.830485,8.339932,-8.602261,0.612569,1.983324,-3.766892,3.358224,4.525253,-1.430213,-7.103795,2.975208,-7.123726,-6.067513,-9.704084,9.952629,-7.243418,-7.812295,-7.702487,1.834474,9.545909,-3.251926,-7.708853,0.394546,-8.824766,6.591375,-1.132004,4.597896,8.753768,1.869246,2.186900,4.653180,7.933775,3.596775,-6.083534,7.851266,0.721154,0.262671,-4.214830,8.711931,7.666553,4.154990,-6.569369,-8.352335,8.621029,9.646544,-6.557856,-1.520963,-9.645189,4.167002,-6.440082,-6.762449,6.764835,2.576477,-8.820176,-8.212234,5.905982,-8.724140,-8.569698,8.963893,-2.310167,-5.379770,-9.284023,-3.754933,-2.934887,2.447454,4.860222,-8.820696,-8.065001,-8.522596,4.474300,-7.596144,-2.607642,-8.054085,2.052920,-3.026241,-5.784989,9.169740,4.887690,-8.453948,1.271282,-8.212416,9.583377,2.450321,-0.881172,2.414572,-0.675115,2.368749,-9.477724,-8.547880,3.588376,5.774789,9.522829,-1.270201,-4.193137,9.305804,0.033601,-7.234974,-2.459770,-3.201027,4.781354,-2.233332,8.576797,9.205738,7.108269,0.036939,-4.459649,5.351766,6.537893,7.616635,-1.226315,-2.587793,-8.916464,-1.395609,-9.338310,-1.502121,-3.478116,-2.215890,-0.988583,3.427622,0.313684,-8.625734,7.351701,7.867207,-2.319112,3.710267,7.930951,-1.273358,-0.645078,4.515305,7.282646,1.270429,-5.765658,8.662190,7.284827,8.091969,0.837886,-4.360546,9.247179,-4.460566,-1.001838,-8.827806,6.521652,-0.689973,3.518485,-2.735097,6.618434,9.971802,0.737893,-8.416919,5.037442,0.238004,1.709762,-7.871605,-9.299550,-8.410571,-5.193268,-3.901728,3.297273,2.408925,-2.136923,0.687025,7.465651,-0.684418,6.574831,2.690028,-3.580738,-5.537067,2.392724,-2.737471,7.283622,-6.377841,1.891761,6.585629,2.512419,7.996159,-3.209432,5.299594,0.922052,0.038671,-6.902174,-2.224856,7.312214,1.355605,4.276549,-5.312007,-1.197358,-2.088350,-1.317460,2.537137,-3.067923,9.098149,4.558715,2.803565,-7.302692,-3.985580,6.599097,1.795500,8.962519,8.460186,-7.121419,8.378629,6.734124,-6.892674,1.021993,1.292324,5.272690,-7.983714,-1.740718,0.267370,-7.024344,9.093965,-1.082534,8.668840,5.822867,-7.351748,-7.787783,5.670377,4.579552,6.282699,9.295703,3.723568,-7.704891,5.115542,9.171628,3.286036,-7.402606,0.130048,-2.930133,-1.389695,-7.368730,9.765916,-4.356713,-1.035948,7.559261,-3.527655,-3.079029,3.351021,-9.665383,3.342303,2.505387,2.064848,-0.344182,7.519034,7.110032,-4.215312,-8.312691,5.677405,-4.453339,8.191969,6.752709,-9.181806,9.910304,-7.266535,0.656102,8.089374,6.122122,-2.824353,3.313477,-3.059859,-3.706515,-7.531995,-6.888719,3.308361,1.811243,-0.566186,8.562982,8.319832,-2.490814,-2.805818,3.211839,8.169669,-1.586666,-9.538880,0.020221,4.213832,-0.801183,-7.703545,4.329602,1.127537,-9.759156,3.321895,2.810096,-8.623790,6.160953,0.312134,-2.282616,9.161750,-2.304180,2.891283,-6.328094,0.766532,-5.423893,3.056017,-5.049122,3.845234,9.134153,-1.216221,2.295325,-5.438644,5.234716,3.276672,-0.825064,-9.244239,9.533291,-9.241874,-8.259033,-3.644407,-9.690862,-4.613844,-9.622955,7.507320,8.832625,-3.656109,6.557479,8.495045,-3.368701,-2.465785,2.494489,-7.843260,-2.836724,-2.540456,-6.291680,-6.706832,-0.007036,9.679184,-5.728902,-2.233421,-1.305128,-5.792886,-7.642564,-4.385841,-8.653002,6.591095,-7.561649,-3.631635,1.546021,5.508192,9.997201,-1.127019,7.952492,0.202651,-3.393508,6.802304,-6.308156,-6.412034,3.205307,-9.490672,-1.109742,6.224220,1.085959,2.444282,-3.291524,-2.874037,-2.587262,3.518712,7.978113,1.032465,4.467578,-0.584114,-1.548217,-0.541428,-5.074145,-6.654089,-0.421768,4.906696,6.816224,-6.514708,3.799503,-2.937297,6.916914,8.850601,-2.527346,2.426125,2.850548,0.557598,-6.677143,8.288140,-9.435507,1.910536,5.045238,-5.761806,-8.988490,-9.535295,-6.243155,5.771160,9.459916,-7.620181,-4.435946,9.870715,7.961292,9.679291,-3.885716,-7.490079,-0.388837,4.266081,-3.477144,9.976029,9.646971,4.906727,-8.708329,8.344435,8.665870,1.004667,4.602017,-8.394310,8.807250,0.388581,-1.362229,5.589157,8.799873,6.101771,-2.890820,-9.144117,-1.845624,5.037788,5.865410,-1.431494,-8.718918,-1.738213,-7.156365,6.932663,-2.378455,4.781801,-2.043387,-4.631456,-4.455260,-5.303156,-0.027101,-6.467758,-6.525512,7.724066,-4.959975,-0.504702,9.667785,3.706189,1.245337,7.282092,6.829118,6.640635,0.215216,1.933656,5.672268,7.679553,7.802997,-6.846479,8.296729,9.987629,-9.155091,0.873549,-6.042278,8.638783,3.848530,6.021198,-7.816208,-5.241269,-0.305680,0.434536,0.005492,2.371278,-5.495359,-6.093214,4.466163,7.011152,-2.729584,7.184851,7.386223,-3.248968,-5.573604,6.496406,-7.505728,-7.488215,-1.454251,-2.711444,-0.418440,-1.875947,-0.358556,3.981825,-3.993688,1.623728,9.986872,0.150127,7.962379,2.251767,3.670632,-7.621070,-9.538959,0.616932,-6.151725,8.736591,8.315784,1.057746,-3.764071,-1.504383,-0.540783,6.047257,-9.909482,-9.016231,2.444458,0.713755,0.788742,-2.460605,2.844051,-9.678832,-7.092883,-5.821083,3.017392,2.050356,-3.048018,-4.543287,1.040643,-3.022958,-2.039701,1.450877,-9.964222,-9.434775,4.478375,-2.742868,-0.719078,-0.962888,-5.781618,2.413714,8.392826,3.217031,-7.270477,-9.340992,-0.350660,8.666068,7.392172,-8.737659,-3.523181,8.378901,0.144982,-4.812164,-2.992404,-7.353292,1.527876,-1.491342,-1.359811,0.873038,8.043123,-7.347296,-3.090273,-7.197654,5.379109,-9.313897,-9.677077,0.276799,7.062425,3.443252,-8.667347,-4.945040,0.786947,-5.169292,-9.689953,-8.002530,8.944018,2.223478,3.994074,-2.171788,-4.509962,-5.474114,-2.815213,4.546277,6.037971,-1.868732,-2.122956,6.568438,9.054708,-6.829069,7.438899,-4.632815,9.432583,4.868379,7.810917,7.733084,-3.103677,-6.113036,3.176784,-4.965852,7.514335,5.887143,8.686666,1.538181,-6.899374,-8.959672,7.986508,0.130588,1.616105,3.991984,-8.964141,-0.178077,-7.299931,4.501137,-2.126268,-3.595466,-7.982299,-1.422094,-7.118496,3.591579,6.015496,5.459880,-4.048852,0.374504,0.251307,-6.716359,-7.849197,-1.274863,-6.070474,-7.150495,8.413574,-2.002245,-7.208677,6.726423,-3.681106,-1.680011,-7.077473,-5.576962,-4.965981,-4.760439,-3.432794,0.070830,-2.102988,3.205479,5.066012,5.583884,-3.132150,4.923666,-3.583022,-0.549542,0.827832,-1.159683,-1.062559,-8.392194,7.322360,-3.883031,2.848672,-3.382903,2.471574,-1.410188,0.685326,6.536133,0.759188,1.863451,2.125868,5.947537,-9.120331,-6.993602,-7.530433,9.145446,-3.136860,-8.399102,3.223319,6.919162,-3.853485,4.416695,9.196682,-2.738876,5.927611,0.168919,6.089062,0.264924,-6.688162,-4.089092,-8.210020,-6.312228,6.775309,1.581318,3.331820,9.685200,-8.073008,-7.780973,0.012098,1.758845,-1.603453,1.319152,1.208493,4.878295,-8.751794,-2.620243,4.332209,3.585892,7.679260,9.658377,7.863773,0.050775,1.662184,-9.803023,-4.760581,-4.428318,-7.186674,-0.281700,-6.326977,5.236122,1.513228,-3.889136,1.727805,1.612903,-7.008340,2.811285,6.127617,3.941729,-0.879400,5.236897,1.265168,4.081003,8.455554,2.724945,2.202135,-1.092323,8.257524,7.946204,0.436694,9.916870,1.272791,3.391777,4.115076,-6.907699,-0.039243,-4.662078,2.097502,3.583651,5.638484,-4.591664,-1.188632,7.350874,0.414936,-8.474054,4.302966,-2.899375,-7.398993,2.238853,5.291773,-5.408297,4.896870,7.581925,-4.849138,2.806956,-0.589407,2.477388,1.015575,-5.325157,3.878428,4.314151,-6.502606,-3.424422,3.528591,8.757778,9.799014,7.946247,-4.046855,7.926853,8.025818,8.778118,-8.952688,-9.934018,0.572195,6.011648,2.979715,-9.461671,-3.273582,4.962233,-6.126947,-9.722969,-6.833729,1.957101,9.820008,1.588929,2.551783,-4.108537,7.215967,6.283312,7.884799,-6.448138,6.842338,-4.834613,0.700624,-0.360108,-1.462038,0.234332,-7.390669,-4.614495,4.605459,-4.901757,-8.187016,-2.129040,-0.202057,-2.181135,-3.933228,-7.934728,6.188897,-7.653223,-1.060777,3.412449,4.685795,3.680955,9.572542,3.628374,-6.548579,8.729263,-0.942224,-6.289722,-8.106471,-2.862882,5.713776,-8.338747,-7.860301,8.323654,3.234044,5.274827,6.983656,-2.840764,-2.575743,2.108150,-0.508903,7.683737,5.241381,9.851121,4.653575,-5.534571,-4.412255,1.008294,6.021749,-2.664750,6.037918,-0.959040,-9.899940,4.637927,-1.990153,6.893590,-5.564285,-4.665340,9.650031,3.523381,1.534010,1.369183,-7.741027,-0.078780,-2.413203,1.308112,9.365527,-1.828613,-9.386825,-0.927908,5.557567,0.645329,3.233434,0.008359,3.895682,2.870047,-6.557159,3.492197,4.379663,0.005982,-6.102714,-3.611937,-8.642647,5.482134,-4.550916,9.497608,-4.514644,4.304723,-4.979343,-6.337551,2.836468,7.090680,-8.423498,0.742039,-5.204830,4.292949,1.558714], dtype = "float64")#candidate|14407|(4096,)|const|float64
call_14403 = relay.TupleGetItem(func_8886_call(relay.reshape(const_14404.astype('float64'), [6, 8, 4]), relay.reshape(const_14405.astype('int32'), [280,]), relay.reshape(const_14406.astype('int64'), [32, 4]), relay.reshape(const_14407.astype('float64'), [4096,]), ), 1)
call_14408 = relay.TupleGetItem(func_8892_call(relay.reshape(const_14404.astype('float64'), [6, 8, 4]), relay.reshape(const_14405.astype('int32'), [280,]), relay.reshape(const_14406.astype('int64'), [32, 4]), relay.reshape(const_14407.astype('float64'), [4096,]), ), 1)
var_14413 = relay.var("var_14413", dtype = "float64", shape = (4, 48))#candidate|14413|(4, 48)|var|float64
bop_14414 = relay.greater(const_14404.astype('bool'), relay.reshape(var_14413.astype('bool'), relay.shape_of(const_14404))) # shape=(4, 48)
func_3525_call = mod.get_global_var('func_3525')
func_3529_call = mutated_mod.get_global_var('func_3529')
const_14418 = relay.const([True,False,False,True,True,False,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,False,True,True,True,True,True,False,True,True,False,True,True], dtype = "bool")#candidate|14418|(40,)|const|bool
var_14419 = relay.var("var_14419", dtype = "bool", shape = (280, 2))#candidate|14419|(280, 2)|var|bool
call_14417 = func_3525_call(relay.reshape(const_14418.astype('bool'), [4, 1, 10]), relay.reshape(var_14419.astype('bool'), [4, 14, 10]), )
call_14420 = func_3525_call(relay.reshape(const_14418.astype('bool'), [4, 1, 10]), relay.reshape(var_14419.astype('bool'), [4, 14, 10]), )
func_540_call = mod.get_global_var('func_540')
func_542_call = mutated_mod.get_global_var('func_542')
var_14422 = relay.var("var_14422", dtype = "float32", shape = (1, 14))#candidate|14422|(1, 14)|var|float32
call_14421 = relay.TupleGetItem(func_540_call(relay.reshape(var_14422.astype('float32'), [14, 1, 1])), 1)
call_14423 = relay.TupleGetItem(func_542_call(relay.reshape(var_14422.astype('float32'), [14, 1, 1])), 1)
output = relay.Tuple([bop_14389,call_14403,const_14405,const_14406,const_14407,bop_14414,call_14417,const_14418,var_14419,call_14421,var_14422,])
output2 = relay.Tuple([bop_14392,call_14408,const_14405,const_14406,const_14407,bop_14414,call_14420,const_14418,var_14419,call_14423,var_14422,])
func_14431 = relay.Function([var_14365,var_14413,var_14419,var_14422,], output)
mod['func_14431'] = func_14431
mod = relay.transform.InferType()(mod)
var_14432 = relay.var("var_14432", dtype = "float32", shape = (14, 8, 78))#candidate|14432|(14, 8, 78)|var|float32
var_14433 = relay.var("var_14433", dtype = "float64", shape = (4, 48))#candidate|14433|(4, 48)|var|float64
var_14434 = relay.var("var_14434", dtype = "bool", shape = (280, 2))#candidate|14434|(280, 2)|var|bool
var_14435 = relay.var("var_14435", dtype = "float32", shape = (1, 14))#candidate|14435|(1, 14)|var|float32
output = func_14431(var_14432,var_14433,var_14434,var_14435,)
func_14436 = relay.Function([var_14432,var_14433,var_14434,var_14435,], output)
mutated_mod['func_14436'] = func_14436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12242_call = mod.get_global_var('func_12242')
func_12243_call = mutated_mod.get_global_var('func_12243')
call_14454 = relay.TupleGetItem(func_12242_call(), 0)
call_14455 = relay.TupleGetItem(func_12243_call(), 0)
func_11146_call = mod.get_global_var('func_11146')
func_11148_call = mutated_mod.get_global_var('func_11148')
call_14468 = relay.TupleGetItem(func_11146_call(), 0)
call_14469 = relay.TupleGetItem(func_11148_call(), 0)
func_13236_call = mod.get_global_var('func_13236')
func_13238_call = mutated_mod.get_global_var('func_13238')
call_14472 = relay.TupleGetItem(func_13236_call(), 2)
call_14473 = relay.TupleGetItem(func_13238_call(), 2)
output = relay.Tuple([call_14454,call_14468,call_14472,])
output2 = relay.Tuple([call_14455,call_14469,call_14473,])
func_14494 = relay.Function([], output)
mod['func_14494'] = func_14494
mod = relay.transform.InferType()(mod)
output = func_14494()
func_14495 = relay.Function([], output)
mutated_mod['func_14495'] = func_14495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14583 = relay.var("var_14583", dtype = "int32", shape = (10, 1, 15))#candidate|14583|(10, 1, 15)|var|int32
var_14584 = relay.var("var_14584", dtype = "int32", shape = (10, 1, 15))#candidate|14584|(10, 1, 15)|var|int32
bop_14585 = relay.equal(var_14583.astype('bool'), relay.reshape(var_14584.astype('bool'), relay.shape_of(var_14583))) # shape=(10, 1, 15)
bop_14607 = relay.floor_mod(var_14583.astype('float32'), relay.reshape(bop_14585.astype('float32'), relay.shape_of(var_14583))) # shape=(10, 1, 15)
uop_14625 = relay.atanh(var_14584.astype('float64')) # shape=(10, 1, 15)
output = relay.Tuple([bop_14607,uop_14625,])
output2 = relay.Tuple([bop_14607,uop_14625,])
func_14635 = relay.Function([var_14583,var_14584,], output)
mod['func_14635'] = func_14635
mod = relay.transform.InferType()(mod)
mutated_mod['func_14635'] = func_14635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14635_call = mutated_mod.get_global_var('func_14635')
var_14637 = relay.var("var_14637", dtype = "int32", shape = (10, 1, 15))#candidate|14637|(10, 1, 15)|var|int32
var_14638 = relay.var("var_14638", dtype = "int32", shape = (10, 1, 15))#candidate|14638|(10, 1, 15)|var|int32
call_14636 = func_14635_call(var_14637,var_14638,)
output = call_14636
func_14639 = relay.Function([var_14637,var_14638,], output)
mutated_mod['func_14639'] = func_14639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10779_call = mod.get_global_var('func_10779')
func_10781_call = mutated_mod.get_global_var('func_10781')
call_14647 = func_10779_call()
call_14648 = func_10779_call()
func_9452_call = mod.get_global_var('func_9452')
func_9454_call = mutated_mod.get_global_var('func_9454')
var_14653 = relay.var("var_14653", dtype = "int64", shape = (385,))#candidate|14653|(385,)|var|int64
call_14652 = relay.TupleGetItem(func_9452_call(relay.reshape(var_14653.astype('int64'), [385, 1])), 0)
call_14654 = relay.TupleGetItem(func_9454_call(relay.reshape(var_14653.astype('int64'), [385, 1])), 0)
output = relay.Tuple([call_14647,call_14652,var_14653,])
output2 = relay.Tuple([call_14648,call_14654,var_14653,])
func_14655 = relay.Function([var_14653,], output)
mod['func_14655'] = func_14655
mod = relay.transform.InferType()(mod)
mutated_mod['func_14655'] = func_14655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14656 = relay.var("var_14656", dtype = "int64", shape = (385,))#candidate|14656|(385,)|var|int64
func_14655_call = mutated_mod.get_global_var('func_14655')
call_14657 = func_14655_call(var_14656)
output = call_14657
func_14658 = relay.Function([var_14656], output)
mutated_mod['func_14658'] = func_14658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9062_call = mod.get_global_var('func_9062')
func_9064_call = mutated_mod.get_global_var('func_9064')
call_14660 = relay.TupleGetItem(func_9062_call(), 3)
call_14661 = relay.TupleGetItem(func_9064_call(), 3)
func_10124_call = mod.get_global_var('func_10124')
func_10126_call = mutated_mod.get_global_var('func_10126')
call_14683 = relay.TupleGetItem(func_10124_call(), 1)
call_14684 = relay.TupleGetItem(func_10126_call(), 1)
uop_14688 = relay.atan(call_14683.astype('float64')) # shape=(64, 2)
uop_14690 = relay.atan(call_14684.astype('float64')) # shape=(64, 2)
uop_14700 = relay.sin(uop_14688.astype('float32')) # shape=(64, 2)
uop_14702 = relay.sin(uop_14690.astype('float32')) # shape=(64, 2)
uop_14711 = relay.cos(uop_14688.astype('float64')) # shape=(64, 2)
uop_14713 = relay.cos(uop_14690.astype('float64')) # shape=(64, 2)
output = relay.Tuple([call_14660,uop_14700,uop_14711,])
output2 = relay.Tuple([call_14661,uop_14702,uop_14713,])
func_14718 = relay.Function([], output)
mod['func_14718'] = func_14718
mod = relay.transform.InferType()(mod)
output = func_14718()
func_14719 = relay.Function([], output)
mutated_mod['func_14719'] = func_14719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10662_call = mod.get_global_var('func_10662')
func_10663_call = mutated_mod.get_global_var('func_10663')
call_14720 = relay.TupleGetItem(func_10662_call(), 2)
call_14721 = relay.TupleGetItem(func_10663_call(), 2)
var_14723 = relay.var("var_14723", dtype = "float64", shape = (1, 720))#candidate|14723|(1, 720)|var|float64
bop_14724 = relay.right_shift(call_14720.astype('int16'), relay.reshape(var_14723.astype('int16'), relay.shape_of(call_14720))) # shape=(1, 720)
bop_14727 = relay.right_shift(call_14721.astype('int16'), relay.reshape(var_14723.astype('int16'), relay.shape_of(call_14721))) # shape=(1, 720)
bop_14729 = relay.subtract(var_14723.astype('int16'), relay.reshape(bop_14724.astype('int16'), relay.shape_of(var_14723))) # shape=(1, 720)
bop_14732 = relay.subtract(var_14723.astype('int16'), relay.reshape(bop_14727.astype('int16'), relay.shape_of(var_14723))) # shape=(1, 720)
func_3525_call = mod.get_global_var('func_3525')
func_3529_call = mutated_mod.get_global_var('func_3529')
const_14738 = relay.const([True,False,False,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,True,False,False,False,True,False,False,False,True,False,False,False,True], dtype = "bool")#candidate|14738|(40,)|const|bool
const_14739 = relay.const([True,False,False,False,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,False,True,True,False,False,True,True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,True,False,False,False,True,True,True,True,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,True,True,False,True,True,False,True,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,False,True,False,True,False,True,False,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,True,False,False,False,True,True,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,False,False,True,False,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,False,False,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,False,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,False,False,False,True,False,False,False,False,True,True,False,False,False,True,False,True,True,False,False,False,True,False,True,True,False,False,False,False,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,True,False,False,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,False,False,True,False,True,False,True,True,False,False,False,False,True,True,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,False], dtype = "bool")#candidate|14739|(560,)|const|bool
call_14737 = func_3525_call(relay.reshape(const_14738.astype('bool'), [4, 1, 10]), relay.reshape(const_14739.astype('bool'), [4, 14, 10]), )
call_14740 = func_3525_call(relay.reshape(const_14738.astype('bool'), [4, 1, 10]), relay.reshape(const_14739.astype('bool'), [4, 14, 10]), )
bop_14745 = relay.less_equal(bop_14724.astype('bool'), relay.reshape(bop_14729.astype('bool'), relay.shape_of(bop_14724))) # shape=(1, 720)
bop_14748 = relay.less_equal(bop_14727.astype('bool'), relay.reshape(bop_14732.astype('bool'), relay.shape_of(bop_14727))) # shape=(1, 720)
output = relay.Tuple([call_14737,const_14738,const_14739,bop_14745,])
output2 = relay.Tuple([call_14740,const_14738,const_14739,bop_14748,])
func_14751 = relay.Function([var_14723,], output)
mod['func_14751'] = func_14751
mod = relay.transform.InferType()(mod)
mutated_mod['func_14751'] = func_14751
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14752 = relay.var("var_14752", dtype = "float64", shape = (1, 720))#candidate|14752|(1, 720)|var|float64
func_14751_call = mutated_mod.get_global_var('func_14751')
call_14753 = func_14751_call(var_14752)
output = call_14753
func_14754 = relay.Function([var_14752], output)
mutated_mod['func_14754'] = func_14754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10594_call = mod.get_global_var('func_10594')
func_10596_call = mutated_mod.get_global_var('func_10596')
call_14816 = relay.TupleGetItem(func_10594_call(), 0)
call_14817 = relay.TupleGetItem(func_10596_call(), 0)
uop_14825 = relay.sin(call_14816.astype('float32')) # shape=(4, 8, 15)
uop_14827 = relay.sin(call_14817.astype('float32')) # shape=(4, 8, 15)
output = relay.Tuple([uop_14825,])
output2 = relay.Tuple([uop_14827,])
func_14829 = relay.Function([], output)
mod['func_14829'] = func_14829
mod = relay.transform.InferType()(mod)
output = func_14829()
func_14830 = relay.Function([], output)
mutated_mod['func_14830'] = func_14830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10211_call = mod.get_global_var('func_10211')
func_10212_call = mutated_mod.get_global_var('func_10212')
call_14831 = func_10211_call()
call_14832 = func_10211_call()
output = relay.Tuple([call_14831,])
output2 = relay.Tuple([call_14832,])
func_14843 = relay.Function([], output)
mod['func_14843'] = func_14843
mod = relay.transform.InferType()(mod)
mutated_mod['func_14843'] = func_14843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14843_call = mutated_mod.get_global_var('func_14843')
call_14844 = func_14843_call()
output = call_14844
func_14845 = relay.Function([], output)
mutated_mod['func_14845'] = func_14845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10747_call = mod.get_global_var('func_10747')
func_10749_call = mutated_mod.get_global_var('func_10749')
call_14888 = relay.TupleGetItem(func_10747_call(), 0)
call_14889 = relay.TupleGetItem(func_10749_call(), 0)
func_5592_call = mod.get_global_var('func_5592')
func_5596_call = mutated_mod.get_global_var('func_5596')
const_14893 = relay.const([-1.290805,-5.140304,1.379984,2.803210,-2.761784,1.481558,-4.200579,-5.667845,9.954612,-1.153778,4.822713,1.033363,3.813306,0.062910,9.658196,-3.441602,-3.995241,-2.111327,7.295394,-7.587075,-0.356880,-4.305137,7.303461,-9.015101,-2.482233,3.500505,6.812773,5.509258,-2.122060,9.976701,1.957503,-5.851907,-7.027121,0.034941,-4.394298,0.604305,1.726175,4.967108,3.575867,9.523825,-6.768036,3.483542,-6.431275,8.636995,5.076370,-4.326669,-3.564056,-8.190293,2.297621,-8.354042,8.022693,-3.258126,-8.117168,-9.061023,6.837787,7.158531,-5.457987,5.846725,1.333634,-3.440365,1.962167,7.953133,7.636547,-6.263878,4.463640,-7.084341,-0.634285,6.738998,-6.386079,-8.756217,-9.162344,-7.828402,-2.240682,4.927047,-2.438792,-0.640668,-8.698420,3.283425,2.362138,-2.916108,-3.512250,-4.511520,7.529543,4.032763,3.813843,5.609290,-4.319531,-2.391527,0.490304,-2.783776,6.018623,8.368463,0.097267,9.796942,-7.858513,7.726557,-2.129115,1.726285,-3.637491,-6.178018,7.508498,0.748583,4.190384,-6.815505,6.179964,-3.713368,-6.670850,-9.075987,-2.166586,-6.317700,6.132128,2.234261,9.080741,6.644267,-7.652823,8.848940,5.027191,0.782111,4.449641,0.196937,-6.943846,2.210721,3.250293,-4.697320,-8.794172,-6.641358,7.558485,9.594342,-4.768296,-2.399014,-2.844355,-6.455404,-8.549611,-5.282082,-6.863124,-1.028952,5.995361,5.424026,3.140943,-3.636417,-2.660841,9.480296,4.726982,9.934140,5.509884,-5.790112,3.189529,5.428007,-8.543663,6.018228,6.790185,2.558225,-9.032540,7.835560,0.914950,0.534379,-9.882325,6.624991,2.077827,5.007349,-8.934194,2.834353,3.339454,1.364668,-8.203670,-4.339595,-3.424150,9.533617,-7.327384,-9.696998,-1.752468,5.500048,-8.530819,-5.505899,0.825137,-9.023141,2.004314,-7.016947,-1.403876,-9.772696,-6.923802,-2.350457,1.019887,3.484550,-9.209946,1.892930,0.807586,4.860612,8.670204,-9.864775,3.216519,-8.621359,-4.947901,4.640355,-4.325444,4.526333,-5.185802,3.708800,2.865250,4.924563,-3.870564,3.983211,-5.341259,5.152905,-2.280110,-8.546057,-5.352643,4.119478,3.383744,4.494522,-4.598313,3.939257,-2.758530,-7.807060,2.483344,3.357768,-0.834625,-2.109559,6.454195,-8.942477,8.756071,4.408559,9.582570,-0.788315,-6.574798,-7.903318,-6.050273,5.797695,-3.536484,9.384050,-6.165393,8.323946,7.610154,8.584486,5.931540,-5.121930,-6.475143,-0.546045,-9.022257,5.756839,-1.645488,-0.111867,8.538353,3.827647,2.435801,7.708839,9.506614,9.403849,-8.885864,5.422701,-2.269953,-5.316926,-1.672162,3.431668,2.733509,1.195980,-4.776658,3.524624,9.240337,-1.219947,6.972554,-0.354435,-9.921891,2.005313,-2.333959,3.503769,-9.786464,-0.200897,-5.915029,-8.609146,-2.057702,-1.694221,5.891615,-9.616950,-8.537891,5.421449,-5.767600,0.527854,3.466384,-2.608923,1.323865,5.869224,2.413987,-3.936182,5.741174,-4.876333,-4.497780,-4.167120,-2.742195,4.152839,0.943852,-0.624375,-6.730933,3.034674,-1.440254,-9.493525,5.246221,6.506383,0.837998,-5.134783,-0.537705,-8.284234,2.666687,-2.950293,6.799464,2.165206,3.143840,-2.787765,3.629289,0.493134,9.523441,5.148290,7.997737,-9.234160,9.373760,2.493394,7.241327,-0.050520,4.561306,-8.314731,-5.419138,4.909063,1.919757,-1.268613,3.216757,-0.974077,0.481513,7.792567,-6.410532,1.134542,0.213440,-6.520183,-5.127596,3.071316,7.267233,-0.385647,5.802138,8.440249,5.004157,3.624437,-8.820738,-3.151289,-3.435758,-8.214088,6.473317,-7.237748,4.013348,6.522070,2.286762,4.892769,-4.825086,1.395740,7.966684,-8.746552,-9.189224,-5.862514,8.988581,-6.660972,-2.698031,-1.217301,-8.682744,-7.120434,2.333278,9.624527,3.923842,-8.767728,-6.382590,0.158902,-2.987134,-5.875773,-4.867333,4.133933,2.718494,9.765501,2.899609,6.323123,-6.530248,2.065284,8.652429,-7.092445,7.985699,-8.119279,-9.196031,6.200650,6.665359,8.794331,-2.028246,6.935178,-6.657457,-5.983966,3.718281,0.935893,4.141236,3.999920,2.222721,4.406055,-5.594269,-3.444872,-4.094634,-9.366714,-4.456161,9.905713,-5.127322,-8.846065,8.539410,-5.915743,0.766909,-7.717075,-0.464645,9.014218,7.112925,-9.505416,3.649796,2.034189,0.919010,1.637351,0.335195,-7.169592,-7.600390,9.651549,9.057100,-2.628802,0.306907,-2.356831,-5.102871,-8.890831,-5.254084,-7.285378,8.031644,8.184948,6.129644,-7.574755,5.188953,-4.679028,-5.483731,6.306898,-5.087237,-9.352075,-3.321094,0.599243,-4.189278,1.730697,1.949190,-4.629348,0.404234,8.557196,0.317021,5.728851,-3.403314,-0.781621,0.519418,4.048980,0.116153,-9.596118,-4.139092,-8.197687,8.076768,8.655380,2.837047,4.142581,-8.949510,1.218948,0.522749,-6.027488,4.342456,-1.525491,6.100574,-3.456204,1.321896,-6.712570,-9.528976,-4.418393,-9.646889,-4.978559,-8.117549,-0.108601,-6.040562,-0.939341,8.551740,-8.941967,1.435740,6.563666,-6.640518,9.263432,-6.225323,6.251883,-6.036987,-6.424587,1.396483,1.451508,2.628475,-9.966039,0.396646,1.389435,-9.769308,8.345695,-3.995302,-6.846186,-3.606716,-8.133385,3.654540,-0.354378,0.556399,2.722440,8.613709,-4.989691,-0.676253,0.812050,0.958144,-8.207095,-4.373870,7.426142,9.574776,6.964558,4.694808,-1.609631,8.071147,1.912283,-7.384308,1.195598,0.448756,-9.112552,7.390050,1.758537,-4.673233,-5.954025,-2.311187,4.082654,6.348324,8.940540,-2.339619,9.273652,-6.742561,-1.996164,5.383809,6.167261,-9.331639,4.648398,1.341268,-6.636493,-6.217405,-4.769849,2.264752,-8.257717,-7.181655,1.850211,-5.916422,-4.292256,0.260067,6.904726,-0.559976,2.404070,-2.480803,-9.014751,-6.273458,4.571770,3.537848,7.356127,5.579178,0.895790,5.084455,-2.903585,-5.368040,5.275889,9.804818,-4.336816,3.920872,-5.526286,-6.997564,3.708523,-3.797983,-9.735698,-6.855691,-8.516147,7.922052,9.194848,-6.456440,-6.156951,-5.588172,3.251911,-4.423166,1.312938,8.223168,5.571988,9.750704,-6.170258,8.788329,2.063606,-5.066643,6.690135,-1.968167,2.137540,-3.667190,1.346888,0.455250,0.086658,-9.761656,1.731471,-9.199844,-9.324254], dtype = "float32")#candidate|14893|(600,)|const|float32
const_14894 = relay.const([5.774948,-9.700691,-2.449574,0.887673,-8.049207,-1.662703,7.040702,4.361133,-3.331832,-3.798007,5.410616,-5.189420,7.678692,3.343363,-7.718742,4.736080,-6.955745,6.842837,-8.959023,9.794737,5.477175,1.142258,7.558158,0.660925,2.683022,-9.234928,9.647834,2.038749,6.256578,7.921505,2.243521,1.663796,-2.270630,5.105220,-2.280858,9.475499,-9.373227,-6.964299,6.316579,3.298255,4.690679,-1.694234,-1.791303,2.866658,-5.352729,2.643235,-4.573691,5.782263,-3.668800,6.823746,9.949477,-8.650837,8.949942,3.563565,6.576386,-3.174656,5.127905,9.021575,-9.723666,3.974675,-2.668068,-8.759007,-1.230111,4.635624,-5.911538,8.254477,-9.762254,4.599540,-8.345933,-6.463744,9.090227,-3.273582,7.982255,6.180385,3.833195,8.639193,9.407559,-0.959360,0.448300,-8.375525,-8.183391,-7.115385,-1.756008,-9.335884,-1.209941,-5.809777,6.535534,-8.627772,-3.132442,-6.744935,8.380637,1.053837,-5.543186,-3.860496,-5.941307,4.290657,-8.704384,4.092241,-9.360113,2.530440,-9.553027,-1.318298,-1.952094,2.828021,-1.537410,-6.576435,6.883411,0.069022,7.130090,4.857036,-2.062567,-9.240125,-1.423314,9.806856,-4.681939,-2.220749,-5.734377,-6.481214,1.176367,-4.137869,-0.412812,8.327537,-5.320018,8.383083,-3.635648,3.837425,9.465035,5.800608,6.643549,-9.747861,9.117538,9.092198,-0.823828,7.714225,9.452987,8.975237,-5.988860,1.614703,5.353728,4.389080,4.815507,9.728136,-0.661682,7.125488,1.038161,5.644399,-2.360078,0.605042,0.258149,-6.310416,-7.774393,-2.217809,9.855569,2.044093,-2.217514,-9.668866,-2.981399,-0.278221,5.390369,-8.665369,-8.113978,8.231935,-7.533443,2.021237,0.086626,-5.728642,6.409083,1.922961,-0.835231,-3.550796,9.297140,4.854021,-8.753853,-0.609211,5.620483,-4.662627,3.904555,-6.990939,-4.621203,8.319218,4.472070,7.739727,-8.441499,1.799499,-8.560563,1.525571,9.843308,4.549918,-8.326282,3.165925,-8.412084,4.289914,4.529880,-8.843393,8.082767,-2.728375,3.780702,-8.514254,-6.946399,6.892464,3.724249,-1.016885,6.989660,-0.909899,8.522836,4.794091,1.711380,5.063735,-9.042453,1.571188,9.490475,-8.725971,4.040901,-4.399013,1.858972,-1.839547,-2.487766,3.572472,-6.688378,-5.977007,7.612606,-7.549485,-1.958645,5.293060,9.735430,2.147152,-5.017318,9.848947,-5.166848,0.792527,6.581298,-4.369702,-1.772292,5.874544,8.883560,4.358607,9.861441,3.797656,4.288898,-7.640907,8.647556,-4.428842,-9.259600,-1.884423,0.921074,-7.259698,9.402685,2.647001,-7.155040,0.038815,-6.779815,-9.559001,-6.464843,6.137306,-7.550931,-2.966445,4.934546,-9.661285,-4.931317,-0.018272,-7.655906,0.298259,3.931685,-8.148134,1.533930,8.668719,-1.403407,-7.996677,-5.681580,-0.775102,6.141509,-7.026428,6.469442,-4.024092,4.819416,-1.258573,6.199447,-4.368866,-6.405916,-4.264908,-3.299309,6.834042,9.653993,1.313641,0.064945,9.355815,-7.443558,-7.587341,-0.674931,9.281626,2.957864,2.850738,6.791421,-7.079611,-3.304537,-5.445874,-9.281529,3.234344,6.437522,2.338601,4.143107,2.525462,7.567311,1.195654,2.855527,6.826609,-2.279352,7.788272,-1.475129,6.629691,1.674997,1.467818,2.553379,4.682420,0.338378,-1.228960,7.360998,-9.575222,5.395631,-8.765826,2.447857,1.921572,4.319043,6.923707,-7.443214,-1.499232,-7.273621,-5.187527,2.719459,-0.873072,-6.754948,1.372106,7.294199,-1.869577,9.757387,2.727322,1.357285,2.039305,6.834652,-4.205050,0.590285,7.838053,0.100332,-4.822862,-6.794033,9.675409,7.823759,-0.469176,3.755296,9.858498,-2.889638,0.562881,8.660513,-7.500884,7.442246,5.761206,1.907730,6.508158,-3.321650,0.400818,-0.758387,5.983618,1.044466,-0.874363,0.145042,-8.349462,-1.190598,2.289277,-1.654103,7.109149,-6.969668,-9.916229,9.387832,-1.217587,6.017104,-4.805639,9.734265,2.494560,-0.772191,8.852271,2.298574,3.233242,8.289077,-6.552872,-6.384588,1.216547,-9.026056,-4.024487,6.415495,8.890677,9.109185,7.351141,4.342104,4.352729,-1.257833,1.043814,-1.665635,-5.971771,2.543735,0.705171,-6.562873,7.371472,4.371388,-7.997395,-7.089832,8.154341,-7.251428,-4.847721,-9.350243,2.858622,-2.226948,-3.647616,1.673457,-3.265320,4.952069,-0.070263,9.743046,-4.030901,4.552731,1.997978,-2.813353,7.487109,2.139601,1.882550,-6.388875,4.692834,3.476848,2.056913,-5.979069,-3.618923,-2.873701,6.634413,-7.073847,-6.062411,-7.057649,2.379872,-0.149016,5.621244,2.974198,9.246791,5.080981,-5.184452,7.040327,1.583239,-8.789506,6.694305,-6.194092,-3.434931,4.480712,6.179885,-5.444302,-5.950137,5.409231,4.464309,-2.647275,-2.355509,8.351989,6.055404,3.867349,-1.704742,-8.288192,-1.233437,-9.524305,2.554891,3.773040,2.333460,6.671574,-3.552980,-0.416441,3.456549,9.582167,-3.444283,9.108394,8.006892,7.391145,-7.234470,8.025675,-9.780264,5.501996,1.843793,-3.541395,-2.354301,7.891926,7.327218,-9.725647,-0.644528,-5.446005,-6.718712,-9.104615,-9.995811,8.278837,9.739255,4.062551,-8.668182,5.254280,4.087413,8.768225,-2.744870,3.888573,-5.136296,-9.657713,1.252801,3.710526,-4.081807,5.915776,0.256434,0.632950,9.855329,6.189811,6.570406,-7.918154,-1.233830,8.810614,-1.047013,-0.966759,-1.154687,2.098488,-3.070569,-7.759391,6.310116,1.942873,-9.611383,4.341303,-8.931055,-6.642632,-5.394383,-0.673141,-4.609912,6.625581,-4.943876,8.253383,-0.989235,-4.860385,8.905302,-2.647077,-7.918736,-1.901721,-8.479560,9.184759,-0.418644,4.372612,-6.808531,4.798992,3.520248,4.377440,0.557483,-6.744118,0.298984,-8.701163,3.881348,8.621729,-6.833710,8.569025,-8.763372,9.045253,-5.791661,3.931935,2.444743,5.382565,5.297158,-7.220885,1.173281,-2.009998,-4.201759,9.211288,7.543007,3.531385,-2.295184,2.593790,7.820892,9.921476,7.004316,-6.390335,-1.153726,0.218496,-9.272290,-4.333129,-8.525010,7.983571,2.690177,6.520789,1.779041,-2.072257,9.549759,-6.507227,2.915526,-6.592148,-8.201082,9.604759,-2.722423,-1.020010,-9.638519,-6.005181,-4.574623,1.384552,-3.748804,-1.237755,-0.400033,-7.134526,-6.001953,-7.027515,-0.616764,-8.345691,-1.297618,3.120121,-1.968683,0.533333,-7.160542,-1.794209,3.457629,-0.918796,-3.758638,-3.398890,-0.753158,-7.186890,2.556109,-2.187502,5.148903,0.697812,-9.292743,-8.971040,-0.003043,8.052711,5.038823], dtype = "float64")#candidate|14894|(624,)|const|float64
call_14892 = relay.TupleGetItem(func_5592_call(relay.reshape(const_14893.astype('float32'), [5, 12, 10]), relay.reshape(const_14894.astype('float64'), [624,]), ), 1)
call_14895 = relay.TupleGetItem(func_5596_call(relay.reshape(const_14893.astype('float32'), [5, 12, 10]), relay.reshape(const_14894.astype('float64'), [624,]), ), 1)
output = relay.Tuple([call_14888,call_14892,const_14893,const_14894,])
output2 = relay.Tuple([call_14889,call_14895,const_14893,const_14894,])
func_14908 = relay.Function([], output)
mod['func_14908'] = func_14908
mod = relay.transform.InferType()(mod)
output = func_14908()
func_14909 = relay.Function([], output)
mutated_mod['func_14909'] = func_14909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10619_call = mod.get_global_var('func_10619')
func_10620_call = mutated_mod.get_global_var('func_10620')
call_14924 = func_10619_call()
call_14925 = func_10619_call()
func_14635_call = mod.get_global_var('func_14635')
func_14639_call = mutated_mod.get_global_var('func_14639')
const_14939 = relay.const([8,-6,10,-2,-7,4,2,6,5,-6,3,7,5,-6,-2,3,10,8,1,9,-3,-3,10,-2,-9,7,10,-1,-7,-3,-1,6,10,-3,6,-9,5,-3,-3,-10,-3,4,9,2,6,5,-6,7,7,-6,-2,-9,7,9,-6,2,-6,-7,-6,2,-4,7,10,-5,6,9,6,-2,-1,-5,-2,8,-7,-2,4,5,3,-8,-8,9,6,-9,-5,7,3,-2,-1,2,5,-3,8,-7,-9,-3,9,8,-9,8,-1,-1,-7,9,5,-9,5,-9,7,-3,2,3,9,9,-10,3,1,6,-9,7,-6,6,8,4,3,4,-5,-1,8,-4,6,-10,3,7,10,-6,2,-6,7,-6,7,-10,-6,-7,-8,5,-8,2,-10,3,-3,-6], dtype = "int32")#candidate|14939|(150,)|const|int32
call_14938 = relay.TupleGetItem(func_14635_call(relay.reshape(const_14939.astype('int32'), [10, 1, 15]), relay.reshape(const_14939.astype('int32'), [10, 1, 15]), ), 1)
call_14940 = relay.TupleGetItem(func_14639_call(relay.reshape(const_14939.astype('int32'), [10, 1, 15]), relay.reshape(const_14939.astype('int32'), [10, 1, 15]), ), 1)
func_12949_call = mod.get_global_var('func_12949')
func_12952_call = mutated_mod.get_global_var('func_12952')
var_14943 = relay.var("var_14943", dtype = "uint32", shape = (1040,))#candidate|14943|(1040,)|var|uint32
call_14942 = relay.TupleGetItem(func_12949_call(relay.reshape(var_14943.astype('uint32'), [10, 13, 8])), 0)
call_14944 = relay.TupleGetItem(func_12952_call(relay.reshape(var_14943.astype('uint32'), [10, 13, 8])), 0)
func_3396_call = mod.get_global_var('func_3396')
func_3400_call = mutated_mod.get_global_var('func_3400')
var_14952 = relay.var("var_14952", dtype = "float64", shape = (720,))#candidate|14952|(720,)|var|float64
const_14953 = relay.const([-6,-1,1,8,2,-9,3,-10,10,2,-3,7,-10,10,-2,-2,-4,-9,4,-8,9,-1,-3,-5,-6,-5,7,-10,-4,8,-3,-4,1,9,3,4,-9,4,-5,-4,-7,-2,2,1,2,4,10,-2,3,8,1,8,8,-1,-3,6,6,4,9,6,7,-7,-7,-9,2,-6,1,2,-8,-2,10,10,-5,-5,-2,-6,-10,5,3,10,1,-8,-4,2,5,-4,4,-10,8,1,-6,-8,-1,-8,7,10,5,-10,10,10,8,8,-10,10,4,10,8,10,1,4,3,-5,1,7,9,-7,-5,-10,-3,-3,-2,9,-2,-1,-5,10,8,8], dtype = "int64")#candidate|14953|(128,)|const|int64
call_14951 = relay.TupleGetItem(func_3396_call(relay.reshape(var_14952.astype('float64'), [3, 16, 15]), relay.reshape(const_14953.astype('int64'), [8, 16]), ), 7)
call_14954 = relay.TupleGetItem(func_3400_call(relay.reshape(var_14952.astype('float64'), [3, 16, 15]), relay.reshape(const_14953.astype('int64'), [8, 16]), ), 7)
func_10998_call = mod.get_global_var('func_10998')
func_11000_call = mutated_mod.get_global_var('func_11000')
call_14955 = func_10998_call()
call_14956 = func_10998_call()
func_12840_call = mod.get_global_var('func_12840')
func_12842_call = mutated_mod.get_global_var('func_12842')
call_14958 = relay.TupleGetItem(func_12840_call(), 0)
call_14959 = relay.TupleGetItem(func_12842_call(), 0)
var_14966 = relay.var("var_14966", dtype = "float64", shape = (14, 624))#candidate|14966|(14, 624)|var|float64
bop_14967 = relay.logical_or(call_14951.astype('bool'), var_14966.astype('bool')) # shape=(14, 624)
bop_14970 = relay.logical_or(call_14954.astype('bool'), var_14966.astype('bool')) # shape=(14, 624)
func_8886_call = mod.get_global_var('func_8886')
func_8892_call = mutated_mod.get_global_var('func_8892')
const_14979 = relay.const([-9.844441,7.729664,-6.223231,7.879528,4.409501,2.964899,8.305578,-0.477141,-6.592362,1.134765,8.711549,-6.437058,9.905494,0.585120,3.060629,8.827320,-6.006408,3.063544,0.814131,-5.964641,-1.359593,-3.586160,-1.904501,4.296436,9.850916,-3.902422,9.493597,9.183508,8.699577,7.687145,8.520919,2.001007,6.511524,-2.504226,0.889466,-3.283204,7.163660,-2.155870,2.789924,-2.269935,-2.469738,-7.562075,0.159591,-8.555644,-2.818988,-9.186923,8.871115,2.152454,-2.295712,5.074223,8.476034,0.733709,5.383827,-7.649647,6.171302,7.155399,2.480016,4.564745,6.604878,-2.620485,7.808758,4.281472,-9.654926,-1.138946,0.753147,-1.352779,2.306968,6.656726,1.596056,6.267555,-2.416808,-4.916025,-6.253876,8.247116,-5.324875,2.686048,-9.748489,-6.168457,-7.075751,5.151701,-7.551849,-0.863759,4.021638,-3.387839,4.075227,1.887749,-8.066180,-1.017496,9.171298,4.000298,4.903110,8.046230,1.246401,-1.913892,-4.125531,8.494894,2.129099,-1.729708,2.643335,-0.821026,2.958383,9.029704,1.350640,-0.964528,6.777519,-8.910769,2.175789,-8.769689,1.967117,-9.961262,-6.421705,2.527899,3.583919,-7.434324,-3.428359,4.084373,-6.491522,-9.916166,-3.788725,-9.516206,-3.878860,-4.796318,-8.402218,-0.069402,5.778323,-7.253517,5.145812,-1.727372,5.040402,3.607155,7.824119,0.217699,0.928973,4.434887,0.919984,1.295369,4.129694,0.294756,-9.232588,9.705232,-0.055578,8.107379,3.801944,-1.304372,-9.670107,4.778358,-8.343701,4.911424,-6.251900,-3.786107,-2.374541,9.790539,8.731538,-3.900670,-1.174210,-0.744483,3.593477,-8.277174,6.513525,7.133252,6.939357,2.068461,-2.285845,3.328207,9.976796,-7.184324,-1.980334,6.922493,-6.214513,4.716760,-3.232634,5.625335,-8.315523,-8.737528,-9.140325,2.727131,-5.183684,2.861828,-9.366372,3.073721,-8.922433,1.832632,6.441789,7.480348,-6.287894,3.345997,-3.561063,-6.447457,-1.804529,-2.949829,6.221709,-7.496453], dtype = "float64")#candidate|14979|(192,)|const|float64
var_14980 = relay.var("var_14980", dtype = "int32", shape = (140, 2))#candidate|14980|(140, 2)|var|int32
const_14981 = relay.const([[-5.897985,-4.474917,-9.226284,-5.746366,0.341089,2.108099,9.100717,-2.098642,0.602652,6.873125,9.767277,4.408693,7.938888,3.721193,-5.624216,5.595127,0.153986,-9.324108,-3.290617,-9.854558,4.879035,1.079426,-6.041851,8.942843,-3.766224,2.105683,2.789174,0.167658,7.228430,-5.049721,4.751274,-0.389294],[4.202659,-7.251609,0.196252,-1.023031,3.344445,8.973089,1.129043,3.316979,-2.691761,1.917736,6.648226,-1.667997,8.569493,-3.473809,-4.201672,1.950147,2.949753,6.216252,0.789379,-6.759204,2.579341,-8.248509,-1.245972,-6.981742,2.156973,-9.215317,-6.831086,2.780842,2.461642,6.540689,0.162833,8.711169],[-7.313045,6.285853,-9.665837,-4.960861,-8.594710,-5.858905,-0.701589,9.171301,-2.945699,4.115208,-1.136939,9.434071,-7.007816,6.020799,5.459616,5.941725,5.437287,9.854628,-2.311920,3.940199,7.705955,9.348292,-4.247710,1.104033,-6.475923,6.144347,4.100210,-4.879422,4.655824,8.720316,-5.842944,1.458531],[-1.171082,-6.858969,-5.888697,8.600628,1.534660,-3.793477,6.962356,2.956888,-0.613112,-7.104804,8.609154,7.160761,-7.844719,9.582259,8.127327,-1.112090,-1.320532,-4.464520,-8.638751,-8.188512,-2.772993,3.724295,-4.465444,2.895027,5.706323,-4.146148,-9.695909,-9.235274,0.107233,-0.786207,-9.544862,-6.948458],[9.437528,6.661637,-0.015290,9.083633,-3.264472,-4.053044,9.275500,4.518420,1.348653,6.078122,-9.920009,-5.619450,-5.092498,-1.952889,4.792090,1.054727,-1.100203,-9.650743,-6.836998,6.027330,-9.268968,5.263000,-2.175466,-8.209748,-2.267617,5.204997,4.930805,-1.843056,-7.197324,-5.444289,2.456134,-2.308034],[4.734960,-9.689657,9.586419,-3.166822,4.517910,5.891984,1.542259,9.508165,-4.502901,-3.533184,-0.777893,9.349401,5.003607,-3.584029,2.564643,-6.780918,8.355825,-3.426939,4.250194,-4.091297,-8.141492,-7.974625,-2.358830,3.393467,-4.689483,-4.553804,1.386278,-2.012937,-2.036839,1.562707,9.903917,-5.554017],[2.305765,3.421722,4.277948,0.907849,-0.655142,5.673063,-3.285995,6.419202,-1.978170,0.624650,2.626181,3.786972,8.661092,4.140384,-0.090806,7.082524,-3.998491,-6.153307,7.858298,7.833063,0.279094,-9.792117,3.067121,1.804832,0.377636,6.912559,-9.568578,-0.432271,-2.540220,-1.216532,0.774002,-0.702387],[6.762192,-5.151645,-0.761177,-5.167652,-6.639753,1.663386,-8.533672,-5.869106,-3.771469,-9.814944,-9.977429,-6.290980,-7.556915,3.158113,-7.734079,2.310835,5.774448,-3.380876,2.999411,8.488655,7.970777,5.052416,7.422563,-3.375357,-0.173787,-1.398571,5.565062,2.887898,-2.965434,-1.563142,-5.766761,-8.312826],[5.546296,6.067172,7.802751,-5.092668,-6.287963,-7.233358,6.430924,4.849736,4.473649,-9.628649,-8.260600,-7.155915,6.323312,1.902792,-9.692323,5.204957,4.693177,-9.050403,6.300315,9.282220,-6.136913,-5.125815,-5.181597,2.773325,2.509444,2.009491,0.423308,-9.016014,-8.778403,-4.046616,9.981203,-9.456861],[4.829611,8.628357,5.397808,-2.460865,-1.659540,-6.073833,-4.611361,-5.896434,6.466739,6.950171,6.252550,2.430285,5.651795,-8.777242,1.660846,3.823906,5.221593,-4.577016,-4.509349,4.862136,8.787522,5.997009,6.927255,7.489635,6.593573,-9.237866,6.122729,-0.623445,9.916555,3.679104,6.734288,6.216341],[-8.607549,-7.996081,-8.623255,3.873956,1.451916,5.984227,4.757990,8.889634,4.150927,1.316084,-1.319942,-4.700006,6.634163,-0.876182,-0.002316,3.604953,4.942702,3.784052,9.907709,6.737120,-9.680510,-7.627211,-6.309806,-4.988936,9.177614,-9.689527,-8.804461,3.926751,-1.947355,-5.077684,-9.423581,9.214341],[8.928623,5.641956,-5.684420,6.600492,-2.360364,-4.966758,-4.999709,-4.731676,-4.405665,2.895890,0.392601,-4.867085,-9.634413,1.468070,3.260495,8.804809,2.910807,4.468338,7.987341,-7.929597,-3.850531,-9.367390,-3.907298,-6.457225,6.889341,9.312613,7.941853,2.930477,-0.648749,-6.733850,7.769756,3.652895],[-5.943108,-1.352284,2.313004,1.870288,6.637775,-6.090428,0.364218,4.721207,-3.302718,1.938969,-5.546240,-0.939514,6.269985,-8.443933,-5.603215,-0.985113,2.124845,-1.537436,6.301025,-8.463436,-6.602822,-9.015386,-4.098109,-0.293950,-1.868134,-0.816685,-4.697118,-4.677596,9.451900,7.022427,-0.798743,-7.056617],[-3.548048,-5.615692,6.466860,0.329837,-6.049861,1.459027,4.750927,1.597543,6.435448,-5.484735,-9.576460,-5.445830,-8.465629,3.276244,2.954645,-3.080197,9.472821,5.439655,4.070482,-7.282128,0.301910,-0.939563,2.817328,-8.408971,2.959454,2.062823,6.325523,4.771853,7.081855,-0.041847,3.230388,-6.600670],[-1.859510,8.732363,-0.275223,6.219232,9.130766,-0.081398,0.845937,9.145473,-8.870872,6.211902,-5.677475,1.712826,4.487067,-0.925047,-7.674932,4.285979,8.564583,-2.406547,-9.421371,4.524166,-2.397581,5.432465,-5.474660,-5.989405,5.352159,7.168512,9.615993,8.580924,-7.174213,1.662517,-4.804051,0.325081],[7.026760,-8.328467,7.531108,2.696434,0.432831,-3.111436,2.779202,-7.179740,-0.729930,2.872944,-1.880382,-0.050811,-8.840408,3.710027,9.754357,-2.131188,5.101584,-1.582069,-8.689787,-5.262345,-4.179190,-9.715470,9.586086,-1.222156,-9.754472,9.977376,-0.587093,3.909237,4.630002,-0.455012,-0.992822,5.131285],[7.555610,-6.294258,7.864204,0.239721,1.144549,-9.762083,8.487324,-9.221498,-2.082899,-9.981514,-1.864708,1.876894,6.692673,-4.301330,8.106053,7.884358,1.804250,-8.896563,-0.804366,6.408549,9.642768,-3.849191,-9.118038,-2.695172,7.910201,-1.722890,6.155040,4.058514,2.795774,-6.246003,-2.139168,3.371429],[5.546814,-4.647087,5.436495,-7.875180,8.120263,3.660468,1.919770,-5.422167,1.960054,-9.554261,3.332339,5.406529,0.303442,5.798761,3.711154,-7.529680,-7.619939,-4.180034,-6.856970,3.971731,3.701516,8.146227,-5.403700,1.004356,-7.014587,-5.728898,-1.290775,-8.563663,1.683177,4.756238,-2.598375,-7.272347],[-2.088058,2.526082,1.443102,8.115560,1.880622,2.141926,-8.746400,8.627824,2.893264,-6.586594,6.515259,4.412426,-9.466815,1.174551,-5.490784,-4.184326,-4.203338,2.010883,-6.134290,2.954897,-6.314440,7.072588,6.771986,4.595934,1.830716,-6.094368,4.500957,5.858409,-1.035116,-1.506807,-2.288251,-4.901132],[-4.299979,-2.095942,-4.897728,1.930525,0.542882,7.040513,2.658862,6.976162,0.182753,-0.171020,5.863337,-2.417882,-3.995376,1.929827,6.593262,-5.822287,0.428486,-5.469995,-7.247441,-8.338544,1.365791,-6.385547,5.999055,2.195597,-0.336360,6.785519,0.119465,7.610141,-2.948905,1.751562,-1.135725,-8.895460],[-9.502314,5.030928,-2.925503,-3.657486,-9.457126,-5.150732,-4.285683,-0.432338,1.521776,5.377707,9.173575,6.186264,0.015241,-2.494952,-3.768588,5.802251,3.663024,5.993560,5.969443,2.758660,-2.894804,5.461666,6.844993,5.607733,6.147855,-0.236282,-9.243208,-8.562544,-8.473828,2.095528,3.213515,4.654001],[-2.991343,-3.082186,2.664396,7.710660,-1.902862,-1.672376,-3.643640,-6.993224,-8.634301,-3.054117,-1.943458,-4.007992,6.947942,3.764067,1.930395,-4.546171,8.137522,4.366493,-1.668549,5.863239,2.151605,6.397289,5.830683,8.195157,-0.040615,-9.187614,-8.241390,6.766508,4.688532,9.613043,6.308737,-3.676164],[-2.883572,0.675684,-8.692199,5.561358,2.247454,3.418431,3.995414,-7.658819,-8.090438,-2.814304,-0.538581,5.887455,8.543586,-2.677183,-9.633294,7.467821,-3.968635,9.271352,6.208431,-7.025084,7.471144,-1.020925,-7.391295,-1.677010,3.052878,9.577617,-8.679360,3.901829,9.352355,6.946914,-0.419954,0.215010],[8.672678,1.936421,8.773749,3.463295,3.638799,6.804832,3.125072,3.246231,7.105801,-5.314883,4.282183,8.459777,4.279284,-2.235049,1.629892,-9.748255,-5.329212,-4.819916,8.515844,7.779511,3.640239,-3.822010,-9.403497,4.996837,-1.737889,-0.736775,-9.186748,4.170603,-4.103840,0.659045,6.759709,-9.101956],[-6.546676,6.166064,4.985640,-7.273361,-5.237073,5.304523,-2.902723,-6.391517,-9.490480,-7.496752,-1.392097,-5.724734,9.044478,-6.320659,4.774526,5.654045,4.699794,2.091289,7.733293,3.661617,-7.361930,-6.210453,-0.092435,8.999775,2.087219,9.473302,5.810413,-3.142897,6.931400,1.192652,-2.664155,-0.151926],[-2.579122,-1.587984,-6.676806,4.884552,-7.449374,7.747712,-4.534798,2.158035,7.895094,8.699395,-3.047903,7.718662,-4.094261,-3.600495,0.758152,5.613042,-9.156338,6.764761,8.669065,2.062418,7.488403,-6.349293,8.166315,9.144904,-0.402726,-3.542219,2.096347,4.616029,-9.666208,-4.778528,-9.740449,2.603419],[6.347674,0.544451,3.861849,-7.926689,-6.448862,-9.171654,-9.009190,-9.633012,-6.675414,7.257694,-1.249909,-1.246136,-3.525039,6.287228,-4.803870,9.060234,9.074792,-4.182165,6.468928,1.273197,-2.886601,6.602082,-5.123912,7.940645,-3.205506,-3.561733,0.405200,-2.477454,5.318002,1.343889,-7.640395,3.434971],[6.189522,0.572633,-1.502261,-0.146094,-8.884114,3.959495,6.293312,-8.291952,5.267260,1.332422,8.577023,-1.900026,8.101211,-3.299881,-6.352384,9.730703,2.712031,-7.145721,-0.040139,-3.018401,-6.228765,4.615849,2.897276,-4.689241,-2.283528,8.363854,9.537257,-1.501255,7.277479,-6.672230,-7.589781,-6.693173],[-0.092554,7.209152,5.069690,-4.568117,1.337587,-7.101972,0.409789,2.017966,-0.634139,9.993976,-2.823078,-4.797920,-0.817375,9.198017,-8.221319,-9.765347,-9.243852,7.175353,-9.539568,9.684190,9.858343,-7.547042,-5.119177,-5.110714,-3.929986,-0.285486,4.638973,4.417562,-7.021539,-2.380636,-1.893747,6.946960],[-1.966718,-3.577457,-3.769850,-7.928919,8.272715,-1.715423,-6.729113,-0.314827,-3.084974,0.025456,2.460665,6.042261,6.710283,8.200780,1.153205,-3.239446,7.498522,-0.869674,0.538267,-0.142053,3.224461,-5.251664,2.084903,-8.930930,-6.569479,-6.213244,-3.446658,5.450538,4.028589,4.504858,3.113392,5.537494],[1.672075,6.831663,-9.134924,0.739489,-8.004317,-3.055126,9.562438,-3.164469,-5.534665,5.215255,-8.397937,4.603358,3.324253,-2.675199,-2.878917,-1.462568,1.775173,-2.383945,4.693114,8.281122,-6.488341,5.478232,0.825514,3.161002,-2.986659,-2.164467,6.159902,2.369460,5.667177,8.750280,8.848637,2.612341],[3.108271,-2.118213,7.394842,0.770930,9.123127,7.645939,-8.387749,6.322225,-6.724638,5.267543,2.391260,-1.223653,0.383771,-0.435147,2.757150,2.728863,-5.947683,3.240062,-8.508204,6.560581,-1.302829,-8.628152,1.564583,0.457117,3.033127,0.045560,5.404139,9.563233,5.681212,2.256197,6.464390,-6.271167],[7.267582,-7.621455,-3.365834,7.628478,-7.341937,2.332551,1.039083,6.509093,8.294325,5.456338,0.539988,7.806456,2.527870,5.325598,-4.116084,-4.177696,-6.490166,5.791748,-9.178752,2.108037,-7.175915,-7.306145,2.279866,-7.268574,-5.277550,-8.335967,7.698360,-5.833017,-9.082728,9.946244,9.826757,-1.353565],[-9.043806,-3.854585,2.475661,-3.425162,-3.048422,0.616301,-6.177893,9.122615,-2.354827,-9.481329,7.571495,-5.431321,6.092886,-6.043868,6.989778,-3.339904,-1.491809,-1.171309,-1.451448,1.717078,0.997046,-0.559226,3.297980,-4.896614,0.672935,1.033777,8.261248,8.022877,4.089746,-8.189196,-0.698912,9.330925],[0.978255,-3.589081,-6.031994,3.374009,0.807619,4.426012,4.730051,-9.576454,4.660526,6.942523,8.091366,9.459972,8.319587,9.718689,-7.415592,-3.308087,-4.483948,2.712859,9.183728,-9.135201,-1.728839,7.351329,4.707976,6.070580,3.790570,3.074725,6.986146,7.397069,-0.001166,-4.298238,4.882251,4.023156],[-1.463292,-0.929429,2.404911,-5.155142,2.135967,0.798052,5.792420,5.642368,8.976352,2.022193,2.602113,0.807733,6.869405,-3.473328,2.451488,-2.311692,-2.823534,0.922541,5.417802,3.113625,5.326791,7.302156,2.388099,5.589046,5.086172,1.894098,7.258507,0.061580,2.257154,-4.882240,0.914219,-3.700068],[8.363703,5.443524,2.909349,6.035783,9.298244,6.625727,6.243148,0.896601,5.127591,2.862696,-7.928675,6.829966,-5.590166,-6.632810,-4.380424,5.003821,-9.170626,-2.955718,-7.217618,-5.311953,-8.736934,-1.642142,-5.359517,-8.224615,4.492828,-0.742863,-8.154927,5.795817,2.382304,-7.767829,-5.984121,-0.656746],[-1.803773,-1.582739,-1.755578,-5.106261,-1.202100,2.470593,9.177827,-2.540822,7.105827,-6.175203,-0.746082,6.960532,4.223021,0.293892,2.516504,-7.650400,-5.636165,-1.174571,6.147049,6.112304,-4.750738,-8.706307,-5.402484,-2.536568,2.164961,-3.424386,-9.845292,-2.131597,4.467581,4.494567,9.864502,9.459199],[-7.727736,-8.961184,-0.451639,6.206846,-5.416551,-4.830503,-0.522051,4.588147,5.813964,7.978234,9.057664,3.787558,7.047967,1.767128,-7.262560,-4.229913,5.062138,-3.425378,-1.543915,-3.422589,8.578984,0.695152,9.279579,-7.008131,-9.098560,-7.821028,6.646356,8.144844,-4.049591,2.043070,0.438625,6.275885],[-6.990358,-2.590470,2.373132,-6.658162,-3.628715,-7.334973,-5.952858,-1.355614,-2.310301,-2.628428,2.437267,-3.978358,-1.743884,-1.653140,1.650071,-0.496725,-9.681051,-0.610553,9.700642,-9.144027,-2.422169,0.350534,4.731244,-7.725460,-0.029099,2.603876,-3.873639,3.675067,2.401687,-8.767003,6.607462,2.795106],[3.514579,0.715611,-0.910164,-4.608061,-3.271906,4.320585,-9.270924,6.577992,-3.263760,-8.581350,-3.916745,9.746941,9.750064,-9.887637,1.853383,-9.280248,6.593555,1.399708,-5.055529,5.195266,-3.651755,-1.241825,-4.197946,0.375134,1.379369,7.413268,-3.571481,5.320076,-6.141536,-8.003822,5.622555,-7.224593],[1.204292,-3.558576,-9.356323,-6.847979,-4.577072,0.570935,1.823247,7.029989,-8.873255,-4.539090,-9.864462,-7.964130,-8.211356,-7.232110,-7.339901,-3.286408,-5.452938,7.407288,-3.949926,6.649897,-3.343163,7.951858,-2.159934,-4.946438,9.278322,3.723678,2.799393,-4.359891,-6.473085,2.744478,-5.556640,-4.531129],[9.810077,3.356893,-4.249944,-3.880288,3.964465,-6.028011,2.525372,-4.063703,8.529110,-9.372999,6.214847,-1.062827,7.167317,-7.723570,-7.377566,-5.995470,-3.512213,5.001436,6.253696,-6.779077,-5.200348,-3.484960,0.953622,-1.827608,-2.007398,4.165468,-4.510174,2.609026,-7.478268,6.020562,6.090652,-4.972378],[4.831587,-4.980889,0.267773,8.505585,7.359951,3.399385,-5.617776,0.339170,-5.612324,-7.107186,2.249126,-7.448126,-4.330672,-6.459689,-9.708802,2.920406,-6.220112,-5.688410,-6.723519,5.532364,4.727810,2.898186,0.231908,-3.299768,0.448486,-9.849900,-7.509077,-5.283940,-2.158878,-3.828418,6.935330,-2.309259],[2.166208,-6.115277,-5.610454,5.692146,-8.768991,1.662181,-2.670388,-4.365219,-0.668559,-4.491738,1.417942,8.682274,9.194638,-7.752132,-7.999929,-7.997981,1.265820,5.207022,0.409760,0.420932,1.427204,0.038716,-2.695448,-6.567378,-6.619252,-5.184602,3.349019,3.140050,4.996073,-7.083221,-0.325371,-4.656724],[7.850222,8.186785,-7.901728,-1.586306,8.423237,1.917677,7.507238,-8.766319,-2.537651,-8.924254,5.432328,-7.312719,4.170872,-6.727416,-3.169402,-3.376986,-7.295978,-0.239605,-2.690455,5.291291,-1.814709,-7.889096,-3.438708,9.740556,5.901195,-8.257343,1.078730,7.718674,8.039285,-2.266002,-8.561957,7.693537],[-8.171564,-5.269324,2.755240,-2.057373,-7.193594,4.689391,1.085979,-0.267985,-6.627912,7.655096,6.589915,3.939278,-0.587775,-0.189561,-4.549618,-1.239648,9.689593,4.005855,-1.629194,-8.121428,-3.150712,0.588550,-2.539726,-6.874353,-9.061513,-9.004870,9.325501,9.379842,4.065290,-3.831270,3.707049,-8.129777],[9.041253,0.843819,6.255024,7.433096,-2.446236,-7.292937,-0.945870,0.357553,-6.140222,-8.223802,5.609252,-0.231229,-2.014362,-9.238719,0.806820,-4.141006,2.917738,-2.056750,-8.660033,-3.240625,-3.449056,2.734444,-1.687026,0.801129,1.272061,-5.553021,2.710617,9.159518,3.604449,-1.293432,8.377061,-2.581805],[-9.103991,2.962068,-4.140030,5.148412,-1.707656,6.147129,-5.480408,-1.107015,-3.588899,-6.003217,8.807564,2.447853,-1.505609,7.994133,7.511346,-4.523876,-2.178437,-6.787259,6.933490,3.806929,-2.797912,-9.978698,6.700052,-2.128455,9.163715,-7.213104,1.537613,-5.192894,0.528519,8.373939,7.078503,-7.807880],[2.557014,-4.352193,4.480223,0.094308,-4.183443,-7.504938,-6.858186,0.279915,6.478748,-5.760047,-6.090684,-8.432151,-8.529987,-6.712062,9.821759,3.662366,2.482840,-6.270871,2.743248,-7.850335,6.746304,9.735547,-2.846671,-6.598214,-7.991825,-1.731654,5.433805,-6.488726,-5.079723,4.401158,-3.566910,-8.056503],[-2.648601,-2.523820,-9.563029,8.914641,0.667685,8.583202,0.124206,8.438500,-1.542386,-7.003521,5.438792,6.960572,5.905844,0.348582,7.828360,1.980381,-4.664887,3.460403,8.701642,4.368678,-5.609731,-2.949602,-6.775417,4.308181,3.741346,-0.578918,8.450928,-3.043871,-6.000876,-7.631100,2.366931,4.618416],[9.036378,6.338215,9.395950,9.711807,0.437212,7.151350,6.665609,4.065559,6.359577,9.870455,3.085932,8.330467,-1.547073,-5.335145,-7.104322,0.742385,-3.792454,-4.595469,1.476386,5.872488,2.842111,-3.517792,-3.997001,0.710178,0.712228,-2.561773,-2.862309,-1.209165,8.973319,-3.958781,-8.867671,1.229088],[-7.781329,-4.902442,9.334184,9.793765,8.033374,7.234509,8.552359,6.428659,-0.545243,0.473004,8.233523,6.072103,-2.694920,-4.201945,3.085716,-2.057352,7.850553,-5.233397,-7.962979,9.269307,9.856740,3.205313,6.687516,-0.792617,-3.207658,-6.077035,5.376696,-8.334157,-1.405118,9.211695,-9.185885,9.585489],[-2.123156,-8.082271,0.178526,-7.778588,9.020983,4.469659,-2.272562,-9.899273,-1.088890,1.797656,-7.036054,8.831095,-9.193708,-4.643057,-9.758783,0.772986,4.460710,-4.225951,5.397803,-9.553820,-4.687709,-5.872886,0.547109,-9.640840,8.352971,6.605986,7.715945,-2.026777,8.419051,2.619092,7.880969,0.864039],[-2.741224,1.983556,-7.325058,-5.386934,-5.942753,-9.205453,5.177361,8.753642,-8.399757,-5.892757,7.248414,4.468684,-2.046361,1.946042,3.957402,-2.150943,-1.889558,-1.457912,4.910681,7.978357,9.678331,8.479031,-3.853480,0.326426,-3.134166,9.247526,2.980675,-9.649100,4.769808,4.340805,-4.527070,-6.541575],[9.973260,-8.106875,-4.782622,-7.350182,2.406079,-1.750709,-8.919887,-3.795853,-8.720067,6.192284,-8.195498,7.574810,8.473415,9.656614,-4.000522,-9.663736,-1.736848,6.038715,-5.619874,-9.088981,9.896308,-5.111817,-4.503228,-2.813029,-9.587902,-6.858922,-2.690370,-0.897776,-3.165740,7.359807,5.729500,5.515569],[-8.079957,-3.057438,-6.598651,-8.583771,-7.874064,-4.392267,2.390857,2.393540,-3.388192,4.175166,9.375026,-3.002820,2.956663,-2.294350,7.971954,-0.565034,-2.940032,-0.910957,9.936128,7.730636,5.595238,-7.821890,-0.987600,-0.151876,-2.564142,0.654446,0.058693,7.785059,-0.516702,-3.940097,3.880850,5.319953],[2.195502,9.109393,9.866987,-9.721696,-4.329650,5.793372,-2.960151,6.992375,3.335892,-7.087090,-1.298037,1.583782,-9.688087,-3.006299,-7.584109,2.734535,9.657944,-8.467108,0.610031,-4.360056,-4.280231,8.809223,3.367682,2.131430,0.896901,-0.608070,9.798867,-6.987925,0.064116,-4.623862,3.850163,6.050429],[-8.217864,2.330891,4.437952,5.606256,0.065009,-3.921262,7.387416,-6.838947,-6.122615,-3.160747,-9.265657,8.829474,0.072136,-2.032009,5.483671,3.248126,5.575806,-8.255979,-5.316725,-4.519043,-1.441764,3.182838,-8.997138,-7.812235,-7.856518,0.038918,-1.876278,-4.699933,-4.886411,-7.757340,-6.413689,6.758132],[-6.131214,-1.704704,8.473077,-9.739381,-1.749002,0.507704,8.481747,3.954583,-6.045078,1.790589,0.059392,-2.713503,-0.179797,7.311194,-3.789712,-8.882689,-7.523017,-9.354394,-1.925177,5.697605,-4.575016,8.261288,1.360045,6.670331,1.924079,-8.676172,-9.463987,-2.921853,8.779810,4.915814,-3.884630,-8.768922],[5.377809,-2.933705,8.220492,-8.121729,-3.463996,-5.741046,-2.946970,9.645252,-3.261100,-4.185842,-8.692678,9.686823,-6.118861,-4.781764,-4.952838,-0.368723,9.968961,3.613430,-8.623691,-4.662854,-1.008273,-4.493977,-9.120085,-3.905570,2.415834,3.229000,-1.624344,9.687199,4.598159,5.618560,-0.247746,7.377465],[7.662630,3.058163,-3.951783,-9.030636,-2.002819,1.723687,0.592164,2.042233,-0.259629,-3.407654,4.967479,-8.765681,7.056615,-3.398115,3.834071,3.426380,9.694273,-0.484544,-0.113976,-1.314235,-0.465003,4.446763,4.211557,-1.227534,2.213337,-4.418200,8.959816,-1.886350,6.288106,-7.107716,-3.256950,7.402034],[-3.254253,-1.381285,-2.908164,1.650043,-6.843816,-7.478153,3.434940,-1.676435,-9.267180,7.336580,6.324019,-4.787597,1.962285,3.991473,9.683820,8.461074,-4.172197,-5.710824,-5.541013,8.108295,4.779393,-3.821232,7.748061,4.197175,-4.929020,2.967819,-8.429552,-6.634130,-6.581376,-7.164259,-0.794801,-7.689509],[9.003327,0.216399,-8.655886,-4.777312,8.933668,1.230620,8.474323,-3.854203,0.941744,1.883170,3.431159,5.743711,4.975204,8.330106,2.977802,9.967061,8.993440,-2.468664,3.895954,2.436926,-5.068848,7.614926,1.509318,0.742251,9.007014,2.052251,-3.116870,7.675858,-3.262931,8.275203,-8.775283,-7.548490],[6.392676,9.686799,1.860378,4.906685,5.533066,-0.866646,-8.934902,-4.774789,-1.257945,7.522849,-1.311467,8.934260,5.875022,0.870675,5.410699,4.615416,-8.688190,4.182845,3.681178,1.664318,-1.147333,-3.507390,4.765526,-5.643452,-1.636070,-0.312502,-8.863783,5.580999,-3.689132,9.511758,-2.537152,6.019355],[-5.308874,-1.948468,6.883095,-8.239929,7.462655,6.877625,7.218103,9.864891,3.643857,3.674582,6.138491,7.659854,2.832334,5.073324,-1.915329,-4.314368,4.643559,-1.544281,5.190134,-8.475134,9.167106,5.520212,-7.358988,-3.879799,1.251916,5.959712,-8.876843,-0.994507,-4.064651,5.653569,-4.307640,0.221341],[2.531355,9.663271,-8.676260,1.477020,4.196491,6.511942,7.934136,6.822025,3.616670,5.790296,1.891948,9.739778,3.340021,-9.242375,-5.954948,-8.672289,-7.389092,-9.223576,4.146477,-6.022408,3.129215,-5.386405,-4.902800,9.936422,5.287382,6.475354,-6.975886,-6.026691,-2.048331,-4.041690,-1.740386,-8.394677],[-3.968546,4.574801,-5.884676,-5.945098,7.134034,4.938134,-8.116275,7.811850,1.752846,-8.672304,8.899004,-6.547434,-8.344281,0.361979,4.271369,3.749400,-2.676143,4.505178,-3.650296,-3.077744,3.763496,2.360868,-7.502043,1.542925,-6.148425,-3.180707,-2.164582,3.493750,6.755137,3.049240,-9.743340,-0.385472],[9.771314,1.532100,6.687413,-1.246329,9.649348,-1.680491,-6.304332,-7.455147,6.139592,3.779532,7.747651,-1.224670,5.654310,1.492037,-0.683455,-6.602334,9.447129,-1.585246,-5.169962,9.682177,-2.304574,6.699567,9.932790,0.459877,-2.340786,-5.580924,8.627634,-7.464737,-0.908203,-0.306644,6.794683,9.274496],[4.575131,5.531493,-1.816869,9.850366,-6.487112,4.495467,-1.236884,8.937351,9.002492,-7.966054,-5.594575,8.309764,-5.555683,-1.000620,9.197888,6.126208,2.995905,-8.081763,7.704646,-1.836315,-1.535223,-8.703997,9.544471,-5.766594,5.075144,7.283538,8.466652,0.123116,3.628869,-7.365214,9.499259,9.974031],[-9.636262,-8.370898,7.234262,-2.271099,-5.481130,7.937341,-5.781373,8.141527,-3.786801,8.082314,1.157212,-8.070658,-4.646306,7.251503,-9.880820,-8.080906,-3.579110,-2.438480,-5.385268,-4.482984,5.199442,-4.668687,9.167133,-8.479263,-3.275249,0.621963,-7.475409,-1.253477,-2.440633,-5.331581,-7.938736,-3.316087],[1.856892,3.068848,6.279599,-3.094648,1.932852,-4.788742,-5.484398,-7.625896,-4.671079,4.560839,7.795174,-9.653704,0.437808,-5.695311,4.369464,8.168052,-9.158054,-7.113588,-6.303464,-5.396567,2.937111,-1.916366,2.972094,5.533551,-8.825018,-1.752358,-1.478366,-0.816033,1.752249,-5.682433,7.579471,0.982868],[-1.018009,0.123751,7.531437,-3.350001,-9.429975,-4.652525,1.080824,9.548594,-2.304443,-9.436439,-5.655303,0.565172,0.670962,9.337821,5.844493,-9.543212,-3.899592,-2.955340,-1.861683,2.531797,4.230348,-6.126451,4.268173,-9.693731,-0.831601,-2.648079,2.058452,-0.377191,0.960674,5.714039,5.258756,-1.456382],[6.052798,2.120118,4.072126,-6.707896,-1.397935,-5.549269,6.789841,-6.707388,3.998782,-7.636373,-8.735425,8.502165,-3.425487,-4.714009,9.128733,-0.196666,9.149081,-8.242640,-8.073218,3.635367,9.992471,-0.956914,-1.361698,-1.033683,0.316937,2.977014,-8.756885,-1.879636,7.734298,-4.946715,3.376537,-3.648997],[-7.417223,-5.749470,7.880515,7.284137,5.182962,6.881124,-8.920123,2.619016,3.055651,5.346484,7.250682,-7.735868,-0.307352,1.906452,3.385367,-0.899441,-6.668923,-4.875020,-9.758586,5.702403,9.340470,-9.378921,-3.772408,-8.870361,-4.845862,5.484382,1.752533,-8.954652,-8.020092,6.163727,3.866169,0.390088],[-6.560433,-0.304868,-8.221517,-1.427865,-7.017581,9.057551,-7.421471,-0.393733,-6.142004,2.351042,-8.400052,3.084422,0.859558,-0.330115,4.060410,7.482692,-1.991384,-1.374219,0.136118,-4.967419,9.626833,-6.896043,3.810891,-2.608802,7.333798,0.919325,-1.144019,-4.963919,-1.149773,-6.655089,1.274954,6.737578],[8.709290,-7.754075,2.167558,3.059566,-5.372006,-9.821999,-1.799404,7.414836,-9.685357,4.420603,-2.747630,7.167394,6.463310,-1.322873,9.118529,-2.031054,8.854722,5.510729,9.389187,-2.575857,-8.677601,-8.875410,9.761967,-6.628084,-3.687883,-7.208963,-5.285760,1.595219,-6.379925,-6.943732,-2.814668,-5.173058],[4.244089,-6.124767,-6.979469,-3.834391,0.798414,-1.017875,8.207407,0.705454,-0.858211,-7.473136,4.600744,-5.588911,2.204764,5.133203,9.924848,1.250420,1.070015,-5.673971,-5.558972,-4.079714,4.945171,2.588549,-4.213739,-8.579206,-7.484308,7.085643,3.731016,1.209211,-6.653155,-0.711320,6.672069,-9.220154],[8.805482,-2.016552,5.803200,6.118077,0.791489,2.235622,8.021277,9.339736,-8.404674,5.530286,-0.138253,-7.122540,8.253473,8.515723,2.128740,7.976745,-0.753587,-3.753876,5.335723,-7.993563,-3.383447,-8.028241,2.050687,-3.854852,-6.635968,2.601462,-0.649061,4.914741,-0.146678,-4.808311,-0.517930,-3.746742],[-7.187369,-3.896852,8.400620,-1.492905,3.884043,0.590425,-0.635141,-6.449433,-7.983525,-1.336236,-6.589518,-5.068397,-9.906561,-6.455540,8.747388,3.388625,1.667930,0.530822,-1.094210,5.202163,-7.885292,-9.939367,-3.095436,7.947194,9.326571,7.109684,1.494914,-0.831258,2.223816,-9.952542,-6.938003,-7.619521],[9.388761,-5.854897,5.107706,5.629917,-1.410287,2.511097,7.729125,9.844893,-8.633264,-9.800649,0.141558,9.813135,7.409585,3.846435,0.655271,5.978168,3.075321,-4.489497,5.547696,-1.579856,3.655673,-8.621180,-1.067863,7.056462,6.361815,-5.281484,6.261648,1.228791,5.391528,-8.702501,-6.941685,4.912914],[4.181247,-7.258341,-7.060267,-9.535350,-0.662601,-5.754988,5.357527,4.147117,5.336510,2.782894,9.085800,6.718214,2.734566,3.602445,6.614631,6.773356,-8.377533,-2.102580,-2.826142,7.172652,5.925188,7.566457,4.948835,7.696719,-8.211771,5.526922,4.422714,-3.091984,-3.754417,-5.822377,-9.446113,-0.926666],[-8.488925,5.531115,-7.340130,5.220145,-8.408646,-0.439487,-1.823042,-1.453391,-7.926847,-5.473233,-4.209432,-7.337919,5.418293,9.885159,-5.192670,-5.559131,-9.926320,4.838674,-5.262801,-7.837361,5.370198,8.751710,4.234249,-1.026630,3.027675,7.884494,8.731019,4.209824,2.555658,-5.858176,-2.350785,-5.169769],[3.252977,9.188087,-7.839588,-2.213867,-4.926819,4.332871,-1.855539,8.172270,2.713268,5.010439,-5.490641,6.531291,4.205134,9.538615,-7.056130,-2.371120,7.875534,-0.646046,-4.329585,8.316299,-0.268282,-4.203274,-6.611933,-9.523000,-0.201340,-2.654615,-8.656605,-9.768177,-5.041089,-6.209935,3.746045,-9.907058],[-7.271523,5.129578,8.711250,-7.939331,8.665162,-2.367078,-0.276591,5.332247,9.216111,-8.521279,7.666831,1.040287,-5.389984,3.120104,2.579668,5.051458,-5.302894,-3.253650,2.528309,3.879394,2.047196,3.428646,-2.197803,-5.678256,-0.808788,-5.389544,-6.539016,8.064851,5.110685,-8.389854,-6.586999,-7.800885],[-9.354507,5.137996,1.673223,1.004518,-9.203104,1.994806,3.394579,-8.795461,-7.755112,-4.697199,5.117140,3.660116,-6.954379,5.806012,3.120096,9.992884,-3.534094,-6.868759,9.660565,-5.381932,-1.009826,-2.562017,3.017474,6.502771,2.393718,-4.906872,-2.960145,2.180991,-1.664900,1.471275,6.426253,9.611409],[6.020597,9.606566,0.016521,2.802724,7.614358,-2.506124,-8.679376,-7.940101,2.297348,-2.395031,4.413469,-9.415631,-1.333821,0.695242,-3.205164,6.604751,-5.034142,-0.848497,-4.053406,8.883706,3.941920,2.137862,-3.634102,-7.978254,-1.797406,6.456627,-0.163025,6.735958,3.496807,-5.597903,-9.028435,-7.554097],[7.044731,-5.714358,-1.828663,5.234910,0.209325,0.931147,7.481526,5.759960,8.065550,8.532053,-6.185488,-3.730045,2.573282,2.073372,9.932443,9.735265,-2.220787,-1.566929,3.778677,3.190392,-9.352279,-2.003501,-0.540758,-2.316669,-9.502697,3.182395,-5.692649,6.216168,8.862216,6.442664,-2.155593,5.073221],[9.418944,4.896866,2.648301,0.625303,3.551828,3.412675,-0.275490,8.010829,4.902499,2.238486,0.900492,-9.278916,-7.431165,7.002465,-0.603793,7.987437,-4.346596,-3.961408,9.100480,-6.094117,-3.492482,-0.793297,6.483718,5.583242,9.514421,-4.297505,8.803407,1.131502,7.858811,-3.247397,2.119003,1.636359],[-4.569178,4.225656,6.726093,3.373637,-0.659251,-8.342826,2.191393,-0.349092,1.093466,1.217243,1.317639,-7.529195,4.814122,-5.387701,-3.693970,6.816421,-9.403394,2.567317,-7.329058,8.888579,-7.260835,-0.810278,4.655921,-5.422600,5.783583,-1.136469,-0.695684,4.189187,6.962735,-4.570529,1.328212,5.677133],[3.940532,-1.499560,4.288912,-5.105904,0.511462,8.930938,4.805972,5.245457,-7.868793,-8.562532,-5.330557,-2.797904,2.616076,-4.134861,-4.089545,-4.488979,-3.091015,0.139862,-3.777079,5.081665,-3.326190,4.261707,4.833136,7.862155,-7.817314,-8.134508,0.935062,-5.179735,-7.578592,-9.914215,-5.221982,-7.376359],[1.798276,-8.016371,4.654911,0.550246,4.928659,8.345921,-5.416967,-3.644215,-2.742356,7.969819,4.620825,0.869745,-4.886543,8.029163,-3.985835,3.103942,2.059342,-6.624642,-6.791812,1.959328,-4.051954,-4.386914,3.607267,1.093738,6.184011,5.132149,-5.513954,-6.884763,-8.805926,-3.524408,8.329050,-7.615825],[6.519704,2.888602,8.515783,3.611990,-2.175308,-3.413121,-5.825478,5.787457,-2.151396,6.550773,4.509048,-0.495791,0.417418,4.151363,-3.074899,3.402841,-2.419541,5.810806,5.039084,1.719202,-1.876626,7.103539,1.351770,6.719913,-9.306855,-6.311804,-6.298442,0.807917,3.916206,1.174441,9.027034,-7.170631],[3.714621,4.643241,-6.095628,-5.578057,-2.387929,-0.311805,2.817089,9.246685,-0.202431,7.157579,-9.664751,-5.928718,4.493161,-6.904022,-8.241092,-5.965350,-3.621748,2.252601,-6.386071,-5.431466,4.577732,-8.900802,-7.530984,-9.628920,-4.776462,6.096673,6.755900,-7.616618,7.939821,6.446558,2.471942,-5.143027],[6.062455,7.703141,0.770759,-0.493326,-7.552095,8.157846,-8.342633,7.481647,-3.855195,-7.449522,-9.394994,-5.719987,4.197372,5.785180,-4.582323,-3.512252,9.109700,8.956518,9.096965,-3.452189,6.559495,-4.253190,9.346632,-3.643412,1.039808,9.871340,1.414796,6.423131,9.502133,-9.292867,-3.676680,6.738600],[-1.718166,7.989281,-0.472227,0.992967,9.341926,-8.260943,7.115737,-4.410927,3.927771,-8.116858,-9.529950,6.716544,-3.408506,7.701120,-8.305704,6.473101,2.189424,4.391047,-0.839982,7.321258,-6.356299,-7.536534,-1.531592,-2.719130,8.238777,5.348767,5.373789,2.655705,-6.310236,-5.903489,-3.880895,9.031394],[-3.443278,7.467745,7.941394,4.967483,-3.699001,3.230329,-8.881360,-2.448577,-9.076664,7.522327,-3.624384,7.502723,3.296219,-0.498593,0.905711,-3.179842,-8.974492,-7.590535,-3.786445,2.768998,-6.169235,-8.043609,9.194700,-9.660751,-7.467708,1.579922,-9.949824,9.382384,-8.085115,0.825477,7.410563,-6.593995],[-4.390409,5.604243,-1.184565,4.055913,8.278649,6.017464,6.944226,-9.592549,-0.550469,-7.357572,-8.950863,-1.807745,3.430923,9.960673,6.747040,-1.468654,-9.531863,8.890421,1.891770,7.010575,-3.318362,9.502943,-2.268329,9.896984,1.390616,-5.055572,3.291190,-4.969689,-3.992558,2.395751,9.739677,9.810529],[8.441682,-7.979815,-0.509748,0.028394,5.583363,-2.581259,-3.368705,-8.257109,2.215751,7.831586,9.826701,-4.477831,4.336007,-9.780125,5.383152,4.455134,-2.014073,4.935483,2.707342,9.332497,8.437979,2.191683,4.043864,0.619664,-6.821612,6.810871,2.373271,1.416477,4.592621,1.698543,-5.791647,4.425546],[0.669743,1.221292,3.224925,9.915845,-5.684876,-1.623419,-0.181371,-2.141779,-7.463196,-0.813583,5.627963,3.723313,5.438005,-8.893296,7.171909,-3.286670,-4.386288,7.468037,-4.221852,3.206485,5.278206,-8.130215,7.013570,-7.166118,-9.453726,7.232462,6.381743,-1.686620,-7.062333,-5.711412,-9.636941,-3.494319],[-7.178251,-5.294935,-3.115185,0.945913,1.313526,6.658013,-7.067362,9.762214,-0.672873,0.687997,8.601032,7.196579,-4.149733,2.750619,-6.622488,1.268652,1.706948,-2.102862,0.840164,-1.702515,3.473929,-9.793948,8.926505,5.753912,-9.517623,1.415212,-9.526983,8.233322,-6.063489,-5.392234,-9.093310,6.642675],[1.221911,0.187653,7.998916,-4.326867,6.905440,9.628617,-8.671717,9.545371,7.326732,-4.132498,2.100183,-8.901316,-4.255471,-8.596103,-3.378547,-7.092154,1.139148,5.129304,9.548917,-5.932919,-4.005665,-9.318649,-3.245289,9.289977,-1.162534,7.826048,-9.091179,-9.418857,-5.266810,3.842034,-8.787734,9.285600],[-2.595477,4.577760,-5.213610,-5.764505,6.795330,0.697962,-2.998105,4.165887,-0.578109,-9.243376,-1.381737,0.892753,-6.913521,7.466676,-9.122014,-8.155487,1.637538,5.970518,9.008315,-2.710692,-0.026570,-9.468484,6.927888,0.685695,8.739521,-2.164282,-0.988363,-0.390566,-5.150840,-0.095920,-0.600450,0.183860],[-6.137625,8.487283,7.511729,-0.215407,8.567168,-1.918641,-4.013224,-8.907157,-5.001012,4.752074,-3.533064,5.085792,9.834556,-7.097880,-3.216419,-8.504946,-2.419492,9.500121,6.866490,0.368645,-1.191302,5.065978,7.251290,-2.011438,-8.286904,3.161613,-6.119107,-0.600429,-5.299489,5.549978,-0.682423,7.804192],[-8.630858,-5.761630,-4.334197,-7.607458,-3.219161,4.344705,-5.352765,0.749437,0.220244,2.293296,1.038719,3.675737,-6.919001,-0.441600,-4.374870,3.249888,-2.307895,6.015212,8.097230,-9.462700,8.081799,-1.665969,8.935054,0.556077,-9.926468,-1.851077,-6.741240,9.076790,1.384239,9.575258,6.910183,-8.534603],[8.982991,-6.366509,8.290726,-4.393835,-5.519467,-4.540007,-4.108772,-7.903257,8.471329,-3.891828,-7.866566,-1.727118,1.806413,-7.643393,5.492542,0.176508,-8.377994,4.343244,-1.723345,-1.772054,-7.939463,-2.343406,-0.709105,7.334116,-7.930837,9.793879,5.914679,-4.125474,-2.854465,9.556703,8.019191,-7.606790],[-1.830369,8.341215,9.414165,4.477684,9.421600,-5.759045,-0.980980,4.094497,7.094649,-6.494558,-9.660871,8.301977,6.024026,-7.998813,1.357492,-7.349664,6.202994,-7.051816,4.833539,-3.923555,-4.712485,1.558882,6.762905,8.578260,2.912111,6.715367,-7.219567,-1.936269,-6.652200,-3.017110,2.011276,9.402231],[-4.750645,5.956169,-3.545221,-9.031805,-4.441307,9.441604,-9.296252,-1.969319,-3.046682,-9.687482,3.468101,-6.550321,6.402741,5.664388,1.375920,4.511377,2.892724,-9.466844,3.744603,-5.047554,-4.283159,8.409565,-8.381245,-3.358691,2.173760,5.643718,-3.616877,-5.033386,-9.888992,-7.755215,6.907011,6.136147],[8.859376,-8.963911,0.247438,-2.192859,-5.549921,-7.041479,-8.990955,-2.292764,8.155969,-0.652464,2.585819,-8.238011,-2.108730,-8.268260,-6.604901,-1.717401,5.731071,-0.123106,2.024257,-3.003005,-8.563662,-4.828689,4.884859,2.278340,-0.357089,-8.539768,-0.405332,7.635020,-8.765570,-5.621182,-8.072083,-4.681508],[0.903714,-8.709077,0.020450,3.978567,2.366717,-9.770529,-8.441863,-5.199695,1.483072,-4.273725,0.244460,8.077625,7.086259,-5.038797,-8.191654,4.107669,-1.618969,0.499880,-5.763016,8.555252,-7.894465,7.866097,9.800169,-6.234646,-1.958292,9.964028,-3.700122,9.138937,-7.921279,2.892561,-0.556177,2.104465],[-9.555161,3.328221,5.233195,5.153300,-6.433673,-0.075451,-0.506038,8.833504,3.966021,-1.076233,3.228349,-0.015901,0.913238,-4.196267,-4.548858,-2.445286,-4.212323,-2.042448,9.085231,-7.575033,-4.452408,2.659943,2.823287,7.297710,0.487035,-4.179370,-1.217199,3.491605,6.462262,7.050534,3.020787,-7.633880],[0.847659,2.512544,-0.800120,3.282398,-4.424053,4.156984,4.837469,-4.520786,-0.458734,3.850032,1.095035,4.174788,-2.281926,4.701479,-4.029586,-0.295444,-2.099544,-1.210151,8.489448,7.036182,3.007505,8.562673,1.458362,3.908160,-4.608503,-2.997489,3.810453,-9.426773,7.271598,3.361017,-9.851793,7.695272],[4.322108,6.364384,2.461184,-6.670159,-8.617499,8.012490,-6.721957,3.209507,9.391262,-5.695544,4.915690,0.636977,-4.354781,9.119573,-5.232898,9.412047,-4.296900,-5.107252,5.472812,-9.947299,-2.574015,-7.838086,0.646002,3.141036,2.807257,2.203926,7.286519,6.840188,-4.974012,-1.178247,-3.362731,-2.918815],[-1.703368,-8.091166,-6.265740,8.308805,4.125194,7.392997,-0.918167,2.979193,-1.157874,-5.449575,1.458104,-0.356218,-1.689970,-8.555060,-7.589819,-7.851481,7.392253,1.187431,9.733355,-3.921874,-2.211147,1.299313,6.861300,-1.122582,-7.258875,6.411390,1.537111,9.723059,-0.721881,-1.314566,-1.015065,7.911982],[2.135190,3.343637,-7.407489,1.162294,6.465382,4.090561,-0.635468,4.333254,-0.789828,-1.477857,-1.870021,-9.822814,-1.883230,5.610731,7.974897,-4.568862,3.985152,4.753012,-6.388835,-2.066638,-1.667768,-8.376739,-1.695391,6.734678,-8.463487,-3.601145,8.495156,1.290109,0.235337,-7.014286,8.616052,9.578497],[3.236522,-6.126432,-8.913277,0.998141,-3.182847,0.039054,2.819388,-7.569994,-9.673812,-2.417074,9.563771,1.629409,9.755917,7.678384,1.662526,8.846976,4.393905,-3.045829,1.212695,-1.312010,8.585919,-0.824102,-0.675239,-1.409894,0.126515,-7.399963,-9.341364,3.840980,-0.149497,-1.303491,9.353255,-0.151425],[-4.826934,-6.057396,-9.739116,6.097336,-5.852051,5.817542,-9.424018,-9.503260,-4.515161,-5.655909,-4.277624,-5.778083,-4.556366,-7.942286,5.635847,7.273017,9.784030,3.055243,-0.093994,0.447303,-6.915418,-0.100840,-6.038305,-1.122292,7.389179,7.428234,-9.571914,-8.915549,8.219310,-3.946544,1.598735,-6.128090],[-6.530337,9.179484,-4.339722,3.053372,9.892738,-4.151611,-9.540928,-7.290355,6.150726,-9.721077,-6.973177,4.431529,1.521166,-1.041262,5.518544,-5.082347,-1.420488,-8.766039,-8.337822,9.675980,2.131127,-0.372949,-9.457248,-3.265476,-7.946953,2.814301,0.349957,-9.963644,-9.253513,-0.783246,0.140985,9.351034],[-7.870629,6.260490,-3.809828,-8.390228,-7.066093,6.289636,0.707383,-7.200053,-8.691199,-0.076498,-2.717796,7.332583,6.062257,-6.272599,-7.874144,-0.320405,-7.056293,8.323492,-3.170371,-8.091875,-7.651445,6.543574,7.808811,-6.882280,4.175025,-1.606370,8.208696,7.196107,8.642851,-2.207903,3.371140,-6.547756],[-0.081566,-3.783485,1.280059,7.736081,1.160253,2.268358,-0.189759,-0.316390,6.043326,-9.805344,-0.533286,1.882581,5.909669,2.661437,7.939168,-2.491229,-9.891488,-0.519210,-6.662840,3.399940,8.972226,-0.781147,-3.756266,5.063348,0.984633,6.638763,0.621138,3.785667,-9.735919,-7.414214,-7.602817,5.570714],[7.293324,-6.344178,0.436522,5.036389,8.262596,-4.516205,2.632308,5.992355,1.649601,-6.388111,0.936287,-5.475126,9.490696,8.576210,3.910148,-7.447050,3.647772,-9.812956,-6.271897,6.313408,-3.659447,-3.939202,5.983918,-9.549350,-1.531997,-0.155384,6.194393,7.624361,8.214127,-7.465818,9.579992,6.745347],[-6.220017,5.106024,-0.886913,-0.593255,-9.812500,-7.243773,-2.427518,0.589969,1.353700,-5.133417,-0.085858,9.431128,8.459511,-2.317207,-5.036825,3.139906,-2.644965,-8.235553,3.585330,9.066222,1.868246,0.425241,-3.313419,-9.298625,-2.566945,-5.384739,-9.815017,-7.495296,-1.287726,-2.598976,1.740329,7.826385],[-8.519857,-5.364070,-4.618736,0.695105,3.208613,2.353134,6.288769,8.774904,-3.332893,-8.204816,-8.182198,-0.324962,-4.877230,1.722688,-0.982531,5.158456,-1.538028,-3.644047,3.371672,-5.716489,6.405382,-2.962332,2.542236,-1.786593,-3.891301,-9.962987,-0.166965,5.812498,3.963281,-8.522114,2.092816,-1.008014],[3.213666,-0.370209,6.862890,3.156830,-8.873836,7.770897,0.679383,5.811833,3.004796,-0.788311,5.849471,-2.090076,4.053156,-4.477551,-7.402199,-9.310532,-3.181175,-9.043325,-3.447684,-2.811476,0.263220,-7.092059,4.398245,-5.615009,-7.299852,-5.094259,-7.257154,-3.216646,5.642799,-9.529963,-3.445175,5.972305],[9.252926,-7.186102,2.155265,-8.569634,-2.854078,-4.633363,5.585346,-5.536556,0.012345,4.141351,4.252479,2.166378,-7.122876,-5.255619,3.427105,2.671711,3.908174,-3.868288,-4.423646,-0.191703,0.734668,6.524543,7.522985,-2.907700,-9.906889,9.211359,-6.146563,8.438707,-2.026711,5.314375,0.572923,9.409927],[-4.065859,-0.198094,-0.692546,5.149731,3.810950,-2.919904,3.798253,2.639279,-5.994110,6.379825,-0.360063,-2.240040,3.802324,-3.218261,-6.239184,3.881815,6.650995,-9.125924,-5.372412,5.278089,-9.589590,5.362231,9.875703,9.987954,0.446512,-1.914265,6.530782,-4.729398,-3.943911,-3.536583,-9.839465,3.588192],[3.022425,-9.714993,3.223163,4.174729,1.872883,8.320142,5.478461,0.051221,-9.197472,-5.948570,-2.010229,-6.325337,5.162436,7.558509,-1.456885,0.478849,-5.127561,-3.962876,-5.027130,0.156427,-0.260464,-8.855300,-4.636878,-7.437106,8.213849,-5.410038,9.467302,-7.430081,3.783635,1.944426,-2.276520,6.746272],[-4.121448,-0.492303,6.282642,-5.439070,2.159302,-9.329301,-4.959392,-4.474768,4.606773,8.568433,7.165740,-1.353456,-4.896889,-1.866968,-9.689460,3.151602,9.467478,8.392645,-9.427081,-8.149367,-9.030029,9.938033,6.600911,-0.674988,-1.863163,-9.845763,9.101088,3.365660,-0.491564,-0.695816,1.628146,3.141620]], dtype = "float64")#candidate|14981|(128, 32)|const|float64
call_14978 = relay.TupleGetItem(func_8886_call(relay.reshape(const_14979.astype('float64'), [6, 8, 4]), relay.reshape(var_14980.astype('int32'), [280,]), relay.reshape(const_14953.astype('int64'), [32, 4]), relay.reshape(const_14981.astype('float64'), [4096,]), ), 7)
call_14982 = relay.TupleGetItem(func_8892_call(relay.reshape(const_14979.astype('float64'), [6, 8, 4]), relay.reshape(var_14980.astype('int32'), [280,]), relay.reshape(const_14953.astype('int64'), [32, 4]), relay.reshape(const_14981.astype('float64'), [4096,]), ), 7)
func_14039_call = mod.get_global_var('func_14039')
func_14041_call = mutated_mod.get_global_var('func_14041')
call_15000 = func_14039_call()
call_15001 = func_14039_call()
func_5163_call = mod.get_global_var('func_5163')
func_5166_call = mutated_mod.get_global_var('func_5166')
const_15005 = relay.const([[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False]], dtype = "bool")#candidate|15005|(220, 1)|const|bool
call_15004 = relay.TupleGetItem(func_5163_call(relay.reshape(const_15005.astype('bool'), [10, 11, 2]), relay.reshape(call_14924.astype('float64'), [14,]), ), 1)
call_15006 = relay.TupleGetItem(func_5166_call(relay.reshape(const_15005.astype('bool'), [10, 11, 2]), relay.reshape(call_14924.astype('float64'), [14,]), ), 1)
bop_15007 = relay.bitwise_and(var_14943.astype('uint16'), call_15004.astype('uint16')) # shape=(14, 1, 1040)
bop_15010 = relay.bitwise_and(var_14943.astype('uint16'), call_15006.astype('uint16')) # shape=(14, 1, 1040)
func_10573_call = mod.get_global_var('func_10573')
func_10576_call = mutated_mod.get_global_var('func_10576')
const_15020 = relay.const([[False,True,False,False],[False,True,True,True],[True,False,True,False],[False,False,False,True],[True,True,True,False],[False,False,True,False],[False,False,True,True],[False,False,True,True],[False,True,True,False],[True,False,True,False]], dtype = "bool")#candidate|15020|(10, 4)|const|bool
call_15019 = relay.TupleGetItem(func_10573_call(relay.reshape(const_15020.astype('bool'), [40,])), 0)
call_15021 = relay.TupleGetItem(func_10576_call(relay.reshape(const_15020.astype('bool'), [40,])), 0)
bop_15026 = relay.add(call_14978.astype('uint32'), const_15005.astype('uint32')) # shape=(220, 4096)
bop_15029 = relay.add(call_14982.astype('uint32'), const_15005.astype('uint32')) # shape=(220, 4096)
func_14431_call = mod.get_global_var('func_14431')
func_14436_call = mutated_mod.get_global_var('func_14436')
var_15038 = relay.var("var_15038", dtype = "bool", shape = (40, 14))#candidate|15038|(40, 14)|var|bool
call_15037 = relay.TupleGetItem(func_14431_call(relay.reshape(var_14966.astype('float32'), [14, 8, 78]), relay.reshape(const_14979.astype('float64'), [4, 48]), relay.reshape(var_15038.astype('bool'), [280, 2]), relay.reshape(call_14924.astype('float32'), [1, 14]), ), 2)
call_15039 = relay.TupleGetItem(func_14436_call(relay.reshape(var_14966.astype('float32'), [14, 8, 78]), relay.reshape(const_14979.astype('float64'), [4, 48]), relay.reshape(var_15038.astype('bool'), [280, 2]), relay.reshape(call_14924.astype('float32'), [1, 14]), ), 2)
func_9349_call = mod.get_global_var('func_9349')
func_9350_call = mutated_mod.get_global_var('func_9350')
call_15054 = relay.TupleGetItem(func_9349_call(), 2)
call_15055 = relay.TupleGetItem(func_9350_call(), 2)
uop_15061 = relay.cosh(bop_15026.astype('float64')) # shape=(220, 4096)
uop_15063 = relay.cosh(bop_15029.astype('float64')) # shape=(220, 4096)
output = relay.Tuple([call_14924,call_14938,const_14939,call_14942,var_14952,const_14953,call_14955,call_14958,bop_14967,const_14979,var_14980,const_14981,call_15000,bop_15007,call_15019,const_15020,call_15037,var_15038,call_15054,uop_15061,])
output2 = relay.Tuple([call_14925,call_14940,const_14939,call_14944,var_14952,const_14953,call_14956,call_14959,bop_14970,const_14979,var_14980,const_14981,call_15001,bop_15010,call_15021,const_15020,call_15039,var_15038,call_15055,uop_15063,])
func_15069 = relay.Function([var_14943,var_14952,var_14966,var_14980,var_15038,], output)
mod['func_15069'] = func_15069
mod = relay.transform.InferType()(mod)
var_15070 = relay.var("var_15070", dtype = "uint32", shape = (1040,))#candidate|15070|(1040,)|var|uint32
var_15071 = relay.var("var_15071", dtype = "float64", shape = (720,))#candidate|15071|(720,)|var|float64
var_15072 = relay.var("var_15072", dtype = "float64", shape = (14, 624))#candidate|15072|(14, 624)|var|float64
var_15073 = relay.var("var_15073", dtype = "int32", shape = (140, 2))#candidate|15073|(140, 2)|var|int32
var_15074 = relay.var("var_15074", dtype = "bool", shape = (40, 14))#candidate|15074|(40, 14)|var|bool
output = func_15069(var_15070,var_15071,var_15072,var_15073,var_15074,)
func_15075 = relay.Function([var_15070,var_15071,var_15072,var_15073,var_15074,], output)
mutated_mod['func_15075'] = func_15075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12073_call = mod.get_global_var('func_12073')
func_12075_call = mutated_mod.get_global_var('func_12075')
call_15109 = relay.TupleGetItem(func_12073_call(), 0)
call_15110 = relay.TupleGetItem(func_12075_call(), 0)
func_13895_call = mod.get_global_var('func_13895')
func_13897_call = mutated_mod.get_global_var('func_13897')
const_15112 = relay.const([-8,-4,9,-10,-8,9,-8,9,8,-9,-6,1,3,-6,1,2,10,8,-10,10,-1,9,2,1,4,2,10,-2,1,9,7,3,9,-5,-10,-6,5,-2,-3,-8,-4,1,-4,-7,2,8,9,-5,3,-7,8,-5,9,2,10,-9,10,6,-2,10,-1,3,10,-6,1,-9,7,2,1,5,3,4,7,-5,5,5,4,5,8,-10,-7,8,10,7,5,3,-10,-9,-8,-6,-2,10,8,1,-9,5,-7,-9,4,-8,-1,-4,7,8,8,2,-6,5,10,-10,-6,-4,-9,-1,10,-9,-10,2,6,7,-5,-5,3,-4,5,-1,-10,-3,-9,-1,4,2,5,-5,7,9,1,4,4,-9,4,10,-7,5,7,-9,-6,-7,6,-3,4,-4,6,10,-7,-10,9,7,3,5,7,-3,4,5,-1,-2,2,9,3,-7,10,-1,7,6,9,-2,-5,9,-6,-9,3,-2,-5,-3,2,-1,7,-3,2,-6,3,7,-4,7,-1,7,-6,-10,-1,3,3,10,-8,6,-4,-2,10,-7,8,-6,-10,4,5,-1,7,2,10,1,4,-7,-8,9,8,4,-10,6,7,-10,-4,-9,-6,2,-2,1,8,8,9,-8,3,-5,-4,7,-1,-4,-7,-7,-5,-9,1,6,-10,-7,-2,-5,7,-8,-1,4,1,8,-2,-10,-3,5,9,-5,-6,7,7,10,4,-9,-4,-8,3,-2,-10,-4,-3,8,10,10,-6,-3,1,-1,5,9,-2,-2,-4,10,7,8,2,-2,9,-10,1,10,-1,4,-10,5,1,-7,-2,-10,2,10,3,-8,-6,-7,-6,-6,7,-2,6,-1,5,-1,-6,7,-8,-3,9,-5,-4,3,-1,-4,10,7,3,2,-5,-4,-5,-8,6,-5,-5,-3,3,8,4,2,9,-9,-7,-10,-5,3,5,-4,-5,7,9,10,5,-6,1,2,-7,-4,-3,5,9,9,-9,5,10,-5,-4,-1,-2,-8,4,3,-3,4,-1,4,-8,4,-6,3,-4,4,-3,7,-3,8,-6,-7,-10,-7,-1,-1,-5,-6,5,-6,-6,-7,7,-4,-10,8,-5,-9,5,6,-6,-4,-3,10,10,8,-8,6,-10,8,5,10,-10,-5,-4,2,9,10,8,3,-8,3,10,3,-10,-4,6,4,-2,10,1,5,-10,3,7,-6,-9,-2,10,10,6,-4,-5,-10,-9,-4,-4,10,4,-4,1,5,-10,-10,-2,-10,-2,5,-5,8,-5,2,-9,-5,-8,-3,10,-1,-7,-1,-3,9,7,5,-9,6,3,-3,-10,7,-7,9,10,-8,-2,6,-1,-1,1,2,8,1,-4,6,-5,4,-3,9,-2,8,7,-9,3,9,-5,1,7,-5,-8,-6,1,-5,4,8,1,2,-2,-6,-1,8,-4,-7,2,-3,-2,3,1,-10,2,-3,-3,-2,-5,1,-3,-10,-7,1,1,-10,-3,10,1,-10,-5,-7,-7,-7,-7,-6,7,-1,-7,6,6,-2,-10,-4,-2,3,9,-8,-9,7,-5,-6,3,9,-10,7,-2,5,-3,3,5,-3,-8,-1,7,-10,-2,-5,6,4,-8,9,2,-9,5,10,-10,4,-5,-2,4,-5,10,3,1,-9,-10,8,-4,-9,-3,-9,-2,-10,10,7,5,10,1,1,-1,-2,3,-5,9,6,-10,4,9,-9,5,1,-8,-5,-4,-1,-1,8,-3,8,4,3,-10,8,-10,-6,-2,4,8,9,10,-7,-4,-2,5,-8,-6,4,9,-3,8,-1,6,10,-7,-4,-10,-7,-3,3,8,8,4,10,-6,2,10,-4,-1,10,5,6,-4,-4,-1,-6,8,-3,-10,6,3,9,1,2,10,-3,-6,4,1,7,-3,-1,9,-3,-6,-4,-9,6,8,4,-2,7,-6,-7,9,1,9,4,7,-8,8,-5,6,-7,-1,-4,-9,-2,4,-4,-5,8,8,-3,-1,9,4,-8,-5,-5,-7,-1,2,3,-3,10,3,-4,-1,-5,8,4,8,-2,-7,9,-8,2,2,-7,-2,4,6,-4,5,-9,-5,-6,-5,4,-5,-7,3,-4,-3,-1,9,-10,-5,4,-6,-4,-6,-4,9,4,-10,1,-8,-8,8,-8,7,4,2,4,10,1,-10,-6,2,7,1,-5,2,2,5,7,-7,5,-8,9,9,-6,4,10,-2,-8,-4,1,-6,-6,-2,4,5,-9,10,-2,10,2,10,10,10,4,-10,-9,-8,7,7,1,3,-4,-10,6,4,3,-9,-3,-10,-2,-4,7,6,-3,-7,5,-4,5,-7,3,-8,-3,-9,3,-7,-2,-5,-2,4,4,-10,5,9,-8,-2,8,-9,-6,-9,-2,3,-7,2,1,-5,-1,-5,-8,8,-1,-9,10,-1,-10,5,-9,3,-9,5,5,7,4,-4,-6,-8,-3,-7,-9,-9,-9,9,5,5,-1,5,8,-3,4,5,-10,-7,2,-7,-2,-9,3,10,2,-1,6,6,-8,8,-6,1,6,10,2,10,-6,-7,-7,-6,-4,9,-6,4,5,5,-5,-7,6,10,7,-4,-8,-3,-9,1,7,-3,-8,7,1,5,10,-6,3,4,5,-2,-8,6,-5,1,1,-5,3,2,-5,9,-1,2,2,-4,4,9,-3,9,4,-10,-6,-3,8,-2,-4,-8,7,-9,-8,5,10,-3,-9,-1,-6,9,7,-2,9,7,6,-8,-9,-1,1,8,10,-6,-8,1,1,6,3,-2,4,8,9,3,5,5,-2], dtype = "uint32")#candidate|15112|(1040,)|const|uint32
call_15111 = relay.TupleGetItem(func_13895_call(relay.reshape(const_15112.astype('uint32'), [1040,])), 2)
call_15113 = relay.TupleGetItem(func_13897_call(relay.reshape(const_15112.astype('uint32'), [1040,])), 2)
func_14238_call = mod.get_global_var('func_14238')
func_14240_call = mutated_mod.get_global_var('func_14240')
call_15138 = func_14238_call()
call_15139 = func_14238_call()
output = relay.Tuple([call_15109,call_15111,const_15112,call_15138,])
output2 = relay.Tuple([call_15110,call_15113,const_15112,call_15139,])
func_15166 = relay.Function([], output)
mod['func_15166'] = func_15166
mod = relay.transform.InferType()(mod)
output = func_15166()
func_15167 = relay.Function([], output)
mutated_mod['func_15167'] = func_15167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9383_call = mod.get_global_var('func_9383')
func_9385_call = mutated_mod.get_global_var('func_9385')
call_15175 = relay.TupleGetItem(func_9383_call(), 0)
call_15176 = relay.TupleGetItem(func_9385_call(), 0)
output = relay.Tuple([call_15175,])
output2 = relay.Tuple([call_15176,])
func_15202 = relay.Function([], output)
mod['func_15202'] = func_15202
mod = relay.transform.InferType()(mod)
output = func_15202()
func_15203 = relay.Function([], output)
mutated_mod['func_15203'] = func_15203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12500_call = mod.get_global_var('func_12500')
func_12501_call = mutated_mod.get_global_var('func_12501')
call_15226 = relay.TupleGetItem(func_12500_call(), 2)
call_15227 = relay.TupleGetItem(func_12501_call(), 2)
func_12302_call = mod.get_global_var('func_12302')
func_12306_call = mutated_mod.get_global_var('func_12306')
const_15240 = relay.const(True, dtype = "bool")#candidate|15240|()|const|bool
var_15241 = relay.var("var_15241", dtype = "float32", shape = (14,))#candidate|15241|(14,)|var|float32
call_15239 = relay.TupleGetItem(func_12302_call(relay.reshape(const_15240.astype('bool'), []), relay.reshape(var_15241.astype('float32'), [14,]), ), 1)
call_15242 = relay.TupleGetItem(func_12306_call(relay.reshape(const_15240.astype('bool'), []), relay.reshape(var_15241.astype('float32'), [14,]), ), 1)
func_10641_call = mod.get_global_var('func_10641')
func_10643_call = mutated_mod.get_global_var('func_10643')
call_15246 = relay.TupleGetItem(func_10641_call(), 0)
call_15247 = relay.TupleGetItem(func_10643_call(), 0)
func_10242_call = mod.get_global_var('func_10242')
func_10244_call = mutated_mod.get_global_var('func_10244')
call_15267 = func_10242_call()
call_15268 = func_10242_call()
func_9658_call = mod.get_global_var('func_9658')
func_9661_call = mutated_mod.get_global_var('func_9661')
var_15270 = relay.var("var_15270", dtype = "bool", shape = (320,))#candidate|15270|(320,)|var|bool
call_15269 = relay.TupleGetItem(func_9658_call(relay.reshape(var_15270.astype('bool'), [2, 160])), 2)
call_15271 = relay.TupleGetItem(func_9661_call(relay.reshape(var_15270.astype('bool'), [2, 160])), 2)
output = relay.Tuple([call_15226,call_15239,const_15240,var_15241,call_15246,call_15267,call_15269,var_15270,])
output2 = relay.Tuple([call_15227,call_15242,const_15240,var_15241,call_15247,call_15268,call_15271,var_15270,])
func_15276 = relay.Function([var_15241,var_15270,], output)
mod['func_15276'] = func_15276
mod = relay.transform.InferType()(mod)
var_15277 = relay.var("var_15277", dtype = "float32", shape = (14,))#candidate|15277|(14,)|var|float32
var_15278 = relay.var("var_15278", dtype = "bool", shape = (320,))#candidate|15278|(320,)|var|bool
output = func_15276(var_15277,var_15278,)
func_15279 = relay.Function([var_15277,var_15278,], output)
mutated_mod['func_15279'] = func_15279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11760_call = mod.get_global_var('func_11760')
func_11761_call = mutated_mod.get_global_var('func_11761')
call_15351 = relay.TupleGetItem(func_11760_call(), 0)
call_15352 = relay.TupleGetItem(func_11761_call(), 0)
output = call_15351
output2 = call_15352
func_15385 = relay.Function([], output)
mod['func_15385'] = func_15385
mod = relay.transform.InferType()(mod)
output = func_15385()
func_15386 = relay.Function([], output)
mutated_mod['func_15386'] = func_15386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10026_call = mod.get_global_var('func_10026')
func_10027_call = mutated_mod.get_global_var('func_10027')
call_15439 = func_10026_call()
call_15440 = func_10026_call()
func_13236_call = mod.get_global_var('func_13236')
func_13238_call = mutated_mod.get_global_var('func_13238')
call_15443 = relay.TupleGetItem(func_13236_call(), 4)
call_15444 = relay.TupleGetItem(func_13238_call(), 4)
output = relay.Tuple([call_15439,call_15443,])
output2 = relay.Tuple([call_15440,call_15444,])
func_15449 = relay.Function([], output)
mod['func_15449'] = func_15449
mod = relay.transform.InferType()(mod)
mutated_mod['func_15449'] = func_15449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15449_call = mutated_mod.get_global_var('func_15449')
call_15450 = func_15449_call()
output = call_15450
func_15451 = relay.Function([], output)
mutated_mod['func_15451'] = func_15451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11381_call = mod.get_global_var('func_11381')
func_11382_call = mutated_mod.get_global_var('func_11382')
call_15456 = func_11381_call()
call_15457 = func_11381_call()
func_11760_call = mod.get_global_var('func_11760')
func_11761_call = mutated_mod.get_global_var('func_11761')
call_15462 = relay.TupleGetItem(func_11760_call(), 0)
call_15463 = relay.TupleGetItem(func_11761_call(), 0)
output = relay.Tuple([call_15456,call_15462,])
output2 = relay.Tuple([call_15457,call_15463,])
func_15468 = relay.Function([], output)
mod['func_15468'] = func_15468
mod = relay.transform.InferType()(mod)
output = func_15468()
func_15469 = relay.Function([], output)
mutated_mod['func_15469'] = func_15469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15561 = relay.var("var_15561", dtype = "uint32", shape = (6, 6, 15))#candidate|15561|(6, 6, 15)|var|uint32
const_15562 = relay.const([[[10,2,5,-10,1,-2,-9,9,10,7,3,-8,2,3,-5],[-2,5,3,-3,2,1,1,8,9,5,3,-9,-7,1,9],[-3,1,4,-7,-6,-2,-5,-8,-3,1,2,-10,-5,6,-8],[-1,7,-8,-5,9,-4,-8,-4,-9,3,8,4,-8,4,-4],[-10,-3,7,9,4,3,7,-4,8,-9,-5,-6,-5,-9,-8],[-1,-8,-5,-6,6,10,-8,1,-1,9,-9,7,5,-8,10]],[[7,-4,8,9,2,3,-5,3,7,4,-4,-8,6,4,8],[-10,5,-10,-3,-6,4,-1,2,-2,7,-5,-9,-3,-8,9],[-9,1,-4,9,-7,4,-8,-8,-10,9,8,-8,9,-2,-8],[-1,1,-3,10,-2,-10,-8,-5,9,1,-3,-4,-6,2,-7],[10,-9,9,-5,7,8,6,-6,-4,-6,-4,4,10,2,1],[-4,9,-1,7,-9,-3,-2,5,-2,2,6,5,-6,1,8]],[[-7,-2,-6,-5,6,7,-3,2,4,8,2,-6,3,3,-1],[-7,-3,-5,1,4,-5,9,-8,3,5,-2,5,-5,9,4],[8,8,-2,2,2,1,7,-5,-2,-8,2,-3,7,7,5],[6,5,-7,-7,-8,-7,8,10,-8,2,7,-8,-10,10,1],[-9,3,2,-8,-10,-10,7,10,1,-8,-4,6,-9,6,-2],[-7,5,4,1,-6,10,8,6,-5,-8,10,9,-3,-2,10]],[[-8,-6,8,-8,-2,9,-2,7,7,-5,-4,6,-2,-4,1],[-10,-2,10,6,8,-4,-8,-6,-2,-9,-9,-1,8,7,10],[7,-5,-6,-8,4,-10,3,-5,-3,5,6,-6,-8,-2,8],[2,-2,4,-1,2,-6,-6,-10,-9,7,-4,-7,-2,5,-1],[6,8,-8,7,3,-7,-2,10,-3,5,-3,5,-1,5,2],[1,-9,7,-1,9,6,5,-8,-1,3,10,-5,8,-1,4]],[[-8,3,-1,-5,9,-8,-9,-4,-7,-5,-9,8,10,-1,-8],[-6,7,-6,-2,-3,-6,-5,-4,-1,3,3,10,9,-5,5],[-5,-2,10,5,8,2,-10,8,-9,-7,4,8,9,-8,-10],[-2,1,9,1,-5,3,4,8,9,10,2,6,-1,-7,-1],[-1,-2,-6,-6,-5,7,-2,-3,-4,10,8,1,-1,-9,1],[-3,-5,-5,-8,-10,-5,2,2,10,8,2,-3,10,-5,-2]],[[10,-9,2,8,6,-2,-6,10,8,6,1,1,-10,6,7],[4,-3,4,8,5,1,6,-10,7,-8,3,10,-1,-3,8],[5,9,8,5,-7,-1,-6,8,-5,3,10,3,1,2,1],[6,-5,-7,-10,8,-3,-8,8,-6,-4,8,-6,-6,5,1],[-10,-5,1,8,4,-3,-5,-7,-8,7,1,-6,6,-4,-9],[-8,-1,4,5,-7,7,6,-10,4,6,-2,7,-4,9,4]]], dtype = "uint32")#candidate|15562|(6, 6, 15)|const|uint32
bop_15563 = relay.logical_xor(var_15561.astype('uint32'), relay.reshape(const_15562.astype('uint32'), relay.shape_of(var_15561))) # shape=(6, 6, 15)
func_134_call = mod.get_global_var('func_134')
func_138_call = mutated_mod.get_global_var('func_138')
var_15571 = relay.var("var_15571", dtype = "int64", shape = (385,))#candidate|15571|(385,)|var|int64
call_15570 = func_134_call(relay.reshape(var_15571.astype('int64'), [11, 5, 7]), relay.reshape(var_15571.astype('int64'), [11, 5, 7]), )
call_15572 = func_134_call(relay.reshape(var_15571.astype('int64'), [11, 5, 7]), relay.reshape(var_15571.astype('int64'), [11, 5, 7]), )
output = relay.Tuple([bop_15563,call_15570,var_15571,])
output2 = relay.Tuple([bop_15563,call_15572,var_15571,])
func_15587 = relay.Function([var_15561,var_15571,], output)
mod['func_15587'] = func_15587
mod = relay.transform.InferType()(mod)
mutated_mod['func_15587'] = func_15587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15587_call = mutated_mod.get_global_var('func_15587')
var_15589 = relay.var("var_15589", dtype = "uint32", shape = (6, 6, 15))#candidate|15589|(6, 6, 15)|var|uint32
var_15590 = relay.var("var_15590", dtype = "int64", shape = (385,))#candidate|15590|(385,)|var|int64
call_15588 = func_15587_call(var_15589,var_15590,)
output = call_15588
func_15591 = relay.Function([var_15589,var_15590,], output)
mutated_mod['func_15591'] = func_15591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10026_call = mod.get_global_var('func_10026')
func_10027_call = mutated_mod.get_global_var('func_10027')
call_15610 = func_10026_call()
call_15611 = func_10026_call()
func_10058_call = mod.get_global_var('func_10058')
func_10060_call = mutated_mod.get_global_var('func_10060')
call_15612 = relay.TupleGetItem(func_10058_call(), 0)
call_15613 = relay.TupleGetItem(func_10060_call(), 0)
output = relay.Tuple([call_15610,call_15612,])
output2 = relay.Tuple([call_15611,call_15613,])
func_15620 = relay.Function([], output)
mod['func_15620'] = func_15620
mod = relay.transform.InferType()(mod)
mutated_mod['func_15620'] = func_15620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15620_call = mutated_mod.get_global_var('func_15620')
call_15621 = func_15620_call()
output = call_15621
func_15622 = relay.Function([], output)
mutated_mod['func_15622'] = func_15622
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15665 = relay.var("var_15665", dtype = "int8", shape = (7, 10, 10))#candidate|15665|(7, 10, 10)|var|int8
var_15666 = relay.var("var_15666", dtype = "int8", shape = (7, 10, 10))#candidate|15666|(7, 10, 10)|var|int8
bop_15667 = relay.logical_xor(var_15665.astype('int8'), relay.reshape(var_15666.astype('int8'), relay.shape_of(var_15665))) # shape=(7, 10, 10)
func_11238_call = mod.get_global_var('func_11238')
func_11241_call = mutated_mod.get_global_var('func_11241')
var_15679 = relay.var("var_15679", dtype = "float32", shape = (720,))#candidate|15679|(720,)|var|float32
call_15678 = relay.TupleGetItem(func_11238_call(relay.reshape(var_15679.astype('float32'), [720, 1])), 2)
call_15680 = relay.TupleGetItem(func_11241_call(relay.reshape(var_15679.astype('float32'), [720, 1])), 2)
func_9895_call = mod.get_global_var('func_9895')
func_9897_call = mutated_mod.get_global_var('func_9897')
call_15681 = relay.TupleGetItem(func_9895_call(), 0)
call_15682 = relay.TupleGetItem(func_9897_call(), 0)
output = relay.Tuple([bop_15667,call_15678,var_15679,call_15681,])
output2 = relay.Tuple([bop_15667,call_15680,var_15679,call_15682,])
func_15693 = relay.Function([var_15665,var_15666,var_15679,], output)
mod['func_15693'] = func_15693
mod = relay.transform.InferType()(mod)
mutated_mod['func_15693'] = func_15693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15693_call = mutated_mod.get_global_var('func_15693')
var_15695 = relay.var("var_15695", dtype = "int8", shape = (7, 10, 10))#candidate|15695|(7, 10, 10)|var|int8
var_15696 = relay.var("var_15696", dtype = "int8", shape = (7, 10, 10))#candidate|15696|(7, 10, 10)|var|int8
var_15697 = relay.var("var_15697", dtype = "float32", shape = (720,))#candidate|15697|(720,)|var|float32
call_15694 = func_15693_call(var_15695,var_15696,var_15697,)
output = call_15694
func_15698 = relay.Function([var_15695,var_15696,var_15697,], output)
mutated_mod['func_15698'] = func_15698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10998_call = mod.get_global_var('func_10998')
func_11000_call = mutated_mod.get_global_var('func_11000')
call_15709 = func_10998_call()
call_15710 = func_10998_call()
func_9452_call = mod.get_global_var('func_9452')
func_9454_call = mutated_mod.get_global_var('func_9454')
var_15715 = relay.var("var_15715", dtype = "int64", shape = (385,))#candidate|15715|(385,)|var|int64
call_15714 = relay.TupleGetItem(func_9452_call(relay.reshape(var_15715.astype('int64'), [385, 1])), 1)
call_15716 = relay.TupleGetItem(func_9454_call(relay.reshape(var_15715.astype('int64'), [385, 1])), 1)
func_5163_call = mod.get_global_var('func_5163')
func_5166_call = mutated_mod.get_global_var('func_5166')
const_15719 = relay.const([False,False,True,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,True,True,True,True,True,True,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,True,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,True,False,True,False,True,True,True,True,False,True,False,True,False,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,False,False,True,False,True,False,True,False,False,True,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,True,True,False,False,True,False,False,False,True,False,True,True,True], dtype = "bool")#candidate|15719|(220,)|const|bool
const_15720 = relay.const([[0.339455],[-8.957747],[-5.904279],[6.950152],[7.136137],[-8.375199],[-7.382596],[7.881786],[9.185354],[5.325487],[-0.951490],[1.927886],[4.542707],[4.598706]], dtype = "float64")#candidate|15720|(14, 1)|const|float64
call_15718 = relay.TupleGetItem(func_5163_call(relay.reshape(const_15719.astype('bool'), [10, 11, 2]), relay.reshape(const_15720.astype('float64'), [14,]), ), 1)
call_15721 = relay.TupleGetItem(func_5166_call(relay.reshape(const_15719.astype('bool'), [10, 11, 2]), relay.reshape(const_15720.astype('float64'), [14,]), ), 1)
output = relay.Tuple([call_15709,call_15714,var_15715,call_15718,const_15719,const_15720,])
output2 = relay.Tuple([call_15710,call_15716,var_15715,call_15721,const_15719,const_15720,])
func_15722 = relay.Function([var_15715,], output)
mod['func_15722'] = func_15722
mod = relay.transform.InferType()(mod)
mutated_mod['func_15722'] = func_15722
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15723 = relay.var("var_15723", dtype = "int64", shape = (385,))#candidate|15723|(385,)|var|int64
func_15722_call = mutated_mod.get_global_var('func_15722')
call_15724 = func_15722_call(var_15723)
output = call_15724
func_15725 = relay.Function([var_15723], output)
mutated_mod['func_15725'] = func_15725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14718_call = mod.get_global_var('func_14718')
func_14719_call = mutated_mod.get_global_var('func_14719')
call_15735 = relay.TupleGetItem(func_14718_call(), 1)
call_15736 = relay.TupleGetItem(func_14719_call(), 1)
output = relay.Tuple([call_15735,])
output2 = relay.Tuple([call_15736,])
func_15739 = relay.Function([], output)
mod['func_15739'] = func_15739
mod = relay.transform.InferType()(mod)
output = func_15739()
func_15740 = relay.Function([], output)
mutated_mod['func_15740'] = func_15740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11760_call = mod.get_global_var('func_11760')
func_11761_call = mutated_mod.get_global_var('func_11761')
call_15746 = relay.TupleGetItem(func_11760_call(), 0)
call_15747 = relay.TupleGetItem(func_11761_call(), 0)
func_436_call = mod.get_global_var('func_436')
func_440_call = mutated_mod.get_global_var('func_440')
var_15753 = relay.var("var_15753", dtype = "uint32", shape = (144,))#candidate|15753|(144,)|var|uint32
const_15754 = relay.const([-1,-3,8,8,7,-8,9,5,10,-1,3,4,3,1,3,6,-8,2,-9,9,-6,-4,-5,-6,4,7,-3,7,6,-7,-3,6,-2,-9,-9,-6,9,2,10,8,-7,3,-5,8,-10,4,-8,7,9,10,8,4,7,-9,6,-4,4,5,-8,3,-9,-3,7,8,10,3,5,3,-5,-2,-4,6,-2,7,5,9,-7,1,-6,10,-9,4,-2,10,1,-8,8,3,6,-1,-10,-5,7,-10,4,-9,-3,-1,-9,-2,-2,-7,6,-10,10,1,4,-6,1,3,6,-2,-2,1,1,4,-6,2,1,-2,3,-2,1,-9,-5,-2,4,-9,-5,8,6,1,-10,-3,5,3,-1,9,4,8,8,-2,4,-9,-4,6,8,3,10,-3,1,5,1,-6,1,8,-4,2,-2,8,9,-7,1,8,-5,-8,-5,8,6,4,-10,9,-3,-3,-3,2,-6,10,10,-9,-7,1,2,1,-7,-7,7,2,-6,-6,7,10,6,1,6,-1,6,6,-3,-8,-3,-7,9,-2,-6,2,4,-7,2,8,-9,-2,3,5,-6,-6,5,1,5,-9,-10,6,-2,6,-2,-3,-5,6,-4,6,1,1,7,10,-5,-5,-9,-3,-6,7,5,-7,-7,-10,3,5,10,-9,-9,-3,7,1,8,7,3,2,-5,10,-3,5,10,9,5,9,9,8,9,-2,-5,1,-4,-8,1,5,10,-9,1,10,-7,1,2,-4,1,8,-6,4,3,2,-1,7,6,-2,3,2,1,-8,3,6,9,-1,-4,-6,6,2,-3,-9,-6,-6,2,-10,1,8,1,9,-7,-4,5,9,-6,-1,9,-9,-10,3,-5,7,-3,2,-6,-4,3,-3,8,2,-2,-4,-4,5,8,-7,2,-10,6,9,-5,4,-10,8,8,1,-2,10,-8,1,-4,-10,2,-9,2,-2,-2,-6,-5,10,4,-5,6,4,2,-7,-8,3,7,-2,-2,7,-3,4,-9,3,-6,2,4,4,-5,-2,-10,-5,-9,-7,1,2,-10,2,-3,-3,-1,-2,2,3,-9,-10,-2,-5,10,-1,-7,-5,-3,6,-1,-6,-3,9,4,-1,-1,-1,6,3,9,6,-6,3,-7,-7,8,-3,2,6,-6,-7,8,9,6,-9,-5,-1,8,-2,4,5,3,-5,-2,8,-8,6,-5,-1,6,-5,6,3,3,3,7,1,8,4,7,-9,-1,2,-9,-8,-2,7,1,4,-9,5,-4,5,-4,-1,3,5,-6,-9,-9,-1,9,9,-10,-8,-9,-5,9,5,9,4,8,5,8,9,10,-8,-10,3,-1,10,-3,-3,5,8,7,-7,3,9,7,-9,-9,-7,6,-8,-10,7,3,8,9,3,7,-1,1,2,-9,4,9,-7,-3,10,-5,-9,-6,-8,4,-2,-3,-1,-2,-4,-7,-1,4,-1,-6,2,-7,-2,9,-1,5,-4,-4,-5,-10,-1,9,-3,-1,10,7,-1,-3,9,-6,3,-2,10,-1,-6,3,-10,-1,-5,-9,-10,-7,1,5,-1,8,10,10,10,4,4,3,-2,-9,7,-4,-2,-9,2,-3,-4,-5,-5,-6,-6,-10,10,4,-10,-10,1,-5,8,8,-9,-3,3,9,4,-2,-8,3,-8,9,-10,-6,-7,-5,-8,-5,3,-1,-5,-6,-8,9,3,-3,1,-10,4,-3,8,6,-9,2,-8,-2,-5,-1,-9,10,-4,-4,6,-5,1,-3,-4,-4,1,-8,-10,3,-9,2,-7,-9,-5,8,-8,-6,-1,-7,-8,-1,-8,10,-9,5,7,5,10,-7,-10,10,7,6,-5,-4,-5,-3,-6,-3,6,-3,7,-9,4,4,2,-2,2,-1,-3,1,2,3,9,-10,-3,-9,1,-9,-7,-10,9,-10,-10,-7,5,-2,-1,2,-8,4,7,4,-1,-4,-6,-7,-4,3,9,-8,-7,1,3,8,6,-7,-5,-1,-1,-7,9,1,3,9,5,6,8,-10,1,-6,-9,-1,3,-1,9,3,-1,1,-10,8,10,7,-1,10,-6,8,9,-2,-1,7,10,-8,-4,-9,-3,-10,-10,2,-6,3,1,9,-3,2,-3,-6,1,-8,-4,1,-1,-10,-10,2,7,9,-7,7,9,-3,-10,-7,-2,-8,-1,4,10,3,-8,-5,8,-2,4,4,3,-10,-6,-6,4,-5,-2,5,2,-9,2,-7,2,7,3,1,-1,-8,10,7,9,6,-10,-1,-10,-5,6,5,3,4,-7,9,8,7,3,-9,-4,2,-8,8,-5,2,-7,9,-1,4,-8,6,-2,3,6,10,8,6,6,6,7,3,5,3,-5,-5,-2,10,-3,1,-8,9,-4,-4,9,2,-7,1,8,-9,-3,-9,-5,-10,3,-8,-4,-7,-2,-1,-8,-8,-1,-7,6,-2,-10,5,10,-4,9,-6,-8,3,3,-2,10,-7,2,-8,2,7,-2,7,-8,-7,-10,-1,-5,10,-2,-8,-6,-1,-9,-5,10,-2,4,4,-8,-8,3,1,-6,5,-5,8,8,-10,-10,-9,-6,-1,-10,-10,-8,-1,10,1,4,5,1,-3,-5,-9,7,-3,8,-1,1,-9,4,1,3,-9,10,-8,-9,3,3,9,9,-3,8,-7,9,-7,7,4,-2,7,-1,4,-6,-4,-6,-1,4,1,-9,-10,-6,1,7,-1,2,-10,5,-3,-10,1,7,-10,-5,-1,-1,5,10,-1,3,5,-2,-10,-10,7,7,5,-8,-5,9,-9,8,10,-2,-2,-2,2,-3,-8,-3,-2,-1,-6,-3,-3,-6,-5,-8,2,-3,-5,-1,-9,-1,-7,4,-7,-8,5,4,6,-2,-6,-5,10,-3,4,-4,-10,10,9,1,-10,-1,-10,2,-6,-6,-5,-1,10,-10,9,7,-8,1,2,5,8,-4,-10,-6,-3,9,5,2,5,2,-7,5,8,5,5,10,10,6,4,-8,-4,6,-6,-9,-2,5,9,-7,6,-5,-5,-8,10,-5,-4,3,10,1,8,9,8,1,5,-4,-1,-4,5,9,4,2,-7,-7,-2,2,-8,-2,-4,4,3,10,9,10,4,1,-5,7,8,6,-2,-2,1,7,-8,-5,-10,-3,-1,-5,4,4,-1,-9,2,-10,8,-5,7,2,-4,6,-4,-5,4,9,-7,5,-3,-8,-4,1,4,8,-9,-9,-1,-7,6,1,3,7,-4,-10,1,-4,-10,-6,3,8,-6,5,3,-4,5,10,7,9,-2,-8,9,-7,-9,3,-6,-3,9,-4,1,3,5,-3,-1,-4,1,5,6,-9,4,6,-5,6,7,8,8,-4,-7,5,-1,-4,-5,-2,-2,5,-5,7,9,5,5,-6,7,8,-8,3,-4,-4,5,-9,9,2,-4,-1,4,1,-9,4,6,1,5,-5,-10,-7,5,3,-1,-5,8,7,3,-3,4,10,7,4,-5,2,-8,-2,6,-6,-2,1,-10,-2,-8,-5,2,2,7,3,7,-7,4,-7,-9,-7,-5,-1,-9,-7,-9,1,10,-1,1,8,9,2,-7,6,-3,6,-3,4,1,-3,4,2,-9,-10,8,8,-3,3,-9,-7,1,-2,-4,10,-8,8,9,7,-6,8,-4,1,7,1,-2,10,-6,2,9,-7,-5,8,-6,1,3,-6,-8,-6,1,-2,-6,8,7,9,-10,-2,1,2,-6,-9,-4,5,4,-6,-7,-7,1,4,-3,-3,-1,-1,-6,2,-6,10,-10,10,6,-6,-4,-7,-8,4,-6,-6,1,-1,-8,8,8,2,3,-9,-7,4,-7,8,-2,7,-9,-4,10,-7,10,2,5,5,5,-9,-8,6,1,-3,4,8,-4,-6,-10,3,-10,10,-9,5,9,-10,4,4,-8,6,-8,-7,-1,-9,6,4,6,-3,-9,3,-10,-4,-7,-8,7,8,2,-10,-8,5,10,2,-3,1,1,7,6,-4,10,-9,9,4,5,-6,2,9,-3,6,-5,-6,-10,8,6,9,7,5,-9,9,3,-9,9,5,-10,-5,-9,-3,-8,6,-6,-2,-5,1,7,8,-5,5,6,5,-2,-4,3,-1,-2,-7,-2,-3,7,2,4,-4,-8,5,10,3,2,2,-7,-8,-9,-7,-3,1,4,4,5,9,8,1,-3,9,-4,-3,-5,1,-6,-7,1,-9,-1,-3,2,2,-5,5,9,-3,4,-3,-7,-4,-5,1,9,8,-2,8,2,-3,5,7,3,-7,8,-7,6,-5,10,-4,-6,1,-5,4,-1,6,-7,9,5,-7,8,5,3,5,-7,-4,-3,-5,-6,-8,5,2,-7,2,-9,-4,-2,2,-10,-1,-6,-2,-2,7,-5,4,9,4,8,-7,-6,5,9,-5,4,7,-5,-1,7,4,3,4,3,-9,5,-8,-6,-10,2,-7,3,8,-5,4,7,6,3,1,7,9,-5,-4,1,9,7,-10,9,8,-7,8,10,3,3,1,5,3,-8,2,-8,3,-6,-10,4,-1,-10,-4,-10,-6,-4,-4,-9,-8,3,-6,-2,10,5,5,8,8,-2,10,1,6,5,4,-8,-10,-4,-5,7,-8,-5,-2,8,3,-4,5,-1,3,-2,1,-9,2,1,-4,3,1,-7,-3,2,-7,10,-4,-3,-8,-1,-5,-4,-6,4,-3,3,5,6,-5,3,-7,-3,2,7,3,1,-10,4,-7,-9,-3,6,-2,-5,3,8,9,-4,-9,2,-10,-9,7,-8,2,-5,-10,5,3,1,-6,-9,-2,9,-3,5,-4,-4,10,5,1,-6,-1,5,1,-2,-4,-3,2,-10,-2,8,1,-7,6,-2,-10,-2,-1,4,2,8,-7,-4,4,-3,1,4,-3,-3,-3,-10,5,-5,-8,8,-7,5,1,10,-3,4,6,8,-1,10,7,-8,-1,-1,-1,8,9,-1,-5,8,6,4,1,1,4,-5,-3,-5,5,-3,9,6,7,8,8,9,-7,-4,-4,2,8,9,2,6,-2,-6,4,-8,-9,2,2,1,-6,-10,2,8,-9,1,-3,-9,-8,7,-6,5,-3,3,10,-7,-7,-9,-6,8,4,-7,6,3,10,8,-6,1,9,7,6,-8,-10,3,-3,-5,10,-3,7,-2,7,5,2,5,10,5,-7,-2,-9,6,5,9,3,-4,10,-9,8,2,-2,5,2,-1,-10,-7,5,1,3,7,-1,-6,9,-10,1,-6,1,-8,-1,2,-9,2,-10,-8,-2,1,-8,-6,4,3,-8,-2,-2,1,-7,-5,-2,2,10,7,5,-5,6,-9,7,-8,2,-3,-10,8,-9,-4,1,-3,4,-3,9,-1,1,-5,-3,-1,-3,-1,-1,10,3,-1,10,5,7,4,-6,-10,8,-5,-10,-7,-3], dtype = "uint32")#candidate|15754|(2016,)|const|uint32
call_15752 = relay.TupleGetItem(func_436_call(relay.reshape(var_15753.astype('uint32'), [16, 1, 9]), relay.reshape(const_15754.astype('uint32'), [16, 14, 9]), ), 0)
call_15755 = relay.TupleGetItem(func_440_call(relay.reshape(var_15753.astype('uint32'), [16, 1, 9]), relay.reshape(const_15754.astype('uint32'), [16, 14, 9]), ), 0)
func_14317_call = mod.get_global_var('func_14317')
func_14320_call = mutated_mod.get_global_var('func_14320')
var_15769 = relay.var("var_15769", dtype = "bool", shape = (40,))#candidate|15769|(40,)|var|bool
call_15768 = relay.TupleGetItem(func_14317_call(relay.reshape(var_15769.astype('bool'), [1, 40])), 4)
call_15770 = relay.TupleGetItem(func_14320_call(relay.reshape(var_15769.astype('bool'), [1, 40])), 4)
output = relay.Tuple([call_15746,call_15752,var_15753,const_15754,call_15768,var_15769,])
output2 = relay.Tuple([call_15747,call_15755,var_15753,const_15754,call_15770,var_15769,])
func_15780 = relay.Function([var_15753,var_15769,], output)
mod['func_15780'] = func_15780
mod = relay.transform.InferType()(mod)
var_15781 = relay.var("var_15781", dtype = "uint32", shape = (144,))#candidate|15781|(144,)|var|uint32
var_15782 = relay.var("var_15782", dtype = "bool", shape = (40,))#candidate|15782|(40,)|var|bool
output = func_15780(var_15781,var_15782,)
func_15783 = relay.Function([var_15781,var_15782,], output)
mutated_mod['func_15783'] = func_15783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9349_call = mod.get_global_var('func_9349')
func_9350_call = mutated_mod.get_global_var('func_9350')
call_15899 = relay.TupleGetItem(func_9349_call(), 2)
call_15900 = relay.TupleGetItem(func_9350_call(), 2)
func_9484_call = mod.get_global_var('func_9484')
func_9485_call = mutated_mod.get_global_var('func_9485')
call_15909 = relay.TupleGetItem(func_9484_call(), 0)
call_15910 = relay.TupleGetItem(func_9485_call(), 0)
output = relay.Tuple([call_15899,call_15909,])
output2 = relay.Tuple([call_15900,call_15910,])
func_15925 = relay.Function([], output)
mod['func_15925'] = func_15925
mod = relay.transform.InferType()(mod)
output = func_15925()
func_15926 = relay.Function([], output)
mutated_mod['func_15926'] = func_15926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13236_call = mod.get_global_var('func_13236')
func_13238_call = mutated_mod.get_global_var('func_13238')
call_16047 = relay.TupleGetItem(func_13236_call(), 0)
call_16048 = relay.TupleGetItem(func_13238_call(), 0)
func_12378_call = mod.get_global_var('func_12378')
func_12381_call = mutated_mod.get_global_var('func_12381')
var_16056 = relay.var("var_16056", dtype = "float32", shape = (1365,))#candidate|16056|(1365,)|var|float32
call_16055 = relay.TupleGetItem(func_12378_call(relay.reshape(var_16056.astype('float32'), [455, 3]), relay.reshape(var_16056.astype('float32'), [455, 3]), ), 0)
call_16057 = relay.TupleGetItem(func_12381_call(relay.reshape(var_16056.astype('float32'), [455, 3]), relay.reshape(var_16056.astype('float32'), [455, 3]), ), 0)
output = relay.Tuple([call_16047,call_16055,var_16056,])
output2 = relay.Tuple([call_16048,call_16057,var_16056,])
func_16074 = relay.Function([var_16056,], output)
mod['func_16074'] = func_16074
mod = relay.transform.InferType()(mod)
mutated_mod['func_16074'] = func_16074
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16075 = relay.var("var_16075", dtype = "float32", shape = (1365,))#candidate|16075|(1365,)|var|float32
func_16074_call = mutated_mod.get_global_var('func_16074')
call_16076 = func_16074_call(var_16075)
output = call_16076
func_16077 = relay.Function([var_16075], output)
mutated_mod['func_16077'] = func_16077
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16118 = relay.var("var_16118", dtype = "int32", shape = (14, 5, 16))#candidate|16118|(14, 5, 16)|var|int32
var_16119 = relay.var("var_16119", dtype = "int32", shape = (14, 5, 16))#candidate|16119|(14, 5, 16)|var|int32
bop_16120 = relay.greater(var_16118.astype('bool'), relay.reshape(var_16119.astype('bool'), relay.shape_of(var_16118))) # shape=(14, 5, 16)
output = relay.Tuple([bop_16120,])
output2 = relay.Tuple([bop_16120,])
func_16129 = relay.Function([var_16118,var_16119,], output)
mod['func_16129'] = func_16129
mod = relay.transform.InferType()(mod)
var_16130 = relay.var("var_16130", dtype = "int32", shape = (14, 5, 16))#candidate|16130|(14, 5, 16)|var|int32
var_16131 = relay.var("var_16131", dtype = "int32", shape = (14, 5, 16))#candidate|16131|(14, 5, 16)|var|int32
output = func_16129(var_16130,var_16131,)
func_16132 = relay.Function([var_16130,var_16131,], output)
mutated_mod['func_16132'] = func_16132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15468_call = mod.get_global_var('func_15468')
func_15469_call = mutated_mod.get_global_var('func_15469')
call_16154 = relay.TupleGetItem(func_15468_call(), 0)
call_16155 = relay.TupleGetItem(func_15469_call(), 0)
func_2825_call = mod.get_global_var('func_2825')
func_2827_call = mutated_mod.get_global_var('func_2827')
const_16157 = relay.constdtype = "float64")#candidate|16157|(132, 12)|const|float64
call_16156 = relay.TupleGetItem(func_2825_call(relay.reshape(const_16157.astype('float64'), [16, 11, 9])), 0)
call_16158 = relay.TupleGetItem(func_2827_call(relay.reshape(const_16157.astype('float64'), [16, 11, 9])), 0)
var_16171 = relay.var("var_16171", dtype = "float64", shape = (132, 12))#candidate|16171|(132, 12)|var|float64
bop_16172 = relay.bitwise_xor(const_16157.astype('int32'), relay.reshape(var_16171.astype('int32'), relay.shape_of(const_16157))) # shape=(132, 12)
output = relay.Tuple([call_16154,call_16156,bop_16172,])
output2 = relay.Tuple([call_16155,call_16158,bop_16172,])
func_16181 = relay.Function([var_16171,], output)
mod['func_16181'] = func_16181
mod = relay.transform.InferType()(mod)
var_16182 = relay.var("var_16182", dtype = "float64", shape = (132, 12))#candidate|16182|(132, 12)|var|float64
output = func_16181(var_16182)
func_16183 = relay.Function([var_16182], output)
mutated_mod['func_16183'] = func_16183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14843_call = mod.get_global_var('func_14843')
func_14845_call = mutated_mod.get_global_var('func_14845')
call_16205 = relay.TupleGetItem(func_14843_call(), 0)
call_16206 = relay.TupleGetItem(func_14845_call(), 0)
func_9349_call = mod.get_global_var('func_9349')
func_9350_call = mutated_mod.get_global_var('func_9350')
call_16210 = relay.TupleGetItem(func_9349_call(), 2)
call_16211 = relay.TupleGetItem(func_9350_call(), 2)
func_8481_call = mod.get_global_var('func_8481')
func_8484_call = mutated_mod.get_global_var('func_8484')
const_16240 = relay.const([-6.469224,-8.743306,4.626288,6.170785,6.165435,-2.050065,3.909610,5.677655,-2.031809,9.855182,-5.296742,7.909251,9.297711,9.473953,4.920294,-3.947228,-2.023641,6.183361,4.654518,-0.859758,-2.526535,-9.901367,-0.019255,8.844486,2.818351,3.676312,-9.809766,6.483274,9.918365,-9.326451,6.756986,3.336253,-9.243865,5.799905,0.960014,-1.886272,-2.327309,7.794034,3.898282,3.479444,-1.261925,-8.853651,5.092296,-2.808137,2.927573,8.391539,-1.048555,-7.185137,5.399609,-4.267290,9.631493,1.640657,0.184639,-7.615240,6.157326,2.456120,4.210348,-8.765661,8.077109,0.103078,-0.976091,6.424134,5.198026,8.545919,5.856668,0.855282,-2.500459,-2.263872,-8.024507,-7.376928,4.820259,9.247248,-9.067263,9.502671,-2.163217,-3.789612,-0.391896,2.379011,4.697129,-4.207482,1.595781,4.625454,-5.927879,6.327987,-5.892388,1.931173,-1.861545,-7.828641,-5.298446,-4.756946,7.260424,3.375362,0.876241,5.878860,7.710791,0.447737,-9.860950,9.606682,0.082050,9.639692,-9.848881,0.286731,9.184298,8.666819,6.069219,-2.332714,-7.130119,-5.751555,0.899041,-1.861604,-2.857828,8.994119,-4.554020,4.214532,0.005397,-8.056031,9.365986,-9.813613,1.491490,2.332877,-6.125098,9.900108,4.950609,-6.075235,-1.081801,-3.366865,-7.428468,8.733863,-6.742920,-0.765510,9.815528,6.218271,-4.508039,4.297778,-2.661005,7.518653,-9.065708,1.988982,-6.293546,-8.120311,5.616880,6.545028,-3.791123,-3.871597,-5.972119,7.406381,6.102987,-0.815922,-6.468742,-6.700135,-5.939373,5.083218,-2.717765,4.926647,-9.229279,0.733013,-0.651052,-4.689235,1.910055,7.520049,2.718057,1.102423,5.441046,3.224993,9.885334,-2.489406,2.134018,2.216963,1.131837,-8.261490,-6.095656,6.570659,0.049355,-6.745476,-8.820788,-4.401441,-6.287530,5.384243,1.026613,6.596975,-5.534807,7.215295,-8.483086,9.805572,5.459522,7.887948,-0.230934,-2.248906,-0.528380,-6.873563,-0.718463,4.466313,5.966617,-1.147643,2.302008,1.098378,-3.672680,5.247601,9.668345,-6.888909,-8.001900,3.374295,-2.453458,-4.513273,-7.997703,1.308977,4.258748,4.923638,0.339759,-6.654641,3.705625,-2.486174,-9.035108,-1.769914,6.546568,-1.137953,3.074646,-5.643779,7.268581,-3.717371,8.050120,-6.496828,-2.692425,6.225026,3.217375,-8.479468,-8.424078,-4.024163,-6.515233,-4.958466,9.191611,-5.248593,-4.272103,-3.139361,1.764581,6.888220,1.541289,-0.722211,6.650626,4.275516,6.758973,-9.486176,3.103360,-9.771475,6.234703,7.337038,0.315775,3.313575,-2.356081,0.334956,5.483051,-7.678067,-8.637428,-4.146049,7.901743,-0.505419,-8.112914,-2.497285,-5.400717,2.352656,1.956928,-0.243607,-4.101626,6.287381,-9.099535,3.278451,8.339470,-0.226109,-8.410523,-9.308220,-1.353868,-3.902313,9.068146,-4.018989,6.967990,3.558761,-0.343419,1.982448,-0.472644,0.498098,1.063558,-9.199509,3.246354,-9.024078,8.542767,5.236060,4.513232,-1.034830,-5.365691,-0.958588,3.319167,-8.413203,-9.550560,-5.589889,-9.474851,2.630899,-0.097055,9.598719,-9.496122,8.592160,-4.723868,8.635301,-1.481072,-1.241142,5.886038,-3.530591,-4.208835,-8.339656,-4.771831,5.004834,1.605711,-4.567832,-8.701989,9.133776,2.098482,4.247322,0.240599,-8.456561,-2.714114,-6.246267,3.762484,-7.102851,7.208014,-6.582598,-7.199767,1.762494,-5.517267,6.031478,1.173791,4.768628,-9.541489,-7.478775,-4.540761,7.752065,9.220453,-8.722137,1.942522,-9.996299,7.390369,-4.464912,5.657598,3.997095,-2.578975,-9.132993,8.175494,-9.676982,-2.252708,3.188538,6.909710,-0.417256,-1.690418,-4.619880,5.943768,3.843138,2.276137,-9.413898,8.417156,3.036521,7.018419,4.973212,5.341407,-2.070468,-5.085642,-3.580764,-7.810559,-4.383279,3.963967,-9.234645,4.923231,-6.343483,-1.845244,8.879740,-0.199394,2.010709,3.613348,6.548214,-0.968234,-9.438243,9.227090,9.227455,5.027323,9.846062,-9.757370,-1.633035,2.294012,-3.049003,5.920582,8.765313,-5.670736,2.231307,6.596638,7.273321,-3.924053,-7.465595,-0.811297,-6.259103,2.500752,8.655977,6.069679,6.003570,-0.234377,-4.774537,-8.329076,4.040588,-4.878946,-3.704742,3.208836,-7.986654,6.236735,-8.526393,-9.356038,-9.945029,-1.263077,7.154553,6.437736,-6.342185,-9.409323,2.492361,-2.480908,-9.144646,-2.363001,-1.806872,-3.029322,0.396099,6.005058,5.863972,-3.329921,2.622126,9.258110,6.344499,9.687369,-6.946267,-6.913844,-3.090561,7.228288,-8.851914,7.452951,0.346966,9.231775,-9.393232,-0.511400,-1.141355,8.608618,4.559314,-8.618847,2.791568,-1.622719,7.235599,5.113479,7.183485,-2.322548,-5.414047,-0.603449,3.494483,0.858305,-7.804038,-9.931147,-1.698564,-8.658589,-3.688149,-0.629068,9.191241,-9.682636,-8.766327,-3.417210,-1.031973,7.307070,9.792018,-8.453604,0.503965,-1.480424,-7.995783,-2.227032,-9.152506,-1.584468,3.574538,-4.628119,-8.943893,4.903447,-8.045393,-6.583087,9.579610,-9.685556,-2.539115,4.639428,-8.797469,0.559414,-4.703665,3.494419,0.479580,-5.805424,4.050740,9.096161,4.782079,-7.770832,-9.339292,-4.218297,-9.981656,-8.445249,3.166527,-8.287209,9.484860,-9.536789,3.682559,-1.828911,-8.148635,9.218727,9.166704,9.052524,7.474723,5.612717,-9.358222,9.900629,-9.403835,4.809962,-8.285396,0.710437,-1.679568,4.283062,3.715491,-7.707513,-2.946873,8.243101,-7.898095,-0.320839,-7.679742,6.131455,4.204333,7.179777,8.206486,-8.418487,-5.730533,4.331868,0.482576,-9.264826,6.789629,-3.313022,-8.592597,9.967185,-8.465696,2.591595,2.364031,-5.373891,9.734558,-1.615613,-2.080173,-9.851338,-3.581687,0.533122,1.184449,5.571087,-5.930684,-3.458987,6.633065,1.500226,-5.513106,8.994035,-2.030792,-1.354262,1.653376,-3.217666,2.045207,5.710090,-7.037005,-4.147122,-9.914319,-5.390217,0.165023,-6.708981,3.079206,3.129902,-6.568294,3.300907,-8.744508,-4.951166,3.113280,6.010703,-6.650330,-1.712518,-6.702751,-0.474135,-0.143571,3.483572,1.121363,6.276721,-7.250441,-9.446198,4.555150,6.269818,-3.155375,0.547886,-9.249869,-6.073627,9.364985,8.776131,6.255223,2.244511,1.474304,-9.239234,-6.161453,0.127970,-4.068999,8.437315,7.105377,4.096571,-9.863114,7.674808,6.904744,4.533054,3.143205,-5.228149,-4.652753,-7.726056,8.993897,8.942307,-3.969376,-8.131391,-5.655464,-8.770877,-4.559132,7.421489,1.941296,2.031381,6.680277,7.492970,8.588800,0.996656,7.098402,6.302667,-7.707553,-3.069020,8.783743,4.162129,-3.688523,-8.055840,3.720128,-0.953673,-5.531154,-2.439540,-8.230065,-1.923881,7.836577,-6.732574,-2.433666,6.202021,-9.938632,5.561625,-1.154492,0.890204,9.269069,4.445763,-8.681599,4.196351,9.843348,-4.726037,1.216132,-0.145078,-1.515514,-7.469915,-1.567172,-3.126671,8.852776,0.989118,-6.998007,9.575019,-3.025387,1.065941,-6.305616,4.347748,-7.556774,4.944949,4.229317,-4.305962,-9.918818,-2.717994,6.771244,8.723281,-2.844218,-1.009764,-4.514979,-3.424112,4.412126,2.229884,-4.904685,2.139788,-3.310622,1.334220,-4.465810,0.944064,-6.875239,-5.175570,-5.048678,-9.214058,-8.574997,-0.159931,-7.095899,2.819956,-6.423484,4.205568,8.176020,0.266239,-8.413356,2.700599,-0.081325,8.422136,-9.053568,-6.292598,-9.967897,-3.354707,-0.520442,6.564328,5.531686,-5.122466,8.070808,3.371363,-6.526149,-2.316735,1.452906,-7.849825,-8.852174], dtype = "float64")#candidate|16240|(720,)|const|float64
call_16239 = relay.TupleGetItem(func_8481_call(relay.reshape(const_16240.astype('float64'), [720,])), 2)
call_16241 = relay.TupleGetItem(func_8484_call(relay.reshape(const_16240.astype('float64'), [720,])), 2)
func_15587_call = mod.get_global_var('func_15587')
func_15591_call = mutated_mod.get_global_var('func_15591')
const_16254 = relay.const([7,1,4,5,10,-5,5,-4,-7,3,8,-2,8,-2,-1,-1,6,10,-3,-7,-6,-3,-2,-5,7,-3,-1,-6,4,5,-6,4,10,1,8,-8,2,-9,-10,7,2,4,4,-2,9,-4,4,8,-1,-9,7,-7,-9,-5,-1,-6,-10,-6,-10,5,-6,6,-8,-3,-1,1,-8,-7,5,7,4,-8,-6,1,5,-7,8,8,-6,-8,-3,-7,7,9,-7,7,10,6,-2,-3,-6,5,-4,1,-3,-8,-5,-9,-10,6,5,-9,-1,-2,-1,-9,5,-10,-6,-10,-9,7,-5,8,-5,3,8,-4,6,-1,10,5,-3,-4,-7,9,-5,9,3,7,4,5,-3,-2,-6,5,2,-3,4,-5,4,-6,10,-8,5,-8,-5,-10,5,-7,-6,9,2,-2,-9,-7,10,-1,9,1,5,2,4,8,5,-10,-8,8,1,6,6,3,7,6,3,1,-9,-10,6,-4,-3,-3,-5,3,-2,6,-2,-5,4,4,-9,7,-9,-10,-5,7,9,1,2,10,2,-1,-8,5,6,-1,-6,2,7,10,6,-2,-1,9,-8,5,-8,6,3,-7,-1,-5,-9,2,-8,-8,4,-9,4,6,10,3,10,-1,-1,3,1,10,-6,5,-7,-8,4,3,7,9,-5,-5,-2,-9,7,6,1,-7,6,-2,-7,-3,-10,-9,8,-6,2,7,8,-8,9,2,-8,8,2,-9,10,10,-8,9,-10,-10,-6,8,-2,-8,10,10,10,-4,-8,9,-4,-8,-9,10,-1,2,7,9,8,-10,-9,6,8,10,-2,-4,10,-9,-6,-10,9,-2,2,6,1,8,-6,-1,-4,-2,2,5,5,-2,-4,10,4,10,5,6,9,10,-8,-4,2,3,10,-5,-3,-8,1,8,1,-1,-1,-4,1,-10,5,-5,7,-10,-7,4,3,-5,-3,10,-1,10,-8,-6,10,-1,-9,-1,-4,5,-5,-1,4,-5,-9,9,-5,-3,7,1,-5,-2,9,-1,4,6,7,-2,-1,6,-1,9,-7,-9,2,-10,2,-9,7,6,6,-3,-9,-3,-1,2,5,-9,6,7,-6,4,10,1,-5,-1,10,3,-10,-4,7,-4,-9,-7,1,-2,-10,6,-10,-7,7,6,-3,-9,-7,-5,-8,7,4,-4,-5,-1,-3,-6,8,-9,-3,-2,-6,-9,-3,7,5,-3,-9,3,1,10,-3,-10,10,-5,6,9,-8,7,5,5,10,-9,4,3,-8,-1,9,-3,3,-2,-5,3,9,5,5,-4,-9,-4,-4,8,1,-6,-3,9,-7,4,-2,-5,8,5,-3,8,1,-5,-8,9,-4,-10,-6,-4,-10,4,7,4,-3,-7,-7,8,-7,-3,8,6,8,1,-7,-6,-5,-10,4,-6,-1,1,9,6,-2,3,-2,2,-7,6,9,-2,6,7,-5,5], dtype = "uint32")#candidate|16254|(540,)|const|uint32
const_16255 = relay.const([6,5,4,-10,7,-7,5,-5,-7,-5,-9,10,9,8,-3,-1,-2,10,4,-2,5,-4,-3,-3,1,1,9,7,-9,5,1,1,-10,9,3,7,-3,8,9,-6,1,2,1,9,4,3,10,1,7,6,-3,9,5,2,1,6,-7,2,-8,9,-7,-9,8,-6,10,-6,4,-9,-5,5,-10,7,-9,-5,-2,-1,9,-3,-2,4,1,-4,-5,8,-5,3,-1,-3,9,-9,4,-9,4,2,1,7,-3,-8,6,-8,8,4,-4,-10,-5,-4,-1,-4,5,10,-1,9,-7,-2,-3,-4,4,10,7,2,3,2,1,10,3,3,6,-8,10,-6,2,6,9,7,8,-9,7,4,9,-5,3,-4,1,1,-4,6,10,4,-8,7,-10,8,6,-5,-7,7,10,8,-5,-5,-10,5,-3,-9,-9,8,1,-7,7,3,-4,-5,-4,-10,-3,-8,-5,3,1,8,8,-7,1,9,-8,3,5,-8,10,9,-2,6,-9,3,1,-8,-7,-10,-1,-6,3,10,-7,8,8,-1,-4,6,-4,-3,-2,5,-8,-8,4,-5,-5,-5,-5,10,-2,-2,5,-10,-8,-5,-4,10,5,-10,-1,-8,-1,-7,-7,10,7,4,3,-3,6,1,-10,1,-8,6,5,-6,-6,5,-9,3,-8,-9,2,1,-10,10,-5,7,4,-5,-7,7,3,9,8,9,8,6,10,1,-2,-3,-4,4,-2,-8,9,2,-9,5,2,3,4,1,-7,-7,3,-9,8,6,-2,1,-4,-5,-4,10,8,6,-5,7,9,-2,-6,1,4,-6,-6,10,-9,-2,-5,9,-8,-5,-1,-4,10,5,8,-10,5,-1,-2,-8,-3,-4,-3,-4,-7,3,-5,8,-4,9,-9,6,-8,3,-7,-3,-1,1,-9,4,-7,-5,5,-6,-6,-3,-8,9,8,-6,-4,5,5,1,2,3,4,2,9,8,-6,10,-2,10,10,-2,4,-2,-5,6,-10,-9,-4,4,8,9,-5,-8,8], dtype = "int64")#candidate|16255|(385,)|const|int64
call_16253 = relay.TupleGetItem(func_15587_call(relay.reshape(const_16254.astype('uint32'), [6, 6, 15]), relay.reshape(const_16255.astype('int64'), [385,]), ), 1)
call_16256 = relay.TupleGetItem(func_15591_call(relay.reshape(const_16254.astype('uint32'), [6, 6, 15]), relay.reshape(const_16255.astype('int64'), [385,]), ), 1)
func_5163_call = mod.get_global_var('func_5163')
func_5166_call = mutated_mod.get_global_var('func_5166')
const_16258 = relay.const([True,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,False,True,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,False,False,True,True,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,True,True,True,False,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,False,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,False,True,True,True,False], dtype = "bool")#candidate|16258|(220,)|const|bool
call_16257 = relay.TupleGetItem(func_5163_call(relay.reshape(const_16258.astype('bool'), [10, 11, 2]), relay.reshape(call_16210.astype('float64'), [14,]), ), 2)
call_16259 = relay.TupleGetItem(func_5166_call(relay.reshape(const_16258.astype('bool'), [10, 11, 2]), relay.reshape(call_16210.astype('float64'), [14,]), ), 2)
output = relay.Tuple([call_16205,call_16210,call_16239,const_16240,call_16253,const_16254,const_16255,call_16257,const_16258,])
output2 = relay.Tuple([call_16206,call_16211,call_16241,const_16240,call_16256,const_16254,const_16255,call_16259,const_16258,])
func_16261 = relay.Function([], output)
mod['func_16261'] = func_16261
mod = relay.transform.InferType()(mod)
mutated_mod['func_16261'] = func_16261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16261_call = mutated_mod.get_global_var('func_16261')
call_16262 = func_16261_call()
output = call_16262
func_16263 = relay.Function([], output)
mutated_mod['func_16263'] = func_16263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11319_call = mod.get_global_var('func_11319')
func_11320_call = mutated_mod.get_global_var('func_11320')
call_16325 = relay.TupleGetItem(func_11319_call(), 1)
call_16326 = relay.TupleGetItem(func_11320_call(), 1)
output = call_16325
output2 = call_16326
func_16329 = relay.Function([], output)
mod['func_16329'] = func_16329
mod = relay.transform.InferType()(mod)
output = func_16329()
func_16330 = relay.Function([], output)
mutated_mod['func_16330'] = func_16330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10747_call = mod.get_global_var('func_10747')
func_10749_call = mutated_mod.get_global_var('func_10749')
call_16331 = relay.TupleGetItem(func_10747_call(), 0)
call_16332 = relay.TupleGetItem(func_10749_call(), 0)
output = call_16331
output2 = call_16332
func_16340 = relay.Function([], output)
mod['func_16340'] = func_16340
mod = relay.transform.InferType()(mod)
output = func_16340()
func_16341 = relay.Function([], output)
mutated_mod['func_16341'] = func_16341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12696_call = mod.get_global_var('func_12696')
func_12697_call = mutated_mod.get_global_var('func_12697')
call_16345 = relay.TupleGetItem(func_12696_call(), 1)
call_16346 = relay.TupleGetItem(func_12697_call(), 1)
output = call_16345
output2 = call_16346
func_16370 = relay.Function([], output)
mod['func_16370'] = func_16370
mod = relay.transform.InferType()(mod)
output = func_16370()
func_16371 = relay.Function([], output)
mutated_mod['func_16371'] = func_16371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10381_call = mod.get_global_var('func_10381')
func_10383_call = mutated_mod.get_global_var('func_10383')
call_16399 = relay.TupleGetItem(func_10381_call(), 1)
call_16400 = relay.TupleGetItem(func_10383_call(), 1)
output = call_16399
output2 = call_16400
func_16403 = relay.Function([], output)
mod['func_16403'] = func_16403
mod = relay.transform.InferType()(mod)
output = func_16403()
func_16404 = relay.Function([], output)
mutated_mod['func_16404'] = func_16404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14829_call = mod.get_global_var('func_14829')
func_14830_call = mutated_mod.get_global_var('func_14830')
call_16453 = relay.TupleGetItem(func_14829_call(), 0)
call_16454 = relay.TupleGetItem(func_14830_call(), 0)
func_14908_call = mod.get_global_var('func_14908')
func_14909_call = mutated_mod.get_global_var('func_14909')
call_16456 = relay.TupleGetItem(func_14908_call(), 0)
call_16457 = relay.TupleGetItem(func_14909_call(), 0)
output = relay.Tuple([call_16453,call_16456,])
output2 = relay.Tuple([call_16454,call_16457,])
func_16461 = relay.Function([], output)
mod['func_16461'] = func_16461
mod = relay.transform.InferType()(mod)
mutated_mod['func_16461'] = func_16461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16461_call = mutated_mod.get_global_var('func_16461')
call_16462 = func_16461_call()
output = call_16462
func_16463 = relay.Function([], output)
mutated_mod['func_16463'] = func_16463
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16566 = relay.var("var_16566", dtype = "float32", shape = (14, 5, 9))#candidate|16566|(14, 5, 9)|var|float32
uop_16567 = relay.tan(var_16566.astype('float32')) # shape=(14, 5, 9)
output = uop_16567
output2 = uop_16567
func_16571 = relay.Function([var_16566,], output)
mod['func_16571'] = func_16571
mod = relay.transform.InferType()(mod)
var_16572 = relay.var("var_16572", dtype = "float32", shape = (14, 5, 9))#candidate|16572|(14, 5, 9)|var|float32
output = func_16571(var_16572)
func_16573 = relay.Function([var_16572], output)
mutated_mod['func_16573'] = func_16573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13609_call = mod.get_global_var('func_13609')
func_13611_call = mutated_mod.get_global_var('func_13611')
call_16586 = func_13609_call()
call_16587 = func_13609_call()
output = call_16586
output2 = call_16587
func_16588 = relay.Function([], output)
mod['func_16588'] = func_16588
mod = relay.transform.InferType()(mod)
output = func_16588()
func_16589 = relay.Function([], output)
mutated_mod['func_16589'] = func_16589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15202_call = mod.get_global_var('func_15202')
func_15203_call = mutated_mod.get_global_var('func_15203')
call_16631 = relay.TupleGetItem(func_15202_call(), 0)
call_16632 = relay.TupleGetItem(func_15203_call(), 0)
func_9868_call = mod.get_global_var('func_9868')
func_9869_call = mutated_mod.get_global_var('func_9869')
call_16633 = relay.TupleGetItem(func_9868_call(), 1)
call_16634 = relay.TupleGetItem(func_9869_call(), 1)
output = relay.Tuple([call_16631,call_16633,])
output2 = relay.Tuple([call_16632,call_16634,])
func_16638 = relay.Function([], output)
mod['func_16638'] = func_16638
mod = relay.transform.InferType()(mod)
mutated_mod['func_16638'] = func_16638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16638_call = mutated_mod.get_global_var('func_16638')
call_16639 = func_16638_call()
output = call_16639
func_16640 = relay.Function([], output)
mutated_mod['func_16640'] = func_16640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10443_call = mod.get_global_var('func_10443')
func_10445_call = mutated_mod.get_global_var('func_10445')
call_16659 = relay.TupleGetItem(func_10443_call(), 0)
call_16660 = relay.TupleGetItem(func_10445_call(), 0)
output = call_16659
output2 = call_16660
func_16689 = relay.Function([], output)
mod['func_16689'] = func_16689
mod = relay.transform.InferType()(mod)
output = func_16689()
func_16690 = relay.Function([], output)
mutated_mod['func_16690'] = func_16690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13609_call = mod.get_global_var('func_13609')
func_13611_call = mutated_mod.get_global_var('func_13611')
call_16760 = func_13609_call()
call_16761 = func_13609_call()
output = call_16760
output2 = call_16761
func_16763 = relay.Function([], output)
mod['func_16763'] = func_16763
mod = relay.transform.InferType()(mod)
mutated_mod['func_16763'] = func_16763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16763_call = mutated_mod.get_global_var('func_16763')
call_16764 = func_16763_call()
output = call_16764
func_16765 = relay.Function([], output)
mutated_mod['func_16765'] = func_16765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11162_call = mod.get_global_var('func_11162')
func_11164_call = mutated_mod.get_global_var('func_11164')
call_16769 = func_11162_call()
call_16770 = func_11162_call()
output = relay.Tuple([call_16769,])
output2 = relay.Tuple([call_16770,])
func_16771 = relay.Function([], output)
mod['func_16771'] = func_16771
mod = relay.transform.InferType()(mod)
output = func_16771()
func_16772 = relay.Function([], output)
mutated_mod['func_16772'] = func_16772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16370_call = mod.get_global_var('func_16370')
func_16371_call = mutated_mod.get_global_var('func_16371')
call_16849 = func_16370_call()
call_16850 = func_16370_call()
func_11162_call = mod.get_global_var('func_11162')
func_11164_call = mutated_mod.get_global_var('func_11164')
call_16885 = func_11162_call()
call_16886 = func_11162_call()
output = relay.Tuple([call_16849,call_16885,])
output2 = relay.Tuple([call_16850,call_16886,])
func_16887 = relay.Function([], output)
mod['func_16887'] = func_16887
mod = relay.transform.InferType()(mod)
output = func_16887()
func_16888 = relay.Function([], output)
mutated_mod['func_16888'] = func_16888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14908_call = mod.get_global_var('func_14908')
func_14909_call = mutated_mod.get_global_var('func_14909')
call_16892 = relay.TupleGetItem(func_14908_call(), 3)
call_16893 = relay.TupleGetItem(func_14909_call(), 3)
func_15449_call = mod.get_global_var('func_15449')
func_15451_call = mutated_mod.get_global_var('func_15451')
call_16904 = relay.TupleGetItem(func_15449_call(), 0)
call_16905 = relay.TupleGetItem(func_15451_call(), 0)
uop_16921 = relay.sigmoid(call_16904.astype('float64')) # shape=(16, 14, 9)
uop_16923 = relay.sigmoid(call_16905.astype('float64')) # shape=(16, 14, 9)
output = relay.Tuple([call_16892,uop_16921,])
output2 = relay.Tuple([call_16893,uop_16923,])
func_16926 = relay.Function([], output)
mod['func_16926'] = func_16926
mod = relay.transform.InferType()(mod)
mutated_mod['func_16926'] = func_16926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16926_call = mutated_mod.get_global_var('func_16926')
call_16927 = func_16926_call()
output = call_16927
func_16928 = relay.Function([], output)
mutated_mod['func_16928'] = func_16928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14494_call = mod.get_global_var('func_14494')
func_14495_call = mutated_mod.get_global_var('func_14495')
call_16929 = relay.TupleGetItem(func_14494_call(), 1)
call_16930 = relay.TupleGetItem(func_14495_call(), 1)
func_13236_call = mod.get_global_var('func_13236')
func_13238_call = mutated_mod.get_global_var('func_13238')
call_16934 = relay.TupleGetItem(func_13236_call(), 0)
call_16935 = relay.TupleGetItem(func_13238_call(), 0)
func_12174_call = mod.get_global_var('func_12174')
func_12175_call = mutated_mod.get_global_var('func_12175')
call_16940 = func_12174_call()
call_16941 = func_12174_call()
output = relay.Tuple([call_16929,call_16934,call_16940,])
output2 = relay.Tuple([call_16930,call_16935,call_16941,])
func_16949 = relay.Function([], output)
mod['func_16949'] = func_16949
mod = relay.transform.InferType()(mod)
mutated_mod['func_16949'] = func_16949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16949_call = mutated_mod.get_global_var('func_16949')
call_16950 = func_16949_call()
output = call_16950
func_16951 = relay.Function([], output)
mutated_mod['func_16951'] = func_16951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13004_call = mod.get_global_var('func_13004')
func_13005_call = mutated_mod.get_global_var('func_13005')
call_16954 = relay.TupleGetItem(func_13004_call(), 0)
call_16955 = relay.TupleGetItem(func_13005_call(), 0)
func_14655_call = mod.get_global_var('func_14655')
func_14658_call = mutated_mod.get_global_var('func_14658')
const_16961 = relay.const([[7,2,10,-10,8,9,7,8,-4,1,10,4,-5,8,-4,4,-10,-1,-10,3,4,9,-5,-7,1,4,-8,-3,3,2,-6,9,3,-6,9],[-2,-3,-4,9,9,9,-1,-10,-1,10,10,-10,-1,9,7,-9,2,-3,10,10,-1,-3,-8,-9,-5,2,4,-4,-4,-2,-10,-1,3,-1,-3],[-2,-1,-9,7,-10,6,8,4,4,-5,-1,7,9,4,-3,-2,3,2,-6,9,-3,-10,6,-5,3,9,8,6,8,-9,10,7,-7,-5,-10],[-9,-1,8,-4,-10,-4,1,-8,1,-8,8,6,-1,-6,7,3,3,-6,3,-3,-7,3,2,6,7,6,1,-3,-4,-1,7,9,-9,-10,-3],[5,-1,-7,-2,-8,6,-4,-5,-1,6,-2,-5,-2,3,5,4,-7,2,9,8,1,-1,-3,4,5,-6,-4,7,-5,7,-8,2,7,9,8],[-3,-1,5,-3,8,10,7,4,1,4,-9,-10,-8,-7,-3,4,3,4,-9,-9,-5,2,-5,5,6,-6,2,8,-3,6,-7,5,6,-9,4],[-4,9,2,2,1,-7,-3,-3,10,5,3,6,3,7,7,-10,-2,-6,-4,-2,-4,-4,-7,-7,4,-2,-5,4,10,-10,3,-9,10,9,-2],[10,9,5,2,4,-6,-4,-7,-1,-10,-8,-10,9,-2,3,-1,-2,-9,-10,-2,7,-3,1,9,-8,2,3,-3,-1,3,9,-8,-6,-1,-6],[-3,1,5,-7,-3,-3,-1,6,-9,8,-2,5,1,7,-8,-3,7,6,-7,6,7,4,8,-3,6,8,-10,7,4,3,6,-10,1,7,-6],[7,-4,3,-10,10,8,5,-1,-1,-6,-5,-10,7,3,-9,-9,-4,7,7,-2,3,-5,9,-1,-8,-3,-1,-2,-6,4,-3,2,-6,-5,-6],[9,6,-6,-7,5,5,-2,3,-7,-6,6,6,9,9,-4,-10,2,7,2,6,1,7,10,-7,1,-9,-5,7,6,9,-10,-5,6,2,-5]], dtype = "int64")#candidate|16961|(11, 35)|const|int64
call_16960 = relay.TupleGetItem(func_14655_call(relay.reshape(const_16961.astype('int64'), [385,])), 2)
call_16962 = relay.TupleGetItem(func_14658_call(relay.reshape(const_16961.astype('int64'), [385,])), 2)
func_11515_call = mod.get_global_var('func_11515')
func_11516_call = mutated_mod.get_global_var('func_11516')
call_16966 = relay.TupleGetItem(func_11515_call(), 1)
call_16967 = relay.TupleGetItem(func_11516_call(), 1)
output = relay.Tuple([call_16954,call_16960,const_16961,call_16966,])
output2 = relay.Tuple([call_16955,call_16962,const_16961,call_16967,])
func_16981 = relay.Function([], output)
mod['func_16981'] = func_16981
mod = relay.transform.InferType()(mod)
mutated_mod['func_16981'] = func_16981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16981_call = mutated_mod.get_global_var('func_16981')
call_16982 = func_16981_call()
output = call_16982
func_16983 = relay.Function([], output)
mutated_mod['func_16983'] = func_16983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11760_call = mod.get_global_var('func_11760')
func_11761_call = mutated_mod.get_global_var('func_11761')
call_16987 = relay.TupleGetItem(func_11760_call(), 0)
call_16988 = relay.TupleGetItem(func_11761_call(), 0)
func_12635_call = mod.get_global_var('func_12635')
func_12638_call = mutated_mod.get_global_var('func_12638')
var_17018 = relay.var("var_17018", dtype = "int32", shape = (1800,))#candidate|17018|(1800,)|var|int32
var_17019 = relay.var("var_17019", dtype = "uint16", shape = ())#candidate|17019|()|var|uint16
call_17017 = relay.TupleGetItem(func_12635_call(relay.reshape(var_17018.astype('int32'), [1800,]), relay.reshape(var_17019.astype('uint16'), []), ), 3)
call_17020 = relay.TupleGetItem(func_12638_call(relay.reshape(var_17018.astype('int32'), [1800,]), relay.reshape(var_17019.astype('uint16'), []), ), 3)
output = relay.Tuple([call_16987,call_17017,var_17018,var_17019,])
output2 = relay.Tuple([call_16988,call_17020,var_17018,var_17019,])
func_17022 = relay.Function([var_17018,var_17019,], output)
mod['func_17022'] = func_17022
mod = relay.transform.InferType()(mod)
mutated_mod['func_17022'] = func_17022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17022_call = mutated_mod.get_global_var('func_17022')
var_17024 = relay.var("var_17024", dtype = "int32", shape = (1800,))#candidate|17024|(1800,)|var|int32
var_17025 = relay.var("var_17025", dtype = "uint16", shape = ())#candidate|17025|()|var|uint16
call_17023 = func_17022_call(var_17024,var_17025,)
output = call_17023
func_17026 = relay.Function([var_17024,var_17025,], output)
mutated_mod['func_17026'] = func_17026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10998_call = mod.get_global_var('func_10998')
func_11000_call = mutated_mod.get_global_var('func_11000')
call_17040 = func_10998_call()
call_17041 = func_10998_call()
output = relay.Tuple([call_17040,])
output2 = relay.Tuple([call_17041,])
func_17047 = relay.Function([], output)
mod['func_17047'] = func_17047
mod = relay.transform.InferType()(mod)
mutated_mod['func_17047'] = func_17047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17047_call = mutated_mod.get_global_var('func_17047')
call_17048 = func_17047_call()
output = call_17048
func_17049 = relay.Function([], output)
mutated_mod['func_17049'] = func_17049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11706_call = mod.get_global_var('func_11706')
func_11707_call = mutated_mod.get_global_var('func_11707')
call_17052 = func_11706_call()
call_17053 = func_11706_call()
func_16926_call = mod.get_global_var('func_16926')
func_16928_call = mutated_mod.get_global_var('func_16928')
call_17081 = relay.TupleGetItem(func_16926_call(), 1)
call_17082 = relay.TupleGetItem(func_16928_call(), 1)
func_11656_call = mod.get_global_var('func_11656')
func_11657_call = mutated_mod.get_global_var('func_11657')
call_17098 = func_11656_call()
call_17099 = func_11656_call()
func_16771_call = mod.get_global_var('func_16771')
func_16772_call = mutated_mod.get_global_var('func_16772')
call_17107 = relay.TupleGetItem(func_16771_call(), 0)
call_17108 = relay.TupleGetItem(func_16772_call(), 0)
func_15385_call = mod.get_global_var('func_15385')
func_15386_call = mutated_mod.get_global_var('func_15386')
call_17109 = func_15385_call()
call_17110 = func_15385_call()
func_14039_call = mod.get_global_var('func_14039')
func_14041_call = mutated_mod.get_global_var('func_14041')
call_17138 = func_14039_call()
call_17139 = func_14039_call()
output = relay.Tuple([call_17052,call_17081,call_17098,call_17107,call_17109,call_17138,])
output2 = relay.Tuple([call_17053,call_17082,call_17099,call_17108,call_17110,call_17139,])
func_17164 = relay.Function([], output)
mod['func_17164'] = func_17164
mod = relay.transform.InferType()(mod)
mutated_mod['func_17164'] = func_17164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17164_call = mutated_mod.get_global_var('func_17164')
call_17165 = func_17164_call()
output = call_17165
func_17166 = relay.Function([], output)
mutated_mod['func_17166'] = func_17166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13810_call = mod.get_global_var('func_13810')
func_13811_call = mutated_mod.get_global_var('func_13811')
call_17222 = relay.TupleGetItem(func_13810_call(), 1)
call_17223 = relay.TupleGetItem(func_13811_call(), 1)
func_10779_call = mod.get_global_var('func_10779')
func_10781_call = mutated_mod.get_global_var('func_10781')
call_17229 = func_10779_call()
call_17230 = func_10779_call()
func_12840_call = mod.get_global_var('func_12840')
func_12842_call = mutated_mod.get_global_var('func_12842')
call_17235 = relay.TupleGetItem(func_12840_call(), 0)
call_17236 = relay.TupleGetItem(func_12842_call(), 0)
output = relay.Tuple([call_17222,call_17229,call_17235,])
output2 = relay.Tuple([call_17223,call_17230,call_17236,])
func_17244 = relay.Function([], output)
mod['func_17244'] = func_17244
mod = relay.transform.InferType()(mod)
mutated_mod['func_17244'] = func_17244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17244_call = mutated_mod.get_global_var('func_17244')
call_17245 = func_17244_call()
output = call_17245
func_17246 = relay.Function([], output)
mutated_mod['func_17246'] = func_17246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16340_call = mod.get_global_var('func_16340')
func_16341_call = mutated_mod.get_global_var('func_16341')
call_17283 = func_16340_call()
call_17284 = func_16340_call()
output = relay.Tuple([call_17283,])
output2 = relay.Tuple([call_17284,])
func_17293 = relay.Function([], output)
mod['func_17293'] = func_17293
mod = relay.transform.InferType()(mod)
output = func_17293()
func_17294 = relay.Function([], output)
mutated_mod['func_17294'] = func_17294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14209_call = mod.get_global_var('func_14209')
func_14211_call = mutated_mod.get_global_var('func_14211')
call_17350 = relay.TupleGetItem(func_14209_call(), 1)
call_17351 = relay.TupleGetItem(func_14211_call(), 1)
output = call_17350
output2 = call_17351
func_17376 = relay.Function([], output)
mod['func_17376'] = func_17376
mod = relay.transform.InferType()(mod)
output = func_17376()
func_17377 = relay.Function([], output)
mutated_mod['func_17377'] = func_17377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9567_call = mod.get_global_var('func_9567')
func_9568_call = mutated_mod.get_global_var('func_9568')
call_17402 = relay.TupleGetItem(func_9567_call(), 0)
call_17403 = relay.TupleGetItem(func_9568_call(), 0)
output = call_17402
output2 = call_17403
func_17414 = relay.Function([], output)
mod['func_17414'] = func_17414
mod = relay.transform.InferType()(mod)
mutated_mod['func_17414'] = func_17414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17414_call = mutated_mod.get_global_var('func_17414')
call_17415 = func_17414_call()
output = call_17415
func_17416 = relay.Function([], output)
mutated_mod['func_17416'] = func_17416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15620_call = mod.get_global_var('func_15620')
func_15622_call = mutated_mod.get_global_var('func_15622')
call_17422 = relay.TupleGetItem(func_15620_call(), 0)
call_17423 = relay.TupleGetItem(func_15622_call(), 0)
func_11973_call = mod.get_global_var('func_11973')
func_11976_call = mutated_mod.get_global_var('func_11976')
const_17425 = relay.const([[9.731700,3.543672,-1.231572,-4.294118,1.550856,2.798002,3.824059,-9.181108,-9.037968,-0.314373,-8.926184,8.819448,0.271098,9.106557,-7.517862,-0.225806,5.930306,5.496288,2.798558,-9.646711,-5.147481,-1.024444,-6.810242,8.364990,-9.986897,-2.825239,9.179941,1.731338,-5.099704,-3.439893,-1.455143,-0.812169,8.523485,-7.420369,-1.254525,3.101615,-9.002231,-6.943223,-5.966216,5.781590,0.075941,0.166235,8.128906,-9.308612,-5.189699,4.101801,2.192643,-8.214092,9.520417,-7.383654,1.617493,7.003132,1.886869,-6.222603,7.081596,-5.416803,6.928725,5.743294,-6.783118,-1.042846,-6.396041,-1.536395,-3.917822,-2.357419,2.459781,1.203167,3.117248,-2.970322,-9.300862,-9.073570,-6.854750,4.087747,2.388991,-5.893779,-6.286013,-4.653913,-4.142752,-8.850204,2.124008,4.438551,2.202980,-1.938477,4.962954,9.593400,1.638756,1.337426,-0.434911,-8.951415,6.900795,-7.226236,1.754351,-6.880524,7.536390,-8.490155,-7.455276,0.108297,-1.886489,-1.176216,-5.191630,-8.004044,8.397615,0.848175,-6.509698,6.303938,-0.827859,0.925454,-8.598776,-3.213618,-0.709568,2.867990,-4.701677,7.896390,-3.074886,-8.002980,7.649449,-0.342172,-8.257426,3.710822,6.217257,-0.872051,-8.935515,-4.715386,2.236377,-1.499708,7.908453,-1.617983,-9.007794,5.673284,0.220896,3.173845,-9.276756,-2.516126,2.741695,5.086150,-3.653906,-3.835653,9.062775,-1.161412,8.864372,-7.818607,-4.893206,-5.539200,-1.667626,8.898959,1.666439,5.028369,-3.108099,-7.117907,2.053465,1.346143,6.893532,-5.639070,-7.097685,-7.676420,1.998722,-2.516670,4.663389,-3.549545,-1.575831,-9.750024,-7.271907,8.591785,1.641648,-8.889760,1.646816,-1.547352,2.236185,1.009904,4.467167,-6.983164,0.115455,-2.674137,1.333715,-7.621883,-4.932815,-9.619486,-1.433663,-7.512925,9.852847,-4.350393,-9.071461,-7.838441,1.077332,3.918999,1.613860,7.655186,-8.797579,6.652682,-7.993386,-4.011562,-6.667067,4.298973,-6.921415,-7.069047,-9.003020,1.310330,-9.520791,2.762783,5.900266,-8.642554,-7.063866,3.676037,-1.483983,-2.149479,8.357920,6.889719,5.050938,-0.013987,-8.151284,-3.935832,-2.144244,1.055381,0.723041,-3.704636,9.846311,6.028994,6.346161,3.522183,7.432904,-1.736040,-6.448936,1.853522,4.905419,0.028126,-2.186111,-0.333726,2.634082,3.849389,-0.801405,-2.532604,3.969202,5.926770,-5.863815,-2.329740,6.794732,-3.334087,-1.203029,9.299373,-2.529997,-1.786397,-3.820423,2.692066,-4.446583,-4.531011,-2.885755,7.352689,-5.000596,-6.887146,1.330547,9.123400,-3.472615,-6.179482,3.706618,-5.476702,-2.800243,-5.298664,3.244758,6.626755,6.065190,8.137140,-3.503029,4.754256,9.777222,6.922379,-5.025515,9.935138,6.633155,7.750730,-4.352016,-0.518158,-8.415421,7.090342,-5.619940,-7.610540,0.857629,4.105342,-8.077010,-9.024298,8.452482,-5.517006,-0.864180,-3.141106,1.515186,-4.637358,7.883709,-0.919983,-6.362471,5.248066,-6.439241,-1.037202,1.442935,3.916321,-3.410782,-2.020386,-2.764487,5.134380,-1.824516,-4.615679,9.850772,5.947993,5.961026,7.881973,-5.002136,-6.620510,-5.311799,-5.737408,-0.769065,2.044266,9.683164,-6.833704,-7.756165,6.949372,3.243514,-6.826070,-9.139212,6.521588,1.112951,7.327778,-2.633540,7.673699,-7.439605,-8.628280,9.908330,6.236904,8.295813,-8.923979,2.334308,9.879410,0.666455,-7.249601,3.376737,7.184881,-9.063308,-8.590096,-6.129295,5.454697,4.737865,-8.998879,4.819312,-0.078176,4.719618,-3.112667,-5.084549,-6.924181,4.228545,9.884688,-2.290958,0.215498,-0.654730,0.369701,6.693800,3.781821,9.183442,-6.114774,-6.350006,8.011123,7.799238,-0.711750,1.626210,-5.706120,2.195576,-6.285302,-8.463954,-4.814340,1.277924,-1.475935,-0.023278,-1.194815,8.024096,-3.325909,7.218923,2.769583,9.748523,-4.661660,-1.606253,4.353953,-3.939539,-0.319305,-8.939717,6.163115,-7.855767,-6.049888,-2.259108,-2.493507,4.797241,6.543493,2.433077,-5.834415,-6.232360,4.765734,1.623515,6.795009,-0.352276,-6.629756,-6.354532,0.545067,9.695655,-1.707744,-5.360191,9.530203,3.863594,-0.965288,-0.355139,-2.324295,5.188282,7.679159,-8.868663,-8.876671,-5.362181,5.060705,8.656667,-8.081879,9.351694,-4.181729,6.529069,5.991121,-6.702182,9.864551,-2.212304,2.796335,-0.833971,-4.186473,9.027313,0.955815,-0.183065,4.561892,3.588612,-0.557654,-7.306672,-9.938545,5.834794,-7.199434,7.458995,-2.944628,7.373414,5.040061,-8.290794,5.740410,3.740229,-5.157127,4.600651,1.243975,3.101764,4.812083,-0.491245,3.286209,-0.489907,1.335510,-3.357852,6.317342,6.085709,4.903994,7.375886,-2.892567,9.448922,-9.357100,-0.065045,-6.415018,5.132182,4.675112,7.657544,3.552684,-3.801687,-0.461442,-5.787173,1.812469,-7.865180,-6.775121,4.472475,-7.283241,6.031983,9.685068,-6.700071,1.112408,-2.239150,4.186726,0.665113,8.368650,3.330912,-3.968523,2.651501,-1.802015,-4.675338,7.157054,7.069280,0.705518,-8.016200,-4.504807,-3.295935,7.895794,-9.219119,-5.057202,4.962487,6.863251,3.036556,6.427448,2.829774,5.072529,-6.117116,7.234184,-7.479114,-1.686726,-2.836527,-8.562269,-9.603891,9.182009,-1.670369,-4.163392,5.565782,3.374737,-9.805584,6.907694,-0.080915,6.092042,-3.067843,-2.242639,4.692143,7.702035,4.999892,-9.075839,9.846816,-5.633332,-0.503700,-9.363867,-2.940100,-2.680616,-3.854932,8.708859,-0.077613,6.333341,5.791822,-3.608857,-7.726452,-6.430439,9.352751,2.462713,-2.561066,-7.951682,-7.797640,-1.871230,-5.164024,7.279187,4.020674,9.904531,-7.281065,-8.428607,-2.156048,-9.853994,-3.762984,-6.480953,-0.526619,9.773914,6.114688,7.635222,-2.031159,2.598763,-2.395846,7.286271,9.667634,-1.506923,1.922997,7.649690,4.967382,-3.563417,5.735530,2.317416,-1.896205,-0.003330,-2.599149,4.467836,-5.892602,-0.154065,-1.543754,-4.093285,-5.976227,5.327308,1.135826,-8.343835,-1.947264,-9.926679,9.489994,3.675358,-0.433746,-8.615685,5.079351,0.172738,-0.033509,0.839124,8.733864,-8.784364,-0.965581,2.239761,-7.420930,-7.723422,-5.950101,-9.892130,-5.051008,6.413782,-6.012180,6.901670,-1.084802,4.085266,-6.126730,7.925212,-1.553273,-2.853026,7.907525,-7.779367,0.271276,-0.052864,1.261025,5.157443,3.024475,4.258527,-8.229542,1.050336,1.423733,9.221740,4.772179,-2.504983,-8.697789,-6.497908,-2.468722,-4.014351]], dtype = "float64")#candidate|17425|(1, 624)|const|float64
const_17426 = relay.const([[-5.458725,-7.981381],[-5.998824,1.464148],[6.342507,-8.428540],[-4.835727,3.234219],[9.680115,0.381533],[4.012854,-6.189020],[5.656598,2.937454]], dtype = "float32")#candidate|17426|(7, 2)|const|float32
call_17424 = relay.TupleGetItem(func_11973_call(relay.reshape(const_17425.astype('float64'), [624,]), relay.reshape(const_17426.astype('float32'), [14, 1]), ), 1)
call_17427 = relay.TupleGetItem(func_11976_call(relay.reshape(const_17425.astype('float64'), [624,]), relay.reshape(const_17426.astype('float32'), [14, 1]), ), 1)
func_16261_call = mod.get_global_var('func_16261')
func_16263_call = mutated_mod.get_global_var('func_16263')
call_17437 = relay.TupleGetItem(func_16261_call(), 6)
call_17438 = relay.TupleGetItem(func_16263_call(), 6)
uop_17446 = relay.asinh(const_17425.astype('float32')) # shape=(1, 624)
output = relay.Tuple([call_17422,call_17424,const_17426,call_17437,uop_17446,])
output2 = relay.Tuple([call_17423,call_17427,const_17426,call_17438,uop_17446,])
func_17451 = relay.Function([], output)
mod['func_17451'] = func_17451
mod = relay.transform.InferType()(mod)
mutated_mod['func_17451'] = func_17451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17451_call = mutated_mod.get_global_var('func_17451')
call_17452 = func_17451_call()
output = call_17452
func_17453 = relay.Function([], output)
mutated_mod['func_17453'] = func_17453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15468_call = mod.get_global_var('func_15468')
func_15469_call = mutated_mod.get_global_var('func_15469')
call_17454 = relay.TupleGetItem(func_15468_call(), 1)
call_17455 = relay.TupleGetItem(func_15469_call(), 1)
func_436_call = mod.get_global_var('func_436')
func_440_call = mutated_mod.get_global_var('func_440')
var_17457 = relay.var("var_17457", dtype = "uint32", shape = (144,))#candidate|17457|(144,)|var|uint32
var_17458 = relay.var("var_17458", dtype = "uint32", shape = (2016, 1))#candidate|17458|(2016, 1)|var|uint32
call_17456 = relay.TupleGetItem(func_436_call(relay.reshape(var_17457.astype('uint32'), [16, 1, 9]), relay.reshape(var_17458.astype('uint32'), [16, 14, 9]), ), 0)
call_17459 = relay.TupleGetItem(func_440_call(relay.reshape(var_17457.astype('uint32'), [16, 1, 9]), relay.reshape(var_17458.astype('uint32'), [16, 14, 9]), ), 0)
bop_17461 = relay.bitwise_or(call_17454.astype('uint32'), var_17458.astype('uint32')) # shape=(2016, 378)
bop_17464 = relay.bitwise_or(call_17455.astype('uint32'), var_17458.astype('uint32')) # shape=(2016, 378)
bop_17476 = relay.left_shift(call_17454.astype('uint8'), var_17458.astype('uint8')) # shape=(2016, 378)
bop_17479 = relay.left_shift(call_17455.astype('uint8'), var_17458.astype('uint8')) # shape=(2016, 378)
var_17485 = relay.var("var_17485", dtype = "uint32", shape = (2016, 1))#candidate|17485|(2016, 1)|var|uint32
bop_17486 = relay.bitwise_or(var_17458.astype('uint64'), relay.reshape(var_17485.astype('uint64'), relay.shape_of(var_17458))) # shape=(2016, 1)
output = relay.Tuple([call_17456,var_17457,bop_17461,bop_17476,bop_17486,])
output2 = relay.Tuple([call_17459,var_17457,bop_17464,bop_17479,bop_17486,])
func_17499 = relay.Function([var_17457,var_17458,var_17485,], output)
mod['func_17499'] = func_17499
mod = relay.transform.InferType()(mod)
var_17500 = relay.var("var_17500", dtype = "uint32", shape = (144,))#candidate|17500|(144,)|var|uint32
var_17501 = relay.var("var_17501", dtype = "uint32", shape = (2016, 1))#candidate|17501|(2016, 1)|var|uint32
var_17502 = relay.var("var_17502", dtype = "uint32", shape = (2016, 1))#candidate|17502|(2016, 1)|var|uint32
output = func_17499(var_17500,var_17501,var_17502,)
func_17503 = relay.Function([var_17500,var_17501,var_17502,], output)
mutated_mod['func_17503'] = func_17503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14843_call = mod.get_global_var('func_14843')
func_14845_call = mutated_mod.get_global_var('func_14845')
call_17524 = relay.TupleGetItem(func_14843_call(), 0)
call_17525 = relay.TupleGetItem(func_14845_call(), 0)
output = relay.Tuple([call_17524,])
output2 = relay.Tuple([call_17525,])
func_17529 = relay.Function([], output)
mod['func_17529'] = func_17529
mod = relay.transform.InferType()(mod)
output = func_17529()
func_17530 = relay.Function([], output)
mutated_mod['func_17530'] = func_17530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10998_call = mod.get_global_var('func_10998')
func_11000_call = mutated_mod.get_global_var('func_11000')
call_17591 = func_10998_call()
call_17592 = func_10998_call()
output = relay.Tuple([call_17591,])
output2 = relay.Tuple([call_17592,])
func_17595 = relay.Function([], output)
mod['func_17595'] = func_17595
mod = relay.transform.InferType()(mod)
output = func_17595()
func_17596 = relay.Function([], output)
mutated_mod['func_17596'] = func_17596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11162_call = mod.get_global_var('func_11162')
func_11164_call = mutated_mod.get_global_var('func_11164')
call_17625 = func_11162_call()
call_17626 = func_11162_call()
func_9868_call = mod.get_global_var('func_9868')
func_9869_call = mutated_mod.get_global_var('func_9869')
call_17637 = relay.TupleGetItem(func_9868_call(), 0)
call_17638 = relay.TupleGetItem(func_9869_call(), 0)
output = relay.Tuple([call_17625,call_17637,])
output2 = relay.Tuple([call_17626,call_17638,])
func_17645 = relay.Function([], output)
mod['func_17645'] = func_17645
mod = relay.transform.InferType()(mod)
output = func_17645()
func_17646 = relay.Function([], output)
mutated_mod['func_17646'] = func_17646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15739_call = mod.get_global_var('func_15739')
func_15740_call = mutated_mod.get_global_var('func_15740')
call_17662 = relay.TupleGetItem(func_15739_call(), 0)
call_17663 = relay.TupleGetItem(func_15740_call(), 0)
var_17664 = relay.var("var_17664", dtype = "float32", shape = (64, 2))#candidate|17664|(64, 2)|var|float32
bop_17665 = relay.greater(call_17662.astype('bool'), relay.reshape(var_17664.astype('bool'), relay.shape_of(call_17662))) # shape=(64, 2)
bop_17668 = relay.greater(call_17663.astype('bool'), relay.reshape(var_17664.astype('bool'), relay.shape_of(call_17663))) # shape=(64, 2)
func_9776_call = mod.get_global_var('func_9776')
func_9777_call = mutated_mod.get_global_var('func_9777')
call_17678 = relay.TupleGetItem(func_9776_call(), 2)
call_17679 = relay.TupleGetItem(func_9777_call(), 2)
func_11760_call = mod.get_global_var('func_11760')
func_11761_call = mutated_mod.get_global_var('func_11761')
call_17681 = relay.TupleGetItem(func_11760_call(), 0)
call_17682 = relay.TupleGetItem(func_11761_call(), 0)
output = relay.Tuple([bop_17665,call_17678,call_17681,])
output2 = relay.Tuple([bop_17668,call_17679,call_17682,])
func_17683 = relay.Function([var_17664,], output)
mod['func_17683'] = func_17683
mod = relay.transform.InferType()(mod)
mutated_mod['func_17683'] = func_17683
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17684 = relay.var("var_17684", dtype = "float32", shape = (64, 2))#candidate|17684|(64, 2)|var|float32
func_17683_call = mutated_mod.get_global_var('func_17683')
call_17685 = func_17683_call(var_17684)
output = call_17685
func_17686 = relay.Function([var_17684], output)
mutated_mod['func_17686'] = func_17686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10443_call = mod.get_global_var('func_10443')
func_10445_call = mutated_mod.get_global_var('func_10445')
call_17699 = relay.TupleGetItem(func_10443_call(), 1)
call_17700 = relay.TupleGetItem(func_10445_call(), 1)
output = relay.Tuple([call_17699,])
output2 = relay.Tuple([call_17700,])
func_17703 = relay.Function([], output)
mod['func_17703'] = func_17703
mod = relay.transform.InferType()(mod)
output = func_17703()
func_17704 = relay.Function([], output)
mutated_mod['func_17704'] = func_17704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16403_call = mod.get_global_var('func_16403')
func_16404_call = mutated_mod.get_global_var('func_16404')
call_17714 = func_16403_call()
call_17715 = func_16403_call()
func_10443_call = mod.get_global_var('func_10443')
func_10445_call = mutated_mod.get_global_var('func_10445')
call_17730 = relay.TupleGetItem(func_10443_call(), 1)
call_17731 = relay.TupleGetItem(func_10445_call(), 1)
output = relay.Tuple([call_17714,call_17730,])
output2 = relay.Tuple([call_17715,call_17731,])
func_17757 = relay.Function([], output)
mod['func_17757'] = func_17757
mod = relay.transform.InferType()(mod)
output = func_17757()
func_17758 = relay.Function([], output)
mutated_mod['func_17758'] = func_17758
mutated_mod = relay.transform.InferType()(mutated_mod)
const_17800 = relay.const(8, dtype = "int16")#candidate|17800|()|const|int16
const_17801 = relay.const([[[-1,-10,3,-9,9,3,2,-3,-4],[5,8,5,10,4,6,-9,-6,-6],[-8,-3,-10,4,-8,10,5,9,9],[9,-5,5,2,10,2,6,1,-6]],[[-10,5,-9,-1,-2,10,-4,3,1],[3,-1,-1,7,6,1,-10,-4,10],[-10,8,1,5,6,-7,5,10,10],[-10,3,6,-8,6,9,-5,-6,3]],[[2,5,6,-5,-9,-9,-10,-6,7],[-6,6,6,7,8,-8,-1,1,-10],[-5,9,2,2,7,5,-2,8,3],[7,7,5,6,-6,1,3,-1,-1]],[[10,-6,-3,-10,2,-5,2,-8,5],[2,7,-10,6,-6,8,1,-9,5],[-8,9,1,-8,3,-1,7,-2,3],[-5,-7,-7,8,-1,5,-1,10,-6]],[[1,5,-9,-4,10,-5,8,-4,-10],[-10,-9,7,6,8,5,9,7,2],[8,4,-2,5,-8,-6,9,7,6],[3,-2,-10,-6,-5,-10,-9,-2,10]],[[-2,5,3,-8,-7,4,9,-7,-10],[-9,5,9,10,-6,3,-8,1,4],[-7,8,-7,9,-10,8,3,-6,3],[4,7,8,7,6,-1,2,3,4]],[[-2,8,9,-2,7,-1,-5,-4,6],[-4,-9,-1,-3,2,2,-7,-9,4],[5,2,-4,-10,9,-3,7,-10,-10],[-1,-3,-8,-9,9,2,-7,9,-6]],[[-2,4,-2,10,4,8,-10,-4,1],[10,-1,-7,-2,9,-4,6,3,9],[5,-5,-9,3,-1,4,3,2,-3],[-6,-5,-8,-9,-7,4,-6,-7,-10]],[[-3,8,1,5,-6,-5,-10,-5,5],[-6,-8,5,-2,1,-3,6,3,9],[7,-6,-3,-3,-4,-7,-4,1,5],[3,8,-7,-4,-6,-8,-9,-9,10]]], dtype = "int16")#candidate|17801|(9, 4, 9)|const|int16
bop_17802 = relay.equal(const_17800.astype('bool'), const_17801.astype('bool')) # shape=(9, 4, 9)
output = relay.Tuple([bop_17802,])
output2 = relay.Tuple([bop_17802,])
func_17805 = relay.Function([], output)
mod['func_17805'] = func_17805
mod = relay.transform.InferType()(mod)
output = func_17805()
func_17806 = relay.Function([], output)
mutated_mod['func_17806'] = func_17806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11941_call = mod.get_global_var('func_11941')
func_11943_call = mutated_mod.get_global_var('func_11943')
call_17878 = func_11941_call()
call_17879 = func_11941_call()
func_9658_call = mod.get_global_var('func_9658')
func_9661_call = mutated_mod.get_global_var('func_9661')
const_17924 = relay.const([[True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,False,False,False,False,False,True,True,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,False,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,True,True,True,True],[True,True,True,True,False,True,False,True,True,True,False,False,False,False,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,True,False,True,False,True,False,False,False,True,True,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True]], dtype = "bool")#candidate|17924|(2, 160)|const|bool
call_17923 = relay.TupleGetItem(func_9658_call(relay.reshape(const_17924.astype('bool'), [2, 160])), 2)
call_17925 = relay.TupleGetItem(func_9661_call(relay.reshape(const_17924.astype('bool'), [2, 160])), 2)
func_967_call = mod.get_global_var('func_967')
func_970_call = mutated_mod.get_global_var('func_970')
const_17937 = relay.const([-4,-2,6,6,4,-8,7,-8,-3,8,-1,8,8,6,-8,5,1,10,1,-5,7,4,7,2,7,7,4,4,3,-3,-2,-2,8,-10,9,6,9,3,-1,8,-4,6,2,-7,1,-5,-10,7,2,-9,-3,8,-4,-9,-3,-5,-4,2,-2,-1,1,-5,7,-3,9,10,6,5,-7,8,-5,-7,-3,-5,10,-7,3,3,4,-7,-7,-7,4,-4,-8,3,5,-2,-8,5,-2,8,4,5,7,-3,10,-7,1,7,6,-5,-9,3,-6,7,1,-5,-9,5,2,-8,7,7,9,-1,6,-7,-3,-4,9,8,9,6,-2,3,2,-8,-9,9,1,-4,-6,-3,1,9,-1,9,10,7,10,-10,3,1,3,9,-10,2,-4,-4,-2,-5,1,2,-3,5,-1,6,-3,8,-7,-9,-2,10,5,10,-8,-10,-3,10,5,9,-2,-2,2,-10,-6,3,-1,-3,10,6,2,-6,-2,1,4,3,-5,-3,-6,-5,4,-10,2,3,-1,-1,-5,-8,-5,-4,8,-7,4,-9,2,3,-3,-1,8,-8,-1,2,6,-4,-6,10,-8,9,6,2,-4,-2,-8,4,4,-7,-1,-4,-6,7,-7,-9,3,-6,-6,5,-3,-8,9,-9,4,-2,4,3,4,-5,7,5,10,9,10,-7,-2,-4,-7,-7,-8,9,5,-3,3,2,-1,-2,-10,8,-6,5,-2,-8,-3,-1,4,-4,-3,9,-6,-8,2,8,10,4,-3,-3,-9,3,7,-4,5,1,-8,5,-3,-10,2,7,-6,-7,1,3,10,3,-9,10,6,3,2,-7,-1,-2,-7,-5,3,1,2,5,9,1,6,5,3,-5,7,1,-8,-3,5,9,1,-1,3,5,5,-3,7,4,-5,-4,2,-2,-2,7,-2,5,-6,6,-4,3,-9,2,-2,8,7,2,1,2,-9,-9,7,6,-2,-3,5,6,2,-4,8,4,5,-7,-9,8,-9,-3,-2,-10,-3,-1,-8,-4,8,-7,-1,-2,-8,-3,-9,9,9,-4,10,7,6,-4,4,-9,8,-9,-8,5,1,6,-8,-7,8,-10,-5,2,3,-10,-3,-1,4,10,-2,-1,-3,-10,4,8,1,10,2,-9,-9,-6,-7,-5,-9,-4,-10,-4,4,3,-3,7,8,-10,-1,-7,-8,-5,10,-6,5,-1,-5,-9,9,6,-3,-6,2,3,-4,6,-3,-7,-8,-5,-2,-9,9,7,-10,-2,8,5,-5,-5,-9,1,9,9,10,4,8,9,1,-9,-7,-7,-10,-4,3,6,-10,5,6,1,-8,5,8,5,-10,-2,7,3,-4,-4,8,-8,-6,2,-9,-7,-9,4,8,7,-6,-6,-10,10,-10,10,4,-8,5,4,4,2,6,1,7,-4,8,-6,3,-6,-10,-10,-6,-7,-2,-4,2,10,-2,-4,10,2,9,8,-1,4,-1,-8,-5,-10,3,3,-2,5,-3,-4,6,1,-3,-7,5,8,6,-5,-8,-7,-10,8,1,-5,2,-7,5,-6,-9,3,-4,10,-6,10,1,-6,-8,-1,10,5,-7,-2,10,-9,1,-5,-2,5,-1,1,-2,4,-3,-9,3,9,-6,-2,-9,9,4,4,-8,-5,4,4,-5,8,-3,5,2,-6,2,-7,9,-10,-10,9,3,-9,-10,-7,-1,-4,-3,-10,2,-3,4,-7,6,5,4,-5,8,6,-9,6,9,4,-1,-6,2,7,-1,-8,4,4,9,-4,3,8,4,-4,4,-6,-4,-7,-4,-2,-1,-4,8,-2,9,-6,8,6,8,7,-8,8,-5,-10,-1,4,5,-6,9,-9,-2,3,-9,-1,1,-10,9,10,-2,3,-5,5,8,-2,-7,-5,8,-8,9,5,-9,8,2,4,-10,-7,-3,-4,4,-7,-7,-10,2,-1,1,-10,10,8,8,3,-8,-1,-3,-3,-1,7,-5,-4,-7,8,10,8,-8,9,10,-3,4,-1,-1,5,-5,1,-9,4,9,-6,4,10,-2,-7,2,-1,6,-5,-4,-10,-3,8,-5,10,6,6,9,1,2,4,-10,2,4,-4,8,-9,4,-2,10,6,7,-8,-5,-8,9,-2,-6,4,2,10,1,-10,7,-5,-4,-4,2,-9,-3,5,-8,8,1,-6,1,2,5,6,-2,10,-3,-8,8,-3,6,-2,4,10,3,8,-2,-5,-10,1,-3,1,7,2,-9,-8,-2,-1,2,4,5,-1,-2,-4,-7,-8,7,-8,-1,2,7,6,10,-10,9,10,-5,3,-7,-2,1,7,-1,2,5,-1,4,4,5,10,7,7,1,1,-6,-2,-5,7,-4,-8,-3,-3,-6,-2,-2,-2,2,-3,9,3,-7,4,-6,7,-10,-10,4,3,-4,-1,-9,7,6,6,-2,-3,-6,2,-8,1,-6,4,-8,-1,1,-9,9,-4,6,10,-9,-8,10,6,-2,7,-9,1,-7,10,-6,-10,6,10,2,-1,-3,-5,-10,-10,-9,4,9,7,-8,3,9,1,-5,-7,-10,-9,7,7,-6,-4,5,5,1,-9,-1,3,6,-5,-4,2,-1,1,7,-9,-7,10,-1,8,-8,-1,9,-9,9,-10,6,-8,-2,-9,7,4,1,7,-10,3,4,-7,9,10,1,10,-1,-6,-9,4,3,1,-3,-5,7,-10,-2,-2,2,9,-1,3,-9,-4,4,-6,7,2,-8,-2,-6,6,9,1,1,7,10,5,-8,8,9,2,1,-8,2,-6,4,8,-9,7,10,-3,5,-10,6,-9,-1,-3,-5,-5,-10,-5,4,-8,-4,-4,-10,-3,-4,-1,10,-7,9,7,-10,-2,5,7,-3,-2,-1,-9,1,7,6,6,-8,-9,3,-2,8,3,3,3,-6,-3,9,-7,6,8,4,8,-8,-10,4,-4,-7,-8,-7,-8,-5,-10,-3,-9,-5,-10,10,2,6,-9,-5,5,-9,6,-3,1,-3,4,-9,6,-7,-2,6,-7,5,3,8,-6,10,-5,6,10,-6,-7,5,-7,-8,3,3,6,-7,-2,6,2,-1,8,-2,7,1,10,-5,-10,8,-9,-3,-10,6,5,-1,-8,5,-8,-2,-4,-8,1,-5,-8,-2,3,2,4,-7,-9,-8,-1,-3,-10,5,-2,-10,8,-1,6,5,-9,-7,4,1,-4,-10,-2,5,2,5,5,-4,-1,-1,-8,-10,-3,9,-1,-3,-1,-10,-8,4,5,1,-5,6,9,4,-4,-4,9,6,-6,-5,-2,10,9,9,3,7,6,-5,9,-6,-2,-3,6,3,10,6,4,-1,10,-9,3,-1,7,6,3,-2,2,8,-5,-9,10,7,1,-8,-2,-4,-3,4,8,8,1,8,5,3,-10,7,8,-3,3,-10,8,-8,8,1,-3,9,8,9,-7,5,3,-7,-3,-9,-4,1,-4,3,2,-8,-4,9,6,7,-10,-9,4,5,-6,6,-7,2,-8,3,-10,5,8,9,-3,5,1,-10,10,2,4,-8,7,-10,6,4,-4,1,2,6,-8,-1,-7,-2,8,6,4,-1,-3,-3,-6,-4,-6,2,7,-5,1,4,9,-8,1,-7,6,-5,10,-8,7,-7,-9,10,1,2,3,1,-1,-9,2,7,-5,-9,-10,-1,8,-9,1,4,-7,3,2,4,-6,8,-8,-6,-7,7,-1,-6,10,-6,7,2,-6,-7,-2,6,3,-4,8,3,-6,-7,-1,-5,-8,-4,1,-10,3,-9,-6,1,-6,-10,8,4,-6,-2,-1,9,-10,-6,-9,9,-2,6,-1,9,5,-6,5,-8,8,-7,9,-2,-9,9,5,-1,-6,8,6,-7,-7,6,2,2,-6,-2,-6,-1,3,4,-7,6,4,3,1,10,4,9,-10,7,-1,10,-5,4,-10,-7,-5,-2,-7,6,-6,6,-4,5,8,-9,-5,6,-9,-8,-1,10,8,-3,-7,-2,9,3,3,-5,-2,-9,5,-6,8,-5,-1,-4,-5,5,-10,-4,-5,10,5,-8,-4,-3,-4,1,-3,2,-9,4,-5,-7,3,4,8,-7,-1,-9,2,4,-3,10,1,-9,-10,6,1,10,7,-4,-10,-10,-4,8,3,3,-6,1,9,-10,2,-4,-1,6,10,3,-1,-3,-1,2,-2,9,2,-5,-9,-7,1,5,8,8,-3,10,-3,8,3,-8,-7,-2,7,7,2,-9,7,-3,-5,-3,-3,2,-5,9,-10,-2,6,-3,1,8,-6,-6,-1,8,-1,6,-5,1,-9,-5,-9,-4,-10,9,9,-5,-6,-7,-10,-5,-7,7,1,9,10,9,-2,-6,3,4,-3,-4,9,-6,-8,2,-3,-5,-8,-6,-10,-6,1,-5,-7,4,-1,7,-2,1,-3,3,-3,-10,-5,-7,-3,-7,7,7,-2,-2,-1,-5,9,3,8,-7,4,-1,-6,-4,-1,3,3,-10,3,10,-10,-5,10,10,-3,8,-6,6,7,-1,1,6,4,-8,7,-10,-2,7,-4,1,-6,7,-8,-4,-5,3,10,7,-5,-2,-5,-1,-9,1,7,-1,1,-5,-2,-5,-7,-2,-8,-3,-6,-7,-9,-9,9,2,-2,-1,2,3,6,-1,-6,9,2,7,7,10,-6,-4,1,-3,10,7,9,-6,-9,7,1,-9,10,-2,2,4,-1,3,6,-4,-9,8,2,-2,-2,6,8,8,-1,-6,-4,-1,1,-8,9,3,4,5,-5,7,-9,-3,-8,5,-3,2,-5,4,-6,-3,6,-4,-5,-6,-7,8,-8,3,3,-7,2,6,4,-3,2,-7,10,-9,-10,7,-10,5,7], dtype = "int32")#candidate|17937|(1800,)|const|int32
call_17936 = relay.TupleGetItem(func_967_call(relay.reshape(const_17937.astype('int32'), [15, 15, 8])), 0)
call_17938 = relay.TupleGetItem(func_970_call(relay.reshape(const_17937.astype('int32'), [15, 15, 8])), 0)
output = relay.Tuple([call_17878,call_17923,const_17924,call_17936,const_17937,])
output2 = relay.Tuple([call_17879,call_17925,const_17924,call_17938,const_17937,])
func_17939 = relay.Function([], output)
mod['func_17939'] = func_17939
mod = relay.transform.InferType()(mod)
output = func_17939()
func_17940 = relay.Function([], output)
mutated_mod['func_17940'] = func_17940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16403_call = mod.get_global_var('func_16403')
func_16404_call = mutated_mod.get_global_var('func_16404')
call_18021 = func_16403_call()
call_18022 = func_16403_call()
func_10931_call = mod.get_global_var('func_10931')
func_10933_call = mutated_mod.get_global_var('func_10933')
const_18035 = relay.const([[-8.849357,-6.235254,1.181307,8.353202,4.513062,-3.445028,5.153955,-2.242444,5.941015,4.709161,1.826186,6.297024,-3.991733,-4.406957,2.478928,-4.729616,-2.806774,-3.071101,2.370833,-6.337211,8.468120,0.553780,8.584426,7.097905,0.439791,5.829051,-2.578159,-5.191186,9.633198,4.151756,-0.451985,-1.530083,-3.405089,-2.640854,-7.271008,-2.153393,6.390675,-2.225208,-9.746563,3.765871,-7.291303,-7.430743,6.361753,6.146457,2.990797,1.475397,-9.126219,-3.711889,6.782664,-8.621254,3.137334,1.952890,-3.160332,-9.675621,0.211057,8.069569,-7.395869,-0.603218,-4.700446,-2.446463],[-3.704155,0.729598,4.005424,1.935374,-1.053414,-9.458817,-7.810839,-1.102114,2.695413,7.966826,0.146497,-3.767006,-8.819025,0.585274,-8.577720,-5.450714,-7.155222,0.828428,7.290591,-4.481590,-5.701430,-8.181141,-8.359447,-8.667037,9.369656,-3.690655,-4.387926,-0.236014,1.511895,7.794206,7.630511,-7.946032,-1.047930,9.995559,-0.016503,9.625983,-8.374758,8.084529,1.002043,-5.831522,-9.947686,5.457597,7.824705,7.522890,9.594216,-6.775517,5.117558,-0.935270,-8.465531,8.718060,7.442513,3.082761,-2.973544,-3.243313,-4.415717,-5.298550,1.704966,8.859414,7.595880,9.089248],[-8.456414,0.377656,-7.492443,1.111121,7.212625,5.367890,0.278105,-2.899620,-7.050258,7.734524,9.588423,4.321612,2.333783,8.682537,2.617675,-7.657620,-3.924095,3.822007,4.228662,9.088444,-3.530468,-4.129041,-1.339881,8.850336,1.183795,6.262997,0.399667,-1.977485,-4.864058,7.108821,-6.934880,7.660432,-9.887292,-1.751470,5.144769,-7.341436,-3.017735,0.846206,-9.336278,3.416102,-3.010942,-1.084539,7.646116,-3.065248,1.546214,-4.248411,4.265135,-3.803136,-9.158489,-5.926294,0.589892,9.788311,4.103581,-9.862501,-1.858786,1.308571,-0.004621,-6.159299,-6.391412,2.047055],[-9.388617,-5.152154,8.020486,6.259657,3.416204,7.343974,6.234351,-9.443889,-8.984687,-1.317723,2.270488,4.245111,5.305795,9.339436,-1.358066,2.608375,-5.916070,1.716219,9.951373,-6.640905,-4.951480,2.356621,-5.173088,-4.920588,-4.586409,4.727123,-6.712490,9.023797,-8.448576,-6.953692,-5.803480,-2.357825,1.727903,-9.322039,-0.944129,2.368525,0.760298,-7.023744,-4.586556,-2.207700,4.032575,-1.139252,-8.239879,-9.830304,2.510725,2.758415,-6.754507,-4.368109,5.004507,-6.439851,6.834808,-4.272105,-1.871744,7.298485,8.004425,3.995268,5.496704,4.683789,-5.240930,2.479358],[-9.758674,0.042276,-9.748848,-7.892271,-0.725276,9.600219,-0.630502,-1.329512,8.717736,4.749944,2.102836,2.484744,4.297726,-9.286956,-7.504105,0.576621,9.018901,-4.486101,-6.696868,4.176277,4.072129,1.402507,2.665812,8.938632,3.566798,1.778650,5.880911,8.195870,9.998368,-7.875383,1.655736,-5.767163,-5.372373,-9.672705,1.289081,-2.569606,0.921825,-1.256729,9.865318,3.370586,2.599700,-5.687467,7.085350,6.013416,4.349245,3.477675,0.672403,2.195770,-4.133141,-4.306234,-7.759002,-7.357438,-4.517566,-0.996653,-0.159047,-5.690427,-6.559150,0.651930,6.738212,3.139225],[-5.624644,6.992377,-1.389314,-0.817635,5.942234,3.062895,5.306905,8.895144,-6.264294,5.649294,1.766423,-2.603130,-8.367306,5.328100,-9.079045,0.479573,3.251432,-7.927279,3.011416,-2.667683,-4.067003,-0.972348,-3.750264,2.479996,6.429359,7.604567,5.047223,2.968761,6.074817,9.436886,1.892209,3.589541,3.794156,-9.380591,-6.952778,2.888582,-9.929250,-3.401932,6.642943,-1.790680,-8.886409,9.898003,7.660246,-8.961595,-5.678506,1.885094,-6.152181,-9.202426,-3.970353,-1.265572,-2.707716,1.355319,-0.464879,0.312012,-2.100500,-0.595610,7.127289,-0.431392,-7.288619,-3.356075],[-1.651903,-7.626685,-6.269539,-2.287482,-4.929654,2.935600,6.704224,5.754180,-6.475784,4.361239,-9.288419,7.978738,-9.291307,2.264841,-0.180058,7.557327,8.025713,0.464905,-5.859265,-1.022212,9.696532,2.127145,1.977942,-6.074208,4.320393,-0.984156,3.037037,-5.139484,9.841452,0.182765,2.049667,-3.870632,-6.224696,-2.368631,6.015700,1.568237,-8.771075,3.604408,-0.779053,3.054204,-6.854061,7.110521,1.109776,3.630662,7.861852,9.087557,9.753730,4.791187,3.288126,-6.652122,7.515257,5.120400,8.735642,0.980926,-2.092393,7.856281,-6.436640,6.357324,-5.768816,-6.740083],[6.044330,-7.551177,9.918227,-8.802969,8.729193,6.165656,0.780699,-8.455809,-8.586394,-4.376907,-8.733985,6.594559,-6.511801,5.923376,0.637235,1.397552,1.696151,1.716245,8.487182,2.879836,-7.370331,4.686670,-3.127638,-8.252342,1.911924,2.527772,8.780740,-2.982513,0.594255,-9.720485,2.123860,9.288434,-9.271509,0.881377,0.923548,-4.737146,-6.938722,9.753177,-9.999998,6.638532,-5.772572,1.677811,2.670764,9.202869,2.175060,1.057224,1.016000,9.491522,4.980987,-6.871709,-7.101481,-1.246060,-9.302901,0.076851,-8.745183,7.073543,8.869924,-4.956047,-8.969223,-6.433558]], dtype = "float32")#candidate|18035|(8, 60)|const|float32
call_18034 = relay.TupleGetItem(func_10931_call(relay.reshape(const_18035.astype('float32'), [4, 8, 15])), 0)
call_18036 = relay.TupleGetItem(func_10933_call(relay.reshape(const_18035.astype('float32'), [4, 8, 15])), 0)
func_14209_call = mod.get_global_var('func_14209')
func_14211_call = mutated_mod.get_global_var('func_14211')
call_18045 = relay.TupleGetItem(func_14209_call(), 1)
call_18046 = relay.TupleGetItem(func_14211_call(), 1)
var_18047 = relay.var("var_18047", dtype = "float32", shape = (8, 60))#candidate|18047|(8, 60)|var|float32
bop_18048 = relay.greater_equal(const_18035.astype('bool'), relay.reshape(var_18047.astype('bool'), relay.shape_of(const_18035))) # shape=(8, 60)
output = relay.Tuple([call_18021,call_18034,call_18045,bop_18048,])
output2 = relay.Tuple([call_18022,call_18036,call_18046,bop_18048,])
F = relay.Function([var_18047,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_18047,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
